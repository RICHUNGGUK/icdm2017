{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "usecase-wise_development"}, {"score": 0.004406994912939125, "phrase": "application_stage"}, {"score": 0.003479692058963528, "phrase": "event-b_methodology"}, {"score": 0.0033288399506044763, "phrase": "top_level_behaviour"}, {"score": 0.0032558762499901727, "phrase": "non-skip_way"}, {"score": 0.003161065111494053, "phrase": "event-b_refinement"}, {"score": 0.0028715299874549245, "phrase": "event-b_context"}, {"score": 0.0028085616610192456, "phrase": "event-b_formulation"}, {"score": 0.0026277995163948263, "phrase": "rodin_toolset"}, {"score": 0.0021363670305843403, "phrase": "retrenchment_proposal"}, {"score": 0.002105000283258511, "phrase": "rodin"}], "paper_keywords": ["Event-B", " UseCase-wise development", " Incremental development", " Refinement", " Retrenchment", " Tower pattern", " Rodin toolset"], "paper_abstract": "UseCase-wise Development, an 'Agile Method' which introduces functionality into an application stage by stage, with each stage being carried through (ideally) to implementation before the next is considered, is examined with a view to its being treated via an Event-B methodology. The need to modify top level behaviour in a non-skip way precludes its naive treatment via Event-B refinement, and paves the way for the use of retrenchment in an Event-B context. An Event-B formulation of retrenchment aligned to the practicalities of the Rodin toolset is described. The details of refinement/retrenchment interworking needed to handle UseCase-wise development are outlined, and three small case studies are discussed. The details of the integration of the retrenchment proposal into Rodin are outlined.", "paper_title": "Retrenchment for Event-B: UseCase-wise development and Rodin integration", "paper_id": "WOS:000285879000007"}