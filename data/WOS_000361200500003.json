{"auto_keywords": [{"score": 0.041252974032560806, "phrase": "undirected_graphs"}, {"score": 0.01176685916846758, "phrase": "negative_weights"}, {"score": 0.010412634831657075, "phrase": "minimum-weight_perfect_matchings"}, {"score": 0.004762471139127599, "phrase": "matchings"}, {"score": 0.004658836333889952, "phrase": "integral_edge_weights"}, {"score": 0.004517679100719768, "phrase": "negative_weight_cycles"}, {"score": 0.004429191773525288, "phrase": "general_framework"}, {"score": 0.004361563044698462, "phrase": "matrix_multiplication"}, {"score": 0.004266730267989634, "phrase": "baur-strassen's_theorem"}, {"score": 0.004238682850598745, "phrase": "strojohann's_determinant_algorithm"}, {"score": 0.0041739507812600055, "phrase": "new_and_simple_solutions"}, {"score": 0.003959395575481968, "phrase": "directed_graphs"}, {"score": 0.003916098498242888, "phrase": "nonnegative_weights"}, {"score": 0.0038647641000798135, "phrase": "time_bounds"}, {"score": 0.0038225009983108025, "phrase": "roditty"}, {"score": 0.003805777173731889, "phrase": "williams"}, {"score": 0.003492840830999027, "phrase": "negative_weight_cycle"}, {"score": 0.0034344668448015947, "phrase": "radius"}, {"score": 0.0033277936960179892, "phrase": "undirected_or_directed_graphs"}, {"score": 0.0032410683344688625, "phrase": "running_time"}, {"score": 0.003007389443770562, "phrase": "open_problem"}, {"score": 0.0029875963736721973, "phrase": "sankowski"}, {"score": 0.002903311792572216, "phrase": "bipartite_graphs"}, {"score": 0.002846354504378298, "phrase": "full_generality"}, {"score": 0.002729744174693491, "phrase": "larger_spectra"}, {"score": 0.002717750004930131, "phrase": "related_problems"}, {"score": 0.002693919110230191, "phrase": "illustrative_example"}, {"score": 0.002439763505726507, "phrase": "time_algorithm"}, {"score": 0.002423702584513688, "phrase": "yuster"}, {"score": 0.0023866159504646466, "phrase": "flexible_framework"}, {"score": 0.0023243613435987125, "phrase": "novel_combinatorial_interpretation"}, {"score": 0.0023090525096074264, "phrase": "dual_solution"}, {"score": 0.0022938442716616283, "phrase": "minimum-weight_perfect_matching_problem"}, {"score": 0.00225377578293339, "phrase": "matching_problem"}, {"score": 0.0021949786727361318, "phrase": "new_light"}, {"score": 0.00214715200749205, "phrase": "unweighted_matchings"}, {"score": 0.0021330078238529443, "phrase": "almost_no_results"}, {"score": 0.0021049977753042253, "phrase": "weighted_case"}], "paper_keywords": ["Theory", " Algorithms", " Maximum weight matchings", " diameter and radius", " shortest cycle", " matrix multiplication"], "paper_abstract": "Consider a directed or an undirected graph with integral edge weights from the set [-W, W], that does not contain negative weight cycles. In this article, we introduce a general framework for solving problems on such graphs using matrix multiplication. The framework is based on the usage of Baur-Strassen's theorem and of Strojohann's determinant algorithm. It allows us to give new and simple solutions to the following problems: Finding Shortest Cycles. We give a simple (O) over tilde (Wn(omega)) time algorithm for finding shortest cycles in undirected and directed graphs. For directed graphs (and undirected graphs with nonnegative weights), this matches the time bounds obtained in 2011 by Roditty and Williams. On the other hand, no algorithm working in (O) over tilde (Wn(omega)) time was previously known for undirected graphs with negative weights. Furthermore, our algorithm for a given directed or undirected graph detects whether it contains a negative weight cycle within the same running time. Computing Diameter and Radius. We give a simple (O) over tilde (Wn(omega)) time algorithm for computing a diameter and radius of an undirected or directed graphs. To the best of our knowledge, no algorithm with this running time was known for undirected graphs with negative weights. Finding Minimum-Weight Perfect Matchings. We present an (O) over tilde (Wn(omega)) time algorithm for finding minimum-weight perfect matchings in undirected graphs. This resolves an open problem posted by Sankowski [2009] who presented such an algorithm but only in the case of bipartite graphs. These three problems that are solved in the full generality demonstrate the utility of this framework. Hence, we believe that it can find applications for solving larger spectra of related problems. As an illustrative example, we apply it to the problem of computing a set of vertices that lie on cycles of length at most t, for some given t. We give a simple (O) over tilde (Wn(omega)) time algorithm for this problem that improves over the (O) over tilde (Wn(omega)t) time algorithm given by Yuster in 2011. Besides giving this flexible framework, the other main contribution of this article is the development of a novel combinatorial interpretation of the dual solution for the minimum-weight perfect matching problem. Despite the long history of the matching problem, such a combinatorial interpretation was not known previously. This result sheds a new light on the problem, as there exist many structural theorems about unweighted matchings, but almost no results that could cope with the weighted case.", "paper_title": "Algorithmic Applications of Baur-Strassen's Theorem: Shortest Cycles, Diameter, and Matchings", "paper_id": "WOS:000361200500003"}