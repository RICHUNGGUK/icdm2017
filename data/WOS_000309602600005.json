{"auto_keywords": [{"score": 0.04967417970900504, "phrase": "homomorphic_hash_functions"}, {"score": 0.04327082016500873, "phrase": "tsunami"}, {"score": 0.03939315240608724, "phrase": "montgomery_multiplication"}, {"score": 0.00481495049065317, "phrase": "many-core_gpus"}, {"score": 0.004714023408114857, "phrase": "key_role"}, {"score": 0.0046544807197808095, "phrase": "distributed_systems"}, {"score": 0.00459568664065473, "phrase": "coding_techniques"}, {"score": 0.004537631845923196, "phrase": "erasure_coding"}, {"score": 0.004499334809770281, "phrase": "network_coding"}, {"score": 0.0044424917428102445, "phrase": "computational_complexity"}, {"score": 0.004349337717774093, "phrase": "main_challenge"}, {"score": 0.004186534737631288, "phrase": "massively_parallel_solution"}, {"score": 0.004046923261950549, "phrase": "widely_available_many-core_graphic_processing_units"}, {"score": 0.0038461532860146535, "phrase": "highest_ever_hashing_throughput"}, {"score": 0.0036553070575015344, "phrase": "modular_exponentiations"}, {"score": 0.003548368289666932, "phrase": "clean_implementation"}, {"score": 0.003259702394241964, "phrase": "gpu_processing_cores"}, {"score": 0.0030586736004285216, "phrase": "assembly_codes"}, {"score": 0.0030071857666598193, "phrase": "native_compiler"}, {"score": 0.0028944757265206332, "phrase": "memory_alignment"}, {"score": 0.002870006736445581, "phrase": "constant_memory"}, {"score": 0.0027741761880779535, "phrase": "memory_access"}, {"score": 0.0026701760128830573, "phrase": "significant_improvement"}, {"score": 0.0026475981474045414, "phrase": "existing_results"}, {"score": 0.0024948159927756634, "phrase": "nvidia"}, {"score": 0.0024736973328071026, "phrase": "santa_clara"}, {"score": 0.0024534375921332957, "phrase": "ca"}, {"score": 0.002360796860462937, "phrase": "existing_solution"}, {"score": 0.002301413995691192, "phrase": "cpu."}, {"score": 0.0022434880661725493, "phrase": "hashing_throughput"}, {"score": 0.002168531704054597, "phrase": "gpu_cores"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["CUDA", " GPU", " homomorphic hash function"], "paper_abstract": "Homomorphic hash functions play a key role in securing distributed systems that use coding techniques such as erasure coding and network coding. The computational complexity of homomorphic hash functions remains a main challenge. In this paper, we present a massively parallel solution, named Tsunami, by exploiting the widely available many-core graphic processing units (GPUs). Tsunami includes the following optimization techniques to achieve the highest ever hashing throughput: (1) using Montgomery multiplication and precomputation to speed up modular exponentiations; (2) using a clean implementation of Montgomery multiplication in order to decrease the demand of registers and shared memory and increase the utilization ratio of GPU processing cores; (3) using our own assembly code to implement the 32-bit integer multiplication, which outperforms the assembly codes generated by the native compiler by 20%; and (4) exploiting memory alignment and constant memory on GPUs to improve the efficiency of memory access. Integrating the above techniques, our Tsunami achieves a significant improvement over existing results. Specifically, the hashing throughput achieved by Tsunami on a GTX295 GPU (NVIDIA, Santa Clara, CA, US) is about 33 times that of the existing solution on a quad-core CPU. We also show that the hashing throughput grows almost linearly with the number of GPU cores. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Tsunami: massively parallel homomorphic hashing on many-core GPUs", "paper_id": "WOS:000309602600005"}