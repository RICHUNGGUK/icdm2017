{"auto_keywords": [{"score": 0.038769847507469174, "phrase": "complex_bytecodes"}, {"score": 0.00481495049065317, "phrase": "accelerating_java_interpretation_in_low-cost_embedded_processors._hardware_interpretation"}, {"score": 0.004327981760540394, "phrase": "java_virtual_machine"}, {"score": 0.004048860957751714, "phrase": "low-end_embedded_systems"}, {"score": 0.00378767277402891, "phrase": "hardware_interpretation"}, {"score": 0.002861961643289598, "phrase": "low-cost_hardware_approach"}, {"score": 0.002641621667026613, "phrase": "eight_complex_bytecodes"}, {"score": 0.002250415129116109, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "xilinx_fpga"}], "paper_keywords": ["Java virtual machine (JVM)", " interpreters", " embedded systems", " object manipulation", " method invocation"], "paper_abstract": "Hardware interpretation is an attractive choice for implementing the Java virtual machine (JVM) in low-end embedded systems. However, the hardware interpretation of complex bytecodes is so expensive that most low-end embedded systems rely on slow software interpreters in processing complex bytecodes. This paper proposes a low-cost hardware approach for accelerating the interpretation of eight complex bytecodes: four object manipulation and four method invocation bytecodes. The proposed approach occupies 204 LUTs in a Xilinx FPGA and reduces by up to 61.5% the number of instructions executed in running the benchmarks considered in this paper.", "paper_title": "ACCELERATING JAVA INTERPRETATION IN LOW-COST EMBEDDED PROCESSORS", "paper_id": "WOS:000283501400006"}