{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "deployed_embedded_systems"}, {"score": 0.004768378525561471, "phrase": "side-channel_analysis"}, {"score": 0.004653900688892822, "phrase": "hardest_aspects"}, {"score": 0.004608879242346434, "phrase": "embedded_software_development"}, {"score": 0.00443308765153716, "phrase": "faulty_behavior"}, {"score": 0.004284755353695709, "phrase": "deployment_stage"}, {"score": 0.004243289764306128, "phrase": "non-intrusive_observation"}, {"score": 0.004181839414007266, "phrase": "system's_behavior"}, {"score": 0.0037030390595465673, "phrase": "novel_approach"}, {"score": 0.0036671822784770463, "phrase": "non-intrusive_program_tracing"}, {"score": 0.0035100601949451028, "phrase": "debugging_embedded_systems"}, {"score": 0.0034423989472667756, "phrase": "production_stage"}, {"score": 0.003392507399258166, "phrase": "standard_debugging_tools"}, {"score": 0.003092842645798083, "phrase": "side-channel_attacks"}, {"score": 0.0029747028229638625, "phrase": "cryptographic_techniques"}, {"score": 0.0028333356794133053, "phrase": "power_consumption_observations"}, {"score": 0.002672511078070529, "phrase": "digital_signal_processing_techniques"}, {"score": 0.002608218347502229, "phrase": "spectral_analysis"}, {"score": 0.0025578967205807843, "phrase": "pattern_recognition_techniques"}, {"score": 0.0024963543716522087, "phrase": "source_code"}, {"score": 0.002436289099444074, "phrase": "observed_power_trace"}, {"score": 0.0023776656246300063, "phrase": "important_highlights"}, {"score": 0.002242647404307089, "phrase": "standard_pc"}, {"score": 0.0021569129153653777, "phrase": "recording_input"}, {"score": 0.002125612498781805, "phrase": "sound_card"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Theory", " Algorithms", " Experimentation", " Embedded systems", " debugging", " tracing", " side-channel analysis", " simple power analysis"], "paper_abstract": "One of the hardest aspects of embedded software development is that of debugging, especially when faulty behavior is observed at the production or deployment stage. Non-intrusive observation of the system's behavior is often insufficient to infer the cause of the problem and identify and fix the bug. In this work, we present a novel approach for non-intrusive program tracing aimed at assisting developers in the task of debugging embedded systems at deployment or production stage, where standard debugging tools are usually no longer available. The technique is rooted in cryptography, in particular the area of side-channel attacks. Our proposed technique expands the scope of these cryptographic techniques so that we recover the sequence of operations from power consumption observations (power traces). To this end, we use digital signal processing techniques (in particular, spectral analysis) combined with pattern recognition techniques to determine blocks of source code being executed given the observed power trace. One of the important highlights of our contribution is the fact that the system works on a standard PC, capturing the power traces through the recording input of the sound card. Experimental results are presented and confirm that the approach is viable.", "paper_title": "Non-Intrusive Program Tracing and Debugging of Deployed Embedded Systems Through Side-Channel Analysis", "paper_id": "WOS:000321865100009"}