{"auto_keywords": [{"score": 0.047500611403999145, "phrase": "tcp"}, {"score": 0.01030106442513038, "phrase": "learning-tcp"}, {"score": 0.008601482388526914, "phrase": "ad_hoc_wireless_networks"}, {"score": 0.006238627420330082, "phrase": "packet_loss"}, {"score": 0.005586185396010394, "phrase": "congestion_window"}, {"score": 0.00481495049065317, "phrase": "efficient_update"}, {"score": 0.004783730450730986, "phrase": "tcp_congestion_window"}, {"score": 0.004424441580112395, "phrase": "learning_technique"}, {"score": 0.004118751115632515, "phrase": "reliable_transport"}, {"score": 0.004052263422466088, "phrase": "unnecessary_packet_losses"}, {"score": 0.003986844722309844, "phrase": "achievable_throughput"}, {"score": 0.0038216374069880038, "phrase": "deterministic_nature"}, {"score": 0.0035923719610602245, "phrase": "high_contentions"}, {"score": 0.003465957803362915, "phrase": "high_amount"}, {"score": 0.003376813851525222, "phrase": "high_power_consumption"}, {"score": 0.0033548872248104814, "phrase": "mobile_nodes"}, {"score": 0.0033222630615013763, "phrase": "lost_packets"}, {"score": 0.003247364431057555, "phrase": "tcp_and_mac_layers"}, {"score": 0.0030524448705134283, "phrase": "efficient_manner"}, {"score": 0.002804478352027886, "phrase": "key_advantage"}, {"score": 0.0027145478956494356, "phrase": "network_feedback"}, {"score": 0.002688133833564329, "phrase": "explicit_congestion"}, {"score": 0.0026104197983396367, "phrase": "changing_network_conditions"}, {"score": 0.0025349467677077803, "phrase": "inter-arrival_times"}, {"score": 0.0024456654901769278, "phrase": "linux"}, {"score": 0.0023594945794976493, "phrase": "wide_range"}, {"score": 0.0023441581629788347, "phrase": "network_conditions"}, {"score": 0.002268955084689301, "phrase": "tcp-newreno"}, {"score": 0.0022468671200629024, "phrase": "significant_improvement"}, {"score": 0.0021676977432828373, "phrase": "higher_fairness"}, {"score": 0.00214659338413584, "phrase": "competing_flows"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Learning automata", " TCP over ad hoc networks", " Experimental evaluation", " Reliable data transport"], "paper_abstract": "In this work, we attempt to improve the performance of TCP over ad hoc wireless networks (AWNs) by using a learning technique from the theory of learning automata. It is well-known that the use of TCP in its present form, for reliable transport over AWNs leads to unnecessary packet losses, thus limiting the achievable throughput. This is mainly due to the aggressive, reactive, and deterministic nature in updating its congestion window. As the AWNs are highly bandwidth constrained, the behavior of TCP leads to high contentions among the packets of the flow, thus causing a high amount of packet loss. This further leads to high power consumption at mobile nodes as the lost packets are recovered via several retransmissions at both TCP and MAC layers. Hence, our proposal, here after called as Learning-TCP, focuses on updating the congestion window in an efficient manner (conservative, proactive, and finer and flexible update in the congestion window) in order to reduce the contentions and congestion, thus improving the performance of TCP in AWNs. The key advantage of Learning-TCP is that, without relying on any network feedback such as explicit congestion and link-failure notifications, it adapts to the changing network conditions and appropriately updates the congestion window by observing the inter-arrival times of TCP acknowledgments. We implemented Learning-TCP in ns-2.28 and Linux kernel 2.6 as well, and evaluated its performance for a wide range of network conditions. In all the studies, we observed that Learning-TCP outperforms TCP-Newreno by showing significant improvement in the goodput and reduction in the packet loss while maintaining higher fairness to the competing flows. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Learning-TCP: A stochastic approach for efficient update in TCP congestion window in ad hoc wireless networks", "paper_id": "WOS:000290460100012"}