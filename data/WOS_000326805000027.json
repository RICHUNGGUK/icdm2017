{"auto_keywords": [{"score": 0.02314361015356139, "phrase": "icma"}, {"score": 0.00481495049065317, "phrase": "compactmatrix_phase"}, {"score": 0.004757227624616643, "phrase": "gang_scheduling"}, {"score": 0.004671932143798307, "phrase": "transference_condition"}, {"score": 0.004345706062641742, "phrase": "efficient_scheduling_approach"}, {"score": 0.004293584349522444, "phrase": "distributed_systems"}, {"score": 0.004216566615939546, "phrase": "compactmatrix"}, {"score": 0.004140924670517666, "phrase": "second_phase"}, {"score": 0.00399367108161192, "phrase": "main_role"}, {"score": 0.0038284549148537373, "phrase": "larger_gangs"}, {"score": 0.0036700484729006136, "phrase": "novel_method"}, {"score": 0.003539479990299223, "phrase": "scheduling_matrix"}, {"score": 0.0032722454818973853, "phrase": "proposed_ideas"}, {"score": 0.003174903873774882, "phrase": "basic_compactmatrix_algorithm"}, {"score": 0.002952900365829518, "phrase": "average_response_time"}, {"score": 0.002899861600151726, "phrase": "improved_compactmatrix_algorithm"}, {"score": 0.0027630232270330402, "phrase": "basic_compactmatrix"}, {"score": 0.002448446849997207, "phrase": "migration_overhead_values"}, {"score": 0.0022909325048608054, "phrase": "time-slices_lengths"}, {"score": 0.0021306081217770173, "phrase": "better_results"}, {"score": 0.0021049977753042253, "phrase": "smaller_migration_overheads"}], "paper_keywords": ["Distributed systems", " Migration", " Queuing policy", " Scheduling algorithm", " Simulation"], "paper_abstract": "Gang scheduling (GS) is an efficient scheduling approach for distributed systems. The CompactMatrix is the second phase in GS and plays a main role in accelerating the scheduling of the larger gangs. In this paper, a novel method is proposed to compact the scheduling matrix by using two new ideas. By using simulation, the impact of the proposed ideas was compared to the basic CompactMatrix algorithm, either individually or simultaneously. The results show that the average response time in the Improved CompactMatrix Algorithm (ICMA), compared with the basic CompactMatrix, is reduced about 2 to 20, 0 to 10, and -5 to 5 percent by selecting the migration overhead values equal to 5, 10, and 15 percent of the time-slices lengths, respectively. As can be seen, ICMA will show better results in smaller migration overheads.", "paper_title": "Improving CompactMatrix phase in gang scheduling by changing transference condition and utilizing exchange", "paper_id": "WOS:000326805000027"}