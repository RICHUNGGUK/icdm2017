{"auto_keywords": [{"score": 0.046577269805750394, "phrase": "connected_graph"}, {"score": 0.03580806098011899, "phrase": "tree_problem"}, {"score": 0.00481495049065317, "phrase": "strongly_chordal"}, {"score": 0.004330099613414957, "phrase": "spanning_tree"}, {"score": 0.004264923517966271, "phrase": "g._a_vertex_v"}, {"score": 0.0038938807148174975, "phrase": "degree-preserving_vertex"}, {"score": 0.0032702516771609957, "phrase": "spanning_tree_t"}, {"score": 0.0030311679447397725, "phrase": "degree-preserving_vertices"}, {"score": 0.0025069746344846397, "phrase": "strongly_chordal_graphs"}, {"score": 0.0023591417077156555, "phrase": "ackermann's_function"}, {"score": 0.002203200914130907, "phrase": "directed_path_graphs"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["algorithm", " degree-preserving spanning tree", " planar graph", " directed path graph", " strongly chordal graph"], "paper_abstract": "Suppose G is a connected graph and T a spanning tree of G. A vertex v is an element of V(G) is said to be a degree-preserving vertex if its degree in T is the same as its degree in G. The degree-preserving spanning tree problem is to find a spanning tree T of a connected graph G such that the number of degree-preserving vertices is maximized. The purpose of this article is to provide an O(m.alpha(m, n))-time algorithm for the degree-preserving spanning tree problem in strongly chordal graphs, where a is the inverse of Ackermann's function. Furthermore, we present an O(m + n)-time algorithm in directed path graphs. (C) 2009 Wiley Periodicals, Inc. NETWORKS, Vol. 56(3), 183-187 2010", "paper_title": "The Degree-Preserving Spanning Tree Problem in Strongly Chordal and Directed Path Graphs", "paper_id": "WOS:000282249100003"}