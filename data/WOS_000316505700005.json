{"auto_keywords": [{"score": 0.03900291508534277, "phrase": "controller_applications"}, {"score": 0.00481495049065317, "phrase": "software-defined_networks"}, {"score": 0.004251210982670317, "phrase": "data_center"}, {"score": 0.003927203683176278, "phrase": "software-defined_networking"}, {"score": 0.0037959868107895053, "phrase": "standard_interface"}, {"score": 0.003627800727103479, "phrase": "switch-forwarding_tables"}, {"score": 0.0033893426032054366, "phrase": "natural_platform"}, {"score": 0.003313380246267812, "phrase": "network_virtualization"}, {"score": 0.0031308163228919773, "phrase": "numerous_tenants"}, {"score": 0.0030606302942851027, "phrase": "different_topologies"}, {"score": 0.0029249294679606656, "phrase": "scalability_challenges"}, {"score": 0.0028271058251633815, "phrase": "flown_architecture"}, {"score": 0.0023579143175099324, "phrase": "database_technology"}, {"score": 0.002153316680437517, "phrase": "virtual_networks"}, {"score": 0.0021049977753042253, "phrase": "physical_switches"}], "paper_keywords": [""], "paper_abstract": "Network virtualization gives each \"tenant\" in a data center its own network topology and control over its traffic flow. Software-defined networking offers a standard interface between controller applications and switch-forwarding tables, and is thus a natural platform for network virtualization. Yet, supporting numerous tenants with different topologies and controller applications raises scalability challenges. The FlowN architecture gives each tenant the illusion of its own address space, topology, and controller, and leverages database technology to efficiently store and manipulate mappings between virtual networks and physical switches.", "paper_title": "Scalable Network Virtualization in Software-Defined Networks", "paper_id": "WOS:000316505700005"}