{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "multithreaded_code_generation"}, {"score": 0.004760765880314089, "phrase": "simulink_models"}, {"score": 0.004707188147442449, "phrase": "communication_frequency"}, {"score": 0.004575854901681043, "phrase": "growing_complexity"}, {"score": 0.004524348699657099, "phrase": "emerging_embedded_applications"}, {"score": 0.004324031677173549, "phrase": "implemented_multiprocessor_soc_architectures"}, {"score": 0.004062937864702115, "phrase": "communication_cost_reduction"}, {"score": 0.003971938976270902, "phrase": "partitioned_simulink_models"}, {"score": 0.0038610400240820307, "phrase": "code_optimization"}, {"score": 0.0037959868107895053, "phrase": "system_performance"}, {"score": 0.003627800727103479, "phrase": "message_aggregation"}, {"score": 0.0035869274480340727, "phrase": "communication_pipeline_methods"}, {"score": 0.0031308163228919773, "phrase": "static_analysis"}, {"score": 0.0030955250132409964, "phrase": "dynamic_emulation"}, {"score": 0.0030606302942851027, "phrase": "efficient_communication_buffer_allocation"}, {"score": 0.0029920129598858545, "phrase": "synchronization_cost"}, {"score": 0.0029415584202462444, "phrase": "processor_utilization"}, {"score": 0.0028919522313933525, "phrase": "existing_cyclic_dependency"}, {"score": 0.002843180211561427, "phrase": "mapped_model"}, {"score": 0.002552781867125423, "phrase": "strongly_connected_threads"}, {"score": 0.0024673738215365104, "phrase": "communication_reduction"}, {"score": 0.0024395426929046415, "phrase": "preprocessing_strategies"}, {"score": 0.0024120247307686084, "phrase": "available_delays"}, {"score": 0.0022919762167777427, "phrase": "communication_channels"}, {"score": 0.002202742267484358, "phrase": "experimental_results"}, {"score": 0.002129020447793464, "phrase": "proposed_optimizations"}], "paper_keywords": ["Design", " Performance", " Algorithm", " Simulink", " communication optimization", " co-design", " multiprocessor system-on-chip", " specification", " code generation"], "paper_abstract": "Communication frequency is increasing with the growing complexity of emerging embedded applications and the number of processors in the implemented multiprocessor SoC architectures. In this article, we consider the issue of communication cost reduction during multithreaded code generation from partitioned Simulink models to help designers in code optimization to improve system performance. We first propose a technique combining message aggregation and communication pipeline methods, which groups communications with the same destinations and sources and parallelizes communication and computation tasks. We also present a method to apply static analysis and dynamic emulation for efficient communication buffer allocation to further reduce synchronization cost and increase processor utilization. The existing cyclic dependency in the mapped model may hinder the effectiveness of the two techniques. We further propose a set of optimizations involving repartition with strongly connected threads to maximize the degree of communication reduction and preprocessing strategies with available delays in the model to reduce the number of communication channels that cannot be optimized. Experimental results demonstrate the advantages of the proposed optimizations with 11-143% throughput improvement.", "paper_title": "Communication Optimizations for Multithreaded Code Generation from Simulink Models", "paper_id": "WOS:000355679800021"}