{"auto_keywords": [{"score": 0.044665132823572554, "phrase": "total_size"}, {"score": 0.04422168788680076, "phrase": "accepted_items"}, {"score": 0.02987089440189968, "phrase": "classical_bin_packing"}, {"score": 0.00481495049065317, "phrase": "bin_packing_problems"}, {"score": 0.004407813106104401, "phrase": "dual_bin_packing_problem"}, {"score": 0.003580032420161922, "phrase": "off-line_and_on-line_variants"}, {"score": 0.0034519997658752598, "phrase": "off-line_variant"}, {"score": 0.0031270239691197515, "phrase": "later_bin"}, {"score": 0.003062594954962045, "phrase": "earlier_bin"}, {"score": 0.002983916676307492, "phrase": "approximation_ratios"}, {"score": 0.0029224275921964724, "phrase": "first-fit-increasing"}, {"score": 0.0028921584725218642, "phrase": "first-fit-decreasing"}, {"score": 0.002847339938387273, "phrase": "maximum_resource_variant"}, {"score": 0.002759769970554556, "phrase": "on-line_variant"}, {"score": 0.002702887319160532, "phrase": "maximum_resource_variants"}, {"score": 0.002674885993329912, "phrase": "classical_and_dual_bin_packing"}, {"score": 0.002633425544817301, "phrase": "dual_bin_packing"}, {"score": 0.002592606058287124, "phrase": "on-line_algorithm"}, {"score": 0.002461044825190643, "phrase": "competitive_ratio"}, {"score": 0.002372935208038141, "phrase": "general_versions"}, {"score": 0.002206045784326466, "phrase": "upper_bound"}, {"score": 0.0021493248730171132, "phrase": "item_sizes"}, {"score": 0.0021049977753042253, "phrase": "integer_k."}], "paper_keywords": ["bin packing", " dual bin packing", " approximation", " on-line"], "paper_abstract": "Usually, for bin packing problems, we try to minimize the number of bins used or in the case of the dual bin packing problem, maximize the number or total size of accepted items. This paper presents results for the opposite problems, where we would like to maximize the number of bins used or minimize the number or total size of accepted items. We consider off-line and on-line variants of the problems. For the off-line variant, we require that there be an ordering of the bins, so that no item in a later bin fits in an earlier bin. We find the approximation ratios of two natural approximation algorithms, First-Fit-Increasing and First-Fit-Decreasing for the maximum resource variant of classical bin packing. For the on-line variant, we define maximum resource variants of classical and dual bin packing. For dual bin packing, no on-line algorithm is competitive. For classical bin packing, we find the competitive ratio of various natural algorithms. We study the general versions of the problems as well as the parameterized versions where there is an upper bound of 1/k on the item sizes, for some integer k. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "The maximum resource bin packing problem", "paper_id": "WOS:000241117900009"}