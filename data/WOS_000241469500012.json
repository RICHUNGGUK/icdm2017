{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "dense_matrix_multiplication"}, {"score": 0.027094664999720974, "phrase": "good_performance"}, {"score": 0.004320055598195391, "phrase": "chip_architecture"}, {"score": 0.004081385289516914, "phrase": "dense_matrix_applications"}, {"score": 0.004039423410198574, "phrase": "shared_memory_architecture"}, {"score": 0.003997891221012094, "phrase": "multi-level_caches"}, {"score": 0.0037769520261285872, "phrase": "existing_methods"}, {"score": 0.0037188360359702182, "phrase": "new_generation"}, {"score": 0.003680587852807675, "phrase": "multi-core_architectures"}, {"score": 0.003513264130359459, "phrase": "on-chip_storage_resources"}, {"score": 0.0032176163279340206, "phrase": "storage_area"}, {"score": 0.0031193028729331667, "phrase": "in-depth_case_study"}, {"score": 0.0030396665931462, "phrase": "well_known_optimization_methods"}, {"score": 0.0028715299874549245, "phrase": "new_challenges"}, {"score": 0.0027837615811247963, "phrase": "emerging_class"}, {"score": 0.002755104031926742, "phrase": "multi-core_chip_architectures"}, {"score": 0.0026297428083782875, "phrase": "memory_hierarchy"}, {"score": 0.0025100713447593773, "phrase": "main_contributions"}, {"score": 0.0023467391904246834, "phrase": "key_optimizations"}, {"score": 0.0022283519468680475, "phrase": "practical_order"}, {"score": 0.0021049977753042253, "phrase": "matrix_multiplication"}], "paper_keywords": [""], "paper_abstract": "This paper presents a study of performance optimization of dense matrix multiplication on IBM Cyclops-64(C64) chip architecture. Although much has been published on how to optimize dense matrix applications on shared memory architecture with multi-level caches, little has been reported on the applicability of the existing methods to the new generation of multi-core architectures like C64. For such architectures a more economical use of on-chip storage resources appears to discourage the use of caches, while providing tremendous on-chip memory bandwidth per storage area. This paper presents an in-depth case study of a collection of well known optimization methods and tries to re-engineer them to address the new challenges and opportunities provided by this emerging class of multi-core chip architectures. Our study demonstrates that efficiently exploiting the memory hierarchy is the key to achieving good performance. The main contributions of this paper include: (a) identifying a set of key optimizations for C64-like architectures, and (b) exploring a practical order of the optimizations, which yields good performance for applications like matrix multiplication.", "paper_title": "Optimization of dense matrix multiplication on IBM Cyclops-64: Challenges and experiences", "paper_id": "WOS:000241469500012"}