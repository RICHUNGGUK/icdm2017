{"auto_keywords": [{"score": 0.0332627156734092, "phrase": "proposed_protocol"}, {"score": 0.00481495049065317, "phrase": "effective_data_management"}, {"score": 0.004759507166427077, "phrase": "important_issue"}, {"score": 0.004704699244406775, "phrase": "large-scale_distributed_environment"}, {"score": 0.004632628931039557, "phrase": "dbms"}, {"score": 0.004526503177267299, "phrase": "peer_system"}, {"score": 0.004190019394361629, "phrase": "replication_protocol"}, {"score": 0.004094018760244776, "phrase": "communication_cost"}, {"score": 0.004031238480458909, "phrase": "data_availability"}, {"score": 0.0039085400187964196, "phrase": "representative_replication_protocols"}, {"score": 0.003878451139312637, "phrase": "low_read"}, {"score": 0.0038189638340666936, "phrase": "best_case"}, {"score": 0.0035761182400032487, "phrase": "level_increases"}, {"score": 0.003548579306515579, "phrase": "root_replica"}, {"score": 0.0034672240102960644, "phrase": "grid_protocol"}, {"score": 0.0034405207528624983, "phrase": "fixed_operation_cost"}, {"score": 0.0034008496666026585, "phrase": "failure_condition"}, {"score": 0.0032972747743006603, "phrase": "new_replication_protocol"}, {"score": 0.0032718761046588835, "phrase": "dynamic_hybrid"}, {"score": 0.0031845067058084583, "phrase": "existing_protocols"}, {"score": 0.003075583447856341, "phrase": "tree_structure"}, {"score": 0.0030283730114326014, "phrase": "overall_topology"}, {"score": 0.0029361086955646625, "phrase": "tree_height"}, {"score": 0.0028687545730861665, "phrase": "grid_depth"}, {"score": 0.0028356575042385156, "phrase": "high_read_availability"}, {"score": 0.002624533657819515, "phrase": "high_write_availability"}, {"score": 0.002382541887825168, "phrase": "analytical_model"}, {"score": 0.0023368833197343953, "phrase": "average_number"}, {"score": 0.0022394839933089074, "phrase": "computer_simulation"}, {"score": 0.00218807532188779, "phrase": "communication_overhead"}, {"score": 0.0021213575697367148, "phrase": "operation_cost"}, {"score": 0.0021049977753042253, "phrase": "earlier_protocols"}], "paper_keywords": ["Availability", " Distributed system", " Replication protocol", " Grid", " Tree", " quorum"], "paper_abstract": "Effective data management is an important issue in a large-scale distributed environment such as distributed DBMS, Peer-to-Peer System (P2P), data grid, and World Wide Web (WWW). This can be achieved by using a replication protocol, which efficiently decrease the communication cost and increase the data availability. The Tree Quorum protocol is one of the representative replication protocols allowing low read cost in the best case but it has some drawbacks such as that the number of replicas grows rapidly as the level increases and root replica is a bottleneck. The Grid protocol requires fixed operation cost regardless of failure condition. In this paper we propose a new replication protocol called Dynamic Hybrid protocol, which efficiently improves the existing protocols. The proposed protocol effectively combines the grid and tree structure so that the overall topology can be flexibly adjusted using three configuration parameters; tree height, number of descendants and grid depth. For high read availability, the height of tree and number of descendants are decreased and depth of grid is increased. For high write availability, the height of tree and the depth of grid are decreased, while the number of descendant is increased. We present an analytical model of read/write availability and the average number of nodes accessed for each operation. We also employ computer simulation to estimate the throughput and communication overhead. The proposed protocol always allows much smaller communication and operation cost than earlier protocols.", "paper_title": "Dynamic hybrid replication effectively combining tree and grid topology", "paper_id": "WOS:000299509500009"}