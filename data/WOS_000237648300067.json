{"auto_keywords": [{"score": 0.0446471702453288, "phrase": "tree_alignment"}, {"score": 0.015526971340499317, "phrase": "lifted_tree_alignment"}, {"score": 0.007616486970554295, "phrase": "bottleneck_tree_alignment_problem"}, {"score": 0.007222171564289318, "phrase": "largest_edge"}, {"score": 0.005389418800286125, "phrase": "weight_function"}, {"score": 0.00481495049065317, "phrase": "set_w"}, {"score": 0.004772367030970874, "phrase": "k_sequences"}, {"score": 0.00436661740263741, "phrase": "unique_sequence"}, {"score": 0.004121490798711703, "phrase": "internal_node"}, {"score": 0.003821503621554738, "phrase": "hamming_distance"}, {"score": 0.0037876759651507817, "phrase": "levenshtein"}, {"score": 0.0031006232333900055, "phrase": "internal_node_v"}, {"score": 0.0028875481626754696, "phrase": "bottleneck_lifted_tree_alignment_problem"}, {"score": 0.0025723511700030694, "phrase": "np"}, {"score": 0.0025042115651986332, "phrase": "tree_structure"}, {"score": 0.002470987929071079, "phrase": "binary_tree"}, {"score": 0.0023845255359681143, "phrase": "special_cases"}, {"score": 0.00233202607446404, "phrase": "exact_algorithm"}, {"score": 0.0022705467477443417, "phrase": "tree_alignment_problem"}, {"score": 0.002250415129116109, "phrase": "polynomial_time"}, {"score": 0.0021049977753042253, "phrase": "optimal_bottleneck_tree_alignment"}], "paper_keywords": ["edit distance", " bottleneck tree alignment", " metric", " ultrametric", " NP-complete"], "paper_abstract": "Given a set W of k sequences (strings) and a tree structure T with k leaves, each of which is labeled with a unique sequence in W, a tree alignment is to label a sequence to each internal node of T. The weight of an edge of the tree alignment is the distance, such as Hamming distance, Levenshtein (edit) distance or reversal distance, between the two sequences labeled to the two ends of the edge. The bottleneck tree alignment problem is to find a tree alignment such that the weight of the largest edge is minimized. A lifted tree alignment is a tree alignment, where each internal node v is labeled one of the sequences that was labeled to the children of v. The bottleneck lifted tree alignment problem is to find a lifted tree alignment such that the weight of the largest edge is minimized. In this paper, we show that the bottleneck tree alignment problem is NP-complete even when the tree structure is the binary tree and the weight function is metric. For special cases, we present an exact algorithm to solve the bottleneck lifted tree alignment problem in polynomial time. If the weight function is ultrametric, we show that any lifted tree alignment is an optimal bottleneck tree alignment.", "paper_title": "The bottleneck tree alignment problems", "paper_id": "WOS:000237648300067"}