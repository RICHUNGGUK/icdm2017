{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "harmonic_expansions"}, {"score": 0.004392565073466714, "phrase": "spherical_harmonic_transforms"}, {"score": 0.004007083686875716, "phrase": "butterfly_scheme"}, {"score": 0.0037834649508375544, "phrase": "convenient_alternative"}, {"score": 0.0034911335714333507, "phrase": "second_paper"}, {"score": 0.003296212583539166, "phrase": "\"fast_algorithms"}, {"score": 0.003221316290858497, "phrase": "spherical_harmonic_expansions"}, {"score": 0.00307657476125683, "phrase": "requisite_precomputations"}, {"score": 0.00283870598459543, "phrase": "\"depth-first_traversal"}, {"score": 0.002711109302199029, "phrase": "program's_control-flow_graph"}, {"score": 0.002530359917257626, "phrase": "perhaps_more_natural_\"breadth-first_traversal"}, {"score": 0.0022815262950738814, "phrase": "multilevel_procedure"}], "paper_keywords": ["Butterfly", " Algorithm", " Spherical harmonic", " Transform", " Interpolative decomposition"], "paper_abstract": "We accelerate the computation of spherical harmonic transforms, using what is known as the butterfly scheme. This provides a convenient alternative to the approach taken in the second paper from this series on \"Fast algorithms for spherical harmonic expansions\". The requisite precomputations become manageable when organized as a \"depth-first traversal\" of the program's control-flow graph, rather than as the perhaps more natural \"breadth-first traversal\" that processes one-by-one each level of the multilevel procedure. We illustrate the results via several numerical examples. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Fast algorithms for spherical harmonic expansions, III", "paper_id": "WOS:000280251100001"}