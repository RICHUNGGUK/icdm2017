{"auto_keywords": [{"score": 0.005850881647973727, "phrase": "cart"}, {"score": 0.00481495049065317, "phrase": "evolutionary_learning_of_globally_optimal_classification"}, {"score": 0.0046364836476864325, "phrase": "classification_and_regression_tree_methods"}, {"score": 0.0043194180167921165, "phrase": "forward_stepwise_search"}, {"score": 0.004120130206000757, "phrase": "efficient_heuristic"}, {"score": 0.004023947242621452, "phrase": "recursive_tree_methods"}, {"score": 0.0037486121194392564, "phrase": "next_step"}, {"score": 0.003678414118674967, "phrase": "alternative_way"}, {"score": 0.0035925056609681194, "phrase": "parameter_space"}, {"score": 0.0034920505103165403, "phrase": "global_optimization_methods"}, {"score": 0.003459191419478298, "phrase": "evolutionary_algorithms"}, {"score": 0.0033624514778823763, "phrase": "evtree_package"}, {"score": 0.0032838979278935814, "phrase": "evolutionary_algorithm"}, {"score": 0.0032223742018434856, "phrase": "optimal_classification"}, {"score": 0.0031920445513574907, "phrase": "regression_trees"}, {"score": 0.0031619994642255846, "phrase": "r._computationally_intensive_tasks"}, {"score": 0.0030446120560494155, "phrase": "partykit_package"}, {"score": 0.0029594318330247614, "phrase": "resulting_trees"}, {"score": 0.002890266318361907, "phrase": "unified_infrastructure"}, {"score": 0.002705059527911504, "phrase": "open-source_cart_implementation_rpart"}, {"score": 0.00247249708860822, "phrase": "benchmark_study"}, {"score": 0.002449208093757498, "phrase": "predictive_accuracy"}, {"score": 0.0021049977753042253, "phrase": "textbook_customer_classication_task"}], "paper_keywords": ["machine learning", " classification trees", " regression trees", " evolutionary algorithms", " R"], "paper_abstract": "Commonly used classification and regression tree methods like the CART algorithm are recursive partitioning methods that build the model in a forward stepwise search. Although this approach is known to be an efficient heuristic, the results of recursive tree methods are only locally optimal, as splits are chosen to maximize homogeneity at the next step only. An alternative way to search over the parameter space of trees is to use global optimization methods like evolutionary algorithms. This paper describes the evtree package, which implements an evolutionary algorithm for learning globally optimal classification and regression trees in R. Computationally intensive tasks are fully computed in C++ while the partykit package is leveraged for representing the resulting trees in R, providing unified infrastructure for summaries, visualizations, and predictions. evtree is compared to the open-source CART implementation rpart, conditional inference trees (ctree), and the open-source C4.5 implementation J48. A benchmark study of predictive accuracy and complexity is carried out in which evtree achieved at least similar and most of the time better results compared to rpart, ctree, and J48. Furthermore, the usefulness of evtree in practice is illustrated in a textbook customer classication task.", "paper_title": "ectree: Evolutionary Learning of Globally Optimal Classification and Regression Trees in R", "paper_id": "WOS:000349840200001"}