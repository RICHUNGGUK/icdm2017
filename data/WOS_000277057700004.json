{"auto_keywords": [{"score": 0.026233112301110768, "phrase": "wcrt."}, {"score": 0.00481495049065317, "phrase": "scratchpad_allocation"}, {"score": 0.004771672073078768, "phrase": "concurrent_embedded_software"}, {"score": 0.004728780808284175, "phrase": "software-controlled_scratchpad_memory"}, {"score": 0.004623224002010226, "phrase": "embedded_systems"}, {"score": 0.0045404698551856125, "phrase": "better_timing_predictability"}, {"score": 0.004439097815805505, "phrase": "previous_scratchpad_allocation_algorithms"}, {"score": 0.0043793594257092805, "phrase": "single-process_applications"}, {"score": 0.004320421465896323, "phrase": "embedded_applications"}, {"score": 0.004223941453664225, "phrase": "real-time_constraints"}, {"score": 0.00414830454375092, "phrase": "scratchpad_memory_space"}, {"score": 0.004037370832877034, "phrase": "interacting_processes"}, {"score": 0.0037898820206470085, "phrase": "novel_dynamic_scratchpad_allocation_technique"}, {"score": 0.0037219886365287085, "phrase": "process_interferences"}, {"score": 0.0035414658322295515, "phrase": "memory_system"}, {"score": 0.003415681637907093, "phrase": "message_sequence_chart"}, {"score": 0.003294350220187021, "phrase": "interprocess_interactions"}, {"score": 0.0031917146566068245, "phrase": "worst-case_response_time"}, {"score": 0.0030783143919343972, "phrase": "runtime_reloading"}, {"score": 0.003036832649117453, "phrase": "scratchpad_memory_content"}, {"score": 0.0030094882299407256, "phrase": "appropriate_execution_points"}, {"score": 0.002942196368747418, "phrase": "iterative_allocation_algorithm"}, {"score": 0.002799406880011512, "phrase": "msc"}, {"score": 0.0027491902732542013, "phrase": "existing_allocation"}, {"score": 0.002712131567923321, "phrase": "potential_interference_patterns"}, {"score": 0.0026157259734105, "phrase": "interference_information"}, {"score": 0.002568812627436125, "phrase": "scratchpad_reloading_points"}, {"score": 0.002252880693912436, "phrase": "message_sequence_graph_models"}, {"score": 0.002162951519368368, "phrase": "unmanned_aerial_vehicle"}, {"score": 0.0021434719197118935, "phrase": "uav"}, {"score": 0.0021049977753042253, "phrase": "in-orbit_monitoring_instrument"}], "paper_keywords": ["Design", " Performance", " Scratchpad memory", " compiler controlled memories", " multicore architectures", " worst-case response time", " message sequence chart", " UML sequence diagram"], "paper_abstract": "Software-controlled scratchpad memory is increasingly employed in embedded systems as it offers better timing predictability compared to caches. Previous scratchpad allocation algorithms typically consider single-process applications. But embedded applications are mostly multitasking with real-time constraints, where the scratchpad memory space has to be shared among interacting processes that may preempt each other. In this work, we develop a novel dynamic scratchpad allocation technique that takes these process interferences into account to improve the performance and predictability of the memory system. We model the application as a Message Sequence Chart (MSC) to best capture the interprocess interactions. Our goal is to optimize the Worst-Case Response Time (WCRT) of the application through runtime reloading of the scratchpad memory content at appropriate execution points. We propose an iterative allocation algorithm that consists of two critical steps: (1) analyze the MSC along with the existing allocation to determine potential interference patterns, and (2) exploit this interference information to tune the scratchpad reloading points and content so as to best improve the WCRT. We present various alternative scratchpad allocation heuristics and evaluate their effectiveness in reducing the WCRT. The scheme is also extended to work on Message Sequence Graph models. We evaluate our memory allocation scheme on two real-world embedded applications controlling an Unmanned Aerial Vehicle (UAV) and an in-orbit monitoring instrument, respectively.", "paper_title": "Scratchpad Allocation for Concurrent Embedded Software", "paper_id": "WOS:000277057700004"}