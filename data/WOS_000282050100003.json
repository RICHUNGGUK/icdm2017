{"auto_keywords": [{"score": 0.04279913252338238, "phrase": "sas"}, {"score": 0.00481495049065317, "phrase": "k-vertex-connected_subgraph_augmentation_problem"}, {"score": 0.004690305164360866, "phrase": "k-connected_graph"}, {"score": 0.0040334640350288, "phrase": "va-v"}, {"score": 0.003903269701018361, "phrase": "minimum_cardinality"}, {"score": 0.0032908057622663732, "phrase": "undirect_graphs"}, {"score": 0.0028293966058473476, "phrase": "different_assumptions"}, {"score": 0.0021049977753042253, "phrase": "input_graph"}], "paper_keywords": ["Network survivability", " Graph connectivity"], "paper_abstract": "Given a k-connected graph G=(V,E) and V (')aS,V, k-Vertex-Connected Subgraph Augmentation Problem (k-VCSAP) is to find SaS,Va-V (') with minimum cardinality such that the subgraph induced by V (')a(a)S is k-connected. In this paper, we study the hardness of k-VCSAP in undirect graphs. We first prove k-VCSAP is APX-hard. Then, we improve the lower bound in two ways by relying on different assumptions. That is, we prove no algorithm for k-VCSAP has a PR better than O(log (log n)) unless P=NP and O(log n) unless NPaS dagger DTIME(n (O(log log n))), where n is the size of an input graph.", "paper_title": "Hardness of k-Vertex-Connected Subgraph Augmentation Problem", "paper_id": "WOS:000282050100003"}