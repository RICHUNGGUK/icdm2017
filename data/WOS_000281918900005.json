{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "weak_order_dependence"}, {"score": 0.004684157900507474, "phrase": "dependence_forms"}, {"score": 0.004352411290383643, "phrase": "program_slicing"}, {"score": 0.004273196830970426, "phrase": "recent_work"}, {"score": 0.004195418010131832, "phrase": "control_dependence_analysis"}, {"score": 0.004044064541716598, "phrase": "new_definitions"}, {"score": 0.0037921662574137535, "phrase": "reactive_programs"}, {"score": 0.003126481516783286, "phrase": "classical_control_dependence"}, {"score": 0.0030414140732789186, "phrase": "control_flow_graph"}, {"score": 0.00290473242917264, "phrase": "end_nodes"}, {"score": 0.002265833357217618, "phrase": "traditional_control_dependence"}, {"score": 0.0021049977753042253, "phrase": "end_node"}], "paper_keywords": ["Control dependence", " Programming languages"], "paper_abstract": "Control dependence forms the basis for many program analyses, such as program slicing. Recent work on control dependence analysis has led to new definitions of dependence that can allow for reactive programs with their necessarily non-terminating computations. One important such definition is the definition of Weak Order Dependence, which was introduced to generalize classical control dependence for a Control Flow Graph (CFG) without end nodes. In this paper we show that for a CFG where all nodes are reachable from each other, weak order dependence can be expressed in terms of traditional control dependence where one node has been converted into an end node. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "An alternative characterization of weak order dependence", "paper_id": "WOS:000281918900005"}