{"auto_keywords": [{"score": 0.038114170567752154, "phrase": "cudadb"}, {"score": 0.009723482561200574, "phrase": "sqlite"}, {"score": 0.008574595143873454, "phrase": "cudadb_performance"}, {"score": 0.008265607180485569, "phrase": "data_records"}, {"score": 0.00481495049065317, "phrase": "database_performance"}, {"score": 0.00468991337957911, "phrase": "market_leaders"}, {"score": 0.004640808212832262, "phrase": "cloud_computing"}, {"score": 0.004520272777451894, "phrase": "parallel-processing_capability"}, {"score": 0.0042212686864468805, "phrase": "enterprise_applications"}, {"score": 0.004177049813981273, "phrase": "database_systems"}, {"score": 0.004089991141220082, "phrase": "highest_priority"}, {"score": 0.00392125815948488, "phrase": "design_complexity_reduction"}, {"score": 0.0036810726176482278, "phrase": "in-memory_database"}, {"score": 0.0034555479218891638, "phrase": "database_system"}, {"score": 0.003419452794011427, "phrase": "gpu"}, {"score": 0.0033834843575331662, "phrase": "cuda."}, {"score": 0.0031428202743657057, "phrase": "gpu-enabled_cuda_database_operations"}, {"score": 0.002997203022420553, "phrase": "performance_evaluation_purposes"}, {"score": 0.0028886123801902517, "phrase": "comparison_target"}, {"score": 0.002828331235643921, "phrase": "experimental_results"}, {"score": 0.0024789887640568093, "phrase": "query_result"}, {"score": 0.0023891283748647416, "phrase": "static_proportion"}, {"score": 0.0023516185395256505, "phrase": "total_number"}, {"score": 0.0022904032758108775, "phrase": "target_table"}, {"score": 0.0021049977753042253, "phrase": "difference_ratio"}], "paper_keywords": ["GPU", " CUDA", " SQLite", " In-Memory Database"], "paper_abstract": "The market leaders of Cloud Computing try to leverage the parallel-processing capability of GPUs to provide more economic services than traditions. As the cornerstone of enterprise applications, database systems are of the highest priority to be improved for the performance and design complexity reduction. It is the purpose of this paper to design an in-memory database, called CUDADB, to scale up the performance of the database system on GPU with CUDA. The details of implementation and algorithms are presented, and the experiences of GPU-enabled CUDA database operations are also shared in this paper. For performance evaluation purposes, SQLite is used as the comparison target. From the experimental results, CUDADB performs better than SQLite for most test cases. And, surprisingly, the CUDADB performance is independent from the number of data records in a query result set. The CUDADB performance is a static proportion of the total number of data records in the target table. Finally, this paper comes out a concept of turning point that represents the difference ratio between CUDADB and SQLite.", "paper_title": "Scaling database performance on GPUs", "paper_id": "WOS:000307276000006"}