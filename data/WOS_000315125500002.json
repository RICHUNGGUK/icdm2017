{"auto_keywords": [{"score": 0.0430491042382442, "phrase": "strict_separation"}, {"score": 0.00481495049065317, "phrase": "hierarchical_interchangeable_software_interface"}, {"score": 0.00468991337957911, "phrase": "general-purpose_framework"}, {"score": 0.0046164478775379105, "phrase": "scientific_simulation_programs"}, {"score": 0.004068510313497539, "phrase": "automatic_unit_conversion"}, {"score": 0.004025885154716127, "phrase": "distributed_execution"}, {"score": 0.003941964605885606, "phrase": "different_cores"}, {"score": 0.0037793152987497286, "phrase": "orderly_recovery"}, {"score": 0.003529149828147388, "phrase": "acceptable_overhead"}, {"score": 0.003209782650616367, "phrase": "wall-clock_time"}, {"score": 0.0031262984171100856, "phrase": "unified_structure"}, {"score": 0.003028969851366049, "phrase": "multiple_modules"}, {"score": 0.0029501745152877706, "phrase": "different_ways"}, {"score": 0.0028734230458881903, "phrase": "different_modules"}, {"score": 0.0027258422018680453, "phrase": "initial_concerns"}, {"score": 0.002654911400878851, "phrase": "relatively_few_problems"}, {"score": 0.0024529757621396717, "phrase": "earlier_results"}, {"score": 0.0023146962503449186, "phrase": "existing_simulation_codes"}, {"score": 0.0022783523466965187, "phrase": "new_physical_solver_codes"}, {"score": 0.002242577809454225, "phrase": "rich_\"ecosystem"}, {"score": 0.002207363758847308, "phrase": "interchangeable_modules"}, {"score": 0.00218419478369074, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Computer applications", " Physical sciences and engineering", " Astronomy", " Computing methodologies: simulation modeling, and visualization", " Distributed computing"], "paper_abstract": "We introduce a general-purpose framework for interconnecting scientific simulation programs using a homogeneous, unified interface. Our framework is intrinsically parallel, and conveniently separates all component numerical modules in memory. This strict separation allows automatic unit conversion, distributed execution of modules on different cores within a cluster or grid, and orderly recovery from errors. The framework can be efficiently implemented and incurs an acceptable overhead. In practice, we measure the time spent in the framework to be less than 1% of the wall-clock time. Due to the unified structure of the interface, incorporating multiple modules addressing the same physics in different ways is relatively straightforward. Different modules may be advanced serially or in parallel. Despite initial concerns, we have encountered relatively few problems with this strict separation between modules, and the results of our simulations are consistent with earlier results using more traditional monolithic approaches. This framework provides a platform to combine existing simulation codes or develop new physical solver codes within a rich \"ecosystem\" of interchangeable modules. Crown Copyright (c) 2012 Published by Elsevier B.V. All rights reserved.", "paper_title": "Multi-physics simulations using a hierarchical interchangeable software interface", "paper_id": "WOS:000315125500002"}