{"auto_keywords": [{"score": 0.026153563917107454, "phrase": "prime_infix-free_decomposition"}, {"score": 0.015719716506582538, "phrase": "infix-free_regular_languages"}, {"score": 0.004513957235071457, "phrase": "structural_properties"}, {"score": 0.004398872331144531, "phrase": "finite-state_automata"}, {"score": 0.004286708921931472, "phrase": "infix-free_languages"}, {"score": 0.0040708542958968605, "phrase": "polynomial-time_algorithm"}, {"score": 0.003767203575060969, "phrase": "regular_language"}, {"score": 0.0036710872046569532, "phrase": "state-pair_graphs"}, {"score": 0.00306334226516593, "phrase": "nondeterministic_finite-state_automaton"}, {"score": 0.0026916956768363158, "phrase": "regular_expression"}, {"score": 0.0021883400011393564, "phrase": "infix-free_primality_test"}, {"score": 0.0021049977753042253, "phrase": "infix-free_regular_language"}], "paper_keywords": [""], "paper_abstract": "We study infix-free regular languages. We observe the structural properties of finite-state automata for infix-free languages and develop a polynomial-time algorithm to determine infix-freeness of a regular language using state-pair graphs. We consider two cases: 1) A language is specified by a nondeterministic finite-state automaton and 2) a language is specified by a regular expression. Furthermore, we examine the prime infix-free decomposition of infix-free regular languages and design an algorithm for the infix-free primality test of an infix-free regular language. Moreover, we show that we can compute the prime infix-free decomposition in polynomial time. We also demonstrate that the prime infix-free decomposition is not unique.", "paper_title": "Infix-free regular expressions and languages", "paper_id": "WOS:000237139600009"}