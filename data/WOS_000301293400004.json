{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "qvt-relations_check-only_transformations"}, {"score": 0.0047292449487169345, "phrase": "qvt"}, {"score": 0.004521566043596533, "phrase": "model_transformation"}, {"score": 0.004361985094778339, "phrase": "omg"}, {"score": 0.004133055661437163, "phrase": "model-driven_architecture"}, {"score": 0.00374399358035391, "phrase": "qvt-relations"}, {"score": 0.0035473867669654174, "phrase": "highest_level"}, {"score": 0.0033011569787033297, "phrase": "bidirectional_transformations"}, {"score": 0.0031559919178954644, "phrase": "relational_style"}, {"score": 0.002910545717767559, "phrase": "semiformal_description"}, {"score": 0.0025660347613972573, "phrase": "existing_tool_implementations"}, {"score": 0.0021049977753042253, "phrase": "qvt-relations_specifications"}], "paper_keywords": ["Model-Driven Engineering", " Model Transformation", " QVT-Relations", " Category Theory"], "paper_abstract": "QVT is the standard for model transformation defined by the OMG in the context of the Model-Driven Architecture. It is made of several transformation languages. Among them, QVT-Relations is the one with the highest level of abstraction, as it permits developing bidirectional transformations in a declarative, relational style. Unfortunately, the standard only provides a semiformal description of its semantics, which hinders analysis and has given rise to ambiguities in existing tool implementations. In order to improve this situation, we propose a formal, algebraic semantics for QVT-Relations check-only transformations, defining a notion of satisfaction of QVT-Relations specifications by models.", "paper_title": "An Algebraic Semantics for QVT-Relations Check-only Transformations", "paper_id": "WOS:000301293400004"}