{"auto_keywords": [{"score": 0.031453809992272444, "phrase": "fti"}, {"score": 0.01563127245860201, "phrase": "ti"}, {"score": 0.009628984568123024, "phrase": "exact_ti_estimation"}, {"score": 0.008742392785839279, "phrase": "multiscale_structure"}, {"score": 0.00481495049065317, "phrase": "translation_invariant"}, {"score": 0.004758657162039561, "phrase": "cycle_spinning"}, {"score": 0.004716867446922295, "phrase": "effective_method"}, {"score": 0.004473689992665426, "phrase": "exact_ti_cycle"}, {"score": 0.00440838389264585, "phrase": "possible_circulant_shifts"}, {"score": 0.004132130591553404, "phrase": "existing_literature"}, {"score": 0.0040958202827027805, "phrase": "efficient_algorithms"}, {"score": 0.004059827743016726, "phrase": "ti_version"}, {"score": 0.004024150214304478, "phrase": "denoising_approaches"}, {"score": 0.003988784961917646, "phrase": "haar_wavelet"}, {"score": 0.00396538027397194, "phrase": "multiscale_methods"}, {"score": 0.00389598376050187, "phrase": "likelihood_decomposition"}, {"score": 0.003850392835818635, "phrase": "penalized_likelihood_estimator"}, {"score": 0.003828320234578056, "phrase": "bayesian"}, {"score": 0.003749747076821239, "phrase": "image_processing"}, {"score": 0.0036949697378821458, "phrase": "denoising_images"}, {"score": 0.00357724980284755, "phrase": "systematic_investigation"}, {"score": 0.0035457980422890782, "phrase": "ti_calculation"}, {"score": 0.0035146218353274672, "phrase": "general_multiscale_approaches"}, {"score": 0.0034227226677308337, "phrase": "fast_ti"}, {"score": 0.0032080372297065727, "phrase": "last_k_scales"}, {"score": 0.0031241294019967226, "phrase": "general_d-dimensional_images"}, {"score": 0.0030067770042809354, "phrase": "poisson_noise"}, {"score": 0.002809817778886807, "phrase": "almost_the_same_performance"}, {"score": 0.0027524673604095787, "phrase": "even_less_time"}, {"score": 0.002688352108538072, "phrase": "regularity_present"}, {"score": 0.0024900877185228647, "phrase": "smoothing_techniques"}, {"score": 0.002293274527249601, "phrase": "poisson"}, {"score": 0.0022802279882524748, "phrase": "gaussian"}, {"score": 0.0022726706036523465, "phrase": "noised_images"}, {"score": 0.0022394223018992496, "phrase": "real_data"}, {"score": 0.0022131734411174977, "phrase": "appealing_performance"}, {"score": 0.002193688457453366, "phrase": "proposed_algorithms"}, {"score": 0.002180793657565869, "phrase": "matlab_toolboxes"}, {"score": 0.0021049977753042253, "phrase": "general_multiscale_denoising_approaches"}], "paper_keywords": ["Image denoising", " multiscale analysis", " cycle spinning", " translation invariant", " Gibbs phenomenon", " Gaussian noise", " Poisson noise", " 2D image", " 3D image"], "paper_abstract": "Translation invariant (TI) cycle spinning is an effective method for removing artifacts from images. However, for a method using O(n) time, the exact TI cycle spinning by averaging all possible circulant shifts requires O(n(2)) time where n is the number of pixels, and therefore is not feasible in practice. Existing literature has investigated efficient algorithms to calculate TI version of some denoising approaches such as Haar wavelet. Multiscale methods, especially those based on likelihood decomposition, such as penalized likelihood estimator and Bayesian methods, have become popular in image processing because of their effectiveness in denoising images. As far as we know, there is no systematic investigation of the TI calculation corresponding to general multiscale approaches. In this paper, we propose a fast TI (FTI) algorithm and a more general k-TI (k-TI) algorithm allowing TI for the last k scales of the image, which are applicable to general d-dimensional images (d = 2, 3, ... ) with either Gaussian or Poisson noise. The proposed FTI leads to the exact TI estimation but only requires O(n log(2) n) time. The proposed k-TI can achieve almost the same performance as the exact TI estimation, but requires even less time. We achieve this by exploiting the regularity present in the multiscale structure, which is justified theoretically. The proposed FTI and k-TI are generic in that they are applicable on any smoothing techniques based on the multiscale structure. We demonstrate the FTI and k-TI algorithms on some recently proposed state-of-the-art methods for both Poisson and Gaussian noised images. Both simulations and real data application confirm the appealing performance of the proposed algorithms. MATLAB toolboxes are online accessible to reproduce the results and be implemented for general multiscale denoising approaches provided by the users.", "paper_title": "Fast Translation Invariant Multiscale Image Denoising", "paper_id": "WOS:000362008200004"}