{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "implementation-based_testing_techniques"}, {"score": 0.004574709094672837, "phrase": "large-scale_software_systems"}, {"score": 0.004394350285140955, "phrase": "low_testability_score"}, {"score": 0.004362326712297089, "phrase": "oo_software"}, {"score": 0.004236539316738291, "phrase": "oo_systems"}, {"score": 0.0035671997165370403, "phrase": "ibtt"}, {"score": 0.0035025108234594668, "phrase": "preferred_technique"}, {"score": 0.0030032915123993837, "phrase": "oo_classes"}, {"score": 0.0021049977753042253, "phrase": "test_coverage"}], "paper_keywords": ["object-oriented software testing", " implementation-based testing", " class abstraction"], "paper_abstract": "The object-oriented (OO) paradigm provides several benefits during analysis and design of large-scale software systems, but scores lower in terms of testability. The low testability score for OO software is due mainly to the composition of OO systems exhibiting the characteristics of abstraction, encapsulation, genericity, inheritance, polymorphism, concurrency and exception handling. To address the difficulty of testing the features of a class, a plethora of implementation-based testing techniques (IBTTs) have been developed. However, no one IBTT has emerged as the preferred technique to test the implementation of a class. In this paper we present a technique that automatically identify those IBTTs that are most suitable for testing a class based on the characteristics of that class. Our approach uses a taxonomy of OO classes that is used to succinctly abstract the characteristics of a class under test (CUT). We have implemented a tool that automates the process of mapping IBTTs to a class. In addition to identifying the IBTTs that would be best suited for testing a class, our tool provides feedback to the tester facilitating the identification of the characteristics of the class that are not suitably tested by any of the IBTTs in the list. We provide results of a study supporting the notion that using more than on IBTT during testing improves test coverage of a CUT.", "paper_title": "A tool to automatically map implementation-based testing techniques to classes", "paper_id": "WOS:000240606000004"}