{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "anytime_algorithms"}, {"score": 0.049418985040378595, "phrase": "constant_data_streams"}, {"score": 0.004338661611644755, "phrase": "data_mining"}, {"score": 0.003775803846431323, "phrase": "additional_time"}, {"score": 0.003449585750738867, "phrase": "available_processing_time"}, {"score": 0.003308649946463136, "phrase": "varying_data_streams"}, {"score": 0.0029193609786176632, "phrase": "constant_time_allowance"}, {"score": 0.002419393934835993, "phrase": "corresponding_budget_algorithm"}, {"score": 0.002134508934917511, "phrase": "existing_anytime_algorithms"}, {"score": 0.0021049977753042253, "phrase": "benchmark_data_sets"}], "paper_keywords": ["Anytime algorithms", " Stream data mining", " Classification confidence"], "paper_abstract": "Anytime algorithms have been proposed for many different applications, e.g., in data mining. Their strengths are the ability to first provide a result after a very short initialization and second to improve their result with additional time. Therefore, anytime algorithms have so far been used when the available processing time varies, e.g., on varying data streams. In this paper we propose to employ anytime algorithms on constant data streams, i.e., for tasks with constant time allowance. We introduce two approaches that harness the strengths of anytime algorithms on constant data streams and thereby improve the over all quality of the result with respect to the corresponding budget algorithm. We derive formulas for the expected performance gain and demonstrate the effectiveness of our novel approaches using existing anytime algorithms on benchmark data sets.", "paper_title": "Harnessing the strengths of anytime algorithms for constant data streams", "paper_id": "WOS:000268572900006"}