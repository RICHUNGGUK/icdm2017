{"auto_keywords": [{"score": 0.033350626090551436, "phrase": "rada"}, {"score": 0.007685951134673551, "phrase": "high-speed_data_transfer"}, {"score": 0.00481495049065317, "phrase": "buffer_adaptation"}, {"score": 0.004680283709974884, "phrase": "cloud_computing"}, {"score": 0.004614362802631256, "phrase": "data_synchronization"}, {"score": 0.0045817497454044565, "phrase": "large_chain_departmental_stores"}, {"score": 0.004549366134876482, "phrase": "bank_transaction_records"}, {"score": 0.004406436661912347, "phrase": "high-bandwidth_networks"}, {"score": 0.0041780882724537, "phrase": "network_bandwidth"}, {"score": 0.004090083576606688, "phrase": "fixed-size_application_level"}, {"score": 0.004018158280364063, "phrase": "receiver_side"}, {"score": 0.003975609222669783, "phrase": "major_cause"}, {"score": 0.0037428381813152532, "phrase": "transfer_performance"}, {"score": 0.0036769967497738165, "phrase": "varied_natures"}, {"score": 0.003650984439966844, "phrase": "network_conditions"}, {"score": 0.0033527773742790695, "phrase": "buffer_size"}, {"score": 0.0032704647689720326, "phrase": "perceived_execution_situation"}, {"score": 0.0030032443093632125, "phrase": "exponential_moving_average_aided_scheme"}, {"score": 0.0029608739165086257, "phrase": "data_arrival_rate"}, {"score": 0.0029399127512711493, "phrase": "consumption_rate"}, {"score": 0.0028072256092845417, "phrase": "linear_aggressive_increase_conservative_decrease_scheme"}, {"score": 0.002767613012044169, "phrase": "buffer_size_dynamically"}, {"score": 0.0027188802510720775, "phrase": "weighted_mean_function"}, {"score": 0.002623967178291655, "phrase": "available_memory"}, {"score": 0.00257775722777195, "phrase": "theoretical_analysis"}, {"score": 0.0025055037815033725, "phrase": "parameter_bounds"}, {"score": 0.002392375784707278, "phrase": "potential_alternatives"}, {"score": 0.002333586381274878, "phrase": "linux_platform"}, {"score": 0.0022441016229967025, "phrase": "experimental_results"}, {"score": 0.0022124176057373365, "phrase": "theoretical_results"}, {"score": 0.0021503823972534096, "phrase": "static_buffer_scheme"}, {"score": 0.0021049977753042253, "phrase": "memory_footprint"}], "paper_keywords": ["Cloud computing", " high-speed data transfer", " buffer adaptation", " rate detection"], "paper_abstract": "New applications based on cloud computing, such as data synchronization for large chain departmental stores and bank transaction records, require very high-speed data transport. Although a number of high-bandwidth networks have been built, existing transport protocols or their variants over such networks cannot fully exploit the network bandwidth. Our experiments show that the fixed-size application level buffer employed in the receiver side is a major cause of this deficiency. A buffer that is either too small or too large impairs the transfer performance. Due to the varied natures of network conditions and of real-time packet processing (i.e., consuming) speed at the receiver, it is important to ensure that the buffer size is dynamically adjusted according to the perceived execution situation during runtime. In this paper, we propose Rada, a dynamic receiving buffer adaptation scheme for high-speed data transfer. Rada employs an exponential moving average aided scheme to quantify the data arrival rate and consumption rate in the buffer. Based on these two rates, we develop a linear aggressive increase conservative decrease scheme to adjust the buffer size dynamically. Moreover, a weighted mean function is employed to make the adjustment adaptive to the available memory in the receiver. Theoretical analysis is provided to demonstrate the rationale and parameter bounds of Rada. The performance of Rada is also theoretically compared with potential alternatives. We implement Rada in a Linux platform and extensively evaluate its performance in a variety of scenarios. Experimental results conform to the theoretical results, and show that Rada outperforms the static buffer scheme in terms of throughput, memory footprint, and fairness.", "paper_title": "Receiving Buffer Adaptation for High-Speed Data Transfer", "paper_id": "WOS:000325171200013"}