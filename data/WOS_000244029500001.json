{"auto_keywords": [{"score": 0.04783466563954652, "phrase": "embedded_control_systems"}, {"score": 0.034076945538525735, "phrase": "timed_state_transition_diagrams"}, {"score": 0.00481495049065317, "phrase": "distributed_real-time_applications"}, {"score": 0.0047385702897315436, "phrase": "pearl."}, {"score": 0.004540734419151103, "phrase": "specification_pearl"}, {"score": 0.0042820680211904235, "phrase": "language_specification"}, {"score": 0.0041251561573501455, "phrase": "standard_multiprocessor_pearl."}, {"score": 0.003973971215091993, "phrase": "hierarchical_and_asymmetrical_multiprocessor_systems"}, {"score": 0.0038900709793274484, "phrase": "additional_parameters"}, {"score": 0.0038487848937121204, "phrase": "schedulability_analysis"}, {"score": 0.0038079353103469865, "phrase": "graphical_symbols"}, {"score": 0.003668333531296882, "phrase": "graphical_modeling"}, {"score": 0.0035908627899097407, "phrase": "semantical_background"}, {"score": 0.003314591878914152, "phrase": "pearl_programming_model"}, {"score": 0.003261934055562238, "phrase": "model_program_tasks"}, {"score": 0.0030758904011907533, "phrase": "co-designed_system"}, {"score": 0.002931569771634119, "phrase": "resulting_information"}, {"score": 0.002794001681064862, "phrase": "current_design"}, {"score": 0.0026914710445743693, "phrase": "temporally_feasible_model"}, {"score": 0.0026345758986796703, "phrase": "dynamic_re-configurations"}, {"score": 0.002484251289239302, "phrase": "uml"}, {"score": 0.002431699464104896, "phrase": "de_facto_standard"}, {"score": 0.002256435842862802, "phrase": "great_similarity"}, {"score": 0.0021049977753042253, "phrase": "uml's_extension_mechanisms"}], "paper_keywords": ["specification languages", " application modeling", " co-design", " co-simulation", " configuration management", " PEARL", " UML"], "paper_abstract": "The methodology of hardware/software co-design of embedded control systems with Specification PEARL is presented. Hardware and software are modeled with the language Specification PEARL, which has its origins in standard Multiprocessor PEARL. Its usefulness is enhanced for modeling hierarchical and asymmetrical multiprocessor systems, and by additional parameters for schedulability analysis. Graphical symbols are introduced for its constructs to enable graphical modeling while maintaining the semantical background. It is meant to be a superlayer for programs, based on the PEARL programming model. To model program tasks, Timed State Transition Diagrams have been defined. The model of a co-designed system is verified for feasibility with co-simulation. The resulting information should be used when considering changes in a current design with the goal of producing a temporally feasible model. To support dynamic re-configurations, configuration management is introduced into the models. Since UML is becoming a de facto standard also for designing embedded control systems, and since Timed State Transition Diagrams and State Chart Diagrams share great similarity, an interface of the methodology to UML 2 is defined, using UML's extension mechanisms.", "paper_title": "Modeling distributed real-time applications with specification PEARL", "paper_id": "WOS:000244029500001"}