{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "rewrite-based_satisfiability_procedures"}, {"score": 0.004665162327051461, "phrase": "decision_procedures"}, {"score": 0.0045404698551856125, "phrase": "data_structures"}, {"score": 0.004300951511110487, "phrase": "ground_literals"}, {"score": 0.00418595288276353, "phrase": "sound_and_complete_inference_system"}, {"score": 0.00414830454375092, "phrase": "first-order_logic"}, {"score": 0.0040373708328770306, "phrase": "t-satisfiability_problems"}, {"score": 0.003983016985197904, "phrase": "theorem-proving_strategy"}, {"score": 0.0038764861784138117, "phrase": "fair_search_plan"}, {"score": 0.0038242899532391914, "phrase": "t-satisfiability_procedure"}, {"score": 0.0037052054802048707, "phrase": "rewrite-based_first-order_engine"}, {"score": 0.0035898158129721003, "phrase": "integer_offsets"}, {"score": 0.003415681637907093, "phrase": "modularity_theorem"}, {"score": 0.00338493754743055, "phrase": "sufficient_conditions"}, {"score": 0.0028376361457661415, "phrase": "parametric_synthetic_benchmarks"}, {"score": 0.0027616550517346066, "phrase": "real-world_problems"}, {"score": 0.002699889709390707, "phrase": "huge_sets"}, {"score": 0.0026157259734105, "phrase": "rewrite-based_theorem_prover_e"}, {"score": 0.002433048706565187, "phrase": "general-purpose_prover"}, {"score": 0.0023571835517819124, "phrase": "built-in_theories"}, {"score": 0.0022631003204259224, "phrase": "theorem_prover"}, {"score": 0.0021925226977381244, "phrase": "rewriting_approach"}, {"score": 0.0021049977753042253, "phrase": "important_practical_implications"}], "paper_keywords": ["Performance", " Theory", " Verification", " Automated reasoning", " decision procedures", " satisfiability modulo a theory", " combination of theories", " inference", " superposition", " rewriting", " termination", " scalability"], "paper_abstract": "Program analysis and verification require decision procedures to reason on theories of data structures. Many problems can be reduced to the satisfiability of sets of ground literals in theory T. If a sound and complete inference system for first-order logic is guaranteed to terminate on T-satisfiability problems, any theorem-proving strategy with that system and a fair search plan is a T-satisfiability procedure. We prove termination of a rewrite-based first-order engine on the theories of records, integer offsets, integer offsets modulo and lists. We give a modularity theorem stating sufficient conditions for termination on a combination of theories, given termination on each. The above theories, as well as others, satisfy these conditions. We introduce several sets of benchmarks on these theories and their combinations, including both parametric synthetic benchmarks to test scalability, and real-world problems to test performances on huge sets of literals. We compare the rewrite-based theorem prover E with the validity checkers CVC and CVC Lite. Contrary to the folklore that a general-purpose prover cannot compete with reasoners with built-in theories, the experiments are overall favorable to the theorem prover, showing that not only the rewriting approach is elegant and conceptually simple, but has important practical implications.", "paper_title": "New Results on Rewrite-Based Satisfiability Procedures", "paper_id": "WOS:000263492300004"}