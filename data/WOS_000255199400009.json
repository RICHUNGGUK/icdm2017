{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "timed_systems"}, {"score": 0.004749106104067268, "phrase": "action_duration"}, {"score": 0.0044026610128451256, "phrase": "timed_extension"}, {"score": 0.004312622975366676, "phrase": "extended_finite_state_machines_model"}, {"score": 0.0030344301563232944, "phrase": "testing_theory"}, {"score": 0.002680114113899346, "phrase": "timed_test"}, {"score": 0.0023346234464901978, "phrase": "complete_test_suites"}, {"score": 0.002255431275670053, "phrase": "implementation_relations"}, {"score": 0.0021049977753042253, "phrase": "extended_and_improved_version"}], "paper_keywords": ["testing and debugging", " formal methods", " specification techniques", " specifying and verifying and reasoning about programs"], "paper_abstract": "In this paper, we introduce a timed extension of the extended finite state machines model. On one hand, we consider that (output) actions take time to be performed. This time may depend on several factors, such as the value of variables. On the other hand, our formalism allows us to specify time-outs. In addition to presenting our language, we develop a testing theory. First, we define 10 timed conformance relations and relate them. Second, we introduce a notion of timed test and define how to apply tests to implementations. Finally, we give an algorithm to derive sound and complete test suites with respect to the implementation relations presented in the paper. This paper represents an extended and improved version of [1].", "paper_title": "Extending EFSMs to specify and test timed systems with action duration and time-outs", "paper_id": "WOS:000255199400009"}