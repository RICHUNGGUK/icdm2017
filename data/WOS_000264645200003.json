{"auto_keywords": [{"score": 0.0486293934284276, "phrase": "server_pages"}, {"score": 0.023052746182161254, "phrase": "web_applications"}, {"score": 0.014190853759598507, "phrase": "mixed-strategy_approach"}, {"score": 0.010612387000973441, "phrase": "generic_representation"}, {"score": 0.00451043437607004, "phrase": "generic_web_page"}, {"score": 0.004323690117778359, "phrase": "web_application_user_interfaces"}, {"score": 0.004176640648520877, "phrase": "high_rate"}, {"score": 0.003957737297694751, "phrase": "uis"}, {"score": 0.0035263833746562788, "phrase": "php_server_pages"}, {"score": 0.0033802431627410223, "phrase": "generic_web_applications"}, {"score": 0.003202944392720772, "phrase": "run-time_performance"}, {"score": 0.0030938932434437178, "phrase": "wysiwyg_editors"}, {"score": 0.0028867712833776046, "phrase": "optimum_generic_representation"}, {"score": 0.002842655426951218, "phrase": "unnecessary_compromise"}, {"score": 0.002820850247525606, "phrase": "critical_system_qualities"}, {"score": 0.0027992118597278087, "phrase": "user_experience"}, {"score": 0.002735284807307981, "phrase": "generative_technique"}, {"score": 0.0027143009946473937, "phrase": "xvcl"}, {"score": 0.0026523079380037706, "phrase": "meta-level_representation"}, {"score": 0.0026218430041123164, "phrase": "web_application"}, {"score": 0.0025619562094446884, "phrase": "actual_web_application"}, {"score": 0.002465161736207254, "phrase": "good_level"}, {"score": 0.002273605493468005, "phrase": "generic_design_solutions"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["code duplication", " clone unification", " meta-programming", " design patterns", " Web applications", " genericity"], "paper_abstract": "Server pages (also called dynamic pages) render a generic web page into many similar ones. The technique is commonly used for implementing web application user interfaces (UIs). Yet our previous study found a high rate of repetitions (also called 'clones') in web applications, particularly in UIs. The finding raised the question as to why such repetitions had not been averted with the use of server pages. For an answer, we conducted an experiment using PHP server pages to explore how far server pages can be pushed to achieve generic web applications. Our initial findings suggested that generic representation obtained using server pages sometimes compromises certain important system qualities such as run-time performance. It may also complicate the use of WYSIWYG editors. We have analysed the nature of these trade-offs, and now propose a mixed-strategy approach to obtain optimum generic representation of web applications without unnecessary compromise to critical system qualities and user experience. The mixed-strategy approach applies the generative technique of XVCL to achieve genericity at the meta-level representation of a web application, leaving repetitions to the actual web application. Our experiments show that the mixed-strategy approach can achieve a good level of genericity without conflicting with other system qualities. Our findings should open the way for others to better-informed decisions regarding generic design solutions, which should in turn lead to simpler, more maintainable and more reusable web applications. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Towards generic representation of web applications: solutions and trade-offs", "paper_id": "WOS:000264645200003"}