{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linear"}, {"score": 0.004733347359490221, "phrase": "connectivity_related_problems"}, {"score": 0.004600389726895716, "phrase": "symbolic_data_structures"}, {"score": 0.004522406417999492, "phrase": "ordered_binary_decision_diagrams"}, {"score": 0.004271843728776305, "phrase": "computer_science"}, {"score": 0.004199406257273994, "phrase": "large_dimensions"}, {"score": 0.004128192012388041, "phrase": "input_models"}, {"score": 0.004058180509184539, "phrase": "challenging_feature"}, {"score": 0.004024237224070849, "phrase": "obdd"}, {"score": 0.0038551626276406175, "phrase": "truly_new_standards"}, {"score": 0.003789763907758991, "phrase": "achievable_dimensions"}, {"score": 0.003725470458263889, "phrase": "model_checking_verification_technique"}, {"score": 0.003641433168173135, "phrase": "obdd_representations"}, {"score": 0.0036001255166809793, "phrase": "strict_constraints"}, {"score": 0.0035390378585554547, "phrase": "algorithm_design_issue"}, {"score": 0.0034395119150793787, "phrase": "depth-first_search"}, {"score": 0.003267342521938321, "phrase": "symbolic_framework"}, {"score": 0.0029148831519944358, "phrase": "symbolically_represented_graphs"}, {"score": 0.0028167336373711494, "phrase": "symbolic_algorithmic_strategy"}, {"score": 0.0027374647587075935, "phrase": "new_notion"}, {"score": 0.0025416235470290286, "phrase": "linear_symbolic_step_algorithms"}, {"score": 0.0024984517279573906, "phrase": "strongly_connected_components"}, {"score": 0.0024700776739384977, "phrase": "biconnected_components"}, {"score": 0.0024005409468262203, "phrase": "previously_designed_connectivity_symbolic_algorithms"}, {"score": 0.0022802596433757565, "phrase": "so-called_\"bad_cycle_detection_problem"}, {"score": 0.0021291870676682406, "phrase": "emptiness_problem"}], "paper_keywords": ["strongly connected components", " biconnected components", " Ordered Binary Decision Diagrams", " Model Checking", " massive graphs"], "paper_abstract": "The importance of symbolic data structures such as Ordered Binary Decision Diagrams (OBDD) is rapidly growing in many areas of Computer Science where the large dimensions of the input models is a challenging feature: OBDD based graph representations allowed to define truly new standards in the achievable dimensions for the Model Checking verification technique. However, OBDD representations pose strict constraints in the algorithm design issue. For example, Depth-First Search (DFS) is not feasible in a symbolic framework and, consequently, many state-of-the-art DFS based algorithms (e.g., connectivity procedures) cannot be easily rearranged to work on symbolically represented graphs. We devise here a symbolic algorithmic strategy, based on the new notion of spine-set, that is general enough to be the engine of linear symbolic step algorithms for both strongly connected components and biconnected components. Our procedures improve on previously designed connectivity symbolic algorithms. Moreover, by an application to the so-called \"bad cycle detection problem\", our technique can be used to efficiently solve the emptiness problem for various kinds of omega-automata.", "paper_title": "Symbolic graphs: Linear solutions to connectivity related problems", "paper_id": "WOS:000251647800005"}