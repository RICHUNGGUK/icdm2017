{"auto_keywords": [{"score": 0.03849418835328374, "phrase": "vjm"}, {"score": 0.015170921215896329, "phrase": "life_sciences_applications"}, {"score": 0.004814952993630388, "phrase": "customized"}, {"score": 0.004461051281091779, "phrase": "grid_technologies"}, {"score": 0.00415166680936294, "phrase": "resource_broker"}, {"score": 0.0038985392250620483, "phrase": "virtual_job_model"}, {"score": 0.003777800904236079, "phrase": "resource_co-allocation"}, {"score": 0.0035794251590584563, "phrase": "resource_usage"}, {"score": 0.0035473867669654174, "phrase": "multi-cluster_parallel_applications"}, {"score": 0.003406713877432236, "phrase": "extensible_scheduler"}, {"score": 0.0032423089921154503, "phrase": "customized_metascheduling_policies"}, {"score": 0.003113696267229798, "phrase": "array-job_scheduler_plug-in"}, {"score": 0.0029901699209266435, "phrase": "autodock"}, {"score": 0.0029634381549601212, "phrase": "blast"}, {"score": 0.00277001889871322, "phrase": "gfarm_data_grid"}, {"score": 0.0026126405272417783, "phrase": "graphical_user_interface"}, {"score": 0.0025892330566358503, "phrase": "transparent_grid_access"}, {"score": 0.00249767641333441, "phrase": "data_staging"}, {"score": 0.00247529638625566, "phrase": "simplified_data_management"}, {"score": 0.0024202176034746337, "phrase": "open_source"}, {"score": 0.0023346234464901978, "phrase": "life_science_gateways"}, {"score": 0.0022520496048464406, "phrase": "pragma_biosciences_portal"}, {"score": 0.0021336208506092173, "phrase": "metascheduling_policies"}], "paper_keywords": ["metascheduling", " MPICH-G2", " co-allocation", " scheduler plug-in", " life sciences"], "paper_abstract": "As more and more life science researchers start to take advantages of grid technologies in their work, the demand increases for a robust yet easy to use metascheduler or resource broker. In this paper, we have extended the metascheduler CSF4 by providing a Virtual Job Model (VJM) to synchronize the resource co-allocation for cross-domain parallel jobs. The VJM eliminates dead-locks and improves resource usage for multi-cluster parallel applications compiled with MPICH-G2. Taking advantage of the extensible scheduler plug-in model of CSF4, one may develop customized metascheduling policies for life sciences applications. As an example, an array-job scheduler plug-in is developed for pleasantly parallel applications such as AutoDock and Blast. The performance of the VJM is evaluated through experiments with mpiBLAST-g2 using a Gfarm data grid testbed. Furthermore, a CSF4 portlet has been released to provide a graphical user interface for transparent grid access, with the use of Gfarm for data staging and simplified data management. The platform is open source at sourceforge.net/projects/gcsf/ and has been deployed in life science gateways by projects such as My WorkSphere, and PRAGMA Biosciences Portal. The VJM enables the development of support for more sophisticated workflows and metascheduling policies in the near future.", "paper_title": "Customized plug-in modules in metascheduler CSF4 for life sciences applications", "paper_id": "WOS:000249675300004"}