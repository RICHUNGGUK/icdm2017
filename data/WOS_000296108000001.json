{"auto_keywords": [{"score": 0.03712654330339069, "phrase": "agent_programs"}, {"score": 0.00481495049065317, "phrase": "plan_revision"}, {"score": 0.004757643419056999, "phrase": "bdi_agent_programs"}, {"score": 0.004617328272121826, "phrase": "plan_execution_failures"}, {"score": 0.00429715240295033, "phrase": "nondeterministic_actions"}, {"score": 0.00414545383888272, "phrase": "failure_handling"}, {"score": 0.003071965703296204, "phrase": "exceptional_executions"}, {"score": 0.0028586409810976367, "phrase": "non-executable_actions"}, {"score": 0.002597012212823168, "phrase": "normal_and_exceptional_executions"}, {"score": 0.00247529638625566, "phrase": "complete_axiomatization"}, {"score": 0.0023592715993204796, "phrase": "simple_example"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Formalisms", " Logics"], "paper_abstract": "Facilities for handling plan execution failures are essential for agents which must cope with the effects of nondeterministic actions, and some form of failure handling can be found in most mature agent programming languages and platforms. While such features simplify the development of more robust agents, they make it hard to reason about the execution of agent programs, e.g., to verify their correctness. In this paper, we present an approach to the verification of agent programs which admit exceptional executions. We consider executions of the BDI-based agent programming language 3APL in which plans containing non-executable actions can be revised using plan revision rules, and present a logic for reasoning about normal and exceptional executions of 3APL programs. We provide a complete axiomatization for the logic and, using a simple example, show how to express properties of 3APL programs as formulas of the logic. (C) 2011 Elsevier BM. All rights reserved.", "paper_title": "Reasoning about plan revision in BDI agent programs", "paper_id": "WOS:000296108000001"}