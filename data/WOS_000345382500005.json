{"auto_keywords": [{"score": 0.004815008415160623, "phrase": "intel"}, {"score": 0.004550029253278477, "phrase": "computing_cores"}, {"score": 0.00408010395390736, "phrase": "fourier"}, {"score": 0.004002044115117644, "phrase": "widely-studied_algorithm"}, {"score": 0.003927203683176278, "phrase": "conventional_algorithm"}, {"score": 0.003853757393357659, "phrase": "data_array"}, {"score": 0.0035599338383885447, "phrase": "non-unit_strided_memory_accesses"}, {"score": 0.003313380246267812, "phrase": "explicit_data_transfer"}, {"score": 0.003239114833599948, "phrase": "on-chip_cache"}, {"score": 0.0032026066791743866, "phrase": "main_idea"}, {"score": 0.0029694830678462787, "phrase": "rest_dimensions"}, {"score": 0.0028810436969956147, "phrase": "tlb"}, {"score": 0.0028164399450837465, "phrase": "different_dimensions"}, {"score": 0.0027532820796396713, "phrase": "multi-level_parallelism"}, {"score": 0.0027017308406240563, "phrase": "many-core_system"}, {"score": 0.002671263324230699, "phrase": "high_degree"}, {"score": 0.002631172352670227, "phrase": "better_data_reuse"}, {"score": 0.0026113524778702602, "phrase": "local_cache"}, {"score": 0.002514464610980629, "phrase": "optimization_techniques"}, {"score": 0.002476721068743341, "phrase": "memory_padding"}, {"score": 0.002458061764297101, "phrase": "loop_transformation"}, {"score": 0.0021944267528581094, "phrase": "maximum_performance"}, {"score": 0.0021451873499061633, "phrase": "offload_mode"}], "paper_keywords": ["3D-FFT", " memory efficient", " many-core", " Many Integrated Core", " Intel (R) Xeon Phi(TM)"], "paper_abstract": "Equipped with 512-bit wide SIMD instructions and large numbers of computing cores, the emerging x86-based Intel (R) Many Integrated Core (MIC) Architecture provides not only high floating-point performance, but also substantial off-chip memory bandwidth. The 3D FFT (three-dimensional fast Fourier transform) is a widely-studied algorithm; however, the conventional algorithm needs to traverse the data array three times. In each pass, it computes multiple 1D FFTs along one of three dimensions, giving rise to plenty of non-unit strided memory accesses. In this paper, we propose a two-pass 3D FFT algorithm, which mainly aims to reduce the amount of explicit data transfer between the memory and the on-chip cache. The main idea is to split one dimension into two sub-dimensions, and then combine the transform along each sub-dimension with one of the rest dimensions respectively. The difference in amount of TLB misses resulting from decomposition along different dimensions is analyzed in detail. Multi-level parallelism is leveraged on the many-core system for a high degree of parallelism and better data reuse of local cache. On top of this, a number of optimization techniques, such as memory padding, loop transformation and vectorization, are employed in our implementation to further enhance the performance. We evaluate the algorithm on the Intel (R) Xeon Phi(TM) coprocessor 7110P, and achieve a maximum performance of 136 Gflops with 240 threads in offload mode, which beats the vendor-specific Intel (R) MKL library by a factor of up to 2.22X.", "paper_title": "Memory Efficient Two-Pass 3D FFT Algorithm for Intel (R) Xeon Phi(TM) Coprocessor", "paper_id": "WOS:000345382500005"}