{"auto_keywords": [{"score": 0.04450248810838313, "phrase": "rambo"}, {"score": 0.03635752918603661, "phrase": "gossip_messages"}, {"score": 0.03050043178789836, "phrase": "leave_service"}, {"score": 0.026610995406908936, "phrase": "new_algorithm"}, {"score": 0.00481495049065317, "phrase": "shareable_data_services"}, {"score": 0.004775531918452571, "phrase": "consistency_guarantees"}, {"score": 0.004583205112737672, "phrase": "building_distributed_systems"}, {"score": 0.004398589723893764, "phrase": "practical_algorithms"}, {"score": 0.00430907756010007, "phrase": "reconfigurable_linearizable_data_service"}, {"score": 0.0041696269035784725, "phrase": "lynch"}, {"score": 0.004135462689641778, "phrase": "shvartsman"}, {"score": 0.004018087343963485, "phrase": "dynamic_conditions"}, {"score": 0.003952513974962462, "phrase": "message_loss"}, {"score": 0.003920128102807887, "phrase": "node_crashes"}, {"score": 0.0038720442355114045, "phrase": "new_node_arrivals"}, {"score": 0.0037776319581225046, "phrase": "original_algorithm"}, {"score": 0.003700709435644458, "phrase": "abstract_level"}, {"score": 0.0036553070575015344, "phrase": "concise_presentation"}, {"score": 0.0033115124244647736, "phrase": "long_time"}, {"score": 0.003074991770768925, "phrase": "consistent_data_service"}, {"score": 0.0030497740719977835, "phrase": "long-lived_objects"}, {"score": 0.0029147175927233546, "phrase": "incremental_communication_protocol"}, {"score": 0.002843581231499026, "phrase": "new_protocol"}, {"score": 0.0027856252557826467, "phrase": "local_knowledge"}, {"score": 0.0026622351303038885, "phrase": "redundant_information"}, {"score": 0.0024416087858984644, "phrase": "forward_simulation"}, {"score": 0.0023721974375323267, "phrase": "experimental_implementation"}, {"score": 0.002220846338732873, "phrase": "selected_analytical_and_preliminary_empirical_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["distributed algorithms", " atomic memory service", " long-lived executions"], "paper_abstract": "Shareable data services providing consistency guarantees, such as atomicity (linearizability), make building distributed systems easier. However, combining linearizability with efficiency in practical algorithms is difficult. A reconfigurable linearizable data service, called RAMBO, was developed by Lynch and Shvartsman. This service guarantees consistency under dynamic conditions involving asynchrony, message loss, node crashes, and new node arrivals. The specification of the original algorithm is given at an abstract level aimed at concise presentation and formal reasoning about correctness. The algorithm propagates information by means of gossip messages. If the service is in use for a long time, the size and the number of gossip messages may grow without bound. This paper presents a consistent data service for long-lived objects that improves on RAMBO in two ways: it includes an incremental communication protocol and a leave service. The new protocol takes advantage of the local knowledge, and carefully manages the size of messages by removing redundant information, while the leave service allows the nodes to leave the system gracefully. The new algorithm is formally proved correct by forward simulation using levels of abstraction. An experimental implementation of the system was developed for networks-of-workstations. The paper also includes selected analytical and preliminary empirical results that illustrate the advantages of the new algorithm. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Long-lived rambo: Trading knowledge for communication", "paper_id": "WOS:000249581000006"}