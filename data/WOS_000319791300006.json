{"auto_keywords": [{"score": 0.04706226145554153, "phrase": "treapsort"}, {"score": 0.00887776309447037, "phrase": "running_times"}, {"score": 0.00481495049065317, "phrase": "treapsort_algorithm"}, {"score": 0.004596561972944185, "phrase": "running_time"}, {"score": 0.003644001325962353, "phrase": "'partial_permutation'_model"}, {"score": 0.0023103168076565694, "phrase": "quicksort"}, {"score": 0.0022052711621931144, "phrase": "length_n."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Average-case analysis of algorithms", " Smoothed complexity", " Sorting algorithms", " MOQA"], "paper_abstract": "We analyse the running time of Treapsort, a sorting algorithm in the MOQA(1) programming language, which acts on treaps. We show that, using the 'partial permutation' model of Banderier et al. (2003) [1], Treapsort has smoothed complexity Theta (sigma(-1)n ln n) for treaps of size n. We also show that the multiset of running times of Treapsort on all treaps of size n is equal to the multiset of running times of Quicksort on all lists of length n. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Running time of the Treapsort algorithm", "paper_id": "WOS:000319791300006"}