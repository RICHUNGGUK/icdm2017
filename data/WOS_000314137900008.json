{"auto_keywords": [{"score": 0.038170323568475995, "phrase": "total_cost"}, {"score": 0.00481495049065317, "phrase": "weighted_trees"}, {"score": 0.004660453113061494, "phrase": "nonnegative_edge_cost"}, {"score": 0.004610058444728656, "phrase": "nonnegative_vertex_weight"}, {"score": 0.003831801113154043, "phrase": "remaining_part"}, {"score": 0.003399466007862412, "phrase": "minmstcut_problem"}, {"score": 0.002999386721353559, "phrase": "linear_time"}, {"score": 0.0028883873899305987, "phrase": "np"}, {"score": 0.0026607205525625995, "phrase": "maxmstcut"}, {"score": 0.00251966141432339, "phrase": "minlstcut"}, {"score": 0.0024923577071656014, "phrase": "maxlstcut"}, {"score": 0.002186849855560281, "phrase": "prescribed_error"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph cut", " FPTAS", " Tree", " Tree knapsack"], "paper_abstract": "Given a tree with nonnegative edge cost and nonnegative vertex weight, and a number k >= 0, we consider the following four cut problems: cutting vertices of weight at most or at least k from the tree by deleting some edges such that the remaining part of the graph is still a tree and the total cost of the edges being deleted is minimized or maximized. The MinMstCut problem (cut vertices of weight at most k and minimize the total cost of the edges being deleted) can be solved in linear time and space and the other three problems are NP-hard. In this paper, we design an 0(nl/epsilon)-time 0(l(2)/epsilon + n)-space algorithm for MaxMstCut, and 0(nl(1/epsilon + log n))-time 0(l(2)/epsilon + n)-space algorithms for the other two problems, MinLstCut and MaxLstCut, where n is the number of vertices in the tree, l the number of leaves, and epsilon > 0 the prescribed error bound. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "FPTASs for trimming weighted trees", "paper_id": "WOS:000314137900008"}