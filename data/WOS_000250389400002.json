{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "test_smells"}, {"score": 0.0047464608267006395, "phrase": "metrics-based_approach"}, {"score": 0.004634459424542272, "phrase": "eager_test"}, {"score": 0.004546755482549647, "phrase": "fine-grained_defect_detection_technique"}, {"score": 0.004418287966422041, "phrase": "strong_dependency"}, {"score": 0.004212157020917929, "phrase": "test_coevolution"}, {"score": 0.0041522059428827345, "phrase": "additional_burden"}, {"score": 0.00409310463335204, "phrase": "software_developer"}, {"score": 0.003977403701783668, "phrase": "writing_tests"}, {"score": 0.003597514862052876, "phrase": "good_test"}, {"score": 0.0035125292519354724, "phrase": "specific_principles"}, {"score": 0.0034790978593553794, "phrase": "unit_testing"}, {"score": 0.003072285184441679, "phrase": "structural_deficiencies"}, {"score": 0.0029853535424953595, "phrase": "core_test_concepts"}, {"score": 0.00283229915062791, "phrase": "general_fixture_and_eager_test"}, {"score": 0.0026742419973883134, "phrase": "unit_test_concepts"}, {"score": 0.002598543802992702, "phrase": "manual_inspection"}, {"score": 0.002524982927936405, "phrase": "human_reviewing"}, {"score": 0.0024417832296664698, "phrase": "traditional_means"}, {"score": 0.0024185182010749273, "phrase": "test_quality_assurance"}, {"score": 0.002327648608736437, "phrase": "reliable_means"}, {"score": 0.002305468528385778, "phrase": "test_smell_detection"}, {"score": 0.0021560018573288666, "phrase": "initial_contribution"}, {"score": 0.0021049977753042253, "phrase": "test_smell_metrics"}], "paper_keywords": ["test design", " quality assurance", " maintainability"], "paper_abstract": "As a fine-grained defect detection technique, unit testing introduces a strong dependency on the structure of the code. Accordingly, test coevolution forms an additional burden on the software developer which can be tempered by writing tests in a manner that makes them easier to change. Fortunately, we are able to concretely express what a good test is by exploiting the specific principles underlying unit testing. Analogous to the concept of code smells, violations of these principles are termed test smells. In this paper, we clarify the structural deficiencies encapsulated in test smells by formalizing core test concepts and their characteristics. To support the detection of two such test smells, General Fixture and Eager Test, we propose a set of metrics defined in terms of unit test concepts. We compare their detection effectiveness using manual inspection and through a comparison with human reviewing. Although the latter is the traditional means for test quality assurance, our results indicate it is not a reliable means for test smell detection. This work thus stresses the need for a more reliable detection mechanism and provides an initial contribution through the validation of test smell metrics.", "paper_title": "On the detection of test smells: A metrics-based approach for general fixture and eager test", "paper_id": "WOS:000250389400002"}