{"auto_keywords": [{"score": 0.03383365025374779, "phrase": "quotient_lenses"}, {"score": 0.00481495049065317, "phrase": "bidirectional_programming_languages"}, {"score": 0.004660088610495924, "phrase": "forward_transformation"}, {"score": 0.004550585106483935, "phrase": "reverse_transformation"}, {"score": 0.004510184935928004, "phrase": "edited_output"}, {"score": 0.004456872931482395, "phrase": "correspondingly_edited_input"}, {"score": 0.004249825947483216, "phrase": "strong_behavioral_laws"}, {"score": 0.004076533120753605, "phrase": "identity_function"}, {"score": 0.003608482801645977, "phrase": "inessential_details"}, {"score": 0.0034612507694547013, "phrase": "bidirectional_languages"}, {"score": 0.0032226482496329626, "phrase": "general_theory"}, {"score": 0.0031561961485589633, "phrase": "well_behaved_modulo_equivalence_relations"}, {"score": 0.003100328042455753, "phrase": "semantically"}, {"score": 0.003054520564249659, "phrase": "natural_refinement"}, {"score": 0.0029737652463012318, "phrase": "previous_work"}, {"score": 0.0028779496327516634, "phrase": "rich_set"}, {"score": 0.002801849371896573, "phrase": "quotienting_lenses"}, {"score": 0.0026874405408023956, "phrase": "quotient_lens"}, {"score": 0.0025623821393275146, "phrase": "bidirectional_string_processing_language"}, {"score": 0.0025547853560287928, "phrase": "boomerang"}, {"score": 0.0025020469669826497, "phrase": "useful_primitive_canonizers"}, {"score": 0.002450417380442116, "phrase": "simple_extension"}, {"score": 0.0024358622406092365, "phrase": "boomerang's_regular-expression-based_type_system"}, {"score": 0.002378499067102358, "phrase": "resulting_language"}, {"score": 0.002357337046408753, "phrase": "expressive_tool"}, {"score": 0.0022209780222461587, "phrase": "extended_example"}, {"score": 0.0021946656099592608, "phrase": "uniprot_genome_database_format"}], "paper_keywords": ["languages", " design", " theory", " bidirectional languages", " lenses", " equivalences", " canonizers", " view update problem", " bijective languages", " regular string transducers", " regular types", " Boomerang"], "paper_abstract": "There are now a number of bidirectional programming languages, where every program can be read both as a forward transformation mapping one data structure to another and as a reverse transformation mapping an edited output back to a correspondingly edited input. Besides parsimony-the two related transformations are described by just one expression-such languages are attractive because they promise strong behavioral laws about how the two transformations fit together-e. g., their composition is the identity function. It has repeatedly been observed, however, that such laws are actually a bit too strong: in practice, we do not want them \"on the nose,\" but only up to some equivalence, allowing inessential details, such as whitespace, to be modified after a round trip. Some bidirectional languages loosen their laws in this way, but only for specific, baked-in equivalences. In this work, we propose a general theory of quotient lenses bidirectional transformations that are well behaved modulo equivalence relations controlled by the programmer. Semantically, quotient lenses are a natural refinement of lenses, which we have studied in previous work. At the level of syntax, we present a rich set of constructs for programming with canonizers and for quotienting lenses by canonizers. We track equivalences explicitly, with the type of every quotient lens specifying the equivalences it respects. We have implemented quotient lenses as a refinement of the bidirectional string processing language Boomerang. We present a number of useful primitive canonizers for strings, and give a simple extension of Boomerang's regular-expression-based type system to statically typecheck quotient lenses. The resulting language is an expressive tool for transforming real-world, ad-hoc data formats. We demonstrate the power of our notation by developing an extended example based on the UniProt genome database format and illustrate the generality of our approach by showing how uses of quotienting in other bidirectional languages can be translated into our notation.", "paper_title": "Quotient lenses", "paper_id": "WOS:000259436700039"}