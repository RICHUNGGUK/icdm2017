{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "strict_unwraps"}, {"score": 0.004231699728933577, "phrase": "general_way"}, {"score": 0.003865826699096508, "phrase": "recursive_definition"}, {"score": 0.003441352119167824, "phrase": "algorithmic_efficiency"}, {"score": 0.00306334226516593, "phrase": "program_transformations"}, {"score": 0.002726740692380339, "phrase": "j._funct"}], "paper_keywords": [""], "paper_abstract": "The worker/wrapper transformation is a general way of changing the type of a recursive definition, usually applied with an eye to increasing algorithmic efficiency. This note identifies an infelicity in the program transformations presented by Gill & Hutton (The worker/wrapper transformation, J. Funct. Program., vol. 19, 2009, pp. 227-251) and proposes a new totally correct worker/wrapper fusion rule.", "paper_title": "Short note: Strict unwraps make worker/wrapper fusion totally correct", "paper_id": "WOS:000289378800005"}