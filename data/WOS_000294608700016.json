{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "coarse-grained_reconfigurable_architectures"}, {"score": 0.004515967518891287, "phrase": "data_partitioning_technique"}, {"score": 0.004420472010542188, "phrase": "memory_subsystem"}, {"score": 0.004000741805312148, "phrase": "coarse-grained_reconfigurable_arrays"}, {"score": 0.0038060092376105414, "phrase": "embedded_reconfigurable_processor"}, {"score": 0.0035694520070200294, "phrase": "vliw"}, {"score": 0.003371508176308189, "phrase": "code_region"}, {"score": 0.0033001333942688747, "phrase": "high_performance"}, {"score": 0.0032302647179383915, "phrase": "vliw_mode"}, {"score": 0.0031845067058084613, "phrase": "code_regions"}, {"score": 0.0031393948330209255, "phrase": "high_ilp"}, {"score": 0.003072918736387408, "phrase": "high_memory_bandwidth"}, {"score": 0.0030078460113945136, "phrase": "non-vliw_mode"}, {"score": 0.002923214590192792, "phrase": "low_ilp"}, {"score": 0.002861302930564756, "phrase": "low_memory_latency"}, {"score": 0.0027219310192435633, "phrase": "spm"}, {"score": 0.002664221051021009, "phrase": "data_cache"}, {"score": 0.0025892330566358503, "phrase": "data_interference_graph_reduction"}, {"score": 0.0024630345285372958, "phrase": "spm_size"}, {"score": 0.0023766673143502384, "phrase": "optimal_data_partitions"}, {"score": 0.002309754152767196, "phrase": "vliw_instruction_schedule"}, {"score": 0.0021352776064254195, "phrase": "cgra_architecture"}], "paper_keywords": ["Algorithms", " Experimentation", " Management", " Measurement", " Performance", " Coarse Grained Reconfigurable Arrays", " Compilers", " Data Partitioning", " Instruction Scheduling", " VLIW"], "paper_abstract": "In this paper, we propose a data partitioning technique for the memory subsystem that consists of a multi-ported scratchpad memory (SPM) unit and a single-ported data cache in coarse-grained reconfigurable arrays (CGRA) architecture. The embedded reconfigurable processor executes programs by switching between the Non-VLIW and VLIW modes depending on the type of the code region to achieve high performance. The VLIW mode exploits code regions with high ILP that require high memory bandwidth and the Non-VLIW mode exploits those with low ILP that require low memory latency. Our data partitioning technique between the SPM and the data cache is based on data interference graph reduction and profiling information. Given an SPM size, it finds the optimal data partitions by taking the VLIW instruction schedule into consideration. We evaluate our data partitioning technique for the CGRA architecture with three representative multimedia applications.", "paper_title": "An Instruction-Scheduling-Aware Data Partitioning Technique for Coarse-Grained Reconfigurable Architectures", "paper_id": "WOS:000294608700016"}