{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "periodic_request_functions"}, {"score": 0.0046394362688524475, "phrase": "non-cyclic_task_models"}, {"score": 0.0045119929871912405, "phrase": "sequential_code"}, {"score": 0.0044495843279816075, "phrase": "system_actions"}, {"score": 0.00432733352307636, "phrase": "operating_system"}, {"score": 0.00413096972023037, "phrase": "design_time"}, {"score": 0.0037820003983334476, "phrase": "conditional_executions"}, {"score": 0.003712362078915926, "phrase": "concurrent_tasks"}, {"score": 0.0036271080216837286, "phrase": "schedulability_analysis"}, {"score": 0.0034947408949397127, "phrase": "cyclic_recurrent_behavior"}, {"score": 0.003367188029221534, "phrase": "single_source"}, {"score": 0.003244275497488318, "phrase": "minimum_amount"}, {"score": 0.003140401552000472, "phrase": "successive_activations"}, {"score": 0.003096905353118796, "phrase": "source_job"}, {"score": 0.0030398432591176357, "phrase": "efficient_schedulability_analysis"}, {"score": 0.00290173234777844, "phrase": "bound_functions"}, {"score": 0.0026195184143518713, "phrase": "recurrent_term"}, {"score": 0.0025474193855847074, "phrase": "general_task_graph_models"}, {"score": 0.002397923568994474, "phrase": "period_parameter"}, {"score": 0.002331909406363425, "phrase": "asymptotic_complexity"}, {"score": 0.002195033004022173, "phrase": "time_interval"}, {"score": 0.0021746987512551693, "phrase": "experimental_results"}, {"score": 0.0021545524633190985, "phrase": "significant_improvements"}, {"score": 0.0021049977753042253, "phrase": "system_schedulability_analysis"}], "paper_keywords": ["Real-time schedulability", " Task graph model", " Max-plus algebra", " Request/Demand bound functions"], "paper_abstract": "Tasks are units of sequential code implementing the system actions and executed concurrently by an operating system. Techniques have been developed to determine, at design time, whether a set of tasks can safely complete before their deadlines. Several models have been proposed to represent conditional executions and dependencies among concurrent tasks for the purpose of schedulability analysis. Among them, task graphs with cyclic recurrent behavior (i.e., those modeled with a single source vertex and a period parameter specifying the minimum amount of time that must elapse between successive activations of the source job) allow for efficient schedulability analysis based on the periodicity of the request and demand bound functions (rbf and dbf). In this paper, we leverage results from max-plus algebra to identify a recurrent term in rbf and dbf of general task graph models, even when the execution is neither recurrent nor controlled by a period parameter. As such, the asymptotic complexity of calculating rbf and dbf is independent from the length of the time interval. Experimental results demonstrate significant improvements on the runtime for system schedulability analysis.", "paper_title": "Computing periodic request functions to speed-up the analysis of non-cyclic task models", "paper_id": "WOS:000356325300002"}