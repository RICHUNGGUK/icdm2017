{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "server_control"}, {"score": 0.004766388573192505, "phrase": "fluid_modeling"}, {"score": 0.004718314112245913, "phrase": "server_technology"}, {"score": 0.004553822674247401, "phrase": "wide_range"}, {"score": 0.004507882471601552, "phrase": "online_services"}, {"score": 0.004135562737140424, "phrase": "economical_costs"}, {"score": 0.003871653343842317, "phrase": "server_configuration"}, {"score": 0.0038131738052230254, "phrase": "central_trade-off"}, {"score": 0.003587924960158317, "phrase": "server_model"}, {"score": 0.0035337158050484474, "phrase": "nonlinear_continuous-time_model"}, {"score": 0.0033759367489122716, "phrase": "concurrency_control"}, {"score": 0.003341839487905525, "phrase": "server_systems"}, {"score": 0.003291336101694653, "phrase": "optimal_configuration"}, {"score": 0.00309681702203087, "phrase": "availability-maximizing_server_control"}, {"score": 0.003034558550137019, "phrase": "highest_service_availability"}, {"score": 0.002988685006809336, "phrase": "fixed_performance_constraint"}, {"score": 0.002943502888225748, "phrase": "pm-c"}, {"score": 0.0028990018343924683, "phrase": "performance-maximizing_control_law"}, {"score": 0.002840708910768261, "phrase": "desired_availability_target"}, {"score": 0.002797757576619329, "phrase": "highest_performance"}, {"score": 0.002618995204424126, "phrase": "availability-aware_performance-maximizing_control"}, {"score": 0.002540377258232509, "phrase": "performance-aware_availability-maximizing_control"}, {"score": 0.0024392031587145728, "phrase": "conser"}, {"score": 0.002283298119790413, "phrase": "conser's_fluid_model"}, {"score": 0.002214734873559146, "phrase": "tpc-c_industry-standard_benchmark"}, {"score": 0.0021373366163721518, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "performance_and_availability_constraints"}], "paper_keywords": ["Server systems", " QoS", " SLA", " performance", " availability", " modeling", " control"], "paper_abstract": "Server technology provides a means to support a wide range of online services and applications. However, their ad hoc configuration poses significant challenges to the performance, availability, and economical costs of applications. In this paper, we examine the impact of server configuration on the central trade-off between service performance and availability. First, we present a server model as a nonlinear continuous-time model using fluid approximations. Second, we develop concurrency control on server systems for an optimal configuration. We primarily provide two control laws for two different QoS objectives. AM-C is an availability-maximizing server control that achieves the highest service availability given a fixed performance constraint; and PM-C is a performance-maximizing control law that meets a desired availability target with the highest performance. We then improve the control with two additional multilevel laws. AA-PM-C is an availability-aware performance-maximizing control, and PA-AM-C is a performance-aware availability-maximizing control. In this paper, we present CONSER, a novel system for the control of servers. We evaluate CONSER's fluid model and control techniques on the TPC-C industry-standard benchmark. Our experiments show that the proposed techniques successfully guarantee performance and availability constraints.", "paper_title": "Experience with CONSER: A System for Server Control through Fluid Modeling", "paper_id": "WOS:000290867300004"}