{"auto_keywords": [{"score": 0.04785710122151868, "phrase": "search_space"}, {"score": 0.00481495049065317, "phrase": "software_repair_models"}, {"score": 0.0045052562941109734, "phrase": "automated_program_fixing"}, {"score": 0.0038698476651328898, "phrase": "bug_fix_transactions"}, {"score": 0.0037969755088553326, "phrase": "software_repositories"}, {"score": 0.0035864603175592854, "phrase": "learned_knowledge"}, {"score": 0.003419943984098415, "phrase": "automated_program_repair"}, {"score": 0.0032922964156452696, "phrase": "extensive_empirical_results"}, {"score": 0.0031393948330209224, "phrase": "human_bug_fixes"}, {"score": 0.003051073364818384, "phrase": "large_scale"}, {"score": 0.002881793492919646, "phrase": "abstract_syntax_tree"}, {"score": 0.0027218799769229596, "phrase": "mathematical_reasoning"}, {"score": 0.0025954008219792337, "phrase": "automated_repair"}, {"score": 0.0022500695985527668, "phrase": "java_software"}], "paper_keywords": ["Mining software repositories", " Automated software repair", " Search-based software engineering"], "paper_abstract": "This paper is about understanding the nature of bug fixing by analyzing thousands of bug fix transactions of software repositories. It then places this learned knowledge in the context of automated program repair. We give extensive empirical results on the nature of human bug fixes at a large scale and a fine granularity with abstract syntax tree differencing. We set up mathematical reasoning on the search space of automated repair and the time to navigate through it. By applying our method on 14 repositories of Java software and 89,993 versioning transactions, we show that not all probabilistic repair models are equivalent.", "paper_title": "Mining software repair models for reasoning on the search space of automated program fixing", "paper_id": "WOS:000348381800006"}