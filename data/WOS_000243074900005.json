{"auto_keywords": [{"score": 0.03195636524072608, "phrase": "aop"}, {"score": 0.00481495049065317, "phrase": "nonintrusive"}, {"score": 0.004726052718910578, "phrase": "middleware_frameworks"}, {"score": 0.004581505405526037, "phrase": "novel_programming_construct"}, {"score": 0.004413846562278824, "phrase": "generic_classes"}, {"score": 0.004332322079100859, "phrase": "new_classes"}, {"score": 0.004278807087784626, "phrase": "existing_ones"}, {"score": 0.0039221899471111, "phrase": "new_class"}, {"score": 0.003662892058072211, "phrase": "different_data"}, {"score": 0.003617616153730564, "phrase": "code_implementation"}, {"score": 0.0030582832134483685, "phrase": "aspect-oriented_programming"}, {"score": 0.0029645930408561086, "phrase": "existing_middleware_applications"}, {"score": 0.002700348931172875, "phrase": "new_deploy-time_weaving_mechanism"}, {"score": 0.0025059724686541263, "phrase": "unique_advantage"}], "paper_keywords": [""], "paper_abstract": "Shakeins are a novel programming construct which, like mixins and generic classes, generates new classes from existing ones in a universal, uniform, and automatic manner: From a given class, a shakein generates a new class which has the same type as the original, but with different data and code implementation. We argue that shakeins are restricted, yet less chaotic, aspects. We further claim that shakeins are well suited for the introduction of aspect-oriented programming (AOP) into existing middleware applications. We introduce the ASPECTJ2EE language which, with the help of shakeins and a new deploy-time weaving mechanism, brings the blessings of AOP to the J2EE framework. A unique advantage of ASPECTJ2EE, which is less general (and hence less complicated) than AsPECTJ, is that it can be smoothly integrated into J2EE implementations without breaking their architecture.", "paper_title": "Shakeins: Nonintrusive aspects for middleware frameworks", "paper_id": "WOS:000243074900005"}