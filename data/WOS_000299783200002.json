{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "probabilistic_tree_automata"}, {"score": 0.004767261858417823, "phrase": "similarity_computation"}, {"score": 0.004696608876994947, "phrase": "difficult_issue"}, {"score": 0.004650086856905758, "phrase": "music_information_retrieval_tasks"}, {"score": 0.0044685410845412745, "phrase": "special_ability"}, {"score": 0.004358676214574977, "phrase": "pattern_recognition"}, {"score": 0.0041469500929423595, "phrase": "noisy_data"}, {"score": 0.0038676325043529524, "phrase": "best_representation"}, {"score": 0.003829290275367182, "phrase": "symbolic_music"}, {"score": 0.003716520760680603, "phrase": "tree_representation"}, {"score": 0.0035891316580885665, "phrase": "tree_structure"}, {"score": 0.0034660938095219846, "phrase": "node_labelling"}, {"score": 0.003347259612209552, "phrase": "melodic_similarity_computation"}, {"score": 0.003264872488939969, "phrase": "main_drawbacks"}, {"score": 0.003152915289414825, "phrase": "tree_comparison_algorithms"}, {"score": 0.0030906666356950887, "phrase": "high_time_complexity"}, {"score": 0.00299958349498286, "phrase": "stochastic_k-testable_tree-models"}, {"score": 0.002701361707441567, "phrase": "tree_edit_distances"}, {"score": 0.0026480044868438875, "phrase": "k-testable_tree-models"}, {"score": 0.0025571463140118805, "phrase": "recognition_rate"}, {"score": 0.0024941578231560055, "phrase": "case_study"}, {"score": 0.00239657981537094, "phrase": "snippet_query"}, {"score": 0.0023028105026714533, "phrase": "symbolic_format"}, {"score": 0.002234893735225432, "phrase": "utilized_method"}, {"score": 0.002158179521369965, "phrase": "inexact_queries"}, {"score": 0.0021049977753042253, "phrase": "scalability_issues"}], "paper_keywords": [""], "paper_abstract": "Similarity computation is a difficult issue in music information retrieval tasks, because it tries to emulate the special ability that humans show for pattern recognition in general, and particularly in the presence of noisy data. A number of works have addressed the problem of what is the best representation for symbolic music in this context. The tree representation, using rhythm for defining the tree structure and pitch information for leaf and node labelling has proven to be effective in melodic similarity computation. One of the main drawbacks of this approach is that the tree comparison algorithms are of a high time complexity. In this paper, stochastic k-testable tree-models are applied for computing the similarity between two melodies as a probability. The results are compared to those achieved by tree edit distances, showing that k-testable tree-models outperform other reference methods in both recognition rate and efficiency. The case study in this paper is to identify a snippet query among a set of songs stored in symbolic format. For it, the utilized method must be able to deal with inexact queries and with efficiency for scalability issues.", "paper_title": "Melodic Identification Using Probabilistic Tree Automata", "paper_id": "WOS:000299783200002"}