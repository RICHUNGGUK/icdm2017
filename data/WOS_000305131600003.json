{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "nanometer_scale_integration_technology"}, {"score": 0.004221072004655573, "phrase": "higher_complexity_soc_testing"}, {"score": 0.0041294419262414995, "phrase": "conventional_vlsi."}, {"score": 0.003952082333580496, "phrase": "design_complexity"}, {"score": 0.0032433414042726356, "phrase": "new_efficient_test_vector_compression_scheme"}, {"score": 0.0028220038404484196, "phrase": "proposed_method"}, {"score": 0.002720505061804933, "phrase": "previously_published_methods"}, {"score": 0.002473325513637559, "phrase": "best_reported_results"}, {"score": 0.002248553559414903, "phrase": "tested_circuits"}, {"score": 0.0021996478802839316, "phrase": "proposed_scheme"}, {"score": 0.0021049977753042253, "phrase": "considerable_low_complexity"}], "paper_keywords": ["Systems-on-a-chip", " Test patterns compression", " Data compression", " Entropy", " Block-entropy", " Scan chain"], "paper_abstract": "The emergence of the nanometer scale integration technology made it possible for systems-on-a-chip, SoC, design to contain many reusable cores from multiple resources. This resulted in higher complexity SoC testing than the conventional VLSI. To address this increase in design complexity in terms of data-volume and test-time, several compression methods have been developed, employed and proposed in the literature. In this paper, we present a new efficient test vector compression scheme based on block entropy in conjunction with our improved row-column reduction routine to reduce test data significantly. Our results show that the proposed method produces much higher compression ratio than all previously published methods. On average, our scheme scores nearly 13% higher than the best reported results. In addition, our scheme outperformed all results for each of the tested circuits. The proposed scheme is very fast and has considerable low complexity.", "paper_title": "An Efficient Block Entropy Based Compression Scheme for Systems-on-a-Chip Test Data", "paper_id": "WOS:000305131600003"}