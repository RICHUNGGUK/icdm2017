{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asian_option_pricing"}, {"score": 0.004580769304731227, "phrase": "parallel_computing"}, {"score": 0.004116440453049531, "phrase": "backward-starting_fixed_strike\"_asian_options"}, {"score": 0.0038606630003037864, "phrase": "partial_differential_equation"}, {"score": 0.003646629717560631, "phrase": "single_state_variable"}, {"score": 0.003544088803300751, "phrase": "asian_option"}, {"score": 0.00332375606483146, "phrase": "standard_european_option"}, {"score": 0.003161870571621082, "phrase": "parabolic_pde"}, {"score": 0.0027413748388534025, "phrase": "massively_parallel_processors"}, {"score": 0.0024630345285372958, "phrase": "numerical_results"}, {"score": 0.002359759876402679, "phrase": "wall-clock_time"}, {"score": 0.0021971473452127126, "phrase": "linux_pc_cluster"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Asian option pricing", " computational finance", " parallel computing", " finite-difference methods"], "paper_abstract": "We discuss the use of parallel computing in Asian option pricing and evaluate the efficiency of various algorithms. We only focus on \"backward-starting fixed strike\" Asian options that are continuously averaged. We implement a partial differential equation (PDE) approach that involves a single state variable to price the Asian option, and implement the same methodology to price a standard European option to check for accuracy. A parabolic PDE is solved by using both explicit and Crank-Nicolson's implicit finite-difference methods. In particular, we look for algorithms designed for implementing the computations in massively parallel processors (MPP). We evaluate the performance of the algorithms by comparing the numerical results with respect to accuracy and wall-clock time of code executions. Codes are executed on a Linux PC cluster. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Parallel computing in Asian option pricing", "paper_id": "WOS:000245625500003"}