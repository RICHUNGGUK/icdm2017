{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "register_automata"}, {"score": 0.015011360432235527, "phrase": "data_words"}, {"score": 0.004774324145784758, "phrase": "finite_data_words"}, {"score": 0.004556901872357751, "phrase": "data_trees"}, {"score": 0.004330941610682453, "phrase": "data_tree"}, {"score": 0.004046923261950549, "phrase": "finite_alphabet"}, {"score": 0.003995772867224968, "phrase": "data_value"}, {"score": 0.003945266418163835, "phrase": "infinite_domain"}, {"score": 0.0038789122930433305, "phrase": "one-way_automata"}, {"score": 0.0034299656871883783, "phrase": "demri"}, {"score": 0.0034009852734078155, "phrase": "lazic"}, {"score": 0.0033722498950951104, "phrase": "jurdzinski"}, {"score": 0.003287482882222731, "phrase": "register_automata_models"}, {"score": 0.0031110402375026016, "phrase": "existent_decidability_proofs"}, {"score": 0.003071682293903262, "phrase": "emptiness_problem"}, {"score": 0.002944039482467119, "phrase": "decidable_extensions"}, {"score": 0.002857849698346116, "phrase": "logical_perspective"}, {"score": 0.0027742030237696298, "phrase": "ltl"}, {"score": 0.0026929458952693465, "phrase": "data_values"}, {"score": 0.002603012037901889, "phrase": "so-called_forward_fragment"}, {"score": 0.0025591748412278174, "phrase": "xml_documents"}, {"score": 0.002421726275597666, "phrase": "key_constraints"}, {"score": 0.002311192286067765, "phrase": "automata_model"}, {"score": 0.0021049977753042253, "phrase": "data_equality"}], "paper_keywords": ["alternating tree register automata", " XML", " forward XPath", " unranked ordered tree", " data-tree", " infinite alphabet"], "paper_abstract": "We study alternating register automata on data words and data trees in relation to logics. A data word (resp. data tree) is a word (resp. tree) whose every position carries a label from a finite alphabet and a data value from an infinite domain. We investigate one-way automata with alternating control over data words or trees, with one register for storing data and comparing them for equality. This is a continuation of the study started by Demri, Lazic and Jurdzinski. From the standpoint of register automata models, this work aims at two objectives: (1) simplifying the existent decidability proofs for the emptiness problem for alternating register automata; and (2) exhibiting decidable extensions for these models. From the logical perspective, we show that (a) in the case of data words, satisfiability of LTL with one register and quantification over data values is decidable; and (b)the satisfiability problem for the so-called forward fragment of XPath on XML documents is decidable, even in the presence of DTDs and even of key constraints. The decidability is obtained through a reduction to the automata model introduced. This fragment contains the child, descendant, next-sibling and following-sibling axes, as well as data equality and inequality tests.", "paper_title": "Alternating register automata on finite data words and trees", "paper_id": "WOS:000302505000022"}