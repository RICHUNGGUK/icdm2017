{"auto_keywords": [{"score": 0.04426252329364738, "phrase": "geometric_modeling"}, {"score": 0.00481495049065317, "phrase": "resultant_polytopes."}, {"score": 0.004634459424542272, "phrase": "newton_polytope"}, {"score": 0.004334657104697421, "phrase": "algebraic_elimination"}, {"score": 0.003902085339580381, "phrase": "resultant_vertices"}, {"score": 0.0029996699429582835, "phrase": "secondary_and_discriminant_polytopes"}, {"score": 0.002928765962664163, "phrase": "experimental_cgal_package"}, {"score": 0.0026620305191986885, "phrase": "newton"}, {"score": 0.002512926336312949, "phrase": "corresponding_secondary_polytopes"}, {"score": 0.0024185182010749273, "phrase": "tropical_geometry_software"}, {"score": 0.002316532084420729, "phrase": "determinantal_predicates"}, {"score": 0.00220823903315848, "phrase": "inner_and_outer_approximations"}, {"score": 0.0021049977753042253, "phrase": "true_volume"}], "paper_keywords": ["General dimension", " convex hull", " regular triangulation", " secondary polytope", " resultant", " CGAL implementation", " experimental complexity"], "paper_abstract": "We design an algorithm to compute the Newton polytope of the resultant, known as resultant polytope, or its orthogonal projection along a given direction. The resultant is fundamental in algebraic elimination, optimization, and geometric modeling. Our algorithm exactly computes vertex- and halfspace-representations of the polytope using an oracle producing resultant vertices in a given direction, thus avoiding walking on the polytope whose dimension is a n 1, where the input consists of a points in Z'. Our approach is output-sensitive as it makes one oracle call per vertex and per facet. It extends to any polytope whose oracle-based definition is advantageous, such as the secondary and discriminant polytopes. Our publicly available implementation uses the experimental CGAL package triangulation. Our method computes 5-, 6- and 7-dimensional polytopes with 35K, 23K and 500 vertices, respectively, within 2hrs, and the Newton polytopes of many important surface equations encountered in geometric modeling in < lsec, whereas the corresponding secondary polytopes are intractable. It is faster than tropical geometry software up to dimension 5 or 6. Hashing determinantal predicates accelerates execution up to 100 times. One variant computes inner and outer approximations with, respectively, 90% and 105% of the true volume, up to 25 times faster.", "paper_title": "AN ORACLE-BASED, OUTPUT-SENSITIVE ALGORITHM FOR PROJECTIONS OF RESULTANT POLYTOPES", "paper_id": "WOS:000339653900007"}