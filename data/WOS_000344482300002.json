{"auto_keywords": [{"score": 0.04676671025601566, "phrase": "non-permutation_flowshop"}, {"score": 0.00481495049065317, "phrase": "non-permutation_flowshop_scheduling"}, {"score": 0.004338898899247236, "phrase": "current_processors"}, {"score": 0.0037844916274672544, "phrase": "manufacturing_layout"}, {"score": 0.0033222630615013763, "phrase": "native_solutions"}, {"score": 0.003194898129853895, "phrase": "ant_colony_optimization"}, {"score": 0.002859856368059419, "phrase": "biologically_inspired_mechanisms"}, {"score": 0.0028228178454284825, "phrase": "eligible_schedules"}, {"score": 0.0026619761089539595, "phrase": "permutation_solutions"}, {"score": 0.0026274936167233515, "phrase": "aco_algorithms"}, {"score": 0.002543224008253855, "phrase": "native_non-permutation"}, {"score": 0.002510277046727927, "phrase": "nnp"}, {"score": 0.0024297565926197505, "phrase": "flowshop_scheduling_problem"}, {"score": 0.0023672002840029517, "phrase": "new_perspective"}, {"score": 0.0023213398100616132, "phrase": "purely_native_approaches"}, {"score": 0.0022763657774198184, "phrase": "proposed_nnp-aco"}, {"score": 0.0022033327475266496, "phrase": "existing_native_approaches"}, {"score": 0.002132637840285576, "phrase": "benchmark_problems"}, {"score": 0.0021049977753042253, "phrase": "demirkol_et_al"}], "paper_keywords": ["Manufacturing systems", " Flow Line", " Ant Colony System (ACS)", " NPFS benchmarks"], "paper_abstract": "The most general flowshop scheduling problem is also addressed in the literature as non-permutation flowshop (NPFS). Current processors are able to cope with the (n!)(m) combinatorial complexity of NPFS scheduling by metaheuristics. After briefly discussing the requirements for a manufacturing layout to be designed and modeled as non-permutation flowshop, a disjunctive graph (digraph) approach is used to build native solutions. The implementation of an Ant Colony Optimization (ACO) algorithm has been described in detail; it has been shown how the biologically inspired mechanisms produce eligible schedules, as opposed to most metaheuristics approaches, which improve permutation solutions. ACO algorithms are an example of native non-permutation (NNP) solutions of the flowshop scheduling problem, opening a new perspective on building purely native approaches. The proposed NNP-ACO has been assessed over existing native approaches improving most makespan upper bounds of the benchmark problems from Demirkol et al. (1998).", "paper_title": "Native metaheuristics for non-permutation flowshop scheduling", "paper_id": "WOS:000344482300002"}