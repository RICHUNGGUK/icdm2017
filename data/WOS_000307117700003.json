{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "many-core_architectures"}, {"score": 0.004715702140552199, "phrase": "case_study"}, {"score": 0.004491970050862321, "phrase": "intel_single-chip_cloud_computer_processor"}, {"score": 0.003964007795174772, "phrase": "initial_experiences"}, {"score": 0.003775803846431323, "phrase": "prototype_architecture"}, {"score": 0.003621588555525458, "phrase": "single_die"}, {"score": 0.0030437738097293296, "phrase": "elemental"}, {"score": 0.002540160379502092, "phrase": "collective_communication"}, {"score": 0.0024533019565858073, "phrase": "porting_effort"}, {"score": 0.002320449502337321, "phrase": "wide_range"}, {"score": 0.0022567398334877847, "phrase": "limited_changes"}, {"score": 0.0022101055924375725, "phrase": "library_code"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["collective communication", " dense linear algebra library", " many-core architecture"], "paper_abstract": "A message passing, distributed-memory parallel computer on a chip is one possible design for future, many-core architectures. We discuss initial experiences with the Intel Single-chip Cloud Computer research processor, which is a prototype architecture that incorporates 48 cores on a single die that can communicate via a small, shared, on-die buffer. The experiment is to port a state-of-the-art, distributed-memory, dense matrix library, Elemental, to this architecture and gain insight from the experience. We show that programmability addressed by this library, especially the proper abstraction for collective communication, greatly aids the porting effort. This enables us to support a wide range of functionality with limited changes to the library code. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Programming many-core architectures - a case study: dense matrix computations on the Intel single-chip cloud computer processor", "paper_id": "WOS:000307117700003"}