{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "abstract_classes"}, {"score": 0.004598933498016774, "phrase": "increasingly_widespread_use"}, {"score": 0.0045464538515249085, "phrase": "object-oriented_libraries"}, {"score": 0.0044688500725247726, "phrase": "resulting_intensive_use"}, {"score": 0.0038492126993451337, "phrase": "standard_execution-based_testing_strategies"}, {"score": 0.003592859432554987, "phrase": "concrete_descendant_class"}, {"score": 0.003334309053314909, "phrase": "structured_approach"}, {"score": 0.003130077012135034, "phrase": "particular_attention"}, {"score": 0.0029214769181390653, "phrase": "abstract_class"}, {"score": 0.0027741761880779535, "phrase": "large_java_programs"}, {"score": 0.002664749302333897, "phrase": "first_study"}, {"score": 0.0025449518236394103, "phrase": "testing_perspective"}, {"score": 0.0025014259919355453, "phrase": "second_study"}, {"score": 0.002416589459425828, "phrase": "testing_strategy"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["abstract classes", " object-oriented testing", " test ordering"], "paper_abstract": "One of the characteristics of the increasingly widespread use of object-oriented libraries and the resulting intensive use of inheritance is the proliferation of dependencies on abstract classes. Since abstract classes cannot be instantiated, they cannot be tested in isolation using standard execution-based testing strategies. A standard approach to testing abstract classes is to instantiate a concrete descendant class and test the features that are inherited. This paper presents a structured approach that supports the testing of features in abstract classes, paying particular attention to ensuring that the features tested are those defined in the abstract class. Two empirical studies are performed on a suite of large Java programs and the results presented. The first study analyses the role of abstract classes from a testing perspective. The second study investigates the impact of the testing strategy on the programs in this suite to demonstrate its feasibility and to comment on the pragmatics of its use. Copyright (c) 2010 John Wiley & Sons, Ltd.", "paper_title": "A testing strategy for abstract classes", "paper_id": "WOS:000302866600002"}