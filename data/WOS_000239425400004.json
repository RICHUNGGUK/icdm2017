{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "open_systems"}, {"score": 0.04437825901136089, "phrase": "component_assumptions"}, {"score": 0.015425145384343777, "phrase": "open_system"}, {"score": 0.013357200733992953, "phrase": "state_space"}, {"score": 0.004529093447865156, "phrase": "verification_time"}, {"score": 0.0042928648367867835, "phrase": "underspecified_components"}, {"score": 0.004179392391349015, "phrase": "hennessy-milner_logic"}, {"score": 0.003961330917648707, "phrase": "modal_transition_systems"}, {"score": 0.003797978483076175, "phrase": "hml."}, {"score": 0.0037546039916845947, "phrase": "explicit_state_space_representation"}, {"score": 0.0037259623657693794, "phrase": "state_space_exploration_based_verification_techniques"}, {"score": 0.0036413370053909886, "phrase": "proof_reuse"}, {"score": 0.0035179764329354877, "phrase": "verification_process"}, {"score": 0.0034777887763821425, "phrase": "interactive_verification"}, {"score": 0.003424916005912503, "phrase": "intuitive_representation"}, {"score": 0.003398780792129312, "phrase": "system_behavior"}, {"score": 0.0033215617190376565, "phrase": "proof_generation"}, {"score": 0.0032836104153151973, "phrase": "automatic_verification"}, {"score": 0.0032336803966384227, "phrase": "hml"}, {"score": 0.0031481164109237636, "phrase": "temporal_assumptions"}, {"score": 0.0029158847555394714, "phrase": "modal_mu-calculus"}, {"score": 0.002860546817196148, "phrase": "two-phase_construction"}, {"score": 0.0028278480051602355, "phrase": "algebraic_open_system_descriptions"}, {"score": 0.0027741761880779535, "phrase": "first_phase"}, {"score": 0.002680114113899346, "phrase": "maximal_model_construction"}, {"score": 0.0026494723416072316, "phrase": "modal_p-calculus"}, {"score": 0.0026091594819333654, "phrase": "second_phase"}, {"score": 0.002444544487772349, "phrase": "complete_state_space"}, {"score": 0.0023346234464901978, "phrase": "single_unknown_component"}, {"score": 0.002272794656458419, "phrase": "dynamic_process_creation"}, {"score": 0.0022382002476510573, "phrase": "open_system_properties"}, {"score": 0.0021622717349518744, "phrase": "proof_system"}, {"score": 0.0021049977753042253, "phrase": "prime_formulae"}], "paper_keywords": [""], "paper_abstract": "When designing an open system, there might be no implementation available for certain components at verification time. For such systems, verification has to be based on assumptions on the underspecified components. When component assumptions are expressed in Hennessy-Milner logic (HML), the state space of open systems can be naturally represented with modal transition systems (NITS), a graphical specification language equiexpressive with HML. Having an explicit state space representation supports state space exploration based verification techniques, Besides, it enables proof reuse and facilitates visualization for the user guiding the verification process. in interactive verification. As an intuitive representation of system behavior, it aids debugging when proof generation fails in automatic verification. However, HML is not expressive enough to capture temporal assumptions. For this purpose, we extend MTSs to represent the state space of open systems where component assumptions are specified in modal mu-calculus. We present a two-phase construction from process algebraic open system descriptions to such state space representations. The first phase deals with component assumptions, and is essentially a maximal model construction for the modal p-calculus. In the second phase, the models obtained are combined according to the structure of the open system to form the complete state space. The construction is sound and complete for systems with a single unknown component and sound for those-without dynamic process creation. For establishing open system properties based on the representation, we present a proof system which is sound and complete for prime formulae.", "paper_title": "State space representation for verification of open systems", "paper_id": "WOS:000239425400004"}