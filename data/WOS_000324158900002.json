{"auto_keywords": [{"score": 0.036015095269722824, "phrase": "termination_detection"}, {"score": 0.00481495049065317, "phrase": "fanout-optimal_fault-tolerant_termination_detection"}, {"score": 0.004157058883925715, "phrase": "distributed_systems"}, {"score": 0.004081385289516914, "phrase": "work_stealing_algorithms"}, {"score": 0.004031699976413366, "phrase": "dynamic_data_exchange"}, {"score": 0.003958299299658418, "phrase": "dynamically_structured_computations"}, {"score": 0.0038154673253945003, "phrase": "growing_supercomputers"}, {"score": 0.003769006950727621, "phrase": "increasing_likelihood"}, {"score": 0.003501846136829077, "phrase": "high-performance_computing_applications"}, {"score": 0.003253560798692431, "phrase": "inevitable_faults"}, {"score": 0.003116913644889395, "phrase": "new_practical_fault_tolerance_schemes"}, {"score": 0.002860546817196148, "phrase": "low_overhead"}, {"score": 0.0027069560455629917, "phrase": "scalable_costs"}, {"score": 0.0025459275963373496, "phrase": "single-process_faults"}, {"score": 0.002409188797323273, "phrase": "multiple_processes"}, {"score": 0.002336414425972225, "phrase": "theoretical_failure_probabilities"}, {"score": 0.002224510044064184, "phrase": "historical_fault_records"}, {"score": 0.002197379785587054, "phrase": "real_machines"}, {"score": 0.0021049977753042253, "phrase": "excellent_overall_survivability"}], "paper_keywords": ["Termination Detection", " Fault Tolerance"], "paper_abstract": "Termination detection is relevant for signaling completion (all processors are idle and no messages are in flight) of many operations in distributed systems, including work stealing algorithms, dynamic data exchange, and dynamically structured computations. In the face of growing supercomputers with increasing likelihood that each job may encounter faults, it is important for high-performance computing applications that rely on termination detection that such an algorithm be able to tolerate the inevitable faults. We provide a trio of new practical fault tolerance schemes for a standard approach to termination detection that are easy to implement, present low overhead in both theory and practice, and have scalable costs when recovering from faults. These schemes tolerate all single-process faults, and are probabilistically tolerant of faults affecting multiple processes. We combine the theoretical failure probabilities we can calculate for each algorithm with historical fault records from real machines to show that these algorithms have excellent overall survivability.", "paper_title": "Adoption Protocols for Fanout-Optimal Fault-Tolerant Termination Detection", "paper_id": "WOS:000324158900002"}