{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "explicit_hamilton_cycle"}, {"score": 0.0047310525657970615, "phrase": "directed_cayley_graph"}, {"score": 0.003853550910385517, "phrase": "jackson"}, {"score": 0.0035707248059325502, "phrase": "eulerian"}, {"score": 0.003508294783174798, "phrase": "knuth"}, {"score": 0.003367077034382727, "phrase": "explicit_construction"}, {"score": 0.0032505921489759224, "phrase": "simple_recursion"}, {"score": 0.0030295361111006866, "phrase": "iterative_algorithm"}, {"score": 0.0028069426877159642, "phrase": "successive_edge"}, {"score": 0.002725740264152553, "phrase": "constant_time"}, {"score": 0.002452333524620638, "phrase": "explicit_universal_cycle"}, {"score": 0.002258745901862197, "phrase": "efficient_algorithm"}, {"score": 0.002129877319760485, "phrase": "circular_array"}, {"score": 0.0021049977753042253, "phrase": "linked_list"}], "paper_keywords": ["Algorithms", " Theory", " Universal cycle", " loopless algorithm"], "paper_abstract": "We show how to construct an explicit Hamilton cycle in the directed Cayley graph (Cay) over right arrow({sigma(n), sigma(n-1)} : S(n)), where sigma(k) is the rotation (1 2 ... k). The existence of such cycles was shown by Jackson [1996] but the proof only shows that a certain directed graph is Eulerian, and Knuth [2005] asks for an explicit construction. We show that a simple recursion describes our Hamilton cycle and that the cycle can be generated by an iterative algorithm that uses O(n) space. Moreover, the algorithm produces each successive edge of the cycle in constant time; such algorithms are said to be loopless. Finally, our Hamilton cycle can be used to construct an explicit universal cycle for the (n - 1)-permutations of a n-set, or as the basis of an efficient algorithm for generating every n-permutation of an n-set within a circular array or linked list.", "paper_title": "An Explicit Universal Cycle for the (n-1)-Permutations of an n-Set", "paper_id": "WOS:000279362000002"}