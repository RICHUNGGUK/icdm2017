{"auto_keywords": [{"score": 0.004765788394931875, "phrase": "modern_computers"}, {"score": 0.004574085781766281, "phrase": "fundamental_unit"}, {"score": 0.004527371799277529, "phrase": "data_access"}, {"score": 0.004435363840720883, "phrase": "decade-long_migration"}, {"score": 0.004235095881928715, "phrase": "compression_technology"}, {"score": 0.004127753467337283, "phrase": "widespread_assumption"}, {"score": 0.004085579055228594, "phrase": "effective_compression_techniques"}, {"score": 0.003574830654211291, "phrase": "word-bounded_codes"}, {"score": 0.0033957904376127187, "phrase": "compression_performance"}, {"score": 0.003143849342926373, "phrase": "information_retrieval_applications"}, {"score": 0.0028807718824400697, "phrase": "excellent_self-skipping_code"}, {"score": 0.0028076592725295646, "phrase": "clear_advantage"}, {"score": 0.0027363971333961967, "phrase": "fast_query_evaluation"}, {"score": 0.0026261108615242557, "phrase": "inverted_index"}, {"score": 0.002585906251354904, "phrase": "large_text_collection"}, {"score": 0.00250732953434891, "phrase": "new_code"}, {"score": 0.0023817863819679827, "phrase": "boolean"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance", " measurement", " index compression", " information retrieval"], "paper_abstract": "Modern computers typically make use of 64-bit words as the fundamental unit of data access. However the decade-long migration from 32-bit architectures has not been reflected in compression technology, because of a widespread assumption that effective compression techniques operate in terms of bits or bytes, rather than words. Here we demonstrate that the use of 64-bit access units, especially in connection with word-bounded codes, does indeed provide the opportunity for improving the compression performance. In particular, we extend several 32-bit word-bounded coding schemes to 64-bit operation and explore their uses in information retrieval applications. Our results show that the Simple-8b approach, a 64-bit word-bounded code, is an excellent self-skipping code, and has a clear advantage over its competitors in supporting fast query evaluation when the data being compressed represents the inverted index for a large text collection. The advantages of the new code also accrue on 32-bit architectures, and for all of Boolean. ranked, and phrase queries; which means that it can be used in any situation. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Index compression using 64-bit words", "paper_id": "WOS:000274946400002"}