{"auto_keywords": [{"score": 0.03860254031762916, "phrase": "scalability_collapse_phenomenon"}, {"score": 0.033316644670367705, "phrase": "locksim"}, {"score": 0.00481495049065317, "phrase": "modeling_spin_lock_contention"}, {"score": 0.00462773520532301, "phrase": "operating_systems"}, {"score": 0.004477270137801732, "phrase": "multicore_systems"}, {"score": 0.004081385289516914, "phrase": "reduced_speedup"}, {"score": 0.003845500924733243, "phrase": "spin_lock_contention"}, {"score": 0.0037699306119313154, "phrase": "effective_way"}, {"score": 0.0035993041437026225, "phrase": "collapse_avoidance_schemes"}, {"score": 0.0035052810710060893, "phrase": "previous_spin_lock_models"}, {"score": 0.002931569771634119, "phrase": "lock-protected_codes"}, {"score": 0.0027803070408286158, "phrase": "shared_hardware_resource_contention"}, {"score": 0.002707620139970122, "phrase": "cache_coherence_protocol"}, {"score": 0.002602127996667857, "phrase": "real-world_workloads"}, {"score": 0.00250073564820402, "phrase": "lock_contention"}, {"score": 0.0024678216843278806, "phrase": "experimental_results"}, {"score": 0.0023249757987087033, "phrase": "better_accuracy"}, {"score": 0.002294369814584028, "phrase": "previous_work"}, {"score": 0.0021049977753042253, "phrase": "collapse_avoidance_methods"}], "paper_keywords": ["Scalability collapse", " lock contention", " operating systems", " event-driven simulator", " multicore"], "paper_abstract": "Spin lock contention in operating systems can limit scalability on multicore systems so significantly that an increase in the number of cores actually leads to reduced speedup (i.e., scalability collapse). Modeling spin lock contention is an effective way to understand the scalability collapse phenomenon and explore collapse avoidance schemes. However, previous spin lock models have disadvantages in accuracy and efficiency. To overcome these drawbacks, this paper proposes LockSim, an event-driven simulator which models both the sequential execution in lock-protected codes (i.e., critical sections) and shared hardware resource contention caused by the cache coherence protocol. Our simulator is verified against real-world workloads with different degrees of spin lock contention. Experimental results suggest that LockSim can reproduce the scalability collapse phenomenon with better accuracy than previous work. Besides, several metrics are also used to characterize this phenomenon and collapse avoidance methods are investigated.", "paper_title": "LockSim: An Event-Driven Simulator for Modeling Spin Lock Contention", "paper_id": "WOS:000348206700018"}