{"auto_keywords": [{"score": 0.049440303515783074, "phrase": "non-functional_requirements"}, {"score": 0.040615957123971876, "phrase": "crosscutting_concerns"}, {"score": 0.03277235897100877, "phrase": "development_effort"}, {"score": 0.00481495049065317, "phrase": "early_aspects"}, {"score": 0.004655924035639928, "phrase": "considerable_part"}, {"score": 0.0046092435167207095, "phrase": "software_development_effort"}, {"score": 0.004563028873351776, "phrase": "good_news"}, {"score": 0.004397487039229447, "phrase": "system_development"}, {"score": 0.004167315942319306, "phrase": "specific_application"}, {"score": 0.004029592719134717, "phrase": "current_application_servers"}, {"score": 0.004002596930301241, "phrase": "middleware_platforms"}, {"score": 0.003949144559926685, "phrase": "configurable_prebuilt_services"}, {"score": 0.003767599364361092, "phrase": "reusable_pattern_solutions"}, {"score": 0.0034755154823256588, "phrase": "pattern_solutions"}, {"score": 0.0033268412940032103, "phrase": "scattered_and_tangled_representations"}, {"score": 0.0031419449938286663, "phrase": "model-driven_techniques"}, {"score": 0.0030482430937467013, "phrase": "reusable_solutions"}, {"score": 0.002840298440413678, "phrase": "first_contribution"}, {"score": 0.0025675372701474035, "phrase": "second_contribution"}, {"score": 0.002541741549046619, "phrase": "use_aspect-orientation"}, {"score": 0.00241658945942583, "phrase": "additional_contribution"}, {"score": 0.0023287359930308864, "phrase": "aspectual_requirements"}, {"score": 0.0023131084326717755, "phrase": "aspect-oriented_software_architectures"}, {"score": 0.0022290085428279846, "phrase": "general_issue"}, {"score": 0.002214048743052355, "phrase": "systematically_relating_requirements"}, {"score": 0.0021263705039915198, "phrase": "toll_gate_case_study"}], "paper_keywords": ["Early aspects", " Model-driven development", " Aspect-Oriented Software Development", " Model transformation"], "paper_abstract": "Currently, non-functional requirements (NFRs) consume a considerable part of the software development effort. The good news is that most of them appear time and again during system development and, luckily, their solutions can be often described as a pattern independently from any specific application or domain. A proof of this are the current application servers and middleware platforms that can provide configurable prebuilt services for managing some of these crosscutting concerns, or aspects. Nevertheless, these reusable pattern solutions presents two shortcomings, among others: (1) they need to be applied manually; and (2) most of these pattern solutions do not use aspect-orientation, and, since NFRs are often crosscutting concerns, this leads to scattered and tangled representations of these concerns. Our approach aims to overcome these limitations by: (1) using model-driven techniques to reduce the development effort associated to systematically apply reusable solutions for satisfying NFRs; and (2) using aspect-orientation to improve the modularization of these crosscutting concerns. Regarding the first contribution, since the portion of a system related to NFRs is usually significant, the reduction on the development effort associated to these NFRs is also significant. Regarding the second contribution, the use aspect-orientation improves maintenance and evolution of the non-functional requirements that are managed as aspects. An additional contribution of our work is to define a mapping and transition from aspectual requirements to aspect-oriented software architectures, which, in turn, contributes to improve the general issue of systematically relating requirements to architecture. Our approach is illustrated by applying it to a Toll Gate case study. (c) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Model-driven development for early aspects", "paper_id": "WOS:000275765900002"}