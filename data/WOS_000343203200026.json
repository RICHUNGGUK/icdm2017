{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linear_temporal_logic"}, {"score": 0.0047468516620285525, "phrase": "automatic_techniques"}, {"score": 0.0046797114400479135, "phrase": "program_verification"}, {"score": 0.004548253531664032, "phrase": "well-known_state_explosion_problem"}, {"score": 0.004389089062127892, "phrase": "classical_approaches"}, {"score": 0.0031845067058084583, "phrase": "needed_fragment"}, {"score": 0.002923214590192792, "phrase": "alternative_automatic_decision_method"}, {"score": 0.0024630345285372958, "phrase": "abstract_interpretation_techniques"}, {"score": 0.0021049977753042253, "phrase": "abstract_semantics"}], "paper_keywords": ["concurrent constraint paradigm", " linear temporal logic", " abstract diagnosis", " decision procedures", " program verification"], "paper_abstract": "Automatic techniques for program verification usually suffer the well-known state explosion problem. Most of the classical approaches are based on browsing the structure of some form of model (which represents the behavior of the program) to check if a given specification is valid. This implies that a part of the model has to be built, and sometimes the needed fragment is quite huge. In this work, we provide an alternative automatic decision method to check whether a given property, specified in a linear temporal logic, is valid w.r.t. a tccp program. Our proposal (based on abstract interpretation techniques) does not require to build any model at all. Our results guarantee correctness but, as usual when using an abstract semantics, completeness is lost.", "paper_title": "Abstract Diagnosis for tccp using a Linear Temporal Logic", "paper_id": "WOS:000343203200026"}