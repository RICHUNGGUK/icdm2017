{"auto_keywords": [{"score": 0.037636006477016856, "phrase": "specification-based_approach"}, {"score": 0.015719716506582538, "phrase": "specification-based_and_cr-based_approaches"}, {"score": 0.014514542286714822, "phrase": "gui_testing"}, {"score": 0.013946562485163948, "phrase": "cr-based_approach"}, {"score": 0.013739267148407577, "phrase": "test_scripts"}, {"score": 0.008285717088614624, "phrase": "event_model"}, {"score": 0.007381849222591115, "phrase": "gtt"}, {"score": 0.0044870272550540415, "phrase": "widely_accepted_methodology"}, {"score": 0.0037423521744765075, "phrase": "test-driven_development"}, {"score": 0.0035048567587934254, "phrase": "gui_behaviors"}, {"score": 0.0034348484776384643, "phrase": "gui_specification_language"}, {"score": 0.0032989853590079153, "phrase": "tdd."}, {"score": 0.003216809732752042, "phrase": "aut"}, {"score": 0.002282166507956957, "phrase": "gui_testing_tool"}, {"score": 0.002214048743052355, "phrase": "java_applications"}, {"score": 0.0021049977753042253, "phrase": "tdd_style"}], "paper_keywords": ["GUI testing", " test-driven development", " test specification", " capture/replay", " Java"], "paper_abstract": "CR (capture and replay) has been a widely accepted methodology for GUI testing. However, a deficiency of a CR-based approach is that test scripts can not be produced before an application under test (AUT) is correctly implemented, which excludes the possibility of doing test-driven development (TDD). An alternative is the specification-based approach, which defines GUI behaviors by using a GUI specification language. A specification-based approach is suitable for doing TDD. However, after the AUT is partially or fully implemented, the specification-based approach becomes less convenient than the CR-based approach, since capturing can be very useful in maintaining test scripts. In this paper, we propose the integration of the specification-based and CR-based approaches so as to incorporate both of their advantages. We define an event model which servers as the core of both the specification language and the capture/replay mechanism. Based on this event model, we implement a GUI testing tool, called GTT, for Java applications. We show how to apply GTT in a TDD style for GUI testing and quantitatively report the benefits of the integration.", "paper_title": "Integration of specification-based and CR-based approaches for GUI testing", "paper_id": "WOS:000259662700001"}