{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_real-time_systems"}, {"score": 0.004475022550508119, "phrase": "data-driven_applications"}, {"score": 0.0040942189695983185, "phrase": "highly_dynamic_tasks"}, {"score": 0.0037653554368382814, "phrase": "distributed_real-time_system"}, {"score": 0.0036873373225096624, "phrase": "control_theory"}, {"score": 0.0035920758080335655, "phrase": "computational_resource_management"}, {"score": 0.0032689949867583633, "phrase": "desired_temporal_behavior"}, {"score": 0.003234934827553253, "phrase": "system_adaptation"}, {"score": 0.0030062165552187086, "phrase": "previous_literature"}, {"score": 0.0027936239349923464, "phrase": "qos_optimization"}, {"score": 0.0027213882346615406, "phrase": "performance_guarantees"}, {"score": 0.002678944072162297, "phrase": "accurate_knowledge"}, {"score": 0.002651015392318126, "phrase": "task_execution_parameters"}, {"score": 0.0025555322596460036, "phrase": "poorly_modeled_environment"}, {"score": 0.0024634797027967203, "phrase": "ad_hoc_algorithms"}, {"score": 0.0022772115643656153, "phrase": "excellent_steady_state_behavior"}, {"score": 0.0021496083700137305, "phrase": "time_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["real-time", " feedback control", " quality of service", " scheduling"], "paper_abstract": "The resource management in distributed real-time systems becomes increasingly unpredictable with the proliferation of data-driven applications. Therefore, it is inefficient to allocate the resources statically to handle a set of highly dynamic tasks whose resource requirements (e.g., execution time) are unknown a prior. In this paper, we build a distributed real-time system based on the control theory, focusing on the computational resource management. Specifically, this work makes three important contributions. First, it allows the designer to specify the desired temporal behavior of system adaptation, such as the speed of convergence. This is in contrast to previous literature, specifying only steady-state metrics, e.g. the deadline miss ratio. Second, unlike QoS optimization approaches, our solution meets performance guarantees with no accurate knowledge of task execution parameters - a key advantage in a poorly modeled environment. Last, in contrast to ad hoc algorithms based on intuition and testing, we rigorously prove that our approach not only has excellent steady state behavior, but also meets stability, overshoot, and settling time requirements. Published by Elsevier Inc.", "paper_title": "Feedback control-based dynamic resource management in distributed real-time systems", "paper_id": "WOS:000247453800007"}