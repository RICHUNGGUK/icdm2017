{"auto_keywords": [{"score": 0.04965786117733892, "phrase": "glite_middleware"}, {"score": 0.04800845694907025, "phrase": "simulation_environment"}, {"score": 0.03800340820588705, "phrase": "scheduling_algorithm"}, {"score": 0.00481495049065317, "phrase": "scheduling_policies"}, {"score": 0.0047306078475683865, "phrase": "grid_scheduling_algorithms"}, {"score": 0.003877329308854808, "phrase": "scheduling_policy"}, {"score": 0.003709595902020469, "phrase": "glite_grid_middleware"}, {"score": 0.00353342812142574, "phrase": "fair_way"}, {"score": 0.003502305158321511, "phrase": "available_resources"}, {"score": 0.003456132182564149, "phrase": "requested_users"}, {"score": 0.003365598242636633, "phrase": "actual_implementation"}, {"score": 0.0032919615578986816, "phrase": "glite"}, {"score": 0.0028699415886017468, "phrase": "internal_feedback_mechanism"}, {"score": 0.002733539375462443, "phrase": "grid_computation_resource"}, {"score": 0.0026501241093379786, "phrase": "different_users"}, {"score": 0.0025465957200502404, "phrase": "actual_fairness"}, {"score": 0.002436289099444074, "phrase": "virtualization_technology"}, {"score": 0.002351485871160907, "phrase": "proof-of-concept_implementation"}, {"score": 0.0022496114364599328, "phrase": "small_glite_testbed"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["grid networks", " scheduling algorithms", " glite middleware"], "paper_abstract": "Grid scheduling algorithms are usually implemented in a simulation environment using tools that hide the complexity of the Grid and assumptions that are not always realistic. In our work, we describe the steps followed, the difficulties encountered and the solutions provided to develop and evaluate a scheduling policy, initially implemented in a simulation environment, in the gLite Grid middleware. Our focus is on a scheduling algorithm that allocates in a fair way the available resources among the requested users or jobs. During the actual implementation of this algorithm in gLite, we observed that the validity of the information used by the scheduler for its decisions affects greatly its performance. To improve the accuracy of this information, we developed an internal feedback mechanism that operates along with the scheduling algorithm. Also, a Grid computation resource cannot be shared concurrently between different users or jobs, making it difficult to provide actual fairness. For this reason we investigated the use of virtualization technology in the gLite middleware. We did a proof-of-concept implementation and performed an experimental evaluation of our scheduling algorithm in a small gLite testbed that proves the validity and applicability of our solutions. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Implementing and evaluating scheduling policies in gLite middleware", "paper_id": "WOS:000314934800003"}