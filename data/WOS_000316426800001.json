{"auto_keywords": [{"score": 0.04764869911719897, "phrase": "simulation_developers"}, {"score": 0.00481495049065317, "phrase": "practical_approach"}, {"score": 0.00466085208934021, "phrase": "federate_architectures"}, {"score": 0.00445332728705756, "phrase": "well-known_architectural_style"}, {"score": 0.0042550030421781605, "phrase": "developer's_perspective"}, {"score": 0.004172722575842674, "phrase": "layered_architecture"}, {"score": 0.004092026656771699, "phrase": "hla-based_simulation"}, {"score": 0.0038843558517333327, "phrase": "clear_separation"}, {"score": 0.003735522846193052, "phrase": "user_interface"}, {"score": 0.003477264432055326, "phrase": "external_system"}, {"score": 0.0033878306639271963, "phrase": "gis_server"}, {"score": 0.0033006894756949776, "phrase": "simulation_logic"}, {"score": 0.0032157824854214313, "phrase": "hla-specific_communication"}, {"score": 0.003133052778244851, "phrase": "layered_simulation_architecture"}, {"score": 0.0027323009127771525, "phrase": "different_programming_language"}, {"score": 0.0026274936167233515, "phrase": "repetitive_and_low-level_implementation_details"}, {"score": 0.0025766103305835115, "phrase": "hla"}, {"score": 0.002351813899450668, "phrase": "current_hla_runtime_infrastructure"}, {"score": 0.002232261129770455, "phrase": "suggested_implementation_practices"}, {"score": 0.0021890091360065897, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed simulation", " High Level Architecture", " Simulation architecture", " Layered architecture style", " Federate architecture"], "paper_abstract": "This article presents a practical approach to the design of federate architectures for the simulation developers by applying a well-known architectural style, layered architecture, from a developer's perspective. Adopting layered architecture for an HLA-based simulation (i.e. a federate) provides a clear separation to the following concerns; the user interface (where the user can be a human or an external system such as a GIS server), the simulation logic, and the HLA-specific communication. Thus, layered simulation architecture allows the simulation developers to focus on each concern separately and gives them the freedom to implement each layer in a different programming language, and to encapsulate the repetitive and low-level implementation details of the HLA federate interface specification. Moreover, the article introduces a wrapper for the current HLA runtime infrastructure, and gives an account of the suggested implementation practices through a case study. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Layered simulation architecture: A practical approach", "paper_id": "WOS:000316426800001"}