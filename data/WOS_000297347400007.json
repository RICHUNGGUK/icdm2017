{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "traffic_patterns"}, {"score": 0.010486200487062856, "phrase": "cluster_utilization"}, {"score": 0.00926616666396764, "phrase": "lblcr"}, {"score": 0.007803445553489871, "phrase": "different_traffic_patterns"}, {"score": 0.00458869631642791, "phrase": "varying_load"}, {"score": 0.004443804951900737, "phrase": "linux"}, {"score": 0.004286171444202565, "phrase": "adaptive_clustering"}, {"score": 0.004234884779773412, "phrase": "key_issue"}, {"score": 0.004101088357088207, "phrase": "cluster_performance"}, {"score": 0.00401961206251868, "phrase": "single_threshold_value"}, {"score": 0.0035067452724203124, "phrase": "high_utilization"}, {"score": 0.0034647524666821614, "phrase": "good_threshold"}, {"score": 0.0032621876512517398, "phrase": "adaptive_clustering_framework"}, {"score": 0.003071429173571846, "phrase": "administrator_intervention"}, {"score": 0.002915125480162171, "phrase": "patterns_change"}, {"score": 0.0028115863316685937, "phrase": "changing_demands"}, {"score": 0.0026577673946415583, "phrase": "similar_patterns"}, {"score": 0.0024524733595572084, "phrase": "autonomous_learning_method"}, {"score": 0.002384422461262006, "phrase": "published_web_traces"}, {"score": 0.0023653276631862958, "phrase": "experimental_results"}, {"score": 0.0023182554418193927, "phrase": "high_performance_scalability"}, {"score": 0.0022812715029149216, "phrase": "different_patterns"}, {"score": 0.0022358683283304533, "phrase": "lblcr-based_clustering"}, {"score": 0.002209060366991921, "phrase": "performance_scalability"}, {"score": 0.0021049977753042253, "phrase": "good_threshold_values"}], "paper_keywords": ["Cluster utilization", " Load and traffic patterns", " Adaptive clustering", " Autonomous traffic learning"], "paper_abstract": "Adaptive clustering aims at improving cluster utilization for varying load and traffic patterns. Locality-based least-connection with replication (LBLCR) scheduling that comes with Linux is designed to help improve cluster utilization through adaptive clustering. A key issue with LBLCR, however, is that cluster performance depends much on a single threshold value that is used to determine adaptation. Once set, the threshold remains fixed, regardless of the load and traffic patterns. If a cluster of PCs is to adapt to different traffic patterns for high utilization, a good threshold has to be selected and used dynamically. We present in this paper an adaptive clustering framework that autonomously learns and adapts to different load and traffic patterns at runtime with no administrator intervention. The cluster is configured once and for all. As the patterns change, the cluster automatically expands/contracts to meet the changing demands. At the same time, the patterns are proactively learned so that when similar patterns emerge in the future, the cluster knows what to do to improve utilization. We have implemented this autonomous learning method and compared it with LBLCR using published Web traces. Experimental results indicate that our autonomous learning method produces high performance scalability and adaptability for different patterns. On the other hand LBLCR-based clustering suffers from performance scalability and adaptability for different traffic patterns since it is not designed to obtain good threshold values and use them at runtime.", "paper_title": "Autonomous learning of load and traffic patterns to improve cluster utilization", "paper_id": "WOS:000297347400007"}