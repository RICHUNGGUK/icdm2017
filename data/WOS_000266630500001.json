{"auto_keywords": [{"score": 0.04604429350769072, "phrase": "dsm"}, {"score": 0.032296002996385874, "phrase": "dsimcluster"}, {"score": 0.03155240566606394, "phrase": "memory_analysis_experiments"}, {"score": 0.00481495049065317, "phrase": "efficient_memory_analysis_experiments"}, {"score": 0.004663636232080366, "phrase": "chip_multiprocessors"}, {"score": 0.004571478018964363, "phrase": "rapid_development"}, {"score": 0.004535124351828787, "phrase": "multicore_clusters"}, {"score": 0.004203803478570494, "phrase": "logically_shared_address_space"}, {"score": 0.004087910779160781, "phrase": "physical_memory_location"}, {"score": 0.004007083686875716, "phrase": "significant_drawback"}, {"score": 0.003959353513286997, "phrase": "dsm_cluster"}, {"score": 0.0038043055953253047, "phrase": "large_shared_memory"}, {"score": 0.00374399358035391, "phrase": "performance_loss"}, {"score": 0.003669941438286456, "phrase": "memory_locality"}, {"score": 0.0035973486787314883, "phrase": "effective_memory_analysis_methodology"}, {"score": 0.0033880439015902476, "phrase": "widely_used_technique"}, {"score": 0.003229374325577207, "phrase": "rapid_advance"}, {"score": 0.0032036590920314725, "phrase": "dsm_implementations"}, {"score": 0.0031402604946939743, "phrase": "simulation_model_designs"}, {"score": 0.002945669860541221, "phrase": "dsm_cluster_system"}, {"score": 0.0028076592725295646, "phrase": "simulation_model"}, {"score": 0.0027192536281209463, "phrase": "automatic_behavioral_verification"}, {"score": 0.0025918235228843444, "phrase": "simulation_results"}, {"score": 0.002560907803820395, "phrase": "technological_advances"}, {"score": 0.0025405019456703325, "phrase": "target_architectures"}, {"score": 0.0024703502756471514, "phrase": "software_level"}, {"score": 0.0024214281919523973, "phrase": "highly_reusable_simulation_components"}, {"score": 0.0023545567809591804, "phrase": "system-oriented_simulation"}, {"score": 0.0021734768728417977, "phrase": "efficient_framework"}, {"score": 0.0021304214257321, "phrase": "dsm_cluster_architecture"}], "paper_keywords": ["distributed-shared memory", " DSM cluster", " memory simulation", " memory analysis"], "paper_abstract": "The emergence of chip multiprocessors is leading to the rapid development of multicore clusters that provide distributed-shared memory (DSM) programming models, so called DSM systems. DSM systems allow applications to access data in a logically shared address space by abstracting away the distinction of physical memory location. However, a significant drawback of a DSM cluster is that it performs poorly on applications that require large shared memory because of the performance loss or overhead caused by memory locality. Consequently, an effective memory analysis methodology is mandatory to quantify the impact of such overhead. In this respect, a widely used technique is simulation. Nevertheless, both the intrinsically difficult design of cluster architectures and the rapid advance of DSM implementations impose a constraint on simulation model designs. In this paper we describe DSiMCluster, a simulation model for memory analysis experiments of a DSM cluster system. We capitalize on the observation that the components of a simulation model have to be highly reusable and provide automatic behavioral verification. That is, in order to maintain the accuracy of simulation results with the technological advances of target architectures, which grow extensively at the software level. We show that highly reusable simulation components can be created by implementing a system-oriented simulation on top of a well-founded and broadly applicable, discrete-event simulation engine. Our experimental results demonstrate that, with these operations, DSiMCluster provides an efficient framework for memory analysis experiments on a DSM cluster architecture within a reconfigurable, customizable and user-friendly environment.", "paper_title": "DSiMCluster: A Simulation Model for Efficient Memory Analysis Experiments of DSM Clusters", "paper_id": "WOS:000266630500001"}