{"auto_keywords": [{"score": 0.04925653227018551, "phrase": "bp"}, {"score": 0.008713584632250167, "phrase": "belief_propagation"}, {"score": 0.008663584816302031, "phrase": "csma_wireless_networks"}, {"score": 0.00848373332959463, "phrase": "gbp"}, {"score": 0.007458916697611681, "phrase": "acsma"}, {"score": 0.007288960679168632, "phrase": "bp-based_algorithms"}, {"score": 0.006801820153555495, "phrase": "temporal_throughput_fluctuations"}, {"score": 0.006274223773386821, "phrase": "different_links"}, {"score": 0.004937612238970141, "phrase": "csma_networks"}, {"score": 0.004677847043645765, "phrase": "efficient_way"}, {"score": 0.004637478829869904, "phrase": "\"inference\"_problems"}, {"score": 0.004544629724830453, "phrase": "bayesian_networks"}, {"score": 0.004527713478995804, "phrase": "distributed_implementation"}, {"score": 0.004518442937844318, "phrase": "markov_random_fields"}, {"score": 0.0044536312768349, "phrase": "great_success"}, {"score": 0.004339293854115301, "phrase": "distributed_nature"}, {"score": 0.004264697351852424, "phrase": "first_attempt"}, {"score": 0.004227879333383761, "phrase": "bp_algorithms"}, {"score": 0.004155190157284551, "phrase": "prior_csma_optimization_algorithms"}, {"score": 0.0033644530302903513, "phrase": "mean_packet_transmission_time"}, {"score": 0.0033257460346754687, "phrase": "mean_backoff_countdown_time"}, {"score": 0.0032590737464194696, "phrase": "inverse-bp_algorithm"}, {"score": 0.0032215751881194328, "phrase": "reverse_problem"}, {"score": 0.003166132209407694, "phrase": "access_intensities"}, {"score": 0.0030580836029381817, "phrase": "bp-adaptive_csma_algorithm"}, {"score": 0.003022890602492506, "phrase": "link_access_intensities"}, {"score": 0.002988101395789399, "phrase": "optimal_system_utility"}, {"score": 0.0029622717081190667, "phrase": "first_two_applications"}, {"score": 0.002945175711537758, "phrase": "np-hard_problems"}, {"score": 0.0029028648824177715, "phrase": "good_approximations"}, {"score": 0.002771500855119101, "phrase": "prior_algorithms"}, {"score": 0.0026156018381676407, "phrase": "generalized_version"}, {"score": 0.002518989593177879, "phrase": "loopy_contention_graph"}, {"score": 0.002370386872018425, "phrase": "\"maximal_clique\"_method"}, {"score": 0.0022240805921303875, "phrase": "one-hop_neighbors"}, {"score": 0.0021049977753042253, "phrase": "real_operation"}], "paper_keywords": ["Belief propagation", " CSMA", " IEEE 802.11"], "paper_abstract": "Belief propagation (BP) is an efficient way to solve \"inference\" problems in graphical models, such as Bayesian networks and Markov random fields. It has found great success in many application areas due to its simplicity, high accuracy, and distributed nature. This paper is a first attempt to apply BP algorithms in CSMA wireless networks. Compared to prior CSMA optimization algorithms such as ACSMA, which are measurement-based, BP-based algorithms are proactive and computational, without the need for network probing and traffic measurement. Consequently, BP-based algorithms are not affected by the temporal throughput fluctuations and can converge faster. Specifically, this paper explores three applications of BP. 1) We show how BP can be used to compute the throughputs of different links in the network given their access intensities, defined as the mean packet transmission time divided by the mean backoff countdown time. 2) We propose an inverse-BP algorithm to solve the reverse problem of how to set the access intensities of different links to meet their target throughputs. 3) We introduce a BP-adaptive CSMA algorithm to find the link access intensities that can achieve optimal system utility. The first two applications are NP-hard problems, and BP provides good approximations to them. The advantage of BP is that it can converge faster compared to prior algorithms like ACSMA, especially in CSMA networks with temporal throughput fluctuations. Furthermore, this paper goes beyond BP and considers a generalized version of it, GBP, to improve accuracy in networks with a loopy contention graph. The distributed implementation of GBP is nontrivial to construct. A contribution of this paper is to show that a \"maximal clique\" method of forming regions in GBP: 1) yields accurate results; and 2) is amenable to distributed implementation in CSMA networks, with messages passed between one-hop neighbors only. We show that both BP and GBP algorithms for all three applications can yield solutions within seconds in real operation.", "paper_title": "Applications of Belief Propagation in CSMA Wireless Networks", "paper_id": "WOS:000307895100022"}