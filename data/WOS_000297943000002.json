{"auto_keywords": [{"score": 0.049779077903973595, "phrase": "java"}, {"score": 0.015719074116237117, "phrase": "high-performance_computing"}, {"score": 0.010257232933976979, "phrase": "mpj_express"}, {"score": 0.00469545352928726, "phrase": "java_programming_language"}, {"score": 0.004651407155355244, "phrase": "considerable_attention"}, {"score": 0.0044792964927609456, "phrase": "high_programming_productivity"}, {"score": 0.004180061441294476, "phrase": "high-performance_java_message-passing_library"}, {"score": 0.0040000913037139115, "phrase": "java_message-passing_applications"}, {"score": 0.003937704225837731, "phrase": "communications_performance"}, {"score": 0.0038278398921822404, "phrase": "low-level_communication_devices"}, {"score": 0.003791901285142797, "phrase": "message-passing_libraries"}, {"score": 0.003756298824153418, "phrase": "important_research_issue"}, {"score": 0.0037093463810112656, "phrase": "hpc._mpj_express"}, {"score": 0.003651477256755136, "phrase": "high-performance_parallel_java_applications"}, {"score": 0.003418089698750318, "phrase": "second_one"}, {"score": 0.003354180941665089, "phrase": "myrinet_express_library"}, {"score": 0.0032914631538239003, "phrase": "third_one"}, {"score": 0.0032708180619317423, "phrase": "thread-based_shared_memory_communications"}, {"score": 0.003149630099034765, "phrase": "previous_performance_evaluations"}, {"score": 0.0030907252217934477, "phrase": "buffering_layer"}, {"score": 0.0029761900030306483, "phrase": "copying_overhead"}, {"score": 0.0029113423551788264, "phrase": "main_performance_penalties"}, {"score": 0.0026490090146527407, "phrase": "communication_protocol"}, {"score": 0.0026158609712563737, "phrase": "hpc_hardware_support"}, {"score": 0.0025831266474492308, "phrase": "java_message-passing_communications"}, {"score": 0.0023651468875880628, "phrase": "gigabit_ethernet"}, {"score": 0.002350298241921987, "phrase": "scalable_coherent_interface"}, {"score": 0.002335543468748389, "phrase": "myrinet"}, {"score": 0.002313582249239217, "phrase": "infini-band"}, {"score": 0.0022631392664577256, "phrase": "shared_memory_multicore_scenario"}, {"score": 0.002241858171569679, "phrase": "reported_communication_overhead_reduction"}, {"score": 0.0022207767448896515, "phrase": "upcoming_incorporation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Message Passing in Java (MPJ)", " Java for high-performance computing (HPC)", " high-speed networks", " shared memory multicore communication", " performance evaluation"], "paper_abstract": "Since its release, the Java programming language has attracted considerable attention from the high-performance computing (HPC) community because of its portability, high programming productivity, and built-in multithreading and networking support. As a consequence, several initiatives have been taken to develop a high-performance Java message-passing library to program distributed memory architectures, such as clusters. The performance of Java message-passing applications relies heavily on the communications performance. Thus, the design and implementation of low-level communication devices that support message-passing libraries is an important research issue in Java for HPC. MPJ Express is our Java message-passing implementation for developing high-performance parallel Java applications. Its public release currently contains three communication devices: the first one is built using the Java New Input/Output (NIO) package for the TCP/IP; the second one is specifically designed for the Myrinet Express library on Myrinet; and the third one supports thread-based shared memory communications. Although these devices have been successfully deployed in many production environments, previous performance evaluations of MPJ Express suggest that the buffering layer, tightly coupled with these devices, incurs a certain degree of copying overhead, which represents one of the main performance penalties. This paper presents a more efficient Java message-passing communications device, based on Java Input/Output sockets, that avoids this buffering overhead. Moreover, this device implements several strategies, both in the communication protocol and in the HPC hardware support, which optimizes Java message-passing communications. In order to evaluate its benefits, this paper analyzes the performance of this device comparatively with other Java and native message-passing libraries on various high-speed networks, such as Gigabit Ethernet, Scalable Coherent Interface, Myrinet, and Infini-Band, as well as on a shared memory multicore scenario. The reported communication overhead reduction encourages the upcoming incorporation of this device in MPJ Express (http://mpj-express.org). Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Device level communication libraries for high-performance computing in Java", "paper_id": "WOS:000297943000002"}