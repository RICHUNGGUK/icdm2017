{"auto_keywords": [{"score": 0.048886363593293486, "phrase": "natural_deduction"}, {"score": 0.0397880192961765, "phrase": "herbelin"}, {"score": 0.00481495049065317, "phrase": "type_theory"}, {"score": 0.0046361494357125355, "phrase": "pure_type_systems"}, {"score": 0.004435885269134359, "phrase": "wide_range"}, {"score": 0.004380265418103948, "phrase": "type_theories"}, {"score": 0.004035282762331904, "phrase": "pure_type_sequent_calculi"}, {"score": 0.0038608730929994696, "phrase": "sequent_calculus"}, {"score": 0.0034244153725855, "phrase": "normalisation_procedure"}, {"score": 0.003235193484261443, "phrase": "local_rewrite_rules"}, {"score": 0.0031148723927633955, "phrase": "explicit_substitutions"}, {"score": 0.0030371471832258317, "phrase": "subject_reduction"}, {"score": 0.002905752676763996, "phrase": "ptsc"}, {"score": 0.002481085648977413, "phrase": "conversion_rules"}, {"score": 0.0024038923350585962, "phrase": "logical_rules"}, {"score": 0.0023438664524018634, "phrase": "syntax-directed_rules"}, {"score": 0.002228263890334039, "phrase": "basic_proof-search_tactics"}, {"score": 0.0021317885325570604, "phrase": "root-first_application"}], "paper_keywords": ["type theory", " PTS", " sequent calculus", " proof-search", " strong normalisation"], "paper_abstract": "Based on natural deduction, Pure Type Systems (PTS) can express a wide range of type theories. In order to express proof-search in such theories, we introduce the Pure Type Sequent Calculi (PTSC) by enriching a sequent calculus due to Herbelin, adapted to proof-search and strongly related to natural deduction. PTSC are equipped with a normalisation procedure, adapted from Herbelin's and defined by local rewrite rules as in Cut-elimination, using explicit substitutions. It satisfies Subject Reduction and it is confluent. A PTSC is logically equivalent to its corresponding PTS, and the former is strongly normalising if and only if the latter is. We show how the conversion rules can be incorporated inside logical rules (as in syntax-directed rules for type checking), so that basic proof-search tactics in type theory are merely the root-first application of our inference rules.", "paper_title": "A sequent calculus for type theory", "paper_id": "WOS:000241587300029"}