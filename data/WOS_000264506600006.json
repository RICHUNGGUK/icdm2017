{"auto_keywords": [{"score": 0.003584025547693836, "phrase": "compiler_writers"}, {"score": 0.0031100973266506163, "phrase": "wider_functional_programming_community"}, {"score": 0.002233301265743633, "phrase": "systematic_recipe"}, {"score": 0.0021049977753042253, "phrase": "equational_reasoning_technique"}], "paper_keywords": [""], "paper_abstract": "The worker/wrapper transformation is a technique for changing the type of a computation, usually with the aim of improving its performance. It has been used by compiler writers for many years, but the technique is little known in the wider functional programming community, and has never been described precisely. In this article we explain, formalise and explore the generality of the worker/wrapper transformation. We also provide a systematic recipe for its use as an equational reasoning technique for improving the performance of programs, and illustrate the power of this recipe using a range of examples.", "paper_title": "The worker/wrapper transformation", "paper_id": "WOS:000264506600006"}