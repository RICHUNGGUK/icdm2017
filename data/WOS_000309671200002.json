{"auto_keywords": [{"score": 0.04132712815039597, "phrase": "security-critical_software"}, {"score": 0.007918783649202617, "phrase": "invisios"}, {"score": 0.0048149562117234136, "phrase": "lightweight"}, {"score": 0.0045471315699087385, "phrase": "privileged_software"}, {"score": 0.004403054828362479, "phrase": "operating_system"}, {"score": 0.004187917910692495, "phrase": "security-critical_user_applications"}, {"score": 0.004084307764140389, "phrase": "underlying_os."}, {"score": 0.0036815763368083197, "phrase": "underlying_processors"}, {"score": 0.0032016639006812856, "phrase": "invisios_software_architecture"}, {"score": 0.0031335830806256777, "phrase": "self-contained_software_module"}, {"score": 0.0029802879302375986, "phrase": "kernel-level_privileges"}, {"score": 0.0027543636132088332, "phrase": "invisios_hardware_architecture"}, {"score": 0.002686124293881678, "phrase": "hardware_components"}, {"score": 0.002619571161767134, "phrase": "secure_core"}, {"score": 0.002377916348320401, "phrase": "full-system_emulator"}, {"score": 0.0023609537906482455, "phrase": "linux"}, {"score": 0.002327310963701377, "phrase": "proposed_software"}, {"score": 0.0023106824101273554, "phrase": "hardware_enhancements"}, {"score": 0.0022453451864218477, "phrase": "commercial_cryptographic_library"}, {"score": 0.0021662599012740127, "phrase": "secure_execution"}, {"score": 0.0021049977753042253, "phrase": "resource-constrained_embedded_systems"}], "paper_keywords": ["Security", " Design", " Performance", " Secure execution", " isolated execution", " security vulnerabilities", " operating system"], "paper_abstract": "Many information security attacks exploit vulnerabilities in \"trusted\" and privileged software executing on the system, such as the operating system (OS). On the other hand, most security mechanisms provide no immunity to security-critical user applications if vulnerabilities are present in the underlying OS. While technologies have been proposed that facilitate isolation of security-critical software, they require either significant computational resources and are hence not applicable to many resource-constrained embedded systems, or necessitate extensive redesign of the underlying processors and hardware. In this work, we propose INVISIOS: a lightweight, minimally intrusive hardware-software architecture to make the execution of security-critical software invisible to the OS, and hence protected from its vulnerabilities. The INVISIOS software architecture encapsulates the security-critical software into a self-contained software module. While this module is part of the kernel and is run with kernel-level privileges, its code, data, and execution are transparent to and protected from the rest of the kernel. The INVISIOS hardware architecture consists of simple add-on hardware components that are responsible for bootstrapping the secure core, ensuring that it is exercised by applications in only permitted ways, and enforcing the isolation of its code and data. We implemented INVISIOS by enhancing a full-system emulator and Linux to model the proposed software and hardware enhancements, and applied it to protect a commercial cryptographic library. Our experiments demonstrate that INVISIOS is capable of facilitating secure execution at very small overheads, making it suitable for resource-constrained embedded systems and systems-on-chip.", "paper_title": "INVISIOS: A Lightweight, Minimally Intrusive Secure Execution Environment", "paper_id": "WOS:000309671200002"}