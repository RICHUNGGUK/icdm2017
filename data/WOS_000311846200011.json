{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "adaptive_stack_management"}, {"score": 0.0461275073104745, "phrase": "sensor_networks"}, {"score": 0.010962493828031352, "phrase": "sensmart"}, {"score": 0.009998938284852836, "phrase": "memory_isolation"}, {"score": 0.0047517225918491226, "phrase": "multitasking_sensor_networks"}, {"score": 0.004658426838467567, "phrase": "networked_application_environment"}, {"score": 0.004477270137801732, "phrase": "multitasking_operating_systems"}, {"score": 0.004081385289516914, "phrase": "traditional_stack_management_techniques"}, {"score": 0.0039748192550806815, "phrase": "small-memory_systems"}, {"score": 0.003922580121023413, "phrase": "virtual_memory_support"}, {"score": 0.0036714667610391535, "phrase": "binary_translation"}, {"score": 0.0035993041437026225, "phrase": "new_kernel_runtime"}, {"score": 0.0035052810710060893, "phrase": "efficient_os_designs"}, {"score": 0.0034363735647539267, "phrase": "constrained_platforms"}, {"score": 0.003153041030690117, "phrase": "present_new_os_design_techniques"}, {"score": 0.003091036449708673, "phrase": "preemptive_multitask_scheduling"}, {"score": 0.0028739078688746374, "phrase": "automatic_stack_relocation"}, {"score": 0.0028360962841331634, "phrase": "usual_sensornet_platforms"}, {"score": 0.002636828502928141, "phrase": "tasks'_stack_usage"}, {"score": 0.002175913488493802, "phrase": "significantly_better_capability"}, {"score": 0.0021330830123432614, "phrase": "concurrent_tasks"}], "paper_keywords": ["Multitasking", " memory management", " stack adaptivity", " binary translation", " kernel"], "paper_abstract": "The networked application environment has motivated the development of multitasking operating systems for sensor networks and other low-power electronic devices, but their multitasking capability is severely limited because traditional stack management techniques perform poorly on small-memory systems without virtual memory support. In this paper, we show that combining binary translation and a new kernel runtime can lead to efficient OS designs on resource constrained platforms. We introduce SenSmart, a multitasking OS for sensor networks, and present new OS design techniques for supporting preemptive multitask scheduling, memory isolation, and adaptive stack management. Our solution provides memory isolation and automatic stack relocation on usual sensornet platforms. The adaptive stack management frees programmers from the burden of estimating tasks' stack usage, yet it enables SenSmart to schedule and run more tasks than other multitasking OSes for sensor networks. We have implemented SenSmart on MICA2/MICAz motes. Evaluation shows that SenSmart has a significantly better capability in managing concurrent tasks than other sensornet operating systems.", "paper_title": "SenSmart: Adaptive Stack Management for Multitasking Sensor Networks", "paper_id": "WOS:000311846200011"}