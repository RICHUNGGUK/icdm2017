{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "act-r"}, {"score": 0.04699208556069404, "phrase": "computational_models"}, {"score": 0.004709333998298903, "phrase": "architectural_space"}, {"score": 0.004238307626560739, "phrase": "numerical_parameters"}, {"score": 0.003608266640131664, "phrase": "well-known_cognitive_architecture"}, {"score": 0.0033386027090946627, "phrase": "python"}, {"score": 0.0031405975280029913, "phrase": "possible_models"}, {"score": 0.0030376623293574905, "phrase": "core_act-r_theory"}, {"score": 0.0028260302580927856, "phrase": "basic_act-r_components"}, {"score": 0.002763919794139171, "phrase": "declarative_memory_system"}, {"score": 0.0027333769432036905, "phrase": "new_ways"}, {"score": 0.002585638506308606, "phrase": "new_visual_attention_system"}, {"score": 0.0025570607111118793, "phrase": "python_act-r"}, {"score": 0.0024594969044952108, "phrase": "nition_syntax"}, {"score": 0.0023394947463129642, "phrase": "act-r_models"}, {"score": 0.0023136311468961125, "phrase": "new_act-r_components"}, {"score": 0.0022377394845878268, "phrase": "explicit_the_processes_speci"}, {"score": 0.0021763973978248005, "phrase": "act-r_theory"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b._v."}], "paper_keywords": ["cognitive modeling", " ACT-R", " cognitive architectures", " philosophy of modeling"], "paper_abstract": "Evaluating variations in the structure of computational models of cognition is as important as evaluating variations in the numerical parameters of such models. However, computational models tend not to be organized in such a way as to directly support such research. To address this need, we have taken the well-known cognitive architecture ACT-R, reduced it to its fundamental components, and reconstructed it. Our new system, Python ACT-R, facilitates exploration of the space of possible models and architectures based on the core ACT-R theory. The result has enabled us to examine the possibility of using basic ACT-R components such as the declarative memory system in new ways; for example, as the basis for a new visual attention system. Python ACT-R allows the same model de. nition syntax to be used to de. ne both ACT-R models and new ACT-R components, as well as making explicit the processes speci. fied by the ACT-R theory. (C) 2007 Elsevier B. V. All rights reserved.", "paper_title": "Deconstructing and reconstructing ACT-R: Exploring the architectural space", "paper_id": "WOS:000250383600009"}