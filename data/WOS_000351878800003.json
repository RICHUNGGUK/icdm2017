{"auto_keywords": [{"score": 0.03710460658481701, "phrase": "android"}, {"score": 0.00481495049065317, "phrase": "malware_detection"}, {"score": 0.004774530554776604, "phrase": "android_systems"}, {"score": 0.0047145329604366395, "phrase": "system_call_filtering"}, {"score": 0.004674952036988355, "phrase": "abstraction_process"}, {"score": 0.0046161999598320486, "phrase": "anomaly-based_malware_detection_techniques"}, {"score": 0.0041194351307673556, "phrase": "normal_or_abnormal_behavior"}, {"score": 0.0040334640350288, "phrase": "major_impacts"}, {"score": 0.003982741546775355, "phrase": "accuracy_performance"}, {"score": 0.003932654396285872, "phrase": "detection_techniques"}, {"score": 0.003660452313567116, "phrase": "classical_anomaly-based_malware_detection_approach"}, {"score": 0.003568932067237836, "phrase": "normal_behavior"}, {"score": 0.003407026489727146, "phrase": "time_and_space_complexities"}, {"score": 0.0033641551050434663, "phrase": "selected_approach"}, {"score": 0.0030657684627749364, "phrase": "irrelevant_system"}, {"score": 0.0030017207229983385, "phrase": "main_behavior"}, {"score": 0.0029639342245188203, "phrase": "android_application"}, {"score": 0.00266693888510356, "phrase": "canonical_normal_behavior_model"}, {"score": 0.0024405312482831646, "phrase": "last_line"}, {"score": 0.002389514188569084, "phrase": "in-depth_protection_strategy"}, {"score": 0.0021682027434117095, "phrase": "selected_malware_detection_approach"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["anomaly malware detection", " Android security", " system calls filtering", " normal behavior database"], "paper_abstract": "Improving anomaly-based malware detection techniques has been widely studied in recent years. Most of these efforts have focused on the dataset available for analysis and/or the algorithms used to distinguish between normal or abnormal behavior. These factors have major impacts on the accuracy performance of the detection techniques as well as on their time and space complexities. In this paper, we revisit a classical anomaly-based malware detection approach (i.e., database of normal behavior) analyzing Android system calls with two conflicting objectives: reducing the time and space complexities of the selected approach without decreasing its accuracy performance. To achieve this goal, we introduce a filtering and abstraction process, which (i) removes irrelevant system calls to describe the main behavior of an Android application and (ii) unifies system calls having the same functionality but different names. This process is used to build a database describing a canonical normal behavior model of Android applications. This model is based on the 200 most popular free Android applications available in the Android market. It represents the last line of defense of an in-depth protection strategy for smartphone systems. The results of our experimentations show that our filtering and abstraction process has positive impacts on the performance and the accuracy of the selected malware detection approach. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Enhancing malware detection for Android systems using a system call filtering and abstraction process", "paper_id": "WOS:000351878800003"}