{"auto_keywords": [{"score": 0.02649163169134449, "phrase": "spin"}, {"score": 0.00481495049065317, "phrase": "software_intensive_embedded_systems"}, {"score": 0.00466016686289196, "phrase": "architecture_description_language"}, {"score": 0.004552648949390462, "phrase": "safety-critical_and_software-intensive_embedded_systems"}, {"score": 0.004426882270402403, "phrase": "formalized_and_traceable_description"}, {"score": 0.00436530211426514, "phrase": "wide_range"}, {"score": 0.004324723240308028, "phrase": "engineering_concerns"}, {"score": 0.004264558080356621, "phrase": "entire_lifecycle"}, {"score": 0.004224911726496726, "phrase": "system_development"}, {"score": 0.0037592362369401546, "phrase": "correct-by-construction_system_functions"}, {"score": 0.003672427620845944, "phrase": "seamless_and_cost_efficient_way"}, {"score": 0.0035542408902458677, "phrase": "recent_advancement"}, {"score": 0.0034559594248079807, "phrase": "architecture-centric_analysis"}, {"score": 0.0033919477901198716, "phrase": "complex_behaviors"}, {"score": 0.003313592421224647, "phrase": "requirements_engineering"}, {"score": 0.0032827577713351336, "phrase": "application_design"}, {"score": 0.0032370412139943808, "phrase": "safety_engineering"}, {"score": 0.003162252895465901, "phrase": "architecture_centric"}, {"score": 0.0031182092708983184, "phrase": "behavior_descriptions"}, {"score": 0.002989714021608139, "phrase": "standardized_design_artifacts"}, {"score": 0.002948066398723126, "phrase": "multiple_levels"}, {"score": 0.002853124436286832, "phrase": "language_design"}, {"score": 0.0027741761880779535, "phrase": "theoretical_underpinning"}, {"score": 0.0027483472371835865, "phrase": "tool_implementation"}, {"score": 0.002514625755809045, "phrase": "east-adl_behavior_models"}, {"score": 0.002456486927713543, "phrase": "logic_model_checking"}, {"score": 0.0023223663501882917, "phrase": "computer_science"}, {"score": 0.002300734266971646, "phrase": "electronic_engineering"}, {"score": 0.002237036807966899, "phrase": "model-based_incremental_system_development"}, {"score": 0.002154835714714195, "phrase": "embedded_systems"}], "paper_keywords": ["EAST-ADL", " Embedded system (ES)", " Model-based development (MBD)", " Architecture description language (ADL)", " Analytical modeling", " Model transformation", " Model checking", " AUTOSAR", " ISO26262"], "paper_abstract": "EAST-ADL is a domain specific Architecture Description Language (ADL) for safety-critical and software-intensive embedded systems. The language allows a formalized and traceable description of a wide range of engineering concerns throughout the entire lifecycle of system development. This makes it possible to fully utilize the leverage of state-of-the-art methods and tools for the development of correct-by-construction system functions and components in a seamless and cost efficient way. This paper focuses on the recent advancement of EAST-ADL in supporting an architecture-centric analysis, verification&validation of complex behaviors for the purposes of requirements engineering, application design, and safety engineering. The approach is architecture centric because all behavior descriptions are formalized and connected to a set of standardized design artifacts sitting at multiple levels of abstractions. We present the language design to support this, the theoretical underpinning and tool implementation. To show the capability of EAST-ADL, we also introduce an algorithm and its implementation for transforming the EAST-ADL behavior models to SPIN models for logic model checking. Exploiting mature state-of-the-art technologies from computer science, electronic engineering, and other related domains for a model-based incremental system development, the contribution enables the developers of embedded systems and software to maintain various engineering concerns coherently using EAST-ADL.", "paper_title": "An architectural approach to the analysis, verification and validation of software intensive embedded systems", "paper_id": "WOS:000322708600002"}