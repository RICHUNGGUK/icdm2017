{"auto_keywords": [{"score": 0.031806280910128736, "phrase": "best_values"}, {"score": 0.03151036962346514, "phrase": "control_parameters"}, {"score": 0.00481495049065317, "phrase": "multistage_hybrid_flow-shops"}, {"score": 0.004633429997452688, "phrase": "hybrid_flow_shop_scheduling_problems"}, {"score": 0.0043738432231020885, "phrase": "parallel_machine_scheduling_problems"}, {"score": 0.004311241567238011, "phrase": "task_scheduling_problem"}, {"score": 0.004108942392772092, "phrase": "general_task_graph"}, {"score": 0.004011366422179016, "phrase": "multiprocessor_system"}, {"score": 0.003934970057482768, "phrase": "schedule_length"}, {"score": 0.0038415095105632157, "phrase": "hybrid_flow_shop_scheduling"}, {"score": 0.0037158817217321618, "phrase": "np"}, {"score": 0.0035399770257915466, "phrase": "effective_parallel_greedy_algorithm"}, {"score": 0.0034892684482068347, "phrase": "hfsmt_problem"}, {"score": 0.0034558655164987134, "phrase": "parallel_greedy_algorithm"}, {"score": 0.0034227939811460237, "phrase": "pga"}, {"score": 0.003138874040786261, "phrase": "hfsmt_problems"}, {"score": 0.0030938932434437178, "phrase": "preliminary_test"}, {"score": 0.00266510562382701, "phrase": "full_factorial_experimental_design"}, {"score": 0.0026142814606853037, "phrase": "computational_results"}, {"score": 0.0025521085778978042, "phrase": "earlier_works"}, {"score": 0.002527654365712841, "phrase": "oguz_et_al"}, {"score": 0.002329009499335603, "phrase": "proposed_parallel_greedy_algorithm_approach"}, {"score": 0.002251813863195168, "phrase": "reduced_total_completion_time"}, {"score": 0.0021563019696857768, "phrase": "attempted_problems"}], "paper_keywords": ["Hybrid flow shop", " Multiprocessor tasks scheduling problems", " Parallel greedy algorithm"], "paper_abstract": "Hybrid flow shop scheduling problems have a special structure combining some elements of both the flow shop and the parallel machine scheduling problems. Multiprocessor task scheduling problem can be stated as finding a schedule for a general task graph to execute on a multiprocessor system so that the schedule length can be minimized. Hybrid Flow Shop Scheduling with Multiprocessor Task (HFSMT) problem is known to be NP-hard. In this study we present an effective parallel greedy algorithm to solve HFSMT problem. Parallel greedy algorithm (PGA) is applied by two phases iteratively, called destruction and construction. Four constructive heuristic methods are proposed to solve HFSMT problems. A preliminary test is performed to set the best values of control parameters, namely population size, subgroups number, and iteration number. The best values of control parameters and operators are determined by a full factorial experimental design using our PGA program. Computational results are compared with the earlier works of Oguz et al. [1,3], and Oguz [2]. The results indicate that the proposed parallel greedy algorithm approach is very effective in terms of reduced total completion time or makespan (C(max)) for the attempted problems. (C) 2010 Elsevier B. V. All rights reserved.", "paper_title": "Multiprocessor task scheduling in multistage hybrid flow-shops: A parallel greedy algorithm approach", "paper_id": "WOS:000281591100031"}