{"auto_keywords": [{"score": 0.040829522077622776, "phrase": "software_binaries"}, {"score": 0.00481495049065317, "phrase": "mapping_software_binaries"}, {"score": 0.004728874038094706, "phrase": "new_applications"}, {"score": 0.004694873827535293, "phrase": "embedded_communications"}, {"score": 0.004661116930794176, "phrase": "control_systems"}, {"score": 0.004610934029355486, "phrase": "computational_limits"}, {"score": 0.004577777897335174, "phrase": "digital_signal_processing"}, {"score": 0.004544905007495455, "phrase": "dsp"}, {"score": 0.004415523687947897, "phrase": "increasing_need"}, {"score": 0.004383766516923386, "phrase": "software_applications"}, {"score": 0.004213123914295882, "phrase": "hardware-software_codesign_system"}, {"score": 0.004137761530535196, "phrase": "high-level_source_code"}, {"score": 0.003699579190650754, "phrase": "retargetable_freedom_compiler"}, {"score": 0.0036202697222281373, "phrase": "dsp_software_binaries"}, {"score": 0.003581252556182843, "phrase": "-transfer_level"}, {"score": 0.0035044780806970806, "phrase": "verilog"}, {"score": 0.0034541965053691307, "phrase": "field-programmable_gate_arrays"}, {"score": 0.003392363211686023, "phrase": "standalone_or_system-on-chip_implementations"}, {"score": 0.003283830127906969, "phrase": "novel_algorithms"}, {"score": 0.0032601856292942106, "phrase": "alias_analysis"}, {"score": 0.0032367108248520277, "phrase": "data_dependency_analysis"}, {"score": 0.0030548779592763824, "phrase": "experimental_results"}, {"score": 0.0030328769643087066, "phrase": "resource_usage"}, {"score": 0.0029146656133501544, "phrase": "vliw"}, {"score": 0.002760836859397696, "phrase": "simulink_demo_library"}, {"score": 0.002721201438773336, "phrase": "commonly_used_dsp_applications"}, {"score": 0.0026628240859554297, "phrase": "viterbi"}, {"score": 0.002634101962496702, "phrase": "jpeg"}, {"score": 0.002558985036330194, "phrase": "rtl_code"}, {"score": 0.002522240133079871, "phrase": "xilinx_virtex_ii"}, {"score": 0.0025040670106143336, "phrase": "altera"}, {"score": 0.0024503217593801587, "phrase": "overall_performance_gains"}, {"score": 0.0023804491500749106, "phrase": "hardware_implementations"}, {"score": 0.0023042157412517333, "phrase": "aware_compiler_techniques"}, {"score": 0.002151183757599893, "phrase": "intermediate_representations"}, {"score": 0.002127965733093433, "phrase": "high-level_language"}, {"score": 0.0021049977753042253, "phrase": "efficient_hardware_implementations"}], "paper_keywords": ["binary translation", " compiler", " decompilation", " hardware-software codesign", " high-level synthesis", " reconfigurable computing"], "paper_abstract": "As new applications in embedded communications and control systems push the computational limits of digital signal processing (DSP) functions, there will be an increasing need for software applications to be migrated to hardware in the form of a hardware-software codesign system. In many cases, access to the high-level source code may not be available. It is thus desirable to have a technology to translate the software binaries intended for processors to hardware implementations. This paper provides details on the retargetable FREEDOM compiler. The compiler automatically translates DSP software binaries to register-transfer level (RTL) VHDL and Verilog for implementation on field-programmable gate arrays (FPGAs) as standalone or system-on-chip implementations. We describe the underlying optimizations and some novel algorithms for alias analysis, data dependency analysis, memory optimizations, procedure call recovery, and back-end code scheduling. Experimental results on resource usage and performance are shown for several program binaries intended for the Texas Instruments C6211 DSP (VLIW) and the ARM 922T reduced instruction set computer (RISC) processors. Implementation results for four kernels from the Simulink demo library and others from commonly used DSP applications, such as MPEG-4, Viterbi, and JPEG are also discussed. The compiler generated RTL code is mapped to Xilinx Virtex II and Altera Stratix FPGAs. We record overall performance gains of 1.5-26.9 x for the hardware implementations of the kernels. Comparisons with the power aware compiler techniques (PACT) high-level synthesis compiler are used to show that software binaries can be used as intermediate representations from any high-level language and generate efficient hardware implementations.", "paper_title": "An overview of a compiler for mapping software binaries to hardware", "paper_id": "WOS:000250447700001"}