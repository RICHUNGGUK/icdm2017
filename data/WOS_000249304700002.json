{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cml"}, {"score": 0.00914950190033052, "phrase": "small_devices"}, {"score": 0.004610058444728656, "phrase": "-functional_requirements"}, {"score": 0.004469042910390712, "phrase": "program_size"}, {"score": 0.004199766284749713, "phrase": "software_systems"}, {"score": 0.004046020290832207, "phrase": "mobile_phones"}, {"score": 0.003946650265907885, "phrase": "slow_processors"}, {"score": 0.0038737214010638745, "phrase": "energy_constraints"}, {"score": 0.003802135020791801, "phrase": "c_programming_language"}, {"score": 0.003357435261066107, "phrase": "functional_software_correctness"}, {"score": 0.0030204580407008214, "phrase": "specification_language"}, {"score": 0.0028917056916949744, "phrase": "c_modeling_language"}, {"score": 0.002803104254950008, "phrase": "non-functional_requirements"}, {"score": 0.00265038878247831, "phrase": "contract_technique"}, {"score": 0.0026013505538490223, "phrase": "additional_contribution"}, {"score": 0.002474961375646351, "phrase": "hard_real-time_systems"}, {"score": 0.002384206251320424, "phrase": "first_application"}, {"score": 0.00234008214709385, "phrase": "cml."}, {"score": 0.00231111848128734, "phrase": "practical_usage"}, {"score": 0.002212535878761148, "phrase": "case_study"}, {"score": 0.0021446993452098597, "phrase": "real_application"}, {"score": 0.0021049977753042253, "phrase": "vehicle_monitoring_system"}], "paper_keywords": ["specification language", " non-functional requirements", " C programming language"], "paper_abstract": "Non-functional requirements such as performance, program size, and energy consumption significantly affect the quality of software systems. Small devices like PDAs and mobile phones have little memory, slow processors, and energy constraints. The C programming language has been the choice of many programmers when developing application for small devices. On the other hand, the need for functional software correctness has derived several specification languages that adopt the Design by Contract (DBC) technique. In this work we propose a specification language for C, called CML ( C Modeling Language), focused on non-functional requirements. CML is inspired on the Design By Contract technique. An additional contribution is a veri. cation tool for hard real-time systems. The tool is the first application developed for CML. The practical usage of CML is presented through a case study, which is a real application for a vehicle monitoring system.", "paper_title": "CML: C modeling language", "paper_id": "WOS:000249304700002"}