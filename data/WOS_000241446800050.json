{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "service_ontology"}, {"score": 0.04522176534199055, "phrase": "owl-s_service_model_ontology"}, {"score": 0.004751216062917875, "phrase": "uml_diagrams"}, {"score": 0.004688321299229397, "phrase": "semantic_web_services"}, {"score": 0.004386063799793622, "phrase": "automatic_generation"}, {"score": 0.003968675046544738, "phrase": "atomic_services"}, {"score": 0.0038385328968387664, "phrase": "iope"}, {"score": 0.00378767277402891, "phrase": "uml_class_diagram"}, {"score": 0.0035197152758635344, "phrase": "uml_state-chart_diagram"}, {"score": 0.0034499761530433, "phrase": "xslt"}, {"score": 0.003359119985242403, "phrase": "acquired_information"}, {"score": 0.0030391594477173485, "phrase": "composite_services"}, {"score": 0.0029988599391845517, "phrase": "uml_state-chart_primitives"}, {"score": 0.002881130228859848, "phrase": "generated_service_ontology"}, {"score": 0.002572001496778222, "phrase": "familiar_environment"}, {"score": 0.00235813005446246, "phrase": "service_development"}, {"score": 0.0021765303008812057, "phrase": "gui"}, {"score": 0.0021333110194180997, "phrase": "complex_language"}, {"score": 0.002104998402294158, "phrase": "ocl."}], "paper_keywords": ["ontology", " semantic web", " OWL-S", " state-chart", " and UML"], "paper_abstract": "We present in this paper the methodology for automatic generation of OWL-S service model ontology along with results and issues. First we extract information related to atomic services and their properties such as IOPE from UML class diagram, and retrieve information related to composition of services from UML state-chart diagram. Then XSLT applications utilize the acquired information to generate the OWL-S service model ontology through the predefined mappings between OWL-S constructs for composite services and UML state-chart primitives. For the justification of generated service ontology several validation checks are performed. Our service ontology generation method is fully automatic and effective in that it is performed in familiar environment to developers and information needed to generate service ontology is provided necessarily during service development. It is also noticeable to facilitate representing the condition with GUI rather than complex language like OCL.", "paper_title": "Automatic generation of service ontology from UML diagrams for semantic web services", "paper_id": "WOS:000241446800050"}