{"auto_keywords": [{"score": 0.049153885406092224, "phrase": "dcs"}, {"score": 0.014730097065094027, "phrase": "functional_density"}, {"score": 0.008460549300896231, "phrase": "dcs_implementation"}, {"score": 0.007217607566462754, "phrase": "profiling_methodology"}, {"score": 0.0060373126745390995, "phrase": "dynamic_behaviour"}, {"score": 0.00481495049065317, "phrase": "dynamic_circuit_specialization_opportunities"}, {"score": 0.004783730450730986, "phrase": "rtl_code"}, {"score": 0.0047527118741586055, "phrase": "dynamic_circuit_specialization"}, {"score": 0.00466085208934021, "phrase": "field-programmable_gate_array"}, {"score": 0.004438861041839594, "phrase": "reasonable_amount"}, {"score": 0.004338898899247236, "phrase": "smaller_and_faster_fpga_circuit"}, {"score": 0.004213662826578328, "phrase": "new_circuit"}, {"score": 0.004145692507886442, "phrase": "fpga"}, {"score": 0.004118751115632515, "phrase": "runtime_reconfiguration"}, {"score": 0.003735522846193052, "phrase": "original_implementation"}, {"score": 0.0033006894756949776, "phrase": "extensive_results"}, {"score": 0.003236802914194731, "phrase": "register-transfer_level"}, {"score": 0.002973904674745238, "phrase": "area_efficiency"}, {"score": 0.002804478352027886, "phrase": "first_step"}, {"score": 0.002653313402950335, "phrase": "good_parameter_candidates"}, {"score": 0.0025349467677077803, "phrase": "second_stage"}, {"score": 0.002413964586947992, "phrase": "original_design"}, {"score": 0.0023441581629788347, "phrase": "profiling_tool"}, {"score": 0.0022763657774198184, "phrase": "execution_time"}], "paper_keywords": ["Field-Programmable Gate Array", " Runtime Reconfiguration", " Computer-Aided Design", " Dynamic circuit specialization", " RTL profiling"], "paper_abstract": "Dynamic Circuit Specialization (DCS) optimizes a Field-Programmable Gate Array (FPGA) design by assuming a set of its input signals are constant for a reasonable amount of time, leading to a smaller and faster FPGA circuit. When the signals actually change, a new circuit is loaded into the FPGA through runtime reconfiguration. The signals the design is specialized for are called parameters. For certain designs, parameters can be selected so the DCS implementation is both smaller and faster than the original implementation. However, DCS also introduces an overhead that is difficult for the designer to take into account, making it hard to determine whether a design is improved by DCS or not. This article presents extensive results on a profiling methodology that analyses Register-Transfer Level (RTL) implementations of applications to check if DCS would be beneficial. It proposes to use the functional density as a measure for the area efficiency of an implementation, as this measure contains both the overhead and the gains of a DCS implementation. The first step of the methodology is to analyse the dynamic behaviour of signals in the design, to find good parameter candidates. The overhead of DCS is highly dependent on this dynamic behaviour. A second stage calculates the functional density for each candidate and compares it to the functional density of the original design. The profiling methodology resulted in three implementations of a profiling tool, the DCS-RTL profiler. The execution time, accuracy, and the quality of each implementation is assessed based on data from 10 RTL designs. All designs, except for the two 16-bit adaptable Finite Impulse Response (FIR) filters, are analysed in 1 hour or less.", "paper_title": "Identification of Dynamic Circuit Specialization Opportunities in RTL Code", "paper_id": "WOS:000351237600004"}