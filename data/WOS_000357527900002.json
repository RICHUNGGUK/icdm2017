{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_management"}, {"score": 0.04929460594219637, "phrase": "industry_model"}, {"score": 0.004658426838467567, "phrase": "knowledge_model"}, {"score": 0.0045820747375409435, "phrase": "network_model"}, {"score": 0.004384504920139083, "phrase": "software_development"}, {"score": 0.00433645229352341, "phrase": "software_firms"}, {"score": 0.0039269071382230444, "phrase": "carnegie_mellon_university"}, {"score": 0.0036553070575015344, "phrase": "well-understood_difficulties"}, {"score": 0.0033651019362620866, "phrase": "modern_management_theory"}, {"score": 0.003309877074892399, "phrase": "governing_assumptions"}, {"score": 0.0032376465741070274, "phrase": "organizational_improvement"}, {"score": 0.0031845067058084583, "phrase": "cmm_approach"}, {"score": 0.002996992362027833, "phrase": "software_management_improvement"}, {"score": 0.002915437843874821, "phrase": "dialectic_approach"}, {"score": 0.0028675712105299496, "phrase": "antithetical_assumptions"}, {"score": 0.00282048824450047, "phrase": "configuration_approach"}, {"score": 0.002758907973783665, "phrase": "different_assumptions"}, {"score": 0.0027286224888843956, "phrase": "alternative_assumption_platforms"}, {"score": 0.002470547930651519, "phrase": "better_foundations"}, {"score": 0.00240328454980006, "phrase": "software_managements"}, {"score": 0.0022994427535192514, "phrase": "rapid_technology_change"}, {"score": 0.0022492129111567824, "phrase": "assumption_platforms"}], "paper_keywords": ["Software management", " Software process improvement", " Systems development"], "paper_abstract": "Thinking about improving the management of software development in software firms has been dominated by one approach: the capability maturity model (CMM) devised and administered at Carnegie Mellon University. Although widely known and used, there are a number of well-understood difficulties and limitations with this approach. This article examines, through the lens of modern management theory, the governing assumptions about management and organizational improvement behind the CMM approach. It characterizes this assumption set as the industry model of software management improvement. We take a dialectic approach to propose antithetical assumptions and a configuration approach to weave these different assumptions into alternative assumption platforms: the knowledge model and the network model. These two models, we suggest, might be better foundations for some types of software managements in a world responding to globalization and rapid technology change. If these assumption platforms were used to underpin improvements in software management, we ask, what kinds of approaches would they lead to?", "paper_title": "Improving software management: the industry model, the knowledge model, the network model", "paper_id": "WOS:000357527900002"}