{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "probability_distributions"}, {"score": 0.004722254884093624, "phrase": "dtmc."}, {"score": 0.004631335513513859, "phrase": "new_probabilistic_temporal_logic"}, {"score": 0.004326624385772596, "phrase": "probability_mass_functions"}, {"score": 0.0034760655218366, "phrase": "markov_chain"}, {"score": 0.003092842645798083, "phrase": "potential_initial_states"}, {"score": 0.0030480018094535158, "phrase": "final_state"}, {"score": 0.0029602552900111407, "phrase": "model_checking_algorithm"}, {"score": 0.002917331114260319, "phrase": "iltl_properties"}, {"score": 0.0028471655497661528, "phrase": "existing_model_checking_techniques"}, {"score": 0.002725081358527507, "phrase": "computational_paths"}, {"score": 0.00259554612218815, "phrase": "single_path"}, {"score": 0.002570385604065795, "phrase": "pmf_transitions"}, {"score": 0.00247215300812495, "phrase": "complete_analysis"}, {"score": 0.002436289099444074, "phrase": "expected_behaviors"}, {"score": 0.0024126686412257407, "phrase": "large-scale_systems"}, {"score": 0.002389276641014013, "phrase": "desirable_system_parameters"}, {"score": 0.0022756672722130424, "phrase": "negated_goal"}, {"score": 0.0021780349459687622, "phrase": "iltl_model_checking"}, {"score": 0.0021049977753042253, "phrase": "software_reliability"}], "paper_keywords": ["Probabilistic model checking", " linear temporal logic", " Discrete Time Markov Chain", " pharmacokinetics"], "paper_abstract": "We propose a new probabilistic temporal logic, iLTL, which captures properties of systems whose state can be represented by probability mass functions (pmfs). Using iLTL, we can specify reachability to a state (i.e., a pmf), as well as properties representing the aggregate (expected) behavior of a system. We then consider a class of systems whose transitions are governed by a Markov Chain-in this case, the set of states a system may be in is specified by the transitions of pmfs from all potential initial states to the final state. We then provide a model checking algorithm to check iLTL properties of such systems. Unlike existing model checking techniques, which either compute the portions of the computational paths that satisfy a specification or evaluate properties along a single path of pmf transitions, our model checking technique enables us to do a complete analysis on the expected behaviors of large-scale systems. Desirable system parameters may also be found as a counterexample of a negated goal. Finally, we illustrate the usefulness of iLTL model checking by means of two examples: assessing software reliability and ensuring the results of administering a drug.", "paper_title": "Verifying the Evolution of Probability Distributions Governed by a DTMC", "paper_id": "WOS:000286676700009"}