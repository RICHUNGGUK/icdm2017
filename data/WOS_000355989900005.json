{"auto_keywords": [{"score": 0.035998676944574544, "phrase": "filter_replication"}, {"score": 0.03142889696830305, "phrase": "co-lab"}, {"score": 0.00481495049065317, "phrase": "optimal_load_balancing"}, {"score": 0.004576253356889219, "phrase": "performance_degradation"}, {"score": 0.004518442937844318, "phrase": "poor_scalability"}, {"score": 0.004294381488413906, "phrase": "uneven_load_distribution"}, {"score": 0.004240116703465252, "phrase": "real-world_applications"}, {"score": 0.0041074234667687875, "phrase": "link_failure"}, {"score": 0.003953639783762917, "phrase": "replication_techniques"}, {"score": 0.003805591825381666, "phrase": "community-based_load_balancing"}, {"score": 0.003639835714755229, "phrase": "novel_approach"}, {"score": 0.003503497128638099, "phrase": "inter-community_level"}, {"score": 0.0033508547759861186, "phrase": "intra-community_level"}, {"score": 0.0032253056091816465, "phrase": "dynamic_distribution"}, {"score": 0.003144222265269426, "phrase": "publication_and_subscription_services"}, {"score": 0.0030651710672229926, "phrase": "run_time"}, {"score": 0.0030071857666598193, "phrase": "proposed_method"}, {"score": 0.002733260122876447, "phrase": "network_performance"}, {"score": 0.0025646139644088803, "phrase": "consideration_interest_similarity"}, {"score": 0.00227225841515826, "phrase": "highly_overloaded_brokers"}, {"score": 0.0022434880661725493, "phrase": "performance_evaluations"}, {"score": 0.0021731423856364003, "phrase": "promising_advantages"}, {"score": 0.0021319959284827896, "phrase": "relatively_better_load_balance"}, {"score": 0.0021049977753042253, "phrase": "reduced_overall_load"}], "paper_keywords": ["Load balancing", " publish/subscribe", " community", " event dissemination", " fault-tolerance"], "paper_abstract": "Distributed publish/subscribe systems are poised with challenges of performance degradation and poor scalability. This is typically caused by an uneven load distribution of real-world applications and the susceptibility of link failure in networks. Partitioning and replication techniques have been implemented by exploring community-based load balancing to cope with such issues. The novel approach herein exploits offloading at the inter-community level as well as filter replication at the intra-community level. This results in the dynamic distribution and forwarding of publication and subscription services among brokers during run time. The proposed method, Co-Lab (COmmunity-based LoAd Balancing), seeks to improve the network performance by clustering brokers in a community by taking into consideration interest similarity and filter replication. It attempts to effectively achieve a more consistent and uniform load distribution among brokers and to circumvent the occurrence of highly overloaded brokers. Performance evaluations indicate that Co-Lab has promising advantages by achieving relatively better load balance, reduced overall load and robustness against failures.", "paper_title": "Community-Based Event Dissemination with Optimal Load Balancing", "paper_id": "WOS:000355989900005"}