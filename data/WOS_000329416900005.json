{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "embedded_systems"}, {"score": 0.04650901009291314, "phrase": "proposed_architecture"}, {"score": 0.0317638439001368, "phrase": "data_dependencies"}, {"score": 0.0046987973264610685, "phrase": "lightweight_reconfigurable_dual-core_architecture"}, {"score": 0.003912112659326054, "phrase": "diverse_workloads"}, {"score": 0.0038645966233348933, "phrase": "proposed_design"}, {"score": 0.003562186600028245, "phrase": "instruction_analyzer"}, {"score": 0.003419943984098415, "phrase": "order_cores"}, {"score": 0.003378385493203297, "phrase": "role_switching"}, {"score": 0.003088617973198433, "phrase": "proposed_dispatching_rules"}, {"score": 0.0030518981263434343, "phrase": "ia"}, {"score": 0.002881793492919646, "phrase": "statically_scheduled_superscalar_processor"}, {"score": 0.0028006988338192375, "phrase": "existing_forwarding_paths"}, {"score": 0.002755384932325921, "phrase": "high-area-cost_inter-core_operand-switching_crossbars"}, {"score": 0.002613103872300205, "phrase": "statically_scheduled_superscalar_manner"}, {"score": 0.0024480094603893175, "phrase": "mibench_suite"}, {"score": 0.002274684393868218, "phrase": "homogeneous_dual-core_processor"}, {"score": 0.00224701149477484, "phrase": "hyperscalar_dual-core_processor"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Reconfigurable hardwares", " MIMD processors", " Dynamic multi-core", " Superscalar", " CMP", " Chip multiprocessors"], "paper_abstract": "This paper proposes a lightweight reconfigurable dual-core architecture for embedded systems, called hyperscalar dual-core architecture. The proposed architecture can play three different roles (a 2-issue statically scheduled superscalar processor, a homogeneous dual-core processor, or a standalone single-core processor), allowing embedded systems to accommodate diverse workloads. The proposed design uses four extended instructions to enable programmers to dynamically switch the roles of the proposed architecture. This paper also presents an instruction analyzer (IA) that connects two scalar in-order cores to handle role switching. The design of IA makes it possible for the two cores to work together like a 2-issue statically scheduled superscalar processor. Based on the proposed dispatching rules, the IA dispatches instructions with data dependencies to the same core. Since two cores act like a statically scheduled superscalar processor, they can resolve data dependencies using existing forwarding paths without introducing the high-area-cost inter-core operand-switching crossbars. Simulation results show that when the proposed architecture works in a statically scheduled superscalar manner, it achieves a 26% higher instructions per cycle (IPC) averaged across all 29 benchmarks from the MiBench suite than a scalar in-order core. The increases in area and power to extend a homogeneous dual-core processor to a hyperscalar dual-core processor are only 1.8% and 1.75%, respectively, using 90 nm CMOS technology. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A hyperscalar dual-core architecture for embedded systems", "paper_id": "WOS:000329416900005"}