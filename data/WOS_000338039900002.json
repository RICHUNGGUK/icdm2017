{"auto_keywords": [{"score": 0.037251025708521186, "phrase": "random_k-d_trees"}, {"score": 0.03169457813505632, "phrase": "k-d_tree"}, {"score": 0.00481495049065317, "phrase": "k-dimensional_binary_search_trees"}, {"score": 0.004666043394407466, "phrase": "general_purpose"}, {"score": 0.004651407155355244, "phrase": "multidimensional_data_structures"}, {"score": 0.004593317752310294, "phrase": "k-d_trees"}, {"score": 0.004381841876150705, "phrase": "i-th_smallest_element"}, {"score": 0.003483211883149014, "phrase": "expected_number"}, {"score": 0.0034288585177917066, "phrase": "find-rank"}, {"score": 0.00292051932649827, "phrase": "select-by-rank"}, {"score": 0.002708029282786675, "phrase": "explicit_form"}, {"score": 0.0025255551469780067, "phrase": "k"}, {"score": 0.0023951255255435272, "phrase": "specific_coordinate_j"}, {"score": 0.0022207767448896515, "phrase": "average-case_analysis"}, {"score": 0.0021998931213841567, "phrase": "partial_match_search"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["Multidimensional data structures", " selection", " K-dimensional search trees", " partial match", " probabilistic analysis of algorithms"], "paper_abstract": "In this work we show how to augment general purpose multidimensional data structures, such as K-d trees, to efficiently support search by rank (that is, to locate the i-th smallest element along the j-th coordinate, for given i and j) and to find the rank of a given item along a given coordinate. To do so, we introduce two simple, practical and very flexible algorithms - Select-by-Rank and Find-Rank - with very little overhead. Both algorithms can be easily implemented and adapted to several spatial indexes, although their analysis is far from trivial. We are able to show that for random K-d trees of size n the expected number of nodes visited by Find-Rank is Pn,i=(n1-1/K) for i=o(n) or i=n-o(n), and Pn,i=fK(i/n)center dot n+o(n) for i=xn+o(n) (with 0<x<1), where 1-1/K<1 depends on the dimension K and the variant of K-d tree under consideration. We also show that Select-by-Rank visits gK(i/n)center dot nlnn+O(n) nodes on average, where i=xn+o(n) is the given rank and the exponent is as above. We give the explicit form of the functions fK(x) and gK(x), both are bounded in [0, 1] and they depend on K, on the variant of K-d tree under consideration, and, eventually, on the specific coordinate j for which we execute our algorithms. As a byproduct of the analysis of our algorithms, but no less important, we give the average-case analysis of a partial match search in random K-d trees when the query is not random. (c) 2012 Wiley Periodicals, Inc. Random Struct. Alg., 45, 14-37, 2014", "paper_title": "Selection by rank in K-dimensional binary search trees", "paper_id": "WOS:000338039900002"}