{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "javascript"}, {"score": 0.006630449954396267, "phrase": "jsref"}, {"score": 0.004603244077348199, "phrase": "client-side_applications"}, {"score": 0.004090577229368418, "phrase": "ecma_standardisation_process"}, {"score": 0.00389938952177746, "phrase": "jscert"}, {"score": 0.003717528595128948, "phrase": "ecma_standards"}, {"score": 0.0035941231858949035, "phrase": "trusted_reference"}, {"score": 0.0035539019235553897, "phrase": "high-level_language_compilation"}, {"score": 0.0033405704229694656, "phrase": "high-assurance_proofs"}, {"score": 0.003104849179057156, "phrase": "current_ecma_standard"}, {"score": 0.00305285084207725, "phrase": "coq_proof_assistant"}, {"score": 0.002853404398126963, "phrase": "coq"}, {"score": 0.0028214428420466737, "phrase": "ocaml"}, {"score": 0.002743105561254975, "phrase": "coq_proof"}, {"score": 0.00250671559509626, "phrase": "ecma"}, {"score": 0.0023560952790080943, "phrase": "comparatively_accurate_formulation"}, {"score": 0.0023166075278110237, "phrase": "english_standard"}, {"score": 0.0021288561076024844, "phrase": "modern_techniques"}, {"score": 0.0021049977753042253, "phrase": "mechanised_specification"}], "paper_keywords": ["JavaScript", " mechanised semantics", " Coq"], "paper_abstract": "JavaScript is the most widely used web language for client-side applications. Whilst the development of JavaScript was initially just led by implementation, there is now increasing momentum behind the ECMA standardisation process. The time is ripe for a formal, mechanised specification of JavaScript, to clarify ambiguities in the ECMA standards, to serve as a trusted reference for high-level language compilation and JavaScript implementations, and to provide a platform for high-assurance proofs of language properties. We present JSCert, a formalisation of the current ECMA standard in the Coq proof assistant, and JSRef, a reference interpreter for JavaScript extracted from Coq to OCaml. We give a Coq proof that JSRef is correct with respect to JSCert and assess JSRef using test262, the ECMA conformance test suite. Our methodology ensures that JSCert is a comparatively accurate formulation of the English standard, which will only improve as time goes on. We have demonstrated that modern techniques of mechanised specification can handle the complexity of JavaScript.", "paper_title": "A Trusted Mechanised JavaScript Specification", "paper_id": "WOS:000331120500009"}