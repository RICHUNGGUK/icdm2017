{"auto_keywords": [{"score": 0.04315058072719692, "phrase": "global_variables"}, {"score": 0.00481495049065317, "phrase": "linux_case_study"}, {"score": 0.003988901168289797, "phrase": "pointer_variables"}, {"score": 0.0036753171449945654, "phrase": "global_variable"}, {"score": 0.0030944828434567966, "phrase": "quality_metrics"}, {"score": 0.00219311232069446, "phrase": "case_study"}, {"score": 0.002157433262687853, "phrase": "common_coupling"}, {"score": 0.0021049977753042253, "phrase": "linux_kernel"}], "paper_keywords": ["common coupling", " aliasing", " pointer variables", " Linux", " global variables", " definition-use analysis"], "paper_abstract": "Both common coupling and pointer variables can exert a deleterious effect on the quality of software. The situation is exacerbated when global variables are assigned to pointer variables, that is, when an alias to a global variable is created. When this occurs, the number of global variables increases, and it becomes considerably harder to compute quality metrics correctly. However, unless aliasing is taken into account, variables may incorrectly appear to be unreferenced (neither defined nor used), or to be used without being defined. These ideas are illustrated by means of a case study of common coupling in the Linux kernel.", "paper_title": "Common coupling and pointer variables, with application to a Linux case study", "paper_id": "WOS:000243927000007"}