{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "leader-follower_facility_problem"}, {"score": 0.034500325105776955, "phrase": "tluego"}, {"score": 0.0035216195857272403, "phrase": "single_facility"}, {"score": 0.0033177813460815346, "phrase": "subpopulation-based_evolutionary_algorithm"}, {"score": 0.00307944332532505, "phrase": "hard-to-solve_global_optimization_problem"}, {"score": 0.002944715025443487, "phrase": "high_computational_effort"}, {"score": 0.002836942411239067, "phrase": "small-size_problems"}, {"score": 0.002574788013427524, "phrase": "distributed_memory_programming_algorithm"}, {"score": 0.0025178072071268534, "phrase": "shared_memory_programming_algorithm"}, {"score": 0.0021049977753042253, "phrase": "larger_instances"}], "paper_keywords": ["Nonlinear bi-level programming problem", " Evolutionary algorithm", " High performance computing", " Distributed memory", " Shared memory"], "paper_abstract": "A leader-follower facility problem is considered in this paper. The objective is to maximize the profit obtained by a chain (the leader) knowing that a competitor (the follower) will react by locating another single facility after the leader locates its own facility. A subpopulation-based evolutionary algorithm called TLUEGO was recently proposed to cope with this hard-to-solve global optimization problem. However, it requires high computational effort, even to manage small-size problems. In this work, three parallelizations of TLUEGO are proposed, a distributed memory programming algorithm, a shared memory programming algorithm, and a hybrid of the two previous algorithms, which not only allow us to obtain the solution faster, but also to solve larger instances.", "paper_title": "Solving a leader-follower facility problem via parallel evolutionary approaches", "paper_id": "WOS:000344552400009"}