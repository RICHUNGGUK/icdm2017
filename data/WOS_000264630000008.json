{"auto_keywords": [{"score": 0.030563692294780374, "phrase": "proposed_finite_field_accumulator"}, {"score": 0.00481495049065317, "phrase": "efficient_implementation_of_accumulation"}, {"score": 0.004769958800452922, "phrase": "finite_field_over_gf"}, {"score": 0.004594137808658537, "phrase": "finite_field_accumulation"}, {"score": 0.004201991568145053, "phrase": "finite_field_arithmetic"}, {"score": 0.004028054020045027, "phrase": "simple_but_highly_useful_modification"}, {"score": 0.0039716833701918365, "phrase": "conventional_hardware_implementation"}, {"score": 0.003897742942358768, "phrase": "finite_field"}, {"score": 0.003548111729206587, "phrase": "proposed_design"}, {"score": 0.00348202932445197, "phrase": "accumulation_operation"}, {"score": 0.003306559295382181, "phrase": "m._number"}, {"score": 0.0032756158688245, "phrase": "xor_gates"}, {"score": 0.0032449610741097992, "phrase": "equal_number"}, {"score": 0.0031845067058084583, "phrase": "dependent_loop_structures"}, {"score": 0.003139903872290182, "phrase": "conventional_design"}, {"score": 0.002752513434446804, "phrase": "bit-serial_inter-conversion"}, {"score": 0.002675914969626753, "phrase": "normal_basis_representation"}, {"score": 0.0025892330566358503, "phrase": "area-time_complexity"}, {"score": 0.0024356148906608025, "phrase": "corresponding_existing_structures"}, {"score": 0.0023018971010079704, "phrase": "involve"}, {"score": 0.0022168460543913787, "phrase": "corresponding_existing_multipliers"}, {"score": 0.0021755038991725147, "phrase": "existing_design"}, {"score": 0.0021551222226685648, "phrase": "bit-serial_basis_conversion"}, {"score": 0.0021049977753042253, "phrase": "nearly_twice_area-time_complexity"}], "paper_keywords": ["Elliptic curve cryptography (ECC)", " error control coding", " finite field", " finite field addition", " finite field multiplication", " galois field", " VLSI"], "paper_abstract": "Finite field accumulation is the simplest of all the finite field operations, but at the same time, it is one of the most frequently encountered operations in finite field arithmetic. In this paper, we present a simple but highly useful modification of the conventional hardware implementation of accumulation in finite field over GF(2(m)). The critical path, as well as, the hardware-complexity are reduced in the proposed design by performing the accumulation operation using m number of T flip-flops instead of using a combination of m. number of XOR gates with equal number of D flip-flops in dependent loop structures. The conventional design is found to involve nearly 39% more area, 53% more delay, and 40% more maximum ac power consumption compared with the proposed accumulator. The proposed finite field accumulator is used further for the implementation of serial/parallel polynomial-basis finite field multiplication and bit-serial inter-conversion between polynomial basis representation and normal basis representation over GF(2(m)). The area-time complexity of the proposed bit-serial/parallel multiplier is less than half of the best of the corresponding existing structures. The structure proposed for digit-serial/parallel multiplication for trinomials is found to Involve nearly 56% less area-time complexity compared with the best of the corresponding existing multipliers; and the existing design of bit-serial basis conversion is found to involve nearly twice area-time complexity compared with the proposed design using the proposed finite field accumulator.", "paper_title": "On Efficient Implementation of Accumulation in Finite Field Over GF (2(m)) and its Applications", "paper_id": "WOS:000264630000008"}