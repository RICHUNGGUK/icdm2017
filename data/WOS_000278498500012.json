{"auto_keywords": [{"score": 0.0471913809101942, "phrase": "leader_election_algorithm"}, {"score": 0.022256425156748177, "phrase": "anonymous_networks"}, {"score": 0.010482114215254227, "phrase": "leader_election_problem"}, {"score": 0.008442462920310125, "phrase": "space_complexity"}, {"score": 0.00481495049065317, "phrase": "anonymous_networks."}, {"score": 0.002444333100610621, "phrase": "maximum_number"}, {"score": 0.002414082940963702, "phrase": "adjacent_processors"}, {"score": 0.0023546984428119864, "phrase": "maximum_size"}, {"score": 0.0021049977753042253, "phrase": "arbitrarily_fixed_constant_n"}], "paper_keywords": ["Distributed computing", " anonymous networks", " leader election problem", " space complexity"], "paper_abstract": "The leader election problem is unsolvable for some anonymous networks. A leader election algorithm for anonymous networks thus elects a leader whenever it is possible; if it is impossible, the algorithm reports this fact. This paper investigates the space complexity of the leader election problem in anonymous networks, where the space complexity is measured by the size (in the number of bits) of memory per processor used by a leader election algorithm. We first observe that Omega(M + log d) bits are necessary and then show that O(n log d) bits are sufficient to construct a leader election algorithm that works on any network, where n,d and M are the number of processors, the maximum number of adjacent processors, and the maximum size (in bits) of a message, respectively. We next show that, for any arbitrarily fixed constant n, O(1) bits are sufficient to construct a leader election algorithm that works in any network of size n.", "paper_title": "THE SPACE COMPLEXITY OF LEADER ELECTION IN ANONYMOUS NETWORKS", "paper_id": "WOS:000278498500012"}