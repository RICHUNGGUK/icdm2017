{"auto_keywords": [{"score": 0.0393378573740974, "phrase": "topology-transparent_scheduling_algorithms"}, {"score": 0.02389839112054486, "phrase": "network_topology"}, {"score": 0.00481495049065317, "phrase": "topology-transparent_scheduling"}, {"score": 0.004133055661437163, "phrase": "delay_guarantees"}, {"score": 0.004059438255358923, "phrase": "mobile_multihop_networks"}, {"score": 0.0033914308417007316, "phrase": "topology-dependent_scheduling_algorithms"}, {"score": 0.003071965703296204, "phrase": "assigned_and_unassigned_slots"}, {"score": 0.0025660347613972573, "phrase": "proposed_topology-transparent_scheduling_algorithm"}, {"score": 0.0023241387549221408, "phrase": "topology-dependent_algorithms"}, {"score": 0.0021049977753042253, "phrase": "proposed_algorithm"}], "paper_keywords": ["Topology-transparent scheduling", " topology-dependent scheduling", " efficiency"], "paper_abstract": "Topology-transparent scheduling algorithms are oblivious to the network topology changes and can provide throughput and delay guarantees in mobile multihop networks. However, it has been argued that topology-transparent scheduling algorithms are inefficient when the network is static, compared to topology-dependent scheduling algorithms. In this paper, we propose to utilize both assigned and unassigned slots efficiently to boost the performance of topology-transparent scheduling algorithms. We conclude that, in certain cases, the performance of the proposed topology-transparent scheduling algorithm can be comparable to or better than that of some topology-dependent algorithms even when the network topology remains unchanged. Yet, the proposed algorithm also works even when the network topology is dynamic.", "paper_title": "Is Topology-Transparent Scheduling Really Inefficient in Static Multihop Networks?", "paper_id": "WOS:000209697100021"}