{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "range_aggregation"}, {"score": 0.004731638279336065, "phrase": "paper_studies"}, {"score": 0.004438250823243621, "phrase": "range_aggregate_query"}, {"score": 0.004361428012479218, "phrase": "multiple_datasets"}, {"score": 0.004020066537823032, "phrase": "queried_datasets"}, {"score": 0.003859500298805362, "phrase": "large_number"}, {"score": 0.0036838048761094933, "phrase": "candidate_datasets"}, {"score": 0.003516079377293321, "phrase": "query_cost"}, {"score": 0.003259604990188875, "phrase": "fully-dynamic_data_structure"}, {"score": 0.003039445153076014, "phrase": "bundled_range_aggregation"}, {"score": 0.002917931350071647, "phrase": "linear_space"}, {"score": 0.00249293148301837, "phrase": "total_size"}, {"score": 0.0023932142697579506, "phrase": "disk_page_size"}, {"score": 0.0021799789348982516, "phrase": "practical_efficiency"}, {"score": 0.0021049977753042253, "phrase": "extensive_experiments"}], "paper_keywords": ["Aggregation", " range search", " index"], "paper_abstract": "This paper studies bundled range aggregation, which is conceptually equivalent to running a range aggregate query separately on multiple datasets, returning the query result on each dataset. In particular, the queried datasets can be arbitrarily chosen from a large number (hundreds or even thousands) of candidate datasets. The challenge is to minimize the query cost no matter how many and which datasets are selected. We propose a fully-dynamic data structure called aggregate bundled B-tree (aBB-tree) to settle bundled range aggregation. Specifically, the aBB-tree requires linear space, answers any query in O(log(B) N) I/Os, and can be updated in O(log(B) N) I/Os (where N is the total size of all the candidate datasets, and B the disk page size), under the circumstances where the number of datasets is O(B). The practical efficiency of our technique is demonstrated with extensive experiments.", "paper_title": "I/O-Efficient Bundled Range Aggregation", "paper_id": "WOS:000340205000016"}