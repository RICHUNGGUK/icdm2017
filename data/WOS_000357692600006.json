{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "declarative_crowdsourcing_systems"}, {"score": 0.03151036962346512, "phrase": "crowdop"}, {"score": 0.0047006879240764935, "phrase": "query_optimization_problem"}, {"score": 0.004611224230543916, "phrase": "declarative_crowdsourcing"}, {"score": 0.004030695216899165, "phrase": "sql-like_query"}, {"score": 0.0037683358267785435, "phrase": "execution_plan"}, {"score": 0.0036788184374592706, "phrase": "crowdsourcing_marketplace"}, {"score": 0.0034892684482068347, "phrase": "crowdsourcing_cost"}, {"score": 0.0034392837410790293, "phrase": "best_and_the_worst_plans"}, {"score": 0.0032463805170627686, "phrase": "relational_database_systems"}, {"score": 0.003138874040786261, "phrase": "crowdsourcing_systems"}, {"score": 0.0030938932434437178, "phrase": "declarative_query_interfaces"}, {"score": 0.002716915166374506, "phrase": "optimization_objectives"}, {"score": 0.002677964894127131, "phrase": "query_plans"}, {"score": 0.0026268961477241026, "phrase": "good_balance"}, {"score": 0.0025155150482635688, "phrase": "efficient_algorithms"}, {"score": 0.002208853811052348, "phrase": "extensive_experiments"}, {"score": 0.002125371638869951, "phrase": "real_crowd"}, {"score": 0.0021049977753042253, "phrase": "amazon_mechanical_turk"}], "paper_keywords": ["Crowdsourcing", " query optimization"], "paper_abstract": "We study the query optimization problem in declarative crowdsourcing systems. Declarative crowdsourcing is designed to hide the complexities and relieve the user of the burden of dealing with the crowd. The user is only required to submit an SQL-like query and the system takes the responsibility of compiling the query, generating the execution plan and evaluating in the crowdsourcing marketplace. A given query can have many alternative execution plans and the difference in crowdsourcing cost between the best and the worst plans may be several orders of magnitude. Therefore, as in relational database systems, query optimization is important to crowdsourcing systems that provide declarative query interfaces. In this paper, we propose CROWDOP, a cost-based query optimization approach for declarative crowdsourcing systems. CROWDOP considers both cost and latency in query optimization objectives and generates query plans that provide a good balance between the cost and latency. We develop efficient algorithms in the CROWDOP for optimizing three types of queries: selection queries, join queries, and complex selection-join queries. We validate our approach via extensive experiments by simulation as well as with the real crowd on Amazon Mechanical Turk.", "paper_title": "CrowdOp: Query Optimization for Declarative Crowdsourcing Systems", "paper_id": "WOS:000357692600006"}