{"auto_keywords": [{"score": 0.04969278858326932, "phrase": "embedded_systems"}, {"score": 0.044062948590264966, "phrase": "tag_comparisons"}, {"score": 0.010104540655894194, "phrase": "basic_blocks"}, {"score": 0.00481495049065317, "phrase": "power_saving"}, {"score": 0.004567990533989851, "phrase": "system_performance"}, {"score": 0.004422325007817267, "phrase": "large_amount"}, {"score": 0.004246729915110547, "phrase": "cache_memory"}, {"score": 0.003791141540467091, "phrase": "high_hit_ratio"}, {"score": 0.00374531366198605, "phrase": "important_challenge"}, {"score": 0.0036111152143285838, "phrase": "tagless_instruction_cache"}, {"score": 0.0031974502006267163, "phrase": "desired_instruction"}, {"score": 0.0031459887611258765, "phrase": "cache_lines"}, {"score": 0.0030086877092638945, "phrase": "tl-ic."}, {"score": 0.0026209522797963447, "phrase": "dynamic_allocation"}, {"score": 0.002537216271965659, "phrase": "frequently_executed_basic_blocks"}, {"score": 0.002466139325703204, "phrase": "high_utilization"}, {"score": 0.0024461989110005447, "phrase": "tl-ic"}, {"score": 0.002255431275670053, "phrase": "simulation_results"}, {"score": 0.0021922308351126746, "phrase": "power_consumption"}, {"score": 0.0021307975800397816, "phrase": "linebuffer"}, {"score": 0.0021049977753042253, "phrase": "th-ic."}], "paper_keywords": ["Cache", " Low power", " Tagless", " Embedded system"], "paper_abstract": "In embedded systems, cache is commonly used to improve system performance. However, the cache consumes a large amount of power, and among the components of the cache memory, tag comparisons consume the most amount of power. Therefore, how to design a cache that does not consume so much power when comparing tags and that has a high hit ratio is an important challenge. In this paper, we propose a Tagless Instruction Cache, called TL-IC, that does not perform tag comparisons in order to save power in embedded systems. To guarantee that an instruction fetched from TL-IC is the desired instruction, instead of cache lines being used, the basic blocks of programs are placed into TL-IC. In addition, to utilize TL-IC as much as possible in order to save the most amount of power and to take into account the general-purpose and special-purpose applications, both the static allocation and the dynamic allocation of basic blocks are used to select the frequently executed basic blocks of programs in TL-IC. With a high utilization of TL-IC that does not perform tag comparisons, the power consumed in fetching instructions can be efficiently reduced. In the simulation results, we show and compare the power consumption of our proposed TL-IC, L0 cache, Linebuffer, and TH-IC.", "paper_title": "A tagless cache design for power saving in embedded systems", "paper_id": "WOS:000308110300012"}