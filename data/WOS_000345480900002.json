{"auto_keywords": [{"score": 0.04939422255606209, "phrase": "reverse_skyline_queries"}, {"score": 0.00481495049065317, "phrase": "processing_reverse_k-skyband"}, {"score": 0.004567129988306349, "phrase": "first_time"}, {"score": 0.0043738432231020885, "phrase": "efficient_reverse_k-skyband"}, {"score": 0.004188702178897384, "phrase": "set_p"}, {"score": 0.004148631410346188, "phrase": "multi-dimensional_points"}, {"score": 0.004089239912167375, "phrase": "query_point_q"}, {"score": 0.004030695216899165, "phrase": "rksb_query"}, {"score": 0.0038415095105632157, "phrase": "rksb_retrieval"}, {"score": 0.003750260412839128, "phrase": "five_algorithms"}, {"score": 0.0036261282565554507, "phrase": "arbitrary_query_point"}, {"score": 0.0035229930971258316, "phrase": "conventional_data-partitioning_index"}, {"score": 0.003154012038613403, "phrase": "query_efficiency"}, {"score": 0.0029914213495838998, "phrase": "interesting_variant"}, {"score": 0.0028923335491735564, "phrase": "reverse_skyline"}, {"score": 0.0025155150482635688, "phrase": "k_reverse_skyline_points"}, {"score": 0.002467536552997677, "phrase": "minimal_score"}, {"score": 0.00242047093248845, "phrase": "user-specified_function"}, {"score": 0.002166711569953301, "phrase": "experimental_settings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Skyline", " Reverse k-skyband", " Ranked reverse skyline", " Query processing", " Algorithm"], "paper_abstract": "In this paper, for the first time, we identify and solve the problem of efficient reverse k-skyband (RkSB) query processing. Given a set P of multi-dimensional points and a query point q, an RkSB query returns all the points in P whose dynamic k-skyband contains q. We formalize RkSB retrieval, and then propose five algorithms for computing the RkSB of an arbitrary query point efficiently. Our methods utilize a conventional data-partitioning index (e.g., R-tree) on the dataset, and employ pre-computation, reuse and pruning techniques to boost the query efficiency. In addition, we extend our solutions to tackle an interesting variant of reverse skyline queries, namely, ranked reverse skyline (RRS) query where, given a data set P, a parameter K, and a preference function f, the goal is to find the K reverse skyline points that have the minimal score according to the user-specified function f. Extensive experiments using both real and synthetic data sets demonstrate the effectiveness of our proposed pruning heuristics and the performance of our proposed algorithms under a variety of experimental settings. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "On processing reverse k-skyband and ranked reverse skyline queries", "paper_id": "WOS:000345480900002"}