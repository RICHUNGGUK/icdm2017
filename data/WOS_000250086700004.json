{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "resource_trees"}, {"score": 0.0045108906244892165, "phrase": "new_data_structure"}, {"score": 0.004225950334493496, "phrase": "node-labelled_tree"}, {"score": 0.00393032656248792, "phrase": "partial_monoid"}, {"score": 0.0037903327482565097, "phrase": "resource_tree_model"}, {"score": 0.0037087324991876727, "phrase": "new_separation_logic"}, {"score": 0.0034742854447532678, "phrase": "bunched_implications_logic"}, {"score": 0.002487835869510301, "phrase": "also_an_assertion_logic"}, {"score": 0.0024342079318127423, "phrase": "bi-loc"}, {"score": 0.0023817332409567403, "phrase": "soundness_and_completeness_issues"}, {"score": 0.0021049977753042253, "phrase": "heap_structures"}], "paper_keywords": [""], "paper_abstract": "In this article, we propose a new data structure, called resource tree, that is a node-labelled tree in which nodes contain resources which belong to a partial monoid. We define the resource tree model and a new separation logic (BI-Loc) that extends the Bunched Implications logic (BI) with a modality for locations. In addition, we consider quantifications on locations and paths and then we study decidability by model-checking in these models and logics. Moreover, we define a language to deal with resource trees and also an assertion logic derived from BI-Loc. Then soundness and completeness issues are studied, and we show how the model and its associated language can be used to manage heap structures and also permission accounting.", "paper_title": "Models and separation logics for resource trees", "paper_id": "WOS:000250086700004"}