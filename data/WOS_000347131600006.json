{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-core_platforms"}, {"score": 0.0047370749839861165, "phrase": "task_period_relationship"}, {"score": 0.004635187610736025, "phrase": "multi-core_partitioned_scheduling_problem"}, {"score": 0.004437910956996051, "phrase": "traditional_bin-packing_problem"}, {"score": 0.003958937342925219, "phrase": "processing_core"}, {"score": 0.003589602322126282, "phrase": "implicit_relations"}, {"score": 0.0033262524445013303, "phrase": "local_core"}, {"score": 0.0031329184724341592, "phrase": "partitioned_scheduling"}, {"score": 0.0030989899982042236, "phrase": "periodic_real-time_tasks"}, {"score": 0.0028715299874549245, "phrase": "scheduling_algorithms"}, {"score": 0.002794395223913895, "phrase": "haps"}, {"score": 0.0025611773887867255, "phrase": "task_periods"}, {"score": 0.0024653491388223546, "phrase": "single-core_platform"}, {"score": 0.002284290601837099, "phrase": "proposed_algorithms"}, {"score": 0.0022228943786652914, "phrase": "scheduling_performance"}, {"score": 0.00217496508306238, "phrase": "existing_work"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Partitioned scheduling", " RMS", " Harmonic"], "paper_abstract": "One common approach for multi-core partitioned scheduling problem is to transform this problem into a traditional bin-packing problem, with the utilization of a task being the \"size\" of the object and the utilization bound of a processing core being the \"capacity\" of the bin. However, this approach ignores the fact that some implicit relations among tasks may significantly affect the feasibility of the tasks allocated to each local core. In this paper, we study the problem of partitioned scheduling of periodic real-time tasks on multi-core platforms under the Rate Monotonic Scheduling (RMS) policy. We present two effective and efficient partitioned scheduling algorithms, i.e. PSER and HAPS, by exploiting the fact that the utilization bound of a task set increases as task periods are closer to harmonic on a single-core platform. We formally prove the schedulability of our partitioned scheduling algorithms. Our extensive experimental results demonstrate that the proposed algorithms can significantly improve the scheduling performance compared with the existing work. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Enhanced fixed-priority real-time scheduling on multi-core platforms by exploiting task period relationship", "paper_id": "WOS:000347131600006"}