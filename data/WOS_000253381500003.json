{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimal_scheduling"}, {"score": 0.04940203756018457, "phrase": "grid_computing"}, {"score": 0.004548253531664032, "phrase": "distributed_iterative_algorithm"}, {"score": 0.004357927940322685, "phrase": "grid_user's_requirements"}, {"score": 0.004087207102190335, "phrase": "service_problem"}, {"score": 0.0039723268236794935, "phrase": "market_game"}, {"score": 0.00388828234270598, "phrase": "grid_resource_agents"}, {"score": 0.0038332390893263844, "phrase": "grid_task_agents"}, {"score": 0.0037789720824759503, "phrase": "user_benefits"}, {"score": 0.0035949949979695063, "phrase": "quality_of_service"}, {"score": 0.0034690732089830045, "phrase": "separate_utility_functions"}, {"score": 0.003395640013786862, "phrase": "total_system_quality"}, {"score": 0.003347547260807785, "phrase": "service_utility"}, {"score": 0.0032302647179383915, "phrase": "linear_combination"}, {"score": 0.003161870571621082, "phrase": "discrete_form_utility_functions"}, {"score": 0.003051073364818384, "phrase": "distributed_algorithms"}, {"score": 0.002965229277927781, "phrase": "task_agents"}, {"score": 0.002923214590192792, "phrase": "resource_agents"}, {"score": 0.0028006988338192375, "phrase": "grid_resource"}, {"score": 0.0025892330566358503, "phrase": "service_solution"}, {"score": 0.0025343769150179764, "phrase": "grid_users"}, {"score": 0.002445514186654732, "phrase": "specified_user_preferences"}, {"score": 0.0023936956017015696, "phrase": "proposed_pricing"}, {"score": 0.0023766673143502384, "phrase": "based_distributed_iterative_algorithm"}, {"score": 0.0022287497627555895, "phrase": "qos_factors"}, {"score": 0.0021659920594094407, "phrase": "grid_user_utility"}, {"score": 0.0021049977753042253, "phrase": "grid_resource_provider"}], "paper_keywords": ["scheduling", " grid", " iterative algorithm", " simulation"], "paper_abstract": "The paper studies a distributed iterative algorithm for optimal scheduling in grid computing. Grid user's requirements are formulated as dimensions in a quality of service problem expressed as a market game played by grid resource agents and grid task agents. User benefits resulting from taking decisions regarding each Quality of Service dimension are described by separate utility functions. The total system quality of service utility is defined as a linear combination of the discrete form utility functions. The paper presents distributed algorithms to iteratively optimize task agents and resource agents functioning as sub-problems of the grid resource QoS scheduling optimization. Such constructed resource scheduling algorithm finds a multiple quality of service solution optimal for grid users, which fulfils some specified user preferences. The proposed pricing based distributed iterative algorithm has been evaluated by studying the effect of QoS factors on benefits of grid user utility, revenue of grid resource provider and execution success ratio.", "paper_title": "A distributed iterative algorithm for optimal scheduling in grid computing", "paper_id": "WOS:000253381500003"}