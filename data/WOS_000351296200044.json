{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "extremal_optimization"}, {"score": 0.00458488025289647, "phrase": "distributed_programs"}, {"score": 0.004234129588974058, "phrase": "processor_load_balancing"}, {"score": 0.0041316803676012155, "phrase": "distributed_applications"}, {"score": 0.00405646687267772, "phrase": "load_balancing_algorithm"}, {"score": 0.003958299299658418, "phrase": "multicore_processors"}, {"score": 0.0037231102027070724, "phrase": "eo_approach"}, {"score": 0.0035668128900149814, "phrase": "best_tasks"}, {"score": 0.0033961782274326948, "phrase": "guided_selection"}, {"score": 0.003334309053314909, "phrase": "best_computing_nodes"}, {"score": 0.003253560798692431, "phrase": "migrating_tasks"}, {"score": 0.003022825806274343, "phrase": "embedded_eo_algorithm"}, {"score": 0.0029677378488677983, "phrase": "two-step_stochastic_selection"}, {"score": 0.002723607240517261, "phrase": "specific_models"}, {"score": 0.00257735013358606, "phrase": "executive_hardware"}, {"score": 0.002530359917257626, "phrase": "proposed_load_balancing_algorithm"}, {"score": 0.0024389277933858054, "phrase": "simulated_load_balancing"}, {"score": 0.002409188797323273, "phrase": "distributed_program_graphs"}, {"score": 0.0022938068444116827, "phrase": "greedy_fully_deterministic_approach"}, {"score": 0.0022519745140925475, "phrase": "genetic_algorithm"}, {"score": 0.002210903392596343, "phrase": "eo-based_algorithm"}, {"score": 0.0021441057555396013, "phrase": "migrated_tasks"}], "paper_keywords": ["Distributed programs", " Extremal optimization", " Load balancing"], "paper_abstract": "The paper describes methods for using Extremal Optimization (EO) for processor load balancing during execution of distributed applications. A load balancing algorithm for clusters of multicore processors is presented and discussed. In this algorithm the EO approach is used to periodically detect the best tasks as candidates for migration and for a guided selection of the best computing nodes to receive the migrating tasks. To decrease the complexity of selection for migration, the embedded EO algorithm assumes a two-step stochastic selection during the solution improvement based on two separate fitness functions. The functions are based on specific models which estimate relations between the programs and the executive hardware. The proposed load balancing algorithm is assessed by experiments with simulated load balancing of distributed program graphs. The algorithm is compared against a greedy fully deterministic approach, a genetic algorithm and an EO-based algorithm with random placement of migrated tasks. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Extremal Optimization applied to load balancing in execution of distributed programs", "paper_id": "WOS:000351296200044"}