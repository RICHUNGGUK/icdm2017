{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "partial-match_queries"}, {"score": 0.01555996713314101, "phrase": "peer-to-peer_networks"}, {"score": 0.004596295252559861, "phrase": "data_items"}, {"score": 0.00443308765153716, "phrase": "query_keywords"}, {"score": 0.004253618550301311, "phrase": "statistical_properties"}, {"score": 0.004188198923320451, "phrase": "matched_keywords"}, {"score": 0.004060350364088702, "phrase": "information_retrieval"}, {"score": 0.0040186038781533946, "phrase": "large_document_repositories"}, {"score": 0.0037965243835456214, "phrase": "distributed_hashing"}, {"score": 0.0034771228725942846, "phrase": "efficient_and_scalable_technique"}, {"score": 0.0031193028729331667, "phrase": "possible_combinations"}, {"score": 0.0029164434911787187, "phrase": "distributed_index_structure"}, {"score": 0.0028567126120064546, "phrase": "distributed_pattern_tree"}, {"score": 0.002755104031926742, "phrase": "frequent_query_patterns"}, {"score": 0.0026026666736474404, "phrase": "query_history"}, {"score": 0.002358917661465133, "phrase": "data_lookup"}, {"score": 0.002298649369775623, "phrase": "logarithmic_time"}, {"score": 0.0022399174232611853, "phrase": "network_size"}, {"score": 0.0021826828321952615, "phrase": "trec_data_sets"}, {"score": 0.0021490449563443025, "phrase": "promising_results"}], "paper_keywords": [""], "paper_abstract": "Partial-match queries return data items that contain a subset of the query keywords and order the results based on the statistical properties of the matched keywords. They are essential for information retrieval on large document repositories. However, most current peer-to-peer networks for information retrieval are based on distributed hashing and as such cannot support partial-match queries efficiently. In this paper, we describe an efficient and scalable technique to support partial-match queries on peer-to-peer networks. We observe that the combinations of keywords in the queries are only a small subset of all possible combinations of the keywords in the documents. Therefore, we propose a distributed index structure, called a distributed pattern tree (DPTree), to record frequent query patterns, i.e., combinations of keywords, learnt from the query history at each node in the network. Using this index, a query can identify its best matching patterns quickly and data lookup can be done in logarithmic time with respect to the network size. Our simulation studies on the TREC data sets have shown promising results in comparison with other previous approaches.", "paper_title": "DPTree: A distributed pattern tree index for partial-match queries in peer-to-peer networks", "paper_id": "WOS:000237081600032"}