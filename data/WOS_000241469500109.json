{"auto_keywords": [{"score": 0.04664571852812289, "phrase": "embedded_systems"}, {"score": 0.03409675851573747, "phrase": "virtual_machine"}, {"score": 0.00481495049065317, "phrase": "embedded_systems_programming_environment"}, {"score": 0.004770461993586338, "phrase": "c._resource"}, {"score": 0.004682708592184678, "phrase": "major_concern"}, {"score": 0.003907013105134715, "phrase": "assembly_language"}, {"score": 0.0037820003983334476, "phrase": "efficient_programming_environments"}, {"score": 0.003543804852018315, "phrase": "lightweight_and_versatile_programming_environment"}, {"score": 0.0034947408949397127, "phrase": "c_programming_language"}, {"score": 0.003446353878654566, "phrase": "mixed-mode_execution"}, {"score": 0.003140401552000472, "phrase": "mixed-mode_execution_environment"}, {"score": 0.003068242064611088, "phrase": "highly_compressed_bytecode"}, {"score": 0.002997735656669146, "phrase": "machine_code"}, {"score": 0.0029152570900178956, "phrase": "programming_environment"}, {"score": 0.0028482561434303886, "phrase": "selected_programs"}, {"score": 0.0028087949095629955, "phrase": "mibench_suite"}, {"score": 0.0027188725136129714, "phrase": "vm"}, {"score": 0.0025952620596908773, "phrase": "initial_results"}, {"score": 0.0023867931451842087, "phrase": "binary_execution"}, {"score": 0.0023537101705489957, "phrase": "compressed_code"}, {"score": 0.0022995854132747233, "phrase": "machine_code_size"}, {"score": 0.0022467024793003812, "phrase": "vm_instructions"}, {"score": 0.0022258906408344973, "phrase": "new_vm_instructions"}, {"score": 0.0021646022201798247, "phrase": "execution_speed"}, {"score": 0.0021246816854197732, "phrase": "vm_code_size"}, {"score": 0.0021049977753042253, "phrase": "preliminary_experiments"}], "paper_keywords": [""], "paper_abstract": "Resource constraints are a major concern with the design, development, and deployment of embedded systems. Embedded systems are highly hardware-dependent and have little computational power. Mobile embedded systems are further constrained by their limited battery capacity. Many of these systems are still programmed in assembly language because there is a lack of efficient programming environments. To overcome or at least alleviate the restrictions, we propose a lightweight and versatile programming environment for the C programming language that offers mixed-mode execution, i.e., code is either executed on the CPU or on a virtual machine (VM). This mixed-mode execution environment combines the advantages of highly compressed bytecode with the speed of machine code. We have implemented the programming environment and conducted experiments for selected programs of the MiBench suite and the Spec 2000. The VM has a footprint of 12 KB on the Intel IA32. Initial results show that the performance of the virtual machine is typically only 2 to 36 times slower than the binary execution, with compressed code occupying only 36%-57% of the machine code size. Combining sequences of VM instructions into new VM instructions (superinstructions) increases the execution speed and reduces the VM code size. Preliminary experiments indicate a speedup by a factor of 3.", "paper_title": "An embedded systems programming environment for C", "paper_id": "WOS:000241469500109"}