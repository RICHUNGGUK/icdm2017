{"auto_keywords": [{"score": 0.046769512189469904, "phrase": "entire_database"}, {"score": 0.00481495049065317, "phrase": "consistent_reading"}, {"score": 0.004739056045644449, "phrase": "entire_databases"}, {"score": 0.004377077848734575, "phrase": "consistent_way"}, {"score": 0.004042635935882651, "phrase": "global-read_transaction"}, {"score": 0.003823791479971016, "phrase": "trivial_issue"}, {"score": 0.0036456298076415652, "phrase": "high_degree"}, {"score": 0.00347574024760684, "phrase": "conventional_concurrency_control_protocols"}, {"score": 0.003287482882222731, "phrase": "long-lived_grt._previous_studies"}, {"score": 0.002964415652865295, "phrase": "additional_tests"}, {"score": 0.002190519728921395, "phrase": "enhanced_algorithm"}], "paper_keywords": ["data consistency", " concurrency control", " transaction processing", " serializability"], "paper_abstract": "Many applications need to read an entire database in a consistent way. This global-reading of an entire database formulated as a global-read transaction (GRT) is not a trivial issue since it will cause a high degree of interference to other concurrent transactions. Conventional concurrency control protocols are obviously inadequate in handling the long-lived GRT. Previous studies [ 1], [ 3], [ 4] proposed additional tests, namely, the Color Test and the Shade Test, to handle conflicts between the GRT and update transactions. However, we discovered that both algorithms can bring about nonserializable schedules of transactions. We propose an enhanced algorithm directly built on the two algorithms to guarantee the serializability of transactions.", "paper_title": "On consistent reading of entire databases", "paper_id": "WOS:000235371800011"}