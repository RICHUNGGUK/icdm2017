{"auto_keywords": [{"score": 0.03612199021334121, "phrase": "pim_model"}, {"score": 0.015624856427124597, "phrase": "distributed_systems"}, {"score": 0.013106311200460269, "phrase": "centralized_approaches"}, {"score": 0.00481495049065317, "phrase": "coordinating_behavior"}, {"score": 0.0047563776685277314, "phrase": "current_approaches"}, {"score": 0.004627168743964783, "phrase": "physically_distributed_systems"}, {"score": 0.00436575511349828, "phrase": "novel_architecture"}, {"score": 0.0043258453436258405, "phrase": "process-integrated_mechanism"}, {"score": 0.004169806294929081, "phrase": "single_controlling_authority"}, {"score": 0.004119049028319832, "phrase": "structural_difficulties"}, {"score": 0.0038862297330905836, "phrase": "previous_models"}, {"score": 0.0037805689375225117, "phrase": "software_development"}, {"score": 0.0037231102027070724, "phrase": "communication_overhead"}, {"score": 0.0036777702949712457, "phrase": "pim_architecture"}, {"score": 0.0035668128900149814, "phrase": "single_mechanism"}, {"score": 0.003375429082739004, "phrase": "effective_infrastructure"}, {"score": 0.0033548062793973144, "phrase": "handling_tasks"}, {"score": 0.0033139366449568565, "phrase": "high_degree"}, {"score": 0.003293688299319582, "phrase": "time-sensitive_coordination"}, {"score": 0.0032040860021574193, "phrase": "clean_mechanism"}, {"score": 0.003165046673308291, "phrase": "high-level_goals"}, {"score": 0.003145705182811006, "phrase": "loosely_coupled_systems"}, {"score": 0.003050750896241337, "phrase": "high_communication_overhead"}, {"score": 0.0030321057387540963, "phrase": "centralized_control"}, {"score": 0.0029405703787004824, "phrase": "system-level_behavior"}, {"score": 0.002913650880082273, "phrase": "multi_agent_system"}, {"score": 0.002895948263248582, "phrase": "mas"}, {"score": 0.0027741761880779535, "phrase": "multiagent_systems"}, {"score": 0.0027572166867780275, "phrase": "centralized_architectures"}, {"score": 0.002690406375639144, "phrase": "multiagent_system"}, {"score": 0.002665770884424872, "phrase": "significant_complexity"}, {"score": 0.0026252106881752067, "phrase": "interagent_communication"}, {"score": 0.0025071862539276283, "phrase": "large_amounts"}, {"score": 0.002469032978674379, "phrase": "coordinating_process"}, {"score": 0.002431458888197052, "phrase": "global_view"}, {"score": 0.0023798115577749225, "phrase": "process'_moves"}, {"score": 0.0022041314042566826, "phrase": "pim."}, {"score": 0.0021049977753042253, "phrase": "important_and_novel_technique"}], "paper_keywords": [""], "paper_abstract": "Current approaches to the problem of coordinating the activity of physically distributed systems or devices all have well-recognized strengths and weaknesses. We propose adding to the mix a novel architecture, the process-integrated mechanism (PIM.), that enjoys the advantages of having a single controlling authority while avoiding the structural difficulties that have traditionally led to the rejection of centralized approaches in many complex settings. In many situations, PIMs improve on previous models with regard to coordination, security, ease of software development, robustness, and communication overhead. In the PIM architecture, the components are conceived as parts of a single mechanism, even when they are physically separated and operate asynchronously. The PIM model offers promise as an effective infrastructure for handling tasks that require a high degree of time-sensitive coordination between the components, as well as a clean mechanism for coordinating the high-level goals of loosely coupled systems. The PIM model enables coordination without the fragility and high communication overhead of centralized control, but also without the uncertainty associated with the system-level behavior of a multi agent system (MAS). The PIM model provides an ease of programming with advantages over both multiagent systems and centralized architectures. It has the robustness of a multiagent system without the significant complexity and overhead required for interagent communication and negotiation. In contrast to centralized approaches, it does not require managing the large amounts of data that the coordinating process needs to compute a global view. In a PIM, the process' moves to the data and may perform computations on the components where the data is locally available, transporting only the information needed for coordination within the PIM. While there are many remaining research issues to be addressed, we believe that PIMs offer an important and novel technique for the control of distributed systems.", "paper_title": "PIM: A Novel Architecture for Coordinating Behavior of Distributed Systems", "paper_id": "WOS:000279271500002"}