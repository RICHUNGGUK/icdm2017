{"auto_keywords": [{"score": 0.048439279083046086, "phrase": "agile_software_development"}, {"score": 0.00481495049065317, "phrase": "shared_decision-making"}, {"score": 0.004294052530714228, "phrase": "software_projects"}, {"score": 0.0039651694106206245, "phrase": "agile_software_development_teams"}, {"score": 0.003829290275367182, "phrase": "multiple_case_study"}, {"score": 0.003661385126435865, "phrase": "scrum"}, {"score": 0.003553540530701019, "phrase": "semi-structured_interviews"}, {"score": 0.003500812175550438, "phrase": "participant_observations"}, {"score": 0.0034317185678527672, "phrase": "process_artifacts"}, {"score": 0.003152915289414825, "phrase": "strategic_product_plans"}, {"score": 0.003121636289442593, "phrase": "iteration_plans"}, {"score": 0.0030600032877646263, "phrase": "development_resources"}, {"score": 0.0026612444314342023, "phrase": "agile_development"}, {"score": 0.0025827837420330816, "phrase": "specialized_skills"}, {"score": 0.0024693979425773993, "phrase": "naturalistic_decision-making"}, {"score": 0.0023846534541336326, "phrase": "case_companies"}, {"score": 0.0022016885701010088, "phrase": "software_development_projects"}, {"score": 0.0021798257311714665, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Agile software development", " Scrum", " Decision-making", " Self-management", " Alignment", " Teamwork"], "paper_abstract": "Context: Agile software development changes the nature of collaboration, coordination, and communication in software projects. Objective: Our objective was to understand the challenges of shared decision-making in agile software development teams. Method: We designed a multiple case study consisting of four projects in two software product companies that recently adopted Scrum. We collected data in semi-structured interviews, through participant observations, and from process artifacts. Results: We identified three main challenges to shared decision-making in agile software development: alignment of strategic product plans with iteration plans, allocation of development resources, and performing development and maintenance tasks in teams. Conclusion: Agile software development requires alignment of decisions on the strategic, tactical, and operational levels in order to overcome these challenges. Agile development also requires a transition from specialized skills to redundancy of functions and from rational to naturalistic decision-making. This takes time; the case companies needed from one to two years to change from traditional, hierarchical decision-making to shared decision-making in software development projects. Crown Copyright (C) 2011 Published by Elsevier B.V. All rights reserved.", "paper_title": "Challenges of shared decision-making: A multiple case study of agile software development", "paper_id": "WOS:000305599200005"}