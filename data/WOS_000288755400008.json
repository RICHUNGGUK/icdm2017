{"auto_keywords": [{"score": 0.03277003369205043, "phrase": "preprocessing_overhead"}, {"score": 0.00481495049065317, "phrase": "parallel_pagerank_computation"}, {"score": 0.004750527930368202, "phrase": "pagerank_algorithm"}, {"score": 0.004686963264680882, "phrase": "important_component"}, {"score": 0.004645057834614705, "phrase": "effective_web_search"}, {"score": 0.004441059405327222, "phrase": "sparse_matrix-vector_multiplications"}, {"score": 0.00438161736774803, "phrase": "involved_web_matrices"}, {"score": 0.004096082254543022, "phrase": "distributed_manner"}, {"score": 0.004041238873048836, "phrase": "space_limitations"}, {"score": 0.003951453722517865, "phrase": "pagerank_computation"}, {"score": 0.003693846909452865, "phrase": "low-preprocessing_overhead"}, {"score": 0.003628024127607343, "phrase": "initial_distributed_nature"}, {"score": 0.0035794251590584563, "phrase": "web_matrices"}, {"score": 0.0033459905006404207, "phrase": "state-of-the-art_sparse_matrix_partitioning_models"}, {"score": 0.0031559919178954644, "phrase": "particular_focus"}, {"score": 0.0029236680654022664, "phrase": "web_matrix"}, {"score": 0.0028844769395018595, "phrase": "site_information"}, {"score": 0.0026841368358805407, "phrase": "initially_distributed_data"}, {"score": 0.0025545134727682716, "phrase": "efficient_pagerank_computation"}, {"score": 0.0025089420019955232, "phrase": "performance_results"}, {"score": 0.002453116398642071, "phrase": "state-of-the-art_pagerank_algorithm"}, {"score": 0.002313701040445819, "phrase": "proposed_techniques"}, {"score": 0.002292965705677312, "phrase": "considerably_high_speedups"}, {"score": 0.002143247921132179, "phrase": "single_iteration"}, {"score": 0.0021049977753042253, "phrase": "underlying_sequential_pagerank_algorithm"}], "paper_keywords": ["PageRank", " sparse matrix-vector multiplication", " web search", " parallelization", " sparse matrix partitioning", " graph partitioning", " hypergraph partitioning", " repartitioning"], "paper_abstract": "The PageRank algorithm is an important component in effective web search. At the core of this algorithm are repeated sparse matrix-vector multiplications where the involved web matrices grow in parallel with the growth of the web and are stored in a distributed manner due to space limitations. Hence, the PageRank computation, which is frequently repeated, must be performed in parallel with high-efficiency and low-preprocessing overhead while considering the initial distributed nature of the web matrices. Our contributions in this work are twofold. We first investigate the application of state-of-the-art sparse matrix partitioning models in order to attain high efficiency in parallel PageRank computations with a particular focus on reducing the preprocessing overhead they introduce. For this purpose, we evaluate two different compression schemes on the web matrix using the site information inherently available in links. Second, we consider the more realistic scenario of starting with an initially distributed data and extend our algorithms to cover the repartitioning of such data for efficient PageRank computation. We report performance results using our parallelization of a state-of-the-art PageRank algorithm on two different PC clusters with 40 and 64 processors. Experiments show that the proposed techniques achieve considerably high speedups while incurring a preprocessing overhead of several iterations (for some instances even less than a single iteration) of the underlying sequential PageRank algorithm.", "paper_title": "Site-Based Partitioning and Repartitioning Techniques for Parallel PageRank Computation", "paper_id": "WOS:000288755400008"}