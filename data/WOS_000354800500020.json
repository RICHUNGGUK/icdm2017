{"auto_keywords": [{"score": 0.046812928375307615, "phrase": "verasco"}, {"score": 0.00481495049065317, "phrase": "soundness_proof"}, {"score": 0.004624751696958501, "phrase": "coq_proof_assistant"}, {"score": 0.00418134346679498, "phrase": "abstract_interpretation"}, {"score": 0.003780286517897356, "phrase": "dynamic_allocation"}, {"score": 0.0034872225047008648, "phrase": "run-time_errors"}, {"score": 0.0033832583769880576, "phrase": "analyzed_programs"}, {"score": 0.003216804708106142, "phrase": "modular_architecture"}, {"score": 0.0030895394261534776, "phrase": "extensible_combination"}, {"score": 0.0030278017562213265, "phrase": "multiple_abstract_domains"}, {"score": 0.0026554236621262515, "phrase": "compcert_formally-verified_c_compiler"}, {"score": 0.0024993218789131437, "phrase": "analysis_results"}, {"score": 0.002400373755068185, "phrase": "mathematical_certitude"}, {"score": 0.0021049977753042253, "phrase": "compiled_code"}], "paper_keywords": ["static analysis", " abstract interpretation", " soundness proofs", " proof assistants"], "paper_abstract": "This paper reports on the design and soundness proof, using the Coq proof assistant, of Verasco, a static analyzer based on abstract interpretation for most of the ISO C 1999 language (excluding recursion and dynamic allocation). Verasco establishes the absence of run-time errors in the analyzed programs. It enjoys a modular architecture that supports the extensible combination of multiple abstract domains, both relational and non-relational. Verasco integrates with the CompCert formally-verified C compiler so that not only the soundness of the analysis results is guaranteed with mathematical certitude, but also the fact that these guarantees carry over to the compiled code.", "paper_title": "A Formally-Verified C Static Analyzer", "paper_id": "WOS:000354800500020"}