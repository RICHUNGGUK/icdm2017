{"auto_keywords": [{"score": 0.04968898347890439, "phrase": "ad_hoc"}, {"score": 0.04594846582703764, "phrase": "ad_hoc_networks"}, {"score": 0.04383441248529016, "phrase": "contention_relationship"}, {"score": 0.00481495049065317, "phrase": "optimal_and_fair_congestion_control"}, {"score": 0.004733229061120497, "phrase": "algorithm"}, {"score": 0.004436716583179764, "phrase": "resource_allocation"}, {"score": 0.004293840838533456, "phrase": "link's_interference_set"}, {"score": 0.004038183610525504, "phrase": "fundamental_difference"}, {"score": 0.0038603905208013482, "phrase": "congestion_control_problem"}, {"score": 0.003782174375003052, "phrase": "nonlinear_optimization_problem"}, {"score": 0.003736004578001584, "phrase": "capacity_constraint"}, {"score": 0.0036903962975894634, "phrase": "link's_interference"}, {"score": 0.00357146811369898, "phrase": "dual_decomposition_method"}, {"score": 0.0033449479263613848, "phrase": "parallel_fashion"}, {"score": 0.003237116128682586, "phrase": "dual_decomposition"}, {"score": 0.0029824560656987855, "phrase": "synchronous_implementation"}, {"score": 0.002933973181012572, "phrase": "realistic_environment"}, {"score": 0.002898127432512101, "phrase": "asynchronous_implementation"}, {"score": 0.0027817658627604653, "phrase": "practical_protocol"}, {"score": 0.002659142621852998, "phrase": "estimation_method"}, {"score": 0.002605201547405916, "phrase": "neighbor_set_approximation_method"}, {"score": 0.0025839354121169585, "phrase": "nsa"}, {"score": 0.0024001337476063094, "phrase": "globally_optimal_solution"}, {"score": 0.002370794661629904, "phrase": "asynchronous_environment"}, {"score": 0.002256973121326987, "phrase": "atcp"}, {"score": 0.002220257443705344, "phrase": "efficient_and_fair_resource_allocation"}, {"score": 0.002148604369150115, "phrase": "chain_topology"}, {"score": 0.002131054594847684, "phrase": "grid_topology"}, {"score": 0.0021049977753042253, "phrase": "random_topology"}], "paper_keywords": ["Ad Hoc networks", " resource allocation", " dual decomposition", " congestion control"], "paper_abstract": "For the design of a more efficient congestion control algorithm to optimize the resource allocation in Ad Hoc networks, the notion of the link's interference set is introduced to represent the contention relationship among flows in Ad Hoc networks, which is the fundamental difference from the contention relationship among flows in Internet. And the congestion control problem is formulated as a nonlinear optimization problem with the capacity constraint of the link's interference set. Then, based on the dual decomposition method, this problem is decomposed into many subproblems, which can be solved independently in a parallel fashion at each source/link, and builds the Dual Decomposition based Optimal and Fair Congestion Control framework (D(2)OFC(2)) to coordinate their source allocation among flows. Considering the synchronous implementation is difficult in realistic environment, the asynchronous implementation of D(2)OFC(2) is presented. To deploy the practical protocol of D(2)OFC(2), three deployment techniques are proposed: Queue Size Estimation method (QSE), Neighbor Set Approximation method (NSA), and Extensive HELLO message-based Piggybacking (EHP).The MATLAB-based simulation results illustrate that D(2)OFC(2) can approach the globally optimal solution even in asynchronous environment. The NS2-based simulation results demonstrate that D(2)OFC(2) outperforms default TCP and ATCP to achieve an efficient and fair resource allocation in Ad Hoc networks under three scenarios, including chain topology, grid topology, and random topology. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Dual decomposition method for optimal and fair congestion control in Ad Hoc networks: Algorithm, implementation and evaluation", "paper_id": "WOS:000256756000010"}