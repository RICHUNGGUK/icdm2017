{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "busy_time"}, {"score": 0.004775335634705251, "phrase": "parallel_machines"}, {"score": 0.00443308765153716, "phrase": "identical_machines"}, {"score": 0.004396600680348434, "phrase": "bounded_capacity_g"}, {"score": 0.004149429072483132, "phrase": "single_machine"}, {"score": 0.003997891221012094, "phrase": "release_time"}, {"score": 0.003948613642680196, "phrase": "completion_time"}, {"score": 0.003680587852807675, "phrase": "online_algorithm"}, {"score": 0.0031193028729331667, "phrase": "minimization_version"}, {"score": 0.0030177339185643226, "phrase": "total_busy_time"}, {"score": 0.002883439044844259, "phrase": "resource_allocation_maximization_version"}, {"score": 0.0026986685585382347, "phrase": "budget_constraint"}, {"score": 0.0025892330566358503, "phrase": "first_study"}, {"score": 0.0025678829712650437, "phrase": "online_algorithms"}, {"score": 0.0024842242921857705, "phrase": "rather_large_lower_bound"}, {"score": 0.0024535580495414783, "phrase": "competitive_ratio"}, {"score": 0.0024333239726872604, "phrase": "general_instances"}, {"score": 0.002363806685815014, "phrase": "special_families"}, {"score": 0.002344311033783139, "phrase": "input_instances"}, {"score": 0.0022962708568492734, "phrase": "constant_competitive_algorithms"}, {"score": 0.0022399174232611853, "phrase": "power-aware_scheduling"}, {"score": 0.0021579641460002523, "phrase": "optical_networks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Online algorithms", " Competitive analysis", " Busy time minimization", " Parallel machines scheduling"], "paper_abstract": "We consider the following online scheduling problem in which the input consists of n jobs to be scheduled on identical machines of bounded capacity g (the maximum number of jobs that can be processed simultaneously on a single machine). Each job is associated with a release time and a completion time between which it is supposed to be processed. When a job is released, the online algorithm has to make decision without changing it afterwards. A machine is said to be busy at a certain time if there is at least one job processing on the machine at that time. We consider two versions of the problem. In the minimization version, the goal is to minimize the total busy time of machines used to schedule all jobs. In the resource allocation maximization version, the goal is to maximize the number of jobs that are scheduled under a budget constraint given in terms of busy time. This is the first study on online algorithms for these problems. We show a rather large lower bound on the competitive ratio for general instances. This motivates us to consider special families of input instances for which we show constant competitive algorithms. Our study has applications in power-aware scheduling, cloud computing and optimizing switching cost of optical networks. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Online optimization of busy time on parallel machines", "paper_id": "WOS:000347601100008"}