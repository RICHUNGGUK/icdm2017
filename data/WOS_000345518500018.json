{"auto_keywords": [{"score": 0.03642042615198211, "phrase": "on-line_testing"}, {"score": 0.03408787405078794, "phrase": "proposed_sbst_methodology"}, {"score": 0.00481495049065317, "phrase": "small_caches"}, {"score": 0.004605917942709477, "phrase": "modern_microprocessors"}, {"score": 0.004558977045730675, "phrase": "latent_defects"}, {"score": 0.004497129150551236, "phrase": "manufacturing_testing"}, {"score": 0.004436116555817464, "phrase": "system_operation"}, {"score": 0.004405919996432158, "phrase": "small_memories"}, {"score": 0.004316552692395911, "phrase": "translation_lookaside_buffers"}, {"score": 0.004185874747231179, "phrase": "memory_built-in_self-test"}, {"score": 0.004157374465795314, "phrase": "mbist"}, {"score": 0.004100952337610039, "phrase": "software-based_self-test"}, {"score": 0.004073028506113794, "phrase": "sbst"}, {"score": 0.004017745870068031, "phrase": "flexible_and_low-cost_solution"}, {"score": 0.003990385737207714, "phrase": "on-line_march_test_application"}, {"score": 0.0038170129089059013, "phrase": "small_components"}, {"score": 0.0037267877774290374, "phrase": "system_performance"}, {"score": 0.0036761878173205225, "phrase": "large_penalties"}, {"score": 0.00361390099660273, "phrase": "tlb"}, {"score": 0.003504418473478722, "phrase": "sbst_program_development_methodology"}, {"score": 0.0034332736827447654, "phrase": "small_cache_memories"}, {"score": 0.0033635683594830158, "phrase": "testability_challenges"}, {"score": 0.0032952735750239924, "phrase": "\"hidden\"_or_implicit_operation"}, {"score": 0.0030879936732269293, "phrase": "cache_arrays"}, {"score": 0.003014948673771347, "phrase": "hereafter_direct_cache_access_instructions"}, {"score": 0.002620424858132324, "phrase": "test_program"}, {"score": 0.0024387423375226507, "phrase": "instruction_and_data_tlb_arrays"}, {"score": 0.002397370428991875, "phrase": "experimental_results"}, {"score": 0.002324657548285756, "phrase": "significant_improvement"}, {"score": 0.002308800317961002, "phrase": "test_time"}, {"score": 0.0021049977753042253, "phrase": "sbst_solutions"}], "paper_keywords": ["L1 cache SRAM arrays", " March tests", " microprocessor test", " on-line test", " software-based self-test (SBST)", " TLB SRAM and CAM arrays"], "paper_abstract": "Nowadays, on-line testing is essential for modern microprocessors to detect latent defects that either escape manufacturing testing or appear during system operation. Small memories, such as L1 caches and translation lookaside buffers (TLBs) are not usually equipped with memory built-in self-test (MBIST) hardware. Software-based self-test (SBST) is a flexible and low-cost solution for on-line March test application and error detection in such small memories. Although, L1 caches and TLBs are small components, their reliable operation is crucial for the system performance due to the large penalties caused when L1 cache or TLB misses occur. In this paper, an SBST program development methodology is proposed for on-line testing of small cache memories in microprocessors. To overcome testability challenges that are due to the \"hidden\" or implicit operation of such memories, the proposed SBST methodology exploits: 1) existing special purpose instructions that modern instruction set architectures implement to access these cache arrays for debug-diagnostic (DD) purposes, termed hereafter direct cache access instructions and 2) performance monitoring and trap handling mechanisms. Besides, the proposed SBST methodology combines features that are crucial for on-line testing: a) compact test validation; b) simplified coding style; c) low invasiveness of the test program; and d) small memory footprint. The methodology is comprehensively demonstrated on the instruction and data L1 cache arrays and the instruction and data TLB arrays of OpenSPARC T1. Experimental results show that the exploitation of such DD instructions has a significant improvement of test time (up to 86% for instruction L1 cache, up to 87% for the data L1 cache, up to 37% for D-TLB, and up to 91% for I-TLB) when compared to SBST solutions that do not utilize these types of instructions.", "paper_title": "Software-Based Self-Test for Small Caches in Microprocessors", "paper_id": "WOS:000345518500018"}