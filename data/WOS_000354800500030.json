{"auto_keywords": [{"score": 0.031107364985942288, "phrase": "cross-level_terms"}, {"score": 0.01326215849522487, "phrase": "meta-level_variables"}, {"score": 0.012244642889020392, "phrase": "binding_structure"}, {"score": 0.00481495049065317, "phrase": "cross-level_computation"}, {"score": 0.004712726613162057, "phrase": "meta_lambda_calculus_lambda"}, {"score": 0.004612662942073808, "phrase": "basic_model"}, {"score": 0.004563427013973105, "phrase": "textual_substitution"}, {"score": 0.003378385493203297, "phrase": "new_mechanism"}, {"score": 0.0032189132350239013, "phrase": "systematic_way"}, {"score": 0.0031335830806256777, "phrase": "free_variables"}, {"score": 0.003034158379493625, "phrase": "calculus_lambda"}, {"score": 0.0028446460307503343, "phrase": "level_mismatch"}, {"score": 0.0027395968397212053, "phrase": "meaningless_terms"}, {"score": 0.0024868972942701582, "phrase": "'eval'_command"}, {"score": 0.0023314867226678555, "phrase": "procedural_language"}, {"score": 0.002209406458446019, "phrase": "new_light"}, {"score": 0.0021049977753042253, "phrase": "metalevel_variables"}], "paper_keywords": ["lambda calculus", " metavariables", " textual substitution", " dynamic binding"], "paper_abstract": "We propose meta lambda calculus lambda* as a basic model of textual substitution via metavariables. The most important feature of the calculus is that every beta-redex can be reduced regardless of whether the beta-redex contains meta-level variables or not. Such a meta lambda calculus has never been achieved before due to difficulty to manage binding structure consistently with alpha-renaming in the presence of meta-level variables. We overcome the difficulty by introducing a new mechanism to deal with substitution and binding structure in a systematic way without the notion of free variables and alpha-renaming. Calculus lambda* enables us to investigate cross-level terms that include a certain type of level mismatch. Cross-level terms have been regarded as meaningless terms and left out of consideration thus far. We find that some cross-level terms behave as quotes and 'eval' command in programming languages. With these terms, we show a procedural language as an application of the calculus, which sheds new light on the notions of stores and recursion via metalevel variables.", "paper_title": "A Meta Lambda Calculus with Cross-Level Computation", "paper_id": "WOS:000354800500030"}