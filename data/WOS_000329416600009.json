{"auto_keywords": [{"score": 0.04087479741829225, "phrase": "dma"}, {"score": 0.00481495049065317, "phrase": "two-dimensional_dma_transfers"}, {"score": 0.004765482708043842, "phrase": "scratchpad_based_mpsocs_platforms"}, {"score": 0.004620093797504386, "phrase": "off-chip_memory_access_latency"}, {"score": 0.004456044928556639, "phrase": "efficiently_embedded_multi-core_platforms"}, {"score": 0.004275650416511604, "phrase": "multi-core_computation_fabric"}, {"score": 0.003956784357357341, "phrase": "external_memory"}, {"score": 0.0036996627006622975, "phrase": "double-_or_multiple-buffering_scheme"}, {"score": 0.0034771228725942846, "phrase": "application_programs"}, {"score": 0.0034236045013591437, "phrase": "two-dimensional_data_arrays"}, {"score": 0.0031845067058084583, "phrase": "data_array"}, {"score": 0.0030872017736888113, "phrase": "single_dma_call"}, {"score": 0.0030239842475439814, "phrase": "hardware_and_applications_parameters"}, {"score": 0.002931569771634119, "phrase": "different_array_elements"}, {"score": 0.0028127163745564777, "phrase": "memory_structure"}, {"score": 0.002740885774408238, "phrase": "one-dimensional_horizontal_pieces"}, {"score": 0.0026026666736474404, "phrase": "data_element"}, {"score": 0.0023711591828229736, "phrase": "redundant_data_transfers"}, {"score": 0.002310578855290687, "phrase": "analytic_model"}, {"score": 0.0022749744354271816, "phrase": "optimization_problem"}, {"score": 0.002194011800331242, "phrase": "mean_filter_application"}], "paper_keywords": ["Data parallelization", " Direct memory access (DMA)", " Double buffering", " Cell processor", " MPSoCs"], "paper_abstract": "Reducing the effects of off-chip memory access latency is a key factor in exploiting efficiently embedded multi-core platforms. We consider architectures that admit a multi-core computation fabric, having its own fast and small memory to which the data blocks to be processed are fetched from external memory using a DMA (direct memory access) engine, employing a double- or multiple-buffering scheme to avoid processor idling. In this paper we focus on application programs that process two-dimensional data arrays and we determine automatically the size and shape of the portions of the data array which are subject to a single DMA call, based on hardware and applications parameters. When the computation on different array elements are completely independent, the asymmetry of memory structure leads always to prefer one-dimensional horizontal pieces of memory, while when the computation of a data element shares some data with its neighbors, there is a pressure for more \"square\" shapes to reduce the amount of redundant data transfers. We provide an analytic model for this optimization problem and validate our results by running a mean filter application on the au. simulator. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Optimizing two-dimensional DMA transfers for scratchpad Based MPSoCs platforms", "paper_id": "WOS:000329416600009"}