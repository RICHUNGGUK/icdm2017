{"auto_keywords": [{"score": 0.04217208370496877, "phrase": "remote_caches"}, {"score": 0.00959499108378975, "phrase": "coherency_request"}, {"score": 0.008708012664585464, "phrase": "matching_blocks"}, {"score": 0.00742603341248241, "phrase": "snoop_energy_consumption"}, {"score": 0.007005390272948819, "phrase": "split_bus"}, {"score": 0.00481495049065317, "phrase": "shared_bus-based_low-power_mpsocs"}, {"score": 0.0045415338200109345, "phrase": "snoop-based_cache_coherency_protocols"}, {"score": 0.004436545340717729, "phrase": "data_cache"}, {"score": 0.0037957839728524046, "phrase": "tag_lookups"}, {"score": 0.00373701482510911, "phrase": "remote_miss"}, {"score": 0.0037079710789139305, "phrase": "unnecessary_energy"}, {"score": 0.0036363418376496484, "phrase": "architecture-level_technique"}, {"score": 0.0036080776793146843, "phrase": "snoop_energy_reduction"}, {"score": 0.0034971932704828197, "phrase": "unnecessary_coherency_requests"}, {"score": 0.0032727116186194584, "phrase": "broadcast_filtering"}, {"score": 0.0032094634756436595, "phrase": "snooping_cache"}, {"score": 0.0028771413440398614, "phrase": "remote_cache"}, {"score": 0.0028436364707396613, "phrase": "matching_block"}, {"score": 0.002671406231520296, "phrase": "coherency_requests"}, {"score": 0.002549096826249, "phrase": "experimental_results"}, {"score": 0.0024803459795996116, "phrase": "cache_lookups"}, {"score": 0.00243237365704391, "phrase": "bus_usage"}, {"score": 0.0023391880766516285, "phrase": "small_cost"}, {"score": 0.0023209828061385596, "phrase": "reduced_performance"}, {"score": 0.0022939396079753463, "phrase": "analysis_result"}, {"score": 0.0022583704173318123, "phrase": "energy_model"}, {"score": 0.0022320551224679526, "phrase": "broadcast_filtering_technique"}, {"score": 0.0021803388613879896, "phrase": "energy_consumption"}, {"score": 0.002154930852763048, "phrase": "coherency_operation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiprocessor system-on-a-chip (MPSoC)", " Snoop energy reduction", " Snooping cache", " Split bus", " Broadcast filtering"], "paper_abstract": "In multiprocessor system-on-a-chips (MPSoCs) that use snoop-based cache coherency protocols, a miss in the data cache triggers the broadcast of coherency request to all the remote caches, to keep all data coherent. However, the majority of these requests are unnecessary because remote caches do not have the matching blocks and so their tag lookups fail. Both the coherency requests and the tag lookups corresponding to a remote miss consume unnecessary energy. We propose an architecture-level technique for snoop energy reduction, called broadcast filtering, which prevents unnecessary coherency requests from being broadcast to remote caches, and thus reduces snoop energy consumption by both the cache and bus. Broadcast filtering is implemented using a snooping cache and a split bus. The snooping cache checks if a block that cannot be obtained locally exists in remote caches before broadcasting a coherency request. If no remote cache has the matching block, there is no broadcast; and if broadcasting is necessary, the split bus allows coherency requests to be broadcast selectively to the remote caches which have matching blocks. Experimental results show a reduction by 90% of cache lookups, by 60% of bus usage, and by 40% of snoop energy consumption, at a small cost in reduced performance. An analysis result based on the energy model shows the broadcast filtering technique can reduce by up to 55% of energy consumption per cache coherency operation. (C) 2009 Elsevier B.V. All rights reserved,", "paper_title": "Broadcast filtering: Snoop energy reduction in shared bus-based low-power MPSoCs", "paper_id": "WOS:000265176400007"}