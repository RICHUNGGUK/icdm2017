{"auto_keywords": [{"score": 0.03916274143666376, "phrase": "data_rates"}, {"score": 0.035668394336894886, "phrase": "stes"}, {"score": 0.00481495049065317, "phrase": "securing_stored_data"}, {"score": 0.004610058444728656, "phrase": "usb_memories"}, {"score": 0.00456571874088313, "phrase": "sd_cards"}, {"score": 0.004392565073466714, "phrase": "cryptography_literature"}, {"score": 0.004308455856718928, "phrase": "formal_notion"}, {"score": 0.004246428036409373, "phrase": "tweakable_enciphering_scheme"}, {"score": 0.004205629090105717, "phrase": "tes"}, {"score": 0.004007083686875716, "phrase": "secure_data_storage"}, {"score": 0.003949377440799037, "phrase": "real_challenge"}, {"score": 0.003855034057431947, "phrase": "low_cost"}, {"score": 0.0036730297909962142, "phrase": "targeted_memory_devices"}, {"score": 0.003516558537200823, "phrase": "first_answer"}, {"score": 0.0033182152378613767, "phrase": "stream_cipher"}, {"score": 0.003270396852243212, "phrase": "xor_universal_hash_function"}, {"score": 0.003100865267124765, "phrase": "usual_manner"}, {"score": 0.0030709962527878656, "phrase": "provable_security_approach"}, {"score": 0.002997572637726648, "phrase": "appropriate_variants"}, {"score": 0.002954361295811154, "phrase": "multi-linear_hash_function_and_the_pseudo-dot_product_based_hash_function"}, {"score": 0.0027474453262607834, "phrase": "hash_function"}, {"score": 0.0027078298877475965, "phrase": "recent_hardware_oriented_stream_ciphers"}, {"score": 0.0026687841359431105, "phrase": "mickey"}, {"score": 0.0024342079318127423, "phrase": "simulation_results"}, {"score": 0.0023079225317714815, "phrase": "different_usb"}, {"score": 0.002285674008055581, "phrase": "sd_memories"}], "paper_keywords": ["Tweakable enciphering scheme", " stream ciphers", " disk encryption", " USB memory", " SD card", " FPGA"], "paper_abstract": "The problem of securing data present on USB memories and SD cards has not been adequately addressed in the cryptography literature. While the formal notion of a tweakable enciphering scheme (TES) is well accepted as the proper primitive for secure data storage, the real challenge is to design a low cost TES which can perform at the data rates of the targeted memory devices. In this work, we provide the first answer to this problem. Our solution, called STES, combines a stream cipher with a XOR universal hash function. The security of STES is rigorously analyzed in the usual manner of provable security approach. By carefully defining appropriate variants of the multi-linear hash function and the pseudo-dot product based hash function we obtain controllable trade-offs between area and throughput. We combine the hash function with the recent hardware oriented stream ciphers, namely Mickey, Grain and Trivium. Our implementations are targeted towards two low cost FPGAs-Xilinx Spartan 3 and Lattice ICE40. Simulation results demonstrate that the speeds of encryption/decryption match the data rates of different USB and SD memories. We believe that our work opens up the possibility of actually putting FPGAs within controllers of such memories to perform low-level in-place encryption.", "paper_title": "STES: A Stream Cipher Based Low Cost Scheme for Securing Stored Data", "paper_id": "WOS:000359236500021"}