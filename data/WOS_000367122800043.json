{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_optoelectronic_processor"}, {"score": 0.004396267325338022, "phrase": "image_preprocessing"}, {"score": 0.004297388539539564, "phrase": "software_tools"}, {"score": 0.004106225442735525, "phrase": "presented_algorithms"}, {"score": 0.0034749794034364197, "phrase": "local_image_preprocessing_algorithms"}, {"score": 0.003371066990851953, "phrase": "edge_detection"}, {"score": 0.0032951702142329357, "phrase": "corner_detection"}, {"score": 0.0027671619871474764, "phrase": "input_image"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Parallel image processing", " Parallel optical processing", " High-performance computing", " Image preprocessing", " Parallel processing"], "paper_abstract": "In this paper we use and extend a parallel optoelectronic processor for image preprocessing and implement software tools for testing and evaluating the presented algorithms. After briefly introducing the processor and showing how images can be stored in it, we adapt a number of local image preprocessing algorithms for smoothing, edge detection, and corner detection, such that they can be executed on the processor in parallel. These algorithms are performed on all pixels of the input image in parallel and, as a result, in steps independent of its dimensions. We also develop a compiler and a simulator for evaluating and verifying the correctness of our implementations. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Image preprocessing with a parallel optoelectronic processor", "paper_id": "WOS:000367122800043"}