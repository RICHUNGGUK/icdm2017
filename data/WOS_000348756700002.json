{"auto_keywords": [{"score": 0.038126064742022917, "phrase": "cuda."}, {"score": 0.00481495049065317, "phrase": "ultra_efficient_kinetic_scheme"}, {"score": 0.0043506951029334984, "phrase": "fast_semi-lagrangian_scheme"}, {"score": 0.004073113268289532, "phrase": "parallel_architectures"}, {"score": 0.0038131738052230254, "phrase": "classical_architecture"}, {"score": 0.0034803228231621687, "phrase": "new_scheme"}, {"score": 0.0031926001871260524, "phrase": "cpu_time"}, {"score": 0.0031284221314354095, "phrase": "nowadays_affordable_computers"}, {"score": 0.003034558550137019, "phrase": "sequential_version"}, {"score": 0.002884317729022721, "phrase": "effective_parallel_implementation"}, {"score": 0.0027835848648596513, "phrase": "specific_treatments"}, {"score": 0.0026592094867526803, "phrase": "openmp_and_cuda_parallelizations"}, {"score": 0.00248927752933113, "phrase": "important_speed-up_factor"}, {"score": 0.0024023079401125492, "phrase": "sequential_code"}, {"score": 0.0023659694724243764, "phrase": "parallel_versions"}, {"score": 0.002271725588755076, "phrase": "real_competitor"}, {"score": 0.002226017732566121, "phrase": "existing_schemes"}, {"score": 0.00217017119491777, "phrase": "multidimensional_kinetic_models"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Kinetic equations", " Parallel computation", " GPU", " OPEN-MP", " CUDA", " Discrete velocity models", " Boltzmann-BGK equation", " Semi-Lagrangian schemes", " Three dimensional simulations"], "paper_abstract": "In this paper we demonstrate the capability of the fast semi-Lagrangian scheme developed in [20] and [21] to deal with parallel architectures. First, we will present the behaviors of such scheme on a classical architecture using OpenMP and then on GPU (Graphics Processing Unit) architecture using CUDA. The goal is to prove that this new scheme is well adapted to these types of parallelizations, and, moreover that the gain in CPU time is substantial on nowadays affordable computers. We first present the sequential version of our high-order kinetic scheme and focus on important details for an effective parallel implementation. Then, we introduce the specific treatments and algorithms which have been developed for an OpenMP and CUDA parallelizations. Numerical tests are shown for the full 3D/3D simulations. These assess the important speed-up factor of the method gained between the sequential code and the parallel versions and its very good scalability which makes this approach a real competitor with respect to existing schemes for the solution of multidimensional kinetic models. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Towards an ultra efficient kinetic scheme. Part III: High-performance-computing", "paper_id": "WOS:000348756700002"}