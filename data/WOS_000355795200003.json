{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "flow_visualisation_framework"}, {"score": 0.004761850836420121, "phrase": "research_software"}, {"score": 0.004530023871441992, "phrase": "concept_applications"}, {"score": 0.004381749459671914, "phrase": "new_algorithms"}, {"score": 0.0042148594491580324, "phrase": "new_research_algorithms"}, {"score": 0.004145287175409325, "phrase": "cohesive_software_framework"}, {"score": 0.004031865694174726, "phrase": "new_features"}, {"score": 0.00396530196547293, "phrase": "existing_pipeline_reduces_implementation_overhead"}, {"score": 0.0036892809673917592, "phrase": "previous_work"}, {"score": 0.0036485497734171294, "phrase": "new_research"}, {"score": 0.003588291565092195, "phrase": "previously_implemented_techniques"}, {"score": 0.003451517638449501, "phrase": "visualization_options"}, {"score": 0.0034134024569847264, "phrase": "new_ways"}, {"score": 0.0033757067564871494, "phrase": "typical_research_prototypes"}, {"score": 0.003283272764794988, "phrase": "software_application"}, {"score": 0.003158088307044493, "phrase": "domain_expert"}, {"score": 0.003088702479841264, "phrase": "future_use"}, {"score": 0.002921815042028607, "phrase": "recent_advancements"}, {"score": 0.0028895324165046166, "phrase": "game_design_technology"}, {"score": 0.002779318608820933, "phrase": "recent_graphics_hardware"}, {"score": 0.0026584843838039166, "phrase": "feature-rich_flow_visualization_software_framework"}, {"score": 0.0025713100093065645, "phrase": "typical_research_paper"}, {"score": 0.0024054226746197706, "phrase": "real-world_simulation_datasets"}, {"score": 0.0023265270905455334, "phrase": "commercial_package"}, {"score": 0.002152332983488664, "phrase": "previously_published_work"}, {"score": 0.0021049977753042253, "phrase": "research_contribution"}], "paper_keywords": ["software", " design", " application"], "paper_abstract": "Research software often consists of individual, isolated prototype applications. Small proof of concept applications are usually enough for demonstrating new algorithms. However, the unification of new research algorithms into a cohesive software framework has advantages. Adding new features to an existing pipeline reduces implementation overhead. The researcher is more able to compare and contrast existing or previous work with new research. Utilizing previously implemented techniques, researchers are able to combine visualization options in new ways that typical research prototypes cannot. The software application can be made available to the domain expert for evaluation and future use. These goals are in part realized by utilizing recent advancements in game design technology and by leveraging features available with recent graphics hardware. Described is the design of a feature-rich flow visualization software framework in more detail than a typical research paper. In contrast to most research prototypes, the system we present handles real-world simulation datasets by interfacing directly with the commercial package called tecplot. We present a description of our system in detail, whereas previously published work focuses on the research contribution. The effectiveness and scalability of the approach is also discussed.", "paper_title": "Design of a Flow Visualisation Framework", "paper_id": "WOS:000355795200003"}