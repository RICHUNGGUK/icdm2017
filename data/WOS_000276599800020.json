{"auto_keywords": [{"score": 0.033889731475892866, "phrase": "wlc"}, {"score": 0.01571966599424653, "phrase": "heavy_hitters"}, {"score": 0.008647610951150669, "phrase": "high-speed_network_monitoring"}, {"score": 0.004652016085325825, "phrase": "network_traffic_stream"}, {"score": 0.004529093447865156, "phrase": "network_applications"}, {"score": 0.004477407179841716, "phrase": "traffic_engineering"}, {"score": 0.004443276312972159, "phrase": "anomaly_detection"}, {"score": 0.0042928648367867835, "phrase": "service_attacks"}, {"score": 0.004260134699483774, "phrase": "existing_methods"}, {"score": 0.004211504818267892, "phrase": "newly_arriving_items"}, {"score": 0.0041001740903338834, "phrase": "small_number"}, {"score": 0.00402245126752142, "phrase": "small_amount"}, {"score": 0.0038713805573219297, "phrase": "identifying_accuracy"}, {"score": 0.0035179764329354877, "phrase": "identifying_algorithms"}, {"score": 0.00346449481422526, "phrase": "constant_update_time"}, {"score": 0.003372844338742438, "phrase": "weighted_data_stream"}, {"score": 0.0032336801561165113, "phrase": "weighted_lossy_counting"}, {"score": 0.003088384809415812, "phrase": "high-speed_weighted_data_stream"}, {"score": 0.002983700956478823, "phrase": "novel_efficient_partially_ordered_data_structure"}, {"score": 0.00290473242917264, "phrase": "fast_per-item_update_speed"}, {"score": 0.0026494723416072316, "phrase": "real_traffic"}, {"score": 0.0026091594819333654, "phrase": "experimental_results"}, {"score": 0.0023346234464901978, "phrase": "relatively_larger_memory_space"}, {"score": 0.0022990901047984197, "phrase": "theoretical_worst-case_memory"}, {"score": 0.0021789194955896124, "phrase": "long_real_traffic"}, {"score": 0.0021049977753042253, "phrase": "theoretical_bound"}], "paper_keywords": ["network traffic monitoring", " heavy hitter", " weighted data streams"], "paper_abstract": "Identifying heavy hitters in a network traffic stream is important for a variety of network applications ranging from traffic engineering to anomaly detection such as detection of denial-of-service attacks. Existing methods generally examine newly arriving items in the stream, perform a small number of operations using a small amount of memory, and still provide guarantees on the identifying accuracy. In high-speed network monitoring, the update speed per item is extremely critical. However, so far as we know, there are no identifying algorithms which can provide constant update time (O(1)) in a weighted data stream. In this paper, we present an algorithm named Weighted Lossy Counting (WLC) which is able to identify heavy hitters in a high-speed weighted data stream with constant update time. WLC employs a novel efficient partially ordered data structure which is able to provide a fast per-item update speed while keeping the memory cost relatively low. We compare WLC with state-of-the-art algorithms for finding heavy hitters in real traffic traces. The experimental results show that WLC performs well in accuracy (recall, precision and average relative error) as other algorithms; moreover it has a much higher update speed at the cost of relatively larger memory space used. A theoretical worst-case memory bound of WLC is also derived in this paper; however, experiments with long real traffic traces show that WLC requires much less space than the theoretical bound in practice.", "paper_title": "Identifying heavy hitters in high-speed network monitoring", "paper_id": "WOS:000276599800020"}