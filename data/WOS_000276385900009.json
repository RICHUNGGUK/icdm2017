{"auto_keywords": [{"score": 0.04450248810838313, "phrase": "ubiquitous_cameras"}, {"score": 0.00481495049065317, "phrase": "distributed_smart_cameras"}, {"score": 0.00430907756010007, "phrase": "authority_control_protocol"}, {"score": 0.0041269626762569095, "phrase": "gesture_recognition"}, {"score": 0.004076352180903171, "phrase": "real_time"}, {"score": 0.003952513974962462, "phrase": "multiple_cameras"}, {"score": 0.0038561471948364723, "phrase": "central_server"}, {"score": 0.003738973626996355, "phrase": "system_architecture"}, {"score": 0.0036030386046805598, "phrase": "inexpensive_cameras"}, {"score": 0.0034935290662899488, "phrase": "network_video_processing"}, {"score": 0.0033664873319204027, "phrase": "well-designed_single-node_algorithm"}, {"score": 0.0029937855454238507, "phrase": "finite-state_machine"}, {"score": 0.0029027394930867902, "phrase": "functional_services"}, {"score": 0.002797121441432477, "phrase": "service-oriented_software_architecture"}, {"score": 0.0026622351303038885, "phrase": "system_state_changes"}, {"score": 0.002565345470805401, "phrase": "control_messages"}, {"score": 0.0025338369486914364, "phrase": "neighboring_sensors"}, {"score": 0.0024416087858984644, "phrase": "broader_view"}, {"score": 0.002367315484467406, "phrase": "integrated_video-processing_results"}, {"score": 0.0022531089868518235, "phrase": "windows_machines"}, {"score": 0.002198084195030656, "phrase": "standard_video_cameras"}, {"score": 0.002144400314994328, "phrase": "local_network"}, {"score": 0.0021049977753042253, "phrase": "communication_channel"}], "paper_keywords": ["Design", " Experimentation", " Distributed cameras", " software architecture", " smart camera"], "paper_abstract": "In this article, we describe a distributed, peer-to-peer gesture recognition system along with a software architecture modeling technique and authority control protocol for ubiquitous cameras. This system performs gesture recognition in real time by combining imagery from multiple cameras without using a central server. We propose a system architecture that uses a network of inexpensive cameras to perform in-network video processing. A methodology for transforming well-designed single-node algorithm to distributed system is also proposed. Applications for ubiquitous cameras can be modeled as the composition of a finite-state machine of the system, functional services, and middleware. A service-oriented software architecture is proposed to dynamically reconfigure services when system state changes. By exchanging data and control messages between neighboring sensors, each node can maintain broader view of the environment with integrated video-processing results. Our prototype system is built on Windows machines, and uses standard video cameras as sensors and local network as a communication channel.", "paper_title": "System and Software Architectures of Distributed Smart Cameras", "paper_id": "WOS:000276385900009"}