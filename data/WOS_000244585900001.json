{"auto_keywords": [{"score": 0.038669057745424396, "phrase": "lehman"}, {"score": 0.004997463776124649, "phrase": "belady"}, {"score": 0.00481495049065317, "phrase": "longitudinal_empirical_data"}, {"score": 0.004770461993586338, "phrase": "commercial_software_applications"}, {"score": 0.0044289730051264116, "phrase": "likely_long-term_effects"}, {"score": 0.004367707617503722, "phrase": "software_process_automation_tool"}, {"score": 0.00399881984083004, "phrase": "source_control_systems"}, {"score": 0.003961842092184655, "phrase": "defect_tracking_systems"}, {"score": 0.003644001325962353, "phrase": "software_evolution"}, {"score": 0.00357689487273538, "phrase": "empirical_support"}, {"score": 0.0032898346872897383, "phrase": "moderated_regression_analysis"}, {"score": 0.0032292292848296617, "phrase": "software_process_automation_efforts"}, {"score": 0.0031845067058084583, "phrase": "research_site"}, {"score": 0.003140401552000472, "phrase": "software_evolution_lifecycles"}, {"score": 0.002874870266177579, "phrase": "greater_productivity"}, {"score": 0.0027570267191549774, "phrase": "applications_portfolio"}, {"score": 0.0026811531172346676, "phrase": "software_functionality"}, {"score": 0.0025474193855847074, "phrase": "software_complexity_levels"}, {"score": 0.0023646866829474798, "phrase": "longitudinal_empirical_software_data"}, {"score": 0.0022889103976458437, "phrase": "often_elusive_long-term_benefits"}, {"score": 0.0022467024793003812, "phrase": "software_process_improvement"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software maintenance", " software complexity", " software quality", " software productivity", " computer-aided software engineering (CASE)", " longitudinal analysis", " Lehman's laws of software evolution"], "paper_abstract": "This research analyzes longitudinal empirical data on commercial software applications to test and better understand how software evolves over time, and to measure the likely long-term effects of a software process automation tool on software productivity and quality. The research consists of two parts. First, we use data from source control systems, defect tracking systems, and archived project documentation to test a series of hypotheses developed by Belady and Lehman about software evolution. We find empirical support for many of these hypotheses, but not all. We then further analyze the data using moderated regression analysis to discern how software process automation efforts at the research site influenced the software evolution lifecycles of the applications. Our results support the claim that automation has enabled the organization to accomplish more work activities with greater productivity, thereby significantly increasing the functionality of the applications portfolio. Despite the growth in software functionality, the analysis suggests that automation has helped to manage software complexity levels and to improve quality by reducing errors over time. Our models and their results demonstrate how longitudinal empirical software data can be used to reveal the often elusive long-term benefits of investments in software process improvement, and to help managers make more informed resource-allocation decisions. Copyright (C) 2007 John Wiley & Sons, Ltd.", "paper_title": "How software process automation afffects software evolution: a longitudinal empirical analysis", "paper_id": "WOS:000244585900001"}