{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "peeling"}, {"score": 0.004717125879761534, "phrase": "k-matches_problem"}, {"score": 0.004390060342250211, "phrase": "text_location"}, {"score": 0.004322967486451877, "phrase": "desired_output"}, {"score": 0.004235095881928715, "phrase": "aligned_matching_characters"}, {"score": 0.003378385493203297, "phrase": "different_\"match\"_definitions"}, {"score": 0.003160049822855747, "phrase": "k-aligned_ones"}, {"score": 0.002895620643297197, "phrase": "efficient_solutions"}, {"score": 0.002708399936381754, "phrase": "general_method"}, {"score": 0.002456272788591051, "phrase": "group_testing"}, {"score": 0.0022738775158524793, "phrase": "general_framework"}, {"score": 0.0022390533383717715, "phrase": "improved_results"}], "paper_keywords": ["Shortest paths", " witness computation"], "paper_abstract": "In the k-matches problem, we are given a pattern and a text, and for each text location, the desired output consists of all aligned matching characters if there are k or fewer of them, and any k aligned matching characters if there are more than k of them. This problem is one of several string matching problems that seek not only to find where the pattern matches the text under different \"match\" definitions, but also to provide witnesses to the match. Other such problems include k-aligned ones, k-witnesses, and k-mismatches. In addition, the solutions to several other string matching problems rely on the efficient solutions of the witness finding problems. In this article we provide a general method for solving such witness finding problems efficiently. We do so by casting the problem as a generalization of group testing, which we then solve by a process we call peeling. Using this general framework we obtain improved results for all of the problems mentioned. We also show that our method also solves a couple of problems outside the pattern matching domain.", "paper_title": "Finding Witnesses by Peeling", "paper_id": "WOS:000292839300011"}