{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "speculative_push"}, {"score": 0.004740476936977635, "phrase": "unnecessary_checkpoint_creation_avoidance"}, {"score": 0.0044192837023190445, "phrase": "speculation_techniques"}, {"score": 0.004152018764100109, "phrase": "unnecessary_checkpoints"}, {"score": 0.003993216345115755, "phrase": "general_technique"}, {"score": 0.0036080776793146843, "phrase": "shared_objects"}, {"score": 0.0034971932704828197, "phrase": "accessing_node"}, {"score": 0.0030387767523076528, "phrase": "actual_access_operation"}, {"score": 0.002766963729586353, "phrase": "considerable_performance_improvement"}, {"score": 0.002579140290642792, "phrase": "proposed_specckpt_protocol"}, {"score": 0.002519402443228795, "phrase": "independent_checkpointing"}, {"score": 0.0024418934977061876, "phrase": "coherence_protocol"}, {"score": 0.0021049977753042253, "phrase": "fast_recovery"}], "paper_keywords": [""], "paper_abstract": "This paper discusses a way of incorporating speculation techniques into Distributed Shared Memory (DSM) systems with checkpointing mechanism without creating unnecessary checkpoints. Speculation is a general technique involving prediction of the future of a computation, namely accesses to shared objects unavailable on the accessing node (read faults). Thanks to such predictions objects can be pushed to requesting nodes before the actual access operation is performed, resulting, at least potentially, in a considerable performance improvement. This mechanism is a foundation for the proposed SpecCkpt protocol based on independent checkpointing integrated with a coherence protocol for a given consistency model introducing little overhead. It ensures the consistency of checkpoints, at the same time allowing a fast recovery from failures.", "paper_title": "Using speculative push for unnecessary checkpoint creation avoidance", "paper_id": "WOS:000239059700024"}