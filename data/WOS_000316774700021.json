{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "main-memory_database_systems"}, {"score": 0.00436890075128947, "phrase": "strong_demands"}, {"score": 0.00412796126884884, "phrase": "data_access"}, {"score": 0.003996271202811961, "phrase": "front-end_logistical_systems"}, {"score": 0.003775803846431323, "phrase": "auxiliary-tree_approach"}, {"score": 0.003685067218455088, "phrase": "tree-merging_algorithm"}, {"score": 0.003567455727660992, "phrase": "bursty_data_insertions"}, {"score": 0.00342568771304873, "phrase": "small_range"}, {"score": 0.0033433365160336842, "phrase": "significant_overheads"}, {"score": 0.003289534854212415, "phrase": "tree_rebalancing"}, {"score": 0.003210446135114967, "phrase": "range-based_deletion_algorithm"}, {"score": 0.003057910095857785, "phrase": "data_deletions"}, {"score": 0.0030086877092638945, "phrase": "strong_access_locality"}, {"score": 0.002936331371903168, "phrase": "batch_fashion"}, {"score": 0.002796782643988021, "phrase": "proposed_approach"}, {"score": 0.002578745296475411, "phrase": "wide_range"}, {"score": 0.002436289099444074, "phrase": "locality_patterns"}, {"score": 0.0023776656246300063, "phrase": "different_tree_index_structures"}, {"score": 0.0022101055924375725, "phrase": "memory_space_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Main-memory database", " RFID applications", " Access locality", " Index structures"], "paper_abstract": "This paper is motivated by the strong demands of many main-memory database applications with strong locality in data access, such as front-end logistical systems. We propose to adopt an auxiliary-tree approach with an tree-merging algorithm to efficiently handle bursty data insertions with keys in a small range and avoid significant overheads in tree rebalancing. A range-based deletion algorithm is then proposed to process data deletions with strong access locality in a batch fashion. The capability of the proposed approach is evaluated by a series of experiments with a wide range of workloads and a variety of locality patterns, where different tree index structures are compared in terms of the performance and memory space requirements. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "An efficient B+-tree design for main-memory database systems with strong access locality", "paper_id": "WOS:000316774700021"}