{"auto_keywords": [{"score": 0.04838919478929022, "phrase": "timed_automata"}, {"score": 0.00481495049065317, "phrase": "parametric_timed_automata."}, {"score": 0.004582897918101983, "phrase": "timing_bounds"}, {"score": 0.00450130420152996, "phrase": "action_guards"}, {"score": 0.004461051281091779, "phrase": "location_invariants"}, {"score": 0.0040777192615062815, "phrase": "timed_systems"}, {"score": 0.004041238873048836, "phrase": "e.g._communication_protocols"}, {"score": 0.004005083535629333, "phrase": "asynchronous_circuits"}, {"score": 0.003141830113006653, "phrase": "parameter_valuation"}, {"score": 0.0026009105281485888, "phrase": "algorithm_inverse_method"}, {"score": 0.0025202582748972122, "phrase": "acyclic_models"}, {"score": 0.0024093494406195386, "phrase": "cyclic_case"}, {"score": 0.0023033100935570755, "phrase": "classical_synthesis_methods"}, {"score": 0.0021920373388760314, "phrase": "bad_states"}, {"score": 0.00216263228969761, "phrase": "prototype_implementation"}], "paper_keywords": ["Parameter synthesis", " reachability analysis", " time-abstract equivalence"], "paper_abstract": "We consider in this paper modeled by timed automata. The timing bounds involved in the action guards and location invariants of our timed automata are not constants, but parameters. Those parametric timed automata allow the modelling of various kinds of timed systems, e.g. communication protocols or asynchronous circuits. We will also assume that we are given an initial tuple pi(0) of values for the parameters which corresponds to values for which the system is known to behave properly. Our goal is to compute a constraint K(0) on the parameters, satisfied by pi(0), guaranteeing that, under any parameter valuation satisfying K(0), the system behaves in the same manner: for any two parameters valuations satisfying K(0), the behaviors of the timed automata are (time-abstract) equivalent, i.e., the traces of execution viewed as alternating sequences of actions and locations are identical. We present an algorithm Inverse Method that terminates in the case of acyclic models, and discuss how to extend it to the cyclic case. We also explain how to combine our method with classical synthesis methods which are based on the avoidance of a given set of bad states. A prototype implementation has been done, and various experiments are described.", "paper_title": "AN INVERSE METHOD FOR PARAMETRIC TIMED AUTOMATA", "paper_id": "WOS:000272248900004"}