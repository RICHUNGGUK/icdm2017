{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "defect_correction_effort"}, {"score": 0.0047468516620285525, "phrase": "bayesian_network_model"}, {"score": 0.00452670409375785, "phrase": "software_companies"}, {"score": 0.004255639740735269, "phrase": "different_impacts"}, {"score": 0.004195418010131832, "phrase": "overall_defect_correction_effort_-_defects"}, {"score": 0.0036553070575015344, "phrase": "main_aim"}, {"score": 0.0032766780632972363, "phrase": "software_development_process"}, {"score": 0.0028409576481842457, "phrase": "developed_defect_cost_flow_model"}, {"score": 0.002657890175649468, "phrase": "software_project_lifecycle"}, {"score": 0.0026077803487003, "phrase": "known_qualitative_and_quantitative_relationships"}, {"score": 0.002522344964242888, "phrase": "real_industrial_process"}, {"score": 0.0024513404432665153, "phrase": "appropriate_amount"}, {"score": 0.0024281181691350085, "phrase": "review_effort"}, {"score": 0.0024051153560799335, "phrase": "specific_development_phases"}, {"score": 0.002359759876402679, "phrase": "overall_costs"}, {"score": 0.0022393843660697484, "phrase": "decision_support"}, {"score": 0.0021049977753042253, "phrase": "specific_development_environment"}], "paper_keywords": ["Bayesian Network", " Correction effort", " Decision support", " Defect flow", " Process modeling", " Software process"], "paper_abstract": "The number of defects alone does not provide software companies with enough information on the effort required to fix them. Defects have different impacts on the overall defect correction effort - defects introduced in one phase may be found and corrected in the same or later phase. The later they are found, the more effort is required to correct them. The main aim of this paper is to build and validate a model (Bayesian Network) for predicting the defect correction effort at various phases of the software development process. The procedure of building the model covers the following steps: problem analysis, data analysis, model definition and enhancement, simulation runs, and model validation. Developed Defect Cost Flow Model (DCFM), which is an implementation of the V-model of a software project lifecycle, correctly incorporates known qualitative and quantitative relationships. Application of DCFM in a real industrial process revealed its high potential in finding the appropriate amount of review effort for specific development phases to minimize the overall costs. The model may be used in the industry for decision support. It can be extended and calibrated to meet the needs of specific development environment.", "paper_title": "Predicting the Flow of Defect Correction Effort using a Bayesian Network Model", "paper_id": "WOS:000319774300002"}