{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "async-finish_parallelism"}, {"score": 0.00465067040500426, "phrase": "core_calculus"}, {"score": 0.004161553532799662, "phrase": "convenient_basis"}, {"score": 0.004104132253183181, "phrase": "type_systems"}, {"score": 0.004047500054405469, "phrase": "static_analyses"}, {"score": 0.0038286491141253584, "phrase": "tractable_proofs"}, {"score": 0.003571591012750155, "phrase": "short_proof"}, {"score": 0.0034978813769575233, "phrase": "deadlock-freedom_theorem"}, {"score": 0.003449586776840308, "phrase": "saraswat"}, {"score": 0.0034019572009383056, "phrase": "jagadeesan"}, {"score": 0.003285725064532174, "phrase": "type_system"}, {"score": 0.0031955979242589494, "phrase": "open_problem"}, {"score": 0.0031514627590375354, "phrase": "context-sensitive_may-happen-in-_parallel_analysis"}, {"score": 0.0027806165169981622, "phrase": "experimental_results"}, {"score": 0.002723186210025975, "phrase": "type_inference"}, {"score": 0.0025578967205807843, "phrase": "polynomial_time"}, {"score": 0.002336655334451466, "phrase": "low_number"}, {"score": 0.0023043558058824572, "phrase": "false_positives"}, {"score": 0.0021795515361987144, "phrase": "good_basis"}, {"score": 0.0021049977753042253, "phrase": "race_detectors"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Verification", " parallelism", " operational semantics", " static analysis"], "paper_abstract": "We present a core calculus with two of X10's key constructs for parallelism, namely async and finish. Our calculus forms a convenient basis for type systems and static analyses for languages with async-finish parallelism, and for tractable proofs of correctness. For example, we give a short proof of the deadlock-freedom theorem of Saraswat and Jagadeesan. Our main contribution is a type system that solves the open problem of context-sensitive may-happen-in- parallel analysis for languages with async-finish parallelism. We prove the correctness of our type system and we report experimental results of performing type inference on 13,000 lines of X10 code. Our analysis runs in polynomial time, takes a total of 28 seconds on our benchmarks, and produces a low number of false positives, which suggests that our analysis is a good basis for other analyses such as race detectors.", "paper_title": "Featherweight X10: A Core Calculus for Async-Finish Parallelism", "paper_id": "WOS:000280548100003"}