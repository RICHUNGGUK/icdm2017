{"auto_keywords": [{"score": 0.0483576479270538, "phrase": "ca"}, {"score": 0.010611126984375257, "phrase": "large-scale_urban_simulation"}, {"score": 0.006744359286752672, "phrase": "parallel_computation_techniques"}, {"score": 0.004764859786310636, "phrase": "load-balancing_techniques"}, {"score": 0.004451676867747938, "phrase": "bottom-up_approaches"}, {"score": 0.004291617358806677, "phrase": "urban_dynamics"}, {"score": 0.004246947739596565, "phrase": "land_use_changes"}, {"score": 0.004180809918117248, "phrase": "urban_simulation"}, {"score": 0.0040942189695983185, "phrase": "large_set"}, {"score": 0.004051595625804513, "phrase": "gis_data"}, {"score": 0.0038854765143440965, "phrase": "study_area"}, {"score": 0.003785115566529808, "phrase": "spatial_factors"}, {"score": 0.0037261429556468217, "phrase": "computation_capability"}, {"score": 0.003554661425339528, "phrase": "large_regions"}, {"score": 0.0035176353680157367, "phrase": "parallel_computing_techniques"}, {"score": 0.003320756562046789, "phrase": "hard_computation_problem"}, {"score": 0.0030062165552187086, "phrase": "proposed_urban_ca"}, {"score": 0.0029284999172756103, "phrase": "parallel_framework"}, {"score": 0.0027790254309734428, "phrase": "large_region"}, {"score": 0.002721388234661538, "phrase": "heterogeneous_or_polarized_development_patterns"}, {"score": 0.002637160140011997, "phrase": "line-scanning_method"}, {"score": 0.0025555322596460036, "phrase": "waiting_time"}, {"score": 0.0025288869172313674, "phrase": "parallel_processors"}, {"score": 0.0024894376091589244, "phrase": "proposed_method"}, {"score": 0.002412371116984224, "phrase": "fast-growing_region"}, {"score": 0.002374735066990346, "phrase": "pearl_river"}, {"score": 0.0022653055209664284, "phrase": "load_balance"}, {"score": 0.0021383680500215267, "phrase": "urban_development"}, {"score": 0.0021049977753042253, "phrase": "large_complex_region"}], "paper_keywords": ["parallel computing", " load-balancing", " GIS", " cellular automata", " urban simulation"], "paper_abstract": "Cellular automata (CA), which are a kind of bottom-up approaches, can be used to simulate urban dynamics and land use changes effectively. Urban simulation usually involves a large set of GIS data in terms of the extent of the study area and the number of spatial factors. The computation capability becomes a bottleneck of implementing CA for simulating large regions. Parallel computing techniques can be applied to CA for solving this kind of hard computation problem. This paper demonstrates that the performance of large-scale urban simulation can be significantly improved by using parallel computation techniques. The proposed urban CA is implemented in a parallel framework that runs on a cluster of PCs. A large region usually consists of heterogeneous or polarized development patterns. This study proposes a line-scanning method of load balance to reduce waiting time between parallel processors. This proposed method has been tested in a fast-growing region, the Pearl River Delta. The experiments indicate that parallel computation techniques with load balance can significantly improve the applicability of CA for simulating the urban development in this large complex region.", "paper_title": "Parallel cellular automata for large-scale urban simulation using load-balancing techniques", "paper_id": "WOS:000276747400001"}