{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "unranked_terms"}, {"score": 0.004372002674739612, "phrase": "term_and_hedge_variables"}, {"score": 0.004293584349522444, "phrase": "anti-unification_problem"}, {"score": 0.0037597491055035895, "phrase": "hedge_variables"}, {"score": 0.003539479990299223, "phrase": "term_variables"}, {"score": 0.0034550163444256386, "phrase": "different_top_function_symbols"}, {"score": 0.003312009953245191, "phrase": "complete_and_minimal_algorithm"}, {"score": 0.003252542052430782, "phrase": "least_general_generalizations"}, {"score": 0.0030069062905274976, "phrase": "possible_alternatives"}, {"score": 0.0027463775689957255, "phrase": "rigidity_function"}, {"score": 0.002616762777413686, "phrase": "improved_algorithm"}, {"score": 0.0024336917123957387, "phrase": "obtained_rigid_anti-unification_algorithm"}, {"score": 0.0022909325048608054, "phrase": "hedge_and_term_variables"}, {"score": 0.002169607777109061, "phrase": "possible_application"}, {"score": 0.0021049977753042253, "phrase": "software_engineering"}], "paper_keywords": ["Anti-unification", " Generalization", " Unranked terms", " Hedges", " Software clones"], "paper_abstract": "We study anti-unification for unranked terms and hedges that may contain term and hedge variables. The anti-unification problem of two hedges and is concerned with finding their generalization, a hedge such that both and are instances of under some substitutions. Hedge variables help to fill in gaps in generalizations, while term variables abstract single (sub)terms with different top function symbols. First, we design a complete and minimal algorithm to compute least general generalizations. Then, we improve the efficiency of the algorithm by restricting possible alternatives permitted in the generalizations. The restrictions are imposed with the help of a rigidity function, which is a parameter in the improved algorithm and selects certain common subsequences from the hedges to be generalized. The obtained rigid anti-unification algorithm is further made more precise by permitting combination of hedge and term variables in generalizations. Finally, we indicate a possible application of the algorithm in software engineering.", "paper_title": "Anti-unification for Unranked Terms and Hedges", "paper_id": "WOS:000330589600002"}