{"auto_keywords": [{"score": 0.03480136597681607, "phrase": "amd_opteron"}, {"score": 0.00481495049065317, "phrase": "lattice_boltzmann_computation"}, {"score": 0.004770211811866158, "phrase": "state-of-the-art_multicore_platforms"}, {"score": 0.00453144352814823, "phrase": "application_performance"}, {"score": 0.004489327204473076, "phrase": "emerging_multicore_architectures"}, {"score": 0.004324723240308028, "phrase": "search-based_performance_optimizations"}, {"score": 0.0042446888127531945, "phrase": "linear_algebra"}, {"score": 0.004205226397573506, "phrase": "fft_libraries"}, {"score": 0.004146716743362567, "phrase": "application-specific_computational_kernels"}, {"score": 0.003976007772514762, "phrase": "lattice_boltzmann_application"}, {"score": 0.003939033374807842, "phrase": "lbmhd"}, {"score": 0.0038301525703886585, "phrase": "poor_use"}, {"score": 0.00379452936798156, "phrase": "scalar_microprocessors"}, {"score": 0.0037069087922811488, "phrase": "memory_access_patterns"}, {"score": 0.003587616378156851, "phrase": "broadest_sets"}, {"score": 0.0035542408902458677, "phrase": "multicore_architectures"}, {"score": 0.003504756881063581, "phrase": "high-performance_computing"}, {"score": 0.0032522091171602557, "phrase": "santa_rosa"}, {"score": 0.0031622806515511277, "phrase": "barcelona"}, {"score": 0.0030604342671868836, "phrase": "victoria_falls"}, {"score": 0.0029481155290739486, "phrase": "ibm"}, {"score": 0.0028664985822266344, "phrase": "hand-tuning_lbmhd"}, {"score": 0.0027612315954598085, "phrase": "code_generator"}, {"score": 0.0026722904884984348, "phrase": "highly_optimized_version"}, {"score": 0.0025741370320813968, "phrase": "human_programming_effort"}, {"score": 0.002410942838102255, "phrase": "original_code"}, {"score": 0.002300734266971646, "phrase": "detailed_analysis"}, {"score": 0.002226592967032469, "phrase": "surprising_hardware_bottlenecks"}, {"score": 0.0022058510091498666, "phrase": "software_challenges"}, {"score": 0.002185301851004467, "phrase": "future_multicore_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Lattice Boltzmann", " Auto-tuning", " Multicore", " Cell broadband engine", " Niagara"], "paper_abstract": "We present an auto-tuning approach to optimize application performance on emerging multicore architectures. The methodology extends the idea of search-based performance optimizations, popular in linear algebra and FFT libraries, to application-specific computational kernels. Our work applies this strategy to a lattice Boltzmann application (LBMHD) that historically has made poor use of scalar microprocessors due to its complex data structures and memory access patterns. We explore one of the broadest sets of multicore architectures in the high-performance computing (HPC) literature, including the Intel Xeon E5345 (Clovertown), AMD Opteron 2214 (Santa Rosa), AMD Opteron 2356 (Barcelona), Sun T5140 T2+ (Victoria Falls), as well as a QS20 IBM Cell Blade. Rather than hand-tuning LBMHD for each system, we develop a code generator that allows us to identify a highly optimized version for each platform, while amortizing the human programming effort. Results show that our auto-tuned LBMHD application achieves up to a 15 times improvement compared with the original code at a given concurrency. Additionally, we present a detailed analysis of each optimization, which reveals surprising hardware bottlenecks and software challenges for future multicore systems and applications. (c) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Optimization of a lattice Boltzmann computation on state-of-the-art multicore platforms", "paper_id": "WOS:000268739800003"}