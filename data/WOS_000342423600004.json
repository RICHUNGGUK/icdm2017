{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "redundancy_models"}, {"score": 0.03529624542703246, "phrase": "redundant_components"}, {"score": 0.004736045157669388, "phrase": "high_availability_middleware"}, {"score": 0.004506968388996092, "phrase": "fault_tolerant_systems"}, {"score": 0.004396600680348434, "phrase": "single_point"}, {"score": 0.004081385289516914, "phrase": "system_component"}, {"score": 0.0027665315772006575, "phrase": "different_redundancy_models"}, {"score": 0.002546708483171714, "phrase": "different_assumptions"}, {"score": 0.0022679195103377124, "phrase": "standardized_middleware"}, {"score": 0.0022306602656266545, "phrase": "service_high_availability"}, {"score": 0.0021579641460002523, "phrase": "specific_setups"}, {"score": 0.0021049977753042253, "phrase": "configuration_guidelines"}], "paper_keywords": ["Quality of service", " Service availability", " Redundancy models", " Availability management", " Availability analysis", " Stochastic petri nets"], "paper_abstract": "Highly available systems are fault tolerant systems with no single point of failure. Thus the failure of a system component does not imply the outage of the service (i.e. the functionality) provided by the component. This is achieved by deploying redundant components that resume the service provisioning in case of failure. These redundant components may collaborate in assuring the availability of their service according to different redundancy models. In this paper we analyze these redundancy models under different assumptions, and compare their effectiveness with respect to availability in the context of a standardized middleware for service high availability and under some specific setups to derive configuration guidelines.", "paper_title": "Comparing redundancy models for high availability middleware", "paper_id": "WOS:000342423600004"}