{"auto_keywords": [{"score": 0.04969878093671088, "phrase": "genetic_programming"}, {"score": 0.04438774996292024, "phrase": "high_locality"}, {"score": 0.030105208414871652, "phrase": "gp"}, {"score": 0.00481495049065317, "phrase": "problem_difficulty_measure"}, {"score": 0.004556901872357751, "phrase": "evolutionary_computation"}, {"score": 0.00438105507792004, "phrase": "neighbouring_genotypes"}, {"score": 0.004329630571352367, "phrase": "neighbouring_phenotypes"}, {"score": 0.00414616342377235, "phrase": "phenotypic_neighbours"}, {"score": 0.0040334640350288, "phrase": "key_element"}, {"score": 0.003986103192038901, "phrase": "effective_evolutionary_search"}, {"score": 0.003757480190200645, "phrase": "evolutionary_search"}, {"score": 0.0035981701736904495, "phrase": "low_locality"}, {"score": 0.003459191419478298, "phrase": "genotype-phenotype_mapping"}, {"score": 0.003432044343307207, "phrase": "bitstring-based_genetic_algorithms"}, {"score": 0.0031845067058084583, "phrase": "grammatical_evolution"}, {"score": 0.002752390133272192, "phrase": "problem_difficulty"}, {"score": 0.002533687835358909, "phrase": "standard_quantitative_definition"}, {"score": 0.0025137856138000014, "phrase": "genotype-phenotype_locality"}, {"score": 0.0024842242921857705, "phrase": "genotype-fitness_mapping"}, {"score": 0.002332322771009122, "phrase": "discrete-valued_fitness_functions"}, {"score": 0.002224510044064184, "phrase": "different_function_sets"}, {"score": 0.0021724831184390192, "phrase": "slightly_different_gp_encoding"}, {"score": 0.002146926767291475, "phrase": "six_different_mutation_operators"}], "paper_keywords": ["Locality", " Genotype-phenotype mapping", " Genotype-fitness mapping", " Problem hardness", " Genetic programming"], "paper_abstract": "A mapping is local if it preserves neighbourhood. In Evolutionary Computation, locality is generally described as the property that neighbouring genotypes correspond to neighbouring phenotypes. A representation has high locality if most genotypic neighbours are mapped to phenotypic neighbours. Locality is seen as a key element in performing effective evolutionary search. It is believed that a representation that has high locality will perform better in evolutionary search and the contrary is true for a representation that has low locality. When locality was introduced, it was the genotype-phenotype mapping in bitstring-based Genetic Algorithms which was of interest; more recently, it has also been used to study the same mapping in Grammatical Evolution. To our knowledge, there are few explicit studies of locality in Genetic Programming (GP). The goal of this paper is to shed some light on locality in GP and use it as an indicator of problem difficulty. Strictly speaking, in GP the genotype and the phenotype are not distinct. We attempt to extend the standard quantitative definition of genotype-phenotype locality to the genotype-fitness mapping by considering three possible definitions. We consider the effects of these definitions in both continuous- and discrete-valued fitness functions. We compare three different GP representations (two of them induced by using different function sets and the other using a slightly different GP encoding) and six different mutation operators. Results indicate that one definition of locality is better in predicting performance.", "paper_title": "Defining locality as a problem difficulty measure in genetic programming", "paper_id": "WOS:000294505700002"}