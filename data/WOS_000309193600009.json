{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "noisy_fitness"}, {"score": 0.04559556617638774, "phrase": "decision_engine"}, {"score": 0.004781357546476652, "phrase": "real-time_strategy_games"}, {"score": 0.004698392162272106, "phrase": "evolutionary_algorithms"}, {"score": 0.004505074966056871, "phrase": "evolutionary_algorithm"}, {"score": 0.004473729950600338, "phrase": "ea"}, {"score": 0.004112961231504503, "phrase": "planet_wars"}, {"score": 0.003971367134498762, "phrase": "google_artificial_intelligence_challenge"}, {"score": 0.0038346288310750804, "phrase": "multiple_target_planets"}, {"score": 0.0036767202303156854, "phrase": "different_opponents"}, {"score": 0.003651039356522665, "phrase": "different_scenarios"}, {"score": 0.0033919477901198716, "phrase": "empirical_study"}, {"score": 0.0033447157263095223, "phrase": "genetic_algorithm"}, {"score": 0.0029274600162609654, "phrase": "evolved_decision_engine"}, {"score": 0.002787306553487191, "phrase": "google"}, {"score": 0.00275800486983114, "phrase": "sparring_partner"}, {"score": 0.00268168157806506, "phrase": "pre-established_behaviour"}, {"score": 0.0025892330566358503, "phrase": "candidate_solutions"}, {"score": 0.0025264171945423254, "phrase": "non-deterministic_battles"}, {"score": 0.0024999636244840647, "phrase": "environmental_interactions"}, {"score": 0.0024307637980373552, "phrase": "random_draws"}, {"score": 0.002380120876826732, "phrase": "opponents'_actions"}, {"score": 0.0023387234705715154, "phrase": "proposed_ga"}, {"score": 0.002298044430178591, "phrase": "noisy_fitness_function"}, {"score": 0.0021725557397878565, "phrase": "repeated_combats"}, {"score": 0.0021052472456778645, "phrase": "ga"}], "paper_keywords": ["real-time strategy game", " genetic algorithm", " noisy fitness", " player behaviour optimisation", " parameter adaptation"], "paper_abstract": "This paper investigates the performance and the results of an evolutionary algorithm (EA) specifically designed for evolving the decision engine of a program (winch, in this context, is called bot) that plays Planet Wars. This game, which was chosen for the Google Artificial Intelligence Challenge in 2010, requires the bot to deal with multiple target planets, while achieving a certain degree of adaptability in order to defeat different opponents in different scenarios. The decision engine of the bot is initially based on a set of rules that have been defined after an empirical study, and a genetic algorithm (GA) is used for tuning the set of constants, weights and probabilities that those rules include, and therefore, the general behaviour of the bot. Then, the bot is supplied with the evolved decision engine and the results obtained when competing with other hots (a hot offered by Google as a sparring partner, and a scripted hot with a pre-established behaviour) are thoroughly analysed. The evaluation of the candidate solutions is based on the result of non-deterministic battles (and environmental interactions) against other bots, whose outcome depends on random draws as well as on the opponents' actions. Therefore, the proposed GA is dealing with a noisy fitness function. After analysing the effects of the noisy fitness, we conclude that tackling randomness via repeated combats and reevaluations reduces this effect and makes the GA a highly valuable approach for solving this problem.", "paper_title": "Effect of Noisy Fitness in Real-Time Strategy Games Player Behaviour Optimisation Using Evolutionary Algorithms", "paper_id": "WOS:000309193600009"}