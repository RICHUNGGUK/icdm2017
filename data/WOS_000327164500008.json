{"auto_keywords": [{"score": 0.04660802533264657, "phrase": "gpu."}, {"score": 0.0036553070575015344, "phrase": "computational_complexity"}, {"score": 0.003306559295382181, "phrase": "nvidia_cuda_technology"}, {"score": 0.0031186510842824626, "phrase": "different_types"}, {"score": 0.003066945490483524, "phrase": "graphical_processors"}, {"score": 0.0029909851863915283, "phrase": "average_speedup"}, {"score": 0.0027741761880779535, "phrase": "cpu_sequential_code"}, {"score": 0.002426717832834137, "phrase": "synthetic_seismic_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["GPU", " Wave-packet decomposition", " Seismic processing"], "paper_abstract": "In this paper, we consider 3D wave-packet transform that is useful in 3D data processing. This transform is computationally intensive even though it has a computational complexity of O(N-3 log N). Here we present its implementation on GPUs using NVIDIA CUDA technology. The code was tested on different types of graphical processors achieving the average speedup up to 46 times on Tesla M2050 compared to CPU sequential code. Also, we analyzed its scalability for several GPUs. The code was tested for processing synthetic seismic data set: data compression, de-noising, and interpolation. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Parallel algorithm of 3D wave-packet decomposition of seismic data: Implementation and optimization for GPU", "paper_id": "WOS:000327164500008"}