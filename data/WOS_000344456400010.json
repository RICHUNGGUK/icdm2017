{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fast_abstract_syntax_tree_interpreter"}, {"score": 0.004760765880314089, "phrase": "r._dynamic"}, {"score": 0.004156012879026324, "phrase": "high-performance_runtime"}, {"score": 0.003648411055689428, "phrase": "particular_language"}, {"score": 0.003526476304712492, "phrase": "naive_implementations"}, {"score": 0.0032760377953971248, "phrase": "domain_scientists"}, {"score": 0.0029920129598858545, "phrase": "naive_implementation"}, {"score": 0.0028111220617485985, "phrase": "runtime_systems"}, {"score": 0.0027325449069867222, "phrase": "r_language"}, {"score": 0.0024814079299143536, "phrase": "simplest_possible_implementation_strategy"}, {"score": 0.0023848164282879885, "phrase": "abstract_syntax_trees"}, {"score": 0.0022661190184053628, "phrase": "java_virtual_machine"}, {"score": 0.0021778895748464024, "phrase": "java_programmers"}], "paper_keywords": ["R language", " specialization", " lazy evaluation"], "paper_abstract": "Dynamic languages have been gaining popularity to the point that their performance is starting to matter. The effort required to develop a production-quality, high-performance runtime is, however, staggering and the expertise required to do so is often out of reach of the community maintaining a particular language. Many domain specific languages remain stuck with naive implementations, as they are easy to write and simple to maintain for domain scientists. In this paper, we try to see how far one can push a naive implementation while remaining portable and not requiring expertise in compilers and runtime systems. We choose the R language, a dynamic language used in statistics, as the target of our experiment and adopt the simplest possible implementation strategy, one based on evaluation of abstract syntax trees. We build our interpreter on top of a Java virtual machine and use only facilities available to all Java programmers. We compare our results to other implementations of R.", "paper_title": "A Fast Abstract Syntax Tree Interpreter for R", "paper_id": "WOS:000344456400010"}