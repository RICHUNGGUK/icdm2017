{"auto_keywords": [{"score": 0.037387260452732746, "phrase": "prif"}, {"score": 0.00481495049065317, "phrase": "parallel_and_continuous_frequent_item_monitoring"}, {"score": 0.004732785510739708, "phrase": "high-speed_network_monitoring"}, {"score": 0.004652016085325825, "phrase": "ever-growing_traffic_calls"}, {"score": 0.0045726187330434025, "phrase": "high-performance_solution"}, {"score": 0.004443276312972159, "phrase": "frequent_items"}, {"score": 0.00436742595270452, "phrase": "increasing_number"}, {"score": 0.004243862930012258, "phrase": "current_commodity_multi-core_processors"}, {"score": 0.0038936755823756226, "phrase": "novel_precision_integrated_framework"}, {"score": 0.0037402558657576124, "phrase": "great_parallel_capability"}, {"score": 0.003592859432554987, "phrase": "famous_frequent_algorithm"}, {"score": 0.003471135453226184, "phrase": "input_data"}, {"score": 0.003334309053314909, "phrase": "optimized_weighted_frequent_algorithm"}, {"score": 0.003277327351139926, "phrase": "local_frequent_items"}, {"score": 0.0031845067058084583, "phrase": "frequency_increments"}, {"score": 0.003130077012135034, "phrase": "pre-defined_threshold"}, {"score": 0.0030414140732789186, "phrase": "merging_thread"}, {"score": 0.0029214769181390653, "phrase": "global_continuous_epsilon-deficient_frequent_items"}, {"score": 0.002711109302199029, "phrase": "real_and_synthetic_traces"}, {"score": 0.002664749302333897, "phrase": "theoretical_analyses"}, {"score": 0.0026041635822373265, "phrase": "excellent_performance"}, {"score": 0.0023079225317714815, "phrase": "continuous_frequent_items"}, {"score": 0.002191489192077851, "phrase": "greater_memory_use"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["frequent items", " parallel algorithms", " weighted data streams", " multi-core processors"], "paper_abstract": "In high-speed network monitoring, the ever-growing traffic calls for a high-performance solution for the computation of frequent items. The increasing number of cores in the current commodity multi-core processors opens up new opportunities in parallelization. In this paper, we present a novel precision integrated framework (PRIF) that exploits the great parallel capability of multi-cores to speed up the famous frequent algorithm. PRIF equally distributes the input data stream into sub-threads that use the optimized weighted frequent algorithm to track local frequent items. The items with frequency increments exceeding a pre-defined threshold are sent to a merging thread which is able to return the global continuous epsilon-deficient frequent items. The theoretical correctness and complexity analyses are presented. Experiments with real and synthetic traces confirm the theoretical analyses and demonstrate the excellent performance as well as the effects of parameters and data skewness. The results show that PRIF is able to provide continuous frequent items and near-linear speedup at the cost of greater memory use. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "An efficient framework for parallel and continuous frequent item monitoring", "paper_id": "WOS:000345514200003"}