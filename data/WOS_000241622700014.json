{"auto_keywords": [{"score": 0.047148552246853125, "phrase": "query_decomposition_strategy"}, {"score": 0.04546953738033993, "phrase": "fgac"}, {"score": 0.00481495049065317, "phrase": "fgac-qd"}, {"score": 0.0044079880067019765, "phrase": "fine-grained_access_control"}, {"score": 0.003717368939083015, "phrase": "fgac-qd_model"}, {"score": 0.00353426342004404, "phrase": "authorization_rule"}, {"score": 0.0034899090274046014, "phrase": "predicate_transitive_rule"}, {"score": 0.0033814348757887232, "phrase": "users'_queries"}, {"score": 0.003235193484261443, "phrase": "one-variable_queries"}, {"score": 0.0029613556844064713, "phrase": "corresponding_authorization_rule"}, {"score": 0.002512650904797186, "phrase": "illegal_access"}, {"score": 0.0021049977753042253, "phrase": "fgac-qd."}], "paper_keywords": [""], "paper_abstract": "Applications require fine-grained access control (FGAC) supported by DBMSs themselves. Though much literature has referred to the FGAC, its key problems still remain open. Thus, we develop a FGAC-QD model based on query decomposition strategy with incorporating two notions of authorization rule and predicate transitive rule. In our model, users' queries are decomposed into a set of one-variable queries (OVQ). For each OVQ, its validity is checked against the corresponding authorization rule; if all the OVQs are valid, the query is inferred to be valid and will be executed without any modification; otherwise the query has illegal access, and will be partially evaluated or rejected directly, according to the feature of applications. Finally, the results of experiments demonstrate the feasibility of FGAC-QD.", "paper_title": "FGAC-QD: Fine-grained access control model based on query decomposition strategy", "paper_id": "WOS:000241622700014"}