{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "systemc"}, {"score": 0.04187707210510027, "phrase": "pipeline_expression_language"}, {"score": 0.004688321299229397, "phrase": "pipeline_abstractions"}, {"score": 0.0045346863560033175, "phrase": "systemc_library"}, {"score": 0.004299228562179176, "phrase": "hardware_pipelines"}, {"score": 0.004075946554498088, "phrase": "overloaded_operators"}, {"score": 0.003614895644619489, "phrase": "pipeline_expression"}, {"score": 0.003404244237372396, "phrase": "systemc_modules"}, {"score": 0.0031006232333900055, "phrase": "control_modules"}, {"score": 0.0029590932194209826, "phrase": "proper_routing"}, {"score": 0.0028052155436760528, "phrase": "systemc_simulator"}, {"score": 0.0021910825909008946, "phrase": "pipeline_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Pipeline", " SystemC", " Domain specific languages", " System modeling"], "paper_abstract": "We describe a SystemC library for specifying, modeling, and simulating hardware pipelines. The library includes a set of overloaded operators defining a pipeline expression language that allows the user to quickly specify the architecture of the pipeline. The pipeline expression is used to derive the connectivity of the SystemC modules that define the stages of the pipeline and to automatically insert latches and control modules between the stages to handle the proper routing of transactions through pipeline. Using the SystemC simulator the pipeline can then be simulated and evaluated. The pipeline expression language sits on top of SystemC, exposes all of the features of C++ and SystemC enabling the user to specify, evaluate, and analyze pipeline architectures. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A SystemC library for specifying pipeline abstractions", "paper_id": "WOS:000330751800008"}