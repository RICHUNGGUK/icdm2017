{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ubiquitous_software_projects"}, {"score": 0.015366888758231244, "phrase": "ubicomp"}, {"score": 0.01344612664089852, "phrase": "software_project"}, {"score": 0.013256281361654708, "phrase": "ubiquitous_computing"}, {"score": 0.012958015392274522, "phrase": "conceptual_framework"}, {"score": 0.010767959422251271, "phrase": "software_projects"}, {"score": 0.004612147352416241, "phrase": "information_processing"}, {"score": 0.0045464538515249085, "phrase": "everyday_objects"}, {"score": 0.0044688500725247726, "phrase": "software_engineering_point"}, {"score": 0.004417848254181138, "phrase": "development_scenario"}, {"score": 0.004392565073466714, "phrase": "new_challenges"}, {"score": 0.0043299856054821355, "phrase": "software_processes"}, {"score": 0.0042928648367867835, "phrase": "current_software_technologies"}, {"score": 0.0036763623220059933, "phrase": "ubiquitous_computing_principles"}, {"score": 0.003603193055343792, "phrase": "research_strategy"}, {"score": 0.0035722806911457545, "phrase": "systematic_reviews"}, {"score": 0.0035213462189102713, "phrase": "ubicomp_knowledge"}, {"score": 0.003382547312072468, "phrase": "ubicomp_software_projects"}, {"score": 0.0028715299874549245, "phrase": "u-learning"}, {"score": 0.002726740692380339, "phrase": "service_omnipresence"}, {"score": 0.0023958326775913165, "phrase": "ubiquitous_software_project"}, {"score": 0.0023145690608400425, "phrase": "application_domain"}, {"score": 0.0022749744354271834, "phrase": "ubicomp_characteristics"}, {"score": 0.0021726616502636305, "phrase": "additional_software_technologies"}, {"score": 0.0021416404045850224, "phrase": "ubiquitous_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Ubiquitous computing", " Software projects characterization", " Systematic review", " Experimental software engineering"], "paper_abstract": "Context: Ubiquitous Computing (or UbiComp) represents a paradigm in which information processing is thoroughly integrated into everyday objects and activities. From a Software Engineering point of view this development scenario brings new challenges in tailoring or building software processes, impacting current software technologies. However, it has not yet been explicitly shown how to characterize a software project with the perception of ubiquitous computing. Objective: This paper presents a conceptual framework to support the characterization of ubiquitous software projects according to their ubiquity adherence level. It also intends to apply such characterization approach to some projects, aiming at observing their adherence with ubiquitous computing principles. Method: To follow a research strategy based on systematic reviews and surveys to acquire UbiComp knowledge and organize a conceptual framework regarding ubiquitous computing, which can be used to characterize UbiComp software projects. Besides, to demonstrate its application by characterizing some software projects. Results: Ubiquitous computing encapsulates at least 11 different high abstraction level characteristics represented by 123 functional and 45 restrictive factors. Based on this a checklist was organized to allow the characterization of ubiquitous software projects, which has been applied on 26 ubiquitous software projects from four different application domains (ambient intelligence, pervasive healthcare, U-learning, and urban space). No project demonstrated to support more than 65% of the characteristics set. Service omnipresence was observed in all of these projects. However, some characteristics, although identified as necessary in the checklist, were not identified in any of them. Conclusion: There are characteristics that identify a software project as ubiquitous. However, a ubiquitous software project does not necessarily have to implement all of them. The application domain can influence the appearing of UbiComp characteristics in software projects, promoting an increase of their adherence to UbiComp and, thus, for additional software technologies to deal with these ubiquitous requirements. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Towards a framework to characterize ubiquitous software projects", "paper_id": "WOS:000304387600007"}