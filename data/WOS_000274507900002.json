{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "robotics_applications"}, {"score": 0.004438250823243621, "phrase": "distributed_and_concurrent_systems"}, {"score": 0.004114787982556699, "phrase": "heterogeneous_software_products"}, {"score": 0.004043541331944951, "phrase": "complex_interprocess_communications"}, {"score": 0.003996727479807572, "phrase": "event_synchronization"}, {"score": 0.003859500298805362, "phrase": "common_objectives"}, {"score": 0.0038148090091532933, "phrase": "distributed_systems_research"}, {"score": 0.0037487368769596814, "phrase": "robotics_community"}, {"score": 0.0035989687070420977, "phrase": "research_results"}, {"score": 0.002952146666681891, "phrase": "robotic_domain"}, {"score": 0.00280126189041041, "phrase": "different_solutions"}, {"score": 0.0026892447164623247, "phrase": "practical_principles"}, {"score": 0.0025816953009851072, "phrase": "robotics_practice"}, {"score": 0.0023792975669318615, "phrase": "different_paradigms"}, {"score": 0.0022708315711029423, "phrase": "successful_design"}, {"score": 0.0021799789348982516, "phrase": "robotic_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "In recent years, several technical architectural paradigms have been proposed to support the development of distributed and concurrent systems. Object-oriented, component-based, service-oriented approaches are among the most recent paradigms for the implementation of heterogeneous software products that require complex interprocess communications and event synchronization. Despite the sharing of common objectives with distributed systems research, the robotics community is still late in applying these research results in the development of its architectures, often relying only on the most basic concepts. In this paper, we shortly illustrate these paradigms, their characteristics, and the successful stories about their application within the robotic domain. We discuss benefits and tradeoffs of the different solutions with the goal of deriving some practical principles and strategies to be exploited in robotics practice. Understanding the characteristics, features, advantages, and drawbacks of the different paradigms is, indeed, crucial for the successful design, implementation, and use of robotic architectures. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Architectural paradigms for robotics applications", "paper_id": "WOS:000274507900002"}