{"auto_keywords": [{"score": 0.028829826323736558, "phrase": "element_quality"}, {"score": 0.00481495049065317, "phrase": "finite_element_circulation_modeling"}, {"score": 0.004740476936977635, "phrase": "brief_summary"}, {"score": 0.0046915523353299, "phrase": "delaunay"}, {"score": 0.004667149874736771, "phrase": "unstructured_triangular_grid_refinement_algorithms"}, {"score": 0.004571133708117498, "phrase": "recent_\"off-centers"}, {"score": 0.004384960761826366, "phrase": "generation_requirements"}, {"score": 0.004162826481635768, "phrase": "circulation_modeling_community"}, {"score": 0.004055998173160551, "phrase": "matlab_public-domain"}, {"score": 0.0038907236419588255, "phrase": "generation_package"}, {"score": 0.0034881076466982226, "phrase": "graphical_mesh_editing_interface"}, {"score": 0.0033285306462537884, "phrase": "diagnostic_utilities"}, {"score": 0.0032430426853131346, "phrase": "grid_quality"}, {"score": 0.0031928040608991543, "phrase": "final_output_mesh_node_locations"}, {"score": 0.0031107911390188055, "phrase": "element_incidence_list"}, {"score": 0.0029376803941247084, "phrase": "simple_but_efficient_setup"}, {"score": 0.0029072537537959374, "phrase": "fast_interactive_mesh_customization"}, {"score": 0.0028622019660721363, "phrase": "circulation_modelers"}, {"score": 0.0028325548627901004, "phrase": "problem-specific_flexibility"}, {"score": 0.0027741761880779535, "phrase": "usual_requirements"}, {"score": 0.0027454383581457555, "phrase": "mesh_size"}, {"score": 0.00253916011199984, "phrase": "randomly_generated_coastline"}, {"score": 0.0021831803612759855, "phrase": "future_demands"}, {"score": 0.002127046102734894, "phrase": "new_grid_generation_algorithms"}, {"score": 0.0021049977753042253, "phrase": "delaunay_refinement_schemes"}], "paper_keywords": ["mesh generation", " ocean modeling", " finite elements", " bathymetry", " grid refinement", " Delaunay triangulation"], "paper_abstract": "A brief summary of Delaunay unstructured triangular grid refinement algorithms, including the recent \"off-centers\" method, is provided and mesh generation requirements that are imperative to meet the criteria of the circulation modeling community are defined. A Matlab public-domain two-dimensional (2-D) mesh generation package (BatTri) based on these requirements is then presented and its efficiency shown through examples. BatTri consists of a graphical mesh editing interface and several bathymetry-based refinement algorithms, complemented by a set of diagnostic utilities to check and improve grid quality. The final output mesh node locations, node depths and element incidence list are obtained starting from only a basic set of bathymetric data. This simple but efficient setup allows fast interactive mesh customization and provides circulation modelers with problem-specific flexibility while satisfying the usual requirements on mesh size and element quality. A test of the \"off-centers\" method performed on 100 domains with randomly generated coastline and bathymetry shows an overall 25% reduction in the number of elements with only slight decrease in element quality. More importantly, this shows that BatTri is easily upgradeable to meet the future demands by the addition of new grid generation algorithms and Delaunay refinement schemes as they are made available. (C) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "BatTri: A two-dimensional bathymetry-based unstructured triangular grid generator for finite element circulation modeling", "paper_id": "WOS:000237874300008"}