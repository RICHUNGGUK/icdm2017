{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multibillion_element"}, {"score": 0.004681971826924847, "phrase": "distributed_memory_parallel_machines"}, {"score": 0.0045208777171271254, "phrase": "parallel_mesh_generator"}, {"score": 0.004457995891964028, "phrase": "pmsh"}, {"score": 0.004274527415193801, "phrase": "wrapper_code"}, {"score": 0.004185632403886255, "phrase": "open_source"}, {"score": 0.004127396082165363, "phrase": "netgen"}, {"score": 0.003929843413153981, "phrase": "mesh_generator"}, {"score": 0.00379452936798156, "phrase": "five_stages"}, {"score": 0.003663857375787215, "phrase": "coarse_volume_mesh"}, {"score": 0.0034640450599342488, "phrase": "coarse_mesh"}, {"score": 0.0033682492486884364, "phrase": "coarse_surface_mesh"}, {"score": 0.00329813918116714, "phrase": "fine_surface_submeshes"}, {"score": 0.0031845067058084583, "phrase": "fine_surface"}, {"score": 0.0030747771905143273, "phrase": "final_fine_mesh"}, {"score": 0.0029274600162609654, "phrase": "partition_boundary_vertices"}, {"score": 0.0028664985822266344, "phrase": "global_vertex_numbering"}, {"score": 0.0028068030356445894, "phrase": "new_integer_based_barycentric_coordinate_method"}, {"score": 0.0027100527874262446, "phrase": "distributed_partition_boundary_vertices"}, {"score": 0.0025801648787263662, "phrase": "precision_related_problems"}, {"score": 0.002544207840990836, "phrase": "floating_point"}, {"score": 0.002439308179084911, "phrase": "test_results"}, {"score": 0.002371783323468861, "phrase": "sgi_altix_ice_x_system"}, {"score": 0.0021049977753042253, "phrase": "scalable_way"}], "paper_keywords": [""], "paper_abstract": "We present a parallel mesh generator called PMSH that is developed as a wrapper code around the open source sequential Netgen mesh generator. Parallelization of the mesh generator is carried out in five stages: (i) generation of a coarse volume mesh; (ii) partitioning of the coarse mesh; (iii) refinement of coarse surface mesh to produce fine surface submeshes; (iv) remeshing of each fine surface submesh to get a final fine mesh; (v) matching of partition boundary vertices followed by global vertex numbering. A new integer based barycentric coordinate method is developed for matching distributed partition boundary vertices. This method does not have precision related problems of floating point coordinate based vertex matching. Test results obtained on an SGI Altix ICE X system with 8192 cores confirm that our approach does indeed enable us to generate multibillion element meshes in a scalable way.", "paper_title": "Generating Multibillion Element Unstructured Meshes on Distributed Memory Parallel Machines", "paper_id": "WOS:000355855300001"}