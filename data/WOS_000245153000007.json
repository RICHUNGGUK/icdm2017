{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large-scale_generalized_systems"}, {"score": 0.004133055661437163, "phrase": "efficient_algorithm"}, {"score": 0.004023120753104693, "phrase": "partial_stabilization"}, {"score": 0.003951453722517865, "phrase": "large-scale_linear_control_systems"}, {"score": 0.0038810583785936505, "phrase": "generalized_state-space_form"}, {"score": 0.0036443694410100507, "phrase": "highly_parallel_iterative_schemes"}, {"score": 0.0032716011062067286, "phrase": "different_approaches"}, {"score": 0.0027825094419000637, "phrase": "symmetric_multiprocessors"}, {"score": 0.00247529638625566, "phrase": "matrix_operations"}, {"score": 0.0024093494406195386, "phrase": "iterative_schemes"}, {"score": 0.0023033100935570755, "phrase": "parallel_implementation"}, {"score": 0.0022419349154472806, "phrase": "stabilization_algrorithm"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["generalized dynamical linear systems", " stabilization", " linear matrix equations", " parallel architectures"], "paper_abstract": "We discuss the parallelization of an efficient algorithm for the partial stabilization of large-scale linear control systems in generalized state-space form. The algorithm is composed of highly parallel iterative schemes that appear in the computation of certain matrix functions. Here we evaluate different approaches to exploit parallelism at two levels, based on threads and processes. Our experimental results on a cluster of symmetric multiprocessors and a CC-NUMA platform show that the efficiency of the matrix operations underlying the iterative schemes carry over to the parallel implementation of the stabilization algrorithm. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Stabilizing large-scale generalized systems on parallel computers using multithreading and message-passing", "paper_id": "WOS:000245153000007"}