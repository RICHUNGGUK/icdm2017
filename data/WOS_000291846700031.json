{"auto_keywords": [{"score": 0.03628726402378378, "phrase": "gump"}, {"score": 0.008607254831843804, "phrase": "success_rates"}, {"score": 0.00481495049065317, "phrase": "serverless_environments"}, {"score": 0.0046390482426405324, "phrase": "tcp_transport-oriented_client-server_messaging_protocols"}, {"score": 0.00443638953122199, "phrase": "dynamic_wireless_networks"}, {"score": 0.004387117409226736, "phrase": "multicast_forwarding"}, {"score": 0.004211069233133584, "phrase": "network_server"}, {"score": 0.0041642891310893, "phrase": "tcp_session_data"}, {"score": 0.004087469540575263, "phrase": "server-side_semantic_proxies"}, {"score": 0.00395273370234774, "phrase": "serverless_environment"}, {"score": 0.003923398381490749, "phrase": "service_discovery"}, {"score": 0.00383668723824441, "phrase": "necessary_services"}, {"score": 0.003724034990158436, "phrase": "network_state"}, {"score": 0.003641713874009232, "phrase": "multicast_interfaces"}, {"score": 0.003232341244892437, "phrase": "xmpp_proxy"}, {"score": 0.0032083351151314405, "phrase": "existing_off-the-shelf_xmpp_client_software"}, {"score": 0.003137377828938824, "phrase": "multi-user_chat_sessions"}, {"score": 0.003102488033561956, "phrase": "serverless_network_environment"}, {"score": 0.0028369432556238534, "phrase": "xmpp"}, {"score": 0.0027949428646076627, "phrase": "mobile_wireless_networked_environment"}, {"score": 0.0027026971435126553, "phrase": "gump_supported_discovery_system"}, {"score": 0.0026826154146786583, "phrase": "indi"}, {"score": 0.002416589459425828, "phrase": "xmpp_transmission"}, {"score": 0.002285112760099807, "phrase": "tcp"}, {"score": 0.002259642580775186, "phrase": "mobile_environment"}, {"score": 0.002217880187104576, "phrase": "strong_empirical_support"}, {"score": 0.0021049977753042253, "phrase": "serverless_world"}], "paper_keywords": ["XMPP", " Serverless chat", " WS-Notification", " SLP", " JmDNS", " Peer-to-Peer", " Multicast", " NORM"], "paper_abstract": "In this paper we discuss the adaptation of TCP transport-oriented client-server messaging protocols to many-to-many peer-to-peer networking environments more suitable for deployment in dynamic wireless networks capable of multicast forwarding. We describe four main issues in adapting such protocols: exposing a network server for receiving TCP session data; the creation of server-side semantic proxies to process the messages and adapt to a serverless environment; service discovery to enable the discovery of necessary services on the network and to maintain the network state; and finally support for multicast interfaces for the transportation of messages amongst peers. We show that our system, called GUMP, can be used to support such protocol adaptations and to illustrate we use GUMP to implement an XMPP proxy allowing existing off-the-shelf XMPP client software to dynamically create and operate multi-user chat sessions in a serverless network environment. We then present two sets of results that show how appropriate discovery systems and transport protocols can dramatically increase the success of protocols, such as XMPP, within a mobile wireless networked environment. Specifically, we first demonstrate that a GUMP supported discovery system, INDI, can significantly increase the success rates and decrease latency of discovering services through profiles, caching and retrying schemes. Second, we show that success rates for XMPP transmission of messages can be vastly improved through the use of multicast as apposed to TCP within the mobile environment. These two factors provide strong empirical support for the justification of GUMP in its ability to adapt between a client-server and serverless world. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Client/server messaging protocols in serverless environments", "paper_id": "WOS:000291846700031"}