{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linked_objects"}, {"score": 0.00421410521089045, "phrase": "ordinary_web_users"}, {"score": 0.0038642157757169315, "phrase": "falcons_object_search"}, {"score": 0.0033367819052051995, "phrase": "comprehensive_virtual_document"}, {"score": 0.0032058286587989234, "phrase": "textual_descriptions"}, {"score": 0.003163326114997034, "phrase": "associated_links"}, {"score": 0.0030595112110658675, "phrase": "resulting_objects"}, {"score": 0.0027865506182608263, "phrase": "resulting_object"}, {"score": 0.0027312956497456374, "phrase": "query-relevant_structured_snippet"}, {"score": 0.0026240423738883704, "phrase": "associated_literals"}, {"score": 0.0024545413637350765, "phrase": "web-scale_class-inclusion_reasoning"}, {"score": 0.0023739321566540682, "phrase": "implicit_typing_information"}, {"score": 0.0022806798371116698, "phrase": "class_hierarchies"}, {"score": 0.002250415129116109, "phrase": "incremental_class-based_results"}, {"score": 0.0021476098263617954, "phrase": "task-based_experiment"}, {"score": 0.0021049977753042253, "phrase": "promising_features"}], "paper_keywords": ["Class Hierarchy", " Object Search", " Query Refinement", " Ranking", " Reasoning", " Snippet", " Virtual Document"], "paper_abstract": "Along with the rapid growth of the data Web, searching linked objects for information needs and for reusing become emergent for ordinary Web users and developers, respectively. To meet the challenge, we present Falcons Object Search, a keyword-based search engine for linked objects. To serve various keyword queries, for each object the system constructs a comprehensive virtual document including not only associated literals but also the textual descriptions of associated links and linked objects. The resulting objects are ranked by considering both their relevance to the query and their popularity. For each resulting object, a query-relevant structured snippet is provided to show the associated literals and linked objects matched with the query. Besides, Web-scale class-inclusion reasoning is performed to discover implicit typing information, and users could navigate class hierarchies for incremental class-based results filtering. The results of a task-based experiment show the promising features of the system.", "paper_title": "Searching Linked Objects with Falcons: Approach, Implementation and Evaluation", "paper_id": "WOS:000270369900003"}