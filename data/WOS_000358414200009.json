{"auto_keywords": [{"score": 0.049568154654955725, "phrase": "global_view_arrays"}, {"score": 0.015719716506582538, "phrase": "monte_carlo_neutron_transport_simulations"}, {"score": 0.0046875099587735825, "phrase": "large_tally_data"}, {"score": 0.0045879792359519375, "phrase": "challenging_problem"}, {"score": 0.004278807087784626, "phrase": "application-controlled_decomposition"}, {"score": 0.003990385737207714, "phrase": "memory_cost"}, {"score": 0.003947765701573287, "phrase": "performance_loss"}, {"score": 0.003802135020791801, "phrase": "alternative_solution"}, {"score": 0.003526735797659508, "phrase": "small_globally_addressable_blocks"}, {"score": 0.0034332736827447654, "phrase": "limited_on-node_memory"}, {"score": 0.003306559295382181, "phrase": "highly_scalable_memory"}, {"score": 0.0032712190037495975, "phrase": "performance_efficiency"}, {"score": 0.0030834712590249863, "phrase": "application-controlled_approaches"}, {"score": 0.002937879003671346, "phrase": "global_view_library"}, {"score": 0.002890887778279196, "phrase": "mpi_one-sided_communication"}, {"score": 0.002724909017963099, "phrase": "transport_code"}, {"score": 0.002681315076008658, "phrase": "remote_memory"}, {"score": 0.0022941723937662927, "phrase": "tally_server_approach"}, {"score": 0.002174041708084857, "phrase": "global_view_array"}, {"score": 0.0021392418081444798, "phrase": "promising_alternative"}, {"score": 0.0021049977753042253, "phrase": "full-core_light_water_reactor_analysis"}], "paper_keywords": ["Monte Carlo", " neutron transport", " data decomposition", " global array", " one-sided communication", " exascale computing"], "paper_abstract": "Accommodating large tally data can be a challenging problem for Monte Carlo neutron transport simulations. Current approaches include either simple data replication, or are based on application-controlled decomposition such as domain partitioning or client/server models, which are limited by either memory cost or performance loss. We propose and analyze an alternative solution based on global view arrays. By using global view arrays, tallies are naturally partitioned into small globally addressable blocks that fit in the limited on-node memory of compute nodes, achieving both highly scalable memory and performance efficiency. This approach also greatly simplifies the programmability compared with application-controlled approaches. Our implementation is based on integrating a global view library built on MPI one-sided communication, global view resilience (GVR), into the OpenMC Monte Carlo transport code. The remote memory access (RMA)-based global view array implementation is able to achieve 85% efficiency at 16,384 processes compared with 1,000 processes with 2.39TB mesh tally across 1,366 nodes on a Cray XC30 supercomputer. Our results improve scalability significantly compared with the tally server approach and are better than any other published results, indicating that global view array is a promising alternative to enable full-core light water reactor analysis on current and future computer systems.", "paper_title": "Data decomposition in Monte Carlo neutron transport simulations using global view arrays", "paper_id": "WOS:000358414200009"}