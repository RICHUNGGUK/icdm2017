{"auto_keywords": [{"score": 0.04939323296666449, "phrase": "annotation_propagation"}, {"score": 0.030760198783509298, "phrase": "spju"}, {"score": 0.029282631444614394, "phrase": "existing_tuples"}, {"score": 0.00481495049065317, "phrase": "view_update_analysis"}, {"score": 0.003794297119656863, "phrase": "view_annotations"}, {"score": 0.003581252556182843, "phrase": "data_provenance"}, {"score": 0.003380129564214184, "phrase": "single_existing_tuple"}, {"score": 0.0031218401638802053, "phrase": "simple_spju_queries"}, {"score": 0.00283158908387463, "phrase": "practical_key_preserving_condition"}, {"score": 0.0024591984725764954, "phrase": "complete_picture"}, {"score": 0.002337791830793841, "phrase": "key_preserving_views"}, {"score": 0.0023042157412517333, "phrase": "propagation_analysis"}, {"score": 0.00213567715613494, "phrase": "key_preserving"}, {"score": 0.0021049977753042253, "phrase": "group_annotations"}], "paper_keywords": ["Annotation", " view updates", " view maintenance", " SPJU queries"], "paper_abstract": "This paper investigates three problems identified in [1] for annotation propagation, namely, the view side-effect, source side-effect, and annotation placement problems. Given annotations entered for a tuple or an attribute in a view, these problems ask what tuples or attributes in the source have to be annotated to produce the view annotations. As observed in [1], these problems are fundamental not only for data provenance but also for the management of view updates. For an annotation attached to a single existing tuple in a view, it has been shown that these problems are often intractable even for views defined in terms of simple SPJU queries [1]. We revisit these problems by considering several dichotomies: 1) views defined in various subclasses of SPJU, versus SPJU views under a practical key preserving condition; 2) annotations attached to existing tuples in a view versus annotations on tuples to be inserted into the view; and 3) a single-tuple annotation versus a group of annotations. We provide a complete picture of intractability and tractability for the three problems in all these settings. We show that key preserving views often simplify the propagation analysis. Indeed, some problems become tractable for certain key preserving views, as opposed to the intractability of their counterparts that are not key preserving. However, group annotations often make the analysis harder. In addition, the problems have quite diverse complexity when annotations are attached to existing tuples in a view and when they are entered for tuples to be inserted into the view.", "paper_title": "On the Complexity of View Update Analysis and Its Application to Annotation Propagation", "paper_id": "WOS:000299384600010"}