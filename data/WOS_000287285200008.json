{"auto_keywords": [{"score": 0.04987325282958325, "phrase": "monte_carlo"}, {"score": 0.04353040808935283, "phrase": "dsmc_method"}, {"score": 0.00481495049065317, "phrase": "direct_simulation"}, {"score": 0.004732785510739708, "phrase": "parallel_implementation"}, {"score": 0.00467207889925365, "phrase": "three-dimensional_direct_simulation"}, {"score": 0.004533427352547707, "phrase": "complex_data_structures"}, {"score": 0.004494570360108983, "phrase": "dynamic_memory_allocation"}, {"score": 0.004417848254181138, "phrase": "shared_memory_systems"}, {"score": 0.004379977556546879, "phrase": "open_multi-processing"}, {"score": 0.004213519983188574, "phrase": "serial_implementation"}, {"score": 0.003967021436047945, "phrase": "cartesian-based_movement_technique"}, {"score": 0.003799796252156605, "phrase": "modest_decrease"}, {"score": 0.003767203575060969, "phrase": "overall_simulation_expense"}, {"score": 0.0036710872046569532, "phrase": "ray-tracing_technique"}, {"score": 0.003623949225126944, "phrase": "stored_cell-connectivity"}, {"score": 0.003546722347907148, "phrase": "data_localization"}, {"score": 0.003501175642882274, "phrase": "optimal_usage"}, {"score": 0.003471135453226184, "phrase": "cache_memory"}, {"score": 0.003324743991757282, "phrase": "collision_computations"}, {"score": 0.003170811465728631, "phrase": "shared-memory_parallel_implementation"}, {"score": 0.003050166508545763, "phrase": "synchronization_points"}, {"score": 0.0030239842475439814, "phrase": "related_critical_sections"}, {"score": 0.0029722900280316216, "phrase": "major_factors"}, {"score": 0.0029214769181390653, "phrase": "openmp_parallel_performance"}, {"score": 0.002810292047426252, "phrase": "openmp_implementation"}, {"score": 0.0027150087516999047, "phrase": "dual-core_and_quad-core_systems"}, {"score": 0.0024799423362011582, "phrase": "parallel_performance"}, {"score": 0.0024586427394152196, "phrase": "identical_source_code"}, {"score": 0.0024375564777700818, "phrase": "openmp"}, {"score": 0.0023447155524245655, "phrase": "underlying_computer_architecture"}, {"score": 0.0021789194955896124, "phrase": "parallel_scalability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Direct simulation Monte Carlo", " Hypersonic flow", " OpenMP"], "paper_abstract": "Parallel implementation of a three-dimensional direct simulation Monte Carlo (DSMC) code employing complex data structures and dynamic memory allocation is detailed for shared memory systems using Open Multi-Processing (OpenMP). Several techniques to optimize the serial implementation of the DSMC method are first discussed. Specifically for a 3-level Cartesian grid, a Cartesian-based movement technique including particle indexing is demonstrated to result in a modest decrease in overall simulation expense of 34% compared with a ray-tracing technique combined with stored cell-connectivity. Two strategies for data localization leading to optimal usage of cache memory are demonstrated to speed up certain cell-based functions (such as collision computations) by a factor of 3.38-4.36. The shared-memory parallel implementation using OpenMP is then described in detail. Synchronization points and related critical sections are identified as major factors that impact the OpenMP parallel performance. Techniques to remove all such synchronization points in the OpenMP implementation of the DSMC method are outlined. For dual-core and quad-core systems, speedups of 1.99 and 3.74, respectively, are obtained for a (free-stream flow) test simulation with low granularity. Finally, the parallel performance of identical source code employing OpenMP is shown to be strongly correlated to the underlying computer architecture. Both Symmetric Multiprocessor (SMP) and non-uniform memory access (NUMA) systems are studied in order to achieve a better understanding of their impacts on parallel scalability when using OpenMP. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Optimizations and OpenMP implementation for the direct simulation Monte Carlo method", "paper_id": "WOS:000287285200008"}