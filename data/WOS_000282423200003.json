{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_database_systems"}, {"score": 0.007464615565976687, "phrase": "access_patterns"}, {"score": 0.004339609346924681, "phrase": "network_communication_costs"}, {"score": 0.0037516215763875225, "phrase": "static_fragmentation"}, {"score": 0.0035614563596982306, "phrase": "priori_query_analysis"}, {"score": 0.0034162643819889054, "phrase": "frequent_changes"}, {"score": 0.003345895878114341, "phrase": "different_sites"}, {"score": 0.0032599633778910516, "phrase": "continuous_refragmentation"}, {"score": 0.0030466955629231047, "phrase": "dyfram"}, {"score": 0.0029530125680590413, "phrase": "dynamic_table_fragmentation"}, {"score": 0.0025657442830956017, "phrase": "recent_access_history"}, {"score": 0.002461044825190643, "phrase": "local_accesses"}, {"score": 0.00239778324260337, "phrase": "remote_sites"}, {"score": 0.0022760856906838814, "phrase": "dascosa_distributed_database_system"}, {"score": 0.002206045784326466, "phrase": "communication_costs"}, {"score": 0.0021831803612759855, "phrase": "typical_access_patterns"}], "paper_keywords": ["Distributed DBMS", " Fragmentation", " Replication", " Physical database design"], "paper_abstract": "In distributed database systems, tables are frequently fragmented and replicated over a number of sites in order to reduce network communication costs. How to fragment, when to replicate and how to allocate the fragments to the sites are challenging problems that has previously been solved either by static fragmentation, replication and allocation, or based on a priori query analysis. Many emerging applications of distributed database systems generate very dynamic workloads with frequent changes in access patterns from different sites. In such contexts, continuous refragmentation and reallocation can significantly improve performance. In this paper we present DYFRAM, a decentralized approach for dynamic table fragmentation and allocation in distributed database systems based on observation of the access patterns of sites to tables. The approach performs fragmentation, replication, and reallocation based on recent access history, aiming at maximizing the number of local accesses compared to accesses from remote sites. We show through simulations and experiments on the DASCOSA distributed database system that the approach significantly reduces communication costs for typical access patterns, thus demonstrating the feasibility of our approach.", "paper_title": "DYFRAM: dynamic fragmentation and replica management in distributed database systems", "paper_id": "WOS:000282423200003"}