{"auto_keywords": [{"score": 0.03591284955015773, "phrase": "ose"}, {"score": 0.00481495049065317, "phrase": "odyssey-search"}, {"score": 0.004655285779819366, "phrase": "component_information_search"}, {"score": 0.004577440795549049, "phrase": "component_based_development"}, {"score": 0.004084829853870028, "phrase": "specific_application_domain"}, {"score": 0.003949280009382125, "phrase": "domain_engineering"}, {"score": 0.003850566273995209, "phrase": "adequate_techniques"}, {"score": 0.0037543106253910313, "phrase": "specific_domains"}, {"score": 0.003660452313567116, "phrase": "domain_information"}, {"score": 0.0035240305920962766, "phrase": "software_layer"}, {"score": 0.003479692058963528, "phrase": "different_component_information_sources"}, {"score": 0.0032250961348210473, "phrase": "domain_component_information"}, {"score": 0.002939007076062123, "phrase": "ose_system"}, {"score": 0.0029020077365708966, "phrase": "evolutionary_model"}, {"score": 0.0028654728453890426, "phrase": "user_interests"}, {"score": 0.002723862897844177, "phrase": "underlying_concepts"}, {"score": 0.0026222551419772867, "phrase": "relevant_domain_information"}, {"score": 0.0025674490885184173, "phrase": "main_contribution"}, {"score": 0.0024926348205500715, "phrase": "new_approach"}, {"score": 0.002461241017147324, "phrase": "software_components"}, {"score": 0.0023395610923736595, "phrase": "software_component_retrieval"}, {"score": 0.0022906498741695094, "phrase": "multi-agent_system_approach"}, {"score": 0.0022145052062614514, "phrase": "legislative_domain"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["CBD", " reuse", " informational retrieval", " agents"], "paper_abstract": "Component Based Development aims at constructing software through the integration of components by using interfaces and contracts among them. However, these components should be bound to a specific application domain in order to be effectively reused. Domain Engineering and Component Based Engineering are adequate techniques to develop components related to specific domains. A solution for accessing domain information, including components, is to use a software layer that integrates different component information sources. This paper presents OSE, a search and retrieval system that provides heterogeneous/distributed access and storage to domain component information. Ideas drawn from the field of agents, user modeling, hypermedia, and mediation were combined to develop the OSE system. An evolutionary model of the user interests, ontologies and a base of rules are some of the underlying concepts of the system that help users to identify relevant domain information. Hence, the main contribution of OSE is to provide a new approach for accessing software components. Our innovative aspect is to provide flexibility, transparency and accuracy in software component retrieval, by using a multi-agent system approach. A case study conducted in the legislative domain has evidenced the advantages of our system. (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Odyssey-Search: A multi-agent system for component information search and retrieval", "paper_id": "WOS:000235818400006"}