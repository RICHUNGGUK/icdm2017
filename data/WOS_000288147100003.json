{"auto_keywords": [{"score": 0.03235740424067532, "phrase": "flash-based_storage_systems"}, {"score": 0.02856599545019493, "phrase": "proposed_technique"}, {"score": 0.00481495049065317, "phrase": "redundant_information"}, {"score": 0.004763895422211728, "phrase": "flash-based_storage_system"}, {"score": 0.004540734419151103, "phrase": "high_performance"}, {"score": 0.00439777299939725, "phrase": "low_power_consumption"}, {"score": 0.0043511221096418475, "phrase": "shock_resistance"}, {"score": 0.004147216579100177, "phrase": "storage_media"}, {"score": 0.004103212598803194, "phrase": "embedded_and_computer_system_environments"}, {"score": 0.003931798194574009, "phrase": "flash_memory"}, {"score": 0.0037076911119175455, "phrase": "poor_durability"}, {"score": 0.0036488111139918135, "phrase": "limited_erase_cycles"}, {"score": 0.003422462630994095, "phrase": "redundancy-based_parallel_access_schemes"}, {"score": 0.0033681074121974315, "phrase": "raid"}, {"score": 0.0031255543155487234, "phrase": "redundancy_information"}, {"score": 0.002884979280317279, "phrase": "performance-effective_approach"}, {"score": 0.0028391271282216758, "phrase": "redundancy-based_data_management_scheme"}, {"score": 0.0027495914857929584, "phrase": "flash-aware_redundancy"}, {"score": 0.0026205405415623525, "phrase": "redundancy_management"}, {"score": 0.00256514094268541, "phrase": "redundancy_update_operations"}, {"score": 0.002537880772794665, "phrase": "idle_periods"}, {"score": 0.0024578219177450876, "phrase": "preventive_mechanism"}, {"score": 0.002393034183276193, "phrase": "unexpected_read_errors"}, {"score": 0.002150481043278758, "phrase": "average_execution_time"}], "paper_keywords": ["Storage systems", " Flash memory", " Flash translation layer", " RAID"], "paper_abstract": "Since flash memory has many attractive characteristics such as high performance, non-volatility, low power consumption and shock resistance, it has been widely used as a storage media in embedded and computer system environments. However, there are many shortcomings in flash memory such as potentially high I/O latency due to erase-before-write and poor durability due to limited erase cycles. To address these performance and reliability anomalies, many large-scale storage systems use redundancy-based parallel access schemes such as RAID techniques. However, such redundancy-based schemes incur high overhead due to generating and storing redundancy information, especially in flash-based storage systems. In this paper, we propose a novel and performance-effective approach using a redundancy-based data management scheme in flash storage, called Flash-aware Redundancy Array. The proposed technique not only reduces the redundancy management overhead by performing redundancy update operations during idle periods, but also provides a preventive mechanism to recover data from unexpected read errors occurring before such redundancy update operations finish. From the experiments, we found that the proposed technique improves flash-based storage systems by 19% in average execution time as compared to other redundancy-based approaches.", "paper_title": "An efficient management scheme for updating redundant information in flash-based storage system", "paper_id": "WOS:000288147100003"}