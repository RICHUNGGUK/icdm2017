{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "design_patterns"}, {"score": 0.04980781719029459, "phrase": "software_quality"}, {"score": 0.00481923275267514, "phrase": "design_pattern"}, {"score": 0.004601110504747972, "phrase": "software_production_teams"}, {"score": 0.004523380792307973, "phrase": "documented_solutions"}, {"score": 0.004497762477097628, "phrase": "common_design_problems"}, {"score": 0.0040146809403906495, "phrase": "analytical_method"}, {"score": 0.0036761446421770564, "phrase": "\"canonical\"_solutions"}, {"score": 0.003492788016691268, "phrase": "real_systems"}, {"score": 0.003423969509052361, "phrase": "concrete_problems"}, {"score": 0.0030820480406334927, "phrase": "exploratory_designs"}, {"score": 0.0029871209444889716, "phrase": "open-source_projects"}, {"score": 0.002805923530823771, "phrase": "optimal_design_solution"}, {"score": 0.0024200304529801513, "phrase": "proposed_methodology"}, {"score": 0.002372298201966367, "phrase": "alternative_designs"}, {"score": 0.002345445530251524, "phrase": "existing_threshold"}, {"score": 0.002253826965566618, "phrase": "alternative_design"}, {"score": 0.002165779466198928, "phrase": "decision_making"}, {"score": 0.0021534846185436497, "phrase": "system_design"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Structural quality", " Design patterns", " Object-oriented metrics", " Quality"], "paper_abstract": "Context: Software quality is considered to be one of the most important concerns of software production teams. Additionally, design patterns are documented solutions to common design problems that are expected to enhance software quality. Until now, the results on the effect of design patterns on software quality are controversial. Aims: This study aims to propose a methodology for comparing design patterns to alternative designs with an analytical method. Additionally, the study illustrates the methodology by comparing three design patterns with two alternative solutions, with respect to several quality attributes. Method: The paper introduces a theoretical/analytical methodology to compare sets of \"canonical\" solutions to design problems. The study is theoretical in the sense that the solutions are disconnected from real systems, even though they stem from concrete problems. The study is analytical in the sense that the solutions are compared based on their possible numbers of classes and on equations representing the values of the various structural quality attributes in function of these numbers of classes. The exploratory designs have been produced by studying the literature, by investigating open-source projects and by using design patterns. In addition to that, we have created a tool that helps practitioners in choosing the optimal design solution, according to their special needs. Results: The results of our research suggest that the decision of applying a design pattern is usually a trade-off, because patterns are not universally good or bad. Patterns typically improve certain aspects of software quality, while they might weaken some other. Conclusions: Concluding the proposed methodology is applicable for comparing patterns and alternative designs, and highlights existing threshold that when surpassed the design pattern is getting more or less beneficial than the alternative design. More specifically, the identification of such thresholds can become very useful for decision making during system design and refactoring. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A methodology to assess the impact of design patterns on software quality", "paper_id": "WOS:000300859100001"}