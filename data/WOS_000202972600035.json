{"auto_keywords": [{"score": 0.032217955051976256, "phrase": "xtm"}, {"score": 0.010859239967993478, "phrase": "tm"}, {"score": 0.00481495049065317, "phrase": "transactional_memory_virtualization"}, {"score": 0.004751216062917875, "phrase": "transactional_memory"}, {"score": 0.004646852519870358, "phrase": "widespread_acceptance"}, {"score": 0.00446471538346719, "phrase": "physical_resources"}, {"score": 0.004405596416783185, "phrase": "specific_hardware_implementation"}, {"score": 0.00436661740263741, "phrase": "tm_systems"}, {"score": 0.004308791766002289, "phrase": "correct_execution"}, {"score": 0.00408501512749186, "phrase": "hardware_caches"}, {"score": 0.004048860957751714, "phrase": "physical_memory"}, {"score": 0.003838531755488468, "phrase": "existing_proposals"}, {"score": 0.003804550737731054, "phrase": "tm_virtualization"}, {"score": 0.003687960013746783, "phrase": "complex_hardware_implementations"}, {"score": 0.0034807976670686628, "phrase": "common_case"}, {"score": 0.0034194194985380268, "phrase": "extended_transactional_memory"}, {"score": 0.003198705576491802, "phrase": "transactional_execution"}, {"score": 0.002965684305115369, "phrase": "virtual_memory_support"}, {"score": 0.002900426826591769, "phrase": "page_granularity"}, {"score": 0.002861961643289598, "phrase": "private_copies"}, {"score": 0.0028366012006726896, "phrase": "overflowed_pages"}, {"score": 0.0027989800906333784, "phrase": "memory_updates"}, {"score": 0.0025266078302900036, "phrase": "limited_hardware_support"}, {"score": 0.0024930878032164757, "phrase": "key_performance_bottlenecks"}, {"score": 0.002427372728532664, "phrase": "hardware-based_virtualization"}, {"score": 0.002395166073437286, "phrase": "real_applications"}, {"score": 0.0023739321566540682, "phrase": "synthetic_microbenchmarks"}, {"score": 0.002200861826643147, "phrase": "hardware-based_alternatives"}], "paper_keywords": ["design", " performance", " chip multi-processor", " OS support", " transactional memory", " virtualization"], "paper_abstract": "For transactional memory (TM) to achieve widespread acceptance, transactions should not be limited to the physical resources of any specific hardware implementation. TM systems should guarantee correct execution even when transactions exceed scheduling quanta, overflow the capacity of hardware caches and physical memory, or include more independent nesting levels than what is supported in hardware. Existing proposals for TM virtualization are either incomplete or rely on complex hardware implementations, which are an overkill if virtualization is invoked infrequently in the common case. We present eXtended Transactional Memory (XTM), the first TM virtualization system that virtualizes all aspects of transactional execution (time, space, and nesting depth). XTM is implemented in software using virtual memory support. It operates at page granularity, using private copies of overflowed pages to buffer memory updates until the transaction commits and snapshots of pages to detect interference between transactions. We also describe two enhancements to XTM that use limited hardware support to address key performance bottlenecks. We compare XTM to hardware-based virtualization using both real applications and synthetic microbenchmarks. We show that despite being software-based, XTM and its enhancements are competitive with hardware-based alternatives. Overall, we demonstrate that XTM provides a complete, flexible, and low-cost mechanism for practical TM virtualization.", "paper_title": "Tradeoffs in transactional memory virtualization", "paper_id": "WOS:000202972600035"}