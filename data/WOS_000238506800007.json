{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "abductive_logic_programming"}, {"score": 0.004521803560561489, "phrase": "case_study"}, {"score": 0.0043713857434347254, "phrase": "security_protocols"}, {"score": 0.0041450181887917135, "phrase": "open_multi-agent_systems"}, {"score": 0.0040656296649390486, "phrase": "internal_architecture"}, {"score": 0.004007083686875716, "phrase": "individual_system's_components"}, {"score": 0.0036730297909962142, "phrase": "overall_system_behaviour"}, {"score": 0.0035852640843794252, "phrase": "formal_approach"}, {"score": 0.0035336109352157763, "phrase": "computational_logic"}, {"score": 0.0033182152378613767, "phrase": "protocol_properties"}, {"score": 0.00320770578058916, "phrase": "design_time"}, {"score": 0.003100865267124765, "phrase": "logical_consequence"}, {"score": 0.002897710777957041, "phrase": "agent_communication"}, {"score": 0.0025181367444581993, "phrase": "running_example"}, {"score": 0.00249386680748172, "phrase": "well-known_needham-schroeder_protocol"}, {"score": 0.0021670777282518424, "phrase": "socs-si_framework"}, {"score": 0.002135812692862058, "phrase": "static_verification"}, {"score": 0.0021049977753042253, "phrase": "netbill_e-commerce_protocol"}], "paper_keywords": [""], "paper_abstract": "In this paper we present by a case study an approach to the verification of security protocols based on Abductive Logic Programming. We start from the perspective of open multi-agent systems, where the internal architecture of the individual system's components may not be completely specified, but it is important to infer and prove properties about the overall system behaviour. We take a formal approach based on Computational Logic, to address verification at two orthogonal levels: 'static' verification of protocol properties (which can guarantee, at design time, that some properties are a logical consequence of the protocol), and 'dynamic' verification of compliance of agent communication (which checks, at runtime, that the agents do actually follow the protocol). In order to explain the approach, we adopt as a running example the well-known Needham-Schroeder protocol. We first show how the protocol can be specified in our previously developed SOCS-SI framework, and then demonstrate the two types of verification. We also demonstrate the use of the SOCS-SI framework for the static verification of the NetBill e-commerce protocol.", "paper_title": "Security protocols verification in abductive logic programming: A case study", "paper_id": "WOS:000238506800007"}