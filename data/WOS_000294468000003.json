{"auto_keywords": [{"score": 0.030409174002010583, "phrase": "resolve"}, {"score": 0.00481495049065317, "phrase": "push-button_resolve_verifier"}, {"score": 0.0046797114400479135, "phrase": "central_objective"}, {"score": 0.00462291551375938, "phrase": "verifying_compiler_grand_challenge"}, {"score": 0.004529776351030488, "phrase": "push-button_verifier"}, {"score": 0.004384623928442369, "phrase": "syntax-driven_fashion"}, {"score": 0.004278807087784626, "phrase": "ordinary_compiler"}, {"score": 0.004244102948402086, "phrase": "machine_code"}, {"score": 0.004192571571622019, "phrase": "software_developer's_role"}, {"score": 0.004108066884382925, "phrase": "suitable_specifications"}, {"score": 0.00407474190126995, "phrase": "annotated_code"}, {"score": 0.003960210592458847, "phrase": "direct_involvement"}, {"score": 0.003912112659326054, "phrase": "verification_step"}, {"score": 0.0038332390893263844, "phrase": "general_mathematical_developments"}, {"score": 0.003755949722774176, "phrase": "software_correctness"}, {"score": 0.0036355032885145894, "phrase": "separate_formal_proof_process"}, {"score": 0.0032967724149749853, "phrase": "software_verification"}, {"score": 0.0030017207229983385, "phrase": "practical_fully_automated_verification"}, {"score": 0.0029773436815290215, "phrase": "full_software_behavior"}, {"score": 0.002941147710077221, "phrase": "grand_challenge"}, {"score": 0.0027330029055210926, "phrase": "practical_elements"}, {"score": 0.0027108021939930014, "phrase": "software_engineering"}, {"score": 0.002688781336915723, "phrase": "programming_languages"}, {"score": 0.0026560841114619147, "phrase": "mathematical_logic"}, {"score": 0.002623783458189614, "phrase": "coherent_framework"}, {"score": 0.00260246764210499, "phrase": "current_versions"}, {"score": 0.002570817338292482, "phrase": "resolve_verifier"}, {"score": 0.0025499307228648883, "phrase": "verification_conditions"}, {"score": 0.0024680632991561074, "phrase": "component-based_software"}, {"score": 0.002438043578514396, "phrase": "modular_fashion-one_component"}, {"score": 0.0023310544011985253, "phrase": "automated_capabilities"}, {"score": 0.0023026973099101876, "phrase": "isabelle_proof_assistant"}, {"score": 0.002274684393868218, "phrase": "smt_solver"}, {"score": 0.0022378620428620782, "phrase": "minimalist_rewrite_prover"}, {"score": 0.0021659920594094407, "phrase": "initial_experiments"}], "paper_keywords": ["Languages", " Software engineering", " Theorem proving", " Tools", " Verification"], "paper_abstract": "A central objective of the verifying compiler grand challenge is to develop a push-button verifier that generates proofs of correctness in a syntax-driven fashion similar to the way an ordinary compiler generates machine code. The software developer's role is then to provide suitable specifications and annotated code, but otherwise to have no direct involvement in the verification step. However, the general mathematical developments and results upon which software correctness is based may be established through a separate formal proof process in which proofs might be mechanically checked, but not necessarily automatically generated. While many ideas that could conceivably form the basis for software verification have been known \"in principle\" for decades, and several tools to support an aspect of verification have been devised, practical fully automated verification of full software behavior remains a grand challenge. This paper explains how RESOLVE takes a step towards addressing this challenge by integrating foundational and practical elements of software engineering, programming languages, and mathematical logic into a coherent framework. Current versions of the RESOLVE verifier generate verification conditions (VCs) for the correctness of component-based software in a modular fashion-one component at a time. The VCs are currently verified using automated capabilities of the Isabelle proof assistant, the SMT solver Z3, a minimalist rewrite prover, and some specialized decision procedures. Initial experiments with the tools and further analytic considerations show both the progress that has been made and the challenges that remain.", "paper_title": "Building a push-button RESOLVE verifier: Progress and challenges", "paper_id": "WOS:000294468000003"}