{"auto_keywords": [{"score": 0.04748801430076134, "phrase": "due_window"}, {"score": 0.012846733903608205, "phrase": "due_window_size"}, {"score": 0.012705876596188471, "phrase": "decision_variable_common"}, {"score": 0.012024142348163316, "phrase": "starting_time"}, {"score": 0.008823825830923088, "phrase": "constant_due_window_model"}, {"score": 0.00481495049065317, "phrase": "parallel_machines"}, {"score": 0.004691684576246597, "phrase": "n_jobs"}, {"score": 0.004639822587124109, "phrase": "identical_parallel_machines"}, {"score": 0.004213601332868765, "phrase": "scheduling_cost"}, {"score": 0.0040904740665330805, "phrase": "tardiness_cost"}, {"score": 0.003784049616066444, "phrase": "first_model"}, {"score": 0.0037283301619292636, "phrase": "constant_due_window"}, {"score": 0.003474624627033273, "phrase": "slack_due_window"}, {"score": 0.003360527337581911, "phrase": "job_processing_time"}, {"score": 0.0031668306413359794, "phrase": "job_schedule"}, {"score": 0.002984264956378651, "phrase": "weighted_maximum_or_sum"}, {"score": 0.002929394386754424, "phrase": "job_earliness"}, {"score": 0.0029077288662492894, "phrase": "job_tardiness"}, {"score": 0.0027810502577708105, "phrase": "optimal_solutions"}, {"score": 0.0027299058905736456, "phrase": "minsum_problems"}, {"score": 0.002630414143385786, "phrase": "minmax_problem"}, {"score": 0.0026109540617641593, "phrase": "arbitrary_weights"}, {"score": 0.002582032847722892, "phrase": "minsum_problem"}, {"score": 0.002562929776267296, "phrase": "equal_weights"}, {"score": 0.0025064622665903645, "phrase": "classical_parallel_machine_scheduling_problem"}, {"score": 0.002353120949568249, "phrase": "due_window_model"}, {"score": 0.002250549946875429, "phrase": "mirror_images"}, {"score": 0.002128587147609537, "phrase": "time_algorithms"}, {"score": 0.0021049977753042253, "phrase": "considered_problems"}], "paper_keywords": ["due window assignment", " due window negotiation", " earliness-tardiness", " parallel machines", " scheduling"], "paper_abstract": "We study problems of scheduling n jobs on m identical parallel machines, in which a due window has to be assigned to each job. If a job is completed within its due window, then it incurs no scheduling cost. Otherwise, it incurs earliness or tardiness cost. Two due window models are considered. In both models, the due window size is a decision variable common for all jobs. In the first model, called a constant due window, the due window starting time is a decision variable common for all jobs, and in the second, called a slack due window, the due window starting time is equal to the job processing time plus a decision variable common for all jobs. The objective is to find a job schedule as well as the size and location(s) of the due window(s) such that a weighted maximum or sum of costs associated with job earliness, job tardiness, and due window size is minimized. We establish the properties of optimal solutions of these minmax and minsum problems. For a constant due window model, we prove that the minmax problem with arbitrary weights and the minsum problem with equal weights are polynomially equivalent to the classical parallel machine scheduling problem to minimize the makespan. We further show that the problems for a constant due window model and slack due window model with the same objective function are reversible in the sense that their optimal solutions are mirror images of each other. These results imply O(n) and O(n log n) time algorithms for the considered problems when m = 1.", "paper_title": "Soft due window assignment and scheduling on parallel machines", "paper_id": "WOS:000249024900002"}