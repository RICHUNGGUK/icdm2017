{"auto_keywords": [{"score": 0.049474472243262034, "phrase": "model_transformations"}, {"score": 0.00481495049065317, "phrase": "static_fault_localization"}, {"score": 0.004404994123834589, "phrase": "increasing_need"}, {"score": 0.0037336520904376687, "phrase": "light-weight_and_static_approach"}, {"score": 0.003287482882222731, "phrase": "metamodel_footprints"}, {"score": 0.0026986685585382347, "phrase": "corresponding_toolkit"}, {"score": 0.0021870332034407817, "phrase": "proposed_approach"}, {"score": 0.0021456243019466843, "phrase": "mutation_techniques"}], "paper_keywords": ["Model transformation", " transformation testing", " model alignment"], "paper_abstract": "As the complexity of model transformations grows, there is an increasing need to count on methods, mechanisms, and tools for checking their correctness, i.e., the alignment between specifications and implementations. In this paper we present a light-weight and static approach for locating the faulty rules in model transformations, based on matching functions that automatically establish these alignments using the metamodel footprints, i.e., the metamodel elements used. The approach is implemented for the combination of Tracts and ATL, both residing in the Eclipse Modeling Framework, and is supported by the corresponding toolkit. An evaluation discussing the accuracy and the limitations of the approach is also provided. Furthermore, we identify the kinds of transformations which are most suitable for validation with the proposed approach and use mutation techniques to evaluate its effectiveness.", "paper_title": "Static Fault Localization in Model Transformations", "paper_id": "WOS:000354475400004"}