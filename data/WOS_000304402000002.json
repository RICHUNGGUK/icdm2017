{"auto_keywords": [{"score": 0.043083320582523676, "phrase": "plgp"}, {"score": 0.008894045210613433, "phrase": "classification_problems"}, {"score": 0.008773905367300579, "phrase": "plgp_programs"}, {"score": 0.006115638927891833, "phrase": "caching_techniques"}, {"score": 0.00481495049065317, "phrase": "multi-class_classification"}, {"score": 0.004685224205630963, "phrase": "biological_inspiration"}, {"score": 0.004527947981009528, "phrase": "instruction_disruption"}, {"score": 0.004375928080972614, "phrase": "new_form"}, {"score": 0.004316552692395911, "phrase": "linear_genetic_programming"}, {"score": 0.00417160036938041, "phrase": "parallel_lgp"}, {"score": 0.0038960785110831162, "phrase": "multiple_lists"}, {"score": 0.0035648266669315943, "phrase": "resulting_vectors"}, {"score": 0.0034215569542785907, "phrase": "classification_result"}, {"score": 0.003306559295382181, "phrase": "disruptive_effects"}, {"score": 0.0030460403366412126, "phrase": "regular_lgp."}, {"score": 0.0026747708876640377, "phrase": "tree_based_gp"}, {"score": 0.002463906556781983, "phrase": "lgp."}, {"score": 0.0023973704289918726, "phrase": "novel_caching_technique"}, {"score": 0.002300912218086077, "phrase": "intrinsic_properties"}, {"score": 0.0021049977753042253, "phrase": "almost_an_order"}], "paper_keywords": ["Genetic programming", " Linear genetic programming", " Classification", " Parallel structure", " Caching"], "paper_abstract": "Motivated by biological inspiration and the issue of instruction disruption, we develop a new form of Linear Genetic Programming (LGP) called Parallel LGP (PLGP) for classification problems. PLGP programs consist of multiple lists of instructions. These lists are executed in parallel after which the resulting vectors are combined to produce the classification result. PLGP limits the disruptive effects of crossover and mutation, which allows PLGP to significantly outperform regular LGP. Furthermore, PLGP programs are naturally suited to caching due to their parallel architecture. Although caching techniques have been used in tree based GP, to our knowledge, there are no caching techniques specifically developed for LGP. Thus, a novel caching technique is also developed with the intrinsic properties of PLGP in mind, which can decrease fitness evaluation time by almost an order of magnitude for the classification problems.", "paper_title": "Parallel linear genetic programming for multi-class classification", "paper_id": "WOS:000304402000002"}