{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "cluster-based_web_servers"}, {"score": 0.04545831284489885, "phrase": "dynamic_contents"}, {"score": 0.038858197538624135, "phrase": "proposed_load-balancing_algorithm"}, {"score": 0.004655285779819366, "phrase": "high_performance_web_servers"}, {"score": 0.004278807087784626, "phrase": "traditional_web_environments"}, {"score": 0.004230956171850591, "phrase": "increasing_utilization"}, {"score": 0.004183638135671596, "phrase": "cluster_web_servers"}, {"score": 0.00413684709497912, "phrase": "effective_and_fair_load_balancing"}, {"score": 0.003823584649521733, "phrase": "database-driven_applications"}, {"score": 0.0036144035798673967, "phrase": "different_classes"}, {"score": 0.0031577303835881964, "phrase": "new_probabilistic_algorithms"}, {"score": 0.003035711716881469, "phrase": "unreliable_measured_utilization"}, {"score": 0.002951444412262927, "phrase": "fluctuating_loads"}, {"score": 0.0027898428590137515, "phrase": "queuing_model"}, {"score": 0.0025928815987676535, "phrase": "control_loop_feedback"}, {"score": 0.002535115422089855, "phrase": "predicted_values"}, {"score": 0.0024786330057813204, "phrase": "soft_computing_techniques"}, {"score": 0.0024370965602952496, "phrase": "implementation_results"}, {"score": 0.0023962545023307937, "phrase": "standard_benchmarks"}, {"score": 0.0022145052062614514, "phrase": "mean_response_time"}], "paper_keywords": ["Cluster-based web server", " Dynamic load-balancing", " Layer-7 web-switch", " Scheduling", " RBF network", " ANFIS network"], "paper_abstract": "The exponential demands for high performance web servers led to use of cluster-based web servers. This increasing trend continues as dynamic contents are changing traditional web environments. Increasing utilization of cluster web servers through effective and fair load balancing is a crucial task specifically when it comes to advent of dynamic contents and database-driven applications on the internet. The proposed load-balancing algorithm classifies requests into different classes. The algorithm dynamically selects a request from a class and assigns the request to a server. For both the scheduling and dispatching, new probabilistic algorithms are proposed. To avoid using unreliable measured utilization in the face of fluctuating loads the proposed load-balancing algorithm benefits from a queuing model to predict the utilization of each server. We also used a control loop feedback to adjust the predicted values periodically based on soft computing techniques. The implementation results, using standard benchmarks confirms the effectiveness of proposed load-balancing algorithm. The algorithm significantly improves both the throughput and mean response time in contrast to two existing load-balancing algorithms. (c) 2010 Elsevier B. V. All rights reserved.", "paper_title": "A predictive and probabilistic load-balancing algorithm for cluster-based web servers", "paper_id": "WOS:000281591300096"}