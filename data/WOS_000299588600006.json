{"auto_keywords": [{"score": 0.04845849110410781, "phrase": "instruction-level_temporal_redundancy"}, {"score": 0.00481495049065317, "phrase": "error_correcting_code"}, {"score": 0.0042928648367867835, "phrase": "increasingly_significant_concern"}, {"score": 0.004195418010131832, "phrase": "modern_micro-processor_design"}, {"score": 0.003613556291453534, "phrase": "order_cores"}, {"score": 0.0034911335714333507, "phrase": "performance_degradation"}, {"score": 0.0030414140732789186, "phrase": "fault_tolerant_architecture"}, {"score": 0.0029722900280316216, "phrase": "fast_error"}, {"score": 0.0027424619603260837, "phrase": "two-dimensional_code"}, {"score": 0.0026191799769765085, "phrase": "double_execution"}, {"score": 0.0025596276616952516, "phrase": "experimental_results"}, {"score": 0.002361632539339945, "phrase": "ipc_loss"}, {"score": 0.0021049977753042253, "phrase": "conventional_double_execution_architecture"}], "paper_keywords": ["soft errors", " fault tolerance", " double execution", " instruction reuse buffer", " fast error correcting code"], "paper_abstract": "Soft error has become an increasingly significant concern in modern micro-processor design, it is reported that the instruction-level temporal redundancy in out-of-order cores suffers an performance degradation up to 45%. In this work, we propose a fault tolerant architecture with fast error correcting codes (such as the two-dimensional code) based on double execution. Experimental results show that our scheme can gain back IPC loss between 9.1% and 10.2%, with an average around 9.2% compared with the conventional double execution architecture.", "paper_title": "A Fault-Tolerant Architecture with Error Correcting Code for the Instruction-Level Temporal Redundancy", "paper_id": "WOS:000299588600006"}