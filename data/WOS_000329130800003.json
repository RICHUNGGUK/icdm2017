{"auto_keywords": [{"score": 0.03222583286700564, "phrase": "pardis"}, {"score": 0.014183178579637632, "phrase": "system_performance"}, {"score": 0.010680834402731305, "phrase": "fixed-function_hardware"}, {"score": 0.00481495049065317, "phrase": "ddrx_interfacing_standards"}, {"score": 0.004765173195920904, "phrase": "modern_memory_controllers"}, {"score": 0.004715908063787721, "phrase": "sophisticated_address_mapping"}, {"score": 0.004667149874736771, "phrase": "command_scheduling"}, {"score": 0.004594951819987416, "phrase": "power_management_optimizations"}, {"score": 0.004500414250942443, "phrase": "adverse_effects"}, {"score": 0.004453874101119545, "phrase": "dram_timing"}, {"score": 0.004272456401437226, "phrase": "promising_way"}, {"score": 0.0038106195546165574, "phrase": "wide_use"}, {"score": 0.003693533648584145, "phrase": "dma_scheduling"}, {"score": 0.0036553070575015344, "phrase": "nand_flash"}, {"score": 0.0036174746598098863, "phrase": "directory_control"}, {"score": 0.0035245918797629804, "phrase": "stringent_latency"}, {"score": 0.003434085751246066, "phrase": "modern_ddrx_devices"}, {"score": 0.0032940691998512963, "phrase": "ddrx_controllers"}, {"score": 0.0031597433845085092, "phrase": "instruction_set_architecture"}, {"score": 0.0031270295517969726, "phrase": "isa"}, {"score": 0.003078577062864183, "phrase": "hardware_implementation"}, {"score": 0.0028921584725218642, "phrase": "performance_requirements"}, {"score": 0.002847339938387273, "phrase": "high-speed_ddrx_interface"}, {"score": 0.0027169974137406148, "phrase": "previously_proposed_dram_scheduling"}, {"score": 0.00253916011199984, "phrase": "pardis._simulation_results"}, {"score": 0.0024868131939261716, "phrase": "average_performance"}, {"score": 0.0022642601698943687, "phrase": "application-specific_optimizations"}, {"score": 0.0021493248730171132, "phrase": "dram_energy"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Programmable", " memory controller"], "paper_abstract": "Modern memory controllers employ sophisticated address mapping, command scheduling, and power management optimizations to alleviate the adverse effects of DRAM timing and resource constraints on system performance. A promising way of improving the versatility and efficiency of these controllers is to make them programmable-a proven technique that has seen wide use in other control tasks, ranging from DMA scheduling to NAND Flash and directory control. Unfortunately, the stringent latency and throughput requirements of modern DDRx devices have rendered such programmability largely impractical, confining DDRx controllers to fixed-function hardware. This article presents the instruction set architecture (ISA) and hardware implementation of PARDIS, a programmable memory controller that can meet the performance requirements of a high-speed DDRx interface. The proposed controller is evaluated by mapping previously proposed DRAM scheduling, address mapping, refresh scheduling, and power management algorithms onto PARDIS. Simulation results show that the average performance of PARDIS comes within 8% of fixed-function hardware for each of these techniques; moreover, by enabling application-specific optimizations, PARDIS improves system performance by 6 to 17% and reduces DRAM energy by 9 to 22% over four existing memory controllers.", "paper_title": "A Programmable Memory Controller for the DDRx Interfacing Standards", "paper_id": "WOS:000329130800003"}