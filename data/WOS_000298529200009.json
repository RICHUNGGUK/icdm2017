{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "object-oriented_bytecode_programs"}, {"score": 0.03014720888291599, "phrase": "cost_relations"}, {"score": 0.00409895142748329, "phrase": "automatic_cost_analysis"}, {"score": 0.003926842550194739, "phrase": "java"}, {"score": 0.003701401653850141, "phrase": "source_code"}, {"score": 0.003306559295382181, "phrase": "dynamic_dispatch"}, {"score": 0.003050508020268648, "phrase": "bytecode_program"}, {"score": 0.0027841357057119295, "phrase": "execution_cost"}, {"score": 0.0026102209360670523, "phrase": "costa"}, {"score": 0.0025409639091476363, "phrase": "java_bytecode"}, {"score": 0.0024868972942701582, "phrase": "upper_bounds"}, {"score": 0.0024209250169088575, "phrase": "large_class"}, {"score": 0.0023694065215394593, "phrase": "complexity_classes"}, {"score": 0.002174041708084857, "phrase": "bytecode_form"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cost analysis", " Resource usage analysis", " Bytecode languages", " Static analysis", " Quantitative analysis"], "paper_abstract": "Cost analysis statically approximates the cost of programs in terms of their input data size. This paper presents, to the best of our knowledge, the first approach to the automatic cost analysis of object-oriented bytecode programs. In languages such as Java and C#, analyzing bytecode has a much wider application area than analyzing source code since the latter is often not available. Cost analysis in this context has to consider, among others, dynamic dispatch, jumps, the operand stack, and the heap. Our method takes a bytecode program and a cost model specifying the resource of interest, and generates cost relations which approximate the execution cost of the program with respect to such resource. We report on COSTA, an implementation for Java bytecode which can obtain upper bounds on cost for a large class of programs and complexity classes. Our basic techniques can be directly applied to infer cost relations for other object-oriented imperative languages, not necessarily in bytecode form. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Cost analysis of object-oriented bytecode programs", "paper_id": "WOS:000298529200009"}