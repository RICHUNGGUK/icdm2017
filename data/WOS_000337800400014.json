{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multicast_prioritization_algorithms"}, {"score": 0.004732785510739708, "phrase": "prioritized_atomic_multicast"}, {"score": 0.004494570360108983, "phrase": "total_order"}, {"score": 0.003623949225126944, "phrase": "multiple_applications"}, {"score": 0.003382547312072468, "phrase": "prioritization_algorithms"}, {"score": 0.003267925215811654, "phrase": "transaction_abort_rates"}, {"score": 0.0031032109441552287, "phrase": "replicated_database_system"}, {"score": 0.0029467742734417255, "phrase": "transaction_messages"}, {"score": 0.002726740692380339, "phrase": "existing_integrity_constraints"}, {"score": 0.002566997205079849, "phrase": "abort_reduction"}, {"score": 0.002197801146305747, "phrase": "priority_reordering_queue"}, {"score": 0.0021049977753042253, "phrase": "multicast_algorithms"}], "paper_keywords": ["Total-order multicast", " Database replication", " Integrity constraints", " Abort rate", " Prioritized message delivery"], "paper_abstract": "Prioritized atomic multicast consists in delivering messages in total order while ensuring that the priorities of the messages are considered; i.e., messages with higher priorities are delivered first. That service can be used in multiple applications. An example is the usage of prioritization algorithms for reducing the transaction abort rates in applications that use a replicated database system. To this end, transaction messages get priorities according to their probability of violating the existing integrity constraints. This paper evaluates how that abort reduction may be improved varying the message sending rate and the bounds set on the length of the priority reordering queue being used by those multicast algorithms.", "paper_title": "Improving the benefits of multicast prioritization algorithms", "paper_id": "WOS:000337800400014"}