{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cryptographic_protocols_analysis"}, {"score": 0.004439634831927606, "phrase": "cryptographic_protocols"}, {"score": 0.004310501708408856, "phrase": "state_exploration"}, {"score": 0.00388729255686046, "phrase": "reasonable_amount"}, {"score": 0.003830312347175889, "phrase": "computing_and_storage_resources"}, {"score": 0.003584025547693836, "phrase": "limited_amount"}, {"score": 0.002726740692380339, "phrase": "known_flaws"}, {"score": 0.0026084451971464867, "phrase": "well-known_cryptographic_protocols"}, {"score": 0.002404706573379854, "phrase": "relative_performance"}, {"score": 0.0022005118194652704, "phrase": "parallel_sessions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Protocol verification", " Formal methods", " Network-level security and protection"], "paper_abstract": "The tools for cryptographic protocols analysis based on state exploration are designed to be completely automatic and should carry out their job with a reasonable amount of computing and storage resources, even when run by users having a limited amount of expertise in the field. This paper compares four tools of this kind to highlight their features and ability to detect bugs under the same experimental conditions. To this purpose, the ability of each tool to detect known flaws in a uniform set of well-known cryptographic protocols has been checked. Results are also given on the relative performance of the tools when analysing several known-good protocols with an increasing number of parallel sessions. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Tools for cryptographic protocols analysis: A technical and experimental comparison", "paper_id": "WOS:000267879600010"}