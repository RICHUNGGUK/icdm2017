{"auto_keywords": [{"score": 0.04764602699421295, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "stackless_multi-bvh"}, {"score": 0.00443638953122199, "phrase": "stackless_traversal_algorithms"}, {"score": 0.004338390136272005, "phrase": "tracing_acceleration_structures"}, {"score": 0.004274257668843717, "phrase": "significantly_less_storage"}, {"score": 0.0041488110506566825, "phrase": "ordinary_stack-based_ones"}, {"score": 0.0039380388343479384, "phrase": "massively_parallel_rendering_methods"}, {"score": 0.0036553070575015344, "phrase": "simd_architectures"}, {"score": 0.0035744997458371335, "phrase": "commonly_used_acceleration_structure"}, {"score": 0.0034954725617970294, "phrase": "mbvh"}, {"score": 0.003392804886610623, "phrase": "multiple_bounding_boxes"}, {"score": 0.003293142761521425, "phrase": "improved_parallelism"}, {"score": 0.0026330549554033876, "phrase": "novel_stackless_traversal_algorithm"}, {"score": 0.002389696110283506, "phrase": "small_bitmask"}, {"score": 0.0023368018449680295, "phrase": "dynamic_ordered_traversal"}, {"score": 0.002251227801482381, "phrase": "low_computation_overhead"}, {"score": 0.0021687806803474367, "phrase": "efficient_implementation_techniques"}, {"score": 0.002136651746284283, "phrase": "recent_cpu"}], "paper_keywords": ["ray tracing", " MBVH", " stackless traversal", " SIMD processors"], "paper_abstract": "Stackless traversal algorithms for ray tracing acceleration structures require significantly less storage per ray than ordinary stack-based ones. This advantage is important for massively parallel rendering methods, where there are many rays in flight. On SIMD architectures, a commonly used acceleration structure is the MBVH, which has multiple bounding boxes per node for improved parallelism. It scales to branching factors higher than two, for which, however, only stack-based traversal methods have been proposed so far. In this paper, we introduce a novel stackless traversal algorithm for MBVHs with up to four-way branching. Our approach replaces the stack with a small bitmask, supports dynamic ordered traversal, and has a low computation overhead. We also present efficient implementation techniques for recent CPU, MIC (Intel Xeon Phi) and GPU (NVIDIA Kepler) architectures.", "paper_title": "Stackless Multi-BVH Traversal for CPU, MIC and GPU Ray Tracing", "paper_id": "WOS:000331694100011"}