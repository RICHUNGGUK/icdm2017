{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cache-optimized_multigrid"}, {"score": 0.004712726613162057, "phrase": "patch-adaptive_relaxation"}, {"score": 0.004514714250357749, "phrase": "today's_computer_architectures"}, {"score": 0.004278807087784626, "phrase": "relatively_small_cache_memories"}, {"score": 0.0038846843242954935, "phrase": "constantly_widening_gap"}, {"score": 0.003802135020791801, "phrase": "cpu_speed"}, {"score": 0.0037213333316218522, "phrase": "main_memory_performance"}, {"score": 0.0036422425344358037, "phrase": "efficient_execution"}, {"score": 0.0035648266669315943, "phrase": "numerically_intensive_programs"}, {"score": 0.003306559295382181, "phrase": "hierarchical_memory_designs"}, {"score": 0.002969628818856786, "phrase": "cache_performance"}, {"score": 0.0029064676523923886, "phrase": "multigrid_codes"}, {"score": 0.0022941723937662927, "phrase": "fundamental_algorithmic_modifications"}, {"score": 0.0022213218042340735, "phrase": "careful_mathematical_analysis"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "Most of today's computer architectures employ fast, yet relatively small cache memories in order to mitigate the effects of the constantly widening gap between CPU speed and main memory performance. Efficient execution of numerically intensive programs can only be expected if these hierarchical memory designs are respected. Our work targets the optimization of the cache performance of multigrid codes. The research efforts we will present in this paper first cover transformations that may be automized and then focus on fundamental algorithmic modifications which require careful mathematical analysis. We will present experimental results for the latter.", "paper_title": "Towards cache-optimized multigrid using patch-adaptive relaxation", "paper_id": "WOS:000237003200109"}