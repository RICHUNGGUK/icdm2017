{"auto_keywords": [{"score": 0.00476323161560059, "phrase": "modern_graphics_cards"}, {"score": 0.004636340567075841, "phrase": "vertex_cache"}, {"score": 0.004321952227344232, "phrase": "graphics_pipeline"}, {"score": 0.0041840994704406866, "phrase": "effective_use"}, {"score": 0.0037352048741373816, "phrase": "cache_hit_rate"}, {"score": 0.003519561814102764, "phrase": "effective_algorithm"}, {"score": 0.003407214479510987, "phrase": "efficient_rendering"}, {"score": 0.003298441494378465, "phrase": "greedy_optimization"}, {"score": 0.002944284514509205, "phrase": "resultant_sequence"}, {"score": 0.002789226820897593, "phrase": "progressive_meshes"}, {"score": 0.0027295084882654917, "phrase": "simplified_version"}, {"score": 0.002685558057339722, "phrase": "original_mesh"}, {"score": 0.0026423134393535243, "phrase": "rendering_sequence"}, {"score": 0.0025440911575156755, "phrase": "reordered_sequence"}, {"score": 0.0025167026017217926, "phrase": "full_resolution"}, {"score": 0.0024761702541879213, "phrase": "resultant_rendering_sequence"}, {"score": 0.0023841092222805253, "phrase": "reasonably_good_rendering_performance"}, {"score": 0.0021627595586364724, "phrase": "experimental_results"}], "paper_keywords": ["polygon mesh", " rendering sequence", " vertex cache", " progressive mesh", " efficient rendering"], "paper_abstract": "Modern graphics cards are equipped with a vertex cache to reduce the amount of data needing to be transmitted to the graphics pipeline during rendering. To make effective use of the cache and facilitate rendering, it is key to represent a mesh in a manner that maximizes the cache hit rate. In this work, we propose a simple yet effective algorithm for generating a sequence for efficient rendering of 3D polygonal meshes based on greedy optimization. The algorithm outperforms the current state-of-the-art algorithms in terms of rendering efficiency of the resultant sequence. We also adapt it for the rendering of progressive meshes. For any simplified version of the original mesh, the rendering sequence is generated by adaptively updating the reordered sequence at full resolution. The resultant rendering sequence is cheap to compute and has reasonably good rendering performance, which is desirable to many complex rendering environments involving continuous rendering of meshes at various level of details. The experimental results on a collection of 3D meshes are provided.", "paper_title": "An improved vertex caching scheme for 3D mesh rendering", "paper_id": "WOS:000237393900020"}