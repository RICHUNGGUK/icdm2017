{"auto_keywords": [{"score": 0.048198091656910746, "phrase": "timed_automata"}, {"score": 0.028017230475481696, "phrase": "tpn"}, {"score": 0.00481495049065317, "phrase": "concurrency-preserving_translation"}, {"score": 0.004743207142962379, "phrase": "petri"}, {"score": 0.004488946121663966, "phrase": "real-time_systems"}, {"score": 0.003940706575253453, "phrase": "first_formal_comparisons"}, {"score": 0.0036921366375716005, "phrase": "sequential_behavior"}, {"score": 0.00354700018079049, "phrase": "timed_language_equivalence"}, {"score": 0.003511613254403125, "phrase": "timed_bisimilarity"}, {"score": 0.0032571885279065126, "phrase": "timed_traces"}, {"score": 0.0032085525502105836, "phrase": "partial_order_representation"}, {"score": 0.003113441660343867, "phrase": "real-time_distributed_systems"}, {"score": 0.0030823759566359563, "phrase": "timed"}, {"score": 0.0029909851863915283, "phrase": "timed_words"}, {"score": 0.0027054473441439422, "phrase": "concurrent_systems"}, {"score": 0.002665027876903161, "phrase": "time_petri_nets"}, {"score": 0.0021049977753042253, "phrase": "resulting_nta."}], "paper_keywords": ["Concurrency", " Timed traces", " Time Petri nets", " Networks of timed automata", " Concurrency-preserving translation"], "paper_abstract": "Several formalisms to model distributed real-time systems coexist in the literature. This naturally induces a need to compare their expressiveness and to translate models from one formalism to another when possible. The first formal comparisons of the expressiveness of these models focused on the preservation of the sequential behavior of the models, using notions like timed language equivalence or timed bisimilarity. They do not consider preservation of concurrency. In this paper we define timed traces as a partial order representation of executions of our models for real-time distributed systems. Timed traces provide an alternative to timed words, and take the distribution of actions into account. We propose a translation between two popular formalisms that describe timed concurrent systems: 1-bounded time Petri nets (TPN) and networks of timed automata (NTA). Our translation preserves the distribution of actions, that is we require that if the TPN represents the product of several components (called processes), then each process should have its counterpart as one timed automaton in the resulting NTA.", "paper_title": "A concurrency-preserving translation from time Petri nets to networks of timed automata", "paper_id": "WOS:000303478000002"}