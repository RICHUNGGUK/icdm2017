{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "component_replacement"}, {"score": 0.004755054742217193, "phrase": "timely_execution"}, {"score": 0.004695900553353526, "phrase": "dynamic_systems"}, {"score": 0.004637478829869904, "phrase": "timely_run-time_software_replacement_techniques"}, {"score": 0.004438642216475526, "phrase": "real-time_systems_development"}, {"score": 0.004301834610818624, "phrase": "typical_real-time_systems"}, {"score": 0.004195418010131832, "phrase": "dynamic_behavior"}, {"score": 0.003965468669507077, "phrase": "current_efforts"}, {"score": 0.003819187440994939, "phrase": "safe_and_predictable_execution"}, {"score": 0.0037480753312398754, "phrase": "controllable_level"}, {"score": 0.003454858296390957, "phrase": "system_dynamic_behavior"}, {"score": 0.0031448288291084, "phrase": "different_operations"}, {"score": 0.0029169007179202164, "phrase": "main_challenges"}, {"score": 0.0026055251533586804, "phrase": "run_time"}, {"score": 0.0025569530630374995, "phrase": "temporal_properties"}, {"score": 0.0023419588513908783, "phrase": "real_example"}, {"score": 0.0021995257343837547, "phrase": "presented_ideas"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["component frameworks", " real-time", " dynamic systems", " component replacement", " reconfiguration"], "paper_abstract": "Timely run-time software replacement techniques are a corner stone for reconciling real-time systems development and dynamic behavior. Typical real-time systems do not consider dynamic behavior because it deeply challenges predictability and timeliness. Current efforts are starting to merge the safe and predictable execution with a controllable level of dynamicity by imposing a set of bounds and limitations to the system dynamic behavior. One of the obstacles for this is how to time-bound the different operations required to effectively implement component replacement. In this paper, the main challenges for this problem are identified, and a model to ensure that components can be replaced at run time preserving the temporal properties of the system is provided that also avoids failures in replacements. A real example and simulations of our replacement model are provided that validate the presented ideas. Copyright (C) 2013 John Wiley & Sons, Ltd.", "paper_title": "Scheduling component replacement for timely execution in dynamic systems", "paper_id": "WOS:000339479400002"}