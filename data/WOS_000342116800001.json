{"auto_keywords": [{"score": 0.023628435977046038, "phrase": "top-k_composite_services"}, {"score": 0.00481495049065317, "phrase": "automatic_construction_of_skyline"}, {"score": 0.004787595063253874, "phrase": "composite_services."}, {"score": 0.0046797114400479135, "phrase": "rapid_increase"}, {"score": 0.004626680470601208, "phrase": "available_web_services"}, {"score": 0.0044967055264893184, "phrase": "service-oriented_architecture"}, {"score": 0.004081385289516914, "phrase": "outsourcing_software"}, {"score": 0.0035189057079817285, "phrase": "large_number"}, {"score": 0.0034789831290103967, "phrase": "web_services"}, {"score": 0.0033811403330431897, "phrase": "single_web_service"}, {"score": 0.0033048445033866795, "phrase": "concrete_user_request"}, {"score": 0.0031393948330209255, "phrase": "multiple_basic_services"}, {"score": 0.003068537223324389, "phrase": "complex_requirement"}, {"score": 0.0030337085953063125, "phrase": "web_service_composition"}, {"score": 0.002999274091205852, "phrase": "dynamic_and_seamless_integration"}, {"score": 0.0028490783932465288, "phrase": "traditional_composition_methods"}, {"score": 0.0028006988338192375, "phrase": "\"best\"_composite_service"}, {"score": 0.0027374647587075935, "phrase": "simple_weight-additive_method"}, {"score": 0.002675654549462983, "phrase": "utility_function"}, {"score": 0.002585539416877115, "phrase": "multiple_dimensions"}, {"score": 0.0025561788724870974, "phrase": "nonfunctional_properties"}, {"score": 0.0024281181691350085, "phrase": "qos_dimension"}, {"score": 0.002386869729952315, "phrase": "non-trivial_issue"}, {"score": 0.0021413855297794946, "phrase": "experimental_results"}], "paper_keywords": ["Services", " Skyline", " Composition"], "paper_abstract": "Due to the rapid increase of available web services over the Internet, service-oriented architecture has been regarded as one of the most promising web technologies. Moreover, enterprises are able to employ outsourcing software to build and publish their business applications as services, the latter can be accessible via the Web by other people or organizations. While there are a large number of web services available, often no single web service can satisfy a concrete user request, so one has to \"compose\" multiple basic services to fulfill a complex requirement. Web service composition enables dynamic and seamless integration of business applications on the Web. The traditional composition methods select the \"best\" composite service through defining a simple weight-additive method based on a utility function. But a service has multiple dimensions of nonfunctional properties, so how to assign weight for each QoS dimension is a non-trivial issue. In this article, we propose algorithms to compose skyline or top-k composite services for a given user request automatically. Experimental results show that our approach can find all skyline or a set of top-k composite services effectively and efficiently.", "paper_title": "TOWARDS AUTOMATIC CONSTRUCTION OF SKYLINE COMPOSITE SERVICES", "paper_id": "WOS:000342116800001"}