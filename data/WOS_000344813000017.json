{"auto_keywords": [{"score": 0.04918757645374836, "phrase": "ssd_cache_performance"}, {"score": 0.048603687852811175, "phrase": "hadoop"}, {"score": 0.00481495049065317, "phrase": "application-level_similarity"}, {"score": 0.004466519142879166, "phrase": "massive_data_processing"}, {"score": 0.004410938507689426, "phrase": "solid-state_drives"}, {"score": 0.004040688646993605, "phrase": "hadoop_system"}, {"score": 0.00389164348807591, "phrase": "existing_ssd_cache_management_algorithms"}, {"score": 0.0037246656582642272, "phrase": "upper-level_applications"}, {"score": 0.0035204268675160257, "phrase": "novel_ssd_cache_management_algorithm"}, {"score": 0.0034766045050445317, "phrase": "dsa"}, {"score": 0.0033482708495261864, "phrase": "application-level_data_similarity"}, {"score": 0.003125175084962886, "phrase": "temporal_similarity"}, {"score": 0.0030862341714020694, "phrase": "user_similarity"}, {"score": 0.0028091907694771613, "phrase": "small-scale_hadoop_cluster"}, {"score": 0.002540969393772296, "phrase": "lru"}, {"score": 0.002371531125700046, "phrase": "underlying_tradeoff"}, {"score": 0.0023419588513908783, "phrase": "cache_performance"}, {"score": 0.0023127544795063263, "phrase": "ssd_deployment_cost"}, {"score": 0.0022133711375320244, "phrase": "key_factors"}, {"score": 0.0021049977753042253, "phrase": "useful_guidelines"}], "paper_keywords": ["Data similarity", " Hybrid Hadoop storage system", " Cache management algorithm"], "paper_abstract": "To boost the performance of massive data processing, solid-state drives (SSDs) have been used as a kind of cache in the Hadoop system. However, most of existing SSD cache management algorithms are ignorant of the characteristics of upper-level applications. In this paper, we propose a novel SSD cache management algorithm called DSA, which can exploit the application-level data similarity to improve the SSD cache performance in Hadoop. Our algorithm takes both temporal similarity and user similarity in querying behaviors into account. We evaluate the effectiveness of our proposed DSA algorithm in a small-scale Hadoop cluster. Our experimental results show that our algorithm can achieve much better performance than other well-known algorithms (e.g., LRU, FIFO). We also clearly point out the underlying tradeoff between cache performance and SSD deployment cost, and identify a number of key factors that affect SSD cache performance. Our findings can provide useful guidelines on how to effectively integrate SSDs into Hadoop.", "paper_title": "Exploiting application-level similarity to improve SSD cache performance in Hadoop", "paper_id": "WOS:000344813000017"}