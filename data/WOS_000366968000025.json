{"auto_keywords": [{"score": 0.04913548507380238, "phrase": "pagerank_algorithm"}, {"score": 0.04382196281876911, "phrase": "parallel_pagerank_algorithm"}, {"score": 0.04058903350103266, "phrase": "massive_data_processing"}, {"score": 0.00481495049065317, "phrase": "basic_idea"}, {"score": 0.004490842671590769, "phrase": "mapreduce_distributed_programming_concepts"}, {"score": 0.004065156038847781, "phrase": "adjacency_list"}, {"score": 0.0036070601923916196, "phrase": "essential_characteristics"}, {"score": 0.003397777073086736, "phrase": "pagerank"}, {"score": 0.0032324864013225166, "phrase": "iteration_acceleration_model"}, {"score": 0.0031372369299648203, "phrase": "vector_computing"}, {"score": 0.002701361707441567, "phrase": "power_iteration_acceleration"}, {"score": 0.0026480675472008563, "phrase": "mapreduce"}, {"score": 0.0025191653363555214, "phrase": "abundant_experimental_analyses"}], "paper_keywords": ["PageRank", " Power Iteration Acceleration", " Parallel", " MapReduce"], "paper_abstract": "Based on the study about the basic idea of PageRank algorithm, combining with the MapReduce distributed programming concepts, the paper first proposed a parallel PageRank algorithm based on adjacency list which is suitable for massive data processing. Then, after examining the essential characteristics of iteration hidden behind the PageRank, it provided an iteration acceleration model based on vector computing. Following, using such acceleration model, the paper again brought forward a parallel PageRank algorithm with power iteration acceleration with MapReduce. Finally, after abundant experimental analyses, it has been proved that the both the two proposed algorithm can be suitable for massive data processing and the 2nd one can significantly reduce the numbers of iteration and improve the efficiency of PageRank algorithm.", "paper_title": "A Parallel PageRank Algorithm with Power Iteration Acceleration", "paper_id": "WOS:000366968000025"}