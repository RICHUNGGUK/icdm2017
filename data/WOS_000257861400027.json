{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sync_pattern"}, {"score": 0.007173928894869963, "phrase": "asynchronism_level"}, {"score": 0.006931724394254109, "phrase": "sequential_decoder"}, {"score": 0.005672375932527078, "phrase": "synchronization_threshold"}, {"score": 0.004652016085325825, "phrase": "memoryless_channel"}, {"score": 0.004520438007604407, "phrase": "sequential_observations"}, {"score": 0.004219571240696568, "phrase": "random_time"}, {"score": 0.0041001740903338834, "phrase": "size_a"}, {"score": 0.003006654007926993, "phrase": "simple_expression"}, {"score": 0.0022296340517805125, "phrase": "output_sequences"}, {"score": 0.0022041312401435346, "phrase": "maximum_length_a"}, {"score": 0.0021049977753042253, "phrase": "far_fewer_observations"}], "paper_keywords": ["frame synchronization", " pattern recognition", " quickest detection", " sequential analysis"], "paper_abstract": "We consider the \"one-shot frame synchronization problem,\" where a decoder wants to locate a sync pattern at the output of a memoryless channel on the basis of sequential observations. The sync pattern of length IV starts being emitted at a random time within some interval of size A, where A characterizes the asynchronism level. We show that a sequential decoder can optimally locate the sync pattern, i.e., exactly, without delay, and with probability approaching one as N -> infinity, if the asynchronism level grows as O(e(N alpha)), with a below the synchronization threshold, a constant that admits a simple expression depending on the channel. If a exceeds the synchronization threshold, any decoder, sequential or nonsequential, locates the sync pattern with an error that tends to one as N -> infinity. Hence, a sequential decoder can locate a sync pattern as well as the (nonsequential) maximum-likelihood decoder that operates on the basis of output sequences of maximum length A + N - 1, but with far fewer observations.", "paper_title": "Optimal sequential frame synchronization", "paper_id": "WOS:000257861400027"}