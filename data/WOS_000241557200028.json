{"auto_keywords": [{"score": 0.0245708430292824, "phrase": "sci"}, {"score": 0.02051593704864886, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "java_communications_support"}, {"score": 0.004626680470601208, "phrase": "communication_strategies"}, {"score": 0.004548253531664032, "phrase": "efficient_non-blocking_java_communication"}, {"score": 0.004420472010542188, "phrase": "communication_performance"}, {"score": 0.004296264970612285, "phrase": "overall_cluster_performance"}, {"score": 0.004128192012388041, "phrase": "non-blocking_communications"}, {"score": 0.003966667994579941, "phrase": "previous_efforts"}, {"score": 0.0038772110657592854, "phrase": "non-blocking_communication"}, {"score": 0.0036622637391432143, "phrase": "java_nio_api."}, {"score": 0.0036001255166809793, "phrase": "java_nio_package"}, {"score": 0.003559284776569813, "phrase": "scalability_issues"}, {"score": 0.0033048445033866795, "phrase": "high_speed_interconnects"}, {"score": 0.0031037644581516973, "phrase": "non-blocking_communication_library"}, {"score": 0.0030337085953063125, "phrase": "specialized_communication_hardware"}, {"score": 0.002898291237210567, "phrase": "startup_communication_time"}, {"score": 0.0028490783932465288, "phrase": "unnecessary_copying"}, {"score": 0.0026152363154073707, "phrase": "java_message-passing_library"}, {"score": 0.002373276186210053, "phrase": "proposed_approach"}, {"score": 0.0023329572140896237, "phrase": "scalable_coherent_interface"}, {"score": 0.0022672718785099666, "phrase": "gi-gabit_ethernet"}, {"score": 0.002216054733102974, "phrase": "testbed_cluster"}, {"score": 0.0021908807203548345, "phrase": "experimental_results"}, {"score": 0.0021413855297794946, "phrase": "proposed_library"}, {"score": 0.0021049977753042253, "phrase": "communication_overhead"}], "paper_keywords": [""], "paper_abstract": "This paper presents communication strategies for supporting efficient non-blocking Java communication on clusters. The communication performance is critical for the overall cluster performance. It is possible to use non-blocking communications to reduce the communication overhead. Previous efforts to efficiently support non-blocking communication in Java have led to the introduction of the Java NIO API. Although the Java NIO package addresses scalability issues by providing select () like functionality, it lacks support for high speed interconnects. To solve this issue, this paper introduces a non-blocking communication library to efficiently support specialized communication hardware. This library focuses on reducing the startup communication time, avoiding unnecessary copying, and overlapping computation with communication. This project provides the basis for a Java Message-passing library to be implemented on top of it. Towards the end, this paper evaluates the proposed approach on a Scalable Coherent Interface (SCI) and Gi-gabit Ethernet (GbE) testbed cluster. Experimental results show that the proposed library reduces the communication overhead and increases computation and communication overlapping.", "paper_title": "Non-blocking Java communications support on clusters", "paper_id": "WOS:000241557200028"}