{"auto_keywords": [{"score": 0.04315880828482172, "phrase": "partial_products"}, {"score": 0.00481495049065317, "phrase": "high-performance_parallel_decimal_multipliers"}, {"score": 0.004672444473700524, "phrase": "high-performance_decimal_floating-point_units"}, {"score": 0.004466519142879166, "phrase": "parallel_decimal_multipliers"}, {"score": 0.004164007198843467, "phrase": "parallel_generation"}, {"score": 0.0038624981944755813, "phrase": "simplified_set"}, {"score": 0.0038239757564863057, "phrase": "multiplicand_multiples"}, {"score": 0.0036370297611938796, "phrase": "tree_structure"}, {"score": 0.0035648266669315943, "phrase": "decimal_multioperand_carry-save_addition_algorithm"}, {"score": 0.003339886795391701, "phrase": "new_improvements"}, {"score": 0.0032246835734680377, "phrase": "previous_designs"}, {"score": 0.002816246391862638, "phrase": "different_decimal-coded_operands"}, {"score": 0.0026919067120537055, "phrase": "special_designed_bit_counters"}, {"score": 0.0025989960809479104, "phrase": "design_methodology"}, {"score": 0.0025219085140220773, "phrase": "efficient_reduction_trees"}, {"score": 0.002496722870659199, "phrase": "different_area"}, {"score": 0.0022810491620483737, "phrase": "proposed_architectures"}, {"score": 0.0022582634725291225, "phrase": "interesting_area-delay_figures"}, {"score": 0.0021262403223013242, "phrase": "previous_alternatives"}, {"score": 0.0021049977753042253, "phrase": "decimal_multiplication"}], "paper_keywords": ["Decimal multiplication", " parallel multiplication", " decimal carry-save addition", " decimal codings"], "paper_abstract": "The new generation of high-performance decimal floating-point units (DFUs) is demanding efficient implementations of parallel decimal multipliers. In this paper, we describe the architectures of two parallel decimal multipliers. The parallel generation of partial products is performed using signed-digit radix-10 or radix-5 recodings of the multiplier and a simplified set of multiplicand multiples. The reduction of partial products is implemented in a tree structure based on a decimal multioperand carry-save addition algorithm that uses unconventional (non BCD) decimal-coded number systems. We further detail these techniques and present the new improvements to reduce the latency of the previous designs, which include: optimized digit recoders for the generation of 2(n)-tuples (and 5-tuples), decimal carry-save adders (CSAs) combining different decimal-coded operands, and carry-free adders implemented by special designed bit counters. Moreover, we detail a design methodology that combines all these techniques to obtain efficient reduction trees with different area and delay trade-offs for any number of partial products generated. Evaluation results for 16-digit operands show that the proposed architectures have interesting area-delay figures compared to conventional Booth radix-4 and radix-8 parallel binary multipliers and outperform the figures of previous alternatives for decimal multiplication.", "paper_title": "Improved Design of High-Performance Parallel Decimal Multipliers", "paper_id": "WOS:000275883100009"}