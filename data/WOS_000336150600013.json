{"auto_keywords": [{"score": 0.004278807087784626, "phrase": "higher_compression_performance"}, {"score": 0.00323625520042892, "phrase": "additional_complexity"}, {"score": 0.0031335830806256777, "phrase": "initial_version"}, {"score": 0.002937879003671346, "phrase": "substantially_high_computational_complexity"}, {"score": 0.00266693888510356, "phrase": "new_algorithm"}, {"score": 0.0025546627686955656, "phrase": "computational_complexity"}, {"score": 0.0025003054002226965, "phrase": "software_implementation"}, {"score": 0.0021975548867457606, "phrase": "computation_time"}, {"score": 0.0021049977753042253, "phrase": "proposed_algorithm"}], "paper_keywords": ["Integer discrete cosine transform", " H.264 standard", " computational complexity", " software implementation"], "paper_abstract": "In order to achieve higher compression performance the fidelity range extension ( FRExt) amendment was added to the H. 264 advanced video coding ( AVC) standard. It uses both 4 Chi 4 and 8 Chi 8 integer discrete cosine transform ( DCT) adaptively in the high pro files. This led to additional complexity of the initial version of the H. 264/AVC encoder which had substantially high computational complexity. In this paper, we propose a new algorithm which reduces the computational complexity for software implementation of horizontal 8 Chi 8 integer DCT by more than 25%. Simulation results indicate 22% reduction in the computation time by using the proposed algorithm.", "paper_title": "FAST CALCULATION OF 8 Chi 8 INTEGER DCT IN THE SOFTWARE IMPLEMENTATION OF H.264/AVC", "paper_id": "WOS:000336150600013"}