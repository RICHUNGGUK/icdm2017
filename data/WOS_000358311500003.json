{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "haskell"}, {"score": 0.004366106816225457, "phrase": "haskell-based_functional_programming_course"}, {"score": 0.0037903327482565097, "phrase": "selected_material"}, {"score": 0.0033262524445013303, "phrase": "quickcheck_tests"}, {"score": 0.0030821633718368206, "phrase": "submission_architecture"}, {"score": 0.00295078850927459, "phrase": "automatic_testing"}, {"score": 0.002347378595930709, "phrase": "weekly_assignments"}, {"score": 0.0022718774783143203, "phrase": "informal_competition"}, {"score": 0.0021049977753042253, "phrase": "award_ceremony"}], "paper_keywords": ["Algorithms", " Languages", " Reliability", " Haskell", " functional programming", " induction", " testing", " monads", " education", " competition", " QuickCheck", " SmallCheck"], "paper_abstract": "We report on our experience teaching a Haskell-based functional programming course to over 1100 students for two winter terms. The syllabus was organized around selected material from various sources. Throughout the terms, we emphasized correctness through QuickCheck tests and proofs by induction. The submission architecture was coupled with automatic testing, giving students the possibility to correct mistakes before the deadline. To motivate the students, we complemented the weekly assignments with an informal competition and gave away trophies in a award ceremony.", "paper_title": "Experience Report: The Next 1100 Haskell Programmers", "paper_id": "WOS:000358311500003"}