{"auto_keywords": [{"score": 0.048653361714131045, "phrase": "fault-tolerant_distributed_systems"}, {"score": 0.03413611536474172, "phrase": "proposed_approach"}, {"score": 0.00481495049065317, "phrase": "cooperative_concurrent_systems"}, {"score": 0.004766683200410046, "phrase": "exception_flow_analysis"}, {"score": 0.004555371402128666, "phrase": "fault_tolerance_mechanisms"}, {"score": 0.004202472962684885, "phrase": "overall_system_dependability"}, {"score": 0.004036369952624852, "phrase": "fault_tolerance"}, {"score": 0.003876806615011266, "phrase": "desired_levels"}, {"score": 0.0032989853590079153, "phrase": "main_fault_tolerance_mechanism"}, {"score": 0.0031845067058084583, "phrase": "formal_model"}, {"score": 0.002982307044758515, "phrase": "cooperating_participants"}, {"score": 0.0028933521924166287, "phrase": "coordinated_manner"}, {"score": 0.0028498718992429825, "phrase": "coordinated_atomic_actions"}, {"score": 0.002709589081384597, "phrase": "concurrent_systems"}, {"score": 0.0024742098091226203, "phrase": "production_cell"}, {"score": 0.002214048743052355, "phrase": "design_faults"}, {"score": 0.002158836285985314, "phrase": "implicit_assumptions"}, {"score": 0.0021049977753042253, "phrase": "original_specifications"}], "paper_keywords": ["Exception handling", " Coordinated error recovery", " Verification", " B method", " Alloy"], "paper_abstract": "Developers of fault-tolerant distributed systems need to guarantee that fault tolerance mechanisms they build are in themselves reliable. Otherwise, these mechanisms might in the end negatively affect overall system dependability, thus defeating the purpose of introducing fault tolerance into the system. To achieve the desired levels of reliability, mechanisms for detecting and handling errors should be developed rigorously or formally. We present an approach to modeling and verifying fault-tolerant distributed systems that use exception handling as the main fault tolerance mechanism. In the proposed approach, a formal model is employed to specify the structure of a system in terms of cooperating participants that handle exceptions in a coordinated manner, and coordinated atomic actions serve as representatives of mechanisms for exception handling in concurrent systems. We validate the approach through two case studies: (i) a system responsible for managing a production cell, and (ii) a medical control system. In both systems, the proposed approach has helped us to uncover design faults in the form of implicit assumptions and omissions in the original specifications. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Improving reliability of cooperative concurrent systems with exception flow analysis", "paper_id": "WOS:000265318300013"}