{"auto_keywords": [{"score": 0.04216792154193272, "phrase": "recursive_prism_programs"}, {"score": 0.00481495049065317, "phrase": "failure-free_prism_programs"}, {"score": 0.004763041748860828, "phrase": "prism"}, {"score": 0.004685855684376706, "phrase": "probabilistic_logic_programming_formalism"}, {"score": 0.00456020621016909, "phrase": "probability_distribution"}, {"score": 0.0045108906244892165, "phrase": "possible_worlds"}, {"score": 0.004295459433506106, "phrase": "generative_prism_programs"}, {"score": 0.0038737214010638745, "phrase": "stochastic_processes"}, {"score": 0.0037697665240643066, "phrase": "dynamic_bayesian_networks"}, {"score": 0.0036886073959526396, "phrase": "halting_distribution"}, {"score": 0.0036288825833675127, "phrase": "generative_process"}, {"score": 0.003589602322126282, "phrase": "dynamic_bayesian"}, {"score": 0.003531474887552889, "phrase": "infinite_stochastic_processes"}, {"score": 0.0034554281349858836, "phrase": "infinite_process"}, {"score": 0.0030487828775502563, "phrase": "fixed_length"}, {"score": 0.0026898636962522505, "phrase": "halting_conditions"}, {"score": 0.002575167114383286, "phrase": "different_lengths"}, {"score": 0.0023730978395564116, "phrase": "inductive_logic_programming"}, {"score": 0.0023346234464901978, "phrase": "bayesian_networks"}, {"score": 0.0022967713922705, "phrase": "prism_programs"}, {"score": 0.0022228943786652914, "phrase": "inductive_logic_programming_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Probabilistic inductive logic programming", " Probabilistic logic", " PRISM", " Structure learning"], "paper_abstract": "PRISM is a probabilistic logic programming formalism which allows defining a probability distribution over possible worlds. This paper investigates learning a class of generative PRISM programs known as failure-free. The aim is to learn recursive PRISM programs which can be used to model stochastic processes. These programs generalise dynamic Bayesian networks by defining a halting distribution over the generative process. Dynamic Bayesian networks model infinite stochastic processes. Sampling from infinite process can only be done by specifying the length of sequences that the process generates. In this case, only observations of a fixed length of sequences can be obtained. On the other hand, the recursive PRISM programs considered in this paper are self-terminating upon some halting conditions. Thus, they generate observations of different lengths of sequences. The direction taken by this paper is to combine ideas from inductive logic programming and learning Bayesian networks to learn PRISM programs. It builds upon the inductive logic programming approach of learning from entailment. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Learning failure-free PRISM programs", "paper_id": "WOS:000364725300005"}