{"auto_keywords": [{"score": 0.049146612112995924, "phrase": "scalalab"}, {"score": 0.00481495049065317, "phrase": "java_scientific_libraries"}, {"score": 0.004363846362238565, "phrase": "robust_and_effective_scientific_libraries"}, {"score": 0.004278925020554506, "phrase": "java"}, {"score": 0.003954837422946628, "phrase": "pure_java"}, {"score": 0.0036194914688460656, "phrase": "average_scientist"}, {"score": 0.0034118234596993836, "phrase": "software_development"}, {"score": 0.0031532895341013297, "phrase": "easier_and_productive_matlab"}, {"score": 0.002914288956035066, "phrase": "main_strengths"}, {"score": 0.0027741761880779535, "phrase": "core_java_libraries"}, {"score": 0.0025137856138000014, "phrase": "paramount_importance"}, {"score": 0.002464709648714996, "phrase": "scientific_computation"}, {"score": 0.002346160830406661, "phrase": "extensively_performance_aspects"}, {"score": 0.0022777800735119405, "phrase": "scalalab_environment"}, {"score": 0.0021896891011033105, "phrase": "java_bytecode_performance"}, {"score": 0.0021049977753042253, "phrase": "native_code"}], "paper_keywords": ["Java", " Scala", " functional programming", " scripting", " interpreters", " MATLAB", " scientific programming"], "paper_abstract": "Although there are a lot of robust and effective scientific libraries in Java, the utilization of these libraries in pure Java is difficult and cumbersome, especially for the average scientist that does not expertise in software development. We illustrate that ScalaLab presents an easier and productive MATLAB like front end. Also, the main strengths and weaknesses of the core Java libraries of ScalaLab are elaborated. Since performance is of paramount importance for scientific computation, the article discusses extensively performance aspects of the ScalaLab environment. Also, Java bytecode performance is compared to native code.", "paper_title": "MATLAB-like scripting of Java scientific libraries in ScalaLab", "paper_id": "WOS:000338983100001"}