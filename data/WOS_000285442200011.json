{"auto_keywords": [{"score": 0.02696590170595567, "phrase": "bfs"}, {"score": 0.00481495049065317, "phrase": "matchmaking_applications"}, {"score": 0.004569293780076254, "phrase": "skyline-based_matchmaking_framework"}, {"score": 0.004336115760817672, "phrase": "matchmaking_procedure"}, {"score": 0.004211731831120046, "phrase": "users'_specifications"}, {"score": 0.004114787982556699, "phrase": "matchmaking_procedures"}, {"score": 0.003837089839193524, "phrase": "specific_computing_demand"}, {"score": 0.0036411406244705557, "phrase": "better_candidates"}, {"score": 0.00357806560856829, "phrase": "identified_items"}, {"score": 0.0032978134802348433, "phrase": "best-possible_items"}, {"score": 0.0031111332159761344, "phrase": "skyline_computation"}, {"score": 0.003039445153076014, "phrase": "efficient_skyline_algorithm"}, {"score": 0.0029867619862229853, "phrase": "interesting_item_candidates"}, {"score": 0.002884111441153185, "phrase": "efficient_sequential_skyline_algorithm"}, {"score": 0.0022708315711029423, "phrase": "speedup_factor"}, {"score": 0.002231441081806766, "phrase": "parallelized_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Skyline computation", " R-tree", " Lattice", " Breadth-first search"], "paper_abstract": "In this article, we present a skyline-based matchmaking framework. The current method of carrying out the matchmaking procedure identifies items based on users' specifications. We rethink matchmaking procedures in such a way that they can find items that can satisfy a specific computing demand from a user and recommend a collection of better candidates among the identified items. This endows a user with the right of choice on deciding the best-possible items. We approach the recommendation from the perspective of skyline computation and present an efficient skyline algorithm that gathers interesting item candidates efficiently. To devise an efficient sequential skyline algorithm, we adopt (i) lattice-based indexing using a lattice composition technique and (ii) an optimized dominance-check algorithm. Moreover, we parallelize the algorithm using breadth-first-search (BFS). Our extensive experimental results show that our algorithm outperforms current state-of-the-art algorithms, and the speedup factor of the parallelized algorithm is near-linear. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "An efficient skyline framework for matchmaking applications", "paper_id": "WOS:000285442200011"}