{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "framework-based_web_applications"}, {"score": 0.004579147045265106, "phrase": "effective_taint_analysis"}, {"score": 0.004374772264092067, "phrase": "useful_abstractions"}, {"score": 0.004335000368745273, "phrase": "common_functionality"}, {"score": 0.004256533389293113, "phrase": "extensive_use"}, {"score": 0.0042178318724732005, "phrase": "reflective_language_constructs"}, {"score": 0.004179480763003705, "phrase": "framework_implementations"}, {"score": 0.004141476915000558, "phrase": "existing_static_taint_analyses"}, {"score": 0.0040111533608228195, "phrase": "framework-based_applications"}, {"score": 0.003956558420993431, "phrase": "previous_work"}, {"score": 0.0039027036493682887, "phrase": "ad_hoc_support"}, {"score": 0.0037626342268042997, "phrase": "large_number"}, {"score": 0.0035781807623238905, "phrase": "engineering_standpoint"}, {"score": 0.00349734405943853, "phrase": "initial_analysis_pass"}, {"score": 0.003433987036569199, "phrase": "application_code_and_configuration_files"}, {"score": 0.003310684108128973, "phrase": "framework-related_behaviors"}, {"score": 0.003265591844292821, "phrase": "taint_analysis_engine"}, {"score": 0.002993887707344862, "phrase": "simple_but_powerful_constructs"}, {"score": 0.002953097497434808, "phrase": "analysis_engine_integration"}, {"score": 0.0028731719610706214, "phrase": "new_frameworks"}, {"score": 0.0027573101010593863, "phrase": "core_analysis_engine"}, {"score": 0.0027197343489967322, "phrase": "significant_engineering_benefits"}, {"score": 0.0026704265616705023, "phrase": "specification_generators"}, {"score": 0.0025744696954056404, "phrase": "state-of-the-art_taint-analysis_engine"}, {"score": 0.0023927516438886445, "phrase": "nine_benchmarks"}, {"score": 0.002244277924422011, "phrase": "manual_inspection"}, {"score": 0.0021834945657804193, "phrase": "new_issues"}, {"score": 0.0021049977753042253, "phrase": "bad_security_practice"}], "paper_keywords": ["Languages", " Security"], "paper_abstract": "This paper presents F4F (Framework For Frameworks), a system for effective taint analysis of framework-based web applications. Most modern web applications utilize one or more web frameworks, which provide useful abstractions for common functionality. Due to extensive use of reflective language constructs in framework implementations, existing static taint analyses are often ineffective when applied to framework-based applications. While previous work has included ad hoc support for certain framework constructs, adding support for a large number of frameworks in this manner does not scale from an engineering standpoint. F4F employs an initial analysis pass in which both application code and configuration files are processed to generate a specification of framework-related behaviors. A taint analysis engine can leverage these specifications to perform a much deeper, more precise analysis of framework-based applications. Our specification language has only a small number of simple but powerful constructs, easing analysis engine integration. With this architecture, new frameworks can be handled with no changes to the core analysis engine, yielding significant engineering benefits. We implemented specification generators for several web frameworks and added F4F support to a state-of-the-art taint-analysis engine. In an experimental evaluation, the taint analysis enhanced with F4F discovered 525 new issues across nine benchmarks, a harmonic mean of 2.10X more issues per benchmark. Furthermore, manual inspection of a subset of the new issues showed that many were exploitable or reflected bad security practice.", "paper_title": "F4F: Taint Analysis of Framework-based Web Applications", "paper_id": "WOS:000298294500061"}