{"auto_keywords": [{"score": 0.050075235938519876, "phrase": "neville_elimination"}, {"score": 0.04454153022265076, "phrase": "mpi"}, {"score": 0.04324879737107283, "phrase": "cuda."}, {"score": 0.004529093447865156, "phrase": "many-core_systems"}, {"score": 0.0032836104153151973, "phrase": "linear_equations"}, {"score": 0.0030414140732789186, "phrase": "matrix_column"}, {"score": 0.002731971103291716, "phrase": "adequate_multiple"}, {"score": 0.002453934333239467, "phrase": "parallel_algorithms"}, {"score": 0.0022382002476510573, "phrase": "different_multi-"}, {"score": 0.0021705796895687864, "phrase": "many-core_platforms"}, {"score": 0.0021049977753042253, "phrase": "parallel_programming_techniques"}], "paper_keywords": ["Neville", " Multi-core", " Many-core", " OpenMP", " MPI", " GPU", " CUDA", " CUBLAS"], "paper_abstract": "This paper describes several parallel algorithmic variations of the Neville elimination. This elimination solves a system of linear equations making zeros in a matrix column by adding to each row an adequate multiple of the preceding one. The parallel algorithms are run and compared on different multi- and many-core platforms using parallel programming techniques as MPI, OpenMP and CUDA.", "paper_title": "Neville elimination on multi- and many-core systems: OpenMP, MPI and CUDA", "paper_id": "WOS:000296012700010"}