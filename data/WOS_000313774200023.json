{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "massive_data"}, {"score": 0.03499035846647598, "phrase": "tjje"}, {"score": 0.013967501136462284, "phrase": "pbrj"}, {"score": 0.009648718328485595, "phrase": "top-k_join_results"}, {"score": 0.0047013405841819025, "phrase": "top-k_join"}, {"score": 0.004634459424542272, "phrase": "important_operation"}, {"score": 0.004397230847865867, "phrase": "potentially_huge_answer_space"}, {"score": 0.004212157020917929, "phrase": "algorithm_template"}, {"score": 0.003791763445590174, "phrase": "large_quantity"}, {"score": 0.0037556843869894566, "phrase": "candidate_tuples"}, {"score": 0.003529364798514874, "phrase": "novel_top-k_join_algorithm"}, {"score": 0.003348513474852869, "phrase": "pre-computed_information"}, {"score": 0.0031921317979928406, "phrase": "scan_depth"}, {"score": 0.0031466527290980686, "phrase": "joined_table"}, {"score": 0.0029853535424953595, "phrase": "positional_index_pairs"}, {"score": 0.0028053237950173508, "phrase": "required_join"}, {"score": 0.002752139271586703, "phrase": "single_sequential_and_selective_scan"}, {"score": 0.0025737890313763407, "phrase": "single_scan"}, {"score": 0.002537097217899195, "phrase": "retrieved_join_tuples"}, {"score": 0.002500927169609655, "phrase": "correctness_proof"}, {"score": 0.0024771000236931836, "phrase": "cost_analysis"}, {"score": 0.002372649454733251, "phrase": "extensive_experiments"}, {"score": 0.002187194307878705, "phrase": "magnitude_speedup"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Massive data", " Top-k join", " TJJE", " Scan depth", " Database"], "paper_abstract": "In many applications, top-k join is an important operation to return the k most important join tuples among the potentially huge answer space according to a given ranking function. PBRJ is an algorithm template that generalizes previous top-k join algorithms. In this paper, our analysis shows that PBRJ needs to maintain a large quantity of candidate tuples on massive data. Based on the analysis, this paper proposes a novel top-k join algorithm TJJE which is suitable for handling massive data. By some pre-computed information, TJJE first estimates an upper-bound on scan depth of each joined table. Then it determines the file that contains the join positional index pairs of the top-k join results. A novel algorithm is proposed to retrieve the required join tuples by a single sequential and selective scan on the joined tables. Finally, the top-k join results are obtained by a single scan on the retrieved join tuples. The correctness proof and cost analysis of TJJE are presented in this paper. Extensive experiments show that TJJE maintains up to three orders of magnitude fewer candidate tuples and obtains up to one order of magnitude speedup compared to PBRJ. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "TJJE: An efficient algorithm for top-k join on massive data", "paper_id": "WOS:000313774200023"}