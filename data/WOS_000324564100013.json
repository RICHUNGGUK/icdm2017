{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "system-level_indicators"}, {"score": 0.03735216566870487, "phrase": "expert_judgment"}, {"score": 0.03195141472990055, "phrase": "different_evaluation_approaches"}, {"score": 0.004714023408114857, "phrase": "empirical_study"}, {"score": 0.004576253356889219, "phrase": "design_flaws"}, {"score": 0.004499334809770281, "phrase": "code_maintainability"}, {"score": 0.004204320052179726, "phrase": "system-level_maintainability_evaluations"}, {"score": 0.003639835714755229, "phrase": "previous_evaluations"}, {"score": 0.0035035002548776217, "phrase": "chidamber"}, {"score": 0.003473900699736985, "phrase": "kemerer"}, {"score": 0.0028216858159564808, "phrase": "good_indicators"}, {"score": 0.0024114635128122783, "phrase": "system's_size"}, {"score": 0.0023408288327263316, "phrase": "different_maintenance_scenarios"}, {"score": 0.0023013968622710847, "phrase": "code_smell_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Code smells", " Maintainability", " Empirical study", " System evaluation"], "paper_abstract": "Context: Code smells are manifestations of design flaws that can degrade code maintainability. So far, no research has investigated if these indicators are useful for conducting system-level maintainability evaluations. Aim: The research in this paper investigates the potential of code smells to reflect system-level indicators of maintainability. Method: We evaluated four medium-sized Java systems using code smells and compared the results against previous evaluations on the same systems based on expert judgment and the Chidamber and Kemerer suite of metrics. The systems were maintained over a period of up to 4 weeks. During maintenance, effort (person-hours) and number of defects were measured to validate the different evaluation approaches. Results: Most code smells are strongly influenced by size; consequently code smells are not good indicators for comparing the maintainability of systems differing greatly in size. Also, from the comparison of the different evaluation approaches, expert judgment was found as the most accurate and flexible since it considered effects due to the system's size and complexity and could adapt to different maintenance scenarios. Conclusion: Code smell approaches show promise as indicators of the need for maintenance in a way that other purely metric-based approaches lack. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Code smells as system-level indicators of maintainability: An empirical study", "paper_id": "WOS:000324564100013"}