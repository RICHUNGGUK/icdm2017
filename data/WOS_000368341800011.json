{"auto_keywords": [{"score": 0.028448572782996114, "phrase": "new_dynamic_memory_allocator"}, {"score": 0.00481495049065317, "phrase": "register_efficient_dynamic_memory_allocator"}, {"score": 0.004494570360108983, "phrase": "five_existing_dynamic_memory_allocators"}, {"score": 0.003296212583539166, "phrase": "real_workload"}, {"score": 0.0031845067058084583, "phrase": "dynamic_memory_allocation"}, {"score": 0.0029722900280316216, "phrase": "k-d_tree_data_structure"}, {"score": 0.0023889533502525527, "phrase": "existing_dynamic_memory_allocators"}, {"score": 0.0021049977753042253, "phrase": "large_and_variably_sized_memory_allocations"}], "paper_keywords": ["dynamic memory allocation", " many-core architecture", " GPU", " CUDA"], "paper_abstract": "We compare five existing dynamic memory allocators optimized for GPUs and show their strengths and weaknesses. In the measurements, we use three generic evaluation tests proposed in the past and we add one with a real workload, where dynamic memory allocation is used in building the k-d tree data structure. Following the performance analysis we propose a new dynamic memory allocator and its variants that address the limitations of the existing dynamic memory allocators. The new dynamic memory allocator uses few resources and is targeted towards large and variably sized memory allocations on massively parallel hardware architectures.", "paper_title": "Register Efficient Dynamic Memory Allocator for GPUs", "paper_id": "WOS:000368341800011"}