{"auto_keywords": [{"score": 0.04300020831754568, "phrase": "design_space"}, {"score": 0.04103499152779522, "phrase": "proposed_hardware"}, {"score": 0.00481495049065317, "phrase": "locally_linear_neuro-fuzzy_models"}, {"score": 0.0046683172874085015, "phrase": "artificial_neural_networks"}, {"score": 0.004627244470096107, "phrase": "neuro-fuzzy_systems"}, {"score": 0.004526129302830441, "phrase": "embedded_systems"}, {"score": 0.004466519142879166, "phrase": "often-used_solution"}, {"score": 0.004388252997694986, "phrase": "nonlinear_system_identification"}, {"score": 0.0042171108629745655, "phrase": "parametric_neuro-fuzzy_hardware"}, {"score": 0.004052616113326177, "phrase": "efficient_hardware_realization"}, {"score": 0.004016938499717623, "phrase": "neuro-fuzzy_models"}, {"score": 0.0038093479435377764, "phrase": "stand-alone_core"}, {"score": 0.003709595902020469, "phrase": "central_processing_unit"}, {"score": 0.003628460216207393, "phrase": "online_training"}, {"score": 0.00344087639309216, "phrase": "optimal_design_parameters"}, {"score": 0.003306559295382181, "phrase": "efficient_neuro-fuzzy_hardware"}, {"score": 0.0032199307816384577, "phrase": "power_consumption"}, {"score": 0.0030399188412691914, "phrase": "whole_design_space"}, {"score": 0.00299993679394453, "phrase": "pareto"}, {"score": 0.002934166052954463, "phrase": "time-to-market_and_non-recurring_engineering_cost"}, {"score": 0.0026501241093379786, "phrase": "soft_core_embedded_processor"}, {"score": 0.0026267609106294817, "phrase": "nios"}, {"score": 0.0025241429061867633, "phrase": "selected_core"}, {"score": 0.002436289099444074, "phrase": "nios_ii"}, {"score": 0.002341094670523097, "phrase": "proposed_framework"}, {"score": 0.0021809311689473493, "phrase": "pareto_optimal_points"}, {"score": 0.002161695357601592, "phrase": "different_application_demands"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Locally linear neuro fuzzy models", " High-level design exploration", " Neuro-fuzzy embedded system design", " Pareto efficient neuro-fuzzy implementation", " General neuro-fuzzy function approximators"], "paper_abstract": "Recently, artificial neural networks and neuro-fuzzy systems are being introduced in embedded systems due to often-used solution for classification and nonlinear system identification. In this paper, we present a parametric neuro-fuzzy hardware and a framework for exploring design space for an efficient hardware realization of neuro-fuzzy models for embedded systems. The proposed hardware can be used as a stand-alone core or be coupled with a central processing unit for the purpose of online training. We also present a framework to explore the design space for optimal design parameters (hardware core parameters) so that an efficient neuro-fuzzy hardware in terms of area, power consumption, and performance (delay) can be selected. It examines whole design space to find Pareto efficient hardware without increasing time-to-market and non-recurring engineering cost with the aid of high-level design space exploration. Also, the performance of the proposed hardware is compared against a soft core embedded processor named NIOS II/s. The results obtained show that the selected core is able to perform actions faster than NIOS II while it dissipates less power. Moreover, the proposed framework is put into action through three different scenarios to show off the capabilities of framework for generating Pareto optimal points upon different application demands. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "High-level design space exploration of locally linear neuro-fuzzy models for embedded systems", "paper_id": "WOS:000341480700003"}