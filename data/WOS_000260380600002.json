{"auto_keywords": [{"score": 0.03856348556738522, "phrase": "parallel_file_system"}, {"score": 0.00481495049065317, "phrase": "parallel_files"}, {"score": 0.004718897469501381, "phrase": "data_distribution"}, {"score": 0.0043533862892678864, "phrase": "important_factor"}, {"score": 0.004139401327448807, "phrase": "parallel_applications"}, {"score": 0.0031208772639433145, "phrase": "previous_approaches"}, {"score": 0.0030278017562213265, "phrase": "redistribution_problem"}, {"score": 0.002709589081384597, "phrase": "data_set"}, {"score": 0.002524688179363081, "phrase": "multidimensional_array_partitions"}, {"score": 0.0023762535034673017, "phrase": "present_potential_utilizations"}, {"score": 0.002214048743052355, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "mapping_functions"}], "paper_keywords": ["Parallel file systems", " Parallel I/O", " Noncontiguous I/O", " Multi-dimensional array redistribution", " Mapping functions"], "paper_abstract": "Data distribution in memory or on disks is an important factor influencing the performance of parallel applications. On the other hand, programs or systems, like a parallel file system, frequently redistribute data between memory and disks. This paper presents a generalization of previous approaches of the redistribution problem. We introduce algorithms for mapping between two arbitrary distributions of a data set. The algorithms are optimized for multidimensional array partitions. We motivate our approach and present potential utilizations. The paper also presents a case study, the employment of mapping functions, and redistribution algorithms in a parallel file system.", "paper_title": "Mapping functions and data redistribution for parallel files", "paper_id": "WOS:000260380600002"}