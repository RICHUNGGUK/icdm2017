{"auto_keywords": [{"score": 0.03724168699446044, "phrase": "new_tasks"}, {"score": 0.03617608283818677, "phrase": "second_component"}, {"score": 0.00481495049065317, "phrase": "high_performance"}, {"score": 0.004736820055728928, "phrase": "real-time_dynamic_load_management"}, {"score": 0.0047110579937340675, "phrase": "modern_cyber-physical_systems"}, {"score": 0.004672676139571354, "phrase": "complex_and_dynamic_interaction"}, {"score": 0.004634605533299669, "phrase": "real_world"}, {"score": 0.0045968436745655004, "phrase": "computing_system"}, {"score": 0.004460985154171165, "phrase": "physical_environment_trigger_changes"}, {"score": 0.004424631631964781, "phrase": "computational_load"}, {"score": 0.004329124434198367, "phrase": "task_migration_services"}, {"score": 0.004293840838533456, "phrase": "networked_control_systems"}, {"score": 0.004270477662507625, "phrase": "also_management"}, {"score": 0.0042472410653913335, "phrase": "dynamic_real-time_computing_load"}, {"score": 0.0038603905208013482, "phrase": "new_flexible_architectures"}, {"score": 0.003828912548622257, "phrase": "computing_systems"}, {"score": 0.0037873393111621067, "phrase": "potential_changes"}, {"score": 0.0036453427552753533, "phrase": "first_one"}, {"score": 0.00347054319869429, "phrase": "management_component"}, {"score": 0.003304097742490624, "phrase": "feasibility_analysis"}, {"score": 0.003180161250635426, "phrase": "new_processor_speed"}, {"score": 0.0031284745499175507, "phrase": "third_component"}, {"score": 0.003060859331898502, "phrase": "fixed_priority_scheduling_policy"}, {"score": 0.002970260970134645, "phrase": "paper_focus"}, {"score": 0.002605201547405916, "phrase": "predictable_computational_cost"}, {"score": 0.002569848530761848, "phrase": "task_admission"}, {"score": 0.002541910967437926, "phrase": "processor_frequency_scaling"}, {"score": 0.002480154140902474, "phrase": "novel_algorithm"}, {"score": 0.002466634951303726, "phrase": "analyse_tasks_admission"}, {"score": 0.0024531892728646004, "phrase": "processor_frequency_assignment"}, {"score": 0.0023870497011682676, "phrase": "comparative_performance"}, {"score": 0.002367556929326405, "phrase": "proposed_approach"}, {"score": 0.0023100262993452853, "phrase": "energy_consumption"}, {"score": 0.002297432331811429, "phrase": "task_rejection_ratios"}, {"score": 0.0022786697084960224, "phrase": "real_computing_costs"}, {"score": 0.00219311232069446, "phrase": "task_acceptance"}, {"score": 0.002157433262687853, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Dynamic voltage scaling", " Task migration", " Real-time scheduling", " Power consumption", " Feasibility analysis"], "paper_abstract": "Modern cyber-physical systems assume a complex and dynamic interaction between the real world and the computing system in real-time. In this context, changes in the physical environment trigger changes in the computational load to execute. On the other hand, task migration services offered by networked control systems require also management of dynamic real-time computing load in nodes. In such systems it would be difficult, if not impossible, to analyse off-line all the possible combinations of processor loads. For this reason, it is worthwhile attempting to define new flexible architectures that enable computing systems to adapt to potential changes in the environment. We assume a system composed by three main components: the first one is responsible of the management of the requests arisen when new tasks require to be executed. This management component asks to the second component about the resources available to accept the new tasks. The second component performs a feasibility analysis to determine if the new tasks can be accepted coping with its real-time constraints. A new processor speed is also computed. A third component monitors the execution of tasks applying a fixed priority scheduling policy and additionally controlling the frequency of the processor. This paper focus on the second component providing a \"correct\" (a task never is accepted if it is not schedulable) and \"near-exact\" (a task is rarely rejected if it is schedulable) algorithm that can be applicable in practice because its low/medium and predictable computational cost. The algorithm analyses task admission in terms of processor frequency scaling. The paper presents the details of a novel algorithm to analyse tasks admission and processor frequency assignment. Additionally, we perform several simulations to evaluate the comparative performance of the proposed approach. This evaluation is made in terms of energy consumption, task rejection ratios, and real computing costs. The results of simulations show that from the cost, execution predictability, and task acceptance points of view, the proposed algorithm mostly outperforms other constant voltage scaling algorithms. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "High performance dynamic voltage/frequency scaling algorithm for real-time dynamic load management", "paper_id": "WOS:000301630700011"}