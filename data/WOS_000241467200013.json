{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "database_caching"}, {"score": 0.004513957235071457, "phrase": "declarative_query_processing"}, {"score": 0.0040708542958968605, "phrase": "full-fledged_dbms"}, {"score": 0.003577414339646767, "phrase": "specific_project-select-join_queries"}, {"score": 0.0031032109441552287, "phrase": "significant_improvements"}, {"score": 0.0027982016314450717, "phrase": "well-known_dbcache_approach"}, {"score": 0.0023650305205893353, "phrase": "adaptive_constraint-based_cache_system"}, {"score": 0.0021883400011393564, "phrase": "middleware_components"}, {"score": 0.0021049977753042253, "phrase": "dbms-independent_realization"}], "paper_keywords": [""], "paper_abstract": "Database caching supports declarative query processing close to the application. Using a full-fledged DBMS as cache manager, it enables the evaluation of specific project-select-join queries in the cache. In this paper, we propose significant improvements and optimizations-as compared to the well-known DBCache approach-that make our caching concept truly adaptive. Furthermore, we describe an adaptive constraint-based cache system (ACCache) relying on middleware components as a DBMS-independent realization of this approach.", "paper_title": "A middleware-based approach to database caching", "paper_id": "WOS:000241467200013"}