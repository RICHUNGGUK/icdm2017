{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asynchronous_circuits"}, {"score": 0.004278807087784626, "phrase": "reachability_analysis"}, {"score": 0.004195418010131832, "phrase": "circuits'_states"}, {"score": 0.004033464035028803, "phrase": "binary_decision_diagrams"}, {"score": 0.003703611021999795, "phrase": "alternative_approach"}, {"score": 0.003607630811220324, "phrase": "structural_properties"}, {"score": 0.0035605741849764187, "phrase": "well-formed_asynchronous_circuits"}, {"score": 0.003334309053314909, "phrase": "data-driven_asynchronous_pipelines"}, {"score": 0.003021502415143067, "phrase": "basic_components"}, {"score": 0.002962543869356265, "phrase": "handshake_channels"}, {"score": 0.00290473242917264, "phrase": "sufficient_and_necessary_conditions"}, {"score": 0.0028480459059007468, "phrase": "component_network"}, {"score": 0.0026148807877309417, "phrase": "slack_elasticity"}, {"score": 0.0023384629381463054, "phrase": "deadlock_checking_method"}, {"score": 0.0022628564592874147, "phrase": "syntax-directed_asynchronous_design_tool_-_teak"}, {"score": 0.0021610874773389096, "phrase": "great_runtime_advantage"}, {"score": 0.0021049977753042253, "phrase": "previous_petri_net_based_verification_tools"}], "paper_keywords": ["asynchronous pipeline", " data-driven", " deadlock", " verification"], "paper_abstract": "It is important to verify the absence of deadlocks in asynchronous circuits. Much previous work relies on a reachability analysis of the circuits' states, with the use of binary decision diagrams (BDDs) or Petri nets to model the behaviors of circuits. This paper presents an alternative approach focusing on the structural properties of well-formed asynchronous circuits that will never suffer deadlocks. A class of data-driven asynchronous pipelines is targeted in this paper, which can be viewed as a network of basic components connected by handshake channels. The sufficient and necessary conditions for a component network consisting of Steer, Merge, Fork and Join are given. The slack elasticity of the channels is analyzed in order to introduce pipelining. As an application, a deadlock checking method is implemented in a syntax-directed asynchronous design tool - Teak. The proposed method shows a great runtime advantage when compared against previous Petri net based verification tools.", "paper_title": "Structure-Based Deadlock Checking of Asynchronous Circuits", "paper_id": "WOS:000297416700011"}