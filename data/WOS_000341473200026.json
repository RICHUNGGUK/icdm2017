{"auto_keywords": [{"score": 0.04137808138172336, "phrase": "different_colors"}, {"score": 0.014633415689979475, "phrase": "gcp"}, {"score": 0.011314859019333474, "phrase": "explicit_constraints"}, {"score": 0.01015756154145515, "phrase": "implicit_constraints"}, {"score": 0.00481495049065317, "phrase": "graph_coloring_problem"}, {"score": 0.004700193486903964, "phrase": "undirected_graph"}, {"score": 0.00306189690236109, "phrase": "non-adjacent_vertices"}, {"score": 0.002830617996609902, "phrase": "exact_algorithm"}, {"score": 0.002664637473997972, "phrase": "propositional_logic"}, {"score": 0.0024336917123957387, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Backtracking", " Clause learning", " Graph Coloring", " SAT"], "paper_abstract": "Given an undirected graph G=(V,E), the Graph Coloring Problem (GCP) consists in assigning a color to each vertex of the graph G in such a way that any two adjacent vertices are assigned different colors, and the number of different colors used is minimized. State-of-the-art algorithms generally deal with the explicit constraints in GCP: any two adjacent vertices should be assigned different colors, but do not specially deal with the implicit constraints between non-adjacent vertices implied by the explicit constraints. In this paper, we propose an exact algorithm with learning for GCP which exploits the implicit constraints using propositional logic. Our algorithm is compared with several exact algorithms among the best in the literature. The experimental results show that our algorithm outperforms other algorithms on many instances. Specifically, our algorithm allows to close the open DIMACS instance 4-Fullins_5. (C) 2014 Published by Elsevier Ltd.", "paper_title": "An exact algorithm with learning for the graph coloring problem", "paper_id": "WOS:000341473200026"}