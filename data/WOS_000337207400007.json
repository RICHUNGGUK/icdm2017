{"auto_keywords": [{"score": 0.039215645362072615, "phrase": "task_migration"}, {"score": 0.03232166037371497, "phrase": "ba"}, {"score": 0.008982172070764892, "phrase": "ga"}, {"score": 0.00481495049065317, "phrase": "based_task_migration"}, {"score": 0.004611959213131437, "phrase": "ic_technology"}, {"score": 0.004580471902955758, "phrase": "network"}, {"score": 0.004365881789903319, "phrase": "future_massive_parallel_systems"}, {"score": 0.004264463695140275, "phrase": "overall_communication_performance"}, {"score": 0.004231184521419765, "phrase": "nocs"}, {"score": 0.004181743040532619, "phrase": "changing_phases"}, {"score": 0.0041167185402778425, "phrase": "static_task_mapping"}, {"score": 0.003958529104387973, "phrase": "communication_behavior"}, {"score": 0.0033444934455768597, "phrase": "different_ways"}, {"score": 0.0030800962618484844, "phrase": "benefit_assess"}, {"score": 0.0029040994533437903, "phrase": "unnecessary_and_costly_migrations"}, {"score": 0.002847691227421257, "phrase": "real_applications"}, {"score": 0.002825435048559866, "phrase": "parsec_benchmark_suites"}, {"score": 0.002501835053002899, "phrase": "average_latency"}, {"score": 0.002386867689353389, "phrase": "se"}, {"score": 0.002312960805824996, "phrase": "significant_performance_degradation"}, {"score": 0.002250272652754455, "phrase": "node_lock_mechanism"}, {"score": 0.0021551702945512494, "phrase": "almost_the_same_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Network-on-chip", " Task migration", " Mapping"], "paper_abstract": "The development of IC technology makes Network-on-Chip (NoC) an attractive architecture for future massive parallel systems. Task migration optimize the overall communication performance of NoCs since the changing phases of execution make static task mapping insufficient. It is well-known that the communication behavior of many applications are predictable, which makes it feasible to use prediction to guide task migration. The triggering of activating a task migration is also important. In this paper, we first defined and analyzed predictabilities of applications, and then compared different ways of triggering for migration. We then modified the Genetic Algorithm (GA) based task remapping and proposed two other task migration algorithms: Simple Exchange (SE) and Benefit Assess (BA). A mechanism called node lock is also used to reduce unnecessary and costly migrations. Simulation results on real applications from PARSEC benchmark suites show that the SE, BA and GA algorithms can reduce 21.4%, 34.0% and 34.9% of number of hops, and 17.3%, 27.2% and 26.3% in terms of average latency respectively, compared with the system without task migration; BA and SE reduce 72.0% and 78.7% of migrations without significant performance degradation compared with GA, and the node lock mechanism can further remove 37.3% and 46.0% of migrations while achieving almost the same performance. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Packet triggered prediction based task migration for network-on-chip", "paper_id": "WOS:000337207400007"}