{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "parallel_performance_analysis_tools"}, {"score": 0.036681609688759415, "phrase": "synthetic_test_functions"}, {"score": 0.004242546312843817, "phrase": "run-time_behavior"}, {"score": 0.0039674831861175935, "phrase": "correct_performance_data"}, {"score": 0.003696390664266446, "phrase": "relevant_performance_problems"}, {"score": 0.0034566143156030426, "phrase": "controllable_performance_properties"}, {"score": 0.003392804886610623, "phrase": "real-world_applications"}, {"score": 0.003367611042980526, "phrase": "known_performance_behavior"}, {"score": 0.0033301694494391643, "phrase": "systematic_test_suite"}, {"score": 0.0030338645940033875, "phrase": "executable_test_programs"}, {"score": 0.002901124599876666, "phrase": "performance_analysis_tools"}, {"score": 0.0027741761880779535, "phrase": "systematic_effort"}, {"score": 0.0026330549554033876, "phrase": "apart_test_suite"}, {"score": 0.0023368018449680295, "phrase": "simple_and_more_complex_test_programs"}, {"score": 0.002234530518364827, "phrase": "mpi"}, {"score": 0.0022096205841489786, "phrase": "performance_tools"}, {"score": 0.0021687806803474367, "phrase": "test_cases"}, {"score": 0.0021446391766277817, "phrase": "ats._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel performance analysis", " automatic performance analysis", " performance analysis tools", " parallel applications", " parallel programming"], "paper_abstract": "Parallel performance analysis tools must be tested as to whether they perform their task correctly, which comprises at least three aspects. First, it must be ensured that the tools neither alter the semantics nor distort the run-time behavior of the application under investigation. Next, it must be verified that the tools collect the correct performance data as required by their specification. Finally, it must be checked that the tools perform their intended tasks and detect relevant performance problems. Focusing on the latter (correctness) aspect, testing can be done using synthetic test functions with controllable performance properties, possibly complemented by real-world applications with known performance behavior. A systematic test suite can be built from synthetic test functions and other components, possibly with the help of tools to assist the user in putting the pieces together into executable test programs. Clearly, such a test suite can be highly useful to builders of performance analysis tools. It is surprising that, up until now, no systematic effort has been undertaken to provide such a suite. In this paper we describe the APART Test Suite (ATS) for checking the correctness (in the above sense) of parallel performance analysis tools. In particular, we describe a collection of synthetic test functions which allows one to easily construct both simple and more complex test programs with desired performance properties. We briefly report on experience with MPI and OpenMP performance tools when applied to the test cases generated by ATS. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "A test suite for parallel performance analysis tools", "paper_id": "WOS:000248578200003"}