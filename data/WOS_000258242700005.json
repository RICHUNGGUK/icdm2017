{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "client_requests"}, {"score": 0.0046073860169839305, "phrase": "particular_latency_requirement"}, {"score": 0.003757480190200645, "phrase": "global_perspective"}, {"score": 0.0026838147966444783, "phrase": "overall_system_performance"}, {"score": 0.0026107601878587816, "phrase": "selfish_behavior"}, {"score": 0.0025678829712650437, "phrase": "strategic_game"}, {"score": 0.0024842242921857705, "phrase": "pure_nash_equilibria"}, {"score": 0.0023507916951658455, "phrase": "system_performance"}, {"score": 0.0021049977753042253, "phrase": "coordinated_way"}], "paper_keywords": ["scheduling", " Nash equilibria", " approximation and online algorithms", " competitive analysis"], "paper_abstract": "We study a problem of scheduling client requests to servers. Each client has a particular latency requirement at each server and may choose either to be assigned to some server in order to get serviced provided that her latency requirement is met, or not to participate in the assignment at all. From a global perspective, in order to optimize the performance of such a system, one would aim to maximize the number of clients that participate in the assignment. However, clients may behave selfishly in the sense that, each of them simply aims to participate in an assignment and get serviced by some server where her latency requirement is met with no regard to overall system performance. We model this selfish behavior as a strategic game, show how to compute pure Nash equilibria efficiently, and assess the impact of selfishness on system performance. We also show that the problem of optimizing performance is computationally hard to solve, even in a coordinated way, and present efficient approximation and online algorithms. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Scheduling to maximize participation", "paper_id": "WOS:000258242700005"}