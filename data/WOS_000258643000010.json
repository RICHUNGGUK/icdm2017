{"auto_keywords": [{"score": 0.03604449863005414, "phrase": "cybercut"}, {"score": 0.007821055775726955, "phrase": "new_algorithms"}, {"score": 0.00481495049065317, "phrase": "software_engineering"}, {"score": 0.004784565134881178, "phrase": "manufacturing_process_planning"}, {"score": 0.00475437061368627, "phrase": "agile_methods"}, {"score": 0.004724365740062236, "phrase": "software_development"}, {"score": 0.004650175539595746, "phrase": "flexible_architectures"}, {"score": 0.004420472010542188, "phrase": "mechanical_engineering_domain"}, {"score": 0.004149166224411185, "phrase": "large_numbers"}, {"score": 0.0037019348293573675, "phrase": "unified_process"}, {"score": 0.0035978443860856216, "phrase": "research_process_planning_system"}, {"score": 0.003441693005357189, "phrase": "early_versions"}, {"score": 0.003344895435289136, "phrase": "current_and_future_developments"}, {"score": 0.003313236365209158, "phrase": "cybercut_system"}, {"score": 0.003261133560558666, "phrase": "integrated_process_planning_system"}, {"score": 0.0032302647179383915, "phrase": "user_designs"}, {"score": 0.003060763239325022, "phrase": "feature_extraction"}, {"score": 0.0030414140732789186, "phrase": "fixture_planning"}, {"score": 0.003022186855664124, "phrase": "tool_selection"}, {"score": 0.0029935730127943496, "phrase": "tool-path_planning"}, {"score": 0.0029652292779277782, "phrase": "up-driven_approach"}, {"score": 0.0028726685746632654, "phrase": "inception_phase"}, {"score": 0.002845466319548362, "phrase": "clear_but_incomplete_description"}, {"score": 0.002782989122345306, "phrase": "elaboration_phase"}, {"score": 0.0027653910844724237, "phrase": "iterative_design"}, {"score": 0.0027046673104220422, "phrase": "short_cycles"}, {"score": 0.0026621090899556408, "phrase": "substantial_use"}, {"score": 0.0026452734009203764, "phrase": "design_patterns"}, {"score": 0.0026202187680903063, "phrase": "clean_and_well-defined_separation"}, {"score": 0.0025626745650279346, "phrase": "independent_development"}, {"score": 0.002522344964242888, "phrase": "overall_development"}, {"score": 0.0024984517279573906, "phrase": "software_tool"}, {"score": 0.0024669449102126496, "phrase": "five_programmers"}, {"score": 0.002337403139264533, "phrase": "programming_resources"}, {"score": 0.0021797840569206697, "phrase": "engineering_software_development"}, {"score": 0.0021659920594094407, "phrase": "research_goals"}, {"score": 0.0021049977753042253, "phrase": "dramatic_and_frequent_changes"}], "paper_keywords": [""], "paper_abstract": "Agile methods of software development promote the use of flexible architectures that can be rapidly refactored and rebuilt as necessary for the project. In the mechanical engineering domain, software tends to be very complex and requires the integration of several modules that result from the efforts of large numbers of programmers over several years. Such software needs to be extensible, modular, and adaptable so that a variety of algorithms can be quickly tested and deployed. This paper presents an application of the unified process (UP) to the development of a research process planning system called CyberCut. UP is used to (1) analyze and critique early versions of CyberCut and (2) to guide current and future developments of the CyberCut system. CyberCut is an integrated process planning system that converts user designs to instructions for a computer numerical control (CNC) milling machine. The conversion process involves algorithms to perform tasks such as feature extraction, fixture planning, tool selection, and tool-path planning. The UP-driven approach to the development of CyberCut involves two phases. The inception phase outlines a clear but incomplete description of the user needs. The elaboration phase involves iterative design, development, and testing using short cycles. The software makes substantial use of design patterns to promote clean and well-defined separation between and within components to enable independent development and testing. The overall development of the software tool took about two months with five programmers. It was later possible to easily integrate or substitute new algorithms into the system so that programming resources were more productively used to develop new algorithms. The experience with UP shows that methodologies such as UP are important for engineering software development where research goals, technology, algorithms, and implementations show dramatic and frequent changes.", "paper_title": "Applications of software engineering to manufacturing process planning", "paper_id": "WOS:000258643000010"}