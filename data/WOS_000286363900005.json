{"auto_keywords": [{"score": 0.049613254104042076, "phrase": "data-intensive_computing"}, {"score": 0.00481495049065317, "phrase": "computational_accelerators"}, {"score": 0.004721711709176679, "phrase": "multicore_computational_accelerators"}, {"score": 0.004585212379675535, "phrase": "commodity_components"}, {"score": 0.004540591176992658, "phrase": "high-performance_computing"}, {"score": 0.004260906498835763, "phrase": "stand-alone_computational_engines"}, {"score": 0.0041579627441997, "phrase": "large-scale_distributed_systems"}, {"score": 0.0038448988429199086, "phrase": "resource_management_alternatives"}, {"score": 0.0037888687452790953, "phrase": "asymmetric_accelerator-based_distributed_systems"}, {"score": 0.0035902958977673313, "phrase": "capabilities-aware_framework"}, {"score": 0.0034693659976716197, "phrase": "enhanced_implementation"}, {"score": 0.0034187896011435245, "phrase": "mapreduce_programming_model"}, {"score": 0.003385480888810982, "phrase": "accelerator-based_clusters"}, {"score": 0.0031457622320220364, "phrase": "heterogeneous_accelerators"}, {"score": 0.003099888654615187, "phrase": "high_performance"}, {"score": 0.0030696773722514105, "phrase": "low_programming_effort"}, {"score": 0.002951739421935396, "phrase": "heterogeneous_types"}, {"score": 0.002852256089630964, "phrase": "cell_processors"}, {"score": 0.0026762874092443197, "phrase": "compute-efficient_and_control-efficient_accelerators"}, {"score": 0.0024624103660827695, "phrase": "different_compute_nodes"}, {"score": 0.002276717177453959, "phrase": "resource_capabilities"}, {"score": 0.0021678232353129472, "phrase": "static_execution_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Cloud computing", " MapReduce", " Asymmetric multicores", " Programming accelerators", " Data-intensive computing", " Heterogeneous clusters"], "paper_abstract": "Multicore computational accelerators such as GPUs are now commodity components for high-performance computing at scale. While such accelerators have been studied in some detail as stand-alone computational engines, their integration in large-scale distributed systems raises new challenges and trade-offs. In this paper, we present an exploration of resource management alternatives for building asymmetric accelerator-based distributed systems. We present these alternatives in the context of a capabilities-aware framework for data-intensive computing, which uses an enhanced implementation of the MapReduce programming model for accelerator-based clusters, compared to the state of the art. The framework can transparently utilize heterogeneous accelerators for deriving high performance with low programming effort. Our work is the first to compare heterogeneous types of accelerators, GPUs and a Cell processors, in the same environment and the first to explore the trade-offs between compute-efficient and control-efficient accelerators on data-intensive systems. Our investigation shows that our framework scales well with the number of different compute nodes. Furthermore, it runs simultaneously on two different types of accelerators, successfully adapts to the resource capabilities, and performs 26.9% better on average than a static execution approach. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A capabilities-aware framework for using computational accelerators in data-intensive computing", "paper_id": "WOS:000286363900005"}