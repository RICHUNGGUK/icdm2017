{"auto_keywords": [{"score": 0.015719716506582538, "phrase": "graph_grammars"}, {"score": 0.004694700982410345, "phrase": "unbounded_heap_structures"}, {"score": 0.004463096299091981, "phrase": "novel_abstraction_framework"}, {"score": 0.004388450908826472, "phrase": "heap_data_structures"}, {"score": 0.0037701851296383405, "phrase": "dynamic_data_structures"}, {"score": 0.0036759314172445934, "phrase": "intuitive_way"}, {"score": 0.0034944094552943, "phrase": "finite-state_verification_techniques"}, {"score": 0.003407026489727146, "phrase": "pointer-manipulating_programs"}, {"score": 0.0033218213825698417, "phrase": "complex_dynamic_data_structures"}, {"score": 0.0030787405733989615, "phrase": "theoretical_foundations"}, {"score": 0.0029020077365708966, "phrase": "main_focus"}, {"score": 0.0026445028886931837, "phrase": "prototypical_tool"}, {"score": 0.002600194073758015, "phrase": "juggrnaut"}, {"score": 0.002450864311898833, "phrase": "experimental_verification_results"}, {"score": 0.0021773853011112882, "phrase": "binary_trees"}, {"score": 0.0021049977753042253, "phrase": "deutsch-schorr-waite"}], "paper_keywords": ["Heap abstraction", " Dynamic data structures", " Hyperedge replacement grammars", " Software verification", " Pointer-manipulating programs"], "paper_abstract": "This paper presents a novel abstraction framework for heap data structures. It employs graph grammars, more precisely context-free hyperedge replacement grammars. We will show that this is a very natural formalism for modelling dynamic data structures in an intuitive way. Our approach aims at extending finite-state verification techniques to handle pointer-manipulating programs operating on complex dynamic data structures that are potentially unbounded in their size. The theoretical foundations of our approach and its correctness are the main focus of this paper. In addition, we present a prototypical tool entitled Juggrnaut that realizes our approach and show encouraging experimental verification results for three case studies: a doubly-linked list reversal, the flattening of binary trees, and the Deutsch-Schorr-Waite tree traversal algorithm.", "paper_title": "Juggrnaut: using graph grammars for abstracting unbounded heap structures", "paper_id": "WOS:000361752300001"}