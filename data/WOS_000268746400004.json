{"auto_keywords": [{"score": 0.04342542707462748, "phrase": "nearest_prototype"}, {"score": 0.035976661192180306, "phrase": "mpso_algorithm"}, {"score": 0.004814955496593627, "phrase": "michigan"}, {"score": 0.004692980391580608, "phrase": "prototype_reduction"}, {"score": 0.004645057834614705, "phrase": "classification_problems"}, {"score": 0.004504193207111593, "phrase": "new_approach"}, {"score": 0.004458189822972851, "phrase": "particle_swarm_optimization"}, {"score": 0.004390060342250211, "phrase": "michigan_approach_pso"}, {"score": 0.00421340730888561, "phrase": "continuous_classification_problems"}, {"score": 0.0041074485476774265, "phrase": "np"}, {"score": 0.0037057255600764475, "phrase": "input_patterns"}, {"score": 0.00332670230152448, "phrase": "training_data"}, {"score": 0.0030640804704319255, "phrase": "single_prototype"}, {"score": 0.002955782731675529, "phrase": "modified_movement_rules"}, {"score": 0.0029255474957478474, "phrase": "particle_competition"}, {"score": 0.002851301751761804, "phrase": "particle_diversity"}, {"score": 0.0028076592725295646, "phrase": "proposed_method"}, {"score": 0.0027363971333961967, "phrase": "artificial_problems"}, {"score": 0.0026945086500597304, "phrase": "real_benchmark_problems"}, {"score": 0.0024186620196958867, "phrase": "decision_boundaries"}, {"score": 0.0023816257768353344, "phrase": "stable_situations"}, {"score": 0.0023331227492950422, "phrase": "adaptation_potential"}], "paper_keywords": ["Nearest Neighbor Classification", " Swarm Intelligence", " Data Mining", " Metaheuristics"], "paper_abstract": "This paper presents a new approach to Particle Swarm Optimization, called Michigan Approach PSO (MPSO), and its application to continuous classification problems as a Nearest Prototype (NP) classifier. In Nearest Prototype classifiers, a collection of prototypes has to be found that accurately represents the input patterns. The classifier then assigns classes based on the nearest prototype in this collection. The MPSO algorithm is used to process training data to find those prototypes. In the MPSO algorithm each particle in a swarm represents a single prototype in the solution and it uses modified movement rules with particle competition and cooperation that ensure particle diversity. The proposed method is tested both with artificial problems and with real benchmark problems and compared with several algorithms of the same family. Results show that the particles are able to recognize clusters, find decision boundaries and reach stable situations that also retain adaptation potential. The MPSO algorithm is able to improve the accuracy of 1-NN classifiers, obtains results comparable to the best among other classifiers, and improves the accuracy reported in literature for one of the problems.", "paper_title": "Michigan Particle Swarm Optimization for Prototype Reduction in Classification Problems", "paper_id": "WOS:000268746400004"}