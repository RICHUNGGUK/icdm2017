{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-bank_flash-memory_storage_systems"}, {"score": 0.04812452579434374, "phrase": "flash-memory_storage_systems"}, {"score": 0.004190563478825626, "phrase": "data_transfers"}, {"score": 0.0034736499231079083, "phrase": "waiting_function"}, {"score": 0.0029193609786176632, "phrase": "energy-efficient_mechanism"}, {"score": 0.0025937408242280757, "phrase": "power_state"}, {"score": 0.002540160379502092, "phrase": "flash-memory_bank"}, {"score": 0.0022255425106527727, "phrase": "energy_consumption"}, {"score": 0.0021049977753042253, "phrase": "realistic_system_workloads"}], "paper_keywords": ["Design", " Performance", " Algorithm", " Flash Memory", " storage systems", " embedded systems", " energy-efficient", " programmed I/O"], "paper_abstract": "Emerging critical issues for flash-memory storage systems, especially with regard to implementation within many embedded systems, are the programmed I/O nature of data transfers and their energy-efficient nature. We propose an I/O request mechanism in the Memory-Technology-Device (MTD) layer to exploit the programmed I/O-based data transfers for flash-memory storage systems. We propose to revise the waiting function in the Memory-Technology-Device ( MTD) layer to relieve the microprocessor from busy-waiting, in order to make more CPU cycles available for other tasks. An energy-efficient mechanism based on the I/O request mechanism is also presented for multi-bank flash-memory storage systems, which particularly focuses on switching the power state of each flash-memory bank. We demonstrate that the energy-efficient I/O request mechanism not only saves more CPU cycles to execute other tasks, but also reduces the energy consumption of flash-memory, based on experiments incorporating realistic system workloads.", "paper_title": "An Energy-Efficient I/O Request Mechanism for Multi-Bank Flash-Memory Storage Systems", "paper_id": "WOS:000264681900006"}