{"auto_keywords": [{"score": 0.031461310706329, "phrase": "veriflow"}, {"score": 0.00481495049065317, "phrase": "real_time"}, {"score": 0.004522796947899013, "phrase": "existing_tools"}, {"score": 0.004438642216475526, "phrase": "configuration_files"}, {"score": 0.004383406949799696, "phrase": "data-plane_state"}, {"score": 0.0037246656582642272, "phrase": "network-wide_invariants"}, {"score": 0.0035648266669315943, "phrase": "network_state"}, {"score": 0.00347657813672945, "phrase": "key_challenge"}, {"score": 0.003369322866499541, "phrase": "extremely_low_latency"}, {"score": 0.0032449610741097992, "phrase": "network_performance"}, {"score": 0.0030097975788892896, "phrase": "preliminary_design"}, {"score": 0.002688532127821979, "phrase": "software-defined_networking_controller"}, {"score": 0.0025730425700096365, "phrase": "network-wide_invariant_violations"}, {"score": 0.002509284173541882, "phrase": "forwarding_rule"}, {"score": 0.0023566987138026285, "phrase": "mininet_openflow_network"}, {"score": 0.002327310963701377, "phrase": "route_views"}, {"score": 0.0021857667493036786, "phrase": "rigorous_checking"}, {"score": 0.0021049977753042253, "phrase": "rule_insertion"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Management", " Performance", " Security", " Verification", " Software-defined networking", " OpenFlow", " forwarding", " debugging", " real time"], "paper_abstract": "Networks are complex and prone to hugs. Existing tools that check configuration files and data-plane state operate offline at timescales of seconds to hours, and cannot detect or prevent bugs as they arise. Is it possible to check network-wide invariants in real lime, as the network state evolves? The key challenge here is to achieve extremely low latency during the checks so that network performance is not affected. In this paper, we present a preliminary design, VeriFlow, which suggests that this goal is achievable. VeriFlow is a layer between a software-defined networking controller and network devices that checks for network-wide invariant violations dynamically as each forwarding rule is inserted. Based OH an implementation using a Mininet OpenFlow network and Route Views trace data, we find that VeriFlow can perform rigorous checking within hundreds of microseconds per rule insertion.", "paper_title": "VeriFlow: Verifying Network-Wide Invariants in Real Time", "paper_id": "WOS:000309217600074"}