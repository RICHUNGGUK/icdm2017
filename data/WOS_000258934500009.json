{"auto_keywords": [{"score": 0.025185031443299234, "phrase": "api"}, {"score": 0.00481495049065317, "phrase": "xml-based_database_and_networking_applications"}, {"score": 0.004236321075918639, "phrase": "parsed_data"}, {"score": 0.004138813595009761, "phrase": "database_applications"}, {"score": 0.003726967166630923, "phrase": "document_structure"}, {"score": 0.0034753508746887957, "phrase": "networking_applications"}, {"score": 0.0033559647822437298, "phrase": "one-pass_access"}, {"score": 0.0029867619862229853, "phrase": "sensible_choices"}, {"score": 0.002720785798036066, "phrase": "data_representations"}, {"score": 0.0021050607823056102, "phrase": "xml"}], "paper_keywords": [""], "paper_abstract": "XML-based database and networking applications have unique requirements with respect to access and modification of parsed data. Database applications must be able to access and modify the document structure back and forth, while networking applications rely on one-pass access and modification during parsing. To help developers make sensible choices for their target applications, the authors compared the data representations of four representative parsing models: document object model (DOM), simple API for XML (SAX), streaming API for XML (StAX), and virtual token descriptor (VTD).", "paper_title": "XML document parsing: Operational and performance characteristics", "paper_id": "WOS:000258934500009"}