{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "lambda"}, {"score": 0.003829290275367182, "phrase": "head_linear_substitution"}, {"score": 0.0033639840192975835, "phrase": "ml-style_pattern_matching"}, {"score": 0.003044785536429499, "phrase": "church-rosser_property"}, {"score": 0.002955050521440921, "phrase": "semi-automatic_'divide"}, {"score": 0.0026480044868438875, "phrase": "commuting_subsystems"}, {"score": 0.002420611343093316, "phrase": "nine_primitive_reduction_rules"}, {"score": 0.002234893735225432, "phrase": "separation_theorem"}, {"score": 0.002168975681697056, "phrase": "bohm's_theorem"}, {"score": 0.0021049977753042253, "phrase": "whole_formalism"}], "paper_keywords": [""], "paper_abstract": "We present an extension of the lambda(eta)-calculus with a case construct that propagates through functions like a head linear substitution, and show that this construction permits to recover the expressiveness of ML-style pattern matching. We then prove that this system enjoys the Church-Rosser property using a semi-automatic 'divide and conquer' technique by which we determine all the pairs of commuting subsystems of the formalism (considering all the possible combinations of the nine primitive reduction rules). Finally, we prove a separation theorem similar to Bohm's theorem for the whole formalism.", "paper_title": "Lambda-calculus with constructors", "paper_id": "WOS:000240072100014"}