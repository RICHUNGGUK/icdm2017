{"auto_keywords": [{"score": 0.04292590502877974, "phrase": "common_local_patterns"}, {"score": 0.01210989522210545, "phrase": "subsequence_matching"}, {"score": 0.008667429667263532, "phrase": "crossmatch"}, {"score": 0.007740489563401459, "phrase": "data_streams"}, {"score": 0.004642105253191792, "phrase": "basic_problem"}, {"score": 0.004558012799538011, "phrase": "data_stream_mining"}, {"score": 0.004426607895888934, "phrase": "significant_research_effort"}, {"score": 0.004283280680222718, "phrase": "query_sequence"}, {"score": 0.004236539316738291, "phrase": "challenging_issue"}, {"score": 0.003937649447496154, "phrase": "trend_detection"}, {"score": 0.003866268750750096, "phrase": "outlier_detection"}, {"score": 0.0038380787059463075, "phrase": "dynamic_time"}, {"score": 0.003659768899837118, "phrase": "powerful_similarity_measure"}, {"score": 0.0035934073774126856, "phrase": "straightforward_method"}, {"score": 0.003567202899382854, "phrase": "dtw"}, {"score": 0.003528244907944199, "phrase": "high_computation_cost"}, {"score": 0.003376619185594497, "phrase": "one-pass_algorithm"}, {"score": 0.002970476379751357, "phrase": "data_stream_processing"}, {"score": 0.0027505663559338825, "phrase": "dtw_distance"}, {"score": 0.0027006464509273806, "phrase": "computation_cost"}, {"score": 0.0025098414374397308, "phrase": "streaming_fashion"}, {"score": 0.002298544073884724, "phrase": "theoretical_analysis"}, {"score": 0.0021049977753042253, "phrase": "constant_time"}], "paper_keywords": ["Data streams", " Subsequence matching", " Dynamic time warping"], "paper_abstract": "Subsequence matching is a basic problem in the field of data stream mining. In recent years, there has been significant research effort spent on efficiently finding subsequences similar to a query sequence. Another challenging issue in relation to subsequence matching is how we identify common local patterns when both sequences are evolving. This problem arises in trend detection, clustering, and outlier detection. Dynamic time warping (DTW) is often used for subsequence matching and is a powerful similarity measure. However, the straightforward method using DTW incurs a high computation cost for this problem. In this paper, we propose a one-pass algorithm, CrossMatch, that achieves the above goal. CrossMatch addresses two important challenges: (1) how can we identify common local patterns efficiently without any omission? (2) how can we find common local patterns in data stream processing? To tackle these challenges, CrossMatch incorporates three ideas: (1) a scoring function, which computes the DTW distance indirectly to reduce the computation cost, (2) a position matrix, which stores starting positions to keep track of common local patterns in a streaming fashion, and (3) a streaming algorithm, which identifies common local patterns efficiently and outputs them on the fly. We provide a theoretical analysis and prove that our algorithm does not sacrifice accuracy. Our experimental evaluation and case studies show that CrossMatch can incrementally discover common local patterns in data streams within constant time (per update) and space.", "paper_title": "Pattern discovery in data streams under the time warping distance", "paper_id": "WOS:000319276000002"}