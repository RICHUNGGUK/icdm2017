{"auto_keywords": [{"score": 0.04744139091990747, "phrase": "worst-case_performance"}, {"score": 0.038159338468328946, "phrase": "milp"}, {"score": 0.03236853647903854, "phrase": "communication_architecture"}, {"score": 0.00481495049065317, "phrase": "non-preemptive_multitasking_mpsoc."}, {"score": 0.004760765880314089, "phrase": "real-time_applications"}, {"score": 0.004448169552315403, "phrase": "design_process"}, {"score": 0.004398094237005956, "phrase": "actual_hardware_implementation"}, {"score": 0.004299621153829837, "phrase": "non-preemptive_task_scheduling"}, {"score": 0.004203343568960231, "phrase": "multi-core_platforms"}, {"score": 0.004132546937996706, "phrase": "easy_implementation"}, {"score": 0.004086010164600727, "phrase": "high_performance"}, {"score": 0.003971938976270902, "phrase": "worst-case_performance_estimation"}, {"score": 0.0037320255482878365, "phrase": "analysis_technique"}, {"score": 0.0036691380448651443, "phrase": "mixed_integer_linear_programming"}, {"score": 0.0034086028336466688, "phrase": "non-preemptive_multitask_application"}, {"score": 0.003370190834214415, "phrase": "multi-processor_system"}, {"score": 0.0032946562900625187, "phrase": "chip_architecture"}, {"score": 0.0032026066791743866, "phrase": "systematic_way"}, {"score": 0.0031308163228919773, "phrase": "complex_interaction"}, {"score": 0.0030955250132409964, "phrase": "task_scheduling"}, {"score": 0.003009022147559257, "phrase": "task_execution"}, {"score": 0.0029249294679606656, "phrase": "worst-case_behavior"}, {"score": 0.002859345731792013, "phrase": "proposed_analysis_technique"}, {"score": 0.002795228413298423, "phrase": "previous_work"}, {"score": 0.0027017308406240563, "phrase": "multiple_tasks"}, {"score": 0.002671263324230699, "phrase": "different_periods"}, {"score": 0.002495521662819317, "phrase": "proposed_analysis"}, {"score": 0.0024673738215365104, "phrase": "affordable_computation_time"}, {"score": 0.002398382089724878, "phrase": "practical_value"}, {"score": 0.0023313149689465386, "phrase": "exponential_complexity"}, {"score": 0.0022661190184053628, "phrase": "proposed_technique"}, {"score": 0.002190280748985751, "phrase": "task_latency"}, {"score": 0.0021049977753042253, "phrase": "extensive_random_simulations"}], "paper_keywords": ["Mixed integer linear programming (MILP)", " multi-processor system-on-chip (MPSoC)", " non-preemptive multitask", " worst-case analysis"], "paper_abstract": "For real-time applications, it is necessary to estimate the worst-case performance early in the design process without actual hardware implementation. While the non-preemptive task scheduling is pertinent to multi-core platforms because of easy implementation and high performance, its scheduling anomaly behavior makes the worst-case performance estimation extremely difficult. In this paper, we propose an analysis technique based on mixed integer linear programming (MILP) to estimate the worst-case performance of each task in a non-preemptive multitask application on multi-processor system-on-chip architecture. MILP provides a systematic way to describe the complex interaction among task scheduling, communication architecture, and task execution, which affects the worst-case behavior dynamically. The proposed analysis technique overcomes several limitations that previous work usually has; it allows multiple tasks with different periods and models contention on the communication architecture. We show that the proposed analysis takes affordable computation time to make it of practical value even though it has exponential complexity in theory. The proposed technique estimates a safe bound on task latency statistically, which is demonstrated by extensive random simulations.", "paper_title": "An MILP-Based Performance Analysis Technique for Non-Preemptive Multitasking MPSoC", "paper_id": "WOS:000283350300013"}