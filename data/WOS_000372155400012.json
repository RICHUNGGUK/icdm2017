{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "architecture_changes"}, {"score": 0.006420464461859855, "phrase": "oss_mailing_lists"}, {"score": 0.004996178197090491, "phrase": "architecture_information"}, {"score": 0.00490580233679704, "phrase": "development_mailing_lists"}, {"score": 0.004354841111644036, "phrase": "architecture_knowledge_vaporization"}, {"score": 0.004315249628884236, "phrase": "architecture_degeneration"}, {"score": 0.004085115444878828, "phrase": "open_source_software"}, {"score": 0.003832031470970347, "phrase": "underlying_reasons"}, {"score": 0.0037454814403672697, "phrase": "design_appropriate_modifications"}, {"score": 0.003611034322786669, "phrase": "oss_projects"}, {"score": 0.003325852346387272, "phrase": "empirical_study"}, {"score": 0.002993887707344862, "phrase": "source_code"}, {"score": 0.0028600623410146796, "phrase": "communicated_architecture_information"}, {"score": 0.0028210902750714075, "phrase": "main_findings"}, {"score": 0.0025393793843623176, "phrase": "hibernate"}, {"score": 0.002493333098814506, "phrase": "preventative_changes"}, {"score": 0.002370955769074803, "phrase": "functional_requirement"}, {"score": 0.002244277924422011, "phrase": "coding_techniques"}, {"score": 0.0022238315004700607, "phrase": "grounded_theory"}, {"score": 0.0021049977753042253, "phrase": "first_stable_version"}], "paper_keywords": ["Architecture change", " cause of change", " open source software", " mailing list", " communication"], "paper_abstract": "The causes of architecture changes can tell about why architecture changes, and this knowledge can be captured to prevent architecture knowledge vaporization and architecture degeneration. But the causes are not always known, especially in open source software (OSS) development. This makes it very hard to understand the underlying reasons for the architecture changes and design appropriate modifications. Architecture information is communicated in development mailing lists of OSS projects. To explore the possibility of identifying and understanding the causes of architecture changes, we conducted an empirical study to analyze architecture information (i.e. architectural threads) communicated in the development mailing lists of two popular OSS projects: Hibernate and ArgoUML, verified architecture changes with source code, and identified the causes of architecture changes from the communicated architecture information. The main findings of this study are: (1) architecture information communicated in OSS mailing lists does lead to architecture changes in code; (2) the major cause for architecture changes in both Hibernate and ArgoUML is preventative changes, and the causes of architecture changes are further classified to functional requirement, external quality requirement, and internal quality requirement using the coding techniques of grounded theory; (3) more than 45% of architecture changes in both projects happened before the first stable version was released.", "paper_title": "Understanding the Causes of Architecture Changes Using OSS Mailing Lists", "paper_id": "WOS:000372155400012"}