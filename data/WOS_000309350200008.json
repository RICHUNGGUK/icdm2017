{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "first_fully_automated_compiler-runtime_system"}, {"score": 0.004539005582217305, "phrase": "openmp_shared-address-space_programs"}, {"score": 0.004154332348800334, "phrase": "complete_set"}, {"score": 0.003954837422946628, "phrase": "nas_parallel_benchmarks"}, {"score": 0.00376488621224566, "phrase": "hybrid_compiler-runtime_translation_scheme"}, {"score": 0.003378385493203297, "phrase": "new_runtime_data_flow_analysis"}, {"score": 0.0031532895341013297, "phrase": "data_affinity"}, {"score": 0.0030614565460256897, "phrase": "communication_costs"}, {"score": 0.0024405370617477896, "phrase": "upc"}, {"score": 0.0021049977753042253, "phrase": "hand-coded_mpi_programs"}], "paper_keywords": ["Languages", " Algorithms", " Performance", " OpenMP", " MPI", " Translator", " Optimization", " Hybrid", " Runtime Data Flow Analysis", " Runtime Environment"], "paper_abstract": "We present the first fully automated compiler-runtime system that successfully translates and executes OpenMP shared-address-space programs on laboratory-size clusters, for the complete set of regular, repetitive applications in the NAS Parallel Benchmarks. We introduce a hybrid compiler-runtime translation scheme. Compared to previous work, this scheme features a new runtime data flow analysis and new compiler techniques for improving data affinity and reducing communication costs. We present and discuss the performance of our translated programs, and compare them with the performance of the MPI, HPF and UPC versions of the benchmarks. The results show that our translated programs achieve 75% of the hand-coded MPI programs, on average.", "paper_title": "A Hybrid Approach of OpenMP for Clusters", "paper_id": "WOS:000309350200008"}