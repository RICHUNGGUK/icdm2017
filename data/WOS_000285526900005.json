{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "monoid_transformers"}, {"score": 0.04666794416407739, "phrase": "monad_transformers"}, {"score": 0.04472882712454684, "phrase": "pre-existing_monad"}, {"score": 0.004709567162738894, "phrase": "incremental_approach"}, {"score": 0.004640590144749795, "phrase": "modular_monadic_semantics"}, {"score": 0.0045726187330434025, "phrase": "complex_monads"}, {"score": 0.004374593906165761, "phrase": "computational_features"}, {"score": 0.003664315990489347, "phrase": "new_monad"}, {"score": 0.003557653536102669, "phrase": "companion_paper"}, {"score": 0.0035054881943660096, "phrase": "jaskelioff"}, {"score": 0.003428665921276366, "phrase": "lifting_problem"}, {"score": 0.0032319109979344184, "phrase": "system_f_omega"}, {"score": 0.0029576827451501956, "phrase": "category-theoretic_setting"}, {"score": 0.0026867260506696455, "phrase": "monoidal_category"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Monad", " Monoid", " Monoidal category"], "paper_abstract": "The incremental approach to modular monadic semantics constructs complex monads by using monad transformers to add computational features to a pre-existing monad. A complication of this approach is that the operations associated to the pre-existing monad need to be lifted to the new monad. In a companion paper by Jaskelioff, the lifting problem has been addressed in the setting of system F omega. Here, we recast and extend those results in a category-theoretic setting. We abstract and generalize from monads to monoids (in a monoidal category), and from monad transformers to monoid transformers. The generalization brings more simplicity and clarity, and opens the way for lifting of operations with applicability beyond monads. (C) 2010 Elsevier BM. All rights reserved.", "paper_title": "Monad transformers as monoid transformers", "paper_id": "WOS:000285526900005"}