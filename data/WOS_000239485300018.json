{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "channel_equalization"}, {"score": 0.004746263721902197, "phrase": "concurrent_support_vector_machine_processor"}, {"score": 0.0041703614123283165, "phrase": "recognition_process"}, {"score": 0.004081385289516914, "phrase": "kernel_computing"}, {"score": 0.003853251284913932, "phrase": "support_vector_machine"}, {"score": 0.003637822529522622, "phrase": "single_chip"}, {"score": 0.0035601676907962626, "phrase": "concurrent_operation"}, {"score": 0.0034097787109430384, "phrase": "parallel_architecture"}, {"score": 0.0032423089921154503, "phrase": "high_speed"}, {"score": 0.002995554770117301, "phrase": "svm_learning_algorithms"}, {"score": 0.0027675275077806744, "phrase": "nonlinear_channel_equalization"}, {"score": 0.0026889720516076205, "phrase": "ka_algorithm"}, {"score": 0.002538470301402269, "phrase": "quadratic_programming"}, {"score": 0.002362105010110277, "phrase": "ka_learning_algorithm"}, {"score": 0.002245975340642921, "phrase": "fpga_chip"}, {"score": 0.0021979660485319523, "phrase": "csvm_processor"}, {"score": 0.0021049977753042253, "phrase": "existing_svm_processors"}], "paper_keywords": [""], "paper_abstract": "We developed a high-speed concurrent support vector machine (CSVM) processor for real-time nonlinear channel equalization. All phases of the recognition process, including kernel computing, learning, and recall of the support vector machine (SVM) are performed on a single chip. The concurrent operation of this CSVM using a parallel architecture of elements allows it to achieve high speed. The hardware-friendly kernel adatron (KA) SVM learning algorithms are embedded on a chip. The results of the nonlinear channel equalization obtained by the KA algorithm are compared with those obtained by the quadratic programming (QP) method. The CSVM using the KA learning algorithm is designed and implemented using the FPGA chip. The CSVM processor performs 20% faster than the existing SVM processors.", "paper_title": "Nonlinear channel equalization using concurrent support vector machine processor", "paper_id": "WOS:000239485300018"}