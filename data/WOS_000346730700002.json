{"auto_keywords": [{"score": 0.04274518365190482, "phrase": "tm"}, {"score": 0.004644014990871423, "phrase": "short_paper"}, {"score": 0.00450231514359539, "phrase": "game_description_language"}, {"score": 0.0043877089146685515, "phrase": "turing"}, {"score": 0.004123781267600542, "phrase": "turing_machine"}, {"score": 0.003997891221012094, "phrase": "single-player_game"}, {"score": 0.003936389070602614, "phrase": "gdl._positions_in_the_game"}, {"score": 0.0035681790580031998, "phrase": "winning_strategy"}, {"score": 0.003513264130359459, "phrase": "initial_position"}, {"score": 0.003459191419478298, "phrase": "direct_consequences"}, {"score": 0.003405948098114941, "phrase": "turing_completeness"}, {"score": 0.0033709115875455936, "phrase": "gdl"}, {"score": 0.0031354779851351287, "phrase": "gdl_description"}, {"score": 0.0029928611380840757, "phrase": "recursion_restriction"}, {"score": 0.0029467742734417255, "phrase": "original_gdl_specification"}, {"score": 0.0029013950320185573, "phrase": "general_recursion_restriction"}, {"score": 0.0028567126120064546, "phrase": "restricted_language"}, {"score": 0.002740885774408238, "phrase": "aforementioned_properties"}, {"score": 0.002643386043540555, "phrase": "game_description"}, {"score": 0.0026026666736474404, "phrase": "suggested_restriction"}, {"score": 0.0023711591828229736, "phrase": "practical_expressivity"}, {"score": 0.002298649369775623, "phrase": "syntactically_correct_games"}, {"score": 0.002194011800331242, "phrase": "previous_general_game_playing"}, {"score": 0.0021714132048895624, "phrase": "ggp"}, {"score": 0.0021049977753042253, "phrase": "proposed_gdl_fragment"}], "paper_keywords": ["Computability", " expressivity", " fragment", " game description language (GDL)", " general game playing (GGP)", " Turing complete"], "paper_abstract": "In this short paper, we show that the game description language (GDL) is Turing complete. In particular, we show how to simulate a Turing machine (TM) as a single-player game described in GDL. Positions in the game correspond to configurations of the machine, and the TM accepts its input exactly when the agent has a winning strategy from the initial position. As direct consequences of the Turing completeness of GDL, we show that well formedness as well as some other properties of a GDL description are undecidable. We propose to strengthen the recursion restriction of the original GDL specification into a general recursion restriction. The restricted language is not Turing complete, and the aforementioned properties become decidable. Checking whether a game description satisfies the suggested restriction is as easy as checking that the game is syntactically correct. Finally, we argue that practical expressivity is not affected as all syntactically correct games in a collection of more than 500 games having appeared in previous general game playing (GGP) competitions belong to the proposed GDL fragment.", "paper_title": "The Game Description Language Is Turing Complete", "paper_id": "WOS:000346730700002"}