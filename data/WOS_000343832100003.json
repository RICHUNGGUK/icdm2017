{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "process_conformance"}, {"score": 0.007778865015028015, "phrase": "process_stability"}, {"score": 0.0047026237903774895, "phrase": "software_development"}, {"score": 0.0046364836476864325, "phrase": "fast-paced_environment"}, {"score": 0.004549734943142138, "phrase": "constant_update"}, {"score": 0.004506968388996092, "phrase": "ever-changing_technologies"}, {"score": 0.004422632150619634, "phrase": "process_improvement_initiatives"}, {"score": 0.0041987222897385676, "phrase": "software_organization"}, {"score": 0.003802135020791801, "phrase": "technological_update"}, {"score": 0.003626626504149897, "phrase": "conflicting_alternatives"}, {"score": 0.003525220627709056, "phrase": "system_dynamics_simulation"}, {"score": 0.003475582268210954, "phrase": "software_factory_product_line"}, {"score": 0.0031619994642255846, "phrase": "above-training_alternatives"}, {"score": 0.0031174595932694036, "phrase": "system_dynamics_model"}, {"score": 0.0030446120560494155, "phrase": "expert_panel"}, {"score": 0.002987557906013826, "phrase": "simulation_results"}, {"score": 0.002890266318361907, "phrase": "statistical_process_control"}, {"score": 0.0028360962841331634, "phrase": "performance_baseline"}, {"score": 0.0027961342030212353, "phrase": "real_software_development_organization"}, {"score": 0.002717886783819971, "phrase": "statistical_control"}, {"score": 0.002616943519478975, "phrase": "independent_variables"}, {"score": 0.002519739850807611, "phrase": "technology_skills"}, {"score": 0.002391938519840648, "phrase": "product_defects"}, {"score": 0.0022706045233150795, "phrase": "positive_impact"}, {"score": 0.00218623706110975, "phrase": "process_training_results"}], "paper_keywords": ["Simulation", " Software process improvement", " Statistical process control", " System dynamics"], "paper_abstract": "Software development is a fast-paced environment where developers need constant update to ever-changing technologies. Furthermore, process improvement initiatives have been proven useful in increasing the productivity of a software organization. As such, these organizations need to decide where to invest their training budget. As a result, training in technological update to their workforce or training in process conformance with its productive processes become conflicting alternatives. This paper presents a system dynamics simulation of a software factory product line. The objective of this simulation is to understand the changes in behavior when selecting either one of the above-training alternatives. The system dynamics model was validated with an expert panel, and the simulation results have been empirically validated-using statistical process control-against the performance baseline of a real software development organization. With the simulation under statistical control and performing like the baseline, the independent variables representing process conformance (process training) and technology skills (skills training) were modified to study their impact on product defects and process stability. Our results show that while both variables have positive impact on defects and process stability, investment in process training results in a process with less variation and with fewer defects.", "paper_title": "An empirically validated simulation for understanding the relationship between process conformance and technology skills", "paper_id": "WOS:000343832100003"}