{"auto_keywords": [{"score": 0.03066059232680508, "phrase": "gus_operations"}, {"score": 0.013928450832745864, "phrase": "efficient_implementation"}, {"score": 0.013727502313911842, "phrase": "gs_operation"}, {"score": 0.013398922669130616, "phrase": "disk_access_cost"}, {"score": 0.00481495049065317, "phrase": "aggregate_query_processing"}, {"score": 0.004768104290288521, "phrase": "clustered_road_networks"}, {"score": 0.004430920292612374, "phrase": "kernel_operation"}, {"score": 0.004345085569121329, "phrase": "aggregate_computations"}, {"score": 0.004302791070310513, "phrase": "road_network_queries"}, {"score": 0.003978866233891427, "phrase": "considerable_portion"}, {"score": 0.003920891569777894, "phrase": "total_query_processing_cost"}, {"score": 0.0037888687452790953, "phrase": "new_successor_retrieval_operation"}, {"score": 0.0034693659976716197, "phrase": "gus_operation"}, {"score": 0.003303617297414837, "phrase": "candidate_successors"}, {"score": 0.0029807934480637855, "phrase": "hypergraph-based_model"}, {"score": 0.002937318465594425, "phrase": "successively_retrieved_junctions"}, {"score": 0.0028106505443369545, "phrase": "proposed_model"}, {"score": 0.0027832502848247303, "phrase": "query_logs"}, {"score": 0.0026501935378083663, "phrase": "proposed_gus_operation"}, {"score": 0.0026243534128245886, "phrase": "associated_clustering_model"}, {"score": 0.002486659929589854, "phrase": "dijkstra's_single_source"}, {"score": 0.0024264776194357993, "phrase": "incremental_network_expansion_framework"}, {"score": 0.002356173823922118, "phrase": "proposed_successor_retrieval_operation"}, {"score": 0.0023104373174118458, "phrase": "proposed_clustering_hypergraph_model"}, {"score": 0.0022107428653358715, "phrase": "disk_accesses"}, {"score": 0.0021891781017389783, "phrase": "query_processing"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Storage management", " Data retrieval operation", " Road networks", " Clustering", " Hypergraphs"], "paper_abstract": "Get-Successors (GS) which retrieves all successors of a junction is a kernel operation used to facilitate aggregate computations in road network queries. Efficient implementation of the GS operation is crucial since the disk access cost of this operation constitutes a considerable portion of the total query processing cost. Firstly, we propose a new successor retrieval operation Get-Unevaluated-Successors (GUS), which retrieves only the unevaluated successors of a given junction. The GUS operation is an efficient implementation of the GS operation, where the candidate successors to be retrieved are pruned according to the properties and state of the algorithm. Secondly, we propose a hypergraph-based model for clustering successively retrieved junctions by the GUS operations to the same pages. The proposed model utilizes query logs to correctly capture the disk access cost of GUS operations. The proposed GUS operation and associated clustering model are evaluated for two different instances of GUS operations which typically arise in Dijkstra's single source shortest path algorithm and incremental network expansion framework. Our simulation results show that the proposed successor retrieval operation together with the proposed clustering hypergraph model is quite effective in reducing the number of disk accesses in query processing. (C) 2010 Published by Elsevier Inc.", "paper_title": "Efficient successor retrieval operations for aggregate query processing on clustered road networks", "paper_id": "WOS:000278629600008"}