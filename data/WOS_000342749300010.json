{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "superlattice_boltzmann_transport_equation"}, {"score": 0.003978866233891427, "phrase": "finite_difference_numerical_algorithm"}, {"score": 0.003503497128638099, "phrase": "semiconductor_superlattice_subject"}, {"score": 0.0034154440860550564, "phrase": "crossed_time"}, {"score": 0.00337224813954299, "phrase": "dependent_electric_and_constant_magnetic_fields"}, {"score": 0.0030457198309616694, "phrase": "c_language"}, {"score": 0.002821685815956478, "phrase": "cuda_c_language"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Boltzmann equation", " Superlattice", " Finite Difference Method", " GPU", " CUDA"], "paper_abstract": "We present a finite difference numerical algorithm for solving two dimensional spatially homogeneous Boltzmann transport equation which describes electron transport in a semiconductor superlattice subject to crossed time dependent electric and constant magnetic fields. The algorithm is implemented both in C language targeted to CPU and in CUDA C language targeted to commodity NVidia GPU. We compare performances and merits of one implementation versus another and discuss various software optimisation techniques. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Finite difference numerical method for the superlattice Boltzmann transport equation and case comparison of CPU(C) and GPU(CUDA) implementations", "paper_id": "WOS:000342749300010"}