{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "byzantine_adversaries"}, {"score": 0.004682708592184678, "phrase": "network_throughput"}, {"score": 0.004388035083357706, "phrase": "single_corrupted_packet"}, {"score": 0.004307286039184164, "phrase": "malicious_node"}, {"score": 0.00399881984083004, "phrase": "distributed_polynomial-time_rate-optimal_network_codes"}, {"score": 0.0036951530348821116, "phrase": "different_attacking_capabilities"}, {"score": 0.003244275497488318, "phrase": "network_capacity"}, {"score": 0.002956209594959227, "phrase": "higher_rate"}, {"score": 0.0028482561434303886, "phrase": "optimal_rate"}, {"score": 0.002607362103727335, "phrase": "distributed_manner"}, {"score": 0.002420339995088838, "phrase": "polynomial_time"}, {"score": 0.0022889103976458437, "phrase": "nonmalicious_nodes"}, {"score": 0.0021445492649196955, "phrase": "classical_distributed_network_code"}], "paper_keywords": ["Byzantine adversaries", " distributed network error-correcting codes", " eavesdroppers", " information-theoretically optimal", " list decoding", " polynomial-time algorithms"], "paper_abstract": "Network coding substantially increases network throughput. But since it involves mixing of information inside the network, a single corrupted packet generated by a malicious node can end up contaminating all the information reaching a destination, preventing decoding. This paper introduces distributed polynomial-time rate-optimal network codes that work in the presence of Byzantine nodes. We present algorithms that target adversaries with different attacking capabilities. When the adversary can eavesdrop on all links and jam z(O) links, our first algorithm achieves a rate of C - 2z(O), where C is the network capacity. In contrast,, when the adversary has limited eavesdropping capabilities, we provide algorithms that achieve the higher rate of C - z(O). Our algorithms attain the optimal rate given the strength of the adversary. They are information-theoretically secure. They operate in a distributed manner, assume no knowledge of the topology, and can be designed and implemented in polynomial time. Furthermore, only the source and destination need to be modified; nonmalicious nodes inside the network are oblivious to the presence of adversaries and implement a classical distributed network code. Finally, our algorithms work over wired and wireless networks.", "paper_title": "Resilient network coding in the presence of Byzantine adversaries", "paper_id": "WOS:000258033700015"}