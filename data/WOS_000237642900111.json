{"auto_keywords": [{"score": 0.026010656447810837, "phrase": "proposed_scheme"}, {"score": 0.00481495049065317, "phrase": "flash_memory"}, {"score": 0.003829290275367182, "phrase": "in-place-update_schemes"}, {"score": 0.0033639840192975835, "phrase": "obsolete_data"}, {"score": 0.0032004205378150354, "phrase": "garbage_collection"}, {"score": 0.002925728709297618, "phrase": "new_garbage_collection_algorithm"}, {"score": 0.0028113140998735366, "phrase": "cleaning_cost"}, {"score": 0.0026480044868438875, "phrase": "erase_operations"}, {"score": 0.0025191653363555214, "phrase": "data_copies"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "Flash memory cannot be overwritten unless erased in advance. In order to avoid having to erase during every update, non-in-place-update schemes have been used. Since updates are not performed in place, obsolete data are later reclaimed by garbage collection. In this paper, we study a new garbage collection algorithm to reduce the cleaning cost such as the number of erase operations and the number of data copies. The proposed scheme automatically predicts the future I/O workload and intelligently selects the victims according to the predicted I/O workload. Experimental results show that the proposed scheme performs well especially when the degree of locality is high.", "paper_title": "An intelligent garbage collection algorithm for flash memory storages", "paper_id": "WOS:000237642900111"}