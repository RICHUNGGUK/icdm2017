{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "object-oriented_programs"}, {"score": 0.009798987796927162, "phrase": "instance_variables"}, {"score": 0.004274257668843717, "phrase": "assertional_method"}, {"score": 0.004087469540575263, "phrase": "simple_way"}, {"score": 0.0039674831861175935, "phrase": "syntax-directed_transformation"}, {"score": 0.0036826452656927877, "phrase": "natural_proofs_rules"}, {"score": 0.0034437574674180365, "phrase": "relative_completeness"}, {"score": 0.003367611042980526, "phrase": "proposed_proof_system"}, {"score": 0.0030565692640988585, "phrase": "assertion_language"}, {"score": 0.0028795712616923462, "phrase": "discussed_programming_language"}, {"score": 0.002712794864739074, "phrase": "recursive_methods"}, {"score": 0.0025366596616434793, "phrase": "transformational_approach"}, {"score": 0.0023719332915829268, "phrase": "object-oriented_programming"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Object-oriented programs", " Null references", " Aliasing", " Inheritance", " Subtyping", " Syntax-directed transformation", " Recursive programs", " Program verification", " Strong partial correctness", " Relative completeness"], "paper_abstract": "We show that verification of object-oriented programs by means of the assertional method can be achieved in a simple way by exploiting a syntax-directed transformation from object-oriented programs to recursive programs. This transformation suggests natural proofs rules and its correctness helps us to establish soundness and relative completeness of the proposed proof system. One of the difficulties is how to properly deal in the assertion language with the instance variables and aliasing. The discussed programming language supports arrays, instance variables, failures and recursive methods with parameters. We also explain how the transformational approach can be extended to deal with other features of object-oriented programming, like classes, inheritance, subtyping and dynamic binding. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Verification of object-oriented programs: A transformational approach", "paper_id": "WOS:000301620100010"}