{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "web_service_composition"}, {"score": 0.004696608876994947, "phrase": "value-added_services"}, {"score": 0.004581162468419365, "phrase": "existing_ones"}, {"score": 0.004513255056769647, "phrase": "significant_momentum"}, {"score": 0.004446349752828045, "phrase": "potential_silver_bullet"}, {"score": 0.004402295697276237, "phrase": "service-oriented_computing"}, {"score": 0.004337028108577593, "phrase": "large_number"}, {"score": 0.004294052530714228, "phrase": "composition_methods"}, {"score": 0.003945467978172845, "phrase": "output_parameters"}, {"score": 0.003753738096719609, "phrase": "real_world"}, {"score": 0.0036070601923916196, "phrase": "applicable_conditions"}, {"score": 0.003380791705551809, "phrase": "great_impact"}, {"score": 0.003347259612209552, "phrase": "service_composition"}, {"score": 0.0032004205378150354, "phrase": "existing_methods"}, {"score": 0.002984665318717504, "phrase": "simple_formal_expression"}, {"score": 0.002634830238219976, "phrase": "basic_elements"}, {"score": 0.002595698433525986, "phrase": "web_service_definition"}, {"score": 0.002444883254621769, "phrase": "constraint-aware_service_composition_method"}, {"score": 0.0023143284925318916, "phrase": "proposed_solution"}, {"score": 0.0022799458141165587, "phrase": "graph_search-based_algorithm"}, {"score": 0.002223770196464436, "phrase": "publicly_available_test"}, {"score": 0.0021049977753042253, "phrase": "proposed_methodology"}], "paper_keywords": ["Service composition", " service constraint", " service extension", " service intension", " web services"], "paper_abstract": "The creation of value-added services by automatic composition of existing ones is gaining significant momentum as the potential silver bullet in service-oriented computing. A large number of composition methods have been proposed, and most of them are based on the matching of input and output parameters of services only. However, most services in the real world are not universally applicable, and some applicable conditions or restrictions are imposed on them by their providers. Such constraints have a great impact on service composition, but have been largely ignored by the existing methods. In this paper, they are discussed and defined, and a simple formal expression is adopted to describe them. Two novel concepts, called service intension and service extension, are presented, which allow one to divide the basic elements of a web service definition into two parts. Consequently, their use allows us to propose a constraint-aware service composition method in which service constraints are well taken care. The proposed solution includes a graph search-based algorithm and two novel preprocessing methods. A publicly available test set from ICEBE05 is used to evaluate and analyze the proposed methodology.", "paper_title": "Constraint-Aware Approach to Web Service Composition", "paper_id": "WOS:000337907100009"}