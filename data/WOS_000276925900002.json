{"auto_keywords": [{"score": 0.04957466661795797, "phrase": "step-wise_operations"}, {"score": 0.015719716506582538, "phrase": "intention_violation"}, {"score": 0.004590820632326585, "phrase": "coautocad_systems"}, {"score": 0.004400329132129292, "phrase": "single-step_operations"}, {"score": 0.003979378967020026, "phrase": "mirror"}, {"score": 0.003938232154712506, "phrase": "array"}, {"score": 0.0036553073292691467, "phrase": "copy-paste"}, {"score": 0.003322540556404882, "phrase": "execution_process"}, {"score": 0.003150900886669123, "phrase": "concurrent_operations"}, {"score": 0.0031011538704241908, "phrase": "remote_sites"}, {"score": 0.002879158342988017, "phrase": "semantic_intention"}, {"score": 0.0027889366191837504, "phrase": "novel_approach"}, {"score": 0.0027015344365793016, "phrase": "previous_violations"}, {"score": 0.002658863179011018, "phrase": "future_violations"}, {"score": 0.0026307897899760383, "phrase": "newly-updated_document_status"}, {"score": 0.002561892963059385, "phrase": "execution_formats"}, {"score": 0.0025348408238837655, "phrase": "causally-ready_operations"}, {"score": 0.002508073621696602, "phrase": "vt_transformation_function"}, {"score": 0.002429451930463481, "phrase": "goto_algorithm"}, {"score": 0.0022674379203603224, "phrase": "integrated_example_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "Operations in CoAutoCAD systems are either single-step or step-wise. Single-step operations (such as Line, Box, etc.) are completed in one step, while step-wise operations (such as Mirror, Array, etc.) take several continuous or discrete steps and in some scenarios (such as Copy-Paste), and the number of steps may not be known beforehand. Therefore, during the execution process, the intention of step-wise operations may be violated by concurrent operations coming from remote sites. This paper investigates the problem of intention violation and proposes to maintain the semantic intention of operations by introducing a novel approach called CLAF (Check Last Avoid Future) to solve previous violations while avoiding future violations using newly-updated document status. To infer the execution formats of causally-ready operations, VT transformation function is introduced to extend the GOTO algorithm so as to reflect the influence of one operation on another. An integrated example analysis is provided to demonstrate the effectiveness of our strategy. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "CLAF: Solving intention violation of step-wise operations in CAD groupware", "paper_id": "WOS:000276925900002"}