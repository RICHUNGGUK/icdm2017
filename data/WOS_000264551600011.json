{"auto_keywords": [{"score": 0.03459313900284793, "phrase": "mozilla"}, {"score": 0.00481495049065317, "phrase": "functional_form"}, {"score": 0.004746065479362881, "phrase": "size-defect_relationship"}, {"score": 0.0043738432231020885, "phrase": "software_modules"}, {"score": 0.004011366422179016, "phrase": "quality_assurance_activities"}, {"score": 0.003916098498242888, "phrase": "previous_research"}, {"score": 0.0038415095105632157, "phrase": "general_conclusion"}, {"score": 0.003750260412839128, "phrase": "monotonically_increasing_relationship"}, {"score": 0.003714368305523811, "phrase": "module_size"}, {"score": 0.0035229930971258316, "phrase": "class-level_size_and_defect_data"}, {"score": 0.0033737457695128233, "phrase": "crucial_relationship"}, {"score": 0.0030938932434437178, "phrase": "defect_proneness"}, {"score": 0.003049555059533735, "phrase": "class_size"}, {"score": 0.0029627701619228527, "phrase": "slower_rate"}, {"score": 0.0029343925814926787, "phrase": "smaller_classes"}, {"score": 0.002850875630787708, "phrase": "larger_classes"}, {"score": 0.0027431953780099826, "phrase": "higher_priority"}, {"score": 0.002716915166374506, "phrase": "smaller_modules"}, {"score": 0.002677964894127131, "phrase": "focused_quality_assurance_activities"}, {"score": 0.002443890721386284, "phrase": "available_resources"}, {"score": 0.002125371638869951, "phrase": "focused_quality-assurance_activities"}, {"score": 0.0021049977753042253, "phrase": "large-scale_software_projects"}], "paper_keywords": ["Product metrics", " software science", " size-defect relationship", " measurement applied to SQA and V&V", " planning for SQA and V&V", " open-source software"], "paper_abstract": "The importance of the relationship between the size and defect proneness of software modules is well recognized. Understanding the nature of that relationship can facilitate various development decisions related to prioritization of quality assurance activities. Overall, the previous research only drew a general conclusion that there was a monotonically increasing relationship between module size and defect proneness. In this study, we analyzed class-level size and defect data in order to increase our understanding of this crucial relationship. We studied four large-scale object-oriented products, Mozilla, Cn3d, JBoss, and Eclipse. We observed that defect proneness increased as class size increased, but at a slower rate; smaller classes were proportionally more problematic than larger classes. Therefore, practitioners should consider giving higher priority to smaller modules when planning focused quality assurance activities with limited resources. For example, in Mozilla and Eclipse, an inspection strategy investing 80 percent of available resources on 100-LOC classes and the rest on 1,000-LOC classes would be more than twice as cost-effective as the opposite strategy. These results should be immediately useful to guide focused quality-assurance activities in large-scale software projects.", "paper_title": "An Investigation into the Functional Form of the Size-Defect Relationship for Software Modules", "paper_id": "WOS:000264551600011"}