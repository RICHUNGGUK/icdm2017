{"auto_keywords": [{"score": 0.04377815815707316, "phrase": "cellular_automaton"}, {"score": 0.00481495049065317, "phrase": "self-organized_criticality_model"}, {"score": 0.004712065638657606, "phrase": "dynamically_load-balancing_tasks"}, {"score": 0.004440277230269978, "phrase": "large-scale_decentralized_system"}, {"score": 0.004252469672259375, "phrase": "decentralized_agent_system"}, {"score": 0.004050625770007516, "phrase": "critical_state"}, {"score": 0.0037352048741373816, "phrase": "different_responses"}, {"score": 0.003635600104609725, "phrase": "new_task"}, {"score": 0.003124790943886441, "phrase": "power-law_relation"}, {"score": 0.0030250067691601967, "phrase": "scale-invariant_behavior"}, {"score": 0.002944284514509205, "phrase": "tuning_or_control_parameters"}, {"score": 0.002789226820897593, "phrase": "small_ones"}, {"score": 0.0026280534600940137, "phrase": "non-clairvoyant_scheduling"}, {"score": 0.0025167026017217926, "phrase": "computing_resources"}, {"score": 0.002345707314211983, "phrase": "tasks_features"}, {"score": 0.0023079225317714815, "phrase": "algorithm_design"}, {"score": 0.0021627595586364724, "phrase": "near-optimal_schedules"}, {"score": 0.0021049977753042253, "phrase": "different_conditions"}], "paper_keywords": ["Optimization", " Self-organization", " Scheduling", " Distributed systems"], "paper_abstract": "This paper studies a self-organized criticality model called sandpile for dynamically load-balancing tasks arriving in the form of Bag-of-Tasks in large-scale decentralized system. The sandpile is designed as a decentralized agent system characterizing a cellular automaton, which works in a critical state at the edge of chaos. Depending on the state of the cellular automaton, different responses may occur when a new task is assigned to a resource: it may change nothing or generate avalanches that reconfigure the state of the system. The abundance of such avalanches is in power-law relation with their sizes, a scale-invariant behavior that emerges without requiring tuning or control parameters. That means that large-catastrophic-avalanches are very rare but small ones occur very often. Such emergent pattern can be efficiently adapted for non-clairvoyant scheduling, where tasks are load balanced in computing resources trying to maximize the performance but without assuming any knowledge on the tasks features. The algorithm design is experimentally validated showing that the sandpile is able to find near-optimal schedules by reacting differently to different conditions of workloads and architectures.", "paper_title": "The sandpile scheduler", "paper_id": "WOS:000336424400004"}