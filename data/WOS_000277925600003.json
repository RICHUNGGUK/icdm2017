{"auto_keywords": [{"score": 0.03459313900284793, "phrase": "xseek"}, {"score": 0.005633942148032723, "phrase": "return_nodes"}, {"score": 0.00481495049065317, "phrase": "return_specification_inference"}, {"score": 0.0047006879240764935, "phrase": "keyword_search"}, {"score": 0.004655742198075387, "phrase": "xml._keyword_search"}, {"score": 0.004611224230543916, "phrase": "web_users"}, {"score": 0.004523455475492876, "phrase": "xml_data"}, {"score": 0.0043738432231020885, "phrase": "structured_query_language"}, {"score": 0.00429057323623293, "phrase": "possibly_complex_data_schemas"}, {"score": 0.004089239912167375, "phrase": "qualified_data_nodes"}, {"score": 0.003916098498242888, "phrase": "meaningful_way"}, {"score": 0.0037322748439604144, "phrase": "xquery"}, {"score": 0.0035914198812657897, "phrase": "return_clause"}, {"score": 0.0035570425396761122, "phrase": "keyword_searches"}, {"score": 0.0035060903664150115, "phrase": "open_problem"}, {"score": 0.00334144503360907, "phrase": "keyword_search_engine"}, {"score": 0.0033094525227603012, "phrase": "data-centric_xml"}, {"score": 0.003034916887102753, "phrase": "possible_entities"}, {"score": 0.0028235667474151714, "phrase": "return_specifications"}, {"score": 0.0027965187255008647, "phrase": "query_keywords"}, {"score": 0.002677964894127131, "phrase": "xml_data_structures"}, {"score": 0.0026523079380037706, "phrase": "keyword_patterns"}, {"score": 0.0023857603808363527, "phrase": "desirable_return_information"}, {"score": 0.002329009499335603, "phrase": "query_results"}, {"score": 0.002251813863195168, "phrase": "user-specified_granularity"}, {"score": 0.002125371638869951, "phrase": "desired_ones"}, {"score": 0.0021049977753042253, "phrase": "extensive_experimental_studies"}], "paper_keywords": ["Algorithms", " Design", " XML", " keyword search", " result clustering"], "paper_abstract": "Keyword search enables Web users to easily access XML data without the need to learn a structured query language and to study possibly complex data schemas. Existing work has addressed the problem of selecting qualified data nodes that match keywords and connecting them in a meaningful way, in the spirit of inferring the where clause in XQuery. However, how to infer the return clause for keyword searches is an open problem. To address this challenge, we present a keyword search engine for data-centric XML, XSeek, to infer the semantics of the search and identify return nodes effectively. XSeek recognizes possible entities and attributes inherently represented in the data. It also distinguishes between predicates and return specifications in query keywords. Then based on the analysis of both XML data structures and keyword patterns, XSeek generates return nodes. Furthermore, when the query is ambiguous and it is hard or impossible to determine the desirable return information, XSeek clusters the query results according to their semantics based on the user-specified granularity, and enables the user to easily browse and select the desired ones. Extensive experimental studies show the effectiveness and efficiency of XSeek.", "paper_title": "Return Specification Inference and Result Clustering for Keyword Search on XML", "paper_id": "WOS:000277925600003"}