{"auto_keywords": [{"score": 0.036303556751465654, "phrase": "performance_evaluation"}, {"score": 0.01039100955622051, "phrase": "high_level"}, {"score": 0.00481495049065317, "phrase": "multi-protocol_file_transfer"}, {"score": 0.004746617697932655, "phrase": "desktop_grids"}, {"score": 0.004521425511725114, "phrase": "large_variety"}, {"score": 0.004495641511172577, "phrase": "resource-demanding_distributed_applications"}, {"score": 0.0043192062457764226, "phrase": "large_volumes"}, {"score": 0.004209441837971891, "phrase": "data_management_ill_such_large-scale"}, {"score": 0.0040790508299443804, "phrase": "oil_ad_hoc_solutions"}, {"score": 0.00402111957601744, "phrase": "general_approach"}, {"score": 0.00397536514777614, "phrase": "challenging_issue"}, {"score": 0.003941389954037981, "phrase": "new_class"}, {"score": 0.003918900658052011, "phrase": "data_management_service"}, {"score": 0.0038302144900165284, "phrase": "file_transfer_protocols"}, {"score": 0.003754255812075932, "phrase": "new_and_emerging_cloud_storage_set-vice"}, {"score": 0.0036483395389139556, "phrase": "bitdew_framework"}, {"score": 0.0035862243508162192, "phrase": "automatic_and_transparent_data_management_oil_computational_desktop_grids"}, {"score": 0.0034061309156482407, "phrase": "bitdew"}, {"score": 0.0033673504953700417, "phrase": "specific_set"}, {"score": 0.0033194932199928267, "phrase": "key_data_management_operations"}, {"score": 0.003125785288138378, "phrase": "bitdew_runtime_environment"}, {"score": 0.003099048380523229, "phrase": "flexible_distributed_service_architecture"}, {"score": 0.003028859354852274, "phrase": "distributed_hash_tables"}, {"score": 0.0029943614447192775, "phrase": "distributed_data_catalog"}, {"score": 0.0029772596754941076, "phrase": "collaborative_transport"}, {"score": 0.002951789443791314, "phrase": "data_distribution"}, {"score": 0.0027478264269769964, "phrase": "http"}, {"score": 0.002708737287949955, "phrase": "bittorrent_protocols"}, {"score": 0.0026549598458192633, "phrase": "ibp_wide_area_storage"}, {"score": 0.0025873791889845167, "phrase": "asynchronous_and_reliable_multi-protocols_transfers"}, {"score": 0.002521514414371778, "phrase": "application_programmers"}, {"score": 0.0025071064368892156, "phrase": "bitdew_users"}, {"score": 0.0024856483031965118, "phrase": "bitdew's_features"}, {"score": 0.002394760204469008, "phrase": "intense_bioinformatics_application"}, {"score": 0.002360692782721461, "phrase": "grid_context"}, {"score": 0.002229190333606617, "phrase": "reasonable_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Content network", " P2P", " Cloud computing", " Desktop Grid"], "paper_abstract": "Desktop Grids use the computing, network and Storage resources from idle desktop PCs distributed over multiple-LANs or the Internet to compute a large variety of resource-demanding distributed applications. While these applications need to access, compute, store and circulate large Volumes of data, little attention has been paid to data management ill Such large-scale, dynamic, heterogeneous, volatile and highly distributed Grids. In most cases, data management relies oil ad hoc solutions, and providing a general approach is still a challenging issue. A new class of data management service is desirable to deal With Such a variety of file transfer protocols than client/server, P2P or the new and emerging Cloud storage set-vice. To address this problem, we propose the BitDew framework, a programmable environment for automatic and transparent data management oil computational Desktop Grids, This paper describes the BitDew programming interface, its architecture, and the performance evaluation of its runtime components. BitDew relies oil a specific set of metadata to drive key data management operations, namely life cycle, distribution, placement, replication and fault tolerance with a high level of abstraction. The BitDew runtime environment is a flexible distributed service architecture that integrates modular P2P components Such as DHTs (Distributed Hash Tables) for a Distributed Data Catalog and collaborative transport protocols for data distribution. We explain how to plug-in new or existing protocols and we give evidence of the versatility of the framework by implementing HTTP, FIT, and BitTorrent protocols and access to the Amazon S3 and IBP Wide Area Storage. We describe the mechanisms used to provide asynchronous and reliable multi-protocols transfers. Through Several examples, we describe how application programmers and BitDew users call exploit BitDew's features. We report on performance evaluation using micro-benchmarks, various usage Scenarios and data-intense bioinformatics application, both in the Grid context and oil the Internet. The performance evaluation demonstrates that the high level of abstraction and transparency is obtained with a reasonable overhead, while offering the benefit of scalability, performance and fault tolerance with little programming cost. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "BitDew: A data management and distribution service with multi-protocol file transfer and metadata abstraction", "paper_id": "WOS:000268516100003"}