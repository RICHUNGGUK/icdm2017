{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "extended_andorra_model"}, {"score": 0.04962656673317322, "phrase": "logic_programming"}, {"score": 0.03182678736309615, "phrase": "basic_design"}, {"score": 0.004701985831087475, "phrase": "high-level_view"}, {"score": 0.004548253531664032, "phrase": "vast_latitude"}, {"score": 0.004357927940322685, "phrase": "best_performance"}, {"score": 0.004316722156877335, "phrase": "logic_programs"}, {"score": 0.0042354707960660706, "phrase": "maximum_performance"}, {"score": 0.004136044939878838, "phrase": "holy_grails"}, {"score": 0.004000741805312148, "phrase": "computational_models"}, {"score": 0.00370780481244907, "phrase": "search_space"}, {"score": 0.0032149396890830575, "phrase": "nondeterministic_goals"}, {"score": 0.0029793817270734016, "phrase": "eam"}, {"score": 0.002881793492919646, "phrase": "david_h._d._warren's_original_eam"}, {"score": 0.002854505078275351, "phrase": "implicit_control"}, {"score": 0.002787406053363446, "phrase": "complete_description"}, {"score": 0.002696101728474703, "phrase": "eam_system"}, {"score": 0.0026077803487003, "phrase": "control_rules"}, {"score": 0.002546466113418944, "phrase": "major_data_structures"}, {"score": 0.002522344964242888, "phrase": "execution_algorithms"}, {"score": 0.0024630345285372958, "phrase": "efficient_execution"}, {"score": 0.00241658945942583, "phrase": "system_performance"}, {"score": 0.002382329940096419, "phrase": "detailed_performance_study"}, {"score": 0.0022500695985527668, "phrase": "acceptable_base_performance"}, {"score": 0.0021454671611847507, "phrase": "advanced_search"}, {"score": 0.002104998402294158, "phrase": "eam."}], "paper_keywords": ["logic Programming", " implementation", " extended Andorra model"], "paper_abstract": "Logic programming provides a high-level view of programming, giving implementers a vast latitude into what techniques to explore to achieve the best performance for logic programs. Towards obtaining maximum performance, one of the holy grails of logic programming has been to design computational models that could be executed efficiently and that would allow both for a reduction of the search space and for exploiting all the available parallelism in the application. These goals have motivated the design of the Extended Andorra Model (EAM), a model where goals that do not constrain nondeterministic goals can execute first. In this work, we present and evaluate the Basic design for EAM, a system that builds upon David H. D. Warren's original EAM with Implicit Control. We provide a complete description and implementation of the Basic design for EAM System as a set of rewrite and control rules. We present the major data structures and execution algorithms that are required for efficient execution, and evaluate system performance. A detailed performance study of our system is included. Our results show that the system achieves acceptable base performance and that a number of applications benefit from the advanced search inherent to the EAM.", "paper_title": "A design and implementation of the Extended Andorra Model", "paper_id": "WOS:000304364400002"}