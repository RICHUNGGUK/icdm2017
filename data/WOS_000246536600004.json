{"auto_keywords": [{"score": 0.04865550139605982, "phrase": "kdd_process"}, {"score": 0.00481495049065317, "phrase": "association_rules"}, {"score": 0.0047787596516662, "phrase": "applicative_domains"}, {"score": 0.004550029253278477, "phrase": "iterative_and_interactive_process"}, {"score": 0.00421923944095905, "phrase": "single_query"}, {"score": 0.004062937864702115, "phrase": "typical_user"}, {"score": 0.0039124037252916055, "phrase": "extracted_knowledge"}, {"score": 0.0038683363637006902, "phrase": "previous_results"}, {"score": 0.0038247634489737142, "phrase": "new_queries"}, {"score": 0.003627800727103479, "phrase": "computational_effort"}, {"score": 0.0035331426502479687, "phrase": "kdd_systems"}, {"score": 0.003313380246267812, "phrase": "system_knowledge_base"}, {"score": 0.0031665087019813244, "phrase": "collaborative_effort"}, {"score": 0.003142668996712078, "phrase": "different_users"}, {"score": 0.0030033417337933625, "phrase": "frequent_association_rules"}, {"score": 0.0029807267909921628, "phrase": "database_relations"}, {"score": 0.0026411384812121503, "phrase": "new_class"}, {"score": 0.0025049752758014602, "phrase": "traditionally_studied_item"}, {"score": 0.0024120247307686084, "phrase": "typical_queries"}, {"score": 0.0023938516706864775, "phrase": "important_application_domains"}, {"score": 0.0023579143175099324, "phrase": "market_stock_trading"}, {"score": 0.0023225152126545067, "phrase": "web_log"}, {"score": 0.0022963142779850562, "phrase": "gene_microarrays"}, {"score": 0.002253299769886694, "phrase": "context-dependent_constraints"}, {"score": 0.002129020447793464, "phrase": "proposed_solution"}, {"score": 0.0021049977753042253, "phrase": "incremental_approach"}], "paper_keywords": [""], "paper_abstract": "In recent years, the KDD process has been advocated to be an iterative and interactive process. It is seldom the case that a user is able to answer immediately all his questions on date with a single query. On the contrary, the work-flow of the typical user consists of several steps in which he/she iteratively refines the extracted knowledge by inspecting previous results and posing new queries. Given this view of the KDD process, in order to reduce the computational effort, it becomes crucial to have KDD systems that are able to exploit past results. This is especially true in environments in which the system knowledge base is the result of many discoveries on data made separately by the collaborative effort of different users. In this paper, we consider the problem of mining frequent association rules from database relations. We first model a general, constraint-based, mining language for this task. Then, we propose an algorithm that answers such queries reusing past results. In particular, this solution is effective for a new class of constraints, called context dependent, which are more difficult than the traditionally studied item dependent constraints. Nevertheless, we show that some typical queries of important application domains, such as market stock trading, analysis of web log, and gene microarrays in bioinformatics, have context-dependent constraints. We show with a set of experiments in these application domains that the proposed solution with an incremental approach is both effective and viable.", "paper_title": "Incremental extraction of association rules in applicative domains", "paper_id": "WOS:000246536600004"}