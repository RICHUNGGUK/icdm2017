{"auto_keywords": [{"score": 0.04934553301452922, "phrase": "concurrent_systems"}, {"score": 0.00481495049065317, "phrase": "unreachability_faults"}, {"score": 0.00456159659731398, "phrase": "flow_analysis_technique"}, {"score": 0.00445712058827745, "phrase": "unreachable_states"}, {"score": 0.004000224886494969, "phrase": "cheung"}, {"score": 0.003938891850787668, "phrase": "kramer"}, {"score": 0.003760385494931853, "phrase": "concurrent_system"}, {"score": 0.0036178264212372497, "phrase": "finite_state_machine"}, {"score": 0.0035076666315744525, "phrase": "process_execution_states"}, {"score": 0.003246672441842787, "phrase": "dependency_sets"}, {"score": 0.0031477782772867655, "phrase": "spurious_paths"}, {"score": 0.003051887221639784, "phrase": "execution_sequences"}, {"score": 0.002382541887825168, "phrase": "system_size"}, {"score": 0.002345944657572499, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Concurrency", " Distributed systems", " Reachability analysis", " Static analysis"], "paper_abstract": "We present a flow analysis technique for detecting unreachable states and actions in concurrent systems. It is an enhancement of the approach by Cheung and Kramer. Each process of a concurrent system is modeled as a finite state machine, whose states represent process execution states and whose transitions are labeled by actions. We construct dependency sets incrementally and eliminate spurious paths by checking the execution sequences of actions. We prove mathematically that our algorithm can detect more unreachability faults than the well-known Reif/Smolka and Cheung/Kramer algorithms. The algorithm is easy to manage and its complexity is still polynomial to the system size. Case studies on two commonly used communication protocols show that the technique is effective. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "An enhanced flow analysis technique for detecting unreachability faults in concurrent systems", "paper_id": "WOS:000303092700015"}