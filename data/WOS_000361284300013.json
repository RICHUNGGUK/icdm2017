{"auto_keywords": [{"score": 0.03431168182673599, "phrase": "vm"}, {"score": 0.004347972379250724, "phrase": "desktopping_software"}, {"score": 0.004089725258435817, "phrase": "user's_input_events"}, {"score": 0.003946195919158241, "phrase": "corresponding_display_changes"}, {"score": 0.0036740168936985314, "phrase": "remote_machine"}, {"score": 0.003636692152882991, "phrase": "local_input_devices"}, {"score": 0.003334309053314909, "phrase": "remote_server"}, {"score": 0.0032836104153151973, "phrase": "virtual_machine"}, {"score": 0.002949598537993663, "phrase": "vm_deterministic_replay_capabilities"}, {"score": 0.0028170314398963704, "phrase": "network_bandwidth_consumption"}, {"score": 0.0027883885425383534, "phrase": "server-side_cpu_utilization"}, {"score": 0.0027459678326877744, "phrase": "remote_desktopping_tool"}, {"score": 0.002678148999030266, "phrase": "vnc"}, {"score": 0.002479150189700726, "phrase": "vnc's_network_bandwidth_consumption"}, {"score": 0.0023079225317714815, "phrase": "popular_graphics-intensive_applications"}, {"score": 0.002261204313587616, "phrase": "flip_side"}, {"score": 0.0021049977753042253, "phrase": "user-perceived_latency"}], "paper_keywords": ["Virtualization", " Record/Replay", " Deterministic Replay", " Remote Desktop", " Cloud Computing", " Virtual Desktop Infrastructure"], "paper_abstract": "Accessing the display of a computer remotely, is popularly called \"remote desktopping(1)\". Remote desktopping software installs at both the user-facing client computer and the remote server computer; it simulates user's input events at server, and streams the corresponding display changes to client, thus providing an illusion to the user of controlling the remote machine using local input devices (e.g., keyboard/mouse). Many such remote desktopping tools are widely used. We show that if the remote server is a virtual machine (VM) and the client is reasonably powerful (e.g., current laptop and desktop grade hardware), VM deterministic replay capabilities can be used adaptively to significantly reduce the network bandwidth consumption and server-side CPU utilization of a remote desktopping tool. We implement these optimizations in a tool based on Qemu/KVM virtualization platform and VNC remote desktopping platform. Our tool reduces VNC's network bandwidth consumption by up to 9x and server-side CPU utilization by up to 56% for popular graphics-intensive applications. On the flip side, our techniques consume higher CPU/memory/disk resources at the client. The effect of our optimizations on user-perceived latency is negligible.", "paper_title": "Improving Remote Desktopping through Adaptive Record/Replay", "paper_id": "WOS:000361284300013"}