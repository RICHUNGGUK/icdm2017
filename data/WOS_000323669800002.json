{"auto_keywords": [{"score": 0.037448329479846526, "phrase": "jets"}, {"score": 0.00481495049065317, "phrase": "many-parallel-task_workflows"}, {"score": 0.004611369021812453, "phrase": "well-established_paradigm"}, {"score": 0.004537254814246843, "phrase": "loosely_coupled_applications"}, {"score": 0.00441635700580562, "phrase": "large-scale_computing_systems"}, {"score": 0.004252469672259375, "phrase": "model's_existing_implementations"}, {"score": 0.004028796143006953, "phrase": "multiprocessing_applications"}, {"score": 0.003921393143378986, "phrase": "vast_array"}, {"score": 0.003879234831701853, "phrase": "parallel_applications"}, {"score": 0.0037150687722055727, "phrase": "many-task_workloads"}, {"score": 0.00342568771304873, "phrase": "high_performance_support"}, {"score": 0.0033888405252810927, "phrase": "many-parallel-task_computing"}, {"score": 0.003210446135114967, "phrase": "highly_concurrent_approach"}, {"score": 0.0031759067385562553, "phrase": "parallel_task_dispatch"}, {"score": 0.003124790943886441, "phrase": "new_capabilities"}, {"score": 0.002992456421856034, "phrase": "zeptoos_linux_operating_system"}, {"score": 0.0028348690177346448, "phrase": "multilevel_many-parallel-task_scheduling_systems"}, {"score": 0.0025031188149336257, "phrase": "user_processes"}, {"score": 0.0024628046987344846, "phrase": "multiprocessing_application_invocation"}, {"score": 0.0024231382864800173, "phrase": "messaging_fabric"}, {"score": 0.002234165013865669, "phrase": "jets_architecture"}, {"score": 0.0021627595586364724, "phrase": "synthetic_benchmarks"}, {"score": 0.002127915423138391, "phrase": "mptc_application"}, {"score": 0.0021049977753042253, "phrase": "molecular_dynamics"}], "paper_keywords": ["MPI", " MTC", " MPTC", " Swift", " JETS", " NAMD", " Workflow"], "paper_abstract": "Many-task computing is a well-established paradigm for implementing loosely coupled applications (tasks) on large-scale computing systems. However, few of the model's existing implementations provide efficient, low-latency support for executing tasks that are tightly coupled multiprocessing applications. Thus, a vast array of parallel applications cannot readily be used effectively within many-task workloads. In this work, we present JETS, a middleware component that provides high performance support for many-parallel-task computing (MPTC). JETS is based on a highly concurrent approach to parallel task dispatch and on new capabilities now available in the MPICH2 MPI implementation and the ZeptoOS Linux operating system. JETS represents an advance over the few known examples of multilevel many-parallel-task scheduling systems: it more efficiently schedules and launches many short-duration parallel application invocations; it overcomes the challenges of coupling the user processes of each multiprocessing application invocation via the messaging fabric; and it concurrently manages many application executions in various stages. We report here on the JETS architecture and its performance on both synthetic benchmarks and an MPTC application in molecular dynamics.", "paper_title": "JETS: Language and System Support for Many-Parallel-Task Workflows", "paper_id": "WOS:000323669800002"}