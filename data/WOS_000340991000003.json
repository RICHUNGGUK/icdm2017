{"auto_keywords": [{"score": 0.04745358435978179, "phrase": "network"}, {"score": 0.00481495049065317, "phrase": "kernighan-lin"}, {"score": 0.004637478829869904, "phrase": "application_mapping"}, {"score": 0.004143196873246147, "phrase": "basic_kernighan-lin_graph"}, {"score": 0.004104456271230213, "phrase": "bi-partitioning_algorithm"}, {"score": 0.003990385737207714, "phrase": "core_graphs"}, {"score": 0.003401148484767927, "phrase": "noc_topologies"}, {"score": 0.0030097975788892896, "phrase": "butterfly-fat-tree"}, {"score": 0.0028715299874549245, "phrase": "suitable_post-processing_schemes"}, {"score": 0.0026633568650501873, "phrase": "basic_solution"}, {"score": 0.002564985233317994, "phrase": "partitioning_algorithm"}, {"score": 0.0025171669791790438, "phrase": "significant_improvement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Application mapping", " Network-on-Chip", " System-on-Chip", " Intellectual property", " Topology"], "paper_abstract": "This paper extends the basic Kernighan-Lin graph bi-partitioning algorithm for partitioning core graphs of applications to be designed using Network-on-Chip (NoC) concept. Mapping techniques have been developed for three different types of NoC topologies - Mesh, Mesh-of-Tree (MoT), and Butterfly-Fat-Tree (BFT). Suitable post-processing schemes have been developed to improve upon the basic solution produced by the partitioning algorithm. Significant improvement in both static and dynamic performances could be observed, compared to many existing approaches reported in the literature. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Extending Kernighan-Lin partitioning heuristic for application mapping onto Network-on-Chip", "paper_id": "WOS:000340991000003"}