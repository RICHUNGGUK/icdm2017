{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "line-based_qca_memory_cell_design_through_dual_phase_clocking"}, {"score": 0.004108742905942481, "phrase": "line-based_qca_memory_cells"}, {"score": 0.0038431888954930083, "phrase": "qca_lines"}, {"score": 0.0037480753312398754, "phrase": "best_known_line-based_memory_cell_implementation"}, {"score": 0.003334309053314909, "phrase": "conventional_qca_clocking_scheme"}, {"score": 0.0031186510842824626, "phrase": "proposed_memory_cell"}, {"score": 0.0027974705482714884, "phrase": "clock_design"}, {"score": 0.002751075263422475, "phrase": "denser_qca_system"}, {"score": 0.0024883835349005863, "phrase": "clock_cycle"}, {"score": 0.0022696277881969896, "phrase": "qcadesigner_simulator"}, {"score": 0.0021049977753042253, "phrase": "proposed_qca_memory_cell"}], "paper_keywords": ["Clocking", " nanoarchitecture", " memory", " quantum-dot cellular automata (QCA)"], "paper_abstract": "This paper describes a line-based, quantum-dot cellular automata (QCA) memory cell design that is synchronized by a dual-phase clocking scheme. In line-based QCA memory cells, data bits are stored oscillating along QCA lines. The best known line-based memory cell implementation requires three new clocking zones in addition to the four clocking zones defined by the conventional QCA clocking scheme and utilizes three parallel clocking zones per cell. The proposed memory cell requires only two new clocking zones and utilizes two parallel clock zones per memory cell; permitting less CMOS circuity for clock design and denser QCA system implementations. Furthermore, read throughput is improved to one operation per clock cycle (from one read per two clock cycles). Simulations with the QCADesigner simulator are performed to verify the functionality of the proposed QCA memory cell.", "paper_title": "Improving Line-Based QCA Memory Cell Design Through Dual Phase Clocking", "paper_id": "WOS:000261447900007"}