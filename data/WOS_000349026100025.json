{"auto_keywords": [{"score": 0.04363165242616648, "phrase": "dsmm"}, {"score": 0.033487695187782704, "phrase": "dsmm_languages"}, {"score": 0.00481495049065317, "phrase": "domain-specific_meta-modelling_languages"}, {"score": 0.004575272950516775, "phrase": "general-purpose_meta-modelling_languages"}, {"score": 0.004511993992708625, "phrase": "mof."}, {"score": 0.004208427318712072, "phrase": "domain-specific_meta-modelling"}, {"score": 0.004054931951058077, "phrase": "customised_domain-specific_meta-modelling_primitives"}, {"score": 0.0038708810091769856, "phrase": "specific_domain"}, {"score": 0.00372965096877929, "phrase": "meta-model_families"}, {"score": 0.003593555152077465, "phrase": "ad_hoc_methods"}, {"score": 0.003543804852018315, "phrase": "unnecessary_complexity"}, {"score": 0.002942495422585405, "phrase": "systematic_engineering"}, {"score": 0.0029152570900178956, "phrase": "dsmm_architectures"}, {"score": 0.0028087949095629955, "phrase": "meta-modelling_primitives"}, {"score": 0.0026687115458522326, "phrase": "flexible_approach"}, {"score": 0.0026317312518257803, "phrase": "textual_concrete_syntaxes"}, {"score": 0.0025592969422491476, "phrase": "existing_model_management_languages"}, {"score": 0.002523828967909659, "phrase": "model-to-model_transformation"}, {"score": 0.0024429654627197393, "phrase": "code_generation"}, {"score": 0.002375714262344562, "phrase": "multi-level_setting"}, {"score": 0.0023210846870653757, "phrase": "practical_use"}, {"score": 0.002164602220179823, "phrase": "working_implementation"}, {"score": 0.0021049977753042253, "phrase": "metadepth_tool"}], "paper_keywords": ["Model-driven engineering", " Multi-level meta-modelling", " Domain-specific meta-modelling", " Textual concrete syntax", " METADEPTH"], "paper_abstract": "Domain-specific modelling languages are normally defined through general-purpose meta-modelling languages like the MOF. While this is satisfactory for many model-driven engineering (MDE) projects, several researchers have identified the need for domain-specific meta-modelling (DSMM) languages. These provide customised domain-specific meta-modelling primitives aimed at the definition of modelling languages for a specific domain, as well as the construction of meta-model families. Unfortunately, current approaches to DSMM rely on ad hoc methods which add unnecessary complexity to the realization of DSMM in practice. Hence, the goal of this paper is to simplify the definition and usage of DSMM languages. For this purpose, we apply multi-level meta-modelling for the systematic engineering of DSMM architectures. Our method integrates techniques to control the meta-modelling primitives offered to the users of the DSMM languages, provides a flexible approach to define textual concrete syntaxes for DSMM languages, and extends existing model management languages (for model-to-model transformation, in-place transformation and code generation) to work in a multi-level setting, thus enabling the practical use of DSMM in MDE. As a proof of concept, we report on a working implementation of these ideas in the MetaDepth tool.", "paper_title": "Model-driven engineering with domain-specific meta-modelling languages", "paper_id": "WOS:000349026100025"}