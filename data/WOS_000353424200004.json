{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minimal_abc_index"}, {"score": 0.004637478829869904, "phrase": "atom-bond_connectivity"}, {"score": 0.00457988297042977, "phrase": "abc"}, {"score": 0.0036553070575015344, "phrase": "recently_introduced_molecular_structure_descriptor"}, {"score": 0.0031448288291084, "phrase": "general_structure"}, {"score": 0.003047776993499616, "phrase": "computer_search_algorithms"}, {"score": 0.0029722900280316216, "phrase": "lin_et_al"}, {"score": 0.0026055251533586804, "phrase": "tree_degree_sequences"}, {"score": 0.0023567394135360032, "phrase": "mpi"}], "paper_keywords": [""], "paper_abstract": "The atom-bond connectivity (ABC) index of a graph G=(V,E) is defined as ABC(G)=Sigma(vivj is an element of E)root[d(v(i))+d(v(j))-2]/[d(v(i))d(v(j))], where d(v(i)) denotes the degree of vertex v(i) of G. This recently introduced molecular structure descriptor found interesting applications in chemistry. However, the problem of characterizing trees with minimal ABC index remains open. In attempts to guess the general structure of such trees, some computer search algorithms were developed. Lin et al [MATCH Commun. Math. Comput. Chem. 72 (2014)] presented an algorithm based on tree degree sequences, which can be parallelized easily. In this work we implement the algorithm with MPI + OpenMP, and identify all n - vertex tree(s) with minimal ABC index for n <= 400 within 23 hours on a workstation group with 36 CPU cores.", "paper_title": "Parallel Search Trees with Minimal ABC Index with MPI plus OpenMP", "paper_id": "WOS:000353424200004"}