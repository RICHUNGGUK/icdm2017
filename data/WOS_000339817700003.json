{"auto_keywords": [{"score": 0.048929739366992464, "phrase": "data_streams"}, {"score": 0.008643749672442913, "phrase": "fixed_number"}, {"score": 0.008235197035282532, "phrase": "kernel_density_estimation"}, {"score": 0.007092274656768956, "phrase": "proposed_algorithm"}, {"score": 0.006359018834878521, "phrase": "dm-kde_sequence_entries"}, {"score": 0.005090318222971428, "phrase": "somke"}, {"score": 0.00481495049065317, "phrase": "kde_estimators"}, {"score": 0.004605147081797856, "phrase": "traditional_density_estimation_methods"}, {"score": 0.004404445045826858, "phrase": "density_estimation"}, {"score": 0.004229556887896042, "phrase": "intensive_memory_allocation_requirement"}, {"score": 0.004078078530972285, "phrase": "space_complexity"}, {"score": 0.004028796143006953, "phrase": "novel_density_estimation_method"}, {"score": 0.004012500850311087, "phrase": "dm-kde"}, {"score": 0.00374531366198605, "phrase": "kde_estimator"}, {"score": 0.0036701570847323447, "phrase": "kernel_components"}, {"score": 0.003453584878128719, "phrase": "algorithm_m-kde"}, {"score": 0.0032497506915502876, "phrase": "storage_space"}, {"score": 0.0030828215204304473, "phrase": "probability_density_functions"}, {"score": 0.003057910095857785, "phrase": "arbitrary_time"}, {"score": 0.00303319936111073, "phrase": "entire_time"}, {"score": 0.0029602552900111433, "phrase": "obtained_estimation_model"}, {"score": 0.0027741761880779535, "phrase": "distinctive_advantage"}, {"score": 0.0024862418814045723, "phrase": "higher_on-line_computation"}, {"score": 0.0022830706430588482, "phrase": "density_estimation_accuracy"}, {"score": 0.002264607102799332, "phrase": "running_time"}, {"score": 0.0021569129153653777, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_method"}], "paper_keywords": ["kernel density estimation", " Kullback-Leibler divergence", " data streams", " kernel width", " time and space complexity"], "paper_abstract": "In many data stream mining applications, traditional density estimation methods such as kernel density estimation, reduced set density estimation can not be applied to the density estimation of data streams because of their high computational burden, processing time and intensive memory allocation requirement. In order to reduce the time and space complexity, a novel density estimation method Dm-KDE over data streams based on the proposed algorithm m-KDE which can be used to design a KDE estimator with the fixed number of kernel components for a dataset is proposed. In this method, Dm-KDE sequence entries are created by algorithm m-KDE instead of all kernels obtained from other density estimation methods. In order to further reduce the storage space, Dm-KDE sequence entries can be merged by calculating their KL divergences. Finally, the probability density functions over arbitrary time or entire time can be estimated through the obtained estimation model. In contrast to the state-of-the-art algorithm SOMKE, the distinctive advantage of the proposed algorithm Dm-KDE exists in that it can achieve the same accuracy with much less fixed number of kernel components such that it is suitable for the scenarios where higher on-line computation about the kernel density estimation over data streams is required.We compare Dm-KDE with SOMKE and M-kernel in terms of density estimation accuracy and running time for various stationary datasets. We also apply Dm-KDE to evolving data streams. Experimental results illustrate the effectiveness of the proposed method.", "paper_title": "Dm-KDE: dynamical kernel density estimation by sequences of KDE estimators with fixed number of components over data streams", "paper_id": "WOS:000339817700003"}