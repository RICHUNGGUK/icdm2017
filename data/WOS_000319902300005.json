{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "context-aware_services"}, {"score": 0.00468627326602559, "phrase": "based_social_simulation"}, {"score": 0.004359625030298944, "phrase": "rich_information_source"}, {"score": 0.004300951511110487, "phrase": "context-aware_applications"}, {"score": 0.004167086373747367, "phrase": "living_labs"}, {"score": 0.0035898158129721003, "phrase": "ubikmobile_architecture"}, {"score": 0.0033393377529146893, "phrase": "simulated_environment"}, {"score": 0.003294350220187021, "phrase": "primary_goal"}, {"score": 0.00326469463991041, "phrase": "ubikmobile"}, {"score": 0.0030505976034245234, "phrase": "main_contribution"}, {"score": 0.0029959082125682918, "phrase": "real_smartphone"}, {"score": 0.0028634235895823594, "phrase": "simulated_world"}, {"score": 0.0027741761880779535, "phrase": "manual_tests"}, {"score": 0.0025572160146590623, "phrase": "automatic_tests"}, {"score": 0.0023253967212081626, "phrase": "main_design_decisions"}, {"score": 0.0022427071130840647, "phrase": "interested_reader"}, {"score": 0.0021049977753042253, "phrase": "case_studies"}], "paper_keywords": ["Mobile devices", " Android", " context-aware services", " testing", " agent based social simulation"], "paper_abstract": "Smartphones are increasingly popular each year and have more and better sensors. These sensors are a rich information source for creating context-aware applications. Testing these applications directly in living labs is very expensive since it involves, among other things, setting up a reproduction of the environment where the application or service under test will be executed. This paper proposes the UbikMobile architecture which aims to provide developers with tools to test context-aware services based on smartphones in a simulated environment. The primary goal in UbikMobile is to reduce the faults in the software as much as possible. The main contribution is that a real smartphone, and not only an emulator, can be connected to the simulated world to conduct: (1) manual tests (i.e. the developer controls an avatar in the simulation); and, (2) automatic tests (i.e. agents in the simulation are capable of interacting automatically with the smartphone). This paper shows the main design decisions in the architecture presented to allow the interested reader to reproduce or to extend our results. It Also includes a number of case studies to illustrate how to use the architecture.", "paper_title": "Testing context-aware services based on smartphones by agent based social simulation", "paper_id": "WOS:000319902300005"}