{"auto_keywords": [{"score": 0.04905613790748979, "phrase": "ilp"}, {"score": 0.04177811480943862, "phrase": "ilp_systems"}, {"score": 0.032681640243450126, "phrase": "memory_requirements"}, {"score": 0.02471605007224669, "phrase": "data_sets"}, {"score": 0.00481495049065317, "phrase": "inductive_logic_programming_systems"}, {"score": 0.00476323161560059, "phrase": "inductive_logic_programming"}, {"score": 0.004561826854638056, "phrase": "machine_learning"}, {"score": 0.004464326432401002, "phrase": "excellent_framework"}, {"score": 0.00441635700580562, "phrase": "multi-relational_data_mining_applications"}, {"score": 0.004161553532799662, "phrase": "complex_and_relevant_industrial_and_scientific_problems"}, {"score": 0.004028796143006953, "phrase": "valuable_models"}, {"score": 0.003921393143378986, "phrase": "long_running_times"}, {"score": 0.003879234831701853, "phrase": "large_amounts"}, {"score": 0.0036950408193035284, "phrase": "fundamental_issues"}, {"score": 0.003635600104609725, "phrase": "direct_impact"}, {"score": 0.003352388337911934, "phrase": "indexing_mechanisms"}, {"score": 0.003298441494378465, "phrase": "underlying_logic_programming_system"}, {"score": 0.0031417377608722, "phrase": "novel_data_structures"}, {"score": 0.0030086877092638945, "phrase": "new_lazy_evaluation_technique"}, {"score": 0.002944284514509205, "phrase": "hypothesis_space"}, {"score": 0.0027741761880779535, "phrase": "april_ilp_system"}, {"score": 0.0026280534600940137, "phrase": "significant_improvements"}, {"score": 0.002599763359352916, "phrase": "running_time"}, {"score": 0.0024231382864800173, "phrase": "combined_techniques"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["inductive logic programming", " efficiency", " data structures", " indexing"], "paper_abstract": "Inductive logic programming (ILP) is a sub-field of machine learning that provides an excellent framework for multi-relational data mining applications. The advantages of ILP have been successfully demonstrated in complex and relevant industrial and scientific problems. However, to produce valuable models, ILP systems often require long running times and large amounts of memory. In this paper we address fundamental issues that have direct impact on the efficiency of ILP systems. Namely, we discuss how improvements in the indexing mechanisms of an underlying logic programming system benefit ILP performance. Furthermore, we propose novel data structures to reduce memory requirements and we suggest a new lazy evaluation technique to search the hypothesis space more efficiently. These proposals have been implemented in the April ILP system and evaluated using several well-known data sets. The results observed show significant improvements in running time without compromising the accuracy of the models generated. Indeed, the combined techniques achieve several order of magnitudes speedup in some data sets. Moreover, memory requirements are reduced in nearly half of the data sets. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Improving the efficiency of inductive logic programming systems", "paper_id": "WOS:000262453600004"}