{"auto_keywords": [{"score": 0.049584128839210984, "phrase": "web_service_composition"}, {"score": 0.041233207808256504, "phrase": "system_reliability"}, {"score": 0.00481495049065317, "phrase": "service_composition"}, {"score": 0.004691465925553365, "phrase": "distributed_model"}, {"score": 0.004618893461411858, "phrase": "new_web_service"}, {"score": 0.004523865550323285, "phrase": "existing_primitive_or_other_composite_web_services"}, {"score": 0.004317109072311102, "phrase": "proposed_composition_languages"}, {"score": 0.0036363418376496484, "phrase": "service_component_architecture"}, {"score": 0.0034519997658752598, "phrase": "language-independent_way"}, {"score": 0.0033633514001658086, "phrase": "service_components"}, {"score": 0.0032094634756436595, "phrase": "formal_service_component_signature_model"}, {"score": 0.003078577062864183, "phrase": "sca_assembly_model"}, {"score": 0.002983916676307492, "phrase": "language-independent_dynamic_behavior_model"}, {"score": 0.0028622019660721363, "phrase": "service_component"}, {"score": 0.0028325548627901004, "phrase": "port_activities"}, {"score": 0.002759769970554556, "phrase": "failure_behaviors"}, {"score": 0.00264717437918872, "phrase": "nhpp"}, {"score": 0.0024103044278902916, "phrase": "port_expressions"}, {"score": 0.002360607691114015, "phrase": "overall_system_reliability"}, {"score": 0.0022760856906838814, "phrase": "online_shop_example"}, {"score": 0.0022524959504997303, "phrase": "ibm_web_site"}, {"score": 0.0021381565332182773, "phrase": "testing_bed"}, {"score": 0.0021049977753042253, "phrase": "port_reliability"}], "paper_keywords": ["Service composition", " service component architecture", " reliability computing", " NHPP"], "paper_abstract": "Web service composition is a distributed model to construct new web service on top of existing primitive or other composite web services. However, current service technologies, including proposed composition languages, do not address the reliability of web service composition. Thus, it is hard to predict the system reliability. In this paper, we propose a method to compute system reliability based on Service Component Architecture (SCA), a standard that provides a language-independent way to define and compose service components in the system. We first present a formal service component signature model with respect to the specification of the SCA assembly model, and then propose a language-independent dynamic behavior model for specifying the interface behavior of the service component by port activities. Then, the failure behaviors of ports are defined through the Nonhomogeneous Poisson Process (NHPP). Based on the semantics of ports, several rules have been generated to compute reliability of port expressions, thus the overall system reliability can be automatically computed. An Online Shop example from IBM web site is given to illustrate our method, together with a testing bed to calculate port reliability.", "paper_title": "Port-Based Reliability Computing for Service Composition", "paper_id": "WOS:000307789100010"}