{"auto_keywords": [{"score": 0.05007476057538646, "phrase": "distributed_algorithms"}, {"score": 0.04674469131400006, "phrase": "gp"}, {"score": 0.015570453146579608, "phrase": "genetic_programming"}, {"score": 0.004229158339021651, "phrase": "large-scale_experimental_study"}, {"score": 0.004030695216899165, "phrase": "six_different_program_representations"}, {"score": 0.0038415095105632157, "phrase": "simulation_environment"}, {"score": 0.0037322713756404295, "phrase": "asynchronous_computation"}, {"score": 0.0034392837410790293, "phrase": "order_message_delivery"}, {"score": 0.0033737457695128233, "phrase": "high_probability"}, {"score": 0.003215295260684715, "phrase": "established_gp_approaches"}, {"score": 0.002850875630787708, "phrase": "novel_rule-based_gp_methods"}, {"score": 0.0027830917623582903, "phrase": "characteristic_difficulties"}, {"score": 0.0024556852466581527, "phrase": "viable_method"}, {"score": 0.002273605493468005, "phrase": "superior_performance"}, {"score": 0.0021356322417874106, "phrase": "interesting_idea"}], "paper_keywords": ["Critical section", " distributed algorithms", " election", " fraglets", " GCD", " genetic programming", " LGP", " mutual exclusion", " rule-based genetic programming", " SGP"], "paper_abstract": "In this paper, we evaluate the applicability of genetic programming (GP) for the evolution of distributed algorithms. We carry out a large-scale experimental study in which we tackle three well-known problems from distributed computing with six different program representations. For this purpose, we first define a simulation environment in which phenomena such as asynchronous computation at changing speed and messages taking over each other, i.e., out-of-order message delivery, occur with high probability. Second, we define extensions and adaptations of established GP approaches (such as tree-based and linear GP) in order to make them suitable for representing distributed algorithms. Third, we introduce novel rule-based GP methods designed especially with the characteristic difficulties of evolving algorithms (such as epistasis) in mind. Based on our extensive experimental study of these approaches, we conclude that GP is indeed a viable method for evolving non-trivial, deterministic, non-approximative distributed algorithms. Furthermore, one of the two rule-based approaches is shown to exhibit superior performance in most of the tasks and thus can be considered as an interesting idea also for other problem domains.", "paper_title": "Evolving Distributed Algorithms With Genetic Programming", "paper_id": "WOS:000302540100006"}