{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reflective_middleware"}, {"score": 0.007952097325713545, "phrase": "middleware-based_systems"}, {"score": 0.0068615321680325254, "phrase": "access_control_mechanisms"}, {"score": 0.004669845451682529, "phrase": "implementation_details"}, {"score": 0.004622450915803531, "phrase": "middleware_platform"}, {"score": 0.004260134699483774, "phrase": "new_challenges"}, {"score": 0.004216880725292, "phrase": "access_control"}, {"score": 0.003966388754366831, "phrase": "reflective_entities"}, {"score": 0.0037498152007206815, "phrase": "traditional_middleware"}, {"score": 0.0036740168936985314, "phrase": "high_adaptability"}, {"score": 0.0035269696779744266, "phrase": "proper_access_control_mechanisms"}, {"score": 0.0034911335714333507, "phrase": "potential_access_control_holes"}, {"score": 0.003120099687922751, "phrase": "reflection_capabilities"}, {"score": 0.002690406375639144, "phrase": "possible_access_control_points"}, {"score": 0.0024918548761791435, "phrase": "mbeans"}, {"score": 0.0024290078627410765, "phrase": "java"}, {"score": 0.002416589459425828, "phrase": "class_loaders"}, {"score": 0.002331641523873951, "phrase": "identified_access_control_points"}, {"score": 0.0021928902836049384, "phrase": "pkuas."}, {"score": 0.0021049977753042253, "phrase": "performance_overheads"}], "paper_keywords": ["reflective middleware", " access control", " J2EE"], "paper_abstract": "Reflective middleware opens up the implementation details of middleware platform and applications at runtime for improving the adaptability of middleware-based systems. However, such openness brings new challenges to access control of the middleware-based systems. Some users can access the system via reflective entities, which sometimes cannot be protected by access control mechanisms of traditional middleware. To deliver high adaptability securely, reflective middleware should be equipped with proper access control mechanisms for potential access control holes induced by reflection. One reason of integrating these mechanisms in reflective middleware is that one goal of reflective middleware is to equip applications with reflection capabilities as transparent as possible. This paper studies how to design a reflective J2EE middleware - PKUAS with access control in mind. At first, a computation model of reflective system is built to identify all possible access control points induced by reflection. Then a set of access control mechanisms, including the wrapper of MBeans and a hierarchy of Java class loaders, are equipped for controlling the identified access control points. These mechanisms together with J2EE access control mechanism form the access control framework for PKUAS. The paper evaluates the security and the performance overheads of the framework in quality and quantity.", "paper_title": "An Access Control Framework for Reflective Middleware", "paper_id": "WOS:000261179300002"}