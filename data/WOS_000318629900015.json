{"auto_keywords": [{"score": 0.03679418729719719, "phrase": "proof_obligations"}, {"score": 0.013249530217260627, "phrase": "linear_dependent_types"}, {"score": 0.00481495049065317, "phrase": "time_complexity_analysis"}, {"score": 0.0047559432344272, "phrase": "higher-order_functional_programs"}, {"score": 0.004101579688745222, "phrase": "efficient_inference_algorithm"}, {"score": 0.0039281997063335735, "phrase": "p_c_f_term"}, {"score": 0.0033873366086549735, "phrase": "output_type_judgement"}, {"score": 0.0033457659530207306, "phrase": "derivable_iff"}, {"score": 0.0031260524791486347, "phrase": "already_known_relative_completeness"}, {"score": 0.002814454488050123, "phrase": "false_positives"}, {"score": 0.0025972447844047515, "phrase": "original_problem"}, {"score": 0.0025653454708053987, "phrase": "simple_p_c_f_terms"}, {"score": 0.0022117133940361025, "phrase": "automatic_or_semi-automatic_verification"}, {"score": 0.002144400314994328, "phrase": "ongoing_experimental_evaluation"}, {"score": 0.0021049977753042253, "phrase": "encouraging_results"}], "paper_keywords": ["Performance", " Theory", " Verification", " Functional Programming", " Higher-order Types", " Linear Logic", " Resource Consumption", " Complexity Analysis"], "paper_abstract": "We show that time complexity analysis of higher-order functional programs can be effectively reduced to an arguably simpler (although computationally equivalent) verification problem, namely checking first-order inequalities for validity. This is done by giving an efficient inference algorithm for linear dependent types which, given a P C F term, produces in output both a linear dependent type and a cost expression for the term, together with a set of proof obligations. Actually, the output type judgement is derivable iff all proof obligations are valid. This, coupled with the already known relative completeness of linear dependent types, ensures that no information is lost, i.e., that there are no false positives or negatives. Moreover, the procedure reflects the difficulty of the original problem: simple P C F terms give rise to sets of proof obligations which are easy to solve. The latter can then be put in a format suitable for automatic or semi-automatic verification by external solvers. Ongoing experimental evaluation has produced encouraging results, which are briefly presented in the paper.", "paper_title": "The Geometry of Types", "paper_id": "WOS:000318629900015"}