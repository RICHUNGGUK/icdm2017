{"auto_keywords": [{"score": 0.041271015915903264, "phrase": "different_modules"}, {"score": 0.0324559577938155, "phrase": "bug_information"}, {"score": 0.013690085606685286, "phrase": "code_review"}, {"score": 0.009754119862259903, "phrase": "bug_models"}, {"score": 0.00481495049065317, "phrase": "ever-intensifying_time"}, {"score": 0.004740823885631586, "phrase": "market_pressure"}, {"score": 0.004704187604192605, "phrase": "great_challenges"}, {"score": 0.00464976086880886, "phrase": "pre-silicon_design_phase"}, {"score": 0.00445550467119693, "phrase": "pre-silicon_design"}, {"score": 0.004336115760817672, "phrase": "time-consuming_functional_verification_and_code_review"}, {"score": 0.004138813595009761, "phrase": "critical_issue"}, {"score": 0.0037853015963603682, "phrase": "designers'_experiences"}, {"score": 0.003627028894710926, "phrase": "high_risks"}, {"score": 0.003557283483525861, "phrase": "bug-free_modules"}, {"score": 0.003488874535154583, "phrase": "buggy_modules"}, {"score": 0.0031906984691667246, "phrase": "novel_framework"}, {"score": 0.003045355729156972, "phrase": "hardware_designs"}, {"score": 0.0029292922955739963, "phrase": "machine_learning_techniques"}, {"score": 0.002861782260525497, "phrase": "design_characteristics"}, {"score": 0.002668420182908979, "phrase": "current_design"}, {"score": 0.0025172781808293827, "phrase": "efficient_functional_verification"}, {"score": 0.002421291757425244, "phrase": "proposed_pre-silicon_bug_forecast_framework"}, {"score": 0.0022664208122072657, "phrase": "different_learning_techniques"}, {"score": 0.002248863090203165, "phrase": "different_sets"}, {"score": 0.0021715177915174375, "phrase": "experimental_results"}, {"score": 0.002137999646917136, "phrase": "appropriate_learning_techniques"}], "paper_keywords": ["Bug forecast", " code review", " design characteristics", " functional verification", " machine learning"], "paper_abstract": "The ever-intensifying time-to-market pressure imposes great challenges on the pre-silicon design phase of hardware. Before the tape-out, a pre-silicon design has to be thoroughly inspected by time-consuming functional verification and code review to exclude bugs. For functional verification and code review, a critical issue determining their efficiency is the allocation of resources (e.g., computational resources and manpower) to different modules of a design, which is conventionally guided by designers' experiences. Such practices, though simple and straightforward, may take high risks of wasting resources on bug-free modules or missing bugs in buggy modules, and thus could affect the success and timeline of the tape-out. In this paper, we propose a novel framework called pre-silicon bug forecast to predict the bug information of hardware designs. In this framework, bug models are built via machine learning techniques to characterize the relationship between design characteristics and the bug information, which can be leveraged to predict how bugs distribute in different modules of the current design. Such predicted bug information is adequate to regulate the resources among different modules to achieve efficient functional verification and code review. To evaluate the effectiveness of the proposed pre-silicon bug forecast framework, we conducted detailed experiments on several open-source hardware projects. Moreover, we also investigate the impacts of different learning techniques and different sets of characteristic on the performance of bug models. Experimental results show that with appropriate learning techniques and characteristics, about 90% modules could be correctly predicted as buggy or clean and the number of bugs of each module could also be accurately predicted.", "paper_title": "Pre-Silicon Bug Forecast", "paper_id": "WOS:000331974600010"}