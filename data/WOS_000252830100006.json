{"auto_keywords": [{"score": 0.048868122179027085, "phrase": "branch_queries"}, {"score": 0.04191047267508905, "phrase": "tag_stream_index"}, {"score": 0.00481495049065317, "phrase": "xml_document"}, {"score": 0.004633429997452688, "phrase": "branch_query_processing"}, {"score": 0.004545240514015278, "phrase": "core_operation"}, {"score": 0.0044873778175404475, "phrase": "xml_query_processing"}, {"score": 0.004235938758522453, "phrase": "based_twig_join_algorithms"}, {"score": 0.004076157223660074, "phrase": "twig_queries"}, {"score": 0.0034282732966589478, "phrase": "tag_stream_index_perform"}, {"score": 0.003362944428837724, "phrase": "large_document"}, {"score": 0.0032359856233193504, "phrase": "novel_index"}, {"score": 0.0031743093007496736, "phrase": "clustered_chain_path_index"}, {"score": 0.0030741085942960814, "phrase": "novel_labeling_scheme"}, {"score": 0.002977061391551628, "phrase": "efficient_support"}, {"score": 0.0027039502536908137, "phrase": "xml"}, {"score": 0.002585081657512565, "phrase": "efficient_algorithms"}, {"score": 0.0025521085778978042, "phrase": "kmp-match-path"}, {"score": 0.002259054486157494, "phrase": "experimental_results"}, {"score": 0.0022159566043745724, "phrase": "proposed_query_processing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "good_scalability"}], "paper_keywords": ["XML", " index", " clustered chain path", " CCPI", " TwigStack", " 1-index"], "paper_abstract": "Branch query processing is a core operation of XML query processing. In recent years, a number of stack based twig join algorithms have been proposed to process twig queries based on tag stream index. However, in tag stream index, each element is labeled separately without considering the similarity among elements. Besides, algorithms based on tag stream index perform inefficiently on large document. This paper proposes a novel index, named Clustered Chain Path Index, based on a novel labeling scheme. This index provides efficient support for processing branch queries. It also has the same cardinality as 1-index against tree structured XML document. Based on CCPI, efficient algorithms, KMP-Match-Path and Related-Path-Segment-Join, are proposed to process queries efficiently. Analysis and experimental results show that proposed query processing algorithms based on CCPI outperform other algorithms and have good scalability.", "paper_title": "Clustered chain path index for XML document: Efficiently processing branch queries", "paper_id": "WOS:000252830100006"}