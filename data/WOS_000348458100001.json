{"auto_keywords": [{"score": 0.039254191205731113, "phrase": "arbitrary_number"}, {"score": 0.00481495049065317, "phrase": "secure_computations"}, {"score": 0.004350308086118336, "phrase": "generic_framework"}, {"score": 0.0041051328120736575, "phrase": "preprocessing_phase"}, {"score": 0.00320770578058916, "phrase": "adversarial_model"}, {"score": 0.0029615198132465236, "phrase": "protocol_specification"}, {"score": 0.0027741761880779535, "phrase": "dummy_users"}, {"score": 0.002598652897946253, "phrase": "secure_recommender_system"}, {"score": 0.002542642270762272, "phrase": "collaborative_filtering"}, {"score": 0.00241658945942583, "phrase": "significantly_more_efficient_than_previously_known_implementations"}, {"score": 0.0022967713922705, "phrase": "preprocessing_efforts"}, {"score": 0.0021987994275190314, "phrase": "different_alternatives"}], "paper_keywords": ["Secure multi-party computation", " malicious model", " secret sharing", " client-server systems", " preprocessing", " recommender systems"], "paper_abstract": "We provide a generic framework that, with the help of a preprocessing phase that is independent of the inputs of the users, allows an arbitrary number of users to securely outsource a computation to two non-colluding external servers. Our approach is shown to be provably secure in an adversarial model where one of the servers may arbitrarily deviate from the protocol specification, as well as employ an arbitrary number of dummy users. We use these techniques to implement a secure recommender system based on collaborative filtering that becomes more secure, and significantly more efficient than previously known implementations of such systems, when the preprocessing efforts are excluded. We suggest different alternatives for preprocessing, and discuss their merits and demerits.", "paper_title": "A Framework for Secure Computations With Two Non-Colluding Servers and Multiple Clients, Applied to Recommendations", "paper_id": "WOS:000348458100001"}