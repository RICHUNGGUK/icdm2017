{"auto_keywords": [{"score": 0.04814050608144561, "phrase": "formal_language_recognition"}, {"score": 0.04397488238643157, "phrase": "discrete_time"}, {"score": 0.00481495049065317, "phrase": "simulation_methods"}, {"score": 0.004758457292840376, "phrase": "quantum_walks"}, {"score": 0.004329630571352367, "phrase": "appropriate_shift"}, {"score": 0.004278807087784626, "phrase": "coin_operators"}, {"score": 0.00405735420159564, "phrase": "adjacency_matrix"}, {"score": 0.003459191419478298, "phrase": "computationally_tractable_size"}, {"score": 0.003091767402370757, "phrase": "swift_initialisation"}, {"score": 0.0030017207229983385, "phrase": "systematic_investigations"}, {"score": 0.002914288956035066, "phrase": "large_number"}, {"score": 0.002846175473457555, "phrase": "new_results"}, {"score": 0.0024842242921857705, "phrase": "general_suitability"}, {"score": 0.002455009746748708, "phrase": "numerical_analysis"}, {"score": 0.0023694065215394593, "phrase": "discrete_time_quantum_walks"}, {"score": 0.002246553137021003, "phrase": "specific_python_packages"}, {"score": 0.0021049977753042253, "phrase": "high_level_programming_languages"}], "paper_keywords": ["Quantum walks", " Formal language recognition", " Algorithm", " Simulation"], "paper_abstract": "We describe an algorithm which automates the generation of appropriate shift and coin operators for a discrete time quantum walk, given the adjacency matrix of the graph over which the walk is run. This gives researchers the freedom to numerically investigate any discrete time quantum walk over graphs of a computationally tractable size by greatly reducing the time required to initialise a given walk. We then describe one application in which the swift initialisation of walks has enabled systematic investigations of walks over a large number of structures. New results concerning this application, which is to formal language recognition, are described. The reliability of these results, as well as the general suitability of numerical analysis as a tool for investigating discrete time quantum walks, are briefly discussed. We also mention specific Python packages which facilitate our simulations and analysis, motivating the use of high level programming languages in this context.", "paper_title": "Simulation methods for quantum walks on graphs applied to formal language recognition", "paper_id": "WOS:000360155600011"}