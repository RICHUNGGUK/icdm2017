{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "best-first_search"}, {"score": 0.043284735713932626, "phrase": "total_flow_time_minimization"}, {"score": 0.0047370749839861165, "phrase": "job_shop_scheduling_problem"}, {"score": 0.004685855684376706, "phrase": "total_flow_time"}, {"score": 0.004389912080394437, "phrase": "exact_or_admissible_algorithms"}, {"score": 0.0037697665240643066, "phrase": "problem_relaxation"}, {"score": 0.003668591097652231, "phrase": "jackson's_preemptive_schedules"}, {"score": 0.003531474887552889, "phrase": "effective_search_space"}, {"score": 0.0033262524445013303, "phrase": "dominance_relations"}, {"score": 0.003032228032253871, "phrase": "experimental_study"}, {"score": 0.002934764205541183, "phrase": "proposed_method"}, {"score": 0.0028404241985421096, "phrase": "genetic_algorithm"}, {"score": 0.0025472634689904772, "phrase": "optimal_schedules"}, {"score": 0.0021049977753042253, "phrase": "makespan_minimization"}], "paper_keywords": ["Job shop scheduling", " Total flow time minimization", " Best first search", " Admissible heuristics", " Pruning by dominance"], "paper_abstract": "Best-First search is a problem solving paradigm that allows to design exact or admissible algorithms. In this paper, we confront the Job Shop Scheduling problem with total flow time minimization by means of the A (*) algorithm. We devised a heuristic from a problem relaxation that relies on computing Jackson's preemptive schedules. In order to reduce the effective search space, we formalized a method for pruning nodes based on dominance relations and established a rule to apply this method efficiently during the search. By means of experimental study, we show that the proposed method is more efficient than a genetic algorithm in solving instances with 10 jobs and 5 machines and that pruning by dominance allows A (*) to reach optimal schedules, while these instances are not solved by A (*) otherwise. These experiments have also made it clear that the Job Shop Scheduling problem with total flow time minimization is harder to solve than the same problem with makespan minimization.", "paper_title": "Pruning by dominance in best-first search for the job shop Scheduling problem with total flow time", "paper_id": "WOS:000273788200010"}