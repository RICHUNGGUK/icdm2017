{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "dynamic_programming"}, {"score": 0.004646654984830476, "phrase": "music_audio_signal"}, {"score": 0.004573748810476845, "phrase": "beat_instants"}, {"score": 0.004448892453489832, "phrase": "human_listener"}, {"score": 0.004225950334493496, "phrase": "selected_instants"}, {"score": 0.0035931556794840027, "phrase": "locally-constant_inter-beat-interval"}, {"score": 0.0034674164050273568, "phrase": "beat_times"}, {"score": 0.0034264854489231148, "phrase": "musical_rhythm"}, {"score": 0.0033860360186761533, "phrase": "dual_constraints"}, {"score": 0.003241750934419473, "phrase": "local_match"}, {"score": 0.003115908199991072, "phrase": "beat_tracking_system"}, {"score": 0.003054825135908205, "phrase": "global_tempo"}, {"score": 0.0029595657769783314, "phrase": "transition_cost_function"}, {"score": 0.002867268370615848, "phrase": "best-scoring_set"}, {"score": 0.002701877448139625, "phrase": "high_'onset_strength"}, {"score": 0.0024763626300729575, "phrase": "training_data"}, {"score": 0.002437425029824563, "phrase": "average_beat_accuracy"}, {"score": 0.0023896108055582615, "phrase": "development_data"}, {"score": 0.002278639906498682, "phrase": "fixed_target_tempo"}, {"score": 0.002172811149894415, "phrase": "tempo_changes"}, {"score": 0.0021049977753042253, "phrase": "target_tempo"}], "paper_keywords": [""], "paper_abstract": "Beat tracking - i.e. deriving from a music audio signal a sequence of beat instants that might correspond to when a human listener would tap his foot - involves satisfying two constraints. On the one hand, the selected instants should generally correspond to moments in the audio where a beat is indicated, for instance by the onset of a note played by one of the instruments. On the other hand, the set of beats should reflect a locally-constant inter-beat-interval, since it is this regular spacing between beat times that defines musical rhythm. These dual constraints map neatly onto the two constraints optimized in dynamic programming, the local match, and the transition cost. We describe a beat tracking system which first estimates a global tempo, uses this tempo to construct a transition cost function, then uses dynamic programming to find the best-scoring set of beat times that reflect the tempo as well as corresponding to moments of high 'onset strength' in a function derived from the audio. This very simple and computationally efficient procedure is shown to perform well on the MIREX-06 beat tracking training data, achieving an average beat accuracy of just under 60% on the development data. We also examine the impact of the assumption of a fixed target tempo, and show that the system is typically able to track tempo changes in a range of +/- 10% of the target tempo.", "paper_title": "Beat tracking by dynamic programming", "paper_id": "WOS:000251512100005"}