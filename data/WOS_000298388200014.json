{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "transversal_matroids"}, {"score": 0.004662913362513954, "phrase": "bipartite_graph"}, {"score": 0.0033822643082593285, "phrase": "uniformly_random_permutation"}, {"score": 0.002974281028713475, "phrase": "particular_left-vertex"}, {"score": 0.002722634472231842, "phrase": "thus-far_unmatched_right-vertex"}, {"score": 0.002299689297293321, "phrase": "constant_factor"}, {"score": 0.002209060366991921, "phrase": "maximum_weight_matching"}, {"score": 0.0021391300942881, "phrase": "recent_results"}, {"score": 0.0021049977753042253, "phrase": "babaioff_et_al"}], "paper_keywords": ["Matching", " Online algorithm", " Secretary problem", " Transversal matroid"], "paper_abstract": "Consider a bipartite graph with a set of left-vertices and a set of right-vertices. All the edges adjacent to the same left-vertex have the same weight. We present an algorithm that, given the set of right-vertices and the number of left-vertices, processes a uniformly random permutation of the left-vertices, one left-vertex at a time. In processing a particular left-vertex, the algorithm either permanently matches the left-vertex to a thus-far unmatched right-vertex, or decides never to match the left-vertex. The weight of the matching returned by our algorithm is within a constant factor of that of a maximum weight matching, generalizing the recent results of Babaioff et al.", "paper_title": "Competitive Weighted Matching in Transversal Matroids", "paper_id": "WOS:000298388200014"}