{"auto_keywords": [{"score": 0.034582024677350484, "phrase": "dfa"}, {"score": 0.00481495049065317, "phrase": "deterministic_finite_automaton"}, {"score": 0.0027218799769229596, "phrase": "structural_properties"}, {"score": 0.0023766673143502384, "phrase": "algebraic_view"}, {"score": 0.0022287497627555895, "phrase": "special_case"}, {"score": 0.0021971473452127126, "phrase": "permutation_dfas"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Deterministic finite automaton (DFA)", " Regular languages", " DFA decomposition", " Prime DFA", " Prime regular languages"], "paper_abstract": "We say that a deterministic finite automaton (DFA) A is composite if there are DFAs A1,..., A(t) such that L(A) = boolean AND(l)(i=1) L(A(i)) and the index of every A(i) is strictly smaller than the index of A. Otherwise, A is prime. We study the problem of deciding whether a given DFA is composite, the number of DFAs required in a decomposition, decompositions that are based on abstractions, methods to prove primality, and structural properties of DFAs that make the problem simpler or are retained in a decomposition. We also provide an algebraic view of the problem and demonstrate its usefulness for the special case of permutation DFAs. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Prime languages", "paper_id": "WOS:000348667800008"}