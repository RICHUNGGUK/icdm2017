{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automata_techniques"}, {"score": 0.004545240514015278, "phrase": "string_rewrite_systems"}, {"score": 0.004458722048888919, "phrase": "left-linear_term_rewrite_systems"}, {"score": 0.00429057323623293, "phrase": "geser_et_al"}, {"score": 0.0041287394089001405, "phrase": "recent_sequence"}, {"score": 0.0038230844545071303, "phrase": "non-left-linear_rewrite_systems"}, {"score": 0.0034392837410790293, "phrase": "so-called_raise_rules"}, {"score": 0.0032777653153451265, "phrase": "tree_automata"}, {"score": 0.0025767987652419054, "phrase": "dependency_pair_framework"}, {"score": 0.0023178219772486868, "phrase": "special_properties"}, {"score": 0.002273605493468005, "phrase": "dependency_pair_problems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Term rewriting", " Termination", " Match-bounds", " Dependency pairs", " Tree automata", " Automation"], "paper_abstract": "The use of automata techniques to prove the termination of string rewrite systems and left-linear term rewrite systems is advocated by Geser et al. in a recent sequence of papers. We extend their work to non-left-linear rewrite systems. The key to this extension is the introduction of so-called raise rules and the use of tree automata that are not quite deterministic. Furthermore, to increase the applicability of the method we show how it can be incorporated into the dependency pair framework. To achieve this we introduce two new enrichments which take the special properties of dependency pair problems into account. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Match-bounds revisited", "paper_id": "WOS:000271169800011"}