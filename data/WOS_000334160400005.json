{"auto_keywords": [{"score": 0.024171063237672482, "phrase": "dbtoaster"}, {"score": 0.00481495049065317, "phrase": "algorithmic_trading"}, {"score": 0.004743806810821005, "phrase": "scientific_data_analysis"}, {"score": 0.004673709383305897, "phrase": "real-time_analytics"}, {"score": 0.004027031316965272, "phrase": "millisecond_latencies"}, {"score": 0.0034695189961509625, "phrase": "aged_or_historical_data"}, {"score": 0.0032444113660668743, "phrase": "dbtoaster_system"}, {"score": 0.0031490944606172152, "phrase": "materialized_views"}, {"score": 0.003102488033561956, "phrase": "standard_sql_queries"}, {"score": 0.0027535633837592597, "phrase": "aggressive_compilation_techniques"}, {"score": 0.002712794864739074, "phrase": "dbtoaster's_original_recursive_finite_differencing_technique"}, {"score": 0.002389696110283506, "phrase": "other's_incremental_maintenance"}, {"score": 0.0023021895404322767, "phrase": "reduced_overall_view_maintenance_cost"}, {"score": 0.0022013916728990564, "phrase": "complete_view"}, {"score": 0.0021049977753042253, "phrase": "wide_range"}], "paper_keywords": ["Database queries", " Materialized views", " Incremental view maintenance", " Compilation"], "paper_abstract": "Applications ranging from algorithmic trading to scientific data analysis require real-time analytics based on views over databases receiving thousands of updates each second. Such views have to be kept fresh at millisecond latencies. At the same time, these views have to support classical SQL, rather than window semantics, to enable applications that combine current with aged or historical data. In this article, we present the DBToaster system, which keeps materialized views of standard SQL queries continuously fresh as data changes very rapidly. This is achieved by a combination of aggressive compilation techniques and DBToaster's original recursive finite differencing technique which materializes a query and a set of its higher-order deltas as views. These views support each other's incremental maintenance, leading to a reduced overall view maintenance cost. DBToaster supports tens of thousands of complete view refreshes per second for a wide range of queries.", "paper_title": "DBToaster: higher-order delta processing for dynamic, frequently fresh views", "paper_id": "WOS:000334160400005"}