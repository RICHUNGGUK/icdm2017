{"auto_keywords": [{"score": 0.04103199698845451, "phrase": "ajax_applications"}, {"score": 0.00481495049065317, "phrase": "modern_web_applications"}, {"score": 0.004485735417293941, "phrase": "dom_tree"}, {"score": 0.004278807087784626, "phrase": "traditional_web_applications"}, {"score": 0.0037309384824565695, "phrase": "state-flow_graph"}, {"score": 0.0035925056609681194, "phrase": "user_interface_states"}, {"score": 0.003525220627709056, "phrase": "ajax-specific_faults"}, {"score": 0.0028630535573013686, "phrase": "atusa"}, {"score": 0.0027567336518542858, "phrase": "generic_invariant_checking_components"}, {"score": 0.002679585860537941, "phrase": "application-specific_state_validators"}, {"score": 0.0026045914281028473, "phrase": "test_suite"}, {"score": 0.002437645786158106, "phrase": "six_subjects"}, {"score": 0.002175913488493802, "phrase": "manual_effort"}], "paper_keywords": ["Automated testing", " web applications", " Ajax"], "paper_abstract": "AJAX-based Web 2.0 applications rely on stateful asynchronous client/server communication, and client-side runtime manipulation of the DOM tree. This not only makes them fundamentally different from traditional web applications, but also more error-prone and harder to test. We propose a method for testing AJAX applications automatically, based on a crawler to infer a state-flow graph for all (client-side) user interface states. We identify AJAX-specific faults that can occur in such states (related to, e.g., DOM validity, error messages, discoverability, back-button compatibility) as well as DOM-tree invariants that can serve as oracles to detect such faults. Our approach, called ATUSA, is implemented in a tool offering generic invariant checking components, a plugin-mechanism to add application-specific state validators, and generation of a test suite covering the paths obtained during crawling. We describe three case studies, consisting of six subjects, evaluating the type of invariants that can be obtained for AJAX applications as well as the fault revealing capabilities, scalability, required manual effort, and level of automation of our testing approach.", "paper_title": "Invariant-Based Automatic Testing of Modern Web Applications", "paper_id": "WOS:000299472600005"}