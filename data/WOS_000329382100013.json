{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-source_star_twig_queries"}, {"score": 0.0047310525657970615, "phrase": "materialization-based_xml_databases"}, {"score": 0.004621447740470602, "phrase": "large_body"}, {"score": 0.0045143706249204905, "phrase": "xml_twig_query_processing"}, {"score": 0.00438399094249306, "phrase": "systematic_study"}, {"score": 0.004333024360254719, "phrase": "xml"}, {"score": 0.0038761135052054765, "phrase": "non-traditional_technique"}, {"score": 0.003676811616723809, "phrase": "materialization-based_rdbms._a_multi-source_star_twig"}, {"score": 0.0034268702387746106, "phrase": "xquery_graph"}, {"score": 0.003367077034382727, "phrase": "star-shaped_structure"}, {"score": 0.0031751758963130135, "phrase": "life_sciences"}, {"score": 0.0030653094605910727, "phrase": "conventional_approach"}, {"score": 0.0028568174308720167, "phrase": "star_query"}, {"score": 0.0027741761880779535, "phrase": "sql_sub-queries"}, {"score": 0.00270978310478061, "phrase": "minimal_information"}, {"score": 0.0026781477395106993, "phrase": "underlying_xml_subtrees"}, {"score": 0.002646880721119838, "phrase": "intermediate_results"}, {"score": 0.0024813081174066653, "phrase": "path_materialization-based_xml_storage_system"}, {"score": 0.0022854384756395116, "phrase": "off-the-shelf_commercial_rdbms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multi-source star twig pattern", " XQuery", " SQL", " Performance"], "paper_abstract": "Despite a large body of work on XML twig query processing in relational environment, systematic study of XML join evaluation has received little attention in the literature. In this paper, we propose a novel and non-traditional technique for fast evaluation of multi-source star twig queries in a path materialization-based RDBMS. A multi-source star twig joins different XML documents on values in their nodes and the XQuery graph takes a star-shaped structure. Such queries are prevalent in several domains such as life sciences. Rather than following the conventional approach of generating one huge complex SQL query from a twig query, we translate a star query into a list of SQL sub-queries that only materializes minimal information of underlying XML subtrees as intermediate results. We have implemented this scheme on top of a path materialization-based XML storage system called SUCXENT++. Experiments carried out confirm that our proposed approach built on top of an off-the-shelf commercial RDBMS has excellent real-world performance. (C) 2013 Published by Elsevier B.V.", "paper_title": "Stars on steroids: Fast evaluation of multi-source star twig queries in path materialization-based XML databases", "paper_id": "WOS:000329382100013"}