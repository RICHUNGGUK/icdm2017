{"auto_keywords": [{"score": 0.03175038825525716, "phrase": "stable_nodes"}, {"score": 0.011833263203937775, "phrase": "overlay_nodes"}, {"score": 0.00481495049065317, "phrase": "collaborative_tree-mesh_overlay_network"}, {"score": 0.004785682967399109, "phrase": "multicast_video_streaming"}, {"score": 0.004727678014364335, "phrase": "application-layer_overlay_networks"}, {"score": 0.004641980000471692, "phrase": "promising_solution"}, {"score": 0.004613758998479213, "phrase": "live_video"}, {"score": 0.00448886315956469, "phrase": "multicast_overlay"}, {"score": 0.004447983733147892, "phrase": "natural_structure"}, {"score": 0.004275079900660675, "phrase": "end-hosts_dynamics"}, {"score": 0.0042490799524136594, "phrase": "data-driven_approaches"}, {"score": 0.004159313896487805, "phrase": "mesh_structure"}, {"score": 0.00410886951639144, "phrase": "data_exchanges"}, {"score": 0.004083876271505206, "phrase": "multiple_neighbors"}, {"score": 0.0039854083031404764, "phrase": "overlay_resilience"}, {"score": 0.0039011907503957075, "phrase": "efficiency-delay_trade-off"}, {"score": 0.0037955107949094124, "phrase": "mesh_neighbors"}, {"score": 0.0037609217735040715, "phrase": "extra_notifications"}, {"score": 0.003527434895463077, "phrase": "mesh_overlay"}, {"score": 0.003474006363785606, "phrase": "small_set"}, {"score": 0.0034528614466646625, "phrase": "stable_backbone_nodes"}, {"score": 0.003379859206640552, "phrase": "real_trace_study"}, {"score": 0.003359286643876579, "phrase": "pplive"}, {"score": 0.003278230817258323, "phrase": "live_streaming_system"}, {"score": 0.0031506541919795413, "phrase": "novel_collaborative_tree-mesh_design"}, {"score": 0.0030934538358409216, "phrase": "tree_structures"}, {"score": 0.003065243071851165, "phrase": "key_idea"}, {"score": 0.002963980409835403, "phrase": "tree-based_backbone"}, {"score": 0.0027210199396428465, "phrase": "auxiliary_mesh_overlay"}, {"score": 0.002655324730688008, "phrase": "node_dynamics"}, {"score": 0.00261507100872001, "phrase": "available_bandwidth"}, {"score": 0.002575425942213412, "phrase": "hybrid_design"}, {"score": 0.0025363803754268302, "phrase": "mtreebone"}, {"score": 0.0024903043450159594, "phrase": "unique_and_critical_design_challenges"}, {"score": 0.0024153589988125303, "phrase": "seamless_data_delivery"}, {"score": 0.0023426638248794643, "phrase": "optimized_solutions"}, {"score": 0.002265217884758413, "phrase": "coherent_framework"}, {"score": 0.0022514137676797985, "phrase": "controlled_overhead"}, {"score": 0.002190326602897302, "phrase": "planetlab_experiments"}, {"score": 0.0021505234515372504, "phrase": "superior_efficiency"}, {"score": 0.0021179060760390597, "phrase": "hybrid_solution"}], "paper_keywords": ["Application-layer multicast", " overlay network", " mesh", " tree", " live streaming"], "paper_abstract": "Recently, application-layer overlay networks have been suggested as a promising solution for live video streaming over the Internet. To organize a multicast overlay, a natural structure is a tree, which, however, is known vulnerable to end-hosts dynamics. Data-driven approaches address this problem by employing a mesh structure, which enables data exchanges among multiple neighbors, and thus, greatly improves the overlay resilience. It unfortunately suffers from an efficiency-delay trade-off, because data have to be pulled from mesh neighbors by using extra notifications periodically. In this paper, we closely examine the contributions of overlay nodes, and argue that performance of a mesh overlay closely depends on a small set of stable backbone nodes. This is validated through a real trace study on PPLive, the largest commercial application-layer live streaming system to date. Motivated by this observation, we then suggest a novel collaborative tree-mesh design that leverages both mesh and tree structures. The key idea is to identify a set of stable nodes to construct a tree-based backbone, called treebone, with most of the data being pushed over this backbone. These stable nodes, together with others, are further organized through an auxiliary mesh overlay, which facilitates the treebone to accommodate node dynamics and fully exploit the available bandwidth between overlay nodes. This hybrid design, referred to as mTreebone, brings a series of unique and critical design challenges. In particular, the identification of stable nodes and seamless data delivery using both push and pull methods. In this paper, we present optimized solutions to these problems, which reconcile the two overlays under a coherent framework with controlled overhead. We evaluate mTreebone through both simulations and PlanetLab experiments. The results demonstrate the superior efficiency and robustness of this hybrid solution in both static and dynamic scenarios.", "paper_title": "mTreebone: A Collaborative Tree-Mesh Overlay Network for Multicast Video Streaming", "paper_id": "WOS:000273987100008"}