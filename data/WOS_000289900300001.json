{"auto_keywords": [{"score": 0.03387373349383425, "phrase": "cleaning_cost"}, {"score": 0.01351239903941847, "phrase": "ftl"}, {"score": 0.00481495049065317, "phrase": "novel_flash_translation_layer"}, {"score": 0.004769182299692333, "phrase": "nand_flash_memory"}, {"score": 0.0047013405841819025, "phrase": "hybrid_address_translation"}, {"score": 0.004634459424542272, "phrase": "flash_translation_layer"}, {"score": 0.004503525064934708, "phrase": "block_device_interface"}, {"score": 0.004418287966422041, "phrase": "flash_memory"}, {"score": 0.004355415885815204, "phrase": "disk-based_file_systems"}, {"score": 0.004252602474733162, "phrase": "erase-before-write_feature"}, {"score": 0.0040735909648053105, "phrase": "out-of-place_updates"}, {"score": 0.003920780681351006, "phrase": "stale_data"}, {"score": 0.0037556843869894566, "phrase": "coarse-grained_and_fine-grained_address_translation"}, {"score": 0.0033806943112103397, "phrase": "new_hat-based_ftl"}, {"score": 0.0033325464030354492, "phrase": "rose"}, {"score": 0.00311669276800628, "phrase": "high-cost_reclamation"}, {"score": 0.0030285084113651035, "phrase": "entire-block_sequential_write"}, {"score": 0.0029569247903654477, "phrase": "multiple_physical_blocks"}, {"score": 0.002778604641920052, "phrase": "sequential_ones"}, {"score": 0.002687070469080394, "phrase": "merge-aware_cleaning_policy"}, {"score": 0.002524982927936405, "phrase": "hat-based_ftl"}, {"score": 0.0024771000236931836, "phrase": "cleaning_efficiency"}, {"score": 0.002372649454733251, "phrase": "obsolete_blocks"}, {"score": 0.0022725931637071852, "phrase": "simulation_results"}, {"score": 0.0021976915360493628, "phrase": "existing_hat-based_ftls"}, {"score": 0.0021252533072727707, "phrase": "flash_write_time"}], "paper_keywords": ["Storage management", " performance", " NAND flash memory", " flash translation layer (FTL)"], "paper_abstract": "A Flash Translation Layer (FTL) provides a block device interface on top of flash memory to support disk-based file systems. Due to the erase-before-write feature of flash memory, an FTL usually performs out-of-place updates and uses a cleaning procedure to reclaim stale data. A hybrid address translation (HAT)-based FTL combines coarse-grained and fine-grained address translation to achieve good performance while keeping the size of the mapping information small. In this paper, we propose a new HAT-based FTL, called ROSE, which includes three novel techniques for reducing the cleaning cost. First, it reduces high-cost reclamation by preventing data in an entire-block sequential write from being placed into multiple physical blocks while eliminating the cleaning cost resulting from mispredicting random or semisequential writes as sequential ones. Second, it uses a merge-aware cleaning policy that considers both the block age and the merge cost in a HAT-based FTL for improving the cleaning efficiency. Third, it delays the erasure of obsolete blocks and reuses their free pages for buffering more writes. Simulation results show that the proposed FTL outperforms existing HAT-based FTLs in terms of both cleaning cost and flash write time by up to 47 times and 1.6 times, respectively.", "paper_title": "ROSE: A Novel Flash Translation Layer for NAND Flash Memory Based on Hybrid Address Translation", "paper_id": "WOS:000289900300001"}