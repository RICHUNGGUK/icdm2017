{"auto_keywords": [{"score": 0.035083386534262295, "phrase": "dijkstra"}, {"score": 0.00481495049065317, "phrase": "concrete_and_abstract_relation_algebras"}, {"score": 0.004677847043645765, "phrase": "computer_science"}, {"score": 0.004466519142879166, "phrase": "graph_theory"}, {"score": 0.003887894704361635, "phrase": "relation_algebra"}, {"score": 0.0033839745649214548, "phrase": "shortest_paths"}, {"score": 0.0030847461428168614, "phrase": "even_more_information"}, {"score": 0.0029967610945411593, "phrase": "\"next_hop"}, {"score": 0.0021794454466797382, "phrase": "wireless_networks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Routing", " Semiring", " Kleene algebra", " Path algebra"], "paper_abstract": "Concrete and abstract relation algebras have widespread applications in computer science. One of the most famous is graph theory. Classical relations, however, only reason about connectivity, not about the length of a path between nodes. Generalisations of relation algebra, such as the min-plus algebra, use numbers allowing the treatment of weighted graphs. In this way one can for example determine the length of shortest paths (e.g. Dijkstra's algorithm). In this paper we treat matrices that carry even more information, such as the \"next hop\" on a path towards a destination. In this way we can use algebra not only for determining the length of paths, but also the concrete path. We show how paths can be reconstructed from these matrices, hop by hop. We further sketch an application for message passing in wireless networks. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Hopscotch-reaching the target hop by hop", "paper_id": "WOS:000338266900010"}