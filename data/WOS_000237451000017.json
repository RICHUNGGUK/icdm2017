{"auto_keywords": [{"score": 0.03149019947306576, "phrase": "shared_variable"}, {"score": 0.00481495049065317, "phrase": "alternative_futures"}, {"score": 0.004680624753255133, "phrase": "serious_impediment"}, {"score": 0.004627944735913613, "phrase": "testing_and_debugging_concurrent_programs"}, {"score": 0.004039995317682942, "phrase": "existing_techniques"}, {"score": 0.0037320255482878365, "phrase": "error_conditions"}, {"score": 0.003648411055689428, "phrase": "execution_sequence"}, {"score": 0.0035869274480340727, "phrase": "concurrent_program"}, {"score": 0.003447451122274614, "phrase": "specific_errors"}, {"score": 0.003332210257373994, "phrase": "preliminary_work"}, {"score": 0.003239114833599948, "phrase": "multithreaded_program"}, {"score": 0.0031308163228919773, "phrase": "intermediate_compiler_form"}, {"score": 0.0027794243746094905, "phrase": "aspect-oriented_programming"}, {"score": 0.0027325449069867222, "phrase": "program_execution"}, {"score": 0.0024814079299143536, "phrase": "reaching_definitions"}, {"score": 0.0024257447861185813, "phrase": "desired_definition"}, {"score": 0.002190280748985751, "phrase": "test_cases"}], "paper_keywords": [""], "paper_abstract": "Non-determinism is a serious impediment to testing and debugging concurrent programs. Such programs do not execute the same way each time they are run, which can hide the presence of errors. Existing techniques use a variety of mechanisms that attempt to increase the probability of uncovering error conditions by altering the execution sequence of a concurrent program, but do not test for specific errors. This paper presents some preliminary work in deterministically executing a multithreaded program using a combination of an intermediate compiler form that identifies the set of writes of a shared variable by other threads are visible at a given read of that variable and aspect-oriented programming to control program execution. Specifically, the aspects allow a read of a shared variable to return any of the reaching definitions, where the desired definition can be selected before the program is run. As a result, we can deterministically run test cases. This work is preliminary and many issues have yet to be resolved, but we believe this idea shows some promise.", "paper_title": "Choosing among alternative futures", "paper_id": "WOS:000237451000017"}