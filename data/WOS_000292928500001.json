{"auto_keywords": [{"score": 0.03613346133936676, "phrase": "pairwise_distances"}, {"score": 0.00481495049065317, "phrase": "dual-tree_algorithm"}, {"score": 0.004761968711051715, "phrase": "spatial_distance_histograms"}, {"score": 0.004640590144749795, "phrase": "spatiotemporal_data"}, {"score": 0.004439634831927606, "phrase": "great_challenges"}, {"score": 0.004310501708408856, "phrase": "scientific_spatiotemporal_data"}, {"score": 0.004263046902817659, "phrase": "computing_functions"}, {"score": 0.004216112320418982, "phrase": "point-to-point_interactions"}, {"score": 0.004093472796942966, "phrase": "sdh"}, {"score": 0.0040186038781533946, "phrase": "vital_importance"}, {"score": 0.003989046949801574, "phrase": "scientific_discovery"}, {"score": 0.0039016690475620185, "phrase": "efficient_sdh_processing"}, {"score": 0.0038729688332870865, "phrase": "large-scale_scientific_databases"}, {"score": 0.0037463983616303786, "phrase": "recursive_tree-traversing_strategy"}, {"score": 0.0036508108698357932, "phrase": "point_distances"}, {"score": 0.0036105923401756126, "phrase": "visited_tree_nodes"}, {"score": 0.003466865016432561, "phrase": "brute-force_approach"}, {"score": 0.0033288399506044763, "phrase": "promising_experimental_results"}, {"score": 0.003035177667751495, "phrase": "geometric_modeling_approach"}, {"score": 0.0030017207229983385, "phrase": "main_technique"}, {"score": 0.002925077525258983, "phrase": "point_counts"}, {"score": 0.0023958326775913165, "phrase": "time_complexity"}, {"score": 0.0023606625824479956, "phrase": "quadratic_time"}, {"score": 0.0023260075698364087, "phrase": "brute-force_algorithm"}, {"score": 0.0022665781920241245, "phrase": "constant-time_approximate_algorithm"}, {"score": 0.0021601997088758957, "phrase": "wide_range"}, {"score": 0.0021442819603609835, "phrase": "point_spatial_distributions"}, {"score": 0.0021284812539167112, "phrase": "histogram_types"}, {"score": 0.0021049977753042253, "phrase": "space-partitioning_options"}], "paper_keywords": ["Scientific databases", " Correlation function", " Quad-tree", " Spatial distance histogram"], "paper_abstract": "Many scientific and engineering fields produce large volume of spatiotemporal data. The storage, retrieval, and analysis of such data impose great challenges to database systems design. Analysis of scientific spatiotemporal data often involves computing functions of all point-to-point interactions. One such analytics, the Spatial Distance Histogram (SDH), is of vital importance to scientific discovery. Recently, algorithms for efficient SDH processing in large-scale scientific databases have been proposed. These algorithms adopt a recursive tree-traversing strategy to process point-to-point distances in the visited tree nodes in batches, thus require less time when compared to the brute-force approach where all pairwise distances have to be computed. Despite the promising experimental results, the complexity of such algorithms has not been thoroughly studied. In this paper, we present an analysis of such algorithms based on a geometric modeling approach. The main technique is to transform the analysis of point counts into a problem of quantifying the area of regions where pairwise distances can be processed in batches by the algorithm. From the analysis, we conclude that the number of pairwise distances that are left to be processed decreases exponentially with more levels of the tree visited. This leads to the proof of a time complexity lower than the quadratic time needed for a brute-force algorithm and builds the foundation for a constant-time approximate algorithm. Our model is also general in that it works for a wide range of point spatial distributions, histogram types, and space-partitioning options in building the tree.", "paper_title": "Performance analysis of a dual-tree algorithm for computing spatial distance histograms", "paper_id": "WOS:000292928500001"}