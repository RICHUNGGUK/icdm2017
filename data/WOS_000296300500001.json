{"auto_keywords": [{"score": 0.025358960314086628, "phrase": "linux_kernel"}, {"score": 0.00481495049065317, "phrase": "kernel_file_readaheads"}, {"score": 0.004738078275822989, "phrase": "markov_decision_models"}, {"score": 0.004612662942073808, "phrase": "important_technique"}, {"score": 0.004490552331642995, "phrase": "huge_gap"}, {"score": 0.0044426140044122545, "phrase": "disk_drives"}, {"score": 0.004210458358142504, "phrase": "modern_operating_systems"}, {"score": 0.004165497627464024, "phrase": "advanced_storage_systems"}, {"score": 0.003947765701573287, "phrase": "common_kernel_readahead"}, {"score": 0.0038638811223100184, "phrase": "full_testing_coverage"}, {"score": 0.0034332736827447654, "phrase": "absorbing_markov_decision_process"}, {"score": 0.0031167895790050405, "phrase": "optimal_prefetching_policies"}, {"score": 0.0030834712590249863, "phrase": "specific_read_pattern"}, {"score": 0.0030178961017306646, "phrase": "convergence_analysis"}, {"score": 0.002953711377604328, "phrase": "sample-path-based_methods"}, {"score": 0.0027991418754844347, "phrase": "prefetching_policies"}, {"score": 0.002724909017963099, "phrase": "valuable_informations"}, {"score": 0.002610198789888055, "phrase": "practical_readaheads"}, {"score": 0.0022941723937662927, "phrase": "model-based_evaluations"}, {"score": 0.002209406458446019, "phrase": "improved_prefetching_policy"}, {"score": 0.002162379426839795, "phrase": "original_one"}, {"score": 0.0021049977753042253, "phrase": "specified_workloads"}], "paper_keywords": ["optimization", " operating systems", " file systems management", " Markov decision processes", " simulation", " measurements"], "paper_abstract": "Readahead is an important technique to deal with the huge gap between disk drives and applications. It has become a standard in modern operating systems and advanced storage systems. However, it is difficult to develop the common kernel readahead and to achieve full testing coverage of all cases. In this paper, we formulate the kernel read handling, caching and readahead behavior as an absorbing Markov decision process, and present performance evaluations to compare or verify various readaheads. We also introduce algorithms to find optimal prefetching policies for specific read pattern and present the convergence analysis. By exploiting sample-path-based methods, it becomes much easier to evaluate and optimize prefetching policies, which can provide valuable informations to help the design and improvement of practical readaheads. For illustration and verification, we present two examples and some experiments on the readaheads in Linux kernel. The results show that the model-based evaluations agree with the practice and the improved prefetching policy significantly outperforms the original one in Linux kernel for the specified workloads.", "paper_title": "Evaluation and Optimization of Kernel File Readaheads Based on Markov Decision Models", "paper_id": "WOS:000296300500001"}