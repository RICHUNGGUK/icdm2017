{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asymmetric_neighborhood_function"}, {"score": 0.0061228954229705255, "phrase": "som_algorithm"}, {"score": 0.004768012159430855, "phrase": "self-organizing_map"}, {"score": 0.004675497336655545, "phrase": "unsupervised_learning_method"}, {"score": 0.004569819304126685, "phrase": "nonlinear_principal_component_analysis"}, {"score": 0.004510502900568775, "phrase": "topologically_ordered_mapping"}, {"score": 0.004466519142879166, "phrase": "high-dimensional_data_space"}, {"score": 0.004422962383171667, "phrase": "low-dimensional_representation_space"}, {"score": 0.00433711346313652, "phrase": "wide_applications"}, {"score": 0.004102780105064226, "phrase": "data_sets"}, {"score": 0.00398387063819657, "phrase": "copious_amount"}, {"score": 0.003756252137445817, "phrase": "putative_applications"}, {"score": 0.003695356628334569, "phrase": "major_culprits"}, {"score": 0.0036592924763139915, "phrase": "slow_ordering_time"}, {"score": 0.0035882128312414046, "phrase": "topological_defect"}, {"score": 0.003231722251475338, "phrase": "ordered_map"}, {"score": 0.0027261830963078706, "phrase": "commonly_used_symmetric_neighborhood_function"}, {"score": 0.0026470650216161577, "phrase": "ordering_process"}, {"score": 0.002545125352770175, "phrase": "generated_ordered_map"}, {"score": 0.0024152714799789547, "phrase": "asymmetric_neighborhood_function_som_algorithm"}, {"score": 0.0023760637960293257, "phrase": "learning_steps"}, {"score": 0.002352844633115289, "phrase": "perfect_ordering"}, {"score": 0.002307083221755957, "phrase": "one-dimensional_som"}, {"score": 0.0021467594103960585, "phrase": "improved_algorithm"}, {"score": 0.0021049977753042253, "phrase": "final_map"}], "paper_keywords": [""], "paper_abstract": "The self-organizing map (SOM) is an unsupervised learning method as well as a type of nonlinear principal component analysis that forms a topologically ordered mapping from the high-dimensional data space to a low-dimensional representation space. It has recently found wide applications in such areas as visualization, classification, and mining of various data. However, when the data sets to be processed are very large, a copious amount of time is often required to train the map, which seems to restrict the range of putative applications. One of the major culprits for this slow ordering time is that a kind of topological defect (e.g., a kink in one dimension or a twist in two dimensions) gets created in the map during training. Once such a defect appears in the map during training, the ordered map cannot be obtained until the defect is eliminated, for which the number of iterations required is typically several times larger than in the absence of the defect. In order to overcome this weakness, we propose that an asymmetric neighborhood function be used for the SOM algorithm. Compared with the commonly used symmetric neighborhood function, we found that an asymmetric neighborhood function accelerates the ordering process of the SOM algorithm, though this asymmetry tends to distort the generated ordered map. We demonstrate that the distortion of the map can be suppressed by improving the asymmetric neighborhood function SOM algorithm. The number of learning steps required for perfect ordering in the case of the one-dimensional SOM is numerically shown to be reduced from O(N(3)) to O(N(2)) with an asymmetric neighborhood function, even when the improved algorithm is used to get the final map without distortion.", "paper_title": "Self-organizing maps with asymmetric neighborhood function", "paper_id": "WOS:000248336600008"}