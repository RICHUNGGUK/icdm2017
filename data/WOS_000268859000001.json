{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "online_set_cover_problem."}, {"score": 0.004578225880995197, "phrase": "n_elements"}, {"score": 0.004232811526417572, "phrase": "s._s."}, {"score": 0.00416223958248046, "phrase": "set_cover_problem"}, {"score": 0.003848088904418221, "phrase": "new_element"}, {"score": 0.003430211567320493, "phrase": "set_x'_subset"}, {"score": 0.0031800434901385717, "phrase": "strict_subset"}, {"score": 0.003092077180049586, "phrase": "total_cost"}, {"score": 0.002591050503206025, "phrase": "copt."}, {"score": 0.002576546483375521, "phrase": "maximum_ratio"}, {"score": 0.0025406397429561397, "phrase": "input_sequences"}, {"score": 0.002512274063686441, "phrase": "competitive_ratio"}, {"score": 0.002251740348801671, "phrase": "similar_techniques"}, {"score": 0.0022328534191265854, "phrase": "computational_learning_theory"}, {"score": 0.0022203500288703443, "phrase": "online_prediction"}, {"score": 0.0021467832366847007, "phrase": "novel_way"}, {"score": 0.0021228055195257173, "phrase": "fractional_solution"}, {"score": 0.0021049977753042253, "phrase": "deterministic_online_algorithm"}], "paper_keywords": ["set cover", " online", " competitive factor"], "paper_abstract": "Let X = {1, 2,..., n} be a ground set of n elements, and let S be a family of subsets of X, vertical bar S vertical bar = m, with a positive cost c(S) associated with each S. S. Consider the following online version of the set cover problem, described as a game between an algorithm and an adversary. An adversary gives elements to the algorithm from X one by one. Once a new element is given, the algorithm has to cover it by some set of S containing it. We assume that the elements of X and the members of S are known in advance to the algorithm; however, the set X' subset of X of elements given by the adversary is not known in advance to the algorithm. (In general, X' may be a strict subset of X.) The objective is to minimize the total cost of the sets chosen by the algorithm. Let C denote the family of sets in S that the algorithm chooses. At the end of the game the adversary also produces (offline) a family of sets C(OPT) that covers X'. The performance of the algorithm is the ratio between the cost of C and the cost of COPT. The maximum ratio, taken over all input sequences, is the competitive ratio of the algorithm. We present an O(log m log n) competitive deterministic algorithm for the problem and establish a nearly matching Omega(log n logm/log log m + log log n) lower bound for all interesting values of m and n. The techniques used are motivated by similar techniques developed in computational learning theory for online prediction (e. g., the WINNOW algorithm) together with a novel way of converting a fractional solution into a deterministic online algorithm.", "paper_title": "THE ONLINE SET COVER PROBLEM", "paper_id": "WOS:000268859000001"}