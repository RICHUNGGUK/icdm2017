{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "non-redundant_sequential_rules"}, {"score": 0.008358589715406694, "phrase": "sequential_patterns"}, {"score": 0.006786998491159787, "phrase": "proposed_method"}, {"score": 0.004770461993586338, "phrase": "attributed_prefix-trees"}, {"score": 0.004704495156558224, "phrase": "sequential_generator_patterns"}, {"score": 0.004208427318712072, "phrase": "sequential_rules"}, {"score": 0.003907013105134715, "phrase": "efficient_method"}, {"score": 0.00379961236486522, "phrase": "attributed_prefix-tree"}, {"score": 0.003644001325962353, "phrase": "first_phase"}, {"score": 0.0033828748627992193, "phrase": "second_phase"}, {"score": 0.00321425262806329, "phrase": "prefix-tree_building_process"}, {"score": 0.0029699874949715367, "phrase": "minimal_sequential_generator_pattern"}, {"score": 0.0028087949095629955, "phrase": "closed_sequential_pattern"}, {"score": 0.0027188259793109264, "phrase": "nonredundant_sequential_rules"}, {"score": 0.0026317312518257803, "phrase": "minimal_sequential_generator_pattern_x"}, {"score": 0.0025952620596908747, "phrase": "closed_sequential_pattern_y"}, {"score": 0.0025004870748022855, "phrase": "y."}, {"score": 0.0024429654627197393, "phrase": "good_pruning_mechanism"}, {"score": 0.002375714262344562, "phrase": "search_space"}, {"score": 0.0023427844897844093, "phrase": "execution_time"}, {"score": 0.0023103100997344072, "phrase": "mining_process"}, {"score": 0.0022889103976458437, "phrase": "experimental_results"}, {"score": 0.002195033004022173, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Sequential pattern", " Sequential generator pattern", " Closed sequential pattern", " Non-redundant sequential rule", " Prefix-tree"], "paper_abstract": "Mining sequential generator patterns and mining closed sequential patterns are important to sequence mining. They address difficulties in the mining of sequential patterns by reducing the number of sequential rules, and the results are often used to generate non-redundant sequential rules. This paper proposes an efficient method for mining non-redundant sequential rules from an attributed prefix-tree. The proposed method has two phases. In the first phase, it builds a prefix-tree that stores all the sequential patterns from a given sequence database. Then in the second phase, it mines non-redundant sequential rules from this prefix-tree. In the prefix-tree building process, each node on the prefix-tree has a field that indicates whether this node is a minimal sequential generator pattern, and another field that indicates whether this node is a closed sequential pattern. By traversing the prefix-tree, nonredundant sequential rules can be easily mined from a minimal sequential generator pattern X to a closed sequential pattern Y such that X is a prefix of Y. In addition, a good pruning mechanism is proposed to reduce the search space and the execution time in the mining process. Experimental results show that the proposed method is more efficient than existing methods in mining non-redundant sequential rules. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "An efficient method for mining non-redundant sequential rules using attributed prefix-trees", "paper_id": "WOS:000336953900008"}