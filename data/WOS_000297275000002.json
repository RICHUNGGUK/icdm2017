{"auto_keywords": [{"score": 0.04956531553999565, "phrase": "dynamic_programming"}, {"score": 0.00481495049065317, "phrase": "outerplanar_chemical_graphs"}, {"score": 0.0047152877145889656, "phrase": "exhaustive_and_nonredundant_generation"}, {"score": 0.004593591780245872, "phrase": "chemical_compound"}, {"score": 0.004522080178250592, "phrase": "specified_constitution"}, {"score": 0.004451676867747938, "phrase": "important_tool"}, {"score": 0.004405348628112645, "phrase": "molecular_structure_elucidation"}, {"score": 0.004359500411441827, "phrase": "molecular_design"}, {"score": 0.004180809918117248, "phrase": "outerplanar_graph_structures"}, {"score": 0.0040094142308666975, "phrase": "chemical_compounds"}, {"score": 0.0036680857629458816, "phrase": "carbon_atoms"}], "paper_keywords": [""], "paper_abstract": "Exhaustive and nonredundant generation of stereoisomers of a chemical compound with a specified constitution is an important tool for molecular structure elucidation and molecular design. It is known that many chemical compounds have outerplanar graph structures. In this paper we deal with chemical compounds composed of carbon, hydrogen, oxygen, and nitrogen atoms whose graphical structures are outerplanar and consider stereoisomers caused only by asymmetry around carbon atoms. Based on dynamic programming, we propose an algorithm of generating all stereoisomers without duplication. We treat a given outerplanar graph as a graph rooted at its structural center. Our algorithm first recursively computes the number of stereoisomers of the subgraph induced by the descendants of each vertex and then constructs each stereoisomer by backtracking the process of computing the numbers of stereoisomers. Our algorithm correctly counts the number of stereoisomers in O(n) time and space and correctly enumerates all of the stereoisomers in O(n(3)) time per stereoisomer on average and in O(n) space, where n is the number of atoms in a given structure.", "paper_title": "Efficient Enumeration of Stereoisomers of Outerplanar Chemical Graphs Using Dynamic Programming", "paper_id": "WOS:000297275000002"}