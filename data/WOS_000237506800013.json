{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "simple_event_calculus_representation"}, {"score": 0.004563427013973105, "phrase": "reactive_belief-desire-intention_agent_architecture"}, {"score": 0.004187917910692495, "phrase": "contract_terms"}, {"score": 0.0038846843242954935, "phrase": "event_calculus"}, {"score": 0.0037615180375561805, "phrase": "current_and_past_obligations"}, {"score": 0.002447101794397243, "phrase": "extendable_set"}, {"score": 0.0023950275815082297, "phrase": "contract_types"}, {"score": 0.0023189818169615135, "phrase": "standing_contracts"}, {"score": 0.0022453451864218477, "phrase": "service_contracts"}, {"score": 0.0021049977753042253, "phrase": "first-principles_planner"}], "paper_keywords": [""], "paper_abstract": "We propose a simple event calculus representation of contracts and a reactive belief-desire-intention agent architecture to enable the monitoring and execution of contract terms and conditions. We use the event calculus to deduce current and past obligations, obligation fulfilment and violation. By associating meta-information with the contracts, the agent is able to select which of its contracts with other agents are relevant to solving its goals by outsourcing. The agent is able to handle an extendable set of contract types such as standing contracts, purchase contracts and service contracts without the need for a first-principles planner.", "paper_title": "Contract-related agents", "paper_id": "WOS:000237506800013"}