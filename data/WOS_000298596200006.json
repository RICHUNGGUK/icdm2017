{"auto_keywords": [{"score": 0.0468056819425408, "phrase": "information_systems"}, {"score": 0.0068389743957235835, "phrase": "high_evolvability"}, {"score": 0.00481495049065317, "phrase": "evolvable_software_architectures"}, {"score": 0.0047306078475683865, "phrase": "theoretic_stability"}, {"score": 0.0046683172874085015, "phrase": "today's_increasingly_volatile_environments"}, {"score": 0.004446823283475876, "phrase": "current_information_systems"}, {"score": 0.004417579459787307, "phrase": "design_patterns"}, {"score": 0.004330450801016359, "phrase": "high_levels"}, {"score": 0.004124920849728372, "phrase": "systems_theory"}, {"score": 0.0038602215057106917, "phrase": "anticipated_changes"}, {"score": 0.0036124465071873998, "phrase": "so-called_combinatorial_effects"}, {"score": 0.003335948601271999, "phrase": "information_system"}, {"score": 0.0032629585038738856, "phrase": "combinatorial_effects"}, {"score": 0.003121719509312159, "phrase": "modular_structure"}, {"score": 0.0030942116765996426, "phrase": "software_architectures"}, {"score": 0.0029733865110222785, "phrase": "stable_information_systems"}, {"score": 0.002685558057339722, "phrase": "core_functionality"}, {"score": 0.002592100731070259, "phrase": "stringent_constraints"}, {"score": 0.002512990657100351, "phrase": "internal_structure"}, {"score": 0.002382936364692606, "phrase": "automatic_code_generation"}, {"score": 0.002320449502337321, "phrase": "constructive_proof"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software architecture", " patterns", " evolvability", " systems theory", " modularity"], "paper_abstract": "In today's increasingly volatile environments, evolvability is quickly becoming the most desirable characteristic of information systems. Current information systems still struggle to provide these high levels of evolvability. Based on the concept of stability from systems theory, we require that information systems should be stable with respect to a set of anticipated changes in order to exhibit high evolvability. This requires that information systems should be free from so-called combinatorial effects. Combinatorial effects occur when the impact of a change is dependent on the size of the information system. To eliminate these combinatorial effects, we propose four theorems that are constraints on the modular structure of software architectures. The theorems are prescriptive and ensure that stable information systems are built, thereby guaranteeing high evolvability. We further present five higher level modular structures called elements. These elements provide the core functionality of information systems and comply fully with the stringent constraints implied by the four theorems. The internal structure of these elements is described by design patterns which are eligible for automatic code generation. These design patterns offer a constructive proof that it is possible to build information systems in practice by applying this set of theorems. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Towards evolvable software architectures based on systems theoretic stability", "paper_id": "WOS:000298596200006"}