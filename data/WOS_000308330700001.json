{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "almost_optimal_algorithms"}, {"score": 0.004736045157669388, "phrase": "logics_for_complexity_classes"}, {"score": 0.004218602458288531, "phrase": "complexity_classes"}, {"score": 0.0029805015010906013, "phrase": "almost_c-optimal_algorithm"}, {"score": 0.0028596699752849682, "phrase": "set_taut"}, {"score": 0.0027665315772006575, "phrase": "propositional_logic"}, {"score": 0.0023249757987087055, "phrase": "corresponding_turing_machines"}, {"score": 0.0021049977753042253, "phrase": "parameterized_complexity_class"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Optimal algorithms", " logics for complexity classes", " listings", " parameterized complexity"], "paper_abstract": "Let C denote one of the complexity classes \"polynomial time,\" \"logspace,\" or \"nondeterministic logspace.\" We introduce a logic L(C)(inv) and show generalizations and variants of the equivalence (L(C)(inv) captures C if and only if there is an almost C-optimal algorithm in C for the set TAUT of tautologies of propositional logic.) These statements are also equivalent to the existence of a listing of subsets in C of TAUT by corresponding Turing machines and equivalent to the fact that a certain parameterized halting problem is in the parameterized complexity class XCuni.", "paper_title": "From Almost Optimal Algorithms to Logics for Complexity Classes via Listings and a Halting Problem", "paper_id": "WOS:000308330700001"}