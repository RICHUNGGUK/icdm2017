{"auto_keywords": [{"score": 0.04258178486815228, "phrase": "silo"}, {"score": 0.00481495049065317, "phrase": "high_performance_data_deduplication"}, {"score": 0.0045357787854931894, "phrase": "space-efficient_approach"}, {"score": 0.004490842671590769, "phrase": "backup_storage_systems"}, {"score": 0.0043804319008535555, "phrase": "main_challenges"}, {"score": 0.004337028108577593, "phrase": "centralized_data_deduplication"}, {"score": 0.004230382915464492, "phrase": "fingerprint-index_search"}, {"score": 0.0036980501827538455, "phrase": "data_streams"}, {"score": 0.003643185395780667, "phrase": "high_duplicate_elimination"}, {"score": 0.003553540530701019, "phrase": "well_balanced_load"}, {"score": 0.0035183010916001664, "phrase": "extremely_low_ram_overhead"}, {"score": 0.0034660938095219846, "phrase": "main_idea"}, {"score": 0.0032486392192981944, "phrase": "small_files"}, {"score": 0.003152915289414825, "phrase": "large_files"}, {"score": 0.003014576010931602, "phrase": "data_stream"}, {"score": 0.002969821115740559, "phrase": "contiguous_segments"}, {"score": 0.002797329638474873, "phrase": "probabilistic_similarity_detection"}, {"score": 0.002595698433525986, "phrase": "data_blocks"}, {"score": 0.00256993314099902, "phrase": "multiple_backup_nodes"}, {"score": 0.0023143284925318916, "phrase": "ram_usage"}, {"score": 0.0022460727898764216, "phrase": "near-exact_efficiency"}, {"score": 0.002168975681697056, "phrase": "high_deduplication_throughput"}, {"score": 0.002126111716875142, "phrase": "load_balance"}, {"score": 0.0021049977753042253, "phrase": "backup_nodes"}], "paper_keywords": ["Data deduplication", " storage system", " index structure", " performance evaluation"], "paper_abstract": "Data deduplication has gained increasing attention and popularity as a space-efficient approach in backup storage systems. One of the main challenges for centralized data deduplication is the scalability of fingerprint-index search. In this paper, we propose SiLo, a near-exact and scalable deduplication system that effectively and complementarily exploits similarity and locality of data streams to achieve high duplicate elimination, throughput, and well balanced load at extremely low RAM overhead. The main idea behind SiLo is to expose and exploit more similarity by grouping strongly correlated small files into a segment and segmenting large files, and to leverage the locality in the data stream by grouping contiguous segments into blocks to capture similar and duplicate data missed by the probabilistic similarity detection. SiLo also employs a locality based stateless routing algorithm to parallelize and distribute data blocks to multiple backup nodes. By judiciously enhancing similarity through the exploitation of locality and vice versa, SiLo is able to significantly reduce RAM usage for index-lookup, achieve the near-exact efficiency of duplicate elimination, maintain a high deduplication throughput, and obtain load balance among backup nodes.", "paper_title": "Similarity and Locality Based Indexing for High Performance Data Deduplication", "paper_id": "WOS:000351458800020"}