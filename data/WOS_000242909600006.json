{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mobile_channels"}, {"score": 0.04811643643051334, "phrase": "coordination_model"}, {"score": 0.004569630374630379, "phrase": "component-based_software_systems"}, {"score": 0.004246947739596565, "phrase": "compositional_trace-based_semantics"}, {"score": 0.0040942189695983185, "phrase": "java_language"}, {"score": 0.0037066895459425824, "phrase": "dynamic_reconfiguration"}, {"score": 0.0036680857629458785, "phrase": "channel_connections"}, {"score": 0.0035176353680157367, "phrase": "dynamic_distributed_systems"}, {"score": 0.0033381913087533457, "phrase": "efficient_way"}, {"score": 0.0031513240597392843, "phrase": "clear_separation"}, {"score": 0.003102195256794215, "phrase": "computational_part"}, {"score": 0.0030538300202383106, "phrase": "coordination_part"}, {"score": 0.002867771524071872, "phrase": "coordination_structure"}, {"score": 0.0027356847952125433, "phrase": "transparent_and_exogenous_manner"}, {"score": 0.002651015392318126, "phrase": "java_implementation"}, {"score": 0.0024634797027967203, "phrase": "component-based_systems"}, {"score": 0.0024377918036784336, "phrase": "object-oriented_languages"}, {"score": 0.0021049977753042253, "phrase": "composition_and_coordination_issues"}], "paper_keywords": [""], "paper_abstract": "In this paper we present a coordination model for component-based software systems based on the notion of mobile channels, define it in terms of a compositional trace-based semantics, and describe its implementation in the Java language. Channels allow anonymous, and point-to-point communication among components, while mobility allows dynamic reconfiguration of channel connections in a system. This model supports dynamic distributed systems where components can be mobile. It provides an efficient way of interaction among components. Furthermore, our model provides a clear separation between the computational part and the coordination part of a system, allowing the development and description of the coordination structure of a system to be done in a transparent and exogenous manner. Our description of the Java implementation of this coordination model demonstrates that it is self-contained enough for developing component-based systems in object-oriented languages. However, if desired, our model can be used as a basis to extend other models that focus on other aspects of components that are less concerned with composition and coordination issues.", "paper_title": "A component coordination model based on mobile channels", "paper_id": "WOS:000242909600006"}