{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "frequent_itemsets"}, {"score": 0.0444900445333383, "phrase": "sliding_window"}, {"score": 0.0047527118741586055, "phrase": "high-speed_data_streams"}, {"score": 0.004600596158672458, "phrase": "false-negative_approach"}, {"score": 0.00419997182602686, "phrase": "existing_approximate_algorithms"}, {"score": 0.003834099867584972, "phrase": "mining_result"}, {"score": 0.0033658327434624457, "phrase": "higher_computational_complexity"}, {"score": 0.0032157824854214313, "phrase": "mining_accuracy"}, {"score": 0.0030326180561817497, "phrase": "progressively_increasing_minimum_support_function"}, {"score": 0.0026969099161088398, "phrase": "minimum_support"}, {"score": 0.002543224008253855, "phrase": "potential_fis"}, {"score": 0.0023062508214156123, "phrase": "highly_accurate_mining_results"}, {"score": 0.002132637840285576, "phrase": "existing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "mining_fis"}], "paper_keywords": [""], "paper_abstract": "We propose a false-negative approach to approximate the set of frequent itemsets (FIs) over a sliding window. Existing approximate algorithms use an error parameter, E, to control the accuracy of the mining result. However, the use of c leads to a dilemma. A smaller 6 gives a more accurate mining result but higher computational complexity, while increasing epsilon degrades the mining accuracy. We address this dilemma by introducing a progressively increasing minimum support function. When an itemset is retained in the window longer, we require its minimum support to approach the minimum support of an FI. Thus, the number of potential FIs to be maintained is greatly reduced. Our experiments show that our algorithm not only attains highly accurate mining results, but also runs significantly faster and consumes less memory than do existing algorithms for mining FIs over a sliding window.", "paper_title": "Maintaining frequent itemsets over high-speed data streams", "paper_id": "WOS:000237249600053"}