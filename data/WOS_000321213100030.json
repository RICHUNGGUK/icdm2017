{"auto_keywords": [{"score": 0.035820952656110384, "phrase": "virtual_cpus"}, {"score": 0.00481495049065317, "phrase": "smp_vms"}, {"score": 0.004756805752518494, "phrase": "processor_architectures"}, {"score": 0.0046238380150870435, "phrase": "core_counts"}, {"score": 0.004586531354697466, "phrase": "independent_workloads"}, {"score": 0.004476399615305783, "phrase": "single_node"}, {"score": 0.004386637056030611, "phrase": "high_resource_efficiency"}, {"score": 0.0043512358455892, "phrase": "data_centers"}, {"score": 0.004246729915110547, "phrase": "virtualization_technology"}, {"score": 0.004195418010131832, "phrase": "individual_workload"}, {"score": 0.004094639048362357, "phrase": "virtual_machine"}, {"score": 0.004061584718427419, "phrase": "strong_isolation"}, {"score": 0.00386876598761639, "phrase": "hosted_applications"}, {"score": 0.0037301606780397456, "phrase": "improved_hardware_parallelism"}, {"score": 0.0032762198196613084, "phrase": "demand-based_coordinated_scheduling_scheme"}, {"score": 0.003070340620983981, "phrase": "communication-driven_scheduling"}, {"score": 0.0028195727965553367, "phrase": "in-depth_analysis"}, {"score": 0.002762941385784905, "phrase": "ipi_communications"}, {"score": 0.002740607717745287, "phrase": "coordination_demands"}, {"score": 0.002696479050724968, "phrase": "ipi-driven_coscheduling"}, {"score": 0.0026638482306228575, "phrase": "preemption_schemes"}, {"score": 0.0026103363762901423, "phrase": "synchronization_latency"}, {"score": 0.0025892330566358503, "phrase": "unnecessary_cpu_consumption"}, {"score": 0.002506507889886399, "phrase": "load-conscious_cpu_allocation_policy"}, {"score": 0.002456148932305311, "phrase": "load_imbalance"}, {"score": 0.002436289099444074, "phrase": "heterogeneously_consolidated_environments"}, {"score": 0.002406799309495983, "phrase": "proposed_schemes"}, {"score": 0.0023298892270500983, "phrase": "mixed_workloads"}, {"score": 0.0023017847772215977, "phrase": "parsec"}, {"score": 0.0022923586577645143, "phrase": "multithreaded_applications"}, {"score": 0.0022101055924375725, "phrase": "overall_performance"}, {"score": 0.0021922308351126746, "phrase": "consolidated_workloads"}, {"score": 0.0021049977753042253, "phrase": "inefficient_synchronization_latency"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " Virtualization", " Synchronization", " Coscheduling"], "paper_abstract": "As processor architectures have been enhancing their computing capacity by increasing core counts, independent workloads can be consolidated on a single node for the sake of high resource efficiency in data centers. With the prevalence of virtualization technology, each individual workload can be hosted on a virtual machine for strong isolation between co-located workloads. Along with this trend, hosted applications have increasingly been multithreaded to take advantage of improved hardware parallelism. Although the performance of many multithreaded applications highly depends on communication (or synchronization) latency, existing schemes of virtual machine scheduling do not explicitly coordinate virtual CPUs based on their communication behaviors. This paper presents a demand-based coordinated scheduling scheme for consolidated virtual machines that host multithreaded workloads. To this end, we propose communication-driven scheduling that controls time-sharing in response to inter-processor interrupts (IPIs) between virtual CPUs. On the basis of in-depth analysis on the relationship between IPI communications and coordination demands, we devise IPI-driven coscheduling and delayed preemption schemes, which effectively reduce synchronization latency and unnecessary CPU consumption. In addition, we introduce a load-conscious CPU allocation policy in order to address load imbalance in heterogeneously consolidated environments. The proposed schemes are evaluated with respect to various scenarios of mixed workloads using the PARSEC multithreaded applications. In the evaluation, our scheme improves the overall performance of consolidated workloads, especially communication-intensive applications, by reducing inefficient synchronization latency.", "paper_title": "Demand-Based Coordinated Scheduling for SMP VMs", "paper_id": "WOS:000321213100030"}