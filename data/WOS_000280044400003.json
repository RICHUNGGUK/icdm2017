{"auto_keywords": [{"score": 0.03753236927584321, "phrase": "temporal_vertical_profiling"}, {"score": 0.00481495049065317, "phrase": "modern_systems"}, {"score": 0.0045415338200109345, "phrase": "extensive_use"}, {"score": 0.004506265705673849, "phrase": "software_frameworks"}, {"score": 0.003931402465972151, "phrase": "hardware_components"}, {"score": 0.0038106195546165574, "phrase": "interactive_and_iterative_methodology"}, {"score": 0.003389704997952315, "phrase": "multiple_layers"}, {"score": 0.0032727116186194584, "phrase": "application's_performance"}, {"score": 0.0032220148724914867, "phrase": "application_performance"}, {"score": 0.0030986716686217768, "phrase": "time-varying_behavior"}, {"score": 0.0030269369940823902, "phrase": "aggregate_statistics"}, {"score": 0.002911039832825817, "phrase": "performance_anomalies"}, {"score": 0.002766963729586353, "phrase": "hardware_and_software_components"}, {"score": 0.0027134630181926854, "phrase": "application's_behavior"}, {"score": 0.0025690867646665835, "phrase": "time_series"}, {"score": 0.0024610448251906453, "phrase": "system_layers"}, {"score": 0.0022760856906838814, "phrase": "large_space"}, {"score": 0.002197443382039439, "phrase": "small_benchmarks"}, {"score": 0.002163367190715979, "phrase": "systematic_way"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance", " whole-system profiling", " perturbation", " performance counters"], "paper_abstract": "Modern systems are enormously complex; many applications today comprise millions of lines of code, make extensive use of software frameworks, and run on complex, multi-tiered, run-time systems. Understanding the performance of these applications is challenging because it depends on the interactions between the many software and the hardware components. This paper describes and evaluates an interactive and iterative methodology, temporal vertical profiling, for understanding the performance of applications. There are two key insights behind temporal vertical profiling. First, we need to collect and reason across information from multiple layers of the system before we can understand an application's performance. Second, application performance changes over time and thus we must consider the time-varying behavior of the application instead of aggregate statistics. We have developed temporal vertical profiling from our own experience of analyzing performance anomalies and have found it very helpful for methodically exploring the space of hardware and software components. By representing an application's behavior as a set of metrics, where each metric is represented as a time series, temporal vertical profiling provides a way to reason about performance across system layers, regardless of their level of abstraction, and independent of their semantics. Temporal vertical profiling provides a methodology to explore a large space of metrics, hundreds of metrics even for small benchmarks, in a systematic way. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Temporal vertical profiling", "paper_id": "WOS:000280044400003"}