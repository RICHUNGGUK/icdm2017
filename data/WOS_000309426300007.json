{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "average_flow_time"}, {"score": 0.004742511243894382, "phrase": "broadcast_scheduling"}, {"score": 0.004497410940849537, "phrase": "online_pull-based_broadcast_model"}, {"score": 0.004168986485488861, "phrase": "n_pages"}, {"score": 0.0036368625017975343, "phrase": "page_p"}, {"score": 0.0035550029054401016, "phrase": "outstanding_requests"}, {"score": 0.0026843584448921565, "phrase": "decade-long_search"}, {"score": 0.002623881637290192, "phrase": "online_algorithm"}, {"score": 0.0023412849215629986, "phrase": "fixed_epsilon"}, {"score": 0.002153540857619362, "phrase": "first_analysis"}, {"score": 0.0021049977753042253, "phrase": "online_scalable_algorithm"}], "paper_keywords": ["Broadcast", " average flow time", " online", " scalable"], "paper_abstract": "In this article, the online pull-based broadcast model is considered. In this model, there are n pages of data stored at a server and requests arrive for pages online. When the server broadcasts page p, all outstanding requests for the same page p are simultaneously satisfied. We consider the problem of minimizing average (total) flow time online where all pages are unit-sized. For this problem, there has been a decade-long search for an online algorithm which is scalable, that is, (1 + epsilon)-speed O(1)-competitive for any fixed epsilon > 0. In this article, we give the first analysis of an online scalable algorithm.", "paper_title": "An Online Scalable Algorithm for Average Flow Time in Broadcast Scheduling", "paper_id": "WOS:000309426300007"}