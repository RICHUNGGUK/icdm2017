{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graphs"}, {"score": 0.004621447740470602, "phrase": "graph_labelings"}, {"score": 0.0036126731589251906, "phrase": "common_neighbor"}, {"score": 0.0035288860880035985, "phrase": "distinct_integers"}, {"score": 0.003367077034382727, "phrase": "fixed_ka_parts"}, {"score": 0.0031565959573536194, "phrase": "np-complete_problem"}, {"score": 0.0030833537429977797, "phrase": "exact_exponential_time_algorithms"}, {"score": 0.0029766550209309127, "phrase": "naive_o"}, {"score": 0.0027417911324611917, "phrase": "possible_mappings"}, {"score": 0.002600661525224505, "phrase": "first_np-complete_case"}, {"score": 0.0025106241866273897, "phrase": "running_time"}, {"score": 0.0023124457559811087, "phrase": "dynamic_programming"}], "paper_keywords": ["Graph", " Algorithm", " Moderately exponential time algorithm", " L(2,1)-labeling"], "paper_abstract": "The notion of distance constrained graph labelings, motivated by the Frequency Assignment Problem, reads as follows: A mapping from the vertex set of a graph G=(V,E) into an interval of integers {0,aEuro broken vertical bar,k} is an L(2,1)-labeling of G of span k if any two adjacent vertices are mapped onto integers that are at least 2 apart, and every two vertices with a common neighbor are mapped onto distinct integers. It is known that for any fixed ka parts per thousand yen4, deciding the existence of such a labeling is an NP-complete problem. We present exact exponential time algorithms that are faster than the naive O (*)((k+1) (n) ) algorithm that would try all possible mappings. The improvement is best seen in the first NP-complete case of k=4, where the running time of our algorithm is O(1.3006 (n) ). Furthermore we show that dynamic programming can be used to establish an O(3.8730 (n) ) algorithm to compute an optimal L(2,1)-labeling.", "paper_title": "Exact Algorithms for L(2,1)-Labeling of Graphs", "paper_id": "WOS:000286462700004"}