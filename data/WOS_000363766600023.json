{"auto_keywords": [{"score": 0.047929617715279135, "phrase": "pregel"}, {"score": 0.01887677586770012, "phrase": "expregel"}, {"score": 0.008713763052207524, "phrase": "large-scale_graph_processing"}, {"score": 0.007226371231792464, "phrase": "superstep"}, {"score": 0.004522796947899013, "phrase": "bulk_synchronous_parallel"}, {"score": 0.004410938507689426, "phrase": "highly_used_systems"}, {"score": 0.0043560464825349275, "phrase": "large-scale_graph_problems"}, {"score": 0.0038112201846057445, "phrase": "distributed_computations"}, {"score": 0.0034476484413811987, "phrase": "million_vertices"}, {"score": 0.003279039724748895, "phrase": "side_effect"}, {"score": 0.0032517484445814334, "phrase": "skew_problem"}, {"score": 0.0032246835734680377, "phrase": "distributed_computing_environment"}, {"score": 0.0031579997262619758, "phrase": "pregel-like_model"}, {"score": 0.0030414140732789186, "phrase": "communication_messages"}, {"score": 0.0028446460307503343, "phrase": "exchanged_messages"}, {"score": 0.002728166176898539, "phrase": "graph_topologies"}, {"score": 0.0026384167183586015, "phrase": "important_feature"}, {"score": 0.0025730425700096365, "phrase": "graph_analysis_programs"}, {"score": 0.0024065032567542107, "phrase": "large-scale_real-world_graphs"}, {"score": 0.002346861891137455, "phrase": "network_traffic"}, {"score": 0.0022507188208913394, "phrase": "runtime_speed"}, {"score": 0.0022133711375320244, "phrase": "proposed_model"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["large-scale graph", " Pregel computational model", " superstep", " distributed graph processing"], "paper_abstract": "These days, large-scale graph processing becomes more and more important. Pregel, inspired by Bulk Synchronous Parallel, is one of the highly used systems to process large-scale graph problems. In Pregel, each vertex executes a function and waits for a superstep to communicate its data to other vertices. Superstep is a very time-consuming operation, used by Pregel, to synchronize distributed computations in a cluster of computers. However, it may become a bottleneck when the number of communications increases in a graph with million vertices. Superstep works like a barrier in Pregel that increases the side effect of skew problem in distributed computing environment. ExPregel is a Pregel-like model that is designed to reduce the number of communication messages between two vertices resided on two different computational nodes. We have proven that ExPregel reduces the number of exchanged messages as well as the number of supersteps for all graph topologies. Enhancing parallelism in our new computational model is another important feature that manifolds the speed of graph analysis programs. More interestingly, ExPregel uses the same model of programming as Pregel. Our experiments on large-scale real-world graphs show that ExPregel can reduce network traffic as well as number of supersteps from 45% to 96%. Runtime speed up in the proposed model varies from 1.2x to 30x. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "ExPregel: a new computational model for large-scale graph processing", "paper_id": "WOS:000363766600023"}