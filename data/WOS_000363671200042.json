{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "meshhisto"}, {"score": 0.004665162327051461, "phrase": "retargeting_editing_histories"}, {"score": 0.004623224002010226, "phrase": "current_modeling_packages"}, {"score": 0.004499647408293102, "phrase": "polygonal_meshes"}, {"score": 0.004243064277617193, "phrase": "recent_cloud-based_services"}, {"score": 0.004129607015893271, "phrase": "editing_documents"}, {"score": 0.004092463367307375, "phrase": "real-time_collaboration"}, {"score": 0.0038590090616766434, "phrase": "collaborative_editing"}, {"score": 0.0038242899532391914, "phrase": "low-polygonal_and_subdivision_mesh_models"}, {"score": 0.003688497722149817, "phrase": "special_instance"}, {"score": 0.0036553070575015344, "phrase": "distributed_version_control"}, {"score": 0.0035898158129721003, "phrase": "concurrent_editing"}, {"score": 0.0034937647771945803, "phrase": "mesh_version_histories"}, {"score": 0.003369669078274226, "phrase": "mesh_differences"}, {"score": 0.003249966782844541, "phrase": "primitive_editing_operations"}, {"score": 0.0029959082125682918, "phrase": "others'_editing_histories"}, {"score": 0.002889444701599236, "phrase": "new_parts"}, {"score": 0.002824829396721492, "phrase": "potentially_different_topology"}, {"score": 0.002675571068567923, "phrase": "collaborative_editing_sessions"}, {"score": 0.0025000115574335693, "phrase": "proposed_system"}, {"score": 0.002389403849342894, "phrase": "mesh_complexity"}, {"score": 0.0022836785412390544, "phrase": "prior_work"}, {"score": 0.00222249726328354, "phrase": "proposed_collaborative_workflow"}, {"score": 0.0021925226977381244, "phrase": "user_study"}, {"score": 0.0021049977753042253, "phrase": "collaborative_workflows"}], "paper_keywords": ["collaborative modeling", " polygonal modeling", " version control", " diff and merge"], "paper_abstract": "Current modeling packages have polished interfaces for editing polygonal meshes, where artists work individually on each mesh. A variety of recent cloud-based services have shown the benefits of editing documents in real-time collaboration with others. In this paper, we present a system for collaborative editing of low-polygonal and subdivision mesh models. We cast collaborative editing as a special instance of distributed version control. We support concurrent editing by robustly sharing and merging mesh version histories in real-time. We store and transmit mesh differences efficiently by encoding them as sequences of primitive editing operations. We enable collaboration by merging and detecting conflicts. We extend this model letting artists adapt others' editing histories by retargeting sequences of editing operations to new parts of the mesh with potentially different topology. We tested our algorithms by editing meshes with up to thousand edits, in collaborative editing sessions lasting a few hours, and by retargeting sequences of several hundred edits. We found the proposed system to be reliable, fast and scaling well with mesh complexity. We demonstrate that our merge algorithm is more robust than prior work. We further validated the proposed collaborative workflow with a user study where MeshHisto was consistently preferred over other alternatives for collaborative workflows.", "paper_title": "MeshHisto: Collaborative Modeling by Sharing and Retargeting Editing Histories", "paper_id": "WOS:000363671200042"}