{"auto_keywords": [{"score": 0.04522176534199055, "phrase": "random_bits"}, {"score": 0.004544770921520536, "phrase": "universal_probability_distribution"}, {"score": 0.00446471538346719, "phrase": "binary_string_x"}, {"score": 0.004270665568018583, "phrase": "universal_device"}, {"score": 0.004139850082354509, "phrase": "input_string"}, {"score": 0.003942299471749811, "phrase": "successful_input"}, {"score": 0.0037043953071235155, "phrase": "relative_probabilities"}, {"score": 0.0035908627899097407, "phrase": "normalized_prediction"}, {"score": 0.0032272929113113203, "phrase": "continued_random_input_string"}, {"score": 0.002811464848641341, "phrase": "expected_value"}, {"score": 0.0026182085765020548, "phrase": "kolmogorov_complexity"}, {"score": 0.0025042115651986332, "phrase": "positive_integer"}, {"score": 0.0022604585778195152, "phrase": "uniform_distribution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["algorithmic probability", " analysis of algorithms", " halting problem", " incomputable", " Kolmogorov complexity", " normalization", " theory of computation", " Turing machine", " universal probability distribution", " universal Turing machine"], "paper_abstract": "In order to generate a universal probability distribution to extrapolate a binary string x of length i, we feed random bits into a universal device, M. When we find an input string that gives an output matching x, we continue the successful input with random bits until M produces a zero or one as output. The relative probabilities of these two continuations can give a normalized prediction for the probability of the symbol following x. There is, however, a probability, P(i+l) (u) that the continued random input string will not generate any output for the (i + l)th symbol. We will show E(mu) Sigma(n)(i=l) P(i)((u)) <= k(mu) ln 2. Here E(mu) is the expected value with respect to mu, the probability distribution that created x. k(mu) is the Kolmogorov complexity of mu with respect to M. n is any positive integer. Usually we do not know mu and so we do not know k(mu). However, if mu is the uniform distribution, we can usually find a good upper bound for k(mu). Published by Elsevier B.V.", "paper_title": "The probability of \"undefined\" (non-converging) output in generating the universal probability distribution", "paper_id": "WOS:000256704600003"}