{"auto_keywords": [{"score": 0.04166660066361688, "phrase": "liana"}, {"score": 0.00481495049065317, "phrase": "distributed_systems_analysis"}, {"score": 0.004744437370338926, "phrase": "monitoring_tools"}, {"score": 0.004640590144749795, "phrase": "new_requirements"}, {"score": 0.0045895181082906715, "phrase": "old_problem"}, {"score": 0.004522291357556591, "phrase": "asynchronous_clocks"}, {"score": 0.004489046493029801, "phrase": "distributed_systems"}, {"score": 0.004456044928556639, "phrase": "existing_approaches"}, {"score": 0.004390764654147291, "phrase": "convex_hull"}, {"score": 0.004342430078306461, "phrase": "excellent_accuracy"}, {"score": 0.004294625285753825, "phrase": "posteriori_analysis"}, {"score": 0.004216112320418982, "phrase": "significant_cost"}, {"score": 0.004123781267600542, "phrase": "live_mode"}, {"score": 0.0040783736687590635, "phrase": "large_clusters"}, {"score": 0.004003798249233137, "phrase": "novel_method"}, {"score": 0.0036105923401756126, "phrase": "communication_link"}, {"score": 0.0035184576341236317, "phrase": "best_synchronization_paths"}, {"score": 0.0034925663938977715, "phrase": "time_reference_node"}, {"score": 0.003390886284555397, "phrase": "message_exchanges"}, {"score": 0.003196292402522254, "phrase": "trace_events"}, {"score": 0.0029796206196589115, "phrase": "network_graph"}, {"score": 0.0029467742734417255, "phrase": "minimum_spanning_tree"}, {"score": 0.002860938351029155, "phrase": "best_accuracy"}, {"score": 0.0027982016314450717, "phrase": "spanning_tree"}, {"score": 0.0027469703311742647, "phrase": "central_node"}, {"score": 0.0026966744704447275, "phrase": "time_reference"}, {"score": 0.0025892330566358503, "phrase": "reference_node"}, {"score": 0.002495268931035983, "phrase": "synchronization_accuracy"}, {"score": 0.0024768883044869023, "phrase": "time_complexity"}, {"score": 0.0023958326775913165, "phrase": "online_distributed_trace_synchronization"}, {"score": 0.002343271162668978, "phrase": "realistic_scenarios"}, {"score": 0.002317423416027688, "phrase": "diverse_set"}, {"score": 0.0023003498123420237, "phrase": "network_topologies"}, {"score": 0.0022250584824198218, "phrase": "precise_results"}, {"score": 0.0021522261505574035, "phrase": "large_cloud-distributed_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Time synchronization", " Timestamps", " Drift", " Offset", " Distributed systems", " Trace"], "paper_abstract": "Tracing and monitoring tools, and other similar analysis tools, add new requirements to the old problem of coping with asynchronous clocks in distributed systems. Existing approaches based on the convex hull can achieve excellent accuracy for a posteriori analysis, but impose a significant cost and latency when used in live mode and over large clusters. We propose a novel method, LIANA (Live Incremental Asynchronous Network Analysis), for incrementally computing the clock offset, and updating it as the network evolves, along each communication link, as well as selecting the best synchronization paths and time reference node. Each connection in a network requires message exchanges to compute the clock skew and offset between two connected nodes. This method relies on the trace events recorded for the existing TCP/IP traffic between nodes. After computing the offset and its accuracy for every connection in the network graph, a minimum spanning tree is computed. The edges with the best accuracy are selected and form the spanning tree. Then, a central node is selected as the time reference to optimally compute the offset from any node to this reference node. LIANA is efficient, both in terms of synchronization accuracy and time complexity. The method, which is used for online distributed trace synchronization, has been evaluated in realistic scenarios with a diverse set of network topologies and traffic. We show that LIANA generates precise results highly efficiently, which makes it suitable for large cloud-distributed systems. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "LIANA: Live incremental time synchronization of traces for distributed systems analysis", "paper_id": "WOS:000342717900016"}