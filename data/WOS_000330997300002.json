{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "direct_volume_rendering"}, {"score": 0.04339687839936191, "phrase": "interactive_rates"}, {"score": 0.025421208586464166, "phrase": "large_datasets"}, {"score": 0.02464937234952462, "phrase": "progressive_rendering"}, {"score": 0.004739773204474094, "phrase": "unstructured_tetrahedral"}, {"score": 0.00462919213721188, "phrase": "cuda_and_openmp._direct_volume_visualization"}, {"score": 0.004312622975366672, "phrase": "computational_fluid_dynamics"}, {"score": 0.0040176151419992956, "phrase": "large_unstructured_volumetric_grids"}, {"score": 0.003923815926819606, "phrase": "challenging_problem"}, {"score": 0.003802135020791801, "phrase": "direct_volume_rendering_algorithms"}, {"score": 0.0035699363258657212, "phrase": "compute_unified_device_architecture"}, {"score": 0.0033518704336033874, "phrase": "gpu-based_volume_rendering_algorithm"}, {"score": 0.0031719830393831115, "phrase": "cell_projection-based_ray-casting_algorithm"}, {"score": 0.002931569771634119, "phrase": "multicore_parallelized_version"}, {"score": 0.0028630535573013686, "phrase": "cell-projection_algorithm"}, {"score": 0.0028182709801744736, "phrase": "openmp."}, {"score": 0.00266693888510356, "phrase": "image_quality"}, {"score": 0.0025038930574283174, "phrase": "low_memory_footprint"}, {"score": 0.002224510044064184, "phrase": "gpu_implementation"}, {"score": 0.0021724831184390192, "phrase": "serial_and_multicore_implementations"}, {"score": 0.0021049977753042253, "phrase": "significant_speed-ups"}], "paper_keywords": ["Direct volume visualization", " Volume rendering", " Unstructured tetrahedral meshes", " Graphics Processing Unit (GPU)", " Compute Unified Device Architecture (CUDA)", " OpenMP"], "paper_abstract": "Direct volume visualization is an important method in many areas, including computational fluid dynamics and medicine. Achieving interactive rates for direct volume rendering of large unstructured volumetric grids is a challenging problem, but parallelizing direct volume rendering algorithms can help achieve this goal. Using Compute Unified Device Architecture (CUDA), we propose a GPU-based volume rendering algorithm that itself is based on a cell projection-based ray-casting algorithm designed for CPU implementations. We also propose a multicore parallelized version of the cell-projection algorithm using OpenMP. In both algorithms, we favor image quality over rendering speed. Our algorithm has a low memory footprint, allowing us to render large datasets. Our algorithm supports progressive rendering. We compared the GPU implementation with the serial and multicore implementations. We observed significant speed-ups that, together with progressive rendering, enables reaching interactive rates for large datasets.", "paper_title": "Direct volume rendering of unstructured tetrahedral meshes using CUDA and OpenMP", "paper_id": "WOS:000330997300002"}