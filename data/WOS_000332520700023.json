{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "effective_software_fault_localization"}, {"score": 0.004624751696958501, "phrase": "reliable_software"}, {"score": 0.004578382275810468, "phrase": "manual_debugging"}, {"score": 0.0043533862892678864, "phrase": "growing_size"}, {"score": 0.00418134346679498, "phrase": "fault_localization"}, {"score": 0.004036369952624852, "phrase": "program_debugging"}, {"score": 0.003916098498242888, "phrase": "great_demand"}, {"score": 0.003876806615011266, "phrase": "fault_localization_techniques"}, {"score": 0.0033492947290751996, "phrase": "suspicious_locations"}, {"score": 0.003233075944817365, "phrase": "prior_information"}, {"score": 0.0032006150973842846, "phrase": "program_structure"}, {"score": 0.0028933521924166287, "phrase": "multi-fault_programs"}, {"score": 0.0025761937402886954, "phrase": "empirical_evaluation"}, {"score": 0.0021807544600219216, "phrase": "critical_value"}], "paper_keywords": ["Testing", " debugging", " software fault localization", " EXAM score"], "paper_abstract": "Effective debugging is crucial to producing reliable software. Manual debugging is becoming prohibitively expensive, especially due to the growing size and complexity of programs. Given that fault localization is one of the most expensive activities in program debugging, there has been a great demand for fault localization techniques that can help guide programmers to the locations of faults. In this paper, a technique named DStar (D*) is proposed which can suggest suspicious locations for fault localization automaticallywithout requiring any prior information on program structure or semantics. D* is evaluated across 24 programs, and is compared to 38 different fault localization techniques. Both single-fault and multi-fault programs are used. Results indicate that D* is more effective at locating faults than all the other techniques it is compared to. An empirical evaluation is also conducted to illustrate how the effectiveness of D* increases as the exponent (star) grows, and then levels off when the exponent (star) exceeds a critical value. Discussions are presented to support such observations.", "paper_title": "The DStar Method for Effective Software Fault Localization", "paper_id": "WOS:000332520700023"}