{"auto_keywords": [{"score": 0.03355922214339965, "phrase": "input_shape"}, {"score": 0.00481495049065317, "phrase": "foldabilizing_furniture"}, {"score": 0.0046986841646790315, "phrase": "foldabilization_problem"}, {"score": 0.004652963867892925, "phrase": "space-saving_furniture_design"}, {"score": 0.004260906498835763, "phrase": "minimum_amount"}, {"score": 0.003978866233891427, "phrase": "space_-_the_object"}, {"score": 0.0036256123915754303, "phrase": "prescribed_folding_direction"}, {"score": 0.0035902958977673313, "phrase": "allowed_object_modifications"}, {"score": 0.0034020946201397057, "phrase": "automatic_algorithm"}, {"score": 0.0032714270066711835, "phrase": "nested_optimization_problem"}, {"score": 0.0029807934480637855, "phrase": "integral_folding_units"}, {"score": 0.0028106505443369545, "phrase": "conflict_relations"}, {"score": 0.0025860636370864084, "phrase": "minimum-cost_foldabilization"}, {"score": 0.002548331088496964, "phrase": "conflictfree_folding"}, {"score": 0.002474505516708906, "phrase": "maximum-weight_independent_set_problem"}, {"score": 0.002321787726770895, "phrase": "folding_units"}, {"score": 0.002287902310873394, "phrase": "optimized_ordering"}, {"score": 0.0021999341184897217, "phrase": "estimated_foldabilization_costs"}, {"score": 0.002157223877108711, "phrase": "numerous_foldabilization_results"}, {"score": 0.002125735077004312, "phrase": "interactive_speed"}], "paper_keywords": ["foldabilization", " folding", " furniture design", " shape optimization", " shape compaction"], "paper_abstract": "We introduce the foldabilization problem for space-saving furniture design. Namely, given a 3D object representing a piece of furniture, our goal is to apply a minimum amount of modification to the object so that it can be folded to save space - the object is thus foldabilized. We focus on one instance of the problem where folding is with respect to a prescribed folding direction and allowed object modifications include hinge insertion and part shrinking. We develop an automatic algorithm for foldabilization by formulating and solving a nested optimization problem operating at two granularity levels of the input shape. Specifically, the input shape is first partitioned into a set of integral folding units. For each unit, we construct a graph which encodes conflict relations, e.g., collisions, between foldings implied by various patch foldabilizations within the unit. Finding a minimum-cost foldabilization with a conflictfree folding is an instance of the maximum-weight independent set problem. In the outer loop of the optimization, we process the folding units in an optimized ordering where the units are sorted based on estimated foldabilization costs. We show numerous foldabilization results computed at interactive speed and 3D-print physical prototypes of these results to demonstrate manufacturability.", "paper_title": "Foldabilizing Furniture", "paper_id": "WOS:000358786600056"}