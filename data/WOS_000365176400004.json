{"auto_keywords": [{"score": 0.03538865990168774, "phrase": "clause_elimination_procedures"}, {"score": 0.02027577898266403, "phrase": "qsat"}, {"score": 0.010436266531282396, "phrase": "sat"}, {"score": 0.006432624335059718, "phrase": "clause_elimination"}, {"score": 0.00481495049065317, "phrase": "famous_archetypical_np-complete_problem"}, {"score": 0.00478269467988236, "phrase": "boolean"}, {"score": 0.004655285779819366, "phrase": "quantified_boolean_satisfiability"}, {"score": 0.004562027986828209, "phrase": "central_declarative_programming_paradigms"}, {"score": 0.0045160988337296605, "phrase": "real-world_instances"}, {"score": 0.004278807087784626, "phrase": "practical_implementations"}, {"score": 0.0042500322609733574, "phrase": "decision_procedures"}, {"score": 0.004013098289856805, "phrase": "simplification_techniques"}, {"score": 0.003986103192038901, "phrase": "conjunctive_normal_form"}, {"score": 0.003879919492075319, "phrase": "prenex_conjunctive_normal_form"}, {"score": 0.003789322824699646, "phrase": "standard_input_formats"}, {"score": 0.0036144035798673967, "phrase": "solver_efficiency"}, {"score": 0.003136471009987959, "phrase": "practice_polynomial-time"}, {"score": 0.003063180586734181, "phrase": "satisfiability_status"}, {"score": 0.0030017207229983385, "phrase": "known_procedures"}, {"score": 0.002872742947035998, "phrase": "novel_elimination_procedures"}, {"score": 0.002843772431469196, "phrase": "asymmetric_variants"}, {"score": 0.002758597251689795, "phrase": "novel_family"}, {"score": 0.0027400176498756823, "phrase": "so-called_covered_clause_elimination_procedures"}, {"score": 0.0026579417954765137, "phrase": "cnf-level_procedures"}, {"score": 0.0026045914281028473, "phrase": "considered_clause_elimination_procedures"}, {"score": 0.002501073751997206, "phrase": "logical_equivalence"}, {"score": 0.0024097920845706795, "phrase": "original_cnfs"}, {"score": 0.0023694065215394593, "phrase": "simplified_cnfs"}, {"score": 0.002321834168782981, "phrase": "practical_applications"}, {"score": 0.0022145052062614514, "phrase": "empirical_evaluation"}, {"score": 0.0021921581733031514, "phrase": "practical_importance"}, {"score": 0.0021192805640815817, "phrase": "solver_runtimes"}, {"score": 0.0021049977753042253, "phrase": "standard_real-world_application_benchmarks"}], "paper_keywords": [""], "paper_abstract": "The famous archetypical NP-complete problem of Boolean satisfiability (SAT) and its PSPACEcomplete generalization of quantified Boolean satisfiability (QSAT) have become central declarative programming paradigms through which real-world instances of various computationally hard problems can be efficiently solved. This success has been achieved through several breakthroughs in practical implementations of decision procedures for SAT and QSAT, that is, in SAT and QSAT solvers. Here, simplification techniques for conjunctive normal form (CNF) for SAT and for prenex conjunctive normal form (PCNF) for QSAT the standard input formats of SAT and QSAT solvers-have recently proven very effective in increasing solver efficiency when applied before (i.e., in preprocessing) or during (i.e., in inprocessing) satisfiability search. In this article, we develop and analyze clause elimination procedures for pre- and inprocessing. Clause elimination procedures form a family of (P)CNF formula simplification techniques which remove clauses that have specific (in practice polynomial-time) redundancy properties while maintaining the satisfiability status of the formulas. Extending known procedures such as tautology, subsumption, and blocked clause elimination, we introduce novel elimination procedures based on asymmetric variants of these techniques, and also develop a novel family of so-called covered clause elimination procedures, as well as natural liftings of the CNF-level procedures to PCNF. We analyze the considered clause elimination procedures from various perspectives. Furthermore, for the variants not preserving logical equivalence under clause elimination, we show how to reconstruct solutions to original CNFs from satisfying assignments to simplified CNFs, which is important for practical applications for the procedures. Complementing the more theoretical analysis, we present results on an empirical evaluation on the practical importance of the clause elimination procedures in terms of the effect on solver runtimes on standard real-world application benchmarks. It turns out that the importance of applying the clause elimination procedures developed in this work is empirically emphasized in the context of state-of-the-art QSAT solving.", "paper_title": "Clause Elimination for SAT and QSAT", "paper_id": "WOS:000365176400004"}