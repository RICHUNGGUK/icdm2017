{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "stutter-equivalent_loop_transformation"}, {"score": 0.0046937237797352515, "phrase": "significant_interest"}, {"score": 0.00457553517865013, "phrase": "runtime_checks"}, {"score": 0.0044150318724093226, "phrase": "fault_detection"}, {"score": 0.004238452771031322, "phrase": "recent_work"}, {"score": 0.004007083686875716, "phrase": "program_execution's_conformance"}, {"score": 0.003946195919158241, "phrase": "property_specifications"}, {"score": 0.0037307208089736835, "phrase": "finite_state_automaton"}, {"score": 0.003636692152882991, "phrase": "great_promise"}, {"score": 0.0029798924689472014, "phrase": "runtime_monitoring"}, {"score": 0.002875200380397413, "phrase": "program_loops"}, {"score": 0.0028026735035370206, "phrase": "general_framework"}, {"score": 0.0023798115577749225, "phrase": "loop_iterations"}, {"score": 0.002284444272376043, "phrase": "empirical_study"}], "paper_keywords": ["Reliability", " Verification", " optimization", " runtime monitoring", " stutter invariance", " loop transformation"], "paper_abstract": "There has been significant interest in equipping programs with runtime checks aimed at detecting errors to improve fault detection during testing and in the field. Recent work in this area has studied methods for efficiently monitoring a program execution's conformance to path property specifications, e. g., such as those captured by a finite state automaton. These techniques show great promise, but their broad applicability is hampered by the fact that for certain combinations of programs and properties the overhead of checking can slow the program down by up to 3500%. We have observed that, in many cases, the overhead of runtime monitoring is due to the behavior of program loops. We present a general framework for optimizing the monitoring of loops relative to a property. This framework allows monitors to process a loop in constant-time rather than time that is proportional to the number of loop iterations. We present the results of an empirical study that demonstrates that significant overhead reduction that can be achieved by applying the framework to monitor properties of several large Java programs.", "paper_title": "Monitor Optimization via Stutter-Equivalent Loop Transformation", "paper_id": "WOS:000286595800018"}