{"auto_keywords": [{"score": 0.048412942923644654, "phrase": "flash_memory"}, {"score": 0.00481495049065317, "phrase": "hybrid-mapping_nand_flash_memory"}, {"score": 0.0045122922461952805, "phrase": "different_hardware_vendors"}, {"score": 0.00443308765153716, "phrase": "primary_choice"}, {"score": 0.00438105507792004, "phrase": "data_storage"}, {"score": 0.00420368356873615, "phrase": "limited_number"}, {"score": 0.004154332348800334, "phrase": "block-erase_lifecycles"}, {"score": 0.003939296259436904, "phrase": "existing_approaches"}, {"score": 0.00384731849108269, "phrase": "flash_memory_lifetime"}, {"score": 0.0036052633308076933, "phrase": "erase_operations"}, {"score": 0.003378385493203297, "phrase": "probability-based_static_wear-leveling"}, {"score": 0.0032223742018434856, "phrase": "future_state"}, {"score": 0.00314708280192844, "phrase": "present_state"}, {"score": 0.0030017207229983385, "phrase": "present_visit_probability"}, {"score": 0.0029489527539649737, "phrase": "logical_block"}, {"score": 0.002897109710213723, "phrase": "next_state"}, {"score": 0.0027796495180095657, "phrase": "wear-leveling_distribution"}, {"score": 0.0026986685585382347, "phrase": "standard_deviation"}, {"score": 0.002286781334850213, "phrase": "hot_blocks"}, {"score": 0.002259883463607508, "phrase": "cold_blocks"}, {"score": 0.0022201273900989416, "phrase": "real_system-based_traces"}, {"score": 0.0021049977753042253, "phrase": "existing_design"}], "paper_keywords": ["Flash memory", " Wear leveling", " Embedded system", " File system", " Flash translation layer"], "paper_abstract": "Owing to its desirable characteristics, flash memory has become attractive to different hardware vendors as a primary choice for data storage. However, because of a limited number of block-erase lifecycles, it has become mandatory to redesign the existing approaches to maximize the flash memory lifetime. Wear-leveling is a mechanism that helps to evenly distribute erase operations to all blocks and enhance lifetime. This research proposes probability-based static wear-leveling. Based on the Markov Chain theory, the future state depends on the present state. Mapping is implemented according to the present visit probability of each logical block in the next state. In each state, the wear-leveling distribution is computed using the standard deviation to determine whether it exceeds the threshold. If it does exceed the threshold, wear-leveling is maintained throughout all blocks in the flash memory by swapping the hot blocks with cold blocks. Using real system-based traces, we have proved that our proposal outperforms the existing design in terms of wear-leveling.", "paper_title": "Probability-based static wear-leveling algorithm for block and hybrid-mapping NAND flash memory", "paper_id": "WOS:000208821700004"}