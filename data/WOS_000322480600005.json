{"auto_keywords": [{"score": 0.04351133883392896, "phrase": "software_engineering_tools"}, {"score": 0.03659824843462314, "phrase": "ift"}, {"score": 0.00481495049065317, "phrase": "human_behavior"}, {"score": 0.0047370749839861165, "phrase": "important_but_largely_untapped_resource"}, {"score": 0.004486432283770142, "phrase": "human_developers'_needs"}, {"score": 0.0042489946866108895, "phrase": "valuable_resource"}, {"score": 0.004002242925856335, "phrase": "specific_methods"}, {"score": 0.003916098498242888, "phrase": "fundamental_principles"}, {"score": 0.0037903327482565097, "phrase": "new_situations"}, {"score": 0.003512308265830794, "phrase": "information_foraging_theory"}, {"score": 0.003399466007862412, "phrase": "information-intensive_software_engineering_tasks"}, {"score": 0.00295078850927459, "phrase": "information-intensive_activities"}, {"score": 0.0026175952455594277, "phrase": "mathematical_equations"}, {"score": 0.0023990982005125763, "phrase": "software_engineers"}, {"score": 0.0022967713922705, "phrase": "ift_perspective"}, {"score": 0.0022595316565074304, "phrase": "recurring_design_patterns"}, {"score": 0.0022228943786652914, "phrase": "successful_tools"}, {"score": 0.002151388538895855, "phrase": "future_research"}], "paper_keywords": ["Design", " Human Factors", " Information foraging", " software maintenance"], "paper_abstract": "Theories of human behavior are an important but largely untapped resource for software engineering research. They facilitate understanding of human developers' needs and activities, and thus can serve as a valuable resource to researchers designing software engineering tools. Furthermore, theories abstract beyond specific methods and tools to fundamental principles that can be applied to new situations. Toward filling this gap, we investigate the applicability and utility of Information Foraging Theory (IFT) for understanding information-intensive software engineering tasks, drawing upon literature in three areas: debugging, refactoring, and reuse. In particular, we focus on software engineering tools that aim to support information-intensive activities, that is, activities in which developers spend time seeking information. Regarding applicability, we consider whether and how the mathematical equations within IFT can be used to explain why certain existing tools have proven empirically successful at helping software engineers. Regarding utility, we applied an IFT perspective to identify recurring design patterns in these successful tools, and consider what opportunities for future research are revealed by our IFT perspective.", "paper_title": "An Information Foraging Theory Perspective on Tools for Debugging, Refactoring, and Reuse Tasks", "paper_id": "WOS:000322480600005"}