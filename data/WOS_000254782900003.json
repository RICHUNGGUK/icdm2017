{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "pipelined_machine_verification"}, {"score": 0.004655924035639928, "phrase": "refinement-based_compositional_framework"}, {"score": 0.0045324756541157574, "phrase": "pipelined_machines"}, {"score": 0.004382737590042589, "phrase": "liveness_properties"}, {"score": 0.003909522412849035, "phrase": "complete_compositional_proof_rules"}, {"score": 0.0036064757492752703, "phrase": "microprocessor_verification"}, {"score": 0.003282383509542342, "phrase": "machine_models"}, {"score": 0.0029473940028924748, "phrase": "current_state-of-the-art_automated_decision_procedures"}, {"score": 0.0024576084154573396, "phrase": "drastic_improvements"}, {"score": 0.0023762535034673017, "phrase": "design_debugging"}, {"score": 0.002344468886431959, "phrase": "monolithic_approaches"}, {"score": 0.002206606452557159, "phrase": "particular_steps"}, {"score": 0.0021624739899833868, "phrase": "compositional_proof"}, {"score": 0.0021049977753042253, "phrase": "counter_examples"}], "paper_keywords": ["compositional reasoning", " pipelined machine verification", " refinement"], "paper_abstract": "We present a refinement-based compositional framework for showing that pipelined machines satisfy the same safety and liveness properties as their non-pipelined specifications. Our framework consists of a set of convenient, easily applicable, and complete compositional proof rules. We show how to apply our compositional framework in the context of microprocessor verification to verify both abstract, term-level models and executable, bit-level models. Our framework enables us to verify machine models that are significantly more complex than the kinds of models that can be verified using current state-of-the-art automated decision procedures. For example, using our framework, we can verify a 32-bit, 10-stage, executable pipelined machine model. In addition, our compositional framework offers drastic improvements in the context of design debugging over monolithic approaches, in part because bugs are isolated to particular steps in the compositional proof and because the counter examples generated are much smaller.", "paper_title": "A refinement-based compositional reasoning framework for pipelined machine verification", "paper_id": "WOS:000254782900003"}