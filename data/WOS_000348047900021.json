{"auto_keywords": [{"score": 0.034201000166874586, "phrase": "network_status"}, {"score": 0.015719716506582538, "phrase": "network_status_classification"}, {"score": 0.015095344558062988, "phrase": "network_latency"}, {"score": 0.004717325943509345, "phrase": "latency_stability"}, {"score": 0.004466519142879166, "phrase": "consistent_and_acceptable_levels"}, {"score": 0.004346139434813299, "phrase": "network-based_applications"}, {"score": 0.0040591367766929344, "phrase": "applications'_network_demands"}, {"score": 0.0037910145286595386, "phrase": "network_resources"}, {"score": 0.0033982429092938764, "phrase": "congested_states"}, {"score": 0.003066945490483524, "phrase": "network_resource_managements"}, {"score": 0.0029436264166293317, "phrase": "simple_empirical_method"}, {"score": 0.0028252518377336953, "phrase": "real_operational_network"}, {"score": 0.002748984715897838, "phrase": "oscillating_behavior"}, {"score": 0.0027116246112603875, "phrase": "end-to-end_latency"}, {"score": 0.0025848074189353397, "phrase": "run_time"}, {"score": 0.002549672862868133, "phrase": "five_typical_network_statuses"}, {"score": 0.002447101794397243, "phrase": "long-term_stability"}, {"score": 0.002397370428991875, "phrase": "short-term_burstiness"}, {"score": 0.002332626862738603, "phrase": "prediction_accuracies"}, {"score": 0.0021634370496463793, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "prediction_errors"}], "paper_keywords": ["latency stability", " network status classification", " end-to-end network latency", " network scheduling", " time series"], "paper_abstract": "Understanding network latency is important for providing consistent and acceptable levels of services in network-based applications. However, due to the difficulty of estimating applications' network demands and the difficulty of network latency modeling the management of network resources has often been ignored. We expect that, since network latency repeats cycles of congested states, a systematic classification method for network status would be helpful to simplify issues in network resource managements. This paper presents a simple empirical method to classify network status with a real operational network. By observing oscillating behavior of end-to-end latency we determine networks' status in run time. Five typical network statuses are defined based on a long-term stability and a short-term burstiness. By investigating prediction accuracies of several simple numerical models we show the effectiveness of the network status classification. Experimental results show that around 80% reduction in prediction errors depending on network status.", "paper_title": "A Case Study on Network Status Classification based on Latency Stability", "paper_id": "WOS:000348047900021"}