{"auto_keywords": [{"score": 0.04968705263604004, "phrase": "setpi"}, {"score": 0.008713768692145006, "phrase": "ontology_evolution"}, {"score": 0.004380540407926982, "phrase": "key_issue"}, {"score": 0.003920128102807887, "phrase": "prevalent_ontology_languages"}, {"score": 0.003888018838363591, "phrase": "owl"}, {"score": 0.0038245676530290406, "phrase": "rdf"}, {"score": 0.0036553070575015344, "phrase": "dynamic_semantics"}, {"score": 0.003464890914694523, "phrase": "new_calculus"}, {"score": 0.0034083145672246067, "phrase": "model_ontology_evolution"}, {"score": 0.0033388871136347704, "phrase": "classical_pi_calculus"}, {"score": 0.0031518989079229714, "phrase": "new_channels"}, {"score": 0.0030497740719977835, "phrase": "new_feature"}, {"score": 0.002843581231499026, "phrase": "formal_syntax"}, {"score": 0.002797121441432477, "phrase": "structure_congruence"}, {"score": 0.0026622351303038885, "phrase": "elementary_changes"}, {"score": 0.0025547994452342266, "phrase": "composite_changes"}, {"score": 0.0025130460190930554, "phrase": "formal_semantics"}, {"score": 0.00245168871716047, "phrase": "case_study"}, {"score": 0.0022117133940361025, "phrase": "consistency_checking"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Formalization", " Modeling", " Ontology evolution", " Pi-calculus"], "paper_abstract": "Ontology is doomed to evolve due to the changes of the domain it models. It has always been the key issue how to represent the changes during ontology evolution, because it forms the basis to detect, evaluate, implement and propagate those changes. However, prevalent ontology languages (OWL, DL, RDF, etc.) are not adept in description of dynamic semantics such as evolution. Therefore in this paper, we propose a new calculus named SetPi to model ontology evolution. It extends the classical Pi calculus with the idea of 'set' which offers the ability to create new channels in the system. SetPi has a new feature, Name Set as an extension of the semantics of names. It is proposed with formal syntax, semantics, structure congruence and reduction rules. Then, we describe how to model elementary changes via SetPi. And we provide algorithms to model composite changes and evaluate the formal semantics of the changes. A case study is employed to verify the feasibility of the method. SetPi provides not only a new way to formalize operations on changes but also offers the foundation for consistency checking and effect propagation after the changes. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Modeling ontology evolution with SetPi", "paper_id": "WOS:000327001300010"}