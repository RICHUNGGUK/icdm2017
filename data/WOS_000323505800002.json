{"auto_keywords": [{"score": 0.04954033184026155, "phrase": "abstract_test_cases"}, {"score": 0.048218728842235804, "phrase": "user_behaviour"}, {"score": 0.015371666720562234, "phrase": "web_applications"}, {"score": 0.00481495049065317, "phrase": "effective_navigation_models"}, {"score": 0.004299621153829837, "phrase": "testing_demands"}, {"score": 0.00417961150804265, "phrase": "automated_support"}, {"score": 0.004086010164600727, "phrase": "automatic_test_generation"}, {"score": 0.004039995317682942, "phrase": "statistical_model-based_testing"}, {"score": 0.0038610400240820307, "phrase": "usage-based_model"}, {"score": 0.003817548980308163, "phrase": "web_application_navigation"}, {"score": 0.003648411055689428, "phrase": "executable_test_cases"}, {"score": 0.003526476304712492, "phrase": "parameter_values"}, {"score": 0.0030433302702291116, "phrase": "different_ways"}, {"score": 0.002941558420246247, "phrase": "navigation_model"}, {"score": 0.002843180211561427, "phrase": "test_cases"}, {"score": 0.0027794243746094905, "phrase": "different_models"}, {"score": 0.002656158309155626, "phrase": "automatically_generated_abstract_test_cases"}, {"score": 0.0026113524778702624, "phrase": "underlying_usage-based_navigation_models"}, {"score": 0.0025383451160985488, "phrase": "five_publicly_deployed_web_applications"}, {"score": 0.0024534188907003726, "phrase": "web_testers"}, {"score": 0.002398382089724878, "phrase": "statistical_model-based_automatic_test_case_generators"}, {"score": 0.0022278779300543548, "phrase": "new_navigations"}, {"score": 0.002190280748985751, "phrase": "large_additional_test_resources"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["web application testing", " statistical", " usage-based navigation models"], "paper_abstract": "As web applications become more complex and are used more pervasively, testing demands are increasing without corresponding automated support. One promising approach to automatic test generation is statistical model-based testing, where logged user behaviour is used to build a usage-based model of web application navigation, from which abstract test cases are generated. Executable test cases are then created by adding parameter values to the abstract test cases. Several researchers have proposed variations of this approach; however, no one has empirically examined the tradeoffs and implications of the different ways to represent user behaviour in a navigation model and the characteristics of the test cases automatically generated from different models. This paper reports on our exploratory study of automatically generated abstract test cases and the underlying usage-based navigation models constructed from over 19,000 user sessions across five publicly deployed web applications. Our results suggest how web testers can easily configure statistical model-based automatic test case generators for web applications toward generating tests closely related to user behaviour or toward new navigations without using large additional test resources. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Configuring effective navigation models and abstract test cases for web applications by analysing user behaviour", "paper_id": "WOS:000323505800002"}