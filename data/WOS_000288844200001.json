{"auto_keywords": [{"score": 0.03753385825085361, "phrase": "ide"}, {"score": 0.00481495049065317, "phrase": "mobile_single_and_multi-robot_applications"}, {"score": 0.0047113960612140335, "phrase": "robot_software_systems"}, {"score": 0.00457013354092966, "phrase": "well-conceived_architecture"}, {"score": 0.0045108906244892165, "phrase": "programming_tools"}, {"score": 0.004375613460102574, "phrase": "robot_architectures"}, {"score": 0.004318881178805575, "phrase": "modular_decomposition"}, {"score": 0.004244375827831527, "phrase": "simpler_and_largely_independent_components"}, {"score": 0.004153041453795458, "phrase": "primitive_actions"}, {"score": 0.004010960493946656, "phrase": "robot_programming_framework"}, {"score": 0.00367658459781873, "phrase": "middleware_modules"}, {"score": 0.003644714340300824, "phrase": "project_developers"}, {"score": 0.0031023662967184216, "phrase": "building_elements"}, {"score": 0.0030092017034068666, "phrase": "signal_interpreted_petri_net"}, {"score": 0.002893505913503472, "phrase": "xml_file"}, {"score": 0.002770150086489194, "phrase": "different_petri_nets"}, {"score": 0.002516917671182532, "phrase": "whole_system"}, {"score": 0.0022768346311104735, "phrase": "watchbot"}, {"score": 0.0021607883988873492, "phrase": "mobile_robots"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Mobile robot", " Robot control architecture", " Robot programming framework", " Petri net"], "paper_abstract": "The complexity of robot software systems calls for the use of a well-conceived architecture together with programming tools to support it. One common feature of robot architectures is the modular decomposition of systems into simpler and largely independent components. These components implement primitive actions and report events about their state. The robot programming framework proposed here includes a tool (RoboGraph) to program and coordinate the activity (tasks) of these middleware modules. Project developers use the same task programming IDE (RoboGraph) on two different levels. The first is to program tasks that must be executed autonomously by one robot and the second is to program tasks that can include several robots and building elements. Tasks are described using a Signal Interpreted Petri Net (SIPN) editor and stored in an xml file. A dispatcher loads these files and executes the different Petri nets as needed. A monitor that shows the state of all the running nets is very useful for debugging and tracing purposes. The whole system has been used in several applications: A tour-guide robot (GuideBot), a multi-robot surveillance project (WatchBot) and a hospital food and laundry transportation system based on mobile robots. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A framework for building mobile single and multi-robot applications", "paper_id": "WOS:000288844200001"}