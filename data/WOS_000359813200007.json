{"auto_keywords": [{"score": 0.044688307534911945, "phrase": "spl"}, {"score": 0.006746035284821781, "phrase": "pla"}, {"score": 0.00481495049065317, "phrase": "product-line_architectures"}, {"score": 0.004720419202969916, "phrase": "smart_grids"}, {"score": 0.0046738485441681485, "phrase": "current_software_systems"}, {"score": 0.004643055780443262, "phrase": "highly_volatile_requirements"}, {"score": 0.004566954456805558, "phrase": "key_role"}, {"score": 0.004303127794432684, "phrase": "software_product_line"}, {"score": 0.00400119808662365, "phrase": "different_spl_products"}, {"score": 0.003935575440750755, "phrase": "current_spl_traceability_mechanisms"}, {"score": 0.0037824221315407355, "phrase": "product-line_architecture"}, {"score": 0.003516898780234098, "phrase": "variable_features"}, {"score": 0.002761954897932813, "phrase": "spl_products"}, {"score": 0.0023795195973873636, "phrase": "spl_configuration"}, {"score": 0.0023172863267744703, "phrase": "product_application"}, {"score": 0.002294369814584028, "phrase": "fpla_modeling_framework"}, {"score": 0.0022196020509093694, "phrase": "software_factory"}, {"score": 0.002118993962770973, "phrase": "product_line"}, {"score": 0.0021049977753042253, "phrase": "power_metering_management_applications"}], "paper_keywords": ["Traceability modeling", " Software product line engineering", " Product-line architecture", " Variability"], "paper_abstract": "In current software systems with highly volatile requirements, traceability plays a key role to maintain the consistency between requirements and code. Traceability between artifacts involved in the development of software product line (SPL) is still more critical because it is necessary to guarantee that the selection of variants that realize the different SPL products meet the requirements. Current SPL traceability mechanisms trace from variability in features to variations in the configuration of product-line architecture (PLA) in terms of adding and removing components. However, it is not always possible to materialize the variable features of a SPL through adding or removing components, since sometimes they are materialized inside components, i.e., in part of their functionality: a class, a service, and/or an interface. Additionally, variations that happen inside components may crosscut several components of architecture. These kinds of variations are still challenging and their traceability is not currently well supported. Therefore, it is not possible to guarantee that those SPL products with these kinds of variations meet the requirements. This paper presents a solution for tracing variability from features to PLA by taking these kinds of variations into account. This solution is based on models and traceability between models in order to automate SPL configuration by selecting the variants and realizing the product application. The FPLA modeling framework supports this solution which has been deployed in a software factory. Validation has consisted in putting the solution into practice to develop a product line of power metering management applications for smart grids.", "paper_title": "A model for tracing variability from features to product-line architectures: a case study in smart grids", "paper_id": "WOS:000359813200007"}