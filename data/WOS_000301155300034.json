{"auto_keywords": [{"score": 0.03748878874418394, "phrase": "fms"}, {"score": 0.015719645500980213, "phrase": "feature_models"}, {"score": 0.009307956121863265, "phrase": "primitive_operations"}, {"score": 0.0047851345246117455, "phrase": "software_product_line"}, {"score": 0.0046676969718111765, "phrase": "customized_systems"}, {"score": 0.0042921238100956174, "phrase": "common_and_variable_features"}, {"score": 0.004252296935371162, "phrase": "spl._features"}, {"score": 0.003849711329589429, "phrase": "spl_life-cycle"}, {"score": 0.0034742854447532678, "phrase": "long_time"}, {"score": 0.003452742572806342, "phrase": "large_fms"}, {"score": 0.003367894141916481, "phrase": "complementary_approach"}, {"score": 0.003305624430427938, "phrase": "fm_evolution_scenarios"}, {"score": 0.0032445022888094636, "phrase": "existing_approaches"}, {"score": 0.00316475494774005, "phrase": "smallest_part"}, {"score": 0.0030110748510795175, "phrase": "ontological_perspective"}, {"score": 0.0027512482368183596, "phrase": "fm_evolution"}, {"score": 0.002700348931172875, "phrase": "fm_consistency"}, {"score": 0.0026421521830403377, "phrase": "predefined_strategies"}, {"score": 0.0025932659540059875, "phrase": "error-prone_operations"}, {"score": 0.0022825131641434964, "phrase": "consistency_constraints"}, {"score": 0.0022056569832731208, "phrase": "significant_improvement"}, {"score": 0.00219196314559129, "phrase": "performance_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Software product lines", " Feature models", " Evolution", " Consistency maintenance", " Ontology", " Semantics"], "paper_abstract": "Software product line (SPL) techniques handle the construction of customized systems. One of the most common representations of the decisions a customer can make in SPLs is feature models (FMs). An FM represents the relationships among common and variable features in an SPL. Features are a representation of the characteristics in a system that are relevant to customers. FMs are subject to change since the set of features and their relationships can change along an SPL life-cycle. Due to this evolution, the consistency of FMs may be compromised. There exist some approaches to detect and explain inconsistencies in FMs, however this process can take a long time for large FMs. In this paper we present a complementary approach to dealing with inconsistencies in FM evolution scenarios that improves the performance for existing approaches reducing the impact of change to the smallest part of an FM that changes. To achieve our goal, we formalize FMs from an ontological perspective and define constraints that must be satisfied in FMs to be consistent. We define a set of primitive operations that modify FMs and which are responsible for the FM evolution, analyzing their impact on the FM consistency. We propose a set of predefined strategies to keep the consistency for error-prone operations. As a proof-of-concept we present the results of our experiments, where we check for the effectiveness and efficiency of our approach in FMs with thousands of features. Although our approach is limited by the kinds of consistency constraints and the primitive operations we define, the experiments present a significant improvement in performance results in those cases where they are applicable. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Consistency maintenance for evolving feature models", "paper_id": "WOS:000301155300034"}