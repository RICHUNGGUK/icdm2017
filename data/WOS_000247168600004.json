{"auto_keywords": [{"score": 0.03141343816813768, "phrase": "garbage_collection"}, {"score": 0.015146685274112332, "phrase": "vm"}, {"score": 0.011036379747117978, "phrase": "real-time_applications"}, {"score": 0.010484228217110626, "phrase": "garbage_collection_operations"}, {"score": 0.00481495049065317, "phrase": "cli_virtual_execution_system"}, {"score": 0.004769958800452922, "phrase": "virtual_software_execution_environment"}, {"score": 0.004681226806682058, "phrase": "virtual_machine"}, {"score": 0.004466519142879166, "phrase": "java_virtual_machine"}, {"score": 0.004424772392630547, "phrase": "jvm"}, {"score": 0.004362870617347183, "phrase": "common_language_infrastructure"}, {"score": 0.003953068310598579, "phrase": "real-_time"}, {"score": 0.003934540154108188, "phrase": "embedded_systems"}, {"score": 0.0036667768092524576, "phrase": "vm_operations"}, {"score": 0.0036324746826127997, "phrase": "application_tasks"}, {"score": 0.0034171734618737436, "phrase": "schedulable_garbage_collection_algorithm"}, {"score": 0.0033377940531761985, "phrase": "cli_virtual_machine_environment"}, {"score": 0.003125175084962886, "phrase": "pause_time"}, {"score": 0.0028047899594686003, "phrase": "schedulable_garbage_collection"}, {"score": 0.0027395968397212053, "phrase": "cli_execution_environment"}, {"score": 0.002626034130205569, "phrase": "concurrent_thread"}, {"score": 0.0025770807002632877, "phrase": "targeted_pause_time"}, {"score": 0.0025290375256888883, "phrase": "memory_requests"}, {"score": 0.002470237978694949, "phrase": "cost_model"}, {"score": 0.0023789838121954002, "phrase": "wcet"}, {"score": 0.0023346234464901978, "phrase": "execution_time"}, {"score": 0.0021857667493036786, "phrase": "joint_scheduling_algorithm"}, {"score": 0.0021249064184347658, "phrase": "memory_constraints"}, {"score": 0.0021049977753042253, "phrase": "real-time_systems"}], "paper_keywords": ["real-time garbage collection", " virtual machine", " garbage-collection scheduling", " garbage collection cost model"], "paper_abstract": "Virtual software execution environment, known as Virtual Machine (VM), has been gaining popularity through Java Virtual Machine (JVM) and Common Language Infrastructure (CLI). Given their advantages in portability, productivity, and safety, etc., applying VM to real- time embedded systems can leverage production cost, fast time- to- market, and software integrity. However, this approach can only become practical once the VM operations and application tasks are made schedulable jointly. In this paper, we present a schedulable garbage collection algorithm applicable on real-time applications in CLI virtual machine environment. To facilitate the scheduling of real-time applications and garbage collection operations, we make the pause time due to garbage collection controllable, and the invocation of garbage collection predictable. To demonstrate the approach, a prototype for a schedulable garbage collection has been implemented in CLI execution environment. The garbage collection is carried out by a concurrent thread while meeting a targeted pause time and satisfying the memory requests of applications. A cost model of garbage collection is established based on measured WCET such that the execution time and overhead of garbage collection operations can be predicted. Finally, we illustrate a joint scheduling algorithm to meet the time and memory constraints of real-time systems.", "paper_title": "Schedulable garbage collection in CLI virtual execution system", "paper_id": "WOS:000247168600004"}