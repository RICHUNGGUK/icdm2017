{"auto_keywords": [{"score": 0.04660802533264657, "phrase": "schema_definitions"}, {"score": 0.034887398305923065, "phrase": "ptdom"}, {"score": 0.014002924788942323, "phrase": "document_validation"}, {"score": 0.013215213310999133, "phrase": "attribute_values"}, {"score": 0.008912232544523902, "phrase": "xml_documents"}, {"score": 0.004815022356293929, "phrase": "xml"}, {"score": 0.004695900553353526, "phrase": "current_xml_database_systems"}, {"score": 0.004598933498016774, "phrase": "limited_use"}, {"score": 0.0045607070754363245, "phrase": "available_schema_definitions"}, {"score": 0.004319830179921363, "phrase": "database_consistency"}, {"score": 0.003990385737207714, "phrase": "appropriately_typed_manner"}, {"score": 0.0036097844103129043, "phrase": "schema-aware_xml_database_system"}, {"score": 0.0032246835734680377, "phrase": "schema_catalog"}, {"score": 0.003066945490483524, "phrase": "xml_schema"}, {"score": 0.00300351371036355, "phrase": "schema_information"}, {"score": 0.0028209599545587745, "phrase": "typed_storage"}, {"score": 0.0027395968397212053, "phrase": "structural_indexing"}, {"score": 0.0026941587813581252, "phrase": "additional_efficient_access_paths"}, {"score": 0.0026164433143193015, "phrase": "optimized_construction"}, {"score": 0.002594652434287807, "phrase": "query_execution_plans"}, {"score": 0.0025730425700096365, "phrase": "xpath_expressions"}, {"score": 0.002498812056838983, "phrase": "new_datatypes"}, {"score": 0.002477998427152547, "phrase": "user-defined_functions"}, {"score": 0.002447101794397243, "phrase": "value_index_structures"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["XML", " XML databases", " XML schema", " MPEG-7", " MPEG-7 DDL", " DOM", " Typed DOM"], "paper_abstract": "Current XML database systems largely neglect or make limited use of available schema definitions. But only with schema definitions at hand is it possible to ensure database consistency by document validation, to store, index, and access the content of elements and attribute values in an appropriately typed manner and not just as text, and to perform more sophisticated query optimizations. In this paper, we give an overview of our implementation of a schema-aware XML database system: the Persistent Typed Document Object Model (PTDOM). Originally developed for the management of MPEG-7 media descriptions in a database, the core of PTDOM is made up of a schema catalog capable of managing schema definitions written in MPEG-7 DDL, a superset of XML schema. PTDOM exploits the schema information maintained by this catalog in a variety of contexts: for document validation, for typed storage of elements and attribute values, for structural indexing of XML documents providing additional efficient access paths to document contents, and for optimized construction of query execution plans for XPath expressions. This along with its profound extensibility with new datatypes, user-defined functions, and value index structures makes PTDOM a flexible and effective database solution not only for the management of MPEG-7 media descriptions but also for the management of any kind of XML documents for which schema definitions exist. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "PTDOM: a schema-aware XML database system for MPEG-7 media descriptions", "paper_id": "WOS:000238547800001"}