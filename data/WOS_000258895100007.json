{"auto_keywords": [{"score": 0.04601284855430019, "phrase": "deepest_point"}, {"score": 0.04226255901245674, "phrase": "fast_algorithm"}, {"score": 0.00481495049065317, "phrase": "related_problems"}, {"score": 0.0038397509389856625, "phrase": "random_sampling"}, {"score": 0.0029722900280316216, "phrase": "linear_programming_problems"}, {"score": 0.0025638362414466278, "phrase": "largest_number"}, {"score": 0.0025137856138000014, "phrase": "red_points"}, {"score": 0.0022113879114507577, "phrase": "similar_techniques"}, {"score": 0.002146926767291475, "phrase": "approximate_range_counting_queries"}, {"score": 0.0021049977753042253, "phrase": "roughly_the_same_time_and_space_complexity"}], "paper_keywords": ["approximation", " randomized algorithms", " computational geometry"], "paper_abstract": "We study the question of finding a deepest point in an arrangement of regions and provide a fast algorithm for this problem using random sampling, showing it sufficient to solve this problem when the deepest point is shallow. This implies, among other results, a fast algorithm for approximately solving linear programming problems with violations. We also use this technique to approximate the disk covering the largest number of red points, while avoiding all the blue points, given two such sets in the plane. Using similar techniques implies that approximate range counting queries have roughly the same time and space complexity as emptiness range queries.", "paper_title": "On approximating the depth and related problems", "paper_id": "WOS:000258895100007"}