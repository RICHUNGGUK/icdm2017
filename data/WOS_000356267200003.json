{"auto_keywords": [{"score": 0.040454428776653985, "phrase": "service_ecosystem"}, {"score": 0.026749641495468896, "phrase": "temporal_information"}, {"score": 0.00481495049065317, "phrase": "time-aware_service_recommendation"}, {"score": 0.004634799977448855, "phrase": "web_service_recommendation"}, {"score": 0.004518442937844318, "phrase": "critical_problem"}, {"score": 0.004213240903095234, "phrase": "existing_methods"}, {"score": 0.004133627071344356, "phrase": "content_matching_techniques"}, {"score": 0.003953639783762917, "phrase": "qos_measurement"}, {"score": 0.0033508547759861186, "phrase": "service_recommendation"}, {"score": 0.0032253056091816465, "phrase": "probabilistic_approach"}, {"score": 0.003026391655379905, "phrase": "recommendation_performance"}, {"score": 0.0028761045789798103, "phrase": "service_evolution_patterns"}, {"score": 0.002821685815956478, "phrase": "latent_dirichlet_allocation"}, {"score": 0.0027862663762843764, "phrase": "lda"}, {"score": 0.002733260122876447, "phrase": "time_series_prediction"}, {"score": 0.0026815368507715, "phrase": "time-aware_service_recommendation_framework"}, {"score": 0.002548331088496964, "phrase": "joint_analysis"}, {"score": 0.0024842242921857705, "phrase": "content_description"}, {"score": 0.0024527767211457046, "phrase": "historical_mashup-service_usage"}, {"score": 0.0024063484128685367, "phrase": "evolving_service_ecosystem"}, {"score": 0.0023309080951251335, "phrase": "real-world_service_repository"}, {"score": 0.0023013968622710847, "phrase": "programmableweb.com"}, {"score": 0.0022292394795878643, "phrase": "proposed_approach"}, {"score": 0.0021731423856364003, "phrase": "higher_precision"}, {"score": 0.0021456243019466843, "phrase": "traditional_collaborative_filtering"}, {"score": 0.0021049977753042253, "phrase": "matching_methods"}], "paper_keywords": ["Service recommendation", " service ecosystem", " time-aware", " mashup creation", " latent dirichlet allocation"], "paper_abstract": "Web service recommendation has become a critical problem as services become increasingly prevalent on the Internet. Some existing methods focus on content matching techniques, while others are based on QoS measurement. However, service ecosystem is evolving over time with services publishing, prospering and perishing. Few existing methods consider or exploit the evolution of service ecosystem on service recommendation. This paper employs a probabilistic approach to predict the popularity of services to enhance the recommendation performance. A method is presented that extracts service evolution patterns by exploiting latent dirichlet allocation (LDA) and time series prediction. A time-aware service recommendation framework is established for mashup creation that conducts joint analysis of temporal information, content description and historical mashup-service usage in an evolving service ecosystem. Experiments on a real-world service repository, ProgrammableWeb.com, show that the proposed approach leads to a higher precision than traditional collaborative filtering and content matching methods, by taking into account temporal information.", "paper_title": "Time-Aware Service Recommendation for Mash up Creation", "paper_id": "WOS:000356267200003"}