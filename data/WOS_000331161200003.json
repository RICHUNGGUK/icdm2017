{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large_attributed_graphs"}, {"score": 0.029139449391002575, "phrase": "relational_database"}, {"score": 0.02796485150882065, "phrase": "query_plan"}, {"score": 0.004655285779819366, "phrase": "complicated_data"}, {"score": 0.004596779715291598, "phrase": "social_networks"}, {"score": 0.0045581828632009795, "phrase": "bibliographical_networks"}, {"score": 0.004519908617935935, "phrase": "knowledge_bases"}, {"score": 0.004463096299091981, "phrase": "growing_sizes"}, {"score": 0.004425616928975799, "phrase": "graph_databases"}, {"score": 0.0043699845927285905, "phrase": "crucial_need"}, {"score": 0.0043150485532080065, "phrase": "powerful_and_scalable_graph-based_query_engines"}, {"score": 0.0042250123967577284, "phrase": "sparql-like_language"}, {"score": 0.004189523950071494, "phrase": "g-sparql"}, {"score": 0.0041194351307673556, "phrase": "attributed_graphs"}, {"score": 0.003982741546775355, "phrase": "different_types"}, {"score": 0.003949280009382125, "phrase": "graph_queries"}, {"score": 0.003883194688426525, "phrase": "large_interest"}, {"score": 0.0037543106253910313, "phrase": "large_graph"}, {"score": 0.0037070855410818986, "phrase": "pattern_matching"}, {"score": 0.0036450381529042103, "phrase": "shortest_path_queries"}, {"score": 0.0035389348527719404, "phrase": "structural_predicates"}, {"score": 0.0035091888798162176, "phrase": "value-based_predicates"}, {"score": 0.0033218213825698417, "phrase": "algebraic_compilation_mechanism"}, {"score": 0.0032115093493071366, "phrase": "relational_algebra"}, {"score": 0.003144426503333397, "phrase": "basic_construct"}, {"score": 0.003104849179057156, "phrase": "sparql_queries"}, {"score": 0.0027123819773059127, "phrase": "execution_engine"}, {"score": 0.002535171272738143, "phrase": "sql"}, {"score": 0.0023996317685956213, "phrase": "memory-based_algorithms"}, {"score": 0.002349467661235186, "phrase": "experimental_results"}, {"score": 0.0023296961971785357, "phrase": "real_and_synthetic_datasets"}, {"score": 0.002195866991284673, "phrase": "native_graph_databases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data models", " Query", " Access methods", " Graphs", " Graph queries", " SPARQL"], "paper_abstract": "Graphs are widely used for modeling complicated data such as social networks, bibliographical networks and knowledge bases. The growing sizes of graph databases motivate the crucial need for developing powerful and scalable graph-based query engines. We propose a SPARQL-like language, G-SPARQL, for querying attributed graphs. The language enables the expression of different types of graph queries that are of large interest in the databases that are modeled as large graph such as pattern matching, reachability and shortest path queries. Each query can combine both structural predicates and value-based predicates (on the attributes of the graph nodes/edges). We describe an algebraic compilation mechanism for our proposed query language which is extended from the relational algebra and based on the basic construct of building SPARQL queries, the Triple Pattern. We describe an efficient hybrid Memory/ Disk representation of large attributed graphs where only the topology of the graph is maintained in memory while the data of the graph are stored in a relational database. The execution engine of our proposed query language splits parts of the query plan to be pushed inside the relational database (using SQL) while the execution of other parts of the query plan is processed using memory-based algorithms, as necessary. Experimental results on real and synthetic datasets demonstrate the efficiency and the scalability of our approach and show that our approach outperforms native graph databases by several factors. (C) 2013 Published by Elsevier Ltd.", "paper_title": "Hybrid query execution engine for large attributed graphs", "paper_id": "WOS:000331161200003"}