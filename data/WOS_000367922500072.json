{"auto_keywords": [{"score": 0.034887398305923065, "phrase": "hidden_criminal_behavior"}, {"score": 0.02734026317158217, "phrase": "correlation_graphs"}, {"score": 0.00481495049065317, "phrase": "automatic_memory_forensic"}, {"score": 0.004774937143916685, "phrase": "memory_forensics"}, {"score": 0.0047155367844327, "phrase": "important_technique"}, {"score": 0.004656871909510407, "phrase": "network_security"}, {"score": 0.004579780586951551, "phrase": "computer_crimes"}, {"score": 0.004108742905942481, "phrase": "network_criminal_cases"}, {"score": 0.0040239499107920535, "phrase": "gb"}, {"score": 0.0038271712887391015, "phrase": "memory_analysis"}, {"score": 0.0036400696415545813, "phrase": "complex_operating_system"}, {"score": 0.003579750245670577, "phrase": "data_structures"}, {"score": 0.003404703106153948, "phrase": "memory_evidence"}, {"score": 0.0032112354575523317, "phrase": "understandable_way"}, {"score": 0.0031579997262619758, "phrase": "important_problem"}, {"score": 0.0030797912111959137, "phrase": "automatic_memory_analysis_methodology"}, {"score": 0.0030414140732789186, "phrase": "data_correlation"}, {"score": 0.0029909851863915283, "phrase": "key_os_data_structures"}, {"score": 0.002941389980674657, "phrase": "clustering_algorithm"}, {"score": 0.002509284173541882, "phrase": "independent_memory_evidences"}, {"score": 0.002447101794397243, "phrase": "high_semantic_level"}, {"score": 0.0022886952510350416, "phrase": "criminal_scenarios"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["process correlation", " memory forensics", " event reconstruction", " memory evidences analysis", " clustering"], "paper_abstract": "Memory forensics is an important technique for protecting network security and fighting against computer crimes. It has developed greatly in the past decade, because memory can provide more reliable information that other evidence sources do not contain. However, nowadays, when investigating network criminal cases, the Gigabyte (GB) and even Terabyte (TB) level memory and many such dumps have made memory analysis a difficult task. And investigators usually have to deal with complex operating system (OS) data structures, which they have little knowledge of. So how to analyze memory evidence automatically so as to find the hidden criminal behavior and reconstruct the scenario in an understandable way has become an important problem. This paper presents an automatic memory analysis methodology based on data correlation. Through analyzing key OS data structures and utilizing a clustering algorithm, this methodology can discover the relationships among processes, files, users, Dynamic-link library (DLLs), and network connections. By describing these relationships as correlation graphs, our methods can reorganize these independent memory evidences and disclose their meanings in a high semantic level. Experiments have proved that these correlation graphs can help investigators find hidden criminal behavior and reconstruct the criminal scenarios. And as we know, now, little work is in this field. Copyright (C) 2015 John Wiley & Sons, Ltd.", "paper_title": "Data correlation-based analysis methods for automatic memory forensic", "paper_id": "WOS:000367922500072"}