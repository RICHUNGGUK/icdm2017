{"auto_keywords": [{"score": 0.039027278312474004, "phrase": "server_queue"}, {"score": 0.034182875683624124, "phrase": "theoretical_modelling"}, {"score": 0.00481495049065317, "phrase": "queue_management"}, {"score": 0.00478097497828731, "phrase": "dos_counter-measure"}, {"score": 0.004647442352794694, "phrase": "legitimate_users"}, {"score": 0.004571269461883144, "phrase": "dos_attacks"}, {"score": 0.004549734943142138, "phrase": "connection-oriented_protocols"}, {"score": 0.004464602028530629, "phrase": "server_connection"}, {"score": 0.004258644418211771, "phrase": "syn-flood_attack"}, {"score": 0.004178935413340453, "phrase": "stateful_communication_protocols"}, {"score": 0.004023947242621452, "phrase": "mathematical_model"}, {"score": 0.0039114753002009485, "phrase": "defender_resources"}, {"score": 0.0038564191670589884, "phrase": "prevention_mechanisms"}, {"score": 0.003678414118674967, "phrase": "markov_chains"}, {"score": 0.0036180661410484777, "phrase": "server_capacity"}, {"score": 0.0035925056609681194, "phrase": "attack_rate"}, {"score": 0.003541923233726252, "phrase": "service_level"}, {"score": 0.0033150974333333244, "phrase": "deterministic_policy"}, {"score": 0.0032916702592724217, "phrase": "deferred_policy"}, {"score": 0.00326840809777013, "phrase": "utopian_poisson_policy"}, {"score": 0.0031619994642255846, "phrase": "linear_trade-off"}, {"score": 0.0031248392333206297, "phrase": "targeted_server"}, {"score": 0.0031174595932694036, "phrase": "queue_size"}, {"score": 0.002987557906013826, "phrase": "similar_level"}, {"score": 0.0028093921138602606, "phrase": "linear_deferred_timeout_strategy"}, {"score": 0.0027567336518542858, "phrase": "linear_poisson_timeout_strategy"}, {"score": 0.002660637739223823, "phrase": "classical_fixed_timeout_method"}, {"score": 0.0025436978068459565, "phrase": "connection_depletion_attacks"}, {"score": 0.0025137856138000014, "phrase": "tcp_protocol_stack"}, {"score": 0.0024842242921857705, "phrase": "theoretical_findings"}, {"score": 0.00247249708860822, "phrase": "stochastic_simulations"}, {"score": 0.002460825108719896, "phrase": "network_experiments"}, {"score": 0.002449208093757498, "phrase": "syn-flood_attacks"}, {"score": 0.0023694065215394593, "phrase": "tcp_connection_establishment_flood"}, {"score": 0.0023526465933461963, "phrase": "ticket_reservation_flood"}, {"score": 0.002336004938424957, "phrase": "protection_strategies"}, {"score": 0.002286781334850213, "phrase": "attack_model"}, {"score": 0.0021401625519713577, "phrase": "existing_operating_systems"}, {"score": 0.0021049977753042253, "phrase": "separate_network_devices"}], "paper_keywords": ["Network security", " Denial of service", " DDoS", " Dynamic timeout adjustment", " Queue management", " SYN-flood"], "paper_abstract": "The purpose of a denial of service (DoS) attack is to render a network service unavailable for legitimate users. We address the problem of DoS attacks on connection-oriented protocols where the attacker tries to deplete the server connection by initiating communication with the server and then abandoning the communication. The most exploited attack in this category is the SYN-flood attack but other attacks using the same approach in stateful communication protocols also fall into this category. Our goals are twofold: first, to develop a mathematical model allowing us to analyse the trade-off between the attacker and the defender resources and second, to offer prevention mechanisms that can be used to defend against this category of attacks. We model the server queue of connections using Markov chains to establish a relationship between the server capacity, the attack rate and the impact on the service level. We analyse two methods of adjusting the timeout, threshold and linear, and we couple them with three policies of assigning the timeout to connections: the deterministic policy, the deferred policy and the utopian Poisson policy. First, theoretical modelling confirms that for any given strategy, there exists a linear trade-off between attack rate and targeted server queue size. However, the ratio that needs to be kept between them in order to maintain a similar level of quality of service differs between strategies; in that sense some are better than others. In particular, theoretical modelling also indicates that the linear deferred timeout strategy is very similar in performance to the linear Poisson timeout strategy, which in turn outperforms all the other dynamic timeout strategies. The dynamic timeout strategies always outperform the classical fixed timeout method. Our model is very general and can be used to capture the behaviour of the server queue during connection depletion attacks at various levels in the TCP protocol stack. We confirm the theoretical findings using stochastic simulations and network experiments of SYN-flood attacks. We also show how the model can be used when analysing a TCP connection establishment flood or a ticket reservation flood. The protection strategies we suggest are robust to changes in the attack model and our implementation is very efficient and transparent with respect to the server and applications it tries to protect. The strategies could therefore be easily integrated into existing operating systems and applications, or implemented in separate network devices.", "paper_title": "A comprehensive study of queue management as a DoS counter-measure", "paper_id": "WOS:000324616000001"}