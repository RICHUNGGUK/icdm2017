{"auto_keywords": [{"score": 0.04902896582647278, "phrase": "tls"}, {"score": 0.00481495049065317, "phrase": "large_and_dependent_speculative_threads"}, {"score": 0.004761850836420121, "phrase": "thread-level_speculation"}, {"score": 0.004530023871441992, "phrase": "promising_method"}, {"score": 0.004333406378146173, "phrase": "scientific_workloads"}, {"score": 0.004261885692956071, "phrase": "speculative_threads"}, {"score": 0.003987367359722647, "phrase": "minimal_dependences"}, {"score": 0.003856786086036278, "phrase": "recent_work"}, {"score": 0.00370981613076245, "phrase": "compelling_performance_improvements"}, {"score": 0.0032290277960438855, "phrase": "additional_speculative_state"}, {"score": 0.0030545815929619306, "phrase": "resulting_cross-thread_data_dependences"}, {"score": 0.0027486060614330043, "phrase": "tls_hardware"}, {"score": 0.002542890176213921, "phrase": "cross-thread_data_dependences"}, {"score": 0.0023788319661581696, "phrase": "proposed_hardware_support"}, {"score": 0.0023394947463129642, "phrase": "database_domain"}, {"score": 0.0021763973978248005, "phrase": "five_transactions"}, {"score": 0.0021523336245344474, "phrase": "tpc-c"}, {"score": 0.0021049977753042253, "phrase": "simulated_four-processor_chip-multiprocessor"}], "paper_keywords": ["multiprocessor systems", " thread-level speculation", " databases", " cache coherence"], "paper_abstract": "Thread-level speculation (TLS) has proven to be a promising method of extracting parallelism from both integer and scientific workloads, targeting speculative threads that range in size from hundreds to several thousand dynamic instructions and which have minimal dependences between them. However, recent work has shown that TLS can offer compelling performance improvements when targeting much larger speculative threads of more than 50,000 dynamic instructions per thread with many frequent data dependences between them. To support such large and dependent speculative threads, the hardware must be able to buffer the additional speculative state and must also address the more challenging problem of tolerating the resulting cross-thread data dependences. In this paper, we present a chip-multiprocessor (CMP) support for large speculative threads that integrates several previous proposals for the TLS hardware. We also present a support for subthreads: a mechanism for tolerating cross-thread data dependences by checkpointing speculative execution. Through an evaluation that exploits the proposed hardware support in the database domain, we find that the transaction response time for three of the five transactions from TPC-C (on a simulated four-processor chip-multiprocessor) speed up by a factor of 1.9 to 2.9.", "paper_title": "CMP support for large and dependent speculative threads", "paper_id": "WOS:000247541500003"}