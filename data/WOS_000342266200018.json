{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fragmented_structures"}, {"score": 0.004725720368497539, "phrase": "modern_computers"}, {"score": 0.004696344245532423, "phrase": "hard-disk_storage"}, {"score": 0.004638136142210615, "phrase": "dynamic_spectrum_access"}, {"score": 0.004523865550323285, "phrase": "fragmented_allocations"}, {"score": 0.004250302819248558, "phrase": "fifo_queue"}, {"score": 0.004158500036893521, "phrase": "desired_amount"}, {"score": 0.004094138129176259, "phrase": "item_size"}, {"score": 0.004043363653396813, "phrase": "residence_time"}, {"score": 0.003546664687195951, "phrase": "key_assumption"}, {"score": 0.0033424156234057494, "phrase": "alternating_gaps"}, {"score": 0.0033216097307700175, "phrase": "allocated_resource"}, {"score": 0.0031894825360137694, "phrase": "resource_utilization"}, {"score": 0.0031107911390188055, "phrase": "processing_cost"}, {"score": 0.0030340353187232947, "phrase": "important_performance_issue"}, {"score": 0.0029870247665469358, "phrase": "probability_model"}, {"score": 0.00294993976383467, "phrase": "item_sizes"}, {"score": 0.002931569771634119, "phrase": "residence_times"}, {"score": 0.0027712889576554556, "phrase": "maximum_item_size"}, {"score": 0.0027283383611597495, "phrase": "fragmentation_process"}, {"score": 0.0026609940110902666, "phrase": "allocated_items"}, {"score": 0.002595307614796063, "phrase": "occupied_units"}, {"score": 0.0024380811094377006, "phrase": "item-size_distributions"}, {"score": 0.0023704645774716743, "phrase": "rather_intimidating_results"}, {"score": 0.0023191700719613685, "phrase": "extensive_experiments"}, {"score": 0.00225484390547463, "phrase": "inefficient_states"}, {"score": 0.0022407927161620855, "phrase": "nearly_complete_fragmentation"}, {"score": 0.002178635733085195, "phrase": "even_moderately_fragmented_states"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Resource fragmentation", " Dynamic storage allocation", " Dynamic spectrum access", " Analysis of combinatorial structures", " Stochastic fragmentation"], "paper_abstract": "Modern computers with hard-disk storage and networks with dynamic spectrum access illustrate systems having a resource that allows fragmented allocations. We model R as a sequence of M > 1 units for which requests are made by items in a FIFO queue; each request is for a desired amount of R, the item size, and the residence time during which it is needed. So long as there are enough currently available units of R, an item at the head of the queue can be divided into fragments accommodated by the gaps in R formed by these units. Under the key assumption that allocations given to items cannot be changed prior to their departures, fragmentation in the form of alternating gaps and allocated resource builds up randomly as items come and go. The improvements in resource utilization created by fragmentation are acquired at a processing cost, so how fragmentation evolves is an important performance issue. We define a probability model specifying distributions for item sizes and residence times, and then analyze the system operating at capacity. If M is much larger than the maximum item size, then as the fragmentation process approaches equilibrium, nearly all of the allocated items are completely fragmented, i.e., the occupied units are mutually disjoint. In a suite of four theorems, we show how this result specializes for certain classes of item-size distributions. However, as a counterpoint to these rather intimidating results, we present the findings of extensive experiments which show that the delays in reaching the inefficient states of nearly complete fragmentation can be surprisingly long, and hence that even moderately fragmented states are usually of no concern. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Performance evaluation of fragmented structures: A theoretical study", "paper_id": "WOS:000342266200018"}