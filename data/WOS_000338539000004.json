{"auto_keywords": [{"score": 0.03859622119770311, "phrase": "movement_scheme"}, {"score": 0.00481495049065317, "phrase": "weighted_occupancy"}, {"score": 0.004694092086199672, "phrase": "mobile_facility_location_problem"}, {"score": 0.004615202066192795, "phrase": "complete_directed_graph"}, {"score": 0.0044237033788643715, "phrase": "numerical_attribute"}, {"score": 0.004186534737631288, "phrase": "additional_ingredient"}, {"score": 0.003813669883040509, "phrase": "underlying_graph"}, {"score": 0.0035183910023550246, "phrase": "new_position"}, {"score": 0.003400984514637656, "phrase": "relocation_cost"}, {"score": 0.0032184697893776052, "phrase": "nearest_final_server_location"}, {"score": 0.0031643005824589917, "phrase": "service_cost"}, {"score": 0.002944039482467119, "phrase": "service_costs"}, {"score": 0.002833689453299307, "phrase": "open_question"}, {"score": 0.0027978304423349246, "phrase": "demaine_et_al"}, {"score": 0.002658863179011018, "phrase": "mobile_facility_location"}, {"score": 0.0026363807171515255, "phrase": "lp-based_methods"}, {"score": 0.0024947959375982614, "phrase": "combinatorial_filtering_approach"}, {"score": 0.0024632148715152393, "phrase": "latter_technique"}, {"score": 0.0024320326084093465, "phrase": "independent_interest"}, {"score": 0.0022434880661725493, "phrase": "weighted_version"}, {"score": 0.002215081186105616, "phrase": "occupancy_problem"}, {"score": 0.0021593396036472777, "phrase": "interesting_tail_bounds"}, {"score": 0.0021049977753042253, "phrase": "existing_bounds"}], "paper_keywords": ["Approximation algorithms", " Movement problems", " Non-metric facility location", " Filtering", " Occupancy problem"], "paper_abstract": "An instance of the mobile facility location problem consists of a complete directed graph , in which each arc is associated with a numerical attribute , representing the cost of moving any object from to . An additional ingredient of the input is a collection of servers and a set of clients , which are located at nodes of the underlying graph. With this setting in mind, a movement scheme is a function that relocates each server to a new position, . We refer to as the relocation cost of , and to , the cost of assigning client to the nearest final server location, as the service cost of . The objective is to compute a movement scheme that minimizes the sum of relocation and service costs. In this paper, we resolve an open question posed by Demaine et al. (SODA '07) by characterizing the approximability of mobile facility location through LP-based methods. We also develop a more efficient algorithm, which is based on a combinatorial filtering approach. The latter technique is of independent interest, as it may be applicable in other settings as well. In this context, we introduce a weighted version of the occupancy problem, for which we establish interesting tail bounds, not before demonstrating that existing bounds cannot be extended.", "paper_title": "Mobile facility location: combinatorial filtering via weighted occupancy", "paper_id": "WOS:000338539000004"}