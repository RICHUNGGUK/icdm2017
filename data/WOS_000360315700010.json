{"auto_keywords": [{"score": 0.050035440944570714, "phrase": "network_programmability"}, {"score": 0.038612363994981205, "phrase": "forces_model"}, {"score": 0.03843463264773391, "phrase": "network_element"}, {"score": 0.033174143168347714, "phrase": "forces"}, {"score": 0.0047920120174595555, "phrase": "forces._network_programmability"}, {"score": 0.004712580464900024, "phrase": "top_item"}, {"score": 0.004678940805063634, "phrase": "networking_research_agenda"}, {"score": 0.004656647251517823, "phrase": "software_defined_networking"}, {"score": 0.004601374835486024, "phrase": "wide_acceptance"}, {"score": 0.004568525347438891, "phrase": "vendor_product_line_plans"}, {"score": 0.00451429415690544, "phrase": "future_deployments"}, {"score": 0.004492781547269096, "phrase": "key_ingredients"}, {"score": 0.004460703838987562, "phrase": "successful_deployment"}, {"score": 0.004439445472040688, "phrase": "sdn_technologies"}, {"score": 0.004418287966422041, "phrase": "standardized_models"}, {"score": 0.0042831901278771595, "phrase": "forwarding_planes"}, {"score": 0.004242514871864288, "phrase": "forwarding"}, {"score": 0.004222232331707683, "phrase": "control_element_separation"}, {"score": 0.004122549817562189, "phrase": "track_documents"}, {"score": 0.00406386890224122, "phrase": "comprehensive_architectural_framework"}, {"score": 0.004034841146538891, "phrase": "respective_standard_protocols"}, {"score": 0.0038373481775725387, "phrase": "ietf_standards"}, {"score": 0.0037377733149169573, "phrase": "complete_and_modular_system_model"}, {"score": 0.0037110661437700317, "phrase": "forwarding_plane_elements"}, {"score": 0.003623407818632102, "phrase": "numerous_logically_separate_and_well-defined_functional_entities"}, {"score": 0.00349577373145384, "phrase": "ip_switching"}, {"score": 0.0033887875647355915, "phrase": "forces-based_implementation"}, {"score": 0.0031693109468450644, "phrase": "new_architecture"}, {"score": 0.00311669276800628, "phrase": "rapid_prototyping"}, {"score": 0.0031018195951638882, "phrase": "agile_deployment"}, {"score": 0.003087017178815267, "phrase": "new_architectures"}, {"score": 0.003043031131345537, "phrase": "software-defined_functionality"}, {"score": 0.002928765962664163, "phrase": "logically_centralized_controllers"}, {"score": 0.002873247913129334, "phrase": "\"dumb\"_switches"}, {"score": 0.0028527002687205347, "phrase": "forces_standards"}, {"score": 0.00283229915062791, "phrase": "complete_toolbox"}, {"score": 0.002778604641920052, "phrase": "forces-based_network_elements"}, {"score": 0.002758731953514443, "phrase": "previously_deployed_infrastructures"}, {"score": 0.0027259252868643926, "phrase": "experimental_or_early-deployment_phase_endeavors"}, {"score": 0.0026298214688533386, "phrase": "packet_gateway"}, {"score": 0.002537097217899195, "phrase": "network_function_virtualization"}, {"score": 0.0024534993283766332, "phrase": "programmable_networks"}, {"score": 0.0024417832296664698, "phrase": "sdn_area"}, {"score": 0.0024185182010749273, "phrase": "comprehensive_tutorial"}, {"score": 0.002389747639754026, "phrase": "numerous_standards_documents"}, {"score": 0.002333226812828489, "phrase": "wider_research_community"}, {"score": 0.002305468528385778, "phrase": "design_goals"}, {"score": 0.0022617389804167943, "phrase": "standardized_approach"}, {"score": 0.0022294857939412073, "phrase": "thorough_primer"}, {"score": 0.002171542198410875, "phrase": "recent_independent_interoperable_implementations"}, {"score": 0.0021508464435431385, "phrase": "full_spectrum"}, {"score": 0.002140572489970108, "phrase": "forces_applications"}, {"score": 0.0021151089023548806, "phrase": "nfv"}, {"score": 0.0021050012224293085, "phrase": "sdn."}], "paper_keywords": ["ForCES model", " ForCES protocol", " logical functional block", " OpenFlow", " software defined networking", " network programmability", " IETF", " control plane", " network function", " virtualization"], "paper_abstract": "Network programmability has re-emerged as a top item of the networking research agenda since Software Defined Networking (SDN) gained wide acceptance simultaneously in vendor product line plans and operator expectations for future deployments. Key ingredients for the successful deployment of SDN technologies are standardized models, mechanisms, and protocols for the separation of the control and forwarding planes. The Internet Engineering Task Force (IETF) standardization effort on Forwarding and Control Element Separation (ForCES) has published a set of standards track documents which specify in detail a comprehensive architectural framework and the respective standard protocols which can be employed to implement the separation of these two planes in a flexible, scalable, and vendor-agnostic yet fully interoperable manner. The IETF standards on ForCES define how to achieve said separation through a complete and modular system model of the forwarding plane elements. In the ForCES model every network element is composed of numerous logically separate and well-defined functional entities that cooperate to provide the desired overall functionality, such as a routing or IP switching. The elegance of the model lies in the fact that a ForCES-based implementation of a network element is indistinguishable from a traditional (\"closed-box\") network element and therefore can be deployed in the field without any need for migration to a new architecture. Conversely, ForCES allows for rapid prototyping and agile deployment of new architectures as emphasis is placed on software-defined functionality and full programmability. The difference of ForCES from other SDN approaches that depend on logically centralized controllers and the deployment of solely simple or \"dumb\" switches is that ForCES standards provide a complete toolbox to design, implement, and interoperate ForCES-based network elements with both previously deployed infrastructures as well as in experimental or early-deployment phase endeavors. An example of the former is the implementation of 3GPP-standardized network elements such as a packet gateway (PGW). Examples of the latter include the use of ForCES for network function virtualization (NFV) proofs-of-concepts. This paper surveys the programmable networks and SDN area and provides a comprehensive tutorial on ForCES by summarizing numerous standards documents and thus making the technology easily understood by the wider research community. We present the design goals, choices, and tradeoffs for this standardized approach for network programmability and provide a thorough primer on the ForCES model and protocol. This paper also surveys recent independent interoperable implementations that showcase the full spectrum of ForCES applications in the era of NFV and SDN.", "paper_title": "Network Programmability With ForCES", "paper_id": "WOS:000360315700010"}