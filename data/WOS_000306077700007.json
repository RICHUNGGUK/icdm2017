{"auto_keywords": [{"score": 0.04916621303616991, "phrase": "babel"}, {"score": 0.031806280910128736, "phrase": "fortran"}, {"score": 0.00481495049065317, "phrase": "scientific_computing"}, {"score": 0.004633429997452688, "phrase": "high-performance_scientific_applications"}, {"score": 0.004416079619543104, "phrase": "software_modules"}, {"score": 0.00429057323623293, "phrase": "multiple_programming_languages"}, {"score": 0.004011366422179016, "phrase": "language_interoperability"}, {"score": 0.0036788184374592706, "phrase": "basic_types"}, {"score": 0.0035399770257915466, "phrase": "disparate_programming_models"}, {"score": 0.0027565034058049088, "phrase": "python"}, {"score": 0.0026780388217087247, "phrase": "java"}, {"score": 0.0025767987652419054, "phrase": "object-oriented_programming_features"}, {"score": 0.0024556852466581527, "phrase": "runtime_enforcement"}, {"score": 0.002166711569953301, "phrase": "remote_method_invocation"}, {"score": 0.0021049977753042253, "phrase": "hybrid_parallel"}], "paper_keywords": ["Babel", " distributed computing", " high-performance computing", " language interoperability", " object-oriented", " remote method invocation", " scientific computing"], "paper_abstract": "High-performance scientific applications are usually built from software modules written in multiple programming languages. This raises the issue of language interoperability which involves making calls between languages, converting basic types, and bridging disparate programming models. Babel provides a feature-rich, extensible, high-performance solution to the language interoperability problem currently supporting C, C++, FORTRAN 77, Fortran 90/95, Fortran 2003/2008, Python, and Java. Babel supports object-oriented programming features and interface semantics with runtime enforcement. In addition to in-process language interoperability, Babel includes remote method invocation to support hybrid parallel and distributed computing paradigms.", "paper_title": "High-performance language interoperability for scientific computing through Babel", "paper_id": "WOS:000306077700007"}