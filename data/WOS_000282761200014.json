{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "floating-point_streams"}, {"score": 0.004602395776895036, "phrase": "exact_summation"}, {"score": 0.004499647408293102, "phrase": "floating-point_numbers"}, {"score": 0.004055652445791872, "phrase": "arbitrary_length_input_stream"}, {"score": 0.0037219886365287085, "phrase": "internal_array"}, {"score": 0.0034937647771945803, "phrase": "returned_result"}, {"score": 0.0034467039994594065, "phrase": "correctly-rounded_sum"}, {"score": 0.003249966782844541, "phrase": "nonnormalized_numbers"}, {"score": 0.003220709449062307, "phrase": "modulo_intermediate_overflow"}, {"score": 0.003036832649117453, "phrase": "condition_number"}, {"score": 0.0028248293967214947, "phrase": "instruction-level_parallelism"}, {"score": 0.0023571835517819124, "phrase": "known_algorithms"}, {"score": 0.0022427071130840647, "phrase": "faster_algorithm"}, {"score": 0.002202469129781332, "phrase": "significantly_fewer_flops"}, {"score": 0.002162951519368368, "phrase": "hardware_improvements"}, {"score": 0.0021049977753042253, "phrase": "large_number"}], "paper_keywords": ["Algorithms", " Reliability", " Floating-point summation", " rounding error"], "paper_abstract": "We present a novel, online algorithm for exact summation of a stream of floating-point numbers. By \"online\" we mean that the algorithm needs to see only one input at a time, and can take an arbitrary length input stream of such inputs while requiring only constant memory. By \"exact\" we mean that the sum of the internal array of our algorithm is exactly equal to the sum of all the inputs, and the returned result is the correctly-rounded sum. The proof of correctness is valid for all inputs (including nonnormalized numbers but modulo intermediate overflow), and is independent of the number of summands or the condition number of the sum. The algorithm asymptotically needs only 5 FLOPs per summand, and due to instruction-level parallelism runs only about 2-3 times slower than the obvious, fast-but-dumb \"ordinary recursive summation\" loop when the number of summands is greater than 10,000. Thus, to our knowledge, it is the fastest, most accurate, and most memory efficient among known algorithms. Indeed, it is difficult to see how a faster algorithm or one requiring significantly fewer FLOPs could exist without hardware improvements. An application for a large number of summands is provided.", "paper_title": "Algorithm 908: Online Exact Summation of Floating-Point Streams", "paper_id": "WOS:000282761200014"}