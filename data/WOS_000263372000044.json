{"auto_keywords": [{"score": 0.049424447069121406, "phrase": "prototype_reduction"}, {"score": 0.00481495049065317, "phrase": "swarm_optimization"}, {"score": 0.004342430078306461, "phrase": "nearest-neighbor_classifier"}, {"score": 0.004253618550301311, "phrase": "efficient_method"}, {"score": 0.0041666157975446564, "phrase": "particle_swarm"}, {"score": 0.0039431758381711125, "phrase": "good_set"}, {"score": 0.003757480190200645, "phrase": "initial_random_selection"}, {"score": 0.003680587852807675, "phrase": "small_number"}, {"score": 0.0036301992752948956, "phrase": "training_patterns"}, {"score": 0.0033651019362620866, "phrase": "particle_swarm_optimization"}, {"score": 0.0032510690712452147, "phrase": "error_rate"}, {"score": 0.0031845067058084613, "phrase": "training_set"}, {"score": 0.00307657476125683, "phrase": "classification_performance"}, {"score": 0.0029928611380840757, "phrase": "training_phase"}, {"score": 0.0029518598926717332, "phrase": "prototype_generation"}, {"score": 0.002755104031926742, "phrase": "resulting_n_sets"}, {"score": 0.0026071599759743833, "phrase": "test_pattern"}, {"score": 0.002518746501941657, "phrase": "n_classification_results"}, {"score": 0.0024333239726872604, "phrase": "\"vote_rule"}, {"score": 0.002367071650093765, "phrase": "performance_improvement"}], "paper_keywords": ["Particle swarm optimization", " Prototype reduction", " Nearest neighbor"], "paper_abstract": "The problem addressed in this paper concerns the prototype reduction for a nearest-neighbor classifier. An efficient method based on particle swarm optimization is proposed here for finding a good set of prototypes. Starting from an initial random selection of a small number of training patterns, we generate a set of prototypes, using the particle swarm optimization, which minimizes the error rate on the training set. To improve the classification performance, during the training phase the prototype generation is repeated N times, then each of the resulting N sets of prototypes is used to classify each test pattern, and finally these N classification results are combined by the \"vote rule\". The performance improvement with respect to the state-of-the-art approaches is validated through experiments with several benchmark clatasets. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Particle swarm optimization for prototype reduction", "paper_id": "WOS:000263372000044"}