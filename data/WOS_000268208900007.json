{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mixed-parallel_applications"}, {"score": 0.004066076430818046, "phrase": "data_parallelism"}, {"score": 0.003953068310598579, "phrase": "advance_reservations_settings"}, {"score": 0.003701401653850141, "phrase": "application_torn-around_time"}, {"score": 0.0028986672783671147, "phrase": "non-reservation_settings"}, {"score": 0.0026633568650501873, "phrase": "wide_range"}, {"score": 0.002613709503583786, "phrase": "application_and_reservation_scenarios"}, {"score": 0.0025409639091476363, "phrase": "main_finding"}, {"score": 0.0023789822182914877, "phrase": "previously_published_cpa_algorithm"}, {"score": 0.002248366278757655, "phrase": "reservation_settings"}, {"score": 0.0021450029487459403, "phrase": "low_resource_consumption"}], "paper_keywords": ["Scheduling", " Advance reservation", " Mixed parallelism"], "paper_abstract": "This paper investigates the scheduling of mixed-parallel applications, which exhibit both task and data parallelism, in advance reservations settings. Both the problem of minimizing application torn-around time and that of meeting a deadline are studied. For each several scheduling algorithms are proposed, some of which borrow ideas froth previously published work in non-reservation settings. Algorithms are compared in simulation over a wide range of application and reservation scenarios. The main finding is that schedules computed using the previously published CPA algorithm can be adapted to advance reservation settings, notably resulting in low resource consumption and thus high efficiency.", "paper_title": "Scheduling mixed-parallel applications with advance reservations", "paper_id": "WOS:000268208900007"}