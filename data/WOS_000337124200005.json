{"auto_keywords": [{"score": 0.030570347867177793, "phrase": "hamming"}, {"score": 0.00481495049065317, "phrase": "hamming_space"}, {"score": 0.004739773204474094, "phrase": "multi-index_hashing"}, {"score": 0.004450568197899267, "phrase": "image_data"}, {"score": 0.00438105507792004, "phrase": "feature_descriptors"}, {"score": 0.004312622975366676, "phrase": "compact_binary_codes"}, {"score": 0.0042452552248398445, "phrase": "fast_near_neighbor_search"}, {"score": 0.00414616342377235, "phrase": "binary_codes"}, {"score": 0.003954837422946628, "phrase": "direct_indices"}, {"score": 0.003772306776343196, "phrase": "hash_table"}, {"score": 0.0031223774204093713, "phrase": "rigorous_way"}, {"score": 0.0030494153169181334, "phrase": "multiple_hash_tables"}, {"score": 0.0030017207229983385, "phrase": "binary_code_substrings"}, {"score": 0.002931569771634119, "phrase": "exact_k-nearest_neighbor_search"}, {"score": 0.0025638362414466278, "phrase": "theoretical_analysis"}, {"score": 0.002445347925313158, "phrase": "sub-linear_run-time_behavior"}, {"score": 0.002332322771009122, "phrase": "empirical_results"}, {"score": 0.0022958180852458215, "phrase": "dramatic_speedups"}, {"score": 0.002242127152093798, "phrase": "linear_scan_baseline"}], "paper_keywords": ["Binary codes", " Hamming distance", " nearest neighbor search", " multi-index hashing", " large-scale image retrieval"], "paper_abstract": "There is growing interest in representing image data and feature descriptors using compact binary codes for fast near neighbor search. Although binary codes are motivated by their use as direct indices (addresses) into a hash table, codes longer than 32 bits are not being used as such, as it was thought to be ineffective. We introduce a rigorous way to build multiple hash tables on binary code substrings that enables exact k-nearest neighbor search in Hamming space. The approach is storage efficient and straight-forward to implement. Theoretical analysis shows that the algorithm exhibits sub-linear run-time behavior for uniformly distributed codes. Empirical results show dramatic speedups over a linear scan baseline for datasets of up to one billion codes of 64, 128, or 256 bits.", "paper_title": "Fast Exact Search in Hamming Space with Multi-Index Hashing", "paper_id": "WOS:000337124200005"}