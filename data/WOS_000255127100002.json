{"auto_keywords": [{"score": 0.049270547314558835, "phrase": "uml"}, {"score": 0.04049193099832769, "phrase": "test_cases"}, {"score": 0.030836519882689872, "phrase": "conditional_predicates"}, {"score": 0.02463121925456304, "phrase": "generated_test_cases"}, {"score": 0.00481495049065317, "phrase": "unified_modeling_language"}, {"score": 0.004653667500876187, "phrase": "state_diagrams"}, {"score": 0.004095323392273661, "phrase": "software_systems"}, {"score": 0.003991932110277654, "phrase": "novel_method"}, {"score": 0.003760685138103153, "phrase": "uml_state_models"}, {"score": 0.0035731269727067496, "phrase": "present_approach"}, {"score": 0.0032531496610470377, "phrase": "uml_state_diagram"}, {"score": 0.00317095235382607, "phrase": "test_data"}, {"score": 0.003038532168038565, "phrase": "state_machine_graph"}, {"score": 0.0026058621464926826, "phrase": "function_minimisation_technique"}, {"score": 0.002433843373780471, "phrase": "present_test_data_generation_scheme"}, {"score": 0.0022731540640627307, "phrase": "transition_path_coverage_criteria"}, {"score": 0.0021049977753042253, "phrase": "class_as_well_as_cluster-level_state-dependent_behaviours"}], "paper_keywords": [""], "paper_abstract": "UML is widely accepted and used by industry for modelling and design of software systems. A novel method to automatically generate test cases based on UML state models is presented. In the present approach, the control and data flow logic available in the UML state diagram to generate test data are exploited. The state machine graph is traversed and the conditional predicates on every transition are selected. Then these conditional predicates are transformed and function minimisation technique is applied to generate test cases. The present test data generation scheme is fully automatic and the generated test cases satisfy transition path coverage criteria. The generated test cases can be used to test class as well as cluster-level state-dependent behaviours.", "paper_title": "Automatic test case generation using unified modeling language (UML) state diagrams", "paper_id": "WOS:000255127100002"}