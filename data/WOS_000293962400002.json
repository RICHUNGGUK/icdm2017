{"auto_keywords": [{"score": 0.04846939955431041, "phrase": "radio_network"}, {"score": 0.04411866577914921, "phrase": "correct_message"}, {"score": 0.0329659817347219, "phrase": "byzantine_faults"}, {"score": 0.02814286534572183, "phrase": "vertical_bar_m_vertical_bar"}, {"score": 0.02246846748295754, "phrase": "theta"}, {"score": 0.00481495049065317, "phrase": "radio_networks"}, {"score": 0.0047467056226182655, "phrase": "power_consumption"}, {"score": 0.004621330753571585, "phrase": "power_savings"}, {"score": 0.004563955915139113, "phrase": "compelling_new_data"}, {"score": 0.00449926046453628, "phrase": "santa"}, {"score": 0.004151948826884199, "phrase": "n_nodes"}, {"score": 0.004115046695105742, "phrase": "predetermined_schedule"}, {"score": 0.0039003938329863763, "phrase": "listening_node"}, {"score": 0.0037501046306877605, "phrase": "sending_node"}, {"score": 0.0036379355515545955, "phrase": "n_time_slots"}, {"score": 0.00358631302764822, "phrase": "expected_number"}, {"score": 0.0035735218505811308, "phrase": "time_slots"}, {"score": 0.0034542504077176577, "phrase": "popular_grid_model"}, {"score": 0.0033033378480798645, "phrase": "message_m"}, {"score": 0.0029833799680674075, "phrase": "random_bits"}, {"score": 0.0029674234843483746, "phrase": "non-faulty_node"}, {"score": 0.0029410182107369688, "phrase": "adversary_models"}, {"score": 0.00293576533568171, "phrase": "worst-case_behavior"}, {"score": 0.0029200627709816854, "phrase": "malicious_attacks"}, {"score": 0.002894077707891414, "phrase": "mobile_nodes"}, {"score": 0.0028529803471825897, "phrase": "static_nodes"}, {"score": 0.00276262659349613, "phrase": "broadcast_problem"}, {"score": 0.0024158691787489572, "phrase": "even_better_energy_savings"}, {"score": 0.002330972241152584, "phrase": "reliable_broadcast"}, {"score": 0.0021429978611217063, "phrase": "previous_protocols"}], "paper_keywords": ["Radio networks", " Fault tolerance", " Byzantine", " Reliable broadcast", " Bad Santa"], "paper_abstract": "We address the problem of minimizing power consumption when broadcasting a message from one node to all the other nodes in a radio network. To enable power savings for such a problem, we introduce a compelling new data streaming problem which we call the Bad Santa problem. Our results on this problem apply for any situation where: (1) a node can listen to a set of n nodes, out of which at least half are non-faulty and know the correct message; and (2) each of these n nodes sends according to some predetermined schedule which assigns each of them its own unique time slot. In this situation, we show that in order to receive the correct message with probability 1, it is necessary and sufficient for the listening node to listen to a Theta (root n) expected number of time slots. Moreover, if we allow for repetitions of transmissions so that each sending node sends the message O(log*n) times (i.e. in O(log*n) rounds each consisting of the n time slots), then listening to O(log*n) expected number of time slots suffices. We show that this is near optimal. We describe an application of our result to the popular grid model for a radio network. Each node in the network is located on a point in a two dimensional grid, and whenever a node sends a message m, all awake nodes within L-infinity distance r receive m. In this model, up to t < r/2 (2r + 1) nodes within any 2r+1 by 2r+1 square in the grid can suffer Byzantine faults. Moreover, we assume that the nodes that suffer Byzantine faults are chosen and controlled by an adversary that knows everything except for the random bits of each non-faulty node. This type of adversary models worst-case behavior due to malicious attacks on the network; mobile nodes moving around in the network; or static nodes losing power or ceasing to function. Let n=r(2r+1). We show how to solve the broadcast problem in this model with each node sending and receiving an expected O(n log(2) vertical bar m vertical bar + root n vertical bar m vertical bar) bits where vertical bar m vertical bar is the number of bits in m, and, after broadcasting a fingerprint of m, each node is awake only an expected O(root n) time slots. Moreover, for t <= (1-epsilon)(r/2)(2r + 1), for any constant epsilon > 0, we can achieve an even better energy savings. In particular, if we allow each node to send O(log* n) times, we achieve reliable broadcast with each node sending O(n log(2) vertical bar m vertical bar + (log* n)vertical bar m vertical bar) bits and receiving an expected O(n log(2)vertical bar m vertical bar+(log*n)vertical bar m vertical bar) bits and, after broadcasting a fingerprint of m, each node is awake for only an expected O(log*n) time slots. Our results compare favorably with previous protocols that required each node to send Theta (vertical bar m vertical bar) bits, receive Theta (n vertical bar m vertical bar) bits and be awake for Theta (n) time slots.", "paper_title": "Sleeping on the Job: Energy-Efficient and Robust Broadcast for Radio Networks", "paper_id": "WOS:000293962400002"}