{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_position_based_dynamics"}, {"score": 0.004690694501758065, "phrase": "practical_partitioning_technique"}, {"score": 0.004593591780245872, "phrase": "position_based_dynamics"}, {"score": 0.004475022550508119, "phrase": "ubiquitous_multi-core_processors"}, {"score": 0.004405348628112645, "phrase": "current_commodity_gpus"}, {"score": 0.004115697805448384, "phrase": "spatial_constraints"}, {"score": 0.004030449969901066, "phrase": "initialization_phase"}, {"score": 0.0034628156490003775, "phrase": "novel_greedy_algorithm"}, {"score": 0.0034088473318056537, "phrase": "additional_constraints"}, {"score": 0.003234934827553253, "phrase": "resulting_topology"}, {"score": 0.0029593432468318745, "phrase": "arbitrary_number"}, {"score": 0.0024634797027967203, "phrase": "animation_phase"}, {"score": 0.0022772115643656153, "phrase": "gpu_kernel"}, {"score": 0.002172266188075892, "phrase": "visual_quality"}, {"score": 0.0021049977753042253, "phrase": "serial_position_based_dynamics"}], "paper_keywords": [""], "paper_abstract": "We introduce a practical partitioning technique designed for parallelizing Position Based Dynamics, and exploiting the ubiquitous multi-core processors present in current commodity GPUs. The input is a set of particles whose dynamics is influenced by spatial constraints. In the initialization phase, we build a graph in which each node corresponds to a constraint and two constraints are connected by an edge if they influence at least one common particle. We introduce a novel greedy algorithm for inserting additional constraints (phantoms) in the graph such that the resulting topology is (q) over cap -colourable, where (q) over cap >= 2 is an arbitrary number. We color the graph, and the constraints with the same color are assigned to the same partition. Then, the set of constraints belonging to each partition is solved in parallel during the animation phase. We demonstrate this by using our partitioning technique; the performance hit caused by the GPU kernel calls is significantly decreased, leaving unaffected the visual quality, robustness and speed of serial position based dynamics.", "paper_title": "Scalable Partitioning for Parallel Position Based Dynamics", "paper_id": "WOS:000358326600039"}