{"auto_keywords": [{"score": 0.04712365605301722, "phrase": "fast_multipole_method"}, {"score": 0.04222294693480926, "phrase": "laplace_equation"}, {"score": 0.027252920471074818, "phrase": "fft"}, {"score": 0.00481495049065317, "phrase": "blas_formulation"}, {"score": 0.004605434064238641, "phrase": "local_operator"}, {"score": 0.004159997145421619, "phrase": "far_field_computation"}, {"score": 0.0037336520904376687, "phrase": "sharp_error"}, {"score": 0.0034812740368914455, "phrase": "second_expression"}, {"score": 0.0033508547759861186, "phrase": "matrix_formulation"}, {"score": 0.003287482882222731, "phrase": "basic_linear_algebra_subprograms"}, {"score": 0.0032459140232278727, "phrase": "blas"}, {"score": 0.002931569771634119, "phrase": "special_data_storages"}, {"score": 0.0028397103530211415, "phrase": "greater_computational_efficiency"}, {"score": 0.002785978280998868, "phrase": "blas_scheme"}, {"score": 0.0026815368507715, "phrase": "uniform_distributions"}, {"score": 0.0025000985765154028, "phrase": "polynomial_scaling"}, {"score": 0.0024372021710656585, "phrase": "plane_wave_expansions"}, {"score": 0.0023458049872325214, "phrase": "extra_memory_storage"}, {"score": 0.002316105585203396, "phrase": "numerical_stability"}, {"score": 0.002286781334850213, "phrase": "common_precisions"}, {"score": 0.002215081186105616, "phrase": "blas_version"}], "paper_keywords": ["fast multipole methods", " Laplace equation", " BLAS routines", " error bound", " fast Fourier transform", " rotations", " plane waves", " uniform distribution"], "paper_abstract": "The multipole-to-local (M2L) operator is the most time-consuming part of the far field computation in the fast multipole method for Laplace equation. Its natural expression, though commonly used, does not respect a sharp error bound: we here first prove the correctness of a second expression. We then propose a matrix formulation implemented with basic linear algebra subprograms (BLAS) routines in order to speed up its computation for these two expressions. We also introduce special data storages in memory to gain greater computational efficiency. This BLAS scheme is finally compared, for uniform distributions, to other M2L improvements such as block FFT, FFT with polynomial scaling, rotations and plane wave expansions. When considering runtime, extra memory storage, numerical stability and common precisions for Laplace equation, the BLAS version appears as the best one. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "High performance BLAS formulation of the multipole-to-local operator in the fast multipole method", "paper_id": "WOS:000252860600014"}