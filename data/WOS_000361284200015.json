{"auto_keywords": [{"score": 0.023094901240319193, "phrase": "compcert"}, {"score": 0.00481495049065317, "phrase": "cryptographic_primitive"}, {"score": 0.003848088904418221, "phrase": "c_program"}, {"score": 0.00329813918116714, "phrase": "interactive_proof"}, {"score": 0.003206916619690171, "phrase": "functional_correctness"}, {"score": 0.0030747771905143273, "phrase": "coq_proof_assistant"}, {"score": 0.0029069972482610403, "phrase": "verifiable_c_program_logic"}, {"score": 0.002826562521633885, "phrase": "verifiable_c"}, {"score": 0.0027100527874262446, "phrase": "separation_logic"}, {"score": 0.002598333022293788, "phrase": "c_language"}, {"score": 0.0024912073108138613, "phrase": "sound_w.r.t"}, {"score": 0.002388487669097511, "phrase": "operational_semantics"}, {"score": 0.0021049977753042253, "phrase": "optimizing_c_compiler"}], "paper_keywords": ["Verification", " Coq"], "paper_abstract": "A full formal machine-checked verification of a C program: the OpenSSL implementation of SHA-256. This is an interactive proof of functional correctness in the Coq proof assistant, using the Verifiable C program logic. Verifiable C is a separation logic for the C language, proved sound w.r.t. the operational semantics for C, connected to the CompCert verified optimizing C compiler.", "paper_title": "Verification of a Cryptographic Primitive: SHA-256 (Abstract)", "paper_id": "WOS:000361284200015"}