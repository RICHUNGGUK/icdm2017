{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "efficient_evaluation"}, {"score": 0.04896848785083955, "phrase": "xml_view"}, {"score": 0.0342576989418541, "phrase": "suffix_paths"}, {"score": 0.004769958800452922, "phrase": "query_rewriting_plan"}, {"score": 0.004594137808658537, "phrase": "plan_generation"}, {"score": 0.004551199992546761, "phrase": "xml_views"}, {"score": 0.004487541157100498, "phrase": "wide_attention"}, {"score": 0.003953068310598579, "phrase": "exponential_size"}, {"score": 0.00375395061615019, "phrase": "potentially_exponential_number"}, {"score": 0.003615443704375908, "phrase": "new_space-efficient_form"}, {"score": 0.00351491577968631, "phrase": "automata_based_combinations"}, {"score": 0.0034171734618737436, "phrase": "original_query"}, {"score": 0.003353521531649663, "phrase": "abcplan"}, {"score": 0.0031995142224983094, "phrase": "query_tree"}, {"score": 0.0030239842475439814, "phrase": "different_buckets"}, {"score": 0.002995677265350124, "phrase": "valid_query"}, {"score": 0.002885066818322192, "phrase": "evaluation_method"}, {"score": 0.0028580564897994175, "phrase": "abcscan"}, {"score": 0.0027916287357898544, "phrase": "unified_evaluation_tree"}, {"score": 0.0027012086158226456, "phrase": "evaluation_tree"}, {"score": 0.0025409639091476363, "phrase": "node_existence_automata"}, {"score": 0.0023456351719724957, "phrase": "intersection_problem"}, {"score": 0.002323663295811215, "phrase": "deterministic_finite_automata"}, {"score": 0.0022589720760078274, "phrase": "abcplan_based_method"}, {"score": 0.0022378101636842296, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Database", " XML", " Materialized view"], "paper_abstract": "The query rewriting plan generation over XML views has received wide attention recently. However, little work has been done on efficient evaluation of the query rewriting plans, which is not trivial since the plan may contain an exponential size of sub-plans. This paper investigates the reason for the potentially exponential number of sub-plans, and then proposes a new space-efficient form called ABCPlan (Plan with Automata Based Combinations) to equivalently represent the original query rewriting plan. ABCPlan contains a set of buckets containing suffix paths in the query tree and an automata to indicate the combination of the suffix paths from different buckets as valid query rewriting sub-plans. We also design an evaluation method called ABCScan, which constructs a unified evaluation tree for the ABCPlan and handles the evaluation tree in one scan of the XML view. In the evaluation, we introduce node existence automata to encode the structure of the sub-tree and convert the satisfaction of the ABCPlan into the intersection problem of deterministic finite automata. The experiments show that ABCPlan based method outperforms existing methods significantly in terms of scalability and efficiency. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Efficient evaluation of query rewriting plan over materialized XML view", "paper_id": "WOS:000278287700013"}