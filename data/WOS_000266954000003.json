{"auto_keywords": [{"score": 0.04791893615216392, "phrase": "load_balancing"}, {"score": 0.006347230520285128, "phrase": "rendezvous_directory"}, {"score": 0.005234661019435429, "phrase": "gms"}, {"score": 0.00481495049065317, "phrase": "distributed_hash_tables"}, {"score": 0.004734853555630616, "phrase": "fundamental_problem"}, {"score": 0.004695303774351139, "phrase": "distributed_hash_table"}, {"score": 0.004502433187097914, "phrase": "performance_degradation"}, {"score": 0.00446481608187988, "phrase": "guarantee_system_fairness"}, {"score": 0.004408976280483648, "phrase": "existing_migration-based_load_balancing_strategies"}, {"score": 0.004140048783805449, "phrase": "rds"}, {"score": 0.003969921386420935, "phrase": "iss"}, {"score": 0.003589404014552974, "phrase": "group_multicast_strategy"}, {"score": 0.003485437176235259, "phrase": "dht_systems"}, {"score": 0.003314146790549757, "phrase": "iss."}, {"score": 0.0031248767378106663, "phrase": "load_information"}, {"score": 0.003059925849144792, "phrase": "formed_groups"}, {"score": 0.0030216031606457214, "phrase": "multicast_protocol"}, {"score": 0.002778064757980489, "phrase": "intra-group_load_balancing"}, {"score": 0.0027548146060608902, "phrase": "inter-group_load_balancing"}, {"score": 0.002652567310501193, "phrase": "gms."}, {"score": 0.002459288755782293, "phrase": "system_resilience"}, {"score": 0.0023879771786116228, "phrase": "better_understanding"}, {"score": 0.002318728604587962, "phrase": "analytical_studies"}, {"score": 0.002122775261369663, "phrase": "extensive_simulation"}, {"score": 0.0021049977753042253, "phrase": "different_workload"}], "paper_keywords": ["Distributed system", " Distributed hash table", " Load balancing"], "paper_abstract": "As a fundamental problem in distributed hash table (DHT)-based systems, load balancing is important to avoid performance degradation and guarantee system fairness. Among existing migration-based load balancing strategies, there are two main categories: (1) rendezvous directory strategy (RDS) and (2) independent searching strategy (ISS). However, none of them can achieve resilience and efficiency at the same time. In this paper, we propose a group multicast strategy (GMS) for load balancing in DHT systems, which attempts to achieve the benefits of both RDS and ISS. GMS does not rely on a few static rendezvous directories to perform load balancing. Instead, load information is disseminated within the formed groups via a multicast protocol. Thus, each peer has enough information to act as the rendezvous directory and perform load balancing within its group. Besides intra-group load balancing, inter-group load balancing and emergent load balancing are also supported by GMS. In GMS, the position of the rendezvous directory is randomized in each round, which further improves system resilience. In order to have a better understanding of GMS, we also perform analytical studies on GMS in terms of its scalability and efficiency under churn. Finally, the effectiveness of GMS is evaluated by extensive simulation under different workload and churn levels. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Resilient and efficient load balancing in distributed hash tables", "paper_id": "WOS:000266954000003"}