{"auto_keywords": [{"score": 0.042143904057605854, "phrase": "routing_cost"}, {"score": 0.03570147413252297, "phrase": "swap_edge"}, {"score": 0.00481495049065317, "phrase": "multiple-sources_routing_tree"}, {"score": 0.0045843245695654875, "phrase": "spanning_tree"}, {"score": 0.00447316895126645, "phrase": "graph_g"}, {"score": 0.0038603905208013482, "phrase": "total_distance"}, {"score": 0.0028510114763213596, "phrase": "undirected_graph"}, {"score": 0.00241989408309933, "phrase": "tree_edge"}], "paper_keywords": ["algorithm", " graph", " swap edge", " spanning tree", " optimization problem"], "paper_abstract": "Let T be a spanning tree of a graph G and S subset of V(G) be a set of sources. The routing cost of T is the total distance from all sources to all vertices. For an edge e of T, the swap edge of e is the edge f minimizing the routing cost of the tree formed by replacing e with f. Given an undirected graph G and a spanning tree T of G, we investigate the problem of finding the swap edge for every tree edge. In this paper, we propose an O(m log n+n(2))-time algorithm for the case of two sources and an O(mn)-time algorithm for the case of more than two sources, where m and n are the numbers of edges and vertices of G, respectively.", "paper_title": "The swap edges of a multiple-sources routing tree", "paper_id": "WOS:000252251700001"}