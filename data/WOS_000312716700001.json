{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "persistent_data"}, {"score": 0.015485771730291146, "phrase": "process-driven_soas"}, {"score": 0.014638611757819869, "phrase": "process_activities"}, {"score": 0.01181618748455828, "phrase": "structural_problems"}, {"score": 0.004429727701202369, "phrase": "service_operations"}, {"score": 0.003923532450854754, "phrase": "particular_activities"}, {"score": 0.0038207243221070166, "phrase": "service_operations_reading"}, {"score": 0.00373474182086791, "phrase": "time-consuming_task"}, {"score": 0.0035820833812158035, "phrase": "persistent_data_access"}, {"score": 0.0035147642199945387, "phrase": "data-intensive_business_processes"}, {"score": 0.0034226302212225206, "phrase": "underlying_persistent_data_access_details"}, {"score": 0.003371066990851953, "phrase": "i.e._physical_storage_schemes"}, {"score": 0.0033329032920236994, "phrase": "database_connections"}, {"score": 0.0031724417545242315, "phrase": "persistent_data_access_activities"}, {"score": 0.002951673109860487, "phrase": "persistent_data_access_flows"}, {"score": 0.0027254466299651936, "phrase": "diverse_filer_criteria"}, {"score": 0.002613935123129054, "phrase": "specific_database"}, {"score": 0.0024504843466435487, "phrase": "business_processes"}, {"score": 0.0023952639120005193, "phrase": "motivating_scenarios"}, {"score": 0.002368120987066921, "phrase": "industrial_case_study"}, {"score": 0.0021049977753042253, "phrase": "underlying_algorithms"}], "paper_keywords": ["SOA", " Process", " Business process", " Process flow", " Process-driven", " Data access flow", " Data access flows", " Persistency", " Persistent", " Persistent data access flows", " Data access service", " DAS", " Data access", " Data", " Data flow", " Control flow", " Data access activity", " Service-oriented", " DAO", " Data access object", " Model", " Model-driven", " Views", " View-based", " Data model", " BPMS", " Intalio", " Microflow", " Macroflow"], "paper_abstract": "In process-driven, service-oriented architectures (SOAs), process activities can perform service operations, data transformations, or human tasks. Unfortunately, the process activities are usually tightly coupled. Thus, when the number of activities in the process grows, focusing on particular activities of the flow such as the service operations reading or writing persistent data is a time-consuming task. In particular, in order to solve structural problems concerning persistent data access such as deadlocks in data-intensive business processes, stakeholders need to understand the underlying persistent data access details of the activities i.e. physical storage schemes, and database connections. With our view-based model-driven approach, we provide a solution to generate flows of persistent data access activities (which we refer to as persistent data access flows). To the best of our knowledge these persistent data access flows are not used to solve structural problems in process-driven SOAs, yet. Moreover, our persistent data access flows can be flattened by diverse filer criteria e.g. by filtering all activities reading or writing from a specific database or table. Using our approach, we can enhance traceability and documentation of persistent data access in business processes. In a series of motivating scenarios from an industrial case study we present how our persistent data access flow concept can contribute to enhance productivity in service-oriented, process-driven environments. We qualitatively evaluate our concepts and prototypes, and finally, discuss the correctness and the complexity of the underlying algorithms.", "paper_title": "Enhancing traceability of persistent data access flows in process-driven SOAs", "paper_id": "WOS:000312716700001"}