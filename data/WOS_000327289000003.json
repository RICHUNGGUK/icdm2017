{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parasitic_protection_links"}, {"score": 0.004664352260912174, "phrase": "efficient_and_agile_protection_strategies"}, {"score": 0.0036167509502276294, "phrase": "unicast_service_protection_problem"}, {"score": 0.003593812067062062, "phrase": "single-link_failures"}, {"score": 0.003537097098008714, "phrase": "mesh_networks"}, {"score": 0.00337224813954299, "phrase": "integer_linear_program"}, {"score": 0.00335088916585741, "phrase": "ilp"}, {"score": 0.0032666255024083983, "phrase": "strict_routing_protection"}, {"score": 0.0032150572968898923, "phrase": "flexible_routing_protection"}, {"score": 0.0031342307827666675, "phrase": "dynamic_traffic_case"}, {"score": 0.0031044458412608084, "phrase": "numerical_results"}, {"score": 0.0030457198309616694, "phrase": "better_capacity_efficiency"}, {"score": 0.0030167734733376984, "phrase": "fipp_p-cycle_scheme"}, {"score": 0.0028487656293168795, "phrase": "shared_backup_path_protection"}, {"score": 0.002785978280998868, "phrase": "traffic_load"}, {"score": 0.0027159094186967247, "phrase": "failure_recovery_performance"}, {"score": 0.0026815368507715, "phrase": "average_number"}, {"score": 0.002664513608074113, "phrase": "switch_reconfigurations"}, {"score": 0.0025080739950704644, "phrase": "sbpp"}, {"score": 0.002468450551616404, "phrase": "fipp"}, {"score": 0.002444977075259825, "phrase": "traffic_demand"}, {"score": 0.0024063484128685367, "phrase": "dynamic_case"}, {"score": 0.002375886086224768, "phrase": "frp"}, {"score": 0.002360796860462937, "phrase": "fipp_p-cycle_schemes"}, {"score": 0.0022010126160835024, "phrase": "capacity_efficiencies"}, {"score": 0.0021456243019466843, "phrase": "traffic_recovery_speed"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Optical networks", " Survivability", " Protection", " p-Cycle", " Static traffic", " Dynamic traffic", " Optimization", " Heuristics"], "paper_abstract": "The p-cycle and its Failure Independent Path Protection (FIPP) extension are known to be efficient and agile protection strategies. The p-cycle is pre-configured such that if there is a failure, only the switches at two end nodes need to be reconfigured. In this paper, we extend the p-cycle by allowing cycles to have attached links, called Parasitic Protection Links (PPL), in order to protect paths whose source and destination nodes are not only located on the cycle but also connected by a PPL to the cycle. A p-cycle with PPL is named p(2)-cycle. We address the unicast service protection problem against single-link failures by using p(2)-cycle in mesh networks for both static and dynamic traffic scenarios. In the static case, the problem is formulated as an Integer Linear Program (ILP). We further propose two p(2)-cycle based heuristic algorithms, Strict Routing Protection (SRP) and Flexible Routing Protection (FRP), to address the dynamic traffic case. The numerical results show that the p(2)-cycle scheme provides better capacity efficiency than the FIPP p-cycle scheme in all the traffic scenarios considered and achieves only less than 1% extra total cost over the optimum in COST239, provided by Shared Backup Path Protection (SBPP) approach when the traffic load is high. We also study the failure recovery performance in terms of average number of switch reconfigurations (NOR), and show that the performance of the p(2)-cycle becomes much better than that of SBPP and gets close to FIPP as the traffic demand increases. In the dynamic case, both SRP and FRP outperform FIPP p-cycle schemes in terms of blocking probability in most scenarios considered. In general, the p(2)-cycle protection scheme outperforms the p-cycle based in terms of capacity efficiencies which being slightly slower in terms of traffic recovery speed. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "p(2)-Cycles: p-Cycles with parasitic protection links", "paper_id": "WOS:000327289000003"}