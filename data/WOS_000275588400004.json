{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "critical_path"}, {"score": 0.010340923236233627, "phrase": "activity_network"}, {"score": 0.010260832234008435, "phrase": "time_constraints"}, {"score": 0.006633304574960485, "phrase": "chen"}, {"score": 0.004777451835750203, "phrase": "time-constrained_activity_network"}, {"score": 0.00472790536079734, "phrase": "longest_path"}, {"score": 0.004534781689048701, "phrase": "traditional_critical_path_problem"}, {"score": 0.004326889832663823, "phrase": "large_set"}, {"score": 0.004304384633791721, "phrase": "real_situations"}, {"score": 0.00419359499046542, "phrase": "project_management"}, {"score": 0.004096314489589988, "phrase": "general_approach"}, {"score": 0.0038678756211550334, "phrase": "first_one"}, {"score": 0.0038377243068482914, "phrase": "time-window_constraint"}, {"score": 0.003719442481033911, "phrase": "predefined_time_interval"}, {"score": 0.0036331209562640164, "phrase": "activity_completion_time"}, {"score": 0.003604793006510814, "phrase": "second_one"}, {"score": 0.003576685140836491, "phrase": "time-schedule_constraint"}, {"score": 0.0034483755691680474, "phrase": "pre-specified_instants"}, {"score": 0.0034036710998644865, "phrase": "third_one"}, {"score": 0.0033771261386897505, "phrase": "time-switch_constraint"}, {"score": 0.0033333422518227796, "phrase": "specified_starting_time"}, {"score": 0.003307343959522875, "phrase": "project_activities"}, {"score": 0.0032389990161618178, "phrase": "specified_time_periods"}, {"score": 0.0030582231820028057, "phrase": "scientific_literature"}, {"score": 0.0029872014961395163, "phrase": "rinks"}, {"score": 0.0028575052964897223, "phrase": "time-schedule_and_time-window_constraints"}, {"score": 0.002791269308577489, "phrase": "yang"}, {"score": 0.0027191850147812767, "phrase": "activity_networks"}, {"score": 0.002481629924770927, "phrase": "proposed_approach"}, {"score": 0.0024494725554290607, "phrase": "java"}, {"score": 0.0023369118494234484, "phrase": "public_domain_project"}, {"score": 0.0023247328402019743, "phrase": "problem_library"}, {"score": 0.002300564468380128, "phrase": "kolisch"}, {"score": 0.0022529771934744927, "phrase": "latter_consists"}, {"score": 0.002241234633963619, "phrase": "randomly_generated_activity_networks"}, {"score": 0.002223735193987195, "phrase": "computational_results"}, {"score": 0.002166382426707153, "phrase": "considered_instances"}, {"score": 0.002127116019185069, "phrase": "commercial_pentium_class_pc."}], "paper_keywords": ["Activity network", " Critical path", " Time-constrained network", " Time-window constraint", " Time-schedule constraint", " Time-switch constraint"], "paper_abstract": "Finding the longest path in an activity network, where time constraints are attached to activities, is generalized from the traditional critical path problem. Time constraints have attracted much research interest in recent years, because they can be used to represent a large set of real situations, arising not only in the field of the project management. In this paper, we propose a general approach for finding the critical path in a deterministic activity-on-the-arc network, considering three different types of time constraints. The first one is the time-window constraint, which imposes that an activity can start only in a predefined time interval, whereas no constraints are imposed on the activity completion time. The second one is the time-schedule constraint, which assumes that an activity can start its execution at one of the pre-specified instants of time. The third one is the time-switch constraint, which imposes a specified starting time on the project activities and forces them to be inactive during specified time periods. The algorithm introduced in this paper has been developed by redefining and combining together two procedures well-known in the scientific literature. The former, proposed by Chen, Rinks and Tang in 1997, can be used for finding the critical path in an activity network where time-schedule and time-window constraints are considered. The latter, proposed by Yang and Chen in 2000, can be applied in activity networks with only time-switch constraints. The method, developed in this paper, can be used to find the critical path in all the practical situations, in which the aforementioned time constraints are taken into account simultaneously. The proposed approach has been coded in Java and has been validated by considering two sets of instances: the former has been taken from the public domain project scheduling problem library, developed by Kolisch and Sprecher in 1997, whereas the latter consists of randomly generated activity networks. The computational results collected are very promising, showing that the solution process for the considered instances required at most few seconds, using a commercial Pentium class PC. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A solution approach to find the critical path in a time-constrained activity network", "paper_id": "WOS:000275588400004"}