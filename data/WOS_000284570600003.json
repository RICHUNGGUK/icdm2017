{"auto_keywords": [{"score": 0.036238691988388944, "phrase": "timing_events"}, {"score": 0.004745056850725867, "phrase": "execution_time_control_features"}, {"score": 0.004252063063815893, "phrase": "gnat_bare-board_ravenscar_run-time_environment"}, {"score": 0.0041597636670478435, "phrase": "atmel"}, {"score": 0.003952082333580496, "phrase": "execution_time_measurement"}, {"score": 0.003291188255149539, "phrase": "single_alarm_mechanism"}, {"score": 0.003081272473508291, "phrase": "test_results"}, {"score": 0.002905914725757534, "phrase": "implemented_features"}, {"score": 0.0023496433751182162, "phrase": "presented_design"}, {"score": 0.0021835829960683666, "phrase": "rtsj."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Ada 2005", " Real-time", " Execution time control", " GNAT", " Atmel AVR32"], "paper_abstract": "This paper describes how the new Ada 2005 timing event and execution time control features were implemented for the GNAT bare-board Ravenscar run-time environment on the Atmel AVR32 architecture. High accuracy for execution time measurement was achieved by accounting for the effects of interrupts and executing entries by proxy. The implementation of timing events was streamlined by using a single alarm mechanism both for timing events and waking up tasks. Test results on the overhead and accuracy of the implemented features are presented. While the implementation is for the AVR32, it may serve as a blueprint for implementations on other architectures. It is also discussed how the presented design could be transferred to other systems such as C/POSIX and RTSJ. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Implementing the new Ada 2005 timing event and execution time control features on the AVR32 architecture", "paper_id": "WOS:000284570600003"}