{"auto_keywords": [{"score": 0.049352273134126434, "phrase": "coarse-grained_reconfigurable_architectures"}, {"score": 0.00481495049065317, "phrase": "multi-domain_applications"}, {"score": 0.004460309246062286, "phrase": "increasing_attention"}, {"score": 0.003916098498242888, "phrase": "integer_arithmetic"}, {"score": 0.00385658790017119, "phrase": "typical_cgras"}, {"score": 0.0037402558657576124, "phrase": "logical_operations"}, {"score": 0.0033599501775954024, "phrase": "floating-point_arithmetic"}, {"score": 0.0032336801561165113, "phrase": "optimal_formulation"}, {"score": 0.0031845067058084613, "phrase": "integer_linear_programming"}, {"score": 0.0030648097361278856, "phrase": "fast_heuristic_mapping_algorithm"}, {"score": 0.002949598537993663, "phrase": "randomly_generated_examples"}, {"score": 0.00290473242917264, "phrase": "optimal_mapping_results"}, {"score": 0.002629238854352447, "phrase": "similar_results"}, {"score": 0.0025892330566358503, "phrase": "practical_examples"}, {"score": 0.0023798115577749225, "phrase": "cgra_show"}, {"score": 0.002272794656458419, "phrase": "software_implementations"}, {"score": 0.0021705796895687864, "phrase": "application_acceleration"}, {"score": 0.0021049977753042253, "phrase": "floating-point_operations"}], "paper_keywords": ["Design automation", " high-level synthesis", " parallelizing compiler", " reconfigurable architecture"], "paper_abstract": "Coarse-grained reconfigurable architectures (CGRAs) have drawn increasing attention due to their performance and flexibility. However, their applications have been restricted to domains based on integer arithmetic since typical CGRAs support only integer arithmetic or logical operations. This paper introduces approaches to mapping applications onto CGRAs supporting both integer and floating-point arithmetic. After presenting an optimal formulation using integer linear programming, we present a fast heuristic mapping algorithm. Our experiments on randomly generated examples generate optimal mapping results using our heuristic algorithm for 97% of the examples within a few seconds. We observe similar results for practical examples from multimedia and 3-D graphics benchmarks. The applications mapped on a CGRA show up to 120 times performance improvement compared to software implementations, demonstrating the potential for application acceleration on CGRAs supporting floating-point operations.", "paper_title": "Mapping Multi-Domain Applications onto Coarse-Grained Reconfigurable Architectures", "paper_id": "WOS:000289843900001"}