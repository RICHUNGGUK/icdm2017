{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "control_flow"}, {"score": 0.004622450915803531, "phrase": "efficient_anormaly_detection"}, {"score": 0.004303830426772906, "phrase": "malicious_use"}, {"score": 0.004089725258435817, "phrase": "buffer_overflow_vulnerabilities"}, {"score": 0.003966388754366831, "phrase": "corrective_action"}, {"score": 0.0037307208089736835, "phrase": "programmer's_attention"}, {"score": 0.003509006038574667, "phrase": "operating_system"}, {"score": 0.0029798924689472014, "phrase": "intrusion_detection_systems"}, {"score": 0.0027459678326877744, "phrase": "restricted_knowledge"}, {"score": 0.002453934333239467, "phrase": "anomaly_detection_method"}, {"score": 0.0023798115577749225, "phrase": "actively_some_control_flows"}, {"score": 0.0021928902836049384, "phrase": "anomaly_program_behavior"}, {"score": 0.0021049977753042253, "phrase": "false_positives"}], "paper_keywords": [""], "paper_abstract": "In order to prevent the malicious use of the computers exploiting buffer overflow vulnerabilities, a corrective action by not only calling a programmer's attention but expansion of compiler or operating system is likely to be important. On the other hand, the introduction and employment of intrusion detection systems must be easy for people with the restricted knowledge of computers. In this paper, we propose an anomaly detection method by modifying actively some control flows of programs. Our method can efficiently detect anomaly program behavior and give no false positives.", "paper_title": "Actively modifying control flow of program for efficient anormaly detection", "paper_id": "WOS:000242122600094"}