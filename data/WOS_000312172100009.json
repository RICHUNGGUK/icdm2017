{"auto_keywords": [{"score": 0.0398948158406531, "phrase": "functional_level"}, {"score": 0.00481495049065317, "phrase": "robot_software"}, {"score": 0.004531517501420676, "phrase": "art_tool"}, {"score": 0.004492406361795448, "phrase": "functional_modules"}, {"score": 0.004466519142879166, "phrase": "robotic_systems"}, {"score": 0.004377077848734575, "phrase": "component_based_framework"}, {"score": 0.004339293854115301, "phrase": "embedded_real-time_systems"}, {"score": 0.004179280538985628, "phrase": "formal_approaches"}, {"score": 0.0041074234667687875, "phrase": "robot_software_architecture"}, {"score": 0.004071957673937727, "phrase": "deliberative_activities"}, {"score": 0.003978866233891427, "phrase": "execution_control"}, {"score": 0.0038654774211631564, "phrase": "formal_methods"}, {"score": 0.0035648266669315943, "phrase": "overall_platform"}, {"score": 0.0033353809745319857, "phrase": "complex_exploration_rover"}, {"score": 0.0030404363386284756, "phrase": "sip_engine"}, {"score": 0.0030141556259370675, "phrase": "real_robot"}, {"score": 0.002953711377604328, "phrase": "model_semantics"}, {"score": 0.0028694530267725925, "phrase": "model_offline"}, {"score": 0.0027080590887226517, "phrase": "promising_directions"}, {"score": 0.00265373679629359, "phrase": "real-time_bip_engine"}, {"score": 0.0025929837295811673, "phrase": "timed_bip_model"}, {"score": 0.0025044454602720597, "phrase": "multiple_cpus"}, {"score": 0.0024541975028954497, "phrase": "user-friendly_language"}, {"score": 0.0023363141951290526, "phrase": "temporal_plan_execution_controller"}, {"score": 0.0022630645070078554, "phrase": "lowest_level"}, {"score": 0.0022499947003073654, "phrase": "robot_architectures"}, {"score": 0.002141898874982106, "phrase": "decisional_layer"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Robotic software architecture", " Controller synthesis", " Verification and validation", " Robotic functional layer", " Robust software"], "paper_abstract": "We have recently started an effort to combine a state of the art tool for developing functional modules of robotic systems (G(theta n)oM) with a component based framework for implementing embedded real-time systems (BIP). Unlike some works which study the connection between formal approaches and the highest (decisional) level of the robot software architecture, where deliberative activities such as planning, diagnostics, and execution control are conducted, we tackle the problem of using formal methods for developing modules of the functional level of robots. Little attention has been drawn to the development of these modules whose robustness is paramount to the robustness of the overall platform. To this end, we have successfully developed the G(theta n)oM/BIP component based design approach and applied it to the functional level of a complex exploration rover. Here, we report on this work, and show how we: (i) produce a very fine grained formal computational model of the robot functional level; (ii) run the SIP engine on the real robot, which executes and enforces the model semantics at runtime; and (iii) check the model offline for deadlock-freedom, as well as other safety properties. Moreover, we also extended this paradigm in a number of promising directions: (i) introduced a real-time BIP engine which can now use and control a timed BIP model; (ii) distributed the model and the engine over multiple CPUs: (iii) proposed a user-friendly language for specifying constraints on the model; and (iv) linked the model with a temporal plan execution controller. Interestingly, although our approach was initially proposed for the lowest level of robot architectures, these more recent extensions now allow us to model and manage the deliberation taking place at the decisional layer. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Rigorous design of robot software: A formal component-based approach", "paper_id": "WOS:000312172100009"}