{"auto_keywords": [{"score": 0.045110937849271344, "phrase": "unweighted_events"}, {"score": 0.020089055343694776, "phrase": "pythia"}, {"score": 0.01169203678202735, "phrase": "doubly_heavy_baryons"}, {"score": 0.011410817668946019, "phrase": "previous_genxicc_versions"}, {"score": 0.00996816771096134, "phrase": "idwtup"}, {"score": 0.009836109583468141, "phrase": "igenerate"}, {"score": 0.008713770625849245, "phrase": "genxicc"}, {"score": 0.00870712258684519, "phrase": "hadronic_production"}, {"score": 0.008545998552230698, "phrase": "comput"}, {"score": 0.006148522441835334, "phrase": "color-flow_problem"}, {"score": 0.0060044535593918895, "phrase": "linux"}, {"score": 0.005594088955035952, "phrase": "full_events"}, {"score": 0.005235650483779236, "phrase": "later_simulation"}, {"score": 0.005040908209260691, "phrase": "baryon_events"}, {"score": 0.0047983817372590975, "phrase": "improved_version"}, {"score": 0.00475083449919163, "phrase": "c.h._chang"}, {"score": 0.004747196500689211, "phrase": "j.x._wang"}, {"score": 0.0047435612747422804, "phrase": "x.g._wu"}, {"score": 0.004739928819258161, "phrase": "comput_phys"}, {"score": 0.004719239790842887, "phrase": "phys"}, {"score": 0.004696110934917009, "phrase": "hit-and-miss_approach"}, {"score": 0.004671435781048007, "phrase": "unweighted_baryon_events"}, {"score": 0.004635783410473805, "phrase": "les_houches"}, {"score": 0.0046269127166259924, "phrase": "common_block"}, {"score": 0.004614522122625642, "phrase": "standard_lhe_data_file"}, {"score": 0.004609221983711141, "phrase": "useful_information"}, {"score": 0.004603927904263063, "phrase": "doubly_heavy_baryon"}, {"score": 0.004577548159082874, "phrase": "decay_simulation"}, {"score": 0.004535653170629654, "phrase": "cpc_program_library_reference"}, {"score": 0.00453217919899288, "phrase": "original_program"}, {"score": 0.004523507701693679, "phrase": "cpc"}, {"score": 0.004478246846490532, "phrase": "vegas_algorithm"}, {"score": 0.00447695451861151, "phrase": "new_version"}, {"score": 0.0044718116769763725, "phrase": "old_program"}, {"score": 0.004424094538382618, "phrase": "typical_data"}, {"score": 0.004416904940622467, "phrase": "vegas"}, {"score": 0.0044105544150750626, "phrase": "distributed_program"}, {"score": 0.00439200408516202, "phrase": "physical_problem"}, {"score": 0.004358474997057136, "phrase": "upgraded_version"}, {"score": 0.004353467662008785, "phrase": "proper_interface"}, {"score": 0.0043451348285379904, "phrase": "full_production"}, {"score": 0.004307007867660009, "phrase": "improved_hit-and-miss_approach"}, {"score": 0.004296710428959638, "phrase": "integration_dimension"}, {"score": 0.004283963431543143, "phrase": "cms_and_lhcb_groups"}, {"score": 0.004279041332926307, "phrase": "large_hadron_collider"}, {"score": 0.0042692140223495895, "phrase": "recent_improvements"}, {"score": 0.004236618339471119, "phrase": "color-flow_part"}, {"score": 0.004212334310946355, "phrase": "output_production_events"}, {"score": 0.004207494163494855, "phrase": "suitable_form"}, {"score": 0.0041974336448168436, "phrase": "upper_bound"}, {"score": 0.004130800724657003, "phrase": "dominant_gluon-gluon_fusion_mechanism"}, {"score": 0.004118154526092263, "phrase": "intermediate_diquarks"}, {"score": 0.004007595707411614, "phrase": "theoretical_purposes"}, {"score": 0.004005681065234677, "phrase": "integrand_fxn"}, {"score": 0.003996479038168381, "phrase": "xmax_array"}, {"score": 0.003957224788068873, "phrase": "doubly"}, {"score": 0.003955703812751039, "phrase": "heavy_baryons"}, {"score": 0.003952732921256193, "phrase": "hadronic"}, {"score": 0.0038955107447623373, "phrase": "correct_input"}, {"score": 0.003829989454717228, "phrase": "previous_vegas"}, {"score": 0.003824482242100352, "phrase": "theoretical_studies"}, {"score": 0.003815694878254589, "phrase": "total_baryon_production_cross-section"}, {"score": 0.003799636916758481, "phrase": "fastest_way"}, {"score": 0.0037923601152921303, "phrase": "pythia_parameter_idwtup"}, {"score": 0.003721778087926364, "phrase": "interesting_properties"}, {"score": 0.003714298514557192, "phrase": "importance_sampling_function"}, {"score": 0.0036749822858183584, "phrase": "events_simulation"}, {"score": 0.0036721650920540777, "phrase": "detector_conditions"}, {"score": 0.003645508835679134, "phrase": "idwgtup"}, {"score": 0.0036232110547856715, "phrase": "pythia's_inner_mechanism"}, {"score": 0.003605194206529301, "phrase": "von_neumann"}, {"score": 0.0035955298297928604, "phrase": "unsatisfied_events"}, {"score": 0.0035900189230994805, "phrase": "allowed_events"}, {"score": 0.0035749072875545223, "phrase": "original_hit-and-miss_approach"}, {"score": 0.003550315754252091, "phrase": "intermediate_step"}, {"score": 0.003535370650148043, "phrase": "practical_trick"}, {"score": 0.003516440240632687, "phrase": "hadronic_production_b-c_mesons"}, {"score": 0.0035053366187917105, "phrase": "color-flow_lines"}, {"score": 0.003497610839635964, "phrase": "maximum_differential"}, {"score": 0.0034922494884037816, "phrase": "reference_weight"}, {"score": 0.0034802163718851017, "phrase": "effective_differential_cross-section"}, {"score": 0.0034708858538508975, "phrase": "maximum_one"}, {"score": 0.0034536238353101295, "phrase": "generation_efficiency"}, {"score": 0.0034483296767181407, "phrase": "total_cross-section"}, {"score": 0.00342591958102799, "phrase": "cms_detector_simulation"}, {"score": 0.0034167341344809882, "phrase": "false_peak"}, {"score": 0.003395509611396988, "phrase": "color-flow_rearrangement_error"}, {"score": 0.003382831126798594, "phrase": "hit-and-miss_process"}, {"score": 0.0033608452592690475, "phrase": "effective_reference_weight"}, {"score": 0.003353119590328523, "phrase": "maximum_weight"}, {"score": 0.003344128677394965, "phrase": "larger_reference_weight"}, {"score": 0.0033185725319598153, "phrase": "spring-bases_program"}, {"score": 0.0033058675479787757, "phrase": "bases_subroutines"}, {"score": 0.003288161975049184, "phrase": "spring_subroutines"}, {"score": 0.00327557303368947, "phrase": "integration_result"}, {"score": 0.0032718057273399214, "phrase": "maximum_value"}, {"score": 0.003253033877106603, "phrase": "adaptive_mesh"}, {"score": 0.0032480462063859948, "phrase": "generation_stage"}, {"score": 0.003199814114373262, "phrase": "required_amount"}, {"score": 0.0031973600094082873, "phrase": "storage_space"}, {"score": 0.0031838959300778766, "phrase": "powheg_program"}, {"score": 0.0031729219131649273, "phrase": "new_method"}, {"score": 0.0031631988885866894, "phrase": "spring-bases_package"}, {"score": 0.003159560416440253, "phrase": "mint_package"}, {"score": 0.003131803712946217, "phrase": "integral_but_stores"}, {"score": 0.003129401604962778, "phrase": "upper_bound_value"}, {"score": 0.003122206295323337, "phrase": "multidimensional_stepwise_function"}, {"score": 0.003115927899294567, "phrase": "lhe_file"}, {"score": 0.003097152341316477, "phrase": "whole_function"}, {"score": 0.0030734777918413896, "phrase": "upper_bound_grid"}, {"score": 0.003059359748537541, "phrase": "hit-and-miss_technique"}, {"score": 0.0030441381517732798, "phrase": "original_distribution"}, {"score": 0.003027830091337134, "phrase": "ultimate_solution"}, {"score": 0.0030208676133652314, "phrase": "present_new_genxicc_version"}, {"score": 0.0030150777429582636, "phrase": "mint_algorithm"}, {"score": 0.002996624400986243, "phrase": "vegas_subroutine"}, {"score": 0.00298514828720856, "phrase": "original_vegas_subroutine"}, {"score": 0.0029782836626049995, "phrase": "integral_value"}, {"score": 0.0029714347767936366, "phrase": "ndim-dimensional_integration"}, {"score": 0.002964601593905665, "phrase": "upper_bounding_envelope"}, {"score": 0.0029071485088784607, "phrase": "common_block_parameter_vegsec"}, {"score": 0.0028904627970816952, "phrase": "bin_number"}, {"score": 0.0028322677364887618, "phrase": "calculated_integral_value"}, {"score": 0.0028192545600195565, "phrase": "specific_cell"}, {"score": 0.0027998465021098033, "phrase": "fixed_factor"}, {"score": 0.002789121876607587, "phrase": "sufficiently_large_number"}, {"score": 0.0027519072709922847, "phrase": "final_simulation"}, {"score": 0.002721447731447183, "phrase": "upper_bound_grid_xmax"}, {"score": 0.002702711161567962, "phrase": "existing_grid_file"}, {"score": 0.0026769013826803273, "phrase": "older_genxicc_versions"}, {"score": 0.0026656230931758804, "phrase": "previous_steps"}, {"score": 0.0026594912863252655, "phrase": "subroutine_gen"}, {"score": 0.0026462539218109335, "phrase": "gen_subroutine"}, {"score": 0.0026159564189891594, "phrase": "remaining_quark's_color-flow_line"}, {"score": 0.002584020336151987, "phrase": "color-singlet_bound_state"}, {"score": 0.00256918445455282, "phrase": "'cheating_method"}, {"score": 0.002565242588378171, "phrase": "obtained_information"}, {"score": 0.0025622901480274337, "phrase": "'tiny_jets"}, {"score": 0.002556395431542677, "phrase": "soft_anti-quark"}, {"score": 0.0025466009477158303, "phrase": "doubly_heavy_diquark"}, {"score": 0.0025368438946887085, "phrase": "experimental_analyzer"}, {"score": 0.002530036152663628, "phrase": "baryon_decay"}, {"score": 0.0025135788345867455, "phrase": "error_message"}, {"score": 0.002508758799925524, "phrase": "color-flow_rearrangement"}, {"score": 0.0025039479849528518, "phrase": "parton's_evolution_process"}, {"score": 0.00248670511920739, "phrase": "best_way"}, {"score": 0.002480983858514896, "phrase": "proper_treatment"}, {"score": 0.002459173736308557, "phrase": "peter_skands"}, {"score": 0.0024347775310932943, "phrase": "ref"}, {"score": 0.002423557867729372, "phrase": "external_generator's_lhe_files"}, {"score": 0.0024050198345837086, "phrase": "physics_implementation"}, {"score": 0.0024031738293584133, "phrase": "junction_fragmentation"}, {"score": 0.0023875397470376255, "phrase": "lhe_files"}, {"score": 0.0023629174333893986, "phrase": "file_pythialheinit"}, {"score": 0.0023511527570225783, "phrase": "heprup_common_block"}, {"score": 0.00234664345759587, "phrase": "incoming_beams"}, {"score": 0.0023439420204930763, "phrase": "allowed_processes"}, {"score": 0.0023412436859648854, "phrase": "optionally_stores"}, {"score": 0.0023295866685474702, "phrase": "event_information"}, {"score": 0.0023269048212855204, "phrase": "hepeup_common_block"}, {"score": 0.0023188777465065896, "phrase": "main_program_xicc"}, {"score": 0.0023082179386222893, "phrase": "color_information"}, {"score": 0.0022967249773610987, "phrase": "main_program"}, {"score": 0.002294080873870689, "phrase": "subroutine_upevnt"}, {"score": 0.002263456492977824, "phrase": "pythia_subroutine_pyevnt"}, {"score": 0.0022487293065552843, "phrase": "initial_and_final_state_parton_shower"}, {"score": 0.002236672851372712, "phrase": "baryon_information"}, {"score": 0.0022306688312851643, "phrase": "accompanying_partons"}, {"score": 0.002225535329123182, "phrase": "les_houches_common_block"}, {"score": 0.002196667347829284, "phrase": "baryon's_production"}, {"score": 0.0021665084016496043, "phrase": "configuration_file"}, {"score": 0.0021310262347182525, "phrase": "example_configuration_file"}, {"score": 0.0021253052033993734, "phrase": "full_baryon_production_and_decay_events"}, {"score": 0.00211797210620824, "phrase": "main_folder"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hadronic production", " Doubly heavy baryon"], "paper_abstract": "We present an improved version of GENXICC, which is a generator for hadronic production of the doubly heavy baryons Xi(cc), Xi(bc) and Xi(bb) and has been introduced by C.H. Chang, J.X. Wang and X.G. Wu [Comput Phys. Commun. 177 (2007) 467; Comput. Phys. Commun. 181 (2010) 1144]. In comparison with the previous GENXICC versions, we update the program in order to generate the unweighted baryon events more effectively under various simulation environments, whose distributions are now generated according to the probability proportional to the integrand. One Les Houches Event (LHE) common block has been added to produce a standard LHE data file that contains useful information of the doubly heavy baryon and its accompanying partons. Such LHE data can be conveniently imported into PYTHIA to do further hadronization and decay simulation, especially, the color-flow problem can be solved with PYTHIA8.0. NEW VERSION PROGRAM SUMMARY Title of program: GENXICC2.1 Program obtained from: CPC Program Library Reference to original program: GENXICC Reference in CPC: Comput. Phys. Commun. 177,467 (2007); Comput. Phys. Commun. 181, 1144 (2010) Does the new version supersede the old program: No Computer: Any LINUX based on PC with FORTRAN 77 or FORTRAN 90 and GNU C compiler as well Operating systems: LINUX Programming language used: FORTRAN 77/90 Memory required to execute with typical data: About 2.0 MB No. of bytes in distributed program: About 2 MB, including PYTHIA6.4 Distribution format: .tar.gz Nature of physical problem: Hadronic production of doubly heavy baryons Xi(cc), Xi(bc) and Xi(bb). Method of solution: The upgraded version with a proper interface to PYTHIA can generate full production and decay events, either weighted or unweighted, conveniently and effectively. Especially, the unweighted events are generated by using an improved hit-and-miss approach. Reasons for new version: Responding to the feedback from users of CMS and LHCb groups at the Large Hadron Collider, and based on the recent improvements of PYTHIA on the color-flow problem, we improve the efficiency for generating the unweighted events, and also improve the color-flow part for further hadronization. Especially, an interface has been added to import the output production events into a suitable form for PYTHIA8.0 simulation, in which the color-flow during the simulation can be correctly set. Typical running time: It depends on which option is chosen to match PYTHIA when generating the full events and also on which mechanism is chosen to generate the events. Typically, for the dominant gluon-gluon fusion mechanism to generate the mixed events via the intermediate diquarks in (cc) [S-3(1)](3)(-) and (cc)[S-1(0)](6) states, setting IDWTUP = 3 and unwght = .true., it takes 30 min to generate 10(5) unweighted events on a 2.27 GHz Intel Xeon E5520 processor machine; setting IDWTUP = 3 and unwght = .false. or 1DWTUP = 1 and IGENERATE = 0, it only needs 2 min to generate the 10(5) baryon events (the fastest way, for theoretical purposes only). As a comparison, for previous GENXICC versions, if setting IDWTUP = 1 and IGENERATE = 1, it takes about 22 hours to generate 1000 unweighted events. Keywords: Event generator; Doubly heavy baryons; Hadronic production. Summary of the changes (improvements): (1) The scheme for generating unweighted events has been improved; (2) One Les Houches Event (LHE) common block has been added to record the standard LHE data in order to be the correct input for PYTHIA8.0 for later simulation; (3) We present the code for connecting GENXICC to PYTHIA8.0, where three color-flows have to be correctly set for later simulation. More specifically, we present the changes together with their detailed explanations in the following: Unweighted events generation. For theoretical studies, e.g. to derive the total baryon production cross-section or various differential distributions, one can directly use the fastest way, e.g. setting the PYTHIA parameter IDWTUP = 3 and unwght = .false. or setting IDWTUP = 1 and IGENERATE = 0 (in these cases, xmaxup should be set as 0), to generate the baryon events [1]. By using GENXICC [2,3] in this way, some interesting properties for hadronic production of Xi(cc), Xi(bc) and Xi(bb) have been found in the literature, cf. Refs. [4-6]. While, for the events simulation in detector conditions, it is necessary to get the unweighted events. In previous GENXICC versions, the unweighted events are generated by setting IDWGTUP = 1 and IGENERATE = 1; i.e., the events are generated according to PYTHIA's inner mechanism, the so-called hit-and-miss approach (von Neumann algorithm), to reject those unsatisfied events and output the allowed events. But, as is well-known, the original hit-and-miss approach is really time-consuming. Some alterations must be made to improve its efficiency. As an intermediate step, in BCVEGPY2.1a [7] we have suggested a practical trick to increase the efficiency of generating unweighted events (BCVEGPY is a generator for hadronic production B-c mesons [8]). In this trick, other than choosing the maximum differential cross-section as a reference weight in the hit-and-miss approach, we directly select an effective differential cross-section, which is smaller than the maximum one, as the reference weight[7]. This treatment can greatly improve the generation efficiency without affecting the total cross-section of the process. However, in using this trick to generate unweighted events such as for CMS detector simulation, one will incidentally find a false peak in the B-c-p(t) distributions. This is caused by the fact that sometimes the same event will be stored a (false) large number of times in the hit-and-miss process. Then, we are facing a dilemma: such a false peak can be avoided by raising the effective reference weight to a value approaching the maximum weight, but, conversely, a larger reference weight will surely lead to a much longer running time. One observes that by using the VEGAS algorithm [9], the SPRING-BASES program [10] performs the integration in using the BASES subroutines and generates events with a probability proportional to the integrand in using the SPRING subroutines. After each iteration of VEGAS running, the integration result and the maximum value of the function will be stored in a file for each cell of the adaptive mesh. In the generation stage, a cell is chosen with a probability proportional to the corresponding integral, and then a point in the cell is generated using the hit-and-miss approach. This method is highly efficient, but it has the disadvantage that the required amount of storage space grows exponentially with the integration dimension. Next, in the POWHEG program [11] the authors have developed a new method MINT [12] to replace the SPRING-BASES package. This MINT package also use the VEGAS algorithm to perform the integration. What's different is that it does not store the value of the integral but stores the upper bound value for each cell. The multidimensional stepwise function that equals the upper bound of the function to be integrated in each cell is in fact an upper bound for the whole function, which is the wanted upper bound for BCVEGPY2.1a or PYTHIA. So, the program is to find the upper bound grid for those cells. And next, by using again the hit-and-miss technique in each cell, one can generate the points according to the original distribution. Based on these methods, as a further improvement, we present an ultimate solution to generate unweighted events in the present new GENXICC version. We adopt the MINT algorithm but with certain alterations to do the simulation. For this purpose, we change the VEGAS subroutine as follows. Three new variables have been added in the original VEGAS subroutine, where xint is the integral value for the integrand fxn after a ndim-dimensional integration, the xmax array records the upper bounding envelope of the integrand in all cells, imode is a flag: vegas (fxn, ndim, ncall, itmx, nprn, xint, xmax, imode) - When called with imode=0, vegas performs the integration over the integrand fxn, and stores the answer in a common block parameter vegsec. - xmax stands for a (nvegbin,ndim) dimensional array, where nvegbin denotes the bin number for each coordinate, and ndim stands for the integration dimension. When called with imode=1, vegas will first initialize all the elements of x:max to be xint(1/ndim), where xint equals the value of vegsec that has been derived from a previous VEGAS running with imode=0. During the following sampling iteration, when the calculated integral value is larger than the initial xmax(nvegbin,ndim) value in a specific cell, then the value of xmax(nvegbin,ndim) for this cell will be increased by a fixed factor f = 1 + 1/10 ndim. After a sufficiently large number of calls, the values of xmax(nvegbin,ndim) will be stabilized for all cells. Such a final xmax array will be stored in the same grid file as that of the importance sampling function in order to do the final simulation. Comparing to the previous GENXICC versions, in doing the initialization (subroutine evntinit), we will call vegas twice with imode=0 and imode=1 accordingly to generate the upper bound grid xmax and also a more precise importance sampling function. Practically, the user can directly use the existing grid file derived by previous VEGAS running to generate events by setting methodevnt=2 or methodevnt=3 without running VEGAS again, which is the same as in the older GENXICC versions. Once the xmax array has been set up in the previous steps, one can call the subroutine gen to generate events. For this purpose, three options for calling the gen subroutine are programmed: jmode=0 call gen(fxn,ndim,xmax,jmode) - Secondly, such an anti-color-flow line obtained by the combination may be continued (connected) to the remaining quark's color-flow line in the baryon; - Finally, as a consequence, the color-flow lines ending at a baryon become joined without ends' at all, which is the requirement of the color-singlet bound state. However we should point out that due to approximation and simplification with the 'cheating method', the obtained information about the 'tiny jets', corresponding to the soft anti-quark and soft gluon(s) produced in fragmentation of the doubly heavy diquark, may not be very reliable. When the experimental analyzer uses the generator to simulate the baryon decay and other parton hardronization, they are still facing the color-flow rearrangement error; sometimes, PYTHIA will present an error message to show that the color-flow rearrangement is wrong during the parton's evolution process, and then it will stop running. To generate full events of the doubly heavy baryons smoothly, the best way is to improve PYTHIA with proper treatment of the color-flow lines ending at the baryon. Fortunately, such an improvement has been done in its newest version PYTHIA8.0. Based on the suggestion from Peter Skands, we find that the further event simulation can be implemented in PYTHIA8.0 correctly even with the previously generated Les Houches Event (LHE) files [15]. As has been described in Ref. [16], the read-in of an external generator's LHE files generated by PYTHIA6.4 is simply technically less sophisticated and less able to deal with junctions, even though the physics implementation of junction fragmentation is in principle the same. As a solution, PYTHIA8.0 improves the treatment of these LHE files. We adopt the same trick as that of BCVEGPY2.1a [7] to generate and record the data; i.e. two sub-routines have been introduced in the file pythialheinit.F. One of the subroutine XICC_PYUPIN is used to fill the HEPRUP common block with information on the incoming beams and the allowed processes, and optionally stores that information on file. Another subroutine XICC_WRITE_LHE is used to store event information in the HEPEUP common block. And these two subroutines are called by the main program xicc.F to generate the LHE file that records the momentum and color information for the events [17]. More specifically, in the main program, the subroutine UPEVNT will be called for generating the baryon events, which is used to call the program to generate the baryon with a probability proportional to the importance sampling function. Here, one can also use the PYTHIA subroutine PYEVNT for the purpose, but one should at the same time switch off the hadronization, the initial and final state parton shower and so on, in order to avoid the color-flow rearrangement error. That generated baryon information together with the information of the accompanying partons will be stored in the Les Houches common block and will be exported to a LHE file \"GENXICC.Ihe\". And then, such a LHE file can be used when necessary by PYTHIA8.0 to do the following simulations. Here, to successfully simulate the baryon's production and decay, the user needs to install PYTHIA8 [15] following the instructions on its official web-site: http://home.thep.lu.se/similar to torbjorn/Pythia.html. For using our generator, the user can use the following command to compile the configuration file, g++ -02 -ansi -pedantic -W -Wall -Wshadow -I$ (PYTHIA8)/include genxicc. cc -o bin/genxi cc. exe -L$ (PYTHIA8)/lib/archive -lpythia8 -11hapdf dummy where $ (PYTHIA8) stands for the PYTHIA8.0 installation directory. For convenience, we put an example configuration file in the package for generating the full baryon production and decay events in PYTHIA8.0, which is placed in the main folder of the program and is named as \"genxicc.cc\". (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "GENXICC2.1: An improved version of GENXICC for hadronic production of doubly heavy baryons", "paper_id": "WOS:000315125500054"}