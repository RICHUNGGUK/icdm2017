{"auto_keywords": [{"score": 0.04969652007027205, "phrase": "dynamic_optimization_problems"}, {"score": 0.010612387000973441, "phrase": "external_archive"}, {"score": 0.0052497973959472165, "phrase": "proposed_algorithm"}, {"score": 0.004700468701207975, "phrase": "great_challenges"}, {"score": 0.004644247838681628, "phrase": "research_community"}, {"score": 0.00440825801245188, "phrase": "ongoing_optimization_process"}, {"score": 0.00426900754050533, "phrase": "static_problems"}, {"score": 0.004234884779773412, "phrase": "real-world_applications"}, {"score": 0.003769567397860168, "phrase": "real_world"}, {"score": 0.003739421738326676, "phrase": "proposed_solutions"}, {"score": 0.003592258384936271, "phrase": "optimal_point"}, {"score": 0.0035067452724203124, "phrase": "landscape_solutions"}, {"score": 0.00340954056723008, "phrase": "multi-population_harmony_search_algorithm"}, {"score": 0.00328849874768242, "phrase": "harmony_search_algorithm"}, {"score": 0.0032491108935498794, "phrase": "population-based_meta-heuristic_optimization_technique"}, {"score": 0.002711714675297321, "phrase": "search_space"}, {"score": 0.0026577673946415583, "phrase": "algorithm_performance"}, {"score": 0.002553063001454623, "phrase": "best_solutions"}, {"score": 0.0025326211341475903, "phrase": "later_use"}, {"score": 0.002432834929068545, "phrase": "redundant_solutions"}, {"score": 0.0024036710362692042, "phrase": "harmony_memory"}, {"score": 0.0023182554418193927, "phrase": "empirical_results"}, {"score": 0.0022630008787375435, "phrase": "better_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Multi-population", " Harmony search algorithm", " Dynamic optimization problems", " External archive"], "paper_abstract": "Dynamic optimization problems present great challenges to the research community because their parameters are either revealed or changed during the course of an ongoing optimization process. These problems are more challenging than static problems in real-world applications because the latter are usually dynamic, with the environment constantly subjected to change or the size of a problem increasing sporadically. In solving dynamic optimization problems in the real world, proposed solutions should be able to monitor the movement of the optimal point and the changes in the landscape solutions. In this paper, a multi-population harmony search algorithm with external archive for dynamic optimization problems is proposed. Harmony search algorithm is a population-based meta-heuristic optimization technique that is similar to a musical process when a musician is attempting to find a state of harmony. To tackle the problem of dynamism, the population of solutions is divided into several sub-populations such that each sub-population takes charge exploring or exploiting the search space. To enhance the algorithm performance further, an external archive is used to save the best solutions for later use. These solutions will then be used to replace redundant solutions in the harmony memory. The proposed algorithm is tested on the Moving Peak Benchmark. Empirical results show that the proposed algorithm produces better results than several of the current state-of-the-art algorithms. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A multi-population harmony search algorithm with external archive for dynamic optimization problems", "paper_id": "WOS:000336463100006"}