{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "chip_yield"}, {"score": 0.004068302313449334, "phrase": "postrouting_stage"}, {"score": 0.003939748053452577, "phrase": "single_via"}, {"score": 0.0032231139180761183, "phrase": "dvi_problem"}, {"score": 0.0030468495296763617, "phrase": "zero-one_integer_linear_program"}, {"score": 0.0028115863316685937, "phrase": "acceleration_methods"}, {"score": 0.002722634472231842, "phrase": "problem_size"}, {"score": 0.0023940274498526213, "phrase": "density_constraints"}, {"score": 0.0023558375480288297, "phrase": "experimental_results"}, {"score": 0.0021391300942881, "phrase": "optimal_dvi_solution"}], "paper_keywords": ["Integer linear program (ILP)", " redundant via insertion", " via density"], "paper_abstract": "Redundant via insertion is highly effective in improving chip yield and reliability. In this paper, we study the problem of double-cut via insertion (DVI) in a postrouting stage, where a single via can have, at most, one redundant via inserted next to it and the goal is to insert as many redundant vias as possible. The DVI problem can be naturally formulated as a zero-one integer linear program (0-1 ILP). Our main contributions are acceleration methods for reducing the problem size and the number of constraints. Moreover, we extend the 0-1 ILP formulation to handle via density constraints. Experimental results show that our 0-1 ILP is very efficient in computing an optimal DVI solution with up to 73.98 times speedup over existing heuristic algorithms.", "paper_title": "Fast and Optimal Redundant Via Insertion", "paper_id": "WOS:000261310800009"}