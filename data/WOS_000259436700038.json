{"auto_keywords": [{"score": 0.028750577574613766, "phrase": "haskell"}, {"score": 0.00481495049065317, "phrase": "functional_pipelines"}, {"score": 0.004739773204474094, "phrase": "scientific_visualization"}, {"score": 0.00438105507792004, "phrase": "pipeline_model"}, {"score": 0.004278807087784626, "phrase": "widely-used_implementation_strategy"}, {"score": 0.003923815926819606, "phrase": "processing_stages"}, {"score": 0.003742711659195878, "phrase": "demand-driven_networks"}, {"score": 0.003626626504149897, "phrase": "apparent_parallels"}, {"score": 0.0035699363258657212, "phrase": "functional_programming"}, {"score": 0.003378385493203297, "phrase": "e._g."}, {"score": 0.0030494153169181334, "phrase": "lazy_evaluation"}, {"score": 0.0029781530607129653, "phrase": "almost_all_visualization_systems"}, {"score": 0.0028857130140890787, "phrase": "imperative_languages"}, {"score": 0.0025237171554924128, "phrase": "encouraging_results"}, {"score": 0.002407078478216306, "phrase": "novel_insight"}], "paper_keywords": ["algorithms", " measurement", " performance", " Haskell", " visualization", " pipeline", " streaming", " evaluation"], "paper_abstract": "Scientific visualization is the transformation of data into images. The pipeline model is a widely-used implementation strategy. This term refers not only to linear chains of processing stages, but more generally to demand-driven networks of components. Apparent parallels with functional programming are more than super superficial: e. g. some pipelines support streams of data, and a limited form of lazy evaluation. Yet almost all visualization systems are implemented in imperative languages. We challenge this position. Using Haskell, we ha have reconstructed several fundamental visualization techniques, with encouraging results both in terms of no novel insight and performance. In this paper we set the context for our modest rebellion, report some of our results, and reflect on the lessons that we ha have learned.", "paper_title": "Experience report: Visualizing data through functional pipelines", "paper_id": "WOS:000259436700038"}