{"auto_keywords": [{"score": 0.03579325014887772, "phrase": "choice_calculus"}, {"score": 0.00481495049065317, "phrase": "software_variation_research"}, {"score": 0.004490212943845175, "phrase": "important_problem"}, {"score": 0.004386887374401584, "phrase": "software_engineering"}, {"score": 0.004236321075918639, "phrase": "different_forms"}, {"score": 0.004043541331944951, "phrase": "version_control"}, {"score": 0.003950453462399077, "phrase": "configuration_management"}, {"score": 0.003859500298805362, "phrase": "software_product_lines"}, {"score": 0.0031660031870090434, "phrase": "software_variation"}, {"score": 0.002952146666681891, "phrase": "common_language"}, {"score": 0.002817639725689939, "phrase": "variation_research"}, {"score": 0.0025967927629150715, "phrase": "lambda_calculus"}, {"score": 0.002536926192232391, "phrase": "programming_language_research"}], "paper_keywords": ["Languages", " Theory"], "paper_abstract": "Managing variation is an important problem in software engineering that takes different forms, ranging from version control and configuration management to software product lines. In this paper, I present our recent work on the choice calculus, a fundamental representation for software variation that can serve as a common language of discourse for variation research, filling a role similar to lambda calculus in programming language research. After motivating the design of the choice calculus and sketching its semantics, I will discuss several potential application areas.", "paper_title": "A Language for Software Variation Research", "paper_id": "WOS:000287306700002"}