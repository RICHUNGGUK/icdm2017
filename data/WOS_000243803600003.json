{"auto_keywords": [{"score": 0.04308224514921984, "phrase": "aqua"}, {"score": 0.007270395064192368, "phrase": "existing_analogy-based_methods"}, {"score": 0.007112649270755758, "phrase": "non-quantitative_data"}, {"score": 0.005246612044399581, "phrase": "missing_values"}, {"score": 0.00481495049065317, "phrase": "software_effort"}, {"score": 0.00469545352928726, "phrase": "analogy_uses"}, {"score": 0.004651407155355244, "phrase": "former_similar_projects"}, {"score": 0.004550225097519697, "phrase": "new_project"}, {"score": 0.004345343110819355, "phrase": "best_accuracy"}, {"score": 0.0041408296624638125, "phrase": "new_flexible_method"}, {"score": 0.0040000913037139115, "phrase": "former_methods"}, {"score": 0.003594507685403249, "phrase": "project_levels"}, {"score": 0.0035384237846107793, "phrase": "main_contributions"}, {"score": 0.0033753504302443346, "phrase": "similarity_measures"}, {"score": 0.003354180941665089, "phrase": "different_data_types"}, {"score": 0.003179500862953224, "phrase": "explorative_study"}, {"score": 0.0031102371319399946, "phrase": "prediction_accuracy"}, {"score": 0.0029482236540308952, "phrase": "threshold_t"}, {"score": 0.002838954179574289, "phrase": "larger_data_sets"}, {"score": 0.00281227375628713, "phrase": "fixed_and_small_number"}, {"score": 0.002640682934273318, "phrase": "flexible_mechanism"}, {"score": 0.002599442416948628, "phrase": "existing_data"}, {"score": 0.0025508009063318227, "phrase": "appropriate_values"}, {"score": 0.0024485031231407522, "phrase": "new_criteria"}, {"score": 0.0022702776603245036, "phrase": "obtained_results"}, {"score": 0.0022207767448896515, "phrase": "acomparative_analysis"}, {"score": 0.0022068324655021396, "phrase": "existing_analogy-based_estimation_methods"}], "paper_keywords": ["software development effort", " analogy-based effort estimation", " learning", " comparative analysis", " non-quantitative attributes", " missing values"], "paper_abstract": "Effort estimation by analogy uses information from former similar projects to predict the effort for a new project. Existing analogy-based methods are limited by their inability to handle non-quantitative data and missing values. The accuracy of predictions needs improvement as well. In this paper, we propose a new flexible method called AQUA that is able to overcome the limitations of former methods. AQUA combines ideas from two known analogy-based estimation techniques: case-based reasoning and collaborative filtering. The method is applicable to predict effort related to any object at the requirement, feature, or project levels. Which are the main contributions of AQUA when compared to other methods? First, AQUA supports non-quantitative data by defining similarity measures for different data types. Second, it is able to tolerate missing values. Third, the results from an explorative study in this paper shows that the prediction accuracy is sensitive to both the number N of analogies (similar objects) taken for adaptation and the threshold T for the degree of similarity, which is true especially for larger data sets. A fixed and small number of analogies, as assumed in existing analogy-based methods, may not produce the best accuracy of prediction. Fourth, a flexible mechanism based on learning of existing data is proposed for determining the appropriate values of N and T likely to offer the best accuracy of prediction. New criteria to measure the quality of prediction are proposed. AQUA was validated against two internal and one public domain data sets with non-quantitative attributes and missing values. The obtained results are encouraging. In addition, acomparative analysis with existing analogy-based estimation methods was conducted using three publicly available data sets that were used by these methods. Intwo of the three cases, AQUA outperformed all other methods.", "paper_title": "A flexible method for software effort estimation by analogy", "paper_id": "WOS:000243803600003"}