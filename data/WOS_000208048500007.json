{"auto_keywords": [{"score": 0.04483027936171083, "phrase": "partition_function"}, {"score": 0.00481495049065317, "phrase": "weighted_boolean"}, {"score": 0.0045443671106012405, "phrase": "dichotomy_theorem"}, {"score": 0.004081385289516914, "phrase": "weighted_boolean_constraint_satisfaction_problem"}, {"score": 0.003820144626025562, "phrase": "finite_set"}, {"score": 0.003726533059542558, "phrase": "nonnegative_functions"}, {"score": 0.0032376465741070274, "phrase": "problem_instance"}, {"score": 0.0031845067058084583, "phrase": "classical_constraint_satisfaction_problems"}, {"score": 0.0030808211830129304, "phrase": "special_case"}, {"score": 0.002363806685815014, "phrase": "\"product_type"}, {"score": 0.0021940118003312397, "phrase": "pure_affine"}, {"score": 0.0021049977753042253, "phrase": "remaining_cases"}], "paper_keywords": ["complexity theory", " counting", " #P", " constraint satisfaction"], "paper_abstract": "This paper gives a dichotomy theorem for the complexity of computing the partition function of an instance of a weighted Boolean constraint satisfaction problem. The problem is parameterized by a finite set F of nonnegative functions that may be used to assign weights to the configurations (feasible solutions) of a problem instance. Classical constraint satisfaction problems correspond to the special case of 0,1-valued functions. We show that computing the partition function, i.e., the sum of the weights of all configurations, is FP#P-complete unless either (1) every function in F is of \"product type,\" or (2) every function in F is \"pure affine.\" In the remaining cases, computing the partition function is in P.", "paper_title": "THE COMPLEXITY OF WEIGHTED BOOLEAN #CSP", "paper_id": "WOS:000208048500007"}