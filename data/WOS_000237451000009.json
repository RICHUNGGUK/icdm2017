{"auto_keywords": [{"score": 0.03796568354240065, "phrase": "rose"}, {"score": 0.012509688667567855, "phrase": "testing_research_community"}, {"score": 0.00481495049065317, "phrase": "critical_part"}, {"score": 0.004746065479362881, "phrase": "development_process"}, {"score": 0.0047006879240764935, "phrase": "large-scale_software"}, {"score": 0.004523455475492876, "phrase": "automated_tools"}, {"score": 0.004270003565426343, "phrase": "application's_source_code"}, {"score": 0.004168618849008299, "phrase": "testing_tasks"}, {"score": 0.003934970057482768, "phrase": "common_general_purpose_languages"}, {"score": 0.0034725269588525534, "phrase": "lawrence_livermore_national_laboratory"}, {"score": 0.0033094525227603012, "phrase": "source-based_tools"}, {"score": 0.003262035294895737, "phrase": "customized_analyses"}, {"score": 0.003199864072042816, "phrase": "large-scale_c"}, {"score": 0.003108814986752103, "phrase": "scientific_computing_applications"}, {"score": 0.0030058503645435455, "phrase": "million_lines"}, {"score": 0.0025521085778978042, "phrase": "formal_compiler_background"}, {"score": 0.00236289633510808, "phrase": "compiler_technology"}, {"score": 0.002219516542316085, "phrase": "particular_aspects"}, {"score": 0.002125371638869951, "phrase": "general_analysis"}, {"score": 0.0021049977753042253, "phrase": "whole_programs"}], "paper_keywords": [""], "paper_abstract": "Testing forms a critical part of the development process for large-scale software, and there is growing need for automated tools that can read, represent, analyze, and transform the application's source code to help carry out testing tasks. However, the support required to compile applications written in common general purpose languages is generally inaccessible to the testing research community. In this paper, we report on an extensible, open-source compiler infrastructure called ROSE, which is currently in development at Lawrence Livermore National Laboratory. ROSE specifically targets developers who wish to build source-based tools that implement customized analyses and optimizations for large-scale C, C++, and Fortran90 scientific computing applications (on the order of a million lines of code or more). However, much of this infrastructure can also be used to address problems in testing, and ROSE is by design broadly accessible to those without a formal compiler background. This paper details the interactions between testing of applications and the ways in which compiler technology can aid in the understanding of those applications. We emphasize the particular aspects of ROSE, such as support for the general analysis of whole programs, that are particularly well-suited to the testing research community and the scale of the problems that community solves.", "paper_title": "An extensible open-source compiler infrastructure for testing", "paper_id": "WOS:000237451000009"}