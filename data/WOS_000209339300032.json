{"auto_keywords": [{"score": 0.02878639929706532, "phrase": "new_interface"}, {"score": 0.010709201356143762, "phrase": "file_system"}, {"score": 0.00481495049065317, "phrase": "non-volatile_memories"}, {"score": 0.004502943680955863, "phrase": "storage_access_latencies"}, {"score": 0.004370814742381778, "phrase": "state-of-the-art_flash-based_ssds"}, {"score": 0.004118026552723285, "phrase": "flash-based_systems"}, {"score": 0.004072275820209647, "phrase": "serious_bottlenecks"}, {"score": 0.0039822874870125095, "phrase": "new_technologies"}, {"score": 0.0039088121438737924, "phrase": "novel_storage_hardware"}, {"score": 0.0038798015183611275, "phrase": "software_architecture"}, {"score": 0.0036826452656927877, "phrase": "file_system_permission_checks"}, {"score": 0.003641713874009232, "phrase": "new_architecture"}, {"score": 0.003508521802236789, "phrase": "system_protection_checks"}, {"score": 0.003367611042980526, "phrase": "file_data"}, {"score": 0.0033301694494391612, "phrase": "system_intervention"}, {"score": 0.003102488033561956, "phrase": "fast_permission_checks"}, {"score": 0.0028053842615436706, "phrase": "new_access_model"}, {"score": 0.002784540221128404, "phrase": "existing_applications"}, {"score": 0.0025652026679268713, "phrase": "database_workloads"}, {"score": 0.0023807981747706376, "phrase": "oltp_database_transaction_throughput"}, {"score": 0.002319431279824863, "phrase": "berkeley-db_throughput"}, {"score": 0.002259642580775186, "phrase": "streamlined_asynchronous_file_io_interface"}], "paper_keywords": ["Design", " Measurement", " Performance", " File Systems", " IO Performance", " Non-Volatile Memory", " Storage Systems", " Virtualization"], "paper_abstract": "Emerging fast, non-volatile memories (e.g., phase change memories, spin-torque MRAMs, and the memristor) reduce storage access latencies by an order of magnitude compared to state-of-the-art flash-based SSDs. This improved performance means that software overheads that had little impact on the performance of flash-based systems can present serious bottlenecks in systems that incorporate these new technologies. We describe a novel storage hardware and software architecture that nearly eliminates two sources of this overhead: Entering the kernel and performing file system permission checks. The new architecture provides a private, virtualized interface for each process and moves file system protection checks into hardware. As a result, applications can access file data without operating system intervention, eliminating OS and file system costs entirely for most accesses. We describe the support the system provides for fast permission checks in hardware, our approach to notifying applications when requests complete, and the small, easily portable changes required in the file system to support the new access model. Existing applications require no modification to use the new interface. We evaluate the performance of the system using a suite of microbenchmarks and database workloads and show that the new interface improves latency and bandwidth for 4 KB writes by 60% and 7.2x, respectively, OLTP database transaction throughput by up to 2.0x, and Berkeley-DB throughput by up to 5.7x. A streamlined asynchronous file IO interface built to fully utilize the new interface enables an additional 5.5x increase in throughput with 1 thread and 2.8x increase in efficiency for 512 B transfers.", "paper_title": "Providing Safe, User Space Access to Fast, Solid State Disks", "paper_id": "WOS:000209339300032"}