{"auto_keywords": [{"score": 0.03098408925965231, "phrase": "mcgas"}, {"score": 0.010612387000973441, "phrase": "parallel_task_graphs"}, {"score": 0.010017843540264247, "phrase": "task_parallelism"}, {"score": 0.006279211066704473, "phrase": "multicluster_platforms"}, {"score": 0.004308455856718928, "phrase": "parallel_platforms"}, {"score": 0.004225950334493496, "phrase": "long-standing_challenge"}, {"score": 0.004085333687668526, "phrase": "single_homogeneous_platform"}, {"score": 0.003334309053314909, "phrase": "distributed_platforms"}, {"score": 0.00328625950643742, "phrase": "multiple_clusters"}, {"score": 0.0032389001343643064, "phrase": "multiple_institutions"}, {"score": 0.0030858947334838145, "phrase": "nonguaranteed_heuristics"}, {"score": 0.002954361295811154, "phrase": "scheduling_algorithm"}, {"score": 0.00269475174341129, "phrase": "large_subsets"}, {"score": 0.002579847272930948, "phrase": "task_allocations"}, {"score": 0.002446024708601971, "phrase": "performance_guarantee"}, {"score": 0.002387507583705495, "phrase": "good_average_performance"}, {"score": 0.002274630121183437, "phrase": "recently_proposed_nonguaranteed_algorithm"}, {"score": 0.0022094759531152072, "phrase": "wide_range"}, {"score": 0.0021881743793875767, "phrase": "experimental_scenarios"}, {"score": 0.0021049977753042253, "phrase": "better_average_application_makespans"}], "paper_keywords": ["Mixed parallelism", " parallel task graph scheduling", " performance guarantee", " multicluster platform"], "paper_abstract": "Applications structured as parallel task graphs exhibit both data and task parallelism and arise in many domains. Scheduling these applications efficiently on parallel platforms has been a long-standing challenge. In the case of a single homogeneous platform, such as a cluster, results have been obtained both in theory, i.e., guaranteed algorithms, and, in practice, i.e., pragmatic heuristics. Due to task parallelism, these applications are well suited for execution on distributed platforms that span multiple clusters possibly in multiple institutions. However, the only available results in this context are nonguaranteed heuristics. In this paper, we develop a scheduling algorithm, MCGAS, which is applicable to multicluster platforms that are almost homogeneous. Such platforms are often found as large subsets of multicluster platforms. Our novel contribution is that MCGAS computes task allocations so that a (tunable) performance guarantee is provided. Since a performance guarantee does not necessarily imply good average performance in practice, we also compare MCGAS with a recently proposed nonguaranteed algorithm. Using simulation over a wide range of experimental scenarios, we find that MCGAS leads to better average application makespans than its competitor.", "paper_title": "Scheduling Parallel Task Graphs on (Almost) Homogeneous Multicluster Platforms", "paper_id": "WOS:000266359700003"}