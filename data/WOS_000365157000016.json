{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "context-aware_access_control"}, {"score": 0.010167137045409334, "phrase": "access_control"}, {"score": 0.008442008589177267, "phrase": "context_information"}, {"score": 0.007691654100547919, "phrase": "context-aware_access_control_decisions"}, {"score": 0.005773772166920702, "phrase": "context_model"}, {"score": 0.00471228691115201, "phrase": "modern_communication_environments"}, {"score": 0.004578783486828809, "phrase": "information_resources"}, {"score": 0.004546000131069232, "phrase": "software_services"}, {"score": 0.004497262692458022, "phrase": "context-aware_manner"}, {"score": 0.004385555408850022, "phrase": "dynamically_changing_context_information"}, {"score": 0.004307459965946991, "phrase": "context-specific_control"}, {"score": 0.004140490129683107, "phrase": "security_and_privacy_requirements"}, {"score": 0.004066740842661956, "phrase": "existing_access_control_approaches"}, {"score": 0.003853251284913932, "phrase": "specific_types"}, {"score": 0.003677280504320636, "phrase": "key_limitations"}, {"score": 0.003637822529522622, "phrase": "existing_approaches"}, {"score": 0.0035729944980593324, "phrase": "systematic_capture"}, {"score": 0.0034343965063429447, "phrase": "new_access_control_approaches"}, {"score": 0.002900090135006575, "phrase": "generic_framework"}, {"score": 0.0028793534495093697, "phrase": "ontology"}, {"score": 0.002797572252783356, "phrase": "semantic_technologies"}, {"score": 0.0027675275077806744, "phrase": "dynamic_contexts"}, {"score": 0.002747676657869163, "phrase": "corresponding_access_control_policies"}, {"score": 0.002708399936381754, "phrase": "acontext_model"}, {"score": 0.0026410082462069596, "phrase": "relevant_context_information"}, {"score": 0.0025476254812544135, "phrase": "high-level_implicit_context_information"}, {"score": 0.0025202582748972122, "phrase": "operator-defined_rules"}, {"score": 0.00245753647863636, "phrase": "policy_model"}, {"score": 0.0024311346712789553, "phrase": "ontcaac_framework"}, {"score": 0.002370625627299064, "phrase": "context-aware_access_control_policies"}, {"score": 0.0023199580436336163, "phrase": "prototype_implementation"}, {"score": 0.002190064650401852, "phrase": "different_domains"}, {"score": 0.002174346780014853, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "performance_overhead"}], "paper_keywords": ["context-awareness", " context information", " high-level context", " context model", " context-aware access permission", " policy model", " context-aware access control"], "paper_abstract": "In modern communication environments, the ability to provide access control to information resources and software services in a context-aware manner is crucial. By leveraging the dynamically changing context information, we can achieve context-specific control over access to such resources and services, better satisfying the security and privacy requirements of the stakeholders. Existing access control approaches are highly domain-specific and they control access to services depending on the specific types of context information (e.g. location and time). One of the key limitations of the existing approaches is the lack of systematic capture and use of context information in making context-aware access control decisions. Therefore, new access control approaches are required for such dynamic and context-aware environments. Existing approaches define context as the state/situation of the entities. To achieve context-aware access control, in this paper we not only consider the states of the entities but also consider the states of the relationships between entities. We introduce a generic framework, Ontology-based Context-Aware Access Control), that adopts semantic technologies in modelling dynamic contexts and corresponding access control policies. It includes acontext model specific to access control, capturing the relevant context information. The context model also incorporates the ability to infer high-level implicit context information according to operator-defined rules. Using the context model, the policy model of the OntCAAC framework provides support for specifying and enforcing context-aware access control policies. We have developed a prototype implementation of the framework and have demonstrated its use in making context-aware access control decisions through two case studies from different domains. Experimental results show the feasibility of our approach and quantify the performance overhead of providing context-aware access control for software services.", "paper_title": "OntCAAC: An Ontology-Based Approach to Context-Aware Access Control for Software Services", "paper_id": "WOS:000365157000016"}