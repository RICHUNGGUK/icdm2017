{"auto_keywords": [{"score": 0.040311165065088146, "phrase": "monte-carlo_tree_search"}, {"score": 0.014423369262963798, "phrase": "genetic_programming"}, {"score": 0.00481495049065317, "phrase": "monte-carlo_expression_discovery._monte-carlo_tree_search"}, {"score": 0.004690952711665194, "phrase": "general_search_algorithm"}, {"score": 0.00457013354092966, "phrase": "good_results"}, {"score": 0.0031431690368229443, "phrase": "expression_trees"}, {"score": 0.002906138793910919, "phrase": "nested_monte-carlo_search"}, {"score": 0.002831158147480665, "phrase": "upper_confidence_bounds"}, {"score": 0.0025500402081330394, "phrase": "art_results"}, {"score": 0.0025059724686541263, "phrase": "multiple_benchmark_problems"}, {"score": 0.0024412911465483225, "phrase": "proposed_approach"}, {"score": 0.002237477619351199, "phrase": "expression_growth"}, {"score": 0.0021607883988873492, "phrase": "natural_restart_strategy"}, {"score": 0.0021049977753042253, "phrase": "local_optima"}], "paper_keywords": ["Monte-Carlo tree search", " expression discovery", " nested Monte-Carlo search", " UCT"], "paper_abstract": "Monte-Carlo Tree Search is a general search algorithm that gives good results in games. Genetic Programming evaluates and combines trees to discover expressions that maximize a given fitness function. In this paper Monte-Carlo Tree Search is used to generate expressions that are evaluated in the same way as in Genetic Programming. Monte-Carlo Tree Search is transformed in order to search expression trees rather than lists of moves. We compare Nested Monte-Carlo Search to UCT (Upper Confidence Bounds for Trees) for various problems. Monte-Carlo Tree Search achieves state of the art results on multiple benchmark problems. The proposed approach is simple to program, does not suffer from expression growth, has a natural restart strategy to avoid local optima and is extremely easy to parallelize.", "paper_title": "MONTE-CARLO EXPRESSION DISCOVERY", "paper_id": "WOS:000316900800003"}