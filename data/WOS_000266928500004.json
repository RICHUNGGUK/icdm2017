{"auto_keywords": [{"score": 0.03514350703900346, "phrase": "constant_fraction"}, {"score": 0.03369793904889564, "phrase": "adversarial_peers"}, {"score": 0.00481495049065317, "phrase": "scalable_and_robust_distributed_data_storage"}, {"score": 0.004644329185633612, "phrase": "common_approach"}, {"score": 0.0045612889352793584, "phrase": "peer-to-peer_systems"}, {"score": 0.0044635893862404385, "phrase": "distributed_hash_table"}, {"score": 0.004258995791471342, "phrase": "virtual_space"}, {"score": 0.004228359613476549, "phrase": "peers_and_data_items"}, {"score": 0.004078439401031372, "phrase": "local-control_rules"}, {"score": 0.003948043391567917, "phrase": "virtual_locations"}, {"score": 0.003380129564214184, "phrase": "dht_concept"}, {"score": 0.0033076455392068095, "phrase": "faulty_peers"}, {"score": 0.0031218401638802053, "phrase": "biggest_threats"}, {"score": 0.002852134080296829, "phrase": "provably_robust_mechanisms"}, {"score": 0.0027808699346360656, "phrase": "-leave_attacks"}, {"score": 0.002682133505994396, "phrase": "honest_peers"}, {"score": 0.0025962638592454974, "phrase": "data_management_level"}, {"score": 0.0025313767218525965, "phrase": "high_load-imbalance"}, {"score": 0.0023804491500749106, "phrase": "high_level"}, {"score": 0.002279349794239273, "phrase": "scalable_manner"}, {"score": 0.0021434164641710657, "phrase": "open_systems_for_scalable_distributed_data_storage"}, {"score": 0.0021049977753042253, "phrase": "even_massive_adversarial_behavior"}], "paper_keywords": [""], "paper_abstract": "The problem of scalable and robust distributed data storage has recently attracted a lot of attention. A common approach in the area of peer-to-peer systems has been to use a distributed hash table (or DHT). DHTs are based on the concept of virtual space. Peers and data items are mapped to points in that space, and local-control rules are used to decide, based on these virtual locations, how to interconnect the peers and how to map the data to the peers. DHTs are known to be highly scalable and easy to update as peers enter and leave the system. It is relatively easy to extend the DHT concept so that a constant fraction of faulty peers can be handled without any problems, but handling adversarial peers is very challenging. The biggest threats appear to be join-leave attacks (i.e., adaptive join-leave behavior by the adversarial peers) and attacks on the data management level (i.e., adaptive insert and lookup attacks by the adversarial peers) against which no provably robust mechanisms are known so far. Join-leave attacks, for example, may be used to isolate honest peers in the system, and attacks on the data management level may be used to create a high load-imbalance, seriously degrading the correctness and scalability of the system. We show, on a high level, that both of these threats can be handled in a scalable manner, even if a constant fraction of the peers in the system is adversarial, demonstrating that open systems for scalable distributed data storage that are robust against even massive adversarial behavior are feasible.", "paper_title": "Towards a Scalable and Robust DHT", "paper_id": "WOS:000266928500004"}