{"auto_keywords": [{"score": 0.02899393540368031, "phrase": "lstm"}, {"score": 0.00481495049065317, "phrase": "lstm_training"}, {"score": 0.004481132747216135, "phrase": "new_training_algorithm"}, {"score": 0.004059438255358923, "phrase": "usual_mean"}, {"score": 0.0038810583785936505, "phrase": "cost_function"}, {"score": 0.003777800904236079, "phrase": "weight_update"}, {"score": 0.0035473867669654174, "phrase": "error_entropy_minimization_approach"}, {"score": 0.0025892330566358503, "phrase": "traditional_learning_algorithm"}, {"score": 0.002387758958649797, "phrase": "parameter_tuning"}, {"score": 0.0022419349154472806, "phrase": "wider_range"}, {"score": 0.002208830569180757, "phrase": "eem"}, {"score": 0.0022019274077124795, "phrase": "parameter_values"}], "paper_keywords": [""], "paper_abstract": "In this paper we present a new training algorithm for the Long Short-Term Memory (LSTM) recurrent neural network. This algorithrn uses entropy instead of the usual mean squared error as the cost function for the weight update. More precisely we use the Error Entropy Minimization approach, were the entropy of the error is minimized after each symbol is present to the network. Our experiments show that this approach enables the convergence of the LSTM more frequently than with the traditional learning algorithm. This in turn relaxes the burden of parameter tuning since learning is achieved for a wider range of parameter values. The use of EEM also reduces, in some cases, the number of epochs needed for convergence.", "paper_title": "Error entropy minimization for LSTM training", "paper_id": "WOS:000241472100026"}