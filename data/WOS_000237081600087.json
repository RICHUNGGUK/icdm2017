{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fast_index_scan"}, {"score": 0.004753194996637899, "phrase": "nearest_neighbor_queries"}, {"score": 0.004543193737836748, "phrase": "spatial_databases"}, {"score": 0.004456044928556639, "phrase": "efficient_query_processing"}, {"score": 0.0042591158963728665, "phrase": "index_structures"}, {"score": 0.00415050117148714, "phrase": "exponential_dependency"}, {"score": 0.00409723267214392, "phrase": "processing_time"}, {"score": 0.003941478054422721, "phrase": "data_objects"}, {"score": 0.003742941972172613, "phrase": "alternative_approach"}, {"score": 0.003694884775158077, "phrase": "query_processing"}, {"score": 0.003647442345566347, "phrase": "high-dimensional_data"}, {"score": 0.0035087260813209593, "phrase": "sequential_scan"}, {"score": 0.003441352119167824, "phrase": "entire_data_set"}, {"score": 0.0032051601987130207, "phrase": "multi-dimensional_index"}, {"score": 0.0026570998719084153, "phrase": "fis-by"}, {"score": 0.00244278788608393, "phrase": "nearest_neighbor_query"}, {"score": 0.0022457226013538343, "phrase": "new_cost_models"}, {"score": 0.002202547013259953, "phrase": "fast_index"}, {"score": 0.0021462652605453163, "phrase": "user_significant_information"}, {"score": 0.0021049977753042253, "phrase": "applied_page_access_strategy"}], "paper_keywords": [""], "paper_abstract": "Many different index structures have been proposed for spatial databases to support efficient query processing. However, most of these index structures suffer from an exponential dependency in processing time upon the dimensionality of the data objects. Due to this fact, an alternative approach for query processing on high-dimensional data is simply to perform a sequential scan over the entire data set. This approach often yields in lower I/O costs than using a multi-dimensional index. The Fast Index Scan combines these two techniques and optimizes the number and order of blocks which are processed in a single chained I/O operation. In this demonstation we present a tool called FIS-by-Step which visualizes the single I/O operations during a Fast Index Scan while processing a nearest neighbor query. FIS-by-Step assists the development and evaluation of new cost models for the Fast Index Scan by providing user significant information about the applied page access strategy in each step of the algorithm.", "paper_title": "FIS-by-Step: Visualization of the fast index scan for nearest neighbor queries", "paper_id": "WOS:000237081600087"}