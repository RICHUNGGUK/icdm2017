{"auto_keywords": [{"score": 0.04926889079413175, "phrase": "chameleon"}, {"score": 0.004287166497171827, "phrase": "layered_architecture"}, {"score": 0.004143196873246147, "phrase": "standard_xml-based_format"}, {"score": 0.0038170129089059013, "phrase": "least_common_denominator"}, {"score": 0.0037910145286595386, "phrase": "java_dialects"}, {"score": 0.0037523473563976246, "phrase": "automatic_translation"}, {"score": 0.0036386875640595944, "phrase": "flexible_membership_models"}, {"score": 0.0035526625882388936, "phrase": "multiple_concurrent_protocol_stacks"}, {"score": 0.003504418473478722, "phrase": "single_codebase"}, {"score": 0.003409880074659807, "phrase": "open-source_project"}, {"score": 0.003284026247389735, "phrase": "net._chameleon"}, {"score": 0.003141246279336443, "phrase": "third-party_code"}, {"score": 0.002994396880146532, "phrase": "multiplatform_development"}, {"score": 0.0029036504444247906, "phrase": "xml"}, {"score": 0.0028446460307503343, "phrase": "net_features"}, {"score": 0.002702363975375762, "phrase": "chameleon's_threading_model"}, {"score": 0.0026565317818265394, "phrase": "internal_layers"}, {"score": 0.0026384167183586015, "phrase": "application's_code"}, {"score": 0.002472352057126189, "phrase": "layers'_development"}, {"score": 0.0024387423375226507, "phrase": "protocol_stack"}, {"score": 0.0023486473525617816, "phrase": "internal_algorithms"}, {"score": 0.0022618732192713235, "phrase": "extensive_testing_framework"}, {"score": 0.0021560445153869985, "phrase": "application-specific_layers"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["ad hoc networks", " group communication", " mobile computing"], "paper_abstract": "This paper reports about our experience in designing and developing Chameleon, a highly portable and adaptable group communication framework for smartphones. Chameleon owes its level of portability to several design choices, including the following: (i) a layered architecture, where the headers of each layer have a standard XML-based format, enabling automatic, error-resistant generation of efficient serialization code in any platform; (ii) reliance only on the J2ME library, which serves as least common denominator for Java dialects and facilitates automatic translation to.NET; (iii) having flexible membership models; and (iv) supporting multiple concurrent protocol stacks.Through a single codebase, Chameleon is currently available as an open-source project for J2ME, J2SE, Android,.NET CF, and.NET. Chameleon is easily extendable and is bundled with tools, configurations, and third-party code tuned in a way that lifts some of the burden normally associated with multiplatform development for smartphones. Both the header generation from XML and automatic translation to.NET features of Chameleon are readily available to any application that is based on it. Chameleon's threading model separates between execution of internal layers and application's code and by that protects one from the other. As we describe in the paper, it simplifies layers' development and allows the protocol stack to easily block application calls when this is required by internal algorithms. Additionally, this model simplifies testing, and an extensive testing framework is supplied along with Chameleon, which is also usable for testing of application-specific layers. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Chameleon - a group communication framework for smartphones", "paper_id": "WOS:000360814800006"}