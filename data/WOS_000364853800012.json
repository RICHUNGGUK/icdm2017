{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "column-oriented_mapreduce_system"}, {"score": 0.02861530749628291, "phrase": "data_layout"}, {"score": 0.00477190623242136, "phrase": "hybrid_storage"}, {"score": 0.004708056866527125, "phrase": "solid-state_hybrid_drive"}, {"score": 0.004582897918101983, "phrase": "small_nand_flash_memory"}, {"score": 0.004521566043596533, "phrase": "hard_drive"}, {"score": 0.004421156723819163, "phrase": "integrated_device"}, {"score": 0.00438161736774803, "phrase": "combined_hard_disk_drive"}, {"score": 0.00434243782143717, "phrase": "hdd"}, {"score": 0.004284302478991387, "phrase": "solid_state_disk"}, {"score": 0.003916098498242888, "phrase": "ssd_part"}, {"score": 0.0038810583785936505, "phrase": "sshd"}, {"score": 0.0038119123317396954, "phrase": "better_performance"}, {"score": 0.0037608593980593035, "phrase": "standard_hard_drive"}, {"score": 0.0036443694410100507, "phrase": "significant_redesign"}, {"score": 0.003611751858608048, "phrase": "existing_data_processing_systems"}, {"score": 0.003406713877432236, "phrase": "relational_data"}, {"score": 0.0033762964792131223, "phrase": "mapreduce"}, {"score": 0.0033011569787033297, "phrase": "sshds"}, {"score": 0.003256922225995089, "phrase": "underlying_storage_devices"}, {"score": 0.0031559919178954644, "phrase": "hybrid_mapreduce"}, {"score": 0.0030171910207671205, "phrase": "different_storage_layout"}, {"score": 0.0029901699209266435, "phrase": "query_optimizer"}, {"score": 0.002963390095037466, "phrase": "data_index"}, {"score": 0.0029236680654022664, "phrase": "compression_algorithm"}, {"score": 0.002897482096228207, "phrase": "previous_mapreduce_systems"}, {"score": 0.002858679267019902, "phrase": "hm"}, {"score": 0.002820319063320601, "phrase": "distributed_file_system"}, {"score": 0.0026600905156986317, "phrase": "data_chunks"}, {"score": 0.002543043781904587, "phrase": "key_role"}, {"score": 0.002453116398642071, "phrase": "approximate_algorithm"}, {"score": 0.0023346234464901978, "phrase": "query_performance"}, {"score": 0.002272415777234064, "phrase": "tpc-h_benchmark"}, {"score": 0.0021723899772112423, "phrase": "hybrid_system"}, {"score": 0.0021336208506092173, "phrase": "similar_performance"}, {"score": 0.0021049977753042253, "phrase": "ssd-only_system"}], "paper_keywords": ["MapReduce", " Hadoop", " SSHD", " index", " query processing", " cost model"], "paper_abstract": "The solid-state hybrid drive (SSHD) incorporates a small NAND flash memory into a hard drive, resulting in an integrated device with combined Hard Disk Drive (HDD) and Solid State Disk (SSD) storage. By identifying the data highly associated with the performance and buffering them in the SSD part, SSHD can deliver a better performance than the standard hard drive. However, that requires a significant redesign for existing data processing systems. In this paper, we examine the problem of efficiently processing relational data using MapReduce on a cluster using SSHDs as the underlying storage devices. We present the design of Hybrid MapReduce (HM), a column-oriented MapReduce system, which adopts different storage layout, query optimizer, data index, and compression algorithm from previous MapReduce systems. In HM, the Distributed File System (DFS) is deployed on SSHDs, and data layout (how data chunks are disseminated to HDDs and SSDs) plays a key role for the performance. Hence, an approximate algorithm is used to tune the data layout adaptively to maximize the query performance. We evaluate HM using TPC-H benchmark and the results show that with our new design, the hybrid system can provide a similar performance as the SSD-only system.", "paper_title": "HM: A Column-Oriented MapReduce System on Hybrid Storage", "paper_id": "WOS:000364853800012"}