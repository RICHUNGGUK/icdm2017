{"auto_keywords": [{"score": 0.033133513473530815, "phrase": "path_changes"}, {"score": 0.015719716506582538, "phrase": "internet_path_changes"}, {"score": 0.004384960761826366, "phrase": "trace-route-_style"}, {"score": 0.003870541730075597, "phrase": "usual_traceroute"}, {"score": 0.0038404642251010797, "phrase": "based_approach"}, {"score": 0.0034971932704828197, "phrase": "empirical_observations"}, {"score": 0.003015143226706584, "phrase": "simple_predictor"}, {"score": 0.0028996963188373144, "phrase": "nearest-neighbor_model"}, {"score": 0.002499798127196099, "phrase": "probe_targeting"}, {"score": 0.0024040357029838774, "phrase": "dtrack"}, {"score": 0.002206045784326466, "phrase": "lower_detection_delay"}, {"score": 0.0021049977753042253, "phrase": "complete_load-balancer_information"}], "paper_keywords": ["Design", " Experimentation", " Measurement", " Topology Mapping", " Tracking", " Prediction", " Path Changes"], "paper_abstract": "This paper investigates to what extent it is possible to use trace-route- style probing for accurately tracking Internet path changes. When the number of paths is large, the usual traceroute based approach misses many path changes because it probes all paths equally. Based on empirical observations, we argue that monitors can optimize probing according to the likelihood of path changes. We design a simple predictor of path changes using a nearest-neighbor model. Although predicting path changes is not very accurate, we show that it can be used to improve probe targeting. Our path tracking method, called DTRACK, detects up to two times more path changes than traditional probing, with lower detection delay, as well as providing complete load-balancer information.", "paper_title": "Predicting and Tracking Internet Path Changes", "paper_id": "WOS:000302124800011"}