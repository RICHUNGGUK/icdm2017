{"auto_keywords": [{"score": 0.03921658896613621, "phrase": "drfh"}, {"score": 0.00481495049065317, "phrase": "multi-resource_fair_allocation"}, {"score": 0.004760765880314089, "phrase": "heterogeneous_cloud_computing_systems"}, {"score": 0.004627944735913613, "phrase": "multi-resource_allocation_problem"}, {"score": 0.004448169552315403, "phrase": "resource_pool"}, {"score": 0.004324031677173549, "phrase": "large_number"}, {"score": 0.004275347843870176, "phrase": "heterogeneous_servers"}, {"score": 0.004203343568960231, "phrase": "different_points"}, {"score": 0.004132546937996706, "phrase": "configuration_space"}, {"score": 0.0037959868107895053, "phrase": "multi-resource_allocation_mechanism"}, {"score": 0.0035869274480340727, "phrase": "dominant_resource_fairness"}, {"score": 0.003467040410632942, "phrase": "single_server"}, {"score": 0.0034279721355412285, "phrase": "multiple_heterogeneous_servers"}, {"score": 0.0032946562900625187, "phrase": "highly_desirable_properties"}, {"score": 0.002763709443278514, "phrase": "coalition_behavior"}, {"score": 0.0027325449069867222, "phrase": "misreporting_resource_demands"}, {"score": 0.0025673005153462707, "phrase": "service_isolation"}, {"score": 0.0024673738215365104, "phrase": "direct_application"}, {"score": 0.002398382089724878, "phrase": "simple_heuristic"}, {"score": 0.0023313149689465386, "phrase": "real-world_systems"}, {"score": 0.002305014991156598, "phrase": "large-scale_simulations"}, {"score": 0.0022661190184053628, "phrase": "google_cluster_traces"}, {"score": 0.0021778895748464024, "phrase": "traditional_slot-based_scheduler"}, {"score": 0.0021049977753042253, "phrase": "substantially_shorter_job_completion_times"}], "paper_keywords": ["Cloud computing", " heterogeneous servers", " job scheduling", " multi-resource allocation", " fairness"], "paper_abstract": "We study the multi-resource allocation problem in cloud computing systems where the resource pool is constructed from a large number of heterogeneous servers, representing different points in the configuration space of resources such as processing, memory, and storage. We design a multi-resource allocation mechanism, called DRFH, that generalizes the notion of Dominant Resource Fairness (DRF) from a single server to multiple heterogeneous servers. DRFH provides a number of highly desirable properties. With DRFH, no user prefers the allocation of another user; no one can improve its allocation without decreasing that of the others; and more importantly, no coalition behavior of misreporting resource demands can benefit all its members. DRFH also ensures some level of service isolation among the users. As a direct application, we design a simple heuristic that implements DRFH in real-world systems. Large-scale simulations driven by Google cluster traces show that DRFH significantly outperforms the traditional slot-based scheduler, leading to much higher resource utilization with substantially shorter job completion times.", "paper_title": "Multi-Resource Fair Allocation in Heterogeneous Cloud Computing Systems", "paper_id": "WOS:000362791400016"}