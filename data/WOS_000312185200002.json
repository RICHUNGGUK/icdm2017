{"auto_keywords": [{"score": 0.03964563159747148, "phrase": "structural_properties"}, {"score": 0.015719716506582538, "phrase": "concurrent_programs"}, {"score": 0.010336200077281527, "phrase": "logic_program"}, {"score": 0.004753670676591174, "phrase": "answer_set_programming"}, {"score": 0.0045162169185355, "phrase": "automatic_synthesis"}, {"score": 0.004263168852219819, "phrase": "set_programming"}, {"score": 0.0041023644174418205, "phrase": "concurrent_program"}, {"score": 0.0036553070575015344, "phrase": "behavioural_properties"}, {"score": 0.003298856341173034, "phrase": "computation_tree_logic"}, {"score": 0.0025034338848015166, "phrase": "asp_system"}, {"score": 0.002378114613631841, "phrase": "answer_sets"}, {"score": 0.0022159566043745724, "phrase": "synthesized_program"}, {"score": 0.0021049977753042253, "phrase": "desired_behavioural"}], "paper_keywords": [""], "paper_abstract": "We address the problem of the automatic synthesis of concurrent programs within a framework based on Answer Set Programming (ASP). Every concurrent program to be synthesized is specified by providing both the behavioural and the structural properties it should satisfy. Behavioural properties, such as safety and liveness properties, are specified by using formulas of the Computation Tree Logic, which are encoded as a logic program. Structural properties, such as the symmetry of processes, are also encoded as a logic program. Then, the program which is the union of these two encoding programs, is given as input to an ASP system which returns as output a set of answer sets. Finally, each answer set is decoded into a synthesized program that, by construction, satisfies the desired behavioural and structural properties.", "paper_title": "Synthesizing Concurrent Programs Using Answer Set Programming", "paper_id": "WOS:000312185200002"}