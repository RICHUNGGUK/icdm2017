{"auto_keywords": [{"score": 0.04004331634725488, "phrase": "strongly_connected_components"}, {"score": 0.00481495049065317, "phrase": "strong_bridges"}, {"score": 0.004714023408114857, "phrase": "strong_articulation_points"}, {"score": 0.004615202066192795, "phrase": "linear_time"}, {"score": 0.0044237033788643715, "phrase": "directed_graph"}, {"score": 0.0041074234667687875, "phrase": "strong_bridge"}, {"score": 0.0033579708256295847, "phrase": "strong_articulation_point"}, {"score": 0.003053181351076537, "phrase": "g."}, {"score": 0.002833689453299307, "phrase": "linear-time_algorithms"}, {"score": 0.0024947959375982614, "phrase": "open_problem"}, {"score": 0.00241658945942583, "phrase": "beldiceanu_et_al"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithms", " Strong connectivity", " Strong articulation points", " Strong bridges"], "paper_abstract": "Given a directed graph G, an edge is a strong bridge if its removal increases the number of strongly connected components of G. Similarly, we say that a vertex is a strong articulation point if its removal increases the number of strongly connected components of G. In this paper, we present linear-time algorithms for computing all the strong bridges and all the strong articulation points of directed graphs, solving an open problem posed in Beldiceanu et al. (2005) [2]. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Finding strong bridges and strong articulation points in linear time", "paper_id": "WOS:000306726600009"}