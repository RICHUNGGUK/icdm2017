{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dense_linear_algebra_problems"}, {"score": 0.049593242225692294, "phrase": "hybrid_cpu-gpu_systems"}, {"score": 0.0286974775604411, "phrase": "intel_mkl"}, {"score": 0.004598933498016774, "phrase": "computing_power"}, {"score": 0.004460309246062286, "phrase": "graphics_processing_units"}, {"score": 0.0041316803676012155, "phrase": "heterogeneous_tile_algorithms"}, {"score": 0.003906116922372891, "phrase": "communication_volume"}, {"score": 0.0036553070575015344, "phrase": "new_heterogeneous_tile_algorithms"}, {"score": 0.0034911335714333507, "phrase": "task_graph"}, {"score": 0.003438058620195309, "phrase": "transfers_data"}, {"score": 0.003403122817578447, "phrase": "compute_nodes"}, {"score": 0.003334309053314909, "phrase": "runtime_system"}, {"score": 0.0032836104153151973, "phrase": "new_distributed_task_assignment_protocol"}, {"score": 0.0031042018721479385, "phrase": "processing_units"}, {"score": 0.0030569913145731408, "phrase": "overlapping_computation"}, {"score": 0.0029951555610569225, "phrase": "dynamic_scheduling"}, {"score": 0.002889928791032578, "phrase": "scalable_performance"}, {"score": 0.0028459677232555176, "phrase": "double-precision_cholesky_factorization"}, {"score": 0.002731971103291716, "phrase": "performance_comparable"}, {"score": 0.002676692093594358, "phrase": "shared-memory_multicore_systems"}, {"score": 0.0022961534630650347, "phrase": "conventional_clusters"}, {"score": 0.0021817065300196634, "phrase": "multiple_gpus"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["dense linear algebra", " heterogeneous HPC systems", " distributed dataflow scheduling", " runtime systems"], "paper_abstract": "Aiming to fully exploit the computing power of all CPUs and all graphics processing units (GPUs) on hybrid CPU-GPU systems to solve dense linear algebra problems, we design a class of heterogeneous tile algorithms to maximize the degree of parallelism, to minimize the communication volume, and to accommodate the heterogeneity between CPUs and GPUs. The new heterogeneous tile algorithms are executed upon our decentralized dynamic scheduling runtime system, which schedules a task graph dynamically and transfers data between compute nodes automatically. The runtime system uses a new distributed task assignment protocol to solve data dependencies between tasks without any coordination between processing units. By overlapping computation and communication through dynamic scheduling, we are able to attain scalable performance for the double-precision Cholesky factorization and QR factorization. Our approach demonstrates a performance comparable to Intel MKL on shared-memory multicore systems and better performance than both vendor (e.g., Intel MKL) and open source libraries (e.g., StarPU) in the following three environments: heterogeneous clusters with GPUs, conventional clusters without GPUs, and shared-memory systems with multiple GPUs. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "A scalable approach to solving dense linear algebra problems on hybrid CPU-GPU systems", "paper_id": "WOS:000362978600008"}