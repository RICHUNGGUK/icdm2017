{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "opengl_es"}, {"score": 0.0086240344266407, "phrase": "desktop_opengl."}, {"score": 0.004618893461411858, "phrase": "newly_developed_embedded_devices"}, {"score": 0.004559270778306828, "phrase": "tablet_pc"}, {"score": 0.004294724955301414, "phrase": "embedded_devices"}, {"score": 0.004261365275733984, "phrase": "computing_powers"}, {"score": 0.004184526032558792, "phrase": "developing_opengl_es_application_programs"}, {"score": 0.004152018764100109, "phrase": "embedded_systems"}, {"score": 0.0038404642251010797, "phrase": "linux-based_desktop_pc"}, {"score": 0.0037418774360555105, "phrase": "desktop_opengl"}, {"score": 0.0035245918797629804, "phrase": "new_floating_point_representation"}, {"score": 0.0035063024767122684, "phrase": "glfixed"}, {"score": 0.0034519997658752598, "phrase": "sign_bit"}, {"score": 0.003345895878114341, "phrase": "framebuffer_object_features"}, {"score": 0.0032940691998512963, "phrase": "core_profile"}, {"score": 0.0032094634756436595, "phrase": "optional_extension"}, {"score": 0.0031597433845085092, "phrase": "shader_language"}, {"score": 0.0031351720217878917, "phrase": "opengl_es_shader_language"}, {"score": 0.0030230006369786093, "phrase": "original_opengl_shader_language"}, {"score": 0.0029530125680590413, "phrase": "confusing_variable_names"}, {"score": 0.0029224275921964724, "phrase": "stricter_syntax"}, {"score": 0.0029072537537959374, "phrase": "semantics_checks"}, {"score": 0.0028622019660721363, "phrase": "built-in_constants"}, {"score": 0.0027311809666295565, "phrase": "essl-to-glsl_translator"}, {"score": 0.0026402908398883832, "phrase": "six_categories"}, {"score": 0.0026265780539030106, "phrase": "function_interface_design"}, {"score": 0.002612936300948578, "phrase": "fixed-point_data_type_support"}, {"score": 0.002545780285983192, "phrase": "framebuffer_support"}, {"score": 0.00241658945942583, "phrase": "official_conformance_tests"}, {"score": 0.002372935208038141, "phrase": "commercial_benchmark_programs"}, {"score": 0.0021831803612759855, "phrase": "final_smart_phone_graphics_applications"}, {"score": 0.0021159932825818065, "phrase": "opengl_sc"}, {"score": 0.0021049977753042253, "phrase": "webgl."}], "paper_keywords": ["OpenGL ES", " Emulation", " User interface", " Mobile graphics"], "paper_abstract": "The OpenGL has been the de facto 3D graphics standard for more than 20 years. For the newly developed embedded devices including smart phones and tablet PC's, the OpenGL ES (Embedded Systems) 2.0 is the most suitable and the most widely used 3D graphics standard at this time. Since the embedded devices have limited computing powers, programmers met difficulties in the developing OpenGL ES application programs on the embedded systems. They prefer more convenient programming environments of PC's, and thus, we need emulation of the OpenGL ES 2.0 library on PC's. We present our OpenGL ES 2.0 emulation approach, which works on the Linux-based desktop PC's. Although OpenGL ES 2.0 was derived from the desktop OpenGL 2.1, the details of these two graphics standards are different and not mutually compatible. For example, OpenGL ES 2.0 additionally provides the new floating point representation of GLfixed, which consists of a sign bit, 15 bit integer and 16 bit fractional part. The framebuffer object features are also integrated into the core profile of OpenGL ES 2.0, while it was originally an optional extension of the desktop OpenGL. For the shader language supports, OpenGL ES Shader Language (ESSL) 1.0 is more enhanced in its completeness, compared to the original OpenGL Shader Language (GLSL). More specifically, some confusing variable names are fixed, stricter syntax and semantics checks are introduced, and some built-in constants are strengthened to support more enhanced hardware. Thus, we need a more exact and detailed shader language processor. We finally make an ESSL-to-GLSL translator with stricter error check features. Our design focuses can be classified into six categories: function interface design, fixed-point data type support, core pipeline support, shader language support, framebuffer support, and extensions support. We provide totally 11 OpenGL ES extensions, which was selected for their important functionalities. Our final implementation result satisfies 97 % of official conformance tests, and also fully tested with commercial benchmark programs. Its execution speeds are equivalently fast enough in comparison with one of the widely-used commercial OpenGL ES 2.0 emulators. Using our result, programmers can develop OpenGL ES 2.0 programs on their desktop PC's, and simply convert them into final smart phone graphics applications. Our methods can also be applied to other graphics standards such as OpenGL SC and WebGL.", "paper_title": "Emulating OpenGL ES 2.0 over the desktop OpenGL", "paper_id": "WOS:000350395500014"}