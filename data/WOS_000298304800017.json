{"auto_keywords": [{"score": 0.04464228929897594, "phrase": "drp"}, {"score": 0.005646770550446507, "phrase": "hls."}, {"score": 0.00481495049065317, "phrase": "programmable-wire_congestion"}, {"score": 0.004714023408114857, "phrase": "dynamically_reconfigurable_processor"}, {"score": 0.004647911247507267, "phrase": "iterative_synthesis_methods"}, {"score": 0.004486640769041646, "phrase": "wire_congestion"}, {"score": 0.004330941610682453, "phrase": "multi-context_dynamically_reconfigurable_processor"}, {"score": 0.004151188559520802, "phrase": "large_number"}, {"score": 0.004092937456065441, "phrase": "processing_elements"}, {"score": 0.003950846696972114, "phrase": "programmable-wire_connections"}, {"score": 0.0038679618585498597, "phrase": "complex_data-paths"}, {"score": 0.0035283552859817764, "phrase": "wire_connections"}, {"score": 0.003310813458610484, "phrase": "high-level_synthesizer"}, {"score": 0.0031286936417685178, "phrase": "route_tool"}, {"score": 0.0030414140732789186, "phrase": "prolonged_wire_delay"}, {"score": 0.0028944757265206332, "phrase": "wire_delays"}, {"score": 0.002677744558540711, "phrase": "experimental_results"}, {"score": 0.002603012037901889, "phrase": "critical-path_delay"}, {"score": 0.0024251568696803177, "phrase": "timing_closure_problems"}, {"score": 0.0023079225317714815, "phrase": "routing_and_estimate_wire_delays"}, {"score": 0.002196342933346204, "phrase": "synthesis_time"}, {"score": 0.0021049977753042253, "phrase": "delay_improvement_rate_degradation"}], "paper_keywords": ["coarse-grained reconfigurable architecture", " dynamically reconfigurable processor", " high-level synthesis", " iterative synthesis", " wire delay"], "paper_abstract": "Iterative synthesis methods for making aware of wire congestion are proposed for a multi-context dynamically reconfigurable processor (DRP) with a large number of processing elements (PEs) and programmable-wire connections. Although complex data-paths can be synthesized using the programmable-wire, its delay is long especially when wire connections are congested. We propose two iterative synthesis techniques between a high-level synthesizer (HLS) and the place & route tool to shorten the prolonged wire delay. First, we feed back wire delays for each context to a scheduler in the HLS. The experimental results showed that a critical-path delay was shorten by 21% on average for applications with timing closure problems. Second, we skip the routing and estimate wire delays based on the congestion. The synthesis time was shorten to 1/3 causing delay improvement rate degradation at two points on average.", "paper_title": "Iterative Synthesis Methods Estimating Programmable-Wire Congestion in a Dynamically Reconfigurable Processor", "paper_id": "WOS:000298304800017"}