{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "check-then-act_idioms"}, {"score": 0.04856216099390579, "phrase": "concurrent_collections"}, {"score": 0.01555462326656636, "phrase": "java"}, {"score": 0.008473616089239184, "phrase": "ctadetector"}, {"score": 0.004539005582217309, "phrase": "concurrent_programs"}, {"score": 0.0036815763368083197, "phrase": "whole_composition"}, {"score": 0.003526735797659508, "phrase": "atomicity_violation_bug"}, {"score": 0.0034148795808317555, "phrase": "extensive_empirical_study"}, {"score": 0.003306559295382181, "phrase": "oracle_corporation"}, {"score": 0.0032712190037495975, "phrase": "redwood"}, {"score": 0.003236690816953482, "phrase": "ca"}, {"score": 0.0032017443839495127, "phrase": "usa"}, {"score": 0.003050508020268648, "phrase": "open-source_java_projects"}, {"score": 0.002890887778279196, "phrase": "java_concurrent_collections"}, {"score": 0.0028142286985235977, "phrase": "correct_and_incorrect_use"}, {"score": 0.0025137856138000014, "phrase": "misused_idioms"}], "paper_keywords": ["concurrency and parallelism", " empirical studies", " program analysis", " concurrent collections", " atomicity violation", " check-then-act"], "paper_abstract": "Concurrent collections are widely used in concurrent programs. However, programmers can misuse these concurrent collections when composing two operations where a check on the collection (e.g., collection contains an element) precedes an action (e.g., inserting an element). Unless the whole composition is atomic, the program contains an atomicity violation bug. This paper presents an extensive empirical study of CHECK-THEN-ACT idioms of Java (Oracle Corporation, Redwood, CA, USA) concurrent collections. We analyze 28 widely used open-source Java projects (comprising 6.4 million lines of code) that use Java concurrent collections. We study the correct and incorrect use of idioms and the evolution of the programs with respect to idioms. Our tool, CTADETECTOR, detects and corrects misused idioms. CTADETECTOR discovered 60 bugs that were confirmed and fixed by developers. This shows that CHECK-THEN-ACT idioms are commonly misused in practice, and correcting them is important. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "A study and toolkit of CHECK-THEN-ACT idioms of Java concurrent collections", "paper_id": "WOS:000354129400004"}