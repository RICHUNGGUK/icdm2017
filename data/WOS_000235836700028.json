{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "decision_procedure"}, {"score": 0.004675930527604869, "phrase": "expressive_fragment"}, {"score": 0.004282391936827106, "phrase": "array_elements"}, {"score": 0.0038989120088094185, "phrase": "equisatisfiable_quantifier-free_formula"}, {"score": 0.0037201996003549246, "phrase": "uninterpreted_functions"}, {"score": 0.003367077034382727, "phrase": "constrained_use"}, {"score": 0.0033277936960179892, "phrase": "universal_quantification"}, {"score": 0.003138124398958758, "phrase": "syntactic_restrictions"}, {"score": 0.0023953929817357882, "phrase": "parameterized_systems"}, {"score": 0.0021049977753042253, "phrase": "pi_vc"}], "paper_keywords": [""], "paper_abstract": "Motivated by applications to program verification, we study a decision procedure for satisfiability in an expressive fragment of a theory of arrays, which is parameterized by the theories of the array elements. The decision procedure reduces satisfiability of a formula of the fragment to satisfiability of an equisatisfiable quantifier-free formula in the combined theory of equality with uninterpreted functions (EUF), Presburger arithmetic, and the element theories. This fragment allows a constrained use of universal quantification, so that one quantifier alternation is allowed, with some syntactic restrictions. It allows expressing, for example, that an assertion holds for all elements in a given index range, that two arrays are equal in a given range, or that an array is sorted. We demonstrate its expressiveness through applications to verification of sorting algorithms and parameterized systems. We also prove that satisfiability is undecidable for several natural extensions to the fragment. Finally, we describe our implementation in the pi VC verifying compiler.", "paper_title": "What's decidable about arrays?", "paper_id": "WOS:000235836700028"}