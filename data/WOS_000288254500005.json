{"auto_keywords": [{"score": 0.048231156244864744, "phrase": "satisfiability"}, {"score": 0.022157600294445932, "phrase": "sat"}, {"score": 0.00481495049065317, "phrase": "distributed_sat."}, {"score": 0.004734448316824488, "phrase": "dpll_abt"}, {"score": 0.004160177106153782, "phrase": "distributed_sat_problem_instances"}, {"score": 0.004022137057452406, "phrase": "particular_case"}, {"score": 0.00397714507836836, "phrase": "constraint_satisfaction"}, {"score": 0.0038668462001710314, "phrase": "solving_method"}, {"score": 0.003828538323370026, "phrase": "abt"}, {"score": 0.00378080526397273, "phrase": "asynchronous_backtracking_algorithm"}, {"score": 0.00357395617690842, "phrase": "ieee_trans_knowl_data_eng"}, {"score": 0.0033974527047473044, "phrase": "distributed_constraint_reasoning"}, {"score": 0.003284231319915779, "phrase": "dpll"}, {"score": 0.0032296377835432533, "phrase": "davis-putnam_procedure"}, {"score": 0.0028373742057129126, "phrase": "resulting_algorithm"}, {"score": 0.002727700630869639, "phrase": "communication_cost"}, {"score": 0.0026971491199975083, "phrase": "computational_effort"}, {"score": 0.002651960559564796, "phrase": "basic_abt."}, {"score": 0.0026222551419772867, "phrase": "sat_instance"}, {"score": 0.0024786330057813204, "phrase": "sat_instances"}, {"score": 0.0024234059612683032, "phrase": "minimum_information"}, {"score": 0.0023428586429492713, "phrase": "experimental_results"}, {"score": 0.0021773853011112882, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "basic_abt_algorithm"}], "paper_keywords": ["Distributed SAT solver", " DPLL procedure", " ABT"], "paper_abstract": "We present DPLL ABT, a distributed Satisfiability solver (SAT) (Anstegui and ManyA in IberoAm J Artif Intell 7(20):43-56, 2003) designed to solve distributed SAT problem instances. Since SAT is a particular case of constraint satisfaction, we propose a solving method based on the Asynchronous Backtracking algorithm (ABT) (Yokoo et al. in IEEE Trans Knowl Data Eng 10(5):673-685, 1998) developed for distributed constraint reasoning. In addition, we have applied the Davis-Putnam procedure (DPLL) in every agent, plus the minimum conflict heuristic in case DPLL does not detect any inconsistency. The resulting algorithm improves the performance in terms of communication cost and computational effort versus the basic ABT. The SAT instance is distributed into agents, which cooperate to solve SAT instances just sharing the minimum information. We also present the experimental results that demonstrate the performance of the method in terms of communication and execution time comparing the performance with the basic ABT algorithm.", "paper_title": "Distributed SAT", "paper_id": "WOS:000288254500005"}