{"auto_keywords": [{"score": 0.04698810152879058, "phrase": "contextual_equivalence"}, {"score": 0.00481495049065317, "phrase": "higher-order_imperative_programs"}, {"score": 0.004657185361669812, "phrase": "new_notion"}, {"score": 0.004356926418550194, "phrase": "untyped_lambda-calculus"}, {"score": 0.004270665568018583, "phrase": "explicit_store"}, {"score": 0.004103212598803194, "phrase": "expressed_values"}, {"score": 0.004021954624114115, "phrase": "higher-order_values"}, {"score": 0.0037624955853577786, "phrase": "smaller_and_more_tractable_relations"}, {"score": 0.003614896182167466, "phrase": "sumii"}, {"score": 0.0032272929113113203, "phrase": "bisimulation_relation"}, {"score": 0.0030189426536422577, "phrase": "inductive_specification"}, {"score": 0.002881130228859848, "phrase": "local_invariants"}, {"score": 0.002641621667026613, "phrase": "higher-order_functions"}, {"score": 0.002235433376874495, "phrase": "bisimulation_conditions"}, {"score": 0.0021476098263617954, "phrase": "proof_obligations"}, {"score": 0.0021049977753042253, "phrase": "hypothetical_direct_proof"}], "paper_keywords": ["theory", " languages", " contextual equivalence", " bisimulations", " lambda-calculus", " higher-order procedures", " imperative languages"], "paper_abstract": "We introduce a new notion of bisimulation for showing contextual equivalence of expressions in an untyped lambda-calculus with an explicit store, and in which all expressed values, including higher-order values, are storable. Our notion of bisimulation leads to smaller and more tractable relations than does the method of Sumii and Pierce [31]. In particular, our method allows one to write down a bisimulation relation directly in cases where [31] requires an inductive specification, and where the principle of local invariants [22] is inapplicable. Our method can also express examples with higher-order functions, in contrast with the most widely known previous methods [4, 22, 32] which are limited in their ability to deal with such examples. The bisimulation conditions are derived by manually extracting proof obligations from a hypothetical direct proof of contextual equivalence.", "paper_title": "Small bisimulations for reasoning about higher-order imperative programs", "paper_id": "WOS:000235615800014"}