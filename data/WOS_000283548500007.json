{"auto_keywords": [{"score": 0.03888571701763213, "phrase": "cisp"}, {"score": 0.00481495049065317, "phrase": "incremental_component_implementation_selection"}, {"score": 0.004672953146379813, "phrase": "incremental_design_methods"}, {"score": 0.004348936976349555, "phrase": "efficient_handling"}, {"score": 0.00429715240295033, "phrase": "engineering_change_orders"}, {"score": 0.0039043835848369215, "phrase": "component_implementation_selection_problem"}, {"score": 0.00374399358035391, "phrase": "local_or_non-local_perturbations"}, {"score": 0.0035901685646972585, "phrase": "judicious_selection"}, {"score": 0.0034841647157189985, "phrase": "system_timing_constraint"}, {"score": 0.0034016119212097826, "phrase": "generic_problem"}, {"score": 0.0032229262928681304, "phrase": "cad_flow"}, {"score": 0.0031465436619697385, "phrase": "commonly-used_formulation"}, {"score": 0.0028076592725295646, "phrase": "optimality_conditions"}, {"score": 0.00255068452076921, "phrase": "incremental_changes"}, {"score": 0.002416589459425828, "phrase": "threshold_voltage_assignment_solution"}, {"score": 0.0023311233166534214, "phrase": "engineering_changes"}, {"score": 0.002169132543304098, "phrase": "full_solver"}], "paper_keywords": ["Incremental", " library mapping", " logic synthesis"], "paper_abstract": "Incremental design methods can substantially improve products' time-to-market through efficient handling of engineering change orders (ECO). In this paper, we present a methodology for incrementally solving component implementation selection problem (CISP) in face of local or non-local perturbations. CISP, which refers to judicious selection of components implementation under system timing constraint, is a generic problem that implicitly or explicitly appears in many stages of CAD flow. For a commonly-used formulation of CISP, we discuss necessary and sufficient conditions for optimality of the solution. Based on the optimality conditions, we develop an algorithm that maintains both validity and optimality of a solution under incremental changes. We evaluated our approach by incrementally updating the threshold voltage assignment solution for a netlist going through engineering changes. On average, our method ran 283 times faster than the full solver, while delivering the same results.", "paper_title": "On Incremental Component Implementation Selection in System Synthesis", "paper_id": "WOS:000283548500007"}