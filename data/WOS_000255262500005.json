{"auto_keywords": [{"score": 0.04806645810598007, "phrase": "casl"}, {"score": 0.00481495049065317, "phrase": "modern_micro-architectures"}, {"score": 0.0037615180375561805, "phrase": "fast-prototyping_and_tool_generation"}, {"score": 0.0035648266669315943, "phrase": "deep_pipelines"}, {"score": 0.0034890505116128606, "phrase": "complicated_timing"}, {"score": 0.00323625520042892, "phrase": "casl_features"}, {"score": 0.0030017207229983385, "phrase": "ibm_cell_broadband_engine"}, {"score": 0.0029064676523923886, "phrase": "implicit_connection"}, {"score": 0.0027841357057119317, "phrase": "pipeline_support"}, {"score": 0.002724909017963099, "phrase": "dynamic_information_contexts"}, {"score": 0.002447101794397243, "phrase": "different_applications"}, {"score": 0.0022941723937662927, "phrase": "timing_simulators"}, {"score": 0.0022453451864218477, "phrase": "instruction_schedulers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["simulation", " architecture", " ADL", " pipeline"], "paper_abstract": "We introduce CASL, the CoGenT Architecture Specification Language, a mixed behavioral-structure architecture description language designed to facilitate fast-prototyping and tool generation for computer architectures with deep pipelines and complicated timing. We motivate a number of CASL features using examples drawn from modeling the IBM Cell Broadband Engine, including implicit connection of components, pipeline support, dynamic information contexts, contention, and timing annotations. We also describe a number of different applications for CASL, including generating timing simulators and instruction schedulers. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "CASL: A rapid-prototyping language for modern micro-architectures", "paper_id": "WOS:000255262500005"}