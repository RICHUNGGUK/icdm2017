{"auto_keywords": [{"score": 0.04581394571995767, "phrase": "context_information"}, {"score": 0.00481495049065317, "phrase": "ubiquitous_qoc-aware_applications"}, {"score": 0.00477924690801092, "phrase": "model-driven_software_engineering"}, {"score": 0.004673709383305897, "phrase": "mobile_devices"}, {"score": 0.004570491683870396, "phrase": "multiple_sensing_capabilities"}, {"score": 0.004536592536813498, "phrase": "ubiquitous_applications"}, {"score": 0.003724034990158436, "phrase": "application_designers"}, {"score": 0.0033177813460815346, "phrase": "context_information_meta-data"}, {"score": 0.003220315882881027, "phrase": "generic_and_extensible_design_process"}, {"score": 0.0031963987773420068, "phrase": "context-aware_applications"}, {"score": 0.0030001224724395354, "phrase": "prototype_application"}, {"score": 0.00296675450822924, "phrase": "flash_sale"}, {"score": 0.002933756577145939, "phrase": "mobile_users"}, {"score": 0.0028903278985330117, "phrase": "extensive_performance_results"}, {"score": 0.002826383890518307, "phrase": "processing_time"}, {"score": 0.0027949428646076627, "phrase": "elementary_context_management_operations"}, {"score": 0.002763850622950247, "phrase": "whole_context_policy"}, {"score": 0.0027331033178323145, "phrase": "flash_sale_application"}, {"score": 0.0026726283357752585, "phrase": "qoc_management"}, {"score": 0.002508433454626386, "phrase": "context_policy"}, {"score": 0.00241658945942583, "phrase": "mobile_phone"}, {"score": 0.0022096205841489786, "phrase": "user_experience"}, {"score": 0.0021526564019119466, "phrase": "new_ubiquitous_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model-driven software engineering", " Context", " Quality of context", " Domain specific language", " Ubiquitous computing", " Pervasive computing"], "paper_abstract": "As every-day mobile devices can easily be equipped with multiple sensing capabilities, ubiquitous applications are expected to exploit the richness of the context information that can be collected by these devices in order to provide the service that is the most appropriate to the situation of the user. However, the design and implementation of such context-aware ubiquitous appplications remain challenging as there exist very few models and tools to guide application designers and developers in mastering the complexity of context information. This becomes even more crucial as context is by nature imperfect. One way to address this issue is to associate to context information meta-data representing its quality. We propose a generic and extensible design process for context-aware applications taking into account the quality of context (QoC). We demonstrate its use on a prototype application for sending flash sale offers to mobile users. We present extensive performance results in terms of memory and processing time of both elementary context management operations and the whole context policy implementing the Flash sale application. The cost of adding QoC management is also measured and appears to be limited to a few milliseconds. We show that a context policy with 120 QoC-aware nodes can be processed in less than 100 ms on a mobile phone. Moreover, a policy of almost 3000 nodes can be instantiated before exhausting the resources of the phone. This enables very rich application scenarios enhancing the user experience and will favor the development of new ubiquitous applications. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Building ubiquitous QoC-aware applications through model-driven software engineering", "paper_id": "WOS:000323086300010"}