{"auto_keywords": [{"score": 0.03995104010405571, "phrase": "radial_basis_function_network"}, {"score": 0.00481495049065317, "phrase": "pem_fuel_cell_stack"}, {"score": 0.004772367030970874, "phrase": "independent_rbf_model"}, {"score": 0.004730158389701481, "phrase": "neural_networks"}, {"score": 0.004585332915477379, "phrase": "nonlinear_dynamic_systems"}, {"score": 0.00446471538346719, "phrase": "static_neural_network_model"}, {"score": 0.004386063799793622, "phrase": "system_fault_detection"}, {"score": 0.004327981760540394, "phrase": "model_prediction_error"}, {"score": 0.0040309035566691645, "phrase": "neural_network"}, {"score": 0.003959863717046575, "phrase": "dependent_mode"}, {"score": 0.0037043953071235155, "phrase": "system_model"}, {"score": 0.0036715973701254823, "phrase": "fault_detection"}, {"score": 0.003359119985242403, "phrase": "noise_ratio"}, {"score": 0.0032852337992126564, "phrase": "recursive_orthogonal_least_squares_algorithm"}, {"score": 0.003198705576491802, "phrase": "network_weights"}, {"score": 0.003005539334280134, "phrase": "residual_signal"}, {"score": 0.002965684305115369, "phrase": "developed_method"}, {"score": 0.002900426826591769, "phrase": "benchmark_simulation_model"}, {"score": 0.002861961643289598, "phrase": "proton_exchange_membrane_fuel_cell_stacks"}, {"score": 0.002689076130099546, "phrase": "benchmark_model"}, {"score": 0.0026534064006291853, "phrase": "simulation_results"}, {"score": 0.00260657976055413, "phrase": "developed_approach"}, {"score": 0.002482013330276732, "phrase": "fault_size"}, {"score": 0.002438203996977464, "phrase": "nominal_values"}, {"score": 0.002250415129116109, "phrase": "real_world"}, {"score": 0.0022304616068189575, "phrase": "fuel_cell_stacks"}, {"score": 0.00221068461235127, "phrase": "dynamic_monitoring"}, {"score": 0.0021910825909008946, "phrase": "reliable_operations"}, {"score": 0.0021716540012278744, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Fault detection", " Fault isolation", " PEMFC", " RBF networks", " Independent model"], "paper_abstract": "Neural networks have been successfully used to model nonlinear dynamic systems. However, when a static neural network model is used in system fault detection and the model prediction error is used as the residual, the residual is insensitive to the fault if the neural network used is in dependent mode. This paper proposed the use of a radial basis function network in independent mode as the system model for fault detection, and it was found that the residual is sensitive to the fault. To enhance the signal to noise ratio of the detection the recursive orthogonal least squares algorithm is employed to train the network weights. Another radial basis function network is used to isolate fault using the information in the residual signal. The developed method is applied to a benchmark simulation model of the proton exchange membrane fuel cell stacks developed at the Michigan University. One component fault, one actuator fault and three sensor faults were simulated on the benchmark model. The simulation results show that the developed approach is able to detect and isolate the faults to a fault size of +/- 10% of nominal values. These results are promising and indicate the potential of the method to be applied to the real world of fuel cell stacks for dynamic monitoring and reliable operations. Crown Copyright (C) 2013 Published by Elsevier Ltd. All rights reserved.", "paper_title": "Fault detection and isolation for PEM fuel cell stack with independent RBF model", "paper_id": "WOS:000331351200005"}