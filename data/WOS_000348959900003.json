{"auto_keywords": [{"score": 0.04974064540897104, "phrase": "maude"}, {"score": 0.04585089496359023, "phrase": "klaim"}, {"score": 0.03905760732893237, "phrase": "correct-by-construction_design_process"}, {"score": 0.00481495049065317, "phrase": "klaim_models"}, {"score": 0.004747141873785, "phrase": "emerging_distributed_systems"}, {"score": 0.004696909870731282, "phrase": "cloud-based_services"}, {"score": 0.004598027492787762, "phrase": "different_explicit_localities"}, {"score": 0.0044535760439663235, "phrase": "high_degree"}, {"score": 0.0043443560029027195, "phrase": "well-established_language"}, {"score": 0.004222795179790998, "phrase": "klaim_language"}, {"score": 0.004119211418949265, "phrase": "linda-based_asynchronous_communication"}, {"score": 0.004003925104720979, "phrase": "explicit_localities"}, {"score": 0.003796355951305572, "phrase": "first_steps"}, {"score": 0.0036900720643677034, "phrase": "secure_and_reliable_distributed_systems"}, {"score": 0.003449379912099073, "phrase": "mission-critical_formal_requirements"}, {"score": 0.0033886832371468954, "phrase": "distributed_setting"}, {"score": 0.003329051037399227, "phrase": "rewriting-based_approach"}, {"score": 0.003258871417680268, "phrase": "klaim_specifications"}, {"score": 0.0032358074601765555, "phrase": "distributed_systems"}, {"score": 0.0031118336364156516, "phrase": "reduction_semantics"}, {"score": 0.002992595374066178, "phrase": "maude-based_specification"}, {"score": 0.002950374774004939, "phrase": "first-class_citizens"}, {"score": 0.00286770704394124, "phrase": "second_extension"}, {"score": 0.002837305633114947, "phrase": "true_distributed_execution"}, {"score": 0.0028172167834968477, "phrase": "maude-based_'claim_specifications"}, {"score": 0.0027577972695911825, "phrase": "appropriate_weak_fairness_assumptions"}, {"score": 0.0026710032893246154, "phrase": "large_classes"}, {"score": 0.002642681666526916, "phrase": "temporal_formulas"}, {"score": 0.0024526426124799085, "phrase": "distributed_system"}, {"score": 0.002426630714074822, "phrase": "maude-based_klaim_dialect"}, {"score": 0.0023754296478100865, "phrase": "maude's_ltl_model"}, {"score": 0.002308834230545883, "phrase": "verified_specifications"}, {"score": 0.0022843440226146005, "phrase": "distributed_environment"}, {"score": 0.0022441016229967025, "phrase": "first_step"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Rewriting logic", " Distributed system", " KLAIM", " Formal analysis", " Correct-by-construction"], "paper_abstract": "Emerging distributed systems such as cloud-based services are characterized by computations over different explicit localities, moving code and data, and a high degree of concurrency. KLAIM is a well-established language that can naturally describe such systems. The KLAIM language is process algebra flavored, allows Linda-based asynchronous communication through distributed tuple spaces, and supports explicit localities as well as code and data mobility. In this work we take some first steps in the quest for a correct-by-construction design process for secure and reliable distributed systems. Such a design process is necessary as more and more safety- and security-critical tasks that need to satisfy mission-critical formal requirements are executed in a distributed setting. We use a rewriting-based approach to formally specify and analyze KLAIM specifications of distributed systems. In particular we: (i) specify the reduction semantics of KLAIM in Maude, (ii) extend the Maude-based specification by making messages first-class citizens, and (iii) describe a second extension that allows true distributed execution of Maude-based 'CLAIM specifications. We prove that under appropriate weak fairness assumptions all these specifications are stuttering bisimilar and that large classes of logic temporal formulas, namely all CIL*\\X formulas, are preserved. By means of an example we show that our approach allows specifying aspects of a distributed system in a Maude-based KLAIM dialect, verifying these specifications using Maude's LTL model checking capabilities, and then executing the verified specifications in a distributed environment. This marks a first step in the quest for a correct-by-construction design process for secure and reliable distributed systems. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Semantics, distributed implementation, and formal analysis of KLAIM models in Maude", "paper_id": "WOS:000348959900003"}