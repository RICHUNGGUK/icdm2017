{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_pipeline_parallelism"}, {"score": 0.004763565662615503, "phrase": "pipeline_parallelism"}, {"score": 0.0046875099587735825, "phrase": "popular_parallel_programming_pattern"}, {"score": 0.004514714250357749, "phrase": "programming_pipelines"}, {"score": 0.0044426140044122545, "phrase": "conventional_multithreaded_shared_memory"}, {"score": 0.004055176557424983, "phrase": "high-level_abstractions"}, {"score": 0.0038638811223100184, "phrase": "pipeline_stage_workers"}, {"score": 0.0037615180375561805, "phrase": "deterministic_stream"}, {"score": 0.0034148795808317555, "phrase": "shared_memory_accesses"}, {"score": 0.0031845067058084583, "phrase": "spmc_memory"}, {"score": 0.003100085797251317, "phrase": "infinite_sequence"}, {"score": 0.003066945490483524, "phrase": "data_items"}, {"score": 0.0028446460307503343, "phrase": "adjacent_stage_workers"}, {"score": 0.002681315076008658, "phrase": "dstream"}, {"score": 0.0026242699269026204, "phrase": "conversion_rules"}, {"score": 0.0025822818714499795, "phrase": "empirical_evaluation"}, {"score": 0.0023950275815082297, "phrase": "running_time"}, {"score": 0.0023440589015485077, "phrase": "converted_dedup"}, {"score": 0.0022213218042340735, "phrase": "pthreads_counterpart"}, {"score": 0.002127765807039172, "phrase": "tbb_counterpart"}], "paper_keywords": ["deterministic parallelism", " pipeline parallelism", " single-producer/multi-consumer", " virtual memory"], "paper_abstract": "Pipeline parallelism is a popular parallel programming pattern for emerging applications. However, programming pipelines directly on conventional multithreaded shared memory is difficult and error-prone. We present DStream, a C library that provides high-level abstractions of deterministic threads and streams for simply representing pipeline stage workers and their communications. The deterministic stream is established atop our proposed single-producer/multi-consumer (SPMC) virtual memory, which integrates synchronization with the virtual memory model to enforce determinism on shared memory accesses. We investigate various strategies on how to efficiently implement DStream atop the SPMC memory, so that an infinite sequence of data items can be asynchronously published (fixed) and asynchronously consumed in order among adjacent stage workers. We have successfully transformed two representative pipeline applications ferret and dedup using DStream, and conclude conversion rules. An empirical evaluation shows that the converted ferret performed on par with its Pthreads and TBB counterparts in term of running time, while the converted dedup is close to 2.56X, 7.05X faster than the Pthreads counterpart and 1.06X, 3.9X faster than the TBB counterpart on 16 and 32 CPUs, respectively.", "paper_title": "System-Enforced Deterministic Streaming for Efficient Pipeline Parallelism", "paper_id": "WOS:000349577600006"}