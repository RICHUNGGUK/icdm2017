{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "unsupervised_learning"}, {"score": 0.004567596860086148, "phrase": "suitable_neighborhood_structure"}, {"score": 0.004448705308279165, "phrase": "solution_space"}, {"score": 0.004332894955218135, "phrase": "key_step"}, {"score": 0.0041102032028337366, "phrase": "mixed_integer_programming"}, {"score": 0.003633927813203731, "phrase": "mip_compact_formulation"}, {"score": 0.0032697235411641695, "phrase": "efficient_neighborhoods"}, {"score": 0.0031565959573536194, "phrase": "human_analysis"}, {"score": 0.00284009509859163, "phrase": "\"good\"_regions"}, {"score": 0.0027660443371695024, "phrase": "search_space"}, {"score": 0.002600661525224505, "phrase": "computational_results"}, {"score": 0.002555247330102505, "phrase": "compact_formulations"}, {"score": 0.0022192891418394514, "phrase": "state-of-the-art_domain-independent_neighborhoods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Mixed integer programming", " Neighborhood search", " Unsupervised learning"], "paper_abstract": "The definition of a suitable neighborhood structure on the solution space is a key step when designing a heuristic for Mixed Integer Programming (MIP). In this paper, we move on from a MIP compact formulation and show how to take advantage of its features to automatically design efficient neighborhoods, without any human analysis. In particular, we use unsupervised learning to automatically identify \"good\" regions of the search space \"around\" a given feasible solution. Computational results on compact formulations of three well-known combinatorial optimization problems show that, on large instances, the neighborhoods constructed by our procedure outperform state-of-the-art domain-independent neighborhoods. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Model-based automatic neighborhood design by unsupervised learning", "paper_id": "WOS:000347022900009"}