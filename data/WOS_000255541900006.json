{"auto_keywords": [{"score": 0.03865676418691567, "phrase": "code_generation"}, {"score": 0.037577538970060206, "phrase": "pac_dsp"}, {"score": 0.00481495049065317, "phrase": "distributed_and_ping-pong_register_files"}, {"score": 0.004648609688625397, "phrase": "pac_vliw_dsp_cores"}, {"score": 0.004307569753106432, "phrase": "processor_design"}, {"score": 0.0040385352882334235, "phrase": "open_research_compiler_infrastructure"}, {"score": 0.0038085117064624208, "phrase": "pac_dsp_core"}, {"score": 0.0037201996003549246, "phrase": "specific_design"}, {"score": 0.003367077034382727, "phrase": "register_file_structures"}, {"score": 0.0032697235411641695, "phrase": "heterogeneous_clustered_data-path_architecture"}, {"score": 0.003119760592916715, "phrase": "smaller_die"}, {"score": 0.002941913249957503, "phrase": "new_challenges"}, {"score": 0.0027579362569638945, "phrase": "new_register_allocation_scheme"}, {"score": 0.0026624684547385718, "phrase": "effective_generation"}, {"score": 0.0026313840069327713, "phrase": "high_quality_code"}, {"score": 0.0024379730432321656, "phrase": "specific_register_file_architectures"}, {"score": 0.0023953929817357882, "phrase": "pac_dsp."}, {"score": 0.002339771435910601, "phrase": "compiler_support"}, {"score": 0.002298902547676131, "phrase": "pac_vliw_dsp"}, {"score": 0.002272053079580848, "phrase": "irregular_resource_constraints"}, {"score": 0.0021049977753042253, "phrase": "similar_architectures"}], "paper_keywords": ["compiler", " ping-pong register files", " VLIW", " DSP", " clustering", " parallel processing"], "paper_abstract": "The compiler is generally regarded as the most important software component that supports a processor design to achieve success. This paper describes our application of the open research compiler infrastructure to a novel VLIW DSP (known as the PAC DSP core) and the specific design of code generation for its register file architecture. The PAC DSP utilizes port-restricted, distributed, and partitioned register file structures in addition to a heterogeneous clustered data-path architecture to attain low power consumption and a smaller die. As part of an effort to overcome the new challenges of code generation for the PAC DSP, we have developed a new register allocation scheme and other retargeting optimization phases that allow the effective generation of high quality code. Our preliminary experimental results indicate that our developed compiler can efficiently utilize the features of the specific register file architectures in the PAC DSP. Our experiences in designing compiler support for the PAC VLIW DSP with irregular resource constraints may also be of interest to those involved in developing compilers for similar architectures.", "paper_title": "Effective code generation for distributed and ping-pong register files: A case study on PAC VLIW DSP cores", "paper_id": "WOS:000255541900006"}