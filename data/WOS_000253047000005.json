{"auto_keywords": [{"score": 0.047609263564721546, "phrase": "cube_subtraction"}, {"score": 0.015531022885474463, "phrase": "davis_putnam"}, {"score": 0.015406476494272583, "phrase": "loveland"}, {"score": 0.015282897638740694, "phrase": "logemann"}, {"score": 0.004815595081630284, "phrase": "decision"}, {"score": 0.004456611869693865, "phrase": "new_decision"}, {"score": 0.004091370602573054, "phrase": "negated_clause"}, {"score": 0.003960210592458847, "phrase": "n-dimensional_boolean_search_space"}, {"score": 0.0038645966233348933, "phrase": "satisfying_assignments"}, {"score": 0.003680212979775528, "phrase": "universal_cube"}, {"score": 0.0036207206487324506, "phrase": "entire_n-dimensional_boolean_search_space"}, {"score": 0.0035189057079817285, "phrase": "empty_cube"}, {"score": 0.0032302647179383915, "phrase": "decision_engine"}, {"score": 0.0031910037920846817, "phrase": "dpll-based_sat_solver"}, {"score": 0.003076052206618737, "phrase": "next_decision_variable"}, {"score": 0.0030386598795433474, "phrase": "chronological_backtrack_step"}, {"score": 0.0027218799769229596, "phrase": "non-solution_regions"}, {"score": 0.0025918745925152423, "phrase": "well-known_zchaff_solver"}, {"score": 0.0024580159789774516, "phrase": "model_checking_and_microprocessor_formal_verification_benchmarks"}, {"score": 0.002359759876402679, "phrase": "timed-out_instances"}, {"score": 0.0022378620428620782, "phrase": "experimental_evaluation"}, {"score": 0.00221063611719246, "phrase": "disjoint_cube_subtraction_search"}, {"score": 0.0021571717917276724, "phrase": "effective_algorithm"}, {"score": 0.0021049977753042253, "phrase": "sat_solvers"}], "paper_keywords": [""], "paper_abstract": "The study proposes a new decision heuristic for Davis Putnam, Loveland and Logemann algorithm (DPLL)-based satisfiability (SAT) solvers based on cube subtraction. Each negated clause is viewed as a cube in the n-dimensional Boolean search space denoting a subspace where no satisfying assignments can be found. Cube subtraction systematically subtracts all clause-cubes from the universal cube that represents the entire n-dimensional Boolean search space. If the result is an empty cube then the problem is unsatisfiable; else the problem is satisfiable. This algorithm can be implemented by modifying the decision engine of a DPLL-based SAT solver. This modification restricts the choice of the next decision variable after a chronological backtrack step. Intuitively, the idea is to confine the search to a clause or a group of clauses, in the hope of getting out of non-solution regions faster and/or learning more useful clauses. This idea is implemented in the well-known zChaff solver. The test suite includes 1252 instances from the DIMACs, IBM-CNF bounded model checking and microprocessor formal verification benchmarks. Significant improvements in execution time and number of timed-out instances have been observed in all cases. Given the breadth of the experimental evaluation, the disjoint cube subtraction search is claimed to be an effective algorithm for improving the performance of SAT solvers.", "paper_title": "Decision heuristic for Davis Putnam, Loveland and Logemann algorithm satisfiability solving based on cube subtraction", "paper_id": "WOS:000253047000005"}