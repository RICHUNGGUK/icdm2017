{"auto_keywords": [{"score": 0.042530037163362074, "phrase": "csp"}, {"score": 0.00481495049065317, "phrase": "complex_system_modelling"}, {"score": 0.004752221133109136, "phrase": "fine-grained_massively_parallel_and_process-oriented_architecture"}, {"score": 0.004186253035932442, "phrase": "natural_world"}, {"score": 0.003954837422946628, "phrase": "process_mobility"}, {"score": 0.0037855348847339655, "phrase": "occam-pi_language"}, {"score": 0.0037361664435836845, "phrase": "case_study"}, {"score": 0.0035761913760242697, "phrase": "blood_vessel"}, {"score": 0.003378385493203297, "phrase": "emergent_behaviour"}, {"score": 0.003191485583025302, "phrase": "blood_vessel_wall"}, {"score": 0.0031223774204093713, "phrase": "blood_loss"}, {"score": 0.00308163068747474, "phrase": "three-dimensional_model"}, {"score": 0.002835599469639296, "phrase": "dynamic_and_mobile_capabilities"}, {"score": 0.0027863537694678094, "phrase": "general_principles"}, {"score": 0.002725994306480105, "phrase": "large_and_complex_system_models"}, {"score": 0.00266693888510356, "phrase": "described_case_study"}, {"score": 0.0025750928944698673, "phrase": "ever-changing_communication_topologies"}, {"score": 0.002464709648714996, "phrase": "race_hazards"}, {"score": 0.0023798115577749225, "phrase": "small_set"}, {"score": 0.002359046870732839, "phrase": "synchronization_patterns"}, {"score": 0.002297831085501592, "phrase": "safety_theorems"}, {"score": 0.0022777800735119405, "phrase": "compiled_occam-pi_codes"}, {"score": 0.0021896891011033105, "phrase": "shared-memory_multiprocessor_system"}, {"score": 0.0021049977753042253, "phrase": "standard_cluster_architectures"}], "paper_keywords": ["occam-pi", " concurrency", " CSP", " complex systems"], "paper_abstract": "A fine-grained massively parallel and process-oriented architecture for the modelling of complex systems is presented. We propose that the concurrency in the model simplifies its design and construction by directly reflecting the processes in the natural world. The architecture is based on CSP, extended with mechanisms for process mobility from the pi-calculus; implementations are presented using the occam-pi language. A case study, modelling platelets (possibly artificial) within a blood vessel, is described. The aim for this model is to engineer emergent behaviour: the clotting of platelets in response to a wound in the blood vessel wall and the staunching of blood loss. A three-dimensional model is constructed, along with mechanisms for visualization and interaction. Its expressiveness and efficiency relies strongly on the dynamic and mobile capabilities of occam-pi. General principles for the design of large and complex system models are drawn. The described case study runs to millions of processes engaged in ever-changing communication topologies. It is free from deadlock, livelock, race hazards and starvation by design, employing a small set of synchronization patterns for which we have proven safety theorems. Compiled occam-pi codes automatically and efficiently exploit all cores in a shared-memory multiprocessor system. They are also straightforward to distribute over standard cluster architectures. Copyright (C) 2007 CG Ritson & PH Welch.", "paper_title": "A process-oriented architecture for complex system modelling", "paper_id": "WOS:000277746100005"}