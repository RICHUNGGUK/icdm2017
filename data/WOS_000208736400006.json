{"auto_keywords": [{"score": 0.031235092053115452, "phrase": "dsl"}, {"score": 0.00481495049065317, "phrase": "cost-effectively_deploying_simulation_technology"}, {"score": 0.00454725669814484, "phrase": "appropriate_conceptual_model"}, {"score": 0.00443308765153716, "phrase": "conceptual_model"}, {"score": 0.004321772629297024, "phrase": "computational_model"}, {"score": 0.0040298010803060495, "phrase": "modelling_knowledge"}, {"score": 0.003953639783762917, "phrase": "reusable_form"}, {"score": 0.003757480190200645, "phrase": "conceptual_and_computational_modelling_phases"}, {"score": 0.00337224813954299, "phrase": "recent_innovations"}, {"score": 0.0033295966773779174, "phrase": "systems_engineering_and_software_engineering"}, {"score": 0.003245900020944865, "phrase": "omg_sysml"}, {"score": 0.0031044458412608084, "phrase": "ontology_implementation"}, {"score": 0.0030071857666598193, "phrase": "domain-specific_language"}, {"score": 0.0028397103530211415, "phrase": "simulation_applications"}, {"score": 0.0025000985765154028, "phrase": "model_transformation"}, {"score": 0.002391067964886602, "phrase": "computational_simulation_model"}, {"score": 0.002286781334850213, "phrase": "concept_implementations"}, {"score": 0.0021870332034407817, "phrase": "legacy_simulation_language"}, {"score": 0.0021049977753042253, "phrase": "object-oriented_simulation_language"}], "paper_keywords": ["ontology", " formal language", " model transformation", " domain-specific language"], "paper_abstract": "The challenges in cost-effectively deploying simulation technology are well known. Two major challenges are creating an appropriate conceptual model and translating that conceptual model correctly into a computational model. Ontologies have been widely discussed as one mechanism for capturing modelling knowledge in a reusable form, making it effectively available in the conceptual and computational modelling phases. In this paper, we show how ontologies can be effectively deployed in simulation using recent innovations from systems engineering and software engineering. We use OMG SysML (TM) to create an ontology implementation referred to as a domain-specific language, or DSL, for a class of simulation applications; the DSL is used to create a specific (conceptual) user model for a problem in the domain. We then use model transformation to automate the translation to a computational simulation model. Two proof-of-concept implementations are described, one using a legacy simulation language, and another using an object-oriented simulation language.", "paper_title": "Ontologies and simulation: a practical approach", "paper_id": "WOS:000208736400006"}