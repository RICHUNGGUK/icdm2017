{"auto_keywords": [{"score": 0.03491093349899493, "phrase": "bpm"}, {"score": 0.00481495049065317, "phrase": "software-based_dynamic_memory"}, {"score": 0.004634254474150777, "phrase": "main_memory_system"}, {"score": 0.004581373625744533, "phrase": "shared_resource"}, {"score": 0.0045464538515249085, "phrase": "modern_multicore_machines"}, {"score": 0.004460309246062286, "phrase": "serious_interference"}, {"score": 0.004409404470207072, "phrase": "reduced_throughput"}, {"score": 0.004227653047394939, "phrase": "interference_problem"}, {"score": 0.0041001740903338834, "phrase": "relative_complex_scheduling_logic"}, {"score": 0.004022451267521423, "phrase": "memory_controllers"}, {"score": 0.003916098498242888, "phrase": "expensive_hardware_design_and_manufacturing_overheads"}, {"score": 0.0038271712887391015, "phrase": "practical_software_approach"}, {"score": 0.003711723285313348, "phrase": "hardware_modifications"}, {"score": 0.003669330508576073, "phrase": "key_idea"}, {"score": 0.0035997452281985465, "phrase": "os_memory_management_system"}, {"score": 0.003545024951402821, "phrase": "page-coloring-based_bank-level"}, {"score": 0.003531474887552889, "phrase": "partitioning_mechanism"}, {"score": 0.0034512514926836667, "phrase": "dedicated_dram_banks"}, {"score": 0.003246091321090681, "phrase": "distinct_programs"}, {"score": 0.0031967297437935772, "phrase": "multiple_memory_banks"}, {"score": 0.003006654007926993, "phrase": "channel-level_partitioning"}, {"score": 0.002938317647182056, "phrase": "additional_gain"}, {"score": 0.0027955219242123013, "phrase": "diverse_application_memory_needs"}, {"score": 0.0027635643494432365, "phrase": "performance_degradation"}, {"score": 0.002731971103291716, "phrase": "resource_underutilization"}, {"score": 0.002680114113899346, "phrase": "dynamic_mechanism"}, {"score": 0.002272794656458419, "phrase": "eight-core_real_machines"}, {"score": 0.0022382002476510573, "phrase": "large_amount"}, {"score": 0.0021622717349518744, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "overall_system_throughput"}], "paper_keywords": ["Management", " Performance", " Design", " Main memory", " multicore", " interference", " memory scheduling"], "paper_abstract": "The main memory system is a shared resource in modern multicore machines that can result in serious interference leading to reduced throughput and unfairness. Many new memory scheduling mechanisms have been proposed to address the interference problem. However, these mechanisms usually employ relative complex scheduling logic and need modifications to Memory Controllers (MCs), which incur expensive hardware design and manufacturing overheads. This article presents a practical software approach to effectively eliminate the interference without any hardware modifications. The key idea is to modify the OS memory management system and adopt a page-coloring-based Bank-level Partitioning Mechanism (BPM) that allocates dedicated DRAM banks to each core (or thread). By using BPM, memory requests from distinct programs are segregated across multiple memory banks to promote locality/fairness and reduce interference. We further extend BPM to BPM+ by incorporating channel-level partitioning, on which we demonstrate additional gain over BPM in many cases. To achieve benefits in the presence of diverse application memory needs and avoid performance degradation due to resource underutilization, we propose a dynamic mechanism upon BPM/BPM+ that assigns appropriate bank/channel resources based on application memory/bandwidth demands monitored through PMU (performance-monitoring unit) and a low-overhead OS page table scanning process. We implement BPM/BPM+ in Linux 2.6.32.15 kernel and evaluate the technique on four-core and eight-core real machines by running a large amount of randomly generated multiprogrammed and multithreaded workloads. Experimental results show that BPM/BPM+ can improve the overall system throughput by 4.7%/5.9%, on average, (up to 8.6%/9.5%) and reduce the unfairness by an average of 4.2%/6.1% (up to 15.8%/13.9%).", "paper_title": "BPM/BPM plus : Software-Based Dynamic Memory Partitioning Mechanisms for Mitigating DRAM Bank-/Channel-Level Interferences in Multicore Systems", "paper_id": "WOS:000334573800005"}