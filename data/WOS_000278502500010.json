{"auto_keywords": [{"score": 0.04972074726974986, "phrase": "multiple_aggressor_crosstalk_faults"}, {"score": 0.04167736417839304, "phrase": "induced_delay"}, {"score": 0.041227579087992926, "phrase": "victim_net"}, {"score": 0.033272923024228795, "phrase": "fault_effect"}, {"score": 0.03255233578666324, "phrase": "primary_output"}, {"score": 0.0048149533512024095, "phrase": "atpg"}, {"score": 0.004637478829869904, "phrase": "significant_mechanism"}, {"score": 0.004602773636967002, "phrase": "circuit_failure"}, {"score": 0.004534136929881113, "phrase": "process_geometries"}, {"score": 0.004483328889361545, "phrase": "operation_frequencies"}, {"score": 0.004449772140968921, "phrase": "long_signal_nets"}, {"score": 0.004366970206156021, "phrase": "crosstalk_faults"}, {"score": 0.004253618550301311, "phrase": "higher_coupling_capacitance"}, {"score": 0.00422177384286051, "phrase": "overall_capacitance_ratio"}, {"score": 0.004143196873246147, "phrase": "typical_long_net"}, {"score": 0.004096751549280256, "phrase": "multiple_aggressors"}, {"score": 0.003990385737207714, "phrase": "maximal_crosstalk"}, {"score": 0.003701401653850141, "phrase": "maximum_noise"}, {"score": 0.0036052633308076933, "phrase": "pattern_generation"}, {"score": 0.0035248419365839856, "phrase": "maximal_subset"}, {"score": 0.003446208270665051, "phrase": "actual_coupling_capacitance_value"}, {"score": 0.003407549468745519, "phrase": "close_temporal_proximity"}, {"score": 0.003369322866499541, "phrase": "victim_net_transition"}, {"score": 0.0033315236647127734, "phrase": "max-satisfiability_problem"}, {"score": 0.0032817813775647756, "phrase": "fault_effect_propagation_condition"}, {"score": 0.003220643255032943, "phrase": "input_signal_assignment"}, {"score": 0.002987236799291296, "phrase": "automatic_test_pattern_generation"}, {"score": 0.0028769371032728733, "phrase": "unit_delay_models"}, {"score": 0.0026384167183586015, "phrase": "maximal_aggressor_excitation"}, {"score": 0.0026186324161493225, "phrase": "fault_effect_propagation"}, {"score": 0.0024748913336907923, "phrase": "additional_ilp_constraints"}, {"score": 0.002437907960209364, "phrase": "integrated_ilp_formulation"}, {"score": 0.0024196235355517827, "phrase": "error_propagation"}, {"score": 0.0023745087648471613, "phrase": "gate_delays"}, {"score": 0.0023390219342052623, "phrase": "circuit_transformation"}, {"score": 0.0023127544795063263, "phrase": "proposed_technique"}, {"score": 0.0022105951175680856, "phrase": "total_capacitance"}, {"score": 0.0021369416775353107, "phrase": "zero_delay"}, {"score": 0.0021049977753042253, "phrase": "variable_delay_case"}], "paper_keywords": ["Circuit partitioning", " fault effect propagation", " Integer Linear Programming", " multiple aggressor crosstalk faults", " stuck-at fault ATPG"], "paper_abstract": "Crosstalk faults have emerged as a significant mechanism of circuit failure due to decreasing process geometries and increasing operation frequencies. Long signal nets are highly susceptible to crosstalk faults because they tend to have a higher coupling capacitance to overall capacitance ratio. Moreover, a typical long net also has multiple aggressors. In generating patterns to create maximal crosstalk induced delay on a victim net, it may be impossible to activate all aggressors logically or simultaneously to constructively induce maximum noise at the victim. Therefore, pattern generation must focus on activating a maximal subset of aggressors, weighted by actual coupling capacitance value, in close temporal proximity of the victim net transition. This max-satisfiability problem is constrained by fault effect propagation condition which involves determining an input signal assignment so as to propagate the fault effect at the victim to the primary output. In this paper, we present Automatic Test Pattern Generation (ATPG) solutions for multiple aggressor crosstalk faults for zero and unit delay models and compare the magnitude of crosstalk induced delay at the victim net. Our solution involves a combination of 0-1 Integer Linear Programming (ILP), for maximal aggressor excitation. Fault effect propagation is solved independently by using traditional stuck-at fault ATPG or by generating additional ILP constraints thus forming a integrated ILP formulation with error propagation. The effect of gate delays is summed by circuit transformation. The proposed technique was applied to ISCAS85 benchmark circuits. Results indicate that the percentage of total capacitance that can be switched varies from 75-100% for zero delay and 30-80% for variable delay case while achieving propagation of the fault effect to primary output.", "paper_title": "On ATPG for Multiple Aggressor Crosstalk Faults", "paper_id": "WOS:000278502500010"}