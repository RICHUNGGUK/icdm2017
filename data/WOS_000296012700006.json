{"auto_keywords": [{"score": 0.04069837343856593, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "optimizing_monte_carlo"}, {"score": 0.004704699244406775, "phrase": "graphics_hardware"}, {"score": 0.004596960835906736, "phrase": "radiosity_method"}, {"score": 0.0043215158337835706, "phrase": "highly_realistic_synthetic_images"}, {"score": 0.0039694170761766226, "phrase": "monte_carlo_radiosity_algorithm"}, {"score": 0.0038189831370308443, "phrase": "cuda."}, {"score": 0.0032718761046588835, "phrase": "graphics_card_structure"}, {"score": 0.0031968441980848436, "phrase": "convex_partition_method"}, {"score": 0.003051887221639784, "phrase": "data_locality"}, {"score": 0.002913483929932102, "phrase": "ray_shooting_procedure"}, {"score": 0.0025942468561537682, "phrase": "intersection_calculation"}, {"score": 0.002419708657850547, "phrase": "execution_times"}, {"score": 0.0023099082804523044, "phrase": "previous_solutions"}, {"score": 0.0021544587602892466, "phrase": "cpu_results"}, {"score": 0.0021049977753042253, "phrase": "non-regular_algorithms"}], "paper_keywords": ["Radiosity", " Monte Carlo method", " GPU", " Ray shooting"], "paper_abstract": "The radiosity method is usually employed for the rendering of highly realistic synthetic images. In this paper we present an implementation of the Monte Carlo radiosity algorithm on the GPU using CUDA. Our proposal is based on the partition of the scene into sub-scenes to be processed in parallel to exploit the graphics card structure. The convex partition method employed permits the exploitation of data locality and the optimization of the ray shooting procedure due to the minimization of the number of objects to be tested in the intersection calculation. The results are good in terms of execution times, increasing the flexibility of previous solutions and demonstrating that the GPU can outperform the CPU results even for non-regular algorithms.", "paper_title": "Optimizing Monte Carlo radiosity on graphics hardware", "paper_id": "WOS:000296012700006"}