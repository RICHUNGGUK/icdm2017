{"auto_keywords": [{"score": 0.03523476499109691, "phrase": "avispa"}, {"score": 0.00481495049065317, "phrase": "software_process_models"}, {"score": 0.004655285779819366, "phrase": "software_development_process"}, {"score": 0.004577440795549049, "phrase": "common_means"}, {"score": 0.004450568197899267, "phrase": "software_process"}, {"score": 0.004327196832280818, "phrase": "challenging_and_expensive_endeavor"}, {"score": 0.004230956171850591, "phrase": "well_specified_process"}, {"score": 0.0038668462001710314, "phrase": "process_quality"}, {"score": 0.003802135020791801, "phrase": "relevant_concern"}, {"score": 0.0036759314172445934, "phrase": "conceptual_integrity"}, {"score": 0.003018668521745676, "phrase": "error_patterns"}, {"score": 0.0029348729207661225, "phrase": "different_blueprints"}, {"score": 0.0028857130140890787, "phrase": "detailed_description"}, {"score": 0.0025928815987676535, "phrase": "interactive_mechanism"}, {"score": 0.0025494354909453847, "phrase": "new_analysis_scripts"}, {"score": 0.0024926348205500715, "phrase": "new_patterns"}, {"score": 0.0023166075278110254, "phrase": "industrial_case_study"}, {"score": 0.0022906498741695094, "phrase": "process_engineers"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software visualization", " software process verification", " software process analysis"], "paper_abstract": "Defining and formalizing the software development process is a common means for improving it. Software process modeling is often a challenging and expensive endeavor, because a well specified process may still include inefficiencies that are hardly detected before enacting it. Thus, assessing process quality is a relevant concern to improve several aspects such as conceptual integrity, correctness, usability, maintainability, and performance, among others. This paper describes Avispa, a graphical tool that allows analyzing the quality of SPEM 2.0 software processes models. Avispa identifies a series of error patterns and highlights them in different blueprints. A detailed description of the internals of Avispa is provided to show both its structure and its extensibility mechanisms. We also present an interactive mechanism to define new analysis scripts and to implement new patterns and blueprints. This paper illustrates the application of Avispa in an industrial case study where process engineers are assisted to analyze the quality of their process. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "AVISPA: a tool for analyzing software process models", "paper_id": "WOS:000334503900006"}