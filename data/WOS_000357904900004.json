{"auto_keywords": [{"score": 0.05007195750902011, "phrase": "orm_models"}, {"score": 0.035366979368155665, "phrase": "alloy"}, {"score": 0.004513957235071457, "phrase": "rich_and_popular_conceptual_modeling_method"}, {"score": 0.004456056845063004, "phrase": "orm"}, {"score": 0.0043144799365586375, "phrase": "data_modeling"}, {"score": 0.0042591158963728665, "phrase": "ontology_engineering"}, {"score": 0.004204459295724526, "phrase": "modeling_business_rules"}, {"score": 0.00409723267214392, "phrase": "data_warehouses"}, {"score": 0.0040186038781533946, "phrase": "engineering_and_web_forms"}, {"score": 0.0038908817250961633, "phrase": "satisfiability_testing"}, {"score": 0.003767203575060969, "phrase": "modeling_mistakes"}, {"score": 0.003694884775158077, "phrase": "early_stages"}, {"score": 0.0034636656250083744, "phrase": "lightweight_formalization"}, {"score": 0.0033971539563683174, "phrase": "orm_meta-model"}, {"score": 0.0032051601987130207, "phrase": "toolkit_one"}, {"score": 0.002319566486828135, "phrase": "unsatisfiability_patterns"}, {"score": 0.0022312377180023282, "phrase": "alloy_representation"}, {"score": 0.0021883400011393564, "phrase": "orm_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Formal specification", " Object-role modeling", " Satisfiability checking"], "paper_abstract": "ORM (Object Role Modeling) is a rich and popular conceptual modeling method. ORM has been used for data modeling, ontology engineering, modeling business rules, XML-Schemes and data warehouses, requirements engineering and web forms. Automated reasoning like satisfiability testing allows developers to detect modeling mistakes in the early stages of development. In this paper we propose a lightweight formalization of the ORM meta-model in Alloy. Using this meta-model as a toolkit one can easily specify ORM models in Alloy and verify various properties on them using the Alloy Analyzer. In order to achieve scalability, we use the cardinality of concepts to model their population. This increases the scalability of the approach dramatically. To show an application of the meta-model we formalize some unsatisfiability patterns and check them on the Alloy representation of the ORM model. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Lightweight formalization and validation of ORM models", "paper_id": "WOS:000357904900004"}