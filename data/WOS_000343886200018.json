{"auto_keywords": [{"score": 0.040479390128548516, "phrase": "reservation-based_schedulers"}, {"score": 0.02853210167833684, "phrase": "reservation-period_boundaries"}, {"score": 0.00481495049065317, "phrase": "soft-real-time_applications"}, {"score": 0.004606023493393774, "phrase": "soft_real-time"}, {"score": 0.004430629452265786, "phrase": "occasional_violations"}, {"score": 0.004309434349688514, "phrase": "overall_cpu_utilization"}, {"score": 0.004238307626560739, "phrase": "soft_real-time_system"}, {"score": 0.004076858589744185, "phrase": "relaxed_nature"}, {"score": 0.003158088307044493, "phrase": "current_usage"}, {"score": 0.003105905142768581, "phrase": "worst-case_usage"}, {"score": 0.0029709144755382787, "phrase": "overall_utilization"}, {"score": 0.0029380909574836587, "phrase": "cpu_time"}, {"score": 0.002794802975530612, "phrase": "adaptive_budget_allocation_algorithm"}, {"score": 0.0027486060614330043, "phrase": "allocated_budget"}, {"score": 0.002614534850703364, "phrase": "future_cpu_usage"}, {"score": 0.0025287979714720423, "phrase": "previous_algorithms"}, {"score": 0.002445865715873089, "phrase": "job_completion"}, {"score": 0.002418829014435841, "phrase": "simulation_results"}, {"score": 0.00230080652063411, "phrase": "faster_response_time"}, {"score": 0.0021049977753042253, "phrase": "proposed_system"}], "paper_keywords": ["Real-time systems", " scheduling", " application-transparent adaptation", " modeling and prediction", " queuing theory"], "paper_abstract": "An application is said to be soft real-time if it is able to tolerate occasional violations of its timing constraints. The overall CPU utilization of a soft real-time system can be improved by exploiting the relaxed nature of its timing constraints. One possible approach is by adapting CPU-budgets in reservation-based schedulers. Reservation-based schedulers allow parts of the system and groups of tasks to be isolated from one another. By making the reservations adaptive, resources such as CPU can be allocated to tasks based on current usage rather than worst-case usage, which can help to improve the overall utilization of CPU time committed to tasks. This paper presents an adaptive budget allocation algorithm where the allocated budget is adapted at reservation-period boundaries based on predictions of future CPU usage. This approach differs from previous algorithms where adaptations are performed on job completion. Simulation results show that adaptations at reservation-period boundaries allow for a faster response time. Results from experiments performed on a prototype demonstrate the robustness and effectiveness of the proposed system.", "paper_title": "Prediction-Based Asynchronous CPU-Budget Allocation for Soft-Real-Time Applications", "paper_id": "WOS:000343886200018"}