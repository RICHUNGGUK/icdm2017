{"auto_keywords": [{"score": 0.038160962533097365, "phrase": "mplot"}, {"score": 0.010544770230912619, "phrase": "wireless_networks"}, {"score": 0.00481495049065317, "phrase": "exploit_multipath_diversity"}, {"score": 0.004707810093520679, "phrase": "wireless_mesh_networks"}, {"score": 0.00461786618294789, "phrase": "multiple_paths"}, {"score": 0.004500596283281564, "phrase": "different_technologies"}, {"score": 0.004372207937638619, "phrase": "end-to-end_transport_connections"}, {"score": 0.004193169496350484, "phrase": "multipath_transport_protocol"}, {"score": 0.0041262692428189985, "phrase": "carefully_crafted_set"}, {"score": 0.004073537214004282, "phrase": "tcp"}, {"score": 0.00399564102224961, "phrase": "available_bandwidth"}, {"score": 0.0038319633481562402, "phrase": "significant_goodput_gains"}, {"score": 0.0036986954643952203, "phrase": "average_loss_rates"}, {"score": 0.0035017626442279386, "phrase": "congestion_control"}, {"score": 0.003456965170485635, "phrase": "end-to-end_transport_protocol"}, {"score": 0.003369076363771074, "phrase": "individual_paths"}, {"score": 0.0033259706583441857, "phrase": "reliability_mechanism"}, {"score": 0.003283414652626541, "phrase": "aggregate_set"}, {"score": 0.003220596121589591, "phrase": "end-to-end_session"}, {"score": 0.0031691634837160572, "phrase": "congestion_and_link_losses"}, {"score": 0.0031488204239389335, "phrase": "explicit_congestion_notification"}, {"score": 0.003078639412163634, "phrase": "forward_error_correction"}, {"score": 0.0030588799725286466, "phrase": "fec"}, {"score": 0.003000340083107413, "phrase": "data_losses"}, {"score": 0.002952414496287241, "phrase": "dynamic_packet_mapping"}, {"score": 0.002914624187933378, "phrase": "current_path_characteristics"}, {"score": 0.002813169398244266, "phrase": "erasure_codes"}, {"score": 0.0027951050793612, "phrase": "block-level_recovery"}, {"score": 0.0027416032255956585, "phrase": "receiving_transport_entity"}, {"score": 0.0026632593674563855, "phrase": "necessary_number"}, {"score": 0.0025132071574192672, "phrase": "theoretical_analysis"}, {"score": 0.00248903151226017, "phrase": "different_design_choices"}, {"score": 0.002379243574322898, "phrase": "desirable_tradeoff"}, {"score": 0.0023487724551034227, "phrase": "data_recovery_delay"}, {"score": 0.0022379331011153146, "phrase": "test_scenarios"}, {"score": 0.0021880094145128957, "phrase": "path_diversity"}, {"score": 0.00214610313234565, "phrase": "path_bandwidths"}, {"score": 0.0021049977753042253, "phrase": "conventional_tcp_flow"}], "paper_keywords": ["Diversity gain", " lossy environments", " multihop wireless networks", " multipath", " TCP", " transport protocols"], "paper_abstract": "Wireless networks (including wireless mesh networks) provide opportunities for using multiple paths. Multihoming of hosts, possibly using different technologies and providers, also makes it attractive for end-to-end transport connections to exploit multiple paths. In this paper, we propose a multipath transport protocol, based on a carefully crafted set of enhancements to TCP, that effectively utilizes the available bandwidth and diversity provided by heterogeneous, lossy wireless paths. Our Multi-Path LOss-Tolerant (MPLOT) transport protocol can be used to obtain significant goodput gains in wireless networks, subject to bursty, correlated losses with average loss rates as high as 50%. MPLOT is built around the principle of separability of reliability and congestion control functions in an end-to-end transport protocol. Congestion control is performed separately on individual paths, and the reliability mechanism works over the aggregate set of paths available for an end-to-end session. MPLOT distinguishes between congestion and link losses through Explicit Congestion Notification (ECN), and uses Forward Error Correction (FEC) coding to recover from data losses. MPLOT uses a dynamic packet mapping based on the current path characteristics to choose a path for a packet. Use of erasure codes and block-level recovery ensures that in MPLOT the receiving transport entity can recover all data as long as a necessary number of packets in the block are received, irrespective of which packets are lost. We present a theoretical analysis of the different design choices of MPLOT and show that MPLOT chooses its policies and parameters such that a desirable tradeoff between goodput with data recovery delay is attained. We evaluate MPLOT, through simulations, under a variety of test scenarios and demonstrate that it effectively exploits path diversity in addition to efficiently aggregating path bandwidths while remaining fair to a conventional TCP flow on each path.", "paper_title": "A Transport Protocol to Exploit Multipath Diversity in Wireless Networks", "paper_id": "WOS:000307895100004"}