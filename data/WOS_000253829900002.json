{"auto_keywords": [{"score": 0.05007578954347616, "phrase": "navier-stokes_equations"}, {"score": 0.049636680610423214, "phrase": "fortran"}, {"score": 0.025405481056432824, "phrase": "development_time"}, {"score": 0.004704495156558224, "phrase": "computational_complexity_theory"}, {"score": 0.0046394362688524475, "phrase": "grid-free_abstraction"}, {"score": 0.0044495843279816075, "phrase": "novel_complexity_analysis"}, {"score": 0.004388035083357706, "phrase": "structured_programming_time"}, {"score": 0.004208427318712072, "phrase": "program_lines"}, {"score": 0.004092774981286263, "phrase": "object-oriented_strategy"}, {"score": 0.004036141321779216, "phrase": "mathematical_objects"}, {"score": 0.00398028819691605, "phrase": "quadratic_estimate_scale-invariant"}, {"score": 0.00383508177668219, "phrase": "limiting_factor"}, {"score": 0.00379961236486522, "phrase": "program_development"}, {"score": 0.0035110198699787013, "phrase": "grant_et_al"}, {"score": 0.003414467360488913, "phrase": "grid-free_fortran_programming"}, {"score": 0.003336031521101184, "phrase": "procedure_calls"}, {"score": 0.0032745778756077693, "phrase": "related_need"}, {"score": 0.003140401552000472, "phrase": "shorter_migration_path"}, {"score": 0.0031113369425402287, "phrase": "fortran_programmers"}, {"score": 0.003068242064611088, "phrase": "grid-free_strategy"}, {"score": 0.0029838294169759663, "phrase": "physical-space_driver"}, {"score": 0.002942495422585405, "phrase": "fourier-space_navier-stokes_solver"}, {"score": 0.0028482561434303886, "phrase": "continuous_mathematical_model"}, {"score": 0.0028087949095629955, "phrase": "discrete_numerics"}, {"score": 0.0026811531172346676, "phrase": "run-time_profile"}, {"score": 0.0026440008776012665, "phrase": "grid-free_design"}, {"score": 0.0023537101705489957, "phrase": "amdahl's_law"}, {"score": 0.0023210846870653757, "phrase": "total_solution_time"}, {"score": 0.0021049977753042253, "phrase": "maximum_possible_speedup"}], "paper_keywords": ["design", " performance", " Navier-Stokes equations", " Fortran", " computational fluid dynamics", " coordinate-free programming", " grid-free programming", " complexity", " scientific computing"], "paper_abstract": "Computational complexity theory inspires a grid-free abstraction of the Navier-Stokes equations in Fortran 95/2003. A novel complexity analysis estimates that structured programming time grows at least quadratically with the number of program lines. Further analysis demonstrates how an object-oriented strategy focused on mathematical objects renders the quadratic estimate scale-invariant, so the time required for the limiting factor in program development (debugging) no longer grows as the code grows. Compared to the coordinate-free C++ programming of Grant et al. [2000], grid-free Fortran programming eliminates a layer of procedure calls, eliminates a related need for the C++ template construct, and offers a shorter migration path for Fortran programmers. The grid-free strategy is demonstrated by constructing a physical-space driver for a Fourier-space Navier-Stokes solver. Separating the expression of the continuous mathematical model from the discrete numerics clarifies issues that are otherwise easily conflated. A run-time profile suggests that grid-free design substantially reduces the fraction of the procedures that significantly impact runtime, freeing more code to be structured in ways that reduce development time. Applying Amdahl's law to the total solution time (development time plus run time) leads to a strategy that negligibly impacts development time but achieves 58% of the maximum possible speedup.", "paper_title": "A grid-free abstraction of the Navier-Stokes equations in Fortran 95/2003", "paper_id": "WOS:000253829900002"}