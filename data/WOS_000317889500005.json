{"auto_keywords": [{"score": 0.029709021816766247, "phrase": "optimal_solution"}, {"score": 0.00481495049065317, "phrase": "linear_chain"}, {"score": 0.004743164872278112, "phrase": "heterogeneous_systems"}, {"score": 0.004399905285945236, "phrase": "heterogeneous_platforms"}, {"score": 0.004285702427563952, "phrase": "linear_graphs"}, {"score": 0.003886770770835211, "phrase": "target_platform"}, {"score": 0.0034984340449789745, "phrase": "costly_setups"}, {"score": 0.0028986672783671147, "phrase": "specialized_machines"}, {"score": 0.0028661330049356186, "phrase": "identical_machines"}, {"score": 0.0027499252661633525, "phrase": "polynomial_time"}, {"score": 0.002689628696343546, "phrase": "np"}, {"score": 0.0025892330566358503, "phrase": "different_speeds"}, {"score": 0.0024287485834314027, "phrase": "best_heuristics"}, {"score": 0.0024014759148123736, "phrase": "good_throughput"}, {"score": 0.0023127544795063263, "phrase": "random_mapping"}, {"score": 0.0022022878843247257, "phrase": "particular_cases"}, {"score": 0.0021775526153883355, "phrase": "optimal_throughput"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heterogeneous computing", " Scheduling", " Throughput maximization", " Failure", " Streaming applications", " Complexity results", " Linear programming"], "paper_abstract": "In this paper, we study the problem of optimizing the throughput of streaming applications for heterogeneous platforms subject to failures. Applications are linear graphs of tasks (pipelines), with a type associated to each task. The challenge is to map each task onto one machine of a target platform, each machine having to be specialized to process only one task type, given that every machine is able to process all the types before being specialized in order to avoid costly setups. The objective is to maximize the throughput, i.e., the rate at which jobs can be processed when accounting for failures. Each instance can thus be performed by any machine specialized in its type and the workload of the system can be shared among a set of specialized machines. For identical machines, we prove that an optimal solution can be computed in polynomial time. However the problem becomes NP-hard when two machines may compute the same task type at different speeds. Several polynomial time heuristics are designed for the most realistic specialized settings. Simulation results assess their efficiency, showing that the best heuristics obtain a good throughput, much better than the throughput obtained with a random mapping. Moreover, the throughput is close to the optimal solution in the particular cases where the optimal throughput can be computed. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Scheduling linear chain streaming applications on heterogeneous systems with failures", "paper_id": "WOS:000317889500005"}