{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "history_independence"}, {"score": 0.010236831761311795, "phrase": "data_structures"}, {"score": 0.009628342150274463, "phrase": "data_structure"}, {"score": 0.009524742486402499, "phrase": "memory_layout"}, {"score": 0.009320843958100076, "phrase": "additional_information"}, {"score": 0.008703318854115702, "phrase": "naor"}, {"score": 0.008640670695594937, "phrase": "teague"}, {"score": 0.0085476056799441, "phrase": "stronger_notion"}, {"score": 0.004762893197005439, "phrase": "independent_data_structures"}, {"score": 0.004694357514083187, "phrase": "micciancio"}, {"score": 0.004576763709613412, "phrase": "strong_security_property"}, {"score": 0.003461702544605219, "phrase": "open_question"}, {"score": 0.0031386091093713706, "phrase": "comparison-based_algorithms"}, {"score": 0.002993947751499058, "phrase": "large_class"}, {"score": 0.002855934865505357, "phrase": "queue_abstract_data_structures"}, {"score": 0.0028045585284215044, "phrase": "complementary_upper_bounds"}, {"score": 0.0027641218567092665, "phrase": "heap_abstract_data_structure"}, {"score": 0.0027242666160349938, "phrase": "weakly_history"}, {"score": 0.002684984491718288, "phrase": "comparison_based_model"}, {"score": 0.0025704954243348276, "phrase": "similar_result"}, {"score": 0.0024519545383399773, "phrase": "first_separation"}, {"score": 0.0022801453935251503, "phrase": "logarithmic_time"}, {"score": 0.002239103860494545, "phrase": "constant_time"}, {"score": 0.002206801982145622, "phrase": "weaker_definition"}, {"score": 0.00217496508306238, "phrase": "linear_time"}, {"score": 0.002151388538895855, "phrase": "stronger_definition"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["history independent data-structures", " lower bounds", " privacy", " the heap data-structure", " the queue data-structure"], "paper_abstract": "History independent data structures, presented by Micciancio, are data structures that possess a strong security property: even if an intruder manages to get a copy of the data structure, the memory layout of the structure yields no additional information on the history of operations applied on the structure beyond the information obtainable from the content itself. Naor and Teague proposed a stronger notion of history independence in which the intruder may break into the system several times without being noticed and still obtain no additional information from reading the memory layout of the data structure. An open question posed by Naor and Teague is whether these two notions are equally hard to obtain. In this paper we provide a separation between the two requirements for comparison-based algorithms. We show very strong lower bounds for obtaining the stronger notion of history independence for a large class of data structures, including, for example, the heap and the queue abstract data structures. We also provide complementary upper bounds showing that the heap abstract data structure may be made weakly history independent in the comparison based model without incurring any additional (asymptotic) cost on any of its operations. (A similar result is easy for the queue.) Thus, we obtain the first separation between the two notions of history independence. The gap we obtain is exponential: some operations may be executed in logarithmic time (or even in constant time) with the weaker definition, but require linear time with the stronger definition. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Lower and upper bounds on obtaining history independence", "paper_id": "WOS:000235090500005"}