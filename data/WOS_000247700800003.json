{"auto_keywords": [{"score": 0.04925653227018551, "phrase": "navier-stokes"}, {"score": 0.044087035625208056, "phrase": "dns"}, {"score": 0.00481495049065317, "phrase": "spectral_element_channel_flow_solver"}, {"score": 0.004650896226390719, "phrase": "direct_numerical_simulation"}, {"score": 0.004518442937844318, "phrase": "turbulent_flows"}, {"score": 0.004364446928620496, "phrase": "fine_spatial_meshes"}, {"score": 0.004314285113050873, "phrase": "small_timesteps"}, {"score": 0.004119313626110943, "phrase": "flow_field"}, {"score": 0.0038654774211631564, "phrase": "supercomputing_machines"}, {"score": 0.003777088546146369, "phrase": "rapid_development"}, {"score": 0.0033257460346754687, "phrase": "dns_algorithms"}, {"score": 0.003287482882222731, "phrase": "parallelization_methods"}, {"score": 0.003138768436081888, "phrase": "massively_parallel_machines"}, {"score": 0.0030847461428168614, "phrase": "highly_parallelizable_algorithm"}, {"score": 0.0029967610945411593, "phrase": "turbulent_channel_flow"}, {"score": 0.0029281780903782284, "phrase": "efficient_scaling"}, {"score": 0.0025929837295811673, "phrase": "experimental_data"}, {"score": 0.0024899850926034567, "phrase": "proposed_numerical_algorithm"}, {"score": 0.002391067964886602, "phrase": "petascale_computing_machines"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel computing", " spectral/hp elements", " direct numerical simulation", " turbulent channel flow", " performance modeling"], "paper_abstract": "Direct numerical simulation (DNS) of turbulent flows is widely recognized to demand fine spatial meshes, small timesteps, and very long runtimes to properly resolve the flow field. To overcome these limitations, most DNS is performed on supercomputing machines. With the rapid development of terascale (and, eventually, petascale) computing on thousands of processors, it has become imperative to consider the development of DNS algorithms and parallelization methods that are capable of fully exploiting these massively parallel machines. A highly parallelizable algorithm for the simulation of turbulent channel flow that allows for efficient scaling on several thousand processors is presented. A model that accurately predicts the performance of the algorithm is developed and compared with experimental data. The results demonstrate that the proposed numerical algorithm is capable of scaling well on petascale computing machines and thus will allow for the development and analysis of high Reynolds number channel flows. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "Parallelization and scalability of a spectral element channel flow solver for incompressible Navier-Stokes equations", "paper_id": "WOS:000247700800003"}