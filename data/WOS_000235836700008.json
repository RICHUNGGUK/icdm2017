{"auto_keywords": [{"score": 0.043213838306217146, "phrase": "weakly"}, {"score": 0.00481495049065317, "phrase": "imperative_programs"}, {"score": 0.0046238380150870435, "phrase": "exponential_complexity"}, {"score": 0.004549524321051407, "phrase": "polyhedral_operations"}, {"score": 0.004440277230269978, "phrase": "image_computation"}, {"score": 0.00436890075128947, "phrase": "convex_hull"}, {"score": 0.004195418010131832, "phrase": "polyhedral_analysis"}, {"score": 0.004094639048362357, "phrase": "relational_domains"}, {"score": 0.0038375280115736958, "phrase": "scalability_issue"}, {"score": 0.003236596168242036, "phrase": "candidate_expressions"}, {"score": 0.0029126002350975634, "phrase": "strong_invariants"}, {"score": 0.002796782643988021, "phrase": "polynomial_time_approach"}, {"score": 0.002751751956416832, "phrase": "strongly_relational_analysis"}, {"score": 0.0026638482306228575, "phrase": "efficient_implementations"}, {"score": 0.002578745296475411, "phrase": "post_condition_operations"}, {"score": 0.0022830706430588482, "phrase": "strongly_relational_polyhedral_analyzer"}, {"score": 0.0021745003291048356, "phrase": "c_language"}, {"score": 0.0021394674440767124, "phrase": "initial_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "benchmark_examples"}], "paper_keywords": [""], "paper_abstract": "Polyhedral analysis infers invariant linear equalities and inequalities of imperative programs. However, the exponential complexity of polyhedral operations such as image computation and convex hull limits the applicability of polyhedral analysis. Weakly relational domains such as intervals and octagons address the scalability issue by considering polyhedra whose constraints are drawn from a restricted, user-specified class. On the other hand, these domains rely solely on candidate expressions provided by the user. Therefore, they often fail to produce strong invariants. We propose a polynomial time approach to strongly relational analysis. We provide efficient implementations of join and post condition operations, achieving a trade off between performance and accuracy, We have implemented a strongly relational polyhedral analyzer for a subset of the C language. Initial experimental results on benchmark examples are encouraging.", "paper_title": "Efficient strongly relational polyhedral analysis", "paper_id": "WOS:000235836700008"}