{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mixed_haptic_effects"}, {"score": 0.03896650159418718, "phrase": "haptic_effects"}, {"score": 0.004582722012454012, "phrase": "solid_haptic_effects"}, {"score": 0.003578600071301459, "phrase": "virtual_scenes"}, {"score": 0.0034543031591181546, "phrase": "polygon_meshes"}, {"score": 0.0034057975804778293, "phrase": "point_clouds"}, {"score": 0.003287482882222731, "phrase": "layered_textures"}, {"score": 0.003241312187060814, "phrase": "voxel_models"}, {"score": 0.003150900886669123, "phrase": "function-based_shapes"}, {"score": 0.002853808773854451, "phrase": "haptic_tool"}, {"score": 0.0024423826953133844, "phrase": "different_sizes"}, {"score": 0.002357457094026928, "phrase": "mutual_penetrations"}, {"score": 0.002259426425685763, "phrase": "efficient_and_flexible_rendering"}], "paper_keywords": ["Haptic interaction", " Collision detection", " Function-based modeling"], "paper_abstract": "Commonly, surface and solid haptic effects are defined in such a way that they hardly can be rendered together. We propose a method for defining mixed haptic effects including surface, solid, and force fields. These haptic effects can be applied to virtual scenes containing various objects, including polygon meshes, point clouds, impostors, and layered textures, voxel models as well as function-based shapes. Accordingly, we propose a way how to identify location of the haptic tool in such virtual scenes as well as consistently and seamlessly determine haptic effects when the haptic tool moves in the scenes with objects having different sizes, locations, and mutual penetrations. To provide for an efficient and flexible rendering of haptic effects, we propose to concurrently use explicit, implicit and parametric functions, and algorithmic procedures.", "paper_title": "Function-based approach to mixed haptic effects rendering", "paper_id": "WOS:000288707700008"}