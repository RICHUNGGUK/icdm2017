{"auto_keywords": [{"score": 0.03061376674671666, "phrase": "mddu"}, {"score": 0.00481495049065317, "phrase": "deadlock_detection_methodology"}, {"score": 0.004766090327062509, "phrase": "multiunit_resource_systems"}, {"score": 0.004669845798526297, "phrase": "system-on-chip"}, {"score": 0.004529093447865156, "phrase": "novel_parallel_multiunit_resource"}, {"score": 0.004506048850130758, "phrase": "deadlock_detection_algorithm"}, {"score": 0.004460309246062286, "phrase": "mdda"}, {"score": 0.004238452771031322, "phrase": "deadlock_detection_unit"}, {"score": 0.00342054627009158, "phrase": "multiunit_resources"}, {"score": 0.0031682817605340028, "phrase": "sink_nodes"}, {"score": 0.0029951555610569225, "phrase": "resource_allocations"}, {"score": 0.0028459677232555176, "phrase": "fast_and_deterministic_deadlock_detection_mechanism"}, {"score": 0.0025433263646920364, "phrase": "system_designs"}, {"score": 0.002261204313587616, "phrase": "mpsoc_area"}], "paper_keywords": ["Deadlock detection in hardware", " multiunit resource systems", " multiprocessor system-on-chips"], "paper_abstract": "This article describes a novel parallel Multiunit resource Deadlock Detection Algorithm (MDDA) and its hardware implementation, Multiunit resource hardware Deadlock Detection Unit (MDDU). Its contributions are given as follows: 1) the first O(1) hardware deadlock detection, 2) reduced O(min(m, n)) preparation, where m and n are the number of processes and resources, respectively, and 3) support for multiunit resources. O(min(m, n)), previously O(m x n)), is achieved by performing all the searches for sink nodes for each and every resource in parallel in hardware over two matrices representing resource allocations, as well as other auxiliary matrices. MDDU provides a fast and deterministic deadlock detection mechanism for Multiprocessor System-on-Chips (MPSoCs), which we predict will become prevalent in the near future in system designs. Our experiments demonstrate that MDDU always takes two clock cycles to detect deadlock regardless of the size of the system. Last, the MPSoC area overhead due to MDDU is small, approximately, 0.024 percent for MDDU16 x 16 on our example MPSoC.", "paper_title": "A Novel O(1) Deadlock Detection Methodology for Multiunit Resource Systems and Its Hardware Implementation for System-on-Chip", "paper_id": "WOS:000260309000005"}