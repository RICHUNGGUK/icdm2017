{"auto_keywords": [{"score": 0.04864906299006131, "phrase": "multiprocessor_real-time_systems"}, {"score": 0.023320214681933946, "phrase": "finish_time"}, {"score": 0.02246846748295754, "phrase": "actual_execution_times"}, {"score": 0.00481495049065317, "phrase": "least_laxity_first"}, {"score": 0.004566123591480369, "phrase": "priority-driven_scheduling_algorithm"}, {"score": 0.004106225442735525, "phrase": "start_time"}, {"score": 0.0035281264325950556, "phrase": "start_times"}, {"score": 0.002874257080906824, "phrase": "job-level_dynamic_priority_algorithm"}, {"score": 0.0026438880533289893, "phrase": "necessary_and_sufficient_condition"}, {"score": 0.0025843206540392184, "phrase": "priority-driven_algorithm"}, {"score": 0.0023235629819760018, "phrase": "llf_scheduling"}], "paper_keywords": [""], "paper_abstract": "A priority-driven scheduling algorithm is said to be start time (finish time) predictable if the start time (finish time) of jobs in the schedule where each job executes for its actual execution time is bounded by the start times (finish times) of jobs in the schedules where each job executes for its maximum/minimum execution time. In this paper, we study the predictability of a job-level dynamic priority algorithm, LLF (Least Laxity First), on multiprocessor real-time systems. We present a necessary and sufficient condition for a priority-driven algorithm to be start time (finish time) predictable. Then, in LLF scheduling, we show that both the start time and the finish time are predictable if the actual execution times cannot be known. However, solely the finish time is predictable if the actual execution times can be known.", "paper_title": "Predictability of Least Laxity First scheduling algorithm on multiprocessor real-time systems", "paper_id": "WOS:000240081000076"}