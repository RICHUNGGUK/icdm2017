{"auto_keywords": [{"score": 0.04036754417187563, "phrase": "sqa"}, {"score": 0.03870854171147111, "phrase": "mcda_methods"}, {"score": 0.036088130880186024, "phrase": "existing_sqa_methods"}, {"score": 0.015719700919695684, "phrase": "multi-criteria_decision_analysis"}, {"score": 0.015385245343358485, "phrase": "software_products"}, {"score": 0.01235898166159686, "phrase": "mcda"}, {"score": 0.004543708337879809, "phrase": "software-based_systems"}, {"score": 0.004413846562278824, "phrase": "highest_quality"}, {"score": 0.004366106816225457, "phrase": "essential_prerequisite"}, {"score": 0.004287680323820891, "phrase": "guaranteed_quality"}, {"score": 0.004241299366498948, "phrase": "predictable_way"}, {"score": 0.004060718465754644, "phrase": "project_lifecycle"}, {"score": 0.004016782710006123, "phrase": "potential_approach"}, {"score": 0.003958937342925219, "phrase": "abstract_and_multi-dimensional_character"}, {"score": 0.0038737214010638745, "phrase": "software_quality_assessment"}, {"score": 0.0034995881411519925, "phrase": "sqa_method"}, {"score": 0.003399466007862412, "phrase": "potential_benefits"}, {"score": 0.003266443127727596, "phrase": "popular_mcda_methods"}, {"score": 0.003219368653079544, "phrase": "sqa."}, {"score": 0.0031272381208680613, "phrase": "sqa_methods"}, {"score": 0.0030267296900520217, "phrase": "exact_rationales"}, {"score": 0.0029830992938695033, "phrase": "particular_method"}, {"score": 0.0027341763737751467, "phrase": "relevant_requirements"}, {"score": 0.0025611773887867255, "phrase": "popular_mcda_techniques"}, {"score": 0.0023219374444738723, "phrase": "mcda."}, {"score": 0.0022472527731744974, "phrase": "future_research"}, {"score": 0.0021049977753042253, "phrase": "new_methods"}], "paper_keywords": [""], "paper_abstract": "Our great reliance on software-based systems and services nowadays requires software products of the highest quality. An essential prerequisite for developing software of guaranteed quality in a predictable way is the ability to model and objectively assess its quality throughout the project lifecycle. A potential approach must handle the abstract and multi-dimensional character of quality. Analogies between software quality assessment (SQA) and Multi-Criteria Decision Analysis (MCDA) motivated us to investigate how MCDA methods can support SQA. Thus we (1) identified the most relevant requirements for an SQA method, (2) reviewed existing SQA methods regarding potential benefits from using MCDA methods, and (3) assessed some popular MCDA methods regarding their applicability for SQA. We found that although a number of SQA methods proposed in recent years already adapt MCDA methods, the exact rationales for selecting a particular method are usually unclear or arbitrary. Usually, neither the goals nor the constraints of SQA are explicitly considered. Existing SQA methods do not meet the relevant requirements and mostly share the same weaknesses independent of whether they employ MCDA or not. In many cases, popular MCDA techniques are unsuitable for SQA because they do not meet its basic constraints, such as handling situations where data are scarce. We discuss the gaps identified in MCDA. The results led us to the conclusion that future research should focus on resolving the deficits of the existing SQA methods or of the most promising MCDA techniques rather than on inventing new methods from scratch.", "paper_title": "Adapting Multi-Criteria Decision Analysis for Assessing the Quality of Software Products. Current Approaches and Future Perspectives", "paper_id": "WOS:000332685300005"}