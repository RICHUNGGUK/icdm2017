{"auto_keywords": [{"score": 0.026679204136253968, "phrase": "generalized_two-server_problem"}, {"score": 0.02246846748295755, "phrase": "competitive_algorithm"}, {"score": 0.00481495049065317, "phrase": "generalized_on-line_two-server_problem"}, {"score": 0.004015458740397976, "phrase": "metric_space"}, {"score": 0.0035204268675160257, "phrase": "total_distance"}, {"score": 0.003327349929456035, "phrase": "special_case"}, {"score": 0.0032449610741097992, "phrase": "metric_spaces"}, {"score": 0.0031845067058084583, "phrase": "real_line"}, {"score": 0.0029722900280316216, "phrase": "well-known_open_question"}, {"score": 0.002935248513348432, "phrase": "on-line_optimization"}, {"score": 0.0028268629720802772, "phrase": "constant-competitive_ratio"}, {"score": 0.0025569530630374995, "phrase": "constant-competitive_algorithm"}, {"score": 0.0024014759148123736, "phrase": "basic_result"}, {"score": 0.002255431275670053, "phrase": "metrical_service_systems"}], "paper_keywords": ["algorithms", " theory", " work function", " metrical service system", " kappa-server problem", " on-line algorithms", " competitive analysis"], "paper_abstract": "We consider the generalized on-line two-server problem in which each server moves in its own metric space. Requests for service arrive one-by-one and every request is represented by two points: one in each metric space. The problem is to move, at every request, one of the two servers to its request-point such that the total distance travelled by the two servers is minimized. The special case in which both metric spaces are the real line is known as the CNN-problem. It has been a well-known open question in on-line optimization if an algorithm with a constant-competitive ratio exists for this problem. We answer this question in the affirmative by providing a constant-competitive algorithm for the generalized two-server problem on any metric space. The basic result in this article is a characterization of competitiveness for metrical service systems that seems much easier to use when looking for a competitive algorithm. The existence of a competitive algorithm for the generalized two-server problem follows rather easily from this result.", "paper_title": "The generalized two-server problem", "paper_id": "WOS:000239799600006"}