{"auto_keywords": [{"score": 0.044178297855269694, "phrase": "free_distance"}, {"score": 0.04360720045284236, "phrase": "length_ratio"}, {"score": 0.014832865014749185, "phrase": "iterative_message-passing_decoding"}, {"score": 0.012291401231974423, "phrase": "constraint_length"}, {"score": 0.00481495049065317, "phrase": "protograph-based_ldpc_convolutional_codes"}, {"score": 0.004581660953729745, "phrase": "capacity-approaching_performance"}, {"score": 0.004459190343665408, "phrase": "first_part"}, {"score": 0.004339979174946844, "phrase": "asymptotic_methods"}, {"score": 0.004281568920264999, "phrase": "lower_bounds"}, {"score": 0.0040373708328770306, "phrase": "regular_and_irregular_ldpc_convolutional_codes"}, {"score": 0.003983016985197904, "phrase": "protograph-based_ldpc_block_codes"}, {"score": 0.00338493754743055, "phrase": "ldpc_convolutional_code_ensembles"}, {"score": 0.0033393377529146893, "phrase": "minimum_distance"}, {"score": 0.003249966782844541, "phrase": "corresponding_ldpc_block_code_ensembles"}, {"score": 0.0032061793819537633, "phrase": "large_free_distance_growth_rate"}, {"score": 0.003036832649117453, "phrase": "high_signal-to-noise_ratios"}, {"score": 0.0029289191071848403, "phrase": "suboptimal_decoding_methods"}, {"score": 0.0026514708899935333, "phrase": "so-called_trapping_sets"}, {"score": 0.0025804616931593897, "phrase": "decoding_failures"}, {"score": 0.0025572160146590623, "phrase": "ldpc_codes"}, {"score": 0.002522738549524317, "phrase": "additive_white_gaussian_noise_channel"}, {"score": 0.002455168454109375, "phrase": "second_part"}, {"score": 0.002367875199095903, "phrase": "trapping_sets"}, {"score": 0.00233594452829104, "phrase": "asymptotically_good_protograph-based_ldpc_convolutional_codes"}, {"score": 0.0021925226977381244, "phrase": "similar_bounding_techniques"}, {"score": 0.0021049977753042253, "phrase": "smallest_non-empty_trapping_set"}], "paper_keywords": ["Free distance", " graph-based codes", " low-density parity-check (LDPC) block codes", " LDPC convolutional codes", " protographs", " trapping sets"], "paper_abstract": "Low-density parity-check (LDPC) convolutional codes have been shown to be capable of achieving capacity-approaching performance with iterative message-passing decoding. In the first part of this paper, using asymptotic methods to obtain lower bounds on the free distance to constraint length ratio, we show that several ensembles of regular and irregular LDPC convolutional codes derived from protograph-based LDPC block codes have the property that the free distance grows linearly with respect to the constraint length, i.e., the ensembles are asymptotically good. In particular, we show that the free distance to constraint length ratio of the LDPC convolutional code ensembles exceeds the minimum distance to block length ratio of the corresponding LDPC block code ensembles. A large free distance growth rate indicates that codes drawn from the ensemble should perform well at high signal-to-noise ratios under maximum-likelihood decoding. When suboptimal decoding methods are employed, there are many factors that affect the performance of a code. Recently, it has been shown that so-called trapping sets are a significant factor affecting decoding failures of LDPC codes over the additive white Gaussian noise channel with iterative message-passing decoding. In the second part of this paper, we study the trapping sets of the asymptotically good protograph-based LDPC convolutional codes considered earlier. By extending the theory presented in part one and using similar bounding techniques, we show that the size of the smallest non-empty trapping set grows linearly with the constraint length for these ensembles.", "paper_title": "Minimum Distance and Trapping Set Analysis of Protograph-Based LDPC Convolutional Codes", "paper_id": "WOS:000312896600016"}