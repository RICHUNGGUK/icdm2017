{"auto_keywords": [{"score": 0.04193735407697297, "phrase": "proceedings"}, {"score": 0.005093147187255705, "phrase": "mls"}, {"score": 0.004447766706144458, "phrase": "shape-sensitive_way"}, {"score": 0.004190796368475121, "phrase": "deforming_space"}, {"score": 0.0041357305373417455, "phrase": "cuno"}, {"score": 0.0033465923623290034, "phrase": "overall_mesh_shape"}, {"score": 0.003091036449708673, "phrase": "geodesic_distances"}, {"score": 0.002689746491842271, "phrase": "mls_scheme"}, {"score": 0.0025509294021449254, "phrase": "bending_behavior"}, {"score": 0.0023096222276192194, "phrase": "parallel_architectures"}, {"score": 0.0021049977753042253, "phrase": "cpu-only_implementations"}], "paper_keywords": ["Moving least squares", " As-rigid-as-possible deformation", " Animation"], "paper_abstract": "This work presents methods for deforming meshes in a shape-sensitive way using Moving Least Squares (MLS) optimization. It extends an approach for deforming space (Cuno et al. in Proceedings of the 27th Computer Graphics International Conference, pp. 115-122, 2007) by showing how custom distance metrics may be used to achieve deformations which preserve the overall mesh shape. Several variant formulations are discussed and demonstrated, including the use of geodesic distances, distances constrained to paths contained in the mesh, the use of skeletons, and a reformulation of the MLS scheme which makes it possible to affect the bending behavior of the deformation. Finally, aspects of the implementation of these techniques in parallel architectures such as GPUs (graphics processing units) are described and compared with CPU-only implementations.", "paper_title": "Shape-sensitive MLS deformation", "paper_id": "WOS:000270328200003"}