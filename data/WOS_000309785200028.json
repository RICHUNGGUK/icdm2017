{"auto_keywords": [{"score": 0.03655733938936528, "phrase": "particle_tracking"}, {"score": 0.01187087138214365, "phrase": "residence-time_distribution"}, {"score": 0.009696459068085304, "phrase": "cpu_usage"}, {"score": 0.00481495049065317, "phrase": "solute_breakthrough_curves"}, {"score": 0.004757643419056999, "phrase": "groundwater_wells"}, {"score": 0.004571478018964363, "phrase": "execution_time"}, {"score": 0.004481132747216135, "phrase": "gradient-based_parameter_estimation_methods"}, {"score": 0.004271695158467633, "phrase": "jacobian"}, {"score": 0.004087910779160781, "phrase": "rapid_simulation_methods"}, {"score": 0.00405538690701843, "phrase": "known_accuracy"}, {"score": 0.0037740295668681014, "phrase": "convolution-based_methods"}, {"score": 0.003669941438286456, "phrase": "desired_input_function"}, {"score": 0.0030292784088033838, "phrase": "finely_gridded_finite-difference_solution"}, {"score": 0.002898930717812433, "phrase": "embedded_analytical_approach"}, {"score": 0.0028076592725295646, "phrase": "particle_methods"}, {"score": 0.0026654155072292707, "phrase": "velocity_fields"}, {"score": 0.002571171956724731, "phrase": "additional_error"}, {"score": 0.002530359917257626, "phrase": "linear_interpolation"}, {"score": 0.0024802523752944536, "phrase": "dilution_rate"}, {"score": 0.00240213106042981, "phrase": "pumping_well"}, {"score": 0.0022987068521717765, "phrase": "analytical_expressions"}, {"score": 0.0022174005294867583, "phrase": "structural_error"}, {"score": 0.0021821915946356168, "phrase": "numerical_solution_method"}, {"score": 0.0021561514733516676, "phrase": "parameter_estimates"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Particle methods", " Convolution", " Residence time", " Groundwater transport", " Kernel density estimation"], "paper_abstract": "In modeling there is always a trade-off between execution time and accuracy. For gradient-based parameter estimation methods, where a simulation model is run repeatedly to populate a Jacobian (sensitivity) matrix, there exists a need for rapid simulation methods of known accuracy that can decrease execution time, and thus make the model more useful without sacrificing accuracy. Convolution-based methods can be executed rapidly for any desired input function once the residence-time distribution is known. The residence-time distribution can be calculated efficiently using particle tracking, but particle tracking can be ambiguous near a pumping well if the grid is too coarse. We present several embedded analytical expressions for improving particle tracking near a pumping well and compare them with a finely gridded finite-difference solution in terms of accuracy and CPU usage. Even though the embedded analytical approach can improve particle tracking near a well, particle methods reduce, but do not eliminate, reliance on a grid because velocity fields typically are calculated on a grid, and additional error is incurred using linear interpolation of velocity. A dilution rate can be calculated for a given grid and Pumping well to determine if the grid is sufficiently refined. Embedded analytical expressions increase accuracy but add significantly to CPU usage. Structural error introduced by the numerical solution method may affect parameter estimates. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Methods for simulating solute breakthrough curves in pumping groundwater wells", "paper_id": "WOS:000309785200028"}