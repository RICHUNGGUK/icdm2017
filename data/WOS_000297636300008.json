{"auto_keywords": [{"score": 0.044672559367905706, "phrase": "cpu."}, {"score": 0.00481495049065317, "phrase": "adaptive_scheduling"}, {"score": 0.0047273577269638725, "phrase": "multimedia_applications"}, {"score": 0.004515252649226697, "phrase": "adaptive_scheduling_technique"}, {"score": 0.004392565073466714, "phrase": "highly_dynamic_multimedia_tasks"}, {"score": 0.0037921662574137535, "phrase": "feedback_mechanism"}, {"score": 0.0036553070575015344, "phrase": "resource_requirements"}, {"score": 0.003459191419478298, "phrase": "\"local\"_observations"}, {"score": 0.0033651019362620866, "phrase": "second_one"}, {"score": 0.003126481516783286, "phrase": "\"global\"_visibility"}, {"score": 0.0030414140732789186, "phrase": "unused_bandwidth"}, {"score": 0.0024842242921857705, "phrase": "correct_bandwidth"}, {"score": 0.002163930783583212, "phrase": "theoretical_results"}, {"score": 0.0021049977753042253, "phrase": "extensive_experimental_validation"}], "paper_keywords": ["Design", " Performance", " Experimentation"], "paper_abstract": "We propose an adaptive scheduling technique to schedule highly dynamic multimedia tasks on a CPU. We use a combination of two techniques: the first one is a feedback mechanism to track the resource requirements of the tasks based on \"local\" observations. The second one is a mechanism that operates with a \"global\" visibility, reclaiming unused bandwidth. The combination proves very effective: resource reclaiming increases the robustness of the feedback, while the identification of the correct bandwidth made by the feedback increases the effectiveness of the reclamation. We offer both theoretical results and an extensive experimental validation of the approach.", "paper_title": "A Robust Mechanism for Adaptive Scheduling of Multimedia Applications", "paper_id": "WOS:000297636300008"}