{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "virtual_battery"}, {"score": 0.004667149874736771, "phrase": "power-aware_software"}, {"score": 0.004547438494330851, "phrase": "inexpensive_and_convenient_method"}, {"score": 0.004453874101119545, "phrase": "software_test_environments"}, {"score": 0.00422826362023938, "phrase": "test_tool"}, {"score": 0.004184526032558792, "phrase": "software_products"}, {"score": 0.004141238989360548, "phrase": "high_reliability"}, {"score": 0.004055998173160551, "phrase": "critical_cyber-physical_systems"}, {"score": 0.003972504904621217, "phrase": "existing_virtualization_platforms"}, {"score": 0.003850464100878052, "phrase": "battery_subsystem"}, {"score": 0.0036743708250589484, "phrase": "battery-related_features"}, {"score": 0.003345895878114341, "phrase": "type_ii_full_virtualization_platforms"}, {"score": 0.0032094634756436595, "phrase": "acpi-compatible_battery_device_driver"}, {"score": 0.0030466955629231047, "phrase": "target_system"}, {"score": 0.0028622019660721363, "phrase": "battery_status"}, {"score": 0.0028178463431115562, "phrase": "virtual_machine"}, {"score": 0.002788669328369436, "phrase": "vm"}, {"score": 0.002674885993329912, "phrase": "current_status"}, {"score": 0.002633425544817301, "phrase": "host_system's_battery"}, {"score": 0.002448260697722081, "phrase": "virtual_batteries"}, {"score": 0.00239778324260337, "phrase": "resource_usages"}, {"score": 0.0022642601698943687, "phrase": "battery_resource_containers"}, {"score": 0.002171836484200008, "phrase": "proposed_scheme"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Battery management", " Emulation", " Software testing", " Virtualization", " Virtual machines"], "paper_abstract": "Virtualization is an inexpensive and convenient method for setting up software test environments. Thus it is being widely used as a test tool for software products requiring high reliability such as mission critical cyber-physical systems. However, existing virtualization platforms do not fully virtualize the battery subsystem. Therefore, it is difficult to test battery-related features of guest systems. In this paper, we propose Virtual Battery, a battery virtualization scheme for type II full virtualization platforms. Virtual Battery takes the form of an ACPI-compatible battery device driver dedicated to each virtual machine, which virtualizes a target system. Through Virtual Battery, developers can easily manipulate the charging and battery status of each virtual machine (VM), regardless of the existence or current status of the host system's battery. In addition, Virtual Battery emulates the behavior of batteries by discharging the virtual batteries according to the resource usages of their VMs. This feature enables VMs to act as battery resource containers. Three case studies demonstrate the effectiveness of the proposed scheme. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Virtual Battery: A testing tool for power-aware software", "paper_id": "WOS:000326558500014"}