{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "genetic_parallel_programming"}, {"score": 0.04921457158686006, "phrase": "combinational_logic_circuits"}, {"score": 0.028168738789554296, "phrase": "gpplcs"}, {"score": 0.004670896353428476, "phrase": "experimental_results"}, {"score": 0.004586531354697466, "phrase": "parallel_programs"}, {"score": 0.004395532072377065, "phrase": "sequential_programs"}, {"score": 0.004212461149967084, "phrase": "gpp"}, {"score": 0.004136333933790974, "phrase": "novel_genetic_programming_paradigm"}, {"score": 0.004061584718427419, "phrase": "parallel_program_solutions"}, {"score": 0.003964007795174772, "phrase": "rapid_development"}, {"score": 0.003775812267162599, "phrase": "lut"}, {"score": 0.0036627245728600073, "phrase": "programmable_gate_arrays"}, {"score": 0.0035530197642369464, "phrase": "traditional_circuit_design"}, {"score": 0.0035100601949451028, "phrase": "optimization_techniques"}, {"score": 0.003343336516033681, "phrase": "lut-based_fpgas"}, {"score": 0.0032431667821391044, "phrase": "gpp_paradigm"}, {"score": 0.0031269043024513567, "phrase": "combinational_logic_circuit_learning_system"}, {"score": 0.0028715299874549245, "phrase": "multilogic-unit_processor"}, {"score": 0.0027854565462509095, "phrase": "lut_circuits"}, {"score": 0.0024511688853030168, "phrase": "two-_and_four-input_luts"}, {"score": 0.0023346234464901978, "phrase": "eleven_multi-output_boolean_problems"}, {"score": 0.0021049977753042253, "phrase": "well-known_lut-based_fpga_synthesis_algorithms"}], "paper_keywords": ["circuit design", " digital circuits", " evolvable hardware", " genetic programming (GP)", " parallel programming"], "paper_abstract": "Experimental results show that parallel programs can be evolved more easily than sequential programs in genetic parallel programming (GPP). GPP is a novel genetic programming paradigm which evolves parallel program solutions. With the rapid development of lookup-table-based (LUT-based) field programmable gate arrays (FPGAs), traditional circuit design and optimization techniques cannot fully exploit the LUTs in LUT-based FPGAs. Based on the GPP paradigm, we have developed a combinational logic circuit learning system, called GPP logic circuit synthesizer (GPPLCS), in which a multilogic-unit processor is used to evaluate LUT circuits. To show the effectiveness of the GPPLCS, we have performed a series of experiments to evolve combinational logic circuits with two- and four-input LUTs. In this paper, we present eleven multi-output Boolean problems and their evolved circuits. The results show that the GPPLCS can evolve more compact four-input LUT circuits than the well-known LUT-based FPGA synthesis algorithms.", "paper_title": "Applying genetic parallel programming to synthesize combinational logic circuits", "paper_id": "WOS:000248579300006"}