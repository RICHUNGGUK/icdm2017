{"auto_keywords": [{"score": 0.0486744732916662, "phrase": "parameterization_process"}, {"score": 0.01250758874076259, "phrase": "parameterized_specification"}, {"score": 0.00481495049065317, "phrase": "functorial_point"}, {"score": 0.004536592536813498, "phrase": "symbolic_computation_systems"}, {"score": 0.004502945687973118, "phrase": "kenzo"}, {"score": 0.004436390190384865, "phrase": "eat"}, {"score": 0.004242546312843817, "phrase": "general_construction"}, {"score": 0.0041488110506566825, "phrase": "categorical_framework"}, {"score": 0.0036281710561308377, "phrase": "new_variable"}, {"score": 0.002836942411239067, "phrase": "relevant_terminality_assumption"}, {"score": 0.002217880187104576, "phrase": "subsequent_parameter"}, {"score": 0.002136651746284283, "phrase": "natural_transformation"}], "paper_keywords": ["Parameterization process", " symbolic computation system", " categorical formalization"], "paper_abstract": "The parameterization process used in the symbolic computation systems Kenzo and EAT is studied here as a general construction in a categorical framework. This parameterization process starts from a given specification and builds a parameterized specification by adding a parameter as a new variable to some operations. Given a model of the parameterized specification, each interpretation of the parameter, called an argument, provides a model of the given specification. Moreover, under some relevant terminality assumption, this correspondence between the arguments and the models of the given specification is a bijection. It is proved in this paper that the parameterization process is provided by a functor and the subsequent parameter passing process by a natural transformation. Various categorical notions are used, mainly adjoint functors, pushouts and lax colimits.", "paper_title": "A PARAMETERIZATION PROCESS: FROM A FUNCTORIAL POINT OF VIEW", "paper_id": "WOS:000300443600015"}