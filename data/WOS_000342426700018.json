{"auto_keywords": [{"score": 0.04174475377261779, "phrase": "external_media"}, {"score": 0.038876151391192805, "phrase": "lerp"}, {"score": 0.015448758509906445, "phrase": "suffix_arrays"}, {"score": 0.01391697229237822, "phrase": "repeated_patterns"}, {"score": 0.013772287570565658, "phrase": "time_series"}, {"score": 0.010236675965764802, "phrase": "hardware_limitations"}, {"score": 0.004681413843223496, "phrase": "powerful_data_structure"}, {"score": 0.004648609688625397, "phrase": "pattern_detection"}, {"score": 0.004551563730037998, "phrase": "previous_work"}, {"score": 0.004472234553892357, "phrase": "novel_algorithm"}, {"score": 0.004440893933911063, "phrase": "cov"}, {"score": 0.004153810449519519, "phrase": "actual_suffix_array"}, {"score": 0.004024351756560517, "phrase": "actual_suffix_strings"}, {"score": 0.003724566354526513, "phrase": "longest_expected_repeated_pattern"}, {"score": 0.003495915995048885, "phrase": "repeated_pattern_detection"}, {"score": 0.003447035529485425, "phrase": "analogous_time_complexity"}, {"score": 0.0033513085425415545, "phrase": "large_time_series"}, {"score": 0.0029731625157696845, "phrase": "hard_disk_capacity"}, {"score": 0.0026750045328382717, "phrase": "maximal_utilization"}, {"score": 0.002646880721119838, "phrase": "available_hardware"}, {"score": 0.002600661525224505, "phrase": "empirical_knowledge"}, {"score": 0.0025462598594116373, "phrase": "repeated_pattern's_length"}, {"score": 0.002501793273494325, "phrase": "proposed_method"}, {"score": 0.002449454693767392, "phrase": "better_time_performance"}, {"score": 0.002415170557932468, "phrase": "standard_lerp_method"}, {"score": 0.0023070189467375374, "phrase": "brute_force_techniques"}, {"score": 0.0022036996784968793, "phrase": "mlerp"}], "paper_keywords": ["Suffix arrays", " Repeated patterns detection", " Data mining", " Time series", " DNA analysis"], "paper_abstract": "Suffix arrays form a powerful data structure for pattern detection and matching. In a previous work, we presented a novel algorithm (COV) which is the only algorithm that allows the detection of all repeated patterns in a time series by using the actual suffix array. However, the requirements for storing the actual suffix strings even on external media makes the use of suffix arrays impossible for very large time series. We have already proved that using the concept of Longest Expected Repeated Pattern (LERP) allows the actual suffices to be stored in linear capacity O(n) on external media. The repeated pattern detection using LERP has analogous time complexity, and thus makes the analysis of large time series feasible and limited only to the size of the external media and not memory. Yet, there are cases when hardware limitations might be an obstacle for the analysis of very larger time series of size comparable to hard disk capacity. With the Moving LERP (MLERP) method introduced in this paper, it is possible to analyze very large time series (of size tens or hundreds thousands times larger than what the LERP can analyze) by maximal utilization of the available hardware. Further, when empirical knowledge related to the distribution of repeated pattern's length is available, the proposed method (MLERP) can achieve better time performance compared to the standard LERP method and definitely much better than using any other pattern matching algorithm and applying brute force techniques which are unfeasible in logical (human) time frame. Thus, we may argue that MLERP is a very useful tool for detecting all repeated patterns in a time series regardless of its size and hardware limitations.", "paper_title": "Analyzing very large time series using suffix arrays", "paper_id": "WOS:000342426700018"}