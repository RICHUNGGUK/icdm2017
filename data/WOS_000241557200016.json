{"auto_keywords": [{"score": 0.029539384662055624, "phrase": "radicmpi"}, {"score": 0.012289331053124975, "phrase": "radic"}, {"score": 0.00481495049065317, "phrase": "intelligent_management"}, {"score": 0.0047555023078686386, "phrase": "fault_tolerance"}, {"score": 0.004638788604042707, "phrase": "radicmpi._independence"}, {"score": 0.004581505405526037, "phrase": "special_elements"}, {"score": 0.004305481798183612, "phrase": "fault_tolerance_schemes"}, {"score": 0.004252296935371162, "phrase": "modem_clusters"}, {"score": 0.003946650265907885, "phrase": "radic_architecture"}, {"score": 0.003825849505589868, "phrase": "distributed_independent_checkpoints"}, {"score": 0.0035951877427580006, "phrase": "fully_distributed_array"}, {"score": 0.003378385493203297, "phrase": "distributed_fault_tolerance_controller"}, {"score": 0.0031549249117721946, "phrase": "fault_tolerance_activities"}, {"score": 0.0030582832134483685, "phrase": "user_application"}, {"score": 0.0029830992938695007, "phrase": "message-log_rollback-recovery_protocol"}, {"score": 0.002700348931172875, "phrase": "standard_mpi_directives"}, {"score": 0.0026013505538490223, "phrase": "radic."}, {"score": 0.0025059724686541263, "phrase": "real_environment"}, {"score": 0.002212535878761148, "phrase": "correct_operation"}, {"score": 0.0021049977753042253, "phrase": "radic_mechanism"}], "paper_keywords": [""], "paper_abstract": "Independence of special elements, transparency and scalability are very significant features required from the fault tolerance schemes for modem clusters of computers. In order to attend such requirements we developed the RADIC architecture (Redundant Array of Distributed Independent Checkpoints). RADIC is an architecture based on a fully distributed array of processes that collaborate in order to create a distributed fault tolerance controller. This controller works without special, central or stable elements. RADIC implements the fault tolerance activities, transparently to the user application, using a message-log rollback-recovery protocol. Using the RADIC concepts we implemented a prototype, RADICMPI, which contains some standard MPI directives and includes all functionalities of RADIC. We tested RADICMPI in a real environment by injecting failures in nodes of the cluster and monitoring the behavior of the application. Our tests confirmed the correct operation of RADICMPI and the effectiveness of the RADIC mechanism.", "paper_title": "An intelligent management of fault tolerance in cluster using RADICMPI", "paper_id": "WOS:000241557200016"}