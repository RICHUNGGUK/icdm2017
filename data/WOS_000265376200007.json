{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "interval_analysis"}, {"score": 0.0047013405841819025, "phrase": "output_optimization"}, {"score": 0.004634459424542272, "phrase": "specified_input_space"}, {"score": 0.00459039896577789, "phrase": "neural_networks"}, {"score": 0.0045467659524654515, "phrase": "nns"}, {"score": 0.004482063543727601, "phrase": "fixed_weights"}, {"score": 0.004172094622123562, "phrase": "nonlinear_activation_functions"}, {"score": 0.0040735909648053105, "phrase": "global_optimization_problem"}, {"score": 0.003977403701783668, "phrase": "reinforcement_learning"}, {"score": 0.003939612966707806, "phrase": "rl"}, {"score": 0.003580355398511932, "phrase": "guaranteed_bounds"}, {"score": 0.003529364798514874, "phrase": "major_drawbacks"}, {"score": 0.003429544382524185, "phrase": "high-computational_load"}, {"score": 0.0032850648549389025, "phrase": "nn_output_optimization"}, {"score": 0.003253791343615811, "phrase": "taylor_models"}, {"score": 0.00305762327908599, "phrase": "excellent_convergence_properties"}, {"score": 0.0030285084113651035, "phrase": "small_intervals"}, {"score": 0.0029569247903654477, "phrase": "dependency_effect"}, {"score": 0.0028187792953857957, "phrase": "large_input_domains"}, {"score": 0.0027390087503440757, "phrase": "tms"}, {"score": 0.002661474607275484, "phrase": "polynomial_inclusion_functions"}, {"score": 0.002611010097359509, "phrase": "polynomial_set"}, {"score": 0.002488985155689794, "phrase": "new_method"}, {"score": 0.0023840346303791032, "phrase": "network_output"}, {"score": 0.0022617389804167943, "phrase": "standard_interval_arithmetic"}, {"score": 0.002166349705365602, "phrase": "ps_method"}, {"score": 0.0021049977753042253, "phrase": "nn_output_optimization_problem"}], "paper_keywords": ["Feedforward neural networks (FFNNs)", " global optimization", " inclusion function", " interval analysis", " optimization methods", " polynomial set", " radial basis function neural networks (RBFNNs)", " Taylor expansion", " Taylor model (TM)"], "paper_abstract": "The problem of output optimization within a specified input space of neural networks (NNs) with fixed weights is discussed in this paper. The problem is (highly) nonlinear when nonlinear activation functions are used. This global optimization problem is encountered in the reinforcement learning (RL) community. Interval analysis is applied to guarantee that all solutions are found to any degree of accuracy with guaranteed bounds. The major drawbacks of interval analysis, i.e., dependency effect and high-computational load, are both present for the problem of NN output optimization. Taylor models (TMs) are introduced to reduce these drawbacks. They have excellent convergence properties for small intervals. However, the dependency effect still remains and is even made worse when evaluating large input domains. As an alternative to TMs, a different form of polynomial inclusion functions, called the polynomial set (PS) method, is introduced. This new method has the property that the bounds on the network output are tighter or at least equal to those obtained through standard interval arithmetic (IA). Experiments show that the PS method outperforms the other methods for the NN output optimization problem.", "paper_title": "Neural Network Output Optimization Using Interval Analysis", "paper_id": "WOS:000265376200007"}