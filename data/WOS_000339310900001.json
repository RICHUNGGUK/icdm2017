{"auto_keywords": [{"score": 0.04173662828432097, "phrase": "frit"}, {"score": 0.011975777749915774, "phrase": "current_state"}, {"score": 0.010983217293823538, "phrase": "reconnection_search"}, {"score": 0.010045672760645453, "phrase": "rths_algorithm"}, {"score": 0.008855503272941254, "phrase": "rths"}, {"score": 0.00481495049065317, "phrase": "ideal_tree"}, {"score": 0.004739296614044257, "phrase": "real-time_search"}, {"score": 0.004652527803482161, "phrase": "video_games"}, {"score": 0.004628028416903033, "phrase": "dynamic_robotics"}, {"score": 0.004507444389818216, "phrase": "partially_known_environments"}, {"score": 0.003918685725277592, "phrase": "single-agent_deterministic_search_problems"}, {"score": 0.00381651287156611, "phrase": "traditional_rths"}, {"score": 0.003629639728243997, "phrase": "so-called_ideal_tree"}, {"score": 0.0034610204300474334, "phrase": "actual_environment"}, {"score": 0.0031055193765081967, "phrase": "frit."}, {"score": 0.003032491780979615, "phrase": "resulting_algorithm"}, {"score": 0.0028310005209524797, "phrase": "grid_pathfinding_benchmarks"}, {"score": 0.00281606583659932, "phrase": "game_maps"}, {"score": 0.002670973166188722, "phrase": "rtaa"}, {"score": 0.0026081371792468708, "phrase": "tight_time_constraints"}, {"score": 0.0023276842099425347, "phrase": "best-quality_solutions"}, {"score": 0.0022849667311448186, "phrase": "adaptive_a"}], "paper_keywords": [""], "paper_abstract": "Many applications, ranging from video games to dynamic robotics, require solving single-agent, deterministic search problems in partially known environments under very tight time constraints. Real-Time Heuristic Search (RTHS) algorithms are specifically designed for those applications. As a subroutine, most of them invoke a standard, but bounded, search algorithm that searches for the goal. In this paper we present FRIT, a simple approach for single-agent deterministic search problems under tight constraints and partially known environments that unlike traditional RTHS does not search for the goal but rather searches for a path that connects the current state with a so-called ideal tree T. When the agent observes that an arc in the tree cannot be traversed in the actual environment, it removes such an arc from T and then carries out a reconnection search whose objective is to find a path between the current state and any node in T. The reconnection search is done using an algorithm that is passed as a parameter to FRIT. If such a parameter is an RTHS algorithm, then the resulting algorithm can be an RTHS algorithm. We show, in addition, that FRIT may be fed with a (bounded) complete blind-search algorithm. We evaluate our approach over grid pathfinding benchmarks including game maps and mazes. Our results show that FRIT, used with RTAA*, a standard RTHS algorithm, outperforms RTAA* significantly; by one order of magnitude under tight time constraints. In addition, FRIT(daRTAA*) substantially outperforms daRTAA*, a state-of-the-art RTHS algorithm, usually obtaining solutions 50% cheaper on average when performing the same search effort. Finally, FRIT(BFS), i.e., FRIT using breadth-first-search, obtains best-quality solutions when time is limited compared to Adaptive A* and Repeated A*. Finally we show that Bug2, a pathfinding-specific navigation algorithm, outperforms FRIT(BFS) when planning time is extremely limited, but when given more time, the situation reverses.", "paper_title": "Reconnection with the Ideal Tree: A New Approach to Real-Time Search", "paper_id": "WOS:000339310900001"}