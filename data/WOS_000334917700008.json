{"auto_keywords": [{"score": 0.0241871045823026, "phrase": "gui."}, {"score": 0.00481495049065317, "phrase": "smart_test_cases"}, {"score": 0.004712726613162057, "phrase": "brittle_recorded_tests"}, {"score": 0.004187917910692495, "phrase": "manual_testing"}, {"score": 0.003802135020791801, "phrase": "recorded_test_cases"}, {"score": 0.0034148795808317555, "phrase": "gui._test_cases"}, {"score": 0.0032712190037495975, "phrase": "business_logic"}, {"score": 0.002695768552609587, "phrase": "blackhorse"}, {"score": 0.0024209250169088575, "phrase": "recorded_test_case"}, {"score": 0.0023694065215394593, "phrase": "java_code"}, {"score": 0.0021049977753042253, "phrase": "testing_environment"}], "paper_keywords": ["Software testing", " Test recording and playback", " Program generation"], "paper_abstract": "Testing software that has a GUI is difficult. Manual testing is costly and error-prone, but recorded test cases frequently \"break\" due to changes in the GUI. Test cases intended to test business logic must therefore be converted to a less \"brittle\" form to lengthen their useful lifespan. In this paper, we describe BlackHorse, an approach to doing this that converts a recorded test case to Java code that bypasses the GUI. The approach was implemented within the testing environment of Research In Motion. We describe the design of the toolset and discuss lessons learned during the course of the project.", "paper_title": "BlackHorse: creating smart test cases from brittle recorded tests", "paper_id": "WOS:000334917700008"}