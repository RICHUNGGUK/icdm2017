{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hydrological_models"}, {"score": 0.0047823219739028325, "phrase": "large-scale_hydrologic_models"}, {"score": 0.004653993775422955, "phrase": "watershed_management"}, {"score": 0.004560002169647084, "phrase": "rapid_modeling"}, {"score": 0.004437613070853689, "phrase": "emergency_environmental_disasters"}, {"score": 0.004318494608235021, "phrase": "major_impediment"}, {"score": 0.004007083686875716, "phrase": "less-than-optimum_solutions"}, {"score": 0.003926105480202798, "phrase": "time-consuming_projects"}, {"score": 0.0038336889370744662, "phrase": "linux_systems"}, {"score": 0.003509006038574667, "phrase": "common_usage"}, {"score": 0.003403122817578447, "phrase": "medium-size_applications"}, {"score": 0.003278024877215369, "phrase": "parallel_processing_scheme"}, {"score": 0.0032008144731234265, "phrase": "windows_platform"}, {"score": 0.002949598537993663, "phrase": "modern_pc"}, {"score": 0.0028801015154977885, "phrase": "powerful_alternative"}, {"score": 0.002812237329893584, "phrase": "cloud_computing"}, {"score": 0.0027931421106359875, "phrase": "parallel_processing"}, {"score": 0.0026630475331025955, "phrase": "optimization_program"}, {"score": 0.0023000698178350415, "phrase": "cpu_usage"}, {"score": 0.002245842206945282, "phrase": "parallelized_version"}, {"score": 0.002200377880796801, "phrase": "non-parallelized_version"}, {"score": 0.0021705796895687864, "phrase": "substantial_time"}, {"score": 0.0021484955960643167, "phrase": "model_calibration"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Parallel processing", " SWAT-CUP", " SUFI2", " Hydrologic models"], "paper_abstract": "Large-scale hydrologic models are being used more and more in watershed management and decision making. Sometimes rapid modeling and analysis is needed to deal with emergency environmental disasters. However, time is often a major impediment in the calibration and application of these models. To overcome this, most projects are run with fewer simulations, resulting in less-than-optimum solutions. In recent years, running time-consuming projects on gridded networks or clouds in Linux systems has become more and more prevalent. But this technology, aside from being tedious to use, has not yet become fully available for common usage in research, teaching, and small to medium-size applications. In this paper we explain a methodology where a parallel processing scheme is constructed to work in the Windows platform. We have parallelized the calibration of the SWAT (Soil and Water Assessment Tool) hydrological model, where one could submit many simultaneous jobs taking advantage of the capabilities of modern PC and laptops. This offers a powerful alternative to the use of grid or cloud computing. Parallel processing is implemented in SWAT-CUP (SWAT Calibration and Uncertainty Procedures) using the optimization program SUFI2 (Sequential Uncertainty Fitting ver. 2). We tested the program with large, medium, and small-size hydrologic models on several computer systems, including PCs, laptops, and servers with up to 24 CPUs. The performance was judged by calculating speedup, efficiency, and CPU usage. In each case, the parallelized version performed much faster than the non-parallelized version, resulting in substantial time saving in model calibration. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "A parallelization framework for calibration of hydrological models", "paper_id": "WOS:000301013200004"}