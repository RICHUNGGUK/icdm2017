{"auto_keywords": [{"score": 0.028939438487563716, "phrase": "new_agents"}, {"score": 0.00481495049065317, "phrase": "product_networks"}, {"score": 0.00437281181878921, "phrase": "product_network"}, {"score": 0.004135562737140424, "phrase": "existing_algorithms"}, {"score": 0.00409382470158851, "phrase": "basic_member_graphs"}, {"score": 0.004032002950217453, "phrase": "graph_product"}, {"score": 0.0038520615699124123, "phrase": "cleaner_agents"}, {"score": 0.003736567662016446, "phrase": "hostile_intruder"}, {"score": 0.0026057256900479026, "phrase": "single_agent"}, {"score": 0.0024641134634779535, "phrase": "novel_method"}, {"score": 0.0023539789234610763, "phrase": "abstract_idea"}, {"score": 0.0023183698048498797, "phrase": "search_trees"}, {"score": 0.00217017119491777, "phrase": "cartesian_product_graphs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["graph search", " intruder capturing", " Cartesian product networks"], "paper_abstract": "In this paper, we propose a solution to the problem of capturing an intruder in a product network. This solution is derived based on the assumption of existing algorithms for basic member graphs of a graph product. In this problem, a team of cleaner agents are responsible for capturing a hostile intruder in the network. While the agents can move in the network one hop at a time, the intruder is assumed to be arbitrarily fast in a way that it can traverse any number of nodes contiguously as far as no agents reside in those nodes. Here, we consider a version of the problem where each agent can replicate new agents. Thus, the algorithm starts with a single agent and new agents are created on demand. We propose a novel method for deriving intrusion capturing algorithms based on the abstract idea of spanning search trees. Later, we utilize this method for deriving capturing algorithms for Cartesian product graphs. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Capturing an intruder in product networks", "paper_id": "WOS:000249172000005"}