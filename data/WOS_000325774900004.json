{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "continuous_optimization"}, {"score": 0.028964411436954378, "phrase": "local_search"}, {"score": 0.028559947580613393, "phrase": "abc_algorithms"}, {"score": 0.004633429997452688, "phrase": "artificial_bee_colony"}, {"score": 0.004545240514015278, "phrase": "recent_class"}, {"score": 0.004501774379030109, "phrase": "swarm_intelligence_algorithms"}, {"score": 0.004352876088312741, "phrase": "foraging_behavior"}, {"score": 0.004311241567238011, "phrase": "honeybee_swarms"}, {"score": 0.004148631410346188, "phrase": "continuous_optimization_problems"}, {"score": 0.004089239912167375, "phrase": "example_application"}, {"score": 0.0038600230206554792, "phrase": "initial_proposal"}, {"score": 0.003714368305523811, "phrase": "original_algorithm"}, {"score": 0.0035229930971258316, "phrase": "different_experimental_conditions"}, {"score": 0.0034892684482068347, "phrase": "different_fine-tuning_efforts"}, {"score": 0.0032463805170627686, "phrase": "original_abc_algorithm"}, {"score": 0.0031845067058084583, "phrase": "nine_abc_algorithms"}, {"score": 0.0030790429005600898, "phrase": "original_parameter_settings"}, {"score": 0.0029343925814926787, "phrase": "automatic_algorithm_configuration_tool"}, {"score": 0.0024556852466581527, "phrase": "performance_differences"}, {"score": 0.00242047093248845, "phrase": "studied_abc_variants"}, {"score": 0.002340250894008014, "phrase": "best_abc_variants"}, {"score": 0.0021876814398268775, "phrase": "benchmark_set"}, {"score": 0.0021049977753042253, "phrase": "serious_competitors"}], "paper_keywords": ["Artificial bee colony", " Continuous optimization", " Experimental study", " Automatic algorithm configuration"], "paper_abstract": "The artificial bee colony (ABC) algorithm is a recent class of swarm intelligence algorithms that is loosely inspired by the foraging behavior of honeybee swarms. It was introduced in 2005 using continuous optimization problems as an example application. Similar to what has happened with other swarm intelligence techniques, after the initial proposal, several researchers have studied variants of the original algorithm. Unfortunately, often these variants have been tested under different experimental conditions and different fine-tuning efforts for the algorithm parameters. In this article, we review various variants of the original ABC algorithm and experimentally study nine ABC algorithms under two settings: either using the original parameter settings as proposed by the authors, or using an automatic algorithm configuration tool using a same tuning effort for each algorithm. We also study the effect of adding local search to the ABC algorithms. Our experimental results show that local search can improve considerably the performance of several ABC variants and that it reduces strongly the performance differences between the studied ABC variants. We also show that the best ABC variants are competitive with recent state-of-the-art algorithms on the benchmark set we used, which establishes ABC algorithms as serious competitors in continuous optimization.", "paper_title": "Artificial bee colonies for continuous optimization: Experimental analysis and improvements", "paper_id": "WOS:000325774900004"}