{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "medial_axis"}, {"score": 0.004759507166427077, "phrase": "cad_model"}, {"score": 0.004722898398399427, "phrase": "multi-cpu_based_parallel_computation"}, {"score": 0.004596960835906736, "phrase": "great_challenge"}, {"score": 0.004405779372462873, "phrase": "complicated_cad_models"}, {"score": 0.0043718794256931435, "phrase": "current_research"}, {"score": 0.004304856672196293, "phrase": "cpu-based_ma_generation_methods"}, {"score": 0.004125773078637226, "phrase": "single_cpu."}, {"score": 0.004094018760244776, "phrase": "highly-efficient_methods"}, {"score": 0.004046843083499649, "phrase": "parallel_computing"}, {"score": 0.003804234575698981, "phrase": "efficient_ma_generation"}, {"score": 0.0037749456215035856, "phrase": "cad_models"}, {"score": 0.003745881316228299, "phrase": "distance_dilation"}, {"score": 0.003674192201248236, "phrase": "whole_model"}, {"score": 0.0034806529881619454, "phrase": "computational_efficiency"}, {"score": 0.0033616344666486725, "phrase": "computation_time"}, {"score": 0.0032592499906265882, "phrase": "k_cpus"}, {"score": 0.00317221667574882, "phrase": "adaptive_division_method"}, {"score": 0.0030994630902300133, "phrase": "voxelized_model"}, {"score": 0.0030401074516310184, "phrase": "nearly_the_same_number"}, {"score": 0.00297037471252423, "phrase": "computational_burden"}, {"score": 0.002913483929932102, "phrase": "local_euclidean_distance_transform"}, {"score": 0.0027813397260607487, "phrase": "existing_distance_dilation_method"}, {"score": 0.002728059572916527, "phrase": "complete_inter-dilation_method"}, {"score": 0.002644920521740564, "phrase": "different_blocks"}, {"score": 0.0026043035241045394, "phrase": "global_edt"}, {"score": 0.002401053532270901, "phrase": "final_ma."}, {"score": 0.00230098581403254, "phrase": "multiple_cpus"}, {"score": 0.0022136307563123256, "phrase": "good_performance"}, {"score": 0.00218807532188779, "phrase": "proposed_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Medial axis", " CAD models", " Distance dilation", " Parallel computing", " Model simplication", " Voxelization-based method"], "paper_abstract": "Computational efficiency is still a great challenge for the generation of the Medial Axis (MA) for complicated CAD models. Current research mainly focuses on CPU-based MA generation methods. However, most of the methods emphasize using a single CPU. The highly-efficient methods based on parallel computing are still missing. In this study, a parallel method based on multi-CPU is proposed for the efficient MA generation of CAD models using distance dilation. By dividing the whole model into several parts for which MAs are calculated in parallel and then combined, computational efficiency can be greatly improved in theory and the computation time can be reduced nearly K times if K CPUs are used. Firstly, an adaptive division method is proposed to divide the voxelized model into blocks which have nearly the same number of voxels to balance the computational burden. Secondly, the local Euclidean Distance Transform (EDT) is calculated for each block based on the existing distance dilation method. Thirdly, the complete inter-dilation method is proposed to compute the influence between different blocks to get a global EDT for each block. Finally, each block generates a sub-MA separately and then all the generated MAs are combined to obtain the final MA. The last three processes can be efficiently conducted in parallel by using multiple CPUs. Several groups of experiments are conducted which demonstrate the good performance of the proposed methods in terms of efficiency. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Calculating the medial axis of a CAD model by multi-CPU based parallel computation", "paper_id": "WOS:000353734100009"}