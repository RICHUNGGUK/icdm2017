{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "faster_algorithm"}, {"score": 0.00443308765153716, "phrase": "genus_graphs"}, {"score": 0.0039341294012600085, "phrase": "shortest_cycle"}, {"score": 0.0033037970113095577, "phrase": "undirected_n-vertex_planar_graph"}, {"score": 0.0026494723416072316, "phrase": "orientable_surface"}, {"score": 0.0026011706232569316, "phrase": "small_genus"}, {"score": 0.0024389277933858054, "phrase": "graph_partitioning"}, {"score": 0.0023944552329463035, "phrase": "hammock_decomposition"}, {"score": 0.002265833357217618, "phrase": "dynamic_shortest-path_computation"}], "paper_keywords": ["Girth", " graphs", " graph algorithms", " planar graphs", " cycles", " graph separators", " graph genus", " shortest paths", " dynamic algorithms", " hammock decomposition", " path and circuit problems"], "paper_abstract": "The girth of a graph G is the length of a shortest cycle of G. In this article we design an O(n(5/4) log n) algorithm for finding the girth of an undirected n-vertex planar graph, the first o(n(2)) algorithm for this problem. We also extend our results for the class of graphs embedded into an orientable surface of small genus. Our approach uses several techniques such as graph partitioning, hammock decomposition, graph covering, and dynamic shortest-path computation. We discuss extensions and generalizations of our result.", "paper_title": "A Faster Algorithm for Computing the Girth of Planar and Bounded Genus Graphs", "paper_id": "WOS:000288825000003"}