{"auto_keywords": [{"score": 0.0326163830602888, "phrase": "large_networks"}, {"score": 0.00481495049065317, "phrase": "interactive_visual_subgraph_search_queries"}, {"score": 0.004664352260912174, "phrase": "previous_paper"}, {"score": 0.004477595431209663, "phrase": "novel_graph_query_processing_paradigm"}, {"score": 0.004357245559948974, "phrase": "visual_query_graph"}, {"score": 0.004240116703465252, "phrase": "visual_query_formulation"}, {"score": 0.003996983218174335, "phrase": "irrelevant_matches"}, {"score": 0.003942877273973905, "phrase": "partial_query_results"}, {"score": 0.0036663981146086103, "phrase": "significant_improvement"}, {"score": 0.0036332251283046997, "phrase": "system_response_time"}, {"score": 0.0035515951985356374, "phrase": "subgraph_queries"}, {"score": 0.0033937776228549557, "phrase": "graph_databases"}, {"score": 0.00334780964309978, "phrase": "large_collection"}, {"score": 0.0033175095965171674, "phrase": "small_or_medium-sized_graphs"}, {"score": 0.0031845067058084583, "phrase": "novel_algorithm"}, {"score": 0.003015401937358271, "phrase": "visual_subgraph_querying_paradigm"}, {"score": 0.002765776659294382, "phrase": "large_network"}, {"score": 0.0026427848602443293, "phrase": "minimum_cut-based_graph"}, {"score": 0.002548331088496964, "phrase": "approximate_frequent_and_small_infrequent_fragments"}, {"score": 0.0023479408542211875, "phrase": "indexing_framework"}, {"score": 0.0022434880661725493, "phrase": "mined_fragments"}, {"score": 0.002193013499219711, "phrase": "index_graphlets"}, {"score": 0.0021731423856364003, "phrase": "efficient_blending"}, {"score": 0.002153450937601075, "phrase": "visual_subgraph_query_formulation"}, {"score": 0.0021049977753042253, "phrase": "extensive_experiments"}], "paper_keywords": ["Visual graph querying", " Query formulation", " Frequent fragments", " Small infrequent fragments", " Action-aware indices", " Action-aware query processing", " Blending", " Large networks"], "paper_abstract": "In a previous paper, we laid out the vision of a novel graph query processing paradigm where instead of processing a visual query graph after its construction, it interleaves visual query formulation and processing by exploiting the latency offered by the gui to filter irrelevant matches and prefetch partial query results [8]. Our recent attempts at implementing this vision [8, 9] show significant improvement in system response time (srt) for subgraph queries. However, these efforts are designed specifically for graph databases containing a large collection of small or medium-sized graphs. In this paper, we propose a novel algorithm called quble (QUery Blender for Large nEtworks) to realize this visual subgraph querying paradigm on very large networks (e.g., protein interaction networks, social networks). First, it decomposes a large network into a set of graphlets and supergraphlets using a minimum cut-based graph partitioning technique. Next, it mines approximate frequent and small infrequent fragments (sifs) from them and identifies their occurrences in these graphlets and supergraphlets. Then, the indexing framework of [9] is enhanced so that the mined fragments can be exploited to index graphlets for efficient blending of visual subgraph query formulation and query processing. Extensive experiments on large networks demonstrate effectiveness of quble.", "paper_title": "QUBLE: towards blending interactive visual subgraph search queries on large networks", "paper_id": "WOS:000336383300003"}