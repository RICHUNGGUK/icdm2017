{"auto_keywords": [{"score": 0.04605596041036743, "phrase": "service_specification"}, {"score": 0.009887644472677258, "phrase": "protocol_specification"}, {"score": 0.009013379868347215, "phrase": "global_behavior"}, {"score": 0.00481495049065317, "phrase": "protocol_specifications"}, {"score": 0.004762550320451225, "phrase": "service_specifications"}, {"score": 0.00380511089035825, "phrase": "distributed_sites"}, {"score": 0.003682100144121148, "phrase": "new_algorithm"}, {"score": 0.003485824905231454, "phrase": "n_communicating_entities"}, {"score": 0.0033916328188225843, "phrase": "n_sites"}, {"score": 0.0028460640294160383, "phrase": "n_entities"}, {"score": 0.0026942333853202556, "phrase": "shared_resources"}, {"score": 0.0026213749921120623, "phrase": "timestamp-based_contention_control_algorithm"}, {"score": 0.002536534348967786, "phrase": "derivation_algorithm"}, {"score": 0.0023107372754933887, "phrase": "graphical_representation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Petri net", " distributed system", " specification", " automated design"], "paper_abstract": "We consider the derivation of a protocol specification from a service specification written in Predicate/Transition-nets (Pr/T-nets). The service specification describes the global behavior of a system and includes the allocation of the Pr/T-net places to N distributed sites. The paper presents a new algorithm for deriving a protocol specification that defines the behavior of N communicating entities that execute on the N sites and coordinate their actions in order to conform to the global behavior defined by the service specification. Our algorithm decomposes each transition of the service specification into a set of communicating Pr/T-subnets running on the N entities. Moreover, for efficiently controlling the conflict for shared resources, we present a timestamp-based contention control algorithm and incorporate it into the derivation algorithm. A tool has been developed that implements our algorithm and works together with other existing tools for the graphical representation of the service and derived protocol specifications. Two application examples are discussed. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Deriving protocol specifications from service specifications written as Predicate/Transition-nets", "paper_id": "WOS:000241715500016"}