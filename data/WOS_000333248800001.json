{"auto_keywords": [{"score": 0.03510429867928044, "phrase": "omc"}, {"score": 0.009656285817415226, "phrase": "modelica"}, {"score": 0.00481495049065317, "phrase": "equation-based_object-oriented_language"}, {"score": 0.004472234553892357, "phrase": "first_bootstrapping"}, {"score": 0.004124688058533477, "phrase": "usual_application_area"}, {"score": 0.003996133359116611, "phrase": "complex_physical_systems"}, {"score": 0.0038715697646612766, "phrase": "minor_extensions"}, {"score": 0.0038309141193444015, "phrase": "modelica_language"}, {"score": 0.003724566354526513, "phrase": "language_semantics"}, {"score": 0.0036467403626789666, "phrase": "metamodelica"}, {"score": 0.003608437115371213, "phrase": "slightly_extended_modelica"}, {"score": 0.0032467792804296036, "phrase": "metamodelica_language"}, {"score": 0.003079736435077217, "phrase": "metamodelica_language_extensions"}, {"score": 0.00304737045343781, "phrase": "substantial_work"}, {"score": 0.002900756392266265, "phrase": "good_performance"}, {"score": 0.002810240488642749, "phrase": "improved_language_constructs"}, {"score": 0.0026844452074327265, "phrase": "parser_generators"}, {"score": 0.0026375718041787, "phrase": "profiling_tools"}, {"score": 0.0026190518142076608, "phrase": "future_work"}, {"score": 0.002242879896352752, "phrase": "major_effort"}, {"score": 0.0021652024032375833, "phrase": "metamodelica_extensions"}, {"score": 0.0021273762177807876, "phrase": "approximately_ten_developers"}, {"score": 0.0021049977753042253, "phrase": "daily_basis"}], "paper_keywords": ["compilation", " equation-based", " object-oriented", " meta-programming", " modeling"], "paper_abstract": "What does it mean to bootstrap a compiler, and why do it? This paper reports on the first bootstrapping of a full-scale E00 (Equation-based Object-Oriented) modeling language such as Modelica. Bootstrapping means that the compiler of a language can compile itself. However, the usual application area for the Modelica is modeling and simulation of complex physical systems. Fortunately it turns out that with some minor extensions, the Modelica language is well suited for the modeling of language semantics. We use the name MetaModelica for this slightly extended Modelica. This is a prerequisite for bootstrapping which requires that the language can be used to model and/or implement itself. The OpenModelica Compiler (OMC) has been written in this MetaModelica language. It originally supported only the standard Modelica language but has been gradually extended to also cover the MetaModelica language extensions. After substantial work, OMC is able to quickly compile itself and produces an executable with good performance. The benefits include a more extensible and maintainable compiler by introducing improved language constructs and a more powerful runtime that makes it easy to add functionality such as parser generators, debuggers, and profiling tools. Future work includes extracting and restructuring parts of OMC, making the compiler smaller and more modular and extensible. This will also make it easier to interface with OMC, making it possible to create more powerful and user-friendly OpenModelica-based tools. The compiler and its bootstrapping is a major effort it is currently about 330 000 lines of code, and the MetaModelica extensions are used routinely by approximately ten developers on a daily basis.", "paper_title": "Bootstrapping a Compiler for an Equation-Based Object-Oriented Language", "paper_id": "WOS:000333248800001"}