{"auto_keywords": [{"score": 0.034243830874721354, "phrase": "total_optimality"}, {"score": 0.00481495049065317, "phrase": "hard_computational_problems"}, {"score": 0.004515252649226697, "phrase": "central_notion"}, {"score": 0.0038624981944755813, "phrase": "turing_machine_model"}, {"score": 0.0036553070575015344, "phrase": "novel_optimization_method"}, {"score": 0.003459191419478298, "phrase": "nonexisting_universal_search_algorithm"}, {"score": 0.003140888248194296, "phrase": "automatic_way"}, {"score": 0.00286493504971388, "phrase": "sufficient_conditions"}, {"score": 0.0025071862539276283, "phrase": "limit_classes"}, {"score": 0.002361632539339945, "phrase": "non-recursive_solutions"}, {"score": 0.002224510044064184, "phrase": "intractable_and_undecidable_problems"}], "paper_keywords": ["problem solving", " process algebras", " anytime algorithms", " superTuring models of computation", " bounded rational agents", " $-calculus", " intractability", " undecidability", " completeness", " optimality", " search optimality", " total optimality"], "paper_abstract": "The $-calculus is the extension of the pi-calculus, built around the central notion of cost and allowing infinity in its operators. We propose the $-calculus as a more complete model for problem solving to provide a support to handle intractability and undecidability. It goes beyond the Turing Machine model. We define the semantics of the $-calculus using a novel optimization method (the k Omega-optimization), which approximates a nonexisting universal search algorithm and allows the simulation of many other search methods. In particular, the notion of total optimality has been utilized to provide an automatic way to deal with intractability of problem solving by optimizing together the quality of solutions and search costs. The sufficient conditions needed for completeness, optimality and total optimality of problem solving search are defined. A very flexible classification scheme of problem solving methods into easy, hard and solvable in the limit classes has been proposed. In particular, the third class deals with non-recursive solutions of undecidable problems. The approach is illustrated by solutions of some intractable and undecidable problems. We also briefly overview two possible implementations of the $-calculus. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "The $-calculus process algebra for problem solving: A paradigmatic shift in handling hard computational problems", "paper_id": "WOS:000249704200007"}