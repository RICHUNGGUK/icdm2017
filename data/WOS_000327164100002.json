{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cardiac_electrophysiology"}, {"score": 0.04494965530581908, "phrase": "mesh_adaptivity"}, {"score": 0.004550669123303854, "phrase": "small_time_steps"}, {"score": 0.004481132747216135, "phrase": "highly_localized_wavefronts"}, {"score": 0.004106612344123407, "phrase": "overall_computational_load"}, {"score": 0.0038810583785936505, "phrase": "single_processor"}, {"score": 0.00374399358035391, "phrase": "adaptivity_algorithm"}, {"score": 0.003574830654211291, "phrase": "sequential_adaptive_algorithm"}, {"score": 0.0035201528214608914, "phrase": "parallel_mesh_adaptivity_method"}, {"score": 0.0033957904376127187, "phrase": "dynamic_load"}, {"score": 0.003292685392413911, "phrase": "local_refinement"}, {"score": 0.0031116963435584982, "phrase": "mesh_partition_boundary"}, {"score": 0.0030327408069772293, "phrase": "mesh_regions"}, {"score": 0.0030017207229983385, "phrase": "high_relative_error"}, {"score": 0.002910545717767559, "phrase": "computational_load"}, {"score": 0.002836679611901583, "phrase": "parallel_scaling"}, {"score": 0.0027363971333961967, "phrase": "physiologically_realistic_heart"}, {"score": 0.00250732953434891, "phrase": "available_parallel_processes"}, {"score": 0.0024186620196958867, "phrase": "new_method"}, {"score": 0.0023211517663846346, "phrase": "sequential_adaptive_mesh_procedure"}, {"score": 0.0022738775158524793, "phrase": "parallel_overhead"}, {"score": 0.002250601866422547, "phrase": "inter-process_data_migration"}, {"score": 0.002193447487477984, "phrase": "overall_cost"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cardiac electrophysiology", " Parallelcomputing", " Anisotropic meshadaptivity", " Bidomain"], "paper_abstract": "Simulations in cardiac electrophysiology generally use very fine meshes and small time steps to resolve highly localized wavefronts. This expense motivates the use of mesh adaptivity, which has been demonstrated to reduce the overall computational load. However, even with mesh adaptivity performing such simulations on a single processor is infeasible. Therefore, the adaptivity algorithm must be parallelised. Rather than modifying the sequential adaptive algorithm, the parallel mesh adaptivity method introduced in this paper focuses on dynamic load balancing in response to the local refinement and coarsening of the mesh. In essence, the mesh partition boundary is perturbed away from mesh regions of high relative error, while also balancing the computational load across processes. The parallel scaling of the method when applied to physiologically realistic heart meshes is shown to be good as long as there are enough mesh nodes to distribute over the available parallel processes. It is shown that the new method is dominated by the cost of the sequential adaptive mesh procedure and that the parallel overhead of inter-process data migration represents only a small fraction of the overall cost. (C) 2011 Published by Elsevier B.V.", "paper_title": "Parallel anisotropic mesh adaptivity with dynamic load balancing for cardiac electrophysiology", "paper_id": "WOS:000327164100002"}