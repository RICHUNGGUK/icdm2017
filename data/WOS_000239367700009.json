{"auto_keywords": [{"score": 0.03545648497344867, "phrase": "functional_constraints"}, {"score": 0.014295324445128859, "phrase": "functional_mode"}, {"score": 0.014002924788942323, "phrase": "test_mode"}, {"score": 0.013325008086194558, "phrase": "overtesting_problem"}, {"score": 0.00481495049065317, "phrase": "recent_research_results"}, {"score": 0.0047155367844327, "phrase": "traditional_structural_testing"}, {"score": 0.004676345706416371, "phrase": "delay_and_signal_integrity_faults"}, {"score": 0.004522796947899013, "phrase": "nontrivial_number"}, {"score": 0.00417793854311445, "phrase": "pseudofunctional-test_methodology"}, {"score": 0.0040238512275833265, "phrase": "scan-based_circuits"}, {"score": 0.003990385737207714, "phrase": "automatic_test_pattern_generation"}, {"score": 0.003957198642650274, "phrase": "atpg"}, {"score": 0.0037324526526073404, "phrase": "first_pattern"}, {"score": 0.003685972800046028, "phrase": "two-pattern_test"}, {"score": 0.003306559295382181, "phrase": "functional_logic"}, {"score": 0.003265365666305185, "phrase": "second_pattern"}, {"score": 0.0031448288291084, "phrase": "functional_justification"}, {"score": 0.002966084234963723, "phrase": "sequential_boolean_satisfiability_solver"}, {"score": 0.0028446460307503343, "phrase": "illegal_states"}, {"score": 0.0028209599545587745, "phrase": "internal_signal_correlation"}, {"score": 0.002728166176898539, "phrase": "atpg_tool"}, {"score": 0.0026941587813581252, "phrase": "pseudofunctional_tests"}, {"score": 0.0026055251533586804, "phrase": "bist_environment"}, {"score": 0.002530359917257626, "phrase": "random_test_pattern_generator"}, {"score": 0.002477998427152547, "phrase": "experimental_results"}, {"score": 0.0024573577356299765, "phrase": "delay_faults"}, {"score": 0.0023964590500856887, "phrase": "functionally_untestable_delay_faults"}, {"score": 0.0022507188208913394, "phrase": "delay_testing"}, {"score": 0.0021315842986705485, "phrase": "proposed_constraint_extraction_method"}, {"score": 0.0021049977753042253, "phrase": "proposed_bist_scheme"}], "paper_keywords": ["Boolean satisfiability (SAT)", " built-in self-test (BIST)", " delay testing", " very large scale integration (VLSI) circuit testing"], "paper_abstract": "Recent research results have shown that the traditional structural testing for delay and signal integrity faults may result in overtesting due to the nontrivial number of such faults that are untestable in the functional mode although testable in the test mode. This paper presents a pseudofunctional-test methodology that attempts to minimize the overtesting problem of the scan-based circuits in automatic test pattern generation (ATPG) and built-in self-test (BIST) test generation approaches. The first pattern of a two-pattern test is still delivered by scan in the test mode but the pattern is generated in such a way that it does not violate the functional constraints extracted from the functional logic. The second pattern is then generated in a functional mode using the functional justification (also called broadside) test application scheme. The authors use a sequential boolean satisfiability solver to extract a set of functional constraints that consists of illegal states and internal signal correlation. The functional constraints are imposed upon an ATPG tool to generate pseudofunctional tests and/or implemented as a monitor in the BIST environment to allow only functional-like patterns generated from the random test pattern generator as tests. The experimental results for delay faults indicate that the percentage of functionally untestable delay faults is nontrivial for many circuits. This finding supports the hypothesis of the overtesting problem in delay testing. In addition, the results indicate the effectiveness. of the proposed constraint extraction method and the proposed BIST scheme.", "paper_title": "Pseudofunctional testing", "paper_id": "WOS:000239367700009"}