{"auto_keywords": [{"score": 0.049031285206733534, "phrase": "grid"}, {"score": 0.00481495049065317, "phrase": "file_transfer_approach"}, {"score": 0.004505638402009237, "phrase": "file_transfer"}, {"score": 0.0036914757355166966, "phrase": "different_environmental_requirements"}, {"score": 0.003531474887552889, "phrase": "different_techniques"}, {"score": 0.0032800186243040663, "phrase": "heterogeneous_grid_resource_acquisition_protocols"}, {"score": 0.002914288956035066, "phrase": "asynchronous_file_transfer_mechanism"}, {"score": 0.002850385670169814, "phrase": "active_objects"}, {"score": 0.0025137856138000014, "phrase": "proposed_file_transfer_model"}, {"score": 0.0024768895948295714, "phrase": "proactive"}, {"score": 0.002233301265743633, "phrase": "grid_infrastructure_abstraction"}, {"score": 0.0022005118194652704, "phrase": "deployment_descriptors"}, {"score": 0.0021363670305843403, "phrase": "active_object_model"}, {"score": 0.0021049977753042253, "phrase": "transparent_futures"}], "paper_keywords": [""], "paper_abstract": "We propose a file transfer approach for the Grid. We have identified that file transfer in the Grid can take place at three different stages: deployment, user application execution, and retrieval (post-execution). Each stage has different environmental requirements, and therefore we apply different techniques. Our contribution comes from: (i) integrating heterogeneous Grid resource acquisition protocols and file transfer protocols including deployment and retrieval, and (ii) providing an asynchronous file transfer mechanism based on active objects, wait-by-necessity, and automatic continuation. We validate and benchmark the proposed file transfer model using ProActive, a Grid programming middleware. ProActive provides, among others; a Grid infrastructure abstraction using deployment descriptors, and an active object model using transparent futures.", "paper_title": "Grid file transfer during deployment, execution, and retrieval", "paper_id": "WOS:000243318600009"}