{"auto_keywords": [{"score": 0.035738134354936495, "phrase": "proposed_approach"}, {"score": 0.034523631161673105, "phrase": "software_mechanism"}, {"score": 0.03393139807622968, "phrase": "hardware_logic"}, {"score": 0.00481495049065317, "phrase": "register-file_leakage_energy"}, {"score": 0.004758053266234474, "phrase": "register-usage_exploiting"}, {"score": 0.0046739596755881185, "phrase": "dynamic_voltage_scaling_technique"}, {"score": 0.004378078970574258, "phrase": "important_role"}, {"score": 0.004004436217742343, "phrase": "compiler-aided_approach"}, {"score": 0.0035341028694769036, "phrase": "unused_registers"}, {"score": 0.0034922880300145283, "phrase": "low_power_mode"}, {"score": 0.003450966222451681, "phrase": "voltage-scaling_controls"}, {"score": 0.003009390313137981, "phrase": "schedule_voltage-scaling_controls"}, {"score": 0.0027522340188241446, "phrase": "\"connected\"_recorder"}, {"score": 0.0027034948760997564, "phrase": "power_states"}, {"score": 0.0026714812866037584, "phrase": "multiple_registers"}, {"score": 0.0026241684260044414, "phrase": "sequential_voltage-scaling_controls"}, {"score": 0.002399850604120431, "phrase": "simulation_results"}, {"score": 0.0022881443200668886, "phrase": "total_register_file_energy_consumption"}, {"score": 0.002234252028553481, "phrase": "leakage_energy_saving"}, {"score": 0.002168664249034289, "phrase": "well_trade-offs"}, {"score": 0.0021049977753042253, "phrase": "energy-delay_product"}], "paper_keywords": ["register file", " leakage energy", " register-usage exploiting", " register assignment", " dynamic voltage scaling"], "paper_abstract": "Applying dynamic voltage scaling technique to design a low-power register file plays an important role in modem embedded-processor design. In this paper, we propose a compiler-aided approach to find out in a program which and when the registers would not be used, and to turn these unused registers into low power mode through voltage-scaling controls. The proposed approach can be partitioned into the software mechanism and the hardware logic. For the software mechanism, we exploit register-usage and schedule voltage-scaling controls at selected points in a program. For the hardware logic, we propose a \"connected\" recorder to store power states for multiple registers such that sequential voltage-scaling controls can be performed in a batch, instead of one power-state update just for only one register. Simulation results show that the proposed approach not only improves total register file energy consumption by 21%-28% through leakage energy saving, but also provides well trade-offs in the term of energy-delay product.", "paper_title": "Saving register-file leakage energy by register-usage exploiting", "paper_id": "WOS:000259662700009"}