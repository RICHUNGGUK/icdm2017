{"auto_keywords": [{"score": 0.046342356261545856, "phrase": "client-side_hash_functions"}, {"score": 0.01385706967145842, "phrase": "server-side_hash_functions"}, {"score": 0.00481495049065317, "phrase": "broken_hash_functions"}, {"score": 0.004614745158543967, "phrase": "collision-finding_attacks"}, {"score": 0.004526503177267299, "phrase": "time-stamping_schemes"}, {"score": 0.004271729935895193, "phrase": "time-stamping_servers"}, {"score": 0.004141742095830515, "phrase": "causal_relations"}, {"score": 0.004109865377936045, "phrase": "time_stamps"}, {"score": 0.0039694170761766226, "phrase": "client_side_hash_functions"}, {"score": 0.0038934666267504596, "phrase": "explicit_separation_techniques"}, {"score": 0.0037749456215035856, "phrase": "secure_time-stamping"}, {"score": 0.0036600192572132676, "phrase": "side_hash_functions"}, {"score": 0.0034405207528624983, "phrase": "black-box_techniques"}, {"score": 0.0033228699494959172, "phrase": "corresponding_time-stamping_schemes"}, {"score": 0.0031845067058084613, "phrase": "hash_function"}, {"score": 0.0030283730114326014, "phrase": "hash_functions"}, {"score": 0.002879872305061576, "phrase": "practical_hash_functions"}, {"score": 0.00268616928039386, "phrase": "md_hash_functions"}, {"score": 0.002644920521740564, "phrase": "randomly_chosen_initial_states"}, {"score": 0.0025942468561537682, "phrase": "necessary_security_conditions"}, {"score": 0.0025054621733192283, "phrase": "black-box_separations_results"}, {"score": 0.002401053532270901, "phrase": "black-box_setting"}, {"score": 0.002364172626241202, "phrase": "practical_consequence"}, {"score": 0.0023009861566484578, "phrase": "ripemd"}], "paper_keywords": [""], "paper_abstract": "We study the influence of collision-finding attacks on the security of time-stamping schemes. We distinguish between client-side hash functions used to shorten the documents before sending them to time-stamping servers and server-side hash functions used for establishing one way causal relations between time stamps. We derive necessary and sufficient conditions for client side hash functions and show by using explicit separation techniques that neither collision-resistance nor 2nd preimage resistance is necessary for secure time-stamping. Moreover, we show that server side hash functions can even be not one-way. Hence, it is impossible by using black-box techniques to transform collision-finders into wrappers that break the corresponding time-stamping schemes. Each such wrapper should analyze the structure of the hash function. However, these separations do not necessarily hold for more specific classes of hash functions. Considering this, we take a more detailed look at the structure of practical hash functions by studying the Merkle-Damgard (MD) hash functions. We show that attacks, which are able to find collisions for MD hash functions with respect to randomly chosen initial states, also violate the necessary security conditions for client-side hash functions. This does not contradict the black-box separations results because the MD structure is already a deviation from the black-box setting. As a practical consequence, MD5, SHA-0, and RIPEMD are no more recommended to use as client-side hash functions in time-stamping. However, there is still no evidence against using MD5 (or even MD4) as server-side hash functions.", "paper_title": "Do broken hash functions affect the security of time-stamping schemes?", "paper_id": "WOS:000238570400004"}