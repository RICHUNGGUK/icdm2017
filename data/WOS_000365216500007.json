{"auto_keywords": [{"score": 0.04941343102175344, "phrase": "visibly_pushdown_automata"}, {"score": 0.00481495049065317, "phrase": "ramsey-based_inclusion_checking"}, {"score": 0.004426882270402403, "phrase": "important_inmany_verification_tasks"}, {"score": 0.003848088904418221, "phrase": "finite_and_infinite_words"}, {"score": 0.003768028741967194, "phrase": "pushdown_automata"}, {"score": 0.003689628075766217, "phrase": "richer_automaton_model"}, {"score": 0.0036128527616772848, "phrase": "classical_finite-state_automata"}, {"score": 0.0031182092708983184, "phrase": "recursive_imperative_programs"}, {"score": 0.0030532878377173885, "phrase": "presented_solutions"}, {"score": 0.002948066398723126, "phrase": "explicit_automaton_constructions"}, {"score": 0.002653606593103781, "phrase": "so-called_ramsey-based_inclusion-checking_algorithms"}, {"score": 0.0021049977753042253, "phrase": "explicit_determinization_and_complementation_constructions"}], "paper_keywords": ["Algorithms", " Theory", " Verification", " Automata over finite and infinite words", " visibly pushdown languages", " nested words", " decision problems", " verification"], "paper_abstract": "Checking whether one formal language is included in another is important inmany verification tasks. In this article, we provide solutions for checking the inclusion of languages given by visibly pushdown automata over both finite and infinite words. Visibly pushdown automata are a richer automaton model than the classical finite-state automata, which allows one, for example, to reason about the nesting of procedure calls in the executions of recursive imperative programs. The presented solutions do not rely on explicit automaton constructions for determinization and complementation. Instead, they are more direct and generalize the so-called Ramsey-based inclusion-checking algorithms, which apply to classical finite-state automata and proved to be effective there to visibly pushdown automata. We also experimentally evaluate these algorithms, demonstrating the virtues of avoiding explicit determinization and complementation constructions.", "paper_title": "Ramsey-Based Inclusion Checking for Visibly Pushdown Automata", "paper_id": "WOS:000365216500007"}