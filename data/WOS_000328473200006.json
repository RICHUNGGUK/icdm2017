{"auto_keywords": [{"score": 0.03318201413262532, "phrase": "composite_service"}, {"score": 0.015719716506582538, "phrase": "conditional_branch_structures"}, {"score": 0.014126467248336104, "phrase": "service_composition"}, {"score": 0.012574945339095419, "phrase": "real-world_environment"}, {"score": 0.010386814762562854, "phrase": "process_model"}, {"score": 0.00470325458481566, "phrase": "value-added_services"}, {"score": 0.004594137808658537, "phrase": "existing_ones"}, {"score": 0.004508661664944657, "phrase": "significant_momentum"}, {"score": 0.00444559516711374, "phrase": "potential_silver_bullet"}, {"score": 0.00440403952059725, "phrase": "service-oriented_architecture"}, {"score": 0.004162703509434786, "phrase": "users'_needs"}, {"score": 0.003916098498242888, "phrase": "existing_services"}, {"score": 0.0035648266669315943, "phrase": "nondeterministic_choices"}, {"score": 0.003353521531649663, "phrase": "existing_automated_service_composition_techniques"}, {"score": 0.0032145922365231093, "phrase": "existing_methods"}, {"score": 0.002778529097886437, "phrase": "users'_diverse_and_personalised_needs"}, {"score": 0.0027139447110929586, "phrase": "dynamic_changes"}, {"score": 0.002650857539177183, "phrase": "activity_diagrams"}, {"score": 0.0025171669791790438, "phrase": "user_preferences"}, {"score": 0.0023678143146455017, "phrase": "previous_work"}, {"score": 0.0023346234464901978, "phrase": "simple_programming_language_style_expression"}, {"score": 0.002196077907454079, "phrase": "different_situations"}, {"score": 0.0021652891317252994, "phrase": "real-life_case"}, {"score": 0.0021049977753042253, "phrase": "proposed_concepts"}], "paper_keywords": ["web service", " service composition", " user preference", " control construct", " conditional branch structure"], "paper_abstract": "The creation of value-added services by automatic composition of existing ones is gaining a significant momentum as the potential silver bullet in service-oriented architecture. However, service composition faces two aspects of difficulties. First, users' needs present such characteristics as diversity, uncertainty and personalisation; second, the existing services run in a real-world environment that is highly complex and dynamically changing. These difficulties may cause the emergence of nondeterministic choices in the process of service composition, which has gone beyond what the existing automated service composition techniques can handle. According to most of the existing methods, the process model of composite service includes sequence constructs only. This article presents a method to introduce conditional branch structures into the process model of composite service when needed, in order to satisfy users' diverse and personalised needs and adapt to the dynamic changes of real-world environment. UML activity diagrams are used to represent dependencies in composite service. Two types of user preferences are considered in this article, which have been ignored by the previous work and a simple programming language style expression is adopted to describe them. Two different algorithms are presented to deal with different situations. A real-life case is provided to illustrate the proposed concepts and methods.", "paper_title": "Automated web service composition supporting conditional branch structures", "paper_id": "WOS:000328473200006"}