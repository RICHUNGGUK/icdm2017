{"auto_keywords": [{"score": 0.030464026954326838, "phrase": "mbti_type"}, {"score": 0.02306479517096902, "phrase": "pair_programming"}, {"score": 0.00481495049065317, "phrase": "underlying_aspects"}, {"score": 0.004662427600500598, "phrase": "recent_advent"}, {"score": 0.00462919213721188, "phrase": "agile_software_process_methods"}, {"score": 0.0045471315699087385, "phrase": "seldom_used_and_unorthodox_practices"}, {"score": 0.004387329529902255, "phrase": "computer_programming"}, {"score": 0.0041283957965834875, "phrase": "collaborative_programming_purposes"}, {"score": 0.004011867299107537, "phrase": "psychological_and_social_interaction"}, {"score": 0.003969018740062018, "phrase": "participating_programmers"}, {"score": 0.0038708031633013086, "phrase": "unique_element"}, {"score": 0.0037615180375561805, "phrase": "conventional_individual_programming_model"}, {"score": 0.003603327452846714, "phrase": "psychological_factors"}, {"score": 0.003451766520526601, "phrase": "pair_programming_environment"}, {"score": 0.003342280102112269, "phrase": "university_students"}, {"score": 0.0030669459467997547, "phrase": "mbti"}, {"score": 0.002695768552609587, "phrase": "last_group"}, {"score": 0.0024036292057373803, "phrase": "code_productivity"}, {"score": 0.0022696277881969896, "phrase": "higher_productivity"}, {"score": 0.0022054488653549175, "phrase": "alike_and_opposite_groups"}, {"score": 0.0021049977753042253, "phrase": "alike_group"}], "paper_keywords": [""], "paper_abstract": "With the recent advent of agile software process methods, a number of seldom used and unorthodox practices have come to the fore-front in the field of computer programming. One such practice is that of pair programming, which is characterized by two programmers sharing the same computer for collaborative programming purposes. The very nature of pair programming implies a psychological and social interaction between the participating programmers and thus brings into play a unique element that we do not see with the conventional individual programming model. This paper focuses on the effects that one of these psychological factors, a programmer's personality type, may have on the pair programming environment. In this study, a group of university students, 68 undergraduate students and 60 master's degree graduate students, each of whom had been personality type profiled using the Myers Briggs Type Indicator (MBTI) model, was split into three sub-groups. One group consisted of subjects who were like in MBTI type. Another group consisted of subjects who were opposite to each other in MBTI type, and the last group was comprised of subjects who were diverse - partially alike and partially opposite - in MBTI type. Through two pair programming sessions, the pairs in each group were assessed for their output, in code productivity. The result showed that the sub-group of subjects who were diverse in MBTI type exhibited higher productivity than both alike and opposite groups. In a comparison between alike and opposite groups, the productivity of the opposite group was greater than that of the alike group.", "paper_title": "Exploring the underlying aspects of pair programming: The impact of personality", "paper_id": "WOS:000259709200005"}