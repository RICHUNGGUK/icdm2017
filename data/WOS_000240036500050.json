{"auto_keywords": [{"score": 0.05007790487471951, "phrase": "coarse-grain_reconfigurable_hardware"}, {"score": 0.039541503396406254, "phrase": "sta"}, {"score": 0.0041102032028337366, "phrase": "common_machine_description"}, {"score": 0.0038309141193444015, "phrase": "core_generator"}, {"score": 0.0033277936960179892, "phrase": "non-orthogonal_instruction_set_architecture"}, {"score": 0.0031565959573536194, "phrase": "efficient_code"}, {"score": 0.00304737045343781, "phrase": "highly_optimizing_techniques"}, {"score": 0.0025328377393370642, "phrase": "execution_time"}, {"score": 0.0024667783849055634, "phrase": "assembly_code"}, {"score": 0.0023192471808039746, "phrase": "code_generation"}, {"score": 0.0022192891418394514, "phrase": "acceptable_time"}, {"score": 0.0021049977753042253, "phrase": "real_time"}], "paper_keywords": [""], "paper_abstract": "Synchronous Transfer Architecture (STA) is a coarse-grain reconfigurable hardware. It is modelled by using a common machine description that is suitable for both compiler and core generator. STA is a Very Long Instruction Word (VLIW) architecture and in addition it uses a non-orthogonal Instruction Set Architecture (ISA). Generating efficient code for such ISA needs highly optimizing techniques. This paper presents a basic data routing Integer Linear Programming (ILP) model for STA code generation. We will also show in this paper, the execution time of the assembly code can be dramatically reduced. The code generation can be accomplished in acceptable time and it can even be real time by reducing the degree of optimality.", "paper_title": "A basic data routing model for a coarse-grain reconfigurable hardware", "paper_id": "WOS:000240036500050"}