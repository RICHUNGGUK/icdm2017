{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "kremlin"}, {"score": 0.0045726627464237205, "phrase": "parallelization"}, {"score": 0.00447251540886613, "phrase": "paper_overviews"}, {"score": 0.004063348730077936, "phrase": "serial_programs"}, {"score": 0.003916098498242888, "phrase": "serial_source_code"}, {"score": 0.003378385493203297, "phrase": "typical_profiler"}, {"score": 0.0030464123943266673, "phrase": "novel_technique"}, {"score": 0.00266693888510356, "phrase": "parallelized_program"}, {"score": 0.0024586427394152196, "phrase": "manual_parallelization"}, {"score": 0.002233301265743633, "phrase": "significantly_fewer_regions"}, {"score": 0.0021049977753042253, "phrase": "user_study"}], "paper_keywords": ["Measurement", " Performance"], "paper_abstract": "This paper overviews Kremlin, a software profiling tool designed to assist the parallelization of serial programs. Kremlin accepts a serial source code, profiles it, and provides a list of regions that should be considered in parallelization. Unlike a typical profiler, Kremlin profiles not only work but also parallelism, which is accomplished via a novel technique called hierarchical critical path analysis. Our evaluation demonstrates that Kremlin is highly effective, resulting in a parallelized program whose performance sometimes outperforms, and is mostly comparable to, manual parallelization. At the same time, Kremlin would require that the user parallelize significantly fewer regions of the program. Finally, a user study suggests Kremlin is effective in improving the productivity of programmers.", "paper_title": "Kremlin: Like gprof, but for Parallelization", "paper_id": "WOS:000296264900030"}