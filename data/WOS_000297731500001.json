{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "possible_winners"}, {"score": 0.004342430078306461, "phrase": "candidate_c"}, {"score": 0.003802135020791801, "phrase": "new_candidates"}, {"score": 0.0036373553416391823, "phrase": "resulting_election"}, {"score": 0.0031377955308198634, "phrase": "cloning_manipulation"}, {"score": 0.0029722900280316216, "phrase": "surprisingly_delicate_issue"}, {"score": 0.002843372121209168, "phrase": "common_voting_rules"}, {"score": 0.0027878797103973313, "phrase": "preference_profiles"}, {"score": 0.0027334673433027086, "phrase": "successful_cloning_manipulation"}, {"score": 0.002404706573379854, "phrase": "minimum-cost_cloning_manipulation"}, {"score": 0.0021049977753042253, "phrase": "new_alternatives"}], "paper_keywords": [""], "paper_abstract": "We consider the problem of manipulating elections by cloning candidates. In our model, a manipulator can replace each candidate c by several clones, i.e., new candidates that are so similar to c that each voter simply replaces c in his vote with a block of these new candidates, ranked consecutively. The outcome of the resulting election may then depend on the number of clones as well as on how each voter orders the clones within the block. We formalize what it means for a cloning manipulation to be successful (which turns out to be a surprisingly delicate issue), and, for a number of common voting rules, characterize the preference profiles for which a successful cloning manipulation exists. We also consider the model where there is a cost associated with producing each clone, and study the complexity of finding a minimum-cost cloning manipulation. Finally, we compare cloning with two related problems: the problem of control by adding candidates and the problem of possible (co) winners when new alternatives can join.", "paper_title": "Cloning in Elections: Finding the Possible Winners", "paper_id": "WOS:000297731500001"}