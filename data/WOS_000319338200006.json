{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_failures"}, {"score": 0.004543708337879809, "phrase": "event_logs"}, {"score": 0.004225950334493496, "phrase": "failure_behavior"}, {"score": 0.0038457240885563146, "phrase": "logging_mechanism"}, {"score": 0.00376293585033711, "phrase": "systematic_approach"}, {"score": 0.0037087324991876727, "phrase": "collected_logs"}, {"score": 0.0033021988455635403, "phrase": "log-based_failure_analysis"}, {"score": 0.0031159081999910694, "phrase": "current_logging_mechanisms"}, {"score": 0.0030267296900520217, "phrase": "rule-based_approach"}, {"score": 0.0027143926774929957, "phrase": "system_design_time"}, {"score": 0.0024519545383399773, "phrase": "logging_instructions"}, {"score": 0.0023990982005125763, "phrase": "source_code"}, {"score": 0.0022148335975074904, "phrase": "traditional_logging_mechanisms"}], "paper_keywords": ["Event log", " logging mechanism", " rule-based logging", " error detection", " software failures"], "paper_abstract": "Event logs have been widely used over the last three decades to analyze the failure behavior of a variety of systems. Nevertheless, the implementation of the logging mechanism lacks a systematic approach and collected logs are often inaccurate at reporting software failures: This is a threat to the validity of log-based failure analysis. This paper analyzes the limitations of current logging mechanisms and proposes a rule-based approach to make logs effective to analyze software failures. The approach leverages artifacts produced at system design time and puts forth a set of rules to formalize the placement of the logging instructions within the source code. The validity of the approach, with respect to traditional logging mechanisms, is shown by means of around 12,500 software fault injection experiments into real-world systems.", "paper_title": "Event Logs for the Analysis of Software Failures: A Rule-Based Approach", "paper_id": "WOS:000319338200006"}