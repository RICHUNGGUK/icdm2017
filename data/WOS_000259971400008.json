{"auto_keywords": [{"score": 0.04934553301452922, "phrase": "context-triggered_properties"}, {"score": 0.00481495049065317, "phrase": "auxiliary_state_machines"}, {"score": 0.004491678520807451, "phrase": "interface_protocols"}, {"score": 0.004388796812234033, "phrase": "design-under-test_and_its_environment_mostly_consist"}, {"score": 0.003760385494931853, "phrase": "protocol_execution"}, {"score": 0.0034806529881619454, "phrase": "protocol_state"}, {"score": 0.003374655868348244, "phrase": "specific_set"}, {"score": 0.0031477782772867655, "phrase": "increasingly_popular_design_choice"}, {"score": 0.003075583447856341, "phrase": "assertion_ip_design_community"}, {"score": 0.0029361086955646625, "phrase": "abstract_context_state_machines"}, {"score": 0.002891032998395276, "phrase": "state-oriented_properties"}, {"score": 0.0026965813247045427, "phrase": "modeling_style"}, {"score": 0.0026551731045904854, "phrase": "present_algorithms"}, {"score": 0.0024574537875026634, "phrase": "purely_formal_approach"}, {"score": 0.002401053532270901, "phrase": "semi-formal_approach"}, {"score": 0.002205079358459154, "phrase": "design_style"}, {"score": 0.0021049977753042253, "phrase": "industry_standard_protocol_descriptions"}], "paper_keywords": [""], "paper_abstract": "Formal specifications of interface protocols between a design-under-test and its environment mostly consist of two types of correctness requirements, namely (a) a set of invariants that applies throughout the protocol execution and (b) a set of context-triggered properties that applies only when the protocol state belongs to a specific set of contexts. To model such requirements, an increasingly popular design choice in the assertion IP design community has been the use of abstract context state machines and state-oriented properties. In this paper, we formalize this modeling style and present algorithms for verifying such specifications. Specifically, we present a purely formal approach and a semi-formal approach for verifying such specifications. We demonstrate the use of this design style in modeling some of the industry standard protocol descriptions and present encouraging results.", "paper_title": "Auxiliary State Machines plus Context-Triggered Properties in Verification", "paper_id": "WOS:000259971400008"}