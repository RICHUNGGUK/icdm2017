{"auto_keywords": [{"score": 0.03029144523685437, "phrase": "new_methods"}, {"score": 0.00481495049065317, "phrase": "critical_block"}, {"score": 0.004701015188740578, "phrase": "fuzzy_inference_engine"}, {"score": 0.004617328272121826, "phrase": "different_variations"}, {"score": 0.004562362497952548, "phrase": "also_high_computational_power_demands"}, {"score": 0.004322967486451877, "phrase": "different_cost-accuracy_trade-off_points"}, {"score": 0.0039043835848369215, "phrase": "complete_set"}, {"score": 0.003857871979942733, "phrase": "existing_defuzzification_methods"}, {"score": 0.003789137457228946, "phrase": "accuracy_analysis_simulation_results"}, {"score": 0.003526186748088922, "phrase": "acceptable_precision"}, {"score": 0.0033812801309408514, "phrase": "software_models"}, {"score": 0.0032618078775887077, "phrase": "defuzzification_methods"}, {"score": 0.0031465815787778675, "phrase": "intel"}, {"score": 0.003109031770476385, "phrase": "pentium_iv"}, {"score": 0.0030720168921016715, "phrase": "ibm"}, {"score": 0.003035343807546224, "phrase": "powerpc"}, {"score": 0.0029817438235788473, "phrase": "ti"}, {"score": 0.002628362641980801, "phrase": "hardware_models"}, {"score": 0.0022895278869126848, "phrase": "power_consumption"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Fuzzy hardware", " Defuzzification", " VLSI", " Fuzzy software", " Fuzzy control"], "paper_abstract": "The defuzzification is a critical block when implementing a fuzzy inference engine due to different variations and also high computational power demands of defuzzification algorithms. These various methods stand for different cost-accuracy trade-off points. Three new implementation friendly defuzzification algorithms are presented in this paper and compared with a complete set of existing defuzzification methods. Some accuracy analysis simulation results and analytic studies are provided to demonstrate that these methods provide acceptable precision with respect to other existing methods. The software models of the proposed and exiting defuzzification methods are developed under three well-known platforms, Intel's Pentium IV, IBM's PowerPC, and TI's C62 DSP to show that new methods gain much lower execution-time and instruction-count with respect to the most common existing methods. The hardware models of all these methods are also developed and synthesized to demonstrate the superiority of the new methods in terms of area, delay, and power consumption with respect to other methods when implemented in hardware. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Defuzzification block: New algorithms, and efficient hardware and software implementation issues", "paper_id": "WOS:000313855000013"}