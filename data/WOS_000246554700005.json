{"auto_keywords": [{"score": 0.049226991195811136, "phrase": "network_processors"}, {"score": 0.045693275459193064, "phrase": "net_remoting"}, {"score": 0.00481495049065317, "phrase": "stateful_object"}, {"score": 0.004672953146379813, "phrase": "distributed_object-oriented_environments"}, {"score": 0.004508048086020253, "phrase": "parallel_and_distributed_service_frameworks"}, {"score": 0.0044277810648955624, "phrase": "distributed_object-oriented_software"}, {"score": 0.00429715240295033, "phrase": "language_layer"}, {"score": 0.004047296286849109, "phrase": "net_environments"}, {"score": 0.00374399358035391, "phrase": "meta-clustered_environments"}, {"score": 0.0034426417353349567, "phrase": "content-based_switch"}, {"score": 0.003321008590273796, "phrase": "remote_invocations"}, {"score": 0.00328142461738965, "phrase": "net."}, {"score": 0.0032229262928681304, "phrase": "stateful_supports"}, {"score": 0.0031845067058084583, "phrase": "net_remoting_services"}, {"score": 0.002963390095037466, "phrase": "work-flow_models"}, {"score": 0.0027575842698911173, "phrase": "grid_architectures"}, {"score": 0.0024753052303371627, "phrase": "ett"}, {"score": 0.0023313596289096347, "phrase": "rr"}, {"score": 0.0022895278869126848, "phrase": "stateful_task_ratio"}, {"score": 0.0021304214257321, "phrase": "net_remoting_computations"}, {"score": 0.0021049977753042253, "phrase": "meta-cluster_environments"}], "paper_keywords": ["grid computing", " distributed computingNET remoting", " NET remoting", " load-balancing scheduler", " network processor"], "paper_abstract": "Distributed object-oriented environments have become important platforms for parallel and distributed service frameworks. Among distributed object-oriented software, NET Remoting provides a language layer of abstractions for performing parallel and distributed computing in NET environments. In this paper, we present our methodologies in supporting NET Remoting over meta-clustered environments. We take the advantage of the programmability of network processors to develop the content-based switch for distributing workloads generated from remote invocations in NET. Our scheduling mechanisms include stateful supports for NET Remoting services. In addition, we also propose scheduling policy to incorporate work-flow models as the models are now incorporated in many of tools of grid architectures. The result of our experiment shows that the improvement of EFT is from 5% to 21% when compared to ETT and is from 8% to 34% when compared to RR while the stateful task ratio is 50%. Our schemes are effective in supporting the switching of NET Remoting computations over meta-cluster environments.", "paper_title": "Switching supports for stateful object remoting on network processors", "paper_id": "WOS:000246554700005"}