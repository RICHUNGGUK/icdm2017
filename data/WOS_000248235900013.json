{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hdl_descriptions"}, {"score": 0.004764220976404241, "phrase": "effective_functional_validation"}, {"score": 0.004714023408114857, "phrase": "simulation-based_functional_validation"}, {"score": 0.004566567411073082, "phrase": "primary_approaches"}, {"score": 0.0044237033788643715, "phrase": "hardware_description_languages"}, {"score": 0.004377077848734575, "phrase": "traditional_code_coverage_metrics"}, {"score": 0.004262643556463565, "phrase": "observability_issue"}, {"score": 0.0041074234667687875, "phrase": "functional_validation"}, {"score": 0.004064117897000019, "phrase": "observability-based_code_coverage_metric"}, {"score": 0.003936910716320182, "phrase": "first_code_coverage"}, {"score": 0.00385431710959668, "phrase": "essential_observability_issue"}, {"score": 0.0033579708256295847, "phrase": "lower_opportunities"}, {"score": 0.0031176485976102688, "phrase": "verification_results"}, {"score": 0.0030039966201398966, "phrase": "tag_coverage"}, {"score": 0.0029253546782349875, "phrase": "probabilistic_observability_measure"}, {"score": 0.0027889366191837504, "phrase": "new_occom"}, {"score": 0.0027015344365793016, "phrase": "hard-to-observe_points"}, {"score": 0.0025214217930287003, "phrase": "experimental_results"}, {"score": 0.002429451930463481, "phrase": "injected_errors"}, {"score": 0.0021049977753042253, "phrase": "reasonable_computation_time"}], "paper_keywords": ["code coverage metric", " hardware description language (HDL)", " observability analysis"], "paper_abstract": "Simulation-based functional validation is still one of the primary approaches for verifying designs described in hardware description languages. Traditional code coverage metrics do not address the observability issue and may overestimate the extent of functional validation. Observability-based code coverage metric (OCCOM) is the first code coverage metric considering the essential observability issue. However, tags can only be observed or unobserved, providing only two levels of measurement (i.e., 1 and 0). Errors with lower opportunities to be observed may still be judged as observable, thus misleading the verification results. Therefore, instead of extending tag coverage, we develop a probabilistic observability measure and its efficient computation algorithm. Besides being used as a new OCCOM, our new measure can point out hard-to-observe points for inserting assertions to prevent bugs from hiding behind these points. Experimental results show that the detection of the injected errors and the degree of our observability measure are strongly related. The results also show that our fine-grained observability measure is less likely to overestimate the extent of validation. with reasonable computation time.", "paper_title": "Observability analysis on HDL descriptions for effective functional validation", "paper_id": "WOS:000248235900013"}