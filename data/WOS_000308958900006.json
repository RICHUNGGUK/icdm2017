{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "resource_usage_anomalies"}, {"score": 0.013837703643344502, "phrase": "distributed_systems"}, {"score": 0.004772367030970874, "phrase": "large_distributed_systems"}, {"score": 0.004730158389701481, "phrase": "multi-scale_visualization"}, {"score": 0.004605748839642513, "phrase": "large_scale_distributed_systems"}, {"score": 0.004195418010131832, "phrase": "basic_information"}, {"score": 0.004139850082354509, "phrase": "individual_processor"}, {"score": 0.004103212598803194, "phrase": "network_utilization"}, {"score": 0.003977505904363489, "phrase": "data_reduction_techniques"}, {"score": 0.0036553070575015344, "phrase": "dynamic_behavior"}, {"score": 0.0036229421570951807, "phrase": "resource_utilization"}, {"score": 0.003543273649210823, "phrase": "applications_performance"}, {"score": 0.003329368827624161, "phrase": "large_scale"}, {"score": 0.0031845067058084583, "phrase": "trace_collection"}, {"score": 0.002761856557698856, "phrase": "volunteer_computing_berkeley_open_infrastructure_for_network_computing"}, {"score": 0.00260657976055413, "phrase": "resource_sharing_mechanism"}, {"score": 0.002438203996977464, "phrase": "input_file_size"}, {"score": 0.00241658945942583, "phrase": "berkeley_open_infrastructure_for_network_computing"}, {"score": 0.002250415129116109, "phrase": "unfair_resource_sharing"}, {"score": 0.002200861826643147, "phrase": "network_bottlenecks"}, {"score": 0.0021716540012278744, "phrase": "harmful_short-term_resource_sharing"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance visualization analysis", " large-scale distributed systems", " volunteer computing", " grid computing", " cloud computing", " resource usage anomalies"], "paper_abstract": "Understanding the behavior of large scale distributed systems is generally extremely difficult as it requires to observe a very large number of components over very large time. Most analysis tools for distributed systems gather basic information such as individual processor or network utilization. Although scalable because of the data reduction techniques applied before the analysis, these tools are often insufficient to detect or fully understand anomalies in the dynamic behavior of resource utilization and their influence on the applications performance. In this paper, we propose a methodology for detecting resource usage anomalies in large scale distributed systems. The methodology relies on four functionalities: characterized trace collection, multi-scale data aggregation, specifically tailored user interaction techniques, and visualization techniques. We show the efficiency of this approach through the analysis of simulations of the volunteer computing Berkeley Open Infrastructure for Network Computing architecture. Three scenarios are analyzed in this paper: analysis of the resource sharing mechanism, resource usage considering response time instead of throughput, and the evaluation of input file size on Berkeley Open Infrastructure for Network Computing architecture. The results show that our methodology enables to easily identify resource usage anomalies, such as unfair resource sharing, contention, moving network bottlenecks, and harmful short-term resource sharing. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Detection and analysis of resource usage anomalies in large distributed systems through multi-scale visualization", "paper_id": "WOS:000308958900006"}