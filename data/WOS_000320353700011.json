{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "relational_databases"}, {"score": 0.049584128839210984, "phrase": "keyword_search"}, {"score": 0.04334736474777173, "phrase": "existing_methods"}, {"score": 0.03174091337479878, "phrase": "proposed_method"}, {"score": 0.004250302819248558, "phrase": "complex_underlying_database_schemas"}, {"score": 0.004055998173160551, "phrase": "snapshot_keyword_queries"}, {"score": 0.004014035333627087, "phrase": "static_databases"}, {"score": 0.003693533648584145, "phrase": "long-term_interests"}, {"score": 0.00339853518227171, "phrase": "effective_and_efficient_facility"}, {"score": 0.003345895878114341, "phrase": "database_system"}, {"score": 0.0032940691998512963, "phrase": "continual_keyword_queries"}, {"score": 0.003143341238802547, "phrase": "efficient_method"}, {"score": 0.0030946423142739813, "phrase": "continual_top-k_keyword_queries"}, {"score": 0.0029224275921964724, "phrase": "existing_scheme"}, {"score": 0.0028622019660721363, "phrase": "relational_data_streams"}, {"score": 0.0027886573969044042, "phrase": "ranking_mechanisms"}, {"score": 0.0027454383581457555, "phrase": "query_processing_methods"}, {"score": 0.0026609940110902666, "phrase": "top-k_keyword_search"}, {"score": 0.002422890839801611, "phrase": "snapshot_top-k_results"}, {"score": 0.002360607691114015, "phrase": "top-k_results"}, {"score": 0.0022642601698943687, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Relational databases", " Information retrieval", " Database applications", " Keyword search", " Continual queries", " Results maintenance"], "paper_abstract": "Keyword search in relational databases has been widely studied in recent years because it requires users neither to master a certain structured query language nor to know the complex underlying database schemas. Most of the existing methods focus on answering snapshot keyword queries in static databases. In reality, however, databases are updated frequently, and users may have long-term interests in specific topics. To deal with such a situation, it is necessary to build an effective and efficient facility in a database system to support continual keyword queries. In this paper, we propose an efficient method for answering continual top-k keyword queries over relational databases. The proposed method is built on an existing scheme of keyword search on relational data streams, but incorporates the ranking mechanisms into the query processing methods and makes two optimizations to support top-k keyword search in relational databases. Compared to the existing methods, our method is more efficient both in computing the snapshot top-k results and in maintaining the top-k results when the database is continually updated. Experimental results validate the effectiveness and efficiency of the proposed method. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Scalable continual top-k keyword search in relational databases", "paper_id": "WOS:000320353700011"}