{"auto_keywords": [{"score": 0.03180628091012872, "phrase": "heterogeneous_architecture"}, {"score": 0.013957898849603585, "phrase": "svm_classification"}, {"score": 0.00481495049065317, "phrase": "novel_cascade_fpga_accelerator_for_support_vector_machines_classification"}, {"score": 0.0047689174754929195, "phrase": "support_vector_machines"}, {"score": 0.004633429997452688, "phrase": "powerful_machine"}, {"score": 0.004208881856146758, "phrase": "computationally_complex_task"}, {"score": 0.0041287394089001405, "phrase": "linear_dependencies"}, {"score": 0.004011366422179016, "phrase": "support_vectors"}, {"score": 0.003953932197201054, "phrase": "problem's_dimensionality"}, {"score": 0.0038415095105632157, "phrase": "fully_scalable_field_programmable_gate_array"}, {"score": 0.0035914198812657897, "phrase": "device_heterogeneity"}, {"score": 0.0035399770257915466, "phrase": "dynamic_range"}, {"score": 0.0034063576796640603, "phrase": "adaptive_and_fully-customized_processing_unit"}, {"score": 0.003293570937654716, "phrase": "available_heterogeneous_resources"}, {"score": 0.0032463805170627686, "phrase": "modern_fpga_device"}, {"score": 0.003215295260684715, "phrase": "efficient_way"}, {"score": 0.003138874040786261, "phrase": "problem's_characteristics"}, {"score": 0.0030938932434437178, "phrase": "implementation_results"}, {"score": 0.002948547333717581, "phrase": "speed-up_factor"}, {"score": 0.0028235667474151714, "phrase": "cpu_implementation"}, {"score": 0.0027830917623582903, "phrase": "proposed_architecture"}, {"score": 0.0027431953780099826, "phrase": "proposed_fpga_and_graphic_processor_unit"}, {"score": 0.0026142814606853037, "phrase": "special_properties"}, {"score": 0.0025034338848015166, "phrase": "first_fpga-oriented_cascade_svm_classifier_scheme"}, {"score": 0.00244392892165717, "phrase": "fpga"}, {"score": 0.0023857603808363527, "phrase": "custom-arithmetic_properties"}, {"score": 0.002273605493468005, "phrase": "proposed_cascade_scheme"}, {"score": 0.002208853811052348, "phrase": "heterogeneous_classifier_throughput"}, {"score": 0.0021049977753042253, "phrase": "resource_utilization"}], "paper_keywords": ["Cascade classifier", " classification", " field programmable gate array (FPGA)", " parallel processing", " support vector machines (SVMs)"], "paper_abstract": "Support vector machines (SVMs) are a powerful machine learning tool, providing state-of-the-art accuracy to many classification problems. However, SVM classification is a computationally complex task, suffering from linear dependencies on the number of the support vectors and the problem's dimensionality. This paper presents a fully scalable field programmable gate array (FPGA) architecture for the acceleration of SVM classification, which exploits the device heterogeneity and the dynamic range diversities among the dataset attributes. An adaptive and fully-customized processing unit is proposed, which utilizes the available heterogeneous resources of a modern FPGA device in efficient way with respect to the problem's characteristics. The implementation results demonstrate the efficiency of the heterogeneous architecture, presenting a speed-up factor of 2-3 orders of magnitude, compared to the CPU implementation. The proposed architecture outperforms other proposed FPGA and graphic processor unit approaches by more than seven times. Furthermore, based on the special properties of the heterogeneous architecture, this paper introduces the first FPGA-oriented cascade SVM classifier scheme, which exploits the FPGA reconfigurability and intensifies the custom-arithmetic properties of the heterogeneous architecture. The results show that the proposed cascade scheme is able to increase the heterogeneous classifier throughput even further, without introducing any penalty on the resource utilization.", "paper_title": "Novel Cascade FPGA Accelerator for Support Vector Machines Classification", "paper_id": "WOS:000305397900003"}