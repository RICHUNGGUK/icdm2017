{"auto_keywords": [{"score": 0.026921260551972685, "phrase": "iteration_phase"}, {"score": 0.00481495049065317, "phrase": "synchronous_parallel_polynomial_root_extraction"}, {"score": 0.00440825801245188, "phrase": "parallel_algorithm"}, {"score": 0.003694652993546994, "phrase": "durand-kerner's_method"}, {"score": 0.0033283624928018177, "phrase": "initialisation_phase"}, {"score": 0.003146360480030653, "phrase": "parallel_computation"}, {"score": 0.0030468495296763617, "phrase": "register_initialisation"}, {"score": 0.0029982770062678926, "phrase": "initial_approximation"}, {"score": 0.002472269923319476, "phrase": "initial_approximated_roots"}, {"score": 0.002191366809047192, "phrase": "iteration_steps"}], "paper_keywords": ["parallel algorithms", " polynomial root extraction", " iterative techniques", " ring architecture", " Durand-Kerner method"], "paper_abstract": "In this paper, a parallel algorithm for computing the roots of a given polynomial of degree n on a ring of processors is proposed. The algorithm implements Durand-Kerner's method and consists of two phases: initialisation, and iteration. In the initialisation phase all the necessary preparation steps are realised to start the parallel computation. It includes register initialisation and initial approximation of roots requiring 3n - 2 communications, 2 exponentiation, one multiplications, 6 divisions, and 4n - 3 additions. In the iteration phase, these initial approximated roots are corrected repeatedly and converge to their accurate values. The iteration phase is composed of some iteration steps, each consisting of 3n communications, 4n + 3 additions. 3n + 1 multiplications, and one division.", "paper_title": "The performance of synchronous parallel polynomial root extraction on a ring multicomputer", "paper_id": "WOS:000246830500006"}