{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "constrained_path_problems"}, {"score": 0.008643956011855494, "phrase": "flow_graph"}, {"score": 0.0044747919503484055, "phrase": "constraint_programming_approach"}, {"score": 0.0044025116437190785, "phrase": "ordered_disjoint-paths_problem"}, {"score": 0.004091370602573054, "phrase": "ordering_constraints"}, {"score": 0.0039280803011236395, "phrase": "ordered_simple_path"}, {"score": 0.0038962096720793443, "phrase": "mandatory_nodes_problem"}, {"score": 0.003710323357333052, "phrase": "simple_path"}, {"score": 0.0036355032885145894, "phrase": "mandatory_nodes"}, {"score": 0.0033646448121751574, "phrase": "appropriate_way"}, {"score": 0.003310236836421397, "phrase": "ospmn"}, {"score": 0.0031780228058373235, "phrase": "generalized_reachability_constraint"}, {"score": 0.0031393948330209224, "phrase": "directed_graph"}, {"score": 0.0030635374056374016, "phrase": "graph_variables"}, {"score": 0.0030262967460085366, "phrase": "domreachability_constraint"}, {"score": 0.0024281181691350085, "phrase": "strong_pruning"}, {"score": 0.00224701149477484, "phrase": "good_labeling_strategy"}, {"score": 0.0022196745041124888, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "directed_graphs"}], "paper_keywords": [""], "paper_abstract": "Constrained path problems have to do with finding paths in graphs subject to constraints. We present a constraint programming approach for solving the Ordered disjoint-paths problem (ODP), i.e., the Disjoint-paths problem where the pairs are associated with ordering constraints. In our approach, we reduce ODP to the Ordered simple path with mandatory nodes problem (OSPMN), i.e., the problem of finding a simple path containing a set of mandatory nodes in a given order. The reduction of the problem is motivated by the fact that we have an appropriate way of dealing with OSPMN based on DomReachability, a propagator that implements a generalized reachability constraint on a directed graph based on the concept of graph variables. The DomReachability constraint has three arguments: (1) a flow graph, i.e., a directed graph with a source node; (2) the dominance relation graph on nodes and edges of the flow graph; and (3) the transitive closure of the flow graph. Our experimental evaluation of DomReachability shows that it provides strong pruning, obtaining solutions with very little search. Furthermore, we show that DomReachability is also useful for defining a good labeling strategy. These experimental results give evidence that DomReachability is a useful primitive for solving constrained path problems over directed graphs.", "paper_title": "Using dominators for solving constrained path problems", "paper_id": "WOS:000235801500006"}