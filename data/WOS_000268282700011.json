{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "flexible_hardware_processor"}, {"score": 0.049483572884790016, "phrase": "elliptic_curve_cryptography"}, {"score": 0.004522796947899013, "phrase": "private_information"}, {"score": 0.004438642216475526, "phrase": "public_medium"}, {"score": 0.004274981117736524, "phrase": "data_protection"}, {"score": 0.00422177384286051, "phrase": "unauthorized_access"}, {"score": 0.0041173607642311085, "phrase": "ecc"}, {"score": 0.003916098498242888, "phrase": "efficient_mechanism"}, {"score": 0.0038431888954930083, "phrase": "sensitive_data"}, {"score": 0.003771631577951067, "phrase": "main_ecc_computation"}, {"score": 0.003701401653850141, "phrase": "scalar_multiplication"}, {"score": 0.003587235362628753, "phrase": "appropriate_sequence"}, {"score": 0.003542557455905503, "phrase": "point_operations"}, {"score": 0.0032858981413454802, "phrase": "computationally_expensive_modular_addition"}, {"score": 0.0031056437850836326, "phrase": "prime_finite_fields"}, {"score": 0.0030097975788892896, "phrase": "proposed_processor"}, {"score": 0.002953711377604328, "phrase": "five_primes"}, {"score": 0.0028987026482019534, "phrase": "nist"}, {"score": 0.0024625017739528096, "phrase": "modular_arithmetic_operations"}, {"score": 0.002172093645267283, "phrase": "used_prime"}, {"score": 0.0021049977753042253, "phrase": "typical_scalar_multiplication"}], "paper_keywords": ["Elliptic curve cryptography (ECC)", " modular arithmetic", " prime finite fields", " programmable hardware"], "paper_abstract": "Exchange of private information over a public medium must incorporate a method for data protection against unauthorized access. Elliptic curve cryptography (ECC) has become widely accepted as an efficient mechanism to secure sensitive data. The main ECC computation is a scalar multiplication, translating into an appropriate sequence of point operations, each involving several modular arithmetic operations. We describe a flexible hardware processor for performing computationally expensive modular addition, subtraction, multiplication, and inversion over prime finite fields GF(p). The proposed processor supports all five primes recommended by NIST, whose sizes are 192, 224, 256, 384, and 521 bits. It can also be programmed to automatically execute sequences of modular arithmetic operations. Our field-programmable gate-array implementation runs at 60 MHz and takes between 4 and 40 ms ( depending on the used prime) to perform a typical scalar multiplication.", "paper_title": "Flexible Hardware Processor for Elliptic Curve Cryptography Over NIST Prime Fields", "paper_id": "WOS:000268282700011"}