{"auto_keywords": [{"score": 0.039963567409225506, "phrase": "authorization_constraints"}, {"score": 0.010612387000973441, "phrase": "role-based_access_control_policies"}, {"score": 0.006254147387247657, "phrase": "ocl"}, {"score": 0.004563028873351776, "phrase": "computer_systems"}, {"score": 0.004502126088469323, "phrase": "security-critical_business_processes"}, {"score": 0.004125513927068713, "phrase": "different_security_requirements"}, {"score": 0.00398916666053909, "phrase": "healthcare_industry"}, {"score": 0.003935892934907777, "phrase": "digital_government"}, {"score": 0.0038573081851680656, "phrase": "financial_service_institutes"}, {"score": 0.0037297918570822876, "phrase": "policy_architect_design"}, {"score": 0.0036553070575015344, "phrase": "higher_level_organizational_rules"}, {"score": 0.0033045378860812403, "phrase": "systematic_way"}, {"score": 0.002907992115184249, "phrase": "history-based_authorization_constraints"}, {"score": 0.0027741761880779535, "phrase": "first-order_linear_temporal_logic"}, {"score": 0.0024084679931209514, "phrase": "theorem_prover"}, {"score": 0.0021049977753042253, "phrase": "authorization_engine"}], "paper_keywords": ["role-based access control policy", " authorization constraints", " linear temporal logic", " Object Constraint Language"], "paper_abstract": "Today, more and more sensitive data is stored on computer systems; security-critical business processes are mapped to their digital counterparts. This situation applies to institutes that have different security requirements, such as the healthcare industry, digital government, and financial service institutes. Authorization constraints help the policy architect design and express higher level organizational rules. Although the importance of authorization constraints has been addressed in the literature, a systematic way to verify and validate authorization constraints does not exist. In this paper, we specify both nontemporal and history-based authorization constraints in the Object Constraint Language (OCL) and first-order linear temporal logic (LTL). Based upon these specifications, we attempt to formally verify role-based access control policies with the help of a theorem prover and to validate policies with the UML-based Specification Environment ( USE) system, a validation tool for OCL constraints. We also describe an authorization engine, which supports the enforcement of authorization constraints.", "paper_title": "Analyzing and managing role-based access control policies", "paper_id": "WOS:000256017300005"}