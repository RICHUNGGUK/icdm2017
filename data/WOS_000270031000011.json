{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "crossbar_fabric"}, {"score": 0.004632388761885302, "phrase": "high-performance_packet_switches"}, {"score": 0.004165105357908494, "phrase": "unbuffered_crossbar_fabric_switches"}, {"score": 0.004026505114417176, "phrase": "internal_buffers"}, {"score": 0.0038924989779389424, "phrase": "complex_scheduler"}, {"score": 0.003799509133780117, "phrase": "output_ports"}, {"score": 0.0036908381347418805, "phrase": "crossbar_fabric_switches"}, {"score": 0.0035507457285983268, "phrase": "scheduling_complexity"}, {"score": 0.0034826993555190765, "phrase": "distributed_schedulers"}, {"score": 0.0033830587647810132, "phrase": "expensive_internal_buffers"}, {"score": 0.00317681090697906, "phrase": "novel_architecture"}, {"score": 0.0029400959763737364, "phrase": "small_number"}, {"score": 0.0029117710453690827, "phrase": "separate_internal_buffers"}, {"score": 0.002760778494680823, "phrase": "pbc_switch"}, {"score": 0.00269475174341129, "phrase": "buffered_crossbars"}, {"score": 0.002592369213499121, "phrase": "unbuffered_crossbars"}, {"score": 0.002469830206270585, "phrase": "pbc_architecture"}, {"score": 0.002446024708601971, "phrase": "simulations_results"}, {"score": 0.0023644936731468252, "phrase": "eight_buffers"}, {"score": 0.0023417010799384524, "phrase": "fabric_column"}, {"score": 0.002252701813819903, "phrase": "input_ports"}, {"score": 0.0021670777282518424, "phrase": "similar_performance"}, {"score": 0.0021049977753042253, "phrase": "n_buffers"}], "paper_keywords": ["Crossbar fabrics", " partially buffered crossbars", " scheduling"], "paper_abstract": "The crossbar fabric is widely used as the interconnect of high-performance packet switches due to its low cost and scalability. There are two main variants of the crossbar fabric: unbuffered and internally buffered. On one hand, unbuffered crossbar fabric switches exhibit the advantage of using no internal buffers. However, they require a complex scheduler to solve input and output ports contention. Internally, buffered crossbar fabric switches, on the other hand, overcome the scheduling complexity by means of distributed schedulers. However, they require expensive internal buffers-one per crosspoint. In this paper, we propose a novel architecture, namely, the Partially Buffered Crossbar (PBC) switching architecture, where a small number of separate internal buffers are maintained per output. Our goal is to design a PBC switch having the performance of buffered crossbars and a cost comparable to that of unbuffered crossbars. We propose a class of round robin scheduling algorithms for the PBC architecture. Simulations results show that using as few as eight buffers per fabric column and irrespective of the number N of input ports of the switch, we can achieve similar performance to buffered crossbars that use N buffers per fabric output.", "paper_title": "PBC: A Partially Buffered Crossbar Packet Switch", "paper_id": "WOS:000270031000011"}