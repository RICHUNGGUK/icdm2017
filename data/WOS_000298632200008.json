{"auto_keywords": [{"score": 0.03719615111360805, "phrase": "sdr"}, {"score": 0.004817826847959435, "phrase": "nucleus"}, {"score": 0.004747714939490445, "phrase": "efficient_and_portable_software"}, {"score": 0.004616034337089482, "phrase": "multi-processor_systems"}, {"score": 0.004394281902031765, "phrase": "modern_wireless_standards"}, {"score": 0.004272361887713488, "phrase": "software_defined_radio"}, {"score": 0.004139223748460922, "phrase": "sdr_approach"}, {"score": 0.00403853528823342, "phrase": "radio_standard"}, {"score": 0.003940286428597882, "phrase": "high_level_language"}, {"score": 0.003885216927966404, "phrase": "faster_waveform_development_cycles"}, {"score": 0.00376409764683147, "phrase": "different_platforms"}, {"score": 0.003608441944628974, "phrase": "cbse"}, {"score": 0.0035579889785989738, "phrase": "attractive_match"}, {"score": 0.003483631502938922, "phrase": "baseband_applications"}, {"score": 0.0033988361874354306, "phrase": "traditional_way"}, {"score": 0.0033868916699805224, "phrase": "algorithm_designers"}, {"score": 0.0033044432971036652, "phrase": "high_degree"}, {"score": 0.003235367401211807, "phrase": "existing_cbse_approaches"}, {"score": 0.0030153435879168634, "phrase": "computational_performance"}, {"score": 0.002983652306921617, "phrase": "energy_efficiency"}, {"score": 0.0029627094945653427, "phrase": "handcrafted_solutions"}, {"score": 0.002931569771634119, "phrase": "main_reason"}, {"score": 0.0028301085867789076, "phrase": "traditional_compilers"}, {"score": 0.002790511479398411, "phrase": "high_level_specification"}, {"score": 0.002609840513713399, "phrase": "ieee_military_communications_conference"}, {"score": 0.0025194861926779223, "phrase": "computationally_intensive_kernels"}, {"score": 0.00247548600804924, "phrase": "target_platform"}, {"score": 0.0023729878025466836, "phrase": "performance_gap"}, {"score": 0.0023315400785212785, "phrase": "efficient_component-based_sdr_development"}, {"score": 0.0021652024032375833, "phrase": "system_level_design"}, {"score": 0.0021049977753042253, "phrase": "mimo_ofdm_transceiver"}], "paper_keywords": ["Software defined radio", " MPSoC programming", " Scheduling", " Mapping", " Real time systems", " Data flow graphs", " MIMO", " OFDM"], "paper_abstract": "With the advent of multi-processor systems on chip (MPSoCs) and due to the complexity and variety of modern wireless standards, academia and industry are moving towards software defined radio (SDR) solutions. It is the goal of the SDR approach to allow designers to describe a radio standard or waveform by means of a high level language. This allows faster waveform development cycles and makes it easier to migrate waveforms across different platforms. Out of many software paradigms, component-based software engineering (CBSE) is an attractive match for SDR, especially for baseband applications. It abstracts waveforms in the traditional way algorithm designers think of their applications and guarantees a high degree of portability. However, existing CBSE approaches for SDR have not been able to close the gap between specification and implementation so as to achieve the computational performance and the energy efficiency of handcrafted solutions. The main reason for this gap is that these flows rely on traditional compilers to lower the high level specification to the platform. The work presented in this paper builds on the Nucleus Concept (Ramakrishnan et al., IEEE Military Communications Conference (MILCOM 2009) [28]) in which computationally intensive kernels and their implementation characteristics on the target platform are known. This information allows a tool to close the performance gap, and thus enables efficient component-based SDR development. In this paper we present such a flow and its supporting environment, which includes state-of-the-art tools for system level design. The flow is demonstrated on a MIMO OFDM transceiver.", "paper_title": "Component-based waveform development: the Nucleus tool flow for efficient and portable software defined radio", "paper_id": "WOS:000298632200008"}