{"auto_keywords": [{"score": 0.034061279141527775, "phrase": "initial_value"}, {"score": 0.031489428772994044, "phrase": "constant_upper_bound"}, {"score": 0.00481495049065317, "phrase": "data_dependence_problems_for_program_schemas"}, {"score": 0.004187718090913465, "phrase": "abstraction_level"}, {"score": 0.004157058883925715, "phrase": "program_schemas"}, {"score": 0.004051501401100304, "phrase": "herbrand_domain"}, {"score": 0.003992385826251404, "phrase": "predicate_symbols"}, {"score": 0.0039341294012600085, "phrase": "arbitrary_predicate_functions"}, {"score": 0.0038342108263454628, "phrase": "vertex_l"}, {"score": 0.0037505809981715024, "phrase": "schema_s"}, {"score": 0.0030415140743429363, "phrase": "pspace"}, {"score": 0.0028360962841331634, "phrase": "'dual'_problem"}, {"score": 0.0026252106881752067, "phrase": "analogous_results"}, {"score": 0.0025678829712650437, "phrase": "former_problem"}, {"score": 0.002530359917257626, "phrase": "nondeterministic_branching"}, {"score": 0.002224510044064184, "phrase": "concurrency_operator"}, {"score": 0.0021049977753042253, "phrase": "relatively_small_number"}], "paper_keywords": ["Algorithms", " Theory", " Verification", " Data dependence", " free schemas", " Herbrand domain", " program analysis", " program schemas"], "paper_abstract": "The problem of deciding whether one point in a program is data dependent upon another is fundamental to program analysis and has been widely studied. In this article we consider this problem at the abstraction level of program schemas in which computations occur in the Herbrand domain of terms and predicate symbols, which represent arbitrary predicate functions, are allowed. Given a vertex l in the flowchart of a schema S having only equality (variable copying) assignments, and variables v, w, we show that it is PSPACE-hard to decide whether there exists an execution of a program defined by S in which v holds the initial value of w at at least one occurrence of l on the path of execution, with membership in PSPACE holding provided there is a constant upper bound on the arity of any predicate in S. We also consider the 'dual' problem in which v is required to hold the initial value of w at every occurrence of l, for which the analogous results hold. Additionally, the former problem for programs with nondeterministic branching (in effect, free schemas) in which assignments with functions are allowed is proved to be polynomial-time decidable provided a constant upper bound is placed upon the number of occurrences of the concurrency operator in the schemas being considered. This result is promising since many concurrent systems have a relatively small number of threads (concurrent processes), especially when compared with the number of statements they have.", "paper_title": "Complexity of Data Dependence Problems for Program Schemas with Concurrency", "paper_id": "WOS:000303047800006"}