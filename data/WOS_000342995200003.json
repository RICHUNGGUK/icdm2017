{"auto_keywords": [{"score": 0.05007828823667564, "phrase": "high-performance_embedded_systems"}, {"score": 0.04023450011846106, "phrase": "gaspard"}, {"score": 0.004647105813224402, "phrase": "reliable_and_flexible_design"}, {"score": 0.00437281181878921, "phrase": "multimedia_system"}, {"score": 0.004135562737140424, "phrase": "growing_quality"}, {"score": 0.004073113268289532, "phrase": "-service_requirements"}, {"score": 0.00395101799538683, "phrase": "reactive_control_model"}, {"score": 0.003445174898115646, "phrase": "data-intensive_computations"}, {"score": 0.0032251796659158696, "phrase": "different_parts"}, {"score": 0.00317643367669255, "phrase": "embedded_system"}, {"score": 0.00309681702203087, "phrase": "different_data-intensive_algorithms"}, {"score": 0.002988685006809336, "phrase": "computation_modes"}, {"score": 0.002943502888225748, "phrase": "functional_level"}, {"score": 0.0028551716387011637, "phrase": "hardware_components"}, {"score": 0.0027000395818027366, "phrase": "intellectual_properties"}, {"score": 0.0026592094867526803, "phrase": "execution_performances"}, {"score": 0.0025533148412439166, "phrase": "synchronous_languages"}, {"score": 0.002426842369975213, "phrase": "automatic_code_generation"}, {"score": 0.002390133671838151, "phrase": "formal_verification"}, {"score": 0.0023066199295447686, "phrase": "model_checking"}, {"score": 0.002283298119790413, "phrase": "controller_synthesis"}, {"score": 0.0021373366163721518, "phrase": "model-driven_engineering"}, {"score": 0.0021049977753042253, "phrase": "standard_uml_marte_profile"}], "paper_keywords": [""], "paper_abstract": "System adaptivity is increasingly demanded in high-performance embedded systems, particularly in multimedia system-on-chip (SoC), owing to growing quality-of-service requirements. This paper presents a reactive control model that has been introduced in Gaspard, our framework dedicated to SoC hardware/software co-design. This model aims at expressing adaptivity as well as reconfigurability in systems performing data-intensive computations. It is generic enough to be used for description in the different parts of an embedded system, for example, specification of how different data-intensive algorithms can be chosen according to some computation modes at the functional level; and expression of how hardware components can be selected via the usage of a library of intellectual properties according to execution performances. The transformation of this model toward synchronous languages is also presented, in order to allow an automatic code generation usable for formal verification, based on techniques such as model checking and controller synthesis, as illustrated in the paper. This work, based on Model-Driven Engineering and the standard UML MARTE profile, has been implemented in Gaspard.", "paper_title": "Adaptivity in high-performance embedded systems: a reactive control model for reliable and flexible design", "paper_id": "WOS:000342995200003"}