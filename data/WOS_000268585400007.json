{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computability_theoretic_learning_theory"}, {"score": 0.0041170581247889654, "phrase": "complete_data"}, {"score": 0.0038401488612789963, "phrase": "mind_changes"}, {"score": 0.0037411604449359794, "phrase": "conjectured_programs"}, {"score": 0.0032263862712733934, "phrase": "computational_resources"}, {"score": 0.003062091606343783, "phrase": "example_results"}, {"score": 0.0027822459052173113, "phrase": "computational_feasibility"}, {"score": 0.002594880866651459, "phrase": "memory_limitations"}, {"score": 0.0025279105573394727, "phrase": "learned_programs"}, {"score": 0.0023168823213024856, "phrase": "feasibility_constraints"}, {"score": 0.002237477619351199, "phrase": "output_program"}, {"score": 0.0021049977753042253, "phrase": "postponement_tricks"}], "paper_keywords": ["Computability theoretic learning", " Fair polynomial time", " Memory limitations", " Optimality"], "paper_abstract": "Computability theoretic learning theory (machine inductive inference) typically involves learning programs for languages or functions from a stream of complete data about them and, importantly, allows mind changes as to conjectured programs. This theory takes into account algorithmicity but typically does not take into account feasibility of computational resources. This paper provides some example results and problems for three ways this theory can be constrained by computational feasibility. Considered are: the learner has memory limitations, the learned programs are desired to be optimal, and there are feasibility constraints on learning each output program as well as other constraints to minimize postponement tricks.", "paper_title": "Resource Restricted Computability Theoretic Learning: Illustrative Topics and Problems", "paper_id": "WOS:000268585400007"}