{"auto_keywords": [{"score": 0.03125047352076885, "phrase": "fct_computation"}, {"score": 0.01066023748117494, "phrase": "relational_keyword_search"}, {"score": 0.010450250516448734, "phrase": "database_technology_edbt"}, {"score": 0.010391011090892688, "phrase": "saint-petersburg"}, {"score": 0.010332380169003107, "phrase": "russia"}, {"score": 0.00481495049065317, "phrase": "frequent_co-occurring_term_computation"}, {"score": 0.004787500676821839, "phrase": "relational_data"}, {"score": 0.004706082189342911, "phrase": "keyword_query_q"}, {"score": 0.0045734359584500206, "phrase": "relevant_results"}, {"score": 0.004470003886903606, "phrase": "frustrating_procedure"}, {"score": 0.004149666468555799, "phrase": "frequent_co"}, {"score": 0.004055779248961644, "phrase": "large_relational_data"}, {"score": 0.0038083571280418623, "phrase": "big_picture"}, {"score": 0.003786624022366719, "phrase": "relevant_data_information"}, {"score": 0.00373283028885057, "phrase": "fct_problem"}, {"score": 0.003669281892225594, "phrase": "fundamental_building_blocks"}, {"score": 0.0036483395389139556, "phrase": "data_mining"}, {"score": 0.0036171490978544607, "phrase": "discovered_fcts"}, {"score": 0.003505040278555349, "phrase": "user_interest"}, {"score": 0.003445356410458517, "phrase": "fcts_computation"}, {"score": 0.0030813716462196306, "phrase": "acm"}, {"score": 0.0030637534925896585, "phrase": "new_york"}, {"score": 0.0030463332023830812, "phrase": "usa"}, {"score": 0.002884925971272727, "phrase": "increasing_volume"}, {"score": 0.002843957893814393, "phrase": "tao"}, {"score": 0.0027874519404992673, "phrase": "frequent_co-occurring_terms"}, {"score": 0.0025873791889845167, "phrase": "big_challenge"}, {"score": 0.0024573221741218967, "phrase": "parallel_fct_computation"}, {"score": 0.002443309192067595, "phrase": "mapreduce"}, {"score": 0.0024154356182431113, "phrase": "well-accepted_framework"}, {"score": 0.002401632317461758, "phrase": "data-intensive_applications"}, {"score": 0.0023404848520465543, "phrase": "effective_mapping_mechanism"}, {"score": 0.0023138091498428855, "phrase": "approximately_maximal_workload"}, {"score": 0.0022743632836269307, "phrase": "computational_cost"}, {"score": 0.0022228105525693214, "phrase": "shuffling_cost"}, {"score": 0.0021849126349043654, "phrase": "analytical_and_experimental_evaluations"}, {"score": 0.0021292718815658328, "phrase": "tpc-h"}, {"score": 0.0021049977753042253, "phrase": "different_sizes"}], "paper_keywords": ["data analytics", " term co-occurrence", " structured data", " MapReduce"], "paper_abstract": "Given a keyword query q and a large structured, traditional keyword search may return a large number of relevant results to users, which leads to a frustrating procedure for the users to select their interesting results. To help users understand the data to be searched, in this work we investigate the problem of frequent co-occurring terms (FCTs) in large relational data. By returning a set of most FCTs with the given keywords, we can provide a chance for users to see a big picture of relevant data information. The investigation of FCT problem is also one of the fundamental building blocks of data mining because the discovered FCTs can be employed to analyze the topics or contexts of user interest. Although the problem of FCTs computation was proposed and investigated in Tao and Yu [(2009) Finding Frequent Co-Occurring Terms in Relational Keyword Search. 12th Int. Conf. Extending Database Technology EDBT, Saint-Petersburg, Russia, March 23-26, pp. 839-850. ACM, New York, USA], further investigation is needed to improve the performance because FCT computation is very expensive. Especially for the increasing volume of data, the centralized approach in Tao and Yu [(2009) Finding Frequent Co-Occurring Terms in Relational Keyword Search. 12th Int. Conf. Extending Database Technology EDBT, Saint-Petersburg, Russia, March 23-26, pp. 839-850. ACM, New York, USA] may incur a big challenge on the efficiency of performing an FCT computation. To do this, we investigate how to perform parallel FCT computation using MapReduce which is a well-accepted framework for data-intensive applications over clusters of computers. We design an effective mapping mechanism that exploits the approximately maximal workload of FCT computation for balancing the computational cost of each processor, while reducing the shuffling cost and avoiding the data-skewness. Analytical and experimental evaluations demonstrate the efficiency and scalability of our proposed approach using TPC-H benchmark datasets with different sizes.", "paper_title": "Query-Driven Frequent Co-Occurring Term Computation over Relational Data Using MapReduce", "paper_id": "WOS:000351055300011"}