{"auto_keywords": [{"score": 0.03207133518769957, "phrase": "affine_formulas"}, {"score": 0.00481495049065317, "phrase": "secure_distributed_programming"}, {"score": 0.004759635663291431, "phrase": "recent_research"}, {"score": 0.004518442937844318, "phrase": "general-purpose_theorem-proving_techniques"}, {"score": 0.004240116703465252, "phrase": "wide_range"}, {"score": 0.004191377834552202, "phrase": "security_properties"}, {"score": 0.004143196873246147, "phrase": "application_code"}, {"score": 0.003955926499405168, "phrase": "type_systems"}, {"score": 0.0038431888954930083, "phrase": "resource-conscious_properties"}, {"score": 0.0037336520904376687, "phrase": "large_classes"}, {"score": 0.0036907133026806327, "phrase": "modern_distributed_applications"}, {"score": 0.003503497128638099, "phrase": "first_type_system"}, {"score": 0.0033644530302903513, "phrase": "cryptographic_protocol_implementations"}, {"score": 0.003287482882222731, "phrase": "authorization_policies"}, {"score": 0.0032309093154028663, "phrase": "affine_logic"}, {"score": 0.003120657021758196, "phrase": "novel_notion"}, {"score": 0.0030847461428168614, "phrase": "\"exponential_serialization"}, {"score": 0.00270023138867066, "phrase": "expressive_logical_encoding"}, {"score": 0.00265373679629359, "phrase": "authentication_mechanisms"}, {"score": 0.002623184850933423, "phrase": "distributed_resource-aware_authorization_policies"}, {"score": 0.0023498891333221974, "phrase": "kerberos"}, {"score": 0.0022434880661725493, "phrase": "sound_and_complete_type-checking_algorithm"}, {"score": 0.002129527338875116, "phrase": "efficient_implementation"}], "paper_keywords": ["Security", " Theory", " Verification", " Substructural logics", " type systems", " analysis of security protocols"], "paper_abstract": "Recent research has shown that it is possible to leverage general-purpose theorem-proving techniques to develop powerful type systems for the verification of a wide range of security properties on application code. Although successful in many respects, these type systems fall short of capturing resource-conscious properties that are crucial in large classes of modern distributed applications. In this article, we propose the first type system that statically enforces the safety of cryptographic protocol implementations with respect to authorization policies expressed in affine logic. Our type system draws on a novel notion of \"exponential serialization\" of affine formulas, a general technique to protect affine formulas from the effect of duplication. This technique allows formulate of an expressive logical encoding of the authentication mechanisms underpinning distributed resource-aware authorization policies. We discuss the effectiveness of our approach on two case studies: the EPMO e-commerce protocol and the Kerberos authentication protocol. We finally devise a sound and complete type-checking algorithm, which is the key to achieving an efficient implementation of our analysis technique.", "paper_title": "Affine Refinement Types for Secure Distributed Programming", "paper_id": "WOS:000360005000001"}