{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "simple_tabular_reduction"}, {"score": 0.004503959683578956, "phrase": "state-of-the-art_filtering_technique"}, {"score": 0.004392565073466714, "phrase": "generalized_arc_consistency"}, {"score": 0.004319846227776948, "phrase": "gac"}, {"score": 0.00421297029755273, "phrase": "positive_table_constraints"}, {"score": 0.0035648266669315943, "phrase": "domain_values"}, {"score": 0.00347657813672945, "phrase": "current_state"}, {"score": 0.0028685304140180137, "phrase": "fixed_cost"}, {"score": 0.002728166176898539, "phrase": "watched_tuples"}, {"score": 0.002594652434287807, "phrase": "revised_algorithm"}, {"score": 0.0023864566654035924, "phrase": "large_number"}, {"score": 0.002346861891137455, "phrase": "small_changes"}], "paper_keywords": [""], "paper_abstract": "Simple Tabular Reduction (STR) is a state-of-the-art filtering technique for enforcing Generalized Arc Consistency (GAC) on positive table constraints. Despite its good performance in practice, the STR2 algorithm suffers from a mandatory lower bound equal to the number of domain values in the current state of the problem, because the presence of each value must be justified every time STR2 is called. We overcome this fixed cost by redesigning STR2 and incorporating watched tuples. Experiments show that the revised algorithm is better at coping with problems that involve a large number of small changes during search and it can be more than twice as fast on certain structured problems.", "paper_title": "Improving the lower bound of simple tabular reduction", "paper_id": "WOS:000347690400005"}