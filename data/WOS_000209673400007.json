{"auto_keywords": [{"score": 0.02683899032632185, "phrase": "plane"}, {"score": 0.00481495049065317, "phrase": "airplane_landing_trajectories"}, {"score": 0.004782718554230406, "phrase": "computing_trajectories"}, {"score": 0.004624751696958501, "phrase": "important_problem"}, {"score": 0.004593787100061613, "phrase": "air_traffic_control"}, {"score": 0.004382737590042589, "phrase": "landing_time"}, {"score": 0.004125513927068713, "phrase": "waiting_times"}, {"score": 0.0039624406239057944, "phrase": "discrete_game"}, {"score": 0.0036923623384423785, "phrase": "king_chess-piece"}, {"score": 0.003417565253539315, "phrase": "different_aspects"}, {"score": 0.0033832583769880576, "phrase": "real_problem"}, {"score": 0.00333804919565419, "phrase": "constrained_airspaces"}, {"score": 0.0033156708990372047, "phrase": "distinct_airplane_speeds"}, {"score": 0.003238517900104576, "phrase": "specific_restrictions"}, {"score": 0.003206002589892253, "phrase": "landing_trajectories"}, {"score": 0.003131393466870228, "phrase": "static_and_dynamic_cases"}, {"score": 0.0029973957125353306, "phrase": "exact_resolutionmethod"}, {"score": 0.002907992115184249, "phrase": "formal_verification"}, {"score": 0.002869115451202179, "phrase": "hardware_devices"}, {"score": 0.0028498718992429825, "phrase": "software_tools"}, {"score": 0.002628747284714371, "phrase": "decomposition_technique"}, {"score": 0.0025935941070969575, "phrase": "divide-and-conquer_paradigm"}, {"score": 0.002507748938616919, "phrase": "plane_decomposition"}, {"score": 0.002400373755068185, "phrase": "non-optimal_ones"}], "paper_keywords": ["Model checking", " Aircraft landing trajectories", " k-king problem", " Divide-and-conquer", " IC3 or property directed reachability", " Multi-threaded verification"], "paper_abstract": "Computing trajectories of a set of airplanes in their final descent is an important problem in air traffic control. It consists of deciding a trajectory, the runway, and the landing time for each airplane, such that several constraints are satisfied, while optimizing flying (fuel) costs, and minimizing waiting times. To solve this problem, we model it as a discrete game, the k-king puzzle, in which each airplane is represented (and it moves) as a king chess-piece on a chessboard. Although the model has already been introduced in the past, we propose several extensions, taking into account different aspects of the real problem, such as constrained airspaces, distinct airplane speeds, various separation distance among airplanes, and specific restrictions in the landing trajectories. Moreover, we model both static and dynamic cases for 2D and 3D airspaces. On these extensions, we describe an exact resolutionmethod based on ideas and algorithms coming from the formal verification of correctness of hardware devices and software tools area. Furthermore, to improve the size and complexity of the models we are able to deal with, we propose a decomposition technique based on the divide-and-conquer paradigm. This solution, which we call Plane by Plane decomposition, trades-off between accuracy and efficiency, i.e., exact solutions degrade to non-optimal ones to maintain scalability. We finally propose an implementation of this algorithm based on (and taking advantages of) modern multi-core, multi-threaded, systems. We present a detailed description of the model and the algorithms, as well as our computational results for quite large static and dynamic 2D and 3D problems.", "paper_title": "Model checking evaluation of airplane landing trajectories", "paper_id": "WOS:000209673400007"}