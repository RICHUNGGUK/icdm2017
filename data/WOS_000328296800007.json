{"auto_keywords": [{"score": 0.03767880802723059, "phrase": "decomposition_approach"}, {"score": 0.03125119819092014, "phrase": "pure_horn_minimization"}, {"score": 0.00481495049065317, "phrase": "cnf_minimality_proofs"}, {"score": 0.004716560671046586, "phrase": "cnf"}, {"score": 0.004556901872357751, "phrase": "shorter_cnf"}, {"score": 0.004312622975366676, "phrase": "cnf_length"}, {"score": 0.0033651019362620866, "phrase": "cnf_formula"}, {"score": 0.002755104031926742, "phrase": "pure_horn_cnf"}, {"score": 0.002680114113899346, "phrase": "logically_equivalent_pure_horn_cnf"}, {"score": 0.0023999697562763433, "phrase": "total_number"}, {"score": 0.002255431275670053, "phrase": "alternative_proofs"}, {"score": 0.002224510044064184, "phrase": "known_complexity_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Boolean functions", " CNF", " Boolean minimization", " Horn minimization", " Decomposition method"], "paper_abstract": "A CNF is minimal if no shorter CNF representing the same function exists, where by CNF length we mean either the number of clauses or the total number of literals (sum of clause lengths). In this paper we develop a decomposition approach that can be in certain situations applied to a CNF formula when proving its minimality. We give two examples in which this decomposition approach is used. Both examples deal with pure Horn minimization, a problem defined as follows: given a pure Horn CNF, construct a logically equivalent pure Horn CNF which is the shortest possible (either w.r.t the number of clauses or w.r.t the total number of literals). Both presented examples give alternative proofs of known complexity results for pure Horn minimization. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A decomposition method for CNF minimality proofs", "paper_id": "WOS:000328296800007"}