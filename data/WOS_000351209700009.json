{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_dataflow_programs"}, {"score": 0.004753194996637899, "phrase": "multimedia_applications"}, {"score": 0.004692227830462433, "phrase": "embedded_platforms"}, {"score": 0.004398872331144531, "phrase": "user_experience"}, {"score": 0.004286708921931472, "phrase": "multimedia_developers"}, {"score": 0.004231699728933577, "phrase": "high-level_methods"}, {"score": 0.00415050117148714, "phrase": "time-consuming_and_error-prone_tasks"}, {"score": 0.003916098498242888, "phrase": "complex_applications"}, {"score": 0.003816197777388722, "phrase": "video_codecs"}, {"score": 0.0037188360359702182, "phrase": "high_level"}, {"score": 0.003531474887552889, "phrase": "dataflow-based_design_approach"}, {"score": 0.0033971539563683174, "phrase": "embedded_multi-core_platforms"}, {"score": 0.0032468685934998335, "phrase": "custom_architecture_model"}, {"score": 0.0031845067058084583, "phrase": "low-power_multi-core_chips"}, {"score": 0.00306334226516593, "phrase": "transport-triggered_architecture_processor_cores"}, {"score": 0.0029467742734417255, "phrase": "software_synthesis_techniques"}, {"score": 0.0028901595183546576, "phrase": "dynamic_dataflow_implementations"}, {"score": 0.0027444334639134217, "phrase": "open-source_tools"}, {"score": 0.0026743419827100225, "phrase": "video_decoders"}, {"score": 0.002555950807368337, "phrase": "new_high_efficiency_video_coding_standard"}, {"score": 0.00247460024299964, "phrase": "real-time_decoding"}, {"score": 0.0023958326775913165, "phrase": "high_definition"}, {"score": 0.002319566486828135, "phrase": "visual_video_sequences"}, {"score": 0.0022749744354271816, "phrase": "custom_multi-core_platform"}, {"score": 0.0021049977753042253, "phrase": "previously_proposed_implementations"}], "paper_keywords": ["Dataflow programming", " Video coding", " HEVC", " Embedded system"], "paper_abstract": "Multimedia applications and embedded platforms are both becoming very complex in order to improve user experience. Thus, multimedia developers need high-level methods to automate time-consuming and error-prone tasks. Dynamic dataflow modeling is attractive to describe complex applications, such as video codecs, at a high level of abstraction. This paper presents a dataflow-based design approach to implement video codecs on embedded multi-core platforms. First, we introduce a custom architecture model to design low-power multi-core chips based on distributed memory and Transport-Triggered Architecture processor cores. Then, we describe software synthesis techniques to improve dynamic dataflow implementations. This methodology has been implemented into open-source tools and demonstrated on video decoders based on the MPEG-4 Visual standard and the new High Efficiency Video Coding standard. The simulations achieve real-time decoding (40FPS) of high definition (720P) MPEG-4 Visual video sequences on a custom multi-core platform clocked at 1Ghz, which is an improvement of more than 100 % over previously proposed implementations.", "paper_title": "Embedded Multi-Core Systems Dedicated to Dynamic Dataflow Programs", "paper_id": "WOS:000351209700009"}