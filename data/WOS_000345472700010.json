{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "runtime_verification"}, {"score": 0.0494698167146389, "phrase": "alc-ltl"}, {"score": 0.04526211521024841, "phrase": "transition_system"}, {"score": 0.04088899068598468, "phrase": "finite_prefix"}, {"score": 0.0047689174754929195, "phrase": "temporal_description_logic"}, {"score": 0.0046781613377273774, "phrase": "linear_temporal_logic"}, {"score": 0.004444462552988661, "phrase": "model_checking"}, {"score": 0.004401955895933783, "phrase": "system's_behaviour"}, {"score": 0.004208881856146758, "phrase": "possible_traces"}, {"score": 0.004024242000713225, "phrase": "actual_system_behaviour"}, {"score": 0.0036906305674695985, "phrase": "trace_satisfy"}, {"score": 0.0033737457695128233, "phrase": "right_answer"}, {"score": 0.003215295260684715, "phrase": "known_approaches"}, {"score": 0.003194736764837261, "phrase": "ltl_runtime_verification"}, {"score": 0.003113804826864362, "phrase": "propositional_ltl"}, {"score": 0.0029866270401697906, "phrase": "description_logic"}, {"score": 0.0029203055813347874, "phrase": "propositional_variables"}, {"score": 0.0028738341066290815, "phrase": "single_states"}, {"score": 0.00276528909544761, "phrase": "observed_system"}, {"score": 0.0027212777001495176, "phrase": "complete_information"}, {"score": 0.002585081657512565, "phrase": "incomplete_way"}, {"score": 0.002568542343945288, "phrase": "alc-knowledge_bases"}, {"score": 0.0025034338848015166, "phrase": "setting_monitors"}, {"score": 0.0023252743521788876, "phrase": "propositional_case"}, {"score": 0.0022956075241520064, "phrase": "auxiliary_result"}, {"score": 0.002244596395352896, "phrase": "bilchi_automata"}, {"score": 0.0022230821865616254, "phrase": "alc-ltl-formulae"}, {"score": 0.0021947163009946075, "phrase": "alternative_proofs"}, {"score": 0.002173679145840769, "phrase": "known_upper_bounds"}, {"score": 0.0021390634151482566, "phrase": "alc-ltl."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Temporal description logics", " Runtime verification", " Monitoring"], "paper_abstract": "Formulae of linear temporal logic (LTL) can be used to specify (wanted or unwanted) properties of a dynamical system. In model checking, the system's behaviour is described by a transition system, and one needs to check whether all possible traces of this transition system satisfy the formula. In runtime verification, one observes the actual system behaviour, which at any point in time yields a finite prefix of a trace. The task is then to check whether all continuations of this prefix to a trace satisfy (violate) the formula. More precisely, one wants to construct a monitor, i.e., a finite automaton that receives the finite prefix as input and then gives the right answer based on the state currently reached. In this paper, we extend the known approaches to LTL runtime verification in two directions. First, instead of propositional LTL we use the more expressive temporal logic ALC-LTL, which can use axioms of the Description Logic (DL) ALC instead of propositional variables to describe properties of single states of the system. Second, instead of assuming that the observed system behaviour provides us with complete information about the states of the system, we assume that states are described in an incomplete way by ALC-knowledge bases. We show that also in this setting monitors can effectively be constructed. The (double-exponential) size of the constructed monitors is in fact optimal, and not higher than in the propositional case. As an auxiliary result, we show how to construct Bilchi automata for,ALC-LTL-formulae, which yields alternative proofs for the known upper bounds of deciding satisfiability in ALC-LTL. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Runtime verification using the temporal description logic ALC-LTL revisited", "paper_id": "WOS:000345472700010"}