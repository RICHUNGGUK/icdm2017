{"auto_keywords": [{"score": 0.05006146524239516, "phrase": "process_algebra"}, {"score": 0.046530101197985334, "phrase": "paradigm"}, {"score": 0.004501774379030109, "phrase": "coordination_modelling_language"}, {"score": 0.0041287394089001405, "phrase": "dynamic_constraints"}, {"score": 0.0039729853486821995, "phrase": "paradigm_model"}, {"score": 0.0038973170902076707, "phrase": "component_dynamics"}, {"score": 0.0035399770257915466, "phrase": "operational_semantics"}, {"score": 0.002730023736069673, "phrase": "correctness_result"}, {"score": 0.002677964894127131, "phrase": "paradigm_models"}, {"score": 0.0025521085778978042, "phrase": "algebraic_reasoning"}, {"score": 0.0022956075241520064, "phrase": "scheduling_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Branching bisimulation", " Collaboration", " Dynamic consistency", " Dynamic constraint", " Paradigm", " Process algebra", " Verification"], "paper_abstract": "The coordination modelling language Paradigm addresses collaboration between components in terms of dynamic constraints. Within a Paradigm model, component dynamics are consistently specified at various levels of abstraction. The operational semantics of Paradigm is given. For a large, general subclass of Paradigm models a translation into process algebra is provided. Once expressed in process algebra, relying on a correctness result, Paradigm models are amenable to process algebraic reasoning and to verification via the mCRL2 toolset. Examples of a scheduling problem illustrate the approach. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic consistency in process algebra: From Paradigm to ACP", "paper_id": "WOS:000290778300006"}