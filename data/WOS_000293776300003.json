{"auto_keywords": [{"score": 0.04942444706912143, "phrase": "mesh_technique"}, {"score": 0.00481495049065317, "phrase": "parallel_implementation_of"}, {"score": 0.0047057084749407485, "phrase": "fsi_problems"}, {"score": 0.004556901872357751, "phrase": "high_performance_implementation"}, {"score": 0.004494570360108983, "phrase": "arbitrary_lagrangian_eulerian"}, {"score": 0.004412780054037622, "phrase": "shared_memory_systems"}, {"score": 0.004372442291178139, "phrase": "openmp_environment"}, {"score": 0.004332471656145115, "phrase": "moving_mesh_techniques"}, {"score": 0.004176194589991187, "phrase": "wider_class"}, {"score": 0.004138010495069077, "phrase": "fluid_mechanics"}, {"score": 0.004007083686875716, "phrase": "spatial_domains"}, {"score": 0.0038447943243941685, "phrase": "fluid_structure_interaction"}, {"score": 0.0037402558657576124, "phrase": "moving_mesh_technique"}, {"score": 0.003555902292752528, "phrase": "nodes_relocation"}, {"score": 0.0034118234596993836, "phrase": "constraint_conditions"}, {"score": 0.0033651019362620866, "phrase": "conjugate_gradient_method"}, {"score": 0.003213920601037463, "phrase": "resulting_system"}, {"score": 0.003140888248194296, "phrase": "proposed_algorithm"}, {"score": 0.0030135741897058844, "phrase": "efficient_divide"}, {"score": 0.002878140062594849, "phrase": "mesh_scheme"}, {"score": 0.002851790448644913, "phrase": "numerical_simulations"}, {"score": 0.002786964045867666, "phrase": "multicore_amd_opteron"}, {"score": 0.0027614468443073028, "phrase": "intel_xeon_processors"}, {"score": 0.002723607240517261, "phrase": "unstructured_triangular_and_tetrahedral_meshes"}, {"score": 0.00257735013358606, "phrase": "generated_meshes"}, {"score": 0.0024958018938827774, "phrase": "jacobians"}, {"score": 0.0024389277933858054, "phrase": "current_meshes"}, {"score": 0.002318566141177149, "phrase": "interior_angles"}, {"score": 0.0021049977753042253, "phrase": "mesh_algorithms"}], "paper_keywords": ["ALE method", " Matrix bandwidth", " Mesh reordering", " Moving mesh", " OpenMP", " Parallel"], "paper_abstract": "This paper investigates a high performance implementation of an Arbitrary Lagrangian Eulerian moving mesh technique on shared memory systems using OpenMP environment. Moving mesh techniques are considered an integral part of a wider class of fluid mechanics problems that involve moving and deforming spatial domains, namely, free-surface flows and Fluid Structure Interaction (FSI). The moving mesh technique adopted in this work is based on the notion of nodes relocation, subjected to a certain evolution as well as constraint conditions. A conjugate gradient method augmented with preconditioning is employed for solution of the resulting system of equations. The proposed algorithm, initially, reorders the mesh using an efficient divide and conquer approach and then parallelizes the ALE moving mesh scheme. Numerical simulations are conducted on the multicore AMD Opteron and Intel Xeon processors, and unstructured triangular and tetrahedral meshes are used for the 2D and 3D problems. The quality of generated meshes is checked by comparing the element Jacobians in the reference and current meshes, and by keeping track of the change in the interior angles in triangles and tetrahedrons. Overall, 51 and 72% efficiencies in terms of speedup are achieved for both the parallel mesh reordering and ALE moving mesh algorithms, respectively.", "paper_title": "A Parallel Implementation of ALE Moving Mesh Technique for FSI Problems using OpenMP", "paper_id": "WOS:000293776300003"}