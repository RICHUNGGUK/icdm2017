{"auto_keywords": [{"score": 0.03974909105524672, "phrase": "service_demands"}, {"score": 0.004815315858763141, "phrase": "distributed"}, {"score": 0.00476334344613564, "phrase": "qos_load_balancing"}, {"score": 0.00467855218490191, "phrase": "dynamic_load"}, {"score": 0.004513450434595191, "phrase": "non-cooperative_and_selfish_fashion"}, {"score": 0.004037608759610068, "phrase": "round-based_fashion"}, {"score": 0.0037171648669537287, "phrase": "zero_utility"}, {"score": 0.003598786417573615, "phrase": "positive_utility"}, {"score": 0.0034220655476652683, "phrase": "service_requirements"}, {"score": 0.0033249931673591457, "phrase": "additional_locality_constraint"}, {"score": 0.0028279422436488116, "phrase": "mobile_network"}, {"score": 0.00278752137116301, "phrase": "channel_information"}, {"score": 0.0027575842698911173, "phrase": "time-intensive_measurements"}, {"score": 0.0021049977753042253, "phrase": "large-scale_systems"}], "paper_keywords": [""], "paper_abstract": "We consider a dynamic load balancing scenario in which users allocate resources in a non-cooperative and selfish fashion. The perceived performance of a resource for a user decreases with the number of users that allocate the resource. In our dynamic, concurrent model, users may reallocate resources in a round-based fashion. As opposed to various settings analyzed in the literature, we assume that users have quality of service demands. A user has zero utility when falling short of a certain minimum performance threshold and having positive utility otherwise. Whereas various load-balancing protocols have been proposed for the setting without quality of service requirements, we consider protocols that satisfy an additional locality constraint: The behavior of a user depends merely on the state of the resource it currently allocates. This property is particularly useful in scenarios where the state of other resources is not readily accessible. For instance, if resources represent channels in a mobile network, then accessing channel information may require time-intensive measurements. We consider several variants of the model, where the quality of service demands may depend on the user, the resource, or both. For all cases we present protocols for which the dynamics converge to a state in which all users are satisfied. More importantly, the time to reach such a state scales nicely. It is only logarithmic in the number of users, which makes our protocols applicable in large-scale systems.", "paper_title": "Distributed algorithms for QoS load balancing", "paper_id": "WOS:000288716600002"}