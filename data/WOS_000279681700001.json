{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "rooted_tree_t"}, {"score": 0.004778594263962987, "phrase": "arbitrary_maximum_degree_d"}, {"score": 0.004688894532233354, "phrase": "n_web_pages"}, {"score": 0.004480394224548146, "phrase": "source_home_page"}, {"score": 0.004264923517966271, "phrase": "probability_p"}, {"score": 0.0037918465913284478, "phrase": "expected_number"}, {"score": 0.003650687199498576, "phrase": "home_page"}, {"score": 0.0034881908940439213, "phrase": "access_probabilities_p."}, {"score": 0.0032951702142329357, "phrase": "exactly_one_hotlink"}, {"score": 0.0029182434479165884, "phrase": "first_efficient_general_methods"}, {"score": 0.002820202660128789, "phrase": "arbitrary_maximum_degree"}, {"score": 0.0021291312714904957, "phrase": "running_time"}, {"score": 0.0021049977753042253, "phrase": "strong_method"}], "paper_keywords": ["Web algorithms", " Hotlink assignment", " Entropy lower bound"], "paper_abstract": "Consider a rooted tree T of arbitrary maximum degree d representing a collection of n web pages connected via a set of links, all reachable from a source home page represented by the root of T. Each web page i carries a probability p (i) representative of the frequency with which it is visited. By adding hotlinks-shortcuts from a node to one of its descendents-we wish to minimize the expected number of steps l needed to visit pages from the home page, expressed as a function of the entropy H(p) of the access probabilities p. This paper introduces several new strategies for effectively assigning hotlinks in a tree. For assigning exactly one hotlink per node, our method guarantees an upper bound on l of 1.141H(p) + 1 if d > 2 and 1.08H(p) + 2/3 if d=2. We also present the first efficient general methods for assigning at most k hotlinks per node in trees of arbitrary maximum degree, achieving bounds on l of at most log(k+1)/2H(p) + 1 and log(k+d)-logd/H(p) + 1, respectively. All our methods are strong, i.e., they provide the same guarantees on all subtrees after the assignment. We also present an algorithm implementing these methods in O(n log n) time, an improvement over the previous O(n(2)) time algorithms. Finally we prove a Omega(n log n) lower bound on the running time of any strong method that guarantee an average access time strictly better than 2H(p).", "paper_title": "Near-Entropy Hotlink Assignments", "paper_id": "WOS:000279681700001"}