{"auto_keywords": [{"score": 0.03893725008577072, "phrase": "jumpflow"}, {"score": 0.011822065181602, "phrase": "low_and_balanced_flow_table_usage"}, {"score": 0.00481495049065317, "phrase": "flow_table_usage"}, {"score": 0.004780030485538593, "phrase": "software-defined_networks"}, {"score": 0.004728122501822142, "phrase": "forwarding_scheme"}, {"score": 0.0046938292389998824, "phrase": "software-defined_networking"}, {"score": 0.0045591142048535165, "phrase": "flow_table_management"}, {"score": 0.004428248351415723, "phrase": "flow_tables"}, {"score": 0.004396120480895021, "phrase": "openflow_switches"}, {"score": 0.004348363291608004, "phrase": "recent_studies"}, {"score": 0.004316812490871324, "phrase": "forwarding_flows"}, {"score": 0.004285489630701221, "phrase": "stacked_mpls_labels"}, {"score": 0.004117215958803593, "phrase": "forwarding_decision"}, {"score": 0.004042919099733537, "phrase": "forwarding_route"}, {"score": 0.003969957613513855, "phrase": "multiple_mpls_labels"}, {"score": 0.003898307690037192, "phrase": "significant_transmission_overhead"}, {"score": 0.0038140261371648744, "phrase": "large_diameters"}, {"score": 0.0034946693480479712, "phrase": "flow_entries"}, {"score": 0.0034066464009965425, "phrase": "transmission_overhead"}, {"score": 0.0033451289921748407, "phrase": "available_vlan_identifier"}, {"score": 0.003272767888056937, "phrase": "packet_header"}, {"score": 0.0032371745435372168, "phrase": "routing_information"}, {"score": 0.0031787077057214086, "phrase": "limited_space"}, {"score": 0.0031441350316239467, "phrase": "vid"}, {"score": 0.0031099353574309606, "phrase": "flow's_complete_routing_information"}, {"score": 0.0029985954225814895, "phrase": "different_switches"}, {"score": 0.00296597499768551, "phrase": "flow's_forwarding_route"}, {"score": 0.0028493650087584774, "phrase": "reactive_flow_entry_placement_problem"}, {"score": 0.0027775505385261553, "phrase": "per-hop_configuration-based_forwarding"}, {"score": 0.002727362288104989, "phrase": "unicast_and_multicast_scenarios"}, {"score": 0.0026976845075643314, "phrase": "real_network_topology"}, {"score": 0.002678078466226442, "phrase": "different_traffic_patterns"}, {"score": 0.0026392916936302355, "phrase": "unicast_scenario"}, {"score": 0.0026201089205321704, "phrase": "different_new_flow_arrival_rates"}, {"score": 0.0025447584328314754, "phrase": "first_flow_rejection"}, {"score": 0.0024987660207458555, "phrase": "flow_rejection_percentage"}, {"score": 0.002435766348668389, "phrase": "control_messages"}, {"score": 0.00241805924231814, "phrase": "route_configuration"}, {"score": 0.0023485057246680854, "phrase": "multicast_scenario"}, {"score": 0.0023229408675543147, "phrase": "high_new_multicast_group_arrival_rate"}, {"score": 0.002264364091368269, "phrase": "accepted_multicast_groups"}, {"score": 0.0021912115487610286, "phrase": "average_control_messages"}, {"score": 0.002167355210897559, "phrase": "multicast_group_configuration"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software-defined networking", " Forwarding", " Flow table management"], "paper_abstract": "The forwarding scheme in Software-Defined Networking (SDN) is usually coupled with flow table management. To reduce the redundancy in the flow tables of OpenFlow switches, some recent studies propose forwarding flows using stacked MPLS labels, in which each label in the stack indicates the forwarding decision at one hop of the forwarding route. However, using multiple MPLS labels in each packet introduces significant transmission overhead, especially in networks with large diameters. In this paper, we propose JumpFlow, a forwarding scheme that achieves low and balanced flow table usage in an SDN by properly and reactively placing flow entries on switches. To reduce the transmission overhead, JumpFlow uses the available VLAN identifier (VID) in the packet header to carry routing information. Constrained by the limited space of the VID, a flow's complete routing information must be divided into several sections and loaded separately at different switches on the flow's forwarding route. To achieve low and balanced flow table usage, we formulate and solve the reactive flow entry placement problem. We evaluate JumpFlow against the per-hop configuration-based forwarding of OpenFlow for both unicast and multicast scenarios in a real network topology with different traffic patterns. For the unicast scenario with different new flow arrival rates, JumpFlow postpones the time when the first flow rejection occurs, reduces the flow rejection percentage by 37.06%, and reduces the control messages for route configuration by 53.52% on average. For the multicast scenario with a high new multicast group arrival rate, JumpFlow increases the ratio of accepted multicast groups by 83.90%, and reduces the ratio of average control messages for a multicast group configuration by 32.68%. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "JumpFlow: Reducing flow table usage in software-defined networks", "paper_id": "WOS:000366785500009"}