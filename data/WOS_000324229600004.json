{"auto_keywords": [{"score": 0.047501087147140714, "phrase": "software_artifacts"}, {"score": 0.041727629088517196, "phrase": "lda"}, {"score": 0.02577457022016123, "phrase": "case_studies"}, {"score": 0.00481495049065317, "phrase": "supporting_cross-project_analysis"}, {"score": 0.004672444473700524, "phrase": "software_repositories"}, {"score": 0.004164007198843467, "phrase": "semi-unsupervised_machine-learning_algorithms"}, {"score": 0.004081385289516914, "phrase": "latent_dirichlet_allocation"}, {"score": 0.0038624981944755813, "phrase": "topic_analysis"}, {"score": 0.0038048583022763796, "phrase": "candidate_word-lists"}, {"score": 0.0033905067962602515, "phrase": "meaningful_summary_labels"}, {"score": 0.0032571885279065126, "phrase": "manual_labelling"}, {"score": 0.0031765314093444956, "phrase": "domain-specific_knowledge"}, {"score": 0.0027464781499539296, "phrase": "commit-log_comments"}, {"score": 0.0027054473441439422, "phrase": "source_control_systems"}, {"score": 0.0025859868507329634, "phrase": "generalizable_cross-project_taxonomy"}, {"score": 0.002534596206835737, "phrase": "non-functional_requirements"}, {"score": 0.0022696277881969896, "phrase": "labelled_topic_extraction"}, {"score": 0.0021262403223013242, "phrase": "fresh_insight"}], "paper_keywords": ["Software maintenance", " Repository mining", " Latent Dirichlet allocation", " Topic models"], "paper_abstract": "Software repositories provide a deluge of software artifacts to analyze. Researchers have attempted to summarize, categorize, and relate these artifacts by using semi-unsupervised machine-learning algorithms, such as Latent Dirichlet Allocation (LDA). LDA is used for concept and topic analysis to suggest candidate word-lists or topics that describe and relate software artifacts. However, these word-lists and topics are difficult to interpret in the absence of meaningful summary labels. Current attempts to interpret topics assume manual labelling and do not use domain-specific knowledge to improve, contextualize, or describe results for the developers. We propose a solution: automated labelled topic extraction. Topics are extracted using LDA from commit-log comments recovered from source control systems. These topics are given labels from a generalizable cross-project taxonomy, consisting of non-functional requirements. Our approach was evaluated with experiments and case studies on three large-scale Relational Database Management System (RDBMS) projects: MySQL, PostgreSQL and MaxDB. The case studies show that labelled topic extraction can produce appropriate, context-sensitive labels that are relevant to these projects, and provide fresh insight into their evolving software development activities.", "paper_title": "Automated topic naming Supporting cross-project analysis of software maintenance activities", "paper_id": "WOS:000324229600004"}