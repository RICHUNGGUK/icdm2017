{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "api"}, {"score": 0.004757227624616643, "phrase": "application_control"}, {"score": 0.004191200981137508, "phrase": "software-defined_network"}, {"score": 0.003945754887845885, "phrase": "open_flow_controller"}, {"score": 0.0037371212381934853, "phrase": "network's_administrators"}, {"score": 0.003155784719225786, "phrase": "better_performance"}, {"score": 0.00306189690236109, "phrase": "predictable_behavior"}, {"score": 0.0029351141718104725, "phrase": "next_layer"}, {"score": 0.002899861600151726, "phrase": "current_sdn_stacks"}, {"score": 0.002508365161206412, "phrase": "untrusted_users"}, {"score": 0.002404447017429959, "phrase": "baseline_levels"}, {"score": 0.0022909325048608054, "phrase": "real_open_flow_testbed"}], "paper_keywords": ["Software-Defined Networks", " OpenFlow", " Participatory Networking"], "paper_abstract": "We present the design, implementation, and evaluation of an API for applications to control a software-defined network (SDN). Our API is implemented by an Open Flow controller that delegates read and write authority from the network's administrators to end users, or applications and devices acting on their behalf. Users can then work with the network, rather than around it, to achieve better performance, security, or predictable behavior. Our API serves well as the next layer atop current SDN stacks. Our design addresses the two key challenges: how to safely decompose control and visibility of the network, and how to resolve conflicts between untrusted users and across requests, while maintaining baseline levels of fairness and security. Using a real Open Flow testbed, we demonstrate our API's feasibility through microbenchmarks, and its usefulness by experiments with four real applications modified to take advantage of it.", "paper_title": "Participatory Networking: An API for Application Control of SDNs", "paper_id": "WOS:000327465900035"}