{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "pebble_automata"}, {"score": 0.049424447069121406, "phrase": "data_languages"}, {"score": 0.04302914169551048, "phrase": "emptiness_problem"}, {"score": 0.004684157900507474, "phrase": "decidable_emptiness_problem"}, {"score": 0.0032510937355304677, "phrase": "pa."}, {"score": 0.0030554300179552415, "phrase": "equality_test"}, {"score": 0.002931569771634119, "phrase": "data_values"}, {"score": 0.0025014259919355453, "phrase": "non-deterministic_and_deterministic_top_view"}, {"score": 0.0022092084106039834, "phrase": "linear_temporal_logic"}, {"score": 0.002163930783583212, "phrase": "future-time_operators"}], "paper_keywords": ["Finite state automata", " Infinite alphabet", " Decidability"], "paper_abstract": "In this paper we study a subclass of pebble automata (PA) for data languages for which the emptiness problem is decidable. Namely, we show that the emptiness problem for weak 2-pebble automata is decidable, while the same problem for weak 3-pebble automata is undecidable. We also introduce the so-called top view weak PA. Roughly speaking, top view weak PA are weak PA where the equality test is performed only between the data values seen by the two most recently placed pebbles. The emptiness problem for this model is still decidable. It is also robust: alternating, non-deterministic and deterministic top view weak PA have the same recognition power; and are strong enough to accept all data languages expressible in Linear Temporal Logic with the future-time operators, augmented with one register freeze quantifier. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "On pebble automata for data languages with decidable emptiness problem", "paper_id": "WOS:000281501900007"}