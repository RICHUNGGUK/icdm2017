{"auto_keywords": [{"score": 0.02357146966212189, "phrase": "mhz"}, {"score": 0.013086473851018895, "phrase": "digital"}, {"score": 0.00479690335683215, "phrase": "signal_processing_algorithms"}, {"score": 0.004690025569165577, "phrase": "large_number"}, {"score": 0.004318027255281003, "phrase": "truncated_and_logarithmic_multipliers"}, {"score": 0.003975416846030462, "phrase": "shorter_time_delay"}, {"score": 0.0038576618286586387, "phrase": "digital_signal_processing"}, {"score": 0.0037153426267756452, "phrase": "video_compression"}, {"score": 0.0036461569988218267, "phrase": "integer_arithmetic"}, {"score": 0.0036188435232325337, "phrase": "satisfactory_results"}, {"score": 0.0035381202759091784, "phrase": "simple_and_efficient_multiplier"}, {"score": 0.003446208270665051, "phrase": "arbitrary_accuracy"}, {"score": 0.003407549468745519, "phrase": "iterative_procedure"}, {"score": 0.0033315236647127734, "phrase": "exact_result"}, {"score": 0.0033216332879335508, "phrase": "mitchell"}, {"score": 0.0032085525502105836, "phrase": "number_representation"}, {"score": 0.0031845067058084583, "phrase": "mitchell's_algorithm"}, {"score": 0.003125175084962886, "phrase": "different_error_correction_circuits"}, {"score": 0.0029984960344766705, "phrase": "error_correction"}, {"score": 0.0028127163745564777, "phrase": "basic_multiplication"}, {"score": 0.0027811441123794427, "phrase": "hardware_solution"}, {"score": 0.0026186324161493225, "phrase": "error_summary"}, {"score": 0.002447101794397243, "phrase": "hardware_implementation_assessment"}, {"score": 0.0024196235355517827, "phrase": "proposed_multiplier"}, {"score": 0.0023214774334744713, "phrase": "time_delay_estimation"}, {"score": 0.0022273034991008326, "phrase": "clock_cycle"}, {"score": 0.0021693692831601745, "phrase": "maximum_relative_error"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Computer arithmetic", " Digital signal processing", " Multiplier", " Logarithmic number system", " FPGA"], "paper_abstract": "Digital signal processing algorithms often rely heavily on a large number of multiplications, which is both time and power consuming. However, there are many practical solutions to simplify multiplication, like truncated and logarithmic multipliers. These methods consume less time and power but introduce errors. Nevertheless, they can be used in situations where a shorter time delay is more important than accuracy. In digital signal processing, these conditions are often met, especially in video compression and tracking, where integer arithmetic gives satisfactory results. This paper presents a simple and efficient multiplier with the possibility to achieve an arbitrary accuracy through an iterative procedure, prior to achieving the exact result. The multiplier is based on the same form of number representation as Mitchell's algorithm, but it uses different error correction circuits than those proposed by Mitchell. In such a way, the error correction can be done almost in parallel (actually this is achieved through pipelining) with the basic multiplication. The hardware solution involves adders and shifters, so it is not gate and power consuming. The error summary for operands ranging from 8 bits to 16 bits indicates a very low relative error percentage with two iterations only. For the hardware implementation assessment, the proposed multiplier is implemented on the Spartan 3 FPGA chip. For 16-bit operands, the time delay estimation indicates that a multiplier with two iterations can work with a clock cycle more than 150 MHz, and with the maximum relative error being less than 2%. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "An iterative logarithmic multiplier", "paper_id": "WOS:000287716800004"}