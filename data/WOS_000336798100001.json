{"auto_keywords": [{"score": 0.04857093146778541, "phrase": "aes"}, {"score": 0.009786530482772301, "phrase": "general_solver"}, {"score": 0.0071523496436237954, "phrase": "incomplete_diffusion_feature"}, {"score": 0.006768773921811317, "phrase": "asca"}, {"score": 0.006316296798308277, "phrase": "previous_ascas"}, {"score": 0.006279710707920656, "phrase": "idasca"}, {"score": 0.005003185389224382, "phrase": "time_complexity"}, {"score": 0.004902352314197401, "phrase": "error-tolerant_attack_scenarios"}, {"score": 0.004609352548073816, "phrase": "microcontroller_implementations"}, {"score": 0.004582608049002167, "phrase": "algebraic_side-channel_attack"}, {"score": 0.004503297824977738, "phrase": "typical_technique"}, {"score": 0.0042610532651691305, "phrase": "analytical_side-channel_attack"}, {"score": 0.004199490556726464, "phrase": "entire_key"}, {"score": 0.0040200679321014095, "phrase": "grobner"}, {"score": 0.0038037169725424567, "phrase": "general_solver_approach"}, {"score": 0.0037946950315883837, "phrase": "side-channel_leaks"}, {"score": 0.0036945485333312747, "phrase": "different_cryptographic_algorithms"}, {"score": 0.0035469375686704207, "phrase": "specialized_properties"}, {"score": 0.003516079377293321, "phrase": "targeted_cryptographic_algorithms"}, {"score": 0.0032031180198375283, "phrase": "new_approach"}, {"score": 0.0030750912253637306, "phrase": "asca."}, {"score": 0.003030600725762668, "phrase": "new_analytical_side-channel_attack"}, {"score": 0.002917931350071647, "phrase": "incomplete_diffusion_analytical_side-channel_analysis"}, {"score": 0.002817639725689939, "phrase": "specialized_approach"}, {"score": 0.00278497898719426, "phrase": "secret_key"}, {"score": 0.002720785798036066, "phrase": "extensive_attacks"}, {"score": 0.0026814165903551353, "phrase": "software_implementation"}, {"score": 0.0026272523687965615, "phrase": "experimental_results"}, {"score": 0.002529540325742311, "phrase": "aes_rounds"}, {"score": 0.002507511169156787, "phrase": "single_power_trace"}, {"score": 0.002331221840164716, "phrase": "reduced_key_search_space"}, {"score": 0.0021927323694667694, "phrase": "quantitative_perspective"}, {"score": 0.0021049977753042253, "phrase": "extreme_cases"}], "paper_keywords": ["Incomplete diffusion", " algebraic side-channel attack", " AES", " Hamming weight leakage model", " microcontrollers"], "paper_abstract": "Algebraic side-channel attack (ASCA) is a typical technique that relies on a general solver to solve the equations of a cipher and its side-channel leaks. It falls under analytical side-channel attack and can recover the entire key at once. Many ASCAs are proposed against the AES, and they utilize the Grobner basis-based, SAT-based, or optimizer-based solver. The advantage of the general solver approach is its generic feature, which can be easily applied to different cryptographic algorithms. The disadvantage is that it is difficult to take into account the specialized properties of the targeted cryptographic algorithms. The results vary depending on what type of solver is used, and the time complexity is quite high when considering the error-tolerant attack scenarios. Thus, we were motivated to find a new approach that would lessen the influence of the general solver and reduce the time complexity of ASCA. This paper proposes a new analytical side-channel attack on AES by exploiting the incomplete diffusion feature in one AES round. We named our technique incomplete diffusion analytical side-channel analysis (IDASCA). Different from previous ASCAs, IDASCA adopts a specialized approach to recover the secret key of AES instead of the general solver. Extensive attacks are performed against the software implementation of AES on an 8-bit microcontroller. Experimental results show that: 1) IDASCA can exploit the side-channel leaks in all AES rounds using a single power trace; 2) it has less time complexity and more robustness than previous ASCAs, especially when considering the error-tolerant attack scenarios; and 3) it can calculate the reduced key search space of AES for the given amount of side-channel leaks. IDASCA can also interpret the mechanism behind previous ASCAs on AES from a quantitative perspective, such as why ASCA can work under unknown plaintext/ciphertext scenarios and what are the extreme cases in ASCAs.", "paper_title": "Exploiting the Incomplete Diffusion Feature: A Specialized Analytical Side-Channel Attack Against the AES and Its Application to Microcontroller Implementations", "paper_id": "WOS:000336798100001"}