{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "incomplete_information"}, {"score": 0.014503576227910323, "phrase": "query_answering"}, {"score": 0.013215213310999133, "phrase": "xml_documents"}, {"score": 0.01273208208757219, "phrase": "null_values"}, {"score": 0.004579848958712365, "phrase": "xml"}, {"score": 0.004169226023596022, "phrase": "relational_incompleteness"}, {"score": 0.003771631577951067, "phrase": "structural_information"}, {"score": 0.0035648266669315943, "phrase": "incomplete_descriptions"}, {"score": 0.003454858296390957, "phrase": "separate_features"}, {"score": 0.0032449610741097992, "phrase": "hard_computational_problems"}, {"score": 0.0031448288291084, "phrase": "efficient_algorithms"}, {"score": 0.0028986672783671147, "phrase": "partial_structural_descriptions"}, {"score": 0.0028091907694771613, "phrase": "key_computational_problems"}, {"score": 0.0027054473441439422, "phrase": "partial_descriptions"}, {"score": 0.0026384167183586015, "phrase": "complete_documents"}, {"score": 0.0026055251533586804, "phrase": "incomplete_ones"}, {"score": 0.002431797888365548, "phrase": "schema_information"}, {"score": 0.0023566987138026285, "phrase": "node_ids"}, {"score": 0.0023127544795063263, "phrase": "missing_structural_information"}, {"score": 0.0022273034991008326, "phrase": "main_computational_problems"}, {"score": 0.002172093645267283, "phrase": "robust_classes"}, {"score": 0.0021450029487459403, "phrase": "incomplete_xml_descriptions"}, {"score": 0.0021049977753042253, "phrase": "tractable_query_evaluation"}], "paper_keywords": ["Theory", " Languages", " Algorithms", " XML", " incomplete information", " query answering", " certain answers", " consistency", " membership"], "paper_abstract": "We study models of incomplete information for XML, their computational properties, and query answering. While our approach is motivated by the study of relational incompleteness, incomplete information in XML documents may appear not only as null values but also as missing structural information. Our goal is to provide a classification of incomplete descriptions of XML documents, and separate features-or groups of features-that lead to hard computational problems from those that admit efficient algorithms. Our classification of incomplete information is based on the combination of null values with partial structural descriptions of documents. The key computational problems we consider are consistency of partial descriptions, representability of complete documents by incomplete ones, and query answering. We show how factors such as schema information, the presence of node ids, and missing structural information affect the complexity of these main computational problems, and find robust classes of incomplete XML descriptions that permit tractable query evaluation.", "paper_title": "XML with Incomplete Information", "paper_id": "WOS:000285501600004"}