{"auto_keywords": [{"score": 0.036718790246924135, "phrase": "business_rules"}, {"score": 0.004602233424629559, "phrase": "information_systems"}, {"score": 0.0043144799365586375, "phrase": "compelling_evidence"}, {"score": 0.004123781267600542, "phrase": "business_policy"}, {"score": 0.0040186038781533946, "phrase": "profound_effect"}, {"score": 0.003941478054422721, "phrase": "information_system_ability"}, {"score": 0.0034191818674096453, "phrase": "early_requirements_stage"}, {"score": 0.003331915219811852, "phrase": "user-understandable_terms"}, {"score": 0.003267925215811654, "phrase": "downstream_system_design_components"}, {"score": 0.0030239842475439814, "phrase": "user-oriented_changes"}, {"score": 0.0025230952890994236, "phrase": "brood_approach"}, {"score": 0.0023650305205893353, "phrase": "seamless_traceability"}, {"score": 0.002304606411453748, "phrase": "system_designs"}, {"score": 0.0021883400011393564, "phrase": "successive_transformations"}, {"score": 0.0021462885927660013, "phrase": "uml"}, {"score": 0.0021049977753042253, "phrase": "modelling_framework"}], "paper_keywords": ["business rules", " object-oriented design", " software architecture", " software evolution"], "paper_abstract": "A critical success factor for information systems is their ability to evolve as their environment changes. There is compelling evidence that the management of change in business policy can have a profound effect on an information system ability to evolve effectively and efficiently. For this to be successful, there is a need to represent business rules from the early requirements stage, expressed in user-understandable terms, to downstream system design components and maintain these throughout the lifecycle of the system. Any user-oriented changes could then be traced and if necessary propagated from requirements to design specifications and evaluated by both end-users and developers about their impact on the system. The BROOD approach, discussed in this article, aims to provide seamless traceability between requirements and system designs through the modelling of business rules and the successive transformations, using UML as the modelling framework.", "paper_title": "BROOD: Business rules-driven object oriented design", "paper_id": "WOS:000250850700004"}