{"auto_keywords": [{"score": 0.03379440311039387, "phrase": "dna_sequences"}, {"score": 0.00481495049065317, "phrase": "synthetic_biology"}, {"score": 0.004701985831087475, "phrase": "nucleotide_sequence_conversion"}, {"score": 0.00452670409375785, "phrase": "automated_computational_design"}, {"score": 0.004483909657713567, "phrase": "genetic_circuits"}, {"score": 0.004296264970612285, "phrase": "ever_more_complex_and_ambitious_synthetic_biology_projects"}, {"score": 0.004019797503157808, "phrase": "individual_parts"}, {"score": 0.003906804492585634, "phrase": "binding_sites"}, {"score": 0.0038698476651328898, "phrase": "coding_sequences"}, {"score": 0.003815064377019477, "phrase": "low_level_models"}, {"score": 0.00370780481244907, "phrase": "dynamic_model"}, {"score": 0.0036553070575015344, "phrase": "larger_device"}, {"score": 0.0035864603175592854, "phrase": "desired_behaviour"}, {"score": 0.0035356745476539885, "phrase": "larger_model"}, {"score": 0.003419943984098415, "phrase": "physical_implementation"}, {"score": 0.003371508176308189, "phrase": "dna_level"}, {"score": 0.0032302647179383915, "phrase": "complex_genetic_circuits"}, {"score": 0.003154360892955196, "phrase": "non-trivial_undertaking"}, {"score": 0.003036595866130997, "phrase": "model_parts"}, {"score": 0.0028409576481842457, "phrase": "computationally_tractable_information"}, {"score": 0.0026452734009203764, "phrase": "dynamic_models"}, {"score": 0.0026077803487003, "phrase": "cellml"}, {"score": 0.002359759876402679, "phrase": "automated_conversion"}, {"score": 0.0021971525802019147, "phrase": "rdf."}, {"score": 0.0021251363422701446, "phrase": "software_tool"}, {"score": 0.0021049977753042253, "phrase": "mosec."}], "paper_keywords": [""], "paper_abstract": "Motivation: The need for the automated computational design of genetic circuits is becoming increasingly apparent with the advent of ever more complex and ambitious synthetic biology projects. Currently, most circuits are designed through the assembly of models of individual parts such as promoters, ribosome binding sites and coding sequences. These low level models are combined to produce a dynamic model of a larger device that exhibits a desired behaviour. The larger model then acts as a blueprint for physical implementation at the DNA level. However, the conversion of models of complex genetic circuits into DNA sequences is a non-trivial undertaking due to the complexity of mapping the model parts to their physical manifestation. Automating this process is further hampered by the lack of computationally tractable information in most models. Results: We describe a method for automatically generating DNA sequences from dynamic models implemented in CellML and Systems Biology Markup Language (SBML). We also identify the metadata needed to annotate models to facilitate automated conversion, and propose and demonstrate a method for the markup of these models using RDF. Our algorithm has been implemented in a software tool called MoSeC.", "paper_title": "Model annotation for synthetic biology: automating model to nucleotide sequence conversion", "paper_id": "WOS:000289162000013"}