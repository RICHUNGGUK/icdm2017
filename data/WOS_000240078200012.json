{"auto_keywords": [{"score": 0.028665242444643153, "phrase": "patoma"}, {"score": 0.00481495049065317, "phrase": "recursive_bipartitioning"}, {"score": 0.004751216062917875, "phrase": "new_paradigm"}, {"score": 0.004585332915477379, "phrase": "fixed-shape_and_variable-shape_blocks"}, {"score": 0.004327981760540394, "phrase": "dramatic_improvement"}, {"score": 0.004289686492089576, "phrase": "traditional_floorplanning_methods"}, {"score": 0.004195418010131832, "phrase": "explicit_construction"}, {"score": 0.004158290806404304, "phrase": "strictly_legal_layouts"}, {"score": 0.004103212598803194, "phrase": "partition_block"}, {"score": 0.003995226376780718, "phrase": "cutsize-driven_top-down_hierarchy"}, {"score": 0.0038556354709511818, "phrase": "hierarchical_flow"}, {"score": 0.003821503621554738, "phrase": "post_hoc_legalization"}, {"score": 0.0037209035703970705, "phrase": "large_floorplanning_benchmarks"}, {"score": 0.003574929398913029, "phrase": "module_arrangement"}, {"score": 0.003449972561293443, "phrase": "half_the_wirelength"}, {"score": 0.003198705576491802, "phrase": "standard_gigascale_systems_research_center_benchmarks"}, {"score": 0.003128336741911927, "phrase": "capo_macro_placer"}, {"score": 0.0030868583963299698, "phrase": "traffic_floorplanner"}, {"score": 0.002861961643289598, "phrase": "patonm's_average_wirelength"}, {"score": 0.0027989800906333784, "phrase": "high-effort_mode"}, {"score": 0.002470987929071079, "phrase": "parquet's_default_mode"}, {"score": 0.002352886041381761, "phrase": "new_set"}, {"score": 0.002250415129116109, "phrase": "hard_and_soft_blocks"}, {"score": 0.0021716547558271785, "phrase": "parquet"}], "paper_keywords": ["floorplanning", " optimization", " partitioning", " physical design"], "paper_abstract": "A new paradigm is introduced for floorplanning any combination of fixed-shape and variable-shape blocks under tight fixed-outline area constraints and a wirelength objective. Dramatic improvement over traditional floorplanning methods is achieved by the explicit construction of strictly legal layouts for every partition block at every level of a cutsize-driven top-down hierarchy. By scalably incorporating legalization into the hierarchical flow, post hoc legalization is successfully eliminated. For large floorplanning benchmarks, an implementation, called partitioning to optimize module arrangement (PATOMA), generates solutions with half the wirelength of state-of-the-art floorplanners in orders of magnitude less run time. Experiments on standard Gigascale Systems Research Center benchmarks compare PATOMA to the Capo macro placer, the Traffic floorplanner, and to both the default and high-effort modes of the Parquet 4.0 floorplanner. With all blocks hard, PATONM's average wirelength is comparable to the high-effort mode of Parquet 4.0 floorplanner and Capo, while PATOMA runs significantly faster. With all blocks soft, PATOMA produces wirelength 9 % shorter on average than that of Parquet's default mode, and PATOMA runs seven times faster. For a new set of benchmarks with a mix of 500 to 2000 hard and soft blocks, PATOMA produces results with wirelengths roughly half of Parquet's, with a speedup of almost 200 x.", "paper_title": "Fast floorplanning by look-ahead enabled recursive bipartitioning", "paper_id": "WOS:000240078200012"}