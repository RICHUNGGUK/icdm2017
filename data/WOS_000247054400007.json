{"auto_keywords": [{"score": 0.03222031375045697, "phrase": "feature_diagrams"}, {"score": 0.00481495049065317, "phrase": "verifying_feature_models"}, {"score": 0.004770211811866158, "phrase": "owl._feature_models"}, {"score": 0.00466016686289196, "phrase": "domain_engineering"}, {"score": 0.004426882270402403, "phrase": "particular_domain"}, {"score": 0.004264558080356621, "phrase": "formal_semantics"}, {"score": 0.004224911726496726, "phrase": "reasoning_support"}, {"score": 0.004185632403886255, "phrase": "feature_models"}, {"score": 0.0040133278382101885, "phrase": "industrial_experiences"}, {"score": 0.0038301525703886585, "phrase": "feature_model_analysis"}, {"score": 0.0035211747962710246, "phrase": "reasoning_tool"}, {"score": 0.0032370412139943808, "phrase": "modern_software_systems"}, {"score": 0.0030178044717552605, "phrase": "semantic_web_owl_ontologies"}, {"score": 0.0029618842673339173, "phrase": "owl_dl_ontologies"}, {"score": 0.0028133741785871867, "phrase": "feature_diagram"}, {"score": 0.002787181295054319, "phrase": "owl_reasoning_engines"}, {"score": 0.00263505298504827, "phrase": "feature_configurations"}, {"score": 0.002550165781755603, "phrase": "general_owl_debugger"}, {"score": 0.0024336086025284836, "phrase": "debugging_aids"}, {"score": 0.0023996890513009743, "phrase": "current_owl_reasoner"}, {"score": 0.002289993730291136, "phrase": "case_tool"}, {"score": 0.0022580713471027996, "phrase": "visual_development"}, {"score": 0.0021649437083408425, "phrase": "semanticweb_environment"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Semantic Web", " OWL", " ontologies", " feature modeling"], "paper_abstract": "Feature models are widely used in domain engineering to capture common and variant features among systems in a particular domain. However, the lack of a formal semantics and reasoning support of feature models has hindered the development of this area. Industrial experiences also show that methods and tools that can support feature model analysis are badly appreciated. Such reasoning tool should be fully automated and efficient. At the same time, the reasoning tool should scale up well since it may need to handle hundreds or even thousands of features a that modern software systems may have. This paper presents an approach to modeling and verifying feature diagrams using Semantic Web OWL ontologies. We use OWL DL ontologies to precisely capture the inter-relationships among the features in a feature diagram. OWL reasoning engines such as FaCT++ are deployed to check for the inconsistencies of feature configurations fully automatically. Furthermore, a general OWL debugger has been developed to tackle the disadvantage of lacking debugging aids for the current OWL reasoner and to complement our verification approach. We also developed a CASE tool to facilitate visual development, interchange and reasoning of feature diagrams in the SemanticWeb environment. (C) 2007 Elsevier B. V. All rights reserved.", "paper_title": "Verifying feature models using OWL", "paper_id": "WOS:000247054400007"}