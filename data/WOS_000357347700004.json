{"auto_keywords": [{"score": 0.03702370315201189, "phrase": "real-time_java"}, {"score": 0.00481495049065317, "phrase": "real-time_and_embedded_applications"}, {"score": 0.00475924837336259, "phrase": "c._next"}, {"score": 0.004542780650208743, "phrase": "increasing_maintenance_and_development_costs"}, {"score": 0.004211731831120046, "phrase": "efficient_programming_language"}, {"score": 0.004162978902905443, "phrase": "high-level_real-time_programming_abstractions"}, {"score": 0.003996727479807572, "phrase": "embedded_cyber_physical_c"}, {"score": 0.003726967166630926, "phrase": "real-time_applications"}, {"score": 0.0033170847930578473, "phrase": "mature_programming_patterns"}, {"score": 0.0031476068430779367, "phrase": "embedded_processors"}, {"score": 0.003093054709625219, "phrase": "limited_hardware"}, {"score": 0.0030042210975126616, "phrase": "programming_abstractions"}, {"score": 0.002850682396853918, "phrase": "c_application_system"}, {"score": 0.002736694413701639, "phrase": "resource_sharing"}, {"score": 0.0027049694095434905, "phrase": "memory_management"}, {"score": 0.0026736111900632934, "phrase": "external_event"}, {"score": 0.0024784363584530976, "phrase": "performance_results"}, {"score": 0.0023380300046435187, "phrase": "ecp-c"}, {"score": 0.0021799789348982516, "phrase": "limited_infrastructures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Real-time", " C programming language", " Real-time systems", " Real-time programming languages", " Arduino"], "paper_abstract": "Next generation applications will demand more cost-effective programming abstractions to reduce increasing maintenance and development costs. In this context, the article explores the integration of an efficient programming language and high-level real-time programming abstractions. The resulting abstraction is called Embedded Cyber Physical C (ECP-C) and it is useful for designing real-time applications directly on C. The abstraction has its roots on the real-time Java: one of the most modern programming languages, which benefited from mature programming patterns previously developed for other languages. It also targets embedded processors running on limited hardware. ECP-C takes the programming abstractions described in real-time Java and reflects them into a C application system, providing extensions for multi-threading, resource sharing, memory management, external event, signaling, and memory access. It also reports on the performance results obtained in a set of infrastructures used to check ECP-C, providing clues on the overhead introduced by these mechanisms on limited infrastructures. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A library for developing real-time and embedded applications in C", "paper_id": "WOS:000357347700004"}