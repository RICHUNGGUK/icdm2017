{"auto_keywords": [{"score": 0.026628268234673784, "phrase": "gop"}, {"score": 0.00481495049065317, "phrase": "optimal_static_sequential_portfolios"}, {"score": 0.004370973501074594, "phrase": "modern_solvers"}, {"score": 0.004283739213556286, "phrase": "fast_downward_stone_soup_and"}, {"score": 0.004266503398849833, "phrase": "satzilla"}, {"score": 0.00419823857480455, "phrase": "excellent_performance"}, {"score": 0.004064958518350867, "phrase": "deeper_understanding"}, {"score": 0.0036454883790271843, "phrase": "theoretically-grounded_method"}, {"score": 0.003601628511550962, "phrase": "mixed-integer_programming"}, {"score": 0.0033628392198449134, "phrase": "upper_bound"}, {"score": 0.0033223686422055834, "phrase": "solvers_performance"}, {"score": 0.0031271827534050493, "phrase": "training_instances"}, {"score": 0.003003452468800793, "phrase": "high_performance_portfolio"}, {"score": 0.002896274285996145, "phrase": "unseen_instances"}, {"score": 0.002872979681637667, "phrase": "experimental_results"}, {"score": 0.0025761937402886954, "phrase": "mipsat"}, {"score": 0.002545165985686468, "phrase": "sequential_sat_portfolio"}, {"score": 0.0024642355970277497, "phrase": "silver_medal"}, {"score": 0.0024345529783611703, "phrase": "open_track"}, {"score": 0.0024052270356036743, "phrase": "sat_competition"}, {"score": 0.002347628167175859, "phrase": "miplan"}, {"score": 0.0022365262201954643, "phrase": "portfolio_configuration"}, {"score": 0.0022095803687183107, "phrase": "specific_planning_domain"}, {"score": 0.0021566565951738658, "phrase": "learning_track"}], "paper_keywords": ["Portfolios", " Automated planning", " SAT"], "paper_abstract": "In recent years the notion of portfolio has been revived with the aim of improving the performance of modern solvers. For example, Fast Downward Stone Soup and SATZILLA have shown an excellent performance at the International Planning and SAT Competitions respectively. However, a deeper understanding of the limits and possibilities of portfolios is still missing. Most approaches to the study of portfolios are purely empirical. Thus, we propose a theoretically-grounded method based on Mixed-Integer Programming named GOP. It addresses, among others, three main issues: how to derive an upper bound on the solvers performance for a given set of problem solving tasks; how to analyze the utility of training instances when designing portfolios; and how to configure a high performance portfolio for a given training set which generalizes very well on unseen instances. Experimental results both with data from the International Planning Competitions 2008 and 2011 and the SAT Competition 2013 show that this approach significantly outperforms others under the same conditions. Indeed, MIPSAT, the sequential SAT portfolio automatically configured with GOP, won the silver medal in the Open track of the SAT Competition 2013. In addition, MIPLAN, the planning system which is able to automatically generate a portfolio configuration for a specific planning domain using GOP, won the learning track of the International Planning Competition 2014. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Automatic construction of optimal static sequential portfolios for AI planning and beyond", "paper_id": "WOS:000358104300003"}