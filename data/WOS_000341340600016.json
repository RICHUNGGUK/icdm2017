{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "candidate_support_vectors"}, {"score": 0.03204961525783956, "phrase": "csv-isvm"}, {"score": 0.0047588556219929756, "phrase": "incremental_svm"}, {"score": 0.00470341117804131, "phrase": "network_intrusion_detection"}, {"score": 0.004594443767709888, "phrase": "incremental_support_vector_machine_classification"}, {"score": 0.00440976345264104, "phrase": "nonsupport_vectors"}, {"score": 0.004332894955218135, "phrase": "previous_classification"}, {"score": 0.004183137595671171, "phrase": "training_data"}, {"score": 0.0041102032028337366, "phrase": "next_classification"}, {"score": 0.0040385352882334235, "phrase": "new_data_samples"}, {"score": 0.0038534477978822133, "phrase": "half-partition_strategy"}, {"score": 0.003742084495435749, "phrase": "non-support_vectors"}, {"score": 0.003676811616723809, "phrase": "current_increment"}, {"score": 0.0033473779327638322, "phrase": "support_vectors"}, {"score": 0.0032889671598112023, "phrase": "next_increment"}, {"score": 0.0031938648476635225, "phrase": "research_work"}, {"score": 0.0030653094605910727, "phrase": "based_incremental_svm"}, {"score": 0.002924694271730544, "phrase": "proposed_strategy"}, {"score": 0.0028568174308720167, "phrase": "whole_process"}, {"score": 0.0028234703730349916, "phrase": "incremental_svm_classification"}, {"score": 0.0026781477395106993, "phrase": "previously_proposed_concentric-ring_method"}, {"score": 0.002540285736232122, "phrase": "proposed_method"}, {"score": 0.002353554841514325, "phrase": "experimental_results"}, {"score": 0.002326068563512387, "phrase": "performance_analyses"}, {"score": 0.002272053079580848, "phrase": "proposed_algorithm"}, {"score": 0.002206290313627494, "phrase": "general_isvm_classifications"}, {"score": 0.0021805201234139475, "phrase": "real-time_network_intrusion_detection"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Incremental support vector machine", " Karush-Kuhn-Tucker condition", " Candidate Support Vector", " Half-partition strategy", " Network intrusion detection"], "paper_abstract": "In an Incremental Support Vector Machine classification, the data objects labelled as nonsupport vectors by the previous classification are re-used as training data in the next classification along with new data samples verified by Karush-Kuhn-Tucker (KKT) condition. This paper proposes Half-partition strategy of selecting and retaining non-support vectors of the current increment of classification - named as Candidate Support Vectors (CSV) - which are likely to become support vectors in the next increment of classification. This research work also designs an algorithm named the Candidate Support Vector based Incremental SVM (CSV-ISVM) algorithm that implements the proposed strategy and materializes the whole process of incremental SVM classification. This work also suggests modifications to the previously proposed concentric-ring method and reserved set strategy. Performance of the proposed method is evaluated with experiments and also by comparing it with other ISVM techniques. Experimental results and performance analyses show that the proposed algorithm CSV-ISVM is better than general ISVM classifications for real-time network intrusion detection. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Selection of Candidate Support Vectors in incremental SVM for network intrusion detection", "paper_id": "WOS:000341340600016"}