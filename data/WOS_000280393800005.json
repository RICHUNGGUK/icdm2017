{"auto_keywords": [{"score": 0.049178471674397164, "phrase": "embedded_processors"}, {"score": 0.045521727399967175, "phrase": "general_purpose_processors"}, {"score": 0.00481495049065317, "phrase": "branch_target"}, {"score": 0.004613516457919661, "phrase": "embedded_application_processors"}, {"score": 0.004548253531664032, "phrase": "multi-tasking_operating_system"}, {"score": 0.004462663711734448, "phrase": "complex_applications"}, {"score": 0.004296264970612285, "phrase": "strong_processors"}, {"score": 0.0042354707960660706, "phrase": "limited_power_source"}, {"score": 0.0040969285074699, "phrase": "portable_devices"}, {"score": 0.003569451476205552, "phrase": "high-end_embedded_processors"}, {"score": 0.003485605409687907, "phrase": "long_pipelines"}, {"score": 0.003436242862104006, "phrase": "high_miss_penalties"}, {"score": 0.003355515814815208, "phrase": "btb"}, {"score": 0.003307988966112615, "phrase": "major_power_consumer"}, {"score": 0.0032302647179383915, "phrase": "large_sram_structure"}, {"score": 0.0031693980719538287, "phrase": "almost_every_cycle"}, {"score": 0.003051073364818384, "phrase": "tight_power_budgets"}, {"score": 0.002965229277927781, "phrase": "first_design"}, {"score": 0.002923214590192792, "phrase": "power_consumption"}, {"score": 0.002881793492919646, "phrase": "single_btb_access"}, {"score": 0.0027741761880779535, "phrase": "predicted_target_address_bits"}, {"score": 0.002708960273193547, "phrase": "power_savings"}, {"score": 0.0026452734009203764, "phrase": "effectively_no_performance_degradation"}, {"score": 0.0025954008219792337, "phrase": "second_design"}, {"score": 0.002546466113418944, "phrase": "redundant_btb_accesses"}, {"score": 0.0024630345285372958, "phrase": "small_buffer"}, {"score": 0.002382329940096419, "phrase": "design_results"}], "paper_keywords": ["Embedded processors", " Branch address prediction", " Branch target buffer", " Power consumption", " Portable devices"], "paper_abstract": "The demand for embedded application processors that support multi-tasking operating system and can execute complex applications bring them closer to general purpose processors. These strong processors have a limited power source because they are usually found in portable devices such as smartphones and other PDAs, and are powered by batteries. The Branch Target Buffer (BTB), which is commonly used in general purpose processors, is becoming prevalent in high-end embedded processors in order to support long pipelines and mitigate high miss penalties. However, the BTB is a major power consumer because it is a large SRAM structure that is accessed almost every cycle. We propose two BTB designs that fit the tight power budgets of embedded processors. In the first design, the power consumption of a single BTB access is reduced by reading only the lower part of the predicted target address bits. This design has power savings of up to 25% dynamic power. with effectively no performance degradation. In the second design, we avoid redundant BTB accesses to the same set by using a small buffer that holds the most recently accessed set. This design results in 75% dynamic power savings at the cost of up to 0.64% system slowdown in a 2-way BTB, and 80% dynamic power savings at the cost of up to 0.58% system slowdown in a 4-way BTB. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Branch target buffer design for embedded processors", "paper_id": "WOS:000280393800005"}