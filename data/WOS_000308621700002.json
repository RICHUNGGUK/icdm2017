{"auto_keywords": [{"score": 0.041417803176381954, "phrase": "abstract_mobile_device"}, {"score": 0.029086064953962168, "phrase": "modif"}, {"score": 0.027183301840015005, "phrase": "tm"}, {"score": 0.00481495049065317, "phrase": "device-independent_mobile_applications"}, {"score": 0.004715702140552199, "phrase": "mobile_applications"}, {"score": 0.0046184900568047565, "phrase": "application_programming_interfaces"}, {"score": 0.004507594400447103, "phrase": "native_platform"}, {"score": 0.00436890075128947, "phrase": "low_portability"}, {"score": 0.004205143879089321, "phrase": "novel_methodology"}, {"score": 0.004147123642915346, "phrase": "declarative_and_device-independent_approach"}, {"score": 0.004104132253183181, "phrase": "event-driven_mobile_applications"}, {"score": 0.0038957429132649175, "phrase": "user_interface_markup_language"}, {"score": 0.003749654338704576, "phrase": "user_preferences"}, {"score": 0.0035965032173588753, "phrase": "standardized_context"}, {"score": 0.0034615969985956866, "phrase": "client-side_apis"}, {"score": 0.003413800638453572, "phrase": "interface_object_model"}, {"score": 0.003240349178289032, "phrase": "design_phase"}, {"score": 0.0030650070965891653, "phrase": "execution_phase"}, {"score": 0.0029705677977833857, "phrase": "specific_platform"}, {"score": 0.0028890603352364273, "phrase": "context_adaptation_mechanisms"}, {"score": 0.00269491620131611, "phrase": "proposed_methodology"}, {"score": 0.0026027798552168344, "phrase": "business_and_consumer_real-world_applications"}, {"score": 0.0025847481073617475, "phrase": "apple"}, {"score": 0.0025314520467544957, "phrase": "google"}, {"score": 0.0024876840172100567, "phrase": "mobile_devices"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Mobile user-interface modeling", " Delivery-context aware user interface", " User interface markup language (UIML)", " Composite capabilities/preference profiles (CC/PP)", " Model driven architecture"], "paper_abstract": "Current methodologies for developing mobile applications are mostly based on the application programming interfaces (APIs) offered by the native platform. Hence, most solutions are characterized by a low portability and/or reusability. In this paper, we propose a novel methodology based on a declarative and device-independent approach for developing event-driven mobile applications. The methodology relies on: (i) an abstract mobile device based on the user interface markup language; (ii) a content adaptation mechanism based on user preferences; (iii) a context adaptation mechanism based on a standardized context of delivery; (iv) a uniform set of client-side APIs based on an interface object model; (v) an efficient transformational model. More specifically, in the design phase, the application is modeled as platform-independent on the abstract mobile device. In the execution phase, the application is automatically tailored to the specific platform on the basis of the content and context adaptation mechanisms. We describe the analysis, design and implementation of a framework, called MODIF, which supports the proposed methodology, and show its application to the development of both business and consumer real-world applications on Apple iphone (TM) and Google Android (TM) mobile devices. Finally, we discuss how the experience of using MODIF highlights the quality of the methodology in terms of automation of the lifecycle, expressiveness and readability of the representation, efficiency of the compilation/interpretation, fast learning curve and predictability. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "An efficient model-based methodology for developing device-independent mobile applications", "paper_id": "WOS:000308621700002"}