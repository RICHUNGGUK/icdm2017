{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hc-search"}, {"score": 0.048756712287817146, "phrase": "search-based_structured_prediction"}, {"score": 0.044585905779495894, "phrase": "structured_prediction"}, {"score": 0.03417668271679221, "phrase": "overall_loss"}, {"score": 0.03207438967850344, "phrase": "high_quality_outputs"}, {"score": 0.004344965512058521, "phrase": "structured_outputs"}, {"score": 0.004304574865291508, "phrase": "prototypical_examples"}, {"score": 0.0040890178236849825, "phrase": "semantic_segmentation"}, {"score": 0.003957477564354679, "phrase": "recent_successes"}, {"score": 0.0038301525703886585, "phrase": "new_framework"}, {"score": 0.003689628075766217, "phrase": "structured_input"}, {"score": 0.003587616378156851, "phrase": "search_procedure"}, {"score": 0.0035211747962710246, "phrase": "learned_heuristic_h"}, {"score": 0.003472149546470424, "phrase": "high_quality_candidate_outputs"}, {"score": 0.0033919477901198716, "phrase": "separate_learned_cost_function_c"}, {"score": 0.003329117824699891, "phrase": "final_prediction"}, {"score": 0.0031919592786945126, "phrase": "prediction_architecture"}, {"score": 0.002839812512030847, "phrase": "generated_outputs"}, {"score": 0.0026722904884984348, "phrase": "greedy_stage-wise_manner"}, {"score": 0.002550165781755603, "phrase": "imitation_learning"}, {"score": 0.002333258365963461, "phrase": "training_procedure"}, {"score": 0.0022793032191981404, "phrase": "particular_loss_function"}], "paper_keywords": [""], "paper_abstract": "Structured prediction is the problem of learning a function that maps structured inputs to structured outputs. Prototypical examples of structured prediction include part-of-speech tagging and semantic segmentation of images. Inspired by the recent successes of search-based structured prediction, we introduce a new framework for structured prediction called HC-Search. Given a structured input, the framework uses a search procedure guided by a learned heuristic H to uncover high quality candidate outputs and then employs a separate learned cost function C to select a final prediction among those outputs. The overall loss of this prediction architecture decomposes into the loss due to H not leading to high quality outputs, and the loss due to C not selecting the best among the generated outputs. Guided by this decomposition, we minimize the overall loss in a greedy stage-wise manner by first training H to quickly uncover high quality outputs via imitation learning, and then training C to correctly rank the outputs generated via H according to their true losses. Importantly, this training procedure is sensitive to the particular loss function of interest and the time-bound allowed for predictions. Experiments on several benchmark domains show that our approach significantly outperforms several state-of-the-art methods.", "paper_title": "HC-Search: A Learning Framework for Search-based Structured Prediction", "paper_id": "WOS:000339311600001"}