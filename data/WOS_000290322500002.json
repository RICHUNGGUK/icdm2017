{"auto_keywords": [{"score": 0.027524190232452457, "phrase": "potential_game"}, {"score": 0.011225880797896435, "phrase": "processing_times"}, {"score": 0.009793488760033092, "phrase": "random_policy"}, {"score": 0.00949309609342716, "phrase": "equi"}, {"score": 0.007987061023006106, "phrase": "equi_policy"}, {"score": 0.00481495049065317, "phrase": "scheduling_game"}, {"score": 0.004621763585712304, "phrase": "social_cost"}, {"score": 0.004588481668397177, "phrase": "maximal_load"}, {"score": 0.00439374125422702, "phrase": "completion_time"}, {"score": 0.004278807087784626, "phrase": "selfish_strategies"}, {"score": 0.003951660804957369, "phrase": "social_optimum"}, {"score": 0.0037115575520983153, "phrase": "coordination_mechanisms"}, {"score": 0.0036231300436703772, "phrase": "scheduling_policies"}, {"score": 0.0032270417756723605, "phrase": "good_price"}, {"score": 0.0031501213108672313, "phrase": "private_information"}, {"score": 0.003045493721818638, "phrase": "so-called_non-clairvoyant_policies"}, {"score": 0.0029372345847161916, "phrase": "random_order"}, {"score": 0.0027719452656588795, "phrase": "cpu_time"}, {"score": 0.002692812566601412, "phrase": "nash_equilibria"}, {"score": 0.00257831812581194, "phrase": "uniform_machines"}, {"score": 0.0022252263986820542, "phrase": "best_strongly_local_policy-policies"}, {"score": 0.0021773853011112882, "phrase": "processing_time"}, {"score": 0.0021049977753042253, "phrase": "jobs'_characteristics"}], "paper_keywords": ["Algorithmic game theory", " Scheduling games", " Coordination mechanisms", " Nash equilibria"], "paper_abstract": "In a scheduling game, each player owns a job and chooses a machine to execute it. While the social cost is the maximal load over all machines (makespan), the cost (disutility) of each player is the completion time of its own job. In the game, players may follow selfish strategies to optimize their cost and therefore their behaviors do not necessarily lead the game to an equilibrium. Even in the case there is an equilibrium, its makespan might be much larger than the social optimum, and this inefficiency is measured by the price of anarchy-the worst ratio between the makespan of an equilibrium and the optimum. Coordination mechanisms aim to reduce the price of anarchy by designing scheduling policies that specify how jobs assigned to a same machine are to be scheduled. Typically these policies define the schedule according to the processing times as announced by the jobs. One could wonder if there are policies that do not require this knowledge, and still provide a good price of anarchy. This would make the processing times be private information and avoid the problem of truthfulness. In this paper we study these so-called non-clairvoyant policies. In particular, we study the RANDOM policy that schedules the jobs in a random order without preemption, and the EQUI policy that schedules the jobs in parallel using time-multiplexing, assigning each job an equal fraction of CPU time. For these models we study two important questions, the existence of Nash equilibria and the price of anarchy. We show that the game under RANDOM policy is a potential game for uniform machines or for two unrelated machines. However, it is not a potential game for three or more unrelated machines. Moreover, we prove that the game under the EQUI policy is a potential game. Next, we analyze the inefficiency of EQUI policy. Interestingly, the (strong) price of anarchy of EQUI, a non-clairvoyant policy, is asymptotically the same as that of the best strongly local policy-policies in which a machine may look at the processing time of jobs assigned to it. The result also indicates that knowledge of jobs' characteristics is not necessarily needed.", "paper_title": "Non-clairvoyant Scheduling Games", "paper_id": "WOS:000290322500002"}