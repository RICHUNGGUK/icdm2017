{"auto_keywords": [{"score": 0.04496820109058902, "phrase": "memory_modules"}, {"score": 0.03300895443701465, "phrase": "load_balancing"}, {"score": 0.00481495049065317, "phrase": "parallel_memory_systems"}, {"score": 0.0047323590206695305, "phrase": "conflict-free_data_distribution_schemes"}, {"score": 0.004631099806015235, "phrase": "multiprocessor_system_architectures"}, {"score": 0.004551647527068771, "phrase": "host_graph"}, {"score": 0.004174287115855492, "phrase": "template_type_t"}, {"score": 0.004049709080817396, "phrase": "memory_conflicts"}, {"score": 0.0037786899855446, "phrase": "mapping_algorithm"}, {"score": 0.003602922164562919, "phrase": "data_access"}, {"score": 0.0034953361767153285, "phrase": "constant_time"}, {"score": 0.0033762956164519286, "phrase": "required_number"}, {"score": 0.0029776614744264724, "phrase": "conflict-free_access"}, {"score": 0.0026951616152303373, "phrase": "breadth-first_search"}, {"score": 0.0025145641652082164, "phrase": "numerical_computation"}, {"score": 0.0024606422183102382, "phrase": "star-template_access_problem"}, {"score": 0.0023460397258997525, "phrase": "popular_interconnection_network_topologies"}, {"score": 0.002315719347244451, "phrase": "proposed_conflict-free_mappings"}, {"score": 0.002227083991228041, "phrase": "optimal_or_provably_good_number"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["parallel memory systems", " data distribution", " coloring", " tori", " hypercubes"], "paper_abstract": "We study conflict-free data distribution schemes in parallel memories in multiprocessor system architectures. Given a host graph G, the problem is to map the nodes of G into memory modules such that any instance of a template type T in G can be accessed without memory conflicts. A conflict occurs if two or more nodes of T are mapped to the same memory module. The mapping algorithm should: (i) be fast in terms of data access (possibly mapping each node in constant time); (ii) minimize the required number of memory modules for accessing any instance in G of the given template type; and (iii) guarantee load balancing on the modules. In this paper, we consider conflict-free access to star templates. i.e., to any node of G along with all of its neighbors. Such a template type arises in many classical algorithms like breadth-first search in a graph, message broadcasting in networks, and nearest neighbor based approximation in numerical computation. We consider the star-template access problem on two specific host graphs-tori and hypercubes-that are also popular interconnection network topologies. The proposed conflict-free mappings on these graphs are fast, use an optimal or provably good number of memory modules, and guarantee load balancing. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Conflict-free star-access in parallel memory systems", "paper_id": "WOS:000241963200008"}