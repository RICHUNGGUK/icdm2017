{"auto_keywords": [{"score": 0.046925816339764864, "phrase": "statistically_superior_performance"}, {"score": 0.03865728703785243, "phrase": "hybrid_algorithm"}, {"score": 0.03628473634901921, "phrase": "original_de"}, {"score": 0.0353238326861397, "phrase": "cma-es"}, {"score": 0.00481495049065317, "phrase": "real_parameter_optimization"}, {"score": 0.004742730438544081, "phrase": "evolutionary_computation"}, {"score": 0.004719077593969911, "phrase": "ec"}, {"score": 0.004601508848655033, "phrase": "different_ec_paradigms"}, {"score": 0.004555371402128666, "phrase": "single_algorithm"}, {"score": 0.0044644734709113985, "phrase": "wide_variety"}, {"score": 0.004442032546224076, "phrase": "optimization_problems"}, {"score": 0.0043533862892678864, "phrase": "efficient_hybrid_evolutionary_algorithm"}, {"score": 0.004309725894724034, "phrase": "difference_vector-based_mutation_scheme"}, {"score": 0.004245051445971095, "phrase": "selection_strategy"}, {"score": 0.004223708778943785, "phrase": "differential_evolution"}, {"score": 0.004160319763461951, "phrase": "recently_developed_global_optimization_algorithm"}, {"score": 0.004128981421251788, "phrase": "covariance_matrix_adaptation_evolutionary_strategy"}, {"score": 0.004026208353551013, "phrase": "stochastic_method"}, {"score": 0.004005961528333933, "phrase": "real_parameter"}, {"score": 0.0038186039088445524, "phrase": "covariance_matrix"}, {"score": 0.0037707671704262217, "phrase": "alternative_method"}, {"score": 0.003751800058095924, "phrase": "traditional_quasi-newton_method"}, {"score": 0.003704797078215222, "phrase": "gradient_method"}, {"score": 0.0036216653011600514, "phrase": "differential_covariance_matrix_adaptation_evolutionary_algorithm"}, {"score": 0.0035137071798628434, "phrase": "better_blending"}, {"score": 0.003487222504700868, "phrase": "explorative_and_exploitative_behaviors"}, {"score": 0.003374735421132299, "phrase": "empirical_simulations"}, {"score": 0.003208699724971268, "phrase": "complicated_fitness_landscapes"}, {"score": 0.0030895394261534776, "phrase": "overall_performance"}, {"score": 0.002764870707831484, "phrase": "jade"}, {"score": 0.0026420518944303716, "phrase": "increasing_population_size"}, {"score": 0.002486734224234698, "phrase": "compositional_benchmark_functions"}, {"score": 0.002406441884512916, "phrase": "hybridization_scheme"}, {"score": 0.0023762535034673017, "phrase": "serious_burden"}, {"score": 0.0023287359930308864, "phrase": "function_evaluations"}, {"score": 0.0022478501955483007, "phrase": "tested_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Differential Evolution", " Covariance Matrix Adaptation Evolutionary", " Strategy", " Numerical optimization", " Explorative power", " Population variance"], "paper_abstract": "Hybridization in context to Evolutionary Computation (EC) aims at combining the operators and methodologies from different EC paradigms to form a single algorithm that may enjoy a statistically superior performance on a wide variety of optimization problems. In this article we propose an efficient hybrid evolutionary algorithm that embeds the difference vector-based mutation scheme, the crossover and the selection strategy of Differential Evolution (DE) into another recently developed global optimization algorithm known as Covariance Matrix Adaptation Evolutionary Strategy (CMA-ES). CMA-ES is a stochastic method for real parameter (continuous domain) optimization of non-linear, non-convex functions. The algorithm includes adaptation of covariance matrix which is basically an alternative method of traditional Quasi-Newton method for optimization based on gradient method. The hybrid algorithm, referred by us as Differential Covariance Matrix Adaptation Evolutionary Algorithm (DCMA-EA), turns out to possess a better blending of the explorative and exploitative behaviors as compared to the original DE and original CMA-ES, through empirical simulations. Though CMA-ES has emerged itself as a very efficient global optimizer, its performance deteriorates when it comes to dealing with complicated fitness landscapes, especially landscapes associated with noisy, hybrid composition functions and many real world optimization problems. In order to improve the overall performance of CMA-ES, the mutation, crossover and selection operators of DE have been incorporated into CMA-ES to synthesize the hybrid algorithm DCMA-EA. We compare DCMA-EA with original DE and CMA-EA, two best known DE-variants: SaDE and JADE, and two state-of-the-art real optimizers: IPOP-CMA-ES (Restart Covariance Matrix Adaptation Evolution Strategy with increasing population size) and DMS-PSO (Dynamic Multi Swarm Particle Swarm Optimization) over a test-suite of 20 shifted, rotated, and compositional benchmark functions and also two engineering optimization problems. Our comparative study indicates that although the hybridization scheme does not impose any serious burden on DCMA-EA in terms of number of Function Evaluations (FEs), DCMA-EA still enjoys a statistically superior performance over most of the tested benchmarks and especially over the multi-modal, rotated, and compositional ones in comparison to the other algorithms considered here. (C) 2011 Published by Elsevier Inc.", "paper_title": "A Differential Covariance Matrix Adaptation Evolutionary Algorithm for real parameter optimization", "paper_id": "WOS:000297403300015"}