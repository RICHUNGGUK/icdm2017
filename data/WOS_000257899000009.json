{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_applications"}, {"score": 0.01552915658292207, "phrase": "grid_scheduling"}, {"score": 0.01425745854349458, "phrase": "grid_resources"}, {"score": 0.011300703767070229, "phrase": "execution_times"}, {"score": 0.004583205112737672, "phrase": "dedicated_and_non-dedicated_clusters"}, {"score": 0.00428257928723, "phrase": "grid_metascheduler"}, {"score": 0.004178198896815672, "phrase": "different_sets"}, {"score": 0.004026359831748917, "phrase": "predicted_execution_times"}, {"score": 0.003558830226733501, "phrase": "comprehensive_set"}, {"score": 0.003515162360861593, "phrase": "performance_modeling_strategies"}, {"score": 0.0033457659530207306, "phrase": "dedicated_and_non-dedicated_environments"}, {"score": 0.0031649018957020337, "phrase": "cpu_loads"}, {"score": 0.002814454488050123, "phrase": "random_loads"}, {"score": 0.002779894844207706, "phrase": "load_traces"}, {"score": 0.002728847267539957, "phrase": "grid_system"}, {"score": 0.002426566352219336, "phrase": "non-dedicated_environments"}, {"score": 0.002239225269052105, "phrase": "modeling_techniques"}, {"score": 0.0021845387990972543, "phrase": "perfect_mapping"}], "paper_keywords": ["performance modeling", " parallel applications", " predictions", " non-dedicated systems", " grids", " cross-platform modeling", " scheduling"], "paper_abstract": "Grids consist of both dedicated and non-dedicated clusters. For effective mapping of parallel applications on grid resources, a grid metascheduler has to evaluate different sets of resources in terms of predicted execution times for the applications when executed on the sets of resources. In this work, we have developed a comprehensive set of performance modeling strategies for predicting execution times of parallel applications on both dedicated and non-dedicated environments. Our strategies adapt to changing network and CPU loads on the grid resources. We have evaluated our strategies on 8, 16, 24 and 32-node clusters with random loads and load traces from a grid system. Our strategies give less than 30% average percentage prediction errors in all cases, which, to our knowledge, is the best reported for non-dedicated environments. We also found that grid scheduling using predictions of execution times from our performance modeling techniques will lead to perfect mapping of applications to resources in many cases. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Performance modeling of parallel applications for grid scheduling", "paper_id": "WOS:000257899000009"}