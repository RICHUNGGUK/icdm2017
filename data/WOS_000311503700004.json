{"auto_keywords": [{"score": 0.04423467024884345, "phrase": "grid_interpolation"}, {"score": 0.00481495049065317, "phrase": "nearest_neighbor"}, {"score": 0.0046238380150870435, "phrase": "nearest_neighbor_search_algorithm"}, {"score": 0.004440277230269978, "phrase": "major_factors"}, {"score": 0.003900257249255497, "phrase": "two-dimensional_index_structure"}, {"score": 0.0035965032173588753, "phrase": "improved_j-nearest_neighbor_search_strategy"}, {"score": 0.003370565320453525, "phrase": "\"neighbor_lag\"_concepts"}, {"score": 0.003158776195052182, "phrase": "j-nearest_neighbor_search_algorithms"}, {"score": 0.0028425481299483254, "phrase": "fixed_number"}, {"score": 0.0027295084882654917, "phrase": "fixed_radius"}, {"score": 0.002578745296475411, "phrase": "proposed_strategy"}, {"score": 0.0023776656246300063, "phrase": "inverse_distance_weighting"}, {"score": 0.0023393782348073424, "phrase": "kriging"}, {"score": 0.0023016843709107297, "phrase": "experimental_results"}, {"score": 0.0022281257694320455, "phrase": "proposed_algorithms"}, {"score": 0.0021922308351126746, "phrase": "high_operating_efficiency"}, {"score": 0.0021049977753042253, "phrase": "data_amount"}], "paper_keywords": ["Grid interpolation", " Nearest neighbors search", " KD-tree", " Priority queue", " Neighbor lag"], "paper_abstract": "The nearest neighbor search algorithm is one of the major factors that influence the efficiency of grid interpolation. This paper introduces a KD-tree that is a two-dimensional index structure for use in grid interpolation. It also proposes an improved J-nearest neighbor search strategy based on \"priority queue\" and \"neighbor lag\" concepts. In the strategy, two types of J-nearest neighbor search algorithms can be used; these algorithms correspond to the consideration of a fixed number of points and a fixed radius. By using the KD-tree and proposed strategy, interpolation can be performed with methods such as Inverse Distance Weighting and Kriging. Experimental results show that the proposed algorithms has high operating efficiency, especially when the data amount is enormous, and high practical value for increasing the efficiency of grid interpolation.", "paper_title": "Grid interpolation algorithm based on nearest neighbor fast search", "paper_id": "WOS:000311503700004"}