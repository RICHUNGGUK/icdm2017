{"auto_keywords": [{"score": 0.04765077338073389, "phrase": "pdr"}, {"score": 0.009848396596760301, "phrase": "data_reconstruction"}, {"score": 0.00481495049065317, "phrase": "progressive_data_retrieval"}, {"score": 0.004759635663291431, "phrase": "distributed_networked_storage"}, {"score": 0.0046240999614456605, "phrase": "decentralized_progressive_data_retrieval"}, {"score": 0.004339293854115301, "phrase": "byzantine_and_crash-stop_nodes"}, {"score": 0.004191377834552202, "phrase": "stored_data"}, {"score": 0.00402514392911723, "phrase": "minimum_communication_cost"}, {"score": 0.003755307753574745, "phrase": "successful_data_retrieval"}, {"score": 0.0036482665232275583, "phrase": "byzantine_and_crash-stop_storage_nodes"}, {"score": 0.003463196032143783, "phrase": "incremental_reed-solomon_decoding"}, {"score": 0.0032122679403131537, "phrase": "ird's_computation_efficiency"}, {"score": 0.0031026497891826726, "phrase": "intermediate_computation_results"}, {"score": 0.0029622717081190667, "phrase": "in-depth_analysis"}, {"score": 0.0028446460307503343, "phrase": "decentralized_erasure_coding"}, {"score": 0.0028119023819663472, "phrase": "decentralized_fountain_coding_algorithms"}, {"score": 0.0027795345823932406, "phrase": "distributed_storage_systems"}, {"score": 0.0025929837295811673, "phrase": "state-of-the-art_error-erasure_decoding_scheme"}, {"score": 0.002377260665147444, "phrase": "code_structure"}, {"score": 0.0022828113789751694, "phrase": "available_storage_nodes"}], "paper_keywords": ["Fault tolerance", " error control codes", " Reed-Solomon codes", " byzantine failure"], "paper_abstract": "We propose a decentralized progressive data retrieval (PDR) mechanism for data reconstruction in a network of Byzantine and crash-stop nodes. The scheme progressively retrieves stored data, such that it achieves the minimum communication cost possible. In particular, PDR gracefully adapts the cost of successful data retrieval to the number of Byzantine and crash-stop storage nodes. At the core of PDR is an incremental Reed-Solomon decoding (IRD) procedure that is highly computation efficient for data reconstruction. IRD's computation efficiency arises from its ability to utilize intermediate computation results. In addition, we provide an in-depth analysis of PDR and compare it to decentralized erasure coding and decentralized fountain coding algorithms for distributed storage systems. Moreover, our implementation results show that PDR has up to 35 times lower computation time over the state-of-the-art error-erasure decoding scheme for distributed storage systems. In our analysis, we also show that the code structure of PDR and the number of available storage nodes are independent of each other, and they can be used to control both the data dissemination and retrieval complexity.", "paper_title": "Progressive Data Retrieval for Distributed Networked Storage", "paper_id": "WOS:000310382800011"}