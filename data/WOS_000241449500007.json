{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "modular_unix-compatible_operating_system"}, {"score": 0.00436530211426514, "phrase": "nearly_the_entire_operating_system"}, {"score": 0.004185632403886255, "phrase": "user-mode_servers"}, {"score": 0.004041546659145336, "phrase": "minimal_kernel"}, {"score": 0.0036382660173943393, "phrase": "unprivileged_user-mode_processes"}, {"score": 0.0033682492486884364, "phrase": "proper_fault_isolation"}, {"score": 0.003275093899046286, "phrase": "damage_bugs"}, {"score": 0.0028664985822266344, "phrase": "critical_modules"}, {"score": 0.002787181295054319, "phrase": "device_drivers"}, {"score": 0.00263505298504827, "phrase": "user_intervention"}, {"score": 0.002544207840990836, "phrase": "new_design"}, {"score": 0.0023387234705715154, "phrase": "unix_family"}, {"score": 0.002289993730291138, "phrase": "resulting_system"}], "paper_keywords": [""], "paper_abstract": "In this paper, we discuss the architecture of a modular UNIX-compatible operating system, MINIX 3, that provides reliability beyond that of most other systems. With nearly the entire operating system running as a set of user-mode servers and drivers atop a minimal kernel, the system is fully compartmentalized. By moving most of the code to unprivileged user-mode processes and restricting the powers of each one, we gain proper fault isolation and limit the damage bugs can do. Moreover, the system has been designed to survive and automatically recover from failures in critical modules, such as device drivers, transparent to applications and without; user intervention. We used this new design to develop a highly reliable, open-source, POSIX-conformant member of the UNIX family. The resulting system is freely available and has been downloaded over 75,000 times since its release.", "paper_title": "Reorganizing UNIX for reliability", "paper_id": "WOS:000241449500007"}