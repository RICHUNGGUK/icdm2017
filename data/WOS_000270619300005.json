{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "input_domain_reduction"}, {"score": 0.048778468893892986, "phrase": "evolutionary_testing"}, {"score": 0.03478167905660463, "phrase": "test_cases"}, {"score": 0.004620093797504386, "phrase": "object-oriented_software"}, {"score": 0.004463723624910583, "phrase": "meta-heuristic_search_techniques"}, {"score": 0.004312622975366676, "phrase": "test_data"}, {"score": 0.004053362743156545, "phrase": "evolutionary_algorithms"}, {"score": 0.003970439654470374, "phrase": "structural_unit-testing"}, {"score": 0.003916098498242888, "phrase": "object-oriented_programs"}, {"score": 0.0037060428445111694, "phrase": "novel_methodologies"}, {"score": 0.0036052633308076933, "phrase": "search_guidance"}, {"score": 0.0033419808453225516, "phrase": "encouraging_results"}, {"score": 0.0031845067058084583, "phrase": "strongly-typed_genetic_programming_technique"}, {"score": 0.0029928611380840757, "phrase": "test_object"}, {"score": 0.0028715299874549245, "phrase": "generated_test_cases"}, {"score": 0.0026616868981501006, "phrase": "coverage_metrics"}, {"score": 0.002518746501941657, "phrase": "search_process"}, {"score": 0.002467140591777737, "phrase": "full_structural_coverage"}, {"score": 0.0023670716500937667, "phrase": "problematic_structures"}, {"score": 0.0023346234464901978, "phrase": "purity_analysis"}, {"score": 0.002255431275670053, "phrase": "systematic_strategy"}, {"score": 0.0021940118003312397, "phrase": "search_space"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Evolutionary Testing", " Search-Based Software Engineering", " Test Case Evaluation", " Input Domain Reduction"], "paper_abstract": "In Evolutionary Testing, meta-heuristic search techniques are used for generating test data. The focus of our research is on employing evolutionary algorithms for the structural unit-testing of Object-Oriented programs. Relevant contributions include the introduction of novel methodologies for automation. search guidance and Input Domain Reduction; the strategies proposed were empirically evaluated with encouraging results. Test cases are evolved using the Strongly-Typed Genetic Programming technique. Test data quality evaluation includes instrumenting the test object, executing it with the generated test cases, and tracing the structures traversed in order to derive coverage metrics. The methodology for efficiently guiding the search process towards achieving full structural coverage involves favouring test cases that exercise problematic structures. Purity Analysis is employed as a systematic strategy for reducing the search space. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Test Case Evaluation and Input Domain Reduction strategies for the Evolutionary Testing of Object-Oriented software", "paper_id": "WOS:000270619300005"}