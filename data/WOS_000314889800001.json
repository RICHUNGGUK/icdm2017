{"auto_keywords": [{"score": 0.049675053299362525, "phrase": "sts"}, {"score": 0.00481495049065317, "phrase": "socio-technical_system"}, {"score": 0.004537631845923196, "phrase": "technical_systems"}, {"score": 0.003259702394241964, "phrase": "monitor-diagnose-reconcile-compensate_cycle"}, {"score": 0.0031643005824589917, "phrase": "context_changes"}, {"score": 0.0031375577552605533, "phrase": "diagnoses_failures"}, {"score": 0.0030457198309616694, "phrase": "monitored_behavior"}, {"score": 0.002994449398035894, "phrase": "actors_goals"}, {"score": 0.002944039482467119, "phrase": "possible_way"}, {"score": 0.0028457440091791252, "phrase": "compensation_actions"}, {"score": 0.002809732883291955, "phrase": "actual_and_desired_behavior"}, {"score": 0.0024947959375982614, "phrase": "extended_tropos_goal_models"}, {"score": 0.0024012441367538434, "phrase": "alternative_strategies"}, {"score": 0.002205692205167157, "phrase": "prototype_implementation"}, {"score": 0.002168531704054597, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Self-adaptive software", " Socio-technical systems", " Goal models", " Requirements engineering"], "paper_abstract": "A socio-technical system (STS) consists of an interplay of humans, organizations, and technical systems. STSs are heterogeneous, dynamic, unpredictable, and weakly controllable. Their operational environment changes unexpectedly, actors join and leave the system at will, actors fail to meet their objectives and under-perform, and dependencies on other actors are violated. To deal with such situations, we propose an architecture for STSs that makes an STS self-reconfigurable, i.e., capable of switching autonomously from one configuration to a better one. Our architecture performs a Monitor-Diagnose-Reconcile-Compensate cycle: it monitors actor behaviors and context changes, diagnoses failures and under-performance by checking whether monitored behavior is compliant with actors goals, finds a possible way to address the problem, and enacts compensation actions to reconcile actual and desired behavior. Compensation actions take into account the autonomy of participants in an STS, which cannot be controlled. Our architecture is requirements driven: we use extended Tropos goal models to diagnose failures as well as to identify alternative strategies to meet requirements. After presenting our conceptual architecture and the algorithms, it is founded upon; we describe a prototype implementation applied to a case study concerning smart-homes. We also provide experimental results that suggest that our architecture scales well as the size of the STS grows.", "paper_title": "Adaptive socio-technical systems: a requirements-based approach", "paper_id": "WOS:000314889800001"}