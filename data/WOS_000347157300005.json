{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_systems"}, {"score": 0.044340662163821175, "phrase": "msvl"}, {"score": 0.012227068817389069, "phrase": "axiomatic_system"}, {"score": 0.00607003802552122, "phrase": "asynchronous_communication"}, {"score": 0.00468912237497774, "phrase": "msvl."}, {"score": 0.004173244935967375, "phrase": "useful_temporal_logic_programming_language"}, {"score": 0.0037488704170498877, "phrase": "ra_algorithm"}, {"score": 0.0033937776228549557, "phrase": "deductive_way"}, {"score": 0.0031676593724896075, "phrase": "new_axioms"}, {"score": 0.002988101395789399, "phrase": "state_axioms"}, {"score": 0.0029565620771207003, "phrase": "asynchronous_communication_commands"}, {"score": 0.0027303606813078255, "phrase": "extended_axiomatic_system"}, {"score": 0.0024947959375982614, "phrase": "distributed_mutual_exclusion_algorithm"}, {"score": 0.0024423826953133844, "phrase": "infinite_state_space"}, {"score": 0.002255431275670053, "phrase": "desired_properties"}, {"score": 0.0021049977753042253, "phrase": "first-come-first-served_property"}], "paper_keywords": ["Distributed systems", " Temporal logic", " Temporal logic programming", " MSVL", " Theorem proving"], "paper_abstract": "Since distributed systems are inherently concurrent and asynchronous, it is a challenge for us to verify distributed systems. MSVL is a useful temporal logic programming language and its axiomatic system has been established. However, the axiomatic system of MSVL lacks mechanisms to manage asynchronous communication, which makes it cannot deal with distributed systems. Thus, to verify distributed systems with MSVL in a deductive way, this paper is motivated to extend the axiomatic system of MSVL with new axioms for asynchronous communication. To this end, firstly we formalize state axioms regarding asynchronous communication commands and then prove the soundness and completeness. Further, to demonstrate how the extended axiomatic system of MSVL works for distributed systems, we apply it to the well-known Ricart-Agrawala (RA) algorithm, which is a distributed mutual exclusion algorithm and has an infinite state space. To do this, we model the RA algorithm with MSVL, specify the desired properties and then verify an instance of the RA algorithm with respect to the first-come-first-served property.", "paper_title": "Verification of distributed systems with the axiomatic system of MSVL", "paper_id": "WOS:000347157300005"}