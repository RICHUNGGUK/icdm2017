{"auto_keywords": [{"score": 0.028840656414376893, "phrase": "ejb"}, {"score": 0.00481495049065317, "phrase": "engineering_sequence_diagrams"}, {"score": 0.004766090327062509, "phrase": "enterprise_java_beans"}, {"score": 0.00437021209960886, "phrase": "separate_code"}, {"score": 0.004238452771031322, "phrase": "java_application"}, {"score": 0.00411064950774695, "phrase": "ejb_interceptors"}, {"score": 0.0040481944502103505, "phrase": "clear_separation"}, {"score": 0.003986684503518077, "phrase": "core_functionality"}, {"score": 0.0032836104153151973, "phrase": "daunting_tasks"}, {"score": 0.003104201872147936, "phrase": "multiple_locations"}, {"score": 0.0030569913145731408, "phrase": "multiple_means"}, {"score": 0.0029951555610569225, "phrase": "different_locations"}, {"score": 0.002860546817196148, "phrase": "interceptor_invocation"}, {"score": 0.002622528664187849, "phrase": "ejb_applications"}, {"score": 0.0025046245057922557, "phrase": "sequence_diagrams"}, {"score": 0.002441422510910065, "phrase": "reverse_engineering_ejb_applications"}, {"score": 0.0022961534630650347, "phrase": "visual_feedback"}, {"score": 0.0022267859286766553, "phrase": "quality_managers"}], "paper_keywords": [""], "paper_abstract": "An Enterprise JavaBeans (EJB) interceptor is a software mechanism that provides for introducing behaviour implemented as separate code into the execution of a Java application. In this way, EJB interceptors provide a clear separation of the core functionality of the bean and other concerns, such as logging or performance analysis. Despite the beauty of the idea behind the i nterceptors, developing, testing and managing dependencies introduced by the interceptors are considered to be daunting tasks. For example, the developers can specify interceptors at multiple locations and by multiple means. However, different locations and specification means influence the order of the interceptor invocation, which is governed by more than 15 different intertwined rules defined in the EJB standard. To facilitate development of EJB applications, we have designed I2SD, Interceptors to Sequence Diagrams, a tool for reverse engineering EJB applications with interceptors to unified modeling language (UML) sequence diagrams. I2SD provides the developer with a visual feedback and can be used by quality managers to obtain insights in the ways interceptors are used in their project.", "paper_title": "I2SD: reverse engineering Sequence Diagrams from Enterprise Java Beans with interceptors", "paper_id": "WOS:000321894600003"}