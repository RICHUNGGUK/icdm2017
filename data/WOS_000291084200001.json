{"auto_keywords": [{"score": 0.035507204238393285, "phrase": "polymorphic_queries"}, {"score": 0.012653638350359224, "phrase": "local_database"}, {"score": 0.004651271219032404, "phrase": "centralized_database"}, {"score": 0.004241370886886689, "phrase": "empty_set"}, {"score": 0.0037072310568610723, "phrase": "relevant_information"}, {"score": 0.0035673211706948576, "phrase": "query_model"}, {"score": 0.0033030907500120397, "phrase": "conjunctive_queries"}, {"score": 0.003265175268104804, "phrase": "type_variables"}, {"score": 0.003000070450638434, "phrase": "horizontal_and_vertical_object_expansions"}, {"score": 0.0027247727563746694, "phrase": "uniform_framework"}, {"score": 0.0026421139329830755, "phrase": "top-k_algorithm"}, {"score": 0.002256155453630723, "phrase": "traditional_queries"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Polymorphic query", " Dependencies Schema mapping", " Object identification"], "paper_abstract": "When a query is posed on a centralized database, if it refers to attributes that are not defined in the database, the user is warranted to get either an error or an empty set. In contrast, when a query is posed on a peer in a P2P system and refers to attributes not found in the local database, the query should not be simply rejected if the relevant information is available at other peers. This paper proposes a query model for unstructured P2P systems to answer such queries. (a) We introduce a class of polymorphic queries, a revision of conjunctive queries by incorporating type variables to accommodate attributes not defined in the local database. (b) We define the semantics of polymorphic queries in terms of horizontal and vertical object expansions, to find attributes and tuples, respectively, missing from the local database. We show that both expansions can be conducted in a uniform framework. (c) We develop a top-K algorithm to approximately answer polymorphic queries. (d) We also provide a method to merge tuples collected from various peers, based on matching keys specified in polymorphic queries. Our experimental study verifies that polymorphic queries are able to find more sensible information than traditional queries supported by P2P systems, and that these queries can be evaluated efficiently. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Polymorphic queries for P2P systems", "paper_id": "WOS:000291084200001"}