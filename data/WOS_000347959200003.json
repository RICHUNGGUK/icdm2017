{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "vlan"}, {"score": 0.04634942632138193, "phrase": "vlans"}, {"score": 0.00475382761232911, "phrase": "virtual_local_area_networks"}, {"score": 0.004497762477097628, "phrase": "data-centre_networks"}, {"score": 0.0043842558719324526, "phrase": "broadcast_domains"}, {"score": 0.004255431326383001, "phrase": "separate_networks"}, {"score": 0.004112812699639956, "phrase": "ad_hoc"}, {"score": 0.0040779081518317415, "phrase": "error-prone_work"}, {"score": 0.003891140864902669, "phrase": "centralized_and_semi-automatic_system"}, {"score": 0.0038092222178451626, "phrase": "css"}, {"score": 0.0036813725040313002, "phrase": "physical_network"}, {"score": 0.003512702405367876, "phrase": "faculty_cluster"}, {"score": 0.0033232673019931206, "phrase": "user_group"}, {"score": 0.0029871209444889716, "phrase": "optimal_spanning_tree"}, {"score": 0.0029491324941225356, "phrase": "affected_vlan"}, {"score": 0.002886885861509621, "phrase": "device_failure"}, {"score": 0.0027311076665349657, "phrase": "spanning_tree_protocol"}, {"score": 0.002539978170928796, "phrase": "bridging_loops"}, {"score": 0.002433843373780471, "phrase": "vlan_partition_data"}, {"score": 0.0024028742248152425, "phrase": "operational_enterprise_network"}, {"score": 0.0023024551893939403, "phrase": "broadcast_traffic_cost"}, {"score": 0.0022442249871042026, "phrase": "link_and_device_failures"}, {"score": 0.002187464225869713, "phrase": "balanced_use"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Network management", " VLAN", " centralized", " configuration"], "paper_abstract": "Virtual local area networks (VLANs) are widely used in many enterprises, campuses, and data-centre networks. Although VLANs can restrict broadcast domains and contain hosts in one network or separate networks, the management of VLANs is an ad hoc and error-prone work. In this paper, we design and implement a centralized and semi-automatic system for VLAN management (CSS-VM). Based on the physical network topology and user group (examples are engineering, student cluster, and faculty cluster) information, CSS-VM can decide the number of VLANs that each user group would be partitioned into. In addition, CSS-VM can not only monitor the status of devices and links but can also calculate an optimal spanning tree for each affected VLAN after a link or device failure is detected, so that it does not need to enable the Spanning Tree Protocol on devices but still has the ability of converging from device or link failures and avoiding bridging loops. We have evaluated CSS-VM on the topology and VLAN partition data of an operational enterprise network. Our results show that CSS-VM can obviously keep the broadcast traffic cost reasonable, efficiently partition and configure VLANs, quickly converge from link and device failures, and intelligently make a balanced use of links. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Towards centralized and semi-automatic VLAN management", "paper_id": "WOS:000347959200003"}