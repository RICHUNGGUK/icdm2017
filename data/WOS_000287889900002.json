{"auto_keywords": [{"score": 0.03300977049985164, "phrase": "ibm"}, {"score": 0.00481495049065317, "phrase": "embedded_multicore_platforms"}, {"score": 0.004768378525561471, "phrase": "multicore_processor_designs"}, {"score": 0.004631335513513859, "phrase": "embedded_applications"}, {"score": 0.004520132822496416, "phrase": "diversified_inter-core_communication_mechanisms"}, {"score": 0.00436890075128947, "phrase": "software_development"}, {"score": 0.0036493838225192883, "phrase": "essential_message-passing_programming_interfaces"}, {"score": 0.0035443861412929006, "phrase": "mcapi"}, {"score": 0.0034423989472667756, "phrase": "point-to-point_communications"}, {"score": 0.003310951184365485, "phrase": "collective_operations"}, {"score": 0.0032736652461604716, "phrase": "msg"}, {"score": 0.0031845067058084583, "phrase": "case_studies"}, {"score": 0.0031567864422187247, "phrase": "cml."}, {"score": 0.0030778231027679464, "phrase": "itri"}, {"score": 0.003003809128328864, "phrase": "cell_platform"}, {"score": 0.002875027551180213, "phrase": "individual_processor_core"}, {"score": 0.0027383842769094354, "phrase": "second_case_study"}, {"score": 0.002608218347502229, "phrase": "pac_duo_platform"}, {"score": 0.0024842242921857705, "phrase": "systematic_approach"}, {"score": 0.0023091721866305426, "phrase": "msg_libraries"}, {"score": 0.0021886732310288128, "phrase": "communication_libraries"}, {"score": 0.0021674482571326283, "phrase": "existing_and_future_multicore_platforms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multicore programming", " Inter-core communication", " Message-passing", " Embedded systems", " Heterogeneous multicore platforms"], "paper_abstract": "Multicore processor designs have become increasingly popular for embedded applications in recent years, but diversified inter-core communication mechanisms have led to the difficulties in software development, integration and migration. A unified, portable, and efficient inter-core communication mechanism would have helped reduce these difficulties significantly, but such a solution did not exist today. We proposed a scheme called MSG, which provides users with a set of essential message-passing programming interfaces adopted from MP! and MCAPI, including blocking and non-blocking point-to-point communications, one-sided communications, and collective operations. We experimented and evaluated our design methodology with case studies on two heterogeneous multicore platforms: IBM CELL and ITRI PAC DUO. On the CELL platform, our MSG library fitted in the 256 KB local memory on each individual processor core and outperformed two existing communication libraries, DaCS and CML. On the second case study, we were able to port MSG onto the PAC DUO platform within two weeks upon receiving the platform. With a systematic approach, we showed how optimizations could be done to improve the performance of the MSG libraries. Hopefully, our experiences help the design and development of communication libraries for existing and future multicore platforms. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "A portable, efficient inter-core communication scheme for embedded multicore platforms", "paper_id": "WOS:000287889900002"}