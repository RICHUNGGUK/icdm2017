{"auto_keywords": [{"score": 0.0477470562153232, "phrase": "simdist"}, {"score": 0.025301596893792546, "phrase": "ea"}, {"score": 0.00481495049065317, "phrase": "easy_parallelization"}, {"score": 0.0047468516620285525, "phrase": "evolutionary_computation"}, {"score": 0.004389089062127892, "phrase": "parallel_execution"}, {"score": 0.004326987090971404, "phrase": "evolutionary_algorithms"}, {"score": 0.004145882022189891, "phrase": "master-slave_configuration"}, {"score": 0.00388828234270598, "phrase": "cost-effective_parallel_solution"}, {"score": 0.0037789720824759503, "phrase": "potential_computational_capabilities"}, {"score": 0.0034690732089830045, "phrase": "personal_computer"}, {"score": 0.003419943984098415, "phrase": "parallel_development"}, {"score": 0.0032766780632972363, "phrase": "major_step"}, {"score": 0.0029024303666003153, "phrase": "cluster_network"}, {"score": 0.0028409576481842457, "phrase": "actual_ea-related_processing"}, {"score": 0.0027218799769229596, "phrase": "slave_nodes"}, {"score": 0.0025525322651112365, "phrase": "traditional_unix_command_line_tools"}, {"score": 0.002445514186654732, "phrase": "separate_process"}, {"score": 0.002309754152767196, "phrase": "standard_input"}], "paper_keywords": ["Distributed computing", " Program development"], "paper_abstract": "This article introduces Simdist, a software tool for parallel execution of evolutionary algorithms (EAs) in a master-slave configuration on cluster architectures. Clusters have become a cost-effective parallel solution, and the potential computational capabilities are phenomenal. However, the transition from traditional R&D on a personal computer to parallel development and deployment can be a major step. Simdist simplifies this transition considerably, by separating the task of distributing data across the cluster network from the actual EA-related processing performed on the master and slave nodes. Simdist is constructed in the vein of traditional Unix command line tools; it runs in a separate process and communicates with EA child processes via standard input and output. As a result, Simdist is oblivious to the programming language(s) used in the EA, and the EA is similarly oblivious to the internals of Simdist.", "paper_title": "Simdist: a distribution system for easy parallelization of evolutionary computation", "paper_id": "WOS:000276911100004"}