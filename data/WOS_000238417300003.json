{"auto_keywords": [{"score": 0.04134320597707196, "phrase": "new_codification"}, {"score": 0.00481495049065317, "phrase": "quadtree_nodes"}, {"score": 0.004444921827311577, "phrase": "alternative_non-pointer_quadtree_node_codification"}, {"score": 0.003687960013746783, "phrase": "variable_sequence"}, {"score": 0.0035908627899097407, "phrase": "z-ordered_base"}, {"score": 0.003404244237372396, "phrase": "memory_requirements"}, {"score": 0.0031006232333900055, "phrase": "previous_codifications"}, {"score": 0.002824005136794786, "phrase": "fd_codification"}, {"score": 0.002572001496778222, "phrase": "linear_quadtrees"}, {"score": 0.002104998559040644, "phrase": "fd."}], "paper_keywords": [""], "paper_abstract": "In this paper an alternative non-pointer quadtree node codification to manage geographical spatial data is presented. New codification is based on a variable sequence of z-ordered base four digits. Memory requirements of the new codification are lower than previous codifications, and in particular lower than FD codification, the most commonly used in linear quadtrees. Furthermore, z-ordering makes compatible new codification with most of the algorithms developed for FD.", "paper_title": "Efficient coding of quadtree nodes", "paper_id": "WOS:000238417300003"}