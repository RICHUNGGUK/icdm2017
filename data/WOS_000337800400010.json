{"auto_keywords": [{"score": 0.03575585700361017, "phrase": "learning_rate"}, {"score": 0.00827910890951866, "phrase": "global_information"}, {"score": 0.00481495049065317, "phrase": "learning-based_approaches"}, {"score": 0.004762550320451225, "phrase": "many-core_embedded_systems"}, {"score": 0.004710908696607011, "phrase": "adaptive"}, {"score": 0.004608730887154718, "phrase": "network_performance"}, {"score": 0.004459857205489101, "phrase": "whole_network"}, {"score": 0.004315771670213371, "phrase": "congestion_information"}, {"score": 0.004245476558619167, "phrase": "load_balancing"}, {"score": 0.004153520149706423, "phrase": "local_and_global_congestion_information"}, {"score": 0.004041359131062721, "phrase": "learning_method"}, {"score": 0.003975515793563275, "phrase": "dual_reinforcement_learning_approach"}, {"score": 0.003743102131902864, "phrase": "changing_traffic_condition"}, {"score": 0.003466780226380516, "phrase": "congestion_detection_method"}, {"score": 0.003318108914777263, "phrase": "congestion_level"}, {"score": 0.0032107911131811057, "phrase": "average_number"}, {"score": 0.003175792987190496, "phrase": "free_buffer_slots"}, {"score": 0.0030899524399043863, "phrase": "specific_time_intervals"}, {"score": 0.0030064251340251196, "phrase": "maximum_and_minimum_values"}, {"score": 0.002925149105307855, "phrase": "comparison_result"}, {"score": 0.002592784882557155, "phrase": "high_value"}, {"score": 0.0022980978400845144, "phrase": "non-congested_switches"}, {"score": 0.002223696715077018, "phrase": "proposed_approach"}, {"score": 0.0021874023741762496, "phrase": "significant_performance_improvement"}, {"score": 0.0021516991383785985, "phrase": "traditional_q-routing"}, {"score": 0.0021049977753042253, "phrase": "dbar_and_dynamic_xy_algorithms"}], "paper_keywords": ["Congestion-aware routing algorithm", " Adaptive routing algorithm", " Q-learning and Q-routing approaches"], "paper_abstract": "Adaptive routing algorithms improve network performance by distributing traffic over the whole network. However, they require congestion information to facilitate load balancing. To provide local and global congestion information, we propose a learning method based on dual reinforcement learning approach. This information can be dynamically updated according to the changing traffic condition in the network by propagating data and learning packets. We utilize a congestion detection method which updates the learning rate according to the congestion level. This method calculates the average number of free buffer slots in each switch at specific time intervals and compares it with maximum and minimum values. Based on the comparison result, the learning rate sets to a value between 0 and 1. If a switch gets congested, the learning rate is set to a high value, meaning that the global information is more important than local. In contrast, local is more emphasized than global information in non-congested switches. Results show that the proposed approach achieves a significant performance improvement over the traditional Q-routing, DRQ-routing, DBAR and Dynamic XY algorithms.", "paper_title": "Adaptive load balancing in learning-based approaches for many-core embedded systems", "paper_id": "WOS:000337800400010"}