{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sparse_data_management"}, {"score": 0.004740009255053372, "phrase": "unsteady_flow"}, {"score": 0.004641890423057823, "phrase": "integral_curves"}, {"score": 0.004593591780245872, "phrase": "integral_surfaces"}, {"score": 0.004545793387330536, "phrase": "large-scale_unsteady_flow_fields"}, {"score": 0.004382364826200616, "phrase": "widening_gap"}, {"score": 0.004314127287770832, "phrase": "access_demands"}, {"score": 0.004246947739596565, "phrase": "available_bandwidth"}, {"score": 0.0038854765143440965, "phrase": "novel_advection-based_scheme"}, {"score": 0.0038249462699142733, "phrase": "flow_field_data"}, {"score": 0.003610929883213109, "phrase": "first_partition_flow_field"}, {"score": 0.003118486096035156, "phrase": "parallel_key-value_store"}, {"score": 0.0029131986574478046, "phrase": "local-range_analysis"}, {"score": 0.002637160140011997, "phrase": "hardware_resources"}, {"score": 0.0024250482323322606, "phrase": "naive_task-parallel_particle_advection"}, {"score": 0.0023254633298356894, "phrase": "prototype_system"}, {"score": 0.0022299587520401747, "phrase": "supercomputing_environments"}, {"score": 0.0021049977753042253, "phrase": "raw_flow_data"}], "paper_keywords": ["Flow visualization", " Data management", " High performance visualization", " Key-value store"], "paper_abstract": "When computing integral curves and integral surfaces for large-scale unsteady flow fields. a major bottleneck is the widening gap between data access demands and the available bandwidth (both I/O and in-memory). In this work, we explore a novel advection-based scheme to manage flow field data for both efficiency and scalability. The key is to first partition flow field into blocklets (e.g. cells or very fine-grained blocks of cells), and then (pre)fetch and manage blocklets on-demand using a parallel key-value store. The benefits are (1) greatly increasing the scale of local-range analysis (e.g. source-destination queries, streak surface generation) that can fit within any given limit of hardware resources; (2) improving memory and I/O bandwidth-efficiencies as well as the scalability of naive task-parallel particle advection. We demonstrate our method using a prototype system that works on workstation and also in supercomputing environments. Results show significantly reduced I/O overhead compared to accessing raw flow data. and also high scalability on a supercomputer for a variety of applications.", "paper_title": "Advection-Based Sparse Data Management for Visualizing Unsteady Flow", "paper_id": "WOS:000344991700101"}