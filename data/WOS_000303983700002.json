{"auto_keywords": [{"score": 0.04962913836247387, "phrase": "hard_real-time_systems"}, {"score": 0.04493195088559337, "phrase": "standard_data_caches"}, {"score": 0.00481495049065317, "phrase": "object_cache_design"}, {"score": 0.0047026237903774895, "phrase": "time-predictable_computing_platform"}, {"score": 0.0046364836476864325, "phrase": "static_worst-case_execution_time"}, {"score": 0.004485735417293941, "phrase": "performance-enhancing_features"}, {"score": 0.004258644418211771, "phrase": "heap-allocated_data"}, {"score": 0.003986103192038901, "phrase": "new_object_cache_design"}, {"score": 0.003820144626025562, "phrase": "static_wcet_analysis"}, {"score": 0.0037486121194392564, "phrase": "standard_benchmarks"}, {"score": 0.0036958398682001015, "phrase": "expected_average_case_performance"}, {"score": 0.003643807817480753, "phrase": "computer_architecture_design"}, {"score": 0.0035925056609681194, "phrase": "design_decisions"}, {"score": 0.003410479630045025, "phrase": "wcet_analysis-friendly_design"}, {"score": 0.0033308077968426937, "phrase": "time-predictable_design"}, {"score": 0.0032223742018434856, "phrase": "wcet_analysis_techniques"}, {"score": 0.0031769866037536045, "phrase": "design_space_exploration"}, {"score": 0.00314708280192844, "phrase": "processor_architectures"}, {"score": 0.0030881143614111552, "phrase": "different_object_cache_configurations"}, {"score": 0.0030590445140753187, "phrase": "static_analysis_techniques"}, {"score": 0.002987557906013826, "phrase": "field_accesses"}, {"score": 0.002822712709335093, "phrase": "analyzed_number"}, {"score": 0.0027050595279115015, "phrase": "access_cycles"}, {"score": 0.002460825108719896, "phrase": "average_case"}, {"score": 0.002391938519840648, "phrase": "data_result"}, {"score": 0.0023694065215394593, "phrase": "overly_pessimistic_wcet_estimations"}, {"score": 0.002292199117499287, "phrase": "early_architecture_exploration"}, {"score": 0.0022492129111567824, "phrase": "static_timing_analysis_techniques"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["real-time systems", " time-predictable computer architecture", " worst-case execution time analysis", " data cache"], "paper_abstract": "Hard real-time systems need a time-predictable computing platform to enable static worst-case execution time (WCET) analysis. All performance-enhancing features need to be WCET analyzable. However, standard data caches containing heap-allocated data are very hard to analyze statically. In this paper we explore a new object cache design, which is driven by the capabilities of static WCET analysis. Simulations of standard benchmarks estimating the expected average case performance usually drive computer architecture design. The design decisions derived from this methodology do not necessarily result in a WCET analysis-friendly design. Aiming for a time-predictable design, we therefore propose to employ WCET analysis techniques for the design space exploration of processor architectures. We evaluated different object cache configurations using static analysis techniques. The number of field accesses that can be statically classified as hits is considerable. The analyzed number of cache miss cycles is 346% of the access cycles needed without a cache, which agrees with trends obtained using simulations. Standard data caches perform comparably well in the average case, but accesses to heap data result in overly pessimistic WCET estimations. We therefore believe that an early architecture exploration by means of static timing analysis techniques helps to identify configurations suitable for hard real-time systems. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Worst-case execution time analysis-driven object cache design", "paper_id": "WOS:000303983700002"}