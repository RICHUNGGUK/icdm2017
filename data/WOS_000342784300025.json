{"auto_keywords": [{"score": 0.030311084376533765, "phrase": "lod_selection"}, {"score": 0.00481495049065317, "phrase": "bimodal_vertex_splitting"}, {"score": 0.0047563776685277314, "phrase": "acceleration_of_quadtree_triangulation"}, {"score": 0.004698514007994158, "phrase": "terrain_rendering"}, {"score": 0.004641351004344458, "phrase": "massive_digital_elevation_models"}, {"score": 0.004556901872357751, "phrase": "large_number"}, {"score": 0.004501453956464956, "phrase": "geometric_primitives"}, {"score": 0.004312622975366676, "phrase": "existing_graphics_hardware"}, {"score": 0.004208282550386197, "phrase": "interactive_visualization"}, {"score": 0.003769006950727621, "phrase": "quadtree_triangulation"}, {"score": 0.0035668128900149814, "phrase": "rectangular_patches"}, {"score": 0.0035233696341819437, "phrase": "different_resolutions"}, {"score": 0.00327357690057817, "phrase": "lod"}, {"score": 0.0027404074817496595, "phrase": "gpu."}, {"score": 0.0027069560455629917, "phrase": "first_mode"}, {"score": 0.002499508839669243, "phrase": "crack_removal"}, {"score": 0.002365437500350985, "phrase": "gpu"}, {"score": 0.00226583335721762, "phrase": "rendering_speed"}, {"score": 0.002210903392596343, "phrase": "computation_time"}, {"score": 0.002157302200451323, "phrase": "transmission_data"}, {"score": 0.0021049977753042253, "phrase": "existing_quadtree-based_rendering_methods"}], "paper_keywords": ["terrain rendering", " level-of-detail", " quadtree triangulation", " real-time rendering"], "paper_abstract": "Massive digital elevation models require a large number of geometric primitives that exceed the throughput of the existing graphics hardware. For the interactive visualization of these datasets, several adaptive reconstruction methods that reduce the number of primitives have been introduced over the decades. Quadtree triangulation, based on subdivision of the terrain into rectangular patches at different resolutions, is the most frequently used terrain reconstruction method. This usually accomplishes the triangulation using LOD (level-of-detail) selection and crack removal based on geometric errors. In this paper, we present bimodal vertex splitting, which performs LOD selection and crack removal concurrently on a GPU. The first mode splits each vertex for LOD selection and the second splits each vertex for crack removal. By performing these two operations concurrently on a GPU, we can efficiently accelerate the rendering speed by reducing the computation time and amount of transmission data in comparison with existing quadtree-based rendering methods.", "paper_title": "Bimodal Vertex Splitting: Acceleration of Quadtree Triangulation for Terrain Rendering", "paper_id": "WOS:000342784300025"}