{"auto_keywords": [{"score": 0.03888571701763215, "phrase": "time_complexity"}, {"score": 0.030646842851071558, "phrase": "exact_and_approximate_distributed_computation"}, {"score": 0.00481495049065317, "phrase": "distributed_approximation."}, {"score": 0.004757643419056999, "phrase": "verification_problem"}, {"score": 0.0047292449487169345, "phrase": "distributed_networks"}, {"score": 0.004548723130053278, "phrase": "network_g"}, {"score": 0.003927848423072668, "phrase": "specified_property"}, {"score": 0.0037664981403399064, "phrase": "decentralized_fashion"}, {"score": 0.003732791585248997, "phrase": "distributed_algorithm"}, {"score": 0.0035794251590584563, "phrase": "distributed_communication"}, {"score": 0.0034946232062615813, "phrase": "systematic_study"}, {"score": 0.003473737415587531, "phrase": "distributed_verification"}, {"score": 0.0034426417353349567, "phrase": "almost_tight_lower_bounds"}, {"score": 0.0034118234596993836, "phrase": "running_time"}, {"score": 0.0033914308417007316, "phrase": "distributed_verification_algorithms"}, {"score": 0.003311067956326299, "phrase": "connected_subgraph"}, {"score": 0.0032814236411444022, "phrase": "s-t_cut_verification"}, {"score": 0.003174973355583627, "phrase": "strong_unconditional_time"}, {"score": 0.003109031770476385, "phrase": "distributed_approximation"}, {"score": 0.0029901699209266435, "phrase": "minimum_cut"}, {"score": 0.002919287408226361, "phrase": "first_nontrivial_lower_bounds"}, {"score": 0.0028500803748621175, "phrase": "previous_open_questions"}, {"score": 0.002765867822046626, "phrase": "mst_subsumes"}, {"score": 0.0027246967293115343, "phrase": "previous_hardness"}, {"score": 0.0026841420295354054, "phrase": "elkin"}, {"score": 0.0026680819883265574, "phrase": "m._elkin"}, {"score": 0.0024604956700896873, "phrase": "peleg"}, {"score": 0.0024093494406195386, "phrase": "v._rubinovich"}, {"score": 0.0022419349154472806, "phrase": "distributed_approximation_algorithm"}, {"score": 0.002228560283775612, "phrase": "mst"}, {"score": 0.0021821915946356168, "phrase": "current_exact_algorithm"}, {"score": 0.00216263228969761, "phrase": "approximation_factor"}, {"score": 0.0021304214257321, "phrase": "interesting_connection"}, {"score": 0.0021176715289546798, "phrase": "communication_complexity"}, {"score": 0.0021049977753042253, "phrase": "distributed_computing"}], "paper_keywords": ["distributed algorithms", " graph optimization problems", " lower bounds", " hardness of approximation", " communication complexity"], "paper_abstract": "We study the verification problem in distributed networks, stated as follows. Let H be a subgraph of a network G where each vertex of G knows which edges incident on it are in H. We would like to verify whether H has some properties, e. g., if it is a tree or if it is connected (every node knows at the end of the process whether H has the specified property or not). We would like to perform this verification in a decentralized fashion via a distributed algorithm. The time complexity of verification is measured as the number of rounds of distributed communication. In this paper we initiate a systematic study of distributed verification and give almost tight lower bounds on the running time of distributed verification algorithms for many fundamental problems such as connectivity, spanning connected subgraph, and s-t cut verification. We then show applications of these results in deriving strong unconditional time lower bounds on the hardness of distributed approximation for many classical optimization problems including minimum spanning tree (MST), shortest paths, and minimum cut. Many of these results are the first nontrivial lower bounds for both exact and approximate distributed computation, and they resolve previous open questions. Moreover, our unconditional lower bound of approximating MST subsumes and improves upon the previous hardness of approximation bound of Elkin [M. Elkin, SIAM J. Comput., 36 (2006), pp. 433-456] as well as the lower bound for (exact) MST computation of Peleg and Rubinovich [D. Peleg and V. Rubinovich, SIAM J. Comput., 30 (2000), pp. 1427-1442]. Our result implies that there can be no distributed approximation algorithm for MST that is significantly faster than the current exact algorithm for any approximation factor. Our lower bound proofs show an interesting connection between communication complexity and distributed computing which turns out to be useful in establishing the time complexity of exact and approximate distributed computation of many problems.", "paper_title": "DISTRIBUTED VERIFICATION AND HARDNESS OF DISTRIBUTED APPROXIMATION", "paper_id": "WOS:000310582600007"}