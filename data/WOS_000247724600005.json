{"auto_keywords": [{"score": 0.03670597721111169, "phrase": "xquery"}, {"score": 0.01572013731910296, "phrase": "xml"}, {"score": 0.0047051051659828275, "phrase": "data_interoperability_standard"}, {"score": 0.004597754207658615, "phrase": "increasing_number"}, {"score": 0.004410629943506433, "phrase": "computer_scientists"}, {"score": 0.004270347498153512, "phrase": "strong_technical_back-ground"}, {"score": 0.0041154571996523505, "phrase": "xml_data"}, {"score": 0.00398452530840582, "phrase": "simple_queries"}, {"score": 0.003947884118204803, "phrase": "partial_awareness"}, {"score": 0.0038935506745975835, "phrase": "xml_data_model"}, {"score": 0.0035994372026264478, "phrase": "standard_query_language"}, {"score": 0.0034368818187904744, "phrase": "huge_expressive_power"}, {"score": 0.0032665093519968083, "phrase": "functional_languages"}, {"score": 0.0030617935728586006, "phrase": "well-designed_subsets"}, {"score": 0.0028566300478906916, "phrase": "six_layered_subsets"}, {"score": 0.002765636101369536, "phrase": "user_communities"}, {"score": 0.00274017282519193, "phrase": "increasing_needs"}, {"score": 0.002702415623060517, "phrase": "initial_layers"}, {"score": 0.0025565050791036973, "phrase": "visual_xml_query_language"}, {"score": 0.002418453525649304, "phrase": "first_layers"}, {"score": 0.0023091093387071593, "phrase": "full_language"}, {"score": 0.002225196379204285, "phrase": "simple_visual_interfaces"}], "paper_keywords": [""], "paper_abstract": "XML is becoming widespread as data interoperability standard in many application domains. An increasing number of researchers and professionals, who are not computer scientists (although they may have a strong technical back-ground), needs to query and transform XML data during their working activities. Such tasks typically require simple queries and partial awareness of the XML data model, in the context of a given, domain-specific XML-based protocol. The W3C community has proposed XQuery as the standard query language for XML [9]. XQuery has a huge expressive power - as it encompasses features belonging both to query and functional languages, but it may be considered as too complex for the above user profiles; well-designed subsets of XQuery are sufficient to satisfy their needs. In this paper, we propose six layered subsets of XQuery, targeted to cover user communities with increasing needs. The initial layers are based upon XQBE (XQuery By Example), a visual XML query language, strictly less expressive than XQuery. We argue that the first layers are easier to learn and to master than the full language, also thanks to the availability of simple visual interfaces, and that these layers cover most of the needs of many user communities.", "paper_title": "XQuery layers", "paper_id": "WOS:000247724600005"}