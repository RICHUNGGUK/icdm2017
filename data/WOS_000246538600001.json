{"auto_keywords": [{"score": 0.013749298469488028, "phrase": "standard_svd_algorithm"}, {"score": 0.00481495049065317, "phrase": "svd_based_image_compression_technique"}, {"score": 0.004610058444728656, "phrase": "preprocessing_step"}, {"score": 0.004521803560561489, "phrase": "input_image"}, {"score": 0.00393032656248792, "phrase": "postprocessing_step"}, {"score": 0.003855034057431947, "phrase": "inverse_permutation"}, {"score": 0.00376293585033711, "phrase": "standard_images"}, {"score": 0.0035852640843794252, "phrase": "standard_method"}, {"score": 0.0032389001343643064, "phrase": "bit_allocation_scheme"}, {"score": 0.002954361295811154, "phrase": "original_svd_algorithm"}, {"score": 0.0027741761880779535, "phrase": "karhunen-loeve_transform"}, {"score": 0.002592369213499121, "phrase": "whole_family"}, {"score": 0.0025181367444581993, "phrase": "different_parameter_values"}, {"score": 0.002469830206270585, "phrase": "klt."}, {"score": 0.0024342079318127423, "phrase": "heuristic_arguments"}, {"score": 0.002319127685733821, "phrase": "best_compression"}, {"score": 0.002230984431056064, "phrase": "experimental_evidence"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["image compression", " singular value decomposition", " Karhunen-Loeve transform", " matrix rank", " low resolution sample"], "paper_abstract": "We present a variation to the well studied SVD based image compression technique. Our variation can be viewed as a preprocessing step in which the input image is permuted as per a fixed, data independent permutation, after which it is fed to the standard SVD algorithm. Likewise, our decompression algorithm can be viewed as the standard SVD algorithm followed by a postprocessing step which applies the inverse permutation. On experimenting with standard images we show that our method performs substantially better than the standard method. Typically, for any given compression quality, our method needs about 30% fewer singular values and vectors to be retained. We also present a bit allocation scheme and show that our method also performs better than the more familiar discrete cosine transform (DCT). We show that the original SVD algorithm as well as our variation, can be viewed as instances of the Karhunen-Loeve transform (KLT). In fact, we observe that there is a whole family of variations possible by choosing different parameter values while applying the KLT. We present heuristic arguments to show that our variation is likely to yield the best compression of all these. We also present experimental evidence, which appears to justify our analysis. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "A variation on SVD based image compression", "paper_id": "WOS:000246538600001"}