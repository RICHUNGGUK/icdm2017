{"auto_keywords": [{"score": 0.04280136321445764, "phrase": "buchberger's_algorithm"}, {"score": 0.00481495049065317, "phrase": "inhomogeneous_grobner_bases"}, {"score": 0.004143196873246147, "phrase": "grobner_bases"}, {"score": 0.003663645143713398, "phrase": "homogeneous_polynomials"}, {"score": 0.003540539868937462, "phrase": "general_case"}, {"score": 0.0034450303951025704, "phrase": "input_data"}, {"score": 0.003239418275717787, "phrase": "main_tool"}, {"score": 0.0031305230217636495, "phrase": "self-saturating_buchberger's_algorithm"}, {"score": 0.002903628734069691, "phrase": "mathematical_foundation"}, {"score": 0.002805989498127897, "phrase": "sugar_trick"}, {"score": 0.002532284627202572, "phrase": "special_emphasis"}, {"score": 0.0023810183846557486, "phrase": "single_grading"}, {"score": 0.0022234951091677085, "phrase": "practical_merits"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Grobner bases", " Buchberger's Algorithm"], "paper_abstract": "In this paper we describe how an idea centered on the concept of self-saturation allows several improvements in the computation of Grobner bases via Buchberger's Algorithm. In a nutshell, the idea is to extend the advantages of computing with homogeneous polynomials or vectors to the general case. When the input data are not homogeneous, we use as a main tool the procedure of a self-saturating Buchberger's Algorithm. Another strictly related topic is treated later when a mathematical foundation is given to the sugar trick which is nowadays widely used in most of the implementations of Buchberger's Algorithm. A special emphasis is also given to the case of a single grading, and subsequently some timings and indicators showing the practical merits of our approach. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Computing inhomogeneous Grobner bases", "paper_id": "WOS:000288720500002"}