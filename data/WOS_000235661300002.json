{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "approximation_results"}, {"score": 0.049188612914091476, "phrase": "local_search_algorithms"}, {"score": 0.004383406949799696, "phrase": "main_results"}, {"score": 0.004182301599359094, "phrase": "worst_case_guarantees"}, {"score": 0.004028054020045027, "phrase": "classical_combinatorial_optimization_problems"}, {"score": 0.003369322866499541, "phrase": "maximum_independent_set"}, {"score": 0.003306559295382181, "phrase": "maximum_cut"}, {"score": 0.0031845067058084583, "phrase": "finally_several_scheduling_problems"}, {"score": 0.003095923814666088, "phrase": "replica_placement_problem"}, {"score": 0.0030097975788892896, "phrase": "distributed_file_systems"}, {"score": 0.002688532127821979, "phrase": "local_search_algorithm"}, {"score": 0.002613709503583786, "phrase": "distributed_environment"}, {"score": 0.0021049977753042253, "phrase": "often_sketch"}], "paper_keywords": [""], "paper_abstract": "In this chapter we review the main results known on local search algorithms with worst case guarantees. We consider classical combinatorial optimization problems: satisfiability problems, traveling salesman and quadratic assignment problems, set packing and set covering problems, maximum independent set, maximum cut, several facility location related problems and finally several scheduling problems. A replica placement problem in a distributed file systems is also considered as an example of the use of a local search algorithm in a distributed environment. For each problem we have provided the neighborhoods used along with approximation results. Proofs when too technical are omitted, but often sketch of proofs are provided.", "paper_title": "A survey of approximation results for local search algorithms", "paper_id": "WOS:000235661300002"}