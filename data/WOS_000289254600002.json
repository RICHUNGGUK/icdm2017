{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "test_code"}, {"score": 0.004745056850725867, "phrase": "open_source"}, {"score": 0.004676173016967478, "phrase": "industrial_developer_test_processes"}, {"score": 0.004442824994700736, "phrase": "rigorous_development_testing"}, {"score": 0.004378309349451268, "phrase": "functional_code_writing"}, {"score": 0.0041294419262414995, "phrase": "production_code"}, {"score": 0.0032671775301001483, "phrase": "software_project's_versioning_system"}, {"score": 0.0030587884803931964, "phrase": "test_coverage_reports"}, {"score": 0.002680932410366204, "phrase": "log_messages"}, {"score": 0.0026419338604879404, "phrase": "code_inspections"}, {"score": 0.002584494385587982, "phrase": "original_developers"}, {"score": 0.002528300562452668, "phrase": "software_system"}, {"score": 0.0023843376332011936, "phrase": "different_co-evolution_scenarios"}, {"score": 0.0022158306933307685, "phrase": "relevant_observations"}, {"score": 0.0021049977753042253, "phrase": "test_engineers"}], "paper_keywords": ["Software repository mining", " Software testing", " Co-evolution", " Software evolution", " Test coverage"], "paper_abstract": "Many software production processes advocate rigorous development testing alongside functional code writing, which implies that both test code and production code should co-evolve. To gain insight in the nature of this co-evolution, this paper proposes three views (realized by a tool called TeMo) that combine information from a software project's versioning system, the size of the various artifacts and the test coverage reports. We validate these views against two open source and one industrial software project and evaluate our results both with the help of log messages, code inspections and the original developers of the software system. With these views we could recognize different co-evolution scenarios (i.e., synchronous and phased) and make relevant observations for both developers as well as test engineers.", "paper_title": "Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining", "paper_id": "WOS:000289254600002"}