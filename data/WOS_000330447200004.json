{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "set_programming"}, {"score": 0.003697538418750941, "phrase": "security_scenarios"}, {"score": 0.003372844338742438, "phrase": "delegation-revocation_models"}, {"score": 0.0031121406603482112, "phrase": "pictorial_form"}, {"score": 0.0028715299874549245, "phrase": "reactive_kripke_models"}, {"score": 0.0027741761880779535, "phrase": "first-order_policy_specification_language"}, {"score": 0.002649472341607234, "phrase": "first-order_representations"}, {"score": 0.0025014259919355474, "phrase": "equivalent_answer_set_programming_form"}, {"score": 0.0023346234464901978, "phrase": "flexibly_well-defined_definitions"}, {"score": 0.0021049977753042253, "phrase": "delegation-revocation_policy_specification"}], "paper_keywords": ["Delegation", " security", " answer set programming", " Policies"], "paper_abstract": "In this article we show how to model a range of notions in the context of delegation and revocation applied to security scenarios. We demonstrate how a range of delegation-revocation models and policies may be represented in pictorial form and formally represented in terms of reactive Kripke models and a first-order policy specification language. We translate first-order representations of our reactive Kripke models into an equivalent Answer Set Programming form that enables users to apply flexibly well-defined definitions of predicates to represent their requirements in terms of delegation-revocation policy specification.", "paper_title": "Reasoning about delegation and revocation schemes in answer set programming", "paper_id": "WOS:000330447200004"}