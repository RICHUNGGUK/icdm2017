{"auto_keywords": [{"score": 0.0046079260641779755, "phrase": "dynamic_convex_hulls"}, {"score": 0.004567596860086148, "phrase": "center_dot_a_fully_dynamic_data_structure"}, {"score": 0.004448705308279165, "phrase": "n_points"}, {"score": 0.004201571673071299, "phrase": "convex_hull"}, {"score": 0.004146510711518748, "phrase": "query_line"}, {"score": 0.004092168350316413, "phrase": "expected_query"}, {"score": 0.004056334733843591, "phrase": "amortized_update_time"}, {"score": 0.00376409764683147, "phrase": "previous_bound"}, {"score": 0.003492840830999027, "phrase": "halfplane_range_reporting_queries"}, {"score": 0.003226834737003501, "phrase": "similar_result"}, {"score": 0.003101503914610488, "phrase": "query_time"}, {"score": 0.002903311792572216, "phrase": "semi-online_dynamic_data_structure"}, {"score": 0.0028151944356239952, "phrase": "line_segments"}, {"score": 0.002670296619878048, "phrase": "query_line_segment"}, {"score": 0.0026121403051734744, "phrase": "lower_envelope"}, {"score": 0.002258745901862197, "phrase": "triangulated_terrain"}, {"score": 0.0021049977753042253, "phrase": "fixed_viewpoint"}], "paper_keywords": ["Convex hull", " dynamic data structures", " halfspace range searching", " orthogonal range searching", " lower envelopes"], "paper_abstract": "We present three results related to dynamic convex hulls: center dot A fully dynamic data structure for maintaining a set of n points in the plane so that we can find the edges of the convex hull intersecting a query line, with expected query and amortized update time O(log(1+epsilon) n) for an arbitrarily small constant epsilon > 0. This improves the previous bound of O(log(3/2) n). center dot A fully dynamic data structure for maintaining a set of n points in the plane to support halfplane range reporting queries in O(log n + k) time with O(polylog n) expected amortized update time. A similar result holds for 3-dimensional orthogonal range reporting. For 3-dimensional halfspace range reporting, the query time increases to O(log(2) n/log log n + k). center dot A semi-online dynamic data structure for maintaining a set of n line segments in the plane, so that we can decide whether a query line segment lies completely above the lower envelope, with query time O(log n) and amortized update time O(n(epsilon)). As a corollary, we can solve the following problem in O(n(1+epsilon)) time: given a triangulated terrain in 3-d of size n, identify all faces that are partially visible from a fixed viewpoint.", "paper_title": "THREE PROBLEMS ABOUT DYNAMIC CONVEX HULLS", "paper_id": "WOS:000310385800005"}