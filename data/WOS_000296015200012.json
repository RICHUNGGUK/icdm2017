{"auto_keywords": [{"score": 0.026675654241393516, "phrase": "bisr_schemes"}, {"score": 0.00481495049065317, "phrase": "self-repair_planning_framework"}, {"score": 0.004686963264680882, "phrase": "built-in_self-repair"}, {"score": 0.004421156723819163, "phrase": "random_access_memories"}, {"score": 0.0037948184359488284, "phrase": "bisr_circuits"}, {"score": 0.003595552309967789, "phrase": "memory_bisr_planning"}, {"score": 0.003452988856081846, "phrase": "socs"}, {"score": 0.003406713877432236, "phrase": "mbip_framework"}, {"score": 0.0033459905006404207, "phrase": "memory_grouping_algorithm"}, {"score": 0.0032277611129050234, "phrase": "bisr_circuit"}, {"score": 0.0031559919178954644, "phrase": "test_scheduling_algorithm"}, {"score": 0.003071965703296204, "phrase": "test_sequence"}, {"score": 0.002936849401568391, "phrase": "test_power"}, {"score": 0.0028715299874549245, "phrase": "bisr_scheme_allocation_algorithm"}, {"score": 0.0028076592725295646, "phrase": "different_bisr_schemes"}, {"score": 0.0026720866990543744, "phrase": "memory_grouping"}, {"score": 0.0026481480455339055, "phrase": "test_scheduling"}, {"score": 0.002624423288947767, "phrase": "simulation_results"}, {"score": 0.002292965705677312, "phrase": "proposed_mbip_framework"}, {"score": 0.0021821915946356168, "phrase": "dedicated_bisr_scheme"}, {"score": 0.002133739354959467, "phrase": "ram"}, {"score": 0.0021049977753042253, "phrase": "self-contained_bisr_circuit"}], "paper_keywords": ["BISR allocation", " built-in self-repair", " built-in self-test", " RAMs", " system-on-chip (SoC)", " test scheduling"], "paper_abstract": "Built-in self-repair (BISR) techniques are widely used to enhance the yield of random access memories (RAMs) in a system-on-chip (SoC) which typically consists of hundreds of RAMs. Hence, many BISR circuits may be needed in a such SoC. Effective techniques for planning these BISR circuits thus are imperative. In this paper, we propose a memory BISR planning (MBiP) framework for the RAMs in SoCs. The MBiP framework consists of a memory grouping algorithm for selecting RAMs which can share a BISR circuit. Then, a test scheduling algorithm is used to determine the test sequence of RAMs in a SoC under the constraint of test power. Finally, a BISR scheme allocation algorithm is proposed to allocate different BISR schemes for the RAMs under the constraints of the results of memory grouping and test scheduling. Simulation results show that the proposed MBiP can effectively plan the BISR schemes for the RAMs in a SoC. For example, about 22% area reduction can be achieved by the BISR schemes planned by the proposed MBiP framework for 50 RAMs under 1.5 mm distance constraint and 350 mW test power constraint in comparison with a dedicated BISR scheme (i.e., each RAM has a self-contained BISR circuit).", "paper_title": "Memory Built-In Self-Repair Planning Framework for RAMs in SoCs", "paper_id": "WOS:000296015200012"}