{"auto_keywords": [{"score": 0.047244318311945976, "phrase": "vm_exits"}, {"score": 0.015719716506582538, "phrase": "dynamic_paravirtualization"}, {"score": 0.013932887685899214, "phrase": "vmm"}, {"score": 0.012019068707099812, "phrase": "guest_os"}, {"score": 0.0044692705329574, "phrase": "full_virtualization"}, {"score": 0.004409127897028587, "phrase": "hardware_support"}, {"score": 0.003956113993518042, "phrase": "hot_instructions"}, {"score": 0.0032279990773657215, "phrase": "memory_virtualization-dynamic_memory_paravirtualization"}, {"score": 0.003057503388220776, "phrase": "new_memory_management_mechanism"}, {"score": 0.0029355502535757696, "phrase": "user-mode_page_faults"}, {"score": 0.0026335379469691997, "phrase": "dynamic_memory_paravirtulization"}, {"score": 0.0025284526131378873, "phrase": "kvm"}, {"score": 0.002494361792853831, "phrase": "intel_vt._our_experimental_results"}, {"score": 0.0022836785412390544, "phrase": "page_faults"}, {"score": 0.002252880693912436, "phrase": "dynamic_memory_paravirtualization"}, {"score": 0.0021049977753042253, "phrase": "source_code"}], "paper_keywords": ["virtualization", " virtual machine monitor", " paravirtualization", " dynamic paravirtualization", " hot instructions", " VM exits", " code implantation"], "paper_abstract": "This paper introduces dynamic paravirtualization, which imitates paravirtualization and aims at reducing VM exits of full virtualization with hardware support. In dynamic paravirtualization, VMM (virtual machine monitor) dynamically monitors and replaces the hot instructions, which cause most VM exits. It is transparent to the guest OS such that the legacy OSes can benefit from this optimization. Our study focuses on reducing the overhead of memory virtualization-dynamic memory paravirtualization (DMP). We implant a new memory management mechanism in VMM such that all user-mode page faults can be handled by the guest OS directly without VM exits. We implement a prototype of dynamic memory paravirtulization based on a version of KVM using Intel VT. Our experimental results show that our technique essentially eliminates the overhead of VM exits caused by page faults. Dynamic memory paravirtualization can achieve the effectiveness of paravirtualization without changing the source code of guest OS.", "paper_title": "Dynamic memory paravirtualization transparent to guest OS", "paper_id": "WOS:000276490700006"}