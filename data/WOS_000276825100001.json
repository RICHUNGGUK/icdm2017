{"auto_keywords": [{"score": 0.043850409330067695, "phrase": "new_file"}, {"score": 0.043110602910156885, "phrase": "content-dependent_chunking"}, {"score": 0.036653305954379496, "phrase": "hash_values"}, {"score": 0.032038528066687826, "phrase": "previously_used_algorithms"}, {"score": 0.00481495049065317, "phrase": "differential_compression"}, {"score": 0.004368142221528535, "phrase": "remote_differential_compression"}, {"score": 0.004129873531628877, "phrase": "recipient's_old_file"}, {"score": 0.0039045506947164225, "phrase": "internal_features"}, {"score": 0.003724332291866564, "phrase": "different_locations"}, {"score": 0.003584025547693836, "phrase": "corresponding_locations"}, {"score": 0.003091767402370757, "phrase": "random_files"}, {"score": 0.002821044196775531, "phrase": "theoretical_comparisons"}, {"score": 0.0024842242921857705, "phrase": "entire_chunks"}, {"score": 0.0024333239726872604, "phrase": "new_criterion"}, {"score": 0.0023834640793589435, "phrase": "chunking_method"}, {"score": 0.0021363670305843403, "phrase": "local_maximum_chunking"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Networking", " Distributed file systems", " Compression", " Ergodic theory"], "paper_abstract": "When a file is to be transmitted from a sender to a recipient and when the latter already has a file somewhat similar to it, remote differential compression seeks to determine the similarities interactively so as to transmit only the part of the new file not already in the recipient's old file Content-dependent chunking means that the sender and recipient chop their files into chunks, with the cutpoints determined by some internal features of the files, so that when segments of the two files agree (possibly in different locations within the files) the cutpoints in such segments tend to be in corresponding locations, and so the chunks agree. By exchanging hash values of the chunks, the sender and recipient can determine which chunks of the new file are absent from the old one and thus need to be transmitted. We propose two new algorithms for content-dependent chunking, and we compare their behavior, on random files, with each other and with previously used algorithms One of our algorithms, the local maximum chunking method, has been implemented and found to work better in practice than previously used algorithms. Theoretical comparisons between the various algorithms can be based on several criteria, most of which seek to formalize the idea that chunks should be neither too small (so that hashing and sending hash values become inefficient) nor too large (so that agreements of entire chunks become unlikely) We propose a new criterion, called the slack of a chunking method, which seeks to measure how much of an interval of agreement between two files is wasted because it lies in chunks that don't agree Finally, we show how to efficiently find the cutpoints for local maximum chunking (C) 2009 Elsevier Inc. All rights reserved", "paper_title": "Content-dependent chunking for differential compression, the local maximum approach", "paper_id": "WOS:000276825100001"}