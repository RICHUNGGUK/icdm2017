{"auto_keywords": [{"score": 0.04622935334089915, "phrase": "adaptation_contracts"}, {"score": 0.00481495049065317, "phrase": "behavioral_adaptation_contracts"}, {"score": 0.0047035227618053965, "phrase": "crucial_issue"}, {"score": 0.004656557209439822, "phrase": "new_applications"}, {"score": 0.004610058444728656, "phrase": "existing_software_services"}, {"score": 0.004399102320426124, "phrase": "composition_constraints"}, {"score": 0.0043697607816770775, "phrase": "adaptation_requirements"}, {"score": 0.004155822339559211, "phrase": "difficult_and_error-prone_task"}, {"score": 0.0040324997782003455, "phrase": "service_interfaces"}, {"score": 0.0038350096441245153, "phrase": "contract_design_process"}, {"score": 0.003647156095687574, "phrase": "interface_compatibility_measure"}, {"score": 0.003562656752692045, "phrase": "port_connections"}, {"score": 0.0034684722988160637, "phrase": "compositional_and_hierarchical_techniques"}, {"score": 0.003168543855125077, "phrase": "involved_services"}, {"score": 0.0027341763737751467, "phrase": "final_result"}, {"score": 0.0026618355977665745, "phrase": "manual_specification"}, {"score": 0.002548331088496964, "phrase": "integrated_tool_support"}, {"score": 0.0024478477463201302, "phrase": "erroneous_executions"}, {"score": 0.002184101477091303, "phrase": "important_contribution"}, {"score": 0.0021477840826122853, "phrase": "behavioral_software_adaptation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal specification", " Software adaptation", " Software reusability", " Interaction protocol"], "paper_abstract": "Context: Adaptation is a crucial issue when building new applications by reusing existing software services which were not initially designed to interoperate with each other. Adaptation contracts describe composition constraints and adaptation requirements among these services. The writing of this specification by a designer is a difficult and error-prone task, especially when interaction protocols are considered in service interfaces. Objective: In this article, we propose a tool-based, interactive approach to support the contract design process. Method: Our approach includes: (i) a graphical notation to define port bindings, and an interface compatibility measure to compare protocols and suggest some port connections to the designer, (ii) compositional and hierarchical techniques to facilitate the specification of adaptation contracts by building them incrementally, (iii) validation and verification techniques to check that the contract will make the involved services work correctly and as expected by the designer. Results: Our results show a reduction both in the amount of effort that the designer has to put into building the contract, as well as in the number of errors present in the final result (noticeably higher in the case of manual specification). Conclusion: We conclude that it is important to provide integrated tool support for the specification and verification of adaptation contracts, since their incorrect specification induces erroneous executions of the system. To the best of our knowledge, such tool support has not been provided by any other approach so far, and hence we consider the techniques described in this paper as an important contribution to the area of behavioral software adaptation. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Interactive specification and verification of behavioral adaptation contracts", "paper_id": "WOS:000304387600004"}