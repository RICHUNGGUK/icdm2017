{"auto_keywords": [{"score": 0.04376229998556351, "phrase": "python"}, {"score": 0.020133012695129075, "phrase": "cython"}, {"score": 0.010612139112611189, "phrase": "openmm"}, {"score": 0.010563556861304267, "phrase": "mmtk."}, {"score": 0.007890192996765629, "phrase": "distributed_program"}, {"score": 0.007835924705416835, "phrase": "test_data"}, {"score": 0.00465112142785941, "phrase": "molecular_modelling_toolkit"}, {"score": 0.004513631630494221, "phrase": "fast_evaluation_techniques"}, {"score": 0.004451546786101008, "phrase": "mmtk_scripts"}, {"score": 0.004420823917028035, "phrase": "langevin_dynamics_integrator"}, {"score": 0.004380188224329844, "phrase": "classical_and_path_integral_simulations"}, {"score": 0.004270347498153512, "phrase": "graphical_processing_units"}, {"score": 0.004105964466912166, "phrase": "high_level_abstraction"}, {"score": 0.004068211098891734, "phrase": "mmtk_and_openmm_software_packages"}, {"score": 0.003884567795946283, "phrase": "acceleration_libraries"}, {"score": 0.003866663923338113, "phrase": "openmm._program_summary_program_title"}, {"score": 0.0038311024026032366, "phrase": "mmtk_catalogue_identifier"}, {"score": 0.003734979290204709, "phrase": "cpc_program_library"}, {"score": 0.0037177622939493084, "phrase": "queen's_university"}, {"score": 0.0037006245508577843, "phrase": "belfast"}, {"score": 0.003683565150278339, "phrase": "n._ireland"}, {"score": 0.0036496814103475174, "phrase": "standard_cpc"}, {"score": 0.0033661389946162555, "phrase": "tar.gz_programming_language"}, {"score": 0.003177154457204775, "phrase": "mbytes_classification"}, {"score": 0.0029849147334986424, "phrase": "mmtk_interface"}, {"score": 0.002971144970781373, "phrase": "mmtk_users"}, {"score": 0.0029574385411754948, "phrase": "full_performance"}, {"score": 0.002943795155119049, "phrase": "openmm_simulations"}, {"score": 0.0029032403822110194, "phrase": "mmtk._solution_method"}, {"score": 0.0027784560880013886, "phrase": "high_level"}, {"score": 0.0027656527016833264, "phrase": "api"}, {"score": 0.002683732044181976, "phrase": "required_information"}, {"score": 0.002652878591019016, "phrase": "mmtk_stores"}, {"score": 0.002640636493247601, "phrase": "relevant_information"}, {"score": 0.0025683581446365165, "phrase": "hardly_any_modifications"}, {"score": 0.0023851187337905412, "phrase": "integral_beads"}, {"score": 0.0023091093387071593, "phrase": "k._hinsen"}, {"score": 0.00229844995872581, "phrase": "j._comp"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Path integral molecular dynamics", " Graphical processing units"], "paper_abstract": "In this work, we provide an interface developed to link the Molecular Modelling toolkit (MMTK) with OpenMM in order to take advantage of the fast evaluation techniques of OpenMM. This interface allows MMTK scripts using the Langevin dynamics integrator, for both classical and path integral simulations, to be executed on a variety of hardware including graphical processing units via OpenMM. The interface has been developed using Python and Cython to take advantage of the high level abstraction thanks to the MMTK and OpenMM software packages. We have tested the interface on a number of systems to observe which systems benefit most from the acceleration libraries of OpenMM. Program summary Program title: OpenMM accelerated MMTK Catalogue identifier: AEVR_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEVR_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 1141 No. of bytes in distributed program, including test data, etc.: 101838 Distribution format: tar.gz Programming language: Python and Cython. Computer: Not computer specific. Operating system: Any. RAM: On the order of hundreds of MBytes Classification: 7.7. External routines: MMTK [1], OpenMM 6.1 [2] and their dependencies Nature of problem: The OpenMM accelerated MMTK interface provides MMTK users the full performance of OpenMM simulations while maintaining the flexibility of MMTK. Solution method: The interface has been developed in a combination of Python and Cython to take advantage of the high level Python API's of both OpenMM and MMTK. The interface provides OpenMM with the required information to perform simulations and MMTK stores the relevant information. Unusual features: Provides MMTK users a performance gain with hardly any modifications to their current scripts. Running time: Completely depends on system of interest. Running time is based on both the number of atoms in the simulation as well as the number of path integral beads used in simulation and ranges from a few seconds to months. References: [1] K. Hinsen, J. Comp. Chem. 21, 79, (2000). [2] P. Eastman et al., J. Chem. Theory Comput. 9, 461 (2013). (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "OpenMM accelerated MMTK", "paper_id": "WOS:000353083800019"}