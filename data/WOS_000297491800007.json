{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hardware_virtualization"}, {"score": 0.012099854420260684, "phrase": "linux"}, {"score": 0.0045262653692203815, "phrase": "hyper_monitor"}, {"score": 0.004183638135671596, "phrase": "high-privileged_and_transparent_execution_environment"}, {"score": 0.004044822781630218, "phrase": "operating_systems"}, {"score": 0.003888659470009222, "phrase": "self-transparency_technology"}, {"score": 0.003845154818609644, "phrase": "hypermonitor"}, {"score": 0.00378080526397273, "phrase": "unified_security_monitoring"}, {"score": 0.003738502710504415, "phrase": "multiple_operating_systems"}, {"score": 0.0036554393826800486, "phrase": "windows"}, {"score": 0.0034359094594153304, "phrase": "lightweight_monitor"}, {"score": 0.003303177222901723, "phrase": "guest_os_environments"}, {"score": 0.003247868216333148, "phrase": "negligible_overhead"}, {"score": 0.00319348234663792, "phrase": "protected_operating_systems"}, {"score": 0.003104849179057156, "phrase": "performance_experiment_result"}, {"score": 0.0029681091946289757, "phrase": "unmodified_operating_systems"}, {"score": 0.002853396755102163, "phrase": "windows_xp"}, {"score": 0.0026222551419772867, "phrase": "debugging_behavior"}, {"score": 0.00257831812581194, "phrase": "debug_events"}, {"score": 0.002535115422089855, "phrase": "higher_privilege_level"}, {"score": 0.0024926348205500715, "phrase": "conventional_kernel_space"}, {"score": 0.0023166075278110237, "phrase": "better_prediction"}, {"score": 0.0022906498741695094, "phrase": "experimental_results"}, {"score": 0.0022270182923887012, "phrase": "simulation_benchmark"}, {"score": 0.0021408862709571615, "phrase": "actual_results"}, {"score": 0.0021049977753042253, "phrase": "experimental_fitting_data"}], "paper_keywords": [""], "paper_abstract": "This paper presents the implementation and simulation benchmark of Hyper Monitor, a lightweight multi-platform monitor based on hardware virtualization which allows a high-privileged and transparent execution environment to monitor various behaviors in operating systems. Taking advantage of X86 hardware virtualization and self-transparency technology, HyperMonitor provides a unified security monitoring to multiple operating systems including Linux and Windows XP without any modification. Our design is to establish a lightweight monitor which resides completely outside of the guest OS environments with a negligible overhead to the protected Operating Systems. According to the performance experiment result, our approach can effectively monitor applications and unmodified Operating Systems by the cost of only 0.9% average overhead in Windows XP and 2.6% average overhead in Linux. Leveraging hardware virtualization, a tool based on HyperMonitor detects debugging behavior by intercepting debug events on a higher privilege level than the conventional kernel space. In order to study the trend of overhead and achieve a better prediction of experimental results, we use the simulation benchmark to compare the difference between the actual results and the experimental fitting data with the help of least squares model.", "paper_title": "HyperMonitor: a lightweight multi-platform monitor based on hardware virtualization", "paper_id": "WOS:000297491800007"}