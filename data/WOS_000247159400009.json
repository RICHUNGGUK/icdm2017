{"auto_keywords": [{"score": 0.025439225936393566, "phrase": "application_scenarios"}, {"score": 0.00481495049065317, "phrase": "long-lived_cooperative_transactions"}, {"score": 0.004784565134881178, "phrase": "active_dbms._active_database_management_systems"}, {"score": 0.0046797114400479135, "phrase": "different_application_domains"}, {"score": 0.004620825188916713, "phrase": "cooperative_and_long_duration_activity_management"}, {"score": 0.004533875923066433, "phrase": "performance_analysis"}, {"score": 0.0045052562941109734, "phrase": "long-lived_cooperative_transaction_processing"}, {"score": 0.004296264970612285, "phrase": "cooperative_and_long_durational_transactions"}, {"score": 0.004269138804116089, "phrase": "adbms._a_restricted_version"}, {"score": 0.004242183179689357, "phrase": "np-quadlock"}, {"score": 0.004019797503157808, "phrase": "queuing_model"}, {"score": 0.0038332390893263844, "phrase": "failure_recovery_model"}, {"score": 0.003725470458263889, "phrase": "transaction_processing_system"}, {"score": 0.0037019348293573675, "phrase": "long-lived_and_cooperative_transactions"}, {"score": 0.0036322130692776375, "phrase": "important_emerging_application_scenarios"}, {"score": 0.0035864603175592854, "phrase": "proposed_cooperative_complex_transaction_mechanism"}, {"score": 0.0033875770020590796, "phrase": "intelligent_network_environment"}, {"score": 0.0032302647179383915, "phrase": "important_objective"}, {"score": 0.0030900173244612075, "phrase": "partial_abort"}, {"score": 0.002782989122345306, "phrase": "cooperation_semantics"}, {"score": 0.002662109089955643, "phrase": "partial_abort_rate"}, {"score": 0.0026452734009203764, "phrase": "cooperation_rate"}, {"score": 0.002522344964242888, "phrase": "performance_metrics"}, {"score": 0.0024984517279573906, "phrase": "average_service_time"}, {"score": 0.0024826484631019167, "phrase": "average_saga_length"}, {"score": 0.002359759876402679, "phrase": "important_simulation_parameters"}, {"score": 0.0023226161707785064, "phrase": "application_performance"}, {"score": 0.0022572213326336374, "phrase": "required_performance_parameters"}, {"score": 0.0021797840569206697, "phrase": "corresponding_performance_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["active database", " concurrency control", " object oriented systems", " performance analysis", " queuing model"], "paper_abstract": "Active database management systems (ADBMS) are used in different application domains and especially for cooperative and long duration activity management. This paper deals with performance analysis of long-lived cooperative transaction processing in an ADBMS. We first briefly discuss NP-QuadLock - a concurrency control scheme for cooperative and long durational transactions in ADBMS. A restricted version of NP-QuadLock named 2L-QuadLock has been used for simulation. We have modeled such an ADBMS supporting 2L-QuadLock scheme by a queuing model. The failure of the transactions running in such systems has been modeled by a failure recovery model. We have simulated this model for a transaction processing system serving long-lived and cooperative transactions. We also discuss some important emerging application scenarios, where the proposed cooperative complex transaction mechanism can be used (e.g. 3G-service environment, ubiquitous computing environment, feature composition in intelligent network environment, multi-site and multi-domain web-services). An important objective of our work is to analyze quantitatively (a) the performance penalty on the system due to the partial abort, the number of locks held by a transaction, the number of states of the transactions, and (b) the gain in the performance of the system with the cooperation semantics proposed in 2L-QuadLock concurrency control mechanism. We have analyzed the effect of various parameters such as partial abort rate, cooperation rate, number of locks held by a transaction, multiprogramming level, on the performance metrics such as average service time, average saga length and the degree of compensation. Later, we characterize the application scenarios based on some important simulation parameters, and discuss the application performance needs for each of the application scenarios. The required performance parameters that need to be used for these application scenarios and the corresponding performance results using 2L-QuadLock are also discussed. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Performance analysis of long-lived cooperative transactions in active DBMS", "paper_id": "WOS:000247159400009"}