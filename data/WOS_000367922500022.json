{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "kernel_rootkits"}, {"score": 0.04926219622874721, "phrase": "secure_paging_mechanism"}, {"score": 0.03995817324695403, "phrase": "page_mapping_attack"}, {"score": 0.03345207366592562, "phrase": "critical_kernel_data"}, {"score": 0.027507999683207576, "phrase": "moskg"}, {"score": 0.004652016085325825, "phrase": "kernel-level_rootkits"}, {"score": 0.00452043800760441, "phrase": "operating_systems"}, {"score": 0.004417848254181138, "phrase": "current_research_studies"}, {"score": 0.004243862930012258, "phrase": "key_tool"}, {"score": 0.004123781267600542, "phrase": "virtualization-based_memory_protection"}, {"score": 0.003961330917648707, "phrase": "memory_protection_mechanism"}, {"score": 0.003634371940842838, "phrase": "dynamic_data"}, {"score": 0.003353521531649663, "phrase": "external_and_transparent_architecture"}, {"score": 0.0033152062780180073, "phrase": "multiple_operating_systems_kernel_guard"}, {"score": 0.003130077012135034, "phrase": "different_operating_systems"}, {"score": 0.003094530933804195, "phrase": "windows"}, {"score": 0.003059013229816688, "phrase": "linux"}, {"score": 0.0025158514649823724, "phrase": "dynamic_kernel_object_manipulation"}, {"score": 0.002375253757224999, "phrase": "kernel-level_attacks"}, {"score": 0.002294686545883412, "phrase": "significant_conclusion"}, {"score": 0.0022168460543913787, "phrase": "small_performance_overhead"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["virtualization", " memory protection", " kernel integrity", " rootkit", " kernel-level attacks"], "paper_abstract": "The kernel-level rootkits compromise the security of operating systems. In the current research studies, virtualization is used as a key tool against these attacks with virtualization-based memory protection. There are glitches in the memory protection mechanism, and it is vulnerable to page mapping attack and hard to be used for protecting dynamic data. To address these problems, we proposed a secure paging mechanism and constructed an external and transparent architecture named multiple operating systems kernel guard (MOSKG), which can protect critical kernel data in different operating systems like Windows and Linux, both of 32-bit and 64-bit. To evaluate our proposed architecture, we applied some experiments that are based on the study of kernel rootkits. The results show that MOSKG can protect critical kernel data from dynamic kernel object manipulation and page mapping attack, and it defeats all of the kernel-level attacks. It is also a significant conclusion that MOSKG only introduces a small performance overhead of 2.3%. Copyright (C) 2015 John Wiley & Sons, Ltd.", "paper_title": "MOSKG: countering kernel rootkits with a secure paging mechanism", "paper_id": "WOS:000367922500022"}