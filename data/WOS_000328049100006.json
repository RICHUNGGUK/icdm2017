{"auto_keywords": [{"score": 0.032413817620678256, "phrase": "nt_method"}, {"score": 0.022913834968386098, "phrase": "tr"}, {"score": 0.00481495049065317, "phrase": "type_reduction"}, {"score": 0.004161553532799662, "phrase": "iterative_nature"}, {"score": 0.003936560022538909, "phrase": "computational_bottleneck"}, {"score": 0.003855347387268162, "phrase": "real-time_applications"}, {"score": 0.0035468507553681034, "phrase": "bypass_tr"}, {"score": 0.0033549790559972053, "phrase": "nie-tan_direct_defuzzification_method"}, {"score": 0.003129623571496151, "phrase": "theoretical_analyses"}, {"score": 0.00266693888510356, "phrase": "direct_relationship"}, {"score": 0.0025225467103906314, "phrase": "km_algorithms"}, {"score": 0.0023529740798601015, "phrase": "improved_nt_method"}, {"score": 0.002320449502337321, "phrase": "numerical_examples"}], "paper_keywords": ["Defuzzification", " interval type-2 fuzzy set (IT2 FS)", " Karnik-Mendel (KM) algorithms", " Nie-Tan (NT) method", " type reduction (TR)"], "paper_abstract": "Type reduction (TR) followed by defuzzification is commonly used in interval type-2 fuzzy logic systems (IT2 FLSs). Because of the iterative nature of TR, it may be a computational bottleneck for the real-time applications of an IT2 FLS. This has led to many direct approaches to defuzzification that bypass TR, the simplest of which is the Nie-Tan direct defuzzification method (NT method). This paper provides some theoretical analyses of the NT method that answer the question \"Why is the NT method good to use?\" This paper also provides a direct relationship between TR followed by defuzzification (using KM algorithms) and the NT method. It also provides an improved NT method. Numerical examples illustrate our theoretical results and suggest that the NT method is a very good way to simplify an interval type-2 fuzzy set.", "paper_title": "Simplified Interval Type-2 Fuzzy Logic Systems", "paper_id": "WOS:000328049100006"}