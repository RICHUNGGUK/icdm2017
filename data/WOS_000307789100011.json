{"auto_keywords": [{"score": 0.03335306997705366, "phrase": "circulate"}, {"score": 0.00481495049065317, "phrase": "data_transfer"}, {"score": 0.0047588556219929756, "phrase": "service-oriented_architectures"}, {"score": 0.004358368398332723, "phrase": "workflows_increases"}, {"score": 0.004307569753106432, "phrase": "centralized_orchestration_techniques"}, {"score": 0.0040385352882334235, "phrase": "web_services"}, {"score": 0.003991449490087454, "phrase": "third-party_data_transfer"}, {"score": 0.0039218440805789965, "phrase": "standard_orchestration_model"}, {"score": 0.003742084495435749, "phrase": "centralized_engine"}, {"score": 0.003633927813203731, "phrase": "unnecessary_data_transfer"}, {"score": 0.0029592333031063156, "phrase": "orchestration_model"}, {"score": 0.002924694271730544, "phrase": "central_control"}, {"score": 0.00284009509859163, "phrase": "choreography_model"}, {"score": 0.0028069426877159664, "phrase": "optimized_distributed_data_transport"}, {"score": 0.0027741761880779535, "phrase": "extensive_performance_analysis"}, {"score": 0.002725740264152553, "phrase": "planetlab_framework"}, {"score": 0.002646880721119838, "phrase": "web_service-based_implementation"}, {"score": 0.002570296816631395, "phrase": "internet-scale_configurations"}, {"score": 0.0025254115243261875, "phrase": "scientific_workflow_environments"}, {"score": 0.00249592321829865, "phrase": "performance_analysis"}, {"score": 0.002353554841514325, "phrase": "execution_time"}, {"score": 0.002272053079580848, "phrase": "standard_orchestration"}, {"score": 0.002193367454830741, "phrase": "node_size"}, {"score": 0.0021049977753042253, "phrase": "less-intrusive_solution"}], "paper_keywords": ["Service-oriented architecture", " orchestration", " choreography", " workflow optimization"], "paper_abstract": "As the number of services and the size of data involved in workflows increases, centralized orchestration techniques are reaching the limits of scalability. When relying on web services without third-party data transfer, a standard orchestration model needs to pass all data through a centralized engine, which results in unnecessary data transfer and the engine to become a bottleneck to the execution of a workflow. As a solution, this paper presents and evaluates Circulate, an alternative service-oriented architecture which facilitates an orchestration model of central control in combination with a choreography model of optimized distributed data transport. Extensive performance analysis through the PlanetLab framework is conducted on a web service-based implementation over a range of Internet-scale configurations which mirror scientific workflow environments. Performance analysis concludes that our architecture's optimized model of data transport speeds up the execution time of workflows, consistently outperforms standard orchestration and scales with data and node size. Furthermore, Circulate is a less-intrusive solution as individual services do not have to be reconfigured in order to take part in a workflow.", "paper_title": "Reducing Data Transfer in Service-Oriented Architectures: The Circulate Approach", "paper_id": "WOS:000307789100011"}