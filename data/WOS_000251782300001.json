{"auto_keywords": [{"score": 0.039493331760101835, "phrase": "non-monotonic_reasoning"}, {"score": 0.00481495049065317, "phrase": "possibilistic_logic"}, {"score": 0.004767594875327949, "phrase": "ilp"}, {"score": 0.004492717291734985, "phrase": "new_formalization"}, {"score": 0.00442651096522781, "phrase": "inductive_logic_programming"}, {"score": 0.00427578268550103, "phrase": "better_handling"}, {"score": 0.004089475312474684, "phrase": "first-order_possibilistic_logic"}, {"score": 0.0038727120021750973, "phrase": "prioritized_rules"}, {"score": 0.0036673959568781734, "phrase": "classical_first-order_logic"}, {"score": 0.0034901729647741353, "phrase": "hypothesis_accumulate"}, {"score": 0.0032724821705972357, "phrase": "right_one"}, {"score": 0.0031609252620168446, "phrase": "possibilistic_formalization"}, {"score": 0.003114283314285167, "phrase": "sound_encoding"}, {"score": 0.0026973310437053573, "phrase": "first-order_decision_lists"}, {"score": 0.002618278365749875, "phrase": "possibilistic_logic_view"}, {"score": 0.0025924443774713473, "phrase": "ilp_problem"}, {"score": 0.0025415366388578465, "phrase": "optimization_problem"}, {"score": 0.002504011301105577, "phrase": "algorithmic_level"}, {"score": 0.0024306105794630246, "phrase": "simulated_annealing"}, {"score": 0.0022452005651385095, "phrase": "reported_experiments"}, {"score": 0.002157857111130435, "phrase": "standard_ilp_approaches"}, {"score": 0.0021365562685368767, "phrase": "benchmark_examples"}], "paper_keywords": ["inductive logic programming", " non-monotonic reasoning", " possibilistic logic"], "paper_abstract": "In this paper we propose a new formalization of the inductive logic programming (ILP) problem for a better handling of exceptions. It is now encoded in first-order possibilistic logic. This allows us to handle exceptions by means of prioritized rules, thus taking lessons from non-monotonic reasoning. Indeed, in classical first-order logic, the exceptions of the rules that constitute a hypothesis accumulate and classifying an example in two different classes, even if one is the right one, is not correct. The possibilistic formalization provides a sound encoding of non-monotonic reasoning that copes with rules with exceptions and prevents an example to be classified in more than one class. The benefits of our approach with respect to the use of first-order decision lists are pointed out. The possibilistic logic view of ILP problem leads to an optimization problem at the algorithmic level. An algorithm based on simulated annealing that in one turn computes the set of rules together with their priority levels is proposed. The reported experiments show that the algorithm is competitive to standard ILP approaches on benchmark examples. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Introducing possibilistic logic in ILP for dealing with exceptions", "paper_id": "WOS:000251782300001"}