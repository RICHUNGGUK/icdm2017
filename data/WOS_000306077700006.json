{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "emerging_parallel_architectures"}, {"score": 0.004719664411221952, "phrase": "image_texture"}, {"score": 0.0045346863560033175, "phrase": "pattern_recognition"}, {"score": 0.004474645041899596, "phrase": "image_analysis_algorithms"}, {"score": 0.004415395176043526, "phrase": "textural_features"}, {"score": 0.004186105377259855, "phrase": "standard_cpus"}, {"score": 0.004021954624114115, "phrase": "novel_implementations"}, {"score": 0.003968675046544738, "phrase": "textural_feature_algorithms"}, {"score": 0.003916098498242888, "phrase": "graphics_processors"}, {"score": 0.0037624955853577786, "phrase": "fast_color"}, {"score": 0.003614895644619489, "phrase": "different_textural_feature_calculations"}, {"score": 0.003543273649210823, "phrase": "diverse_characteristics"}, {"score": 0.003404244237372396, "phrase": "general_and_algorithm-specific_techniques"}, {"score": 0.0032489004068215407, "phrase": "computational_power"}, {"score": 0.0031845067058084613, "phrase": "gpu._common_operations"}, {"score": 0.0031006232333900055, "phrase": "textural_feature_pipeline_range"}, {"score": 0.0029988599391845517, "phrase": "recursive_procedures"}, {"score": 0.0029394074636168435, "phrase": "arithmetically_intensive_transcendental_functions"}, {"score": 0.0025892330566358503, "phrase": "considerable_programming_effort"}, {"score": 0.0025042115651986332, "phrase": "memory_hierarchy"}, {"score": 0.002265497060260791, "phrase": "counterpart_implementations"}, {"score": 0.002235433376874495, "phrase": "multicore_cpus"}, {"score": 0.0021910825909008946, "phrase": "experimental_results"}, {"score": 0.0021620042653528846, "phrase": "gpu_results"}], "paper_keywords": ["CUDA", " emerging architectures", " graphics processors (GPUs)", " high-performance computing", " texture analysis"], "paper_abstract": "While image texture is effective for use in pattern recognition and image analysis algorithms, textural features are time-consuming to calculate on standard CPUs. Therefore, we present novel implementations of textural feature algorithms on graphics processors (GPUs), enabling fast color and texture analysis. Since different textural feature calculations can exhibit diverse characteristics, we focus on using general and algorithm-specific techniques to exploit the inherent parallelism and computational power of a GPU. Common operations required during the textural feature pipeline range from streaming computations to recursive procedures, from arithmetically intensive transcendental functions to matrix operations. Some of these kernels are well-suited to GPUs, while others require considerable programming effort to fully exploit the memory hierarchy due to their memory usage patterns. In this paper, different strategies for computing textural features on GPUs are compared with counterpart implementations on multicore CPUs, and experimental results show GPU results reaching 500x speedup for certain operations.", "paper_title": "Color and texture analysis on emerging parallel architectures", "paper_id": "WOS:000306077700006"}