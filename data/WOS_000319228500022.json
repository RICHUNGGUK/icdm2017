{"auto_keywords": [{"score": 0.04852232688729349, "phrase": "sparse_linear_prediction"}, {"score": 0.00481495049065317, "phrase": "sequential_error_concealment"}, {"score": 0.004324521292490181, "phrase": "novel_sequential_error_concealment_algorithm"}, {"score": 0.004014452814186653, "phrase": "block-based_coding_schemes"}, {"score": 0.0035755653799043, "phrase": "linear_prediction"}, {"score": 0.0034879261743468574, "phrase": "missing_macroblocks"}, {"score": 0.0033190180867511605, "phrase": "available_groups"}, {"score": 0.0031845067058084583, "phrase": "optimal_predictor_coefficients"}, {"score": 0.003030247482854539, "phrase": "missing_data_regression_imputation_procedure"}, {"score": 0.0028127163745564777, "phrase": "efficient_procedure"}, {"score": 0.0025892330566358503, "phrase": "exponential_approximation"}, {"score": 0.0024232694434408093, "phrase": "high-quality_reconstructions"}, {"score": 0.0021401944229203942, "phrase": "psnr"}, {"score": 0.0021049977753042253, "phrase": "ms-ssim."}], "paper_keywords": ["Block-coded images/video", " convex optimization", " error concealment", " missing data imputation", " sparse representation"], "paper_abstract": "In this paper, we propose a novel sequential error concealment algorithm for video and images based on sparse linear prediction. Block-based coding schemes in packet loss environments are considered. Images are modelled by means of linear prediction, and missing macroblocks are sequentially reconstructed using the available groups of pixels. The optimal predictor coefficients are computed by applying a missing data regression imputation procedure with a sparsity constraint. Moreover, an efficient procedure for the computation of these coefficients based on an exponential approximation is also proposed. Both techniques provide high-quality reconstructions and outperform the state-of-the-art algorithms both in terms of PSNR and MS-SSIM.", "paper_title": "Sequential Error Concealment for Video/Images by Sparse Linear Prediction", "paper_id": "WOS:000319228500022"}