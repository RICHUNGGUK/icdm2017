{"auto_keywords": [{"score": 0.03622235333920447, "phrase": "ihrb_algorithm"}, {"score": 0.00481495049065317, "phrase": "non-binary_ldpc_codes"}, {"score": 0.004356741449157895, "phrase": "better_error-correcting_performance"}, {"score": 0.004155113657645735, "phrase": "higher_decoding_complexity"}, {"score": 0.004089991141220082, "phrase": "codeword_length"}, {"score": 0.00398370478688858, "phrase": "recently_developed_iterative_reliability-based_majority-logic"}, {"score": 0.0038597866217852353, "phrase": "better_performance-complexity_tradeoffs"}, {"score": 0.0036810726176482278, "phrase": "enhancement_schemes"}, {"score": 0.003623352647973122, "phrase": "iterative_hard_reliability-based_majority-logic_decoding"}, {"score": 0.0032609360162842767, "phrase": "significant_coding_gain"}, {"score": 0.003226744277130179, "phrase": "small_hardware_overhead"}, {"score": 0.0031594291695784286, "phrase": "partial-parallel_nb-ldpc_decoder_architectures"}, {"score": 0.0029657683623403085, "phrase": "quasi-cyclic_or_cyclic_codes"}, {"score": 0.002769304577201566, "phrase": "novel_schemes"}, {"score": 0.0026830601040919166, "phrase": "small_proportion"}, {"score": 0.0025722202862084186, "phrase": "memory_requirement"}, {"score": 0.0025318431634446426, "phrase": "noticeable_performance_loss"}, {"score": 0.0024529757621396717, "phrase": "shift-message_structure"}, {"score": 0.0023516185395256505, "phrase": "variable_node_units"}, {"score": 0.0023146962503449186, "phrase": "efficient_partial-parallel_decoding"}, {"score": 0.0022904032758108775, "phrase": "cyclic_nb-ldpc_codes"}, {"score": 0.002242577809454225, "phrase": "previous_designs"}, {"score": 0.0021957487795963666, "phrase": "min-max_decoding_algorithm"}, {"score": 0.0021049977753042253, "phrase": "moderate_coding_gain_loss"}], "paper_keywords": ["Iterative majority-logic decoding", " low-density parity-check (LDPC) codes", " non-binary", " partial-parallel", " VLSI"], "paper_abstract": "Non-binary low-density parity-check (NB-LDPC) codes can achieve better error-correcting performance than their binary counterparts at the cost of higher decoding complexity when the codeword length is moderate. The recently developed iterative reliability-based majority-logic NB-LDPC decoding has better performance-complexity tradeoffs than previous algorithms. This paper first proposes enhancement schemes to the iterative hard reliability-based majority-logic decoding (IHRB-MLGD). Compared to the IHRB algorithm, our enhanced (E-) IHRB algorithm can achieve significant coding gain with small hardware overhead. Then low-complexity partial-parallel NB-LDPC decoder architectures are developed based on these two algorithms. Many existing NB-LDPC code construction methods lead to quasi-cyclic or cyclic codes. Both types of codes are considered in our design. Moreover, novel schemes are developed to keep a small proportion of messages in order to reduce the memory requirement without causing noticeable performance loss. In addition, a shift-message structure is proposed by using memories concatenated with variable node units to enable efficient partial-parallel decoding for cyclic NB-LDPC codes. Compared to previous designs based on the Min-max decoding algorithm, our proposed decoders have at least tens of times lower complexity with moderate coding gain loss.", "paper_title": "Low-Complexity Reliability-Based Message-Passing Decoder Architectures for Non-Binary LDPC Codes", "paper_id": "WOS:000307125500002"}