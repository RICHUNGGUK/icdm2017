{"auto_keywords": [{"score": 0.03906597166738946, "phrase": "joint_completeness"}, {"score": 0.00481495049065317, "phrase": "relational_simulations"}, {"score": 0.00471228691115201, "phrase": "blocking_paradigm"}, {"score": 0.00441718685609235, "phrase": "formal_specifications"}, {"score": 0.004230749292148046, "phrase": "relational_formalism"}, {"score": 0.004140490129683107, "phrase": "upward_simulations"}, {"score": 0.004052148727852149, "phrase": "standard_method"}, {"score": 0.003509317669345521, "phrase": "total_relational_specifications"}, {"score": 0.003313053707792957, "phrase": "partial_relational_specifications"}, {"score": 0.0029740732099993706, "phrase": "blocking_interpretation"}, {"score": 0.002747676657869163, "phrase": "earlier_claims"}, {"score": 0.0024311408243588043, "phrase": "reeves"}, {"score": 0.002396371892825691, "phrase": "streader"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Relational refinement", " Downward and upward simulations", " Joint completeness", " Failures refinement"], "paper_abstract": "Refinement is the notion of development between formal specifications For specifications given in a relational formalism downward and upward simulations are the standard method to verify that a refinement holds their usefulness based upon their soundness and joint completeness This is known to be true for total relational specifications and has been claimed to hold for partial relational specifications in both the non-blocking and blocking interpretations In this paper we show that downward and upward simulations in the blocking interpretation where domains are guards are not Jointly complete This contradicts earlier claims in the literature We illustrate this with an example (based on one recently constructed by Reeves and Streader) and then construct a proof to show why Joint completeness fails in general (C) 2010 Elsevier B V All rights reserved", "paper_title": "Incompleteness of relational simulations in the blocking paradigm", "paper_id": "WOS:000284433700004"}