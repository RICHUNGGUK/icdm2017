{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "clp"}, {"score": 0.041017797353692986, "phrase": "uncertain_truth_values"}, {"score": 0.031227647393894813, "phrase": "new_scheme"}, {"score": 0.031042192543922847, "phrase": "sqclp"}, {"score": 0.00458488025289647, "phrase": "logic_programming"}, {"score": 0.004260134699483774, "phrase": "classical_lp_paradigm"}, {"score": 0.004208282550386197, "phrase": "different_applications"}, {"score": 0.004157058883925715, "phrase": "existing_proposals"}, {"score": 0.004081385289516914, "phrase": "different_approaches"}, {"score": 0.003982617095636925, "phrase": "clause_annotations"}, {"score": 0.0035887342563437935, "phrase": "proximity_relations"}, {"score": 0.003438058620195309, "phrase": "clp_scheme"}, {"score": 0.0033139366449568565, "phrase": "powerful_extension"}, {"score": 0.0032737984243760344, "phrase": "lp"}, {"score": 0.003213920601037463, "phrase": "efficient_computation"}, {"score": 0.0031747618267940155, "phrase": "specialized_domains"}, {"score": 0.003097865379563127, "phrase": "clean_declarative_semantics"}, {"score": 0.0027741761880779535, "phrase": "qualification_values"}, {"score": 0.0025615908073796027, "phrase": "particular_cases"}, {"score": 0.002453934333239467, "phrase": "partial_instantiation"}, {"score": 0.0023798115577749225, "phrase": "declarative_semantics"}, {"score": 0.002197379785587054, "phrase": "-theoretical_characterizations"}, {"score": 0.0021705796895687864, "phrase": "least_program_models"}, {"score": 0.0021049977753042253, "phrase": "implementation-independent_notion"}], "paper_keywords": ["constraint logic programming", " qualification domains and values", " proximity relations"], "paper_abstract": "Uncertainty in Logic Programming has been investigated during the last decades, dealing with various extensions of the classical LP paradigm and different applications. Existing proposals rely on different approaches, such as clause annotations based on uncertain truth values, qualification values as a generalization of uncertain truth values, and unification based on proximity relations. On the other hand, the CLP scheme has established itself as a powerful extension of LP that supports efficient computation over specialized domains while keeping a clean declarative semantics. In this paper we propose a new scheme SQCLP designed as an extension of CLP that supports qualification values and proximity relations. We show that several previous proposals can be viewed as particular cases of the new scheme, obtained by partial instantiation. We present a declarative semantics for SQCLP that is based on observables, providing fixpoint and proof-theoretical characterizations of least program models as well as an implementation-independent notion of goal solutions.", "paper_title": "A declarative semantics for CLP with qualification and proximity", "paper_id": "WOS:000280508200018"}