{"auto_keywords": [{"score": 0.04285669060575222, "phrase": "regression_testing"}, {"score": 0.004815902043982195, "phrase": "delta"}, {"score": 0.004602395776895036, "phrase": "model-driven_regression_testing"}, {"score": 0.00441909542037375, "phrase": "technological_changes"}, {"score": 0.0043793594257092805, "phrase": "modern_software_development"}, {"score": 0.004243064277617193, "phrase": "systematic_methods"}, {"score": 0.004167086373747367, "phrase": "abstraction_level"}, {"score": 0.004129607015893271, "phrase": "system_maintenance"}, {"score": 0.004055652445791872, "phrase": "model-driven_development"}, {"score": 0.004019179360319039, "phrase": "mdd"}, {"score": 0.00391167729353583, "phrase": "extra_coding_efforts"}, {"score": 0.0038764861784138117, "phrase": "software_maintenance_activities"}, {"score": 0.003841610436545169, "phrase": "traceable_change_management"}, {"score": 0.003671865026158296, "phrase": "z-notation-based_framework"}, {"score": 0.0034623203126093833, "phrase": "formal_modeling"}, {"score": 0.003354469747882563, "phrase": "mdd."}, {"score": 0.0032061793819537633, "phrase": "software_specification"}, {"score": 0.0031773149810690494, "phrase": "testing_artifacts"}, {"score": 0.0030783143919343972, "phrase": "system_evolution"}, {"score": 0.0030094882299407256, "phrase": "effective_delta-based_selection_technique"}, {"score": 0.0029025435402480326, "phrase": "platform-independent_level"}, {"score": 0.0027741761880779535, "phrase": "new_category"}, {"score": 0.0027491902732542013, "phrase": "coverage_patterns"}, {"score": 0.002724428781940696, "phrase": "dbrt._complex_coverage_patterns"}, {"score": 0.0026514708899935333, "phrase": "declarative_query_language_syntax"}, {"score": 0.002522738549524317, "phrase": "implementation_technique"}, {"score": 0.002488724764295623, "phrase": "analysis_plan"}, {"score": 0.002389403849342894, "phrase": "proposed_framework"}, {"score": 0.0023571835517819124, "phrase": "assessment_process"}, {"score": 0.002252881029381693, "phrase": "dbrt"}, {"score": 0.0021727640931660038, "phrase": "available_testing_resources"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["consistency", " coverage criteria", " delta model", " model-driven development", " model transformation", " regression testing", " test case selection"], "paper_abstract": "The increase in complexity and rate of technological changes in modern software development has led to a demand for systematic methods that raise the abstraction level for system maintenance and regression testing. Model-driven development (MDD) has promised to reduce extra coding efforts in software maintenance activities using traceable change management. The research described in this paper presents a Z-notation-based framework, called delta-based regression testing (DbRT), for formal modeling of regression testing in the context of MDD. The framework proposes to propagate the changes from a software specification to testing artifacts in order to preserve consistency after system evolution. Also, an effective delta-based selection technique is provided for regression testing at the platform-independent level. The framework is further enriched by introducing a new category of coverage patterns for DbRT. Complex coverage patterns can be defined using a declarative query language syntax for examining the adequacy of regression testing. Finally, an implementation technique and an analysis plan are provided to assess the effectiveness of the proposed framework. The assessment process is expected to be beneficial to both the platform-independent and platform-specific level of DbRT by identifying the desired coverage according to available testing resources. Copyright (C) 2015 John Wiley & Sons, Ltd.", "paper_title": "Delta-based regression testing: a formal framework towards model-driven regression testing", "paper_id": "WOS:000368551300001"}