{"auto_keywords": [{"score": 0.046534781659711734, "phrase": "tree_inclusion_problem"}, {"score": 0.04157290003274097, "phrase": "xml_databases"}, {"score": 0.00481495049065317, "phrase": "linear_space"}, {"score": 0.004167086373747367, "phrase": "t._this"}, {"score": 0.004019171295196278, "phrase": "important_query"}, {"score": 0.003929392583340867, "phrase": "kilpelainen"}, {"score": 0.0037898820206470085, "phrase": "first_polynomial-time_algorithm"}, {"score": 0.003557509959237602, "phrase": "special_cases"}, {"score": 0.0034467039994594065, "phrase": "small_number"}, {"score": 0.00338493754743055, "phrase": "small_depth"}, {"score": 0.003294350220187021, "phrase": "worst_case"}, {"score": 0.003220709449062307, "phrase": "quadratic_time"}, {"score": 0.002232579371411546, "phrase": "best_known_time_complexities"}, {"score": 0.0021049977753042253, "phrase": "practical_applications"}], "paper_keywords": ["Tree inclusion", " pattern matching"], "paper_abstract": "Given two rooted, ordered, and labeled trees P and T the tree inclusion problem is to determine if P can be obtained from T by deleting nodes in T. This problem has recently been recognized as an important query primitive in XML databases. Kilpelainen and Mannila [1995] presented the first polynomial-time algorithm using quadratic time and space. Since then several improved results have been obtained for special cases when P and T have a small number of leaves or small depth. However, in the worst case these algorithms still use quadratic time and space. Let n(S), l(S), and d(S) denote the number of nodes, the number of leaves, and the depth of a tree S epsilon{P, T}. In this article we show that the tree inclusion problem can be solved in space O(n(T)) and time: O(min {l(p)n(T) lpn(T) log log n(T) + n(T) n(p)n(T)/logn(T) + n(T) log n(T)}). This improves or matches the best known time complexities while using only linear space instead of quadratic. This is particularly important in practical applications, such as XML databases, where the space is likely to be a bottleneck.", "paper_title": "The Tree Inclusion Problem: In Linear Space and Faster", "paper_id": "WOS:000293799400011"}