{"auto_keywords": [{"score": 0.03332946048520919, "phrase": "multivariate_polynomial_subdivision"}, {"score": 0.00481495049065317, "phrase": "multivariate_polynomials"}, {"score": 0.004565007074039171, "phrase": "valid_solutions"}, {"score": 0.004495996972278015, "phrase": "polynomial_constraints"}, {"score": 0.00434449804021954, "phrase": "domain_subdivision"}, {"score": 0.004230188765513944, "phrase": "major_issues"}, {"score": 0.004134596278123439, "phrase": "prime_obstacles"}, {"score": 0.0040720661634333424, "phrase": "efficient_subdivision-based_polynomial_constraint_solver"}, {"score": 0.0038605361756636667, "phrase": "parameter_domain"}, {"score": 0.0035096666710980108, "phrase": "hybrid_parallel_algorithm"}, {"score": 0.003443402656397069, "phrase": "multivariate_constraints"}, {"score": 0.003365529624506815, "phrase": "gpu_multicore_architectures"}, {"score": 0.0032272929113113203, "phrase": "subdivision_tree"}, {"score": 0.0031908272044073134, "phrase": "gpu"}, {"score": 0.00257691309462969, "phrase": "inherent_parallelism"}, {"score": 0.0024522007854499554, "phrase": "proposed_parallel_solver"}, {"score": 0.0024150528983695446, "phrase": "geometric_applications"}, {"score": 0.002387560868354908, "phrase": "hausdorff_distance_queries"}, {"score": 0.0023694065215394593, "phrase": "contact_point_computations"}, {"score": 0.002351389889948836, "phrase": "surface-surface_intersections"}, {"score": 0.0023335099338323974, "phrase": "ray_trap_constructions"}, {"score": 0.0023069440108381364, "phrase": "bisector_surface_computations"}, {"score": 0.0022547140008848912, "phrase": "proposed_parallel_method"}, {"score": 0.002203663884543687, "phrase": "magnitude_improvement"}, {"score": 0.002153767124561527, "phrase": "state-of-the-art_subdivision-based_cpu_solver"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Geometric constraint solver", " Hybrid algorithm", " Non-linear system", " Graphics hardware", " Bezier subdivision"], "paper_abstract": "This paper deals with a problem of finding valid solutions to systems of polynomial constraints. Although there have been several quite successful algorithms based on domain subdivision to resolve this problem, some major issues are still demanding further research. Prime obstacles in developing an efficient subdivision-based polynomial constraint solver are the exhaustive, although hierarchical, search of the zero-set in the parameter domain, which is computationally demanding, and their scalability in terms of the number of variables. In this paper, we present a hybrid parallel algorithm for solving systems of multivariate constraints by exploiting both the CPU and the GPU multicore architectures. We dedicate the CPU for the traversal of the subdivision tree and the GPU for the multivariate polynomial subdivision. By decomposing the constraint solving technique into two different components, hierarchy traversal and polynomial subdivision, each of which is more suitable to CPUs and GPUs, respectively, our solver can fully exploit the availability of hybrid, multicore architectures of CPUs and CPUs. Furthermore, our GPU-based subdivision method takes advantage of the inherent parallelism in the multivariate polynomial subdivision. We demonstrate the efficacy and scalability of the proposed parallel solver through several examples in geometric applications, including Hausdorff distance queries, contact point computations, surface-surface intersections, ray trap constructions, and bisector surface computations. In our experiments, the proposed parallel method achieves up to two orders of magnitude improvement in performance compared to the state-of-the-art subdivision-based CPU solver. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "A hybrid parallel solver for systems of multivariate polynomials using CPUs and GPUs", "paper_id": "WOS:000297495200006"}