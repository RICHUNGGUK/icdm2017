{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fano"}, {"score": 0.004723322467153553, "phrase": "adaptive_coding_techniques"}, {"score": 0.004589124394375718, "phrase": "lossless_data_compression"}, {"score": 0.004437349839203418, "phrase": "wide_range"}, {"score": 0.004311241567238011, "phrase": "on-line_compression"}, {"score": 0.0038600230206554792, "phrase": "adaptive_fano_coding_method"}, {"score": 0.0038047474331318974, "phrase": "binary_and_multi-symbol_code_alphabets"}, {"score": 0.003714368305523811, "phrase": "corresponding_partitioning_procedure"}, {"score": 0.003643607569483598, "phrase": "consecutive_partitionings"}, {"score": 0.0032308006242867224, "phrase": "fano_coding"}, {"score": 0.003154012038613403, "phrase": "optimal_partitioning"}, {"score": 0.0030790429005600898, "phrase": "brute-force_algorithm"}, {"score": 0.0030203487665054806, "phrase": "entire_space"}, {"score": 0.002977061391551628, "phrase": "possible_partitionings"}, {"score": 0.002850875630787708, "phrase": "polynomial-time_complexity"}, {"score": 0.0027697290872182477, "phrase": "input_alphabet"}, {"score": 0.0025767987652419054, "phrase": "output_alphabet"}, {"score": 0.002443890721386284, "phrase": "greedy_algorithm"}, {"score": 0.0023178219772486868, "phrase": "real-life_benchmark_data_files"}, {"score": 0.002208853811052348, "phrase": "adaptive_huffman_coding"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["adaptive coding", " Fano coding", " data compression"], "paper_abstract": "Adaptive coding techniques have been increasingly used in lossless data compression. They are suitable for a wide range of applications, in which on-line compression is required, including communications, internet, e-mail, and e-commerce. In this paper, we present an adaptive Fano coding method applicable to binary and multi-symbol code alphabets. We introduce the corresponding partitioning procedure that deals with consecutive partitionings, and that possesses, what we have called, the nearly-equal-probability property, i.e. that satisfy the principles of Fano coding. To determine the optimal partitioning, we propose a brute-force algorithm that searches the entire space of all possible partitionings. We show that this algorithm operates in polynomial-time complexity on the size of the input alphabet, where the degree of the polynomial is given by the size of the output alphabet. As opposed to this, we also propose a greedy algorithm that quickly finds a sub-optimal, but accurate, consecutive partitioning. The empirical results on real-life benchmark data files demonstrate that our scheme compresses and decompresses faster than adaptive Huffman coding, while consuming less memory resources. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "A fast and efficient nearly-optimal adaptive Fano coding scheme", "paper_id": "WOS:000237706400002"}