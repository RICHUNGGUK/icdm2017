{"auto_keywords": [{"score": 0.044001542978848354, "phrase": "continuous_skyline_query_processing"}, {"score": 0.035826256567006345, "phrase": "data_points"}, {"score": 0.00481495049065317, "phrase": "skyline_algorithms"}, {"score": 0.004594951819987416, "phrase": "static_query_points"}, {"score": 0.004547438494330851, "phrase": "static_data_sets"}, {"score": 0.004453874101119545, "phrase": "increasing_number"}, {"score": 0.004407813106104401, "phrase": "mobile_service_applications"}, {"score": 0.004055998173160551, "phrase": "continuous_skyline_query"}, {"score": 0.003911010373894104, "phrase": "dynamic_one"}, {"score": 0.0037321585095070483, "phrase": "spatiotemporal_coherence"}, {"score": 0.003598705020845104, "phrase": "continuous_skyline_query_processing_strategy"}, {"score": 0.0029994894380575604, "phrase": "spatial_positions"}, {"score": 0.002512850690695835, "phrase": "kinetic-based_data_structure"}, {"score": 0.002473895542219933, "phrase": "efficient_skyline_query_processing_algorithm"}, {"score": 0.002324007171619245, "phrase": "proposed_method"}, {"score": 0.0022760856906838814, "phrase": "extensive_experiment"}, {"score": 0.0021049977753042253, "phrase": "first_work"}], "paper_keywords": ["skyline", " continuous query processing", " moving object databases"], "paper_abstract": "The literature on skyline algorithms has so far dealt mainly with queries of static query points over static data sets. With the increasing number of mobile service applications and users, however, the need for continuous skyline query processing has become more pressing. A continuous skyline query involves not only static dimensions, but also the dynamic one. In this paper, we examine the spatiotemporal coherence of the problem and propose a continuous skyline query processing strategy for moving query points. First, we distinguish the data points that are permanently in the skyline and use them to derive a search bound. Second, we investigate the connection between the spatial positions of data points and their dominance relationship, which provides an indication of where to find changes in the skyline and how to maintain the skyline continuously. Based on the analysis, we propose a kinetic-based data structure and an efficient skyline query processing algorithm. We concisely analyze the space and time costs of the proposed method and conduct an extensive experiment to evaluate the method. To the best of our knowledge, this is the first work on continuous skyline query processing.", "paper_title": "Continuous skyline queries for moving objects", "paper_id": "WOS:000241284700005"}