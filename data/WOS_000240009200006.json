{"auto_keywords": [{"score": 0.004708056866527125, "phrase": "low_priority_traffic"}, {"score": 0.004521566043596533, "phrase": "real_time"}, {"score": 0.0041891398413899435, "phrase": "new_framework"}, {"score": 0.004114527599108734, "phrase": "low_priority"}, {"score": 0.0038985392250620483, "phrase": "minimal_interference"}, {"score": 0.00384633057714983, "phrase": "higher_priority_traffic"}, {"score": 0.0037272031155266556, "phrase": "network_goodput"}, {"score": 0.003677280504320636, "phrase": "key_idea"}, {"score": 0.003611751858608048, "phrase": "network_nodes"}, {"score": 0.00333097896868937, "phrase": "active_network_paradigm"}, {"score": 0.0031559919178954644, "phrase": "network's_goodput"}, {"score": 0.00295008998986066, "phrase": "additional_load"}, {"score": 0.002910545717767559, "phrase": "intermediate_nodes"}, {"score": 0.0028586409810976367, "phrase": "minimal_cost_schedules"}, {"score": 0.0028076592725295646, "phrase": "optimization_problem"}, {"score": 0.0026720866990543744, "phrase": "on-line_version"}, {"score": 0.0026009105281485888, "phrase": "predefined_route"}, {"score": 0.0025202582748972122, "phrase": "enhanced_scheduling_strategies"}, {"score": 0.002453116398642071, "phrase": "different_assumptions"}, {"score": 0.002387758958649797, "phrase": "rigorous_simulation_study"}, {"score": 0.0021723899772112423, "phrase": "congestion_time"}, {"score": 0.0021049977753042253, "phrase": "additional_signaling"}], "paper_keywords": ["active networks", " competitive analysis", " delay tolerant networks", " network management", " on-line algorithms"], "paper_abstract": "Various monitoring and performance evaluation tools generate considerable amount of low priority traffic. This information is not always needed in real time and often can be delayed by the network without hurting functionality. This paper proposes a new framework to handle this low priority, but resource consuming traffic in such a way that it incurs a minimal interference with the higher priority traffic. Consequently, this improves the network goodput. The key idea is allowing the network nodes to delay data by locally storing it This can be done, for example, in the Active Network paradigm. In this paper we show that such a model can improve the network's goodput dramatically even if a very simple scheduling algorithm for intermediate parking is used. The parking imposes additional load on the intermediate nodes. To obtain minimal cost schedules we define an optimization problem called the traveling miser problem. We concentrate on the on-line version of the problem for a predefined route, and develop a number of enhanced scheduling strategies. We study their characteristics under different assumptions on the environment through a rigorous simulation study. We prove that if only one link can be congested, then our scheduling algorithm is O(log(2)B) competitive, where B is congestion time, and is 3-competitive, if additional signaling is allowed.", "paper_title": "The traveling miser problem", "paper_id": "WOS:000240009200006"}