{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "application_network_behavior"}, {"score": 0.00467677555573346, "phrase": "new_behavior-based_anomaly_detection_system"}, {"score": 0.0045591142048535165, "phrase": "mobile_application's_network_behavior"}, {"score": 0.00444439983637316, "phrase": "proposed_system"}, {"score": 0.004380143676997257, "phrase": "mobile_device_users"}, {"score": 0.004348363291608004, "phrase": "cellular_infrastructure_companies"}, {"score": 0.004316812490871324, "phrase": "malicious_applications"}, {"score": 0.004192872425727907, "phrase": "malicious_attacks"}, {"score": 0.0040873354289955605, "phrase": "mobile_device"}, {"score": 0.003969957613513855, "phrase": "republished_popular_applications"}, {"score": 0.003912533878506028, "phrase": "malicious_code"}, {"score": 0.003704467870496114, "phrase": "new_type"}, {"score": 0.0036775717816768133, "phrase": "mobile_malware"}, {"score": 0.0036508702548731383, "phrase": "self-updating_capabilities"}, {"score": 0.0035589270056254605, "phrase": "official_google_android_marketplace"}, {"score": 0.0034066464009965425, "phrase": "standard_signatures_approach"}, {"score": 0.003357343256340741, "phrase": "regular_static_or_dynamic_analysis_methods"}, {"score": 0.003248995912331009, "phrase": "application's_network_traffic_patterns"}, {"score": 0.0029985954225814895, "phrase": "semi-supervised_machine-learning_methods"}, {"score": 0.00293370839211022, "phrase": "normal_behavioral_patterns"}, {"score": 0.0028597742552122305, "phrase": "application's_expected_behavior"}, {"score": 0.0027674397462322435, "phrase": "android_devices"}, {"score": 0.0027373270600305885, "phrase": "evaluation_experiments"}, {"score": 0.002648935542912504, "phrase": "specific_network_traffic_patterns"}, {"score": 0.002526261001496249, "phrase": "normal_behavior"}, {"score": 0.0024092539025697014, "phrase": "self-updating_malware"}, {"score": 0.0023485057246680854, "phrase": "different_and_distinguishable_network_traffic_patterns"}, {"score": 0.0021204172495922513, "phrase": "low_performance_overhead"}, {"score": 0.0021049977753042253, "phrase": "mobile_devices"}], "paper_keywords": ["Mobile applications", " Network traffic", " Machine learning", " Android malware", " Anomaly detection", " Smartphone security"], "paper_abstract": "In this paper we present a new behavior-based anomaly detection system for detecting meaningful deviations in a mobile application's network behavior. The main goal of the proposed system is to protect mobile device users and cellular infrastructure companies from malicious applications by: (1) identification of malicious attacks or masquerading applications installed on a mobile device, and (2) identification of republished popular applications injected with a malicious code (i.e., repackaging). More specifically, we attempt to detect a new type of mobile malware with self-updating capabilities that were recently found on the official Google Android marketplace. Malware of this type cannot be detected using the standard signatures approach or by applying regular static or dynamic analysis methods. The detection is performed based on the application's network traffic patterns only. For each application, a model representing its specific traffic pattern is learned locally (i.e., on the device). Semi-supervised machine-learning methods are used for learning the normal behavioral patterns and for detecting deviations from the application's expected behavior. These methods were implemented and evaluated on Android devices. The evaluation experiments demonstrate that: (1) various applications have specific network traffic patterns and certain application categories can be distinguished by their network patterns; (2) different levels of deviation from normal behavior can be detected accurately; (3) in the case of self-updating malware, original (benign) and infected versions of an application have different and distinguishable network traffic patterns that in most cases, can be detected within a few minutes after the malware is executed while presenting very low false alarms rate; and (4) local learning is feasible and has a low performance overhead on mobile devices. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Mobile malware detection through analysis of deviations in application network behavior", "paper_id": "WOS:000337014000002"}