{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_performance"}, {"score": 0.004481132747216135, "phrase": "component-based_systems"}, {"score": 0.004284302478991387, "phrase": "diverse_and_critical_applications"}, {"score": 0.003677280504320636, "phrase": "architecture-based_unified_hierarchical_model"}, {"score": 0.0033914308417007316, "phrase": "cache_behavior_prediction"}, {"score": 0.0032716011062067286, "phrase": "discrete_time_markov_chains"}, {"score": 0.003099723664407622, "phrase": "software_systems"}, {"score": 0.002910545717767559, "phrase": "overall_behavior"}, {"score": 0.0025892330566358503, "phrase": "individual_components"}, {"score": 0.0022419349154472806, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "sensitivity_analysis"}], "paper_keywords": ["software architecture", " performance", " reliability", " security", " Markov models"], "paper_abstract": "With component-based systems becoming popular and handling diverse and critical applications, the need for their thorough evaluation has become very important. In this paper we propose an architecture-based unified hierarchical model for software performance, reliability, security and cache behavior prediction. We employ discrete time Markov chains (DTMCs) to model software systems and provide expressions for predicting the overall behavior of the system based on its architecture as well as the characteristics of individual components. This approach also facilitates the identification of various bottlenecks. We illustrate its use through some case studies and also provide expressions to perform sensitivity analysis. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Quantifying software performance, reliability and security: An architecture-based approach", "paper_id": "WOS:000245771700005"}