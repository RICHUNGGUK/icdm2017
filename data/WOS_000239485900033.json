{"auto_keywords": [{"score": 0.03306951750255659, "phrase": "proposed_technique"}, {"score": 0.01379629827634224, "phrase": "process_lines"}, {"score": 0.01253513310505437, "phrase": "process_line_architectures"}, {"score": 0.00481495049065317, "phrase": "software_process_line_architectures"}, {"score": 0.004003169429008801, "phrase": "common_processes"}, {"score": 0.0039333604469462356, "phrase": "particular_problem_domains"}, {"score": 0.003212663446866794, "phrase": "overall_optimization"}, {"score": 0.002646880721119838, "phrase": "uml_activity_diagrams"}, {"score": 0.0024024377855956136, "phrase": "co-design_processes"}, {"score": 0.002339771435910601, "phrase": "embedded_system_domain"}, {"score": 0.0021049977753042253, "phrase": "consistent_and_project-specific_processes"}], "paper_keywords": [""], "paper_abstract": "In this paper, we propose a technique for establishing process lines, which are sets of common processes in particular problem domains, and process line architectures that incorporate commonality and variability. Process line architectures are used as a basis for deriving process lines from the perspective of overall optimization. The proposed technique includes some extensions to the Software Process Engineering Metamodel for clearly expressing the commonality and variability in the process workflows described as UML activity diagrams. As a result of applying the proposed technique to hardware/software co-design processes in an embedded system domain, it is found that the proposed technique is useful for defining consistent and project-specific processes efficiently.", "paper_title": "Building software process line architectures from bottom up", "paper_id": "WOS:000239485900033"}