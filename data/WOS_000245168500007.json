{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "database_queries"}, {"score": 0.00462919213721188, "phrase": "mutation_operators"}, {"score": 0.004556901872357751, "phrase": "sql_queries"}, {"score": 0.003923815926819606, "phrase": "nist_sql_conformance_test_suite"}, {"score": 0.0037133478610481994, "phrase": "wide_spectrum"}, {"score": 0.0036553070575015344, "phrase": "sql_features"}, {"score": 0.00348655247465418, "phrase": "null_values"}, {"score": 0.003432044343307207, "phrase": "additional_experiments"}, {"score": 0.0030494153169181334, "phrase": "selective_mutation"}, {"score": 0.0029781530607129653, "phrase": "test_suite_size"}, {"score": 0.00281826552772148, "phrase": "appropriate_ordering"}, {"score": 0.002688050388891007, "phrase": "sql_mutation_approach"}, {"score": 0.0025038930574283174, "phrase": "database_test_cases"}, {"score": 0.0022070310530794097, "phrase": "different_database_testing_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["software testing", " database testing", " SQL testing", " fault-based testing", " mutation testing", " test adequacy criteria"], "paper_abstract": "A set of mutation operators for SQL queries that retrieve information from a database is developed and tested against a set of queries drawn from the NIST SQL Conformance Test Suite. The mutation operators cover a wide spectrum of SQL features, including the handling of null values. Additional experiments are performed to explore whether the cost of executing mutants can be reduced using selective mutation or the test suite size can be reduced by using an appropriate ordering of the mutants. The SQL mutation approach can be helpful in assessing the adequacy of database test cases and their development, and as a tool for systematically injecting faults in order to compare different database testing techniques. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Mutating database queries", "paper_id": "WOS:000245168500007"}