{"auto_keywords": [{"score": 0.01453896799899067, "phrase": "design_parameters"}, {"score": 0.00481495049065317, "phrase": "architectural_design_spaces"}, {"score": 0.004770461993586338, "phrase": "predictive_modeling"}, {"score": 0.004682708592184678, "phrase": "cycle-by-cycle_simulation"}, {"score": 0.004367707617503722, "phrase": "exponential-size_design_spaces"}, {"score": 0.004228016636379321, "phrase": "open_problem"}, {"score": 0.004169519409162853, "phrase": "sheer_number"}, {"score": 0.004092774981286263, "phrase": "detailed_simulation"}, {"score": 0.0039252049353279556, "phrase": "automated_approach"}, {"score": 0.0034785371344994197, "phrase": "highly_accurate_performance_estimates"}, {"score": 0.0032745778756077693, "phrase": "performance_impacts"}, {"score": 0.003244275497488318, "phrase": "architectural_changes"}, {"score": 0.0030825404960282713, "phrase": "efficient_discovery"}, {"score": 0.002997735656669146, "phrase": "different_regions"}, {"score": 0.0029152570900178956, "phrase": "sensitivity_studies"}, {"score": 0.0028882701690741467, "phrase": "memory_hierarchy"}, {"score": 0.0028615323526689582, "phrase": "cpu_design_spaces"}, {"score": 0.0027957722617694774, "phrase": "ipc"}, {"score": 0.002731500545019039, "phrase": "required_simulation"}, {"score": 0.002431626477893495, "phrase": "cmp_design_space"}, {"score": 0.0023427844897844093, "phrase": "different_system_configurations"}, {"score": 0.0021246816854197732, "phrase": "net_time_savings"}, {"score": 0.0021049977753042253, "phrase": "three-four_orders"}], "paper_keywords": ["design space exploration", " sensitivity studies", " artificial neural networks", " performance prediction"], "paper_abstract": "Architects use cycle-by-cycle simulation to evaluate design choices and understand tradeoffs and interactions among design parameters. Efficiently exploring exponential-size design spaces with many interacting parameters remains an open problem: the sheer number of experiments renders detailed simulation intractable. We attack this problem via an automated approach that builds accurate, confident predictive design-space models. We simulate sampled points, using the results to teach our models the function describing relationships among design parameters. The models produce highly accurate performance estimates for other points in the space, can be queried to predict performance impacts of architectural changes, and are very fast compared to simulation, enabling efficient discovery of tradeoffs among parameters in different regions. We validate our approach via sensitivity studies on memory hierarchy and CPU design spaces: our models generally predict IPC with only 1-2% error and reduce required simulation by two orders of magnitude. We also show the efficacy of our technique for exploring chip multiprocessor (CMP) design spaces: when trained on a 1% sample drawn from a CMP design space with 250K points and up to 55 x performance swings among different system configurations, our models predict performance with only 4-5% error on average. Our approach combines with techniques to reduce time per simulation, achieving net time savings of three-four orders of magnitude.", "paper_title": "Efficiently exploring architectural design spaces via predictive modeling", "paper_id": "WOS:000202972600019"}