{"auto_keywords": [{"score": 0.04666794416407737, "phrase": "output_quality"}, {"score": 0.010612387000973441, "phrase": "dynamic_effort_scaling"}, {"score": 0.008800849253149728, "phrase": "scalable_effort_systems"}, {"score": 0.007216497542680668, "phrase": "des"}, {"score": 0.006274209551314186, "phrase": "scaling_mechanisms"}, {"score": 0.004692227830462433, "phrase": "unique_result"}, {"score": 0.0045726187330434025, "phrase": "functional_correctness"}, {"score": 0.004439634831927606, "phrase": "recently_proposed_design_techniques"}, {"score": 0.004390764654147291, "phrase": "inherent_resilience"}, {"score": 0.004310501708408856, "phrase": "improved_efficiency"}, {"score": 0.004185108816866677, "phrase": "correct_execution"}, {"score": 0.004123781267600542, "phrase": "hardware_and_software_systems"}, {"score": 0.0034540850937966306, "phrase": "dynamic_management"}, {"score": 0.0034160263294684785, "phrase": "control_knobs"}, {"score": 0.0029686314779877525, "phrase": "general_conceptual_framework"}, {"score": 0.0028821607224183135, "phrase": "feedback_control_problem"}, {"score": 0.002706659627293686, "phrase": "specified_limit"}, {"score": 0.0026375303198093764, "phrase": "dynamic_effort"}, {"score": 0.0025892330566358503, "phrase": "mining_applications"}, {"score": 0.0025324393547676623, "phrase": "support_vector_machines"}, {"score": 0.0025138054462794865, "phrase": "k-means"}, {"score": 0.0023781827711414107, "phrase": "proposed_approach-statically"}, {"score": 0.002317423416027688, "phrase": "significant_error_overshoot"}, {"score": 0.0023003498123420237, "phrase": "significant_opportunities"}, {"score": 0.0022834017104377525, "phrase": "energy_savings"}, {"score": 0.0021049977753042253, "phrase": "time-varying_resiliency"}], "paper_keywords": ["Algorithms", " Design", " Dynamic effort scaling", " scalable effort", " approximate computing", " low power design", " support vector machines", " K-means clustering", " recognition", " mining"], "paper_abstract": "Several current and emerging applications do not have a unique result for a given input; rather, functional correctness is defined in terms of output quality. Recently proposed design techniques exploit the inherent resilience of such applications and achieve improved efficiency (energy or performance) by foregoing correct execution of all the constituent computations. Hardware and software systems that are thus designed may be viewed as scalable effort systems, since they offer the capability to modulate the effort that they expend towards computation, thereby allowing for trade-offs between output quality and efficiency. We propose the concept of Dynamic Effort Scaling (DES), which refers to dynamic management of the control knobs that are exposed by scalable effort systems. We argue the need for DES by observing that the degree of resilience often varies significantly across applications, across datasets, and even within a dataset. We propose a general conceptual framework for DES by formulating it as a feedback control problem, wherein the scaling mechanisms are regulated with the goal of maintaining output quality at or above a specified limit. We present an implementation of Dynamic Effort Scaling for recognition and mining applications and evaluate it for the support vector machines and K-means clustering algorithms under various application scenarios and datasets. Our results clearly demonstrate the benefits of the proposed approach-statically setting the scaling mechanisms leads to either significant error overshoot or significant opportunities for energy savings left on the table unexploited. In contrast, DES is able to effectively regulate the output quality while maximally exploiting the time-varying resiliency in the workload.", "paper_title": "Managing the Quality vs. Efficiency Trade-off Using Dynamic Effort Scaling", "paper_id": "WOS:000321215900005"}