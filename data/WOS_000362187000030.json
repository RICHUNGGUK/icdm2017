{"auto_keywords": [{"score": 0.04860000689752459, "phrase": "local_structure"}, {"score": 0.00481495049065317, "phrase": "graph_edit_distance"}, {"score": 0.004569630374630379, "phrase": "graph-matching_problem"}, {"score": 0.004428452434981208, "phrase": "pattern_recognition_applications"}, {"score": 0.004359500411441827, "phrase": "computing_distances"}, {"score": 0.003926359151817743, "phrase": "objective_function"}, {"score": 0.0038049789989278463, "phrase": "edge_attributes"}, {"score": 0.0037456980766939836, "phrase": "graph_matching"}, {"score": 0.003554661425339528, "phrase": "new_versions"}, {"score": 0.003373334961160647, "phrase": "fast_bipartite_graph"}, {"score": 0.0032012284065895537, "phrase": "cost_matrix"}, {"score": 0.0031513240597392843, "phrase": "whole_nodes"}, {"score": 0.0030378759123133644, "phrase": "node_correspondence"}, {"score": 0.0029905104479072482, "phrase": "linear_assignment_method"}, {"score": 0.0024377918036784336, "phrase": "eight_different_options"}, {"score": 0.002172266188075892, "phrase": "classification_ratio"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Error-tolerant graph matching", " Bipartite Graph Matching", " Hausdorff Edit Distance", " Node centrality"], "paper_abstract": "Classical graph approaches for pattern recognition applications rely on computing distances between graphs in a certain graph domain. That is, the distance between two graphs is obtained by directly optimising some objective function, which consider node and edge attributes. Bipartite Graph Matching was first published in a journal in 2009 and new versions have appeared to speed up its runtime such as the Fast Bipartite Graph Matching. This algorithm is based on defining a cost matrix between the whole nodes of both graphs and solving the node correspondence through a linear assignment method. To construct the matrix, several local structures can be defined from the simplest one (only the node) to the most complex (a whole clique or eigenvector structure). In this paper, we propose eight different options and we show that the type of local structure and the distance defined between these structures is relevant for the runtime and classification ratio. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Graph Edit Distance: Moving from global to local structure to solve the graph-matching problem", "paper_id": "WOS:000362187000030"}