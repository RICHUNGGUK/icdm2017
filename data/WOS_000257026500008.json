{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "model-driven_techniques"}, {"score": 0.004388450908826472, "phrase": "model-based_tool"}, {"score": 0.003584025547693836, "phrase": "automatic_instantiation"}, {"score": 0.0035240305920962766, "phrase": "software_product_lines"}, {"score": 0.0032938942910948096, "phrase": "eclipse_platform"}, {"score": 0.0032387402145603412, "phrase": "emf_technology"}, {"score": 0.002853396755102163, "phrase": "specific_java_annotations"}, {"score": 0.002556625752785268, "phrase": "existing_implementations"}, {"score": 0.0025137856138000014, "phrase": "spl_architectures"}, {"score": 0.0022145052062614514, "phrase": "automatic_derivation"}, {"score": 0.0021590588269751816, "phrase": "junit_framework"}], "paper_keywords": ["software product lines", " product derivation tools", " generative programming", " model-driven development"], "paper_abstract": "In this paper, we present a model-based tool for product derivation. Our tool is centered on the definition of three models (feature, architecture and configuration models) which enable the automatic instantiation of software product lines (SPLs) or frameworks. The Eclipse platform and EMF technology are used as the base for the implementation of our tool. A set of specific Java annotations are also defined to allow generating automatically many of our models based on existing implementations of SPL architectures. We illustrated the use and validation of our tool in the preparation of the automatic derivation of the JUnit framework and a J2ME games product line.", "paper_title": "A product derivation tool based on model-driven techniques and annotations", "paper_id": "WOS:000257026500008"}