{"auto_keywords": [{"score": 0.0318802032589797, "phrase": "subsky"}, {"score": 0.00481495049065317, "phrase": "top-k_queries"}, {"score": 0.00471465954562773, "phrase": "preference_retrieval"}, {"score": 0.004426092397211699, "phrase": "numerous_candidate_attributes"}, {"score": 0.004133292222875435, "phrase": "different_subsets"}, {"score": 0.0040047396607954325, "phrase": "existing_algorithms"}, {"score": 0.0036617315529835497, "phrase": "entire_database"}, {"score": 0.0033656930865509547, "phrase": "significant_overhead"}, {"score": 0.003209782650616367, "phrase": "expensive_maintenance_cost"}, {"score": 0.0031761255583359726, "phrase": "space_consumption"}, {"score": 0.002858313353461727, "phrase": "purely_relational_technologies"}, {"score": 0.002697245874076643, "phrase": "multidimensional_data"}, {"score": 0.0025586903829811296, "phrase": "simple_b-tree"}, {"score": 0.0024659480471085405, "phrase": "subspace_queries"}, {"score": 0.002326938965568362, "phrase": "low_maintenance_overhead"}, {"score": 0.002219040041886641, "phrase": "traditional_b-tree"}, {"score": 0.0021612684684351974, "phrase": "real_data"}, {"score": 0.0021049977753042253, "phrase": "alternative_solutions"}], "paper_keywords": ["skyline", " top-k", " subspace", " B-tree"], "paper_abstract": "Skyline and top-k queries are two popular operations for preference retrieval. In practice, applications that require these operations usually provide numerous candidate attributes, whereas, depending on their interests, users may issue queries regarding different subsets of the dimensions. The existing algorithms are inadequate for subspace skyline/top-k search because they have at least one of the following defects: 1).They require scanning the entire database at least once, 2) they are optimized for one,subspace but incur significant overhead for other subspaces, or 3) they demand expensive maintenance cost or space consumption. In this paper, we propose a technique SUBSKY, which settles both types of queries by using purely relational technologies. The core of SUBSKY is a transformation that converts multidimensional data to one-dimensional (I D) values. These values are indexed by a simple B-tree, which allows us to answer subspace queries by accessing a fraction of the database. SUBSKY entails low maintenance overhead, which equals the cost of updating a traditional B-tree. Extensive experiments with real data confirm that our technique outperforms alternative solutions significantly in both efficiency and scalability.", "paper_title": "Efficient skyline and top-k retrieval in subspaces", "paper_id": "WOS:000248223300006"}