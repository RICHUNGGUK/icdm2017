{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "technical_debt"}, {"score": 0.006326957941448091, "phrase": "software_development"}, {"score": 0.004546174820239776, "phrase": "long_term_success"}, {"score": 0.0043855614403277305, "phrase": "technical_debt_phenomenon"}, {"score": 0.004330450801016359, "phrase": "academic_literature"}, {"score": 0.0042171108629745655, "phrase": "clear_definition"}, {"score": 0.004016938499717623, "phrase": "adequate_management"}, {"score": 0.003894512634265439, "phrase": "technical_debt's_utility"}, {"score": 0.0038431888954930083, "phrase": "conceptual_and_technical_communication_device"}, {"score": 0.0037260386566859197, "phrase": "critical_examination"}, {"score": 0.003335948601271999, "phrase": "multivocal_literature_review"}, {"score": 0.0032485526269852606, "phrase": "software_practitioners"}, {"score": 0.003053402354907241, "phrase": "key_outcome"}, {"score": 0.002934166052954463, "phrase": "theoretical_framework"}, {"score": 0.0028826733506942554, "phrase": "holistic_view"}, {"score": 0.0027947199430705077, "phrase": "technical_debts_dimensions"}, {"score": 0.0025465957200502404, "phrase": "different_forms"}, {"score": 0.0024579623598183355, "phrase": "proposed_framework"}, {"score": 0.002425524064992056, "phrase": "useful_approach"}, {"score": 0.002382936364692606, "phrase": "overall_phenomenon"}, {"score": 0.002341094670523097, "phrase": "practical_purposes"}, {"score": 0.002320449502337321, "phrase": "future_research"}, {"score": 0.002289821830549779, "phrase": "empirical_studies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Technical debt", " Code debt", " Precedents", " Outcomes", " Benefits and drawbacks", " Multivocal literature review"], "paper_abstract": "Context: Whilst technical debt is considered to be detrimental to the long term success of software development, it appears to be poorly understood in academic literature. The absence of a clear definition and model for technical debt exacerbates the challenge of its identification and adequate management, thus preventing the realisation of technical debt's utility as a conceptual and technical communication device. Objective: To make a critical examination of technical debt and consolidate understanding of the nature of technical debt and its implications for software development. Method: An exploratory case study technique that involves multivocal literature review, supplemented by interviews with software practitioners and academics to establish the boundaries of the technical debt phenomenon. Result: A key outcome of this research is the creation of a theoretical framework that provides a holistic view of technical debt comprising a set of technical debts dimensions, attributes, precedents and outcomes, as well as the phenomenon itself and a taxonomy that describes and encompasses different forms of the technical debt phenomenon. Conclusion: The proposed framework provides a useful approach to understanding the overall phenomenon of technical debt for practical purposes. Future research should incorporate empirical studies to validate heuristics and techniques that will assist practitioners in their management of technical debt. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "An exploration of technical debt", "paper_id": "WOS:000318330100003"}