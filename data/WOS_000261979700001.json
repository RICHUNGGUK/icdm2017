{"auto_keywords": [{"score": 0.032899772794961174, "phrase": "nc-based_simulation"}, {"score": 0.01563663469913248, "phrase": "tcp"}, {"score": 0.005778520633133578, "phrase": "packet-level_simulation"}, {"score": 0.004851650478999751, "phrase": "performance_improvement"}, {"score": 0.00481495049065317, "phrase": "network_calculus-based_simulation"}, {"score": 0.004612018044139003, "phrase": "simulation_performance"}, {"score": 0.004587257596576765, "phrase": "to-operated_networks"}, {"score": 0.004550364809125859, "phrase": "network_calculus-based_models"}, {"score": 0.004453421683408978, "phrase": "simulation_framework"}, {"score": 0.004393879198242108, "phrase": "operational_properties"}, {"score": 0.004358534837000905, "phrase": "congestion_control"}, {"score": 0.004335129332699343, "phrase": "additive_increase"}, {"score": 0.00431184897255855, "phrase": "multiplicative_decrease"}, {"score": 0.004288697395105032, "phrase": "aimd"}, {"score": 0.004254191233575912, "phrase": "slow_start"}, {"score": 0.004197301239681007, "phrase": "queue_discipline"}, {"score": 0.0041411688542696565, "phrase": "network_calculus"}, {"score": 0.0040747959570067395, "phrase": "network_calculus_models"}, {"score": 0.004052907939298019, "phrase": "tcp_congestion"}, {"score": 0.003987943985691915, "phrase": "simple_tcp_throughput_model"}, {"score": 0.003913462458156738, "phrase": "per-flow_throughput"}, {"score": 0.0037686309317639644, "phrase": "packet_losses"}, {"score": 0.003678357491240075, "phrase": "tcp_model"}, {"score": 0.0036193753788856505, "phrase": "network_calculus_theorems"}, {"score": 0.003476010424393516, "phrase": "tcp_per-flow_throughput"}, {"score": 0.003374485885600879, "phrase": "derived_rules"}, {"score": 0.0032321316872591485, "phrase": "nc"}, {"score": 0.0031546052275283317, "phrase": "performance_gain"}, {"score": 0.0030214377691414724, "phrase": "execution_time"}, {"score": 0.0027941961109477997, "phrase": "simulation_results"}, {"score": 0.0026332468828405577, "phrase": "network_size"}, {"score": 0.0025979767249757852, "phrase": "network-link_capacities"}, {"score": 0.002402506729202441, "phrase": "wide_spectrum"}, {"score": 0.0023895799632294586, "phrase": "network_topologies"}, {"score": 0.002376722584437227, "phrase": "traffic_loads"}, {"score": 0.0023010148215491908, "phrase": "fluid-model-based_simulation"}, {"score": 0.0022579680942469236, "phrase": "time-stepped_hybrid_simulation_technique"}, {"score": 0.002180174409793828, "phrase": "ieee"}, {"score": 0.0021221066364072766, "phrase": "simulation_platform"}], "paper_keywords": ["Network calculus", " Performance modeling and simulation"], "paper_abstract": "In this paper, we propose to speed up the simulation performance for TO-operated networks by incorporating network calculus-based models in a simulation framework. In the simulation framework, we describes the operational properties of TO congestion control, additive increase and multiplicative decrease (AIMD) and slow start, together with the queue discipline in the domain of network calculus. in order to determine network calculus models for TCP congestion, we first devise a simple TCP throughput model which approximately determines the range of per-flow throughput that one TCP can attain in a given interval, given the number of packet losses in the interval. We then exploit the TCP model to define a collection of network calculus theorems that regulate TCP flows in the range between the upper- and lower-limits on the TCP per-flow throughput in the corresponding interval. Finally. we incorporate the derived rules (theorems) into ns-2 to obtain a network calculus-based (NC-based) simulation, and carry out both the NC-based and the packet-level simulation to evaluate the performance gain and accuracy of the NC-based simulation, where the former is represented in perspective of the execution time (wall time) incurred in conducting the simulations and the later is evaluated in terms of the difference between results obtained in both the packet-level and NC-based simulation. The simulation results indicate that an order of magnitude or more (maximally 30 times) improvement in the execution time is achieved and the performance improvement becomes more salient as the network size increases in perspective of network-link capacities and the number of flows. The discrepancy observed between the NC-based simulation and the packet-level simulation, on the other hand, is minimally 1-2% and maximally 8-12% in a wide spectrum of network topologies and traffic loads. Additionally the results also indicate that the NC-based simulation outperforms a fluid-model-based simulation realized with the use of the time-stepped hybrid simulation technique, and that the performance improvement of the NC-based simulation is still held in IEEE 802.11-based wireless networks and also immune to the type of the simulation platform consisting of ns-2, operating system, and hardware specification. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Enabling network calculus-based simulation for TCP congestion control", "paper_id": "WOS:000261979700001"}