{"auto_keywords": [{"score": 0.045676624020643354, "phrase": "boolean"}, {"score": 0.00481495049065317, "phrase": "expensive_predicates"}, {"score": 0.004608997772926119, "phrase": "top-k_queries"}, {"score": 0.0044896599221451216, "phrase": "major_dbmss"}, {"score": 0.0044118153390803405, "phrase": "expensive_user-defined_predicates"}, {"score": 0.0042415434489566995, "phrase": "ranked_queries"}, {"score": 0.004024651422626329, "phrase": "user-specific_concepts"}, {"score": 0.003818807671883534, "phrase": "dynamic_user-defined_functions"}, {"score": 0.003752550907120244, "phrase": "middleware_systems"}, {"score": 0.003703611021999795, "phrase": "external_predicates"}, {"score": 0.0036553070575015344, "phrase": "autonomous_sources"}, {"score": 0.0035761913760242697, "phrase": "per-object_queries"}, {"score": 0.003498782065781398, "phrase": "boolean_ranking_conditions"}, {"score": 0.003393206299636482, "phrase": "expensive_ones"}, {"score": 0.003334309053314909, "phrase": "index_structure"}, {"score": 0.0032336801561165113, "phrase": "base_table"}, {"score": 0.003108735847242537, "phrase": "filtered_objects"}, {"score": 0.0030281251520610604, "phrase": "fuzzy_joins"}, {"score": 0.0029110999689379497, "phrase": "user-defined_operations"}, {"score": 0.0028731024405707277, "phrase": "associate_multiple_relations"}, {"score": 0.0026786469998321084, "phrase": "index_mechanisms"}, {"score": 0.002530359917257626, "phrase": "per-object_probe"}, {"score": 0.002464709648714996, "phrase": "probe_minimization"}, {"score": 0.0023902621773166963, "phrase": "cost-based_optimization"}, {"score": 0.0023487324083283205, "phrase": "potential_probe_schedules"}, {"score": 0.0022777800735119405, "phrase": "probe_scheduling"}, {"score": 0.0022382002476510573, "phrase": "predicate_scheduling_problems"}, {"score": 0.0021993066642488237, "phrase": "analytical_object_scheduling_optimization"}, {"score": 0.0021705796895687864, "phrase": "dynamic_predicate_scheduling_optimization"}, {"score": 0.0021049977753042253, "phrase": "cost-effective_probe_schedule"}], "paper_keywords": ["database query processing", " distributed information systems", " database systems"], "paper_abstract": "This paper addresses the problem of evaluating ranked top-k queries with expensive predicates. As major DBMSs now all support expensive user-defined predicates for Boolean queries, we believe such support for ranked queries will be even more important: First, ranked queries often need to model user-specific concepts of preference, relevance, or similarity, which call for dynamic user-defined functions. Second, middleware systems must incorporate external predicates for integrating autonomous sources typically accessible only by per-object queries. Third, ranked queries often accompany Boolean ranking conditions, which may turn predicates into expensive ones, as the index structure on the predicate built on the base table may be no longer effective in retrieving the filtered objects in order. Fourth, fuzzy joins are inherently expensive, as they are essentially user-defined operations that dynamically associate multiple relations. These predicates, being dynamically defined or externally accessed, cannot rely on index mechanisms to provide zero-time sorted output, and must instead require per-object probe to evaluate. To enable probe minimization, we develop the problem as cost-based optimization of searching over potential probe schedules. In particular, we decouple probe scheduling into object and predicate scheduling problems and develop an analytical object scheduling optimization and a dynamic predicate scheduling optimization, which combined together form a cost-effective probe schedule.", "paper_title": "Probe minimization by schedule optimization: Supporting top-k queries with expensive predicates", "paper_id": "WOS:000244895200005"}