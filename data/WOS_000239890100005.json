{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "extensible_system"}, {"score": 0.004677372885331908, "phrase": "class_ordering_methodologies"}, {"score": 0.004329331617724, "phrase": "well-known_design_patterns"}, {"score": 0.004026505114417176, "phrase": "class-based_testing"}, {"score": 0.0038179283509963695, "phrase": "comparative_study"}, {"score": 0.0036201167891046046, "phrase": "briand_et_al"}, {"score": 0.0035336109352157763, "phrase": "class_ordering_system"}, {"score": 0.0032703983117058906, "phrase": "briand"}, {"score": 0.0031922210879462513, "phrase": "cos_system"}, {"score": 0.002760778494680823, "phrase": "run-time_efficiency"}, {"score": 0.0026687841359431105, "phrase": "interesting_questions"}, {"score": 0.0026430660986106955, "phrase": "edge_type_considerations"}, {"score": 0.0025181367444581993, "phrase": "ord."}, {"score": 0.0024818194799172263, "phrase": "design_patterns"}, {"score": 0.0024342079318127423, "phrase": "dot_tool"}, {"score": 0.0023990982005125763, "phrase": "graphviz_package"}, {"score": 0.002285674008055581, "phrase": "edge_removals"}, {"score": 0.0021987994275190314, "phrase": "graphical_visualization"}, {"score": 0.0021670777282518424, "phrase": "edge_removal_process"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["object relation diagram (ORD)", " class-based testing", " design patterns", " command pattern", " visitor pattern", " singleton pattern", " visualization", " unified modeling language (UML)"], "paper_abstract": "In this paper we present the design and implementation of a system that exploits well-known design patterns to facilitate construction of an extensible system for comparison and visualization of ordering methodologies for class-based testing of C++ applications. Using our implementation, we present a comparative study and evaluation of two advanced ordering methodologies: the edge based approach by Briand et al., and the Class Ordering System (COS) introduced in this paper. We compare two variations of the approach by Briand and three variations of the COS system and draw conclusions about the number of edges removed, and therefore the number of stubs that must be constructed, using each approach. We also compare the run-time efficiency of each approach and raise some interesting questions about edge type considerations for removal in the presence of cycles in the ORD. Using the design patterns together with the dot tool from the Graphviz package, we incorporate visualization of the ORD and the edge removals into our system. We present details and graphical visualization of the edge removal process. (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "The implementation of an extensible system for comparison and visualization of class ordering methodologies", "paper_id": "WOS:000239890100005"}