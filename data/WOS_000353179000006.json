{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "quamoco"}, {"score": 0.04472882712454684, "phrase": "operationalised_quality_models"}, {"score": 0.03426126589174325, "phrase": "specific_domains"}, {"score": 0.03317942026329402, "phrase": "quality_models"}, {"score": 0.004758457292840376, "phrase": "software_quality_models"}, {"score": 0.004713738082757, "phrase": "concrete_quality_measurements"}, {"score": 0.004658426838467567, "phrase": "seamless_integration"}, {"score": 0.00460376161704646, "phrase": "quality_assessment_approaches"}, {"score": 0.004350127858557605, "phrase": "different_domains"}, {"score": 0.004159241394996858, "phrase": "comprehensive_approach"}, {"score": 0.003986103192038901, "phrase": "broad_range"}, {"score": 0.003967314311312148, "phrase": "quality_experts"}, {"score": 0.0038382392088338784, "phrase": "empirical_studies"}, {"score": 0.0037045835601730004, "phrase": "different_area"}, {"score": 0.0035587046945919788, "phrase": "comprehensive_quality_modelling"}, {"score": 0.003541923233726252, "phrase": "assessment_approach"}, {"score": 0.0034920505103165403, "phrase": "meta_quality_model"}, {"score": 0.003386380698000105, "phrase": "product_factor"}, {"score": 0.0033308077968426937, "phrase": "concrete_measurements"}, {"score": 0.0033150974333333214, "phrase": "abstract_quality_aspects"}, {"score": 0.0031996001819958628, "phrase": "largely_technology-independent_base_quality_model"}, {"score": 0.003102923633735064, "phrase": "java"}, {"score": 0.00297346171320082, "phrase": "concrete_and_comprehensive_quality_assessment_approach"}, {"score": 0.002876627851917633, "phrase": "empirical_evaluation"}, {"score": 0.0028428117812424837, "phrase": "real-world_software_systems"}, {"score": 0.002769805263310232, "phrase": "base_model"}, {"score": 0.002711465591187757, "phrase": "corresponding_systems"}, {"score": 0.002549722713772613, "phrase": "overall_view"}, {"score": 0.0025137856138000014, "phrase": "software_product"}, {"score": 0.002478353771216097, "phrase": "base_quality_model"}, {"score": 0.002391938519840648, "phrase": "open-source_tool_support"}, {"score": 0.0023694065215394593, "phrase": "mature_state"}, {"score": 0.0023249757987087055, "phrase": "embedded_software_systems"}, {"score": 0.0022976297062583893, "phrase": "domain-specific_quality_models"}, {"score": 0.002259883463607508, "phrase": "broad_basis"}, {"score": 0.0022122603123901114, "phrase": "industrial_practice"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Quality model", " Product quality", " Quality assessment"], "paper_abstract": "Context: Software quality models provide either abstract quality characteristics or concrete quality measurements; there is no seamless integration of these two aspects. Quality assessment approaches are, hence, also very specific or remain abstract. Reasons for this include the complexity of quality and the various quality profiles in different domains which make it difficult to build operationalised quality models. Objective: In the project Quamoco, we developed a comprehensive approach aimed at closing this gap. Method: The project combined constructive research, which involved a broad range of quality experts from academia and industry in workshops, sprint work and reviews, with empirical studies. All deliverables within the project were peer-reviewed by two project members from a different area. Most deliverables were developed in two or three iterations and underwent an evaluation. Results: We contribute a comprehensive quality modelling and assessment approach: (1) A meta quality model defines the structure of operationalised quality models. It includes the concept of a product factor, which bridges the gap between concrete measurements and abstract quality aspects, and allows modularisation to create modules for specific domains. (2) A largely technology-independent base quality model reduces the effort and complexity of building quality models for specific domains. For Java and CO systems, we refined it with about 300 concrete product factors and 500 measures. (3) A concrete and comprehensive quality assessment approach makes use of the concepts in the meta-model. (4) An empirical evaluation of the above results using real-world software systems showed: (a) The assessment results using the base model largely match the expectations of experts for the corresponding systems. (b) The approach and models are well understood by practitioners and considered to be both consistent and well suited for getting an overall view on the quality of a software product. The validity of the base quality model could not be shown conclusively, however. (5) The extensive, open-source tool support is in a mature state. (6) The model for embedded software systems is a proof-of-concept for domain-specific quality models. Conclusion: We provide a broad basis for the development and application of quality models in industrial practice as well as a basis for further extension, validation and comparison with other approaches in research. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Operationalised product quality models and assessment: The Quamoco approach", "paper_id": "WOS:000353179000006"}