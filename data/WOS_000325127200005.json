{"auto_keywords": [{"score": 0.037243351969774456, "phrase": "real-time_data_objects"}, {"score": 0.023015438456995094, "phrase": "application_transactions"}, {"score": 0.02138715311150514, "phrase": "operation_environment"}, {"score": 0.00481495049065317, "phrase": "periodic_update"}, {"score": 0.004703878334423852, "phrase": "important_function"}, {"score": 0.004616891935583551, "phrase": "cps"}, {"score": 0.004489327204473076, "phrase": "close_monitoring"}, {"score": 0.00428451995524549, "phrase": "changing_situations"}, {"score": 0.004166129325245761, "phrase": "commonly_applied_techniques"}, {"score": 0.004050996777117918, "phrase": "time-constrained_periodic_application_transactions"}, {"score": 0.003672427620845944, "phrase": "physical_entities"}, {"score": 0.0034884152484429207, "phrase": "real-time_database"}, {"score": 0.002989714021608139, "phrase": "update_and_application_transactions"}, {"score": 0.00297576670831646, "phrase": "co-scheduling_problem"}, {"score": 0.002853124436286832, "phrase": "fixed_priority_co-scheduling_algorithm"}, {"score": 0.0027227816126122145, "phrase": "pcs"}, {"score": 0.0026974065918918275, "phrase": "periodic_update_transactions"}, {"score": 0.0026474076254702525, "phrase": "temporal_validity"}, {"score": 0.002550165781755603, "phrase": "priority_orders"}, {"score": 0.002445021071485221, "phrase": "constructed_schedule"}, {"score": 0.0023996890513009743, "phrase": "deadline_constraints"}, {"score": 0.002226592967032469, "phrase": "correct_execution"}, {"score": 0.0021049977753042253, "phrase": "extensive_simulation_experiments"}], "paper_keywords": ["Co-scheduling", " Real-time data monitoring", " Quality of data (QoD)", " Critical events", " Cyber-physical systems"], "paper_abstract": "An important function of many cyber-physical systems (CPS) is to provide a close monitoring of the operation environment to be able to adapt to changing situations effectively. One of the commonly applied techniques for that is to invoke time-constrained periodic application transactions to check the status of the operation environment. The status of the environment is represented by the values of the physical entities in the operation environment which are maintained as real-time data objects in a real-time database. Unfortunately, meeting the deadlines of application transactions and maintaining the quality of real-time data objects are conflicting with each other, because they compete for the same computation resources. To address this problem of update and application transactions co-scheduling problem, in this paper, we propose a fixed priority co-scheduling algorithm called periodic co-scheduling (PCS). PCS uses periodic update transactions to maintain the temporal validity of real-time data objects. It judiciously decides the priority orders among all the update and application transactions so that the constructed schedule can satisfy the deadline constraints of all the application transactions and at the same time maximize the qualities of the real-time data objects to ensure the correct execution of application transactions. The effectiveness of the algorithm is validated through extensive simulation experiments.", "paper_title": "An effective fixed priority co-scheduling algorithm for periodic update and application transactions", "paper_id": "WOS:000325127200005"}