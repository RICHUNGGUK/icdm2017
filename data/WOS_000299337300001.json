{"auto_keywords": [{"score": 0.02448950452522013, "phrase": "fpga"}, {"score": 0.015719352855231617, "phrase": "jit_hardware_compilation"}, {"score": 0.012876881905378312, "phrase": "xilinx"}, {"score": 0.004549063619065006, "phrase": "software_engineering"}, {"score": 0.004479120557712926, "phrase": "program_execution"}, {"score": 0.004275650416511604, "phrase": "machine_code"}, {"score": 0.004102528738941734, "phrase": "local_and_dynamic_information"}, {"score": 0.003997891221012094, "phrase": "modern_fpgas"}, {"score": 0.0038959121068990517, "phrase": "partial_and_dynamic_configuration"}, {"score": 0.003405948098114941, "phrase": "programmable_points"}, {"score": 0.0030872017736888113, "phrase": "relevant_information"}, {"score": 0.0030554300179552415, "phrase": "logarithmic_time"}, {"score": 0.0028273061946184645, "phrase": "practical_case_study"}, {"score": 0.002726740692380339, "phrase": "virtex-ii_pro_fpga_bitstream"}, {"score": 0.002310578855290687, "phrase": "reverse_mapping"}, {"score": 0.0021049977753042253, "phrase": "preliminary_results"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Reconfigurable computing", " FPGA", " bitstream", " dynamic configuration", " hardware compilation", " JIT"], "paper_abstract": "Just-In-Time (JIT) compilation is frequently used in software engineering to accelerate program execution. Parts of the code are translated to machine code at runtime to speedup their execution by exploiting local and dynamic information of the computation. Modern FPGAs manufactured by Xilinx allow partial and dynamic configuration. Such features make them eligible platforms for JIT hardware compilation. Nevertheless, this has not been achieved until now because the mapping between a bitstream and the programmable points inside these FPGAs is not documented. In this article, we propose a methodology to retrieve the relevant information in logarithmic time per bit by methodically using the tools distributed by Xilinx. We give a practical case study which details the analysis of a Virtex-II Pro FPGA bitstream. The mapping of CLBs, BRAMs, and multipliers has been fully determined. Thanks to this information, we have been able to prototype tools in the fields of reverse mapping FPGA bitstreams, low-level simulation, and custom place-and-route. Finally preliminary results demonstrate that a processor embedded in an FPGA can compile, place, and route arithmetic and logic expressions inside the FPGA within a few milliseconds.", "paper_title": "Logarithmic-Time FPGA Bitstream Analysis: A Step Towards JIT Hardware Compilation", "paper_id": "WOS:000299337300001"}