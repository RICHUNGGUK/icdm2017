{"auto_keywords": [{"score": 0.03636633306860624, "phrase": "shrec"}, {"score": 0.029473401040471376, "phrase": "simulated_data"}, {"score": 0.028072446173414194, "phrase": "real_data"}, {"score": 0.00481495049065317, "phrase": "second-generation_sequencing_technologies"}, {"score": 0.004555217356295278, "phrase": "single_experiment"}, {"score": 0.004455272634364756, "phrase": "sequencing_errors"}, {"score": 0.004381749459671914, "phrase": "major_problems"}, {"score": 0.004238307626560739, "phrase": "de_novo_sequencing_applications"}, {"score": 0.004145287175409325, "phrase": "existing_error_correction_methods"}, {"score": 0.003987367359722647, "phrase": "shortgun_sequencing"}, {"score": 0.0038354405231002323, "phrase": "urgent_need"}, {"score": 0.003730465168354817, "phrase": "fast_and_accurate_computational_methods"}, {"score": 0.0036485497734171294, "phrase": "error_correction"}, {"score": 0.003608266640131664, "phrase": "large_amounts"}, {"score": 0.0035684266744407485, "phrase": "short_read_data"}, {"score": 0.003283272764794988, "phrase": "short-read_data"}, {"score": 0.00321114539085481, "phrase": "generalized_suffix"}, {"score": 0.0031405975280029913, "phrase": "read_data"}, {"score": 0.003088702479841264, "phrase": "underlying_data_structure"}, {"score": 0.0029380909574836587, "phrase": "erroneous_reads"}, {"score": 0.0027486060614330043, "phrase": "error_rates"}, {"score": 0.002542890176213921, "phrase": "error_correction_accuracy"}, {"score": 0.0023265270905455334, "phrase": "previously_published_approaches"}, {"score": 0.0022377394845878268, "phrase": "efficient_open-source_java_implementation"}, {"score": 0.0021049977753042253, "phrase": "standard_workstation"}], "paper_keywords": [""], "paper_abstract": "Motivation: Second-generation sequencing technologies produce a massive amount of short reads in a single experiment. However, sequencing errors can cause major problems when using this approach for de novo sequencing applications. Moreover, existing error correction methods have been designed and optimized for shortgun sequencing. Therefore, there is an urgent need for the design of fast and accurate computational methods and tools for error correction of large amounts of short read data. Results: We present SHREC, a new algorithm for correcting errors in short-read data that uses a generalized suffix trie on the read data as the underlying data structure. Our results show that the method can identify erroneous reads with sensitivity and specificity of over 99% and 96% for simulated data with error rates of up to 3% as well as for real data. Furthermore, it achieves an error correction accuracy of over 80% for simulated data and over 88% for real data. These results are clearly superior to previously published approaches. SHREC is available as an efficient open-source Java implementation that allows processing of 10 million of short reads on a standard workstation.", "paper_title": "SHREC: a short-read error correction method", "paper_id": "WOS:000269196000002"}