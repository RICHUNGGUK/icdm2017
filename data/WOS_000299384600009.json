{"auto_keywords": [{"score": 0.04397146767907389, "phrase": "data_cubes"}, {"score": 0.01728849340327522, "phrase": "skyline_operation"}, {"score": 0.009698506757170532, "phrase": "aggregate_function"}, {"score": 0.007152805212424481, "phrase": "skyline_cubes"}, {"score": 0.00481495049065317, "phrase": "computing_data_cubes"}, {"score": 0.004680624753255133, "phrase": "._data_cube"}, {"score": 0.0046018264570209765, "phrase": "key_element"}, {"score": 0.003882970272082245, "phrase": "new_perspective"}, {"score": 0.0035065523764817143, "phrase": "\"aggregate_function"}, {"score": 0.0030955250132409964, "phrase": "analytical_tasks"}, {"score": 0.002859345731792013, "phrase": "data_warehouses"}, {"score": 0.002495521662819317, "phrase": "skyline_cube"}, {"score": 0.0024257447861185813, "phrase": "skyline_dimensions"}], "paper_keywords": ["Query processing", " data warehouse and repository"], "paper_abstract": "Data cube is a key element in supporting fast OLAP. Traditionally, an aggregate function is used to compute the values in data cubes. In this paper, we extend the notion of data cubes with a new perspective. Instead of using an aggregate function, we propose to build data cubes using the skyline operation as the \"aggregate function.\" Data cubes built in this way are called \"group-by skyline cubes\" and can support a variety of analytical tasks. Nevertheless, there are several challenges in implementing group-by skyline cubes in data warehouses: 1) the skyline operation is computational intensive, 2) the skyline operation is holistic, and 3) a group-by skyline cube contains both grouping and skyline dimensions, rendering it infeasible to precompute all cuboids in advance. This paper gives details on how to store, materialize, and query such cubes.", "paper_title": "Measuring the Sky: On Computing Data Cubes via Skylining the Measures", "paper_id": "WOS:000299384600009"}