{"auto_keywords": [{"score": 0.039996948873618106, "phrase": "server_multiplexer"}, {"score": 0.00481495049065317, "phrase": "work-conserving_blind_multiplexing_server"}, {"score": 0.004633888966463624, "phrase": "service_guarantees"}, {"score": 0.004594582559945568, "phrase": "aggregate_multiplexing"}, {"score": 0.004421770937919324, "phrase": "networking_community"}, {"score": 0.004291848822287492, "phrase": "flow-based_scheduling"}, {"score": 0.0040779081518317415, "phrase": "flow-based_multiplexing"}, {"score": 0.003958049372486465, "phrase": "aggregate-based_multiplexing"}, {"score": 0.0036501160751879784, "phrase": "traffic_aggregation"}, {"score": 0.003239304090565123, "phrase": "work-conserving_fashion"}, {"score": 0.00317095235382607, "phrase": "best_arrival_curves"}, {"score": 0.0029871209444889716, "phrase": "time_interval"}, {"score": 0.002936577024096783, "phrase": "individual_flow"}, {"score": 0.002754516260621121, "phrase": "complex_scenarios"}, {"score": 0.002617007341172262, "phrase": "maximum_size"}, {"score": 0.002550842302473891, "phrase": "different_servers"}, {"score": 0.0025291601927956765, "phrase": "previous_results"}, {"score": 0.0025076619172878945, "phrase": "tight_delay_bounds"}, {"score": 0.0024234763342790852, "phrase": "fifo_type"}, {"score": 0.002362192695471035, "phrase": "tight_bounds"}, {"score": 0.002332133125576037, "phrase": "work-conserving_scheduling_policy"}, {"score": 0.0022442249871042026, "phrase": "heterogeneous_networks"}, {"score": 0.002159623311924437, "phrase": "different_work"}, {"score": 0.002132135985573126, "phrase": "scheduling_policies"}], "paper_keywords": ["performance evaluation", " aggregate scheduling", " blind multiplexing", " arrival curve", " QoS"], "paper_abstract": "As a means of supporting quality of service guarantees, aggregate multiplexing has attracted a lot of attention in the networking community, since it requires less complexity than flow-based scheduling. However, contrary to what happens in the case of flow-based multiplexing, a few results are available for aggregate-based multiplexing. In this paper, we consider a server multiplexer fed by several flows and analyze the impact caused by traffic aggregation on the flows at the output of the server. No restriction is imposed on the server multiplexer other than the fact that it must operate in a work-conserving fashion. We characterize the best arrival curves that constrain the number of bits that leave the server, in any time interval, for each individual flow. These curves can be used to obtain the delays suffered by packets in complex scenarios where multiplexers are interconnected, as well as to determine the maximum size of the buffers in the different servers. Previous results provide tight delay bounds for networks where servers are of the FIFO type. Here, we provide tight bounds for any work-conserving scheduling policy, so that our results can be applied to heterogeneous networks where the servers (routers) can use different work-conserving scheduling policies such as First-In First-Out (FIFO), Earliest Deadline First (EDF), Strict Priority (SP), Guaranteed Rate scheduling (GR), etc.", "paper_title": "Tight Arrival Curve at the Output of a Work-Conserving Blind Multiplexing Server", "paper_id": "WOS:000276558800003"}