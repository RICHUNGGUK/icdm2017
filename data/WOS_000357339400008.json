{"auto_keywords": [{"score": 0.049750469707859776, "phrase": "dynamic_partial_reconfiguration"}, {"score": 0.03705671821021197, "phrase": "dpr_region"}, {"score": 0.030731841359398184, "phrase": "different_circuits"}, {"score": 0.029223440443155526, "phrase": "static_part"}, {"score": 0.00481495049065317, "phrase": "configuration_sharing"}, {"score": 0.004479120557712926, "phrase": "considerable_area"}, {"score": 0.004327500975159818, "phrase": "long_reconfiguration_time"}, {"score": 0.004224418476742716, "phrase": "significant_problem"}, {"score": 0.003849218421898053, "phrase": "dpr"}, {"score": 0.003757480190200645, "phrase": "configuration_bits"}, {"score": 0.003555902292752528, "phrase": "configuration_frames"}, {"score": 0.003173545808843704, "phrase": "completely_unrelated_circuits"}, {"score": 0.00307657476125683, "phrase": "pathfinder_algorithm"}, {"score": 0.003044912038752554, "phrase": "staticroute"}, {"score": 0.0026893753781434618, "phrase": "dynamic_part"}, {"score": 0.0025981810951165836, "phrase": "commercially_available_sram-based_fpga."}, {"score": 0.002527451565708784, "phrase": "configuration_memory"}, {"score": 0.002467140591777737, "phrase": "associated_impact"}, {"score": 0.0024501740852758505, "phrase": "maximum_operating_clock_frequency"}, {"score": 0.002294686545883412, "phrase": "routing_configuration"}, {"score": 0.0022476609946536345, "phrase": "routing_reconfiguration_time"}, {"score": 0.0022015970225369957, "phrase": "significant_impact"}, {"score": 0.0021864526544323163, "phrase": "maximum_clock_frequency"}, {"score": 0.0021049977753042253, "phrase": "total_reconfiguration_time"}], "paper_keywords": ["FPGA", " Routing", " Dynamic partial reconfiguration"], "paper_abstract": "Using dynamic partial reconfiguration (DPR), several circuits can be time-multiplexed on the same FPGA region, saving considerable area compared to an implementation without DPR. However, the long reconfiguration time to switch between circuits remains a significant problem. In this work we show that it is possible to significantly reduce this overhead when the number of circuits is limited. We lower the DPR overhead by reducing the number of configuration bits that needs to be reconfigured. This is achieved by keeping a (predetermined) part of the configuration frames of the DPR region constant/static for all circuits and, consequentially, sharing this part of the configuration between all the circuits. We show that this can be done maintaining the possibility to implement completely unrelated circuits in the DPR region. An extension of the Pathfinder algorithm, called StaticRoute, is presented. It is able to route the nets of the different circuits simultaneously in such a way that the routing of the different circuits is the same in the static part and may only differ in the dynamic part. Our approach is evaluated on the architecture of a commercially available SRAM-based FPGA. We explore how the static part in the configuration memory is best chosen and investigate the associated impact on maximum operating clock frequency as the number of circuits increases. Our experiments show that it is possible to make 50 % of the routing configuration static and therefore reduce the routing reconfiguration time by 50 %, without a significant impact on maximum clock frequency of the circuits. This corresponds to a reduction of total reconfiguration time of 34 %.", "paper_title": "Enabling FPGA routing configuration sharing in dynamic partial reconfiguration", "paper_id": "WOS:000357339400008"}