{"auto_keywords": [{"score": 0.04080400792646588, "phrase": "hardware_heterogeneity"}, {"score": 0.02719781471476646, "phrase": "scheduler's_ability"}, {"score": 0.00481495049065317, "phrase": "scheduling_technique"}, {"score": 0.004770461993586338, "phrase": "multi-job_mapreduce_workloads"}, {"score": 0.004617949594931096, "phrase": "performance_models"}, {"score": 0.004554082077300675, "phrase": "executing_workloads"}, {"score": 0.004388035083357706, "phrase": "scheduling_purposes"}, {"score": 0.004208427318712072, "phrase": "workload_performance"}, {"score": 0.00399881984083004, "phrase": "execution_environment"}, {"score": 0.003961842092184655, "phrase": "modern_data_analytics_applications"}, {"score": 0.0037296509687792865, "phrase": "highly_dynamic_environment"}, {"score": 0.003678023470672862, "phrase": "new_jobs"}, {"score": 0.0034947408949397127, "phrase": "mapreduce_workloads"}, {"score": 0.0034624082435775676, "phrase": "physical_resources"}, {"score": 0.003367188029221534, "phrase": "actual_amount"}, {"score": 0.0029699874949715367, "phrase": "working_prototype"}, {"score": 0.0029288446848334576, "phrase": "adaptive_scheduler"}, {"score": 0.002795762692061496, "phrase": "medium-sized_clusters"}, {"score": 0.002523828967909659, "phrase": "high-level_performance_goals"}, {"score": 0.0024772998651215964, "phrase": "user-defined_completion_time_goals"}, {"score": 0.0023537101705489957, "phrase": "scheduling_algorithm"}, {"score": 0.0022258906408344973, "phrase": "hardware_affinity"}, {"score": 0.0022052711621931144, "phrase": "relative_performance_characterization"}, {"score": 0.0021049977753042253, "phrase": "specialized_processors"}], "paper_keywords": ["MapReduce", " performance management", " task scheduling"], "paper_abstract": "This paper presents a scheduling technique for multi-job MapReduce workloads that is able to dynamically build performance models of the executing workloads, and then use these models for scheduling purposes. This ability is leveraged to adaptively manage workload performance while observing and taking advantage of the particulars of the execution environment of modern data analytics applications, such as hardware heterogeneity and distributed storage. The technique targets a highly dynamic environment in which new jobs can be submitted at any time, and in which MapReduce workloads share physical resources with other workloads. Thus the actual amount of resources available for applications can vary over time. Beyond the formulation of the problem and the description of the algorithm and technique, a working prototype (called Adaptive Scheduler) has been implemented. Using the prototype and medium-sized clusters (of the order of tens of nodes), the following aspects have been studied separately: the scheduler's ability to meet high-level performance goals guided only by user-defined completion time goals; the scheduler's ability to favor data-locality in the scheduling algorithm; and the scheduler's ability to deal with hardware heterogeneity, which introduces hardware affinity and relative performance characterization for those applications that can benefit from executing on specialized processors.", "paper_title": "Deadline-Based MapReduce Workload Management", "paper_id": "WOS:000209724000010"}