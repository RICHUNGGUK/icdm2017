{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mpi_processes"}, {"score": 0.00475070135279933, "phrase": "shared_address_spaces"}, {"score": 0.004237925318473508, "phrase": "mpi_to_leverage_shared_memory"}, {"score": 0.0038833278847237858, "phrase": "mpi_collectives"}, {"score": 0.003780286517897356, "phrase": "numa_nodes"}, {"score": 0.003679969180334367, "phrase": "performance_models"}, {"score": 0.00363080961099728, "phrase": "collective_communication"}, {"score": 0.0035823043879169153, "phrase": "shared_memory"}, {"score": 0.003216804708106142, "phrase": "infiniband_clusters"}, {"score": 0.0029873281676201565, "phrase": "different_algorithms"}, {"score": 0.002927626967420519, "phrase": "short_vectors"}, {"score": 0.002888488567436329, "phrase": "long_vectors"}, {"score": 0.002558909812664716, "phrase": "interprocess_communication"}, {"score": 0.002297585503415527, "phrase": "best_mpi_implementation"}, {"score": 0.0021917966722180132, "phrase": "efficient_implementation"}, {"score": 0.0021624739899833868, "phrase": "collective_operations"}, {"score": 0.0021335427588412056, "phrase": "future_multi-"}, {"score": 0.0021049977753042253, "phrase": "manycore_systems"}], "paper_keywords": ["MPI", " Multithreading", " MPI_Allreduce", " Collective communication", " NUMA"], "paper_abstract": "As the number of cores per node keeps increasing, it becomes increasingly important for MPI to leverage shared memory for intranode communication. This paper investigates the design and optimization of MPI collectives for clusters of NUMA nodes. We develop performance models for collective communication using shared memory and we demonstrate several algorithms for various collectives. Experiments are conducted on both Xeon X5650 and Opteron 6100 InfiniBand clusters. The measurements agree with the model and indicate that different algorithms dominate for short vectors and long vectors. We compare our shared-memory allreduce with several MPI implementations-Open MPI, MPICH2, and MVAPICH2-that utilize system shared memory to facilitate interprocess communication. On a 16-node Xeon cluster and 8-node Opteron cluster, our implementation achieves on geometric average 2.3X and 2.1X speedup over the best MPI implementation, respectively. Our techniques enable an efficient implementation of collective operations on future multi- and manycore systems.", "paper_title": "Improved MPI collectives for MPI processes in shared address spaces", "paper_id": "WOS:000345077400004"}