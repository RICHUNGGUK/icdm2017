{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mas"}, {"score": 0.040667617042900346, "phrase": "rtos"}, {"score": 0.015479845057861407, "phrase": "control_system_design_method"}, {"score": 0.011327801150198569, "phrase": "embedded_system"}, {"score": 0.004668059458774745, "phrase": "robot_development_paradigm"}, {"score": 0.004525629293824217, "phrase": "mas_based_embedded_control_system_design_method"}, {"score": 0.004342430078306461, "phrase": "local_controller"}, {"score": 0.004188198923320451, "phrase": "mas_viewpoint"}, {"score": 0.004123781267600542, "phrase": "practical_system"}, {"score": 0.003916098498242888, "phrase": "multitasking_capability"}, {"score": 0.0037188360359702182, "phrase": "system_service"}, {"score": 0.0036052633308076933, "phrase": "mas's_coordination_mechanism"}, {"score": 0.003405948098114941, "phrase": "new_tele-operation_mobile_robot"}, {"score": 0.0032510690712452147, "phrase": "development_example"}, {"score": 0.0031354779851351287, "phrase": "improved_mas_based_manipulator_control_method"}, {"score": 0.0027982016314450717, "phrase": "whole_development_process"}, {"score": 0.002670884656785558, "phrase": "agents'_partitions"}, {"score": 0.0026297428083782875, "phrase": "mas_design"}, {"score": 0.0025892330566358503, "phrase": "actual_hardware"}, {"score": 0.0025625729433234623, "phrase": "firmware_architectures_design"}, {"score": 0.0023834640793589414, "phrase": "development_procedure"}, {"score": 0.002358917661465133, "phrase": "high_efficiency"}, {"score": 0.0023346234464901978, "phrase": "clear_hierarchy"}, {"score": 0.002298649369775623, "phrase": "ultimate_goal"}, {"score": 0.0022168460543913787, "phrase": "seamless_routes"}, {"score": 0.002194011800331242, "phrase": "system_specifications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["embedded system", " agent", " MAS", " RTOS", " robot"], "paper_abstract": "This paper summarizes a MAS based embedded control system design method for complex mechatronic system. Regarding the local controller as an agent-task and based on MAS viewpoint, a practical system can be modeled in firmware/software level. By using the multitasking capability of RTOS to realize the agent-tasks and using the system service of RTOS to construct the MAS's coordination mechanism, we can implement the MAS in embedded system. A new tele-operation mobile robot, named PBJ-2, is introduced as a development example to explain this method. An improved MAS based manipulator control method is also presented in detail. The PBJ-2's controller is built as an embedded system that running RTOS on an ARM7/TDMI-S microcontroller. The whole development process is introduced in this paper, from the agents' partitions and the MAS design to the actual hardware and firmware architectures design, in detail. By using the MAS based embedded control system design method, the development procedure is high efficiency and clear hierarchy. The ultimate goal of the work is to get seamless routes from system specifications to its implementation. (C) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "MAS based embedded control system design method and a robot development paradigm", "paper_id": "WOS:000238662100002"}