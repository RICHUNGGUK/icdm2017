{"auto_keywords": [{"score": 0.04648667566882705, "phrase": "depot"}, {"score": 0.00481495049065317, "phrase": "minimal_trust"}, {"score": 0.0042459818200777846, "phrase": "trust_assumptions"}, {"score": 0.004096082254543022, "phrase": "malicious_behavior"}, {"score": 0.0037664981403399064, "phrase": "liveness_guarantees"}, {"score": 0.003526186748088922, "phrase": "two-layer_architecture"}, {"score": 0.0033011569787033297, "phrase": "correct_nodes"}, {"score": 0.0032036590920314725, "phrase": "fork-join-causal_consistency"}, {"score": 0.0031090323255451827, "phrase": "fjc"}, {"score": 0.003053598205821532, "phrase": "slight_weakening"}, {"score": 0.0030171910207671205, "phrase": "causal_consistency"}, {"score": 0.0028586409810976367, "phrase": "faulty_nodes"}, {"score": 0.002692200353719145, "phrase": "consistent_ordering"}, {"score": 0.0022085455097790537, "phrase": "good_availability"}, {"score": 0.0021049977753042253, "phrase": "significant_faults"}], "paper_keywords": ["Design", " Algorithms", " Reliability", " Experimentation", " Security", " Cloud storage", " Byzantine fault tolerance", " Fork-Join-Causal (FJC) consistency", " fork consistency"], "paper_abstract": "This article describes the design, implementation, and evaluation of Depot, a cloud storage system that minimizes trust assumptions. Depot tolerates buggy or malicious behavior by any number of clients or servers, yet it provides safety and liveness guarantees to correct clients. Depot provides these guarantees using a two-layer architecture. First, Depot ensures that the updates observed by correct nodes are consistently ordered under Fork-Join-Causal consistency (FJC). FJC is a slight weakening of causal consistency that can be both safe and live despite faulty nodes. Second, Depot implements protocols that use this consistent ordering of updates to provide other desirable consistency, staleness, durability, and recovery properties. Our evaluation suggests that the costs of these guarantees are modest and that Depot can tolerate faults and maintain good availability, latency, overhead, and staleness even when significant faults occur.", "paper_title": "Depot: Cloud Storage with Minimal Trust", "paper_id": "WOS:000298638000003"}