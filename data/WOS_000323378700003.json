{"auto_keywords": [{"score": 0.04825672074097718, "phrase": "olap_systems"}, {"score": 0.00481495049065317, "phrase": "olap_cubes"}, {"score": 0.004704187604192605, "phrase": "appropriate_conceptual_model"}, {"score": 0.004667833113864304, "phrase": "data_warehouses"}, {"score": 0.004490212943845175, "phrase": "logical_models"}, {"score": 0.004236321075918639, "phrase": "conceptual_models"}, {"score": 0.0042035670399069485, "phrase": "er_model_extensions"}, {"score": 0.004171110440010944, "phrase": "uml"}, {"score": 0.003950453462399077, "phrase": "conceptual_approaches"}, {"score": 0.00354349559754076, "phrase": "high_learning_curve"}, {"score": 0.0033952989364738353, "phrase": "associated_operations"}, {"score": 0.0031171827624599693, "phrase": "logical_model"}, {"score": 0.0030810605918297584, "phrase": "essential_drawback"}, {"score": 0.003033546013625887, "phrase": "system-centric_view"}, {"score": 0.002998390117435555, "phrase": "user_concept"}, {"score": 0.002963640433319524, "phrase": "knowledge_workers"}, {"score": 0.0029066143383279217, "phrase": "full_and_overwhelming_complexity"}, {"score": 0.002731381261399358, "phrase": "sql_olap"}, {"score": 0.0027102313244646934, "phrase": "mdx."}, {"score": 0.002617059777997427, "phrase": "user-centric_conceptual_model"}, {"score": 0.0024880904032564583, "phrase": "cube_metaphor"}, {"score": 0.002440192402613492, "phrase": "knowledge_worker"}, {"score": 0.002421291757425244, "phrase": "high-level_cube_objects"}, {"score": 0.0023654615987859402, "phrase": "novel_query_language"}, {"score": 0.0023471384232499016, "phrase": "well_known_high-level_operations"}, {"score": 0.0021463304704817873, "phrase": "logical_and_physical_levels"}, {"score": 0.0021049977753042253, "phrase": "unskilled_end_user"}], "paper_keywords": ["Conceptual Model", " Cube", " Data Warehouses", " OLAP", " Query Language", " User-Centric Model"], "paper_abstract": "The lack of an appropriate conceptual model for data warehouses and OLAP systems has led to the tendency to deploy logical models (for example, star, snowflake, and constellation schemas) for them as conceptual models. ER model extensions, UML extensions, special graphical user interfaces, and dashboards have been proposed as conceptual approaches. However, they introduce their own problems, are somehow complex and difficult to understand, and are not always user-friendly. They also require a high learning curve, and most of them address only structural design, not considering associated operations. Therefore, they are not really an improvement and, in the end, only represent a reflection of the logical model. The essential drawback of offering this system-centric view as a user concept is that knowledge workers are confronted with the full and overwhelming complexity of these systems as well as complicated and user-unfriendly query languages such as SQL OLAP and MDX. In this article, the authors propose a user-centric conceptual model for data warehouses and OLAP systems, called the Cube Algebra. It takes the cube metaphor literally and provides the knowledge worker with high-level cube objects and related concepts. A novel query language leverages well known high-level operations such as roll-up, drill-down, slice, and drill-across. As a result, the logical and physical levels are hidden from the unskilled end user.", "paper_title": "Cube Algebra: A Generic User-Centric Model and Query Language for OLAP Cubes", "paper_id": "WOS:000323378700003"}