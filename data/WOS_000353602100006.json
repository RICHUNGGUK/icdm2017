{"auto_keywords": [{"score": 0.04116860669760729, "phrase": "critical_predicates"}, {"score": 0.034086632914045366, "phrase": "hmps"}, {"score": 0.00794702834190535, "phrase": "multiple_predicate_instances"}, {"score": 0.00481495049065317, "phrase": "hierarchical_multiple_predicate_switching"}, {"score": 0.0045804107341714, "phrase": "predicate_instance"}, {"score": 0.004437115547184535, "phrase": "root_cause"}, {"score": 0.004357245559948974, "phrase": "switched_predicate"}, {"score": 0.003996983218174335, "phrase": "single_predicate_switching"}, {"score": 0.003802135020791801, "phrase": "five_real-life_utility_programs"}, {"score": 0.003503497128638099, "phrase": "possible_combinations"}, {"score": 0.0034717929086014636, "phrase": "predicate_instances"}, {"score": 0.003378385493203297, "phrase": "exponential_explosion"}, {"score": 0.0032725712584012953, "phrase": "hierarchical_multiple_predicate_switching_technique"}, {"score": 0.0029610472910087176, "phrase": "highly_suspect_functions"}, {"score": 0.0029076695661972114, "phrase": "spectrum-based_fault_localization_techniques"}, {"score": 0.0027910516355928983, "phrase": "switch_combination"}, {"score": 0.0026548344763838213, "phrase": "empirical_studies"}, {"score": 0.0022537212268979507, "phrase": "executed_code"}, {"score": 0.002213065910356615, "phrase": "barinel_and_ochiai_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Fault localization", " Predicate", " Multiple predicate switching"], "paper_abstract": "Single predicate switching forcibly changes the state of a predicate instance at runtime and then identifies the root cause by examining the switched predicate, called critical predicate. However, switching one predicate instance has its limitations: in our experiments, we found that single predicate switching can only find critical predicates for 88 out of 300 common bugs in five real-life utility programs. For other 212 bugs, overcoming them may require switching multiple predicate instances. Nonetheless, taking all possible combinations of predicate instances into consideration will result in exponential explosion. Therefore, we propose a hierarchical multiple predicate switching technique, called HMPS, to locate faults effectively. Specifically, HMPS restricts the search for critical predicates to the scope of highly suspect functions identified by employing spectrum-based fault localization techniques. Besides, instrumentation methods and strategies for switch combination are presented to facilitate the search for critical predicates. The empirical studies show that HMPS is able to find critical predicates for 111 out of 212 bugs mentioned above through switching multiple predicate instances. In addition, HMPS captures 62% of these 300 bugs when examining up to 1% of the executed code, while the Barinel and Ochiai approaches locate 18% and 16% respectively. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Automated fault localization via hierarchical multiple predicate switching", "paper_id": "WOS:000353602100006"}