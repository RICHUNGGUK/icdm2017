{"auto_keywords": [{"score": 0.05007772029816952, "phrase": "repeated_optimizer_estimations"}, {"score": 0.04888818798303966, "phrase": "isp"}, {"score": 0.026971067664940052, "phrase": "proposed_algorithm"}, {"score": 0.004742730438544081, "phrase": "index_selection_problem"}, {"score": 0.0045324756541157574, "phrase": "appropriate_index"}, {"score": 0.004419703921314433, "phrase": "total_cost"}, {"score": 0.004016072233242585, "phrase": "np-hard_problem"}, {"score": 0.0038964032225585117, "phrase": "heuristic_algorithms"}, {"score": 0.0038379074449947067, "phrase": "approximate_solutions"}, {"score": 0.00376127170364341, "phrase": "even_approximate_algorithms"}, {"score": 0.0036861605703168397, "phrase": "large_amount"}, {"score": 0.0036491673002304326, "phrase": "computing_time"}, {"score": 0.0036125439380579626, "phrase": "disk_space"}, {"score": 0.003487222504700868, "phrase": "query_statements"}, {"score": 0.003216804708106142, "phrase": "considered_index"}, {"score": 0.0031208772639433145, "phrase": "novel_algorithm"}, {"score": 0.002952356518921907, "phrase": "database_system"}, {"score": 0.0027788478707700274, "phrase": "access_path"}, {"score": 0.0026554236621262515, "phrase": "evaluation_stage"}, {"score": 0.0025761937402886954, "phrase": "limited_space"}, {"score": 0.0024493494346360415, "phrase": "readily_available_information"}, {"score": 0.0022937210378944457, "phrase": "post-gresql_database_system"}, {"score": 0.002270671403480622, "phrase": "tpc-h"}, {"score": 0.0022365262201954643, "phrase": "experimental_results"}, {"score": 0.0021697677572213086, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Database management system (DBMS)", " Index selection problem (ISP)", " Performance tuning", " Configuration recommendation", " Optimizer"], "paper_abstract": "The index selection problem (ISP) concerns the selection of an appropriate index set to minimize the total cost for a given workload containing read and update queries. Since the ISP has been proven to be an NP-hard problem, most studies focus on heuristic algorithms to obtain approximate solutions. However, even approximate algorithms still consume a large amount of computing time and disk space because these systems must record all query statements and frequently request from the database optimizers the cost estimation of each query in each considered index. This study proposes a novel algorithm without repeated optimizer estimations. When a query is delivered to a database system, the optimizer evaluates the costs of various query plans and chooses an access path for the query. The information from the evaluation stage is aggregated and recorded with limited space. The proposed algorithm can recommend indexes according to the readily available information without querying the optimizer again. The proposed algorithm was tested in a Post-greSQL database system using TPC-H data. Experimental results show the effectiveness of the proposed approach. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "An index selection method without repeated optimizer estimations", "paper_id": "WOS:000266216100015"}