{"auto_keywords": [{"score": 0.0399982426143156, "phrase": "dynamic_reconfiguration"}, {"score": 0.03332169746093553, "phrase": "new_protocols"}, {"score": 0.00481495049065317, "phrase": "dynamic_reconfigurable_protocol_stacks"}, {"score": 0.004721893473387288, "phrase": "networked_systems"}, {"score": 0.004227398267369744, "phrase": "different_situations"}, {"score": 0.003986844722309844, "phrase": "protocol_stack"}, {"score": 0.0035458802311188497, "phrase": "peer_stack"}, {"score": 0.003194898129853895, "phrase": "safe_state"}, {"score": 0.002804478352027886, "phrase": "software_framework"}, {"score": 0.002679386232765167, "phrase": "distributed_algorithm"}, {"score": 0.0024939618994290016, "phrase": "present_art"}], "paper_keywords": ["protocol stack", " protocol component", " dynamic reconfiguration", " single and distributed reconfiguration", " safe reconfiguration point", " state transfer"], "paper_abstract": "Forthcoming networked systems require mechanisms for on-the-fly reconfiguration in their protocol stacks to be able to operate in different situations and networks. Since every protocol in a protocol stack has at least one peer protocol in another system, dynamic reconfiguration of a protocol raises the need for reconfiguration in the peer stack. For art assured dynamic (run-time) reconfiguration, executions of two peer protocols are stopped in a safe state, new protocols are initialized, and stacks switch to the new protocols at the same time. This paper proposes a software framework for dynamic reconfiguration of two communicating protocol stacks, A distributed algorithm is implemented in the framework of two communicating stacks in order to present art assured and synchronous reconfiguration of protocols. For demonstration, we have implemented a prototype of the framework and the algorithm to reconfigure two communicating TCP components by their Secure version.", "paper_title": "DRAPS: A Framework for Dynamic Reconfigurable Protocol Stacks", "paper_id": "WOS:000266302900012"}