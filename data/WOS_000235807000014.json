{"auto_keywords": [{"score": 0.02855498861512644, "phrase": "case_study"}, {"score": 0.004814955496608903, "phrase": "atl."}, {"score": 0.00457553517865013, "phrase": "atlas_transformation_language"}, {"score": 0.004392565073466714, "phrase": "hybrid_model_transformation_language"}, {"score": 0.0041316803676012155, "phrase": "imperative_constructs"}, {"score": 0.003926105480202798, "phrase": "transformation_definitions"}, {"score": 0.0036928221419965253, "phrase": "language_syntax"}, {"score": 0.0034380719149777173, "phrase": "atl"}, {"score": 0.0032008144731234265, "phrase": "development_tools"}, {"score": 0.002889928791032578, "phrase": "virtual_machine"}, {"score": 0.002453934333239467, "phrase": "alternative_ways"}, {"score": 0.0021705796895687864, "phrase": "current_features"}, {"score": 0.0021049977753042253, "phrase": "planned_future_atl_features"}], "paper_keywords": [""], "paper_abstract": "This paper presents ATL (ATLAS Transformation Language): a hybrid model transformation language that allows both declarative and imperative constructs to be used in transformation definitions. The paper describes the language syntax and semantics by using examples. ATL is supported by a set of development tools such as an editor, a compiler, a virtual machine, and a debugger. A case study shows the applicability of the language constructs. Alternative ways for implementing the case study are outlined. In addition to the current features, the planned future ATL features are briefly discussed.", "paper_title": "Transforming models with ATL", "paper_id": "WOS:000235807000014"}