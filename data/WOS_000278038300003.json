{"auto_keywords": [{"score": 0.04838919478929022, "phrase": "ctc"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_multicore_systems"}, {"score": 0.004550669123303854, "phrase": "novel_end-to-end_flow_control_protocol"}, {"score": 0.004367581653370531, "phrase": "best-effort_networks"}, {"score": 0.0042351056371600065, "phrase": "noc"}, {"score": 0.0041703614123283165, "phrase": "embedded_multicore_systems"}, {"score": 0.0038810583785936505, "phrase": "classic_end-to-end_credit-based_flow_control_protocol"}, {"score": 0.003611751858608048, "phrase": "single_credit_counter"}, {"score": 0.0035565113234273926, "phrase": "single_input_data_queue"}, {"score": 0.0034663083890589235, "phrase": "possible_communications"}, {"score": 0.003413284742632989, "phrase": "architectural_simplification"}, {"score": 0.003361069456060196, "phrase": "area_occupation"}, {"score": 0.0033096502887394233, "phrase": "network_interfaces"}, {"score": 0.002955782731675529, "phrase": "incoming_and_outgoing_communications"}, {"score": 0.002836679611901583, "phrase": "handshake_preamble"}, {"score": 0.0027789349951704177, "phrase": "credit_counter"}, {"score": 0.0027363971333961967, "phrase": "sender_network_interface"}, {"score": 0.0026806884201358537, "phrase": "buffering_capacity"}, {"score": 0.00263965046277432, "phrase": "receiver_network_interface"}, {"score": 0.002546315584783112, "phrase": "latency_overhead"}, {"score": 0.002443671484766342, "phrase": "simulation-based_experimental_results"}, {"score": 0.0023211517663846346, "phrase": "large_messages"}, {"score": 0.002159852420283463, "phrase": "particular_classes"}, {"score": 0.0021049977753042253, "phrase": "video_stream_processing"}], "paper_keywords": ["End-to-end flow control", " message-dependent deadlock", " multicore systems-on-chip (SoC)", " network interface design", " networks-on-chip (NoC)"], "paper_abstract": "Connection-then-credits (CTC) is a novel end-to-end flow control protocol to handle message-dependent deadlocks in best-effort networks-on-chip (NoC) for embedded multicore systems-on-chip (SoCs). CTC is based on the classic end-to-end credit-based flow control protocol but differs from it because it uses a network interface microarchitecture where a single credit counter and a single input data queue are shared among all possible communications. This architectural simplification reduces the area occupation of the network interfaces and increases their design reuse; for instance, the same network interface can be used to connect a core independently of the number of incoming and outgoing communications. CTC, however, requires a handshake preamble to initialize the credit counter in the sender network interface based on the buffering capacity of the receiver network interface. While this necessarily introduces a latency overhead in the transfer of a message, simulation-based experimental results show that the penalty in performance is limited when large messages need to be transferred, thus, making CTC a valid solution for particular classes of applications such as video stream processing.", "paper_title": "The Connection-Then-Credit Flow Control Protocol for Heterogeneous Multicore Systems-on-Chip", "paper_id": "WOS:000278038300003"}