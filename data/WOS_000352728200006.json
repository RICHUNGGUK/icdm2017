{"auto_keywords": [{"score": 0.04960770684597513, "phrase": "cura"}, {"score": 0.00481495049065317, "phrase": "new_mapreduce_cloud_service_model"}, {"score": 0.0046741260449047976, "phrase": "cost-effective_mapreduce_services"}, {"score": 0.004492717291734985, "phrase": "existing_mapreduce_cloud_services"}, {"score": 0.004404658750724105, "phrase": "generic_compute_cloud"}, {"score": 0.004339744430169516, "phrase": "dedicated_mapreduce_cloud"}, {"score": 0.00419195822011581, "phrase": "unique_benefits"}, {"score": 0.003989487818395848, "phrase": "cost-effective_solution"}, {"score": 0.003911253966141701, "phrase": "mapreduce_production_workloads"}, {"score": 0.003834548373258131, "phrase": "significant_amount"}, {"score": 0.0037967593942595233, "phrase": "interactive_jobs"}, {"score": 0.0037039021744127783, "phrase": "existing_services"}, {"score": 0.0033545600622020464, "phrase": "best_cluster_configuration"}, {"score": 0.0032402142645120958, "phrase": "existing_models"}, {"score": 0.00308357048262018, "phrase": "globally_efficient_resource_allocation_scheme"}, {"score": 0.0030081030319492343, "phrase": "resource_usage_cost"}, {"score": 0.0028768722873689432, "phrase": "unique_optimization_opportunities"}, {"score": 0.002670719148310961, "phrase": "available_cloud_resources"}, {"score": 0.002579622880371082, "phrase": "job_requirements"}, {"score": 0.0025289662786567896, "phrase": "significantly_lower_resource_usage_costs"}, {"score": 0.002467038647952607, "phrase": "cura's_core_resource_management_schemes"}, {"score": 0.002442693254693416, "phrase": "cost-aware_resource_provisioning"}, {"score": 0.0024185958072972273, "phrase": "vm"}, {"score": 0.002278856202878812, "phrase": "facebook-like_workload_traces"}, {"score": 0.002147180332779021, "phrase": "infrastructure_cost"}, {"score": 0.0021049977753042253, "phrase": "job_response_times"}], "paper_keywords": ["MapReduce", " cloud computing", " cost-effectiveness", " scheduling"], "paper_abstract": "This paper presents a new MapReduce cloud service model, Cura, for provisioning cost-effective MapReduce services in a cloud. In contrast to existing MapReduce cloud services such as a generic compute cloud or a dedicated MapReduce cloud, Cura has a number of unique benefits. First, Cura is designed to provide a cost-effective solution to efficiently handle MapReduce production workloads that have a significant amount of interactive jobs. Second, unlike existing services that require customers to decide the resources to be used for the jobs, Cura leverages MapReduce profiling to automatically create the best cluster configuration for the jobs. While the existing models allow only a per-job resource optimization for the jobs, Cura implements a globally efficient resource allocation scheme that significantly reduces the resource usage cost in the cloud. Third, Cura leverages unique optimization opportunities when dealing with workloads that can withstand some slack. By effectively multiplexing the available cloud resources among the jobs based on the job requirements, Cura achieves significantly lower resource usage costs for the jobs. Cura's core resource management schemes include cost-aware resource provisioning, VM-aware scheduling and online virtual machine reconfiguration. Our experimental results using Facebook-like workload traces show that our techniques lead to more than 80 percent reduction in the cloud compute infrastructure cost with upto 65 percent reduction in job response times.", "paper_title": "Cost-Effective Resource Provisioning for MapReduce in a Cloud", "paper_id": "WOS:000352728200006"}