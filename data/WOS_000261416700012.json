{"auto_keywords": [{"score": 0.015182401158983217, "phrase": "nlog"}, {"score": 0.00481495049065317, "phrase": "monotone_boolean_circuits"}, {"score": 0.0047310525657970615, "phrase": "large_class"}, {"score": 0.004567596860086148, "phrase": "boolean_functions"}, {"score": 0.004257360656055417, "phrase": "upper_bound"}, {"score": 0.0033277936960179892, "phrase": "monotone_boolean_function_f"}, {"score": 0.002725832136165807, "phrase": "boolean"}, {"score": 0.0021805201234139475, "phrase": "f-easy_for"}, {"score": 0.0021550502873107654, "phrase": "arbitrary_monotone_function"}], "paper_keywords": ["Circuit complexity", " Monotone circuit", " Negation-limited circuit", " Majority function", " Merging function"], "paper_abstract": "The large class, say NLOG, of Boolean functions, including 0-1 Sort and 0-1 Merge, have an upper bound of O(n log n) for their monotone circuit size, i.e., they have circuits with O(n log n) AND/OR gates of fan-in two. Suppose that we can use, besides such normal AND/OR gates, any number of more powerful \"F-gates\" which realize a monotone Boolean function F with r(>= 2) inputs and r'(>= 1) outputs. Note that the cost of each AND/OR gate is one and we assume that the cost of each F-gate is r. Now we define: A Boolean function f in NLOG is said to be F-Easy if f can be constructed by a circuit with AND/OR/F gates whose total cost is o(n log n). In this paper we show that 0-1 Merge is not F-Easy for an arbitrary monotone function F such that r' >= r/ log r. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Reductions for monotone Boolean circuits", "paper_id": "WOS:000261416700012"}