{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "algorithmic_problem"}, {"score": 0.0046394362688524475, "phrase": "maximal_simulation_preorder"}, {"score": 0.004388035083357706, "phrase": "acyclic_labelled_graphs"}, {"score": 0.004073809704022463, "phrase": "inner_structure"}, {"score": 0.0035110198699787013, "phrase": "set-theoretic_notion"}, {"score": 0.003199345207727474, "phrase": "bisimulation_computation"}, {"score": 0.0028882701690741467, "phrase": "ensuing_procedure"}, {"score": 0.0024658019116387845, "phrase": "algorithmic_idea"}, {"score": 0.0023537101705489957, "phrase": "computational_complexity"}, {"score": 0.0021848422732893926, "phrase": "best_performing_algorithm"}, {"score": 0.0021445492649196955, "phrase": "simulation_computation"}, {"score": 0.0021049977753042253, "phrase": "acyclic_graphs"}], "paper_keywords": ["Simulation preorder", " simulation quotient", " directed acyclic graphs (DAGS)", " rank", " simulation algorithms"], "paper_abstract": "We consider the algorithmic problem of computing the maximal simulation preorder (and quotient) on acyclic labelled graphs. The acyclicity allows to exploit an inner structure on the set of nodes, that can be processed in stages according to a set-theoretic notion of rank. This idea, previously used for bisimulation computation, on the one hand improves on the performances of the ensuing procedure and, on the other hand, gives to the solution an orderly iterative flavour making the algorithmic idea more explicit. The computational complexity achieved is good as we obtain the best performing algorithm for simulation computation on acyclic graphs, in both time and space.", "paper_title": "Rank and simulation: the well-founded case", "paper_id": "WOS:000368266800005"}