{"auto_keywords": [{"score": 0.04788181103940386, "phrase": "javascript"}, {"score": 0.004814951205782948, "phrase": "setters"}, {"score": 0.004182301599359094, "phrase": "strict_mode"}, {"score": 0.0038794730876377057, "phrase": "large_source_language"}, {"score": 0.003771631577951067, "phrase": "manageable_core"}, {"score": 0.0036667768092524576, "phrase": "implemented_transformation"}, {"score": 0.0035648266669315943, "phrase": "resulting_specification"}, {"score": 0.003401148484767927, "phrase": "real-world_conformance_suites"}, {"score": 0.002470237978694949, "phrase": "special_study"}, {"score": 0.0021049977753042253, "phrase": "broad_applicability"}], "paper_keywords": ["JavaScript", " LambdaJS", " getters", " setters", " accessors", " eval", " desugar", " wat", " wtfjs"], "paper_abstract": "We present S5, a semantics for the strict mode of the ECMAScript 5.1 (JavaScript) programming language. S5 shrinks the large source language into a manageable core through an implemented transformation. The resulting specification has been tested against real-world conformance suites for the language. This paper focuses on two aspects of S5: accessors (getters and setters) and eval. Since these features are complex and subtle in JavaScript, they warrant special study. Variations on both features are found in several other programming languages, so their study is likely to have broad applicability.", "paper_title": "A Tested Semantics for Getters, Setters, and Eval in JavaScript", "paper_id": "WOS:000318630300001"}