{"auto_keywords": [{"score": 0.04347900416933489, "phrase": "selection_criteria"}, {"score": 0.021416621124171385, "phrase": "recommendation_systems"}, {"score": 0.019917119545088353, "phrase": "compatibility_constraints"}, {"score": 0.00929925579539291, "phrase": "top-k_items"}, {"score": 0.005268771350348563, "phrase": "query_relaxation"}, {"score": 0.00481495049065317, "phrase": "recommendation_problems"}, {"score": 0.004459334186889869, "phrase": "previous_work"}, {"score": 0.003835972725191194, "phrase": "prior_work"}, {"score": 0.003757480190200645, "phrase": "poi_recommendation"}, {"score": 0.003626626504149897, "phrase": "sufficiently_many_poi"}, {"score": 0.0035106702438029913, "phrase": "query_relaxation_recommendation"}, {"score": 0.00330922510644499, "phrase": "users'_requirements"}, {"score": 0.0030735451757603555, "phrase": "limited_extent"}, {"score": 0.00297522010445508, "phrase": "bounded_number"}, {"score": 0.002897109710213723, "phrase": "upper_and_lower_bounds"}, {"score": 0.0028127163745564777, "phrase": "combined_and_data_complexity"}, {"score": 0.0027146742941153443, "phrase": "query_languages"}, {"score": 0.0026827569390113822, "phrase": "item_recommendation"}, {"score": 0.00266693888510356, "phrase": "package_recommendation"}, {"score": 0.0025436978068459565, "phrase": "variable_sizes"}, {"score": 0.0023976048394496446, "phrase": "complexity_bounds"}, {"score": 0.0023694065215394593, "phrase": "adjustment_recommendation"}, {"score": 0.0023208532782596444, "phrase": "basic_recommendation_problem"}, {"score": 0.0021363670305843403, "phrase": "adjustment_recommendation_functionalities"}, {"score": 0.0021049977753042253, "phrase": "extra_overhead"}], "paper_keywords": ["Recommendation problems", " Query relaxation", " Adjustment", " Complexity"], "paper_abstract": "Recommendation systems aim to recommend items or packages of items that are likely to be of interest to users. Previous work on recommendation systems has mostly focused on recommending points of interest (POI), to identify and suggest top-k items or packages that meet selection criteria and satisfy compatibility constraints on items in a package, where the (packages of) items are ranked by their usefulness to the users. As opposed to prior work, this paper investigates two issues beyond POI recommendation that are also important to recommendation systems. When there exist no sufficiently many POI that can be recommended, we propose (1) query relaxation recommendation to help users revise their selection criteria, or (2) adjustment recommendation to guide recommendation systems to modify their item collections, such that the users' requirements can be satisfied. We study two related problems, to decide (1) whether the query expressing the selection criteria can be relaxed to a limited extent, and (2) whether we can update a bounded number of items, such that the users can get desired recommendations. We establish the upper and lower bounds of these problems, all matching, for both combined and data complexity, when selection criteria and compatibility constraints are expressed in a variety of query languages, for both item recommendation and package recommendation. To understand where the complexity comes from, we also study the impact of variable sizes of packages, compatibility constraints and selection criteria on the analyses of these problems. Our results indicate that in most cases the complexity bounds of query relaxation and adjustment recommendation are comparable to their counterparts of the basic recommendation problem for testing whether a given set of (resp. packages of) items makes top-k items (resp. packages). In other words, extending recommendation systems with the query relaxation and adjustment recommendation functionalities typically does not incur extra overhead. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "On recommendation problems beyond points of interest", "paper_id": "WOS:000346230200004"}