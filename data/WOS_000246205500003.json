{"auto_keywords": [{"score": 0.02303198152722746, "phrase": "alloy"}, {"score": 0.00481495049065317, "phrase": "problem_frames"}, {"score": 0.004191007935893067, "phrase": "incremental_steps"}, {"score": 0.004112411350177274, "phrase": "starting_point"}, {"score": 0.004035282762331904, "phrase": "problem_frame_description"}, {"score": 0.0038124354878360032, "phrase": "interconnected_domains"}, {"score": 0.0037409118365761894, "phrase": "formal_requirement"}, {"score": 0.0032148229832850215, "phrase": "\"breadcrumbs\"_-_partial_domain_descriptions"}, {"score": 0.0029613556844064713, "phrase": "transformed_requirement_references"}, {"score": 0.002560751416355291, "phrase": "mechanically_checkable_implication"}, {"score": 0.0024038923350585962, "phrase": "derived_specification"}, {"score": 0.0023587312574818208, "phrase": "domain_assumptions"}], "paper_keywords": [""], "paper_abstract": "A technique is presented for obtaining a specification from a requirement through a series of incremental steps. The starting point is a Problem Frame description, involving a decomposition of the environment into interconnected domains and a formal requirement on phenomena of those domains. In each step, the requirement is moved towards the machine, leaving behind a trail of \"breadcrumbs\" - partial domain descriptions representing assumptions about the behaviors of those domains. Eventually, the transformed requirement references only phenomena at the interface of the machine and can therefore serve as a specification. Each step is justified by a mechanically checkable implication, ensuring that, if the machine obeys the derived specification and the domain assumptions are valid, the requirement will hold. The technique is formalized in Alloy and demonstrated on two examples.", "paper_title": "Requirement progression in problem frames: deriving specifications from requirements", "paper_id": "WOS:000246205500003"}