{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "context-oriented_programming"}, {"score": 0.004602773636967002, "phrase": "ambient_object_system"}, {"score": 0.004143199336369856, "phrase": "amos"}, {"score": 0.003785836059995376, "phrase": "ambience_programming_language"}, {"score": 0.003511613254403125, "phrase": "computation_model"}, {"score": 0.003356675879109443, "phrase": "highly_dynamic_behaviour_adaptation"}, {"score": 0.002678433668156676, "phrase": "first-class_closures"}, {"score": 0.002447101794397243, "phrase": "dynamic_method"}, {"score": 0.0023040642263522505, "phrase": "subjective_dispatch_mechanism"}], "paper_keywords": ["context-oriented programming", " subjective dispatch", " multiple dispatch", " prototype-based programming", " ambient intelligence"], "paper_abstract": "In this paper we present AmOS, the Ambient Object System that underlies the Ambience programming language. AmOS implements a computation model that supports highly dynamic behaviour adaptation to changing contexts. Apart from being purely object-based, AmOS features first-class closures, multimethods and contexts. Dynamic method scoping through a subjective dispatch mechanism is at the heart of our approach. These features make of AmOS a very simple and elegant paradigm for context-oriented programming.", "paper_title": "Context-Oriented Programming with the Ambient Object System", "paper_id": "WOS:000264754800003"}