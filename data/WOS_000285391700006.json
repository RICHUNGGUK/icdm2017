{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "stochastic_local_search"}, {"score": 0.01531071318933702, "phrase": "bayesian_networks"}, {"score": 0.01129847118571258, "phrase": "viterbi_algorithm"}, {"score": 0.008667159966156154, "phrase": "stochastic_greedy_search"}, {"score": 0.004626255242038005, "phrase": "hard_computational_problems"}, {"score": 0.00446471538346719, "phrase": "competitive_approach"}, {"score": 0.004405596416783185, "phrase": "optimal_or_approximately_optimal_problem_solutions"}, {"score": 0.004270665568018583, "phrase": "stochastic_local_search_algorithms"}, {"score": 0.004048860957751714, "phrase": "search_process"}, {"score": 0.003942299471749811, "phrase": "present_work"}, {"score": 0.0038556354709511818, "phrase": "research_questions"}, {"score": 0.003770869401884267, "phrase": "approximate_computation"}, {"score": 0.003527550673371394, "phrase": "novel_approach"}, {"score": 0.003128336741911927, "phrase": "arbitrary_topologies"}, {"score": 0.0030459283281463953, "phrase": "novel_formalization"}, {"score": 0.0028875481626754696, "phrase": "probability_theory"}, {"score": 0.002861961643289598, "phrase": "mixture_models"}, {"score": 0.0027252240573281163, "phrase": "mpe_computation"}, {"score": 0.0026771333996253783, "phrase": "stochastic_local_search_algorithm"}, {"score": 0.0024930878032164757, "phrase": "mpe_search_time"}, {"score": 0.002352886041381761, "phrase": "random_initialization"}, {"score": 0.0021910825909008946, "phrase": "clique_tree_clustering"}, {"score": 0.0021620042653528846, "phrase": "state-of-the-art_exact_algorithm"}, {"score": 0.002105006396232945, "phrase": "bns"}], "paper_keywords": ["Stochastic local search", " Bayesian networks", " initialization", " restart", " finite mixture models"], "paper_abstract": "For hard computational problems, stochastic local search has proven to be a competitive approach to finding optimal or approximately optimal problem solutions. Two key research questions for stochastic local search algorithms are: Which algorithms are effective for initialization? When should the search process be restarted? In the present work, we investigate these research questions in the context of approximate computation of most probable explanations (MPEs) in Bayesian networks (BNs). We introduce a novel approach, based on the Viterbi algorithm, to explanation initialization in BNs. While the Viterbi algorithm works on sequences and trees, our approach works on BNs with arbitrary topologies. We also give a novel formalization of stochastic local search, with focus on initialization and restart, using probability theory and mixture models. Experimentally, we apply our methods to the problem of MPE computation, using a stochastic local search algorithm known as Stochastic Greedy Search. By carefully optimizing both initialization and restart, we reduce the MPE search time for application BNs by several orders of magnitude compared to using uniform at random initialization without restart. On several BNs from applications, the performance of Stochastic Greedy Search is competitive with clique tree clustering, a state-of-the-art exact algorithm used for MPE computation in BNs.", "paper_title": "Initialization and Restart in Stochastic Local Search: Computing a Most Probable Explanation in Bayesian Networks", "paper_id": "WOS:000285391700006"}