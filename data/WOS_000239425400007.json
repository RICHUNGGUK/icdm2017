{"auto_keywords": [{"score": 0.045830753447761906, "phrase": "pattern_matching"}, {"score": 0.03558266368816028, "phrase": "formal_islands"}, {"score": 0.00481495049065317, "phrase": "domain_specific_languages"}, {"score": 0.004526503177267299, "phrase": "well_established_languages"}, {"score": 0.00445712058827745, "phrase": "high_level_capabilities"}, {"score": 0.0043215158337835706, "phrase": "invariant_checking"}, {"score": 0.00415777266387528, "phrase": "formal_islands_framework"}, {"score": 0.00406250784433007, "phrase": "main_idea"}, {"score": 0.003878451139312637, "phrase": "existing_programs"}, {"score": 0.0038189638340666936, "phrase": "formally_defined_parts"}, {"score": 0.003051887221639784, "phrase": "existing_development_environment"}, {"score": 0.002913483929932102, "phrase": "generic_framework"}, {"score": 0.0025942468561537682, "phrase": "corresponding_dissolved_host_codes"}, {"score": 0.002419708657850547, "phrase": "general_methodology"}, {"score": 0.002364172626241202, "phrase": "new_dsls"}, {"score": 0.0022744242010653997, "phrase": "language_extensions"}, {"score": 0.0022394839933089074, "phrase": "sqlj-embedding_sql_capabilities"}, {"score": 0.002205079358459154, "phrase": "java-"}, {"score": 0.002154464856311167, "phrase": "tom"}, {"score": 0.0021051140664200304, "phrase": "java"}], "paper_keywords": [""], "paper_abstract": "Motivated by the proliferation and usefulness of Domain Specific Languages as well as the demand for enriching well established languages by high level capabilities like pattern matching or invariant checking, we introduce the Formal Islands framework. The main idea consists to integrate, in existing programs, formally defined parts called islands, on which proofs and tests can be meaningfully developed. Then, Formal Islands could be safely dissolved into their hosting language to be transparently integrated in the existing development environment. The paper presents this generic framework and shows that the properties valid on the Formal Islands are also valid on the corresponding dissolved host codes. Formal Islands can be used as a general methodology to develop new DSLs and we show that language extensions like SQLJ-embedding SQL capabilities in Java-, or Tom-a Java language extension allowing for pattern matching and rewriting-are indeed islands.", "paper_title": "Formal Islands", "paper_id": "WOS:000239425400007"}