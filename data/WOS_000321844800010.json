{"auto_keywords": [{"score": 0.04951471866031507, "phrase": "reactive_scheduling_policies"}, {"score": 0.015295267497080496, "phrase": "dynamic_flexible_job_shop_scheduling_problem"}, {"score": 0.014823989216553701, "phrase": "fjssp"}, {"score": 0.008898599433790259, "phrase": "processing_conditions"}, {"score": 0.004814960502478161, "phrase": "gep"}, {"score": 0.004573748810476845, "phrase": "flexible_job_shop_scheduling_problem"}, {"score": 0.004448892453489832, "phrase": "job_shop_scheduling_problem"}, {"score": 0.0038431888954930083, "phrase": "scheduling_horizon"}, {"score": 0.0036794956254952126, "phrase": "practical_industries"}, {"score": 0.003190817088774159, "phrase": "reactive_scheduling"}, {"score": 0.003153140905312787, "phrase": "dynamic_scheduling_problem"}, {"score": 0.0030791137853734152, "phrase": "gene_expression_programming"}, {"score": 0.0029246121262946384, "phrase": "dynamic_scheduling"}, {"score": 0.0027668603377225564, "phrase": "proposed_gep-based_approach"}, {"score": 0.002648889316519512, "phrase": "shop_utilization"}, {"score": 0.0026175952455594277, "phrase": "date_tightness"}, {"score": 0.002596937660779953, "phrase": "problem_flexibility"}, {"score": 0.0025359354516609795, "phrase": "simulation_experiments"}, {"score": 0.0025059724686541263, "phrase": "scheduling_performance_measure"}, {"score": 0.0022876877275935757, "phrase": "gep-based_approach"}, {"score": 0.0022428042503686053, "phrase": "dfjssp"}, {"score": 0.0021814396743238176, "phrase": "big_range"}, {"score": 0.0021471293746360026, "phrase": "performance_measures"}, {"score": 0.0021049977753042253, "phrase": "previous_approaches"}], "paper_keywords": ["Reactive scheduling", " Dynamic scheduling", " Flexible job shop scheduling", " Job release dates", " Gene expression programming"], "paper_abstract": "Flexible job shop scheduling problem (FJSSP) is generalization of job shop scheduling problem (JSSP), in which an operation may be processed on more than one machine each of which has the same function. Most previous researches on FJSSP assumed that all jobs to be processed are available at the beginning of scheduling horizon. The assumption, however, is always violated in practical industries because jobs usually arrive over time and can not be predicted before their arrivals. In the paper, dynamic flexible job shop scheduling problem (DFJSSP) with job release dates is studied. A heuristic is proposed to implement reactive scheduling for the dynamic scheduling problem. An approach based on gene expression programming (GEP) is also proposed which automatically constructs reactive scheduling policies for the dynamic scheduling. In order to evaluate the performance of the reactive scheduling policies constructed by the proposed GEP-based approach under a variety of processing conditions three factors, such as the shop utilization, due date tightness, problem flexibility, are considered in the simulation experiments. The scheduling performance measure considered in the simulation is the minimization of makespan, mean flowtime and mean tardiness, respectively. The results show that GEP-based approach can construct more efficient reactive scheduling policies for DFJSSP with job release dates under a big range of processing conditions and performance measures in the comparison with previous approaches.", "paper_title": "A GEP-based reactive scheduling policies constructing approach for dynamic flexible job shop scheduling problem with job release dates", "paper_id": "WOS:000321844800010"}