{"auto_keywords": [{"score": 0.026504271649023605, "phrase": "proposed_framework"}, {"score": 0.015341418459639412, "phrase": "mle"}, {"score": 0.00481495049065317, "phrase": "parallel_maximum_likelihood_evaluation"}, {"score": 0.004736434518535051, "phrase": "maximum_likelihood_evaluation"}, {"score": 0.004621043537046209, "phrase": "analytical_tool"}, {"score": 0.004326833704481825, "phrase": "analysis_efficiency"}, {"score": 0.003968806706727518, "phrase": "important_characteristic"}, {"score": 0.0039362878637371574, "phrase": "computing-intensive_application"}, {"score": 0.003793206550770237, "phrase": "self-adaptive_and_parallelized_mle_framework"}, {"score": 0.0035661605757956096, "phrase": "distributed_environment"}, {"score": 0.0033251716926666437, "phrase": "computing_results"}, {"score": 0.0032174507570710835, "phrase": "computing_iteration"}, {"score": 0.0030749917707689222, "phrase": "computing_tasks"}, {"score": 0.0030123335878664064, "phrase": "proposed_approach"}, {"score": 0.0029509483926257645, "phrase": "system_state"}, {"score": 0.00292674497467906, "phrase": "load-balancing-decision_mechanism"}, {"score": 0.0025547994452342266, "phrase": "experimental_results"}, {"score": 0.00245168871716047, "phrase": "environmental_changes"}, {"score": 0.002333421318779658, "phrase": "stable_environment"}, {"score": 0.0021049977753042253, "phrase": "computing_machines"}], "paper_keywords": ["MLE", " Self-adaptive computing", " Load balancing", " High performance computing", " Grid computing"], "paper_abstract": "Many scientific disciplines use maximum likelihood evaluation (MLE) as an analytical tool. As the data to be analyzed grows increasingly, MLE demands more parallelism to improve analysis efficiency. Unfortunately, it is difficult for scientists and engineers to develop their own distributed/parallelized MLE applications. In addition, self-adaptability is an important characteristic for computing-intensive application for improving efficiency. This paper presents a self-adaptive and parallelized MLE framework that consists of a master process and a set of worker processes on a distributed environment. The workers are responsible to compute tasks, while the master needs to merge the computing results, to initiate or to terminate another computing iteration, and to decide how to re-distribute the computing tasks to workers. The proposed approach uses neither any monitoring mechanism to collect system state nor load-balancing-decision mechanism to balancing the workload. Instead, it measures the performance of each worker for computing an iteration, and uses the information to adjust the workload of workers accordingly. The experimental results show that not only the proposed framework can adapt to environmental changes, but also the proposed framework is effective; even in a stable environment that is dedicated for one application, the proposed framework still demonstrates its significant improvement in self-adaptability. The self-adaptability will be significantly improved while the workload of computing machines unbalanced.", "paper_title": "A self-adaptive computing framework for parallel maximum likelihood evaluation", "paper_id": "WOS:000305224000005"}