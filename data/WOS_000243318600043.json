{"auto_keywords": [{"score": 0.040882934314756744, "phrase": "qos_contract_negotiation"}, {"score": 0.00481495049065317, "phrase": "component_qos"}, {"score": 0.004689321062844586, "phrase": "multiple_containers"}, {"score": 0.004597244847332915, "phrase": "explicit_consideration"}, {"score": 0.004536862734384202, "phrase": "component_contracts"}, {"score": 0.004331675965350876, "phrase": "component-based_applications"}, {"score": 0.004191092160221323, "phrase": "qos"}, {"score": 0.003948613642680196, "phrase": "challenging_task"}, {"score": 0.0037699306119313154, "phrase": "concrete_qos_contracts"}, {"score": 0.0036958398682001015, "phrase": "collaborating_components"}, {"score": 0.003368816076401138, "phrase": "multiple_component_containers"}, {"score": 0.0032591491777773035, "phrase": "possible_resource_constraints"}, {"score": 0.003010250522930773, "phrase": "negotiation_process"}, {"score": 0.0028930017387859804, "phrase": "heuristically_optimized_solution"}, {"score": 0.0024842242921857705, "phrase": "non-functional_properties"}, {"score": 0.0024192592458651204, "phrase": "resource_demand"}, {"score": 0.00234043119560776, "phrase": "component_level"}, {"score": 0.0022641658133181115, "phrase": "presented_ideas"}, {"score": 0.002147265537489893, "phrase": "video_provider"}, {"score": 0.0021049977753042253, "phrase": "payment_provider_example_scenario"}], "paper_keywords": [""], "paper_abstract": "The explicit consideration of component contracts aims at simplifying the development of component-based applications with nonfunctional requirements like QoS and security, but it is also a challenging task. QoS contract negotiation is used to select concrete QoS contracts between the collaborating components. This paper presents an algorithm for the QoS contract negotiation of components deployed in multiple component containers. Our algorithm addresses: possible resource constraints at each node and the network, the efficiency of the negotiation process, the selection of a heuristically optimized solution, and over-constrained cases. As a basis to our approach, we used the notion that the required and provided non-functional properties as well as resource demand are specified at the component level. To demonstrate the presented ideas, the interaction of a customer, video provider, and payment provider example scenario is analyzed.", "paper_title": "Component QoS contract negotiation in multiple containers", "paper_id": "WOS:000243318600043"}