{"auto_keywords": [{"score": 0.04450710981297446, "phrase": "packet_collisions"}, {"score": 0.030585766161068673, "phrase": "geowindow_algorithm"}, {"score": 0.00481495049065317, "phrase": "broadcast_reliability"}, {"score": 0.004780183091824403, "phrase": "neighbor_discovery"}, {"score": 0.004694353795114243, "phrase": "collection_tree_construction"}, {"score": 0.004660453113061494, "phrase": "wireless_sensor_networks"}, {"score": 0.004210684148162821, "phrase": "csma"}, {"score": 0.004150030918669128, "phrase": "access_arbitration"}, {"score": 0.004060718465754644, "phrase": "collision_avoidance"}, {"score": 0.004031375102068085, "phrase": "broadcast_transmissions"}, {"score": 0.003973320429450603, "phrase": "ndle_accuracy"}, {"score": 0.0038737214010638745, "phrase": "contention_window_adjustment_mechanisms"}, {"score": 0.0038179283509963695, "phrase": "collision_detection"}, {"score": 0.0037766095501754952, "phrase": "capture_effect"}, {"score": 0.0036953036453370087, "phrase": "existing_approaches"}, {"score": 0.003642070943285037, "phrase": "long_inter-packet_duration"}, {"score": 0.003563651133299401, "phrase": "proposed_mechanisms"}, {"score": 0.0034995881411519925, "phrase": "network_configuration"}, {"score": 0.0034491650585057754, "phrase": "adaptive_collision_avoidance"}, {"score": 0.003387153161968927, "phrase": "local_collision_intensity"}, {"score": 0.003290237137651949, "phrase": "mathematical_model"}, {"score": 0.003242820629121494, "phrase": "mac_protocol"}, {"score": 0.003161474881435185, "phrase": "desired_broadcasting_success_probability"}, {"score": 0.003048782877550259, "phrase": "potential_benefits"}, {"score": 0.0030157628075954588, "phrase": "partially_recovered_packets"}, {"score": 0.0029830992938695033, "phrase": "ndle_phase"}, {"score": 0.0029400959763737364, "phrase": "ctc_accuracy"}, {"score": 0.0028249975318149468, "phrase": "contention_window_size_management"}, {"score": 0.002665555782056494, "phrase": "tinyos's_collection_tree_protocol"}, {"score": 0.002598652897946253, "phrase": "tree_cost"}, {"score": 0.002542642270762272, "phrase": "energy_consumption"}, {"score": 0.002469830206270585, "phrase": "packet_delivery_performance"}, {"score": 0.0024253827365474734, "phrase": "data_gathering_scenarios"}, {"score": 0.0023990982005125763, "phrase": "proposed_mac_mechanisms"}, {"score": 0.0023135183406982414, "phrase": "initialization_phases"}, {"score": 0.002239103860494545, "phrase": "ndle"}, {"score": 0.0022229205280481063, "phrase": "ctc"}, {"score": 0.002190825828942124, "phrase": "regular_network_operation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Large-scale sensor networks", " MAC", " Collision avoidance", " Routing"], "paper_abstract": "Neighbor Discovery and Link Estimation (NDLE) phase and Collection Tree Construction (CTC) phase are essential for correct and efficient operation of network protocols. However, the accuracy of these phases is highly affected by packet collisions, because CSMA is used for access arbitration and it does not support collision avoidance with broadcast transmissions. To improve NDLE accuracy: (i) We propose contention window adjustment mechanisms that rely on collision detection through the capture effect. In contrast to the existing approaches that utilize a long inter-packet duration for collision avoidance, the proposed mechanisms do not depend on network configuration and can provide adaptive collision avoidance with respect to the local collision intensity. (ii) We propose a mathematical model through which the MAC protocol can be configured to achieve a desired broadcasting success probability. (iii) We investigate and show the potential benefits of exploiting partially recovered packets during the NDLE phase. To improve CTC accuracy, we propose the Geowindow algorithm, which reduces packet collisions through contention window size management and transmission prioritization. Our results show that the Geowindow algorithm can improve the efficiency of the TinyOS's Collection Tree Protocol up to 74% in terms of tree cost, without increasing duration or energy consumption. Also, it can improve the packet delivery performance up to 70% in data gathering scenarios. The proposed MAC mechanisms of this paper are not only suitable for the initialization phases, but they can also be used for NDLE and CTC updates during the regular network operation, as well as other broadcast-based traffic patterns. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Improving broadcast reliability for neighbor discovery, link estimation and collection tree construction in wireless sensor networks", "paper_id": "WOS:000334138800008"}