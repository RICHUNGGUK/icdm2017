{"auto_keywords": [{"score": 0.04586846484671967, "phrase": "due_date"}, {"score": 0.00721377339250064, "phrase": "due_dates"}, {"score": 0.00481495049065317, "phrase": "due_date_scheduling"}, {"score": 0.0046194096969523315, "phrase": "order_products"}, {"score": 0.00407896718224832, "phrase": "online_algorithm"}, {"score": 0.0040189760459195725, "phrase": "first_component"}, {"score": 0.0038900709793274484, "phrase": "resulting_jobs"}, {"score": 0.003754140294151593, "phrase": "service_measure"}, {"score": 0.003687960013746783, "phrase": "quoted_lead_time"}, {"score": 0.0035696339388072086, "phrase": "release_time"}, {"score": 0.0035066948004186076, "phrase": "basic_problem"}, {"score": 0.003465350958971198, "phrase": "average_quoted_lead_time"}, {"score": 0.003265805876551917, "phrase": "maximum_work"}, {"score": 0.0032082065314048974, "phrase": "minimum_work"}, {"score": 0.002807297104719042, "phrase": "non-increasing_profit_function"}], "paper_keywords": ["Online algorithms", " Scheduling", " Competitive analysis", " Due dates", " Supply chain"], "paper_abstract": "We consider several online scheduling problems that arise when customers request make-to-order products from a company. At the time of the order, the company must quote a due date to the customer. To satisfy the customer, the company must produce the good by the due date. The company must have an online algorithm with two components: The first component sets the due dates, and the second component schedules the resulting jobs with the goal of meeting the due dates. The most basic quality of service measure for a job is the quoted lead time, which is the difference between the due date and the release time. We first consider the basic problem of minimizing the average quoted lead time. We show that there is a (1+epsilon)-speed (1 + epsilon)-speed O(log k/epsilon)-competitive algorithm for this problem (here k is the ratio of the maximum work of a job to the minimum work of a job), and that this algorithm is essentially optimally competitive. This result extends to the case that each job has a weight and the objective is weighted quoted lead time. We then introduce the following general setting: there is a non-increasing profit function p(i)(t) associated with each job J(i) . If the customer for job J(i) is quoted a due date of d(i) , then the profit obtained from completing this job by its due date is p(i)(d(i)). We consider the objective of maximizing profits. We show that if the company must finish each job by its due date, then there is no O(1)-speed poly-log-competitive algorithm. However, if the company can miss the due date of a job, at the cost of forgoing the profits from that job, then we show that there is a (1 + epsilon)-speed O(1 + 1/epsilon)-competitive algorithm, and that this algorithm is essentially optimally competitive.", "paper_title": "Competitive Algorithms for Due Date Scheduling", "paper_id": "WOS:000287319100006"}