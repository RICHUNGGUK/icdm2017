{"auto_keywords": [{"score": 0.03823038423544443, "phrase": "cost_function"}, {"score": 0.00481495049065317, "phrase": "ray_tracing"}, {"score": 0.004681525814235883, "phrase": "traversal_cost"}, {"score": 0.00462919213721188, "phrase": "surface_area_heuristic"}, {"score": 0.004475659507646842, "phrase": "high_quality_spatial_subdivisions"}, {"score": 0.004400804926266097, "phrase": "volume_hierarchies"}, {"score": 0.004230956171850591, "phrase": "fair_performance"}, {"score": 0.004090577229368418, "phrase": "cost_model"}, {"score": 0.003932654396285872, "phrase": "underlying_assumptions"}, {"score": 0.003888659470009222, "phrase": "surface_area_heuristics"}, {"score": 0.00357395617690842, "phrase": "surface_area"}, {"score": 0.0034166271604770576, "phrase": "assumed_visibility"}, {"score": 0.003378385493203297, "phrase": "geometric_primitives"}, {"score": 0.0032296377835432533, "phrase": "build_algorithm"}, {"score": 0.003018668521745676, "phrase": "smaller_portion"}, {"score": 0.002853396755102163, "phrase": "inexpensive_modifications"}, {"score": 0.0027123819773059127, "phrase": "ray_traversal"}, {"score": 0.00257831812581194, "phrase": "highly_occluded_scenes"}, {"score": 0.002535115422089855, "phrase": "standard_surface_area_heuristics"}, {"score": 0.0023827927890399357, "phrase": "construction_time"}, {"score": 0.0023560952790080943, "phrase": "memory_usage"}, {"score": 0.0022777800735119405, "phrase": "animated_scene"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Ray tracing", " Bounding volume hierarchies", " BVH build algorithm", " Surface area heuristic"], "paper_abstract": "The minimization of traversal cost using surface area heuristic is extensively used to build high quality spatial subdivisions and bounding volume hierarchies for ray tracing. Despite the fair performance of trees built with the cost model, it is known that the underlying assumptions for surface area heuristics are not realistic. In this paper we show how the cost function of the surface area heuristic can be improved on using the assumed visibility of geometric primitives such as triangles. This way the build algorithm utilizes the exact or assumed visibility to construct more efficient BVHs by traversing smaller portion of the hierarchy. We show that by these inexpensive modifications to the cost function we can speed up the ray traversal by approximately 102% on average for path tracing of highly occluded scenes compared to standard surface area heuristics. Moreover, it is also possible to lower the construction time and memory usage by subdividing only those parts of the animated scene through which rays are expected to be traversed. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Visibility driven BVH build up algorithm for ray tracing", "paper_id": "WOS:000303695300010"}