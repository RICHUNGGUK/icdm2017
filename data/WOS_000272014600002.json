{"auto_keywords": [{"score": 0.030756311376531866, "phrase": "parallelism_profiles"}, {"score": 0.012420833462262363, "phrase": "amorphous_data-parallelism"}, {"score": 0.009718324777134668, "phrase": "parameter"}, {"score": 0.0045641317216991205, "phrase": "pointer-based_data_structures"}, {"score": 0.004378078970574258, "phrase": "recent_investigations"}, {"score": 0.00430067200637091, "phrase": "galois_project"}, {"score": 0.004125314447335291, "phrase": "generalized_form"}, {"score": 0.0036625643243684827, "phrase": "static_techniques"}, {"score": 0.0035551969986263553, "phrase": "runtime_strategies"}, {"score": 0.0034922880300145283, "phrase": "optimistic_parallel_execution"}, {"score": 0.0033898953358387075, "phrase": "natural_question"}, {"score": 0.0028693932802982417, "phrase": "irregular_programs"}, {"score": 0.0027852126030055305, "phrase": "abstract_measure"}, {"score": 0.0025020469669826497, "phrase": "implementation-dependent_details"}, {"score": 0.002385595105638277, "phrase": "cache_sizes"}, {"score": 0.0022476051902301187, "phrase": "constrained_parallelism_profiles"}, {"score": 0.0022077827041801193, "phrase": "fixed_number"}, {"score": 0.0021049977753042253, "phrase": "seven_irregular_applications"}], "paper_keywords": ["Algorithms", " Languages", " Performance", " Optimistic Parallelism", " Profiling", " Parallelism Profiles"], "paper_abstract": "Irregular programs are programs organized around pointer-based data structures such as trees and graphs. Recent investigations by the Galois project have shown that many irregular programs have a generalized form of data-parallelism called amorphous data-parallelism. However, in many programs, amorphous data-parallelism cannot be uncovered using static techniques, and its exploitation requires runtime strategies such as optimistic parallel execution. This raises a natural question: how much amorphous data-parallelism actually exists in irregular programs? In this paper, we describe the design and implementation of a tool called ParaMeter that produces parallelism profiles for irregular programs. Parallelism profiles are an abstract measure of the amount of amorphous data-parallelism at different points in the execution of an algorithm, independent of implementation-dependent details such as the number of cores, cache sizes, load-balancing, etc. ParaMeter can also generate constrained parallelism profiles for a fixed number of cores. We show parallelism profiles for seven irregular applications, and explain how these profiles provide insight into the behavior of these applications.", "paper_title": "How Much Parallelism is There in Irregular Applications?", "paper_id": "WOS:000272014600002"}