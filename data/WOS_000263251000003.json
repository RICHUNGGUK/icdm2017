{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hierarchical_grid_resource_management"}, {"score": 0.00475070135279933, "phrase": "grid_resource_management"}, {"score": 0.004442032546224076, "phrase": "namely_local_resource_managers"}, {"score": 0.0034638476252104706, "phrase": "detailed_knowledge"}, {"score": 0.003238517900104576, "phrase": "recursive_architecture"}, {"score": 0.0031738126998349775, "phrase": "arbitrary_number"}, {"score": 0.002869115451202179, "phrase": "different_ways"}, {"score": 0.002755567647101251, "phrase": "organizational_boundaries"}, {"score": 0.0025761937402886954, "phrase": "access_details"}, {"score": 0.0021624739899833868, "phrase": "proposed_implementation"}, {"score": 0.0021049977753042253, "phrase": "existing_interfaces"}], "paper_keywords": ["Distributed architectures", " System management", " Standards"], "paper_abstract": "Grid resource management has been traditionally limited to just two levels of hierarchy, namely local resource managers and metaschedulers. This results in a non-manageable, and thus not scalable, architecture, where each metascheduler has to be able to access thousands of resources, which also implies having a detailed knowledge about their interfaces and configuration. This paper presents a recursive architecture allowing an arbitrary number of levels in the hierarchy. This way, resources can be arranged in different ways - for example, following organizational boundaries or aggregating them by similarity - while hiding the access details. An implementation of this architecture is shown, as well as its benefits in terms of autonomy, scalability, deployment and security. The proposed implementation is based on existing interfaces, allowing for standardization. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "A recursive architecture for hierarchical grid resource management", "paper_id": "WOS:000263251000003"}