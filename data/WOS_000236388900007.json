{"auto_keywords": [{"score": 0.049509300669177574, "phrase": "multi-agent"}, {"score": 0.00481495049065317, "phrase": "distributed_multi-agent_systems"}, {"score": 0.004562362497952548, "phrase": "large_software_systems"}, {"score": 0.004481132747216135, "phrase": "great_deal"}, {"score": 0.004401342842183475, "phrase": "complex_systems"}, {"score": 0.0039043835848369215, "phrase": "process_flows"}, {"score": 0.003789137457228946, "phrase": "distributed_autonomous_subsystems"}, {"score": 0.0035687137873965684, "phrase": "superordinated_task_execution"}, {"score": 0.0028758391869611374, "phrase": "multi-agent_systems"}, {"score": 0.002790867657645595, "phrase": "participating_agents"}, {"score": 0.002708399936381754, "phrase": "global_simulation_time"}, {"score": 0.002597012212823168, "phrase": "design_proposal"}, {"score": 0.00255068452076921, "phrase": "service_implementation"}, {"score": 0.0025202582748972122, "phrase": "time_management"}, {"score": 0.002387758958649797, "phrase": "special_requirements"}, {"score": 0.0023451553255837317, "phrase": "multi-agent_settings"}, {"score": 0.0023033100935570755, "phrase": "so-called_time_service"}, {"score": 0.0022352169832099153, "phrase": "fipa-compliant_agent"}, {"score": 0.002143247921132179, "phrase": "couple_heterogeneous_subsystems"}, {"score": 0.0021049977753042253, "phrase": "different_agent_platforms"}], "paper_keywords": [""], "paper_abstract": "Multi-agent systems are well suited for building large software systems. A great deal of these complex systems includes process flows that are concerned with time or are even time-critical. The activities of these process flows are often executed in distributed autonomous subsystems that have to be synchronized with respect to the superordinated task execution. To be able to build such systems and test their behavior adequately, it is often advantageous and sometimes necessary to simulate them in the run-up to their practical use. Testing and simulation of process flows within multi-agent systems requires synchronization of the participating agents with respect to the global simulation time. In this paper, a design proposal and a service implementation for time management is presented, which takes care of the special requirements imposed by multi-agent settings. This so-called time service is implemented as an FIPA-compliant agent, and can be used to couple heterogeneous subsystems implemented on different agent platforms.", "paper_title": "A generic time management service for distributed multi-agent systems", "paper_id": "WOS:000236388900007"}