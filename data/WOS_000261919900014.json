{"auto_keywords": [{"score": 0.035998676944574544, "phrase": "individual_objects"}, {"score": 0.026749641495468896, "phrase": "elementary_transition_paths"}, {"score": 0.00481495049065317, "phrase": "test_specifications"}, {"score": 0.004694092086199672, "phrase": "system_state_transitions"}, {"score": 0.004634799977448855, "phrase": "adequate_system_testing"}, {"score": 0.004576253356889219, "phrase": "present_day_application_programs"}, {"score": 0.00443308765153716, "phrase": "system_states"}, {"score": 0.004133627071344356, "phrase": "system_state_model"}, {"score": 0.0040042529959108605, "phrase": "system_state_models"}, {"score": 0.0038789122930433305, "phrase": "system_developers"}, {"score": 0.0033295966773779174, "phrase": "case_generation"}, {"score": 0.003287482882222731, "phrase": "state-based_system_testing"}, {"score": 0.0030071857666598193, "phrase": "system_test_cases"}, {"score": 0.002821685815956478, "phrase": "scenario_sequences"}, {"score": 0.002733260122876447, "phrase": "individual_object_statecharts"}, {"score": 0.0025810006125483835, "phrase": "novel_approach"}, {"score": 0.002468450551616404, "phrase": "automatically_synthesized_system_state_model"}, {"score": 0.0021870332034407817, "phrase": "system_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["System testing", " UML", " Test specification generation", " State-based testing", " Transition coverage"], "paper_abstract": "Adequate system testing of present day application programs requires satisfactory coverage of system states and transitions. This can be achieved by using a system state model. However, the system state models are rarely constructed by system developers, as these are large and complex. The only state models that are constructed by the developers are those of individual objects. However test case generation for state-based system testing based on traversal of statecharts of individual objects appears to be infeasible. since system test cases would have to be specified in the form of scenario sequences rather than transitions on individual object statecharts. In this paper, we propose a novel approach to coverage of elementary transition paths of an automatically synthesized system state model. Our technique for coverage of elementary transition paths would also ensure coverage of all states and transitions of the system model. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Automatic generation of test specifications for coverage of system state transitions", "paper_id": "WOS:000261919900014"}