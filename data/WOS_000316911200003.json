{"auto_keywords": [{"score": 0.03727770477558976, "phrase": "placement_quality"}, {"score": 0.01558578599760268, "phrase": "off-line_placement"}, {"score": 0.014742210853040554, "phrase": "hardware_tasks"}, {"score": 0.011999624813110649, "phrase": "hardware_task_placement"}, {"score": 0.007251153955177866, "phrase": "configuration_overhead"}, {"score": 0.0047323590206695305, "phrase": "hardware_tasks_on_reconfigurable_devices."}, {"score": 0.004631099806015235, "phrase": "run-time_partial_reconfiguration"}, {"score": 0.004396790930873782, "phrase": "remaining_tasks"}, {"score": 0.0040672766251859975, "phrase": "resource_utilization"}, {"score": 0.003962998498942111, "phrase": "resource_wastage"}, {"score": 0.0038613835226952117, "phrase": "complex_allocation_situations"}, {"score": 0.003795086335272422, "phrase": "reconfigurable_devices"}, {"score": 0.003697760799674494, "phrase": "off-line_methods"}, {"score": 0.0034953361767153285, "phrase": "fragmentation_rate"}, {"score": 0.0030560920414081645, "phrase": "overall_metrics"}, {"score": 0.0029647862293448895, "phrase": "multi-objective_combinatory_optimization_problem"}, {"score": 0.002766171878646582, "phrase": "partially_reconfigurable_devices"}, {"score": 0.0027068691342344545, "phrase": "new_three-level_resource_management"}, {"score": 0.0025145641652082164, "phrase": "mixed_integer_programming"}, {"score": 0.002266051712795851, "phrase": "resource_efficiency"}, {"score": 0.0021511430180912164, "phrase": "analytic_method"}, {"score": 0.0021325650133686516, "phrase": "better_resource_efficiency"}, {"score": 0.0021049977753042253, "phrase": "bees_algorithm"}], "paper_keywords": ["Hardware task placement", " heterogeneous FPGA", " mixed integer programming", " Bees algorithm", " partial run-time reconfiguration", " resource efficiency", " configuration overhead"], "paper_abstract": "With the advent of run-time partial reconfiguration, the most recent reconfigurable devices support reconfiguring hardware tasks individually, without interrupting the remaining tasks running on the same device. While the concept of run-time partial reconfiguration increases performance and resource utilization, it also leads to resource wastage, high configuration overhead and complex allocation situations of hardware tasks on reconfigurable devices. Many on-line and off-line methods for hardware task placement have been proposed for such reconfigurable devices to enhance placement quality expressed by fragmentation rate, the amount of task rejection and a few of them also estimate configuration overhead. However, these works treat each criterion individually and therefore do not reflect the overall metrics of placement quality. Hardware task placement is a multi-objective combinatory optimization problem. In this paper, we investigate the problem of off-line placement of hardware tasks in partially reconfigurable devices and we present a new three-level resource management that is based on two methods, i.e., a complete analytic method: the formulation into mixed integer programming, and an approximate iterative method: the Bees algorithm. For both methods, the placement quality is measured by the rate of resource efficiency and by the amount of configuration overhead. Experiments demonstrate that the analytic method provides better resource efficiency than the Bees Algorithm by 33% and attains 15% of gain in configuration overhead.", "paper_title": "COMPLETE AND APPROXIMATE METHODS FOR OFF-LINE PLACEMENT OF HARDWARE TASKS ON RECONFIGURABLE DEVICES", "paper_id": "WOS:000316911200003"}