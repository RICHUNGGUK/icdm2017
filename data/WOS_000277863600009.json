{"auto_keywords": [{"score": 0.040297439457126535, "phrase": "aibench"}, {"score": 0.00481495049065317, "phrase": "translational_research"}, {"score": 0.004734853555630616, "phrase": "applied_research"}, {"score": 0.004675652357253327, "phrase": "biomedical_discovery"}, {"score": 0.004636594774238505, "phrase": "translational_medicine"}, {"score": 0.004540365779658683, "phrase": "rapid_development"}, {"score": 0.004502433187097914, "phrase": "fully_featured_applications"}, {"score": 0.0042455945330942746, "phrase": "new_tools"}, {"score": 0.004140036888016244, "phrase": "efficient_generation"}, {"score": 0.003743516729006403, "phrase": "java"}, {"score": 0.003665552439863732, "phrase": "scientific_software_development"}, {"score": 0.0034130176595901104, "phrase": "translational_biomedicine"}, {"score": 0.0033420978105332686, "phrase": "powerful_plug-in_engine"}, {"score": 0.0032046343506232588, "phrase": "java_annotations"}, {"score": 0.002909482525367989, "phrase": "basic_input-processing-output_life_cycle"}, {"score": 0.002813307389456184, "phrase": "multiplatform_applications"}, {"score": 0.002564862727498502, "phrase": "typical_scientific_application"}, {"score": 0.002543392353000551, "phrase": "user_parameter_definition"}, {"score": 0.0023187286045879643, "phrase": "proposed_framework_architecture"}, {"score": 0.002289667393538803, "phrase": "reusable_component_model"}, {"score": 0.0022420373745572837, "phrase": "new_applications"}, {"score": 0.002158780936704905, "phrase": "third-party_software"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ireland_ltd."}], "paper_keywords": ["Scientific software development", " Biomedical informatics", " Open software", " Reusable component model", " Application framework"], "paper_abstract": "Applied research in both biomedical discovery and translational medicine today often requires the rapid development of fully featured applications containing both advanced and specific functionalities, for real use in practice. In this context, new tools are demanded that allow for efficient generation, deployment and reutilization of such biomedical applications as well as their associated functionalities. In this context this paper presents AIBench, an open-source Java desktop application framework for scientific software development with the goal of providing support to both fundamental and applied research in the domain of translational biomedicine. AIBench incorporates a powerful plug-in engine, a flexible scripting platform and takes advantage of Java annotations, reflection and various design principles in order to make it easy to use, lightweight and non-intrusive. By following a basic input-processing-output life cycle, it is possible to fully develop multiplatform applications using only three types of concepts: operations, data-types and views. The framework automatically provides functionalities that are present in a typical scientific application including user parameter definition, logging facilities, multi-threading execution, experiment repeatability and user interface workflow management, among others. The proposed framework architecture defines a reusable component model which also allows assembling new applications by the reuse of libraries from past projects or third-party software. (C) 2009 Elsevier Ireland Ltd. All rights reserved.", "paper_title": "AIBench: A rapid application development framework for translational research in biomedicine", "paper_id": "WOS:000277863600009"}