{"auto_keywords": [{"score": 0.0412505315606271, "phrase": "furer's_algorithm"}, {"score": 0.013089635809579185, "phrase": "complex_numbers"}, {"score": 0.011604777550963024, "phrase": "modular_arithmetic"}, {"score": 0.00481495049065317, "phrase": "fast_integer_multiplication_using_modular"}, {"score": 0.004119313626110943, "phrase": "intermediate_computations"}, {"score": 0.0035855066449812273, "phrase": "previous_best_algorithm"}, {"score": 0.003483288758965098, "phrase": "schonhage"}, {"score": 0.003443226743720556, "phrase": "strassen"}, {"score": 0.0030492472433481764, "phrase": "complex_number_arithmetic"}, {"score": 0.0028446460307503343, "phrase": "truncation_error"}, {"score": 0.002795671770303977, "phrase": "finite_approximations"}, {"score": 0.0025044454602720597, "phrase": "fast_fourier"}, {"score": 0.002461313735611462, "phrase": "multivariate_polynomials"}, {"score": 0.002309408211203032, "phrase": "arithmetic_progression"}, {"score": 0.0022176487309947266, "phrase": "modular_setting"}, {"score": 0.0021049977753042253, "phrase": "p-adic_version"}], "paper_keywords": ["integer multiplication", " fast Fourier transform", " modular arithmetic"], "paper_abstract": "We give an N . log N . 2(O(log)* (N)) time algorithm to multiply two N-bit integers that uses modular arithmetic for intermediate computations instead of arithmetic over complex numbers as in Furer's algorithm, which also has the same and so far the best known complexity. The previous best algorithm using modular arithmetic (by Schonhage and Strassen) has complexity O(N . log N . log log N). The advantage of using modular arithmetic as opposed to complex number arithmetic is that we can completely evade the task of bounding the truncation error due to finite approximations of complex numbers, which makes the analysis relatively simple. Our algorithm is based upon Furer's algorithm, but uses fast Fourier transform over multivariate polynomials along with an estimate of the least prime in an arithmetic progression to achieve this improvement in the modular setting. It can also be viewed as a p-adic version of Furer's algorithm.", "paper_title": "FAST INTEGER MULTIPLICATION USING MODULAR ARITHMETIC", "paper_id": "WOS:000318353800012"}