{"auto_keywords": [{"score": 0.039951040104055695, "phrase": "processing_elements"}, {"score": 0.008900294593031384, "phrase": "optimization_problem"}, {"score": 0.00481495049065317, "phrase": "distributed_embedded_systems"}, {"score": 0.004772367030970874, "phrase": "latency_analysis"}, {"score": 0.004730158389701481, "phrase": "k-level_diagonal_search"}, {"score": 0.004605748839642513, "phrase": "systematic_methodology"}, {"score": 0.004544770921520536, "phrase": "rapid_and_cost-effective_re-engineering"}, {"score": 0.004386063799793622, "phrase": "embedded_system"}, {"score": 0.004176813329075736, "phrase": "legacy_system"}, {"score": 0.004103212598803194, "phrase": "newly_imposed_performance_requirements"}, {"score": 0.004013025478863664, "phrase": "input-to-output_latency"}, {"score": 0.0039248128268720645, "phrase": "performance_bottlenecks"}, {"score": 0.003754140294151593, "phrase": "least_cost"}, {"score": 0.0036390887584943723, "phrase": "system_design"}, {"score": 0.003574929398913029, "phrase": "process_network"}, {"score": 0.003449972561293443, "phrase": "new_throughput_requirement"}, {"score": 0.0029263562233195423, "phrase": "bottleneck_processes"}, {"score": 0.0027865506182608263, "phrase": "scaling_factors"}, {"score": 0.002761856557698856, "phrase": "free_variables"}, {"score": 0.0025266078302900036, "phrase": "upgrade_cost"}, {"score": 0.002427372728532664, "phrase": "accurate_latency_analysis_technique"}, {"score": 0.002405853977978678, "phrase": "precedence-constrained_tasks"}, {"score": 0.0023845255359681143, "phrase": "preemptive_fixed_priority_scheduling"}, {"score": 0.002321665383971456, "phrase": "k-level_diagonal_search_algorithm"}, {"score": 0.0022404162042797262, "phrase": "search_time"}, {"score": 0.0021620042653528846, "phrase": "proposed_re-engineering_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["distributed embedded systems", " re-engineering", " latency analysis", " performance/cost optimization"], "paper_abstract": "This paper presents a systematic methodology aimed at rapid and cost-effective re-engineering of distributed embedded systems. We define embedded system re-engineering as an analysis and alteration of a legacy system, to guarantee newly imposed performance requirements such as throughput and input-to-output latency. Our methodology pinpoints performance bottlenecks of a system and selectively upgrades processing elements at the least cost. Inputs for our methodology include a system design specified by a process network over a set of processing elements and a new throughput requirement. The output is a set of scaling factors that represent the ratios of the performance upgrades for processing elements. Our methodology works in two steps. First, it estimates the latency of each process and identifies bottleneck processes. Second, it derives a system of constraints with scaling factors being free variables and formulates an optimization problem. Then, it solves the optimization problem for scaling factors with an objective of minimizing upgrade cost. For this methodology, we propose an accurate latency analysis technique for precedence-constrained tasks under preemptive fixed priority scheduling. We also propose a k-level diagonal search algorithm that allows us to trade optimality for search time. Our experimental results show the effectiveness of the proposed re-engineering approach. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Rapid performance re-engineering of distributed embedded systems via latency analysis and k-level diagonal search", "paper_id": "WOS:000234656800002"}