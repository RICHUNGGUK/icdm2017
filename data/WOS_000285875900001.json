{"auto_keywords": [{"score": 0.03898289608206757, "phrase": "constant_differences"}, {"score": 0.03562071693205257, "phrase": "sis"}, {"score": 0.03323526117468228, "phrase": "maximum_difference"}, {"score": 0.03159256104725742, "phrase": "lis"}, {"score": 0.00481495049065317, "phrase": "scheduling_policies_in_adversarial_networks_with_non-synchronized_clocks"}, {"score": 0.004595427853257205, "phrase": "computer_science"}, {"score": 0.004349888963714649, "phrase": "router_clocks"}, {"score": 0.0042204565345581955, "phrase": "new_model"}, {"score": 0.004094859572002327, "phrase": "new_extension"}, {"score": 0.004016879495597319, "phrase": "scheduling_policies"}, {"score": 0.00390803830940721, "phrase": "first_approach"}, {"score": 0.003618662721828278, "phrase": "universally_stable_policies"}, {"score": 0.0035988294152570154, "phrase": "caqt"}, {"score": 0.0035594871529132195, "phrase": "injection_time"}, {"score": 0.003530261958550734, "phrase": "remaining_path"}, {"score": 0.003510911455050294, "phrase": "schedule_packets"}, {"score": 0.0033970080655122965, "phrase": "shortest_in_system"}, {"score": 0.003215295260684715, "phrase": "clock_differences"}, {"score": 0.0030600539712413804, "phrase": "universal_stability"}, {"score": 0.0028883594129269913, "phrase": "arrival_time"}, {"score": 0.0026816503240033197, "phrase": "necessary_requirement"}, {"score": 0.002573257062541549, "phrase": "bounded_clock_difference"}, {"score": 0.0025311334624125085, "phrase": "new_policy"}, {"score": 0.0023759346019385638, "phrase": "edge_queues"}, {"score": 0.0021876814398268775, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "stochastic_injection"}], "paper_keywords": ["Scheduling", " Continuous adversarial queuing theory", " Adversarial models", " Clock skew", " Clock drift", " Clock synchronization"], "paper_abstract": "In this paper we generalize the Continuous Adversarial Queuing Theory (CAQT) model (Blesa et al. in MFCS, Lecture Notes in Computer Science, vol. 3618, pp. 144-155, 2005) by considering the possibility that the router clocks in the network are not synchronized. We name the new model Non Synchronized CAQT (NSCAQT). Clearly, this new extension to the model only affects those scheduling policies that use some form of timing. In a first approach we consider the case in which although not synchronized, all clocks run at the same speed, maintaining constant differences. In this case we show that all universally stable policies in CAQT that use the injection time and the remaining path to schedule packets remain universally stable. These policies include, for instance, Shortest in System (SIS) and Longest in System (LIS). Then, we study the case in which clock differences can vary over time, but the maximum difference is bounded. In this model we show the universal stability of two families of policies related to SIS and LIS respectively (the priority of a packet in these policies depends on the arrival time and a function of the path traversed). The bounds we obtain in this case depend on the maximum difference between clocks. This is a necessary requirement, since we also show that LIS is not universally stable in systems without bounded clock difference. We then present a new policy that we call Longest in Queues (LIQ), which gives priority to the packet that has been waiting the longest in edge queues. This policy is universally stable and, if clocks maintain constant differences, the bounds we prove do not depend on them. To finish, we provide with simulation results that compare the behavior of some of these policies in a network with stochastic injection of packets.", "paper_title": "Performance of Scheduling Policies in Adversarial Networks with Non-synchronized Clocks", "paper_id": "WOS:000285875900001"}