{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "aes_software_implementations"}, {"score": 0.004411588377842043, "phrase": "aes_implementations"}, {"score": 0.004326624385772596, "phrase": "power-analysis_attacks"}, {"score": 0.004121275290411653, "phrase": "ongoing_research"}, {"score": 0.0038499929374478125, "phrase": "aes_implementation"}, {"score": 0.0037392451233558234, "phrase": "subbytes_operation"}, {"score": 0.0035616743422949766, "phrase": "non-linear_operation"}, {"score": 0.003459191419478298, "phrase": "current_solutions"}, {"score": 0.0029602552900111407, "phrase": "large_amount"}, {"score": 0.002659527314613792, "phrase": "masking_scheme"}, {"score": 0.0025829353063908256, "phrase": "considerably_less_tables"}, {"score": 0.0024126686412257407, "phrase": "previously_presented_schemes"}, {"score": 0.002297949552105756, "phrase": "theoretical_proof"}, {"score": 0.0021049977753042253, "phrase": "actually_performed_dpa_attacks"}], "paper_keywords": [""], "paper_abstract": "The development of masking schemes to secure AES implementations against power-analysis attacks is a topic of ongoing research. The most challenging part in masking an AES implementation is the SubBytes operation because it is a non-linear operation. The current solutions are expensive to implement especially on small 8-bit processors; they either need many large tables or require a large amount of operations. In this article, we present a masking scheme that requires considerably less tables and considerably less operations than the previously presented schemes. We give a theoretical proof of security for our scheme and confirm it with actually performed DPA attacks.", "paper_title": "An efficient masking scheme for AES software implementations", "paper_id": "WOS:000236882500023"}