{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tiled_multi-core_architectures"}, {"score": 0.037349556578438504, "phrase": "streamtmc"}, {"score": 0.004681226806682058, "phrase": "important_kind"}, {"score": 0.004637478829869904, "phrase": "multi-core_design"}, {"score": 0.004551199992546761, "phrase": "low_power_consumption"}, {"score": 0.004508661664944657, "phrase": "stream_programming"}, {"score": 0.00432208488976429, "phrase": "important_application_domains"}, {"score": 0.00422177384286051, "phrase": "attractive_way"}, {"score": 0.004047020753789236, "phrase": "architecture_characteristics"}, {"score": 0.004009175817816061, "phrase": "large_amounts"}, {"score": 0.003934540154108188, "phrase": "memory_hierarchy"}, {"score": 0.003771631577951067, "phrase": "performance_challenge"}, {"score": 0.0037363522297378777, "phrase": "stream_programs"}, {"score": 0.003684048704119722, "phrase": "tiled_multi-cores"}, {"score": 0.003353521531649663, "phrase": "stream_applications"}, {"score": 0.003306559295382181, "phrase": "tiled_multi-core"}, {"score": 0.003125175084962886, "phrase": "software_pipelining_schedule"}, {"score": 0.002967634471075658, "phrase": "efficient_hybrid"}, {"score": 0.0028986672783671147, "phrase": "buffer_allocation_algorithm"}, {"score": 0.0028715299874549245, "phrase": "data_copy_elimination_mechanism"}, {"score": 0.002752513434446804, "phrase": "data_access"}, {"score": 0.002675914969626753, "phrase": "aware_mapping"}, {"score": 0.0026014425686078993, "phrase": "network_communication"}, {"score": 0.00257708070026329, "phrase": "synchronization_overhead"}, {"score": 0.0025171669791790438, "phrase": "streamtmc_compiler"}, {"score": 0.002493592357827492, "phrase": "godson-t"}, {"score": 0.0023902026696615473, "phrase": "experimental_study"}, {"score": 0.0023127544795063263, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Tiled multi-core", " Stream compilation", " Godson-T", " StreamTMC"], "paper_abstract": "Tiled multi-core architectures have become an important kind of multi-core design for its good scalability and low power consumption. Stream programming has been productively applied to a number of important application domains. It provides an attractive way to exploit the parallelism. However, the architecture characteristics of large amounts of cores, memory hierarchy and exposed communication between tiles have presented a performance challenge for stream programs running on tiled multi-cores. In this paper, we present StreamTMC, an efficient stream compilation framework that optimizes the execution of stream applications for the tiled multi-core. This framework is composed of three optimization phases. First, a software pipelining schedule is constructed to exploit the parallelism. Second, an efficient hybrid of SPM and cache buffer allocation algorithm and data copy elimination mechanism is proposed to improve the efficiency of the data access. Last, a communication aware mapping is proposed to reduce the network communication and synchronization overhead. We implement the StreamTMC compiler on Godson-T, a 64-core tiled architecture and conduct an experimental study to verify the effectiveness. The experimental results indicate that StreamTMC can achieve an average of 58% ;improvement over the performance before optimization. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "StreamTMC: Stream compilation for tiled multi-core architectures", "paper_id": "WOS:000315614400009"}