{"auto_keywords": [{"score": 0.03541758719615606, "phrase": "abandonment_rates"}, {"score": 0.03259480253497483, "phrase": "reward_case"}, {"score": 0.00481495049065317, "phrase": "single-server_system"}, {"score": 0.004661176995136095, "phrase": "dynamic_server_control"}, {"score": 0.004620093797504386, "phrase": "two-class_service_system"}, {"score": 0.004485735417293941, "phrase": "first_case"}, {"score": 0.004406994912939125, "phrase": "service_completion"}, {"score": 0.004329630571352367, "phrase": "abandonment_costs"}, {"score": 0.004266194308906261, "phrase": "lost_opportunity"}, {"score": 0.004081385289516914, "phrase": "unit_time"}, {"score": 0.003974349782102708, "phrase": "fixed_cost"}, {"score": 0.003802135020791801, "phrase": "classic_scheduling_question"}, {"score": 0.003680587852807675, "phrase": "simple_priority_rules"}, {"score": 0.003500313767208306, "phrase": "classic_c-mu_rule"}, {"score": 0.0034185505275141077, "phrase": "added_condition"}, {"score": 0.003299460925313939, "phrase": "priority_rule"}, {"score": 0.0031377955308198634, "phrase": "significant_loss"}, {"score": 0.0030017207229983385, "phrase": "intuitive_tradeoff"}, {"score": 0.0028885579903645043, "phrase": "traditional_solution_techniques"}, {"score": 0.002763261749602258, "phrase": "interchange_argument"}, {"score": 0.002581587777482942, "phrase": "usual_discrete-time_markov_decision_process_techniques"}, {"score": 0.0025212306068464452, "phrase": "continuous-time_markov_decision_process"}, {"score": 0.00246957392654378, "phrase": "sample_path_arguments"}, {"score": 0.002426137929553722, "phrase": "savvy_use"}, {"score": 0.0023905240285582658, "phrase": "holding_cost_case"}, {"score": 0.002286781334850213, "phrase": "first_time"}, {"score": 0.002220127720702002, "phrase": "ctmdp"}, {"score": 0.002181069180139225, "phrase": "queueing_control_problem"}, {"score": 0.0021049977753042253, "phrase": "detailed_numerical_study"}], "paper_keywords": ["Priority rules", " Dynamic programming", " Control of queues"], "paper_abstract": "In this paper, we discuss the dynamic server control in a two-class service system with abandonments. Two models are considered. In the first case, rewards are received upon service completion, and there are no abandonment costs (other than the lost opportunity to gain rewards). In the second, holding costs per customer per unit time are accrued, and each abandonment involves a fixed cost. Both cases are considered under the discounted or average reward/cost criterion. These are extensions of the classic scheduling question (without abandonments) where it is well known that simple priority rules hold. The contributions in this paper are twofold. First, we show that the classic c-mu rule does not hold in general. An added condition on the ordering of the abandonment rates is sufficient to recover the priority rule. Counterexamples show that this condition is not necessary, but when it is violated, significant loss can occur. In the reward case, we show that the decision involves an intuitive tradeoff between getting more rewards and avoiding idling. Secondly, we note that traditional solution techniques are not directly applicable. Since customers may leave in between services, an interchange argument cannot be applied. Since the abandonment rates are unbounded we cannot apply uniformization-and thus cannot use the usual discrete-time Markov decision process techniques. After formulating the problem as a continuous-time Markov decision process (CTMDP), we use sample path arguments in the reward case and a savvy use of truncation in the holding cost case to yield the results. As far as we know, this is the first time that either have been used in conjunction with the CTMDP to show structure in a queueing control problem. The insights made in each model are supported by a detailed numerical study.", "paper_title": "Dynamic control of a single-server system with abandonments", "paper_id": "WOS:000286297600004"}