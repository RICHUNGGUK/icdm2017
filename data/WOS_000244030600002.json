{"auto_keywords": [{"score": 0.047331849940464424, "phrase": "elementary_affine_logic"}, {"score": 0.04472877610960968, "phrase": "lambda_terms"}, {"score": 0.04330320170884125, "phrase": "eal"}, {"score": 0.00481495049065317, "phrase": "optimal_reduction"}, {"score": 0.004351595642056769, "phrase": "type_inference_algorithm"}, {"score": 0.0038996120252338556, "phrase": "syntax_tree"}, {"score": 0.003802135020791801, "phrase": "simple_typed_lambda_term"}, {"score": 0.0036144035798673967, "phrase": "linear_constraints"}, {"score": 0.0034359094594153304, "phrase": "parametric_elementary_type"}, {"score": 0.003104849179057156, "phrase": "collected_constraints"}, {"score": 0.002758597251689795, "phrase": "practical_counterpart"}, {"score": 0.002556625752785268, "phrase": "eal-typeable_lambda_terms"}, {"score": 0.0024926348205500715, "phrase": "lamping's_abstract_algorithm"}, {"score": 0.0024302416436559867, "phrase": "substantial_increase"}, {"score": 0.0021408862709571615, "phrase": "intuitionistic_proofs"}, {"score": 0.0021049977753042253, "phrase": "linear_logic_proofs"}], "paper_keywords": ["languages", " theory", " linear logic", " optimal reduction", " lamping algorithm"], "paper_abstract": "We propose a type inference algorithm for lambda terms in elementary affine logic (EAL). The algorithm decorates the syntax tree of a simple typed lambda term and collects a set of linear constraints. The result is a parametric elementary type that can be instantiated with any solution of the set of collected constraints. We point out that the typeability of lambda terms in EAL has a practical counterpart, since it is possible to reduce any EAL-typeable lambda terms with the Lamping's abstract algorithm obtaining a substantial increase of performances. We show how to apply the same techniques to obtain decorations of intuitionistic proofs into linear logic proofs.", "paper_title": "Optimizing optimal reduction: A type inference algorithm for elementary affine logic", "paper_id": "WOS:000244030600002"}