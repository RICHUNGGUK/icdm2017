{"auto_keywords": [{"score": 0.03038739158734812, "phrase": "rounding-direction_attributes"}, {"score": 0.00481495049065317, "phrase": "bivariate_polynomial_evaluation"}, {"score": 0.004490842671590769, "phrase": "correctly_rounded_square_roots"}, {"score": 0.004446349752828045, "phrase": "binary_floating-point_data"}, {"score": 0.0043804319008535555, "phrase": "fixed-point_evaluation"}, {"score": 0.004315487055548749, "phrase": "particular_integer_polynomials"}, {"score": 0.0041469500929423595, "phrase": "accurate_evaluation_schemes"}, {"score": 0.003906357144047631, "phrase": "high_instruction-level_parallelism"}, {"score": 0.0035712919163869176, "phrase": "c_implementation"}, {"score": 0.0032004205378150354, "phrase": "software_implementation"}, {"score": 0.002955050521440921, "phrase": "special_operands"}, {"score": 0.002925728709297618, "phrase": "subnormal_numbers"}, {"score": 0.0027557911038816256, "phrase": "status_flags"}, {"score": 0.0023028105026714533, "phrase": "practical_interest"}, {"score": 0.002168975681697056, "phrase": "generated_assembly_code"}, {"score": 0.0021049977753042253, "phrase": "indeed_low_latency"}], "paper_keywords": ["Binary floating-point arithmetic", " square root", " correct rounding", " IEEE 754", " polynomial evaluation", " instruction-level parallelism", " rounding error analysis", " C software implementation", " VLIW integer processor"], "paper_abstract": "In this paper, we show how to reduce the computation of correctly rounded square roots of binary floating-point data to the fixed-point evaluation of some particular integer polynomials in two variables. By designing parallel and accurate evaluation schemes for such bivariate polynomials, we show further that this approach allows for high instruction-level parallelism (ILP) exposure, and thus, potentially low-latency implementations. Then, as an illustration, we detail a C implementation of our method in the case of IEEE 754-2008 binary32 floating-point data (formerly called single precision in the 1985 version of the IEEE 754 standard). This software implementation, which assumes 32-bit unsigned integer arithmetic only, is almost complete in the sense that it supports special operands, subnormal numbers, and all rounding-direction attributes, but not exception handling (that is, status flags are not set). Finally, we have carried out experiments with this implementation on the ST231, an integer processor from the STMicroelectronics' ST200 family, using the ST200 family VLIW compiler. The results obtained demonstrate the practical interest of our approach in that context: for all rounding-direction attributes, the generated assembly code is optimally scheduled and has indeed low latency (23 cycles).", "paper_title": "Computing Floating-Point Square Roots via Bivariate Polynomial Evaluation", "paper_id": "WOS:000285599400008"}