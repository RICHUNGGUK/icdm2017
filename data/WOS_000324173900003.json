{"auto_keywords": [{"score": 0.03670702837514332, "phrase": "btb"}, {"score": 0.01555589036045783, "phrase": "runtime_program_validation"}, {"score": 0.015393746555358745, "phrase": "program_execution"}, {"score": 0.00481495049065317, "phrase": "speculative_architectures"}, {"score": 0.004566567411073082, "phrase": "malicious_attackers"}, {"score": 0.004494570360108983, "phrase": "software_vulnerabilities"}, {"score": 0.004400329132129292, "phrase": "program_behavior"}, {"score": 0.004330941610682453, "phrase": "control_data"}, {"score": 0.004285289574869884, "phrase": "decision_data"}, {"score": 0.004151188559520802, "phrase": "computer_system_security"}, {"score": 0.00385431710959668, "phrase": "great_hardware_overhead"}, {"score": 0.0037935066882208235, "phrase": "false_alarms"}, {"score": 0.0036942726653704213, "phrase": "new_hardware-based_approach"}, {"score": 0.0036167509502276294, "phrase": "existing_speculative_architectures"}, {"score": 0.003522124318486352, "phrase": "on-chip_branch_target_buffer"}, {"score": 0.003322540556404882, "phrase": "legitimate_control_flow_transfers"}, {"score": 0.0032527939106509946, "phrase": "secure_memory_region"}, {"score": 0.0030521898646210413, "phrase": "correct_program_path_information"}, {"score": 0.002988101395789399, "phrase": "indirect_branch_site"}, {"score": 0.0028487656293168795, "phrase": "decision_history"}, {"score": 0.002818692837561076, "phrase": "previous_conditional_branches"}, {"score": 0.0025892330566358503, "phrase": "upper_operating_system"}, {"score": 0.0024553821147953463, "phrase": "legacy_code"}, {"score": 0.0024037949232582462, "phrase": "good_code_locality"}, {"score": 0.002365815362517737, "phrase": "executable_programs"}, {"score": 0.002316105585203396, "phrase": "branch_prediction"}, {"score": 0.002255431275670053, "phrase": "control-flow_validations"}, {"score": 0.002208035721125305, "phrase": "off-chip_memory"}, {"score": 0.0021274723597955567, "phrase": "negligible_performance_penalty"}, {"score": 0.0021049977753042253, "phrase": "small_storage"}], "paper_keywords": ["Security", " Verification", " Program validation", " control flow validation", " security attacks"], "paper_abstract": "Program execution can be tampered with by malicious attackers through exploiting software vulnerabilities. Changing the program behavior by compromising control data and decision data has become the most serious threat in computer system security. Although several hardware approaches have been presented to validate program execution, they either incur great hardware overhead or introduce false alarms. We propose a new hardware-based approach by leveraging the existing speculative architectures for runtime program validation. The on-chip branch target buffer (BTB) is utilized as a cache of the legitimate control flow transfers stored in a secure memory region. In addition, the BTB is extended to store the correct program path information. At each indirect branch site, the BTB is used to validate the decision history of previous conditional branches and monitor the following execution path at runtime. Implementation of this approach is transparent to the upper operating system and programs. Thus, it is applicable to legacy code. Because of good code locality of the executable programs and effectiveness of branch prediction, the frequency of control-flow validations against the secure off-chip memory is low. Our experimental results show a negligible performance penalty and small storage overhead.", "paper_title": "Leveraging Speculative Architectures for Runtime Program Validation", "paper_id": "WOS:000324173900003"}