{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "modern_superscalar_cpus"}, {"score": 0.0047152877145889656, "phrase": "large_complex_structures"}, {"score": 0.0046176782475198085, "phrase": "diverse_execution_units"}, {"score": 0.004475022550508119, "phrase": "wide_dynamic_power_range"}, {"score": 0.004291617358806677, "phrase": "power_delivery_network"}, {"score": 0.0041589926969138585, "phrase": "worst-case_power_consumption"}, {"score": 0.0036680857629458785, "phrase": "small_systems"}, {"score": 0.0035920758080335655, "phrase": "instantaneous_power_excursions"}, {"score": 0.003480993634130542, "phrase": "voltage_droops"}, {"score": 0.0034088473318056537, "phrase": "power_management_algorithms"}, {"score": 0.0031678720736808574, "phrase": "instantaneous_events"}, {"score": 0.0028828348726682965, "phrase": "novel_compiler-directed_framework"}, {"score": 0.002362320344521919, "phrase": "output_trace"}], "paper_keywords": ["Performance", " Design", " Algorithms", " Compiler assisted", " power management", " energy", " power modeling"], "paper_abstract": "Modern superscalar CPUs contain large complex structures and diverse execution units, consuming wide dynamic power range. Building a power delivery network for the worst-case power consumption is not energy efficient and often is impossible to fit in small systems. Instantaneous power excursions can cause voltage droops. Power management algorithms are too slow to respond to instantaneous events. In this article, we propose a novel compiler-directed framework to address this problem. The framework is validated on a 4th Generation Intel (R) Core (TM) processor and with simulator on output trace. Up to 16% performance speedup is measured over baseline for the SPEC CPU2006 benchmarks.", "paper_title": "Compiler-Directed Power Management for Superscalars", "paper_id": "WOS:000348232000014"}