{"auto_keywords": [{"score": 0.03626275334087338, "phrase": "complete_system"}, {"score": 0.00481495049065317, "phrase": "lacking_sub-system"}, {"score": 0.00478740563679966, "phrase": "software_engineering_research"}, {"score": 0.004678785623021003, "phrase": "software_development"}, {"score": 0.0044688500725247726, "phrase": "pre-existing_sub-systems"}, {"score": 0.004417848254181138, "phrase": "service-based_development"}, {"score": 0.004159446063902181, "phrase": "external_vendors"}, {"score": 0.004007083686875716, "phrase": "formal_specification"}, {"score": 0.003603193055343792, "phrase": "temporal_logic_formulae"}, {"score": 0.0035620354052144656, "phrase": "ccs_processes"}, {"score": 0.0034118234596993836, "phrase": "efficient_and_automatic_procedure"}, {"score": 0.0032867564481152763, "phrase": "existing_process"}, {"score": 0.0032028587883593702, "phrase": "vertical_bar_q"}, {"score": 0.003157174936641705, "phrase": "psi_important_features"}, {"score": 0.0030854280671143556, "phrase": "derived_property_psi"}, {"score": 0.0030414140732789186, "phrase": "original_one"}, {"score": 0.00298942278888105, "phrase": "verification_process"}, {"score": 0.0028963961037320805, "phrase": "incremental_design"}, {"score": 0.002879794950644701, "phrase": "system_evolution_scenarios"}, {"score": 0.0027189137945757866, "phrase": "new_component"}, {"score": 0.0026116610153271943, "phrase": "suitable_partner"}, {"score": 0.002530359917257626, "phrase": "global_property"}, {"score": 0.002382093728856282, "phrase": "possible_candidate_processes"}, {"score": 0.0023548511815224098, "phrase": "property-directed_and_structural_heuristic"}, {"score": 0.002268441347979241, "phrase": "lacking_component"}, {"score": 0.00224895418418184, "phrase": "logic_formula_guarantees"}, {"score": 0.0021416404045850224, "phrase": "inferred_formula"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["CCS", " Logic", " Formal methods", " Tableau"], "paper_abstract": "Software engineering research is driven by the aim of making software development more dynamic, flexible and evolvable. Nowadays the emphasis is on the evolution of pre-existing sub-systems and component and service-based development, where often only a part of the system is totally under control of the designer, most components being remotely operated by external vendors. In this context, we tackle the following problem: given the formal specification of the (incomplete) system, say it p, already built, how to characterize collaborators of p to be selected, based on a given communication interface L, so that a given property phi is satisfied. Using properties described by temporal logic formulae and systems by CCS processes, if phi is the formula to be satisfied by the complete system, an efficient and automatic procedure is defined to identify a formula psi such that, for each existing process q satisfying psi, the process (p vertical bar q) \\ L satisfies psi Important features of this result are simplicity of the derived property psi, compared to the original one, and scalability of the verification process. Such characteristics are necessary for applying the method to both incremental design and system evolution scenarios where p is already in place, and one needs to understand the specification of the functionality of the new component that should correctly interact with p. Indeed, in general, finding a suitable partner for p is easier than finding a complete system satisfying the global property. Moreover, in this paper it is shown how psi can be used also to select a set of possible candidate processes q through a property-directed and structural heuristic. From the verification point of view, the description of the lacking component through a logic formula guarantees correctness of the integration with p of any process that exhibits a behaviour compliant with the inferred formula. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Incremental construction of systems: An efficient characterization of the lacking sub-system", "paper_id": "WOS:000321536100009"}