{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "domain_decomposition_methods"}, {"score": 0.004632388761885302, "phrase": "detailed_description"}, {"score": 0.00456571874088313, "phrase": "high-performance_distributed-memory_implementation"}, {"score": 0.004267004541988167, "phrase": "implementation_hints"}, {"score": 0.0039685202936462815, "phrase": "large-scale_distributed-memory_machines"}, {"score": 0.0037267132967205136, "phrase": "comprehensive_performance"}, {"score": 0.0036908381347418805, "phrase": "scalability_study"}, {"score": 0.003637669525737665, "phrase": "resulting_codes"}, {"score": 0.00346589179059467, "phrase": "poisson_problem"}, {"score": 0.0034159525504642656, "phrase": "large-scale_multicore-based_distributed-memory_machine"}, {"score": 0.0033021988455635403, "phrase": "well-known_theoretical_results"}, {"score": 0.003146212656743413, "phrase": "preconditioning_techniques"}, {"score": 0.003115908199991072, "phrase": "weak_scaling_scenarios"}, {"score": 0.002925899335792914, "phrase": "preconditioned_operator"}, {"score": 0.002869793011316547, "phrase": "constant_with_fixed_load_per_core_and_increasing_number"}, {"score": 0.00269475174341129, "phrase": "mathematical_analysis"}, {"score": 0.0023990982005125763, "phrase": "reasonable_ranges"}, {"score": 0.0023530698447434308, "phrase": "current_distributed-memory_machines"}, {"score": 0.002263639474937039, "phrase": "poor_scalability"}, {"score": 0.0021049977753042253, "phrase": "main_sources"}], "paper_keywords": [""], "paper_abstract": "In this paper we present a detailed description of a high-performance distributed-memory implementation of balancing domain decomposition preconditioning techniques. This coverage provides a pool of implementation hints and considerations that can be very useful for scientists that are willing to tackle large-scale distributed-memory machines using these methods. On the other hand, the paper includes a comprehensive performance and scalability study of the resulting codes when they are applied for the solution of the Poisson problem on a large-scale multicore-based distributed-memory machine with up to 4096 cores. Well-known theoretical results guarantee the optimality (algorithmic scalability) of these preconditioning techniques for weak scaling scenarios, as they are able to keep the condition number of the preconditioned operator bounded by a constant with fixed load per core and increasing number of cores. The experimental study presented in the paper complements this mathematical analysis and answers how far can these methods go in the number of cores and the scale of the problem to still be within reasonable ranges of efficiency on current distributed-memory machines. Besides, for those scenarios where poor scalability is expected, the study precisely identifies, quantifies and justifies which are the main sources of inefficiency.", "paper_title": "Implementation and Scalability Analysis of Balancing Domain Decomposition Methods", "paper_id": "WOS:000322523900002"}