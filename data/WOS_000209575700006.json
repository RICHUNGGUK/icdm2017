{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "energy_efficiency"}, {"score": 0.004753194996637899, "phrase": "financial_applications"}, {"score": 0.004692227830462433, "phrase": "software_applications"}, {"score": 0.004427366754240748, "phrase": "hardware_operations"}, {"score": 0.0042591158963728665, "phrase": "direct_beneficial_impact"}, {"score": 0.0040708542958968605, "phrase": "domain_knowledge"}, {"score": 0.003992729692096799, "phrase": "accurate_analysis"}, {"score": 0.003623949225126944, "phrase": "large_code_bases"}, {"score": 0.0033752674784204412, "phrase": "dynamic_memoization"}, {"score": 0.003310447652300423, "phrase": "software_energy_efficiency"}, {"score": 0.0031233388358844188, "phrase": "pure_functions"}, {"score": 0.0027444334639134217, "phrase": "tabulation_memory"}, {"score": 0.0026743419827100225, "phrase": "workload_variation"}, {"score": 0.0025892330566358503, "phrase": "prototype_software_system"}, {"score": 0.002411383506019635, "phrase": "financial_functions"}, {"score": 0.002380381895973937, "phrase": "empirical_results"}, {"score": 0.0023346234464901978, "phrase": "specific_set"}, {"score": 0.002304606411453748, "phrase": "computation_intensive_pure_functions"}, {"score": 0.0022749744354271816, "phrase": "average_energy_savings"}, {"score": 0.0022168460543913787, "phrase": "time_performance_savings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Green software", " Energy efficiency", " Memoization", " Pure function", " Computational intensive application"], "paper_abstract": "Software applications directly impact on IT energy consumptions as they indirectly guide hardware operations. Optimizing algorithms has a direct beneficial impact on energy efficiency, but it requires domain knowledge and an accurate analysis of the code, which may be infeasible and too costly to perform for large code bases. In this paper we present an approach based on dynamic memoization to increase software energy efficiency. This implies to identify a subset of pure functions that can be tabulated, to automatically store the results corresponding to the most frequent invocations and to dynamically manage the tabulation memory to adapt to workload variation. We implemented a prototype software system to apply memoization and tested it on a set of financial functions. Empirical results on a specific set of computation intensive pure functions show average energy savings of 96.8% and time performance savings of 97%. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Automatic memoization for energy efficiency in financial applications", "paper_id": "WOS:000209575700006"}