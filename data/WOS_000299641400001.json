{"auto_keywords": [{"score": 0.03195141472990055, "phrase": "javascript"}, {"score": 0.00481495049065317, "phrase": "interactive_and_animated_graphical_displays"}, {"score": 0.004747429622531595, "phrase": "r's_graphics_engine"}, {"score": 0.004529258387005067, "phrase": "svg"}, {"score": 0.004392565073466714, "phrase": "two-dimensional_graphical_displays"}, {"score": 0.004035500442527029, "phrase": "resulting_xml_documents"}, {"score": 0.0036553070575015344, "phrase": "different_components"}, {"score": 0.003578600071301459, "phrase": "graphical_display"}, {"score": 0.003150900886669123, "phrase": "interactivity_and_animation_effects"}, {"score": 0.0029565620771207003, "phrase": "dynamic_interactive_effects"}, {"score": 0.002833689453299307, "phrase": "rich_user_interactions"}, {"score": 0.002793874145713024, "phrase": "compelling_visualizations"}, {"score": 0.002735194789581153, "phrase": "resulting_svg_documents"}, {"score": 0.002640114583897493, "phrase": "html_documents"}, {"score": 0.0025664295665392203, "phrase": "javascript_code"}, {"score": 0.0024947959375982614, "phrase": "svg_and_html_objects"}, {"score": 0.002357457094026928, "phrase": "svg_annotation_package"}, {"score": 0.0023079225317714815, "phrase": "static_plots"}, {"score": 0.002259426425685765, "phrase": "r_graphics_functions"}, {"score": 0.0021501863832966966, "phrase": "interactive_and_animated_plots"}, {"score": 0.0021049977753042253, "phrase": "web_and_other_venues"}], "paper_keywords": ["R graphics", " interactive", " animation", " vector graphics", " JavaScript"], "paper_abstract": "We describe an approach to creating interactive and animated graphical displays using R's graphics engine and Scalable Vector Graphics, an XML vocabulary for describing two-dimensional graphical displays. We use the svg() graphics device inR and then post-process the resulting XML documents. The post-processing identifies the elements in the SVG that correspond to the different components of the graphical display, e.g., points, axes, labels, lines. One can then annotate these elements to add interactivity and animation effects. One can also use JavaScript to provide dynamic interactive effects to the plot, enabling rich user interactions and compelling visualizations. The resulting SVG documents can be embedded within HTML documents and can involve JavaScript code that integrates the SVG and HTML objects. The functionality is provided via the SVG Annotation package and makes static plots generated via R graphics functions available as stand-alone, interactive and animated plots for the Web and other venues.", "paper_title": "Interactive and Animated Scalable Vector Graphics and R Data Displays", "paper_id": "WOS:000299641400001"}