{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graph_transition_systems"}, {"score": 0.0320318012066851, "phrase": "heuristic_search"}, {"score": 0.0043533862892678864, "phrase": "hardware_systems"}, {"score": 0.004056769841308405, "phrase": "object_orientation"}, {"score": 0.0037423521744765075, "phrase": "state_spaces"}, {"score": 0.0033492947290751996, "phrase": "basically_transition_systems"}, {"score": 0.0030895394261534776, "phrase": "graph_morphisms"}, {"score": 0.002937493907103812, "phrase": "successful_artificial_intelligence_technique"}, {"score": 0.0028498718992429825, "phrase": "exploration_problems"}, {"score": 0.0026023381988430666, "phrase": "formal_verification"}, {"score": 0.002282166507956957, "phrase": "exploration_process"}, {"score": 0.002214048743052355, "phrase": "main_benefits"}, {"score": 0.0021697677572213086, "phrase": "significant_reductions"}, {"score": 0.0021049977753042253, "phrase": "search_effort"}], "paper_keywords": [""], "paper_abstract": "Graphs are suitable modeling formalisms for software and hardware systems involving aspects such as communication, object orientation, concurrency, mobility and distribution. State spaces of such systems can be represented by graph transition systems, which are basically transition systems whose states and transitions represent graphs and graph morphisms. Heuristic search is a successful Artificial Intelligence technique for solving exploration problems implicitly present in games, planning, and formal verification. Heuristic search exploits information about the problem being solved to guide the exploration process. The main benefits are significant reductions in the search effort and the size of solutions. We propose the application of heuristic search for the analysis of graph transition systems. We define algorithms and heuristics and present experimental results.", "paper_title": "Heuristic search for the analysis of graph transition systems", "paper_id": "WOS:000241436800029"}