{"auto_keywords": [{"score": 0.048019249999775505, "phrase": "gap_constraints"}, {"score": 0.00481495049065317, "phrase": "bit-parallel_algorithm"}, {"score": 0.004772818068176176, "phrase": "sequential_pattern_matching"}, {"score": 0.004731063106790061, "phrase": "wildcards"}, {"score": 0.004547564208690591, "phrase": "one-off_condition"}, {"score": 0.004487989502479992, "phrase": "challenging_topic"}, {"score": 0.004371160978838441, "phrase": "information_retrieval"}, {"score": 0.00431388720289049, "phrase": "dictionary_query"}, {"score": 0.004074232896996879, "phrase": "sail"}, {"score": 0.003780692127133743, "phrase": "existing_algorithms"}, {"score": 0.0035082436540296406, "phrase": "minimum_local_length_constraints"}, {"score": 0.003342471131048328, "phrase": "online_sequential_pattern_matching"}, {"score": 0.003298631258267805, "phrase": "bpbm"}, {"score": 0.003255364511414329, "phrase": "extended_bit-parallelism_operation"}, {"score": 0.003170520716404193, "phrase": "matching_process"}, {"score": 0.0031289290660162145, "phrase": "effective_transition_window_mechanism"}, {"score": 0.002981026404927824, "phrase": "useless_scan_window"}, {"score": 0.002802825862847951, "phrase": "exact_match_positions"}, {"score": 0.0027782510491938315, "phrase": "theoretical_analysis"}, {"score": 0.002753891109273246, "phrase": "experimental_results"}, {"score": 0.002705808393126695, "phrase": "bpbm_algorithm"}, {"score": 0.0025892330566358503, "phrase": "absolute_advantage"}, {"score": 0.0025665261770229757, "phrase": "search_time_complexity"}, {"score": 0.0025106241866273897, "phrase": "better_stability"}, {"score": 0.0024776677004255104, "phrase": "operation_costs"}, {"score": 0.0023918783117166326, "phrase": "sequence_alphabet"}, {"score": 0.0022787359717772976, "phrase": "off-line_pattern_matching"}, {"score": 0.0021049977753042253, "phrase": "matching_ratio"}], "paper_keywords": ["bit-parallelism", " length contraints", " nondeterministic automatons", " one-off condition", " pattern matching", " wildcards"], "paper_abstract": "Pattern matching with both gap constraints and the one-off condition is a challenging topic, especially in bioinformatics, information retrieval, and dictionary query. Among the algorithms to solve the problem, the most efficient one is SAIL, which is time consuming, especially when the pattern is long. In addition, existing algorithms based on bit-parallelism cannot handle a pattern that has only one pattern character between successive wildcards and the minimum local length constraints are zero. We propose an algorithm BPBM to handle online sequential pattern matching. In BPBM, an extended bit-parallelism operation is used to accelerate the matching process. An effective transition window mechanism with two nondeterministic finite state automatons (NFAs) is adopted to drop the useless scan window. It identifies gap constraints automatically and just scans once to export occurrences with exact match positions. Theoretical analysis and experimental results show that the BPBM algorithm is more competitive than other peers. It has an absolute advantage on search time complexity. It also has better stability that decreases operation costs with the increasing of the size of sequence alphabet or the length of the pattern. We also study off-line pattern matching. With twice pruning, left-most and right-most, we can increase the matching ratio about 2.08% on average.", "paper_title": "A Bit-Parallel Algorithm for Sequential Pattern Matching with Wildcards", "paper_id": "WOS:000295452300002"}