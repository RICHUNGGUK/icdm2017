{"auto_keywords": [{"score": 0.04952330627445754, "phrase": "cloud_computing"}, {"score": 0.008713768692145006, "phrase": "public_auditability"}, {"score": 0.005203031110061515, "phrase": "prior_works"}, {"score": 0.004786920391043703, "phrase": "data_dynamics_for_storage_security"}, {"score": 0.004649187277140919, "phrase": "next-generation_architecture"}, {"score": 0.0045418465969859064, "phrase": "application_software"}, {"score": 0.00447601516255334, "phrase": "centralized_large_data_centers"}, {"score": 0.004259213086199962, "phrase": "unique_paradigm"}, {"score": 0.004167636131763941, "phrase": "multiple_auditing_tasks"}, {"score": 0.004005783122073581, "phrase": "data_storage"}, {"score": 0.00384523125280454, "phrase": "third_party_auditor"}, {"score": 0.00382283290248478, "phrase": "tpa"}, {"score": 0.003745420968144244, "phrase": "cloud_client"}, {"score": 0.0036588697886897757, "phrase": "dynamic_data"}, {"score": 0.0032078703296827436, "phrase": "data_dynamics"}, {"score": 0.00316131270466841, "phrase": "data_operation"}, {"score": 0.003124552067168583, "phrase": "block_modification"}, {"score": 0.0030345041068691224, "phrase": "significant_step"}, {"score": 0.0028454025430602542, "phrase": "remote_data_integrity"}, {"score": 0.002771472508484958, "phrase": "dynamic_data_operations"}, {"score": 0.00266805370779555, "phrase": "potential_security_problems"}, {"score": 0.0026524883963026987, "phrase": "direct_extensions"}, {"score": 0.0025385994743190796, "phrase": "elegant_verification_scheme"}, {"score": 0.0025164138447059023, "phrase": "seamless_integration"}, {"score": 0.0024295886469293962, "phrase": "efficient_data_dynamics"}, {"score": 0.002394299529213776, "phrase": "existing_proof"}, {"score": 0.002380327476198495, "phrase": "storage_models"}, {"score": 0.002352626922459313, "phrase": "classic_merkle_hash_tree_construction"}, {"score": 0.002338897481852333, "phrase": "block_tag_authentication"}, {"score": 0.00231167794364843, "phrase": "efficient_handling"}, {"score": 0.0022450038337918934, "phrase": "bilinear_aggregate_signature"}, {"score": 0.002205923961799702, "phrase": "multiuser_setting"}, {"score": 0.0021485732356561287, "phrase": "extensive_security"}, {"score": 0.0021049977753042253, "phrase": "proposed_schemes"}], "paper_keywords": ["Data storage", " public auditability", " data dynamics", " cloud computing"], "paper_abstract": "Cloud Computing has been envisioned as the next-generation architecture of IT Enterprise. It moves the application software and databases to the centralized large data centers, where the management of the data and services may not be fully trustworthy. This unique paradigm brings about many new security challenges, which have not been well understood. This work studies the problem of ensuring the integrity of data storage in Cloud Computing. In particular, we consider the task of allowing a third party auditor (TPA), on behalf of the cloud client, to verify the integrity of the dynamic data stored in the cloud. The introduction of TPA eliminates the involvement of the client through the auditing of whether his data stored in the cloud are indeed intact, which can be important in achieving economies of scale for Cloud Computing. The support for data dynamics via the most general forms of data operation, such as block modification, insertion, and deletion, is also a significant step toward practicality, since services in Cloud Computing are not limited to archive or backup data only. While prior works on ensuring remote data integrity often lacks the support of either public auditability or dynamic data operations, this paper achieves both. We first identify the difficulties and potential security problems of direct extensions with fully dynamic data updates from prior works and then show how to construct an elegant verification scheme for the seamless integration of these two salient features in our protocol design. In particular, to achieve efficient data dynamics, we improve the existing proof of storage models by manipulating the classic Merkle Hash Tree construction for block tag authentication. To support efficient handling of multiple auditing tasks, we further explore the technique of bilinear aggregate signature to extend our main result into a multiuser setting, where TPA can perform multiple auditing tasks simultaneously. Extensive security and performance analysis show that the proposed schemes are highly efficient and provably secure.", "paper_title": "Enabling Public Auditability and Data Dynamics for Storage Security in Cloud Computing", "paper_id": "WOS:000288755400012"}