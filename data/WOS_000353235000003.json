{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_discovery"}, {"score": 0.004729856080441582, "phrase": "distributed_system"}, {"score": 0.0045370785151713396, "phrase": "service-oriented_architecture"}, {"score": 0.004456872931482395, "phrase": "efficient_mechanism"}, {"score": 0.004378078970574258, "phrase": "appropriate_services"}, {"score": 0.0041995784967999985, "phrase": "recent_emergence"}, {"score": 0.003818326867123525, "phrase": "rudimentary_techniques"}, {"score": 0.0037507793596022326, "phrase": "service_information"}, {"score": 0.00368442237104581, "phrase": "matching_activities"}, {"score": 0.0034922880300145283, "phrase": "complex_user_requirements"}, {"score": 0.003290494847464381, "phrase": "relevant_services"}, {"score": 0.0032130703855586685, "phrase": "high_degree"}, {"score": 0.0031003255054939524, "phrase": "existing_choices"}, {"score": 0.002938560664857691, "phrase": "discovery_service"}, {"score": 0.002801849371896573, "phrase": "complex_tasks"}, {"score": 0.0026874405408023956, "phrase": "required_services"}, {"score": 0.0026241684260044414, "phrase": "experimental_test_bed"}, {"score": 0.002414191082427217, "phrase": "experimental_results"}, {"score": 0.0023018188296933923, "phrase": "selected_services"}, {"score": 0.002234252028553481, "phrase": "discovery_time"}, {"score": 0.0021946656099592608, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["distributed computing", " feedback", " learning systems", " search methods", " service selection", " specification matching", " quality of service"], "paper_abstract": "A distributed system of services assembled according to a service-oriented architecture requires an efficient mechanism to discover appropriate services deployed over a network. The recent emergence of many service marketplaces makes the case for the existence of such a discovery service. These marketplaces typically provide rudimentary techniques to publish service information and associated matching activities. Such simple matching techniques are typically not suitable to address complex user requirements. Therefore, it is a challenge to discover relevant services, with a high degree of accuracy, out of existing choices. This paper discusses experiments performed on a discovery service whose search techniques incorporate learning profiles to accomplish these complex tasks. The UniFrame Resource Discovery System, which searches for required services, provided an experimental test bed for these experiments. The article describes these techniques and explains their algorithms. Experimental results illustrate the gains in the quality of selected services and reduction in the discovery time using the proposed techniques. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Learning improves service discovery", "paper_id": "WOS:000353235000003"}