{"auto_keywords": [{"score": 0.04734096802024188, "phrase": "max_h-subgraph_problem"}, {"score": 0.008222230719271141, "phrase": "heaviest_cycle"}, {"score": 0.00481495049065317, "phrase": "heaviest_h-subgraphs"}, {"score": 0.004788057423546704, "phrase": "real_weighted_graphs"}, {"score": 0.004695103516280934, "phrase": "graph_g"}, {"score": 0.004668876693176078, "phrase": "real_weights"}, {"score": 0.004426882270402403, "phrase": "maximum_total_weight"}, {"score": 0.004328764169068557, "phrase": "new_strongly_polynomial_algorithms"}, {"score": 0.004150592040012897, "phrase": "fast_matrix_multiplication"}, {"score": 0.00411584380698062, "phrase": "vertex-weighted_graphs"}, {"score": 0.0034495044604576385, "phrase": "fixed_graph"}, {"score": 0.003430211567320493, "phrase": "h_vertices"}, {"score": 0.0033447157263095223, "phrase": "matrix_multiplication"}, {"score": 0.003215924537673036, "phrase": "small_integer_program"}, {"score": 0.0026498854775140854, "phrase": "improved_algorithms"}, {"score": 0.0026056359564738413, "phrase": "edge-weighted_case"}, {"score": 0.0023551955270737215, "phrase": "fixed_length"}, {"score": 0.0023223663501882917, "phrase": "efficient_algorithms"}, {"score": 0.002270786672851054, "phrase": "previously_existing_algorithms"}, {"score": 0.0022079164993671655, "phrase": "chromatic_h-subgraphs"}, {"score": 0.002195552442011313, "phrase": "edge-colored_graphs"}, {"score": 0.0021347607855562102, "phrase": "distance_product"}, {"score": 0.0021049977753042253, "phrase": "truly_subcubic_time"}], "paper_keywords": ["Algorithms", " Theory", " H-subgraph", " matrix multiplication", " weighted graph"], "paper_abstract": "For a graph G with real weights assigned to the vertices (edges), the MAX H-SUBGRAPH problem is to find an H-subgraph of G with maximum total weight, if one exists. Our main results are new strongly polynomial algorithms for the MAX H-SUBGRAPH problem. Some of our algorithms are based, in part, on fast matrix multiplication. For vertex-weighted graphs with n vertices we solve a more general problem: the all pairs MAX H-SUBGRAPH problem, where the task is to find for every pair of vertices u, v, a maximum H-subgraph containing both u and v, if one exists. We obtain an O(n(t(omega, h)))-time algorithm for the all pairs MAX H-SUBGRAPH problem in the case where H is a fixed graph with h vertices and omega < 2.376 is the exponent of matrix multiplication. The value of t(omega, h) is determined by solving a small integer program. In particular, heaviest triangles for all pairs can be found in O(n(2+1/(4-omega))) <= o(n(2.616))-time. For h = 4, 5, 8 the running time of our algorithm essentially matches that of the (unweighted) H-subgraph detection problem. Using rectangular matrix multiplication, the value of t(omega, h) can be improved; for example, the runtime for triangles becomes O(n(2.575)). We also present improved algorithms for the MAX H-SUBGRAPH problem in the edge-weighted case. In particular, we obtain an O(m(2-1/k) log n)-time algorithm for the heaviest cycle of length 2k or 2k - 1 in a graph with m edges and an O(n(3)/log n)-time randomized algorithm for finding the heaviest cycle of any fixed length. Our methods also yield efficient algorithms for several related problems that are faster than any previously existing algorithms. For example, we show how to find chromatic H-subgraphs in edge-colored graphs, and how to compute the most significant bits of the distance product of two real matrices, in truly subcubic time.", "paper_title": "Finding Heaviest H-Subgraphs in Real Weighted Graphs, with Applications", "paper_id": "WOS:000279362000001"}