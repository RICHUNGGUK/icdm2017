{"auto_keywords": [{"score": 0.042956330244541055, "phrase": "socs"}, {"score": 0.0046038458731764926, "phrase": "apaches'_platform"}, {"score": 0.0045162169185355, "phrase": "increasing_number"}, {"score": 0.004345909305473054, "phrase": "single_die"}, {"score": 0.004208881856146758, "phrase": "power-computing_applications"}, {"score": 0.0039729853486821995, "phrase": "communication-centric_concept"}, {"score": 0.0037024804835018373, "phrase": "good_candidates"}, {"score": 0.003113804826864362, "phrase": "optimal_placement"}, {"score": 0.0028281000453392272, "phrase": "processing_resources"}, {"score": 0.0026523079380037706, "phrase": "task_graphs"}, {"score": 0.002601727192945944, "phrase": "different_placement_algorithms"}, {"score": 0.0024556852466581527, "phrase": "homogeneous_coarse-grain_reconfigurable_architecture"}, {"score": 0.0023327506323251074, "phrase": "run-time_task_mapping"}, {"score": 0.002259054486157494, "phrase": "interesting_benefits"}, {"score": 0.0022159566043745724, "phrase": "random_or_static_placement"}, {"score": 0.0021597662797996843, "phrase": "contention_effects"}, {"score": 0.0021049977753042253, "phrase": "communication_medium"}], "paper_keywords": [""], "paper_abstract": "The increasing number of cores used on a single die in response to the power-computing applications tends to orient SoCs more and more toward communication-centric concept. Networks-on-chip (NoC) are good candidates providing both parallelism and flexibility. Nevertheless they imply to consider the notion of locality when distributing the computation among a set of cores. Defining an optimal placement at compile-time is difficult since other applications may temporarily make use of some of the processing resources. This paper explores the opportunity of dynamically mapping task graphs through using different placement algorithms, experiments and comparisons are conducted on a homogeneous coarse-grain reconfigurable architecture running JPEG applications. Results show that run-time task mapping is possible and brings interesting benefits over a random or static placement, especially when contention effects stemming from the communication medium are taken into account.", "paper_title": "Run-time resources management, on coarse grained, packet-switching reconrigurable architecture: A case study through the APACHES' platform", "paper_id": "WOS:000240036500019"}