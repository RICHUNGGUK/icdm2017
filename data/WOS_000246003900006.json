{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ford-johnson_algorithm"}, {"score": 0.004298666679374568, "phrase": "insertion_sorting_algorithm"}, {"score": 0.0037150687722055727, "phrase": "exactly_the_same_number"}, {"score": 0.0034817084307034955, "phrase": "main_advantage"}, {"score": 0.0024761702541879213, "phrase": "data_structures"}, {"score": 0.0023970487263732737, "phrase": "recursive_calls"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["algorithms", " analysis of algorithms", " optimal sorting"], "paper_abstract": "A variant of the Ford-Johnson or merge insertion sorting algorithm that we called four Ford-Johnson ((4)FJ, for short) is presented and proved to execute exactly the same number of comparisons than the Ford-Johnson algorithm. The main advantage of our algorithm is that, instead of recursively working over lists of size the half of the input, as the Ford-Johnson algorithm does, 4FJ recursively works over lists of size the quarter of the input. This allows for implementations of data structures for coordinating the recursive calls of size only 33% of the ones needed for the Ford-Johnson algorithm. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "A variant of the Ford-Johnson algorithm that is more space efficient", "paper_id": "WOS:000246003900006"}