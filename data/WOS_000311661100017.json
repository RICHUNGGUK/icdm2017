{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "python"}, {"score": 0.049247463607649235, "phrase": "statistical_characteristics"}, {"score": 0.03112961725523575, "phrase": "distributed_program"}, {"score": 0.030904171367868195, "phrase": "test_data"}, {"score": 0.02613494350866368, "phrase": "random_variables"}, {"score": 0.0047910471257663805, "phrase": "scientific_computing"}, {"score": 0.004767261858417823, "phrase": "efficient_and_flexible_evaluation"}, {"score": 0.004684935123146457, "phrase": "multivariate_random_inputs"}, {"score": 0.004592578838401723, "phrase": "high-level_python_based_utilities"}, {"score": 0.004479678062285735, "phrase": "multidimensional_integration"}, {"score": 0.0043804319008535555, "phrase": "random_variable"}, {"score": 0.004272724011826495, "phrase": "mathematically_formulated_incremental_expressions"}, {"score": 0.004251500979153001, "phrase": "high-level_scripting_code"}, {"score": 0.0041989015114686674, "phrase": "compiled_code"}, {"score": 0.0041469500929423595, "phrase": "dynamic_typing"}, {"score": 0.004116087007730662, "phrase": "python_language"}, {"score": 0.003994905430650427, "phrase": "generic_way"}, {"score": 0.003975056840766793, "phrase": "algorithmic_templates"}, {"score": 0.0038676325043529524, "phrase": "flexible_computational_framework"}, {"score": 0.0037724857647796813, "phrase": "arbitrary_combinations"}, {"score": 0.003753738096719609, "phrase": "integration_schemes"}, {"score": 0.003716520760680603, "phrase": "instantiated_code"}, {"score": 0.003661382948704217, "phrase": "development_cycle"}, {"score": 0.0036341204402374422, "phrase": "simple_running_example"}, {"score": 0.0035891316580885665, "phrase": "random_two-parametric_function"}, {"score": 0.003448863509392547, "phrase": "available_algorithmic"}, {"score": 0.0034317185678527672, "phrase": "executional_features"}, {"score": 0.003406160284838343, "phrase": "implemented_package"}, {"score": 0.003347259612209552, "phrase": "performance_studies"}, {"score": 0.0032893741115496496, "phrase": "free_repository"}, {"score": 0.0032486392192981944, "phrase": "cpcp_library"}, {"score": 0.0032182188042247464, "phrase": "program"}, {"score": 0.0031851099614226574, "phrase": "catalogue"}, {"score": 0.0030983802147021263, "phrase": "cpc_program_library"}, {"score": 0.003082972200657536, "phrase": "queen's_university"}, {"score": 0.0030676410301365667, "phrase": "belfast"}, {"score": 0.003052384957581699, "phrase": "n._ireland"}, {"score": 0.0027557911038816256, "phrase": "tar.gz_programming_language"}, {"score": 0.0027284410545226306, "phrase": "c._computer"}, {"score": 0.0026879835189571057, "phrase": "linux"}, {"score": 0.0026614372971409065, "phrase": "windows"}, {"score": 0.0024879447331744883, "phrase": "statistical_moments"}, {"score": 0.0023201090229059457, "phrase": "numerical_estimation"}, {"score": 0.0023028105026714533, "phrase": "mean_value"}, {"score": 0.002268598551466928, "phrase": "sufficiently_low_level"}, {"score": 0.0022573076362326135, "phrase": "numerical_error"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Python", " Enthought traits", " NumPy", " SciPy", " C", " Loopless programming", " Multidimensional integration", " Estimation of statistical moments"], "paper_abstract": "This paper examines the feasibility of high-level Python based utilities for numerically intensive applications via an example of a multidimensional integration for the evaluation of the statistical characteristics of a random variable. We discuss the approaches to the implementation of mathematically formulated incremental expressions using high-level scripting code and low-level compiled code. Due to the dynamic typing of the Python language, components of the algorithm can be easily coded in a generic way as algorithmic templates. Using the Enthought Development Suite they can be effectively assembled into a flexible computational framework that can be configured to execute the code for arbitrary combinations of integration schemes and versions of instantiated code. The paper describes the development cycle using a simple running example involving averaging of a random two-parametric function that includes discontinuity. This example is also used to compare the performance of the available algorithmic and executional features. The implemented package including further examples and the results of performance studies have been made available via the free repository [1] and CPCP library. Program summary Program title: spirrid Catalogue identifier: AENL_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AENL_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Special licence provided by the author No. of lines in distributed program, including test data, etc.: 10722 No. of bytes in distributed program, including test data, etc.: 157099 Distribution format: tar.gz Programming language: Python and C. Computer: PC. Operating system: LINUX, UNIX, Windows. Classification: 4.13, 6.2. External routines: NumPy (http://numpy.scipy.org/), SciPy (http://www.scipy.com) Nature of problem: Evaluation of the statistical moments of a function of random variables. Solution method: Direct multidimensional integration. Running time: Depending on the number of random variables the time needed for the numerical estimation of the mean value of a function with a sufficiently low level of numerical error varies. For orientation, the time needed for two included examples: examples/fiber_tt_2p/fiber_tt_2p.py with 2 random variables: few milliseconds examples/fiber_po_8p/fiber_po_8p.py with 8 random variables: few seconds (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Using Python for scientific computing: Efficient and flexible evaluation of the statistical characteristics of functions with multivariate random inputs", "paper_id": "WOS:000311661100017"}