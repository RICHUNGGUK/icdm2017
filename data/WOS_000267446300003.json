{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_particle-based_simulations"}, {"score": 0.004658426838467567, "phrase": "work_load"}, {"score": 0.00443308765153716, "phrase": "distributed_simulation_systems"}, {"score": 0.004149429072483132, "phrase": "fast_adaptive_balancing_method"}, {"score": 0.0039813976794342, "phrase": "binary_tree_structure"}, {"score": 0.0037886833451021723, "phrase": "simulation_region"}, {"score": 0.0036052633308076933, "phrase": "global_view"}, {"score": 0.0035461111918923117, "phrase": "local_views"}, {"score": 0.002907405102646616, "phrase": "heavy_loads"}, {"score": 0.002546708483171714, "phrase": "artificial_case"}, {"score": 0.0024842242921857705, "phrase": "real_distributed_case"}, {"score": 0.0022679195103377124, "phrase": "faster_convergence_speed"}, {"score": 0.0022122603123901114, "phrase": "lower_communication_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Region partition", " Adaptive load balancing", " Parallel particle-based simulation"], "paper_abstract": "Balancing the work load can improve the performance of distributed simulation systems. In this paper we propose a fast adaptive balancing method, in which a binary tree structure is used to partition the simulation region into sub-domains. From a global view to local views, we balance the loads between sub-domains recursively by compressing and stretching sub-domains in group. This method can adjust the sub-domains with heavy loads and decompose their loads very fast. Then we compare the algorithm with two previously proposed algorithms by an artificial case and a real distributed case respectively. In both cases, our method can get a faster convergence speed and a lower communication overhead. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A fast adaptive load balancing method for parallel particle-based simulations", "paper_id": "WOS:000267446300003"}