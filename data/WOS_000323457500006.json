{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "at-most-once_problem"}, {"score": 0.004540734419151103, "phrase": "wait-free_deterministic_algorithm"}, {"score": 0.004081385289516914, "phrase": "first_time"}, {"score": 0.004059673618719782, "phrase": "nearly_optimal_effectiveness"}, {"score": 0.003869373085652601, "phrase": "total_number"}, {"score": 0.0037474693720823643, "phrase": "worst_case"}, {"score": 0.003404244237372396, "phrase": "additive_factor"}, {"score": 0.0032969458013463807, "phrase": "known_effectiveness"}, {"score": 0.0032793933580835574, "phrase": "upper_bound_n_-_m"}, {"score": 0.0031930184711888867, "phrase": "possible_algorithms"}, {"score": 0.003108911488613549, "phrase": "previously_best_known_deterministic_solutions"}, {"score": 0.002869613770219469, "phrase": "iterative_version"}, {"score": 0.0023549822490693344, "phrase": "new_algorithmic_solution"}, {"score": 0.002317533977770783, "phrase": "write-all_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["At-most-once problem", " Task allocation", " Write-all", " I/O automata", " Asynchronous shared memory", " Deterministic algorithms", " Distributed computing"], "paper_abstract": "We present and analyze a wait-free deterministic algorithm for solving the at-most-once problem: how m shared-memory fail-prone processes perform asynchronously n jobs at most once. Our algorithmic strategy provides for the First time nearly optimal effectiveness, which is a measure that expresses the total number of jobs completed in the worst case. The effectiveness of our algorithm equals n - 2m + 2. This is up to an additive factor of m close to the known effectiveness upper bound n - m + 1 over all possible algorithms and improves on the previously best known deterministic solutions that have effectiveness only n - log m.o(n). We also present an iterative version of our algorithm that for any m = O((3+epsilon)root n/log n) is both effectiveness-optimal and work-optimal, for any constant epsilon > 0. We then employ this algorithm to provide a new algorithmic solution for the Write-All problem which is work optimal for any m = O((3+epsilon)root n/log n). (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Solving the at-most-once problem with nearly optimal effectiveness", "paper_id": "WOS:000323457500006"}