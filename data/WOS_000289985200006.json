{"auto_keywords": [{"score": 0.04901626150275962, "phrase": "memory_references"}, {"score": 0.015719716506582538, "phrase": "data_dependencies"}, {"score": 0.015511665662190114, "phrase": "sufficiently_large_distance"}, {"score": 0.004541918674719973, "phrase": "approximate_algorithm"}, {"score": 0.0040777192615062815, "phrase": "'_loop"}, {"score": 0.003951453722517865, "phrase": "single_simd_operation"}, {"score": 0.003628024127607343, "phrase": "simd_register"}, {"score": 0.0034685354330506605, "phrase": "traditional_vector_processors"}, {"score": 0.003361069456060196, "phrase": "short_simd_execution"}, {"score": 0.003256922225995089, "phrase": "approximate_data-dependence_tests"}, {"score": 0.003071965703296204, "phrase": "data_dependency"}, {"score": 0.002845809662579165, "phrase": "short_simd_execution_model"}, {"score": 0.0027452053065200152, "phrase": "subscript_expressions"}, {"score": 0.0027206133859493725, "phrase": "possibly_conflicting_data_references"}, {"score": 0.0026481480455339055, "phrase": "green_light"}, {"score": 0.0026126405272417783, "phrase": "parallelization_process"}, {"score": 0.00257760787870709, "phrase": "sufficient_conditions"}, {"score": 0.002543043781904587, "phrase": "dependence_distance"}, {"score": 0.0024421008630165046, "phrase": "banerjee_test"}, {"score": 0.002398529964696261, "phrase": "minimum_and_maximum_distances"}, {"score": 0.0023346234464901978, "phrase": "iteration_space"}, {"score": 0.0022419349154472806, "phrase": "integer_solution"}, {"score": 0.0022118619998034742, "phrase": "dependence_equation"}, {"score": 0.0021821915946356168, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "classical_banerjee_test"}], "paper_keywords": ["Data dependency", " Multimedia extensions", " SIMD instructions", " Vectorizing compilers"], "paper_abstract": "In this paper we present an approximate algorithm for detecting and filtering data dependencies with a sufficiently large distance between memory references. A sequence of the same operations (typically enclosed in a 'for' loop) can be replaced with a single SIMD operation if the distance between memory references is greater than or equal to the number of data processed in the SIMD register. Some loops that could not be vectorized on traditional vector processors, can still be parallelized for short SIMD execution. There are a number of approximate data-dependence tests that have been proposed in the literature but in all of them data dependency will be assumed when actually there is no such a dependence that could restrict parallelization related to the short SIMD execution model. By examining the properties of linear subscript expressions of possibly conflicting data references, our algorithm gives the green light to the parallelization process if some sufficient conditions regarding the dependence distance are met. Our method is based on the Banerjee test and checks the minimum and maximum distances between memory references within the iteration space rather than searching for the existence of an integer solution to the dependence equation. The proposed method extends the accuracy and applicability of the classical Banerjee test.", "paper_title": "An approximate method for filtering out data dependencies with a sufficiently large distance between memory references", "paper_id": "WOS:000289985200006"}