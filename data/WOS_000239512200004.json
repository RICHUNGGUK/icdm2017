{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "data_structure-specific_cache_eviction_information"}, {"score": 0.00430907756010007, "phrase": "hardware_performance_monitor"}, {"score": 0.0039040344230094164, "phrase": "cache_misses"}, {"score": 0.0026622351303038885, "phrase": "hardware_support"}, {"score": 0.0025027144548626975, "phrase": "cache_behavior"}, {"score": 0.0024416087858984644, "phrase": "application_data_structures"}, {"score": 0.0023527296826339225, "phrase": "source_code_level"}, {"score": 0.0021049977753042253, "phrase": "simulation-based_study"}], "paper_keywords": ["memory", " cache", " evictions", " performance", " monitor"], "paper_abstract": "In this paper, we propose a hardware performance monitor that provides support not only for measuring cache misses and the addresses associated with them, but also for determining what data is being evicted from the cache when a miss occurs. We describe how to use this hardware support to efficiently determine the cache behavior of application data structures at the source code level. We also present the results of a simulation-based study of this technique, in which we examined the overhead, perturbation of results, and usefulness of collecting this information.", "paper_title": "A new hardware monitor design to measure data structure-specific cache eviction information", "paper_id": "WOS:000239512200004"}