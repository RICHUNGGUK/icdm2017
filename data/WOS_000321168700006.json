{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_programming_abstractions"}, {"score": 0.015533304978687707, "phrase": "application_energy_consumption"}, {"score": 0.004671932143798307, "phrase": "battery_capacities"}, {"score": 0.004588158931776543, "phrase": "key_physical_constraint"}, {"score": 0.004533142516832776, "phrase": "mobile_devices"}, {"score": 0.004478782833067256, "phrase": "energy_efficiency"}, {"score": 0.004372002674739612, "phrase": "important_software_design_consideration"}, {"score": 0.004166012065610612, "phrase": "rpc"}, {"score": 0.003945754887845885, "phrase": "essential_component"}, {"score": 0.003898411343926653, "phrase": "modern_software"}, {"score": 0.0035609154384221567, "phrase": "right_abstraction"}, {"score": 0.0035181731203867456, "phrase": "energy-constrained_scenarios"}, {"score": 0.003252542052430779, "phrase": "systematic_study"}, {"score": 0.003117890043128058, "phrase": "major_distributed_programming_abstractions"}, {"score": 0.002478225374613311, "phrase": "practical_guidelines"}, {"score": 0.002318799760022913, "phrase": "energy_consumption_constraints"}, {"score": 0.002222717552124615, "phrase": "future_efforts"}, {"score": 0.0021827653135510225, "phrase": "energy_efficient_distributed_programming_abstractions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Energy-efficiency", " Programming abstraction", " Distributed system", " Measurement", " Software design pattern"], "paper_abstract": "With battery capacities remaining a key physical constraint for mobile devices, energy efficiency has become an important software design consideration. Distributed programming abstractions (e.g., sockets, RPC, messages, etc.) are an essential component of modern software, but their energy consumption characteristics are poorly understood. The programmer has few practical guidelines to choose the right abstraction for energy-constrained scenarios. In this article, we report on the findings of a systematic study we conducted to compare and contrast major distributed programming abstractions in terms of their energy consumption patterns. By varying the abstractions with the rest of the functionality fixed, we measure and analyze the impact of distributed programming abstractions on application energy consumption. Based on our findings, we present a set of practical guidelines for the programmer to select an abstraction that satisfies the energy consumption constraints in place. Our other guidelines can steer future efforts in creating energy efficient distributed programming abstractions. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "The impact of distributed programming abstractions on application energy consumption", "paper_id": "WOS:000321168700006"}