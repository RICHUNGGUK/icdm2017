{"auto_keywords": [{"score": 0.044605401042099674, "phrase": "stable_model_semantics"}, {"score": 0.00481495049065317, "phrase": "founded_bounds"}, {"score": 0.004578382275810468, "phrase": "powerful_form"}, {"score": 0.0045324756541157574, "phrase": "declarative_programming"}, {"score": 0.004309725894724034, "phrase": "asp_solvers"}, {"score": 0.004077272409331917, "phrase": "circular_reasoning"}, {"score": 0.003995876175614403, "phrase": "current_asp_solvers"}, {"score": 0.0038573081851680656, "phrase": "cyclic_dependencies"}, {"score": 0.0038186039088445524, "phrase": "multiple_integer"}, {"score": 0.003780286517897356, "phrase": "continuous_quantities"}, {"score": 0.003558294449586273, "phrase": "stable_models"}, {"score": 0.003522579870903474, "phrase": "bound_founded_variables"}, {"score": 0.003487222504700868, "phrase": "arbitrary_domains"}, {"score": 0.0029973957125353306, "phrase": "significantly_more_general_rule_forms"}, {"score": 0.0027788478707700274, "phrase": "head_and_body_variables"}, {"score": 0.002709589081384597, "phrase": "complex_constraints"}, {"score": 0.0026023381988430666, "phrase": "new_unfounded_set_detection_algorithm"}, {"score": 0.002388283252319309, "phrase": "unfounded_sets"}, {"score": 0.0022937210378944457, "phrase": "effective_conflict-directed_clause_learning"}, {"score": 0.002214048743052355, "phrase": "best_features"}, {"score": 0.0021480045507532965, "phrase": "asp"}, {"score": 0.0021049977753042253, "phrase": "new_types"}], "paper_keywords": ["answer set programming", " stable model semantics", " finite domain solving"], "paper_abstract": "Answer Set Programming (ASP) is a powerful form of declarative programming used in areas such as planning or reasoning. ASP solvers enforce stable model semantics, which rule out solutions representing certain kinds of circular reasoning. Unfortunately, current ASP solvers are incapable of solving problems involving cyclic dependencies between multiple integer or continuous quantities effectively. In this paper, we generalize the notion of stable models to bound founded variables with arbitrary domains, where bounds on such variables need to be justified by some rule in the program in order for the model to be stable. We show how to handle significantly more general rule forms where bound founded variables can act as head or body variables, and where head and body variables can be related via complex constraints subject to certain monotonicity requirements. We describe a new unfounded set detection algorithm which allows us to enforce this generalization of the stable model semantics. We also show how these unfounded sets can be explained in order to allow effective conflict-directed clause learning. The new solver merges the best features of CP, SAT and ASP solvers and allows new types of problems to be solved very efficiently.", "paper_title": "Stable model semantics for founded bounds", "paper_id": "WOS:000324926400005"}