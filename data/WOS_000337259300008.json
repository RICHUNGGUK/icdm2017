{"auto_keywords": [{"score": 0.02838132555174035, "phrase": "shorter_plans"}, {"score": 0.004622783000449884, "phrase": "hoare_style_proof_systems"}, {"score": 0.004464156619275582, "phrase": "plan_generation_and_plan_verification"}, {"score": 0.004310949776826717, "phrase": "action_language"}, {"score": 0.003996740549907906, "phrase": "hoare"}, {"score": 0.0031111332159761344, "phrase": "proof_systems"}, {"score": 0.002736694413701639, "phrase": "longer_plans"}, {"score": 0.0026272523687965615, "phrase": "so-called_composition_rule"}, {"score": 0.002231441081806766, "phrase": "off-line_planning"}, {"score": 0.0021049977753042253, "phrase": "general_planning_problems"}], "paper_keywords": ["Hoare proof systems", " off-line planning", " plan generation", " plan verification", " automated reasoning"], "paper_abstract": "In this paper we propose Hoare style proof systems called PRD0 and PRKWD0 for plan generation and plan verification under 0-approximation semantics of the action language A(K). In PRD0 (resp. PRKWD0), a Hoare triple of the form {X}c{Y} (resp. {X}c{KWp}) means that all literals in Y become true (resp. p becomes known) after executing plan c in a state satisfying all literals in X. The proof systems are shown to be sound and complete, and more importantly, they give a way to efficiently generate and verify longer plans from existing verified shorter plans by applying so-called composition rule, provided that an enough number of shorter plans have been properly stored. The idea behind is a tradeoff between space and time, we refer it to off-line planning and point out that it could be applied to general planning problems.", "paper_title": "Proof systems for planning under 0-approximation semantics", "paper_id": "WOS:000337259300008"}