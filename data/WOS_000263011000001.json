{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "security_protocols"}, {"score": 0.004693167092003573, "phrase": "small_programs"}, {"score": 0.004545240514015278, "phrase": "hostile_environments"}, {"score": 0.0039729853486821995, "phrase": "active_attacker"}, {"score": 0.0037743802306714545, "phrase": "new_messages"}, {"score": 0.003450329424861292, "phrase": "absolutely_no_guarantee"}, {"score": 0.0030938932434437178, "phrase": "common_keys"}, {"score": 0.003054450075234415, "phrase": "public_keys"}, {"score": 0.003015508235745547, "phrase": "long-term_symmetric_keys"}, {"score": 0.002378114613631841, "phrase": "arbitrary_protocols"}, {"score": 0.00220177373403577, "phrase": "large_class"}, {"score": 0.002173679145840769, "phrase": "security_properties"}], "paper_keywords": ["Composition", " Security protocols", " Verification"], "paper_abstract": "Security protocols are small programs that are executed in hostile environments. Many results and tools have been developed to formally analyze the security of a protocol in the presence of an active attacker that may block, intercept and send new messages. However even when a protocol has been proved secure, there is absolutely no guarantee if the protocol is executed in an environment where other protocols are executed, possibly sharing some common keys like public keys or long-term symmetric keys. In this paper, we show that security of protocols can be easily composed. More precisely, we show that whenever a protocol is secure, it remains secure even in an environment where arbitrary protocols satisfying a reasonable (syntactic) condition are executed. This result holds for a large class of security properties that encompasses secrecy and various formulations of authentication.", "paper_title": "Safely composing security protocols", "paper_id": "WOS:000263011000001"}