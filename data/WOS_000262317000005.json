{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "non-dedicated_computers"}, {"score": 0.004677847043645765, "phrase": "adaptivity_options"}, {"score": 0.004597457370802855, "phrase": "parallel_programs"}, {"score": 0.004440780432053927, "phrase": "non-dedicated_processors"}, {"score": 0.004167218012926657, "phrase": "dedicated_processors"}, {"score": 0.004071957673937727, "phrase": "non-dedicated_environment"}, {"score": 0.003955926499405168, "phrase": "autonomic_techniques"}, {"score": 0.0038431888954930083, "phrase": "unpredictable_load_fluctuations"}, {"score": 0.0037336520904376687, "phrase": "computational_environment"}, {"score": 0.0036694287631595995, "phrase": "adaptive_query_processing"}, {"score": 0.0034233569308012982, "phrase": "processor_load_assignments"}, {"score": 0.003268516165008941, "phrase": "varying_resource_capabilities"}, {"score": 0.003138768436081888, "phrase": "previous_study"}, {"score": 0.0029794666460666646, "phrase": "simulation-based_evaluation"}, {"score": 0.0029281780903782284, "phrase": "autonomic_parallelization_techniques"}, {"score": 0.002877769867854964, "phrase": "uniform_environment"}, {"score": 0.0025929837295811673, "phrase": "new_algorithm"}, {"score": 0.002447101794397243, "phrase": "existing_approaches"}, {"score": 0.0022828113789751694, "phrase": "online_algorithms"}, {"score": 0.0022305310659333864, "phrase": "firm_foundation"}, {"score": 0.0021049977753042253, "phrase": "existing_algorithms"}], "paper_keywords": [""], "paper_abstract": "Writing parallel programs that can take advantage of non-dedicated processors is much more difficult than writing such programs for networks of dedicated processors. In a non-dedicated environment such programs must use autonomic techniques to respond to the unpredictable load fluctuations that prevail in the computational environment. In adaptive query processing (AQP), several techniques have been proposed for dynamically redistributing processor load assignments throughout a computation to take account of varying resource capabilities, but we know of no previous study that compares their performance. This paper presents a simulation-based evaluation of these autonomic parallelization techniques in a uniform environment and compares how well they improve the performance of the computation. Four published strategies are compared with a new algorithm that seeks to overcome some weaknesses identified in the existing approaches. In addition, we explore the use of techniques from online algorithms to provide a firm foundation for determining when to adapt in two of the existing algorithms. The evaluations identify situations in which each strategy may be used effectively and in which it should be avoided.", "paper_title": "Autonomic query parallelization using non-dedicated computers: an evaluation of adaptivity options", "paper_id": "WOS:000262317000005"}