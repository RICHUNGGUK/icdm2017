{"auto_keywords": [{"score": 0.029940041712803473, "phrase": "cache_management"}, {"score": 0.01553464792979029, "phrase": "mobile_computing_environments"}, {"score": 0.01499221520704078, "phrase": "partial_match_query"}, {"score": 0.012108390972094674, "phrase": "mobile_clients"}, {"score": 0.00481495049065317, "phrase": "continuous_partial_match_queries"}, {"score": 0.004672953146379813, "phrase": "continuous_partial_match_query"}, {"score": 0.004401342842183475, "phrase": "client's_memory"}, {"score": 0.004348936976349555, "phrase": "conventional_cache_invalidation_methods"}, {"score": 0.003951453722517865, "phrase": "content-based_retrieval"}, {"score": 0.0038810583785936505, "phrase": "conventional_id-based_approaches"}, {"score": 0.00374399358035391, "phrase": "cache_consistency"}, {"score": 0.0035051129798529, "phrase": "predicate-based_cache_invalidation_scheme"}, {"score": 0.0032618078775887077, "phrase": "cache_state"}, {"score": 0.0032036590920314725, "phrase": "mobile_client"}, {"score": 0.0030353401945270755, "phrase": "cache_invalidation_report"}, {"score": 0.002999173913591105, "phrase": "cir"}, {"score": 0.002416589459425828, "phrase": "cir_construction"}, {"score": 0.0022895278869126848, "phrase": "invalidated_data"}, {"score": 0.0021049977753042253, "phrase": "predicate-based_approach"}], "paper_keywords": ["cache invalidation", " continuous query", " partial match query", " data broadcasting", " mobile computing"], "paper_abstract": "The continuous partial match query is a partial match query whose result remains consistently in the client's memory. Conventional cache invalidation methods for mobile clients are record ID-based. However, since the partial match query uses content-based retrieval, the conventional ID-based approaches cannot efficiently manage the cache consistency of mobile clients. In this paper, we propose a predicate-based cache invalidation scheme for continuous partial match queries in mobile computing environments. We represent the cache state of a mobile client as a predicate, and also construct a cache invalidation report (CIR), which the server broadcasts to clients for cache management, with predicates. In order to reduce the amount of information that is needed for cache management, we propose a set of methods for CIR construction (in the server) and identification of invalidated data (in the client). Through experiments, we show that the predicate-based approach is very effective for the cache management of mobile clients.", "paper_title": "A cache invalidation scheme for continuous partial match queries in mobile computing environments", "paper_id": "WOS:000255957600002"}