{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mechatronic_design"}, {"score": 0.03700385809508468, "phrase": "dependency_modeling"}, {"score": 0.035620716932052585, "phrase": "dependency_model"}, {"score": 0.03342545627203519, "phrase": "modeling_dependencies"}, {"score": 0.0047273577269638725, "phrase": "domain-specific_design_activities"}, {"score": 0.004690305164360866, "phrase": "product_development_process"}, {"score": 0.00462919213721188, "phrase": "domain-specific_problems"}, {"score": 0.004556901872357751, "phrase": "product_properties"}, {"score": 0.00438105507792004, "phrase": "key_role"}, {"score": 0.004223032986655664, "phrase": "decision-making_process"}, {"score": 0.00418991663075058, "phrase": "important_question"}, {"score": 0.004102865227227448, "phrase": "efficient_and_effective_decision"}, {"score": 0.003802135020791801, "phrase": "appropriate_terminology"}, {"score": 0.003579322995055781, "phrase": "new_dependency"}, {"score": 0.0035699363258657212, "phrase": "modeling_language"}, {"score": 0.003459191419478298, "phrase": "simple_robot_design_example"}, {"score": 0.0033081387767897445, "phrase": "practical_approaches"}, {"score": 0.00329080576226637, "phrase": "consistency_management"}, {"score": 0.00327356326590461, "phrase": "model_management"}, {"score": 0.003213920601037463, "phrase": "six_levels"}, {"score": 0.0030897374036550043, "phrase": "higher_level"}, {"score": 0.0030096178580223676, "phrase": "available_languages"}, {"score": 0.002985988377995789, "phrase": "omg_sysml"}, {"score": 0.0029238768315330305, "phrase": "possible_creation"}, {"score": 0.002900918573209427, "phrase": "dependency_models"}, {"score": 0.002878140062594849, "phrase": "executable_dependency_networks"}, {"score": 0.002825684327654537, "phrase": "sysml"}, {"score": 0.0025977542995083646, "phrase": "design_structure_matrix"}, {"score": 0.0025841625481042513, "phrase": "dsm"}, {"score": 0.002426137929553724, "phrase": "substantial_value"}, {"score": 0.0023384629381463054, "phrase": "current_state"}, {"score": 0.0022958180852458215, "phrase": "overall_value"}, {"score": 0.0021497514826678433, "phrase": "product_lifecycle_management"}, {"score": 0.002138480237535649, "phrase": "plm"}, {"score": 0.0021050313179919802, "phrase": "doi"}], "paper_keywords": [""], "paper_abstract": "Mechatronic design is traditionally supported through domain-specific design activities throughout the product development process. The partitioning into domain-specific problems leads to a situation where product properties influence each other, hence giving rise to dependencies. These dependencies play a key role in the prediction of properties and, as a result, in the decision-making process. The important question is how to manage the dependencies for efficient and effective decision making? The aim of this paper is threefold. First, we investigate the nature of dependencies and study how to model them. The paper proposes appropriate terminology taking into account the synthesis and analysis nature of both the properties and the dependencies. This terminology will be the core of the new dependency modeling language. The concepts related to dependency modeling are then illustrated through a simple robot design example, where the creation and importance of a dependency model are explained. Second, we study practical approaches for consistency management and model management in the presence of dependencies. Six levels-of-detail in modeling dependencies are presented; emphasizing that modeling at a higher level-of-detail ensures that more inconsistencies are avoided. Available languages such as OMG SysML (TM) are evaluated for a possible creation of the dependency models leading toward executable dependency networks. However, at present, SysML does not provide sufficiently rich language constructs to model dependencies. Third, we compare our dependency modeling approach to other state-of-the-art approaches such as dependency modeling with a design structure matrix (DSM), and highlight the benefits of the terminology proposed in this paper. We aim to convince the reader that there is substantial value in modeling dependencies explicitly, especially to avoid inconsistencies, which is not the current state of practice. However, an overall value from dependency modeling can only be obtained if the cost of creating the dependency model is reasonable. Issues such as human interaction/effort and model management through product lifecycle management (PLM) are discussed. [DOI: 10.1115/1.4007986]", "paper_title": "Dependency Modeling and Model Management in Mechatronic Design", "paper_id": "WOS:000314095100009"}