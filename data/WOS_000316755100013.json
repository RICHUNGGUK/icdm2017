{"auto_keywords": [{"score": 0.049188612914091503, "phrase": "pir"}, {"score": 0.04336679117311532, "phrase": "pir_protocol"}, {"score": 0.00481495049065317, "phrase": "fully_homomorphic_encryption"}, {"score": 0.004769958800452922, "phrase": "private_information_retrieval"}, {"score": 0.004551199992546761, "phrase": "ith_bit"}, {"score": 0.004487541157100498, "phrase": "n-bit_database"}, {"score": 0.004383406949799696, "phrase": "database_server"}, {"score": 0.004085221464783815, "phrase": "communication_complexity"}, {"score": 0.0038794730876377057, "phrase": "ciphertext_size"}, {"score": 0.003701401653850141, "phrase": "private_block_retrieval"}, {"score": 0.002912331664922248, "phrase": "underlying_fhe_scheme"}, {"score": 0.0028312983170567948, "phrase": "total_communication_complexity"}, {"score": 0.0026384167183586015, "phrase": "total_computation_complexity"}, {"score": 0.0024241817763927163, "phrase": "total_protocol_execution_time"}, {"score": 0.0023456351719724957, "phrase": "existing_pbr_protocols"}, {"score": 0.0021049977753042253, "phrase": "high-speed_network"}], "paper_keywords": ["Private information retrieval", " private block retrieval", " fully homomorphic encryption"], "paper_abstract": "Private Information Retrieval (PIR) allows a user to retrieve the ith bit of an n-bit database without revealing to the database server the value of i. In this paper, we present a PIR protocol with the communication complexity of O(gamma log n) bits, where gamma is the ciphertext size. Furthermore, we extend the PIR protocol to a private block retrieval (PBR) protocol, a natural and more practical extension of PIR in which the user retrieves a block of bits, instead of retrieving single bit. Our protocols are built on the state-of-the-art fully homomorphic encryption (FHE) techniques and provide privacy for the user if the underlying FHE scheme is semantically secure. The total communication complexity of our PBR is O(gamma log m + gamma n/m) bits, where m is the number of blocks. The total computation complexity of our PBR is O(m log m) modular multiplications plus O(n/2) modular additions. In terms of total protocol execution time, our PBR protocol is more efficient than existing PBR protocols which usually require to compute O(n/2) modular multiplications when the size of a block in the database is large and a high-speed network is available.", "paper_title": "Single-Database Private Information Retrieval from Fully Homomorphic Encryption", "paper_id": "WOS:000316755100013"}