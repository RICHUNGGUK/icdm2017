{"auto_keywords": [{"score": 0.035083386534262295, "phrase": "fsp"}, {"score": 0.015719692260384888, "phrase": "thread_divergence"}, {"score": 0.01127736201535297, "phrase": "gpu"}, {"score": 0.004732215871738028, "phrase": "gpu-accelerated_branch-and-bound_algorithm"}, {"score": 0.004389745162172933, "phrase": "graphical_processing_unit"}, {"score": 0.004215677131963292, "phrase": "flow-shop_scheduling_optimization_problems"}, {"score": 0.0037336520904376687, "phrase": "massively_multithreaded_accelerators"}, {"score": 0.0036694287631595995, "phrase": "single_instruction_multiple_data_model"}, {"score": 0.0035648266669315943, "phrase": "major_issue"}, {"score": 0.0032496585171039797, "phrase": "branch_divergence"}, {"score": 0.003120657021758196, "phrase": "lower_bound_function"}, {"score": 0.0029967610945411593, "phrase": "conditional_instructions"}, {"score": 0.0026691455928407022, "phrase": "extensive_experiments"}, {"score": 0.002623184850933423, "phrase": "proposed_approach"}, {"score": 0.0025336179740814905, "phrase": "well-known_fsp_benchmarks"}, {"score": 0.0022960713730673494, "phrase": "cpu-based_execution"}, {"score": 0.0021921063460682293, "phrase": "large_problem_instances"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["GPU computing", " branch-and-bound algorithms", " data parallelism", " thread divergence"], "paper_abstract": "In this paper, we address the design and implementation of graphical processing unit (GPU)-accelerated branch-and-bound algorithms (B&B) for solving flow-shop scheduling optimization problems (FSP). Such applications are CPU-time consuming and highly irregular. On the other hand, GPUs are massively multithreaded accelerators using the single instruction multiple data model at execution. A major issue that arises when executing on GPU, a B&B applied to FSP is thread or branch divergence. Such divergence is caused by the lower bound function of FSP that contains many irregular loops and conditional instructions. Our challenge is therefore to revisit the design and implementation of B&B applied to FSP dealing with thread divergence. Extensive experiments of the proposed approach have been carried out on well-known FSP benchmarks using an Nvidia Tesla (C2050 GPU card (http://www.nvidia.com/docs/IO/43395/NV_DS_Tesla_C2050_C2070_jul10_lores.pdf)). Compared with a CPU-based execution, accelerations up tox77.46 are achieved for large problem instances. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Reducing thread divergence in a GPU-accelerated branch-and-bound algorithm", "paper_id": "WOS:000318042500009"}