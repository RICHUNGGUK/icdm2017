{"auto_keywords": [{"score": 0.0388263744242103, "phrase": "numa"}, {"score": 0.015719693992243013, "phrase": "pde_solvers"}, {"score": 0.01547917858456916, "phrase": "regular_sparse_numerical_operators"}, {"score": 0.0046189226219415375, "phrase": "openmp"}, {"score": 0.004571212475391974, "phrase": "mpi"}, {"score": 0.004317109072311102, "phrase": "typical_representative"}, {"score": 0.004206338218873218, "phrase": "finite_difference_approximation"}, {"score": 0.004141238989360548, "phrase": "euler_equations"}, {"score": 0.004098397888277889, "phrase": "fluid_flow"}, {"score": 0.0039519004610213595, "phrase": "programming_models"}, {"score": 0.0038304902197108643, "phrase": "uniform_memory_access"}, {"score": 0.0037321585095070483, "phrase": "non-uniform_memory_access"}, {"score": 0.003380897678672156, "phrase": "self-optimization_algorithms"}, {"score": 0.0032094634756436595, "phrase": "memory_access_time"}, {"score": 0.0031597433845085092, "phrase": "main_conclusions"}, {"score": 0.0029530125680590413, "phrase": "viable_alternative"}, {"score": 0.0028622019660721363, "phrase": "numa-opt_architectures"}, {"score": 0.002702887319160532, "phrase": "numa_platforms"}, {"score": 0.0026609940110902666, "phrase": "special_care"}, {"score": 0.002579140290642792, "phrase": "initial_data_placement"}, {"score": 0.002360607691114015, "phrase": "numa-opt_case"}, {"score": 0.0022524959504997303, "phrase": "openmp_model"}, {"score": 0.0022291501521610737, "phrase": "additional_data_distribution_directives"}, {"score": 0.002171836484200008, "phrase": "user-level_access"}, {"score": 0.0021381565332182773, "phrase": "page_migration_library"}], "paper_keywords": ["OpenMP", " MPI", " UMA", " NUMA", " optimization", " PDE", " euler", " stencil"], "paper_abstract": "Two parallel programming models represented by OpenMP and MPI are compared for PDE solvers based on regular sparse numerical operators. As a typical representative of such an operator, a finite difference approximation of the Euler equations for fluid flow is considered. The comparison of programming models is made with regard to uniform memory access (UMA), non-uniform memory access (NUMA), and self-optimizing NUMA (NUMA-opt) computer architectures. By NUMA-opt, we mean NUMA systems extended with self-optimization algorithms, in order to reduce the non-uniformity of the memory access time. The main conclusions of the study are: (1) that OpenMP is a viable alternative to MPI on UMA and NUMA-opt architectures; (2) that OpenMP is not competitive on NUMA platforms, unless special care is taken to get an initial data placement that matches the algorithm; (3) that for OpenMP to be competitive in the NUMA-opt case, it is not necessary to extend the OpenMP model with additional data distribution directives, nor to include user-level access to the page migration library. (c) 2003 Elsevier B.V. All Rights reserved.", "paper_title": "OpenMP versus MPI for PDE solvers based on regular sparse numerical operators", "paper_id": "WOS:000234408800016"}