{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "time_instances"}, {"score": 0.02322730111336098, "phrase": "numerical_integration"}, {"score": 0.009478483547511084, "phrase": "measured_variables"}, {"score": 0.008730010897316173, "phrase": "step_size"}, {"score": 0.004781915513030716, "phrase": "measured_variable_dependent_ordinary_differential_equations"}, {"score": 0.004620093797504386, "phrase": "dynamic_models"}, {"score": 0.004541238786717793, "phrase": "process_monitoring"}, {"score": 0.004053362743156545, "phrase": "fixed_step_size_integration_schema"}, {"score": 0.0037704502704526996, "phrase": "adaptive_step_size_method"}, {"score": 0.003680587852807675, "phrase": "fixed_step_size_methods"}, {"score": 0.0036052633308076933, "phrase": "repetitive_interpolation"}, {"score": 0.0035193239615499074, "phrase": "adaptive_step_size_methods"}, {"score": 0.0033883824438527316, "phrase": "great_numbers"}, {"score": 0.0032848684681050745, "phrase": "adaptive_step_size_numerical_integration_method"}, {"score": 0.0030872017736888113, "phrase": "online_measurements"}, {"score": 0.0029518598926717332, "phrase": "numerical_solution"}, {"score": 0.0027551040319267446, "phrase": "offline_measured_states"}, {"score": 0.0026986685585382347, "phrase": "proposed_method"}, {"score": 0.002527451565708784, "phrase": "significant_reduction"}, {"score": 0.002492810341589618, "phrase": "function_evaluations"}, {"score": 0.0024586427394152196, "phrase": "studied_cases"}, {"score": 0.0023999697562763433, "phrase": "error_tolerances"}, {"score": 0.0023265809733919547, "phrase": "mutual_interference"}, {"score": 0.002310578855290687, "phrase": "step-size_adaption"}, {"score": 0.0022476609946536345, "phrase": "neural_network"}, {"score": 0.0022322004700942267, "phrase": "model_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Dynamic neural networks", " Hybrid semi-parametric modeling", " Numerical integration", " Ordinary differential equations", " Differential equations"], "paper_abstract": "The Ordinary Differential Equations (ODEs) of dynamic models that are used in process monitoring, control or optimization, are not only functions of time and states, but also of measured variables. So far two possibilities for the numerical integration of such ODEs were given: (i) a fixed step size integration schema could be applied, matching the step size to the time instances of the measurements; or (ii) using an adaptive step size method while interpolating the measurements. While fixed step size methods are computationally expensive, the repetitive interpolation of measurements for the application of adaptive step size methods is prone to errors and time prohibitive, especially for great numbers of measured variables. In this paper, an adaptive step size numerical integration method is proposed and evaluated for dynamic neural network/hybrid semi-parametric models. The method evaluates the ODEs only at time instances at which online measurements are available and adapts the step size according to those time instances. The numerical solution of the ODEs is provided at time instances which are specified by the user, i.e. at time instances of offline measured states. The rationale behind the proposed method is carefully analyzed, and it is demonstrated that its application along with a hybrid model/dynamic neural network model can result into a significant reduction of number of function evaluations, in the studied cases about 50%, while adhering user specified error tolerances for the numerical integration. In addition, the mutual interference between step-size adaption, parameter identification, coping of the neural network and model performance is studied, a fact that other studies have paid little to no attention. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "An efficient method for the numerical integration of measured variable dependent ordinary differential equations", "paper_id": "WOS:000348748200003"}