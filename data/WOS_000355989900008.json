{"auto_keywords": [{"score": 0.034286224571187365, "phrase": "existing_optimal_regenerating_codes"}, {"score": 0.032127783720518686, "phrase": "core"}, {"score": 0.00481495049065317, "phrase": "concurrent_failure_recovery"}, {"score": 0.004754600386388821, "phrase": "regenerating-coding-based_storage_systems"}, {"score": 0.004549242970806199, "phrase": "data_availability"}, {"score": 0.004435885269134359, "phrase": "distributed_storage_systems"}, {"score": 0.004325339932975582, "phrase": "node_failures"}, {"score": 0.004217537792708984, "phrase": "real_life"}, {"score": 0.0041384457437123635, "phrase": "key_requirement"}, {"score": 0.003788444178071508, "phrase": "lost_or_unavailable_data"}, {"score": 0.0036018503805251424, "phrase": "recovery_solutions"}, {"score": 0.0035342634200440435, "phrase": "regenerating_codes"}, {"score": 0.003360146665246448, "phrase": "fault-tolerant_storage"}, {"score": 0.003174464741377186, "phrase": "single_node_failures"}, {"score": 0.0028511898481970595, "phrase": "general_number"}, {"score": 0.002780025943393764, "phrase": "single_and_concurrent_failures"}, {"score": 0.002626317051411829, "phrase": "minimum_possible_bandwidth"}, {"score": 0.002512650904797186, "phrase": "core_prototype"}, {"score": 0.002419136901298873, "phrase": "hdfs_cluster"}, {"score": 0.0022142194702079866, "phrase": "bandwidth_savings"}, {"score": 0.0021453112313233554, "phrase": "conventional_recovery_approach"}, {"score": 0.0021049977753042253, "phrase": "erasure_codes"}], "paper_keywords": ["Regenerating codes", " failure recovery", " distributed storage systems", " coding theory", " experiments and implementation"], "paper_abstract": "Data availability is critical in distributed storage systems, especially when node failures are prevalent in real life. A key requirement is to minimize the amount of data transferred among nodes when recovering the lost or unavailable data of failed nodes. This paper explores recovery solutions based on regenerating codes, which have been designed to provide fault-tolerant storage and minimum bandwidth. Existing optimal regenerating codes are designed for single node failures. We build a system called CORE, which augments existing optimal regenerating codes for the recovery of a general number of failures including single and concurrent failures. We show theoretically that CORE achieves the minimum possible bandwidth for most cases. We implement a CORE prototype and evaluate it atop an HDFS cluster testbed with up to 20 storage nodes. We demonstrate that our CORE prototype conforms to our theoretical findings and achieves bandwidth savings when compared to the conventional recovery approach based on erasure codes.", "paper_title": "Enabling Concurrent Failure Recovery for Regenerating-Coding-Based Storage Systems: From Theory to Practice", "paper_id": "WOS:000355989900008"}