{"auto_keywords": [{"score": 0.04915747964534472, "phrase": "maze_algorithm"}, {"score": 0.00481495049065317, "phrase": "automated_test_sequence_optimization"}, {"score": 0.004542158659382197, "phrase": "rapid_development"}, {"score": 0.004498213310668266, "phrase": "china_train_operation"}, {"score": 0.004305639197085793, "phrase": "behavioral_functions"}, {"score": 0.004121275290411653, "phrase": "railway_domain"}, {"score": 0.003983334573043943, "phrase": "automated_test_sequence_optimization_method"}, {"score": 0.0038876302202924644, "phrase": "system_functional_requirement_specification"}, {"score": 0.003831310632470526, "phrase": "high-speed_railway"}, {"score": 0.0037392451233558234, "phrase": "local_optimum"}, {"score": 0.0037030390595465673, "phrase": "traditional_ant_colony_algorithm"}, {"score": 0.0035616743422949766, "phrase": "ant_colony_algorithm"}, {"score": 0.003493021648360933, "phrase": "dynamical_learning_capacity"}, {"score": 0.00342568771304873, "phrase": "adaptation_capacity"}, {"score": 0.003376037544631762, "phrase": "complex_and_changeable_environment"}, {"score": 0.003215659239270654, "phrase": "optimal_searching_results"}, {"score": 0.003107935254560724, "phrase": "representative_functional_scenarios"}, {"score": 0.0030778231027679464, "phrase": "colored_petri"}, {"score": 0.002875027551180213, "phrase": "cpn_model"}, {"score": 0.0028058765785670546, "phrase": "extensible_markup_language"}, {"score": 0.002711842889248926, "phrase": "improved_ant_colony_algorithm"}, {"score": 0.0026337482179592422, "phrase": "optimal_sequences"}, {"score": 0.00259554612218815, "phrase": "shortest_searching_paths"}, {"score": 0.0025331002386232014, "phrase": "redundant_test_sequences"}, {"score": 0.0024601402359002056, "phrase": "natural_law"}, {"score": 0.0022756672722130424, "phrase": "optimal_sequence"}, {"score": 0.0022536005664642294, "phrase": "testing_results"}, {"score": 0.0022101055924375725, "phrase": "proposed_method"}, {"score": 0.0021464286727045623, "phrase": "test_sequences"}, {"score": 0.0021049977753042253, "phrase": "test_efficiency"}], "paper_keywords": ["Ant colony algorithm", " maze algorithm", " test sequence", " optimization", " CPN model"], "paper_abstract": "With the rapid development of China train operation and control system, validity and safety of behavioral functions of the system have attracted much attention in the railway domain. In this paper, an automated test sequence optimization method was presented from the system functional requirement specification of the high-speed railway. To overcome the local optimum of traditional ant colony algorithm, the maze algorithm is integrated with the ant colony algorithm to achieve the dynamical learning capacity and improve the adaptation capacity to the complex and changeable environment, and therefore, this algorithm can produce the optimal searching results. Several key railway operation scenarios are selected as the representative functional scenarios and Colored Petri Nets (CPN) is used to model the scenarios. After the CPN model is transformed into the extensible markup language (XML) model, the improved ant colony algorithm is employed to generate the optimal sequences. The shortest searching paths are found and the redundant test sequences are reduced based on the natural law of ants foraging. Finally, the Radio Blocking Center (RBC) test platform is designed and used to validate the optimal sequence. Testing results show that the proposed method is able to optimize the test sequences and improve the test efficiency successfully.", "paper_title": "Automated Test Sequence Optimization Based on the Maze Algorithm and Ant Colony Algorithm", "paper_id": "WOS:000356755900012"}