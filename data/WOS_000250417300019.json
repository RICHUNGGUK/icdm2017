{"auto_keywords": [{"score": 0.04476477802864247, "phrase": "dominating_clique"}, {"score": 0.011900726187671188, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "clique_problem"}, {"score": 0.0041586840496756474, "phrase": "dominating_set"}, {"score": 0.003991449490087454, "phrase": "existence_problem"}, {"score": 0.0034673190692473903, "phrase": "maximum_dominating_clique_problems"}, {"score": 0.0030833537429977797, "phrase": "input_graph"}, {"score": 0.00304737045343781, "phrase": "n_vertices"}, {"score": 0.0029766550209309127, "phrase": "minimum_dominating_clique"}, {"score": 0.002540285736232122, "phrase": "lower_bound"}, {"score": 0.0024379730432321656, "phrase": "worst_case_running_time"}, {"score": 0.0022192891418394514, "phrase": "exponential_space_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["graph algorithms", " exponential time algorithms", " dominating clique", " dominating set"], "paper_abstract": "A subset of vertices D subset of V of a graph G = (V, E) is a dominating clique if D is a dominating set and a clique of G. The existence problem 'Given a graph G, is there a dominating clique in G?' is NP-complete, and thus both the Minimum and the Maximum Dominating Clique problems are NP-hard. We present an O(1.3387(n)) time and polynomial space algorithm that for an input graph on n vertices either computes a minimum dominating clique or reports that the graph has no dominating clique. The algorithm uses the Branch & Reduce paradigm and its time analysis is based on the Measure & Conquer approach. We also establish a lower bound of Omega(1.2599(n)) for the worst case running time of the algorithm. Finally using memorization we obtain an O(1.3234(n)) time and exponential space algorithm for the same problem. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "An exact algorithm for the minimum dominating clique problem", "paper_id": "WOS:000250417300019"}