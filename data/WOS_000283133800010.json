{"auto_keywords": [{"score": 0.04646369500712274, "phrase": "stack-based_sort-merge_algorithm"}, {"score": 0.00481495049065317, "phrase": "xcdsearch"}, {"score": 0.004713162564945179, "phrase": "xml_keyword-based_queries"}, {"score": 0.004580769304731227, "phrase": "loosely_structured_queries"}, {"score": 0.004116440453049531, "phrase": "data_elements"}, {"score": 0.003493900927782043, "phrase": "erroneous_results"}, {"score": 0.003395640013786862, "phrase": "data_element"}, {"score": 0.002342972434255588, "phrase": "different_unified_entities"}, {"score": 0.002181514206602054, "phrase": "five_other_search_engines"}, {"score": 0.0021049977753042253, "phrase": "marked_improvement"}], "paper_keywords": ["XML keyword search", " keyword search", " keyword-based querying", " XML search engine"], "paper_abstract": "We present in this paper, a context-driven search engine called XCDSearch for answering XML Keyword-based queries as well as Loosely Structured queries, using a stack-based sort-merge algorithm. Most current research is focused on building relationships between data elements based solely on their labels and proximity to one another, while overlooking the contexts of the elements, which may lead to erroneous results. Since a data element is generally a characteristic of its parent, its context is determined by its parent. We observe that we could treat each set of elements consisting of a parent and its children data elements as one unified entity, and then use a stack-based sort-merge algorithm employing context-driven search techniques for determining the relationships between the different unified entities. We evaluated XCDSearch experimentally and compared it with five other search engines. The results showed marked improvement.", "paper_title": "XCDSearch: An XML Context-Driven Search Engine", "paper_id": "WOS:000283133800010"}