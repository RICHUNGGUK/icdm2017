{"auto_keywords": [{"score": 0.03772358778048001, "phrase": "proposed_method"}, {"score": 0.026429883099808787, "phrase": "naive-scan"}, {"score": 0.007740489563401452, "phrase": "time-series_databases"}, {"score": 0.00607137031746716, "phrase": "cpu_processing_step"}, {"score": 0.004605069682942661, "phrase": "effective_processing"}, {"score": 0.004573598742696912, "phrase": "subsequence_matching"}, {"score": 0.004285101149043392, "phrase": "similar_patterns"}, {"score": 0.004197817125707719, "phrase": "different_lengths"}, {"score": 0.004140613635632826, "phrase": "preliminary_experiment"}, {"score": 0.004028525144566374, "phrase": "performance_bottleneck"}, {"score": 0.0036846952802928, "phrase": "novel_method"}, {"score": 0.0035481809241908044, "phrase": "cpu_performance"}, {"score": 0.0033933295645859015, "phrase": "query_sequence"}, {"score": 0.0033701115914053083, "phrase": "data_subsequences"}, {"score": 0.0032340913850061764, "phrase": "optimal_one"}, {"score": 0.003135679861067472, "phrase": "false_dismissals"}, {"score": 0.002998776886514782, "phrase": "post-processing_step"}, {"score": 0.002799703831407504, "phrase": "performance_improvement_effects"}, {"score": 0.002742592804749034, "phrase": "extensive_experiments"}, {"score": 0.0024910622362019573, "phrase": "worst_performance"}, {"score": 0.002231657123365799, "phrase": "performance_inversion"}, {"score": 0.002201187194326849, "phrase": "lb-scan"}, {"score": 0.0021786074765975006, "phrase": "st-filter"}], "paper_keywords": [""], "paper_abstract": "This paper discusses effective processing of subsequence matching under time warping in time-series databases. Time warping is a transformation that enables the finding of sequences with similar patterns even when they are of different lengths. Through a preliminary experiment, we first point out that the performance bottleneck of Naive-Scan, a basic method for processing of subsequence matching under time warping, occurs in the CPU processing step. Then, we propose a novel method that optimizes such CPU processing step of Naive-Scan. The proposed method maximizes the CPU performance by eliminating all the redundant calculations required in computing the time warping distance of the query sequence against data subsequences. We formally prove that the proposed method is not only an optimal one for processing Naive-Scan but also does not incur false dismissals. Also, we discuss how to apply the proposed method to the post-processing step of LB-Scan and ST-Filter, the two well-known methods that employ the filtering step. Then, we quantitatively verify the performance improvement effects obtained by the proposed method via extensive experiments. The results show that the performance of all the three previous methods improves by employing the proposed method. In particular, Naive-Scan, which has been known to show the worst performance, performs much better than LB-Scan as well as ST-Filter in all the cases by employing the proposed method for their CPU processing. This result is so interesting and valuable in that the performance inversion among Naive-Scan, LB-Scan, and ST-Filter has occurred by optimizing the CPU processing step, which is their common performance bottleneck.", "paper_title": "Subsequence matching under time warping in time-series databases: observation, optimization, and performance results", "paper_id": "WOS:000254661100004"}