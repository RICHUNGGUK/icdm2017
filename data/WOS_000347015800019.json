{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-core_processors"}, {"score": 0.03162986421078839, "phrase": "resource_augmentation"}, {"score": 0.00469445816161498, "phrase": "processor_design"}, {"score": 0.004600228893803583, "phrase": "full_advantage"}, {"score": 0.004553822674247401, "phrase": "multi-core_processing"}, {"score": 0.004306795240631196, "phrase": "intra-task_parallelism"}, {"score": 0.004073113268289532, "phrase": "real-time_scheduling"}, {"score": 0.004011603024990615, "phrase": "general_model"}, {"score": 0.003971111060168551, "phrase": "deterministic_parallel_tasks"}, {"score": 0.003793876828939456, "phrase": "directed_acyclic_graph"}, {"score": 0.0036614948691735105, "phrase": "arbitrary_execution_requirements"}, {"score": 0.003587924960158317, "phrase": "processor-speed_augmentation_bounds"}, {"score": 0.0035337158050484474, "phrase": "preemptive_and_non-preemptive_real-time_scheduling"}, {"score": 0.003480388556179809, "phrase": "dag"}, {"score": 0.003291336101694653, "phrase": "sequential_tasks"}, {"score": 0.0031125795874844438, "phrase": "decomposed_tasks"}, {"score": 0.003034558550137019, "phrase": "preemptive_global_edf"}, {"score": 0.0026457367614424756, "phrase": "general_dag_model"}, {"score": 0.0024516267507109753, "phrase": "constant_non-preemption_overhead"}, {"score": 0.002426842369975213, "phrase": "non-preemptive_global_edf_scheduling"}, {"score": 0.0023183698048498797, "phrase": "first_resource_augmentation"}, {"score": 0.002283298119790413, "phrase": "non-preemptive_scheduling"}, {"score": 0.0021049977753042253, "phrase": "derived_resource_augmentation_bounds"}], "paper_keywords": ["Parallel task", " multi-core processor", " real-time scheduling", " resource augmentation bound"], "paper_abstract": "Recently, multi-core processors have become mainstream in processor design. To take full advantage of multi-core processing, computation-intensive real-time systems must exploit intra-task parallelism. In this paper, we address the problem of real-time scheduling for a general model of deterministic parallel tasks, where each task is represented as a directed acyclic graph (DAG) with nodes having arbitrary execution requirements. We prove processor-speed augmentation bounds for both preemptive and non-preemptive real-time scheduling for general DAG tasks on multi-core processors. We first decompose each DAG into sequential tasks with their own release times and deadlines. Then we prove that these decomposed tasks can be scheduled using preemptive global EDF with a resource augmentation bound of 4. This bound is as good as the best known bound for more restrictive models, and is the first for a general DAG model. We also prove that the decomposition has a resource augmentation bound of 4 plus a constant non-preemption overhead for non-preemptive global EDF scheduling. To our knowledge, this is the first resource augmentation bound for non-preemptive scheduling of parallel tasks. Finally, we evaluate our analytical results through simulations that demonstrate that the derived resource augmentation bounds are safe in practice.", "paper_title": "Parallel Real-Time Scheduling of DAGs", "paper_id": "WOS:000347015800019"}