{"auto_keywords": [{"score": 0.024409753993766922, "phrase": "systemc"}, {"score": 0.00481495049065317, "phrase": "system-level_designs"}, {"score": 0.0047797212183363835, "phrase": "existing_system-level_design_languages"}, {"score": 0.0045736684402340275, "phrase": "simulation_frame-work"}, {"score": 0.004457579615095599, "phrase": "increasing_demand"}, {"score": 0.004328494656899359, "phrase": "quick_and_faster_design_space"}, {"score": 0.004187718090913465, "phrase": "numerous_tools"}, {"score": 0.0041418132064539185, "phrase": "integrated_development_environments"}, {"score": 0.0036822794196763506, "phrase": "specific_purpose"}, {"score": 0.003549371903680862, "phrase": "desired_features"}, {"score": 0.003309877074892399, "phrase": "existing_commercial_tools"}, {"score": 0.00322576184471691, "phrase": "extendable_framework"}, {"score": 0.0030526216870671325, "phrase": "technology_reuse"}, {"score": 0.002942373803701752, "phrase": "tidy_infrastructure"}, {"score": 0.0028153046221865386, "phrase": "added_solution"}, {"score": 0.00257735013358606, "phrase": "plug-and-play_framework"}, {"score": 0.0023335495163073544, "phrase": "service-oriented_architecture"}, {"score": 0.0022081920438290193, "phrase": "open-source_technologies"}, {"score": 0.002183938718432764, "phrase": "doxygen"}, {"score": 0.0021679176844660074, "phrase": "apache's_xerces_extensible_markup_language_parsers"}, {"score": 0.0021205548157547495, "phrase": "adaptive_communication_environment"}, {"score": 0.0021050291236663792, "phrase": "ace"}], "paper_keywords": ["common object request broker architecture (CORBA)", " embedded system design", " introspection", " middleware", " reflection", " SystemC", " verification and validation"], "paper_abstract": "Existing system-level design languages (SLDLs) and frameworks mainly provide a modeling and a simulation frame-work. However, there is an increasing demand for supporting tools to aid designers in quick and faster design space and architectural exploration. As a result, numerous tools such as integrated development environments (IDEs) and others that help in debugging, visualization, validation, and verification are commonly employed by designers. As with most tools, they are targeted for a specific purpose, making it difficult for designers to possess all desired features from one particular tool. Only public-domain tools can be easily extended or interfaced with other existing tools, which a lot of the existing commercial tools do not promote. Having an extendable framework allows designers to implement their own desirable features and incorporate them into their framework. However, for technology reuse and transfer, it is important to have a tidy infrastructure for interfacing the extension with the framework, such that the added solution is not highly coupled with the environment, making distribution and deployment to other frameworks difficult, if not impossible. This requires a plug-and-play framework where features can be easily integrated. These issues of extendibility, deployment, and the inadequacies in SLDLs and frameworks are tackled by presenting a service-oriented architecture for validating SLDs for SystemC, called CARH,(1) which uses a variety of open-source technologies such as Doxygen, Apache's Xerces extensible markup language parsers, SystemC, and the adaptive communication environment (ACE) object request broker.", "paper_title": "CARH: Service-oriented architecture for validating system-level designs", "paper_id": "WOS:000239367700003"}