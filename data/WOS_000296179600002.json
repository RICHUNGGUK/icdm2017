{"auto_keywords": [{"score": 0.043039693183724616, "phrase": "voltage_scaling"}, {"score": 0.03552026610926925, "phrase": "cpu_frequency"}, {"score": 0.031383332366980904, "phrase": "energy-delay_product"}, {"score": 0.00481495049065317, "phrase": "inter-node_mpi_communication_regions"}, {"score": 0.0046937237797352515, "phrase": "high-performance_computing"}, {"score": 0.00457553517865013, "phrase": "raw_performance"}, {"score": 0.004260134699483774, "phrase": "major_power_consumer"}, {"score": 0.003926105480202798, "phrase": "cpu_performance"}, {"score": 0.003807872423389514, "phrase": "cpu"}, {"score": 0.003711723285313348, "phrase": "critical_path"}, {"score": 0.003581412258960711, "phrase": "significant_energy_savings"}, {"score": 0.003438058620195309, "phrase": "mpi_runtime_system"}, {"score": 0.0033004240095380623, "phrase": "communication_phases"}, {"score": 0.0032668821950788533, "phrase": "mpi_programs"}, {"score": 0.003104201872147936, "phrase": "priori_knowledge"}, {"score": 0.0029196116767956273, "phrase": "analysis_and_subsequent_frequency_and_voltage_scaling"}, {"score": 0.002875299637952312, "phrase": "mpi"}, {"score": 0.00267669209359436, "phrase": "large_number"}, {"score": 0.0026494723416072316, "phrase": "existing_mpi_programs"}, {"score": 0.0025826247025542213, "phrase": "new_ones"}, {"score": 0.00240426758768164, "phrase": "median_reduction"}, {"score": 0.002284444272376043, "phrase": "median_energy_reduction"}, {"score": 0.0022154296909169826, "phrase": "median_increase"}, {"score": 0.0021928902836049384, "phrase": "execution_time_increase"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Power-aware computing", " Message passing interface (MPI)"], "paper_abstract": "Although users of high-performance computing are most interested in raw performance, both energy and power consumption have become critical concerns. Because the CPU is often the major power consumer, some microprocessors allow frequency and voltage scaling, which enables a system to efficiently reduce CPU performance and power. When the CPU is not on the critical path, such dynamic frequency and voltage scaling can produce significant energy savings with little performance penalty. This paper presents an MPI runtime system that dynamically reduces CPU frequency and voltage during communication phases in MPI programs. It dynamically identifies such phases and, without a priori knowledge, selects the CPU frequency in order to minimize energy-delay product. All analysis and subsequent frequency and voltage scaling is within MPI and so is entirely transparent to the application. This means that the large number of existing MPI programs, as well as new ones being developed, can use our system without modification. Results show that the median reduction in energy-delay product for twelve benchmarks is 8%, the median energy reduction is 11%, and the median increase in execution time increase is only 2%. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive, transparent CPU scaling algorithms leveraging inter-node MPI communication regions", "paper_id": "WOS:000296179600002"}