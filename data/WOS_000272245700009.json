{"auto_keywords": [{"score": 0.043257604349949186, "phrase": "bad_results"}, {"score": 0.00481495049065317, "phrase": "colluding_nodes"}, {"score": 0.004775335634705251, "phrase": "desktop_grid_computing_platforms"}, {"score": 0.004736045157669388, "phrase": "desktop_grid_systems"}, {"score": 0.004677711903652145, "phrase": "preeminent_place"}, {"score": 0.004342430078306461, "phrase": "computing_projects"}, {"score": 0.00428892403807229, "phrase": "administrative_or_technical_control"}, {"score": 0.004064548693812535, "phrase": "software_or_hardware_glitches"}, {"score": 0.0038518661517315533, "phrase": "unfair_computational_credit"}, {"score": 0.0036352070472201086, "phrase": "desktop_grid_servers"}, {"score": 0.0036052633308076933, "phrase": "work_units"}, {"score": 0.0033883824438527316, "phrase": "simple_majority_voting"}, {"score": 0.0033327768024847397, "phrase": "malicious_volunteers"}, {"score": 0.00301773391856432, "phrase": "work_unit"}, {"score": 0.002847858807513713, "phrase": "voting_pools"}, {"score": 0.002755104031926742, "phrase": "first_step"}, {"score": 0.0026986685585382347, "phrase": "statistical_approach"}, {"score": 0.0024842242921857705, "phrase": "rather_simple_principle"}, {"score": 0.0024434201175883674, "phrase": "malicious_nodes"}, {"score": 0.0023540387251475615, "phrase": "conflicting_voting_pools"}, {"score": 0.0022773309395419427, "phrase": "step_i."}, {"score": 0.0021049977753042253, "phrase": "honest_nodes"}], "paper_keywords": ["Desktop grids", " Volunteer computing", " Collusion", " Replication"], "paper_abstract": "Desktop Grid systems reached a preeminent place among the most powerful computing platforms in the planet. Unfortunately, they are extremely vulnerable to mischief, because computing projects exert no administrative or technical control on volunteers. These can very easily output bad results, due to software or hardware glitches (resulting from over-clocking for instance), to get unfair computational credit, or simply to ruin the project. To mitigate this problem, Desktop Grid servers replicate work units and apply majority voting, typically on 2 or 3 results. In this paper, we observe that simple majority voting is powerless against malicious volunteers that collude to attack the project. We argue that to identify this type of attack and to spot colluding nodes, each work unit needs at least 3 voters. In addition, we propose to post-process the voting pools in two steps. i) In the first step, we use a statistical approach to identify nodes that were not colluding, but submitted bad results; ii) then, we use a rather simple principle to go after malicious nodes which acted together: they might have won conflicting voting pools against nodes that were not identified in step i. We use simulation to show that our heuristic can be quite effective against colluding nodes, in scenarios where honest nodes form a majority.", "paper_title": "Defeating Colluding Nodes in Desktop Grid Computing Platforms", "paper_id": "WOS:000272245700009"}