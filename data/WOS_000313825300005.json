{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "uniti"}, {"score": 0.013409179254758844, "phrase": "multiple_domains"}, {"score": 0.012843294072697171, "phrase": "single_model"}, {"score": 0.012548416853033775, "phrase": "model_transformations"}, {"score": 0.011820508619565897, "phrase": "different_notions"}, {"score": 0.004782848614014638, "phrase": "unified_composition"}, {"score": 0.0047192824773697, "phrase": "multi-domain_model-based_design"}, {"score": 0.004656557209439822, "phrase": "model-based_design"}, {"score": 0.004533585346030341, "phrase": "physical_world"}, {"score": 0.0044286400018187354, "phrase": "current_tools"}, {"score": 0.003978866233891427, "phrase": "dataflow_domain"}, {"score": 0.003899745240916238, "phrase": "well-defined_interaction"}, {"score": 0.0034917831997090328, "phrase": "model-based_design_flow"}, {"score": 0.003287482882222731, "phrase": "signal_transformations"}, {"score": 0.0029631742332058087, "phrase": "unified_composition_operators"}, {"score": 0.002827365415832384, "phrase": "unified_perspective"}, {"score": 0.00265292826903791, "phrase": "local_property"}, {"score": 0.0025568881277209725, "phrase": "time_transformations"}, {"score": 0.0025313026089662165, "phrase": "time_delays"}, {"score": 0.0022967713922705, "phrase": "design_steps"}, {"score": 0.00227378279992074, "phrase": "design_flow"}, {"score": 0.0022061853706148945, "phrase": "composition_operators"}, {"score": 0.0021262835396323623, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "phased_array_beamforming_system"}], "paper_keywords": ["Cyber-physical systems", " Embedded systems", " Model-based design", " Multi-domain", " Model transformations", " Unified composition", " Unified time"], "paper_abstract": "To apply model-based design to embedded systems that interface with the physical world, including simulation and verification, current tools fall short. They must provide mathematical (model) definitions that stay close to the specification of the system. They must allow multiple domains, such as the continuous-time, discrete-time and dataflow domain, in a single model including well-defined interaction. They must support model transformations for refining a model during development. And most importantly, they must accurately include and simulate different notions of time in the model. UniTi is a model-based design flow and modelling and simulation environment that delivers on all these aspects. It is based on components that are signal transformations, and therefore mathematical functions. However, in each domain the representation of a signal differs. As components have the same structure in each domain, we can use unified composition operators to represent multiple domains in a single model. Furthermore, this composition provides a unified perspective on time in the domains, even though we differentiate between different notions of time. Time becomes a local property of the model, allowing us to represent and simulate time transformations such as time delays exactly without losing efficiency. Finally, model transformations are defined for such components, which are used for refining and developing the model and which are guided by the design steps in the design flow. We will formally define the domains, composition operators and transformations of UniTi and verify the approach with a case study on a phased array beamforming system.", "paper_title": "UNITI: Unified Composition and Time for Multi-domain Model-based Design", "paper_id": "WOS:000313825300005"}