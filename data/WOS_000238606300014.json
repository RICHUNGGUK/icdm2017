{"auto_keywords": [{"score": 0.05007840182816712, "phrase": "linear_ordering_problem"}, {"score": 0.04834192453742872, "phrase": "lop"}, {"score": 0.03543899314550813, "phrase": "vns"}, {"score": 0.004295269532032448, "phrase": "upper_triangle"}, {"score": 0.0042521895049768875, "phrase": "np-complete_problem"}, {"score": 0.00407042677958844, "phrase": "acyclic_tournament"}, {"score": 0.004029592719134717, "phrase": "maximal_sum"}, {"score": 0.004002596930301241, "phrase": "arc_weights"}, {"score": 0.0039624406239057944, "phrase": "complete_weighted_graph"}, {"score": 0.0038314621564116192, "phrase": "previous_methods"}, {"score": 0.0037297918570822876, "phrase": "heuristic_algorithm"}, {"score": 0.003679969180334367, "phrase": "variable_neighborhood_search"}, {"score": 0.0035702793079311896, "phrase": "different_neighborhoods"}, {"score": 0.0035344448639851827, "phrase": "efficient_exploration"}, {"score": 0.003498968822873231, "phrase": "search_space"}, {"score": 0.003452218803245602, "phrase": "different_search_strategies"}, {"score": 0.003406091279580424, "phrase": "hybrid_method"}, {"score": 0.0033045378860812403, "phrase": "short-term_tabu_search"}, {"score": 0.003216804708106142, "phrase": "real_and_random_instances"}, {"score": 0.0031738126998349775, "phrase": "proposed_procedure"}, {"score": 0.003131393466870228, "phrase": "best-known_algorithms"}, {"score": 0.0030895394261534776, "phrase": "solution_quality"}, {"score": 0.0030482430937467013, "phrase": "reasonable_computing-time_requirements"}, {"score": 0.0029473940028924748, "phrase": "metaheuristic_method"}, {"score": 0.002869115451202179, "phrase": "promising_outcomes"}, {"score": 0.002840298440413678, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0027929100418926725, "phrase": "systematic_change"}, {"score": 0.0027463101082160915, "phrase": "local_search_procedure"}, {"score": 0.002700485592691974, "phrase": "deterministic_and_random_strategies"}, {"score": 0.0025675372701474035, "phrase": "vns_implementation"}, {"score": 0.0025332005503938947, "phrase": "high_quality_solutions"}, {"score": 0.002507748938616919, "phrase": "np-hard_lop"}, {"score": 0.002465895175961543, "phrase": "significant_number"}, {"score": 0.0023365892290481472, "phrase": "so-called_triangulation_problem"}, {"score": 0.00232090909020124, "phrase": "input-output_tables"}, {"score": 0.002274495768753633, "phrase": "innovative_mechanisms"}, {"score": 0.002251637552201872, "phrase": "memory_structures"}, {"score": 0.0022290085428279846, "phrase": "vns_methodology"}, {"score": 0.0021479597698614355, "phrase": "tabu_search"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["combinatorial optimization", " metaheuristics", " linear ordering problem"], "paper_abstract": "Given a matrix of weights, the linear ordering problem (LOP) consists of finding a permutation of the columns and rows in order to maximize the sum of the weights in the upper triangle. This NP-complete problem can also be formulated in terms of graphs, as finding an acyclic tournament with a maximal sum of arc weights in a complete weighted graph. In this paper, we first review the previous methods for the LOP and then propose a heuristic algorithm based on the variable neighborhood search (VNS) methodology. The method combines different neighborhoods for an efficient exploration of the search space. We explore different search strategies and propose a hybrid method in which the VNS is coupled with a short-term tabu search for improved outcomes. Our extensive experimentation with both real and random instances shows that the proposed procedure competes with the best-known algorithms in terms of solution quality, and has reasonable computing-time requirements. Variable neighborhood search (VNS) is a metaheuristic method that has recently been shown to yield promising outcomes for solving combinatorial optimization problems. Based on a systematic change of neighborhood in a local search procedure, VNS uses both deterministic and random strategies in search for the global optimum. In this paper, we present a VNS implementation designed to find high quality solutions for the NP-hard LOP, which has a significant number of applications in practice. The LOP, for example, is equivalent to the so-called triangulation problem for input-output tables in economics. Our implementation incorporates innovative mechanisms to include memory structures within the VNS methodology. Moreover we study the hybridization with other methodologies such as tabu search. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Variable neighborhood search for the linear ordering problem", "paper_id": "WOS:000238606300014"}