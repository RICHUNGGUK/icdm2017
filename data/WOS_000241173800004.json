{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reachability_analysis"}, {"score": 0.004576253356889219, "phrase": "symbolic_algorithm"}, {"score": 0.004240116703465252, "phrase": "large_number"}, {"score": 0.003571018150056717, "phrase": "local_state_explosion"}, {"score": 0.0022578275190855124, "phrase": "larger_models"}, {"score": 0.0021049977753042253, "phrase": "high_speedups"}], "paper_keywords": ["distributed reachability", " symbolic model checking", " distributed BDDs", " splitting", " load balance"], "paper_abstract": "This work presents a novel distributed symbolic algorithm for reachability analysis that can effectively exploit, as needed, a large number of machines working in parallel. The novelty of the algorithm is in its dynamic allocation and reallocation of processes to tasks and in its mechanism for recovery from local state explosion. As a result, the algorithm is work-efficient: it utilizes only those resources that are actually needed. In addition, its high adaptability makes it suitable for exploiting the resources of very large and heterogeneous distributed, nondedicated environments. Thus, it suitable for verifying very large systems. We implemented our algorithm in a tool called Division. Our experimental results show that the algorithm is indeed work-efficient. Although the goal of this research is to check larger models, the results also indicate that the algorithm can obtain high speedups, because communication overhead is very small.", "paper_title": "A work-efficient distributed algorithm for reachability analysis", "paper_id": "WOS:000241173800004"}