{"auto_keywords": [{"score": 0.032870506629902825, "phrase": "second_one"}, {"score": 0.004752873752686246, "phrase": "assigned_server"}, {"score": 0.004358903464536199, "phrase": "load-distance_balancing"}, {"score": 0.0038115535592184438, "phrase": "network_delay"}, {"score": 0.0036029221645629225, "phrase": "congestion_delay"}, {"score": 0.003510507340837656, "phrase": "nondecreasing_function"}, {"score": 0.0032896853291511405, "phrase": "ldb"}, {"score": 0.003163878786694538, "phrase": "maximum_incurred_delay"}, {"score": 0.0030428787018636147, "phrase": "average_delay"}, {"score": 0.002990592465417758, "phrase": "first_variation"}, {"score": 0.0029392020223716966, "phrase": "hardness_results"}, {"score": 0.0029012378668247397, "phrase": "best_possible_approximation_algorithm"}, {"score": 0.0028513785049061767, "phrase": "optimal_algorithm"}, {"score": 0.0028145455182562807, "phrase": "special_case"}, {"score": 0.002790254164160135, "phrase": "linear_placement"}, {"score": 0.00261567741414786, "phrase": "np"}, {"score": 0.0024928553725344933, "phrase": "concave_delay_functions"}, {"score": 0.0024606422183102382, "phrase": "exact_algorithm"}, {"score": 0.0024183363693242943, "phrase": "delay_function"}, {"score": 0.002335889180060105, "phrase": "game_theoretic_version"}, {"score": 0.0023056996845692355, "phrase": "second_problem"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["approximation algorithms", " facility assignment"], "paper_abstract": "Problems dealing with assignment of clients to servers have been widely studied. However, they usually do not model the fact that the delay incurred by a client is a function of both the distance to the assigned server and the load on this server, under a given assignment. We study a problem referred to as the load-distance balancing (LDB) problem, where the objective is assigning a set of clients to a set of given servers. Each client suffers a delay, that is, the sum of the network delay (which is proportional to the distance to its server) and the congestion delay at this server, a nondecreasing function of the number of clients assigned to the server. We address two flavors of LDB-the first one seeking to minimize the maximum incurred delay, and the second one targeted for minimizing the average delay. For the first variation, we present hardness results, a best possible approximation algorithm, and an optimal algorithm for a special case of linear placement of clients and servers. For the second one, we show the problem is NP-hard in general, and present a 2-approximation for concave delay functions and an exact algorithm, if the delay function is convex. We also consider the game theoretic version of the second problem and show the price of stability of the game is at most 2 and at least 4/3. (C) 2011 Wiley Periodicals, Inc. NETWORKS, Vol. 59(1), 22-29 2012", "paper_title": "The load-distance balancing problem", "paper_id": "WOS:000298087600004"}