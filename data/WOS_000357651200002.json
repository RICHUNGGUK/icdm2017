{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "energy_hotspots"}, {"score": 0.012659864172629012, "phrase": "energy_consumption"}, {"score": 0.010352776188184289, "phrase": "process-level_energy_monitoring"}, {"score": 0.010243605498062946, "phrase": "os-level_energy_monitoring"}, {"score": 0.004713379149462482, "phrase": "green_it"}, {"score": 0.004444921827311577, "phrase": "software_solutions"}, {"score": 0.003952828685048176, "phrase": "coarse-grained_approaches"}, {"score": 0.0035527409334589317, "phrase": "fine-grained_runtime_energy_monitoring_framework"}, {"score": 0.00335016692413066, "phrase": "better_accuracy"}, {"score": 0.0032272929113113203, "phrase": "two-layer_architecture"}, {"score": 0.0029789104204803137, "phrase": "different_hardware_devices"}, {"score": 0.0028089634624677957, "phrase": "java-based_applications"}, {"score": 0.0024842242921857705, "phrase": "per-method_analysis"}, {"score": 0.002418742283474052, "phrase": "better_insights"}, {"score": 0.002317533977770783, "phrase": "potential_energy_hotspots"}, {"score": 0.0021620042653528846, "phrase": "jetty_web_servers"}, {"score": 0.0021049977753042253, "phrase": "stress_scenarios"}], "paper_keywords": ["Power model", " Power monitoring", " Energy consumption"], "paper_abstract": "Green IT has emerged as a discipline concerned with the optimization of software solutions with regards to their energy consumption. In this domain, most of the state-of-the-art solutions concentrate on coarse-grained approaches to monitor the energy consumption of a device or a process. In this paper, we report on a fine-grained runtime energy monitoring framework we developed to help developers to diagnose energy hotspots with a better accuracy. Concretely, our approach adopts a two-layer architecture including OS-level and process-level energy monitoring. OS-level energy monitoring estimates the energy consumption of processes according to different hardware devices (CPU, network card). Process-level energy monitoring focuses on Java-based applications and builds on OS-level energy monitoring to provide an estimation of energy consumption at the granularity of classes and methods. We argue that this per-method analysis of energy consumption provides better insights to the application in order to identify potential energy hotspots. In particular, our preliminary validation demonstrates that we can monitor energy hotspots of Jetty web servers and monitor their variations under stress scenarios.", "paper_title": "Monitoring energy hotspots in software", "paper_id": "WOS:000357651200002"}