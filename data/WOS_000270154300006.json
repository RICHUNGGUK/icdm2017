{"auto_keywords": [{"score": 0.005220874676008817, "phrase": "ctl"}, {"score": 0.00481495049065317, "phrase": "data-aware_temporal_web_service_properties"}, {"score": 0.004675768396728975, "phrase": "workflow_validation"}, {"score": 0.004630270043271386, "phrase": "syntactical_checking"}, {"score": 0.004198839649063847, "phrase": "message_names"}, {"score": 0.0041579627441997, "phrase": "abstract_away_their_actual_data_content"}, {"score": 0.004037694641919865, "phrase": "real-world_\"data-aware\"_web_service_constraints"}, {"score": 0.0035902958977673313, "phrase": "computation_tree_logic"}, {"score": 0.0035379628447303703, "phrase": "first-order_quantification"}, {"score": 0.0034187896011435245, "phrase": "temporal_operators"}, {"score": 0.003239549357111286, "phrase": "data-aware_constraints"}, {"score": 0.0031767199435197243, "phrase": "sound_and_complete_model_checking_algorithm"}, {"score": 0.002951739421935396, "phrase": "\"naive\"_translation"}, {"score": 0.0028244513779243107, "phrase": "serious_exponential_blowup"}, {"score": 0.002742648551009682, "phrase": "existing_validation_tools"}, {"score": 0.0026372419109713923, "phrase": "alternate_translation"}, {"score": 0.002486659929589854, "phrase": "workflow_model"}, {"score": 0.002265586601922693, "phrase": "complex_formulas"}, {"score": 0.002232519579957707, "phrase": "model_checking"}, {"score": 0.0022107428653358715, "phrase": "data-aware_temporal_properties"}, {"score": 0.0021049977753042253, "phrase": "off-the-shelf_tools"}], "paper_keywords": ["Web services", " software/program verification", " model checking", " temporal logic"], "paper_abstract": "Most works that extend workflow validation beyond syntactical checking consider constraints on the sequence of messages exchanged between services. These constraints are expressed only in terms of message names and abstract away their actual data content. We provide examples of real-world \"data-aware\" Web service constraints where the sequence of messages and their content are interdependent. To this end, we present CTL-FO(+), an extension over Computation Tree Logic that includes first-order quantification on message content in addition to temporal operators. We show how CTL-FO(+) is adequate for expressing data-aware constraints, give a sound and complete model checking algorithm for CTL-FO(+), and establish its complexity to be PSPACE-complete. A \"naive\" translation of CTL-FO(+) into CTL leads to a serious exponential blowup of the problem that prevents existing validation tools to be used. We provide an alternate translation of CTL-FO(+) into CTL, where the construction of the workflow model depends on the property to validate. We show experimentally how this translation is significantly more efficient for complex formulas and makes model checking of data-aware temporal properties on real-world Web service workflows tractable using off-the-shelf tools.", "paper_title": "Specifying and Validating Data-Aware Temporal Web Service Properties", "paper_id": "WOS:000270154300006"}