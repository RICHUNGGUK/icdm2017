{"auto_keywords": [{"score": 0.0379234642085309, "phrase": "confirmation_bias"}, {"score": 0.010452917460073829, "phrase": "software_quality"}, {"score": 0.005524360721137792, "phrase": "software_development"}, {"score": 0.00481495049065317, "phrase": "confirmation_biases"}, {"score": 0.004617455679463816, "phrase": "thought_processes"}, {"score": 0.004530371221172796, "phrase": "significant_impact"}, {"score": 0.004278807087784626, "phrase": "cognitive_biases"}, {"score": 0.0041821205529541045, "phrase": "patterned_deviations"}, {"score": 0.004150377643719188, "phrase": "human_thought"}, {"score": 0.003980032599437366, "phrase": "likely_cause"}, {"score": 0.00394981748347167, "phrase": "software_defects"}, {"score": 0.0036321600255449613, "phrase": "specific_cognitive_bias"}, {"score": 0.0031542917620807093, "phrase": "unit_tests"}, {"score": 0.002867425368894356, "phrase": "increased_software_defect_density"}, {"score": 0.0027706507124407686, "phrase": "metric_scheme"}, {"score": 0.0027079507175554857, "phrase": "developers'_confirmation_bias"}, {"score": 0.002687366778212309, "phrase": "software_defect_density"}, {"score": 0.0024522007854499554, "phrase": "empirical_study"}, {"score": 0.002387560868354908, "phrase": "defective_parts"}, {"score": 0.0023069440108381364, "phrase": "confirmation_bias_metrics"}, {"score": 0.0022894012453842064, "phrase": "five_datasets"}, {"score": 0.002229043128610864, "phrase": "empirical_evidence"}, {"score": 0.0022120914337992034, "phrase": "human_thought_processes"}, {"score": 0.0021952683716334478, "phrase": "cognitive_aspects"}, {"score": 0.0021537671245615286, "phrase": "decision_making"}, {"score": 0.0021211305348270413, "phrase": "effective_process_management"}, {"score": 0.0021049977753042253, "phrase": "resource_allocation"}], "paper_keywords": ["Human factors", " Software psychology", " Defect prediction", " Confirmation bias"], "paper_abstract": "The thought processes of people have a significant impact on software quality, as software is designed, developed and tested by people. Cognitive biases, which are defined as patterned deviations of human thought from the laws of logic and mathematics, are a likely cause of software defects. However, there is little empirical evidence to date to substantiate this assertion. In this research, we focus on a specific cognitive bias, confirmation bias, which is defined as the tendency of people to seek evidence that verifies a hypothesis rather than seeking evidence to falsify a hypothesis. Due to this confirmation bias, developers tend to perform unit tests to make their program work rather than to break their code. Therefore, confirmation bias is believed to be one of the factors that lead to an increased software defect density. In this research, we present a metric scheme that explores the impact of developers' confirmation bias on software defect density. In order to estimate the effectiveness of our metric scheme in the quantification of confirmation bias within the context of software development, we performed an empirical study that addressed the prediction of the defective parts of software. In our empirical study, we used confirmation bias metrics on five datasets obtained from two companies. Our results provide empirical evidence that human thought processes and cognitive aspects deserve further investigation to improve decision making in software development for effective process management and resource allocation.", "paper_title": "Influence of confirmation biases of developers on software quality: an empirical study", "paper_id": "WOS:000316746700007"}