{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fused_floating-point_operations"}, {"score": 0.004284302478991387, "phrase": "fast_fourier_transform"}, {"score": 0.004023120753104693, "phrase": "fused_operations"}, {"score": 0.003916098498242888, "phrase": "two-term_dot_product"}, {"score": 0.0038119123317396954, "phrase": "add-subtract_unit"}, {"score": 0.0037104876694493815, "phrase": "fft_processors"}, {"score": 0.0036443694410100507, "phrase": "\"butterfly\"_operations"}, {"score": 0.0033011569787033297, "phrase": "complex_valued_data"}, {"score": 0.002936849401568391, "phrase": "floating-point_operations"}, {"score": 0.0027328817607818207, "phrase": "high_performance_standard_cell_technology"}, {"score": 0.0026600905156986317, "phrase": "fused_fft_butterflies"}, {"score": 0.0024311346712789553, "phrase": "conventional_implementation"}, {"score": 0.0023451553255837317, "phrase": "numerical_results"}, {"score": 0.002282667669149476, "phrase": "fused_implementations"}], "paper_keywords": ["Floating-point arithmetic", " fused floating-point operations", " fast Fourier transform", " Radix-2 FFT butterfly", " Radix-4 FFT butterfly"], "paper_abstract": "This paper describes two fused floating-point operations and applies them to the implementation of fast Fourier transform (FFT) processors. The fused operations are a two-term dot product and an add-subtract unit. The FFT processors use \"butterfly\" operations that consist of multiplications, additions, and subtractions of complex valued data. Both radix-2 and radix-4 butterflies are implemented efficiently with the two fused floating-point operations. When placed and routed using a high performance standard cell technology, the fused FFT butterflies are about 15 percent faster and 30 percent smaller than a conventional implementation. Also the numerical results of the fused implementations are slightly more accurate, since they use fewer rounding operations.", "paper_title": "FFT Implementation with Fused Floating-Point Operations", "paper_id": "WOS:000298560500013"}