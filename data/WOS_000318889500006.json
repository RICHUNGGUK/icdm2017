{"auto_keywords": [{"score": 0.038928562270111176, "phrase": "local_acceleration_structure"}, {"score": 0.00481495049065317, "phrase": "interactive_ray_tracing"}, {"score": 0.004690305164360866, "phrase": "new_group-based_acceleration_data_structure"}, {"score": 0.004529093447865156, "phrase": "dynamic_scenes"}, {"score": 0.004470071518923524, "phrase": "main_idea"}, {"score": 0.004316396683332752, "phrase": "acceleration_structure"}, {"score": 0.004260134699483774, "phrase": "multi-level_hierarchy"}, {"score": 0.004149792080414689, "phrase": "parallelization_approach"}, {"score": 0.00406001734835979, "phrase": "faster_update"}, {"score": 0.003408091901859624, "phrase": "scene_graph"}, {"score": 0.0032054891061528896, "phrase": "higher_parallelization"}, {"score": 0.0031223774204093713, "phrase": "different_levels"}, {"score": 0.002898378776839434, "phrase": "simple_and_fast_load-balancing_scheme"}, {"score": 0.0027620516806198354, "phrase": "accurate_sah"}, {"score": 0.0025638362414466278, "phrase": "real-time_update_performance"}, {"score": 0.002508284945907166, "phrase": "update_performance"}, {"score": 0.0023487324083283205, "phrase": "six-core_hardware_system_environment"}, {"score": 0.0022579036318895753, "phrase": "tree_traversal_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Ray tracing", " Kd-tree", " Dynamic scene"], "paper_abstract": "This paper proposes a new group-based acceleration data structure called gkDtree for interactive ray tracing of dynamic scenes. The main idea of the gkDtree is to construct the acceleration structure with a multi-level hierarchy, and to integrate a parallelization approach to result in a faster update and a more efficient tree traversal. A gkDtree can be viewed as a set of kd-trees, each of which is a local acceleration structure corresponding to a group. For a gkDtree, a scene is divided into several groups based on a scene graph. The local acceleration structure of each group involving only dynamic primitives is rebuilt. To achieve higher parallelization, dependencies among groups in different levels are removed before rebuilding occurs in parallel. To enhance the scalability of parallelization, a simple and fast load-balancing scheme is introduced. Furthermore, we apply a variety of accurate SAH (surface area heuristic) algorithms into tree generation for both static and dynamic groups. The experimental results show that a gkDtree has a real-time update performance. It has an update performance that is up to 166 times faster than a kd-tree for our test scenes in a six-core hardware system environment. Furthermore, the results also show that tree traversal performance of a gkDtree is competitive with that of a kd-tree. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "gkDtree: A group-based parallel update kd-tree for interactive ray tracing", "paper_id": "WOS:000318889500006"}