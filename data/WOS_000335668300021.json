{"auto_keywords": [{"score": 0.024290077277338968, "phrase": "performance_guarantee"}, {"score": 0.00481495049065317, "phrase": "flow_shop"}, {"score": 0.004262643556463565, "phrase": "arbitrary_sizes"}, {"score": 0.004151188559520802, "phrase": "limited_capacity"}, {"score": 0.003936910716320182, "phrase": "total_size"}, {"score": 0.0037336520904376687, "phrase": "machine_capacity"}, {"score": 0.003304965389155549, "phrase": "minimising_makespan"}, {"score": 0.0031845067058084613, "phrase": "strong_sense"}, {"score": 0.0030684249587688826, "phrase": "mathematical_model"}, {"score": 0.002988101395789399, "phrase": "integer_programme"}, {"score": 0.002879158342988017, "phrase": "feasible_solutions"}, {"score": 0.0027889366191837504, "phrase": "optimality_properties"}, {"score": 0.002687235334499192, "phrase": "polynomial_time_algorithm"}, {"score": 0.002658863179011018, "phrase": "running_time"}, {"score": 0.002508073621696602, "phrase": "feasible_batches"}, {"score": 0.002391067964886602, "phrase": "general_case"}, {"score": 0.002316105585203396, "phrase": "proposed_algorithm"}, {"score": 0.002208035721125305, "phrase": "special_case"}, {"score": 0.0021731423856364003, "phrase": "processing_times"}], "paper_keywords": ["scheduling", " heuristics", " batch-processing machines", " arbitrary job sizes", " flow shop"], "paper_abstract": "This article considers the problem of scheduling two batch-processing machines in flow shop where the jobs have arbitrary sizes and the machines have limited capacity. The jobs are processed in batches and the total size of jobs in each batch cannot exceed the machine capacity. Once a batch is being processed, no interruption is allowed until all the jobs in it are completed. The problem of minimising makespan is NP-hard in the strong sense. First, we present a mathematical model of the problem using integer programme. We show the scale of feasible solutions of the problem and provide optimality properties. Then, we propose a polynomial time algorithm with running time in O(nlogn). The jobs are first assigned in feasible batches and then scheduled on machines. For the general case, we prove that the proposed algorithm has a performance guarantee of 4. For the special case where the processing times of each job on the two machines satisfy p(1j) = ap(2j), the performance guarantee is 2(1 + a((1-a)/vertical bar 1-a vertical bar)) for a > 0.", "paper_title": "Scheduling algorithm for flow shop with two batch-processing machines and arbitrary job sizes", "paper_id": "WOS:000335668300021"}