{"auto_keywords": [{"score": 0.04300723495941336, "phrase": "different_lengths"}, {"score": 0.02938236995915673, "phrase": "memory_consumption"}, {"score": 0.026255405704328664, "phrase": "update_speed"}, {"score": 0.00481495049065317, "phrase": "packet_forwarding"}, {"score": 0.004776853267973129, "phrase": "backbone_routers"}, {"score": 0.004739056045644449, "phrase": "tens-of-gigabits-per-second_links"}, {"score": 0.004518442937844318, "phrase": "ip_lookup_operation"}, {"score": 0.004189863767755212, "phrase": "systematic_method"}, {"score": 0.003885085477351673, "phrase": "sequential_array"}, {"score": 0.0037784540167266497, "phrase": "linked_lists"}, {"score": 0.0037040785566765954, "phrase": "trie-based_structures"}, {"score": 0.0036456298076415652, "phrase": "fast_binary_and_multiway_prefix_searches"}, {"score": 0.0033402088717816416, "phrase": "large_routing_tables"}, {"score": 0.0032355864829403413, "phrase": "proposed_multiway_prefix_search"}, {"score": 0.0031845067058084583, "phrase": "worst-case_number"}, {"score": 0.0030239842475439814, "phrase": "cpu_cache_lines"}, {"score": 0.0028715299874549245, "phrase": "proposed_prefix_searches"}, {"score": 0.002837451022172113, "phrase": "existing_ip_lookup_schemes"}, {"score": 0.002792638947473095, "phrase": "lookup_times"}, {"score": 0.00267301171407926, "phrase": "performance_advantages"}, {"score": 0.0026412824985309323, "phrase": "proposed_binary_prefix_searches"}, {"score": 0.002548331088496964, "phrase": "existing_lookup_schemes"}, {"score": 0.0024981087707313656, "phrase": "lookup_speed"}, {"score": 0.0023626775529531486, "phrase": "proposed_prefix_search"}, {"score": 0.002316105585203396, "phrase": "dynamic_routing_table_schemes"}, {"score": 0.0022524395393089544, "phrase": "n_prefixes"}, {"score": 0.0021992603252793995, "phrase": "overall_performance"}, {"score": 0.0021731423856364003, "phrase": "proposed_binary_prefix_search"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["binary search", " CPU caches", " longest prefix match", " routing table"], "paper_abstract": "Backbone routers with tens-of-gigabits-per-second links are indispensable communication devices to deploy on the Internet. The IP lookup operation is the most critical task that must be improved in routers. In this paper, we first present a systematic method to compare prefixes of different lengths. The list of prefixes can then be sorted and stored in a sequential array, which is contrary to the linked lists used in most of trie-based structures. Next, fast binary and multiway prefix searches assisted by auxiliary prefixes are proposed. We also developed a 32-bit representation to encode the prefixes of different lengths. For the large routing tables currently available on the Internet, the proposed multiway prefix search can achieve the worst-case number of memory accesses of three and four if the sizes of the CPU cache lines are 64 bytes and 32 bytes, respectively. The IPv4 simulation results show that the proposed prefix searches outperform the existing IP lookup schemes in terms of lookup times and memory consumption. The simulations using IPv6 routing tables also show the performance advantages of the proposed binary prefix searches. We also analyze the performance of the existing lookup schemes by concurrently considering the lookup speed, the update speed, and the memory consumption. Although the update speed of the proposed prefix search is worse than the dynamic routing table schemes with log(N) complexity for a table of N prefixes, our analysis shows that the overall performance of the proposed binary prefix search outperforms all the existing schemes. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Fast binary and multiway prefix searches for packet forwarding", "paper_id": "WOS:000243156000003"}