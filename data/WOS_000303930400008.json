{"auto_keywords": [{"score": 0.027744511726260423, "phrase": "fit_tables"}, {"score": 0.015259597177796416, "phrase": "cbs"}, {"score": 0.009660118545777363, "phrase": "acceptance_test_cases"}, {"score": 0.008964227398562672, "phrase": "maintenance_process"}, {"score": 0.00481495049065317, "phrase": "acceptance_testing_information"}, {"score": 0.00476697427418509, "phrase": "component-based_system_maintenance"}, {"score": 0.004719473826242326, "phrase": "component-based_system"}, {"score": 0.004534136929881113, "phrase": "best-matched_components"}, {"score": 0.004466519142879166, "phrase": "integration_code"}, {"score": 0.004184921610672245, "phrase": "available_components"}, {"score": 0.004101886428528311, "phrase": "unique_maintenance_challenges"}, {"score": 0.004040688646993605, "phrase": "system_analyst"}, {"score": 0.00396050388346298, "phrase": "existing_components"}, {"score": 0.0038819041309353024, "phrase": "software_application"}, {"score": 0.003785836059995376, "phrase": "detailed_individual_component_specification"}, {"score": 0.0037106898330901534, "phrase": "key_area"}, {"score": 0.0036370297611938796, "phrase": "cbs_development"}, {"score": 0.0035292625231068517, "phrase": "maintenance_phase"}, {"score": 0.00347657813672945, "phrase": "cbs_development_life_cycle"}, {"score": 0.0033231814056233103, "phrase": "integrated_test"}, {"score": 0.0032908025787737214, "phrase": "fit"}, {"score": 0.0027881294891497115, "phrase": "functional_specification"}, {"score": 0.002665027876903159, "phrase": "implementation_percentage"}, {"score": 0.0024717881264735477, "phrase": "mean_times"}, {"score": 0.002224510044064184, "phrase": "functional_correctness"}, {"score": 0.00210499840229361, "phrase": "cbs."}], "paper_keywords": [""], "paper_abstract": "Component-based system (CBS) development usually involves adapting best-matched components and writing integration code to handle the mismatches between system-to-be needs and available components. CBS presents unique maintenance challenges as a system analyst focuses on integrating existing components to build a software application. The lack of detailed individual component specification has been a key area of concern in CBS development because of its impact on the maintenance phase of a CBS development life cycle. Recent research suggests that the framework for integrated test (Fit) helps to better comprehend systems. In this work, the author presents a study to investigate the usefulness of acceptance test cases (Fit tables) information, when used as a functional specification, during the maintenance process. The mean correct implementation percentage with and without Fit tables were 86.19 and 83.52, respectively. Similarly, the mean times for the Fit tables and without Fit tables were 46.5 and 45.73, respectively. The results show that acceptance test cases help improve the functional correctness of changes with a little more effort during the maintenance process of a CBS.", "paper_title": "Usefulness of acceptance testing information for component-based system maintenance", "paper_id": "WOS:000303930400008"}