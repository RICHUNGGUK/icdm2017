{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "operational_costs"}, {"score": 0.04271017950038436, "phrase": "cpu_resource_consumption"}, {"score": 0.03070954352294603, "phrase": "mainframe_environment"}, {"score": 0.004774115617883476, "phrase": "mips_management"}, {"score": 0.004478846501209216, "phrase": "mips"}, {"score": 0.0043842558719324526, "phrase": "traditional_acronym"}, {"score": 0.004112812699639956, "phrase": "processing_power"}, {"score": 0.00397495478332679, "phrase": "mips_attributed_costs"}, {"score": 0.0037446875860947916, "phrase": "large_mainframe_production_environment"}, {"score": 0.0036037265181631324, "phrase": "financial_sector"}, {"score": 0.003512702405367876, "phrase": "vast_majority"}, {"score": 0.003468053168607071, "phrase": "top_cpu_intensive_operations"}, {"score": 0.003423969509052361, "phrase": "production_environment"}, {"score": 0.0032810180076973806, "phrase": "portfolio-wide_efforts"}, {"score": 0.0031981188104809994, "phrase": "source_code_perspective"}, {"score": 0.003025597247856977, "phrase": "sql_code_improvements"}, {"score": 0.0029998918671747168, "phrase": "small_scale"}, {"score": 0.0028623555849897632, "phrase": "industrial_setting"}, {"score": 0.0026734504926268442, "phrase": "mainframe_usage_data"}, {"score": 0.002617007341172262, "phrase": "source_code"}, {"score": 0.002539978170928796, "phrase": "real-world_sql_tuning_project"}, {"score": 0.002433843373780471, "phrase": "cobol_applications"}, {"score": 0.00235213013487844, "phrase": "possible_drop"}, {"score": 0.0023221983158528163, "phrase": "attributed_monthly_cpu_usage"}, {"score": 0.002159623311924437, "phrase": "large_organization"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["IT-portfolio management", " Cost reduction", " MIPS", " Source code analysis", " SQL"], "paper_abstract": "We focus on an approach to reducing the costs of running applications. MIPS, which is a traditional acronym for millions of instructions per second, have evolved to become a measurement of processing power and CPU resource consumption. The need for controlling MIPS attributed costs is indispensable given their significant contribution to operational costs. In this paper we investigate a large mainframe production environment running 246 Cobol applications of an organization operating in the financial sector. We found that the vast majority of the top CPU intensive operations in the production environment involve the use of DB2. We propose approaching portfolio-wide efforts to reduce CPU resource consumption from the source code perspective. Our technique is low-risk, low-cost and involves SQL code improvements of small scale. We show how to analyze a mainframe environment in an industrial setting, and to locate the most promising source code segments for optimizing runtime usage. Our approach relies on the mainframe usage data, facts extracted from source code, and is supported by a real-world SQL tuning project. After applying our technique to a portfolio of Cobol applications running on the mainframe our estimates suggested a possible drop in the attributed monthly CPU usage by as much as 16.8%. The approach we present is suited for facilitation within a mainframe environment of a large organization. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Reducing operational costs through MIPS management", "paper_id": "WOS:000347741400006"}