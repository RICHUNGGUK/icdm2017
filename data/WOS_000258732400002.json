{"auto_keywords": [{"score": 0.04455442320959087, "phrase": "hardware_monitors"}, {"score": 0.00481495049065317, "phrase": "dynamic_page_migration"}, {"score": 0.00462291551375938, "phrase": "profile-driven_online_page_migration_scheme"}, {"score": 0.004456611869693865, "phrase": "multithreaded_applications"}, {"score": 0.004192571571622019, "phrase": "memory_access_behavior"}, {"score": 0.0036355032885145894, "phrase": "centralized_hardware_monitors"}, {"score": 0.0034761488481944657, "phrase": "cache_miss_profiles"}, {"score": 0.003447932289587852, "phrase": "translation_lookaside_buffer"}, {"score": 0.0032967724149749853, "phrase": "on-chip_tlbs"}, {"score": 0.0032567057896906314, "phrase": "valid_bit_information"}, {"score": 0.0031522185379771056, "phrase": "modest_hardware_feature"}, {"score": 0.003063540596298518, "phrase": "atc"}, {"score": 0.0029531640201737384, "phrase": "hardware_profiles"}, {"score": 0.0029053904956617043, "phrase": "dyninst_runtime_instrumentation"}, {"score": 0.00278930116312699, "phrase": "page_migration_capabilities"}, {"score": 0.002688781336915723, "phrase": "operating_system_kernel"}, {"score": 0.002613103872300205, "phrase": "application_programs"}, {"score": 0.002508663916554954, "phrase": "local_memory_accesses"}, {"score": 0.002321563536990284, "phrase": "based_study"}, {"score": 0.0022378620428620782, "phrase": "on-chip_cpu_monitors"}, {"score": 0.0021748483128942687, "phrase": "current_microprocessors"}, {"score": 0.0021049977753042253, "phrase": "dynamic_page_migrations"}], "paper_keywords": ["dynamic page migration", " hardware performance monitors", " cc-NUMA systems", " multiprocessor systems", " openMP applications", " high performance computing", " address translation counters", " runtime optimization", " full system simulation"], "paper_abstract": "In this paper, we first introduce a profile-driven online page migration scheme and investigate its impact on the performance of multithreaded applications. We use centralized lightweight, inexpensive plug-in hardware monitors to profile the memory access behavior of an application, and then migrate pages to memory local to the most frequently accessing processor. We also investigate the use of several other potential sources of data gathered from hardware monitors and compare their effectiveness to using data from centralized hardware monitors. in particular, we investigate the effectiveness of using cache miss profiles, Translation Lookaside Buffer (TLB) miss profiles and the content of the on-chip TLBs using the valid bit information. Moreover, we also introduce a modest hardware feature, called Address Translation Counters (ATC), and compare its effectiveness with other sources of hardware profiles. Using the Dyninst runtime instrumentation combined with hardware monitors, we were able to add page migration capabilities to a Sun Fire 6800 server without having to modify the operating system kernel, or to re-compile application programs. Our dynamic page migration scheme reduced the total number of non-local memory accesses of applications by up to 90% and improved the execution times up to 16%. We also conducted a simulation based study and demonstrated that cache miss profiles gathered from on-chip CPU monitors, which are typically available in current microprocessors, can be effectively used to guide dynamic page migrations in applications. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Hardware monitors for dynamic page migration", "paper_id": "WOS:000258732400002"}