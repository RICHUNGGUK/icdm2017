{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "cloud_storage_systems"}, {"score": 0.02844428606521812, "phrase": "coding_techniques"}, {"score": 0.015209660531786885, "phrase": "cloud_computing"}, {"score": 0.014290291809178034, "phrase": "cloud_storage_system"}, {"score": 0.004691684576246597, "phrase": "current_era"}, {"score": 0.004454497011118188, "phrase": "tremendous_speed"}, {"score": 0.004276541976450121, "phrase": "key_components"}, {"score": 0.004167001961564886, "phrase": "substantial_amount"}, {"score": 0.004105666842002734, "phrase": "commodity_disks"}, {"score": 0.004060256280654948, "phrase": "data_center"}, {"score": 0.0037421829222825964, "phrase": "high_efficiency"}, {"score": 0.0036734281414482735, "phrase": "storage_overhead"}, {"score": 0.0036462799422150834, "phrase": "data_integrity"}, {"score": 0.003539671663910004, "phrase": "replicated_data"}, {"score": 0.003461758868675955, "phrase": "data_losses"}, {"score": 0.003360527337581911, "phrase": "conventional_erasure_coding_techniques"}, {"score": 0.0033110234463504125, "phrase": "reed-solomon_codes"}, {"score": 0.0031434146012468307, "phrase": "disk_failures"}, {"score": 0.003006499028632742, "phrase": "even_higher_access_latency"}, {"score": 0.002929394386754424, "phrase": "new_coding_techniques"}, {"score": 0.0028648759706752162, "phrase": "significant_amount"}, {"score": 0.0026996706283276407, "phrase": "existing_results"}, {"score": 0.00241509422805775, "phrase": "cloud_storage"}, {"score": 0.002284234786840546, "phrase": "recent_advances"}, {"score": 0.0021846599115561832, "phrase": "main_ideas"}, {"score": 0.0021604504765314497, "phrase": "specific_coding_techniques"}, {"score": 0.0021365087453258263, "phrase": "high_level"}], "paper_keywords": ["erasure coding", " cloud storage", " regenerating codes", " locally repairable codes"], "paper_abstract": "In the current era of cloud computing, data stored in the cloud is being generated at a tremendous speed, and thus the cloud storage system has become one of the key components in cloud computing. By storing a substantial amount of data in commodity disks inside the data center that hosts the cloud, the cloud storage system must consider one question very carefully: how do we store data reliably with a high efficiency in terms of both storage overhead and data integrity? Though it is easy to store replicated data to tolerate a certain amount of data losses, it suffers from a very low storage efficiency. Conventional erasure coding techniques, such as Reed-Solomon codes, are able to achieve a much lower storage cost with the same level of tolerance against disk failures. However, it incurs much higher repair costs, not to mention an even higher access latency. In this sense, designing new coding techniques for cloud storage systems has gained a significant amount of attention in both academia and the industry. In this paper, we examine the existing results of coding techniques for cloud storage systems. Specifically, we present these coding techniques into two categories: regenerating codes and locally repairable codes. These two kinds of codes meet the requirements of cloud storage along two different axes: optimizing bandwidth and I/O overhead. We present an overview of recent advances in these two categories of coding techniques. Moreover, we introduce the main ideas of some specific coding techniques at a high level, and discuss their motivations and performance.", "paper_title": "Erasure Coding for Cloud Storage Systems: A Survey", "paper_id": "WOS:000209529200006"}