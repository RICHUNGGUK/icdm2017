{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bidirectional_texture_functions"}, {"score": 0.0450678547644915, "phrase": "edit_propagation_scheme"}, {"score": 0.028312317972293805, "phrase": "propagation_process"}, {"score": 0.00462919213721188, "phrase": "efficient_method"}, {"score": 0.004081385289516914, "phrase": "sparse_edits"}, {"score": 0.0035981701736904495, "phrase": "whole_btf_data"}, {"score": 0.003432044343307207, "phrase": "btf_data"}, {"score": 0.003299460925313939, "phrase": "similar_edits"}, {"score": 0.002931569771634119, "phrase": "independent_features"}, {"score": 0.0028405715222684183, "phrase": "reflectance_features"}, {"score": 0.0025436978068459565, "phrase": "adaptive_sampling_scheme"}, {"score": 0.0023139986108451946, "phrase": "accurate_geometry"}, {"score": 0.0021384748235753425, "phrase": "complex_btfs"}, {"score": 0.0021049977753042253, "phrase": "interactive_feedback"}], "paper_keywords": [""], "paper_abstract": "We propose an efficient method for editing bidirectional texture functions (BTFs) based on edit propagation scheme. In our approach, users specify sparse edits on a certain slice of BTF An edit propagation scheme is then applied to propagate edits to the whole BTF data. The consistency of the BTF data is maintained by propagating similar edits to points with similar underlying geometry/reflectance. For this purpose, we propose to use view independent features including normals and reflectance features reconstructed from each view to guide the propagation process. We also propose an adaptive sampling scheme for speeding up the propagation process. Since our method needn't any accurate geometry and reflectance information, it allows users to edit complex BTFs with interactive feedback.", "paper_title": "Edit Propagation on Bidirectional Texture Functions", "paper_id": "WOS:000270778100016"}