{"auto_keywords": [{"score": 0.032527740785698485, "phrase": "new_theory"}, {"score": 0.004815219346076856, "phrase": "unified"}, {"score": 0.0046938292389998824, "phrase": "slot-based_task-splitting"}, {"score": 0.0046597835420572825, "phrase": "hard_real-_time_multiprocessor_scheduling"}, {"score": 0.004493207015584002, "phrase": "semi-partitioned_scheduling_algorithms"}, {"score": 0.004412155302768363, "phrase": "scheduling_schemes"}, {"score": 0.004348363291608004, "phrase": "partitioned_and_global_scheduling"}, {"score": 0.004254393078576148, "phrase": "efficient_utilization"}, {"score": 0.004208169035079665, "phrase": "system's_processing_resources"}, {"score": 0.004177631185971939, "phrase": "strong_schedulability_guarantees"}, {"score": 0.004028220740657591, "phrase": "slot-based_\"task-splitting"}, {"score": 0.0037725685596495355, "phrase": "high_utilization_bounds"}, {"score": 0.0035459819741057836, "phrase": "unified_scheduling_theory"}, {"score": 0.003357343256340741, "phrase": "fragmented_landscape"}, {"score": 0.003201967054773186, "phrase": "nps-f"}, {"score": 0.0030315735229977958, "phrase": "exact_schedulability_tests"}, {"score": 0.00293370839211022, "phrase": "existing_analysis"}, {"score": 0.0028702214190712036, "phrase": "schedulability_testing"}, {"score": 0.002838993542880416, "phrase": "task_assignment"}, {"score": 0.002727362288104992, "phrase": "improved_task_assignment_procedure"}, {"score": 0.0024987660207458555, "phrase": "original_theory"}, {"score": 0.002444668348634501, "phrase": "theoretical_potential"}, {"score": 0.0023570895666021664, "phrase": "new_analysis"}, {"score": 0.0022397131088479514, "phrase": "new_overhead-aware_schedulability_analysis"}, {"score": 0.0021049977753042253, "phrase": "extensive_set"}], "paper_keywords": ["Multiprocessor systems", " Slot-based task-splitting algorithms", " Schedulability analysis", " System overheads"], "paper_abstract": "Hard real- time multiprocessor scheduling has seen, in recent years, the flourishing of semi-partitioned scheduling algorithms. This category of scheduling schemes combines elements of partitioned and global scheduling for the purposes of achieving efficient utilization of the system's processing resources with strong schedulability guarantees and with low dispatching overheads. The sub-class of slot-based \"task-splitting\" scheduling algorithms, in particular, offers very good trade-offs between schedulability guarantees (in the form of high utilization bounds) and the number of preemptions/migrations involved. However, so far there did not exist unified scheduling theory for such algorithms; each one was formulated in its own accompanying analysis. This article changes this fragmented landscape by formulating a more unified schedulability theory covering the two state-of-the-art slot-based semi-partitioned algorithms, S-EKG and NPS-F (both fixed job-priority based). This new theory is based on exact schedulability tests, thus also overcoming many sources of pessimism in existing analysis. In turn, since schedulability testing guides the task assignment under the schemes in consideration, we also formulate an improved task assignment procedure. As the other main contribution of this article, and as a response to the fact that many unrealistic assumptions, present in the original theory, tend to undermine the theoretical potential of such scheduling schemes, we identified and modelled into the new analysis all overheads incurred by the algorithms in consideration. The outcome is a new overhead-aware schedulability analysis that permits increased efficiency and reliability. The merits of this new theory are evaluated by an extensive set of experiments.", "paper_title": "Unified overhead-aware schedulability analysis for slot-based task-splitting", "paper_id": "WOS:000344182000004"}