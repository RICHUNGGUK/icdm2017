{"auto_keywords": [{"score": 0.04161684142707831, "phrase": "ahp"}, {"score": 0.010612370982771976, "phrase": "web-based_applications"}, {"score": 0.007803142152786447, "phrase": "binary_code"}, {"score": 0.004031238480458909, "phrase": "automated_hot_patching"}, {"score": 0.00317221667574882, "phrase": "product_release"}, {"score": 0.003005039427642664, "phrase": "application_programs"}, {"score": 0.0027386335451725762, "phrase": "virtually_all_applications"}, {"score": 0.002675797331220082, "phrase": "promising_application"}, {"score": 0.002476546030310661, "phrase": "remote_maintenance_center"}, {"score": 0.002438512485648557, "phrase": "rmc"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["patching", " binary code instrumentation", " reasoning"], "paper_abstract": "Patching technologies are commonly applied to improve the dependability of software after release. This paper reports the design of an automated hot patching (AHP) framework that fully automates reasoning for the causes of failures and patching the binary code of Web-based applications. AHP admits the hardness for rooting out all faults before product release, and autonomously patches problems of application programs. By directly operating on binary code, AHP is universal to virtually all applications. A promising application of AHP is to shortcut a function of the remote maintenance center (RMC) and hence to reduce the turn around time for patches. (C) 2006 Published by Elsevier B.V.", "paper_title": "Binary analysis and automated hot patching for Web-based applications", "paper_id": "WOS:000242768300003"}