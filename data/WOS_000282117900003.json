{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_checker"}, {"score": 0.04141365795578276, "phrase": "composite_web_services"}, {"score": 0.03419406368324848, "phrase": "ws-cdl"}, {"score": 0.0276215281517931, "phrase": "ws-cdl_model_checker"}, {"score": 0.004774530554776604, "phrase": "ws-cdl._service_computing"}, {"score": 0.004694700982410345, "phrase": "prominent_paradigm"}, {"score": 0.004655285779819366, "phrase": "distributed_computing_and_electronic_businesses"}, {"score": 0.0043150485532080065, "phrase": "existing_services"}, {"score": 0.004050514095922329, "phrase": "web_service_composition"}, {"score": 0.003982741546775355, "phrase": "peer_desription"}, {"score": 0.003916098498242888, "phrase": "multiple_participants"}, {"score": 0.003850566273995209, "phrase": "traditional_model_checking_methods"}, {"score": 0.0037861265016041813, "phrase": "linear_temporal_logic"}, {"score": 0.003754383188181815, "phrase": "ltl"}, {"score": 0.0036450381529042103, "phrase": "state-action_relationship"}, {"score": 0.003599182629885611, "phrase": "composite_web_service_model"}, {"score": 0.0035091888798162176, "phrase": "new_approach"}, {"score": 0.003407026489727146, "phrase": "temporal_logic_of_actions"}, {"score": 0.003104849179057156, "phrase": "new_sub-language"}, {"score": 0.00305285084207725, "phrase": "temporal_and_action_restriction_properties"}, {"score": 0.002889778121878728, "phrase": "optimizing_method"}, {"score": 0.002723862897844177, "phrase": "model_checker_algorithm"}, {"score": 0.0023100907305651872, "phrase": "specified_constraint_attributes"}, {"score": 0.0022522565004588113, "phrase": "experimental_results"}, {"score": 0.0022051664509486206, "phrase": "partial_order_reduction_method"}, {"score": 0.0021590588269751816, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Web service composition", " TLA", " WS-CDL", " TLA4CDL", " Model checker"], "paper_abstract": "Service computing is becoming the prominent paradigm for distributed computing and electronic businesses. It enables developers to rapidly create their own software to meet the demands of their business processes, by composing existing services, especially Web services distributed on the Internet. WS-CDL is a W3C-proposed language for Web service composition, featuring the peer desription of composite Web services amongst multiple participants. Since the traditional model checking methods based on the linear temporal logic (LTL) has limit in expressing the state-action relationship for a composite Web service model, this paper proposes a new approach, based upon the idea of Temporal Logic of Actions (TLA), to model check the composite Web services described in WS-CDL In this paper, WS-CDL is extended by a new sub-language for expressing the temporal and action restriction properties, named TLA4CDL. The expressiveness of TLA4CDL is also discussed. The optimizing method called partial order reduction is introduced, followed by the discussion of the model checker algorithm. This leads to the development and implementation of the WS-CDL model checker. Finally, several test scenarios are provided in order to validate the WS-CDL model checker. The experimental results demonstrate this model checker is capable of detecting deadlock and verifying the specified constraint attributes by TLA4CDL A comparison of experimental results with and without the partial order reduction method shows that our checker has better performance. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A model checker for WS-CDL", "paper_id": "WOS:000282117900003"}