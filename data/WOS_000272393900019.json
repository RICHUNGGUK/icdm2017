{"auto_keywords": [{"score": 0.010612373768516939, "phrase": "unified_dual-radix_architecture"}, {"score": 0.009903790665626402, "phrase": "ecc"}, {"score": 0.009530585722180478, "phrase": "montgomery"}, {"score": 0.007743306796994991, "phrase": "previous_works"}, {"score": 0.007508476199380426, "phrase": "delay-time_difference"}, {"score": 0.004777917315737992, "phrase": "scalable_montgomery_multiplications"}, {"score": 0.004614745158543967, "phrase": "modular_multiplication"}, {"score": 0.004526503177267299, "phrase": "elliptic_curve_cryptography"}, {"score": 0.004355026964936104, "phrase": "public-key_cryptography"}, {"score": 0.004190019394361629, "phrase": "modular_multiplications"}, {"score": 0.004094018760244776, "phrase": "bit_length"}, {"score": 0.0034806529881619454, "phrase": "changing_frequency"}, {"score": 0.0032592499906265882, "phrase": "critical_path"}, {"score": 0.0029361086955646625, "phrase": "architecture_unifies"}, {"score": 0.0027175263159330523, "phrase": "single_unit"}, {"score": 0.002686169280393858, "phrase": "lower_radix"}, {"score": 0.002429090371567499, "phrase": "clock_dividers"}, {"score": 0.0023188652648490874, "phrase": "parallel_architecture"}, {"score": 0.002265638487492082, "phrase": "clock_cycles"}, {"score": 0.0022394839933089074, "phrase": "dual-radix_approach"}, {"score": 0.0021965609224818853, "phrase": "proposed_architecture"}, {"score": 0.0021049977753042253, "phrase": "implementation_result"}], "paper_keywords": ["elliptic curve cryptography", " dual-radix", " modular multiplication", " Montgomery multiplication", " scalability", " unified"], "paper_abstract": "Modular multiplication is the most dominant arithmetic operation in elliptic curve cryptography (ECC), that is a type of public-key cryptography. Montgomery multiplier is commonly used to compute the modular multiplications and requires scalability because the bit length of operands varies depending on its security level. In addition, ECC is performed in GF(P) or GF(2(n)), and unified architecture for multipliers in GF(P) and GF(2(n)) is required. However, in previous works, changing frequency is necessary to deal with delay-time difference between GF(P) and GF(2(n)) multipliers because the critical path of the GF(P) multiplier is longer. This paper proposes unified dual-radix architecture for scalable Montgomery multiplications in GF(P) and GF(2(n)). This proposed architecture unifies four parallel radix-2(16) multipliers in GF(P) and a radix-2(64) multiplier in GF(2(n)) into a single unit. Applying lower radix to GF(P) multiplier shortens its critical path and makes it possible to compute the operands in the two fields using the same multiplier at the same frequency so that clock dividers to deal with the delay-time difference are not required. Moreover, parallel architecture in GF(P) reduces the clock cycles increased by dual-radix approach. Consequently, the proposed architecture achieves to compute a GF(P) 256-bit Montgomery multiplication in 0.28 mu s. The implementation result shows that the area of the proposal is almost the same as that of previous works: 39 kgates.", "paper_title": "Unified Dual-Radix Architecture for Scalable Montgomery Multiplications in GF(P) and GF(2(n))", "paper_id": "WOS:000272393900019"}