{"auto_keywords": [{"score": 0.004760017604908536, "phrase": "precomputation-based_methods"}, {"score": 0.004678785623021003, "phrase": "real-time_rendering"}, {"score": 0.004520438007604407, "phrase": "-frequency_shadows"}, {"score": 0.004443276312972159, "phrase": "global_illumination"}, {"score": 0.004317576641196539, "phrase": "major_bottleneck"}, {"score": 0.004243862930012258, "phrase": "precomputation_time"}, {"score": 0.0039841418890102925, "phrase": "final_real-time_data_structures"}, {"score": 0.0038492126993451337, "phrase": "clustered_principal_component_analysis"}, {"score": 0.0037402558657576124, "phrase": "full_light_transport_matrix"}, {"score": 0.0035722806911457545, "phrase": "synthetic_scene"}, {"score": 0.0034911335714333507, "phrase": "exhaustive_sampling"}, {"score": 0.0033152062780180073, "phrase": "rapid_prototyping"}, {"score": 0.003277327351139926, "phrase": "new_scenes"}, {"score": 0.002938317647182056, "phrase": "adaptive_and_sparse_sampling"}, {"score": 0.002790170184447136, "phrase": "small_subset"}, {"score": 0.002758273619951683, "phrase": "\"dense_vertices"}, {"score": 0.0026494723416072316, "phrase": "angular_dimensions"}, {"score": 0.0025014259919355453, "phrase": "remaining_\"sparse_vertices"}, {"score": 0.002375253757224999, "phrase": "light_transport"}, {"score": 0.002268441347979241, "phrase": "nearby_dense_vertices"}, {"score": 0.0022424956516376073, "phrase": "locally_low_rank_approximations"}, {"score": 0.0021049977753042253, "phrase": "previous_methods"}], "paper_keywords": [""], "paper_abstract": "Precomputation-based methods have enabled real-time rendering with natural illumination, all-frequency shadows, and global illumination. However, a major bottleneck is the precomputation time, that can take hours to days. While the final real-time data structures are typically heavily compressed with clustered principal component analysis and/or wavelets, a full light transport matrix still needs to be precomputed for a synthetic scene, often by exhaustive sampling and raytracing. This is expensive and makes rapid prototyping of new scenes prohibitive. In this paper, we show that the precomputation can be made much more efficient by adaptive and sparse sampling of light transport. We first select a small subset of \"dense vertices\", where we sample the angular dimensions more completely (but still adaptively). The remaining \"sparse vertices\" require only a few angular samples, isolating features of the light transport. They can then be interpolated from nearby dense vertices using locally low rank approximations. We demonstrate sparse sampling and precomputation 5x faster than previous methods.", "paper_title": "Sparsely Precomputing The Light Transport Matrix for Real-Time Rendering", "paper_id": "WOS:000281286100010"}