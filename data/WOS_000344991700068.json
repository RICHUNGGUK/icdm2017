{"auto_keywords": [{"score": 0.04926889079413172, "phrase": "node-link-group_diagrams"}, {"score": 0.004817223443948948, "phrase": "node"}, {"score": 0.004782188313163487, "phrase": "node-link"}, {"score": 0.0044512920090463105, "phrase": "main_tasks"}, {"score": 0.0044209926093642235, "phrase": "information_visualization"}, {"score": 0.004331320910631647, "phrase": "well-defined_notion"}, {"score": 0.004200197763119297, "phrase": "traditional_approaches"}, {"score": 0.004157374465795314, "phrase": "principal_component_analysis"}, {"score": 0.004129067429043414, "phrase": "multi-dimensional_scaling"}, {"score": 0.0039362209515303795, "phrase": "similar_objects"}, {"score": 0.0038170129089059013, "phrase": "typical_setting"}, {"score": 0.0037140731069193896, "phrase": "network_graph"}, {"score": 0.0036761878173205225, "phrase": "related_nodes"}, {"score": 0.003352088714126572, "phrase": "explicit_representation"}, {"score": 0.003195414285736136, "phrase": "progressive_increase"}, {"score": 0.003141246279336443, "phrase": "encoded_information"}, {"score": 0.002883833572486452, "phrase": "controlled_experiment"}, {"score": 0.002854392852477005, "phrase": "nine_different_tasks"}, {"score": 0.002455489835065937, "phrase": "node-based_tasks"}, {"score": 0.0024138345020219333, "phrase": "group_representations"}, {"score": 0.0023486473525617816, "phrase": "network-based_tasks"}, {"score": 0.002293051006249274, "phrase": "group-based_tasks"}, {"score": 0.002215897810312801, "phrase": "similar_but_subtly_different_settings"}, {"score": 0.002141334979696276, "phrase": "significant_implications"}, {"score": 0.0021049977753042253, "phrase": "standard_and_domain_specific_visualizations_tools"}], "paper_keywords": ["graphs", " networks", " maps", " scatter plots"], "paper_abstract": "Effectively showing the relationships between objects in a dataset is one of the main tasks in information visualization. Typically there is a well-defined notion of distance between pairs of objects, and traditional approaches such as principal component analysis or multi-dimensional scaling are used to place the objects as points in 2D space, so that similar objects are close to each other. In another typical setting. the dataset is visualized as a network graph, where related nodes are connected by links. More recently, datasets are also visualized as maps, where in addition to nodes and links, there is an explicit representation of groups and clusters. We consider these three Techniques, characterized by a progressive increase of the amount of encoded information: node diagrams. node-link diagrams and node-link-group diagrams. We assess these three types of diagrams with a controlled experiment that covers nine different tasks falling broadly in three categories: node-based tasks, network-based tasks and group-based tasks. Our findings indicate that adding links, or links and group representations, does not negatively impact performance (time and accuracy) of node-based tasks. Similarly, adding group representations does not negatively impact the performance of network-based tasks. Node-link-group diagrams outperform the others on group-based tasks. These conclusions contradict results in other studies, in similar but subtly different settings. Taken together, however, such results can have significant implications for the design of standard and domain specific visualizations tools.", "paper_title": "Node, Node-Link, and Node-Link-Group Diagrams: An Evaluation", "paper_id": "WOS:000344991700068"}