{"auto_keywords": [{"score": 0.04313883532031361, "phrase": "change_rules"}, {"score": 0.015719716506582538, "phrase": "imperfect_change_rules"}, {"score": 0.004784448637292493, "phrase": "framework_api_evolution_identification"}, {"score": 0.004694092086199672, "phrase": "software_frameworks"}, {"score": 0.00433553336181385, "phrase": "upgrading_process"}, {"score": 0.004186534737631288, "phrase": "non-documented_framework_evolution"}, {"score": 0.003769450990471342, "phrase": "empirical_study"}, {"score": 0.00337224813954299, "phrase": "new_releases"}, {"score": 0.0030945803650219033, "phrase": "statistical_analysis_results"}, {"score": 0.0028578496983461136, "phrase": "-correct_change_rules"}, {"score": 0.002664513608074113, "phrase": "effect_size"}, {"score": 0.0025160740422447837, "phrase": "imperfect_and_correct_change_rules"}, {"score": 0.0024527767211457046, "phrase": "study_show"}, {"score": 0.0023987032522650915, "phrase": "api"}, {"score": 0.0023683286031958538, "phrase": "help_developers"}, {"score": 0.002166230024967046, "phrase": "partial_documentation"}, {"score": 0.0021456243019466843, "phrase": "moderate_difference"}, {"score": 0.0021049977753042253, "phrase": "imperfect_and_all-correct_change_rules"}], "paper_keywords": ["Software maintenance", " Usefulness", " Framework API evolution", " Change rule"], "paper_abstract": "Software frameworks keep evolving. It is often time-consuming for developers to keep their client code up-to-date. Not all frameworks have documentation about the upgrading process. Many approaches have been proposed to ease the impact of non-documented framework evolution on developers by identifying change rules between two releases of a framework, but these change rules are imperfect, i.e., not 100 % correct. To the best of our knowledge, there is no empirical study to show the usefulness of these imperfect change rules. Therefore, we design and conduct an experiment to evaluate their impact. In the experiment, the subjects must find the replacements of 21 missing methods in the new releases of three open-source frameworks with the help of (1) all-correct, (2) imperfect, and (3) no change rules. The statistical analysis results show that the precision of the replacements found by the subjects with the three sets of change rules are significantly different. The precision with all-correct change rules is the highest while that with no change rules is the lowest, while imperfect change rules give a precision in between. The effect size of the difference between the subjects with no and imperfect change rules is large and that between the subjects with imperfect and correct change rules is moderate. The results of this study show that the change rules generated by framework API evolution approaches do help developers, even they are not always correct. The imperfect change rules can be used by developers upgrading their code when documentation is not available or as a complement to partial documentation. The moderate difference between results from subjects with imperfect and all-correct change rules also suggests that improving precision of change rules will still help developers.", "paper_title": "The impact of imperfect change rules on framework API evolution identification: an empirical study", "paper_id": "WOS:000355754500007"}