{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_framework"}, {"score": 0.004743806810821005, "phrase": "parallel_integer_programming"}, {"score": 0.004179824713643488, "phrase": "generic_mixed_integer_linear_programs"}, {"score": 0.003418186564522323, "phrase": "relaxation-based_branch-and-bound_algorithms"}, {"score": 0.0030565692640988585, "phrase": "careful_analysis"}, {"score": 0.002815864555488112, "phrase": "large_amounts"}, {"score": 0.002613487968156893, "phrase": "computational_results"}, {"score": 0.002443784721651744, "phrase": "parallel_overhead"}, {"score": 0.002285075675790214, "phrase": "problem_class"}, {"score": 0.0022013916728990564, "phrase": "substantial_effect"}, {"score": 0.0021049977753042253, "phrase": "particular_methodology"}], "paper_keywords": ["branch and bound", " tree search", " parallel algorithm", " optimization", " integer programming", " branch and cut"], "paper_abstract": "In this paper, we discuss the challenges that arise in parallelizing algorithms for solving generic mixed integer linear programs and introduce a software framework that aims to address these challenges. Although the framework makes few algorithmic assumptions, it was designed specifically with support for implementation of relaxation-based branch-and-bound algorithms in mind. Achieving efficiency for such algorithms is particularly challenging and involves a careful analysis of the trade-offs inherent in the mechanisms for sharing the large amounts of information that can be generated. We present computational results that illustrate the degree to which various sources of parallel overhead affect scalability and discuss why properties of the problem class itself can have a substantial effect on the efficiency of a particular methodology.", "paper_title": "Computational Experience with a Software Framework for Parallel Integer Programming", "paper_id": "WOS:000268558800004"}