{"auto_keywords": [{"score": 0.026952117137428715, "phrase": "high_probability"}, {"score": 0.00481495049065317, "phrase": "parallel_unaware_cleaners"}, {"score": 0.004704495156558224, "phrase": "parallel_traversal"}, {"score": 0.004596561972944185, "phrase": "multiple_robots"}, {"score": 0.004092774981286263, "phrase": "last_node"}, {"score": 0.003610292749660581, "phrase": "visit_time"}, {"score": 0.0034947408949397127, "phrase": "first_visit_time"}, {"score": 0.0033051623473192814, "phrase": "randomized_algorithms"}, {"score": 0.0032745778756077693, "phrase": "uncoordinated_robots"}, {"score": 0.0031697368057340895, "phrase": "optimal_coordinated_traversal"}, {"score": 0.003125835572347772, "phrase": "small_factor"}, {"score": 0.002942495422585405, "phrase": "robots_ring"}, {"score": 0.0028882701690741467, "phrase": "simple_traversal_strategies"}, {"score": 0.0028615323526689582, "phrase": "constant_competitive_factors"}, {"score": 0.0028087949095629955, "phrase": "worst_case"}, {"score": 0.002744234034162797, "phrase": "torus_graphs"}, {"score": 0.0027188259793109264, "phrase": "n_nodes"}, {"score": 0.0025712297362596574, "phrase": "visit_problems"}, {"score": 0.002397923568994474, "phrase": "general_graphs"}, {"score": 0.0023210846870653757, "phrase": "first_visit_problem"}, {"score": 0.002267708463966758, "phrase": "visit_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Visit time", " Competitive analysis", " Mobile agent", " Robot", " Multi-robot graph exploration"], "paper_abstract": "We investigate the parallel traversal of a graph with multiple robots unaware of each other. All robots traverse the graph in parallel forever and the goal is to minimize the time needed until the last node is visited (first visit time) and the time between revisits of a node (revisit time). We also want to minimize the visit time, i.e. the maximum of the first visit time and the time between revisits of a node. We present randomized algorithms for uncoordinated robots, which can compete with the optimal coordinated traversal by a small factor, the so-called competitive ratio. For any number of robots ring and path graph simple traversal strategies allow constant competitive factors even in the worst case. For grid and torus graphs with n nodes and any number of robots there is an O(log n)-competitive algorithm for both visit problems succeeding with high probability, i.e. with probability 1 - n(-O(1)). For general graphs we present an O(log(2) n)-competitive algorithm for the first visit problem, while for the visit problem we show an O(log(3) n)-competitive algorithm both succeeding with high probability. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Strategies for parallel unaware cleaners", "paper_id": "WOS:000367488000006"}