{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "guaranteed_output_delivery"}, {"score": 0.03782808165713525, "phrase": "honest_majority"}, {"score": 0.015338056542917524, "phrase": "multiparty_computation"}, {"score": 0.011697762300944865, "phrase": "full_security"}, {"score": 0.010371151786981805, "phrase": "output_delivery"}, {"score": 0.0047851345246117455, "phrase": "secure_multiparty_computation"}, {"score": 0.004278807087784626, "phrase": "typical_security_properties"}, {"score": 0.003910016472705627, "phrase": "corrupted_subset"}, {"score": 0.003849711329589429, "phrase": "strict_minority"}, {"score": 0.003662892058072211, "phrase": "secure_protocols"}, {"score": 0.0030110748510795175, "phrase": "corrupted_parties"}, {"score": 0.0027512482368183596, "phrase": "general_protocols"}, {"score": 0.0026175952455594277, "phrase": "arbitrary_number"}, {"score": 0.002340081450249521, "phrase": "single_protocol"}, {"score": 0.0023039337947957077, "phrase": "corruption_case"}, {"score": 0.0022683432490549064, "phrase": "positive_and_negative_results"}, {"score": 0.0021049977753042253, "phrase": "dishonest_majority"}], "paper_keywords": [""], "paper_abstract": "In the setting of multiparty computation, a set of parties wish to jointly compute a function of their inputs, while preserving security in the case that some subset of them are corrupted. The typical security properties considered are privacy, correctness, independence of inputs, guaranteed output delivery and fairness. Until now, all works in this area either considered the case that the corrupted subset of parties constitutes a strict minority, or the case that a half or more of the parties are corrupted. Secure protocols for the case of an honest majority achieve full security and thus output delivery and fairness are guaranteed. However, the security of these protocols is completely compromised if there is no honest majority. In contrast, protocols for the case of no honest majority do not guarantee output delivery, but do provide privacy, correctness and independence of inputs for any number of corrupted parties. Unfortunately, an adversary controlling only a single party can disrupt the computation of these protocols and prevent output delivery. In this paper, we study the possibility of obtaining general protocols for multiparty computation that simultaneously guarantee security (allowing abort) in the case that an arbitrary number of parties are corrupted and full security (including guaranteed output delivery) in the case that only a minority of the parties are corrupted. That is, we wish to obtain the best of both worlds in a single protocol, depending on the corruption case. We obtain both positive and negative results on this question, depending on the type of the functionality to be computed (standard or reactive) and the type of dishonest majority (semi-honest or malicious).", "paper_title": "On combining privacy with guaranteed output delivery in secure multiparty computation", "paper_id": "WOS:000240079900029"}