{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "structured_communication-based_programming"}, {"score": 0.004457579615095599, "phrase": "rollback_fashion"}, {"score": 0.00433645229352341, "phrase": "previously_executed_interactions"}, {"score": 0.004195418010131832, "phrase": "different_computation_paths"}, {"score": 0.003948613642680196, "phrase": "whole_session"}, {"score": 0.0036958398682001015, "phrase": "theoretical_basis"}, {"score": 0.0035755653799043, "phrase": "concurrent_systems"}, {"score": 0.003536346954940087, "phrase": "reversible_computation"}, {"score": 0.0034975571855450373, "phrase": "session-based_interaction"}, {"score": 0.0033465923623290034, "phrase": "session-based_variant"}, {"score": 0.00327356326590461, "phrase": "memory_devices"}, {"score": 0.0031669873302916, "phrase": "computation_history"}, {"score": 0.002947790697936243, "phrase": "session_type_discipline"}, {"score": 0.002851790448644913, "phrase": "res_pi"}, {"score": 0.002758907973783665, "phrase": "static_verification"}, {"score": 0.0027286224888843956, "phrase": "safe_composition"}, {"score": 0.0026986685585382347, "phrase": "communication-centric_distributed_software"}, {"score": 0.0025537472239953807, "phrase": "fully_reversible_characterisation"}, {"score": 0.002470547930651519, "phrase": "committable_sessions"}, {"score": 0.0022368274529152342, "phrase": "specific_irreversible_action"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Reversible computing", " The pi-calculus", " Session types", " Session-based programming"], "paper_abstract": "In this work, we incorporate reversibility into structured communication-based programming, to allow parties of a session to automatically undo, in a rollback fashion, the effect of previously executed interactions. This permits to take different computation paths along the same session, as well as to revert the whole session and start a new one. Our aim is to define a theoretical basis for examining the interplay in concurrent systems between reversible computation and session-based interaction. We thus propose ReS pi a session-based variant of pi-calculus using memory devices to keep track of the computation history of sessions in order to reverse it. We show how a session type discipline of pi-calculus is extended to ReS pi, and illustrate its practical advantages for static verification of safe composition in communication-centric distributed software performing reversible computations. We also show how a fully reversible characterisation of the calculus extends to committable sessions, where computation can go forward and backward until the session is committed by means of a specific irreversible action. (C) 2015 The Authors. Published by Elsevier Inc.", "paper_title": "Reversible session-based pi-calculus", "paper_id": "WOS:000358974500007"}