{"auto_keywords": [{"score": 0.03449858308947838, "phrase": "perceived_benefits"}, {"score": 0.011211987679562501, "phrase": "subjective_norm"}, {"score": 0.010495526236698903, "phrase": "agile_use"}, {"score": 0.00888379127979641, "phrase": "perceived_hindrances"}, {"score": 0.008656707982822634, "phrase": "agile_methods"}, {"score": 0.00481495049065317, "phrase": "agile_software_development_use"}, {"score": 0.0045709675813472884, "phrase": "working_code"}, {"score": 0.004544629724830453, "phrase": "frequent_releases"}, {"score": 0.004518442937844318, "phrase": "extensive_client_interactions"}, {"score": 0.004492406361795448, "phrase": "iterative_development"}, {"score": 0.004402448972861048, "phrase": "traditional_plan-based_software_development_methods"}, {"score": 0.004326771493322954, "phrase": "case_studies"}, {"score": 0.003978866233891427, "phrase": "intention-based_theories"}, {"score": 0.003944506079554075, "phrase": "dialectic_perspective"}, {"score": 0.00385431710959668, "phrase": "agile_practices"}, {"score": 0.0037989951856280423, "phrase": "software_development_methodology"}, {"score": 0.0036694287631595995, "phrase": "anonymous_online_survey"}, {"score": 0.0036482665232275583, "phrase": "software_development_professionals"}, {"score": 0.003554531289427866, "phrase": "selected_list"}, {"score": 0.0035340293330075483, "phrase": "online_discussion_groups"}, {"score": 0.0033741997276290356, "phrase": "significant_role"}, {"score": 0.0033450437338616596, "phrase": "software_developers'_use"}, {"score": 0.0032496585171039797, "phrase": "perceived_limitations"}, {"score": 0.0032215751881194328, "phrase": "primary_drivers"}, {"score": 0.0031478633984287235, "phrase": "perceived_benefit"}, {"score": 0.0031116404200520614, "phrase": "significant_predictor"}, {"score": 0.0029281780903782284, "phrase": "software_development_innovations"}, {"score": 0.0026768834201668806, "phrase": "key_factors"}, {"score": 0.0022565201625076876, "phrase": "new_software_development_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Agile software development", " Innovation adoption", " Subjective norm", " Training", " Dialectic theory", " Perceived hindrance"], "paper_abstract": "Context: Agile software development with its emphasis on producing working code through frequent releases, extensive client interactions and iterative development has emerged as an alternative to traditional plan-based software development methods. While a number of case studies have provided insights into the use and consequences of agile, few empirical studies have examined the factors that drive the adoption and use of agile. Objective: We draw on intention-based theories and a dialectic perspective to identify factors driving the use of agile practices among adopters of this software development methodology. Method: Data for the study was gathered through an anonymous online survey of software development professionals. We requested participation from members of a selected list of online discussion groups, and received 98 responses. Results: Our analyses reveal that subjective norm and training play a significant role in influencing software developers' use of agile processes and methods, while perceived benefits and perceived limitations are not primary drivers of agile use among adopters. Interestingly, perceived benefit emerges as a significant predictor of agile use only if adopters face hindrances to their agile practices. Conclusion: We conclude that research in the adoption of software development innovations should examine the effects of both enabling and detracting factors and the interactions between them. Since training, subjective norm, and the interplay between perceived benefits and perceived hindrances appear to be key factors influencing the adoption of agile methods, researchers can focus on how to (a) perform training on agile methods more effectively, (b) facilitate the dialog between developers and managers about perceived benefits and hindrances, and (c) capitalize on subjective norm to publicize the benefits of agile methods within an organization. Further, when managing the transition to new software development methods, we recommend that practitioners adapt their strategies and tactics contingent on the extent of perceived hindrances to the change. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Drivers of agile software development use: Dialectic interplay between benefits and hindrances", "paper_id": "WOS:000298220400001"}