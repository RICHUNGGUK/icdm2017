{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high_utilization"}, {"score": 0.0338561029405087, "phrase": "functional_modules"}, {"score": 0.004772593750252861, "phrase": "heterogeneous_fpgas"}, {"score": 0.0047306078475683865, "phrase": "heterogeneous_resources"}, {"score": 0.0046683172874085015, "phrase": "configurable_logic_blocks"}, {"score": 0.004566308708871429, "phrase": "multiplier_blocks"}, {"score": 0.004407690586271672, "phrase": "logic_gates"}, {"score": 0.0042734067085669885, "phrase": "field_programmable_gate_arrays"}, {"score": 0.004161553532799662, "phrase": "fixed-outline_floorplanning"}, {"score": 0.0040886093072615, "phrase": "existing_methods"}, {"score": 0.004016938499717623, "phrase": "big_penalty_item"}, {"score": 0.003964007795174772, "phrase": "objective_function"}, {"score": 0.003826231150275071, "phrase": "specified_chip_region"}, {"score": 0.0036124465071873998, "phrase": "three-phase_floorplanning_method"}, {"score": 0.0034868462688262864, "phrase": "non-slicing_free-outline_floorplanning_method"}, {"score": 0.0032342101452939977, "phrase": "resource_requirements"}, {"score": 0.0031079352545607267, "phrase": "min-cost-max-flow_algorithm"}, {"score": 0.0029212075318449616, "phrase": "contiguous_regions"}, {"score": 0.0026384167183586015, "phrase": "network_flow_model"}, {"score": 0.0025806490053534316, "phrase": "maximum_quantity"}, {"score": 0.002404136142279618, "phrase": "fpga_densities"}, {"score": 0.0023724065150232897, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "clb_utilization"}], "paper_keywords": ["field programmable gate array", " floorplanning", " high utilization"], "paper_abstract": "Heterogeneous resources such as configurable logic blocks (CLBs), multiplier blocks (MULs) and RAM blocks (RAMs) where millions of logic gates are included have been added to field programmable gate arrays (FPGAs). The fixed-outline floorplanning used by the existing methods always has a big penalty item in the objective function to ensure all the modules are placed in the specified chip region, which maybe greatly degrade the wirelength. This paper presents a three-phase floorplanning method for heterogeneous FPGAs. First, a non-slicing free-outline floorplanning method is used to optimize the wirelength, however, in this phase, the satisfaction of resource requirements from functional modules might fail. Second, a min-cost-max-flow algorithm is used to tune the assignment of CLBs to functional modules, and assign contiguous regions to each module so that all the functional modules satisfy CLB requirements. Finally, the MULs and RAMs are allocated to modules by a network flow model. CLBs hold the maximum quantity among all the resources. Therefore, making a high utilization of them means an enhancement of the FPGA densities. The proposed method can improve the utilization of CLBs, hence, much larger circuits could be mapped to the same FPGA chip. The results show that about 7-85% wirelength reduction is obtained, and CLB utilization is improved by about 25%.", "paper_title": "Floorplanning for High Utilization of Heterogeneous FPGAs", "paper_id": "WOS:000309043100012"}