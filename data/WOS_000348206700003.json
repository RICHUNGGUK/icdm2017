{"auto_keywords": [{"score": 0.048152320835937894, "phrase": "redundant_computation"}, {"score": 0.007345593500526071, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "iterative_sparse_matrix-vector_multiply"}, {"score": 0.004668957916795845, "phrase": "trading_communication"}, {"score": 0.004527371799277529, "phrase": "silicon_efficiency"}, {"score": 0.004367581653370531, "phrase": "communication-bound_sparse_iterative_solvers"}, {"score": 0.00421340730888561, "phrase": "iterative_solver"}, {"score": 0.004023120753104693, "phrase": "communication_cost"}, {"score": 0.0038217146888983576, "phrase": "underlying_architecture"}, {"score": 0.0035565113234273926, "phrase": "systematic_procedure"}, {"score": 0.0034841647157189985, "phrase": "algorithmic_parameter_k"}, {"score": 0.003413284742632989, "phrase": "communication-computation_tradeoff"}, {"score": 0.003292704166911667, "phrase": "gpu."}, {"score": 0.0032423089921154503, "phrase": "predictive_models"}, {"score": 0.0030327408069772293, "phrase": "performance_improvement"}, {"score": 0.002971016979295967, "phrase": "significant_increase"}, {"score": 0.002940626369102927, "phrase": "memory_bandwidth"}, {"score": 0.0027789349951704177, "phrase": "standard_iterative_solvers"}, {"score": 0.0024186620196958867, "phrase": "architecture-aware_algorithm"}, {"score": 0.0023816257768353344, "phrase": "off-chip_communication"}, {"score": 0.002309242063033298, "phrase": "processing_cores"}, {"score": 0.0022275639370573264, "phrase": "large_k"}, {"score": 0.0021049977753042253, "phrase": "same-generation_gpu_devices"}], "paper_keywords": ["Iterative numerical methods", " spare matrix-vector multiply", " matrix powers kernel", " field programmable gate arrays (FPGAs)", " graphics processing units (GPUs)"], "paper_abstract": "Trading communication with redundant computation can increase the silicon efficiency of FPGAs and GPUs in accelerating communication-bound sparse iterative solvers. While k iterations of the iterative solver can be unrolled to provide O(k) reduction in communication cost, the extent of this unrolling depends on the underlying architecture, its memory model, and the growth in redundant computation. This paper presents a systematic procedure to select this algorithmic parameter k, which provides communication-computation tradeoff on hardware accelerators like FPGA and GPU. We provide predictive models to understand this tradeoff and show how careful selection of k can lead to performance improvement that otherwise demands significant increase in memory bandwidth. On an Nvidia C2050 GPU, we demonstrate a 1.9x-42.6x speedup over standard iterative solvers for a range of benchmarks and that this speedup is limited by the growth in redundant computation. In contrast, for FPGAs, we present an architecture-aware algorithm that limits off-chip communication but allows communication between the processing cores. This reduces redundant computation and allows large k and hence higher speedups. Our approach for FPGA provides a 0.3x-4.4x speedup over same-generation GPU devices where k is picked carefully for both architectures for a range of benchmarks.", "paper_title": "Communication Optimization of Iterative Sparse Matrix-Vector Multiply on GPUs and FPGAs", "paper_id": "WOS:000348206700003"}