{"auto_keywords": [{"score": 0.04862271607252209, "phrase": "maximal_motifs"}, {"score": 0.013804161200635153, "phrase": "wild_cards"}, {"score": 0.007854095525718238, "phrase": "input_string"}, {"score": 0.00770439095009124, "phrase": "repeated_motifs"}, {"score": 0.00481495049065317, "phrase": "efficient_polynomial_space"}, {"score": 0.004173865018011237, "phrase": "maximal_motif"}, {"score": 0.004015693806064219, "phrase": "larger_motifs"}, {"score": 0.0039085400187964196, "phrase": "enumeration_problem"}, {"score": 0.0037749456215035856, "phrase": "parida_et_al"}, {"score": 0.003374655868348244, "phrase": "main_result"}, {"score": 0.0032972747743006603, "phrase": "polynomial_space_polynomial_delay_algorithm"}, {"score": 0.0032592499906265882, "phrase": "maximal_motif_enumeration_problem"}, {"score": 0.0027599042621376624, "phrase": "depth-first_search"}, {"score": 0.002728059572916527, "phrase": "tree-shaped_search_route"}, {"score": 0.002345944657572499, "phrase": "straightforward_approach"}, {"score": 0.002292097733181405, "phrase": "computational_experiments"}, {"score": 0.0022222152430170254, "phrase": "huge_string_data"}, {"score": 0.0021965609224818853, "phrase": "genome_data"}, {"score": 0.002129584983647679, "phrase": "large_additional_computational_cost"}, {"score": 0.0021049977753042253, "phrase": "usual_frequent_motif_mining_algorithms"}], "paper_keywords": ["motif", " maximal motif", " data mining", " sequence mining", " algorithm", " delay", " enumeration", " polynomial time", " closed itemset", " closed pattern", " pattern discovery"], "paper_abstract": "In this paper, we consider the problem of enumerating all maximal motifs in an input string for the class of repeated motifs with wild cards. A maximal motif is such a representative motif that is not properly contained in any larger motifs with the same location lists. Although the enumeration problem for maximal motifs with wild cards has been studied in Parida et al. (2001), Pisanti et al. (2003) and Pelfrene et al. (2003), its output-polynomial time computability has been still open. The main result of this paper is a polynomial space polynomial delay algorithm for the maximal motif enumeration problem for the repeated motifs with wild cards. This algorithm enumerates all maximal motifs in an input string of length n in O(n(3)) time per motif with O(n) space, in particular O(n(3)) delay. The key of the algorithm is depth-first search on a tree-shaped search route over all maximal motifs based on a technique called prefix-preserving closure extension. We also show an exponential lower bound and a succinctness result on the number of maximal motifs, which indicate the limit of a straightforward approach. The results of the computational experiments show that our algorithm can be applicable to huge string data such as genome data in practice, and does not take large additional computational cost compared to usual frequent motif mining algorithms.", "paper_title": "An efficient polynomial space and polynomial delay algorithm for enumeration of maximal motifs in a sequence", "paper_id": "WOS:000244645900005"}