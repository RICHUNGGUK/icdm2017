{"auto_keywords": [{"score": 0.04314658848168205, "phrase": "allowed_links"}, {"score": 0.03892276291099736, "phrase": "nash_equilibrium"}, {"score": 0.03526300604455722, "phrase": "identical_links"}, {"score": 0.00481495049065317, "phrase": "nash_equilibria"}, {"score": 0.004722254884093624, "phrase": "restricted_parallel_links"}, {"score": 0.004542158659382197, "phrase": "n_users"}, {"score": 0.00386876598761639, "phrase": "correspondingly_restricted_scheduling_problem"}, {"score": 0.003107935254560724, "phrase": "non-increased_makespan"}, {"score": 0.0029458777184930896, "phrase": "un-splittable_user_traffics"}, {"score": 0.0024963543716522087, "phrase": "generic_preflowpush_algorithm"}, {"score": 0.0024481856932959227, "phrase": "polynomial_time"}, {"score": 0.002400944221804575, "phrase": "optimum_makespan"}, {"score": 0.002331781764406665, "phrase": "improved_approximation_factor"}, {"score": 0.002199363362666037, "phrase": "largest_user_traffic"}, {"score": 0.0021464286727045623, "phrase": "approximation_factor"}, {"score": 0.0021049977753042253, "phrase": "related_links"}], "paper_keywords": ["Algorithmic game theory", " Computation of Nash equilibria", " Scheduling restricted machines", " Unsplittable flow"], "paper_abstract": "We consider the problem of routing n users on m parallel links under the restriction that each user may only be routed on a link from a certain set of allowed links for the user. So, this problem is equivalent to the correspondingly restricted scheduling problem of assigning n jobs to m parallel machines. In a Nash equilibrium, no user may improve its own Individual Cost (latency) by unilaterally switching to another link from its set of allowed links. For identical links, we present, as our main result, a polynomial time algorithm to compute from any given assignment a Nash equilibrium with non-increased makespan. The algorithm gradually transforms the assignment by pushing the un-splittable user traffics through a flow network, which is constructed from the users and the links. The algorithm uses ideas from blocking flows. Furthermore, we use techniques simular to those in the generic PREFLOWPUSH algorithm to approximate in polynomial time a schedule with optimum makespan. This results to an improved approximation factor of 2 - 1/omega(1) for identical links, where omega(1) is the largest user traffic, and to an approximation factor of 2 for related links.", "paper_title": "Computing Nash Equilibria for Scheduling on Restricted Parallel Links", "paper_id": "WOS:000278029300005"}