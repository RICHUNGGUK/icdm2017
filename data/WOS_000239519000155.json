{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "-visual_access"}, {"score": 0.004364696693320128, "phrase": "blind_users"}, {"score": 0.004224130367280183, "phrase": "graphical_user_interfaces"}, {"score": 0.0036753171449945654, "phrase": "graphical_environments"}, {"score": 0.0035861227263414537, "phrase": "x_windows"}, {"score": 0.0034990853199511982, "phrase": "high_degree"}, {"score": 0.0031975786158658158, "phrase": "accessibility_problem"}, {"score": 0.0030944828434567966, "phrase": "existing_technology"}, {"score": 0.002921975748248106, "phrase": "graphical_toolkit_hooks"}, {"score": 0.0026920404458807444, "phrase": "model-driven_user_interface_development"}, {"score": 0.002322689143237591, "phrase": "current_research"}, {"score": 0.002157433262687853, "phrase": "abstract_user_interfaces"}, {"score": 0.0021049977753042253, "phrase": "non-visual_access"}], "paper_keywords": [""], "paper_abstract": "Various approaches to providing blind users with access to graphical user interfaces have been researched extensively in the past 15 years, and yet accessibility is still facing many obstacles. Graphical environments such as X Windows offer a high degree of freedom to both the developer and the user, complicating the accessibility problem even more. Existing technology is largely based on either a combination of graphical toolkit hooks, queries to the application and scripting, or model-driven user interface development. Both approaches have limitations that the proposed research addresses. This paper builds upon past and current research into accessibility, and promotes the use of abstract user interfaces to providing non-visual access to GUIs.", "paper_title": "Non-visual access to GUIs: Leveraging abstract user interfaces", "paper_id": "WOS:000239519000155"}