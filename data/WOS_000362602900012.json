{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "energy_grid_search_algorithm"}, {"score": 0.004775726266706856, "phrase": "continuous-energy_monte_carlo_particle_transport_codes"}, {"score": 0.004491506786670695, "phrase": "typical_energy_grid-cross_section_pair"}, {"score": 0.004418601451254075, "phrase": "monte_carlo_particle_transport_codes"}, {"score": 0.004364696693320128, "phrase": "key_feature"}, {"score": 0.003892126266260425, "phrase": "particle's_current_energy"}, {"score": 0.003736004578001584, "phrase": "energy_vector_length"}, {"score": 0.0036602993802452863, "phrase": "cpu_time"}, {"score": 0.0036156119373414067, "phrase": "computational_methods"}, {"score": 0.00335867620389808, "phrase": "physical_information"}, {"score": 0.002994701080666466, "phrase": "scattering_kinematics"}, {"score": 0.002970260970134645, "phrase": "neutron_cross_section_structure"}, {"score": 0.002898127432512101, "phrase": "also_the_expected_characteristics"}, {"score": 0.0028627183712016894, "phrase": "system's_spatial_flux_distribution"}, {"score": 0.0027030963394733916, "phrase": "openmc_monte_carlo_neutron_transport_code"}, {"score": 0.0025945450101602825, "phrase": "computational_efficiency"}, {"score": 0.002541910967437926, "phrase": "overall_code_speedup"}, {"score": 0.00241989408309933, "phrase": "serial_and_multithreaded_simulations"}, {"score": 0.002303720729387236, "phrase": "optimization_method"}, {"score": 0.002275557501858879, "phrase": "overall_code_speedup_factors"}, {"score": 0.00219311232069446, "phrase": "typical_single-nuclide_binary_search_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Monte Carlo", " Particle transport", " Search algorithm", " Optimization", " Multithreading"], "paper_abstract": "In this work we propose, implement, and test various optimizations of the typical energy grid-cross section pair lookup algorithm in Monte Carlo particle transport codes. The key feature common to all of the optimizations is a reduction in the length of the vector of energies that must be searched when locating the index of a particle's current energy. Other factors held constant, a reduction in energy vector length yields a reduction in CPU time. The computational methods we present here are physics-informed. That is, they are designed to utilize the physical information embedded in a simulation in order to reduce the length of the vector to be searched. More specifically, the optimizations take advantage of information about scattering kinematics, neutron cross section structure and data representation, and also the expected characteristics of a system's spatial flux distribution and energy spectrum. The methods that we present are implemented in the OpenMC Monte Carlo neutron transport code as part of this work. The gains in computational efficiency, as measured by overall code speedup, associated with each of the optimizations are demonstrated in both serial and multithreaded simulations of realistic systems. Depending on the system, simulation parameters, and optimization method employed, overall code speedup factors of 1.2-1.5, relative to the typical single-nuclide binary search algorithm, are routinely observed. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Optimizations of the energy grid search algorithm in continuous-energy Monte Carlo particle transport codes", "paper_id": "WOS:000362602900012"}