{"auto_keywords": [{"score": 0.04532876182016224, "phrase": "web_documents"}, {"score": 0.004814955496608903, "phrase": "trinity"}, {"score": 0.004683073921949839, "phrase": "trinary_trees"}, {"score": 0.0046184900568047565, "phrase": "unsupervised_web_data_extraction"}, {"score": 0.0045547927862194856, "phrase": "web_data_extractors"}, {"score": 0.004190563478825626, "phrase": "automated_processes"}, {"score": 0.003621588555525458, "phrase": "regular_expression"}, {"score": 0.003308649946463136, "phrase": "similar_documents"}, {"score": 0.0030226700832113942, "phrase": "shared_patterns"}, {"score": 0.002899125545529459, "phrase": "relevant_data"}, {"score": 0.0025225467103906314, "phrase": "large_collection"}, {"score": 0.002272501735900584, "phrase": "input_errors"}, {"score": 0.0021947755130109696, "phrase": "negative_impact"}], "paper_keywords": ["Web data extraction", " automatic wrapper generation", " wrappers", " unsupervised learning"], "paper_abstract": "Web data extractors are used to extract data from web documents in order to feed automated processes. In this article, we propose a technique that works on two or more web documents generated by the same server-side template and learns a regular expression that models it and can later be used to extract data from similar documents. The technique builds on the hypothesis that the template introduces some shared patterns that do not provide any relevant data and can thus be ignored. We have evaluated and compared our technique to others in the literature on a large collection of web documents; our results demonstrate that our proposal performs better than the others and that input errors do not have a negative impact on its effectiveness; furthermore, its efficiency can be easily boosted by means of a couple of parameters, without sacrificing its effectiveness.", "paper_title": "Trinity: On Using Trinary Trees for Unsupervised Web Data Extraction", "paper_id": "WOS:000340205000018"}