{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "b-chromatic_number"}, {"score": 0.044070860189032314, "phrase": "color_class"}, {"score": 0.031235092053115466, "phrase": "regular_graphs"}, {"score": 0.00454725669814484, "phrase": "maximum_integer"}, {"score": 0.004294381488413906, "phrase": "additional_property"}, {"score": 0.003204841443605308, "phrase": "hybrid_evolutionary_algorithm"}, {"score": 0.0031643005824589917, "phrase": "graph_b-coloring"}, {"score": 0.0028761045789798103, "phrase": "-chromatic_number"}, {"score": 0.0026307897899760383, "phrase": "brute_force_algorithm"}, {"score": 0.0023458049872325214, "phrase": "larger_graphs"}, {"score": 0.002286781334850213, "phrase": "dimacs_challenge_benchmark"}], "paper_keywords": ["Graph b-coloring", " Local search", " Hybrid evolutionary algorithms", " Tabucol"], "paper_abstract": "The b-chromatic number of a graph is a maximum integer for which there exists a proper phi(G)-coloring with the additional property that each color class contains a vertex that is adjacent to one of the vertices within each color class. In contrast to many theoretical results discovered over the last decade and a half there are no computer running experiments on phi(G) in the literature. This work presents a hybrid evolutionary algorithm for graph b-coloring. Its performance has been tested on some instances of regular graphs where their b-chromatic number is theoretically known in advance, as well as by comparing with a brute force algorithm solving the regular graphs up to 12 vertices. In addition, the algorithm has been tested on some larger graphs taken from a DIMACS challenge benchmark that also proved to be challenging for the algorithms searching for the classical chromatic number chi(G).", "paper_title": "Hybrid evolutionary algorithm for the b-chromatic number", "paper_id": "WOS:000358197300003"}