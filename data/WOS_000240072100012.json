{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linear_lambda-calculus"}, {"score": 0.013569986132167268, "phrase": "type_system"}, {"score": 0.0046394362688524475, "phrase": "syntactic_descriptions"}, {"score": 0.003446353878654566, "phrase": "formal_tool"}, {"score": 0.0031113369425402287, "phrase": "matching_equations"}, {"score": 0.0029699874949715367, "phrase": "type_inference"}, {"score": 0.0029152570900178956, "phrase": "proof_search"}, {"score": 0.0027570267191549774, "phrase": "linear_matching_equations"}, {"score": 0.002607362103727335, "phrase": "second_order_equations"}, {"score": 0.002420339995088838, "phrase": "linear_matching"}, {"score": 0.0023103100997344072, "phrase": "linear_context_matching"}, {"score": 0.0022258906408344973, "phrase": "tabular_techniques"}, {"score": 0.0021445492649196955, "phrase": "practical_alternative"}, {"score": 0.0021049977753042253, "phrase": "huet's_algorithm"}], "paper_keywords": [""], "paper_abstract": "We introduce syntactic descriptions, an extended type system for the linear lambda-calculus. With this type system checking that a linear lambda-term normalizes to another one reduces to type-checking. As a consequence this type system can be seen as a formal tool to design matching algorithms. In that respect, solving matching equations becomes a combination of type inference and proof search. We present such an algorithm for linear matching equations. In the case of second order equations, this algorithm stresses the similarities between linear matching in the linear lambda-calculus and linear context matching. It uses tabular techniques and is a practical alternative to Huet's algorithm for those equations.", "paper_title": "Syntactic descriptions: A type system for solving matching equations in the linear lambda-calculus", "paper_id": "WOS:000240072100012"}