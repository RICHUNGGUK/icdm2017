{"auto_keywords": [{"score": 0.042070971187967814, "phrase": "hdfs"}, {"score": 0.010748565849598152, "phrase": "morpho"}, {"score": 0.009835880384083794, "phrase": "map_tasks"}, {"score": 0.00964372907472125, "phrase": "physical_machines"}, {"score": 0.004815007697876007, "phrase": "mapreduce"}, {"score": 0.004767451673469903, "phrase": "elastic_cloud_computing"}, {"score": 0.004658426838467567, "phrase": "wide_adoption"}, {"score": 0.00462773520532301, "phrase": "commercial_clouds"}, {"score": 0.004374852170791322, "phrase": "map_reduce_services"}, {"score": 0.00428892403807229, "phrase": "virtualized_environments"}, {"score": 0.004204676524824095, "phrase": "cloud_environments"}, {"score": 0.004163172790791119, "phrase": "basic_executing_units"}, {"score": 0.0041357305373417455, "phrase": "data_processing"}, {"score": 0.0041084684278314305, "phrase": "virtual_machines"}, {"score": 0.004067910470129423, "phrase": "user's_virtual_cluster"}, {"score": 0.003845500924733243, "phrase": "user's_input_and_output_data"}, {"score": 0.0037450707321601963, "phrase": "external_persistent_data_storage"}, {"score": 0.0036836332308340923, "phrase": "native_hadoop"}, {"score": 0.003623199939953831, "phrase": "costly_data_movements"}, {"score": 0.0035755653799043, "phrase": "significant_performance_degradation"}, {"score": 0.0035519826240477444, "phrase": "mapreduce_jobs"}, {"score": 0.0034706569037527774, "phrase": "morpho-a_modified_version"}, {"score": 0.0034363735647539267, "phrase": "hadoop_mapreduce_framework"}, {"score": 0.0033465923623290034, "phrase": "physical_clusters"}, {"score": 0.0033245147666408157, "phrase": "virtual_clusters"}, {"score": 0.003195084392045544, "phrase": "vms"}, {"score": 0.0031739835218110015, "phrase": "corresponding_ad-hoc_hdfs_deployments"}, {"score": 0.0030808211830129304, "phrase": "underlying_physical_machines"}, {"score": 0.003050376875258722, "phrase": "mapreduce_computation"}, {"score": 0.002912222095383313, "phrase": "extra_data_transfers"}, {"score": 0.0028739078688746374, "phrase": "data_location_perception_module"}, {"score": 0.002663156413861478, "phrase": "network_topology"}, {"score": 0.0026194209399161184, "phrase": "vm_placements"}, {"score": 0.002559392185079503, "phrase": "high_performance"}, {"score": 0.0025257081555100556, "phrase": "data_placement"}, {"score": 0.0025090323307618632, "phrase": "vm_placement"}, {"score": 0.0024678216843278806, "phrase": "better_map"}, {"score": 0.0024434201175883674, "phrase": "input_locality"}, {"score": 0.0023795195973873636, "phrase": "resource_contentions"}, {"score": 0.0022641658133181115, "phrase": "job_execution_time"}, {"score": 0.002241773449372999, "phrase": "significant_reduction"}, {"score": 0.002226968099778524, "phrase": "network_traffic"}, {"score": 0.0022049428043454966, "phrase": "entire_system"}, {"score": 0.002175913488493802, "phrase": "traditional_cloud_computing_scheme"}, {"score": 0.0021615547092880714, "phrase": "amazon"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cloud computing", " MapReduce", " Data placement", " Virtual machine scheduling"], "paper_abstract": "MapReduce as a service enjoys wide adoption in commercial clouds today [3,23]. But most cloud providers just deploy native Hadoop [24] systems on their cloud platforms to provide Map Reduce services without any adaptation to these virtualized environments [6,25]. In cloud environments, the basic executing units of data processing are virtual machines. Each user's virtual cluster needs to deploy HDFS [26] every time when it is initialized, while the user's input and output data should be transferred between the HDFS and external persistent data storage to ensure that the native Hadoop works properly. These costly data movements can lead to significant performance degradation of MapReduce jobs in the cloud. We present Morpho-a modified version of the Hadoop MapReduce framework, which decouples storage and computation into physical clusters and virtual clusters respectively. In Morpho, the map/reduce tasks are still running in VMs without corresponding ad-hoc HDFS deployments; instead, HDFS is deployed on the underlying physical machines. When MapReduce computation is performing, the map tasks can get data directly from physical machines without any extra data transfers. We design data location perception module to improve the cooperativity of the computation and storage layers, which means that the map tasks can intelligently fetch information about the network topology of physical machines and the VM placements. Additionally, Morpho also achieves high performance by two complementary strategies for data placement and VM placement, which can provide better map and reduce input locality. Furthermore, our data placement strategy can mitigate the resource contentions between jobs. The evaluation of our Morpho system prototype shows it achieves a nearly 62% speedup of job execution time and a significant reduction in network traffic of the entire system compared with the traditional cloud computing scheme of Amazon and other cloud providers. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Morpho: A decoupled MapReduce framework for elastic cloud computing", "paper_id": "WOS:000336770700008"}