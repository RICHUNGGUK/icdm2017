{"auto_keywords": [{"score": 0.03939520645819033, "phrase": "caa"}, {"score": 0.00481495049065317, "phrase": "context-aware_modelling"}, {"score": 0.004748556604045108, "phrase": "context-aware_computing"}, {"score": 0.004523272849033429, "phrase": "numerous_mobile_devices"}, {"score": 0.004338661611644755, "phrase": "computing_paradigm"}, {"score": 0.004278807087784626, "phrase": "software_applications"}, {"score": 0.004104132253183181, "phrase": "different_\"contexts"}, {"score": 0.0040194764936614565, "phrase": "different_software_configurations"}, {"score": 0.003802135020791801, "phrase": "context-aware_application"}, {"score": 0.0036468482216440233, "phrase": "possible_contexts"}, {"score": 0.0033549790559972053, "phrase": "tool_support"}, {"score": 0.0030650070965891653, "phrase": "caa_model"}, {"score": 0.002980916123365584, "phrase": "context_adaptations"}, {"score": 0.002879029968532794, "phrase": "model_transformations"}, {"score": 0.002704306866425829, "phrase": "graph_transformations"}, {"score": 0.0026118503041971976, "phrase": "graph_transformation_techniques"}, {"score": 0.0025578967205807843, "phrase": "critical_pair_analysis"}, {"score": 0.002436289099444074, "phrase": "resulting_application_model"}, {"score": 0.0022101055924375725, "phrase": "mobile_city_guide"}, {"score": 0.0021049977753042253, "phrase": "subtle_context_interactions"}], "paper_keywords": ["Context-aware model", " Model transformation", " Critical pair analysis", " Context adaptation", " Context coverage"], "paper_abstract": "Context-aware computing is a paradigm for governing the numerous mobile devices surrounding us. In this computing paradigm, software applications continuously and dynamically adapt to different \"contexts\" implying different software configurations of such devices. Unfortunately, modelling a context-aware application (CAA) for all possible contexts is only feasible in the simplest of cases. Hence, tool support verifying certain properties is required. In this article, we introduce the CAA model, in which context adaptations are specified explicitly as model transformations. By mapping this model to graphs and graph transformations, we can exploit graph transformation techniques such as critical pair analysis to find contexts for which the resulting application model is ambiguous. We validate our approach by means of an example of a mobile city guide, demonstrating that we can identify subtle context interactions that might go unnoticed otherwise.", "paper_title": "A transformation-based approach to context-aware modelling", "paper_id": "WOS:000331000000011"}