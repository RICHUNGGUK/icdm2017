{"auto_keywords": [{"score": 0.04481780851221896, "phrase": "mm"}, {"score": 0.00481495049065317, "phrase": "montgomery_multiplication"}, {"score": 0.004745665541429529, "phrase": "multicore_platform"}, {"score": 0.004677372885331908, "phrase": "optimized_algorithm"}, {"score": 0.004350308086118336, "phrase": "modular_multiplication"}, {"score": 0.004165105357908494, "phrase": "key_operation"}, {"score": 0.0041051328120736575, "phrase": "cryptographic_algorithms"}, {"score": 0.0039878219401082975, "phrase": "rsa"}, {"score": 0.00393032656248792, "phrase": "elliptic-curve_cryptography"}, {"score": 0.0038737588276733384, "phrase": "multicore"}, {"score": 0.00376293585033711, "phrase": "suitable_platform"}, {"score": 0.0035507457285983268, "phrase": "high_performance"}, {"score": 0.0032546105164772995, "phrase": "block-level_parallel_algorithm"}, {"score": 0.00320770578058916, "phrase": "mmwith"}, {"score": 0.0030048355421601705, "phrase": "network-on-chip-based_multicore_platform"}, {"score": 0.0028352726653271187, "phrase": "highest_performance"}, {"score": 0.0027741761880779535, "phrase": "theoretical_speedup_model"}, {"score": 0.0027341763737751467, "phrase": "parallel_mm"}, {"score": 0.0026366753045215558, "phrase": "parameter_exploration"}, {"score": 0.0025242409510332527, "phrase": "experimental_results"}, {"score": 0.0024519545383399773, "phrase": "multicore_prototype_show"}, {"score": 0.0023644936731468252, "phrase": "sequential_mm"}, {"score": 0.0023303871145705954, "phrase": "single_core"}, {"score": 0.0022801453935251503, "phrase": "parallel_implementation"}, {"score": 0.0021670777282518424, "phrase": "speedup_ratio"}], "paper_keywords": ["Broadcast", " cryptography", " Montgomery multiplication", " multicast", " multicore systems", " network-on", " chip (NoC)", " parallel computing"], "paper_abstract": "The modular multiplication (MM) is a key operation in cryptographic algorithms, such as RSA and elliptic-curve cryptography. Multicore processor is a suitable platform to implement MM because of its flexibility, high performance, and energy-efficiency. In this paper, we propose a block-level parallel algorithm for MMwith quotient pipelining and optimally map it on a network-on-chip-based multicore platform equipped with broadcasting mechanism. Aiming at highest performance, a theoretical speedup model for parallel MM is also developed for parameter exploration that optimizes task partitioning. Experimental results based on a multicore prototype show that compared with the sequential MM on single core, the parallel implementation proposed in this paper maximizes the speedup ratio with regard to given intercore communication latency.", "paper_title": "An Efficient Implementation of Montgomery Multiplication on Multicore Platform With Optimized Algorithm, Task Partitioning, and Network Architecture", "paper_id": "WOS:000344483200001"}