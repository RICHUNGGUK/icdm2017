{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gate-level_area"}, {"score": 0.004776297980616768, "phrase": "digit-serial_multiple_constant_multiplications"}, {"score": 0.004624751696958501, "phrase": "tremendous_effort"}, {"score": 0.0045324756541157574, "phrase": "high-level_synthesis_algorithms"}, {"score": 0.003734810936407523, "phrase": "bit-parallel_processing"}, {"score": 0.0036898803847106023, "phrase": "input_data"}, {"score": 0.003601628511550959, "phrase": "digit-serial_architectures"}, {"score": 0.0035726811019151984, "phrase": "alternative_low-complexity_designs"}, {"score": 0.0035439655241057207, "phrase": "digit-serial_operators"}, {"score": 0.003417565253539315, "phrase": "data_wordlength"}, {"score": 0.003003452468800793, "phrase": "shift_operation"}, {"score": 0.0029792984108210525, "phrase": "different_implementation_cost"}, {"score": 0.002872979681637667, "phrase": "high-level_algorithms"}, {"score": 0.0028042108531816943, "phrase": "digit-serial_constant_multiplications"}, {"score": 0.0027704444816096505, "phrase": "shift-adds_architecture"}, {"score": 0.0027041233221381756, "phrase": "implementation_cost"}, {"score": 0.002628747284714371, "phrase": "experimental_results"}, {"score": 0.002545165985686468, "phrase": "prominent_algorithms"}, {"score": 0.0022365262201954643, "phrase": "architecture_yields"}, {"score": 0.002227508035618043, "phrase": "significant_area_reductions"}, {"score": 0.002182958452794581, "phrase": "constant_multiplications"}, {"score": 0.0021566565951738658, "phrase": "generic_digit-serial_constant_multipliers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiple constant multiplications", " Digit-serial architectures", " Gate-level area optimization", " 0-1 Integer linear programming", " Graph-based algorithms"], "paper_abstract": "The last two decades have seen tremendous effort on the development of high-level synthesis algorithms for efficient realization of the multiplication of a variable by a set of constants using only addition, subtraction, and shift operations. These algorithms generally target the minimization of the number of adders and subtractors, assuming that shifts are realized using only wires due to the bit-parallel processing of the input data. On the other hand, digit-serial architectures offer alternative low-complexity designs since digit-serial operators occupy less area and are independent of the data wordlength. However, in this case, shifts are no longer free in terms of hardware and require D flip-flops. Moreover, each digit-serial addition, subtraction, and shift operation has different implementation cost at gate-level. Hence, this article introduces high-level algorithms that optimize the area of digit-serial constant multiplications under the shift-adds architecture by taking into account the implementation cost of each operation at gate-level. Experimental results indicate that our high-level algorithms obtain better solutions than prominent algorithms designed for the minimization of the number of operations in terms of gate-level area and their solutions lead to less complex digit-serial MCM designs. It is also shown that the use of shift-adds architecture yields significant area reductions when compared to the constant multiplications designed using generic digit-serial constant multipliers. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "High-level algorithms for the optimization of gate-level area in digit-serial multiple constant multiplications", "paper_id": "WOS:000304792100008"}