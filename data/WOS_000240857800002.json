{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "snesim_program"}, {"score": 0.03246370464213872, "phrase": "search_tree"}, {"score": 0.004781498797706604, "phrase": "multiple-point_statistical_simulation"}, {"score": 0.00464998919563789, "phrase": "geostatistical_modeling"}, {"score": 0.004306610946695577, "phrase": "geological_shapes"}, {"score": 0.004173524877260371, "phrase": "multiple-point_simulation"}, {"score": 0.004030449969901066, "phrase": "advanced_pixel-based_technique"}, {"score": 0.003933214459874487, "phrase": "pixel-based_techniques"}, {"score": 0.0036425727071563965, "phrase": "curvilinear_geological_shapes"}, {"score": 0.0036046342610557497, "phrase": "multiple-point_statistics"}, {"score": 0.0035670895401691536, "phrase": "training_image"}, {"score": 0.0035299344877334385, "phrase": "snesim_code"}, {"score": 0.0033851312604425516, "phrase": "prior_geological_knowledge"}, {"score": 0.0032919001003538758, "phrase": "conditioning_probability_values"}, {"score": 0.0032576020692463873, "phrase": "central_node"}, {"score": 0.003212424802083714, "phrase": "facies_category"}, {"score": 0.0031789521764305287, "phrase": "multiple-point_conditioning_data_event"}, {"score": 0.002974886152979993, "phrase": "sequential_simulation_mode"}, {"score": 0.00293361812353423, "phrase": "uninformed_node"}, {"score": 0.002412371116984224, "phrase": "important_aspects"}, {"score": 0.002362320344521919, "phrase": "practical_guidelines"}, {"score": 0.0023133055945761235, "phrase": "sensivity_analyses"}, {"score": 0.00227323596233465, "phrase": "important_input_parameters"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["servosystem", " conditioning data", " multiple grids", " search neighborhood", " training images", " affinity", " rotation angles"], "paper_abstract": "Traditionally, there are two mainstream avenues for geostatistical modeling: pixel-based two-point simulation and object-based simulation. Each is good at either data conditioning or reproducing geological shapes, but none is good at both. Multiple-point simulation combines the strengths of these two avenues. As an advanced pixel-based technique, it inherits the flexibility of pixel-based techniques by building the model one pixel at a time, hence data conditioning is easily achieved; it is also capable of reproducing curvilinear geological shapes through borrowing multiple-point statistics from a training image. The snesim code provides such a multiple-point simulation program. A training image is used to represent the prior geological knowledge, which is scanned to obtain the conditioning probability values for the central node belonging to a facies category given any multiple-point conditioning data event. These training probability values are stored in a search tree a prior to simulation. Then in a sequential simulation mode, at each uninformed node, according to its specific conditioning data event a probability value is retrieved from the search tree, and a value is simulated from it. There are many input parameters to the snesim program, the impact of which might not be immediately clear to people who are not familiar with the code. In this paper, we aim at bringing important aspects of this program and providing practical guidelines to using the program. Sensivity analyses are performed on the important input parameters. The results are analyzed and recommendations are provided on how to set these parameters appropriately. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "Using the Snesim program for multiple-point statistical simulation", "paper_id": "WOS:000240857800002"}