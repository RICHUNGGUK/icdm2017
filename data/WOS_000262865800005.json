{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "multicycle"}, {"score": 0.00481495049065317, "phrase": "resource-constrained_scheduling_problem"}, {"score": 0.004755054742217193, "phrase": "high-level_synthesis"}, {"score": 0.004438642216475526, "phrase": "high-level_synthesis_process"}, {"score": 0.004117329555194574, "phrase": "optimal_schedules"}, {"score": 0.00389164348807591, "phrase": "computational_effort"}, {"score": 0.003771631577951067, "phrase": "best_schedules"}, {"score": 0.003701401653850141, "phrase": "pre-defined_datapath"}, {"score": 0.003587235362628753, "phrase": "non-promising_search_space"}, {"score": 0.0033905067962602515, "phrase": "admissible_heuristic"}, {"score": 0.003306559295382181, "phrase": "schedule_length"}, {"score": 0.0031448288291084, "phrase": "search_node"}, {"score": 0.003066945490483524, "phrase": "partially_scheduled_data_flow_graph"}, {"score": 0.002935248513348432, "phrase": "least_cost"}, {"score": 0.002688532127821979, "phrase": "exhaustive_search"}, {"score": 0.0026384167183586015, "phrase": "problem_space"}, {"score": 0.002525074485615743, "phrase": "candidate_search_nodes"}, {"score": 0.002371531125700046, "phrase": "depth-first_search"}, {"score": 0.0022696277881969896, "phrase": "experimental_results"}, {"score": 0.0022133711375320244, "phrase": "varying_resource_constraints"}, {"score": 0.0021315842986705485, "phrase": "proposed_algorithm"}], "paper_keywords": [""], "paper_abstract": "Scheduling is considered the most important task in a high-level synthesis process. A heuristic algorithm based on the A* search to find optimal schedules quickly is presented. This algorithm reduces the computational effort required to obtain the best schedules on a pre-defined datapath by effectively pruning the non-promising search space. The pruning method is accomplished by an admissible heuristic that estimates the schedule length, or the cost, of a search node represented by a partially scheduled data flow graph. The search node with the least cost is considered the most promising candidate and is expanded next, avoiding an exhaustive search of the problem space. When the costs of the candidate search nodes are identical, the A* search is guided by a depth-first search to speed up the computation. Experimental results on several well known benchmarks with varying resource constraints show the effectiveness of the proposed algorithm. Multicycle, pipelined and chaining execution of operations are supported.", "paper_title": "Heuristic algorithm for the resource-constrained scheduling problem during high-level synthesis", "paper_id": "WOS:000262865800005"}