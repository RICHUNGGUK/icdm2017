{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "singular_dependencies"}, {"score": 0.003499864176875713, "phrase": "pade-hermite_forms"}, {"score": 0.0026841368358805433, "phrase": "new_algorithm"}, {"score": 0.0026481480455339055, "phrase": "linear_dependencies"}, {"score": 0.0021821915946356168, "phrase": "special_cases"}, {"score": 0.00216263228969761, "phrase": "algebraic_and_fuchsian_dependencies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Guessing", " Asymptotic dependency", " Orthogonalization", " Analytic continuation", " Fuchsian singularity", " Pade-Hermite forms", " Algorithm"], "paper_abstract": "Given d complex numbers z(1), ..., z(d), it is classical that linear dependencies lambda(1)z(1) + ... + lambda(d)z(d) = 0 with lambda(1), ..., lambda(d) is an element of Z can be guessed using the LLL-algorithm. Similarly, given d formal power series f(1), ..., f(d) is an element of C[[z]], algorithms for computing Pade-Hermite forms provide a way to guess relations P(1)f(1) + ... + P(d)f(d) = 0 with P-1, ..., P-d is an element of C[z]. Assuming that f(1), ..., f(d) have a radius of convergence r > 0 and given a real number R > r, we will describe a new algorithm for guessing linear dependencies of the form g(1)f(1) + ... + g(d)f(d) = h, where g(1), ..., g(d), h is an element of C[[z]] have a radius of convergence >= R. We will also present two alternative algorithms for the special cases of algebraic and Fuchsian dependencies. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Guessing singular dependencies", "paper_id": "WOS:000325193400004"}