{"auto_keywords": [{"score": 0.04972212635078022, "phrase": "runtime_verification"}, {"score": 0.04697189954855942, "phrase": "ltl"}, {"score": 0.03174622637474691, "phrase": "monitored_property"}, {"score": 0.00481495049065317, "phrase": "ltl_semantics"}, {"score": 0.004553510708976456, "phrase": "temporal_logic"}, {"score": 0.00445293569103488, "phrase": "major_concern"}, {"score": 0.004354572391793908, "phrase": "adequate_interpretation"}, {"score": 0.004322267755421529, "phrase": "observable_system_events"}, {"score": 0.004226778595997366, "phrase": "temporal_logic_formulae"}, {"score": 0.004179824713643488, "phrase": "infinite_words"}, {"score": 0.0038510053729959074, "phrase": "ltl-derived_logics"}, {"score": 0.0038224221344037236, "phrase": "finite_traces"}, {"score": 0.003779943062894615, "phrase": "runtime-verification_perspective"}, {"score": 0.003587842947046177, "phrase": "ltl-derived_logic"}, {"score": 0.0034954725617970294, "phrase": "pre-existing_logic"}, {"score": 0.003367611042980526, "phrase": "new_four-valued_logic"}, {"score": 0.0033550841271846065, "phrase": "runtime_verification_linear_temporal_logic_rv-ltl"}, {"score": 0.003232341244892437, "phrase": "runtime_verification_linear_temporal_logic"}, {"score": 0.0031257046538823354, "phrase": "finite_word"}, {"score": 0.0030909442697163356, "phrase": "system_behaviour"}, {"score": 0.0024897902536499005, "phrase": "classical_semantics"}, {"score": 0.002363101338529545, "phrase": "observed_system_behaviour"}, {"score": 0.0022013916728990564, "phrase": "monitor_construction"}, {"score": 0.0021850254717637172, "phrase": "rv-ltl_properties"}, {"score": 0.0021526564019119466, "phrase": "moore_machines"}], "paper_keywords": ["Runtime verification", " temporal logic", " monitoring"], "paper_abstract": "When monitoring a system w.r.t. a property defined in a temporal logic such as LTL, a major concern is to settle with an adequate interpretation of observable system events; that is, models of temporal logic formulae are usually infinite words of events, whereas at runtime only finite but incrementally expanding prefixes are available. In this work, we review LTL-derived logics for finite traces from a runtime-verification perspective. In doing so, we establish four maxims to be satisfied by any LTL-derived logic aimed at runtime verification. As no pre-existing logic readily satisfies all of them, we introduce a new four-valued logic Runtime Verification Linear Temporal Logic RV-LTL in accordance to these maxims. The semantics of Runtime Verification Linear Temporal Logic (RV-LTL) indicates whether a finite word describes a system behaviour which either (i) satisfies the monitored property, (ii) violates the property, (iii) will presumably violate the property, or (iv) will presumably conform to the property in the future, once the system has stabilized. Notably, (i) and (ii) correspond to the classical semantics of LTL, whereas (iii) and (iv) are chosen whenever an observed system behaviour has not yet lead to a violation or acceptance of the monitored property. Moreover, we present a monitor construction for RV-LTL properties in terms of Moore machines signalizing the semantics of the so far obtained execution trace w.r.t. the monitored property.", "paper_title": "Comparing LTL Semantics for Runtime Verification", "paper_id": "WOS:000279004000002"}