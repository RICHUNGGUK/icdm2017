{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "count_estimation"}, {"score": 0.015576847689475237, "phrase": "extremely_long_strings"}, {"score": 0.004619027561771169, "phrase": "substring_matches"}, {"score": 0.0045765783794477505, "phrase": "string_data"}, {"score": 0.004513631630494221, "phrase": "suffix_trees"}, {"score": 0.0040215052006051235, "phrase": "short_data_strings"}, {"score": 0.0033274664434575136, "phrase": "memory-bottleneck_problem"}, {"score": 0.0031918759137610523, "phrase": "cs-tree-node_counts"}, {"score": 0.003118942369691329, "phrase": "frequent_pruning"}, {"score": 0.002991823455621222, "phrase": "count_q-gram_tree"}, {"score": 0.002896535621940078, "phrase": "air_alphanumeric_histogram"}, {"score": 0.0028698706191651155, "phrase": "long_strings"}, {"score": 0.0027784560880013886, "phrase": "length-q_substrings"}, {"score": 0.002640636493247601, "phrase": "small_available_memory"}, {"score": 0.0025447065763362984, "phrase": "lower_and_upper_bounds"}, {"score": 0.0022878396720586044, "phrase": "research_activities"}, {"score": 0.0022458849724980904, "phrase": "alphanumeric_selectivity"}, {"score": 0.0021049977753042253, "phrase": "building_time"}], "paper_keywords": ["string database", " count estimation", " count suffix tree", " count q-gram tree"], "paper_abstract": "To estimate the number of substring matches against string data, count suffix trees, (CS-tree) have been used as a kind of alphanumeric histogram,.,. Although the trees are useful for substring count estimation in short data strings (e.g. name or title), they reveal several drawbacks when the target is changed to extremely long strings. First, it becomes too hard or at least slow to build CS-trees, because their origin, the suffix tree, has memory-bottleneck problem with long strings. Secondly, some of CS-tree-node counts are incorrect due to frequent pruning of nodes. Therefore, we propose the count q-gram tree (CQ-tree) as air alphanumeric histogram for long strings. By adopting q-grams (or length-q substrings), CQ-trees can be created fast and correctly within small available memory. Furthermore, we mathematically provide the lower and upper bounds that the count estimation can reach to. To the best of our knowledge, our work is the first one to present such bounds among research activities to estimate the alphanumeric selectivity. Our experimental study shows that the CQ-tree outperforms the CS-tree in terms of the building time and accuracy.", "paper_title": "Substring count estimation in extremely long strings", "paper_id": "WOS:000236290400034"}