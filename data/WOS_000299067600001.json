{"auto_keywords": [{"score": 0.032639114318047335, "phrase": "extra_information"}, {"score": 0.026564027546506764, "phrase": "imagesegment"}, {"score": 0.00481495049065317, "phrase": "object-oriented_systems"}, {"score": 0.00469678464293492, "phrase": "object_graph"}, {"score": 0.00398362591640497, "phrase": "secondary_memory"}, {"score": 0.0038737214010638745, "phrase": "temporary_release_part"}, {"score": 0.003837761943551127, "phrase": "primary_memory"}, {"score": 0.003790542919215498, "phrase": "ram"}, {"score": 0.0036857412768922827, "phrase": "different_ways"}, {"score": 0.0035951877427580006, "phrase": "large_object_graphs"}, {"score": 0.0034959622587016222, "phrase": "existing_solutions"}, {"score": 0.003347008750837722, "phrase": "common_situations"}, {"score": 0.0031746155143471725, "phrase": "exported_subgraph"}, {"score": 0.0030204580407008214, "phrase": "object_subgraph"}, {"score": 0.002855934865505357, "phrase": "specific_code"}, {"score": 0.0027512482368183596, "phrase": "new_class_definition"}, {"score": 0.0026586509901026126, "phrase": "general_problems"}, {"score": 0.002474961375646351, "phrase": "fast_solution"}, {"score": 0.002436735294813786, "phrase": "object_graphs"}, {"score": 0.002406580727455398, "phrase": "ingalls"}, {"score": 0.0023694065215394593, "phrase": "speed_problems"}, {"score": 0.002347378595930709, "phrase": "efficient_way"}, {"score": 0.0022542611024997474, "phrase": "pharo_smalltalk"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Object swapping", " Serialization", " ImageSegment", " Smalltalk", " Object-oriented programming"], "paper_abstract": "In object-oriented systems, runtime memory is composed of an object graph in which objects refer to other objects. This graph of objects evolves while the system is running. Graph exporting and swapping are two important object graph operations. Exporting refers to copying the graph to some other memory so that it can be loaded by another system. Swapping refers to moving the graph to a secondary memory (e.g., a hard disk) to temporary release part of the primary memory (e.g., RAM). Exporting and swapping are achieved in different ways and the speed in the presence of large object graphs is critical. Nevertheless, most of the existing solutions do not address well this issue. Another challenge is to deal with common situations where objects outside the exported/swapped graph point to objects inside the graph. To correctly load back an exported subgraph, it is necessary to compute and export extra information that is not explicit in the object subgraph. This extra information is needed because certain objects may require to be reinitialized or recreated, to run specific code before or after the loading, to be updated to a new class definition, etc. In this paper, we present all general problems to our knowledge about object exporting and swapping. As a case of study, we present an analysis of ImageSegment, a fast solution to export and swap object graphs, developed by Ingalls. ImageSegment addresses the speed problems in an efficient way, as shown by the results of several benchmarks we have conducted using Pharo Smalltalk. However, ImageSegment is not a panacea since it still has other problem that hampers its general use. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Object swapping challenges: An evaluation of imageSegment", "paper_id": "WOS:000299067600001"}