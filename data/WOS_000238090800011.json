{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "new_method"}, {"score": 0.004674952036988355, "phrase": "memory_resources"}, {"score": 0.004583878086896926, "phrase": "static_analysis"}, {"score": 0.0038397509389856625, "phrase": "function_outputs"}, {"score": 0.0035141291835319682, "phrase": "stack_frame_size"}, {"score": 0.0028574164693918433, "phrase": "first_order_functional_programming"}, {"score": 0.002346160830406661, "phrase": "different_algorithms"}, {"score": 0.0021049977753042253, "phrase": "new_tools"}], "paper_keywords": [""], "paper_abstract": "We propose a new method to control memory resources by static analysis. For this, we introduce the notion of sup-interpretation which bounds from above the size of function outputs. We establish a criteria for which the stack frame size is polynomially bounded. The criteria analyses terminating as well as non-terminating programs. This method applies to first order functional programming with pattern matching. This work is related to quasi-interpretations but we are now able to determine resources of different algorithms and it is easier to perform an analysis with this new tools.", "paper_title": "Resource analysis by sup-interpretation", "paper_id": "WOS:000238090800011"}