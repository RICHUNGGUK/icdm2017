{"auto_keywords": [{"score": 0.049390246951185, "phrase": "musubi"}, {"score": 0.00481495049065317, "phrase": "parallel_tree-based_lattice_boltzmann"}, {"score": 0.004576763709613412, "phrase": "open_source"}, {"score": 0.004543708337879809, "phrase": "lattice_boltzmann"}, {"score": 0.004256703909255889, "phrase": "parallel_simulation_framework"}, {"score": 0.004225953160612875, "phrase": "apes"}, {"score": 0.004016782710006123, "phrase": "sparse_meshes"}, {"score": 0.0038737214010638745, "phrase": "automatic_mesh_generation"}, {"score": 0.0037087324991876727, "phrase": "octree_mesh_representation"}, {"score": 0.0035766032751309677, "phrase": "arbitrarily_complex_simulation_domains"}, {"score": 0.0034742854447532678, "phrase": "massively_parallel_systems"}, {"score": 0.003424225677958491, "phrase": "local_grid_refinement"}, {"score": 0.0031845067058084613, "phrase": "different_physical_models"}, {"score": 0.003115908199991072, "phrase": "stream-collide_algorithms"}, {"score": 0.0026366753045215558, "phrase": "flexible_yet_scalable_simulation_environment"}, {"score": 0.002542642270762272, "phrase": "implementation_details"}, {"score": 0.0023644936731468252, "phrase": "performance_evaluation"}, {"score": 0.002230984431056064, "phrase": "widely_used_lattice_boltzmann"}, {"score": 0.0021987994275190314, "phrase": "palabos"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Octree", " Parallel computing", " Computational fluid dynamics", " Lattice Boltzmann Method"], "paper_abstract": "We present the open source Lattice Boltzmann solver Musubi. It is part of the parallel simulation framework APES, which utilizes octrees to represent sparse meshes and provides tools from automatic mesh generation to post-processing. The octree mesh representation enables the handling of arbitrarily complex simulation domains, even on massively parallel systems. Local grid refinement is implemented by several interpolation schemes in Musubi. Various kernels provide different physical models based on stream-collide algorithms. These models can be computed concurrently and can be coupled with each other. This paper explains our approach to provide a flexible yet scalable simulation environment and elaborates its design principles and implementation details. The efficiency of our approach is demonstrated with a performance evaluation on two supercomputers and a comparison to the widely used Lattice Boltzmann solver Palabos. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Complex fluid simulations with the parallel tree-based Lattice Boltzmann solver Musubi", "paper_id": "WOS:000341553900011"}