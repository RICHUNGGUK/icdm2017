{"auto_keywords": [{"score": 0.024899572554280942, "phrase": "detection_accuracy"}, {"score": 0.00481495049065317, "phrase": "efficient_clustering-based_source_code_plagiarism_detection"}, {"score": 0.00475924837336259, "phrase": "piy."}, {"score": 0.004236321075918639, "phrase": "source_code"}, {"score": 0.004162978902905443, "phrase": "traditional_approach"}, {"score": 0.004090901264701185, "phrase": "copied_work"}, {"score": 0.003950453462399077, "phrase": "manual_inspection"}, {"score": 0.0035366216368204182, "phrase": "earlier_offering"}, {"score": 0.0033559647822437298, "phrase": "source_code_plagiarism"}, {"score": 0.003221837753001224, "phrase": "small_submission_sets"}, {"score": 0.0030572112793962004, "phrase": "automated_source_code_plagiarism_detection"}, {"score": 0.0029867619862229853, "phrase": "software_similarity"}, {"score": 0.0027688283788565183, "phrase": "acm"}, {"score": 0.002736694413701639, "phrase": "san_diego"}, {"score": 0.002365472164486967, "phrase": "moss"}, {"score": 0.0022841153001549193, "phrase": "parallel_processing_and_data_clustering"}, {"score": 0.0022576249214220187, "phrase": "piy"}, {"score": 0.002154693685426657, "phrase": "reasonable_runtimes"}, {"score": 0.0021049977753042253, "phrase": "extremely_large_data_repositories"}], "paper_keywords": ["Plagiarism detection", " Data clustering", " k-Grams", " Parallel computing", " NUMA"], "paper_abstract": "Vast amounts of information available online make plagiarism increasingly easy to commit, and this is particularly true of source code. The traditional approach of detecting copied work in a course setting is manual inspection. This is not only tedious but also typically misses code plagiarized from outside sources or even from an earlier offering of the course. Systems to automatically detect source code plagiarism exist but tend to focus on small submission sets. One such system that has become the standard in automated source code plagiarism detection is measure of software similarity (MOSS) Schleimer et al. in proceedings of the 2003 ACM SIGMOD international conference on management of data, ACM, San Diego, 2003. In this work, we present an approach called program it yourself (PIY) which is empirically shown to outperform MOSS in detection accuracy. By utilizing parallel processing and data clustering, PIY is also capable of maintaining detection accuracy and reasonable runtimes even when using extremely large data repositories.", "paper_title": "Efficient clustering-based source code plagiarism detection using PIY", "paper_id": "WOS:000351520700008"}