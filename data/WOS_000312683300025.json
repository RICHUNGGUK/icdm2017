{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "malicious_nodes"}, {"score": 0.04968705263604004, "phrase": "ad_hoc_grid_environments"}, {"score": 0.004273782634394231, "phrase": "correct_execution"}, {"score": 0.004186799638538032, "phrase": "good_performance"}, {"score": 0.004084744133085742, "phrase": "malicious_users"}, {"score": 0.004018087343963485, "phrase": "normal_operation"}, {"score": 0.00388800655625083, "phrase": "tasks_results"}, {"score": 0.003824547895167011, "phrase": "security_mechanisms"}, {"score": 0.0037312893857519803, "phrase": "high_performance"}, {"score": 0.0036855132234738736, "phrase": "grid_computing_scenarios"}, {"score": 0.0035808664384880213, "phrase": "punishment_procedures"}, {"score": 0.0035369291417564606, "phrase": "trust_models"}, {"score": 0.003422371752150812, "phrase": "wireless_ad_hoc_networks"}, {"score": 0.0033115124244647736, "phrase": "ad_hoc_grid_computing"}, {"score": 0.0031260524791486347, "phrase": "mathematical_trust_models"}, {"score": 0.0031004173389196387, "phrase": "ad_hoc_grid_scenarios"}, {"score": 0.0030623570435946977, "phrase": "different_ways"}, {"score": 0.0030247625535682987, "phrase": "detection_information"}, {"score": 0.0028553159147435424, "phrase": "performance_evaluation"}, {"score": 0.0027856252557826467, "phrase": "grid_simulator_platform"}, {"score": 0.0026622351303038885, "phrase": "evaluated_ones"}, {"score": 0.002391825892939338, "phrase": "proposed_approach"}, {"score": 0.0022117133940361025, "phrase": "valuable_tool"}, {"score": 0.002193559776999383, "phrase": "network_designers"}, {"score": 0.0021755548389283856, "phrase": "planning_trust_models"}, {"score": 0.002157697367447098, "phrase": "ad_hoc_grid_network_deployments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Security", " Grid computing", " Intrusion detection", " Ad hoc grid environments"], "paper_abstract": "In ad hoc grid environments, resources are not always available since nodes can spontaneously connect and disconnect at any time. Thus, these environments demand the correct execution of tasks to guarantee good performance. However, there are malicious users that affect the normal operation of these grids. These users modify tasks results and even cheat security mechanisms. Therefore, to assure high performance in these grid computing scenarios, it is essential to use punishment procedures based on trust models. These solutions have been used in wireless ad hoc networks, but not in the context of ad hoc grid computing. Thus, in this paper, we first present an analysis of mathematical trust models in ad hoc grid scenarios, using different ways to treat detection information passed on by other nodes. Then, we provide a comparison and a performance evaluation of these models using a grid simulator platform. Besides that, we choose the most accurate trust model among the evaluated ones to propose RETENTION: a reactive trust-based mechanism to detect and punish malicious nodes in ad hoc grid environments. Simulation results demonstrate the effectiveness of the proposed approach in detecting and punishing up to 100% of malicious nodes without generating false-positives. The results can be a valuable tool for network designers in planning trust models in ad hoc grid network deployments. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "RETENTION: A reactive trust-based mechanism to detect and punish malicious nodes in ad hoc grid environments", "paper_id": "WOS:000312683300025"}