{"auto_keywords": [{"score": 0.03736345948911137, "phrase": "chares"}, {"score": 0.00481495049065317, "phrase": "fast_learning_of_restricted_regular_expressions"}, {"score": 0.004439097815805505, "phrase": "finite_sample"}, {"score": 0.004233492114255375, "phrase": "predefined_language_class"}, {"score": 0.003956113993518042, "phrase": "regular_languages"}, {"score": 0.0037473054818679763, "phrase": "xml_documents"}, {"score": 0.0035979378467361762, "phrase": "so-called_chain_regular_expressions"}, {"score": 0.002799388549023265, "phrase": "fast_but_non-optimal_algorithm"}, {"score": 0.0025113494092413604, "phrase": "efficient_algorithm"}, {"score": 0.0024607296642187846, "phrase": "minimal_generalization"}, {"score": 0.0023148964315569866, "phrase": "fixed_language_class"}], "paper_keywords": ["Subregular language learning", " Single-occurrence regular expression", " Chain regular expression", " Descriptive generalization"], "paper_abstract": "We study the problem of generalizing from a finite sample to a language taken from a predefined language class. The two language classes we consider are subsets of the regular languages and have significance in the specification of XML documents (the classes corresponding to so-called chain regular expressions, Chares, and to single-occurrence regular expressions, Sores). The previous literature gives a number of algorithms for generalizing to Sores providing a trade-off between quality of the solution and speed. Furthermore, a fast but non-optimal algorithm for generalizing to Chares is known. For each of the two language classes we give an efficient algorithm returning a minimal generalization from the given finite sample to an element of the fixed language class; such generalizations are called descriptive. In this sense of descriptivity, both our algorithms are optimal.", "paper_title": "Fast Learning of Restricted Regular Expressions and DTDs", "paper_id": "WOS:000365792200010"}