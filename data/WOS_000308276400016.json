{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scheduling_dags"}, {"score": 0.004776853267973129, "phrase": "volatile_computing_platforms"}, {"score": 0.00450052670755585, "phrase": "dynamic_heterogeneity"}, {"score": 0.004412000844879264, "phrase": "computing_power"}, {"score": 0.004074901471704325, "phrase": "new_quality_metric"}, {"score": 0.003916098498242888, "phrase": "interdependent_constituent_chores"}, {"score": 0.0036893794227117194, "phrase": "average_number"}, {"score": 0.003287482882222731, "phrase": "host_platforms"}, {"score": 0.003097043800165555, "phrase": "faster_rate"}, {"score": 0.0030481444896915504, "phrase": "benign_impact"}, {"score": 0.002988101395789399, "phrase": "volatile_platforms"}, {"score": 0.0029292375702719468, "phrase": "simulation_experiments"}, {"score": 0.002826181226538412, "phrase": "basic_properties"}, {"score": 0.002578946584040053, "phrase": "significant_computations"}, {"score": 0.0025180781216911246, "phrase": "-m_scheduling"}, {"score": 0.002468450551616404, "phrase": "lightweight_ones"}, {"score": 0.002391067964886602, "phrase": "intensive_ones"}, {"score": 0.0023346234464901978, "phrase": "complete_computations"}, {"score": 0.002316105585203396, "phrase": "volatile_heterogeneous_platforms"}, {"score": 0.002225691463551672, "phrase": "computation_structure"}, {"score": 0.002208035721125305, "phrase": "platform_behavior"}, {"score": 0.0021559025985688255, "phrase": "double_digits"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Scheduling for dynamically heterogeneous platforms", " DAG scheduling", " Cloud computing", " Volunteer computing", " Desktop grids"], "paper_abstract": "Many modern computing platforms-notably clouds and desktop grids exhibit dynamic heterogeneity: the availability and computing power of their constituent resources can change unexpectedly and dynamically, even in the midst of a computation. We introduce a new quality metric, area, for schedules that execute computations having interdependent constituent chores (jobs, tasks, etc.) on such platforms. Area measures the average number of tasks that a schedule renders eligible for execution at each step of a computation. Even though the definition of area does not mention and properties of host platforms (such as volatility), intuition suggests that rendering tasks eligible at a faster rate will have a benign impact on the performance of volatile platforms and we report on simulation experiments that support this intuition. We derive the basic properties of the area metric and show how to efficiently craft area-maximizing (A-M) schedules for several classes of significant computations. Simulations that compare A-M scheduling against heuristics ranging from lightweight ones (e.g.. FIFO) to computationally intensive ones suggest that A-M schedules complete computations on volatile heterogeneous platforms faster than their competition, by percentages that vary with computation structure and platform behavior but are often in the double digits. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "On scheduling DAGS for volatile computing platforms: Area-maximizing schedules", "paper_id": "WOS:000308276400016"}