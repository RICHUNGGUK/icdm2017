{"auto_keywords": [{"score": 0.030529977007677515, "phrase": "rewrite_system"}, {"score": 0.00481495049065317, "phrase": "clausal_presentation_of_theories"}, {"score": 0.00459165923324494, "phrase": "resolution_modulo"}, {"score": 0.0043786774510943625, "phrase": "first-order_resolution"}, {"score": 0.004255639740735269, "phrase": "rewrite_rules"}, {"score": 0.0037969755088553326, "phrase": "first_version"}, {"score": 0.003485605409687907, "phrase": "arbitrary_propositions"}, {"score": 0.003051073364818384, "phrase": "unpleasant_feature"}, {"score": 0.0021049977753042253, "phrase": "free_proofs"}], "paper_keywords": ["resolution", " deduction modulo", " cut free proof", " clause"], "paper_abstract": "Resolution modulo is an extension of first-order resolution in which rewrite rules are used to rewrite clauses during the search. In the first version of this method, clauses are rewritten to arbitrary propositions. These propositions are needed to be dynamically transformed into clauses. This unpleasant feature can be eliminated when the rewrite system is clausal, i.e., when it rewrites clauses to clauses. We show in this paper how to transform any rewrite system into a clausal one, preserving the existence of cut free proofs of any sequent.", "paper_title": "Clausal Presentation of Theories in Deduction Modulo", "paper_id": "WOS:000326953200012"}