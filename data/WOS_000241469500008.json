{"auto_keywords": [{"score": 0.04848647943586379, "phrase": "parbench"}, {"score": 0.010612387000973441, "phrase": "openmp_programs"}, {"score": 0.004768649568826951, "phrase": "multiprogramming_environments"}, {"score": 0.004329331617724, "phrase": "available_cpus"}, {"score": 0.004046020290832207, "phrase": "main_memory_access"}, {"score": 0.003987755561492638, "phrase": "user_programs"}, {"score": 0.003799509133780117, "phrase": "scheduler_decisions"}, {"score": 0.003637669525737665, "phrase": "complete_load_scenarios"}, {"score": 0.0035852640843794252, "phrase": "synthetic_jobs"}, {"score": 0.0034995881411519925, "phrase": "job_behavior"}, {"score": 0.0033021988455635403, "phrase": "ccnuma_system"}, {"score": 0.0032232653428491435, "phrase": "crossbar-based_connection_network"}, {"score": 0.002883718207958817, "phrase": "performance_impact"}, {"score": 0.0027741761880779535, "phrase": "fully_loaded_and_overloaded_machines"}, {"score": 0.0026817365934071486, "phrase": "operating_system_tasks"}, {"score": 0.002542642270762272, "phrase": "full_load"}, {"score": 0.0024818194799172263, "phrase": "cluster_batch_engine"}, {"score": 0.0023990982005125763, "phrase": "system_tasks"}, {"score": 0.0023303871145705954, "phrase": "initial_load_calculation"}, {"score": 0.002274630121183437, "phrase": "generated_scenarios"}, {"score": 0.0022202042044679984, "phrase": "statistical_analysis"}, {"score": 0.0021254913611527455, "phrase": "data_locality"}, {"score": 0.0021049977753042253, "phrase": "migration_frequency"}], "paper_keywords": [""], "paper_abstract": "Nowadays, most high performance computing systems run in multiprogramming mode with several user programs simultaneously 14 utilizing the available CPUs. Even though most current SMP systems are implemented as ccNUMA to reduce the bottleneck of main memory access, the user programs still interact as they share other system resources and influence the scheduler decisions with their generated load. PARbench was designed to generate complete load scenarios based on synthetic jobs and to measure the job behavior during the execution of these scenarios. The E25K is a ccNUMA system with up to 72 dual core CPUs and a crossbar-based connection network. This paper describes the results of the examination of such a Sun Fire E25K system with PARbench. First, PARbench was used to investigate the performance impact caused by the interactions of jobs on fully loaded and overloaded machines. Second, the impact of operating system tasks to the performance of OpenMP parallelized programs in scenarios of full load as created by the cluster batch engine is quantized, especially when these system tasks are not considered in the initial load calculation. Additionally, the generated scenarios were used for a statistical analysis of the scheduling of OpenMP programs, focusing on data locality and migration frequency.", "paper_title": "Analyzing the interaction of OpenMP programs within multiprogramming environments on a Sun Fire E25K system with PARbench", "paper_id": "WOS:000241469500008"}