{"auto_keywords": [{"score": 0.027927458871339825, "phrase": "memory_resources"}, {"score": 0.00481495049065317, "phrase": "island-based_multi-core_platforms"}, {"score": 0.0045726187330434025, "phrase": "computing_system"}, {"score": 0.00443308765153716, "phrase": "computing_units"}, {"score": 0.0043875257506180865, "phrase": "heterogeneous_memory_resources"}, {"score": 0.004231699728933577, "phrase": "real-time_systems"}, {"score": 0.004102528738941734, "phrase": "joint_considerations"}, {"score": 0.004060350364088702, "phrase": "memory_management"}, {"score": 0.0040186038781533946, "phrase": "real-time_task"}, {"score": 0.003956784357357341, "phrase": "island-based_multi-core_architecture"}, {"score": 0.0037381083634085424, "phrase": "shorter_access_time"}, {"score": 0.003680587852807675, "phrase": "global_memory_module"}, {"score": 0.0034236045013591437, "phrase": "needed_islands"}, {"score": 0.003353521531649663, "phrase": "real-time_tasks"}, {"score": 0.0032848684681050745, "phrase": "required_amount"}, {"score": 0.003234299589505403, "phrase": "local_memory_space"}, {"score": 0.0031032109441552287, "phrase": "scheduling_algorithm"}, {"score": 0.0028567126120064546, "phrase": "needed_local_memory_space"}, {"score": 0.0025892330566358503, "phrase": "computing_cores"}, {"score": 0.0025100713447593773, "phrase": "worst-case_approximation_analysis"}, {"score": 0.0023225701080913388, "phrase": "worst-case_execution_time_analyzer"}, {"score": 0.0021601997088758957, "phrase": "proposed_approaches"}], "paper_keywords": ["Real-time system", " multi-core architecture", " heterogeneous memory", " task scheduling", " memory allocation"], "paper_abstract": "With the increasing number of cores in a computing system, how to coordinate the computing units and heterogeneous memory resources has soon become extremely critical for real-time systems. This paper explores the joint considerations of memory management and real-time task scheduling over island-based multi-core architecture, where the local memory module of an island offers shorter access time than the global memory module does. The objective of this work is to minimize the number of needed islands to successfully schedule real-time tasks. When the required amount of the local memory space is specified for each task, a scheduling algorithm is proposed to provide an asymptotic 29/9-approximation bound. When there is flexibility in determining the needed local memory space for each task, we propose an algorithm with an asymptotic 4-approximation bound to jointly manage memory resources and allocate computing cores. In addition to the worst-case approximation analysis, the proposed algorithms are also evaluated with 82 real-life benchmarks with the support of a worst-case execution time analyzer. Moreover, extensive evaluations are conducted to show the capability of the proposed approaches when being used with various computing cores and memory resources.", "paper_title": "Real-Time Task Scheduling on Island-Based Multi-Core Platforms", "paper_id": "WOS:000349769300020"}