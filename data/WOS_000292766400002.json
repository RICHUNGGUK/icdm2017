{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "certificate_translation"}, {"score": 0.004556901872357751, "phrase": "mathematical_object"}, {"score": 0.004119049028319832, "phrase": "mobile_code"}, {"score": 0.004007083686875716, "phrase": "security_policy"}, {"score": 0.0031845067058084583, "phrase": "source_code"}, {"score": 0.003097865379563127, "phrase": "strong_guarantees"}, {"score": 0.0030135741897058844, "phrase": "compiled_code_correctness"}, {"score": 0.002748775748298028, "phrase": "program_correctness"}, {"score": 0.0026986685585382347, "phrase": "semantically_justified_program_transformations"}, {"score": 0.0025071862539276283, "phrase": "previous_work"}, {"score": 0.002329258721870127, "phrase": "particular_programming_and_verification_settings"}, {"score": 0.0021049977753042253, "phrase": "abstract_interpretation"}], "paper_keywords": ["Languages", " Verification", " Security", " Program verification", " static analysis", " program optimizations", " proof-carrying code"], "paper_abstract": "A certificate is a mathematical object that can be used to establish that a piece of mobile code satisfies some security policy. In general, certificates cannot be generated automatically. There is thus an interest in developing methods to reuse certificates generated for source code to provide strong guarantees of the compiled code correctness. Certificate translation is a method to transform certificates of program correctness along semantically justified program transformations. These methods have been developed in previous work, but they were strongly dependent on particular programming and verification settings. This article provides a more general development in the setting of abstract interpretation, showing the scalability of certificate translation.", "paper_title": "An Abstract Model of Certificate Translation", "paper_id": "WOS:000292766400002"}