{"auto_keywords": [{"score": 0.040587222018968576, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "planar_graph"}, {"score": 0.0047597635659244655, "phrase": "straight-line_drawing_delta"}, {"score": 0.004705206179790976, "phrase": "planar_graph_g"}, {"score": 0.004160612392068268, "phrase": "minimum_number"}, {"score": 0.0033030907500120397, "phrase": "maximum_number"}, {"score": 0.002931569771634119, "phrase": "n-vertex_graph"}, {"score": 0.0029203055813347874, "phrase": "g._if_g"}, {"score": 0.002735284807307981, "phrase": "arbitrarily_large_n"}, {"score": 0.0021049977753042253, "phrase": "outerplanar_graphs"}], "paper_keywords": ["Graph drawing", " Straight-line drawing", " Planarity", " NP-hardness", " Hardness of approximation", " Moving vertices", " Untangling", " Point-set embeddability"], "paper_abstract": "A straight-line drawing delta of a planar graph G need not be plane but can be made so by untangling it, that is, by moving some of the vertices of G. Let shift(G, delta) denote the minimum number of vertices that need to be moved to untangle d. We show that shift(G, delta) is NP-hard to compute and to approximate. Our hardness results extend to a version of 1BENDPOINTSETEMBEDDABILITY, a well-known graph-drawing problem. Further we define fix(G, delta) = n - shift(G, delta) to be the maximum number of vertices of a planar n-vertex graph G that can be fixed when untangling d. We give an algorithm that fixes at least root((log n) - 1)/log log n vertices when untangling a drawing of an n-vertex graph G. If G is outerplanar, the same algorithm fixes at least root n/2 vertices. On the other hand, we construct, for arbitrarily large n, an n-vertex planar graph G and a drawing delta(G) of G with fix(G, delta(G)) <= root n - 2 + 1 and an n-vertex outerplanar graph H and a drawing delta(H) of H with fix(H, delta(H)) <= 2 root n - 1 + 1. Thus our algorithm is asymptotically worst-case optimal for outerplanar graphs.", "paper_title": "Untangling a Planar Graph", "paper_id": "WOS:000271198900003"}