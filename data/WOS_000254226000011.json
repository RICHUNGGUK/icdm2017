{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_technique"}, {"score": 0.004428728205625129, "phrase": "nonzero_positive_integer"}, {"score": 0.004257806363128601, "phrase": "graph-based_decomposition"}, {"score": 0.004073359218158693, "phrase": "efficient_network_factorization"}, {"score": 0.0036373553416391823, "phrase": "prime_number"}, {"score": 0.003445591238183763, "phrase": "polynomial_graphs"}, {"score": 0.0032160319265621285, "phrase": "graph-based_representation"}, {"score": 0.002680114113899346, "phrase": "synopsys_design_compiler"}, {"score": 0.0025638362414466278, "phrase": "combinational_exponentiation_circuits"}, {"score": 0.002538687900036229, "phrase": "parallel_integer_adders"}, {"score": 0.002428530921948425, "phrase": "word-level_polynomials"}, {"score": 0.0023928819778638055, "phrase": "experimental_results"}, {"score": 0.002346160830406661, "phrase": "proposed_technique"}, {"score": 0.002233301265743633, "phrase": "significant_amounts"}], "paper_keywords": ["decision diagrams", " decomposition", " finite or Galois fields", " polynomials", " synthesis and optimization", " testing", " verification"], "paper_abstract": "This paper presents an efficient technique for synthesis and optimization of the polynomials over GF(2(m)), where m is a nonzero positive integer. The technique is based on a graph-based decomposition and factorization of the polynomials, followed by efficient network factorization and optimization. A technique for efficiently computing the coefficients of the polynomials over GF(p(m)), where p is a prime number, is first presented. The coefficients are stored as polynomial graphs over GF(p(m)). The synthesis and optimization is initiated from this graph-based representation. The technique has been applied to minimize multipliers over the fields GF(2(k)), where k = 2,..., 8, generated with all the 51 primitive polynomials in the 0.18-mu m CMOS technology with the help of the Synopsys design compiler. It has also been applied to minimize combinational exponentiation circuits, parallel integer adders and multipliers, and other multivariate bit- as well as word-level polynomials. The experimental results suggest that the proposed technique can reduce area, delay, and power by significant amounts. We also observed that the technique is capable of producing 100% testable circuits for stuck-at faults.", "paper_title": "GfXpress: A technique for synthesis and optimization of GF(2(m)) polynomials", "paper_id": "WOS:000254226000011"}