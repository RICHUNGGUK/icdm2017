{"auto_keywords": [{"score": 0.04814996942162453, "phrase": "total_resource_consumption"}, {"score": 0.04328923668126013, "phrase": "resource_consumption"}, {"score": 0.00481495049065317, "phrase": "total_resource-consumption"}, {"score": 0.004697655699119423, "phrase": "single-machine_scheduling_problem"}, {"score": 0.004326833704481825, "phrase": "release_date"}, {"score": 0.004186799638538032, "phrase": "continuous_function"}, {"score": 0.004052929340033448, "phrase": "np"}, {"score": 0.003968806706727518, "phrase": "strong_sense"}, {"score": 0.00388800655625083, "phrase": "simulated_annealing"}, {"score": 0.0037621210719690594, "phrase": "near-optimal_solution"}, {"score": 0.0030623570435946977, "phrase": "proposed_algorithm"}, {"score": 0.0029631248341951064, "phrase": "assignment_problem"}, {"score": 0.0028553159147435424, "phrase": "hungary_method"}, {"score": 0.0027514186391258263, "phrase": "chu's_method"}, {"score": 0.002673223453963085, "phrase": "janiak"}, {"score": 0.002607965563121546, "phrase": "random_test_data"}, {"score": 0.00246181015968765, "phrase": "steel_mills"}, {"score": 0.0023819914954155905, "phrase": "proposed_sa_algorithm"}, {"score": 0.002304754792740636, "phrase": "problem_sizes"}, {"score": 0.0022300169122921906, "phrase": "computational_results"}, {"score": 0.002193559776999383, "phrase": "sa_approach"}, {"score": 0.0021311850321045767, "phrase": "large-scale_problems"}, {"score": 0.0021049977753042253, "phrase": "reasonable_time"}], "paper_keywords": ["scheduling", " single machine", " makespan", " resource allocation", " release dates"], "paper_abstract": "This article considers the single-machine scheduling problem to minimise the total resource consumption under the constraint that the makespan does not exceed a given limit, in which the release date of a job is a linear decreasing continuous function of the resource consumption. This problem is NP-hard in the strong sense. We design a simulated annealing (SA) algorithm to obtain the near-optimal solution with high quality. Two operators, right-move and left-move, are defined and their influences on the resource consumption are analysed. We use two operations, insert and swap, to generate the neighbourhood, and discuss how to calculate the change of total resource consumption. To evaluate the performance of the proposed algorithm, we relax the problem to an assignment problem, and obtain a lower bound by the Hungary method. And then, we improve its quality by Chu's method. Based on the settings that Janiak provided, we generate the random test data in our experiments to simulate the ingot preheating and hot-rolling process in steel mills. The accuracy and efficiency of the proposed SA algorithm are tested based on those data with problem sizes varying from 50 to 200 jobs. The computational results indicate that the SA approach is promising and capable of solving large-scale problems in a reasonable time.", "paper_title": "Single-machine scheduling problem with resource dependent release dates to minimise total resource-consumption", "paper_id": "WOS:000293842400019"}