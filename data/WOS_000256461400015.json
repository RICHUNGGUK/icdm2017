{"auto_keywords": [{"score": 0.04315058072719689, "phrase": "subtyping_relation"}, {"score": 0.042143904057605895, "phrase": "type_system"}, {"score": 0.03773596973966994, "phrase": "boolean_combinations"}, {"score": 0.00481495049065317, "phrase": "syntactic_way"}, {"score": 0.004621984064678252, "phrase": "structural_rules"}, {"score": 0.004436716583179764, "phrase": "semantic_characterisation"}, {"score": 0.004364696693320128, "phrase": "channel_types"}, {"score": 0.0037360045780015804, "phrase": "-only_channel_types"}, {"score": 0.0034422330919613294, "phrase": "set-theoretic_interpretation"}, {"score": 0.0030441844088874366, "phrase": "corresponding_set-theoretic_operations"}, {"score": 0.002583931950389087, "phrase": "subtyping_algorithm"}, {"score": 0.002157433262687853, "phrase": "pattern_matching"}, {"score": 0.0021049977753042253, "phrase": "dynamic_typecase"}], "paper_keywords": ["concurrency", " pi-calculus", " types", " subtyping", " channels", " boolean type combinators"], "paper_abstract": "Subtyping relations for the pi-calculus are usually defined in a syntactic way, by means of structural rules. We propose a semantic characterisation of channel types and use it to derive a subtyping relation. The type system we consider includes read-only and write-only channel types, as well as boolean combinations of types. A set-theoretic interpretation of types is provided, in which boolean combinations of types are interpreted as the corresponding set-theoretic operations. Subtyping is defined as inclusion of the interpretations. We prove decidability of the subtyping relation and sketch the subtyping algorithm. In order to fully exploit the type system, we define a variant of the pi-calculus where communication is subjected to pattern matching that performs dynamic typecase. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Semantic subtyping for the pi-calculus", "paper_id": "WOS:000256461400015"}