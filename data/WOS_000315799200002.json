{"auto_keywords": [{"score": 0.01842017156867076, "phrase": "random_walks"}, {"score": 0.00846184294297026, "phrase": "fast_distributed_algorithm"}, {"score": 0.007254663834701868, "phrase": "high_probability"}, {"score": 0.00481495049065317, "phrase": "distributed_random_walks"}, {"score": 0.004788936788674301, "phrase": "performing_random_walks"}, {"score": 0.004610715835407973, "phrase": "computer_science"}, {"score": 0.0045733930839959155, "phrase": "distributed_computing"}, {"score": 0.004355688788648902, "phrase": "distributed_network"}, {"score": 0.004297068016286485, "phrase": "bandwidth_constraints"}, {"score": 0.004137075934831388, "phrase": "random_walk_samples"}, {"score": 0.004103571390356404, "phrase": "previous_algorithms"}, {"score": 0.00405931864967869, "phrase": "random_walk_sample"}, {"score": 0.00375238940039959, "phrase": "sublinear_time_distributed_algorithm"}, {"score": 0.003583331341515525, "phrase": "random_walk"}, {"score": 0.003563947870911093, "phrase": "length_l"}, {"score": 0.0034311578789991363, "phrase": "tilde_hides"}, {"score": 0.0032587955310474513, "phrase": "undirected_network"}, {"score": 0.0031544100787919828, "phrase": "small_diameter_graphs"}, {"score": 0.0031119061114737267, "phrase": "significant_improvement"}, {"score": 0.0029959082125682918, "phrase": "poly-logarithmic_factor"}, {"score": 0.0028530806891228517, "phrase": "independent_random_walks"}, {"score": 0.002608634873428449, "phrase": "distributed_algorithms"}, {"score": 0.0024507285142888746, "phrase": "random_spanning_tree"}, {"score": 0.002252880693912436, "phrase": "fast_decentralized_algorithm"}, {"score": 0.002216469817316079, "phrase": "related_parameters"}, {"score": 0.002198485165633691, "phrase": "underlying_network"}, {"score": 0.0021337783230121286, "phrase": "building_block"}, {"score": 0.0021049977753042253, "phrase": "topologically-aware_networks"}], "paper_keywords": ["Algorithms", " Theory", " Random walks", " random sampling", " decentralized computation", " distributed algorithms", " random spanning tree", " mixing time"], "paper_abstract": "Performing random walks in networks is a fundamental primitive that has found applications in many areas of computer science, including distributed computing. In this article, we focus on the problem of sampling random walks efficiently in a distributed network and its applications. Given bandwidth constraints, the goal is to minimize the number of rounds required to obtain random walk samples. All previous algorithms that compute a random walk sample of length l as a subroutine always do so naively, that is, in O(l) rounds. The main contribution of this article is a fast distributed algorithm for performing random walks. We present a sublinear time distributed algorithm for performing random walks whose time complexity is sublinear in the length of the walk. Our algorithm performs a random walk of length l in (O) over tilde(root lD) rounds ((O) over tilde hides polylog n factors where n is the number of nodes in the network) with high probability on an undirected network, where D is the diameter of the network. For small diameter graphs, this is a significant improvement over the naive O(l) bound. Furthermore, our algorithm is optimal within a poly-logarithmic factor as there exists a matching lower bound [Nanongkai et al. 2011]. We further extend our algorithms to efficiently perform k independent random walks in (O) over tilde(root klD + k) rounds. We also show that our algorithm can be applied to speedup the more general Metropolis-Hastings sampling. Our random-walk algorithms can be used to speed up distributed algorithms in applications that use random walks as a subroutine. We present two main applications. First, we give a fast distributed algorithm for computing a random spanning tree (RST) in an arbitrary (undirected unweighted) network which runs in (O) over tilde(root mD) rounds with high probability (m is the number of edges). Our second application is a fast decentralized algorithm for estimating mixing time and related parameters of the underlying network. Our algorithm is fully decentralized and can serve as a building block in the design of topologically-aware networks.", "paper_title": "Distributed Random Walks", "paper_id": "WOS:000315799200002"}