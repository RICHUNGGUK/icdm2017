{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cross_cloud_migratable_software"}, {"score": 0.004658426838467567, "phrase": "current_scene"}, {"score": 0.004464602028530629, "phrase": "high_computing_rates"}, {"score": 0.004422632150619634, "phrase": "limited_costs"}, {"score": 0.00438105507792004, "phrase": "cloud_vendors"}, {"score": 0.003784209997115174, "phrase": "vendor_lock"}, {"score": 0.0037133478610481994, "phrase": "common_problem"}, {"score": 0.003678414118674967, "phrase": "multiple_cloud_users"}, {"score": 0.003525220627709056, "phrase": "full_potential"}, {"score": 0.0034920505103165403, "phrase": "cloud_computing"}, {"score": 0.003410479630045025, "phrase": "component-based_applications"}, {"score": 0.0028360962841331634, "phrase": "cloud_development_framework"}, {"score": 0.0027961342030212353, "phrase": "cloud_agnostic_applications"}, {"score": 0.002705059527911504, "phrase": "multiple_cloud_platforms"}, {"score": 0.0026543514413663893, "phrase": "cloud_deployment"}, {"score": 0.0026293540353514075, "phrase": "cloud_integration"}, {"score": 0.0025678829712650437, "phrase": "source_code"}, {"score": 0.002507845411496512, "phrase": "framework_interoperability"}, {"score": 0.0024842242921857705, "phrase": "interdependent_components"}, {"score": 0.002449208093757498, "phrase": "different_clouds"}, {"score": 0.002358220053411644, "phrase": "service_clients"}, {"score": 0.0023139986108451967, "phrase": "software_developers"}, {"score": 0.002259883463607508, "phrase": "different_modules"}, {"score": 0.0021656385587456952, "phrase": "heterogeneous_cloud_platforms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Cloud framework", " Adaptation", " Cross-cloud applications"], "paper_abstract": "Whilst cloud computing has burst into the current scene as a technology that allows companies to access high computing rates at limited costs, cloud vendors have rushed to provide tools that allow developers to build software for their cloud platforms. The software developed with these tools is often tightly coupled to their services and restrictions. Consequently vendor lock in becomes a common problem which multiple cloud users have to tackle in order to exploit the full potential of cloud computing. A scenario where component-based applications are developed for being deployed across several clouds, and each component can in,dependently be deployed in one cloud or another, remains fictitious due to the complexity and the cost of their development. This paper presents a cloud development framework for developing cloud agnostic applications that may be deployed indifferently across multiple cloud platforms. Information about cloud deployment and cloud integration is separated from the source code and managed by the framework Interoperability between interdependent components deployed in different clouds is achieved by automatically generating services and service clients. This allows software developers to segment their applications into different modules that can easily be deployed and redistributed across heterogeneous cloud platforms. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A service-oriented framework for developing cross cloud migratable software", "paper_id": "WOS:000323870300007"}