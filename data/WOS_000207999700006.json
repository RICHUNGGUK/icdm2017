{"auto_keywords": [{"score": 0.04967710401179305, "phrase": "website_gateway"}, {"score": 0.04733190377720633, "phrase": "web_server"}, {"score": 0.044548206503911614, "phrase": "service_differentiation"}, {"score": 0.03591284955015773, "phrase": "releasing_time"}, {"score": 0.03255476101700541, "phrase": "service_rate"}, {"score": 0.028196032587350057, "phrase": "user-perceived_latency"}, {"score": 0.00481495049065317, "phrase": "differentiated_qos"}, {"score": 0.004694700982410345, "phrase": "explosive_growth"}, {"score": 0.004655285779819366, "phrase": "web_traffic"}, {"score": 0.004406994912939125, "phrase": "longer_user-perceived_latency"}, {"score": 0.004207230913063179, "phrase": "better_throughput"}, {"score": 0.004171891198117434, "phrase": "shorter_user-perceived_latency"}, {"score": 0.003999578057088828, "phrase": "http_request_scheduling_algorithm"}, {"score": 0.0038668462001710314, "phrase": "web_quality"}, {"score": 0.003722761107761564, "phrase": "server_software"}, {"score": 0.0036296886647898094, "phrase": "deficit_round_robin_algorithm"}, {"score": 0.0035389348527719404, "phrase": "window_control_mechanism"}, {"score": 0.0032387402145603412, "phrase": "response_size"}, {"score": 0.0031577303835881964, "phrase": "pre-defined_service_weights"}, {"score": 0.003027178161479457, "phrase": "service_classes"}, {"score": 0.0027469703311742647, "phrase": "scheduling_algorithm"}, {"score": 0.0026782279715171866, "phrase": "server_throughput"}, {"score": 0.002535115422089855, "phrase": "qos_website_gateway"}, {"score": 0.0024097920845706795, "phrase": "overall_throughput"}, {"score": 0.002195866991284673, "phrase": "largest_weight"}, {"score": 0.0021049977753042253, "phrase": "qos-disabled_values"}], "paper_keywords": ["Web QoS", " service differentiation", " request scheduling", " gateway"], "paper_abstract": "With the explosive growth of Web traffic, the load on a Web server becomes heavier, leading to the longer user-perceived latency. Website operators would like to employ service differentiation to offer better throughput and shorter user-perceived latency to some specific users. This paper presents an HTTP request scheduling algorithm deployed at the Website gateway to enable the Web quality of service without any modification to client or server software. A variation of the deficit round robin algorithm for packet scheduling and a window control mechanism are presented to decide the order and the releasing time of requests, respectively. The order is decided by the response size of the requests and the pre-defined service weights. The ratio of the service rate got by the service classes is determined by the weights, whereas the releasing time is decided by the service rate of the Web server. The evaluation shows the scheduling algorithm can provide service differentiation and improve server throughput and user-perceived latency. When the weight ratio 6:3:1 is assigned to three service classes, the QoS Website gateway makes them get 60%, 30%, and 10% of the overall throughput as expected, regardless whatever page sizes. In addition, the throughput and the user-perceived latency of the class with the largest weight can be improved by up to 176% and 69% of the QoS-disabled values, respectively.", "paper_title": "Request Scheduling for Differentiated QoS at Website Gateway", "paper_id": "WOS:000207999700006"}