{"auto_keywords": [{"score": 0.041910472675089065, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "nearest_neighbor_searches"}, {"score": 0.004723322467153553, "phrase": "gpu_a_massively_parallel_approach"}, {"score": 0.004458722048888919, "phrase": "gpu_grid-based_data_structure"}, {"score": 0.004401955895933783, "phrase": "massively_parallel_nearest_neighbor_searches"}, {"score": 0.004155283263388382, "phrase": "real-time_performance"}, {"score": 0.003922378980031565, "phrase": "grid_construction"}, {"score": 0.003872414709826833, "phrase": "nearest_neighbors"}, {"score": 0.003608732492631878, "phrase": "memory_transfer"}, {"score": 0.0035627492415494216, "phrase": "device_and_system_memories"}, {"score": 0.003494866798828308, "phrase": "overall_performance"}, {"score": 0.0034282732966589478, "phrase": "proposed_algorithm"}, {"score": 0.0033200826267264383, "phrase": "different_applications"}, {"score": 0.0032777653153451265, "phrase": "static_and_dynamic_scenarios"}, {"score": 0.003154012038613403, "phrase": "three-dimensional_point_clouds"}, {"score": 0.002958021635132416, "phrase": "data_structure's_parameters"}, {"score": 0.0026693851900137953, "phrase": "performance_comparisons"}, {"score": 0.002601727192945944, "phrase": "previous_works"}, {"score": 0.002347775213789611, "phrase": "real-time_point-based_rendering_application"}], "paper_keywords": ["Nearest neighbor query", " Massive parallel programming", " KNN", " ANN", " Point-Based Rendering"], "paper_abstract": "We introduce a GPU grid-based data structure for massively parallel nearest neighbor searches for dynamic point clouds. The implementation provides real-time performance and it is executed on GPU, both grid construction and nearest neighbors (approximate or exact) searches. This minimizes the memory transfer between device and system memories, improving overall performance. The proposed algorithm may be used across different applications with static and dynamic scenarios. Moreover, our data structure supports three-dimensional point clouds and given its dynamic nature, the user can change the data structure's parameters at runtime. The same applies to the number of neighbors to be found. Performance comparisons were made against previous works, endorsing the benefits of our solution. Finally, we were able to develop a real-time Point-Based Rendering application for validation of the data structure. Its drawbacks and data distribution's impact on performance were analysed and some directions for further investigation are given.", "paper_title": "Nearest Neighbor Searches on the GPU A Massively Parallel Approach for Dynamic Point Clouds", "paper_id": "WOS:000302286100004"}