{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "claw-free_graphs"}, {"score": 0.010820147823917652, "phrase": "np"}, {"score": 0.00475413908468027, "phrase": "graph_containment_problem"}, {"score": 0.004576253356889219, "phrase": "host_graph"}, {"score": 0.004276216827737399, "phrase": "specified_graph_operations"}, {"score": 0.004204320052179726, "phrase": "edge_deletions"}, {"score": 0.00416882434439484, "phrase": "edge_contractions"}, {"score": 0.004133627071344356, "phrase": "vertex_deletions"}, {"score": 0.004098725744818192, "phrase": "vertex_dissolutions"}, {"score": 0.004046923261950549, "phrase": "graph_operations"}, {"score": 0.003639835714755229, "phrase": "topological_minors"}, {"score": 0.0031110402375026016, "phrase": "line_graphs"}, {"score": 0.0028822153400215973, "phrase": "natural_question"}, {"score": 0.0028216858159564808, "phrase": "computational_complexity"}, {"score": 0.002750721367040336, "phrase": "target_graph"}, {"score": 0.002548331088496964, "phrase": "host_graphs"}, {"score": 0.002391067964886602, "phrase": "h-contractibility_problem"}, {"score": 0.0023013968622710847, "phrase": "fixed_target_graph_h"}, {"score": 0.0021049977753042253, "phrase": "general_graphs"}], "paper_keywords": ["claw-free graph", " contractibility", " containment relation"], "paper_abstract": "A graph containment problem is that of deciding whether one graph called the host graph can be modified into some other graph called the target graph by using a number of specified graph operations. We consider edge deletions, edge contractions, vertex deletions and vertex dissolutions as possible graph operations permitted. By allowing any combination of these four operations we capture the following problems: testing on (induced) minors, (induced) topological minors, (induced) subgraphs, (induced) spanning subgraphs, dissolutions and contractions. We show that these problems stay NP-complete even when the host and target belong to the class of line graphs, which form a subclass of the class of claw-free graphs, i.e., graphs with no induced 4-vertex star. A natural question is to study the computational complexity of these problems if the target graph is assumed to be fixed. We show that these problems may become computationally easier when the host graphs are restricted to be claw-free. In particular we show that the H-CONTRACTIBILITY problem, which asks whether a given host graph contains a fixed target graph H as a contraction, is polynomial-time solvable on claw-free graphs when H is the 4-vertex path P 4, whereas on general graphs P-4-CONTRACTIBILITY is known to be NP-complete.", "paper_title": "A Note on Contracting Claw-Free Graphs", "paper_id": "WOS:000327033900016"}