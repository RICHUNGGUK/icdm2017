{"auto_keywords": [{"score": 0.04086065944212716, "phrase": "behavioral_distance"}, {"score": 0.00481495049065317, "phrase": "output_voting"}, {"score": 0.004688989566904871, "phrase": "hmm-based_behavioral_distance"}, {"score": 0.004526129302830441, "phrase": "code-injection_attacks"}, {"score": 0.0044272138900038095, "phrase": "vast_majority"}, {"score": 0.004254558771304349, "phrase": "\"_attacks"}, {"score": 0.004179991181159956, "phrase": "injected_code"}, {"score": 0.004106725110985659, "phrase": "original_server_software"}, {"score": 0.004016938499717623, "phrase": "correct_service_responses"}, {"score": 0.0032919615578986816, "phrase": "mimicry_attacks"}, {"score": 0.003163439005885435, "phrase": "novel_approach"}, {"score": 0.003135564707433078, "phrase": "behavioral_distance_measurement"}, {"score": 0.0030942116765996426, "phrase": "new_type"}, {"score": 0.003066945490483524, "phrase": "hidden_markov_model"}, {"score": 0.0029602552900111433, "phrase": "new_approach"}, {"score": 0.00289546142998427, "phrase": "detection_capability"}, {"score": 0.002832081745025006, "phrase": "synthetic_workloads"}, {"score": 0.002807118943000936, "phrase": "recorded_workloads"}, {"score": 0.00278237555651743, "phrase": "production_web"}, {"score": 0.0027578496677536373, "phrase": "game_servers"}, {"score": 0.0026501241093379786, "phrase": "substantially_greater_accuracy"}, {"score": 0.002615156460073562, "phrase": "prior_proposal"}, {"score": 0.0024579623598183355, "phrase": "new_architecture"}, {"score": 0.002289821830549781, "phrase": "intrusion-tolerant_web_and_game_servers"}, {"score": 0.0022496114364599328, "phrase": "trace-driven_simulations"}, {"score": 0.0021049977753042253, "phrase": "stealthy_mimicry_attacks"}], "paper_keywords": ["Intrusion detection", " replicated system", " output voting", " system call", " behavioral distance"], "paper_abstract": "Many host-based anomaly detection techniques have been proposed to detect code-injection attacks on servers. The vast majority, however, are susceptible to \"mimicry\" attacks in which the injected code masquerades as the original server software, including returning the correct service responses, while conducting its attack. \"Behavioral distance,\" by which two diverse replicas processing the same inputs are continually monitored to detect divergence in their low-level (system-call) behaviors and hence potentially the compromise of one of them, has been proposed for detecting mimicry attacks. In this paper, we present a novel approach to behavioral distance measurement using a new type of Hidden Markov Model, and present an architecture realizing this new approach. We evaluate the detection capability of this approach using synthetic workloads and recorded workloads of production web and game servers, and show that it detects intrusions with substantially greater accuracy than a prior proposal on measuring behavioral distance. We also detail the design and implementation of a new architecture, which takes advantage of virtualization to measure behavioral distance. We apply our architecture to implement intrusion-tolerant web and game servers, and through trace-driven simulations demonstrate that it experiences moderate performance costs even when thresholds are set to detect stealthy mimicry attacks.", "paper_title": "Beyond Output Voting: Detecting Compromised Replicas Using HMM-Based Behavioral Distance", "paper_id": "WOS:000265782700002"}