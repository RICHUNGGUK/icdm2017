{"auto_keywords": [{"score": 0.03527393672202495, "phrase": "performance_indicators"}, {"score": 0.00481495049065317, "phrase": "adaptable_component-based_applications"}, {"score": 0.0045108906244892165, "phrase": "customizable_systems"}, {"score": 0.004295459433506106, "phrase": "complex_software_systems"}, {"score": 0.0042489946866108895, "phrase": "unpredictable_execution_environments"}, {"score": 0.004135010810625326, "phrase": "general_framework"}, {"score": 0.0037697665240643066, "phrase": "desired_behavior"}, {"score": 0.003589602322126282, "phrase": "system's_target_behavior"}, {"score": 0.00349324530379071, "phrase": "high-level_policy"}, {"score": 0.003290237137651949, "phrase": "decision_process"}, {"score": 0.0030654278282822027, "phrase": "available_adaptations"}, {"score": 0.0027491084541806823, "phrase": "online_phases"}, {"score": 0.002631892325004253, "phrase": "component_adaptations"}, {"score": 0.0025334249463305875, "phrase": "established_goals"}, {"score": 0.0024519545383399773, "phrase": "execution_context"}, {"score": 0.0023730978395564116, "phrase": "corresponding_rules"}, {"score": 0.002210814150677161, "phrase": "experimental_results"}, {"score": 0.00217496508306238, "phrase": "prototype_framework"}, {"score": 0.0021049977753042253, "phrase": "web-based_application"}], "paper_keywords": ["Adaptive systems", " self-management", " autonomic computing", " goal policies"], "paper_abstract": "The problem of self-optimization and adaptation in the context of customizable systems is becoming increasingly important with the emergence of complex software systems and unpredictable execution environments. Here, a general framework for automatically deciding on when and how to adapt a system whenever it deviates from the desired behavior is presented. In this framework, the system's target behavior is described as a high-level policy that establishes goals for a set of performance indicators. The decision process is based on information provided independently for each component that describes the available adaptations, their impact on performance indicators, and any limitations or requirements. The technique consists of both offline and online phases. Offline, rules are generated specifying component adaptations that may help to achieve the established goals when a given change in the execution context occurs. Online, the corresponding rules are evaluated when a change occurs to choose which adaptations to perform. Experimental results using a prototype framework in the context of a web-based application demonstrate the effectiveness of this approach.", "paper_title": "Self-Management of Adaptable Component-Based Applications", "paper_id": "WOS:000315520700007"}