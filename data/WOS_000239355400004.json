{"auto_keywords": [{"score": 0.0324337131484804, "phrase": "mrf"}, {"score": 0.00481495049065317, "phrase": "rearrangement_overhead"}, {"score": 0.00476697427418509, "phrase": "simd_architectures"}, {"score": 0.004719473826242326, "phrase": "single-instruction_multiple-data"}, {"score": 0.004556901872357751, "phrase": "inexpensive_way"}, {"score": 0.004466519142879166, "phrase": "data-level_parallelism"}, {"score": 0.004291073117901643, "phrase": "performance_improvement"}, {"score": 0.004205940624913343, "phrase": "simd_instructions"}, {"score": 0.004101886428528311, "phrase": "frequently_many_overhead_instructions"}, {"score": 0.0038819041309353024, "phrase": "simd_processing"}, {"score": 0.0036007478932719417, "phrase": "first_technique"}, {"score": 0.0033905067962602515, "phrase": "media_register"}, {"score": 0.0031765314093444956, "phrase": "conversion_overhead"}, {"score": 0.003129096013910623, "phrase": "second_technique"}, {"score": 0.003097865379563127, "phrase": "matrix_register_file"}, {"score": 0.002816246391862638, "phrase": "register_file"}, {"score": 0.0022925278792429553, "phrase": "simplescalar_toolset"}, {"score": 0.0021049977753042253, "phrase": "conventional_simd_instruction_set_extension"}], "paper_keywords": ["embedded media processors", " multimedia kernels", " register file", " subword parallelism"], "paper_abstract": "Single-Instruction Multiple-Data (SIMD) instructions provide an inexpensive way to exploit the Data-Level Parallelism in multimedia applications. However, the performance improvement obtained by employing SIMD instructions is often limited because frequently many overhead instructions are required to bring data in a form amenable to SIMD processing. In this paper, we employ two techniques to overcome this limitation. The first technique, extended subwords, uses four extra bits for every byte in a media register. This allows many SIMD operations to be performed without overflow and avoids packing/unpacking conversion overhead. The second technique, Matrix Register File (MRF), allows flexible row-wise as well as column-wise access to the register file. It is useful for many two-dimensional multimedia algorithms such as the (I) Discrete Cosine Transform, 2 x 2 Haar Transform, and pixel padding. In addition, we propose a few new media instructions. Experimental results obtained by extending the SimpleScalar toolset show that these techniques improve performance by up to a factor of 4.5 compared to a conventional SIMD instruction set extension.", "paper_title": "Avoiding conversion and rearrangement overhead in SIMD architectures", "paper_id": "WOS:000239355400004"}