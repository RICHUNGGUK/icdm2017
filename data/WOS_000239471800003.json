{"auto_keywords": [{"score": 0.04202655290275344, "phrase": "tournament_selection"}, {"score": 0.03439341896637144, "phrase": "ea"}, {"score": 0.00481495049065317, "phrase": "simple_observations"}, {"score": 0.004764435715755502, "phrase": "popular_selection_method"}, {"score": 0.0047310525657970615, "phrase": "evolutionary_algorithms"}, {"score": 0.004599831967997116, "phrase": "previously-unknown_source"}, {"score": 0.004333044313882044, "phrase": "eas"}, {"score": 0.0038309141193444015, "phrase": "considerable_savings"}, {"score": 0.0037773674108196376, "phrase": "fitness_evaluations"}, {"score": 0.003737697279708501, "phrase": "fitness_evaluation"}, {"score": 0.003621160116056119, "phrase": "non-trivial_problem"}, {"score": 0.0035082436540296406, "phrase": "computer_time"}, {"score": 0.0033988361874354306, "phrase": "rule-based_systems"}, {"score": 0.0032013710938940424, "phrase": "evolutionary_search"}, {"score": 0.0031677308747058187, "phrase": "inference_process"}, {"score": 0.0031344430376015033, "phrase": "backward-chaining_mode"}, {"score": 0.003101503914610488, "phrase": "resulting_backward-chaining_ea"}, {"score": 0.002994178996584381, "phrase": "last_generation"}, {"score": 0.002931569771634119, "phrase": "depth-first_search"}, {"score": 0.002800358658581207, "phrase": "efficient_macro-selection"}, {"score": 0.0026844452074327265, "phrase": "fitter_solutions"}, {"score": 0.002609840513713399, "phrase": "faster_algorithm"}, {"score": 0.0025106241866273897, "phrase": "population_based_search"}, {"score": 0.0024408384127819734, "phrase": "crossover_and_mutation"}, {"score": 0.0023070189467375374, "phrase": "markov_chain_theory"}, {"score": 0.0021959459702913654, "phrase": "standard_and_back-ward_chaining_versions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["evolutionary computation", " genetic algorithm", " genetic programming", " efficient search", " backward chaining", " tournament selection"], "paper_abstract": "Starting from some simple observations on a popular selection method in Evolutionary Algorithms (EAs)-tournament selection-we highlight a previously-unknown source of inefficiency. This leads us to rethink the order in which operations are performed within EAs, and to suggest an algorithm-the EA with efficient macro-selection-that avoids the inefficiencies associated with tournament selection. This algorithm has the same expected behaviour as the standard EA but yields considerable savings in terms of fitness evaluations. Since fitness evaluation typically dominates the resources needed to solve any non-trivial problem, these savings translate into a reduction in computer time. Noting the connection between the algorithm and rule-based systems, we then further modify the order of operations in the EA, effectively turning the evolutionary search into an inference process operating in backward-chaining mode. The resulting backward-chaining EA creates and evaluates individuals recursively, backward from the last generation to the first, using depth-first search and backtracking. It is even more powerful than the EA with efficient macro-selection in that it shares all its benefits, but it also provably finds fitter solutions sooner, i.e., it is a faster algorithm. These algorithms can be applied to any form of population based search, any representation, fitness function, crossover and mutation, provided they use tournament selection. We analyse their behaviour and benefits both theoretically, using Markov chain theory and space/time complexity analysis, and empirically, by performing a variety of experiments with standard and back-ward chaining versions of genetic algorithms and genetic programming. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Backward-chaining evolutionary algorithms", "paper_id": "WOS:000239471800003"}