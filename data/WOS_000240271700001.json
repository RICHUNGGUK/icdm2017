{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scala_type_checking"}, {"score": 0.004248294537944227, "phrase": "minimal_core_calculus"}, {"score": 0.003940706575253453, "phrase": "interesting_constructs"}, {"score": 0.0036553070575015344, "phrase": "scala_programming_language"}, {"score": 0.0021049977753042253, "phrase": "type_assignment"}], "paper_keywords": [""], "paper_abstract": "We present a minimal core calculus that captures interesting constructs of the Scala programming language: nested classes, abstract types, mixin composition, and path dependent types. We show that the problems of type assignment and subtyping in this calculus are decidable.", "paper_title": "A core calculus for scala type checking", "paper_id": "WOS:000240271700001"}