{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "xml_data_sources"}, {"score": 0.012016544000052783, "phrase": "approximate_match"}, {"score": 0.0047839735747931605, "phrase": "approximate_joins"}, {"score": 0.00475326594494822, "phrase": "xml"}, {"score": 0.004662036750452837, "phrase": "data_interchange_standard"}, {"score": 0.0042591158963728665, "phrase": "multiple_sources"}, {"score": 0.003954229201647876, "phrase": "challenging_aspect"}, {"score": 0.0038783340581919797, "phrase": "xml_document_structure"}, {"score": 0.003816197777388722, "phrase": "approximately_or_exactly_the_same_information"}, {"score": 0.0034974064973871833, "phrase": "join_operation"}, {"score": 0.003353521531649663, "phrase": "xml_documents"}, {"score": 0.003331915219811852, "phrase": "well_defined_notions"}, {"score": 0.0032051601987130207, "phrase": "metric_properties"}, {"score": 0.0030435998319355883, "phrase": "reference_sets"}, {"score": 0.0029183300121987422, "phrase": "data_elements"}, {"score": 0.0028715299874549245, "phrase": "data_space"}, {"score": 0.0028072645684856313, "phrase": "good_choice"}, {"score": 0.0026144780997686464, "phrase": "tree_edit_distance"}, {"score": 0.00250682585023182, "phrase": "well_known_index_structures"}, {"score": 0.0023650305205893353, "phrase": "index_structures"}, {"score": 0.0022312377180023282, "phrase": "practical_utility"}, {"score": 0.002202547013259953, "phrase": "large_collections"}, {"score": 0.0021883400011393564, "phrase": "real_and_synthetic_xml_data_sets"}, {"score": 0.0021186648667919044, "phrase": "performance_benefits"}], "paper_keywords": ["algorithms", " experimentation", " performance", " theory", " data integration", " tree edit distance", " XML", " joins", " approximate joins"], "paper_abstract": "XML is widely recognized as the data interchange standard of tomorrow because of its ability to represent data from a variety of sources. Hence, XML is likely to be the format through which data from multiple sources is integrated. In this article, we study the problem of integrating XML data sources through correlations realized as join operations. A challenging aspect of this operation is the XML document structure. Two documents might convey approximately or exactly the same information but may be quite different in structure. Consequently, an approximate match in structure, in addition to content, has to be folded into the join operation. We quantify an approximate match in structure and content for pairs of XML documents using well defined notions of distance. We show how notions of distance that have metric properties can be incorporated in a framework for joins between XML data sources and introduce the idea of reference sets to facilitate this operation. Intuitively, a reference set consists of data elements used to project the data space. We characterize what constitutes a good choice of a reference set, and we propose sampling- based algorithms to identify them. We then instantiate our join framework using the tree edit distance between a pair of trees. We next turn our attention to utilizing well known index structures to improve the performance of approximate XML join operations. We present a methodology enabling adaptation of index structures for this problem, and we instantiate it in terms of the R-tree. We demonstrate the practical utility of our solutions using large collections of real and synthetic XML data sets, varying parameters of interest, and highlighting the performance benefits of our approach.", "paper_title": "Integrating XML data sources using approximate joins", "paper_id": "WOS:000238087800006"}