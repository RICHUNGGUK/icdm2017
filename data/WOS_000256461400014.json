{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "boxed_ambients"}, {"score": 0.00469740813902244, "phrase": "richer_forms"}, {"score": 0.004664352260912174, "phrase": "information_exchange"}, {"score": 0.004518442937844318, "phrase": "prominent_role"}, {"score": 0.004408106853358092, "phrase": "academic_community"}, {"score": 0.004346266306175988, "phrase": "security_problems"}, {"score": 0.003923023699005215, "phrase": "mobile_processes"}, {"score": 0.0038271712887391015, "phrase": "access_privileges"}, {"score": 0.003478813491904962, "phrase": "reconfigurable_nested_structure"}, {"score": 0.0033817999428800457, "phrase": "boxed_ambient_calculus"}, {"score": 0.003334309053314909, "phrase": "distributed_role-based_access_control_mechanism"}, {"score": 0.003095674983836725, "phrase": "activated_roles"}, {"score": 0.0028037753646260937, "phrase": "process's_owner"}, {"score": 0.0027063176464371115, "phrase": "security_violations"}, {"score": 0.002548331088496964, "phrase": "authorizing_roles"}, {"score": 0.0024423826953133844, "phrase": "communication_port"}, {"score": 0.002259426425685765, "phrase": "static_type_system"}, {"score": 0.0022355610034493225, "phrase": "untyped_transition_semantics"}, {"score": 0.0021350169717509714, "phrase": "well-typed_program"}, {"score": 0.0021049977753042253, "phrase": "dynamic_security_checks"}], "paper_keywords": ["mobile computing", " process calculi", " security", " ambients", " access control", " RBAC", " type systems", " types"], "paper_abstract": "Our society is increasingly moving towards richer forms of information exchange where mobility of processes and devices plays a prominent role. This tendency has prompted the academic community to study the security problems arising from such mobile environments, and in particular, the security policies regulating who can access the information in question. In this paper we describe a calculus for mobile processes and propose a mechanism for specifying access privileges based on a combination of the identity of the users seeking access, their credentials, and the location from which they seek it, within a reconfigurable nested structure. We define BACI(R), a boxed ambient calculus extended with a Distributed Role-Based Access Control mechanism where each ambient controls its own access policy. A process in BACI(R) is associated with an owner and a set of activated roles that grant permissions for mobility and communication. The calculus includes primitives to activate and deactivate roles. The behavior of these primitives is determined by the process's owner, its current location and its currently activated roles. We consider two forms of security violations that our type system prevents: (1) attempting to move into an ambient without having the authorizing roles granting entry activated and (2) trying to use a communication port without having the roles required for access activated. We accomplish (1) and (2) by giving a static type system, an untyped transition semantics, and a typed transition semantics. We then show that a well-typed program never violates the dynamic security checks. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Role-based access control for boxed ambients", "paper_id": "WOS:000256461400014"}