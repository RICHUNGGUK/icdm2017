{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "general_logic_programs"}, {"score": 0.004652016085325825, "phrase": "heuristic_framework"}, {"score": 0.004525629293824217, "phrase": "undecidable_termination_problem"}, {"score": 0.004463723624910583, "phrase": "logic_programs"}, {"score": 0.003997891221012094, "phrase": "termination_prediction"}, {"score": 0.003809628721278519, "phrase": "logic_program"}, {"score": 0.0036301992752948956, "phrase": "non-termination_proof"}, {"score": 0.003459191419478298, "phrase": "necessary_and_sufficient_characterization"}, {"score": 0.003097865379563127, "phrase": "arbitrary_nonfloundering_queries"}, {"score": 0.0029722900280316216, "phrase": "termination_prediction_tool"}, {"score": 0.0029114187110123105, "phrase": "quite_satisfactory_experimental_results"}, {"score": 0.0028321862184182913, "phrase": "five_programs"}, {"score": 0.0027551040319267446, "phrase": "experiment_time_limit"}, {"score": 0.0021789201445496257, "phrase": "nti"}, {"score": 0.002149045596425773, "phrase": "polytool"}, {"score": 0.0021049977753042253, "phrase": "talp."}], "paper_keywords": ["Logic programming", " termination analysis", " loop checking", " moded queries", " termination prediction"], "paper_abstract": "We present a heuristic framework for attacking the undecidable termination problem of logic programs, as an alternative to current termination/nontermination proof approaches. We introduce an idea of termination prediction, which predicts termination of a logic program in case that neither a termination nor a non-termination proof is applicable. We establish a necessary and sufficient characterization of infinite (generalized) SLDNF-derivations with arbitrary (concrete or moded) queries, and develop an algorithm that predicts termination of general logic programs with arbitrary nonfloundering queries. We have implemented a termination prediction tool and obtained quite satisfactory experimental results. Except for five programs which break the experiment time limit, Our prediction is 100% correct for all 296 benchmark programs of the Termination Competition 2007, of which 18 programs cannot be proved by any of the existing state-of-the-art analyzers like AProVE07, NTI, Polytool, and TALP.", "paper_title": "Termination prediction for general logic programs", "paper_id": "WOS:000271985400002"}