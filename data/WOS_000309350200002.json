{"auto_keywords": [{"score": 0.049577424685072605, "phrase": "gpgpu_applications"}, {"score": 0.04834686887008023, "phrase": "gpgpu"}, {"score": 0.00481495049065317, "phrase": "identifying_potential_benefits"}, {"score": 0.004311109608629196, "phrase": "root_cause"}, {"score": 0.004265953661191515, "phrase": "performance_bottlenecks"}, {"score": 0.004068510313497539, "phrase": "performance_analysis_framework"}, {"score": 0.0037397086147485897, "phrase": "profiling_tools"}, {"score": 0.003623352647973122, "phrase": "traditional_tools"}, {"score": 0.0030772505522663612, "phrase": "root_causes"}, {"score": 0.002740253546178098, "phrase": "analytical_performance_model"}, {"score": 0.0025994945418484935, "phrase": "programmer-interpretable_metrics"}, {"score": 0.002518525107994039, "phrase": "static_and_dynamic_profiling"}, {"score": 0.002440071551819324, "phrase": "particular_input_code"}, {"score": 0.002326938965568362, "phrase": "potential_performance_benefits"}, {"score": 0.0021049977753042253, "phrase": "real_codes"}], "paper_keywords": ["Measurement", " Performance", " CUDA", " GPGPU architecture", " Analytical model", " Performance benefit prediction", " Performance prediction"], "paper_abstract": "Tuning code for GPGPU and other emerging many-core platforms is a challenge because few models or tools can precisely pinpoint the root cause of performance bottlenecks. In this paper, we present a performance analysis framework that can help shed light on such bottlenecks for GPGPU applications. Although a handful of GPGPU profiling tools exist, most of the traditional tools, unfortunately, simply provide programmers with a variety of measurements and metrics obtained by running applications, and it is often difficult to map these metrics to understand the root causes of slowdowns, much less decide what next optimization step to take to alleviate the bottleneck. In our approach, we first develop an analytical performance model that can precisely predict performance and aims to provide programmer-interpretable metrics. Then, we apply static and dynamic profiling to instantiate our performance model for a particular input code and show how the model can predict the potential performance benefits. We demonstrate our framework on a suite of micro-benchmarks as well as a variety of computations extracted from real codes.", "paper_title": "A Performance Analysis Framework for Identifying Potential Benefits in GPGPU Applications", "paper_id": "WOS:000309350200002"}