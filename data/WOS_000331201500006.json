{"auto_keywords": [{"score": 0.04881990207677595, "phrase": "uhd."}, {"score": 0.02810259197521158, "phrase": "implemented_system"}, {"score": 0.014580123809284772, "phrase": "lte"}, {"score": 0.013622892932737935, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "lte_system"}, {"score": 0.0047602693158272655, "phrase": "sdr_platform"}, {"score": 0.004724203196331816, "phrase": "cuda"}, {"score": 0.004495996972278015, "phrase": "long_term_evolution"}, {"score": 0.004377719094086111, "phrase": "software_defined_radio"}, {"score": 0.004344523539416822, "phrase": "sdr"}, {"score": 0.004262539473250432, "phrase": "conventional_personal_computer"}, {"score": 0.004198082549566806, "phrase": "graphic_processing_unit"}, {"score": 0.004010477922833839, "phrase": "ursp_hardware_driver"}, {"score": 0.003980032599437366, "phrase": "uhd"}, {"score": 0.0039049226745413224, "phrase": "sdr_software_modem"}, {"score": 0.0038605361756636667, "phrase": "radio_frequency_transceiver"}, {"score": 0.00378767277402891, "phrase": "central_processing_unit"}, {"score": 0.003443402656397069, "phrase": "transceiver_chain"}, {"score": 0.003314591878914152, "phrase": "simple_cognitive_radio_engine"}, {"score": 0.0031422859551159506, "phrase": "software_modem"}, {"score": 0.003047865053078826, "phrase": "parallel_computing"}, {"score": 0.0028893844749296863, "phrase": "single_instruction_multiple_data_architecture"}, {"score": 0.0028565327406261222, "phrase": "gpu."}, {"score": 0.0027706507124407686, "phrase": "turbo_decoder"}, {"score": 0.00257691309462969, "phrase": "computation_time"}, {"score": 0.002537880772794665, "phrase": "unified_device_architecture_profiler"}, {"score": 0.0024242869058849446, "phrase": "total_processing_time"}, {"score": 0.0023966900120342364, "phrase": "single_frame"}, {"score": 0.0023424328921363585, "phrase": "lte_data"}, {"score": 0.0021211305348270413, "phrase": "real-time_processing"}], "paper_keywords": ["SDR", " GPU", " Parallelization", " Turbo decoder", " LTE", " CUDA"], "paper_abstract": "In this paper, we present an implementation of a long term evolution (LTE) system on a software defined radio (SDR) platform using a conventional personal computer that adopts a graphic processing unit (GPU) and a universal software radio peripheral2 (USRP2) with a URSP hardware driver (UHD) to implement an SDR software modem and a radio frequency transceiver, respectively. The central processing unit executes C++ control code that can access the USRP2 via the UHD. We have adopted the Ettus Research UHD due to its high degree of flexibility in the design of the transceiver chain. By taking advantage of this benefit, a simple cognitive radio engine has been implemented using libraries provided by the UHD. We have implemented the software modem on a GPU that is suitable for parallel computing due to its powerful arithmetic and logic units. A parallel programming method is proposed that exploits the single instruction multiple data architecture of the GPU. We focus on the implementation of the Turbo decoder due to its high computational requirements and difficulty in parallelizing the algorithm. The implemented system is analyzed primarily in terms of computation time using the compute unified device architecture profiler. From our experimental tests using the implemented system, we have measured the total processing time for a single frame of both transmit and receive LTE data. We find that it takes 5.00 and 8.58 ms for transmit and receive, respectively. This confirms that the implemented system is capable of real-time processing of all the baseband signal processing algorithms required for LTE systems.", "paper_title": "Implementation of LTE system on an SDR platform using CUDA and UHD", "paper_id": "WOS:000331201500006"}