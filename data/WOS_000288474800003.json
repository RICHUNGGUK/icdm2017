{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "probabilistic_databases"}, {"score": 0.006919191608712043, "phrase": "ptime."}, {"score": 0.005508758472747976, "phrase": "partial_representation"}, {"score": 0.004610058444728656, "phrase": "recent_yet_fundamental_results"}, {"score": 0.0042489946866108895, "phrase": "special_instance"}, {"score": 0.004203030435498069, "phrase": "general_purpose_probabilistic_inference"}, {"score": 0.0038948525410795517, "phrase": "query_evaluation"}, {"score": 0.003048782877550259, "phrase": "aggressive_use"}, {"score": 0.0030157628075954588, "phrase": "previously_computed_query_results"}, {"score": 0.002235040467016128, "phrase": "subsequent_queries"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Probabilistic databses", " Query evaluation", " Views"], "paper_abstract": "We review in this paper some recent yet fundamental results on evaluating queries over probabilistic databases. While one can see this problem as a special instance of general purpose probabilistic inference, we describe in this paper two key database specific techniques that significantly reduce the complexity of query evaluation on probabilistic databases. The first is the separation of the query and the data: we show here that by doing so, one can identify queries whose data complexity is #P-hard, and queries whose data complexity is in PTIME. The second is the aggressive use of previously computed query results (materialized views): in particular, by rewriting a query in terms of views, one can reduce its complexity from #P-complete to PTIME. We describe a notion of a partial representation for views, and show that, once computed and stored, this partial representation can be used to answer subsequent queries on the probabilistic databases. evaluation. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Queries and materialized views on probabilistic databases", "paper_id": "WOS:000288474800003"}