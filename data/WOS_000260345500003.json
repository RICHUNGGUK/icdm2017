{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "java"}, {"score": 0.01571907411623713, "phrase": "state_machines"}, {"score": 0.014795478513083384, "phrase": "swingstates"}, {"score": 0.013591643646715492, "phrase": "advanced_interaction_techniques"}, {"score": 0.004669845451682529, "phrase": "swing_toolkit"}, {"score": 0.004234129588974058, "phrase": "graphical_user_interfaces"}, {"score": 0.004081385289516914, "phrase": "java_platform"}, {"score": 0.0038624981944755813, "phrase": "finite-state_machines"}, {"score": 0.0036329805216306576, "phrase": "interactive_systems"}, {"score": 0.0033961782274326948, "phrase": "existing_swing_widgets"}, {"score": 0.003253560798692431, "phrase": "new_canvas_widget"}, {"score": 0.0031747618267940155, "phrase": "rich_graphical_model"}, {"score": 0.003097865379563127, "phrase": "brand_new_widgets"}, {"score": 0.0030043508031729277, "phrase": "arbitrary_input_devices"}, {"score": 0.002949598537993663, "phrase": "novel_interaction_techniques"}, {"score": 0.002791239714439304, "phrase": "pressure-sensitive_input"}, {"score": 0.0025615908073796027, "phrase": "benchmark_approach"}, {"score": 0.002293806844411685, "phrase": "non-expert_developers"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["human-computer interaction", " graphical user interfaces", " user interface toolkits", " finite-state machines", " Java Swing"], "paper_abstract": "This article describes SwingStates, a Java toolkit designed to facilitate the development of graphical user interfaces and bring advanced interaction techniques to the Java platform. SwingStates is based on the use of finite-state machines specified directly in Java to describe the behavior of interactive systems. State machines can be used to redefine the behavior of existing Swing widgets or, in combination with a new canvas widget that features a rich graphical model, to create brand new widgets. SwingStates also supports arbitrary input devices to implement novel interaction techniques based, for example, on bi-manual or pressure-sensitive input. We have used SwingStates in several Master's-level classes over the past two years and have developed a benchmark approach to evaluate the toolkit in this context. The results demonstrate that SwingStates can be used by non-expert developers with little training to successfully implement advanced interaction techniques. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "SwingStates: adding state machines to Java and the Swing toolkit", "paper_id": "WOS:000260345500003"}