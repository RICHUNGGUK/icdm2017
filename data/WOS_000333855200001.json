{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "scientific_applications"}, {"score": 0.004688989566904871, "phrase": "web_services"}, {"score": 0.004506171772318298, "phrase": "temporal_compositions"}, {"score": 0.004254558771304349, "phrase": "paradigm_shift"}, {"score": 0.0042171108629745655, "phrase": "different_workflow_management_systems"}, {"score": 0.004016938499717623, "phrase": "centralized_static_systems"}, {"score": 0.003911771812701971, "phrase": "decentralized_failure-prone_platforms"}, {"score": 0.003742554019950264, "phrase": "large_distributed_computing_platforms"}, {"score": 0.003676926952533304, "phrase": "new_issues"}, {"score": 0.0032057142600527, "phrase": "new_programming_models"}, {"score": 0.003135564707433078, "phrase": "autonomic_self-coordination"}, {"score": 0.003066945490483524, "phrase": "dynamic_platform"}, {"score": 0.002986575805559931, "phrase": "rule-based_computing_models"}, {"score": 0.0027094427948305515, "phrase": "autonomic_adaptation"}, {"score": 0.0021906130276146325, "phrase": "experimental_validation"}, {"score": 0.002161695357601592, "phrase": "chemistry-inspired_scientific_workflow_management_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Service coordination", " Workflow execution", " Nature-inspired computing", " Rule-based programming", " Decentralization"], "paper_abstract": "With the proliferation of Web services, scientific applications are more and more designed as temporal compositions of services, commonly referred to as workflows. To address this paradigm shift, different workflow management systems have been proposed. While their efficiency has been established over centralized static systems, it is questionable over decentralized failure-prone platforms. Scientific applications recently started to be deployed over large distributed computing platforms, leading to new issues, like elasticity, i.e., the possibility to dynamically refine, at runtime, the amount of resources dedicated to an application. This raised again the demand for new programming models, able to express autonomic self-coordination of services in a dynamic platform. Nature-inspired, rule-based computing models recently gained a lot of attention in this context. They are able to naturally express parallelism, distribution, and autonomic adaptation. While their high expressiveness and adequacy for this context has been established, such models severely suffer from a lack of proof of concepts. In this paper, we concretely show how to leverage such models in this context. We focus on the design, the implementation and the experimental validation of a chemistry-inspired scientific workflow management system. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Rule-driven service coordination middleware for scientific applications", "paper_id": "WOS:000333855200001"}