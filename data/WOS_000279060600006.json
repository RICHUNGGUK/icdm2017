{"auto_keywords": [{"score": 0.04356213163852715, "phrase": "shortest_paths"}, {"score": 0.00481495049065317, "phrase": "recursive_views"}, {"score": 0.0046996089843291755, "phrase": "networks"}, {"score": 0.004632968695963776, "phrase": "data_management_community"}, {"score": 0.004515467468684217, "phrase": "declarative_network_routing"}, {"score": 0.004476963405985556, "phrase": "distributed_acquisition"}, {"score": 0.004270960586542813, "phrase": "contiguous_regions"}, {"score": 0.004005176784823524, "phrase": "peer_stream_systems"}, {"score": 0.003954030683259778, "phrase": "transitive_relationships"}, {"score": 0.0038702288460744274, "phrase": "distributed_sources"}, {"score": 0.0037558704408683905, "phrase": "fundamental_operation"}, {"score": 0.0036448787596988423, "phrase": "dynamic_network_state"}, {"score": 0.003331134183901191, "phrase": "least_costly_paths"}, {"score": 0.0032465423581390625, "phrase": "computing_such_views"}, {"score": 0.0030183163057929687, "phrase": "incremental_recursive_view_maintenance"}, {"score": 0.002904040426340639, "phrase": "new_stream_data"}, {"score": 0.002879237498994052, "phrase": "insert_operations"}, {"score": 0.002854645802851, "phrase": "tuple_expirations"}, {"score": 0.002746549549029177, "phrase": "compact_information"}, {"score": 0.0027230880516264685, "phrase": "tuple_derivability"}, {"score": 0.0026998264237910884, "phrase": "data_provenance"}, {"score": 0.002553382046204689, "phrase": "irrelevant_aggregation_tuples"}, {"score": 0.0025315664299815537, "phrase": "provenance-aware_operators"}, {"score": 0.002244969789802093, "phrase": "correct_answers"}, {"score": 0.0021322775033565805, "phrase": "network_router_queries"}, {"score": 0.0021049977753042253, "phrase": "significant_gains"}], "paper_keywords": ["Distributed databases", " query processing"], "paper_abstract": "The data management community has recently begun to consider declarative network routing and distributed acquisition: e. g., sensor networks that execute queries about contiguous regions, declarative networks that maintain shortest paths, and distributed and peer-to-peer stream systems that detect transitive relationships among data at the distributed sources. In each case, the fundamental operation is to maintain a view over dynamic network state. This view is typically distributed, recursive, and may contain aggregation, e. g., describing shortest paths or least costly paths. Surprisingly, solutions to computing such views are often domain-specific, expensive, and incomplete. We recast the problem as incremental recursive view maintenance given distributed streams of updates to tuples: new stream data becomes insert operations and tuple expirations become deletions. We develop techniques to maintain compact information about tuple derivability or data provenance. We complement this with techniques to reduce communication: aggregate selections to prune irrelevant aggregation tuples, provenance-aware operators that determine when tuples are no longer derivable and remove them from the view, and shipping operators that reduce the information being propagated while still maintaining correct answers. We validate our work in a distributed setting with sensor and network router queries, showing significant gains in communication overhead without sacrificing performance.", "paper_title": "Maintaining Recursive Views of Regions and Connectivity in Networks", "paper_id": "WOS:000279060600006"}