{"auto_keywords": [{"score": 0.0485813230510468, "phrase": "transactional_timing_analysis"}, {"score": 0.00481495049065317, "phrase": "physical_synthesis"}, {"score": 0.004518442937844318, "phrase": "modern_physical-synthesis_flows"}, {"score": 0.0041074234667687875, "phrase": "increasingly_aggressive_timing_optimizations"}, {"score": 0.003978866233891427, "phrase": "traditional_incremental_timing_analysis"}, {"score": 0.0037336520904376687, "phrase": "single_greatest_bottleneck"}, {"score": 0.002508073621696602, "phrase": "incremental_updates"}, {"score": 0.0021049977753042253, "phrase": "significant_timing_calculations"}], "paper_keywords": [""], "paper_abstract": "Modern physical-synthesis flows operate on very large designs and perform increasingly aggressive timing optimizations. Traditional incremental timing analysis now represents the single greatest bottleneck in such optimizations and lacks the features necessary to support them efficiently. This article describes a paradigm of transactional timing analysis, which, together with incremental updates, offers an efficient, nested undo functionality that avoids significant timing calculations.", "paper_title": "Speeding Up Physical Synthesis with Transactional Timing Analysis", "paper_id": "WOS:000282424900003"}