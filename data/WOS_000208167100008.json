{"auto_keywords": [{"score": 0.03682252724874875, "phrase": "maxwell"}, {"score": 0.009705924917535623, "phrase": "gpu"}, {"score": 0.007698515821690708, "phrase": "fpga"}, {"score": 0.004855729537351339, "phrase": "gpp"}, {"score": 0.00481495049065317, "phrase": "high-performance_quasi-monte_carlo_financial_simulation"}, {"score": 0.004663396040465122, "phrase": "gpu._quasi-monte"}, {"score": 0.004540734419151103, "phrase": "special_monte_carlo_simulation_method"}, {"score": 0.004468684611798047, "phrase": "quasi-random_or_low-discrepancy_numbers"}, {"score": 0.004081385289516914, "phrase": "traditional_monte_carlo_simulation_method"}, {"score": 0.003995226376780718, "phrase": "pseudo-random_numbers"}, {"score": 0.003869373085652601, "phrase": "higher_level"}, {"score": 0.0036100762867678415, "phrase": "massively_parallelized_quasi-monte_carlo_simulation_engine"}, {"score": 0.0035527409334589317, "phrase": "fpga-based_supercomputer"}, {"score": 0.00335016692413066, "phrase": "equivalent_graphics_processing_units"}, {"score": 0.003261934055562238, "phrase": "general_purpose_processors"}, {"score": 0.003159106878239524, "phrase": "detailed_comparison"}, {"score": 0.002884979280317279, "phrase": "financial_derivatives_pricing"}, {"score": 0.0027349450784503273, "phrase": "maxwell_machine_show"}, {"score": 0.0026771333996253783, "phrase": "equivalent_gpp-based_software_implementations"}, {"score": 0.0025514745448798385, "phrase": "speed-up_figure"}, {"score": 0.0024578219177450876, "phrase": "processing_nodes"}, {"score": 0.0022324489895237504, "phrase": "equivalent_gpu-based_implementations"}], "paper_keywords": ["Algorithms", " Economics", " Performance", " Quasi-Monte Carlo simulations", " FPGA", " GPU", " CPU", " Maxwell", " option pricing"], "paper_abstract": "Quasi-Monte Carlo simulation is a special Monte Carlo simulation method that uses quasi-random or low-discrepancy numbers as random sample sets. In many applications, this method has proved advantageous compared to the traditional Monte Carlo simulation method, which uses pseudo-random numbers, thanks to its faster convergence and higher level of accuracy. This article presents the design and implementation of a massively parallelized Quasi-Monte Carlo simulation engine on an FPGA-based supercomputer, called Maxwell. It also compares this implementation with equivalent graphics processing units (GPUs) and general purpose processors (GPP)-based implementations. The detailed comparison between these three implementations (FPGA vs. GPP vs. GPU) is done in the context of financial derivatives pricing based on our Quasi-Monte Carlo simulation engine. Real hardware implementations on the Maxwell machine show that FPGAs outperform equivalent GPP-based software implementations by 2 orders of magnitude, with the speed-up figure scaling linearly with the number of processing nodes used (FPGAs/GPPs). The same implementations show that FPGAs achieve a similar to 3x speedup compared to equivalent GPU-based implementations. Power consumption measurements also show FPGAs to be 336x more energy efficient than CPUs, and 16x more energy efficient than GPUs.", "paper_title": "High-Performance Quasi-Monte Carlo Financial Simulation: FPGA vs. GPP vs. GPU", "paper_id": "WOS:000208167100008"}