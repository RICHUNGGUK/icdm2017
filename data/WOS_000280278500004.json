{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "subgraph_isomorphism"}, {"score": 0.004668059458774745, "phrase": "subgraph_isomorphism_problem"}, {"score": 0.004209893377338457, "phrase": "pattern_graph"}, {"score": 0.004081385289516914, "phrase": "target_graph"}, {"score": 0.0037188360359702182, "phrase": "complete_tree_search"}, {"score": 0.0036052633308076933, "phrase": "filtering_techniques"}, {"score": 0.0030872017736888113, "phrase": "new_filtering_algorithm"}, {"score": 0.0029928611380840757, "phrase": "local_all_different_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Subgraph isomorphism", " Constraint programming", " All different constraint"], "paper_abstract": "The subgraph isomorphism problem involves deciding if there exists a copy of a pattern graph in a target graph. This problem may be solved by a complete tree search combined with filtering techniques that aim at pruning branches that do not contain solutions. We introduce a new filtering algorithm based on local all different constraints. We show that this filtering is stronger than other existing filterings - i.e., it prunes more branches - and that it is also more efficient - i.e., it allows one to solve more instances quicker. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "AllDifferent-based filtering for subgraph isomorphism", "paper_id": "WOS:000280278500004"}