{"auto_keywords": [{"score": 0.049040461120392176, "phrase": "final_exponentiation"}, {"score": 0.010612387000973441, "phrase": "efficient_algorithms"}, {"score": 0.00406945841245389, "phrase": "main_iteration_loop"}, {"score": 0.0037273513742154237, "phrase": "unique_value"}, {"score": 0.003541182515693916, "phrase": "extension_fields"}, {"score": 0.0033890026927890058, "phrase": "main_loop"}, {"score": 0.0032433414042726356, "phrase": "recent_improvements"}, {"score": 0.0026419338604879404, "phrase": "extension_field"}, {"score": 0.0021049977753042253, "phrase": "total_processing_cost"}], "paper_keywords": ["tate pairing", " eta(T) pairing", " final exponentiation", " torus"], "paper_abstract": "Recently Tate pairing and its variations are attracted in cryptography. Their operations consist of a main iteration loop and a final exponentiation. The final exponentiation is necessary for generating a unique value of the bilinear pairing in the extension fields. The speed of the main loop has become fast by the recent improvements, e.g., the Duursma-Lee algorithm and eta(T) pairing. In this paper we discuss how to enhance the speed of the final exponentiation of the eta(T) pairing in the extension field F-36n. Indeed, we propose some efficient algorithms using the torus T-2(F-33n) that can efficiently compute an inversion and a powering by 3(n) + 1. Consequently, the total processing cost of computing the eta(T) pairing can be reduced by 16% for n = 97.", "paper_title": "Some efficient algorithms for the final exponentiation of eta(T) pairing", "paper_id": "WOS:000252617400025"}