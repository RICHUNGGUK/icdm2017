{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "cardinality_constraints"}, {"score": 0.03534274005422091, "phrase": "query_instances"}, {"score": 0.004707188147442449, "phrase": "dbms_testing"}, {"score": 0.0046018264570209765, "phrase": "good_testing_coverage"}, {"score": 0.004498812433096501, "phrase": "novel_database_techniques"}, {"score": 0.004299621153829837, "phrase": "multidimensional_histograms"}, {"score": 0.004062937864702115, "phrase": "execution_engine"}, {"score": 0.003882970272082245, "phrase": "complex_problem"}, {"score": 0.002552781867125423, "phrase": "important_challenge"}, {"score": 0.0021049977753042253, "phrase": "approximate_solutions"}], "paper_keywords": [""], "paper_abstract": "Good testing coverage of novel database techniques, such as multidimensional histograms or changes in the execution engine, is a complex problem. In this work, we argue that this task requires generating query instances, not randomly, but based on a given set of constraints. Specifically, obtaining query instances that satisfy cardinality constraints on their subexpressions is an important challenge. We show that this problem is inherently hard, and develop heuristics that effectively find approximate solutions.", "paper_title": "Generating queries with cardinality constraints for DBMS testing", "paper_id": "WOS:000241284700011"}