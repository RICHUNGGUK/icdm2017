{"auto_keywords": [{"score": 0.03743638784778741, "phrase": "caric-da"}, {"score": 0.008930357698370197, "phrase": "multicore_processors"}, {"score": 0.00481495049065317, "phrase": "cache-conscious_data_access"}, {"score": 0.004784691405731155, "phrase": "dbms"}, {"score": 0.004754600386388821, "phrase": "multicore_environments"}, {"score": 0.004680220363692397, "phrase": "dramatic_improvements"}, {"score": 0.0046069985410261746, "phrase": "computer_hardware"}, {"score": 0.00433900667918111, "phrase": "ever-increasing_number"}, {"score": 0.0041515244239033145, "phrase": "single-core_processors"}, {"score": 0.004009894739765119, "phrase": "cache_conflicts"}, {"score": 0.003922283019437895, "phrase": "db_processes"}, {"score": 0.0038124354878360032, "phrase": "cache-efficient_solution"}, {"score": 0.0037409118365761894, "phrase": "concurrent_dbps"}, {"score": 0.003717368939083015, "phrase": "multicore_platforms"}, {"score": 0.003500945350055404, "phrase": "higher_performance"}, {"score": 0.0033707740216185815, "phrase": "new_cache-conscious_dispatcher"}, {"score": 0.003235193484261443, "phrase": "multiple_subsets"}, {"score": 0.003194580334752371, "phrase": "different_processor_cores"}, {"score": 0.0031644543425642544, "phrase": "different_subsets"}, {"score": 0.0031247264362609614, "phrase": "different_dbps"}, {"score": 0.0030854957471873785, "phrase": "different_cores"}, {"score": 0.002989553951264878, "phrase": "data-partitioning_information"}, {"score": 0.002887450071878095, "phrase": "better_performance"}, {"score": 0.002860212113080887, "phrase": "higher_cache_hit_rate"}, {"score": 0.0028332303659245085, "phrase": "private_cache"}, {"score": 0.0026180306489526095, "phrase": "pure_middleware"}, {"score": 0.002544616720630384, "phrase": "existing_operating_systems"}, {"score": 0.0024038923350585962, "phrase": "source_code"}, {"score": 0.0023887436047824386, "phrase": "existing_dbmss"}, {"score": 0.0022494973475924024, "phrase": "unmodified_existing_linux"}, {"score": 0.0022353193959268767, "phrase": "postgresql_environments"}, {"score": 0.0021521046447238964, "phrase": "performance_evaluation"}, {"score": 0.0021049977753042253, "phrase": "improved_cache_hit_rates"}], "paper_keywords": ["multicore", " OLTP", " middleware", " cache"], "paper_abstract": "In recent years, dramatic improvements have been made to computer hardware. In particular, the number of cores on a chip has been growing exponentially, enabling an ever-increasing number of processes to be executed in parallel. Having been originally developed for single-core processors, database (DB) management systems (DBMSs) running on multicore processors suffer from cache conflicts as the number of concurrently executing DB processes (DBPs) increases. Therefore, a cache-efficient solution for arranging the execution of concurrent DBPs on multicore platforms would be highly attractive for DBMSs. In this paper, we propose CARIC-DA, middleware for achieving higher performance in DBMSs on multicore processors, by reducing cache misses with a new cache-conscious dispatcher for concurrent queries. CARIC-DA logically range-partitions the dataset into multiple subsets. This enables different processor cores to access different subsets by ensuring that different DBPs are pinned to different cores and by dispatching queries to DBPs according to the data-partitioning information. In this way, CARIC-DA is expected to achieve better performance via a higher cache hit rate for the private cache of each core. It can also balance the loads between cores by changing the range of each subset. Note that CARIC-DA is pure middleware, meaning that it avoids any modification to existing operating systems (OSs) and DBMSs, thereby making it more practical. This is important because the source code for existing DBMSs is large and complex, making it very expensive to modify. We implemented a prototype that uses unmodified existing Linux and PostgreSQL environments, and evaluated the effectiveness of our proposal on three different multicore platforms. The performance evaluation against benchmarks revealed that CARIC-DA achieved improved cache hit rates and higher performance.", "paper_title": "Cache-Conscious Data Access for DBMS in Multicore Environments", "paper_id": "WOS:000356590300002"}