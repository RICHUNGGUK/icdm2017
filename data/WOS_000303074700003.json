{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "oasis"}, {"score": 0.010378112680994967, "phrase": "dynamic_instrumentation"}, {"score": 0.008836043313959558, "phrase": "dre_system_developers"}, {"score": 0.008487433211333327, "phrase": "early_phases"}, {"score": 0.004481221725139286, "phrase": "instrumentation"}, {"score": 0.004421156723819163, "phrase": "critical_part"}, {"score": 0.0040777192615062815, "phrase": "traditional_techniques"}, {"score": 0.004041238873048836, "phrase": "instrumenting_enterprise_dre_systems"}, {"score": 0.003951453722517865, "phrase": "design_decisions"}, {"score": 0.0037948184359488284, "phrase": "software_lifecycle"}, {"score": 0.0036443694410100507, "phrase": "system_architecture"}, {"score": 0.003113696267229798, "phrase": "system-level_hardware"}, {"score": 0.0027206133859493725, "phrase": "soa-based_middleware"}, {"score": 0.0026481480455339055, "phrase": "enterprise_dre_system"}, {"score": 0.0026126405272417783, "phrase": "design-time_knowledge"}, {"score": 0.0024093494406195386, "phrase": "representative_enterprise_dre_system_case_study"}, {"score": 0.0023557346035701096, "phrase": "shipboard_computing"}, {"score": 0.002272415777234064, "phrase": "case_study_show"}, {"score": 0.0022318655527987846, "phrase": "dre_system_testers"}, {"score": 0.0021920373388760314, "phrase": "instrumentation_overhead"}, {"score": 0.002143247921132179, "phrase": "open_challenges"}, {"score": 0.0021049977753042253, "phrase": "next-generation_enterprise_dre_systems"}], "paper_keywords": ["dynamic instrumentation", " enterprise DRE systems", " service-oriented architecture", " middleware", " real-time instrumentation"], "paper_abstract": "Instrumentation is a critical part of evaluating an enterprise distributed real-time and embedded (DRE) system's performance. Traditional techniques for instrumenting enterprise DRE systems require DRE system developers to make design decisions regarding what metrics to collect during early phases of the software lifecycle so these needs can be factored into the system architecture. In many circumstances, however, it is hard for DRE system developers to know this information during early phases of the software lifecycle-especially when metrics come from many heterogeneous sources (such as application-and system-level hardware and software resources) and evaluating performance is traditionally an after-thought. To address these issues, this article presents the design and performance of OASIS, which is SOA-based middleware and tools that dynamically instruments enterprise DRE system without requiring design-time knowledge of which metrics to collect. This article also empirically evaluates OASIS in the context of a representative enterprise DRE system case study from the domain of shipboard computing. Results from applying OASIS to this case study show that its flexibility enables DRE system testers to precisely control instrumentation overhead. We also highlight open challenges in dynamic instrumentation for next-generation enterprise DRE systems.", "paper_title": "OASIS: An architecture for dynamic instrumentation of enterprise distributed real-time and embedded systems", "paper_id": "WOS:000303074700003"}