{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large_graph_databases"}, {"score": 0.004558564684763264, "phrase": "real_applications"}, {"score": 0.004245476558619167, "phrase": "graph_database_d"}, {"score": 0.004130842663662047, "phrase": "query_graph"}, {"score": 0.004112476052541604, "phrase": "q"}, {"score": 0.0040192915527630995, "phrase": "exact_graph_matching"}, {"score": 0.003784328428527216, "phrase": "graph_similarity_search"}, {"score": 0.003485824905231454, "phrase": "graph_edit_distance"}, {"score": 0.0033916328188225843, "phrase": "systematic_method"}, {"score": 0.0033546701239540555, "phrase": "edit-distance_based_similarity_search_problem"}, {"score": 0.0030064251340251196, "phrase": "different_perspectives"}, {"score": 0.002454432810862053, "phrase": "uniform_index_structure"}, {"score": 0.0023362245884046176, "phrase": "effective_pruning"}, {"score": 0.0022980978400845144, "phrase": "query_processing"}, {"score": 0.002273025527678093, "phrase": "extensive_experiments"}, {"score": 0.0021994343316143125, "phrase": "existing_approaches"}, {"score": 0.0021049977753042253, "phrase": "query_response_time"}], "paper_keywords": ["Graph edit distance", " lower bound", " graph database", " graph similarity search"], "paper_abstract": "Since many graph data are often noisy and incomplete in real applications, it has become increasingly important to retrieve graphs g in the graph database D that approximately match the query graph q, rather than exact graph matching. In this paper, we study the problem of graph similarity search, which retrieves graphs that are similar to a given query graph under the constraint of graph edit distance. We propose a systematic method for edit-distance based similarity search problem. Specifically, we derive two lower bounds, i.e., partition-based and branch-based bounds, from different perspectives. More importantly, a hybrid lower bound incorporating both ideas of the two lower bounds is proposed, which is theoretically proved to have higher (at least not lower) pruning power than using the two lower bounds together. We also present a uniform index structure, namely u-tree, to facilitate effective pruning and efficient query processing. Extensive experiments confirm that our proposed approach outperforms the existing approaches significantly, in terms of both the pruning power and query response time.", "paper_title": "Efficient Graph Similarity Search Over Large Graph Databases", "paper_id": "WOS:000351393500007"}