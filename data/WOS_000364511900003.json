{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "usa."}, {"score": 0.00481495049065317, "phrase": "emerging_architectures"}, {"score": 0.004758188582347737, "phrase": "computational_efficiency"}, {"score": 0.004720717782144015, "phrase": "existing_hydrocodes"}, {"score": 0.004610058444728656, "phrase": "computer_architectures"}, {"score": 0.00453772385360173, "phrase": "traditional_parallel_central_processing_unit"}, {"score": 0.004413846562278824, "phrase": "new_computer_architectures"}, {"score": 0.004344577216137524, "phrase": "relative_performance_degradation"}, {"score": 0.004293336465549723, "phrase": "reduced_memory_bandwidth"}, {"score": 0.004062057297453209, "phrase": "increasingly_complex_memory_hierarchies"}, {"score": 0.004014135205423942, "phrase": "existing_codes"}, {"score": 0.003966776222128288, "phrase": "performance_degradation"}, {"score": 0.0036217089991592275, "phrase": "computational_performance"}, {"score": 0.0035648266669315943, "phrase": "current_and_expected_changes"}, {"score": 0.0034264854489231148, "phrase": "increasingly_complex_prototypes"}, {"score": 0.003399466007862412, "phrase": "radiation_hydrodynamics_codes"}, {"score": 0.0033460624879847667, "phrase": "gradient_routines"}, {"score": 0.003319675107116333, "phrase": "diffusion_matrix_assembly"}, {"score": 0.002971309306027602, "phrase": "performance_improvements"}, {"score": 0.00246657044320953, "phrase": "optimization_techniques"}, {"score": 0.0023613726075968986, "phrase": "general_recommendations"}, {"score": 0.0022517100995552443, "phrase": "applications_code_developer"}, {"score": 0.002172811149894415, "phrase": "u.s._government_work"}, {"score": 0.0021301766910531137, "phrase": "public_domain"}], "paper_keywords": ["Lagrangian hydrodynamics", " arbitrary Lagrangian Eulerian (ALE) methods", " radiation hydrodynamics", " computer science and advanced architectures"], "paper_abstract": "The computational efficiency of existing hydrocodes is expected to suffer as computer architectures advance beyond the traditional parallel central processing unit (CPU) model . Concerning new computer architectures, sources of relative performance degradation might include reduced memory bandwidth per core, increased resource contention due to concurrency, increased single instruction, multiple data (SIMD) length, and increasingly complex memory hierarchies. Concerning existing codes, any performance degradation will be influenced by a lack of attention to performance in their design and implementation. This work reports on considerations for improving computational performance in preparation for current and expected changes to computer architecture. The algorithms studied will include increasingly complex prototypes for radiation hydrodynamics codes, such as gradient routines and diffusion matrix assembly (e.g., in [1-6]). The meshes considered for the algorithms are structured or unstructured meshes. The considerations applied for performance improvements are meant to be general in terms of architecture (not specifically graphical processing unit (GPUs) or multi-core machines, for example) and include techniques for vectorization, threading, tiling, and cache blocking. Out of a survey of optimization techniques on applications such as diffusion and hydrodynamics, we make general recommendations with a view toward making these techniques conceptually accessible to the applications code developer. Published 2015. This article is a U.S. Government work and is in the public domain in the USA.", "paper_title": "Vectorization, threading, and cache-blocking considerations for hydrocodes on emerging architectures", "paper_id": "WOS:000364511900003"}