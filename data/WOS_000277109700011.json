{"auto_keywords": [{"score": 0.0497962048028376, "phrase": "ceas"}, {"score": 0.02091730051494224, "phrase": "management_packets"}, {"score": 0.00530240406871903, "phrase": "link_state"}, {"score": 0.00481495049065317, "phrase": "distributed_path_management_system"}, {"score": 0.004744186492582549, "phrase": "entropy_ant_system"}, {"score": 0.004418666248371415, "phrase": "processing_cycles"}, {"score": 0.004392565073466714, "phrase": "memory_storage"}, {"score": 0.004176813329075736, "phrase": "network_changes"}, {"score": 0.004152134827373379, "phrase": "pheromone_sharing"}, {"score": 0.004091072003277219, "phrase": "virtual_connections"}, {"score": 0.004066898031169739, "phrase": "common_sub-paths"}, {"score": 0.0037652847971532976, "phrase": "required_memory"}, {"score": 0.003394164702727995, "phrase": "convergence_rates"}, {"score": 0.0033442114331500407, "phrase": "reduced_transmission_overhead"}, {"score": 0.003314591878914152, "phrase": "rate_adjustment_scheme"}, {"score": 0.0031892326681931295, "phrase": "state_changes"}, {"score": 0.003151619859498847, "phrase": "packet_rates"}, {"score": 0.003114449258490065, "phrase": "parameter_values"}, {"score": 0.0030868583963299698, "phrase": "management_system"}, {"score": 0.0030685999966886734, "phrase": "rate_adaptation"}, {"score": 0.003005539334280134, "phrase": "network_nodes"}, {"score": 0.0029437707610254255, "phrase": "virtual_path"}, {"score": 0.002900426826591769, "phrase": "fixed_rate_strategy"}, {"score": 0.0028832679581901176, "phrase": "self-tuned_strategies"}, {"score": 0.002857719256931572, "phrase": "significant_reduction"}, {"score": 0.0027495914857929584, "phrase": "service_availability_level"}, {"score": 0.0027252240573281163, "phrase": "self-tuned_rate_adjustment"}, {"score": 0.0026771333996253783, "phrase": "fast_restoration"}, {"score": 0.0026612920049803473, "phrase": "short_path_detection_times"}, {"score": 0.002629889135655667, "phrase": "high_service_availability"}, {"score": 0.00260657976055413, "phrase": "self-tuned_ant_rate"}, {"score": 0.002356380755825062, "phrase": "today's_networks"}, {"score": 0.002142832962924139, "phrase": "long_lived_failures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cross entropy", " Swarm intelligence", " Path management"], "paper_abstract": "CEAS (cross entropy ant system) is a distributed, robust and adaptive swarm intelligence system for path management in communication networks. This paper focuses on strategies for handling the overhead in terms of processing cycles, memory storage, and number of management packets (ants) generated by CEAS when the state of the network changes. Pheromone sharing is introduced such that virtual connections with common sub-paths are sharing information and cooperate in the path finding when the paths have the same destination and the same objective function. The sharing of information reduces the required memory in each node significantly on the expense of an increase in the size of the management packets. However, the packets are still rather small. The cooperation also leads to an improvement in convergence rates which again results in reduced transmission overhead. A rate adjustment scheme is also proposed. The scheme is self-tuned and detects state changes implicitly and sets packet rates accordingly by monitoring parameter values in the management system. Rate adaptation can be done both in the network nodes and at the end-points of a virtual path. Compared to a fixed rate strategy the self-tuned strategies show a significant reduction in the number of packets generated, while maintaining the same data packet delay and service availability level. The self-tuned rate adjustment in the network nodes provides fast restoration with short path detection times, which ensures high service availability. The self-tuned ant rate in the end-points avoids flooding the network with management packets when these are not required. The performance and overhead of CEAS are compared to those of the link state routing currently in use in today's networks. The results show that CEAS outperforms link state routing both with respect to performance and overhead when the network experiences transient link failures, while the opposite is the case with long lived failures. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Overhead reduction in a distributed path management system", "paper_id": "WOS:000277109700011"}