{"auto_keywords": [{"score": 0.03076620360242571, "phrase": "winning_strategy"}, {"score": 0.00481495049065317, "phrase": "digital_designs"}, {"score": 0.0047709540557306284, "phrase": "linear-time_specifications"}, {"score": 0.004515252649226697, "phrase": "effort_quadratic"}, {"score": 0.004352411290383643, "phrase": "reactive_system"}, {"score": 0.004214729542986473, "phrase": "symbolic_steps"}, {"score": 0.004157058883925715, "phrase": "synthesis_algorithm"}, {"score": 0.004062682236016889, "phrase": "novel_type"}, {"score": 0.003988719758707836, "phrase": "general_reactivity"}, {"score": 0.0037921662574137535, "phrase": "winning_condition"}, {"score": 0.0031121406603482112, "phrase": "boolean_combination"}, {"score": 0.003083655376444887, "phrase": "atomic_propositions"}, {"score": 0.003027462227648001, "phrase": "symbolic_algorithms"}, {"score": 0.0025537472239953807, "phrase": "ltl_specifications"}, {"score": 0.0024956789310376635, "phrase": "empirical_evidence"}, {"score": 0.0023725232579531273, "phrase": "significant_case_study"}, {"score": 0.002318566141177149, "phrase": "formal_specifications"}, {"score": 0.002286781334850213, "phrase": "synthesis_process"}, {"score": 0.0022450768409733807, "phrase": "bus_arbiter"}, {"score": 0.0021940118003312397, "phrase": "realistic_industrial_hardware_specification"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Property synthesis", " Realizability", " Game theory"], "paper_abstract": "We address the problem of automatically synthesizing digital designs from linear-time specifications. We consider various classes of specifications that can be synthesized with effort quadratic in the number of states of the reactive system, where we measure effort in symbolic steps. The synthesis algorithm is based on a novel type of game called General Reactivity of rank 1 (GR(1)), with a winning condition of the form (square lozenge p(1) boolean AND ... boolean AND square lozenge p(m)) -> (square lozenge q(1) boolean AND ... boolean AND square lozenge q(n)), where each p(i) and q(i) is a Boolean combination of atomic propositions. We show symbolic algorithms to solve this game, to build a winning strategy and several ways to optimize the winning strategy and to extract a system from it. We also show how to use GR(1) games to solve the synthesis of LTL specifications in many interesting cases. As empirical evidence to the generality and efficiency of our approach we include a significant case study. We describe the formal specifications and the synthesis process applied to a bus arbiter, which is a realistic industrial hardware specification of modest size. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Synthesis of Reactive(1) designs", "paper_id": "WOS:000301620100013"}