{"auto_keywords": [{"score": 0.04415986787889233, "phrase": "faulty_pes"}, {"score": 0.009962147354229721, "phrase": "mf_algorithm"}, {"score": 0.00481495049065317, "phrase": "maximum_flow_algorithm"}, {"score": 0.004748832495727873, "phrase": "increasing_number"}, {"score": 0.004716113134313215, "phrase": "processing_elements"}, {"score": 0.004603352344461032, "phrase": "single_chip"}, {"score": 0.004571630734130793, "phrase": "fault-tolerant_techniques"}, {"score": 0.004401011982385274, "phrase": "current_reconfigurable_architectures"}, {"score": 0.0043706785731816265, "phrase": "redundant_pes"}, {"score": 0.0043106348117582915, "phrase": "fault_tolerance"}, {"score": 0.004008624230034271, "phrase": "virtual_topology"}, {"score": 0.003980984488865867, "phrase": "network_embedding_problem"}, {"score": 0.0038456073694665, "phrase": "operating_systems"}, {"score": 0.003805895710941199, "phrase": "limited_hardware_resources"}, {"score": 0.0036384794303356413, "phrase": "maximum_repair_rate"}, {"score": 0.0035637052288771706, "phrase": "significant_challenge"}, {"score": 0.0034784018545409193, "phrase": "new_approach"}, {"score": 0.0034424690391411093, "phrase": "maximum_flow"}, {"score": 0.003336875060853387, "phrase": "efficient_topology_reconfiguration"}, {"score": 0.0033138516659108387, "phrase": "reconfigurable_architectures"}, {"score": 0.0032457271401035545, "phrase": "topology_reconfiguration"}, {"score": 0.003190024306903021, "phrase": "network_flow_problem"}, {"score": 0.0031461489526079236, "phrase": "directed_graph"}, {"score": 0.002956037056206635, "phrase": "spare_pes"}, {"score": 0.0029356335847783195, "phrase": "minimal_impacts"}, {"score": 0.0027870176748502045, "phrase": "repair_rate"}, {"score": 0.002692132776447632, "phrase": "polynomial_reconfiguration_time"}, {"score": 0.0026735459686033627, "phrase": "experimental_results"}, {"score": 0.0026276369627747896, "phrase": "previous_methods"}, {"score": 0.0026004698404274483, "phrase": "mf_approach"}, {"score": 0.002460240519198386, "phrase": "fault-free_system"}, {"score": 0.0023847032316716503, "phrase": "latency_increases"}, {"score": 0.0022955150243239623, "phrase": "practical_application"}, {"score": 0.002271773887265199, "phrase": "cost_factor"}, {"score": 0.0022096550791379033, "phrase": "enhanced_approach"}, {"score": 0.0021867999937268084, "phrase": "minimum-cost_mf_algorithm"}, {"score": 0.002119640369431708, "phrase": "fault-tolerant_reconfiguration"}, {"score": 0.0021049977753042253, "phrase": "heterogeneous_reconfigurable_architectures"}], "paper_keywords": ["Reliability", " Performance", " Algorithms", " Fault tolerance", " reconfigurable architecture", " topology reconfiguration"], "paper_abstract": "With an increasing number of processing elements (PEs) integrated on a single chip, fault-tolerant techniques are critical to ensure the reliability of such complex systems. In current reconfigurable architectures, redundant PEs are utilized for fault tolerance. In the presence of faulty PEs, the physical topologies of various chips may be different, so the concept of virtual topology from network embedding problem has been used to alleviate the burden for the operating systems. With limited hardware resources, how to reconfigure a system into the most effective virtual topology such that the maximum repair rate can be reached presents a significant challenge. In this article, a new approach using a maximum flow (MF) algorithm is proposed for an efficient topology reconfiguration in reconfigurable architectures. In this approach, topology reconfiguration is converted into a network flow problem by constructing a directed graph; the solution is then found by using the MF algorithm. This approach optimizes the use of spare PEs with minimal impacts on area, throughput, and delay, and thus it significantly improves the repair rate of faulty PEs. In addition, it achieves a polynomial reconfiguration time. Experimental results show that compared to previous methods, the MF approach increases the probability to repair faulty PEs by up to 50% using the same redundant resources. Compared to a fault-free system, the throughput only decreases by less than 2.5% and latency increases by less than 4%. To consider various types of PEs in a practical application, a cost factor is introduced into the MF algorithm. An enhanced approach using a minimum-cost MF algorithm is further shown to be efficient in the fault-tolerant reconfiguration of heterogeneous reconfigurable architectures.", "paper_title": "Efficient Fault-Tolerant Topology Reconfiguration Using a Maximum Flow Algorithm", "paper_id": "WOS:000355669800006"}