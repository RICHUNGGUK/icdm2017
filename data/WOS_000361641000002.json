{"auto_keywords": [{"score": 0.03330327939647593, "phrase": "desired_state"}, {"score": 0.00481495049065317, "phrase": "deployment_automation_approaches"}, {"score": 0.004479120557712926, "phrase": "continuous_delivery"}, {"score": 0.00443308765153716, "phrase": "configuration_management"}, {"score": 0.0039772848945723435, "phrase": "automated_deployment"}, {"score": 0.003607414874351352, "phrase": "cloud"}, {"score": 0.0034771228725942846, "phrase": "underlying_resources"}, {"score": 0.0033883824438527316, "phrase": "virtual_servers"}, {"score": 0.003336225354214798, "phrase": "major_class"}, {"score": 0.0032848684681050745, "phrase": "automation_approaches"}, {"score": 0.0029620573986902416, "phrase": "virtual_machine"}, {"score": 0.0028273061946184645, "phrase": "idempotent_scripts"}, {"score": 0.0027126684113045756, "phrase": "major_drawbacks"}, {"score": 0.0026026666736474404, "phrase": "alternative_deployment_automation_approach"}, {"score": 0.0025361866386341774, "phrase": "fine-grained_snapshots"}, {"score": 0.0023225701080913388, "phrase": "design_time"}, {"score": 0.0021049977753042253, "phrase": "different_deployment_automation_approaches"}], "paper_keywords": ["Compensation", " rollback", " snapshot", " convergence", " deployment automation", " DevOps", " cloud computing"], "paper_abstract": "Leading paradigms to develop, deploy, and operate applications such as continuous delivery, configuration management, and the merge of development and operations (DevOps) are the foundation for various techniques and tools to implement automated deployment. To make such applications available for users and customers, these approaches are typically used in conjunction with Cloud computing to automatically provision and manage underlying resources such as storage and virtual servers. A major class of these automation approaches follow the idea of converging toward a desired state of a resource (e.g. a middleware component deployed on a virtual machine). This is achieved by repeatedly executing idempotent scripts to reach the desired state. Because of major drawbacks of this approach, we discuss an alternative deployment automation approach based on compensation and fine-grained snapshots using container virtualization. We perform an evaluation comparing both approaches in terms of difficulties at design time and performance at runtime. Moreover, we discuss concepts, strategies, and implementations to effectively combine different deployment automation approaches.", "paper_title": "Compensation and Convergence - Comparing and Combining Deployment Automation Approaches", "paper_id": "WOS:000361641000002"}