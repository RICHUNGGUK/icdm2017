{"auto_keywords": [{"score": 0.03433617150737088, "phrase": "generic_algorithm"}, {"score": 0.007996016169857217, "phrase": "distributed_clustering_problem"}, {"score": 0.004815072276957652, "phrase": "distributed"}, {"score": 0.0047415081747150065, "phrase": "sensor_networks"}, {"score": 0.004705206179790976, "phrase": "low_overhead_analysis"}, {"score": 0.004669180816745142, "phrase": "large_distributed_data_sets"}, {"score": 0.004597951649247307, "phrase": "current_data_centers"}, {"score": 0.004545240514015278, "phrase": "future_sensor_networks"}, {"score": 0.004390689303780405, "phrase": "data_value"}, {"score": 0.004307099985737249, "phrase": "local_sensor"}, {"score": 0.0042250952759280225, "phrase": "concise_picture"}, {"score": 0.004176640648520877, "phrase": "global_system_state"}, {"score": 0.004065721092116729, "phrase": "resource-constrained_environments"}, {"score": 0.003750260412839128, "phrase": "distributed_manner"}, {"score": 0.0035673211706948576, "phrase": "numerous_interconnected_nodes"}, {"score": 0.0033932753847910366, "phrase": "multiple_clusters"}, {"score": 0.0030938932434437178, "phrase": "different_clustering_types"}, {"score": 0.002735284807307981, "phrase": "distance_criterion"}, {"score": 0.002662541169311738, "phrase": "good_clustering_results"}, {"score": 0.0025130941721410558, "phrase": "gaussian_mixture"}, {"score": 0.002465161736207254, "phrase": "weighted_normal_distributions"}, {"score": 0.0024181413029825205, "phrase": "machine_learning_tools"}, {"score": 0.0021708894366462153, "phrase": "connected_topology"}, {"score": 0.0021294699637639564, "phrase": "cluster_representation"}, {"score": 0.0021049977753042253, "phrase": "fully_asynchronous_settings"}], "paper_keywords": ["Sensor networks", " Distributed clustering", " Robust aggregation"], "paper_abstract": "Low overhead analysis of large distributed data sets is necessary for current data centers and for future sensor networks. In such systems, each node holds some data value, e.g., a local sensor read, and a concise picture of the global system state needs to be obtained. In resource-constrained environments like sensor networks, this needs to be done without collecting all the data at any location, i.e., in a distributed manner. To this end, we address the distributed clustering problem, in which numerous interconnected nodes compute a clustering of their data, i.e., partition these values into multiple clusters, and describe each cluster concisely. We present a generic algorithm that solves the distributed clustering problem and may be implemented in various topologies, using different clustering types. For example, the generic algorithm can be instantiated to cluster values according to distance, targeting the same problem as the famous k-means clustering algorithm. However, the distance criterion is often not sufficient to provide good clustering results. We present an instantiation of the generic algorithm that describes the values as a Gaussian Mixture (a set of weighted normal distributions), and uses machine learning tools for clustering decisions. Simulations show the robustness, speed and scalability of this algorithm. We prove that any implementation of the generic algorithm converges over any connected topology, clustering criterion and cluster representation, in fully asynchronous settings.", "paper_title": "Distributed data clustering in sensor networks", "paper_id": "WOS:000297518000001"}