{"auto_keywords": [{"score": 0.04818186976728296, "phrase": "gaussian_process"}, {"score": 0.015719716506582538, "phrase": "cpu_utilization"}, {"score": 0.0047292449487169345, "phrase": "energy_efficiency"}, {"score": 0.004481132747216135, "phrase": "numerous_inferences"}, {"score": 0.004441059405327222, "phrase": "reasoning_solutions"}, {"score": 0.004322967486451877, "phrase": "dynamic_features"}, {"score": 0.0042459818200777846, "phrase": "regression_and_classification_data"}, {"score": 0.004114527599108729, "phrase": "bayesian_learning"}, {"score": 0.00374399358035391, "phrase": "high_complexity"}, {"score": 0.003677280504320636, "phrase": "data_storage"}, {"score": 0.003563370084662192, "phrase": "large_input_dataset"}, {"score": 0.0033011569787033297, "phrase": "large-scale_system"}, {"score": 0.003256922225995089, "phrase": "reasonable_precision"}, {"score": 0.003044455555031339, "phrase": "comprehensive_analysis"}, {"score": 0.0030171910207671205, "phrase": "gaussian_process_performance_issues"}, {"score": 0.0028844769395018595, "phrase": "hyper-parameter_learning_and_training_phases"}, {"score": 0.0027328817607818207, "phrase": "demonstrated_application"}, {"score": 0.0025089420019955232, "phrase": "gaussian_process_regression"}, {"score": 0.0024093494406195386, "phrase": "computing_node"}, {"score": 0.0023557346035701096, "phrase": "migration_mechanism"}, {"score": 0.002292965705677312, "phrase": "system-level_processes"}, {"score": 0.0021529183360603434, "phrase": "power_consumption"}, {"score": 0.0021049977753042253, "phrase": "overall_performance"}], "paper_keywords": ["Proactive prediction", " Bayesian learning", " Gaussian process", " Parallel computing", " Energy efficiency", " CPU utilization"], "paper_abstract": "For the past ten years, Gaussian process has become increasingly popular for modeling numerous inferences and reasoning solutions due to the robustness and dynamic features. Particularly concerning regression and classification data, the combination of Gaussian process and Bayesian learning is considered to be one of the most appropriate supervised learning approaches in terms of accuracy and tractability. However, due to the high complexity in computation and data storage, Gaussian process performs poorly when processing large input dataset. Because of the limitation, this method is ill-equipped to deal with the large-scale system that requires reasonable precision and fast reaction rate. To improve the drawback, our research focuses on a comprehensive analysis of Gaussian process performance issues, highlighting ways to drastically reduce the complexity of hyper-parameter learning and training phases, which could be applicable in predicting the CPU utilization in the demonstrated application. In fact, the purpose of this application is to save the energy by distributively engaging the Gaussian process regression to monitor and predict the status of each computing node. Subsequently, a migration mechanism is applied to migrate the system-level processes between multi-core and turn off the idle one in order to reduce the power consumption while still maintaining the overall performance.", "paper_title": "Gaussian process for predicting CPU utilization and its application to energy efficiency", "paper_id": "WOS:000364385100012"}