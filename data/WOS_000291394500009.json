{"auto_keywords": [{"score": 0.03874050686675407, "phrase": "sequential_overlap"}, {"score": 0.00481495049065317, "phrase": "patch-based_image_editing"}, {"score": 0.004631335513513859, "phrase": "efficient_exact_nearest_patch_matching_algorithm"}, {"score": 0.004411588377842043, "phrase": "target_image"}, {"score": 0.00436890075128947, "phrase": "traditional_match_matching_algorithms"}, {"score": 0.004243289764306128, "phrase": "independent_sample"}, {"score": 0.004161553532799662, "phrase": "hierarchical_data_structure"}, {"score": 0.0040027552011993005, "phrase": "nearest_patch_finding"}, {"score": 0.0037942165191367366, "phrase": "approximate_nearest_patch"}, {"score": 0.003359647377874098, "phrase": "redundant_similarity_computation"}, {"score": 0.003215659239270654, "phrase": "exact_nearest_patch"}, {"score": 0.0031845067058084583, "phrase": "brute-force_style"}, {"score": 0.003048001809453513, "phrase": "patch_size"}, {"score": 0.0029602552900111407, "phrase": "recent_multicore_graphics_hardware"}, {"score": 0.002545468362709126, "phrase": "interactive_editing_framework"}, {"score": 0.0025207920578878894, "phrase": "moderate-sized_image"}, {"score": 0.002389276641014013, "phrase": "fastest_exact_nearest_patch_matching_method"}, {"score": 0.0022101055924375725, "phrase": "nearest_patch"}, {"score": 0.0021569129153653777, "phrase": "experimental_results"}], "paper_keywords": ["Nearest patch search", " texture synthesis", " image completion", " image denoising", " image summarization"], "paper_abstract": "This paper presents an efficient exact nearest patch matching algorithm which can accurately find the most similar patch-pairs between source and target image. Traditional match matching algorithms treat each pixel/patch as an independent sample and build a hierarchical data structure, such as kd-tree, to accelerate nearest patch finding. However, most of these approaches can only find approximate nearest patch and do not explore the sequential overlap between patches. Hence, they are neither accurate in quality nor optimal in speed. By eliminating redundant similarity computation of sequential overlap between patches, our method finds the exact nearest patch in brute-force style but reduces its running time complexity to be linear on the patch size. Furthermore, relying on recent multicore graphics hardware, our method can be further accelerated by at least an order of magnitude (>= 10x). This greatly improves performance and ensures that our method can be efficiently applied in an interactive editing framework for moderate-sized image even video. To our knowledge, this approach is the fastest exact nearest patch matching method for high-dimensional patch and also its extra memory requirement is minimal. Comparisons with the popular nearest patch matching methods in the experimental results demonstrate the merits of our algorithm.", "paper_title": "Fast Exact Nearest Patch Matching for Patch-Based Image Editing and Processing", "paper_id": "WOS:000291394500009"}