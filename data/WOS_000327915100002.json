{"auto_keywords": [{"score": 0.049285156489238265, "phrase": "overlay_networks"}, {"score": 0.023474249160164634, "phrase": "tcf"}, {"score": 0.008713768692145013, "phrase": "self-stabilizing_overlay_networks"}, {"score": 0.004766877640444116, "phrase": "transitive_closure_framework"}, {"score": 0.004641005983799053, "phrase": "hostile_environments"}, {"score": 0.004610058444728656, "phrase": "node_and_link_failures"}, {"score": 0.004268591456106124, "phrase": "link_failures"}, {"score": 0.004225950334493496, "phrase": "external_supervision"}, {"score": 0.004086853315059217, "phrase": "simple_framework"}, {"score": 0.0039259432210911925, "phrase": "self-stabilizing_construction"}, {"score": 0.0038867116254051363, "phrase": "extensive_class"}, {"score": 0.003822191555851545, "phrase": "previous_self-stabilizing_algorithms"}, {"score": 0.0037336520904376687, "phrase": "intermediate_node_degrees"}, {"score": 0.0036107002958650344, "phrase": "maximum_degree"}, {"score": 0.0035746075891407224, "phrase": "target_overlay_network"}, {"score": 0.003480108299476168, "phrase": "previous_work"}, {"score": 0.0031806750655918223, "phrase": "linear"}, {"score": 0.0029931118601224612, "phrase": "optimal_number"}, {"score": 0.0027618067917046583, "phrase": "specific_bad_initial_states"}, {"score": 0.0027341763737751467, "phrase": "memory-efficient_fashion"}, {"score": 0.0026175952455594277, "phrase": "simple_self-stabilizing_protocol"}, {"score": 0.0025654738267173274, "phrase": "r._jacob"}, {"score": 0.002548331088496964, "phrase": "a._richa"}, {"score": 0.0025313026089662165, "phrase": "c._scheideler"}, {"score": 0.002514387630447547, "phrase": "s._schmid"}, {"score": 0.0024975854002361794, "phrase": "h._taubig"}, {"score": 0.002431489080631481, "phrase": "self-stabilizing_skip_graphs"}, {"score": 0.0023990991827804826, "phrase": "podc"}, {"score": 0.0023122257999320527, "phrase": "distributed_computing"}, {"score": 0.0022967792577409797, "phrase": "acm"}, {"score": 0.0022814200422609774, "phrase": "new_york"}, {"score": 0.00216950156199795, "phrase": "optimal_convergence_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Self-stabilization", " Overlay networks", " Fault-tolerant algorithms", " Distributed algorithms", " Stabilization bounds"], "paper_abstract": "Overlay networks are expected to operate in hostile environments where node and link failures are commonplace. One way to make overlay networks robust is to design self-stabilizing overlay networks, i.e., overlay networks that can handle node and link failures without any external supervision. In this paper, we first describe a simple framework, which we call the Transitive Closure Framework (TCF), for the self-stabilizing construction of an extensive class of overlay networks. Like previous self-stabilizing algorithms for overlay networks, TCF permits intermediate node degrees to grow to Omega(n), independent of the maximum degree of the target overlay network. However, TCF has several advantages over previous work in this area: (i) it is a \"framework\" and can be used for the construction of a variety of overlay networks (e.g. LINEAR, SKIP+), not just a particular network, (ii) it runs in an optimal number of rounds for a variety of overlay networks, and (iii) it can easily be composed with other non-self-stabilizing protocols that can recover from specific bad initial states in a memory-efficient fashion. We demonstrate the power of our framework by deriving from TCF a simple self-stabilizing protocol for constructing SKIP+ graphs [R. Jacob, A. Richa, C. Scheideler, S. Schmid, H. Taubig, A distributed polylogarithmic time algorithm for self-stabilizing skip graphs, in: PODC '09: Proceedings of the 28th ACM symposium on Principles of distributed computing, ACM, New York, NY, USA, 2009, pp. 131-1401 that guarantees optimal convergence time from any configuration. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Building self-stabilizing overlay networks with the transitive closure framework", "paper_id": "WOS:000327915100002"}