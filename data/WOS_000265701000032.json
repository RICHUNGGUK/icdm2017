{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "des_theory"}, {"score": 0.004659951478263083, "phrase": "software_components"}, {"score": 0.0045843245695654875, "phrase": "software_model_checking"}, {"score": 0.004329124434198367, "phrase": "large_systems"}, {"score": 0.004224130367280183, "phrase": "assumption_generation"}, {"score": 0.003988901168289797, "phrase": "least_restrictive_environment"}, {"score": 0.003331275574328097, "phrase": "regular_language"}, {"score": 0.0030944828434567966, "phrase": "general_scheme"}, {"score": 0.002921975748248106, "phrase": "non-regular_properties"}, {"score": 0.0027365364488693656, "phrase": "least_restrictive_assumption"}, {"score": 0.002480154140902474, "phrase": "non-regular_languages"}, {"score": 0.0021398115287338693, "phrase": "visibly_pushdown_automata"}], "paper_keywords": ["discrete event systems", " software component verification", " supervisory control"], "paper_abstract": "Software model checking is typically applied to components of large systems. The assumption generation is the problem of finding the least restrictive environment in which the components satisfy a given safety property. There is an algorithm to compute the environment for properties given as a regular language. In this paper, we propose a general scheme for computing the assumption even for non-regular properties, and show the uniqueness of the least restrictive assumption for any class of languages. In general, dealing with non-regular languages may fall into undecidability of problems. We also show a method to compute assumptions based on visibly pushdown automata and their finite-state abstractions.", "paper_title": "Application of DES Theory to Verification of Software Components", "paper_id": "WOS:000265701000032"}