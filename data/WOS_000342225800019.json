{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "local_models"}, {"score": 0.04034190794741309, "phrase": "hash_codes"}, {"score": 0.007890601609007555, "phrase": "query_hash_code"}, {"score": 0.004780633011300165, "phrase": "approximate_similarity_search"}, {"score": 0.004746558955503364, "phrase": "similarity_search"}, {"score": 0.004695900553353526, "phrase": "important_role"}, {"score": 0.00462919213721188, "phrase": "high-dimensional_data"}, {"score": 0.0045471315699087385, "phrase": "known_dimensionality_curse"}, {"score": 0.004387329529902255, "phrase": "feature_dimensionality_increases"}, {"score": 0.0043560464825349275, "phrase": "hashing_methods"}, {"score": 0.004233132504470959, "phrase": "lsh"}, {"score": 0.004055176557424983, "phrase": "fast_approximate_similarity_search"}, {"score": 0.0040262522882015175, "phrase": "trading_search_quality"}, {"score": 0.0038846843242954935, "phrase": "randomized_algorithms"}, {"score": 0.0037885477117363675, "phrase": "specific_structural_information"}, {"score": 0.0036292245355184576, "phrase": "novel_hashing_method"}, {"score": 0.0034148795808317555, "phrase": "robust_hash_functions"}, {"score": 0.0033663073782936952, "phrase": "high-dimensional_data_points"}, {"score": 0.0032712190037495975, "phrase": "local_structural_information"}, {"score": 0.00323625520042892, "phrase": "rhlm"}, {"score": 0.003190215563286321, "phrase": "individual_data_point"}, {"score": 0.0031561148083611647, "phrase": "training_dataset"}, {"score": 0.0031223774204093713, "phrase": "local_hashing_model"}, {"score": 0.0028857130140890787, "phrase": "optimal_hash_code"}, {"score": 0.002824331600674865, "phrase": "data_point"}, {"score": 0.0027054473441439422, "phrase": "robust_method"}, {"score": 0.002647890142618442, "phrase": "loss_function"}, {"score": 0.002619571161767134, "phrase": "effective_hash_functions"}, {"score": 0.0025364139244227458, "phrase": "database_point"}, {"score": 0.002482443883144136, "phrase": "query_data_point"}, {"score": 0.002455889980202819, "phrase": "search_process"}, {"score": 0.002377916348320401, "phrase": "hash_functions"}, {"score": 0.0023024126375034066, "phrase": "similar_hash_codes"}, {"score": 0.0022615046141708987, "phrase": "extensive_experimental_results"}, {"score": 0.002237308726827077, "phrase": "real-life_datasets"}, {"score": 0.0022054488653549175, "phrase": "proposed_rhlm"}, {"score": 0.0021049977753042253, "phrase": "search_quality"}], "paper_keywords": ["Approximate similarity search", " indexing", " robust hashing"], "paper_abstract": "Similarity search plays an important role in many applications involving high-dimensional data. Due to the known dimensionality curse, the performance of most existing indexing structures degrades quickly as the feature dimensionality increases. Hashing methods, such as locality sensitive hashing (LSH) and its variants, have been widely used to achieve fast approximate similarity search by trading search quality for efficiency. However, most existing hashing methods make use of randomized algorithms to generate hash codes without considering the specific structural information in the data. In this paper, we propose a novel hashing method, namely, robust hashing with local models (RHLM), which learns a set of robust hash functions to map the high-dimensional data points into binary hash codes by effectively utilizing local structural information. In RHLM, for each individual data point in the training dataset, a local hashing model is learned and used to predict the hash codes of its neighboring data points. The local models from all the data points are globally aligned so that an optimal hash code can be assigned to each data point. After obtaining the hash codes of all the training data points, we design a robust method by employing l(2),(1)-norm minimization on the loss function to learn effective hash functions, which are then used to map each database point into its hash code. Given a query data point, the search process first maps it into the query hash code by the hash functions and then explores the buckets, which have similar hash codes to the query hash code. Extensive experimental results conducted on real-life datasets show that the proposed RHLM outperforms the state-of-the-art methods in terms of search quality and efficiency.", "paper_title": "Robust Hashing with Local Models for Approximate Similarity Search", "paper_id": "WOS:000342225800019"}