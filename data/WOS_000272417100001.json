{"auto_keywords": [{"score": 0.04431277486761943, "phrase": "underlying_middleware"}, {"score": 0.00481495049065317, "phrase": "different_types"}, {"score": 0.004774115617883476, "phrase": "distributed_architectures"}, {"score": 0.004733625412289433, "phrase": "different_degrees"}, {"score": 0.004536244367689415, "phrase": "three-tier_architectures"}, {"score": 0.004148014765950199, "phrase": "off-line_transaction_processing"}, {"score": 0.004060566667226606, "phrase": "mobile_applications"}, {"score": 0.003941215575554871, "phrase": "application_components"}, {"score": 0.0027781249331615813, "phrase": "overarching_formal_framework"}, {"score": 0.0027311076665349657, "phrase": "architectural_requirements"}, {"score": 0.0023926387830753033, "phrase": "existing_middleware"}, {"score": 0.0023221983158528163, "phrase": "notational_elements"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["distributed architecture", " coupling", " decoupling", " asynchronous/synchronous communication", " message-oriented middleware"], "paper_abstract": "It is well accepted that different types of distributed architectures require different degrees of coupling. For example, in client-server and three-tier architectures, application components are generally tightly coupled, both with one another and with the underlying middleware. Meanwhile, in off-line transaction processing, grid computing and mobile applications, the degree of coupling between application components and with the underlying middleware needs to be minimized. Terms such as 'synchronous', 'asynchronous', 'blocking', 'non-blocking', 'directed', and 'non-directed' are often used to refer to the degree of coupling required by an architecture or provided by a middleware. However, these terms are used with various connotations. Although various informal definitions have been provided, there is a lack of an overarching formal framework to unambiguously communicate architectural requirements with respect to (de-)coupling. This article addresses this gap by: (i) formally defining three dimensions of (de-)coupling; (ii) relating these dimensions to existing middleware; and (iii) proposing notational elements to represent various coupling integration patterns. This article also discusses a prototype that demonstrates the feasibility of its implementation. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "Dimensions of coupling in middleware", "paper_id": "WOS:000272417100001"}