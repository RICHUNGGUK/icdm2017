{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "object_trajectories"}, {"score": 0.0343427836051128, "phrase": "mnn_queries"}, {"score": 0.004740823885631586, "phrase": "set_d"}, {"score": 0.004257067129196855, "phrase": "gamma"}, {"score": 0.003874512990986722, "phrase": "decision_making"}, {"score": 0.003844545552246988, "phrase": "data_mining"}, {"score": 0.003800026771283179, "phrase": "pattern_recognition"}, {"score": 0.0033952989364738353, "phrase": "mnn_search"}, {"score": 0.0030572112793962004, "phrase": "mnnt"}, {"score": 0.002952146666681891, "phrase": "stationary_query_points"}, {"score": 0.002917931350071647, "phrase": "query_trajectories"}, {"score": 0.002839625463110821, "phrase": "batch_processing"}, {"score": 0.0025567271683947547, "phrase": "historical_continuous_mnn"}, {"score": 0.002440192402613492, "phrase": "mutual_nearest_neighbors"}, {"score": 0.0022664208122072657, "phrase": "extensive_experiments"}, {"score": 0.002248863090203165, "phrase": "real_and_synthetic_datasets"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Query processing", " Nearest neighbor query", " Moving object trajectories", " Algorithm"], "paper_abstract": "Given a set D of trajectories, a query object q, and a query time extent Gamma, a mutual (i.e., symmetric) nearest neighbor (MNN) query over trajectories finds from D, the set of trajectories that are among the k(1) nearest neighbors (NNs) of q within Gamma, and meanwhile, have q as one of their k(2) NNs. This type of queries is useful in many applications such as decision making, data mining, and pattern recognition, as it considers both the proximity of the trajectories to q and the proximity of q to the trajectories. In this paper, we first formalize MNN search and identify its characteristics, and then develop several algorithms for processing MNN queries efficiently. In particular, we investigate two classes of MNN queries, i.e.. MNNP and MNNT queries, which are defined with respect to stationary query points and moving query trajectories, respectively. Our methods utilize the batch processing and reusing technology to reduce the I/O cost (i.e., number of node/page accesses) and CPU time significantly. In addition, we extend our techniques to tackle historical continuous MNN (HCMNN) search for moving object trajectories, which returns the mutual nearest neighbors of q (for a specified k(1) and k(2)) at any time instance of Gamma. Extensive experiments with real and synthetic datasets demonstrate the performance of our proposed algorithms in terms of efficiency and scalability. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Efficient mutual nearest neighbor query processing for moving object trajectories", "paper_id": "WOS:000276819200008"}