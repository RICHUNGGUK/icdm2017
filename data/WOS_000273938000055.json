{"auto_keywords": [{"score": 0.04768967676542323, "phrase": "ga"}, {"score": 0.015718338566138444, "phrase": "resource-sharing_and_scheduling_problem"}, {"score": 0.004611013257082199, "phrase": "unique_genetic_algorithm"}, {"score": 0.0042452552248398445, "phrase": "integer_linear_programming_model"}, {"score": 0.004081385289516914, "phrase": "rssp"}, {"score": 0.0037133478610481994, "phrase": "precedence_relationships"}, {"score": 0.0035699363258657212, "phrase": "alternative_modes"}, {"score": 0.0033651019362620866, "phrase": "different_resources"}, {"score": 0.003247868216333148, "phrase": "single_mode"}, {"score": 0.003073545175760353, "phrase": "makespan_time"}, {"score": 0.0029547698888028697, "phrase": "new_encoding_schema"}, {"score": 0.002332322771009122, "phrase": "average_deviation"}, {"score": 0.002286781334850213, "phrase": "optimal_makespan"}, {"score": 0.0021554120436656334, "phrase": "problem_instance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Resource-sharing and scheduling problem", " Mixed integer linear programming", " Genetic algorithm", " Branch-and-bound algorithm"], "paper_abstract": "We introduce a heuristic that is based on a unique genetic algorithm (GA) to solve the resource-sharing and scheduling problem ( RSSP). This problem was previously formulated as a continuous-time mixed integer linear programming model and was solved optimally using a branch-and-bound (B&B) algorithm. The RSSP considers the use of a set of resources for the production of several products. Producing each product requires a set of operations with precedence relationships among them. Each operation can be performed using alternative modes which define the subset of the resources needed, and an operation may share different resources simultaneously. The problem is to select a single mode for each operation and accordingly to schedule the resources, while minimizing the makespan time. The GA we propose is based on a new encoding schema that adopts the structure of a DNA in nature. In our experiments we compared the effectiveness and runtime of our GA versus a B&B algorithm and two truncated B&B algorithms that we developed on a set of 118 problem instances. The results demonstrate that the GA solved all the problems ( 10 runs each), and reaches optimality in 75% of the runs, had an average deviation of less than 1% from the optimal makespan, and a runtime that was much less sensitive to the size of the problem instance. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A genetic algorithm-based approach for solving the resource-sharing and scheduling problem", "paper_id": "WOS:000273938000055"}