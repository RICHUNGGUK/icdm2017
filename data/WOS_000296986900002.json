{"auto_keywords": [{"score": 0.03141232569232808, "phrase": "first_phase"}, {"score": 0.01140798024147773, "phrase": "input_sequence"}, {"score": 0.009394054688141366, "phrase": "second_phase"}, {"score": 0.009012690359227528, "phrase": "genetic_algorithm"}, {"score": 0.00481495049065317, "phrase": "automatic_testing"}, {"score": 0.0047842129415024475, "phrase": "extended_finite_state_machine"}, {"score": 0.004753670676591174, "phrase": "efsm"}, {"score": 0.0045162169185355, "phrase": "modelling_approach"}, {"score": 0.004401955895933783, "phrase": "wide_range"}, {"score": 0.004181997052907647, "phrase": "test_criterion"}, {"score": 0.0041419901614217275, "phrase": "transition_coverage"}, {"score": 0.004024242000713225, "phrase": "transition_paths"}, {"score": 0.0038848460244394526, "phrase": "efsms"}, {"score": 0.003643607569483598, "phrase": "path_feasibility_problem"}, {"score": 0.0035399770257915466, "phrase": "path_input_sequence_generation_problem"}, {"score": 0.0034282732966589478, "phrase": "feasible_path"}, {"score": 0.0033737457695128233, "phrase": "search-based_approaches"}, {"score": 0.0033200826267264383, "phrase": "test_automation"}, {"score": 0.0032672702570491164, "phrase": "relatively_little_work"}, {"score": 0.0031845067058084583, "phrase": "efsm."}, {"score": 0.003103833117910855, "phrase": "integrated_search-based_approach"}, {"score": 0.0030741085942960814, "phrase": "testing_nom_an_efsm._method"}, {"score": 0.0029203055813347874, "phrase": "feasible_tp"}, {"score": 0.0027125596072406525, "phrase": "tp_feasibility_metric"}, {"score": 0.0026865721000905235, "phrase": "dataflow_dependence"}, {"score": 0.0025603123094624265, "phrase": "branch_distance_function"}, {"score": 0.0025439310656198795, "phrase": "approach_level"}, {"score": 0.002511481545937323, "phrase": "experimental_results"}, {"score": 0.002495411946660959, "phrase": "five_efsms"}, {"score": 0.0024011255612605776, "phrase": "success_rate"}, {"score": 0.002347775213789611, "phrase": "proposed_input_sequence_generator"}, {"score": 0.0021876814398268775, "phrase": "proposed_approach"}], "paper_keywords": ["Search-based testing", " EFSM", " Feasible transition paths", " Automatic test derivation"], "paper_abstract": "Context: The extended finite state machine (EFSM) is a modelling approach that has been used to represent a wide range of systems. When testing from an EFSM, it is normal to use a test criterion such as transition coverage. Such test criteria are often expressed in terms of transition paths (TPs) through an EFSM. Despite the popularity of EFSMs, testing from an EFSM is difficult for two main reasons: path feasibility and path input sequence generation. The path feasibility problem concerns generating paths that are feasible whereas the path input sequence generation problem is to find an input sequence that can traverse a feasible path. Objective: While search-based approaches have been used in test automation, there has been relatively little work that uses them when testing from an EFSM. In this paper, we propose an integrated search-based approach to automate testing nom an EFSM. Method: The approach has two phases, the aim of the first phase being to produce a feasible TP (FTP) while the second phase searches for an input sequence to trigger this TP. The first phase uses a Genetic Algorithm whose fitness function is a TP feasibility metric based on dataflow dependence. The second phase uses a Genetic Algorithm whose fitness function is based on a combination of a branch distance function and approach level. Results: Experimental results using five EFSMs found the first phase to be effective in generating FTPs with a success rate of approximately 96.6%. Furthermore, the proposed input sequence generator could trigger all the generated feasible TPs (success rate = 100%). Conclusion: The results derived from the experiment demonstrate that the proposed approach is effective in automating testing from an EFSM. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "An integrated search-based approach for automatic testing from extended finite state machine (EFSM) models", "paper_id": "WOS:000296986900002"}