{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "return-oriented_programming_attacks"}, {"score": 0.003916098498242888, "phrase": "fast_and_space-efficient_defense_technique"}, {"score": 0.003384262486955773, "phrase": "general_rop_attacks"}, {"score": 0.003223494720348768, "phrase": "additional_codes"}, {"score": 0.0031079352545607267, "phrase": "compile_time"}, {"score": 0.0029602552900111433, "phrase": "return_instructions"}, {"score": 0.0026209522797963447, "phrase": "rop_attacks"}, {"score": 0.0023776656246300063, "phrase": "file_size"}, {"score": 0.0022371907579775796, "phrase": "performance_overhead"}, {"score": 0.0021049977753042253, "phrase": "file_size_overhead"}], "paper_keywords": ["return-oriented programming", " malware defense", " software security"], "paper_abstract": "Recently, return-oriented programming (ROP) attacks have been rapidly increasing. In this letter, we introduce a fast and space-efficient defense technique, called zero-sum defender, that can respond against general ROP attacks. Our technique generates additional codes, at compile time, just before return instructions to check whether the execution has been abused by ROP attacks. We achieve very low runtime overhead with very small increase in file size. In our experimental results, performance overhead is 1.7%, and file size overhead is 4.5%.", "paper_title": "Zero-Sum Defender: Fast and Space-Efficient Defense against Return-Oriented Programming Attacks", "paper_id": "WOS:000330553400036"}