{"auto_keywords": [{"score": 0.024973734692230173, "phrase": "pvfs"}, {"score": 0.00481495049065317, "phrase": "out-of-core_cluster_applications"}, {"score": 0.004578783486828809, "phrase": "practical_approach"}, {"score": 0.004513450434595191, "phrase": "parallel_computing"}, {"score": 0.00441718685609235, "phrase": "high_performance"}, {"score": 0.004322967486451877, "phrase": "low_cost"}, {"score": 0.004023120753104693, "phrase": "increasing_data_sets"}, {"score": 0.003909065355459264, "phrase": "parallel_out-of-core_computations"}, {"score": 0.003690527690610707, "phrase": "out-of-core_version"}, {"score": 0.0035346515636097533, "phrase": "difficult_task"}, {"score": 0.0034841647157189985, "phrase": "virtual_memory_systems"}, {"score": 0.0031730701021262155, "phrase": "parallel_programming_interface"}, {"score": 0.003105305189036267, "phrase": "support_library"}, {"score": 0.003038983069081333, "phrase": "efficient_and_convenient_access"}, {"score": 0.0029740732099993706, "phrase": "out-of-core_data"}, {"score": 0.002708399936381754, "phrase": "problem_sizes"}, {"score": 0.0025021765811679446, "phrase": "execution_time"}, {"score": 0.0024664004864629724, "phrase": "jacobi_iteration"}, {"score": 0.0023791769068748194, "phrase": "virtual_memory"}], "paper_keywords": ["out-of-core computation", " cluster of workstations", " global out-of-core array", " local array file", " in-core data"], "paper_abstract": "Clusters of workstations are a practical approach to parallel computing that provide high performance at a low cost for many scientific and engineering applications. In order to handle problems with increasing data sets, methods supporting parallel out-of-core computations must be investigated. Since writing an out-of-core version of a program is a difficult task and virtual memory systems do not perform well in some cases, we have developed a parallel programming interface and the support library to provide efficient and convenient access to the out-of-core data. This paper focuses on how these components extend the range of problem sizes that can be solved on the cluster of workstations. Execution time of Jacobi iteration when using our interface, virtual memory and PVFS are compared to characterize the performance for various problem sizes, and it is concluded that our new interface significantly increases the sizes of problems that can be efficiently solved.", "paper_title": "A parallel programming interface for out-of-core cluster applications", "paper_id": "WOS:000240903400008"}