{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "based_constrained_test_case_selection"}, {"score": 0.0047357308775561255, "phrase": "software_testing"}, {"score": 0.004657808551825796, "phrase": "high_quality_products"}, {"score": 0.004315487055548749, "phrase": "input_test_suites"}, {"score": 0.0041469500929423595, "phrase": "test_goals"}, {"score": 0.004078675940346967, "phrase": "large_test_suites"}, {"score": 0.0035124618008923504, "phrase": "tc_selection_problem"}, {"score": 0.003477628306017313, "phrase": "constrained_search_based_optimization_task"}, {"score": 0.003397683082821229, "phrase": "fitness_function"}, {"score": 0.003319569552937513, "phrase": "resultant_suite"}, {"score": 0.003264872488939969, "phrase": "execution_effort"}, {"score": 0.0032004205378150354, "phrase": "selected_tcs"}, {"score": 0.0031372369299648203, "phrase": "search_process"}, {"score": 0.003065092702656417, "phrase": "particle_swarm_optimization"}, {"score": 0.0027649684074145028, "phrase": "tc_selection"}, {"score": 0.0026656724016739905, "phrase": "constrained_optimization_problem"}, {"score": 0.0026217213613095322, "phrase": "binary_constrained_pso"}, {"score": 0.0025784931028501375, "phrase": "functional_tc_selection"}, {"score": 0.0025024660249697408, "phrase": "local_search_mechanisms"}, {"score": 0.002318180580715058, "phrase": "mobile_devices_domain"}, {"score": 0.002287542098172185, "phrase": "performed_experiments"}, {"score": 0.0022648286660146314, "phrase": "bcpso"}, {"score": 0.002249811525923913, "phrase": "promising_results"}, {"score": 0.0022274718912558343, "phrase": "optimization_tasks"}, {"score": 0.002183454435945014, "phrase": "hybrid_algorithms"}, {"score": 0.002168975681697056, "phrase": "statistically_better_results"}, {"score": 0.0021474369836979048, "phrase": "individual_search_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Search Based Test Case Selection", " Software Testing", " Execution effort", " Search based software engineering"], "paper_abstract": "Software testing is essential to guarantee high quality products. However, it is a very expensive activity, particularly when manually performed. One way to cut down costs is by reducing the input test suites, which are usually large in order to fully satisfy the test goals. Yet, since large test suites usually contain redundancies (i.e., two or more test cases (TC) covering the same requirement/piece of code), it is possible to reduce them in order to respect time/people constraints without severely compromising coverage. In this light, we formulated the TC selection problem as a constrained search based optimization task, using requirements coverage as the fitness function to be maximized (quality of the resultant suite), and the execution effort (time) of the selected TCs as a constraint in the search process. Our work is based on the Particle Swarm Optimization (PSO) algorithm, which is simple and efficient when compared to other widespread search techniques. Despite that, besides our previous works, we did not find any other proposals using PSO for TC selection, neither we found solutions treating this task as a constrained optimization problem. We implemented a Binary Constrained PSO (BCPSO) for functional TC selection, and two hybrid algorithms integrating BCPSO with local search mechanisms, in order to refine the solutions provided by BCPSO. These algorithms were evaluated using two different real-world test suites of functional TCs related to the mobile devices domain. In the performed experiments, the BCPSO obtained promising results for the optimization tasks considered. Also, the hybrid algorithms obtained statistically better results than the individual search techniques. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Search based constrained test case selection using execution effort", "paper_id": "WOS:000319239700016"}