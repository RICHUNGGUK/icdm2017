{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "fast_marching_algorithm"}, {"score": 0.004215397034321004, "phrase": "eikonal_equations"}, {"score": 0.00398177607914381, "phrase": "original_run-time"}, {"score": 0.00369022262431101, "phrase": "lower_run-time_cost"}, {"score": 0.003199687131875466, "phrase": "original_algorithm"}, {"score": 0.002965229277927781, "phrase": "straight_forward_untidy_priority_queue"}, {"score": 0.0026705669656375197, "phrase": "marching_computation"}, {"score": 0.002546466113418944, "phrase": "underlying_framework"}, {"score": 0.0022287497627555895, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["fast marching", " Hamilton-Jacobi and Eikonal equations", " distance functions", " bucket sort", " untidy priority queue"], "paper_abstract": "In this note we present an implementation of the fast marching algorithm for solving Eikonal equations that in practice reduces the original run-time from O(NlogN) to linear. This lower run-time cost is obtained while keeping an error bound of the same order of magnitude as the original algorithm. This improvement is achieved introducing the straight forward untidy priority queue, obtained via a quantization of the priorities in the marching computation. We present the underlying framework, estimations on the error, and examples showing the usefulness of the proposed approach. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "O(N) implementation of the fast marching algorithm", "paper_id": "WOS:000234120100002"}