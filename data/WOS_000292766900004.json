{"auto_keywords": [{"score": 0.024843328474987797, "phrase": "xpath"}, {"score": 0.00481495049065317, "phrase": "linear_time"}, {"score": 0.004466519142879166, "phrase": "attribute_and_text_values"}, {"score": 0.00417160036938041, "phrase": "unary_query_phi"}, {"score": 0.0037651925588909783, "phrase": "document_t"}, {"score": 0.003284026247389735, "phrase": "bigger_fragment"}, {"score": 0.003239418275717787, "phrase": "kleene_star"}, {"score": 0.002364777610365689, "phrase": "binary_queries"}, {"score": 0.0021340178074057245, "phrase": "selected_pairs"}, {"score": 0.0021049977753042253, "phrase": "constant_delay"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Tree with data", " XML", " XPath"], "paper_abstract": "We consider a fragment of XPath 1.0, where attribute and text values may be compared. We show that for any unary query phi in this fragment, the set of nodes that satisfy the query in a document t can be calculated in time O(vertical bar phi vertical bar(3)vertical bar t vertical bar). We show that for a query in a bigger fragment with Kleene star allowed, the same can be done in time O(2(O(vertical bar phi vertical bar))vertical bar t vertical bar) or in time O(vertical bar phi vertical bar(3)vertical bar t vertical bar log vertical bar t vertical bar). Finally, we present algorithms for binary queries of XPath, which do a precomputation on the document and then output the selected pairs with constant delay.", "paper_title": "XPath Evaluation in Linear Time", "paper_id": "WOS:000292766900004"}