{"auto_keywords": [{"score": 0.04210030415693984, "phrase": "hgs"}, {"score": 0.00481495049065317, "phrase": "integrated_surface-subsurface_hydrologic_systems"}, {"score": 0.004674402456361649, "phrase": "wide_range"}, {"score": 0.0046437283535486545, "phrase": "highly_nonlinear_processes"}, {"score": 0.004552902997092495, "phrase": "hill_slope"}, {"score": 0.004508155639663496, "phrase": "continental_scale"}, {"score": 0.004434547543497673, "phrase": "computational_efficiency"}, {"score": 0.004347795623597379, "phrase": "critical_issue"}, {"score": 0.004319255461225845, "phrase": "water_resource_management"}, {"score": 0.004165586713723931, "phrase": "flexible_parallel_computing_framework"}, {"score": 0.004084126417167542, "phrase": "openmp"}, {"score": 0.0038743931383378558, "phrase": "surface-subsurface_water_flow"}, {"score": 0.0037611961382938964, "phrase": "computing_efficiency"}, {"score": 0.0036153760112398485, "phrase": "jacobian_matrix_assembly"}, {"score": 0.003486842343959148, "phrase": "lu"}, {"score": 0.0033625148111740984, "phrase": "memory_access_latency"}, {"score": 0.0032534813517243275, "phrase": "simulation_solutions"}, {"score": 0.003221463787552773, "phrase": "parallel_computing"}, {"score": 0.003086311260099341, "phrase": "finite_linear_solver_iteration_tolerance"}, {"score": 0.003045874333486276, "phrase": "slightly_different_solutions"}, {"score": 0.0030059656149799122, "phrase": "convergence_tolerance"}, {"score": 0.0029763765837545, "phrase": "maximum_difference"}, {"score": 0.00294707794932759, "phrase": "head_solution"}, {"score": 0.00291806687851358, "phrase": "serial_and_parallel_simulations"}, {"score": 0.002832731124016696, "phrase": "typical_convergence_tolerances"}, {"score": 0.002795607293713107, "phrase": "parallel_schemes"}, {"score": 0.0026694534457234933, "phrase": "physically-based_hydrologic_simulator"}, {"score": 0.0022338277339064155, "phrase": "efficient_construction"}, {"score": 0.0021972723598946446, "phrase": "jacobian_matrices"}, {"score": 0.0021470954708827125, "phrase": "parallel_library_packages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["High performance computing", " Parallel algorithms", " OpenMp", " Hydrologic simulation", " Jacobian matrix", " HydroGeoSphere", " BiCGSTAB", " Linear iterative solver", " Newton method", " Integrated surface-subsurface modeling"], "paper_abstract": "Hydrologic modeling requires the handling of a wide range of highly nonlinear processes from the scale of a hill slope to the continental scale, and thus the computational efficiency of the model becomes a critical issue for water resource management. This work is aimed at implementing and evaluating a flexible parallel computing framework for hydrologic simulations by applying OpenMP in the HydroGeoSphere (HGS) model. HGS is a 3D control-volume finite element model that solves the nonlinear coupled equations describing surface-subsurface water flow, solute migration and energy transport. The computing efficiency of HGS is improved by three parallel computing schemes: 1) parallelization of Jacobian matrix assembly, 2) multi-block node reordering for performing LU solve efficiently, and 3) parameter privatization for reducing memory access latency. Regarding to the accuracy and consistency of the simulation solutions obtained with parallel computing, differences in the solutions are entirely due to use of a finite linear solver iteration tolerance, which produces slightly different solutions which satisfy the convergence tolerance. The maximum difference in the head solution between the serial and parallel simulations is less than 10(-3) m, using typical convergence tolerances. Using the parallel schemes developed in this work, three key achievements can be summarized: (1) parallelization of a physically-based hydrologic simulator can be performed in a manner that allows the same code to be executed on various shared memory platforms with minimal maintenance; (2) a general, flexible and robust parallel iterative sparse-matrix solver can be implemented in a wide range of numerical models employing either structured or unstructured mesh; and (3) the methodology is flexible, especially for the efficient construction of the coefficient and Jacobian matrices, compared to other parallelized hydrologic models which use parallel library packages. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "A parallel computational framework to solve flow and transport in integrated surface-subsurface hydrologic systems", "paper_id": "WOS:000343852500004"}