{"auto_keywords": [{"score": 0.025921377359192966, "phrase": "tpm"}, {"score": 0.00481495049065317, "phrase": "legacy_operating_systems"}, {"score": 0.004756805752518494, "phrase": "trusted_platform_modules"}, {"score": 0.004449280529563265, "phrase": "network_communication"}, {"score": 0.004238134740341528, "phrase": "cryptographic_algorithms"}, {"score": 0.003964007795174772, "phrase": "communicating_end_points"}, {"score": 0.00386876598761639, "phrase": "security_problems"}, {"score": 0.0037075456471849892, "phrase": "remote_verification"}, {"score": 0.003574695610710444, "phrase": "untrusted_platform"}, {"score": 0.003531474887552889, "phrase": "trusted_computing_solutions"}, {"score": 0.0032828706086018133, "phrase": "typically_a_secure_operating_system"}, {"score": 0.00316518932828897, "phrase": "secure_coprocessor"}, {"score": 0.0029422942175866057, "phrase": "checksum_calculations"}, {"score": 0.0028367868542874763, "phrase": "legacy_platforms"}, {"score": 0.002735052488172277, "phrase": "strong_security_assurance"}, {"score": 0.0026530590435527527, "phrase": "mixed_solution"}, {"score": 0.0025892330566358503, "phrase": "trusted_computing_hardware"}, {"score": 0.0023346234464901978, "phrase": "timing-based_remote_code_integrity_verification_mechanism"}, {"score": 0.0022371907579775796, "phrase": "overall_security"}, {"score": 0.0021966859554037174, "phrase": "timed_execution_scheme"}, {"score": 0.0021049977753042253, "phrase": "secure_operating_system"}], "paper_keywords": ["Remote software authentication", " Attestation", " Trusted platform module", " Timed execution"], "paper_abstract": "A lot of progress has been made to secure network communication, e.g., through the use of cryptographic algorithms. However, this offers only a partial solution as long as the communicating end points still suffer from security problems. A number or applications require remote verification of software executing on an untrusted platform. Trusted computing solutions propose to solve this problem through software and hardware changes, typically a secure operating system and the addition of a secure coprocessor, respectively. On the other hand, timed execution of code checksum Calculations aims for a solution on legacy platforms, but can not provide strong security assurance. We present a mixed solution by using the trusted computing hardware, namely the time stamping functionality of the Trusted Platform Module (TPM), in combination with a timing-based remote code integrity verification mechanism. In this way, the overall security of the timed execution scheme can be improved without requiring a secure operating system. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Remote attestation on legacy operating systems with trusted platform modules", "paper_id": "WOS:000261896200003"}