{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "constraint-based_mutation"}, {"score": 0.00462919213721188, "phrase": "metaheuristic_search_techniques"}, {"score": 0.004551781491498328, "phrase": "constraint_solvers"}, {"score": 0.004278807087784626, "phrase": "specific_drawbacks"}, {"score": 0.004230956171850591, "phrase": "search-based_methods"}, {"score": 0.0041136473765874815, "phrase": "local_optima"}, {"score": 0.003999578057088828, "phrase": "search_landscape"}, {"score": 0.003888659470009222, "phrase": "constraint-based_approaches"}, {"score": 0.003266201217790818, "phrase": "high-level_view"}, {"score": 0.0032115093493071366, "phrase": "proposed_method"}, {"score": 0.0031577303835881964, "phrase": "genetic_algorithm"}, {"score": 0.002918394200972564, "phrase": "constraint_solver"}, {"score": 0.0028214413724451442, "phrase": "mutated_offspring"}, {"score": 0.0025638362414466278, "phrase": "branch_coverage"}, {"score": 0.002506715532901322, "phrase": "search-based_techniques"}, {"score": 0.0022906498741695094, "phrase": "constraint-based_techniques"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["search-based testing", " constraint-based testing", " test data generation"], "paper_abstract": "Many modern automated test generators are based on either metaheuristic search techniques or use constraint solvers. Both approaches have their advantages, but they also have specific drawbacks: Search-based methods may get stuck in local optima and degrade when the search landscape offers no guidance; constraint-based approaches, on the other hand, can only handle certain domains efficiently. This paper describes a method that integrates both techniques and delivers the best of both worlds. On a high-level view, the proposed method uses a genetic algorithm to generate tests, but the twist is that during evolution, a constraint solver is used to ensure that mutated offspring efficiently explores different control flow. Experiments on 20 case study programmes show that on average the combination improves branch coverage by 28% over search-based techniques while reducing the number of tests by 55%, and improves coverage by 13% over constraint-based techniques while reducing the number of tests by 73%. Copyright (C) 2013 John Wiley & Sons, Ltd.", "paper_title": "Search-based testing using constraint-based mutation", "paper_id": "WOS:000340494300004"}