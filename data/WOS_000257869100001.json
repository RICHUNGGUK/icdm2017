{"auto_keywords": [{"score": 0.045428111966313155, "phrase": "critical_section"}, {"score": 0.015719716506582538, "phrase": "group_mutual_exclusion_problem"}, {"score": 0.01135392507630319, "phrase": "message_complexity"}, {"score": 0.00774133920114679, "phrase": "proposed_algorithm"}, {"score": 0.004680624753255133, "phrase": "mutual_exclusion_problem"}, {"score": 0.004109212945115815, "phrase": "distributed_algorithm"}, {"score": 0.003927203683176278, "phrase": "distributed_systems"}, {"score": 0.003313380246267815, "phrase": "communication_structure"}, {"score": 0.0032026066791743866, "phrase": "request_messages"}, {"score": 0.0025819015229390663, "phrase": "worst_case"}, {"score": 0.0025383451160985488, "phrase": "vertical_bar_q_vertical_bar"}, {"score": 0.002279011030331704, "phrase": "discrete_event"}, {"score": 0.0021655683497137234, "phrase": "high_concurrency"}, {"score": 0.0021049977753042253, "phrase": "performance_measure"}], "paper_keywords": ["distributed systems", " distributed data structures", " mutual exclusion", " synchronization"], "paper_abstract": "The group mutual exclusion problem is a generalization of mutual exclusion problem such that a set of processes in the same group can enter a critical section simultaneously. In this paper, we propose a distributed algorithm for the group mutual exclusion problem in asynchronous message passing distributed systems. Our algorithm is based on tokens, and a process that obtains a token can enter a critical section. To reduce message complexity, it uses a coterie as a communication structure when a process sends a request messages. Informally, a coterie is a set of quorums, each of which is a subset of the process set, and any two quorums share at least one process. The message complexity of our algorithm is O(vertical bar Q vertical bar) in the worst case, where vertical bar Q vertical bar is a quorum size that the algorithm adopts. Performance of the proposed algorithm is presented by analysis and discrete event simulation. In particular, the proposed algorithm achieves high concurrency, which is a performance measure for the number of processes that can be in a critical section simultaneously.", "paper_title": "A token-based distributed group mutual exclusion algorithm with quorums", "paper_id": "WOS:000257869100001"}