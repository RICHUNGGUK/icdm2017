{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "proposed_aggressive_visibility_solution"}, {"score": 0.0046073860169839305, "phrase": "stochastic_ray_shooting"}, {"score": 0.004360412703519539, "phrase": "triangular_model"}, {"score": 0.003948613642680196, "phrase": "connectivity_information"}, {"score": 0.0038624981944755813, "phrase": "volumetric_occluders"}, {"score": 0.003615217162972726, "phrase": "large_occluders"}, {"score": 0.0032376465741070274, "phrase": "proposed_algorithm"}, {"score": 0.0031669873302916, "phrase": "practically_memoryless"}, {"score": 0.002996992362027833, "phrase": "large_memory_consumption_problems"}, {"score": 0.0026252106881752067, "phrase": "ray_mutations"}, {"score": 0.0025678829712650437, "phrase": "ray_space"}, {"score": 0.0023249757987087033, "phrase": "new_triangles"}, {"score": 0.002200077887697072, "phrase": "sampling_efficiency"}, {"score": 0.0021520139248317333, "phrase": "previous_work"}], "paper_keywords": ["visibility", " occlusion culling", " PVS", " visibility sampling"], "paper_abstract": "This paper addresses the problem of computing the triangles visible from a region in space. The proposed aggressive visibility solution is based on stochastic ray shooting and can take any triangular model as input. We do not rely on connectivity information, volumetric occluders, or the availability of large occluders, and can therefore process any given input scene. The proposed algorithm is practically memoryless, thereby alleviating the large memory consumption problems prevalent in several previous algorithms. The strategy of our algorithm is to use ray mutations in ray space to cast rays that are likely to sample new triangles. Our algorithm improves the sampling efficiency of previous work by over two orders of magnitude.", "paper_title": "Guided visibility sampling", "paper_id": "WOS:000239817400004"}