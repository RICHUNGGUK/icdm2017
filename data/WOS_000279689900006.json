{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.0045052562941109734, "phrase": "forest_rendering"}, {"score": 0.0043786774510943625, "phrase": "large-scale_forest_scenes"}, {"score": 0.004265042283300616, "phrase": "gpu."}, {"score": 0.0040969285074699, "phrase": "challenging_problem"}, {"score": 0.003944112858235306, "phrase": "geometric_complexity"}, {"score": 0.00369022262431101, "phrase": "current_graphics_hardware"}, {"score": 0.0033875770020590796, "phrase": "novel_approach"}, {"score": 0.003261133560558666, "phrase": "dynamic_quad_stream"}, {"score": 0.0031693980719538287, "phrase": "gpu_buffers"}, {"score": 0.0031096747349602344, "phrase": "view-dependent_forest_rendering"}, {"score": 0.003022186855664124, "phrase": "incremental_quad_stream_updating_process"}, {"score": 0.0028274743316389437, "phrase": "massively_parallel_architecture"}, {"score": 0.0027479040199262393, "phrase": "gpu_pipeline"}, {"score": 0.0025954008219792337, "phrase": "continuous_data_exchange"}, {"score": 0.0021454671611847507, "phrase": "good_performance"}], "paper_keywords": ["real-time rendering", " large-scale forest", " quad stream", " geometry shader"], "paper_abstract": "Rendering large-scale forest scenes in real-time is a challenging problem, since the geometric complexity is far beyond the capabilities of current graphics hardware. In this paper, we propose a novel approach that adopts a dynamic quad stream residing on GPU buffers for view-dependent forest rendering. The incremental quad stream updating process is well-suited to the massively parallel architecture of the GPU pipeline, and it requires no continuous data exchange between CPU and GPU. The implementation of the algorithm is quite straightforward. Despite its simplicity, the algorithm achieves good performance with low memory, storage, and CPU costs.", "paper_title": "GPU-based dynamic quad stream for forest rendering", "paper_id": "WOS:000279689900006"}