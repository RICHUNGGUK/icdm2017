{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_architecture"}, {"score": 0.03687484221926564, "phrase": "bgg_reliability_model"}, {"score": 0.014234279280203752, "phrase": "bgg_graph"}, {"score": 0.008399430262125215, "phrase": "system_reliability"}, {"score": 0.004778594263962987, "phrase": "big_data-oriented_software_systems"}, {"score": 0.004566123591480369, "phrase": "big_data"}, {"score": 0.0044634416051962545, "phrase": "software_architectures"}, {"score": 0.004297388539539564, "phrase": "dynamic_evolution"}, {"score": 0.0041374874583908535, "phrase": "architecture_description_techniques"}, {"score": 0.004013843843250455, "phrase": "dynamic_changes"}, {"score": 0.0036784938661226104, "phrase": "breeze_graph_grammar"}, {"score": 0.003448705829033573, "phrase": "software_system_reliability_modeling"}, {"score": 0.003233233457143741, "phrase": "bgg"}, {"score": 0.0031365196064043494, "phrase": "system_dynamic_evolution"}, {"score": 0.0031127970604842375, "phrase": "bgg_transformation_rules"}, {"score": 0.0028851913035322415, "phrase": "system_error_information"}, {"score": 0.002841701708055512, "phrase": "system_error_state_transition"}, {"score": 0.002564763827975352, "phrase": "reliability_evaluation"}, {"score": 0.0024785689583828796, "phrase": "big_data-based_centralized_system"}, {"score": 0.002368120987066921, "phrase": "dynamic_change_requirements"}, {"score": 0.002279841453843241, "phrase": "bgg_productions"}, {"score": 0.0021453734588569823, "phrase": "gspn._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["big data", " software architecture", " graph grammar", " BGG", " reliability", " GSPN"], "paper_abstract": "Various technologies have been proposed to support the processing of big data. However, such technologies require software architectures not only to adapt to the changes and achieve dynamic evolution but also to be reliable. Most of the architecture description techniques are not able to directly capture the dynamic changes in the definition of the software architecture and cannot analyze or evaluate the system reliability. In this paper, we provide a breeze graph grammar (BGG) to model the software architecture in both static and dynamic aspects and give a BGG reliability model to help supporting software system reliability modeling and evaluation. Our work expands this idea in three directions. We first present the definition of BGG to specify the software architecture and map the system dynamic evolution to BGG transformation rules. Second, a BGG reliability model is proposed in which we add error attributes to the BGG graph for capturing the system error information, and the system error state transition is performed through BGG graph rewriting rules. Then, we study the rules to map the BGG reliability model to a generalized stochastic Petri net (GSPN) model, which can be used for reliability evaluation. Throughout this paper, we use a big data-based centralized system to demonstrate our approach. The BGG graph rewriting characteristic supports the dynamic change requirements, and the architecture is statically checked through the BGG productions. Moreover, system reliability modeling and evaluation can be achieved through the BGG reliability model by combining GSPN. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Breeze graph grammar: a graph grammar approach for modeling the software architecture of big data-oriented software systems", "paper_id": "WOS:000357793500002"}