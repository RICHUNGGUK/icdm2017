{"auto_keywords": [{"score": 0.046069464194864136, "phrase": "function_blocks"}, {"score": 0.00481495049065317, "phrase": "globally_asynchronous_locally_synchronous_systems"}, {"score": 0.00466898011034975, "phrase": "iec"}, {"score": 0.004550669123303854, "phrase": "generic_architecture"}, {"score": 0.004481132747216135, "phrase": "distributed_industrial_control_systems"}, {"score": 0.00421340730888561, "phrase": "formal_model"}, {"score": 0.0040438338011467845, "phrase": "function_block_compositions"}, {"score": 0.003782655283668953, "phrase": "composite_behavior"}, {"score": 0.003724810609448597, "phrase": "single_computational_node"}, {"score": 0.0035021127041237887, "phrase": "distributed_setting"}, {"score": 0.003209152260950748, "phrase": "abstract_way"}, {"score": 0.003048370487544551, "phrase": "particular_implementation"}, {"score": 0.002851301751761804, "phrase": "different_tradeoffs"}, {"score": 0.0026532596852754525, "phrase": "standard's_notion"}, {"score": 0.0026261108615242557, "phrase": "communication_function_blocks"}, {"score": 0.0023816257768353344, "phrase": "separate_programs"}, {"score": 0.0022973933270056743, "phrase": "additional_middleware"}, {"score": 0.0022738775158524793, "phrase": "run-time_environment"}, {"score": 0.0022275639370573264, "phrase": "resulting_distributed_code"}, {"score": 0.002159852420283463, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "industrial_case_study"}], "paper_keywords": ["Distributed systems", " function blocks", " globally asynchronous locally synchronous (GALS)", " IEC 61499", " synthesis"], "paper_abstract": "The IEC 61499 standard defines a generic architecture for designing distributed industrial control systems based on function blocks. The standard, however, lacks a formal model of computation to describe the behavior of function block compositions. While various models have been prescribed in the literature to define the composite behavior on a single computational node, few have been proposed to directly address compositions in a distributed setting. This paper proposes a globally asynchronous locally synchronous (GALS) model for distributed function block systems. The model provides an abstract way to view communication between function blocks without implying yet any particular implementation. This abstraction can then be subsequently refined to obtain various implementations with different tradeoffs. We do so using an approach that is fully compatible with the standard's notion of communication function blocks, which abstract underlying communication mechanisms from the application. As a contribution, we have developed a compiler that automatically synthesizes separate programs for a given distributed function block system without needing any additional middleware or run-time environment to execute the resulting distributed code. The efficacy of the proposed approach is demonstrated through an industrial case study.", "paper_title": "Synthesizing Globally Asynchronous Locally Synchronous Systems With IEC 61499", "paper_id": "WOS:000312885400027"}