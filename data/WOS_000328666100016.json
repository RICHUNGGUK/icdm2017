{"auto_keywords": [{"score": 0.015496930491878636, "phrase": "multi-dimensional_ffts"}, {"score": 0.013529699422278735, "phrase": "smallest_communication_amounts"}, {"score": 0.012109019419264455, "phrase": "fft_data"}, {"score": 0.011599544943626909, "phrase": "one-dimensional_data"}, {"score": 0.00481495049065317, "phrase": "minimum_communication_amount"}, {"score": 0.004694873827535293, "phrase": "fast_fourier_transform"}, {"score": 0.004661194472362165, "phrase": "fft"}, {"score": 0.004258995791471342, "phrase": "decomposition_method"}, {"score": 0.003976656675903324, "phrase": "previously_proposed_methods"}, {"score": 0.0037398806676032068, "phrase": "proposed_method"}, {"score": 0.0036202697222281373, "phrase": "row-wise_basis"}, {"score": 0.0035683401689358993, "phrase": "multi-dimensional_data"}, {"score": 0.0034792431564692997, "phrase": "corresponding_coordinates"}, {"score": 0.0032367108248520277, "phrase": "block_distribution"}, {"score": 0.0031444844772458504, "phrase": "previous_works"}, {"score": 0.0029358111718032704, "phrase": "lowest_possible_dimensions"}, {"score": 0.002811191663575046, "phrase": "row-wise_decomposition"}, {"score": 0.002750874355974879, "phrase": "data_transpose"}, {"score": 0.002721201438773336, "phrase": "different_transpose_order_results"}, {"score": 0.002624577999455744, "phrase": "best_transpose_orders"}, {"score": 0.002486021541116251, "phrase": "possible_cases"}, {"score": 0.0024326641072463157, "phrase": "general_parallel_software_package"}, {"score": 0.002337791830793841, "phrase": "numerical_results"}, {"score": 0.002320943211698446, "phrase": "good_performance"}, {"score": 0.0022143417457627006, "phrase": "communication_efficiency"}, {"score": 0.002127965733093433, "phrase": "highly_efficient_parallel_packages"}], "paper_keywords": ["Fast Fourier transform", " Multi-dimensional FFTs", " Domain decomposition for FFTs", " Domain decomposition method", " Parallel FFTs"], "paper_abstract": "The fast Fourier transform (FFT) is undoubtedly an essential primitive that has been applied in various fields of science and engineering. In this paper, we present a decomposition method for the parallelization of multi-dimensional FFTs with the smallest communication amounts for all ranges of the number of processes compared to previously proposed methods. This is achieved by two distinguishing features: adaptive decomposition and transpose order awareness. In the proposed method, the FFT data is decomposed based on a row-wise basis that maps the multi-dimensional data into one-dimensional data, and translates the corresponding coordinates from multi-dimensions into one dimension so that the one-dimensional data can be divided and allocated equally to the processes using a block distribution. As a result and different from previous works that have the dimensions of decomposition pre-defined, our method can adaptively decompose the FFT data on the lowest possible dimensions depending on the number of processes. In addition, this row-wise decomposition provides plenty of alternatives in data transpose, and different transpose order results in different amounts of communication. We identify the best transpose orders with the smallest communication amounts for the 3-D, 4-D, and 5-D FFTs by analyzing all possible cases. We also develop a general parallel software package for the most popular 3-D FFT based on our method using the 2-D domain decomposition. Numerical results show good performance and scaling properties of our implementation in comparison with other parallel packages. Given both communication efficiency and scalability, our method is promising in the development of highly efficient parallel packages for the FFT. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A decomposition method with minimum communication amount for parallelization of multi-dimensional FFTs", "paper_id": "WOS:000328666100016"}