{"auto_keywords": [{"score": 0.049472942426010684, "phrase": "rrl"}, {"score": 0.0479944128286434, "phrase": "rl"}, {"score": 0.00481495049065317, "phrase": "relational_reinforcement_learning"}, {"score": 0.004664352260912174, "phrase": "traditional_reinforcement_learning"}, {"score": 0.004489810932879285, "phrase": "strong_emphasis"}, {"score": 0.004133627071344356, "phrase": "learning_version"}, {"score": 0.004055511503825102, "phrase": "classic_blocks_world_planning_problem"}, {"score": 0.003525861581971337, "phrase": "tetris_game"}, {"score": 0.0033295966773779174, "phrase": "training_examples"}, {"score": 0.0028397103530211415, "phrase": "function_approximation_approach"}, {"score": 0.0026815368507715, "phrase": "similar_learning_accuracies"}, {"score": 0.0026307897899760383, "phrase": "better_running_times"}, {"score": 0.0021870332034407817, "phrase": "relational_method"}], "paper_keywords": ["Q-learning", " reinforcement learning", " function approximation"], "paper_abstract": "Relational reinforcement learning (RRL) combines traditional reinforcement learning (RL) with a strong emphasis on a relational (rather than attribute-value) representation. Earlier work used RRL on a learning version of the classic Blocks World planning problem (a version where the learner does not know what the result of taking an action will be) and the Tetris game. Learning results based on the structure of training examples were obtained, such as learning in a mixed 3-5 block environment and being able to perform in a 3 or 10 block environment. Here, we instead take a function approximation approach to RL for the Blocks World problem. We obtain similar learning accuracies, with better running times, allowing us to consider much larger problem sizes. For instance, we can train on 15 blocks and then perform well on worlds with 100-800 blocks - using less running time than the relational method required to perform well for 3-10 blocks.", "paper_title": "Reinforcement learning via approximation of the Q-function", "paper_id": "WOS:000279981000003"}