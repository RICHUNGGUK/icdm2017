{"auto_keywords": [{"score": 0.04313137598710988, "phrase": "tolerance_graphs"}, {"score": 0.010104052228742867, "phrase": "perfect_graphs"}, {"score": 0.00930434524336377, "phrase": "np"}, {"score": 0.005774423736421845, "phrase": "trapezoid_graphs"}, {"score": 0.0052592029366138335, "phrase": "vertex_splitting"}, {"score": 0.00481495049065317, "phrase": "model_interval_relations"}, {"score": 0.004407813106104401, "phrase": "constraint-based_temporal_reasoning"}, {"score": 0.004339609346924681, "phrase": "scheduling_problems"}, {"score": 0.004250302819248558, "phrase": "optimization_problems"}, {"score": 0.004173662213788022, "phrase": "general_graphs"}, {"score": 0.003880619617159799, "phrase": "tolerance_graph"}, {"score": 0.003781005930058317, "phrase": "bounded_tolerance_graphs"}, {"score": 0.0034162643819889054, "phrase": "cambridge_university_press"}, {"score": 0.0033985500092752027, "phrase": "cambridge"}, {"score": 0.003380935893200865, "phrase": "uk"}, {"score": 0.0032599633778910516, "phrase": "c._l._monma"}, {"score": 0.003234615195382533, "phrase": "southeastern_conference"}, {"score": 0.0032011229656422596, "phrase": "graph_theory"}, {"score": 0.003167976579966869, "phrase": "congr"}, {"score": 0.0029916929549256297, "phrase": "recognition_problems"}, {"score": 0.0028996963188373144, "phrase": "input_graph"}, {"score": 0.0028771413440398614, "phrase": "trapezoid_graph"}, {"score": 0.002854761308379149, "phrase": "presented_results"}, {"score": 0.002759769970554556, "phrase": "polynomial_recognition_algorithms"}, {"score": 0.0026265780539030106, "phrase": "natural_special_case"}, {"score": 0.0025657442830956017, "phrase": "polynomial_time"}, {"score": 0.0024546444592621207, "phrase": "acyclic_orientation"}, {"score": 0.00239778324260337, "phrase": "new_algorithm"}, {"score": 0.0023361440016375972, "phrase": "permutation_graph"}, {"score": 0.002305919776918934, "phrase": "new_acyclic_orientation_property"}, {"score": 0.0022583704173318123, "phrase": "independent_interest"}, {"score": 0.00220030712402947, "phrase": "powerful_tool"}, {"score": 0.002171836484200008, "phrase": "efficient_recognition_algorithms"}, {"score": 0.0021159932825818065, "phrase": "d._g._corneil"}, {"score": 0.0021049977753042253, "phrase": "discrete_appl"}], "paper_keywords": ["tolerance graphs", " bounded tolerance graphs", " recognition", " vertex splitting", " NP-complete", " trapezoid graphs", " permutation graphs"], "paper_abstract": "Tolerance graphs model interval relations in such a way that intervals can tolerate a certain degree of overlap without being in conflict. This subclass of perfect graphs has been extensively studied, due to both its interesting structure and its numerous applications (in bioinformatics, constraint-based temporal reasoning, resource allocation, and scheduling problems, among others). Several efficient algorithms for optimization problems that are NP-hard in general graphs have been designed for tolerance graphs. In spite of this, the recognition of tolerance graphs-namely, the problem of deciding whether a given graph is a tolerance graph-as well as the recognition of their main subclass of bounded tolerance graphs, have been the most fundamental open problems on this class of graphs (cf. the book on tolerance graphs [M. C. Golumbic and A. N. Trenk, Tolerance Graphs, Cambridge Stud. Adv. Math. 89, Cambridge University Press, Cambridge, UK, 2004]) since their introduction in 1982 [M. C. Golumbic and C. L. Monma, Proceedings of the 13th Southeastern Conference on Combinatorics, Graph Theory and Computing, Congr. Numer., 35 (1982), pp. 321-331]. In this article we prove that both recognition problems are NP-complete, even in the case where the input graph is a trapezoid graph. The presented results are surprising because, on the one hand, most subclasses of perfect graphs admit polynomial recognition algorithms and, on the other hand, bounded tolerance graphs were believed to be efficiently recognizable as they are a natural special case of trapezoid graphs (which can be recognized in polynomial time) and share a very similar structure with them. For our reduction we extend the notion of an acyclic orientation of permutation and trapezoid graphs. Our main tool is a new algorithm that uses vertex splitting to transform a given trapezoid graph into a permutation graph, while preserving this new acyclic orientation property. This method of vertex splitting is of independent interest; very recently, it was also proved a powerful tool in the design of efficient recognition algorithms for other classes of graphs [G. B. Mertzios and D. G. Corneil, Discrete Appl. Math., 159 (2011), pp. 1131-1147].", "paper_title": "THE RECOGNITION OF TOLERANCE AND BOUNDED TOLERANCE GRAPHS", "paper_id": "WOS:000296584900002"}