{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "state_sequence_invariants"}, {"score": 0.04953663923501101, "phrase": "general_game_playing"}, {"score": 0.04227911419583832, "phrase": "game-specific_knowledge"}, {"score": 0.0046797114400479135, "phrase": "general_game_player"}, {"score": 0.0044967055264893184, "phrase": "previously_unknown_games"}, {"score": 0.004271843728776305, "phrase": "existing_successful_approaches"}, {"score": 0.004223415145617665, "phrase": "general_game"}, {"score": 0.003944112858235306, "phrase": "current_systems"}, {"score": 0.003789763907758991, "phrase": "approximate_method"}, {"score": 0.003725470458263889, "phrase": "random_sample_matches"}, {"score": 0.0034395119150793787, "phrase": "theoretically_founded_and_practically_viable_method"}, {"score": 0.00308610073274614, "phrase": "simple_formal_language"}, {"score": 0.002898291237210567, "phrase": "proof_theory"}, {"score": 0.002753138528582461, "phrase": "answer_set_programming"}, {"score": 0.002585539416877115, "phrase": "formal_semantics"}, {"score": 0.002556182297129089, "phrase": "gdl"}, {"score": 0.0024700776739384977, "phrase": "extensive_experiments"}, {"score": 0.0024281181691350085, "phrase": "practical_implementation"}, {"score": 0.002386869729952315, "phrase": "proof_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["General game playing", " Knowledge representation", " Answer set programming"], "paper_abstract": "A general game player is a system that can play previously unknown games given nothing but their rules. Many of the existing successful approaches to general game playing require to generate some form of game-specific knowledge, but when current systems establish knowledge they rely on the approximate method of playing random sample matches rather than formally proving knowledge. In this paper, we present a theoretically founded and practically viable method for automatically verifying properties of games whose rules are given in the general Game Description Language (GDL). We introduce a simple formal language to describe game-specific knowledge as state sequence invariants, and we provide a proof theory for verifying these invariants with the help of Answer Set Programming. We prove the correctness of this method against the formal semantics for GDL, and we report on extensive experiments with a practical implementation of this proof system, which show that our method of formally proving knowledge is viable for the practice of general game playing. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Automated verification of state sequence invariants in general game playing", "paper_id": "WOS:000305598200001"}