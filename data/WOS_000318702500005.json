{"auto_keywords": [{"score": 0.04712665802421912, "phrase": "quality_requirements"}, {"score": 0.004645860180714466, "phrase": "software_complexity"}, {"score": 0.004554488671294504, "phrase": "higher_quality_software"}, {"score": 0.00435971969507033, "phrase": "secondary_importance"}, {"score": 0.004042635935882651, "phrase": "effective_and_efficient_information_systems"}, {"score": 0.003978866233891427, "phrase": "critical_importance"}, {"score": 0.0038696708318671446, "phrase": "considerable_gap"}, {"score": 0.0037634608487353183, "phrase": "quality_requirements_engineering"}, {"score": 0.0034073030552032304, "phrase": "systems_development_process"}, {"score": 0.0033005860945173136, "phrase": "modelling_techniques"}, {"score": 0.003248483521309273, "phrase": "functional_requirements"}, {"score": 0.0031467250930224126, "phrase": "re._support"}, {"score": 0.0030239842475439814, "phrase": "clear_guidelines"}, {"score": 0.0028715299874549245, "phrase": "proper_usage"}, {"score": 0.0028487656293168795, "phrase": "standardized_terminologies"}, {"score": 0.002814956065949522, "phrase": "established_quality_models"}, {"score": 0.00267301171407926, "phrase": "quality-driven_re_framework"}, {"score": 0.0026203386550421558, "phrase": "knowledge_management_techniques"}, {"score": 0.002599560451267203, "phrase": "quality_ontologies"}, {"score": 0.002508073621696602, "phrase": "quality_characteristics"}, {"score": 0.0024101837218440834, "phrase": "common_vocabulary"}, {"score": 0.002208035721125305, "phrase": "requirements_elicitation_and_prioritization_activities"}, {"score": 0.0021218313648947926, "phrase": "intranet_portal_project"}], "paper_keywords": ["nonfunctional requirements", " requirements engineering", " quality requirements", " ontologies", " case study"], "paper_abstract": "As software complexity grows and clients demand higher quality software, quality requirements can no longer be considered to be of secondary importance. Thus, eliciting, specifying, prioritizing and validating quality requirements is a prerequisite to the development of effective and efficient information systems. Despite the critical importance of quality requirements, there is a considerable gap in the breadth and depth of quality requirements engineering (RE) support in most RE approaches. In practice, it is often the case to have quality requirements considered as an afterthought in the systems development process. While there is a wealth of modelling techniques and tools for functional requirements, there is very limited support for quality requirements in RE. Support for quality requirements is usually ad-hoc, without clear guidelines on how to capture, specify and manage quality requirements and also without proper usage of standardized terminologies based on established quality models such as the ISO/IEC 9126 quality model. In this paper, we discuss a quality-driven RE framework and tool that applies knowledge management techniques and quality ontologies to support RE activities. The ontology implements the quality characteristics and metrics prescribed by the ISO/9126 quality model, providing a common vocabulary to address quality concerns/aspects across RE activities. We empirically validate how the framework and tool can be used to effectively support the requirements elicitation and prioritization activities through a case study addressing the development of an intranet portal project at the University of Manchester.", "paper_title": "Eliciting and prioritizing quality requirements supported by ontologies: a case study using the ElicitO framework and tool", "paper_id": "WOS:000318702500005"}