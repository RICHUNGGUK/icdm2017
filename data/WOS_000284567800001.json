{"auto_keywords": [{"score": 0.04905329409248888, "phrase": "multicast_communication"}, {"score": 0.004770461993586338, "phrase": "vod_system"}, {"score": 0.004668240033896263, "phrase": "distributed_video"}, {"score": 0.004610809404212932, "phrase": "demand_system"}, {"score": 0.004540009134349177, "phrase": "multiple_server-nodes"}, {"score": 0.0044980495194868525, "phrase": "cost-effective_and_faulttolerant_solution"}, {"score": 0.004293972451176702, "phrase": "workload_variations"}, {"score": 0.004241126597483046, "phrase": "service_capacity"}, {"score": 0.004201917651000657, "phrase": "peer-to_peer"}, {"score": 0.004086443472472481, "phrase": "architectural_solution"}, {"score": 0.004061214835223812, "phrase": "self-growing_capacity"}, {"score": 0.003937379670109389, "phrase": "peer_transient_nature"}, {"score": 0.003913067698038614, "phrase": "high_network_overhead"}, {"score": 0.0038055011575934936, "phrase": "fully_interactive_vod_system"}, {"score": 0.003723879111071547, "phrase": "new_efficient_integrated_vod_architecture"}, {"score": 0.003543804852018315, "phrase": "minimum_required_quality"}, {"score": 0.0033515736929172644, "phrase": "system_service_capacity"}, {"score": 0.003320561182494713, "phrase": "client_demands"}, {"score": 0.0031306834002600547, "phrase": "video_information"}, {"score": 0.003035135667860725, "phrase": "collaboration_mechanism"}, {"score": 0.0028704174214048937, "phrase": "extensive_efficient_and_low_network-overhead_collaboi_anon_mechanism"}, {"score": 0.0026978319081381145, "phrase": "active_client"}, {"score": 0.002607362103727335, "phrase": "recovery_mechanisms"}, {"score": 0.002551372449383365, "phrase": "failed_client"}, {"score": 0.0025043368321347294, "phrase": "continuous_playback"}, {"score": 0.002488851299416018, "phrase": "proposed_approach"}, {"score": 0.0024278584953697597, "phrase": "mathematical_model"}, {"score": 0.002397923568994474, "phrase": "theoretical_performance"}, {"score": 0.002361022183015472, "phrase": "simulation_environment"}, {"score": 0.002331909406363425, "phrase": "system_s_dynamic_behavior"}, {"score": 0.0023174896695714636, "phrase": "vcr"}, {"score": 0.0023069516467821237, "phrase": "impact"}, {"score": 0.002157897198476163, "phrase": "previous_solutions"}, {"score": 0.0021379062257004698, "phrase": "higher_scalability"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Video on demand", " P2P", " Multicast", " Content delivery network", " Proxy", " Distributed VoD"], "paper_abstract": "A distributed video-on-demand system (DVoD) with multiple server-nodes is a cost-effective and faulttolerant solution for a high scalable enterprise video-on-demand (VoD) system However such a server-oriented design is highly vulnerable to workload variations given that the service capacity is limited Peer-to Peer (P2P) has been introduced as an architectural solution with self-growing capacity However the characteristics of a pure P2P system such as the peer transient nature and high network overhead make this kind of architecture unsuitable for a fully interactive VoD system In this paper we propose a new efficient integrated VoD architecture called DP(n)2P(m) that combines DVoD with a P2P system and multicast communications The DVoD s server-nodes provide a minimum required quality of service (QoS) and the P2P system is able to offer the mechanism to increase the system service capacity according to client demands Multicast communication wherever it is possible is effectively exploited by our P2P system In our design each client is able to send video information to a set of m clients using only one multicast channel Furthermore the collaboration mechanism is able to coordinate a set of clients to create one collaboration group to replace the server providing an extensive efficient and low network-overhead collaboi anon mechanism from n-peers to m-peers Regardless of the video the client is watching our P2P scheme allows every active client to collaborate with the server The P2P scheme is complemented with recovery mechanisms that are able to replace the failed client before affecting the QoS offering continuous playback The proposed approach has been broadly evaluated firstly using a mathematical model to derive the theoretical performance and secondly using a simulation environment to analyze the system s dynamic behavior the VCR interaction Impact and the client failures Comparing DP(n)2P(m) with other DVoD architectures and the most relevant P2P delivery policies we show that our design is an improvement on previous solutions providing a higher scalability (C) 2010 Elsevier Inc All rights reserved", "paper_title": "Designing an effective P2P system for a VoD system to exploit the multicast communication", "paper_id": "WOS:000284567800001"}