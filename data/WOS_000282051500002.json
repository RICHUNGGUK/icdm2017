{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mmpf"}, {"score": 0.013995005716146503, "phrase": "proposed_filter"}, {"score": 0.012138725433614108, "phrase": "resampling_unit"}, {"score": 0.011525842684335477, "phrase": "proposed_mmpf"}, {"score": 0.00973768901094772, "phrase": "imh_sampler"}, {"score": 0.00475254914916922, "phrase": "target_tracking"}, {"score": 0.004719251258611744, "phrase": "algorithm"}, {"score": 0.004491313367627919, "phrase": "easy-hardware-implementation_multiple_model_particle_filter"}, {"score": 0.004063664475797303, "phrase": "multiple_models"}, {"score": 0.003823475136659153, "phrase": "imh"}, {"score": 0.0034143003168921114, "phrase": "model_transition_probabilities"}, {"score": 0.003384695931421288, "phrase": "different_maneuvering_motions"}, {"score": 0.003311799410921826, "phrase": "constant_number"}, {"score": 0.0031431690368229443, "phrase": "regular_pipelined_hardware_structure"}, {"score": 0.002843519597398796, "phrase": "traditional_systematic_resampler"}, {"score": 0.0027581067089091434, "phrase": "whole_implementation"}, {"score": 0.0027341763737751467, "phrase": "simulation_results"}, {"score": 0.002663620639539737, "phrase": "approximately_equal_tracking_performance"}, {"score": 0.002629026692001082, "phrase": "bootstrap_mmpf._hardware_architecture"}, {"score": 0.0025059724686541263, "phrase": "parallel_architecture"}, {"score": 0.002473420909291381, "phrase": "cv_model_processing_element"}, {"score": 0.002451990126986961, "phrase": "pe"}, {"score": 0.0024201029474586007, "phrase": "cs_model_pe"}, {"score": 0.0023886641270884973, "phrase": "central_unit"}, {"score": 0.0023681375744649693, "phrase": "cu"}, {"score": 0.0023068049914566975, "phrase": "proposed_architecture"}, {"score": 0.002257070536352418, "phrase": "xilinx_virtex-ii_pro_fpga_platform"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": ["Easy-hardware-implementation", " MMPF", " Maneuvering target tracking", " Algorithm", " Architecture"], "paper_abstract": "In this paper, we present an easy-hardware-implementation multiple model particle filter (MMPF) for maneuvering target tracking. In the proposed filter, the sampling importance resampling (SIR) filter typically used for nonlinear and/or non-Gaussian application is extended to incorporating multiple models that are composed of a constant velocity (CV) model and a \"current\" statistical (CS) model, and the Independent Metropolis Hasting (IMH) sampler is utilized for the resampling unit in each model. Compared with the bootstrap MMPF, the proposed MMPF requires no knowledge of models and model transition probabilities for different maneuvering motions, and keeps a constant number of particles per model at all times. This allows a regular pipelined hardware structure and can be implemented in hardware easily. Furthermore, using the IMH sampler for the resampling unit avoids the bottleneck introduced by the traditional systematic resampler and reduces the latency of the whole implementation. Simulation results indicate that the proposed filter has approximately equal tracking performance with the bootstrap MMPF. Hardware architecture of the IMH sampler and its corresponding sample unit are presented, and a parallel architecture consisting of CV model processing element (PE), CS model PE and a central unit (CU) is described. The proposed architecture is evaluated on a Xilinx Virtex-II Pro FPGA platform for a maneuvering target tracking application and the results show many advantages of the proposed MMPF over existing approaches in terms of efficiency, lower latency, and easy hardware implementation.", "paper_title": "Easy-hardware-implementation MMPF for Maneuvering Target Tracking: Algorithm and Architecture", "paper_id": "WOS:000282051500002"}