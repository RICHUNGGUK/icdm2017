{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_checking"}, {"score": 0.004724365740062236, "phrase": "strategy_ability"}, {"score": 0.004635477242873163, "phrase": "perfect_recall"}, {"score": 0.003944112858235306, "phrase": "bounded_length"}, {"score": 0.0035189057079817285, "phrase": "multiple_agents"}, {"score": 0.0033875770020590796, "phrase": "incomplete_information"}, {"score": 0.0032922964156452696, "phrase": "underlying_system_state"}, {"score": 0.0031096747349602344, "phrase": "perfect_recall_memory"}, {"score": 0.0029935730127943496, "phrase": "local_actions"}, {"score": 0.002909342017421165, "phrase": "computational_complexity"}, {"score": 0.002382329940096419, "phrase": "model_checker"}, {"score": 0.002337403139264533, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model checking", " Strategy logic", " Incomplete information", " Perfect recall"], "paper_abstract": "The paper works with a logic which has the expressiveness to quantify over strategies of bounded length. The semantics of the logic is based on systems with multiple agents. Agents have incomplete information about the underlying system state and their strategies are based on perfect recall memory over observations and local actions. The computational complexity of model checking is shown to be PSPACE-complete. We give two BDD-based model checking algorithms. The algorithms are implemented in a model checker and experimental results are reported to show their applications. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Bounded model checking of strategy ability with perfect recall", "paper_id": "WOS:000351791900007"}