{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pair_programming"}, {"score": 0.007178050234376834, "phrase": "design_phase"}, {"score": 0.00470341117804131, "phrase": "increasing_interest"}, {"score": 0.004487989502479992, "phrase": "initial_empirical_evidence"}, {"score": 0.00438399094249306, "phrase": "positive_effects"}, {"score": 0.004282391936827106, "phrase": "overall_delivery_time"}, {"score": 0.003698442219929622, "phrase": "software_process"}, {"score": 0.0030295361111006866, "phrase": "development_phase"}, {"score": 0.0028234703730349894, "phrase": "controlled_experiment"}, {"score": 0.0026313840069327713, "phrase": "software_company"}, {"score": 0.0022455164874830777, "phrase": "previous_exploratory_experiment"}], "paper_keywords": ["software engineering", " pair designing", " empirical studies"], "paper_abstract": "Pair programming has attracted an increasing interest from practitioners and researchers: there is initial empirical evidence that it has positive effects on quality and overall delivery time, as demonstrated by several controlled experiments. The practice does not only regard coding, since it can be applied to any other phase of the software process: analysis, design, and testing. Because of the asymmetry between design and coding, applying pair programming to the design phase might not produce the same benefits as those it produces in the development phase. In this paper, we report the findings of a controlled experiment on pair programming, applied to the design phase and performed in a software company. The results of the experiment suggest that pair programming slows down the task, yet improves quality. Furthermore we compare our results with those of a previous exploratory experiment involving students, and we demonstrate how the outcomes exhibit very similar trends. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Evaluating performances of pair designing in industry", "paper_id": "WOS:000247297400014"}