{"auto_keywords": [{"score": 0.04966008989090485, "phrase": "n-way_broadcast_applications"}, {"score": 0.00481495049065317, "phrase": "distributed_network_formation"}, {"score": 0.004689650818647484, "phrase": "n-way_broadcast_application"}, {"score": 0.0045877173513910055, "phrase": "n_overlay_nodes"}, {"score": 0.00431388720289049, "phrase": "bittorrent-like_swarming_protocols"}, {"score": 0.004020813632357377, "phrase": "single_file"}, {"score": 0.00376409764683147, "phrase": "suboptimized_overlay_topology"}, {"score": 0.0035082436540296406, "phrase": "small_to_medium_scale_networks"}, {"score": 0.0033131804981786747, "phrase": "scale_constraint"}, {"score": 0.0032697235411641695, "phrase": "optimized_overlay_topologies"}, {"score": 0.0031845067058084583, "phrase": "end-to-end_characteristics"}, {"score": 0.0030608148631528767, "phrase": "far_superior_performance"}, {"score": 0.0029548937818509656, "phrase": "max-min_and_max-sum_peer-selection_policies"}, {"score": 0.0028276174348291923, "phrase": "first_one"}, {"score": 0.0027660443371695024, "phrase": "available_bandwidth"}, {"score": 0.002729744174693491, "phrase": "slowest_destination"}, {"score": 0.002646880721119838, "phrase": "aggregate_output_rate"}, {"score": 0.0025892330566358503, "phrase": "swarming_protocol"}, {"score": 0.002555247330102505, "phrase": "n-way_broadcast"}, {"score": 0.0024776677004255104, "phrase": "overlay_graphs"}, {"score": 0.002413050589756581, "phrase": "max-min"}, {"score": 0.002391881516764715, "phrase": "max-sum"}, {"score": 0.0023192471808039746, "phrase": "planetlab_prototype_implementation"}, {"score": 0.002298902547676131, "phrase": "trace-driven_simulations"}, {"score": 0.0022192891418394514, "phrase": "swarming_protocols"}, {"score": 0.0021049977753042253, "phrase": "random_and_myopic_overlays"}], "paper_keywords": ["Network formation", " n-way broadcast", " swarming protocols", " flow networks"], "paper_abstract": "In an n-way broadcast application, each one of n overlay nodes wants to push its own distinct large data file to all other n - 1 destinations as well as download their respective data files. BitTorrent-like swarming protocols are ideal choices for handling such massive data volume transfers. The original BitTorrent targets one-to-many broadcasts of a single file to a very large number of receivers, and thus, by necessity, employs a suboptimized overlay topology. n-way broadcast applications, on the other hand, owing to their inherent complexity, are realizable only in small to medium scale networks. In this paper, we show that we can leverage this scale constraint to construct optimized overlay topologies that take into consideration the end-to-end characteristics of the network and as a consequence deliver far superior performance compared to random and myopic (greedy) approaches. We present the Max-Min and Max-Sum peer-selection policies used by individual nodes to select their neighbors. The first one strives to maximize the available bandwidth to the slowest destination, while the second maximizes the aggregate output rate. We design a swarming protocol suitable for n-way broadcast and operate it on top of overlay graphs formed by nodes that employ Max-Min or Max-Sum policies. Using measurements from a PlanetLab prototype implementation and trace-driven simulations, we demonstrate that the performance of swarming protocols on top of our constructed topologies is far superior to the performance of random and myopic overlays.", "paper_title": "Distributed Network Formation for n-Way Broadcast Applications", "paper_id": "WOS:000281030200004"}