{"auto_keywords": [{"score": 0.047244318311946, "phrase": "soft_errors"}, {"score": 0.00481495049065317, "phrase": "soft_errors_risk"}, {"score": 0.004623224002010226, "phrase": "system_failure"}, {"score": 0.004439097815805505, "phrase": "computer_structure"}, {"score": 0.004120289747942224, "phrase": "system_functionality"}, {"score": 0.00357362651129581, "phrase": "soft_errors_tolerance"}, {"score": 0.003525493807130663, "phrase": "critical_components"}, {"score": 0.0032061793819537633, "phrase": "early_design_phase"}, {"score": 0.002955533639862811, "phrase": "criticality_ranking"}, {"score": 0.0024607296642187846, "phrase": "system_modeling_phase"}, {"score": 0.0021337783230121286, "phrase": "desired_functionalities"}, {"score": 0.0021049977753042253, "phrase": "case_study_results"}], "paper_keywords": ["Criticality Analysis", " Soft Errors", " Reliability Risks", " UML Metrics"], "paper_abstract": "Minimizing the risk of system failure arising from soft errors in any computer structure requires identifying those components whose failure is likely to impact on system functionality. Clearly, the degree of soft errors tolerance is not the same for all components. Hence, to improve soft errors tolerance, critical components can be flagged and measures can be taken to lower their criticalities at an early design phase. This improvement is achieved in this paper by presenting a criticality ranking (among the components) formed by combining a prediction of soft errors, the severity of them, and a propagation of the soft errors at the system modeling phase; and also by pointing out ways to apply changes in the model to minimize the risk of degradation of desired functionalities. Case study results are given to validate the approach.", "paper_title": "Component criticality analysis to minimize soft errors risk", "paper_id": "WOS:000284247800006"}