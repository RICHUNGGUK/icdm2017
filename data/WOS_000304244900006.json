{"auto_keywords": [{"score": 0.048171695241769216, "phrase": "ic"}, {"score": 0.04359162845350485, "phrase": "bump_pads"}, {"score": 0.00481495049065317, "phrase": "routing_algorithm_for_flip-chip_designs"}, {"score": 0.004750178261675602, "phrase": "flip-chip_package"}, {"score": 0.004665162327051461, "phrase": "modern_integrated_circuit"}, {"score": 0.0045404698551856125, "phrase": "higher_integration_density"}, {"score": 0.004320421465896323, "phrase": "pre-assignment_flip-chip_routing_problem"}, {"score": 0.003738847528809348, "phrase": "real-world_designs"}, {"score": 0.0036553070575015344, "phrase": "driver_pads"}, {"score": 0.0035095935622207956, "phrase": "packaging_designers"}, {"score": 0.00338493754743055, "phrase": "sequence_exchange"}, {"score": 0.003249966782844541, "phrase": "global_routing"}, {"score": 0.003191714656606822, "phrase": "longest_common_subsequence"}, {"score": 0.003148709618042979, "phrase": "maximum_planar_subset"}, {"score": 0.0030922667860233603, "phrase": "pre-assignment_flip-chips"}, {"score": 0.0030094882299407256, "phrase": "existing_work"}, {"score": 0.0029025435402480326, "phrase": "routing_tile"}, {"score": 0.0028248293967214947, "phrase": "critical_solution_space"}, {"score": 0.0027867539356701302, "phrase": "better_routing_solution"}, {"score": 0.0025572160146590623, "phrase": "better_solution"}, {"score": 0.002455168454109375, "phrase": "constant-time_routability_analyzer"}, {"score": 0.0023044434462692483, "phrase": "experimental_results"}, {"score": 0.0022124605840026313, "phrase": "even_better_solution_quality"}, {"score": 0.002162951519368368, "phrase": "slightly_smaller_wirelength"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_flip-chip_router"}], "paper_keywords": ["Dynamic programming", " flip-chip", " physical design", " routing"], "paper_abstract": "The flip-chip package is introduced for modern integrated circuit (IC) designs with higher integration density and larger I/O counts. In this paper, we consider the pre-assignment flip-chip routing problem with predefined connections between driver pads and bump pads. This problem has been shown to be much more difficult than the free-assignment one, but is more popular in real-world designs because the connections between driver pads and bump pads are typically predetermined by IC or packaging designers. Based on the concept of routing sequence exchange, we propose a very efficient approach to guide the global routing by computing the longest common subsequence and the maximum planar subset of chords for pre-assignment flip-chips. We observe that the existing work over-constrains the capacity of a routing tile, which might miss some critical solution space with a better routing solution (e. g., smaller wirelength), and provide a remedy for this insufficiency to identify a better solution in a more complete solution space. We also develop a constant-time routability analyzer to check if a given set of wires can pass through a tile. Experimental results show that our router can achieve a 125x speedup with even better solution quality (same routability with slightly smaller wirelength), compared with a state-of-the-art flip-chip router based on integer linear programming.", "paper_title": "An Efficient Pre-assignment Routing Algorithm for Flip-Chip Designs", "paper_id": "WOS:000304244900006"}