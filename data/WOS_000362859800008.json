{"auto_keywords": [{"score": 0.04830046388267286, "phrase": "montblanc"}, {"score": 0.015720601615276546, "phrase": "gpu"}, {"score": 0.01542826314934136, "phrase": "bayesian_inference"}, {"score": 0.014270098472407816, "phrase": "biro"}, {"score": 0.008497525081483197, "phrase": "radio_observations"}, {"score": 0.0047846807459660376, "phrase": "radio_interferometer_measurement_equations"}, {"score": 0.004534917050845832, "phrase": "radio_interferometer_measurement_equation"}, {"score": 0.004244234872662471, "phrase": "sky_models"}, {"score": 0.004125408095021548, "phrase": "radio_interferometer"}, {"score": 0.004009896378893838, "phrase": "rime"}, {"score": 0.003959594975607075, "phrase": "varying_sky_model_parameters"}, {"score": 0.003922283019437895, "phrase": "multiple_model_visibilities"}, {"score": 0.003824487838437583, "phrase": "observed_visibilities"}, {"score": 0.003776504983530801, "phrase": "likelihood_values"}, {"score": 0.003729121878378674, "phrase": "bayesian_sampling_process"}, {"score": 0.0036823310827576628, "phrase": "best_sky_model"}, {"score": 0.0035120164504478437, "phrase": "parallel_computation"}, {"score": 0.0034352452951903305, "phrase": "iterative_rime_evaluation"}, {"score": 0.003360146665246448, "phrase": "modified_model_parameters"}, {"score": 0.0032046857274089747, "phrase": "python_package"}, {"score": 0.003174464741377186, "phrase": "nvidia's_cuda_architecture"}, {"score": 0.0030563953060027175, "phrase": "different_pipelines"}, {"score": 0.0029707255179288222, "phrase": "gaussian_morphologies"}, {"score": 0.00291494666099687, "phrase": "easy_addition"}, {"score": 0.002896586744793007, "phrase": "new_source_profiles"}, {"score": 0.002878342135479895, "phrase": "montblanc's_rime_implementation"}, {"score": 0.0027451116369082798, "phrase": "meqtrees"}, {"score": 0.002719212119462965, "phrase": "dual_hexacore"}, {"score": 0.0027106415859939233, "phrase": "intel"}, {"score": 0.00264296841319955, "phrase": "oskar_simulator's_gpu-implemented_rime_components"}, {"score": 0.0025285834281312705, "phrase": "double-precision_floating_point"}, {"score": 0.0024889396846235, "phrase": "oskar's_rime_implementation"}, {"score": 0.002449915958738505, "phrase": "montblanc's_biro-tailored_rime._theoretical_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["GPGPU", " Computing methodologies: massively parallel algorithms", " Applied computing: astronomy", " Techniques: interferometric", " Instrumentation: interferometers", " Methods: statistical"], "paper_abstract": "We present Montblanc, a GPU implementation of the Radio interferometer measurement equation (RIME) in support of the Bayesian inference for radio observations (BIRO) technique. BIRO uses Bayesian inference to select sky models that best match the visibilities observed by a radio interferometer. To accomplish this, BIRO evaluates the RIME multiple times, varying sky model parameters to produce multiple model visibilities. chi(2) values computed from the model and observed visibilities are used as likelihood values to drive the Bayesian sampling process and select the best sky model. As most of the elements of the RIME and chi(2) calculation are independent of one another, they are highly amenable to parallel computation. Additionally, Montblanc caters for iterative RIME evaluation to produce multiple chi(2) values. Modified model parameters are transferred to the GPU between each iteration. We implemented Montblanc as a Python package based upon NVIDIA's CUDA architecture. As such, it is easy to extend and implement different pipelines. At present, Montblanc supports point and Gaussian morphologies, but is designed for easy addition of new source profiles. Montblanc's RIME implementation is performant: On an NVIDIA K40, it is approximately 250 times faster than MEQTREES on a dual hexacore Intel E5-2620v2 CPU. Compared to the OSKAR simulator's GPU-implemented RIME components it is 7.7 and 12 times faster on the same K40 for single and double-precision floating point respectively. However, OSKAR's RIME implementation is more general than Montblanc's BIRO-tailored RIME. Theoretical analysis of Montblanc's dominant CUDA kernel suggests that it is memory bound. In practice, profiling shows that is balanced between compute and memory, as much of the data required by the problem is retained in L1 and L2 caches. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Montblanc(1): GPU accelerated radio interferometer measurement equations in support of Bayesian inference for radio observations", "paper_id": "WOS:000362859800008"}