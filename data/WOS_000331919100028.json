{"auto_keywords": [{"score": 0.04912615366620136, "phrase": "quasi-monte_carlo_methods"}, {"score": 0.03958602556705147, "phrase": "distributed_program"}, {"score": 0.03937708234996734, "phrase": "test_data"}, {"score": 0.026353086488119345, "phrase": "quasi-monte_carlo_approach"}, {"score": 0.00481495049065317, "phrase": "lattice_systems"}, {"score": 0.004703086885609081, "phrase": "euclidean"}, {"score": 0.004667632817744648, "phrase": "quantum_mechanics"}, {"score": 0.004616716652853809, "phrase": "asymptotic_error_behavior"}, {"score": 0.004475436844227947, "phrase": "random_observations"}, {"score": 0.004442824994700736, "phrase": "ordinary_markov_chain_monte_carlo_simulation"}, {"score": 0.004228798619052766, "phrase": "n_i"}, {"score": 0.004084372444216856, "phrase": "simple_systems"}, {"score": 0.004062021747568777, "phrase": "quantum_harmonic_and_anharmonic_oscillator"}, {"score": 0.004032410190773105, "phrase": "improved_error_scaling"}, {"score": 0.004005258588907662, "phrase": "program"}, {"score": 0.0038946650372062783, "phrase": "cpc_program_library"}, {"score": 0.0038804410204616954, "phrase": "queen's_university"}, {"score": 0.003866269325532964, "phrase": "belfast"}, {"score": 0.00385214804128572, "phrase": "n._ireland"}, {"score": 0.0038240605592708083, "phrase": "gnu_general_public_licence"}, {"score": 0.0035934073774126856, "phrase": "tar.gz_programming_language"}, {"score": 0.003457925434594326, "phrase": "minimal_efforts"}, {"score": 0.00336428077531883, "phrase": "memory_usage"}, {"score": 0.003121016628728125, "phrase": "external_routines"}, {"score": 0.0030198343604173126, "phrase": "quantum_field_theory"}, {"score": 0.0030032915123993837, "phrase": "feynman_path"}, {"score": 0.0029759206373634285, "phrase": "quantum_chromodynamics"}, {"score": 0.00295420311674985, "phrase": "non-perturbative_treatment"}, {"score": 0.0028847066125323893, "phrase": "lattice_regularization"}, {"score": 0.002735494528205621, "phrase": "monte_carlo"}, {"score": 0.0027006464509273806, "phrase": "approximate_solutions"}, {"score": 0.0026419338604879404, "phrase": "undesired_effect"}, {"score": 0.0025703302097765785, "phrase": "slow_asymptotic_error_behavior"}, {"score": 0.0024106932919085097, "phrase": "uncorrelated_samples"}, {"score": 0.002388710195695894, "phrase": "anharmonic_oscillator"}, {"score": 0.0023756164484983874, "phrase": "improved_asymptotic_error_behavior"}, {"score": 0.0023027596654127554, "phrase": "lattice_field_theories"}, {"score": 0.002277581330767082, "phrase": "running_time"}, {"score": 0.0022239665922395104, "phrase": "modern_computers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Quasi-Monte Carlo", " Lattice field theory", " Quantum mechanics", " Anharmonic oscillator", " Path integral", " Error scaling", " Reweighting"], "paper_abstract": "We investigate the applicability of quasi-Monte Carlo methods to Euclidean lattice systems for quantum mechanics in order to improve the asymptotic error behavior of observables for such theories. In most cases the error of an observable calculated by averaging over random observations generated from an ordinary Markov chain Monte Carlo simulation behaves like N-1/2, where N is the number of observations. By means of quasi-Monte Carlo methods it is possible to improve this behavior for certain problems to N I, or even further if the problems are regular enough. We adapted and applied this approach to simple systems like the quantum harmonic and anharmonic oscillator and verified an improved error scaling. Program summary Program title: gar-0.1 Catalogue identifier: AERL-v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AERJ_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public Licence version 3 No. of lines in distributed program, including test data, etc.: 67759 No. of bytes in distributed program, including test data, etc.: 2165365 Distribution format: tar.gz Programming language: C and C++. Computer: PC. Operating system: Tested on GNU/Linux, should be portable to other operating systems with minimal efforts. Has the code been vectorized or parallelized?: No RAM: The memory usage directly scales with the number of samples and dimensions: Bytes used = \"number of samples\" x \"number of dimensions\" x 8 Bytes (double precision). Classification: 4.13, 11.5, 23. External routines: FFTW 3 library (http://www.fftw.org) Nature of problem: Certain physical models formulated as a quantum field theory through the Feynman path integral, such as quantum chromodynamics, require a non-perturbative treatment of the path integral. The only known approach that achieves this is the lattice regularization. In this formulation the path integral is discretized to a finite, but very high dimensional integral. So far only Monte Carlo, and especially Markov chain-Monte Carlo methods like the Metropolis or the hybrid Monte Carlo algorithm have been used to calculate approximate solutions of the path integral. These algorithms often lead to the undesired effect of autocorrelation in the samples of observables and suffer in any case from the slow asymptotic error behavior proportional to N-1/2, if N is the number of samples. Solution method: This program applies the quasi-Monte Carlo approach and the reweighting technique (respectively the weighted uniform sampling method) to generate uncorrelated samples of observables of the anharmonic oscillator with an improved asymptotic error behavior. Unusual features: The application of the quasi-Monte Carlo approach is quite revolutionary in the field of lattice field theories. Running time: The running time depends directly on the number of samples N and dimensions d. On modern computers a run with up to N = 2(16) = 65536 (including 9 replica runs) and d = 100 should not take much longer than one minute. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Quasi-Monte Carlo methods for lattice systems: A first look", "paper_id": "WOS:000331919100028"}