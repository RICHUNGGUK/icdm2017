{"auto_keywords": [{"score": 0.049474472243262034, "phrase": "treewidth"}, {"score": 0.01199024932980672, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "exact_algorithms"}, {"score": 0.004634799977448855, "phrase": "experimental_and_theoretical_results"}, {"score": 0.004294381488413906, "phrase": "exact_exponential-time_algorithms"}, {"score": 0.0038789122930433305, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0034154440860550564, "phrase": "old_dynamic_programming_method"}, {"score": 0.0033084855431176558, "phrase": "karp"}, {"score": 0.003245900020944865, "phrase": "traveling_salesman_problem"}, {"score": 0.003026391655379905, "phrase": "worst_case"}, {"score": 0.0028578496983461136, "phrase": "actual_instances"}, {"score": 0.0026986685585382347, "phrase": "small_instances"}, {"score": 0.0022434880661725493, "phrase": "polynomial_space"}, {"score": 0.0021049977753042253, "phrase": "balanced_separators"}], "paper_keywords": ["Algorithms", " Design", " Theory", " Experimentation", " Graph algorithms", " exact algorithms", " treewidth", " dynamic programming", " separators"], "paper_abstract": "We give experimental and theoretical results on the problem of computing the treewidth of a graph by exact exponential-time algorithms using exponential space or using only polynomial space. We first report on an implementation of a dynamic programming algorithm for computing the treewidth of a graph with running time O*(2(n)). This algorithm is based on the old dynamic programming method introduced by Held and Karp for the TRAVELING SALESMAN problem. We use some optimizations that do not affect the worst case running time but improve on the running time on actual instances and can be seen to be practical for small instances. We also consider the problem of computing TREEWIDTH under the restriction that the space used is only polynomial and give a simple O*(4(n)) algorithm that requires polynomial space. We also show that with a more complicated algorithm using balanced separators, TREEWIDTH can be computed in O*(2.9512(n)) time and polynomial space.", "paper_title": "On Exact Algorithms for Treewidth", "paper_id": "WOS:000312942600012"}