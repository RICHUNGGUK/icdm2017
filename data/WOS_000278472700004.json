{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graph_transformation_rules"}, {"score": 0.004400329132129292, "phrase": "intermediate_ocl_representation"}, {"score": 0.0043080553835735825, "phrase": "different_rule_semantics"}, {"score": 0.004262645667983448, "phrase": "ocl"}, {"score": 0.004042635935882651, "phrase": "rule_applicability"}, {"score": 0.0038748022659578865, "phrase": "intermediate_representation"}, {"score": 0.003674738405118697, "phrase": "seamless_integration"}, {"score": 0.003578600071301459, "phrase": "mof_and_ocl_standards"}, {"score": 0.002988101395789399, "phrase": "graph_transformation_concepts"}, {"score": 0.0029098743621130004, "phrase": "standards-based_model-driven_development_tools"}, {"score": 0.0027303606813078255, "phrase": "ocl_tools"}, {"score": 0.002658863179011018, "phrase": "rule_analysis"}, {"score": 0.0025214217930287003, "phrase": "operational_semantics"}, {"score": 0.0024947959375982614, "phrase": "domain_specific_visual_languages"}, {"score": 0.002316105585203396, "phrase": "graphical_specification"}, {"score": 0.002219790619936024, "phrase": "back-annotation_mechanism"}, {"score": 0.0021049977753042253, "phrase": "original_language_notation"}], "paper_keywords": ["Graph transformation", " OCL", " Meta-modelling", " Domain Specific Visual Languages", " Verification and validation"], "paper_abstract": "In this paper we present an approach for the analysis of graph transformation rules based on an intermediate OCL representation. We translate different rule semantics into OCL, together with the properties of interest (like rule applicability, conflicts or independence). The intermediate representation serves three purposes: (1) it allows the seamless integration of graph transformation rules with the MOF and OCL standards, and enables taking the meta-model and its OCL constraints (i.e. well-formedness rules) into account when verifying the correctness of the rules; (2) it permits the interoperability of graph transformation concepts with a number of standards-based model-driven development tools; and (3) it makes available a plethora of OCL tools to actually perform the rule analysis. This approach is especially useful to analyse the operational semantics of Domain Specific Visual Languages. We have automated these ideas by providing designers with tools for the graphical specification and analysis of graph transformation rules, including a back-annotation mechanism that presents the analysis results in terms of the original language notation.", "paper_title": "A UML/OCL framework for the analysis of graph transformation rules", "paper_id": "WOS:000278472700004"}