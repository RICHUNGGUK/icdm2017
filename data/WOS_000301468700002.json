{"auto_keywords": [{"score": 0.048483033890383866, "phrase": "moldable_tasks"}, {"score": 0.00481495049065317, "phrase": "independent_tasks"}, {"score": 0.004694092086199672, "phrase": "sequential_tasks"}, {"score": 0.004480307124735185, "phrase": "non-preemptive_moldable_tasks"}, {"score": 0.004294381488413906, "phrase": "online_non-clairvoyant_setting"}, {"score": 0.00416882434439484, "phrase": "authors_knowledge"}, {"score": 0.0038789122930433305, "phrase": "sequential_subproblem"}, {"score": 0.0037495207047193034, "phrase": "approximation_theory"}, {"score": 0.0036553070575015344, "phrase": "dasedf"}, {"score": 0.003315499339103866, "phrase": "machine_availability"}, {"score": 0.0032321559007422087, "phrase": "good_stretch_values"}, {"score": 0.0031643005824589917, "phrase": "moldable_task_scheduling_problem"}, {"score": 0.0030071857666598193, "phrase": "sequential_case"}, {"score": 0.002944039482467119, "phrase": "dbos"}, {"score": 0.0027274643070540733, "phrase": "task_scheduling_problem"}, {"score": 0.0026701760128830573, "phrase": "parallel_short_sequence_mapping"}, {"score": 0.0026363807171515255, "phrase": "important_applications"}, {"score": 0.0025591748412278174, "phrase": "proposed_dbos_algorithm"}, {"score": 0.002505412457777352, "phrase": "synthetic_data_sets"}, {"score": 0.0024736973328071026, "phrase": "short_sequence_mapping_requests"}, {"score": 0.0024423826953133844, "phrase": "data_sets"}, {"score": 0.0024114635128122783, "phrase": "log_files"}, {"score": 0.002391067964886602, "phrase": "real_production_clusters"}, {"score": 0.0023210293050850276, "phrase": "dbos_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Online scheduling", " Maximum stretch", " Approximation algorithm", " Resource augmentation", " Simulation", " Job scheduling", " Sequential task", " Moldable task"], "paper_abstract": "This paper addresses the problem of scheduling non-preemptive moldable tasks to minimize the stretch of the tasks in an online non-clairvoyant setting. To the best of the authors knowledge, this problem has never been studied before. To tackle this problem, first the sequential subproblem is studied through the lens of the approximation theory. An algorithm, called DASEDF, is proposed and, through simulations, it is shown to outperform the first-come, first-served scheme. Furthermore, it is observed that machine availability is the key to getting good stretch values. Then, the moldable task scheduling problem is considered, and, by leveraging the results from the sequential case, another algorithm, DBOS, is proposed to optimize the stretch while scheduling moldable tasks. This work is motivated by a task scheduling problem in the context of parallel short sequence mapping which has important applications in biology and genetics. The proposed DBOS algorithm is evaluated both on synthetic data sets that represent short sequence mapping requests and on data sets generated using log files of real production clusters. The results show that the DBOS algorithm significantly outperforms the two state-of-the-art task scheduling algorithms on stretch optimization. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Optimizing the stretch of independent tasks on a cluster: From sequential tasks to moldable tasks", "paper_id": "WOS:000301468700002"}