{"auto_keywords": [{"score": 0.04968112943611159, "phrase": "satisfiability_modulo_theories"}, {"score": 0.040667777149277766, "phrase": "smt_systems"}, {"score": 0.03502883918153192, "phrase": "simplify"}, {"score": 0.00481495049065317, "phrase": "quantified_verification_conditions"}, {"score": 0.004735254735115024, "phrase": "first-order_logic"}, {"score": 0.004676345706416371, "phrase": "convenient_formalism"}, {"score": 0.004598933498016774, "phrase": "wide_variety"}, {"score": 0.0045607070754363245, "phrase": "verification_conditions"}, {"score": 0.004429388453288922, "phrase": "pure_first-order_automated_theorem"}, {"score": 0.004374334780951167, "phrase": "atp"}, {"score": 0.004319830179921363, "phrase": "automated_theorem"}, {"score": 0.004160531596936783, "phrase": "traditional_atp_systems"}, {"score": 0.0039737570920809215, "phrase": "difficulty_reasoning"}, {"score": 0.003334309053314909, "phrase": "legacy_system"}, {"score": 0.003279039724748895, "phrase": "built-in_theory_reasoning"}, {"score": 0.0030541531847589833, "phrase": "competitive_alternative"}, {"score": 0.003028727936200845, "phrase": "atp_systems"}, {"score": 0.0027510752634224726, "phrase": "abstract_dpll_modulo_theories_framework"}, {"score": 0.002682917193736698, "phrase": "simplify's_techniques"}, {"score": 0.002594652434287807, "phrase": "new_heuristics"}, {"score": 0.002509284173541882, "phrase": "instantiation_level"}, {"score": 0.00246765655376112, "phrase": "effective_mechanism"}, {"score": 0.0024065032567542107, "phrase": "large_search_space"}, {"score": 0.0023764959294052964, "phrase": "quantifier_instantiation_techniques"}, {"score": 0.0022886952510350416, "phrase": "smt_system"}, {"score": 0.0022601535748259785, "phrase": "experimental_results"}, {"score": 0.0021766418372878835, "phrase": "significant_number"}, {"score": 0.002158505888557746, "phrase": "quantified_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "previous_approaches"}], "paper_keywords": ["First-order logic", " Quantified verification conditions", " Satisfiability modulo theories", " Quantifier instantiation"], "paper_abstract": "First-order logic provides a convenient formalism for describing a wide variety of verification conditions. Two main approaches to checking such conditions are pure first-order automated theorem proving (ATP) and automated theorem proving based on satisfiability modulo theories (SMT). Traditional ATP systems are designed to handle quantifiers easily, but often have difficulty reasoning with respect to theories. SMT systems, on the other hand, have built-in support for many useful theories, but have a much more difficult time with quantifiers. One clue on how to get the best of both worlds can be found in the legacy system Simplify which combines built-in theory reasoning with quantifier instantiation heuristics. Inspired by Simplify and motivated by a desire to provide a competitive alternative to ATP systems, this paper describes a methodology for reasoning about quantifiers in SMT systems. We present the methodology in the context of the Abstract DPLL Modulo Theories framework. Besides adapting many of Simplify's techniques, we also introduce a number of new heuristics. Most important is the notion of instantiation level which provides an effective mechanism for prioritizing and managing the large search space inherent in quantifier instantiation techniques. These techniques have been implemented in the SMT system CVC3. Experimental results show that our methodology enables CVC3 to solve a significant number of quantified benchmarks that were not solvable with previous approaches.", "paper_title": "Solving quantified verification conditions using satisfiability modulo theories", "paper_id": "WOS:000270579000005"}