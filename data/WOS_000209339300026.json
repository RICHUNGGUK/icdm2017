{"auto_keywords": [{"score": 0.034526216484340136, "phrase": "dreamweaver"}, {"score": 0.015719716506582538, "phrase": "deep_sleep"}, {"score": 0.004780633011300165, "phrase": "numerous_data_center_services"}, {"score": 0.004746558955503364, "phrase": "low_average_utilization"}, {"score": 0.004695900553353526, "phrase": "poor_energy_efficiency"}, {"score": 0.0046457802872573025, "phrase": "cpu_voltage"}, {"score": 0.004371660146981191, "phrase": "transistor_scaling_trends"}, {"score": 0.004202931484732134, "phrase": "shrinking_fraction"}, {"score": 0.004172957742905294, "phrase": "system_power"}, {"score": 0.004143196873246147, "phrase": "recent_research"}, {"score": 0.00406971620207041, "phrase": "full-system_idle_low-power_modes"}, {"score": 0.003926626018798576, "phrase": "deepest_power_savings"}, {"score": 0.0038986150699604504, "phrase": "bounded_response_time_impact"}, {"score": 0.003802135020791801, "phrase": "increasing_cores"}, {"score": 0.0036815763368083197, "phrase": "sleep_modes"}, {"score": 0.0036292245355184576, "phrase": "request-parallel_data_center_applications"}, {"score": 0.0035776145006375173, "phrase": "independent_idle_periods"}, {"score": 0.003552084379143929, "phrase": "individual_cores"}, {"score": 0.0033303306367699816, "phrase": "request-parallel_applications"}, {"score": 0.0031788080316930687, "phrase": "scheduling_policy"}, {"score": 0.0031448288291084, "phrase": "idle_and_busy_periods"}, {"score": 0.003066945490483524, "phrase": "system-wide_deep_sleep"}, {"score": 0.0029169007179202164, "phrase": "incoming_network_traffic"}, {"score": 0.0025364139244227458, "phrase": "maximum_time"}, {"score": 0.002464709648714996, "phrase": "prior_scheduling_approaches"}, {"score": 0.0023440589015485077, "phrase": "systems'_most_efficient_operating_point"}, {"score": 0.0021049977753042253, "phrase": "timeout-based_request_batching_schemes"}], "paper_keywords": ["Design", " Measurement", " power management", " servers"], "paper_abstract": "Numerous data center services exhibit low average utilization leading to poor energy efficiency. Although CPU voltage and frequency scaling historically has been an effective means to scale down power with utilization, transistor scaling trends are limiting its effectiveness and the CPU is accounting for a shrinking fraction of system power. Recent research advocates the use of full-system idle low-power modes to combat energy losses, as such modes provide the deepest power savings with bounded response time impact. However, the trend towards increasing cores per die is undermining the effectiveness of these sleep modes, particularly for request-parallel data center applications, because the independent idle periods across individual cores are unlikely to align by happenstance. We propose DreamWeaver, architectural support to facilitate deep sleep for request-parallel applications on multicore servers. DreamWeaver comprises two elements: Weave Scheduling, a scheduling policy to coalesce idle and busy periods across cores to create opportunities for system-wide deep sleep; and the Dream Processor, a light-weight co-processor that monitors incoming network traffic and suspended work during sleep to determine when the system must wake. DreamWeaver is based on two key concepts: (1) stall execution and sleep anytime any core is unoccupied, but (2) constrain the maximum time any request may be stalled. Unlike prior scheduling approaches, DreamWeaver will preempt execution to sleep, maximizing time spent at the systems' most efficient operating point. We demonstrate that DreamWeaver can smoothly trade-off bounded, predictable increases in 99th-percentile response time for increasing power savings, and strictly dominates the savings available with voltage and frequency scaling and timeout-based request batching schemes.", "paper_title": "DreamWeaver: Architectural Support for Deep Sleep", "paper_id": "WOS:000209339300026"}