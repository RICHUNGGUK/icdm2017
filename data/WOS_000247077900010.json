{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "proof-carrying_code"}, {"score": 0.0043560464825349275, "phrase": "machine-level_implementation"}, {"score": 0.004195418010131832, "phrase": "conservative_variant"}, {"score": 0.004040688646993609, "phrase": "standard_mark-sweep_garbage_collector"}, {"score": 0.00389164348807591, "phrase": "hoare-style_program_logic"}, {"score": 0.0033905067962602515, "phrase": "machine-level_memory_model"}, {"score": 0.0029169007179202164, "phrase": "safety_property"}, {"score": 0.0028091907694771613, "phrase": "common_mutator_program"}, {"score": 0.0025409639091476363, "phrase": "coq_proof_assistant"}, {"score": 0.002327310963701377, "phrase": "foundational_proof-carrying_code_package"}, {"score": 0.0021857667493036786, "phrase": "important_attempt"}, {"score": 0.0021049977753042253, "phrase": "fully_certified_production-quality_garbage_collectors"}], "paper_keywords": ["program verification", " garbage collector", " proof-carrying code", " program safety"], "paper_abstract": "We present the verification of the machine-level implementation of a conservative variant of the standard mark-sweep garbage collector in a Hoare-style program logic. The specification of the collector is given on a machine-level memory model using separation logic, and is strong enough to preserve the safety property of any common mutator program. Our verification is fully implemented in the Coq proof assistant and can be packed immediately as foundational proof-carrying code package. Our work makes important attempt toward building fully certified production-quality garbage collectors.", "paper_title": "Garbage collector verification for proof-carrying code", "paper_id": "WOS:000247077900010"}