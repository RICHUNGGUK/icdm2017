{"auto_keywords": [{"score": 0.043608523453767825, "phrase": "look-up_table"}, {"score": 0.00481495049065317, "phrase": "fast_alternative"}, {"score": 0.0047049532961375, "phrase": "image_processing"}, {"score": 0.004597457370802855, "phrase": "approximate_calculation"}, {"score": 0.004544629724830453, "phrase": "precomputed_b-spline_weights"}, {"score": 0.004466519142879166, "phrase": "b-spline_indirect_transformation"}, {"score": 0.004240116703465252, "phrase": "nearest-neighbor_fashion"}, {"score": 0.004071957673937727, "phrase": "overall_computation_time"}, {"score": 0.0037336520904376687, "phrase": "b-lut"}, {"score": 0.0036063061558261546, "phrase": "exact_or_approximate_b-spline_calculation"}, {"score": 0.003443219062200627, "phrase": "obtained_accuracy"}, {"score": 0.0031753062090452864, "phrase": "wide_range"}, {"score": 0.003138768436081888, "phrase": "b-spline_applications"}, {"score": 0.0029281780903782284, "phrase": "proposed_b-luts"}, {"score": 0.002861160152640875, "phrase": "conventional_b-splines"}, {"score": 0.0027795345823932406, "phrase": "popular_itk_toolkit"}, {"score": 0.00273167822885383, "phrase": "general_case"}, {"score": 0.00270023138867066, "phrase": "image_intensity_interpolation"}, {"score": 0.002623184850933423, "phrase": "highly_accurate_b-spline_approximation"}, {"score": 0.0025336179740814905, "phrase": "computation_time"}, {"score": 0.002363532907211947, "phrase": "b-lut_source_code"}, {"score": 0.0022960713730673494, "phrase": "itk_toolkit"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ireland_ltd."}], "paper_keywords": ["B-spline image transformation", " B-spline image interpolation"], "paper_abstract": "We propose a fast alternative to B-splines in image processing based on an approximate calculation using precomputed B-spline weights. During B-spline indirect transformation, these weights are efficiently retrieved in a nearest-neighbor fashion from a look-up table, greatly reducing overall computation time. Depending on the application, calculating a B-spline using a look-up table, called B-LUT, will result in an exact or approximate B-spline calculation. In case of the latter the obtained accuracy can be controlled by the user. The method is applicable to a wide range of B-spline applications and has very low memory requirements compared to other proposed accelerations. The performance of the proposed B-LUTs was compared to conventional B-splines as implemented in the popular ITK toolkit for the general case of image intensity interpolation. Experiments illustrated that highly accurate B-spline approximation can be obtained all while computation time is reduced with a factor of 5-6. The B-LUT source code, compatible with the ITK toolkit, has been made freely available to the community. (C) 2009 Elsevier Ireland Ltd. All rights reserved.", "paper_title": "B-LUT: Fast and low memory B-spline image interpolation", "paper_id": "WOS:000280460400004"}