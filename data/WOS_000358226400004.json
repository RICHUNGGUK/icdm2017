{"auto_keywords": [{"score": 0.013043393023764846, "phrase": "gpu"}, {"score": 0.012619044113975339, "phrase": "game_tree_search_algorithms"}, {"score": 0.00481495049065317, "phrase": "game_tree_search"}, {"score": 0.004761850836420121, "phrase": "gpgpu._game_tree_search"}, {"score": 0.004683292152590589, "phrase": "classical_problemin"}, {"score": 0.004580550308652044, "phrase": "game_theory"}, {"score": 0.004530023871441992, "phrase": "artificial_intelligence"}, {"score": 0.0044800522651664695, "phrase": "fast_game_tree_search_algorithm"}, {"score": 0.004381749459671914, "phrase": "computer_games"}, {"score": 0.004309434349688514, "phrase": "real-time_responses"}, {"score": 0.004031865694174726, "phrase": "massive_parallelism_capabilities"}, {"score": 0.0037721073763702486, "phrase": "concise_and_general_parallel_game_tree_search_algorithm"}, {"score": 0.00373049706038447, "phrase": "gpu."}, {"score": 0.0029544572689681934, "phrase": "good_performance"}, {"score": 0.002857605453835429, "phrase": "classical_cpu-based_game_tree_search_algorithms"}, {"score": 0.002418829014435841, "phrase": "practical_performance"}, {"score": 0.0021049977753042253, "phrase": "feasible_way"}], "paper_keywords": ["Parallel computing", " GPU", " game tree search", " alpha-beta pruning", " Conect6", " Chess"], "paper_abstract": "Game tree search is a classical problemin the field of game theory and artificial intelligence. Fast game tree search algorithm is critical for computer games asking for real-time responses. In this paper, we focus on how to leverage massive parallelism capabilities of GPU to accelerate the speed of game tree search algorithms and propose a concise and general parallel game tree search algorithm on GPU. The performance model of our algorithm is presented and analyzed theoretically. We implement the algorithm for two real computer games called Connect6 and Chess. We also use these two games to verify the effectiveness and efficiency of our algorithm. Experiments support our theoretical results and show good performance of our approach. Compared to classical CPU-based game tree search algorithms, our algorithm can achieve speedups of 89.95x for Connect6 and 11.43x for Chess, in case of no pruning. When pruning is considered, which means the practical performance of our algorithm, the speedup can reach about 10.58x for Connect6 and 7.26x for Chess. The insight of our work is that using GPU is a feasible way to improve the performance of game tree search algorithms.", "paper_title": "A Parallel Algorithm for Game Tree Search Using GPGPU", "paper_id": "WOS:000358226400004"}