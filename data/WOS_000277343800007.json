{"auto_keywords": [{"score": 0.028243570017222167, "phrase": "rcm"}, {"score": 0.00481495049065317, "phrase": "high-integrity_real-time_embedded_systems"}, {"score": 0.0046176782475198085, "phrase": "development_process"}, {"score": 0.00418810762179987, "phrase": "run_time"}, {"score": 0.004030449969901066, "phrase": "non-functional_domain"}, {"score": 0.0036937768530367647, "phrase": "functional_domain"}, {"score": 0.0034088473318056537, "phrase": "correct_specification"}, {"score": 0.0033615796302502547, "phrase": "non-functional_attributes"}, {"score": 0.0033265580369717996, "phrase": "particular_regard"}, {"score": 0.0032919001003538758, "phrase": "concurrent_structure"}, {"score": 0.0031900709094621975, "phrase": "interaction_protocols"}, {"score": 0.002974886152979993, "phrase": "model-driven_engineering_methodology"}, {"score": 0.002832928222306059, "phrase": "high_level"}, {"score": 0.0027741761880779535, "phrase": "runtime_implementation_structure"}, {"score": 0.002678944072162297, "phrase": "ravenscar_computation_model"}, {"score": 0.0025779504911297236, "phrase": "aerospace_applications"}, {"score": 0.002542174767860791, "phrase": "stringent_requirements"}, {"score": 0.002524473047010871, "phrase": "correctness_properties"}, {"score": 0.0024807547991927137, "phrase": "algebraic_formalization"}, {"score": 0.0024377918036784336, "phrase": "graph_theory"}, {"score": 0.002387214876538434, "phrase": "safe_termination"}, {"score": 0.002249527353528286, "phrase": "timing_aspects"}, {"score": 0.00217987162651941, "phrase": "prototype_tool"}, {"score": 0.002127186380459509, "phrase": "major_industrial_players"}, {"score": 0.0021049977753042253, "phrase": "european_space_industry"}], "paper_keywords": ["Formal methods", " high-integrity real-time embedded systems", " model-based engineering", " non-functional attributes", " ravenscar computational model (RCM)", " static analysis"], "paper_abstract": "In high-integrity systems, the focus of the development process is geared to assuring that the assertions made on the system are both correct (i.e., semantically sustainable) and feasible (i.e., true at run time). Some of those assertions take effect in the non-functional domain, that is, in how the system is realized and behaves in time, space and communication during execution; others in the functional domain, and thus concern what outputs the system produces for its inputs. In this paper, we address the problem of achieving correct specification and handling of non-functional attributes, with particular regard to the concurrent structure of the system, the safeness of the interaction protocols engaged in it, and the guarantee that its timing feasibility can be statically verified. Our approach is based on a Model-Driven Engineering methodology, in which correctness can be ensured by construction or verified at a high level of abstraction, while the runtime implementation structure and code are automatically generated. We employ the Ravenscar Computation Model (RCM) and focus, in particular, on aerospace applications, which impose stringent requirements on correctness properties. We discuss an algebraic formalization of our model based on graph theory which we use to prove safe termination in systems compliant with RCM, and show how to use the MAST+ static analyzer to verify the timing aspects. We finally illustrate the results of a prototype tool that was developed for evaluation by major industrial players in the European space industry.", "paper_title": "Toward Correctness in the Specification and Handling of Non-Functional Attributes of High-Integrity Real-Time Embedded Systems", "paper_id": "WOS:000277343800007"}