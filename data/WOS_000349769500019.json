{"auto_keywords": [{"score": 0.033531194637015566, "phrase": "gpgpu-aided_approach"}, {"score": 0.00481495049065317, "phrase": "parallel_processing_of_dynamic_continuous_queries"}, {"score": 0.004783232571029632, "phrase": "streaming_data_flows"}, {"score": 0.00462773520532301, "phrase": "streaming_data"}, {"score": 0.004597244847332915, "phrase": "high_density"}, {"score": 0.004566954456805558, "phrase": "conventional_data"}, {"score": 0.004536862734384202, "phrase": "query_indexing_approaches"}, {"score": 0.004447766706144458, "phrase": "excessive_costs"}, {"score": 0.004218602458288531, "phrase": "new_indexing_structure"}, {"score": 0.004163172790791119, "phrase": "adaptive_cell"}, {"score": 0.004027751272984522, "phrase": "cell-tree_indexing_approach"}, {"score": 0.003871024872459116, "phrase": "dynamic_continuous_queries"}, {"score": 0.0037824221315407355, "phrase": "space_costs"}, {"score": 0.003708086804757529, "phrase": "increasing_data_size"}, {"score": 0.0036472537997966938, "phrase": "scalable_solution"}, {"score": 0.0036112323484812675, "phrase": "massive_steaming_data"}, {"score": 0.003482160257566501, "phrase": "contemporary_general-purpose_computing"}, {"score": 0.0034477636809450312, "phrase": "graphics_processing_unit"}, {"score": 0.003379983027734299, "phrase": "ckdb-tree-based_approach"}, {"score": 0.0032378931240982056, "phrase": "gpu"}, {"score": 0.0030003014343035965, "phrase": "massively_parallel_manner"}, {"score": 0.0028930017387859804, "phrase": "streaming_data_transfer"}, {"score": 0.002789528662623221, "phrase": "experimental_results"}, {"score": 0.0026986685585382347, "phrase": "space_cost"}, {"score": 0.002663156413861478, "phrase": "cell-based_indexing_structure"}, {"score": 0.002559392185079503, "phrase": "traditional_counterparts"}, {"score": 0.0023559890904375526, "phrase": "update_costs"}, {"score": 0.002175913488493802, "phrase": "real-time_filtering"}, {"score": 0.0021049977753042253, "phrase": "massively_parallel_computing_technology"}], "paper_keywords": ["Streaming data", " cell-tree query indexing structure", " KDB-Tree", " big data computing", " data-intensive computing", " GPGPU"], "paper_abstract": "More and more real-time applications need to handle dynamic continuous queries over streaming data of high density. Conventional data and query indexing approaches generally do not apply for excessive costs in either maintenance or space. Aiming at these problems, this study first proposes a new indexing structure by fusing an adaptive cell and KDB-tree, namely CKDB-tree. A cell-tree indexing approach has been developed on the basis of the CKDB-tree that supports dynamic continuous queries. The approach significantly reduces the space costs and scales well with the increasing data size. Towards providing a scalable solution to filtering massive steaming data, this study has explored the feasibility to utilize the contemporary general-purpose computing on the graphics processing unit (GPGPU). The CKDB-tree-based approach has been extended to operate on both the CPU (host) and the GPU (device). The GPGPU-aided approach performs query indexing on the host while perform streaming data filtering on the device in a massively parallel manner. The two heterogeneous tasks execute in parallel and the latency of streaming data transfer between the host and the device is hidden. The experimental results indicate that (1) CKDB-tree can reduce the space cost comparing to the cell-based indexing structure by 60 percent on average, (2) the approach upon the CKDB-tree outperforms the traditional counterparts upon the KDB-tree by 66, 75 and 79 percent in average for uniform, skewed and hyper-skewed data in terms of update costs, and (3) the GPGPU-aided approach greatly improves the approach upon the CKDB-tree with the support of only a single Kepler GPU, and it provides real-time filtering of streaming data with 2.5M data tuples per second. The massively parallel computing technology exhibits great potentials in streaming data monitoring.", "paper_title": "Parallel Processing of Dynamic Continuous Queries over Streaming Data Flows", "paper_id": "WOS:000349769500019"}