{"auto_keywords": [{"score": 0.037146276869402736, "phrase": "asm"}, {"score": 0.00481495049065317, "phrase": "systemc_trans_action-level_models"}, {"score": 0.004600870784042767, "phrase": "better_performance"}, {"score": 0.004566123591480369, "phrase": "easier_verification"}, {"score": 0.004514491994233911, "phrase": "final_product"}, {"score": 0.004281125387210667, "phrase": "systemc_models"}, {"score": 0.004232702713825967, "phrase": "transaction_level"}, {"score": 0.004075198669927074, "phrase": "design_flow"}, {"score": 0.003879138659123195, "phrase": "property_specification_language"}, {"score": 0.0038352452380298464, "phrase": "unifed_modeling_language"}, {"score": 0.0036645642553325215, "phrase": "intermediate_format"}, {"score": 0.0035550029054401016, "phrase": "abstract_state_machines"}, {"score": 0.0034618177773967015, "phrase": "asml_model"}, {"score": 0.003383884759373793, "phrase": "finite_state_machine"}, {"score": 0.003331360664015745, "phrase": "systemc"}, {"score": 0.0031010029460927864, "phrase": "state_machine"}, {"score": 0.0030196821790309165, "phrase": "verified_design"}, {"score": 0.0027254466299651936, "phrase": "lower_levels"}, {"score": 0.0026741832921475667, "phrase": "existing_systemc_designs"}, {"score": 0.0024785689583828796, "phrase": "systemc_level"}, {"score": 0.0024227171881502636, "phrase": "genetic_algorithm"}, {"score": 0.002386181960126766, "phrase": "assertions_coverage"}, {"score": 0.002254003531073337, "phrase": "systemc-to-asml_and_asml-to-systemc_transformations"}, {"score": 0.002153540857619362, "phrase": "pci_bus_standard"}, {"score": 0.0021049977753042253, "phrase": "systemc_library"}], "paper_keywords": ["SystemC", " system-level design", " system-level verification", " transaction-level modeling"], "paper_abstract": "Transaction-level modeling allows exploring several SoC design architectures, leading to better performance and easier verification of the final product. In this paper, we present an approach to design and verify SystemC models at the transaction level. We integrate the verification as part of the design flow where we first model both the design and the properties (written in Property Specification language) in Unifed Modeling Language (UML); then, we translate them into an intermediate format modeled with AsmL [language based on Abstract State Machines (ASM)]. The AsmL model is used to generate a finite state machine of the design, including the properties. Checking the correctness of the properties is performed on the fly while generating the state machine. Finally, we translate the verified design to SystemC and map the properties to a set of assertions (as monitors in C#) that can be reused to validate the design at lower levels by simulation. For existing SystemC designs, we propose to translate the code back to AsmL in order to apply the same verification approach. At the SystemC level, we also present a genetic algorithm to enhance the assertions coverage. We will ensure the soundness of our approach by proving the correctness of the SystemC-to-AsmL and AsmL-to-SystemC transformations. We illustrate our approach on two case studies including the PCI bus standard and a master/slave generic architecture from the SystemC library.", "paper_title": "Design and verification of SystemC trans action-level models", "paper_id": "WOS:000236069600006"}