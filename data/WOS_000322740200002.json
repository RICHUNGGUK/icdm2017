{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "wireless_sensor_networks"}, {"score": 0.004462105963334103, "phrase": "harsh_environments"}, {"score": 0.004318881178805575, "phrase": "post-deployment_failures"}, {"score": 0.004046020290832207, "phrase": "execution_trace"}, {"score": 0.0036288825833675127, "phrase": "crucial_role"}, {"score": 0.0035507457285983268, "phrase": "postmortem_diagnosis"}, {"score": 0.003115908199991072, "phrase": "stringent_resource_constraints"}, {"score": 0.00295078850927459, "phrase": "efficient_approach"}, {"score": 0.002887210021573995, "phrase": "intraprocedural_and_interprocedural_control-flow_tracing"}, {"score": 0.002704554429386671, "phrase": "interleaving_concurrent_events"}, {"score": 0.0025892330566358503, "phrase": "control-flow_paths"}, {"score": 0.00217496508306238, "phrase": "case_studies"}], "paper_keywords": ["Design", " Experimentation", " Reliability", " Embedded debugging", " tracing", " wireless sensor networks", " diagnosis"], "paper_abstract": "Wireless sensor networks are typically deployed in harsh environments, thus post-deployment failures are not infrequent. An execution trace containing events in their order of execution could play a crucial role in postmortem diagnosis of these failures. Obtaining such a trace however is challenging due to stringent resource constraints. We propose an efficient approach to intraprocedural and interprocedural control-flow tracing that generates traces of all interleaving concurrent events and of the control-flow paths taken inside those events. We demonstrate the effectiveness of our approach with the help of case studies and illustrate its low overhead through measurements and simulations.", "paper_title": "Diagnostic Tracing for Wireless Sensor Networks", "paper_id": "WOS:000322740200002"}