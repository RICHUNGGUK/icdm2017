{"auto_keywords": [{"score": 0.03330740392858847, "phrase": "shaparti"}, {"score": 0.00481495049065317, "phrase": "multi-threaded_processors"}, {"score": 0.0046937237797352515, "phrase": "multi-threaded_processor"}, {"score": 0.004437613070853689, "phrase": "overall_throughput"}, {"score": 0.004303830426772906, "phrase": "executing_processes"}, {"score": 0.0041316803676012155, "phrase": "shared_caches"}, {"score": 0.003926105480202798, "phrase": "average_performance"}, {"score": 0.0034733518170738517, "phrase": "new_algorithm"}, {"score": 0.0032336801561165113, "phrase": "processor_caches"}, {"score": 0.0032008144731234265, "phrase": "co-running_processes"}, {"score": 0.0031042018721479385, "phrase": "executing_process"}, {"score": 0.003025915966640355, "phrase": "priority_scheme"}, {"score": 0.0028170314398963704, "phrase": "performance_goals"}, {"score": 0.0023197517832705297, "phrase": "extensive_experiments"}, {"score": 0.0021375377706211686, "phrase": "shared_processor_caches"}], "paper_keywords": ["Cache management", " Cache scheduling", " Multi-threaded processors", " Processor cache"], "paper_abstract": "Although in a multi-threaded processor, the processor may execute more than one process simultaneously to maximize the overall throughput of the system, the executing processes may compete with each other in using shared caches of the processor. This can seriously affect the average performance of the processes as the probability of cache hit for each process could be lowered. In this paper, we propose a new algorithm called the sharable cache partitioning algorithm (ShaParti), for scheduling the processor caches amongst co-running processes. In ShaParti, each executing process has its own cache and a priority scheme is designed for them to share the caches belonging to other executing processes. The performance goals of ShaParti are to improve the cache hit rates of the processes and at the same time the cache miss rates of other concurrent processes will not be lowered compared with the case in which each process has its own cache. Extensive experiments have been performed to illustrate the effectiveness of ShaParti in improving the performance in accessing shared processor caches. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "An effective cache scheduling scheme for improving the performance in multi-threaded processors", "paper_id": "WOS:000320293900009"}