{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "generalized_cuboid_shape"}, {"score": 0.004195418010131832, "phrase": "base_shape"}, {"score": 0.00410017409033388, "phrase": "complex_objects"}, {"score": 0.003531474887552889, "phrase": "smooth_and_sharp_edges"}, {"score": 0.0034118234596993836, "phrase": "volumetric_nature"}, {"score": 0.0031845067058084583, "phrase": "easy_topology_specification"}, {"score": 0.002806256131739047, "phrase": "surface_parameterization"}, {"score": 0.002530359917257626, "phrase": "texturing_and_displacement_functions"}, {"score": 0.002444544487772349, "phrase": "surface_details"}, {"score": 0.0021049977753042253, "phrase": "interactive_and_procedural_modeling_contexts"}], "paper_keywords": ["Subdivision surface", " Surface parameterization", " Polycube map", " z-brush", " Displacement map", " Geometry image", " CSG"], "paper_abstract": "This paper presents a simple and general modeling primitive, called a block, based on a generalized cuboid shape. Blocks are laid out and connected together to constitute the base shape of complex objects, from which is extracted a control mesh that can contain both smooth and sharp edges. The volumetric nature of the blocks allows for easy topology specification, as well as CSG operations between blocks. The surface parameterization inherited from the block faces provides support for texturing and displacement functions to apply surface details. A variety of examples illustrate the generality of our blocks in both interactive and procedural modeling contexts.", "paper_title": "Modeling with blocks", "paper_id": "WOS:000290767600014"}