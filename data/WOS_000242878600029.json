{"auto_keywords": [{"score": 0.03926822541954043, "phrase": "spiht"}, {"score": 0.004814977665526278, "phrase": "vlsi"}, {"score": 0.004700193486903964, "phrase": "modified_efficient_spiht_encoder"}, {"score": 0.004560568143816105, "phrase": "hierarchical_trees"}, {"score": 0.004398457709182882, "phrase": "highly_efficient_technique"}, {"score": 0.004319566932528865, "phrase": "discrete_wavelet_transform"}, {"score": 0.004216566615939546, "phrase": "decomposed_images"}, {"score": 0.003969640975997097, "phrase": "embedded_block_coding"}, {"score": 0.003922011960904278, "phrase": "optimized_truncation"}, {"score": 0.0036700484729006136, "phrase": "straight_forward_coding_procedure"}, {"score": 0.0033725614574134396, "phrase": "lower_cost_hardware_implementation"}, {"score": 0.003232956879952914, "phrase": "modified_spiht_algorithm"}, {"score": 0.0030434561939032597, "phrase": "coefficient_scanning_process"}, {"score": 0.0029887957779347394, "phrase": "i-d_addressing_method"}, {"score": 0.0028823939507764238, "phrase": "wavelet_coefficients"}, {"score": 0.002813566267090177, "phrase": "fixed_memory_allocation"}, {"score": 0.0027630232270330402, "phrase": "data_lists"}, {"score": 0.0026970382454914437, "phrase": "dynamic_allocation_approach"}, {"score": 0.0026326249204932733, "phrase": "original_spiht."}, {"score": 0.0024632912250657636, "phrase": "extremely_fast_throughput"}, {"score": 0.0024336917123957387, "phrase": "easier_hardware_implementation"}, {"score": 0.002389956401870098, "phrase": "vlsi_implementation"}, {"score": 0.0023328599525181707, "phrase": "proposed_design"}, {"score": 0.0021049977753042253, "phrase": "working_frequency"}], "paper_keywords": ["discrete wavelet transform (DWT)", " set partitioning in hierarchical trees (SPIHT)", " image coding"], "paper_abstract": "Set Partitioning in Hierarchical Trees (SPIHT) is a highly efficient technique for compressing Discrete Wavelet Transform (DWT) decomposed images. Though its compression efficiency is a little less famous than Embedded Block Coding with Optimized Truncation (EBCOT) adopted by JPEG2000, SPIHT has a straight forward coding procedure and requires no tables. These make SPIHT a more appropriate algorithm for lower cost hardware implementation. In this paper, a modified SPIHT algorithm is presented. The modifications include a simplification of coefficient scanning process, a I-D addressing method instead of the original 2-D arrangement of wavelet coefficients, and a fixed memory allocation for the data lists instead of a dynamic allocation approach required in the original SPIHT. Although the distortion is slightly increased, it facilitates an extremely fast throughput and easier hardware implementation. The VLSI implementation demonstrates that the proposed design can encode a CIF (352 x 288) 4:2:0 image sequence with at least 30 frames per second at 100-MHz working frequency.", "paper_title": "VLSI implementation of a modified efficient SPIHT encoder", "paper_id": "WOS:000242878600029"}