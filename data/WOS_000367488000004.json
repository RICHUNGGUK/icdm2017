{"auto_keywords": [{"score": 0.03333227456953711, "phrase": "update_cost"}, {"score": 0.013949105536740086, "phrase": "mobile_objects"}, {"score": 0.00481495049065317, "phrase": "sensor_networks"}, {"score": 0.004654210559456924, "phrase": "sensor_network"}, {"score": 0.004498812433096501, "phrase": "nearest_object"}, {"score": 0.004203343568960231, "phrase": "nearby_sensors"}, {"score": 0.004062937864702115, "phrase": "object_tracking_mechanism"}, {"score": 0.0036553070575015344, "phrase": "closest_object"}, {"score": 0.0035198224928307854, "phrase": "object's_location"}, {"score": 0.0032760377953971248, "phrase": "scalable_distributed_algorithm"}, {"score": 0.0030955250132409964, "phrase": "main_idea"}, {"score": 0.003014713272570927, "phrase": "virtual_tree"}, {"score": 0.0029920129598858545, "phrase": "downward_paths"}, {"score": 0.0028485585670146025, "phrase": "query_cost"}, {"score": 0.0027325449069867222, "phrase": "constant-doubling_graph_model"}, {"score": 0.002495521662819317, "phrase": "polylogarithmic_approximations"}, {"score": 0.0024211628058125067, "phrase": "general_graph_model"}, {"score": 0.002253299769886694, "phrase": "first_algorithm"}, {"score": 0.0021944267528581094, "phrase": "nearest_neighbor_queries"}, {"score": 0.0021778895748464024, "phrase": "low_update_cost"}, {"score": 0.002153316680437517, "phrase": "distributed_setting"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Sensor networks", " Mobile objects", " Nearest neighbor queries", " Hierarchical structure", " Object tracking", " Competitive ratio"], "paper_abstract": "Given a set of m mobile objects in a sensor network, we consider the problem of finding the nearest object among them from any node in the network at any time. These mobile objects are tracked by nearby sensors called proxy nodes. This problem requires an object tracking mechanism which typically relies on two basic operations: query and update. A query is invoked by a node each time when there is a need to find the closest object from it in the network. Updates of an object's location are initiated when the object moves from one location (proxy node) to another. We present a scalable distributed algorithm for tracking these mobile objects such that both the query cost and the update cost are small. The main idea in our algorithm is to maintain a virtual tree of downward paths pointing to the objects. Our algorithm guarantees an asymptotically optimal O(1) approximation for query cost and an O(min{logn, log D}) approximation for update cost in the constant-doubling graph model, where n and D, respectively, are the number of nodes and the diameter of the network. We also give polylogarithmic approximations for both query and update cost in the general graph model. Our algorithm requires only polylogarithmic bits Of memory per node. To the best of our knowledge, this is the first algorithm that is asymptotically optimal in handling nearest neighbor queries with low update cost in a distributed setting. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Optimal nearest neighbor queries in sensor networks", "paper_id": "WOS:000367488000004"}