{"auto_keywords": [{"score": 0.0351506449664449, "phrase": "system_reliability"}, {"score": 0.00481495049065317, "phrase": "testing_effort"}, {"score": 0.004763895422211728, "phrase": "software_architecture"}, {"score": 0.004688321299229397, "phrase": "growing_dependence"}, {"score": 0.00458940888106061, "phrase": "software_systems"}, {"score": 0.00451659023910662, "phrase": "high_premium"}, {"score": 0.0043511221096418475, "phrase": "stringent_reliability_expectations"}, {"score": 0.004038076978795421, "phrase": "decreasing_resources"}, {"score": 0.0036488111139918135, "phrase": "software_system"}, {"score": 0.0034963129868796033, "phrase": "optimization_framework"}, {"score": 0.0030595112110658675, "phrase": "ultimate_objective"}, {"score": 0.002994859407965545, "phrase": "specified_system_reliability_target"}, {"score": 0.002418742283474052, "phrase": "\"architecture-based_optimization"}, {"score": 0.0022806798371116698, "phrase": "effort_allocation_process"}, {"score": 0.002196944917134202, "phrase": "architecture-based_optimization_framework"}, {"score": 0.0021390191069313945, "phrase": "equal_component_weighting"}, {"score": 0.0021049977753042253, "phrase": "expert_opinion"}], "paper_keywords": ["Architecture-based optimization", " effort minimization", " optimization", " software architecture", " software reliability"], "paper_abstract": "The growing dependence of society on software systems places a high premium on their reliable operation. Moreover, the stringent reliability expectations imposed on these systems must be achieved despite their increasing size and complexity, and decreasing resources available for their development and maintenance. To mitigate these dual challenges, a systematic approach to guide the allocation of resources to the components of a software system is necessary. This paper presents an optimization framework which considers the contribution of each component to system reliability to determine the amount of effort to be allocated to each component, towards the ultimate objective of achieving the specified system reliability target with minimal effort. We assume that the contribution of a component to system reliability is governed by two factors: the system architecture, and the effort-reliability relationship of the component. This characterization is referred to as \"architecture-based optimization\" because it considers the system architecture explicitly in the effort allocation process. It is demonstrated that the architecture-based optimization framework outperforms other effort allocation strategies, including equal component weighting, and expert opinion.", "paper_title": "Optimal Allocation of Testing Effort Considering Software Architecture", "paper_id": "WOS:000304910800030"}