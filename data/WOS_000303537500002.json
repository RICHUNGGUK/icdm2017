{"auto_keywords": [{"score": 0.0488287533443648, "phrase": "modern_software_systems"}, {"score": 0.044244467176663194, "phrase": "run_time"}, {"score": 0.00481495049065317, "phrase": "adaptive_software"}, {"score": 0.004716867446922295, "phrase": "functional_requirements"}, {"score": 0.004305862702167419, "phrase": "self-managed_reactions"}, {"score": 0.004156515375354328, "phrase": "human-driven_changes"}, {"score": 0.0039421123723827655, "phrase": "autonomic_behavior"}, {"score": 0.00391898046407615, "phrase": "software_systems"}, {"score": 0.0038503928358186385, "phrase": "rich_run-time_support"}, {"score": 0.0037941508352767462, "phrase": "relevant_phenomena"}, {"score": 0.0037607992433574835, "phrase": "surrounding_environment"}, {"score": 0.003630288321465252, "phrase": "possible_consequences"}, {"score": 0.003463267330414914, "phrase": "required_service"}, {"score": 0.003313647543625047, "phrase": "non-functional_requirements"}, {"score": 0.0032652199869725087, "phrase": "essential_component"}, {"score": 0.0031518527291700326, "phrase": "proposed_approach"}, {"score": 0.0030067770042809354, "phrase": "service-oriented_systems"}, {"score": 0.0028938199455860836, "phrase": "contractual_obligations"}, {"score": 0.0028683597138449467, "phrase": "application_provider"}, {"score": 0.0026568552346370082, "phrase": "-functional_requirements"}, {"score": 0.0024392472592460004, "phrase": "qos_satisfaction"}, {"score": 0.002354489734007631, "phrase": "holistic_view"}, {"score": 0.002320047233050843, "phrase": "run-time_management"}, {"score": 0.0023064113959127288, "phrase": "adaptive_software_systems"}, {"score": 0.002226259272038318, "phrase": "design_time"}, {"score": 0.0021679744903823793, "phrase": "quantitative_terms"}, {"score": 0.0021049977753042253, "phrase": "continuous_verification"}], "paper_keywords": ["Software evolution", " (self)Adaptive software", " Non-functional requirements", " Reliability", " Performance", " Models", " Model-driven development", " Markov models", " Verification", " Probabilistic model checking", " Monitoring", " Bayesian inference"], "paper_abstract": "Modern software systems are increasingly requested to be adaptive to changes in the environment in which they are embedded. Moreover, adaptation often needs to be performed automatically, through self-managed reactions enacted by the application at run time. Off-line, human-driven changes should be requested only if self-adaptation cannot be achieved successfully. To support this kind of autonomic behavior, software systems must be empowered by a rich run-time support that can monitor the relevant phenomena of the surrounding environment to detect changes, analyze the data collected to understand the possible consequences of changes, reason about the ability of the application to continue to provide the required service, and finally react if an adaptation is needed. This paper focuses on non-functional requirements, which constitute an essential component of the quality that modern software systems need to exhibit. Although the proposed approach is quite general, it is mainly exemplified in the paper in the context of service-oriented systems, where the quality of service (QoS) is regulated by contractual obligations between the application provider and its clients. We analyze the case where an application, exported as a service, is built as a composition of other services. Non-functional requirements-such as reliability and performance-heavily depend on the environment in which the application is embedded. Thus changes in the environment may ultimately adversely affect QoS satisfaction. We illustrate an approach and support tools that enable a holistic view of the design and run-time management of adaptive software systems. The approach is based on formal (probabilistic) models that are used at design time to reason about dependability of the application in quantitative terms. Models continue to exist at run time to enable continuous verification and detection of changes that require adaptation.", "paper_title": "A formal approach to adaptive software: continuous assurance of non-functional requirements", "paper_id": "WOS:000303537500002"}