{"auto_keywords": [{"score": 0.04933167036983738, "phrase": "embedded_systems"}, {"score": 0.04439223129550832, "phrase": "dynamic_memory_allocation_problem"}, {"score": 0.00481495049065317, "phrase": "dynamic_memory_allocation"}, {"score": 0.004665764181113345, "phrase": "memory_allocation"}, {"score": 0.004556901872357751, "phrase": "significant_impact"}, {"score": 0.004485735417293941, "phrase": "power_consumption"}, {"score": 0.0041136473765874815, "phrase": "memory_requirements"}, {"score": 0.003954837422946628, "phrase": "time_interval"}, {"score": 0.003684213587410217, "phrase": "integer_linear_programming"}, {"score": 0.003626626504149897, "phrase": "iterative_approaches"}, {"score": 0.0035141291835319682, "phrase": "solution_interval"}, {"score": 0.00327356326590461, "phrase": "partial_time_intervals"}, {"score": 0.0032223742018434856, "phrase": "agrasp"}, {"score": 0.0030494153169181334, "phrase": "time_intervals"}, {"score": 0.00290855128461017, "phrase": "global_approach"}, {"score": 0.0026669634961243092, "phrase": "grasp"}, {"score": 0.002645992747675361, "phrase": "algorithm_solution_quality"}, {"score": 0.0025841336988141235, "phrase": "larger_instances"}, {"score": 0.0023507916951658455, "phrase": "multiple_neighborhood_search"}, {"score": 0.0022777800735119405, "phrase": "tabu_search"}, {"score": 0.0022070310530794097, "phrase": "complex_ejection_chains"}, {"score": 0.002155412043665635, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "previously_developed_methods"}], "paper_keywords": ["Electronic design", " Dynamic memory allocation", " MNS", " TS", " Ejection chains"], "paper_abstract": "Memory allocation has a significant impact on power consumption in embedded systems. We address the dynamic memory allocation problem, in which memory requirements may change at each time interval. This problem has previously been addressed using integer linear programming and iterative approaches which build a solution interval by interval taking into account the requirements of partial time intervals. AGRASP that builds a solution for all time intervals has been proposed as a global approach. Due to the complexity of this problem, the GRASP algorithm solution quality decreases for larger instances. In order to overcome this drawback, we propose a multiple neighborhood search hybridized with a Tabu Search and enhanced by complex ejection chains. The proposed approach outperforms all previously developed methods devised for the dynamic memory allocation problem.", "paper_title": "A multiple neighborhood search for dynamic memory allocation in embedded systems", "paper_id": "WOS:000368432000001"}