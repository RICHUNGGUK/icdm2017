{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "external_memory"}, {"score": 0.004444921827311577, "phrase": "fixed-topology_binary_tree"}, {"score": 0.004048860957751714, "phrase": "block_size_b"}, {"score": 0.003737485125097945, "phrase": "worst-case_number"}, {"score": 0.0036390887584943723, "phrase": "block_memory_transfers"}, {"score": 0.002824005136794786, "phrase": "optimal_number"}, {"score": 0.0027495914857929584, "phrase": "memory_transfers"}], "paper_keywords": ["Data structures", " Trees", " External-memory"], "paper_abstract": "Consider laying out a fixed-topology binary tree of N nodes into external memory with block size B so as to minimize the worst-case number of block memory transfers required to traverse a path from the root to a node of depth D. We prove that the optimal number of memory transfers is {Theta(D/lg(1+B)) when D = O(lg N), Theta(lg N/lg(1+B lg N/D)) when D = Omega(lg N) and D = O(B lg N), Theta(D/B) when D = Omega(B lg N).", "paper_title": "Worst-Case Optimal Tree Layout in External Memory", "paper_id": "WOS:000354066300002"}