{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "graph_matching"}, {"score": 0.004598933498016774, "phrase": "multithreaded_architectures"}, {"score": 0.0036553070575015344, "phrase": "performance_losses"}, {"score": 0.0034911335714333507, "phrase": "scalability_problems"}, {"score": 0.00290473242917264, "phrase": "high_performance"}, {"score": 0.0027741761880779535, "phrase": "irregular_applications"}, {"score": 0.0025892330566358503, "phrase": "codesign_study"}], "paper_keywords": [""], "paper_abstract": "Executing irregular, data-intensive workloads on multithreaded architectures can result in performance losses and scalability problems. Codesigning algorithms and architectures can realize high performance on irregular applications. A codesign study reveals four key lessons learned from implementing matching algorithms on various platforms.", "paper_title": "Codesign Lessons Learned from Implementing Graph Matching on Multithreaded Architectures", "paper_id": "WOS:000359577900007"}