{"auto_keywords": [{"score": 0.02629430399115748, "phrase": "metropolis_iteration"}, {"score": 0.00481495049065317, "phrase": "positron_emission_tomography"}, {"score": 0.0046432244185370605, "phrase": "voxel_space"}, {"score": 0.00438370856272802, "phrase": "multi-dimensional_integrals"}, {"score": 0.0043047957673166175, "phrase": "integration_domain"}, {"score": 0.004151188559520802, "phrase": "monte_carlo"}, {"score": 0.004126515778378172, "phrase": "mc"}, {"score": 0.004064117897000019, "phrase": "straightforward_method"}, {"score": 0.0040273609512482, "phrase": "high-dimensional_integrals"}, {"score": 0.003848484047789746, "phrase": "hundred_millions"}, {"score": 0.0037563420911055135, "phrase": "measured_object"}, {"score": 0.003644249428737351, "phrase": "monte_carlo_simulation"}, {"score": 0.003535489842686145, "phrase": "iterative_reconstruction_process"}, {"score": 0.0034508157597076664, "phrase": "maximum_likelihood"}, {"score": 0.0034299649219748513, "phrase": "expectation_maximization"}, {"score": 0.0033175095965171674, "phrase": "reconstruction_error"}, {"score": 0.0032775342939895358, "phrase": "on-the-fly_mc_approximations"}, {"score": 0.003189336613974262, "phrase": "mc_sample_locations"}, {"score": 0.0031318565271653723, "phrase": "iteration_step"}, {"score": 0.0031035049228517715, "phrase": "ml-em_scheme"}, {"score": 0.0030661003993462665, "phrase": "approximation_error"}, {"score": 0.0030199761431186434, "phrase": "modified_reconstruction_result"}, {"score": 0.00297454367746853, "phrase": "random_estimates"}, {"score": 0.002929792688461903, "phrase": "different_iteration_steps"}, {"score": 0.0027159094186967247, "phrase": "iterative_solution"}, {"score": 0.00266693888510356, "phrase": "random_samples"}, {"score": 0.0026347821012634586, "phrase": "reconstruction_time"}, {"score": 0.0025794354905140527, "phrase": "error_behavior"}, {"score": 0.0025638362414466278, "phrase": "ml-em_iteration"}, {"score": 0.002548331088496964, "phrase": "on-the-fly_mc_projections"}, {"score": 0.002449802505107058, "phrase": "iteration_averages"}, {"score": 0.0024349853033241663, "phrase": "projection_estimates"}, {"score": 0.0024129269611844794, "phrase": "iteration_sequence"}, {"score": 0.002376605162340897, "phrase": "forward_projection_estimates"}, {"score": 0.0022847009758393405, "phrase": "tracer_density_estimate"}, {"score": 0.0022231606165229235, "phrase": "significant_reduction"}, {"score": 0.002203016940021265, "phrase": "required_number"}, {"score": 0.0021371774747471033, "phrase": "proposed_methods"}, {"score": 0.0021049977753042253, "phrase": "teratomo_system"}], "paper_keywords": ["Graphics processing unit (GPU)", " positron emission tomography (PET)", " maximum likelihood", " expectation maximization (ML-EM) reconstruction", " Monte Carlo (MC) methods", " scatter compensation"], "paper_abstract": "Iterative positron emission tomography (PET) reconstruction computes projections between the voxel space and the lines of response (LOR) space, which are mathematically equivalent to the evaluation of multi-dimensional integrals. The dimension of the integration domain can be very high if scattering needs to be compensated. Monte Carlo (MC) quadrature is a straightforward method to approximate high-dimensional integrals. As the numbers of voxels and LORs can be in the order of hundred millions and the projection also depends on the measured object, the quadratures cannot be precomputed, but Monte Carlo simulation should take place on-the-fly during the iterative reconstruction process. This paper presents modifications of the maximum likelihood, expectation maximization (ML-EM) iteration scheme to reduce the reconstruction error due to the on-the-fly MC approximations of forward and back projections. If the MC sample locations are the same in every iteration step of the ML-EM scheme, then the approximation error will lead to a modified reconstruction result. However, when random estimates are statistically independent in different iteration steps, then the iteration may either diverge or fluctuate around the solution. Our goal is to increase the accuracy and the stability of the iterative solution while keeping the number of random samples and therefore the reconstruction time low. We first analyze the error behavior of ML-EM iteration with on-the-fly MC projections, then propose two solutions: averaging iteration and Metropolis iteration. Averaging iteration averages forward projection estimates during the iteration sequence. Metropolis iteration rejects those forward projection estimates that would compromise the reconstruction and also guarantees the unbiasedness of the tracer density estimate. We demonstrate that these techniques allow a significant reduction of the required number of samples and thus the reconstruction time. The proposed methods are built into the Teratomo system.", "paper_title": "Averaging and Metropolis Iterations For Positron Emission Tomography", "paper_id": "WOS:000316213500009"}