{"auto_keywords": [{"score": 0.0452514208810669, "phrase": "owl_instances"}, {"score": 0.015719716506582538, "phrase": "owl_ontologies"}, {"score": 0.01400737827806082, "phrase": "deductive_rules"}, {"score": 0.013014855256672328, "phrase": "object-oriented_schema"}, {"score": 0.004566567411073082, "phrase": "rule_system"}, {"score": 0.004173244935967375, "phrase": "rule_language"}, {"score": 0.0041074234667687875, "phrase": "clips_production_rule_system"}, {"score": 0.0039369107163201855, "phrase": "cool."}, {"score": 0.0038748022659578865, "phrase": "transformation_procedure"}, {"score": 0.0038339398365449507, "phrase": "owl_classes"}, {"score": 0.003753498345597498, "phrase": "cool_classes"}, {"score": 0.0037139103792217143, "phrase": "owl_properties"}, {"score": 0.003674738405118697, "phrase": "class_slots"}, {"score": 0.003597625122515975, "phrase": "cool_objects"}, {"score": 0.003270092550315648, "phrase": "object-oriented_representation"}, {"score": 0.003036040409062437, "phrase": "resource_objects"}, {"score": 0.002879158342988017, "phrase": "deductive_object-oriented_rule_language"}, {"score": 0.0028037753646260937, "phrase": "maintainable_views"}, {"score": 0.002658866147208447, "phrase": "clips"}, {"score": 0.0024947959375982614, "phrase": "implied_relationships"}, {"score": 0.0024423826953133844, "phrase": "rich_owl_semantics"}, {"score": 0.0022916428586256723, "phrase": "clips_production_rules"}, {"score": 0.002255431275670053, "phrase": "rich_open-world_semantics"}, {"score": 0.0021616339773325704, "phrase": "incremental_transformation_procedure"}, {"score": 0.0021049977753042253, "phrase": "rule_compilation_procedure"}], "paper_keywords": [""], "paper_abstract": "This paper reports on the implementation of a rule system, called O-DEVICE, for reasoning about OWL instances using deductive rules. O-DEVICE exploits the rule language of the CLIPS production rule system and transforms OWL ontologies into an object-oriented schema of COOL. During the transformation procedure, OWL classes are mapped to COOL classes, OWL properties to class slots and OWL instances to COOL objects. The purpose of this transformation is twofold: a) to exploit the advantages of the object-oriented representation and access all the properties of instances in one step, since properties are encapsulated inside resource objects; b) to be able to use a deductive object-oriented rule language for querying and creating maintainable views of OWL instances, which operates over the object-oriented schema of CLIPS, and c) to answer queries faster, since the implied relationships due to the rich OWL semantics have been pre-computed. The deductive rules are compiled into CLIPS production rules. The rich open-world semantics of OWL are partly handled by the incremental transformation procedure and partly by the rule compilation procedure.", "paper_title": "O-DEVICE: An object-oriented knowledge base system for OWL ontologies", "paper_id": "WOS:000238053100025"}