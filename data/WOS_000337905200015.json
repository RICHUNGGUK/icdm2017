{"auto_keywords": [{"score": 0.04920822493417558, "phrase": "pore_networks"}, {"score": 0.00481495049065317, "phrase": "parallel_simulation_of_pore_networks"}, {"score": 0.0047709540557306284, "phrase": "multicore_cpus"}, {"score": 0.004536029676655286, "phrase": "dual_site-bond"}, {"score": 0.003689053436223376, "phrase": "nomiss_greedy_algorithm"}, {"score": 0.0032585499655442404, "phrase": "large_memory_consumption"}, {"score": 0.0032287289440915187, "phrase": "long_computing_time"}, {"score": 0.002999749669403939, "phrase": "proficient_construction"}, {"score": 0.0029722900280316216, "phrase": "large_pore_networks"}, {"score": 0.002931569771634119, "phrase": "first_method"}, {"score": 0.0028914057633212045, "phrase": "parallel_monte_carlo_procedure"}, {"score": 0.0027741761880779535, "phrase": "pore_sizes"}, {"score": 0.0026986685585382347, "phrase": "valid_pore_network"}, {"score": 0.0026373136897864763, "phrase": "parallel_versions"}, {"score": 0.0026011706232569316, "phrase": "pioneering_nomiss_greedy_algorithm"}, {"score": 0.0025655216052760093, "phrase": "first_version"}, {"score": 0.002530359917257626, "phrase": "static_data"}, {"score": 0.002461472107682778, "phrase": "running_time"}, {"score": 0.0023834640793589435, "phrase": "dynamic_data_distribution_policy"}, {"score": 0.0023400004981080818, "phrase": "pore_network_quality"}, {"score": 0.0023079225317714815, "phrase": "obtained_results"}, {"score": 0.0022450768409733807, "phrase": "proposed_version"}], "paper_keywords": ["Parallel greedy algorithm", " parallel Monte Carlo method", " dynamic data distribution", " cubic pore networks", " dual site-bond model", " multi-core cluster programming"], "paper_abstract": "Pore networks can be simulated in silico by using the dual site-bond Model. In this approach, a set of cavities (sites) are interconnected to each other by means of a set of throats (bonds), while considering that each site should be always larger than any of its delimiting bonds. The NoMISS greedy algorithm has been implemented recently in order to address this task; nevertheless, even if this procedure is relatively fast, there arises problems related to large memory consumption and long computing time, as pore networks become somewhat large. Here, three parallel methods are proposed to allow a proficient construction of large pore networks. The first method is a parallel Monte Carlo procedure, which applies a number of exchanges among pore sizes in order to obtain a valid pore network. The other two methods are parallel versions of the pioneering NoMISS greedy algorithm. The first version uses a static data partitioning to speed up the running time, whilst the second applies a dynamic data distribution policy to improve the pore network quality. The obtained results show the behavior of each proposed version with respect to their performance and quality, by employing the resources of a 125-core Linux cluster.", "paper_title": "Parallel Simulation of Pore Networks Using Multicore CPUs", "paper_id": "WOS:000337905200015"}