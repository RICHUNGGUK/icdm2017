{"auto_keywords": [{"score": 0.029632338207217213, "phrase": "fst"}, {"score": 0.01571965589183162, "phrase": "source_throttling"}, {"score": 0.011518879230503884, "phrase": "entire_shared_memory_system"}, {"score": 0.009536298045375171, "phrase": "entire_memory_system"}, {"score": 0.004586531354697466, "phrase": "multicore_memory_systems"}, {"score": 0.004407690586271672, "phrase": "multiple_memory_subsystem_resources"}, {"score": 0.0043496334756644535, "phrase": "resource_sharing"}, {"score": 0.004052616113326177, "phrase": "previous_research"}, {"score": 0.004016938499717623, "phrase": "separate_fairness_mechanisms"}, {"score": 0.0037925389501636975, "phrase": "contradictory_decisions"}, {"score": 0.0037260386566859197, "phrase": "low_fairness"}, {"score": 0.0036932254391253134, "phrase": "performance_loss"}, {"score": 0.0036124465071873998, "phrase": "coordinated_mechanism"}, {"score": 0.0033955105098235345, "phrase": "new_approach"}, {"score": 0.003149471116658739, "phrase": "fairness_mechanisms"}, {"score": 0.0028195727965553367, "phrase": "system-software-set_threshold"}, {"score": 0.002279702500235741, "phrase": "different_fairness_objectives"}, {"score": 0.0022496114364599328, "phrase": "memory_system"}, {"score": 0.0021712920081029194, "phrase": "best_system_fairness"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_fairness_mechanisms"}], "paper_keywords": ["Design", " Performance", " Chip-multiprocessors", " memory system", " fairness"], "paper_abstract": "Cores in chip-multiprocessors (CMPs) share multiple memory subsystem resources. If resource sharing is unfair, some applications can be delayed significantly while others are unfairly prioritized. Previous research proposed separate fairness mechanisms for each resource. Such resource-based fairness mechanisms implemented independently in each resource can make contradictory decisions, leading to low fairness and performance loss. Therefore, a coordinated mechanism that provides fairness in the entire shared memory system is desirable. This article proposes a new approach that provides fairness in the entire shared memory system, thereby eliminating the need for and complexity of developing fairness mechanisms for each resource. Our technique, Fairness via Source Throttling (FST), estimates unfairness in the entire memory system. If unfairness is above a system-software-set threshold, FST throttles down cores causing unfairness by limiting the number of requests they create and the frequency at which they do. As such, our source-based fairness control ensures fairness decisions are made in tandem in the entire memory system. FST enforces thread priorities/weights, and enables system-software to enforce different fairness objectives in the memory system. Our evaluations show that FST provides the best system fairness and performance compared to three systems with state-of-the-art fairness mechanisms implemented in both shared caches and memory controllers.", "paper_title": "Fairness via Source Throttling: A Configurable and High-Performance Fairness Substrate for Multicore Memory Systems", "paper_id": "WOS:000303436700002"}