{"auto_keywords": [{"score": 0.04193275383545604, "phrase": "power_consumption"}, {"score": 0.0360445530776084, "phrase": "grub-pa"}, {"score": 0.00481495049065317, "phrase": "power-aware_scheduling"}, {"score": 0.004769444094319619, "phrase": "periodic_and_aperiodic_real-time_tasks"}, {"score": 0.004635477242873163, "phrase": "important_issue"}, {"score": 0.00452670409375785, "phrase": "real-time_embedded_systems"}, {"score": 0.003962899903266524, "phrase": "modern_processors"}, {"score": 0.0037789720824759503, "phrase": "power-aware_scheduling_algorithm"}, {"score": 0.0035864603175592854, "phrase": "timing_constraints"}, {"score": 0.0035525230119401153, "phrase": "real-time_tasks"}, {"score": 0.0032302647179383915, "phrase": "resource_reservation_technique"}, {"score": 0.0031393948330209255, "phrase": "temporal_isolation"}, {"score": 0.0029935730127943496, "phrase": "power-aware_algorithms"}, {"score": 0.0027218799769229596, "phrase": "existing_power-aware_scheduling_algorithms"}, {"score": 0.0026452734009203764, "phrase": "simulation_experiments"}, {"score": 0.0026202187680903063, "phrase": "synthetic_task_sets"}, {"score": 0.0024397017438101726, "phrase": "state-of-the-art_power-aware_algorithms"}, {"score": 0.002304263635960015, "phrase": "linux_operating_system"}, {"score": 0.0022715929119140194, "phrase": "practical_implementation_issues"}, {"score": 0.0022393843660697484, "phrase": "overhead_and_power_models"}, {"score": 0.0021049977753042253, "phrase": "real_testbed_application"}], "paper_keywords": ["DVS", " real-time", " resource-reservation", " scheduling", " power-aware"], "paper_abstract": "Power consumption is an important issue in the design of real-time embedded systems. As many embedded systems are powered by batteries, the goal is to extend the autonomy of the system as much as possible. To reduce power consumption, modern processors can change their voltage and frequency at runtime. A power-aware scheduling algorithm can exploit this capability to reduce power consumption while preserving the timing constraints of real-time tasks. In this paper, we present GRUB-PA, a novel power-aware scheduling algorithm based on a resource reservation technique. In addition to providing temporal isolation and time guarantees and, unlike most of the power-aware algorithms proposed in the literature, GRUB-PA can efficiently handle systems consisting of both hard and soft, aperiodic, sporadic, and periodic tasks. We compared our algorithm with existing power-aware scheduling algorithms on an extensive set of simulation experiments on synthetic task sets. The results show that the performance of our algorithm is in line with the state-of-the-art power-aware algorithms. We also present the implementation of our algorithm in the Linux operating system and discuss practical implementation issues like switching overhead and power models. Finally, we show the results of experiments performed on a real testbed application.", "paper_title": "A resource reservation algorithm for power-aware scheduling of periodic and aperiodic real-time tasks", "paper_id": "WOS:000241412500003"}