{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "uncompromising_problems"}, {"score": 0.04960202571834175, "phrase": "lexicase_selection"}, {"score": 0.010153500810127183, "phrase": "test_cases"}, {"score": 0.0046491050101721545, "phrase": "broad_class"}, {"score": 0.00392100783796804, "phrase": "genetic_programming_research"}, {"score": 0.0036188435232325337, "phrase": "recently_proposed_\"lexicase\"_parent_selection_algorithm"}, {"score": 0.003407549468745519, "phrase": "genetic_programming"}, {"score": 0.0031925019616678217, "phrase": "fitness_value"}, {"score": 0.0029169007179202164, "phrase": "random_order"}, {"score": 0.0027602925235474317, "phrase": "standard_tournament_selection"}, {"score": 0.0027327327233891865, "phrase": "implicit_fitness_sharing"}, {"score": 0.0025989960809479104, "phrase": "finite_algebras"}, {"score": 0.002534596206835737, "phrase": "digital_multipliers"}, {"score": 0.0023745087648471613, "phrase": "symbolic_regression"}, {"score": 0.0023390219342052623, "phrase": "factorial_function"}, {"score": 0.002246955931290095, "phrase": "higher_levels"}, {"score": 0.002224510044064184, "phrase": "population_diversity"}, {"score": 0.0021049977753042253, "phrase": "parent_selection_algorithm"}], "paper_keywords": ["Genetic programming", " lexicase selection", " parent selection", " PushGP", " tournament selection"], "paper_abstract": "We describe a broad class of problems, called \"uncompromising problems,\" which are characterized by the requirement that solutions must perform optimally on each of many test cases. Many of the problems that have long motivated genetic programming research, including the automation of many traditional programming tasks, are uncompromising. We describe and analyze the recently proposed \"lexicase\" parent selection algorithm and show that it can facilitate the solution of uncompromising problems by genetic programming. Unlike most traditional parent selection techniques, lexicase selection does not base selection on a fitness value that is aggregated over all test cases; rather, it considers test cases one at a time in random order. We present results comparing lexicase selection to more traditional parent selection methods, including standard tournament selection and implicit fitness sharing, on four uncompromising problems: 1) finding terms in finite algebras; 2) designing digital multipliers; 3) counting words in files; and 4) performing symbolic regression of the factorial function. We provide evidence that lexicase selection maintains higher levels of population diversity than other selection methods, which may partially explain its utility as a parent selection algorithm in the context of uncompromising problems.", "paper_title": "Solving Uncompromising Problems With Lexicase Selection", "paper_id": "WOS:000362358600002"}