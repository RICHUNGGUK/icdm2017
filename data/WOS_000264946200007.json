{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "nash_equilibria"}, {"score": 0.0444227308407221, "phrase": "bimatrix_game"}, {"score": 0.004735254735115024, "phrase": "bimatrix_games"}, {"score": 0.0043560464825349275, "phrase": "epsilon-nash_equilibrium"}, {"score": 0.004040688646993605, "phrase": "absolute_constant"}, {"score": 0.003875424718379985, "phrase": "simple_algorithm"}, {"score": 0.0035947360742084253, "phrase": "strongly_polynomial_time"}, {"score": 0.002594652434287807, "phrase": "expected_payoff"}, {"score": 0.00246765655376112, "phrase": "suggested_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bimatrix game", " Approximate Nash equilibrium"], "paper_abstract": "We focus on the problem of computing an epsilon-Nash equilibrium of a bimatrix game, when epsilon is an absolute constant. We present a simple algorithm for Computing a 3/4-Nash equilibrium for any bimatrix game in strongly polynomial time and we next show 4 how to extend this algorithm so as to obtain a (potentially stronger) parameterized approximation. Namely, we present an algorithm that computes a 2+lambda/4-Nash equilibrium, where lambda is the minimum, among all Nash equilibria, expected payoff of either player. The suggested algorithm runs in time polynomial in the number of strategies available to the players. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Polynomial algorithms for approximating Nash equilibria of bimatrix games", "paper_id": "WOS:000264946200007"}