{"auto_keywords": [{"score": 0.04881990207677593, "phrase": "non-deterministic_automata"}, {"score": 0.00481495049065317, "phrase": "weighted_automata"}, {"score": 0.004468684611798047, "phrase": "input_letter"}, {"score": 0.0036100762867678415, "phrase": "uniform_study"}, {"score": 0.003571751184289622, "phrase": "state-based_systems"}, {"score": 0.003010893527930816, "phrase": "weighted_bisimilarity"}, {"score": 0.0028543298631502107, "phrase": "vector_spaces"}, {"score": 0.002824005136794786, "phrase": "linear_maps"}, {"score": 0.0027643161113894018, "phrase": "language_equivalence"}, {"score": 0.0026914710445743693, "phrase": "second_characterisation"}, {"score": 0.002592693161475495, "phrase": "weighted_language_equivalence"}, {"score": 0.0024447258861321685, "phrase": "usual_partition_refinement_algorithm"}, {"score": 0.0023675986784123656, "phrase": "second_one"}, {"score": 0.00232995025271599, "phrase": "backward_version"}, {"score": 0.0022444104439449737, "phrase": "third_procedure"}, {"score": 0.002196944917134202, "phrase": "syntactic_representation"}, {"score": 0.0021735890994119757, "phrase": "rational_weighted_languages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "Weighted automata are a generalisation of non-deterministic automata where each transition, in addition to an input letter, has also a quantity expressing the weight (e.g. cost or probability) of its execution. As for non-deterministic automata, their behaviours can be expressed in terms of either (weighted) bisimilarity or (weighted) language equivalence. Coalgebras provide a categorical framework for the uniform study of state-based systems and their behaviours. In this work, we show that coalgebras can, suitably model weighted automata in two different ways: coalgebras on Set (the category of sets and functions) characterise weighted bisimilarity, while coalgebras on Vect (the category of vector spaces and linear maps) characterise weighted language equivalence. Relying on the second characterisation, we show three different procedures for computing weighted language equivalence. The first one consists in a generalisation of the usual partition refinement algorithm for ordinary automata. The second one is the backward version of the first one. The third procedure relies on a syntactic representation of rational weighted languages. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A coalgebraic perspective on linear weighted automata", "paper_id": "WOS:000300468000004"}