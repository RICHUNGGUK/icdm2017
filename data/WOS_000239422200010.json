{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "predicate-semantic_models"}, {"score": 0.04468012994164412, "phrase": "new_model"}, {"score": 0.041712156789843864, "phrase": "generic_composition"}, {"score": 0.004412000844879264, "phrase": "hierarchical_structure"}, {"score": 0.004042635935882651, "phrase": "existing_ones"}, {"score": 0.003674738405118697, "phrase": "necessary_restrictions"}, {"score": 0.0033402088717816416, "phrase": "inheritance_relation"}, {"score": 0.0030602966787192745, "phrase": "healthiness_conditions"}, {"score": 0.002468450551616404, "phrase": "program_combinators"}, {"score": 0.0023346234464901978, "phrase": "semantic_space"}, {"score": 0.0021049977753042253, "phrase": "predicate_calculus"}], "paper_keywords": [""], "paper_abstract": "This paper introduces techniques to organise predicate-semantic models in a hierarchical structure so that a new model can inherit the laws of the existing ones. Generic composition is used to simplify the manipulation of predicates. Necessary restrictions are imposed on the definition of each model so that the inheritance relation can, be established by checking a few conditions on the healthiness conditions and the commands. Much of the checking can be supported by laws of generic composition. The techniques also help simplify the proof of well-definedness of program combinators (i.e. their closure in the semantic space) so that we no longer need to prove it (in predicate calculus) for every new model.", "paper_title": "Hierarchical organisation of predicate-semantic models", "paper_id": "WOS:000239422200010"}