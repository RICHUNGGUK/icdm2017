{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_way"}, {"score": 0.035045849177745655, "phrase": "communication_rules"}, {"score": 0.03298553267565861, "phrase": "communication_steps"}, {"score": 0.0047273577269638725, "phrase": "p_systems"}, {"score": 0.004675565200598801, "phrase": "parallel_computing_devices"}, {"score": 0.004624337472244542, "phrase": "explicit_way"}, {"score": 0.004296809240805996, "phrase": "distributed_architecture"}, {"score": 0.004234129588974058, "phrase": "cell-like_p_systems"}, {"score": 0.004096409451697279, "phrase": "tissue-like_p_systems"}, {"score": 0.0040366412779632085, "phrase": "specified_rules"}, {"score": 0.003992385826251404, "phrase": "antiport_type"}, {"score": 0.0036822794196763506, "phrase": "respective_devices"}, {"score": 0.003459191419478298, "phrase": "communication_complexity"}, {"score": 0.00328562353036406, "phrase": "dp_system"}, {"score": 0.002693708217226793, "phrase": "dp_automata"}, {"score": 0.0026641365405034355, "phrase": "regular_language"}, {"score": 0.0024842242921857705, "phrase": "constant_number"}, {"score": 0.0023594603878391417, "phrase": "chomsky_hierarchy"}, {"score": 0.002200077887697072, "phrase": "faster_way"}, {"score": 0.002175913488493802, "phrase": "dp_automaton"}, {"score": 0.0021441057555396013, "phrase": "single_p_automaton"}], "paper_keywords": ["Membrane computing", " P system", " distributed computing", " communication complexity", " Chomsky hierarchy"], "paper_abstract": "Although P systems are distributed parallel computing devices, no explicit way of handling the input in a distributed way in this framework was considered so far. This note proposes a distributed architecture (based on cell-like P systems, with their skin membranes communicating through channels as in tissue-like P systems, according to specified rules of the antiport type), where parts of a problem can be introduced as inputs in various components and then processed in parallel. The respective devices are called dP systems, with the case of accepting strings called dP automata. The communication complexity can be evaluated in various ways: statically (counting the communication rules in a dP system which solves a given problem), or dynamically (counting the number of communication steps, of communication rules used in a computation, or the number of objects communicated). For each measure, two notions of \"parallelizability\" can be introduced. Besides (informal) definitions, some illustrations of these idea are provided for dP automata: each regular language is \"weakly parallelizable\" (i.e., it can be recognized in this framework, using a constant number of communication steps), and there are languages of various types with respect to Chomsky hierarchy which are \"efficiently parallelizable\" (they are parallelizable and, moreover, are accepted in a faster way by a dP automaton than by a single P automaton). Several suggestions for further research are made.", "paper_title": "Solving Problems in a Distributed Way in Membrane Computing: dP Systems", "paper_id": "WOS:000275741400010"}