{"auto_keywords": [{"score": 0.03784144720028532, "phrase": "single-precision_multiplications"}, {"score": 0.03163537021432405, "phrase": "wu's_algorithm"}, {"score": 0.00481495049065317, "phrase": "efficient_common-multiplicand-multiplication_method"}, {"score": 0.004676630864645001, "phrase": "montgomery"}, {"score": 0.004202427956470779, "phrase": "wu"}, {"score": 0.004081385289516914, "phrase": "fast_modular_exponentiation_algorithm"}, {"score": 0.0038876302202924644, "phrase": "proposed_algorithm"}, {"score": 0.003459191419478298, "phrase": "dusse-kaliski's_montgomery_algorithm"}, {"score": 0.003392507399258166, "phrase": "ha-moon's_montgomery_algorithm"}, {"score": 0.0025331002386232014, "phrase": "dusse-kaliski's_version"}, {"score": 0.0024842242921857705, "phrase": "ha-moon's_version"}, {"score": 0.0023431692392929353, "phrase": "computational_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Modular arithmetic", " Modular exponentiation", " Single-precision multiplication", " Computational efficiency", " Public-key cryptography"], "paper_abstract": "In 2009, Wu proposed a fast modular exponentiation algorithm and claimed that the proposed algorithm on average saved about 38.9% and 26.68% of single-precision multiplications as compared to Dusse-Kaliski's Montgomery algorithm and Ha-Moon's Montgomery algorithm, respectively. However, in this comment, we demonstrate that Wu's algorithm on average reduces the number of single-precision multiplications by at most 22.43% and 6.91%, when respectively compared with Dusse-Kaliski's version and Ha-Moon's version. That is, the computational efficiency of Wu's algorithm is obviously overestimated. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A comment on \"An efficient common-multiplicand-multiplication method to the Montgomery algorithm for speeding up exponentiation\"", "paper_id": "WOS:000312915400021"}