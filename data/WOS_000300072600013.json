{"auto_keywords": [{"score": 0.04901380668219845, "phrase": "graphs"}, {"score": 0.004817267947803103, "phrase": "vertex-cut"}, {"score": 0.004738177185041523, "phrase": "structural_balance_vertices"}, {"score": 0.00461786618294789, "phrase": "large_spectrum"}, {"score": 0.004500596283281564, "phrase": "social_connections"}, {"score": 0.004008516312861836, "phrase": "crucial_tasks"}, {"score": 0.003957261767109878, "phrase": "graph_simplification"}, {"score": 0.003869132124880576, "phrase": "smaller_parts"}, {"score": 0.003782957707237928, "phrase": "whole_graph"}, {"score": 0.0036513878928387047, "phrase": "common_approaches"}, {"score": 0.003369076363771074, "phrase": "target_number"}, {"score": 0.003347454359929038, "phrase": "disconnected_components"}, {"score": 0.0032518541963473405, "phrase": "vertex_disjoint"}, {"score": 0.003199923972285777, "phrase": "data_vertices"}, {"score": 0.0031286075376993103, "phrase": "resulting_data_partitions"}, {"score": 0.0030885689801303123, "phrase": "vertex-cut_based_approaches"}, {"score": 0.002942921364801519, "phrase": "relevant_partitions"}, {"score": 0.002777156434571452, "phrase": "resulting_partitions"}, {"score": 0.002570531747243578, "phrase": "sbv-cut_algorithm"}, {"score": 0.002521317643120762, "phrase": "balance_vertices"}, {"score": 0.002433519998239738, "phrase": "directed_graph"}, {"score": 0.0023487724551034227, "phrase": "recursive_application"}, {"score": 0.0023336832083729973, "phrase": "structurally-balanced_cuts"}, {"score": 0.0023037942361136205, "phrase": "hierarchical_partitioning"}, {"score": 0.0022451572368358476, "phrase": "sbv-cut"}, {"score": 0.0022307321581833918, "phrase": "better_vertex-cut_based_expansion"}, {"score": 0.00214610313234565, "phrase": "constraint-minimization_based_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Clustering", " Mining methods and algorithms", " Graph partitioning", " Vertex-cut"], "paper_abstract": "Graphs are used for modeling a large spectrum of data from the web, to social connections between individuals, to concept maps and ontologies. As the number and complexities of graph based applications increase, rendering these graphs more compact, easier to understand, and navigate through are becoming crucial tasks. One approach to graph simplification is to partition the graph into smaller parts, so that instead of the whole graph, the partitions and their inter-connections need to be considered. Common approaches to graph partitioning involve identifying sets of edges (or edge-cuts) or vertices (or vertex-cuts) whose removal partitions the graph into the target number of disconnected components. While edge-cuts result in partitions that are vertex disjoint, in vertex-cuts the data vertices can serve as bridges between the resulting data partitions; consequently, vertex-cut based approaches are especially suitable when the vertices on the vertex-cut will be replicated on all relevant partitions. A significant challenge in vertex-cut based partitioning, however, is ensuring the balance of the resulting partitions while simultaneously minimizing the number of vertices that are cut (and thus replicated). In this paper, we propose a SBV-Cut algorithm which identifies a set of balance vertices that can be used to effectively and efficiently bisect a directed graph. The graph can then be further partitioned by a recursive application of structurally-balanced cuts to obtain a hierarchical partitioning of the graph. Experiments show that SBV-Cut provides better vertex-cut based expansion and modularity scores than its competitors and works several orders more efficiently than constraint-minimization based approaches. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "SBV-Cut: Vertex-cut based graph partitioning using structural balance vertices", "paper_id": "WOS:000300072600013"}