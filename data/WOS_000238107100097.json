{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mathematical_web_services"}, {"score": 0.004730158389701481, "phrase": "service_discovery"}, {"score": 0.004524624065803229, "phrase": "distributed_environment"}, {"score": 0.00436661740263741, "phrase": "active_research_issue"}, {"score": 0.0038556354709511818, "phrase": "service_descriptions"}, {"score": 0.0029789104204803137, "phrase": "mathematical_services"}, {"score": 0.0027989800906333784, "phrase": "critical_role"}, {"score": 0.0024490834773668153, "phrase": "operimath_descriptions"}, {"score": 0.0022604585778195152, "phrase": "matchmaking_architecture"}, {"score": 0.0021620042653528846, "phrase": "match_plug-ins"}], "paper_keywords": [""], "paper_abstract": "Service discovery and matchmaking in a distributed environment has been an active research issue since at least the mid 1990s. Previous work on matchmaking has typically presented the problem and service descriptions as free or structured (marked-up) text, so that keyword searches, tree-matching or simple constraint solving are sufficient to identify matches. We discuss the problem of matchmaking for mathematical services, where the semantics play a critical role in determining the applicability or otherwise of a service and for which we use OperiMath descriptions of pre and post-conditions. We describe a matchmaking architecture supporting the use of match plug-ins and describe four kinds of plug-in that we have developed to date.", "paper_title": "Matchmaking of mathematical web services", "paper_id": "WOS:000238107100097"}