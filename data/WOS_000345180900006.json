{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "flexible_programming_environment"}, {"score": 0.004544127927346964, "phrase": "regular_programming_languages"}, {"score": 0.004449452743965974, "phrase": "structured_data_types"}, {"score": 0.004155113657645735, "phrase": "wrong_way"}, {"score": 0.004068510313497539, "phrase": "corrupt_or_redundant_data"}, {"score": 0.0038597866217852353, "phrase": "relational_model"}, {"score": 0.0037397086147485897, "phrase": "subsequent_embedding"}, {"score": 0.003529149828147388, "phrase": "model-based_spreadsheet_programming_environment"}, {"score": 0.003226744277130179, "phrase": "column_arrangement"}, {"score": 0.0031761255583359726, "phrase": "extracted_model"}, {"score": 0.003061072337623773, "phrase": "visual_elements"}, {"score": 0.002813457986293993, "phrase": "correct_way"}, {"score": 0.0027547408718334603, "phrase": "preliminary_experimental_results"}, {"score": 0.0025994945418484935, "phrase": "euses_spreadsheet_corpus"}, {"score": 0.0025052769325080255, "phrase": "first_systematic_empirical_study"}, {"score": 0.002326938965568362, "phrase": "spreadsheet_end_users"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Spreadsheets", " Model-driven engineering", " Model-driven spreadsheets", " Empirical validation"], "paper_abstract": "Spreadsheets can be seen as a flexible programming environment. However, they lack some of the concepts of regular programming languages, such as structured data types. This can lead the user to edit the spreadsheet in a wrong way and perhaps cause corrupt or redundant data. We devised a method for extraction of a relational model from a spreadsheet and the subsequent embedding of the model back into the spreadsheet to create a model-based spreadsheet programming environment. The extraction algorithm is specific for spreadsheets since it considers particularities such as layout and column arrangement. The extracted model is used to generate formulas and visual elements that are then embedded in the spreadsheet helping the user to edit data in a correct way. We present preliminary experimental results from applying our approach to a sample of spreadsheets from the EUSES Spreadsheet Corpus. Finally, we conduct the first systematic empirical study to assess the effectiveness and efficiency of this approach. A set of spreadsheet end users worked with two different model-based spreadsheets, and we present and analyze here the results achieved. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Model-based programming environments for spreadsheets", "paper_id": "WOS:000345180900006"}