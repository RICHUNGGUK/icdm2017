{"auto_keywords": [{"score": 0.03843856552198327, "phrase": "first_work"}, {"score": 0.00481495049065317, "phrase": "free-assignment_routing"}, {"score": 0.004776669953449352, "phrase": "flip-chip_designs"}, {"score": 0.004719816332271661, "phrase": "flip-chip_packaging"}, {"score": 0.004645057834614705, "phrase": "modern_ic_designs"}, {"score": 0.004608121749000898, "phrase": "higher_integration_density"}, {"score": 0.004445494322321316, "phrase": "routing_obstacles"}, {"score": 0.0044101380740283825, "phrase": "modern_flip-chip_designs"}, {"score": 0.004237512575106522, "phrase": "signal_integrity_protection"}, {"score": 0.003850173884725567, "phrase": "existing_published_works"}, {"score": 0.0035973486787314883, "phrase": "free-assignment_flip-chip_routing_problem"}, {"score": 0.003512123587588346, "phrase": "free-assignment_routing_problem"}, {"score": 0.0034152340901585374, "phrase": "network-flow_formulation"}, {"score": 0.0033077610063168093, "phrase": "existing_network-flow_model"}, {"score": 0.0032036590920314725, "phrase": "local_routing_region"}, {"score": 0.0028302049070944944, "phrase": "new_model"}, {"score": 0.0027964537059186893, "phrase": "two-stage_approach"}, {"score": 0.002730150696072947, "phrase": "detailed_routing"}, {"score": 0.0026760974046034854, "phrase": "global_routing"}, {"score": 0.002644179117033107, "phrase": "routing_topology"}, {"score": 0.002612640527241776, "phrase": "minimum-cost_maximum-flow_algorithm"}, {"score": 0.002530359917257626, "phrase": "precise_wire_positions"}, {"score": 0.0025101968585850474, "phrase": "dynamic_programming"}, {"score": 0.0024117603727471675, "phrase": "problem_size"}, {"score": 0.002363995836370621, "phrase": "state-of-the-art_flow_model"}, {"score": 0.0021647968783414504, "phrase": "previous_work"}, {"score": 0.0021049977753042253, "phrase": "benchmark_circuit"}], "paper_keywords": ["Dynamic programming", " flip chip", " layout", " network flow", " physical design", " routing"], "paper_abstract": "The flip-chip packaging is introduced for modern IC designs with higher integration density and larger I/O counts. It is necessary to consider routing obstacles for modern flip-chip designs, where the obstacles could be regions blocked for signal integrity protection (especially for analog/mixed-signal modules), prerouted or power/ground nets, and even for through-silicon vias for 3-D IC designs. However, no existing published works consider obstacles. To remedy this insufficiency, this paper presents the first work to solve the free-assignment flip-chip routing problem considering obstacles. For the free-assignment routing problem, most existing works apply the network-flow formulation. Nevertheless, we observe that no existing network-flow model can exactly capture the routability of a local routing region (tile) in presence of obstacles. This paper presents the first work that can precisely model the routability of a tile, even with obstacles. Based on this new model, a two-stage approach of global routing followed by detailed routing is proposed. The global routing computes a routing topology by the minimum-cost maximum-flow algorithm, and the detailed routing determines the precise wire positions. Dynamic programming is applied to further merge tiles to reduce the problem size. Compared to a state-of-the-art flow model with obstacle handling extensions, experimental results show that our algorithm can achieve 100% routability for all circuits while the extensions of the previous work cannot complete routing for any benchmark circuit with obstacles.", "paper_title": "Obstacle-Avoiding Free-Assignment Routing for Flip-Chip Designs", "paper_id": "WOS:000330222400005"}