{"auto_keywords": [{"score": 0.04675404263653011, "phrase": "executable_code"}, {"score": 0.04215833196561754, "phrase": "antianalysis_techniques"}, {"score": 0.00481495049065317, "phrase": "android_applications"}, {"score": 0.004746263721902201, "phrase": "malware_analysis"}, {"score": 0.004354149483556514, "phrase": "malicious_application_analysis"}, {"score": 0.0042920078348374375, "phrase": "android_platform"}, {"score": 0.004230749292148046, "phrase": "malicious_applications"}, {"score": 0.003909065355459264, "phrase": "sophisticated_malicious_applications"}, {"score": 0.0035858673522839407, "phrase": "existing_analysis_tools"}, {"score": 0.0034841647157189985, "phrase": "serious_threat"}, {"score": 0.003361069456060196, "phrase": "embedded_devices"}, {"score": 0.003038983069081333, "phrase": "main_code"}, {"score": 0.00284837132359445, "phrase": "dalvik_virtual_machine"}, {"score": 0.0028076977132136796, "phrase": "android"}, {"score": 0.0023791769068748194, "phrase": "existing_analysis_techniques"}, {"score": 0.0023451553255837317, "phrase": "android_application"}, {"score": 0.002197966048531954, "phrase": "proposed_method"}, {"score": 0.0021509807762081145, "phrase": "sample_malicious_application"}, {"score": 0.0021049977753042253, "phrase": "strong_antianalysis_techniques"}], "paper_keywords": [""], "paper_abstract": "We suggest an idea to dump executable code from memory for malicious application analysis on Android platform. Malicious applications are getting enhanced in terms of antianalysis techniques. Recently, sophisticated malicious applications have been found, which are not decompiled and debugged by existing analysis tools. It becomes serious threat to services related to embedded devices based on Android. Thus, we have implemented the idea to obtain main code from the memory by modifying a part of Dalvik Virtual Machine of Android. As a result, we have confirmed that the executable code is completely obtainable. In this paper, we introduce the existing analysis techniques for Android application, and antianalysis techniques. We then describe the proposed method with a sample malicious application which has strong antianalysis techniques.", "paper_title": "DWroidDump: Executable Code Extraction from Android Applications for Malware Analysis", "paper_id": "WOS:000362740000001"}