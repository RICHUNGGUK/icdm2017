{"auto_keywords": [{"score": 0.04397488238643157, "phrase": "tedilog"}, {"score": 0.004565876339189493, "phrase": "declarative_propositional_temporal_logic_programming_language"}, {"score": 0.004329630571352367, "phrase": "temporal_and_disjunctive_paradigms"}, {"score": 0.003986103192038901, "phrase": "well-known_propositional_linear-time_temporal_logic"}, {"score": 0.0036697319652557363, "phrase": "clause_heads"}, {"score": 0.003584025547693836, "phrase": "clause_bodies"}, {"score": 0.0033584796908285894, "phrase": "first_declarative_temporal_logic_programming_language"}, {"score": 0.0031285355811105945, "phrase": "logical_foundations"}, {"score": 0.0030195184114140063, "phrase": "operational_and_logical_semantics"}, {"score": 0.0028630535573013686, "phrase": "operational_semantics"}, {"score": 0.0027146742941153443, "phrase": "invariant-free_temporal_resolution_procedure"}, {"score": 0.00268275783745316, "phrase": "pltl"}, {"score": 0.0026045914281028473, "phrase": "gaintzarain_et_al"}, {"score": 0.002455009746748708, "phrase": "fixpoint_semantics"}, {"score": 0.0022201273900989416, "phrase": "logical_semantics"}, {"score": 0.002155412043665635, "phrase": "illustrative_examples"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Disjunctive logic programming", " invariant-free clausal temporal resolution", " linear-time temporal logic", " operational and logical semantics", " refutation procedure", " temporal logic programming"], "paper_abstract": "In this article, we present a declarative propositional temporal logic programming language called TeDiLog that is a combination of the temporal and disjunctive paradigms in logic programming. TeDiLog is, syntactically, a sublanguage of the well-known Propositional Linear-time Temporal Logic (PLTL). TeDiLog allows both eventualities and always-formulas to occur in clause heads and also in clause bodies. To the best of our knowledge, TeDiLog is the first declarative temporal logic programming language that achieves this high degree of expressiveness. We establish the logical foundations of our proposal by formally defining operational and logical semantics for TeDiLog and by proving their equivalence. The operational semantics of TeDiLog relies on a restriction of the invariant-free temporal resolution procedure for PLTL that was introduced by Gaintzarain et al. in [2013]. We define a fixpoint semantics that captures the reverse (bottom-up) operational mechanism and prove its equivalence with the logical semantics. We also provide illustrative examples and comparison with other proposals.", "paper_title": "Logical Foundations for More Expressive Declarative Temporal Logic Programming Languages", "paper_id": "WOS:000329129900004"}