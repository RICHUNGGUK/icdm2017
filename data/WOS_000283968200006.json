{"auto_keywords": [{"score": 0.04902663615016438, "phrase": "transaction_processing"}, {"score": 0.04502515223200544, "phrase": "response_time"}, {"score": 0.038622439277935766, "phrase": "quality_metrics"}, {"score": 0.03113214525778575, "phrase": "factor_analysis"}, {"score": 0.00481495049065317, "phrase": "interacting_runtime_qualities"}, {"score": 0.004779406424192843, "phrase": "software_architectures"}, {"score": 0.004674333455266527, "phrase": "client-server_architectures"}, {"score": 0.004454497011118188, "phrase": "non-functional_behavior"}, {"score": 0.0044052452943364314, "phrase": "software_system"}, {"score": 0.0043404186974790706, "phrase": "quality_requirement"}, {"score": 0.00407533728096378, "phrase": "architecture_tradeoff_analysis_method"}, {"score": 0.004000486064911652, "phrase": "qualitative_analysis_heuristics"}, {"score": 0.0038263829059336564, "phrase": "quantitative_analysis"}, {"score": 0.003784049616066444, "phrase": "single_metric"}, {"score": 0.0034875380341306468, "phrase": "multiple_quality_metrics"}, {"score": 0.003385555209074879, "phrase": "quantitative_method"}, {"score": 0.0032987614613108345, "phrase": "design_change"}, {"score": 0.0032743731084995515, "phrase": "multiple_metrics"}, {"score": 0.0031904205547902695, "phrase": "architecture_design"}, {"score": 0.0030288982511487835, "phrase": "simulation_model"}, {"score": 0.002984264956378651, "phrase": "client_server_architecture"}, {"score": 0.0028121943702224326, "phrase": "architecture-specific_correlations"}, {"score": 0.002770745509774383, "phrase": "separate_analyses"}, {"score": 0.002534539169474629, "phrase": "quantified_metrics"}, {"score": 0.0024603551979225195, "phrase": "examined_transaction"}, {"score": 0.0024512358145634358, "phrase": "processing_architecture"}, {"score": 0.002379484250348599, "phrase": "strongly_correlated_quality_metrics"}, {"score": 0.002335707508067455, "phrase": "architecture_characteristics"}, {"score": 0.002309828105129336, "phrase": "latent_quality_features"}, {"score": 0.002267329954548889, "phrase": "proposed_method"}, {"score": 0.002242206465278159, "phrase": "systematic_way"}, {"score": 0.0021684903968454267, "phrase": "implied_tradeoffs"}, {"score": 0.002152440300818582, "phrase": "specific_architecture_characteristics"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software architecture validation", " Software quality", " Design tradeoffs", " Transaction processing", " Simulation"], "paper_abstract": "Context: Architecture is fundamental for fulfilling requirements related to the non-functional behavior of a software system such as the quality requirement that response time does not degrade to a point where it is noticeable. Approaches like the Architecture Tradeoff Analysis Method (ATAM) combine qualitative analysis heuristics (e.g. scenarios) for one or more quality metrics with quantitative analyses. A quantitative analysis evaluates a single metric such as response time. However, since quality metrics interact with each other, a change in the architecture can affect unpredictably multiple quality metrics. Objective: This paper introduces a quantitative method that determines the impact of a design change on multiple metrics, thus reducing the risks in architecture design. As a proof of concept, the method is applied on a simulation model of transaction processing in client server architecture. Method: Factor analysis is used to unveil latent (i.e. not directly measurable) quality features represented by new variables that reflect architecture-specific correlations between metrics. Separate Analyses of Variance (ANOVA) are then applied to these variables, for interpreting the tradeoffs detected by factor analysis in terms of the quantified metrics. Results: The results for the examined transaction processing architecture show three latent quality features, the corresponding groups of strongly correlated quality metrics and the impact of architecture characteristics on the latent quality features. Conclusion: The proposed method is a systematic way for relating the variability of quality metrics and the implied tradeoffs to specific architecture characteristics. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Quantification of interacting runtime qualities in software architectures: Insights from transaction processing in client-server architectures", "paper_id": "WOS:000283968200006"}