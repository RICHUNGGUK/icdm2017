{"auto_keywords": [{"score": 0.049479057100967845, "phrase": "interlocking_logic"}, {"score": 0.00744661795640404, "phrase": "relay_logic"}, {"score": 0.00481495049065317, "phrase": "automatic_development"}, {"score": 0.004578030096508602, "phrase": "computer-based_interlocking_system"}, {"score": 0.004520650478845699, "phrase": "cis"}, {"score": 0.0043527164193299574, "phrase": "safety-critical_system"}, {"score": 0.004217537792708984, "phrase": "signalling_industry"}, {"score": 0.003467940281748612, "phrase": "low_efficiency"}, {"score": 0.0034244153725855, "phrase": "high_cost"}, {"score": 0.003297080148944292, "phrase": "new_logic_design_approach"}, {"score": 0.0032148229832850215, "phrase": "new_approach"}, {"score": 0.0031544754107802413, "phrase": "component-based_model"}, {"score": 0.002980124909321296, "phrase": "station_layout"}, {"score": 0.0027451110240633144, "phrase": "statecharts_description"}, {"score": 0.002609770322855842, "phrase": "entire_procedure"}, {"score": 0.002576988153314685, "phrase": "interlocking_logic_development"}, {"score": 0.002449915958738505, "phrase": "software_toolkit"}, {"score": 0.002228263890334039, "phrase": "formal_verification"}, {"score": 0.0021049977753042253, "phrase": "generated_logic_correction"}], "paper_keywords": ["interlocking", " component-based model", " statechart", " formal verification", " high-speed railway", " railway signalling systems", " railway integrated information systems"], "paper_abstract": "A computer-based interlocking system (CIS) is a kind of safety-critical system widely applied in the signalling industry today. The relay logic is always used to describe the interlocking logic in CIS. Normally, all of the interlocking logic is designed by experienced signalling engineers manually, which leads to low efficiency and high cost. This article proposes a new logic design approach. In this new approach, a component-based model is used to represent the topology of the station layout, and statecharts are used to describe the interlocking logic. Then the statecharts description is transformed to the relay logic. The entire procedure of interlocking logic development can be finished automatically, and a software toolkit is implemented according to this approach. The introduction of statecharts also makes the formal verification of interlocking logic possible, which can guarantee the generated logic correction.", "paper_title": "An approach to automatic development of interlocking logic based on Statechart", "paper_id": "WOS:000297244300001"}