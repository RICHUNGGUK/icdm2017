{"auto_keywords": [{"score": 0.04961597900198376, "phrase": "nuca"}, {"score": 0.015719714774698124, "phrase": "faulty_banks"}, {"score": 0.01542040793250996, "phrase": "noc"}, {"score": 0.015053998925444527, "phrase": "many-core_soc"}, {"score": 0.007400629488444567, "phrase": "average_improvement"}, {"score": 0.004676575291629554, "phrase": "remapping_mechanisms"}, {"score": 0.004542158659382197, "phrase": "future_trend_technology"}, {"score": 0.004454691230204595, "phrase": "process_yield"}, {"score": 0.0043477114072437316, "phrase": "nonuniform_cache_architecture"}, {"score": 0.0039447744176901054, "phrase": "cache_memory"}, {"score": 0.0037942165191367366, "phrase": "traffic_loads"}, {"score": 0.0036671822784770463, "phrase": "fault-tolerant_mechanism"}, {"score": 0.003409057326528229, "phrase": "memory_banks"}, {"score": 0.00323134923196813, "phrase": "specific_router"}, {"score": 0.0031845067058084583, "phrase": "static_and_dynamic_cache"}, {"score": 0.0030778231027679464, "phrase": "nuca."}, {"score": 0.0029458777184930896, "phrase": "static_remapping_policy"}, {"score": 0.002861062731782219, "phrase": "suitable_neighbor_cache_bank"}, {"score": 0.0028058765785670546, "phrase": "collected_remapping_cost"}, {"score": 0.0027383842769094354, "phrase": "cache_access"}, {"score": 0.0026986685585382347, "phrase": "cache_status"}, {"score": 0.002672511078070529, "phrase": "traffic_status"}, {"score": 0.0025578967205807843, "phrase": "dynamic_remapping_policy"}, {"score": 0.00247215300812495, "phrase": "suitable_cache_bank"}, {"score": 0.002389276641014013, "phrase": "real_loading_status"}, {"score": 0.002366110899738696, "phrase": "neighbor_nodes"}, {"score": 0.002331781764406665, "phrase": "faulty_bank"}, {"score": 0.002297949552105756, "phrase": "experimental_results"}, {"score": 0.0022209028188370098, "phrase": "srp"}, {"score": 0.002104999813012223, "phrase": "drp"}], "paper_keywords": ["Many-core SoC", " Nonuniform cache architecture", " Network-on-chip", " Fault tolerance"], "paper_abstract": "The many-core SoC is a future trend technology, and the process yield will face many unpredictable challenges. Nonuniform cache architecture (NUCA) can improve the performance of many-core SoC for embedded systems. It embeds a NoC into the cache memory to enhance the data access by distributing traffic loads to several banks in parallel. Providing fault-tolerant mechanism in NUCA is very important because the chip can still work efficiently when some memory banks are unusable. In this paper, we design a specific router working with static and dynamic cache remapping policies to support faulty banks in NUCA. When a L2 cache bank in NUCA is unusable, static remapping policy (SRP) selects a suitable neighbor cache bank according to the collected remapping cost to assist with the cache access by considering cache status and traffic status of the router. We also propose a dynamic remapping policy (DRP) to select the suitable cache bank dynamically at runtime to fit the real loading status of neighbor nodes around the faulty bank. The experimental results show that the average improvement of the SRP is approximated to 26 %, and the average improvement of the DRP is approximated to 28 %.", "paper_title": "Supporting faulty banks in NUCA by NoC assisted remapping mechanisms", "paper_id": "WOS:000330997300001"}