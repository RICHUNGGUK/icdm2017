{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "access_control_policies"}, {"score": 0.04876404494641554, "phrase": "requirement_engineering"}, {"score": 0.029111190601923756, "phrase": "authuml"}, {"score": 0.004726382602809228, "phrase": "duty_principle"}, {"score": 0.004554082077300675, "phrase": "software_requirements"}, {"score": 0.0044289730051264116, "phrase": "early_development_life_cycle"}, {"score": 0.004208427318712072, "phrase": "unauthorized_subject"}, {"score": 0.003747020072136732, "phrase": "logical-based_framework"}, {"score": 0.003678023470672862, "phrase": "authorization_requirements"}, {"score": 0.0034785371344994197, "phrase": "access_requirements"}, {"score": 0.0031697368057340895, "phrase": "authuml_framework"}, {"score": 0.0027062100658653485, "phrase": "necessary_phase"}, {"score": 0.0025593037998442435, "phrase": "sod"}, {"score": 0.002331909406363425, "phrase": "new_policies"}, {"score": 0.0022258906408344973, "phrase": "different_phases"}, {"score": 0.002195033004022173, "phrase": "software_development_process"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["access control policies", " security engineering", " use cases", " semi-formal methods", " Separation of Duty"], "paper_abstract": "Validating the compliance of software requirements with the access control policies during the early development life cycle improves the security of the software. It prevents authorizing unauthorized subject during the specification of requirements and analysis before proceeding to other phases where the cost of fixing defects is augmented. This paper provides a logical-based framework that analyzes the authorization requirements specified in the Unified Modeling Language (UML). It ensures that the access requirements are consistent, complete and conflict-ftee. The framework proposed in this paper is an extension to AuthUML framework. We refine AuthUML and extend it by expanding its analysis to validate the enforcement of the Separation of Duty (SoD) during the requirement engineering. We enhance and extend AuthUML with the necessary phase, predicates and rules. The paper shows the various types of SoD and how each type can be validated. The extension shows the flexibility and scalability of AuthUML to validate new policies. Also, the extension makes AuthUML spans to different phases of the software development process that widen the application of AuthUML. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Validating the enforcement of access control policies and separation of duty principle in requirement engineering", "paper_id": "WOS:000242926300005"}