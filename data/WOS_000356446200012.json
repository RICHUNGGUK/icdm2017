{"auto_keywords": [{"score": 0.04897771659830286, "phrase": "wpa"}, {"score": 0.0422401343060347, "phrase": "ap"}, {"score": 0.004632597963417253, "phrase": "serious_improvements"}, {"score": 0.00406250784433007, "phrase": "access_point"}, {"score": 0.00393886140366453, "phrase": "wpa_personal_mode"}, {"score": 0.003534889186471058, "phrase": "four-way_handshake"}, {"score": 0.0030401074516310184, "phrase": "set_identifiers"}, {"score": 0.0027386335451725762, "phrase": "wireless_network"}, {"score": 0.0027175263159330523, "phrase": "security_purposes"}, {"score": 0.0026347074232350503, "phrase": "field_programmable_gate_array"}, {"score": 0.002373339527491525, "phrase": "special_emphasis"}, {"score": 0.002292097733181405, "phrase": "pmk_generation"}, {"score": 0.0021049977753042253, "phrase": "unoptimized_implementation"}], "paper_keywords": ["Reconfigurable computing", " FPGA", " SHA-1", " convey", " Wi-Fi security", " dictionary attack", " WPA/WPA2 authentication"], "paper_abstract": "Wi-Fi protected access (WPA) has provided serious improvements over the now deprecated wired equivalent privacy (WEP) protocol. WPA, however, still has some flaws that allow an attacker to obtain the passphrase. One of these flaws is exposed when the access point (AP) is operating in the WPA personal mode. This is the most common mode, as it is the quickest and easiest to configure. This vulnerability requires the attacker to capture the trafic from the four-way handshake between the AP and client, and then have enough compute time to reverse the passphrase. Increasing the rate at which passphrases can be reversed reduces the amount of time required to construct a repository of service set identifiers (SSIDs) and passphrases, which can increase the chances an attack is successful, or, alternatively, reduce the difficulty of auditing a wireless network for security purposes. This work focuses on creating an field programmable gate array (FPGA)-based architecture to accelerate the generation of a WPA/WPA2 pairwise master key (PMK) lookup table (LUT) for the recovery of the passphrase, with special emphasis on the secure hash algorithm-1 (SHA-1) implementation. PMK generation relies heavily on SHA-1 hashing and, as this work shows, an optimized SHA-1 implementation can achieve up to a 40 x speedup over an unoptimized implementation when generating PMKs.", "paper_title": "An FPGA Architecture for the Recovery of WPA/WPA2 Keys", "paper_id": "WOS:000356446200012"}