{"auto_keywords": [{"score": 0.048734215142491696, "phrase": "trustworthiness_approach"}, {"score": 0.04760926356472157, "phrase": "expected_output"}, {"score": 0.035063062788852184, "phrase": "network_data"}, {"score": 0.026043128888567694, "phrase": "mobile_stations"}, {"score": 0.00481495049065317, "phrase": "embedded_program"}, {"score": 0.004775918707955445, "phrase": "untestable_mobile_environment"}, {"score": 0.00462291551375938, "phrase": "actual_output"}, {"score": 0.004511373893354558, "phrase": "controlled_input"}, {"score": 0.004456611869693865, "phrase": "fundamental_principle"}, {"score": 0.004420472010542188, "phrase": "program_correctness_testing"}, {"score": 0.003960210592458847, "phrase": "test_oracle"}, {"score": 0.003419943984098415, "phrase": "normal_program_testing"}, {"score": 0.0031780228058373235, "phrase": "program_output"}, {"score": 0.0031012349116334606, "phrase": "intrinsic_properties"}, {"score": 0.00278930116312699, "phrase": "planned_purposes"}, {"score": 0.002539550974361945, "phrase": "different_programs"}, {"score": 0.0024281181691350085, "phrase": "different_models"}, {"score": 0.002398583143633569, "phrase": "different_implementations"}, {"score": 0.0023310544011985253, "phrase": "trustworthiness_assessment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["untestable environment", " mobile embedded software testing"], "paper_abstract": "Comparing actual output with the expected output of some controlled input is a fundamental principle of program correctness testing. However, in some situations, the input is uncontrollable or even undetectable during testing, it is impossible to decide the expected output or the test oracle. Or in some situations, the output may be indeterministic or unpredictable, hence it is impossible to compare the output with the expected one. We encountered these problems and could not conduct normal program testing when we developed programs to extract network data from various mobile stations in the Mobile Location Estimation System project. Instead we analyzed the program output and challenge it against the intrinsic properties, the environment, the program itself, and the application results to find evidence that the output is suitable to be used for the planned purposes. In short, we accessed the trustworthiness of the programs. In the development of our mobile software, it was common that different programs of the same specification had to be developed for mobile stations of different models. These different implementations provided another source of reference for trustworthiness assessment. Our experience of applying the trustworthiness approach to developing software for extracting network data from mobile stations is reported in this paper. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Accessing embedded program in untestable mobile environment: Experience of a trustworthiness approach", "paper_id": "WOS:000238790300008"}