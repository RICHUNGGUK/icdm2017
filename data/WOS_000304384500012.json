{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "extra-high-order_rubik's_cube_problem"}, {"score": 0.0046544807197808095, "phrase": "monte_carlo_algorithm"}, {"score": 0.004461359547152617, "phrase": "rubik's_cube_problem"}, {"score": 0.004404994123834589, "phrase": "extra-high_order"}, {"score": 0.004276216827737399, "phrase": "appropriate_energy_function"}, {"score": 0.004186534737631288, "phrase": "neighborhood_search_algorithm"}, {"score": 0.003797530813314321, "phrase": "local_energy_minima"}, {"score": 0.0037495207047193034, "phrase": "simple_but_effective_way"}, {"score": 0.003670843919846253, "phrase": "static_simulated_annealing_method"}, {"score": 0.0036090884921108086, "phrase": "temperature_parameter"}, {"score": 0.003578600071301459, "phrase": "boltzmann_function"}, {"score": 0.003503497128638099, "phrase": "dynamic_procedure"}, {"score": 0.003459191419478298, "phrase": "energy_function_expression"}, {"score": 0.0033295966773779174, "phrase": "low-order_cube"}, {"score": 0.0032321559007422087, "phrase": "high_efficient_parallel_programming"}, {"score": 0.003204841443605308, "phrase": "high-order_cubes"}, {"score": 0.0031643005824589917, "phrase": "extra-high-order_cube"}, {"score": 0.003071682293903262, "phrase": "relatively_short_time"}, {"score": 0.0029191527226078286, "phrase": "example_calculations"}, {"score": 0.002704403349815203, "phrase": "parallel_program"}, {"score": 0.0025810006125483835, "phrase": "feasible_solution"}, {"score": 0.0025591748412278174, "phrase": "rubik's_cube"}, {"score": 0.002526780881314497, "phrase": "high_order"}, {"score": 0.0024632148715152393, "phrase": "partial_stages"}, {"score": 0.002391067964886602, "phrase": "proper_energy_function"}, {"score": 0.0023210293050850276, "phrase": "neighborhood_search"}, {"score": 0.002281930100792185, "phrase": "energy_function"}, {"score": 0.002196342933346204, "phrase": "tremendous_local_minima"}, {"score": 0.002177762848946681, "phrase": "energy_landscape"}, {"score": 0.0021593396036472777, "phrase": "chief_task"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Rubik's Cube", " Monte Carlo", " Parallel"], "paper_abstract": "A Monte Carlo algorithm, dynamic simulated annealing, is developed to solve Rubik's Cube problem at any extra-high order with considerable efficiency. By designing appropriate energy function, cooling schedule and neighborhood search algorithm, a sequence of moves can select a path to decrease quickly the degree of disorder of a cube and jump out local energy minima in a simple but effective way. Different from the static simulated annealing method that adjusting the temperature parameter in Boltzmann function, we use a dynamic procedure by altering energy function expression instead. In addition, a solution of low-order cube is devised to be used for high efficient parallel programming for high-order cubes. An extra-high-order cube can then be solved in a relatively short time, which is merely proportional to the square of order. Example calculations cost 996.6 s for a 101-order on a PC, and 1877 s for a 5001-order using parallel program on a supercomputer with 8 nodes. The principle behind this feasible solution of Rubik's Cube at any high order, like the methods of partial stages, the way to design the proper energy function, the means to find a neighborhood search that matches the energy function, may be useful to other global optimization problems which avoiding tremendous local minima in energy landscape is chief task. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Solving extra-high-order Rubik's Cube problem by a dynamic simulated annealing", "paper_id": "WOS:000304384500012"}