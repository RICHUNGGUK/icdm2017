{"auto_keywords": [{"score": 0.04560873528240427, "phrase": "physical_characteristics"}, {"score": 0.015491182868883627, "phrase": "embedded_control_software"}, {"score": 0.010890466451166474, "phrase": "runtime_verification"}, {"score": 0.007152368807539886, "phrase": "domain-specific_models"}, {"score": 0.006603901684707236, "phrase": "physical_system"}, {"score": 0.00498596522006629, "phrase": "novel_approach"}, {"score": 0.0046194096969523315, "phrase": "software_systems"}, {"score": 0.004538045400396629, "phrase": "embedded_control_domain"}, {"score": 0.004497899823062428, "phrase": "control_software_deals"}, {"score": 0.004189207298798889, "phrase": "system_properties"}, {"score": 0.004164455874158225, "phrase": "increasing_complexity"}, {"score": 0.003901617424466747, "phrase": "traditional_runtime_verification_techniques"}, {"score": 0.003821503621554738, "phrase": "software_execution"}, {"score": 0.0036122174327316054, "phrase": "behavioral_properties"}, {"score": 0.003517107332500739, "phrase": "general-purpose_programming_language"}, {"score": 0.003032405563826263, "phrase": "printing_systems_domain"}, {"score": 0.002891834702686575, "phrase": "domain-specific_language"}, {"score": 0.0027090988689455735, "phrase": "aspect-oriented_approach"}, {"score": 0.0026612920049803473, "phrase": "static_analysis"}, {"score": 0.002591154768100912, "phrase": "control_software"}, {"score": 0.0025605773834404253, "phrase": "general-purpose_language"}, {"score": 0.002522861292947622, "phrase": "presented_approach"}, {"score": 0.002493087803216478, "phrase": "implemented_models"}, {"score": 0.0023987234349331383, "phrase": "broken_hardware_components"}, {"score": 0.002301081571414049, "phrase": "declarative_aspect-oriented_techniques"}, {"score": 0.0021748801206355416, "phrase": "complementary_static_and_runtime_verification_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Runtime verification", " Domain-specific languages", " Embedded systems", " Control software", " Aspect-oriented software development"], "paper_abstract": "Context: A considerable portion of the software systems today are adopted in the embedded control domain. Embedded control software deals with controlling a physical system, and as such models of physical characteristics become part of the embedded control software. Objective: Due to the evolution of system properties and increasing complexity, faults can be left undetected in these models of physical characteristics. Therefore, their accuracy must be verified at runtime. Traditional runtime verification techniques that are based on states/events in software execution are inadequate in this case. The behavior suggested by models of physical characteristics cannot be mapped to behavioral properties of software. Moreover, implementation in a general-purpose programming language makes these models hard to locate and verify. Therefore, this paper proposes a novel approach to perform runtime verification of models of physical characteristics in embedded control software. Method: The development of an approach for runtime verification of models of physical characteristics and the application of the approach to two industrial case studies from the printing systems domain. Results: This paper presents a novel approach to specify models of physical characteristics using a domain-specific language, to define monitors that detect inconsistencies by exploiting redundancy in these models, and to realize these monitors using an aspect-oriented approach. We complement runtime verification with static analysis to verify the composition of domain-specific models with the control software written in a general-purpose language. Conclusions: The presented approach enables runtime verification of implemented models of physical characteristics to detect inconsistencies in these models, as well as broken hardware components and wear and tear of hardware in the physical system. The application of declarative aspect-oriented techniques to realize runtime verification monitors increases modularity and provides the ability to statically verify this realization. The complementary static and runtime verification techniques increase the reliability of embedded control software. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Verification and analysis of domain-specific models of physical characteristics in embedded control software", "paper_id": "WOS:000309436200010"}