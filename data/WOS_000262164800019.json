{"auto_keywords": [{"score": 0.04855239486253465, "phrase": "high-level_synthesis"}, {"score": 0.00481495049065317, "phrase": "novel_framework"}, {"score": 0.0029602552900111407, "phrase": "hard-to-synthesize_functions"}, {"score": 0.0027741761880779535, "phrase": "dynamic_memory_management"}, {"score": 0.002436289099444074, "phrase": "single-thread_implementation_scheme"}, {"score": 0.0021049977753042253, "phrase": "register_transfer_level_simulation"}], "paper_keywords": ["high-level synthesis", " CCAP", " hardware/software co-design", " C-based design"], "paper_abstract": "This letter presents a novel framework in high-level synthesis where hardware modules synthesized from functions in a given ANSI-C program can call the other software functions in the program. This enables high-level synthesis from C programs that contains calls to hard-to-synthesize functions, such as dynamic memory management, I/O request, or very large and complex functions. A single-thread implementation scheme is shown, whose correctness has been verified through register transfer level simulation.", "paper_title": "High-Level Synthesis of Software Function Calls", "paper_id": "WOS:000262164800019"}