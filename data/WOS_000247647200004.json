{"auto_keywords": [{"score": 0.049118287236398724, "phrase": "triangle_problem"}, {"score": 0.04204224612471482, "phrase": "first_algorithm"}, {"score": 0.041229409204698, "phrase": "grover_search"}, {"score": 0.004828914602826593, "phrase": "quantum"}, {"score": 0.004306795240631196, "phrase": "undirected_graph"}, {"score": 0.004241771072194993, "phrase": "n_nodes"}, {"score": 0.003971111060168551, "phrase": "combinatorial_ideas"}, {"score": 0.0036988415150699945, "phrase": "second_algorithm"}, {"score": 0.003393115177189967, "phrase": "design_concept"}, {"score": 0.0031926001871260524, "phrase": "computer_science"}, {"score": 0.002884317729022721, "phrase": "l._grover"}, {"score": 0.002797757576619329, "phrase": "twenty-eighth_acm_symposium"}, {"score": 0.0024641134634779535, "phrase": "second_one"}, {"score": 0.002306715056543409, "phrase": "siam"}, {"score": 0.002294929467537814, "phrase": "j._comput"}], "paper_keywords": ["05C85", " 68R10", " 68W99"], "paper_abstract": "We present two new quantum algorithms that either find a triangle (a copy of K-3) in an undirected graph G on n nodes, or reject if G is triangle free. The first algorithm uses combinatorial ideas with Grover Search and makes (O) over bar (n(10/7))queries. The second algorithm uses (O) over bar (n(13/10)) queries and is based on a design concept of Ambainis [in Proceedings of the 45th IEEE Symposium on Foundations of Computer Science, 2004, pp. 22-31] that incorporates the benefits of quantum walks into Grover Search [L. Grover, in Proceedings of the Twenty-Eighth ACM Symposium on Theory of Computing, 1996, pp. 212-219]. The first algorithm uses only O(log n) qubits in its quantum subroutines, whereas the second one uses O( n) qubits. The Triangle Problem was first treated in [H. Buhrman et al., SIAM J. Comput., 34 ( 2005), pp. 1324-1330], where an algorithm with O(n + root nm) query complexity was presented, where m is the number of edges of G.", "paper_title": "Quantum algorithms for the triangle problem", "paper_id": "WOS:000247647200004"}