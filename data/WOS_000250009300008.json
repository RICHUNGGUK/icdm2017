{"auto_keywords": [{"score": 0.040960371287930286, "phrase": "frequent_closed_xml_query_patterns"}, {"score": 0.00481495049065317, "phrase": "frequent_closed_xml_query_pattern"}, {"score": 0.004617328272121826, "phrase": "convincing_arguments"}, {"score": 0.004535124351828787, "phrase": "frequent_pattern_mining_algorithm"}, {"score": 0.003677280504320636, "phrase": "query_performance_enhancement"}, {"score": 0.0035687137873965684, "phrase": "previous_algorithms"}, {"score": 0.0035051129798529, "phrase": "frequent_patterns"}, {"score": 0.0034220655476652683, "phrase": "straightforward_generate-and-test_strategy"}, {"score": 0.0030171910207671205, "phrase": "costly_tree-containment_checking"}, {"score": 0.0029280552768499056, "phrase": "sequence_mining"}, {"score": 0.002841545331522694, "phrase": "frequent_tree-structured_patterns"}, {"score": 0.002741091312632307, "phrase": "expensive_containment_testing"}, {"score": 0.002708399936381754, "phrase": "cheap_parent-child_checking"}, {"score": 0.002581477142020187, "phrase": "unrelated_search_space"}, {"score": 0.00255068452076921, "phrase": "frequent_pattern_enumeration"}, {"score": 0.0025202582748972122, "phrase": "parent-child_relationship_constraint"}, {"score": 0.0024604876113911173, "phrase": "thorough_experimental_study"}, {"score": 0.0022486729928886885, "phrase": "previous_known_alternative"}, {"score": 0.0021049977753042253, "phrase": "xml_queries'_size"}], "paper_keywords": ["computer software", " frequent closed pattern", " data mining", " XML", " XPath"], "paper_abstract": "Previous research works have presented convincing arguments that a frequent pattern mining algorithm should not mine all frequent but only the closed ones because the latter leads to not only more compact yet complete result set but also better efficiency. Upon discovery of frequent closed XML query patterns, indexing and caching can be effectively adopted for query performance enhancement. Most of the previous algorithms for finding frequent patterns basically introduced a straightforward generate-and-test strategy. In this paper, we present SOLARIA*, an efficient algorithm for mining frequent closed XML query patterns without candidate maintenance and costly tree-containment checking. Efficient algorithm of sequence mining is involved in discovering frequent tree-structured patterns, which aims at replacing expensive containment testing with cheap parent-child checking in sequences. SOLARIA* deeply prunes unrelated search space for frequent pattern enumeration by parent-child relationship constraint. By a thorough experimental study on various real-life data, we demonstrate the efficiency and scalability of SOLARIA* over the previous known alternative. SOLARIA* is also linearly scalable in terms of XML queries' size.", "paper_title": "Efficient mining of frequent closed XML query pattern", "paper_id": "WOS:000250009300008"}