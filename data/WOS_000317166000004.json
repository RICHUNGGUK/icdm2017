{"auto_keywords": [{"score": 0.04728331461408164, "phrase": "cpu_time"}, {"score": 0.00481495049065317, "phrase": "large_digital_systems"}, {"score": 0.004625881588444304, "phrase": "rapid_transient_fault_injection"}, {"score": 0.004444203710097837, "phrase": "simulation-based_fault-injection"}, {"score": 0.0043779247807253525, "phrase": "system"}, {"score": 0.004291073117901643, "phrase": "chip_systems"}, {"score": 0.004164007198843467, "phrase": "proposed_approach"}, {"score": 0.004060986196931943, "phrase": "complex_circuits"}, {"score": 0.0038624981944755813, "phrase": "top-level_modules"}, {"score": 0.0036188435232325337, "phrase": "wide_range"}, {"score": 0.0035827424231607784, "phrase": "fault_models"}, {"score": 0.0034940519373446335, "phrase": "finally_a_competitive_reduction"}, {"score": 0.003129096013910623, "phrase": "partial_code_modification_techniques"}, {"score": 0.0030060256866508606, "phrase": "proposed_method"}, {"score": 0.0027741761880779535, "phrase": "avr_microcontroller"}, {"score": 0.002746478354337486, "phrase": "atmel"}, {"score": 0.0027054473441439422, "phrase": "post_placed-and-routed_verilog_netlist"}, {"score": 0.0025730425700096365, "phrase": "xentium"}, {"score": 0.002534596206835737, "phrase": "recore_systems"}, {"score": 0.002509284173541882, "phrase": "experimental_results"}, {"score": 0.0022696277881969896, "phrase": "typical_simulation-based_fault-injection_approaches"}, {"score": 0.0021693692831601745, "phrase": "rapid_simulation-based_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Component", " Failure analysis", " Fault modeling and simulation", " Transient faults"], "paper_abstract": "This paper presents a technique for rapid transient fault injection, regarding the CPU time, to perform simulation-based fault-injection in complex System-on-Chip Systems (SoCs). The proposed approach can be applied to complex circuits, as it is not required to modify the top-level modules of a design; moreover, it is capable to inject a wide range of fault models in a design and finally a competitive reduction in terms of CPU time will be achieved. The root of our method is based on the usage of simulator-commands along with partial code modification techniques. To prove the efficiency of the proposed method, it has been implemented on two case studies, a pre-synthesized netlist of an AVR microcontroller from ATMEL and a post placed-and-routed Verilog netlist of a high performance reconfigurable processor in 90-nm UMC technology, Xentium processor from Recore Systems. Experimental results show that our technique is able to reduce the CPU time by a factor ranging from 27% to 67% compared with typical simulation-based fault-injection approaches and by a factor of 10% compared with rapid simulation-based techniques. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Rapid transient fault insertion in large digital systems", "paper_id": "WOS:000317166000004"}