{"auto_keywords": [{"score": 0.0491163375687563, "phrase": "mobile_social_networks"}, {"score": 0.048171695241769216, "phrase": "idle_computational_resources"}, {"score": 0.04499957544659588, "phrase": "idle_resources"}, {"score": 0.004815022716985231, "phrase": "conservative"}, {"score": 0.004750178261675602, "phrase": "cooperative_work"}, {"score": 0.004439097815805505, "phrase": "huge_tasks"}, {"score": 0.004106353084467526, "phrase": "human_intelligence"}, {"score": 0.004078620439629185, "phrase": "machine_computing"}, {"score": 0.003916098498242888, "phrase": "unique_features"}, {"score": 0.0038896515197955088, "phrase": "msn"}, {"score": 0.0038242899532391914, "phrase": "new_cooperative_system"}, {"score": 0.0037219886365287085, "phrase": "distributed_and_infrastructure-free_features"}, {"score": 0.0036101552409969037, "phrase": "traditional_crowdsourcing_platforms"}, {"score": 0.0035615322947497013, "phrase": "proposed_system"}, {"score": 0.003525493807130663, "phrase": "huge_work"}, {"score": 0.0034662353953537773, "phrase": "smaller_pieces"}, {"score": 0.003249966782844541, "phrase": "critical_problem"}, {"score": 0.0031845067058084583, "phrase": "work's_completion_time"}, {"score": 0.0030783143919343972, "phrase": "global_information"}, {"score": 0.003057503388220776, "phrase": "independent_relay_nodes"}, {"score": 0.003006087482938274, "phrase": "conflicted_decisions"}, {"score": 0.0029455250501196286, "phrase": "unbalanced_workload_distribution"}, {"score": 0.0029256091368059446, "phrase": "participating_nodes"}, {"score": 0.002789907247876628, "phrase": "different_processing_stages"}, {"score": 0.0027429789393362703, "phrase": "distinct_workload"}, {"score": 0.002678598911294797, "phrase": "progressive_method"}, {"score": 0.0026514708899935333, "phrase": "conservative_one"}, {"score": 0.0025630077791393125, "phrase": "adaptive_workload_allocation_scheme"}, {"score": 0.0025198864435531055, "phrase": "participating_node"}, {"score": 0.002452392552332778, "phrase": "workload_statuses"}, {"score": 0.0024358027662024105, "phrase": "neighboring_nodes"}, {"score": 0.0023867021254922755, "phrase": "system_throughput"}, {"score": 0.002330664671716791, "phrase": "large_works"}, {"score": 0.0022914434133560852, "phrase": "nearly_optimal_time"}, {"score": 0.0022605410856853785, "phrase": "traditional_scheduling_problems"}, {"score": 0.00222249726328354, "phrase": "human's_rejection"}, {"score": 0.0022074592164608134, "phrase": "contact_delay"}, {"score": 0.002185092297972985, "phrase": "social_similarity"}, {"score": 0.0021556211190198703, "phrase": "extensive_simulation_results"}, {"score": 0.0021049977753042253, "phrase": "full_use"}], "paper_keywords": ["Mobile social networks", " outsourcing", " potential resource", " social-crowdsourcing", " work partition"], "paper_abstract": "There are plenty of idle computational resources on the Internet, which could potentially be used for accomplishing huge tasks. More and more applications are being designed for exploring those idle resources. In this paper, we focus on the idle computational resources, including both human intelligence and machine computing abilities, in mobile social networks (MSNs). Based on the unique features of MSN, we design a new cooperative system, called social-crowdsourcing. The distributed and infrastructure-free features of the system make it more attractive than traditional crowdsourcing platforms. In the proposed system, a huge work is gradually partitioned into smaller pieces, and is propagated from node to node. However, how to partition and allocate these segments is a critical problem, which directly affects the work's completion time and system throughput. Due to the lack of global information, independent relay nodes are likely to make conflicted decisions, which will cause an unbalanced workload distribution on participating nodes. In this paper, we find that, for a work at different processing stages, one should adopt distinct workload exchanging schemes, moving from a progressive method to a conservative one. Based on this observation, we propose an adaptive workload allocation scheme, in which a participating node can gradually switch his decision strategy according to the workload statuses of neighboring nodes. By using our approach, system throughput can be significantly improved, and large works can finish within a nearly optimal time. Unlike in traditional scheduling problems, we take a human's rejection, contact delay, and social similarity into consideration. Extensive simulation results show that our proposed algorithms can successfully make full use of the idle resources in MSNs.", "paper_title": "Progressive or Conservative: Rationally Allocate Cooperative Work in Mobile Social Networks", "paper_id": "WOS:000356138700020"}