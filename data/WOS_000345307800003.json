{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sequential_patterns"}, {"score": 0.015483621666231859, "phrase": "transaction_insertion"}, {"score": 0.009452454303773955, "phrase": "newly_inserted_transactions"}, {"score": 0.004634254474150777, "phrase": "useful_information"}, {"score": 0.004563880494020726, "phrase": "large_databases"}, {"score": 0.004426308135681733, "phrase": "important_research_issue"}, {"score": 0.004163427731140163, "phrase": "derived_knowledge"}, {"score": 0.003916098498242888, "phrase": "customer_behaviors"}, {"score": 0.0038271712887391015, "phrase": "efficient_decision-making"}, {"score": 0.0037402558657576124, "phrase": "fast_updated_frequent-pattern"}, {"score": 0.00346449481422526, "phrase": "frequent_itemsets"}, {"score": 0.0033599501775954024, "phrase": "incremental_mining"}, {"score": 0.0032836104153151973, "phrase": "present_study"}, {"score": 0.0031121406603482112, "phrase": "incremental_fast_updated_sequential-pattern"}, {"score": 0.0026698611202305715, "phrase": "new_customers"}, {"score": 0.0026091594819333654, "phrase": "fusp-tree_structure"}, {"score": 0.0024918548761791435, "phrase": "update_process"}, {"score": 0.002416589459425828, "phrase": "fusp-growth_algorithm"}, {"score": 0.002325689073229477, "phrase": "frequent_sequences"}, {"score": 0.0021705796895687864, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_fusp-tree_algorithm"}], "paper_keywords": ["Data mining", " sequential pattern", " data analysis", " incremental mining"], "paper_abstract": "Mining useful information from large databases has become an important research issue in recent years. Among the classes of derived knowledge, sequential patterns can be used to discover customer behaviors to facilitate efficient decision-making. The fast updated frequent-pattern (FUFP)-tree algorithm has been proposed to efficiently mine frequent itemsets through transaction insertion in incremental mining. The present study extends this algorithm to develop an incremental fast updated sequential-pattern (FUSP)-tree algorithm for efficiently handling sequential patterns whether the newly inserted transactions are from customers already in the database or from new customers. An FUSP-tree structure is designed to make the update process easier. The FUSP-growth algorithm is proposed for mining frequent sequences (sequential patterns) from the FUSP-tree. Experimental results show that the proposed FUSP-tree algorithm has good performance for incrementally handling newly inserted transactions.", "paper_title": "Efficient updating of sequential patterns with transaction insertion", "paper_id": "WOS:000345307800003"}