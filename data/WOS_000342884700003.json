{"auto_keywords": [{"score": 0.04911241438594345, "phrase": "suffix_arrays"}, {"score": 0.006582443406732544, "phrase": "multiple_queries"}, {"score": 0.004815072276957652, "phrase": "distributed"}, {"score": 0.004669845451682529, "phrase": "text_search"}, {"score": 0.004598933498016774, "phrase": "classical_problem"}, {"score": 0.004552255360140208, "phrase": "computer_science"}, {"score": 0.004152818376630929, "phrase": "data_structures"}, {"score": 0.004089725258435817, "phrase": "fast_searches"}, {"score": 0.003926105480202798, "phrase": "regular_expressions"}, {"score": 0.0038862297330905836, "phrase": "large_texts"}, {"score": 0.0038467574225322086, "phrase": "potential_application_domains"}, {"score": 0.0037498152007206815, "phrase": "large-scale_search_services"}, {"score": 0.0036740168936985314, "phrase": "web_search_engines"}, {"score": 0.003509006038574667, "phrase": "intensive-traffic_streams"}, {"score": 0.0034733518170738517, "phrase": "on-line_queries"}, {"score": 0.003088384809415812, "phrase": "distributed-memory_processors"}, {"score": 0.002934566917795928, "phrase": "distributed_data_structure"}, {"score": 0.002831462722290752, "phrase": "individual_search_operations"}, {"score": 0.0025694584194998356, "phrase": "distributed-memory_systems"}, {"score": 0.0025174594088331853, "phrase": "hardware_resources"}, {"score": 0.002367676766637248, "phrase": "high_query_throughput"}, {"score": 0.0023435920614377306, "phrase": "low_operational_costs"}, {"score": 0.002249672943553135, "phrase": "suitable_solutions"}, {"score": 0.0022154296909169826, "phrase": "efficient_and_scalable_on-line_search_services"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed text search", " Suffix arrays", " Distributed text search engines"], "paper_abstract": "Text search is a classical problem in Computer Science, with many data-intensive applications. For this problem, suffix arrays are among the most widely known and used data structures, enabling fast searches for phrases, terms, substrings and regular expressions in large texts. Potential application domains for these operations include large-scale search services, such as Web search engines, where it is necessary to efficiently process intensive-traffic streams of on-line queries. This paper proposes strategies to enable such services by means of suffix arrays. We introduce techniques for deploying suffix arrays on clusters of distributed-memory processors and then study the processing of multiple queries on the distributed data structure. Even though the cost of individual search operations in sequential (non-distributed) suffix arrays is low in practice, the problem of processing multiple queries on distributed-memory systems, so that hardware resources are used efficiently, is relevant to services aimed at achieving high query throughput at low operational costs. Our theoretical and experimental performance studies show that our proposals are suitable solutions for building efficient and scalable on-line search services based on suffix arrays. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Distributed text search using suffix arrays", "paper_id": "WOS:000342884700003"}