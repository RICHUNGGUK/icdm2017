{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pattern-based_reasoning"}, {"score": 0.03351309712344681, "phrase": "constraint_contradictions"}, {"score": 0.004777917315737992, "phrase": "friendly_ontology_debugging."}, {"score": 0.004668510065740584, "phrase": "challenging_task"}, {"score": 0.004614745158543967, "phrase": "non-logic_experts"}, {"score": 0.0043718794256931435, "phrase": "current_description_logic_reasoners"}, {"score": 0.0042388570312522, "phrase": "unsatisfiable_concepts"}, {"score": 0.0038189638340666936, "phrase": "ontology_modeler"}, {"score": 0.0036459007842756983, "phrase": "large_or_medium_size_ontologies"}, {"score": 0.0035899674590142653, "phrase": "unsatisfiable_concept"}, {"score": 0.0033486631403337555, "phrase": "ontology_engineering"}, {"score": 0.003310047704590791, "phrase": "user-friendly_reasoning_mechanism"}, {"score": 0.003246672441842787, "phrase": "pattern-based_reasoning_approach"}, {"score": 0.002675797331220082, "phrase": "dogmamodeler_ontology_engineering_tool"}, {"score": 0.0026043035241045394, "phrase": "ccform_ontology"}, {"score": 0.002429090371567499, "phrase": "description_logic_based_reasoning"}, {"score": 0.0021965609224818853, "phrase": "dogmamodeler"}, {"score": 0.0021049977753042253, "phrase": "methodological_perspective"}], "paper_keywords": ["Ontology engineering", " reasoning", " satisfiability", " model verification", " debugging", " ontology tools", " object role modeling", " ORM"], "paper_abstract": "Reasoning with ontologies is a challenging task specially for non-logic experts. When checking whether an ontology contains rules that contradict each other, current description logic reasoners can only provide a list of the unsatisfiable concepts. Figuring out why these concepts are unsatisfiable, which rules cause conflicts, and how to resolve these conflicts, is all left to the ontology modeler himself. The problem becomes even more challenging in case of large or medium size ontologies, because an unsatisfiable concept may cause many of its neighboring concepts to be unsatisfiable. The goal of this article is to empower ontology engineering with a user-friendly reasoning mechanism. We propose a pattern-based reasoning approach, which offers 9 patterns of constraint contradictions that lead to unsatisfiability in Object-role (ORM) models. The novelty of this approach is not merely that constraint contradictions are detected, but mainly that it provides the causes and suggestions to resolve contradictions. The approach is implemented in the DogmaModeler ontology engineering tool, and tested in building the CCFORM ontology. We discuss that, although this pattern-based reasoning covers most of contradictions in practice, compared with description logic based reasoning, it is not complete. We argue and illustrate both approaches, pattern-based and description logic-based, their implementation in the DogmaModeler, and conclude that both complement each other from a methodological perspective.", "paper_title": "TOWARDS PATTERN-BASED REASONING FOR FRIENDLY ONTOLOGY DEBUGGING", "paper_id": "WOS:000260806800002"}