{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_software_system's_deployment_architecture"}, {"score": 0.0047409388179452255, "phrase": "distributed_system's_allocation"}, {"score": 0.004620093797504386, "phrase": "hardware_nodes"}, {"score": 0.0043875257506180865, "phrase": "significant_impact"}, {"score": 0.0038959121068990517, "phrase": "different_levels"}, {"score": 0.003680587852807675, "phrase": "system's_deployment_architecture"}, {"score": 0.0035497797026638033, "phrase": "system's_initial_deployment"}, {"score": 0.0033190180867511605, "phrase": "software_system"}, {"score": 0.003201018846103988, "phrase": "system's_qos_properties"}, {"score": 0.0029467742734417255, "phrase": "distributed_software_system"}, {"score": 0.0028567126120064546, "phrase": "possibly_conflicting_qos_dimensions"}, {"score": 0.0027837615811247963, "phrase": "formal_modeling"}, {"score": 0.0026570998719084153, "phrase": "tailorable_algorithms"}, {"score": 0.0026026666736474404, "phrase": "system's_deployment"}, {"score": 0.0024586427394152196, "phrase": "visual_deployment_architecture_modeling"}, {"score": 0.0022283519468680475, "phrase": "large_number"}, {"score": 0.0022053994402287925, "phrase": "simulated_distributed_system_scenarios"}], "paper_keywords": ["Software architecture", " software deployment", " quality of service", " self-adaptive software"], "paper_abstract": "A distributed system's allocation of software components to hardware nodes (i.e., deployment architecture) can have a significant impact on its quality of service (QoS). For a given system, there may be many deployment architectures that provide the same functionality, but with different levels of QoS. The parameters that influence the quality of a system's deployment architecture are often not known before the system's initial deployment and may change at runtime. This means that redeployment of the software system may be necessary to improve the system's QoS properties. This paper presents and evaluates a framework aimed at finding the most appropriate deployment architecture for a distributed software system with respect to multiple, possibly conflicting QoS dimensions. The framework supports formal modeling of the problem and provides a set of tailorable algorithms for improving a system's deployment. We have realized the framework on top of a visual deployment architecture modeling and analysis environment. The framework has been evaluated for precision and execution-time complexity on a large number of simulated distributed system scenarios, as well as in the context of two third-party families of distributed applications.", "paper_title": "An Extensible Framework for Improving a Distributed Software System's Deployment Architecture", "paper_id": "WOS:000299472600007"}