{"auto_keywords": [{"score": 0.03833272123693317, "phrase": "single_core"}, {"score": 0.037703509080803325, "phrase": "parallel_applications"}, {"score": 0.03662619515275862, "phrase": "private_memory_blocks"}, {"score": 0.03528453069935319, "phrase": "memory_blocks"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_performance"}, {"score": 0.004773904938276846, "phrase": "fine-grain_coherence_bypass"}, {"score": 0.0046928556063004214, "phrase": "scalable_cache_coherence_protocol"}, {"score": 0.004613175917207636, "phrase": "high-performance_servers"}, {"score": 0.004515467468684217, "phrase": "directory-based_cache_coherence_protocol"}, {"score": 0.00440093312826378, "phrase": "snooping-based_protocol"}, {"score": 0.00418046991987597, "phrase": "former_protocol"}, {"score": 0.00409188863874203, "phrase": "large_number"}, {"score": 0.003937126962709418, "phrase": "additional_area_requirements"}, {"score": 0.003788196352457501, "phrase": "significant_percentage"}, {"score": 0.0037398106866046972, "phrase": "referenced_memory_blocks"}, {"score": 0.003432604816716035, "phrase": "intuitive_motivation"}, {"score": 0.003232653376857698, "phrase": "coherence_maintenance"}, {"score": 0.003123652729688503, "phrase": "private_block"}, {"score": 0.0029797347088361056, "phrase": "novel_hardware_approach"}, {"score": 0.002879237498994052, "phrase": "shared_memory_blocks"}, {"score": 0.002842428606954139, "phrase": "cache_block_level"}, {"score": 0.002746549549029177, "phrase": "coherence_procedure"}, {"score": 0.002608744950946475, "phrase": "directory-based_approach"}, {"score": 0.002553382046204689, "phrase": "system_performance"}, {"score": 0.0025315664299815537, "phrase": "experimental_results"}, {"score": 0.0023839754995935184, "phrase": "coherence_tracking"}, {"score": 0.0021049977753042253, "phrase": "execution_time"}], "paper_keywords": ["many-core", " cache coherence", " private memory block", " fine-grain coherence", " high performance"], "paper_abstract": "Efficient and scalable cache coherence protocol is crucial to high-performance servers with shared-memory. The directory-based cache coherence protocol is more desirable than the snooping-based protocol with respect to the scalability. However, even for the former protocol, scaling to a large number of cores is also challenging due to the additional area requirements of the directories. We observed that a significant percentage of the referenced memory blocks were only accessed by a single core (even in parallel applications) which could be considered as private memory blocks. An intuitive motivation from this observation is that memory blocks accessed by a single core do not require coherence maintenance. The issue is to identify the private block and track the change of its access pattern. We propose a novel hardware approach to (1) dynamically identify the shared memory blocks at the cache block level, and (2) bypass the coherence procedure for the private memory blocks. This approach increases the effectiveness of the directory-based approach and therefore improves the system performance. Experimental results showed that, our approach can on an average (1) avoid the coherence tracking of about 54% referenced memory blocks, (2) reduce the coherence overhead by 77%, (3) avoid 8% L2 cache misses, and (4) shorten the execution time of parallel applications by 13%.", "paper_title": "Improving multiprocessor performance with fine-grain coherence bypass", "paper_id": "WOS:000352217700008"}