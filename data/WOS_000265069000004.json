{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_design_methods"}, {"score": 0.004529093447865156, "phrase": "ontological_basis"}, {"score": 0.0033685408148574846, "phrase": "dynamic_activity"}, {"score": 0.002690406375639144, "phrase": "general_evaluation_schema"}, {"score": 0.002556359086441866, "phrase": "five_software_design_methods"}, {"score": 0.002284444272376043, "phrase": "better_understanding"}, {"score": 0.0022382002476510573, "phrase": "design_methods"}, {"score": 0.0021049977753042253, "phrase": "method_integration"}], "paper_keywords": [""], "paper_abstract": "This paper develops an ontological basis for evaluating software design methods, based oil the situated function-behaviour-structure framework. This framework accounts for the situatedness of designing, viewing it as a dynamic activity driven by interactions between designers and the artefacts being designed. Oil the basis of this framework, we derive a general evaluation schema that we apply to five software design methods. The ideas presented in this work contribute to a better understanding of design methods, and uncover opportunities for method integration and development.", "paper_title": "An ontologically-based evaluation of software design methods", "paper_id": "WOS:000265069000004"}