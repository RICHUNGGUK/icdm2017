{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bulk_insertion"}, {"score": 0.04964635174824772, "phrase": "seeded_clustering"}, {"score": 0.00949128537293011, "phrase": "target_r-tree"}, {"score": 0.004664352260912174, "phrase": "great_advances"}, {"score": 0.00460125407969429, "phrase": "mobile_technology"}, {"score": 0.004559661374976129, "phrase": "wireless_communications"}, {"score": 0.004259418153299952, "phrase": "high_cost"}, {"score": 0.003535489842686145, "phrase": "mobile_client"}, {"score": 0.0033630629374009576, "phrase": "scalable_technique"}, {"score": 0.0032282396745967504, "phrase": "r-tree_indexes"}, {"score": 0.0031129269142224194, "phrase": "high_data_arrival_rates"}, {"score": 0.0030291453183733897, "phrase": "seed_tree"}, {"score": 0.002934237411711622, "phrase": "top_k_levels"}, {"score": 0.0028422946420821075, "phrase": "input_data_objects"}, {"score": 0.0026307897899760383, "phrase": "input_r-trees"}, {"score": 0.0024797072773840704, "phrase": "detailed_algorithms"}, {"score": 0.002316105585203396, "phrase": "experimental_results"}, {"score": 0.0022231606165229235, "phrase": "previously_known_methods"}, {"score": 0.0021830553825770097, "phrase": "insertion_cost"}, {"score": 0.002133937537670314, "phrase": "target_r-trees"}], "paper_keywords": ["R-tree", " bulk insertion", " seeded clustering"], "paper_abstract": "With great advances in the mobile technology and wireless communications, users expect to be online anytime anywhere. However, due to the high cost of being online, applications are still implemented as partially connected to the server. In many data-intensive mobile client/server frameworks, it is a daunting task to archive and index such a mass volume of complex data that are continuously added to the server when each mobile client gets online. In this paper, we propose a scalable technique called Seeded Clustering that allows us to maintain R-tree indexes by bulk insertion while keeping pace with high data arrival rates. Our approach uses a seed tree, which is copied from the top k levels of a target R-tree, to classify input data objects into clusters. We then build an R-tree for each of the clusters and insert the input R-trees into the target R-tree in bulk one at a time. We present detailed algorithms for the seeded clustering and bulk insertion as well as the results from our extensive experimental study. The experimental results show that the bulk insertion by seeded clustering outperforms the previously known methods in terms of insertion cost and the quality of target R-trees measured by their query performance.", "paper_title": "Two-phased bulk insertion by seeded clustering for R-trees", "paper_id": "WOS:000234952100027"}