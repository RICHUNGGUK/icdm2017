{"auto_keywords": [{"score": 0.04287858727323994, "phrase": "xacml"}, {"score": 0.00481495049065317, "phrase": "incorrect_uses"}, {"score": 0.004537254814246843, "phrase": "increasing_complexity"}, {"score": 0.004440277230269978, "phrase": "new_access_control_methods"}, {"score": 0.004298666679374568, "phrase": "attribute-based_authorization"}, {"score": 0.004206767038617782, "phrase": "standard_language"}, {"score": 0.004139128578531134, "phrase": "attribute-based_access_control_policies"}, {"score": 0.0038375280115736958, "phrase": "different_needs"}, {"score": 0.003796267885124202, "phrase": "policy_composition"}, {"score": 0.003334309053314909, "phrase": "unauthorized_access"}, {"score": 0.003074495313651187, "phrase": "fault-based_testing_approach"}, {"score": 0.002881255933884771, "phrase": "theoretical_foundation"}, {"score": 0.0027443174539994925, "phrase": "semantic_differences"}, {"score": 0.0025031188149336257, "phrase": "constraint_solver"}, {"score": 0.0023841092222805253, "phrase": "different_responses"}], "paper_keywords": ["Combining algorithm", " constraint solving", " fault-based testing", " XACML"], "paper_abstract": "With the increasing complexity of software, new access control methods have emerged to deal with attribute-based authorization. As a standard language for specifying attribute-based access control policies, XACML offers a number of rule and policy combining algorithms to meet different needs of policy composition. Due to their variety and complexity, however, it is not uncommon to apply combining algorithms incorrectly, which can lead to unauthorized access or denial of service. To solve this problem, this paper presents a fault-based testing approach for revealing incorrect combining algorithms in XACML 3.0 policies. The theoretical foundation of this approach relies on the formalization of semantic differences between rule combining algorithms and between policy combining algorithms. It allows the use of a constraint solver for generating queries to which a given policy produces different responses than its combining algorithm-based mutants. Such queries can determine whether or not the given combining algorithm is used correctly. Our empirical studies using various XACML policies have demonstrated that our approach is effective.", "paper_title": "Detecting Incorrect Uses of Combining Algorithms in XACML 3.0 Policies", "paper_id": "WOS:000372155400008"}