{"auto_keywords": [{"score": 0.047510470298773616, "phrase": "chvatal"}, {"score": 0.00481495049065317, "phrase": "harder_knapsack_problems"}, {"score": 0.004172360444377281, "phrase": "zero-one_knapsack_problem"}, {"score": 0.0039053194919285725, "phrase": "polynomial_time"}, {"score": 0.003778253716938922, "phrase": "particular_type"}, {"score": 0.0036958398682001015, "phrase": "branch-and-bound_algorithms"}, {"score": 0.0034975571855450343, "phrase": "linear_programs"}, {"score": 0.0033465923623290034, "phrase": "rudimentary_cutting-plane_arguments"}, {"score": 0.002713604305939145, "phrase": "branch-and-bound_and_dynamic_programming_algorithms"}, {"score": 0.0024842242921857705, "phrase": "arbitrarily_powerful_bound_rules"}, {"score": 0.0022492129111567824, "phrase": "optimal_solution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Branch and bound", " Dynamic programming", " Memoization", " Branching program", " Knapsack", " Perfect matching"], "paper_abstract": "Already 30 years ago. Chvatal has shown that some instances of the zero-one knapsack problem cannot be solved in polynomial time using a particular type of branch-and-bound algorithms based on relaxations of linear programs together with some rudimentary cutting-plane arguments as bounding rules. We extend this result by proving an exponential lower bound in a more general class of branch-and-bound and dynamic programming algorithms which are allowed to use memoization and arbitrarily powerful bound rules to detect and remove subproblems leading to no optimal solution. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Yet harder knapsack problems", "paper_id": "WOS:000296037000011"}