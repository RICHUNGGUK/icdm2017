{"auto_keywords": [{"score": 0.048942952634754504, "phrase": "robot_swarm"}, {"score": 0.00481495049065317, "phrase": "temporal_verification"}, {"score": 0.0047689174754929195, "phrase": "swarm_robotic_systems"}, {"score": 0.004589124394375718, "phrase": "simple_robots"}, {"score": 0.004208881856146758, "phrase": "individual_robots"}, {"score": 0.004030695216899165, "phrase": "large_population"}, {"score": 0.003992129945230457, "phrase": "identical_robots"}, {"score": 0.003696550794743764, "phrase": "robot_swarms"}, {"score": 0.003643607569483598, "phrase": "attractive_solution"}, {"score": 0.0035914198812657897, "phrase": "real-world_applications"}, {"score": 0.0035399770257915466, "phrase": "individual_control_algorithms"}, {"score": 0.0034558655164987134, "phrase": "required_global_behaviour"}, {"score": 0.0034063576796640603, "phrase": "difficult_problem"}, {"score": 0.003215295260684715, "phrase": "formal_verification_techniques"}, {"score": 0.003154012038613403, "phrase": "emergent_behaviours"}, {"score": 0.003123808471618783, "phrase": "robotic_swarms"}, {"score": 0.0030058503645435455, "phrase": "automated_analysis"}, {"score": 0.002948547333717581, "phrase": "temporal_logics"}, {"score": 0.002837188425640173, "phrase": "possible_behaviours"}, {"score": 0.0027431953780099826, "phrase": "required_specification"}, {"score": 0.0025034338848015166, "phrase": "temporal_properties"}, {"score": 0.00236289633510808, "phrase": "particular_swarm_control_algorithm"}, {"score": 0.0022956075241520064, "phrase": "real_robotic_swarms"}, {"score": 0.0022409963215568565, "phrase": "automated_temporal_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Swarm robotics", " Formal verification", " Emergent behaviour", " Temporal logics", " Model-checking"], "paper_abstract": "A robot swarm is a collection of simple robots designed to work together to carry out some task. Such swarms rely on the simplicity of the individual robots; the fault tolerance inherent in having a large population of identical robots; and the self-organised behaviour of the swarm as a whole. Although robot swarms present an attractive solution to demanding real-world applications, designing individual control algorithms that can guarantee the required global behaviour is a difficult problem. In this paper we assess and apply the use of formal verification techniques for analysing the emergent behaviours of robotic swarms. These techniques, based on the automated analysis of systems using temporal logics, allow us to analyse whether all possible behaviours within the robot swarm conform to some required specification. In particular, we apply model-checking, an automated and exhaustive algorithmic technique, to check whether temporal properties are satisfied on all the possible behaviours of the system. We target a particular swarm control algorithm that has been tested in real robotic swarms, and show how automated temporal analysis can help to refine and analyse such an algorithm. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Towards temporal verification of swarm robotic systems", "paper_id": "WOS:000311654000009"}