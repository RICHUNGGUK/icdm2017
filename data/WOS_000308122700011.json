{"auto_keywords": [{"score": 0.0496729815270419, "phrase": "competitive_agglomeration"}, {"score": 0.048606685939697476, "phrase": "fuzzy_clustering"}, {"score": 0.03854414259453714, "phrase": "competitive_agglomeration_term"}, {"score": 0.03187683866152962, "phrase": "large_clusters"}, {"score": 0.00481495049065317, "phrase": "image_compression"}, {"score": 0.004733625412289433, "phrase": "novel_codeword_migration_strategy"}, {"score": 0.004627314732558291, "phrase": "design_process"}, {"score": 0.004601110504747972, "phrase": "vector_quantizers"}, {"score": 0.004497762477097628, "phrase": "high_computational_cost"}, {"score": 0.004459605573798577, "phrase": "second_challenge"}, {"score": 0.0044092305407288064, "phrase": "vector_quantizer"}, {"score": 0.004334728271766392, "phrase": "training_sample"}, {"score": 0.004201381218977942, "phrase": "fuzzy_clustering_results"}, {"score": 0.0041657281535389615, "phrase": "crisp_partition"}, {"score": 0.004142126987434192, "phrase": "inferior_quality"}, {"score": 0.004106974681603632, "phrase": "third_one"}, {"score": 0.003958049372486465, "phrase": "fuzzy_clustering-based_vector_quantization_algorithm"}, {"score": 0.0038253590626087237, "phrase": "specialized_objective_function"}, {"score": 0.003634587156159668, "phrase": "joint_effect"}, {"score": 0.0036037265181631324, "phrase": "learning_process"}, {"score": 0.0034631271853732405, "phrase": "specific_training_sample"}, {"score": 0.0033660587983313536, "phrase": "distance_calculations"}, {"score": 0.003290360233643709, "phrase": "computational_cost"}, {"score": 0.0031529693013776852, "phrase": "crisp_conditions"}, {"score": 0.0030732954458379666, "phrase": "aggressive_interpretation"}, {"score": 0.0029956288559843235, "phrase": "small_and_spurious_ones"}, {"score": 0.002936577024096783, "phrase": "classical_competitive_agglomeration_method"}, {"score": 0.002878685900205838, "phrase": "small_clusters"}, {"score": 0.0027506009796522245, "phrase": "codeword_migration_process"}, {"score": 0.0027272255676460883, "phrase": "net_effect"}, {"score": 0.0025910754941526194, "phrase": "better_local_minimum"}, {"score": 0.002539978170928796, "phrase": "grayscale_image_compression"}, {"score": 0.0025183881730011597, "phrase": "main_simulation_findings"}, {"score": 0.0024200304529801513, "phrase": "proposed_method"}, {"score": 0.002332133125576037, "phrase": "fast_process"}, {"score": 0.0022093656223897322, "phrase": "reconstructed_images"}, {"score": 0.0021968238865548812, "phrase": "high_quality"}, {"score": 0.0021412594173592513, "phrase": "distortion_measure"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Fuzzy vector quantization", " Competitive agglomeration", " Codeword migration", " Fuzzy mode", " Crisp mode", " Image compression"], "paper_abstract": "The implementation of fuzzy clustering in the design process of vector quantizers faces three challenges. The first is the high computational cost. The second challenge arises because a vector quantizer is required to assign each training sample to only one cluster. However, such an aggressive interpretation of fuzzy clustering results to a crisp partition of inferior quality. The third one is the dependence on initialization. In this paper we develop a fuzzy clustering-based vector quantization algorithm that deals with the aforementioned problems. The algorithm utilizes a specialized objective function, which involves the c-means and the fuzzy c-means along with a competitive agglomeration term. The joint effect is a learning process where the number of codewords (i.e. cluster centers) affected by a specific training sample is gradually reducing and therefore, the number of distance calculations is also reducing. Thus, the computational cost becomes smaller. In addition, the partition is smoothly transferred from fuzzy to crisp conditions and there is no need to employ any aggressive interpretation of fuzzy clustering. The competitive agglomeration term refines large clusters from small and spurious ones. Then, contrary to the classical competitive agglomeration method, we do not discard the small clusters but instead migrate them close to large clusters, rendering more competitive. Thus, the codeword migration process uses the net effect of the competitive agglomeration and acts to further reduce the dependence on initialization in order to obtain a better local minimum. The algorithm is applied to grayscale image compression. The main simulation findings can be summarized as follows: (a) a comparison between the proposed method and other related approaches shows its statistically significant superiority, (b) the algorithm is a fast process, (c) the algorithm is insensitive with respect to its design parameters, and (d) the reconstructed images maintain high quality, which is quantified in terms of the distortion measure. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Fuzzy vector quantization for image compression based on competitive agglomeration and a novel codeword migration strategy", "paper_id": "WOS:000308122700011"}