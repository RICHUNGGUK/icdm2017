{"auto_keywords": [{"score": 0.027094664999720984, "phrase": "poisson_regression"}, {"score": 0.00481495049065317, "phrase": "bayesian_adaptive_regression_splines"}, {"score": 0.004433088968886174, "phrase": "kass"}, {"score": 0.004320055598195391, "phrase": "powerful_reversible-jump_mcmc_engine"}, {"score": 0.004253618550301311, "phrase": "spline-based_generalized_nonparametric_regression"}, {"score": 0.0039772848945723435, "phrase": "small_mean-squared_error"}, {"score": 0.003835972725191194, "phrase": "known_competitors"}, {"score": 0.0036996627006622975, "phrase": "visually-appealing_fits"}, {"score": 0.0035681790580031998, "phrase": "high-frequency_noise"}, {"score": 0.0034771228725942846, "phrase": "sudden_changes"}, {"score": 0.0034236045013591437, "phrase": "high-frequency_signal"}, {"score": 0.003234299589505403, "phrase": "original_implementation"}, {"score": 0.0029467742734417255, "phrase": "data_sets"}, {"score": 0.0027837615811247963, "phrase": "normal_and_poisson_cases"}, {"score": 0.002684740763324991, "phrase": "neurophysiological_and_other_point-process_applications"}, {"score": 0.0025892330566358503, "phrase": "needed_subroutines"}, {"score": 0.002433336289826218, "phrase": "bates"}, {"score": 0.0024082656642556073, "phrase": "venables"}, {"score": 0.0022515427907343092, "phrase": "density_estimation"}, {"score": 0.0022168460543913787, "phrase": "kooperberg"}, {"score": 0.002126912338783293, "phrase": "lapack"}, {"score": 0.0021050068665694715, "phrase": "blas"}], "paper_keywords": ["curve-fitting", " free-knot splines", " nonparametric regression", " peri-stimulus time histogram", " Poisson process"], "paper_abstract": "BARS (DiMatteo, Genovese, and Kass 2001) uses the powerful reversible-jump MCMC engine to perform spline-based generalized nonparametric regression. It has been shown to work well in terms of having small mean-squared error in many examples (smaller than known competitors), as well as producing visually-appealing fits that are smooth (filtering out high-frequency noise) while adapting to sudden changes (retaining high-frequency signal). However, BARS is computationally intensive. The original implementation in S was too slow to be practical in certain situations, and was found to handle some data sets incorrectly. We have implemented BARS in C for the normal and Poisson cases, the latter being important in neurophysiological and other point-process applications. The C implementation includes all needed subroutines for fitting Poisson regression, manipulating B-splines (using code created by Bates and Venables), and finding starting values for Poisson regression (using code for density estimation created by Kooperberg). The code utilizes only freely-available external libraries (LAPACK and BLAS) and is otherwise self-contained. We have also provided wrappers so that BARS can be used easily within S or R.", "paper_title": "An implementation of Bayesian adaptive regression splines (BARS) in C with S and R wrappers", "paper_id": "WOS:000257322300001"}