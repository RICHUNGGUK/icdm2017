{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "unambiguous_meaning"}, {"score": 0.0038242899532391914, "phrase": "disambiguation_rules"}, {"score": 0.0032061793819537633, "phrase": "original_intended_language"}, {"score": 0.002799388549023265, "phrase": "experimental_ambiguity_detection_tool"}, {"score": 0.002724428781940696, "phrase": "gnu_bison"}, {"score": 0.0024111277643627154, "phrase": "grammatical_development"}, {"score": 0.002252880693912436, "phrase": "standard_ml."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grammar verification", " Disambiguation", " GLR"], "paper_abstract": "Although programs convey an unambiguous meaning, the grammars used in practice to describe their syntax are often ambiguous, and completed with disambiguation rules. Whether these rules achieve the removal of all the ambiguities while preserving the original intended language can be difficult to ensure. We present an experimental ambiguity detection tool for GNU Bison, and illustrate how it can assist a grammatical development for a subset of Standard ML. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "An experimental ambiguity detection tool", "paper_id": "WOS:000273230800006"}