{"auto_keywords": [{"score": 0.036611454979003435, "phrase": "mss_problem"}, {"score": 0.024878493288664916, "phrase": "stemfinder"}, {"score": 0.00481495049065317, "phrase": "motif_stem_search_problem"}, {"score": 0.004549734943142138, "phrase": "increasing_interest"}, {"score": 0.004339867166576126, "phrase": "significant_segments"}, {"score": 0.004299064805926241, "phrase": "biological_sequences"}, {"score": 0.004120282671824449, "phrase": "pms"}, {"score": 0.004081385289516914, "phrase": "large_alphabets"}, {"score": 0.003967314311312148, "phrase": "motif_stem_search"}, {"score": 0.0037309384824565695, "phrase": "large-alphabet_inputs"}, {"score": 0.003678414118674967, "phrase": "motif_stem"}, {"score": 0.003626626504149897, "phrase": "l-length_string"}, {"score": 0.0031174595932694036, "phrase": "input_sequences"}, {"score": 0.002641823250595624, "phrase": "regular_expressions"}, {"score": 0.0024960069794216977, "phrase": "possible_motif"}, {"score": 0.002460825108719896, "phrase": "redundant_wildcards"}, {"score": 0.0023694065215394593, "phrase": "efficient_exact_algorithm"}, {"score": 0.0022280223816618736, "phrase": "previous_mss_algorithms"}, {"score": 0.0021049977753042253, "phrase": "smaller_superset"}], "paper_keywords": ["Motif stem search", " pattern driven", " regular expressions"], "paper_abstract": "In recent years, there has been an increasing interest in planted (l, d) motif search (PMS) with applications to discovering significant segments in biological sequences. However, there has been little discussion about PMS over large alphabets. This paper focuses on motif stem search (MSS), which is recently introduced to search motifs on large-alphabet inputs. A motif stem is an l-length string with some wildcards. The goal of the MSS problem is to find a set of stems that represents a superset of all (l, d) motifs present in the input sequences, and the superset is expected to be as small as possible. The three main contributions of this paper are as follows: (1) We build motif stem representation more precisely by using regular expressions. (2) We give a method for generating all possible motif stems without redundant wildcards. (3) We propose an efficient exact algorithm, called StemFinder, for solving the MSS problem. Compared with the previous MSS algorithms, StemFinder runs much faster and reports fewer stems which represent a smaller superset of all (l, d) motifs.", "paper_title": "An Efficient Exact Algorithm for the Motif Stem Search Problem over Large Alphabets", "paper_id": "WOS:000352788300013"}