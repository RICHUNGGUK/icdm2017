{"auto_keywords": [{"score": 0.0415992188895559, "phrase": "ssc"}, {"score": 0.00481495049065317, "phrase": "low-rank_subspace_segmentation"}, {"score": 0.004405348628112645, "phrase": "data_points"}, {"score": 0.004072851768196397, "phrase": "recently_established_algorithms"}, {"score": 0.0040094142308666975, "phrase": "sparse_subspace_clustering"}, {"score": 0.003905864553426306, "phrase": "low-rank_representation"}, {"score": 0.003554661425339528, "phrase": "segmentation_accuracy"}, {"score": 0.003444529872775456, "phrase": "lsh"}, {"score": 0.0029438813080245544, "phrase": "fast_subspace_segmentation_algorithm"}, {"score": 0.0027356847952125433, "phrase": "partial_singular_value_decomposition"}, {"score": 0.0026096659285441384, "phrase": "lrss"}, {"score": 0.0025555322596460036, "phrase": "locality_sensitive_hashing"}, {"score": 0.0024634797027967203, "phrase": "sparse_affinity_graph"}, {"score": 0.002412371116984224, "phrase": "subspace_memberships"}, {"score": 0.002337684811187166, "phrase": "fast_normalized_cut"}, {"score": 0.002241679436497571, "phrase": "final_segmentation_results"}, {"score": 0.0021951623041245897, "phrase": "high_efficiency"}, {"score": 0.0021383680500215267, "phrase": "comparable_effectiveness"}, {"score": 0.0021049977753042253, "phrase": "original_lrss_method"}], "paper_keywords": ["Locality sensitive hashing", " low-rank subspace segmentation", " singular value decomposition"], "paper_abstract": "Subspace segmentation is the problem of segmenting (or grouping) a set of n data points into a number of clusters, with each cluster being a (linear) subspace. The recently established algorithms such as Sparse Subspace Clustering (SSC), Low-Rank Representation (LRR) and Low-Rank Subspace Segmentation (LRSS) are effective in terms of segmentation accuracy, but computationally inefficient as they possess a complexity of O(n(3)), which is too high to afford for the case where n is very large. In this paper we devise a fast subspace segmentation algorithm with complexity of O(n log(n)). This is achieved by firstly using partial Singular Value Decomposition (SVD) to approximate the solution of LRSS, secondly utilizing Locality Sensitive Hashing (LSH) to build a sparse affinity graph that encodes the subspace memberships, and finally adopting a fast Normalized Cut (NCut) algorithm to produce the final segmentation results. Besides of high efficiency, our algorithm also has comparable effectiveness as the original LRSS method.", "paper_title": "Fast Low-Rank Subspace Segmentation", "paper_id": "WOS:000337965900020"}