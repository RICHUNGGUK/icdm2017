{"auto_keywords": [{"score": 0.04782450280555526, "phrase": "spanning_tree"}, {"score": 0.004312622975366676, "phrase": "communication_networks"}, {"score": 0.0033883824438527316, "phrase": "hamiltonian_path_problem"}, {"score": 0.003342153814646643, "phrase": "lu"}, {"score": 0.00329621503511277, "phrase": "ravi"}, {"score": 0.0031626225189867354, "phrase": "constant_factor_approximation"}, {"score": 0.002286781334850213, "phrase": "claw-free_graphs"}, {"score": 0.002194011800331242, "phrase": "cubic_graphs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["approximation algorithms", " graph algorithms", " spanning trees"], "paper_abstract": "The problem of finding a spanning tree with few leaves is motivated by the design of communication networks, where the cost of the devices depends on their routing functionality (ending, forwarding, or routing a connection). Besides this application, the problem has its own theoretical importance as a generalization of the Hamiltonian path problem. Lu and Ravi showed that there is no constant factor approximation for minimizing the number of leaves of a spanning tree, unless P = NP. Thus instead of minimizing the number of leaves, we are going to deal with maximizing the number of non-leaves: we give a linear-time 2-approximation for arbitrary graphs, a 3/2-approximation for claw-free graphs, and a 6/5-approximation for cubic graphs. (c) 2007 Elsevier B.V. All fights reserved.", "paper_title": "On finding spanning trees with few leaves", "paper_id": "WOS:000253033500002"}