{"auto_keywords": [{"score": 0.05007689684343519, "phrase": "cloud_computing"}, {"score": 0.04935066280637369, "phrase": "queuing_game_model"}, {"score": 0.03431168182673599, "phrase": "vm"}, {"score": 0.033471679793786145, "phrase": "optimal_queue_length"}, {"score": 0.004646088032529303, "phrase": "application_providers"}, {"score": 0.003438058620195309, "phrase": "ccp's_admission_fee"}, {"score": 0.003317340680672008, "phrase": "ccp"}, {"score": 0.003120099687922751, "phrase": "fixed_admission_fee_distribution"}, {"score": 0.0030569913145731408, "phrase": "position_number"}, {"score": 0.003010496595090984, "phrase": "new_service_request"}, {"score": 0.0027041907335656782, "phrase": "ccp's_payoff"}, {"score": 0.002530359917257626, "phrase": "multiple_vms_situation"}, {"score": 0.0024918548761791435, "phrase": "big_difference"}, {"score": 0.002466510117718297, "phrase": "single_vm"}, {"score": 0.002441422510910065, "phrase": "multiple_vms"}, {"score": 0.002392008392892289, "phrase": "latter_one"}, {"score": 0.0023079225317714815, "phrase": "service_requests"}, {"score": 0.0022041312401435346, "phrase": "corresponding_algorithm"}, {"score": 0.0021595094738887767, "phrase": "simulation_results"}, {"score": 0.002126635713519051, "phrase": "good_performance"}], "paper_keywords": ["Cloud Computing", " queue game", " service scheduling", " optimal queue length"], "paper_abstract": "Cloud Computing allows application providers seamlessly scaling their services and enables users scaling their usage according to their needs. In this paper, using queuing game model, we present service scheduling schemes which are used in software as a service (SaaS). The object is maximizing the Cloud Computing platform's (CCP's) payoff via controlling the service requests whether to join or balk, and controlling the value of CCP's admission fee. Firstly, we treat the CCP as one virtual machine (VM) and analyze the optimal queue length with a fixed admission fee distribution. If the position number of a new service request is bigger than the optimal queue length, it balks. Otherwise, it joins in. Under this scheme, the CCP's payoff can be maximized. Secondly, we extend this achievement to the multiple VMs situation. A big difference between single VM and multiple VMs is that the latter one needs to decide which VM the service requests turn to for service. We use a corresponding algorithm solve it. Simulation results demonstrate the good performance of our schemes.", "paper_title": "Service Scheduling in Cloud Computing based on Queuing Game Model", "paper_id": "WOS:000338845900003"}