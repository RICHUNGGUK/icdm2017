{"auto_keywords": [{"score": 0.04416061972771482, "phrase": "vm"}, {"score": 0.009652593467283723, "phrase": "targeted_application"}, {"score": 0.008505152602813851, "phrase": "swiper"}, {"score": 0.00481495049065317, "phrase": "virtual_machine_vulnerability"}, {"score": 0.004774324145784758, "phrase": "third-party_clouds"}, {"score": 0.004634799977448855, "phrase": "emerging_paradigm"}, {"score": 0.00459568664065473, "phrase": "cloud_computing"}, {"score": 0.004518442937844318, "phrase": "amazon_elastic_compute_cloud"}, {"score": 0.0043863636475983845, "phrase": "highly_flexible_yet_robust_environment"}, {"score": 0.004349337717774093, "phrase": "large-scale_applications"}, {"score": 0.004258128672571261, "phrase": "multiple_virtual_machines"}, {"score": 0.004012757312094424, "phrase": "dram"}, {"score": 0.00378145978325955, "phrase": "independently_managed_vm"}, {"score": 0.003593812067062062, "phrase": "physical_isolation"}, {"score": 0.0034738975998176323, "phrase": "security_threats"}, {"score": 0.00327356326590461, "phrase": "security_vulnerability"}, {"score": 0.003097865379563127, "phrase": "shared_resources"}, {"score": 0.002658863179011018, "phrase": "data-intensive_applications"}, {"score": 0.0025160740422447837, "phrase": "carefully_designed_workload"}, {"score": 0.0024842242921857705, "phrase": "significant_delays"}, {"score": 0.0024114635128122783, "phrase": "minimum_cost"}, {"score": 0.0023013968622710847, "phrase": "comprehensive_set"}, {"score": 0.0021049977753042253, "phrase": "small_amount"}], "paper_keywords": ["Cloud computing", " virtualization", " scheduling"], "paper_abstract": "The emerging paradigm of cloud computing, e.g., Amazon Elastic Compute Cloud (EC2), promises a highly flexible yet robust environment for large-scale applications. Ideally, while multiple virtual machines (VM) share the same physical resources (e.g., CPUs, caches, DRAM, and I/O devices), each application should be allocated to an independently managed VM and isolated from one another. Unfortunately, the absence of physical isolation inevitably opens doors to a number of security threats. In this paper, we demonstrate in EC2 a new type of security vulnerability caused by competition between virtual I/O workloads-i.e., by leveraging the competition for shared resources, an adversary could intentionally slow down the execution of a targeted application in a VM that shares the same hardware. In particular, we focus on I/O resources such as hard-drive throughput and/or network bandwidth-which are critical for data-intensive applications. We design and implement Swiper, a framework which uses a carefully designed workload to incur significant delays on the targeted application and VM with minimum cost (i.e., resource consumption). We conduct a comprehensive set of experiments in EC2, which clearly demonstrates that Swiper is capable of significantly slowing down various server applications while consuming a small amount of resources.", "paper_title": "Swiper: Exploiting Virtual Machine Vulnerability in Third-Party Clouds with Competition for I/O Resources", "paper_id": "WOS:000354526000020"}