{"auto_keywords": [{"score": 0.02434336201065482, "phrase": "fixed_integer"}, {"score": 0.010612387000973441, "phrase": "generalized_connectivity"}, {"score": 0.004744638725034369, "phrase": "np"}, {"score": 0.004725048156646577, "phrase": "nontrivial_connected_graph"}, {"score": 0.004535950496583731, "phrase": "thousand_currency"}, {"score": 0.004521720473366683, "phrase": "signka_parts"}, {"score": 0.004493393608763752, "phrase": "thousand_currency_signn"}, {"score": 0.0044372687709897446, "phrase": "set_s"}, {"score": 0.004409468620826287, "phrase": "k_vertices"}, {"score": 0.004286498418857255, "phrase": "maximum_number"}, {"score": 0.004219663341808313, "phrase": "edge-disjoint_trees_t"}, {"score": 0.0038278398921822404, "phrase": "distinct_integers"}, {"score": 0.003779996603264111, "phrase": "thousand_currency_signi"}, {"score": 0.003756298824153418, "phrase": "ja_parts"}, {"score": 0.00373274905589689, "phrase": "thousand_currency_signa"}, {"score": 0.0031895204047028554, "phrase": "k-subsets_s"}, {"score": 0.002957516535697149, "phrase": "polynomial-time_algorithms"}, {"score": 0.0024485031231407522, "phrase": "disjoint_trees"}, {"score": 0.0023875955141436363, "phrase": "polynomial-time_algorithm"}], "paper_keywords": ["k-connectivity", " Internally disjoint trees", " Complexity", " Polynomial-time", " NP-complete"], "paper_abstract": "Let G be a nontrivial connected graph of order n and let k be an integer with 2a parts per thousand currency signka parts per thousand currency signn. For a set S of k vertices of G, let kappa(S) denote the maximum number a\"\" of edge-disjoint trees T (1),T (2),aEuro broken vertical bar,T (a\"\") in G such that V(T (i) )a (c) V(T (j) )=S for every pair i,j of distinct integers with 1a parts per thousand currency signi,ja parts per thousand currency signa\"\". Chartrand et al. generalized the concept of connectivity as follows: The k-connectivity, denoted by kappa (k) (G), of G is defined by kappa (k) (G)=min{kappa(S)}, where the minimum is taken over all k-subsets S of V(G). Thus kappa (2)(G)=kappa(G), where kappa(G) is the connectivity of G, for which there are polynomial-time algorithms to solve it. This paper mainly focus on the complexity of determining the generalized connectivity of a graph. At first, we obtain that for two fixed positive integers k (1) and k (2), given a graph G and a k (1)-subset S of V(G), the problem of deciding whether G contains k (2) internally disjoint trees connecting S can be solved by a polynomial-time algorithm. Then, we show that when k (1) is a fixed integer of at least 4, but k (2) is not a fixed integer, the problem turns out to be NP-complete. On the other hand, when k (2) is a fixed integer of at least 2, but k (1) is not a fixed integer, we show that the problem also becomes NP-complete.", "paper_title": "Note on the hardness of generalized connectivity", "paper_id": "WOS:000308969100017"}