{"auto_keywords": [{"score": 0.026504271649023595, "phrase": "parameter_data"}, {"score": 0.01368851482052897, "phrase": "original_model"}, {"score": 0.004795200895225848, "phrase": "based_on_data"}, {"score": 0.004736434518535051, "phrase": "mesh_formation."}, {"score": 0.004659192888931046, "phrase": "reversible_watermark_technique"}, {"score": 0.004527024978801684, "phrase": "normal_watermark"}, {"score": 0.004291393968030603, "phrase": "reconstructed_model"}, {"score": 0.00405127920820053, "phrase": "using_method"}, {"score": 0.003985166330358716, "phrase": "original_information"}, {"score": 0.0036703791815812328, "phrase": "reference_keys"}, {"score": 0.0035515148917169173, "phrase": "data_amount"}, {"score": 0.0028086649378423357, "phrase": "coordinate_transformations"}, {"score": 0.0027856252557826467, "phrase": "invariant_space"}, {"score": 0.002684257009647205, "phrase": "proper_positions"}, {"score": 0.002618730478351454, "phrase": "outlook_damage"}, {"score": 0.002157697367447098, "phrase": "revisable_process"}, {"score": 0.0021049977753042253, "phrase": "original_object"}], "paper_keywords": ["Reversible watermark", " 3D vertices", " Mesh formation", " Data embedding", " Extracting", " PSNR"], "paper_abstract": "The development of reversible watermark technique is more difficult than that of normal watermark. This is due to that after extracting the watermark, the reconstructed model must exactly be retrieved as original model without any distortion. Usually, the using method needs to derive original information from the embedding/extracting formulas and the parameters after embedding. In the process of derivation, we might need some reference keys to retrieve the model. If the data amount of keys become too large, it will cause some difficulties in the process. In this paper, we proposed a method to deal with those problems. First, we separate the 3-D model vertices into N groups. In order to resist the attacks such as rotation, translation and scaling, we made some coordinate transformations into invariant space. Then, embed the watermark into some proper positions which does not cause any outlook damage to the original model. After that, we can produce some parameter data which are essential to retrieve the model. We apply the formation of mesh to hide those parameter data. After extracting the watermark, we also retain those parameter data which help to do the revisable process without causing any influence on original object.", "paper_title": "REVERSIBLE WATERMARK FOR 3D VERTICES BASED ON DATA HIDING IN MESH FORMATION", "paper_id": "WOS:000267923200011"}