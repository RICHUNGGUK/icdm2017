{"auto_keywords": [{"score": 0.04783820101909737, "phrase": "neural_p_systems"}, {"score": 0.00512264810617697, "phrase": "inverse-morphic_images"}, {"score": 0.00481495049065317, "phrase": "string_languages"}, {"score": 0.003975200317233532, "phrase": "computing_devices"}, {"score": 0.0038810583785936505, "phrase": "binary_string_generators"}, {"score": 0.0036553070575015344, "phrase": "spike_trains"}, {"score": 0.002981216610222911, "phrase": "\"direct\"_generative_capacity"}, {"score": 0.002373472641477602, "phrase": "regular_languages"}, {"score": 0.0022085455097790537, "phrase": "finite_spiking_neural_p_systems"}, {"score": 0.0021049977753042253, "phrase": "enumerable_languages"}], "paper_keywords": ["membrane computing", " spiking neural P systems", " Chomsky hierarchy"], "paper_abstract": "We continue the study of spiking neural P systems by considering these computing devices as binary string generators: the set of spike trains of halting computations of a given system constitutes the language generated by that system. Although the \"direct\" generative capacity of spiking neural P systems is rather restricted (some very simple languages cannot be generated in this framework), regular languages are inverse-morphic images of languages of finite spiking neural P systems, and recursively enumerable languages are projections of inverse-morphic images of languages generated by spiking neural P systems.", "paper_title": "On string languages generated by spiking neural P systems", "paper_id": "WOS:000244426400009"}