{"auto_keywords": [{"score": 0.04858132305104682, "phrase": "virus_scanning"}, {"score": 0.00481495049065317, "phrase": "backward_hashing"}, {"score": 0.00454725669814484, "phrase": "computationally_intensive_string_matching"}, {"score": 0.004461359547152617, "phrase": "large_number"}, {"score": 0.004349337717774093, "phrase": "different_characteristics"}, {"score": 0.004055511503825102, "phrase": "matching_algorithms"}, {"score": 0.003903663808332582, "phrase": "better_performance"}, {"score": 0.003805591825381666, "phrase": "different_signature_characteristics"}, {"score": 0.0036864465771943933, "phrase": "hybrid_approach"}, {"score": 0.003548368289666932, "phrase": "long_and_short_ones"}, {"score": 0.0034812740368914455, "phrase": "open-source_clamav"}, {"score": 0.0032666255024083983, "phrase": "wu-manber_algorithm"}, {"score": 0.0029691377785333872, "phrase": "average_skip_distance"}, {"score": 0.0028944757265206332, "phrase": "aho-corasick_algorithm"}, {"score": 0.002768293851511292, "phrase": "automaton_sizes"}, {"score": 0.002664513608074113, "phrase": "bad-block_heuristic"}, {"score": 0.0026140878612307536, "phrase": "long_shift_distance"}, {"score": 0.002548331088496964, "phrase": "verification_frequency"}, {"score": 0.0024063484128685367, "phrase": "original_wm_implementation"}, {"score": 0.0023758843175179702, "phrase": "clamav."}, {"score": 0.0023013968622710847, "phrase": "ac_performance"}, {"score": 0.0022292394795878643, "phrase": "better_cache_locality"}], "paper_keywords": ["String matching", " automaton", " filtering", " virus scanning"], "paper_abstract": "Virus scanning involves computationally intensive string matching against a large number of signatures of different characteristics. Matching a variety of signatures challenges the selection of matching algorithms, as each approach has better performance than others for different signature characteristics. We propose a hybrid approach that partitions the signatures into long and short ones in the open-source ClamAV for virus scanning. An algorithm enhanced from the Wu-Manber algorithm, namely the Backward Hashing algorithm, is responsible for only long patterns to lengthen the average skip distance, while the Aho-Corasick algorithm scans for only short patterns to reduce the automaton sizes. The former utilizes the bad-block heuristic to exploit long shift distance and reduce the verification frequency, so it is much faster than the original WM implementation in ClamAV. The latter increases the AC performance by around 50 percent due to better cache locality. We also rank the factors to indicate their importance for the string matching performance.", "paper_title": "A Hybrid Algorithm of Backward Hashing and Automaton Tracking for Virus Scanning", "paper_id": "WOS:000287668100013"}