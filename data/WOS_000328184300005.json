{"auto_keywords": [{"score": 0.0351915666065727, "phrase": "soft_errors"}, {"score": 0.0285945522215814, "phrase": "hybrid_systems"}, {"score": 0.00481495049065317, "phrase": "hybrid_system"}, {"score": 0.00476255173523596, "phrase": "gpgpu."}, {"score": 0.00471071771178029, "phrase": "general_purpose_graphics_processing_units"}, {"score": 0.004508942069742167, "phrase": "scientific_computing"}, {"score": 0.004153520149706423, "phrase": "fault_tolerance"}, {"score": 0.003826007045267751, "phrase": "graphics_applications"}, {"score": 0.0036419834462626125, "phrase": "hybrid_computing_system"}, {"score": 0.003175792987190496, "phrase": "bit_flips"}, {"score": 0.0030229485340586473, "phrase": "soft_error_resilient_algorithm"}, {"score": 0.002990030929920028, "phrase": "qr"}, {"score": 0.002564505790176378, "phrase": "upper_hessenberg_matrix"}, {"score": 0.002522662955545598, "phrase": "upper_triangular_form"}, {"score": 0.0024410093024417527, "phrase": "right_factor_r"}, {"score": 0.0022980978400845144, "phrase": "experimental_results"}, {"score": 0.0022482261385133617, "phrase": "tolerant_qr_factorization"}, {"score": 0.002128220632893247, "phrase": "entire_matrix"}], "paper_keywords": ["Fault tolerance", " Soft error", " QR factorization", " High performance computing", " Hybrid algorithm"], "paper_abstract": "The general purpose graphics processing units (GPGPUs) are increasingly deployed for scientific computing due to their performance advantages over CPUs. What followed is the fact that fault tolerance has become a more serious concern compared to the period when GPGPUs were used exclusively for graphics applications. Using CPUs and CPUs together in a hybrid computing system increases flexibility and performance but also increases the possibility of the computations being affected by soft errors, for example, in the form of bit flips. In this work, we propose a soft error resilient algorithm for QR factorization on such hybrid systems. Our contributions include: (1) a checkpointing and recovery mechanism for the left-factor Q whose performance is scalable on hybrid systems; (2) optimized Givens rotation utilities on GPGPUs to efficiently reduce an upper Hessenberg matrix to an upper triangular form for the protection of the right factor R; and (3) a recovery algorithm based on QR update on GPGPUs. Experimental results show that our fault tolerant QR factorization can successfully detect and recover from soft errors in the entire matrix with little overhead on hybrid systems with GPGPUs. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Soft error resilient QR factorization for hybrid system with GPGPU", "paper_id": "WOS:000328184300005"}