{"auto_keywords": [{"score": 0.045654224554975205, "phrase": "nominal_types"}, {"score": 0.00481495049065317, "phrase": "java_sam_typed"}, {"score": 0.004257360656055417, "phrase": "last_proposal"}, {"score": 0.004183137595671171, "phrase": "java_closures"}, {"score": 0.003539252646181146, "phrase": "sam_types"}, {"score": 0.0032410683344688625, "phrase": "target_types"}, {"score": 0.003101503914610488, "phrase": "contextual_typing"}, {"score": 0.00284009509859163, "phrase": "type_inference"}, {"score": 0.0027417911324611917, "phrase": "omitted_type_annotations"}, {"score": 0.002646880721119838, "phrase": "closure_arguments"}, {"score": 0.0025106241866273897, "phrase": "sound_and_complete_type_system"}, {"score": 0.0021049977753042253, "phrase": "designed_inference_process"}], "paper_keywords": [""], "paper_abstract": "The last proposal for Java closures, as emerged in JSR 000335, is mainly innovative in: (1) Use of nominal types, SAM types, for closures; (2) Introduction of target types and compatibility for a contextual typing of closures; (3) Need for a type inference that reconstructs the omitted type annotations of closures and closure arguments. The paper provides a sound and complete type system, with nominal types, for such a type inference and discusses role and formalization of targeting and of compatibility in the designed inference process.", "paper_title": "Java SAM Typed Closures: A Sound and Complete Type Inference System for Nominal Types", "paper_id": "WOS:000327181800003"}