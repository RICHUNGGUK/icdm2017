{"auto_keywords": [{"score": 0.04833320368251523, "phrase": "amd"}, {"score": 0.00481495049065317, "phrase": "speed_scaling"}, {"score": 0.004726382602809228, "phrase": "weighted_flow_time._intel's_speedstep"}, {"score": 0.004388035083357706, "phrase": "windows_xp_operating_system"}, {"score": 0.003961842092184655, "phrase": "battery_life"}, {"score": 0.003712362078915926, "phrase": "operating_system"}, {"score": 0.0035110198699787013, "phrase": "job_selection_policy"}, {"score": 0.003199345207727474, "phrase": "speed_scaling_policy"}, {"score": 0.0027570267191549774, "phrase": "online_speed"}, {"score": 0.0025121156016001886, "phrase": "weighted_flow_time"}, {"score": 0.0021646022201798247, "phrase": "weighted_flow_time_subject"}, {"score": 0.0021049977753042253, "phrase": "energy_constraint"}], "paper_keywords": ["speed scaling", " flow time", " energy minimization", " online algorithms"], "paper_abstract": "Intel's SpeedStep and AMD's PowerNOW technologies allow the Windows XP operating system to dynamically change the speed of the processor to prolong battery life. In this setting, the operating system must not only have a job selection policy to determine which job to run, but also a speed scaling policy to determine the speed at which the job will be run. We give an online speed scaling algorithm that is O(1)-competitive for the objective of weighted flow time plus energy. This algorithm also allows us to efficiently construct an O(1)-approximate schedule for minimizing weighted flow time subject to an energy constraint.", "paper_title": "SPEED SCALING FOR WEIGHTED FLOW TIME", "paper_id": "WOS:000271724000005"}