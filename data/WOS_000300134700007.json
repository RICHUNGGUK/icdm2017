{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "shared_arrays"}, {"score": 0.004748556604045108, "phrase": "message-driven_parallel_programs"}, {"score": 0.0045547927862194856, "phrase": "safe_and_efficient_combination"}, {"score": 0.0044608829094248985, "phrase": "object-based_message-driven_execution"}, {"score": 0.0038822311096089307, "phrase": "loosely_coupled_parallel_modules"}, {"score": 0.003775803846431323, "phrase": "common_shared_array"}, {"score": 0.003697895355947004, "phrase": "loose_coupling"}, {"score": 0.003621588555525458, "phrase": "better_flexibility"}, {"score": 0.003571591012750155, "phrase": "parallel_execution"}, {"score": 0.0035222812668916736, "phrase": "greater_ease"}, {"score": 0.003449585750738867, "phrase": "multi-physics_simulations"}, {"score": 0.0033549790559972053, "phrase": "case_study"}, {"score": 0.0031955979242589494, "phrase": "new_method"}, {"score": 0.0031514627590375354, "phrase": "molecular_dynamics_simulation_benefits"}, {"score": 0.002723186210025975, "phrase": "determinacy_constraints"}, {"score": 0.00266693888510356, "phrase": "multiphase_shared_array_programming_model"}, {"score": 0.002419393934835993, "phrase": "combined_programming_model"}, {"score": 0.002272501735900584, "phrase": "natural_means"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel programming models", " Composition", " Distributed shared arrays", " Asynchronous execution"], "paper_abstract": "This paper describes a safe and efficient combination of the object-based message-driven execution and shared array parallel programming models. In particular, we demonstrate how this combination engenders the composition of loosely coupled parallel modules safely accessing a common shared array. That loose coupling enables both better flexibility in parallel execution and greater ease of implementing multi-physics simulations. As a case study, we describe how the parallelization of a new method for molecular dynamics simulation benefits from both of these advantages. We also describe a system of typed handle objects that embed some of the determinacy constraints of the Multiphase Shared Array programming model in the C++ type system, to catch some violations at compile time. The combined programming model communicates in terms of these handles as a natural means of detecting and preventing errors. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Using shared arrays in message-driven parallel programs", "paper_id": "WOS:000300134700007"}