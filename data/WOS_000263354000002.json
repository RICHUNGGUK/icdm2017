{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "batch_codes"}, {"score": 0.01451602755009293, "phrase": "batch_code"}, {"score": 0.004694094178012391, "phrase": "ishai"}, {"score": 0.004654484176847594, "phrase": "kushilevitz"}, {"score": 0.004615212350195487, "phrase": "ostrovsky"}, {"score": 0.0045762581158055385, "phrase": "sahai"}, {"score": 0.004276216827737399, "phrase": "n_items"}, {"score": 0.004098725744818192, "phrase": "k_items"}, {"score": 0.0037178503842258087, "phrase": "total_storage"}, {"score": 0.003245900020944865, "phrase": "combinatorial_problem"}, {"score": 0.0029817668105720924, "phrase": "special_case"}, {"score": 0.002704403349815203, "phrase": "storage_requirement"}, {"score": 0.0026363807171515255, "phrase": "uniform_codes"}, {"score": 0.002548331088496964, "phrase": "precisely_c"}, {"score": 0.002391067964886602, "phrase": "new_results"}, {"score": 0.002168531704054597, "phrase": "improved_existence_results"}, {"score": 0.0021049977753042253, "phrase": "probabilistic_method"}], "paper_keywords": ["Batch codes", " combinatorial set system"], "paper_abstract": "In this paper, we study batch codes, which were introduced by Ishai, Kushilevitz, Ostrovsky and Sahai in [4]. A batch code specifies a method to distribute a database of n items among m devices (servers) in such a way that any k items can be retrieved by reading at most t items from each of the servers. It is of interest to devise batch codes that minimize the total storage, denoted by N, over all m servers. We restrict out attention to batch codes in which every server stores a subset of the items. This is purely a combinatorial problem, so we call this kind of batch code a \"combinatorial batch code\". We only study the special case t = 1, where, for various parameter situations, we are able to present batch codes that are optimal with respect to the storage requirement, N. We also study uniform codes, where every item is stored in precisely c of the m servers ( such a code is said to have rate 1/c). Interesting new results are presented in the cases c = 2, k - 2 and k - 1. In addition, we obtain improved existence results for arbitrary fixed c using the probabilistic method.", "paper_title": "COMBINATORIAL BATCH CODES", "paper_id": "WOS:000263354000002"}