{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "critical_information_systems"}, {"score": 0.04953289560992989, "phrase": "model-driven_engineering"}, {"score": 0.0046253989970108985, "phrase": "software_artefacts"}, {"score": 0.0045726187330434025, "phrase": "abstract_models"}, {"score": 0.004342430078306461, "phrase": "domain_knowledge"}, {"score": 0.0042928648367867835, "phrase": "implementation_strategies"}, {"score": 0.0040767015025213625, "phrase": "quite_different_systems"}, {"score": 0.003961330917648707, "phrase": "successive_versions"}, {"score": 0.0038271712887391015, "phrase": "model-driven_approach"}, {"score": 0.003221316290858497, "phrase": "new_system"}, {"score": 0.002444544487772349, "phrase": "formal_analysis"}, {"score": 0.002402731767209114, "phrase": "transformation_strategy"}, {"score": 0.0023480892503414596, "phrase": "associated_development_methodology"}, {"score": 0.002268441347979241, "phrase": "systems_integrity"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model-driven engineering", " Formal methods", " Critical systems", " Information systems", " Data migration"], "paper_abstract": "Model-driven engineering is the generation of software artefacts from abstract models. This is achieved through transformations that encode domain knowledge and implementation strategies. The same transformations can be used to produce quite different systems, or to produce successive versions of the same system. A model-driven approach can thus reduce the cost of development. It can also reduce the cost of verification: if the transformations are shown or assumed to be correct, each new system or version can be verified in terms of its model, rather than its implementation. This paper introduces an approach to model-driven engineering that is particularly suited to the development of critical information systems. The language of the models, and the language of the transformations, are amenable to formal analysis. The transformation strategy, and the associated development methodology, are designed to preserve systems integrity and availability. (C) 2014 The Authors. Published by Elsevier B.V.", "paper_title": "Formal model-driven engineering of critical information systems", "paper_id": "WOS:000351964100006"}