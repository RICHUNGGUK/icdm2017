{"auto_keywords": [{"score": 0.03644451033122438, "phrase": "planning_tasks"}, {"score": 0.00481495049065317, "phrase": "heuristic_planning"}, {"score": 0.004664352260912174, "phrase": "great_success"}, {"score": 0.004605434064238641, "phrase": "heuristic_search"}, {"score": 0.004461359547152617, "phrase": "ai_planning"}, {"score": 0.004321772629297024, "phrase": "right_design"}, {"score": 0.004267163206961948, "phrase": "domain-independent_heuristics"}, {"score": 0.0040298010803060495, "phrase": "computational_cost"}, {"score": 0.003928572641266562, "phrase": "heuristic_function"}, {"score": 0.00385431710959668, "phrase": "search_node"}, {"score": 0.003245900020944865, "phrase": "additional_domain-dependent_heuristics"}, {"score": 0.0031044458412608058, "phrase": "learning-based_planners"}, {"score": 0.002988101395789399, "phrase": "domain-dependent_heuristics"}, {"score": 0.0029502941554043964, "phrase": "previous_solved_problems"}, {"score": 0.002785978280998868, "phrase": "case-based_reasoning_approach"}, {"score": 0.002733260122876447, "phrase": "abstracted_state_transitions"}, {"score": 0.002664513608074113, "phrase": "domain_control_knowledge"}, {"score": 0.0025974916908139472, "phrase": "planning_process"}, {"score": 0.0025000985765154028, "phrase": "retrieved_cases"}, {"score": 0.0023309080951251335, "phrase": "different_heuristic_search_algorithms"}, {"score": 0.0022010126160835024, "phrase": "cbr_guidance"}, {"score": 0.0021319959284827896, "phrase": "considerable_number"}, {"score": 0.0021049977753042253, "phrase": "planning_benchmarks"}], "paper_keywords": ["Case-based reasoning", " Automated planning", " Search algorithms"], "paper_abstract": "Most of the great success of heuristic search as an approach to AI Planning is due to the right design of domain-independent heuristics. Although many heuristic planners perform reasonably well, the computational cost of computing the heuristic function in every search node is very high, causing the planner to scale poorly when increasing the size of the planning tasks. For tackling this problem, planners can incorporate additional domain-dependent heuristics in order to improve their performance. Learning-based planners try to automatically acquire these domain-dependent heuristics using previous solved problems. In this work, we present a case-based reasoning approach that learns abstracted state transitions that serve as domain control knowledge for improving the planning process. The recommendations from the retrieved cases are used as guidance for pruning or ordering nodes in different heuristic search algorithms applied to planning tasks. We show that the CBR guidance is appropriate for a considerable number of planning benchmarks.", "paper_title": "A case-based approach to heuristic planning", "paper_id": "WOS:000320039500013"}