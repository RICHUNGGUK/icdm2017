{"auto_keywords": [{"score": 0.030993996393604676, "phrase": "requirements_relations"}, {"score": 0.009452979655151517, "phrase": "source_code"}, {"score": 0.008762327318161484, "phrase": "relating_requirements"}, {"score": 0.00481495049065317, "phrase": "formal_trace_semantics"}, {"score": 0.004681653551412616, "phrase": "software_systems"}, {"score": 0.004533806239310673, "phrase": "software_system"}, {"score": 0.00440825801245188, "phrase": "impact_of_requirements_changes"}, {"score": 0.00432070565627091, "phrase": "design_elements"}, {"score": 0.004052007312730483, "phrase": "considerable_research"}, {"score": 0.003939748053452577, "phrase": "design_artifacts"}, {"score": 0.0036357909244344486, "phrase": "well-defined_semantics"}, {"score": 0.003121183062764093, "phrase": "automatic_trace_generation"}, {"score": 0.0029034358982402346, "phrase": "architecture_verification_techniques"}, {"score": 0.0028456853685842293, "phrase": "trace_metamodel"}, {"score": 0.0028003107731426322, "phrase": "commonly_used_trace_types"}, {"score": 0.002604890546456604, "phrase": "tool_support"}, {"score": 0.002209060366991921, "phrase": "model_transformation"}, {"score": 0.0021913696372085484, "phrase": "atl"}, {"score": 0.0021738146596180404, "phrase": "term-rewriting_logic"}, {"score": 0.00215640493435914, "phrase": "maude"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Trace generation and validation", " Requirements metamodel", " Trace metamodel", " Software architecture"], "paper_abstract": "The size and complexity of software systems make integration of the new/modified requirements to the software system costly and time consuming. The impact of requirements changes on other requirements, design elements and source code should be traced to determine parts of the software to be changed. Considerable research has been devoted to relating requirements and design artifacts with source code. Less attention has been paid to relating requirements (R) with architecture (A) by using well-defined semantics of traces. Traces between R&A might be manually assigned. This is time-consuming, and error prone. Traces might be incomplete and invalid. In this paper, we present an approach for automatic trace generation and validation of traces between requirements (R) and architecture (A). Requirements relations and architecture verification techniques are used. A trace metamodel is defined with commonly used trace types between R&A. We use the semantics of traces and requirements relations for generating and validating traces with a tool support. The tool provides the following: (1) generation and validation of traces by using requirements relations and/or verification of architecture, (2) generation and validation of requirements relations by using traces. The tool is based on model transformation in ATL and term-rewriting logic in Maude. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Generation and validation of traces between requirements and architecture based on formal trace semantics", "paper_id": "WOS:000330257800008"}