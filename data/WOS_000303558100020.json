{"auto_keywords": [{"score": 0.04550288640963527, "phrase": "api"}, {"score": 0.00481495049065317, "phrase": "api_designs"}, {"score": 0.004637478829869904, "phrase": "dsl-based_framework_integration"}, {"score": 0.004522796947899013, "phrase": "textual_dsls"}, {"score": 0.004274981117736524, "phrase": "object-oriented_application_frameworks"}, {"score": 0.003990385737207714, "phrase": "dsl-based_application_development"}, {"score": 0.00389164348807591, "phrase": "empirical_evidence"}, {"score": 0.003791372216819027, "phrase": "dsl."}, {"score": 0.003306559295382181, "phrase": "comparative_experiment"}, {"score": 0.0031646057802503526, "phrase": "non-trivial_application_scenario"}, {"score": 0.0028625406368744995, "phrase": "api_complexity"}, {"score": 0.0027916287357898544, "phrase": "api_variant"}, {"score": 0.0027395968397212053, "phrase": "main_observation"}, {"score": 0.0026055251533586804, "phrase": "textual_dsl"}, {"score": 0.0025569530630374995, "phrase": "smallest_api_complexity"}, {"score": 0.0021995257343837547, "phrase": "future_empirical_work"}, {"score": 0.002158505888557746, "phrase": "experiment_design"}, {"score": 0.0021049977753042253, "phrase": "similar_api_design_evaluations"}], "paper_keywords": ["Design", " Experimentation", " Measurement", " Domain-Specific Language", " Application Programming Interface", " Complexity", " Object Points"], "paper_abstract": "Embedded, textual DSLs are often provided as an API wrapped around object-oriented application frameworks to ease framework integration. While literature presents claims that DSL-based application development is beneficial, empirical evidence for this is rare. We present the results of an experiment comparing the complexity of three different object-oriented framework APIs and an embedded, textual DSL. For this comparative experiment, we implemented the same, non-trivial application scenario using these four different APIs. Then, we performed an Object-Points (OP) analysis, yielding indicators for the API complexity specific to each API variant. The main observation for our experiment is that the embedded, textual DSL incurs the smallest API complexity. Although the results are exploratory, as well as limited to the given application scenario and a single embedded DSL, our findings can direct future empirical work. The experiment design is applicable for similar API design evaluations.", "paper_title": "Comparing Complexity of API Designs: An Exploratory Experiment on DSL-based Framework Integration", "paper_id": "WOS:000303558100020"}