{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "light_logics"}, {"score": 0.004357245559948974, "phrase": "so-called_light_logics"}, {"score": 0.003907212558276185, "phrase": "logical_systems"}, {"score": 0.0038368442918503072, "phrase": "quite_remarkable_normalization_properties"}, {"score": 0.0036998728605395384, "phrase": "type_assignment_system"}, {"score": 0.0036332251283046997, "phrase": "pure_lambda_calculus"}, {"score": 0.0028944757265206332, "phrase": "usual_call-by-name"}, {"score": 0.0027407299369891502, "phrase": "value_lambda_calculus"}, {"score": 0.00266693888510356, "phrase": "strong_connections"}, {"score": 0.0025951294037626174, "phrase": "underlying_logic"}, {"score": 0.0023694065215394593, "phrase": "elementary_affine_logic"}, {"score": 0.0022231606165229235, "phrase": "type_system"}, {"score": 0.0021830553825770097, "phrase": "natural_deduction_style"}, {"score": 0.0021436720821474973, "phrase": "eal_formulae"}, {"score": 0.0021049977753042253, "phrase": "lambda_terms"}], "paper_keywords": ["Linear logic", " lambda calculus", " implicit computational complexity"], "paper_abstract": "The so-called light logics [13, 1, 2] have been introduced as logical systems enjoying quite remarkable normalization properties. Designing a type assignment system for pure lambda calculus from these logics, however, is problematic, as discussed in [6]. In this paper we show that shifting from usual call-by-name to call-by-value lambda calculus allows regaining strong connections with the underlying logic. This will be done in the context of Elementary Affine Logic (EAL), designing a type system in natural deduction style assigning EAL formulae to lambda terms.", "paper_title": "LIGHT LOGICS AND THE CALL-BY-VALUE LAMBDA CALCULUS", "paper_id": "WOS:000268642100005"}