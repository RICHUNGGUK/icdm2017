{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "shared_key_derivation"}, {"score": 0.004670722261414736, "phrase": "distant_learning"}, {"score": 0.004623608221548592, "phrase": "audio_webcasting"}, {"score": 0.00457696724030363, "phrase": "video_streaming"}, {"score": 0.004507882471601552, "phrase": "online_gaining"}, {"score": 0.004241771072194993, "phrase": "ip_multicasts"}, {"score": 0.004198965651975536, "phrase": "application-layer_multicasts"}, {"score": 0.004156590395333602, "phrase": "efficient_and_scalable_one"}, {"score": 0.004032002950217453, "phrase": "many-to-many_communications"}, {"score": 0.003871653343842317, "phrase": "group_key"}, {"score": 0.003793876828939456, "phrase": "multiple_users"}, {"score": 0.003587924960158317, "phrase": "multicast_communication_channel"}, {"score": 0.003462704420080129, "phrase": "new_group_key_management_protocol"}, {"score": 0.0033249197885613937, "phrase": "computation_overhead"}, {"score": 0.003291336101694653, "phrase": "group_key_rekeying"}, {"score": 0.0032415934630668484, "phrase": "membership_changes"}, {"score": 0.0031603487697867538, "phrase": "new_keys"}, {"score": 0.002840708910768261, "phrase": "synchronous_and_asynchronous_rekeying_operations"}, {"score": 0.0027554538693034163, "phrase": "single_leave"}, {"score": 0.002713788077665689, "phrase": "batch_update"}, {"score": 0.002618995204424126, "phrase": "proposed_protocol"}, {"score": 0.002501955525421155, "phrase": "collusion_attacks"}, {"score": 0.002283298119790413, "phrase": "binary_key_trees"}, {"score": 0.002260211578368138, "phrase": "asynchronous_rekeying"}, {"score": 0.0021591707887653865, "phrase": "different_rekeying_delay"}, {"score": 0.0021373366163721518, "phrase": "key_size_requirements"}], "paper_keywords": ["Secure group communication", " Group key management", " Key tree", " Shared key derivation"], "paper_abstract": "In many network applications, including distant learning, audio webcasting, video streaming, and online gaining, often a source has to send data to many receivers. IP multicasts and application-layer multicasts provide efficient and scalable one-to-many or many-to-many communications. A common secret key, the group key, shared by multiple users can be used to secure the information transmitted in the multicast communication channel. In this paper, a new group key management protocol is proposed to reduce the communication and computation overhead of group key rekeying caused by membership changes. With shared key derivation, new keys derivable by members themselves do not have to be encrypted or delivered by the server, and the performance of synchronous and asynchronous rekeying operations, including single join, single leave, and batch update, is thus improved. The proposed protocol is shown to be secure and immune to collusion attacks, and it outperforms the other comparable protocols from our analysis and simulation. The protocol is particularly efficient with binary key trees and asynchronous rekeying, and it can be tuned to meet different rekeying delay or key size requirements. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Secure and efficient group key management with shared key derivation", "paper_id": "WOS:000261466600026"}