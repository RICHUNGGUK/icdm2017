{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "safety-failure_checking"}, {"score": 0.00465067040500426, "phrase": "new_framework"}, {"score": 0.0045547927862194856, "phrase": "safety_failures"}, {"score": 0.004308630865024719, "phrase": "conservative_inference"}, {"score": 0.004219774794569897, "phrase": "internal_states"}, {"score": 0.003240349178289032, "phrase": "backward_implication"}, {"score": 0.0030650070965891653, "phrase": "output_transition"}, {"score": 0.002742196991950893, "phrase": "efficient_algorithms"}, {"score": 0.002704306866425829, "phrase": "different_safety-failure_checking_problems"}, {"score": 0.0024533019565858073, "phrase": "existing_problem"}, {"score": 0.002241087008892355, "phrase": "efficient_algorithm"}, {"score": 0.0021049977753042253, "phrase": "existing_algorithms"}], "paper_keywords": ["asynchronous circuits", " speed-independent circuits", " safety-failure checking", " hazard checking", " formal verification", " over-approximations"], "paper_abstract": "We present a new framework for checking safety failures. The approach is based on the conservative inference of the internal states of a system by the observation of the interaction with its environment. It is based on two similar mechanisms: forward implication, which performs the analysis of the consequences of an input applied to the system, and backward implication, that performs the same task for an output transition. While being a very simple approach, it is general and we believe it can yield efficient algorithms in different safety-failure checking problems. As a case study, we have applied this framework to an existing problem, the hazard checking in (speed-independent) asynchronous circuits. Our new methodology yields an efficient algorithm that performs better or as well as all existing algorithms, while being more general than the fastest one.", "paper_title": "A conservative framework for safety-failure checking", "paper_id": "WOS:000254606100030"}