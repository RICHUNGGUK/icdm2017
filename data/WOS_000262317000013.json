{"auto_keywords": [{"score": 0.037519512308061685, "phrase": "previous_works"}, {"score": 0.015240527029365382, "phrase": "frequent_sequences"}, {"score": 0.011891201529222196, "phrase": "non-frequent_sequences"}, {"score": 0.011527351183372413, "phrase": "candidate_sequences"}, {"score": 0.009387252129167438, "phrase": "better_performance"}, {"score": 0.00481495049065317, "phrase": "dynamic_strategy"}, {"score": 0.004608539830653038, "phrase": "large_databases"}, {"score": 0.004494570360108983, "phrase": "important_research_topic"}, {"score": 0.004410938507689426, "phrase": "main_challenge"}, {"score": 0.0043560464825349275, "phrase": "mining_frequent_sequences"}, {"score": 0.004274981117736524, "phrase": "high_processing_cost"}, {"score": 0.004169226023596022, "phrase": "large_amount"}, {"score": 0.00389164348807591, "phrase": "novel_strategy"}, {"score": 0.0036782824183282823, "phrase": "support_counts"}, {"score": 0.0033905067962602515, "phrase": "shorter_lengths"}, {"score": 0.0025730425700096365, "phrase": "efficient_algorithm"}, {"score": 0.0023566987138026285, "phrase": "previous_strategy"}, {"score": 0.002283913454238574, "phrase": "mining_process"}, {"score": 0.0022133711375320244, "phrase": "experiment_results"}, {"score": 0.0021315842986705485, "phrase": "previous_ones"}], "paper_keywords": ["Data mining", " Frequent sequence", " Sequence comparison", " Strategy switching"], "paper_abstract": "Mining frequent sequences in large databases has been an important research topic. The main challenge of mining frequent sequences is the high processing cost due to the large amount of data. In this paper, we propose a novel strategy to find all the frequent sequences without having to compute the support counts of non-frequent sequences. The previous works prune candidate sequences based on the frequent sequences with shorter lengths, while our strategy prunes candidate sequences according to the non-frequent sequences with the same lengths. As a result, our strategy can cooperate with the previous works to achieve a better performance. We then identify three major strategies used in the previous works and combine them with our strategy into an efficient algorithm. The novelty of our algorithm lies in its ability to dynamically switch from a previous strategy to our new strategy in the mining process for a better performance. Experiment results show that our algorithm outperforms the previous ones under various parameter settings.", "paper_title": "Efficient frequent sequence mining by a dynamic strategy switching algorithm", "paper_id": "WOS:000262317000013"}