{"auto_keywords": [{"score": 0.048451073513520085, "phrase": "rrf"}, {"score": 0.00481495049065317, "phrase": "register_file"}, {"score": 0.004687159050154687, "phrase": "large_multi-ported_rename_register_file"}, {"score": 0.004441616106463486, "phrase": "in-flight_instructions"}, {"score": 0.0042250952759280225, "phrase": "longer_access_delays"}, {"score": 0.004050116768809519, "phrase": "overall_performance"}, {"score": 0.003912335018240945, "phrase": "ever-increasing_pipeline_depth"}, {"score": 0.003837817436476726, "phrase": "future_smt_processors"}, {"score": 0.003764713814123286, "phrase": "novel_register"}, {"score": 0.0037072310568610723, "phrase": "multi-usable"}, {"score": 0.0034326732528567826, "phrase": "rename_registers"}, {"score": 0.003328611206488653, "phrase": "effective_bit-width"}, {"score": 0.00322769360059123, "phrase": "full-bit_width"}, {"score": 0.0031906408161077766, "phrase": "register_entry"}, {"score": 0.0030820072734233693, "phrase": "different_widths"}, {"score": 0.0030232568024943455, "phrase": "field_combination"}, {"score": 0.002788454815865172, "phrase": "register_allocation"}, {"score": 0.0027564303939865476, "phrase": "write-back_stage"}, {"score": 0.002683125911877974, "phrase": "formerly_proposed_virtual-physical-register"}, {"score": 0.0025917270871556475, "phrase": "meaningless_rrf_occupancy"}, {"score": 0.0024368411484675823, "phrase": "higher_performance"}, {"score": 0.0023538120430501392, "phrase": "rrf_size"}, {"score": 0.002196133501257472, "phrase": "ipc"}, {"score": 0.0021049977753042253, "phrase": "rrf_occupancy"}], "paper_keywords": ["register renaming", " simultaneous multithreading", " dynamic superscalar processor"], "paper_abstract": "A large multi-ported rename register file (RRF) is indispensable for simultaneous multithreaded (SMT) processors to hold more intermediate results of in-flight instructions from multiple threads running simultaneously. However, enlarging the RRF incurs longer access delays and more power consumption, both of which are critical to the overall performance and are becoming a bottleneck due to the ever-increasing pipeline depth and issue width in future SMT processors. We propose a novel register renaming scheme called Multi-usable Rename Register with 2-Level renaming and allocating (2L-MuRR), which focuses on more efficient utilization of a fewer number of rename registers. Based on the fact that the effective bit-width of most operands is narrower than the full-bit width of a register entry, 2L-MuRR partitions each rename register into several fields of different widths. Either a single field or a field combination can hold an operand, thus making each rename register multi-usable. In addition, 2L-MuRR postpones the register allocation to the write-back stage, which is similar to the formerly proposed virtual-physical-register (VPR) scheme, further reducing the meaningless RRF occupancy. The simulations show that 2L-MuRR improves the efficiency of the RRF significantly, achieving higher performance with much fewer rename registers. For example, when the RRF size is 60, 2L-MuRR outperforms Trad (traditional register renaming approach) and VPR in terms of IPC by 38% and 11%, respectively, while decreases the RRF occupancy by 37% and 15%, respectively. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Compacting register file via 2-level renaming and bit-partitioning", "paper_id": "WOS:000245613400003"}