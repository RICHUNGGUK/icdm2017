{"auto_keywords": [{"score": 0.04698437762220599, "phrase": "quantum_algorithms"}, {"score": 0.005923664759631113, "phrase": "later_computation"}, {"score": 0.005744249253570264, "phrase": "multicore_architecture"}, {"score": 0.0050271930522988685, "phrase": "cumulative_communication_distance"}, {"score": 0.00481495049065317, "phrase": "quantum_uncomputation"}, {"score": 0.004770391375504451, "phrase": "quantum"}, {"score": 0.004741395005218184, "phrase": "computing's_power"}, {"score": 0.004668957916795845, "phrase": "new_algorithms"}, {"score": 0.004597622380240611, "phrase": "quantum_mechanical_phenomena"}, {"score": 0.004256895619944631, "phrase": "algorithmic_structures"}, {"score": 0.004106612344123407, "phrase": "classical_computing"}, {"score": 0.004023120753104693, "phrase": "classical_program_transformations"}, {"score": 0.0038810583785936505, "phrase": "common_classical_algorithm_structures"}, {"score": 0.0038413947966606118, "phrase": "quantum_program_transformations"}, {"score": 0.003802135020791801, "phrase": "quantum_architectures"}, {"score": 0.0035382855372646164, "phrase": "new_algorithmic_structures"}, {"score": 0.0035021127041237887, "phrase": "resultant_quantum_program_transformations"}, {"score": 0.003048370487544551, "phrase": "program_transformations"}, {"score": 0.0030017207229983385, "phrase": "architecture_support"}, {"score": 0.0027789349951704177, "phrase": "simple_quantum_program_transformation"}, {"score": 0.002546315584783112, "phrase": "exposed_parallelism"}, {"score": 0.002494466951433885, "phrase": "scheduling_policy"}, {"score": 0.0022047613106966723, "phrase": "significant_speedup"}, {"score": 0.0021821915946356168, "phrase": "quantum_programs"}, {"score": 0.0021049977753042253, "phrase": "shor's_factoring_algorithm"}], "paper_keywords": ["quantum computing", " uncomputation", " QLA"], "paper_abstract": "Quantum computing's power comes from new algorithms that exploit quantum mechanical phenomena for computation. Quantum algorithms are different from their classical counterparts in that quantum algorithms rely on algorithmic structures that are simply not present in classical computing. Just as classical program transformations and architectures have been designed for common classical algorithm structures, quantum program transformations and quantum architectures should be designed with quantum algorithms in mind. Because quantum algorithms come with these new algorithmic structures, resultant quantum program transformations and architectures may look very different from their classical counterparts. This paper focuses on uncomputation, a critical and prevalent structure in quantum algorithms, and considers how program transformations, and architecture support should be designed to accommodate uncomputation. In this paper, we show a simple quantum program transformation that exposes independence between uncomputation and later computation. We then propose a multicore architecture tailored to this exposed parallelism and propose a scheduling policy that efficiently maps such parallelism to the multicore architecture. Our policy achieves parallelism between uncomputation and later computation while reducing cumulative communication distance. Our scheduling and architecture allows significant speedup of quantum programs ( between 1.8x and 2.8x speedup in Shor's factoring algorithm), while reducing cumulative communication distance 26%.", "paper_title": "A program transformation and architecture support for quantum uncomputation", "paper_id": "WOS:000202972600024"}