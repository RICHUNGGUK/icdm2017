{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multidimensional_competence"}, {"score": 0.03915697229912192, "phrase": "skyline_distance"}, {"score": 0.004764870402266991, "phrase": "skyline"}, {"score": 0.004545793387330536, "phrase": "multi-criteria_decision-making"}, {"score": 0.004072851768196397, "phrase": "novel_problem"}, {"score": 0.0037653554368382814, "phrase": "novel_notion"}, {"score": 0.0036489343475053187, "phrase": "minimum_cost"}, {"score": 0.0034628156490003775, "phrase": "cost_function"}, {"score": 0.0031678720736808574, "phrase": "possible_choices"}, {"score": 0.0031348622158167195, "phrase": "recommendation_systems"}, {"score": 0.003102195256794215, "phrase": "computing_skyline_distances"}, {"score": 0.002897977113538355, "phrase": "straightforward_extension"}, {"score": 0.0028527866590859967, "phrase": "existing_skyline_computation_methods"}, {"score": 0.0026233771102489394, "phrase": "dynamic_programming_method"}, {"score": 0.002450602177683066, "phrase": "sort-projection_method"}, {"score": 0.0023997601127552256, "phrase": "skyline_boundary"}, {"score": 0.002362320344521919, "phrase": "skyline_distances"}, {"score": 0.0021496083700137305, "phrase": "extensive_experiment_results"}], "paper_keywords": ["Skyline", " Skyline distance", " Skyline boundary", " Query optimization"], "paper_abstract": "Skyline has been widely recognized as being useful for multi-criteria decision-making applications. While most of the existing work computes skylines in various contexts, in this paper, we consider a novel problem: how far away a point is from the skyline? We propose a novel notion of skyline distance that measures the minimum cost of upgrading a point to the skyline given a cost function. Skyline distance can be regarded as a measure of multidimensional competence and can be used to rank possible choices in recommendation systems. Computing skyline distances efficiently is far from trivial and cannot be handled by any straightforward extension of the existing skyline computation methods. To tackle this problem, we systematically explore several directions. We first present a dynamic programming method. Then, we investigate the boundary of skylines and develop a sort-projection method that utilizes the skyline boundary in calculating skyline distances. Last, we develop a space partitioning method to further improve the performance. We report extensive experiment results which show that our methods are efficient and scalable.", "paper_title": "Skyline distance: a measure of multidimensional competence", "paper_id": "WOS:000313714100005"}