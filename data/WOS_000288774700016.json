{"auto_keywords": [{"score": 0.02857554688347768, "phrase": "efficient_strategy"}, {"score": 0.00481495049065317, "phrase": "t-way_test_data_generation_strategy"}, {"score": 0.004657808551825796, "phrase": "acceptable_level"}, {"score": 0.004550856732700044, "phrase": "typical_software_product"}, {"score": 0.004431616517786392, "phrase": "possible_combination"}, {"score": 0.004402295697276237, "phrase": "input_data"}, {"score": 0.004272724011826495, "phrase": "combinatorial_explosion_problem"}, {"score": 0.004244449986839909, "phrase": "exhaustive_testing"}, {"score": 0.0041745773539728975, "phrase": "resource_constraints"}, {"score": 0.0041195049121633956, "phrase": "strict_time-to-market_deadlines"}, {"score": 0.00397175830521626, "phrase": "earlier_research"}, {"score": 0.003906357144047631, "phrase": "sampling_strategy"}, {"score": 0.003778755692995768, "phrase": "t-way_parameter_interaction"}, {"score": 0.003319569552937513, "phrase": "test_planning_process"}, {"score": 0.003264872488939969, "phrase": "test_size"}, {"score": 0.0031372369299648203, "phrase": "significant_progress"}, {"score": 0.003034682308336483, "phrase": "planning_process"}, {"score": 0.0028584344002749395, "phrase": "minimum_test"}, {"score": 0.002820675782452964, "phrase": "exhaustive_test_space"}, {"score": 0.002792683583705368, "phrase": "np-complete_problem"}, {"score": 0.002436765760924074, "phrase": "t-way_testing"}, {"score": 0.0023806911724834024, "phrase": "main_contribution"}, {"score": 0.0023259039577313294, "phrase": "t-way_test_data_generation"}, {"score": 0.0022423402528961144, "phrase": "gtway"}, {"score": 0.0022053535889915914, "phrase": "test_data"}, {"score": 0.002183454435945014, "phrase": "high_coverage_strength"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["GTWay", " Software testing", " t-way testing", " Combinatorial testing"], "paper_abstract": "To ensure an acceptable level of quality and reliability of a typical software product, it is desirable to test every possible combination of input data under various configurations. However, due to the combinatorial explosion problem, exhaustive testing is practically impossible. Resource constraints, cost factors, and strict time-to-market deadlines are some of the main factors that inhibit such a consideration. Earlier research has suggested that a sampling strategy (i.e., one that is based on a t-way parameter interaction) can be effective. As a result, many helpful t-way sampling strategies have been developed and can be found in the literature. Several advances have been achieved in the last 15 years, which have, in particular, served to facilitate the test planning process by systematically minimizing the test size required (based on certain t-way parameter interactions). Despite this significant progress, the integration and automation of strategies (from planning process to execution) are still lacking. Additionally, strategizing to sample (and construct) a minimum test set from the exhaustive test space is an NP-complete problem; that is, it is often unlikely that an efficient strategy exists that could regularly generate an optimal test set. Motivated by these challenges, this paper discusses the design, implementation, and validation of an efficient strategy for t-way testing, the GTWay strategy. The main contribution of GTWay is the integration of t-way test data generation with automated (concurrent) execution as part of its tool implementation. Unlike most previous methods. GTWay addresses the generation of test data for a high coverage strength (t > 6). (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Design and implementation of a t-way test data generation strategy with automated execution tool support", "paper_id": "WOS:000288774700016"}