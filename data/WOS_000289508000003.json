{"auto_keywords": [{"score": 0.04032243484842916, "phrase": "proposed_algorithm"}, {"score": 0.010612387000973441, "phrase": "bayesian_optimization_algorithm"}, {"score": 0.010496798602845584, "phrase": "heterogeneous_computing_environments"}, {"score": 0.00471003041684707, "phrase": "efficient_task_scheduling"}, {"score": 0.0046073860169839305, "phrase": "crucial_step"}, {"score": 0.0045318666714939905, "phrase": "high_performance"}, {"score": 0.004482206282876944, "phrase": "multiprocessor_platforms"}, {"score": 0.00433645229352341, "phrase": "challenge_problems"}, {"score": 0.004265354774450696, "phrase": "numerous_studies"}, {"score": 0.004126623209579942, "phrase": "novel_scheduling_algorithm"}, {"score": 0.00399238820006935, "phrase": "boa"}, {"score": 0.0035755653799043, "phrase": "task_graph"}, {"score": 0.003536346954940087, "phrase": "multiprocessor_scheduling_problems"}, {"score": 0.0034975571855450373, "phrase": "bayesian_networks"}, {"score": 0.003309877074892399, "phrase": "different_tasks"}, {"score": 0.0032376465741070274, "phrase": "promising_solutions"}, {"score": 0.0031669873302916, "phrase": "different_processors"}, {"score": 0.0030638704739988595, "phrase": "bayesian_network"}, {"score": 0.0029805015010906013, "phrase": "execution_sequence"}, {"score": 0.00282048824450047, "phrase": "heuristic-based_priority"}, {"score": 0.002758907973783665, "phrase": "list_scheduling_approach"}, {"score": 0.0026107601878587816, "phrase": "related_approaches"}, {"score": 0.002539689093411356, "phrase": "empirical_studies"}, {"score": 0.002511803988580901, "phrase": "random_task_graphs"}, {"score": 0.0024842242921857705, "phrase": "benchmark_applications"}, {"score": 0.0024434201175883674, "phrase": "experimental_results"}, {"score": 0.002175913488493802, "phrase": "different_parameter_settings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiprocessor scheduling", " Heterogeneous", " Parallel computing", " Bayesian optimization algorithm"], "paper_abstract": "Efficient task scheduling, as a crucial step to achieve high performance for multiprocessor platforms, remains one of the challenge problems despite of numerous studies. This paper presents a novel scheduling algorithm based on the Bayesian optimization algorithm (BOA) for heterogeneous computing environments. In the proposed algorithm, scheduling is divided into two phases. First, according to the task graph of multiprocessor scheduling problems, Bayesian networks are initialized and learned to capture the dependencies between different tasks. And the promising solutions assigning tasks to different processors are generated by sampling the Bayesian network. Second, the execution sequence of tasks on the same processor is set by the heuristic-based priority used in the list scheduling approach. The proposed algorithm is evaluated and compared with the related approaches by means of the empirical studies on random task graphs and benchmark applications. The experimental results show that the proposed algorithm is able to deliver more efficient schedules. Further experiments indicate that the proposed algorithm maintains almost the same performance with different parameter settings. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Task scheduling using Bayesian optimization algorithm for heterogeneous computing environments", "paper_id": "WOS:000289508000003"}