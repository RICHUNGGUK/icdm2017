{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sparse_matrix_codes"}, {"score": 0.004721162131188487, "phrase": "sparse_matrix_formats"}, {"score": 0.004494570360108983, "phrase": "low-level_imperative_programs"}, {"score": 0.004073359218158693, "phrase": "structural_organization"}, {"score": 0.003954837422946628, "phrase": "sparse_format"}, {"score": 0.0036553070575015344, "phrase": "variable-free_functional_language"}, {"score": 0.003445591238183763, "phrase": "even_advanced_formats"}, {"score": 0.0031845067058084583, "phrase": "pipeline-style_composition"}, {"score": 0.0031223774204093713, "phrase": "smaller_construction_steps"}, {"score": 0.0028293966058473476, "phrase": "proof_system"}, {"score": 0.0027469703311742647, "phrase": "parametric_predicates"}, {"score": 0.0026148807877309417, "phrase": "mathematical_vectors"}, {"score": 0.0023928819778638055, "phrase": "full_functional_correctness"}, {"score": 0.0021049977753042253, "phrase": "hierarchical_sparse_formats"}], "paper_keywords": ["Languages", " Verification"], "paper_abstract": "Sparse matrix formats are typically implemented with low-level imperative programs. The optimized nature of these implementations hides the structural organization of the sparse format and complicates its verification. We define a variable-free functional language (LL) in which even advanced formats can be expressed naturally, as a pipeline-style composition of smaller construction steps. We translate LL programs to Isabelle/HOL and describe a proof system based on parametric predicates for tracking relationship between mathematical vectors and their concrete representations. This proof theory automatically verifies full functional correctness of many formats. We show that it is reusable and extensible to hierarchical sparse formats.", "paper_title": "Specifying and Verifying Sparse Matrix Codes", "paper_id": "WOS:000286594300023"}