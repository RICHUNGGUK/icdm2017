{"auto_keywords": [{"score": 0.0495133738546852, "phrase": "mapreduce_applications"}, {"score": 0.015354341087824023, "phrase": "shared_clusters"}, {"score": 0.00850887769783537, "phrase": "completion_time"}, {"score": 0.00481495049065317, "phrase": "task_assignment"}, {"score": 0.004352123742308589, "phrase": "cluster_utilization"}, {"score": 0.004224627834741731, "phrase": "network_sharing"}, {"score": 0.004174677062711731, "phrase": "diverse_applications"}, {"score": 0.004076533120753605, "phrase": "network_bandwidth"}, {"score": 0.0037731618765688584, "phrase": "network_hotspots"}, {"score": 0.003619235073669304, "phrase": "existing_task_assignment_policies"}, {"score": 0.003513133457324989, "phrase": "data_locality"}, {"score": 0.003213070385558666, "phrase": "lightweight_network-aware_task_assignment_strategy"}, {"score": 0.003175079624624465, "phrase": "mapreduce"}, {"score": 0.0029737652463012318, "phrase": "job_completion_time"}, {"score": 0.0025623821393275146, "phrase": "map_phase"}, {"score": 0.0024431289979171505, "phrase": "extensive_prototype_experiments"}, {"score": 0.002371424085814217, "phrase": "complementary_large-scale_simulations"}, {"score": 0.002329412930430366, "phrase": "facebook_job_traces"}, {"score": 0.002181626277903721, "phrase": "mapreduce_jobs"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_task_assignment_strategies"}], "paper_keywords": ["MapReduce", " Task assignment", " Shared clusters", " Network hotspots"], "paper_abstract": "Running MapReduce applications in shared clusters is becoming increasingly compelling to improve the cluster utilization. However, the network sharing across diverse applications can make the network bandwidth for MapReduce applications constrained and heterogeneous, which inevitably increases the severity of network hotspots in racks, and makes the existing task assignment policies that focus on the data locality no longer effective. To deal with this issue, this paper proposes a lightweight network-aware task assignment strategy for MapReduce applications in shared clusters. By analyzing the relationship between job completion time and the assignment of both map and reduce tasks across racks, it devises and integrates two simple yet effective greedy heuristics, which can minimize the completion time of map phase and reduce phase, respectively. With extensive prototype experiments on a 12-node 3-rack MapReduce cluster and complementary large-scale simulations driven by Facebook job traces, we demonstrate that our network-aware strategy can shorten the completion time of MapReduce jobs, in comparison to the state-of-the-art task assignment strategies, yet with an acceptable computational overhead.", "paper_title": "Network-Aware Task Assignment for MapReduce Applications in Shared Clusters", "paper_id": "WOS:000352755900013"}