{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_design"}, {"score": 0.004506968388996092, "phrase": "general_purpose_finite_element_library"}, {"score": 0.004241914481080374, "phrase": "advanced_object-oriented_and_data_encapsulation_techniques"}, {"score": 0.004081385289516914, "phrase": "smaller_blocks"}, {"score": 0.0039269071382230444, "phrase": "users_requirements"}, {"score": 0.0036958398682001015, "phrase": "large_number"}, {"score": 0.0036553070575015344, "phrase": "different_applications"}, {"score": 0.0035953368057880593, "phrase": "wide_range"}, {"score": 0.003555902292752528, "phrase": "scientific_areas"}, {"score": 0.003516898780234098, "phrase": "programming_methodologies"}, {"score": 0.003309877074892399, "phrase": "rigid_framework"}, {"score": 0.0031495640320537283, "phrase": "judicious_use"}, {"score": 0.0031150035760241705, "phrase": "programming_techniques"}, {"score": 0.0030135741897058844, "phrase": "computational_costs"}, {"score": 0.002947790697936243, "phrase": "abstract_object-oriented_class_libraries"}, {"score": 0.002851790448644913, "phrase": "detailed_description"}, {"score": 0.0027437235598539904, "phrase": "geometric_information"}, {"score": 0.0025678829712650437, "phrase": "finite_element_spaces"}, {"score": 0.0024842242921857705, "phrase": "linear_algebra"}, {"score": 0.002337848196418384, "phrase": "visualization_tools"}, {"score": 0.0021049977753042253, "phrase": "powerful_capabilities"}], "paper_keywords": ["algorithms", " design", " documentation", " object-orientation", " software design"], "paper_abstract": "An overview of the software design and data abstraction decisions chosen for deal. II, a general purpose finite element library written in C++, is given. The library uses advanced object-oriented and data encapsulation techniques to break finite element implementations into smaller blocks that can be arranged to fit users requirements. Through this approach, deal. II supports a large number of different applications covering a wide range of scientific areas, programming methodologies, and application-specific algorithms, without imposing a rigid framework into which they have to fit. A judicious use of programming techniques allows us to avoid the computational costs frequently associated with abstract object-oriented class libraries. The paper presents a detailed description of the abstractions chosen for defining geometric information of meshes and the handling of degrees of freedom associated with finite element spaces, as well as of linear algebra, input/output capabilities and of interfaces to other software, such as visualization tools. Finally, some results obtained with applications built atop deal. II are shown to demonstrate the powerful capabilities of this toolbox.", "paper_title": "deal. II - A general-purpose object-oriented finite element library", "paper_id": "WOS:000250967300003"}