{"auto_keywords": [{"score": 0.034277210076676216, "phrase": "tree_updates"}, {"score": 0.00481495049065317, "phrase": "ray_tracing_animated_scenes"}, {"score": 0.004662036750452837, "phrase": "hybrid_architecture"}, {"score": 0.004543193737836748, "phrase": "asynchronous_bvh_construction"}, {"score": 0.0043144799365586375, "phrase": "animated_scenes"}, {"score": 0.004204459295724526, "phrase": "heterogeneous_hardware_resources"}, {"score": 0.003992729692096799, "phrase": "bvh_updates"}, {"score": 0.003941478054422721, "phrase": "ray_traversal"}, {"score": 0.003816197777388722, "phrase": "bvh_reconstruction"}, {"score": 0.0036710872046569532, "phrase": "traversal_scheme"}, {"score": 0.0036006068766833103, "phrase": "primitive's_axis-aligned_bounding_box"}, {"score": 0.0034191818674096453, "phrase": "ray-primitive_intersection_tests"}, {"score": 0.003353521531649663, "phrase": "existing_bvh_traversal_units"}, {"score": 0.003289117944111902, "phrase": "primaabb_data"}, {"score": 0.0031032109441552287, "phrase": "shallow_trees"}, {"score": 0.0030435998319355883, "phrase": "tree_build_times"}, {"score": 0.003004494701922268, "phrase": "tree_sizes"}, {"score": 0.0029467742734417255, "phrase": "bus_bandwidth_requirements"}, {"score": 0.00281635677605879, "phrase": "cache_scheme"}, {"score": 0.0027622407190589326, "phrase": "consecutive_memory_access"}, {"score": 0.0025892330566358503, "phrase": "cycle-accurate_simulations"}, {"score": 0.00247460024299964, "phrase": "simulation_results"}, {"score": 0.002411383506019635, "phrase": "proposed_architecture"}, {"score": 0.0023650305205893353, "phrase": "real-time_whitted_ray"}], "paper_keywords": ["Ray tracing", " bounding volume hierarchy", " dynamic scene", " graphics hardware"], "paper_abstract": "We present a hybrid architecture, inspired by asynchronous BVH construction [ 1], for ray tracing animated scenes. Our hybrid architecture utilizes heterogeneous hardware resources: dedicated ray-tracing hardware for BVH updates and ray traversal and a CPU for BVH reconstruction. We also present a traversal scheme using a primitive's axis-aligned bounding box (PrimAABB). This scheme reduces ray-primitive intersection tests by reusing existing BVH traversal units and the primAABB data for tree updates; it enables the use of shallow trees to reduce tree build times, tree sizes, and bus bandwidth requirements. Furthermore, we present a cache scheme that exploits consecutive memory access by reusing data in an L1 cache block. We perform cycle-accurate simulations to verify our architecture, and the simulation results indicate that the proposed architecture can achieve real-time Whitted ray tracing animated scenes at 1; 920 x 1; 200 resolution. This result comes from our high-performance hardware architecture and minimized resource requirements for tree updates.", "paper_title": "HART: A Hybrid Architecture for Ray Tracing Animated Scenes", "paper_id": "WOS:000351755700008"}