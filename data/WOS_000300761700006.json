{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "competency_rank"}, {"score": 0.0490881866285214, "phrase": "grid_networks"}, {"score": 0.024895979434086783, "phrase": "load_balancing"}, {"score": 0.004764859786310636, "phrase": "transitional_phases"}, {"score": 0.004666228956744244, "phrase": "grid_computing"}, {"score": 0.004545793387330536, "phrase": "software-hardware_capabilities"}, {"score": 0.004405348628112645, "phrase": "comprehensive_and_complete_system"}, {"score": 0.0042692243768616455, "phrase": "maximum_utilization"}, {"score": 0.004137288854115515, "phrase": "resource_distribution"}, {"score": 0.004072851768196397, "phrase": "heterogeneous_and_unstable_environment"}, {"score": 0.004030449969901066, "phrase": "also_effective_load_distribution"}, {"score": 0.003905864553426306, "phrase": "important_and_difficult_problems"}, {"score": 0.003866402574547681, "phrase": "grid"}, {"score": 0.003785115566529808, "phrase": "dynamic_and_static_algorithms"}, {"score": 0.003688268826758261, "phrase": "branch"}, {"score": 0.0036489343475053187, "phrase": "bound_algorithm"}, {"score": 0.0035176353680157367, "phrase": "available_methods"}, {"score": 0.0032861588691414667, "phrase": "new_method"}, {"score": 0.003251920460276645, "phrase": "dynamic_load_balancing"}, {"score": 0.003069867656852932, "phrase": "forward_and_backward_ants"}, {"score": 0.002823050755743821, "phrase": "control_word"}, {"score": 0.0027645030021576926, "phrase": "suitable_resource"}, {"score": 0.0026096659285441384, "phrase": "existing_resources"}, {"score": 0.002542174767860791, "phrase": "simulation_results"}, {"score": 0.0024894376091589244, "phrase": "proposed_method"}, {"score": 0.0024377918036784336, "phrase": "total_completion_time"}, {"score": 0.0022299587520401747, "phrase": "effective_factor"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Load balancing", " Devoting jobs", " Grid computing"], "paper_abstract": "Grid computing is a network of software-hardware capabilities. It serves as a comprehensive and complete system for organizations by which the maximum utilization from resources is achieved. Resource distribution in a heterogeneous and unstable environment and also effective load distribution among these resources are the important and difficult problems in Grid networks. Using dynamic and static algorithms or searching tree and Branch and Bound algorithm are considered to be among the available methods to reach the load balancing in Grid networks. This paper presents a new method for dynamic load balancing. In this method, we use the subtraction of forward and backward ants as a competency rank to take the priority of the sites, and we use a control word to search the suitable resource as well. Our main purpose is to devote jobs to the existing resources based on their processing power. Simulation results show that the proposed method can reduce the total completion time and also total tardiness to get the load balancing. The cost of using resources as an effective factor in load balancing is also observed. (C) 2011 Elsevier By. All rights reserved.", "paper_title": "A new step toward load balancing based on competency rank and transitional phases in Grid networks", "paper_id": "WOS:000300761700006"}