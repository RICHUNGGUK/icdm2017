{"auto_keywords": [{"score": 0.0354360073323852, "phrase": "function_pointers"}, {"score": 0.00481495049065317, "phrase": "general_defense"}, {"score": 0.004763565662615503, "phrase": "kernel_queue_hooking_attacks"}, {"score": 0.004712726613162057, "phrase": "kernel_queue_hooking"}, {"score": 0.004563427013973105, "phrase": "stealthy_malicious_function_execution"}, {"score": 0.004490552331642995, "phrase": "malicious_hooks"}, {"score": 0.0044426140044122545, "phrase": "dynamic_kernel_schedulable_queues"}, {"score": 0.004395185177346749, "phrase": "k-queues"}, {"score": 0.004255902303152008, "phrase": "kernel_code"}, {"score": 0.004210458358142504, "phrase": "persistent_hooks"}, {"score": 0.0040334640350288, "phrase": "state-of-the-art_kernel_integrity_monitors"}, {"score": 0.0038431888954930083, "phrase": "advanced_malware"}, {"score": 0.0037615180375561805, "phrase": "rustock_spam_bot"}, {"score": 0.003701401653850141, "phrase": "malicious_goals"}, {"score": 0.003526735797659508, "phrase": "systematic_defense"}, {"score": 0.0033965836912510385, "phrase": "precise_lookahead_checking"}, {"score": 0.003050508020268648, "phrase": "callback_function"}, {"score": 0.002890887778279196, "phrase": "k-queue"}, {"score": 0.0028142286985235977, "phrase": "unified_static_analysis_framework"}, {"score": 0.002695768552609587, "phrase": "kernel_source_code_properties"}, {"score": 0.00266693888510356, "phrase": "legitimate_k-queue_requests"}, {"score": 0.0025962029048520324, "phrase": "source_code"}, {"score": 0.0025546627686955656, "phrase": "runtime_checker"}, {"score": 0.002447101794397243, "phrase": "concept_runtime_checkers"}, {"score": 0.0023950817795051448, "phrase": "linux"}, {"score": 0.0023440589015485077, "phrase": "comprehensive_experimental_evaluation"}, {"score": 0.0021975548867457606, "phrase": "kqh_attacks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Control flow integrity", " Kernel queue hooking", " Rootkits", " Runtime defense", " Static analysis"], "paper_abstract": "Kernel queue hooking (KQH) attacks achieve stealthy malicious function execution by embedding malicious hooks in dynamic kernel schedulable queues (K-Queues). Because they keep kernel code and persistent hooks intact, they can evade detection of state-of-the-art kernel integrity monitors. Moreover, they have been used by advanced malware such as the Rustock spam bot to achieve malicious goals. In this paper, we present a systematic defense against such novel attacks. We propose the Precise Lookahead Checking of function Pointers approach that checks the legitimacy of pending K-Queue callback requests by proactively checking function pointers that may be invoked by the callback function. To facilitate the derivation of specifications for any K-Queue, we build a unified static analysis framework and a toolset that can derive from kernel source code properties of legitimate K-Queue requests and turn them into source code for the runtime checker. We implement proof-of-concept runtime checkers for four K-Queues in Linux and perform a comprehensive experimental evaluation of these checkers, which shows that our defense is effective against KQH attacks. (c) 2011 Published by Elsevier Ltd.", "paper_title": "Toward a general defense against kernel queue hooking attacks", "paper_id": "WOS:000319547600004"}