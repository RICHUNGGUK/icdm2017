{"auto_keywords": [{"score": 0.02950924346237922, "phrase": "nenok"}, {"score": 0.00481495049065317, "phrase": "nenok_-_a_software_architecture_for_generic_inference._computing_inference"}, {"score": 0.004596561972944185, "phrase": "key_competences"}, {"score": 0.004554082077300675, "phrase": "computer_science"}, {"score": 0.0044702911400353535, "phrase": "numerous_formalisms"}, {"score": 0.0044289730051264116, "phrase": "specialized_inference_routines"}, {"score": 0.004228016636379321, "phrase": "typical_examples"}, {"score": 0.00418892838079239, "phrase": "bayesian_networks"}, {"score": 0.00415019999222481, "phrase": "constraint_systems"}, {"score": 0.00411182818527434, "phrase": "different_kinds"}, {"score": 0.003817306032290766, "phrase": "common_algebraic_roof"}, {"score": 0.00357689487273538, "phrase": "arbitrary_valuation_algebras"}, {"score": 0.0034303736977646135, "phrase": "high_level"}, {"score": 0.0033515736929172644, "phrase": "open_problems"}, {"score": 0.0032898346872897383, "phrase": "underlying_formalism"}, {"score": 0.0030117065110966414, "phrase": "software_projects"}, {"score": 0.002942495422585405, "phrase": "modern_programming_languages"}, {"score": 0.0028882701690741467, "phrase": "generic_sorting_procedures"}, {"score": 0.0028482561434303886, "phrase": "generic_inference_algorithms"}, {"score": 0.0028087949095629955, "phrase": "mythical_creatures"}, {"score": 0.002744234034162797, "phrase": "new_ground"}, {"score": 0.00269365253474335, "phrase": "extensive_library"}, {"score": 0.0026687115458522326, "phrase": "generic_inference_tools"}, {"score": 0.0026195184143518713, "phrase": "valuation_algebra_framework"}, {"score": 0.0025121156016001886, "phrase": "local_and_remote_knowledge_bases"}, {"score": 0.0024091057723923857, "phrase": "software_library"}, {"score": 0.0023427844897844093, "phrase": "sophisticated_graphical_user_interface"}, {"score": 0.0022995854132747233, "phrase": "inference_process"}, {"score": 0.0021746987512551693, "phrase": "educational_purposes"}, {"score": 0.0021246816854197732, "phrase": "fast_prototyping_architecture"}, {"score": 0.0021049977753042253, "phrase": "inference_formalisms"}], "paper_keywords": ["Generic inference", " distributed inference", " valuation algebra", " local computation", " semiring valuation algebra", " NENOK"], "paper_abstract": "Computing inference from a given knowledge base is one of the key competences of computer science. Therefore, numerous formalisms and specialized inference routines have been introduced and implemented for this task. Typical examples are Bayesian networks, constraint systems or different kinds of logic. It is known today that these formalisms can be unified under a common algebraic roof called valuation algebra. Based on this system, generic inference algorithms for the processing of arbitrary valuation algebras can be defined. Researchers benefit from this high level of abstraction to address open problems independently of the underlying formalism. It is therefore all the more astonishing that this theory did not find its way into concretes of software projects. Indeed, all modern programming languages for example provide generic sorting procedures, but generic inference algorithms are still mythical creatures. NENOK breaks a new ground and offers an extensive library of generic inference tools based on the valuation algebra framework. All methods are implemented as distributed algorithms that process local and remote knowledge bases in a transparent manner. Besides its main purpose as software library, NENOK also provides a sophisticated graphical user interface to inspect the inference process and the involved graphical structures. This can be used for educational purposes but also as a fast prototyping architecture for inference formalisms.", "paper_title": "NENOK - A SOFTWARE ARCHITECTURE FOR GENERIC INFERENCE", "paper_id": "WOS:000274974000004"}