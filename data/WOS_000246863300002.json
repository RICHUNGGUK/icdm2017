{"auto_keywords": [{"score": 0.035992921575902365, "phrase": "tcs"}, {"score": 0.0286098744758004, "phrase": "better_results"}, {"score": 0.00481495049065317, "phrase": "timing-constrained_operation_scheduling"}, {"score": 0.0045879792359519375, "phrase": "fundamental_problem"}, {"score": 0.00441883624011048, "phrase": "computational_device"}, {"score": 0.004301834610818624, "phrase": "behavioral_application_specification"}, {"score": 0.004077005481951783, "phrase": "computing_resources"}, {"score": 0.0039055990919333082, "phrase": "os_problem"}, {"score": 0.003741371936431574, "phrase": "effective_heuristic_methods"}, {"score": 0.0036422425344358037, "phrase": "qualitative_solutions"}, {"score": 0.0035648266669315943, "phrase": "novel_os_algorithms"}, {"score": 0.0035078427258024613, "phrase": "ant_colony_optimization_approach"}, {"score": 0.003451766520526601, "phrase": "timing-constrained_scheduling"}, {"score": 0.0033602844686125375, "phrase": "resource-constrained_scheduling"}, {"score": 0.0031845067058084583, "phrase": "unique_hybrid_approach"}, {"score": 0.0031167895790050405, "phrase": "max-min_ant_system"}, {"score": 0.003066945490483524, "phrase": "traditional_scheduling_heuristics"}, {"score": 0.002985631781749091, "phrase": "comprehensive_testing_benchmark_set"}, {"score": 0.002953711377604328, "phrase": "real-world_applications"}, {"score": 0.002652639568848117, "phrase": "force-directed_scheduling"}, {"score": 0.0026242699269026204, "phrase": "almost_all_the_testing_cases"}, {"score": 0.002473604731524059, "phrase": "rcs"}, {"score": 0.002382182688788248, "phrase": "different_list-scheduling_heuristics"}, {"score": 0.002209406458446019, "phrase": "simulated_annealing_method"}, {"score": 0.002174041708084857, "phrase": "scheduling_problems"}, {"score": 0.0021049977753042253, "phrase": "computing_time"}], "paper_keywords": ["force-directed scheduling (FDS)", " list scheduling", " operation scheduling (OS)", " MAX-MIN ant system (MMAS)"], "paper_abstract": "Operation scheduling (OS) is a fundamental problem in mapping an application to a computational device. It takes a behavioral application specification and produces a schedule to minimize either the completion time or the computing resources required to meet a given deadline. The OS problem is A(P-hard; thus, effective heuristic methods are necessary to provide qualitative solutions. We present novel OS algorithms using the ant colony optimization approach for both timing-constrained scheduling (TCS) and resource-constrained scheduling (RCS) problems. The algorithms use a unique hybrid approach by combining the MAX-MIN ant system metaheuristic with traditional scheduling heuristics. We compiled a comprehensive testing benchmark set from real-world applications in order to verify the effectiveness and efficiency of our proposed algorithms. For TCS, our algorithm achieves better results compared with force-directed scheduling on almost all the testing cases with a maximum 19.5% reduction of the number of resources. For RCS, our algorithm outperforms a number of different list-scheduling heuristics with better stability and generates better results with up to 14.7% improvement. Our algorithms outperform the simulated annealing method for both scheduling problems in terms of quality, computing time, and stability.", "paper_title": "Ant colony optimizations for resource- and timing-constrained operation scheduling", "paper_id": "WOS:000246863300002"}