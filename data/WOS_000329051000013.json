{"auto_keywords": [{"score": 0.03047446884731441, "phrase": "sql"}, {"score": 0.00481495049065317, "phrase": "set-level_comparisons"}, {"score": 0.004750178261675602, "phrase": "dynamically_formed_groups"}, {"score": 0.004654642380553263, "phrase": "data_warehousing"}, {"score": 0.004592016716046632, "phrase": "olap_applications"}, {"score": 0.0045302298105691615, "phrase": "scalar-level_predicates"}, {"score": 0.004120289747942224, "phrase": "set-level_comparison_semantics"}, {"score": 0.003850299959557491, "phrase": "multiple_values"}, {"score": 0.0037473054818679763, "phrase": "complex_sql_queries"}, {"score": 0.003671865026158296, "phrase": "scalar-level_operations"}, {"score": 0.003525493807130663, "phrase": "even_very_simple_set-level_semantics"}, {"score": 0.0031845067058084583, "phrase": "database_engine"}, {"score": 0.0030163012350270025, "phrase": "costly_evaluation"}, {"score": 0.002724428781940696, "phrase": "otherwise_obscured_set-level_semantics"}, {"score": 0.002598034157587518, "phrase": "processing_set_predicates"}, {"score": 0.0025456716198597627, "phrase": "aggregate_function-based_approach"}, {"score": 0.002494361792853831, "phrase": "bitmap_index-based_approach"}, {"score": 0.00237861522566195, "phrase": "histogram-based_probabilistic_method"}, {"score": 0.002330664671716791, "phrase": "predicate_selectivity_estimation"}, {"score": 0.002237637525225501, "phrase": "multiple_predicates"}, {"score": 0.0021049977753042253, "phrase": "optimizing_queries"}], "paper_keywords": ["Set predicates", " grouping", " data warehousing", " OLAP", " querying processing and optimization"], "paper_abstract": "In data warehousing and OLAP applications, scalar-level predicates in SQL become increasingly inadequate to support a class of operations that require set-level comparison semantics, i.e., comparing a group of tuples with multiple values. Currently, complex SQL queries composed by scalar-level operations are often formed to obtain even very simple set-level semantics. Such queries are not only difficult to write but also challenging for a database engine to optimize, thus can result in costly evaluation. This paper proposes to augment SQL with set predicate, to bring out otherwise obscured set-level semantics. We studied two approaches to processing set predicates-an aggregate function-based approach and a bitmap index-based approach. Moreover, we designed a histogram-based probabilistic method of set predicate selectivity estimation, for optimizing queries with multiple predicates. The experiments verified its accuracy and effectiveness in optimizing queries.", "paper_title": "Set Predicates in SQL: Enabling Set-Level Comparisons for Dynamically Formed Groups", "paper_id": "WOS:000329051000013"}