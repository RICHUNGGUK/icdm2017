{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "longest_path"}, {"score": 0.0047563776685277314, "phrase": "length_and_sum_constraints"}, {"score": 0.004260134699483774, "phrase": "real_number"}, {"score": 0.00257735013358606, "phrase": "tree_t"}, {"score": 0.0022938068444116827, "phrase": "longest_feasible_path"}, {"score": 0.0021049977753042253, "phrase": "vertical_bar_t_vertical_bar"}], "paper_keywords": ["length constraint", " longest path", " sum constraint", " tree"], "paper_abstract": "Let T be a tree in which every edge is associated with a real number. The sum of a path in T is the sum of the numbers associated with the edges of the path and its length is the number of the edges in it. For two positive integers L(1) <= L(2) and two real numbers S(1) <= S(2), a path is feasible if its length is between L(1) and L(2) and its sum is between S(1) and S(2). We address the problem: Given a tree T, and four numbers, L(1), L(2), S(1) and S(2), find the longest feasible path of T. We provide an optimal O(n log n) time algorithm for the problem, where n = vertical bar T vertical bar.", "paper_title": "Optimal Algorithms for Finding the Longest Path with Length and Sum Constraints in a Tree", "paper_id": "WOS:000292480800027"}