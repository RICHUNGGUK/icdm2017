{"auto_keywords": [{"score": 0.030424249019695215, "phrase": "vardi"}, {"score": 0.005572976236093631, "phrase": "kupferman"}, {"score": 0.00481495049065317, "phrase": "automated_synthesis"}, {"score": 0.004479120557712926, "phrase": "rich_theory"}, {"score": 0.00443308765153716, "phrase": "system_synthesis"}, {"score": 0.004180992206290323, "phrase": "model-checking_theory"}, {"score": 0.004095468830028361, "phrase": "industrial_development"}, {"score": 0.004039423410198574, "phrase": "formal_verification_tools"}, {"score": 0.003916098498242888, "phrase": "practical_impact"}, {"score": 0.0037188360359702182, "phrase": "infinite_words"}, {"score": 0.0036427316134070007, "phrase": "parity_games"}, {"score": 0.0036177098964897364, "phrase": "highly_complex_state_spaces"}, {"score": 0.0035072146967082083, "phrase": "efficient_implementation"}, {"score": 0.0034236045013591437, "phrase": "current_theory"}, {"score": 0.0033651019362620866, "phrase": "single_comprehensive_specification"}, {"score": 0.0029114187110123105, "phrase": "safraless_synthesis_algorithm"}, {"score": 0.002822434555587263, "phrase": "ltl_formulas"}, {"score": 0.0027741761880779535, "phrase": "nondeterministic_generalized_buchi_automata"}, {"score": 0.00271735110571002, "phrase": "exponential_improvement"}, {"score": 0.0025981810951165836, "phrase": "synthesis_problem"}, {"score": 0.002571429085596686, "phrase": "emptiness_problem"}, {"score": 0.0025449518236394103, "phrase": "nondeterministic_buchi_tree_automaton_a."}, {"score": 0.0025014259919355453, "phrase": "avoids_determinization"}, {"score": 0.002467140591777737, "phrase": "parity_acceptance_condition"}, {"score": 0.002375253757224999, "phrase": "universal_generalized_co-buchi_tree_automata"}, {"score": 0.002302619021497886, "phrase": "enables_optimizations"}, {"score": 0.00227890329511847, "phrase": "symbolic_implementation"}, {"score": 0.0021639307835832136, "phrase": "synthesis_process"}], "paper_keywords": [""], "paper_abstract": "In automated synthesis, we transform a specification into a system that is guaranteed to satisfy the specification. In spite of the rich theory developed for system synthesis, little of this theory has been reduced to practice. This is in contrast with model-checking theory, which has led to industrial development and use of formal verification tools. We see two main reasons for the lack of practical impact of synthesis. The first is algorithmic: synthesis involves determinization of automata on infinite words, and a solution of parity games with highly complex state spaces; both problems have been notoriously resistant to efficient implementation. The second is methodological: current theory of synthesis assumes a single comprehensive specification. In practice, however, the specification is composed of a set of properties, which is typically evolving-properties may be added, deleted, or modified. In this work we address both issues. We extend the Safraless synthesis algorithm of Kupferman and Vardi so that it handles LTL formulas by translating them to nondeterministic generalized Buchi automata. This leads to an exponential improvement in the complexity of the algorithm. Technically, our algorithm reduces the synthesis problem to the emptiness problem of a nondeterministic Buchi tree automaton A. The generation of A avoids determinization, avoids the parity acceptance condition, and is based on an analysis of runs of universal generalized co-Buchi tree automata. The clean and simple structure of A enables optimizations and a symbolic implementation. In addition, it makes it possible to use information gathered during the synthesis process of properties in the process of synthesizing their conjunction.", "paper_title": "Safraless compositional synthesis", "paper_id": "WOS:000240257000004"}