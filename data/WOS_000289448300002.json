{"auto_keywords": [{"score": 0.0461357779524298, "phrase": "nocs"}, {"score": 0.007770226903394583, "phrase": "high_load"}, {"score": 0.00481495049065317, "phrase": "frequency_tuning"}, {"score": 0.00478999749469106, "phrase": "on-chip_networks"}, {"score": 0.004752809102427463, "phrase": "increasing_number"}, {"score": 0.004667149874736771, "phrase": "single_die"}, {"score": 0.004512124734003846, "phrase": "de-facto_standard"}, {"score": 0.004477083974172596, "phrase": "scalable_communication_backbones"}, {"score": 0.004442314123432222, "phrase": "multi-core_chips"}, {"score": 0.004384960761826366, "phrase": "significant_impact"}, {"score": 0.0043509032299218955, "phrase": "system's_performance"}, {"score": 0.004206338218873218, "phrase": "higher_power_consumption"}, {"score": 0.004184526032558792, "phrase": "degraded_throughput"}, {"score": 0.00398284721587679, "phrase": "novel_router_architecture"}, {"score": 0.003850464100878052, "phrase": "network_load"}, {"score": 0.0036363418376496484, "phrase": "power_management"}, {"score": 0.003542976343910816, "phrase": "novel_fine-grained_frequency_tuning_scheme"}, {"score": 0.0033372020049592726, "phrase": "frequency_tuning_scheme"}, {"score": 0.0032430426853131346, "phrase": "mesh_router"}, {"score": 0.0032094634756436595, "phrase": "local_port"}, {"score": 0.0031270239691197515, "phrase": "dynamic_voltage"}, {"score": 0.0031107911390188055, "phrase": "frequency_scaling"}, {"score": 0.0030946453070176774, "phrase": "dvfs"}, {"score": 0.0030387767523076528, "phrase": "generic_router_pipeline"}, {"score": 0.0029530125680590413, "phrase": "proposed_schemes"}, {"score": 0.002884640164372298, "phrase": "soft_error_vulnerability"}, {"score": 0.0028325548627901004, "phrase": "appropriate_scheme"}, {"score": 0.002795926244280287, "phrase": "prime_design_constraint"}, {"score": 0.002766963729586353, "phrase": "synthetic_workloads"}, {"score": 0.0027311809666295565, "phrase": "freqboost"}, {"score": 0.002681859084438076, "phrase": "average_latency"}, {"score": 0.002633425544817301, "phrase": "freqthrtl"}, {"score": 0.002612936300948578, "phrase": "maximum_benefits"}, {"score": 0.0025858644319102114, "phrase": "power_saving"}, {"score": 0.0025724335893708627, "phrase": "energy_delay_product"}, {"score": 0.0025590751840133333, "phrase": "edp"}, {"score": 0.002532557109736645, "phrase": "freqtune_scheme"}, {"score": 0.002512850690695835, "phrase": "better_candidate"}, {"score": 0.002282021538401598, "phrase": "application_benchmarks"}, {"score": 0.0022583704173318123, "phrase": "ipc_improvement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Network-on-chips", " Chip-multiprocessors", " On-chip router", " DVFS", " Congestion management", " Power", " Performance", " Reliability"], "paper_abstract": "With increasing number of cores being integrated on a single die, Network-on-Chips (NoCs) have become the de-facto standard in providing scalable communication backbones for these multi-core chips. NoCs have a significant impact on the system's performance, power and reliability. However, NoCs can be plagued by higher power consumption and degraded throughput if the network and router are not designed properly. Towards this end, this paper proposes a novel router architecture, where we tune the frequency of a router in response to network load to manage both performance and power. We propose three dynamic frequency tuning techniques, FreqBoost, FreqThrtl and FreqTune, targeted at congestion and power management in NoCs. We also propose and evaluate a novel fine-grained frequency tuning scheme where we vary the number of virtual-channels in a router dynamically. As a further optimization to these schemes, we propose a frequency tuning scheme where we tune the frequency of the four ports of a mesh router separately from the local port. As enablers for these techniques, we exploit Dynamic Voltage and Frequency Scaling (DVFS) and the imbalance in a generic router pipeline through time stealing. We also evaluate and analyze the proposed schemes from the point of view of reliability against soft error vulnerability and provide guidelines in choosing the appropriate scheme when reliability is the prime design constraint. Experiments using synthetic workloads on an 8 x 8 wormhole-switched mesh interconnect show that FreqBoost is a better choice for reducing average latency (maximum 40%) while, FreqThrtl provides the maximum benefits in terms of power saving and energy delay product (EDP). The FreqTune scheme is a better candidate for optimizing both performance and power, achieving on an average 36% reduction in latency, 13% savings in power (up to 24% at high load), and 40% savings (up to 70% at high load) in EDP. With application benchmarks, we observe IPC improvement up to 23% using our design. Our analysis shows FreqBoost to be the most robust scheme amongst the three schemes when reliability is a concern. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "RAFT: A router architecture with frequency tuning for on-chip networks", "paper_id": "WOS:000289448300002"}