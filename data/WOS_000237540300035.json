{"auto_keywords": [{"score": 0.03375857827315947, "phrase": "garbage_cycles"}, {"score": 0.030778376141194518, "phrase": "multiple_traces"}, {"score": 0.00481495049065317, "phrase": "major_weakness"}, {"score": 0.004745056850725867, "phrase": "reference_counting_technique"}, {"score": 0.004541377162789232, "phrase": "cyclic_garbage"}, {"score": 0.0044104497301196794, "phrase": "counted_systems"}, {"score": 0.004159763048814389, "phrase": "global_mark-sweep_collector"}, {"score": 0.003438990973529508, "phrase": "\"lightweight\"_cycle_detector"}, {"score": 0.0032671775301001483, "phrase": "partial_tracing_approach"}, {"score": 0.0031267359296488118, "phrase": "simpler_and_more_efficient_way"}, {"score": 0.00284275228258112, "phrase": "cycle_candidates"}, {"score": 0.002437339565360659, "phrase": "benchmark_programs"}, {"score": 0.0021835829960683666, "phrase": "lightweight_cycle_detector"}, {"score": 0.0021049977753042253, "phrase": "modern_cycle_detector"}], "paper_keywords": [""], "paper_abstract": "This paper focuses on a major weakness of reference counting technique - the lack of collecting cyclic garbage. Most reference counted systems handle this problem by either invoking a global mark-sweep collector occasionally, or incorporating a local (\"partial\") tracing collector that considers only the cycle candidates (objects) but needs several traces on them. This paper proposes a \"lightweight\" cycle detector, which is based on the partial tracing approach but collects garbage cycles in a simpler and more efficient way. Key to the algorithm is the removal of multiple traces on the cycle candidates - It effectively reclaims garbage cycles in only one trace. We have evaluated the algorithm in the Jikes Research Virtual Machine, where a set of benchmark programs from SPECjvm98 were applied. The experiments demonstrate the efficiency and practicability of the lightweight cycle detector, compared to a modern cycle detector that requires multiple traces on objects.", "paper_title": "A lightweight cyclic reference counting algorithm", "paper_id": "WOS:000237540300035"}