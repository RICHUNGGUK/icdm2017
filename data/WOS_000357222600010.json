{"auto_keywords": [{"score": 0.034102752921677, "phrase": "stream_element"}, {"score": 0.00481495049065317, "phrase": "non-strict_turnstile_data_streams"}, {"score": 0.00464343008299973, "phrase": "large_sample"}, {"score": 0.0045876189888390895, "phrase": "data_stream_s"}, {"score": 0.0043533862892678864, "phrase": "positive_integer_key"}, {"score": 0.004164516065972361, "phrase": "key_i"}, {"score": 0.00398380712846857, "phrase": "c-i"}, {"score": 0.003765067028482197, "phrase": "strict_turnstile_streams"}, {"score": 0.003734810936407523, "phrase": "general_non-strict_turnstile_streams"}, {"score": 0.003487222504700868, "phrase": "inverse_distribution_statistics"}, {"score": 0.003431384878608803, "phrase": "additive_error"}, {"score": 0.003417565253539315, "phrase": "epsilon_and_provable_success_probability"}, {"score": 0.003269162006886173, "phrase": "known_processing_time"}, {"score": 0.003152531962718477, "phrase": "data_stream_applications"}, {"score": 0.0030895394261534776, "phrase": "feasible_solution"}, {"score": 0.0030523478413779686, "phrase": "sampling_problem"}, {"score": 0.002861402531078998, "phrase": "non-strict_streams"}, {"score": 0.0026500668745484957, "phrase": "best_previous_solution"}, {"score": 0.002524688179363081, "phrase": "fully_independent_hash_function"}, {"score": 0.0024149629835339926, "phrase": "efficient_k-elements_recovery_structure"}, {"score": 0.002227508035618043, "phrase": "distributed_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Sampling", " Inverse distribution", " Data streams"], "paper_abstract": "We study the problem of generating a large sample from a data stream S of elements (i, v), where i is a positive integer key, v is an integer equal to the count of key i, and the sample consists of pairs (i, C-i) for C-i = Sigma((i,v)is an element of S) v. We consider strict turnstile streams and general non-strict turnstile streams, in which Ci may be negative. Our sample is useful for approximating both forward and inverse distribution statistics, within an additive error epsilon and provable success probability 1 - delta. Our sampling method improves by an order of magnitude the known processing time of each stream element, a crucial factor in data stream applications, thereby providing a feasible solution to the sampling problem. For example, for a sample of size O (epsilon(-2) log (1/delta)) in non-strict streams, our solution requires O((log log(1/epsilon))(2) + (log log(1/delta))(2)) operations per stream element, whereas the best previous solution requires 0 (epsilon(-2) log(2)(1/delta)) evaluations of a fully independent hash function per element. We achieve this improvement by constructing an efficient K-elements recovery structure from which K elements can be extracted with probability 1 - delta. Our structure enables our sampling algorithm to run on distributed systems and extract statistics on the difference between streams. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Efficient sampling of non-strict turnstile data streams", "paper_id": "WOS:000357222600010"}