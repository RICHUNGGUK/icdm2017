{"auto_keywords": [{"score": 0.035479698847890914, "phrase": "fault_block"}, {"score": 0.00481495049065317, "phrase": "dynamic_fault-tolerant_routing"}, {"score": 0.0047013405841819025, "phrase": "leo_satellite_networks"}, {"score": 0.004546755482549647, "phrase": "fault_blocks"}, {"score": 0.004482063543727601, "phrase": "state_transition_model"}, {"score": 0.004418287966422041, "phrase": "finite_state_automata"}, {"score": 0.004252602474733162, "phrase": "boundary_diffusion_method"}, {"score": 0.0041522059428827345, "phrase": "rectilinear-monotone_orthogonal_convex_fault_model"}, {"score": 0.003902085339580381, "phrase": "adaptive_fault-tolerant_routing_algorithm"}, {"score": 0.0038465304237380125, "phrase": "x-y_boundary_routing_algorithm"}, {"score": 0.0036669760226536977, "phrase": "deadlock-free_fault-tolerant_adaptive_routing"}, {"score": 0.0035125292519354724, "phrase": "network_resources_utilization"}, {"score": 0.003413183361838603, "phrase": "routing_diffusion_method"}, {"score": 0.00326939082861424, "phrase": "routing_problem"}, {"score": 0.003176899769744057, "phrase": "experiment_result"}, {"score": 0.00311669276800628, "phrase": "diffusion_overhead"}, {"score": 0.0029711052657054463, "phrase": "traditional_routing_algorithms"}, {"score": 0.002928765962664163, "phrase": "distance_vector"}, {"score": 0.00290087451159631, "phrase": "link_state"}, {"score": 0.00283229915062791, "phrase": "light_loss"}, {"score": 0.0028053237950173508, "phrase": "convergence_time"}, {"score": 0.002699960312990493, "phrase": "random_faults"}, {"score": 0.002500927169609655, "phrase": "dynamic_boundary"}, {"score": 0.0024771000236931836, "phrase": "routing_updating_methods"}, {"score": 0.0022834993174767016, "phrase": "low_earth_orbit_satellite_networks"}, {"score": 0.0022509365210787993, "phrase": "adaptive_fault-tolerant_system"}, {"score": 0.0021049977753042253, "phrase": "interconnect_multiprocessor_computer_systems"}], "paper_keywords": ["Low earth orbit (LEO)", " satellite networks", " fault-tolerant", " finite state automata (FSA)"], "paper_abstract": "We formalize the construction of fault blocks by a state transition model based on finite state automata. Based on the model, a boundary diffusion method is presented for the rectilinear-monotone orthogonal convex fault model such as the rectangular fault model and minimal-connected-component (MCC) faulty model, whereby an adaptive fault-tolerant routing algorithm, called X-Y boundary routing algorithm (X-YBRA), is presented for deadlock-free fault-tolerant adaptive routing outside the fault blocks. To improve the network resources utilization, we put forward a routing diffusion method in the fault block, which completely solves the routing problem in the fault block. The experiment result shows that the diffusion overhead of our method is far lower than that of the traditional routing algorithms such as distance vector and link state routing algorithms with the light loss in convergence time. For the occurrence and recovery of random faults, the expansion and shrinkage of the fault block are also discussed. Accordingly, the dynamic boundary and routing updating methods are put forward to respond to these cases. Based on these methods, we develop low earth orbit satellite networks into an adaptive fault-tolerant system in routing. Our works can be also applied to other 2D mesh networks such as the interconnect multiprocessor computer systems.", "paper_title": "Dynamic Fault-Tolerant Routing Based on FSA for LEO Satellite Networks", "paper_id": "WOS:000323718600004"}