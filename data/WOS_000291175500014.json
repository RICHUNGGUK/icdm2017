{"auto_keywords": [{"score": 0.049554471785970645, "phrase": "distributed_applications"}, {"score": 0.03605781665678908, "phrase": "gbf"}, {"score": 0.00481495049065317, "phrase": "distributed_network_applications"}, {"score": 0.00471003041684707, "phrase": "bloom_filters"}, {"score": 0.0046328364646343375, "phrase": "large_sets"}, {"score": 0.004556901872357751, "phrase": "compact_form"}, {"score": 0.004218602458288531, "phrase": "saturated_filters"}, {"score": 0.0040366412779632085, "phrase": "generalized_bloom_filter"}, {"score": 0.0039053194919285725, "phrase": "space-efficient_data_structure"}, {"score": 0.003675517796014622, "phrase": "ip_traceback"}, {"score": 0.0036352070472201086, "phrase": "web_caching"}, {"score": 0.0035755653799043, "phrase": "peer-to-peer_networks"}, {"score": 0.003478321590910367, "phrase": "standard_bloom_filter"}, {"score": 0.0033651019362620866, "phrase": "upper_bound"}, {"score": 0.003309877074892399, "phrase": "false-positive_probability"}, {"score": 0.003132236287543072, "phrase": "key_idea"}, {"score": 0.0027286224888843956, "phrase": "false_positives"}, {"score": 0.002639740960006001, "phrase": "false_negatives"}, {"score": 0.0026107601878587816, "phrase": "membership_queries"}, {"score": 0.002511803988580901, "phrase": "false-positive_and_false-negative_rates"}, {"score": 0.002350792395194063, "phrase": "gbf."}, {"score": 0.002261666793030715, "phrase": "derived_expressions"}, {"score": 0.002175913488493802, "phrase": "data_structure"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bloom filters", " Data structures", " Network security"], "paper_abstract": "Distributed applications use Bloom filters to transmit large sets in a compact form. However, attackers can easily disrupt these applications by using or advertising saturated filters. In this paper we introduce the Generalized Bloom Filter (GBF), a space-efficient data structure to securely represent a set in distributed applications, such as IP traceback, web caching, and peer-to-peer networks. Different from the standard Bloom filter, the GBF has an upper bound on the false-positive probability, limiting the effect of these attacks. The key idea of the GBF is to not only set, but also reset bits of the filter at each insertion. This procedure limits the false positives at the expense of introducing false negatives in membership queries. We derive expressions for the false-positive and false-negative rates and show that they are both upper-bounded in the GBF. We conduct simulations that validate the derived expressions and explore the tradeoffs of this data structure. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A Generalized Bloom Filter to Secure Distributed Network Applications", "paper_id": "WOS:000291175500014"}