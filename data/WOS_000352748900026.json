{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "concept_lattices"}, {"score": 0.004731928080086235, "phrase": "incremental_algorithms"}, {"score": 0.0044524122425287005, "phrase": "concept_lattice"}, {"score": 0.004337710093279712, "phrase": "new_objects"}, {"score": 0.004189337956225294, "phrase": "formal_context"}, {"score": 0.0038737214010638745, "phrase": "efficient_incremental_algorithm"}, {"score": 0.003806866174028117, "phrase": "concept_lattice_construction"}, {"score": 0.0031431690368229443, "phrase": "canonical_generators"}, {"score": 0.00303553181618577, "phrase": "covering_relation"}, {"score": 0.002686935113435742, "phrase": "time_complexity_issues"}, {"score": 0.0025723630851105304, "phrase": "experimental_evaluation"}, {"score": 0.0023990982005125763, "phrase": "theoretical_and_empirical_analyses"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Formal Concept Analysis", " Concept lattice", " Incremental algorithm", " Lattice construction"], "paper_abstract": "Incremental algorithms for constructing concept lattices can update a concept lattice according to new objects added to the formal context. In this paper, we propose an efficient incremental algorithm for concept lattice construction. The algorithm, called FastAddIntent, results as a modification of Addlntent in which we improve two fundamental procedures including searching for canonical generators and fixing the covering relation. We describe the algorithm completely, prove correctness of our improvements, discuss time complexity issues, and present an experimental evaluation of its performance and comparison with AddIntent. Theoretical and empirical analyses show the advantages of our algorithm when applied to large or (and) dense formal contexts. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A fast incremental algorithm for constructing concept lattices", "paper_id": "WOS:000352748900026"}