{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "algebraic_soft-decision_decoding"}, {"score": 0.009888469847387357, "phrase": "direct_root_computation"}, {"score": 0.004760394308239882, "phrase": "reed-solomon_codes"}, {"score": 0.004706453355638515, "phrase": "bivariate_polynomial_factorization"}, {"score": 0.004626680470601208, "phrase": "important_stage"}, {"score": 0.0043953478557600565, "phrase": "significant_portion"}, {"score": 0.0043208252177835815, "phrase": "overall_decoding_latency"}, {"score": 0.004223415145617665, "phrase": "exhaustive_search-based_root_computation_method"}, {"score": 0.004035107125458193, "phrase": "root_computation_step"}, {"score": 0.003944112858235306, "phrase": "rs_codes"}, {"score": 0.0038114397487574838, "phrase": "root-order_prediction_method"}, {"score": 0.003746936457181864, "phrase": "zhang"}, {"score": 0.0037042817107563785, "phrase": "parhi"}, {"score": 0.003641433168173135, "phrase": "average_latency"}, {"score": 0.0034395119150793787, "phrase": "worst-case_latency"}, {"score": 0.0033811403330431897, "phrase": "factorization_procedure"}, {"score": 0.003193606324727067, "phrase": "delay-sensitive_applications"}, {"score": 0.003068537223324389, "phrase": "novel_architecture"}, {"score": 0.002898291237210567, "phrase": "factorization_latency"}, {"score": 0.002585539416877115, "phrase": "relatively_low_interpolation_cost"}, {"score": 0.0024560114164181765, "phrase": "low_y-degree"}, {"score": 0.0024005409468262203, "phrase": "existing_works"}, {"score": 0.0023196699954340437, "phrase": "new_architecture"}, {"score": 0.0022802596433757565, "phrase": "significantly_smaller_worst-case_decoding_latency"}, {"score": 0.0021413855297794946, "phrase": "corresponding_hardware"}, {"score": 0.0021049977753042253, "phrase": "polynomial_coefficients"}], "paper_keywords": ["direct root computation", " factorization architecture", " Reed-Solomon (RS) decoding"], "paper_abstract": "Bivariate polynomial factorization is an important stage of algebraic soft-decision decoding of Reed-Solomon (RS) codes and contributes to a significant portion of the overall decoding latency. With the exhaustive search-based root computation method, factorization latency is dominated by the root computation step, especially for RS codes defined over very large finite fields. The root-order prediction method proposed by Zhang and Parhi only improves average latency, but does not have any effect on the worst-case latency of the factorization procedure. Thus, neither approach is well-suited for delay-sensitive applications. In this paper, a novel architecture based on direct root computation is proposed to greatly reduce the factorization latency. Direct root computation is feasible because in most practical applications of algebraic soft-decision decoding of RS codes, enough decoding gain can be achieved with a relatively low interpolation cost, which results in a bivariate polynomial with low Y-degree. Compared with existing works, not only does the new architecture have a significantly smaller worst-case decoding latency, but it is also more area efficient since the corresponding hardware for routing polynomial coefficients is eliminated.", "paper_title": "Low-latency factorization architecture for algebraic soft-decision decoding of reed-solomon codes", "paper_id": "WOS:000250447700005"}