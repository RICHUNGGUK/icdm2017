{"auto_keywords": [{"score": 0.04512493687942277, "phrase": "heterogeneous_computing_resources"}, {"score": 0.00481495049065317, "phrase": "gridway"}, {"score": 0.004537401559396022, "phrase": "key_motivations"}, {"score": 0.004492717291734985, "phrase": "computational_and_data_grids"}, {"score": 0.004361276005140776, "phrase": "coordinated_use"}, {"score": 0.0038919354605673104, "phrase": "significant_impact"}, {"score": 0.0036312482387007815, "phrase": "network_characteristics"}, {"score": 0.0032402142645120958, "phrase": "autonomic_network-aware_meta-scheduling_architecture"}, {"score": 0.00308357048262018, "phrase": "current_status"}, {"score": 0.0028911669203979156, "phrase": "computing_resources"}, {"score": 0.002806449337145999, "phrase": "widely_used_gridway_meta-scheduler"}, {"score": 0.002657511557782469, "phrase": "transfer_times"}, {"score": 0.0025924443774713473, "phrase": "autonomic_control_loop"}, {"score": 0.002516457934208144, "phrase": "cpu_use"}, {"score": 0.0024916260764216752, "phrase": "network_capability"}, {"score": 0.002418587525752333, "phrase": "job_admission"}, {"score": 0.0023947191132328233, "phrase": "resource_selection"}, {"score": 0.0023476849595393872, "phrase": "overall_job_completion_times"}, {"score": 0.002223039450439376, "phrase": "real_testbed"}, {"score": 0.002168586864007222, "phrase": "different_national_organizations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grid computing", " Autonomic systems", " GridWay", " Quality of service"], "paper_abstract": "One of the key motivations of computational and data grids is the ability to make coordinated use of heterogeneous computing resources which are geographically dispersed. Consequently, the performance of the network linking all the resources present in a grid has a significant impact on the performance of an application. It is therefore essential to consider network characteristics when carrying out tasks such as scheduling, migration or monitoring of jobs. This work focuses on an implementation of an autonomic network-aware meta-scheduling architecture that is capable of adapting its behavior to the current status of the environment, so that jobs can be efficiently mapped to computing resources. The implementation extends the widely used GridWay meta-scheduler and relies on exponential smoothing to predict the execution and transfer times of jobs. An autonomic control loop (which takes account of CPU use and network capability) is used to alter job admission and resource selection criteria to improve overall job completion times and throughput. The implementation has been tested using a real testbed involving heterogeneous computing resources distributed across different national organizations. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A GridWay-based autonomic network-aware metascheduler", "paper_id": "WOS:000304636600009"}