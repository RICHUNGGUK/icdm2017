{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "common_tasks"}, {"score": 0.04289311160718139, "phrase": "complex_queries"}, {"score": 0.04107868567004354, "phrase": "common_subexpressions"}, {"score": 0.03069155049113217, "phrase": "query_execution_plans"}, {"score": 0.00477190623242136, "phrase": "relational_cloud_database_queries"}, {"score": 0.004645057834614705, "phrase": "conventional_relational_database_system's_hardware"}, {"score": 0.00450130420152996, "phrase": "query_workload"}, {"score": 0.004284302478991387, "phrase": "large_amount"}, {"score": 0.0041891398413899435, "phrase": "short_duration"}, {"score": 0.004041238873048836, "phrase": "large-scale_data"}, {"score": 0.0040050835356293365, "phrase": "virtual_machine_clusters"}, {"score": 0.0038290829316346654, "phrase": "single_query"}, {"score": 0.0037778009042360758, "phrase": "multiple_queries"}, {"score": 0.0032863459256972896, "phrase": "virtual_computers"}, {"score": 0.0032423089921154503, "phrase": "total_time"}, {"score": 0.002923668065402269, "phrase": "efficient_sets"}, {"score": 0.002845809662579165, "phrase": "total_execution_time"}, {"score": 0.0027825094419000637, "phrase": "np-hard_problem"}, {"score": 0.002708399936381754, "phrase": "robust_heuristic_algorithms"}, {"score": 0.0025892330566358503, "phrase": "hill_climbing"}, {"score": 0.0024093494406195386, "phrase": "optimal_query_execution_plans"}, {"score": 0.0023346234464901978, "phrase": "optimization_time"}, {"score": 0.00216263228969761, "phrase": "extensive_experiments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Relational cloud database", " Multiple query optimization", " Evolutionary computing", " Branch-and-Bound", " Hill Climbing"], "paper_abstract": "Cloud computing enables a conventional relational database system's hardware to be adjusted dynamically according to query workload, performance and deadline constraints. One can rent a large amount of resources for a short duration in order to run complex queries efficiently on large-scale data with virtual machine clusters. Complex queries usually contain common subexpressions, either in a single query or among multiple queries that are submitted as a batch. The common subexpressions scan the same relations, compute the same tasks (join, sort, etc.), and/or ship the same data among virtual computers. The total time spent for the queries can be reduced by executing these common tasks only once. In this study, we build and use efficient sets of query execution plans to reduce the total execution time. This is an NP-Hard problem therefore, a set of robust heuristic algorithms, Branch-and-Bound, Genetic, Hill Climbing, and Hybrid Genetic-Hill Climbing, are proposed to find (near-) optimal query execution plans and maximize the benefits. The optimization time of each algorithm for identifying the query execution plans and the quality of these plans are analyzed by extensive experiments. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Robust heuristic algorithms for exploiting the common tasks of relational cloud database queries", "paper_id": "WOS:000351296200007"}