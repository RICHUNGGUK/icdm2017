{"auto_keywords": [{"score": 0.04858132305104682, "phrase": "cross_links"}, {"score": 0.00481495049065317, "phrase": "performance_analysis"}, {"score": 0.0047872135686404275, "phrase": "albr"}, {"score": 0.004759635663291431, "phrase": "dar_algorithm"}, {"score": 0.004732215871738028, "phrase": "x-torus_topology"}, {"score": 0.004637478829869904, "phrase": "minimal_lookups"}, {"score": 0.00461075951152053, "phrase": "interconnection_networks"}, {"score": 0.0045709675813472884, "phrase": "major_role"}, {"score": 0.004531517501420676, "phrase": "modern_multiprocessor_architectures"}, {"score": 0.004191377834552202, "phrase": "switching_elements"}, {"score": 0.003990385737207714, "phrase": "good_performance"}, {"score": 0.003876669922047053, "phrase": "existing_x-torus_topology"}, {"score": 0.0037989951856280423, "phrase": "iccsa"}, {"score": 0.0037770909796268322, "phrase": "lncs"}, {"score": 0.0035855066449812273, "phrase": "torus_network"}, {"score": 0.0034933782525914682, "phrase": "shorter_diameter"}, {"score": 0.0033257460346754687, "phrase": "dual_adaptive_routing"}, {"score": 0.0032590737464194696, "phrase": "albr_algorithm"}, {"score": 0.003156984631072011, "phrase": "channel_queues"}, {"score": 0.0031061030639877715, "phrase": "algorithm"}, {"score": 0.002953711377604328, "phrase": "cross_link"}, {"score": 0.002911278281894321, "phrase": "optimal_use"}, {"score": 0.0028694530267725925, "phrase": "performance_aspects"}, {"score": 0.00282822695516646, "phrase": "even_forms"}, {"score": 0.0027396009171301514, "phrase": "perl"}, {"score": 0.0027237824436573085, "phrase": "gawk"}, {"score": 0.0026846436189970446, "phrase": "trace_files"}, {"score": 0.0026384190747013292, "phrase": "dar"}, {"score": 0.0025854877948627473, "phrase": "optimal_utilization"}, {"score": 0.0025044454602720597, "phrase": "packet_congestion"}, {"score": 0.002461313735611462, "phrase": "major_issue"}, {"score": 0.0023295585212850154, "phrase": "new_approach"}, {"score": 0.002289431798120276, "phrase": "deadlock_detection"}, {"score": 0.002276210060619432, "phrase": "recovery_mechanism"}, {"score": 0.0022240805921303875, "phrase": "proposed_progressive_deadlock_recovery_mechanism"}, {"score": 0.0021921063460682293, "phrase": "high_path_diversity"}, {"score": 0.002141898874982106, "phrase": "low_cost_and_simple_mechanism"}], "paper_keywords": ["Interconnection Networks", " Load Balancing", " Torus", " X-Torus", " NS-2", " Channel Queue", " Gawk", " Perl", " Granularity", " Deadlock", " Visual C#.NET"], "paper_abstract": "Interconnection networks play a major role in differentiating modern multiprocessor architectures. They can be categorized according to a number of criteria such as topology, routing strategy and switching technique. They are built up of switching elements; the topology is packaged such that it is cost effective along with its ability to achieve good performance. In this paper, we have studied an existing X-Torus topology (Gu et al. in ICCSA, LNCS, vol. 3984, pp. 149-157, 2006) which is an enhancement of a Torus network by adding Cross Links, and hence contributes to shorter diameter, shorter average distance and larger bisection bandwidth. Furthermore, we proposed the Adaptive Load Balanced Routing (ALBR) algorithm and Dual Adaptive Routing (DAR) algorithm. The ALBR algorithm can manage traffic during congestion by sensing the same through Channel Queues. The strength of the Algorithm lies in the fact that using backtracking, the number of lookups to reach destination through Cross Link decreases, thereby making optimal use of them. The Performance aspects for both Odd and Even forms of X-Torus are tested on Network Simulator-2 (NS-2) using Perl and Gawk for analyzing text of trace files generated during simulation. The DAR reduces the number of lookups by optimal utilization of Cross Links but also helps to curb the problem of packet congestion, which could be a major issue in X-Torus due to the presence of Cross Links. In order to improve its rooting performance we have provided a new approach to handle the problem of deadlock detection and recovery mechanism in the case of X-Torus. The proposed progressive deadlock recovery mechanism takes advantage of the high path diversity of X-Torus. We also present a low cost and simple mechanism for deadlock detection as against many conservative mechanisms.", "paper_title": "On a deadlock and performance analysis of ALBR and DAR algorithm on X-Torus topology by optimal utilization of Cross Links and minimal lookups", "paper_id": "WOS:000299509500008"}