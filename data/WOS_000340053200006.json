{"auto_keywords": [{"score": 0.035366979368155665, "phrase": "resource_utilization"}, {"score": 0.029420333683948783, "phrase": "many-orientation_applications"}, {"score": 0.028930494932271376, "phrase": "fine_grain_method"}, {"score": 0.026241804536545506, "phrase": "gpu_implementation"}, {"score": 0.00481495049065317, "phrase": "multiresolution_gabor_feature_extraction"}, {"score": 0.004781915513030716, "phrase": "real_time_vision_applications"}, {"score": 0.004749106104067268, "phrase": "multiresolution_gabor_filter_banks"}, {"score": 0.004684157900507474, "phrase": "feature_extraction"}, {"score": 0.0045726187330434025, "phrase": "gabor_filters"}, {"score": 0.004494570360108983, "phrase": "exceptional_feature_extractors"}, {"score": 0.0044483793824152944, "phrase": "close_correspondence"}, {"score": 0.0044026610128451256, "phrase": "simple_cells"}, {"score": 0.004357410458790669, "phrase": "primary_visual_cortex"}, {"score": 0.004195418010131832, "phrase": "gabor_filter"}, {"score": 0.004152288616186981, "phrase": "computationally_intensive_task"}, {"score": 0.004067349981835669, "phrase": "gabor_feature_space"}, {"score": 0.0039431758381711125, "phrase": "large_quantity"}, {"score": 0.003822778117250714, "phrase": "real_time_performance"}, {"score": 0.0037834649508375544, "phrase": "natural_solution"}, {"score": 0.0036553070575015344, "phrase": "attractive_platforms"}, {"score": 0.0036177098964897364, "phrase": "intensive_signal_processing_applications"}, {"score": 0.003531474887552889, "phrase": "low_power_consumption"}, {"score": 0.0034472883424839346, "phrase": "configurable_architecture"}, {"score": 0.0034236045013591437, "phrase": "gabor_feature_extraction"}, {"score": 0.0034001890115451486, "phrase": "fpga"}, {"score": 0.0033190180867511605, "phrase": "fpga_hardware_fabric"}, {"score": 0.00327356326590461, "phrase": "streaming_data_flow"}, {"score": 0.0032398798149196432, "phrase": "exceptional_performance"}, {"score": 0.0032065418360603293, "phrase": "increased_resource_utilization"}, {"score": 0.0031193028729331667, "phrase": "resource_sharing"}, {"score": 0.0030872017736888113, "phrase": "higher_levels"}, {"score": 0.0030344301563232944, "phrase": "real_time_feature_extraction"}, {"score": 0.0030135741897058844, "phrase": "high_resolution_images"}, {"score": 0.0028914057633212045, "phrase": "multiresolution_feature_extraction"}, {"score": 0.0028715299874549245, "phrase": "extensive_resource_sharing"}, {"score": 0.002851790448644913, "phrase": "enhanced_resource_utilization"}, {"score": 0.0026161698049580804, "phrase": "different_orientations"}, {"score": 0.0025537472239953807, "phrase": "real-time_performance"}, {"score": 0.002441734529530325, "phrase": "energy_efficiency"}, {"score": 0.002391884998436993, "phrase": "gpu"}, {"score": 0.0022710523337245337, "phrase": "resource_saving"}, {"score": 0.002163930783583212, "phrase": "fully_parallel_architecture"}], "paper_keywords": ["Gabor filter", " Feature extraction", " FPGA", " Multiresolution"], "paper_abstract": "Multiresolution Gabor filter banks are used for feature extraction in a variety of applications as Gabor filters have shown to be exceptional feature extractors with a close correspondence to the simple cells in the primary visual cortex (V1) of the brain. Yet applying the Gabor filter is a computationally intensive task. Most applications that utilize the Gabor feature space require real time results; however, the large quantity of computations involved has hindered systems from achieving real time performance. The natural solution for such compute intensive tasks is parallelization. FPGAs have emerged as attractive platforms for compute intensive signal processing applications due to their massively parallel computation resources as well as low power consumption and affordability. We present a configurable architecture for Gabor feature extraction on FPGA that enhances the resource utilization of the FPGA hardware fabric while maintaining a streaming data flow to yield exceptional performance. The increased resource utilization resulting from configurability, optimizations, and resource sharing allows for higher levels of parallelism to achieve real time feature extraction of high resolution images. Two architectures are introduced. The first is an architecture for multiresolution feature extraction with extensive resource sharing for enhanced resource utilization. The second is an architecture for many-orientation applications using a coarse to fine grain method to enhance resource utilization by reducing the number of filters applied at different orientations. Our results show that our multiresolution implementation achieves real-time performance on 2048 x 1526 images and exhibits 6X speed up over a GPU implementation while exhibiting energy efficiency with 0.4fps/W compared to the GPU that achieves 0.036fps/W.[1] The implementation for many-orientation applications using the coarse to fine grain method exhibits resource saving of at most for O number of orientations and higher, compared to a fully parallel architecture and 25x speedup compared to a GPU implementation for 16 orientations.", "paper_title": "Accelerating Multiresolution Gabor Feature Extraction for Real Time Vision Applications", "paper_id": "WOS:000340053200006"}