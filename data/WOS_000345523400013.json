{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "incremental_converter"}, {"score": 0.004595529592539951, "phrase": "chip_design"}, {"score": 0.004242291530697285, "phrase": "numerous_intellectual_property_blocks"}, {"score": 0.004103212598803194, "phrase": "protocol_mismatches"}, {"score": 0.003942299471749811, "phrase": "system-level_functionality"}, {"score": 0.0038642157757169315, "phrase": "soc._mismatches"}, {"score": 0.003663443192307343, "phrase": "inter-ip_interactions"}, {"score": 0.003543273649210823, "phrase": "converter_generation"}, {"score": 0.0034963129868796033, "phrase": "limited_practical_application"}, {"score": 0.003404244237372396, "phrase": "restrictive_models"}, {"score": 0.0033367819052051995, "phrase": "formal_rigour"}, {"score": 0.0032489004068215407, "phrase": "small_subset"}, {"score": 0.0032058286587989234, "phrase": "commonly_encountered_mismatches"}, {"score": 0.0029988599391845517, "phrase": "formal_technique"}, {"score": 0.0029590932194209826, "phrase": "soc_design"}, {"score": 0.0029198522863606953, "phrase": "incremental_converter_synthesis"}, {"score": 0.002861961643289598, "phrase": "proposed_formulation"}, {"score": 0.002824005136794786, "phrase": "precise_models"}, {"score": 0.0026593184154220123, "phrase": "scalable_algorithm"}, {"score": 0.0025892330566358503, "phrase": "multiple_components"}, {"score": 0.002295964130868963, "phrase": "experimental_results"}, {"score": 0.002250415129116109, "phrase": "real-life_amba_benchmarks"}, {"score": 0.0021764949731965656, "phrase": "wide_range"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Verification", " Correct-by-construction design", " system-on-a-chip", " protocol conversion", " two-player games"], "paper_abstract": "A system-on-chip (SoC) contains numerous intellectual property blocks, or IPs. Protocol mismatches between IPs may affect the system-level functionality of the SoC. Mismatches are addressed by introducing converters to control inter-IP interactions. Current approaches towards converter generation find limited practical application as they use restrictive models, lack formal rigour, handle a small subset of commonly encountered mismatches, and/or are not scalable. We propose a formal technique for SoC design using incremental converter synthesis. The proposed formulation provides precise models for protocols and requirements, and provides a scalable algorithm that allows adding multiple components and requirements to an SoC incrementally. We prove that the technique is sound and complete. Experimental results obtained using real-life AMBA benchmarks show the scalability and wide range of mismatches handled by our approach.", "paper_title": "A Formal Approach to Incremental Converter Synthesis for System-on-Chip Design", "paper_id": "WOS:000345523400013"}