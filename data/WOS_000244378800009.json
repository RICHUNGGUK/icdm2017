{"auto_keywords": [{"score": 0.04900969000530813, "phrase": "malicious_activity"}, {"score": 0.015719716506582538, "phrase": "self-protecting_systems"}, {"score": 0.010536346217123387, "phrase": "forensix"}, {"score": 0.004413096646892175, "phrase": "false_positives"}, {"score": 0.004356472679444647, "phrase": "limited_amount"}, {"score": 0.004190904630161064, "phrase": "undesirable_activity"}, {"score": 0.0036829668399442914, "phrase": "human_resources"}, {"score": 0.00361234842093148, "phrase": "cpu"}, {"score": 0.0035543706594585076, "phrase": "storage_resources"}, {"score": 0.0034974064973871833, "phrase": "computing_systems"}, {"score": 0.003441352119167824, "phrase": "automated_analysis"}, {"score": 0.0033861930947608207, "phrase": "primary_goal"}, {"score": 0.0030435998319355883, "phrase": "forensix_system"}, {"score": 0.002985130390111069, "phrase": "target_computer"}, {"score": 0.0026657070241024963, "phrase": "human_overhead"}, {"score": 0.0025725382476862305, "phrase": "comprehensive_monitoring"}, {"score": 0.0025230952890994236, "phrase": "target_system"}, {"score": 0.0024987304152852873, "phrase": "kernel_event_level"}, {"score": 0.002380381895973937, "phrase": "kernel_event_information"}, {"score": 0.0022384684697329097, "phrase": "wide_variety"}, {"score": 0.002181270821530302, "phrase": "database_technology"}, {"score": 0.0021601997088758957, "phrase": "high-level_querying"}, {"score": 0.0021393317071153844, "phrase": "archived_log"}, {"score": 0.0021049977753042253, "phrase": "human_cost"}], "paper_keywords": ["self-healing computers", " computer forensics", " operating systems", " auditing"], "paper_abstract": "Self-protecting systems require the ability to instantaneously detect malicious activity at run-time and prevent execution. We argue that it is impossible to perfectly self-protect systems without false positives due to the limited amount of information one might have at run-time and that eventually some undesirable activity will occur that will need to be rolled back. As a consequence of this, it is important that self-protecting systems have the ability to completely and automatically roll back malicious activity which has occurred. As the cost of human resources currently dominates the cost of CPU, network, and storage resources, we contend that computing systems should be built with automated analysis and recovery as a primary goal. Towards this end, we describe the design, implementation, and evaluation of Forensix: a robust, high-precision analysis and recovery system for supporting self-healing. The Forensix system records all activity of a target computer and allows for efficient, automated reconstruction of activity when needed. Such a system can be used to automatically detect patterns of malicious activity and selectively undo their operations. Forensix uses three key mechanisms to improve the accuracy and reduce the human overhead of performing analysis and recovery. First, it performs comprehensive monitoring of the execution of a target system at the kernel event level, giving a high-resolution, application-independent view of all activity. Second, it streams the kernel event information, in real-time, to append-only storage on a separate, hardened, logging machine, making the system resilient to a wide variety of attacks. Third, it uses database technology to support high-level querying of the archived log, greatly reducing the human cost of performing analysis and recovery. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Automatic high-performance reconstruction and recovery", "paper_id": "WOS:000244378800009"}