{"auto_keywords": [{"score": 0.03212080927079841, "phrase": "proposed_multipliers"}, {"score": 0.00481495049065317, "phrase": "modified_booth_encoding"}, {"score": 0.004608284537368354, "phrase": "new_efficient_modulo"}, {"score": 0.004508286991825192, "phrase": "booth_multiplication_algorithm"}, {"score": 0.0043147264956783565, "phrase": "weighted_representation"}, {"score": 0.0037273513742154237, "phrase": "derived_partial_products"}, {"score": 0.0035934073774126856, "phrase": "inverted_end"}, {"score": 0.0034642599795044445, "phrase": "adder_tree"}, {"score": 0.002780958897911242, "phrase": "single_gate_level_model"}, {"score": 0.002680932410366204, "phrase": "experimental_cmos_implementations"}, {"score": 0.0023669270875629226, "phrase": "power_savings"}, {"score": 0.0021996478802839316, "phrase": "corresponding_area"}, {"score": 0.0021049977753042253, "phrase": "proposed_multiply-add_units"}], "paper_keywords": ["Modulo", " Multipliers", " Fused multiply-add units", " Residue number system", " RNS", " Modified Booth multiplication"], "paper_abstract": "In this work a new efficient modulo 2(n)+1 modified Booth multiplication algorithm for both operands in the weighted representation is proposed. Furthermore, the same algorithm is extended to realize modulo 2(n)+1 multiply-add units. The derived partial products are reduced by an inverted end around carry-save adder tree to two operands, which are finally added by a modulo 2(n)+1 adder. The performance and efficiency of the proposed multipliers are evaluated and compared against the earlier modulo 2(n)+1 multipliers, based on a single gate level model. Comparisons based on experimental CMOS implementations for both the multiply and multiply-add units are also given. The proposed multipliers yield area and power savings by an average of 15% and 10% respectively, while the corresponding area and power savings of the proposed multiply-add units are 14% and 21% respectively. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Efficient modulo 2(n)+1 multiply and multiply-add units based on modified Booth encoding", "paper_id": "WOS:000328431900015"}