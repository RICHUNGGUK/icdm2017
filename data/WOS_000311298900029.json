{"auto_keywords": [{"score": 0.03647553486591155, "phrase": "airborne_phase"}, {"score": 0.036012824220846375, "phrase": "landing_phase"}, {"score": 0.00481495049065317, "phrase": "landing_motion_control_for_character_animation"}, {"score": 0.004710306419574744, "phrase": "new_method"}, {"score": 0.004648609688625397, "phrase": "agile_and_natural_human_landing_motions"}, {"score": 0.004527619017250708, "phrase": "physical_simulation"}, {"score": 0.00440976345264104, "phrase": "pre-scripted_sequences"}, {"score": 0.00431388720289049, "phrase": "general_controller"}, {"score": 0.004146510711518748, "phrase": "wide_range"}, {"score": 0.004074212307838049, "phrase": "initial_speeds"}, {"score": 0.0037973594873521596, "phrase": "large_stress"}, {"score": 0.0036660436272785476, "phrase": "character's_motion"}, {"score": 0.003586278948128509, "phrase": "forward_simulator"}, {"score": 0.003539252646181146, "phrase": "control_algorithm"}, {"score": 0.003198554193075258, "phrase": "ideal_relation"}, {"score": 0.0031565959573536194, "phrase": "landing_velocity"}, {"score": 0.002717750004930131, "phrase": "joint_stress"}, {"score": 0.0026352496813713292, "phrase": "contact_forces"}, {"score": 0.002600661525224505, "phrase": "linear_momentum"}, {"score": 0.0025778546800417808, "phrase": "angular_momentum"}, {"score": 0.0025217065652145443, "phrase": "rolling_motion"}, {"score": 0.0024667783849055634, "phrase": "multiple_body_parts"}, {"score": 0.0023294867572824147, "phrase": "initial_conditions"}, {"score": 0.0023090525096074264, "phrase": "different_falling_heights"}, {"score": 0.0022389308000757037, "phrase": "angular_velocities"}, {"score": 0.0022192891418394514, "phrase": "simulated_results"}, {"score": 0.0021518875024104244, "phrase": "realistic_action_sequences"}, {"score": 0.0021236300589450143, "phrase": "real_world_footage"}, {"score": 0.0021049977753042253, "phrase": "experienced_freerunners"}], "paper_keywords": ["Character Animation", " Physics-based Animation", " Optimal Control"], "paper_abstract": "We introduce a new method to generate agile and natural human landing motions in real-time via physical simulation without using any mocap or pre-scripted sequences. We develop a general controller that allows the character to fall from a wide range of heights and initial speeds, continuously roll on the ground, and get back on its feet, without inducing large stress on joints at any moment. The character's motion is generated through a forward simulator and a control algorithm that consists of an airborne phase and a landing phase. During the airborne phase, the character optimizes its moment of inertia to meet the ideal relation between the landing velocity and the angle of attack, under the laws of conservation of momentum. The landing phase can be divided into three stages: impact, rolling, and getting-up. To reduce joint stress at landing, the character leverages contact forces to control linear momentum and angular momentum, resulting in a rolling motion which distributes impact over multiple body parts. We demonstrate that our control algorithm can be applied to a variety of initial conditions with different falling heights, orientations, and linear and angular velocities. Simulated results show that our algorithm can effectively create realistic action sequences comparable to real world footage of experienced freerunners.", "paper_title": "Falling and Landing Motion Control for Character Animation", "paper_id": "WOS:000311298900029"}