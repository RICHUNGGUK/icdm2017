{"auto_keywords": [{"score": 0.038037926583008995, "phrase": "proposed_resource_placement_strategy"}, {"score": 0.00481495049065317, "phrase": "structured_peer"}, {"score": 0.004691273968935458, "phrase": "peer_networks"}, {"score": 0.004570759604335229, "phrase": "skewed_popularity_distribution"}, {"score": 0.004395745347001482, "phrase": "gnutella"}, {"score": 0.00433889954398799, "phrase": "kazaa"}, {"score": 0.004145649381700967, "phrase": "optimal_resource"}, {"score": 0.0037599278182081056, "phrase": "performance_gain"}, {"score": 0.0035458802311188497, "phrase": "better_results"}, {"score": 0.0034999880739789257, "phrase": "existing_works"}, {"score": 0.002398274973378986, "phrase": "simulation_results"}, {"score": 0.0023213398100616132, "phrase": "real_deployment"}, {"score": 0.00214659338413584, "phrase": "average_search_cost"}, {"score": 0.0021049977753042253, "phrase": "whole_system"}], "paper_keywords": ["Peer-to-peer (P2P) network", " distributed hash table (DHT)", " popularity", " placement", " cache", " topology"], "paper_abstract": "Utilizing the skewed popularity distribution in P2P systems, common in Gnutella and KazaA like P2P applications, we propose an optimal resource (replica or link) placement strategy, which can optimally trade off the performance gain and paid cost. The proposed resource placement strategy, with better results than existing works, can be generally applied in randomized P2P systems (Symphony) and deterministic P2P systems (e. g., Chord, Pastry, Tapestry, etc.). We apply the proposed resource placement strategy, respectively, to two novel applications: PCache (a P2P-based caching scheme) and PRing (a P2P ring structure). The simulation results as well as a real deployment on Planetlab demonstrate the effectiveness of the proposed resource placement strategy in reducing the average search cost of the whole system.", "paper_title": "Optimal Resource Placement in Structured Peer-to-Peer Networks", "paper_id": "WOS:000277969100009"}