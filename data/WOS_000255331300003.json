{"auto_keywords": [{"score": 0.04510893710314952, "phrase": "performance_evaluation"}, {"score": 0.04042594686885475, "phrase": "particular_trace"}, {"score": 0.03212212187866343, "phrase": "statistical_model"}, {"score": 0.00481495049065317, "phrase": "poisson_distributed_stalls"}, {"score": 0.0046797114400479135, "phrase": "statistical_approach"}, {"score": 0.00452670409375785, "phrase": "superscalar_processor"}, {"score": 0.004483909657713567, "phrase": "traditional_trace-driven_simulators"}, {"score": 0.004399525320473839, "phrase": "large_amount_time"}, {"score": 0.004116440453049531, "phrase": "instructions_increases"}, {"score": 0.0032149396890830575, "phrase": "simulation_results"}, {"score": 0.0031693980719538287, "phrase": "specific_trace"}, {"score": 0.0030802351224657673, "phrase": "trace-driven_simulation"}, {"score": 0.002632716358833918, "phrase": "general_code_model"}, {"score": 0.0025954008219792337, "phrase": "specific_stall_rates"}, {"score": 0.0025343769150179764, "phrase": "particular_code_trace"}, {"score": 0.002326304140277375, "phrase": "particular_micro-architecture"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "This paper presents a statistical approach to estimating the performance of a superscalar processor. Traditional trace-driven simulators can take a large amount time to conduct a performance evaluation of a machine, especially as the number of instructions increases. The result of this type of simulation is typically tied to the particular trace that was run. Elements such as dependencies, delays, and stalls are all a direct result of the particular trace being run, and can differ from trace to trace. This paper describes a model designed to separate simulation results from a specific trace. Rather than running a trace-driven simulation, a statistical model is employed, more specifically a Poisson distribution, to predict how these types of delay affects performance. Through the use of this statistical model, a performance evaluation can be conducted using a general code model, with specific stall rates, rather than a particular code trace. This model allows simulations to quickly run tens of millions of instructions and evaluate the performance of a particular micro-architecture while at the same time, allowing the flexibility to change the structure of the architecture. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "A superscalar simulation employing poisson distributed stalls", "paper_id": "WOS:000255331300003"}