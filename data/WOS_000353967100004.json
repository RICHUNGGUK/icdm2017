{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fully_dynamic_maximal"}, {"score": 0.0037495207047193034, "phrase": "edge_update"}, {"score": 0.003548368289666932, "phrase": "ivkovic"}, {"score": 0.003488824830591292, "phrase": "comput"}, {"score": 0.003401000195730551, "phrase": "springer-verlag"}, {"score": 0.003372408629033664, "phrase": "london"}, {"score": 0.0031912706211861324, "phrase": "n_vertices"}, {"score": 0.0030071857666598193, "phrase": "sparse_graph"}, {"score": 0.0029565620771207003, "phrase": "related_problem"}, {"score": 0.002931569771634119, "phrase": "maximum_matching"}, {"score": 0.002809769679774885, "phrase": "cambridge"}, {"score": 0.0026475981474045414, "phrase": "randomized_algorithm"}, {"score": 0.0024736973328071026, "phrase": "c-approximate_maximum_matching"}, {"score": 0.0024423826953133844, "phrase": "unspecified_large_constant_c."}, {"score": 0.002205692205167157, "phrase": "direct_corollary"}, {"score": 0.002177762848946681, "phrase": "maximal_matching_scheme"}], "paper_keywords": ["matching", " dynamic graph algorithm"], "paper_abstract": "We present an algorithm for maintaining maximal matching in a graph under addition and deletion of edges. Our algorithm is randomized and it takes expected amortized O(log n) time for each edge update, where n is the number of vertices in the graph. While there exists a trivial O(n) time algorithm for each edge update, the previous best known result for this problem is due to Ivkovic and Lloyd [Lecture Notes in Comput. Sci. 790, Springer-Verlag, London, 1994, pp. 99-111]. For a graph with n vertices and m edges, they gave an O((n + m)(0.7072)) update time algorithm which is sublinear only for a sparse graph. For the related problem of maximum matching, Onak and Rubinfeld [Proceedings of STOC'10, Cambridge, MA, 2010, pp. 457-464] designed a randomized algorithm that achieves expected amortized O(log(2) n) time for each update for maintaining a c-approximate maximum matching for some unspecified large constant c. In contrast, we can maintain a factor 2 approximate maximum matching in expected amortized O(log n) time per update as a direct corollary of the maximal matching scheme. This in turn also implies a 2-approximate vertex cover maintenance scheme that takes expected amortized O(log n) time per update.", "paper_title": "FULLY DYNAMIC MAXIMAL MATCHING IN O(log n) UPDATE TIME", "paper_id": "WOS:000353967100004"}