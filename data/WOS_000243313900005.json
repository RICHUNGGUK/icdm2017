{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "suffix_array"}, {"score": 0.003558294449586273, "phrase": "suffix_tree"}, {"score": 0.0033492947290751996, "phrase": "lexicographical_order"}, {"score": 0.0029672941061574375, "phrase": "possible_alternate_orderings"}, {"score": 0.0027929100418926725, "phrase": "data_structures"}], "paper_keywords": ["suffix array", " suffix tree", " lexicographic order", " alphabet", " string"], "paper_abstract": "For certain problems (for example, computing repetitions and repeats, data compression applications) it is not necessary that the suffixes of a string represented in a suffix tree or suffix array should occur in lexicographical order (lexorder). It thus becomes of interest to study possible alternate orderings of the suffixes in these data structures, that may be easier to construct or more efficient to use. In this paper we consider the \"reconstruction\" of a suffix array based on a given reordering of the alphabet, and we describe simple time- and space-efficient algorithms that accomplish it.", "paper_title": "Reconstructing a suffix array", "paper_id": "WOS:000243313900005"}