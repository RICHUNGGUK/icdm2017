{"auto_keywords": [{"score": 0.041503225135358875, "phrase": "small_swarms"}, {"score": 0.033405775639554464, "phrase": "csm"}, {"score": 0.03144761937300215, "phrase": "dsm"}, {"score": 0.004814964792885811, "phrase": "centralized"}, {"score": 0.004769182299692333, "phrase": "distributed_protocols_for_tracker-based_dynamic_swarm_management"}, {"score": 0.004656647251517823, "phrase": "efficient_peer_upload_utilization"}, {"score": 0.004313996835376177, "phrase": "different_peers"}, {"score": 0.004034841146538891, "phrase": "file-sharing_efficiency"}, {"score": 0.00386496062825374, "phrase": "extensive_measurements"}, {"score": 0.0035462807506718578, "phrase": "peer_behavior"}, {"score": 0.0034625012596827334, "phrase": "system_performance"}, {"score": 0.003300813776412652, "phrase": "centralized_and_a_distributed_protocol"}, {"score": 0.0031921317979928406, "phrase": "centralized_protocol"}, {"score": 0.003043031131345537, "phrase": "minimal_tracker_overhead"}, {"score": 0.0029996699429582835, "phrase": "distributed_protocol"}, {"score": 0.002845883666777154, "phrase": "load_fairness"}, {"score": 0.00263612191603326, "phrase": "load_sharing"}, {"score": 0.002611010097359509, "phrase": "large_torrents"}, {"score": 0.002537097217899195, "phrase": "measurement_data"}, {"score": 0.002406968743305622, "phrase": "state_information"}, {"score": 0.0022509365210787993, "phrase": "performance_gains"}, {"score": 0.0022294857939412073, "phrase": "dynamic_swarm_management"}, {"score": 0.0021049977753042253, "phrase": "small_torrents"}], "paper_keywords": ["BitTorrent performance", " content popularity", " peer-to-peer overlay management", " tracker-based protocol"], "paper_abstract": "With BitTorrent, efficient peer upload utilization is achieved by splitting contents into many small pieces, each of which may be downloaded from different peers within the same swarm. Unfortunately, piece and bandwidth availability may cause the file-sharing efficiency to degrade in small swarms with few participating peers. Using extensive measurements, we identified hundreds of thousands of torrents with several small swarms for which reallocating peers among swarms and/or modifying the peer behavior could significantly improve the system performance. Motivated by this observation, we propose a centralized and a distributed protocol for dynamic swarm management. The centralized protocol (CSM) manages the swarms of peers at minimal tracker overhead. The distributed protocol (DSM) manages the swarms of peers while ensuring load fairness among the trackers. Both protocols achieve their performance improvements by identifying and merging small swarms and allow load sharing for large torrents. Our evaluations are based on measurement data collected during eight days from over 700 trackers worldwide, which collectively maintain state information about 2.8 million unique torrents. We find that CSM and DSM can achieve most of the performance gains of dynamic swarm management. These gains are estimated to be up to 40% on average for small torrents.", "paper_title": "Centralized and Distributed Protocols for Tracker-Based Dynamic Swarm Management", "paper_id": "WOS:000315353500023"}