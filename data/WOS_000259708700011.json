{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "interconnect_complexity"}, {"score": 0.047094807036930655, "phrase": "path_metric_memory"}, {"score": 0.04546648155091688, "phrase": "acsu"}, {"score": 0.0374287769677244, "phrase": "hardwired_interconnection"}, {"score": 0.03548517282140461, "phrase": "developed_architecture"}, {"score": 0.0047709540557306284, "phrase": "efficient_path"}, {"score": 0.004749106104067268, "phrase": "metric_memory_management"}, {"score": 0.0047057084749407485, "phrase": "viterbi_decoders"}, {"score": 0.004598933498016774, "phrase": "systematic_and_efficient_way"}, {"score": 0.004392565073466714, "phrase": "add-compare-select_unit"}, {"score": 0.0042928648367867835, "phrase": "viterbi_decoder"}, {"score": 0.004138010495069077, "phrase": "derived_equations"}, {"score": 0.0041001740903338834, "phrase": "memory_partition"}, {"score": 0.0036553070575015344, "phrase": "memory_bandwidth"}, {"score": 0.0036218682585355895, "phrase": "conflict-free_path"}, {"score": 0.0034751259234824913, "phrase": "acsu."}, {"score": 0.0034118234596993836, "phrase": "existing_work"}, {"score": 0.0032287289440915187, "phrase": "partitioned_memory_bank"}, {"score": 0.003140888248194296, "phrase": "local_memory"}, {"score": 0.003097865379563127, "phrase": "specific_processing_element"}, {"score": 0.0028127163745564777, "phrase": "partitioned_memory_banks"}, {"score": 0.002673957615079041, "phrase": "adopted_acs_processing_elements"}, {"score": 0.0025537472239953807, "phrase": "address_generation_unit"}, {"score": 0.0024956789310376635, "phrase": "smaller_the_physical_size"}, {"score": 0.002329258721870127, "phrase": "systematic_way"}, {"score": 0.0023079225317714815, "phrase": "regular_and_simple_controlling_circuitry"}, {"score": 0.002124461969404541, "phrase": "convolutional_codes"}, {"score": 0.0021049977753042253, "phrase": "large_memory_order"}], "paper_keywords": ["viterbi decoder (VD)", " in-place scheduling", " path metric memory management", " VLSI architecture"], "paper_abstract": "We present a systematic and efficient way of managing the path metric memory and simplifying its connection network to the add-compare-select unit (ACSU) for Viterbi decoder (VD) design. Using the derived equations for memory partition and add-compare-select (ACS) arrangement together with the extended in-place scheduling scheme proposed in this work, we can increase the memory bandwidth for conflict-free path metric accesses with hardwired interconnection between the path metric memory and ACSU. Compared with the existing work, the developed architecture possesses the following advantages: (1) Each partitioned memory bank can be treated as a local memory of a specific processing element, inside the ACSU, with hardwired interconnection, so that the interconnect complexity is reduced significantly. (2) The partitioned memory banks can be merged into only two pseudo-banks regardless of the number of adopted ACS processing elements. This not only greatly simplifies the design of address generation unit, but also makes smaller the physical size of required memory. (3) The implementation can be accomplished in a systematic way with regular and simple controlling circuitry. Experimental results demonstrate the effectiveness of the developed architecture and the benefit will be more apparent for convolutional codes with large memory order.", "paper_title": "Reducing interconnect complexity for efficient path metric memory management in viterbi decoders", "paper_id": "WOS:000259708700011"}