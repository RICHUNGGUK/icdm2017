{"auto_keywords": [{"score": 0.04406294859026498, "phrase": "pt"}, {"score": 0.00481495049065317, "phrase": "gpu-accelerated_cell_projection"}, {"score": 0.00453113241842654, "phrase": "efficient_graphics_processing_unit_gpu-based_implementation"}, {"score": 0.003775803846431323, "phrase": "cpu-gpu_data"}, {"score": 0.0035530197642369464, "phrase": "interactive_frame_rates"}, {"score": 0.0032629585038738856, "phrase": "current_graphics_hardware"}, {"score": 0.003107935254560724, "phrase": "topology_information"}, {"score": 0.0028890603352364273, "phrase": "substantially_less_memory"}, {"score": 0.0028195727965553367, "phrase": "recent_interactive_ray_casting_approaches"}, {"score": 0.0026209522797963447, "phrase": "two-pass_gpu_approach"}, {"score": 0.002348883765159185, "phrase": "extended_volume_inspection_capabilities"}, {"score": 0.002264607102799332, "phrase": "interactive_transfer_function_editing"}, {"score": 0.0021049977753042253, "phrase": "phong_illumination_model"}], "paper_keywords": ["direct volume rendering", " cell projection", " and isosurface rendering"], "paper_abstract": "We present an efficient Graphics Processing Unit GPU-based implementation of the Projected Tetrahedra (PT) algorithm. By reducing most of the CPU-GPU data transfer the algorithm achieves interactive frame rates (up to 2.0 M Tets/s) on current graphics hardware. Since no topology information is stored, it requires substantially less memory than recent interactive ray casting approaches. The method uses a two-pass GPU approach with two fragment shaders. This work includes extended volume inspection capabilities by supporting interactive transfer function editing and isosurface highlighting using a Phong illumination model.", "paper_title": "Volume and isosurface rendering with GPU-accelerated cell projection", "paper_id": "WOS:000254393400004"}