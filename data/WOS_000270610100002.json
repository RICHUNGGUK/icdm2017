{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ltl"}, {"score": 0.030423104482849076, "phrase": "model_checking_algorithm"}, {"score": 0.004767826806287385, "phrase": "partial_order_snapshots"}, {"score": 0.004674952036988355, "phrase": "distributed_systems"}, {"score": 0.004539005582217309, "phrase": "interleaving_semantics"}, {"score": 0.004321118442104989, "phrase": "partial_orders"}, {"score": 0.004174833535963366, "phrase": "mazurkiewicz"}, {"score": 0.003974349782102708, "phrase": "database_and_global_snapshots"}, {"score": 0.003820896867623235, "phrase": "modest_extension"}, {"score": 0.0033617891884360606, "phrase": "useful_partial_order_concept"}, {"score": 0.003312486229143855, "phrase": "new_construct"}, {"score": 0.003200230621987751, "phrase": "global_snapshot"}, {"score": 0.0030464123943266673, "phrase": "observed_execution_sequence"}, {"score": 0.0027878797103973313, "phrase": "exponential_space"}, {"score": 0.0025137856138000014, "phrase": "polynomial_space"}, {"score": 0.002233301265743633, "phrase": "local_process_properties"}, {"score": 0.0021896891011033105, "phrase": "concurrent_history"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Concurrency", " Model checking", " Partial order semantics", " Snapshots", " Temporal logics"], "paper_abstract": "Certain behavioral properties of distributed systems are difficult to express in interleaving semantics, whereas they are naturally expressed in terms of partial orders of events or, equivalently, Mazurkiewicz traces. Two examples of such properties are serializability of a database and global snapshots of concurrent systems. Recently, a modest extension for LTL by an operator that expresses snapshots, has been proposed. It combines the ease of linear (interleaving) specification with this useful partial order concept. The new construct allows one to assert that a global snapshot appeared in the past, perhaps not in the observed execution sequence, but possibly in an equivalent one. Originally, a model checking algorithm for this logic that is exponential space in the size of the system was suggested. in this paper, we provide a model checking algorithm that is in polynomial space in the size of the system. Our construction can also serve as an efficient (polynomial) algorithm for detecting conjunctive properties (i.e., conjunction of local process properties) in a concurrent history of execution. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Efficient model checking for LTL with partial order snapshots", "paper_id": "WOS:000270610100002"}