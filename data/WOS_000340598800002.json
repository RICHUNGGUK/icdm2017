{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "semi-transparent_gradient_layers"}, {"score": 0.004682414867878963, "phrase": "interactive_approach"}, {"score": 0.0046046429665581555, "phrase": "bitmap_drawings"}, {"score": 0.004553510708976456, "phrase": "studio_photographs"}, {"score": 0.004502943680955863, "phrase": "opaque_and_semi-transparent_vector_layers"}, {"score": 0.004049590638590415, "phrase": "non-linear_compositing_equation"}, {"score": 0.003829548069657859, "phrase": "parametric_nature"}, {"score": 0.0037869901077566526, "phrase": "vector_gradients"}, {"score": 0.0034630606658026595, "phrase": "foreground_colours"}, {"score": 0.0033301694494391643, "phrase": "radial_parametric_gradients"}, {"score": 0.00306227185008558, "phrase": "editable_semi-transparent_foreground"}, {"score": 0.002977835845437357, "phrase": "progressive_workflow"}, {"score": 0.002847540262784593, "phrase": "semi-transparent_or_opaque_region"}, {"score": 0.00269263690712392, "phrase": "foreground_vector_gradient"}, {"score": 0.0026478260192958924, "phrase": "background_bitmap_layer"}, {"score": 0.0024211009463218484, "phrase": "opaque_layer"}, {"score": 0.0023807981747706376, "phrase": "resulting_layered_vector_representation"}], "paper_keywords": [""], "paper_abstract": "We present an interactive approach for decompositing bitmap drawings and studio photographs into opaque and semi-transparent vector layers. Semi-transparent layers are especially challenging to extract, since they require the inversion of the non-linear compositing equation. We make this problem tractable by exploiting the parametric nature of vector gradients, jointly separating and vectorising semi-transparent regions. Specifically, we constrain the foreground colours to vary according to linear or radial parametric gradients, restricting the number of unknowns and allowing our system to efficiently solve for an editable semi-transparent foreground. We propose a progressive workflow, where the user successively selects a semi-transparent or opaque region in the bitmap, which our algorithm separates as a foreground vector gradient and a background bitmap layer. The user can choose to decompose the background further or vectorise it as an opaque layer. The resulting layered vector representation allows a variety of edits, such as modifying the shape of highlights, adding texture to an object or changing its diffuse colour.", "paper_title": "Vectorising Bitmaps into Semi-Transparent Gradient Layers", "paper_id": "WOS:000340598800002"}