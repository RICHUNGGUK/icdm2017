{"auto_keywords": [{"score": 0.040460720519068925, "phrase": "vilim"}, {"score": 0.00481495049065317, "phrase": "cumulative_resource_constraints"}, {"score": 0.0047547526023100665, "phrase": "cumulative_scheduling_constraint"}, {"score": 0.004597861947580946, "phrase": "finite_resource"}, {"score": 0.00444612502361583, "phrase": "constraint-based_scheduling_applications"}, {"score": 0.004353831792593701, "phrase": "cumulative_constraint"}, {"score": 0.003986581218661184, "phrase": "filtering_algorithms"}, {"score": 0.003887438245620965, "phrase": "recent_work"}, {"score": 0.003427380591229386, "phrase": "distinct_capacity_requirements"}, {"score": 0.0033280910751441522, "phrase": "new_related_filter"}, {"score": 0.002743262400544957, "phrase": "algorithm's_filtering"}, {"score": 0.0026414426081951734, "phrase": "extended_edge-finding"}, {"score": 0.002511522462767081, "phrase": "new_algorithm"}, {"score": 0.002459288755782293, "phrase": "previous_edge-finders"}, {"score": 0.0022800613046444563, "phrase": "project_scheduling_problem_library_benchmarks"}, {"score": 0.0021953959824690316, "phrase": "earlier_edge-finding_filters"}, {"score": 0.0021407025628134586, "phrase": "timetable_edge-finding"}, {"score": 0.0021049977753042253, "phrase": "latter_algorithm's_generally_stronger_filtering"}], "paper_keywords": ["Constraint-based scheduling", " Edge-finding", " Global constraints", " Cumulative resource", " Task intervals"], "paper_abstract": "The cumulative scheduling constraint, which enforces the sharing of a finite resource by several tasks, is widely used in constraint-based scheduling applications. Propagation of the cumulative constraint can be performed by several different filtering algorithms, often used in combination. One of the most important and successful of these filtering algorithms is edge-finding. Recent work by Vilim has resulted in a oe'(a) (kn log n) algorithm for cumulative edge-finding (where n is the number of tasks and k is the number of distinct capacity requirements), as well as a new related filter, timetable edge-finding, with a complexity of oe'(a)(n (2)). We present a sound oe'(a)(n (2)) filtering algorithm for standard cumulative edge-finding, orthogonal to the work of Vilim; we also show how this algorithm's filtering may be improved by incorporating some reasoning from extended edge-finding, with no increase in complexity. The complexity of the new algorithm does not strictly dominate previous edge-finders for small k, and it sometimes requires more iterations to reach the same fixpoint; nevertheless, results from Project Scheduling Problem Library benchmarks show that in practice this algorithm consistently outperforms earlier edge-finding filters, and remains competitive with timetable edge-finding, despite the latter algorithm's generally stronger filtering.", "paper_title": "A quadratic edge-finding filtering algorithm for cumulative resource constraints", "paper_id": "WOS:000336727000002"}