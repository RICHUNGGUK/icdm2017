{"auto_keywords": [{"score": 0.048098874556743006, "phrase": "new_functionalities"}, {"score": 0.010612395358376098, "phrase": "fiesta"}, {"score": 0.008448185587816777, "phrase": "architecture_description"}, {"score": 0.006927683484845079, "phrase": "transat"}, {"score": 0.004560568143816105, "phrase": "software_architectures"}, {"score": 0.004293584349522444, "phrase": "new_context"}, {"score": 0.004242085112539693, "phrase": "user_requirements"}, {"score": 0.002899861600151726, "phrase": "specific_architecture_description_language"}, {"score": 0.0026485829604700833, "phrase": "domain_analysis"}, {"score": 0.002361236012575149, "phrase": "generic_adl_model"}, {"score": 0.0022771244331421586, "phrase": "architectural_elements"}, {"score": 0.0021049977753042253, "phrase": "generic_integration_engine"}], "paper_keywords": ["software architecture", " architecture description languages", " patterns", " transformation", " analysis", " verification"], "paper_abstract": "When an application must evolve to cope with new context and user requirements, integrating new functionalities into its software architecture is necessary. The architect has thus to manually modify the architecture description, which is often tedious and error prone. In this paper, we propose FIESTA, a generic framework for automatically integrating new functionalities into an architecture description. Our approach is inspired by TranSAT, an integration framework. However, TranSAT is dedicated to a specific architecture description language (ADL) while our approach is ADL-independent. We have performed a domain analysis, studying for many ADLs how to integrate new functionalities. Based on this analysis, we have defined a generic ADL model to manipulate and reason about architectural elements that are involved in integration. Furthermore, we have developed a generic integration engine.", "paper_title": "FIESTA: A generic framework for integrating new functionalities into software architectures", "paper_id": "WOS:000253392000003"}