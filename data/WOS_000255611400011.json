{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "finite-state_machines"}, {"score": 0.004710489616113198, "phrase": "weighted_finite-state_machine"}, {"score": 0.004508286991825192, "phrase": "rational_relation"}, {"score": 0.004252063063815893, "phrase": "basic_operations"}, {"score": 0.004190305872545087, "phrase": "n-ary_rational_relations"}, {"score": 0.00406945841245389, "phrase": "important_join_operation"}, {"score": 0.003810093416457147, "phrase": "restricted_algorithms"}, {"score": 0.00336428077531883, "phrase": "non-rational_relations"}, {"score": 0.003036468052876648, "phrase": "fully_general_algorithm"}, {"score": 0.002905914725757534, "phrase": "rational_join"}], "paper_keywords": [""], "paper_abstract": "A weighted finite-state machine with n tapes describes a rational relation on n strings. We recall some basic operations on n-ary rational relations, recast the important join operation in terms of \"auto-intersection\", and propose restricted algorithms for both operations. If two rational relations are joined on more than one tape, it can unfortunately lead to non-rational relations with undecidable properties. As a consequence, there cannot be a fully general algorithm, able to compile any rational join or auto-intersection. We define a class of triples < A, i, j > for which we are able. to compile the auto-intersection of the machine A w.r.t. tapes i and j. We hope that this class is sufficient for many practical applications.", "paper_title": "Algorithms for the join and auto-intersection of multi-tape weighted finite-state machines", "paper_id": "WOS:000255611400011"}