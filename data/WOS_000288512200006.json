{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_metrics"}, {"score": 0.008882207279454721, "phrase": "defect_prediction_models"}, {"score": 0.004774115617883476, "phrase": "defect_prediction"}, {"score": 0.004673530058379246, "phrase": "feature_selection_techniques"}, {"score": 0.004516962628112147, "phrase": "software_quality_prediction_models"}, {"score": 0.004459605573798577, "phrase": "search-based_software_engineering_problem"}, {"score": 0.004219321533320583, "phrase": "limited_project_resources"}, {"score": 0.004095323392273661, "phrase": "available_metrics"}, {"score": 0.003941215575554871, "phrase": "project_managers"}, {"score": 0.00387459052649752, "phrase": "valuable_project_resources"}, {"score": 0.003841699919521703, "phrase": "software_quality_improvement"}, {"score": 0.0037128955884188773, "phrase": "fault-proneness_prediction_model"}, {"score": 0.003557924423642353, "phrase": "software_measurement_data"}, {"score": 0.003423969509052361, "phrase": "attribute_selection"}, {"score": 0.0033517342967390065, "phrase": "software_quality_estimation"}, {"score": 0.003309124298009635, "phrase": "comparative_investigation"}, {"score": 0.0030776686414001964, "phrase": "search_space"}, {"score": 0.0030127172247606812, "phrase": "feature_subset_selection"}, {"score": 0.0029491324941225356, "phrase": "seven_different_feature"}, {"score": 0.002754516260621121, "phrase": "five_commonly_used_classification_algorithms"}, {"score": 0.002639440558428147, "phrase": "defect_data"}, {"score": 0.0026058621464926826, "phrase": "multiple_releases"}, {"score": 0.002572709810193776, "phrase": "large_real-world_software_system"}, {"score": 0.002475755804232436, "phrase": "ranking_techniques"}, {"score": 0.0024234763342790852, "phrase": "automatic_hybrid_search_algorithm"}, {"score": 0.002362192695471035, "phrase": "feature_subset_selection_methods"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software metric", " defect prediction", " attribute selection", " feature ranking", " feature subset selection", " search-based software engineering", " software quality"], "paper_abstract": "The selection of software metrics for building software quality prediction models is a search-based software engineering problem. An exhaustive search for such metrics is usually not feasible due to limited project resources, especially if the number of available metrics is large. Defect prediction models are necessary in aiding project managers for better utilizing valuable project resources for software quality improvement. The efficacy and usefulness of a fault-proneness prediction model is only as good as the quality of the software measurement data. This study focuses on the problem of attribute selection in the context of software quality estimation. A comparative investigation is presented for evaluating our proposed hybrid attribute selection approach, in which feature ranking is first used to reduce the search space, followed by a feature subset selection. A total of seven different feature ranking techniques are evaluated, while four different feature subset selection approaches are considered. The models are trained using five commonly used classification algorithms. The case study is based on software metrics and defect data collected from multiple releases of a large real-world software system. The results demonstrate that while some feature ranking techniques performed similarly, the automatic hybrid search algorithm performed the best among the feature subset selection methods. Moreover, performances of the defect prediction models either improved or remained unchanged when over 85% of the software metrics were eliminated. Copyright q (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Choosing software metrics for defect prediction: an investigation on feature selection techniques", "paper_id": "WOS:000288512200006"}