{"auto_keywords": [{"score": 0.04966685952862805, "phrase": "recursive_path_orders"}, {"score": 0.03370894964701269, "phrase": "sat"}, {"score": 0.00481495049065317, "phrase": "termination_proofs"}, {"score": 0.004593467306126913, "phrase": "propositional_encoding"}, {"score": 0.00440093312826378, "phrase": "dependency_pairs"}, {"score": 0.0041984140090404985, "phrase": "common_instances"}, {"score": 0.00416260467797154, "phrase": "rpo"}, {"score": 0.003837205620832367, "phrase": "lexicographic_path_orders"}, {"score": 0.003598317040926701, "phrase": "termination_analysis"}, {"score": 0.003316884515934182, "phrase": "satisfiability_problems"}, {"score": 0.003288567185099276, "phrase": "propositional_formulas"}, {"score": 0.0030969799559421806, "phrase": "lexicographic_comparison"}, {"score": 0.002916521664779295, "phrase": "base_order"}, {"score": 0.0027940789980683, "phrase": "path_order"}, {"score": 0.002564360070426064, "phrase": "argument_filter"}, {"score": 0.0023233800372985686, "phrase": "termination_prover"}, {"score": 0.0023035249767734286, "phrase": "extensive_experiments"}, {"score": 0.0021049977753042253, "phrase": "increased_termination_proving_power"}], "paper_keywords": ["Termination", " SAT solving", " Term rewriting", " Recursive path order", " Dependency pairs"], "paper_abstract": "This paper introduces a propositional encoding for recursive path orders (RPO), in connection with dependency pairs. Hence, we capture in a uniform setting all common instances of RPO, i.e., lexicographic path orders (LPO), multiset path orders (MPO), and lexicographic path orders with status (LPOS). This facilitates the application of SAT solvers for termination analysis of term rewrite systems (TRSs). We address four main inter-related issues and show how to encode them as satisfiability problems of propositional formulas that can be efficiently handled by SAT solving: (A) the lexicographic comparison w.r.t. a of the arguments; (B) the of a base order; (C) the combined search for a path order together with an to orient a set of inequalities; and (D) how the choice of the argument filter influences the set of inequalities that have to be oriented (so-called ). We have implemented our contributions in the termination prover . Extensive experiments show that by our encoding and the application of SAT solvers one obtains speedups in orders of magnitude as well as increased termination proving power.", "paper_title": "SAT Solving for Termination Proofs with Recursive Path Orders and Dependency Pairs", "paper_id": "WOS:000304109100002"}