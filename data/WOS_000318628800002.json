{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_derivatives"}, {"score": 0.004756805752518494, "phrase": "mathematical_functions"}, {"score": 0.004642604455537883, "phrase": "object-oriented_method"}, {"score": 0.004422325007817267, "phrase": "error_derivatives"}, {"score": 0.004289966839994858, "phrase": "matlab_computer_codes"}, {"score": 0.004161553532799662, "phrase": "forward-mode_automatic_differentiation"}, {"score": 0.003916098498242888, "phrase": "new_matlab_code"}, {"score": 0.003685067218455088, "phrase": "original_function"}, {"score": 0.003574695610710444, "phrase": "differentiation_variables"}, {"score": 0.0034887749053459584, "phrase": "derivative_code"}, {"score": 0.0033637374697995616, "phrase": "original_function_code"}, {"score": 0.0023776656246300063, "phrase": "highly_complex_functions"}, {"score": 0.0023346234464901978, "phrase": "detailed_description"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Theory", " Automatic differentiation", " numerical methods", " MATLAB", " scientific computation", " applied mathematics"], "paper_abstract": "An object-oriented method is presented that computes without truncation the error derivatives of functions defined by MATLAB computer codes. The method implements forward-mode automatic differentiation via operator overloading in a manner that produces a new MATLAB code that computes the derivatives of the outputs of the original function with respect to the differentiation variables. Because the derivative code has the same input as the original function code, the method can be used recursively to generate derivatives of any order desired. In addition, the approach developed in this article has the feature that the derivatives are generated by simply evaluating the function on an instance of the class, thus making the method straightforward to use while simultaneously enabling differentiation of highly complex functions. A detailed description of the method is presented and the approach is illustrated and shown to be efficient on four examples.", "paper_title": "An Efficient Overloaded Method for Computing Derivatives of Mathematical Functions in MATLAB", "paper_id": "WOS:000318628800002"}