{"auto_keywords": [{"score": 0.03371704893045813, "phrase": "data_servers"}, {"score": 0.00481495049065317, "phrase": "broadcast_systems"}, {"score": 0.004769182299692333, "phrase": "decentralized_data_storage"}, {"score": 0.004723847090183984, "phrase": "data_broadcasting"}, {"score": 0.004656647251517823, "phrase": "efficient_method"}, {"score": 0.004525088883501587, "phrase": "large_group"}, {"score": 0.004439445472040688, "phrase": "common_interests"}, {"score": 0.004397230847865867, "phrase": "performing_such_broadcasts"}, {"score": 0.004252602474733162, "phrase": "broadcast_schedule"}, {"score": 0.004034841146538891, "phrase": "broadcast_system"}, {"score": 0.003996458454723708, "phrase": "earlier_studies"}, {"score": 0.0037556843869894566, "phrase": "local_search_techniques"}, {"score": 0.0035462807506718578, "phrase": "often_ignored_factor"}, {"score": 0.0033969001271637934, "phrase": "data_items"}, {"score": 0.0029853535424953595, "phrase": "actual_time"}, {"score": 0.0029147869733574844, "phrase": "data_item"}, {"score": 0.0027129118211250336, "phrase": "dynamic_management"}, {"score": 0.0026742419973883134, "phrase": "data_requests"}, {"score": 0.002549269480908849, "phrase": "real_time_data"}, {"score": 0.0023840346303791032, "phrase": "stochastic_nature"}, {"score": 0.0022401855403251653, "phrase": "non-stochastic_broadcast_scheduling"}, {"score": 0.0021049977753042253, "phrase": "problem_structure"}], "paper_keywords": ["Data broadcasting", " Stochastic scheduling"], "paper_abstract": "Data broadcasting is an efficient method to disseminate information to a large group of requesters with common interests. Performing such broadcasts typically involve the determination of a broadcast schedule intended to maximize the quality of service provided by the broadcast system. Earlier studies have proposed solutions to this problem in the form of heuristics and local search techniques designed to achieve minimal deadline misses or maximal utility. An often ignored factor in these studies is the possibility of the data items being not available locally, but rather have to be fetched from data servers distributed over a network, thereby inducing a certain level of stochasticity in the actual time required to serve a data item. This stochasticity is introduced on behalf of the data servers which themselves undergo a dynamic management of serving data requests. In this paper we revisit the problem of real time data broadcasting under such a scenario. We investigate the efficiency of heuristics that embed the stochastic nature of the problem in their design and compare their performance with those proposed for non-stochastic broadcast scheduling. Further, we extend our analysis to understand the various factors in the problem structure that influence these heuristics, and are often exploited by a better performing one.", "paper_title": "Real time stochastic scheduling in broadcast systems with decentralized data storage", "paper_id": "WOS:000281112800001"}