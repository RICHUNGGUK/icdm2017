{"auto_keywords": [{"score": 0.037304360171572, "phrase": "rbr"}, {"score": 0.00786165531935219, "phrase": "table-based_switches"}, {"score": 0.00481495049065317, "phrase": "support_efficient_routing_algorithms"}, {"score": 0.004732785510739708, "phrase": "efficient_routing_algorithm"}, {"score": 0.004668059458774745, "phrase": "large_on-chip_networks"}, {"score": 0.0044483793824152944, "phrase": "required_communication_performance"}, {"score": 0.004209893377338457, "phrase": "routing_algorithms"}, {"score": 0.004180992206290323, "phrase": "fault_tolerance"}, {"score": 0.004081385289516914, "phrase": "table_reconfigurations"}, {"score": 0.0037445545584005014, "phrase": "region-based_routing"}, {"score": 0.0036301992752948956, "phrase": "network_regions"}, {"score": 0.003592859432554987, "phrase": "efficient_implementation"}, {"score": 0.0035681790580031998, "phrase": "logic_blocks"}, {"score": 0.0032065418360603293, "phrase": "adaptive_routing_algorithm"}, {"score": 0.003108565704097622, "phrase": "proposed_scheme"}, {"score": 0.0030554300179552415, "phrase": "general_routing_algorithm"}, {"score": 0.002851790448644913, "phrase": "regular_and_irregular_mesh_topologies"}, {"score": 0.002670884656785558, "phrase": "large_networks"}, {"score": 0.0026525207297080937, "phrase": "evaluation_results"}, {"score": 0.002527451565708784, "phrase": "performance_degradation"}, {"score": 0.0025014259919355453, "phrase": "link_failures"}, {"score": 0.002310578855290687, "phrase": "power_dissipation"}, {"score": 0.002286781334850213, "phrase": "equivalent_table-based_implementation"}, {"score": 0.002126907587540404, "phrase": "apsra"}, {"score": 0.00210499785367798, "phrase": "rbr."}], "paper_keywords": ["Application-specific routing", " deadlock-free routing", " networks-on-chip (NoC)", " region-based router (RBR)", " routing algorithms", " router architecture", " table-based router"], "paper_abstract": "An efficient routing algorithm is important for large on-chip networks [network-on-chip (NoC)] to provide the required communication performance to applications. Implementing NoC using table-based switches provide many advantages, including possibility of changing routing algorithms and fault tolerance, due to the option of table reconfigurations. However, table-based switches have been considered unsuitable for NoCs due to their perceived high area and power consumption. In this paper, we describe the region-based routing (RBR) mechanism which groups destinations into network regions allowing an efficient implementation with logic blocks. RBR can also be viewed as a mechanism to reduce the number of entries in routing tables. RBR is general and can be used in conjunction with any adaptive routing algorithm. In particular, we have evaluated the proposed scheme in conjunction with a general routing algorithm, namely segment-based routing (SR) and an Application Specific Routing Algorithm (APSRA) using regular and irregular mesh topologies. Our study shows that the number of entries in the table is significantly reduced, especially for large networks. Evaluation results show that RBR requires only four regions to support several routing algorithms in a 2-D mesh with no performance degradation. Considering link failures, our results indicate that RBR combined with SR is able to tolerate up to 7 link failures in an 8 x 8 mesh. RBR also reduces area and power dissipation of an equivalent table-based implementation by factors of 8 and 10, respectively. Moreover, the degradation in performance of the network is insignificant when using APSRA combined with RBR.", "paper_title": "Region-Based Routing: A Mechanism to Support Efficient Routing Algorithms in NoCs", "paper_id": "WOS:000263604900005"}