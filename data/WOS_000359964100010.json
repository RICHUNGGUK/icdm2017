{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "gpu"}, {"score": 0.004676345706416371, "phrase": "immersed_boundary_methods"}, {"score": 0.004618166136069052, "phrase": "new_patch-based_adaptive_mesh_refinement"}, {"score": 0.004579887386629583, "phrase": "amr"}, {"score": 0.004447915226010682, "phrase": "fully_threaded_tree"}, {"score": 0.004319833389354734, "phrase": "khokhlov"}, {"score": 0.004195418010131832, "phrase": "cell-based_amr"}, {"score": 0.0040916230716372265, "phrase": "patch-based_adaptive_meshes"}, {"score": 0.0039571974661570695, "phrase": "amr_code"}, {"score": 0.0036248955128033084, "phrase": "different_grid_resolutions"}, {"score": 0.003579750245670577, "phrase": "single_cpu"}, {"score": 0.003535165233011893, "phrase": "detailed_timing_analyses"}, {"score": 0.0034620831765465425, "phrase": "current_amr_code"}, {"score": 0.003418958653159371, "phrase": "conventional_oct-tree-based_amr_code"}, {"score": 0.0033905915022816825, "phrase": "flash"}, {"score": 0.003197843245296877, "phrase": "two-dimensional_cases"}, {"score": 0.002856563331151566, "phrase": "effective_grid_resolution"}, {"score": 0.0027395968397212053, "phrase": "patch-based_amr_algorithm"}, {"score": 0.0027054473441439422, "phrase": "immersed_boundary_method"}, {"score": 0.0026829395542987597, "phrase": "ibm"}, {"score": 0.0026494723416072316, "phrase": "graphic_processing_units"}, {"score": 0.0025409639091476363, "phrase": "gpu_computation"}, {"score": 0.002498812056838983, "phrase": "asynchronous_memory_copy"}, {"score": 0.00246765655376112, "phrase": "concurrent_execution"}, {"score": 0.0024471622605203875, "phrase": "cpu"}, {"score": 0.0023864566654035924, "phrase": "performance_benchmarks"}, {"score": 0.002337066031028783, "phrase": "gpu_cluster"}, {"score": 0.00231759652007697, "phrase": "sharcnet"}, {"score": 0.0022507188208913394, "phrase": "maximum_speed-up_factors"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["AMR", " GPU", " Immersed boundary method"], "paper_abstract": "A new patch-based adaptive mesh refinement (AMR) code is developed. The fully threaded tree (FIT) data structure (Khokhlov, 1998) originally developed for cell-based AMR is extended to organize the patch-based adaptive meshes. We demonstrate the accuracy of the AMR code by performing the simulations of the two and three-dimensional Sedov blast wave problems. We measure the performance of the code by solving the same problems in different grid resolutions on a single CPU, where detailed timing analyses provide comparison between the current AMR code and a conventional oct-tree-based AMR code (FLASH 4.0.1) (Fryxell et al., 2000). For the two-dimensional cases, maximum speed-up ratio of 58.23 is obtained versus FLASH 4.0.1 with 512(2) effective grid resolution. For the three-dimensional cases, maximum speed-up ratios of 32.16 is achieved over FLASH 4.0.1 with 128(3) effective grid resolution. We present the implementation and performance of a patch-based AMR algorithm with the immersed boundary method (IBM) on Graphic Processing Units (GPU). We also applied several optimizations in GPU computation, including the asynchronous memory copy, the concurrent execution between CPU and GPU and hybrid MPI/OpenMP/GPU parallelization. Performance benchmarks are conducted on the GPU cluster on SHARCNET (https://www.sharcnet.ca/) using 1-8 Tesla M2070 GPUs. Maximum speed-up factors of 22.3 and 20.5 are demonstrated using one GPU and 8 GPUs with 2048(3) effective resolution, respectively. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A GPU-accelerated adaptive mesh refinement for immersed boundary methods", "paper_id": "WOS:000359964100010"}