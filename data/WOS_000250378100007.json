{"auto_keywords": [{"score": 0.04908067956118528, "phrase": "ga"}, {"score": 0.02293840196350194, "phrase": "traditional_genetic_algorithms"}, {"score": 0.013984187214887917, "phrase": "proposed_methods"}, {"score": 0.009048552294123475, "phrase": "limit_state_functions"}, {"score": 0.007062511472738331, "phrase": "ann"}, {"score": 0.00481495049065317, "phrase": "structural_reliability_analysis"}, {"score": 0.004655285779819366, "phrase": "step-by-step_numerical_iterations"}, {"score": 0.004481954307639453, "phrase": "structural_system"}, {"score": 0.0043699845927285905, "phrase": "relatively_long_computation_time"}, {"score": 0.0042250123967577284, "phrase": "design_problem"}, {"score": 0.003965975628742746, "phrase": "random_variables"}, {"score": 0.0037543106253910313, "phrase": "immense_effort"}, {"score": 0.0037070855410818986, "phrase": "coding_ones"}, {"score": 0.0036759314172445934, "phrase": "finite_element_code"}, {"score": 0.003465036432323081, "phrase": "convenient_practical_applications"}, {"score": 0.0032250961348210473, "phrase": "artificial_neural_network"}, {"score": 0.00305285084207725, "phrase": "monte_carlo"}, {"score": 0.003014422649429416, "phrase": "importance_sampling"}, {"score": 0.002951444412262927, "phrase": "present_study"}, {"score": 0.002914288956035066, "phrase": "distinctive_feature"}, {"score": 0.002805597755796506, "phrase": "explicit_approximate_limit_state_function"}, {"score": 0.002723862897844177, "phrase": "approximate_limit_state_function"}, {"score": 0.0026222551419772867, "phrase": "ann_model"}, {"score": 0.0025674490885184173, "phrase": "derived_approximate_limit_state_function"}, {"score": 0.002261794227418188, "phrase": "numerical_examples"}, {"score": 0.0022145052062614514, "phrase": "important_parameters"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["genetic algorithms", " Artificial neural network", " Monte Carlo simulation with importance sampling", " Reliability method", " Failure probability", " Limit state function"], "paper_abstract": "The traditional genetic algorithms (GA) involve step-by-step numerical iterations for searching the minimum reliability index of a structural system, and therefore require a relatively long computation time. In practice the size of a design problem can be very large, the limit state functions are usually implicit in terms of the random variables. When using the traditional genetic algorithms, one can encounter problems with the immense effort required in coding ones own finite element code (or for integration with other commercial finite element software) when using the traditional genetic algorithms. For convenient practical applications of the GA in engineering, two new GA methods, namely, a hybrid GA method consisting of artificial neural network (ANN) and a hybrid GA method consisting of ANN and Monte Carlo simulation with importance sampling are proposed in the present study. A distinctive feature of these proposed methods is the introduction of an explicit approximate limit state function. The explicit formulation of the approximate limit state function is derived by using the parameters of the ANN model. By introducing the derived approximate limit state function, the failure probability can be easily calculated, practically when the limit state functions are not explicitly known. These proposed methods are investigated and their accuracy and efficiency are demonstrated using numerical examples. Finally, some important parameters in these proposed methods are also discussed. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Hybrid genetic algorithms for structural reliability analysis", "paper_id": "WOS:000250378100007"}