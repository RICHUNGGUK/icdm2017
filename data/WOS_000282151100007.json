{"auto_keywords": [{"score": 0.041871074088565045, "phrase": "reachability_problem"}, {"score": 0.03325989685020615, "phrase": "dynamic_networks"}, {"score": 0.00481495049065317, "phrase": "dynamic_communication_structures"}, {"score": 0.004703878334423852, "phrase": "verification_problem"}, {"score": 0.004595356579614969, "phrase": "pushdown_systems"}, {"score": 0.00453144352814823, "phrase": "parallel_programs"}, {"score": 0.004489327204473076, "phrase": "procedure_calls"}, {"score": 0.004324723240308028, "phrase": "control_state"}, {"score": 0.004108161406159407, "phrase": "observability_rights"}, {"score": 0.0033919477901198716, "phrase": "communication_structure"}, {"score": 0.0032370412139943808, "phrase": "phase_graph"}, {"score": 0.002787181295054319, "phrase": "communication_structures"}, {"score": 0.002562123444678208, "phrase": "natural_class"}, {"score": 0.002333258365963461, "phrase": "efficient_semi-decision_procedure"}, {"score": 0.0022686625017583387, "phrase": "general_model"}, {"score": 0.0021347607855562102, "phrase": "windows_nt_bluetooth_driver"}], "paper_keywords": ["Model checking", " Concurrent programs", " Reachability analysis", " Pushdown Networks", " Recognizable sets"], "paper_abstract": "We address the verification problem of networks of communicating pushdown systems modeling communicating parallel programs with procedure calls. Processes in such networks can read the control state of the other processes according to a given communication structure (specifying the observability rights between processes). The reachability problem of such models is undecidable in general. First, we define a class of networks that effectively preserves recognizability (hence, its reachability problem is decidable). Then, we consider networks where the communication structure can change dynamically during the execution according to a phase graph. The reachability problem for these dynamic networks being undecidable in general, we define a subclass for which it becomes decidable. Then, we consider reachability when the switches in the communication structures are bounded. We show that this problem is undecidable even for one switch. We define a natural class of models for which this problem is decidable. This class can be used in the definition of an efficient semi-decision procedure for the analysis of the general model of dynamic networks. Our techniques allowed to find bugs in two versions of a Windows NT Bluetooth driver. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Verifying parallel programs with dynamic communication structures", "paper_id": "WOS:000282151100007"}