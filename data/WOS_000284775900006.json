{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "spare_utilization"}, {"score": 0.004774115617883476, "phrase": "virtually_reorganizing_faulty_cache_lines"}, {"score": 0.004575053987970206, "phrase": "serious_reliability_challenges"}, {"score": 0.004402973626416765, "phrase": "large_fraction"}, {"score": 0.0043656173407379895, "phrase": "chip_area"}, {"score": 0.004291848822287492, "phrase": "on-chip_caches"}, {"score": 0.004148014765950199, "phrase": "sram_structures"}, {"score": 0.004112812699639956, "phrase": "lifetime_and_manufacture-time_failures"}, {"score": 0.003991932110277654, "phrase": "additional_resources"}, {"score": 0.003941215575554871, "phrase": "hard_faults"}, {"score": 0.00387459052649752, "phrase": "static_allocation"}, {"score": 0.0038090874465452214, "phrase": "redundant_spares"}, {"score": 0.003760685138103153, "phrase": "low_utilization"}, {"score": 0.0037128955884188773, "phrase": "extra_resources"}, {"score": 0.00317095235382607, "phrase": "dynamic_reconfigurability"}, {"score": 0.003117307618682836, "phrase": "large_numbers"}, {"score": 0.0030645676308053444, "phrase": "modest_hardware_overhead"}, {"score": 0.0030127172247606812, "phrase": "zerehcache"}, {"score": 0.0029491324941225356, "phrase": "cache_data_array"}, {"score": 0.0029116257477000617, "phrase": "permutation_network"}, {"score": 0.002825949329865926, "phrase": "spare_allocation"}, {"score": 0.002790004829699627, "phrase": "graph_coloring_algorithm"}, {"score": 0.0026734504926268442, "phrase": "proper_mapping"}, {"score": 0.0026507289852980512, "phrase": "replacement_elements"}, {"score": 0.0025947642929906407, "phrase": "extensive_design_space_exploration"}, {"score": 0.0024863459251358217, "phrase": "optimal_design_points"}, {"score": 0.0024028742248152425, "phrase": "effective_lifetime"}, {"score": 0.0023221983158528163, "phrase": "early_lifetime_failures"}, {"score": 0.0022731540640627307, "phrase": "analysis_studies"}], "paper_keywords": ["Process variation", " wearout", " fault-tolerant cache memories", " manufacturing yield"], "paper_abstract": "Aggressive technology scaling to 45 nm and below introduces serious reliability challenges to the design of microprocessors. Since a large fraction of chip area is devoted to on-chip caches, it is important to protect these SRAM structures against lifetime and manufacture-time failures. Designers typically overprovision caches with additional resources to overcome hard faults. However, static allocation and binding of redundant spares results in low utilization of the extra resources and ultimately limits the number of defects that can be tolerated. This work re-examines the design of process-variation-tolerant on-chip caches with a focus on providing the flexibility and dynamic reconfigurability necessary to tolerate large numbers of defects with modest hardware overhead. Our approach, ZerehCache, virtually reorganizes the cache data array using a permutation network to provide more degrees of freedom for spare allocation. A graph coloring algorithm is used to configure the network and identify the proper mapping of replacement elements. We perform an extensive design space exploration of both L1/L2 caches to identify several Pareto-optimal ZerehCaches. Given these optimal design points, we employ ZerehCache to extend the effective lifetime of the on-chip caches and prevent early lifetime failures. Finally, yield analysis studies performed on a population of 1,000 chips at the 45 nm technology node demonstrated that an L1 design with 16 percent overhead and an L2 design with eight percent area overhead achieve yields of 99 percent and 96 percent, respectively.", "paper_title": "Maximizing Spare Utilization by Virtually Reorganizing Faulty Cache Lines", "paper_id": "WOS:000284775900006"}