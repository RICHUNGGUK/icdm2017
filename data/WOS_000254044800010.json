{"auto_keywords": [{"score": 0.04810417603515557, "phrase": "pdm"}, {"score": 0.004854298930421328, "phrase": "pdm."}, {"score": 0.00481495049065317, "phrase": "optimal_and_practical_algorithms"}, {"score": 0.004265953661191515, "phrase": "massive_data_sets"}, {"score": 0.004068510313497539, "phrase": "pdm_model"}, {"score": 0.00398370478688858, "phrase": "fundamental_nature"}, {"score": 0.00392125815948488, "phrase": "problem-several_asymptotically_optimal_algorithms"}, {"score": 0.0036043137580229873, "phrase": "prior_algorithms"}, {"score": 0.0035106041824568618, "phrase": "memory_layouts"}, {"score": 0.0031428202743657057, "phrase": "randomized_mergesort_algorithm"}, {"score": 0.0030772505522663612, "phrase": "simple_idea"}, {"score": 0.002997203022420553, "phrase": "asymptotically_optimal_number"}, {"score": 0.0029346624184926305, "phrase": "high_probability"}, {"score": 0.0028432828877281388, "phrase": "desirable_features"}, {"score": 0.002813457986293993, "phrase": "practical_implementation"}, {"score": 0.0027547408718334603, "phrase": "second_part"}, {"score": 0.0024144659350277954, "phrase": "considerable_interest"}, {"score": 0.0022904032758108775, "phrase": "problem_sizes"}, {"score": 0.002266364679369248, "phrase": "practical_interest"}, {"score": 0.0021049977753042253, "phrase": "random_input"}], "paper_keywords": ["algorithms", " parallel algorithms", " parallel memories", " sorting"], "paper_abstract": "The Parallel Disks Model (PDM) has been proposed to alleviate the I/O bottleneck that arises in the processing of massive data sets. Sorting has been extensively studied on the PDM model due to the fundamental nature of the problem-several asymptotically optimal algorithms are known for sorting. Although randomization has been frequently exploited, most of the prior algorithms suffer from complications in memory layouts, implementation, restrictions in range of parameters, and laborious analysis. In this paper, we present a randomized mergesort algorithm based on a simple idea that sorts using an asymptotically optimal number of I/O operations with high probability and has all of the desirable features for practical implementation. In the second part of the paper, we also present several novel algorithms for sorting on the PDM that take only a small number of passes through the data. Recently, considerable interest has been shown by researchers in developing algorithms for problem sizes of practical interest and we are able to obtain several improvements and simplification, in particular for random input.", "paper_title": "Optimal and practical algorithms for sorting on the PDM", "paper_id": "WOS:000254044800010"}