{"auto_keywords": [{"score": 0.02719548667126093, "phrase": "type_checking"}, {"score": 0.004740476936977635, "phrase": "distributed_message-passing_programs"}, {"score": 0.004559270778306828, "phrase": "parametric_way"}, {"score": 0.004488734023485018, "phrase": "available_resources"}, {"score": 0.004024485331377682, "phrase": "single_parallel_program"}, {"score": 0.003900853871728297, "phrase": "different_environments"}, {"score": 0.0037224647319912293, "phrase": "parameterised_protocol_description_language"}, {"score": 0.0036648265911110164, "phrase": "pabble"}, {"score": 0.003389704997952315, "phrase": "large_class"}, {"score": 0.0031107911390188055, "phrase": "overall_interaction"}, {"score": 0.0029916929549256297, "phrase": "concise_and_expressive_notation"}, {"score": 0.0028771413440398614, "phrase": "variable_number"}, {"score": 0.002766963729586353, "phrase": "multiple_dimensions"}, {"score": 0.002702887319160534, "phrase": "parameterised_protocols"}, {"score": 0.002599365215003002, "phrase": "local_protocols"}, {"score": 0.00253916011199984, "phrase": "parameterised_mpi_programs"}, {"score": 0.002499798127196099, "phrase": "communication_safety"}, {"score": 0.0024610448251906453, "phrase": "deadlock_freedom"}, {"score": 0.0023300677028248776, "phrase": "endpoint_projection"}, {"score": 0.0022407927161620855, "phrase": "underlying_parameterised_session_type_theory"}, {"score": 0.0021049977753042253, "phrase": "end_point_projection"}], "paper_keywords": ["Multiparty session types", " Communication safety", " Deadlock freedom", " Pabble", " Protocol description language", " Dependent types"], "paper_abstract": "Many parallel and distributed message-passing programs are written in a parametric way over available resources, in particular the number of nodes and their topologies, so that a single parallel program can scale over different environments. This article presents a parameterised protocol description language, Pabble, which can guarantee safety and progress in a large class of practical, complex parameterised message-passing programs through static checking. Pabble can describe an overall interaction topology, using a concise and expressive notation, designed for a variable number of participants arranged in multiple dimensions. These parameterised protocols in turn automatically generate local protocols for type checking parameterised MPI programs for communication safety and deadlock freedom. In spite of undecidability of endpoint projection and type checking in the underlying parameterised session type theory, our method guarantees the termination of end point projection and type checking.", "paper_title": "Pabble: parameterised Scribble", "paper_id": "WOS:000363025300005"}