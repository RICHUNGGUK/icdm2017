{"auto_keywords": [{"score": 0.047510470298773616, "phrase": "web_services_coordination"}, {"score": 0.012500201296972982, "phrase": "web_services"}, {"score": 0.011453064109964084, "phrase": "concurrency_problems"}, {"score": 0.010725059502701372, "phrase": "isolation_mechanisms"}, {"score": 0.010492713159714461, "phrase": "ws-transactions"}, {"score": 0.00481495049065317, "phrase": "transactional_web_services_coordination"}, {"score": 0.0046073860169839305, "phrase": "process_dimension"}, {"score": 0.004265354774450696, "phrase": "business_process_management"}, {"score": 0.004058951880810154, "phrase": "transactional_management"}, {"score": 0.004014452814186653, "phrase": "web_services_platforms"}, {"score": 0.003970439654470374, "phrase": "ws-transaction_specification"}, {"score": 0.0039053194919285725, "phrase": "big_impact"}, {"score": 0.003778253716938922, "phrase": "critical_situations"}, {"score": 0.003716273882758735, "phrase": "financial_services"}, {"score": 0.0033837135367113004, "phrase": "transactional_databases_world"}, {"score": 0.003328184259386487, "phrase": "hard_transactional_constraints"}, {"score": 0.0031669873302916, "phrase": "flexible_atomicity"}, {"score": 0.0030135741897058844, "phrase": "isolation_flexibility"}, {"score": 0.00280496585980086, "phrase": "service_oriented_environments"}, {"score": 0.002497976173193543, "phrase": "important_part"}, {"score": 0.00241658945942583, "phrase": "new_view"}, {"score": 0.0023507916951658455, "phrase": "behavioural_spheres_approach"}, {"score": 0.0022368274529152342, "phrase": "ws-coordination_framework"}, {"score": 0.0022122603123901114, "phrase": "ws-isolationsphere"}, {"score": 0.0021879624017959493, "phrase": "isolation_management"}, {"score": 0.0021520139248317333, "phrase": "ws-sphere_coordination_type"}, {"score": 0.0021049977753042253, "phrase": "behaviour_management"}], "paper_keywords": [""], "paper_abstract": "The Business Process Execution Language BPEL4WS has emerged to introduce process dimension in Web Services coordination. At the same time, a lot of needs related to business process management appeared: In this article we focus on transactional management in Web Services platforms. WS-Transaction specification had a big impact on usage of Web Services in critical situations such as financial services. This usage of transactions in web services coordination also introduced concurrency problems similar to those encountered in transactional databases world due to hard transactional constraints especially for isolation mechanisms. Today, WS-Transactions provide flexible atomicity in Web Services coordination (WS-BusinessActivity) but isolation flexibility is not provided. Isolation mechanisms used today are not really adapted to Service Oriented environments and we aim to make them more 'process friendly'. In this paper, we focus on this important part of concurrency problems and propose a new view of WS-Transactions based on Behavioural Spheres approach. This contribution suggests a reorganisation of the WS-Coordination framework adding WS-IsolationSphere for isolation management and the WS-Sphere coordination type for generalising any behaviour management in Web Services coordination.", "paper_title": "Concurrency management in transactional Web Services coordination", "paper_id": "WOS:000241155300058"}