{"auto_keywords": [{"score": 0.03768255196284214, "phrase": "weight-constrained_k_longest_paths_problem"}, {"score": 0.00481495049065317, "phrase": "weight-constrained_k_longest_paths"}, {"score": 0.004256243266481051, "phrase": "tree_t"}, {"score": 0.004101579688745222, "phrase": "length_function"}, {"score": 0.0035079364710988627, "phrase": "k_longest_paths"}, {"score": 0.003074991770768925, "phrase": "algebraic_computation_tree_model"}, {"score": 0.0023430556582539805, "phrase": "length-constrained_k_maximum-sum_segments_problem"}, {"score": 0.002295277579105179, "phrase": "k_maximum-sum_segments"}], "paper_keywords": ["Maximum-sum segment", " Sequence analysis"], "paper_abstract": "In this work, we obtain the following new results: - Given a tree T = (V, E) with a length function l : E -> R and a weight function w : E -> R, a positive integer k, and an interval [L, U], the WEIGHT-CONSTRAINED k LONGEST PATHS problem is to find the k longest paths among all paths in T with weights in the interval [L, U]. We show that the WEIGHT-CONSTRAINED k LONGEST PATHS problem has a lower bound Omega (V log V + k) in the algebraic computation tree model and give an O(V log V + k)-time algorithm for it. - Given a sequence A = (a(1), a(2),..., a(n)) of numbers and an interval [L, U], we define the sum and length of a segment A[i,j] to be a(i)+a(i+1) +...+a(j) and j-i+1, respectively. The LENGTH-CONSTRAINED k MAXIMUM-SUM SEGMENTS problem is to find the k maximum-sum segments among all segments of A with lengths in the interval [L, U]. We show that the LENGTH-CONSTRAINED)k MAXIMUM-SUM SEGMENTS problem can be solved in 0(n+k) time. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Algorithms for finding the weight-constrained k longest paths in a tree and the length-constrained k maximum-sum segments of a sequence", "paper_id": "WOS:000260975400026"}