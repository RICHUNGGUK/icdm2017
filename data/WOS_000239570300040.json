{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "flash_memory"}, {"score": 0.004347057700479576, "phrase": "embedded_applications"}, {"score": 0.0031440159350875057, "phrase": "software_layer"}, {"score": 0.002838033152426417, "phrase": "state-of-the-art_ftl_software"}, {"score": 0.0026282000779095987, "phrase": "problem_definitions"}, {"score": 0.0022346638243276717, "phrase": "performance_results"}, {"score": 0.0021049977753042253, "phrase": "ftl_algorithms"}], "paper_keywords": ["flash memory", " embedded system", " file system"], "paper_abstract": "Recently, flash memory is widely adopted in embedded applications since it has several strong points: non-volatility, fast access speed, shock resistance, and low power consumption. However, due to its hardware characteristic, namely \"erase before write\", it requires a software layer called FTL (Flash Translation Layer). This paper surveys the state-of-the-art FTL software for flash memory. This paper also describes problem definitions, several algorithms proposed to solve them, and related research issues. In addition, this paper provides performance results based on our implementation of each of FTL algorithms.", "paper_title": "System software for flash memory: A survey", "paper_id": "WOS:000239570300040"}