{"auto_keywords": [{"score": 0.049488021144002546, "phrase": "control_flow_compilation"}, {"score": 0.015719716506582538, "phrase": "lazy_control_flow_compilation"}, {"score": 0.004610058444728656, "phrase": "classical_wam_compilation"}, {"score": 0.004359328949187473, "phrase": "non-recursive_clause_bodies"}, {"score": 0.004071249707923223, "phrase": "dynamically_generated_queries"}, {"score": 0.003996027647611435, "phrase": "inductive_logic_programming"}, {"score": 0.003506851152129303, "phrase": "lazy_variant"}, {"score": 0.003115908199991072, "phrase": "unreached_code"}, {"score": 0.0030017207229983385, "phrase": "practical_ilp_settings"}, {"score": 0.0028206052780047424, "phrase": "compiled_code"}, {"score": 0.0026013505538490223, "phrase": "query_packs"}, {"score": 0.0021987994275190314, "phrase": "paper_show"}, {"score": 0.0021049977753042253, "phrase": "artificial_and_real_life_settings"}], "paper_keywords": ["logic programming", " inductive logic programming", " Warren Abstract Machine", " compilation"], "paper_abstract": "Control flow compilation is a hybrid between classical WAM compilation and meta-call, limited to the compilation of non-recursive clause bodies. This approach is used successfully for the execution of dynamically generated queries in an inductive logic programming setting (ILP). Control flow compilation reduces compilation times up to an order of magnitude, without slowing down execution. A lazy variant of control flow compilation is also presented. By compiling code by need, it removes the overhead of compiling unreached code (a frequent phenomenon in practical ILP settings), and thus reduces the size of the compiled code. Both dynamic compilation approaches have been implemented and were combined with query packs, an efficient ILP execution mechanism. It turns out that locality of data and code is important for performance. The experiments reported in the paper show that lazy control flow compilation is superior in both artificial and real life settings.", "paper_title": "Fast frequent querying with lazy control flow compilation", "paper_id": "WOS:000248103400003"}