{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hierarchical_memory_organizations"}, {"score": 0.004758457292840376, "phrase": "embedded_multidimensional_signal_processing_systems"}, {"score": 0.004565876339189493, "phrase": "array-dominated_and_loop-organized_algorithmic_specifications"}, {"score": 0.004278807087784626, "phrase": "data_memory_space"}, {"score": 0.004129873531628877, "phrase": "negative_consequences"}, {"score": 0.00405735420159564, "phrase": "energy_consumption"}, {"score": 0.003939296259436904, "phrase": "chip_area"}, {"score": 0.00384731849108269, "phrase": "optimized_storage"}, {"score": 0.0037797419108291227, "phrase": "usually_large_arrays"}, {"score": 0.0037133478610481994, "phrase": "algorithmic_specifications"}, {"score": 0.0036481158025940016, "phrase": "essential_task"}, {"score": 0.0036052633308076933, "phrase": "memory_allocation"}, {"score": 0.003479692058963528, "phrase": "efficient_algorithm"}, {"score": 0.0034185505275141077, "phrase": "multidimensional_arrays"}, {"score": 0.0033584796908285894, "phrase": "data_memory"}, {"score": 0.0031100973266506163, "phrase": "live_elements"}, {"score": 0.0030554300179552415, "phrase": "index_space"}, {"score": 0.0026827569390113822, "phrase": "entire_arrays"}, {"score": 0.0023554316787703137, "phrase": "array_elements"}, {"score": 0.002181069180139225, "phrase": "memory_mapping_technique"}, {"score": 0.0021049977753042253, "phrase": "hierarchical_memory_architectures"}], "paper_keywords": ["Lattice", " memory allocation", " multidimensional signal processing", " polytope", " signal-to-memory mapping"], "paper_abstract": "The storage requirements of the array-dominated and loop-organized algorithmic specifications running on embedded systems can be significant. Employing a data memory space much larger than needed has negative consequences on the energy consumption, latency, and chip area. Finding an optimized storage of the usually large arrays from these algorithmic specifications is an essential task of memory allocation. This paper proposes an efficient algorithm for mapping multidimensional arrays to the data memory. Similarly to [1], it computes bounding windows for live elements in the index space of arrays, but this algorithm is several times faster. More important, since this algorithm works not only for entire arrays, but also parts of arrays-like, for instance, array references or, more general, sets of array elements represented by lattices [2], this signal-to-memory mapping technique can be also applied in hierarchical memory architectures.", "paper_title": "Signal Assignment to Hierarchical Memory Organizations for Embedded Multidimensional Signal Processing Systems", "paper_id": "WOS:000269155400014"}