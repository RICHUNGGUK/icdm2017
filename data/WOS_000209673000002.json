{"auto_keywords": [{"score": 0.03421787969149637, "phrase": "unbounded_number"}, {"score": 0.00481495049065317, "phrase": "message-passing_programs"}, {"score": 0.0046079260641779755, "phrase": "novel_technique"}, {"score": 0.004527619017250708, "phrase": "bounded_analysis"}, {"score": 0.004448705308279165, "phrase": "asynchronous_message-passing_programs"}, {"score": 0.0033868916699805224, "phrase": "process_communication_cycles"}, {"score": 0.0024451427672857458, "phrase": "simple_and_efficient_program_analysis"}, {"score": 0.0023604768913655463, "phrase": "sequential_programs"}, {"score": 0.0022192891418394514, "phrase": "message_queues"}, {"score": 0.0021049977753042253, "phrase": "queue_content"}], "paper_keywords": ["Concurrency", " Verification", " Analysis", " Message-passing", " Distributed"], "paper_abstract": "We describe a novel technique for bounded analysis of asynchronous message-passing programs with ordered message queues. Our bounding parameter does not limit the number of pending messages, nor the number of \"context-switches\" between processes. Instead, we limit the number of process communication cycles, in which an unbounded number of messages are sent to an unbounded number of processes across an unbounded number of contexts. We show that remarkably, despite the potential for such vast exploration, our bounding scheme gives rise to a simple and efficient program analysis by reduction to sequential programs. As our reduction avoids explicitly representing message queues, our analysis scales irrespectively of queue content and variation.", "paper_title": "Bounded phase analysis of message-passing programs", "paper_id": "WOS:000209673000002"}