{"auto_keywords": [{"score": 0.04950097558699653, "phrase": "relational_learning"}, {"score": 0.00481495049065317, "phrase": "aggregate_conditions"}, {"score": 0.0041112665381266315, "phrase": "related_individuals"}, {"score": 0.003685067218455088, "phrase": "aggregate_function"}, {"score": 0.0032828706086018133, "phrase": "complex_query"}, {"score": 0.002735052488172277, "phrase": "proposed_aggregate_refinement_operator"}, {"score": 0.002636956926079255, "phrase": "hypothesis_space"}, {"score": 0.002421499421848063, "phrase": "example_application"}, {"score": 0.0023346234464901978, "phrase": "refinement_operator"}, {"score": 0.0022923586577645143, "phrase": "relational_decision_tree_induction_system"}, {"score": 0.0022101055924375725, "phrase": "significant_efficiency_gain"}], "paper_keywords": [""], "paper_abstract": "In relational learning, predictions for an individual are based not only on its own properties but also on the properties of a set of related individuals. Many systems use aggregates to summarize this set. Features thus introduced compare the result of an aggregate function to a threshold. We consider the case where the set to be aggregated is generated by a complex query and present a framework for refining such complex aggregate conditions along three dimensions: the aggregate function, the query used to generate the set, and the threshold value. The proposed aggregate refinement operator allows a more efficient search through the hypothesis space and thus can be beneficial for many relational learners that use aggregates. As an example application, we have implemented the refinement operator in a relational decision tree induction system. Experimental results show a significant efficiency gain in comparison with the use of a less advanced refinement operator.", "paper_title": "Refining aggregate conditions in relational learning", "paper_id": "WOS:000241104900032"}