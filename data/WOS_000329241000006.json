{"auto_keywords": [{"score": 0.03913206293172502, "phrase": "generic_programming"}, {"score": 0.00481495049065317, "phrase": "petascale_adaptive_unstructured_mesh-based_simulations"}, {"score": 0.0045547927862194856, "phrase": "data_structures"}, {"score": 0.00436890075128947, "phrase": "specific_data_types"}, {"score": 0.004161553532799662, "phrase": "code_redundancy"}, {"score": 0.003964007795174772, "phrase": "effective_code_reuse"}, {"score": 0.003909301559145041, "phrase": "similar_applications"}, {"score": 0.003775803846431323, "phrase": "code_reuse"}, {"score": 0.003378385493203297, "phrase": "common_requirements"}, {"score": 0.0030650070965891653, "phrase": "ongoing_effort"}, {"score": 0.0030226700832113942, "phrase": "mesh-based_adaptive_simulations"}, {"score": 0.002685558057339722, "phrase": "design_pattern"}, {"score": 0.0024704333220467393, "phrase": "scaling_studies"}, {"score": 0.002436289099444074, "phrase": "petascale_supercomputers"}, {"score": 0.0023043558058824572, "phrase": "generic_components"}, {"score": 0.002164432930854161, "phrase": "previous_tools"}, {"score": 0.0021049977753042253, "phrase": "traditional_object-oriented_programming_paradigm"}], "paper_keywords": ["Unstructured mesh", " Mesh data structure", " Mesh-based simulation", " Generic programming"], "paper_abstract": "In the traditional programming paradigm, data structures and algorithms are developed for specific data types and requirements. This leads to code redundancy and inflexibility, thus not allowing effective code reuse for similar applications. One effective approach to increase code reuse is generic programming, which focuses on the development of efficient, reusable software libraries through suitable abstractions for the common requirements. In this paper, we present how we applied generic programming to an ongoing effort for mesh-based adaptive simulations on massively parallel computers. Three generic components, iterator, set and tag, were developed using design pattern, C++ template programming and the standard template library. The scaling studies on petascale supercomputers demonstrate the efficiency of the reusable, generic components which do not sacrifice the performance of the previous tools developed in the traditional object-oriented programming paradigm.", "paper_title": "Generic components for petascale adaptive unstructured mesh-based simulations", "paper_id": "WOS:000329241000006"}