{"auto_keywords": [{"score": 0.03193798136705121, "phrase": "critical_tasks"}, {"score": 0.012973071437161879, "phrase": "business_process_model"}, {"score": 0.01134741432205609, "phrase": "business_process"}, {"score": 0.010523245753624275, "phrase": "first_category"}, {"score": 0.00995120029310177, "phrase": "second_category"}, {"score": 0.00874971912968442, "phrase": "hungarian_algorithm"}, {"score": 0.008508192228372773, "phrase": "optimal_solution"}, {"score": 0.007844518392324537, "phrase": "second_algorithm"}, {"score": 0.00481495049065317, "phrase": "simulation-based_optimization"}, {"score": 0.004787966206092959, "phrase": "business_process_models"}, {"score": 0.004721162131188487, "phrase": "classical_problem"}, {"score": 0.004655285779819366, "phrase": "combinatorial_optimization"}, {"score": 0.004603244077348199, "phrase": "wide_range"}, {"score": 0.004475659507646842, "phrase": "general_terms"}, {"score": 0.004388450908826472, "phrase": "best_assignment"}, {"score": 0.0042908537749279056, "phrase": "predefined_objective_function"}, {"score": 0.004266794077108026, "phrase": "different_variants"}, {"score": 0.003728000957725218, "phrase": "traditional_assignment_problem"}, {"score": 0.0035539019235553897, "phrase": "defined_rules"}, {"score": 0.0033879057307626328, "phrase": "assignment_problem"}, {"score": 0.003349984456443527, "phrase": "business_processes"}, {"score": 0.00319348234663792, "phrase": "different_assignments"}, {"score": 0.0028135084431547674, "phrase": "optimal_and_near-optimal_solutions"}, {"score": 0.0025137856138000014, "phrase": "first_one"}, {"score": 0.002362741548363011, "phrase": "large_number"}, {"score": 0.0023166075278110237, "phrase": "near-optimal_solution"}, {"score": 0.0022777800735119405, "phrase": "hill-climbing_heuristic_method"}, {"score": 0.0022082749950539495, "phrase": "overall_near-optimal_solution"}, {"score": 0.0021348627335303016, "phrase": "proposed_algorithms"}, {"score": 0.0021168934012668755, "phrase": "optimal_solutions"}, {"score": 0.0021049977753042253, "phrase": "assignment-independent_and_near-optimal_solutions"}], "paper_keywords": ["Assignment Problem", " business process optimization", " Hungarian algorithm", " simulation-based optimization"], "paper_abstract": "The Assignment Problem is a classical problem in the field of combinatorial optimization, having a wide range of applications in a variety of contexts. In general terms, the Assignment Problem consists of determining the best assignment of tasks to agents according to a predefined objective function. Different variants of the Assignment Problem have been extensively investigated in the literature in the last 50 years. In this work, we introduce and analyze the problem of optimizing a business process model with the objective of finding the most beneficial assignment of tasks to agents. Despite similarities, this problem is distinguished from the traditional Assignment Problem in that we consider tasks to be part of a business process model, being interconnected according to defined rules and constraints. In other words, assigning a business process to agents is a more complex form of the Assignment Problem. Two main categories of business processes, assignment-independent and assignment-dependent, are distinguished. In the first category, different assignments of tasks to agents do not affect the flow of the business process, while processes in the second category contain critical tasks that may change the workflow, depending on who performs them. In each category several types of processes are studied. Algorithms for finding optimal and near-optimal solutions to these categories are presented. For the first category, depending on the type of process, the Hungarian algorithm is combined with either the analytical method or simulation to provide an optimal solution. For the second category, we introduce two algorithms. The first one finds an optimal solution, but is feasible only when the number of critical tasks is small. The second algorithm is applicable to large number of critical tasks, but provides a near-optimal solution. In the second algorithm a hill-climbing heuristic method is combined with the Hungarian algorithm and simulation to find an overall near-optimal solution. A series of tests is conducted which demonstrates that the proposed algorithms efficiently find optimal solutions for assignment-independent and near-optimal solutions for assignment-dependent processes.", "paper_title": "A framework for simulation-based optimization of business process models", "paper_id": "WOS:000305969800006"}