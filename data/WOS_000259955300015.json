{"auto_keywords": [{"score": 0.026842996881145595, "phrase": "greedy_algorithm"}, {"score": 0.00481495049065317, "phrase": "regular_polygons"}, {"score": 0.004666598697538815, "phrase": "server_location_problem"}, {"score": 0.003701401653850141, "phrase": "online_algorithm"}, {"score": 0.0036324746826127997, "phrase": "arbitrary_point"}, {"score": 0.003265365666305185, "phrase": "single_point"}, {"score": 0.003028727936200845, "phrase": "conventional_server_problems"}, {"score": 0.0028805474861014722, "phrase": "online_player"}, {"score": 0.00262191949451482, "phrase": "regular_n-gon"}, {"score": 0.0025730425700096365, "phrase": "competitive_ratio"}, {"score": 0.0024625017739528096, "phrase": "odd_n"}, {"score": 0.002298288831092204, "phrase": "square_region"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["On-line algorithms", " Analysis of algorithms", " Competitive analysis", " Server location problem"], "paper_abstract": "We consider a server location problem with only one server to move. In this paper we assume that a request is given as a region and that the service can be done anywhere inside the region. Namely, for each request an online algorithm chooses an arbitrary point in the region and moves the server there. Note that if every request is a single point and the server must exactly go there in the given order as conventional server problems, there is no choice for the online player and the problem is trivial. Our main result shows that if the region is a regular n-gon, the competitive ratio of the greedy algorithm is 1/sin pi/2n for odd n, and 1/sin pi/n for even n. In particular for a square region, the greedy algorithm turns out to be optimal. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Online chasing problems for regular polygons", "paper_id": "WOS:000259955300015"}