{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "secure_data_stream_management_system"}, {"score": 0.0041703614123283165, "phrase": "adversary_scenarios"}, {"score": 0.003987126862293129, "phrase": "dsms_architecture"}, {"score": 0.0037104876694493815, "phrase": "general_dsms_architecture"}, {"score": 0.003611751858608048, "phrase": "security_issues"}, {"score": 0.0031845067058084583, "phrase": "extended_system_architecture"}, {"score": 0.003071965703296204, "phrase": "necessary_security_mechanisms"}, {"score": 0.002936849401568391, "phrase": "chosen_concepts"}, {"score": 0.002543043781904587, "phrase": "unique_properties"}, {"score": 0.00249767641333441, "phrase": "data_stream_engines"}, {"score": 0.0023451553255837317, "phrase": "existing_system_components"}, {"score": 0.0021049977753042253, "phrase": "overall_performance"}], "paper_keywords": [""], "paper_abstract": "Todays data stream management systems (DSMSs) lack security functionality. Based on adversary scenarios we show how a DSMS architecture can be protected. We sketch a general DSMS architecture and introduce security issues that need to be considered. To face the threats we develop an extended system architecture that provides the necessary security mechanisms. We descuss the chosen concepts and illustrate how they can be realized by various system components. Our design focus is, considering the unique properties of data stream engines, to keep the impact on existing system components as little as possible and to limit the effect on the overall performance to a minimum.", "paper_title": "Towards a secure data stream management system", "paper_id": "WOS:000237265100010"}