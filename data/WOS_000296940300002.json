{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "control_dependence"}, {"score": 0.004999268865826137, "phrase": "previous_forms"}, {"score": 0.004748556604045108, "phrase": "arbitrary_program_structures"}, {"score": 0.00436890075128947, "phrase": "control_flow_graphs"}, {"score": 0.004308630865024719, "phrase": "extra_restrictions"}, {"score": 0.0040757181942937875, "phrase": "insensitive_and_non-termination_sensitive_control_dependence"}, {"score": 0.0038822311096089307, "phrase": "finite_directed_graphs"}, {"score": 0.00367228341822469, "phrase": "wider_class"}, {"score": 0.0036468482216440233, "phrase": "program_structures"}, {"score": 0.003413800638453572, "phrase": "restricted_graphs"}, {"score": 0.0033317342432676385, "phrase": "vertex_sets"}, {"score": 0.0031187606191012012, "phrase": "low_polynomial-time_algorithms"}, {"score": 0.0030437652050982617, "phrase": "control-closed_sets"}, {"score": 0.0030226700832113942, "phrase": "generalised_control_flow_graphs"}, {"score": 0.002899125545529459, "phrase": "underlying_semantics"}, {"score": 0.0021795515361987144, "phrase": "correctness_criteria"}, {"score": 0.002164432930854161, "phrase": "future_definitions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Control dependence", " Program dependence", " Program analysis", " Software engineering", " Program slicing", " Formal methods", " Program semantics", " Graph theory"], "paper_abstract": "There are several similar, but not identical, definitions of control dependence in the literature. These definitions are given in terms of control flow graphs which have had extra restrictions imposed (for example, end-reachability). We define two new generalisations of non-termination insensitive and non-termination sensitive control dependence called weak and strong control-closure. These are defined for all finite directed graphs, not just control flow graphs and are hence allow control dependence to be applied to a wider class of program structures than before. We investigate all previous forms of control dependence in the literature and prove that, for the restricted graphs for which each is defined, vertex sets are closed under each if and only if they are either weakly or strongly control-closed. Low polynomial-time algorithms for producing minimal weakly and strongly control-closed sets over generalised control flow graphs are given. This paper is the first to define an underlying semantics for control dependence: we define two relations between graphs called weak and strong projections, and prove that the graph induced by a set of vertices is a weak/strong projection of the original if and only if the set is weakly/strongly control-closed. Thus, all previous forms of control dependence also satisfy our semantics. Weak and strong projections, therefore, precisely capture the essence of control dependence in our generalisations and all the previous, more restricted forms. More fundamentally, these semantics can be thought of as correctness criteria for future definitions of control dependence. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A unifying theory of control dependence and its application to arbitrary program structures", "paper_id": "WOS:000296940300002"}