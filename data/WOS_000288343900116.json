{"auto_keywords": [{"score": 0.03197225574974637, "phrase": "proposed_approach"}, {"score": 0.00481495049065317, "phrase": "high_utility_itemsets"}, {"score": 0.004382364826200616, "phrase": "item_frequency_values"}, {"score": 0.004030449969901066, "phrase": "different_profits"}, {"score": 0.00396767023935381, "phrase": "frequent_patterns"}, {"score": 0.003905864553426306, "phrase": "traditional_database"}, {"score": 0.003785115566529808, "phrase": "real-world_applications"}, {"score": 0.003480993634130542, "phrase": "user_preference"}, {"score": 0.003355717283753749, "phrase": "high_utility_pattern_tree"}, {"score": 0.0032012284065895537, "phrase": "hup-growth_mining_algorithm"}, {"score": 0.003118486096035156, "phrase": "high_utility_patterns"}, {"score": 0.002974886152979993, "phrase": "previous_two-phase_procedure"}, {"score": 0.0028828348726682965, "phrase": "fp-tree_concept"}, {"score": 0.002823050755743821, "phrase": "downward-closure_property"}, {"score": 0.0027645030021576926, "phrase": "compressed_tree_structure"}, {"score": 0.0027356847952125433, "phrase": "experimental_results"}, {"score": 0.0026233771102489394, "phrase": "better_performance"}, {"score": 0.0025960262223338293, "phrase": "liu_et_al"}, {"score": 0.0025555322596460036, "phrase": "two-phase_algorithm"}, {"score": 0.002412371116984224, "phrase": "tree_nodes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Utility mining", " High utility pattern", " HUP-tree", " HUP-growth", " Two-phase mining", " Downward closure"], "paper_abstract": "In the past, many algorithms were proposed to mine association rules, most of which were based on item frequency values. Considering a customer may buy many copies of an item and each item may have different profits, mining frequent patterns from a traditional database is not suitable for some real-world applications. Utility mining was thus proposed to consider costs, profits and other measures according to user preference. In this paper, the high utility pattern tree (HUP tree) is designed and the HUP-growth mining algorithm is proposed to derive high utility patterns effectively and efficiently. The proposed approach integrates the previous two-phase procedure for utility mining and the FP-tree concept to utilize the downward-closure property and generate a compressed tree structure. Experimental results also show that the proposed approach has a better performance than Liu et al.'s two-phase algorithm in execution time. At last, the numbers of tree nodes generated from three different item ordering methods are also compared, with results showing that the frequency ordering produces less tree nodes than the other two. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "An effective tree structure for mining high utility itemsets", "paper_id": "WOS:000288343900116"}