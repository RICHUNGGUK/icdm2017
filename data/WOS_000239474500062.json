{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "preference_list"}, {"score": 0.004395532072377065, "phrase": "applicant_x"}, {"score": 0.003640516896245813, "phrase": "x's_personal_preference"}, {"score": 0.003574695610710444, "phrase": "matching_m"}, {"score": 0.0027685531038981847, "phrase": "popular_matching"}, {"score": 0.002511600086227215, "phrase": "strict_preferences"}, {"score": 0.0021049977753042253, "phrase": "distinct_weights"}], "paper_keywords": [""], "paper_abstract": "We study the problem of assigning applicants to jobs. Each applicant has a weight and provides a preference list, which may contain ties, ranking a subset of the jobs. An applicant x may prefer one matching over the other (or be indifferent between them, in case of a tie) based on the jobs x gets in the two matchings and x's personal preference. A matching M is popular if there is no other matching M' such that the weight of the applicants who prefer M' over M exceeds the weight of those who prefer M over M'. We present two algorithms to find a popular matching, or in case none exists, to establish so. For the case of strict preferences we develop an O(n + m) time algorithm. When ties are allowed a more involved algorithm solves the problem in O(min(k root n, n)m) time, where k is the number of distinct weights the applicants are given.", "paper_title": "Weighted popular matchings", "paper_id": "WOS:000239474500062"}