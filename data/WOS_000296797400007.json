{"auto_keywords": [{"score": 0.030274070055761586, "phrase": "topological_patterns"}, {"score": 0.00481495049065317, "phrase": "scalable_representation"}, {"score": 0.00468627326602559, "phrase": "dataflow_graphs"}, {"score": 0.0045302298105691615, "phrase": "signal_processing_systems"}, {"score": 0.004409127897028587, "phrase": "dataflow_modeling"}, {"score": 0.004320421465896323, "phrase": "high-level_graphical_user_interfaces"}, {"score": 0.004176509019758331, "phrase": "text_based_languages"}, {"score": 0.004010102190292041, "phrase": "directed_graphs"}, {"score": 0.003850299959557491, "phrase": "initial_reference_point"}, {"score": 0.0036470559917231218, "phrase": "platform-specific_implementations"}, {"score": 0.00357362651129581, "phrase": "large-scale_applications"}, {"score": 0.0035016702571862165, "phrase": "underlying_graphs"}, {"score": 0.0034079696245884073, "phrase": "smaller_substructures"}, {"score": 0.0033393377529146893, "phrase": "multiple_times"}, {"score": 0.0032061793819537633, "phrase": "direct_analysis"}, {"score": 0.003057503388220776, "phrase": "high_level_dsp_specification_languages"}, {"score": 0.002895986736522535, "phrase": "modeling_concept"}, {"score": 0.0026514708899935333, "phrase": "high-level_language"}, {"score": 0.0025630077791393125, "phrase": "dataflow_interchange_format"}, {"score": 0.0023948164534491273, "phrase": "dsp-oriented_dataflow_graphs"}, {"score": 0.0021049977753042253, "phrase": "embedded_signal_processing_design_flows"}], "paper_keywords": ["Dataflow graphs", " High-level languages", " Model-based design", " Topological patterns", " Signal processing systems"], "paper_abstract": "Tools for designing signal processing systems with their semantic foundation in dataflow modeling often use high-level graphical user interfaces (GUIs) or text based languages that allow specifying applications as directed graphs. Such graphical representations serve as an initial reference point for further analysis and optimizations that lead to platform-specific implementations. For large-scale applications, the underlying graphs often consist of smaller substructures that repeat multiple times. To enable more concise representation and direct analysis of such substructures in the context of high level DSP specification languages and design tools, we develop the modeling concept of topological patterns, and propose ways for supporting this concept in a high-level language. We augment the dataflow interchange format (DIF) language-a language for specifying DSP-oriented dataflow graphs-with constructs for supporting topological patterns, and we show how topological patterns can be effective in various aspects of embedded signal processing design flows using specific application examples.", "paper_title": "Topological Patterns for Scalable Representation and Analysis of Dataflow Graphs", "paper_id": "WOS:000296797400007"}