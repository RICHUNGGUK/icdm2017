{"auto_keywords": [{"score": 0.03374707801267494, "phrase": "input_polygon"}, {"score": 0.00481495049065317, "phrase": "query-point_visibility"}, {"score": 0.004658426838467567, "phrase": "simple_polygons"}, {"score": 0.004274766964161756, "phrase": "shortest_path"}, {"score": 0.0041357305373417455, "phrase": "simple_polygon"}, {"score": 0.003820144626025562, "phrase": "query_point"}, {"score": 0.0032591491777773035, "phrase": "logarithmic_query_time"}, {"score": 0.002798780784517325, "phrase": "worst_case"}, {"score": 0.002636828502928141, "phrase": "preprocessing_algorithm"}, {"score": 0.0025849489224175548, "phrase": "angular_interval"}, {"score": 0.0025340874787959195, "phrase": "reflex_vertex"}, {"score": 0.0024192592458651204, "phrase": "optimal_contact_points"}, {"score": 0.0023716501597131024, "phrase": "shortest_paths"}, {"score": 0.002279217896185919, "phrase": "visibility_polygons"}, {"score": 0.002234358539133758, "phrase": "query_points"}], "paper_keywords": ["computational geometry", " shortest path", " visibility"], "paper_abstract": "In this paper, we study the problem of finding the shortest path between two points inside a simple polygon such that there is at least one point on the path from which a query point is visible. We provide an algorithm which preprocesses the input in O(n(2) + n(K)) time and space and provides logarithmic query time. The input polygon has n vertices and K is a parameter dependent on the input polygon which is O(n(2)) in the worst case but is much smaller for most polygons. The preprocessing algorithm sweeps an angular interval around every reflex vertex of the polygon to store the optimal contact points between the shortest paths and the windows separating the visibility polygons of the query points from the source and the destination. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Query-point visibility constrained shortest paths in simple polygons", "paper_id": "WOS:000251695800001"}