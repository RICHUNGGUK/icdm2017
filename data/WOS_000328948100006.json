{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "adaptive_thread_scheduling_mechanism"}, {"score": 0.04961597900198376, "phrase": "low-power_register_file"}, {"score": 0.03133755014744724, "phrase": "power_consumption"}, {"score": 0.030895901298046587, "phrase": "register_file"}, {"score": 0.026419155679563232, "phrase": "proposed_low-power_register_file"}, {"score": 0.004564291332315995, "phrase": "remarkable_increase"}, {"score": 0.004476399615305783, "phrase": "consumer_electronics_devices"}, {"score": 0.004390192910013225, "phrase": "graphics_processing_units"}, {"score": 0.004202223763361474, "phrase": "mobile_devices"}, {"score": 0.004081385289516914, "phrase": "hardware_multithreaded_shaders"}, {"score": 0.003983334573043943, "phrase": "real-time_rendering"}, {"score": 0.0038499929374478125, "phrase": "register_files"}, {"score": 0.003721098220825489, "phrase": "hardware_thread"}, {"score": 0.003685067218455088, "phrase": "increasing_power_consumption"}, {"score": 0.0035965032173588753, "phrase": "register_usage"}, {"score": 0.0035616743422949766, "phrase": "shading_programs"}, {"score": 0.003278878522165815, "phrase": "long_latency_memory_operations"}, {"score": 0.003215659239270654, "phrase": "unnecessary_power"}, {"score": 0.0025207920578878894, "phrase": "average_performance_degradation"}, {"score": 0.002424450174817922, "phrase": "proposed_adaptive_thread_scheduling"}, {"score": 0.002400944221804575, "phrase": "average_under_prediction_ratio"}, {"score": 0.0023431692392929353, "phrase": "leakage_reduction"}, {"score": 0.002125612498781805, "phrase": "adaptive_thread_scheduling"}, {"score": 0.0021049977753042253, "phrase": "frame_rates"}], "paper_keywords": ["Graphics hardware", " mobile GPU", " register file", " thread scheduling"], "paper_abstract": "In response to the remarkable increase in 3D applications in consumer electronics devices in recent years, graphics processing units (GPUs) have become widely available on mobile devices. These GPUs typically use hardware multithreaded shaders to improve their throughputs for real-time rendering, but they depend on duplicate register files to maintain the context of each hardware thread, increasing power consumption. However, the register usage of shading programs is often relatively low, which causes many registers to remain unused, thus wasting power. Long latency memory operations can also consume unnecessary power to activate registers. This study proposes a low-power register file with multiple power modes to reduce the power consumption of the register file. This study also presents an adaptive thread scheduling mechanism to achieve a tradeoff between the power consumption of the register file and frames per second (FPS). Results show that the average performance degradation from the proposed low-power register file is only 0.62%. The proposed adaptive thread scheduling has average under prediction ratio of 3.32%. The leakage reduction of the proposed low-power register file is 74.80%. This reduction can be improved to 81.49%, 82.22%, and 84.28% with adaptive thread scheduling at frame rates of 30, 25, and 20, respectively.", "paper_title": "An Adaptive Thread Scheduling Mechanism With Low-Power Register File for Mobile GPUs", "paper_id": "WOS:000328948100006"}