{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stretch_factor"}, {"score": 0.0046970764288494764, "phrase": "geometric_network"}, {"score": 0.004620093797504386, "phrase": "edge_augmentation"}, {"score": 0.00446987606516801, "phrase": "euclidean_graph_g"}, {"score": 0.0035755653799043, "phrase": "resulting_graph"}, {"score": 0.0033743949483348626, "phrase": "fastest_algorithm"}, {"score": 0.003132236287543072, "phrase": "positive_edge_weights"}, {"score": 0.0027211030647461324, "phrase": "optimal_edge"}, {"score": 0.002546708483171714, "phrase": "simple_modi"}, {"score": 0.0024434201175883674, "phrase": "optimal_solution"}, {"score": 0.0021579641460002523, "phrase": "running_time"}], "paper_keywords": ["computational geometry", " approximation algorithms", " geometric networks"], "paper_abstract": "Given a Euclidean graph G in R(d) with n vertices and m edges, we consider the problem of adding an edge to G such that the stretch factor of the resulting graph is minimized. Currently, the fastest algorithm for computing the stretch factor of a graph with positive edge weights runs in O(nm+n(2) log n) time, resulting in a trivial O(n(3)m+n(4)log n)-time algorithm for computing the optimal edge. First, we show that a simple modi. cation yields the optimal solution in O(n(4)) time using O(n(2)) space. To reduce the running time we consider several approximation algorithms.", "paper_title": "Improving the stretch factor of a geometric network by edge augmentation", "paper_id": "WOS:000256452600009"}