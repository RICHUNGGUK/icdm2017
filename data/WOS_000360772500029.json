{"auto_keywords": [{"score": 0.028285805638373216, "phrase": "smm"}, {"score": 0.00481495049065317, "phrase": "evolutionary_techniques"}, {"score": 0.004718897469501381, "phrase": "automated_implementation"}, {"score": 0.004655924035639928, "phrase": "digital_circuits"}, {"score": 0.004593787100061613, "phrase": "evolvable_hardware"}, {"score": 0.004198981284816405, "phrase": "ehw"}, {"score": 0.003935892934907777, "phrase": "evolutionary_algorithms"}, {"score": 0.0037549546301384336, "phrase": "electrical_circuits"}, {"score": 0.0036064757492752703, "phrase": "five_different_mutation_methods"}, {"score": 0.0034872225047008648, "phrase": "conventional_genetic_algorithm_technique"}, {"score": 0.003397889029148991, "phrase": "agm"}, {"score": 0.003238517900104576, "phrase": "main_achievement"}, {"score": 0.002811770047652563, "phrase": "required_logical_structure"}, {"score": 0.002700485592691974, "phrase": "sequential_mutation_method"}, {"score": 0.0026111116934081284, "phrase": "circular_gene_method"}, {"score": 0.002507748938616919, "phrase": "convergence_time"}, {"score": 0.002441118140830714, "phrase": "substantial_reduction"}, {"score": 0.0021917966722180132, "phrase": "full_adder_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Evolvable Hardware", " Logic circuit", " Evolutionary algorithm", " Genetic algorithm"], "paper_abstract": "Evolvable Hardware (EHW) is hardware that can dynamically change its behavior and architecture by interacting with its environment. EHW can make use of evolutionary algorithms (EAs) to optimally synthesize electrical circuits. In this paper, five different mutation methods are implemented in a conventional genetic algorithm technique to automatically realize a digital 8 bit full adder (FA). The main achievement of this work is the comparison between those techniques in terms of number of iterations required to converge on the required logical structure. Results demonstrate that the sequential mutation method (SMM) and circular gene method (CGM) reduce the convergence time, and a substantial reduction is observed when these methods are combined with the Adaptive Group Mutation (AGM) method for the full adder implementation. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Analysis of evolutionary techniques for the automated implementation of digital circuits", "paper_id": "WOS:000360772500029"}