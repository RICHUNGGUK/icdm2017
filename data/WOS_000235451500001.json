{"auto_keywords": [{"score": 0.04280136321445764, "phrase": "active_buffering"}, {"score": 0.00481495049065317, "phrase": "periodic_output_cost"}, {"score": 0.004749646583168342, "phrase": "scientific_simulations"}, {"score": 0.004685224205630963, "phrase": "scientific_applications"}, {"score": 0.004497129150551236, "phrase": "large_arrays"}, {"score": 0.004316552692395911, "phrase": "visualization_or_restart_purposes"}, {"score": 0.0034686643139273934, "phrase": "periodic_output_data"}, {"score": 0.003375087185182269, "phrase": "idle_memory"}, {"score": 0.003152006152091526, "phrase": "runtime_memory_availability"}, {"score": 0.002620424858132324, "phrase": "portable_style"}, {"score": 0.002480826434008026, "phrase": "performance_problems"}, {"score": 0.002447101794397243, "phrase": "scientific_data_formats"}, {"score": 0.002364777610365689, "phrase": "performance_experiments"}, {"score": 0.002300912218086077, "phrase": "real_simulation_codes"}, {"score": 0.0022696277881969896, "phrase": "multiple_platforms"}, {"score": 0.0021049977753042253, "phrase": "application's_point"}], "paper_keywords": ["parallel I/O library design", " performance optimization", " experimentation"], "paper_abstract": "Scientific applications often need to write out large arrays and associated metadata periodically for visualization or restart purposes. In this paper, we present active buffering, a high-level transparent buffering scheme for collective I/O, in which processors actively organize their idle memory into a hierarchy of buffers for periodic output data. It utilizes idle memory on the processors, yet makes no assumption regarding runtime memory availability. Active buffering can perform background I/O while the computation is going on, is extensible to remote I/O for more efficient data migration, and can be implemented in a portable style in today's parallel I/O libraries. It can also mask performance problems of scientific data formats used by many scientists. Performance experiments with both synthetic benchmarks and real simulation codes on multiple platforms show that active buffering can greatly reduce the visible I/O cost from the application's point of view.", "paper_title": "High-level buffering for hiding periodic output cost in scientific simulations", "paper_id": "WOS:000235451500001"}