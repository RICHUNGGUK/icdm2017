{"auto_keywords": [{"score": 0.05007851542092211, "phrase": "infinite_state_model"}, {"score": 0.04798651426508335, "phrase": "safety-critical_systems"}, {"score": 0.03345710203805794, "phrase": "experimental_results"}, {"score": 0.031689996779098735, "phrase": "alv"}, {"score": 0.027658437838111342, "phrase": "formal_analysis"}, {"score": 0.004682414867878963, "phrase": "tabular_requirements"}, {"score": 0.004378958522416482, "phrase": "finite_state_models"}, {"score": 0.004258372598568333, "phrase": "symbolic_model_checking"}, {"score": 0.004141093507753515, "phrase": "infinite_state_models"}, {"score": 0.00409508755819924, "phrase": "symbolic_representations"}, {"score": 0.004027031316965272, "phrase": "infinite_sets"}, {"score": 0.003829548069657859, "phrase": "infinite_state_symbolic_model_checker"}, {"score": 0.003641713874009232, "phrase": "formal_requirements_specifications"}, {"score": 0.0034245614958572012, "phrase": "scr_method"}, {"score": 0.0033301694494391612, "phrase": "state_machine_models"}, {"score": 0.003256526411907174, "phrase": "alv_infinite_state_model_checker"}, {"score": 0.00306227185008558, "phrase": "alv."}, {"score": 0.0028635111041882956, "phrase": "counterexample_behaviors"}, {"score": 0.002815864555488112, "phrase": "state_and_transition_invariants"}, {"score": 0.002707741309851526, "phrase": "disjointness_and_coverage_properties"}, {"score": 0.002341164727388946, "phrase": "scr_toolset"}, {"score": 0.0021049977753042253, "phrase": "explicit_and_finite_state_model"}], "paper_keywords": ["infinite state model checking", " requirements specifications", " safety-critical systems"], "paper_abstract": "Although it is most often applied to finite state models, in recent years, symbolic model checking has been extended to infinite state models using symbolic representations that encode infinite sets. This paper investigates the application of an infinite state symbolic model checker called Action Language Verifier (ALV) to formal requirements specifications of safety-critical systems represented in the SCR (Software Cost Reduction) tabular notation. After reviewing the SCR method and tools, the Action Language for representing state machine models, and the ALV infinite state model checker, the paper presents experimental results of formally analyzing two SCR specifications using ALV. The application of ALV to verify or falsify (by generating counterexample behaviors) the state and transition invariants of SCR specifications and to check Disjointness and Coverage properties is described. The results of formal analysis with ALV are then compared with the results of formal analysis using techniques that have been integrated into the SCR toolset. Based on the experimental results, strengths and weaknesses of infinite state model checking with respect to other formal analysis approaches such as explicit and finite state model checking and theorem proving are discussed.", "paper_title": "Applying infinite state model checking and other analysis techniques to tabular requirements specifications of safety-critical systems", "paper_id": "WOS:000257776000005"}