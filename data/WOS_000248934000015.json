{"auto_keywords": [{"score": 0.04864906299006131, "phrase": "mas"}, {"score": 0.010048870786104567, "phrase": "activity_theory"}, {"score": 0.009144702243274197, "phrase": "contradiction_patterns"}, {"score": 0.00481495049065317, "phrase": "multi-agent_systems"}, {"score": 0.004706699397060569, "phrase": "multi-agent_system"}, {"score": 0.004548848077202625, "phrase": "large_number"}, {"score": 0.004396267325338022, "phrase": "non-trivial_task"}, {"score": 0.004346547997061901, "phrase": "managing_different_views"}, {"score": 0.004121826934975274, "phrase": "contradictory_goals"}, {"score": 0.004013843843250455, "phrase": "unexpected_behaviours"}, {"score": 0.0038644521996539466, "phrase": "development_process"}, {"score": 0.0037918465913284478, "phrase": "alternative_ways"}, {"score": 0.0034226302212225206, "phrase": "mas._contradiction_management"}, {"score": 0.0031484483754909026, "phrase": "social_sciences"}, {"score": 0.002940487679224863, "phrase": "activity_systems"}, {"score": 0.0027048247303526583, "phrase": "social_theory"}, {"score": 0.002623881637290192, "phrase": "software_engineering_context"}, {"score": 0.0025843206540392184, "phrase": "agent-oriented_methodologies"}, {"score": 0.0024319378563138223, "phrase": "mas_specification"}, {"score": 0.0022625835448873495, "phrase": "ingenias_development_kit"}, {"score": 0.0021049977753042253, "phrase": "web_application"}], "paper_keywords": ["agent-oriented software engineering", " multi-agent system analysis and design", " activity theory", " conflict solution", " contradiction patterns"], "paper_abstract": "The specification of a Multi-Agent System (MAS) involves the identification of a large number of entities and their relationships. This is a non-trivial task that requires managing different views of the system. Many problems concerning this issue originate in the presence of contradictory goals and tasks, inconsistencies, and unexpected behaviours. Such troublesome configurations should be detected and prevented during the development process in order to study alternative ways to cope with them. In this paper, we present methods and tools that support the management of contradictions during the analysis and design of MAS. Contradiction management in MAS has to consider both individual (i.e. agent) and social (i.e. organization) aspects, and their dynamics. Such issues have already been considered in social sciences, and more concretely in the Activity Theory, a social framework for the study of interactions in activity systems. Our approach applies knowledge from Activity Theory in MAS, especially its base of contradiction patterns. That requires a formalization of this social theory in order to be applicable in a software engineering context and its adaptation to agent-oriented methodologies. Then, it will be possible to check the occurrence of contradiction patterns in a MAS specification and provide solutions to those situations. This technique has been validated by implementing an assistant for the INGENIAS Development Kit and has been tested with several case studies. This paper shows part of one of these experiments for a web application.", "paper_title": "Managing contradictions in multi-agent systems", "paper_id": "WOS:000248934000015"}