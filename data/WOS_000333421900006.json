{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "process_discovery"}, {"score": 0.012550179691737445, "phrase": "process_mining"}, {"score": 0.010734383841946285, "phrase": "process_mining_problems"}, {"score": 0.004470071518923524, "phrase": "process_model"}, {"score": 0.0044118153390803405, "phrase": "event_log"}, {"score": 0.004167982855788402, "phrase": "observed_and_modeled_behavior"}, {"score": 0.004095692768056685, "phrase": "increasing_availability"}, {"score": 0.00406001734835979, "phrase": "event_data"}, {"score": 0.003937573222812911, "phrase": "process_analysis"}, {"score": 0.003703611021999795, "phrase": "key_technologies"}, {"score": 0.003671338229632309, "phrase": "business_process_management"}, {"score": 0.003545024951402821, "phrase": "event_logs"}, {"score": 0.0035141291835319682, "phrase": "process_models"}, {"score": 0.003247868216333148, "phrase": "smaller_problems"}, {"score": 0.002898378776839434, "phrase": "direct_successors"}, {"score": 0.0027863537694678094, "phrase": "direct_predecessors"}, {"score": 0.002737960968372391, "phrase": "x._any_petri"}, {"score": 0.0025977542995083624, "phrase": "conformance_checking"}, {"score": 0.0021610874773389096, "phrase": "prom_plug-ins"}, {"score": 0.0021049977753042253, "phrase": "conformance_checking_tasks"}], "paper_keywords": ["process mining", " conformance checking", " process discovery", " distributed computing", " business process management"], "paper_abstract": "The two most prominent process mining tasks are process discovery (i.e., learning a process model from an event log) and conformance checking (i.e., diagnosing and quantifying differences between observed and modeled behavior). The increasing availability of event data makes these tasks highly relevant for process analysis and improvement. Therefore, process mining is considered to be one of the key technologies for Business Process Management (BPM). However, as event logs and process models grow, process mining becomes more challenging. Therefore, we propose an approach to decompose process mining problems into smaller problems using the notion of passages. A passage is a pair of two non-empty sets of activities (X, Y) such that the set of direct successors of X is Y and the set of direct predecessors of Y is X. Any Petri net can be partitioned using passages. Moreover, process discovery and conformance checking can be done per passage and the results can be aggregated. This has advantages in terms of efficiency and diagnostics. Moreover, passages can be used to distribute process mining problems over a network of computers. Passages are supported through ProM plug-ins that automatically decompose process discovery and conformance checking tasks.", "paper_title": "Process Discovery and Conformance Checking Using Passages", "paper_id": "WOS:000333421900006"}