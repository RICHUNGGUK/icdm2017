{"auto_keywords": [{"score": 0.0396600464562225, "phrase": "socs"}, {"score": 0.009907137956271022, "phrase": "nocs"}, {"score": 0.00481495049065317, "phrase": "hybrid_application-specific_network"}, {"score": 0.0047306078475683865, "phrase": "chip_topologies"}, {"score": 0.004506171772318298, "phrase": "cost-efficient_and_effective_communication"}, {"score": 0.004388252997694986, "phrase": "modern_systems"}, {"score": 0.004179991181159956, "phrase": "regular_topologies"}, {"score": 0.003911771812701971, "phrase": "general-purpose_many_core_socs"}, {"score": 0.003742554019950264, "phrase": "predefined_application_characteristics"}, {"score": 0.003709595902020469, "phrase": "traffic_patterns"}, {"score": 0.0036124465071873998, "phrase": "application-specific_noc_topologies"}, {"score": 0.0034868462688262864, "phrase": "application_characteristics"}, {"score": 0.0033955105098235345, "phrase": "synthesis_approach"}, {"score": 0.0032199307816384577, "phrase": "use_cases"}, {"score": 0.0029602552900111407, "phrase": "length_constraints"}, {"score": 0.002908306074124806, "phrase": "hybrid_topologies"}, {"score": 0.0028572658971252616, "phrase": "noc_routers"}, {"score": 0.0027578496677536373, "phrase": "proposed_approach"}, {"score": 0.002721464488351771, "phrase": "intermediate_relay_routers"}, {"score": 0.0024798279465139688, "phrase": "deadlock-free_routing"}, {"score": 0.0023935128386292966, "phrase": "deadlock-free_paths"}, {"score": 0.002351485871160907, "phrase": "virtual_channels"}, {"score": 0.002289821830549779, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "industrial_soc_examples"}], "paper_keywords": ["Application-specific", " hybrid", " network-on-chip (NoC)", " partitioning", " routing", " synthesis"], "paper_abstract": "Networks-on-Chip (NoCs) enable cost-efficient and effective communication between the processing elements inside modern systems-on-chip (SoCs). NoCs with regular topologies such as meshes, tori, rings, and trees are well suited for general-purpose many core SoCs. These topologies might prove suboptimal for SoCs with predefined application characteristics and traffic patterns. Such SoCs benefit from application-specific NoC topologies, designed and optimized according to the application characteristics. This paper proposes a synthesis approach for creating hybrid, application-specific NoCs from an input floorplan and a set of use cases, describing the applications running on the SoC. The method considers latency, port count, and link length constraints. It produces hybrid topologies that utilize both NoC routers and shared buses. Furthermore, the proposed approach can insert intermediate relay routers that act as bridges or repeaters and help to reduce the cost further. Finally, the approach creates a deadlock-free routing of the communication flows by either finding deadlock-free paths or by inserting virtual channels. The benefits of the proposed method are demonstrated by comparing it to state-of-the-art approaches on a generic and an industrial SoC examples.", "paper_title": "Deterministic Synthesis of Hybrid Application-Specific Network-on-Chip Topologies", "paper_id": "WOS:000344529700006"}