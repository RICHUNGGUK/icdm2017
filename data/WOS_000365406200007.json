{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "longer_lifespans"}, {"score": 0.004698229304089357, "phrase": "contextual_variation"}, {"score": 0.004038183610525504, "phrase": "potential_exogenous_or_endogenous_changes"}, {"score": 0.003782174375003052, "phrase": "engineered_systems"}, {"score": 0.0036304470230058413, "phrase": "engineered_system"}, {"score": 0.0031327496009959464, "phrase": "endogenous_changes"}, {"score": 0.003069230909006614, "phrase": "unintended_interactions"}, {"score": 0.002970260970134645, "phrase": "new_-ility"}, {"score": 0.002480154140902474, "phrase": "dynamic_contexts"}, {"score": 0.0023903140267755576, "phrase": "unintentional_changes"}, {"score": 0.002322689143237591, "phrase": "allowable_architecture-defined_instances"}, {"score": 0.002275557501858879, "phrase": "allowable_changes"}, {"score": 0.002220257443705344, "phrase": "additional_validation"}, {"score": 0.0021049977753042253, "phrase": "diverse_set"}], "paper_keywords": ["Pliability", " reliability", " resilience", " survivability", " system architecting", " system engineering", " systems of systems (SoSs)"], "paper_abstract": "As systems become more complex and have longer lifespans, they will likely encounter contextual variation or be themselves subject to change. Systems need to not only be feasible but viable as well. That is, they need to be able to continue to provide value in spite of any potential exogenous or endogenous changes. Viability has been defined for other domains, but it has not been defined for engineered systems. This paper defines what it means for an engineered system to be viable and shows that it is related to, but different from, other existing \"-ilities\" such as survivability and reliability. This paper also addresses the need to ensure that endogenous changes do not inadvertently cause unintended interactions that harm the system overall. A new -ility, i.e., pliability, is introduced, which specifies the limits on how a system can change, without \"breaking\" or violating an architecture that was intended and validated. Like changeability, pliability increases robustness by allowing systems to voluntarily change in response to dynamic contexts and increases survivability by increasing the likelihood that unintentional changes are still within the set of allowable architecture-defined instances. It also distinguishes allowable changes from those that would require additional validation, reducing the effort required to get those changes approved by a diverse set of stakeholders.", "paper_title": "Pliability and Viable Systems: Maintaining Value Under Changing Conditions", "paper_id": "WOS:000365406200007"}