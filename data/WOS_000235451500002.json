{"auto_keywords": [{"score": 0.03635422702036353, "phrase": "mchec_problem"}, {"score": 0.00481495049065317, "phrase": "minimum_congestion_hypergraph"}, {"score": 0.003872414709826833, "phrase": "maximum_congestion"}, {"score": 0.003798654583736764, "phrase": "maximum_number"}, {"score": 0.0036553070575015344, "phrase": "single_edge"}, {"score": 0.0033200826267264383, "phrase": "communication_congestions"}, {"score": 0.0032777653153451265, "phrase": "computer_networks"}, {"score": 0.0032359856233193504, "phrase": "parallel_computing"}, {"score": 0.0031344829021480534, "phrase": "np"}, {"score": 0.0026865721000905235, "phrase": "optimal_time"}, {"score": 0.0025195550121331367, "phrase": "n_nodes"}, {"score": 0.0023178219772486868, "phrase": "optimal_congestion_l"}], "paper_keywords": ["hypergraph embedding", " approximation algorithms", " communication on rings", " edge congestion minimization"], "paper_abstract": "The Minimum Congestion Hypergraph Embedding in a Cycle (MCHEC) problem is to embed the hyperedges of a hypergraph as paths in a cycle with the same node set such that the maximum congestion (the maximum number of paths that use any single edge in the cycle) is minimized. The MCHEC problem has many applications, including optimizing communication congestions in computer networks and parallel computing. The problem is NP-hard. In this paper, we give a 1.8-approximation algorithm for the MCHEC problem. This improves the previous 2-approximation results. Our algorithm has the optimal time complexity O(mn) for a hypergraph with m hyperedges and n nodes. We also propose an algorithm which finds an embedding with the optimal congestion L* for the MCHEC problem in O(n(nL*)(L*)) time. This improves the previous O((mn)(L*+1)) time algorithm.", "paper_title": "Efficient algorithms for minimum congestion hypergraph embedding in a cycle", "paper_id": "WOS:000235451500002"}