{"auto_keywords": [{"score": 0.03513098241857269, "phrase": "virtual_pivots"}, {"score": 0.03237342927501384, "phrase": "new_method"}, {"score": 0.00481495049065317, "phrase": "nearest_neighbors"}, {"score": 0.004764542405129454, "phrase": "biological_databases"}, {"score": 0.004665296491645837, "phrase": "modern_biological_applications"}, {"score": 0.004568108391981922, "phrase": "similarity_comparison"}, {"score": 0.004265953661191515, "phrase": "whole_genome_pairwise_alignment"}, {"score": 0.0040047396607954325, "phrase": "closest_neighboring_objects"}, {"score": 0.0039006600544599537, "phrase": "newly_obtained_sequence"}, {"score": 0.003799275066001196, "phrase": "timely_hints"}, {"score": 0.0036043137580229873, "phrase": "substantial_speedup_technique"}, {"score": 0.0035477930970463432, "phrase": "well-studied_k-nearest_neighbor"}, {"score": 0.0033656930865509547, "phrase": "novel_concepts"}, {"score": 0.0032954888655173666, "phrase": "partial_pivots"}, {"score": 0.003209782650616367, "phrase": "significant_number"}, {"score": 0.0031594291695784286, "phrase": "expensive_distance_computations"}, {"score": 0.0028432828877281388, "phrase": "increasing_pruning_ability"}, {"score": 0.0027258422018680453, "phrase": "database_preprocessing_effort"}, {"score": 0.002640947693258573, "phrase": "second_best_method"}, {"score": 0.0023516220408891795, "phrase": "omni"}, {"score": 0.002326938965568362, "phrase": "sa-tree"}, {"score": 0.0022904032758108775, "phrase": "laesa."}], "paper_keywords": ["Nearest neighbor search", " metric space", " triangle inequality pruning", " virtual pivot", " partial pivot", " HIV-1 computational genotyping"], "paper_abstract": "Modern biological applications usually involve the similarity comparison between two objects, which is often computationally very expensive, such as whole genome pairwise alignment and protein 3D structure alignment. Nevertheless, being able to quickly identify the closest neighboring objects from very large databases for a newly obtained sequence or structure can provide timely hints to its functions and more. This paper presents a substantial speedup technique for the well-studied k-nearest neighbor (k-nn) search, based on novel concepts of virtual pivots and partial pivots, such that a significant number of the expensive distance computations can be avoided. The new method is able to dynamically locate virtual pivots, according to the query, with increasing pruning ability. Using the same or less amount of database preprocessing effort, the new method outperformed the second best method by using no more than 40 percent distance computations per query, on a database of 10,000 gene sequences, compared to several best known k-nn search methods including M-Tree, OMNI, SA-Tree, and LAESA. We demonstrated the use of this method on two biological sequence data sets, one of which is for HIV-1 viral strain computational genotyping.", "paper_title": "Finding the Nearest Neighbors in Biological Databases Using Less Distance Computations", "paper_id": "WOS:000283559100011"}