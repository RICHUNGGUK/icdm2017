{"auto_keywords": [{"score": 0.04959913342990779, "phrase": "top-k_pairs"}, {"score": 0.01300485584269887, "phrase": "top-k_objects_queries"}, {"score": 0.008411432095789451, "phrase": "lower_bound_cost"}, {"score": 0.00481495049065317, "phrase": "generic_framework"}, {"score": 0.004578382275810468, "phrase": "sliding_windows"}, {"score": 0.0044870272550540415, "phrase": "top-k_objects"}, {"score": 0.004397487039229447, "phrase": "significant_attention"}, {"score": 0.004331501320993783, "phrase": "research_community"}, {"score": 0.004139401327448807, "phrase": "first_approach"}, {"score": 0.004056769841308405, "phrase": "broad_class"}, {"score": 0.0038379074449947067, "phrase": "multiple_top-k_queries"}, {"score": 0.0036676174658755683, "phrase": "different_scoring_function"}, {"score": 0.003417565253539315, "phrase": "sliding_window"}, {"score": 0.003233075944817365, "phrase": "arbitrarily_complex_scoring_functions"}, {"score": 0.0031845067058084583, "phrase": "out-of-order_data_streams"}, {"score": 0.0028933521924166287, "phrase": "efficient_techniques"}, {"score": 0.0028498718992429825, "phrase": "k-skyband_maintenance"}, {"score": 0.0027370835853738626, "phrase": "detailed_complexity_analysis"}, {"score": 0.0026688629249775925, "phrase": "expected_cost"}, {"score": 0.002524688179363081, "phrase": "top-k_pairs_queries"}, {"score": 0.0023642842046859274, "phrase": "specially_designed_supreme_algorithm"}], "paper_keywords": ["Top-k pairs", " top-k objects", " sliding windows", " data streams", " top-k queries"], "paper_abstract": "Top-k pairs and top-k objects queries have received significant attention by the research community. In this paper, we present the first approach to answer a broad class of top-k pairs and top-k objects queries over sliding windows. Our framework handles multiple top-k queries and each query is allowed to use a different scoring function, a different value of k, and a different size of the sliding window. Furthermore, the framework allows the users to define arbitrarily complex scoring functions and supports out-of-order data streams. For all the queries that use the same scoring function, we need to maintain only one K-skyband. We present efficient techniques for the K-skyband maintenance and query answering. We conduct a detailed complexity analysis and show that the expected cost of our approach is reasonably close to the lower bound cost. For top-k pairs queries, we demonstrate the efficiency of our approach by comparing it with a specially designed supreme algorithm that assumes the existence of an oracle and meets the lower bound cost. For top-k objects queries, our experimental results demonstrate the superiority of our algorithm over the state-of-the-art algorithm.", "paper_title": "A Generic Framework for Top-k Pairs and Top-k Objects Queries over Sliding Windows", "paper_id": "WOS:000340205000005"}