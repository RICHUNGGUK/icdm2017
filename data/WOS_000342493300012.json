{"auto_keywords": [{"score": 0.04970903037225392, "phrase": "coloured_petri_nets"}, {"score": 0.008890873138824524, "phrase": "qvt-r_specifications"}, {"score": 0.00481495049065317, "phrase": "qvt-relations_transformations"}, {"score": 0.0046859752697029355, "phrase": "standard_language"}, {"score": 0.004613827786196257, "phrase": "omg"}, {"score": 0.004560438999891081, "phrase": "model-to-model_transformations"}, {"score": 0.004438250823243621, "phrase": "qvt"}, {"score": 0.004122781047853192, "phrase": "scarce_tool_support"}, {"score": 0.003516079377293321, "phrase": "qvt-r."}, {"score": 0.003329994649432498, "phrase": "qvt-r"}, {"score": 0.0031906984691667246, "phrase": "useful_techniques"}, {"score": 0.0031050953733360825, "phrase": "relation_conflicts"}, {"score": 0.002963640433319524, "phrase": "target_model"}, {"score": 0.002828611294209297, "phrase": "starting_model"}, {"score": 0.0025766822940260963, "phrase": "model_matching"}, {"score": 0.0025567271683947547, "phrase": "model_comparison"}, {"score": 0.0024977819584875573, "phrase": "original_standard"}, {"score": 0.0022227806435520764, "phrase": "tool_chain"}, {"score": 0.002197017212090641, "phrase": "colouring"}, {"score": 0.0021214346747442363, "phrase": "input_format"}, {"score": 0.0021049977753042253, "phrase": "cpntools"}], "paper_keywords": ["Model-driven engineering", " Model-to-model transformations", " QVT-relations", " Coloured Petri nets", " Validation and verification"], "paper_abstract": "QVT is the standard language sponsored by the OMG to specify model-to-model transformations. It includes three different languages, being QVT-relations (QVT-R) the one with higher-level of abstraction. Unfortunately, there is scarce tool support for it nowadays, with incompatibilities and disagreements between the few tools implementing it, and lacking support for the analysis and verification of transformations. Part of this situation is due to the fact that the standard provides only a semi-formal semantics for QVT-R. In order to alleviate this situation, this paper provides a semantics for QVT-R through its compilation into coloured Petri nets. The theory of coloured Petri nets provides useful techniques to analyse transformations (e.g. detecting relation conflicts, or checking whether certain structures are generated or not in the target model) as well as to determine their confluence and termination given a starting model. Our semantics is flexible enough to permit the use of QVT-R specifications not only for transformation and check-only scenarios, but also for model matching and model comparison, not covered in the original standard. As a proof of concept, we report on the use of CPNTools for the execution, debugging, verification and validation of transformations, and on a tool chain (named Colouring) to transform QVT-R specifications and their input models into the input format of CPNTools, as well as to export and visualize the transformation results back as models.", "paper_title": "Colouring: execution, debug and analysis of QVT-relations transformations through coloured Petri nets", "paper_id": "WOS:000342493300012"}