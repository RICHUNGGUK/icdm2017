{"auto_keywords": [{"score": 0.047302204764271695, "phrase": "multiple_characters"}, {"score": 0.0307662036024257, "phrase": "multi-stage_architecture"}, {"score": 0.00481495049065317, "phrase": "string_matching_engine"}, {"score": 0.004684157900507474, "phrase": "string-matching_engine"}, {"score": 0.004253618550301311, "phrase": "matching_engine"}, {"score": 0.0037921662574137535, "phrase": "hybrid_finite_automaton"}, {"score": 0.003689053436223376, "phrase": "deterministic_and_nondeterministic_finite_automaton"}, {"score": 0.003655314666912829, "phrase": "nfa"}, {"score": 0.0036219086497129723, "phrase": "dfa"}, {"score": 0.0034911335714333507, "phrase": "aho-corasick_algorithm"}, {"score": 0.003349670229755675, "phrase": "favorable_space_utilization"}, {"score": 0.0032886455096627324, "phrase": "presented_approach"}, {"score": 0.003213920601037463, "phrase": "multi-character_transitions"}, {"score": 0.002851790448644913, "phrase": "hybrid_fa."}, {"score": 0.002748775748298028, "phrase": "configurable_features"}, {"score": 0.0025537472239953807, "phrase": "experimental_results"}, {"score": 0.002286781334850213, "phrase": "configurable_architecture"}, {"score": 0.00226583335721762, "phrase": "two-stage_pipelines"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["String matching", " Deterministic and nondeterministic finite automaton", " Aho-Corasick algorithm", " Network intrusion detection system"], "paper_abstract": "The throughput of a string-matching engine can be multiplied up by inspecting multiple characters in parallel. However, the space that is required to implement a matching engine that can process multiple characters in every cycle grows dramatically with the number of characters to be processed in parallel. This paper presents a hybrid finite automaton (FA) that has deterministic and nondeterministic finite automaton (NFA and DFA) parts and is based on the Aho-Corasick algorithm, for inspecting multiple characters in parallel while maintaining favorable space utilization. In the presented approach, the number of multi-character transitions increases almost linearly with respect to the number of characters to be inspected in parallel. This paper also proposes a multi-stage architecture for implementing the hybrid FA. Since this multi-stage architecture has deterministic stages, configurable features can be introduced into it for processing various keyword sets by simply updating the configuration. The experimental results of the implementation of the multi-stage architecture on FPGAs for 8-character transitions reveal a 4.3 Gbps throughput with a 67 MHz clock, and the results obtained when the configurable architecture with two-stage pipelines was implemented in ASICs reveal a 7.9 Gbps throughput with a 123 MHz clock. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A hybrid multiple-character transition finite-automaton for string matching engine", "paper_id": "WOS:000352173800007"}