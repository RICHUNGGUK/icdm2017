{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "condor"}, {"score": 0.008474823971752577, "phrase": "design_space"}, {"score": 0.004761494044422926, "phrase": "better_topologies_through_declarative_design"}, {"score": 0.004579005794486596, "phrase": "multipath_datacenter_networks"}, {"score": 0.00428222231579898, "phrase": "network_architects"}, {"score": 0.0034245614958572012, "phrase": "topology_description_language"}, {"score": 0.003220315882881027, "phrase": "network_structures"}, {"score": 0.0031315358193567708, "phrase": "constraint-based_synthesis"}, {"score": 0.00306227185008558, "phrase": "candidate_topologies"}, {"score": 0.0029447150254434842, "phrase": "multiple_criteria"}, {"score": 0.0028316582436089064, "phrase": "concise_descriptions"}, {"score": 0.0027229304123434707, "phrase": "bcube"}, {"score": 0.002677616832914163, "phrase": "dcell"}, {"score": 0.0025892330566358503, "phrase": "known_and_novel_variants"}, {"score": 0.002531933388815139, "phrase": "simple_changes"}, {"score": 0.0024897902536499005, "phrase": "tdl_file"}, {"score": 0.0023941575109692336, "phrase": "large_topologies"}, {"score": 0.0022261705957258506, "phrase": "daunting_task"}, {"score": 0.002189105604712615, "phrase": "multi-phase_network_expansions"}, {"score": 0.0021049977753042253, "phrase": "live_networks"}], "paper_keywords": ["Topology design", " expandable topologies", " SLO compliance"], "paper_abstract": "The design space for large, multipath datacenter networks is large and complex, and no one design fits all purposes. Network architects must trade off many criteria to design cost-effective, reliable, and maintainable networks, and typically cannot explore much of the design space. We present Condor, our approach to enabling a rapid, efficient design cycle. Condor allows architects to express their requirements as constraints via a Topology Description Language (TDL), rather than having to directly specify network structures. Condor then uses constraint-based synthesis to rapidly generate candidate topologies, which can be analyzed against multiple criteria. We show that TDL supports concise descriptions of topologies such as fat-trees, BCube, and DCell; that we can generate known and novel variants of fat-trees with simple changes to a TDL file; and that we can synthesize large topologies in tens of seconds. We also show that Condor supports the daunting task of designing multi-phase network expansions that can be carried out on live networks.", "paper_title": "Condor: Better Topologies Through Declarative Design", "paper_id": "WOS:000370556200066"}