{"auto_keywords": [{"score": 0.03627829826826438, "phrase": "system_deployment"}, {"score": 0.011170141046166206, "phrase": "hardware_resources"}, {"score": 0.008466372818702064, "phrase": "component_dependence"}, {"score": 0.008387100877258186, "phrase": "host_node_dependence"}, {"score": 0.007491367215318382, "phrase": "greedy_deploy_algorithm"}, {"score": 0.00481495049065317, "phrase": "reliability_analysis"}, {"score": 0.0047472380621488616, "phrase": "based_software_deployment_with_consideration"}, {"score": 0.0047026237903774895, "phrase": "system_deployment._software_architecture"}, {"score": 0.004485735417293941, "phrase": "effective_abstraction"}, {"score": 0.0043194180167921165, "phrase": "complex_software_systems"}, {"score": 0.0038746849003761024, "phrase": "based_software_deployment_models"}, {"score": 0.003766369160795001, "phrase": "system_deployments"}, {"score": 0.003643807817480753, "phrase": "architecture-based_reliability_estimation"}, {"score": 0.003299460925313939, "phrase": "new_approach"}, {"score": 0.0032529910932231924, "phrase": "system_reliability"}, {"score": 0.0032223742018434856, "phrase": "architectural_level"}, {"score": 0.0028766278519176355, "phrase": "possible_restrictions"}, {"score": 0.0028495431343111897, "phrase": "component_location"}, {"score": 0.002769805263310232, "phrase": "fully_use"}, {"score": 0.0026922926476971453, "phrase": "multi-dimension_factors"}, {"score": 0.0026045914281028473, "phrase": "degree_matrices"}, {"score": 0.002519739850807611, "phrase": "approximate_algorithm"}, {"score": 0.0024960069794216977, "phrase": "greedy_deploy"}, {"score": 0.002449208093757498, "phrase": "greedy_algorithm"}, {"score": 0.0022280223816618736, "phrase": "software_components"}, {"score": 0.0022070310530794097, "phrase": "host_nodes"}, {"score": 0.002125020720324262, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "adaptive_greedy_algorithm"}], "paper_keywords": ["software architecture", " software deployment", " system reliability", " component", " host node"], "paper_abstract": "Software architecture (SA) has been widely advocated as an effective abstraction for modeling, implementing, and evolving complex software systems such as those in distributed, decentralized, heterogeneous and mobile environments. There are two important facets related to this domain: software deployment and reliability. SA based software deployment models help to analyze reliability of system deployments. Though there exist many approaches for architecture-based reliability estimation, little work has been done in incorporating the influence of system deployment and hardware resources. In this paper, a new approach of estimating system reliability at architectural level is proposed. The approach incorporates the influence of system deployment and hardware resources. Additionally, there are many factors influencing system deployment, such as possible restrictions on component location. In order to make fully use of these factors, the multi-dimension factors on system deployment are translated into degree matrices of component dependence and host node dependence. An approximate algorithm, Greedy Deploy algorithm based on greedy algorithm is presented. On the basis of matrices of component dependence and host node dependence, the Greedy_Deploy algorithm is used to deploy software components on host nodes. In the evaluation, Greedy_Deploy algorithm shows better performance than adaptive greedy algorithm.", "paper_title": "RELIABILITY ANALYSIS OF SA BASED SOFTWARE DEPLOYMENT WITH CONSIDERATION OF SYSTEM DEPLOYMENT", "paper_id": "WOS:000294522200009"}