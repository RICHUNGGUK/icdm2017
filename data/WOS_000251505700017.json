{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "treesnatcher"}, {"score": 0.00464976086880886, "phrase": "gui-driven_java_application"}, {"score": 0.004490212943845175, "phrase": "semi-automatic_recognition"}, {"score": 0.004336115760817672, "phrase": "phylogenetic_trees"}, {"score": 0.004236321075918639, "phrase": "pixel_images"}, {"score": 0.003950453462399077, "phrase": "image_file"}, {"score": 0.0030572112793962004, "phrase": "multiple-stage_process"}, {"score": 0.002917931350071647, "phrase": "image_analysis"}, {"score": 0.0026272523687965615, "phrase": "newick_tree_code"}, {"score": 0.002507511169156787, "phrase": "tree_structure"}, {"score": 0.002421291757425244, "phrase": "branch_lengths"}], "paper_keywords": [""], "paper_abstract": "TreeSnatcher is a GUI-driven JAVA application for the semi-automatic recognition of multifurcating phylogenetic trees in pixel images. The program accepts an image file as input and analyzes the topology and the metrics of a tree depicted. The analysis is carried out in a multiple-stage process using algorithms from image analysis. In the end, TreeSnatcher produces a Newick tree code that represents the tree structure optionally including branch lengths. TreeSnatcher can process trees with 100 leaves or more in a few seconds.", "paper_title": "TreeSnatcher: coding trees from images", "paper_id": "WOS:000251505700017"}