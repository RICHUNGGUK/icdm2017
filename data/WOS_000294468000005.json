{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "distributed_systems"}, {"score": 0.004746263721902201, "phrase": "local-global_predicates"}, {"score": 0.0041703614123283165, "phrase": "state_space"}, {"score": 0.0036640806940633373, "phrase": "small_number"}, {"score": 0.0032893028281789287, "phrase": "proof_methodology"}, {"score": 0.0031730701021262155, "phrase": "global_properties"}, {"score": 0.002952745241052452, "phrase": "local_properties"}, {"score": 0.0026889720516076205, "phrase": "concrete_examples"}, {"score": 0.0025938977569302177, "phrase": "pvs_library"}, {"score": 0.0021051140664200304, "phrase": "java"}], "paper_keywords": ["Concurrency", " Convergence", " Local-global", " Stability", " Theorem prover", " Verification"], "paper_abstract": "This paper describes a methodology for developing and verifying a class of distributed systems in which the state space may be discrete or continuous. Our focus is on systems where changes are local in that a small number of components change state while the remainder of the system is unchanged. A proof methodology is developed that ensures global properties, such as invariants and convergence, by guaranteeing local properties within subsystems. This methodology is used to prove the correctness of concrete examples. We present a PVS library of theorems and proofs that can be used to reduce the work required to develop and verify programs in this class. A transformation of these libraries to Java is also outlined.", "paper_title": "Verification of distributed systems with local-global predicates", "paper_id": "WOS:000294468000005"}