{"auto_keywords": [{"score": 0.03774156611827689, "phrase": "learning-to-rank_approach"}, {"score": 0.015719716506582538, "phrase": "software_defect_prediction"}, {"score": 0.013623151492350234, "phrase": "software_module"}, {"score": 0.010118796512593899, "phrase": "model_performance_measure"}, {"score": 0.004644014990871423, "phrase": "testing_resources"}, {"score": 0.0045726187330434025, "phrase": "ranking_software_modules"}, {"score": 0.004456044928556639, "phrase": "existing_software_defect_prediction_models"}, {"score": 0.004039423410198574, "phrase": "accurate_order"}, {"score": 0.003855849747095327, "phrase": "exact_number"}, {"score": 0.0036996627006622975, "phrase": "noisy_data"}, {"score": 0.003531474887552889, "phrase": "software_defect_prediction_models"}, {"score": 0.003441352119167824, "phrase": "ranking_performance"}, {"score": 0.0030396665931462, "phrase": "software_defect_prediction_model_construction"}, {"score": 0.0028864239961184364, "phrase": "novel_application"}, {"score": 0.0028127163745564777, "phrase": "real-world_data_sets"}, {"score": 0.0026570998719084153, "phrase": "comprehensive_evaluation"}, {"score": 0.0025892330566358503, "phrase": "learning-to-rank_method"}, {"score": 0.002420762293555924, "phrase": "software_modules"}, {"score": 0.0023711591828229736, "phrase": "predicted_number"}, {"score": 0.0021049977753042253, "phrase": "ranking_task"}], "paper_keywords": ["Software defect prediction", " learning-to-rank", " software metrics", " count models", " metric selection"], "paper_abstract": "Software defect prediction can help to allocate testing resources efficiently through ranking software modules according to their defects. Existing software defect prediction models that are optimized to predict explicitly the number of defects in a software module might fail to give an accurate order because it is very difficult to predict the exact number of defects in a software module due to noisy data. This paper introduces a learning-to-rank approach to construct software defect prediction models by directly optimizing the ranking performance. In this paper, we build on our previous work, and further study whether the idea of directly optimizing the model performance measure can benefit software defect prediction model construction. The work includes two aspects: one is a novel application of the learning-to-rank approach to real-world data sets for software defect prediction, and the other is a comprehensive evaluation and comparison of the learning-to-rank method against other algorithms that have been used for predicting the order of software modules according to the predicted number of defects. Our empirical studies demonstrate the effectiveness of directly optimizing the model performance measure for the learning-to-rank approach to construct defect prediction models for the ranking task.", "paper_title": "A Learning-to-Rank Approach to Software Defect Prediction", "paper_id": "WOS:000350865900020"}