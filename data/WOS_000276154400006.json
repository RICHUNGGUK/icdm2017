{"auto_keywords": [{"score": 0.027111081855831533, "phrase": "hmsc"}, {"score": 0.00481495049065317, "phrase": "message_sequence_charts._message_sequence_charts"}, {"score": 0.004566954456805558, "phrase": "message_sequence_charts"}, {"score": 0.00424659225577246, "phrase": "message_passing_protocols"}, {"score": 0.0041084684278314305, "phrase": "allen's_logic"}, {"score": 0.00400119808662365, "phrase": "temporal_order"}, {"score": 0.0033465923623290034, "phrase": "different_nodes"}, {"score": 0.0032807941194429235, "phrase": "hmsc."}, {"score": 0.0031950646670695546, "phrase": "algorithmic_properties"}, {"score": 0.002689746491842271, "phrase": "polynomial-time_computable"}, {"score": 0.0021049977753042253, "phrase": "worst-case_discord"}], "paper_keywords": ["Discord", " message sequence charts", " order discrepancies"], "paper_abstract": "Message Sequence Charts (MSCs) and High-level Message Sequence Charts (HMSCs) are formalisms used to describe scenarios of message passing protocols. We propose using Allen's logic to represent the temporal order of the messages. We introduce the concept of discord to quantify the discrepancies between the intuition and the semantics of the ordering between messages in different nodes of an HMSC. We study the algorithmic properties of this concept: we show that while the discord of a pair of messages is hard to compute in general, the problem becomes polynomial-time computable if the number of nodes of the HMSC or the number of processes is constant. Moreover, for a given HMSC, it is always computationally easy to identify a pair of messages that exhibits the worst-case discord and compute the discord of this pair.", "paper_title": "QUANTIFYING THE DISCORD: ORDER DISCREPANCIES IN MESSAGE SEQUENCE CHARTS", "paper_id": "WOS:000276154400006"}