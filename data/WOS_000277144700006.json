{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_mining_techniques"}, {"score": 0.047975388252729324, "phrase": "defective_modules"}, {"score": 0.0393378573740974, "phrase": "high_probability"}, {"score": 0.004521566043596533, "phrase": "software_engineering"}, {"score": 0.0033011569787033297, "phrase": "feature_selection"}, {"score": 0.0023451553255837317, "phrase": "unbalanced_datasets"}, {"score": 0.0022419349154472806, "phrase": "non-defective_samples"}, {"score": 0.0021049977753042253, "phrase": "defective_ones"}], "paper_keywords": ["Defect detection and defect prediction in software modules", " data mining"], "paper_abstract": "The characterization of defective modules in software engineering remains a challenge. In this work, we use data mining techniques to search for rules that indicate modules with a high probability of being defective. Using datasets from the PROMISE repository1, we first applied feature selection to work only with those attributes from the datasets capable of predicting defective modules. Then, a genetic algorithm search for rules characterising subgroups with a high probability of being defective. This algorithm overcomes the problem of unbalanced datasets where the number of non-defective samples in the dataset highly outnumbers the defective ones.", "paper_title": "Finding Defective Software Modules by Means of Data Mining Techniques", "paper_id": "WOS:000277144700006"}