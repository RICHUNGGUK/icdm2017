{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mapreduce_implementations"}, {"score": 0.04565647474624859, "phrase": "scientific_applications"}, {"score": 0.004768649568826951, "phrase": "different_application_scenarios"}, {"score": 0.004700027722284931, "phrase": "mapreduce_paradigm"}, {"score": 0.004632388761885302, "phrase": "scalable_model"}, {"score": 0.004587835274176236, "phrase": "large_scale_data_intensive_computing"}, {"score": 0.004543708337879809, "phrase": "associated_fault-tolerance"}, {"score": 0.0041051328120736575, "phrase": "key_tenets"}, {"score": 0.003799509133780117, "phrase": "specific_features"}, {"score": 0.0037087324991876727, "phrase": "right_decisions"}, {"score": 0.0036730297909962142, "phrase": "hpc_application"}, {"score": 0.0035336109352157763, "phrase": "complex_dependences"}, {"score": 0.0034995881411519925, "phrase": "mapreduce_features"}, {"score": 0.003131023880006021, "phrase": "wide_range"}, {"score": 0.003100865267124765, "phrase": "representative_use_cases"}, {"score": 0.002869793011316547, "phrase": "current_implementation_landscape"}, {"score": 0.0025673856614952854, "phrase": "widely_used_hadoop_implementation"}, {"score": 0.0023417010799384524, "phrase": "lemo-mr"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed Computing", " MapReduce", " Hadoop", " Benchmarking"], "paper_abstract": "The MapReduce paradigm provides a scalable model for large scale data intensive computing and associated fault-tolerance. Data volumes generated and processed by scientific applications are growing rapidly. Several MapReduce implementations, with various degrees of conformance to the key tenets of the model, are available today. Each of these implementations is optimized for specific features. To make the right decisions, HPC application and middleware developers must thus understand the complex dependences between MapReduce features and their application. We present a set of benchmarks for quantifying, comparing, and contrasting the performance of MapReduce implementations under a wide range of representative use cases. To demonstrate the utility of the benchmarks and to provide a snapshot of the current implementation landscape, we report the performance of three different MapReduce implementations, and draw conclusions about their current performance characteristics. The three implementations we chose for evaluation are the widely used Hadoop implementation, Twister, which has been widely discussed in the literature in the context of scientific applications, and LEMO-MR which is our own implementation. We present the performance of these three implementations and draw conclusions about their performance characteristics. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Benchmarking MapReduce implementations under different application scenarios", "paper_id": "WOS:000336770700034"}