{"auto_keywords": [{"score": 0.04828158744400137, "phrase": "temporal_business_rules"}, {"score": 0.012241021415284823, "phrase": "process_model"}, {"score": 0.009238972989828094, "phrase": "process_models"}, {"score": 0.00481495049065317, "phrase": "service_composition_models"}, {"score": 0.004563880494020726, "phrase": "transformational_approaches"}, {"score": 0.004460309246062286, "phrase": "design_and_implementation_models"}, {"score": 0.004163427731140163, "phrase": "software_development"}, {"score": 0.00385658790017119, "phrase": "associated_techniques"}, {"score": 0.0036553070575015344, "phrase": "service_composition"}, {"score": 0.00346449481422526, "phrase": "dedicated_techniques"}, {"score": 0.0032836104153151973, "phrase": "structure_identification"}, {"score": 0.0032336801561165113, "phrase": "parallel_structure_identification"}, {"score": 0.002949598537993663, "phrase": "semantics-equivalent_finite_state_automata"}, {"score": 0.002731971103291716, "phrase": "prescribed_behavioral_constraints"}, {"score": 0.0025892330566358503, "phrase": "domain_knowledge"}, {"score": 0.002453934333239467, "phrase": "executable_service_composition_program"}, {"score": 0.0022382002476510573, "phrase": "running_example"}, {"score": 0.0021872912745910127, "phrase": "e-business_domain"}], "paper_keywords": ["service composition", " composition synthesis", " behavioral model", " temporal patterns"], "paper_abstract": "Transformational approaches to generating design and implementation models from requirements can bring effectiveness and quality to software development. In this paper we present a framework and associated techniques to generate the process model of a service composition from a set of temporal business rules. Dedicated techniques including path-finding, branching structure identification and parallel structure identification are used for semi-automatically synthesizing the process model from the semantics-equivalent Finite State Automata of the rules. These process models naturally satisfy the prescribed behavioral constraints of the rules. With the domain knowledge encoded in the temporal business rules, an executable service composition program, e.g., a BPEL program, can be further generated from the process models. A running example in the e-business domain is used for illustrating our approach throughout this paper.", "paper_title": "Synthesizing Service Composition Models on the Basis of Temporal Business Rules", "paper_id": "WOS:000261179300001"}