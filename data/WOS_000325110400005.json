{"auto_keywords": [{"score": 0.05007843377609579, "phrase": "return-oriented_programming"}, {"score": 0.047792824767915534, "phrase": "rop"}, {"score": 0.013861134055515185, "phrase": "short_instruction_sequences"}, {"score": 0.0047448515702010734, "phrase": "virtualization_techniques"}, {"score": 0.004496402246090618, "phrase": "great_attention"}, {"score": 0.00413767314434795, "phrase": "victim_program's_address_space"}, {"score": 0.003901754272977278, "phrase": "state-of-the-art_code_integrity_check_mechanisms"}, {"score": 0.003715425273229361, "phrase": "virtualization_technologies"}, {"score": 0.0035553221885904467, "phrase": "hypercropii"}, {"score": 0.0033361232750221863, "phrase": "rop_attackers"}, {"score": 0.002995427206425849, "phrase": "key_characteristic"}, {"score": 0.002729246328390722, "phrase": "program's_libraries"}, {"score": 0.002535876002754739, "phrase": "potential_rop_attack"}, {"score": 0.002379379676378223, "phrase": "proof-of-concept_system"}, {"score": 0.002310437833441181, "phrase": "xen"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["return-oriented programming", " hypervisor-based security", " hardware-assisted virtualization"], "paper_abstract": "Over the past few years, return-oriented programming (ROP) has drawn great attention of both academia and industry. Because of its Turing completeness, ROP reuses short instruction sequences already present in the victim program's address space to perform arbitrary computation. Hence, it can successfully bypass state-of-the-art code integrity check mechanisms. In this paper, we look into using virtualization technologies to defeat return-oriented programming. We design and implement HyperCropII, a virtualization-based automatic runtime approach to defend such attacks. ROP attackers extract short instruction sequences ending in ret called gadgets and craft stack content to chain these gadgets together. We observe that a key characteristic of ROP is to fill the stack with plenty of addresses that are within the range of the program's libraries. Accordingly, we inspect the content of the stack to see if a potential ROP attack exists and quarantine the damages for further security purposes. We have implemented a proof-of-concept system based on the open source Xen hypervisor. The evaluation results exhibit that our solution is effective and efficient. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Defending return-oriented programming based on virtualization techniques", "paper_id": "WOS:000325110400005"}