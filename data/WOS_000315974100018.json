{"auto_keywords": [{"score": 0.046750786508613744, "phrase": "gasprng"}, {"score": 0.01245459650846311, "phrase": "sprng"}, {"score": 0.01065496540988886, "phrase": "random_numbers"}, {"score": 0.00948263065671918, "phrase": "gpu"}, {"score": 0.008566400109909162, "phrase": "programming_interface"}, {"score": 0.00663667535081018, "phrase": "computational_science_applications"}, {"score": 0.00623909730805161, "phrase": "host_cpu"}, {"score": 0.006054330140528343, "phrase": "pseudorandom_numbers"}, {"score": 0.004798872838810594, "phrase": "scalable_parallel_random_number_generator_library"}, {"score": 0.004750959742844963, "phrase": "promising_technology"}, {"score": 0.004695662557535912, "phrase": "fast_and_scalable_random_number_generation"}, {"score": 0.0046177760186446575, "phrase": "scalable_parallel_random_number_generators_library"}, {"score": 0.004595007993113618, "phrase": "distributed_program"}, {"score": 0.00457200720749728, "phrase": "test_data"}, {"score": 0.004556393724279667, "phrase": "gpu_accelerated_sprng_library"}, {"score": 0.004495823675497794, "phrase": "gpu-based_high_performance_computing_systems"}, {"score": 0.0044286400018187354, "phrase": "cuda_code"}, {"score": 0.004399102320426124, "phrase": "nvidia_graphics_processing_units"}, {"score": 0.004190740266348797, "phrase": "implementation_approach"}, {"score": 0.004162782669262694, "phrase": "high_performance"}, {"score": 0.003985531376894906, "phrase": "traditional_serial_or_parallel_computers"}, {"score": 0.003945706680922084, "phrase": "tightly_coupled_programs"}, {"score": 0.003912831947045287, "phrase": "gpu."}, {"score": 0.0037587384888691645, "phrase": "different_usage_models"}, {"score": 0.0037274065975769328, "phrase": "single_gpu"}, {"score": 0.0036904299112039476, "phrase": "large_numbers"}, {"score": 0.003671663469605366, "phrase": "single_cpu_core"}, {"score": 0.0036288825833675127, "phrase": "larger_systems"}, {"score": 0.003598629227969919, "phrase": "sprng."}, {"score": 0.0035746075891407224, "phrase": "identical_streams"}, {"score": 0.003480108299476168, "phrase": "scalable_computational_science_applications"}, {"score": 0.0034571521081878196, "phrase": "program"}, {"score": 0.0034395516392203215, "phrase": "gasprng_catalogue"}, {"score": 0.003371118786972851, "phrase": "cpc_program_library"}, {"score": 0.003359845972192833, "phrase": "queen's_university"}, {"score": 0.003348610797515018, "phrase": "belfast"}, {"score": 0.0033374129251145623, "phrase": "n._ireland"}, {"score": 0.0033151291609707775, "phrase": "utk"}, {"score": 0.003293242140205668, "phrase": "multiple_copies"}, {"score": 0.0032822288825314037, "phrase": "random_number_generators"}, {"score": 0.003254856077261199, "phrase": "computational_science_application"}, {"score": 0.003095101057210817, "phrase": "cuda."}, {"score": 0.003053894781246847, "phrase": "nvidia_gpu"}, {"score": 0.002983108931762459, "phrase": "linux"}, {"score": 0.002973120121800634, "phrase": "cuda_version"}, {"score": 0.0029286243896248583, "phrase": "macos"}, {"score": 0.0029188568789271295, "phrase": "windows"}, {"score": 0.0029041918238453157, "phrase": "unix."}, {"score": 0.0028368567593956054, "phrase": "mpi_directives"}, {"score": 0.002813203528803869, "phrase": "mb"}, {"score": 0.0027525658515943985, "phrase": "data_type"}, {"score": 0.0025957508504205725, "phrase": "monte_carlo_simulations.are"}, {"score": 0.002578406321259738, "phrase": "limitless_random_numbers"}, {"score": 0.0025101765320346184, "phrase": "parallel_computational_science_applications"}, {"score": 0.0024767400260753388, "phrase": "statistically_significant_results"}, {"score": 0.0024643161985886085, "phrase": "sprng_library"}, {"score": 0.002431489080631481, "phrase": "significant_computational_cost"}, {"score": 0.002419291690500093, "phrase": "gasprng_library"}, {"score": 0.002391067964886602, "phrase": "independent_streams"}, {"score": 0.002375087848055933, "phrase": "graphical_processing_units"}, {"score": 0.002187766748359461, "phrase": "software_code"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["GPGPU", " Pseudorandom number generator", " SPRNG", " Monte Carlo"], "paper_abstract": "Graphics processors represent a promising technology for accelerating computational science applications. Many computational science applications require fast and scalable random number generation with good statistical properties, so they use the Scalable Parallel Random Number Generators library (SPRNG). We present the GPU Accelerated SPRNG library (GASPRNG) to accelerate SPRNG in GPU-based high performance computing systems. GASPRNG includes code for a host CPU and CUDA code for execution on NVIDIA graphics processing units (CPUs) along with a programming interface to support various usage models for pseudorandom numbers and computational science applications executing on the CPU, GPU, or both. This paper describes the implementation approach used to produce high performance and also describes how to use the programming interface. The programming interface allows a user to be able to use GASPRNG the same way as SPRNG on traditional serial or parallel computers as well as to develop tightly coupled programs executing primarily on the GPU. We also describe how to install GASPRNG and use it. To help illustrate linking with GASPRNG, various demonstration codes are included for the different usage models. GASPRNG on a single GPU shows up to 280x speedup over SPRNG on a single CPU core and is able to scale for larger systems in the same manner as SPRNG. Because GASPRNG generates identical streams of pseudorandom numbers as SPRNG, users can be confident about the quality of GASPRNG for scalable computational science applications. Program summary Program title: GASPRNG Catalogue identifier: AEOI_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEOI_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: UTK license. No. of lines in distributed program, including test data, etc.: 167900 No. of bytes in distributed program, including test data, etc.: 1422058. Distribution format: tar.gz Programming language: C and CUDA. Computer: Any PC or workstation with NVIDIA GPU (Tested on Fermi GTX480, Tesla C1060, Tesla M2070). Operating system: Linux with CUDA version 4.0 or later. Should also run on MacOS, Windows, or UNIX. Has the code been vectorized or parallelized?: Yes. Parallelized using MPI directives. RAM: 512 MB similar to 732 MB (main memory on host CPU, depending on the data type of random numbers.) / 512 MB (GPU global memory) Classification: 4.13, 6.5. Nature of problem: Many computational science applications are able to consume large numbers of random numbers. For example, Monte Carlo simulations.are able to consume limitless random numbers for the computation as long as resources for the computing are supported. Moreover, parallel computational science applications require independent streams of random numbers to attain statistically significant results. The SPRNG library provides this capability, but at a significant computational cost. The GASPRNG library presented here accelerates the generators of independent streams of random numbers using graphical processing units (GPUs). Solution method: Multiple copies of random number generators in GPUs allow a computational science application to consume large numbers of random numbers from independent, parallel streams. GASPRNG is a random number generators library to allow a computational science application to employ multiple copies of random number generators to boost performance. Users can interface GASPRNG with software code executing on microprocessors and/or GPUs. Running time: The tests provided take a few minutes to run. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "GASPRNG: GPU accelerated scalable parallel random number generator library", "paper_id": "WOS:000315974100018"}