{"auto_keywords": [{"score": 0.046689223289569044, "phrase": "ipsched"}, {"score": 0.04609688265478669, "phrase": "aucsched"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_cpu-gpu_cluster_schedulers"}, {"score": 0.004751216062917875, "phrase": "slurm"}, {"score": 0.004299228562179176, "phrase": "widely_used_slurm_resource_manager"}, {"score": 0.003995226376780718, "phrase": "allocation_problems"}, {"score": 0.003916098498242888, "phrase": "free_cpu_cores"}, {"score": 0.0038642157757169315, "phrase": "gpu_cards"}, {"score": 0.0035908627899097407, "phrase": "objective_functions"}, {"score": 0.0034730657554172405, "phrase": "auction_based_approach"}, {"score": 0.003359119985242403, "phrase": "contiguous_blocks"}, {"score": 0.00312138530097218, "phrase": "realistic_slurm_emulation_tests"}, {"score": 0.0030595112110658675, "phrase": "effective_system_performance"}, {"score": 0.00255488432062653, "phrase": "better_utilization"}, {"score": 0.002421975107313603, "phrase": "better_waiting_time"}, {"score": 0.002389839896897424, "phrase": "slurm_backfill"}, {"score": 0.00235813005446246, "phrase": "better_fragmentation_performances"}, {"score": 0.002220551141101661, "phrase": "slurm_scheduler_plug-ins"}], "paper_keywords": ["Job scheduling", " SLURM", " Integer programming"], "paper_abstract": "We present two integer programming based heterogeneous CPU-GPU cluster schedulers, called IPSCHED and AUCSCHED, for the widely used SLURM resource manager. Our scheduler algorithms take windows of jobs and solve allocation problems in which free CPU cores and GPU cards are allocated collectively to jobs so as to maximize some objective functions. Our AUCSCHED scheduler employs an auction based approach in which bids for contiguous blocks of resources are generated for each job. We perform realistic SLURM emulation tests using the Effective System Performance (ESP) and our own synthetic workloads. Even though it is difficult to generalize, the tests roughly show that out of the three scheduling plug-ins, AUCSCHED achieves better utilization, spread and packing, IPSCHED achieves better waiting time and SLURM Backfill achieves better fragmentation performances when compared with each other. The. SLURM scheduler plug-ins that implement our algorithm are available at http://code.google.com/p/slurm-ipsched/. (c) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Integer programming based heterogeneous CPU-GPU cluster schedulers for SLURM resource manager", "paper_id": "WOS:000342481400004"}