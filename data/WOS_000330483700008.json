{"auto_keywords": [{"score": 0.049584128839210984, "phrase": "concurrent_programs"}, {"score": 0.00481495049065317, "phrase": "predictive_analysis"}, {"score": 0.004691465925553365, "phrase": "trace_redundancy"}, {"score": 0.0046429592670444945, "phrase": "predictive_trace_analysis"}, {"score": 0.004594985950070175, "phrase": "pta"}, {"score": 0.004407813106104401, "phrase": "concurrency_bugs"}, {"score": 0.004250302819248558, "phrase": "existing_pta_solutions"}, {"score": 0.004206338218873218, "phrase": "considerable_challenges"}, {"score": 0.004119762981892093, "phrase": "large_traces"}, {"score": 0.003911010373894104, "phrase": "large_percentage"}, {"score": 0.003712796038920873, "phrase": "useful_analysis_results"}, {"score": 0.0036553070575015344, "phrase": "end_user"}, {"score": 0.0032094634756436595, "phrase": "trace_redundancy_theorem"}, {"score": 0.003143341238802547, "phrase": "redundancy_criterion"}, {"score": 0.0030946423142739813, "phrase": "soundness_guarantee"}, {"score": 0.0030466955629231047, "phrase": "pta_results"}, {"score": 0.0027886573969044042, "phrase": "tracefilter"}, {"score": 0.002674885993329912, "phrase": "redundant_events"}, {"score": 0.0025657442830956017, "phrase": "general_concurrency_access_anomalies"}, {"score": 0.002448260697722081, "phrase": "popular_concurrent_benchmarks"}, {"score": 0.00239778324260337, "phrase": "real_world_large_server_programs"}, {"score": 0.0021049977753042253, "phrase": "analysis_result"}], "paper_keywords": ["Algorithms", " Performance", " Theory"], "paper_abstract": "Predictive trace analysis (PTA) of concurrent programs is powerful in finding concurrency bugs unseen in past program executions. Unfortunately, existing PTA solutions face considerable challenges in scaling to large traces. In this article, we identify that a large percentage of events in the trace are redundant for presenting useful analysis results to the end user. Removing them from the trace can significantly improve the scalability of PTA without affecting the quality of the results. We present a trace redundancy theorem that specifies a redundancy criterion and the soundness guarantee that the PTA results are preserved after removing the redundancy. Based on this criterion, we design and implement TraceFilter, an efficient algorithm that automatically removes redundant events from a trace for the PTA of general concurrency access anomalies. We evaluated TraceFilter on a set of popular concurrent benchmarks as well as real world large server programs. Our experimental results show that TraceFilter is able to significantly improve the scalability of PTA by orders of magnitude, without impairing the analysis result.", "paper_title": "Scaling Predictive Analysis of Concurrent Programs by Removing Trace Redundancy", "paper_id": "WOS:000330483700008"}