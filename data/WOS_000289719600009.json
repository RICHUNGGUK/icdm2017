{"auto_keywords": [{"score": 0.035933557609974145, "phrase": "use"}, {"score": 0.00481495049065317, "phrase": "integrated_tool_environment"}, {"score": 0.004768378525561471, "phrase": "static_analysis"}, {"score": 0.004722254884093624, "phrase": "uml_class"}, {"score": 0.004326624385772596, "phrase": "critical_properties"}, {"score": 0.004284755353695709, "phrase": "uml_models"}, {"score": 0.004246963424260718, "phrase": "uml"}, {"score": 0.004161553532799662, "phrase": "specification_environment"}, {"score": 0.003685067218455088, "phrase": "analysis_power"}, {"score": 0.0035616743422949766, "phrase": "critical_non-functional_properties"}, {"score": 0.0031383410838018953, "phrase": "model_specification_files"}, {"score": 0.0029458777184930896, "phrase": "ocl_constraints"}, {"score": 0.0029031614127920232, "phrase": "modeling_tool"}, {"score": 0.0028471655497661528, "phrase": "ibm_rational_software_architect"}, {"score": 0.002844494933620471, "phrase": "rsa"}, {"score": 0.0026986685585382347, "phrase": "model_verification"}, {"score": 0.0025829353063908256, "phrase": "manual_transformation"}, {"score": 0.0024481856932959227, "phrase": "model-level_verification"}, {"score": 0.002320449502337321, "phrase": "specification_transformation_engine"}, {"score": 0.0022101055924375725, "phrase": "automatic_tool-level_transformations"}, {"score": 0.0021049977753042253, "phrase": "eclipse-based_modeling_framework"}], "paper_keywords": ["Model Transformation", " MDA", " XMI", " OCL", " Model Analysis", " USE"], "paper_abstract": "There is a need for more rigorous analysis techniques that developers can use for verifying the critical properties in UML models. The UML-based Specification Environment (USE) tool supports verification of invariants, preconditions, and postconditions specified in the Object Constraint Language (OCL). Due to its animation and analysis power, it is useful when checking critical non-functional properties such as security policies. However, the USE requires one to specify a model using its own textual language and does not allow one to import any model specification files created by other UML modeling tools. Hence, you would create a model with OCL constraints using a modeling tool such as the IBM Rational Software Architect (RSA) and then use the USE for the model verification. This approach, however, requires a manual transformation between two different specification formats, which diminishes advantage of using tools for model-level verification. In this paper, we describe our own implementation of a specification transformation engine based on the Model-Driven Architecture (MDA) framework. Our approach currently supports automatic tool-level transformations to USE from UML modeling tools built on the Eclipse-based Modeling Framework (EMF).", "paper_title": "Toward an Integrated Tool Environment for Static Analysis of UML Class and Sequence Models", "paper_id": "WOS:000289719600009"}