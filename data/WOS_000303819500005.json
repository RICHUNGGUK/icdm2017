{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pfsql_queries"}, {"score": 0.004539005582217309, "phrase": "generalised_priority_constraint_satisfaction_problem"}, {"score": 0.004278807087784626, "phrase": "priority_queries"}, {"score": 0.004223032986655664, "phrase": "fuzzy_relational_databases"}, {"score": 0.004086744751579196, "phrase": "pfsql"}, {"score": 0.003802135020791801, "phrase": "database_independent_interpreter"}, {"score": 0.003312486229143855, "phrase": "current_paper"}, {"score": 0.0031019373572233706, "phrase": "existing_fuzzy_logic"}, {"score": 0.0028480459059007468, "phrase": "select_line"}, {"score": 0.00268452026617243, "phrase": "fuzzy_logic"}, {"score": 0.002464709648714996, "phrase": "conservative_extension"}, {"score": 0.0022480304016499605, "phrase": "pspace_containment"}], "paper_keywords": [""], "paper_abstract": "Using the concept of a generalised priority constraint satisfaction problem, we previously found a way to introduce priority queries into fuzzy relational databases. The results were PFSQL (Priority Fuzzy Structured Query Language) together with a database independent interpreter for it. In an effort to improve the performance of the resolution of PFSQL queries, the aim of the current paper is to formalise PFSQL queries by obtaining their interpretation in an existing fuzzy logic. We have found that the L Pi 1/2 logic provides sufficient elements. The SELECT line of PFSQL queries is semantically a formula of some fuzzy logic, and we show that such formulas can be naturally expressed in a conservative extension of the L Pi 1/2 logic. Furthermore, we prove a theorem that gives the PSPACE containment for the complexity of finding a model for a given L Pi 1/2 logic formula.", "paper_title": "Formalising PFSQL queries using L Pi 1/2 fuzzy logic", "paper_id": "WOS:000303819500005"}