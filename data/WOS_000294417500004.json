{"auto_keywords": [{"score": 0.047424185998726213, "phrase": "kernel_data_structures"}, {"score": 0.040462977096398095, "phrase": "noncontrol_data"}, {"score": 0.026272299455685752, "phrase": "gibraltar"}, {"score": 0.004814951205791253, "phrase": "kernel-level"}, {"score": 0.004733347359490221, "phrase": "data_structure_invariants"}, {"score": 0.004626680470601208, "phrase": "system_security"}, {"score": 0.0043953478557600565, "phrase": "malicious_goals"}, {"score": 0.0043208252177835815, "phrase": "early_rootkits"}, {"score": 0.004271843728776305, "phrase": "control_data_structures"}, {"score": 0.0041517954514423625, "phrase": "system_call_table"}, {"score": 0.004058180509184539, "phrase": "function_pointers"}, {"score": 0.00401216440036853, "phrase": "recent_work"}, {"score": 0.0037682108720193956, "phrase": "rootkit_detection"}, {"score": 0.003641433168173135, "phrase": "control_data_modifications"}, {"score": 0.0033619033669956317, "phrase": "novel_technique"}, {"score": 0.0031393948330209255, "phrase": "main_idea"}, {"score": 0.002931569771634119, "phrase": "inference_phase"}, {"score": 0.0028006988338192375, "phrase": "rootkit_detection_phase"}, {"score": 0.002690975370565776, "phrase": "data_structure_integrity"}, {"score": 0.002373276186210053, "phrase": "kernel_data_structure_invariants"}, {"score": 0.002178400923036365, "phrase": "previously_known_rootkits"}, {"score": 0.0021049977753042253, "phrase": "noncontrol_data_structures"}], "paper_keywords": ["Kernel-level rootkits", " noncontrol data attacks", " invariant inference", " static and dynamic program analysis"], "paper_abstract": "Rootkits affect system security by modifying kernel data structures to achieve a variety of malicious goals. While early rootkits modified control data structures, such as the system call table and values of function pointers, recent work has demonstrated rootkits that maliciously modify noncontrol data. Most prior techniques for rootkit detection have focused solely on detecting control data modifications and, therefore, fail to detect such rootkits. This paper presents a novel technique to detect rootkits that modify both control and noncontrol data. The main idea is to externally observe the execution of the kernel during an inference phase and hypothesize invariants on kernel data structures. A rootkit detection phase uses these invariants as specifications of data structure integrity. During this phase, violation of invariants indicates an infection. We have implemented Gibraltar, a prototype tool that infers kernel data structure invariants and uses them to detect rootkits. Experiments show that Gibraltar can effectively detect previously known rootkits, including those that modify noncontrol data structures.", "paper_title": "Detecting Kernel-Level Rootkits Using Data Structure Invariants", "paper_id": "WOS:000294417500004"}