{"auto_keywords": [{"score": 0.03934354091344149, "phrase": "reused_framework"}, {"score": 0.015401815786784666, "phrase": "software_reuse"}, {"score": 0.007560754330319318, "phrase": "change_profiles"}, {"score": 0.00481495049065317, "phrase": "reused_class_framework"}, {"score": 0.004636027593561925, "phrase": "software_productivity"}, {"score": 0.0044026610128451256, "phrase": "development_viewpoints"}, {"score": 0.004152288616186981, "phrase": "case_study"}, {"score": 0.004109600767747015, "phrase": "software_changes"}, {"score": 0.004039423410198574, "phrase": "evolution_phases"}, {"score": 0.003997891221012094, "phrase": "reused_java_class_framework"}, {"score": 0.0036427316134070007, "phrase": "change_density"}, {"score": 0.0034236045013591437, "phrase": "change_types"}, {"score": 0.003296212583539166, "phrase": "perfective_changes"}, {"score": 0.002931569771634119, "phrase": "user_needs"}, {"score": 0.002318566141177149, "phrase": "change_densities"}, {"score": 0.0021639307835832136, "phrase": "maintenance_and_evolution_phase"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software reuse", " Software change profile", " Case study", " Class framework"], "paper_abstract": "Software reuse is expected to improve software productivity and quality. Although many empirical studies have investigated the benefits and challenges of software reuse from development viewpoints, few studies have explored reuse from the perspective of maintenance. This paper reports on a case study that compares software changes during the maintenance and evolution phases of a reused Java class framework with two applications that are reusing the framework. The results reveal that: (I) The reused framework is more stable, in terms of change density, than the two applications that are reusing it. (2) The reused framework has profiles for change types that are similar to those of the applications, where perfective changes dominate. (3) The maintenance and evolution lifecycle of both the reused framework and its applications is the same: initial development, followed by a stage with extending capabilities and functionality to meet user needs, then a stage in which only minor defect repairs are made, and finally, phase-out. However, the reused framework goes faster from the stage of extending capabilities to the stage in which only minor defect repairs are made than its applications. (4) We have validated that several factors, such as are functionalities, development practice, complexity, size, and age, have affected the change densities and change profiles of the framework and applications. Thus, all these factors must be considered to predict change profiles in the maintenance and evolution phase of software. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Change profiles of a reused class framework vs. two of its applications", "paper_id": "WOS:000272372900008"}