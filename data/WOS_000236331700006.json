{"auto_keywords": [{"score": 0.030982333237418662, "phrase": "simpoint"}, {"score": 0.00481495049065317, "phrase": "architecture_simulation"}, {"score": 0.004743594110762319, "phrase": "essential_step"}, {"score": 0.004650086856905758, "phrase": "new_computer_architecture"}, {"score": 0.004581162468419365, "phrase": "careful_examination"}, {"score": 0.0045357787854931894, "phrase": "different_design_options"}, {"score": 0.004402295697276237, "phrase": "computer_architects"}, {"score": 0.004358676214574977, "phrase": "efficient_means"}, {"score": 0.004105850229681625, "phrase": "overall_machine"}, {"score": 0.003906357144047631, "phrase": "different_programs"}, {"score": 0.003848413823574867, "phrase": "even_different_parts"}, {"score": 0.003716520760680603, "phrase": "distinct_behaviors"}, {"score": 0.0035891316580885665, "phrase": "different_ways"}, {"score": 0.0034660938095219846, "phrase": "processor_performance"}, {"score": 0.0033306180744375616, "phrase": "executing_program"}, {"score": 0.0031845067058084583, "phrase": "real_program"}, {"score": 0.0028822890425197582, "phrase": "data_clustering_algorithms"}, {"score": 0.0027834145465170292, "phrase": "repetitive_patterns"}, {"score": 0.0027420820738468577, "phrase": "program's_execution"}, {"score": 0.0026480044868438875, "phrase": "repetitive_behavior_pattern"}, {"score": 0.0026217213613095322, "phrase": "simulation_time"}, {"score": 0.0024941578231560055, "phrase": "standard_benchmark_programs"}, {"score": 0.002349228457383314, "phrase": "important_problem"}, {"score": 0.0023143284925318916, "phrase": "data_representation"}, {"score": 0.0022127018991294047, "phrase": "clustering_algorithm"}, {"score": 0.0021049977753042253, "phrase": "different_options"}], "paper_keywords": ["K-means", " random projection", " Bayesian information criterion", " simulation", " SimPoint"], "paper_abstract": "An essential step in designing a new computer architecture is the careful examination of different design options. It is critical that computer architects have efficient means by which they may estimate the impact of various design options on the overall machine. This task is complicated by the fact that different programs, and even different parts of the same program, may have distinct behaviors that interact with the hardware in different ways. Researchers use very detailed simulators to estimate processor performance, which models every cycle of an executing program. Unfortunately, simulating every cycle of a real program can take weeks or months. To address this problem we have created a tool called SimPoint that uses data clustering algorithms from machine learning to automatically find repetitive patterns in a program's execution. By simulating one representative of each repetitive behavior pattern, simulation time can be reduced to minutes instead of weeks for standard benchmark programs, with very little cost in terms of accuracy. We describe this important problem, the data representation and preprocessing methods used by SimPoint, the clustering algorithm at the core of SimPoint, and we evaluate different options for tuning SimPoint.", "paper_title": "Using machine learning to guide architecture simulation", "paper_id": "WOS:000236331700006"}