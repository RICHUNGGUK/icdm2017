{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "generalized_buchi_automata"}, {"score": 0.004460309246062286, "phrase": "classic_explicit-state_emptiness"}, {"score": 0.004195418010131832, "phrase": "buchi_word"}, {"score": 0.003545024951402821, "phrase": "buchi_automata"}, {"score": 0.003438058620195309, "phrase": "multiple_acceptance_conditions"}, {"score": 0.0032336801561165113, "phrase": "degeneralization_step"}, {"score": 0.003088384809415812, "phrase": "algorithm's_worst-case_memory_requirements"}, {"score": 0.00290473242917264, "phrase": "worst-case_number"}, {"score": 0.0024918548761791435, "phrase": "experimental_results"}, {"score": 0.0022041312401435346, "phrase": "generalized_algorithm"}, {"score": 0.0021049977753042253, "phrase": "well-known_probabilistic_explicit-state_model"}], "paper_keywords": ["model checking", " Buchi automata", " nested depth-first search"], "paper_abstract": "We generalize the classic explicit-state emptiness checking algorithm for Buchi word automata (the nested depth-first search) into Buchi automata with multiple acceptance conditions. Avoiding a degeneralization step improves the algorithm's worst-case memory requirements and reduces the worst-case number of state visits during the search. We give experimental results and discuss changes needed to make the generalized algorithm compatible with well-known probabilistic explicit-state model checking techniques.", "paper_title": "Nested emptiness search for generalized Buchi automata", "paper_id": "WOS:000236597500007"}