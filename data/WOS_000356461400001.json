{"auto_keywords": [{"score": 0.02861042195285312, "phrase": "query_time"}, {"score": 0.00481495049065317, "phrase": "linear-space_data_structures"}, {"score": 0.004712726613162057, "phrase": "range_minority"}, {"score": 0.004564021500937984, "phrase": "arrays"}, {"score": 0.004371660146981191, "phrase": "range_queries"}, {"score": 0.004187917910692495, "phrase": "low-frequency_elements"}, {"score": 0.0035648266669315943, "phrase": "query_range"}, {"score": 0.002937879003671346, "phrase": "least_frequent_element_range_query_problem"}, {"score": 0.0025546627686955656, "phrase": "boolean_matrix_multiplication"}, {"score": 0.0023440589015485077, "phrase": "simultaneous_improvements"}, {"score": 0.0022696277881969896, "phrase": "preprocessing_time"}, {"score": 0.0021049977753042253, "phrase": "-minority_range_query_problem"}], "paper_keywords": ["Data structures", " Range queries", " Minority", " Least frequent element"], "paper_abstract": "We consider range queries that search for low-frequency elements (least frequent elements and -minorities) in arrays. An -minority of a query range has multiplicity no greater than an fraction of the elements in the range. Our data structure for the least frequent element range query problem requires space, preprocessing time, and query time. A reduction from boolean matrix multiplication to this problem shows the hardness of simultaneous improvements in both preprocessing time and query time. Our data structure for the -minority range query problem requires space, supports queries in time, and allows to be specified at query time.", "paper_title": "Linear-Space Data Structures for Range Minority Query in Arrays", "paper_id": "WOS:000356461400001"}