{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "abstract_tests"}, {"score": 0.004760765880314089, "phrase": "specific_configurations"}, {"score": 0.004707188147442449, "phrase": "large_critical_control_systems"}, {"score": 0.004654210559456924, "phrase": "computer-based_control_systems"}, {"score": 0.004109212945115815, "phrase": "'abstract_testing"}, {"score": 0.003971938976270902, "phrase": "efficient_way"}, {"score": 0.0039050245929822354, "phrase": "abstract_test"}, {"score": 0.0037959868107895053, "phrase": "system_functional_requirements"}, {"score": 0.0035666632046674153, "phrase": "specific_configuration"}, {"score": 0.003447451122274614, "phrase": "control_entities"}, {"score": 0.003332210257373994, "phrase": "logic_processes"}, {"score": 0.003078028357912228, "phrase": "control_system"}, {"score": 0.003009022147559257, "phrase": "considerable_time_effort"}, {"score": 0.0029415584202462444, "phrase": "error-prone_verification_activity"}, {"score": 0.002859345731792013, "phrase": "safe_passage"}, {"score": 0.0027480831196871093, "phrase": "so-called_generic_software_application"}, {"score": 0.0025239898026543964, "phrase": "reference_architecture"}, {"score": 0.0024814079299143536, "phrase": "state-based_behavioural_model"}, {"score": 0.0023848164282879885, "phrase": "presented_approach"}, {"score": 0.002305014991156598, "phrase": "railway_interlocking_system"}, {"score": 0.002190280748985751, "phrase": "testing_experience"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["dependability", " functional testing", " configuration coverage", " railway interlocking"], "paper_abstract": "Computer-based control systems have grown in size, complexity, distribution and criticality. In this paper a methodology is presented to perform an 'abstract testing' of such large control systems in an efficient way: an abstract test is specified directly from system functional requirements and has to be instantiated in more test runs to cover a specific configuration, comprising any number of control entities (sensors, actuators and logic processes). Such a process is usually performed by hand for each installation of the control system, requiring a considerable time effort and being an error-prone verification activity. To automate a safe passage from abstract tests, related to the so-called generic software application, to any specific installation, an algorithm is provided, starting from a reference architecture and a state-based behavioural model of the control software. The presented approach has been applied to a railway interlocking system, demonstrating its feasibility and effectiveness in several years of testing experience. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Automatic instantiation of abstract tests on specific configurations for large critical control systems", "paper_id": "WOS:000266177800002"}