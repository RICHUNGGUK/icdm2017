{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "customizable_multi-tenant_applications"}, {"score": 0.004745362527093198, "phrase": "dynamic_feature_placement"}, {"score": 0.0046597835420572825, "phrase": "multiple_end_users"}, {"score": 0.004177631185971939, "phrase": "customizable_applications"}, {"score": 0.004117215958803593, "phrase": "end_users"}, {"score": 0.0038419163428806973, "phrase": "highly_customizable_multi-tenant_cloud_applications"}, {"score": 0.003786337629480068, "phrase": "software_product_line_engineering_techniques"}, {"score": 0.0035980453088879424, "phrase": "multiple_interacting_components"}, {"score": 0.0034440966820590024, "phrase": "multiple_features"}, {"score": 0.003381905288924267, "phrase": "different_applications"}, {"score": 0.003308751289007707, "phrase": "feature-based_applications"}, {"score": 0.0030761074505030184, "phrase": "feature_placement_problem"}, {"score": 0.002987682397171167, "phrase": "dynamic_feature_placement_algorithms"}, {"score": 0.00293370839211022, "phrase": "subsequent_invocations"}, {"score": 0.0028702214190712036, "phrase": "dynamic_scenarios"}, {"score": 0.0027775505385261553, "phrase": "evaluation_scenario"}, {"score": 0.002717433692385074, "phrase": "developed_algorithm"}, {"score": 0.0026878636586288363, "phrase": "low_cost"}, {"score": 0.002526261001496249, "phrase": "management_algorithms"}, {"score": 0.002480602069295564, "phrase": "instance_migrations"}, {"score": 0.002339953069296797, "phrase": "static_management_approach"}, {"score": 0.002167355210897559, "phrase": "optimal_cost"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cloud resource management", " Software product line engineering", " Dynamic application placement", " Feature placement"], "paper_abstract": "Multi-tenancy, where multiple end users make use of the same application instance, is often used in clouds to reduce hosting costs. A disadvantage of multi-tenancy is however that it makes it difficult to create customizable applications, as all end users use the same application instance. In this article, we describe an approach for the development and management of highly customizable multi-tenant cloud applications. We apply software product line engineering techniques to cloud applications, and use an approach where applications are composed of multiple interacting components, referred to as application features. Using this approach, multiple features can be shared between different applications. Allocating resources for these feature-based applications is complex, as relations between components must be taken into account, and is referred to as the feature placement problem. In this article, we describe dynamic feature placement algorithms that minimize migrations between subsequent invocations, and evaluate them in dynamic scenarios where applications are added and removed throughout the evaluation scenario. We find that the developed algorithm achieves a low cost, while resulting in few resource migrations. In our evaluations, we observe that adding migration-awareness to the management algorithms reduces the number of instance migrations by more than 77% and reduces the load moved between instances by more than 96% when compared to a static management approach. Despite this reduction in number of migrations, a cost that is on average less than 3% more than the optimal cost is achieved. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Allocating resources for customizable multi-tenant applications in clouds using dynamic feature placement", "paper_id": "WOS:000361075400006"}