{"auto_keywords": [{"score": 0.04675404263653011, "phrase": "cbs"}, {"score": 0.019990010754422007, "phrase": "candidate_components"}, {"score": 0.006458652174123926, "phrase": "cbs_requirements_analysis"}, {"score": 0.00481495049065317, "phrase": "requirements_analysis"}, {"score": 0.00477190623242136, "phrase": "component_selection"}, {"score": 0.004645057834614705, "phrase": "interrelated_process"}, {"score": 0.004562362497952548, "phrase": "central_role"}, {"score": 0.004521566043596533, "phrase": "overall_component-based_system"}, {"score": 0.0042459818200777846, "phrase": "requirement_analysis_model"}, {"score": 0.0040777192615062815, "phrase": "conflicting_interests"}, {"score": 0.0037608593980593035, "phrase": "system_analyst's_expertise"}, {"score": 0.0037104876694493815, "phrase": "suitable_components"}, {"score": 0.0035156341294017685, "phrase": "component_alternatives"}, {"score": 0.0034529760173586583, "phrase": "stakeholder_requirements"}, {"score": 0.0032863459256972896, "phrase": "cbs_requirement_analysis"}, {"score": 0.0031277316566463978, "phrase": "unified_modelling_language"}, {"score": 0.0029901699209266435, "phrase": "formal_semantics"}, {"score": 0.002963390095037466, "phrase": "prolog_programming_language"}, {"score": 0.00257760787870709, "phrase": "uml_sequence_diagrams"}, {"score": 0.002543043781904587, "phrase": "satisfaction_interaction_frame"}, {"score": 0.00247529638625566, "phrase": "matching_criteria"}, {"score": 0.002453116398642071, "phrase": "stakeholder_demands"}, {"score": 0.002282667669149476, "phrase": "model_risk_assessment"}, {"score": 0.0021049977753042253, "phrase": "seven-eleven_japan_software_system"}], "paper_keywords": ["component-based system", " unified modelling language", " requirements analysis"], "paper_abstract": "Requirements analysis and component selection is widely recognized as an interrelated process that plays a central role in overall component-based system (CBS) development. Fundamental to the success of CBS is a requirement analysis model in which both stakeholders and candidate components balance the conflicting interests between what is needed and what is available. The effectiveness of CBS relies heavily on a system analyst's expertise to select suitable components. Owing to the lack of a language that could describe component alternatives with respect to stakeholder requirements, there is a need to develop one to describe CBS requirement analysis. In this paper, we present an extension to unified modelling language (UML) named RE-UML with a formal semantics utilizing Prolog programming language to support CBS requirements analysis. It helps balance the conflicts between what is required for a CBS-to-be and what features are supported by candidate components. RE-UML extends the UML sequence diagrams with a satisfaction interaction frame and mapping operators to model matching criteria between stakeholder demands and candidate component features. Further, associations between requirements and candidate components are introduced to model risk assessment and conflict resolutions during CBS requirements analysis. To demonstrate the usefulness of RE-UML, its application to the Seven-Eleven Japan software system is also presented.", "paper_title": "RE-UML: A Component-Based System Requirements Analysis Language", "paper_id": "WOS:000321052400009"}