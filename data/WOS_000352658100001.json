{"auto_keywords": [{"score": 0.030182252637371523, "phrase": "prelarge_concept"}, {"score": 0.014047097162428438, "phrase": "sequential_patterns"}, {"score": 0.011162381510985859, "phrase": "dynamic_databases"}, {"score": 0.010595356934717661, "phrase": "original_database"}, {"score": 0.009628845117320576, "phrase": "fusp_tree"}, {"score": 0.00481495049065317, "phrase": "built_prelarge_fast_updated_sequential_pattern_trees"}, {"score": 0.004690305164360866, "phrase": "useful_information"}, {"score": 0.0044896599221451216, "phrase": "decision_makers"}, {"score": 0.004431149592844886, "phrase": "appropriate_decisions"}, {"score": 0.004373398434399966, "phrase": "critical_issue"}, {"score": 0.004167982855788402, "phrase": "purchased_behaviors"}, {"score": 0.00407781620412982, "phrase": "usage_behaviors"}, {"score": 0.004007083686875716, "phrase": "web_log_data"}, {"score": 0.003920384090110374, "phrase": "static_database"}, {"score": 0.003818807671883534, "phrase": "batch_way"}, {"score": 0.003769006950727621, "phrase": "real-world_applications"}, {"score": 0.0035141291835319682, "phrase": "fast_updated_sequential_pattern"}, {"score": 0.0033636292024305406, "phrase": "sequence_insertion"}, {"score": 0.0032621183241997777, "phrase": "fup_concepts"}, {"score": 0.0030281251520610604, "phrase": "small_sequences"}, {"score": 0.002749980017065414, "phrase": "built_prelarge_fusp_tree"}, {"score": 0.0026786469998321084, "phrase": "prelarge_fusp_tree"}, {"score": 0.0025192983141887285, "phrase": "tree_structure"}, {"score": 0.002486402077525374, "phrase": "prelarge-fusp-tree-mod_maintenance_algorithm"}, {"score": 0.0023487324083283205, "phrase": "pruning_properties"}, {"score": 0.0022678201262721323, "phrase": "modified_sequences"}, {"score": 0.0021610874773389096, "phrase": "better_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_prelarge-fusp-tree-mod_maintenance_algorithm"}], "paper_keywords": ["Data Mining", " Dynamic Databases", " Modification", " Prelarge Concept", " Sequential Patterns"], "paper_abstract": "Mining useful information or knowledge from a very large database to aid managers or decision makers to make appropriate decisions is a critical issue in recent years. Sequential patterns can be used to discover the purchased behaviors of customers or the usage behaviors of users from Web log data. Most approaches process a static database to discover sequential patterns in a batch way. In real-world applications, transactions or sequences in databases are frequently changed. In the past, a fast updated sequential pattern (FUSP)-tree was proposed to handle dynamic databases whether for sequence insertion, deletion or modification based on FUP concepts. Original database is required to be re-scanned if it is necessary to maintain the small sequences which was not kept in the FUSP tree. In this paper, the prelarge concept was adopted to maintain and update the built prelarge FUSP tree for sequence modification. A prelarge FUSP tree is modified from FUSP tree for preserving not only the frequent 1-sequences but also the prelarge 1-sequences in the tree structure. The PRELARGE-FUSP-TREE-MOD maintenance algorithm is proposed to reduce the rescans of the original database due to the pruning properties of prelarge concept. When the number of modified sequences is smaller than the safety bound of the prelarge concept, better results can be obtained by the proposed PRELARGE-FUSP-TREE-MOD maintenance algorithm for sequence modification in dynamic databases.", "paper_title": "Updating the Built Prelarge Fast Updated Sequential Pattern Trees with Sequence Modification", "paper_id": "WOS:000352658100001"}