{"auto_keywords": [{"score": 0.04869496857615713, "phrase": "multicore_platforms"}, {"score": 0.00481495049065317, "phrase": "application_mapping_scenarios"}, {"score": 0.003901754272977278, "phrase": "low-level_optimizations"}, {"score": 0.0037888687452790953, "phrase": "individual_cores"}, {"score": 0.0037519679864796906, "phrase": "high-level_optimizations"}, {"score": 0.0035553221885904467, "phrase": "overall_application_performance"}, {"score": 0.003319830633865628, "phrase": "possible_mapping_scenarios"}, {"score": 0.0032714270066711835, "phrase": "real_application"}, {"score": 0.0032237268289353983, "phrase": "heterogeneous_multicore_processor"}, {"score": 0.002966230968271199, "phrase": "multimedia_analysis_application"}, {"score": 0.002838319783373086, "phrase": "low-level_and_high-level_optimizations"}, {"score": 0.002769650208851401, "phrase": "overall_application_speed-up"}, {"score": 0.002663208600887875, "phrase": "speed-up_factor"}, {"score": 0.002474505516708906, "phrase": "core_utilization"}, {"score": 0.0022216045996270974, "phrase": "application_optimization"}, {"score": 0.0021999341184897217, "phrase": "performance_analysis"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["multicore processors", " multiprocessor system-on-chip", " performance evaluation", " Cell/BE", " mapping and scheduling parallel applications"], "paper_abstract": "Applications running on multicore platforms are difficult to program, and even more difficult to optimize, mainly due to (1) the several layers where the optimizations occur and (2) the multitude of available resources to be exploited in parallel. Although low-level optimizations only target code running on individual cores, high-level optimizations (e.g. data- and task-parallelism) target the overall application performance. In this paper, we focus on the latter, by evaluating possible mapping scenarios of a real application on a heterogeneous multicore processor. Specifically, we focus on analyzing the impact of combining data- and task-parallelism for a multimedia analysis application running on the Cell Broadband Engine (Cell/B.E.). We find that both low-level and high-level optimizations are important for the overall application speed-up. However, we show that a speed-up factor of over 20 for the application running on Cell/B.E. can only be obtained if core utilization is increased by combining data- and task-parallelism. Thus, we consider this case study essential for building expertise in both application optimization and performance analysis for multicore platforms. Copyright (c) 2008 John Wiley & Sons, Ltd.", "paper_title": "Evaluating application mapping scenarios on the Cell/BE", "paper_id": "WOS:000262001600008"}