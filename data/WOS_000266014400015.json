{"auto_keywords": [{"score": 0.04612142010063672, "phrase": "boolean"}, {"score": 0.00481495049065317, "phrase": "fpga-based_hardware_acceleration"}, {"score": 0.004732785510739708, "phrase": "boolean_satisfiability"}, {"score": 0.004533427352547707, "phrase": "fpga-based_hardware_solution"}, {"score": 0.004088421020408183, "phrase": "main_goals"}, {"score": 0.003686935223424015, "phrase": "implication_graph"}, {"score": 0.0035620354052144656, "phrase": "conflict_clause_generation"}, {"score": 0.003267925215811654, "phrase": "experimental_results"}, {"score": 0.00307657476125683, "phrase": "performance_models"}, {"score": 0.002822434555587263, "phrase": "magnitude_improvement"}], "paper_keywords": ["Performance", " Algorithms", " Design", " Boolean satisfiabilty (SAT)", " boolean constant propagation (BCP)", " conflict induced clauses", " non-chronological backtrack", " FPGA"], "paper_abstract": "We present an FPGA-based hardware solution to the Boolean satisfiability (SAT) problem, with the main goals of scalability and speedup. In our approach the traversal of the implication graph as well as conflict clause generation are performed in hardware, in parallel. The experimental results and their analysis, along with the performance models are discussed. We show that an order of magnitude improvement in runtime can be obtained over MiniSAT (the best-in-class software based approach) by using a Virtex-4 (XC4VFX140) FPGA device. The resulting system can handle instances with as many as 10K variables and 280K clauses.", "paper_title": "FPGA-Based Hardware Acceleration for Boolean Satisfiability", "paper_id": "WOS:000266014400015"}