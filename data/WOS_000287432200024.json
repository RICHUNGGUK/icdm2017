{"auto_keywords": [{"score": 0.04834629780996175, "phrase": "cross_sections"}, {"score": 0.046411623960686495, "phrase": "fourier-transform_method"}, {"score": 0.03975620615373288, "phrase": "distributed_program"}, {"score": 0.03953363113773415, "phrase": "test_data"}, {"score": 0.034537184940274725, "phrase": "impact_parameter_model"}, {"score": 0.03178953864350346, "phrase": "symbolic_manipulation"}, {"score": 0.00481495049065317, "phrase": "close-coupling_exchange_integrals"}, {"score": 0.004768487322776716, "phrase": "tree_representation"}, {"score": 0.004740823885631586, "phrase": "semi-classical_atomic-orbital_close-coupling_method"}, {"score": 0.004622783000449884, "phrase": "ion-atom_collisions"}, {"score": 0.004560438999891081, "phrase": "fast_and_stable_computation"}, {"score": 0.00447282529270722, "phrase": "earlier_implementations"}, {"score": 0.00436989807912238, "phrase": "extensive_library"}, {"score": 0.004352974291381376, "phrase": "symbolic_storage"}, {"score": 0.004302593474473502, "phrase": "sophisticated_tree_structures"}, {"score": 0.004277621211536019, "phrase": "fast_manipulation"}, {"score": 0.0042610532651691305, "phrase": "numerically_stable_evaluation"}, {"score": 0.004146853136247415, "phrase": "exchange_integrals"}, {"score": 0.004045808927368185, "phrase": "program"}, {"score": 0.004020066537823032, "phrase": "txint_catalogue"}, {"score": 0.003927516959113487, "phrase": "cpc_program_library"}, {"score": 0.003912299697478417, "phrase": "queen's_university"}, {"score": 0.0038971417441747004, "phrase": "belfast"}, {"score": 0.0038820411362656803, "phrase": "n._ireland"}, {"score": 0.0038520156962129825, "phrase": "standard_cpc"}, {"score": 0.0035850198321277418, "phrase": "tar.gz_programming_language"}, {"score": 0.003489068049037447, "phrase": "ram"}, {"score": 0.0032914145394036657, "phrase": "close-coupling_method"}, {"score": 0.0032093850019736833, "phrase": "hansen"}, {"score": 0.0031969117445475367, "phrase": "dubois"}, {"score": 0.003129317057177867, "phrase": "shakeshaft"}, {"score": 0.002940697344380201, "phrase": "defined_collision_system"}, {"score": 0.0028231201951561128, "phrase": "space-saving_left-child"}, {"score": 0.0027741761880779535, "phrase": "stable_numerical_evaluation"}, {"score": 0.002763415176377921, "phrase": "fast_mutation"}, {"score": 0.0027473516587751597, "phrase": "full_compatibility"}, {"score": 0.002731381261399358, "phrase": "original_code"}, {"score": 0.0026892447164623247, "phrase": "heavy_use"}, {"score": 0.0026736111900632934, "phrase": "new_features"}, {"score": 0.0025717528747780695, "phrase": "fortran"}, {"score": 0.002473623357297284, "phrase": "gnu_fortran_compiler"}, {"score": 0.0022885604159099695, "phrase": "j.-p._hansen"}, {"score": 0.002279678798507812, "phrase": "a._dubois"}, {"score": 0.0022709350294083447, "phrase": "comput"}, {"score": 0.002205560249972527, "phrase": "r._shakeshaft"}, {"score": 0.0021970000365512227, "phrase": "j._phys"}, {"score": 0.0021715569188329683, "phrase": "mol"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Exchange integral", " Polynomial", " Symbolic manipulations", " Close-coupling"], "paper_abstract": "The semi-classical atomic-orbital close-coupling method is a well-known approach for the calculation of cross sections in ion-atom collisions. It strongly relies on the fast and stable computation of exchange integrals. We present an upgrade to earlier implementations of the Fourier-transform method. For this purpose, we implement an extensive library for symbolic storage of polynomials, relying on sophisticated tree structures to allow fast manipulation and numerically stable evaluation. Using this library, we considerably speed up creation and computation of exchange integrals. This enables us to compute cross sections for more complex collision systems. Program summary Program title: TXINT Catalogue identifier: AEHS_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEHS_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 12 332 No. of bytes in distributed program, including test data, etc.: 157 086 Distribution format: tar.gz Programming language: Fortran 95 Computer: All with a Fortran 95 compiler Operating system: All with a Fortran 95 compiler RAM: Depends heavily on input, usually less than 100 MiB Classification: 16.10 Nature of problem: Analytical calculation of one- and two-center exchange matrix elements for the close-coupling method in the impact parameter model. Solution method: Similar to the code of Hansen and Dubois [1], we use the Fourier-transform method suggested by Shakeshaft [2] to compute the integrals. However, we heavily speed up the calculation using a library for symbolic manipulation of polynomials. Restrictions: We restrict ourselves to a defined collision system in the impact parameter model. Unusual features: A library for symbolic manipulation of polynomials, where polynomials are stored in a space-saving left-child right-sibling binary tree. This provides stable numerical evaluation and fast mutation while maintaining full compatibility with the original code. Additional comments: This program makes heavy use of the new features provided by the Fortran 90 standard, most prominently pointers, derived types and allocatable structures and a small portion of Fortran 95. Only newer compilers support these features. Following compilers support all features needed by the program. GNU Fortran Compiler \"gfortran\" from version 4.3.0 GNU Fortran 95 Compiler \"g95\" from version 4.2.0 Intel Fortran Compiler \"ifort\" from version 11.0 Running time: Heavily dependent on input, usually less than one CPU second. References: [1] J.-P. Hansen, A. Dubois, Comput. Phys. Commun. 67 (1992) 456. [2] R. Shakeshaft, J. Phys. B: At. Mol. Opt. Phys. 8 (1975) L134. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Fast computation of close-coupling exchange integrals using polynomials in a tree representation", "paper_id": "WOS:000287432200024"}