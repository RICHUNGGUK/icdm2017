{"auto_keywords": [{"score": 0.0409303070249204, "phrase": "largest_job"}, {"score": 0.015344456416748042, "phrase": "optimal_algorithm"}, {"score": 0.010612387000973441, "phrase": "semi-online_machine"}, {"score": 0.004164007198843467, "phrase": "minimum_machine_load"}, {"score": 0.003785836059995376, "phrase": "bounded_competitive_ratio_exists"}, {"score": 0.0032246835734680377, "phrase": "higher_class"}, {"score": 0.0028446460307503343, "phrase": "lower_class"}, {"score": 0.0027327327233891865, "phrase": "a-competitive_ratio"}, {"score": 0.0026120705848349055, "phrase": "largest_root"}, {"score": 0.002362620540317279, "phrase": "total_size"}, {"score": 0.002224510044064184, "phrase": "competitive_ratio"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Scheduling", " Semi-online", " Hierarchy", " Two machines", " Competitive ratio"], "paper_abstract": "This paper investigates the semi-online machine covering problem on two hierarchical machines where the jobs are correspondingly classified into two hierarchical classes. The objective is to maximize the minimum machine load. We show that if we only know the size of the largest job, no algorithm with a bounded competitive ratio exists. So we consider the case where we know both the size and the class of the largest job. If we know the size of the largest job and that it belongs to the higher class, then an optimal algorithm with a (1 + root 2/2)-competitive ratio exists. If we know the size of the largest job and that it belongs to the lower class, we design an optimal algorithm with an a-competitive ratio, where alpha approximate to 2.48119 is the largest root of the equation x(3) -2x(2) - 2x + 2 = 0. For the case where the total size of all the jobs is known in advance, we show that the competitive ratio of an optimal algorithm is 2. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Optimal algorithms for semi-online machine covering on two hierarchical machines", "paper_id": "WOS:000335100700003"}