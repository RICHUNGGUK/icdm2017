{"auto_keywords": [{"score": 0.0448908231983253, "phrase": "gldpc_codes"}, {"score": 0.00481495049065317, "phrase": "low-density_parity-check_codes"}, {"score": 0.004468304427278713, "phrase": "generalized_low-density_parity-check"}, {"score": 0.0043519860930099795, "phrase": "awgn_channels"}, {"score": 0.004201571673071299, "phrase": "bipartite_tanner_graph"}, {"score": 0.004128317208406523, "phrase": "standard_ldpc_codes"}, {"score": 0.0040385352882334235, "phrase": "single_parity-check_constraints"}, {"score": 0.003985602342418578, "phrase": "general_coding_constraints"}, {"score": 0.003847802030433298, "phrase": "hadamard_code_constraints"}, {"score": 0.0037973594873521596, "phrase": "check_nodes"}, {"score": 0.003747575730190958, "phrase": "low-rate_approach"}, {"score": 0.003698442219929622, "phrase": "ldpc-hadamard_codes"}, {"score": 0.0034321000629547334, "phrase": "hadamard"}, {"score": 0.003386895196280363, "phrase": "fht"}, {"score": 0.0033131804981786747, "phrase": "hadamard_check_codes"}, {"score": 0.0032697235411641695, "phrase": "decoding_iteration"}, {"score": 0.003226834737003501, "phrase": "achievable_capacity"}, {"score": 0.003101503914610488, "phrase": "modified_ldpc-hadamard_code_graph"}, {"score": 0.002981026404927824, "phrase": "ldpc-hadamard_code_ensemble"}, {"score": 0.002941913249957503, "phrase": "low-complexity_optimization_method"}, {"score": 0.0028778584739756786, "phrase": "density_evolution"}, {"score": 0.00284009509859163, "phrase": "one-dimensional_dynamic_system"}, {"score": 0.002790511479398411, "phrase": "extrinsic_mutual_information_transfer"}, {"score": 0.002717750004930131, "phrase": "simulation_results"}, {"score": 0.002670296619878048, "phrase": "optimized_ldpc-hadamard_codes"}, {"score": 0.002646880721119838, "phrase": "better_performance"}, {"score": 0.0026121403051734744, "phrase": "low-rate_region"}, {"score": 0.0025892330566358503, "phrase": "low-rate_turbo-hadamard_codes"}, {"score": 0.0025217065652145443, "phrase": "fast_convergence_rate"}, {"score": 0.0022095328812245852, "phrase": "ultimate_shannon_limit"}, {"score": 0.0021049977753042253, "phrase": "best_performing_low-rate_turbo-hadamard_codes"}], "paper_keywords": ["code optimization", " extrinsic mutual information transfer (EXIT) chart", " generalized low-density parity-check (GLDPC) codes", " low-complexity decoding", " low-density parity-check (LDPC)-Hadamard codes", " low-rate"], "paper_abstract": "In this paper, we consider the design and analysis of generalized low-density parity-check (GLDPC) codes in AWGN channels. The GLDPC codes are specified by a bipartite Tanner graph, as with standard LDPC codes, but with the single parity-check constraints replaced by general coding constraints. In particular, we consider imposing Hadamard code constraints at the check nodes for a low-rate approach, termed LDPC-Hadamard codes. We introduce a low-complexity message-passing based iterative soft-input soft-output (SISO) decoding algorithm, which employs the a posteriori probability (APP) fast Hadamard transform (FHT) for decoding the Hadamard check codes at each decoding iteration. The achievable capacity with the GLDPC codes is then discussed. A modified LDPC-Hadamard code graph is also proposed. We then optimize the LDPC-Hadamard code ensemble using a low-complexity optimization method based on approximating the density evolution by a one-dimensional dynamic system represented by an extrinsic mutual information transfer (EXIT) chart. Simulation results show that the optimized LDPC-Hadamard codes offer better performance in the low-rate region than low-rate turbo-Hadamard codes, but also enjoy a fast convergence rate. A rate-0.003 LDPC-Hadamard code with large block length can achieve a bit-error-rate (BER) performance of 10(-5) at -1.44 dB, which is only 0.15 dB away from the ultimate Shannon limit (-1.592 dB) and 0.24 dB better than the best performing low-rate turbo-Hadamard codes.", "paper_title": "Generalized low-density parity-check codes based on Hadamard constraints", "paper_id": "WOS:000244497100012"}