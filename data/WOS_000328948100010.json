{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_load_balancing_for_real-time_video_encoding"}, {"score": 0.0047588556219929756, "phrase": "heterogeneous_cpu"}, {"score": 0.00470341117804131, "phrase": "gpu_systems"}, {"score": 0.004487989502479992, "phrase": "encoding_complexity"}, {"score": 0.004358368398332723, "phrase": "high_definition_video_sequences"}, {"score": 0.003991449490087454, "phrase": "efficient_parallelization"}, {"score": 0.0039449104968131655, "phrase": "rd_performance_analysis"}, {"score": 0.003742084495435749, "phrase": "multi-core_cpu"}, {"score": 0.003698442219929622, "phrase": "multi-gpu_systems"}, {"score": 0.003633927813203731, "phrase": "proposed_dynamic_load"}, {"score": 0.0035496495489801667, "phrase": "efficient_and_concurrent_video_encoding"}, {"score": 0.0033868916699805224, "phrase": "realistic_run-time_performance_modeling_and_module-device_execution_affinities"}, {"score": 0.0031565959573536194, "phrase": "load_balancing_decisions"}, {"score": 0.0029766550209309127, "phrase": "different_execution_scenarios"}, {"score": 0.002941913249957503, "phrase": "experimental_results"}, {"score": 0.002890557197908352, "phrase": "proposed_algorithm's_ability"}, {"score": 0.00284009509859163, "phrase": "real-time_encoding"}, {"score": 0.0027579362569638945, "phrase": "high-definition_sequences"}, {"score": 0.002693919110230191, "phrase": "speed-up_values"}, {"score": 0.002540285736232122, "phrase": "video_inter-loop_encoding"}, {"score": 0.00249592321829865, "phrase": "single_gpu_device"}, {"score": 0.002353554841514325, "phrase": "highly_optimized_multi-core_cpu_execution"}, {"score": 0.0022192891418394514, "phrase": "automatic_tuning"}, {"score": 0.0021805201234139475, "phrase": "encoding_parameters"}, {"score": 0.0021049977753042253, "phrase": "strict_encoding_constraints"}], "paper_keywords": ["Video Coding", " GPGPU", " Hybrid CPU plus GPU System", " Load Balancing"], "paper_abstract": "The high computational demands and overall encoding complexity make the processing of high definition video sequences hard to be achieved in real-time. In this manuscript, we target an efficient parallelization and RD performance analysis of H.264/AVC inter-loop modules and their collaborative execution in hybrid multi-core CPU and multi-GPU systems. The proposed dynamic load balancing algorithm allows efficient and concurrent video encoding across several heterogeneous devices by relying on realistic run-time performance modeling and module-device execution affinities when distributing the computations. Due to an online adjustment of load balancing decisions, this approach is also self-adaptable to different execution scenarios. Experimental results show the proposed algorithm's ability to achieve real-time encoding for different resolutions of high-definition sequences in various heterogeneous platforms. Speed-up values of up to 2.6 were obtained when compared to the video inter-loop encoding on a single GPU device, and up to 8.5 when compared to a highly optimized multi-core CPU execution. Moreover, the proposed algorithm also provides an automatic tuning of the encoding parameters, in order to meet strict encoding constraints.", "paper_title": "Dynamic Load Balancing for Real-Time Video Encoding on Heterogeneous CPU plus GPU Systems", "paper_id": "WOS:000328948100010"}