{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "data-parallel_programs"}, {"score": 0.004682414867878963, "phrase": "time_and_energy_design_space_exploration"}, {"score": 0.00445293569103488, "phrase": "embedded_devices"}, {"score": 0.0044034858486671265, "phrase": "mpsocs"}, {"score": 0.004258372598568333, "phrase": "specialised_processors"}, {"score": 0.003724034990158436, "phrase": "instruction-set_architecture"}, {"score": 0.0036214184763804034, "phrase": "disjoint_address_spaces"}, {"score": 0.0033864888703414903, "phrase": "individual_benchmarks"}, {"score": 0.0031845067058084583, "phrase": "heterogeneous_multicores"}, {"score": 0.0031490944606172152, "phrase": "different_criteria"}, {"score": 0.002911961514073769, "phrase": "seven_benchmarks"}, {"score": 0.0028635111041882956, "phrase": "dspstone"}, {"score": 0.0028316582436089064, "phrase": "utdsp"}, {"score": 0.0028001591266680363, "phrase": "polybench"}, {"score": 0.002722930209707764, "phrase": "design_space_exploration"}, {"score": 0.0026478260192958924, "phrase": "best_partition"}, {"score": 0.002603758927691463, "phrase": "compiler_optimization_level"}, {"score": 0.0025461386232786356, "phrase": "input_size"}, {"score": 0.0024211009463218484, "phrase": "straightforward_approach"}, {"score": 0.002164738347530834, "phrase": "energy_improvements"}], "paper_keywords": ["spmd", " data-parallel", " heterogeneous processor", " partitioning"], "paper_abstract": "Multiprocessor System-on-Chips(MPSoCs) are now widely used in embedded devices. MPSoCs typically contain a range of specialised processors. Alongside the CPU, there are microcontrollers, DSPs and other hardware accelerators. Programming these MPSoCs is difficult because of the difference in instruction-set architecture (ISA) and disjoint address spaces. In this paper we consider MPSoCs as a target for individual benchmarks. We examine how data-parallel programs can be optimally mapped to heterogeneous multicores for different criteria such as performance, power and energy. We investigate the partitioning of seven benchmarks taken from DSPstone, UTDSP and Polybench suites. Based on design space exploration we show that the best partition depends on compiler optimization level, program, input size and crucially optimization criteria. We develop a straightforward approach that attempts to select the best partitioning for a given program. On average it achieves speedups of 2.2x and energy improvements of 1.45x on the OMAP 4430 platform.", "paper_title": "Partitioning Data-parallel Programs for Heterogeneous MPSoCs : Time and Energy Design Space Exploration", "paper_id": "WOS:000341937800009"}