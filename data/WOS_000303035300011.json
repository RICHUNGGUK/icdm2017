{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "adaptive_qos"}, {"score": 0.02756413375683072, "phrase": "job_length"}, {"score": 0.004656871909510407, "phrase": "service-oriented_grid_environment"}, {"score": 0.004466519142879166, "phrase": "grid_technology"}, {"score": 0.004392565073466714, "phrase": "web_services"}, {"score": 0.004319830179921363, "phrase": "resource_sharing"}, {"score": 0.00421297029755273, "phrase": "tremendous_attention"}, {"score": 0.0037795163893761027, "phrase": "additional_multiple_types"}, {"score": 0.0034476484413811987, "phrase": "scheduling_services"}, {"score": 0.002941389980674657, "phrase": "service-oriented_grid_environments"}, {"score": 0.002868733147406366, "phrase": "qos"}, {"score": 0.002660574167091781, "phrase": "historical_records"}, {"score": 0.002509284173541882, "phrase": "users'_qos_requirements"}, {"score": 0.0023864566654035924, "phrase": "scheduling_decisions"}, {"score": 0.0022507188208913394, "phrase": "service_availability"}, {"score": 0.002158505888557746, "phrase": "resource_utilization"}, {"score": 0.0021049977753042253, "phrase": "total_service_execution_time"}], "paper_keywords": ["Automatic deployment", " dynamic scheduling", " grid", " service-oriented architecture", " web services"], "paper_abstract": "The use of grid technology and web services for resource sharing has received tremendous attention in recent years. The merging of these 2 technologies is able to provide additional multiple types of services and functionalities. However, the problem of scheduling services to meet quality of service (QoS) requirements remains challenging. This paper proposes an adaptive QoS (A QoS) scheduling algorithm for service-oriented grid environments. A QoS uses benchmarking and curve-fitting based on historical records to estimate job length. Job length and users' QoS requirements are then used to make scheduling decisions. AQoS is able to maximize service availability, reliability, and resource utilization while minimizing total service execution time. Experimental results show that A QoS outperform MIN-MIN and MAX-MIN algorithms by 10%-30% in terms of makespan and 5%-20% in terms of reliability.", "paper_title": "Adaptive QoS scheduling in a service-oriented grid environment", "paper_id": "WOS:000303035300011"}