{"auto_keywords": [{"score": 0.049604883316905664, "phrase": "multiobjective_genetic_programming"}, {"score": 0.00481495049065317, "phrase": "population_dynamics"}, {"score": 0.0046269981365987915, "phrase": "complexity_objective"}, {"score": 0.004558414405811025, "phrase": "tree_bloat"}, {"score": 0.004337028108577593, "phrase": "undesirable_collapse"}, {"score": 0.004209369306023422, "phrase": "single-node_trees"}, {"score": 0.0040449598280454645, "phrase": "detailed_examination"}, {"score": 0.003829290275367182, "phrase": "different_types"}, {"score": 0.0037913267098534887, "phrase": "crossover_and_mutation_operators"}, {"score": 0.0032324864013225166, "phrase": "benchmark_machine_learning_problems"}, {"score": 0.003044785536429499, "phrase": "vital_role"}, {"score": 0.00299958349498286, "phrase": "population_collapse"}, {"score": 0.002955050521440921, "phrase": "parsimony_pressure"}, {"score": 0.0029111767710750117, "phrase": "population_diversity"}, {"score": 0.002769568481822277, "phrase": "generated_individuals"}, {"score": 0.0026480044868438875, "phrase": "fitness_evaluation"}, {"score": 0.0025066304722422463, "phrase": "average_size"}, {"score": 0.0024327171018928458, "phrase": "gp_population"}, {"score": 0.0023846534541336326, "phrase": "evolutionary_approach"}, {"score": 0.002268598551466928, "phrase": "wider_role"}, {"score": 0.002223770196464436, "phrase": "single-node_individuals"}, {"score": 0.002136747803494932, "phrase": "diversity-preserving_algorithm"}], "paper_keywords": ["Multiobjective genetic programming", " Population collapse", " Mutation", " Population dynamics"], "paper_abstract": "Using multiobjective genetic programming with a complexity objective to overcome tree bloat is usually very successful but can sometimes lead to undesirable collapse of the population to all single-node trees. In this paper we report a detailed examination of why and when collapse occurs. We have used different types of crossover and mutation operators (depth-fair and sub-tree), different evolutionary approaches (generational and steady-state), and different datasets (6-parity Boolean and a range of benchmark machine learning problems) to strengthen our conclusion. We conclude that mutation has a vital role in preventing population collapse by counterbalancing parsimony pressure and preserving population diversity. Also, mutation controls the size of the generated individuals which tends to dominate the time needed for fitness evaluation and therefore the whole evolutionary process. Further, the average size of the individuals in a GP population depends on the evolutionary approach employed. We also demonstrate that mutation has a wider role than merely culling single-node individuals from the population; even within a diversity-preserving algorithm such as SPEA2 mutation has a role in preserving diversity.", "paper_title": "The influence of mutation on population dynamics in multiobjective genetic programming", "paper_id": "WOS:000273949500002"}