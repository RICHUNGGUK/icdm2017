{"auto_keywords": [{"score": 0.03479716519939186, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "multimedia_applications"}, {"score": 0.004744748477093856, "phrase": "floating-point_calculations"}, {"score": 0.004658426838467567, "phrase": "asic_acceleration"}, {"score": 0.0046073860169839305, "phrase": "sky-rocketing_manufacturing_costs"}, {"score": 0.004506968388996092, "phrase": "fpga-based_systems"}, {"score": 0.004457579615095599, "phrase": "programmable_alternative"}, {"score": 0.004408729661992651, "phrase": "computation_parallelism"}, {"score": 0.0042031320273645065, "phrase": "processor-oriented_architectures"}, {"score": 0.0041418132064539185, "phrase": "c-to-hdl_flows"}, {"score": 0.0040366412779632085, "phrase": "hardware_knowledge_background"}, {"score": 0.0039341294012600085, "phrase": "large_size"}, {"score": 0.0038909934410379775, "phrase": "configuration_bitstream"}, {"score": 0.0038483286199081, "phrase": "inherent_complexity"}, {"score": 0.003820144626025562, "phrase": "fpga_devices"}, {"score": 0.0037231102027070724, "phrase": "coarse-grained_reconfigurable_architectures"}, {"score": 0.0036418947847496365, "phrase": "appealing_solution"}, {"score": 0.0035887342563437935, "phrase": "implementation_problems"}, {"score": 0.003433847524648519, "phrase": "scalable_cgra"}, {"score": 0.0033220706785945815, "phrase": "programmable_gate_array"}, {"score": 0.0032376465741070274, "phrase": "design_option"}, {"score": 0.0030414140732789186, "phrase": "state-of-the-art_fpga_technology"}, {"score": 0.0028153046221865365, "phrase": "standard_cgras"}, {"score": 0.0027844017803674444, "phrase": "basic_cell_template"}, {"score": 0.002763988044737562, "phrase": "advanced_features"}, {"score": 0.002733646947011804, "phrase": "sub-word_simd_integer"}, {"score": 0.002713604305939145, "phrase": "floating-point_computation_capabilities"}, {"score": 0.0026348886455716614, "phrase": "multiple_reconfiguration_contexts"}, {"score": 0.0026155681847364483, "phrase": "partial_run-time_reconfiguration_capabilities"}, {"score": 0.002521064923851732, "phrase": "high_reconfiguration"}, {"score": 0.0024660058541899647, "phrase": "selected_instances"}, {"score": 0.0024389277933858054, "phrase": "proposed_architecture"}, {"score": 0.0023164335087514252, "phrase": "common_dsp"}, {"score": 0.0022994427535192514, "phrase": "image_processing"}, {"score": 0.00226583335721762, "phrase": "audio_compression_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["VHDL", " Coarse-grain", " Reconfigurable", " Subword", " Floating-point"], "paper_abstract": "Signal processors exploiting ASIC acceleration suffer from sky-rocketing manufacturing costs and long design cycles. FPGA-based systems provide a programmable alternative for exploiting computation parallelism, but the flexibility they provide is not as high as in processor-oriented architectures: HDL or C-to-HDL flows still require specific expertise and a hardware knowledge background. On the other hand, the large size of the configuration bitstream and the inherent complexity of FPGA devices make their dynamic reconfiguration not a very viable approach. Coarse-grained reconfigurable architectures (CGRAs) are an appealing solution but they pose implementation problems and tend to be application specific. This paper presents a scalable CGRA which eases the implementation of algorithms on field programmable gate array (FPGA) platforms. This design option is based on two levels of programmability: it takes advantage of performance and reliability provided by state-of-the-art FPGA technology, and at the same time it provides the user with flexibility, performance and ease of reconfiguration typical of standard CGRAs. The basic cell template provides advanced features such as sub-word SIMD integer and floating-point computation capabilities, as well as saturating arithmetic. Multiple reconfiguration contexts and partial run-time reconfiguration capabilities are provided, tackling this way the problem of high reconfiguration overhead typical of FPGAs. Selected instances of the proposed architecture have been implemented on an Altera Stratix II EP2S180 FPGA. On this system, we mapped some common DSP, image processing, 3D graphics and audio compression algorithms in order to validate our approach and to demonstrate its effectiveness by benchmarking the benefits achieved. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A coarse-grain reconfigurable architecture for multimedia applications supporting subword and floating-point calculations", "paper_id": "WOS:000274784100004"}