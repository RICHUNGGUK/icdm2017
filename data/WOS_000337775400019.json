{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "genetic_algorithm"}, {"score": 0.015528209518813424, "phrase": "tree_construction"}, {"score": 0.011328424034649669, "phrase": "many-to-many_communication"}, {"score": 0.01047835800321892, "phrase": "spanning_tree_topology"}, {"score": 0.010098030315599256, "phrase": "peer-to-peer_dias"}, {"score": 0.007478152596248366, "phrase": "proposed_algorithm"}, {"score": 0.004677711903652145, "phrase": "interactive_applications"}, {"score": 0.00446987606516801, "phrase": "useful_solutions"}, {"score": 0.004324521292490181, "phrase": "pattern_analysis"}, {"score": 0.0040985336993896145, "phrase": "ga"}, {"score": 0.0038678251731669865, "phrase": "distributed_interactive_applications"}, {"score": 0.003757480190200645, "phrase": "total_end-to-end_delay"}, {"score": 0.003516898780234098, "phrase": "shared_application_state"}, {"score": 0.0033465923623290034, "phrase": "peer_architectures"}, {"score": 0.003264547032549398, "phrase": "efficient_and_truly_scalable_solution"}, {"score": 0.0028596699752849682, "phrase": "existing_work"}, {"score": 0.002789528662623221, "phrase": "peer_incurred_delays"}, {"score": 0.0026875205754965537, "phrase": "spanning_tree"}, {"score": 0.0026324658253309673, "phrase": "peer_incurred_delay"}, {"score": 0.0025361866386341796, "phrase": "minimum_total_end-to-end_delay"}, {"score": 0.002443918486889435, "phrase": "np"}, {"score": 0.0023346234464901978, "phrase": "optimal_solution"}, {"score": 0.0022399174232611853, "phrase": "extensive_experiments"}, {"score": 0.0022122603123901114, "phrase": "experimental_results"}, {"score": 0.002184943946549964, "phrase": "high_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Genetic algorithm", " Optimization", " P2P", " Distributed interactive applications", " Minimum latency"], "paper_abstract": "Genetic algorithm (GA) has been widely used to generate useful solutions to optimization and search problems such as pattern analysis, recognition, classification and regression. In this paper, the GA will be used to build spanning tree in peer-to-peer Distributed Interactive Applications (DIAs) to minimize the total end-to-end delay. DIAs allow a group of users connected via a network to interact with a shared application state, which requires many-to-many communication among users. Peer-to-peer architectures have been proposed as an efficient and truly scalable solution for DIAs. The spanning tree topology has often been used to implement many-to-many communication in peer-to-peer DIAs. The peer incurred delay in the tree construction is often ignored or not well studied in the existing work. We show that the peer incurred delays are closely related to the topology of the spanning tree. By considering the peer incurred delay, the problem of building spanning tree with minimum total end-to-end delay to receivers in peer-to-peer DIAs is proven to be NP-complete. A genetic algorithm is proposed to approximate an optimal solution to the spanning tree topology. The proposed algorithm is evaluated by extensive experiments and the experimental results show the high efficiency of the proposed algorithm. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Genetic algorithm for spanning tree construction in P2P distributed interactive applications", "paper_id": "WOS:000337775400019"}