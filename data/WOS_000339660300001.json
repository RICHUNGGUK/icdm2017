{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_evolution"}, {"score": 0.004731638279336065, "phrase": "long-lived_floss_project"}, {"score": 0.0045959609346817535, "phrase": "open-source_software_projects"}, {"score": 0.004464156619275582, "phrase": "quite_a_long_time"}, {"score": 0.004386887374401584, "phrase": "longest_living_ones"}, {"score": 0.004020066537823032, "phrase": "source_code_management_systems"}, {"score": 0.0034551632687788857, "phrase": "main_aim"}, {"score": 0.003259604990188875, "phrase": "lehman's_laws"}], "paper_keywords": ["free software", " open source software", " software evolution", " source code management system", " mining software repositories"], "paper_abstract": "Some free, open-source software projects have been around for quite a long time, the longest living ones dating from the early 1980s. For some of them, detailed information about their evolution is available in source code management systems tracking all their code changes for periods of more than 15 years. This paper examines in detail the evolution of one of such projects, glibc, with the main aim of understanding how it evolved and how it matched Lehman's laws of software evolution. As a result, we have developed a methodology for studying the evolution of such long-lived projects based on the information in their source code management repository, described in detail several aspects of the history of glibc, including some activity and size metrics, and found how some of the laws of software evolution may not hold in this case. (C) 2013 The Authors. Journal of Software: Evolution and Process published by John Wiley & Sons Ltd.", "paper_title": "Studying the laws of software evolution in a long-lived FLOSS project", "paper_id": "WOS:000339660300001"}