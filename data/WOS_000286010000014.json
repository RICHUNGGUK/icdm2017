{"auto_keywords": [{"score": 0.040380622955874294, "phrase": "neyman-pearson_lemma"}, {"score": 0.03147527359579769, "phrase": "k_test_samples"}, {"score": 0.030811773780154903, "phrase": "second_approach"}, {"score": 0.004199247711875386, "phrase": "final_decision"}, {"score": 0.0040192915527630995, "phrase": "hypothesis_testing"}, {"score": 0.003702323283528699, "phrase": "equivalent_result"}, {"score": 0.0034102660898135155, "phrase": "training_dataset"}, {"score": 0.0030064251340251196, "phrase": "consensus_labeling"}, {"score": 0.0028305047329728254, "phrase": "new_classifier"}, {"score": 0.002564505790176378, "phrase": "extended_input_space_training"}, {"score": 0.0024951467586005094, "phrase": "known_symmetries"}, {"score": 0.0024143815950383647, "phrase": "latter_approach"}, {"score": 0.0022980978400845144, "phrase": "accurate_classification_boundary"}, {"score": 0.00221153232497724, "phrase": "accurate_posterior_probability_estimate"}, {"score": 0.0021754360937943167, "phrase": "whole_input_space"}, {"score": 0.0021049977753042253, "phrase": "well-known_databases"}], "paper_keywords": ["Classifier output combination", " multiple sample classification", " Neyman-Pearson", " support vector machines"], "paper_abstract": "In some applications, the probability of error of a given classifier is too high for its practical application, but we are allowed to gather more independent test samples from the same class to reduce the probability of error of the final decision. From the point of view of hypothesis testing, the solution is given by the Neyman-Pearson lemma. However, there is no equivalent result to the Neyman-Pearson lemma when the likelihoods are unknown, and we are given a training dataset. In this brief, we explore two alternatives. First, we combine the soft (probabilistic) outputs of a given classifier to produce a consensus labeling for K test samples. In the second approach, we build a new classifier that directly computes the label for K test samples. For this second approach, we need to define an extended input space training set and incorporate the known symmetries in the classifier. This latter approach gives more accurate results, as it only requires an accurate classification boundary, while the former needs an accurate posterior probability estimate for the whole input space. We illustrate our results with well-known databases.", "paper_title": "Extended Input Space Support Vector Machine", "paper_id": "WOS:000286010000014"}