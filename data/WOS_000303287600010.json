{"auto_keywords": [{"score": 0.04057363325580822, "phrase": "ea"}, {"score": 0.027727256115745776, "phrase": "optimal_solutions"}, {"score": 0.00481495049065317, "phrase": "efficient_revolutionary_algorithm"}, {"score": 0.004747997855358171, "phrase": "long-term_care_facilities."}, {"score": 0.004552648949390462, "phrase": "discrete_location_problem"}, {"score": 0.004489327204473076, "phrase": "long-term_care_facilities"}, {"score": 0.004264558080356621, "phrase": "optimal_locations"}, {"score": 0.0040890178236849825, "phrase": "maximum_number"}, {"score": 0.004050996777117918, "phrase": "assigned_patients"}, {"score": 0.003994624397219346, "phrase": "single_facility"}, {"score": 0.0039024014688338964, "phrase": "efficient_evolutionary_approach"}, {"score": 0.0037069087922811488, "phrase": "binary_encoding"}, {"score": 0.003672427620845944, "phrase": "appropriate_objective_function"}, {"score": 0.0036382660173943393, "phrase": "standard_genetic_operators"}, {"score": 0.003604421041893448, "phrase": "unfeasible_individuals"}, {"score": 0.0034238045290210534, "phrase": "applied_ea_strategies"}, {"score": 0.0032522091171602557, "phrase": "genetic_material"}, {"score": 0.0031328221096543823, "phrase": "real-life_test_instance"}, {"score": 0.0030461580449080553, "phrase": "obtained_results_arc"}, {"score": 0.002989714021608139, "phrase": "existing_ones"}, {"score": 0.002839812512030847, "phrase": "new_problem_instances"}, {"score": 0.002787181295054319, "phrase": "standard_orlib_ap_hub_data"}, {"score": 0.0026974065918918275, "phrase": "first_time"}, {"score": 0.002550165781755603, "phrase": "tested_problem_instances"}, {"score": 0.002479579797152119, "phrase": "standard_optimization_tool"}, {"score": 0.00246800641971897, "phrase": "cplex._exhaustive_computational_experiments"}, {"score": 0.002422249273477746, "phrase": "ea_approach"}, {"score": 0.0023551955270737215, "phrase": "smaller_problem_instances"}, {"score": 0.0023223663501882896, "phrase": "large-scale_instances"}, {"score": 0.0022686625017583387, "phrase": "relatively_short_cpu_time"}, {"score": 0.002195552442011313, "phrase": "test_problems"}, {"score": 0.0021750990136123367, "phrase": "practical_sizes"}, {"score": 0.0021049977753042253, "phrase": "proposed_evolutionary-based_method"}], "paper_keywords": ["Evolutionary algorithms", " Long-term care facility", " Facility location problem", " Discrete optimization"], "paper_abstract": "This paper deals with a variant of a discrete location problem of establishing long-term care facilities in a given network. The objective is to determine optimal locations for these facilities in order to minimize the maximum number of assigned patients to a single facility. We propose an efficient evolutionary approach (EA) for solving this problem, based on binary encoding, appropriate objective function and standard genetic operators. Unfeasible individuals in the population are corrected to be feasible, while applied EA strategies keep the feasibility of individuals and preserve the diversity of genetic material. The algorithm is benchmarked on a real-life test instance with 33 nodes and the obtained results arc compared with the existing ones from the literature. The EA is additionally tested on new problem instances derived from the standard ORLIB AP hub data set with up to 400 potential locations. For the first time in the literature we report verified optimal solutions for most of the tested problem instances with up to 80 nodes obtained by the standard optimization tool CPLEX. Exhaustive computational experiments show that the EA approach quickly returns all optimal solutions for smaller problem instances, while large-scale instances are solved in a relatively short CPU time. The results obtained on the test problems of practical sizes clearly indicate the potential of the proposed evolutionary-based method for solving this problem and similar discrete location problems.", "paper_title": "AN EFFICIENT REVOLUTIONARY ALGORITHM FOR LOCATING LONG-TERM CARE FACILITIES", "paper_id": "WOS:000303287600010"}