{"auto_keywords": [{"score": 0.03500396611823986, "phrase": "flow_functions"}, {"score": 0.015524819350768626, "phrase": "semantic_meanings"}, {"score": 0.00481495049065317, "phrase": "optimizer_flow_functions"}, {"score": 0.00469500313566324, "phrase": "previous_work"}, {"score": 0.0045492504051421745, "phrase": "rhodium"}, {"score": 0.004463958296056236, "phrase": "program_analyses"}, {"score": 0.004244234872662471, "phrase": "declarative_flow_functions"}, {"score": 0.004112411350177274, "phrase": "user-defined_dataflow_fact_schemas"}, {"score": 0.003909923690310641, "phrase": "semantic_meaning"}, {"score": 0.003788444178071508, "phrase": "rhodium_system"}, {"score": 0.0036018503805251424, "phrase": "user's_flow_functions"}, {"score": 0.003095257144856771, "phrase": "user-written_flow_functions"}, {"score": 0.0030371471832258317, "phrase": "facts'_semantic_meanings"}, {"score": 0.0029427043216782604, "phrase": "correct_flow_functions"}, {"score": 0.002815383690003621, "phrase": "dataflow_fact"}, {"score": 0.002512650904797186, "phrase": "whirlwind_compiler"}, {"score": 0.002299830460180699, "phrase": "fact_schemas"}, {"score": 0.002256619934086924, "phrase": "automatically_generated_flow_functions"}, {"score": 0.0021317885325570604, "phrase": "earlier_suite"}, {"score": 0.0021049977753042253, "phrase": "handwritten_rules"}], "paper_keywords": ["languages", " algorithms", " reliability"], "paper_abstract": "Previous work presented a language called Rhodium for writing program analyses and transformations, in the form of declarative flow functions that propagate instances of user-defined dataflow fact schemas. Each dataflow fact schema specifies a semantic meaning, which allows the Rhodium system to automatically verify the correctness of the user's flow functions. In this work, we have reversed the roles of the flow functions and semantic meanings: rather than checking the correctness of the user-written flow functions using the facts' semantic meanings, we automatically infer correct flow functions solely from the meanings of the dataflow fact schemas. We have implemented our algorithm for inferring flow functions from fact schemas in the context of the Whirlwind compiler, and have used this implementation to infer flow functions for a variety of fact schemas. The automatically generated flow functions cover most of the situations covered by an earlier suite of handwritten rules.", "paper_title": "Automatic inference of optimizer flow functions from semantic meanings", "paper_id": "WOS:000253409000015"}