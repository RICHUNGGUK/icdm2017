{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "safety-critical_systems"}, {"score": 0.0060754158740140484, "phrase": "safecharts"}, {"score": 0.004735414083933722, "phrase": "rapid_developments"}, {"score": 0.004580243025274209, "phrase": "ubiquitous_use"}, {"score": 0.004549821572786755, "phrase": "different_types"}, {"score": 0.004400705158735729, "phrase": "consumer_electronics"}, {"score": 0.004356926418550194, "phrase": "medical_systems"}, {"score": 0.004284923367722824, "phrase": "unintentional_design_faults"}, {"score": 0.00420008205995114, "phrase": "even_death"}, {"score": 0.0041721750101390825, "phrase": "human_beings"}, {"score": 0.0036269721030245507, "phrase": "high_design_complexity"}, {"score": 0.0035789061301304977, "phrase": "model-driven_architecture_design"}, {"score": 0.003531474887552889, "phrase": "well-accepted_trend"}, {"score": 0.0034846700528752368, "phrase": "existing_methods"}, {"score": 0.003381607100127276, "phrase": "implementation_code"}, {"score": 0.0032706520949775065, "phrase": "model-based_approaches"}, {"score": 0.003163326114997034, "phrase": "model-based_formal_verification_technique"}, {"score": 0.0030391594477173485, "phrase": "model-checking_paradigm"}, {"score": 0.002988868585379496, "phrase": "safecharts_model"}, {"score": 0.0027680095380207756, "phrase": "safety_constraints"}, {"score": 0.0027131212233443137, "phrase": "semantic_equivalents"}, {"score": 0.0026950674053179404, "phrase": "timed_automata"}, {"score": 0.0026152965305133373, "phrase": "safety_constraint_verification"}, {"score": 0.00255488432062653, "phrase": "compositional_model_checker"}, {"score": 0.0025042115651986332, "phrase": "state-graph_manipulator"}, {"score": 0.002421975107313603, "phrase": "urgent_transitions"}, {"score": 0.00235813005446246, "phrase": "risk_semantics"}, {"score": 0.0022730758011263318, "phrase": "priority-based_approach"}, {"score": 0.002235433376874495, "phrase": "resource_usage"}, {"score": 0.002213147136067999, "phrase": "original_safecharts"}, {"score": 0.002198412942421744, "phrase": "unsafe_and_corresponding_solutions"}, {"score": 0.0021620042653528846, "phrase": "application_examples"}, {"score": 0.0021049977753042253, "phrase": "proposed_model-driven_verification"}], "paper_keywords": ["safety-critical systems", " model checking", " safecharts", " extended timed automaton"], "paper_abstract": "With rapid developments in science and technology, we now see the ubiquitous use of different types of safety-critical systems in our daily lives such as in avionics, consumer electronics, and medical systems. In such systems, unintentional design faults might result in injury or even death to human beings. To make sure that safety-critical systems are really safe, there is a need to verify them formally. However, the verification of such systems is getting more and more difficult because designs are becoming very complex. To cope with high design complexity, currently, model-driven architecture design is becoming a well-accepted trend. However, existing methods of testing and standards conformance are restricted to implementation code, so they do not fit very well with model-based approaches. To bridge this gap, we propose a model-based formal verification technique for safety-critical systems. In this work, the model-checking paradigm is applied to the Safecharts model, which was used for modeling but not yet used for verification. Our contributions listed are as follows: First, the safety constraints in Safecharts are mapped to semantic equivalents in timed automata for verification. Second, the theory for safety constraint verification is proven and implemented in a compositional model checker (that is, the State-Graph Manipulator (SGM)). Third, prioritized and urgent transitions are implemented in SGM to model the risk semantics in Safecharts. Finally, it is shown that the priority-based approach to mutual exclusion of resource usage in the original Safecharts is unsafe and corresponding solutions are proposed here. Application examples show the feasibility and benefits of the proposed model-driven verification of safety-critical systems.", "paper_title": "Model checking safety-critical systems using safecharts", "paper_id": "WOS:000245092100010"}