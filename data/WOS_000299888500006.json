{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "prolog-based_programming_system"}, {"score": 0.004420472010542188, "phrase": "constraint_programming_applications"}, {"score": 0.004019797503157808, "phrase": "combinatorial_problem"}, {"score": 0.0032922964156452696, "phrase": "extended_prolog"}, {"score": 0.002909342017421165, "phrase": "third-party_solvers"}, {"score": 0.0026202187680903063, "phrase": "host_environments"}, {"score": 0.0024984517279573906, "phrase": "language_extensions"}, {"score": 0.0024513404432665153, "phrase": "implementation_aspects"}, {"score": 0.0021454671611847507, "phrase": "logic_programming"}, {"score": 0.0021049977753042253, "phrase": "constraint_logic_programming"}], "paper_keywords": ["Prolog", " logic programming system", " constraint", " solver", " modelling"], "paper_abstract": "(ECLPSe)-P-i is a Prolog-based programming system, aimed at the development and deployment of constraint programming applications. It is also used for teaching most aspects of combinatorial problem solving, for example, problem modelling, constraint programming, mathematical programming and search techniques. It uses an extended Prolog as its high-level modelling and control language, complemented by several constraint solver libraries, interfaces to third-party solvers, an integrated development environment and interfaces for embedding into host environments. This paper discusses language extensions, implementation aspects, components, and tools that we consider relevant on the way from Logic Programming to Constraint Logic Programming.", "paper_title": "(ECLPSe)-P-i - From LP to CLP", "paper_id": "WOS:000299888500006"}