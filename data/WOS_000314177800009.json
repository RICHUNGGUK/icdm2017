{"auto_keywords": [{"score": 0.040845749728847636, "phrase": "amf"}, {"score": 0.03356179840026873, "phrase": "amf_configuration"}, {"score": 0.00481495049065317, "phrase": "service_high_availability"}, {"score": 0.004769702911065878, "phrase": "load_balancing"}, {"score": 0.004658426838467567, "phrase": "highly_available_services"}, {"score": 0.004485735417293941, "phrase": "mission-critical_systems"}, {"score": 0.0044435677598780796, "phrase": "transaction-based_ones"}, {"score": 0.004178935413340453, "phrase": "related_api_specifications"}, {"score": 0.004100712177044264, "phrase": "growing_need"}, {"score": 0.00406214911915987, "phrase": "commercial_off-the-shelf_high_availability_solutions"}, {"score": 0.003930000775297499, "phrase": "availability_management_framework"}, {"score": 0.0037309384824565695, "phrase": "high_availability"}, {"score": 0.003678414118674967, "phrase": "application_services"}, {"score": 0.003626626504149897, "phrase": "redundant_application_components"}, {"score": 0.0035587046945919788, "phrase": "amf_cluster"}, {"score": 0.003426640459083931, "phrase": "amf_implementation"}, {"score": 0.003378385493203297, "phrase": "specific_logical_view"}, {"score": 0.0032838979278935814, "phrase": "application's_services"}, {"score": 0.0030735451757603555, "phrase": "complex_error-prone_task"}, {"score": 0.003030247482854539, "phrase": "extensive_domain_knowledge"}, {"score": 0.0028630535573013686, "phrase": "automatic_generation"}, {"score": 0.002836096284133166, "phrase": "amf_configurations"}, {"score": 0.0027567336518542858, "phrase": "configuration_designers"}, {"score": 0.002641823250595624, "phrase": "service_units"}, {"score": 0.0025436978068459565, "phrase": "redundancy_model"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["high availability", " load balancing", " redundancy models", " clustered systems", " Availability Management Framework", " configuration generation"], "paper_abstract": "The need for highly available services is ever increasing in various domains ranging from mission-critical systems to transaction-based ones such as banking. The Service Availability Forum has defined a set of services and related API specifications to address the growing need of commercial off-the-shelf high availability solutions. Among these services, the availability management framework (AMF) is the service responsible for managing the high availability of the application services by coordinating redundant application components deployed on the AMF cluster. To achieve this task, an AMF implementation requires a specific logical view of the organization of the application's services and components, known as an AMF configuration. Developing manually such a configuration is a complex error-prone task that requires extensive domain knowledge. In this paper, we present an approach for the automatic generation of AMF configurations and alleviate the task of configuration designers. One important aspect of the AMF configuration is ranking the service units, when it is required by the redundancy model, for the assignment of the workload by AMF at runtime. Our approach includes a technique for generating these rankings in such a way that guarantees load balancing even after the occurrence of a failure. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Automatic configuration generation for service high availability with load balancing", "paper_id": "WOS:000314177800009"}