{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "substitution-tolerant_subgraph_isomorphism"}, {"score": 0.0440490531162443, "phrase": "subgraph_isomorphism"}, {"score": 0.015173836365283947, "phrase": "technical_drawings"}, {"score": 0.01358551726947635, "phrase": "pattern_graph"}, {"score": 0.013347074786027204, "phrase": "target_graph"}, {"score": 0.004403480614319231, "phrase": "specific_class"}, {"score": 0.004364310576600359, "phrase": "error-tolerant_isomorphism"}, {"score": 0.003973398317120165, "phrase": "label_substitutions"}, {"score": 0.0038855864345030563, "phrase": "edge_insertion"}, {"score": 0.0036991458715587163, "phrase": "pattern_recognition_problems"}, {"score": 0.003601235776892337, "phrase": "real_values"}, {"score": 0.0035532533960012298, "phrase": "exact_matching"}, {"score": 0.0032059442984238664, "phrase": "integer_linear_program"}, {"score": 0.0031774089504226625, "phrase": "ilp"}, {"score": 0.0030932495918679285, "phrase": "general_ilp_solver"}, {"score": 0.002741269087816162, "phrase": "searched_graph"}, {"score": 0.0026806139086152365, "phrase": "editing_operations"}, {"score": 0.0026095920086044145, "phrase": "minimal_cost"}, {"score": 0.0024953686545818587, "phrase": "synthetic_graphs"}, {"score": 0.0024401411219526774, "phrase": "symbol_detection"}, {"score": 0.0023754752864092437, "phrase": "second_case"}, {"score": 0.002354302193867031, "phrase": "document_and_symbol_images"}, {"score": 0.0023125191783901367, "phrase": "vector-attributed_region_adjacency_graphs"}, {"score": 0.002271476019266231, "phrase": "segmentation_process"}, {"score": 0.002251227801482381, "phrase": "obtained_results"}, {"score": 0.002162316557411786, "phrase": "optimization_process"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Substitution-tolerant subgraph isomorphism", " Integer linear programming", " Symbol spotting"], "paper_abstract": "This paper tackles the problem of substitution-tolerant subgraph isomorphism which is a specific class of error-tolerant isomorphism. This problem aims at finding a subgraph isomorphism of a pattern graph S in a target graph g. This isomorphism only considers label substitutions and forbids vertex and edge insertion in g. This kind of subgraph isomorphism is often needed in pattern recognition problems when graphs are attributed with real values and no exact matching can be found between attributes due to noise. Our proposal to solve the problem of substitution-tolerant subgraph isomorphism relies on its formulation in the Integer Linear Program (ILP) formalism. Using a general ILP solver, the approach is able to find, if one exists, a mapping of a pattern graph into a target graph such that the topology of the searched graph is kept and the editing operations between the labels have a minimal cost. This technique is evaluated on both a set of synthetic graphs and a problem of symbol detection in technical drawings. In the second case, document and symbol images are represented by vector-attributed Region Adjacency Graphs built from a segmentation process. Obtained results demonstrate the relevance of considering subgraph isomorphism as an optimization process. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "An integer linear program for substitution-tolerant subgraph isomorphism and its use for symbol spotting in technical drawings", "paper_id": "WOS:000308271000013"}