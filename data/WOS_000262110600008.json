{"auto_keywords": [{"score": 0.03396961743706252, "phrase": "sensor_resolution"}, {"score": 0.004782718554230406, "phrase": "unsupervised_learning"}, {"score": 0.004643998052037445, "phrase": "input"}, {"score": 0.0046092435167207095, "phrase": "biological_neural_systems"}, {"score": 0.004517275498868226, "phrase": "topological_relations"}, {"score": 0.004397487039229447, "phrase": "sensory_input_surface"}, {"score": 0.004368037394395782, "phrase": "artificial_systems"}, {"score": 0.0042521895049768875, "phrase": "sensor_arrangement"}, {"score": 0.004084129504819342, "phrase": "run_time"}, {"score": 0.003935892934907777, "phrase": "topographic_maps"}, {"score": 0.0038186039088445524, "phrase": "unsupervised_neural_spike-timing-based_learning_rule"}, {"score": 0.0037803095615679717, "phrase": "hebbian"}, {"score": 0.0036923623384423816, "phrase": "spatiotemporal_coherence"}, {"score": 0.0036553070575015344, "phrase": "external_world"}, {"score": 0.003558294449586273, "phrase": "existing_algorithms"}, {"score": 0.003498968822873231, "phrase": "known_topography"}, {"score": 0.0034638476252104706, "phrase": "target_map"}, {"score": 0.003417565253539315, "phrase": "novel_method"}, {"score": 0.0033718991936259038, "phrase": "edge_elements"}, {"score": 0.0031845067058084583, "phrase": "temporal_learning_window_parameters"}, {"score": 0.003110396267535251, "phrase": "user-specified_constants"}, {"score": 0.002957327365538023, "phrase": "parameter_extraction_method"}, {"score": 0.002907992115184249, "phrase": "small-stimulus_method"}, {"score": 0.0027741761880779535, "phrase": "real_data"}, {"score": 0.0027187231747900814, "phrase": "event-based_temporal_contrast_silicon_retina"}, {"score": 0.0026023381988430666, "phrase": "correct_neighborhood_relations"}, {"score": 0.0025761937402886954, "phrase": "silicon_retina"}, {"score": 0.002541741549046619, "phrase": "real-world_input"}, {"score": 0.00251620434048784, "phrase": "driving_scene"}, {"score": 0.002465895175961543, "phrase": "sensory_floor"}, {"score": 0.00243291444168046, "phrase": "human_pedestrian_traffic"}, {"score": 0.00241658945942583, "phrase": "residual_errors"}, {"score": 0.002344468886431959, "phrase": "learned_topological_representations"}, {"score": 0.0022744957687536307, "phrase": "simulated_damage"}, {"score": 0.002206606452557159, "phrase": "modular_autonomous_systems"}, {"score": 0.0021049977753042253, "phrase": "design_time"}], "paper_keywords": [""], "paper_abstract": "Biological neural systems must grow their own connections and maintain topological relations between elements that are related to the sensory input surface. Artificial systems have traditionally prewired such maps, but the sensor arrangement is not always known and can be expensive to specify before run time. Here we present a method for learning and updating topographic maps in systems comprising modular, event-based elements. Using an unsupervised neural spike-timing-based learning rule combined with Hebbian learning, our algorithm uses the spatiotemporal coherence of the external world to train its network. It improves on existing algorithms by not assuming a known topography of the target map and includes a novel method for automatically detecting edge elements. We show how, for stimuli that are small relative to the sensor resolution, the temporal learning window parameters can be determined without using any user-specified constants. For stimuli that are larger relative to the sensor resolution, we provide a parameter extraction method that generally outperforms the small-stimulus method but requires one user-specified constant. The algorithm was tested on real data from a 64 x 64-pixel section of an event-based temporal contrast silicon retina and a 360-tile tactile luminous floor. It learned 95.8% of the correct neighborhood relations for the silicon retina within about 400 seconds of real-world input from a driving scene and 98.1% correct for the sensory floor after about 160 minutes of human pedestrian traffic. Residual errors occurred in regions receiving little or ambiguous input, and the learned topological representations were able to update automatically in response to simulated damage. Our algorithm has applications in the design of modular autonomous systems in which the interfaces between components are learned during operation rather than at design time.", "paper_title": "Getting to Know Your Neighbors: Unsupervised Learning of Topography from Real-World, Event-Based Input", "paper_id": "WOS:000262110600008"}