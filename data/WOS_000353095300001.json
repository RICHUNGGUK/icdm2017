{"auto_keywords": [{"score": 0.03363896917055256, "phrase": "interactive_services"}, {"score": 0.02866524244464314, "phrase": "batch_jobs"}, {"score": 0.00481495049065317, "phrase": "leasing_cloud_resources"}, {"score": 0.004772367030970874, "phrase": "hybrid_workloads"}, {"score": 0.004730158389701481, "phrase": "cloud_service_providers"}, {"score": 0.004688321299229397, "phrase": "leasing_resources"}, {"score": 0.004646852519870358, "phrase": "cloud_vendors"}, {"score": 0.004585332915477379, "phrase": "pay-per-use_service_model"}, {"score": 0.00446471538346719, "phrase": "rental_costs"}, {"score": 0.004405596416783185, "phrase": "users'_computing_needs"}, {"score": 0.00408501512749186, "phrase": "early_algorithms"}, {"score": 0.0032706520949775065, "phrase": "vm_instances"}, {"score": 0.003128336741911927, "phrase": "significant_resources"}, {"score": 0.0030459283281463953, "phrase": "coordinated_scheduling_algorithm"}, {"score": 0.002900426826591769, "phrase": "priority_function"}, {"score": 0.002824005136794786, "phrase": "stringent_service_response_time"}, {"score": 0.0027373807320805084, "phrase": "residual_resources"}, {"score": 0.002629889135655667, "phrase": "queueing_analysis"}, {"score": 0.0025950024597986366, "phrase": "resource_allocations"}, {"score": 0.002537880772794665, "phrase": "resource_requests"}, {"score": 0.0023845255359681143, "phrase": "residual_capacity"}, {"score": 0.0023633857274905977, "phrase": "spot_instance_pricing"}, {"score": 0.0023113506171584157, "phrase": "real-world_interactive_services"}, {"score": 0.0022404162042797262, "phrase": "practical_applications"}, {"score": 0.0021910825909008946, "phrase": "numerical_analysis"}, {"score": 0.002123831297790248, "phrase": "existing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "cost_efficiency"}], "paper_keywords": ["Cloud computing", " Cost efficient", " Interactive services", " Batch jobs"], "paper_abstract": "Cloud service providers, leasing resources from cloud vendors under the pay-per-use service model, would want to minimize rental costs while meeting users' computing needs. They typically serve the following two types of workloads: interactive service requests and batch jobs. Early algorithms were devised to deal with either type of workloads, but not both. In the presence of a mixture of both types of workloads, we observe that these algorithms would often overproduce virtual-machine (VM) instances, resulting in much higher rental costs than necessary. In particular, we show that the VM instances generated by these algorithms for interactive services tend to incur significant resources unused. We present a coordinated scheduling algorithm to solve this problem. First, we use a priority function to handle interactive services, meet stringent service response time, and in the same time collect residual resources needed for batch jobs. Second, we use queueing analysis to adjust resource allocations based on predictions of resource requests for interactive services. Third, we schedule batch jobs according to the dynamics of residual capacity and spot instance pricing. Using traces from real-world interactive services and a library of batch jobs in practical applications, we demonstrate using numerical analysis that our coordinated scheduling is superior to the existing algorithms on cost efficiency designed for either type of workloads. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Cost-efficient coordinated scheduling for leasing cloud resources on hybrid workloads", "paper_id": "WOS:000353095300001"}