{"auto_keywords": [{"score": 0.049146612112995945, "phrase": "graphs"}, {"score": 0.004834000163524031, "phrase": "g."}, {"score": 0.00481495049065317, "phrase": "spanning_trees"}, {"score": 0.004406994912939125, "phrase": "spanning_tree_t"}, {"score": 0.004342430078306461, "phrase": "graph_g"}, {"score": 0.004093453936415085, "phrase": "current_vertex_x"}, {"score": 0.0036553070575015344, "phrase": "full_knowledge"}, {"score": 0.003479692058963528, "phrase": "-neighborhood_d"}, {"score": 0.003312486229143855, "phrase": "small_integer"}, {"score": 0.0032319109979344184, "phrase": "small_piece"}, {"score": 0.003200230621987751, "phrase": "global_information"}, {"score": 0.0031532895341013297, "phrase": "tree_t"}, {"score": 0.0027200305495826797, "phrase": "particular_families"}, {"score": 0.0026277995163948263, "phrase": "locally_connected_spanning_trees"}, {"score": 0.002576503437739865, "phrase": "bounded_length"}, {"score": 0.002551231163230566, "phrase": "largest_induced_cycle"}, {"score": 0.0025014259919355453, "phrase": "bounded_tree-length"}, {"score": 0.0024525907271610125, "phrase": "bounded_hyperbolicity"}, {"score": 0.0022777800735119405, "phrase": "breadth-first-search-tree_guarantees"}, {"score": 0.0021682027434117095, "phrase": "obtained_results"}, {"score": 0.0021049977753042253, "phrase": "constant_factor"}], "paper_keywords": ["Graph algorithms", " Navigating in graphs", " Spanning trees", " Routing in graphs", " Distances", " Ancestry", " k-Chordal graphs", " Tree-length lambda graphs", " delta-Hyperbolic graphs", " Lower bounds"], "paper_abstract": "In this paper, we investigate three strategies of how to use a spanning tree T of a graph G to navigate in G, i.e., to move from a current vertex x towards a destination vertex y via a path that is close to optimal. In each strategy, each vertex v has full knowledge of its neighborhood N (G) [v] in G (or, k-neighborhood D (k) (v,G), where k is a small integer) and uses a small piece of global information from spanning tree T (e.g., distance or ancestry information in T), available locally at v, to navigate in G. We investigate advantages and limitations of these strategies on particular families of graphs such as graphs with locally connected spanning trees, graphs with bounded length of largest induced cycle, graphs with bounded tree-length, graphs with bounded hyperbolicity. For most of these families of graphs, the ancestry information from a Breadth-First-Search-tree guarantees short enough routing paths. In many cases, the obtained results are optimal up to a constant factor.", "paper_title": "How to Use Spanning Trees to Navigate in Graphs", "paper_id": "WOS:000317973900001"}