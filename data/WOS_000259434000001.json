{"auto_keywords": [{"score": 0.048268778929004295, "phrase": "sensitive_task"}, {"score": 0.04249946592512057, "phrase": "high-level_security_policy"}, {"score": 0.03962151848514054, "phrase": "duty_policy"}, {"score": 0.02999893801846868, "phrase": "users'_attributes"}, {"score": 0.028177397901254963, "phrase": "high-level_policies"}, {"score": 0.00481495049065317, "phrase": "high-level_security_policies"}, {"score": 0.0046928556063004214, "phrase": "security_controls"}, {"score": 0.003522027550662857, "phrase": "low-level_enforcement_schemes"}, {"score": 0.003316884515934182, "phrase": "high-level_requirement"}, {"score": 0.003218823621926739, "phrase": "individual_steps"}, {"score": 0.0027230880516264685, "phrase": "novel_algebra"}, {"score": 0.0026767629720554397, "phrase": "formal_specification"}, {"score": 0.002467228805628948, "phrase": "duty_considerations"}, {"score": 0.0023333715029833007, "phrase": "algebraic_properties"}, {"score": 0.0022449697898020947, "phrase": "potential_mechanisms"}, {"score": 0.0021322775033565805, "phrase": "computational_problems"}, {"score": 0.0021049977753042253, "phrase": "policy_analysis"}], "paper_keywords": ["security", " theory", " verification", " access control", " separation of duty", " policy design"], "paper_abstract": "The process of introducing security controls into a sensitive task, which we call secure task design in this article, consists of two steps: high-level security policy design and low-level enforcement scheme design. A high-level security policy states an overall requirement for a sensitive task. One example of a high-level security policy is a separation of duty policy, which requires a task to be performed by a team of at least k users. Unlike low-level enforcement schemes such as security constraints in workflows, a separation of duty policy states a high-level requirement about the task without referring to individual steps in the task. While extremely important and widely used, separation of duty policies state only requirements on the number of users involved in the task and do not capture the requirements on these users' attributes. In this article, we introduce a novel algebra that enables the formal specification of high-level policies that combine requirements on users' attributes with requirements on the number of users motivated by separation of duty considerations. We give the syntax and semantics of the algebra and study algebraic properties of its operators. After that, we study potential mechanisms to enforce high-level policies specified in the algebra and a number of computational problems related to policy analysis and enforcement.", "paper_title": "Beyond separation of duty: An algebra for specifying high-level security policies", "paper_id": "WOS:000259434000001"}