{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "unknown_graph"}, {"score": 0.00450198136261303, "phrase": "searched_graph"}, {"score": 0.004176102823067887, "phrase": "physical_sensor"}, {"score": 0.0037828412206668206, "phrase": "required_exploration_actions"}, {"score": 0.0033860360186761533, "phrase": "existing_algorithms"}, {"score": 0.003306559295382181, "phrase": "known_graph"}, {"score": 0.003241750934419473, "phrase": "novel_heuristic_algorithm"}, {"score": 0.0031035949505887083, "phrase": "probabilistic_knowledge"}, {"score": 0.002947868524740683, "phrase": "required_exploration"}, {"score": 0.002901538668877986, "phrase": "additional_knowledge"}, {"score": 0.002822260183474687, "phrase": "monte-carlo"}, {"score": 0.002701877448139625, "phrase": "total_exploration_cost"}, {"score": 0.0026594033724490172, "phrase": "case_study"}, {"score": 0.002596937660779953, "phrase": "different_heuristic_algorithms"}, {"score": 0.0025359354516609795, "phrase": "k-clique_pattern"}, {"score": 0.0024763626300729575, "phrase": "complete_bipartite_pattern"}, {"score": 0.002456816881853114, "phrase": "experimental_results"}, {"score": 0.0023520340492933383, "phrase": "proposed_approaches"}, {"score": 0.0023334673218688437, "phrase": "random_and_scale-free_graphs"}, {"score": 0.002278639906498682, "phrase": "online_web_crawler_application"}, {"score": 0.0022517100995552443, "phrase": "google_scholar"}, {"score": 0.002172811149894415, "phrase": "proposed_heuristic_algorithms"}, {"score": 0.00212175050242788, "phrase": "searched_pattern"}, {"score": 0.0021049977753042253, "phrase": "substantially_less_exploration_cost"}], "paper_keywords": ["Heuristic search", " unknown graphs", " subgraph isomorphism"], "paper_abstract": "Solving a problem in an unknown graph requires an agent to iteratively explore parts of the searched graph. Exploring an unknown graph can be very costly, for example, when the exploration requires activating a physical sensor or performing network I/O. In this paper we address the problem of searching for a given input pattern in an unknown graph, while minimizing the number of required exploration actions. This problem is analyzed theoretically. Then, algorithms that choose which part of the environment to explore next are presented. Among these are adaptations of existing algorithms for finding cliques in a known graph as well as a novel heuristic algorithm (Pattern*). Additionally, we investigate how probabilistic knowledge of the existence of edges can be used to further minimize the required exploration. With this additional knowledge we propose a Markov Decision Problem (MDP) formulation and a Monte-Carlo based algorithm (RPattern*) which greatly reduces the total exploration cost. As a case study, we demonstrate how the different heuristic algorithms can be implemented for the k-clique pattern as well as for the complete bipartite pattern. Experimental results are provided that demonstrate the strengths and weaknesses of the proposed approaches on random and scale-free graphs as well as on an online web crawler application searching in Google Scholar. In all the experimental settings we have tried, the proposed heuristic algorithms were able to find the searched pattern with substantially less exploration cost than random exploration.", "paper_title": "Finding patterns in an unknown graph", "paper_id": "WOS:000307702000003"}