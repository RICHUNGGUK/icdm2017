{"auto_keywords": [{"score": 0.045998857053669226, "phrase": "data_types"}, {"score": 0.00481495049065317, "phrase": "automatic_reconstruction_of_data_types"}, {"score": 0.004484596684703308, "phrase": "automatic_reconstruction"}, {"score": 0.004289686492089576, "phrase": "assembler_code"}, {"score": 0.004139850082354509, "phrase": "c_compiler"}, {"score": 0.003527550673371394, "phrase": "static_memory"}, {"score": 0.003374094774912924, "phrase": "iterative_algorithm"}, {"score": 0.003005539334280134, "phrase": "derived_data_types"}, {"score": 0.0027989800906333784, "phrase": "possible_offsets"}, {"score": 0.0024490834773668153, "phrase": "array_elements"}, {"score": 0.0021049977753042253, "phrase": "assembler_codes"}], "paper_keywords": [""], "paper_abstract": "An algorithm for the automatic reconstruction of data types from the assembler code produced by a C compiler is described. The types of the variables that are placed on the stack and in the static memory are reconstructed using an iterative algorithm that uses a lattice over the properties of the data types. The derived data types are reconstructed by constructing the set of possible offsets of the elements of these types ( fields in the case of structures and array elements in the case of arrays). This algorithm is used in the tool for decompiling assembler codes into C that is currently developed by the authors.", "paper_title": "Automatic Reconstruction of Data Types in the Decompilation Problem", "paper_id": "WOS:000266389300006"}