{"auto_keywords": [{"score": 0.04801141171062484, "phrase": "data_structure"}, {"score": 0.015719716506582538, "phrase": "error_resilience"}, {"score": 0.004776484866276242, "phrase": "ordered_binary_decision_diagrams"}, {"score": 0.004719359108879602, "phrase": "ordered_binary_decision_diagram"}, {"score": 0.004497576466646301, "phrase": "increasing_number"}, {"score": 0.004425979295788883, "phrase": "computer_science"}, {"score": 0.00432070565627091, "phrase": "data_mining"}, {"score": 0.004234884779773412, "phrase": "data_protection"}, {"score": 0.004134137523409649, "phrase": "discrete_structures"}, {"score": 0.004101088357088207, "phrase": "boolean_functions"}, {"score": 0.0038152404172111815, "phrase": "resilient_version"}, {"score": 0.0036504185323466575, "phrase": "obdd."}, {"score": 0.003301733505307784, "phrase": "input_variables"}, {"score": 0.0030468495296763617, "phrase": "inherent_redundancy"}, {"score": 0.0028115863316685937, "phrase": "exact_restoring"}, {"score": 0.0027778947555117243, "phrase": "original_obdd"}, {"score": 0.0026900059414552823, "phrase": "classical_software_packages"}, {"score": 0.0024822279007111255, "phrase": "new_canonical_obdd_model"}, {"score": 0.0024524733595572084, "phrase": "index-resilient_reduced_obdd"}, {"score": 0.0023653276631862958, "phrase": "faulty_index"}, {"score": 0.0023369711258107244, "phrase": "reconstruction_cost"}, {"score": 0.0022268964676199292, "phrase": "corrupted_index"}, {"score": 0.002209060366991921, "phrase": "experimental_results"}, {"score": 0.002182573128803447, "phrase": "classical_benchmark_suite"}, {"score": 0.002156402793481102, "phrase": "proposed_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Binary decision diagrams", " Error resilient data structures"], "paper_abstract": "An Ordered Binary Decision Diagram (OBDD) is a data structure that is used in an increasing number of fields of Computer Science (e.g., logic synthesis, program verification, data mining, bioinformatics, and data protection) for representing and manipulating discrete structures and Boolean functions. The purpose of this paper is to study the error resilience of OBDDs and to design a resilient version of this data structure, i.e., a self-repairing OBDD. In particular, we describe some strategies that make reduced ordered OBDDs resilient to errors in the indices, that are associated to the input variables, or in the pointers (i.e., OBDD edges) of the nodes. These strategies exploit the inherent redundancy of the data structure, as well as the redundancy introduced by its efficient implementations. The solutions we propose allow the exact restoring of the original OBDD and are suitable to be applied to classical software packages for the manipulation of OBDDs currently in use. Another result of the paper is the definition of a new canonical OBDD model, called Index-Resilient Reduced OBDD, which guarantees that a node with a faulty index has a reconstruction cost O(r), where r is the number of nodes with corrupted index. Experimental results on a classical benchmark suite validate the proposed approaches. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "On the error resilience of ordered binary decision diagrams", "paper_id": "WOS:000358460200002"}