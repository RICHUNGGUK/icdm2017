{"auto_keywords": [{"score": 0.046626974785833435, "phrase": "generic_software_components"}, {"score": 0.00481495049065317, "phrase": "geometric_programs"}, {"score": 0.004750230206629988, "phrase": "diagrams"}, {"score": 0.004681971826924847, "phrase": "geogram_system"}, {"score": 0.00453144352814823, "phrase": "geometric_computations"}, {"score": 0.004304574865291508, "phrase": "graphical_interface"}, {"score": 0.004205226397573506, "phrase": "known_and_desired_quantities"}, {"score": 0.0040133278382101885, "phrase": "symbolic_geometric_facts"}, {"score": 0.0037592362369401546, "phrase": "new_facts"}, {"score": 0.003689628075766217, "phrase": "new_objects"}, {"score": 0.0036382660173943393, "phrase": "geometric_reasoning"}, {"score": 0.0034238045290210534, "phrase": "user's_intention"}, {"score": 0.0033919477901198716, "phrase": "ambiguous_cases"}, {"score": 0.003162252895465901, "phrase": "knowledge_base"}, {"score": 0.0029069972482610403, "phrase": "known_values"}, {"score": 0.0028664985822266344, "phrase": "local_proofs"}, {"score": 0.0027100527874262446, "phrase": "desired_values"}, {"score": 0.002622755848331379, "phrase": "generic_geometric_program_components"}, {"score": 0.0025264171945423254, "phrase": "line_code"}, {"score": 0.0025028892126605124, "phrase": "specialized_subroutines"}, {"score": 0.002479579797152119, "phrase": "partial_evaluation"}, {"score": 0.002410942838102255, "phrase": "generated_code"}, {"score": 0.00237733844863506, "phrase": "resulting_program"}, {"score": 0.002311525062244175, "phrase": "desired_language"}, {"score": 0.002154835714714195, "phrase": "graphical_traces"}, {"score": 0.0021049977753042253, "phrase": "input_quantities"}], "paper_keywords": ["Design", " Languages", " Algorithms", " Human Factors", " Verification", " Program Generation", " Software Components", " Reusable Libraries", " Geometry", " Theorem Proving", " Visual Programming", " Model-Based Programming"], "paper_abstract": "The GeoGram system [21] generates programs for geometric computations by combining generic software components as specified by diagrams constructed using a graphical interface. The user specifies known and desired quantities. As diagrams are constructed, the system maintains symbolic geometric facts describing the construction. Inferences based on the diagram are used to derive new facts and to introduce new objects based on geometric reasoning, to filter choices presented to the user, to interpret the user's intention in ambiguous cases, to detect over-specification, and to generate the program. A knowledge base of descriptions of generic software components is used to prove that features of the geometry can be computed from known values. These local proofs are combined to guide generation of a program that computes the desired values from inputs. The library of generic geometric program components is used to generate both in-line code and specialized subroutines; partial evaluation improves the efficiency of the generated code. The resulting program is automatically translated into the desired language. The program can also be run interactively to simulate the geometry by generating graphical traces on the diagram as input quantities are varied.", "paper_title": "Generation of Geometric Programs Specified by Diagrams", "paper_id": "WOS:000303558100009"}