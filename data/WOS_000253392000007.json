{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_event-condition-action_rules"}, {"score": 0.004340081802944066, "phrase": "data_coordination"}, {"score": 0.004284100953217494, "phrase": "multidatabase_setting"}, {"score": 0.004228839109569368, "phrase": "proposed_mechanism"}, {"score": 0.004174287115855492, "phrase": "eca_rule_language"}, {"score": 0.004120435930514554, "phrase": "rule_execution_engine"}, {"score": 0.0038447018470115146, "phrase": "traditional_eca_rules"}, {"score": 0.003510507340837656, "phrase": "event_language"}, {"score": 0.0033909518548844047, "phrase": "formal_semantics"}, {"score": 0.0033471722682967046, "phrase": "multidatabase_environment"}, {"score": 0.003261295948815592, "phrase": "wide_variety"}, {"score": 0.0032331613500559764, "phrase": "composite_events"}, {"score": 0.00319141242685261, "phrase": "condition_language"}, {"score": 0.003163878786694538, "phrase": "boolean_algebra_operators"}, {"score": 0.0029776614744264724, "phrase": "simple_or_composite_actions"}, {"score": 0.0029392020223716966, "phrase": "execution_model_partitions_rules"}, {"score": 0.0028513785049061767, "phrase": "relevant_databases"}, {"score": 0.0024393978073660757, "phrase": "experimental_evaluation"}, {"score": 0.0023664730217196252, "phrase": "naive_centralized_execution_model"}, {"score": 0.0022957232752482196, "phrase": "prototype_implementation"}, {"score": 0.0022562464662197867, "phrase": "experimental_results"}, {"score": 0.0021604924928015283, "phrase": "on-going_project"}, {"score": 0.0021233361369222344, "phrase": "data_coordination_techniques"}, {"score": 0.0021049977753042253, "phrase": "data_sharing_settings"}], "paper_keywords": ["ECA rules", " multidatabases", " data coordination", " distributed execution"], "paper_abstract": "We describe a mechanism based on distributed Event-Condition-Action (ECA) rules that supports data coordination in a multidatabase setting. The proposed mechanism includes an ECA rule language and a rule execution engine that transforms rules when they are first posted, and then coordinates their execution. Like traditional ECA rules, our ECA rule language has three parts: an event language, a condition language, and an action language. The event language provides a set of operators with a formal semantics for a multidatabase environment, and which allows a wide variety of composite events. The condition language provides Boolean algebra operators that take as operands either composite or simple conditions. The action language provides a conjunction of simple or composite actions. The execution model partitions rules to more easily manageable forms, distributes them to relevant databases, monitors their execution and composes their evaluations. The mechanism has been designed in a manner that minimizes the number of messages that need to be exchanged over the network. We have also conducted an experimental evaluation to compare the implementation with a naive centralized execution model. The paper also presents a prototype implementation as well as experimental results on its performance. This work is part of an on-going project intended to develop data coordination techniques for data sharing settings.", "paper_title": "Supporting distributed event-condition-action rules in a multidatabase environment", "paper_id": "WOS:000253392000007"}