{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "low-level_faults"}, {"score": 0.004737579882204798, "phrase": "modern_microprocessor_controller"}, {"score": 0.004488505301335364, "phrase": "control_logic"}, {"score": 0.00441635700580562, "phrase": "modern_microprocessor"}, {"score": 0.004252469672259375, "phrase": "typical_workload"}, {"score": 0.0036950408193035284, "phrase": "online_testability"}, {"score": 0.0034442607586033657, "phrase": "extensive_fault_simulation_infrastructure"}, {"score": 0.002599763359352916, "phrase": "extensive_fault_injection_campaigns"}, {"score": 0.0024896081630179194, "phrase": "valuable_observations"}, {"score": 0.0023841092222805253, "phrase": "instruction-level_error_types"}, {"score": 0.002246292543825748, "phrase": "gate-level_faults"}, {"score": 0.0021049977753042253, "phrase": "transient_errors"}], "paper_keywords": ["Fault simulation", " instruction-level error", " microprocessor controller", " concurrent error detection"], "paper_abstract": "We investigate the correlation between low-level faults in the control logic of a modern microprocessor and their instructionlevel impact on the execution of typical workload. Such information can prove immensely useful in accurately assessing and prioritizing faults with regards to their criticality, as well as commensurately allocating resources to enhance online testability and error/fault resilience through concurrent error detection/correction methods. To this end, we developed an extensive fault simulation infrastructure which allows injection of stuck-at faults and transient errors of arbitrary starting time and duration, as well as cost-effective simulation and classification of their repercussions into various instruction-level error types. As a test vehicle for our study, we employ a superscalar, dynamically-scheduled, out-of-order, Alpha-like microprocessor, on which we execute SPEC2000 integer benchmarks. Extensive fault injection campaigns in control modules of this microprocessor facilitate valuable observations regarding the distribution of low-level faults into the instruction-level error types that they cause. Experimentation with both Register Transfer (RT-) and Gate-Level faults, as well as with both stuck-at faults and transient errors, confirms the validity and corroborates the utility of these observations.", "paper_title": "Instruction-Level Impact Analysis of Low-Level Faults in a Modern Microprocessor Controller", "paper_id": "WOS:000293289500005"}