{"auto_keywords": [{"score": 0.02880089396757314, "phrase": "pact"}, {"score": 0.00481495049065317, "phrase": "complex_xquery"}, {"score": 0.0041555469216463855, "phrase": "tree-structured_formats"}, {"score": 0.004054866610429281, "phrase": "xml"}, {"score": 0.003988902947110152, "phrase": "json."}, {"score": 0.0037667216301666196, "phrase": "highly_scalable_algorithms"}, {"score": 0.003414153126809511, "phrase": "massively_parallel_processing_platforms"}, {"score": 0.003069230909006614, "phrase": "complex_nested_data_processing"}, {"score": 0.002970272019380979, "phrase": "xquery"}, {"score": 0.0028744731986533076, "phrase": "novel_algorithms"}, {"score": 0.0025839934887801753, "phrase": "mapreduce"}, {"score": 0.002480154140902474, "phrase": "many-input_tasks"}, {"score": 0.002380534385718454, "phrase": "first_formal_translation"}, {"score": 0.0023418133729330303, "phrase": "complex_xquery_algebraic_expressions"}], "paper_keywords": ["XQuery processing", " XQuery parallelization", " XML data management"], "paper_abstract": "Increasing volumes of data are being produced and exchanged over the Web, in particular in tree-structured formats such as XML or JSON. This leads to a need of highly scalable algorithms and tools for processing such data, capable to take advantage of massively parallel processing platforms. This work considers the problem of efficiently parallelizing the execution of complex nested data processing, expressed in XQuery. We provide novel algorithms showing how to translate such queries into PACT, a recent framework generalizing MapReduce in particular by supporting many-input tasks. We present the first formal translation of complex XQuery algebraic expressions into PACT plans, and demonstrate experimentally the efficiency and scalability of our approach.", "paper_title": "PAXQuery: Efficient Parallel Processing of Complex XQuery", "paper_id": "WOS:000355937800017"}