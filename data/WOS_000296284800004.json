{"auto_keywords": [{"score": 0.03832185028118783, "phrase": "guarded_region"}, {"score": 0.00481495049065317, "phrase": "algorithmic_foundations"}, {"score": 0.0039114753002009485, "phrase": "adjacent_vertices"}, {"score": 0.003378385493203297, "phrase": "minimum_number"}, {"score": 0.003030247482854539, "phrase": "robber's_or_the_cops'_regions"}, {"score": 0.0029039692582303904, "phrase": "computational_complexity"}, {"score": 0.0027961342030212353, "phrase": "chosen_restriction"}, {"score": 0.0027050595279115015, "phrase": "robber's_region"}, {"score": 0.0025678829712650437, "phrase": "polynomial_time"}, {"score": 0.0023470862747075228, "phrase": "decision_version"}, {"score": 0.002293134405818406, "phrase": "np"}, {"score": 0.002155412043665635, "phrase": "directed_acyclic_graph"}, {"score": 0.0021050670522055545, "phrase": "pspace"}], "paper_keywords": ["Game of Cops and Robbers", " Guarding of vertices", " Winning strategy", " Complexity", " Algorithms", " Approximation"], "paper_abstract": "We initiate the study of the algorithmic foundations of games in which a set of cops has to guard a region in a graph (or digraph) against a robber. The robber and the cops are placed on vertices of the graph; they take turns in moving to adjacent vertices (or staying). The goal of the robber is to enter the guarded region at a vertex with no cop on it. The problem is to find the minimum number of cops needed to prevent the robber from entering the guarded region. The problem is highly non-trivial even if the robber's or the cops' regions are restricted to very simple graphs. The computational complexity of the problem depends heavily on the chosen restriction. In particular, if the robber's region is only a path, then the problem can be solved in polynomial time. When the robber moves in a tree (or even in a star), then the decision version of the problem is NP-complete. Furthermore, if the robber is moving in a directed acyclic graph, the problem becomes PSPACE-complete.", "paper_title": "How to Guard a Graph?", "paper_id": "WOS:000296284800004"}