{"auto_keywords": [{"score": 0.0438193436311179, "phrase": "instance_pairs"}, {"score": 0.012109290447049137, "phrase": "different_rank_pairs"}, {"score": 0.01076182048638348, "phrase": "lower_ranks"}, {"score": 0.00481495049065317, "phrase": "new_method"}, {"score": 0.004231699728933577, "phrase": "binary_classification"}, {"score": 0.0040186038781533946, "phrase": "support_vector_machines"}, {"score": 0.0037769520261285872, "phrase": "incorrect_classifications"}, {"score": 0.003441352119167824, "phrase": "information_retrieval"}, {"score": 0.003405948098114941, "phrase": "negative_effects"}, {"score": 0.0033190180867511605, "phrase": "higher_ranks"}, {"score": 0.0029620573986902416, "phrase": "cost-sensitive_learning"}, {"score": 0.002769395841379498, "phrase": "different_losses"}, {"score": 0.0026297428083782875, "phrase": "cost-sensitive_loss_function"}, {"score": 0.0025625729433234623, "phrase": "ranking_svm_model"}, {"score": 0.0024842242921857705, "phrase": "loss_function"}, {"score": 0.0024586427394152196, "phrase": "simulation_results"}, {"score": 0.0023346234464901978, "phrase": "practical_settings"}, {"score": 0.002286781334850213, "phrase": "experimental_results"}, {"score": 0.0022053994402287925, "phrase": "existing_methods"}, {"score": 0.0021826828321952615, "phrase": "ranking_svm"}, {"score": 0.0021601997088758957, "phrase": "real_information_retrieval_tasks"}, {"score": 0.002126907587540404, "phrase": "document_search"}, {"score": 0.0021049977753042253, "phrase": "definition_search"}], "paper_keywords": [""], "paper_abstract": "In this paper, we propose a new method for learning to rank. 'Ranking SVM' is a method for performing the task. It formulizes the problem as that of binary classification on instance pairs and performs the classification by means of Support Vector Machines (SVM). In Ranking SVM, the losses for incorrect classifications of instance pairs between different rank pairs are defined as the same. We note that in many applications such as information retrieval the negative effects of making errors between higher ranks and lower ranks are larger than making errors among lower ranks. Therefore, it is natural to bring in the idea of cost-sensitive learning to learning to rank, or more precisely, to set up different losses for misclassification of instance pairs between different rank pairs. Given a cost-sensitive loss function we can construct a Ranking SVM model on the basis of the loss function. Simulation results show that our method works better than Ranking SVM in practical settings of ranking. Experimental results also indicate that our method can outperform existing methods including Ranking SVM on real information retrieval tasks such as document search and definition search.", "paper_title": "Cost-sensitive learning of SVM for ranking", "paper_id": "WOS:000242308000081"}