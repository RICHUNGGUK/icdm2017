{"auto_keywords": [{"score": 0.026445207124299385, "phrase": "clarification_patterns"}, {"score": 0.00481495049065317, "phrase": "continuous_requirements"}, {"score": 0.004718897469501381, "phrase": "software_projects"}, {"score": 0.004671588539217021, "phrase": "large_and_often_distributed_teams"}, {"score": 0.004397487039229447, "phrase": "online_tools"}, {"score": 0.004331501320993783, "phrase": "mailing_lists"}, {"score": 0.004288059466938456, "phrase": "bug_tracking_systems"}, {"score": 0.004223708778943785, "phrase": "online_discussion_forums"}, {"score": 0.004016072233242585, "phrase": "initial_ideas"}, {"score": 0.0038186039088445524, "phrase": "stable_requirement"}, {"score": 0.0037235274565193665, "phrase": "expected_course"}, {"score": 0.003487222504700868, "phrase": "better_alignment"}, {"score": 0.003452218803245602, "phrase": "project_goals"}, {"score": 0.003233075944817365, "phrase": "development_cycle"}, {"score": 0.0032006150973842846, "phrase": "negative_consequences"}, {"score": 0.002907992115184249, "phrase": "project_managers"}, {"score": 0.0028642924503126154, "phrase": "timely_awareness"}, {"score": 0.0027788478707700274, "phrase": "automatic_analysis"}, {"score": 0.002750934994181092, "phrase": "stakeholders'_online_requirement_communication"}, {"score": 0.002682370021834353, "phrase": "clarification_classifier"}, {"score": 0.002628747284714371, "phrase": "requirements_communication"}, {"score": 0.0025503112711036994, "phrase": "clarification_events"}, {"score": 0.002388283252319309, "phrase": "communication_patterns"}, {"score": 0.0022252591643049744, "phrase": "case_study"}], "paper_keywords": ["Requirements clarification patterns", " Distributed requirements engineering", " Communication of requirements", " Continuous requirements engineering"], "paper_abstract": "In software projects involving large and often distributed teams, requirements evolve through the collaboration of many stakeholders, supported by online tools such as mailing lists, bug tracking systems, or online discussion forums. In this collaboration, requirements typically evolve from initial ideas, through clarification, to the implementation of a stable requirement. Deviations from this expected course might indicate requirements that are poorly understood, need further negotiation, or better alignment with project goals. If not addressed timely, such problems can surface late in the development cycle with negative consequences such as rework, missed schedules, or overrun budget. This paper presents an approach that provides project managers' with timely awareness of such requirements-related risks, based on automatic analysis of stakeholders' online requirement communication. We describe a clarification classifier that automatically analyzes requirements communication in a project and detects clarification events, a catalog of clarification patterns, and a pattern matcher that suggests communication patterns based on our pattern catalog. Our approach has been empirically constructed and evaluated in a case study in the Rational Team project. We discuss the applicability of our approach in other projects as well as avenues for extending our pattern catalog toward a theory of clarification patterns.", "paper_title": "Patterns of continuous requirements clarification", "paper_id": "WOS:000361477100003"}