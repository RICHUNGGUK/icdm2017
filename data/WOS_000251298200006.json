{"auto_keywords": [{"score": 0.025104851262901372, "phrase": "orc"}, {"score": 0.00481495049065317, "phrase": "irregular_register_files"}, {"score": 0.004767826806287385, "phrase": "clustered_vliw_dsp_processors"}, {"score": 0.004698000536608171, "phrase": "wide_variety"}, {"score": 0.004652016085325825, "phrase": "register_file_architectures"}, {"score": 0.004561386908745206, "phrase": "embedded_processors"}, {"score": 0.004321118442104989, "phrase": "power_dissipation"}, {"score": 0.004133940019630129, "phrase": "traditional_unified_register_file_structures"}, {"score": 0.004013662619667083, "phrase": "novel_register_allocation_scheme"}, {"score": 0.003954837422946628, "phrase": "clustered_vliw_dsp"}, {"score": 0.0038397509389856625, "phrase": "distinctively_banked_register_files"}, {"score": 0.0037834649508375544, "phrase": "port_access"}, {"score": 0.003601715012418258, "phrase": "register_files"}, {"score": 0.0035141291835319682, "phrase": "power_consumption"}, {"score": 0.0034118234596993836, "phrase": "cluster-based_design"}, {"score": 0.0031223774204093713, "phrase": "register_file_demands"}, {"score": 0.0030017207229983385, "phrase": "register_assignment"}, {"score": 0.002928682556953258, "phrase": "increasing_instruction-level_parallelism"}, {"score": 0.0028574164693918433, "phrase": "heuristic_algorithm"}, {"score": 0.0026148807877309417, "phrase": "register_allocation"}, {"score": 0.0025262061502713683, "phrase": "irregular_register_file_architectures"}, {"score": 0.002323142666222693, "phrase": "significant_performance_improvement"}, {"score": 0.0022890371899188466, "phrase": "original_orc's_approach"}, {"score": 0.0022005118194652704, "phrase": "optimized_approach"}, {"score": 0.0021789194955896124, "phrase": "common_register_file_architectures"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["register allocation", " ping-pong register file", " DSP", " VLIW"], "paper_abstract": "A wide variety of register file architectures-developed for embedded processors-have recently been used with the aim of reducing power dissipation and die size, in contrast with the traditional unified register file structures. This article presents a novel register allocation scheme for a clustered VLIW DSP, which is designed with distinctively banked register files in which port access is highly restricted. Whilst the organization of the register files is designed to decrease power consumption by using fewer port connections, the cluster-based design makes register access across clusters an additional issue, and the switched-access nature of the register file demands further investigation into the use of optimizing register assignment as a means of increasing instruction-level parallelism. We propose a heuristic algorithm, named ping-pong aware local favorable (PALF) register allocation, to obtain a register allocation that is expected to better utilize irregular register file architectures. The results of experiments performed using a compiler based on the Open Research Compiler (ORC) showed significant performance improvement over the original ORC's approach, which is considered to be an optimized approach for common register file architectures. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "PALF: compiler supports for irregular register files in clustered VLIW DSP processors", "paper_id": "WOS:000251298200006"}