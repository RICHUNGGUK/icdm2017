{"auto_keywords": [{"score": 0.03973761244758953, "phrase": "mmsm"}, {"score": 0.023885942939357238, "phrase": "mac"}, {"score": 0.007919678996023609, "phrase": "multi-channel_simulation"}, {"score": 0.005871191945052666, "phrase": "mimo"}, {"score": 0.0048031262936807, "phrase": "mac_simulation_model"}, {"score": 0.004732785510739708, "phrase": "network_performance"}, {"score": 0.004652016085325825, "phrase": "increasing_number"}, {"score": 0.004583878086896926, "phrase": "multi-channel_communications"}, {"score": 0.004550182547313339, "phrase": "network_simulator"}, {"score": 0.00446152836850538, "phrase": "dominant_network_simulation_tool"}, {"score": 0.00439616811739646, "phrase": "native_support"}, {"score": 0.004268293864953256, "phrase": "hyacinth"}, {"score": 0.004236908273106904, "phrase": "ramon's_contributions"}, {"score": 0.004205752490816441, "phrase": "apparent_limitations"}, {"score": 0.004123781267600542, "phrase": "novel_extension"}, {"score": 0.0040733686023081556, "phrase": "multi-channel"}, {"score": 0.003945117054416623, "phrase": "multi-channel_mac_protocol_simulation"}, {"score": 0.003868205951558394, "phrase": "simulation_model_architecture"}, {"score": 0.0036824002755156777, "phrase": "upper_layer"}, {"score": 0.003488269683533964, "phrase": "mobile_node"}, {"score": 0.0033950634506367235, "phrase": "multiple_channels"}, {"score": 0.0033617891884360606, "phrase": "different_adjoining_nodes"}, {"score": 0.0033206530559760365, "phrase": "strong_support"}, {"score": 0.003296212583539166, "phrase": "newly_designed_multi-channel_mac_protocols"}, {"score": 0.0032558762499901727, "phrase": "multiple_input_multiple_output"}, {"score": 0.0031377955308198634, "phrase": "specific_simulation"}, {"score": 0.003084161755863256, "phrase": "upper_layer_facilities"}, {"score": 0.0028715337264989416, "phrase": "tcl"}, {"score": 0.0028293966058473476, "phrase": "tcl_level_ns-mobilenode.tcl"}, {"score": 0.0027605398374811667, "phrase": "multi-channel_components"}, {"score": 0.0027334673433027086, "phrase": "tcl_scripts"}, {"score": 0.002713336874618467, "phrase": "multi-channel_configuration"}, {"score": 0.002576503437739865, "phrase": "channel_selection_algorithm"}, {"score": 0.0025449518236394103, "phrase": "multi-channel_node_lists"}, {"score": 0.002363579716403684, "phrase": "tdma"}, {"score": 0.0023117182131967523, "phrase": "multi-channel_processing"}, {"score": 0.0022223176391038785, "phrase": "simulation_results"}, {"score": 0.0022005118194652704, "phrase": "network_throughput"}, {"score": 0.002157538586313944, "phrase": "single_channel"}, {"score": 0.0021154027872650727, "phrase": "multi-channel_capability"}, {"score": 0.0021049977753042253, "phrase": "mmsm."}], "paper_keywords": [""], "paper_abstract": "In order to improve network performance of delay and throughput, an increasing number of networks begin to support multi-channel communications. Although Network Simulator 2 (NS2) has been the dominant network simulation tool, it does not provide native support for multi-channel simulation. Existing works on extending NS2, such as Hyacinth's and Ramon's contributions, show apparent limitations for usage. This paper proposes a novel extension of NS2, named Multi-channel MAC Simulation Model (MMSM), which defines the facilities for multi-channel MAC protocol simulation. This paper describes the initiative, simulation model architecture of MMSM. Based on extensions of NS2 MobileNode architecture, MMSM has features of flexibility of configuration and transparency to the upper layer. MMSM defines one MAC entity associated with a number of NetIF (Network Interface) entities and each NetIF adhered to one channel. So the mobile node has the ability to send and receive packets simultaneously through multiple channels to or from different adjoining nodes. Thus MMSM provides strong support for simulating newly designed multi-channel MAC protocols such as MAC over Multiple Input Multiple Output (MIMO) or MIMO-like mechanisms. MMSM not only makes the specific simulation available, but also keeps the upper layer facilities unchanged as usual when implementing multi-channel simulation. The paper also describes the implementation of MMSM in NS2 (version 2.29). Modifications are carried out both on TCL and on C++ codes. In TCL level ns-mobilenode.tcl and ns-lib.tcl are modified to assemble the multi-channel components and to make TCL scripts to support multi-channel configuration. In C++ level mac.{h,cc}, mobilenode.{h,cc} and channel.{h,cc} are modified to add the channel selection algorithm and to manage the multi-channel node lists. Based on modifications of NS2 described above, researchers can implement their multi-channel MAC protocols conveniently. To validate the implementation of MMSM, two existing MAC protocols in NS-2.29, the Mac802_11 and Tdma, are extended to have the capability of multi-channel processing. Two typical scenarios are chosen to run the simulation on both the multi-channel and the single channel. Simulation results show that the network throughput of multi-channel MAC is enhanced over the single channel MAC, and therefore it proves the multi-channel capability of MMSM.", "paper_title": "NS2 Extension for Multi-channel MAC Simulation Model", "paper_id": "WOS:000265103800062"}