{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fault_tree_analysis"}, {"score": 0.03925546853975858, "phrase": "boolean_state"}, {"score": 0.004493130934067195, "phrase": "fault_tree_structure"}, {"score": 0.004458722048888919, "phrase": "static_or_dynamic_systems"}, {"score": 0.0043738432231020885, "phrase": "repeated_events"}, {"score": 0.00429057323623293, "phrase": "logical_unions"}, {"score": 0.0037792227071149985, "phrase": "first_set"}, {"score": 0.003622642432563435, "phrase": "second_set"}, {"score": 0.0035810720634458933, "phrase": "state_timing"}, {"score": 0.003512841739654183, "phrase": "last_set"}, {"score": 0.0034326732528567826, "phrase": "starting_moment"}, {"score": 0.003215295260684715, "phrase": "variable_value"}, {"score": 0.003178384350932103, "phrase": "variable_array"}, {"score": 0.0031418958350109038, "phrase": "logical_union"}, {"score": 0.003082007273423372, "phrase": "temporal_or_mixed_operation"}, {"score": 0.002532526438148958, "phrase": "efficient_determination"}, {"score": 0.0025130941721410558, "phrase": "minimal_cut_sets"}, {"score": 0.0024368411484675823, "phrase": "top_event_unreliability"}, {"score": 0.002326767693352058, "phrase": "qualitative_and_quantitative_analysis"}, {"score": 0.0022911901892022847, "phrase": "related_works"}, {"score": 0.002213112756450354, "phrase": "concise_expression"}, {"score": 0.0021876814398268775, "phrase": "fault_trees"}, {"score": 0.0021294699637639564, "phrase": "boolean_functions"}], "paper_keywords": ["Algebra", " analytic solution", " Boolean", " fault tree", " minimal cut set", " temporal order"], "paper_abstract": "We present an algebra with the purpose to efficiently simplify the fault tree structure representing static or dynamic systems, and reduce the repeated events inside. We consider logical unions made up by events as variables. Each variable is represented by an array: 1) it has three elements; 2) each element is a set; 3) the first set contains the Boolean state for this variable; 4) the second set contains the state timing; 5) the last set contains the probability at the starting moment for beginning in states from normal to failure; and 6) the Boolean state represents the variable value. The variable array interprets the logical union with two variables as the temporal or mixed operation using four operators: sequence, simultaneity, disjunction, and AND operators. The algebra generates theorems including the priority, idempotent, commutativity, associativity, absorptivity, and distributivity. The relation between the theorems and the fault tree analysis is then represented, which is propitious to the efficient determination of minimal cut sets, and the accurate analytic solution of top event unreliability. Finally, several examples are used to show its usage in the qualitative and quantitative analysis. Compared to related works, results suggest the algebra has advantages in concise expression of the fault trees, and efficient reduction of the Boolean functions, warranting further analysis.", "paper_title": "A Simple Algebra for Fault Tree Analysis of Static and Dynamic Systems", "paper_id": "WOS:000327953900010"}