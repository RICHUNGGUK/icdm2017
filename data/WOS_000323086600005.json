{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ubiquitous_computing"}, {"score": 0.004774937143916685, "phrase": "ubiquitous_computing_software"}, {"score": 0.0043560464825349275, "phrase": "data_mining"}, {"score": 0.004301834610818624, "phrase": "important_role"}, {"score": 0.004143196873246147, "phrase": "ubiquitous_computing_applications"}, {"score": 0.004057596233938867, "phrase": "ubiquitous_data_mining"}, {"score": 0.0037795163893761027, "phrase": "ubiquitous_data_mining_algorithm"}, {"score": 0.003670608022642996, "phrase": "configuration_decisions"}, {"score": 0.0031712256091350316, "phrase": "execution_behavior"}, {"score": 0.0031317126905234145, "phrase": "data_mining_algorithm"}, {"score": 0.002953711377604328, "phrase": "resource_and_context_states"}, {"score": 0.00290473242917264, "phrase": "parameter_settings"}, {"score": 0.0028685304140180137, "phrase": "data_mining_quality"}, {"score": 0.0027974705482714884, "phrase": "classification_model"}, {"score": 0.0026941587813581252, "phrase": "algorithm's_execution"}, {"score": 0.0026384167183586015, "phrase": "decision_tree_classifier"}, {"score": 0.0024883835349005863, "phrase": "prediction_accuracy"}, {"score": 0.002426717832834137, "phrase": "behavior_model"}, {"score": 0.0023764959294052964, "phrase": "different_abstraction"}, {"score": 0.0023079225317714815, "phrase": "model_selection"}, {"score": 0.0022886952510350416, "phrase": "behavior_model_constituents"}, {"score": 0.0022696277881969896, "phrase": "class_label_transformations"}, {"score": 0.0021857667493036786, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Data mining", " Ubiquitous computing", " Decision tree"], "paper_abstract": "Ubiquitous computing software needs to be autonomous so that essential decisions such as how to configure its particular execution are self-determined. Moreover, data mining serves an important role for ubiquitous computing by providing intelligence to several types of ubiquitous computing applications. Thus, automating ubiquitous data mining is also crucial. We focus on the problem of automatically configuring the execution of a ubiquitous data mining algorithm. In our solution, we generate configuration decisions in a resource aware and context aware manner since the algorithm executes in an environment in which the context often changes and computing resources are often severely limited. We propose to analyze the execution behavior of the data mining algorithm by mining its past executions. By doing so, we discover the effects of resource and context states as well as parameter settings on the data mining quality. We argue that a classification model is appropriate for predicting the behavior of an algorithm's execution and we concentrate on decision tree classifier. We also define taxonomy on data mining quality so that tradeoff between prediction accuracy and classification specificity of each behavior model that classifies by a different abstraction of quality, is scored for model selection. Behavior model constituents and class label transformations are formally defined and experimental validation of the proposed approach is also performed. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Self-configuring data mining for ubiquitous computing", "paper_id": "WOS:000323086600005"}