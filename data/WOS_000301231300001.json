{"auto_keywords": [{"score": 0.0408844843756107, "phrase": "relatively_small_number"}, {"score": 0.00481495049065317, "phrase": "r_functions"}, {"score": 0.004767826806287385, "phrase": "robust_correlations"}, {"score": 0.004539005582217309, "phrase": "large_correlation_matrices"}, {"score": 0.004428728205625129, "phrase": "large_number"}, {"score": 0.004321118442104989, "phrase": "standard_r_function"}, {"score": 0.004257806363128601, "phrase": "pearson_correlation"}, {"score": 0.003954837422946628, "phrase": "data_sets"}, {"score": 0.003858697684681798, "phrase": "missing_data"}, {"score": 0.003728000957725218, "phrase": "pearson_correlation_calculation"}, {"score": 0.0036373553416391823, "phrase": "substantial_speedup"}, {"score": 0.003531474887552889, "phrase": "missing_entries"}, {"score": 0.0032800186243040663, "phrase": "parallel_processing"}, {"score": 0.0031223774204093713, "phrase": "biweight_midcorrelation"}, {"score": 0.0030314419455512013, "phrase": "similar_manner"}, {"score": 0.002986969236641105, "phrase": "comparable_speed"}, {"score": 0.0028574164693918433, "phrase": "fast_pearson"}, {"score": 0.0026020254041372723, "phrase": "r_function_hclust"}, {"score": 0.002464709648714996, "phrase": "clustered_objects"}, {"score": 0.002404706573379854, "phrase": "publicly_available_clustering_algorithm"}, {"score": 0.0023117182131967523, "phrase": "package_flashclust"}, {"score": 0.0022665781920241245, "phrase": "original_algorithm"}, {"score": 0.0021363670305843403, "phrase": "substantial_time_savings"}, {"score": 0.0021049977753042253, "phrase": "large_data_sets"}], "paper_keywords": ["Pearson correlation", " robust correlation", " hierarchical clustering", " R"], "paper_abstract": "Many high-throughput biological data analyses require the calculation of large correlation matrices and/or clustering of a large number of objects. The standard R function for calculating Pearson correlation can handle calculations without missing values efficiently, but is inefficient when applied to data sets with a relatively small number of missing data. We present an implementation of Pearson correlation calculation that can lead to substantial speedup on data with relatively small number of missing entries. Further, we parallelize all calculations and thus achieve further speedup on systems where parallel processing is available. A robust correlation measure, the biweight midcorrelation, is implemented in a similar manner and provides comparable speed. The functions c or and bicor for fast Pearson and biweight midcorrelation, respectively, are part of the updated, freely available R package WGCNA. The hierarchical clustering algorithm implemented in R function hclust is an order n(3) (n is the number of clustered objects) version of a publicly available clustering algorithm (Murtagh 2012). We present the package flashClust that implements the original algorithm which in practice achieves order approximately n(2), leading to substantial time savings when clustering large data sets.", "paper_title": "Fast R Functions for Robust Correlations and Hierarchical Clustering", "paper_id": "WOS:000301231300001"}