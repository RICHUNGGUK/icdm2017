{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "deterministic_lattice_automata"}, {"score": 0.04166379544500555, "phrase": "minimal_deterministic_automaton"}, {"score": 0.040120943589030414, "phrase": "deterministic_automata"}, {"score": 0.037908914156095756, "phrase": "minimization_problem"}, {"score": 0.03344765704323261, "phrase": "polynomial_time"}, {"score": 0.028281410189250105, "phrase": "right_congruence"}, {"score": 0.004777392826700429, "phrase": "traditional_automata"}, {"score": 0.004383016741930174, "phrase": "large_domain"}, {"score": 0.004331811712726697, "phrase": "special_case"}, {"score": 0.004298006360831255, "phrase": "lattice_automata"}, {"score": 0.0041653916552844535, "phrase": "finite_lattice"}, {"score": 0.0041167185402778425, "phrase": "interesting_theoretical_properties"}, {"score": 0.003927625349474979, "phrase": "combinatorial_nature"}, {"score": 0.00385141330111392, "phrase": "formal_language"}, {"score": 0.003761900996118551, "phrase": "runtime_monitoring"}, {"score": 0.003732526540522333, "phrase": "pattern_recognition"}, {"score": 0.0035332058983966424, "phrase": "great_interest"}, {"score": 0.0034107088717109857, "phrase": "deterministic_traditional_automata"}, {"score": 0.0033840673522948592, "phrase": "finite_words"}, {"score": 0.0033444934455768597, "phrase": "minimization_algorithm"}, {"score": 0.003279559293934528, "phrase": "myhillnerode_right_congruence"}, {"score": 0.003141093559655865, "phrase": "canonicalminimal_deterministic_automaton"}, {"score": 0.00310435218261112, "phrase": "polynomial_algorithm"}, {"score": 0.0030440661915657175, "phrase": "deterministic_weighted_automata"}, {"score": 0.0030084563186769764, "phrase": "tropical_semiring"}, {"score": 0.002973261772253616, "phrase": "general_deterministic_weighted_automata"}, {"score": 0.0025614418906438744, "phrase": "canonical_minimal_automaton"}, {"score": 0.0023877142890845614, "phrase": "np"}, {"score": 0.002340357706078868, "phrase": "good_news"}, {"score": 0.002250272652754455, "phrase": "finite_lattices"}, {"score": 0.0021215910859085146, "phrase": "finite_number"}, {"score": 0.0021049977753042253, "phrase": "right_congruences"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Verification", " Deterministic finite automata", " minimization", " lattice automata and languages"], "paper_abstract": "Traditional automata accept or reject their input and are therefore Boolean. In contrast, weighted automata map each word to a value from a semiring over a large domain. The special case of lattice automata, in which the semiring is a finite lattice, has interesting theoretical properties as well as applications in formalmethods. A minimal deterministic automaton captures the combinatorial nature and complexity of a formal language. Deterministic automata are used in runtime monitoring, pattern recognition, and modeling systems. Thus, the minimization problem for deterministic automata is of great interest, both theoretically and in practice. For deterministic traditional automata on finite words, a minimization algorithm, based on the MyhillNerode right congruence on the set of words, generates in polynomial time a canonicalminimal deterministic automaton. A polynomial algorithm is known also for deterministic weighted automata over the tropical semiring. For general deterministic weighted automata, the problem of minimization is open. In this article, we study minimization of deterministic lattice automata. We show that it is impossible to define a right congruence in the context of lattices, and that no canonical minimal automaton exists. Consequently, the minimization problem is much more complicated, and we prove that it is NP-complete. As good news, we show that while right congruence fails already for finite lattices that are fully ordered, for this setting we are able to combine a finite number of right congruences and generate a minimal deterministic automaton in polynomial time.", "paper_title": "Minimizing Deterministic Lattice Automata", "paper_id": "WOS:000352220100001"}