{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "monte_carlo"}, {"score": 0.004717723626157272, "phrase": "mathematical_framework"}, {"score": 0.004638195656547484, "phrase": "parallel_algorithms"}, {"score": 0.004437613070853689, "phrase": "wide_range"}, {"score": 0.004407530256797396, "phrase": "spatio-temporal_scales"}, {"score": 0.004347972379250724, "phrase": "complex_chemistry_and_transport_micro-mechanisms"}, {"score": 0.004245667843980468, "phrase": "exactly_the_stochastic_trajectories"}, {"score": 0.0038467574225322086, "phrase": "spatial_domain_decomposition"}, {"score": 0.003807684498435389, "phrase": "markov_operator"}, {"score": 0.0036305081978734127, "phrase": "kinetic_monte_carlo_algorithm"}, {"score": 0.003593623872399777, "phrase": "domain_decomposition"}, {"score": 0.003509006038574667, "phrase": "markov_generator"}, {"score": 0.003380029058401904, "phrase": "specific_hierarchical_parallel_architectures"}, {"score": 0.003345680943026579, "phrase": "multi-core_processors"}, {"score": 0.0033004240095380623, "phrase": "graphical_processing_units"}, {"score": 0.0032117325375830407, "phrase": "operator_decomposition"}, {"score": 0.0031360786664165093, "phrase": "kinetic_monte_carlo_algorithms"}, {"score": 0.0030936482163040823, "phrase": "trotter_theorem"}, {"score": 0.002939568952175845, "phrase": "fractional_step_time-window"}, {"score": 0.0028026735035370206, "phrase": "proposed_mathematical_framework"}, {"score": 0.0027366287564324966, "phrase": "numerical_and_statistical_consistency"}, {"score": 0.0027088011534576856, "phrase": "proposed_algorithms"}, {"score": 0.002627000223796678, "phrase": "original_serial_kmc."}, {"score": 0.0025738397248551217, "phrase": "systematic_evaluation"}, {"score": 0.002556359086441866, "phrase": "different_processor"}, {"score": 0.002547663224855668, "phrase": "communicating_schedules"}, {"score": 0.0024455860314641243, "phrase": "parallel_kmc_schemes"}, {"score": 0.002428974327006118, "phrase": "available_exact_solutions"}, {"score": 0.0023798115577749225, "phrase": "ising-type_systems"}, {"score": 0.002292243761395491, "phrase": "complex_spatially_distributed_reactions"}, {"score": 0.0022154296909169826, "phrase": "work_load_balancing"}, {"score": 0.0021705796895687864, "phrase": "re-balancing_scheme"}, {"score": 0.0021484955960643167, "phrase": "probabilistic_mass_transport_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Kinetic Monte Carlo method", " Parallel algorithms", " Markov semigroups", " Operator splitting", " Graphical Processing Unit (GPU)"], "paper_abstract": "We present a mathematical framework for constructing and analyzing parallel algorithms for lattice kinetic Monte Carlo (KMC) simulations. The resulting algorithms have the capacity to simulate a wide range of spatio-temporal scales in spatially distributed, non-equilibrium physiochemical processes with complex chemistry and transport micro-mechanisms. Rather than focusing on constructing exactly the stochastic trajectories, our approach relies on approximating the evolution of observables, such as density, coverage, correlations and so on. More specifically, we develop a spatial domain decomposition of the Markov operator (generator) that describes the evolution of all observables according to the kinetic Monte Carlo algorithm. This domain decomposition corresponds to a decomposition of the Markov generator into a hierarchy of operators and can be tailored to specific hierarchical parallel architectures such as multi-core processors or clusters of Graphical Processing Units (GPUs). Based on this operator decomposition, we formulate parallel Fractional step kinetic Monte Carlo algorithms by employing the Trotter Theorem and its randomized variants; these schemes, (a) are partially asynchronous on each fractional step time-window, and (b) are characterized by their communication schedule between processors. The proposed mathematical framework allows us to rigorously justify the numerical and statistical consistency of the proposed algorithms, showing the convergence of our approximating schemes to the original serial KMC. The approach also provides a systematic evaluation of different processor communicating schedules. We carry out a detailed bench-marking of the parallel KMC schemes using available exact solutions, for example, in Ising-type systems and we demonstrate the capabilities of the method to simulate complex spatially distributed reactions at very large scales on GPUs. Finally, we discuss work load balancing between processors and propose a re-balancing scheme based on probabilistic mass transport methods. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Hierarchical fractional-step approximations and parallel kinetic Monte Carlo algorithms", "paper_id": "WOS:000308726600007"}