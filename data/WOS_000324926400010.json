{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "constraint_logic_programming"}, {"score": 0.0045052562941109734, "phrase": "new_execution_strategy"}, {"score": 0.004420472010542188, "phrase": "constraint_logic_programs"}, {"score": 0.004337276328199398, "phrase": "failure_tabled_clp."}, {"score": 0.0035864603175592854, "phrase": "failed_derivations"}, {"score": 0.003261133560558666, "phrase": "constraint_projection"}, {"score": 0.0031393948330209224, "phrase": "reuse_conditions"}, {"score": 0.002522344964242888, "phrase": "failure_tabling"}, {"score": 0.0021049977753042253, "phrase": "infinite_executions"}], "paper_keywords": [""], "paper_abstract": "We present a new execution strategy for constraint logic programs called Failure Tabled CLP. Similarly to Tabled CLP our strategy records certain derivations in order to prune further derivations. However, our method only learns from failed derivations. This allows us to compute interpolants rather than constraint projection for generation of reuse conditions. As a result, our technique can be used where projection is too expensive or does not exist. Our experiments indicate that Failure Tabling can speed up the execution of programs with many redundant failed derivations as well as achieve termination in the presence of infinite executions.", "paper_title": "Failure tabled constraint logic programming by interpolation", "paper_id": "WOS:000324926400010"}