{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "carr"}, {"score": 0.004720792132470776, "phrase": "network_packet_classification"}, {"score": 0.004689815048273592, "phrase": "modern_internet_routers"}, {"score": 0.004613254605667248, "phrase": "large_number"}, {"score": 0.00458297991625839, "phrase": "packet_classification_rules"}, {"score": 0.00452302256811929, "phrase": "classification_schemes"}, {"score": 0.004276794599014972, "phrase": "scalable_packet_classification_algorithm"}, {"score": 0.0041518897573208785, "phrase": "well-known_bit_vector"}, {"score": 0.004030618026002216, "phrase": "range_search_method"}, {"score": 0.003977858136481356, "phrase": "cache-aware_tree"}, {"score": 0.00390000531646629, "phrase": "full_use"}, {"score": 0.0038743931383378558, "phrase": "processor's_cache_line"}, {"score": 0.0037985575652591985, "phrase": "dynamic_random_access_memory"}, {"score": 0.003675437054650504, "phrase": "dram_accesses"}, {"score": 0.0034981720122414153, "phrase": "widely_used_binary_search_algorithm"}, {"score": 0.003373616465890001, "phrase": "single_cache_line"}, {"score": 0.003242773742700232, "phrase": "catree_algorithm"}, {"score": 0.0031897603004360908, "phrase": "binary_search_algorithm"}, {"score": 0.003086311260099341, "phrase": "larger_set"}, {"score": 0.002908459938852865, "phrase": "bitmap_space"}, {"score": 0.002758968636750223, "phrase": "identical_priority"}, {"score": 0.002651901053070293, "phrase": "memory_space"}, {"score": 0.0025405829212597586, "phrase": "memory_accesses"}, {"score": 0.002490789449396715, "phrase": "cpu_cache_utilization"}, {"score": 0.002450039362463466, "phrase": "rule_re-arrangement"}, {"score": 0.00242590924077914, "phrase": "cache-aware_bit_vector"}, {"score": 0.002386218074955624, "phrase": "arrangement_algorithm"}, {"score": 0.0023705236064200893, "phrase": "better_performance"}, {"score": 0.0023317365065820554, "phrase": "regular_bv_scheme"}, {"score": 0.0022412113034595903, "phrase": "proposed_algorithm"}, {"score": 0.0022191333270475087, "phrase": "bitmap_memory_space"}, {"score": 0.0021972723598946446, "phrase": "practical_set"}, {"score": 0.002182817892930808, "phrase": "firewall_rules"}, {"score": 0.0021049977753042253, "phrase": "regular_bv."}], "paper_keywords": ["packet classification", " cache-utilization tree", " binary search algorithm"], "paper_abstract": "Modern Internet routers have to handle a large number of packet classification rules, which requires classification schemes to be scalable both in time and space. In this paper, we present a scalable packet classification algorithm that is developed by combining two new concepts to the well-known bit vector (BV) scheme. We propose a range search method based on a cache-aware tree (CATree) which makes full use of processor's cache line to reduce the number of dynamic random access memory (DRAM) accesses. Theoretically, the number of DRAM accesses of CATree is about log(m + 1) times lower than that of the widely used binary search algorithm, where m is the number of keys in a single cache line. Based on our computational results on a set of 1024 keys, the CATree algorithm is 36% faster than binary search algorithm and the performance is better when applied to a larger set of keys. In addition, we develop a rule re-arrangement algorithm to reduce the bitmap space of BV. With this rearrangement, the rules for the same action may be assigned an identical priority. This reduces the number of priorities as well as the memory space of the bitmap. Furthermore, this also reduces the number of memory accesses and hence, increases the CPU cache utilization. With CATree and rule re-arrangement, the cache-aware bit vector with rule re-arrangement algorithm achieves better performance in comparison with the regular BV scheme, both in space and time. In our experiments, the proposed algorithm reduces the bitmap memory space of a practical set of firewall rules by two orders of magnitude and is 91% faster than the regular BV.", "paper_title": "CARR: a scalable solution for network packet classification", "paper_id": "WOS:000302900600006"}