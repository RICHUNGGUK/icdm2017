{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large-scale_distributed_cycle_sharing_systems"}, {"score": 0.00469159356595623, "phrase": "distributed_heterogeneous_computers"}, {"score": 0.004631099806015235, "phrase": "key_function"}, {"score": 0.004591202593942391, "phrase": "large-scale_volunteer_computing_and_desktop_grid_applications"}, {"score": 0.004473552224535518, "phrase": "large-scale_distributed_cycle_sharing_system"}, {"score": 0.004302680891412643, "phrase": "computation_work"}, {"score": 0.004228839109569368, "phrase": "cpu_cycle_provider"}, {"score": 0.00415625929636759, "phrase": "uniform_and_portable_fashion"}, {"score": 0.0040672766251859975, "phrase": "operating_system_platforms"}, {"score": 0.003945879572348638, "phrase": "cpu_resources"}, {"score": 0.003828091961373454, "phrase": "uniform_workload_accounting"}, {"score": 0.003618558599449415, "phrase": "java_virtual_machine"}, {"score": 0.003480230347985338, "phrase": "good_match"}, {"score": 0.003450213580299164, "phrase": "distributed_cycle_sharing"}, {"score": 0.0033182992967343916, "phrase": "wide_variety"}, {"score": 0.003163878786694538, "phrase": "untrusted_applications"}, {"score": 0.002863763092429772, "phrase": "jvm."}, {"score": 0.0028145455182562807, "phrase": "portable_workload_accounting"}, {"score": 0.002790254164160135, "phrase": "heterogeneous_computing_platforms"}, {"score": 0.0027422968723193057, "phrase": "jvm_virtual_instructions"}, {"score": 0.0027068691342344545, "phrase": "real_processor_cycles"}, {"score": 0.0026488343783448273, "phrase": "existing_jvm_cpu_accounting_mechanisms"}, {"score": 0.0024820711838337713, "phrase": "visible_changes"}, {"score": 0.0024606422183102382, "phrase": "application_and_library_code_interfaces"}, {"score": 0.0022758994740331258, "phrase": "processor_registers"}, {"score": 0.002207851585508636, "phrase": "high_accounting_accuracy"}, {"score": 0.002188784900536406, "phrase": "low_runtime_overhead"}, {"score": 0.002169882514603539, "phrase": "virtual_cycle"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["large-scale distributed cycle sharing", " transparent and efficient virtual cycle accounting", " Java Virtual Machine"], "paper_abstract": "CPU cycle sharing among distributed heterogeneous computers is the key function in large-scale volunteer computing and desktop grid applications. One important problem in large-scale distributed cycle sharing system is how to account for the amount of computation work performed by a CPU cycle provider, in a uniform and portable fashion across heterogeneous hardware and operating system platforms. Such an accounting mechanism is especially desirable when CPU resources are traded and a lack of uniform workload accounting will hinder the enforcement of market-driven CPU pricing/trading policies in distributed cycle sharing systems. Java Virtual Machine (JVM) has proved to be a good match for distributed cycle sharing because of its abilities to run applications on a wide variety of platforms without modification (portability) and to host untrusted applications (safety). In this paper, we present the design, implementation, and evaluation of an efficient, application-transparent virtual cycle accounting scheme integrated into JVM. Our scheme achieves portable workload accounting across heterogeneous computing platforms by accounting for JVM virtual instructions instead of real processor cycles. Different from the existing JVM CPU accounting mechanisms that involve bytecode rewriting, our scheme is transparent to applications and does not require visible changes to application and library code interfaces which would break applications that use Reflection API. Moreover, our scheme is efficient via the use of processor registers for accounting. Our experimental results demonstrate both high accounting accuracy and low runtime overhead of virtual cycle accounting. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Portable virtual cycle accounting for large-scale distributed cycle sharing systems", "paper_id": "WOS:000246539400008"}