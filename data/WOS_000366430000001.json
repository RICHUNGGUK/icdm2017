{"auto_keywords": [{"score": 0.04329804133557504, "phrase": "farthest_nearest_neighbor"}, {"score": 0.00481495049065317, "phrase": "linear_time_algorithm_for_euclidean_distance_problems"}, {"score": 0.004670896353428476, "phrase": "general_framework"}, {"score": 0.004614483128885678, "phrase": "getting_expected_linear_time_constant_factor_approximations"}, {"score": 0.004449325481230025, "phrase": "fptas"}, {"score": 0.004289966839994858, "phrase": "computational_geometry"}, {"score": 0.004186926251483987, "phrase": "k-center_clustering"}, {"score": 0.004061584718427419, "phrase": "new_approach"}, {"score": 0.0038923605771735838, "phrase": "input_problem"}, {"score": 0.0034676182423067307, "phrase": "well_studied_problems"}, {"score": 0.0032431667821391044, "phrase": "linear_time_approximation_algorithm"}, {"score": 0.00316518932828897, "phrase": "rather_involved_algorithms"}, {"score": 0.003070340620983981, "phrase": "short_list"}, {"score": 0.0027685531038981847, "phrase": "k_points"}, {"score": 0.0023776656246300063, "phrase": "upward_closed_set_systems"}, {"score": 0.0021569129153653777, "phrase": "linear_running_time"}, {"score": 0.0021049977753042253, "phrase": "high_probability"}], "paper_keywords": ["Algorithms", " Theory", " Clustering", " nets", " linear time", " optimization"], "paper_abstract": "We provide a general framework for getting expected linear time constant factor approximations (and in many cases FPTAS's) to several well known problems in Computational Geometry, such as k-center clustering and farthest nearest neighbor. The new approach is robust to variations in the input problem, and yet it is simple, elegant, and practical. In particular, many of these well studied problems which fit easily into our framework, either previously had no linear time approximation algorithm, or required rather involved algorithms and analysis. A short list of the problems we consider include farthest nearest neighbor, k-center clustering, smallest disk enclosing k points, kth largest distance, kth smallest m-nearest neighbor distance, kth heaviest edge in the MST and other spanning forest type problems, problems involving upward closed set systems, and more. Finally, we show how to extend our framework such that the linear running time bound holds with high probability.", "paper_title": "Net and Prune: A Linear Time Algorithm for Euclidean Distance Problems", "paper_id": "WOS:000366430000001"}