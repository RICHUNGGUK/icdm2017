{"auto_keywords": [{"score": 0.031356084154478756, "phrase": "amoeba"}, {"score": 0.00481495049065317, "phrase": "parallel_computational_implementation"}, {"score": 0.004765482708043842, "phrase": "amoeba."}, {"score": 0.004716520738331953, "phrase": "geospatial_researchers'_access"}, {"score": 0.004668059458774745, "phrase": "high-performance_computing_clusters"}, {"score": 0.004479120557712926, "phrase": "high-resolution_spatial_data"}, {"score": 0.004209893377338457, "phrase": "clusters'_ability"}, {"score": 0.004081385289516914, "phrase": "large_amounts"}, {"score": 0.0038959121068990517, "phrase": "parallel_computation"}, {"score": 0.003835972725191194, "phrase": "multidirectional_optimal_ecotope-based_algorithm"}, {"score": 0.0036427316134070007, "phrase": "spatial_weight_matrices"}, {"score": 0.0036052633308076933, "phrase": "spatial_autoregressive_models"}, {"score": 0.0034771228725942846, "phrase": "irregularly_shaped_spatial_clusters"}, {"score": 0.0033190180867511605, "phrase": "original_'exhaustive'_algorithm"}, {"score": 0.003267925215811654, "phrase": "resulting_'constructive'_algorithm"}, {"score": 0.0031845067058084583, "phrase": "significant_amount"}, {"score": 0.0030872017736888113, "phrase": "large_datasets"}, {"score": 0.0029928611380840757, "phrase": "parallel_implementation"}, {"score": 0.0028274622759740667, "phrase": "java"}, {"score": 0.002755104031926742, "phrase": "library_mpj_express"}, {"score": 0.0026570998719084153, "phrase": "differing_types"}, {"score": 0.0026297428083782875, "phrase": "spatial_grid_data"}, {"score": 0.0024586427394152196, "phrase": "new_parallel_algorithm"}, {"score": 0.0023958326775913165, "phrase": "example_dataset"}, {"score": 0.0023346234464901978, "phrase": "different_decompositions"}, {"score": 0.002310578855290687, "phrase": "spatial_data"}, {"score": 0.0022749744354271816, "phrase": "computational_load_balance"}, {"score": 0.002251542790734307, "phrase": "multiple_processors"}, {"score": 0.0022053994402287925, "phrase": "parallel_version"}, {"score": 0.0021601997088758957, "phrase": "substantially_faster_runtimes"}, {"score": 0.0021049977753042253, "phrase": "related_publications"}], "paper_keywords": ["parallel geocomputation", " cluster detection", " AMOEBA", " cloud computing"], "paper_abstract": "As geospatial researchers' access to high-performance computing clusters continues to increase alongside the availability of high-resolution spatial data, it is imperative that techniques are devised to exploit these clusters' ability to quickly process and analyze large amounts of information. This research concentrates on the parallel computation of A Multidirectional Optimal Ecotope-Based Algorithm (AMOEBA). AMOEBA is used to derive spatial weight matrices for spatial autoregressive models and as a method for identifying irregularly shaped spatial clusters. While improvements have been made to the original 'exhaustive' algorithm, the resulting 'constructive' algorithm can still take a significant amount of time to complete with large datasets. This article outlines a parallel implementation of AMOEBA (the P-AMOEBA) written in Java utilizing the message passing library MPJ Express. In order to account for differing types of spatial grid data, two decomposition methods are developed and tested. The benefits of using the new parallel algorithm are demonstrated on an example dataset. Results show that different decompositions of spatial data affect the computational load balance across multiple processors and that the parallel version of AMOEBA achieves substantially faster runtimes than those reported in related publications.", "paper_title": "Developing a parallel computational implementation of AMOEBA", "paper_id": "WOS:000309045700009"}