{"auto_keywords": [{"score": 0.04561965062830191, "phrase": "linear_time_algorithms"}, {"score": 0.00481495049065317, "phrase": "efficient_seed_computation"}, {"score": 0.00428733103049275, "phrase": "shortest_cover"}, {"score": 0.003852939975815287, "phrase": "shortest_seed_problem"}, {"score": 0.0036271080216837286, "phrase": "linear_time_algorithm"}, {"score": 0.003125835572347772, "phrase": "last_problem"}, {"score": 0.0030398432591176357, "phrase": "seed_array"}, {"score": 0.002731500545019039, "phrase": "simpler_alternative_algorithm"}, {"score": 0.0026811531172346676, "phrase": "shortest_seeds"}, {"score": 0.0024772998651215964, "phrase": "shortest_seed"}, {"score": 0.002375714262344562, "phrase": "corresponding_seed"}, {"score": 0.0023103100997344072, "phrase": "important_details"}, {"score": 0.002267708463966758, "phrase": "previously_known_shortest-seed_algorithm"}, {"score": 0.0022571921825156652, "phrase": "iliopoulos"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Seed in a string", " Cover", " Suffix tree"], "paper_abstract": "The notion of the cover is a generalization of a period of a string, and there are linear time algorithms for finding the shortest cover. The seed is a more complicated generalization of periodicity, it is a cover of a superstring of a given string, and the shortest seed problem is of much higher algorithmic difficulty. The problem is not well understood, no linear time algorithm is known. In the paper we give linear time algorithms for some of its versions-computing shortest left-seed array, longest left-seed array and checking for seeds of a given length. The algorithm for the last problem is used to compute the seed array of a string (i.e., the shortest seeds for all the prefixes of the string) in O(n(2)) time. We describe also a simpler alternative algorithm computing efficiently the shortest seeds. As a by-product we obtain an O(n log(n/m)) time algorithm checking if the shortest seed has length at least m and finding the corresponding seed. We also correct some important details missing in the previously known shortest-seed algorithm Iliopoulos et al. (1996) [14]. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Efficient seed computation revisited", "paper_id": "WOS:000318890000016"}