{"auto_keywords": [{"score": 0.049450454172374314, "phrase": "enterprise_systems"}, {"score": 0.00481495049065317, "phrase": "architecturally_significant_requirements"}, {"score": 0.004506968388996092, "phrase": "systems_engineers"}, {"score": 0.004274766964161756, "phrase": "important_architecture_decisions"}, {"score": 0.004190796368475121, "phrase": "significant_requirements"}, {"score": 0.004054479957160662, "phrase": "global_impact"}, {"score": 0.0039748192550806815, "phrase": "underlying_software_infrastructure"}, {"score": 0.0036714667610391535, "phrase": "increasing_effort"}, {"score": 0.003623199939953831, "phrase": "engineering_enterprise_systems'_requirements"}, {"score": 0.003413705707789296, "phrase": "architecture_interactions"}, {"score": 0.003091036449708673, "phrase": "integrated_set"}, {"score": 0.0029706504420983896, "phrase": "requirements_analysis"}, {"score": 0.002798780784517325, "phrase": "quality_attribute_scenarios"}, {"score": 0.0027437235598539904, "phrase": "implicit_yet_significant_requirements"}, {"score": 0.002689746491842271, "phrase": "model_requirements"}, {"score": 0.002602127996667857, "phrase": "terminological_interferences"}, {"score": 0.0025173564697303836, "phrase": "change_impacts"}, {"score": 0.0024353398669404334, "phrase": "proposed_framework"}, {"score": 0.002387415084371473, "phrase": "customer_relationship_management_software_system"}, {"score": 0.0022492129111567824, "phrase": "concrete_insights"}, {"score": 0.002147265537489893, "phrase": "organization's_systems_practice"}, {"score": 0.0021049977753042253, "phrase": "moderate_cost"}], "paper_keywords": ["Enterprise systems", " requirements engineering", " software architecture", " systems engineering"], "paper_abstract": "In designing and developing enterprise systems, systems engineers must consider the requirements that drive the important architecture decisions. Architecturally significant requirements tend to have a global impact on the underlying software infrastructure, and therefore need to be thoroughly examined. Despite the increasing effort in engineering enterprise systems' requirements, little is known about the analysis of architecture interactions and tradeoffs. In this paper, we propose a framework consisting of an integrated set of activities to help tackle requirements analysis in practice. Specifically, we leverage the quality attribute scenarios to elicit implicit yet significant requirements, to model requirements interplays, to manage terminological interferences, and to determine change impacts. We apply the proposed framework to a customer relationship management software system. The results show that the framework offers concrete insights and can be incorporated into an organization's systems practice with a moderate cost.", "paper_title": "Analysis of Architecturally Significant Requirements for Enterprise Systems", "paper_id": "WOS:000341567800018"}