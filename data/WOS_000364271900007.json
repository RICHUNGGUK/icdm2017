{"auto_keywords": [{"score": 0.04949240338189186, "phrase": "triple-modular-redundant_applications"}, {"score": 0.00481495049065317, "phrase": "replicated_railway_applications"}, {"score": 0.004611554879923759, "phrase": "fault-tolerant_safety-critical_computation"}, {"score": 0.00438955582974973, "phrase": "correct_operation"}, {"score": 0.003693103542455806, "phrase": "additional_layer"}, {"score": 0.0031260524791486347, "phrase": "resource-sharing_layer"}, {"score": 0.002779894844207706, "phrase": "technical_separation"}, {"score": 0.0027120400060701056, "phrase": "fast_reaction_time_requirements"}, {"score": 0.0025495426598675583, "phrase": "triple-modular-redundant_application"}, {"score": 0.002456744238900652, "phrase": "single_and_multi-core_cpus"}, {"score": 0.002295277579105179, "phrase": "applications'_synchronization_mechanisms"}, {"score": 0.002225426912273257, "phrase": "good_performance"}, {"score": 0.002198084195030656, "phrase": "resource_utilization"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Composability", " Mixed-criticality", " Virtualization", " Triple modular redundancy", " Scheduling", " Certification"], "paper_abstract": "Triple-modular-redundant applications are widely used for fault-tolerant safety-critical computation. They have strict timing requirements for correct operation. We present an architecture which provides composability and mixed-criticality to support integration and to ease certification of such safety-critical applications. In this architecture, an additional layer is required for the sharing/partitioning of resources. This potentially jeopardizes the synchronization necessary for the triple-modular-redundant applications. We investigate the effects of different (unsynchronized) scheduling methods for the resource-sharing layer in this architecture and conclude that an out-of-the-box solution, which guarantees the technical separation between applications with fast reaction time requirements is only feasible when executing at most one instance of a triple-modular-redundant application per CPU-core for single and multi-core CPUs. Only when accepting changes in the applications or the applications' synchronization mechanisms, are more flexible solutions with good performance and resource utilization available. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A composable real-time architecture for replicated railway applications", "paper_id": "WOS:000364271900007"}