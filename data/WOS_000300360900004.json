{"auto_keywords": [{"score": 0.040685841618465474, "phrase": "ray_tracing"}, {"score": 0.00481495049065317, "phrase": "real_time_rendering"}, {"score": 0.004760394308239882, "phrase": "three-dimensional_scenes"}, {"score": 0.004706453355638515, "phrase": "high_photorealistic_details"}, {"score": 0.004626680470601208, "phrase": "hard_task"}, {"score": 0.004420472010542188, "phrase": "rendering_algorithm"}, {"score": 0.004175533280178052, "phrase": "sequential_software-based_implementation"}, {"score": 0.0039216854691927865, "phrase": "parallel_implementations"}, {"score": 0.003789763907758991, "phrase": "reasonable_real_time_performance"}, {"score": 0.0035390378585554547, "phrase": "custom_parallel_design"}, {"score": 0.0033811403330431897, "phrase": "even_higher_performance"}, {"score": 0.003211883390828745, "phrase": "hardware_parallel_architecture"}, {"score": 0.0031037644581516973, "phrase": "main_desirable_features"}, {"score": 0.002965229277927781, "phrase": "reflection_effects"}, {"score": 0.0029148831519944358, "phrase": "low_area_cost"}, {"score": 0.0028653893877383188, "phrase": "promising_rendering_performance"}, {"score": 0.002690975370565776, "phrase": "uniform_grid_acceleration_structure"}, {"score": 0.0026003455833291124, "phrase": "massive_parallelism"}, {"score": 0.002570817338292482, "phrase": "parallel_ray-triangle_intersection_tests"}, {"score": 0.0024281181691350085, "phrase": "hardware_implementation"}, {"score": 0.002386869729952315, "phrase": "proposed_architecture"}, {"score": 0.0022933216359142736, "phrase": "performance_results"}, {"score": 0.0021291870676682406, "phrase": "grid_configuration"}, {"score": 0.0021049977753042253, "phrase": "eight_processing_elements"}], "paper_keywords": ["Parallel architecture", " ray tracing", " FPGA", " Computer graphics"], "paper_abstract": "Real time rendering of three-dimensional scenes in high photorealistic details is a hard task, such as in the ray tracing rendering algorithm. In general, the performance achieved by a sequential software-based implementation of ray tracing is far from satisfactory. However, parallel implementations of ray tracing have been enabling reasonable real time performance, as the algorithm is embarrassingly parallel. Thus, a custom parallel design in hardware is likely to achieve an even higher performance. In this paper, we propose a hardware parallel architecture capable of dealing with the main desirable features of ray tracing, such as shadows and reflection effects, imposing low area cost and a promising rendering performance. Such architecture, called GridRT, is based on the Uniform Grid acceleration structure and is intended to deliver massive parallelism through parallel ray-triangle intersection tests as well as parallel processing of many rays. A hardware implementation of the proposed architecture is presented, together with some performance results and resources requirements. The rendering is reduced by 80% using a grid configuration of eight processing elements.", "paper_title": "An efficient parallel architecture for ray-tracing", "paper_id": "WOS:000300360900004"}