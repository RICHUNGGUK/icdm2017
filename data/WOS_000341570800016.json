{"auto_keywords": [{"score": 0.04879655533384406, "phrase": "trajectory_queries"}, {"score": 0.00481495049065317, "phrase": "scalable_evaluation"}, {"score": 0.0047224703862074665, "phrase": "imprecise_location_data"}, {"score": 0.004613825044585923, "phrase": "nearby_objects"}, {"score": 0.004352974291381376, "phrase": "potential_threats"}, {"score": 0.004302593474473502, "phrase": "vessel_route"}, {"score": 0.004219912413995784, "phrase": "adjacent_rescuers"}, {"score": 0.004171065188039856, "phrase": "travel_path"}, {"score": 0.004012271808564447, "phrase": "e._g."}, {"score": 0.0038148090091532933, "phrase": "hardware_limitations"}, {"score": 0.0037853015963603682, "phrase": "measuring_devices"}, {"score": 0.0037125240439927114, "phrase": "complex_natures"}, {"score": 0.003557283483525861, "phrase": "common_model"}, {"score": 0.0035024506353894644, "phrase": "possible_locations"}, {"score": 0.0033952989364738353, "phrase": "closed_region"}, {"score": 0.0032031180198375283, "phrase": "low_query_qualities"}, {"score": 0.0031537270875516108, "phrase": "undesirable_consequences"}, {"score": 0.002658068304632523, "phrase": "imprecise_objects"}, {"score": 0.0026069066266394118, "phrase": "novel_concept"}, {"score": 0.0024880904032564583, "phrase": "imprecise_data"}, {"score": 0.0023932142697579506, "phrase": "efficient_and_versatile_solution"}, {"score": 0.0023654615987859402, "phrase": "different_shapes"}, {"score": 0.0023471384232499016, "phrase": "commonly-used_imprecise_regions"}, {"score": 0.0022227806435520764, "phrase": "extensive_experiments"}, {"score": 0.002205560249972527, "phrase": "real_datasets"}, {"score": 0.002163089417146551, "phrase": "better_efficiency"}], "paper_keywords": ["Trajectory query", " possible nearest neighbor", " imprecise object", " u-bisector"], "paper_abstract": "Trajectory queries, which retrieve nearby objects for every point of a given route, can be used to identify alerts of potential threats along a vessel route, or monitor the adjacent rescuers to a travel path. However, the locations of these objects (e. g., threats, succours) may not be precisely obtained due to hardware limitations of measuring devices, as well as complex natures of the surroundings. For such data, we consider a common model, where the possible locations of an object are bounded by a closed region, called \"imprecise region\". Ignoring or coarsely wrapping imprecision can render low query qualities, and cause undesirable consequences such as missing alerts of threats and poor response rescue time. Also, the query is quite time-consuming, since all points on the trajectory are considered. In this paper, we study how to efficiently evaluate trajectory queries over imprecise objects, by proposing a novel concept, u-bisector, which is an extension of bisector specified for imprecise data. Based on the u-bisector, we provide an efficient and versatile solution which supports different shapes of commonly-used imprecise regions (e. g., rectangles, circles, and line segments). Extensive experiments on real datasets show that our proposal achieves better efficiency, quality, and scalability than its competitors.", "paper_title": "Scalable Evaluation of Trajectory Queries over Imprecise Location Data", "paper_id": "WOS:000341570800016"}