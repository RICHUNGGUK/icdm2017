{"auto_keywords": [{"score": 0.04431277486761943, "phrase": "psopti"}, {"score": 0.00481495049065317, "phrase": "stochastic_imperfect-information_games"}, {"score": 0.004653667500876187, "phrase": "high-performance_poker-playing_program"}, {"score": 0.0043842558719324526, "phrase": "best_program"}, {"score": 0.004130376386308024, "phrase": "game_theory"}, {"score": 0.003991932110277654, "phrase": "simplified_version"}, {"score": 0.0034532961266947734, "phrase": "opponent's_weaknesses"}, {"score": 0.0029116257477000617, "phrase": "vexbot"}, {"score": 0.002742787059497186, "phrase": "game-tree_search_algorithm"}, {"score": 0.0026507289852980512, "phrase": "expected_value"}, {"score": 0.002583713580625699, "phrase": "betting_option"}, {"score": 0.0024969812322112174, "phrase": "real-time_opponent_modeling"}, {"score": 0.0021049977753042253, "phrase": "strong_human_players"}], "paper_keywords": [""], "paper_abstract": "Building a high-performance poker-playing program is a challenging project. The best program to date, PSOPTI, uses game theory to solve a simplified version of the game. Although the program plays reasonably well, it is oblivious to the opponent's weaknesses and biases. Modeling the opponent to exploit predictability is critical to success at poker. This paper introduces VEXBOT, a program that uses a game-tree search algorithm to compute the expected value of each betting option, and does real-time opponent modeling to improve its evaluation function estimates. The result is a program that defeats PSOPTI convincingly, and poses a much tougher challenge for strong human players.", "paper_title": "Game-tree search with adaptation in stochastic imperfect-information games", "paper_id": "WOS:000236481900002"}