{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "neighbor_seeds"}, {"score": 0.011988879256241583, "phrase": "high_weight_seeds"}, {"score": 0.0045641317216991205, "phrase": "\"_possible_homologies"}, {"score": 0.004430452655732319, "phrase": "common_practice"}, {"score": 0.004326321719714357, "phrase": "homology_search"}, {"score": 0.004275173711009189, "phrase": "molecular_sequences"}, {"score": 0.004052358316137446, "phrase": "higher_weight_seeds"}, {"score": 0.004004436217742343, "phrase": "better_sensitivity"}, {"score": 0.003933609372601274, "phrase": "single_lower_weight_seed"}, {"score": 0.0037731618765688584, "phrase": "huge_memory_requirements"}, {"score": 0.0035341028694769036, "phrase": "two-stage_extension_method"}, {"score": 0.0034101316738399203, "phrase": "modest_memory_requirements"}, {"score": 0.003290494847464381, "phrase": "previously_studied_ideas"}, {"score": 0.003251552926963083, "phrase": "vector_seed_and_multiple_seeds"}, {"score": 0.003063627258654102, "phrase": "two-stage_extension"}, {"score": 0.0027522340188241446, "phrase": "well-known_criterion"}, {"score": 0.0026556165534143915, "phrase": "major_advantage"}, {"score": 0.002385595105638277, "phrase": "biological_adequacy"}, {"score": 0.002357337046408753, "phrase": "different_neighbor_seeds"}, {"score": 0.0022881443200668886, "phrase": "different_queries"}, {"score": 0.0021049977753042253, "phrase": "memory_usage"}], "paper_keywords": ["local alignment", " hit-and-extend", " spaced seed"], "paper_abstract": "Using a seed to rapidly \"hit\" possible homologies for further scrutiny is a common practice to speed up homology search in molecular sequences. It was shown that a collection of higher weight seeds have better sensitivity than a single lower weight seed at the same speed. However, huge memory requirements diminish the advantages of high weight seeds. This paper describes a two-stage extension method, which simulates high weight seeds with modest memory requirements. By drawing upon the previously studied ideas of vector seed and multiple seeds, we introduce neighbor seeds, which are implemented using two-stage extension. Neighbor seeds provide the flexibility to maximize the independence between the seeds, which is a well-known criterion for optimizing sensitivity. A major advantage of neighbor seeds is that they all rely on the same pre-built database index. Based on considerations of sensitivity and biological adequacy, different neighbor seeds can be used for different queries without rebuilding the index. The paper also discusses some other practical techniques to reduce memory usage.", "paper_title": "Rapid homology search with neighbor seeds", "paper_id": "WOS:000247032500006"}