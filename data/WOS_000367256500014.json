{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "valor"}, {"score": 0.010296294637744377, "phrase": "data_races"}, {"score": 0.006244368312343498, "phrase": "fastrcd"}, {"score": 0.004766504040786478, "phrase": "efficient"}, {"score": 0.004718314112245913, "phrase": "software-only_region_conflict_exceptions"}, {"score": 0.004623608221548592, "phrase": "programming_language_semantics"}, {"score": 0.004530794611704416, "phrase": "data_race"}, {"score": 0.004395040468458808, "phrase": "existing_techniques"}, {"score": 0.004177724522109952, "phrase": "synchronization-free_regions"}, {"score": 0.003971111060168551, "phrase": "hardware_or_slow_programs"}, {"score": 0.003797010439752826, "phrase": "fasttrack"}, {"score": 0.0034277338119963886, "phrase": "high_performance"}, {"score": 0.0033588449972778004, "phrase": "costly_analysis"}, {"score": 0.003308085469148074, "phrase": "read_operation"}, {"score": 0.003144345057121367, "phrase": "region's_reads"}, {"score": 0.002713788077665689, "phrase": "epoch_optimization_strategy"}, {"score": 0.002672750634553146, "phrase": "fasttrack_data_race_detector"}, {"score": 0.0023780209525032688, "phrase": "first_region_conflict_detector"}, {"score": 0.002342048999008582, "phrase": "strong_semantic_guarantees"}, {"score": 0.0023183698048498797, "phrase": "racy_program_executions"}, {"score": 0.0021049977753042253, "phrase": "strong_behavioral_guarantees"}], "paper_keywords": ["Conflict exceptions", " data races", " dynamic analysis", " region serializability"], "paper_abstract": "Data races complicate programming language semantics, and a data race is often a bug. Existing techniques detect data races and define their semantics by detecting conflicts between synchronization-free regions (SFRs). However, such techniques either modify hardware or slow programs dramatically, preventing always-on use today. This paper describes Valor, a sound, precise, software-only region conflict detection analysis that achieves high performance by eliminating the costly analysis on each read operation that prior approaches require. Valor instead logs a region's reads and lazily detects conflicts for logged reads when the region ends. As a comparison, we have also developed FastRCD, a conflict detector that leverages the epoch optimization strategy of the FastTrack data race detector. We evaluate Valor, FastRCD, and FastTrack, showing that Valor dramatically outperforms FastRCD and FastTrack. Valor is the first region conflict detector to provide strong semantic guarantees for racy program executions with under 2X slowdown. Overall, Valor advances the state of the art in always-on support for strong behavioral guarantees for data races.", "paper_title": "Valor: Efficient, Software-Only Region Conflict Exceptions", "paper_id": "WOS:000367256500014"}