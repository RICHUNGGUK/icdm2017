{"auto_keywords": [{"score": 0.03536697936815565, "phrase": "wsp"}, {"score": 0.014360775660473434, "phrase": "authorized_users"}, {"score": 0.00846291828945691, "phrase": "fpt"}, {"score": 0.00481495049065317, "phrase": "iterative_plan_construction"}, {"score": 0.004720269202737973, "phrase": "workflow_satisfiability_problem"}, {"score": 0.0045726187330434025, "phrase": "practical_interest"}, {"score": 0.004273951631010383, "phrase": "business_rules"}, {"score": 0.0036601552758254757, "phrase": "constraint_satisfaction_problem"}, {"score": 0.0027815466400771768, "phrase": "novel_approach"}, {"score": 0.0026944181318776955, "phrase": "csp"}, {"score": 0.0026099289298770023, "phrase": "generic_algorithm"}, {"score": 0.0025382066972107777, "phrase": "workflow_constraints"}, {"score": 0.0024006068621542642, "phrase": "fpt_languages"}, {"score": 0.0023346234464901978, "phrase": "simple_compatibility_condition"}, {"score": 0.002270449532546444, "phrase": "new_fpt_constraint_language"}, {"score": 0.0021645053655350703, "phrase": "business_processing_systems"}], "paper_keywords": [""], "paper_abstract": "The Workflow Satisfiability Problem (WSP) is a problem of practical interest that arises whenever tasks need to be performed by authorized users, subject to constraints defined by business rules. We are required to decide whether there exists a plan - an assignment of tasks to authorized users - such that all constraints are satisfied. It is natural to see the WSP as a subclass of the Constraint Satisfaction Problem (CSP) in which the variables are tasks and the domain is the set of users. What makes the WSP distinctive is that the number of tasks is usually very small compared to the number of users, so it is appropriate to ask for which constraint languages the WSP is fixed-parameter tractable (FPT), parameterized by the number of tasks. This novel approach to the WSP, using techniques from CSP, has enabled us to design a generic algorithm which is FPT for several families of workflow constraints considered in the literature. Furthermore, we prove that the union of FPT languages remains FPT if they satisfy a simple compatibility condition. Lastly, we identify a new FPT constraint language, user-independent constraints, that includes many of the constraints of interest in business processing systems. We demonstrate that our generic algorithm has provably optimal running time O* (2(k) (log) (k)), for this language, where k is the number of tasks.", "paper_title": "Iterative Plan Construction for the Workflow Satisfiability Problem", "paper_id": "WOS:000350466400003"}