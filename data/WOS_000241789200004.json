{"auto_keywords": [{"score": 0.025167814366433762, "phrase": "ibm"}, {"score": 0.00481495049065317, "phrase": "linear_datalog_programs"}, {"score": 0.00446987606516801, "phrase": "semantic_query_optimization_approach"}, {"score": 0.003948613642680196, "phrase": "datalog_notation"}, {"score": 0.0035755653799043, "phrase": "program_p"}, {"score": 0.0030554300179552415, "phrase": "functional_dependencies"}, {"score": 0.0029805015010906013, "phrase": "input_program_p"}, {"score": 0.002907405102646616, "phrase": "linear_recursive_datalog_program"}, {"score": 0.0028360962841331634, "phrase": "new_program_p"}, {"score": 0.002616733971450174, "phrase": "coral"}, {"score": 0.0021049977753042253, "phrase": "original_program"}], "paper_keywords": ["deductive databases", " semantic query optimization", " SQL : 1999", " recursion"], "paper_abstract": "In this work, we present a semantic query optimization approach to improve the efficiency of the evaluation of a subset of SQL:1999 recursive queries. Using datalog notation, we can state our main contribution as an algorithm that builds a program P' equivalent to a given program P, when both are applied over a database d satisfying a set of functional dependencies. The input program P is a linear recursive datalog program. The new program P' has less different variables and, sometimes, less atoms in rules, thus it is cheaper to evaluate. Using CORAL and IBM DB2, P' is empirically shown to be more efficient than the original program.", "paper_title": "A semantic approach to optimize linear datalog programs", "paper_id": "WOS:000241789200004"}