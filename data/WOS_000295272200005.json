{"auto_keywords": [{"score": 0.03804712672731131, "phrase": "sequence_diagrams"}, {"score": 0.01020142137192291, "phrase": "scenario_languages"}, {"score": 0.004447201233380302, "phrase": "software_development"}, {"score": 0.004377077848734575, "phrase": "typical_usage_scenarios"}, {"score": 0.0043080553835735825, "phrase": "forbidden_behaviors"}, {"score": 0.004240116703465252, "phrase": "test_cases"}, {"score": 0.003978866233891427, "phrase": "graphical_scenarios"}, {"score": 0.003475752825796926, "phrase": "uml"}, {"score": 0.0024488738006005133, "phrase": "semantic_choices"}, {"score": 0.002316105585203396, "phrase": "formal_semantics"}], "paper_keywords": ["UML", " Sequence diagrams", " Semantics"], "paper_abstract": "Scenario languages are widely used in software development. Typical usage scenarios, forbidden behaviors, test cases, and many more aspects can be depicted with graphical scenarios. Scenario languages were introduced into the Unified Modeling Language (UML) under the name of Sequence Diagrams. The 2.0 version of UML changed Sequence Diagrams significantly and the expressiveness of the language was highly increased. However, the complexity of the language (and the diversity of the goals Sequence Diagrams are used for) yields several possible choices in its semantics. This paper collects and categorizes the semantic choices in the language, surveys the formal semantics proposed for Sequence Diagrams, and presents how these approaches handle the various semantic choices.", "paper_title": "The many meanings of UML 2 Sequence Diagrams: a survey", "paper_id": "WOS:000295272200005"}