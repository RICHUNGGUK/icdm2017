{"auto_keywords": [{"score": 0.04771533004845802, "phrase": "llvm"}, {"score": 0.00481495049065317, "phrase": "contemporary_compiler_systems"}, {"score": 0.004500891637057374, "phrase": "profile-guided_optimizations"}, {"score": 0.0043150485532080065, "phrase": "low-level_intermediate_code"}, {"score": 0.004102096151528319, "phrase": "impressive_results"}, {"score": 0.004033464035028803, "phrase": "purely_static_heuristics"}, {"score": 0.003965975628742746, "phrase": "recent_work"}, {"score": 0.0038668462001710314, "phrase": "profile_information"}, {"score": 0.0032938942910948096, "phrase": "profiling_information"}, {"score": 0.0031577303835881964, "phrase": "data_structures"}, {"score": 0.0029764767329116875, "phrase": "asymptotic_improvements"}, {"score": 0.002758597251689795, "phrase": "profile-guided_meta-programming"}, {"score": 0.002689564715486338, "phrase": "general-purpose_meta-programming_system"}, {"score": 0.0025137856138000014, "phrase": "particular_profiler"}, {"score": 0.002471661547432869, "phrase": "meta-programming_system"}, {"score": 0.002195866991284673, "phrase": "chez_scheme"}, {"score": 0.0021590588269751816, "phrase": "racket-"}], "paper_keywords": ["Design", " Performance", " Languages", " Optimization", " profiling", " profile-guided optimization", " PGO", " meta-programming"], "paper_abstract": "Contemporary compiler systems such as GCC,. NET, and LLVM incorporate profile-guided optimizations (PGOs) on low-level intermediate code and basic blocks, with impressive results over purely static heuristics. Recent work shows that profile information is also useful for performing source-to-source optimizations via meta-programming. For example, using profiling information to inform decisions about data structures and algorithms can potentially lead to asymptotic improvements in performance. We present a design for profile-guided meta-programming in a general-purpose meta-programming system. Our design is parametric over the particular profiler and meta-programming system. We implement this design in two different meta-programming systems-the syntactic extensions systems of Chez Scheme and Racket- and provide several profile-guided meta-programs as usability case studies.", "paper_title": "Profile- Guided Meta-Programming", "paper_id": "WOS:000361284200038"}