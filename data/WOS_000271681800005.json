{"auto_keywords": [{"score": 0.041435594524021443, "phrase": "fault_prediction"}, {"score": 0.011207791256079251, "phrase": "qalp_score"}, {"score": 0.010718678979392156, "phrase": "software_quality"}, {"score": 0.009935187277757216, "phrase": "language_processing_measures"}, {"score": 0.00481495049065317, "phrase": "software_fault_prediction"}, {"score": 0.0046242451772036145, "phrase": "faulty_modules"}, {"score": 0.004461051281091779, "phrase": "software_project"}, {"score": 0.004303591748086452, "phrase": "software_development"}, {"score": 0.0038985392250620483, "phrase": "first_measure"}, {"score": 0.003777800904236079, "phrase": "natural_language"}, {"score": 0.0037272031155266556, "phrase": "program's_identifiers"}, {"score": 0.003677280504320636, "phrase": "second_measure"}, {"score": 0.0035156341294017685, "phrase": "third_measure"}, {"score": 0.0033160345607565565, "phrase": "information_retrieval"}, {"score": 0.0031277316566463978, "phrase": "human_judgments"}, {"score": 0.002833035775182696, "phrase": "linear_mixed-effects_regression_models"}, {"score": 0.0023033100935570755, "phrase": "language_processing"}, {"score": 0.0021723899772112423, "phrase": "program_module"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Information retrieval", " Code comprehension", " Fault prediction", " Linear regression models", " Empirical software engineering"], "paper_abstract": "While challenging, the ability to predict faulty modules of a program is valuable to a software project because it can reduce the cost of software development, as well as software maintenance and evolution. Three language-processing based measures are introduced and applied to the problem of fault prediction. The first measure is based on the usage of natural language in a program's identifiers. The second measure concerns the conciseness and consistency of identifiers. The third measure, referred to as the QALP score, makes use of techniques from information retrieval to judge software quality. The QALP score has been shown to correlate with human judgments of software quality. Two case studies consider the language processing measures applicability to fault prediction using two programs (one open source, one proprietary). Linear mixed-effects regression models are used to identify relationships between defects and the measures. Results, while complex, show that language processing measures improve fault prediction, especially when used in combination. Overall, the models explain one-third and two-thirds of the faults in the two case studies. Consistent with other uses of language processing, the value of the three measures increases with the size of the program module considered. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Increasing diversity: Natural language measures for software fault prediction", "paper_id": "WOS:000271681800005"}