{"auto_keywords": [{"score": 0.04961049691122095, "phrase": "artificial_intelligence"}, {"score": 0.004561386908745206, "phrase": "quantified_boolean_formula"}, {"score": 0.004516746325503371, "phrase": "qbf"}, {"score": 0.004406994912939125, "phrase": "resulting_encoding"}, {"score": 0.004257806363128601, "phrase": "qbf_solver"}, {"score": 0.004154332348800334, "phrase": "black_box"}, {"score": 0.004093453936415085, "phrase": "rapid_implementation"}, {"score": 0.003935420482629049, "phrase": "current_solvers"}, {"score": 0.003820896867623235, "phrase": "prenex_conjunctive_normal_form"}, {"score": 0.003496868378204654, "phrase": "specific_normal_form"}, {"score": 0.003445591238183763, "phrase": "additional_step"}, {"score": 0.003247868216333148, "phrase": "formula's_structure"}, {"score": 0.0028857130140890787, "phrase": "alternative_way"}, {"score": 0.0026277995163948263, "phrase": "arbitrary_formulas"}, {"score": 0.002464709648714996, "phrase": "non-normal_form_case"}, {"score": 0.0023928819778638055, "phrase": "leading_normal_form"}, {"score": 0.0021896891011033105, "phrase": "non-clausal_form"}, {"score": 0.002146926767291475, "phrase": "novel_approach"}, {"score": 0.0021049977753042253, "phrase": "sequent-style_formulation"}], "paper_keywords": ["Solver", " QBFs", " Negation normal form"], "paper_abstract": "Various problems in artificial intelligence can be solved by translating them into a quantified boolean formula (QBF) and evaluating the resulting encoding. In this approach, a QBF solver is used as a black box in a rapid implementation of a more general reasoning system. Most of the current solvers for QBFs require formulas in prenex conjunctive normal form as input, which makes a further translation necessary, since the encodings are usually not in a specific normal form. This additional step increases the number of variables in the formula or disrupts the formula's structure. Moreover, the most important part of this transformation, prenexing, is not deterministic. In this paper, we focus on an alternative way to process QBFs without these drawbacks and describe a solver, qpro, which is able to handle arbitrary formulas. To this end, we extend algorithms for QBFs to the non-normal form case and compare qpro with the leading normal form provers on several problems from the area of artificial intelligence. We prove properties of the algorithms generalized to non-clausal form by using a novel approach based on a sequent-style formulation of the calculus.", "paper_title": "A solver for QBFs in negation normal form", "paper_id": "WOS:000262544100004"}