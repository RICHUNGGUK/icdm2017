{"auto_keywords": [{"score": 0.04969424673283721, "phrase": "multi-class_classification"}, {"score": 0.048951593908953754, "phrase": "svm"}, {"score": 0.00481495049065317, "phrase": "vector_machine"}, {"score": 0.004739056045644449, "phrase": "support_vector_machine"}, {"score": 0.0045726187330434025, "phrase": "binary_classification_problem"}, {"score": 0.004447201233380302, "phrase": "multiple_binary_classifiers"}, {"score": 0.00435971969507033, "phrase": "high_computation_cost"}, {"score": 0.004123781267600542, "phrase": "hyper-sphere_svm"}, {"score": 0.004026598712747509, "phrase": "class-specific_hyper-sphere"}, {"score": 0.0036023971109946946, "phrase": "new_decision_rules"}, {"score": 0.0034482025128821548, "phrase": "multiple_subhyper-sphere"}, {"score": 0.0032614317990293695, "phrase": "smo_algorithm"}, {"score": 0.0031467250930224126, "phrase": "position_relationships"}, {"score": 0.0030000149283621255, "phrase": "overlap_coefficient"}, {"score": 0.002917604283241353, "phrase": "key_value_index"}, {"score": 0.0027594936602962075, "phrase": "new_intersecting_hyper-spheres"}, {"score": 0.0026099289298770023, "phrase": "decision_rule"}, {"score": 0.002478297391121455, "phrase": "larger_radius"}, {"score": 0.0023346234464901978, "phrase": "decision_function"}, {"score": 0.002270449532546444, "phrase": "experimental_results"}, {"score": 0.0021731423856364003, "phrase": "resulting_classifier"}, {"score": 0.002147333949483224, "phrase": "computation_complexity"}, {"score": 0.0021049977753042253, "phrase": "artificial_and_benchmark_data"}], "paper_keywords": ["Hyper-sphere support vector machine", " multi-class classification", " sub-hyper-sphere", " overlap coefficient"], "paper_abstract": "Support vector machine (SVM) is originally proposed to solve binary classification problem. Multi-class classification is solved by combining multiple binary classifiers, which leads to high computation cost by introducing many quadratic programming (QP) problems. To decrease computation cost, hyper-sphere SVM is put forward to compute class-specific hyper-sphere for each class. If all resulting hyper-spheres are independent, all training and test samples can be correctly classified. When some of hyper-spheres intersect, new decision rules should be adopted. To solve this problem, a multiple subhyper-sphere SVM is put forward in this paper. New algorithm computed hyper-spheres by SMO algorithm for all classes first, and then obtained position relationships between hyper-spheres. If hyper-spheres belong to the intersection set, overlap coefficient is computed based on map of key value index and mother hyper-spheres are partitioned into a series of sub-hyper-spheres. For the new intersecting hyper-spheres, one similarity function or same error sub-hyper-sphere or different error sub-hyper-sphere are used as decision rule. If hyper-spheres belong to the inclusion set, the hyper-sphere with larger radius is partitioned into sub-hyper-spheres. If hyper-spheres belong to the independence set, a decision function is defined for classification. With experimental results compared to other hyper-sphere SVMs, our new proposed algorithm improves the performance of the resulting classifier and decreases computation complexity for decision on both artificial and benchmark data set.", "paper_title": "Multiple sub-hyper-spheres support vector machine for multi-class classification", "paper_id": "WOS:000336657900013"}