{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "continued_logarithms"}, {"score": 0.004539011651263672, "phrase": "gosper"}, {"score": 0.004278807087784626, "phrase": "exact_rational_arithmetic"}, {"score": 0.0040334640350288, "phrase": "real_arithmetic"}, {"score": 0.003312486229143855, "phrase": "efficient_hardware_implementation"}, {"score": 0.002943147037670826, "phrase": "speculative_recognition"}, {"score": 0.0028857130140890787, "phrase": "noncomputable_cases"}, {"score": 0.00266693888510356, "phrase": "real_number_computability"}, {"score": 0.0025137856138000014, "phrase": "beneficial_properties"}, {"score": 0.0022777800735119405, "phrase": "arithmetic_algorithms"}, {"score": 0.0021049977753042253, "phrase": "efficient_implementation"}], "paper_keywords": ["Computer arithmetic", " representation of numbers", " continued fraction", " redundancy", " computable real numbers", " exact arithmetic"], "paper_abstract": "Continued logarithms, as originally introduced by Gosper, represent a means for exact rational arithmetic, but their application to exact real arithmetic is limited by the uniqueness of their representation. This is quite unfortunate, as this representation seems promising for efficient hardware implementation. We propose an idea of making the representation redundant using speculative recognition of noncomputable cases. This approach solves the problem of real number computability, preserves most of the beneficial properties of continued logarithms, and only moderately affects complexity of arithmetic algorithms, thus, keeping the prospect of efficient implementation.", "paper_title": "Speculatively Redundant Continued Logarithm Representation", "paper_id": "WOS:000282091200001"}