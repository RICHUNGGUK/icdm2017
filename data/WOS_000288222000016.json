{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "failure_detector"}, {"score": 0.04940434737342583, "phrase": "self-tuning_control_theory"}, {"score": 0.04808171687412101, "phrase": "distributed_systems"}, {"score": 0.004640472497133447, "phrase": "important_research_issue"}, {"score": 0.004497762477097628, "phrase": "fundamental_issue"}, {"score": 0.0044722886002206115, "phrase": "fault_tolerance"}, {"score": 0.004446958354683721, "phrase": "large_distributed_systems"}, {"score": 0.004322433660826523, "phrase": "failure_detection"}, {"score": 0.004213332968720317, "phrase": "generic_service"}, {"score": 0.0041657281535389615, "phrase": "ip_address_lookup"}, {"score": 0.003935620172060555, "phrase": "classical_failure_detectors"}, {"score": 0.0037287578312533596, "phrase": "local_networks"}, {"score": 0.0036657110980445416, "phrase": "important_problems"}, {"score": 0.003634587156159668, "phrase": "wide-area_distributed_systems"}, {"score": 0.0035731269727067496, "phrase": "monitored_components"}, {"score": 0.0035327299348774342, "phrase": "grid_systems"}, {"score": 0.0034434928798003956, "phrase": "security_management_scheme"}, {"score": 0.0032810180076973806, "phrase": "large_wide-area"}, {"score": 0.003207225752446834, "phrase": "novel_failure_detector_scheme"}, {"score": 0.002961741486178455, "phrase": "scalable_failure_detection_service"}, {"score": 0.002886885861509621, "phrase": "heartbeat_streams"}, {"score": 0.0028299715593858056, "phrase": "bottleneck_router_requirements"}, {"score": 0.002805923530823771, "phrase": "basic_z-transformation_stability_test"}, {"score": 0.002758437099292967, "phrase": "stability_criterion"}, {"score": 0.0027194778713860715, "phrase": "bounded_rate_allocation"}, {"score": 0.0027040482680875605, "phrase": "steady_state_oscillation"}, {"score": 0.0026507289852980512, "phrase": "online_failure_detector_control_algorithm"}, {"score": 0.00256905228394684, "phrase": "theoretical_aspects"}, {"score": 0.0025472157850600563, "phrase": "proposed_algorithm"}, {"score": 0.002468720732692048, "phrase": "wan_case"}, {"score": 0.0024547103576350233, "phrase": "simulation_results"}, {"score": 0.0023926387830753033, "phrase": "high_utilization"}, {"score": 0.002372298201966367, "phrase": "bottleneck_link"}, {"score": 0.00235883374582576, "phrase": "fast_response"}, {"score": 0.002345445530251524, "phrase": "good_stability"}, {"score": 0.0022666933944714986, "phrase": "controlled_sending_rates"}, {"score": 0.002228312305868068, "phrase": "new_security_management_failure_detector_algorithm"}, {"score": 0.0022032416565007863, "phrase": "qos"}, {"score": 0.0021473633367460714, "phrase": "et_al"}, {"score": 0.0021049977753042253, "phrase": "high_performance_distributed_computing"}], "paper_keywords": ["Failure detection", " Distributed systems", " Quality of service", " Heartbeat", " Self-tuning control theory"], "paper_abstract": "Information security management has become an important research issue in distributed systems, and the detection of failures is a fundamental issue for fault tolerance in large distributed systems. Recently, many people have come to realize that failure detection ought to be provided as some form of generic service, similar to IP address lookup. However, this has not been successful so far; one of the reasons being the fact that classical failure detectors were not designed to satisfy several application requirements simultaneously. More specifically, traditional implementations of failure detectors are often tuned for running over local networks and fail to address some important problems found in wide-area distributed systems with a large number of monitored components, such as Grid systems. In this paper, we study the security management scheme for failure detector distributed systems. We first identify some of the most important QoS problems raised in the context of large wide-area distributed systems. Then we present a novel failure detector scheme combined with self-tuning control theory that can help in solving or optimizing some of these problems. Furthermore, this paper discusses the design and analysis of implementing a scalable failure detection service for such large wide-area distributed systems considering dynamically adjusting the heartbeat streams, so that it satisfies the bottleneck router requirements. The basic z-transformation stability test is used to achieve the stability criterion, which ensures the bounded rate allocation without steady state oscillation. We further show how the online failure detector control algorithm can be used to design a controller, analyze the theoretical aspects of the proposed algorithm and verify its agreement with the simulations in the LAN and WAN case. Simulation results show the efficiency of our scheme in terms of high utilization of the bottleneck link, fast response and good stability of the bottleneck router buffer occupancy as well as of the controlled sending rates. In conclusion, the new security management failure detector algorithm provides a better QoS than an algorithm that is proposed by Stelling et al. (Proceedings of 7th IEEE symposium on high performance distributed computing, pp. 268-278, 1998), Foster et al. (Int J Supercomput Appl, 2001).", "paper_title": "A security management scheme for failure detector distributed systems based on self-tuning control theory", "paper_id": "WOS:000288222000016"}