{"auto_keywords": [{"score": 0.04921771032829598, "phrase": "constraint_automata"}, {"score": 0.015719746525787847, "phrase": "reo"}, {"score": 0.004201774694043468, "phrase": "operational_model"}, {"score": 0.003871869188502677, "phrase": "compositional_construction"}, {"score": 0.003802135020791801, "phrase": "component_connectors"}, {"score": 0.0034717929086014636, "phrase": "composition_operators"}, {"score": 0.0026913130726432645, "phrase": "automated_construction"}, {"score": 0.002502374576203785, "phrase": "equivalence_checking"}, {"score": 0.0022231606165229235, "phrase": "coordination_mechanisms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["constraint automata", " Reo", " timed data streams", " coordination", " components", " composition", " bisimulation", " simulation", " verification"], "paper_abstract": "In this paper we introduce constraint automata and propose them as an operational model for Reo, an exogenous coordination language for compositional construction of component connectors based on a calculus of channels. By providing composition operators for constraint automata and defining notions of equivalence and refinement relations for them, this paper covers the foundations for building tools to address concerns such as the automated construction of the automaton for a given component connector, equivalence checking or containment checking of the behavior of two given connectors, and verification of coordination mechanisms. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Modeling component connectors in Reo by constraint automata", "paper_id": "WOS:000238020600002"}