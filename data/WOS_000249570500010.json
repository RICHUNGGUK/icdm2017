{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sl_synchronous_programming_model"}, {"score": 0.0329235942341221, "phrase": "bisimulation_equivalence"}, {"score": 0.004606479650820579, "phrase": "esterel._synchronous_model"}, {"score": 0.004033464035028803, "phrase": "next_instant"}, {"score": 0.003945117054416623, "phrase": "previous_work"}, {"score": 0.003531474887552889, "phrase": "alternative_design"}, {"score": 0.003353521531649663, "phrase": "cps_translation"}, {"score": 0.0032800186243040663, "phrase": "tail_recursive_form"}, {"score": 0.0030239842475439814, "phrase": "present_work"}, {"score": 0.002914288956035066, "phrase": "tail_recursive_model"}, {"score": 0.0028715299874549245, "phrase": "first-order_data_types"}, {"score": 0.0028085616610192456, "phrase": "non-deterministic_synchronous_model"}, {"score": 0.0023003498123420237, "phrase": "labelled_bisimulation"}, {"score": 0.0022005118194652704, "phrase": "contextual_bisimulation"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": [""], "paper_abstract": "The SL synchronous programming model is a relaxation of the ESTEREL. synchronous model where the reaction to the absence of a signal within an instant can only happen at the next instant. In previous work, we have revisited the SL synchronous programming model. In particular, we have discussed an alternative design of the model, introduced a CPS translation to a tail recursive form, and proposed a notion of bisimulation equivalence. In the present work, we extend the tail recursive model with first-order data types obtaining a non-deterministic synchronous model whose complexity is comparable to the one of the pi-calculus. We show that our approach to bisimulation equivalence can cope with this extension and in particular that labelled bisimulation can be characterised as a contextual bisimulation. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "A synchronous pi-calculus", "paper_id": "WOS:000249570500010"}