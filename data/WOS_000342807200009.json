{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "energy_consumption"}, {"score": 0.04226255901245674, "phrase": "runtime_task_schedulers"}, {"score": 0.041548377360067223, "phrase": "parallel_executions"}, {"score": 0.004758457292840376, "phrase": "runtime_schedulers"}, {"score": 0.0047026237903774895, "phrase": "dense_linear_algebra"}, {"score": 0.004565876339189493, "phrase": "exascale_computing"}, {"score": 0.004485735417293941, "phrase": "holistic_effort"}, {"score": 0.003916098498242888, "phrase": "minimal_developer_intervention"}, {"score": 0.0037133478610481994, "phrase": "programmability_issue"}, {"score": 0.0033584796908285894, "phrase": "supermatrix_runtime_task_scheduler"}, {"score": 0.0032800186243040663, "phrase": "libflame_library"}, {"score": 0.0031845067058084583, "phrase": "high_performance"}, {"score": 0.00314708280192844, "phrase": "energy_efficiency"}, {"score": 0.002966438503447793, "phrase": "hybrid_parallel_executions"}, {"score": 0.002914288956035066, "phrase": "task_priorities"}, {"score": 0.0028800314406626022, "phrase": "dense_linear_algebra_operations"}, {"score": 0.0028293966058473476, "phrase": "remarkable_performance_improvements"}, {"score": 0.002651213849567608, "phrase": "idle_times"}, {"score": 0.0025587867729949037, "phrase": "important_energy_savings"}, {"score": 0.0024405312482831646, "phrase": "power_consumption_model"}, {"score": 0.0021940118003312397, "phrase": "energy_considerations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["runtime schedulers", " energy-aware computing", " hybrid architectures", " dense linear algebra"], "paper_abstract": "The road towards Exascale Computing requires a holistic effort to address three different challenges simultaneously: high performance, energy efficiency, and programmability. The use of runtime task schedulers to orchestrate parallel executions with minimal developer intervention has been introduced in recent years to tackle the programmability issue while maintaining, or even improving, performance. In this paper, we enhance the SuperMatrix runtime task scheduler integrated in the libflame library in two different directions that address high performance and energy efficiency. First, we extend the runtime by accommodating hybrid parallel executions and managing task priorities for dense linear algebra operations, with remarkable performance improvements. Second, we introduce techniques to reduce energy consumption during idle times inherent to parallel executions, attaining important energy savings. In addition, we propose a power consumption model that can be leveraged by runtime task schedulers to make decisions based not only on performance but also on energy considerations. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Enhancing performance and energy consumption of runtime schedulers for dense linear algebra", "paper_id": "WOS:000342807200009"}