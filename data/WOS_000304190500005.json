{"auto_keywords": [{"score": 0.04838919478929022, "phrase": "case_diagrams"}, {"score": 0.00481495049065317, "phrase": "generalization_defects"}, {"score": 0.004746263721902197, "phrase": "uml_use_case_diagrams"}, {"score": 0.004481132747216135, "phrase": "uml-based_development"}, {"score": 0.004081385289516914, "phrase": "user_requirements"}, {"score": 0.003937273640906994, "phrase": "good_modeling_practices"}, {"score": 0.003361069456060196, "phrase": "relevant_generalizations"}, {"score": 0.002995554770117301, "phrase": "formal_concept_analysis"}, {"score": 0.0028689475587958917, "phrase": "relational_concept_analysis"}, {"score": 0.0027675275077806744, "phrase": "use_case_diagram"}, {"score": 0.0024664004864629703, "phrase": "original_diagram"}], "paper_keywords": ["Formal Concept Analysis", " UML use case diagrams"], "paper_abstract": "Use case diagrams appear early within a UML-based development, structured over the concepts of actors and use cases to capture user requirements of an application. Good modeling practices suggest that use case diagrams should be simple and easy-to-read, two goals that can be achieved by introducing relevant generalizations of actors and use cases. The approach presented in this paper allows, using Formal Concept Analysis and one of its variants, Relational Concept Analysis, to refactor a use case diagram as a whole in order to make it clearer while respecting the semantics of the original diagram. The relevancy of this approach has been confirmed by its implementation as a tool and the results obtained from its application on several representative diagrams.", "paper_title": "Fixing Generalization Defects in UML Use Case Diagrams", "paper_id": "WOS:000304190500005"}