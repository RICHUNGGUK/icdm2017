{"auto_keywords": [{"score": 0.040869582274540454, "phrase": "application_state"}, {"score": 0.00481495049065317, "phrase": "green_telnet_modifying"}, {"score": 0.0044237033788643715, "phrase": "energy_consumption"}, {"score": 0.004270178957872099, "phrase": "growing_interest"}, {"score": 0.003978866233891427, "phrase": "tcp_connections"}, {"score": 0.0038407203087210775, "phrase": "connection_state"}, {"score": 0.0035533891890176823, "phrase": "sleep_state"}, {"score": 0.0034057975804778293, "phrase": "tcp_connection"}, {"score": 0.0030847461428168614, "phrase": "tight_coupling"}, {"score": 0.0030199761431186434, "phrase": "idle_client_machine"}, {"score": 0.002548331088496964, "phrase": "client_machine"}, {"score": 0.0024597305738431226, "phrase": "energy_inefficient_state"}, {"score": 0.002391067964886602, "phrase": "outstanding_work"}, {"score": 0.0021350169717509714, "phrase": "power_management"}, {"score": 0.0021049977753042253, "phrase": "client_machines"}], "paper_keywords": [""], "paper_abstract": "Reducing the energy consumption of IT equipment is of growing interest for operational, economic, and environmental reasons. The existing client/server model that uses TCP connections tightly couples application state to connection state. Thus, when a client machine transitions to a sleep state to reduce its energy footprint, the TCP connection drops and the application state is lost on the server. Because of this tight coupling, an idle client machine must remain fully awake to avoid losing its TCP connection to the server and any application state associated with that connection. That is, the client machine must remain in this energy inefficient state or lose any outstanding work (state) in the server. As a result, users often permanently disable power management in client machines.", "paper_title": "Green Telnet Modifying a client-server application to save energy", "paper_id": "WOS:000260058400007"}