{"auto_keywords": [{"score": 0.0046140009557609505, "phrase": "expensive_edge"}, {"score": 0.004475597685984868, "phrase": "bipartite_graph_g"}, {"score": 0.004341327904613504, "phrase": "k_vertices"}, {"score": 0.004297468608441439, "phrase": "largest_degrees"}, {"score": 0.0042713650920965344, "phrase": "minimum_number"}, {"score": 0.004176995775714618, "phrase": "top-k_extension"}, {"score": 0.003882429961405574, "phrase": "worst_case"}, {"score": 0.0038198341614558966, "phrase": "pessimistic_estimate"}, {"score": 0.003773547995526828, "phrase": "practical_data"}, {"score": 0.003543157499955545, "phrase": "huge_difference"}, {"score": 0.0034507643746661816, "phrase": "adaptive_algorithm"}, {"score": 0.0034020127818550484, "phrase": "best_possible_performance"}, {"score": 0.003374463542065949, "phrase": "g._for_k"}, {"score": 0.0032731196284566206, "phrase": "broad_class"}, {"score": 0.0031555037245151224, "phrase": "optimal_solution"}, {"score": 0.0030359216881374706, "phrase": "second_step"}, {"score": 0.0030052107622258197, "phrase": "epsilon-approximate_version"}, {"score": 0.0029808651838699432, "phrase": "-mcv_problem"}, {"score": 0.0028678822685051187, "phrase": "k_black_vertices"}, {"score": 0.002601111827990301, "phrase": "nonascending_order"}, {"score": 0.0025643330397834598, "phrase": "k_most_connected_black_vertices"}, {"score": 0.002538380487243248, "phrase": "efficient_randomized_algorithm"}, {"score": 0.0025126899280702684, "phrase": "correct_answer"}, {"score": 0.0025024864722014172, "phrase": "high_probability"}, {"score": 0.0024670987617391653, "phrase": "fixed_epsilon"}, {"score": 0.002452085826726678, "phrase": "fixed_success_probability"}, {"score": 0.0021614365769069754, "phrase": "easy_implementation"}, {"score": 0.002143911817060269, "phrase": "extensive_experiments"}], "paper_keywords": ["Theory", " Maximum degree", " bipartite graph", " competitive analysis"], "paper_abstract": "An (edge) hidden graph is a graph whose edges are not explicitly given. Detecting the presence of an edge requires an expensive edge probing query. We consider the k Most Connected Vertex (k-MCV) problem on hidden bipartite graphs. Given a bipartite graph G with independent vertex sets B and W, the goal is to find the k vertices in B with the largest degrees using the minimum number of queries. This problem can be regarded as a top-k extension of semi-join, and is encountered in several applications in practice. If B and W have n and m vertices, respectively, the number of queries needed to solve the problem is nm in the worst case. This, however, is a pessimistic estimate on how many queries are necessary on practical data. In fact, on some inputs, the problem may be settled with only km + n queries, which is significantly lower than nm for k << n. The huge difference between km + n and nm makes it interesting to design an adaptive algorithm that is guaranteed to achieve the best possible performance on every input G. For k <= n/2, we give an algorithm that is instance optimal among a broad class of solutions. This means that, for any G, our algorithm can perform more queries than the optimal solution ( which is unknown) by only a constant factor, which can be shown at most 2. As a second step, we study an epsilon-approximate version of the k-MCV problem, where epsilon is a parameter satisfying 0 < epsilon < 1. The goal is to return k black vertices b(1), . . . , b(k) such that the degree of b(i) (i <= k) can be smaller than t(i) by a factor of at most epsilon, where t(1), . . . , t(k) ( in nonascending order) are the degrees of the k most connected black vertices. We give an efficient randomized algorithm that successfully finds the correct answer with high probability. In particular, for a fixed epsilon and a fixed success probability, our algorithm performs o(nm) queries in expectation for t(k) = omega(log n). In other words, whenever t(k) is greater than log n by more than a constant, our algorithm beats the Omega(nm) lower bound for solving the k-MCV problem exactly. All the proposed algorithms, despite the complication of their underlying theory, are simple enough for easy implementation in practice. Extensive experiments have confirmed that their performance in reality agrees with our theoretical findings very well.", "paper_title": "Exact and Approximate Algorithms for the Most Connected Vertex Problem", "paper_id": "WOS:000304769100005"}