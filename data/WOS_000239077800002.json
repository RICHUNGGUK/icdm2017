{"auto_keywords": [{"score": 0.04072472046898861, "phrase": "cod_framework"}, {"score": 0.022955906981394544, "phrase": "data_stream_environment"}, {"score": 0.015876341831344346, "phrase": "summary_hierarchies"}, {"score": 0.005325825001617552, "phrase": "summary_hierarchy"}, {"score": 0.005184328853370151, "phrase": "clustering_results"}, {"score": 0.00481495049065317, "phrase": "multiple_evolving_streams"}, {"score": 0.004672953146379813, "phrase": "different_time_instances"}, {"score": 0.004603525341738782, "phrase": "data_evolution"}, {"score": 0.0043619799095455415, "phrase": "continuous_data_streams"}, {"score": 0.004258717300328513, "phrase": "group_behavior"}, {"score": 0.004182871028054003, "phrase": "flexible_clustering_requirements"}, {"score": 0.004059438255358923, "phrase": "demand_framework"}, {"score": 0.003916098498242888, "phrase": "multiple_data_streams"}, {"score": 0.0037664981403399064, "phrase": "online_statistics_collection"}, {"score": 0.00374399358035391, "phrase": "compact_multiresolution_approximations"}, {"score": 0.00333097896868937, "phrase": "online_maintenance_phase"}, {"score": 0.0033011569787033297, "phrase": "efficient_mechanism"}, {"score": 0.0032520438684277885, "phrase": "data_streams"}, {"score": 0.0032326031622964477, "phrase": "multiple_resolutions"}, {"score": 0.003118367740261359, "phrase": "data_points"}, {"score": 0.0030262520433471333, "phrase": "adaptive_clustering_algorithm"}, {"score": 0.002981216610222911, "phrase": "offline_phase"}, {"score": 0.002936849401568391, "phrase": "desired_substreams"}, {"score": 0.002893140560765452, "phrase": "clustering_queries"}, {"score": 0.0028245516301681713, "phrase": "wavelet_and_regression_analyses"}, {"score": 0.0027575842698911173, "phrase": "regression-based_summary_hierarchy"}, {"score": 0.0026841368358805433, "phrase": "better_clustering_results"}, {"score": 0.0026362590493392785, "phrase": "slightly_longer_time"}, {"score": 0.0025660347613972573, "phrase": "wavelet-based_one"}, {"score": 0.002543043781904587, "phrase": "adaptive_version"}, {"score": 0.0024604876113911173, "phrase": "wavelet-based_model"}, {"score": 0.0024384399939984163, "phrase": "regression-based_model"}, {"score": 0.002380605108907738, "phrase": "adaptive_cod"}, {"score": 0.0023311233166534214, "phrase": "almost_the_same_quality"}, {"score": 0.002310232205403468, "phrase": "regression-based_cod"}, {"score": 0.002228519136218028, "phrase": "complexity_analyses"}], "paper_keywords": ["data mining", " clustering of multiple data streams", " time-series clustering"], "paper_abstract": "In the data stream environment, the patterns generated at different time instances are different due to data evolution. As time progresses, the behavior and members of clusters usually change. Hence, clustering continuous data streams allows us to observe the changes of group behavior. In order to support flexible clustering requirements, we devise in this paper a Clustering on Demand framework, abbreviated as COD framework, to dynamically cluster multiple data streams. While providing a general framework of clustering on multiple data streams, the COD framework has two advantageous features, namely, one data scan for online statistics collection and compact multiresolution approximations, which are designed to address, respectively, the time and the space constraints in a data stream environment. The COD framework consists of two phases, i.e., the online maintenance phase and the offline clustering phase. The online maintenance phase provides an efficient mechanism to maintain summary hierarchies of data streams with multiple resolutions in time linear in both the number of streams and the number of data points in each stream. On the other hand, an adaptive clustering algorithm is devised for the offline phase to retrieve approximations of desired substreams from summary hierarchies according to clustering queries. We propose two summarization techniques, based on wavelet and regression analyses, to construct the summary hierarchies. The regression-based summary hierarchy approximates the data stream more precisely and provides better clustering results, at the cost of slightly longer time than and twice the storage space as the wavelet-based one. An adaptive version of COD framework is designed to make a selection between a wavelet-based model and a regression-based model for building the summary hierarchy. By the adaptive COD, we can obtain clustering results with almost the same quality as the regression-based COD while using much less storage space for the summary hierarchy. As shown in the complexity analyses and also validated by our empirical studies, the COD framework performs very efficiently in the data stream environment while producing clustering results of very high quality.", "paper_title": "Adaptive clustering for multiple evolving streams", "paper_id": "WOS:000239077800002"}