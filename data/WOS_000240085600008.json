{"auto_keywords": [{"score": 0.049505168345722585, "phrase": "np"}, {"score": 0.023219058464505362, "phrase": "stratified_context_unification"}, {"score": 0.010235529540730247, "phrase": "context_unification"}, {"score": 0.009354564548036364, "phrase": "second-order_variables"}, {"score": 0.004345706062641742, "phrase": "second-order_equations"}, {"score": 0.003898411343926653, "phrase": "second-order_variable_x"}, {"score": 0.0037597491055035895, "phrase": "exactly_one_occurrence_of_the_bound_variable_x_in_r._stratified_context_unification"}, {"score": 0.003155819294170298, "phrase": "pspace"}, {"score": 0.0027298319171606498, "phrase": "size-minimal_solution"}, {"score": 0.0026326249204932733, "phrase": "singleton_tree_grammar"}, {"score": 0.002600995957987461, "phrase": "polynomial_size"}, {"score": 0.002478225374613311, "phrase": "plandowski's_polynomial_algorithm"}, {"score": 0.0024336917123957387, "phrase": "compacted_terms"}, {"score": 0.002404447017429959, "phrase": "polynomial_time"}, {"score": 0.002318799760022913, "phrase": "high_potential"}, {"score": 0.0022909325048608054, "phrase": "singleton_tree_grammars"}, {"score": 0.0022633993976138387, "phrase": "optimizing_programs"}, {"score": 0.0022361964497681934, "phrase": "large_terms"}, {"score": 0.0021049977753042253, "phrase": "rewrite_constraints"}], "paper_keywords": [""], "paper_abstract": "Context Unification is the problem to decide for a given set of second-order equations E where all second-order variables are unary, whether there exists a unifier, such that for every second-order variable X, the abstraction lambda chi.r instantiated for X has exactly one occurrence of the bound variable x in r. Stratified Context Unification is a specialization where the nesting of second-order variables in E is restricted. It is already known that Stratified Context Unification is decidable, NP-hard, and in PSPACE, whereas the decidability and the complexity of Context Unification is unknown. We prove that Stratified Context Unification is in NP by proving that a size-minimal solution can be represented in a singleton tree grammar of polynomial size, and then applying a generalization of Plandowski's polynomial algorithm that compares compacted terms in polynomial time. This also demonstrates the high potential of singleton tree grammars for optimizing programs maintaining large terms. A corollary of our result is that solvability of rewrite constraints is NP-complete.", "paper_title": "Stratified Context Unification is NP-complete", "paper_id": "WOS:000240085600008"}