{"auto_keywords": [{"score": 0.04618257984771548, "phrase": "voting_graph"}, {"score": 0.03382635040606128, "phrase": "value_function"}, {"score": 0.011236080282448421, "phrase": "highest_value"}, {"score": 0.010423542635037123, "phrase": "strict_support_monotonicity_property"}, {"score": 0.00903045968149853, "phrase": "voting_graphs"}, {"score": 0.00481495049065317, "phrase": "n_peers"}, {"score": 0.0043936826006683175, "phrase": "directed_graph"}, {"score": 0.004274610359999488, "phrase": "u_votes"}, {"score": 0.0039004324253746896, "phrase": "voting_system"}, {"score": 0.003829607343365726, "phrase": "positive_integer_value"}, {"score": 0.003360734563718502, "phrase": "election_mechanism"}, {"score": 0.0031230591693744525, "phrase": "linear_time"}, {"score": 0.0029694519806034957, "phrase": "even_one_voter"}, {"score": 0.0026538644809552953, "phrase": "pruned_voting_graph"}, {"score": 0.002623605602890015, "phrase": "rooted_forest"}, {"score": 0.0025582418565991976, "phrase": "value_functions"}, {"score": 0.0024491438861845814, "phrase": "k_members"}, {"score": 0.0023179456444907633, "phrase": "largest_value"}, {"score": 0.00228625674492907, "phrase": "single_member"}, {"score": 0.0021787111898748965, "phrase": "better_guarantee"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Weighted voting", " Voting system", " Vote manipulation", " Directed graph", " Ranking", " Value function"], "paper_abstract": "A group of n peers, e.g., computer scientists, has to choose the best, i.e., the most competent among them. Each member of the group may vote for one other member, or abstain. Self-voting is not allowed. A voting graph is a directed graph in which an arc (u, v) means that u votes for v. While opinions may be subjective, resulting in various voting graphs, it is natural to assume that more competent peers are also, in general, more competent in evaluating competence of others. We capture this by proposing a voting system in which each member is assigned a positive integer value satisfying the following strict support monotonicity property: the value of x is larger than the value of y if and only if the sum of values of members voting for x is larger than the sum of values of members voting for y. Then we choose the member with the highest value, or if there are several such members, another election mechanism, e.g., using randomness, chooses one of them. We show that for every voting graph there is a value function satisfying the strict support monotonicity property and that such a function can be computed in linear time. However, it turns out that this method of choosing the best among peers is vulnerable to vote manipulation: even one voter of very low value may change his/her vote so as to get the highest value. This is due to the possibility of loops (directed cycles) in the voting graph. Hence we slightly modify voting graphs by erasing all arcs that belong to some cycle. This modification results in a pruned voting graph which is always a rooted forest. We show that for all pruned voting graphs there are value functions giving a guarantee against manipulation. More precisely, we show a value function guaranteeing that no coalition of k members all of whose values are lower than those of (1 - 1/(k + 1))n other members can manipulate their votes so that one of them gets the largest value. In particular, no single member from the lower half of the group is able to manipulate his/her vote to become elected. We also show that no better guarantee can be given for any value function satisfying the strict support monotonicity property. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Choosing the best among peers", "paper_id": "WOS:000305435400005"}