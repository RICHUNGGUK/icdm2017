{"auto_keywords": [{"score": 0.03726682411720791, "phrase": "shortest_paths"}, {"score": 0.00481495049065317, "phrase": "graph_distance"}, {"score": 0.004723322467153553, "phrase": "shared_nothing_architectures"}, {"score": 0.004611224230543916, "phrase": "parallel_toolkit"}, {"score": 0.004567129988306349, "phrase": "pairwise_distance_computation"}, {"score": 0.004523455475492876, "phrase": "massive_networks"}, {"score": 0.004437349839203418, "phrase": "exact_shortest_paths"}, {"score": 0.0043738432231020885, "phrase": "large_number"}, {"score": 0.004270003565426343, "phrase": "costly_operation"}, {"score": 0.004208881856146758, "phrase": "serial_algorithms"}, {"score": 0.004108942392772092, "phrase": "billion-scale_graphs"}, {"score": 0.003992129945230457, "phrase": "efficient_parallel_method"}, {"score": 0.003916098498242888, "phrase": "single_source"}, {"score": 0.0038973170902076707, "phrase": "shortest_path_problem"}, {"score": 0.0038600230206554792, "phrase": "commodity_hardware"}, {"score": 0.0038047474331318974, "phrase": "shared_memory"}, {"score": 0.003696550794743764, "phrase": "building_block"}, {"score": 0.003608732492631878, "phrase": "new_parallel_algorithm"}, {"score": 0.0035060903664150115, "phrase": "arbitrary_pairs"}, {"score": 0.0034063576796640603, "phrase": "data_locality"}, {"score": 0.0033575566897536906, "phrase": "highly_accurate_results"}, {"score": 0.003293570937654716, "phrase": "batch_computation"}, {"score": 0.0030790429005600898, "phrase": "proposed_algorithm"}, {"score": 0.002850875630787708, "phrase": "large_amounts"}, {"score": 0.0027965187255008647, "phrase": "expensive_high-end_servers"}, {"score": 0.0026395715432958665, "phrase": "betweenness_centrality_metrics"}, {"score": 0.0025892330566358503, "phrase": "systems_challenges"}, {"score": 0.00247944491239733, "phrase": "large_datasets"}, {"score": 0.0023743009016047424, "phrase": "real-world_web_graph"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["graph mining", " shortest paths", " graph centrality", " MapReduce"], "paper_abstract": "We present a parallel toolkit for pairwise distance computation in massive networks. Computing the exact shortest paths between a large number of vertices is a costly operation, and serial algorithms are not practical for billion-scale graphs. We first describe an efficient parallel method to solve the single source shortest path problem on commodity hardware with no shared memory. Using it as a building block, we introduce a new parallel algorithm to estimate the shortest paths between arbitrary pairs of vertices. Our method exploits data locality, produces highly accurate results, and allows batch computation of shortest paths with 7% average error in graphs that contain billions of edges. The proposed algorithm is up to two orders of magnitude faster than previously suggested algorithms and does not require large amounts of memory or expensive high-end servers. We further leverage this method to estimate the closeness and betweenness centrality metrics, which involve systems challenges dealing with indexing, joining, and comparing large datasets efficiently. In one experiment, we mined a real-world Web graph with 700 million nodes and 12 billion edges to identify the most central vertices and calculated more than 63 billion shortest paths in 6 h on a 20-node commodity cluster. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Estimating graph distance and centrality on shared nothing architectures", "paper_id": "WOS:000362978600003"}