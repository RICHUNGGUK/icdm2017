{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "programmable_logic_controllers"}, {"score": 0.0045119929871912405, "phrase": "complex_cyber-physical_systems"}, {"score": 0.004036141321779216, "phrase": "robust_approach"}, {"score": 0.003852939975815287, "phrase": "plc-based_embedded_systems"}, {"score": 0.003320561182494713, "phrase": "design_model"}, {"score": 0.003199345207727474, "phrase": "model_checking_techniques"}, {"score": 0.0029699874949715367, "phrase": "plc_code"}, {"score": 0.0029152570900178956, "phrase": "timed_automata"}, {"score": 0.002731500545019039, "phrase": "prototype_tool"}, {"score": 0.0025592969422491476, "phrase": "developing_process"}, {"score": 0.002420339995088838, "phrase": "plc_programs"}, {"score": 0.0023537101705489957, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["PLC", " Formal specification", " Code synthesis", " Embedded software"], "paper_abstract": "Programmable logic controllers (PLCs) are complex cyber-physical systems which are widely used in industry. This paper presents a robust approach to design and implement PLC-based embedded systems. Timed automata are used to model the controller and its environment. We validate the design model with resort to model checking techniques. We propose an algorithm to generate PLC code from timed automata and implement this algorithm with a prototype tool. This method can condense the developing process and guarantee the correctness of PLC programs. A case study demonstrates the effectiveness of the method. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Formal modeling and synthesis of programmable logic controllers", "paper_id": "WOS:000286088800003"}