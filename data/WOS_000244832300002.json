{"auto_keywords": [{"score": 0.046481645015043, "phrase": "generic_haskell"}, {"score": 0.00481495049065317, "phrase": "xml-haskell_data"}, {"score": 0.004594951819987416, "phrase": "type_isomorphism_inference"}, {"score": 0.004055998173160551, "phrase": "type-preserving_xml_schema-haskell_data"}, {"score": 0.002968424524565369, "phrase": "canonical_isomorphisms"}, {"score": 0.0026609940110902666, "phrase": "machine-generated_types"}, {"score": 0.0021049977753042253, "phrase": "inference_mechanism"}], "paper_keywords": ["Generic programming", " polytypic programming", " Generic Haskell", " isomorphisms", " XML Schema"], "paper_abstract": "This paper introduces a type-preserving XML Schema-Haskell data binding (or, translation) UUXML, and shows how to customize it by exploiting the theory of canonical isomorphisms to automatically infer coercions between the machine-generated types and an equivalent, more natural, user-defined set of types. We show how to implement the inference mechanism in Generic Haskell. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Customizing an XML-Haskell data binding with type isomorphism inference in Generic Haskell", "paper_id": "WOS:000244832300002"}