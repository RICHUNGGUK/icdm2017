{"auto_keywords": [{"score": 0.025043029570240877, "phrase": "andersen"}, {"score": 0.00481495049065317, "phrase": "abstract_interpretation"}, {"score": 0.004630626571109149, "phrase": "software_engineering_research"}, {"score": 0.004367228576339114, "phrase": "component_development"}, {"score": 0.004012885020428863, "phrase": "formal_specification"}, {"score": 0.003935267970727093, "phrase": "system_p"}, {"score": 0.003735522846193052, "phrase": "possible_collaborators"}, {"score": 0.0033222630615013763, "phrase": "abstract_interpretation_framework"}, {"score": 0.0031535341431377837, "phrase": "systematic_way"}, {"score": 0.002935393439834135, "phrase": "transition_systems"}, {"score": 0.0027323009127771525, "phrase": "satisfy_phi"}, {"score": 0.0026274936167233515, "phrase": "abstract_semantics"}, {"score": 0.0024616504443079512, "phrase": "l._we"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Compositional verification", " Temporal logic", " Concurrency"], "paper_abstract": "Nowadays the emphasis in software engineering research is on the evolution of preexisting sub-systems and component development. In this context, we tackle the following problem: given the formal specification of the system P, already built, how to characterize possible collaborators of P, through a given communication interface L, to the satisfaction of a given property phi. We propose an abstract interpretation framework to reason about this problem in a systematic way. Given P and L, the set of all transition systems that, composed with P and restricted by L, satisfy phi, is modeled as the abstract semantics of phi, parametric with respect to P and L. We show that the algorithm developed by Andersen (1995) [1] can be formulated in our framework. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Partial model checking via abstract interpretation", "paper_id": "WOS:000274077500004"}