{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_push_plans"}, {"score": 0.004511663118269957, "phrase": "passive_object"}, {"score": 0.004065474891313382, "phrase": "active_robot"}, {"score": 0.003859146369720225, "phrase": "push_plan"}, {"score": 0.0034999880739789257, "phrase": "non-intersecting_line_segments"}, {"score": 0.0030924870122337905, "phrase": "larger_algorithm"}, {"score": 0.0029545864975783023, "phrase": "first_algorithm"}, {"score": 0.0026274936167233515, "phrase": "shortest_path"}, {"score": 0.0021049977753042253, "phrase": "produced_path"}], "paper_keywords": ["Path planning", " pushing"], "paper_abstract": "Suppose we want to move a passive object along a given path, among obstacles in the plane, by pushing it with an active robot. We present two algorithms to compute a push plan for the case that the object and robot are disks and the obstacles are non-intersecting line segments. (When only the object's destination and not its full path is given these algorithms can still be used as subroutines in a larger algorithm to compute such a path.) The first algorithm assumes that the robot must maintain contact with the object at all times, and produces a shortest path. There are also situations, however, where the robot has no choice but to let go of the object occasionally. Our second algorithm handles such cases, but no longer guarantees that the produced path is the shortest possible.", "paper_title": "COMPUTING PUSH PLANS FOR DISK-SHAPED ROBOTS", "paper_id": "WOS:000324479200002"}