{"auto_keywords": [{"score": 0.0485973663751699, "phrase": "query_result"}, {"score": 0.035136827273338375, "phrase": "partitioned_indexes"}, {"score": 0.014255565933798058, "phrase": "query_keywords"}, {"score": 0.014129323549701485, "phrase": "search_systems"}, {"score": 0.010766624576395089, "phrase": "effective_result_depth"}, {"score": 0.004815145680905101, "phrase": "adaptive"}, {"score": 0.0047292449487169345, "phrase": "efficient_xml_keyword_search"}, {"score": 0.004603525341738782, "phrase": "xml_keyword_search"}, {"score": 0.0040777192615062815, "phrase": "inverted_indexes"}, {"score": 0.003677280504320636, "phrase": "\"effective_result_depth"}, {"score": 0.0031559919178954644, "phrase": "different_partitions"}, {"score": 0.003113696267229798, "phrase": "result_elements"}, {"score": 0.0030171910207671205, "phrase": "query_results"}, {"score": 0.002708399936381754, "phrase": "original_depth"}, {"score": 0.00257760787870709, "phrase": "changed_depth"}, {"score": 0.002543043781904587, "phrase": "experimental_results"}, {"score": 0.002431151320280666, "phrase": "acm"}, {"score": 0.0023770362063833903, "phrase": "retrieval_-_content_analysis"}, {"score": 0.002262209824105154, "phrase": "text_processing_-_document"}, {"score": 0.0021821915946356168, "phrase": "database_management_-_systems_-_textual"}, {"score": 0.002124036931047162, "phrase": "retrieval_-_information_search"}, {"score": 0.0021049977753042253, "phrase": "retrieval_-_information"}], "paper_keywords": [""], "paper_abstract": "A query result of an XML keyword search is usually defined as a set of the most specific elements containing all query keywords. Search systems find the query result by considering the combinations of all elements in the inverted indexes of the query keywords. However, we conclude that it is not necessary to consider the combinations of all the elements, when an \"effective result depth\" (which represents how deeply nested elements are eligible for the query result) is given. This paper describes a way to construct partitioned indexes on the effective result depth, guaranteeing that the combinations of elements in different partitions never produce result elements. Therefore, search systems can find query results by considering only combinations of elements in the same partitions. Partitioned indexes are adaptable; when an effective result depth is changed, partitioned indexes constructed on the original depth can be used efficiently without being reconstructed physically on the changed depth. The experimental results show that our approach worked quite well in most cases. ACM Classification: H.3.1 (Information Storage and Retrieval - Content Analysis and Indexing - Indexing methods); 1.7.2 (Document and Text Processing - Document Preparation Index generation); H.2.4 (Database Management - Systems - Textual databases); H.3.3 (Information Storage and Retrieval - Information Search and Retrieval - Information filtering)", "paper_title": "Adaptive partitioned indexes for efficient XML keyword search", "paper_id": "WOS:000249285900005"}