{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fpga_configuration_bits"}, {"score": 0.004787116526591974, "phrase": "field-programmable_gate_arrays"}, {"score": 0.004677372885331908, "phrase": "radiation-induced_single_event"}, {"score": 0.004517435235940661, "phrase": "space_environment"}, {"score": 0.0044524122425287005, "phrase": "increasing_use"}, {"score": 0.004388321050344759, "phrase": "modern_fpgas"}, {"score": 0.004262881313926916, "phrase": "terrestrial_environment"}, {"score": 0.0042015068508885044, "phrase": "sram_bits"}, {"score": 0.00417733451991925, "phrase": "fpga"}, {"score": 0.004081385289516914, "phrase": "implemented_design"}, {"score": 0.0040226133433241065, "phrase": "fpga_designers"}, {"score": 0.0038401488612789963, "phrase": "triple_modular_redundancy"}, {"score": 0.003818028246490953, "phrase": "tmr"}, {"score": 0.0037411604449359794, "phrase": "fpga_bit"}, {"score": 0.0036979855349860134, "phrase": "design_complexity"}, {"score": 0.00367658459781873, "phrase": "limited_battery_life"}, {"score": 0.003644714340300824, "phrase": "alternative_approaches"}, {"score": 0.003623620572273257, "phrase": "soft-error_tolerance"}, {"score": 0.0034995881411519925, "phrase": "autonomous_fault-masking_capabilities"}, {"score": 0.0033699898113395328, "phrase": "lookup_tables"}, {"score": 0.003292626019313584, "phrase": "critical_configuration_bits"}, {"score": 0.003264073180191501, "phrase": "spare_resources"}, {"score": 0.0030888830649190282, "phrase": "lut_restructuring"}, {"score": 0.0030709962527878656, "phrase": "lut_decomposition"}, {"score": 0.003026729690052019, "phrase": "proposed_approach"}, {"score": 0.002948646905471742, "phrase": "wide_set"}, {"score": 0.0029061392263716036, "phrase": "mcnc"}, {"score": 0.0027984556312357673, "phrase": "proposed_logic_restructuring"}, {"score": 0.0026024303981224827, "phrase": "fault_rate"}, {"score": 0.002579847272930948, "phrase": "entire_design"}, {"score": 0.0024987020562103448, "phrase": "existing_techniques"}, {"score": 0.002462664392109308, "phrase": "logic_decomposition_algorithm"}, {"score": 0.002448394921890037, "phrase": "incremental_fault-tolerance_capabilities"}, {"score": 0.0023782753249846794, "phrase": "slice_usage"}, {"score": 0.002357632753637638, "phrase": "complete_methodology"}, {"score": 0.0023101592330916822, "phrase": "xilinx_fpga"}, {"score": 0.002237477619351199, "phrase": "research_community"}, {"score": 0.0021797112385590913, "phrase": "whole_design_flow"}, {"score": 0.0021607883988873492, "phrase": "xilinx_place"}, {"score": 0.0021049977753042253, "phrase": "largest_benchmark"}], "paper_keywords": ["FPGA", " Fault Tolerance", " FPGAs", " soft errors", " SRAM configuration bits", " LUTs"], "paper_abstract": "Field-programmable gate arrays (FPGAs) are increasingly susceptible to radiation-induced single event upsets (SEUs). These upsets are predominant in a space environment; however, with increasing use of static RAM (SRAM) in modern FPGAs, these SEUs are gaining prominence even in a terrestrial environment. SEUs can flip SRAM bits of FPGA, potentially altering the functionality of the implemented design. This has motivated FPGA designers to investigate techniques to protect the FPGA configuration bits against such inadvertent bit flips (soft error). Traditionally, triple modular redundancy (TMR) is used to protect the FPGA bit flips. Increasing design complexity and limited battery life motivate for alternative approaches for soft-error tolerance. In this article, we propose a technique to improve autonomous fault-masking capabilities of a design by maximizing the number of zeros or ones in lookup tables (LUTs). The technique analyzes critical configuration bits and utilizes spare resources (XOR gates and carry chains) of FPGAs to selectively manipulate the logic implemented in LUTs using two operations: LUT restructuring and LUT decomposition. We implemented the proposed approach for Xilinx Virtex-6 FPGAs and validated the same with a wide set of designs from the MCNC, IWLS 2005, and ITC99 benchmark suites. Results demonstrate that the proposed logic restructuring maximizes logic 0 (or 1) of LUTs by an average of 20%, achieving 80% fault masking with no area overhead. The fault rate of the entire design is reduced by 60% on average as compared to the existing techniques. Furthermore, the logic decomposition algorithm provides incremental fault-tolerance capabilities and achieves an additional 5% fault masking with an average 7% increase in slice usage. The complete methodology is implemented into a tool for Xilinx FPGA and is made available online for the benefit of the research community. The algorithms are lightweight, and the whole design flow (including Xilinx Place and Route) was completed in 75 minutes for the largest benchmark in the set.", "paper_title": "Autonomous Soft-Error Tolerance of FPGA Configuration Bits", "paper_id": "WOS:000354051700007"}