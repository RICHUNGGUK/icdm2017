{"auto_keywords": [{"score": 0.03644451033122438, "phrase": "multi-agent_planning"}, {"score": 0.004449045430179066, "phrase": "modal_logics"}, {"score": 0.0039942998891989955, "phrase": "multi-agent_domains"}, {"score": 0.003937273640906994, "phrase": "relatively_few_computational_frameworks"}, {"score": 0.0037171648669537287, "phrase": "useful_transformations"}, {"score": 0.0030171910207671205, "phrase": "logic_programming"}, {"score": 0.002889672003089062, "phrase": "interesting_forms"}, {"score": 0.002747676657869163, "phrase": "kripke_models"}, {"score": 0.0026889720516076205, "phrase": "lp_modeling"}, {"score": 0.002612640527241776, "phrase": "useful_operators"}, {"score": 0.0025752890978323873, "phrase": "kripke_structures"}, {"score": 0.00232832698253493, "phrase": "knowledge_actions"}, {"score": 0.0022298571016688335, "phrase": "first_ever_implementation"}, {"score": 0.0021049977753042253, "phrase": "complex_multi-agent_domains"}], "paper_keywords": ["planning", " multi-agents", " modal logics"], "paper_abstract": "The logics of knowledge are modal logics that have been shown to be effective in representing and reasoning about knowledge in multi-agent domains. Relatively few computational frameworks for dealing with computation of models and useful transformations in logics of knowledge (e.g., to support multi-agent planning with knowledge actions and degrees of visibility) have been proposed. This paper explores the use of logic programming (LP) to encode interesting forms of logics of knowledge and compute Kripke models. The LP modeling is expanded with useful operators on Kripke structures, to support multi-agent planning in the presence of both world-altering and knowledge actions. This results in the first ever implementation of a planner for this type of complex multi-agent domains.", "paper_title": "Logic programming for finding models in the logics of knowledge and its applications: A case study", "paper_id": "WOS:000280508200021"}