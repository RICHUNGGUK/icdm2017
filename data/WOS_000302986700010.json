{"auto_keywords": [{"score": 0.025901709702066896, "phrase": "non-overrunning_tasks"}, {"score": 0.00481495049065317, "phrase": "dynamic_qos_resource_management"}, {"score": 0.004772818068176176, "phrase": "future_high-quality_consumer_electronics"}, {"score": 0.004567596860086148, "phrase": "highly_dynamic_environment"}, {"score": 0.004332894955218135, "phrase": "underlying_platform_software"}, {"score": 0.00427612041204006, "phrase": "multimedia_applications"}, {"score": 0.004146510711518748, "phrase": "frequent_run-time_variations"}, {"score": 0.003985602342418578, "phrase": "greedy_nature"}, {"score": 0.0039333604469462356, "phrase": "multimedia_processing"}, {"score": 0.003847802030433298, "phrase": "resource_demands"}, {"score": 0.003780692127133743, "phrase": "numerous_reasons"}, {"score": 0.0036660436272785476, "phrase": "input_media_compression_format"}, {"score": 0.003586278948128509, "phrase": "real-time_adaptation_mechanisms"}, {"score": 0.00352371416065881, "phrase": "system_operation"}, {"score": 0.003477505397536663, "phrase": "new_requirements"}, {"score": 0.0033131804981786747, "phrase": "user_experience"}, {"score": 0.003226834737003501, "phrase": "application_execution"}, {"score": 0.003142732162296465, "phrase": "service_resource_management_techniques"}, {"score": 0.00304737045343781, "phrase": "resource_contracts"}, {"score": 0.0029161225023394363, "phrase": "resource_assignments"}, {"score": 0.0028652153774536967, "phrase": "resource_overruns"}, {"score": 0.0027782510491938315, "phrase": "clear_limitation"}, {"score": 0.0027417911324611917, "phrase": "cost-effective_resource_usage"}, {"score": 0.002670296619878048, "phrase": "simple_priority_assignment_scheme"}, {"score": 0.0026352496813713292, "phrase": "uniform_priority_bands"}, {"score": 0.0025892330566358503, "phrase": "greedy_multimedia_tasks"}, {"score": 0.002555247330102505, "phrase": "safe_overruns"}, {"score": 0.0025217065652145443, "phrase": "resource_usage"}, {"score": 0.0024559368099486647, "phrase": "timely_execution"}, {"score": 0.0023604768913655463, "phrase": "proposed_priority_assignment_scheme"}, {"score": 0.0023090525096074264, "phrase": "resource_accounting_mechanism"}, {"score": 0.002288797099841088, "phrase": "timely_multimedia_execution"}, {"score": 0.0022290883852844057, "phrase": "higher_cost-effective_processor_usage"}, {"score": 0.0021805201234139475, "phrase": "execution_isolation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Resource management", " Quality of service (QoS)", " Real-time", " Consumer electronics", " Multimedia", " Embedded systems"], "paper_abstract": "Future high-quality consumer electronics will contain a number of applications running in a highly dynamic environment, and their execution will need to be efficiently arbitrated by the underlying platform software. The multimedia applications that currently execute in such similar contexts face frequent run-time variations in their resource demands, originated by the greedy nature of the multimedia processing itself. Changes in resource demands are triggered by numerous reasons (e.g. a switch in the input media compression format). Such situations require real-time adaptation mechanisms to adjust the system operation to the new requirements, and this must be done seamlessly to satisfy the user experience. One solution for efficiently managing application execution is to apply quality of service resource management techniques, based on assigning and enforcing resource contracts to applications. Most resource management solutions provide temporal isolation by enforcing resource assignments and avoiding any resource overruns. However, this has a clear limitation over the cost-effective resource usage. This paper presents a simple priority assignment scheme based on uniform priority bands to allow that greedy multimedia tasks incur in safe overruns that increase resource usage and do not threaten the timely execution of non-overrunning tasks. Experimental results show that the proposed priority assignment scheme in combination with a resource accounting mechanism preserves timely multimedia execution and delivery, achieves a higher cost-effective processor usage, and guarantees the execution isolation of non-overrunning tasks. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A dual-band priority assignment algorithm for dynamic QoS resource management", "paper_id": "WOS:000302986700010"}