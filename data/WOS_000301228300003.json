{"auto_keywords": [{"score": 0.0381298379822472, "phrase": "well_ordering"}, {"score": 0.00481495049065317, "phrase": "classical_realizability"}, {"score": 0.004429388453288922, "phrase": "proof-program_correspondence"}, {"score": 0.003875424718379985, "phrase": "classical_analysis"}, {"score": 0.0038112201846057445, "phrase": "dependent_choice"}, {"score": 0.003535165233011893, "phrase": "real_line"}, {"score": 0.0034476484413811987, "phrase": "principal_tools"}, {"score": 0.0032517484445814334, "phrase": "realizability_algebra"}, {"score": 0.0031186510842824626, "phrase": "three-sorted_variant"}, {"score": 0.0030414140732789186, "phrase": "well_known_combinatory_algebra"}, {"score": 0.002990992307132906, "phrase": "curry"}, {"score": 0.0027054473441439422, "phrase": "set_theory"}, {"score": 0.0026384167183586015, "phrase": "consistency_results"}, {"score": 0.0021405207258001118, "phrase": "non_trivial_ultrafilter"}, {"score": 0.0021055166127310725, "phrase": "n."}], "paper_keywords": ["Curry-Howard correspondence", " combinatory logic", " lambda-calculus", " axiom of choice"], "paper_abstract": "The theory of classical realizability is a framework in which we can develop the proof-program correspondence. Using this framework, we show how to transform into programs the proofs in classical analysis with dependent choice and the existence of a well ordering of the real line. The principal tools are: - The notion of realizability algebra, which is a three-sorted variant of the well known combinatory algebra of Curry. - An adaptation of the method of forcing used in set theory to prove consistency results. Here, it is used in another way, to obtain programs associated with a well ordering of R and the existence of a non trivial ultrafilter on N.", "paper_title": "REALIZABILITY ALGEBRAS: A PROGRAM TO WELL ORDER R", "paper_id": "WOS:000301228300003"}