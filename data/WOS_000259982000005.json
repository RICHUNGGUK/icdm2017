{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "structural_software_evolution"}, {"score": 0.004673079747693193, "phrase": "aging_piece"}, {"score": 0.00440170067770959, "phrase": "high_coupling"}, {"score": 0.00436890075128947, "phrase": "low_cohesion"}, {"score": 0.004287961675700099, "phrase": "spaghetti_architectures"}, {"score": 0.004240116703465252, "phrase": "underlying_forces"}, {"score": 0.003556345965454902, "phrase": "sufficient_quantity"}, {"score": 0.0034773669221269594, "phrase": "specific_points"}, {"score": 0.0034385353123700885, "phrase": "causal_chain"}, {"score": 0.0033121909731471787, "phrase": "structural_evolution"}, {"score": 0.0032507647824680684, "phrase": "complete_simulation_model"}, {"score": 0.0030617295196636173, "phrase": "individual_evolutionary_effect"}, {"score": 0.002949189427671915, "phrase": "multifaceted_simulation"}, {"score": 0.0029053368919259985, "phrase": "fictitious_code_base"}, {"score": 0.0028514344213899177, "phrase": "realworld_behavior"}, {"score": 0.0027985291920293127, "phrase": "underlying_principles"}, {"score": 0.0027261023678401696, "phrase": "theoretical_and_user_perspective"}, {"score": 0.002665511985052972, "phrase": "simple_set"}, {"score": 0.00264561514767961, "phrase": "evolutionary_parameters"}, {"score": 0.002567498166608835, "phrase": "open-source_software"}, {"score": 0.0022773736136311056, "phrase": "development_cycle"}, {"score": 0.0021448202319775634, "phrase": "real-world_system_development"}, {"score": 0.0021049977753042253, "phrase": "evolutionary_structures"}], "paper_keywords": ["Simulation", " evolution", " framework software", " feedback", " object-oriented", " tool", " agent", " metrics", " plug-in", " user"], "paper_abstract": "As functionality is added to an aging piece of software, its original design and structure will tend to erode. This can lead to high coupling, low cohesion and other undesirable effects associated with spaghetti architectures. The underlying forces that cause such degradation have been the 14 subject of much research. However, progress in this field is slow, as its complexity makes it difficult to isolate the causal flows leading to these effects. This is further complicated by the difficulty of generating enough empirical data, in sufficient quantity, and attributing such data to specific points in the causal chain. This article describes a framework for simulating the structural evolution of software. A complete simulation model is built by incrementally adding modules to the framework, each of which contributes an individual evolutionary effect. These effects are then combined to form a multifaceted simulation that evolves a fictitious code base in a manner approximating realworld behavior. We describe the underlying principles and structures of our framework from a theoretical and user perspective; a validation of a simple set of evolutionary parameters is then provided and three empirical software studies generated from open-source software (OSS) are used to support claims and generated results. The research illustrates how simulation can be used to investigate a complex and under-researched area of the development cycle. It also shows the value of incorporating certain human traits into a simulation-factors that, in real-world system development, can significantly influence evolutionary structures.", "paper_title": "A Framework for the Simulation of Structural Software Evolution", "paper_id": "WOS:000259982000005"}