{"auto_keywords": [{"score": 0.04955461236891121, "phrase": "parallel_invocation_protocol"}, {"score": 0.00481495049065317, "phrase": "design_and_evaluation"}, {"score": 0.0047273577269638725, "phrase": "transactional_applications"}, {"score": 0.004641351004344458, "phrase": "edge_computing"}, {"score": 0.004590496414177077, "phrase": "powerful_tool"}, {"score": 0.004523552067565685, "phrase": "challenging_performance_requirements"}, {"score": 0.0044904452331803, "phrase": "modern_internet_applications"}, {"score": 0.004424953471635011, "phrase": "applications'_data"}, {"score": 0.004344424495876066, "phrase": "large_number"}, {"score": 0.004312622975366676, "phrase": "geographically_distributed_servers"}, {"score": 0.004281053243493438, "phrase": "edge_computing_platforms"}, {"score": 0.004218602458288531, "phrase": "significant_enhancements"}, {"score": 0.0040366412779632085, "phrase": "system_scalability"}, {"score": 0.0037921662574137535, "phrase": "application_data"}, {"score": 0.0036418947847496365, "phrase": "edge_server"}, {"score": 0.0035233696341819437, "phrase": "origin_site"}, {"score": 0.003433847524648519, "phrase": "end_users"}, {"score": 0.0033961782274326948, "phrase": "transactional_manipulations"}, {"score": 0.0033589207694997413, "phrase": "application_state"}, {"score": 0.0031786562062819327, "phrase": "corresponding_update_requests"}, {"score": 0.0030751605843937673, "phrase": "transactional_data_sources"}, {"score": 0.00300803677566719, "phrase": "performance_benefit"}, {"score": 0.002975024676463106, "phrase": "data_replication"}, {"score": 0.002953217535105884, "phrase": "client_proximity"}, {"score": 0.002713604305939145, "phrase": "end-to-end_interaction"}, {"score": 0.0026348886455716614, "phrase": "transactional_requests"}, {"score": 0.0026155681847364483, "phrase": "multiple-edge_servers"}, {"score": 0.002521064923851732, "phrase": "single-edge_server"}, {"score": 0.0024389277933858054, "phrase": "current_system_conditions"}, {"score": 0.00241214634516517, "phrase": "proposed_edge_server_selection_scheme"}, {"score": 0.0023249757987087055, "phrase": "edge_server_instances"}, {"score": 0.0021441057555396013, "phrase": "end-to-end_latency"}, {"score": 0.0021049977753042253, "phrase": "extended_simulation_study"}], "paper_keywords": ["Path-diversity", " transactional applications", " web applications", " application delivery networks", " asp infrastructures", " application level protocols"], "paper_abstract": "Edge computing is a powerful tool to face the challenging performance requirements of modern Internet applications. By replicating applications' data and logic across a large number of geographically distributed servers, edge computing platforms allow to achieve significant enhancements of the proximity between clients and contents, and of the system scalability. These platforms reveal highly effective when handling requests entailing read-only access to the application data, as these requests can be autonomously served by some edge server typically located closer to the client than the origin site. However, in contexts where end users can trigger transactional manipulations of the application state (e.g., e-Commerce, auctions or financial applications), the corresponding update requests typically need to be redirected to the origin transactional data sources, thus, nullifying any performance benefit arising from data replication and client proximity. To cope with this issue, in this paper, we present a parallel invocation protocol, which exploits the path-diversity along the end-to-end interaction toward the origin sites by concurrently routing transactional requests toward multiple-edge servers. Request processing is finally carried out by a single-edge server, adaptively selected as the most responsive one depending on current system conditions. The proposed edge server selection scheme does not require coordination among (geographically distributed) edge server instances, thus, being very light and scalable. The benefits from our protocol in terms of both reduced and more predictable end-to-end latency are quantified via an extended simulation study.", "paper_title": "Design and Evaluation of a Parallel Invocation Protocol for Transactional Applications over the Web", "paper_id": "WOS:000333469900005"}