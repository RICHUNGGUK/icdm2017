{"auto_keywords": [{"score": 0.044772342023461725, "phrase": "nefeli"}, {"score": 0.00481495049065317, "phrase": "infrastructure-as-a-service_clouds"}, {"score": 0.004630755876583033, "phrase": "physical_underlying_machinery"}, {"score": 0.004598027492787762, "phrase": "current_cloud_interface_abstractions"}, {"score": 0.0044852808671980325, "phrase": "usage_patterns"}, {"score": 0.004075596668736259, "phrase": "cloud_consumers"}, {"score": 0.004046775982578706, "phrase": "deployment_hints"}, {"score": 0.004003925104720979, "phrase": "possible_mapping"}, {"score": 0.003947492797744999, "phrase": "physical_nodes"}, {"score": 0.0038234236098488874, "phrase": "vms"}, {"score": 0.0037561467438280175, "phrase": "potential_performance_bottlenecks"}, {"score": 0.0036900720643677034, "phrase": "underlying_hardware_features"}, {"score": 0.003511159930253876, "phrase": "data_repositories"}, {"score": 0.003329051037399227, "phrase": "physical_hosting_nodes"}, {"score": 0.0031563574387360465, "phrase": "cloud_internal_physical_characteristics"}, {"score": 0.0031008008614593465, "phrase": "consumer-provided_hints"}, {"score": 0.0030570583408091488, "phrase": "high-level_placement_policies"}, {"score": 0.003013931023579108, "phrase": "cloud_administration"}, {"score": 0.0029925953740661754, "phrase": "placement_policies"}, {"score": 0.0029399127512711493, "phrase": "constraint_satisfaction_problem"}, {"score": 0.00286770704394124, "phrase": "final_vm-to-host_placement"}, {"score": 0.0027382698136572785, "phrase": "vm-to-host_mappings"}, {"score": 0.0026054071716810063, "phrase": "vm"}, {"score": 0.0024701382170046462, "phrase": "rendered_services"}, {"score": 0.0023754296478100865, "phrase": "significant_improvements"}, {"score": 0.002308834230545883, "phrase": "scientific_and_real_application_workloads"}, {"score": 0.0022361384265153677, "phrase": "energy_consumption"}, {"score": 0.0022124176057373365, "phrase": "physical_installation"}, {"score": 0.0021657265492371976, "phrase": "nefeli's_placement_choices"}, {"score": 0.002120018771276572, "phrase": "open-source_cloud_middleware"}, {"score": 0.00210499793205176, "phrase": "opennebula"}], "paper_keywords": ["Distributed systems", " cloud computing", " IaaS cloud", " virtual machine scheduling"], "paper_abstract": "Infrastructure-as-a-Service clouds offer entire virtual infrastructures for distributed processing while concealing all physical underlying machinery. Current cloud interface abstractions restrict users from providing information regarding usage patterns of their requested virtual machines (VMs). In this paper, we propose Nefeli, a virtual infrastructure gateway that lifts this restriction. Through Nefeli, cloud consumers provide deployment hints on the possible mapping of VMs to physical nodes. Such hints include the collocation and anticollocation of VMs, the existence of potential performance bottlenecks, the presence of underlying hardware features (e. g., high availability), the proximity of certain VMs to data repositories, or any other information that would contribute in a more effective placement of VMs to physical hosting nodes. Consumers designate only properties of their virtual infrastructure and remain at all times agnostic to the cloud internal physical characteristics. The set of consumer-provided hints is augmented with high-level placement policies specified by the cloud administration. Placement policies and hints form a constraint satisfaction problem that when solved, yields the final VM-to-host placement. As workloads executed by the cloud may change over time, VM-to-host mappings must follow suit. To this end, Nefeli captures such events, changes VM deployment, helps avoid bottlenecks, and ultimately, improves the quality of the rendered services. Using our prototype, we examine overheads involved and show significant improvements in terms of time needed to execute scientific and real application workloads. We also demonstrate how power-aware policies may reduce the energy consumption of the physical installation. Finally, we compare Nefeli's placement choices with those attained by the open-source cloud middleware, OpenNebula.", "paper_title": "Hint-Based Execution of Workloads in Clouds with Nefeli", "paper_id": "WOS:000319678800007"}