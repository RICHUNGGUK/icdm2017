{"auto_keywords": [{"score": 0.04244120576937964, "phrase": "existing_versioning_file_systems"}, {"score": 0.03528780869712297, "phrase": "pcm"}, {"score": 0.026450520307562564, "phrase": "proposed_file_system"}, {"score": 0.00481495049065317, "phrase": "demand_snapshot"}, {"score": 0.004583205112737672, "phrase": "phase-change_memory"}, {"score": 0.004527024978801684, "phrase": "versioning_file_systems"}, {"score": 0.00438955582974973, "phrase": "modern_computer_systems"}, {"score": 0.00428257928723, "phrase": "system_recovery"}, {"score": 0.004230068512904886, "phrase": "old_data_access_functions"}, {"score": 0.004152502093643003, "phrase": "previous_file_system_snapshots"}, {"score": 0.0035808664384880213, "phrase": "large_amount"}, {"score": 0.0035369291417564606, "phrase": "additional_writes"}, {"score": 0.003284361433827464, "phrase": "write_operations"}, {"score": 0.0032240802202623316, "phrase": "performance_bottleneck"}, {"score": 0.0030876784650745973, "phrase": "novel_versioning_file_system"}, {"score": 0.0029207251108325006, "phrase": "writing_overhead"}, {"score": 0.0026622351303038885, "phrase": "file_system_root"}, {"score": 0.0025812459787060097, "phrase": "recursive_update_chain"}, {"score": 0.0025338369486914364, "phrase": "immediate_parent_level"}, {"score": 0.0024266212617165186, "phrase": "linux"}, {"score": 0.0023382335380460304, "phrase": "measurement_studies"}, {"score": 0.002105000910218174, "phrase": "zfs"}], "paper_keywords": ["File system", " phase-change memory", " reliability", " snapshot", " versioning"], "paper_abstract": "Versioning file systems are widely used in modern computer systems as they provide system recovery and old data access functions by retaining previous file system snapshots. However, existing versioning file systems do not perform well with the emerging PCM (phase-change memory) storage, because they are optimized for hard disks. Specifically, a large amount of additional writes incurred by maintaining snapshot degrades the performance of PCM seriously as write operations are the performance bottleneck of PCM. This paper presents a novel versioning file system, designed for PCM, that reduces the writing overhead of a snapshot significantly. Unlike existing versioning file systems that incur cascade writes up to the file system root, our scheme breaks the recursive update chain at the immediate parent level. The proposed file system is implemented on Linux 2.6 as a prototype. Measurement studies with various I/O benchmarks show that the proposed file system improves the I/O throughput by 144 percent on average, compared to ZFS, a representative versioning file system.", "paper_title": "On-Demand Snapshot: An Efficient Versioning File System for Phase-Change Memory", "paper_id": "WOS:000326500600013"}