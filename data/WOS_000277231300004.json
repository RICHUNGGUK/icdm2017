{"auto_keywords": [{"score": 0.04727456109657992, "phrase": "data_space"}, {"score": 0.01560984472994894, "phrase": "malicious_hosts"}, {"score": 0.008591527302015104, "phrase": "shared_data_spaces"}, {"score": 0.00481495049065317, "phrase": "data_confidentiality"}, {"score": 0.004313643010028869, "phrase": "data_space_content"}, {"score": 0.004222795179790998, "phrase": "unauthorised_application_components"}, {"score": 0.004163290958633733, "phrase": "access_control_mechanisms"}, {"score": 0.004119211418949265, "phrase": "basic_assumption"}, {"score": 0.0037561467438280175, "phrase": "encryption_schemes"}, {"score": 0.0034987163424726546, "phrase": "encrypted_data"}, {"score": 0.003412833120814178, "phrase": "retrieval_operations"}, {"score": 0.003329051037399227, "phrase": "resource_consumption"}, {"score": 0.003258871417680268, "phrase": "schemes_applications"}, {"score": 0.003212906206685004, "phrase": "secret_keys"}, {"score": 0.0030788521585190802, "phrase": "novel_encryption_scheme"}, {"score": 0.003013931023579108, "phrase": "completely_encrypted_tuples"}, {"score": 0.002837305633114947, "phrase": "tuple_confidentiality"}, {"score": 0.00257775722777195, "phrase": "authorised_components"}, {"score": 0.0024789326485851666, "phrase": "authorised_component"}, {"score": 0.0024094425220967273, "phrase": "encrypted_tuples"}, {"score": 0.0022843440226146005, "phrase": "key_management"}, {"score": 0.0022361384265153677, "phrase": "encrypted_data_space"}, {"score": 0.0021657265492371976, "phrase": "preliminary_performance_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Encrypted Shared Data Space", " Encrypted searches", " No shared key", " Advance proxy encryption scheme"], "paper_abstract": "This paper focuses on the protection of the confidentiality of the data space content when Shared Data Spaces are deployed in open, possibly hostile, environments. In previous approaches, the data space content was protected against access from unauthorised application components by means of access control mechanisms. The basic assumption is that the hosts (and their administrators) where the data space is deployed have to be trusted. When such an assumption does not hold, then encryption schemes can be used to protect the data space content from malicious hosts. However, such schemes do not support searching on encrypted data. As a consequence, performing retrieval operations is very expensive in terms of resource consumption. Moreover, in these schemes applications have to share secret keys requiring a very complex key management. In this paper, we present a novel encryption scheme that allows tuple matching on completely encrypted tuples. Since the data space does not, need to decrypt tuples to perform the search, tuple confidentiality can be guaranteed even when the data space is deployed on malicious hosts (or an adversary gains access to the host). Our scheme does not require authorised components to share keys for inserting and retrieving tuples. Each authorised component can encrypt, decrypt, and search encrypted tuples without knowing other components' keys. This is beneficial inasmuch as it simplifies the task of key management. An implementation of an encrypted data space based on this scheme is described and some preliminary performance results are given. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Providing data confidentiality against malicious hosts in Shared Data Spaces", "paper_id": "WOS:000277231300004"}