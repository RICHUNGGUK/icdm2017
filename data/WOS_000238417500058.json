{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high_churn"}, {"score": 0.004004436217742343, "phrase": "unpredictable_network_environment"}, {"score": 0.0033898953358387075, "phrase": "system's_resistibility"}, {"score": 0.003290494847464381, "phrase": "careful_evaluation"}, {"score": 0.003232254571848865, "phrase": "typical_peer-to-peer_networks"}, {"score": 0.002938560664857691, "phrase": "special_applications"}, {"score": 0.002329412930430366, "phrase": "crash_point"}, {"score": 0.0021946656099592608, "phrase": "simulation_experiment"}, {"score": 0.0021049977753042253, "phrase": "novel_way"}], "paper_keywords": ["peer-to-peer", " fault resilience", " high churn", " crash point"], "paper_abstract": "In Peer to Peer (P2P) systems, peers can join and leave the network whenever they want. Such \"freedom\" causes unpredictable network environment which leads to the most complex design challenge of a p2p protocol: how to make p2p service available under churn? What is more, where is the extreme of a system's resistibility to high churn? A careful evaluation of some typical peer-to-peer networks will contribute a lot to choosing, using and designing a certain kind of protocol in special applications. In this paper we analyze the performance of Chord [1], Tapestry [2], Kelips [3], Kademlia [4] and Koorde [5], then find out the crash point [6] of each network based on the simulation experiment. Finally, we propose a novel way to help nodes survive under high churn.", "paper_title": "Survive under high churn in structured P2P systems: Evaluation and strategy", "paper_id": "WOS:000238417500058"}