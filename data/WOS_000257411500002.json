{"auto_keywords": [{"score": 0.047929617715279135, "phrase": "data_streams"}, {"score": 0.02322730111336099, "phrase": "recent_frequent_itemsets"}, {"score": 0.006595860230760375, "phrase": "bound_guarantee"}, {"score": 0.005644024881002207, "phrase": "sliding_window"}, {"score": 0.0037921662574137535, "phrase": "rapid_rate"}, {"score": 0.0035233696341819437, "phrase": "new_changes"}, {"score": 0.003459191419478298, "phrase": "frequent_itemsets"}, {"score": 0.0032436052954996097, "phrase": "efficient_one-pass_algorithm"}, {"score": 0.002723607240517261, "phrase": "obsolete_transactions"}, {"score": 0.0024389277933858054, "phrase": "compact_data_structure"}, {"score": 0.0023725232579531273, "phrase": "potentially_frequent_itemsets"}, {"score": 0.0021441057555396013, "phrase": "flexible_queries"}, {"score": 0.0021049977753042253, "phrase": "continuous_transactions"}], "paper_keywords": ["data mining", " frequent itemset", " significant itemset", " sliding window", " data stream", " prefix tree"], "paper_abstract": "This paper considers the problem of mining recent frequent itemsets over data streams. As the data grows without limit at a rapid rate, it is hard to track the new changes of frequent itemsets over data streams. W propose an efficient one-pass algorithm in sliding windows over data streams with an error bound guarantee. This algorithm does not need to refer to obsolete transactions when they are removed from the sliding window. It exploits a compact data structure to maintain potentially frequent itemsets so that it can output recent frequent itemsets at any time. Flexible queries for continuous transactions in the sliding window can be answered with an error bound guarantee.", "paper_title": "Mining recent frequent itemsets in sliding windows over data streams", "paper_id": "WOS:000257411500002"}