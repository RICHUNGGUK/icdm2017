{"auto_keywords": [{"score": 0.02923053475292051, "phrase": "rake-based_scheme"}, {"score": 0.00481495049065317, "phrase": "tree_labelling_schemes"}, {"score": 0.004188459638572375, "phrase": "gavoille_et_al"}, {"score": 0.0040048667115255, "phrase": "maximum_label_length"}, {"score": 0.0035712919163869176, "phrase": "input_tree"}, {"score": 0.0032653385693297014, "phrase": "theta"}, {"score": 0.003014576010931602, "phrase": "h-n"}, {"score": 0.0027834145465170292, "phrase": "backbone-based_scheme"}, {"score": 0.0026745503978347143, "phrase": "optimal_label_length"}, {"score": 0.0025191653363555193, "phrase": "separator_scheme"}, {"score": 0.0023259039577313294, "phrase": "new_schemes"}, {"score": 0.0022460727898764216, "phrase": "least_common_ancestor"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["tree labelling", " average case analysis", " separator"], "paper_abstract": "We study how to label the vertices of a tree in such a way that we can decide the distance of two vertices in the tree given only their labels. Gavoille et al. proved that for any such distance labelling scheme, the maximum label length is at least 1/8 log(2) n - O (log n) bits, where n is the number of vertices in the input tree T. They also gave a separator-based labelling scheme 8 that has the optimal label length Theta (log n center dot log(H-n (T))), where H-n (T) is the height of T. We present two distance labelling schemes, namely, the backbone-based scheme and rake-based scheme, which also achieve the optimal label length. The two schemes always perform at least as well as the separator scheme. Furthermore, the rake-based scheme has a much smaller expected label length under certain tree distributions. With these new schemes, we also can find the least common ancestor of any two vertices based on their labels only. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Average case analysis for tree labelling schemes", "paper_id": "WOS:000247167800006"}