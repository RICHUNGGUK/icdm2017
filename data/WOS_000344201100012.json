{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "process_models"}, {"score": 0.03269788843226682, "phrase": "original_model"}, {"score": 0.004735254735115024, "phrase": "process_mining_techniques"}, {"score": 0.004695900553353526, "phrase": "observed_behavior"}, {"score": 0.004541712637353326, "phrase": "modeled_behavior"}, {"score": 0.004374306833733075, "phrase": "petri"}, {"score": 0.00421297029755273, "phrase": "event_logs"}, {"score": 0.00417793854311445, "phrase": "conformance_checking_techniques"}, {"score": 0.004007083686875716, "phrase": "observed_and_modeled_behavior"}, {"score": 0.0039737570920809215, "phrase": "existing_process_mining_techniques"}, {"score": 0.0038271712887391015, "phrase": "actual_repair"}, {"score": 0.0034620831765465425, "phrase": "process_model"}, {"score": 0.0033622909109253616, "phrase": "resulting_model"}, {"score": 0.002966084234963723, "phrase": "existing_conformance_checker"}, {"score": 0.0026494723416072316, "phrase": "non-fitting_subtraces"}, {"score": 0.002337066031028783, "phrase": "appropriate_location"}, {"score": 0.0022507188208913394, "phrase": "mining_toolkit_prom"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Process mining", " Model repair", " Petri nets", " Conformance checking"], "paper_abstract": "Process mining techniques relate observed behavior (i.e., event logs) to modeled behavior (e.g., a BPMN model or a Petri net). Process models can be discovered from event logs and conformance checking techniques can be used to detect and diagnose differences between observed and modeled behavior. Existing process mining techniques can only uncover these differences, but the actual repair of the model is left to the user and is not supported. In this paper we investigate the problem of repairing a process model w.r.t a log such that the resulting model can replay the log (i.e., conforms to it) and is as similar as possible to the original model. To solve the problem, we use an existing conformance checker that aligns the runs of the given process model to the traces in the log. Based on this information, we decompose the log into several sublogs of non-fitting subtraces. For each sublog, either a loop is discovered that can replay the sublog or a subprocess is derived that is then added to the original model at the appropriate location. The approach is implemented in the process mining toolkit ProM and has been validated on logs and models from several Dutch municipalities. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Model repair - aligning process models to reality", "paper_id": "WOS:000344201100012"}