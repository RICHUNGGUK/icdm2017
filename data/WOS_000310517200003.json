{"auto_keywords": [{"score": 0.044505398962904334, "phrase": "software_metrics"}, {"score": 0.027600167692703608, "phrase": "proposed_model"}, {"score": 0.015719716506582538, "phrase": "software_fault-prone_prediction_model"}, {"score": 0.015299564722438902, "phrase": "module's_fault-proneness"}, {"score": 0.004414907432703781, "phrase": "software_development_process"}, {"score": 0.003660879039645457, "phrase": "reduction_dimensionality_phase"}, {"score": 0.0033410898465226417, "phrase": "artificial_neural_network"}, {"score": 0.003265591844292821, "phrase": "support_vector_machine"}, {"score": 0.0032358709481309913, "phrase": "software_fault-prone_prediction"}, {"score": 0.0031627430133087616, "phrase": "new_evaluation_function"}, {"score": 0.0028995712226514746, "phrase": "software_data"}, {"score": 0.0028600623410146796, "phrase": "vital_characteristic"}, {"score": 0.002782647772219627, "phrase": "automatic_determination"}, {"score": 0.0027573101010593863, "phrase": "ann_architecture"}, {"score": 0.0027322025124213566, "phrase": "metrics_selection"}, {"score": 0.0025627194819793347, "phrase": "experimental_results"}, {"score": 0.002254571365634257, "phrase": "expert's_knowledge"}, {"score": 0.002203570941628287, "phrase": "good_performance"}, {"score": 0.0021537217025910356, "phrase": "software_project_managers"}, {"score": 0.0021340985236583017, "phrase": "trustworthy_indicators"}, {"score": 0.0021049977753042253, "phrase": "prone_components"}], "paper_keywords": [""], "paper_abstract": "The identification of a module's fault-proneness is very important for minimising cost and improving the effectiveness of the software development process. How to obtain the relation between software metrics and a module's fault-proneness has been the focus of much research. One technical challenge to obtain this relation is that there is relevance between software metrics. To overcome this problem, the authors propose a reduction dimensionality phase, which can be generally implemented in any software fault-prone prediction model. In this study, the authors present applications of artificial neural network (ANN) and support vector machine in software fault-prone prediction using metrics. A new evaluation function for computing the contribution of each metric is also proposed in order to adapt to the characteristics of software data. The vital characteristic of this approach is the automatic determination of ANN architecture during metrics selection. Four software datasets are used for evaluating the performance of the proposed model. The experimental results show that the proposed model can establish the relation between software metrics and modules' fault-proneness. Moreover, it is also very simple because its implementation requires neither extra cost nor expert's knowledge. The proposed model has good performance, and can provide software project managers with trustworthy indicators of fault prone components.", "paper_title": "Artificial neural network-based metric selection for software fault-prone prediction model", "paper_id": "WOS:000310517200003"}