{"auto_keywords": [{"score": 0.03661306378153703, "phrase": "opaque_predicates"}, {"score": 0.022867855446725684, "phrase": "code_obfuscation"}, {"score": 0.010612387000973441, "phrase": "abstract_interpretation"}, {"score": 0.004554488671294504, "phrase": "well_known_techniques"}, {"score": 0.004377077848734575, "phrase": "illegal_reuse"}, {"score": 0.004173244935967375, "phrase": "malicious_reverse_engineering"}, {"score": 0.004074901471704325, "phrase": "software_watermarking"}, {"score": 0.00385431710959668, "phrase": "interesting_class"}, {"score": 0.0031342307827666675, "phrase": "hybrid_static-dynamic_approach"}, {"score": 0.0027815466400771768, "phrase": "abstract_interpretation-based_methodology"}, {"score": 0.002548331088496964, "phrase": "right_framework"}, {"score": 0.0023346234464901978, "phrase": "general_methodology"}, {"score": 0.002279508335630797, "phrase": "efficient_attackers"}, {"score": 0.002225691463551672, "phrase": "relevant_class"}, {"score": 0.0021559025985688255, "phrase": "experimental_evaluations"}, {"score": 0.0021049977753042253, "phrase": "abstract_interpretation_based_attacks"}], "paper_keywords": [""], "paper_abstract": "Code obfuscation and software watermarking are well known techniques designed to prevent the illegal reuse of software. Code obfuscation prevents malicious reverse engineering, while software watermarking protects code from piracy. An interesting class of algorithms for code obfuscation and software watermarking relies on the insertion of opaque predicates. It turns out that attackers based on a dynamic or an hybrid static-dynamic approach are either not precise or time consuming in eliminating opaque predicates. We present an abstract interpretation-based methodology for removing opaque predicates from programs. Abstract interpretation provides the right framework for proving the correctness of our approach, together with a general methodology for designing efficient attackers for a relevant class of opaque predicates. Experimental evaluations show that abstract interpretation based attacks significantly reduce the time needed to eliminate opaque predicates.", "paper_title": "Opaque predicates detection by abstract interpretation", "paper_id": "WOS:000239425400009"}