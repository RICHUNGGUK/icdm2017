{"auto_keywords": [{"score": 0.049445419527232116, "phrase": "hard_errors"}, {"score": 0.010380621863215552, "phrase": "chip_multiprocessors"}, {"score": 0.00481495049065317, "phrase": "runtime_architecture"}, {"score": 0.004626255242038005, "phrase": "semiconductor_industry"}, {"score": 0.004544770921520536, "phrase": "nano-cmos_technologies"}, {"score": 0.004308791766002289, "phrase": "dominant_concern"}, {"score": 0.00421410521089045, "phrase": "regular_memory_structures"}, {"score": 0.0040309035566691645, "phrase": "spare_rows"}, {"score": 0.003574929398913029, "phrase": "faulty_cores_results"}, {"score": 0.003527550673371394, "phrase": "substantial_performance_loss"}, {"score": 0.003465350958971198, "phrase": "microarchitectural_redundancy"}, {"score": 0.0034194194985380268, "phrase": "defective_cores"}, {"score": 0.003198705576491802, "phrase": "added_cost"}, {"score": 0.0031703706626348507, "phrase": "additional_redundancy"}, {"score": 0.003073154478201771, "phrase": "error-free_core"}, {"score": 0.003032405563826263, "phrase": "limited_coverage"}, {"score": 0.002965684305115369, "phrase": "natural_redundancy"}, {"score": 0.002824005136794786, "phrase": "intercore_redundancy"}, {"score": 0.0027741761880779535, "phrase": "hard-error_tolerance"}, {"score": 0.0027131212233443137, "phrase": "hardware_reconfiguration"}, {"score": 0.0026771333996253783, "phrase": "reduced_functionality"}, {"score": 0.002438203996977464, "phrase": "microvisor"}, {"score": 0.002405853977978678, "phrase": "changing_phase_behavior"}, {"score": 0.0023010815714140467, "phrase": "computational_demands"}, {"score": 0.002142832962924139, "phrase": "degraded_cores"}, {"score": 0.0021049977753042253, "phrase": "performance_losses"}], "paper_keywords": ["Chip multiprocessor (CMP)", " hard-error tolerance", " hardware/software codesign", " hypervisor", " virtualization"], "paper_abstract": "As the semiconductor industry continues its relentless push for nano-CMOS technologies, device reliability and occurrence of hard errors have emerged as a dominant concern in multicores. Although regular memory structures are protected against hard errors using error correcting codes or spare rows and columns, many of the structures within the cores are left unprotected. Even if the location of hard errors is known a priori, disabling faulty cores results in a substantial performance loss. Several proposed techniques use microarchitectural redundancy to allow defective cores to continue operation. These techniques are attractive, but limited due to either added cost of additional redundancy that offers no benefits to an error-free core, or limited coverage, due to the natural redundancy offered by the microarchitecture. We propose to exploit the intercore redundancy in chip multiprocessors for hard-error tolerance. Our scheme combines hardware reconfiguration to ensure reduced functionality of cores, and a runtime layer of software (microvisor) to manage mapping of threads to cores. Microvisor observes the changing phase behavior of threads and initiates thread relocation to match the computational demands of threads to the capabilities of cores. Our results show that in the presence of degraded cores, microvisor mitigates performance losses by an average of two percent.", "paper_title": "Thread Relocation: A Runtime Architecture for Tolerating Hard Errors in Chip Multiprocessors", "paper_id": "WOS:000275883100007"}