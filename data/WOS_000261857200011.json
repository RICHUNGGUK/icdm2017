{"auto_keywords": [{"score": 0.03255038777726757, "phrase": "foreground_objects"}, {"score": 0.00481495049065317, "phrase": "video_inpainting"}, {"score": 0.004439097815805505, "phrase": "missing_regions"}, {"score": 0.0036224139706218916, "phrase": "large_holes"}, {"score": 0.003249966782844541, "phrase": "computationally-efficient_algorithm"}, {"score": 0.002799388549023265, "phrase": "dynamic_programming"}, {"score": 0.00237861522566195, "phrase": "sliding-window_dissimilarity_cost_function"}, {"score": 0.002162951519368368, "phrase": "adaptive_background_replacement"}, {"score": 0.0021049977753042253, "phrase": "image_inpainting"}], "paper_keywords": ["Video inpainting", " Sliding window", " Template matching", " Dynamic programming", " Background replacement", " Object segmentation"], "paper_abstract": "Video inpainting is the process of repairing missing regions (holes) in videos. Most automatic techniques are computationally intensive and unable to repair large holes. To tackle these challenges, a computationally-efficient algorithm that separately inpaints foreground objects and background is proposed. Using Dynamic Programming, foreground objects are holistically inpainted with object templates that minimizes a sliding-window dissimilarity cost function. Static background are inpainted by adaptive background replacement and image inpainting. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Efficient object-based video inpainting", "paper_id": "WOS:000261857200011"}