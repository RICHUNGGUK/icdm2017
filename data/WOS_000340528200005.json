{"auto_keywords": [{"score": 0.03854580309155757, "phrase": "slackprobe"}, {"score": 0.00481495049065317, "phrase": "situ_monitoring"}, {"score": 0.004752873752686246, "phrase": "accurate_way"}, {"score": 0.00469159356595623, "phrase": "circuit_delay"}, {"score": 0.004531997388646422, "phrase": "significant_overhead"}, {"score": 0.004340081802944066, "phrase": "path_endpoints"}, {"score": 0.003980191398041843, "phrase": "slackprobe_methodology"}, {"score": 0.003894963476923956, "phrase": "slack_monitors"}, {"score": 0.0038115535592184438, "phrase": "selected_set"}, {"score": 0.0037299231609021783, "phrase": "intermediate_nets"}, {"score": 0.003697760799674494, "phrase": "critical_paths"}, {"score": 0.003571850980647625, "phrase": "impending_delay_failures"}, {"score": 0.0032191849045822415, "phrase": "e._g."}, {"score": 0.003003579442221871, "phrase": "thorough_analysis"}, {"score": 0.0029647862293448895, "phrase": "potential_benefits"}, {"score": 0.002888692115811987, "phrase": "conventional_approaches"}, {"score": 0.002637377202509382, "phrase": "experimental_results"}, {"score": 0.0026146109167103655, "phrase": "commercial_processors"}, {"score": 0.0022464835515931592, "phrase": "monitoring_efficiency"}, {"score": 0.002169882514603539, "phrase": "monitoring_observability"}, {"score": 0.0021049977753042253, "phrase": "endpoint_monitoring"}], "paper_keywords": ["Average case design", " delay testing", " low-power design", " network flow algorithm", " timing"], "paper_abstract": "In situ monitoring is an accurate way to monitor circuit delay or timing slack, but usually incurs significant overhead. We observe that most existing slack monitoring methods focus exclusively on monitoring path endpoints, which is not cost efficient from power and area perspectives. In this paper, we first propose SlackProbe methodology, which inserts timing slack monitors like probes at a selected set of nets, including intermediate nets along critical paths. SlackProbe can be used to detect impending delay failures due to various reasons (process variations, ambient fluctuations, circuit aging, etc.) and can be used with various preventive actions (e. g., voltage/frequency scaling, clock stretching/time borrowing, etc.). Then we perform thorough analysis of the potential benefits and caveats of SlackProbe over conventional approaches in terms of number of monitors required, monitoring efficiency and observability, delay margin, and design perturbation. Experimental results on commercial processors show that with 5% extra timing margin, SlackProbe can reduce the number of monitors by 12-16X as compared to the number of monitors inserted at path ending pins. SlackProbe can also improve the monitoring efficiency by up to 1.9X and improve the monitoring observability by up to 32%, as compared to endpoint monitoring.", "paper_title": "SlackProbe: A Flexible and Efficient In Situ Timing Slack Monitoring Methodology", "paper_id": "WOS:000340528200005"}