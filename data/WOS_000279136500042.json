{"auto_keywords": [{"score": 0.049378038061471535, "phrase": "hash_chain_h"}, {"score": 0.04733190377720633, "phrase": "hash_values"}, {"score": 0.03511498344372032, "phrase": "previous_hash_chain_traversal_algorithms"}, {"score": 0.027507999683207576, "phrase": "hash_chain_traversal_algorithm"}, {"score": 0.00481495049065317, "phrase": "selective_output"}, {"score": 0.004133940019630129, "phrase": "public_value"}, {"score": 0.004013662619667083, "phrase": "secret_value"}, {"score": 0.0038397509389856625, "phrase": "hash_chain"}, {"score": 0.003584025547693836, "phrase": "time_period"}, {"score": 0.0025262061502713683, "phrase": "m-th_hash_value"}, {"score": 0.0024768883044869023, "phrase": "main_technique"}, {"score": 0.0023694065215394593, "phrase": "hash_value"}, {"score": 0.0022113879114507577, "phrase": "direct_use"}, {"score": 0.0021049977753042253, "phrase": "computatibnal_costs"}], "paper_keywords": ["hash chain", " fractal traversal", " amortization"], "paper_abstract": "A hash chain H for a one-way hash function h(.) is a sequence of hash values (v(0), v(1),..., v(n)), where v(0) is a public value, v,, a secret value, and v, = h(vi+i). A hash chain traversal algorithm T computes and outputs the hash chain H, returning v, in time period (called round) i for 1 <= i <= n. While previous hash chain traversal algorithms were designed to output all hash values v(i) (1 <= i <= n) in order, there are applications where every,n-th hash value (i.e., v(m), v(2m), v(3m,)...,) is required to be output. We introduce a hash chain traversal algorithm that selectively outputs every m-th hash value efficiently. The main technique is a transformation from a hash chain traversal algorithm outputting every hash value into that outputting every m-th hash value. Compared with the direct use of previous hash chain traversal algorithms, our proposed method requires less memory storages and computatibnal costs.", "paper_title": "Generalized Hash Chain Traversal with Selective Output", "paper_id": "WOS:000279136500042"}