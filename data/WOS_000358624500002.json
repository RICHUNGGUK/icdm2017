{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "p-group_isomorphism"}, {"score": 0.034022936899570526, "phrase": "p-group_composition-series_isomorphism"}, {"score": 0.015419639988206255, "phrase": "group_isomorphism_problem"}, {"score": 0.004402088928254543, "phrase": "h._for"}, {"score": 0.004119762981892093, "phrase": "smallest_prime"}, {"score": 0.003946766004066276, "phrase": "best_worst-case_result"}, {"score": 0.0035660913513115267, "phrase": "hard_case"}, {"score": 0.0034296217420566304, "phrase": "turing_reduction"}, {"score": 0.0034029588672379926, "phrase": "group_isomorphism"}, {"score": 0.0031597553713047935, "phrase": "karp"}, {"score": 0.002865929543375884, "phrase": "bounded_degree"}, {"score": 0.002311933249234786, "phrase": "faster_algorithm"}, {"score": 0.0022407927161620855, "phrase": "upper_bound"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Isomorphism testing", " Group isomorphism", " Composition series isomorphism"], "paper_abstract": "We consider the group isomorphism problem: given two finite groups G and H specified by their multiplication tables, decide if G congruent to H. For several decades, the n(logp) (n+0(1)) generatorenumeration bound (where p is the smallest prime dividing the order of the group) has been the best worst-case result for general groups. In this work, we show an improvement over the generator-enumeration bound for p-groups, which are believed to be the hard case of the group isomorphism problem. We start by giving a Turing reduction from group isomorphism to n((1/2)) (log)(p) (n+o(1)) instances of p-group composition-series isomorphism. By showing a Karp reduction from p-group composition-series isomorphism to testing isomorphism of graphs of degree at most p + O (1) and applying algorithms for testing isomorphism of graphs of bounded degree, we obtain an n(o(P)) time algorithm for p-group composition-series isomorphism. Combining these two results yields an algorithm for p-group isomorphism that takes at most n(p)((1/2) log) (n+o (p)) time. This algorithm is faster than generator-enumeration when p is small and slower when p is large. Choosing the faster algorithm based on p and n yields an upper bound of n((1/2+o(1))) (logn) for p-group isomorphism. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Beating the generator-enumeration bound for p-group isomorphism", "paper_id": "WOS:000358624500002"}