{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "error_detection"}, {"score": 0.04894852287716921, "phrase": "bloom_filters"}, {"score": 0.025860308885553667, "phrase": "bloom_filter"}, {"score": 0.004749646583168342, "phrase": "content_addressable_memories"}, {"score": 0.004653339900995785, "phrase": "content_addressable_memory"}, {"score": 0.004558977045730675, "phrase": "sram-based_memory"}, {"score": 0.004243460284890507, "phrase": "matching_data"}, {"score": 0.004200197763119297, "phrase": "conventional_memories"}, {"score": 0.0040452928361255445, "phrase": "single_event"}, {"score": 0.0038431888954930083, "phrase": "different_effects"}, {"score": 0.003803991592917943, "phrase": "pseudo-hit_or_pseudo-miss_events"}, {"score": 0.003663645143713398, "phrase": "parallel_search"}, {"score": 0.003504418473478722, "phrase": "standard_error_correction_code"}, {"score": 0.0034332736827447654, "phrase": "seu_events"}, {"score": 0.0032283609741926476, "phrase": "cam's_internal_structure"}, {"score": 0.0031198362555601377, "phrase": "system_level"}, {"score": 0.0030356410934402503, "phrase": "probabilistic_structure"}, {"score": 0.003004678505782395, "phrase": "bloom"}, {"score": 0.0028641729745364952, "phrase": "cam._bloom_filters"}, {"score": 0.00265653375890261, "phrase": "seu"}, {"score": 0.0026114748685439116, "phrase": "probabilistic_nature"}, {"score": 0.0023810183846557486, "phrase": "complementary_limitations"}, {"score": 0.002308800317961002, "phrase": "combined_use"}, {"score": 0.0022311183974368484, "phrase": "different_cases"}, {"score": 0.0021932609696277937, "phrase": "proposed_technique"}, {"score": 0.002148677187261496, "phrase": "low_penalty"}, {"score": 0.0021049977753042253, "phrase": "power_consumption"}], "paper_keywords": ["Bloom filter", " content addressable memories", " error detection and correction"], "paper_abstract": "A content addressable memory (CAM) is an SRAM-based memory that can be accessed in parallel to search for a given search word, providing as a result the address of the matching data. Like conventional memories, a CAM can be affected by the occurrence of single event upsets (SEUs) that can alter the content of one of more memory cells causing different effects such as pseudo-HIT or pseudo-MISS events. It is well known that, because of the parallel search performed by a CAM during the query of a word, a standard error correction code could not defend it against SEU events. In this paper, we propose a method that does not require any modification to a CAM's internal structure and, therefore, can be easily applied at system level. Error detection is performed by using a probabilistic structure called \"Bloom filter,\" which can signal if a given data is present in the CAM. Bloom filters permit to efficiently store and query the presence of data in a set. But, while a CAM suffers from SEU induced errors, the probabilistic nature of Bloom filters has as a consequence the so called false-positive effect. This paper shows that, by combining the use of a Bloom filter with a CAM, the complementary limitations of these modules can be compensated. The combined use of a CAM and a Bloom filter is analyzed in different cases, showing that the proposed technique can be implemented with a low penalty in terms of area and power consumption.", "paper_title": "Error Detection and Correction in Content Addressable Memories by Using Bloom Filters", "paper_id": "WOS:000318641600006"}