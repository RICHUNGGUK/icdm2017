{"auto_keywords": [{"score": 0.028088183852130657, "phrase": "openacc"}, {"score": 0.00481495049065317, "phrase": "understanding_portability"}, {"score": 0.004613516457919661, "phrase": "high-level_programming"}, {"score": 0.0037789720824759503, "phrase": "heterogeneous_architectures"}, {"score": 0.0034690732089830045, "phrase": "compiler_approach"}, {"score": 0.00332375606483146, "phrase": "openacc_programs"}, {"score": 0.0032302647179383915, "phrase": "heteroir"}, {"score": 0.0031393948330209224, "phrase": "accelerator_kernels"}, {"score": 0.002965229277927781, "phrase": "functional_portability"}, {"score": 0.0027610089418453614, "phrase": "performance_portability"}, {"score": 0.0024281181691350085, "phrase": "compiler_optimizations"}, {"score": 0.002359759876402679, "phrase": "openacc_program_settings"}, {"score": 0.0021049977753042253, "phrase": "achieved_performance_portability"}], "paper_keywords": [""], "paper_abstract": "HeteroIR is a high-level, architecture-independent intermediate representation for mapping high-level programming models to heterogeneous architectures. The authors present a compiler approach that translates OpenACC programs into HeteroIR and accelerator kernels to obtain OpenACC functional portability. They evaluate the performance portability obtained by OpenACC and study the effects of compiler optimizations and OpenACC program settings on various architectures to provide insights into the achieved performance portability.", "paper_title": "UNDERSTANDING PORTABILITY OF A HIGH-LEVEL PROGRAMMING MODEL ON CONTEMPORARY HETEROGENEOUS ARCHITECTURES", "paper_id": "WOS:000359594300007"}