{"auto_keywords": [{"score": 0.03843856552198327, "phrase": "ip_routing_table"}, {"score": 0.03485917626028694, "phrase": "low-level_memory"}, {"score": 0.00481495049065317, "phrase": "expediating_ip"}, {"score": 0.004749106104067268, "phrase": "reduced_power"}, {"score": 0.004705753209260803, "phrase": "tbm"}, {"score": 0.004641351004344458, "phrase": "supernode_caching"}, {"score": 0.004453488286477661, "phrase": "novel_supernode_caching_scheme"}, {"score": 0.004392565073466714, "phrase": "ip_lookup_latencies"}, {"score": 0.004352411290383643, "phrase": "energy_consumption"}, {"score": 0.004312622975366676, "phrase": "network_processors"}, {"score": 0.004176194589991187, "phrase": "expensive_tcam_based_scheme"}, {"score": 0.004081385289516914, "phrase": "set-ssociative_sram"}, {"score": 0.0036052633308076933, "phrase": "supernode_tree"}, {"score": 0.003427540517249369, "phrase": "small_supernode_cache"}, {"score": 0.003213920601037463, "phrase": "tree_structure"}, {"score": 0.0031699005399973496, "phrase": "supernode_cache_stores"}, {"score": 0.003083655376444887, "phrase": "longest_matched_prefixes"}, {"score": 0.0030414140732789186, "phrase": "ip_routing_tree"}, {"score": 0.0027741761880779535, "phrase": "fast_ip_lookup"}, {"score": 0.0025892330566358503, "phrase": "selected_three_trace_files"}, {"score": 0.0024501740852758505, "phrase": "sst_supernode_cache"}, {"score": 0.002427732996314194, "phrase": "average_tbm"}, {"score": 0.002405496949144104, "phrase": "sst_supermode_cache"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tree bitmap (TBM)", " Shape shifting trie (SST)", " IP lookup", " Supernode", " Caching"], "paper_abstract": "In this paper, we propose a novel supernode caching scheme to reduce IP lookup latencies and energy consumption in network processors. In stead of using an expensive TCAM based scheme, we implement a set-ssociative SRAM based cache. We use two different algorithms, tree bitmap (TBM) and shape shifting trie (SST), to organize an IP routing table as a supernode tree composed of a group of supernodes. We add a small supernode cache in-between the processor and the low-level memory containing the IP routing table in a tree structure. The supernode cache stores recently visited supernodes of the longest matched prefixes in the IP routing tree. A supernode hitting in the cache reduces the number of accesses to the low-level memory, leading to a fast IP lookup. According to our simulations, up to 72% memory accesses can be avoided by a 128 KB TBM supernode cache for the selected three trace files, and up to 78% memory accesses can be reduced while using a same size of SST supernode cache. Average TBM and SST supermode cache miss ratios are as low as 4% and 7%, respectively. Compared to a TCAM with the same size, the TBM and SST supernode caches can both reduce 77% of energy consumption. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Expediating IP lookups with reduced power via TBM and SST supernode caching", "paper_id": "WOS:000274760200012"}