{"auto_keywords": [{"score": 0.04906009284763672, "phrase": "frequent_itemsets"}, {"score": 0.00481495049065317, "phrase": "fast_mining_frequent_itemsets"}, {"score": 0.004612147352416241, "phrase": "fundamental_problem"}, {"score": 0.0045726187330434025, "phrase": "data_mining"}, {"score": 0.004494570360108983, "phrase": "essential_role"}, {"score": 0.004286708921931472, "phrase": "novel_vertical_data_representation"}, {"score": 0.004106063237069123, "phrase": "fp-tree-like_coding_prefix_tree"}, {"score": 0.0039841418890102925, "phrase": "crucial_information"}, {"score": 0.003865826699096508, "phrase": "n-list_data_structure"}, {"score": 0.0037834649508375544, "phrase": "efficient_mining_algorithm"}, {"score": 0.003751011827704279, "phrase": "prepost"}, {"score": 0.003382547312072468, "phrase": "common_prefixes"}, {"score": 0.0031982609080278643, "phrase": "itemsets'_supports"}, {"score": 0.003037047249598515, "phrase": "intersecting_two_n-lists"}, {"score": 0.0029214769181390653, "phrase": "efficient_strategy"}, {"score": 0.0026456667695073043, "phrase": "candidate_itemsets"}, {"score": 0.0025449518236394103, "phrase": "single_path_property"}, {"score": 0.0022848092812445533, "phrase": "real_and_synthetic_datasets"}, {"score": 0.002255431275670053, "phrase": "experimental_results"}, {"score": 0.0022168460543913787, "phrase": "prepost_algorithm"}], "paper_keywords": ["data mining", " frequent itemset mining", " data structure", " N-lists", " algorithm"], "paper_abstract": "Mining frequent itemsets has emerged as a fundamental problem in data mining and plays an essential role in many important data mining tasks. In this paper, we propose a novel vertical data representation called N-list, which originates from an FP-tree-like coding prefix tree called PPC-tree that stores crucial information about frequent itemsets. Based on the N-list data structure, we develop an efficient mining algorithm, PrePost, for mining all frequent itemsets. Efficiency of PrePost is achieved by the following three reasons. First, N-list is compact since transactions with common prefixes share the same nodes of the PPC-tree. Second, the counting of itemsets' supports is transformed into the intersection of N-lists and the complexity of intersecting two N-lists can be reduced to O(m + n) by an efficient strategy, where m and n are the cardinalities of the two N-lists respectively. Third, PrePost can directly find frequent itemsets without generating candidate itemsets in some cases by making use of the single path property of N-list. We have experimentally evaluated PrePost against four state-of-the-art algorithms for mining frequent itemsets on a variety of real and synthetic datasets. The experimental results show that the PrePost algorithm is the fastest in most cases. Even though the algorithm consumes more memory when the datasets are sparse, it is still the fastest one.", "paper_title": "A new algorithm for fast mining frequent itemsets using N-lists", "paper_id": "WOS:000307720000007"}