{"auto_keywords": [{"score": 0.03962151848514054, "phrase": "emergent_interfaces"}, {"score": 0.02322730111336098, "phrase": "feature_dependencies"}, {"score": 0.0067530102899008085, "phrase": "maintenance_effort"}, {"score": 0.004753512932910936, "phrase": "preprocessor-based_software_product_lines"}, {"score": 0.0046928556063004214, "phrase": "software_product_line"}, {"score": 0.004632968695963776, "phrase": "virtual_separation"}, {"score": 0.004039639718055365, "phrase": "feature_modularization"}, {"score": 0.003374250301861101, "phrase": "code_level_feature_dependencies"}, {"score": 0.0031640918630415566, "phrase": "preprocessor_directives"}, {"score": 0.0030183163057929687, "phrase": "vsoc"}, {"score": 0.0028181504086563967, "phrase": "feature_dependency_problems"}, {"score": 0.0026312238938540787, "phrase": "maintenance_tasks"}, {"score": 0.0025207284405252914, "phrase": "different_domains"}, {"score": 0.002373767863833987, "phrase": "previous_work"}, {"score": 0.002353483216544667, "phrase": "preprocessor_usage"}, {"score": 0.0021049977753042253, "phrase": "spl_maintenance_tasks"}], "paper_keywords": ["Measurement", " Design", " Experimentation", " Preprocessors", " Software Product Lines", " Modularity"], "paper_abstract": "During Software Product Line (SPL) maintenance tasks, Virtual Separation of Concerns (VSoC) allows the programmer to focus on one feature and hide the others. However, since features depend on each other through variables and control-flow, feature modularization is compromised since the maintenance of one feature may break another. In this context, emergent interfaces can capture dependencies between the feature we are maintaining and the others, making developers aware of dependencies. To better understand the impact of code level feature dependencies during SPL maintenance, we have investigated the following two questions: how often methods with preprocessor directives contain feature dependencies? How feature dependencies impact maintenance effort when using VSoC and emergent interfaces? Answering the former is important for assessing how often we may face feature dependency problems. Answering the latter is important to better understand to what extent emergent interfaces complement VSoC during maintenance tasks. To answer them, we analyze 43 SPLs of different domains, size, and languages. The data we collect from them complement previous work on preprocessor usage. They reveal that the feature dependencies we consider in this paper are reasonably common in practice; and that emergent interfaces can reduce maintenance effort during the SPL maintenance tasks we regard here.", "paper_title": "On the Impact of Feature Dependencies when Maintaining Preprocessor-based Software Product Lines", "paper_id": "WOS:000303558100005"}