{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "imperfect_vertices"}, {"score": 0.04941714403605284, "phrase": "factoring_theorem"}, {"score": 0.04008010591131816, "phrase": "exact_algorithms"}, {"score": 0.038323814569956004, "phrase": "vertex_failures"}, {"score": 0.03059668478621797, "phrase": "essential_variable"}, {"score": 0.004682708592184678, "phrase": "bdd-based_algorithms"}, {"score": 0.004554082077300675, "phrase": "efficient_reliability_evaluation_methods"}, {"score": 0.0044702911400353535, "phrase": "perfectly_reliable_vertices"}, {"score": 0.00413096972023037, "phrase": "real_world"}, {"score": 0.003678023470672862, "phrase": "great_overhead"}, {"score": 0.0029288446848334576, "phrase": "undirected_networks"}, {"score": 0.0026811531172346676, "phrase": "dominating_effect"}, {"score": 0.002656327554326748, "phrase": "network_reliability"}, {"score": 0.0022467024793003812, "phrase": "proposed_algorithms"}, {"score": 0.0021848422732893926, "phrase": "runtime_overhead"}, {"score": 0.0021445492649196955, "phrase": "best_result"}, {"score": 0.0021246816854197732, "phrase": "factoring_algorithms"}], "paper_keywords": ["BDD (Binary Decision Diagrams)", " Boolean formula", " exact algorithm", " network reliability"], "paper_abstract": "The factoring theorem, and BDD-based algorithms have been shown to be efficient reliability evaluation methods for networks with perfectly reliable vertices. However, the vertices, and the links of a network may fail in the real world. Imperfect vertices can be factored like links, but the complexity increases exponentially with their number. Exact algorithms based on the factoring theorem can therefore induce great overhead if vertex failures are taken into account. To solve the problem, a set of exact algorithms is presented to deal with vertex failures with little additional overhead. The algorithms can be used to solve terminal-pair, k-terminal, and all-terminal reliability problems in directed, and undirected networks. The essential variable is defined to be a vertex or a link of a network whose failure has the dominating effect on network reliability. The algorithms are so efficient that it takes less than 1.2 seconds on a 1.67 GHz personal computer to identify the essential variable of a network having 2'9 paths. When vertex failures in a 3 x 10 mesh network are taken into account, the proposed algorithms can induce as little as about 0.3% of runtime overhead, while the best result from factoring algorithms incurs about 300% overhead.", "paper_title": "Efficient and exact reliability evaluation for networks with imperfect vertices", "paper_id": "WOS:000247107100011"}