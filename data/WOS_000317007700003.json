{"auto_keywords": [{"score": 0.0500783734301758, "phrase": "evolutionary_design"}, {"score": 0.049690740324568335, "phrase": "sequential_logic_circuits"}, {"score": 0.04760926356472157, "phrase": "tsa"}, {"score": 0.038087321903554704, "phrase": "high-performing_circuits"}, {"score": 0.03764040344512713, "phrase": "frequently_evolved_blocks"}, {"score": 0.004604136423327813, "phrase": "module-level_three-stage_approach"}, {"score": 0.0044385053213394175, "phrase": "synchronous_sequential_circuits"}, {"score": 0.004278807087784626, "phrase": "genetic_algorithm"}, {"score": 0.004091370602573054, "phrase": "first_stage"}, {"score": 0.004042164219546932, "phrase": "ga"}, {"score": 0.0038803710796509227, "phrase": "state_assignment"}, {"score": 0.003771282384646587, "phrase": "small_complexity"}, {"score": 0.003695237613399466, "phrase": "second_stage"}, {"score": 0.0032967724149749853, "phrase": "genetic_programming"}, {"score": 0.0032701792850470326, "phrase": "gp"}, {"score": 0.002965229277927781, "phrase": "final_stage"}, {"score": 0.0029291801502381513, "phrase": "acquired_blocks"}, {"score": 0.00278930116312699, "phrase": "new_population"}, {"score": 0.0025499307228648883, "phrase": "evolved_circuits"}, {"score": 0.002529213370528279, "phrase": "seven_problems"}, {"score": 0.0024882810071079797, "phrase": "modulo-n_counters"}, {"score": 0.002148387364260776, "phrase": "convergence_time"}, {"score": 0.0021309254505358253, "phrase": "success_rate"}, {"score": 0.0021049977753042253, "phrase": "maximum_fitness_improvement"}], "paper_keywords": ["Evolutionary approach", " Module-level", " Three-stage", " Sequential circuits", " Data mining", " Frequently evolved blocks", " Redundant states"], "paper_abstract": "In this study, we propose a module-level three-stage approach (TSA) to optimize the evolutionary design for synchronous sequential circuits. TSA has a three stages process, involving a genetic algorithm (GA), a pre-evolution, and a re-evolution. In the first stage, the GA simplifies the number of states and automatically searches the state assignment that can produce the circuit with small complexity. Then, the second stage evolves a set of high-performing circuits to acquire frequently evolved blocks, which will be re-used for more compact and simple solutions in the next stage. In this stage, a genetic programming (GP) is proposed for evolving the high-performing circuits and data mining is used as a finder of frequently evolved blocks in these circuits. In the final stage, the acquired blocks are encapsulated into the function and terminal set to produce a new population in the re-evolution. The blocks are expected to make the convergence faster and hence efficiently reduce the complexity of the evolved circuits. Seven problems of three types-sequence detectors, modulo-n counters and ISCAS89 circuits-are used to test our three-stage approach. The simulation results for these experiments are promising, and our approach is shown to be better than the other methods for sequential logic circuits design in terms of convergence time, success rate, and maximum fitness improvement across generations.", "paper_title": "A module-level three-stage approach to the evolutionary design of sequential logic circuits", "paper_id": "WOS:000317007700003"}