{"auto_keywords": [{"score": 0.049648703742940926, "phrase": "fast_marching_method"}, {"score": 0.02322730111336099, "phrase": "surface_normal_vectors"}, {"score": 0.018935637251715508, "phrase": "eikonal_equation"}, {"score": 0.004623224002010226, "phrase": "vital_component"}, {"score": 0.004499647408293102, "phrase": "surface_normals"}, {"score": 0.00418595288276353, "phrase": "fast_and_efficient_method"}, {"score": 0.004110993414942228, "phrase": "depth_values"}, {"score": 0.003220709449062307, "phrase": "appropriately_chosen_values"}, {"score": 0.0027867539356701302, "phrase": "small_neighborhood"}, {"score": 0.002724428781940696, "phrase": "large_lambda"}, {"score": 0.0025804616931593897, "phrase": "smaller_lambda"}, {"score": 0.0024774888010414206, "phrase": "finite_machine_precision"}, {"score": 0.002455168454109375, "phrase": "rounding-off_errors"}, {"score": 0.0024220634963019114, "phrase": "proposed_method"}, {"score": 0.0022733662000757318, "phrase": "insignificant_loss"}, {"score": 0.0021727640931660038, "phrase": "usual_optimization_method"}, {"score": 0.0021434588322608653, "phrase": "conjugate_gradient"}, {"score": 0.0021049977753042253, "phrase": "error_function"}], "paper_keywords": [""], "paper_abstract": "Integration of surface normal vectors is a vital component in many shape reconstruction algorithms that require integrating surface normals to produce their final outputs, the depth values. In this paper, we introduce a fast and efficient method for computing the depth values from surface normal vectors. The method is based on solving the Eikonal equation using Fast Marching Method. We introduce two ideas. First, while it is not possible to solve for the depths Z directly using Fast Marching Method, we solve the Eikonal equation for a function W of the form W = Z + lambda f. With appropriately chosen values for lambda, we can ensure that the Eikonal equation for W can be solved using Fast Marching Method. Second, we solve for W in two stages with two different lambda values, first in a small neighborhood of the given initial point with large lambda, and then for the rest of the domain with a smaller lambda. This step is needed because of the finite machine precision and rounding-off errors. The proposed method is very easy to implement, and we demonstrate experimentally that, with insignificant loss in precision, our method is considerably faster than the usual optimization method that uses conjugate gradient to minimize an error function.", "paper_title": "Integrating surface normal vectors using fast marching method", "paper_id": "WOS:000237557100019"}