{"auto_keywords": [{"score": 0.03552521151070943, "phrase": "new_version"}, {"score": 0.00481495049065317, "phrase": "software_versioning"}, {"score": 0.004777744121315302, "phrase": "new_methodologies"}, {"score": 0.00464976086880886, "phrase": "life_cycle"}, {"score": 0.004613825044585923, "phrase": "software_development"}, {"score": 0.004352974291381376, "phrase": "defect_reduction"}, {"score": 0.004252793268613575, "phrase": "defect_prediction"}, {"score": 0.0042035670399069485, "phrase": "relatively_new_research_area"}, {"score": 0.004106810349956121, "phrase": "artificial_intelligence"}, {"score": 0.004075053556360943, "phrase": "data_mining"}, {"score": 0.003965818535880531, "phrase": "software_projects"}, {"score": 0.003919900973086169, "phrase": "difficult_task"}, {"score": 0.0038296485293910026, "phrase": "continuous_and_disciplined_manner"}, {"score": 0.003726967166630926, "phrase": "accurate_estimation"}, {"score": 0.003698136685049485, "phrase": "project_costs"}, {"score": 0.0035989687070420977, "phrase": "product_and_process_qualities"}, {"score": 0.003329994649432498, "phrase": "software_product"}, {"score": 0.00326594229173048, "phrase": "previous_stable_version"}, {"score": 0.003141498438356646, "phrase": "new_feature"}, {"score": 0.003045355729156972, "phrase": "bug_fixes"}, {"score": 0.002963640433319524, "phrase": "new_defects"}, {"score": 0.0027958237350835607, "phrase": "formal_manner"}, {"score": 0.0026477564788515984, "phrase": "defect_predictors"}, {"score": 0.0026272523687965615, "phrase": "helpful_tools"}, {"score": 0.0025967927629150715, "phrase": "project_managers"}, {"score": 0.0025567271683947547, "phrase": "accurate_predictors"}, {"score": 0.0024496978447849835, "phrase": "higher_quality_codes"}, {"score": 0.0024025371556472557, "phrase": "software_engineers"}, {"score": 0.00224013518726087, "phrase": "useful_insight"}, {"score": 0.002163089417146551, "phrase": "bug_fix"}, {"score": 0.0021049977753042253, "phrase": "defect_detection"}], "paper_keywords": ["Software defects", " Defect prediction", " Neural networks"], "paper_abstract": "New methodologies and tools have gradually made the life cycle for software development more human-independent. Much of the research in this field focuses on defect reduction, defect identification and defect prediction. Defect prediction is a relatively new research area that involves using various methods from artificial intelligence to data mining. Identifying and locating defects in software projects is a difficult task. Measuring software in a continuous and disciplined manner provides many advantages such as the accurate estimation of project costs and schedules as well as improving product and process qualities. This study aims to propose a model to predict the number of defects in the new version of a software product with respect to the previous stable version. The new version may contain changes related to a new feature or a modification in the algorithm or bug fixes. Our proposed model aims to predict the new defects introduced into the new version by analyzing the types of changes in an objective and formal manner as well as considering the lines of code (LOC) change. Defect predictors are helpful tools for both project managers and developers. Accurate predictors may help reducing test times and guide developers towards implementing higher quality codes. Our proposed model can aid software engineers in determining the stability of software before it goes on production. Furthermore, such a model may provide useful insight for understanding the effects of a feature, bug fix or change in the process of defect detection.", "paper_title": "A defect prediction method for software versioning", "paper_id": "WOS:000261412500005"}