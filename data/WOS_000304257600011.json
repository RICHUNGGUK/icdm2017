{"auto_keywords": [{"score": 0.03515518620831793, "phrase": "high-order_finite_elements"}, {"score": 0.03432017230737596, "phrase": "algebraic_multigrid"}, {"score": 0.00481495049065317, "phrase": "-automatic_sparse_preconditioners"}, {"score": 0.004775335634705251, "phrase": "high-order_finite_element_methods"}, {"score": 0.004525629293824217, "phrase": "higher_accuracy"}, {"score": 0.004396600680348434, "phrase": "classical_low-order_finite_elements"}, {"score": 0.004253618550301311, "phrase": "implicit_time-stepping_methods"}, {"score": 0.004031082737449308, "phrase": "efficient_simulations"}, {"score": 0.0039649719120779066, "phrase": "high_cost"}, {"score": 0.00389994107619882, "phrase": "denser_finite_element_matrix"}, {"score": 0.0036052633308076933, "phrase": "algorithmic_components"}, {"score": 0.003560807940070886, "phrase": "linear_solver"}, {"score": 0.003459191419478298, "phrase": "preconditioned_krylov_methods"}, {"score": 0.0034306925765832633, "phrase": "linear_systems"}, {"score": 0.003360464999544279, "phrase": "elliptic_partial_differential_equations"}, {"score": 0.0030680994147125364, "phrase": "matrix_information"}, {"score": 0.002968192753809507, "phrase": "novel_method"}, {"score": 0.002755104031926742, "phrase": "original_high-order_finite_element_system"}, {"score": 0.0025785359740308337, "phrase": "cubed_sphere_mesh"}, {"score": 0.0024535580495414783, "phrase": "significantly_less_memory"}, {"score": 0.002393353846080347, "phrase": "new_methods"}, {"score": 0.0023540387251475615, "phrase": "sparse_preconditioner"}, {"score": 0.002305799666781492, "phrase": "non-uniform_meshes"}, {"score": 0.0022399174232611853, "phrase": "direct_use"}, {"score": 0.0021579641460002523, "phrase": "two-level_additive_schwarz_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["High-order", " Algebraic multigrid", " Preconditioners"], "paper_abstract": "High-order finite elements often have a higher accuracy per degree of freedom than the classical low-order finite elements. However, in the context of implicit time-stepping methods, high-order finite elements present challenges to the construction of efficient simulations due to the high cost of inverting the denser finite element matrix. There are many cases where simulations are limited by the memory required to store the matrix and/or the algorithmic components of the linear solver. We are particularly interested in preconditioned Krylov methods for linear systems generated by discretization of elliptic partial differential equations with high-order finite elements. Using a preconditioner like Algebraic Multigrid can be costly in terms of memory due to the need to store matrix information at the various levels. We present a novel method for defining a preconditioner for systems generated by high-order finite elements that is based on a much sparser system than the original high-order finite element system. We investigate the performance for non-uniform meshes on a cube and a cubed sphere mesh, showing that the sparser preconditioner is more efficient and uses significantly less memory. Finally, we explore new methods to construct the sparse preconditioner and examine their effectiveness for non-uniform meshes. We compare results to a direct use of Algebraic Multigrid as a preconditioner and to a two-level additive Schwarz method. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Semi-automatic sparse preconditioners for high-order finite element methods on non-uniform meshes", "paper_id": "WOS:000304257600011"}