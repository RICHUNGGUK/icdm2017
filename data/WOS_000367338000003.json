{"auto_keywords": [{"score": 0.04050325149820966, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "formal_notation_ides"}, {"score": 0.0047527118741586055, "phrase": "formal_methods_tools"}, {"score": 0.004511663118269957, "phrase": "popular_programming_languages"}, {"score": 0.004282787299993434, "phrase": "integrated_development_environments"}, {"score": 0.003935267970727093, "phrase": "programming_languages"}, {"score": 0.0037112756920669593, "phrase": "formal_methods"}, {"score": 0.0036843162138976496, "phrase": "ide."}, {"score": 0.0033006296999548153, "phrase": "ide"}, {"score": 0.00307240091019322, "phrase": "common_features"}, {"score": 0.002804478352027886, "phrase": "overture_platform"}, {"score": 0.0024939618994290016, "phrase": "extensibility_principles"}, {"score": 0.0022033327475266496, "phrase": "new_features"}, {"score": 0.0021049977753042253, "phrase": "new_language"}], "paper_keywords": [""], "paper_abstract": "Formal Methods tools will never have as many users as tools for popular programming languages and so the effort spent on constructing Integrated Development Environments (IDEs) will be orders of magnitudes lower than that of programming languages such as Java. This means newcomers to formal methods do not get the same user experience as with their favourite programming IDE. In order to improve this situation it is essential that efforts are combined so it is possible to reuse common features and thus not start from scratch every time. This paper presents the Overture platform where such a reuse philosophy is present. We give an overview of the platform itself as well as the extensibility principles that enable much of the reuse. The paper also contains several examples platform extensions, both in the form of new features and a new IDE supporting a new language.", "paper_title": "Towards Enabling Overture as a Platform for Formal Notation IDEs", "paper_id": "WOS:000367338000003"}