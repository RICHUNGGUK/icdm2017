{"auto_keywords": [{"score": 0.041910472675089065, "phrase": "job_sizes"}, {"score": 0.00481495049065317, "phrase": "unknown_duration"}, {"score": 0.0046038458731764926, "phrase": "stochastic_model"}, {"score": 0.004430248457624686, "phrase": "cloud_data_center"}, {"score": 0.0041023644174418205, "phrase": "disk_space"}, {"score": 0.003798654583736764, "phrase": "random_variables"}, {"score": 0.0037262941538784094, "phrase": "possibly_unbounded_support"}, {"score": 0.002244596395352896, "phrase": "traffic_load"}, {"score": 0.00220177373403577, "phrase": "diminished_capacity_region"}, {"score": 0.0021049977753042253, "phrase": "load_balancing"}], "paper_keywords": ["Cloud computing", " performance evaluation", " queueing theory", " resource allocation", " scheduling"], "paper_abstract": "We consider a stochastic model of jobs arriving at a cloud data center. Each job requests a certain amount of CPU, memory, disk space, etc. Job sizes (durations) are also modeled as random variables, with possibly unbounded support. These jobs need to be scheduled nonpreemptively on servers. The jobs are first routed to one of the servers when they arrive and are queued at the servers. Each server then chooses a set of jobs from its queues so that it has enough resources to serve all of them simultaneously. This problem has been studied previously under the assumption that job sizes are known and upper-bounded, and an algorithm was proposed that stabilizes traffic load in a diminished capacity region. Here, we present a load balancing and scheduling algorithm that is throughput-optimal, without assuming that job sizes are known or are upper-bounded.", "paper_title": "Scheduling Jobs With Unknown Duration in Clouds", "paper_id": "WOS:000346796000019"}