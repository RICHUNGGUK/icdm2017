{"auto_keywords": [{"score": 0.040043316347254894, "phrase": "uml"}, {"score": 0.015719590084335437, "phrase": "statechart_semantics"}, {"score": 0.012744146702467282, "phrase": "statemate"}, {"score": 0.004647911247507267, "phrase": "visual_technique"}, {"score": 0.004550469496119256, "phrase": "reactive_behaviour"}, {"score": 0.003195787852087248, "phrase": "statechart_designs"}, {"score": 0.002196342933346204, "phrase": "slight_variation"}, {"score": 0.0021501863832966966, "phrase": "statemate_semantics"}, {"score": 0.0021049977753042253, "phrase": "linear_stuttering-closed_properties"}], "paper_keywords": ["Statecharts", " Formal semantics"], "paper_abstract": "Statecharts are a visual technique for modelling reactive behaviour. Over the years, a plethora of statechart semantics have been proposed. The three most widely used are the fixpoint, STATEMATE, and UML semantics. These three semantics differ considerably from each other. In general, they interpret the same statechart differently, which impedes the communication of statechart designs among both designers and tools. In this paper, we identify a set of constraints on statecharts that ensure that the fixpoint, STATEMATE and UML semantics coincide, if observations are restricted to linear, stuttering-closed, separable properties. Moreover, we show that for a subset of these constraints, a slight variation of the STATEMATE semantics coincides for linear stuttering-closed properties with the UML semantics. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Reconciling statechart semantics", "paper_id": "WOS:000263021600001"}