{"auto_keywords": [{"score": 0.04911945324917725, "phrase": "relation_extraction"}, {"score": 0.046345717877726705, "phrase": "relation_instance"}, {"score": 0.04221552420026915, "phrase": "combined_features"}, {"score": 0.04107868567004354, "phrase": "local_dependencies"}, {"score": 0.00481507920716798, "phrase": "chinese"}, {"score": 0.004567990533989851, "phrase": "free_text"}, {"score": 0.00436890075128947, "phrase": "small_number"}, {"score": 0.004246729915110547, "phrase": "sparse_feature_representation"}, {"score": 0.0041784516085055035, "phrase": "better_use"}, {"score": 0.004144723510171449, "phrase": "limited_information"}, {"score": 0.004061584718427419, "phrase": "parsing_trees"}, {"score": 0.003884479830773329, "phrase": "relation_instances"}, {"score": 0.003760527969356061, "phrase": "tree-based_systems"}, {"score": 0.003384262486955773, "phrase": "optimal_performance"}, {"score": 0.003236596168242036, "phrase": "feature_assembly_method"}, {"score": 0.0031845067058084583, "phrase": "six_types"}, {"score": 0.003120568497402472, "phrase": "head_noun"}, {"score": 0.003095389377917898, "phrase": "pos"}, {"score": 0.0028890603352364273, "phrase": "atomic_features"}, {"score": 0.002865710140187219, "phrase": "six_constraint_conditions"}, {"score": 0.0026638482306228575, "phrase": "different_settings"}, {"score": 0.0025892330566358503, "phrase": "candidate_features"}, {"score": 0.002568299907890696, "phrase": "different_constraint_conditions"}, {"score": 0.0024963543716522087, "phrase": "optimal_extraction_performance"}, {"score": 0.002348883765159185, "phrase": "inaccurate_parsing"}, {"score": 0.0023016843709107297, "phrase": "proposed_method"}, {"score": 0.0022281257694320433, "phrase": "state-of-the-art_performance"}, {"score": 0.0021569129153653777, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Constraint condition", " Feature assembly", " Relation extraction"], "paper_abstract": "The goal of relation extraction is to detect relations between two entities in free text. In a sentence, a relation instance usually comprises a small number of words, which yields a sparse feature representation. To make better use of limited information in a relation instance, parsing trees and combined features are employed widely to capture the local dependencies of relation instances. However, the performance of parsing tree-based systems is often degraded by chunking or parsing errors. Combined features are used widely, but few studies have addressed how features can be combined to achieve optimal performance. Thus, in this study, we propose a feature assembly method for relation extraction. Six types of candidate features (head noun, POS tag, n-gram, omni-word, etc.) are employed as atomic features and six constraint conditions (singleton, position, syntax, etc.) are used to combine these features in different settings. Depending on the utilization of candidate features, different constraint conditions can be explored to achieve the optimal extraction performance. Our method is effective for capturing local dependencies and it reduces the errors caused by inaccurate parsing. We tested the proposed method using the ACE 2005 Chinese and English corpora, and it achieved state-of-the-art performance, where it was significantly superior to existing methods. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Feature assembly method for extracting relations in Chinese", "paper_id": "WOS:000361405800007"}