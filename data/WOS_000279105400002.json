{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fpga_configuration_circuitry"}, {"score": 0.003615845091983304, "phrase": "field_programmable_gate_array"}, {"score": 0.0033878306639271963, "phrase": "die_resources"}, {"score": 0.0033439771810057717, "phrase": "time_delays"}, {"score": 0.003257960296952439, "phrase": "reconfigurable_structure"}, {"score": 0.0031741489723036255, "phrase": "general-purpose_network"}, {"score": 0.00307240091019322, "phrase": "reconfigurable_network"}, {"score": 0.002543224008253855, "phrase": "configuration_circuitry"}, {"score": 0.0024297565926197505, "phrase": "system_operation"}, {"score": 0.002336527289457915, "phrase": "relatively_high-performance"}], "paper_keywords": [""], "paper_abstract": "Although there have been many reported implementations of networks-on-chip (NoCs) on FPGAs, they have not seen the same acceptance as NoCs on ASICs. One reason is that communication on a field programmable gate array (FPGA) is already costly because of the die resources and time delays inherent in the reconfigurable structure. Layering another general-purpose network on top of the reconfigurable network simply incurs too many performance penalties. There is, however, already a largely unused, global network available in FPGAs. As a proof-of-concept, we demonstrate that the Xilinx FPGA configuration circuitry, which is normally idle during system operation, can function as a relatively high-performance NoC. MetaWire performs transfers through an overclocked Virtex-4 internal configuration access port and is shown to provide a bandwidth exceeding 200 MB/s.", "paper_title": "MetaWire: using FPGA configuration circuitry to emulate a network-on-chip", "paper_id": "WOS:000279105400002"}