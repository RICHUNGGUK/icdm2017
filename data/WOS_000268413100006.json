{"auto_keywords": [{"score": 0.04485011034828449, "phrase": "dummy_data_structures"}, {"score": 0.03160439364918411, "phrase": "r-tree_data_structure"}, {"score": 0.00481495049065317, "phrase": "copyright_protection"}, {"score": 0.004720792132470776, "phrase": "software_copyright"}, {"score": 0.004689815048273592, "phrase": "hiding_watermarks"}, {"score": 0.00401736307274363, "phrase": "hosting_software"}, {"score": 0.003925786139948254, "phrase": "subtractive_attacks"}, {"score": 0.0036997388927095935, "phrase": "software_program"}, {"score": 0.0033075503163659055, "phrase": "underlying_software"}, {"score": 0.003158367829177805, "phrase": "minimal_effect"}, {"score": 0.003076152130543236, "phrase": "data_structure"}, {"score": 0.003015893651662638, "phrase": "novel_method"}, {"score": 0.002927705457700311, "phrase": "proposed_watermarking_technique"}, {"score": 0.0028514769721161063, "phrase": "stored_data_objects"}, {"score": 0.002713842991944533, "phrase": "r-tree_nodes"}, {"score": 0.002643168068896905, "phrase": "\"secret\"_initial_order"}, {"score": 0.0025913692304671675, "phrase": "software_owner"}, {"score": 0.002523875743494305, "phrase": "numbering_system"}, {"score": 0.0024990202385797252, "phrase": "variable_radix"}, {"score": 0.002482585701725093, "phrase": "factorial_base"}, {"score": 0.0022560515732199062, "phrase": "detailed_security_analysis"}, {"score": 0.0022412113034595903, "phrase": "performance_evaluation"}, {"score": 0.0022045353683203626, "phrase": "embedded_watermarks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Information security", " R-trees", " Watermarking", " Multimedia indexes", " Spatial data structures", " Copyright protection"], "paper_abstract": "This paper advocates protecting software copyright through hiding watermarks in various data structures used by the code, e.g., B+-trees, R-trees, linked lists, etc. Prior proposals hide the watermarks in dummy data structures, e.g., linked lists and graphs that are created, solely for this reason, during the execution of the hosting software. This makes them vulnerable to subtractive attacks, because the attacker can remove the dummy data structures without altering the functionality or the semantic of the software program. We argue that hiding watermarks in one or more data structures that are used by the program would make the watermark more robust because disturbing the watermark would affect the semantic and the functionality of the underlying software. The challenge is that the insertion of the watermark should have a minimal effect on the operations and performance of the data structure. This paper proposes a novel method for watermarking R-tree data structure and its variants. The proposed watermarking technique does not change the values of the stored data objects. It takes advantage of the redundancy in the order of entries inside the R-tree nodes. Entries are arranged relative to a \"secret\" initial order, known only to the software owner, using a technique based on a numbering system that uses variable radix with factorial base. The addition of the watermark in the R-tree data structure does not affect the performance nor does it increase the size of the R-tree. The paper provides a detailed security analysis and performance evaluation to show that the embedded watermarks are robust and can withstand various types of attacks. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A robust software watermarking for copyright protection", "paper_id": "WOS:000268413100006"}