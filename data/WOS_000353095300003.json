{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "scheduling_strategies"}, {"score": 0.04879952093091754, "phrase": "multi-gpu_architectures"}, {"score": 0.0042912493195237725, "phrase": "heterogeneous_multi-cpu"}, {"score": 0.003956113993518042, "phrase": "xkaapi_runtime"}, {"score": 0.0038242899532391914, "phrase": "data-aware_work_stealing"}, {"score": 0.003772793879444995, "phrase": "locality-aware_work_stealing"}, {"score": 0.0034079696245884073, "phrase": "heterogeneous_architecture"}, {"score": 0.002799402297319154, "phrase": "cholesky"}, {"score": 0.0027616554627543067, "phrase": "lu."}, {"score": 0.0025284524249379265, "phrase": "task_annotations"}, {"score": 0.002427549902743566, "phrase": "data_locality_strategy"}, {"score": 0.0023148964315569866, "phrase": "heft_scheduling"}, {"score": 0.0021925226977381244, "phrase": "low_data_locality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel programming", " Accelerators", " Task parallelism", " Data-flow dependencies", " Work stealing"], "paper_abstract": "In this paper, we present a comparison of scheduling strategies for heterogeneous multi-CPU and multi-GPU architectures. We designed and evaluated four scheduling strategies on top of XKaapi runtime: work stealing, data-aware work stealing, locality-aware work stealing, and Heterogeneous Earliest-Finish-Time (HEFT). On a heterogeneous architecture with 12 CPUs and 8 GPUs, we analysed our scheduling strategies with four benchmarks: a BLAS-1 AXPY vector operation, a Jacobi 2D iterative computation, and two linear algebra algorithms Cholesky and LU. We conclude that the use of work stealing may be efficient if task annotations are given along with a data locality strategy. Furthermore, our experimental results suggests that HEFT scheduling performs better on applications with very regular computations and low data locality. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Design and analysis of scheduling strategies for multi-CPU and multi-GPU architectures", "paper_id": "WOS:000353095300003"}