{"auto_keywords": [{"score": 0.004527947981009528, "phrase": "programmability_demands"}, {"score": 0.004346139434813299, "phrase": "multithreaded_simd_architectures"}, {"score": 0.004200197763119297, "phrase": "recent_graphics_processing_units"}, {"score": 0.004031495920060339, "phrase": "novel_instruction-systolic_array_architecture"}, {"score": 0.0038960785110831162, "phrase": "instruction_stream"}, {"score": 0.0038170129089059013, "phrase": "pipelined_fashion"}, {"score": 0.003688773272422118, "phrase": "expensive_functional_resources"}, {"score": 0.003613899384402803, "phrase": "graphics_processor"}, {"score": 0.0034450303951025704, "phrase": "dynamic_branches"}, {"score": 0.003375087185182269, "phrase": "additional_latencies"}, {"score": 0.00332924643541238, "phrase": "complicated_management"}, {"score": 0.0032616462517547477, "phrase": "parallel_architectures"}, {"score": 0.0030460403366412126, "phrase": "systolic_execution_scheme"}, {"score": 0.003004655258223784, "phrase": "on-demand_warp_activation"}, {"score": 0.0028641729745364952, "phrase": "branch_divergence"}, {"score": 0.002767856819656175, "phrase": "hardware_resources"}, {"score": 0.002497862210672172, "phrase": "proposed_architecture"}, {"score": 0.0024138345020219333, "phrase": "traditional_simd_architecture"}, {"score": 0.002300912218086077, "phrase": "significantly_fewer_resources"}, {"score": 0.0021932609696277937, "phrase": "typical_modern_vector_multi-threaded_gpu_architecture"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["SIMD", " Programmable CPU", " Instructoin systolic", " Pipelined management"], "paper_abstract": "In order to guarantee both performance and programmability demands in 3D graphics applications, vector and multithreaded SIMD architectures have been employed in recent graphics processing units. This paper introduces a novel instruction-systolic array architecture, which transfers an instruction stream in a pipelined fashion to efficiently share the expensive functional resources of a graphics processor. Specifically, cache misses and dynamic branches can cause additional latencies and complicated management in these parallel architectures. To address this problem, we combine a systolic execution scheme with on-demand warp activation that handles cache miss latency and branch divergence efficiently without significantly increasing hardware resources, either in terms of logic or register space. Simulation indicates that the proposed architecture offers 25% better performance than a traditional SIMD architecture with the same resources, and requires significantly fewer resources to match the performance of a typical modern vector multi-threaded GPU architecture. (c) 2010 Elsevier Inc. All rights reserved.", "paper_title": "An instruction-systolic programmable shader architecture for multi-threaded 3D graphics processing", "paper_id": "WOS:000282191700003"}