{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_items"}, {"score": 0.0372737859287202, "phrase": "item_frequencies"}, {"score": 0.03697555422030673, "phrase": "ad_hoc_windows"}, {"score": 0.00477513738640734, "phrase": "ad_hoc_time_windows"}, {"score": 0.004677032188041644, "phrase": "frequent_item_discovery"}, {"score": 0.004376378707877484, "phrase": "diverse_domains"}, {"score": 0.004304271837157217, "phrase": "network_traffic_monitoring"}, {"score": 0.004268663239979243, "phrase": "e-business_transactions"}, {"score": 0.003847546889061499, "phrase": "recent_values"}, {"score": 0.0034678302347682694, "phrase": "stream_history"}, {"score": 0.00313849462329633, "phrase": "data_stream"}, {"score": 0.0030995835539697893, "phrase": "small_bounded_memory"}, {"score": 0.0030611534228319717, "phrase": "present_novel_algorithms"}, {"score": 0.0029733203800202303, "phrase": "basic_sketch-"}, {"score": 0.002948689937518561, "phrase": "count-based_algorithms"}, {"score": 0.0028760125558659907, "phrase": "existing_approaches"}, {"score": 0.0027246145918972025, "phrase": "improved_version"}, {"score": 0.002668524425703961, "phrase": "significantly_better_performance"}, {"score": 0.0025704485156071463, "phrase": "extra_memory_cost"}, {"score": 0.002486292595645607, "phrase": "efficient_non-linear_model"}, {"score": 0.002404885278896803, "phrase": "query_windows"}, {"score": 0.002335838283092986, "phrase": "extensive_experimental_evaluation"}, {"score": 0.002316476356455291, "phrase": "synthetic_and_real_datasets"}, {"score": 0.00224061675049049, "phrase": "proposed_solutions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Database management", " Data mining", " Business intelligence"], "paper_abstract": "The problem of frequent item discovery in streaming data has attracted a lot of attention, mainly because of its numerous applications in diverse domains, such as network traffic monitoring and e-business transactions analysis. While the above problem has been studied extensively, and several techniques have been proposed for its solution, these approaches are geared towards the recent values in the stream. Nevertheless, in several situations the users would like to be able to query about the item frequencies in ad hoc windows in the stream history, and compare these values among themselves. In this paper, we address the problem of finding frequent items in ad hoc windows in a data stream given a small bounded memory, and present novel algorithms to this direction. We propose basic sketch- and count-based algorithms that extend the functionality of existing approaches by monitoring item frequencies in the stream. Subsequently, we present an improved version of the algorithm with significantly better performance (in terms of accuracy, at no extra memory cost). Moreover, we propose an efficient non-linear model to better estimate the frequencies within the query windows. Finally, we conduct an extensive experimental evaluation with synthetic and real datasets, which demonstrates the merits of the proposed solutions and provides guidelines for the practitioners in the field. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Identifying streaming frequent items in ad hoc time windows", "paper_id": "WOS:000326254900004"}