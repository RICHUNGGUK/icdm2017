{"auto_keywords": [{"score": 0.04961049691122095, "phrase": "mapreduce"}, {"score": 0.0432719903395645, "phrase": "mapreduce_model"}, {"score": 0.03700215645638443, "phrase": "high_performance"}, {"score": 0.004698000536608171, "phrase": "simple_and_flexible_parallel_programming_model"}, {"score": 0.00462939978881557, "phrase": "google"}, {"score": 0.004583878086896926, "phrase": "large-scale_distributed_data_processing"}, {"score": 0.004342430078306461, "phrase": "prototype_implementation"}, {"score": 0.004073359218158693, "phrase": "simple_machine_abstraction"}, {"score": 0.003428665921276366, "phrase": "basic_characteristics"}, {"score": 0.003296212583539166, "phrase": "mapreduce_applications"}, {"score": 0.002899965889623787, "phrase": "application_types"}, {"score": 0.0028293966058473476, "phrase": "complete_applications"}, {"score": 0.002760539837481164, "phrase": "map-dominated_applications"}, {"score": 0.002693355057018654, "phrase": "cbea"}, {"score": 0.002551231163230566, "phrase": "partition-dominated_and_sort-dominated_applications"}, {"score": 0.0021049977753042253, "phrase": "cell_broadband_engine_processor-based_platforms"}], "paper_keywords": [""], "paper_abstract": "MapReduce is a simple and flexible parallel programming model proposed by Google for large-scale distributed data processing. In this paper, we present a design and prototype implementation of MapReduce for the Cell Broadband Engine (R) Architecture (CBEA). The MapReduce model provides a simple machine abstraction that shields users from parallelization and other distributed programming complications. The goal of this paper is to describe the tradeoffs in the design of the runtime and demonstrate the potential for high performance. We study the basic characteristics of the MapReduce model and identify three types of MapReduce applications: map dominated, partition dominated, and sort dominated. We evaluate our runtime performance, scalability, and efficiency for microbenchmarks representing each of these application types as well as for complete applications. We find that map-dominated applications map well to the CBEA and that our prototype sustains high performance on these applications. For partition-dominated and sort-dominated applications, we analyze runtime performance, identify sources of inefficiency, and propose several future enhancements to significantly improve performance. Overall, we find that the simplicity and efficiency of the model make it an attractive tool for programming Cell Broadband Engine processor-based platforms.", "paper_title": "MapReduce for the Cell Broadband Engine Architecture", "paper_id": "WOS:000208258800010"}