{"auto_keywords": [{"score": 0.04208729377636017, "phrase": "principal_directions"}, {"score": 0.010612387000973441, "phrase": "stylized_highlights"}, {"score": 0.010471592742896864, "phrase": "projective_textures"}, {"score": 0.00432423070113186, "phrase": "real-time_applications"}, {"score": 0.0038833278847237858, "phrase": "preprocessing_step"}, {"score": 0.0037549546301384336, "phrase": "maximum_specular_intensity_point"}, {"score": 0.0033492947290751996, "phrase": "bilinear_interpolation"}, {"score": 0.0030895394261534776, "phrase": "texture_projector"}, {"score": 0.002811770047652563, "phrase": "simple_culling_method"}, {"score": 0.0023131084326717755, "phrase": "stylized_highlight"}, {"score": 0.0021049977753042253, "phrase": "approximate_solutions"}], "paper_keywords": ["stylized highlight", " projective texture", " principal direction and curvature"], "paper_abstract": "We present a method to render and control stylized highlights using projective textures for real-time applications. For each vertex of a given 3D model, we compute principal directions and their corresponding principal curvatures in the preprocessing step. We find the maximum specular intensity point on the surface of the model and compute the principal directions and curvatures at the point by bilinear interpolation. The position, orientation, and projection frustum of a texture projector are determined by the principal directions and curvatures at the point. Using a simple culling method, we reduce the number of triangles to compute the principal directions and curvatures. We can control the shape, size, position, and orientation of a stylized highlight in an easy, fast, and intuitive manner. We discuss the limitations of our method and also give approximate solutions for some limitations.", "paper_title": "Rendering stylized highlights using projective textures", "paper_id": "WOS:000240381000023"}