{"auto_keywords": [{"score": 0.049505168345722585, "phrase": "dynamically_adaptive_stochastic_tunneling"}, {"score": 0.00481495049065317, "phrase": "fpga_placement"}, {"score": 0.004372002674739612, "phrase": "\"freezing\"_problem"}, {"score": 0.004242085112539693, "phrase": "simulated_annealing"}, {"score": 0.004191200981137508, "phrase": "circuit_placement"}, {"score": 0.004140924670517666, "phrase": "field-programmable_gate_arrays"}, {"score": 0.00399367108161192, "phrase": "main_objective"}, {"score": 0.0038749521906474593, "phrase": "placement_runtime"}, {"score": 0.0037371212381934853, "phrase": "final_placement"}, {"score": 0.0035609154384221567, "phrase": "dast_placer"}, {"score": 0.003496994062890991, "phrase": "energetically_inaccessible_regions"}, {"score": 0.0034342161742428635, "phrase": "potential_solution_space"}, {"score": 0.003352256019007896, "phrase": "stochastic_tunneling_schedule"}, {"score": 0.0032722454818973853, "phrase": "detrended_fluctuation_analysis"}, {"score": 0.0031941384895530426, "phrase": "move_types"}, {"score": 0.003117890043128058, "phrase": "multi-modal_scheme"}, {"score": 0.00306189690236109, "phrase": "gibbs_sampling"}, {"score": 0.0030069062905274976, "phrase": "prototype_annealing-based_placer"}, {"score": 0.002952902123422166, "phrase": "dast"}, {"score": 0.0025853238923610076, "phrase": "vpr"}, {"score": 0.002478225374613311, "phrase": "dast_algorithm"}, {"score": 0.002404447017429959, "phrase": "benchmark_suite"}, {"score": 0.0023755529073496394, "phrase": "fpga_architecture_file"}, {"score": 0.002156529381840657, "phrase": "critical-path_delay"}, {"score": 0.0021049977753042253, "phrase": "conventional_vpr."}], "paper_keywords": ["Field-programmable gate array (FPGA)", " placement", " simulated annealing", " stochastic tunneling"], "paper_abstract": "This paper develops a dynamically adaptive stochastic tunneling (DAST) algorithm to avoid the \"freezing\" problem commonly found when using simulated annealing for circuit placement on field-programmable gate arrays (FPGAs). The main objective is to reduce the placement runtime and improve the quality of final placement. We achieve this by allowing the DAST placer to tunnel energetically inaccessible regions of the potential solution space, adjusting the stochastic tunneling schedule adaptively by performing detrended fluctuation analysis, and selecting move types dynamically by a multi-modal scheme based on Gibbs sampling. A prototype annealing-based placer, called DAST, was developed as part of this paper. It targets the same computer-aided design flow as the standard versatile placement and routing (VPR) but replaces its original annealer with the DAST algorithm. Our experimental results using the benchmark suite and FPGA architecture file which comes with the Toronto VPR5 software package have shown a 18.3% reduction in runtime and a 7.2% improvement in critical-path delay over that of conventional VPR.", "paper_title": "Improving FPGA Placement with Dynamically Adaptive Stochastic Tunneling", "paper_id": "WOS:000284417400002"}