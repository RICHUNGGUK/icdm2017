{"auto_keywords": [{"score": 0.049550003280174476, "phrase": "software-defined_radio"}, {"score": 0.04385291217970333, "phrase": "sdr"}, {"score": 0.00481495049065317, "phrase": "turbo_decoding"}, {"score": 0.0044800522651664695, "phrase": "simulated_execution_performance"}, {"score": 0.004406121974246201, "phrase": "software_double-binary_turbo_decoder_implementation"}, {"score": 0.004122351497440992, "phrase": "turbo_codes"}, {"score": 0.004076858589744185, "phrase": "excellent_error-correcting_performance"}, {"score": 0.00396530196547293, "phrase": "significant_computational_demands"}, {"score": 0.0038998328617557013, "phrase": "communication_system"}, {"score": 0.0037721073763702486, "phrase": "execution_performance"}, {"score": 0.003628352506247126, "phrase": "turbo_decoder"}, {"score": 0.003265090934183249, "phrase": "coded_modulation_library"}, {"score": 0.0031405975280029913, "phrase": "adapted_software"}, {"score": 0.003004103583782076, "phrase": "multiprocessor_version"}, {"score": 0.0029544572689681934, "phrase": "simplescalar_simulator"}, {"score": 0.002921815042028607, "phrase": "simulation_results"}, {"score": 0.002873524721802591, "phrase": "serial_optimizations"}, {"score": 0.0028260302580927856, "phrase": "original_adapted_stand-alone_c_decoder_software"}, {"score": 0.0026584843838039166, "phrase": "special_instructions"}, {"score": 0.002614534850703364, "phrase": "important_functions"}, {"score": 0.002486987042061596, "phrase": "new_baseline"}, {"score": 0.00218853009252455, "phrase": "cache_effects"}, {"score": 0.0021285340816566906, "phrase": "significant_impact"}, {"score": 0.0021049977753042253, "phrase": "parallel_execution_times"}], "paper_keywords": [""], "paper_abstract": "This paper describes the optimization, parallelization, and simulated execution performance of a software double-binary turbo decoder implementation supporting the WiMAX standard suitable for software-defined radio (SDR). Turbo codes offer excellent error-correcting performance, but they introduce significant computational demands in a communication system, In order to enhance execution performance for SDR, software for a turbo decoder based on the maximum a posteriori (MAP) algorithm was first adapted front the open-source Coded Modulation Library. Optimization and parallelization of the adapted software were then pursued and assessed with a multiprocessor version of the SimpleScalar simulator. Simulation results show that serial optimizations of the original adapted stand-alone C decoder software improve performance by more than 200%. The use of special instructions to accelerate important functions provides a further benefit of nearly 40% relative to the new baseline for performance. Exploiting the parallelism available in (he MAP algorithm then yields a speedup of 10.9 on 12 processors. Simulation also shows that cache effects do not have a significant impact on parallel execution times.", "paper_title": "Performance optimization and parallelization of turbo decoding for software-defined radio", "paper_id": "WOS:000275118800006"}