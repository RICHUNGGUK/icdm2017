{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "final_embedded_system"}, {"score": 0.0046970764288494764, "phrase": "tool_suite"}, {"score": 0.0045443671106012405, "phrase": "deal-time_embedded_systems"}, {"score": 0.00428892403807229, "phrase": "early_requirement_capture"}, {"score": 0.004218602458288531, "phrase": "full_implementation"}, {"score": 0.0039813976794342, "phrase": "strong_link"}, {"score": 0.0037886833451021723, "phrase": "final_implementation"}, {"score": 0.0033743949483348626, "phrase": "rapid_prototyping_process"}, {"score": 0.0032376465741070274, "phrase": "tedious_and_error-prone_tasks"}, {"score": 0.002907405102646616, "phrase": "development_cycle"}, {"score": 0.0022492129111567824, "phrase": "dedicated_tool_suite"}, {"score": 0.0021401625519713577, "phrase": "prototyping_process"}], "paper_keywords": ["AADL", " distributed", " DRE", " embedded", " Ocarina", " PolyORB-HI", " real-time"], "paper_abstract": "Building distributed deal-time embedded systems requires a stringent methodology, from early requirement capture to full implementation. However, there is a strong link between the requirements and the final implementation (e. g., scheduling and resource dimensioning). Therefore, a rapid prototyping process based on automation of tedious and error-prone tasks (analysis and code generation) is required to speed up the development cycle. In this article, we show how the AADL (Architecture Analysis and Design Language), which appeared in late 2004, helps solve these issues thanks to a dedicated tool suite. We then detail the prototyping process and its current implementation: Ocarina.", "paper_title": "From the prototype to the final embedded system using the Ocarina AADL tool suite", "paper_id": "WOS:000259432400006"}