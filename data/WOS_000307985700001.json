{"auto_keywords": [{"score": 0.027116732902301578, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "computational_grids"}, {"score": 0.004763895422211728, "phrase": "job_scheduling"}, {"score": 0.00458940888106061, "phrase": "grid_resource_management"}, {"score": 0.00439777299939725, "phrase": "whole_grid_environment"}, {"score": 0.004327981760540394, "phrase": "major_drawback"}, {"score": 0.004259293347851015, "phrase": "existing_grid_scheduling_algorithms"}, {"score": 0.003910879154656061, "phrase": "network_conditions"}, {"score": 0.0038079353103469865, "phrase": "network_model"}, {"score": 0.0037076911119175455, "phrase": "resource_information_aggregation"}, {"score": 0.00335016692413066, "phrase": "grid_size"}, {"score": 0.0031930184711888867, "phrase": "environmental_conditions"}, {"score": 0.00304321897427383, "phrase": "learning_automata-based_job_scheduling_algorithm"}, {"score": 0.0028089634624677957, "phrase": "grid_node"}, {"score": 0.0026345758986796703, "phrase": "grid_constraints"}, {"score": 0.0024578219177450876, "phrase": "different_grid_scenarios"}, {"score": 0.002418742283474052, "phrase": "obtained_results"}, {"score": 0.002317533977770783, "phrase": "numerical_results"}, {"score": 0.0021049977753042253, "phrase": "load_balancing"}], "paper_keywords": ["Grid", " Job scheduling problem", " Resource allocation", " Learning automata"], "paper_abstract": "Job scheduling is one of the most challenging issues in Grid resource management that strongly affects the performance of the whole Grid environment. The major drawback of the existing Grid scheduling algorithms is that they are unable to adapt with the dynamicity of the resources and the network conditions. Furthermore, the network model that is used for resource information aggregation in most scheduling methods is centralized or semi-centralized. Therefore, these methods do not scale well as Grid size grows and do not perform well as the environmental conditions change with time. This paper proposes a learning automata-based job scheduling algorithm for Grids. In this method, the workload that is placed on each Grid node is proportional to its computational capacity and varies with time according to the Grid constraints. The performance of the proposed algorithm is evaluated through conducting several simulation experiments under different Grid scenarios. The obtained results are compared with those of several existing methods. Numerical results confirm the superiority of the proposed algorithm over the others in terms of makespan, flowtime, and load balancing.", "paper_title": "A new approach to the job scheduling problem in computational grids", "paper_id": "WOS:000307985700001"}