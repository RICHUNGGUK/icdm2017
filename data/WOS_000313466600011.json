{"auto_keywords": [{"score": 0.031763843900136826, "phrase": "hash_function"}, {"score": 0.015193406423750323, "phrase": "similarity_search"}, {"score": 0.014331237310513539, "phrase": "query_data_point"}, {"score": 0.01364973640311405, "phrase": "hash_functions"}, {"score": 0.013451590015409458, "phrase": "existing_approaches"}, {"score": 0.012874019672084864, "phrase": "hamming_distances"}, {"score": 0.007817096273865535, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "fast_similarity_search"}, {"score": 0.004606479650820579, "phrase": "large_scale"}, {"score": 0.004450568197899267, "phrase": "similar_data_points"}, {"score": 0.004321118442104989, "phrase": "efficient_way"}, {"score": 0.003974349782102708, "phrase": "low_values"}, {"score": 0.003877737556673229, "phrase": "similar_pairs"}, {"score": 0.003728000957725218, "phrase": "ranking_order"}, {"score": 0.003566422652043389, "phrase": "poor_accuracy"}, {"score": 0.0035141291835319682, "phrase": "similar_items"}, {"score": 0.003247868216333148, "phrase": "top_k_rhs"}, {"score": 0.003091767402370757, "phrase": "ranking_loss_function"}, {"score": 0.0025137856138000014, "phrase": "binary_classifier"}, {"score": 0.002323142666222693, "phrase": "computational_complexity"}, {"score": 0.0022005118194652704, "phrase": "higher_accuracy"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Similarity search", " Hash function", " Similarity ranking"], "paper_abstract": "The paper is concerned with similarity search at large scale, which efficiently and effectively finds similar data points for a query data point. An efficient way to accelerate similarity search is to learn hash functions. The existing approaches for learning hash functions aim to obtain low values of Hamming distances for the similar pairs. However, these methods ignore the ranking order of these Hamming distances. This leads to the poor accuracy about finding similar items for a query data point. In this paper, an algorithm is proposed, referred to top k RHS (Rank Hash Similarity), in which a ranking loss function is designed for learning a hash function. The hash function is hypothesized to be made up of I binary classifiers. The issue of learning a hash function can be formulated as a task of learning I binary classifiers. The algorithm runs I rounds and learns a binary classifier at each round. Compared with the existing approaches, the proposed method has the same order of computational complexity. Nevertheless, experiment results on three text datasets show that the proposed method obtains higher accuracy than the baselines. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Rank hash similarity for fast similarity search", "paper_id": "WOS:000313466600011"}