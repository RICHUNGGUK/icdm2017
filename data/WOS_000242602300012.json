{"auto_keywords": [{"score": 0.04738802715775448, "phrase": "smo"}, {"score": 0.015541051707291462, "phrase": "fast_training_support_vector_machine"}, {"score": 0.00960104014336276, "phrase": "multiple_cpu_processors"}, {"score": 0.00481495049065317, "phrase": "parallel_sequential_minimal_optimization"}, {"score": 0.004597457370802855, "phrase": "sequential_minimal_optimization"}, {"score": 0.004002063656722286, "phrase": "svm"}, {"score": 0.0038431888954930083, "phrase": "large_amount"}, {"score": 0.0037989951856280423, "phrase": "computation_time"}, {"score": 0.0037336520904376687, "phrase": "large_size_problems"}, {"score": 0.0036694287631595995, "phrase": "parallel_smo"}, {"score": 0.0033839745649214548, "phrase": "sequential_smo"}, {"score": 0.0030141556259370675, "phrase": "smaller_subsets"}, {"score": 0.0028119023819663472, "phrase": "partitioned_data_sets"}, {"score": 0.00270023138867066, "phrase": "great_speedup"}, {"score": 0.0025631294247072476, "phrase": "ideval_data"}, {"score": 0.002418923027024191, "phrase": "satisfactory_results"}, {"score": 0.002377260665147444, "phrase": "web_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["support vector machine (SVM)", " sequential minimal optimization (SMO)", " message passing interface (MPI)", " parallel algorithm"], "paper_abstract": "A parallel version of sequential minimal optimization (SMO) is developed in this paper for fast training support vector machine (SVM). Up to now, SMO is one popular algorithm for training SVM, but it still requires a large amount of computation time for solving large size problems. The parallel SMO is developed based on message passing interface (MPI). Unlike the sequential SMO which handle all the training data points using one CPU processor, the parallel SMO first partitions the entire training data set into smaller subsets and then simultaneously runs multiple CPU processors to deal with each of the partitioned data sets. Experiments show that there is great speedup on the adult data set, the MNIST data set and IDEVAL data set when many processors are used. There are also satisfactory results on the Web data set. This work is very useful for the research where multiple CPU processors machine is available. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Developing parallel sequential minimal optimization for fast training support vector machine", "paper_id": "WOS:000242602300012"}