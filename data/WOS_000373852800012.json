{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_fault_injection"}, {"score": 0.004444921827311577, "phrase": "software_complexity"}, {"score": 0.00436661740263741, "phrase": "software-related_accidents"}, {"score": 0.004251728624599691, "phrase": "significant_threat"}, {"score": 0.004176813329075736, "phrase": "computer-based_systems"}, {"score": 0.0038900709793274484, "phrase": "worst-case_scenarios"}, {"score": 0.00378767277402891, "phrase": "faulty_software"}, {"score": 0.003687960013746783, "phrase": "deliberate_injection"}, {"score": 0.0036229421570951807, "phrase": "software_faults"}, {"score": 0.003434662174045939, "phrase": "comprehensive_overview"}, {"score": 0.002515384834484012, "phrase": "fault_representativeness"}, {"score": 0.0022404162042797262, "phrase": "relevant_applications"}, {"score": 0.0021049977753042253, "phrase": "fault-tolerant_systems"}], "paper_keywords": ["Reliability", " Verification", " Performance", " Software faults", " dependability assessment", " software fault tolerance"], "paper_abstract": "With the rise of software complexity, software-related accidents represent a significant threat for computer-based systems. Software Fault Injection is a method to anticipate worst-case scenarios caused by faulty software through the deliberate injection of software faults. This survey provides a comprehensive overview of the state of the art on Software Fault Injection to support researchers and practitioners in the selection of the approach that best fits their dependability assessment goals, and it discusses how these approaches have evolved to achieve fault representativeness, efficiency, and usability. The survey includes a description of relevant applications of Software Fault Injection in the context of fault-tolerant systems.", "paper_title": "Assessing Dependability with Software Fault Injection: A Survey", "paper_id": "WOS:000373852800012"}