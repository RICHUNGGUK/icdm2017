{"auto_keywords": [{"score": 0.048313706083567, "phrase": "affine_arithmetic"}, {"score": 0.00481495049065317, "phrase": "ray_tracing"}, {"score": 0.004755054742217193, "phrase": "arbitrary_implicit_surfaces"}, {"score": 0.004579780586951551, "phrase": "existing_techniques"}, {"score": 0.004494570360108983, "phrase": "arbitrary-form_implicit_surfaces"}, {"score": 0.004177250380468304, "phrase": "ray"}, {"score": 0.004066076430818046, "phrase": "interval_arithmetic"}, {"score": 0.003306559295382181, "phrase": "stack-driven_iterative_algorithm"}, {"score": 0.0032653836385232106, "phrase": "simd"}, {"score": 0.0031056437850836326, "phrase": "interactive_performance"}, {"score": 0.003066945490483524, "phrase": "common_algebraic_surfaces"}, {"score": 0.0030097975788892896, "phrase": "cpu._a_similar_algorithm"}, {"score": 0.0028446460307503343, "phrase": "efficient_ray"}, {"score": 0.0027742236670959684, "phrase": "gpu."}, {"score": 0.0025892330566358503, "phrase": "inclusion-preserving_reduced_affine_arithmetic"}, {"score": 0.002509284173541882, "phrase": "faster_ray-surface_intersection"}, {"score": 0.00241658945942583, "phrase": "immediate_and_automatic_generation"}, {"score": 0.0023127544795063263, "phrase": "affine_extensions"}, {"score": 0.0021857667493036786, "phrase": "even_complex_forms"}, {"score": 0.0021049977753042253, "phrase": "high_resolution"}], "paper_keywords": ["ray tracing", " reduced affine arithmetic", " shader metaprogramming"], "paper_abstract": "Existing techniques for rendering arbitrary-form implicit surfaces are limited, either in performance, correctness or flexibility. Ray tracing algorithms employing interval arithmetic (IA) or affine arithmetic (AA) for root-funding are robust and general in the class of surfaces they support, but traditionally slow. Nonetheless, implemented efficiently using a stack-driven iterative algorithm and SIMD vector instructions, these methods can achieve interactive performance for common algebraic surfaces on the CPU. A similar algorithm can also be implemented stacklessly, allowing for efficient ray tracing on the GPU. This paper presents these algorithms, as well as an inclusion-preserving reduced affine arithmetic (RAA) for faster ray-surface intersection. Shader metaprogramming allows for immediate and automatic generation of symbolic expressions and their interval or affine extensions. Moreover, we are able to render even complex forms robustly, in real-time at high resolution.", "paper_title": "Fast Ray Tracing of Arbitrary Implicit Surfaces with Interval and Affine Arithmetic", "paper_id": "WOS:000263678700004"}