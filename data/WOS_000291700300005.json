{"auto_keywords": [{"score": 0.04300713668009571, "phrase": "automatic_test_generation"}, {"score": 0.023728972135935427, "phrase": "nusmv"}, {"score": 0.00481495049065317, "phrase": "based_test_generation"}, {"score": 0.004739056045644449, "phrase": "p_systems"}, {"score": 0.004377077848734575, "phrase": "p_system_testing"}, {"score": 0.003916098498242888, "phrase": "specification_language"}, {"score": 0.003287482882222731, "phrase": "test_generation"}, {"score": 0.0031845067058084583, "phrase": "convenient_temporal_logic_specifications"}, {"score": 0.0028944757265206332, "phrase": "transitional_p_system"}, {"score": 0.002826181226538412, "phrase": "cooperative_rules"}, {"score": 0.002694375425481759, "phrase": "membrane_dissolution"}, {"score": 0.002488183412451029, "phrase": "p_system"}, {"score": 0.0022434880661725493, "phrase": "model_checker"}, {"score": 0.0021049977753042253, "phrase": "test_case_generation"}], "paper_keywords": [""], "paper_abstract": "This paper presents an approach for P system testing, that uses model-checking for automatic test generation and P-Lingua as specification language. This approach is based on a transformation of the transitional, non-deterministic, cell-like P system into a Kripke structure, which is further used for test generation, by adding convenient temporal logic specifications. This paper extends our previous work in this field to multi-membrane, transitional P system, having cooperative rules, communication between membranes and membrane dissolution. A tool, which takes as input a P system specified in P-Lingua and translates it into the language accepted by the model checker NuSMV has been developed and used for test case generation. Some hints regarding the automatic test generation using NuSMV and P-Lingua are also given.", "paper_title": "Model Checking Based Test Generation from P Systems Using P-Lingua", "paper_id": "WOS:000291700300005"}