{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large_scale_systems"}, {"score": 0.00475070135279933, "phrase": "dynamic_binary_instrumentation"}, {"score": 0.004687305496643216, "phrase": "performance_analysis"}, {"score": 0.004624751696958501, "phrase": "large_scale_architectures"}, {"score": 0.0043533862892678864, "phrase": "unique_challenges"}, {"score": 0.004237925318473508, "phrase": "often_limited_os_support"}, {"score": 0.00407042677958844, "phrase": "binary_instrumentation"}, {"score": 0.003909522412849035, "phrase": "target_application"}, {"score": 0.0037549546301384336, "phrase": "resulting_data"}, {"score": 0.0035823043879169153, "phrase": "current_status"}, {"score": 0.003510754567808717, "phrase": "new_implementation"}, {"score": 0.00344062888674746, "phrase": "dynamic_probe_class_library"}, {"score": 0.003260377175139591, "phrase": "dpcl"}, {"score": 0.0030895394261534776, "phrase": "dynamic_instrumentation"}, {"score": 0.0030482430937467013, "phrase": "parallel_mpi_applications"}, {"score": 0.0029672941061574375, "phrase": "dyninst_dynamic_instrumentation_library"}, {"score": 0.002664375650349975, "phrase": "dpcl's_communication"}, {"score": 0.002628747284714371, "phrase": "performance_data_collection"}, {"score": 0.0025761941237773226, "phrase": "mrnet"}, {"score": 0.0023762535034673017, "phrase": "scalable_multicast"}, {"score": 0.002344468886431959, "phrase": "data_reduction"}, {"score": 0.0022365262201954643, "phrase": "dpcl_api"}, {"score": 0.0021624739899833868, "phrase": "task_subsets"}, {"score": 0.0021049977753042253, "phrase": "collected_performance_data"}], "paper_keywords": ["massively parallel architectures", " binary instrumentation", " scalable data collection", " performance analysis tools"], "paper_abstract": "Dynamic binary instrumentation for performance analysis on large scale architectures such as the IBM Blue Gene/L system (BG/L) poses unique challenges. Their unprecedented scale and often limited OS support require new mechanisms to organize binary instrumentation, to interact with the target application, and to collect the resulting data. We describe the design and current status of a new implementation of the Dynamic Probe Class Library (DPCL) API for large scale systems. DPCL provides an easy to use layer for dynamic instrumentation on parallel MPI applications based on the DynInst dynamic instrumentation library for sequential platforms. Our work includes modifying DynInst to control instrumentation from remote I/O nodes and porting DPCL's communication for performance data collection to use MRNet, a tree-based overlay network that (TBON) supports scalable multicast and data reduction. We describe extensions to the DPCL API that support instrumentation of task subsets and aggregation of collected performance data.", "paper_title": "Dynamic binary instrumentation and data aggregation on large scale systems", "paper_id": "WOS:000247193600003"}