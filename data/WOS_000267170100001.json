{"auto_keywords": [{"score": 0.04424509811035144, "phrase": "ranking_functions"}, {"score": 0.015719716506582538, "phrase": "top-k_computation"}, {"score": 0.015590501708792054, "phrase": "term-proximity_support"}, {"score": 0.009367778490558653, "phrase": "query_processing_strategies"}, {"score": 0.004735254735115024, "phrase": "modern_web_search_engines"}, {"score": 0.004618166136069052, "phrase": "top-k_results"}, {"score": 0.004447915226010682, "phrase": "efficient_top-k_computation"}, {"score": 0.004266067096140677, "phrase": "especially_important_factors"}, {"score": 0.004057596233938867, "phrase": "query_terms"}, {"score": 0.003907969951044343, "phrase": "zhu"}, {"score": 0.0038432237470782315, "phrase": "shi"}, {"score": 0.003779910647003684, "phrase": "li"}, {"score": 0.0035204268675160257, "phrase": "structured_documents"}, {"score": 0.0031056437850836326, "phrase": "top-k_strategies"}, {"score": 0.002941389980674657, "phrase": "inverted_index"}, {"score": 0.00290473242917264, "phrase": "web_page_structure"}, {"score": 0.0028091907694771613, "phrase": "experimental_results"}, {"score": 0.002762601646452813, "phrase": "proposed_index_structures"}, {"score": 0.0026941587813581252, "phrase": "top-k_efficiency"}, {"score": 0.0025623050508233078, "phrase": "additional_techniques"}, {"score": 0.002519800066326798, "phrase": "top-k_computation_efficiency"}, {"score": 0.00246765655376112, "phrase": "proximity-probe_heuristic"}, {"score": 0.002194929830604162, "phrase": "exact_or_approximate_top-k_processing"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Top-k", " Dynamic index pruning", " Term-proximity", " Document structure", " Proximity-Probe", " Non-linear ranking function", " Approximate top-k"], "paper_abstract": "Modern web search engines are expected to return the top-k results efficiently. Although many dynamic index pruning strategies have been proposed for efficient top-k computation, most of them are prone to ignoring some especially important factors in ranking functions, such as term-proximity (the distance relationship between query terms in a document). In our recent work [Zhu, M., Shi, S., Li, M., & Wen.]. (2007). Effective top-k computation in retrieving structured documents with term-proximity support. In Proceedings of 16th CIKM conference (pp. 771-780)], we demonstrated that, when term-proximity is incorporated into ranking functions, most existing index structures and top-k strategies become quite inefficient. To solve this problem, we built the inverted index based on web page structure and proposed the query processing strategies accordingly. The experimental results indicate that the proposed index structures and query processing strategies significantly improve the top-k efficiency. In this paper, we study the possibility of adopting additional techniques to further improve top-k computation efficiency. We propose a Proximity-Probe Heuristic to make our top-k algorithms more efficient. We also test the efficiency of our approaches on various settings (linear or non-linear ranking functions, exact or approximate top-k processing, etc.). (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Effective top-k computation with term-proximity support", "paper_id": "WOS:000267170100001"}