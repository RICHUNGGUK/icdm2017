{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "binary_codes"}, {"score": 0.015542316130591, "phrase": "distinctive_bits"}, {"score": 0.012738671347932587, "phrase": "hierarchical_clustering_trees"}, {"score": 0.012594510078927467, "phrase": "hct"}, {"score": 0.011897360851251074, "phrase": "cluster_centers"}, {"score": 0.004443276312972159, "phrase": "hamming_space"}, {"score": 0.004392565073466714, "phrase": "linear_search"}, {"score": 0.004268293864953256, "phrase": "large_scale_datasets"}, {"score": 0.003984141889010296, "phrase": "approximate_nearest_neighbor_search"}, {"score": 0.0034911335714333507, "phrase": "entire_binary_code"}, {"score": 0.0034118234596993836, "phrase": "search_performance"}, {"score": 0.003221316290858497, "phrase": "new_clustering_algorithm"}, {"score": 0.003058944053868522, "phrase": "relative_distances"}, {"score": 0.0025596276616952516, "phrase": "standard_deviation"}, {"score": 0.002444544487772349, "phrase": "new_index"}, {"score": 0.0023889533502525527, "phrase": "compressed_binary_codes"}, {"score": 0.0023480892503414596, "phrase": "hierarchical_decomposition"}, {"score": 0.002321234686549485, "phrase": "binary_spaces"}, {"score": 0.002255431275670053, "phrase": "reference_datasets"}], "paper_keywords": ["binary codes", " approximate nearest neighbor search", " hierarchical clustering index"], "paper_abstract": "Although the distance between binary codes can be computed fast in Hamming space, linear search is not practical for large scale datasets. Therefore attention has been paid to the efficiency of performing approximate nearest neighbor search, in which hierarchical clustering trees (HCT) are widely used. However, HCT select cluster centers randomly and build indexes with the entire binary code, this degrades search performance. In this paper, we first propose a new clustering algorithm, which chooses cluster centers on the basis of relative distances and uses a more homogeneous partition of the dataset than HCT has to build the hierarchical clustering trees. Then, we present an algorithm to compress binary codes by extracting distinctive bits according to the standard deviation of each bit. Consequently, a new index is proposed using compressed binary codes based on hierarchical decomposition of binary spaces. Experiments conducted on reference datasets and a dataset of one billion binary codes demonstrate the effectiveness and efficiency of our method.", "paper_title": "Fast approximate matching of binary codes with distinctive bits", "paper_id": "WOS:000361611300008"}