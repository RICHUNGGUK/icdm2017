{"auto_keywords": [{"score": 0.0480015295510878, "phrase": "timed_rebeca"}, {"score": 0.012671298703416222, "phrase": "real-time_maude"}, {"score": 0.008609457865603111, "phrase": "actor_model"}, {"score": 0.008106186953348827, "phrase": "rebeca"}, {"score": 0.00481495049065317, "phrase": "timed_rebeca_in_real-time_maude"}, {"score": 0.004699916946246509, "phrase": "well-established_and_intuitive_model"}, {"score": 0.004550783060775205, "phrase": "timed_extension"}, {"score": 0.004496080495247288, "phrase": "actor-based_modeling_language"}, {"score": 0.0043358695338488445, "phrase": "rich_verification_toolset"}, {"score": 0.00421520166010848, "phrase": "executable_formal_semantics"}, {"score": 0.0041144374213500715, "phrase": "limited_support"}, {"score": 0.004081385289516914, "phrase": "formal_analysis"}, {"score": 0.003935892934907777, "phrase": "formal_semantics"}, {"score": 0.003601628511550962, "phrase": "state_variables"}, {"score": 0.0029197572138773237, "phrase": "standard_approaches"}, {"score": 0.002826949449085849, "phrase": "rewrite_step"}, {"score": 0.002682370021834353, "phrase": "timed_rebeca_models"}, {"score": 0.0026181517251690606, "phrase": "real-time_maude's_reachability_analysis_tool"}, {"score": 0.002597100785263528, "phrase": "ltl"}, {"score": 0.0025658156672079776, "phrase": "ctl"}, {"score": 0.002494279207996077, "phrase": "formal_model-engineering_methodology"}, {"score": 0.0024345529783611703, "phrase": "intuitive_modeling"}, {"score": 0.002395530243993313, "phrase": "formal_verification"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Real-time actors", " Timed Rebeca", " Formal semantics", " Model checking", " Real-Time Maude"], "paper_abstract": "The actor model is a well-established and intuitive model of distributed computation. Timed Rebeca is a timed extension of the actor-based modeling language Rebeca. Although Rebeca is supported by a rich verification toolset, Timed Rebeca has not had an executable formal semantics, and has therefore had limited support for formal analysis. In this paper, we provide a formal semantics for Timed Rebeca in Real-Time Maude. Our semantics exploits the isolation inherent in the actor model: since no actor can access the state variables of other actors, and since actors execute only one message server at a time, the effect of executing a statement is not observable by other actors. We can therefore \"group together\" a number of statements and execute them in one \"atomic\" rewrite step; this significantly improves the performance of model checking compared to standard approaches where each action is performed by a rewrite step. We have automated the translation from Timed Rebeca to Real-Time Maude, allowing Timed Rebeca models to be automatically analyzed using Real-Time Maude's reachability analysis tool and LTL and timed CTL model checkers. This enables a formal model-engineering methodology which combines the convenience of intuitive modeling in Timed Rebeca with formal verification in Real-Time Maude. We illustrate this methodology and the performance gained by our new \"partial-order-reduction-like\" optimized semantics with a number of case studies, including the IEEE 802.11 RTS/CTS collision avoidance protocol for wireless networks. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Formal semantics and efficient analysis of Timed Rebeca in Real-Time Maude", "paper_id": "WOS:000366230300002"}