{"auto_keywords": [{"score": 0.039881608764155356, "phrase": "logic_programs"}, {"score": 0.00481495049065317, "phrase": "logic_programming._bialgebrae"}, {"score": 0.004698229304089357, "phrase": "abstract_framework"}, {"score": 0.004509919457793852, "phrase": "different_kinds"}, {"score": 0.004436716583179764, "phrase": "computational_models"}, {"score": 0.0041555469216463855, "phrase": "bialgebraic_approach"}, {"score": 0.003988901168289797, "phrase": "logic_programming"}, {"score": 0.0037360045780015804, "phrase": "reactive_systems"}, {"score": 0.0036453427552753533, "phrase": "abstract_techniques"}, {"score": 0.003277140908834426, "phrase": "operational_semantics"}, {"score": 0.002921975748248106, "phrase": "underlying_algebraic_structure"}, {"score": 0.0027365364488693656, "phrase": "resulting_semantics"}, {"score": 0.0023418133729330303, "phrase": "parallel_model"}, {"score": 0.0021751997984619585, "phrase": "built-in_notion"}, {"score": 0.0021049977753042253, "phrase": "different_threads"}], "paper_keywords": ["Logic Programming", " Coalgebrae on presheaves", " Bialgebrae", " Compositionality"], "paper_abstract": "Bialgebrae provide an abstract framework encompassing the semantics of different kinds of computational models. In this paper we propose a bialgebraic approach to the semantics of logic programming. Our methodology is to study logic programs as reactive systems and exploit abstract techniques developed in that setting. First we use saturation to model the operational semantics of logic programs as coalgebrae on presheaves. Then, we make explicit the underlying algebraic structure by using bialgebrae on presheaves. The resulting semantics turns out to be compositional with respect to conjunction and term substitution. Also, it encodes a parallel model of computation, whose soundness is guaranteed by a built-in notion of synchronisation between different threads.", "paper_title": "BIALGEBRAIC SEMANTICS FOR LOGIC PROGRAMMING", "paper_id": "WOS:000353193000018"}