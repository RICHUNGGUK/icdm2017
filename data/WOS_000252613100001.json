{"auto_keywords": [{"score": 0.040460720519068925, "phrase": "bpel."}, {"score": 0.031579189898051085, "phrase": "bpel_code"}, {"score": 0.00481495049065317, "phrase": "unstructured_workflow_processes"}, {"score": 0.0047747348769918, "phrase": "readable_bpel"}, {"score": 0.004502433187097914, "phrase": "de_facto_standard"}, {"score": 0.004281372589330329, "phrase": "web_services"}, {"score": 0.004140036888016244, "phrase": "-organizational_processes"}, {"score": 0.00396988421137599, "phrase": "wide_variety"}, {"score": 0.003936698872193083, "phrase": "process-aware_information_systems"}, {"score": 0.003790751492305239, "phrase": "powerful_language"}, {"score": 0.003759062392024101, "phrase": "bpel"}, {"score": 0.0035444736871640147, "phrase": "trained_eye"}, {"score": 0.00325893016361821, "phrase": "flow_construct"}, {"score": 0.0030857431184193765, "phrase": "right_construct"}, {"score": 0.0030216031606457214, "phrase": "graphical_interface"}, {"score": 0.002921732652917206, "phrase": "graphical_representations"}, {"score": 0.002885135695263876, "phrase": "direct_reflection"}, {"score": 0.0026637384761565605, "phrase": "workflow_nets"}, {"score": 0.0025221012517852907, "phrase": "rich_theory"}, {"score": 0.002500987934534128, "phrase": "petri_nets"}, {"score": 0.0023383128157426106, "phrase": "bpmn"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["BPEL4WS", " Petri nets", " workflow management", " business process management"], "paper_abstract": "The Business Process Execution Language for Web Services (BPEL) has emerged as the de facto standard for implementing processes. Although intended as a language for connecting web services, its application is not limited to cross-organizational processes. It is expected that in the near future a wide variety of process-aware information systems will be realized using BPEL. While being a powerful language, BPEL is difficult to use. Its XML representation is very verbose and only readable for the trained eye. It offers many constructs and typically things can be implemented in many ways, e.g., using links and the flow construct or using sequences and switches. As a result only experienced users are able to select the right construct. Several vendors offer a graphical interface that generates BPEL code. However, the graphical representations are a direct reflection of the BPEL code and not easy to use by end-users. Therefore, we provide a mapping from Workflow Nets (WF-nets) to BPEL. This mapping builds on the rich theory of Petri nets and can also be used to map other languages (e.g., UML, EPC, BPMN, etc.) onto BPEL. In addition to this we have implemented the algorithm in a tool called WorkflowNet2BPEL4WS. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Translating unstructured workflow processes to readable BPEL: Theory and implementation", "paper_id": "WOS:000252613100001"}