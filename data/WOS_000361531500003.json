{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mapreduce"}, {"score": 0.004750558270763879, "phrase": "sparql"}, {"score": 0.0046659637258752535, "phrase": "signature_encoding"}, {"score": 0.004562362497952548, "phrase": "large_numbers"}, {"score": 0.004521566043596533, "phrase": "resource_description_framework_triples"}, {"score": 0.004441059405327222, "phrase": "linked_data"}, {"score": 0.004284302478991387, "phrase": "sparql_query_processing_engines"}, {"score": 0.004208002469225673, "phrase": "single_machine"}, {"score": 0.004114527599108729, "phrase": "scalability_issue"}, {"score": 0.0040777192615062815, "phrase": "mapreduce_framework-based_sparql_engines"}, {"score": 0.0037948184359488284, "phrase": "join_evaluations"}, {"score": 0.003563370084662192, "phrase": "binary_multiplications"}, {"score": 0.0035156341294017685, "phrase": "multiple_mapreduce_jobs"}, {"score": 0.0034529760173586583, "phrase": "costly_disk_accesses"}, {"score": 0.0034220655476652683, "phrase": "mapreduce_jobs"}, {"score": 0.00333097896868937, "phrase": "join-based_approach"}, {"score": 0.0031559919178954644, "phrase": "simultaneous_evaluation"}, {"score": 0.002963390095037466, "phrase": "mapreduce_job"}, {"score": 0.0028844769395018595, "phrase": "complex_query"}, {"score": 0.0026841368358805433, "phrase": "multi-way_join-based_sparql_query_processing"}, {"score": 0.0025660347613972573, "phrase": "sparql_query"}, {"score": 0.00249767641333441, "phrase": "single_mapreduce_job"}, {"score": 0.002262209824105154, "phrase": "previous_approaches"}, {"score": 0.0021723899772112423, "phrase": "query_processing_time"}, {"score": 0.0021049977753042253, "phrase": "existing_mapreduce-based_methods"}], "paper_keywords": ["Hadoop", " MapReduce", " Multi-way join", " Signature encoding", " SigMR", " SPARQL"], "paper_abstract": "Large numbers of Resource Description Framework triples are available in Linked Data which can grow exponentially. It makes SPARQL query processing engines infeasible on a single machine. To address this scalability issue, MapReduce framework-based SPARQL engines have been proposed, but we note that these methods are limited in terms of join evaluations. The two-way join-based approach evaluates joins via a sequence of binary multiplications that require multiple MapReduce jobs, which involves costly disk accesses between MapReduce jobs. The multi-way join-based approach combines multiple two-way join operations, which allows the simultaneous evaluation of joins during one MapReduce job. However, the size of data for the MapReduce job might increase exponentially if a complex query is given. In this study, we propose SigMR, a pruning method for multi-way join-based SPARQL query processing in MapReduce. In the proposed approach, a SPARQL query can be evaluated in a single MapReduce job, where the size of data is reduced dramatically by pruning based on our signature encoding technique, thereby overcoming the weaknesses of the previous approaches. In experiments, we showed that the query processing time required was lower with our approach than existing MapReduce-based methods.", "paper_title": "SigMR: MapReduce-based SPARQL query processing by signature encoding and multi-way join", "paper_id": "WOS:000361531500003"}