{"auto_keywords": [{"score": 0.03935512626074735, "phrase": "assistance_policy_module"}, {"score": 0.010220605346989467, "phrase": "different_implementations"}, {"score": 0.0047152877145889656, "phrase": "haptic_assistants"}, {"score": 0.004666228956744244, "phrase": "user_commands"}, {"score": 0.004498490110526062, "phrase": "task_performance"}, {"score": 0.004246947739596565, "phrase": "assistance_level"}, {"score": 0.004115697805448384, "phrase": "main_design_factors"}, {"score": 0.004051595625804513, "phrase": "existing_implementations"}, {"score": 0.003988487841970088, "phrase": "fixed_assistance_levels"}, {"score": 0.0036680857629458785, "phrase": "assistance_levels"}, {"score": 0.0035920758080335655, "phrase": "multiple_performance_measures"}, {"score": 0.0035361001070845677, "phrase": "design_space"}, {"score": 0.0032861588691414667, "phrase": "performance_criteria"}, {"score": 0.0029438813080245544, "phrase": "virtual_fixtures"}, {"score": 0.002897977113538355, "phrase": "single-user_evaluation"}, {"score": 0.0027213882346615406, "phrase": "determined_assistance_levels"}, {"score": 0.0026649432435828842, "phrase": "multi-user_study"}, {"score": 0.0026096659285441384, "phrase": "statistical_comparison"}, {"score": 0.0025156683465194967, "phrase": "adaptive_assistance_policies"}, {"score": 0.002476424729269258, "phrase": "constant_assistance_policies"}, {"score": 0.0024377918036784336, "phrase": "assistance_policies"}, {"score": 0.0023254633298356894, "phrase": "multi-criteria_performance_measure"}, {"score": 0.0022299587520401747, "phrase": "single_criterion"}, {"score": 0.002183684303511462, "phrase": "outstanding_priority"}, {"score": 0.0021049977753042253, "phrase": "performance_reference"}], "paper_keywords": ["Shared control", " haptic guidance", " assistance level"], "paper_abstract": "Haptic assistants augment user commands to facilitate manipulation and to increase task performance. The strength of assistance, also referred to as assistance level, is one of the main design factors. While existing implementations mainly realize fixed assistance levels that are selected with respect to one design objective, we introduce an assistance policy module that dynamically changes assistance levels and can incorporate multiple performance measures. The design space of this assistance policy module is systematically analyzed and three design factors, 1) performance criteria, 2) performance reference, and 3) assistance policy, are identified. Different implementations of the assistance policy module are compared for a scenario involving guiding virtual fixtures. A single-user evaluation is used to illustrate the effect of the different implementations on the determined assistance levels, and a multi-user study allows for a statistical comparison of them. Results show that adaptive assistance policies can outperform constant assistance policies, switching assistance policies have advantages over continuously adapting policies, a multi-criteria performance measure should be favored if there is no single criterion that has an outstanding priority, and the selection of the performance reference is highly application dependent.", "paper_title": "Exploring the Design Space of Haptic Assistants: The Assistance Policy Module", "paper_id": "WOS:000328641500007"}