{"auto_keywords": [{"score": 0.04521179910456936, "phrase": "source_code"}, {"score": 0.009145130167457431, "phrase": "software_engineering"}, {"score": 0.007133338389205137, "phrase": "bug_detection"}, {"score": 0.00481495049065317, "phrase": "source_code_mining_tools"}, {"score": 0.0046797114400479135, "phrase": "program_source_code"}, {"score": 0.004580769304731227, "phrase": "semantically_rich_programming_constructs"}, {"score": 0.004467965784278827, "phrase": "data_structures"}, {"score": 0.004420472010542188, "phrase": "program_structures"}, {"score": 0.0042809854543795255, "phrase": "different_data_mining_techniques"}, {"score": 0.004220406575749275, "phrase": "valuable_hidden_patterns"}, {"score": 0.004175533280178052, "phrase": "new_revolution"}, {"score": 0.003944112858235306, "phrase": "pertinent_information"}, {"score": 0.0038060092376105414, "phrase": "particular_characteristic"}, {"score": 0.003633652174971415, "phrase": "wide_range"}, {"score": 0.003607834976869384, "phrase": "research_body"}, {"score": 0.003531474887552889, "phrase": "comprehensive_overview"}, {"score": 0.00335950642866031, "phrase": "data_mining_methods"}, {"score": 0.0031845067058084583, "phrase": "program_understanding"}, {"score": 0.003161870571621082, "phrase": "software_reuse"}, {"score": 0.003051073364818384, "phrase": "current_state-of-the-art_source_code_mining_tools"}, {"score": 0.002912803994461996, "phrase": "coherent_conceptual_way"}, {"score": 0.0028207566216121856, "phrase": "concise_overview"}, {"score": 0.0028006988338192375, "phrase": "source_code_mining_techniques"}, {"score": 0.0027316100642958544, "phrase": "appropriate_techniques"}, {"score": 0.002635850034826311, "phrase": "existing_studies"}, {"score": 0.0025434384320561403, "phrase": "special_kind"}, {"score": 0.002445514186654732, "phrase": "multiple_tools"}, {"score": 0.0024022553322977165, "phrase": "potential_information"}, {"score": 0.0022770057597574734, "phrase": "strong_need"}, {"score": 0.002220806891955454, "phrase": "quality_software"}, {"score": 0.0021893168527276105, "phrase": "different_kind"}, {"score": 0.002150580119047236, "phrase": "relevant_api_code"}, {"score": 0.0021049977753042253, "phrase": "overall_software_development_time"}], "paper_keywords": ["Source code mining", " data mining", " patterns", " programming rule", " copy-paste code", " bug detection", " API usage"], "paper_abstract": "Program source code substantially is structured and contains semantically rich programming constructs such as variables, functions, data structures, and program structures which indicate patterns. Mining source code by using different data mining techniques to extract the valuable hidden patterns is the new revolution in software engineering. Over last decade many tools and techniques have been proposed by researcher to extract pertinent information and uncover relationships and trends from source code about a particular characteristic of Software Engineering (SE) tasks. These efforts have resulted in wide range of research body but currently there is no comprehensive overview exists. This paper surveys the tools and techniques which rely only on data mining methods to determine patterns from source code in context of programming, bug detection, maintenance, program understanding and software reuse. The work provides comparison and evaluation of the current state-of-the-art source code mining tools and techniques, and organizes the large amount of information into a coherent conceptual way. Thus the survey provides researchers with a concise overview of source code mining techniques and assists practitioners the selection of appropriate techniques for their work. The result of this review shows existing studies focus on one specific pattern being mined from source code such as special kind of bug detection. Thus, there is a need of multiple tools to test and find potential information from software which increase cost and time of development. Hence there is a strong need of tool which helps in developing quality software by automatically detecting different kind of bugs and generates relevant API code automatically to help in decreasing overall software development time.", "paper_title": "Comparison and evaluation of source code mining tools and techniques: A qualitative approach", "paper_id": "WOS:000319345400007"}