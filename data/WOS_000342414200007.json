{"auto_keywords": [{"score": 0.04133491510042038, "phrase": "chen"}, {"score": 0.00481495049065317, "phrase": "constrained_lcs_problem"}, {"score": 0.004753194996637899, "phrase": "strings_exclusion"}, {"score": 0.004484908028307205, "phrase": "recent_variant"}, {"score": 0.004398872331144531, "phrase": "longest_common_subsequence"}, {"score": 0.004229974351918019, "phrase": "chao"}, {"score": 0.0033752674784204412, "phrase": "constraint_string"}, {"score": 0.0032051601987130207, "phrase": "common_subsequence"}, {"score": 0.0026916956768363158, "phrase": "previously_proposed_algorithm"}, {"score": 0.0025725382476862305, "phrase": "correct_algorithm"}, {"score": 0.002380381895973937, "phrase": "str-ec-lcs_problem"}, {"score": 0.0022749744354271816, "phrase": "polynomial-time_algorithm"}, {"score": 0.0021049977753042253, "phrase": "previous_claim"}], "paper_keywords": ["Design of algorithms", " Longest common subsequence", " Constrained LCS", " NP-hard", " Finite automata"], "paper_abstract": "In this paper, we revisit a recent variant of the longest common subsequence (LCS) problem, the string-excluding constrained LCS (STR-EC-LCS) problem, which was first addressed by Chen and Chao (J Comb Optim 21(3):383-392, 2011). Given two sequences and of lengths and respectively, and a constraint string of length we are to find a common subsequence of and which excludes as a substring and the length of is maximized. In fact, this problem cannot be correctly solved by the previously proposed algorithm. Thus, we give a correct algorithm with time to solve it. Then, we revisit the STR-EC-LCS problem with multiple constraints We propose a polynomial-time algorithm which runs in time, where and thus it overthrows the previous claim of NP-hardness.", "paper_title": "Efficient polynomial-time algorithms for the constrained LCS problem with strings exclusion", "paper_id": "WOS:000342414200007"}