{"auto_keywords": [{"score": 0.03954948965131843, "phrase": "innovation_episodes"}, {"score": 0.03747627866976931, "phrase": "mailing_list_archives"}, {"score": 0.0364213815815161, "phrase": "direct_participation"}, {"score": 0.00481495049065317, "phrase": "research_method"}, {"score": 0.004767826806287385, "phrase": "oss_process_innovation"}, {"score": 0.004568871736067739, "phrase": "routine_basis"}, {"score": 0.0043495571869907376, "phrase": "process_improvement_proposal"}, {"score": 0.004278807087784626, "phrase": "process_innovation"}, {"score": 0.004181678027929924, "phrase": "effective_and_feasible_qualitative_research_method"}, {"score": 0.004007083686875716, "phrase": "case_study"}, {"score": 0.003789678137602989, "phrase": "suitable_data"}, {"score": 0.003479692058963528, "phrase": "data_analysis_methodology"}, {"score": 0.003423042581201533, "phrase": "rather_rich_data"}, {"score": 0.0033233797886807375, "phrase": "sufficiently_large_number"}, {"score": 0.0032800186243040663, "phrase": "polling_developers"}, {"score": 0.0028952071490475997, "phrase": "grounded_theory_method"}, {"score": 0.0028762499230524812, "phrase": "suitable_adjustments"}, {"score": 0.0027289810731258865, "phrase": "oss_development_processes"}, {"score": 0.002640781900605126, "phrase": "specific_details"}, {"score": 0.0024405312482831646, "phrase": "qualitative_research"}, {"score": 0.002377206033025253, "phrase": "survey_approaches"}, {"score": 0.0023079355901657068, "phrase": "oss"}, {"score": 0.0022041312401435346, "phrase": "passive_observation"}, {"score": 0.0021825034787117986, "phrase": "viable_alternative"}, {"score": 0.0021610874773389096, "phrase": "oss_context"}, {"score": 0.0021188825171510094, "phrase": "large_amounts"}, {"score": 0.0021049977753042253, "phrase": "fairly_complete_archival_data"}], "paper_keywords": ["Open Source", " Methodology", " Innovation introduction"], "paper_abstract": "Medium-sized, open-participation Open Source Software (OSS) projects do not usually perform explicit software process improvement on any routine basis. It would be useful to understand how to get such a project to accept a process improvement proposal and hence to perform process innovation. We want to determine an effective and feasible qualitative research method for studying the above question. We present (narratively) a case study of how we worked towards and eventually found such a research method. The case involves four attempts at collecting suitable data about innovation episodes (direct participation (twice), polling developers for episodes, manually finding episodes in mailing list archives) and the adaptation of the Grounded Theory data analysis methodology. Direct participation allows gathering rather rich data, but does not allow for observing a sufficiently large number of innovation episodes. Polling developers for episodes did not prove to be useful. Using mailing list archives to find data to be analyzed is both feasible and effective. We also describe how the data thus found can be analyzed based on the Grounded Theory Method with suitable adjustments. By-and-large, our findings ought to apply to studying various phenomena in OSS development processes that are similarly heavyweight and infrequent. However, specific details may block this possibility and we cannot predict which details that might be. The amount of effort involved in direct participation approaches to qualitative research can easily be underestimated. Also, survey approaches are not well-suited for many process issues in OSS, because too few developers are sufficiently process-conscious. An approach based on passive observation is a viable alternative in the OSS context due to the availability of large amounts of fairly complete archival data.", "paper_title": "The search for a research method for studying OSS process innovation", "paper_id": "WOS:000291746700005"}