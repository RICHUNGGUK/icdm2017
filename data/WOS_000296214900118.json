{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_patterns"}, {"score": 0.03573249625593098, "phrase": "partially-ordered_trees"}, {"score": 0.004707188147442449, "phrase": "xml_data"}, {"score": 0.0046018264570209765, "phrase": "efficient_algorithms"}, {"score": 0.004498812433096501, "phrase": "design_trade-offs"}, {"score": 0.0038392331564122387, "phrase": "semistructured_documents"}, {"score": 0.0036691380448651443, "phrase": "de_facto_standard"}, {"score": 0.0031308163228919773, "phrase": "efficient_data_mining_techniques"}, {"score": 0.0028271058251633815, "phrase": "scalable_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["XML documents", " Data mining", " Frequent patterns", " Partially-ordered trees", " Induced and embedded subtrees"], "paper_abstract": "XML documents are now ubiquitous and their current applications are countless, from representing semistructured documents to being the de facto standard for exchanging information. Viewed as partially-ordered trees, XML documents are amenable to efficient data mining techniques. In this paper, we describe how scalable algorithms can be used to mine frequent patterns from partially-ordered trees and discuss the trade-offs that are involved in the design of such algorithms. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Mining frequent patterns from XML data: Efficient algorithms and design trade-offs", "paper_id": "WOS:000296214900118"}