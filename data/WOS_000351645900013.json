{"auto_keywords": [{"score": 0.04953205665809609, "phrase": "pafmpb"}, {"score": 0.0373933536125977, "phrase": "previous_version"}, {"score": 0.015327569951349701, "phrase": "fast_calculation"}, {"score": 0.012823551699009658, "phrase": "distributed_program"}, {"score": 0.012774916308798123, "phrase": "test_data"}, {"score": 0.010792426161372597, "phrase": "vcmm"}, {"score": 0.010000767368476153, "phrase": "new_version"}, {"score": 0.00982448005917777, "phrase": "linearized_poisson-boltzmann_equation"}, {"score": 0.00894256185936659, "phrase": "cilk_runtime"}, {"score": 0.00481495049065317, "phrase": "automatic_surface"}, {"score": 0.004784307655577981, "phrase": "molecular_solvation_free_energy"}, {"score": 0.004705541554867117, "phrase": "afmpb_software_package"}, {"score": 0.0046815664844288805, "phrase": "molecular_solvation-free_energy"}, {"score": 0.004448403057836525, "phrase": "mesh_file"}, {"score": 0.0043695573898782925, "phrase": "total_solvation-free_energy"}, {"score": 0.004347286705622421, "phrase": "pb_electrostatic_and_nonpolar_interaction_contributions"}, {"score": 0.00430308381583602, "phrase": "fortran_programming_languages"}, {"score": 0.004259328455043529, "phrase": "computing_power"}, {"score": 0.004237617192512752, "phrase": "vector_processing"}, {"score": 0.004226802921421166, "phrase": "computational_experiments"}, {"score": 0.004210633019726059, "phrase": "successful_application"}, {"score": 0.00416781379811521, "phrase": "pb_potential"}, {"score": 0.004151868622124002, "phrase": "dengue_virus_system"}, {"score": 0.004095068685641938, "phrase": "program"}, {"score": 0.004078257344525948, "phrase": "parallel_afmpb_catalogue"}, {"score": 0.004016197408626693, "phrase": "cpc_program_library"}, {"score": 0.004005945920917089, "phrase": "queen's_university"}, {"score": 0.003995720792493624, "phrase": "belfast"}, {"score": 0.003985521066707147, "phrase": "n._ireland"}, {"score": 0.00396519993677195, "phrase": "gnu_general_public_license"}, {"score": 0.003791735430897333, "phrase": "tar.gz_programming_language"}, {"score": 0.00376763383998285, "phrase": "fortran"}, {"score": 0.0037483882725171786, "phrase": "intel"}, {"score": 0.0037388008567148423, "phrase": "gnu"}, {"score": 0.0037292492375877013, "phrase": "cilk_plus"}, {"score": 0.003663103302234187, "phrase": "multicore_architectures"}, {"score": 0.003639805260831015, "phrase": "linux"}, {"score": 0.0035935293424646684, "phrase": "discretized_biomolecular_system"}, {"score": 0.0034274948804751968, "phrase": "msms"}, {"score": 0.0033623777699996545, "phrase": "input_data"}, {"score": 0.0033281558861656428, "phrase": "embedded_automatic_mesh_generation_tool"}, {"score": 0.0033069437212416685, "phrase": "post-processing_tools"}, {"score": 0.003174366981084002, "phrase": "krylov"}, {"score": 0.0031581425246340286, "phrase": "sparskit"}, {"score": 0.003146047934466666, "phrase": "yousef_saad"}, {"score": 0.0029853093935633458, "phrase": "electrostatic_interactions"}, {"score": 0.0029776814174268086, "phrase": "molecular_systems"}, {"score": 0.0029700728740116806, "phrase": "ionic_solutions"}, {"score": 0.0029285710522449476, "phrase": "boundary_integral_equation"}, {"score": 0.0029024623766293815, "phrase": "node-patch_scheme"}, {"score": 0.002891344112645943, "phrase": "resulting_linear_system"}, {"score": 0.0028765857924703472, "phrase": "krylov_subspace_solvers"}, {"score": 0.0028400177885084255, "phrase": "upper_bound"}, {"score": 0.002796747562201466, "phrase": "matrix-vector_multiplication"}, {"score": 0.0027789129108297533, "phrase": "adaptive_plane-wave_expansion"}, {"score": 0.002705237544862042, "phrase": "new_functions"}, {"score": 0.0026811145689794582, "phrase": "force_calculations"}, {"score": 0.0025933782416081965, "phrase": "automatic_mesh_generation_method"}, {"score": 0.002586761824857068, "phrase": "bem"}, {"score": 0.00253756647410847, "phrase": "linux_operating_system"}, {"score": 0.0024861326964405505, "phrase": "intel_compiler"}, {"score": 0.0024734375707325985, "phrase": "gnu_cilk_plus"}, {"score": 0.002429511729766249, "phrase": "running_time"}, {"score": 0.002410925403744224, "phrase": "discretized_elements"}, {"score": 0.0022788911398415467, "phrase": "s._bai"}, {"score": 0.002273064067965752, "phrase": "b._lu"}, {"score": 0.002249904061708113, "phrase": "continuum_molecular_modeling"}, {"score": 0.002244150942405104, "phrase": "j._mol"}, {"score": 0.0021958383056392685, "phrase": "f._michel"}, {"score": 0.002190226556399942, "phrase": "olson"}, {"score": 0.0021846222854844857, "phrase": "j._arthur"}, {"score": 0.002179035730444826, "phrase": "spehner"}, {"score": 0.002173463430325107, "phrase": "j._claude"}, {"score": 0.0021458144892021907, "phrase": "molecular_surfaces"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Poisson-Boltzmann equation", " Boundary integral equation", " Automatic surface meshing", " Solvation free energy", " Fast multipole methods", " Parallelization", " Cilk Plus"], "paper_abstract": "We present PAFMPB, an updated and parallel version of the AFMPB software package for fast calculation of molecular solvation-free energy. The new version has the following new features: (1) The adaptive fast multipole method and the boundary element methods are parallelized; (2) A tool is embedded for automatic molecular VDW/SAS surface mesh generation, leaving the requirement for a mesh file at input optional; (3) The package provides fast calculation of the total solvation-free energy, including the PB electrostatic and nonpolar interaction contributions. PAFMPB is implemented in C and Fortran programming languages, with the Cilk Plus extension to harness the computing power of both multicore and vector processing. Computational experiments demonstrate the successful application of PAFMPB to the calculation of the PB potential on a dengue virus system with more than one million atoms and a mesh with approximately 20 million triangles. Program summary Program title: Parallel AFMPB Catalogue identifier: AEGB_v2_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaties/AEGB_v2_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public License, version 2 No. of lines in distributed program, including test data, etc.: 40558 No. of bytes in distributed program, including test data, etc.: 2349976 Distribution format: tar.gz Programming language: Mixed C and Fortran, Compiler: Intel or GNU with Cilk Plus enabled. Computer: Any, but the code is mainly designed for multicore architectures. Operating system: Linux. RAM: Depends on the size of the discretized biomolecular system. Classification: 3. Catalogue identifier of previous version: AEGB_v1_1 Journal reference of previous version: Comput. Phys. Comm. 184 (2013) 2618 External routines: Users are allowed to use external routines/libraries (e.g., MSMS [6] and TMSMesh [4]) to generate compatible surface mesh input data if they choose not to use the embedded automatic mesh generation tool in the package. Post-processing tools such as VCMM [5] and VMD [3] can also be used for visualization and analyzing results. The package uses two subprograms: (1) The iterative Krylov subspace solver, SPARSKIT, from Yousef Saad [2]; and (2) Cilk-based parallel fast multipole methods from FMMSuite [1]. Does the new version supersede the previous version? Yes Nature of problem: Numerical solution of the linearized Poisson-Boltzmann equation that describes electrostatic interactions of molecular systems in ionic solutions. Solution method: The linearized Poisson-Boltzmann equation is reformulated as a boundary integral equation and is subsequently discretized using the node-patch scheme. The resulting linear system is solved using Krylov subspace solvers iteratively. The reformulation of the equation provides an upper bound for the number of iterations. Within each iteration, the matrix-vector multiplication is accelerated using the adaptive plane-wave expansion based fast multipole methods. The majority of the codes are parallelized using the Cilk runtime. Reasons for new version: New functions are added and a few old functions like force calculations are removed. The algorithm is parallelized and most parts of the code are rewritten. Summary of revisions: The computation is parallelized and an automatic mesh generation method for BEM is added. Restrictions: The program has only been tested on machines running Linux operating system. Additional comments: The Cilk runtime used in the development and testing is from the Intel compiler Suite. The GNU Cilk Plus and Cilk Plus/LLVM branches have not been tested. Running time: The running time depends on the number of discretized elements (N) and their distribution. It also depends on the number of cores used in the computation. References: [1] http://www.fastmultipole.org/. [2] http://www-users.cs.umn.edu/-saad/software/. [3] http://www.ks.uiuc.edu/Research/vmd/. [4] http://www.continuummodel.org. [5] S. Bai, B. Lu, VCMM: A visual tool for continuum molecular modeling. J. Mol. Graph. Model. 50 (2014) 44-49. [6] Scanner, F. Michel, Olson, J. Arthur, Spehner, J. Claude, Reduced surface: An efficient way to compute molecular surfaces. Biopolymers 38 (1996) 305-320. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Parallel AFMPB solver with automatic surface meshing for calculation of molecular solvation free energy", "paper_id": "WOS:000351645900013"}