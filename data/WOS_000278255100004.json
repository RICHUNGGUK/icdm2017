{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "conceptual_schemas"}, {"score": 0.015160937976333276, "phrase": "cstl"}, {"score": 0.004707913053935566, "phrase": "information_systems"}, {"score": 0.004400804926266097, "phrase": "important_and_practical_means"}, {"score": 0.004160177106153782, "phrase": "five_kinds"}, {"score": 0.0036966717141736355, "phrase": "behavioral_parts"}, {"score": 0.0034359094594153304, "phrase": "incomplete_schema_fragments"}, {"score": 0.003266201217790818, "phrase": "relationship_types"}, {"score": 0.0032296377835432533, "phrase": "integrity_constraints"}, {"score": 0.00319348234663792, "phrase": "derivation_rules"}, {"score": 0.003018668521745676, "phrase": "automated_tests"}, {"score": 0.002984867789900281, "phrase": "executable_schemas"}, {"score": 0.0029020077365708966, "phrase": "language_primitives"}, {"score": 0.00266693888510356, "phrase": "modern_xunit_testing_frameworks"}, {"score": 0.0025928815987676535, "phrase": "prototype_implementation"}, {"score": 0.0025494354909453847, "phrase": "test_processor"}, {"score": 0.0024786330057813225, "phrase": "test_manager"}, {"score": 0.0024370965602952496, "phrase": "test_interpreter"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Conceptual modeling", " Testing", " Requirements validation", " UML/OCL"], "paper_abstract": "Conceptual schemas of information systems can be tested. The testing of conceptual schemas may be an important and practical means for their validation. We present a list of five kinds of tests that can be applied to conceptual schemas. Two of them require schemas comprising both the structural and the behavioral parts, but we show that it is possible and useful to test incomplete schema fragments, even if they consist of only a few entity and relationship types, integrity constraints and derivation rules. We present CSTL, a language for writing automated tests of executable schemas written in UML/OCL. CSTL includes language primitives for each of the above kinds of tests. CSTL follows the style of the modern xUnit testing frameworks. We describe a prototype implementation of a test processor, which includes a test manager and a test interpreter that coordinates the execution of the tests. Tests written in CSTL can be executed as many times as needed. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "An approach to testing conceptual schemas", "paper_id": "WOS:000278255100004"}