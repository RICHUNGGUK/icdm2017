{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "disjunctive_logic_programming"}, {"score": 0.004533142516832776, "phrase": "mature_formalism"}, {"score": 0.004267757384195032, "phrase": "practical_problems"}, {"score": 0.004165987300206134, "phrase": "information_integration"}, {"score": 0.004116012194714212, "phrase": "knowledge_representation"}, {"score": 0.0038516336597530614, "phrase": "current_dlp_systems"}, {"score": 0.003496994062890991, "phrase": "industrial_applications"}, {"score": 0.003332072426367186, "phrase": "new_predefined_constructs"}, {"score": 0.0030251262102203385, "phrase": "wide_literature"}, {"score": 0.0029887957779347394, "phrase": "modular_logic_programming"}, {"score": 0.00291743479583421, "phrase": "code_reusability"}, {"score": 0.002796616969627065, "phrase": "critical_point"}, {"score": 0.002600995957987461, "phrase": "stable_model_semantics"}, {"score": 0.002508365161206412, "phrase": "\"template\"_predicates"}, {"score": 0.0024632912250657636, "phrase": "template_predicate"}, {"score": 0.002304824112812496, "phrase": "template_atoms"}, {"score": 0.002222717552124615, "phrase": "reusable_modules"}, {"score": 0.002169607777109061, "phrase": "new_constructs"}, {"score": 0.0021049977753042253, "phrase": "syntactic_limitation"}], "paper_keywords": ["Disjunctive Logic Programming", " Modular Logic Programming", " Knowledge Representation"], "paper_abstract": "Disjunctive Logic Programming is nowadays a mature formalism which has been successfully applied to a variety of practical problems, such as information integration, knowledge representation, planning, diagnosis, optimization and configuration. Although current DLP systems have been extended in many directions, they still miss features which may be helpful towards industrial applications, like the capability of quickly introducing new predefined constructs or of dealing with modules. Indeed, in spite of the fact that a wide literature about modular logic programming is known, code reusability has never been considered as a critical point in Disjunctive Logic Programming. In this work we extend Disjunctive Logic Programming, under stable model semantics, with the notion of \"template\" predicates. A template predicate may be instantiated to an ordinary predicate by means of template atoms, thus allowing to define reusable modules, to define new constructs and aggregates without any syntactic limitation.", "paper_title": "Template programs for disjunctive logic programming: An operational semantics", "paper_id": "WOS:000240601100001"}