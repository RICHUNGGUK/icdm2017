{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stochastic_shortest-path_problems"}, {"score": 0.040380622955874294, "phrase": "random_costs"}, {"score": 0.00471071771178029, "phrase": "pert_activity_networks"}, {"score": 0.004292212137716459, "phrase": "negative_cost_cycles"}, {"score": 0.004085856939524333, "phrase": "existing_frameworks"}, {"score": 0.003997343989408636, "phrase": "input_problem_sizes"}, {"score": 0.003910740988145338, "phrase": "computational_tractability"}, {"score": 0.003743102131902864, "phrase": "upper_bounds"}, {"score": 0.003466780226380516, "phrase": "optimal_solution"}, {"score": 0.0034102660898135155, "phrase": "deterministic_shortest-path_problem"}, {"score": 0.0031770876611291665, "phrase": "np"}, {"score": 0.0030562674358159945, "phrase": "nearly_all_edges"}, {"score": 0.00294122712771669, "phrase": "computational_results"}, {"score": 0.0028932554846476718, "phrase": "sparse_networks"}, {"score": 0.002861709461657798, "phrase": "psplib"}, {"score": 0.002709045632654716, "phrase": "technique_library"}, {"score": 0.002679501909303057, "phrase": "kolisch"}, {"score": 0.002650684509807128, "phrase": "r."}, {"score": 0.0026213749921120623, "phrase": "a._sprecher"}, {"score": 0.0021994343316143125, "phrase": "psplib_instances"}, {"score": 0.0021049977753042253, "phrase": "dense_instances"}], "paper_keywords": ["preprocessing", " stochastic optimization", " shortest path", " PERT", " integer programming", " activity network"], "paper_abstract": "We present an algorithm for preprocessing a class of stochastic shortest-path problems on networks that have no negative cost cycles, almost surely. Our method adds utility to existing frameworks by significantly reducing input problem sizes and thereby increasing computational tractability. Given random costs with finite lower and upper bounds on each edge, our algorithm removes edges that cannot be in any optimal solution to the deterministic shortest-path problem, for any realization of the random costs. Although this problem is NP-complete, our algorithm efficiently preprocesses nearly all edges in a given network. We provide computational results both on sparse networks from PSPLIB-a well-known project evaluation and review technique library [Kolisch, R., A. Sprecher. 1996. PSPLIB-A project scheduling problem library. Eur. J. Oper. Res. 96(1) 205-216]-and dense synthetic ones: on average, less than 0.1% of the edges in the PSPLIB instances and 0.5% of the edges in the dense instances remain unclassified after preprocessing.", "paper_title": "Preprocessing Stochastic Shortest-Path Problems with Application to PERT Activity Networks", "paper_id": "WOS:000293387500011"}