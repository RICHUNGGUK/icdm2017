{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "user-specific_hybrid_recommender_systems"}, {"score": 0.004555028829645471, "phrase": "multiple_recommendation_algorithms"}, {"score": 0.004471530397729526, "phrase": "user-specific_hybrid_scenario"}, {"score": 0.004256243266481051, "phrase": "self-learning_hybrid_configurations"}, {"score": 0.0037854112749311844, "phrase": "real-world_requirements"}, {"score": 0.0035808664384880213, "phrase": "self-learning_user-specific_hybrid_recommender_system"}, {"score": 0.0033664873319204027, "phrase": "pre-defined_requirements"}, {"score": 0.0033047037762521984, "phrase": "online_recommendation_scenarios"}, {"score": 0.0030123335878664064, "phrase": "client-server_architectural_design"}, {"score": 0.0028494425496120228, "phrase": "multiple_computing_nodes"}, {"score": 0.0027457584014804574, "phrase": "specific_user-interface"}, {"score": 0.0026953359825383624, "phrase": "movie_recommendation_scenario"}, {"score": 0.0026133424923929227, "phrase": "system_transparency"}, {"score": 0.0025812459787060097, "phrase": "user_control_possibilities"}, {"score": 0.002471973283582411, "phrase": "hybrid_recommendation_process"}, {"score": 0.002323826502178581, "phrase": "weak_and_strong_scaling_scenarios"}, {"score": 0.002281134611390528, "phrase": "high_performance_computing_environment"}, {"score": 0.0021311850321045767, "phrase": "slowest_integrated_recommendation_algorithm"}], "paper_keywords": ["Recommender systems", " Hybrid", " Optimization", " Online", " MovieTweetings", " User-interface", " HPC"], "paper_abstract": "User-specific hybrid recommender systems aim at harnessing the power of multiple recommendation algorithms in a user-specific hybrid scenario. While research has previously focused on self-learning hybrid configurations, such systems are often too complex to take out of the lab and are seldom tested against real-world requirements. In this work, we describe a self-learning user-specific hybrid recommender system and assess its ability towards meeting a set of pre-defined requirements relevant to online recommendation scenarios: responsiveness, scalability, system transparency and user control. By integrating a client-server architectural design, the system was able to scale across multiple computing nodes in a very flexible way. A specific user-interface for a movie recommendation scenario is proposed to illustrate system transparency and user control possibilities, which integrate directly in the hybrid recommendation process. Finally, experiments were performed focusing both on weak and strong scaling scenarios on a high performance computing environment. Results showed performance to be limited only by the slowest integrated recommendation algorithm with very limited hybrid optimization overhead.", "paper_title": "Online optimization for user-specific hybrid recommender systems", "paper_id": "WOS:000365446600016"}