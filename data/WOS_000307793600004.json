{"auto_keywords": [{"score": 0.034421077210550224, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "component_evolution_management"}, {"score": 0.00471465954562773, "phrase": "component-based_software_platforms"}, {"score": 0.004592214823540993, "phrase": "rapid_evolution"}, {"score": 0.004544127927346964, "phrase": "software_components"}, {"score": 0.004496542293425754, "phrase": "component_dependencies"}, {"score": 0.0043797373807446015, "phrase": "package_managers"}, {"score": 0.00433386573276633, "phrase": "dependency_solving_capabilities"}, {"score": 0.004265953661191515, "phrase": "key_ingredients"}, {"score": 0.0042212686864468805, "phrase": "prevalent_software_maintenance_technologies"}, {"score": 0.004068510313497539, "phrase": "software_installations"}, {"score": 0.0040047396607954325, "phrase": "evolving_component_repositories"}, {"score": 0.00392125815948488, "phrase": "state-of-the-art_package_managers"}, {"score": 0.0037005154613244363, "phrase": "current_growth_rate"}, {"score": 0.0036617315529835497, "phrase": "popular_component-based_platforms"}, {"score": 0.0032954888655173666, "phrase": "underlying_upgrade_planning_problem"}, {"score": 0.0031761255583359726, "phrase": "seemingly_simple_component_models"}, {"score": 0.0030772505522663612, "phrase": "principal_source"}, {"score": 0.0029972030224205506, "phrase": "multiple_available_versions"}, {"score": 0.0028432828877281388, "phrase": "expressive_languages"}, {"score": 0.002813457986293993, "phrase": "user_preferences"}, {"score": 0.0025586903829811296, "phrase": "separate_concern"}, {"score": 0.0024833040140210525, "phrase": "cudf"}, {"score": 0.0024017638230939514, "phrase": "upgrade_scenarios"}, {"score": 0.0023025177990160487, "phrase": "international_dependency"}, {"score": 0.0021957487795963666, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Component", " Dependency solving", " Software evolution", " Package management", " Open source", " Competition"], "paper_abstract": "Maintenance of component-based software platforms often has to face rapid evolution of software components. Component dependencies, conflicts, and package managers with dependency solving capabilities are the key ingredients of prevalent software maintenance technologies that have been proposed to keep software installations synchronized with evolving component repositories. We review state-of-the-art package managers and their ability to keep up with evolution at the current growth rate of popular component-based platforms, and conclude that their dependency solving abilities are not up to the task. We show that the complexity of the underlying upgrade planning problem is NP-complete even for seemingly simple component models, and argue that the principal source of complexity lies in multiple available versions of components. We then discuss the need of expressive languages for user preferences, which makes the problem even more challenging. We propose to establish dependency solving as a separate concern from other upgrade aspects, and present CUDF as a formalism to describe upgrade scenarios. By analyzing the result of an international dependency solving competition, we provide evidence that the proposed approach is viable. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Dependency solving: A separate concern in component evolution management", "paper_id": "WOS:000307793600004"}