{"auto_keywords": [{"score": 0.04968898347890437, "phrase": "schedule_requests"}, {"score": 0.013260761715833827, "phrase": "isp-side_gateway"}, {"score": 0.009659165493616015, "phrase": "high-class_users"}, {"score": 0.008274194333597731, "phrase": "msf-rs"}, {"score": 0.007847129812490283, "phrase": "user-perceived_latency"}, {"score": 0.00481495049065317, "phrase": "fair_queuing_discipline"}, {"score": 0.004736820055728928, "phrase": "access_gateway"}, {"score": 0.004698229304089357, "phrase": "downlink_differential_qos._scheduling_packets"}, {"score": 0.004491506786670695, "phrase": "bottleneck_link"}, {"score": 0.004258843584164121, "phrase": "downlink_bandwidth"}, {"score": 0.004206879557938045, "phrase": "user-side_access_gateway"}, {"score": 0.003782174375003052, "phrase": "user-side_gateway"}, {"score": 0.003456359260921982, "phrase": "class-based_fair_queuing_discipline"}, {"score": 0.003331275574328097, "phrase": "scheduling_packets"}, {"score": 0.0028627183712016894, "phrase": "minimum-service_first_request_scheduling"}, {"score": 0.0027253441561528495, "phrase": "next_request"}, {"score": 0.002659142621852998, "phrase": "minimum_service"}, {"score": 0.002626645763725465, "phrase": "user-based_weighted_fairness"}, {"score": 0.0024903420152789135, "phrase": "window-based_rate_control"}, {"score": 0.0024298350266697905, "phrase": "full_link_utilization"}, {"score": 0.002303720729387236, "phrase": "field_trial"}, {"score": 0.002148604369150115, "phrase": "msf-rs_gateway"}, {"score": 0.0021049977753042253, "phrase": "cpu_loading"}], "paper_keywords": ["Request scheduling", " Access gateway", " Fair queuing"], "paper_abstract": "Scheduling packets is a usual solution to allocate the bandwidth on a bottleneck link. However, this solution cannot be used to manage the downlink bandwidth at the user-side access gateway, since the traffic is queued at the ISP-side gateway but not the user-side gateway. An idea is scheduling the requests at the user-side gateway to control the amount of the responses queued in the ISP-side gateway. This work first investigates the possibility of applying the class-based fair queuing discipline, which was widely and maturely used in scheduling packets, to schedule requests. However, we found that simply applying this discipline to schedule requests would encounter the timing and ordering problems at releasing requests and may not satisfy high-class users. Thus, we propose a minimum-service first request scheduling (MSF-RS) scheme. MSF-RS always selects the next request from the class receiving the minimum service to provide user-based weighted fairness, which ensures more bandwidth for high-class users. Next, MSF-RS uses a window-based rate control on releasing requests to maintain full link utilization and reduce the user-perceived latency. The results of analysis, simulation and field trial demonstrate that MSF-RS provides fairness while reducing 23-30% of user-perceived latency on average. Besides, a MSF-RS gateway can save 25% of CPU loading. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "On applying fair queuing discipline to schedule requests at access gateway for downlink differential QoS", "paper_id": "WOS:000261629600007"}