{"auto_keywords": [{"score": 0.03976161679769431, "phrase": "coi"}, {"score": 0.004970271858715332, "phrase": "scif"}, {"score": 0.00481495049065317, "phrase": "multi-coprocessor_nodes"}, {"score": 0.00476697427418509, "phrase": "future_exascale_systems"}, {"score": 0.004377921202912336, "phrase": "upcoming_software_challenge"}, {"score": 0.004248294537944227, "phrase": "particular_topic"}, {"score": 0.004205940624913343, "phrase": "programming_clusters"}, {"score": 0.004143196873246147, "phrase": "multiple_xeon_phi_coprocessors"}, {"score": 0.004081385289516914, "phrase": "compute_node"}, {"score": 0.004020492138367616, "phrase": "new_offload_approach"}, {"score": 0.003940706575253453, "phrase": "intra-node_communication"}, {"score": 0.0038624981944755813, "phrase": "intel's_apis"}, {"score": 0.0038239757564863057, "phrase": "coprocessor_offload_infrastructure"}, {"score": 0.003729335910488339, "phrase": "symmetric_communication_interface"}, {"score": 0.0036188435232325337, "phrase": "low_latency"}, {"score": 0.00354700018079049, "phrase": "conventional_pragma-based_offload_approach"}, {"score": 0.003441891354624516, "phrase": "coi-scif_approach"}, {"score": 0.003306559295382181, "phrase": "lower_overhead"}, {"score": 0.003240895431893263, "phrase": "offloaded_code"}, {"score": 0.002931569771634119, "phrase": "data_movement"}, {"score": 0.0028877818105020434, "phrase": "low-level_coi-scif_approach"}, {"score": 0.0027602925235474317, "phrase": "mpi-openmp_counterpart"}, {"score": 0.002678433668156678, "phrase": "symmetric_usage_mode"}, {"score": 0.0026120705848349055, "phrase": "hybird_programming_strategy"}, {"score": 0.002496722870659199, "phrase": "computational_force"}, {"score": 0.00223570488212345, "phrase": "coi-scif-based_approach"}], "paper_keywords": ["Intel Xeon Phi coprocessor", " offload model", " SCIF", " hybrid programming", " Tianhe-2"], "paper_abstract": "Future exascale systems are expected to adopt compute nodes that incorporate many accelerators. To shed some light on the upcoming software challenge, this paper investigates the particular topic of programming clusters that have multiple Xeon Phi coprocessors in each compute node. A new offload approach is considered for intra-node communication, which combines Intel's APIs of coprocessor offload infrastructure (COI) and symmetric communication interface (SCIF) for achieving low latency. While the conventional pragma-based offload approach allows simpler programming, the COI-SCIF approach has three advantages in (1) lower overhead associated with launching offloaded code, (2) higher data transfer bandwidths, and (3) more advanced asynchrony between computation and data movement. The low-level COI-SCIF approach is also shown to have benefits over the MPI-OpenMP counterpart, which belongs to the symmetric usage mode. Moreover, a hybird programming strategy based on COI-SCIF is presented for joining the computational force of all CPUs and coprocessors, while realizing communication hiding. All the programming approaches are tested by a real-world 3D application, for which the COI-SCIF-based approach shows a performance advantage on Tianhe-2. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "Communication-hiding programming for clusters with multi-coprocessor nodes", "paper_id": "WOS:000363470800009"}