{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reactive_diffracting_trees"}, {"score": 0.036170065913213575, "phrase": "new_self-tuning_trees"}, {"score": 0.004615587054831451, "phrase": "memory_accesses"}, {"score": 0.004585653726916024, "phrase": "different_memory_banks"}, {"score": 0.0045411156682300695, "phrase": "coordinated_manner"}, {"score": 0.004338898899247236, "phrase": "different_contention_levels"}, {"score": 0.003960972732123083, "phrase": "system_configuration"}, {"score": 0.003663250792230243, "phrase": "multi-level_adjustments"}, {"score": 0.0035574466515880337, "phrase": "new_method"}, {"score": 0.003465957803362915, "phrase": "hand-tuned_parameters"}, {"score": 0.003311458758488674, "phrase": "online_manner"}, {"score": 0.003226275635740122, "phrase": "tree-traversal_latency"}, {"score": 0.0031228618763672173, "phrase": "leaf_nodes"}, {"score": 0.0030524448705134283, "phrase": "desirable_computation"}, {"score": 0.0029449743792479433, "phrase": "data_structure"}, {"score": 0.002679386232765167, "phrase": "well-known_ccnuma_multiprocessor_system"}, {"score": 0.002568217828414509, "phrase": "original_hand-tuned_reactive_diffracting_trees"}, {"score": 0.002328921198521778, "phrase": "hand-tuned_trees"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["synchronization", " concurrent programming", " dynamic data structures", " distributed data structures", " trees"], "paper_abstract": "Reactive diffracting trees are efficient distributed objects that support synchronization, by distributing sets of memory accesses to different memory banks in a coordinated manner. They adjust their size in order to retain their efficiency in the presence of different contention levels. Their adjustment is sensitive to parameters that have to be manually determined after experimentation. Since these parameters depend on the application as well as on the system configuration and load, determining their optimal values is difficult in practice. Moreover, the adjustments are done one level at a time, hence the cost of multi-level adjustments can be high. This paper presents a new method for reactive diffracting trees, without the need of hand-tuned parameters. The new self-tuning trees (ST-trees) can balance, in an online manner, the trade-off between the tree-traversal latency and the latency due to contention on accessing the leaf nodes (i.e. the nodes where the desirable computation takes place). Moreover, the paper presents a data structure that enables the trees to grow or shrink by several levels in one adjustment step. The behavior of the reactive diffracting trees is illustrated in the paper via experiments performed on a well-known ccNUMA multiprocessor system. The experiments study the new self-tuning trees, also in connection with the original hand-tuned reactive diffracting trees. The experiments have showed that the new self-tuning trees are efficient, and that they react in the same way (i.e. select the same tree depth for the same contention level) as the hand-tuned trees, while they are able to adjust quicker than the latter (as they are able to grow or shrink by several levels in one adjustment step). (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Self-tuning reactive diffracting trees", "paper_id": "WOS:000246710300005"}