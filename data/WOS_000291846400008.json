{"auto_keywords": [{"score": 0.02500692059111306, "phrase": "jps"}, {"score": 0.00481495049065317, "phrase": "middleware_service_impact"}, {"score": 0.004765173195920904, "phrase": "system_reliability"}, {"score": 0.004667149874736771, "phrase": "java_application_server"}, {"score": 0.004571133708117498, "phrase": "popular_runtime_infrastructure"}, {"score": 0.004206338218873218, "phrase": "distributed_systems"}, {"score": 0.004014035333627087, "phrase": "middleware_services"}, {"score": 0.0039519004610213595, "phrase": "significant_impact"}, {"score": 0.0038907236419588255, "phrase": "overall_reliability"}, {"score": 0.0037908515763223107, "phrase": "different_services"}, {"score": 0.0037516215763875225, "phrase": "different_impacts"}, {"score": 0.003712796038920873, "phrase": "different_service_fault-tolerance_solutions"}, {"score": 0.003380897678672156, "phrase": "whole_system_reliability"}, {"score": 0.0033285306462537884, "phrase": "major_obstacle"}, {"score": 0.0032769720645483102, "phrase": "reliable_middleware-based_systems"}, {"score": 0.0031270239691197515, "phrase": "analytical_framework"}, {"score": 0.002968424524565369, "phrase": "target_system"}, {"score": 0.0027886573969044042, "phrase": "modern_programming_languages"}, {"score": 0.002759769970554556, "phrase": "service_failures"}, {"score": 0.002702887319160532, "phrase": "software_fault_injection"}, {"score": 0.002674885993329912, "phrase": "reliability_impacts"}, {"score": 0.0025259712348798323, "phrase": "multiple_jee_application_servers"}, {"score": 0.002435542816459651, "phrase": "pkuas."}, {"score": 0.002324007171619245, "phrase": "ecperf"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Reliability", " Middleware service", " Impact analysis", " Software implemented fault injection"], "paper_abstract": "Being a popular runtime infrastructure in the era of Internet, middleware provides more and more services to support the development, deployment and management of distributed systems. At the same time, the reliability of middleware services has a significant impact on the overall reliability of the system. Different services have different impacts and different service fault-tolerance solutions have different costs and risks. Therefore, the identification of the services that greatly affect the whole system reliability is the major obstacle to achieving reliable middleware-based systems. In this paper, we present an analytical framework to automatically reason and quantify such impacts when deploying the target system. In this framework, faults are represented by exceptions in modern programming languages; service failures are simulated by software fault injection; reliability impacts are measured by scenarios. This framework is demonstrated on multiple JEE application servers, including JBoss, JonAS and PKUAS. The experiments on two JEE blueprint applications, namely JPS and ECperf, show the feasibility, the applicability and the usability of this framework. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Simulation-based analysis of middleware service impact on system reliability: Experiment on Java application server", "paper_id": "WOS:000291846400008"}