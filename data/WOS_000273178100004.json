{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model-driven_security"}, {"score": 0.03148448317610218, "phrase": "security_software_artifacts"}, {"score": 0.004664352260912174, "phrase": "software_systems"}, {"score": 0.003960831041259951, "phrase": "current_software_infrastructures"}, {"score": 0.003802135020791801, "phrase": "new_software_development_area"}, {"score": 0.0036663981146086103, "phrase": "new_paradigm"}, {"score": 0.0035194572615570977, "phrase": "driven_software_development_techniques"}, {"score": 0.0034403745992576808, "phrase": "security_concerns"}, {"score": 0.003287482882222731, "phrase": "model_driven_security_approach"}, {"score": 0.003257727050827128, "phrase": "modelsec"}, {"score": 0.0031990183472675377, "phrase": "generative_architecture"}, {"score": 0.0031556799865964974, "phrase": "security_requirements"}, {"score": 0.0030988045934942587, "phrase": "requirement_elicitation"}, {"score": 0.003056819704624705, "phrase": "implementation_stage"}, {"score": 0.0028422946420821075, "phrase": "model_transformation_chain"}, {"score": 0.0027407299369891502, "phrase": "security_infrastructure_dependent_model"}, {"score": 0.0026307897899760383, "phrase": "security_restrictions"}, {"score": 0.0025951294037626174, "phrase": "design_decisions"}, {"score": 0.0025137856138000014, "phrase": "target_platform"}, {"score": 0.0024129269611844794, "phrase": "previously_generated_model"}, {"score": 0.0023802126605244438, "phrase": "domain-specific_language"}, {"score": 0.0023586493263143553, "phrase": "security_requirements_management"}, {"score": 0.0021731423856364003, "phrase": "application_example"}, {"score": 0.0021049977753042253, "phrase": "eclipse_tools"}], "paper_keywords": ["Requirements Engineering", " Requirements Metamodelling", " Model Driven Engineering", " Model Driven Security"], "paper_abstract": "Increasingly, the success of software systems depends largely on how their security requirements are satisfied. However, developers are challenged in implementing these requirements, mainly because of the gap between the specification and implementation, and the technical complexities of the current software infrastructures. Recently, Model-Driven Security has emerged as a new software development area aimed at overcoming these difficulties. This new paradigm takes advantage of the benefits of the model driven software development techniques for modeling and implementing security concerns. Following this trend, this paper proposes a model driven security approach named ModelSec that offers a generative architecture for managing security requirements, from the requirement elicitation to the implementation stage. This architecture automatically generates security software artifacts (e.g. security rules) by means of a model transformation chain composed of two-steps. Firstly, a security infrastructure dependent model is derived from three models, which express the security restrictions, the design decisions and the information needed on the target platform. Then, security software artifacts are produced from the previously generated model. A Domain-Specific Language for security requirements management has been built, which is based on a metamodel specifically designed for this purpose. An application example that illustrates the approach and the Eclipse tools implemented to support it are also shown.", "paper_title": "ModelSec: A Generative Architecture for Model-Driven Security", "paper_id": "WOS:000273178100004"}