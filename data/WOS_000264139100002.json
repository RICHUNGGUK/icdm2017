{"auto_keywords": [{"score": 0.029756038856362545, "phrase": "petri_nets"}, {"score": 0.00481495049065317, "phrase": "synchronization_and_cancelation_in_workflows_based_on_reset_nets._workflow_languages"}, {"score": 0.004269329235934791, "phrase": "different_approaches"}, {"score": 0.004027876348834879, "phrase": "common_theme"}, {"score": 0.0035297609635321203, "phrase": "future_execution_paths"}, {"score": 0.0034618794528555063, "phrase": "cancelation_features"}, {"score": 0.003435092524339692, "phrase": "potentially_unbounded_behavior"}, {"score": 0.00326594229173048, "phrase": "formal_semantics"}, {"score": 0.0029867619862229853, "phrase": "workflow_language_yawl"}, {"score": 0.002850682396853918, "phrase": "workflow_patterns"}, {"score": 0.0026477564788515984, "phrase": "concrete_algorithm"}, {"score": 0.0024784363584530976, "phrase": "yawl"}, {"score": 0.0023746766301040974, "phrase": "special_type"}, {"score": 0.0021970000365512227, "phrase": "reset_arcs"}, {"score": 0.002154693685426657, "phrase": "cancelation_regions"}, {"score": 0.0021049977753042253, "phrase": "natural_manner"}], "paper_keywords": ["OR-join", " synchronizing merge", " cancelation", " YAWL", " workflow patterns", " reset nets"], "paper_abstract": "Workflow languages offer constructs for coordinating tasks. Among these constructs are various types of splits and joins. One type of join, which shows up in various incarnations, is the OR-join. Different approaches assign a different ( often only intuitive) semantics to this type of join, though they do share the common theme that branches that cannot complete will not be waited for. Many systems and languages struggle with the semantics and implementation of the OR-join because its non-local semantics require a synchronization depending on the analysis of future execution paths. The presence of cancelation features, potentially unbounded behavior, and other OR-joins in a workflow further complicates the formal semantics of the OR-join. In this paper, the concept of the OR-join is examined in detail in the context of the workflow language YAWL, a powerful workflow language designed to support a collection of workflow patterns and inspired by Petri nets. The paper provides a suitable (non-local) semantics for an OR-join and gives a concrete algorithm with two optimization techniques to support the implementation. This approach exploits a link that is proposed between YAWL and reset nets, a variant of Petri nets with a special type of arc that can remove all tokens from a place when its transition fires. Through the behavior of reset arcs, the behavior of cancelation regions can be captured in a natural manner.", "paper_title": "SYNCHRONIZATION AND CANCELATION IN WORKFLOWS BASED ON RESET NETS", "paper_id": "WOS:000264139100002"}