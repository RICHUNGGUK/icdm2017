{"auto_keywords": [{"score": 0.049631680892871025, "phrase": "multimodal_optimization"}, {"score": 0.04201777933896291, "phrase": "different_characteristics"}, {"score": 0.00481495049065317, "phrase": "tunable_test_functions"}, {"score": 0.004725385523804256, "phrase": "multimodal_function_optimization"}, {"score": 0.004466519142879166, "phrase": "growing_interest"}, {"score": 0.004383406949799696, "phrase": "evolutionary_computing_research_community"}, {"score": 0.004182301599359094, "phrase": "multimodal_optimization_algorithms"}, {"score": 0.004047020753789236, "phrase": "test_functions"}, {"score": 0.0038794730876377057, "phrase": "available_selection"}, {"score": 0.0038431888954930083, "phrase": "multimodal_test_problems"}, {"score": 0.003684048704119722, "phrase": "general_framework"}, {"score": 0.0034984340449789745, "phrase": "software_framework"}, {"score": 0.003401148484767927, "phrase": "easily_tunable_test_functions"}, {"score": 0.0032756158688245, "phrase": "general_and_easily_expandable_environment"}, {"score": 0.0030239842475439814, "phrase": "new_parameterizable_function_families"}, {"score": 0.0029816229984366374, "phrase": "desired_landscapes"}, {"score": 0.0028580564897994175, "phrase": "well_known_test_functions"}, {"score": 0.002688532127821979, "phrase": "software_module"}, {"score": 0.0026014425686078993, "phrase": "optimization_algorithm"}, {"score": 0.0025409639091476363, "phrase": "c_programming_language"}, {"score": 0.002493592357827492, "phrase": "application_example"}, {"score": 0.0023127544795063263, "phrase": "different_properties"}, {"score": 0.0022696277881969896, "phrase": "proposed_module"}, {"score": 0.0022168460543913787, "phrase": "function_regularity"}, {"score": 0.0021551222226685648, "phrase": "local_optima"}, {"score": 0.0021049977753042253, "phrase": "different_algorithms"}], "paper_keywords": ["Multimodal optimization", " Test function generator", " Global optimization", " Differential Evolution", " Niching", " Crowding"], "paper_abstract": "Multimodal function optimization, where the aim is to locate more than one solution, has attracted growing interest especially in the evolutionary computing research community. To evaluate experimentally the strengths and weaknesses of multimodal optimization algorithms, it is important to use test functions representing different characteristics and various levels of difficulty. The available selection of multimodal test problems is, however, rather limited and no general framework exists. This paper describes an attempt to construct a software framework which includes a variety of easily tunable test functions. The aim is to provide a general and easily expandable environment for testing different methods of multimodal optimization. Several function families with different characteristics are included. The framework implements new parameterizable function families for generating desired landscapes. Additionally the framework implements a selection of well known test functions from the literature, which can be rotated and stretched. The software module can easily be imported to any optimization algorithm implementation compatible with the C programming language. As an application example, 8 optimization approaches are compared by their ability to locate several global optima over a set of 16 functions with different properties generated by the proposed module. The effects of function regularity, dimensionality and number of local optima on the performance of different algorithms are studied.", "paper_title": "A framework for generating tunable test functions for multimodal optimization", "paper_id": "WOS:000293924400003"}