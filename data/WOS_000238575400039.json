{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "potential_requirements"}, {"score": 0.049483572884790016, "phrase": "feature-oriented_gap_analysis"}, {"score": 0.0324337131484804, "phrase": "reusable_requirements_elements"}, {"score": 0.004438642216475526, "phrase": "effective_way"}, {"score": 0.0043560464825349275, "phrase": "software_quality"}, {"score": 0.004143196873246147, "phrase": "requirements_engineering"}, {"score": 0.003990385737207714, "phrase": "reuse_approach"}, {"score": 0.0034984340449789745, "phrase": "feature-oriented_gap_analysis_method"}, {"score": 0.0032858981413454802, "phrase": "feature_modeling"}, {"score": 0.0031845067058084583, "phrase": "important_concept"}, {"score": 0.0031448288291084, "phrase": "software_product_line"}, {"score": 0.0026384167183586015, "phrase": "new_collected_requirements"}, {"score": 0.0022413233627905696, "phrase": "sequential_procedures"}], "paper_keywords": [""], "paper_abstract": "Software reuse has long been paid attentions as an effective way to improve software quality and productivity. In the context of Requirements Engineering (RE), a reuse approach is effective in particular because it can help to define requirements and to anticipate requirements change. We propose a feature-oriented gap analysis method to elicit potential requirements from various stakeholders. We use feature modeling, which are an important concept in software product line, to identify reusable requirements elements. To achieve our goal, we present (1) a meta-model of reusable requirements elements, (2) gap analysis between new collected requirements and reused requirements in the repository, and (3) a potential requirements elicitation process with feature-oriented gap analysis. This process is a set of sequential procedures to elicit potential requirements in addition to users' Plus minus interest (PMI).", "paper_title": "Eliciting potential requirements with feature-oriented gap analysis", "paper_id": "WOS:000238575400039"}