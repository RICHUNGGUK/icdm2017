{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tie_breaking"}, {"score": 0.04304590109574224, "phrase": "degenerate_cases"}, {"score": 0.026650400611112738, "phrase": "symbolic_perturbation"}, {"score": 0.0046993598473345395, "phrase": "analytical_framework"}, {"score": 0.004512814529823301, "phrase": "algorithm_theory"}, {"score": 0.0043161190928529755, "phrase": "robust_algorithms"}, {"score": 0.004195418010131832, "phrase": "convenient_property"}, {"score": 0.004144723510171449, "phrase": "arbitrary_set"}, {"score": 0.003806541299696042, "phrase": "competitive_and_approximation_ratios"}, {"score": 0.0036553070575015344, "phrase": "problem_instances"}, {"score": 0.00342568771304873, "phrase": "specific_combinatorial_problem_structure"}, {"score": 0.0032762198196613084, "phrase": "tie_breaking_policy"}, {"score": 0.002936331371903168, "phrase": "degenerate_case"}, {"score": 0.0025682999078906936, "phrase": "tie_breaking_strategy"}, {"score": 0.002456148932305311, "phrase": "implicit_usage"}, {"score": 0.0022101055924375725, "phrase": "theoretical_explanation"}], "paper_keywords": ["Perturbation", " Robust algorithms", " Proof technique", " Degeneracy"], "paper_abstract": "This article describes an analytical framework for reasoning about the issue of tie breaking in algorithm theory. The core of this framework is the concept of robust algorithms. Such kind of algorithms have the convenient property that an arbitrary set of degenerate cases can be ignored without loss of generality during proofs of many important properties, e.g.. runtime, space requirements, feasibility, competitive and approximation ratios. Here degeneracy is defined as a set of problem instances satisfying a certain property, and this property is independent from both the algorithm under consideration and the specific combinatorial problem structure. It turns out that robustness is related to the tie breaking policy of algorithms in two different ways. On the one hand, the set of inputs where a tie actually occurs is typically (but not always) a degenerate case. On the other hand, we show that for any algorithm there is a way to break ties such that it becomes robust. In particular, robustness is guaranteed by any tie breaking strategy that can be interpreted as symbolic perturbation. For many typical algorithms the implicit usage of symbolic perturbation can be easily verified and so the consideration of degenerate cases can be avoided during their analysis. The concept of robustness also gives a theoretical explanation of why tie breaking does often not matter at all. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Analytical aspects of tie breaking", "paper_id": "WOS:000312509400001"}