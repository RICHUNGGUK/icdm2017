{"auto_keywords": [{"score": 0.041153750933824076, "phrase": "flexible_filters"}, {"score": 0.010612387000973441, "phrase": "stream_programs"}, {"score": 0.004706699397060569, "phrase": "stream-processing_model"}, {"score": 0.004600870784042767, "phrase": "natural_fit"}, {"score": 0.004531637625717547, "phrase": "multicore_systems"}, {"score": 0.004363058588000252, "phrase": "inherent_locality"}, {"score": 0.0040444053843446326, "phrase": "efficient_parallel_implementations"}, {"score": 0.0032951702142329357, "phrase": "data-processing_throughput"}, {"score": 0.003245520963944678, "phrase": "individual_bottleneck_tasks"}, {"score": 0.0031966173935538992, "phrase": "\"borrowing\"_resources"}, {"score": 0.002874257080906824, "phrase": "runtime_load-balancing_decisions"}, {"score": 0.002788257824525862, "phrase": "point-to-point_handshake_signals"}, {"score": 0.0026640466056415298, "phrase": "load_balancing"}, {"score": 0.002564763827975352, "phrase": "system-level_processing_throughput"}, {"score": 0.002413531395475291, "phrase": "large_dynamic_variations"}, {"score": 0.0023591417077156555, "phrase": "computational_load"}, {"score": 0.0021865218861454256, "phrase": "homogeneous_multicore_environment"}, {"score": 0.0021049977753042253, "phrase": "five_real-word_stream_programs"}], "paper_keywords": ["Design", " Performance", " Stream programming", " dynamic load balancing"], "paper_abstract": "The stream-processing model is a natural fit for multicore systems because it exposes the inherent locality and concurrency of a program and highlights its separable tasks for efficient parallel implementations. We present flexible filters, a load-balancing optimization technique for stream programs. Flexible filters utilize the programmability of the cores in order to improve the data-processing throughput of individual bottleneck tasks by \"borrowing\" resources from neighbors in the stream. Our technique is distributed and scalable because all runtime load-balancing decisions are based on point-to-point handshake signals exchanged between neighboring cores. Load balancing with flexible filters increases the system-level processing throughput of stream applications, particularly those with large dynamic variations in the computational load of their tasks. We empirically evaluate flexible filters in a homogeneous multicore environment over a suite of five real-word stream programs.", "paper_title": "Flexible Filters in Stream Programs", "paper_id": "WOS:000329136000005"}