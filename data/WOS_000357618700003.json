{"auto_keywords": [{"score": 0.049571431541439746, "phrase": "cms-based_web_applications"}, {"score": 0.04407953898448545, "phrase": "web_applications"}, {"score": 0.00481495049065317, "phrase": "traditional_web_applications"}, {"score": 0.004638602678192715, "phrase": "content_management_systems"}, {"score": 0.004590173543825965, "phrase": "cms"}, {"score": 0.004421284843189731, "phrase": "best_platforms"}, {"score": 0.004327981760540394, "phrase": "large_amount"}, {"score": 0.0042820680211904235, "phrase": "digital_content"}, {"score": 0.003910879154656061, "phrase": "cms_platforms"}, {"score": 0.003727527379253624, "phrase": "migration_process"}, {"score": 0.003314591878914152, "phrase": "architecture-driven_modernization"}, {"score": 0.0032795016458614656, "phrase": "adm"}, {"score": 0.0026914710445743693, "phrase": "php_code"}, {"score": 0.0025109095718850376, "phrase": "model_transformation_rules"}, {"score": 0.002470987929071079, "phrase": "automatically_a_kdm_model"}, {"score": 0.002431699464104896, "phrase": "astm_php_model"}, {"score": 0.0022685255265595624, "phrase": "case_study"}, {"score": 0.00218525181867453, "phrase": "php"}, {"score": 0.0021390191069313945, "phrase": "online_users"}, {"score": 0.0021049977753042253, "phrase": "web_application"}], "paper_keywords": ["Content Management System", " Web application", " Architecture-Driven Modernization", " Software Migration", " Reverse Engineering and Model-driven Engineering"], "paper_abstract": "In recent years, Content Management Systems (CMS) have proven to be the best platforms for maintaining the large amount of digital content managed by Web applications. Thus, many organizations have experienced the necessity to base its Web applications on these CMS platforms. To do this, they start a migration process which is complex and error prone. To support this process, we propose a method based on the principles of Architecture-Driven Modernization (ADM) which automates the migration of Web applications to CMS-based Web applications. This article focuses on the implementation of two artifacts of this method: 1) the DSL ASTM_PHP, a modeling language for defining a model from PHP code (ASTM_PHP model) and 2) the model-to-model transformation rules which generate automatically a KDM model from a ASTM PHP model. To show the feasibility of this implementation, we use a case study based on a widget implemented in PHP which lists the online users of a Web application.", "paper_title": "Migrating Traditional Web Applications to CMS-based Web Applications", "paper_id": "WOS:000357618700003"}