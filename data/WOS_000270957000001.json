{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multiple_queries"}, {"score": 0.0495290999002817, "phrase": "multidimensional_data"}, {"score": 0.04217872069329157, "phrase": "distributed_environment"}, {"score": 0.0047049532961375, "phrase": "multidimensional_data_indexing"}, {"score": 0.004518442937844318, "phrase": "centralized_system"}, {"score": 0.004339293854115301, "phrase": "nascent_area"}, {"score": 0.004191377834552202, "phrase": "integrated_structure"}, {"score": 0.0038210283935447473, "phrase": "new_data_structure"}, {"score": 0.0036694571352598564, "phrase": "bloom"}, {"score": 0.003306559295382181, "phrase": "distributed_system"}, {"score": 0.003049247243348174, "phrase": "traditional_r-tree_node_structure"}, {"score": 0.0029967610945411593, "phrase": "space-efficient_bloom_filters"}, {"score": 0.002945175711537758, "phrase": "fast_membership_queries"}, {"score": 0.0028944757265206332, "phrase": "proposed_br-tree"}, {"score": 0.0026846436189970446, "phrase": "bound_queries"}, {"score": 0.002548331088496964, "phrase": "previous_data_structures"}, {"score": 0.0024899850926034567, "phrase": "space_efficiency"}, {"score": 0.002447101794397243, "phrase": "quick_response"}, {"score": 0.0021049977753042253, "phrase": "proposed_br-tree_structure"}], "paper_keywords": ["BR-tree", " multidimensional data", " point query", " range query", " cover query", " bound query"], "paper_abstract": "Multidimensional data indexing has received much research attention recently in a centralized system. However, it remains a nascent area of research in providing an integrated structure for multiple queries on multidimensional data in a distributed environment. In this paper, we propose a new data structure, called BR-tree (Bloom-filter-based R-tree), and implement such a prototype in the context of a distributed system. The node in a BR-tree, viewed as an expansion from the traditional R-tree node structure, incorporates space-efficient Bloom filters to facilitate fast membership queries. The proposed BR-tree can simultaneously support not only existing point and range queries, but also cover and bound queries that can potentially benefit various data indexing services. Compared with previous data structures, BR-tree achieves space efficiency and provides quick response (<= O(log n)) on these four types of queries. Our extensive experiments in a distributed environment further validate the practicality and efficiency of the proposed BR-tree structure.", "paper_title": "BR-Tree: A Scalable Prototype for Supporting Multiple Queries of Multidimensional Data", "paper_id": "WOS:000270957000001"}