{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "hidden_units"}, {"score": 0.0478751266707158, "phrase": "optimal_topology"}, {"score": 0.04267484042574048, "phrase": "neural_networks"}, {"score": 0.012770641097583293, "phrase": "existing_algorithms"}, {"score": 0.00893278682185719, "phrase": "survival_algorithm"}, {"score": 0.004773904938276846, "phrase": "three-layer_neural_networks"}, {"score": 0.0045543011700929096, "phrase": "multi-layer_neural_networks"}, {"score": 0.003988055287053139, "phrase": "np-hard_problems"}, {"score": 0.003582928547553209, "phrase": "constructive_algorithms"}, {"score": 0.0035523480068927614, "phrase": "hybrid_algorithms"}, {"score": 0.003522027550662857, "phrase": "evolutionary_algorithms"}, {"score": 0.0034179225740833055, "phrase": "optimal_solutions"}, {"score": 0.003316884515934182, "phrase": "hill-climbing_method"}, {"score": 0.003232653376857698, "phrase": "local_minima"}, {"score": 0.0030969799559421806, "phrase": "learning_automaton"}, {"score": 0.0029416448256236057, "phrase": "proposed_learning_automaton"}, {"score": 0.0026538960171433985, "phrase": "global_search_method"}, {"score": 0.0022067604433257814, "phrase": "large_network"}], "paper_keywords": ["neural networks engineering", " multi-layer neural networks", " neural networks topology", " backpropagation", " learning automata"], "paper_abstract": "There is no method to determine the optimal topology for multi-layer neural networks for a given problem. Usually the designer selects a topology for the network and then trains it. Since determination of the optimal topology of neural networks belongs to class of NP-hard problems, most of the existing algorithms for determination of the topology are approximate. These algorithms could be classified into four main groups: pruning algorithms, constructive algorithms, hybrid algorithms and evolutionary algorithms. These algorithms can produce near optimal solutions. Most of these algorithms use hill-climbing method and may be stuck at local minima. In this article, we first introduce a learning automaton and study its behaviour and then present an algorithm based on the proposed learning automaton, called survival algorithm, for determination of the number of hidden units of three layers neural networks. The survival algorithm uses learning automata as a global search method to increase the probability of obtaining the optimal topology. The algorithm considers the problem of optimization of the topology of neural networks as object partitioning rather than searching or parameter optimization as in existing algorithms. In survival algorithm, the training begins with a large network, and then by adding and deleting hidden units, a near optimal topology will be obtained. The algorithm has been tested on a number of problems and shown through simulations that networks generated are near optimal.", "paper_title": "A learning automata-based algorithm for determination of the number of hidden units for three-layer neural networks", "paper_id": "WOS:000262632300011"}