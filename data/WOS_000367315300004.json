{"auto_keywords": [{"score": 0.04650334340899586, "phrase": "finite_field"}, {"score": 0.013986395475240136, "phrase": "non-malleable_extractor"}, {"score": 0.008749719129684412, "phrase": "multiplicative_group"}, {"score": 0.00481495049065317, "phrase": "computing_discrete_logarithms"}, {"score": 0.004623503587186056, "phrase": "independent_interest"}, {"score": 0.004505638402009237, "phrase": "deterministically_discrete_logarithms"}, {"score": 0.004326436568191916, "phrase": "number-theoretic_construction"}, {"score": 0.004185108816866677, "phrase": "recent_paper_privacy_amplification"}, {"score": 0.0040783736687590635, "phrase": "character_sums"}, {"score": 0.004048378919038729, "phrase": "dodis_et_al"}, {"score": 0.003930581102447622, "phrase": "first_explicit_example"}, {"score": 0.0037188360359702182, "phrase": "classical_randomness_extractor"}, {"score": 0.0035184576341236317, "phrase": "polynomial_time"}, {"score": 0.003466865016432561, "phrase": "linear_number"}, {"score": 0.0032800186243040663, "phrase": "residue_class"}, {"score": 0.0029906503184034634, "phrase": "original_development"}, {"score": 0.002914288956035066, "phrase": "additional_assumption"}, {"score": 0.002850385670169814, "phrase": "primitive_element"}, {"score": 0.002777595758483679, "phrase": "auxiliary_result"}, {"score": 0.002726740692380339, "phrase": "efficiently_computable_bijection"}, {"score": 0.0026966744704447275, "phrase": "order_m_subgroup"}, {"score": 0.002495268931035983, "phrase": "smooth_number"}, {"score": 0.002404706573379854, "phrase": "baby-step_giant-step_method"}, {"score": 0.002343271162668978, "phrase": "discrete_logarithm_problem"}, {"score": 0.0022918601312169676, "phrase": "prime_field"}, {"score": 0.002233301265743633, "phrase": "generic_algorithm"}, {"score": 0.002176235362654451, "phrase": "constant-time_access"}, {"score": 0.0021522261505574035, "phrase": "memory_cell"}, {"score": 0.0021049977753042253, "phrase": "classical_turing_machine"}], "paper_keywords": [""], "paper_abstract": "We prove several results of independent interest related to the problem of computing deterministically discrete logarithms in a finite field. The motivation was to give a number-theoretic construction of a non-malleable extractor improving the solution from the recent paper Privacy Amplification and Non-Malleable Extractors via Character Sums by Dodis et al. There, the authors provide the first explicit example of a non-malleable extractor - a cryptographic primitive that significantly strengthens the notion of a classical randomness extractor. In order to make the extractor robust, so that it runs in polynomial time and outputs a linear number of bits, they rely on a certain conjecture on the least prime in a residue class. In this work we present a modification of their construction that allows to remove that dependency and address an issue we identified in the original development. Namely, it required an additional assumption about feasibility of finding a primitive element of a finite field. As an auxiliary result, we show an efficiently computable bijection between any order M subgroup of the multiplicative group of a finite field and a set of integers modulo M with the provision that M is a smooth number. Also, we provide a version of the baby-step giant-step method for solving multiple instances of the discrete logarithm problem in the multiplicative group of a prime field. It performs better than the generic algorithm when run on a machine without constant-time access to each memory cell, e.g., on a classical Turing machine.", "paper_title": "On Computing Discrete Logarithms in Bulk and Randomness Extractors", "paper_id": "WOS:000367315300004"}