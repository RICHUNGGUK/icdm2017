{"auto_keywords": [{"score": 0.030759686576611857, "phrase": "update_frequency"}, {"score": 0.00481495049065317, "phrase": "time_series"}, {"score": 0.004777392826700429, "phrase": "sliding_windows"}, {"score": 0.004630055463858585, "phrase": "evolving_time_series"}, {"score": 0.004558091785667046, "phrase": "efficient_algorithms"}, {"score": 0.004469700997700534, "phrase": "query_processing"}, {"score": 0.00424779023663186, "phrase": "new_data"}, {"score": 0.004181743040532619, "phrase": "traditional_access_methods"}, {"score": 0.003989675045520656, "phrase": "significant_update_costs"}, {"score": 0.0036600862989330106, "phrase": "similarity_query_processing"}, {"score": 0.0036315039559860654, "phrase": "streaming_time_series"}, {"score": 0.00351938145050947, "phrase": "multidimensional_access_method"}, {"score": 0.0034646205853140558, "phrase": "deferred_update_policy"}, {"score": 0.003424107910734022, "phrase": "incremental_computation"}, {"score": 0.0033840673522948592, "phrase": "discrete_fourier_transform"}, {"score": 0.003241203549050267, "phrase": "feature_extraction_method"}, {"score": 0.0031658283119347396, "phrase": "range_and_nearest-neighbor_queries"}, {"score": 0.003056029284235528, "phrase": "modern_applications"}, {"score": 0.003020279889535487, "phrase": "important_characteristic"}, {"score": 0.0029849474387154827, "phrase": "proposed_approach"}, {"score": 0.0028701222153940283, "phrase": "data_streams"}, {"score": 0.0028143720888311537, "phrase": "simple_heuristic_approach"}, {"score": 0.0027060907634889734, "phrase": "specified_level"}, {"score": 0.0025715131759585052, "phrase": "proposed_method"}, {"score": 0.002501835053002899, "phrase": "range_queries"}, {"score": 0.0024822751900485758, "phrase": "k-nearest-neighbor_queries"}, {"score": 0.002462867872567125, "phrase": "real-life_data_sets"}, {"score": 0.002358801930248239, "phrase": "false_alarms"}, {"score": 0.0023220573674955776, "phrase": "high_answers"}, {"score": 0.0021807022596449527, "phrase": "consistently_better_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["streaming time series", " similarity search", " sliding window", " performance evaluation"], "paper_abstract": "The challenge in a database of evolving time series is to provide efficient algorithms and access methods for query processing, taking into consideration the fact that the database changes continuously as new data become available. Traditional access methods that continuously update the data are considered inappropriate, due to significant update costs. In this paper, we use the IDC-Index (Incremental DFT Computation - Index), an efficient technique for similarity query processing in streaming time series. The index is based on a multidimensional access method enhanced with a deferred update policy and an incremental computation of the Discrete Fourier Transform, (DFT), which is used as a feature extraction method. We focus both on range and nearest-neighbor queries, since both types are frequently used in modern applications. An important characteristic of the proposed approach is its ability to adapt to the update frequency of the data streams. By using a simple heuristic approach, we manage to keep the update frequency at a specified level to guarantee efficiency. In order to investigate the efficiency of the proposed method, experiments have been performed for range queries and k-nearest-neighbor queries on real-life data sets. The proposed method manages to reduce the number of false alarms examined, achieving high answers vs. candidates ratio. Moreover, the results have shown that the new techniques exhibit consistently better performance in comparison to previously proposed approaches. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive similarity search in streaming time series with sliding windows", "paper_id": "WOS:000252395100016"}