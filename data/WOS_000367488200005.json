{"auto_keywords": [{"score": 0.003852939975815287, "phrase": "infinite_grid"}, {"score": 0.003644001325962353, "phrase": "adversarially_hidden_treasure"}, {"score": 0.0031113369425402287, "phrase": "constant-size_messages"}, {"score": 0.002942495422585405, "phrase": "minimum_number"}, {"score": 0.0027570267191549774, "phrase": "ants_problem"}, {"score": 0.0026317312518257803, "phrase": "computational_capabilities"}, {"score": 0.0024429654627197393, "phrase": "timing_parameters"}, {"score": 0.002375714262344562, "phrase": "execution_environment"}, {"score": 0.0022889103976458437, "phrase": "lower_and_upper_bounds"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Treasure search", " Finite automata", " Collaborative search"], "paper_abstract": "Consider the Ants Nearby Treasure Search (ANTS) problem, where n mobile agents, initially placed at the origin of an infinite grid, collaboratively search for an adversarially hidden treasure. The agents are controlled by deterministic/randomized finite or pushdown automata and are able to communicate with each other through constant-size messages. We show that the minimum number of agents required to solve the ANTS problem crucially depends on the computational capabilities of the agents as well as the timing parameters of the execution environment. We give lower and upper bounds for different scenarios. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "How many ants does it take to find the food?", "paper_id": "WOS:000367488200005"}