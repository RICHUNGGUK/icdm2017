{"auto_keywords": [{"score": 0.04330320170884125, "phrase": "fir_filters"}, {"score": 0.011539056373532199, "phrase": "higher_order_fir_filters"}, {"score": 0.00481495049065317, "phrase": "low-complexity_higher_order"}, {"score": 0.004694700982410345, "phrase": "linear-phase_finite-impulse-response"}, {"score": 0.004655425101752512, "phrase": "fir"}, {"score": 0.004481954307639453, "phrase": "coefficient_multipliers"}, {"score": 0.003660452313567116, "phrase": "new_cse_algorithm"}, {"score": 0.0036296886647898094, "phrase": "binary_representation"}, {"score": 0.003421437601439154, "phrase": "csd-based_cse_methods"}, {"score": 0.003266201217790818, "phrase": "cse_method"}, {"score": 0.0030399874838260886, "phrase": "filter_coefficients"}, {"score": 0.00297647673291169, "phrase": "binary_form"}, {"score": 0.0028775998963807324, "phrase": "unpaired_bits"}, {"score": 0.002793822766700583, "phrase": "css"}, {"score": 0.002723862897844177, "phrase": "binary_coefficients"}, {"score": 0.0026895647154863405, "phrase": "csd_coefficients"}, {"score": 0.0025674490885184173, "phrase": "proposed_binary-coefficient-based_cse_method"}, {"score": 0.002450864311898833, "phrase": "higher_order_filters"}, {"score": 0.0023395610923736595, "phrase": "critical_path"}, {"score": 0.0023100907305651872, "phrase": "filter_coefficient_multipliers"}, {"score": 0.0022906498741695094, "phrase": "design_examples"}, {"score": 0.0022145052062614514, "phrase": "average_adder_reduction"}, {"score": 0.0021682027434117095, "phrase": "best_known_cse_method"}, {"score": 0.0021049977753042253, "phrase": "logic_depth"}], "paper_keywords": ["common subexpression elimination (CSE)", " finite-impulse-response (FIR) filter", " logic depth (LD)", " logical operators (LOs)", " low complexity"], "paper_abstract": "The complexity of linear-phase finite-impulse-response (FIR) filters is dominated by the complexity of coefficient multipliers. The number of adders (subtractors) used to implement the multipliers determines the complexity of the FIR filters. It is well known that common subexpression elimination (CSE) methods based on canonical signed digit (CSD) coefficients reduce the number of adders required in the multipliers of FIR filters. A new CSE algorithm using binary representation of coefficients for the implementation of higher order FIR filters with a fewer number of adders than CSD-based CSE methods is presented in this paper. We show that the CSE method is more efficient in reducing the number of adders needed to realize the multipliers when the filter coefficients are represented in the binary form. Our observation is that the number of unpaired bits (bits that do not form CSs) is considerably few for binary coefficients compared to CSD coefficients, particularly for higher order FIR filters. As a result, the proposed binary-coefficient-based CSE method offers good reduction in the number of adders in realizing higher order filters. The reduction of adders is achieved without much increase in critical path length of filter coefficient multipliers. Design examples of FIR filters show that our method offers an average adder reduction of 18% over the best known CSE method, without any increase in the logic depth.", "paper_title": "A new common subexpression elimination algorithm for realizing low-complexity higher order digital", "paper_id": "WOS:000252611600002"}