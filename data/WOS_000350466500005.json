{"auto_keywords": [{"score": 0.027694556106838922, "phrase": "non-grounded_part"}, {"score": 0.00481495049065317, "phrase": "lazy_model_expansion"}, {"score": 0.0040300463421312225, "phrase": "bounded_model_generation"}, {"score": 0.003998286635727259, "phrase": "rich_knowledge_representation_languages"}, {"score": 0.003966776222128288, "phrase": "answer_set_programming"}, {"score": 0.003828012660311739, "phrase": "csp_modeling_language"}, {"score": 0.0037829525733284724, "phrase": "zinc"}, {"score": 0.0035507457285983268, "phrase": "propositional_one"}, {"score": 0.0034949740315415043, "phrase": "search_algorithm"}, {"score": 0.0034537189001268113, "phrase": "resulting_theory"}, {"score": 0.0034129490818185595, "phrase": "important_bottleneck"}, {"score": 0.003241750934419473, "phrase": "grounding_phase"}, {"score": 0.0027559226203857316, "phrase": "partial_assignment"}, {"score": 0.002723367507064405, "phrase": "grounded_part"}, {"score": 0.002669959049383929, "phrase": "valid_justifications"}, {"score": 0.0025059724686541263, "phrase": "complete_assignment"}, {"score": 0.0023990982005125763, "phrase": "particular_formula"}, {"score": 0.0023334673218688437, "phrase": "new_one"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "Finding satisfying assignments for the variables involved in a set of constraints can be cast as a (bounded) model generation problem: search for (bounded) models of a theory in some logic. The state-of-the-art approach for bounded model generation for rich knowledge representation languages like Answer Set Programming (ASP) and FO(.) and a CSP modeling language such as Zinc, is ground-and-solve: reduce the theory to a ground or propositional one and apply a search algorithm to the resulting theory. An important bottleneck is the blow-up of the size of the theory caused by the grounding phase. Lazily grounding the theory during search is a way to overcome this bottleneck. We present a theoretical framework and an implementation in the context of the FO(.) knowledge representation language. Instead of grounding all parts of a theory, justifications are derived for some parts of it. Given a partial assignment for the grounded part of the theory and valid justifications for the formulas of the non-grounded part, the justifications provide a recipe to construct a complete assignment that satisfies the non-grounded part. When a justification for a particular formula becomes invalid during search, a new one is derived; if that fails, the formula is split in a part to be grounded and a part that can be justified. Experimental results illustrate the power and generality of this approach.", "paper_title": "Lazy Model Expansion: Interleaving Grounding with Search", "paper_id": "WOS:000350466500005"}