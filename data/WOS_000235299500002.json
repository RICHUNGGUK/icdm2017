{"auto_keywords": [{"score": 0.042515919124688197, "phrase": "np"}, {"score": 0.02820417396978027, "phrase": "transformed_program"}, {"score": 0.00481495049065317, "phrase": "automated_integration"}, {"score": 0.00469678464293492, "phrase": "set_programming"}, {"score": 0.004567294967643222, "phrase": "answer_set_programming"}, {"score": 0.004455179735772526, "phrase": "powerful_tool"}, {"score": 0.004372895175179516, "phrase": "hard_problems"}, {"score": 0.004212838053019701, "phrase": "logic_programs"}, {"score": 0.004083923108969583, "phrase": "typical_\"guess_and_check\"_nature"}, {"score": 0.0038258495055898713, "phrase": "stable_models_ofa_program"}, {"score": 0.0037668375812212654, "phrase": "problem-solving_capacity"}, {"score": 0.003743487506598038, "phrase": "full_disjunctional_logic_programs"}, {"score": 0.0037202816351450995, "phrase": "di-ps"}, {"score": 0.003561804646511146, "phrase": "second_level"}, {"score": 0.003528730431045574, "phrase": "polynomial_hierarchy"}, {"score": 0.003388909415044492, "phrase": "\"_structure"}, {"score": 0.003234425353582135, "phrase": "non-obvious_task"}, {"score": 0.003115908199991072, "phrase": "co-np-cornplete_problem"}, {"score": 0.0030204580407008214, "phrase": "separate_guess"}, {"score": 0.0028917056916949744, "phrase": "check_program"}, {"score": 0.0028206052780047424, "phrase": "general_transformations"}, {"score": 0.002708766459414734, "phrase": "answer_sets"}, {"score": 0.002633941112839883, "phrase": "simple_correspondence"}, {"score": 0.0025611773887867255, "phrase": "original_program"}, {"score": 0.002521623057264411, "phrase": "designated_answer"}, {"score": 0.0023842062513204257, "phrase": "\"_programs"}, {"score": 0.0022967713922705, "phrase": "single_disjunctive_logic_program"}, {"score": 0.0022612912386120385, "phrase": "recent_results"}, {"score": 0.002233347805926783, "phrase": "asp"}, {"score": 0.0021050027894814784, "phrase": "asp."}], "paper_keywords": ["answer set programming", " disjunctive logic programs", " guess and check paradigm", " meta-interpretation", " automated program synthesis"], "paper_abstract": "Answer set programming (ASP) with disjunction offers a powerful tool for declaratively representing and solving hard problems. Many NP-complete problems can be encoded ill the answer set semantics of logic programs in a very concise and intuitive way, where the encoding reflects the typical \"guess and check\" nature of NP problems: The property is encoded in a way such that polynomial size certificates for it correspond to stable models ofa program. However, the problem-solving capacity of full disjunctional logic programs (DI-Ps) is beyond NP, and captures a class of problems at the second level of the polynomial hierarchy. While these problems also have a clear \"guess and check\" structure, finding an encoding in a DLP reflecting this structure may sometimes be a non-obvious task, in particular if the \"check\" itself is a co-NP-cornplete problem; usually, Such problems are solved by interleaving separate guess and check programs, where the check is expressed by inconsistency of the check program. In this paper, we present general transformations of head-cycle free (extended) disjunctive logic programs into stratified and positive (extended) disjunctive logic programs based oil meta-interpretation techniques. The answer sets of the original and the transformed program are in simple correspondence, and, moreover, inconsistency of the original program is indicated by a designated answer set of the transformed program. Our transformations facilitate the integration of separate \"guess\" and \"check\" programs, which are often easy to obtain, automatically into a single disjunctive logic program. Our results complement recent results on meta-interpretation in ASP, and extend methods and techniques for a declarative \"guess and check\" problem solving paradigm through ASP.", "paper_title": "Towards automated integration of guess and check programs in answer set programming: a meta-interpreter and applications", "paper_id": "WOS:000235299500002"}