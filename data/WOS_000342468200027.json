{"auto_keywords": [{"score": 0.042148418405646954, "phrase": "data_parallelism"}, {"score": 0.014623299892989822, "phrase": "stream_programming"}, {"score": 0.008713768692145006, "phrase": "controlled-grained_parallelism"}, {"score": 0.007365808622997312, "phrase": "scheduling_task"}, {"score": 0.004761132425263795, "phrase": "message-driven_stream_programs"}, {"score": 0.004655285779819366, "phrase": "increasing_amount"}, {"score": 0.0045262653692203815, "phrase": "multicore_platforms"}, {"score": 0.004327196832280818, "phrase": "effective_solution"}, {"score": 0.004254814649568355, "phrase": "distributed_parallelization"}, {"score": 0.003845154818609644, "phrase": "robust_multicore_performance"}, {"score": 0.003738502710504415, "phrase": "varying_application_characteristics"}, {"score": 0.0032115093493071366, "phrase": "novel_parallel_programming_model"}, {"score": 0.003070086433952691, "phrase": "message-driven_execution_paradigm"}, {"score": 0.0026820015810254004, "phrase": "stream_graph"}, {"score": 0.0026222551419772867, "phrase": "streammde"}, {"score": 0.00257831812581194, "phrase": "higher_efficiency"}, {"score": 0.0025494354909453847, "phrase": "mixed_task"}, {"score": 0.0024097920845706795, "phrase": "appropriate_granularity_control"}, {"score": 0.0022906498741695094, "phrase": "parallel_scale"}, {"score": 0.0022270182923887012, "phrase": "stream_programs"}, {"score": 0.0021049977753042253, "phrase": "different_schedules"}], "paper_keywords": ["Controlled-grained parallelism", " Multicore", " Message-driven execution", " C++11", " Stream programming"], "paper_abstract": "With the increasing amount of parallelism obtainable on multicore platforms, stream programming has been proposed as an effective solution for exposing distributed parallelization. Nonetheless, a pressing demand of scheduling task and data parallelism in stream programming exists that can accomplish robust multicore performance in the face of varying application characteristics. This paper addresses the problem of scheduling task and data parallelism in stream programming. We present StreamMDE, an asynchronous concurrency stream programming framework which offers a novel parallel programming model for scheduling task and data parallelism in the message-driven execution paradigm. A key property of this framework is exposing controlled-grained parallelism, which allows us to control the granularity of task and data parallelism in stream graph. Our empirical evaluation of StreamMDE shows that higher efficiency of mixed task and data parallelism in stream programming can be exploited with the appropriate granularity control. The framework bridges the gap between the parallel scale and the architecture of stream programs and facilitates in designing and coding stream features in different schedules.", "paper_title": "Exploiting controlled-grained parallelism in message-driven stream programs", "paper_id": "WOS:000342468200027"}