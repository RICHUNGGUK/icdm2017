{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "vector_loops"}, {"score": 0.0044634416051962545, "phrase": "large_degree"}, {"score": 0.004396267325338022, "phrase": "instruction_level_parallelism"}, {"score": 0.004013843843250455, "phrase": "complex_organization_scheme"}, {"score": 0.0034749794034364197, "phrase": "cache_systems"}, {"score": 0.0034226302212225206, "phrase": "memory_instructions_scheduling"}, {"score": 0.0031246358910995316, "phrase": "compile_time"}, {"score": 0.0030542703032534766, "phrase": "non-precise_memory_disambiguation_mechanism"}, {"score": 0.0029182434479165884, "phrase": "severe_performance_loss"}, {"score": 0.0026640466056415298, "phrase": "memory_operations"}, {"score": 0.0026040262154057607, "phrase": "pseudo-vectorized_way"}, {"score": 0.0023235629819760018, "phrase": "code_optimization_technique"}, {"score": 0.002288519595829552, "phrase": "register_pressure"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance measurement", " cache optimization", " memory access optimization", " bank conflicts", " memory address disambiguation", " instruction level parallelism"], "paper_abstract": "To keep up with a large degree of instruction level parallelism (ILP), the Itanium 2 cache systems use a complex organization scheme: load/store queues, banking and interleaving. In this paper, we study the impact of these cache systems on memory instructions scheduling. We demonstrate that, if no care is taken at compile time, the non-precise memory disambiguation mechanism and the banking structure cause severe performance loss, even for very simple regular codes. We also show that grouping the memory operations in a pseudo-vectorized way enables the compiler to generate more effective code for the Itanium 2 processor. The impact of this code optimization technique on register pressure is analyzed for various vectorization schemes. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "An efficient memory operations optimization technique for vector loops on Itanium 2 processors", "paper_id": "WOS:000240214200008"}