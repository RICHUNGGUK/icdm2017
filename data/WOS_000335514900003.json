{"auto_keywords": [{"score": 0.04881990207677593, "phrase": "software_team"}, {"score": 0.00481495049065317, "phrase": "root_causes"}, {"score": 0.0047784273577245505, "phrase": "defects_injected"}, {"score": 0.00463507149599759, "phrase": "industrial_study_of_the_distributed_health-care_system._a_root_cause"}, {"score": 0.00434449804021954, "phrase": "root_cause"}, {"score": 0.004311527998148399, "phrase": "software_defect"}, {"score": 0.004198082549566806, "phrase": "software_engineers"}, {"score": 0.004150377643719188, "phrase": "development_process"}, {"score": 0.0040720661634333424, "phrase": "main_concerns"}, {"score": 0.004025787455454387, "phrase": "software_team_leader"}, {"score": 0.00394981748347167, "phrase": "project_manager"}, {"score": 0.0035772012773052065, "phrase": "cost-benefit_scheme"}, {"score": 0.003443402656397069, "phrase": "skill_weakness"}, {"score": 0.003404244237372396, "phrase": "team_capability"}, {"score": 0.0033399639721674954, "phrase": "effective_in-process_feedback"}, {"score": 0.0032894118890753805, "phrase": "causal_analysis"}, {"score": 0.003264422557779248, "phrase": "software_defects"}, {"score": 0.0032272929113113203, "phrase": "proposed_analysis_scheme"}, {"score": 0.0032027739752274, "phrase": "orthogonal_root_cause_definitions"}, {"score": 0.0031784407245606704, "phrase": "role-based_root_cause_types"}, {"score": 0.0030017207229983385, "phrase": "distributed_health-care_system"}, {"score": 0.002900426826591769, "phrase": "proposed_scheme"}, {"score": 0.002824005136794786, "phrase": "root_cause_ratios"}, {"score": 0.0024522007854499554, "phrase": "design_and_implementation_phases"}, {"score": 0.002405853977978678, "phrase": "correction_activities"}, {"score": 0.0023694065215394593, "phrase": "designers'_skills"}, {"score": 0.002220551141101661, "phrase": "top_priorities"}, {"score": 0.0021049977753042253, "phrase": "team_leader"}], "paper_keywords": ["Defect causal analysis", " root cause classification", " in-process feedback", " team capability index", " software measurement"], "paper_abstract": "A root cause is a source of software defect, whose removal decreases or removes the defect. A root cause of software defect is injected into the software by software engineers during the development process. One of the main concerns of the software team leader, such as the project manager, is to determine who injected various root causes of the defects into the software and when these have been injected. In this paper, a cost-benefit scheme is presented, which allows a software team to determine skill weakness and improve team capability. The scheme provides effective in-process feedback based on the causal analysis of software defects. The proposed analysis scheme includes orthogonal root cause definitions, role-based root cause types, and gradational correction actions. In the experiment, the projects of a distributed health-care system are used to verify the efficiency of the proposed scheme. The results show that the root cause ratios (RCR) are 33.8%, 30.6%, 21.9%, 10.7%, and 3.0% in design, implementation, analysis, business and deployment, respectively. The defects in the projects mainly occurred during the design and implementation phases of the projects. Correction activities to enhance the designers' skills, such as exception handling (40.5%) and DB/data schema (25.0%), are the top priorities that must be addressed by the software team. The findings can help the team leader to determine methods to improve these weaknesses.", "paper_title": "AN ANALYSIS OF THE ROOT CAUSES OF DEFECTS INJECTED INTO THE SOFTWARE BY THE SOFTWARE TEAM: AN INDUSTRIAL STUDY OF THE DISTRIBUTED HEALTH-CARE SYSTEM", "paper_id": "WOS:000335514900003"}