{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "high-level_nondeterministic_abstractions"}, {"score": 0.004461359547152617, "phrase": "high-level_abstractions"}, {"score": 0.0038789122930433305, "phrase": "advanced_features"}, {"score": 0.0037336520904376687, "phrase": "recent_constraint_languages"}, {"score": 0.003245900020944865, "phrase": "nondeterministic_nature"}, {"score": 0.0029691377785333872, "phrase": "natural_iterative_style"}, {"score": 0.0022948115169459334, "phrase": "gecode"}, {"score": 0.0021049977753042253, "phrase": "programming_search_procedures"}], "paper_keywords": [""], "paper_abstract": "This paper presents high-level abstractions for nondeterministic search in C++ which provide the counterpart to advanced features found in recent constraint languages. The abstractions have several benefits: they explicitly highlight the nondeterministic nature of the code, provide a natural iterative style, simplify debugging, and are efficiently implementable using macros and continuations. Their efficiency is demonstrated by comparing their performance with the C++ library GECODE, both for programming search procedures and search engines.", "paper_title": "High-level nondeterministic abstractions in C++", "paper_id": "WOS:000241582400026"}