{"auto_keywords": [{"score": 0.04726673405217003, "phrase": "pard"}, {"score": 0.007152368807539886, "phrase": "differentiated_services"}, {"score": 0.005580683398931279, "phrase": "hardware_components"}, {"score": 0.00475070135279933, "phrase": "programmable_architecture"}, {"score": 0.00432423070113186, "phrase": "new_programming_interface"}, {"score": 0.004266501496765747, "phrase": "application's_high-level_information"}, {"score": 0.00418134346679498, "phrase": "service_requirements"}, {"score": 0.004084129504819342, "phrase": "new_functionalities"}, {"score": 0.004029097293493232, "phrase": "tag-based_rules"}, {"score": 0.0037930162319613856, "phrase": "inherently_a_network"}, {"score": 0.003643040616935664, "phrase": "noc"}, {"score": 0.0035344448639851827, "phrase": "software-defined_networking"}, {"score": 0.003498968822873231, "phrase": "intra-computer_network"}, {"score": 0.0033718991936259038, "phrase": "semantic_gap"}, {"score": 0.0033492947290751996, "phrase": "high-level_applications"}, {"score": 0.0033268412940032103, "phrase": "underlying_hardware_packets"}, {"score": 0.003271361898648331, "phrase": "high-level_semantic_tag"}, {"score": 0.0029473940028924748, "phrase": "programmable_control_planes"}, {"score": 0.0026111116934081284, "phrase": "control_planes"}, {"score": 0.002584879320145739, "phrase": "device_file_tree"}, {"score": 0.0025503112711036994, "phrase": "uniform_programming_interface"}, {"score": 0.002474209809122618, "phrase": "full-system_simulation_results"}, {"score": 0.00241658945942583, "phrase": "latency-critical_memcached_applications"}, {"score": 0.0023523750536537102, "phrase": "four-core_computer's_cpu_utilization"}, {"score": 0.0022668507535947976, "phrase": "tail_latency"}, {"score": 0.002251637552201872, "phrase": "fpga_emulation"}, {"score": 0.0022215160785078797, "phrase": "preliminary_rtl_implementation"}, {"score": 0.0021917966722180132, "phrase": "cache_control_plane"}, {"score": 0.0021697677572213086, "phrase": "extra_latency"}, {"score": 0.0021407391538313786, "phrase": "memory_control_plane"}, {"score": 0.0021192223086507946, "phrase": "queueing_delay"}, {"score": 0.0021049977753042253, "phrase": "high-priority_memory-access_requests"}], "paper_keywords": ["Hardware/Software Interface", " QoS", " Data Center"], "paper_abstract": "This paper presents PARD, a programmable architecture for resourcing-on-demand that provides a new programming interface to convey an application's high-level information like quality-of-service requirements to the hardware. PARD enables new functionalities like fully hardware-supported virtualization and differentiated services in computers. PARD is inspired by the observation that a computer is inherently a network in which hardware components communicate via packets (e.g., over the NoC or PCIe). We apply principles of software-defined networking to this intra-computer network and address three major challenges. First, to deal with the semantic gap between high-level applications and underlying hardware packets, PARD attaches a high-level semantic tag (e.g., a virtual machine or thread ID) to each memory-access, I/O, or interrupt packet. Second, to make hardware components more manageable, PARD implements programmable control planes that can be integrated into various shared resources (e.g., cache, DRAM, and I/O devices) and can differentially process packets according to tag-based rules. Third, to facilitate programming, PARD abstracts all control planes as a device file tree to provide a uniform programming interface via which users create and apply tag-based rules. Full-system simulation results show that by co-locating latency-critical memcached applications with other workloads PARD can improve a four-core computer's CPU utilization by up to a factor of four without significantly increasing tail latency. FPGA emulation based on a preliminary RTL implementation demonstrates that the cache control plane introduces no extra latency and that the memory control plane can reduce queueing delay for high-priority memory-access requests by up to a factor of 5.6.", "paper_title": "Supporting Differentiated Services in Computers via Programmable Architecture for Resourcing-on-Demand (PARD)", "paper_id": "WOS:000370874900010"}