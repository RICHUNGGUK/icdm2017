{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "componentized_internet_applications"}, {"score": 0.004267163206961948, "phrase": "transient_and_intermittent_software_failures"}, {"score": 0.004159997145421619, "phrase": "application_modifications"}, {"score": 0.003953639783762917, "phrase": "fault_detection"}, {"score": 0.003805591825381666, "phrase": "rapid_recovery"}, {"score": 0.003663067281537946, "phrase": "recovery_actions"}, {"score": 0.003593812067062062, "phrase": "individual_techniques"}, {"score": 0.003437248394635138, "phrase": "wide_range"}, {"score": 0.003204841443605308, "phrase": "rapidly_changing_software"}, {"score": 0.0031643005824589917, "phrase": "internet_services"}, {"score": 0.0031044458412608084, "phrase": "proposed_framework"}, {"score": 0.003007199190081197, "phrase": "moss"}, {"score": 0.002768293851511292, "phrase": "execution_platform"}, {"score": 0.0024063484128685367, "phrase": "system's_active_end_users"}, {"score": 0.0023309080951251335, "phrase": "continuous_uptime"}, {"score": 0.0021049977753042253, "phrase": "functional_redundancy"}], "paper_keywords": [""], "paper_abstract": "In this paper we show how to reduce downtime of J2EE applications by rapidly and automatically recovering from transient and intermittent software failures, without requiring application modifications. Our prototype combines three application-agnostic techniques: macroanalysis for fault detection and localization, microrebooting for rapid recovery, and external management of recovery actions. The individual techniques are autonomous and work across a wide range of componentized Internet applications, making them well-suited to the rapidly changing software of Internet services. The proposed framework has been integrated with Moss, an open-source J2EE application server. Our prototype provides an execution platform that can automatically recover J2EE applications within seconds of the manifestation of a fault. Our system can provide a subset of a system's active end users with the illusion of continuous uptime, in spite of failures occurring behind the scenes, even when there is no functional redundancy in the system.", "paper_title": "Autonomous recovery in componentized Internet applications", "paper_id": "WOS:000237308400005"}