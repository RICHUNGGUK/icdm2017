{"auto_keywords": [{"score": 0.030162973691103215, "phrase": "candidate_services"}, {"score": 0.00481495049065317, "phrase": "dependence-guided_service_composition"}, {"score": 0.004758457292840376, "phrase": "user-centric_soa._service-oriented_architecture"}, {"score": 0.004565876339189493, "phrase": "dynamic_service_discovery"}, {"score": 0.00443308765153716, "phrase": "user-centric_soa"}, {"score": 0.004253618550301311, "phrase": "application_templates"}, {"score": 0.00387011040370557, "phrase": "application_template"}, {"score": 0.003735349093835257, "phrase": "needed_services"}, {"score": 0.0036697319652557363, "phrase": "key_issue"}, {"score": 0.003626626504149897, "phrase": "user-centric_service_composition"}, {"score": 0.0034185505275141077, "phrase": "correlated_services"}, {"score": 0.0033190180867511605, "phrase": "users'_requirements"}, {"score": 0.0032033846797483475, "phrase": "two-step_composition_process"}, {"score": 0.0031285355811105915, "phrase": "first_step"}, {"score": 0.002931569771634119, "phrase": "dependence_information"}, {"score": 0.002651213849567608, "phrase": "second_step"}, {"score": 0.002233301265743633, "phrase": "two-step_process"}, {"score": 0.002181069180139225, "phrase": "dependence_identification_algorithms"}, {"score": 0.0021049977753042253, "phrase": "case_study"}], "paper_keywords": ["Dependence", " ontology", " service composition"], "paper_abstract": "Service-oriented architecture (SOA) is characterized by dynamic service discovery and composition. For user-centric SOA, not only services, workflows, and application templates can be published and discovered for composition. Furthermore, a user can publish an application template and let providers supply the needed services. A key issue in user-centric service composition is to intelligently and effectively discover the subset of correlated services that best match the users' requirements. This paper proposes a two-step composition process. In the first step, users choose templates from ontology with its dependence. The dependence information identifies a set of candidate services and workflows that may be applicable for composition. In the second step, after the templates are selected, users can finalize the selection of services and workflows from a set of candidate services or workflows based on their preference. This two-step process is supported by dependence identification algorithms and is illustrated using a case study.", "paper_title": "Dependence-Guided Service Composition for User-Centric SOA", "paper_id": "WOS:000341567800022"}