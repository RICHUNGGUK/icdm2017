{"auto_keywords": [{"score": 0.0326163830602888, "phrase": "input_data"}, {"score": 0.00481495049065317, "phrase": "time_constraint"}, {"score": 0.004470823343432748, "phrase": "self-organizing_neural_network_models"}, {"score": 0.004400329132129292, "phrase": "real-time_applications"}, {"score": 0.0039369107163201855, "phrase": "incremental_model"}, {"score": 0.0038953958723049287, "phrase": "neural_gas"}, {"score": 0.003753498345597498, "phrase": "growing_neural_gas_network"}, {"score": 0.0035408501923902477, "phrase": "excellent_quality"}, {"score": 0.0034482025128821548, "phrase": "input_space"}, {"score": 0.003322540556404882, "phrase": "real_time_applications"}, {"score": 0.0032355864829403413, "phrase": "time_constraints"}, {"score": 0.0032184707469541446, "phrase": "gng"}, {"score": 0.0031342307827666675, "phrase": "optimal_topological_map"}, {"score": 0.002988101395789399, "phrase": "existing_algorithms"}, {"score": 0.0029409171055888804, "phrase": "proposed_fagng_algorithm"}, {"score": 0.0029098743621130004, "phrase": "multiple_neurons"}, {"score": 0.0026168641536413978, "phrase": "priory_or_online_learnt_model"}, {"score": 0.0025214217930287003, "phrase": "topological_preservation"}, {"score": 0.00241658945942583, "phrase": "neural_network"}, {"score": 0.0024037949232582462, "phrase": "parameter_selection"}, {"score": 0.002316105585203396, "phrase": "best_alternatives"}, {"score": 0.002279508335630797, "phrase": "different_linear"}, {"score": 0.002255431275670053, "phrase": "non-linear_input_spaces"}, {"score": 0.002196342933346204, "phrase": "specific_quality"}, {"score": 0.0021731423856364003, "phrase": "representation_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Self-organizing models", " Topology preservation", " Growing Neural Gas", " Delaunay triangulation", " Temporal constraint"], "paper_abstract": "This paper aims to address the ability of self-organizing neural network models to manage real-time applications. Specifically, we introduce fAGNG (fast Autonomous Growing Neural Gas), a modified learning algorithm for the incremental model Growing Neural Gas (GNG) network. The Growing Neural Gas network with its attributes of growth, flexibility, rapid adaptation, and excellent quality of representation of the input space makes it a suitable model for real time applications. However, under time constraints GNG fails to produce the optimal topological map for any input data set. In contrast to existing algorithms, the proposed fAGNG algorithm introduces multiple neurons per iteration. The number of neurons inserted and input data generated is controlled autonomous and dynamically based on a priory or online learnt model. A detailed study of the topological preservation and quality of representation depending on the neural network parameter selection has been developed to find the best alternatives to represent different linear and non-linear input spaces under time restrictions or specific quality of representation requirements. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Autonomous Growing Neural Gas for applications with time constraint: Optimal parameter estimation", "paper_id": "WOS:000306162600022"}