{"auto_keywords": [{"score": 0.029771583984916066, "phrase": "system_f_omega"}, {"score": 0.02446417992581041, "phrase": "strong_normalisation"}, {"score": 0.004771196027464407, "phrase": "pure_pattern_type_systems"}, {"score": 0.004455409162867219, "phrase": "unified_setting"}, {"score": 0.00429558848734449, "phrase": "barendregt's_lambda-cube"}, {"score": 0.004160435626849478, "phrase": "logical_point"}, {"score": 0.003956558420993431, "phrase": "essential_property"}, {"score": 0.003920573616298175, "phrase": "logical_soundness"}, {"score": 0.0036776458116294986, "phrase": "positive_answer"}, {"score": 0.0036275736378775757, "phrase": "simply-typed_system"}, {"score": 0.0035781807623238905, "phrase": "dependently-typed_system"}, {"score": 0.0033564158934436665, "phrase": "pits"}, {"score": 0.0032064196784562017, "phrase": "untyped_terms"}, {"score": 0.0029396242707327986, "phrase": "original_encoding"}, {"score": 0.0026704265616705023, "phrase": "expressive_power"}, {"score": 0.002539379289856756, "phrase": "original_typing_judgments"}, {"score": 0.002193509835371438, "phrase": "dependent_types"}, {"score": 0.0021243539405631866, "phrase": "intermediate_translation"}, {"score": 0.0021049977753042253, "phrase": "simply-typed_terms"}], "paper_keywords": [""], "paper_abstract": "Pure Pattern Type Systems (PITS) combine the frameworks and capabilities of rewriting and lambda-calculus within a unified setting. Their type systems, which are adapted from Barendregt's lambda-cube, are especially interesting from a logical point of view. Until now, strong normalisation, which is an essential property for logical soundness, has only been conjectured: in this paper, we give a positive answer for the simply-typed system and the dependently-typed system. The proof is based on a translation of terms and types from PITS into the lambda-calculus. First, we deal with untyped terms, ensuring that reductions are faithfully mimicked in the lambda-calculus. For this, we rely on an original encoding of the pattern matching capability of P(2)TS into the System F omega. Then we show how to translate types: the expressive power of System F omega is needed in order to fully reproduce the original typing judgments of P(2)TS. We prove that the encoding is correct with respect to reductions and typing, and we conclude with the strong normalisation of simply-typed P(2) TS terms. The strong normalisation with dependent types is in turn obtained by an intermediate translation into simply-typed terms.", "paper_title": "Strong normalisation in two Pure Pattern Type Systems", "paper_id": "WOS:000257847600002"}