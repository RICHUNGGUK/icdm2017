{"auto_keywords": [{"score": 0.03272920121718557, "phrase": "high-level_languages"}, {"score": 0.00481495049065317, "phrase": "network_speeds"}, {"score": 0.004574085781766281, "phrase": "packet_processing_applications"}, {"score": 0.004278807087784626, "phrase": "suitable_open_source_system"}, {"score": 0.004127753467337283, "phrase": "prototype_platform"}, {"score": 0.004064653055162238, "phrase": "new_network_functionality"}, {"score": 0.003724810609448597, "phrase": "software-only_solutions"}, {"score": 0.0036303546926971966, "phrase": "hardware-based_platforms"}, {"score": 0.003574830654211291, "phrase": "netfpga."}, {"score": 0.0035382855372646164, "phrase": "main_obstacle"}, {"score": 0.0034308688638878286, "phrase": "open_source"}, {"score": 0.003413284742632989, "phrase": "fpga-based_solution"}, {"score": 0.0032256881625734777, "phrase": "hardware_development_skills"}, {"score": 0.0031277316566463978, "phrase": "new_circuit_synthesis_tools"}, {"score": 0.002971016979295967, "phrase": "hardware-based_networking_applications"}, {"score": 0.0028076592725295646, "phrase": "traditional_hardware_description_languages"}, {"score": 0.0026806884201358515, "phrase": "existing_open_source_hardware-based_platforms"}, {"score": 0.0025202582748972122, "phrase": "programming_model"}, {"score": 0.002456272788591051, "phrase": "modern_high-level_synthesis_tools"}, {"score": 0.002357249810661667, "phrase": "network_flow_monitor"}, {"score": 0.0022161333611134806, "phrase": "traditional_hardware_development_cycle"}, {"score": 0.0021049977753042253, "phrase": "development_time"}], "paper_keywords": [""], "paper_abstract": "The rise of network speeds to tens of gigabits per second poses a challenge to develop packet processing applications that can cope with such bit rates. Therefore, the need for a suitable open source system that can be used as a prototype platform to test new network functionality while ensuring line-rate processing, accurate timestamping, and reduced power consumption has become evident. All these requirements cannot be achieved by using software-only solutions, but rather with hardware-based platforms such as NetFPGA. The main obstacle when using this type of open source FPGA-based solution is the cost of development, in both time and hardware development skills required. The spread of new circuit synthesis tools using high-level languages opens the door for the development of hardware-based networking applications with reasonable development effort, compared to the use of traditional hardware description languages. In this article, we describe how existing open source hardware-based platforms for networking applications will be fueled by the change in the programming model of FPGAs provided by modern high-level synthesis tools. For this, we implemented a network flow monitor using high-level languages and compared the effort spent with respect to a traditional hardware development cycle. Preliminary results are very promising, given that development time is reduced from months to weeks.", "paper_title": "Bridging the Gap between Hardware and Software Open Source Network Developments", "paper_id": "WOS:000345579700004"}