{"auto_keywords": [{"score": 0.049604883316905664, "phrase": "equilibrium"}, {"score": 0.00481495049065317, "phrase": "capacity_management"}, {"score": 0.004720043307726269, "phrase": "proportional_qos._differentiated_services_architectures"}, {"score": 0.004581162468419365, "phrase": "class-based_quality_of_service"}, {"score": 0.004358676214574977, "phrase": "qualitative_attributes"}, {"score": 0.004294052530714228, "phrase": "offered_service_classes"}, {"score": 0.0041469500929423595, "phrase": "actual_differentiation"}, {"score": 0.0040048667115255, "phrase": "open_issue"}, {"score": 0.0038869467872381957, "phrase": "proportional_qos_model"}, {"score": 0.0037724857647796813, "phrase": "pre-defined_ratios"}, {"score": 0.003716520760680603, "phrase": "service_class_delays"}, {"score": 0.003661382948704217, "phrase": "related_congestion_measures"}, {"score": 0.0035183010916001664, "phrase": "capacity_assignment"}, {"score": 0.0034834098902271626, "phrase": "service_classes"}, {"score": 0.0033639840192975835, "phrase": "design_objective"}, {"score": 0.003281186608301359, "phrase": "detailed_analysis"}, {"score": 0.0032324864013225166, "phrase": "single_hop_model"}, {"score": 0.0031372369299648203, "phrase": "required_capacity_assignment"}, {"score": 0.0031061129850110994, "phrase": "fixed_flow_rates"}, {"score": 0.002969821115740559, "phrase": "reactive_scenario"}, {"score": 0.0029111767710750117, "phrase": "self-optimizing_users"}, {"score": 0.0028113140998735366, "phrase": "capacity_modifications"}, {"score": 0.0026217213613095322, "phrase": "required_ratios"}, {"score": 0.0025317627242523104, "phrase": "efficient_computation"}, {"score": 0.0024941578231560055, "phrase": "optimal_capacities"}, {"score": 0.0024327171018928458, "phrase": "dynamic_schemes"}, {"score": 0.002408565679880478, "phrase": "capacity_adjustment"}, {"score": 0.0023028105026714533, "phrase": "congestion_control"}, {"score": 0.002268598551466928, "phrase": "absolute_performance_bounds"}, {"score": 0.0022127018991294047, "phrase": "proportional_ones"}, {"score": 0.0021049977753042253, "phrase": "general_topology"}], "paper_keywords": ["Capacity allocation", " dfferentiated services", " Nash equillibirum", " proportional QoS", " selfish routing"], "paper_abstract": "Differentiated services architectures are scalable solutions for providing class-based Quality of Service (QoS) over packet switched networks. While qualitative attributes of the offered service classes are often well defined, the actual differentiation between classes is left as an open issue. We address here the proportional QoS model, which aims at maintaining pre-defined ratios between the service class delays (or related congestion measures). In particular, we consider capacity assignment among service classes as the means for attaining this design objective. Starting with a detailed analysis for the single hop model, we first obtain the required capacity assignment for fixed flow rates. We then analyze the scheme under a reactive scenario, in which self-optimizing users may choose their service class in response to capacity modifications. We demonstrate the existence and uniqueness of the equilibrium in which the required ratios are maintained, and address the efficient computation of the optimal capacities. We further provide dynamic schemes for capacity adjustment, and consider the incorporation of pricing and congestion control to enforce absolute performance bounds on top of the proportional ones. Finally, we extend our basic results to networks with general topology.", "paper_title": "Capacity Management and Equilibrium for Proportional QoS", "paper_id": "WOS:000260463100003"}