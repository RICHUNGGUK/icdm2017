{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "personal_data"}, {"score": 0.004555371402128666, "phrase": "precise_formalization"}, {"score": 0.0036861605703168397, "phrase": "natural_optimization_problem"}, {"score": 0.003487222504700868, "phrase": "suppressed_entries"}, {"score": 0.003366233863411861, "phrase": "stored_values"}, {"score": 0.0032989853590079153, "phrase": "binary_alphabet"}, {"score": 0.0031845067058084583, "phrase": "bounded_number"}, {"score": 0.002907992115184249, "phrase": "different_parameters"}, {"score": 0.0025374674652885354, "phrase": "fixed-parameter_algorithm"}, {"score": 0.0023523750536537102, "phrase": "different_values"}], "paper_keywords": ["Anonymity", " Fixed-parameter complexity", " Approximation algorithms", " Hardness"], "paper_abstract": "The problem of publishing personal data without giving up privacy is becoming increasingly important. A precise formalization that has been recently proposed is the k-anonymity, where the rows of a table are partitioned into clusters of sizes at least k and all rows in a cluster become the same tuple after the suppression of some entries. The natural optimization problem, where the goal is to minimize the number of suppressed entries, is hard even when the stored values are over a binary alphabet or the table consists of a bounded number of columns. In this paper we study how the complexity of the problem is influenced by different parameters. First we show that the problem is W[1]-hard when parameterized by the value of the solution (and k). Then we exhibit a fixed-parameter algorithm when the problem is parameterized by the number of columns and the number of different values in any column. Finally, we prove that k-anonymity is still APX-hard even when restricting to instances with 3 columns and k=3.", "paper_title": "Parameterized complexity of k-anonymity: hardness and tractability", "paper_id": "WOS:000319760900003"}