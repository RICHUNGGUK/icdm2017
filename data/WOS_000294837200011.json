{"auto_keywords": [{"score": 0.048428407558443576, "phrase": "avs"}, {"score": 0.046829777799051314, "phrase": "slice-level_parallelism"}, {"score": 0.03926697824370589, "phrase": "proposed_scheme"}, {"score": 0.03781617653659949, "phrase": "mbg"}, {"score": 0.00481495049065317, "phrase": "many-core_processor"}, {"score": 0.004740476936977635, "phrase": "video_coding_systems"}, {"score": 0.004612896435506914, "phrase": "multi-core_and_many-core_platforms"}, {"score": 0.0044192837023190445, "phrase": "parallel_video_coding"}, {"score": 0.004266907250334316, "phrase": "video_quality"}, {"score": 0.004008820473628357, "phrase": "multi-core_or_many-core_platforms"}, {"score": 0.0037079710789139305, "phrase": "video_frames"}, {"score": 0.0036363418376496484, "phrase": "rectangular_mbg_regions"}, {"score": 0.0034564928013639125, "phrase": "slice-level_scheme"}, {"score": 0.0032855095476183372, "phrase": "vertical_partitioning_scheme"}, {"score": 0.0031721009574803127, "phrase": "confining_and_motion_vector_difference"}, {"score": 0.002766963729586353, "phrase": "mbg_parallel_scheme"}, {"score": 0.002702887319160534, "phrase": "macro-block-level_parallelism"}, {"score": 0.002529262410667079, "phrase": "ippp"}, {"score": 0.002154930852763048, "phrase": "single-core_implementation"}, {"score": 0.002129818297734379, "phrase": "similar_coding_performance"}], "paper_keywords": ["Parallel video encoding", " Macro-block group", " Many-core processor"], "paper_abstract": "Implementation of video coding systems such as H.264/AVC and AVS on multi-core and many-core platforms is attracting much attention. The slice-level parallelism is popular in parallel video coding for its simplicity and flexibility, however, the video quality loses greatly since the partitioning of slices breaks the dependency between macro-blocks, especially on multi-core or many-core platforms. To address this problem, we propose a Macro-Block Group (MBG) parallel scheme for parallel AVS coding. In the proposed scheme, video frames are equally divided into rectangular MBG regions; each MBG consists of more rows and less columns of macro-blocks than the slice-level scheme. Given that MBG is not syntactically supported by AVS, a vertical partitioning scheme is introduced. Additionally, we use mode confining and motion vector difference adjusting techniques to keep consistent with the standard. Two MBG parallel schemes (5 x 9 MBG partition and 8 x 7 MBG partition) are developed on a TILE64 many-core platform, where P/B frames use the MBG parallel scheme and I frames use the macro-block-level parallelism. Experimental results show that the proposed scheme of 5 x 9 MBG partition can achieve a reduction of 52% (IPPP) and 41% (IBBP) quality loss while keeping the same speed-up compared with the slice-level parallelism. With more cores employed, the scheme of 8 x 7 MBG partition gains 23.9 times of speed-up compared with the single-core implementation and achieves similar coding performance as the 5 x 9 scheme.", "paper_title": "A Novel Macro-Block Group Based AVS Coding Scheme for Many-Core Processor", "paper_id": "WOS:000294837200011"}