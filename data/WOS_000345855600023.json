{"auto_keywords": [{"score": 0.029908741592305946, "phrase": "editing_spaces"}, {"score": 0.007933132033597344, "phrase": "material_parameters"}, {"score": 0.006113672248642734, "phrase": "linear_operations"}, {"score": 0.00481495049065317, "phrase": "linear_spaces_for_image-"}, {"score": 0.004796223652568968, "phrase": "based_appearance_editing"}, {"score": 0.004740476936977635, "phrase": "spatially-varying_appearance"}, {"score": 0.004217286731331736, "phrase": "local_frame_perturbations"}, {"score": 0.003885668358145471, "phrase": "spatial_variation"}, {"score": 0.00373701482510911, "phrase": "imaging_softwares"}, {"score": 0.0036791522245326514, "phrase": "rich_toolsets"}, {"score": 0.0036505565334886227, "phrase": "well-understood_user_interfaces"}, {"score": 0.0035108659422301985, "phrase": "consistent_results"}, {"score": 0.0034700069041302003, "phrase": "parameters'_behaviours"}, {"score": 0.0030865992688177005, "phrase": "material_representation"}, {"score": 0.0028996963188373144, "phrase": "linear_combination"}, {"score": 0.00253916011199984, "phrase": "non-linear_behaviour"}, {"score": 0.0022583704173318123, "phrase": "microfacet_brdfs"}, {"score": 0.0022407927161620855, "phrase": "subedit_bssrdfs"}, {"score": 0.002129818297734379, "phrase": "local_and_global_contrast_enhancements"}, {"score": 0.0021049977753042253, "phrase": "hardware-accelerated_painting"}], "paper_keywords": ["Appearance editing", " BRDF editing"], "paper_abstract": "Editing spatially-varying appearance is commonplace in most graphics applications. In this paper, we focus on materials whose appearance is described by BRDFs or BSSRDFs, with parameters specified by textures, and with local frame perturbations, namely bump, normal and tangent maps. Editing these materials amounts to editing the textures that encode the spatial variation. To perform these edits, artists commonly adopt imaging softwares since they have rich toolsets and well-understood user interfaces. But editing material parameters as images does not produce consistent results since the parameters' behaviours in their relative spaces are not taken in account. Our goal is to address this issue with a solution that is practical, in that we do not want to change material representation or editing workflow to ensure adoption. We observe that most image editing operations can be written as linear combination of colors. We thus define editing spaces for material parameters such that linear operations in these spaces respect their inherent meaning of the parameters. Transformations to and from editing spaces are non-linear to capture the non-linear behaviour of the parameters. Since GPUs are particularly efficient when executing linear operations, they can be used well with editing spaces. We demonstrate the use of editing spaces to edit microfacet BRDFs and SubEdit BSSRDFs by performing various imaging operations such as layering, linear and non-linear filtering, local and global contrast enhancements, and hardware-accelerated painting.", "paper_title": "AppIm: Linear Spaces for Image-based Appearance Editing", "paper_id": "WOS:000345855600023"}