{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "formal_language_theory"}, {"score": 0.004672953146379813, "phrase": "formal_language_theory_approach"}, {"score": 0.004562362497952548, "phrase": "security_aspects"}, {"score": 0.004508048086020253, "phrase": "protocol_design"}, {"score": 0.004454377387615279, "phrase": "message-based_interactions"}, {"score": 0.004401342842183475, "phrase": "complex_composed_systems"}, {"score": 0.004120694410890683, "phrase": "large_share"}, {"score": 0.00407161650109722, "phrase": "modern_computing_systems'_insecurity"}, {"score": 0.0038348235692738783, "phrase": "input_validation"}, {"score": 0.003633464433320317, "phrase": "programming_methodology"}, {"score": 0.0034841647157189985, "phrase": "real-world_security_flaws"}, {"score": 0.003361069456060196, "phrase": "different_classes"}, {"score": 0.003321008590273796, "phrase": "protocol_complexity"}, {"score": 0.0031465436619697385, "phrase": "exploit_development_technique"}, {"score": 0.0030904433394138963, "phrase": "parse_tree_differential_attack"}, {"score": 0.002910545717767559, "phrase": "formal_grammars"}, {"score": 0.0027741761880779535, "phrase": "negative_impact"}, {"score": 0.0027575842698911173, "phrase": "unnecessarily_increased_protocol_complexity"}, {"score": 0.0025660347613972573, "phrase": "verifiable_critical_implementation_components"}, {"score": 0.0025354258731826148, "phrase": "considerably_less_burden"}, {"score": 0.00241658945942583, "phrase": "current_state"}, {"score": 0.002262209824105154, "phrase": "rich_basis"}, {"score": 0.002169132543304096, "phrase": "offensive_analysis"}, {"score": 0.0021049977753042253, "phrase": "automated_defense_tools"}], "paper_keywords": ["Language-theoretic security", " secure composition", " secure protocol design"], "paper_abstract": "We present a formal language theory approach to improving the security aspects of protocol design and message-based interactions in complex composed systems. We argue that these aspects are responsible for a large share of modern computing systems' insecurity. We show how our approach leads to advances in input validation, security modeling, attack surface reduction, and ultimately, software design and programming methodology. We cite examples based on real-world security flaws in common protocols, representing different classes of protocol complexity. We also introduce a formalization of an exploit development technique, the parse tree differential attack, made possible by our conception of the role of formal grammars in security. We also discuss the negative impact unnecessarily increased protocol complexity has on security. This paper provides a foundation for designing verifiable critical implementation components with considerably less burden to developers than is offered by the current state of the art. In addition, it offers a rich basis for further exploration in the areas of offensive analysis and, conversely, automated defense tools, and techniques.", "paper_title": "Security Applications of Formal Language Theory", "paper_id": "WOS:000321641800014"}