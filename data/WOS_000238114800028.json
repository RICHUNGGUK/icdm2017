{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_caching_groups"}, {"score": 0.004759635663291431, "phrase": "distributed_collaborative_caching_groups"}, {"score": 0.004402448972861048, "phrase": "distributed_caching_protocols"}, {"score": 0.004377077848734575, "phrase": "group_members"}, {"score": 0.004095567486538121, "phrase": "origin_server"}, {"score": 0.0036482665232275583, "phrase": "common_caching_scheme"}, {"score": 0.0032590737464194696, "phrase": "miss-request_streams"}, {"score": 0.003120657021758196, "phrase": "local_replacement_algorithm"}, {"score": 0.0029794666460666646, "phrase": "caching_behavior"}, {"score": 0.00282822695516646, "phrase": "static_rule-of-thumb_policy"}, {"score": 0.00273167822885383, "phrase": "average_object_access_cost"}, {"score": 0.0026768834201668806, "phrase": "system_parameters"}, {"score": 0.002518989593177879, "phrase": "feedback_control_approach"}, {"score": 0.0023363141951290526, "phrase": "interaction_parameters"}, {"score": 0.0022565201625076876, "phrase": "good_convergence"}, {"score": 0.0022434880661725493, "phrase": "stability_properties"}, {"score": 0.00212336833618933, "phrase": "minimal_access_cost"}, {"score": 0.0021049977753042253, "phrase": "static-parameter_schemes"}], "paper_keywords": ["cooperative caching", " feedback control", " simulation"], "paper_abstract": "We consider distributed collaborative caching groups where individual members are autonomous and self-aware. Such groups have been emerging in many new overlay and peer-to-peer applications. In a recent work of ours, we considered distributed caching protocols where group members (nodes) cooperate to satisfy requests for information objects either locally or remotely from the group, or otherwise from the origin server. In such setting, we identified the problem of a node being mistreated, i.e., its access cost for fetching information objects becoming worse with cooperation than without. We identified two causes of mistreatment: (1) the use of a common caching scheme which controls whether a node should not rely on other nodes in the group by keeping its own local copy of the object once retrieved from the group, and (2) the state interaction that can take place when the miss-request streams from other nodes in the group are allowed to affect the state of the local replacement algorithm. We also showed that both these issues can be addressed by introducing two simple additional parameters that affect the caching behavior (the reliance and the interaction parameters). In this paper, we argue against a static rule-of-thumb policy of setting these parameters since the performance, in terms of average object access cost, depends on a multitude of system parameters (namely, group size, cache sizes, demand skewness, and distances). We then propose a feedback control approach to mitigating mistreatment in distributed caching groups. In our approach, a node independently emulates its performance as if it were acting selfishly and then adapts its reliance and interaction parameters in the direction of reducing its measured access cost below its emulated selfish cost. To ensure good convergence and stability properties, we use a (Prop ortional-Integral-Differential) PID-style controller. Our simulation results show that our controller adapts to the minimal access cost and outperforms static-parameter schemes.", "paper_title": "Feedback control approach to mitigating mistreatment in distributed caching groups", "paper_id": "WOS:000238114800028"}