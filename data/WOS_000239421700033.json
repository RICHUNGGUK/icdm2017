{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "weighted_sequences"}, {"score": 0.01102577030548139, "phrase": "hamming_distance"}, {"score": 0.007755309738492075, "phrase": "infinite_alphabets"}, {"score": 0.004328576620172575, "phrase": "weighted_sequence"}, {"score": 0.004273601449537163, "phrase": "\"statistical_image"}, {"score": 0.0040779081518317415, "phrase": "symbol's_occurrence"}, {"score": 0.00402610372759447, "phrase": "text_location"}, {"score": 0.003468053168607071, "phrase": "high_enough_probability"}, {"score": 0.0032531496610470377, "phrase": "efficient_algorithms"}, {"score": 0.0028992294924613327, "phrase": "weighted_text"}, {"score": 0.002838033152426417, "phrase": "pattern_length"}, {"score": 0.002801935384649699, "phrase": "edit_distance"}, {"score": 0.0026282000779095987, "phrase": "edit_distance_definition"}, {"score": 0.002550842302473891, "phrase": "space_considerations"}, {"score": 0.0025183881730011597, "phrase": "edit_distance_details"}, {"score": 0.002465210678474529, "phrase": "journal_version"}, {"score": 0.0023824468367751365, "phrase": "weighted_matching"}, {"score": 0.0023221983158528163, "phrase": "exact_weighted_matching"}, {"score": 0.0021504218042734677, "phrase": "text_symbols"}, {"score": 0.002132135985573126, "phrase": "non-zero_probability"}, {"score": 0.0021049977753042253, "phrase": "weighted_hamming_distance"}], "paper_keywords": [""], "paper_abstract": "Weighted sequences have been recently introduced as a tool to handle a set of sequences that are not identical but have many local similarities. The weighted sequence is a \"statistical image\" of this set, where the probability of every symbol's occurrence at every text location is given. We address the problem of approximately matching a pattern in such a weighted sequence. The pattern is a given string and we seek all locations in the set where the pattern occurs with a high enough probability. We define the notion of Hamming distance and edit distance in weighted sequences and give efficient algorithms for computing them. We compute two versions of the Hamming distance in time O(n root m log m), where n is the length of the weighted text and m is the pattern length. The edit distance is computed in time O(nm) and O(nm(2)), depending on the edit distance definition used. Unfortunately, due to space considerations, the edit distance details are left to the journal version. We also define the notion of weighted matching in infinite alphabets and show that exact weighted matching can be computed in time O(s log(2) s), where s is the number of text symbols having non-zero probability. The weighted Hamming distance over infinite alphabets can be computed in time min(O(kn root s + s(3)/(2) log(2) s), O(s(4/3)m(1/3) log s)).", "paper_title": "Approximate matching in weighted sequences", "paper_id": "WOS:000239421700033"}