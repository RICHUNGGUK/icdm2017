{"auto_keywords": [{"score": 0.048734215142491696, "phrase": "automated_planning"}, {"score": 0.029014381719597578, "phrase": "rnpc"}, {"score": 0.00481495049065317, "phrase": "time_constraints"}, {"score": 0.004613516457919661, "phrase": "main_goal"}, {"score": 0.004569905085027681, "phrase": "nearest_prototype_classification"}, {"score": 0.004483909657713567, "phrase": "storage_space"}, {"score": 0.004441517985511521, "phrase": "retrieval_time"}, {"score": 0.004215397034321004, "phrase": "relational_data"}, {"score": 0.004175533280178052, "phrase": "relational_distance_metrics"}, {"score": 0.004019797503157808, "phrase": "classical_distances"}, {"score": 0.00398177607914381, "phrase": "euclidean_distance"}, {"score": 0.0037610536973798113, "phrase": "relational_nearest_prototype_classifiers"}, {"score": 0.0036207206487324506, "phrase": "relational_instance-based_learning"}, {"score": 0.0035864955168255826, "phrase": "relational"}, {"score": 0.003569466869669311, "phrase": "ibl"}, {"score": 0.0035356745476539885, "phrase": "ribl"}, {"score": 0.003199687131875466, "phrase": "similar_accuracy"}, {"score": 0.0026202187680903063, "phrase": "modeling_task"}, {"score": 0.00258307991054107, "phrase": "relational_policy"}, {"score": 0.002522344964242888, "phrase": "ibl_approach"}, {"score": 0.0024051153560799335, "phrase": "planning_system"}, {"score": 0.0022715929119140194, "phrase": "learning_examples"}, {"score": 0.0021971473452127126, "phrase": "resulting_policy"}, {"score": 0.0021049977753042253, "phrase": "original_planning_system"}], "paper_keywords": ["Nearest prototype classification", " Relational learning", " Relational instance-based learning", " Automated planning"], "paper_abstract": "The main goal of Nearest Prototype Classification is to reduce storage space and retrieval time of classical Instance-Based Learning (IBL) algorithms. This motivation is higher in relational data since relational distance metrics are much more expensive to compute than classical distances like Euclidean distance. In this paper, we present an algorithm to build Relational Nearest Prototype Classifiers (RNPCs). When compared with Relational Instance-Based Learning (Relational IBL or RIBL) approaches, the algorithm is able to dramatically reduce the number of instances by selecting the most relevant prototypes, maintaining similar accuracy. The number of prototypes is obtained automatically by the algorithm, although it can also be bound by the user. In this work, we also show an application of RNPC for automated planning. Specifically, we describe a modeling task where a relational policy is built following an IBL approach. This approach uses the decisions taken by a planning system as learning examples. We show that when the number of learning examples is reduced with RNPC, the resulting policy is able to scale up better than the original planning system.", "paper_title": "A prototype-based method for classification with time constraints: a case study on automated planning", "paper_id": "WOS:000306121400004"}