{"auto_keywords": [{"score": 0.0347503086063342, "phrase": "opencl"}, {"score": 0.00481495049065317, "phrase": "gpgpu_programs"}, {"score": 0.004743806810821005, "phrase": "graphics_processing_units"}, {"score": 0.0044695432851061525, "phrase": "general-purpose_applications"}, {"score": 0.004306205029641728, "phrase": "energy_efficiency"}, {"score": 0.004242546312843817, "phrase": "enormous_computing_power"}, {"score": 0.0040571383470418085, "phrase": "gpu_applications"}, {"score": 0.0037940502405699765, "phrase": "gpu_programs"}, {"score": 0.003367611042980526, "phrase": "gpu_kernels"}, {"score": 0.0025178072071268534, "phrase": "permission-based_separation_logic"}, {"score": 0.0023021895404322767, "phrase": "tool_support"}, {"score": 0.0022013916728990564, "phrase": "complex_example_kernel"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal verification", " Separation logic", " Permissions", " GPU programming"], "paper_abstract": "Graphics Processing Units (GPUs) are increasingly used for general-purpose applications because of their low price, energy efficiency and enormous computing power. Considering the importance of GPU applications, it is vital that the behaviour of GPU programs can be specified and proven correct formally. This paper presents a logic to verify GPU kernels written in OpenCL, a platform-independent low-level programming language. The logic can be used to prove both data-race-freedom and functional correctness of kernels. The verification is modular, based on ideas from permission-based separation logic. We present the logic and its soundness proof, and then discuss tool support and illustrate its use on a complex example kernel. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Specification and verification of GPGPU programs", "paper_id": "WOS:000344578800008"}