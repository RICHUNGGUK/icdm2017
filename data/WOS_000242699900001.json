{"auto_keywords": [{"score": 0.04714232995455613, "phrase": "concordance_program"}, {"score": 0.004644146045859622, "phrase": "author's_experiences"}, {"score": 0.004439097815805505, "phrase": "old_west_norse"}, {"score": 0.004339979174946844, "phrase": "old_icelandic"}, {"score": 0.004281568920264999, "phrase": "runic_swedish"}, {"score": 0.004092463367307375, "phrase": "character_repertoire"}, {"score": 0.0040373708328770306, "phrase": "standard_one-byte_character_encoding"}, {"score": 0.0038940456114462405, "phrase": "unicode"}, {"score": 0.0037219886365287085, "phrase": "external_files"}, {"score": 0.002968998336566873, "phrase": "linux"}, {"score": 0.002837841767705612, "phrase": "windows"}, {"score": 0.0022940375532231145, "phrase": "code_conversion"}, {"score": 0.002202469129781332, "phrase": "library-provided_code_conversion_facets"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["C plus", " locale", " code conversion"], "paper_abstract": "This paper describes some of the author's experiences from a C++ implementation of a concordance program for texts in Old West Norse (also known as Old Icelandic) and Runic Swedish. Since the input to the program used a character repertoire that no standard one-byte character encoding covers, it was natural to use Unicode to represent data both inside the program and in external files. Inside the program, each character was represented with C++ 'wide characters'; the input and output was represented in UTF-8. The author constructed C++ code conversion facets that convert data between those two representations during file I/O. This enabled him to successfully compile, and run, the concordance program on both Linux (Fedora Core 3 with gcc 3.4.2) and Windows XP (using Visual C++ NET 2003). The only necessary change to the source when changing platform was isolated to the lines selecting which code conversion facet to use-all other pieces of code remained unchanged. In particular, the author could still use the standard C++ locale framework for collation and code conversion, in spite of the fact that the library-provided code conversion facets had been replaced. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Platform-independent code conversion within the C++ locale framework", "paper_id": "WOS:000242699900001"}