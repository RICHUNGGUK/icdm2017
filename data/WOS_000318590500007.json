{"auto_keywords": [{"score": 0.048231156244864744, "phrase": "tree_automata"}, {"score": 0.00481495049065317, "phrase": "schema-guided_pruning_strategies"}, {"score": 0.004741970098041942, "phrase": "inference"}, {"score": 0.004521179256835894, "phrase": "node_selecting_queries"}, {"score": 0.004450568197899267, "phrase": "unranked_trees"}, {"score": 0.004346704947011699, "phrase": "tree_pruning_strategies"}, {"score": 0.0042119653427658025, "phrase": "additional_assumptions"}, {"score": 0.00414616342377235, "phrase": "node_selection"}, {"score": 0.003923815926819606, "phrase": "small_numbers"}, {"score": 0.0038624981944755813, "phrase": "annotated_examples"}, {"score": 0.003772306776343196, "phrase": "-based_heuristics"}, {"score": 0.0035981701736904495, "phrase": "web_information_extraction"}, {"score": 0.00348655247465418, "phrase": "learning_quality"}, {"score": 0.0033518704336033874, "phrase": "learning_process"}, {"score": 0.00314708280192844, "phrase": "regular_queries"}, {"score": 0.0027741761880779535, "phrase": "polynomial_time"}, {"score": 0.0025038930574283174, "phrase": "traditional_learning_algorithm"}, {"score": 0.002426137929553722, "phrase": "positive_and_negative_examples"}, {"score": 0.0023139986108451946, "phrase": "formal_learning_model"}, {"score": 0.002242127152093798, "phrase": "stable_queries"}, {"score": 0.0021049977753042253, "phrase": "xml_information_extraction"}], "paper_keywords": ["XML information extraction", " XML schemas", " interactive learning", " tree automata", " grammatical inference"], "paper_abstract": "Inference algorithms for tree automata that define node selecting queries in unranked trees rely on tree pruning strategies. These impose additional assumptions on node selection that are needed to compensate for small numbers of annotated examples. Pruning-based heuristics in query learning algorithms for Web information extraction often boost the learning quality and speed up the learning process. We will distinguish the class of regular queries that are stable under a given schema-guided pruning strategy, and show that this class is learnable with polynomial time and data. Our learning algorithm is obtained by adding pruning heuristics to the traditional learning algorithm for tree automata from positive and negative examples. While justified by a formal learning model, our learning algorithm for stable queries also performs very well in practice of XML information extraction.", "paper_title": "Query Induction with Schema-Guided Pruning Strategies", "paper_id": "WOS:000318590500007"}