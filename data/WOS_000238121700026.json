{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "least_cost"}, {"score": 0.004680624753255133, "phrase": "metric_spaces"}, {"score": 0.0036073064072936626, "phrase": "database_elements"}, {"score": 0.003370190834214415, "phrase": "aesa"}, {"score": 0.0032575241721857343, "phrase": "database_objects"}, {"score": 0.0031308163228919773, "phrase": "query_performance"}, {"score": 0.002795228413298423, "phrase": "radically_different_method"}, {"score": 0.0027480831196871093, "phrase": "promising_database_elements"}, {"score": 0.002552781867125423, "phrase": "document_databases"}, {"score": 0.002398382089724878, "phrase": "probabilistic_algorithm"}, {"score": 0.0023445770108033288, "phrase": "relevant_answers"}, {"score": 0.0022278779300543548, "phrase": "exact_algorithm"}, {"score": 0.002190280748985751, "phrase": "virtually_all_elements"}, {"score": 0.0021049977753042253, "phrase": "correct_answers"}], "paper_keywords": [""], "paper_abstract": "Proximity searching consists in retrieving from a database those elements that are similar to a query. As the distance is usually expensive to compute, the goal is to use as few distance computations as possible to satisfy queries. Indexes use precomputed. distances among database elements to speed up queries. As such, a baseline is AESA, which stores all the distances among database objects, but has been unbeaten in query performance for 20 years. In this paper we show that it is possible to improve upon AESA by using a radically different method to select promising database elements to compare against the query. Our experiments show improvements of up to 75% in document databases. We also explore the usage of our method as a probabilistic algorithm that may lose relevant answers. On a database of faces where any exact algorithm must examine virtually all elements, our probabilistic version obtains 85% of the correct answers by scanning only 10% of the database.", "paper_title": "On the least cost for proximity searching in metric spaces", "paper_id": "WOS:000238121700026"}