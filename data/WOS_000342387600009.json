{"auto_keywords": [{"score": 0.04938905581584056, "phrase": "western_mediterranean_sea"}, {"score": 0.03467996204914694, "phrase": "openmp"}, {"score": 0.00481495049065317, "phrase": "regional_ocean_model"}, {"score": 0.004521803560561489, "phrase": "ocean_model"}, {"score": 0.004478308876320956, "phrase": "current_multicore_processor-based_cluster_architectures"}, {"score": 0.0041450181887917135, "phrase": "computational_resources"}, {"score": 0.004026505114417176, "phrase": "best_use"}, {"score": 0.0035852640843794252, "phrase": "internal_parallelism"}, {"score": 0.0033667304423940893, "phrase": "multiple_cores"}, {"score": 0.00317681090697906, "phrase": "cluster_nodes"}, {"score": 0.003115908199991072, "phrase": "computational_mesh"}, {"score": 0.002897710777957041, "phrase": "parallelization_technique"}, {"score": 0.002828418443899226, "phrase": "combined_overall_speedup"}, {"score": 0.0027209713296448296, "phrase": "different_cluster_configurations"}, {"score": 0.0026687841359431105, "phrase": "speedup_factor"}, {"score": 0.0024818194799172263, "phrase": "different_cluster_nodes"}, {"score": 0.002376054894008057, "phrase": "mpi"}, {"score": 0.002177600561610171, "phrase": "computation_and_communication_times"}, {"score": 0.0021049977753042253, "phrase": "synchronization_overhead"}], "paper_keywords": ["Message passing", " shared memory", " hybrid programming", " multicore", " clusters", " ocean model", " finite element method"], "paper_abstract": "This paper focuses on the parallelization of an ocean model applying current multicore processor-based cluster architectures to an irregular computational mesh. The aim is to maximize the efficiency of the computational resources used. To make the best use of the resources offered by these architectures, this parallelization has been addressed at all the hardware levels of modern supercomputers: firstly, exploiting the internal parallelism of the CPU through vectorization; secondly, taking advantage of the multiple cores of each node using OpenMP; and finally, using the cluster nodes to distribute the computational mesh, using MPI for communication within the nodes. The speedup obtained with each parallelization technique as well as the combined overall speedup have been measured for the western Mediterranean Sea for different cluster configurations, achieving a speedup factor of 73.3 using 256 processors. The results also show the efficiency achieved in the different cluster nodes and the advantages obtained by combining OpenMP and MPI versus using only OpenMP or MPI. Finally, the scalability of the model has been analysed by examining computation and communication times as well as the communication and synchronization overhead due to parallelization.", "paper_title": "Efficient parallelization of a regional ocean model for the western Mediterranean Sea", "paper_id": "WOS:000342387600009"}