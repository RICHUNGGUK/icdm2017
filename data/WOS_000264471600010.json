{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "human_interactions"}, {"score": 0.047446295972823384, "phrase": "solution_proposals"}, {"score": 0.04100887100723609, "phrase": "present_work"}, {"score": 0.03363896917055258, "phrase": "proposed_solution"}, {"score": 0.0047810714349158165, "phrase": "sequential_computer_assisted_pattern_recognition"}, {"score": 0.004714023408114857, "phrase": "pattern_recognition_task"}, {"score": 0.004680851157467745, "phrase": "computer_assisted_pattern_recognition"}, {"score": 0.004486640769041646, "phrase": "computer_system"}, {"score": 0.004300453431933622, "phrase": "acceptable_solution"}, {"score": 0.004136548839735555, "phrase": "appropriate_measure"}, {"score": 0.004064117897000019, "phrase": "expected_number"}, {"score": 0.00385431710959668, "phrase": "special_case"}, {"score": 0.003773449694108617, "phrase": "sequential_nature"}, {"score": 0.003629557750546267, "phrase": "language_translation"}, {"score": 0.003603989174919527, "phrase": "speech_transcription"}, {"score": 0.003578600071301459, "phrase": "handwriting_text_transcription"}, {"score": 0.003229870860371533, "phrase": "first_error"}, {"score": 0.0030414140732789186, "phrase": "last_error_correction"}, {"score": 0.0029565620771207003, "phrase": "next_iteration"}, {"score": 0.0027159094186967247, "phrase": "\"correct\"_output"}, {"score": 0.0026214978443388653, "phrase": "conditional_most_probable_output"}, {"score": 0.0025938445887024775, "phrase": "np-hard"}, {"score": 0.0025664295665392203, "phrase": "undecidable_problem"}, {"score": 0.002433754579432554, "phrase": "simple_cases"}, {"score": 0.00241658945942583, "phrase": "complex_dynamic_programming_techniques"}, {"score": 0.0023325586335885104, "phrase": "viterbi_algorithm"}, {"score": 0.0021049977753042253, "phrase": "optimum_strategy"}], "paper_keywords": ["Computer Assisted Pattern Recognition", " Minimizing human interaction", " Optimum parsing"], "paper_abstract": "Given a Pattern Recognition task, Computer Assisted Pattern Recognition can be viewed as a series of solution proposals made by a computer system, followed by corrections made by a user, until an acceptable solution is found. For this kind of systems, the appropriate measure of performance is the expected number of corrections the user has to make. In the present work we study the special case when the solution proposals have a sequential nature. Some examples of this type of tasks are: language translation, speech transcription and handwriting text transcription. In all these cases the output (the solution proposal) is a sequence of symbols. In this framework it is assumed that the user corrects always the first error found in the proposed solution. As a consequence, the prefix of the proposed solution before the last error correction can be assumed error free in the next iteration. Nowadays, all the techniques in the literature relies in proposing, at each step, the most probable suffix given that a prefix of the \"correct\" output is already known. Usually the computation of the conditional most probable output is an NP-Hard or an undecidable problem (and then we have to apply some approximations) or, in some simple cases, complex dynamic programming techniques should be used (usually some variant of the Viterbi algorithm). In the present work we show that this strategy is not optimum when we are interested in minimizing the number of human interactions. Moreover we describe the optimum strategy that is simpler (and usually faster) to compute. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Optimum algorithm to minimize human interactions in sequential Computer Assisted Pattern Recognition", "paper_id": "WOS:000264471600010"}