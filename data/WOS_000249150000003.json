{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computer_science"}, {"score": 0.006198744586083183, "phrase": "information_hiding"}, {"score": 0.004388450908826472, "phrase": "fundamental_nature"}, {"score": 0.0032387402145603412, "phrase": "inference_structures"}, {"score": 0.0031577303835881964, "phrase": "information_neglect"}, {"score": 0.0028775998963807324, "phrase": "interaction_patterns"}, {"score": 0.002535115422089855, "phrase": "primary_factor"}, {"score": 0.0024926348205500715, "phrase": "computer_science_progress"}, {"score": 0.0023296961971785357, "phrase": "ubiquitous_role"}, {"score": 0.002233301265743633, "phrase": "programming_languages"}, {"score": 0.002195866991284673, "phrase": "operating_systems"}, {"score": 0.0021590588269751816, "phrase": "network_architecture"}, {"score": 0.0021049977753042253, "phrase": "design_patterns"}], "paper_keywords": ["abstraction", " computer science", " information hiding", " mathematics"], "paper_abstract": "We characterize abstraction in computer science by first comparing the fundamental nature of computer science with that of its cousin mathematics. We consider their primary products, use of formalism, and abstraction objectives, and find that the two disciplines are sharply distinguished. Mathematics, being primarily concerned with developing inference structures, has information neglect as its abstraction objective. Computer science, being primarily concerned with developing interaction patterns, has information hiding as its abstraction objective. We show that abstraction through information hiding is a primary factor in computer science progress and success through an examination of the ubiquitous role of information hiding in programming languages, operating systems, network architecture, and design patterns.", "paper_title": "Abstraction in computer science", "paper_id": "WOS:000249150000003"}