{"auto_keywords": [{"score": 0.0426592730356598, "phrase": "proposed_dabc_algorithm"}, {"score": 0.015719716506582538, "phrase": "lot-streaming_flow_shop_scheduling_problem"}, {"score": 0.004382364826200616, "phrase": "total_weighted_earliness"}, {"score": 0.0043367547691560175, "phrase": "tardiness_penalties"}, {"score": 0.004224786847720058, "phrase": "-idling_cases"}, {"score": 0.004137288854115515, "phrase": "original_abc_algorithm"}, {"score": 0.0040094142308666975, "phrase": "food_source"}, {"score": 0.003946960862020283, "phrase": "discrete_job_permutation"}, {"score": 0.0038854765143440965, "phrase": "discrete_operators"}, {"score": 0.0038249462699142733, "phrase": "new_neighboring_food_sources"}, {"score": 0.0037653554368382814, "phrase": "employed_bees"}, {"score": 0.003629882559085245, "phrase": "efficient_initialization_scheme"}, {"score": 0.0034992667091713813, "phrase": "earliest_due_date"}, {"score": 0.003462828781537055, "phrase": "edd"}, {"score": 0.003303412571939192, "phrase": "last_machine"}, {"score": 0.0032689959593172843, "phrase": "lsl"}, {"score": 0.002974886152979993, "phrase": "initial_population"}, {"score": 0.002823050755743821, "phrase": "self_adaptive_strategy"}, {"score": 0.0027790254309734428, "phrase": "neighboring_food_sources"}, {"score": 0.0027356847952125433, "phrase": "insert_and_swap_operators"}, {"score": 0.002651015392318126, "phrase": "dabc_algorithm"}, {"score": 0.0025288869172313674, "phrase": "simple_but_effective_local_search_approach"}, {"score": 0.002412371116984224, "phrase": "local_intensification_capability"}, {"score": 0.002337684811187166, "phrase": "experimental_results"}, {"score": 0.002301211274459965, "phrase": "highly_effective_performance"}, {"score": 0.002206700502606511, "phrase": "best_performing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Flow shop scheduling", " Lot-streaming", " Artificial bee colony algorithm", " Weighted earliness and tardiness criterion"], "paper_abstract": "In this paper, a discrete artificial bee colony (DABC) algorithm is proposed to solve the lot-streaming flow shop scheduling problem with the criterion of total weighted earliness and tardiness penalties under both the idling and no-idling cases. Unlike the original ABC algorithm, the proposed DABC algorithm represents a food source as a discrete job permutation and applies discrete operators to generate new neighboring food sources for the employed bees, onlookers and scouts. An efficient initialization scheme, which is based on the earliest due date (EDD), the smallest slack time on the last machine (LSL) and the smallest overall slack time (OSL) rules, is presented to construct the initial population with certain quality and diversity. In addition, a self adaptive strategy for generating neighboring food sources based on insert and swap operators is developed to enable the DABC algorithm to work on discrete/combinatorial spaces. Furthermore, a simple but effective local search approach is embedded in the proposed DABC algorithm to enhance the local intensification capability. Through the analysis of experimental results, the highly effective performance of the proposed DABC algorithm is shown against the best performing algorithms from the literature. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A discrete artificial bee colony algorithm for the lot-streaming flow shop scheduling problem", "paper_id": "WOS:000290351500002"}