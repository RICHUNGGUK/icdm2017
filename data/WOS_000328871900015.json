{"auto_keywords": [{"score": 0.048587603243031505, "phrase": "many-core_architectures"}, {"score": 0.0465082384207292, "phrase": "hard_guarantees"}, {"score": 0.00481495049065317, "phrase": "multiple_hard_latency_and_throughput_guarantees"}, {"score": 0.003996133359116611, "phrase": "large_number"}, {"score": 0.003940286428597882, "phrase": "dynamic_reservation"}, {"score": 0.003912655174107315, "phrase": "communication_resources"}, {"score": 0.003885216927966404, "phrase": "virtual_channel"}, {"score": 0.0038715749447585652, "phrase": "nocs"}, {"score": 0.0037508743235608872, "phrase": "concurrent_communication"}, {"score": 0.003672500644750565, "phrase": "router_design"}, {"score": 0.0036467403626789666, "phrase": "best_effort"}, {"score": 0.003621160116056119, "phrase": "connection-oriented_guaranteed_service_communication"}, {"score": 0.003459191419478298, "phrase": "key_contribution"}, {"score": 0.0033988361874354306, "phrase": "virtual_channel_reservation"}, {"score": 0.0033749889869455407, "phrase": "different_bandwidth"}, {"score": 0.0033513085425415545, "phrase": "latency_guarantees"}, {"score": 0.0033277936960179892, "phrase": "simultaneous_guaranteed_service_communication_flows"}, {"score": 0.0031901183059524804, "phrase": "used_scheduling_approach"}, {"score": 0.002994178996584381, "phrase": "latency_requirements"}, {"score": 0.0029109914689364465, "phrase": "dynamically_changing_application_requirements"}, {"score": 0.002810240488642749, "phrase": "good_scalability"}, {"score": 0.0027034263575471352, "phrase": "required_extension"}, {"score": 0.0026750045328382717, "phrase": "network_interface"}, {"score": 0.0026375718041787, "phrase": "proposed_concept"}, {"score": 0.0025915147359879616, "phrase": "software_perspective"}, {"score": 0.00247548600804924, "phrase": "guaranteed_service_connections"}, {"score": 0.0024408384127819734, "phrase": "applications_bandwidth_requirements"}, {"score": 0.0024236964502593254, "phrase": "simulation_results"}, {"score": 0.0023897719795915, "phrase": "state-of-the-art_arbitration_schemes"}, {"score": 0.0022667208478315323, "phrase": "synthesis_results"}, {"score": 0.002242879896352752, "phrase": "low_area_overhead"}, {"score": 0.0022114807037424944, "phrase": "energy_consumption"}, {"score": 0.0021499920551456956, "phrase": "qos-constraint_many-core_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "In many-core architectures different distributed applications are executed in parallel. The applications may need hard guarantees for communication with respect to latency and throughput to cope with their constraints. Networks on Chip (NoC) are the most promising approach to handle these requirements in architectures with a large number of cores. Dynamic reservation of communication resources in virtual channel NoCs is used to enable quality of service for concurrent communication. This paper presents a router design supporting best effort and connection-oriented guaranteed service communication. The communication resources are shared dynamically between the two communication schemes. The key contribution is a concept for virtual channel reservation supporting different bandwidth and latency guarantees for simultaneous guaranteed service communication flows. Different to state-of-the-art, the used scheduling approach allows to give hard guarantees regarding throughput and latency. The concept enables to adjust the bandwidth and latency requirements of connections at run-time to cope with dynamically changing application requirements. Due to its distributed reservation process and resource allocation it offers good scalability for many-core architectures. The implementation of a router and the required extension of a network interface to support the proposed concept are presented. The software perspective is discussed. An algorithm is presented that is used to establish guaranteed service connections according to the applications bandwidth requirements. Simulation results are compared to state-of-the-art arbitration schemes and show significant improvements of latency and throughput, e.g. for an MPEG4 application. Synthesis results expose the low area overhead and impact on energy consumption which makes the concepts highly attractive for QoS-constraint many-core architectures. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Providing multiple hard latency and throughput guarantees for packet switching networks on chip", "paper_id": "WOS:000328871900015"}