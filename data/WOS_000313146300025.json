{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multicore_architectures"}, {"score": 0.0045726187330434025, "phrase": "concurrent_fifo_queue"}, {"score": 0.004342430078306461, "phrase": "widely_used_fundamental_data_structure"}, {"score": 0.003531474887552889, "phrase": "novel_concurrent_fifo_queue_algorithm"}, {"score": 0.003130077012135034, "phrase": "better_scalability"}, {"score": 0.0028715299874549245, "phrase": "concurrent_threads"}, {"score": 0.002544951823639408, "phrase": "cache-line_usage"}, {"score": 0.0022168460543913787, "phrase": "eight_cores"}], "paper_keywords": ["FIFO queue", " multicore processor", " cache-line contention", " compare-and-swap", " fetch-and-store"], "paper_abstract": "A concurrent FIFO queue is a widely used fundamental data structure for parallelizing software. In this letter, we introduce a novel concurrent FIFO queue algorithm for multicore architecture. We achieve better scalability by reducing contention among concurrent threads, and improve performance by optimizing cache-line usage. Experimental results on a server with eight cores show that our algorithm outperforms state-of-the-art algorithms by a factor of two.", "paper_title": "Scalable Cache-Optimized Concurrent FIFO Queue for Multicore Architectures", "paper_id": "WOS:000313146300025"}