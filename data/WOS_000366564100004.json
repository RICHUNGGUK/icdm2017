{"auto_keywords": [{"score": 0.048512039224227546, "phrase": "obda"}, {"score": 0.00481495049065317, "phrase": "rewritable_query_languages"}, {"score": 0.004761850836420121, "phrase": "knowledge_bases"}, {"score": 0.004709333998298903, "phrase": "ontology-based_data_access"}, {"score": 0.004504969093304219, "phrase": "relational_databases"}, {"score": 0.004054299982508618, "phrase": "actual_relations"}, {"score": 0.0035290250358997904, "phrase": "resulting_query"}, {"score": 0.0034324073240680213, "phrase": "classical_database_techniques"}, {"score": 0.003265090934183249, "phrase": "temporal_version"}, {"score": 0.0032290282763977607, "phrase": "obda."}, {"score": 0.003158088307044493, "phrase": "generic_temporal_query_language"}, {"score": 0.003105905142768581, "phrase": "linear_temporal_logic"}, {"score": 0.002873524721802591, "phrase": "temporal_properties"}, {"score": 0.0028417741269408194, "phrase": "dynamic_systems"}, {"score": 0.002763919794139171, "phrase": "context-aware_applications"}, {"score": 0.0026881926384093088, "phrase": "specific_situations"}, {"score": 0.002585638506308606, "phrase": "atemporal_queries"}, {"score": 0.0024323098907299027, "phrase": "corresponding_temporal_queries"}, {"score": 0.002275369652100353, "phrase": "temporal_database"}, {"score": 0.0021763973978248005, "phrase": "resulting_queries"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Ontology-based data access", " Linear temporal logic", " Query answering", " Rewritability", " Description logic"], "paper_abstract": "Ontology-based data access (OBDA) generalizes query answering in relational databases. It allows to query a database by using the language of an ontology, abstracting from the actual relations of the database. OBDA can sometimes be realized by compiling the information of the ontology into the query and the database. The resulting query is then answered using classical database techniques. In this paper, we consider a temporal version of OBDA. We propose a generic temporal query language that combines linear temporal logic with queries over ontologies. This language is well-suited for expressing temporal properties of dynamic systems and is useful in context-aware applications that need to detect specific situations. We show that, if atemporal queries are rewritable in the sense described above, then the corresponding temporal queries are also rewritable such that we can answer them over a temporal database. We present three approaches to answering the resulting queries. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Temporalizing rewritable query languages over knowledge bases", "paper_id": "WOS:000366564100004"}