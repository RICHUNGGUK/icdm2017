{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "tcp"}, {"score": 0.010802579177804004, "phrase": "atc"}, {"score": 0.007664371528486624, "phrase": "tcp."}, {"score": 0.00710926701012588, "phrase": "ad_hoc_wireless_networks"}, {"score": 0.006833715277123327, "phrase": "end-to-end_data_rate"}, {"score": 0.0053029426371988585, "phrase": "rate-based_transmission"}, {"score": 0.004757017456572827, "phrase": "transmission_control_protocol"}, {"score": 0.00460125407969429, "phrase": "reliable_transport"}, {"score": 0.0043047957673166175, "phrase": "bursty_transmissions"}, {"score": 0.004101208934887704, "phrase": "high_packet_loss"}, {"score": 0.0040273609512482, "phrase": "tcp's_inability"}, {"score": 0.003990935112773993, "phrase": "congestion_losses"}, {"score": 0.003966833706820594, "phrase": "wireless_losses"}, {"score": 0.0038368442918503072, "phrase": "congestion_control_mechanism"}, {"score": 0.003677522700365517, "phrase": "loss-aware_adaptive_rate_based_tcp"}, {"score": 0.0036102755551906066, "phrase": "packet_loss"}, {"score": 0.0034092396400930446, "phrase": "tcp_code"}, {"score": 0.003388639163205525, "phrase": "ar-tcp"}, {"score": 0.0033376791052242907, "phrase": "small_controller"}, {"score": 0.0033175095965171674, "phrase": "adaptive_transport_controller"}, {"score": 0.0030199761431186434, "phrase": "tcp_flow"}, {"score": 0.0029655392888938295, "phrase": "data_segments"}, {"score": 0.0027574024919144635, "phrase": "freeze_state"}, {"score": 0.0026508118618120114, "phrase": "unnecessary_re-transmissions"}, {"score": 0.0026347821012634586, "phrase": "re-transmission_timeouts"}, {"score": 0.002464709648714996, "phrase": "congestion_situations"}, {"score": 0.002326669201839705, "phrase": "mac_layer"}, {"score": 0.0023125950237602518, "phrase": "extensive_simulations"}, {"score": 0.002236691727668501, "phrase": "varying_network_conditions"}, {"score": 0.0021049977753042253, "phrase": "significant_reduction"}], "paper_keywords": [""], "paper_abstract": "Transmission Control Protocol (TCP), the de-facto protocol for reliable transport over the Internet, does not perform well over Ad hoc Wireless Networks (AWNs). The reasons are as follows. The bursty transmissions made by TCP often lead to congestion in the AWNs which further result in a high packet loss. Another reason is the TCP's inability of distinguishing congestion losses from wireless losses, as a result of which, it invokes the congestion control mechanism for both cases. In order to address these problems, we propose Loss-Aware Adaptive Rate based TCP (AR-TCP), which does the rate-based transmission of TCP segments and also maintains compatibility with TCP. By making a few changes to TCP code, AR-TCP is implemented as a small controller called Adaptive Transport Controller (ATC) that works just below TCP. The ATC adapts to the state of the network, using the feedback about end-to-end data rate and quality of the path of a TCP flow. The ATC schedules the data segments, which are received from TCP, according to the end-to-end data rate. When a path break is predicted, ATC pushes TCP into FREEZE state, in which TCP does not transmit any segments; thus avoids unnecessary re-transmissions and re-transmission timeouts (RTOs). Since the segments are transmitted based on the end-to-end data rate, a TCP flow experiences fewer number of congestion situations, which minimizes the packet loss due to congestion. The rate-based transmission also helps in improving the fairness at MAC layer. Extensive simulations were performed to assess the performance of the AR-TCP under varying network conditions. The simulation results clearly indicate the gain (upto 71%) in the throughput of AR-TCP and also significant reduction (upto 70%) in the packet loss compared to those of TCP.", "paper_title": "AR-TCP: A loss-aware adaptive rate based TCP for ad hoc wireless networks", "paper_id": "WOS:000235341300005"}