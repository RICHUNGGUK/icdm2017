{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "logic_programming_approach"}, {"score": 0.00471228691115201, "phrase": "effective_compiler_settings"}, {"score": 0.004645057834614705, "phrase": "embedded_software"}, {"score": 0.004449045430179066, "phrase": "new_logic-based_method"}, {"score": 0.004261268957001927, "phrase": "compiler_flags"}, {"score": 0.0042004472903194616, "phrase": "embedded_architectures"}, {"score": 0.0039942998891989955, "phrase": "inductive_logic_programming"}, {"score": 0.0038256426589560774, "phrase": "logical_rules"}, {"score": 0.00374399358035391, "phrase": "effective_compiler_flags"}, {"score": 0.003690527690610707, "phrase": "specific_program_features"}, {"score": 0.003611751858608048, "phrase": "earlier_work"}, {"score": 0.003459191419478298, "phrase": "human-readable_rules"}, {"score": 0.0032893028281789287, "phrase": "relational_first-order_approach"}, {"score": 0.0031959843979467704, "phrase": "relevant_features"}, {"score": 0.0030171910207671205, "phrase": "predetermined_attributes"}, {"score": 0.0027675275077806744, "phrase": "execution_times"}, {"score": 0.002669683153809812, "phrase": "embedded_system_development_board"}, {"score": 0.0025752890978323873, "phrase": "ilp_prototype"}, {"score": 0.0025021765811679446, "phrase": "current_state-of-the-art_learning_approach"}, {"score": 0.0022298571016688335, "phrase": "current_state"}, {"score": 0.0021049977753042253, "phrase": "hybrid_approach"}], "paper_keywords": ["inductive logic programming", " embedded system", " compiler optimisation"], "paper_abstract": "This paper introduces a new logic-based method for optimising the selection of compiler flags on embedded architectures. In particular, we use Inductive Logic Programming (ILP) to learn logical rules that relate effective compiler flags to specific program features. Unlike earlier work, we aim to infer human-readable rules and we seek to develop a relational first-order approach which automatically discovers relevant features rather than relying on a vector of predetermined attributes. To this end we generated a data set by measuring execution times of 60 benchmarks on an embedded system development board and we developed an ILP prototype which outperforms the current state-of-the-art learning approach in 34 of the 60 benchmarks. Finally, we combined the strengths of the current state of the art and our ILP method in a hybrid approach which reduced execution times by an average of 8% and up to 50% in some cases.", "paper_title": "A logic programming approach to predict effective compiler settings for embedded software", "paper_id": "WOS:000367692200006"}