{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "p-partition_fronts"}, {"score": 0.004730158389701481, "phrase": "many-core_processors"}, {"score": 0.004524624065803229, "phrase": "new_parallel_algorithm"}, {"score": 0.004444921827311577, "phrase": "collision_detection"}, {"score": 0.00436661740263741, "phrase": "many-core_computing_platforms"}, {"score": 0.0039248128268720645, "phrase": "p-partition_front"}, {"score": 0.003465350958971198, "phrase": "bvh_traversal"}, {"score": 0.003404244237372396, "phrase": "multiple_processing_cores"}, {"score": 0.0032561349010603734, "phrase": "dynamic_balancing"}, {"score": 0.003114449258490062, "phrase": "memory_overhead"}, {"score": 0.003005539334280134, "phrase": "state-of-the-art_parallel_collision_detection_algorithms"}, {"score": 0.0027495914857929584, "phrase": "different_benchmarking_scenarios"}, {"score": 0.002629889135655667, "phrase": "temporal_coherence"}, {"score": 0.0025605773834404253, "phrase": "dynamic_simulation"}, {"score": 0.002515384834484012, "phrase": "rigid_bodies"}, {"score": 0.002470987929071079, "phrase": "cloth_simulation"}, {"score": 0.002405853977978678, "phrase": "random_collision_courses"}, {"score": 0.0022404162042797262, "phrase": "nearly_linear_performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "processing_cores"}], "paper_keywords": ["Collision detection", " p-partition", " static workload balancing"], "paper_abstract": "We present a new parallel algorithm for collision detection using many-core computing platforms of CPUs or GPUs. Based on the notion of a p-partition front, our algorithm is able to evenly partition and distribute the workload of BVH traversal among multiple processing cores without the need for dynamic balancing, while minimizing the memory overhead inherent to the state-of-the-art parallel collision detection algorithms. We demonstrate the scalability of our algorithm on different benchmarking scenarios with and without using temporal coherence, including dynamic simulation of rigid bodies, cloth simulation, and random collision courses. In these experiments, we observe nearly linear performance improvement in terms of the number of processing cores on the CPUs and GPUs.", "paper_title": "Scalable Collision Detection Using p-Partition Fronts on Many-Core Processors", "paper_id": "WOS:000338118700010"}