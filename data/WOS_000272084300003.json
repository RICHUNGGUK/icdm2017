{"auto_keywords": [{"score": 0.0348500503107606, "phrase": "proposed_heuristics"}, {"score": 0.00481495049065317, "phrase": "parallel_applications"}, {"score": 0.004756805752518494, "phrase": "wide_area_grids"}, {"score": 0.0046993598473345395, "phrase": "large_and_dynamic_computational_grids"}, {"score": 0.004558748120167778, "phrase": "wide-area_grids"}, {"score": 0.004395532072377065, "phrase": "large_availability"}, {"score": 0.004289966839994858, "phrase": "computational_resources"}, {"score": 0.004212453011596424, "phrase": "high_variability"}, {"score": 0.003988180913997414, "phrase": "appropriate_schedule_mechanisms"}, {"score": 0.0038453138708790385, "phrase": "application_performance_requirements"}, {"score": 0.0035965032173588753, "phrase": "launch-time_heuristics"}, {"score": 0.003531474887552889, "phrase": "component-based_parallel_applications"}, {"score": 0.00316518932828897, "phrase": "minimal_task_computational_requirement"}, {"score": 0.0030331993611107328, "phrase": "communicating_tasks"}, {"score": 0.0027685531038981847, "phrase": "aging_effect"}, {"score": 0.0027184540871935284, "phrase": "resources_state"}, {"score": 0.0024963543716522087, "phrase": "task_graphs"}, {"score": 0.002466139325703204, "phrase": "grid_platforms"}, {"score": 0.002278440725193307, "phrase": "real_application"}, {"score": 0.0022371907579775796, "phrase": "real_grid"}, {"score": 0.0022101055924375725, "phrase": "experimental_results"}, {"score": 0.0021569129153653777, "phrase": "proposed_solution"}, {"score": 0.0021049977753042253, "phrase": "viable_one"}], "paper_keywords": ["Grid computing", " Wide-area Grids", " Performance requirements", " Static scheduling", " Quality of service"], "paper_abstract": "Large and dynamic computational Grids, generally known as wide-area Grids, are characterized by a large availability, heterogeneity on computational resources, and high variability on their status during the time. Such Grid infrastructures require appropriate schedule mechanisms in order to satisfy the application performance requirements (QoS). In this paper we propose a launch-time heuristics to schedule component-based parallel applications on such kind of Grid. The goal of the proposed heuristics is threefold: to meet the minimal task computational requirement, to maximize the throughput between communicating tasks, and to evaluate on-the-fly the resource availability tominimize the aging effect on the resources state. We evaluate the proposed heuristics by simulations applying it to a suite of task graphs and Grid platforms randomly generated. Moreover, a further test was conducted to schedule a real application on a real Grid. Experimental results shown that the proposed solution can be a viable one.", "paper_title": "A Launch-time Scheduling Heuristics for Parallel Applications on Wide Area Grids", "paper_id": "WOS:000272084300003"}