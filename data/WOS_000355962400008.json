{"auto_keywords": [{"score": 0.046806984950472454, "phrase": "ci"}, {"score": 0.00481495049065317, "phrase": "continuous_integration_builds"}, {"score": 0.004762893197005439, "phrase": "cross-platform_agile_software_development"}, {"score": 0.0047113960612140335, "phrase": "cross-platform_software_development"}, {"score": 0.004610058444728656, "phrase": "agile_development_teams"}, {"score": 0.004535481695403089, "phrase": "continuous_integration"}, {"score": 0.004272164161788242, "phrase": "longer_time"}, {"score": 0.003937459891461576, "phrase": "different_lengths"}, {"score": 0.0037493114715625784, "phrase": "working_circumstances"}, {"score": 0.0035507457285983268, "phrase": "build_automation"}, {"score": 0.0034366728236876016, "phrase": "source_code_modules"}, {"score": 0.003344407169522133, "phrase": "intermediate_and_final_build_artifacts"}, {"score": 0.0030654278282822027, "phrase": "cross-platform_characteristics"}, {"score": 0.0029029754274913803, "phrase": "ten_patterns"}, {"score": 0.002779217021776702, "phrase": "cross-platform_software"}, {"score": 0.0025892330566358503, "phrase": "known_uses"}, {"score": 0.0025334249463305875, "phrase": "existing_software"}, {"score": 0.0024519545383399773, "phrase": "commercial_and_open-source_cross-platform_software"}, {"score": 0.002284290601837099, "phrase": "real-world_commercial_cross-platform_software_product"}, {"score": 0.0021049977753042253, "phrase": "agile_cross-platform_software_development"}], "paper_keywords": ["continuous integration", " software build", " cross-platform software", " pattern", " pattern language", " agile development"], "paper_abstract": "Cross-platform software development poses challenges to agile development teams in practicing continuous integration (CI) builds not only because such builds take a longer time to complete and are more likely to fail, but also because builds of different lengths and scopes must be available depending on the working circumstances. To deal with this situation, three aspects of build automation in CI the structuring of source code modules, the management of intermediate and final build artifacts, and the execution of builds must be re-considered to account for the cross-platform characteristics. This paper discovers and documents a collection of ten patterns of CI builds for use in developing cross-platform software in the three aspects re-considered. These patterns are distilled from known uses of builds in existing software and from our experience in building commercial and open-source cross-platform software. As illustrated with an example adapted from the development of a real-world commercial cross-platform software product, the patterns can be effectively applied to solve many commonly encountered problems in applying CI for agile cross-platform software development.", "paper_title": "Patterns for Continuous Integration Builds in Cross-Platform Agile Software Development", "paper_id": "WOS:000355962400008"}