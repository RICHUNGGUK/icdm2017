{"auto_keywords": [{"score": 0.04763743657605743, "phrase": "col_institution"}, {"score": 0.00481495049065317, "phrase": "behavioral_refinements"}, {"score": 0.003988487841970088, "phrase": "formal_framework"}, {"score": 0.0037456980766939836, "phrase": "observation-oriented_properties"}, {"score": 0.003373334961160647, "phrase": "behavioral_refinement_relations"}, {"score": 0.0032012284065895537, "phrase": "account_implementation_constructions"}, {"score": 0.0030378759123133644, "phrase": "general_strategy"}, {"score": 0.002337684811187166, "phrase": "appropriate_proof_rules"}, {"score": 0.002241679436497569, "phrase": "lifting_construction"}, {"score": 0.0021049977753042253, "phrase": "observability_notions"}], "paper_keywords": [""], "paper_abstract": "The COL institution (constructor-based observational logic) has been introduced as a formal framework to specify both generation and observation-oriented properties of software systems. In this paper we consider behavioral refinement relations between COL-specifications taking into account implementation constructions. We propose a general strategy for proving the correctness of such refinements by reduction to (standard) first-order theorem proving with induction. Technically our strategy relies on appropriate proof rules and on a lifting construction to encode the reachability and observability notions of the COL institution.", "paper_title": "Proving behavioral refinements of COL-specifications", "paper_id": "WOS:000239518200018"}