{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "discrete_indicator_functions"}, {"score": 0.04226255901245674, "phrase": "marching_cubes"}, {"score": 0.004185108816866677, "phrase": "high_degree"}, {"score": 0.003916098498242888, "phrase": "effective_methods"}, {"score": 0.0036914757355166966, "phrase": "discrete_grids"}, {"score": 0.003479692058963528, "phrase": "non-smooth_functions"}, {"score": 0.0030239842475439814, "phrase": "exact_surface"}, {"score": 0.002914288956035066, "phrase": "simple_solution"}, {"score": 0.0027469703311742647, "phrase": "new_function"}, {"score": 0.0025892330566358503, "phrase": "cell_edges"}, {"score": 0.0022005118194652704, "phrase": "empirical_evidence"}], "paper_keywords": [""], "paper_abstract": "We present a method for calculating the boundary of objects from Discrete Indicator Functions that store 2-material volume fractions with a high degree of accuracy. Although Marching Cubes and its derivatives are effective methods for calculating contours of functions sampled over discrete grids, these methods perform poorly when contouring non-smooth functions such as Discrete Indicator Functions. In particular, Marching Cubes will generate surfaces that exhibit aliasing and oscillations around the exact surface. We derive a simple solution to remove these problems by using a new function to calculate the positions of vertices along cell edges that is efficient, easy to implement, and does not require any optimization or iteration. Finally, we provide empirical evidence that the error introduced by our contouring method is significantly less than is introduced by Marching Cubes.", "paper_title": "Contouring Discrete Indicator Functions", "paper_id": "WOS:000289996100016"}