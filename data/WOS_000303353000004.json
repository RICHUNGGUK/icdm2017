{"auto_keywords": [{"score": 0.035876207211546295, "phrase": "basis_vectors"}, {"score": 0.00481495049065317, "phrase": "kernelized_least-squares_regression"}, {"score": 0.004505638402009237, "phrase": "efficient_algorithm"}, {"score": 0.004093453936415085, "phrase": "sparse_regularized_least-squares_predictors"}, {"score": 0.003974349782102708, "phrase": "h_data_points"}, {"score": 0.003161065111494053, "phrase": "training_examples"}, {"score": 0.002914288956035066, "phrase": "sparse_regularized_least-squares_predictor"}, {"score": 0.0026867260506696455, "phrase": "basis_vector_set"}, {"score": 0.0026084451971464845, "phrase": "hold-out_computation"}, {"score": 0.0024586427394152196, "phrase": "speed_improvements"}, {"score": 0.0021049977753042253, "phrase": "cv_rounds"}], "paper_keywords": ["Hold-out", " Cross-validation", " Regularized least-squares", " Least-squares support vector machine", " Kernel methods", " Sparse basis expansions"], "paper_abstract": "We propose an efficient algorithm for calculating hold-out and cross-validation (CV) type of estimates for sparse regularized least-squares predictors. Holding out H data points with our method requires O(min(H (2) n,Hn (2))) time provided that a predictor with n basis vectors is already trained. In addition to holding out training examples, also some of the basis vectors used to train the sparse regularized least-squares predictor with the whole training set can be removed from the basis vector set used in the hold-out computation. In our experiments, we demonstrate the speed improvements provided by our algorithm in practice, and we empirically show the benefits of removing some of the basis vectors during the CV rounds.", "paper_title": "Efficient cross-validation for kernelized least-squares regression with sparse basis expansions", "paper_id": "WOS:000303353000004"}