{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "conservative_time_synchronization_protocols"}, {"score": 0.004689321062844586, "phrase": "distributed_simulation"}, {"score": 0.00462773520532301, "phrase": "computer_simulations"}, {"score": 0.004506968388996092, "phrase": "indispensable_tool"}, {"score": 0.004418456827500267, "phrase": "empirical_study"}, {"score": 0.004360412703519539, "phrase": "large-scale_systems"}, {"score": 0.004274766964161756, "phrase": "timely_simulation"}, {"score": 0.0037450707321601963, "phrase": "full_computational_power"}, {"score": 0.0036958398682001015, "phrase": "modern_multicore_architectures"}, {"score": 0.0036472537997966938, "phrase": "parallel_execution"}, {"score": 0.0035519826240477444, "phrase": "memory_limitations"}, {"score": 0.003482160257566501, "phrase": "single_computer"}, {"score": 0.003050376875258722, "phrase": "modern_multicore_hardware"}, {"score": 0.0028739078688746374, "phrase": "hybrid_approach"}, {"score": 0.002689746491842271, "phrase": "improved_performance"}, {"score": 0.002636828502928141, "phrase": "wider_range"}, {"score": 0.002602127996667857, "phrase": "simulation_scenarios"}, {"score": 0.0025173564697303836, "phrase": "adaptive_algorithm"}, {"score": 0.0024353398669404334, "phrase": "hybrid_protocol"}, {"score": 0.0023249757987087055, "phrase": "manual_user_intervention"}, {"score": 0.0022049428043454966, "phrase": "varying_simulation_conditions"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel", " distributed", " discrete event simulation", " performance analysis", " scalability", " optimization"], "paper_abstract": "Computer simulations have become an indispensable tool for the empirical study of large-scale systems. The timely simulation of these systems, however, is not without its challenges. Simulators have to be able to harness the full computational power of modern multicore architectures through parallel execution and overcome the memory limitations of a single computer. In this paper, we evaluate the performance of a parallel and distributed simulator using several conventional time synchronization protocols executed on modern multicore hardware. In addition, we comprehensively analyze a hybrid approach, combining two traditional protocols, increasing robustness, and enabling improved performance in a wider range of simulation scenarios. Finally, an adaptive algorithm to automatically configure this hybrid protocol is introduced and evaluated, eliminating manual user intervention and further improving robustness with respect to varying simulation conditions. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Revisiting conservative time synchronization protocols in parallel and distributed simulation", "paper_id": "WOS:000329764200009"}