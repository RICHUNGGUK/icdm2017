{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_items"}, {"score": 0.004611554879923759, "phrase": "deterministic_parallel_algorithm"}, {"score": 0.004527024978801684, "phrase": "k-majority_problem"}, {"score": 0.00428257928723, "phrase": "parallel_frequent_items"}, {"score": 0.0038561471948364723, "phrase": "iceberg_queries"}, {"score": 0.0036703791815812328, "phrase": "information_theory"}, {"score": 0.0033047037762521984, "phrase": "offline_setting"}, {"score": 0.003145417398038261, "phrase": "former_case"}, {"score": 0.0030309961956273028, "phrase": "single_scan"}, {"score": 0.0029753513692467315, "phrase": "input_elements"}, {"score": 0.0027120400060701034, "phrase": "e._g._network_traffic_streams"}, {"score": 0.0025495426598675583, "phrase": "parallel_scan"}, {"score": 0.0023967582707115354, "phrase": "actual_k-majority_elements"}, {"score": 0.002239225269052105, "phrase": "first_parallel_algorithm"}, {"score": 0.002198084195030656, "phrase": "proposed_problem"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["data stream", " frequent elements"], "paper_abstract": "We present a deterministic parallel algorithm for the k-majority problem, that can be used to find in parallel frequent items, i.e. those whose multiplicity is greater than a given threshold, and is therefore useful to process iceberg queries and in many other different contexts of applied mathematics and information theory. The algorithm can be used both in the online (stream) context and in the offline setting, the difference being that in the former case we are restricted to a single scan of the input elements, so that verifying the frequent items that have been determined is not allowed (e. g. network traffic streams passing through internet routers), while in the latter a parallel scan of the input can be used to determine the actual k-majority elements. To the best of our knowledge, this is the first parallel algorithm solving the proposed problem. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Finding frequent items in parallel", "paper_id": "WOS:000295293600004"}