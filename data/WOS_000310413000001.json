{"auto_keywords": [{"score": 0.0475616067568024, "phrase": "fuzzy_processors"}, {"score": 0.033146828319321996, "phrase": "proposed_architecture"}, {"score": 0.00481495049065317, "phrase": "fuzzy_inference_processor"}, {"score": 0.004782587436296574, "phrase": "triangular-shaped_membership_function"}, {"score": 0.004686791459644141, "phrase": "fuzzy_logic"}, {"score": 0.004592905436175987, "phrase": "low_computational_performance"}, {"score": 0.004410713064804144, "phrase": "quick_output"}, {"score": 0.0043663006236597975, "phrase": "speed_bottleneck"}, {"score": 0.00413684709497912, "phrase": "fuzzified_input"}, {"score": 0.004053932711987671, "phrase": "inference_processing"}, {"score": 0.004013098289856805, "phrase": "md_calculation"}, {"score": 0.003919404114585274, "phrase": "overall_inference_performance"}, {"score": 0.0038278890186559276, "phrase": "novel_vlsi_architecture"}, {"score": 0.003789322824699646, "phrase": "max-min_circuit"}, {"score": 0.0036883616416213206, "phrase": "triangular_shaped_fuzzified_input"}, {"score": 0.0036511960413423542, "phrase": "antecedent_memberships"}, {"score": 0.0034359094594153304, "phrase": "existing_architectures"}, {"score": 0.0033923354214352914, "phrase": "gaussian"}, {"score": 0.0033669963955215427, "phrase": "membership_functions"}, {"score": 0.0032442139425705578, "phrase": "significant_reduction"}, {"score": 0.003168413874902081, "phrase": "subtracting_operations"}, {"score": 0.003104849179057156, "phrase": "fpga_implementation_report"}, {"score": 0.00305285084207725, "phrase": "proposed_max-min_calculator_circuit"}, {"score": 0.0030118779844670353, "phrase": "slice_latches"}, {"score": 0.002951444412262927, "phrase": "input-output_buffers"}, {"score": 0.002892219926795975, "phrase": "average_fan-out"}, {"score": 0.002805597755796506, "phrase": "trapezoid_mf_based_max-min_calculator_circuit"}, {"score": 0.002721562843196732, "phrase": "max-min_calculator"}, {"score": 0.0027032319980161805, "phrase": "novel_architectures"}, {"score": 0.002685024286204446, "phrase": "fuzzy_decoder"}, {"score": 0.00266693888510356, "phrase": "fuzzy_inferencing_system"}, {"score": 0.0026222551419772867, "phrase": "complete_fuzzy_inference_processor"}, {"score": 0.002509541181962613, "phrase": "xilinx_and_vertex_field_programmable_gate_arrays"}, {"score": 0.002259883463607508, "phrase": "bonded_iobs"}, {"score": 0.0022145052062614514, "phrase": "global_clock_buffers"}, {"score": 0.0021049977753042253, "phrase": "trapezoid_mf"}], "paper_keywords": ["Fuzzy processor", " Inference", " Low power Triangular membership", " VLSI Design"], "paper_abstract": "The limited applications of fuzzy logic in engineering are attributed to low computational performance of fuzzy processors. Fuzzy processors are generally unsuitable to applications which demand quick output. The speed bottleneck of these processors lies in the calculation of matching degree (MD) between the fuzzified input and the antecedent MF in inference processing. The MD calculation always needs very high latency and limits the overall inference performance. In this work, a novel VLSI architecture of a MAX-MIN circuit, for calculating the MD between the triangular shaped fuzzified input and the antecedent memberships has been proposed. The architecture developed is area, power and speed efficient in comparison to existing architectures using trapezoid and Gaussian shaped membership functions (MF). This can be attributed to the significant reduction in the number of multiplexing and subtracting operations in the proposed architecture. The FPGA implementation report has revealed that the proposed MAX-MIN calculator circuit consumes 69.2% reduced number of slice latches, 23% reduced number of input-output buffers (IOB) and the average fan-out has increased by 1.5% in comparison to a Trapezoid MF based MAX-MIN calculator circuit. Further, based on the proposed architecture of MAX-MIN calculator, novel architectures of fuzzy decoder, fuzzy inferencing system, defuzzifier and a complete fuzzy inference processor have been designed and developed. These architectures have been implemented in XILINX and Vertex field programmable gate arrays (FPGA). It has been observed that the proposed triangular MF based fuzzy inference processor is area and speed efficient, as it consumes_2% reduced number of 4 input look-up tables (LUT), 23% reduced number of bonded IOBs, 66.6% reduced number of global clock buffers (BUFG) and has 3.48% increase in fan-out in comparison to a Trapezoid MF based fuzzy processor.", "paper_title": "A Novel VLSI Architecture for a Fuzzy Inference Processor Using Triangular-Shaped Membership Function", "paper_id": "WOS:000310413000001"}