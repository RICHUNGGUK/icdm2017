{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large-scale_unconstrained_two-dimensional_guillotine_cutting_problems"}, {"score": 0.004523455475492876, "phrase": "small_rectangular_objects"}, {"score": 0.0043738432231020885, "phrase": "large_rectangular_sheet"}, {"score": 0.004188702178897384, "phrase": "small_objects"}, {"score": 0.0038230844545071303, "phrase": "high_memory_requirements"}, {"score": 0.003696550794743764, "phrase": "five_improvements"}, {"score": 0.00334144503360907, "phrase": "computational_burden"}, {"score": 0.003293570937654716, "phrase": "knapsack_function"}, {"score": 0.0031238084716187805, "phrase": "proofed_theoretical_results"}, {"score": 0.003034916887102753, "phrase": "search_space"}, {"score": 0.002977061391551628, "phrase": "redundant_solutions"}, {"score": 0.0029062860108533374, "phrase": "feasible_ones"}, {"score": 0.002864628676257225, "phrase": "presented_improvements"}, {"score": 0.002730023736069673, "phrase": "new_dynamic_programming_algorithm"}, {"score": 0.0026395715432958665, "phrase": "russo_et_al"}, {"score": 0.0025155150482635688, "phrase": "proposed_algorithm"}, {"score": 0.0024556852466581527, "phrase": "test_instances"}, {"score": 0.0023066880707738736, "phrase": "obtained_results"}, {"score": 0.0021876814398268775, "phrase": "optimal_solution"}, {"score": 0.002166711569953301, "phrase": "unsolved_very_large_size_instances"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Guillotine cutting", " Knapsack function", " Dynamic programming"], "paper_abstract": "In the unconstrained two-dimensional cutting problems (U2DCP) small rectangular objects have to be extracted from a large rectangular sheet, with no limits on the number of small objects. The exact U2DCP solving approaches present in literature show some limits in tackling very large size instances, due to the high memory requirements. In this work we propose five improvements, three original and two derived from the literature, in order to overcome these limits and to reduce the computational burden of the knapsack function based U2DCP solving approaches. These improvements, based on proofed theoretical results, allow to reduce the search space and to avoid redundant solutions without loss of the feasible ones. The presented improvements, together with several computational refinements, are integrated in a new dynamic programming algorithm, which modifies the one by Russo et al. (2013 [16]). The proposed algorithm has been experienced on test instances present in literature and compared with the best U2DCP solving approaches. The obtained results show that it significantly outperforms them and it determines the optimal solution of unsolved very large size instances. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "An exact dynamic programming algorithm for large-scale unconstrained two-dimensional guillotine cutting problems", "paper_id": "WOS:000337875000008"}