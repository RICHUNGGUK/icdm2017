{"auto_keywords": [{"score": 0.037796462302704156, "phrase": "cyclic_tag_system_emulation_process"}, {"score": 0.004666228956744244, "phrase": "elementary_cellular_automaton_rule"}, {"score": 0.004522080178250592, "phrase": "universal_computation"}, {"score": 0.004382364826200616, "phrase": "cyclic_tag_system"}, {"score": 0.004202751723010111, "phrase": "lempel-ziv"}, {"score": 0.003303412571939192, "phrase": "stepwise_decline"}, {"score": 0.003234934827553253, "phrase": "lz_complexity"}, {"score": 0.0021049977753042253, "phrase": "recursive_language"}], "paper_keywords": ["cyclic tag system", " Lempel-Ziv complexity", " rule 110"], "paper_abstract": "An elementary cellular automaton rule 110 supports universal computation by emulating cyclic tag system. We employ Lempel-Ziv (LZ) complexity as a measure of compressibility and calculate it during the cyclic tag system emulation process by rule 110. We observe the stepwise decline of LZ complexity during the process. That is caused by the conversion of appendants, symbols added onto the end of the tape, into moving data and the elimination of appendants. These phenomena occur if a cyclic tag system emulation process is solving a problem described by a recursive language.", "paper_title": "Compression-Based Analysis of Cyclic Tag System Emulated by Rule 110", "paper_id": "WOS:000334091200002"}