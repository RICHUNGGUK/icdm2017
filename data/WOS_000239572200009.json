{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "attack_graphs"}, {"score": 0.015578419346664837, "phrase": "relational_queries"}, {"score": 0.015438372319943277, "phrase": "attack_graph"}, {"score": 0.00570534471230336, "phrase": "interactive_analysis"}, {"score": 0.004600100053651545, "phrase": "well-orchestrated_network_intrusions"}, {"score": 0.004496280772084575, "phrase": "current_analysis"}, {"score": 0.0037971749182744334, "phrase": "network_intrusions"}, {"score": 0.003465521267039616, "phrase": "decision_support_systems"}, {"score": 0.003325852346387272, "phrase": "current_approaches"}, {"score": 0.0032805541677236325, "phrase": "proprietary_algorithms"}, {"score": 0.0030491497463386924, "phrase": "relational_model"}, {"score": 0.0030076088903023034, "phrase": "necessary_inputs"}, {"score": 0.0029802289354540507, "phrase": "network_configuration"}, {"score": 0.002953097497434808, "phrase": "domain_knowledge"}, {"score": 0.0028210902750714075, "phrase": "relational_views"}, {"score": 0.00274472767672686, "phrase": "typical_analyses"}, {"score": 0.0025047659706737215, "phrase": "proprietary_algorithm"}, {"score": 0.0024706232839499524, "phrase": "different_analysis"}, {"score": 0.002370955769074803, "phrase": "relational_query"}, {"score": 0.0021735249249471614, "phrase": "run_time"}, {"score": 0.0021243539405631866, "phrase": "mature_optimization_techniques"}, {"score": 0.0021049977753042253, "phrase": "relational_databases"}], "paper_keywords": [""], "paper_abstract": "Attack graph is important in defending against well-orchestrated network intrusions. However, the current analysis of attack graphs requires an algorithm to be developed and implemented, causing a delay in the availability of analysis. Such a delay is usually unacceptable because the needs for analyzing attack graphs may change rapidly in defending against network intrusions. An administrator may want to revise an analysis upon observing its outcome. Such an interactive analysis, similar to that in decision support systems, is difficult if at all possible with current approaches based on proprietary algorithms. This paper removes the above limitation and enables interactive analysis of attack graphs. We devise a relational model for representing necessary inputs including network configuration and domain knowledge. We generate the attack graph from those inputs as relational views. We then show that typical analyses of the attack graph can be realized as relational queries against the views. Our approach eliminates the needs for developing a proprietary algorithm for each different analysis, because an analysis is now simply a relational query. The interactive analysis of attack graphs is now possible, because relational queries can be dynamically constructed and revised at run time. Moreover, the mature optimization techniques in relational databases can also improve the performance of the analysis.", "paper_title": "Interactive analysis of attack graphs using relational queries", "paper_id": "WOS:000239572200009"}