{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hierarchical_data"}, {"score": 0.004336115760817672, "phrase": "parent_node"}, {"score": 0.004187284711626886, "phrase": "child_relationship"}, {"score": 0.0036838048761094933, "phrase": "drawing_convention"}, {"score": 0.003435092524339692, "phrase": "standard_layered_drawing_convention"}, {"score": 0.0030572112793962004, "phrase": "standard_bottom-up_tree_layout_algorithms"}, {"score": 0.002421291757425244, "phrase": "larger_hi-trees"}], "paper_keywords": ["Tree layout", " hi-tree", " argument mapping", " decision support", " information visualization"], "paper_abstract": "We introduce hi-trees, a new visual representation for hierarchical data in which, depending on the kind of parent node, the child relationship is represented using either containment or links. We give a drawing convention for hi-trees based on the standard layered drawing convention for rooted trees, then show how to extend standard bottom-up tree layout algorithms to draw hi-trees in this convention. We also explore a number of other more compact layout styles for layout of larger hi-trees and give algorithms for computing these. Finally, we describe two applications of hi-trees: argument mapping and business decision support.", "paper_title": "Hi-Trees and Their Layout", "paper_id": "WOS:000286111600003"}