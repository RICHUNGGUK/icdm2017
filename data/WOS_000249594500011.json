{"auto_keywords": [{"score": 0.03504114121253849, "phrase": "proposed_method"}, {"score": 0.016416657062817835, "phrase": "registration_error"}, {"score": 0.009520854756407472, "phrase": "plastic_distortion"}, {"score": 0.007756373946755177, "phrase": "erroneous_correspondences"}, {"score": 0.005577031433408247, "phrase": "registration_accuracy"}, {"score": 0.00481495049065317, "phrase": "recursive_ridge_mapping"}, {"score": 0.004740476936977635, "phrase": "large_fingerprint_image"}, {"score": 0.0046526204980467676, "phrase": "fingerprint_images"}, {"score": 0.004537994679433309, "phrase": "existing_approaches"}, {"score": 0.004481740377469438, "phrase": "accurate_transformations"}, {"score": 0.004223869454839947, "phrase": "nonuniform_contact"}, {"score": 0.003919154537171269, "phrase": "new_scheme"}, {"score": 0.003894772585498127, "phrase": "mosaicking_fingerprint_images"}, {"score": 0.0036024511695930753, "phrase": "thin-plate_spline_model"}, {"score": 0.0033528672260542854, "phrase": "normalized_distance_map"}, {"score": 0.0031302806539556145, "phrase": "matched_minutia"}, {"score": 0.0030530454211138594, "phrase": "unpaired_ridges"}, {"score": 0.0030245745670310835, "phrase": "overlapping_area"}, {"score": 0.0028414166961286233, "phrase": "inverse_consistency_error"}, {"score": 0.0027368750412376215, "phrase": "geometric_relationship"}, {"score": 0.0023556945924067475, "phrase": "average_registration_error"}, {"score": 0.0022903576812801432, "phrase": "maximum_error"}, {"score": 0.0022407927161620855, "phrase": "verification_test"}, {"score": 0.0022198795731382137, "phrase": "equal_error_rate"}, {"score": 0.002178635733085195, "phrase": "five_images"}], "paper_keywords": ["distance map", " erroneous correspondences", " fingerprint image mosaicking", " information fusion", " inverse consistency", " recursive ridge mapping", " thin-plate spline (TPS)"], "paper_abstract": "To obtain a large fingerprint image from several small partial images, mosaicking of fingerprint images has been recently researched. However, existing approaches cannot provide accurate transformations for mosaics when it comes to aligning images because of the plastic distortion that may occur due to the nonuniform contact between a finger and a sensor or the deficiency of the correspondences in the images. In this paper, we propose a new scheme for mosaicking fingerprint images, which iteratively matches ridges to overcome the deficiency of the correspondences and compensates for the amount of plastic distortion between two partial images by using a thin-plate spline model. The proposed method also effectively eliminates erroneous correspondences and decides how well the transformation is estimated by calculating the registration error with a normalized distance map. The proposed method consists of three phases: feature extraction, transform estimation, and mosaicking. Transform is initially estimated with matched minutia and the ridges attached to them. Unpaired ridges in the overlapping area between two images are iteratively matched by minimizing the registration error, which consists of the ridge matching error and the inverse consistency error. During the estimation, erroneous correspondences are eliminated by considering the geometric relationship between the correspondences and checking if the registration error is minimized or not. In our experiments, the proposed method was compared with three existing methods in terms of registration accuracy, image quality, minutia extraction rate, processing time, reject to fuse rate, and verification performance. The average registration error of the proposed method was less than three pixels, and the maximum error was not more than seven pixels. In a verification test, the equal error rate was reduced from 10% to 2.7% when five images were combined by our proposed method. The proposed method was superior to other compared methods in terms of registration accuracy, image quality, minutia extraction rate, and verification.", "paper_title": "Fingerprint image mosaicking by recursive ridge mapping", "paper_id": "WOS:000249594500011"}