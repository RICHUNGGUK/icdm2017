{"auto_keywords": [{"score": 0.04667104055240119, "phrase": "external_resources"}, {"score": 0.00481495049065317, "phrase": "validate_exception_handling_code"}, {"score": 0.00475924837336259, "phrase": "extended_study"}, {"score": 0.004704187604192605, "phrase": "mobile_application_domain"}, {"score": 0.004613825044585923, "phrase": "exceptional_behavior"}, {"score": 0.003950453462399077, "phrase": "specific_patterns"}, {"score": 0.003627028894710926, "phrase": "bug_repositories"}, {"score": 0.003557283483525861, "phrase": "popular_applications"}, {"score": 0.003516079377293321, "phrase": "increasingly_relevant_domain"}, {"score": 0.003488874535154583, "phrase": "android_mobile_applications"}, {"score": 0.0033429545815200825, "phrase": "fixed_bugs"}, {"score": 0.0032786537599187125, "phrase": "poor_exceptional_handling_code"}, {"score": 0.0029867619862229853, "phrase": "systematic_amplification"}, {"score": 0.002952146666681891, "phrase": "program_space"}, {"score": 0.002752695791351096, "phrase": "program's_exception"}, {"score": 0.0027102313244646934, "phrase": "new_behavior"}, {"score": 0.002668420182908979, "phrase": "external_resource"}, {"score": 0.0025468074858862964, "phrase": "predefined_set"}, {"score": 0.0022841153001549193, "phrase": "bug_reports"}, {"score": 0.0021715177915174375, "phrase": "detected_anomalies"}, {"score": 0.0021049977753042253, "phrase": "great_potential"}], "paper_keywords": ["Experimentation", " Reliability", " Verification", " Test transformation", " test case generation", " exception handling", " test amplification", " mobile applications"], "paper_abstract": "Validating code handling exceptional behavior is difficult, particularly when dealing with external resources that may be noisy and unreliable, as it requires (1) systematic exploration of the space of exceptions that may be thrown by the external resources, and (2) setup of the context to trigger specific patterns of exceptions. In this work, we first present a study quantifying the magnitude of the problem by inspecting the bug repositories of a set of popular applications in the increasingly relevant domain of Android mobile applications. The study revealed that 22% of the confirmed and fixed bugs have to do with poor exceptional handling code, and half of those correspond to interactions with external resources. We then present an approach that addresses this challenge by performing an systematic amplification of the program space explored by a test by manipulating the behavior of external resources. Each amplification attempts to expose a program's exception handling constructs to new behavior by mocking an external resource so that it returns normally or throws an exception following a predefined set of patterns. Our assessment of the approach indicates that it can be fully automated, is powerful enough to detect 67% of the faults reported in the bug reports of this kind, and is precise enough that 78% of the detected anomalies are fixed, and it has a great potential to assist developers.", "paper_title": "Amplifying Tests to Validate Exception Handling Code: An Extended Study in the Mobile Application Domain", "paper_id": "WOS:000341938200006"}