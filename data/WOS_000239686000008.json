{"auto_keywords": [{"score": 0.03895321879707142, "phrase": "dynamic_clock-frequencies"}, {"score": 0.004684157900507474, "phrase": "fixed_clock-frequency"}, {"score": 0.004588389551682397, "phrase": "static_analysis"}, {"score": 0.004525629293824217, "phrase": "fpga_vendor"}, {"score": 0.004494570360108983, "phrase": "supplied_tools"}, {"score": 0.004224418476742716, "phrase": "full_run-time_potential"}, {"score": 0.004025531820226182, "phrase": "specific_device"}, {"score": 0.003916098498242888, "phrase": "specific_operating_environment"}, {"score": 0.0030344301563232944, "phrase": "dynamic_behaviour"}, {"score": 0.0029928611380840757, "phrase": "suitable_clock-frequencies"}, {"score": 0.0028914057633212045, "phrase": "fpga_applications"}, {"score": 0.002851790448644913, "phrase": "varied_operational_environments"}, {"score": 0.0026252106881752067, "phrase": "arbitrary_fpga_designs"}, {"score": 0.0025014259919355453, "phrase": "safe_limit"}, {"score": 0.002467140591777737, "phrase": "current_operating_conditions"}, {"score": 0.0023834640793589435, "phrase": "dynamically_clocking_designs"}, {"score": 0.002302619021497886, "phrase": "speed_improvement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["timing analysis", " better than worst-case performance", " over-clocking", " power-saving", " high-performance computation"], "paper_abstract": "Most FPGA designs run at a fixed clock-frequency determined through static analysis in FPGA vendor supplied tools. Such a clocking strategy cannot take advantage of the full run-time potential of an application running on a specific device and in a specific operating environment. This paper describes methods for using dynamic clock-frequencies to overcome this limitation. We begin by describing a methodology for designing systems which allow dynamic clock-frequencies in FPGAs. We then present a framework for exploring the dynamic behaviour of suitable clock-frequencies for a number of FPGA applications in varied operational environments. Finally we introduce our AutoTEA system, which automatically adds circuitry to arbitrary FPGA designs for dynamically adjusting clock-frequency to a safe limit given current operating conditions. Our results show that dynamically clocking designs can lead to a speed improvement of 33-86% compared to using a fixed, statically estimated clock. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic clock-frequencies for FPGAs", "paper_id": "WOS:000239686000008"}