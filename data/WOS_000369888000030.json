{"auto_keywords": [{"score": 0.04126630752096143, "phrase": "dual-tree_algorithms"}, {"score": 0.00481495049065317, "phrase": "numerous_machine_learning_algorithms"}, {"score": 0.004754600386388821, "phrase": "pairwise_statistical_problems"}, {"score": 0.0043527164193299574, "phrase": "input_points"}, {"score": 0.004164644263639545, "phrase": "tree_structures"}, {"score": 0.0036476222647061243, "phrase": "cover_trees"}, {"score": 0.0036018503805251424, "phrase": "rigorous_worst_case_runtime_guarantees"}, {"score": 0.003235193484261443, "phrase": "problem-independent_runtime_guarantee"}, {"score": 0.003174464741377186, "phrase": "dual-tree_algorithm"}, {"score": 0.0031148723927633955, "phrase": "cover_tree"}, {"score": 0.0029241700853970013, "phrase": "problem-independent_elements"}, {"score": 0.0027106334164712057, "phrase": "problem-dependent_elements"}, {"score": 0.0026597250663309385, "phrase": "runtime_guarantees"}, {"score": 0.002576988153314685, "phrase": "pairwise_statistical_problem"}, {"score": 0.002481085648977413, "phrase": "entire_proof"}, {"score": 0.0024038923350585962, "phrase": "plug-and-play_procedure"}, {"score": 0.002299830460180699, "phrase": "approximate_kernel_density_estimation"}, {"score": 0.002256619934086924, "phrase": "improved_runtime_guarantees"}, {"score": 0.0022142194702079866, "phrase": "mild_assumptions"}, {"score": 0.0021317885325570604, "phrase": "first_linear_runtime_guarantee"}, {"score": 0.0021049977753042253, "phrase": "dual-tree_based_range_search"}], "paper_keywords": ["dual-tree algorithms", " adaptive runtime analysis", " cover tree", " expansion constant", " nearest neighbor search", " kernel density estimation", " range search"], "paper_abstract": "Numerous machine learning algorithms contain pairwise statistical problems at their core that is, tasks that require computations over all pairs of input points if implemented naively. Often, tree structures are used to solve these problems efficiently. Dual-tree algorithms can efficiently solve or approximate many of these problems. Using cover trees, rigorous worst case runtime guarantees have been proven for some of these algorithms. In this paper, we present a problem-independent runtime guarantee for any dual-tree algorithm using the cover tree, separating out the problem-dependent and the problem-independent elements. This allows us to just plug in bounds for the problem-dependent elements to get runtime guarantees for dual-tree algorithms for any pairwise statistical problem without re-deriving the entire proof. We demonstrate this plug-and-play procedure for nearest-neighbor search and approximate kernel density estimation to get improved runtime guarantees. Under mild assumptions, we also present the first linear runtime guarantee for dual-tree based range search.", "paper_title": "Plug-and-Play Dual-Tree Algorithm Runtime Analysis", "paper_id": "WOS:000369888000030"}