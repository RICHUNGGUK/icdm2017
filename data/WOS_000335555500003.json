{"auto_keywords": [{"score": 0.03633255640815652, "phrase": "csp"}, {"score": 0.00481495049065317, "phrase": "state_based_use_case_models"}, {"score": 0.004518442937844318, "phrase": "automatic_generation"}, {"score": 0.004447201233380302, "phrase": "test_cases"}, {"score": 0.004377077848734575, "phrase": "parametrised_use_case"}, {"score": 0.004240116703465252, "phrase": "control_flow"}, {"score": 0.003916098498242888, "phrase": "test_scenario_selection"}, {"score": 0.003823791479971016, "phrase": "particular_traces"}, {"score": 0.0033668870709083884, "phrase": "explicit_input"}, {"score": 0.003313741359811683, "phrase": "output_alphabets"}, {"score": 0.0032355864829403413, "phrase": "test_generation"}, {"score": 0.0030847461428168614, "phrase": "refinement_checking"}, {"score": 0.002964415652865295, "phrase": "fdr_tool"}, {"score": 0.0028037753646260937, "phrase": "input-output_conformance_relation"}, {"score": 0.0025892330566358503, "phrase": "purely_process"}, {"score": 0.0024488738006005133, "phrase": "potential_advantages"}, {"score": 0.002316105585203396, "phrase": "conformance_verification"}, {"score": 0.002279508335630797, "phrase": "test_case_generation"}, {"score": 0.0022434880661725493, "phrase": "model_checking"}, {"score": 0.0021049977753042253, "phrase": "explicit_algorithm"}], "paper_keywords": ["Natural language", " Test model", " Use cases", " CSP", " Test generation", " Conformance testing"], "paper_abstract": "We present a strategy for the automatic generation of test cases from parametrised use case templates that capture control flow, state, input and output. Our approach allows test scenario selection based on particular traces or states of the model. The templates are internally represented as CSP processes with explicit input and output alphabets, and test generation is expressed as counter-examples of refinement checking, mechanised using the FDR tool. Soundness is addressed through an input-output conformance relation formally defined in the CSP traces model. This purely process algebraic characterisation of testing has some potential advantages, mainly an easy automation of conformance verification and test case generation via model checking, without the need to develop any explicit algorithm.", "paper_title": "Test generation from state based use case models", "paper_id": "WOS:000335555500003"}