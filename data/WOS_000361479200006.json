{"auto_keywords": [{"score": 0.02672590261963155, "phrase": "real-time_performance"}, {"score": 0.00481495049065317, "phrase": "fixed-_point"}, {"score": 0.0047057084749407485, "phrase": "neural_behavior"}, {"score": 0.004674952036988355, "phrase": "digital_architectures"}, {"score": 0.004583878086896926, "phrase": "ordinary_differential_equations"}, {"score": 0.004392565073466714, "phrase": "neural_models"}, {"score": 0.004321118442104989, "phrase": "significant_computational_burden"}, {"score": 0.004086744751579196, "phrase": "model_parameterization"}, {"score": 0.00406001734835979, "phrase": "time_step"}, {"score": 0.003967835031625103, "phrase": "fixed-point_processors"}, {"score": 0.003928969293303814, "phrase": "arm_unit"}, {"score": 0.003877737556673229, "phrase": "spinnaker_architecture"}, {"score": 0.0038271712887391015, "phrase": "izhikevich_neural_model"}, {"score": 0.003728000957725218, "phrase": "solution_methods"}, {"score": 0.0036194914688460656, "phrase": "balanced_solutions"}, {"score": 0.003525683527473192, "phrase": "important_and_related_issues"}, {"score": 0.003468287913322255, "phrase": "explicit_solver_reduction"}, {"score": 0.0033894950343858967, "phrase": "explicit_ode_solver"}, {"score": 0.0031740669025323606, "phrase": "cumulative_lag"}, {"score": 0.0031532895341013297, "phrase": "state_variables"}, {"score": 0.0031223774204093713, "phrase": "threshold_crossing"}, {"score": 0.0031019373572233706, "phrase": "time_steps"}, {"score": 0.0030314419455512013, "phrase": "membrane_potential"}, {"score": 0.0030017207229983385, "phrase": "izhikevich_model"}, {"score": 0.0028952071490475997, "phrase": "izhikevich_neuron_show"}, {"score": 0.0028016507334576216, "phrase": "arithmetic_types"}, {"score": 0.002737960968372391, "phrase": "overall_best_solution"}, {"score": 0.0026581913054027663, "phrase": "particular_cases"}, {"score": 0.002472822097373027, "phrase": "second-order_runge-kutta_methods"}, {"score": 0.0024325244760735566, "phrase": "best_compromise"}, {"score": 0.0023850403897607247, "phrase": "trapezoid"}, {"score": 0.0023538850546826126, "phrase": "spinnaker"}, {"score": 0.002330790244117364, "phrase": "unusual_combination"}, {"score": 0.0023155201226300955, "phrase": "low_energy_use"}, {"score": 0.0022041312401435346, "phrase": "careful_choice"}, {"score": 0.0021398811716327273, "phrase": "general-purpose_systems"}], "paper_keywords": [""], "paper_abstract": "Simulation of neural behavior on digital architectures often requires the solution of ordinary differential equations (ODEs) at each step of the simulation. For some neural models, this is a significant computational burden, so efficiency is important. Accuracy is also relevant because solutions can be sensitive to model parameterization and time step. These issues are emphasized on fixed-point processors like the ARM unit used in the SpiNNaker architecture. Using the Izhikevich neural model as an example, we explore some solution methods, showing how specific techniques can be used to find balanced solutions. We have investigated a number of important and related issues, such as introducing explicit solver reduction (ESR) for merging an explicit ODE solver and autonomousODEinto one algebraic formula, with benefits for both accuracy and speed; a simple, efficientmechanism for cancelling the cumulative lag in state variables caused by threshold crossing between time steps; an exact result for the membrane potential of the Izhikevich model with the other state variable held fixed. Parametric variations of the Izhikevich neuron show both similarities and differences in terms of algorithms and arithmetic types that perform well, making an overall best solution challenging to identify, but we show that particular cases can be improved significantly using the techniques described. Using a 1 ms simulation time step and 32-bit fixed-point arithmetic to promote real-time performance, one of the second-order Runge-Kutta methods looks to be the best compromise; Midpoint for speed or Trapezoid for accuracy. SpiNNaker offers an unusual combination of low energy use and real-time performance, so some compromises on accuracy might be expected. However, with a careful choice of approach, results comparable to those of general-purpose systems should be possible in many realistic cases.", "paper_title": "Accuracy and Efficiency in Fixed- Point Neural ODE Solvers", "paper_id": "WOS:000361479200006"}