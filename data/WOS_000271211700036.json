{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "invaluable_language_extension"}, {"score": 0.004518442937844318, "phrase": "data_invariants"}, {"score": 0.004377077848734575, "phrase": "program_correctness"}, {"score": 0.0037935066882208235, "phrase": "tough_problem"}, {"score": 0.003674738405118697, "phrase": "type_inference"}, {"score": 0.0033937776228549557, "phrase": "principal-type_property"}, {"score": 0.0030847461428168614, "phrase": "modular_type_inference"}, {"score": 0.0027159094186967247, "phrase": "type_inference_approach"}, {"score": 0.0026307897899760383, "phrase": "local_type_assumptions"}, {"score": 0.002548331088496964, "phrase": "gadt_pattern_matches"}, {"score": 0.0021049977753042253, "phrase": "previous_such_approaches"}], "paper_keywords": ["Algorithms", " Languages", " Haskell", " type inference", " GADTs"], "paper_abstract": "GADTs have proven to be an invaluable language extension, for ensuring data invariants and program correctness among others. Unfortunately, they pose a tough problem for type inference: we lose the principal-type property, which is necessary for modular type inference. We present a novel and simplified type inference approach for local type assumptions from GADT pattern matches. Our approach is complete and decidable, while more liberal than previous such approaches.", "paper_title": "Complete and Decidable Type Inference for GADTs", "paper_id": "WOS:000271211700036"}