{"auto_keywords": [{"score": 0.029709021816766247, "phrase": "first_step"}, {"score": 0.00481495049065317, "phrase": "preprocessing_minimization_step"}, {"score": 0.004743164872278112, "phrase": "muc-finding_algorithms"}, {"score": 0.004602773636967002, "phrase": "constraint_network"}, {"score": 0.004334280585565239, "phrase": "prime_importance"}, {"score": 0.004205940624913343, "phrase": "network_designer"}, {"score": 0.004112175423546628, "phrase": "full-fledged_explanation"}, {"score": 0.0036188435232325337, "phrase": "minimal_unsatisfiable_cores"}, {"score": 0.0032817813775647786, "phrase": "efficient_muc_extractors"}, {"score": 0.003136952589428254, "phrase": "initial_incomplete_minimization_step"}, {"score": 0.0028661330049356186, "phrase": "refinement_step"}, {"score": 0.002678433668156676, "phrase": "global_performance"}, {"score": 0.0026186324161493225, "phrase": "whole_approach"}, {"score": 0.0022022878843247257, "phrase": "refinement_process"}], "paper_keywords": ["CSP", " Constraint networks", " MUC", " Unsatisfiability"], "paper_abstract": "When a constraint network is unsatisfiable, it can be of prime importance to provide the network designer with a full-fledged explanation of what causes the absence of any solution to the network. In this respect, minimal unsatisfiable cores (in short, MUCs) form the basis for such an explanation. Efficient MUC extractors are often made of an initial incomplete minimization step that delivers an upper-approximation of a MUC, followed by a refinement step. The first step is believed crucial for the global performance of the whole approach. In this paper, its actual importance is investigated. Especially, it is shown that the first step can be skipped when the refinement process dynamically exploits the information from its own search.", "paper_title": "On getting rid of the preprocessing minimization step in MUC-finding algorithms", "paper_id": "WOS:000363027300003"}