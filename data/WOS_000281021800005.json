{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "training_support_vector_machines"}, {"score": 0.004578783486828809, "phrase": "support_vector_machines"}, {"score": 0.00441718685609235, "phrase": "embedded_systems"}, {"score": 0.0042004472903194616, "phrase": "parallel_and_scalable_digital_architecture"}, {"score": 0.004081385289516914, "phrase": "sequential_minimal_optimization"}, {"score": 0.003909065355459264, "phrase": "training_svms"}, {"score": 0.0037171648669537287, "phrase": "mature_and_popular_smo_algorithm"}, {"score": 0.003637822529522622, "phrase": "numerical_instability_issues"}, {"score": 0.003509317669345521, "phrase": "traditional_numerical_algorithms"}, {"score": 0.003385336776758738, "phrase": "error_cache_updating_task"}, {"score": 0.00326572165784246, "phrase": "computation_time"}, {"score": 0.0030830390264125923, "phrase": "multiple_processing_units"}, {"score": 0.0029740732099993706, "phrase": "experiment_results"}, {"score": 0.0028689475587958917, "phrase": "proposed_architecture"}, {"score": 0.0028279422436488116, "phrase": "svm_training_problems"}, {"score": 0.002708399936381754, "phrase": "inexpensive_fixed-point_arithmetic"}, {"score": 0.0024311346712789553, "phrase": "previously_proposed_svm_hardware"}, {"score": 0.002362105010110277, "phrase": "necessary_flexibility"}, {"score": 0.00232832698253493, "phrase": "embedded_applications"}, {"score": 0.002197966048531954, "phrase": "embedded_use"}, {"score": 0.0021049977753042253, "phrase": "important_concern"}], "paper_keywords": ["Support vector machine (SVM)", " Sequential minimal optimization (SMO)", " Field-programmable gate array (FPGA)", " Scalable architecture"], "paper_abstract": "To facilitate the application of support vector machines (SVMs) in embedded systems, we propose and test a parallel and scalable digital architecture based on the sequential minimal optimization (SMO) algorithm for training SVMs. By taking advantage of the mature and popular SMO algorithm, the numerical instability issues that may exist in traditional numerical algorithms are avoided. The error cache updating task, which dominates the computation time of the algorithm, is mapped into multiple processing units working in parallel. Experiment results show that using the proposed architecture, SVM training problems can be solved effectively with inexpensive fixed-point arithmetic and good scalability can be achieved. This architecture overcomes the drawbacks of the previously proposed SVM hardware that lacks the necessary flexibility for embedded applications, and thus is more suitable for embedded use, where scalability is an important concern.", "paper_title": "A parallel and scalable digital architecture for training support vector machines", "paper_id": "WOS:000281021800005"}