{"auto_keywords": [{"score": 0.043726272486193644, "phrase": "output_bit"}, {"score": 0.004734448316824488, "phrase": "parallel_time-complexity"}, {"score": 0.0047026237903774895, "phrase": "basic_cryptographic_primitives"}, {"score": 0.004655285779819366, "phrase": "one-way_functions"}, {"score": 0.004577440795549049, "phrase": "pseudorandom_generators"}, {"score": 0.004122911675081472, "phrase": "constant_number"}, {"score": 0.0040951809276235495, "phrase": "input_bits"}, {"score": 0.004053932711987671, "phrase": "previous_efforts"}, {"score": 0.003932654396285872, "phrase": "convincing_theoretical_evidence"}, {"score": 0.003802135020791801, "phrase": "open_question"}, {"score": 0.0036635429301869527, "phrase": "strong_positive_evidence"}, {"score": 0.0035062280202127136, "phrase": "\"moderately_easy\"_owf"}, {"score": 0.003299460925313939, "phrase": "corresponding_owf"}, {"score": 0.0029815085406590426, "phrase": "relatively_mild_assumption"}, {"score": 0.002872742947035998, "phrase": "similar_compiler"}, {"score": 0.0027867024825194834, "phrase": "one-way_permutations"}, {"score": 0.0027032319980161805, "phrase": "collision-resistant_hashing"}, {"score": 0.0025958041241829254, "phrase": "\"noncryptographic\"_prgs"}, {"score": 0.002535115422089855, "phrase": "epsilon-biased_generators"}, {"score": 0.0024926348205500715, "phrase": "space-bounded_computation"}, {"score": 0.0023296961971785357, "phrase": "y._ishai"}, {"score": 0.0023139986108451946, "phrase": "e._kushilevitz"}, {"score": 0.0021049977753042253, "phrase": "information-theoretic_secure_multiparty_computation"}], "paper_keywords": ["cryptography", " constant depth circuits", " NC0", " cryptographic primitives", " pseudorandom generator", " one-way function", " randomizing polynomials"], "paper_abstract": "We study the parallel time-complexity of basic cryptographic primitives such as one-way functions (OWFs) and pseudorandom generators (PRGs). Specifically, we study the possibility of implementing instances of these primitives by NC0 functions, namely, by functions in which each output bit depends on a constant number of input bits. Despite previous efforts in this direction, there has been no convincing theoretical evidence supporting this possibility, which was posed as an open question in several previous works. We essentially settle this question by providing strong positive evidence for the possibility of cryptography in NC0. Our main result is that every \"moderately easy\" OWF (resp., PRG), say computable in NC1, can be compiled into a corresponding OWF ( resp., \"low-stretch\" PRG) in which each output bit depends on at most 4 input bits. The existence of OWFs and PRGs in NC1 is a relatively mild assumption, implied by most number-theoretic or algebraic intractability assumptions commonly used in cryptography. A similar compiler can also be obtained for other cryptographic primitives such as one-way permutations, encryption, signatures, commitment, and collision-resistant hashing. Our techniques can also be applied to obtain ( unconditional) constructions of \"noncryptographic\" PRGs. In particular, we obtain epsilon-biased generators and a PRG for space-bounded computation in which each output bit depends on only 3 input bits. Our results make use of the machinery of randomizing polynomials [Y. Ishai and E. Kushilevitz, Proceedings of the 41st Annual IEEE Symposium on Foundations of Computer Science (FOCS), 2000, pp. 294 - 304], which was originally motivated by questions in the domain of information-theoretic secure multiparty computation.", "paper_title": "Cryptography in NC0", "paper_id": "WOS:000243279900002"}