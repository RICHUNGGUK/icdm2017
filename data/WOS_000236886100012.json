{"auto_keywords": [{"score": 0.046538931721956577, "phrase": "convex_position"}, {"score": 0.045972615885752355, "phrase": "data_structure"}, {"score": 0.03377834700355587, "phrase": "second_data_structure"}, {"score": 0.00481495049065317, "phrase": "halfplane_proximity_queries"}, {"score": 0.004774115617883476, "phrase": "incremental_voronoi_diagrams"}, {"score": 0.004594582559945568, "phrase": "n_points"}, {"score": 0.0042373381286051354, "phrase": "point_q"}, {"score": 0.0041835168653521, "phrase": "directed_line_l"}, {"score": 0.0034977560416755726, "phrase": "first_data_structure"}, {"score": 0.003394891095032025, "phrase": "preprocessing_time"}, {"score": 0.003117307618682836, "phrase": "polynomial_preprocessing_time"}, {"score": 0.002936577024096783, "phrase": "first_solutions"}, {"score": 0.002617007341172262, "phrase": "new_representation"}, {"score": 0.002572709810193776, "phrase": "farthest-point_voronoi_diagrams"}, {"score": 0.0024547103576350233, "phrase": "new_points"}, {"score": 0.002433843373780471, "phrase": "counterclockwise_order"}, {"score": 0.0023824468367751365, "phrase": "amortized_pointer_changes"}, {"score": 0.002215663255682209, "phrase": "voronoi_diagram"}, {"score": 0.002159623311924437, "phrase": "first_demonstration"}, {"score": 0.0021049977753042253, "phrase": "voronoi_diagrams"}], "paper_keywords": [""], "paper_abstract": "We consider preprocessing a set S of n points in the plane that are in convex position into a data structure supporting queries of the following form: given a point q and a directed line l in the plane, report the point of S that is farthest from (or, alternatively, nearest to) the point q subject to being to the left of line l. We present two data structures for this problem. The first data structure uses O(n(1+epsilon)) space and preprocessing time, and answers queries in O(2(1/epsilon) log n) time. The second data structure uses O(n log(3) n) space and polynomial preprocessing time, and answers queries in O(log n) time. These are the first solutions to the problem with O(log n) query time and o(n(2)) space. In the process of developing the second data structure, we develop a new representation of nearest-point and farthest-point Voronoi diagrams of points in convex position. This representation supports insertion of new points in counterclockwise order using only O(log n) amortized pointer changes, subject to supporting O(log n)-time point-location queries, even though every such update may make theta(n) combinatorial changes to the Voronoi diagram. This data structure is the first demonstration that deterministically and incrementally constructed Voronoi diagrams can be maintained in o(n) pointer changes per operation while keeping O(log n)-time point-location queries.", "paper_title": "Data structures for halfplane proximity queries and incremental Voronoi diagrams", "paper_id": "WOS:000236886100012"}