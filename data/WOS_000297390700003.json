{"auto_keywords": [{"score": 0.04423467024884345, "phrase": "refs"}, {"score": 0.00481495049065317, "phrase": "incompressible_fluid_flow"}, {"score": 0.004737579882204798, "phrase": "partially_deformed_three-dimensional_domains"}, {"score": 0.004440277230269978, "phrase": "parallel_implementation"}, {"score": 0.004333642054036135, "phrase": "tensor-product_solver"}, {"score": 0.0035100601949451028, "phrase": "available_resources"}, {"score": 0.0033433365160336842, "phrase": "special_attention"}, {"score": 0.003289534854212415, "phrase": "load_balancing"}, {"score": 0.0029602552900111407, "phrase": "speedup_results"}, {"score": 0.0029126002350975634, "phrase": "test_problems"}, {"score": 0.0027741761880779535, "phrase": "real_simulations"}, {"score": 0.0023970487263732737, "phrase": "new_algorithms"}, {"score": 0.0022101055924375725, "phrase": "domain_decomposition"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Tensor-product solver", " Shared memory", " Distributed memory", " Benard-Marangoni"], "paper_abstract": "We describe a parallel implementation of the tensor-product solver derived in Refs. [6,19]. A combined distributed/shared memory model is chosen, since the flexibility allows us to map the algorithm better to the available resources. Since the approach requires special attention to load balancing, we also propose a scheme that resolves the challenges involved. Speedup results from test problems, as well as from real simulations, are presented and discussed. While the speedups are not perfect, we show that the new algorithms are more than competitive with a standard 3D approach parallelized using domain decomposition. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "A fast tensor-product solver for incompressible fluid flow in partially deformed three-dimensional domains: Parallel implementation", "paper_id": "WOS:000297390700003"}