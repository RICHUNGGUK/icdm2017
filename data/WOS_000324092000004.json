{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "architectural_knowledge"}, {"score": 0.04887366145178028, "phrase": "software_evolution"}, {"score": 0.043039693183724616, "phrase": "software_architecture"}, {"score": 0.0259747068155065, "phrase": "evolution_process"}, {"score": 0.004741845603430361, "phrase": "evolution_driver"}, {"score": 0.004622450915803531, "phrase": "increasingly_challenging_and_compelling_concern"}, {"score": 0.004552255360140208, "phrase": "developed_software_system"}, {"score": 0.003581412258960711, "phrase": "architect_plan"}, {"score": 0.003104201872147936, "phrase": "second_point"}, {"score": 0.002875200380397413, "phrase": "account_architectural_knowledge"}, {"score": 0.002831462722290752, "phrase": "key_driver"}, {"score": 0.002731971103291716, "phrase": "architecture_rationale"}, {"score": 0.0027041907335656782, "phrase": "design_intent"}, {"score": 0.0026359661683151006, "phrase": "software_systems"}, {"score": 0.0024918548761791435, "phrase": "useful_form"}, {"score": 0.0023798115577749225, "phrase": "new_approach"}, {"score": 0.00235560370536971, "phrase": "evolution_styles"}, {"score": 0.0022154296909169826, "phrase": "valuable_asset"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software architecture evolution", " architectural knowledge", " evolution styles"], "paper_abstract": "Software evolution is an increasingly challenging and compelling concern for every developed software system because of the changes in the requirements, the technology, etc. When software evolution is carried out, software architecture emerges as one of the cornerstones that should be considered from two different points of view: as an artifact for the evolution, as it helps the architect plan and restructure the system, and as an artifact of the evolution, because it has to be modified as well. This paper focuses on the second point of viewthat is, on the evolution of the software architecture, but taking into account architectural knowledge as a key driver of the process. Given that architecture rationale and design intent are critical in evolving software systems, it is imperative that they be captured in some useful form to aid that evolution process. We present a new approach for evolution styles that extends them by considering in their description the architectural knowledge as a valuable asset of the evolution process. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Evolution styles: using architectural knowledge as an evolution driver", "paper_id": "WOS:000324092000004"}