{"auto_keywords": [{"score": 0.02663762911934969, "phrase": "ryan"}, {"score": 0.00490217865469706, "phrase": "smv"}, {"score": 0.00481495049065317, "phrase": "product-line_behaviour"}, {"score": 0.0046164478775379105, "phrase": "software_product_lines"}, {"score": 0.004243552607799184, "phrase": "significant_progress"}, {"score": 0.004133292222875435, "phrase": "featured_transition_systems"}, {"score": 0.004025885154716127, "phrase": "associated_algorithms"}, {"score": 0.0038597866217852353, "phrase": "well-known_state_explosion_problem"}, {"score": 0.0036810726176482278, "phrase": "high-level_specification_languages"}, {"score": 0.003529149828147388, "phrase": "state_explosion_problem"}, {"score": 0.0033480035183418642, "phrase": "fts-based_verification"}, {"score": 0.0031761255583359726, "phrase": "specific_products"}, {"score": 0.0030772505522663612, "phrase": "temporal_logic"}, {"score": 0.003028969851366049, "phrase": "feature_quantifiers"}, {"score": 0.00291923164591297, "phrase": "spl_behaviour"}, {"score": 0.0028432828877281388, "phrase": "fsmv"}, {"score": 0.0027258422018680453, "phrase": "specification_language"}, {"score": 0.0026830601040919166, "phrase": "industry-strength_model_checker"}, {"score": 0.002613239644974825, "phrase": "feature-oriented_extension"}, {"score": 0.0025318431634446426, "phrase": "plath"}, {"score": 0.0022544399432457164, "phrase": "nusmv_extension"}, {"score": 0.002172701452347454, "phrase": "ctl_properties"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software product line", " Verification", " Feature", " Language", " Specification"], "paper_abstract": "Formal techniques for specifying and verifying Software Product Lines (SPL) are actively studied. While the foundations of this domain recently made significant progress with the introduction of Featured Transition Systems (FTSs) and associated algorithms, SPL model checking still faces the well-known state explosion problem. Moreover, there is a need for high-level specification languages usable in industry. We address the state explosion problem by applying the principles of symbolic model checking to FTS-based verification of SPLs. In order to specify properties on specific products only, we extend the temporal logic CTL with feature quantifiers. Next, we show how SPL behaviour can be specified with fSMV, a variant of SMV, the specification language of the industry-strength model checker NuSMV. fSMV is a feature-oriented extension of SMV originally introduced by Plath and Ryan. We prove that fSMV and FTSs are expressively equivalent. Finally, we connect these results to a NuSMV extension we developed for verifying SPLs against CTL properties. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Formal semantics, modular specification, and symbolic verification of product-line behaviour", "paper_id": "WOS:000329887100009"}