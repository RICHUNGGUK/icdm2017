{"auto_keywords": [{"score": 0.040781713281796715, "phrase": "higher_order"}, {"score": 0.03563778643989267, "phrase": "distributed_program"}, {"score": 0.035450566232562646, "phrase": "test_data"}, {"score": 0.033570644812899446, "phrase": "ansi_c_compiler"}, {"score": 0.032304124664992356, "phrase": "feynman"}, {"score": 0.03145267589632243, "phrase": "scattering_process"}, {"score": 0.030793954853957813, "phrase": "easyfeyndiag"}, {"score": 0.02915350695487548, "phrase": "equivalent_feynman_diagrams"}, {"score": 0.028642644021404578, "phrase": "interaction_term"}, {"score": 0.00481495049065317, "phrase": "automatic_feynman_diagram_generation"}, {"score": 0.004754271603198566, "phrase": "automatic_feynman_diagram"}, {"score": 0.004668905370653139, "phrase": "definition_formula"}, {"score": 0.0045108906244892165, "phrase": "symmetry_factor"}, {"score": 0.004437910956996051, "phrase": "complex_and_tricky_operations"}, {"score": 0.0042489946866108895, "phrase": "c_program"}, {"score": 0.003951765258534456, "phrase": "equivalent_fds"}, {"score": 0.003937459891461576, "phrase": "one-loop_order"}, {"score": 0.0037766095501754952, "phrase": "feynman_amplitudes"}, {"score": 0.0036886073959526396, "phrase": "new_calculation_techniques"}, {"score": 0.003668591097652231, "phrase": "new_calculation_tools"}, {"score": 0.0036091892088392775, "phrase": "effective_field_theory"}, {"score": 0.003596119487733433, "phrase": "program_summary_program"}, {"score": 0.0035766032751309677, "phrase": "easyfeyndiag_catalogue"}, {"score": 0.0034995881411519925, "phrase": "cpc_program_library"}, {"score": 0.003486913922294352, "phrase": "queen's_university"}, {"score": 0.003474285961403599, "phrase": "belfast"}, {"score": 0.003461702544605219, "phrase": "n._ireland"}, {"score": 0.0034366728236876047, "phrase": "standard_cpc"}, {"score": 0.0032252155702947186, "phrase": "tar.gz_programming_language"}, {"score": 0.003213531823374009, "phrase": "c._computer"}, {"score": 0.002934764205541183, "phrase": "solution_method"}, {"score": 0.002881973880527117, "phrase": "perturbative_expansion_formula"}, {"score": 0.0028404241985421096, "phrase": "ordered_iterative_traversing_procedure"}, {"score": 0.0027341763737751467, "phrase": "vertex_relabeling"}, {"score": 0.0027143926774929957, "phrase": "multiple_identical_particles"}, {"score": 0.002651076320599253, "phrase": "default_values"}, {"score": 0.0026366753045215558, "phrase": "maximum_number"}, {"score": 0.002627117999049202, "phrase": "external_particles"}, {"score": 0.0026175952455594277, "phrase": "internal_vertices"}, {"score": 0.0025658321875415805, "phrase": "leg_types"}, {"score": 0.00251966141432339, "phrase": "corresponding_values"}, {"score": 0.0024923577071656014, "phrase": "larger_limits"}, {"score": 0.0023990982005125763, "phrase": "obtained_feynman_amplitudes"}, {"score": 0.0023644936731468252, "phrase": "arbitrary_physical_model"}, {"score": 0.0023516457432817394, "phrase": "arbitrary_number"}, {"score": 0.0023346234464901978, "phrase": "symmetry_factors"}, {"score": 0.00217496508306238, "phrase": "typical_two-loop_order_u"}, {"score": 0.002128067018576581, "phrase": "qcd_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Feynman diagram", " Effective theory", " Perturbative expansion", " Scattering process"], "paper_abstract": "We present an algorithm for automatic Feynman diagram (FD) generation. Derived directly from the definition formula of an FD, the algorithm features first of all a clear concept. Also, it could naturally generate the symmetry factor for each FD. As it is free of complex and tricky operations commonly seen in other FD generation software, the code for this algorithm should always be easy to write. We provide such an implementation in C. This C program is very small, but it is fast and powerful; it receives as input an arbitrary user-defined model and an arbitrary process, and generates FDs at any order. In its current status the algorithm suppresses the equivalent FDs at one-loop order totally; but at two-loop or higher order the suppression is incomplete, although this fact does not hurt the correctness of the Feynman amplitudes obtained. We expect the algorithm to be convenient for researchers studying new calculation techniques or building new calculation tools, and for those who are working on effective field theory. Program Summary Program title: EasyFeynDiag Catalogue identifier: AEPD_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEPD_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 58317 No. of bytes in distributed program, including test data, etc.: 56345 Distribution format: tar.gz Programming language: C. Computer: Platforms on which an ANSI C compiler is available. Operating system: Operating systems on which an ANSI C compiler is available. RAM: 900,000 bytes Classification: 4.4 Feynman diagrams. Nature of problem: Automatic generation of Feynman diagrams from given interactions, scattering process, and number of loops. Solution method: The algorithm of EasyFeynDiag is translated from the perturbative expansion formula of the S-matrix. EasyFeynDiag follows an ordered iterative traversing procedure to find all the possible combinations of the fields and creation/annihilation operators. Two selection rules are adopted in turn, to suppress equivalent Feynman diagrams originating from vertex relabeling, and from multiple identical particles in an interaction term, respectively. Restrictions: 1. There are default values for the maximum number of external particles and internal vertices for a scattering process, and maximum number of legs or leg types for an interaction term. Users need to modify the corresponding values in the code to get larger limits. 2. Equivalent Feynman Diagrams arise at two-loop or higher order, although this fact does not hurt the correctness of the obtained Feynman amplitudes. Unusual features: Allows for an arbitrary physical model and an arbitrary number of loops. Symmetry factors are naturally generated. Very small. Very fast. Additional comments: This program serves mainly as an illustration of the algorithm described in its companion paper. Running time: About 0.015 s to generate all the Feynman diagrams of a typical two-loop order u (u) over bar -> t (t) over bar process in QCD model. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A simple algorithm for automatic Feynman diagram generation", "paper_id": "WOS:000320148000016"}