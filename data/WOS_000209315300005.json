{"auto_keywords": [{"score": 0.04557529632101769, "phrase": "translation_pages"}, {"score": 0.0391216418022585, "phrase": "data-assemblage"}, {"score": 0.010612387000973441, "phrase": "flash-based_solid_state_drives"}, {"score": 0.00931283196645811, "phrase": "data_blocks"}, {"score": 0.006713765888408214, "phrase": "system_performance"}, {"score": 0.004533685795068016, "phrase": "storage_media"}, {"score": 0.004268780663872836, "phrase": "address_mapping_information"}, {"score": 0.004130842663662047, "phrase": "increasing_capacity"}, {"score": 0.0038893838564184107, "phrase": "critical_issue"}, {"score": 0.003466780226380516, "phrase": "demand-based_page-level_address_mappings"}, {"score": 0.003175792987190496, "phrase": "translation_page_copy_operations"}, {"score": 0.0028460640294160383, "phrase": "update_operations"}, {"score": 0.0027539714188091866, "phrase": "write_requests"}, {"score": 0.0025786066704445304, "phrase": "page_copies"}, {"score": 0.0024951467586005094, "phrase": "average_response_time"}, {"score": 0.0024276590297034064, "phrase": "ram_cost"}, {"score": 0.0022482261385133617, "phrase": "synthetic_traces"}, {"score": 0.002223696715077018, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "extra_translation_overhead"}], "paper_keywords": ["Flash-based solid state drives", " Flash translation layer", " Page allocation"], "paper_abstract": "Flash-based solid state drives (SSDs) are becoming popular as the storage media in recent years. In SSDs, translation pages normally store the address mapping information for data blocks. With the increasing capacity of SSDs, the management of translation pages is becoming a critical issue. In this paper, we present Data-Assemblage, a translation-page-aware data block allocation strategy for demand-based page-level address mappings in flash-based SSDs. Data-Assemblage is motivated by two observations: First, the translation page copy operations during garbage collection may significantly degrade the system performance. Second, the allocation of data blocks will directly impact the update operations in translation pages. By assembling write requests that share the same translation page into one data block, Data-Assemblage significantly reduces the page copies of translation pages and improves the average response time while retaining its space utilization and RAM cost. We evaluate Data-Assemblage using a set of benchmarks from both real-world and synthetic traces. Experimental results show that our scheme can achieve a 90.92 % reduction in the extra translation overhead and improve system performance by 22.14 % compared with the previous work.", "paper_title": "Data-assemblage: a translation-page-aware data block allocation strategy for flash-based solid state drives", "paper_id": "WOS:000209315300005"}