{"auto_keywords": [{"score": 0.0360928067982632, "phrase": "task_migrations"}, {"score": 0.010507254962917736, "phrase": "technology_scalings"}, {"score": 0.00481495049065317, "phrase": "dynamic_reconfigurability"}, {"score": 0.004534136929881113, "phrase": "processing_elements"}, {"score": 0.004399905285945236, "phrase": "single_chip"}, {"score": 0.004269630481719451, "phrase": "application_tasks"}, {"score": 0.004184923061901271, "phrase": "mpsoc"}, {"score": 0.0037480753312398754, "phrase": "availability_resources"}, {"score": 0.0036553070575015344, "phrase": "adaptive_static_schedules"}, {"score": 0.0036188435232325337, "phrase": "predictable_responses"}, {"score": 0.0035827424231607784, "phrase": "runtime_resource_variations"}, {"score": 0.003459191419478298, "phrase": "large_number"}, {"score": 0.0033905067962602515, "phrase": "pe_failures"}, {"score": 0.003339886795391701, "phrase": "reconfigurable_schedule_scheme"}, {"score": 0.00327356326590461, "phrase": "excessive_migration_cost"}, {"score": 0.0032085525502105836, "phrase": "performance_degradation"}, {"score": 0.002873331232538783, "phrase": "fore_techniques"}, {"score": 0.0027741761880779535, "phrase": "baseline_heuristic_scheduling_algorithm"}, {"score": 0.0027327327233891865, "phrase": "proposed_algorithm"}, {"score": 0.002509284173541882, "phrase": "initial_dynamic_reconfigurable_schedule_scheme"}, {"score": 0.00242266141176955, "phrase": "proposed_technique"}, {"score": 0.002327310963701377, "phrase": "well_known_heuristic_scheduling_algorithm"}, {"score": 0.0021693692831601745, "phrase": "dynamic_reconfiguration"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["MPSoC", " Reconfigurability", " Task migration", " Heuristic scheduling"], "paper_abstract": "Technology scalings in semiconductors have enabled the integration of dozens of processing elements (PEs) onto a single chip (MPSoC). Scheduling application tasks onto the target MPSoC has been widely reported in the literature. Both technology scalings and resource competitions among applications have led to the variations of availability resources at runtime. While adaptive static schedules with predictable responses to runtime resource variations have consequently been proposed, a large number of task migrations upon PE failures in this reconfigurable schedule scheme will lead to excessive migration cost among processors and performance degradation. In this paper, we present an algorithm to reduce the number of task migrations while retaining the benefits of the fore techniques. Through embedding several soft constraints into the baseline heuristic scheduling algorithm, the proposed algorithm can decrease the number of task migrations significantly on the basis of holding the advantages of the initial dynamic reconfigurable schedule scheme. The performance evaluation of the proposed technique is carried out by incorporation into a well known heuristic scheduling algorithm. The simulation results confirm its effectiveness in minimizing the number of task migrations during dynamic reconfiguration. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Migration-aware adaptive MPSoC static schedules with dynamic reconfigurability", "paper_id": "WOS:000294085700011"}