{"auto_keywords": [{"score": 0.04993247298135565, "phrase": "clebsch-gordan_coefficients"}, {"score": 0.009511012872840561, "phrase": "grand_unified_theories"}, {"score": 0.009239759842117142, "phrase": "particle_physics"}, {"score": 0.008720039069705317, "phrase": "distributed_program"}, {"score": 0.008680264535833582, "phrase": "test_data"}, {"score": 0.00786132082732215, "phrase": "lie_algebras"}, {"score": 0.00481495049065317, "phrase": "automated_computation"}, {"score": 0.00478557489890886, "phrase": "tensor_product_representations"}, {"score": 0.004777483083197196, "phrase": "cambridge"}, {"score": 0.004662705558154439, "phrase": "tensor_products"}, {"score": 0.004648458350852032, "phrase": "irreducible_representations"}, {"score": 0.004591901524118829, "phrase": "explicit_construction"}, {"score": 0.004577869668211548, "phrase": "weight_states"}, {"score": 0.004556901872357751, "phrase": "straightforward_approach"}, {"score": 0.004473982381245469, "phrase": "standard_methods"}, {"score": 0.004426308135681733, "phrase": "tensor_product_decomposition"}, {"score": 0.0043258453436258405, "phrase": "model_building"}, {"score": 0.004273196830970426, "phrase": "multiple_tensor_products"}, {"score": 0.004201845377711417, "phrase": "resulting_effective_operators"}, {"score": 0.0041642057682906705, "phrase": "program"}, {"score": 0.004144350280534405, "phrase": "clego_catalogue"}, {"score": 0.004068907083697369, "phrase": "cpc_program_library"}, {"score": 0.00405646687267772, "phrase": "queen's_university"}, {"score": 0.004044064742085891, "phrase": "belfast"}, {"score": 0.004031699976413366, "phrase": "n._ireland"}, {"score": 0.004007083686875716, "phrase": "standard_cpc"}, {"score": 0.0036609100187273208, "phrase": "unix_system"}, {"score": 0.0035997452281985465, "phrase": "general_memory_requirements"}, {"score": 0.0032886455096627324, "phrase": "higher-dimensional_operators"}, {"score": 0.003145705182811006, "phrase": "tensor_product_decompositions"}, {"score": 0.0030695103543472908, "phrase": "i.e._the_clebsch-gordan_coefficients"}, {"score": 0.003027462227648001, "phrase": "high_memory_and_cpu-time_demands"}, {"score": 0.002999749669403939, "phrase": "weight_space"}, {"score": 0.002936066636369053, "phrase": "angular_momenta"}, {"score": 0.0027741761880779535, "phrase": "chosen_basis"}, {"score": 0.0027028091342232185, "phrase": "non-degenerate_or_adjoint_representations"}, {"score": 0.0026373136897864763, "phrase": "new_input_irreps"}, {"score": 0.0025813050518111585, "phrase": "tensor_product"}, {"score": 0.0025148871904409095, "phrase": "explicit_algorithm"}, {"score": 0.0024918548761791435, "phrase": "memory_and_cpu_runtime_requirements"}, {"score": 0.0024128862978798713, "phrase": "\"notebook_style"}, {"score": 0.0023981301755351607, "phrase": "suitable_o'caml_toplevel"}, {"score": 0.0023798115577749225, "phrase": "o'caml_input_file"}, {"score": 0.0023435920614377306, "phrase": "approximately_a_factor"}, {"score": 0.0023221248824337594, "phrase": "latter_mode"}, {"score": 0.0023079225317714815, "phrase": "large_irreps"}, {"score": 0.0022211005680689666, "phrase": "memory_exhaustion"}, {"score": 0.0021940118003312397, "phrase": "j._fuchs"}, {"score": 0.0021872912745910127, "phrase": "c._schweigert"}, {"score": 0.002181317756140003, "phrase": "symmetries"}, {"score": 0.0021680579366359343, "phrase": "representations"}, {"score": 0.002137561961506499, "phrase": "uk"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tensor product", " Tensor product decomposition", " Clebsch-Gordan coefficients", " Lie algebra", " Multiple tensor product", " Model building", " Symmetry breaking", " GUT"], "paper_abstract": "We present a program that allows for the computation of tensor products of irreducible representations of Lie algebras A-G based on the explicit construction of weight states. This straightforward approach (which is slower and more memory-consumptive than the standard methods to just calculate dimensions of the tensor product decomposition) produces Clebsch-Gordan coefficients that are of interest for instance in discussing symmetry breaking in model building for grand unified theories. For that purpose, multiple tensor products have been implemented as well as means for analyzing the resulting effective operators in particle physics. Program summary Program title: CleGo Catalogue identifier: AEIQ_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEIQ_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 3641 No. of bytes in distributed program, including test data, etc.: 34 536 Distribution format: tar.gz Programming language: O'Caml Computer: i386-i686, x86_64 Operating system: Cross-platform, for definiteness though we assume some UNIX system. RAM: >= 4 GB commendable, though in general memory requirements depend on the size of the Lie algebras and the representations involved. Classification: 4.2, 11.1 Nature of problem: Clebsch-Gordan coefficients are widely used in physics. This program has been written as a means to analyze symmetry breaking in the context of grand unified theories in particle physics. As an example, we computed the singlets appearing in higher-dimensional operators 27 0 27 0 27 0 78 and 27 circle times 27 circle times 27 circle times 650 in an E(6)-symmetric GUT. Solution method: In contrast to very efficient algorithms that also produce tensor product decompositions (as far as outer multiplicities/Littlewood-Richardson coefficients are concerned) we proceed straightforwardly by constructing all the weight states, i.e. the Clebsch-Gordan coefficients. This obviously comes at the expense of high memory and CPU-time demands. Applying Dynkin arithmetic in weight space, the algorithm is an extension of the one for the addition of angular momenta in su(2) approximate to A(1), for reference see [1]. Note that, in general, Clebsch-Gordan coefficients are basis-dependent and therefore need to be understood with respect to the chosen basis. However, singlets appearing in (multiple) tensor products are less basis-dependent. Restrictions: Generically, only tensor products of non-degenerate or adjoint representations can be computed. However, the irreps appearing therein can subsequently be used as new input irreps for further tensor product decomposition so in principle there is no restriction on the irreps the tensor product is taken of. In practice, though, it is by the very nature of the explicit algorithm that input is restricted by memory and CPU runtime requirements. Unusual features: Analytic computation instead of float numerics. Additional comments: The program can be used in \"notebook style\" using a suitable O'Caml toplevel. Alternatively, an O'Caml input file can be compiled which results in processing that is approximately a factor of five faster. The latter mode is commendable when large irreps need to be constructed. Running time: Varies depending on the input from parts of seconds to weeks for very large representations (because of memory exhaustion). Reference: [1] J. Fuchs, C. Schweigert, Symmetries, Lie Algebras and Representations, Cambridge Univ. Press, Cambridge, UK, 1997, 438 p. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "CleGo: A package for automated computation of Clebsch-Gordan coefficients in tensor product representations for Lie algebras A-G", "paper_id": "WOS:000291240000019"}