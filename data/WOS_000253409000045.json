{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "provably_correct_concurrent_collectors"}, {"score": 0.004754600386388821, "phrase": "concurrent_garbage_collectors"}, {"score": 0.004244234872662471, "phrase": "automatic_exploration"}, {"score": 0.004112411350177274, "phrase": "concurrent_mark-and-sweep_collectors"}, {"score": 0.0038124354878360032, "phrase": "\"building_blocks"}, {"score": 0.0035120164504478437, "phrase": "designer's_insights"}, {"score": 0.003194580334752371, "phrase": "building_blocks"}, {"score": 0.002980124909321296, "phrase": "model_checking"}, {"score": 0.0026935568995690947, "phrase": "common_mark-and-sweep_algorithms"}, {"score": 0.0021049977753042253, "phrase": "precision_tradeoffs"}], "paper_keywords": ["concurrent garbage collection", " concurrent algorithms", " verification", " synthesis"], "paper_abstract": "Concurrent garbage collectors are notoriously hard to design, implement, and verify. We present a framework for the automatic exploration of a space of concurrent mark-and-sweep collectors. In our framework, the designer specifies a set of \"building blocks\" from which algorithms can be constructed. These blocks reflect the designer's insights about the coordination between the collector and the mutator. Given a set of building blocks, our framework automatically explores a space of algorithms, using model checking with abstraction to verify algorithms in the space. We capture the intuition behind some common mark-and-sweep algorithms using a set of building blocks. We utilize our framework to automatically explore a space of more than 1, 600, 000 algorithms built from these blocks, and derive over 100 correct fine-grained algorithms with various space, synchronization, and precision tradeoffs.", "paper_title": "CGCExplorer: A semi-automated search procedure for provably correct concurrent collectors", "paper_id": "WOS:000253409000045"}