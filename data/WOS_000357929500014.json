{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "memory_contention"}, {"score": 0.008626756640977383, "phrase": "multi-core_computers"}, {"score": 0.004718897469501381, "phrase": "analytic_performance_models"}, {"score": 0.004265714878737445, "phrase": "experimental_value"}, {"score": 0.004202472962684885, "phrase": "multiple_cores"}, {"score": 0.004160319763461951, "phrase": "shared_memory_resources"}, {"score": 0.004077272409331917, "phrase": "significant_component"}, {"score": 0.003876806615011266, "phrase": "application's_execution_time"}, {"score": 0.003469676666252421, "phrase": "job's_execution_time"}, {"score": 0.0033832583769880576, "phrase": "local_and_remote_memory"}, {"score": 0.003332440548684892, "phrase": "numa_architectures"}, {"score": 0.0032989853590079153, "phrase": "model_validation"}, {"score": 0.0031208772639433145, "phrase": "hbench"}, {"score": 0.0030895394261534776, "phrase": "unixbench"}, {"score": 0.002764856305713066, "phrase": "model_parameters"}, {"score": 0.0026688629249775925, "phrase": "significant_difference"}, {"score": 0.0026420518944303716, "phrase": "predicted_values"}, {"score": 0.002437012847684331, "phrase": "average_execution_time"}, {"score": 0.0023170054862555896, "phrase": "concurrency_level"}], "paper_keywords": ["Multi-core computers", " analytic models", " Mean Value Analysis", " experimentation", " queuing theory"], "paper_abstract": "Analyzing and predicting the performance of applications that run on multi-core computers is essential. This paper demonstrates experimentally that memory contention resulting from multiple cores accessing shared memory resources can become a significant component (i.e., over 50 percent) of an application's execution time. The paper develops single-and multi-class analytic performance models for predicting the effect of memory contention on a job's execution time. The models consider local and remote memory as in NUMA architectures. Model validation was done using a micro-benchmark and programs from HBench, UnixBench, and SPECCPU2006 running on machines with 4, 12, and 16 cores. The paper shows how to derive the model parameters and demonstrates that there is a significant difference in predicted values when memory contention is ignored. For example, a model that ignores memory contention predicts an average execution time about four times smaller than the experimental value for a concurrency level of 18 while the model with memory contention predicts a value that is 90 percent of the experimental value for the same concurrency level.", "paper_title": "Predicting the Effect of Memory Contention in Multi-Core Computers Using Analytic Performance Models", "paper_id": "WOS:000357929500014"}