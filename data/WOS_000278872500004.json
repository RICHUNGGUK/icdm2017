{"auto_keywords": [{"score": 0.030998280832097165, "phrase": "mta_methods"}, {"score": 0.005466818614030172, "phrase": "case_study"}, {"score": 0.00481495049065317, "phrase": "formal_analysis"}, {"score": 0.004779876533667754, "phrase": "multi-paradigm_model_transformations"}, {"score": 0.004508286991825192, "phrase": "multiple_models"}, {"score": 0.004221072004655573, "phrase": "model_transformations"}, {"score": 0.004190305872545087, "phrase": "fundamental_issues"}, {"score": 0.00406945841245389, "phrase": "valid_model"}, {"score": 0.003995697901740734, "phrase": "valid_model_transformation"}, {"score": 0.003810093416457147, "phrase": "transformed_model"}, {"score": 0.0035025108234594668, "phrase": "industrial_projects"}, {"score": 0.003376619185594497, "phrase": "frequently_recurring_techniques"}, {"score": 0.003291188255149539, "phrase": "model_transformation_analysis"}, {"score": 0.0032671797981373356, "phrase": "mta"}, {"score": 0.0031267359296488118, "phrase": "object-oriented_programming"}, {"score": 0.0030925761790620027, "phrase": "special_constructions"}, {"score": 0.0030476078950483158, "phrase": "recurring_problems"}, {"score": 0.002970476379751357, "phrase": "model_transformation"}, {"score": 0.002905914725757534, "phrase": "special_techniques"}, {"score": 0.0028847066125323893, "phrase": "language_features"}, {"score": 0.002770791022032813, "phrase": "model_transformation_framework"}, {"score": 0.0027405092973494293, "phrase": "model_transformation_language"}, {"score": 0.002632272952905934, "phrase": "automated_formal_analysis_techniques"}, {"score": 0.002437339565360659, "phrase": "industrial_project"}, {"score": 0.002419542935774618, "phrase": "mobile_application_development"}, {"score": 0.0023843376332011936, "phrase": "real-world_example"}, {"score": 0.0022321322970228308, "phrase": "visual_modeling_and_transformation_system"}, {"score": 0.002136087390959268, "phrase": "mpm_concept"}, {"score": 0.0021049977753042253, "phrase": "model_and_model_transformation-based_environment"}], "paper_keywords": ["multi-paradigm modeling", " verification of transformations", " design patterns", " analysis patterns"], "paper_abstract": "The Multi-Paradigm Modeling (MPM) approach of model-based development emphasizes the specification of a system by multiple models. We use transformations to automatically transform, integrate and synchronize models. Verification and validation of model transformations are fundamental issues: we need to express what a valid model is and how a valid model transformation may transform the models; otherwise, we have to analyze each transformed model individually, which makes it difficult to automate the process of using models. We have formally analyzed various model transformations in several case studies and industrial projects. From this experience, we have distilled the frequently recurring techniques and solutions, referred to as Model Transformation Analysis (MTA) methods. These instances, similarly to design patterns in object-oriented programming, define special constructions as solutions for recurring problems that arise when one implements a model transformation. Moreover, MTA methods contain special techniques and language features that should be taken into account when one designs a model transformation framework or a model transformation language. We hope that MTA methods may be the basis of automated formal analysis techniques of model transformations. This paper contributes the concept and instances of MTA methods and provides a case study based on an industrial project of mobile application development. With this real-world example, we want to demonstrate the role and use of MTA methods. The case study is implemented in Visual Modeling and Transformation System (VMTS), which is a tool that realizes the MPM concept to provide a model and model transformation-based environment for software development.", "paper_title": "Towards Formal Analysis of Multi-paradigm Model Transformations", "paper_id": "WOS:000278872500004"}