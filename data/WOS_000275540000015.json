{"auto_keywords": [{"score": 0.049623866963750464, "phrase": "adaptive_filters"}, {"score": 0.038735251547156714, "phrase": "nlms"}, {"score": 0.02549712458929145, "phrase": "gsfap_core"}, {"score": 0.00481495049065317, "phrase": "gsfap_adaptive_filtering_using_log_arithmetic_for_resource-constrained_embedded_systems"}, {"score": 0.004612376827433774, "phrase": "digital_signal_processing"}, {"score": 0.004568525347438891, "phrase": "digital_communications"}, {"score": 0.004525088883501587, "phrase": "digital_video_broadcasting"}, {"score": 0.004397230847865867, "phrase": "small_embedded_systems"}, {"score": 0.004313996835376177, "phrase": "least_computationally_intensive_filter_adaptive_algorithms"}, {"score": 0.004232331639807526, "phrase": "normalized_least_mean_squares"}, {"score": 0.004054169947971483, "phrase": "fpga_devices"}, {"score": 0.003996458454723708, "phrase": "highly_suitable_platform"}, {"score": 0.00386496062825374, "phrase": "optimized_core"}, {"score": 0.003809932244103758, "phrase": "gsfap._gsfap"}, {"score": 0.0037199473428123175, "phrase": "far_superior_adaptation_properties"}, {"score": 0.003529364798514874, "phrase": "resource_requirements"}, {"score": 0.0034790978593553794, "phrase": "logarithmic_arithmetic"}, {"score": 0.003413183361838603, "phrase": "conventional_floating_point"}, {"score": 0.003348513474852869, "phrase": "custom_core"}, {"score": 0.0032850648549389025, "phrase": "effective_use"}, {"score": 0.0032382660477699695, "phrase": "pipelined_logarithmic_addition_units"}, {"score": 0.0031018195951638882, "phrase": "logarithmic_multiplication"}, {"score": 0.0030285084113651035, "phrase": "resulting_gsfap_core"}, {"score": 0.002648768009464535, "phrase": "sampling_rate"}, {"score": 0.002524982927936405, "phrase": "similar_nlms_core"}, {"score": 0.002350041573006264, "phrase": "higher_signal_sampling_rate"}, {"score": 0.002316532084420729, "phrase": "corresponding_filter_orders"}, {"score": 0.0022617389804167943, "phrase": "adaptation_properties"}, {"score": 0.0021049977753042253, "phrase": "resource-constrained_embedded_systems"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Experimentation", " FPGA", " DSP", " logarithmic arithmetic", " affine projection"], "paper_abstract": "Adaptive filters are widely used in many applications of digital signal processing. Digital communications and digital video broadcasting are just two examples. Traditionally, small embedded systems have employed the least computationally intensive filter adaptive algorithms, such as normalized least mean squares (NLMS). This article shows that FPGA devices are a highly suitable platform for more computationally intensive adaptive algorithms. We present an optimized core which implements GSFAP. GSFAP is an algorithm with far superior adaptation properties than NLMS, and with only slightly higher computational complexity. To further optimize resource requirements we use logarithmic arithmetic, rather than conventional floating point, within the custom core. Our design makes effective use of the pipelined logarithmic addition units, and takes advantage of the very low cost of logarithmic multiplication and division. The resulting GSFAP core can be clocked at more than 80MHz on a one million-gate Xilinx XC2V1000-4 device. The core can be used to implement adaptive filters of orders 20 to 1000 performing echo cancellation on speech signals at a sampling rate exceeding 50kHz. For comparison, we implemented a similar NLMS core and found that although it is slightly smaller than the GSFAP core and allows a higher signal sampling rate for the corresponding filter orders, the GSFAP core has adaptation properties that are much superior to NLMS, and that our core can provide very sophisticated adaptive filtering capabilities for resource-constrained embedded systems.", "paper_title": "GSFAP Adaptive Filtering Using Log Arithmetic for Resource-Constrained Embedded Systems", "paper_id": "WOS:000275540000015"}