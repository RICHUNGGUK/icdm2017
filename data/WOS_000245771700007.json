{"auto_keywords": [{"score": 0.04968114352851348, "phrase": "component-based_systems"}, {"score": 0.029903004183579933, "phrase": "kernel_language"}, {"score": 0.010136659796745938, "phrase": "non-functional_attributes"}, {"score": 0.004522796947899013, "phrase": "non-functional_analysis_results"}, {"score": 0.004319830179921363, "phrase": "automatic_prediction_tools"}, {"score": 0.00417793854311445, "phrase": "overall_quality_attribute"}, {"score": 0.004074574278425223, "phrase": "extensive_knowledge"}, {"score": 0.004040688646993605, "phrase": "analysis_methodologies"}, {"score": 0.003990385737207714, "phrase": "application_designer"}, {"score": 0.003859273279966873, "phrase": "key_idea"}, {"score": 0.0037795163893761027, "phrase": "model_transformation"}, {"score": 0.003685972800046028, "phrase": "\"design-oriented\"_model"}, {"score": 0.0035204268675160257, "phrase": "\"analysis-oriented\"_model"}, {"score": 0.003404703106153948, "phrase": "analysis_methodology"}, {"score": 0.003066945490483524, "phrase": "related_analysis_methodologies"}, {"score": 0.0028805474861014722, "phrase": "model-driven_transformation_framework"}, {"score": 0.0027510752634224726, "phrase": "relevant_information"}, {"score": 0.0024883835349005863, "phrase": "design-oriented_and_analysis-oriented_notations"}, {"score": 0.0023864566654035924, "phrase": "direct_transformations"}, {"score": 0.0022133711375320244, "phrase": "proposed_kernel_language"}, {"score": 0.0021049977753042253, "phrase": "mof-based_model_transformation_facilities"}], "paper_keywords": ["performance analysis", " reliability analysis", " model transformation", " component-based systems"], "paper_abstract": "To facilitate the use of non-functional analysis results in the selection and assembly of components for component-based systems, automatic prediction tools should be devised, to predict some overall quality attribute of the application without requiring extensive knowledge of analysis methodologies to the application designer. To achieve this goal, a key idea is to define a model transformation that takes as input some \"design-oriented\" model of the component assembly and produces as a result an \"analysis-oriented\" model that]ends itself to the application of some analysis methodology. However, to actually devise such a transformation, we must face both the heterogeneous design level notations for component-based systems, and the variety of non-functional attributes and related analysis methodologies we could be interested in. To tackle these problems, we define a model-driven transformation framework, centered around a kernel language whose aim is to capture the relevant information for the analysis of non-functional attributes of component-based systems, with a focus on performance and reliability. Using this kernel language as a bridge between design-oriented and analysis-oriented notations we reduce the burden of defining a variety of direct transformations from the former to the latter to the less complex problem of defining transformations to/from the kernel language. The proposed kernel language is defined within the MOF (Meta-Object Facility) framework, to allow the exploitation of MOF-based model transformation facilities. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Filling the gap between design and performance/reliability models of component-based systems: A model-driven approach", "paper_id": "WOS:000245771700007"}