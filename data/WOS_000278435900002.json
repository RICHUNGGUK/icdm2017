{"auto_keywords": [{"score": 0.032406186422145544, "phrase": "memory_access"}, {"score": 0.00481495049065317, "phrase": "memory-efficient_and_highly_parallel_architecture_for_variable_block_size_integer_motion_estimation"}, {"score": 0.004633429997452688, "phrase": "vbsme"}, {"score": 0.004352876088312741, "phrase": "huge_memory_traffic_make"}, {"score": 0.0041287394089001405, "phrase": "memory-efficient_and_highly_parallel_vlsi_architecture"}, {"score": 0.003608732492631878, "phrase": "parallel_four_reference_blocks"}, {"score": 0.0035060903664150115, "phrase": "block_matching"}, {"score": 0.003422781254306241, "phrase": "pipelined_fashion"}, {"score": 0.0033094525227603012, "phrase": "multiple_reference_blocks"}, {"score": 0.003262035294895737, "phrase": "current_block"}, {"score": 0.003215295260684715, "phrase": "search_windows"}, {"score": 0.0031845067058084583, "phrase": "adjacent_current_blocks"}, {"score": 0.003108814986752103, "phrase": "novel_data_reuse_scheme"}, {"score": 0.0029914213495838998, "phrase": "popular_level_c_data_reuse_scheme"}, {"score": 0.0027830917623582903, "phrase": "local_memory_overhead"}, {"score": 0.002467536552997677, "phrase": "wider_search_range"}, {"score": 0.002443890721386284, "phrase": "multiple_reference_frames"}, {"score": 0.00242047093248845, "phrase": "pixel_truncation"}, {"score": 0.0022409963215568565, "phrase": "different_works"}, {"score": 0.0021771713131746636, "phrase": "proposed_design"}, {"score": 0.0021049977753042253, "phrase": "best_design"}], "paper_keywords": ["Full search motion estimation", " H.264/AVC", " memory access optimization", " variable block size motion estimation", " VLSI architecture"], "paper_abstract": "Variable block size motion estimation (VBSME) is one of several contributors to H.264/AVC's excellent coding efficiency. However, its high computational complexity and huge memory traffic make deign difficult. In this paper, we propose a memory-efficient and highly parallel VLSI architecture for full search VBSME (FSVBSME). Our architecture consists of 16 2-D arrays each consists of 16 x 16 processing elements (PEs). Four arrays form a group to match in parallel four reference blocks against one current block. Four groups perform block matching for four current blocks in a pipelined fashion. Taking advantage of overlapping among multiple reference blocks of a current block and between search windows of adjacent current blocks, we propose a novel data reuse scheme to reduce memory access. Compared with the popular Level C data reuse scheme, our approach can save 98% of on-chip memory access with only 25% of local memory overhead. Synthesized into a TSMC 180-nm CMOS cell library, our design is capable of processing 1920 x 1088 30 fps video when running at 130 MHz. The architecture is scalable for wider search range, multiple reference frames and pixel truncation as well as down sampling. We suggest a criterion called design efficiency for comparing different works. It shows that the proposed design is 72% more efficient than the best design to date.", "paper_title": "A Memory-Efficient and Highly Parallel Architecture for Variable Block Size Integer Motion Estimation in H.264/AVC", "paper_id": "WOS:000278435900002"}