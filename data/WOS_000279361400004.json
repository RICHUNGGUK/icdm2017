{"auto_keywords": [{"score": 0.04299140539828537, "phrase": "register_file"}, {"score": 0.00481495049065317, "phrase": "recompilation_for_register_file_power_reduction"}, {"score": 0.004767261858417823, "phrase": "register_files"}, {"score": 0.004720043307726269, "phrase": "modern_embedded_processors"}, {"score": 0.004650086856905758, "phrase": "substantial_budget"}, {"score": 0.004581162468419365, "phrase": "energy_consumption"}, {"score": 0.004337028108577593, "phrase": "embedded_processors"}, {"score": 0.0038676325043529524, "phrase": "hot_and_cold_regions"}, {"score": 0.003716520760680603, "phrase": "hot_region"}, {"score": 0.003553540530701019, "phrase": "cold_region"}, {"score": 0.0034660938095219846, "phrase": "bit-line_splitting"}, {"score": 0.0034317185678527672, "phrase": "drowsy_register_cell_techniques"}, {"score": 0.0033639840192975835, "phrase": "overall_register_file"}, {"score": 0.0032486392192981944, "phrase": "novel_approach"}, {"score": 0.0030600032877646263, "phrase": "largest_power_saving"}, {"score": 0.0028113140998735366, "phrase": "effective_algorithm"}, {"score": 0.0027557911038816256, "phrase": "optimal_result"}, {"score": 0.002674550596880007, "phrase": "mibench"}, {"score": 0.002595698433525986, "phrase": "simplescalar_pisa_system"}, {"score": 0.002544422946205545, "phrase": "average_saving"}, {"score": 0.0024571101010891347, "phrase": "nonpartitioned_register_file"}, {"score": 0.0022913497040895586, "phrase": "execution_time_overhead"}, {"score": 0.0021474369836979048, "phrase": "mibench_applications"}], "paper_keywords": ["Algorithms", " Design", " Low-power design", " compilers", " register file partitioning", " processor architectures"], "paper_abstract": "Register files in modern embedded processors contribute a substantial budget in the energy consumption due to their large switching capacitance and long working time. For some embedded processors, on average 25% of registers account for 83% of register file accessing time. This motivates us to partition the register file into hot and cold regions, with the most frequently used registers placed in the hot region, and the rarely accessed ones in the cold region. We employ the bit-line splitting and drowsy register cell techniques to reduce the overall register file accessing power. We propose a novel approach to partition the register in a way that can achieve the largest power saving. We formulate the register file partitioning process into a graph partitioning problem, and apply an effective algorithm to obtain the optimal result. We evaluate our algorithm for MiBench and SPEC2000 applications on the SimpleScalar PISA system, and an average saving of 58.3% and 54.4% over the nonpartitioned register file accessing power is achieved. The area overhead is negligible, and the execution time overhead is acceptable (5.5% for MiBench 2.4% for SPEC2000). Further evaluation for MiBench applications is performed on Alpha and X86 system.", "paper_title": "Register File Partitioning and Recompilation for Register File Power Reduction", "paper_id": "WOS:000279361400004"}