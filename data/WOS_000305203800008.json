{"auto_keywords": [{"score": 0.04553966947536326, "phrase": "hough"}, {"score": 0.013537550496759861, "phrase": "edge_points"}, {"score": 0.012316259676561518, "phrase": "different_radii"}, {"score": 0.008102158472659106, "phrase": "sparse_matrices"}, {"score": 0.00481495049065317, "phrase": "circle_detection"}, {"score": 0.004720269202737973, "phrase": "maximum_compatibility"}, {"score": 0.004627441072541506, "phrase": "fast_voting_scheme"}, {"score": 0.004590820632326585, "phrase": "localizing_circular_objects"}, {"score": 0.0044826811976193485, "phrase": "typical_solutions"}, {"score": 0.00405873677211836, "phrase": "evaluated_value"}, {"score": 0.0036311617742547167, "phrase": "sampled_points"}, {"score": 0.003287482882222731, "phrase": "sampled_point"}, {"score": 0.003248483521309273, "phrase": "spatial_position"}, {"score": 0.0031342307827666675, "phrase": "compatibility_function"}, {"score": 0.0030847461428168614, "phrase": "truncating_operation"}, {"score": 0.0027815466400771768, "phrase": "maximizing_way"}, {"score": 0.0026836723685046407, "phrase": "maximally_compatible_edge_points"}, {"score": 0.0026518169452004465, "phrase": "voting_process"}, {"score": 0.0025892330566358503, "phrase": "radius-independent_and_-_dependent_parts"}, {"score": 0.002558495760339272, "phrase": "time-consuming_independent_part"}, {"score": 0.002439143581855858, "phrase": "radius-dependent_part"}, {"score": 0.0023346234464901978, "phrase": "precision-recall_curves"}, {"score": 0.0022977342663599042, "phrase": "proposed_approach"}, {"score": 0.0021645053655350703, "phrase": "comparable_time_complexity"}], "paper_keywords": ["Hough transform", " circle detection", " voting", " truncating operation", " oriented chamfer distance"], "paper_abstract": "We present a fast voting scheme for localizing circular objects among clutter and occlusion. Typical solutions for the problem are based on Hough transform that evaluates an instance of circle by counting the number of edge points along its boundary. The evaluated value is proportional to radius, making the normalization with respect to the factor necessary for detecting circles with different radii. By representing circle with a number of sampled points, we get rid of the step. To evaluate an instance then involves obtaining the same number of edge points, each close to a sampled point in both spatial position and orientation. The closeness is measured by compatibility function, where a truncating operation is used to suppress noise and deal with occlusion. To evaluate all instances of circle is fulfilled by letting edge point vote in a maximizing way such that any instance possesses a set of maximally compatible edge points. The voting process is further separated into the radius-independent and - dependent parts. The time-consuming independent part can be shared by different radii and outputs the sparse matrices. The radius-dependent part shifts these sparse matrices according to the radius. We present precision-recall curves showing that the proposed approach outperforms the solutions based on Hough transform, at the same time, achieves the comparable time complexity as algorithm of Hough transform using 2D accumulator array.", "paper_title": "Circle Detection Based on Voting for Maximum Compatibility", "paper_id": "WOS:000305203800008"}