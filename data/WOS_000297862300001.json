{"auto_keywords": [{"score": 0.04126073658431364, "phrase": "stencil_computations"}, {"score": 0.028257993630130533, "phrase": "cakernel"}, {"score": 0.00481495049065317, "phrase": "cakernel_-_a"}, {"score": 0.004684157900507474, "phrase": "heterogenous_computing_architectures"}, {"score": 0.004598933498016774, "phrase": "recent_advent"}, {"score": 0.004556901872357751, "phrase": "new_heterogeneous_computing_architectures"}, {"score": 0.004412780054037622, "phrase": "parallel_problem"}, {"score": 0.004176194589991187, "phrase": "hybrid_supercomputers"}, {"score": 0.004081385289516914, "phrase": "structured_grids"}, {"score": 0.004025531820226182, "phrase": "partial_differential_equations"}, {"score": 0.0037231102027070724, "phrase": "e._g."}, {"score": 0.0031845067058084583, "phrase": "new_stencil-based_simulation"}, {"score": 0.003126481516783286, "phrase": "high_performance_hybrid_supercomputers"}, {"score": 0.002945081009084692, "phrase": "parallel_programming_framework"}, {"score": 0.0029181203386806683, "phrase": "cuda_-_cacuda"}, {"score": 0.002711109302199029, "phrase": "parallel_scientific_applications"}, {"score": 0.002686284749214443, "phrase": "hybrid_systems"}, {"score": 0.0026011706232569316, "phrase": "highly_scalable"}, {"score": 0.00257735013358606, "phrase": "portable_cactus_framework"}, {"score": 0.002530359917257626, "phrase": "cakernel_framework"}, {"score": 0.0025072049157014217, "phrase": "cactus"}, {"score": 0.002472822097373027, "phrase": "inter-process_communication"}, {"score": 0.002361632539339945, "phrase": "graphics_processing_units"}, {"score": 0.0022450768409733807, "phrase": "non-trivial_test_case"}, {"score": 0.0021049977753042253, "phrase": "automatically_generated_code"}], "paper_keywords": ["GPGPU programming", " computational framework", " HPC", " finite difference", " stencil computation", " CUDA", " OpenCL"], "paper_abstract": "With the recent advent of new heterogeneous computing architectures there is still a lack of parallel problem solving environments that can help scientists to use easily and efficiently hybrid supercomputers. Many scientific simulations that use structured grids to solve partial differential equations in fact rely on stencil computations. Stencil computations have become crucial in solving many challenging problems in various domains, e. g., engineering or physics. Although many parallel stencil computing approaches have been proposed, in most cases they solve only particular problems. As a result, scientists are struggling when it comes to the subject of implementing a new stencil-based simulation, especially on high performance hybrid supercomputers. In response to the presented need we extend our previous work on a parallel programming framework for CUDA - CaCUDA that now supports OpenCL. We present CaKernel - a tool that simplifies the development of parallel scientific applications on hybrid systems. CaKernel is built on the highly scalable and portable Cactus framework. In the CaKernel framework, Cactus manages the inter-process communication via MPI while CaKernel manages the code running on Graphics Processing Units (GPUs) and interactions between them. As a non-trivial test case we have developed a 3D CFD code to demonstrate the performance and scalability of the automatically generated code.", "paper_title": "CaKernel - A parallel application programming framework for heterogenous computing architectures", "paper_id": "WOS:000297862300001"}