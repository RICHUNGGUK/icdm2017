{"auto_keywords": [{"score": 0.04127853893061471, "phrase": "compressed_text"}, {"score": 0.00481495049065317, "phrase": "natural_language_text"}, {"score": 0.004655924035639928, "phrase": "word-based_byte-oriented_compression"}, {"score": 0.0045324756541157574, "phrase": "large_natural_language_text_databases"}, {"score": 0.004412285905508977, "phrase": "competitive_compression_ratios"}, {"score": 0.0043533862892678864, "phrase": "fast_random_access"}, {"score": 0.004266501496765747, "phrase": "direct_sequential_searching"}, {"score": 0.004016072233242585, "phrase": "target_symbols"}, {"score": 0.0038573081851680656, "phrase": "tree-shaped_structure"}, {"score": 0.0037549546301384336, "phrase": "negligible_additional_space"}, {"score": 0.00363080961099728, "phrase": "new_implicitly_indexed_representation"}, {"score": 0.003487222504700868, "phrase": "search_times"}, {"score": 0.003110396267535254, "phrase": "text_scanning"}, {"score": 0.0029873281676201565, "phrase": "inverted-index-like_capability"}, {"score": 0.002907992115184249, "phrase": "efficient_phrase_searches"}, {"score": 0.002755567647101251, "phrase": "inverted_list_information"}, {"score": 0.002507748938616919, "phrase": "sequential_searches"}, {"score": 0.0023923066544220277, "phrase": "explicit_inverted_indexes"}, {"score": 0.0021335427588412056, "phrase": "single_words"}, {"score": 0.0021049977753042253, "phrase": "short_phrases"}], "paper_keywords": ["Word-based compression", " Searching compressed text", " Compressed indexing"], "paper_abstract": "Word-based byte-oriented compression has succeeded on large natural language text databases, by providing competitive compression ratios, fast random access, and direct sequential searching. We show that by just rearranging the target symbols of the compressed text into a tree-shaped structure, and using negligible additional space, we obtain a new implicitly indexed representation of the compressed text, where search times are drastically improved. The occurrences of a word can be listed directly, without any text scanning, and in general any inverted-index-like capability, such as efficient phrase searches, can be emulated without storing any inverted list information. We experimentally show that our proposal performs not only much more efficiently than sequential searches over compressed text, but also than explicit inverted indexes and other types of indexes, when using little extra space. Our representation is especially successful when searching for single words and short phrases.", "paper_title": "Implicit indexing of natural language text by reorganizing bytecodes", "paper_id": "WOS:000311500100002"}