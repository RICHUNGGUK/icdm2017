{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "alice"}, {"score": 0.04620754279896541, "phrase": "bob"}, {"score": 0.004747997855358171, "phrase": "k-anonymous_database"}, {"score": 0.002344201345813952, "phrase": "suppression-based_and_generalization-based_k-anonymous_and_confidential_databases"}, {"score": 0.002185301851004467, "phrase": "theoretical_analyses"}, {"score": 0.0021347607855562102, "phrase": "experimental_results"}], "paper_keywords": ["Privacy", " anonymity", " data management", " secure computation"], "paper_abstract": "Suppose Alice owns a k-anonymous database and needs to determine whether her database, when inserted with a tuple owned by Bob, is still k-anonymous. Also, suppose that access to the database is strictly controlled, because for example data are used for certain experiments that need to be maintained confidential. Clearly, allowing Alice to directly read the contents of the tuple breaks the privacy of Bob (e. g., a patient's medical record); on the other hand, the confidentiality of the database managed by Alice is violated once Bob has access to the contents of the database. Thus, the problem is to check whether the database inserted with the tuple is still k-anonymous, without letting Alice and Bob know the contents of the tuple and the database, respectively. In this paper, we propose two protocols solving this problem on suppression-based and generalization-based k-anonymous and confidential databases. The protocols rely on well-known cryptographic assumptions, and we provide theoretical analyses to proof their soundness and experimental results to illustrate their efficiency.", "paper_title": "Privacy-Preserving Updates to Anonymous and Confidential Databases", "paper_id": "WOS:000290585300008"}