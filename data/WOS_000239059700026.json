{"auto_keywords": [{"score": 0.04712665802421912, "phrase": "software_components"}, {"score": 0.00481495049065317, "phrase": "centralized_software_components"}, {"score": 0.004739056045644449, "phrase": "distributed_ones"}, {"score": 0.0043080553835735825, "phrase": "particular_application"}, {"score": 0.004206548500039536, "phrase": "crucial_issue"}, {"score": 0.004140203942496321, "phrase": "software_component"}, {"score": 0.0034208822062692127, "phrase": "centralized_or_distributed_deployment_infrastructure"}, {"score": 0.002988101395789399, "phrase": "monolithic_unit"}, {"score": 0.0028487656293168795, "phrase": "centralized_infrastructure"}, {"score": 0.0027594936602962075, "phrase": "used_infrastructure"}, {"score": 0.0023532890136269986, "phrase": "centralized_software_component"}, {"score": 0.0021049977753042253, "phrase": "component_source_code"}], "paper_keywords": ["software component", " adaptation", " restructuration", " distribution", " refactoring"], "paper_abstract": "Adapting software components to be used in a particular application is a crucial issue in software component based technology. In fact, software components can be used in contexts with characteristics different from those envisaged when designing the component. Centralized or distributed deployment infrastructure can be one of these assumptions. Thus, a component can be designed as a monolithic unit to be deployed on a centralized infrastructure, nevertheless the used infrastructure needs the component to be distributed. In this paper, we propose an approach allowing to transform a centralized software component into a distributed one. Our technique is based on refactoring and fragmentation of component source code.", "paper_title": "Transformation of centralized software components into distributed ones by code refactoring", "paper_id": "WOS:000239059700026"}