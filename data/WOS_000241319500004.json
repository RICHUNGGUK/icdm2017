{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_variable-stride_bitmap_compression"}, {"score": 0.0046797114400479135, "phrase": "significantly_increased_address_length"}, {"score": 0.0045052562941109734, "phrase": "endless_pool"}, {"score": 0.004462663711734448, "phrase": "address_space"}, {"score": 0.004296264970612285, "phrase": "great_challenge"}, {"score": 0.004255639740735269, "phrase": "wire-speed_route_lookup"}, {"score": 0.004215397034321004, "phrase": "high-end_routing_devices"}, {"score": 0.004116440453049531, "phrase": "explosive_growth"}, {"score": 0.004058180509184539, "phrase": "lookup_latency_and_storage_requirement"}, {"score": 0.0035356745476539885, "phrase": "thorough_study"}, {"score": 0.0034526191487098093, "phrase": "real-world_route_prefixes"}, {"score": 0.0033395980635636644, "phrase": "proposed_scheme"}, {"score": 0.0032302647179383915, "phrase": "path_compression"}, {"score": 0.003154360892955196, "phrase": "variable-stride_mechanism"}, {"score": 0.003094920033010818, "phrase": "compress_ratio"}, {"score": 0.003051073364818384, "phrase": "average_memory_reference"}, {"score": 0.003007846011394511, "phrase": "possible_implementation"}, {"score": 0.0029793675408245047, "phrase": "mixed_cam_devices"}, {"score": 0.002868116925014397, "phrase": "memory_consumption"}, {"score": 0.0028409576481842457, "phrase": "lookup_steps"}, {"score": 0.0028006988338192375, "phrase": "experimental_results"}, {"score": 0.002570817338292482, "phrase": "worst_case"}, {"score": 0.0022181655497912796, "phrase": "incremental_updates"}, {"score": 0.0021971473452127126, "phrase": "high_scalability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["CAM", " compression", " IPv6", " route lookup"], "paper_abstract": "The significantly increased address length of IPv6 (128-bit) provides an endless pool of address space. However, it also poses a great challenge on wire-speed route lookup for high-end routing devices, because of the explosive growth of both lookup latency and storage requirement. As a result, even. today's most efficient IPv4 route lookup schemes can hardly be competent for IPv6. In this paper, we develop a novel IPv6 lookup scheme based on a thorough study of the distributions of real-world route prefixes and associative RFC documents. The proposed scheme combines the bitmap, compression with path compression, and employs a variable-stride mechanism to maximize the compress ratio and minimize average memory reference. A possible implementation using mixed CAM devices is also suggested to further reduce the memory consumption and lookup steps. The experimental results show that for an IPv6 route table containing over 130K prefixes, our scheme can perform 22 million lookups per second even in the worst case with only 440 Kbytes SRAM and no more than 3 Kbytes TCAM. This means that it can support 10 Gbps wire-speed forwarding for back-to-back 40-byte packets using on-chip memories or caches. What's more, incremental updates and high scalability is also achieved. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "A scalable IM route lookup scheme via dynamic variable-stride bitmap compression and path compression", "paper_id": "WOS:000241319500004"}