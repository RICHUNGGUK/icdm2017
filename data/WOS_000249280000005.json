{"auto_keywords": [{"score": 0.0495648351427175, "phrase": "node_replacement_graph_grammars"}, {"score": 0.004817182060377787, "phrase": "inference"}, {"score": 0.004611369021812453, "phrase": "relational_aspect"}, {"score": 0.004488505301335364, "phrase": "iterative_and_recursive_aspects"}, {"score": 0.00427550604912774, "phrase": "important_next_step"}, {"score": 0.0037352048741373816, "phrase": "previous_research"}, {"score": 0.003695040819303525, "phrase": "frequent_isomorphic_subgraphs_discovery"}, {"score": 0.00355782527287734, "phrase": "frequent_subgraphs"}, {"score": 0.0033163269450817716, "phrase": "input_graph"}, {"score": 0.0031417377608722, "phrase": "node_replacement_grammar_production"}, {"score": 0.0027741761880779535, "phrase": "new_productions"}, {"score": 0.0027295084882654917, "phrase": "compressed_graph"}, {"score": 0.0025440911575156755, "phrase": "known_grammars"}, {"score": 0.002436289099444074, "phrase": "original_grammar"}, {"score": 0.0023970487263732737, "phrase": "generated_graph"}, {"score": 0.002246292543825748, "phrase": "xml_schema_induction"}, {"score": 0.0021049977753042253, "phrase": "learnable_graph_grammars"}], "paper_keywords": ["grammar induction", " graph grammars", " graph mining"], "paper_abstract": "Graph grammars combine the relational aspect of graphs with the iterative and recursive aspects of string grammars, and thus represent an important next step in our ability to discover knowledge from data. In this paper we describe an approach to learning node replacement graph grammars. This approach is based on previous research in frequent isomorphic subgraphs discovery. We extend the search for frequent subgraphs by checking for overlap among the instances of the subgraphs in the input graph. If subgraphs overlap by one node we propose a node replacement grammar production. We also can infer a hierarchy of productions by compressing portions of a graph described by a production and then infer new productions on the compressed graph. We validate this approach in experiments where we generate graphs from known grammars and measure how well our system infers the original grammar from the generated graph. We also describe results on several real-world tasks from chemical mining to XML schema induction. We briefly discuss other grammar inference systems indicating that our study extends classes of learnable graph grammars.", "paper_title": "Inference of node replacement graph grammars", "paper_id": "WOS:000249280000005"}