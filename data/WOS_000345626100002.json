{"auto_keywords": [{"score": 0.03190551394787299, "phrase": "falcon"}, {"score": 0.004815014135867598, "phrase": "reliable"}, {"score": 0.004753670676591174, "phrase": "efficient_distributed_checkpointing_system"}, {"score": 0.004693167092003573, "phrase": "grid_environments"}, {"score": 0.0046038458731764926, "phrase": "fine-grained_cycle_sharing"}, {"score": 0.004430248457624686, "phrase": "machine_owners"}, {"score": 0.0039729853486821995, "phrase": "unpredictable_evictions"}, {"score": 0.003922378980031565, "phrase": "guest_jobs"}, {"score": 0.0038230844545071303, "phrase": "completion_times"}, {"score": 0.0037024804835018373, "phrase": "attractive_mechanism"}, {"score": 0.0035399770257915466, "phrase": "today's_fgcs_systems"}, {"score": 0.003215295260684715, "phrase": "high_checkpoint_transfer_latencies"}, {"score": 0.003054450075234415, "phrase": "distributed_checkpointing_system"}, {"score": 0.002958021635132416, "phrase": "available_disk_resources"}, {"score": 0.002901627749562029, "phrase": "fgcs_machines"}, {"score": 0.0027920359090544107, "phrase": "unavailable_storage_host"}, {"score": 0.0026865721000905235, "phrase": "checkpoint_data"}, {"score": 0.0025195550121331367, "phrase": "storage_host"}, {"score": 0.0024556852466581527, "phrase": "prediction_algorithm"}, {"score": 0.0024088451312725924, "phrase": "reliable_checkpoint_repositories"}, {"score": 0.0022882500116799777, "phrase": "university-wide_condor_testbed"}, {"score": 0.002259056168087006, "phrase": "purdue"}, {"score": 0.0022159566043745724, "phrase": "improved_and_consistent_performance"}, {"score": 0.0021049977753042253, "phrase": "irregular_resource_availability"}], "paper_keywords": ["Checkpoint", " Checkpointing", " Recovery", " Reliability", " Cycle sharing system", " FGCS", " Condor", " Efficient", " Data parallel checkpointing", " Erasure encoding", " Checkpoint/Restart"], "paper_abstract": "In Fine-Grained Cycle Sharing (FGCS) systems, machine owners voluntarily share their unused CPU cycles with guest jobs, as long as their performance degradation is tolerable. However, unpredictable evictions of guest jobs lead to fluctuating completion times. Checkpoint-recovery is an attractive mechanism for recovering from such \"failures\". Today's FGCS systems often use expensive, high-performance dedicated checkpoint servers. However, in geographically distributed clusters, this may incur high checkpoint transfer latencies. In this paper we present a distributed checkpointing system called Falcon that uses available disk resources of the FGCS machines as shared checkpoint repositories. However, an unavailable storage host may lead to loss of checkpoint data. Therefore, we model the failures of a storage host and develop a prediction algorithm for choosing reliable checkpoint repositories. We experiment with Falcon in the university-wide Condor testbed at Purdue and show improved and consistent performance for guest jobs in the presence of irregular resource availability.", "paper_title": "Reliable and Efficient Distributed Checkpointing System for Grid Environments", "paper_id": "WOS:000345626100002"}