{"auto_keywords": [{"score": 0.036039206188971544, "phrase": "continuous_frequent_--match_queries"}, {"score": 0.03335000857670277, "phrase": "safe_regions"}, {"score": 0.03277926073744005, "phrase": "scheme_cfknmatchad-c"}, {"score": 0.015378145483438427, "phrase": "networked_data_sources"}, {"score": 0.01278318364845774, "phrase": "prior_algorithm"}, {"score": 0.00481495049065317, "phrase": "continuous_frequent_k-n-match_queries"}, {"score": 0.004667541072056214, "phrase": "similarity_search"}, {"score": 0.004565007074039171, "phrase": "critical_issues"}, {"score": 0.004139850082354509, "phrase": "high_dissimilarity"}, {"score": 0.0038556354709511818, "phrase": "frequent_--match_queries"}, {"score": 0.00378767277402891, "phrase": "static_data"}, {"score": 0.003606866938661143, "phrase": "dynamic_data"}, {"score": 0.002900426826591769, "phrase": "unnecessary_query"}, {"score": 0.002629889135655667, "phrase": "unnecessary_data_updates"}, {"score": 0.002482013330276732, "phrase": "large-scale_environments"}, {"score": 0.002427372728532664, "phrase": "scheme_cfknmatchad-d"}, {"score": 0.002395166073437286, "phrase": "scheme_cfkmatchad-c"}, {"score": 0.0023633857274905977, "phrase": "multiple_servers"}, {"score": 0.002152397315548125, "phrase": "average_response_time"}, {"score": 0.0021049977753042253, "phrase": "produced_network_traffic"}], "paper_keywords": ["Similarity search", " k-n-match problem", " Continuous query", " Dynamic data"], "paper_abstract": "Similarity search is one of the critical issues in many applications. When using all attributes of objects to determine their similarity, most prior similarity search algorithms are easily influenced by a few attributes with high dissimilarity. The is proposed to overcome the above problem. However, the prior algorithm to process frequent --match queries is designed for static data, whose attributes are fixed, and is not suitable for dynamic data. Thus, we propose in this paper two schemes to process continuous frequent --match queries over dynamic data. First, the concept of is proposed and four formulae are devised to compute safe regions. Then, scheme CFKNMatchAD-C is developed to speed up the process of continuous frequent --match queries by utilizing safe regions to avoid unnecessary query re-evaluations. To reduce the amount of data transmitted by networked data sources, scheme CFKNMatchAD-C also uses safe regions to eliminate transmissions of unnecessary data updates which will not affect the results of queries. Moreover, for large-scale environments, we further propose scheme CFKNMatchAD-D by extending scheme CFKMatchAD-C to employ multiple servers to process continuous frequent --match queries. Experimental results show that scheme CFKNMatchAD-C and scheme CFKNMatchAD-D outperform the prior algorithm in terms of average response time and the amount of produced network traffic.", "paper_title": "On processing continuous frequent K-N-match queries for dynamic data over networked data sources", "paper_id": "WOS:000304116100007"}