{"auto_keywords": [{"score": 0.047290360878188956, "phrase": "project_data"}, {"score": 0.04249946592512057, "phrase": "dfbidb"}, {"score": 0.00481495049065317, "phrase": "neuroimaging_data_management"}, {"score": 0.004593467306126913, "phrase": "efficient_management"}, {"score": 0.004289291421348352, "phrase": "routine_management_tasks"}, {"score": 0.00409188863874203, "phrase": "raw_data"}, {"score": 0.003937126962709418, "phrase": "python_scripts"}, {"score": 0.0036448787596988423, "phrase": "filesystem_hierarchy"}, {"score": 0.0036137713873827374, "phrase": "raw_files"}, {"score": 0.003537155405923517, "phrase": "often-used_convention"}, {"score": 0.003432604816716035, "phrase": "single_script"}, {"score": 0.003288567185099276, "phrase": "import_process_data"}, {"score": 0.0031505544969981096, "phrase": "import_script"}, {"score": 0.0030837288356760973, "phrase": "multiple_file_formats"}, {"score": 0.003031287195944274, "phrase": "extensible_framework"}, {"score": 0.0029416448256236057, "phrase": "file_formats"}, {"score": 0.002904040426340639, "phrase": "acl-based_security_model"}, {"score": 0.0028669153591624696, "phrase": "accompanying_graphical_management_tools"}, {"score": 0.0027821202902740846, "phrase": "straightforward_method"}, {"score": 0.0027230880516264685, "phrase": "raw_and_meta-data"}, {"score": 0.0026312238938540787, "phrase": "data_exploration"}, {"score": 0.0025099367332615794, "phrase": "customisable_subsets"}, {"score": 0.0024566655761509276, "phrase": "user-specified_criteria"}, {"score": 0.0024252458095689847, "phrase": "command-line_interface"}, {"score": 0.002244969789802093, "phrase": "data_management_tasks"}, {"score": 0.00218789980093445, "phrase": "neuroimaging_laboratories"}, {"score": 0.0021322775033565805, "phrase": "routine_data_management_tasks"}, {"score": 0.0021049977753042253, "phrase": "efficient_manner"}], "paper_keywords": ["Data management", " Python", " XCEDE 2", " Neuroimaging", " Archiving"], "paper_abstract": "We present DFBIdb: a suite of tools for efficient management of neuroimaging project data. Specifically, DFBIdb was designed to allow users to quickly perform routine management tasks of sorting, archiving, exploring, exporting and organising raw data. DFBIdb was implemented as a collection of Python scripts that maintain a project-based, centralised database that is based on the XCEDE 2 data model. Project data is imported from a filesystem hierarchy of raw files, which is an often-used convention of imaging devices, using a single script that catalogues meta-data into a modified XCEDE 2 data model. During the import process data are reversibly anonymised, archived and compressed. The import script was designed to support multiple file formats and features an extensible framework that can be adapted to novel file formats. An ACL-based security model, with accompanying graphical management tools, was implemented to provide a straightforward method to restrict access to raw and meta-data. Graphical user interfaces are provided for data exploration. DFBIdb includes facilities to export, convert and organise customisable subsets of project data according to user-specified criteria. The command-line interface was implemented to allow users to incorporate database commands into more complex scripts that may be utilised to automate data management tasks. By using DFBIdb, neuroimaging laboratories will be able to perform routine data management tasks in an efficient manner.", "paper_title": "DFBIdb: A Software Package for Neuroimaging Data Management", "paper_id": "WOS:000284194400006"}