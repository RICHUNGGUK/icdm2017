{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "safety-critical_embedded_systems"}, {"score": 0.0101708971093803, "phrase": "pret-c."}, {"score": 0.004305203085016233, "phrase": "functional_and_timing_correctness"}, {"score": 0.003916098498242888, "phrase": "design_process"}, {"score": 0.0036553070575015344, "phrase": "c-based_design_framework"}, {"score": 0.0034562118159899772, "phrase": "pret-c_language"}, {"score": 0.0034118234596993836, "phrase": "arpret_architecture"}, {"score": 0.0033391018638565715, "phrase": "small_set"}, {"score": 0.0031982609080278643, "phrase": "effective_concurrent_programming"}, {"score": 0.003130077012135034, "phrase": "new_synchronous_semantics"}, {"score": 0.003037047249598515, "phrase": "pret-c_programs"}, {"score": 0.002934098412396701, "phrase": "thread-safe_communication"}, {"score": 0.0029089095588612007, "phrase": "shared_memory_access"}, {"score": 0.002810292047426252, "phrase": "safety-critical_systems"}, {"score": 0.0026916956768363158, "phrase": "timed_machine"}, {"score": 0.0026342827320931937, "phrase": "arpret."}, {"score": 0.002555950807368337, "phrase": "time_predictable_architectures"}, {"score": 0.00253400005142168, "phrase": "simple_customizations"}, {"score": 0.0025122373359090454, "phrase": "soft-core_processors"}, {"score": 0.0024586427394152196, "phrase": "arpret"}, {"score": 0.002427035025924384, "phrase": "efficient_and_predictable_execution"}, {"score": 0.0023650305205893353, "phrase": "extensive_benchmarking"}, {"score": 0.0023447155524245655, "phrase": "pret-c"}, {"score": 0.0023346234464901978, "phrase": "based_system_design"}, {"score": 0.0022848092812445533, "phrase": "existing_c-based_paradigms"}, {"score": 0.002197801146305747, "phrase": "berkeley-columbia_pret_approach"}, {"score": 0.002132420504803564, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "ideal_framework"}], "paper_keywords": ["Safety-critical systems", " synchronous languages", " time predictability", " PRET", " PRET-C", " WCRT", " WCET"], "paper_abstract": "Safety-critical embedded systems, commonly found in automotive, space, and health-care, are highly reactive and concurrent. Their most important characteristics are that they require both functional and timing correctness. C has been the language of choice for programming such systems. However, C lacks many features that can make the design process of such systems seamless while also maintaining predictability. This paper addresses the need for a C-based design framework for achieving time predictability. To this end, we propose the PRET-C language and the ARPRET architecture. PRET-C offers a small set of extensions to a subset of C to facilitate effective concurrent programming. We present a new synchronous semantics for PRET-C. It guarantees that all PRET-C programs are deterministic, reactive, and provides thread-safe communication via shared memory access. This simplifies considerably the design of safety-critical systems. We also present the architecture of a precision timed machine (PRET) called ARPRET. It offers the ability to design time predictable architectures through simple customizations of soft-core processors. We have designed ARPRET particularly for efficient and predictable execution of PRET-C. We demonstrate through extensive benchmarking that PRET-C based system design excels in comparison to existing C-based paradigms. We also qualitatively compare our approach to the Berkeley-Columbia PRET approach. We have demonstrated that the proposed approach provides an ideal framework for designing and validating safety-critical embedded systems.", "paper_title": "A Predictable Framework for Safety-Critical Embedded Systems", "paper_id": "WOS:000338511000001"}