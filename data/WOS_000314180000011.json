{"auto_keywords": [{"score": 0.036752610332553164, "phrase": "graph-based_method"}, {"score": 0.03583574966327729, "phrase": "function_call_graph"}, {"score": 0.00481495049065317, "phrase": "traditional_malware_detection_schemes"}, {"score": 0.00475254914916922, "phrase": "specific_signature"}, {"score": 0.004690952711665194, "phrase": "unsatisfactory_performance"}, {"score": 0.004610058444728656, "phrase": "previously_unknown_malware"}, {"score": 0.004530552828603269, "phrase": "general_features"}, {"score": 0.004491313367627919, "phrase": "binary_files"}, {"score": 0.00428146713705618, "phrase": "classification_algorithms"}, {"score": 0.0041170581247889654, "phrase": "unknown_malicious_code"}, {"score": 0.003941746077126688, "phrase": "operation_code"}, {"score": 0.003724911315685105, "phrase": "n-gram_representations"}, {"score": 0.0036288825833675127, "phrase": "training_data"}, {"score": 0.0034441627435203804, "phrase": "unknown_malware"}, {"score": 0.0032404677650217407, "phrase": "call_relations"}, {"score": 0.002770150086489194, "phrase": "machine_learning"}, {"score": 0.0027341763737751467, "phrase": "unknown_portable_executable_files"}, {"score": 0.002663620639539737, "phrase": "fixed_sum"}, {"score": 0.0024519545383399773, "phrase": "malware_datasets"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["malware detection", " graph-based method", " function call graph", " data mining"], "paper_abstract": "The traditional malware detection schemes based on specific signature give an unsatisfactory performance as disposing the previously unknown malware, so the general features of binary files should be explored to solve this problem. Recently, classification algorithms were employed successfully to choose the features in unknown malicious code, and most of the works use byte or operation code sequence n-gram representation of the executables. However, these n-gram representations are heavily dependent on the training data. In this paper, we present a graph-based method to detect unknown malware. The function call graph of an executable, which includes the functions and the call relations between them, is selected as the representation of the executable in this method. The features are defined according to both the statistical information and the topology of the function call graph. They are extracted and processed through machine learning to classify unknown Portable Executable files. For the sake of fixed sum of the features, the graph-based method can avoid so many features found in other methods. In our experiments, three types of malware datasets were tested, and as high as 96.8% accuracy can be achieved. Furthermore, it can achieve 92.1% accuracy when only 5% of the dataset is served as training set. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "An unknown malware detection scheme based on the features of graph", "paper_id": "WOS:000314180000011"}