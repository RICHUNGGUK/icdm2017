{"auto_keywords": [{"score": 0.027978842547789984, "phrase": "haskell"}, {"score": 0.00481495049065317, "phrase": "fast_programs"}, {"score": 0.004741167616693272, "phrase": "maximum_segment"}, {"score": 0.004704699244406775, "phrase": "sum_problems"}, {"score": 0.004388796812234033, "phrase": "naive_algorithm"}, {"score": 0.00415777266387528, "phrase": "efficient_program"}, {"score": 0.00406250784433007, "phrase": "appropriate_semantics-preserving_transformations"}, {"score": 0.0036178264212372497, "phrase": "maximum-sum_programs"}, {"score": 0.0033486631403337555, "phrase": "problem_variation"}, {"score": 0.0032718761046588835, "phrase": "new_set"}, {"score": 0.003075583447856341, "phrase": "alternative_approach"}, {"score": 0.002981885091155911, "phrase": "problem_specifications"}, {"score": 0.0029361086955646625, "phrase": "flexible_algorithm_theories"}, {"score": 0.0028687545730861665, "phrase": "efficient_algorithms"}, {"score": 0.0025347150832077175, "phrase": "constraint_satisfaction_problems"}, {"score": 0.0023099082804523044, "phrase": "maximum-weightsum_problem"}, {"score": 0.002205079358459154, "phrase": "different_programs"}, {"score": 0.0021049977753042253, "phrase": "resulting_programs"}], "paper_keywords": ["Algorithms", " Design", " Theory", " algorithms", " branch-and-bound", " formal methods", " program synthesis", " segment-sum problems"], "paper_abstract": "It is well-known that a naive algorithm can often be turned into an efficient program by applying appropriate semantics-preserving transformations. This technique has been used to derive programs to solve a variety of maximum-sum programs. One problem with this approach is that each problem variation requires a new set of transformations to be derived. An alternative approach to generation combines problem specifications with flexible algorithm theories to derive efficient algorithms. We show how this approach can be implemented in Haskell and applied to solve constraint satisfaction problems. We illustrate this technique by deriving programs for three varieties of maximum-weightsum problem. The derivations of the different programs are similar, and the resulting programs are asymptotically faster in practice than the programs created by transformation.", "paper_title": "Synthesis of Fast Programs for Maximum Segment Sum Problems", "paper_id": "WOS:000280547600013"}