{"auto_keywords": [{"score": 0.03714041940421895, "phrase": "auxiliary_processors"}, {"score": 0.01680398122563044, "phrase": "main_processor"}, {"score": 0.01042657069134829, "phrase": "pipelined_mpsocs"}, {"score": 0.00481495049065317, "phrase": "energy-efficient_adaptive_pipelined_mpsocs"}, {"score": 0.004772367030970874, "phrase": "multimedia_applications"}, {"score": 0.004667541072056214, "phrase": "high_throughput_implementation_platform"}, {"score": 0.004425215632459868, "phrase": "worst-case_scenarios"}, {"score": 0.004103212598803194, "phrase": "runtime_adaptability"}, {"score": 0.0040309035566691645, "phrase": "inefficient_resource_utilization"}, {"score": 0.003942299471749811, "phrase": "dynamic_workload"}, {"score": 0.00378767277402891, "phrase": "novel_adaptive_architecture"}, {"score": 0.003737485125097945, "phrase": "distributed_runtime_processor_manager"}, {"score": 0.003687960013746783, "phrase": "runtime_adaptation"}, {"score": 0.003606866938661143, "phrase": "proposed_architecture"}, {"score": 0.0035590664550919854, "phrase": "main_processors"}, {"score": 0.003434662174045939, "phrase": "differing_number"}, {"score": 0.003374094774912924, "phrase": "runtime_workload_variations"}, {"score": 0.003329368827624161, "phrase": "runtime_processor_manager"}, {"score": 0.0032561349010603734, "phrase": "application's_execution"}, {"score": 0.0031422859551159506, "phrase": "statistical_information"}, {"score": 0.0029394074636168435, "phrase": "idle_auxiliary_processors"}, {"score": 0.00258347644721642, "phrase": "distributed_runtime_manager"}, {"score": 0.002427372728532664, "phrase": "adaptive_pipelined_mpsoc"}, {"score": 0.0022806798371116698, "phrase": "worst-case_pipelined_mpsoc"}, {"score": 0.002152397315548125, "phrase": "adaptive_pipelined_mpsocs"}, {"score": 0.0021049977753042253, "phrase": "energy-efficient_implementation_platform"}], "paper_keywords": ["Multimedia applications", " multiprocessor system-on-chip (MPSoC)", " runtime adaptability"], "paper_abstract": "Pipelined MPSoCs provide a high throughput implementation platform for multimedia applications. They are typically balanced at design-time considering worst-case scenarios so that a given throughput can be fulfilled at all times. Such worst-case pipelined MPSoCs lack runtime adaptability and result in inefficient resource utilization and high power/energy consumption under a dynamic workload. In this paper, we propose a novel adaptive architecture and a distributed runtime processor manager to enable runtime adaptation in pipelined MPSoCs. The proposed architecture consists of main processors and auxiliary processors, where a main processor uses differing number of auxiliary processors considering runtime workload variations. The runtime processor manager uses a combination of application's execution and knowledge, and offline profiling and statistical information to proactively predict the auxiliary processors that should be used by a main processor. The idle auxiliary processors are then deactivated using clock-or power-gating. Each main processor with a pool of auxiliary processors has its own runtime manager, which is independent of the other main processors, enabling a distributed runtime manager. Our experiments with an H. 264 video encoder for HD720p resolution at 30 frames/s show that the adaptive pipelined MPSoC consumed up to 29% less energy (computed using processors and caches) than a worst-case pipelined MPSoC, while delivering a minimum of 28.75 frames/s. Our results show that adaptive pipelined MPSoCs can emerge as an energy-efficient implementation platform for advanced multimedia applications.", "paper_title": "Energy-Efficient Adaptive Pipelined MPSoCs for Multimedia Applications", "paper_id": "WOS:000338135600002"}