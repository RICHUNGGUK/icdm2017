{"auto_keywords": [{"score": 0.04113839846181045, "phrase": "communication_locality"}, {"score": 0.00481495049065317, "phrase": "locality-aware_policies"}, {"score": 0.004728624975677976, "phrase": "job_scheduling"}, {"score": 0.004451846834142146, "phrase": "contiguous_job_placement"}, {"score": 0.004242085112539693, "phrase": "large-scale_computing_systems"}, {"score": 0.004116012194714212, "phrase": "non-contiguous_strategies"}, {"score": 0.0037597491055035895, "phrase": "inter-application_interference"}, {"score": 0.0036479584876742085, "phrase": "partitioning_increases"}, {"score": 0.0032722454818973853, "phrase": "contiguous_partitions"}, {"score": 0.003213489259323924, "phrase": "incoming_jobs"}, {"score": 0.0030434561939032597, "phrase": "different_mapping_mechanisms"}, {"score": 0.0029707940194245216, "phrase": "task-to-node_assignment"}, {"score": 0.0028650312174624635, "phrase": "application_run_times"}, {"score": 0.002813566267090177, "phrase": "simulation-based_study"}, {"score": 0.0026485829604700833, "phrase": "synthetic_applications"}, {"score": 0.002616762777413686, "phrase": "common_communication_patterns"}, {"score": 0.002419025278429845, "phrase": "correct_partitioning-mapping_results"}, {"score": 0.002169607777109063, "phrase": "scheduling_inefficiency"}, {"score": 0.0021049977753042253, "phrase": "better_overall_system_performance"}], "paper_keywords": ["Scheduling", " Contiguous partitioning", " Task mapping", " Locality-aware policies"], "paper_abstract": "This paper studies the influence that contiguous job placement has on the performance of schedulers for large-scale computing systems. In contrast with non-contiguous strategies, contiguous partitioning enables the exploitation of communication locality in applications, and also reduces inter-application interference. However, contiguous partitioning increases scheduling times and system fragmentation, degrading system utilization. We propose and evaluate several strategies to select contiguous partitions to allocate incoming jobs. These strategies are used in combination with different mapping mechanisms to perform the task-to-node assignment in order to further reduce application run times. A simulation-based study has been carried out, using a collection of synthetic applications performing common communication patterns. Results show that the exploitation of communication locality by means of a correct partitioning-mapping results in an effective reduction of application run times, and the gains achieved more than compensate the scheduling inefficiency, therefore resulting in better overall system performance.", "paper_title": "Locality-aware policies to improve job scheduling on 3D tori", "paper_id": "WOS:000350868400011"}