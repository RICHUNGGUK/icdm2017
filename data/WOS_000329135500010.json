{"auto_keywords": [{"score": 0.04867862077830656, "phrase": "dynamic_domains"}, {"score": 0.00481495049065317, "phrase": "system-level_memory_management_based_on_statistical_variability_compensation"}, {"score": 0.004767546015485477, "phrase": "frame-based_applications"}, {"score": 0.004720606036240263, "phrase": "process_variability"}, {"score": 0.0045599093158915326, "phrase": "embedded_systems"}, {"score": 0.00442651096522781, "phrase": "pessimistic_designs"}, {"score": 0.0042336638794732255, "phrase": "tremendous_impact"}, {"score": 0.004130165601475531, "phrase": "energy_consumption"}, {"score": 0.003989487818395848, "phrase": "uncertainty-aware_design_methodologies"}, {"score": 0.003815607281455725, "phrase": "application_level"}, {"score": 0.003507504253087326, "phrase": "worst-case_assumptions"}, {"score": 0.003371220210416809, "phrase": "comprehensive_methodology"}, {"score": 0.0031453010852936334, "phrase": "memory_system"}, {"score": 0.0030081030319492343, "phrase": "statistical_model"}, {"score": 0.002862648127577722, "phrase": "fabrication_process"}, {"score": 0.0028203950416405563, "phrase": "system_scenarios"}, {"score": 0.002579622880371082, "phrase": "design_time"}, {"score": 0.002394719113232821, "phrase": "run_time"}, {"score": 0.0022901862321082407, "phrase": "current_application_behaviour"}, {"score": 0.002234092591045251, "phrase": "current_variations"}, {"score": 0.002147180332779021, "phrase": "significant_energy_savings"}, {"score": 0.0021049977753042253, "phrase": "strict_timing_constraints"}], "paper_keywords": ["Design", " Process variation", " parametric yield", " variability compensation"], "paper_abstract": "Process variability and dynamic domains increase the uncertainty of embedded systems and force designers to apply pessimistic designs, which become unnecessarily conservative and have a tremendous impact on both performance and energy consumption. In this context, developing uncertainty-aware design methodologies that take both variation at platform and at application level into account becomes a must. These methodologies shouldmitigate the effects derived from uncertainty, avoiding worst-case assumptions. In this article we propose a comprehensive methodology to tackle two forms of uncertainty: (1) process variation on the memory system, (2) application dynamism. A statistical model has been developed to deal with variability derived from fabrication process, whereas system scenarios are selected to cope with dynamic domains. Both sources of uncertainty are firstly tackled in combination at design time, to be refined later, at setup. As a result, at run time the platform can be successfully adapted to the current application behaviour as well as the current variations. Our simulations show that this methodology provides significant energy savings while still meeting strict timing constraints.", "paper_title": "System-Level Memory Management Based on Statistical Variability Compensation for Frame-Based Applications", "paper_id": "WOS:000329135500010"}