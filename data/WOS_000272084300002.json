{"auto_keywords": [{"score": 0.04951738916270167, "phrase": "multiple_grid-enabled_job_scheduling_systems"}, {"score": 0.03140113948349244, "phrase": "omnirpc_system"}, {"score": 0.00481495049065317, "phrase": "computing_resources"}, {"score": 0.004406994912939125, "phrase": "parallel_programming_model"}, {"score": 0.004355267258397068, "phrase": "remote_procedure_calls"}, {"score": 0.004253618550301311, "phrase": "large-scale_computing_resource_pools"}, {"score": 0.0036914757355166966, "phrase": "grid-enabled_job_scheduling_systems"}, {"score": 0.003338690782620756, "phrase": "remote_node"}, {"score": 0.0032800186243040663, "phrase": "grid_rpc_mechanism"}, {"score": 0.0032223742018434856, "phrase": "document-based_communication"}, {"score": 0.003165739628969694, "phrase": "connection-based_communication"}, {"score": 0.0030735451757603555, "phrase": "proposed_framework"}, {"score": 0.0028800314406625996, "phrase": "grid_rpc_system"}, {"score": 0.002846175473457555, "phrase": "parallel_programming"}, {"score": 0.002763261749602258, "phrase": "general_interface"}, {"score": 0.00260459181580768, "phrase": "xtremweb"}, {"score": 0.002573965014439041, "phrase": "cybergrip"}, {"score": 0.0025437023507918544, "phrase": "condor"}, {"score": 0.0025137856138000014, "phrase": "grid_engine"}, {"score": 0.0024405312482831646, "phrase": "preliminary_performance"}, {"score": 0.0023554316787703137, "phrase": "phylogenetic_application"}, {"score": 0.002273292707863821, "phrase": "proposed_system"}, {"score": 0.002233301265743633, "phrase": "approximately_the_same_performance"}, {"score": 0.002130056082139311, "phrase": "worker_programs"}, {"score": 0.0021049977753042253, "phrase": "remote_nodes"}], "paper_keywords": ["Grid RPC", " Grid-enabled job scheduling system", " Integration"], "paper_abstract": "We present a framework for a parallel programming model by remote procedure calls, which bridge large-scale computing resource pools managed by multiple Grid-enabled job scheduling systems. With this system, the user can exploit not only remote servers and clusters, but also the computing resources provided by Grid-enabled job scheduling systems located on different sites. This framework requires a Grid remote procedure call (RPC) system to decouple the computation in a remote node from the Grid RPC mechanism and uses document-based communication rather than connection-based communication. We implemented the proposed framework as an extension of the OmniRPC system, which is a Grid RPC system for parallel programming. We designed a general interface to easily adapt the OmniRPC system to various Grid-enabled job scheduling systems, including XtremWeb, CyberGRIP, Condor and Grid Engine. We show the preliminary performance of these implementations using a phylogenetic application. We found that the proposed system can achieve approximately the same performance as OmniRPC and can handle interruptions in worker programs on remote nodes.", "paper_title": "Integrating Computing Resources on Multiple Grid-Enabled Job Scheduling Systems Through a Grid RPC System", "paper_id": "WOS:000272084300002"}