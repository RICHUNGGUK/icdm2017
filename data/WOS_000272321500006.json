{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "process_mining"}, {"score": 0.0047597635659244655, "phrase": "automated_discovery"}, {"score": 0.004687159050154687, "phrase": "event_logs"}, {"score": 0.004615656893404919, "phrase": "observed_events"}, {"score": 0.004390689303780405, "phrase": "process_model"}, {"score": 0.00427410962921379, "phrase": "essential_problems"}, {"score": 0.004065721092116729, "phrase": "possible_behavior"}, {"score": 0.0039274105882136775, "phrase": "representative_subset"}, {"score": 0.0038674532861321864, "phrase": "classical_synthesis_techniques"}, {"score": 0.0035810720634458933, "phrase": "existing_process_mining_techniques"}, {"score": 0.003290403747743492, "phrase": "representation_language"}, {"score": 0.002820850247525606, "phrase": "strong_support"}, {"score": 0.002735284807307981, "phrase": "existing_techniques"}, {"score": 0.002493810638588771, "phrase": "two-step_approach"}, {"score": 0.0024368411484675823, "phrase": "configurable_approach"}, {"score": 0.0024088451312725924, "phrase": "transition_system"}, {"score": 0.0021049977753042253, "phrase": "traditional_approaches"}], "paper_keywords": [""], "paper_abstract": "Process mining includes the automated discovery of processes from event logs. Based on observed events (e.g., activities being executed or messages being exchanged) a process model is constructed. One of the essential problems in process mining is that one cannot assume to have seen all possible behavior. At best, one has seen a representative subset. Therefore, classical synthesis techniques are not suitable as they aim at finding a model that is able to exactly reproduce the log. Existing process mining techniques try to avoid such \"overfitting\" by generalizing the model to allow for more behavior. This generalization is often driven by the representation language and very crude assumptions about completeness. As a result, parts of the model are \"overfitting\" (allow only for what has actually been observed) while other parts may be \"underfitting\" (allow for much more behavior without strong support for it). None of the existing techniques enables the user to control the balance between \"overfitting\" and \"underfitting\". To address this, we propose a two-step approach. First, using a configurable approach, a transition system is constructed. Then, using the \"theory of regions\", the model is synthesized. The approach has been implemented in the context of ProM and overcomes many of the limitations of traditional approaches.", "paper_title": "Process mining: a two-step approach to balance between underfitting and overfitting", "paper_id": "WOS:000272321500006"}