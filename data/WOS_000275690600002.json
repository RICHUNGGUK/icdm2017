{"auto_keywords": [{"score": 0.04945540937697203, "phrase": "pedro"}, {"score": 0.008713765872165671, "phrase": "prolog_technology"}, {"score": 0.004167982855788402, "phrase": "address-based_routing"}, {"score": 0.004007083686875716, "phrase": "inter-process_message_m"}, {"score": 0.0038271712887391015, "phrase": "pedro_term"}, {"score": 0.003445591238183763, "phrase": "message_template"}, {"score": 0.003334309053314909, "phrase": "pedro_query"}, {"score": 0.0031845067058084613, "phrase": "allowed_values"}, {"score": 0.0028480459059007468, "phrase": "current_subscription"}, {"score": 0.0023850311572318496, "phrase": "peer-to-peer_messages"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["publish", " subscribe", " agent communication", " content-based message routing", " peer-to-peer communication"], "paper_abstract": "Pedro is a TCP/IP publish/subscribe server implemented in C that uses Prolog technology for testing subscriptions against notifications It provides both content- and address-based routing of messages between processes An inter-process message M is a string representation of a Pedro term (usually but not necessarily a variable free term) A subscription is essentially a message template T paired with a Pedro query that is used to restrict the allowed values for variables in T Pedro automatically forwards any notification it receives to all processes that have a current subscription that covers the notification A Pedro connected process can optionally register a name with Pedro giving the process a unique Pedro handle Pedro handles can be used to send peer-to-peer messages between processes In this paper we illustrate the use of Pedro and describe its implementation Copyright (C) 2010 John Wiley & Sons, Ltd", "paper_title": "Pedro: a publish/subscribe server using Prolog technology", "paper_id": "WOS:000275690600002"}