{"auto_keywords": [{"score": 0.04814996942162453, "phrase": "visual_languages"}, {"score": 0.00481495049065317, "phrase": "generative_patterns"}, {"score": 0.004527024978801684, "phrase": "new_notion"}, {"score": 0.004489952932659799, "phrase": "enforced_generative_pattern"}, {"score": 0.004380540407926982, "phrase": "positive_or_negative_conditions"}, {"score": 0.004152502093643003, "phrase": "transformation_rules"}, {"score": 0.004101579688745222, "phrase": "new_rules"}, {"score": 0.003985166330358716, "phrase": "pattern_specification"}, {"score": 0.0038720442355114045, "phrase": "negative_pattern"}, {"score": 0.003824547895167011, "phrase": "application_condition"}, {"score": 0.0036402965997795536, "phrase": "positive_one"}, {"score": 0.0035224030823976186, "phrase": "additional_context"}, {"score": 0.0033115124244647736, "phrase": "abstract_setting"}, {"score": 0.003230723298995081, "phrase": "different_structures"}, {"score": 0.0031649018957020337, "phrase": "triple_graphs"}, {"score": 0.00313894917464766, "phrase": "graph_transformation_rules"}, {"score": 0.003074991770768925, "phrase": "previous_concepts"}, {"score": 0.002728847267539957, "phrase": "syntactical_level"}, {"score": 0.002575934917174136, "phrase": "static_semantics"}, {"score": 0.0025027144548626975, "phrase": "incremental_construction"}, {"score": 0.0024821782596371536, "phrase": "execution_rules"}, {"score": 0.002202617924488607, "phrase": "token-holder_semantics"}, {"score": 0.0021845387990972543, "phrase": "discrete-event_semantics"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["visual languages", " graph transformation", " triple graph grammars", " graph constraints", " patterns", " meta-modelling", " specification of semantics"], "paper_abstract": "We present the new notion of enforced generative pattern, a structure that declares positive or negative conditions that must be satisfied by a model. Patterns are applied to transformation rules resulting in new rules that modify models according to the pattern specification. In the case of a negative pattern, an application condition is added to the rule. In the case of a positive one, the rule is modified to consider additional context in its left-hand side and to increase its effects. We have defined these patterns in an abstract setting, which enables their instantiation for different structures, like graphs, triple graphs and graph transformation rules. We apply the previous concepts to the specification of the syntax and semantics of visual languages. In particular, we show instantiations for: (i) graphs, with applications at the syntactical level; (ii) triple graphs, for the coordination of syntax and static semantics; and (iii) rules, for the incremental construction of execution rules. We present some examples that illustrate the usefulness of the combination of these three instantiations. In particular, we show the specification of environments for visual languages with token-holder semantics, discrete-event semantics and communication semantics. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Enforced generative patterns for the specification of the syntax and semantics of visual languages", "paper_id": "WOS:000257692000002"}