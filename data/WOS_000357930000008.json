{"auto_keywords": [{"score": 0.048407041200939166, "phrase": "viewstamped_replication"}, {"score": 0.04759132288543124, "phrase": "zab"}, {"score": 0.00481495049065317, "phrase": "vive_la_difference"}, {"score": 0.0044846093441952796, "phrase": "paxos"}, {"score": 0.00421410521089045, "phrase": "replication_protocols"}, {"score": 0.004066898031169739, "phrase": "asynchronous_environments"}, {"score": 0.003995226376780718, "phrase": "crash_failures"}, {"score": 0.002874726518572154, "phrase": "refinement_mappings"}, {"score": 0.0027252240573281163, "phrase": "succinct_specifications"}, {"score": 0.00258347644721642, "phrase": "executable_implementations"}, {"score": 0.0024490834773668153, "phrase": "principled_understanding"}, {"score": 0.0023424328921363585, "phrase": "design_decisions"}, {"score": 0.0021049977753042253, "phrase": "significant_impact"}], "paper_keywords": ["Systems specification methodology", " distributed systems", " reliability"], "paper_abstract": "Paxos, Viewstamped Replication, and Zab are replication protocols for high-availability in asynchronous environments with crash failures. Claims have been made about their similarities and differences. But how does one determine whether two protocols are the same, and if not, how significant are the differences? We address these questions using refinement mappings. Protocols are expressed as succinct specifications that are progressively refined to executable implementations. Doing so enables a principled understanding of the correctness of design decisions for implementing the protocols. Additionally, differences that have a significant impact on performance are surfaced by this exercise.", "paper_title": "Vive La Difference: Paxos vs. Viewstamped Replication vs. Zab", "paper_id": "WOS:000357930000008"}