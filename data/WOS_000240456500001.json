{"auto_keywords": [{"score": 0.0490881866285214, "phrase": "boundary_value_analysis"}, {"score": 0.010612387000973441, "phrase": "coincidental_correctness"}, {"score": 0.004569630374630379, "phrase": "partition_analysis"}, {"score": 0.004382364826200616, "phrase": "input_domain"}, {"score": 0.004072851768196397, "phrase": "system's_behaviour"}, {"score": 0.003785115566529808, "phrase": "test_inputs"}, {"score": 0.0036680857629458816, "phrase": "subdomain's_boundaries"}, {"score": 0.003444732262403694, "phrase": "incorrect_implementation"}, {"score": 0.0030062165552187086, "phrase": "coincidental_correctness_-_the_system"}, {"score": 0.0027356847952125433, "phrase": "wrong_reason"}, {"score": 0.002218299213266519, "phrase": "main_contribution"}, {"score": 0.0021049977753042253, "phrase": "automated_test_data_generation"}], "paper_keywords": ["reliability", " theory", " verification", " test case generation", " boundary value analysis", " coincidental correctness", " domain faults"], "paper_abstract": "In partition analysis we divide the input domain to form subdomains on which the system's behaviour should be uniform. Boundary value analysis produces test inputs near each subdomain's boundaries to find failures caused by incorrect implementation of the boundaries. However, boundary value analysis can be adversely affected by coincidental correctness - the system produces the expected output, but for the wrong reason. This article shows how boundary value analysis can be adapted in order to reduce the likelihood of coincidental correctness. The main contribution is to cases of automated test data generation in which we cannot rely on the expertise of a tester.", "paper_title": "Avoiding coincidental correctness in boundary value analysis", "paper_id": "WOS:000240456500001"}