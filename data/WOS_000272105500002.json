{"auto_keywords": [{"score": 0.04854746447483604, "phrase": "smldp"}, {"score": 0.005690250752466184, "phrase": "computational_efficiency"}, {"score": 0.00534680744784767, "phrase": "cooperative_co-evolutionary_architecture"}, {"score": 0.00481495049065317, "phrase": "satellite_module_layout_design"}, {"score": 0.004788936788674301, "phrase": "purpose_-_the_purpose"}, {"score": 0.004695120862616206, "phrase": "ss"}, {"score": 0.00468627326602559, "phrase": "satellite_module_layout_design_problem"}, {"score": 0.00459824135341107, "phrase": "complex_engineering_layout"}, {"score": 0.0045733930839959155, "phrase": "combinatorial_optimization_problem"}, {"score": 0.004463219700514686, "phrase": "traditional_exact_methods"}, {"score": 0.00442708558833968, "phrase": "evolutionary_algorithms"}, {"score": 0.004285438467997083, "phrase": "previous_work"}, {"score": 0.004250737522551095, "phrase": "solution_quality"}, {"score": 0.003908143909790778, "phrase": "new_approach"}, {"score": 0.003652004401697793, "phrase": "complex_engineering_problems"}, {"score": 0.003619386237535687, "phrase": "ccss"}, {"score": 0.003602819853062483, "phrase": "flexible_meta-heuristic_method"}, {"score": 0.003544668879158414, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0032236233292781908, "phrase": "diversification_method"}, {"score": 0.003128838753643307, "phrase": "controlled_randomness"}, {"score": 0.0030533580493882443, "phrase": "static_method"}, {"score": 0.002829945165524915, "phrase": "computational_time"}, {"score": 0.0026157259734105, "phrase": "experimental_results"}, {"score": 0.002573465946178553, "phrase": "proposed_approach"}, {"score": 0.0025456716198597627, "phrase": "complex_problem"}, {"score": 0.0025113494092413604, "phrase": "-_applying_ccss"}, {"score": 0.0024774888010414206, "phrase": "satisfying_solutions"}, {"score": 0.002398069885234319, "phrase": "limiting_experimental_results"}, {"score": 0.0023465400668244386, "phrase": "modified_ss"}, {"score": 0.0023086189774576805, "phrase": "new_ccss"}, {"score": 0.0022713093139061277, "phrase": "effective_and_efficient_way"}, {"score": 0.002252880693912436, "phrase": "smldp."}, {"score": 0.0021925226977381244, "phrase": "layout_problem"}], "paper_keywords": ["Software prototyping", " Artificial satellites", " Layout techniques"], "paper_abstract": "Purpose - The purpose of this paper is to tackle a satellite module layout design problem (SMLDP). As a complex engineering layout and combinatorial optimization problem, SMLDP cannot be solved effectively by traditional exact methods. Although evolutionary algorithms (EAs) have shown some promise of tackling SMLDP in previous work, the solution quality and computational efficiency still pose a challenge. This paper aims to address these two issues. Design/methodology/approach - Scatter search (SS) and a cooperative co-evolutionary architecture are integrated to form a new approach called a cooperative co-evolutionary scatter search (CCSS). The cooperative co-evolutionary architecture is characterized by the decomposition and cooperation for dealing with complex engineering problems. SS is a flexible meta-heuristic method that can effectively solve the combinatorial optimization problems. Designing the elements of SS is context-dependent. Considering the characteristics of SMLDP, our work focuses on two folds: the diversification method, and the reference set update method. The diversification method is built on the method of coordinate transformation and the controlled randomness. The reference set is updated by the static method on the basis of two dissimilarities. Two test problems for circles packing illustrated the capacity of SS. However, when solving SMLDP, SS shows some limitations in the computational time and quality. This study adopts divide-conquer-coordination strategy to decompose SMLDP into several layout sub-problems. Then CCSS is applied to cooperatively solve these sub-problems. The experimental results illustrate the capability of the proposed approach in tackling the complex problem with less computational effort. Findings - Applying CCSS to SMLDP can obtain satisfying solutions in terms of quality and computational efficiency. This contrasts with the limiting experimental results of SMLDP with some approaches (including modified SS). Originality/value - A new CCSS is proposed to provide an effective and efficient way of solving SMLDP. Some elements of SS are improved to address the layout problem. SMLDP is decomposed into several sub-problems that can be solved cooperatively by CCSS after its characteristics are taken into consideration.", "paper_title": "Cooperative co-evolutionary scatter search for satellite module layout design", "paper_id": "WOS:000272105500002"}