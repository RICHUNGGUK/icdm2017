{"auto_keywords": [{"score": 0.03935928634582904, "phrase": "information_retrieval"}, {"score": 0.00481495049065317, "phrase": "smoothing_methods"}, {"score": 0.004773476989344654, "phrase": "language_modeling"}, {"score": 0.00471193241675062, "phrase": "central_issue"}, {"score": 0.004671342094877447, "phrase": "language_model_estimation"}, {"score": 0.004473552224535518, "phrase": "zero_probability_estimation_problem"}, {"score": 0.0042841015898508325, "phrase": "jelinek-mercer"}, {"score": 0.004175427861564435, "phrase": "bayesian"}, {"score": 0.004120435930514554, "phrase": "dirichlet_priors"}, {"score": 0.0037786899855446, "phrase": "previous_research"}, {"score": 0.0036500346000495317, "phrase": "parameter_estimation"}, {"score": 0.003571850980647625, "phrase": "single_value"}, {"score": 0.0035410467987580484, "phrase": "optional_values"}, {"score": 0.00319141242685261, "phrase": "ranking_performance"}, {"score": 0.0030560920414081645, "phrase": "effective_approach"}, {"score": 0.003003579442221871, "phrase": "ranking_accuracy"}, {"score": 0.0029519664912853938, "phrase": "existing_retrieval_methods"}, {"score": 0.0028267701593809877, "phrase": "different_parameters"}, {"score": 0.0027781870000242004, "phrase": "different_retrieval_methods"}, {"score": 0.0026718978608934077, "phrase": "ranking_model"}, {"score": 0.002335889180060105, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "lmir."}], "paper_keywords": ["machine learning", " information retrieval", " searching"], "paper_abstract": "The central issue in language model estimation is smoothing, which is a technique for avoiding zero probability estimation problem and overcoming data sparsity. There are three representative smoothing methods: Jelinek-Mercer (JM) method; Bayesian smoothing using Dirichlet priors (Dir) method; and absolute discounting (Dis) method, whose parameters are usually estimated empirically. Previous research in information retrieval (IR) on smoothing parameter estimation tends to select a single value from optional values for the collection, but it may not be appropriate for all the queries. The effectiveness of all the optional values should be considered to improve the ranking performance. Recently, learning to rank has become an effective approach to optimize the ranking accuracy by merging the existing retrieval methods. In this article, the smoothing methods for language modeling in information retrieval (LMIR) with different parameters are treated as different retrieval methods, then a learning to rank approach to learn a ranking model based on the features extracted by smoothing methods is presented. In the process of learning, the effectiveness of all the optional smoothing parameters is taken into account for all queries. The experimental results on the Learning to Rank for Information Retrieval (LETOR) LETOR3.0 and LETOR4.0 data sets show that our approach is effective in improving the performance of LMIR.", "paper_title": "Learning to rank using smoothing methods for language modeling", "paper_id": "WOS:000323386300011"}