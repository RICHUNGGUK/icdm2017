{"auto_keywords": [{"score": 0.04315568411098275, "phrase": "minimum_intrusion"}, {"score": 0.00481495049065317, "phrase": "grid_storage"}, {"score": 0.004441359373498799, "phrase": "thin_user-level_layer"}, {"score": 0.004305481798183612, "phrase": "grid_resources"}, {"score": 0.004096635798793164, "phrase": "grid_design"}, {"score": 0.0031746155143471725, "phrase": "remote_copy"}, {"score": 0.0029462012558267863, "phrase": "complete_file"}, {"score": 0.002803104254950008, "phrase": "minimum_intrusion_grid_project"}, {"score": 0.002585206414738808, "phrase": "'minimum_intrusion"}, {"score": 0.002429161048032688, "phrase": "dedicated_grid_software"}, {"score": 0.0023546984428119864, "phrase": "proposed_model"}, {"score": 0.0022683432490549064, "phrase": "user-level_layer"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Grid computing", " remote file access", " minimum intrusion Grid"], "paper_abstract": "This paper describes the ideas behind and the implementation of a thin user-level layer to be installed on Grid resources. The layer fits in the minimum intrusion Grid design by imposing as few requirements on the resource as possible and communicates with the server using only trusted and widely used protocols. The model offers transparent, on-demand remote file access. By catching all application operations on files, these operations are directed towards the remote copy on the server, thus eliminating the need for transferring the complete file. This implementation is targeted at the minimum intrusion Grid project, which strives for minimum intrusion on the resource executing a job. 'Minimum intrusion' implies that a client need not install any dedicated Grid software. Hence, the proposed model is forced to use a user-level layer that automatically overrides the native I/O calls. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Direct application access to Grid storage", "paper_id": "WOS:000248371000004"}