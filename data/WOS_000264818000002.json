{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_development_process"}, {"score": 0.004590217765551337, "phrase": "design_decision"}, {"score": 0.004346139434813299, "phrase": "design_decisions"}, {"score": 0.0037140731069193896, "phrase": "\"knowledge_base"}, {"score": 0.003173636240475185, "phrase": "software_development"}, {"score": 0.002963830787280652, "phrase": "next_phase"}, {"score": 0.002730240935688002, "phrase": "rational_and_reviewable_way"}, {"score": 0.0023486473525617816, "phrase": "whole_set"}, {"score": 0.0021049977753042253, "phrase": "detailed_discussion"}], "paper_keywords": ["Software development", " Rational development", " Documentation", " Module interface", " Knowledge based software documentation"], "paper_abstract": "A software development process can be considered rational if each design decision can be justified based on given facts and design decisions that were made, reviewed, and accepted earlier. This paper describes a set of documents that can serve as a \"knowledge base\" for more rational software development. Each of these documents can be viewed as a place where the decisions made in one phase of a software development can be recorded for those who work in the next phase. These documents make it possible to develop software in a rational and reviewable way. We describe why each document is needed, how it should be organized. and how the information in the whole set of documents can be represented in a precise, checkable, and accessible way. We illustrate the approach with a detailed discussion of one of these documents, module interface documentation. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Document based rational software development", "paper_id": "WOS:000264818000002"}