{"auto_keywords": [{"score": 0.049188612914091476, "phrase": "fpzl"}, {"score": 0.03166181073351053, "phrase": "fpsl"}, {"score": 0.03137386613464261, "phrase": "fpcl"}, {"score": 0.006757628887434008, "phrase": "zero_laxity"}, {"score": 0.005871232323447807, "phrase": "highest_priority"}, {"score": 0.004529881123652277, "phrase": "static_laxity"}, {"score": 0.004362870617347183, "phrase": "critical_laxity"}, {"score": 0.004066076430818046, "phrase": "multiprocessor_real-time_systems"}, {"score": 0.003953068310598579, "phrase": "global_fixed_priority"}, {"score": 0.003934540154108188, "phrase": "pre-emptive_scheduling"}, {"score": 0.0034494494982242187, "phrase": "additional_scheduling_points"}, {"score": 0.003369322866499541, "phrase": "fixed_priority_scheduling"}, {"score": 0.0032449610741097992, "phrase": "minimally_dynamic_algorithms"}, {"score": 0.002818013056816282, "phrase": "sufficient_schedulability_tests"}, {"score": 0.0026384167183586015, "phrase": "upper_bounds"}, {"score": 0.002447101794397243, "phrase": "empirical_evaluation"}, {"score": 0.002280333649167796, "phrase": "significantly_larger_number"}, {"score": 0.0021249064184347658, "phrase": "state-of-the-art_schedulability_tests"}, {"score": 0.0021049977753042253, "phrase": "edzl"}], "paper_keywords": ["Real-time", " Schedulability analysis", " Fixed priority", " Zero laxity", " Critical laxity", " FPSL", " FPCL", " FPZL", " Global scheduling", " Multiprocessor"], "paper_abstract": "This paper presents the Fixed Priority until Static Laxity (FPSL), Fixed Priority until Critical Laxity (FPCL) and Fixed Priority until Zero Laxity (FPZL) scheduling algorithms for multiprocessor real-time systems. FPZL is similar to global fixed priority pre-emptive scheduling; however, whenever a task reaches a state of zero laxity it is given the highest priority. FPSL and FPCL are variants of FPZL that introduce no additional scheduling points beyond those present with fixed priority scheduling. FPSL, FPCL and FPZL are minimally dynamic algorithms, in that the priority of a job can change at most once during its execution, bounding the number of pre-emptions. Polynomial time and pseudo-polynomial time sufficient schedulability tests are derived for these algorithms. The tests are then improved by computing upper bounds on the amount of execution that each task can perform at the highest priority. An empirical evaluation shows that FPSL, FPCL, and FPZL are highly effective, with a significantly larger number of tasksets deemed schedulable by the tests derived in this paper, than by state-of-the-art schedulability tests for EDZL scheduling.", "paper_title": "FPSL, FPCL and FPZL schedulability analysis", "paper_id": "WOS:000309108200005"}