{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "lightweight_query_authentication"}, {"score": 0.004678384952779725, "phrase": "stream_outsourcing_setting"}, {"score": 0.004602085616330634, "phrase": "data_owner"}, {"score": 0.00445318311339027, "phrase": "disjoint_data_streams"}, {"score": 0.004398589723893764, "phrase": "untrusted_server"}, {"score": 0.004186799638538032, "phrase": "continuous_queries"}, {"score": 0.003793206550770237, "phrase": "result_correctness"}, {"score": 0.0037312893857519803, "phrase": "owner's_signatures"}, {"score": 0.0035661605757956096, "phrase": "novel_constructions"}, {"score": 0.0034935290662899488, "phrase": "fundamental_problems"}, {"score": 0.003422371752150812, "phrase": "linear_algebraic_queries"}, {"score": 0.0033251716926666437, "phrase": "dynamic_vector_sums"}, {"score": 0.0032979090806670493, "phrase": "matrix_products"}, {"score": 0.003257432325797907, "phrase": "dot_products"}, {"score": 0.0031260524791486347, "phrase": "wide_range"}, {"score": 0.0031004173389196387, "phrase": "important_operations"}, {"score": 0.002684257009647205, "phrase": "window_queries"}, {"score": 0.0026403934420630155, "phrase": "multiple_clients"}, {"score": 0.0025972447844047515, "phrase": "different_subsets"}, {"score": 0.0024821782596371536, "phrase": "novel_nonce"}, {"score": 0.0023527296826339225, "phrase": "verification_cost"}, {"score": 0.0022484715639779153, "phrase": "strong_cryptographic_guarantees"}, {"score": 0.002220846338732873, "phrase": "formal_definitions"}, {"score": 0.0021049977753042253, "phrase": "performance-sensitive_streaming_setting"}], "paper_keywords": ["Algorithms", " Security", " Data integrity", " data streams", " query authentication"], "paper_abstract": "We consider a stream outsourcing setting, where a data owner delegates the management of a set of disjoint data streams to an untrusted server. The owner authenticates his streams via signatures. The server processes continuous queries on the union of the streams for clients trusted by the owner. Along with the results, the server sends proofs of result correctness derived from the owner's signatures, which are verifiable by the clients. We design novel constructions for a collection of fundamental problems over streams represented as linear algebraic queries. In particular, our basic schemes authenticate dynamic vector sums, matrix products, and dot products. These techniques can be adapted for authenticating a wide range of important operations in streaming environments, including group-by queries, joins, in-network aggregation, similarity matching, and event processing. We also present extensions to address the case of sliding window queries, and when multiple clients are interested in different subsets of the data. These methods take advantage of a novel nonce chaining technique that we introduce, which is used to reduce the verification cost without affecting any other costs. All our schemes are lightweight and offer strong cryptographic guarantees derived from formal definitions and proofs. We experimentally confirm the practicality of our schemes in the performance-sensitive streaming setting.", "paper_title": "Lightweight Query Authentication on Streams", "paper_id": "WOS:000347799000005"}