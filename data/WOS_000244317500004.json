{"auto_keywords": [{"score": 0.040391456401351215, "phrase": "problem_domain_concepts"}, {"score": 0.040029450721471016, "phrase": "decision_points"}, {"score": 0.00481495049065317, "phrase": "natural_language_requirements"}, {"score": 0.004770211811866158, "phrase": "software_assurance"}, {"score": 0.00466016686289196, "phrase": "engineering_software-intensive_systems"}, {"score": 0.00436530211426514, "phrase": "related_stakeholders"}, {"score": 0.00428451995524549, "phrase": "exhaustive_nature"}, {"score": 0.004127394241838696, "phrase": "software-intensive_systems"}, {"score": 0.0034398445347109396, "phrase": "natural_language_specifications"}, {"score": 0.00329813918116714, "phrase": "complex_interdependencies"}, {"score": 0.0032674478600540477, "phrase": "different_levels"}, {"score": 0.0031919592786945126, "phrase": "organizational_hierarchy"}, {"score": 0.0031036643805367487, "phrase": "subjective_interpretations"}, {"score": 0.0030747771905143273, "phrase": "non-standard_implementations"}, {"score": 0.002893434697072309, "phrase": "systematic_methodology"}, {"score": 0.0028664985822266344, "phrase": "novel_techniques"}, {"score": 0.002684819249720834, "phrase": "uniform_representation_format"}, {"score": 0.0026474076254702525, "phrase": "common_understanding"}, {"score": 0.002550165781755603, "phrase": "advanced_ontological_engineering_techniques"}, {"score": 0.002514625755809045, "phrase": "theoretical_re_foundations"}, {"score": 0.0023662411481713682, "phrase": "significant_and_difficult_decision_points"}, {"score": 0.0022161977759646693, "phrase": "decision_support_problem_domain_ontology"}, {"score": 0.0021049977753042253, "phrase": "ditscap"}], "paper_keywords": ["software-intensive systems", " requirements engineering", " certification and accreditation", " critical infrastructure protection", " ontological engineering", " decision making"], "paper_abstract": "The process of engineering software-intensive systems that comply with their Certification and Accreditation (C&A) requirements involves many critical decision-making activities for the related stakeholders. Considering the exhaustive nature of C&A activities together with the complexity of software-intensive systems, effective decision making relies heavily on the ways to understand and structure the problem domain concepts concerning decision points for interpretation, applicability, scope, evaluation, and impact of the enforced C&A requirements. These decision points are further complicated by natural language specifications of inherently non-functional C&A requirements scattered across multiple regulatory documents with complex interdependencies at different levels of abstractions in the organizational hierarchy, which often result in subjective interpretations and non-standard implementations of the C&A process. To address these issues, we define a systematic methodology using novel techniques from software Requirements Engineering (RE) and knowledge engineering for understanding and structuring the problem domain concepts based on a uniform representation format that promotes common understanding among stakeholders. Specifically, we use advanced ontological engineering techniques driven by theoretical RE foundations to systematically elicit, model, understand, and analyze problem domain concepts concerning significant and difficult decision points throughout the C&A process. We demonstrate the appropriateness of our methodology in creating decision support problem domain ontology using several examples derived from our experiences on automating the Department of Defense Information Technology Security C&A Process (DITSCAP).", "paper_title": "Building decision support problem domain ontology from natural language requirements for software assurance", "paper_id": "WOS:000244317500004"}