{"auto_keywords": [{"score": 0.02908056878145193, "phrase": "spare_cores"}, {"score": 0.00481495049065317, "phrase": "agent-based_dynamic_reconfiguration"}, {"score": 0.004772137871562584, "phrase": "networks-on-chip"}, {"score": 0.00458412183693466, "phrase": "large-scale_applications"}, {"score": 0.004482873744893272, "phrase": "required_number"}, {"score": 0.004403480614319231, "phrase": "critical_and_excessive_computations"}, {"score": 0.003973398317120165, "phrase": "efficient_resource_management"}, {"score": 0.0037157201349604222, "phrase": "agent-based_management_system"}, {"score": 0.003601235776892337, "phrase": "three-level_hierarchy"}, {"score": 0.0034283921404628975, "phrase": "agents_hierarchy"}, {"score": 0.003382704886584695, "phrase": "fault-tolerance_mechanisms"}, {"score": 0.003278447235176858, "phrase": "task_reallocation"}, {"score": 0.0032492519841546682, "phrase": "local_reconfiguration"}, {"score": 0.00303839203670705, "phrase": "original_performance"}, {"score": 0.0026095920086044145, "phrase": "efficient_utilization"}, {"score": 0.0023968383387667404, "phrase": "adequate_level"}, {"score": 0.0023021895404322767, "phrase": "local_reconfiguration_procedure"}, {"score": 0.0021915573326125428, "phrase": "dynamic_agent-based_noc_management_architecture"}, {"score": 0.0021334650920198715, "phrase": "event-b_framework"}], "paper_keywords": ["Agent-based system", " Dynamic reconfiguration", " Event-B", " Formal methods", " Fault-tolerance", " Network-On-Chip"], "paper_abstract": "A Network-On-Chip (NoC) platform is an emerging topology for large-scale applications. It provides a required number of resources for critical and excessive computations. However, the computations may be interrupted by faults occurring at run-time. Hence, reliability of computations as well as efficient resource management at run-time are crucial for such many-core NoC systems. To achieve this, we utilize an agent-based management system where agents are organized in a three-level hierarchy. We propose to incorporate reallocation and reconfiguration procedures into agents hierarchy such that fault-tolerance mechanisms can be executed at run-time. Task reallocation enables local reconfiguration of a core allowing it to be eventually reused in order to restore the original performance of communication and computations. The contributions of this paper are: (i) an algorithm for initial application mapping with spare cores, (ii) a multi-objective algorithm for efficient utilization of spare cores at run-time in order to enhance fault-tolerance while maintaining efficiency of communication and computations at an adequate level, (iii) an algorithm integrating the local reconfiguration procedure and (iv) formal modeling and verification of the dynamic agent-based NoC management architecture incorporating these algorithms within the Event-B framework. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Formal approach to agent-based dynamic reconfiguration in Networks-On-Chip", "paper_id": "WOS:000326558500005"}