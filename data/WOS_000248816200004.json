{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dialect_grammars"}, {"score": 0.004682708592184678, "phrase": "essential_task"}, {"score": 0.0045119929871912405, "phrase": "software_maintenance_tools"}, {"score": 0.004347473906950474, "phrase": "command-line_interface"}, {"score": 0.003961842092184655, "phrase": "large_diffusion"}, {"score": 0.003817306032290766, "phrase": "standard_grammars"}, {"score": 0.003543804852018315, "phrase": "tedious_and_error-prone_task"}, {"score": 0.0033986345279488476, "phrase": "grammar_inference"}, {"score": 0.0032593915869553714, "phrase": "suitable_grammars"}, {"score": 0.0032292292848296617, "phrase": "program_examples"}, {"score": 0.003111336942540226, "phrase": "serious_scalability_issues"}, {"score": 0.0027698788736535865, "phrase": "genetic_algorithms"}, {"score": 0.0027188259793109264, "phrase": "existing_grammars"}, {"score": 0.0024429654627197393, "phrase": "c_dialect_rules"}], "paper_keywords": ["grammar inference", " genetic algorithms", " source code analysis"], "paper_abstract": "Building parsers is an essential task for the development of many tools, from software maintenance tools to any kind of business-specific, programmable environment having a command-line interface. Whilst grammars for many programming languages are available, these are, very often, almost useless because of the large diffusion of dialects and variants not contemplated by standard grammars. Writing a grammar by hand is clearly feasible, however it can be a tedious and error-prone task, requiring appropriate skills not always available. Grammar inference is a possible, challenging approach for obtaining suitable grammars from program examples. However, inference from scratch poses serious scalability issues and tends to produce correct, but meaningless grammars, hard to be understood and used to build tools. This paper describes an approach, based on genetic algorithms, for evolving existing grammars towards target (dialect) grammars, inferring changes from examples written using the dialect. Results obtained experimenting the inference of C dialect rules show that the algorithm is able to successfully evolve the grammar. Inspections indicated that the changes automatically made to the grammar during its evolution preserved its meaningfulness, and were comparable to what a developer could have done by hand.", "paper_title": "Search-based inference of dialect grammars", "paper_id": "WOS:000248816200004"}