{"auto_keywords": [{"score": 0.02837501480663478, "phrase": "inherent_nondeterminism"}, {"score": 0.025650094613660787, "phrase": "stairs"}, {"score": 0.01487815737654808, "phrase": "sequence_diagrams"}, {"score": 0.010190986097624005, "phrase": "valid_implementation"}, {"score": 0.004814952993626167, "phrase": "underspecification"}, {"score": 0.0036167509502276294, "phrase": "specified_component"}, {"score": 0.0022977342663599042, "phrase": "compositional_and_incremental_development"}, {"score": 0.0021049977753042253, "phrase": "probabilistic_stairs"}], "paper_keywords": [""], "paper_abstract": "Nondeterminism in specifications may be used for at least two different purposes. One is to express underspecification, which means that the specifier for the same environment behavior allows several alternative behaviors of the specified component and leaves the choice between these to those responsible for implementing the specification. In this case a valid implementation will need to implement at least one, but not necessarily all, alternatives. The other purpose is to express inherent nondeterminism, which means that a valid implementation needs to reflect all alternatives. STAIRS is an approach to the compositional and incremental development of sequence diagrams supporting underspecification as well as inherent nondeterminism. Probabilistic STAIRS builds on STAIRS and allows probabilities to be included in the specifications. Underspecification with respect to probabilities is also allowed. This paper investigates the use of underspecification, inherent nondeterminism and probability in sequence diagrams, the relationships between these concepts, and how these are expressed in STAIRS and probabilistic STAIRS.", "paper_title": "Underspecification, inherent nondeterminism and probability in sequence diagrams", "paper_id": "WOS:000239478000012"}