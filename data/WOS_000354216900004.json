{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "minizinc"}, {"score": 0.004688321299229397, "phrase": "modelling_language"}, {"score": 0.004605748839642513, "phrase": "combinatorial_problems"}, {"score": 0.0037209035703970705, "phrase": "constraint_programming"}, {"score": 0.0036553070575015344, "phrase": "integer_programming"}, {"score": 0.0035590664550919854, "phrase": "boolean_satisfiability"}, {"score": 0.003114449258490062, "phrase": "constraint-based_local_search"}, {"score": 0.0025605773834404253, "phrase": "cbls_backend"}, {"score": 0.002470987929071079, "phrase": "experimental_results"}, {"score": 0.0023633857274905977, "phrase": "minizinc_models"}, {"score": 0.0021049977753042253, "phrase": "good-quality_results"}], "paper_keywords": ["Constraint-based local search", " MiniZinc"], "paper_abstract": "MiniZinc is a modelling language for combinatorial problems, which can then be solved by a solver provided in a backend. There are many backends, based on technologies such as constraint programming, integer programming, or Boolean satisfiability solving. However, to the best of our knowledge, there is currently no constraint-based local search (CBLS) backend. We discuss the challenges to develop such a backend and give an overview of the design of a CBLS backend for MiniZinc. Experimental results show that for some MiniZinc models, our CBLS backend, based on the OscaR/CBLS solver, is able to give good-quality results in competitive time.", "paper_title": "A constraint-based local search backend for MiniZinc", "paper_id": "WOS:000354216900004"}