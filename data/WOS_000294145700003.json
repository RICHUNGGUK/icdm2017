{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multiplicative_exponential_fragment"}, {"score": 0.004745056850725867, "phrase": "linear_logic"}, {"score": 0.003981106369547929, "phrase": "different_choice"}, {"score": 0.0035934073774126856, "phrase": "substitution_operations"}, {"score": 0.0031728680535262083, "phrase": "beta-strong_normalisation"}, {"score": 0.0030587884803931964, "phrase": "typed_terms"}, {"score": 0.0030143100083252516, "phrase": "full_composition"}, {"score": 0.0028220038404484196, "phrase": "explicit_substitutions"}, {"score": 0.00276066021951467, "phrase": "whole_development"}, {"score": 0.002248553559414903, "phrase": "particular_case"}, {"score": 0.0021996478802839316, "phrase": "general_abstract_proofs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Lambda-calculus", " Explicit resources", " Linear Logic"], "paper_abstract": "Inspired by the Multiplicative Exponential fragment of Linear Logic, we define a framework called the prismoid of resources where each vertex is a language which refines the lambda-calculus by using a different choice to make explicit or implicit (meta-level) the definition of the contraction, weakening, and substitution operations. For all the calculi in the prismoid we show simulation of beta-reduction, confluence, preservation of beta-strong normalisation and strong normalisation for typed terms. Full composition also holds for all the calculi of the prismoid handling explicit substitutions. The whole development of the prismoid is done by making the set of resources a parameter of the formalism, so that all the properties for each vertex are obtained as a particular case of the general abstract proofs. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A prismoid framework for languages with resources", "paper_id": "WOS:000294145700003"}