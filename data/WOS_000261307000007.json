{"auto_keywords": [{"score": 0.014526633647092667, "phrase": "fpu"}, {"score": 0.00481495049065317, "phrase": "embedded_applications"}, {"score": 0.0046797114400479135, "phrase": "ail_open-source"}, {"score": 0.0043703658695579085, "phrase": "embedded_systems"}, {"score": 0.004104722208522451, "phrase": "high_parallelism"}, {"score": 0.003989351600022163, "phrase": "functional_units"}, {"score": 0.0036207206487324506, "phrase": "different_versions"}, {"score": 0.0033427754823819157, "phrase": "logic_synthesis_results"}, {"score": 0.0030337085953063125, "phrase": "k_logic"}, {"score": 0.0029148831519944358, "phrase": "altera_stratix_fpga."}, {"score": 0.002881793492919646, "phrase": "proposed_fpu"}, {"score": 0.0026152495507504713, "phrase": "dsp"}, {"score": 0.002414290278501595, "phrase": "clock_cycles"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Floating-point", " FPU", " Coprocessor", " VHDL", " Embedded"], "paper_abstract": "This paper describes ail open-source and highly scalable floating-point Unit (FPU) for embedded systems. Our FPU is fast and efficient, due to the high parallelism of its architecture: the functional Units inside the datapath can operate in parallel and independently from each other. A comparison between different versions of the FPU has been made to highlight how performance scales accordingly. Logic synthesis results Show that our FPU requires 105 Kgates and runs at 400 MHz on a low-power 90 not std-cells low-power technology, and requires 20 K Logic Elements running at 67 MHz of an Altera Stratix FPGA. The proposed FPU is supported by a software too[ suite Which compiles programs Written using the C/C++ language. A set of DSP and 3D graphics algorithms have been benchmarked, showing that using our FPU the amount of clock cycles required to perform each algorithm is one order of magnitude smaller than what is required by its corresponding software implementation. (c) 2008 Published by Elsevier B.V.", "paper_title": "Design space exploration of an open-source, IP-reusable, scalable floating-point engine for embedded applications", "paper_id": "WOS:000261307000007"}