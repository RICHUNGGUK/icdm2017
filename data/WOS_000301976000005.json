{"auto_keywords": [{"score": 0.03181453891630958, "phrase": "design_model"}, {"score": 0.00481495049065317, "phrase": "context-aware_cscw_applications"}, {"score": 0.0045464538515249085, "phrase": "programming_framework"}, {"score": 0.004243862930012258, "phrase": "generative_application_development"}, {"score": 0.0041001740903338834, "phrase": "context-aware_collaborative_applications"}, {"score": 0.0038271712887391015, "phrase": "context-aware_applications"}, {"score": 0.003613556291453534, "phrase": "domain-specific_design_model"}, {"score": 0.0031121406603482112, "phrase": "key_features"}, {"score": 0.0028715299874549245, "phrase": "context-based_service_discovery"}, {"score": 0.0027424619603260837, "phrase": "context-based_access_control"}, {"score": 0.002680114113899346, "phrase": "context-based_multiuser_coordination"}, {"score": 0.0025892330566358503, "phrase": "context-triggered_automated_task_executions"}, {"score": 0.002361632539339945, "phrase": "policy-based_specialization"}, {"score": 0.0022815262950738814, "phrase": "application-specific_middleware_components"}, {"score": 0.0022041312401435346, "phrase": "generic_middleware_components"}, {"score": 0.0021049977753042253, "phrase": "case-study_example"}], "paper_keywords": ["Design", " Experimentation", " Languages", " Measurement", " Security", " Context-aware computing", " pervasive computing", " generative middleware"], "paper_abstract": "We present a programming framework based on the paradigm of generative application development for building context-aware collaborative applications. In this approach, context-aware applications are implemented using a domain-specific design model, and their execution environment is generated and maintained by the middleware. The key features of this design model include support for context-based service discovery and binding, context-based access control, context-based multiuser coordination, and context-triggered automated task executions. The middleware uses the technique of policy-based specialization for generating application-specific middleware components from the generic middleware components. Through a case-study example, we demonstrate this approach and present the evaluations of the design model and the middleware.", "paper_title": "A Generative Programming Framework for Context-Aware CSCW Applications", "paper_id": "WOS:000301976000005"}