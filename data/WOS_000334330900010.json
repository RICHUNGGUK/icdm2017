{"auto_keywords": [{"score": 0.04738802715775448, "phrase": "shared_data"}, {"score": 0.04102155612877039, "phrase": "hard_real-time_systems"}, {"score": 0.00481495049065317, "phrase": "coherent_data_cache"}, {"score": 0.004677847043645765, "phrase": "multicore_systems"}, {"score": 0.004597457370802855, "phrase": "concurrent_access"}, {"score": 0.004389745162172933, "phrase": "system_performance"}, {"score": 0.004339293854115301, "phrase": "cache_coherence_techniques"}, {"score": 0.004191377834552202, "phrase": "fast_access"}, {"score": 0.004095567486538121, "phrase": "data_coherence"}, {"score": 0.004001938457469328, "phrase": "coherence_protocols"}, {"score": 0.0038210283935447473, "phrase": "frequent_inter-cache_communication"}, {"score": 0.0036063061558261546, "phrase": "system's_timing_behaviour"}, {"score": 0.0029967610945411593, "phrase": "marginal_hardware_extensions"}, {"score": 0.002945175711537758, "phrase": "noncoherent_caches"}, {"score": 0.002861160152640875, "phrase": "common_synchronisation_techniques"}, {"score": 0.002795671770303977, "phrase": "coherent_accesses"}, {"score": 0.00265373679629359, "phrase": "private_data"}, {"score": 0.0025929837295811673, "phrase": "presented_strategy"}, {"score": 0.0025044454602720597, "phrase": "local_caches"}, {"score": 0.0021921063460682293, "phrase": "bus-based_multicore_system"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["cache coherence", " real-time", " processor architecture"], "paper_abstract": "In multicore systems, the concurrent access to shared data generates a bottleneck for the system performance. Cache coherence techniques have been introduced to enable fast access while preserving the data coherence, but these coherence protocols are critical in hard real-time systems. Because the frequent inter-cache communication leads to unpredictable interferences between the cores, the system's timing behaviour is hard to analyse. In this paper, we propose a new, hard real-time capable strategy for multicore systems called on-demand coherent cache (ODC2). The technique is based on marginal hardware extensions compared with noncoherent caches and the use of common synchronisation techniques. ODC2 provides coherent accesses to cached shared data as well as caching of private data. Because the presented strategy does not induce interferences between local caches, ODC2 is capable for hard real-time systems. We present an evaluation of performance and scalability of ODC2 compared with two standard coherence protocols using a bus-based multicore system. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "A real-time capable coherent data cache for multicores", "paper_id": "WOS:000334330900010"}