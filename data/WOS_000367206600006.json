{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stm-hrt"}, {"score": 0.012632840038816935, "phrase": "hrt_systems"}, {"score": 0.004550029253278477, "phrase": "hard_real-time_multicore_embedded_systems"}, {"score": 0.0041562293148727555, "phrase": "stm"}, {"score": 0.004086010164600727, "phrase": "hard_real-time"}, {"score": 0.0039050245929822354, "phrase": "resource_access_control"}, {"score": 0.0037532257703888315, "phrase": "lock-based_synchronization"}, {"score": 0.003026127736667187, "phrase": "upper_bound"}, {"score": 0.002975099633631871, "phrase": "execution_time"}, {"score": 0.0027170943110836425, "phrase": "robust_solution"}, {"score": 0.0026864540069792275, "phrase": "resource_sharing"}, {"score": 0.002656158309155626, "phrase": "hrt_multicore_systems"}, {"score": 0.0025819015229390663, "phrase": "detailed_description"}, {"score": 0.002552781867125423, "phrase": "stm-hrt_architecture"}, {"score": 0.002398382089724878, "phrase": "functional_correctness"}, {"score": 0.0022661190184053628, "phrase": "real-time_analysis"}, {"score": 0.002215274527909304, "phrase": "upper_bounds"}, {"score": 0.002129020447793464, "phrase": "shared_data"}, {"score": 0.0021049977753042253, "phrase": "stm-hrt."}], "paper_keywords": ["Concurrency Control", " Process Synchronization", " Deadlocks", " Hard real time", " embedded systems", " nonblocking synchronization", " software transactional memory"], "paper_abstract": "This article introduces STM-HRT, a nonblocking wait-free software transactional memory (STM) for hard real-time (HRT) multicore embedded systems. Resource access control in HRT systems is usually implemented with lock-based synchronization. However, these mechanisms may lead to deadlocks or starvations and do not scale well with the number of cores. Most existing nonblocking STM are not suitable for HRT systems, because it is not possible to find an upper bound of the execution time for each task. In this article, we show how STM-HRT can be a robust solution for resource sharing in HRT multicore systems. We provide a detailed description of STM-HRT architecture. We propose a set of arguments to establish the functional correctness of its concurrency control protocol. Finally, as part of a real-time analysis, we derive upper bounds on the computations required to access shared data under STM-HRT.", "paper_title": "STM-HRT: A Robust and Wait-Free STM for Hard Real-Time Multicore Embedded Systems", "paper_id": "WOS:000367206600006"}