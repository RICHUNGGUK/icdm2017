{"auto_keywords": [{"score": 0.04923427303787291, "phrase": "bounded_max_leaf_number"}, {"score": 0.045521727399967175, "phrase": "general_interest"}, {"score": 0.004629977311316031, "phrase": "parameterized_complexity"}, {"score": 0.004467965784278827, "phrase": "different_parameterized"}, {"score": 0.004420472010542188, "phrase": "unparameterized_problem"}, {"score": 0.004311598785718415, "phrase": "well-developed_example"}, {"score": 0.004205395707787349, "phrase": "parameter_treewidth"}, {"score": 0.0039723268236794935, "phrase": "real-world_input_distributions"}, {"score": 0.003846926701870193, "phrase": "natural_computational_processes"}, {"score": 0.0035822005511799036, "phrase": "max_leaf_number"}, {"score": 0.0035189057079817285, "phrase": "connected_graph"}, {"score": 0.0034690732089830045, "phrase": "maximum_number"}, {"score": 0.0034077704063304208, "phrase": "spanning_tree"}, {"score": 0.003383552654319383, "phrase": "g._exploring_questions"}, {"score": 0.0033356305227059072, "phrase": "well-studied_case"}, {"score": 0.002954669496511141, "phrase": "optimization_problems"}, {"score": 0.0027610089418453614, "phrase": "large_number"}, {"score": 0.0027413748388534025, "phrase": "graph_problems"}, {"score": 0.0027121844541913367, "phrase": "input_graphs"}, {"score": 0.0025892330566358503, "phrase": "polynomial-time_extremal_structure_theory"}, {"score": 0.0025073851194697397, "phrase": "improved_algorithms"}, {"score": 0.0024368006923629476, "phrase": "kernelization_bounds"}, {"score": 0.0023346776710752998, "phrase": "fpt"}, {"score": 0.0022050057829960694, "phrase": "concrete_algorithmic_results"}, {"score": 0.0021049977753042253, "phrase": "programmatic_questions"}], "paper_keywords": ["Parameterized complexity", " Max-leaf", " Bandwidth", " Well-quasiordering", " Kernelization"], "paper_abstract": "In the framework of parameterized complexity, exploring how one parameter affects the complexity of a different parameterized (or unparameterized problem) is of general interest. A well-developed example is the investigation of how the parameter treewidth influences the complexity of (other) graph problems. The reason why such investigations are of general interest is that real-world input distributions for computational problems often inherit structure from the natural computational processes that produce the problem instances (not necessarily in obvious, or well-understood ways). The max leaf number ml(G) of a connected graph G is the maximum number of leaves in a spanning tree for G. Exploring questions analogous to the well-studied case of treewidth, we can ask: how hard is it to solve 3-COLORING, HAMILTON PATH, MINIMUM DOMINATING SET, MINIMUM BANDWIDTH or many other problems, for graphs of bounded max leaf number? What optimization problems are W[1]-hard under this parameterization? We do two things: (1) We describe much improved FPT algorithms for a large number of graph problems, for input graphs G for which ml(G) <= k, based on the polynomial-time extremal structure theory canonically associated to this parameter. We consider improved algorithms both from the point of view of kernelization bounds, and in terms of improved fixed-parameter tractable (FPT) runtimes O*(f(k)). (2) The way that we obtain these concrete algorithmic results is general and systematic. We describe the approach, and raise programmatic questions.", "paper_title": "The Complexity Ecology of Parameters: An Illustration Using Bounded Max Leaf Number", "paper_id": "WOS:000268585400009"}