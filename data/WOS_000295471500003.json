{"auto_keywords": [{"score": 0.0497090303722539, "phrase": "kriegspiel"}, {"score": 0.004219912413995784, "phrase": "different_boards"}, {"score": 0.003904713104101532, "phrase": "full_state"}, {"score": 0.0038148090091532933, "phrase": "third_board"}, {"score": 0.0037414662674652805, "phrase": "player's_move_attempt"}, {"score": 0.0035024506353894644, "phrase": "illegal_moves"}, {"score": 0.00326594229173048, "phrase": "negative_information"}, {"score": 0.0031050953733360825, "phrase": "highly_dynamic_uncertainty"}, {"score": 0.002742017872865778, "phrase": "manual_algorithms"}, {"score": 0.002668420182908979, "phrase": "lone_king"}, {"score": 0.002356282242320051, "phrase": "search_algorithm"}, {"score": 0.002319918823705175, "phrase": "kriegspiel_endgames"}, {"score": 0.0022841153001549193, "phrase": "relatively_simple_evaluation_functions"}, {"score": 0.0021799789348982534, "phrase": "quick_checkmate"}, {"score": 0.002154693685426657, "phrase": "vast_majority"}, {"score": 0.0021049977753042253, "phrase": "existing_manual_methods"}], "paper_keywords": ["Chess", " Kriegspiel", " search algorithms", " wargame"], "paper_abstract": "Kriegspiel is a wargame based on the rules of Chess. In fact, the only difference between Kriegspiel and Chess is that each player does not know his opponent's moves: the two players use different boards. A player only knows the position of his own pieces, while his opponent's pieces are invisible. A referee maintains the full state of the game on a third board. He answers a player's move attempt with information on its outcome, such as checks or piece captures. The referee also rejects illegal moves, forcing the player to try again. In this case, the player can exploit the negative information he received from the referee. As Kriegspiel has a very large state space and highly dynamic uncertainty, it is a very hard game for computers to play. In this paper, we focus on the simpler, but still difficult, task of playing the endgame. While manual algorithms have been developed to checkmate the lone King in various scenarios, they are often hard to translate into code, partially or ambiguously defined, and quite inefficient in the number of moves to mate. We describe a search algorithm for exploring the Kriegspiel endgames, and provide relatively simple evaluation functions able to progress through uncertainty. We show that our algorithm achieves quick checkmate in the vast majority of situations and significantly outperforms existing manual methods.", "paper_title": "Progress Through Uncertainty in Some Kriegspiel Endings", "paper_id": "WOS:000295471500003"}