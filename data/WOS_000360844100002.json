{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large_time_steps"}, {"score": 0.04566265099632426, "phrase": "newton's_method"}, {"score": 0.004757227624616643, "phrase": "practical_time_steps"}, {"score": 0.004293584349522444, "phrase": "large_systems"}, {"score": 0.004242085112539693, "phrase": "nonlinear_equations"}, {"score": 0.004017846065981189, "phrase": "small_time_steps"}, {"score": 0.0037825134619339537, "phrase": "frame_rate"}, {"score": 0.003692271726952282, "phrase": "difficult_or_stiff_simulations"}, {"score": 0.0035609154384221567, "phrase": "backward_euler"}, {"score": 0.003496994062890991, "phrase": "minimization_problem"}, {"score": 0.003352256019007896, "phrase": "standard_optimization_techniques"}, {"score": 0.0032920678776655783, "phrase": "novel_improvements"}, {"score": 0.003174903873774882, "phrase": "resulting_solver"}, {"score": 0.003080449000295983, "phrase": "even_the_toughest_simulations"}, {"score": 0.0027630232270330402, "phrase": "constrained_minimization"}, {"score": 0.0026326249204932733, "phrase": "novel_penalty_collision_formulations"}, {"score": 0.0025235718883452564, "phrase": "scripted_bodies"}, {"score": 0.0024632912250657636, "phrase": "unique_demands"}, {"score": 0.0022361964497681934, "phrase": "material_point_method"}, {"score": 0.0021049977753042253, "phrase": "optimization_problem"}], "paper_keywords": ["Computer graphics", " three-dimensional graphics and realism", " animation"], "paper_abstract": "Practical time steps in today's state-of-the-art simulators typically rely on Newton's method to solve large systems of nonlinear equations. In practice, this works well for small time steps but is unreliable at large time steps at or near the frame rate, particularly for difficult or stiff simulations. We show that recasting backward Euler as a minimization problem allows Newton's method to be stabilized by standard optimization techniques with some novel improvements of our own. The resulting solver is capable of solving even the toughest simulations at the 24 Hz frame rate and beyond. We show how simple collisions can be incorporated directly into the solver through constrained minimization without sacrificing efficiency. We also present novel penalty collision formulations for self collisions and collisions against scripted bodies designed for the unique demands of this solver. Finally, we show that these techniques improve the behavior of Material Point Method (MPM) simulations by recasting it as an optimization problem.", "paper_title": "Optimization Integrator for Large Time Steps", "paper_id": "WOS:000360844100002"}