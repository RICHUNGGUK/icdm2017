{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fuzzy_linguistic_logic_programming"}, {"score": 0.00847727710277416, "phrase": "procedural_semantics"}, {"score": 0.0047135086583390585, "phrase": "logical_system"}, {"score": 0.004594582559945568, "phrase": "linguistically-expressed_human_knowledge"}, {"score": 0.004255431326383001, "phrase": "query_w.r.t"}, {"score": 0.003991932110277654, "phrase": "immediate_consequence_operator_t-p"}, {"score": 0.003512702405367876, "phrase": "whole_least_herbrand_model"}, {"score": 0.003038532168038565, "phrase": "infinite_loop"}, {"score": 0.002961741486178455, "phrase": "rule_bodies"}, {"score": 0.0025291601927956765, "phrase": "non-deterministic_tabulation_procedure"}, {"score": 0.002372298201966367, "phrase": "deterministic_tabulation_procedure"}, {"score": 0.0023123057299992587, "phrase": "non-deterministic_one"}, {"score": 0.0022062235065459274, "phrase": "deterministic_procedure"}, {"score": 0.002178144355363467, "phrase": "threshold_computation"}, {"score": 0.002159623311924437, "phrase": "top-k_retrieval"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Fuzzy logic programming", " Tabulation proof procedure", " Linguistic truth value", " Hedge connective", " Threshold computation", " Top-k retrieval"], "paper_abstract": "Fuzzy linguistic logic programming is a logical system for representing and reasoning with linguistically-expressed human knowledge. In fuzzy linguistic logic programming, up until now, there have been only two methods to compute answers to a query w.r.t. a logic program: (i) by bottom-up iterating the immediate consequence operator T-p; or (ii) by using the procedural semantics. Nevertheless, the former is exhaustive and not goal-oriented. Indeed, it requires computation of the whole least Herbrand model despite the fact that not all the results are required to determine the answer of the query. On the other hand, although the latter is goal-oriented, it may lead to an infinite loop and may recompute atoms in rule bodies. Furthermore, it may not, in general, give a most general answer to a query. In this paper, we develop two query answering procedures which can overcome these problems for fuzzy linguistic logic programming. More precisely, the non-deterministic tabulation procedure is close to the procedural semantics and gives all answers to a query. The deterministic tabulation procedure is more efficient than the non-deterministic one and gives all and only the most general answers to a query. The deterministic procedure also enables threshold computation and top-k retrieval. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Tabulation proof procedures for fuzzy linguistic logic programming", "paper_id": "WOS:000358626500005"}