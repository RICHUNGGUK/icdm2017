{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cell-dock"}, {"score": 0.004258843584164121, "phrase": "large-scale_experiments"}, {"score": 0.0041555469216463855, "phrase": "explicit_treatment"}, {"score": 0.0040880724328903, "phrase": "protein_flexibility"}, {"score": 0.003924121879214595, "phrase": "new_challenges"}, {"score": 0.0038603905208013482, "phrase": "structural_bioinformatics"}, {"score": 0.003736004578001584, "phrase": "large_computer_resources"}, {"score": 0.003528639791684066, "phrase": "fourier"}, {"score": 0.003277140908834426, "phrase": "docking_programs"}, {"score": 0.0029460197288680864, "phrase": "computational_cost"}, {"score": 0.0026483101705267104, "phrase": "fft"}, {"score": 0.002480154140902474, "phrase": "cell_be_processor"}, {"score": 0.002266246304762945, "phrase": "maximum_speedups"}, {"score": 0.0021049977753042253, "phrase": "similar_quality"}], "paper_keywords": [""], "paper_abstract": "The application of docking to large-scale experiments or the explicit treatment of protein flexibility are part of the new challenges in structural bioinformatics that will require large computer resources and more efficient algorithms. Highly optimized fast Fourier transform (FFT) approaches are broadly used in docking programs but their optimal code implementation leaves hardware acceleration as the only option to significantly reduce the computational cost of these tools. In this work we present Cell-Dock, an FFT-based docking algorithm adapted to the Cell BE processor. We show that Cell-Dock runs faster than FTDock with maximum speedups of above 200x, while achieving results of similar quality.", "paper_title": "Cell-Dock: high-performance protein-protein docking", "paper_id": "WOS:000308532300065"}