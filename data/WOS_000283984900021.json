{"auto_keywords": [{"score": 0.04856216099390581, "phrase": "swip"}, {"score": 0.00481495049065317, "phrase": "flexible_design_flow"}, {"score": 0.004763565662615503, "phrase": "software_ip_binding"}, {"score": 0.004712726613162057, "phrase": "fpga._software_intellectual_property"}, {"score": 0.004563427013973105, "phrase": "critical_component"}, {"score": 0.004514714250357749, "phrase": "increasingly_complex_field_programmable_gate_arrays"}, {"score": 0.0037213333316218522, "phrase": "unauthorized_parties"}, {"score": 0.003526735797659508, "phrase": "single_trusted_fpga_platform"}, {"score": 0.0034332736827447654, "phrase": "developers'_concerns"}, {"score": 0.0032888418378433037, "phrase": "market_position"}, {"score": 0.0031504667809625344, "phrase": "novel_design_flow"}, {"score": 0.003050508020268648, "phrase": "commodity_fpga_platform"}, {"score": 0.0030178961017306646, "phrase": "specialized_hardcore_security_facilities"}, {"score": 0.0028446460307503343, "phrase": "physical_unclonable_function"}, {"score": 0.002814229745575123, "phrase": "puf"}, {"score": 0.0027543636132088332, "phrase": "tight_integration"}, {"score": 0.002724909017963099, "phrase": "hardware_and_software_security_features"}, {"score": 0.002306543826130521, "phrase": "secure_remote_software_updates"}, {"score": 0.0022696277881969896, "phrase": "common_challenge"}, {"score": 0.0022453451864218477, "phrase": "embedded_systems"}, {"score": 0.0021049977753042253, "phrase": "design_flow"}], "paper_keywords": ["Design flow", " firmware", " field programmable gate arrays (FPGA)", " intellectual property", " physical unclonable function secure embedded systems", " security", " software binding"], "paper_abstract": "Software intellectual property (SWIP) is a critical component of increasingly complex field programmable gate arrays (FPGA)-based system-on-chip (SOC) designs. As a result, developers want to ensure that their Software Intellectual Property (SWIP) is protected from being exposed to or tampered with by unauthorized parties. By restricting the execution of SWIP to a single trusted FPGA platform, SWIP binding addresses developers' concerns about maintaining control of their intellectual property and the market position it affords. This work proposes a novel design flow for SWIP binding on a commodity FPGA platform lacking specialized hardcore security facilities. We accomplish this by leveraging the qualities of a Physical Unclonable Function (PUF) and a tight integration of hardware and software security features. A prototype implementation demonstrates our design flow's ability to successfully protect software by encryption using a 128 bit FPGA-unique key extracted from a PUF. Based on this proof of concept, a solution to perform secure remote software updates, a common challenge in embedded systems, is proposed to showcase the practicality and flexibility of the design flow.", "paper_title": "A Flexible Design Flow for Software IP Binding in FPGA", "paper_id": "WOS:000283984900021"}