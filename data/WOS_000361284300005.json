{"auto_keywords": [{"score": 0.030055022956564446, "phrase": "shadow_page_table"}, {"score": 0.00481495049065317, "phrase": "embedded_shadow_page_tables"}, {"score": 0.004781777766309739, "phrase": "cross-isa_system_virtual_machines"}, {"score": 0.004748832495727873, "phrase": "cross-isa"}, {"score": 0.004716113134313215, "phrase": "instruction_set_architecture"}, {"score": 0.004571630734130793, "phrase": "significant_research"}, {"score": 0.004540126719762935, "phrase": "practical_value"}, {"score": 0.004416257191177784, "phrase": "virtual_smart_phones"}, {"score": 0.004340553321613485, "phrase": "smart_phone_applications"}, {"score": 0.00425141240073214, "phrase": "cross-isa_system_level_virtual_machines"}, {"score": 0.004178522455099832, "phrase": "mobile_device_application_development"}, {"score": 0.003858936100805083, "phrase": "virtualization_layer"}, {"score": 0.0038190873308414333, "phrase": "high_performance_overhead"}, {"score": 0.0037796484923665855, "phrase": "key_overhead"}, {"score": 0.003740615400423586, "phrase": "memory_virtualization"}, {"score": 0.0037019839121200508, "phrase": "guest_virtual_address"}, {"score": 0.0036133826040506798, "phrase": "multilevel_address_translation"}, {"score": 0.0035637052288771706, "phrase": "host_physical_address"}, {"score": 0.0034069061502294685, "phrase": "address_translation_cost"}, {"score": 0.0033253509237602336, "phrase": "hpa"}, {"score": 0.0032682787834955856, "phrase": "lengthy_guest"}, {"score": 0.0030814613175385672, "phrase": "physical_address_translation"}, {"score": 0.0030285690317007805, "phrase": "original_espt_work"}, {"score": 0.0029052913631676435, "phrase": "loadable_kernel_module"}, {"score": 0.0028063915492697053, "phrase": "lkms"}, {"score": 0.0027582072733520475, "phrase": "system_virtual_machines"}, {"score": 0.0024432508011008563, "phrase": "shared_memory_mapping_scheme"}, {"score": 0.002287688710990596, "phrase": "spt"}, {"score": 0.0022560827223539934, "phrase": "greater_details"}, {"score": 0.0021716944668428865, "phrase": "standard_and_real_android_applications"}, {"score": 0.002149231173009159, "phrase": "system_virtual_machine"}], "paper_keywords": ["Management", " Measurement", " Performance", " Design", " Experimentation", " Security", " memory virtualization", " cross-ISA virtualization", " Embedded Shadow Page Table", " HSPT", " Hosted Shadow Page Table", " practical implementation", " loadable kernel module", " Security", " Portability"], "paper_abstract": "Cross-ISA (Instruction Set Architecture) system-level virtual machine has a significant research and practical value. For example, several recently announced virtual smart phones for iOS which run smart phone applications on x86 based PCs are deployed on cross-ISA system level virtual machines. Also, for mobile device application development, by emulating the Android/ARM environment on the more powerful x86-64 platform, application development and debugging become more convenient and productive. However, the virtualization layer often incurs high performance overhead. The key overhead comes from memory virtualization where a guest virtual address (GVA) must go through multilevel address translation to become a host physical address (HPA). The Embedded Shadow Page Table (ESPT) approach has been proposed to effectively decrease this address translation cost. ESPT directly maps GVA to HPA, thus avoid the lengthy guest virtual to guest physical, guest physical to host virtual, and host virtual to host physical address translation. However, the original ESPT work has a few drawbacks. For example, its implementation relies on a loadable kernel module (LKM) to manage the shadow page table. Using LKMs is less desirable for system virtual machines due to portability, security and maintainability concerns. Our work proposes a different, yet more practical, implementation to address the shortcomings. Instead of relying on using LKMs, our approach adopts a shared memory mapping scheme to maintain the shadow page table (SPT) using only \"mmap\" system call. Furthermore, this work studies the support of SPT for multi-processing in greater details. It devices three different SPT organizations and evaluates their strength and weakness with standard and real Android applications on the system virtual machine which emulates the Android/ ARM platform on x86-64 systems.", "paper_title": "HSPT: Practical Implementation and Efficient Management of Embedded Shadow Page Tables for Cross-ISA System Virtual Machines", "paper_id": "WOS:000361284300005"}