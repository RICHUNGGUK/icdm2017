{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "knapsack_problem"}, {"score": 0.014494658726600645, "phrase": "single_computer"}, {"score": 0.004724708238414131, "phrase": "new_adaptive_genetic_algorithm"}, {"score": 0.0043527164193299574, "phrase": "quasi-parallel_time"}, {"score": 0.0038608730929994696, "phrase": "locus_statistics"}, {"score": 0.003788444178071508, "phrase": "fitness_distribution"}, {"score": 0.0036246643358397272, "phrase": "n_rows"}, {"score": 0.003579179502431823, "phrase": "l_columns"}, {"score": 0.0032148229832850215, "phrase": "encoded_chromosomes"}, {"score": 0.0031544754107802413, "phrase": "mutation_matrix"}, {"score": 0.002887450071878095, "phrase": "accumulated_information"}, {"score": 0.0021726139494880653, "phrase": "investment_frontier"}, {"score": 0.0021453112313233554, "phrase": "time_allocation"}, {"score": 0.0021049977753042253, "phrase": "optimal_configuration"}], "paper_keywords": [""], "paper_abstract": "A new adaptive genetic algorithm using mutation matrix is introduced and implemented in a single computer using the quasi-parallel time sharing algorithm for the solution of the zero/one knapsack problem. The mutation matrix M(t) is constructed using the locus statistics and the fitness distribution in a population A(t) with N rows and L columns, where N is the size of the population and L is the length of the encoded chromosomes. The mutation matrix is parameter free and adaptive as it is time dependent and captures the accumulated information in the past generation. Two strategies of evolution, mutation by row (chromosome), and mutation by column (locus) are discussed. Time sharing experiment on these two strategies is performed on a single computer for solving the knapsack problem. Based on the investment frontier of time allocation, the optimal configuration for solving the knapsack problem is found.", "paper_title": "Adaptive genetic algorithm and quasi-parallel genetic algorithm: application to knapsack problem", "paper_id": "WOS:000236456400020"}