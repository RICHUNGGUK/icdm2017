{"auto_keywords": [{"score": 0.03733329838869367, "phrase": "execution_time"}, {"score": 0.004654210559456924, "phrase": "area_efficiency"}, {"score": 0.0037532257703888315, "phrase": "area_utilization"}, {"score": 0.003467040410632942, "phrase": "power_consumption"}, {"score": 0.0033511469200347907, "phrase": "efficient_heuristic_algorithm"}, {"score": 0.0026113524778702602, "phrase": "exact_algorithm"}, {"score": 0.0025239898026543964, "phrase": "dynamic_programming"}, {"score": 0.0023579143175099324, "phrase": "optimal_solution"}, {"score": 0.002305014991156598, "phrase": "small-sized_problems"}, {"score": 0.002129020447793464, "phrase": "proposed_heuristic_algorithm_yields"}], "paper_keywords": ["heuristic algorithm", " dynamic programming", " complexity", " hardware/software partitioning", " embedded system"], "paper_abstract": "Area efficiency is one of the major considerations in constraint aware hardware/software partitioning process. This paper focuses on the algorithmic aspects for hardware/software partitioning with the objective of minimizing area utilization under the constraints of execution time and power consumption. An efficient heuristic algorithm running in O(n log n) is proposed by extending the method devised for solving the 0-1 knapsack problem. Also, an exact algorithm based on dynamic programming is proposed to produce the optimal solution for small-sized problems. Simulation results show that the proposed heuristic algorithm yields very good approximate solutions while dramatically reducing the execution time.", "paper_title": "Algorithmic aspects of area-efficient hardware/software partitioning", "paper_id": "WOS:000241111000001"}