{"auto_keywords": [{"score": 0.023708929821431163, "phrase": "cca"}, {"score": 0.00481495049065317, "phrase": "sparse_linear_systems"}, {"score": 0.004767261858417823, "phrase": "iterative_methods"}, {"score": 0.004696608876994947, "phrase": "important_role"}, {"score": 0.0046269981365987915, "phrase": "large-scale_systems"}, {"score": 0.0044685410845412745, "phrase": "real-world_applications"}, {"score": 0.0043804319008535555, "phrase": "numerous_linear_system_properties"}, {"score": 0.004024863549087511, "phrase": "good_sparse_linear_system_solver"}, {"score": 0.0038676325043529524, "phrase": "solution_methods"}, {"score": 0.00367967106192446, "phrase": "sparskit"}, {"score": 0.0035358770665604657, "phrase": "scientific_community"}, {"score": 0.003380791705551809, "phrase": "cumbersome_interface"}, {"score": 0.0030906666356950887, "phrase": "modern_applications"}, {"score": 0.0028253682745674608, "phrase": "sparskit_components"}, {"score": 0.0027148677103585985, "phrase": "original_and_new_iterative_methods"}, {"score": 0.002444883254621769, "phrase": "component_framework"}, {"score": 0.0023028105026714533, "phrase": "programming_languages"}, {"score": 0.002158179521369965, "phrase": "sparskit._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["component architecture", " iterative methods", " sparse matrices"], "paper_abstract": "Iterative methods play an important role in solving large-scale systems of linear equations that arise in real-world applications. Due to numerous linear system properties that may affect the solution, it is rather difficult for a user to develop a good sparse linear system solver from scratch. Thus, various collections of solution methods are made available to the user. One such software package is SPARSKIT, which is well known in the scientific community. Written in FORTRAN77 and provided with a cumbersome interface, it is considered, however, a legacy code. Our objective is to enable its wider usage in modern applications and to facilitate further SPARSKIT enhancements. Applying a 'peer-component' design, we have created a set of SPARSKIT components that: (a) incorporate both original and new iterative methods; (b) are readily extensible with more methods; (c) may be connected to applications in a component framework; and (d) provide access from a variety of programming languages. Tools available from the Common Component Architecture (CCA) Forum enabled our component design of SPARSKIT. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Component-based iterative methods for sparse linear systems", "paper_id": "WOS:000245572300006"}