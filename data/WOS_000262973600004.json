{"auto_keywords": [{"score": 0.0464374488056209, "phrase": "cfg"}, {"score": 0.006128403806432168, "phrase": "cfg."}, {"score": 0.00481495049065317, "phrase": "efficient_reconfigurable"}, {"score": 0.0046164478775379105, "phrase": "highly_efficient_architecture"}, {"score": 0.004544127927346964, "phrase": "hardware_implementation"}, {"score": 0.004496542293425754, "phrase": "context-free_grammar"}, {"score": 0.004265953661191515, "phrase": "innovative_combinatorial_circuit"}, {"score": 0.004177049813981273, "phrase": "fundamental_operation"}, {"score": 0.004133292222875435, "phrase": "earley's_parsing_algorithm"}, {"score": 0.0040047396607954325, "phrase": "vertical_bar_g_vertical_bar"}, {"score": 0.003819339842998955, "phrase": "hardware_architecture"}, {"score": 0.0037594599958631404, "phrase": "template_form"}, {"score": 0.0036424917384748024, "phrase": "automated_synthesis_tool"}, {"score": 0.003492155652400838, "phrase": "arbitrary_cfg."}, {"score": 0.0032609360162842767, "phrase": "generated_source"}, {"score": 0.002798662730881037, "phrase": "previous_hardware_implementations"}, {"score": 0.002640947693258573, "phrase": "input_string_length"}, {"score": 0.0025318431634446426, "phrase": "pure_software_implementation"}, {"score": 0.0024272350606639147, "phrase": "toy-scale_grammars"}, {"score": 0.002339246282204109, "phrase": "large_real_life_grammars"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Syntactic pattern recognition", " Reconfigurable parsers", " Context-free grammars", " FPGA"], "paper_abstract": "This paper presents a highly efficient architecture for the hardware implementation of context-free grammar (CFG) parsers. Its efficiency stems from an innovative combinatorial circuit that implements the fundamental operation of Earley's parsing algorithm in time complexity O(log(2)vertical bar G vertical bar). where vertical bar G vertical bar is the size of the CFG. Using this hardware architecture in a template form. we have developed an automated synthesis tool that, given the specification of an arbitrary CFG. generates the HDL (Hardware Design Language) synthesizable source code of the hardware parser for the given grammar. The generated source has been simulated for validation, synthesized and tested on a Xilinx FPGA (Field Programmable Gate Array) board. Our method increases the performance by a factor of one to two orders of magnitude, compared to previous hardware implementations. depending on the size of the grammar and the input string length. The speedup. compared to the pure software implementation. varies from two orders of magnitude for toy-scale grammars to six orders of magnitude for large real life grammars. This makes it particularly appealing for applications where (syntactic) pattern recognition response is a crucial aspect. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient reconfigurable embedded parsers", "paper_id": "WOS:000262973600004"}