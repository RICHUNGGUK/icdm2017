{"auto_keywords": [{"score": 0.02903024767561201, "phrase": "lms"}, {"score": 0.00481495049065317, "phrase": "graceful_network_state_migrations"}, {"score": 0.004668957916795845, "phrase": "network_events"}, {"score": 0.004300830853119242, "phrase": "premeditated_network_management"}, {"score": 0.004256895619944631, "phrase": "operational_tasks"}, {"score": 0.004127753467337283, "phrase": "general_class"}, {"score": 0.004085579055228594, "phrase": "graceful_network_state_migration"}, {"score": 0.0038217146888983576, "phrase": "optimal_sequence"}, {"score": 0.0035932440062595252, "phrase": "desired_final_state"}, {"score": 0.0035201528214608914, "phrase": "overall_performance_disruption"}, {"score": 0.003361069456060196, "phrase": "weight_reassignment_scheduling"}, {"score": 0.00325901518290063, "phrase": "optimal_ordering"}, {"score": 0.0032024778046531336, "phrase": "lwrs"}, {"score": 0.0030640804704319255, "phrase": "new_link_weight_assignment"}, {"score": 0.002986329509791943, "phrase": "link_maintenance_scheduling"}, {"score": 0.002851301751761804, "phrase": "link_deactivations"}, {"score": 0.0028221322455573624, "phrase": "subsequent_reactivations"}, {"score": 0.002793260314529583, "phrase": "maintenance_purposes"}, {"score": 0.0026945086500597304, "phrase": "combinatorial_optimization_problems"}, {"score": 0.00263965046277432, "phrase": "dynamic_programming"}, {"score": 0.002585906251354904, "phrase": "optimal_solutions"}, {"score": 0.002546315584783112, "phrase": "problem_size"}, {"score": 0.00248167018931442, "phrase": "leverage_ant_colony_optimization"}, {"score": 0.002443671484766342, "phrase": "near-optimal_solutions"}, {"score": 0.0024186620196958867, "phrase": "large_problem_sizes"}, {"score": 0.0023331227492950422, "phrase": "network_operations"}, {"score": 0.0022973933270056743, "phrase": "significant_performance_gains"}, {"score": 0.0022047613106966745, "phrase": "similar_problems"}, {"score": 0.0021821915946356168, "phrase": "different_operational_contexts"}, {"score": 0.002159852420283463, "phrase": "underlying_network_protocols"}, {"score": 0.0021049977753042253, "phrase": "performance_metrics"}], "paper_keywords": ["Communication system operations and management", " computer network management", " network maintenance", " network upgrade"], "paper_abstract": "A significant fraction of network events (such as topology or route changes) and the resulting performance degradation stem from premeditated network management and operational tasks. This paper introduces a general class of Graceful Network State Migration (GNSM) problems, where the goal is to discover the optimal sequence of operations that progressively transition the network from its initial to a desired final state while minimizing the overall performance disruption. We investigate two specific GNSM problems: 1) Link Weight Reassignment Scheduling (LWRS) studies the optimal ordering of link weight updates to migrate from an existing to a new link weight assignment; and 2) Link Maintenance Scheduling (LMS) looks at how to schedule link deactivations and subsequent reactivations for maintenance purposes. LWRS and LMS are both combinatorial optimization problems. We use dynamic programming to find the optimal solutions when the problem size is small, and leverage ant colony optimization to get near-optimal solutions for large problem sizes. Our simulation study reveals that judiciously ordering network operations can achieve significant performance gains. Our GNSM solution framework is generic and applies to similar problems with different operational contexts, underlying network protocols or mechanisms, and performance metrics.", "paper_title": "Graceful Network State Migrations", "paper_id": "WOS:000294007700013"}