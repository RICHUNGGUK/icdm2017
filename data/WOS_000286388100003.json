{"auto_keywords": [{"score": 0.04924054324953067, "phrase": "real_number_beta"}, {"score": 0.027066156021393634, "phrase": "\"_part"}, {"score": 0.004815146419125878, "phrase": "computability"}, {"score": 0.004388252997694986, "phrase": "right_arrow_beta"}, {"score": 0.0042171108629745655, "phrase": "number_theory"}, {"score": 0.004106725110985659, "phrase": "associated_language"}, {"score": 0.004070573090297285, "phrase": "finite_strings"}, {"score": 0.0038602215057106917, "phrase": "additional_insight"}, {"score": 0.0037260386566859197, "phrase": "underlying_system"}, {"score": 0.00354909279546064, "phrase": "recursive_iff_beta"}, {"score": 0.003502305158321511, "phrase": "computable_real_number"}, {"score": 0.003410565849262162, "phrase": "precise_characterization"}, {"score": 0.0032057142600527, "phrase": "arbitrarily_good_approximations"}, {"score": 0.002807118943000936, "phrase": "finite_sequence"}, {"score": 0.0021049977753042253, "phrase": "good_approximations"}], "paper_keywords": ["Computability theory", " Dynamical systems", " Number theory", " Computable analysis"], "paper_abstract": "For every real number beta > 1, the beta-shift is a dynamical system describing iterations of the map x bar right arrow beta x mod 1 and is studied intensively in number theory. Each beta-shift has an associated language of finite strings of characters; properties of this language are studied for the additional insight they give into the dynamics of the underlying system. We prove that the language of the beta-shift is recursive iff beta is a computable real number. That fact yields a precise characterization of the reals: The real numbers beta for which we can compute arbitrarily good approximations-hence in particular the numbers for which we can compute their expansion to some base-are precisely those for which there exists a program that decides for any finite sequence of digits whether the sequence occurs as a subword of some element of the beta-shift. While the \"only if\" part of the proof of the above result is constructive, the \"if\" part is not. We show that no constructive proof of the \"if\" part exists. Hence, there exists no algorithm that transforms a program computing arbitrarily good approximations of a real number beta into a program deciding the language of the beta-shift.", "paper_title": "Beta-Shifts, Their Languages, and Computability", "paper_id": "WOS:000286388100003"}