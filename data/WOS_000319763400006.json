{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "semi-automated_software_evolution_analysis_composition"}, {"score": 0.004596561972944185, "phrase": "version_control"}, {"score": 0.0045119929871912405, "phrase": "issue_tracking"}, {"score": 0.0044495843279816075, "phrase": "mailing_lists"}, {"score": 0.004307286039184164, "phrase": "software_system"}, {"score": 0.0039252049353279556, "phrase": "easy_and_straight_forward_synergies"}, {"score": 0.0036271080216837286, "phrase": "software_analysis"}, {"score": 0.0035273744062641636, "phrase": "sofas"}, {"score": 0.0033515736929172644, "phrase": "software_analyses"}, {"score": 0.0028615323526689582, "phrase": "custom-made_modeling_language"}, {"score": 0.0027698788736535865, "phrase": "service_offerings"}, {"score": 0.00269365253474335, "phrase": "restful_nature"}, {"score": 0.002607362103727335, "phrase": "service_composer"}, {"score": 0.0025712297362596574, "phrase": "semi-automated_service_compositions"}, {"score": 0.0023646866829474798, "phrase": "different_stakeholders"}, {"score": 0.0023210846870653757, "phrase": "deeper_insight"}, {"score": 0.0022889103976458437, "phrase": "project_history"}, {"score": 0.0021049977753042253, "phrase": "tool_boundaries"}], "paper_keywords": [""], "paper_abstract": "Software evolution data stored in repositories such as version control, bug and issue tracking, or mailing lists is crucial to better understand a software system and assess its quality. A myriad of analyses exploiting such data have been proposed throughout the years. However, easy and straight forward synergies between these analyses rarely exist. To tackle this problem we have investigated the concept of Software Analysis as a Service and devised SOFAS, a distributed and collaborative software evolution analysis platform. Software analyses are offered as services that can be accessed, composed into workflows, and executed over the Internet. This paper presents our framework for composing these analyses into workflows, consisting of a custom-made modeling language and a composition infrastructure for the service offerings. The framework exploits the RESTful nature of our analysis service architecture and comes with a service composer to enable semi-automated service compositions by a user. We validate our framework by showcasing two different approaches built on top of it that support different stakeholders in gaining a deeper insight into a project history and evolution. As a result, our framework has shown its applicability to deliver diverse, complex analyses across system and tool boundaries.", "paper_title": "A framework for semi-automated software evolution analysis composition", "paper_id": "WOS:000319763400006"}