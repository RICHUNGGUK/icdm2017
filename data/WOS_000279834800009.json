{"auto_keywords": [{"score": 0.03973066769015469, "phrase": "orca"}, {"score": 0.03528278775652248, "phrase": "rs"}, {"score": 0.00481495049065317, "phrase": "faster_cutoff_update"}, {"score": 0.004767826806287385, "phrase": "space_utilization"}, {"score": 0.004606479650820579, "phrase": "unusual_data_objects"}, {"score": 0.004561386908745206, "phrase": "ramaswamy_et_al"}, {"score": 0.004494570360108983, "phrase": "distance-based_outlier_definition"}, {"score": 0.004154332348800334, "phrase": "neighborhood_distance_threshold"}, {"score": 0.003974352145064957, "phrase": "knorr"}, {"score": 0.003935526941592692, "phrase": "ng"}, {"score": 0.0038968796980954445, "phrase": "bay"}, {"score": 0.003858697684681798, "phrase": "schwabacher"}, {"score": 0.003802135020791801, "phrase": "efficient_algorithm"}, {"score": 0.0036733470451885465, "phrase": "linear_time_performance"}, {"score": 0.003496868378204654, "phrase": "running_time"}, {"score": 0.002957796713711822, "phrase": "rc"}, {"score": 0.002885764110118703, "phrase": "rcs"}, {"score": 0.0021682027434117095, "phrase": "data_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Outlier detection", " Distance-based outliers", " Disk-based algorithms", " Memory optimization"], "paper_abstract": "It is desirable to find unusual data objects by Ramaswamy et al.'s distance-based outlier definition, because only a metric distance function between two objects is required. This definition does not need any neighborhood distance threshold required by many existing algorithms based on the definition of Knorr and Ng. Bay and Schwabacher proposed an efficient algorithm ORCA, which can give near linear time performance, for this task. To further reduce the running time, we propose in this paper two algorithms RC and RS using the following two techniques, respectively: (i) faster cutoff update, and (ii) space utilization after pruning. We tested RC, RS, and RCS (a hybrid approach combining both RC and RS) on several large and high-dimensional real data sets with millions of objects. The experiments show that the speed of RCS is as fast as 1.4-2.3 times that of ORCA, and the improvement of RCS is relatively insensitive to the increase in the data size. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Mining outliers with faster cutoff update and space utilization", "paper_id": "WOS:000279834800009"}