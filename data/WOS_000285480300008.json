{"auto_keywords": [{"score": 0.0491163375687563, "phrase": "binary_objective"}, {"score": 0.00481495049065317, "phrase": "parallelized_direct_search"}, {"score": 0.004439097815805505, "phrase": "computationally_intensive_mathematical_models"}, {"score": 0.0043793594257092805, "phrase": "massive_design_spaces"}, {"score": 0.004204904449336037, "phrase": "parametric_studies"}, {"score": 0.003929391999210588, "phrase": "computational_time"}, {"score": 0.0036968421974412522, "phrase": "particular_kind"}, {"score": 0.0036470559917231218, "phrase": "parameter_sweep_problem"}, {"score": 0.0034311578789991363, "phrase": "real_parameters"}, {"score": 0.0033167679667625667, "phrase": "binary_value"}, {"score": 0.002975652654536407, "phrase": "parallel_algorithm"}, {"score": 0.0027804579695873827, "phrase": "computationally_intensive_mathematical_model"}, {"score": 0.002724428781940696, "phrase": "fully_functioning_implementation"}, {"score": 0.0026335379469691997, "phrase": "two-dimensional_example"}, {"score": 0.002598034157587518, "phrase": "client-server_architecture"}, {"score": 0.002494361792853833, "phrase": "straight_bisection_search"}, {"score": 0.0023948164534491273, "phrase": "full_parametric_sweep"}, {"score": 0.0023148964315569866, "phrase": "parallelization_and_load_balancing"}, {"score": 0.0021776870246727233, "phrase": "near-linear_speedup"}], "paper_keywords": [""], "paper_abstract": "Many scientific and engineering problems are solved by utilizing simulations of computationally intensive mathematical models within massive design spaces. As a result, parametric studies of these models are cost prohibitive in terms of computational time. The focus of this work is a particular kind of parameter sweep problem where the simulation of the model, given real parameters, results in a binary value. The goal of this work is to design, develop, and implement a parallel algorithm for bounding a binary objective when the simulation is a computationally intensive mathematical model. A fully functioning implementation is provided for a two-dimensional example using client-server architecture. Results show that a straight bisection search is approximately 50% faster than a full parametric sweep for most continuous functions. With parallelization and load balancing, the simulation is remarkably faster, exhibiting near-linear speedup up to 16 processors for most functions. [DOI: 10.1115/1.3510589]", "paper_title": "Parallelized Direct Search of a Binary Objective", "paper_id": "WOS:000285480300008"}