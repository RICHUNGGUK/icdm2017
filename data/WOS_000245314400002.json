{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "analogical_representations"}, {"score": 0.04586846484671965, "phrase": "visual_programming"}, {"score": 0.0408403160996441, "phrase": "graphical_rewrite_rules"}, {"score": 0.015348533997859688, "phrase": "semiotic_analysis"}, {"score": 0.014702025085717288, "phrase": "domain_objects"}, {"score": 0.01071476297497288, "phrase": "visual_language"}, {"score": 0.004308455856718928, "phrase": "close_mapping"}, {"score": 0.004185289462328125, "phrase": "resulting_runtime_display"}, {"score": 0.0035679633126097115, "phrase": "comics_strips"}, {"score": 0.0034826993555190765, "phrase": "picture_sequences"}, {"score": 0.0034491650585057754, "phrase": "graphical_objects"}, {"score": 0.003350480663660326, "phrase": "static_form"}, {"score": 0.0027876387169652717, "phrase": "visual_programming_system"}, {"score": 0.00269475174341129, "phrase": "comic_strips"}, {"score": 0.0025549840900344596, "phrase": "traditional_graphical_rewrites"}, {"score": 0.0024224481033945943, "phrase": "strong_potential"}, {"score": 0.002230984431056064, "phrase": "direct_mapping"}, {"score": 0.0021987994275190314, "phrase": "program_representation"}, {"score": 0.0021670777282518424, "phrase": "runtime_representation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["visual programming", " comics", " graphical rewrite rules", " semiotics", " children"], "paper_abstract": "Analogical representations based on pictures of domain objects can be used in visual programming to provide a close mapping between the program and the resulting runtime display, which can make programming easier for children and other users. The use of graphical rewrite rules with before and after pictures is an example of this approach. Graphical rewrite rules have some similarities with comics strips, which also use picture sequences of graphical objects to describe dynamics in a static form. However, the visual language of comics is not used to its full potential in visual programming. We discuss how a semiotic analysis of comics can be used to address some of the limitations of graphical rewrite rules. We use a visual programming system we have designed to illustrate that comic strips can express more general computations and be more intuitive and flexible than traditional graphical rewrites. Our conclusion is that the visual language of comics has a strong potential for increasing the expressiveness and flexibility of visual programming with analogical representations of domain objects, while maintaining a direct mapping between the program representation and the runtime representation. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Visual programming with analogical representations: Inspirations from a semiotic analysis of comics", "paper_id": "WOS:000245314400002"}