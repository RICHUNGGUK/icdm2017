{"auto_keywords": [{"score": 0.03057614792597447, "phrase": "online_algorithms"}, {"score": 0.010142492658842268, "phrase": "online_algorithm"}, {"score": 0.00481495049065317, "phrase": "weighted_equal-length_jobs"}, {"score": 0.004717485406306594, "phrase": "parallel_machines"}, {"score": 0.004546970518808189, "phrase": "maximum_profit_selection"}, {"score": 0.004509919457793852, "phrase": "equal_length_jobs"}, {"score": 0.004436832588162286, "phrase": "jobs"}, {"score": 0.004224130367280183, "phrase": "non-preemptive_schedule"}, {"score": 0.0041555469216463855, "phrase": "total_profit"}, {"score": 0.004104838067758352, "phrase": "scheduled_jobs"}, {"score": 0.004038183610525504, "phrase": "common_processing_requirement"}, {"score": 0.0031327496009959464, "phrase": "new_job"}, {"score": 0.002839352319679885, "phrase": "feasible_starting_date"}, {"score": 0.0027817658627604653, "phrase": "competitive_analysis"}, {"score": 0.0027365364488693656, "phrase": "standard_way"}, {"score": 0.002626645763725465, "phrase": "maximization_problem"}, {"score": 0.0024903420152789135, "phrase": "input_instance"}, {"score": 0.0023322317017275803, "phrase": "lower_bounds"}, {"score": 0.0021751997984619585, "phrase": "constant_factor"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Revenue management", " Scheduling", " On-line algorithms", " Competitiveness"], "paper_abstract": "We consider the problem of scheduling a maximum profit selection of equal length jobs on m identical machines. Jobs arrive online over time and the goal is to determine a non-preemptive schedule which maximizes the total profit of the scheduled jobs. Let the common processing requirement of the jobs be p > 0. For each job j(i), i = 1,...,n we are given a release time r(i) (at which the job becomes known) and a deadline r(i)+p+delta(i). If the job is scheduled and completed before the deadline, a profit of w(i) is earned. Upon arrival of a new job, an online algorithm must decide whether to accept the job or not. In case of acceptance, the online algorithms must provide a feasible starting date for the job. Competitive analysis has become a standard way of measuring the quality of online algorithms. For a maximization problem, an online algorithm is called c-competitive, if on every input instance it achieves at least a 1/c-fraction of the optimal (\"offline\") profit. We give lower bounds for the competitivity of online algorithms and propose algorithms which match this lower bound up to a constant factor. (C) 2010 Published by Elsevier Ltd.", "paper_title": "Online scheduling of weighted equal-length jobs with hard deadlines on parallel machines", "paper_id": "WOS:000286959500002"}