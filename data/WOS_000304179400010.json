{"auto_keywords": [{"score": 0.0335916585365078, "phrase": "probability_p"}, {"score": 0.00481495049065317, "phrase": "random_failures"}, {"score": 0.004663832186991562, "phrase": "fault-tolerant_systems"}, {"score": 0.004623443744732925, "phrase": "probabilistic_setting"}, {"score": 0.004556901872357751, "phrase": "simple_routing_problem"}, {"score": 0.0044653418703126365, "phrase": "randomized_variant"}, {"score": 0.004250544261432815, "phrase": "runner"}, {"score": 0.004189337956225294, "phrase": "probabilistic_adversary"}, {"score": 0.004164538138170189, "phrase": "nature"}, {"score": 0.003752032410115961, "phrase": "current_network"}, {"score": 0.003613119346373748, "phrase": "generated_finite_path"}, {"score": 0.003581797255879607, "phrase": "\"winning_condition"}, {"score": 0.0034894451015047875, "phrase": "predefined_target"}, {"score": 0.0033699898113395328, "phrase": "generated_path"}, {"score": 0.003311799410921826, "phrase": "temporal_logic"}, {"score": 0.0030979672309666855, "phrase": "pspace"}, {"score": 0.0030179530101642612, "phrase": "start_vertex_u"}, {"score": 0.0029830992938695007, "phrase": "set_f"}, {"score": 0.0029658232220207254, "phrase": "target_vertices"}, {"score": 0.0029231247639806878, "phrase": "ltl"}, {"score": 0.0028065957753430713, "phrase": "vertical_bar_p_-_epsilon"}, {"score": 0.0024914526842494352, "phrase": "non-randomized_sabotage_games"}, {"score": 0.0024342119182467147, "phrase": "rohde"}, {"score": 0.00237137451107918, "phrase": "papadimitriou's_\"dynamic_graph_reliability"}, {"score": 0.0023303871145705954, "phrase": "edge_failures"}, {"score": 0.002237477619351199, "phrase": "\"coarse\"_randomized_setting"}, {"score": 0.0022116174573590434, "phrase": "uniform_distributions"}, {"score": 0.0021420294823879292, "phrase": "non-randomized_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Game theory", " Sabotage games", " Probabilistic systems", " Fault-tolerant systems"], "paper_abstract": "We analyze a model of fault-tolerant systems in a probabilistic setting, exemplified by a simple routing problem in networks. We introduce a randomized variant of a model called the \"sabotage game\", where an agent, called \"Runner\", and a probabilistic adversary, \"Nature\", act in alternation. Runner generates a path from a given start vertex of the network, traversing one edge in each move, while after each move of Runner, Nature deletes some edge of the current network (each edge with the same probability). Runner wins if the generated finite path satisfies a \"winning condition\", namely that a vertex of some predefined target set is reached, or - more generally - that the generated path satisfies a given formula of the temporal logic LTL. We determine the complexity of these games by showing that for any probability p and epsilon > 0, the following problem is PSPACE-complete: Given a network, a start vertex u, and a set F of target vertices (resp. an LTL formula phi), and also a probability p' is an element of vertical bar p - epsilon, p + epsilon vertical bar, is there a strategy for Runner to reach F (resp. to satisfy phi) with a probability >= p'? This PSPACE-completeness establishes the same complexity as was known for the non-randomized sabotage games (by the work of Wing and Rohde), and it sharpens the PSPACE-completeness of Papadimitriou's \"dynamic graph reliability\" (where probabilities of edge failures may depend on both the edges and positions of Runner). Thus, the \"coarse\" randomized setting, even with uniform distributions, gives no advantage in terms of complexity over the non-randomized case. (c) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Moving in a network under random failures: A complexity analysis", "paper_id": "WOS:000304179400010"}