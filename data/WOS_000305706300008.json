{"auto_keywords": [{"score": 0.038372636001617486, "phrase": "gbarrier"}, {"score": 0.025739048846758848, "phrase": "scientific_applications"}, {"score": 0.00481495049065317, "phrase": "efficient_hardware_barrier_synchronization"}, {"score": 0.004763895422211728, "phrase": "many-core_cmps"}, {"score": 0.004713379149462482, "phrase": "traditional_software-based_barrier_implementations"}, {"score": 0.0043511221096418475, "phrase": "network_contention"}, {"score": 0.003422462630994095, "phrase": "efficient_barriers"}, {"score": 0.0033861224940737846, "phrase": "future_many-core_cmps"}, {"score": 0.0032793933580835574, "phrase": "dedicated_g-line-based_network"}, {"score": 0.003210110095236981, "phrase": "fast_and_efficient_signaling"}, {"score": 0.002947266048104005, "phrase": "memory_system"}, {"score": 0.002869613770219469, "phrase": "coherence_activity"}, {"score": 0.0028391271282216758, "phrase": "barrier-related_network_traffic"}, {"score": 0.0026771333996253783, "phrase": "detailed_simulations"}, {"score": 0.002393034183276193, "phrase": "evaluation_results"}, {"score": 0.0023675986784123656, "phrase": "average_reductions"}, {"score": 0.0022928991183989115, "phrase": "execution_time"}, {"score": 0.0022087165619569006, "phrase": "network_traffic"}], "paper_keywords": ["Many-core CMPs", " barrier synchronization", " global lines", " S-CSMA", " cache coherence", " scalability", " energy efficiency"], "paper_abstract": "Traditional software-based barrier implementations for shared memory parallel machines tend to produce hotspots in terms of memory and network contention as the number of processors increases. This could limit their applicability to future many-core CMPs in which possibly several dozens of cores would need to be synchronized efficiently. In this work, we develop GBarrier, a hardware-based barrier mechanism especially aimed at providing efficient barriers in future many-core CMPs. Our proposal deploys a dedicated G-line-based network to allow for fast and efficient signaling of barrier arrival and departure. Since GBarrier does not have any influence on the memory system, we avoid all coherence activity and barrier-related network traffic that traditional approaches introduce and that restrict scalability. Through detailed simulations of a 32-core CMP, we compare GBarrier against one of the most efficient software-based barrier implementations for a set of kernels and scientific applications. Evaluation results show average reductions of 54 and 21 percent in execution time, 53 and 18 percent in network traffic, and also 76 and 31 percent in the energy-delay(2) product metric for the full CMP when the kernels and scientific applications, respectively, are considered.", "paper_title": "Efficient Hardware Barrier Synchronization in Many-Core CMPs", "paper_id": "WOS:000305706300008"}