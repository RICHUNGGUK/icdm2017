{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "object_oriented_and_pattern_based_metaphors"}, {"score": 0.004306205029641728, "phrase": "solid_engineering_base"}, {"score": 0.004118026552723285, "phrase": "software_understanding"}, {"score": 0.0034437574674180365, "phrase": "high_performance_overhead"}, {"score": 0.002815864555488112, "phrase": "generalised_parsing"}, {"score": 0.0025178072071268534, "phrase": "implementation_facets"}, {"score": 0.0024075916292945715, "phrase": "high_level_programming_languages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Programming", " Performance", " Programming languages"], "paper_abstract": "Object oriented and pattern based metaphors for software present a solid engineering base for software understanding and construction, but sometimes impose a high performance overhead. We quantify this overhead for one form of generalised parsing and propose support for implementation facets in high level programming languages. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Principled software microengineering", "paper_id": "WOS:000345725100012"}