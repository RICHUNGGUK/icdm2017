{"auto_keywords": [{"score": 0.039299987230067404, "phrase": "dynamic_graphs"}, {"score": 0.00481495049065317, "phrase": "graph_stream_algorithms"}, {"score": 0.004426308135681733, "phrase": "considerable_interest"}, {"score": 0.004227653047394939, "phrase": "massive_graphs"}, {"score": 0.0041316803676012155, "phrase": "data_stream_model"}, {"score": 0.004037877545494505, "phrase": "original_motivation"}, {"score": 0.003438058620195309, "phrase": "main_memory"}, {"score": 0.0033599501775954024, "phrase": "single_machine"}, {"score": 0.0032336801561165113, "phrase": "graph_problems_yields"}, {"score": 0.0030648097361278856, "phrase": "stream_computation"}, {"score": 0.002690406375639144, "phrase": "data_structures"}, {"score": 0.0026091594819333654, "phrase": "approximation_algorithms"}, {"score": 0.0022382002476510573, "phrase": "general_techniques"}, {"score": 0.0021539955106204354, "phrase": "simple_algorithms"}, {"score": 0.0021049977753042253, "phrase": "basic_ideas"}], "paper_keywords": [""], "paper_abstract": "Over the last decade, there has been considerable interest in designing algorithms for processing massive graphs in the data stream model. The original motivation was two-fold: a) in many applications, the dynamic graphs that arise are too large to be stored in the main memory of a single machine and b) considering graph problems yields new insights into the complexity of stream computation. However, the techniques developed in this area are now finding applications in other areas including data structures for dynamic graphs, approximation algorithms, and distributed and parallel computation. We survey the state-of-the-art results; identify general techniques; and highlight some simple algorithms that illustrate basic ideas.", "paper_title": "Graph Stream Algorithms: A Survey", "paper_id": "WOS:000337057600001"}