{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "nonserial_dynamic_programming"}, {"score": 0.004470823343432748, "phrase": "nonserial_dynamic_programming_algorithm"}, {"score": 0.004330941610682453, "phrase": "sparse_discrete_optimization_problems"}, {"score": 0.003578600071301459, "phrase": "significant_impact"}, {"score": 0.0030521898646210413, "phrase": "different_orderings"}, {"score": 0.0028944757265206332, "phrase": "different_classes"}, {"score": 0.0023408288327263316, "phrase": "maximum_cardinality_search"}, {"score": 0.0022916428586256723, "phrase": "minimum_fill"}, {"score": 0.0021049977753042253, "phrase": "discrete_optimization_problems"}], "paper_keywords": ["Discrete optimization", " Nonserial dynamic programming", " Benchmarking", " Ordering algorithms"], "paper_abstract": "Five ordering algorithms for the nonserial dynamic programming algorithm for solving sparse discrete optimization problems are compared in this paper. The benchmarking reveals that the ordering of the variables has a significant impact on the run-time of these algorithms. In addition, it is shown that different orderings are most effective for different classes of problems. Finally, it is shown that, amongst the algorithms considered here, heuristics based on maximum cardinality search and minimum fill-in perform best for solving the discrete optimization problems considered in this paper.", "paper_title": "Benchmarking ordering techniques for nonserial dynamic programming", "paper_id": "WOS:000209099200004"}