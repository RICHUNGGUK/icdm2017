{"auto_keywords": [{"score": 0.0452514208810669, "phrase": "program_diagrams"}, {"score": 0.029725760425679804, "phrase": "hichart"}, {"score": 0.027084146457518735, "phrase": "precedence_graph_grammar"}, {"score": 0.00481495049065317, "phrase": "visual_software_development_environment"}, {"score": 0.004664352260912174, "phrase": "graph_grammars"}, {"score": 0.004518442937844318, "phrase": "software_design"}, {"score": 0.0041074234667687875, "phrase": "good_visualization"}, {"score": 0.0033579708256295847, "phrase": "program_diagram_structure"}, {"score": 0.002988101395789399, "phrase": "diagram_processing_system"}, {"score": 0.0028944757265206332, "phrase": "efficient_parser"}, {"score": 0.002365815362517737, "phrase": "linear_time"}, {"score": 0.002219790619936024, "phrase": "parsing_method"}, {"score": 0.0021731423856364003, "phrase": "processing_system"}, {"score": 0.0021049977753042253, "phrase": "hichart_graphical_editor"}], "paper_keywords": ["program diagrams", " attribute graph grammar", " graph editor", " Hichart", " precedence graph grammar", " SVG"], "paper_abstract": "In software design and development, program diagrams are often used for good visualization. Many kinds of program diagrams have been proposed and Used. TO process such diagrams automatically and efficiently, the program diagram structure needs to be formalized. We ann to construct a diagram processing system with an efficient parser for our program diagram Hichart. In this paper, we give a precedence graph grammar for Hichart that can parse in linear time. We also describe a parsing method and processing system incorporating the Hichart graphical editor that is based on the precedence graph grammar.", "paper_title": "Visual Software Development Environment Based on Graph Grammars", "paper_id": "WOS:000265630300003"}