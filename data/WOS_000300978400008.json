{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cell_broadband_engine"}, {"score": 0.04931727328027492, "phrase": "constraint-based_local_search"}, {"score": 0.003971502222405927, "phrase": "parallel_version"}, {"score": 0.003876996400581697, "phrase": "constraint-based_local_search_algorithm"}, {"score": 0.0032231139180761183, "phrase": "performance_study"}, {"score": 0.003121183062764093, "phrase": "mostly_linear_time_speedups"}, {"score": 0.0027890803075309926, "phrase": "dual-cell_ibm"}, {"score": 0.0027446057983474994, "phrase": "armonk"}, {"score": 0.0026579010908797207, "phrase": "usa"}, {"score": 0.002432834929068545, "phrase": "execution_times"}, {"score": 0.0022630008787375435, "phrase": "timely_reply"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["constraint satisfaction", " local search", " Cell", " BE", " parallel programming"], "paper_abstract": "We investigated the use of the Cell Broadband Engine (Cell/BE) for constraint-based local search and combinatorial optimization applications. We presented a parallel version of a constraint-based local search algorithm that was chosen because it fits very well the Cell/BE architecture because it requires neither shared memory nor communication among processors. The performance study on several large optimization benchmarks shows mostly linear time speedups, sometimes even super linear. These experiments were carried out on a dual-Cell IBM (Armonk, NY, USA) blade with 16 processors. Besides getting speedups, the execution times exhibit a much smaller variance that benefits applications where a timely reply is critical. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Targeting the Cell Broadband Engine for constraint-based local search", "paper_id": "WOS:000300978400008"}