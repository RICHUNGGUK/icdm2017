{"auto_keywords": [{"score": 0.027539741871005673, "phrase": "proposed_approach"}, {"score": 0.0095224553309677, "phrase": "epic"}, {"score": 0.00481495049065317, "phrase": "software_change_impact"}, {"score": 0.004658426838467567, "phrase": "software_product_lifecycle"}, {"score": 0.004571269461883144, "phrase": "software_change"}, {"score": 0.004401794742140806, "phrase": "related_artifacts"}, {"score": 0.0041987222897385676, "phrase": "change_action"}, {"score": 0.004139639802595566, "phrase": "collaborative_development_environment"}, {"score": 0.004081385289516914, "phrase": "jad"}, {"score": 0.0038746849003761024, "phrase": "current_implementation-based_or_homogeneous_impact_analyses"}, {"score": 0.0036958398682001015, "phrase": "holistic_approach"}, {"score": 0.003643807817480753, "phrase": "impact_analysis"}, {"score": 0.0033308077968426937, "phrase": "product_contents"}, {"score": 0.0032838979278935814, "phrase": "heterogeneous_items"}, {"score": 0.0031174595932694036, "phrase": "object-oriented_propagation_mechanism"}, {"score": 0.0027307746993761035, "phrase": "walkthrough_example"}, {"score": 0.002555761854502478, "phrase": "empirical_study"}, {"score": 0.002358220053411644, "phrase": "software_company"}, {"score": 0.002292199117499287, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software change management", " Object technology", " Holistic approach", " Collaborative development"], "paper_abstract": "Change is inevitable in the software product lifecycle. When a software change occurs, all of the stakeholders and related artifacts should be considered in determining the success of the change action in a collaborative development environment such as JAD (joint application development). In this regard, current implementation-based or homogeneous impact analyses are insufficient; therefore, this paper presents a holistic approach to change impact analysis in handling not only software contents but also other items Such as requirements, documents and data. This approach characterizes product contents and relates heterogeneous items by using attributes and linkages. It also uses an object-oriented propagation mechanism to handle dynamic looping in determining the impact of changes. A prototype, EPIC, was built to realize this approach and these concepts. A walkthrough example is provided in order to verify the work of the proposed approach. An empirical study is presented to discuss the benefits of the proposed approach and the application of EPIC in a software company. Lessons learned from the case study and improvement issues of the proposed approach and the tool are also discussed. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A holistic approach to managing software change impact", "paper_id": "WOS:000272061000011"}