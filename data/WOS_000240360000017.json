{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "object-oriented_programs"}, {"score": 0.004466519142879166, "phrase": "program_verifier"}, {"score": 0.004143196873246147, "phrase": "complex_system"}, {"score": 0.0038431888954930083, "phrase": "compiler_technology"}, {"score": 0.0036553070575015344, "phrase": "program_semantics"}, {"score": 0.00347657813672945, "phrase": "property_inference"}, {"score": 0.0029169007179202164, "phrase": "automatic_decision_procedures"}, {"score": 0.0026384167183586015, "phrase": "user_interface"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_program"}], "paper_keywords": [""], "paper_abstract": "A program verifier is a complex system that uses compiler technology, program semantics, property inference, verification-condition generation, automatic decision procedures, and a user interface. This paper describes the architecture of a state-of-the-art program verifier for object-oriented programs.", "paper_title": "Boogie: A modular reusable verifier for object-oriented programs", "paper_id": "WOS:000240360000017"}