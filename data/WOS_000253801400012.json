{"auto_keywords": [{"score": 0.043463784508937474, "phrase": "ga"}, {"score": 0.00481495049065317, "phrase": "flexible_job_shop_scheduling_problems"}, {"score": 0.004669845451682529, "phrase": "flexible_job_shop_scheduling_problem"}, {"score": 0.004303830426772906, "phrase": "total_workload"}, {"score": 0.004195418010131832, "phrase": "hybrid_genetic_algorithm"}, {"score": 0.003866443402315402, "phrase": "advanced_crossover_and_mutation_operators"}, {"score": 0.0037307208089736835, "phrase": "special_chromosome_structure"}, {"score": 0.0034911335714333507, "phrase": "search_ability"}, {"score": 0.0033173234105492895, "phrase": "variable_neighborhood_descent"}, {"score": 0.0030726480920918097, "phrase": "local_search"}, {"score": 0.002831462722290752, "phrase": "assignable_time_interval"}, {"score": 0.0027041907335656782, "phrase": "assignable_interval"}, {"score": 0.0026359661683151006, "phrase": "efficient_method"}, {"score": 0.0025958582759972315, "phrase": "assignable_time_intervals"}, {"score": 0.002556359086441866, "phrase": "deleted_operations"}, {"score": 0.002479150189700726, "phrase": "earliest_and_latest_event_time"}, {"score": 0.002272794656458419, "phrase": "extensive_computational_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["flexible job shop scheduling", " genetic algorithms", " variable neighborhood descent", " critical path"], "paper_abstract": "This paper addresses the flexible job shop scheduling problem (fJSP) with three objectives: min makespan, min maximal machine workload and ruin total workload. We developed a hybrid genetic algorithm (GA) for the problem. The GA uses two vectors to represent solutions. Advanced crossover and mutation operators are used to adapt to the special chromosome structure and the characteristics of the problem. In order to strengthen the search ability, individuals of GA are first improved by a variable neighborhood descent (VND), which involves two local search procedures: local search of moving one operation and local search of moving two operations. Moving an operation is to delete the operation, find an assignable time interval for it, and allocate it in the assignable interval. We developed an efficient method to find assignable time intervals for the deleted operations based on the concept of earliest and latest event time. The local optima of moving one operation are further improved by moving two operations simultaneously. An extensive computational study on 181 benchmark problems shows the performance of our approach. (c) 2007 Published by Elsevier Ltd.", "paper_title": "A hybrid genetic and variable neighborhood descent algorithm for flexible job shop scheduling problems", "paper_id": "WOS:000253801400012"}