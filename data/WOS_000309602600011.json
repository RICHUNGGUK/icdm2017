{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "expensive_video_predicates"}, {"score": 0.010533593060599204, "phrase": "cloud_environment"}, {"score": 0.006557803496286288, "phrase": "video_data"}, {"score": 0.004727995968069753, "phrase": "rapid_developments"}, {"score": 0.0046993598473345395, "phrase": "video_processing_technologies"}, {"score": 0.004517387079319428, "phrase": "professional_and_consumer_applications"}, {"score": 0.004355645393953418, "phrase": "increasing_processing_workload"}, {"score": 0.0042252744467257885, "phrase": "parallel_environment"}, {"score": 0.004199670318539555, "phrase": "better_performance"}, {"score": 0.004123781267600542, "phrase": "data_management_system"}, {"score": 0.004012500850311087, "phrase": "video_content"}, {"score": 0.003845313870879042, "phrase": "effective_and_efficient_way"}, {"score": 0.003775803846431323, "phrase": "previous_research_literatures"}, {"score": 0.0036962894088549796, "phrase": "query_optimizations"}, {"score": 0.0036738789737633375, "phrase": "relational_database_management_systems"}, {"score": 0.0036382822906598942, "phrase": "invoking_times"}, {"score": 0.0035422310038875048, "phrase": "involved_operations"}, {"score": 0.003520751317164754, "phrase": "network_transmission_cost"}, {"score": 0.0033637374697995616, "phrase": "traditional_cost_estimation_model"}, {"score": 0.0031269043024513567, "phrase": "unresolved_issues"}, {"score": 0.0029965060407413898, "phrase": "real-world_large_supermarket_business_data_and_video_surveillance_data_management_scenario"}, {"score": 0.0028195727965553367, "phrase": "operating_results"}, {"score": 0.0028110048684383167, "phrase": "buffer_and_operating_results"}, {"score": 0.0027433895507237584, "phrase": "simple_node"}, {"score": 0.0026129863248033807, "phrase": "video_data_transmission"}, {"score": 0.002534642970039115, "phrase": "novel_query_optimization_approach"}, {"score": 0.0025039656549083497, "phrase": "join_order-based_estimation"}, {"score": 0.0024511688853030168, "phrase": "total_cost"}, {"score": 0.002320449502337321, "phrase": "greater_degree"}, {"score": 0.0022923586577645143, "phrase": "better_solution"}, {"score": 0.002278440725193305, "phrase": "mixed_query_optimization"}, {"score": 0.0022508572821818124, "phrase": "traditional_data_types"}, {"score": 0.0022371907579775796, "phrase": "large_object_operations"}, {"score": 0.002163491500079535, "phrase": "existing_expensive_predicates"}, {"score": 0.0021503542912161243, "phrase": "optimization_methods"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["expensive video predicates", " cost optimization", " attribute cardinality", " join order"], "paper_abstract": "With the rapid developments in video processing technologies, video data have increased rapidly and become popular in our daily life for both professional and consumer applications such as surveillance, education and entertainment. Because of the increasing processing workload, more and more queries with expensive video predicates are being implemented in a parallel environment for better performance. Such requirements entail that the data management system not only be able to store and access video content, but also be able to optimize queries that have expensive video predicates in an effective and efficient way in a cloud environment. In previous research literatures, parallel and distributed policies and query optimizations in relational database management systems are often based on the disk input/output (I/O) cost of involved operations and network transmission cost. However, for a query that contains expensive video predicates in a cloud environment, the traditional cost estimation model does not work well. Although researchers have proposed some approaches that can solve the problem in certain situations, there are still some unresolved issues, and these approaches need further optimizations. This paper is motivated by a real-world large supermarket business data and video surveillance data management scenario in a parallel environment. By considering the characteristics of video data and their expensive processing, we present methods named operating results buffer and operating results buffer-C for implementing expensive video predicates at simple node, mapping video data and executing expensive video predicates in a cloud environment, which reduce the cost of video data transmission and the invoking times of expensive video predicates. We propose a novel query optimization approach that reconstructs the join order-based estimation for attribute cardinality and computes the total cost with I/O, network and expensive processing. This approach reduces the invoking times of expensive video predicates to a greater degree and gives a better solution for mixed query optimization, which contains traditional data types and large object operations in a cloud environment. Our query performance improves by 30% to 80% compared with existing expensive predicates query optimization methods. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Optimizing queries with expensive video predicates in cloud?environment", "paper_id": "WOS:000309602600011"}