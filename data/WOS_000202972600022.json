{"auto_keywords": [{"score": 0.04209445471630583, "phrase": "deterministic_replay_debugging"}, {"score": 0.039254191205731113, "phrase": "program's_execution"}, {"score": 0.00481495049065317, "phrase": "memory_dependencies"}, {"score": 0.004677372885331908, "phrase": "significant_time"}, {"score": 0.004287680323820891, "phrase": "bugnet"}, {"score": 0.0042260633723211925, "phrase": "fdr"}, {"score": 0.004165105357908494, "phrase": "recent_architecture_proposals"}, {"score": 0.004075469816959996, "phrase": "architecture_support"}, {"score": 0.002876876480155072, "phrase": "strata"}, {"score": 0.0027741761880779535, "phrase": "shared_memory_dependencies"}, {"score": 0.002655894070657161, "phrase": "time_layer"}, {"score": 0.0025611773887867255, "phrase": "running_threads"}, {"score": 0.0023135183406982414, "phrase": "strata_log"}, {"score": 0.0021049977753042253, "phrase": "multi-threaded_programs"}], "paper_keywords": ["strata", " replay", " debugging", " logging", " shared memory dependencies"], "paper_abstract": "Significant time is spent by companies trying to reproduce and fix bugs. BugNet and FDR are recent architecture proposals that provide architecture support for deterministic replay debugging. They focus on continuously recording information about the program's execution, which can be communicated back to the developer. Using that information, the developer can deterministically replay the program's execution to reproduce and fix the bugs. In this paper, we propose using Strata to efficiently capture the shared memory dependencies. A stratum creates a time layer across all the logs for the running threads, which separates all the memory operations executed before and after the stratum. A strata log allows us to determine all the shared memory dependencies during replay and thereby supports deterministic replay debugging for multi-threaded programs.", "paper_title": "Recording shared memory dependencies using strata", "paper_id": "WOS:000202972600022"}