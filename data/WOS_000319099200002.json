{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "design_text_rom_diagram"}, {"score": 0.004466519142879166, "phrase": "novel_algorithm"}, {"score": 0.004269630481719451, "phrase": "rom_diagram"}, {"score": 0.004143196873246147, "phrase": "design_text"}, {"score": 0.0040508247605225214, "phrase": "fbs_model"}, {"score": 0.0038721890530859578, "phrase": "transformation_process"}, {"score": 0.0032085525502105836, "phrase": "function-behavior-state"}, {"score": 0.003113441660343867, "phrase": "transformation_algorithm"}, {"score": 0.0029984960344766705, "phrase": "transition_rules"}, {"score": 0.0025989960809479104, "phrase": "software_prototype"}, {"score": 0.002218933616777076, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Natural language", " Design text", " Function-Behavior-State (FBS) model", " Product-Environment System (PES)", " Recursive Object Model (ROM)"], "paper_abstract": "In this paper, a novel algorithm is proposed to transform a ROM diagram obtained from a design text into a FBS model. Each state of the transformation process is defined by four features: ROM (Recursive Object Model), POS (Part of Speech), PES (Product-Environment System), and FBS (Function-Behavior-State). The transformation algorithm is thus constituted by transition rules which change one transformation state to another, and procedures which apply the transition rules to a given ROM diagram. A software prototype R2FBS is presented as a proof of concept to assist the transformation. Two examples are used to demonstrate how the proposed approach works. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "An algorithm for transforming design text ROM diagram into FBS model", "paper_id": "WOS:000319099200002"}