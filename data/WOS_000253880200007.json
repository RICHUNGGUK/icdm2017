{"auto_keywords": [{"score": 0.04067588703944529, "phrase": "data_flow"}, {"score": 0.004815050604947591, "phrase": "smt"}, {"score": 0.004736820055728928, "phrase": "clustered_scheduling_windows"}, {"score": 0.004698229304089357, "phrase": "scalable_dsp_performance"}, {"score": 0.004565609517511076, "phrase": "processor_architecture"}, {"score": 0.0044549056501745074, "phrase": "high_performance_computing"}, {"score": 0.004418601451254075, "phrase": "digital_signal_processing_applications"}, {"score": 0.004364696693320128, "phrase": "high_frequency_design_techniques"}, {"score": 0.004276306563103443, "phrase": "parallel_processing"}, {"score": 0.0040880724328903, "phrase": "superscalar_processor_model"}, {"score": 0.004038183610525504, "phrase": "modified_tomasulo_scheme"}, {"score": 0.003924121879214595, "phrase": "central_control_structures"}, {"score": 0.003813269577615793, "phrase": "simultaneous_instruction_issue"}, {"score": 0.003782174375003052, "phrase": "multiple_independent_threads"}, {"score": 0.0036156119373414067, "phrase": "consequent_application"}, {"score": 0.0035861227263414537, "phrase": "fine_clustering"}, {"score": 0.003513443975425428, "phrase": "wire-sensitive_building_blocks"}, {"score": 0.00342816445816304, "phrase": "register_file"}, {"score": 0.003386301445203068, "phrase": "scheduling_window"}, {"score": 0.0033176589215021353, "phrase": "distributed_architecture_model"}, {"score": 0.003277140908834426, "phrase": "independent_thread_processing_units"}, {"score": 0.003250403288147613, "phrase": "arithmetic_logic_units"}, {"score": 0.0030317376771013703, "phrase": "special_network"}, {"score": 0.002994701080666466, "phrase": "special_communication_protocol"}, {"score": 0.0029460197288680864, "phrase": "associative_compare"}, {"score": 0.002921975748248106, "phrase": "destination_tags"}, {"score": 0.0028862761537904206, "phrase": "centralised_instruction_scheduler"}, {"score": 0.0028627183712016894, "phrase": "explicit_operand_transfer_instructions"}, {"score": 0.0027365364488693656, "phrase": "greatest_extent"}, {"score": 0.002659142621852998, "phrase": "processor_cycle_time"}, {"score": 0.0025945450101602825, "phrase": "issue_bandwidth"}, {"score": 0.0025628355581338563, "phrase": "single_thread"}, {"score": 0.0025211567863488962, "phrase": "execution_bandwidth"}, {"score": 0.0024903420152789135, "phrase": "smt_processor"}, {"score": 0.0024099937116733227, "phrase": "architecture_scalable"}, {"score": 0.002322689143237591, "phrase": "thread_units"}, {"score": 0.002256973121326987, "phrase": "processors_cycle-time"}, {"score": 0.00219311232069446, "phrase": "proposed_microarchitecture"}, {"score": 0.002157433262687853, "phrase": "critical_signal_processing_kernels"}, {"score": 0.0021049977753042253, "phrase": "cycle-true_simulator"}], "paper_keywords": ["SMT", " clustering", " distributed computing", " DSP", " multi-threading", " processor architecture", " MPEG-4"], "paper_abstract": "A scalable, distributed, processor architecture is presented that emphasizes on high performance computing for digital signal processing applications by combining high frequency design techniques with a very high degree of parallel processing on a chip. The architecture is based on a superscalar processor model with a modified Tomasulo scheme that was extended to eliminate all central control structures for the data flow and to support simultaneous instruction issue from multiple independent threads [simultaneously multi-threaded (SMT)]. Consequent application of fine clustering reduces the cycle-time for wire-sensitive building blocks of the processor like the register file and the scheduling window and leads to a distributed architecture model, where independent thread processing units, arithmetic logic units, registers files and memories are distributed across the chip and communicate with each other by special network. A special communication protocol replaces broadcasting and associative compare of destination tags in a centralised instruction scheduler with explicit operand transfer instructions, thus decentralizing the control of the data flow to the greatest extent. As a result, the processor cycle time does neither depend on the issue bandwidth of a single thread nor on the execution bandwidth of the SMT processor. This makes the performance of the architecture scalable with both the number of function and the number of thread units without having any impact on the processors cycle-time. Performance and scalability of the proposed microarchitecture is demonstrated with critical signal processing kernels from the MPEG-4 video coding standard on a cycle-true simulator.", "paper_title": "A distributed, simultaneously multi-threaded (SMT) processor with clustered scheduling windows for scalable DSP performance", "paper_id": "WOS:000253880200007"}