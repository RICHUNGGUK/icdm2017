{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_transformations"}, {"score": 0.004716520738331953, "phrase": "petri_nets"}, {"score": 0.004525629293824217, "phrase": "increasing_relevance"}, {"score": 0.00443308765153716, "phrase": "model_transformation_techniques"}, {"score": 0.004342430078306461, "phrase": "model-driven_software_development"}, {"score": 0.0033883824438527316, "phrase": "conceptual_flaws"}, {"score": 0.002931569771634119, "phrase": "user_models"}, {"score": 0.0028127163745564777, "phrase": "current_paper"}, {"score": 0.002643386043540555, "phrase": "central_validation_problem"}, {"score": 0.0025892330566358503, "phrase": "trusted_model_transformations"}, {"score": 0.0023834640793589414, "phrase": "petri_net_based_analysis_method"}, {"score": 0.002286781334850213, "phrase": "sufficient_criterion"}, {"score": 0.0022168460543913787, "phrase": "termination_problem"}, {"score": 0.0021049977753042253, "phrase": "graph_transformation_systems"}], "paper_keywords": ["graph transformation", " termination", " model transformation", " Petri nets"], "paper_abstract": "Despite the increasing relevance of model transformation techniques in model-driven software development, research is mainly conducted to the specification and the automation of such transformations. However, since the transformations themselves may also contain conceptual flaws, it is essential to formally analyze them prior to executing them on user models. In the current paper, we focus on a central validation problem of trusted model transformations, namely, termination and propose a Petri net based analysis method that provides a sufficient criterion for the termination problem of model transformations captured by graph transformation systems.", "paper_title": "Termination analysis of model transformations by Petri nets", "paper_id": "WOS:000241436800019"}