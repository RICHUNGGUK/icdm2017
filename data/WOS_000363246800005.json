{"auto_keywords": [{"score": 0.033810181848990796, "phrase": "distance"}, {"score": 0.00481495049065317, "phrase": "swarm_intelligence"}, {"score": 0.004764859786310636, "phrase": "software_fault_prediction"}, {"score": 0.0047152877145889656, "phrase": "software_testing"}, {"score": 0.004641890423057823, "phrase": "fundamental_activity"}, {"score": 0.004569630374630379, "phrase": "software_development_process"}, {"score": 0.004137288854115515, "phrase": "defect_prediction_methods"}, {"score": 0.0040094142308666975, "phrase": "fault-prone_software_modules"}, {"score": 0.0037456980766939836, "phrase": "model_interpretation"}, {"score": 0.0035733198242955634, "phrase": "recent_studies"}, {"score": 0.0035361001070845677, "phrase": "classification_rules"}, {"score": 0.003480993634130542, "phrase": "prediction_models"}, {"score": 0.003373334961160647, "phrase": "rule-based_prediction_approach"}, {"score": 0.0031810373579919306, "phrase": "multi-objective"}, {"score": 0.0031513240597392843, "phrase": "particle_swarm_optimization"}, {"score": 0.0030378759123133644, "phrase": "discrete_search_space"}, {"score": 0.002823050755743821, "phrase": "best_global_rules"}, {"score": 0.0027790254309734428, "phrase": "local_rules"}, {"score": 0.0027242771857732373, "phrase": "promise"}, {"score": 0.002721388234661538, "phrase": "search_space"}, {"score": 0.0025824576209656676, "phrase": "different_approaches"}, {"score": 0.0025555322596460036, "phrase": "imbalanced_and_balanced_clusters"}, {"score": 0.0025025186963415, "phrase": "imbalanced_data"}, {"score": 0.0024377918036784336, "phrase": "presented_model_performance"}, {"score": 0.002206700502606511, "phrase": "obtained_results"}, {"score": 0.0021049977753042253, "phrase": "large_data_sets"}], "paper_keywords": ["Fault prediction", " Multi-objective particle swarm optimization", " Imbalanced data sets", " Classification rules", " Kernel k-means", " DSMOPSO-D"], "paper_abstract": "Software testing is a fundamental activity in the software development process aimed to determine the quality of software. To reduce the effort and cost of this process, defect prediction methods can be used to determine fault-prone software modules through software metrics to focus testing activities on them. Because of model interpretation and easily used by programmers and testers some recent studies presented classification rules to make prediction models. This study presents a rule-based prediction approach based on kernel k-means clustering algorithm and Distance based Multi-objective Particle Swarm Optimization (DSMOPSO). Because of discrete search space, we modified this algorithm and named it DSMOPSO-D. We prevent best global rules to dominate local rules by dividing the search space with kernel k-means algorithm and by taking different approaches for imbalanced and balanced clusters, we solved imbalanced data set problem. The presented model performance was evaluated by four publicly available data sets from the PROMISE repository and compared with other machine learning and rule learning algorithms. The obtained results demonstrate that our model presents very good performance, especially in large data sets.", "paper_title": "A hybrid one-class rule learning approach based on swarm intelligence for software fault prediction", "paper_id": "WOS:000363246800005"}