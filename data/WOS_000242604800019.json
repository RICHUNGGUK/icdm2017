{"auto_keywords": [{"score": 0.03970195597710193, "phrase": "standby_mode"}, {"score": 0.00481495049065317, "phrase": "efficient_symbolic_algorithms"}, {"score": 0.004691136491297242, "phrase": "leakage_states"}, {"score": 0.00465634671242413, "phrase": "static_power_consumption"}, {"score": 0.004519736937243476, "phrase": "junction_leakages"}, {"score": 0.00445293569103488, "phrase": "significant_component"}, {"score": 0.004403480614319231, "phrase": "total_power_consumption"}, {"score": 0.004354572391793908, "phrase": "nanoscale_circuits"}, {"score": 0.0041642891310893, "phrase": "moore's_law"}, {"score": 0.004072275820209647, "phrase": "logic_gate"}, {"score": 0.0037101871762082153, "phrase": "input_vector"}, {"score": 0.0033550841271846065, "phrase": "efficient_algorithm"}, {"score": 0.0033054391731615618, "phrase": "exact_mls"}, {"score": 0.0031963987773420068, "phrase": "implicit_enumeration"}, {"score": 0.0031726587374218277, "phrase": "integer-valued_decision_diagrams"}, {"score": 0.0031257046538823354, "phrase": "search_space"}, {"score": 0.0031025018810680533, "phrase": "mls"}, {"score": 0.0030225753906647935, "phrase": "primary_inputs"}, {"score": 0.002911961514073769, "phrase": "minimum_balanced_cut"}, {"score": 0.0028795712616923462, "phrase": "digraph_representation"}, {"score": 0.002763850622950247, "phrase": "increased_switching_power"}, {"score": 0.002499094513009327, "phrase": "mls_algorithm"}, {"score": 0.002443784721651744, "phrase": "maximal_input_cube"}, {"score": 0.00241658945942583, "phrase": "minimum_switching_cost"}], "paper_keywords": ["decision diagrams", " leakage power analysis", " power minimization", " symbolic techniques"], "paper_abstract": "Static power consumption due to subthreshold, gate, and junction leakages has become a significant component of the total power consumption. For nanoscale circuits, leakage poses one of the most important challenges to the continuation of Moore's law. The leakage of a logic gate varies by an order of magnitude over its Boolean input space. Thus, one way to minimize leakage in a circuit during standby mode is to apply an input vector for which the leakage is at its minimum. Such a set of vectors is called the minimum leakage set (MLS). In this paper, an efficient algorithm for computing the exact MLS is presented. The approach is based on implicit enumeration using integer-valued decision diagrams. Since the search space for MLS is exponential in the number of primary inputs, the enumeration is done with respect to the minimum balanced cut of the digraph representation of the circuit. Next, the problem of the increased switching power, which results from driving all inputs to a given state when entering the standby mode, is addressed. For a given upper bound B on the leakage, the MLS algorithm is extended to identify the maximal input cube with the minimum switching cost from the set of minterms whose maximum leakage is <= B. The switching cost associated with an input is taken to be proportional to the load capacitance of that input. The algorithms have been successfully tested on the ISCAS85 and MCNC91 benchmark circuits.", "paper_title": "Efficient symbolic algorithms for computing the minimum and bounded leakage states", "paper_id": "WOS:000242604800019"}