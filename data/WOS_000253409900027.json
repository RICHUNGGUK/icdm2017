{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "subeffect_qualifiers"}, {"score": 0.004392565073466714, "phrase": "static_analyses"}, {"score": 0.004007083686875716, "phrase": "program's_objects"}, {"score": 0.003334309053314909, "phrase": "usage_analysis"}, {"score": 0.003006654007926993, "phrase": "expressive_generic_analysis"}, {"score": 0.0027741761880779535, "phrase": "sharing_analysis"}, {"score": 0.0025892330566358503, "phrase": "resulting_system"}, {"score": 0.002472822097373027, "phrase": "parametric_polymorphism"}, {"score": 0.002416589459425828, "phrase": "effect_subsumption"}, {"score": 0.002255431275670053, "phrase": "general_framework"}, {"score": 0.0022041312401435346, "phrase": "qualified_types"}, {"score": 0.0021049977753042253, "phrase": "readily_available_tools"}], "paper_keywords": ["languages", " theory", " sharing analysis", " uniqueness typing", " type and effect systems", " qualified types"], "paper_abstract": "Sharing analysis and uniqueness typing are static analyses that aim at determining which of a program's objects are to be used at most once. There are many commonalities between these two forms of usage analysis. We make their connection precise by developing an expressive generic analysis that can be instantiated to both sharing analysis and uniqueness typing. The resulting system, which combines parametric polymorphism with effect subsumption, is specified within the general framework of qualified types, so that readily available tools and techniques can be used for the development of implementations and metatheory.", "paper_title": "A generic usage analysis with subeffect qualifiers", "paper_id": "WOS:000253409900027"}