{"auto_keywords": [{"score": 0.004505638402009237, "phrase": "two-level_search_algorithm"}, {"score": 0.004374593906165761, "phrase": "two-dimensional_rectangle_packing_problem"}, {"score": 0.003584025547693836, "phrase": "corner-occupying_action"}, {"score": 0.0034034331737042363, "phrase": "overlapping_other_already_packed_rectangles"}, {"score": 0.003304339421246321, "phrase": "first_level"}, {"score": 0.0031845067058084583, "phrase": "simple_algorithm"}, {"score": 0.002935905915691203, "phrase": "highest_degree"}, {"score": 0.002706659627293686, "phrase": "second_level"}, {"score": 0.0024586427394152196, "phrase": "ccoa"}, {"score": 0.0023869914500743083, "phrase": "computational_results"}, {"score": 0.002317423416027688, "phrase": "resulted_packing_algorithm"}, {"score": 0.002233301265743633, "phrase": "high-density_solutions"}, {"score": 0.0022005118194652704, "phrase": "short_running_times"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["rectangle packing problem", " heuristic", " greedy algorithm"], "paper_abstract": "In this paper, we propose a two-level search algorithm to solve the two-dimensional rectangle packing problem. In our algorithm, the rectangles are placed into the container one by one and each rectangle should be packed at a position by a corner-occupying action so that it touches two items without overlapping other already packed rectangles. At the first level of our algorithm, a simple algorithm called A(0) selects and packs one rectangle according to the highest degree first rule at every iteration of packing. At the second level, A(0) is itself used to evaluate the benefit of a CCOA more globally. Computational results show that the resulted packing algorithm called A(l) produces high-density solutions within short running times. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "A two-level search algorithm for 2D rectangular packing problem", "paper_id": "WOS:000248838200008"}