{"auto_keywords": [{"score": 0.04133491510042038, "phrase": "new_species"}, {"score": 0.006303285903516616, "phrase": "sim"}, {"score": 0.0043705604923728195, "phrase": "novel_model"}, {"score": 0.0043144799365586375, "phrase": "parallel_evolutionary_algorithms"}, {"score": 0.004123781267600542, "phrase": "biological_concept"}, {"score": 0.003992729692096799, "phrase": "ea_population_search"}, {"score": 0.003767203575060969, "phrase": "good_solutions"}, {"score": 0.0034191818674096453, "phrase": "speciating_island_model"}, {"score": 0.0031032109441552287, "phrase": "new_search_processes"}, {"score": 0.0029089095588612007, "phrase": "long_term_goal"}, {"score": 0.0025394700487126414, "phrase": "new_search_process"}, {"score": 0.0023497779149212737, "phrase": "successful_identification"}, {"score": 0.0021742244283295986, "phrase": "improved_solution_quality"}, {"score": 0.0021049977753042253, "phrase": "canonical_parallel_ea."}], "paper_keywords": ["parallel evolutionary algorithms", " genetic programming", " islands"], "paper_abstract": "This paper presents an investigation of a novel model for parallel evolutionary algorithms (EAs) based on the biological concept of species. In EA population search, new species represent solutions that could lead to good solutions but are disadvantaged due to their dissimilarity from the rest of the population. The Speciating Island Model (SIM) attempts to exploit new species when they arise by allocating them to new search processes executing on other islands (other processors). The long term goal of the SIM is to allow new species to diffuse throughout a large (conceptual) parallel computer network, where idle and unimproving processors initiate a new search process with them. In this paper, we focus on the successful identification and exploitation of new species and show that the SIM can achieve improved solution quality as compared to a canonical parallel EA. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "The Speciating Island Model: An alternative parallel evolutionary algorithm", "paper_id": "WOS:000239227800005"}