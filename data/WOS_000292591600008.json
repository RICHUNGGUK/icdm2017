{"auto_keywords": [{"score": 0.047869525215773305, "phrase": "novel_page_table_organisation"}, {"score": 0.00481495049065317, "phrase": "virtual_memory_support"}, {"score": 0.004769702911065878, "phrase": "real-time_and_memory-constrained_embedded_applications"}, {"score": 0.004549734943142138, "phrase": "real-time_and_memory-constrained_embedded_system"}, {"score": 0.004258644418211771, "phrase": "hardware_memory_management_unit"}, {"score": 0.0040049806975968145, "phrase": "address_mapping"}, {"score": 0.003802135020791801, "phrase": "virtual_memory"}, {"score": 0.003643807817480753, "phrase": "page_table"}, {"score": 0.003459191419478298, "phrase": "physical_page_translation_information"}, {"score": 0.003410479630045025, "phrase": "entire_address_space"}, {"score": 0.003378385493203297, "phrase": "page_tables"}, {"score": 0.0032838979278935814, "phrase": "general-purpose_systems"}, {"score": 0.003207173639414978, "phrase": "real-time_performance"}, {"score": 0.003132236287543072, "phrase": "primary_importance"}, {"score": 0.0030881143614111552, "phrase": "average_performance"}, {"score": 0.0030590445140753187, "phrase": "page_table_traversal"}, {"score": 0.0030017207229983385, "phrase": "major_concern"}, {"score": 0.0029039692582303904, "phrase": "strict_real-time_requirements"}, {"score": 0.0028630535573013686, "phrase": "limited_memory_resources"}, {"score": 0.0026543514413663893, "phrase": "significantly_less_memory"}, {"score": 0.002616943519478975, "phrase": "traditional_page_tables"}, {"score": 0.0025436978068459565, "phrase": "rapid_and_deterministic_hardware-based_page_table_traversal"}, {"score": 0.0024146842687658467, "phrase": "memory_footprint"}, {"score": 0.0022385926290967263, "phrase": "large_sequences"}, {"score": 0.0022175019341824603, "phrase": "consecutive_virtual_pages"}, {"score": 0.0021656385587456952, "phrase": "non-fragmented_region"}, {"score": 0.0021049977753042253, "phrase": "consecutive_physical_memory_frames"}], "paper_keywords": [""], "paper_abstract": "A novel page table organisation for real-time and memory-constrained embedded system is presented. Increasingly many high-end embedded processors offer virtual memory support in the form of hardware memory management unit, which is responsible for caching and rapidly looking-up the address mapping required to access memory. However, to completely implement virtual memory support the system software needs to maintain a page table per task, which goal is to capture the virtual to physical page translation information for the entire address space. Page tables have been traditionally designed for general-purpose systems where their size and real-time performance have not been of primary importance; the average performance of page table traversal has been the major concern. Many embedded systems, however, impose strict real-time requirements coupled with limited memory resources. To address these problems, a novel page table organisation is proposed, which not only requires significantly less memory than the traditional page tables, but also enables a rapid and deterministic hardware-based page table traversal. This is achieved by exploiting application knowledge regarding the memory footprint of the program under execution and, in particular, the fact that often times large sequences of consecutive virtual pages are mapped to a non-fragmented region in physical memory comprising of consecutive physical memory frames.", "paper_title": "Towards virtual memory support in real-time and memory-constrained embedded applications: the interval page table", "paper_id": "WOS:000292591600008"}