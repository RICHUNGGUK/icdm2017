{"auto_keywords": [{"score": 0.039299987230067404, "phrase": "ga"}, {"score": 0.037795786857216414, "phrase": "test_data"}, {"score": 0.02991131874708806, "phrase": "multiple_target_paths"}, {"score": 0.00481495049065317, "phrase": "ga-based_multiple_paths"}, {"score": 0.00452043800760441, "phrase": "software_testing"}, {"score": 0.004443276312972159, "phrase": "considerable_amount"}, {"score": 0.00436742595270452, "phrase": "software_project_budget"}, {"score": 0.004268293864953256, "phrase": "software_quality_managers"}, {"score": 0.0040767015025213625, "phrase": "testing_costs"}, {"score": 0.003961330917648707, "phrase": "path_coverage"}, {"score": 0.0038936755823756226, "phrase": "test_adequacy_criterion"}, {"score": 0.0037834649508375544, "phrase": "genetic_algorithms"}, {"score": 0.0035518193979811367, "phrase": "white-box_testing"}, {"score": 0.003221316290858497, "phrase": "existing_ga-based_test_data_generators"}, {"score": 0.002726740692380339, "phrase": "ga-based_test_data_generator"}, {"score": 0.002574387911697005, "phrase": "multiple_test_data"}, {"score": 0.002321234686549485, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["software testing", " path testing", " genetic algorithms", " test data generator"], "paper_abstract": "Developers have learned over time that software testing costs a considerable amount of a software project budget. Hence, software quality managers have been looking for solutions to reduce testing costs and time. Considering path coverage as the test adequacy criterion, we propose using genetic algorithms (GA) for automating the generation of test data for white-box testing. There are evidences that GA has been already successful in generating test data. However, existing GA-based test data generators suffer from some problems. This paper presents our approach to overcome one of these problems; that is the inefficiency in covering multiple target paths. We have designed a GA-based test data generator that is, in one run, able to synthesize multiple test data to cover multiple target paths. Moreover, we have implemented a set of variations of the generator. Experimental results show that our test data generator is more efficient and more effective than others. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "GA-based multiple paths test data generator", "paper_id": "WOS:000255085300005"}