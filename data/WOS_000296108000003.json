{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "domain-free_lambda_calculi"}, {"score": 0.014016997581538633, "phrase": "domain-free_lambda_calculus"}, {"score": 0.013285912886662756, "phrase": "existential_types"}, {"score": 0.012119155374927297, "phrase": "domain-free_polymorphic_lambda_calculus"}, {"score": 0.004388796812234033, "phrase": "typability_problems"}, {"score": 0.003789561910103601, "phrase": "typability_problem"}, {"score": 0.003427246079774314, "phrase": "type_checking"}, {"score": 0.003005039427642664, "phrase": "third_results"}, {"score": 0.002891032998395276, "phrase": "second_result"}, {"score": 0.002846647336160784, "phrase": "cps_translations"}, {"score": 0.002476546030310661, "phrase": "key_idea"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Existential type", " Type checking", " Typability", " Undecidability", " CPS translation", " Domain-free type system"], "paper_abstract": "This paper shows (1) the undecidability of the type checking and the typability problems in the domain-free lambda calculus with negation, product, and existential types, (2) the undecidability of the typability problem in the domain-free polymorphic lambda calculus, and (3) the undecidability of the type checking and the typability problems in the domain-free lambda calculus with function and existential types. The first and the third results are proved by the second result and CPS translations that reduce those problems in the domain-free polymorphic lambda calculus to those in the domain-free lambda calculi with existential types. The key idea is the conservativity of the domain-free lambda calculi with existential types over the images of the translations. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Type checking and typability in domain-free lambda calculi", "paper_id": "WOS:000296108000003"}