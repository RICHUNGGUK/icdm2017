{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "time"}, {"score": 0.004526503177267299, "phrase": "fpga_platforms"}, {"score": 0.004190019394361629, "phrase": "hardware_architecture"}, {"score": 0.00412982464319207, "phrase": "unix"}, {"score": 0.0040002088320302935, "phrase": "hellman's_time-memory_trade-off"}, {"score": 0.003702702337768558, "phrase": "key_search_machine"}, {"score": 0.0035899674590142653, "phrase": "rainbow_variant"}, {"score": 0.0035076666315744525, "phrase": "oechslin"}, {"score": 0.003427246079774314, "phrase": "implementation_target"}, {"score": 0.00218807532188779, "phrase": "individual_password"}], "paper_keywords": ["cryptanalysis", " hash-functions", " time-memory trade-off", " exhaustive key search", " rainbow table", " FPGA implementation"], "paper_abstract": "This paper presents a hardware architecture for UNIX password cracking using Hellman's time-memory trade-off; it is the first hardware design for a key search machine based on the rainbow variant proposed by Oechslin. The implementation target is the Berkeley BEE2 FPGA platform which can run at 400 million password calculations/second. Our design targets passwords of length 48 bits (out of 56). This means that with one BEE2 module the precomputation for one salt takes about 8 days, resulting in a storage of 56 Gigabyte. For the precomputation of all salts in one year we would need 92 BEE2 modules. Recovering an individual password requires a few minutes on a Virtex-4 FPGA.", "paper_title": "Time-memory trade-off attack on FPGA platforms: UNIX password cracking", "paper_id": "WOS:000240036500041"}