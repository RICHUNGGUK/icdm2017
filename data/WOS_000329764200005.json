{"auto_keywords": [{"score": 0.04930231023249967, "phrase": "message_queues"}, {"score": 0.00481495049065317, "phrase": "system_v_semaphores"}, {"score": 0.004659951478263083, "phrase": "concurrent_programming"}, {"score": 0.004509919457793852, "phrase": "common_means"}, {"score": 0.004364696693320128, "phrase": "potential_performance"}, {"score": 0.004293840838533456, "phrase": "multi-core_processors"}, {"score": 0.003892126266260425, "phrase": "inter-process_concurrency"}, {"score": 0.003277140908834426, "phrase": "high-level_command-line_interface"}, {"score": 0.002994701080666466, "phrase": "easy-to-use_interface"}, {"score": 0.002827740707723551, "phrase": "application_developers"}, {"score": 0.0025628355581338563, "phrase": "sysv_semaphores"}, {"score": 0.002229380111189829, "phrase": "simple_shell_scripts"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["semaphores", " message queues"], "paper_abstract": "Concurrent programming has become a common means to harness the potential performance of multi-core processors. System V (SysV) message queues and semaphores have been used since the mid 1970s to implement inter-process concurrency, but they are difficult to use, and bindings exist for few programming languages. This paper introduces ipcmd, a high-level command-line interface to SysV message queues and semaphores. ipcmd provides an easy-to-use interface for synchronizing concurrent processes to allow application developers to efficiently prototype, debug, and test the use of SysV semaphores and message queues in applications. Easy-to-understand applications of semaphores are illustrated using simple shell scripts. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "ipcmd: a command-line interface to System V semaphores and message queues", "paper_id": "WOS:000329764200005"}