{"auto_keywords": [{"score": 0.04978895903400396, "phrase": "distributed_hash_tables"}, {"score": 0.0403633960777679, "phrase": "fill-up_level"}, {"score": 0.0259985490737455, "phrase": "high_probability"}, {"score": 0.00481495049065317, "phrase": "multiple_choice_tries"}, {"score": 0.004642604455537883, "phrase": "n_strings"}, {"score": 0.004476399615305783, "phrase": "k_strings"}, {"score": 0.00436890075128947, "phrase": "discrete_i.i.d"}, {"score": 0.004086350434865782, "phrase": "c_log_n."}, {"score": 0.003618443379266972, "phrase": "ordinary_tries"}, {"score": 0.003574695610710444, "phrase": "greedy_online_construction"}, {"score": 0.0031748333717241456, "phrase": "total_computation_time"}, {"score": 0.0028715299874549245, "phrase": "typical_depth"}, {"score": 0.0026209522797963447, "phrase": "highly_balanced_trees"}, {"score": 0.0025735173163957993, "phrase": "simple_greedy_algorithm"}, {"score": 0.0023346234464901978, "phrase": "randomized_id_management_algorithm"}, {"score": 0.002320449502337321, "phrase": "peer-to-peer_networks"}, {"score": 0.0022236070278432575, "phrase": "minimum_load"}, {"score": 0.0021438155673297377, "phrase": "wiley_periodicals"}, {"score": 0.0021055153602483746, "phrase": "mg"}], "paper_keywords": ["random tries", " random data structures", " probabilistic analysis of algorithms", " algorithms on sequences", " distributed hash tables"], "paper_abstract": "In this article we consider tries built from n strings such that each string can be chosen from a pool of k strings, each of them generated by a discrete i.i.d. source. Three cases are considered: k = 2, k is large but fixed, and k similar to c log n. The goal in each case is to obtain tries as balanced as possible. Various parameters such as height and fill-up level are analyzed. It is shown that for two-choice tries a 50% reduction in height is achieved when compared with ordinary tries. In a greedy online construction when the string that minimizes the depth of insertion for every pair is inserted, the height is only reduced by 25%. To further reduce the height by another 25%, we design a more refined online algorithm. The total computation time of the algorithm is O(n log n). Furthermore, when we choose the best among k >= 2 strings, then for large but fixed k the height is asymptotically equal to the typical depth in a trie. Finally, we show that further improvement can be achieved if the number of choices for each string is proportional to log n. In this case highly balanced trees can be constructed by a simple greedy algorithm for which the difference between the height and the fill-up level is bounded by a constant with high probability. This, in turn, has implications for distributed hash tables, leading to a randomized ID management algorithm in peer-to-peer networks such that, with high probability, the ratio between the maximum and the minimum load of a processor is O(1). (C) 2008 Wiley Periodicals, Inc. Random Struct. Mg.. 34, 337-367, 2009", "paper_title": "Multiple Choice Tries and Distributed Hash Tables", "paper_id": "WOS:000264981900003"}