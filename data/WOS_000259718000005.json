{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "systematic_security_hardening"}, {"score": 0.0347503086063342, "phrase": "security_code"}, {"score": 0.004528156929805637, "phrase": "aspect-oriented_approach"}, {"score": 0.004403480614319231, "phrase": "source_code"}, {"score": 0.004187614134377688, "phrase": "software_security"}, {"score": 0.0035811651542886746, "phrase": "high-level_security_hardening_plans"}, {"score": 0.003501991125315889, "phrase": "priori_defined_security_hardening_patterns"}, {"score": 0.0033864888703414903, "phrase": "required_steps"}, {"score": 0.0032383707002544755, "phrase": "detailed_information"}, {"score": 0.002831658243608909, "phrase": "security_hardening_patterns"}, {"score": 0.0027690086059100495, "phrase": "common_security_hardening_practices"}, {"score": 0.0025892330566358503, "phrase": "aspect-oriented_languages"}, {"score": 0.0023675132064088803, "phrase": "hardened_applications"}, {"score": 0.0021049977753042253, "phrase": "aspect-oriented_paradigm"}], "paper_keywords": ["security hardening", " security hardening patterns", " security hardening plans", " aspect-oriented programming", " computer security", " security patterns", " secure programming"], "paper_abstract": "In this paper, we present an aspect-oriented approach for the systematic security hardening of source code. It aims at allowing developers to perform software security hardening by providing an abstraction over the actions required to improve the security of the program. This is done by giving them the capabilities to specify high-level security hardening plans that leverage a priori defined security hardening patterns. These patterns describe the required steps and actions to harden security code, including detailed information on how and where to inject the security code. We show the viability and relevance of our approach by: (1) elaborating security hardening patterns and plans to common security hardening practices, (2) realizing these patterns by implementing them into aspect-oriented languages, (3) applying them to secure applications, (4) testing the hardened applications. Furthermore, we discuss, in this paper, our insights on the appropriateness, strengths and limitations of the aspect-oriented paradigm for security hardening. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "An aspect-oriented approach for the systematic security hardening of code", "paper_id": "WOS:000259718000005"}