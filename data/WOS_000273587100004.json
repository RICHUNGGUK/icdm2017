{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "minimum_cost_arc-connectivity_orientations"}, {"score": 0.004471978831302331, "phrase": "minimum_cost_orientation"}, {"score": 0.0043533862892678864, "phrase": "k-arc-connected_directed_graph"}, {"score": 0.004266501496765747, "phrase": "minimum_cost_k-arc-connected_orientation_problem"}, {"score": 0.00407042677958844, "phrase": "submodular_flow_problem"}, {"score": 0.004016124167156452, "phrase": "frank"}, {"score": 0.0038573081851680656, "phrase": "combinatorial_algorithm"}, {"score": 0.00300749708357049, "phrase": "frank's_algorithm"}, {"score": 0.0027370835853738626, "phrase": "new_sophisticated_data_structure"}, {"score": 0.0023287359930308864, "phrase": "sophisticated_data_structures"}, {"score": 0.0021049977753042253, "phrase": "shortest_dijoin"}], "paper_keywords": ["Arc-connectivity", " Graph orientation", " Submodular flow", " Crossing family", " Dijoin"], "paper_abstract": "Given a 2k-edge-connected undirected graph, we consider to find a minimum cost orientation that yields a k-arc-connected directed graph. This minimum cost k-arc-connected orientation problem is a special case of the submodular flow problem. Frank (1982) devised a combinatorial algorithm that solves the problem in O(k (2) n (3) m) time, where n and m are the numbers of vertices and edges, respectively. Gabow (1995) improved Frank's algorithm to run in O(kn (2) m) time by introducing a new sophisticated data structure. We describe an algorithm that runs in O(k (3) n (3)+kn (2) m) time without using sophisticated data structures. In addition, we present an application of the algorithm to find a shortest dijoin in O(n (2) m) time, which matches the current best bound.", "paper_title": "An Algorithm for Minimum Cost Arc-Connectivity Orientations", "paper_id": "WOS:000273587100004"}