{"auto_keywords": [{"score": 0.03498718165642814, "phrase": "booth"}, {"score": 0.004586531354697466, "phrase": "useful_components"}, {"score": 0.004476399615305783, "phrase": "special_purpose_digital_signal_processors"}, {"score": 0.004298666679374568, "phrase": "residue_number_system"}, {"score": 0.00412796126884884, "phrase": "modulo_exponentiators"}, {"score": 0.004061584718427419, "phrase": "multiplicative_inverses"}, {"score": 0.003964007795174772, "phrase": "cryptographic_algorithms"}, {"score": 0.0036553070575015344, "phrase": "unified_way"}, {"score": 0.002936331371903168, "phrase": "diminished-one_representations"}, {"score": 0.0028425481299483254, "phrase": "experimental_results"}, {"score": 0.002751751956416832, "phrase": "proposed_squarers"}, {"score": 0.002707444334463544, "phrase": "significant_savings"}, {"score": 0.0026423134393535243, "phrase": "implementation_area"}, {"score": 0.002599763359352916, "phrase": "previous_proposals"}, {"score": 0.002436289099444074, "phrase": "sufficiently_large_operand_widths"}, {"score": 0.002320449502337321, "phrase": "small_improvement"}, {"score": 0.0022830706430588482, "phrase": "execution_delay"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Squarers", " Modulo arithmetic", " Residue number system", " Computer arithmetic", " Booth encoding"], "paper_abstract": "Modulo 2(n) +/- 1 squarers are useful components for designing special purpose digital signal processors that internally use a residue number system and for implementing the modulo exponentiators and multiplicative inverses required in cryptographic algorithms. In this paper we propose, in a unified way, architectures for their design that are based on the radix-4 modified Booth encoding. For the modulo 2(n) + 1 case, both the normal and the diminished-one representations are considered. Experimental results show that the proposed squarers offer significant savings in the implementation area over previous proposals that can reach up to 38% for sufficiently large operand widths, while in many cases a small improvement in execution delay can also be achieved. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Efficient modulo 2(n) +/- 1 squarers", "paper_id": "WOS:000292011900002"}