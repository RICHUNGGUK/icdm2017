{"auto_keywords": [{"score": 0.048140506081445586, "phrase": "bcm"}, {"score": 0.010612378643600213, "phrase": "building-cube_method"}, {"score": 0.008596333002927815, "phrase": "gpu_cluster_system"}, {"score": 0.008123338480707051, "phrase": "cluster_system"}, {"score": 0.00799888158481134, "phrase": "proposed_scheme"}, {"score": 0.0047409388179452255, "phrase": "gpu_platform"}, {"score": 0.004525629293824217, "phrase": "equally-spaced_cartesian_meshes"}, {"score": 0.0043875257506180865, "phrase": "next_generation_cfd_method"}, {"score": 0.004275650416511604, "phrase": "equally-spaced_meshes"}, {"score": 0.004123781267600542, "phrase": "highly_parallel_computation"}, {"score": 0.003997891221012094, "phrase": "parallel_implementation_scheme"}, {"score": 0.003816197777388722, "phrase": "efficient_hierarchical_parallel_processing"}, {"score": 0.0035681790580031998, "phrase": "red-black_sor_method"}, {"score": 0.003513264130359459, "phrase": "pressure_calculations"}, {"score": 0.0033190180867511605, "phrase": "massive_data_parallelism"}, {"score": 0.0032848686309827494, "phrase": "bcm."}, {"score": 0.0032176163279340206, "phrase": "coarse-grain_and_fine-grain_parallelism"}, {"score": 0.0030712749385664686, "phrase": "equally-divided_tasks"}, {"score": 0.0029164434911787187, "phrase": "computational_power"}, {"score": 0.002755104031926742, "phrase": "efficient_data_management"}, {"score": 0.0027126684113045756, "phrase": "coalesced_data_transfer"}, {"score": 0.0026297428083782875, "phrase": "on-chip_memory"}, {"score": 0.0025361866386341796, "phrase": "single_gpu_implementation"}, {"score": 0.0024586427394152196, "phrase": "single_gpu_one"}, {"score": 0.0023958326775913165, "phrase": "multiple_gpu_implementation"}, {"score": 0.0023467391904246834, "phrase": "almost_ideal_scalability"}, {"score": 0.002194011800331242, "phrase": "whole_bcm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Building-Cube Method", " GPGPU", " Multiple GPUs"], "paper_abstract": "The Building-Cube Method (BCM) based on equally-spaced Cartesian meshes has been proposed as a next generation CFD method. Due to the equally-spaced meshes, it is well suited for highly parallel computation. This paper proposes a parallel implementation scheme of BCM on a GPU cluster system, which needs efficient hierarchical parallel processing to exploit the potential of the cluster system. The proposed scheme employs the Red-Black SOR method for the pressure calculations, which is the most time-consuming part of BCM, to obtain massive data parallelism of BCM. By exploiting the coarse-grain and fine-grain parallelism of BCM, the proposed scheme hierarchically assigns equally-divided tasks into the GPU cluster system. Furthermore, to exploit the computational power of GPUs in the cluster system, the proposed scheme employs an efficient data management such as coalesced data transfer and reusing data on an on-chip memory. Experimental results show that the single GPU implementation can achieve about three times higher performance than the single GPU one. Moreover, the multiple GPU implementation can achieve an almost ideal scalability. Finally, the possibility of further acceleration of not only the pressure calculation but also the whole BCM is discussed. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Parallel processing of the Building-Cube Method on a GPU platform", "paper_id": "WOS:000293037100017"}