{"auto_keywords": [{"score": 0.039108224572764555, "phrase": "user_preferences"}, {"score": 0.035744371431884255, "phrase": "top-k_data_service_compositions"}, {"score": 0.03346417924469899, "phrase": "composition_query"}, {"score": 0.03220892002455552, "phrase": "relevant_services"}, {"score": 0.00481495049065317, "phrase": "web_service"}, {"score": 0.004763565662615503, "phrase": "fuzzy_preferences"}, {"score": 0.004596192494271827, "phrase": "data-driven_web_services"}, {"score": 0.0045471315699087385, "phrase": "service-oriented_technologies"}, {"score": 0.004482526999029664, "phrase": "interoperable_method"}, {"score": 0.00441883624011048, "phrase": "data_sources"}, {"score": 0.0043095378396174125, "phrase": "data_web_services_composition"}, {"score": 0.004233119608341877, "phrase": "flexible_solution"}, {"score": 0.004187917910692495, "phrase": "users'_complex_queries"}, {"score": 0.0040262522882015175, "phrase": "web_services"}, {"score": 0.003912595576016982, "phrase": "large_number"}, {"score": 0.0038846843242954935, "phrase": "candidate_compositions"}, {"score": 0.0036815763368083197, "phrase": "key_factor"}, {"score": 0.0034394269654205094, "phrase": "novel_approach"}, {"score": 0.00323625520042892, "phrase": "fuzzy_sets"}, {"score": 0.003111211706454155, "phrase": "efficient_rdf_query"}, {"score": 0.0026573974912563014, "phrase": "candidate_services"}, {"score": 0.0026008598632891837, "phrase": "pareto_dominance"}, {"score": 0.00249135867469492, "phrase": "new_method"}, {"score": 0.0024383449794706477, "phrase": "returned_top-k_compositions"}, {"score": 0.0023440589015485077, "phrase": "highest_scores"}, {"score": 0.002237308726827077, "phrase": "thorough_experimental_study"}, {"score": 0.002181851408180827, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "different_settings"}], "paper_keywords": ["Algorithms", " Measurement", " Performance", " Web services", " service composition", " preference queries", " top-k", " diversity"], "paper_abstract": "Data-driven Web services build on service-oriented technologies to provide an interoperable method of interacting with data sources on top of the Web. Data Web services composition has emerged as a flexible solution to answer users' complex queries on the fly. However, as the number of Web services on the Web grows quickly, a large number of candidate compositions that would use different (most likely competing) services may be used to answer the same query User preferences are a key factor that can be used to rank candidate services/compositions and retain only the best ones. In this article, we present a novel approach for computing the top-k data service compositions based on user preferences. In our approach, we model user preferences using fuzzy sets and incorporate them into the composition query. We use an efficient RDF query rewriting algorithm to determine the relevant services that may be used to answer the composition query. We match the (fuzzy) constraints of the relevant services to those of the query and determine their matching degrees using a set of matching methods. We then rank-order the candidate services based on a fuzzification of Pareto dominance and compute the top-k data service compositions. In addition, we introduce a new method for increasing the diversity of returned top-k compositions while maintaining as much as possible the compositions with the highest scores. Finally, we describe the architecture of our system and present a thorough experimental study of our proposed techniques and algorithms. The experimental study demonstrates the efficiency and the effectiveness of our techniques in different settings.", "paper_title": "Web Service Compositions with Fuzzy Preferences: A Graded Dominance Relationship-Based Approach", "paper_id": "WOS:000340975000002"}