{"auto_keywords": [{"score": 0.048084597108476984, "phrase": "desktop_grids"}, {"score": 0.04380655797740593, "phrase": "multiple_task_allocation_policies"}, {"score": 0.03285425557766291, "phrase": "proposed_architecture"}, {"score": 0.0043161190928529755, "phrase": "flexible_architecture"}, {"score": 0.0037301606780397456, "phrase": "random_nodes"}, {"score": 0.0034887749053459584, "phrase": "fifo_way"}, {"score": 0.0033029038236817372, "phrase": "task_allocation_policy"}, {"score": 0.00316518932828897, "phrase": "remote_nodes"}, {"score": 0.002685558057339722, "phrase": "jxta_middleware"}, {"score": 0.0026209522797963447, "phrase": "search_overlay"}], "paper_keywords": ["Grid computing", " Task allocation", " Desktop grids"], "paper_abstract": "In this paper, we propose and evaluate a flexible architecture for desktop grids that supports multiple task allocation policies on top of a structured P2P overlay. In our proposal, a Bag-of-Tasks application is submitted to random nodes and placed in their local queue, that is processed in a FIFO way. When a node becomes idle, a task allocation policy is executed that fetches tasks from remote nodes. The proposed architecture is flexible since it is decoupled from both the P2P middleware and the P2P overlay. A prototype of the proposed architecture was implemented on top of the JXTA middleware, using the Chord P2P search overlay. The results obtained in a 16-machine heterogeneous desktop grid show that very good performance gains are obtained with multiple task allocation policies. Also, a speedup of 9.85 was achieved for an application composed of 270 network flow balancing tasks, reducing its wallclock execution time from 32.51 min to 3.3 min.", "paper_title": "An architecture for P2P bag-of-tasks execution with multiple task allocation policies in desktop grids", "paper_id": "WOS:000311507200003"}