{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sub-joint_hierarchy"}, {"score": 0.004457579615095599, "phrase": "cartoon-style_animation"}, {"score": 0.004172360444377281, "phrase": "rubber-like_exaggerations"}, {"score": 0.0040366412779632085, "phrase": "traditional_character_animation"}, {"score": 0.003615217162972726, "phrase": "cartoon-like_movement"}, {"score": 0.0033837135367113004, "phrase": "trajectory-based_motion_exaggeration"}, {"score": 0.0031669873302916, "phrase": "link-length_constraints"}, {"score": 0.0026838147966444783, "phrase": "shorter_sub-links"}, {"score": 0.0024569466759289055, "phrase": "bezier_curve_interpolation"}, {"score": 0.0023768935613577985, "phrase": "mass-spring_simulation"}, {"score": 0.0021049977753042253, "phrase": "real_time"}], "paper_keywords": ["cartoon stylization", " motion exaggeration", " sub-joint hierarchy"], "paper_abstract": "Motion capture cannot generate cartoon-style animation directly. We emulate the rubber-like exaggerations common in traditional character animation as a means of converting motion capture data into cartoon-like movement. We achieve this using trajectory-based motion exaggeration while allowing the violation of link-length constraints. We extend this technique to obtain smooth, rubber-like motion by dividing the original links into shorter sub-links and computing the positions of joints using Bezier curve interpolation and a mass-spring simulation. This method is fast enough to be used in real time.", "paper_title": "Exaggerating character motions using sub-joint hierarchy", "paper_id": "WOS:000259360200010"}