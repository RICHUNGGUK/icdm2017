{"auto_keywords": [{"score": 0.028177397901254973, "phrase": "harp"}, {"score": 0.010865888698044076, "phrase": "inactive_threads"}, {"score": 0.00481495049065317, "phrase": "many-core_processors"}, {"score": 0.004632968695963776, "phrase": "computational_resources"}, {"score": 0.004593467306126913, "phrase": "conventional_accelerators"}, {"score": 0.00443878620915958, "phrase": "available_resources"}, {"score": 0.0040223714916651845, "phrase": "width_underutilization"}, {"score": 0.003971006689166329, "phrase": "simd_execution_units"}, {"score": 0.00385368199735867, "phrase": "branch_divergences"}, {"score": 0.003788196352457501, "phrase": "lane_activity"}, {"score": 0.0037238193456845124, "phrase": "simd_inefficiency"}, {"score": 0.003692040748097991, "phrase": "depth_underutilization"}, {"score": 0.0035523480068927614, "phrase": "active_threads"}, {"score": 0.0034621581245372138, "phrase": "pipeline_stages"}, {"score": 0.003177687211289478, "phrase": "many-_core_processors"}, {"score": 0.002929056388593134, "phrase": "inactive_yet_ready_threads"}, {"score": 0.0028181504086563967, "phrase": "implementation_details"}, {"score": 0.0027821202902740846, "phrase": "microarchitectural_changes"}, {"score": 0.0027230880516264685, "phrase": "harp-enhanced_accelerator"}, {"score": 0.002597577409911978, "phrase": "microarchitectural_design_points"}, {"score": 0.0024566655761509276, "phrase": "conventional_alternatives"}, {"score": 0.0021231452870210965, "phrase": "narrower_simd"}, {"score": 0.0021049977753042253, "phrase": "shorter_pipelines"}], "paper_keywords": ["Design", " Measurement", " Performance", " Many-core", " accelerator", " multithreading", " branch divergence", " memory divergence"], "paper_abstract": "SIMT accelerators are equipped with thousands of computational resources. Conventional accelerators, however, fail to fully utilize available resources due to branch and memory divergences. This underutilization is manifested in two underlying inefficiencies: pipeline width underutilization and pipeline depth underutilization. Width underutilization occurs when SIMD execution units are not entirely utilized due to branch divergences. This affects lane activity and results in SIMD inefficiency. Depth underutilization takes place when the pipeline runs out of active threads and is forced to leave pipeline stages idle. This work addresses both inefficiencies by harnessing inactive threads available to the pipeline. We introduceHarnessing inActive thReads in many- core Processors (or simply HARP) to improve width and depth utilization in accelerators. We show how using inactive yet ready threads can enhance performance. Moreover, we investigate implementation details and study microarchitectural changes needed to build a HARP-enhanced accelerator. Furthermore, we evaluate HARP under a variety of microarchitectural design points. We measure the area overhead associated with HARP and compare to conventional alternatives. Under Fermi- like GPUs, we show that HARP provides 10% speedup on average (maximum of 1.6X) at the cost of 3.5% area overhead. Our analysis shows that HARP performs better under narrower SIMD and shorter pipelines.", "paper_title": "HARP: Harnessing Inactive Threads in Many-Core Processors", "paper_id": "WOS:000334526400016"}