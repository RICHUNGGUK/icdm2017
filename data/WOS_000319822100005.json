{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "expression_evaluation"}, {"score": 0.007449998977931104, "phrase": "possible_values"}, {"score": 0.006610280489860209, "phrase": "non-deterministic_expression_evaluation"}, {"score": 0.00473320761888448, "phrase": "programming_languages"}, {"score": 0.0039035351575463103, "phrase": "concurrent_programs"}, {"score": 0.003837205620832367, "phrase": "share_variables"}, {"score": 0.0038044630943383497, "phrase": "real-time_programs"}, {"score": 0.0035676056286816915, "phrase": "particular_evaluation"}, {"score": 0.003477029725200912, "phrase": "single_result"}, {"score": 0.0032604908177429493, "phrase": "relative_timing"}, {"score": 0.0025099367332615794, "phrase": "modal_operators"}, {"score": 0.0024252458095689847, "phrase": "possible_evaluations"}, {"score": 0.0023839754995935184, "phrase": "possible_evaluation"}, {"score": 0.0021049977753042253, "phrase": "new_notation"}], "paper_keywords": ["non-deterministic expression evaluation", " sampling logic", " rely-guarantee", " concurrency", " real-time programming"], "paper_abstract": "Expression evaluation in programming languages is normally assumed to be deterministic; however, if an expression involves variables that are being modified by the environment of the process during its evaluation, the result of the evaluation can be non-deterministic. Two common scenarios in which this occurs are concurrent programs within which processes share variables and real-time programs that interact to monitor and/or control their environment. In these contexts, although any particular evaluation of an expression gives a single result, there is a range of possible values that could be returned depending on the relative timing between modification of a variable by the environment and its access within the expression evaluation. To compare the semantics of non-deterministic expression evaluation, one can use the set of possible values the expression evaluation could return. This paper formalizes three approaches to non-deterministic expression evaluation, highlights their commonalities and differences, shows the relationships between the approaches and explores conditions under which they coincide. Modal operators representing that a predicate holds for all possible evaluations and for some possible evaluation are associated with each of the evaluation approaches, and the properties and relationships between these operators are investigated. Furthermore, a link is made to a new notation used in reasoning about interference.", "paper_title": "Comparing Degrees of Non-Determinism in Expression Evaluation", "paper_id": "WOS:000319822100005"}