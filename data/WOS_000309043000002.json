{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gqm_models"}, {"score": 0.004735254735115024, "phrase": "software_project_monitoring"}, {"score": 0.003875424718379985, "phrase": "software_tool_epm"}, {"score": 0.0036248955128033084, "phrase": "interpretation_models"}, {"score": 0.003197843245296877, "phrase": "basic_idea"}, {"score": 0.002966084234963723, "phrase": "explicit_baseline_values"}, {"score": 0.0028926147550022607, "phrase": "metrics_values"}, {"score": 0.0027054473441439422, "phrase": "interpretation_layers"}, {"score": 0.002530359917257626, "phrase": "different_projects"}, {"score": 0.0021405207258001118, "phrase": "typical_problems"}, {"score": 0.0021049977753042253, "phrase": "software_projects"}], "paper_keywords": ["software process evaluation", " software measurement", " empirical software engineering", " process improvement"], "paper_abstract": "This paper customizes Goal/Question/Metric (GQM) project monitoring models for various projects and organizations to take advantage of the data from the software tool EPM and to allow the tailoring of the interpretation models based upon the context and success criteria for each project and organization. The basic idea is to build less concrete models that do not include explicit baseline values to interpret metrics values. Instead, we add hypothesis and interpretation layers to the models to help people of different projects make decisions in their own context. We applied the models to two industrial projects, and found that our less concrete models could successfully identify typical problems in software projects.", "paper_title": "Customizing GQM Models for Software Project Monitoring", "paper_id": "WOS:000309043000002"}