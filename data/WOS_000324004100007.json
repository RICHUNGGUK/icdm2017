{"auto_keywords": [{"score": 0.037771328677087865, "phrase": "different_sources"}, {"score": 0.029628979287270645, "phrase": "proxy-based_design"}, {"score": 0.00481495049065317, "phrase": "web_mashups."}, {"score": 0.004762893197005439, "phrase": "web_mashup"}, {"score": 0.004685855684376706, "phrase": "web_application"}, {"score": 0.00456020621016909, "phrase": "heterogeneous_sources"}, {"score": 0.004413846562278824, "phrase": "integrated_and_seamless_browsing_experience"}, {"score": 0.004366106816225457, "phrase": "client-side_mashups"}, {"score": 0.004295459433506106, "phrase": "server-side_mashups"}, {"score": 0.004024072318264299, "phrase": "client-side_scripts"}, {"score": 0.003916098498242888, "phrase": "legacy_same_origin_policy"}, {"score": 0.003831801113154043, "phrase": "current_browsers"}, {"score": 0.003728966994353039, "phrase": "flexible_client-side_communication_mechanism"}, {"score": 0.003399466007862412, "phrase": "secure_client-side_cross-domain_communication_mechanism"}, {"score": 0.003219368413618912, "phrase": "proxy-based_model"}, {"score": 0.0031845067058084583, "phrase": "fine-grained_access_control"}, {"score": 0.003048782877550259, "phrase": "web_mashups"}, {"score": 0.0028249975318149468, "phrase": "cross-domain_communications"}, {"score": 0.0026607205525625995, "phrase": "browser_plug-ins"}, {"score": 0.0026175952455594277, "phrase": "mashups_developers"}, {"score": 0.002575167114383286, "phrase": "provided_api"}, {"score": 0.0025059724686541263, "phrase": "code_modification"}, {"score": 0.002186849855560281, "phrase": "mashup_platform_providers"}, {"score": 0.0021396960731214203, "phrase": "better_solution"}, {"score": 0.0021049977753042253, "phrase": "mashup_developers"}], "paper_keywords": ["Web mashup", " same origin policy", " access control", " proxy"], "paper_abstract": "A web mashup is a web application that integrates content from heterogeneous sources to provide users with an integrated and seamless browsing experience. Client-side mashups differ from server-side mashups in that the content is integrated in the browser using the client-side scripts. However, the legacy same origin policy implemented by the current browsers cannot provide a flexible client-side communication mechanism to exchange information between resources from different sources. To address this problem, we propose a secure client-side cross-domain communication mechanism facilitated by a trusted proxy and the HTML 5 postMessage method The proxy-based model supports fine-grained access control for elements that belong to different sources in web mashups; and the design guarantees the confidentiality, integrity, and authenticity during cross-domain communications The proxy-based design also allows users to browse mashups without installing browser plug-ins. For mashups developers, the provided API minimizes the amount of code modification. The results of experiments demonstrate that the overhead incurred by our proxy model is low and reasonable. We anticipate the proxy-based design can help the mashup platform providers to provide a better solution to the mashup developers and users.", "paper_title": "A SECURE PROXY-BASED CROSS-DOMAIN COMMUNICATION FOR WEB MASHUPS", "paper_id": "WOS:000324004100007"}