{"auto_keywords": [{"score": 0.049157125687390994, "phrase": "matsuda_et_al"}, {"score": 0.04861379588134541, "phrase": "matsuda"}, {"score": 0.04789998570434713, "phrase": "hu"}, {"score": 0.00481495049065317, "phrase": "semantic_bidirectionalization"}, {"score": 0.00475924837336259, "phrase": "bidirectionalizer_plug-ins"}, {"score": 0.004525212549166676, "phrase": "nakano"}, {"score": 0.00445550467119693, "phrase": "hamana"}, {"score": 0.004219912413995784, "phrase": "automatic_derivation"}, {"score": 0.004187284711626886, "phrase": "view_complement_functions"}, {"score": 0.0037125240439927114, "phrase": "programming_languages"}, {"score": 0.0034753508746887957, "phrase": "source-to-view_function"}, {"score": 0.0033690254452595865, "phrase": "original_source"}, {"score": 0.003329994649432498, "phrase": "updated_view"}, {"score": 0.0032786537599187125, "phrase": "updated_source"}, {"score": 0.003228101865545105, "phrase": "standard_consistency_conditions"}, {"score": 0.002752695791351096, "phrase": "syntactic_and_semantic_bidirectionalization"}, {"score": 0.0024880904032564583, "phrase": "voigtlander"}, {"score": 0.0024496978447849835, "phrase": "shape_bidirectionalizer"}, {"score": 0.00224013518726087, "phrase": "good_effect"}, {"score": 0.002188472974132732, "phrase": "data-type-generic_account"}, {"score": 0.0021049977753042253, "phrase": "pluggable_bidirectionalization"}], "paper_keywords": [""], "paper_abstract": "Matsuda et al. (Matsuda, K., Hu, Z., Nakano, K., Hamana, M. & Takeichi, M. (2007) Bidirectionalization transformation based on automatic derivation of view complement functions. In Proceedings of the International Conference on Functional Programming. ACM Press, pp. 47-58) and Voigtlander (Voigtlander, J. (2009) Bidirectionalization for free! In Proceedings of Principles of Programming Languages. ACM Press, pp. 165-176) have introduced two techniques that given a source-to-view function provide an update propagation function mapping an original source and an updated view back to an updated source, subject to standard consistency conditions. Previously, we developed a synthesis of the two techniques, based on a separation of shape and content aspects (Voigtlander, J., Hu, Z., Matsuda, K. & Wang, M. (2010) Combining syntactic and semantic bidirectionalization. In Proceedings of the International Conference on Functional Programming. ACM Press, pp. 181192). Here we carry that idea further, reworking the technique of Voigtlander such that any shape bidirectionalizer (based on the work of Matsuda et al. (2007) or not) can be used as a plug-in, to good effect. We also provide a data-type-generic account, enabling wider reuse, including the use of pluggable bidirectionalization itself as a plug-in.", "paper_title": "Enhancing semantic bidirectionalization via shape bidirectionalizer plug-ins", "paper_id": "WOS:000326887800001"}