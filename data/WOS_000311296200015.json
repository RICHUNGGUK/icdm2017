{"auto_keywords": [{"score": 0.0425382298345173, "phrase": "kitsune"}, {"score": 0.00481495049065317, "phrase": "dynamic_software_updating_for_c."}, {"score": 0.0047846807459660376, "phrase": "dynamic_software_updating"}, {"score": 0.004244234872662471, "phrase": "fix_bugs"}, {"score": 0.0039595951227576415, "phrase": "dsu"}, {"score": 0.003717368939083015, "phrase": "kitsune's_updating_mechanism"}, {"score": 0.0036476222647061243, "phrase": "whole_program"}, {"score": 0.0032556926399045635, "phrase": "data_representations"}, {"score": 0.0032148229832850215, "phrase": "allowed_compiler_optimizations"}, {"score": 0.0030757650386969903, "phrase": "important_aspects"}, {"score": 0.0029613556844064713, "phrase": "program_text"}, {"score": 0.002887450071878095, "phrase": "program's_semantics"}, {"score": 0.002780025943393764, "phrase": "programmer_effort"}, {"score": 0.00264296841319955, "phrase": "simple_specifications"}, {"score": 0.0024654516678953658, "phrase": "old-version_state"}, {"score": 0.0024038923350585962, "phrase": "new_code"}, {"score": 0.0022142194702079866, "phrase": "prior_dsu_systems"}], "paper_keywords": ["Design", " Languages", " dynamic software updating"], "paper_abstract": "Dynamic software updating (DSU) systems allow programs to be updated while running, thereby permitting developers to add features and fix bugs without downtime. This paper introduces Kitsune, a new DSU system for C whose design has three notable features. First, Kitsune's updating mechanism updates the whole program, not individual functions. This mechanism is more flexible than most prior approaches and places no restrictions on data representations or allowed compiler optimizations. Second, Kitsune makes the important aspects of updating explicit in the program text, making the program's semantics easy to understand while minimizing programmer effort. Finally, the programmer can write simple specifications to direct Kitsune to generate code that traverses and transforms old-version state for use by new code; such state transformation is often necessary, and is significantly more difficult in prior DSU systems. We have used Kitsune to update five popular, open-source, single-and multi-threaded programs, and find that few program changes are required to use Kitsune, and that it incurs essentially no performance overhead.", "paper_title": "Kitsune: Efficient, General-purpose Dynamic Software Updating for C", "paper_id": "WOS:000311296200015"}