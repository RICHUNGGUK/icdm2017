{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.004454377387615279, "phrase": "multicore_cpus"}, {"score": 0.004322967486451877, "phrase": "personal_computers"}, {"score": 0.00407161650109722, "phrase": "deformable_object_modeling_algorithms"}, {"score": 0.0038810583785936505, "phrase": "growing_interest"}, {"score": 0.0038119123317396954, "phrase": "deformable_objects"}, {"score": 0.0037664981403399064, "phrase": "computer_applications"}, {"score": 0.0036553070575015344, "phrase": "video_games"}, {"score": 0.003526186748088922, "phrase": "surgical_simulation"}, {"score": 0.0034841647157189985, "phrase": "deformable_object_modeling"}, {"score": 0.0032423089921154503, "phrase": "related_calculations"}, {"score": 0.0030171910207671205, "phrase": "nvidia's_cuda_technology"}, {"score": 0.0027576314627106983, "phrase": "gpu."}, {"score": 0.002692200353719145, "phrase": "frame_rates"}, {"score": 0.0025051811853674215, "phrase": "multicore_cpu."}, {"score": 0.0023592715993204796, "phrase": "local_shape_matching"}, {"score": 0.0022085455097790537, "phrase": "new_method"}, {"score": 0.0021561514733516676, "phrase": "fast_and_robust_simulations"}, {"score": 0.0021049977753042253, "phrase": "good_numerical_stability"}], "paper_keywords": ["CUDA", " deformable object modeling", " GPGPU", " GPU programming"], "paper_abstract": "We have developed a framework that uses multicore CPUs and GPUs found on personal computers to accelerate the computations needed for a class of deformable object modeling algorithms. In recent years there has been a growing interest in using deformable objects in computer applications such as animation, video games, garment CAD, and surgical simulation. Deformable object modeling is quite expensive computationally. However, since most of the related calculations can be parallelized, we have developed a framework that utilizes NVIDIA's CUDA technology to accelerate a set of deformable object modeling algorithms by transferring their core computations to the GPU. Our results show that frame rates can be improved more than 20 times using GPU compared with using a multicore CPU. In addition, we have developed a method called Local Shape Matching which is an extension to the Shape Matching method. Using this new method we have achieved fast and robust simulations whose implementations have good numerical stability.", "paper_title": "A framework for GPU accelerated deformable object modeling", "paper_id": "WOS:000306077700003"}