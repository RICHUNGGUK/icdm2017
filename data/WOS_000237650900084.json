{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hand-coded_inner_kernels"}, {"score": 0.004478308876320956, "phrase": "highly_optimized_inner_kernels"}, {"score": 0.004287680323820891, "phrase": "paramount_importance"}, {"score": 0.0041051328120736575, "phrase": "efficient_numerical_algorithms"}, {"score": 0.003115908199991072, "phrase": "alternative_way"}, {"score": 0.0029830992938695007, "phrase": "efficient_matrix_multiplication_kernels"}, {"score": 0.0027341763737751467, "phrase": "simple_codes"}, {"score": 0.0025059724686541263, "phrase": "compilation_time"}, {"score": 0.0023644936731468252, "phrase": "resulting_kernels"}, {"score": 0.002135812692862058, "phrase": "high_performance"}, {"score": 0.0021049977753042253, "phrase": "sparse_and_dense_linear_algebra_codes"}], "paper_keywords": [""], "paper_abstract": "The use of highly optimized inner kernels is of paramount importance for obtaining efficient numerical algorithms. Often, such kernels are created by hand. In this paper, however, we present an alternative way to produce efficient matrix multiplication kernels based on a set of simple codes which can be parameterized at compilation time. Using the resulting kernels we have been able to produce high performance sparse and dense linear algebra codes on a variety of platforms.", "paper_title": "Compiler-optimized kernels: An efficient alternative to hand-coded inner kernels", "paper_id": "WOS:000237650900084"}