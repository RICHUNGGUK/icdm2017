{"auto_keywords": [{"score": 0.04845849110410783, "phrase": "non-deterministic_finite_automata"}, {"score": 0.00481495049065317, "phrase": "insecure_xml_queries"}, {"score": 0.004372442291178139, "phrase": "xml_access_control"}, {"score": 0.003459191419478298, "phrase": "effective_pre-processing_approach"}, {"score": 0.003206555192481898, "phrase": "nfa"}, {"score": 0.0031193028729331667, "phrase": "user's_queries"}, {"score": 0.0030135741897058844, "phrase": "access_control_rules"}, {"score": 0.0028321862184182913, "phrase": "experimental_validation"}, {"score": 0.0025361866386341796, "phrase": "authorized_users"}, {"score": 0.0023670716500937667, "phrase": "security_features"}, {"score": 0.0023346234464901978, "phrase": "underlying_storage_system"}, {"score": 0.0021049977753042253, "phrase": "in-network_access_control"}], "paper_keywords": ["XML", " Security", " Access control", " NFA"], "paper_abstract": "In this paper, we ask whether XML access control can be supported when underlying (XML or relational) storage system does not provide adequate security features and propose three alternative solutions-primitive, pre-processing, and post-processing. Toward that scenario, in particular, we advocate a scalable and effective pre-processing approach, called QFilter. QFilter is based on non-deterministic finite automata (NFA) and rewrites user's queries such that parts violating access control rules are pre-pruned. Through analysis and experimental validation, we show that (1) QFilter guarantees that only permissible portion of data is returned to the authorized users, (2) such access controls can be efficiently enforced without relying on security features of underlying storage system, and (3) such independency makes QFilter capable of many emerging applications, such as in-network access control and access control outsourcing.", "paper_title": "QFilter: rewriting insecure XML queries to secure ones using non-deterministic finite automata", "paper_id": "WOS:000290802400005"}