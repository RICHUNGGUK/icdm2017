{"auto_keywords": [{"score": 0.039368519501674214, "phrase": "query_efficiency"}, {"score": 0.00481495049065317, "phrase": "efficient_search"}, {"score": 0.004704495156558224, "phrase": "large-scale_heterogeneous_data"}, {"score": 0.0044289730051264116, "phrase": "fundamental_facility"}, {"score": 0.004388035083357706, "phrase": "practical_dataspace_systems"}, {"score": 0.00428733103049275, "phrase": "efficient_index"}, {"score": 0.00415019999222481, "phrase": "keyword_neighborhood"}, {"score": 0.003125835572347772, "phrase": "optimal_plan"}, {"score": 0.0030825404960282713, "phrase": "minimum_query_cost"}, {"score": 0.003054009753601139, "phrase": "efficient_algorithms"}, {"score": 0.002997735656669146, "phrase": "query_planning"}, {"score": 0.0029699874949715367, "phrase": "view_generation"}, {"score": 0.0028087949095629955, "phrase": "top-k_queries"}, {"score": 0.0026811531172346676, "phrase": "score_bounds"}, {"score": 0.0024772998651215964, "phrase": "top-k_answers"}, {"score": 0.002420339995088838, "phrase": "theoretical_analysis"}, {"score": 0.002397923568994474, "phrase": "query_cost"}, {"score": 0.002164602220179823, "phrase": "extensive_experimental_evaluation"}, {"score": 0.0021246816854197732, "phrase": "superior_performance"}, {"score": 0.0021049977753042253, "phrase": "proposed_techniques"}], "paper_keywords": ["Dataspaces", " materialization", " decomposition"], "paper_abstract": "Dataspaces consist of large-scale heterogeneous data. The query interface of accessing tuples should be provided as a fundamental facility by practical dataspace systems. Previously, an efficient index has been proposed for queries with keyword neighborhood over dataspaces. In this paper, we study the materialization and decomposition of dataspaces, in order to improve the query efficiency. First, we study the views of items, which are materialized in order to be reused by queries. When a set of views are materialized, it leads to select some of them as the optimal plan with the minimum query cost. Efficient algorithms are developed for query planning and view generation. Second, we study the partitions of tuples for answering top-k queries. Given a query, we can evaluate the score bounds of the tuples in partitions and prune those partitions with bounds lower than the scores of top-k answers. We also provide theoretical analysis of query cost and prove that the query efficiency cannot be improved by increasing the number of partitions. Finally, we conduct an extensive experimental evaluation to illustrate the superior performance of proposed techniques.", "paper_title": "Materialization and Decomposition of Dataspaces for Efficient Search", "paper_id": "WOS:000295979600009"}