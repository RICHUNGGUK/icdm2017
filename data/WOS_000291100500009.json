{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "belnap_logic"}, {"score": 0.010836718771133605, "phrase": "access_requests"}, {"score": 0.010048809759760358, "phrase": "belnap_bilattice"}, {"score": 0.004666756595735701, "phrase": "analyzable_policy_composition"}, {"score": 0.004625255533545965, "phrase": "access_control"}, {"score": 0.004211069233133584, "phrase": "policy_composition"}, {"score": 0.0038167308978417306, "phrase": "specific_application_domains"}, {"score": 0.0036498637283470386, "phrase": "domain-specific_instances"}, {"score": 0.003474694300991964, "phrase": "access-control_policy"}, {"score": 0.002997886346903894, "phrase": "expressive_access-control_policy_language"}, {"score": 0.0028284924551705516, "phrase": "natural_orderings"}, {"score": 0.0027047136845332917, "phrase": "information_orderings"}, {"score": 0.0025863375961196005, "phrase": "query_language"}, {"score": 0.0025518429503461736, "phrase": "policy_analyses"}, {"score": 0.002418393046947528, "phrase": "policy_analysis"}, {"score": 0.0023125191783901367, "phrase": "policy_queries"}, {"score": 0.0022613292987262177, "phrase": "propositional_formulas"}, {"score": 0.002162316557411786, "phrase": "firewall_policy"}, {"score": 0.0021430393104977788, "phrase": "rbac_policy_examples"}, {"score": 0.0021049977753042253, "phrase": "domain-specific_and_generic_extensions"}], "paper_keywords": ["Languages", " Theory", " Security", " Access-control policy languages", " bilattices", " multivalued logic"], "paper_abstract": "Access control to IT systems increasingly relies on the ability to compose policies. Hence there is benefit in any framework for policy composition that is intuitive, formal (and so \"analyzable\" and \"implementable\"), expressive, independent of specific application domains, and yet able to be extended to create domain-specific instances. Here we develop such a framework based on Belnap logic. An access-control policy is interpreted as a four-valued predicate that maps access requests to either grant, deny, conflict, or unspecified - the four values of the Belnap bilattice. We define an expressive access-control policy language PBel, having composition operators based on the operators of Belnap logic. Natural orderings on policies are obtained by lifting the truth and information orderings of the Belnap bilattice. These orderings lead to a query language in which policy analyses, for example, conflict freedom, can be specified. Policy analysis is supported through a reduction of the validity of policy queries to the validity of propositional formulas on predicates over access requests. We evaluate our approach through firewall policy and RBAC policy examples, and discuss domain-specific and generic extensions of our policy language.", "paper_title": "Access Control via Belnap Logic: Intuitive, Expressive, and Analyzable Policy Composition", "paper_id": "WOS:000291100500009"}