{"auto_keywords": [{"score": 0.046110065409359295, "phrase": "justice"}, {"score": 0.02322721985069416, "phrase": "wire_delay"}, {"score": 0.008405097694738078, "phrase": "architectural_specification"}, {"score": 0.004527024978801684, "phrase": "simulation_infrastructure"}, {"score": 0.004204054047427536, "phrase": "liberty_simulation_infrastructure"}, {"score": 0.0035808664384880213, "phrase": "per-access_power_consumption"}, {"score": 0.0031068064097811844, "phrase": "critical_communication_paths"}, {"score": 0.002831894638104635, "phrase": "executable_simulator_fir"}, {"score": 0.0022811346113905295, "phrase": "different_changes"}, {"score": 0.0021049977753042253, "phrase": "design_process"}], "paper_keywords": [""], "paper_abstract": "We present Justice, a set of extensions to the Liberty simulation infrastructure that model chip area, wire length, and power consumption. Based on an architectural specification of a processor, Justice estimates the area and per-access power consumption of each module in the architecture. It then constructs a floorplan for the processor and computes the length and delay of critical communication paths. Finally, Justice modifies the architectural specification to account for wire delay and generates an executable simulator fir the processor. To illustrate its capabilities, we simulate a number of very long instruction word (VLIW) architectures. Our results illustrate how Justice makes it possible for designers to compare the costs and benefits of different changes to an architecture and demonstrate the importance of considering wire delay in the design process.", "paper_title": "Modeling wire delay, area, power, and performance in a simulation infrastructure", "paper_id": "WOS:000236833100013"}