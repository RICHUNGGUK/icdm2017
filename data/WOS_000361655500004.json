{"auto_keywords": [{"score": 0.035366979368155665, "phrase": "web_applications"}, {"score": 0.00481495049065317, "phrase": "usability_functionalities"}, {"score": 0.004765686540781451, "phrase": "usability"}, {"score": 0.004692227830462433, "phrase": "software_system_quality_attribute"}, {"score": 0.004620093797504386, "phrase": "software_engineers"}, {"score": 0.0043875257506180865, "phrase": "user_interface"}, {"score": 0.004188198923320451, "phrase": "core_functionality"}, {"score": 0.004145143433523008, "phrase": "software_applications"}, {"score": 0.003997891221012094, "phrase": "different_stages"}, {"score": 0.003936389070602614, "phrase": "software_development_cycle"}, {"score": 0.0036616109902631293, "phrase": "detailed_design"}, {"score": 0.003459191419478298, "phrase": "progress_feedback"}, {"score": 0.003234299589505403, "phrase": "inductive_research_method"}, {"score": 0.0030554300179552415, "phrase": "case_studies"}, {"score": 0.002841971477743441, "phrase": "general_solution"}, {"score": 0.0026986685585382347, "phrase": "application_scenarios"}, {"score": 0.0025361866386341796, "phrase": "code_snippets"}, {"score": 0.0024333239726872604, "phrase": "implementation-oriented_design_pattern"}, {"score": 0.0023346234464901978, "phrase": "additional_case_studies"}, {"score": 0.0022399174232611853, "phrase": "proposed_solution"}, {"score": 0.0022053994402287925, "phrase": "independent_developers"}, {"score": 0.002137947680862631, "phrase": "different_applications"}, {"score": 0.0021049977753042253, "phrase": "case_study"}], "paper_keywords": ["Software engineering", " programming patterns", " design patterns", " usability"], "paper_abstract": "Usability is a software system quality attribute. Although software engineers originally considered usability to be related exclusively to the user interface, it was later found to affect the core functionality of software applications. As of then, proposals for addressing usability at different stages of the software development cycle were researched. The objective of this paper is to present three reusable solutions at detailed design and programming level in order to effectively implement the Abort Operation, Progress Feedback and Preferences usability functionalities in web applications. To do this, an inductive research method was applied. We developed three web applications including the above usability functionalities as case studies. We looked for commonalities across the implementations in order to induce a general solution. The elements common to all three developed applications include: application scenarios, functionalities, responsibilities, classes, methods, attributes and code snippets. The findings were specified as an implementation-oriented design pattern and as programming patterns in three languages. Additional case studies were conducted in order to validate the proposed solution. The independent developers used the patterns to implement different applications for each case study. As a result, we found that solutions specified as patterns can be reused to develop web applications.", "paper_title": "Reusable Solutions for Implementing Usability Functionalities", "paper_id": "WOS:000361655500004"}