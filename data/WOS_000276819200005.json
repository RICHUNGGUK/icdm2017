{"auto_keywords": [{"score": 0.04665103656723687, "phrase": "label_tree"}, {"score": 0.02123186917137478, "phrase": "bottleneck_tree_alignment_problem"}, {"score": 0.014304416139631007, "phrase": "sequence_label"}, {"score": 0.012435556260825988, "phrase": "bottleneck_edge"}, {"score": 0.00784093032791265, "phrase": "internal_node"}, {"score": 0.006170654959188151, "phrase": "lifted_label_tree"}, {"score": 0.005209523498074513, "phrase": "distance_function"}, {"score": 0.00481495049065317, "phrase": "bottleneck_tree_alignment_problems"}, {"score": 0.004747429622531595, "phrase": "set_w"}, {"score": 0.004714023408114857, "phrase": "k_sequences"}, {"score": 0.004664352260912174, "phrase": "tree_t"}, {"score": 0.004550469496119256, "phrase": "unique_sequence"}, {"score": 0.004195418010131832, "phrase": "tree_edge"}, {"score": 0.004049783994776266, "phrase": "hamming_distance"}, {"score": 0.003950846696972114, "phrase": "sequence_labels"}, {"score": 0.003681238363808568, "phrase": "maximum_cost"}, {"score": 0.003478813491904962, "phrase": "minimum_cost"}, {"score": 0.00310664242361199, "phrase": "tree_alignment_problem"}, {"score": 0.002988101395789399, "phrase": "possible_lifted_label_trees"}, {"score": 0.0027941589557405307, "phrase": "np"}, {"score": 0.002735194789581153, "phrase": "tree_structure"}, {"score": 0.0027063176464371115, "phrase": "binary_tree"}, {"score": 0.002677744558540711, "phrase": "special_cases"}, {"score": 0.0026494723416072316, "phrase": "exact_algorithm"}, {"score": 0.0025846562485378247, "phrase": "lifted_tree_alignment_problem"}, {"score": 0.002219790619936024, "phrase": "optimal_solution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Computational biology", " NP-complete", " Approximation algorithms", " Edit distance", " Metric", " Ultrametric", " Bottleneck tree alignment", " Multiple sequence alignment", " Phylogenetic tree"], "paper_abstract": "Given a set W of k sequences and a tree T with k leaves labeled with a unique sequence in W, a label tree is used to assign a sequence label to each internal node of the tree T. The cost of a tree edge is defined as the distance, such as the Hamming distance or the Levenshtein (edit) distance, between the sequence labels of a pair of nodes in the edge. The bottleneck edge of a label tree is the edge with the maximum cost in the label tree. The bottleneck tree alignment problem is concerned with the determination of a label tree with minimum cost of the bottleneck edge. A lifted label tree is a label tree in which the sequence label of each internal node is equal to the sequence label of some child of the node. The bottleneck lifted tree alignment problem involves the minimization of cost of the bottleneck edge among all possible lifted label trees of the tree T. This paper shows that when the distance function is a metric, the bottleneck tree alignment problem is NP-complete even when the tree structure resembles a binary tree. For special cases, an exact algorithm is used to solve the bottleneck lifted tree alignment problem in polynomial time. A 2(h - 1)-approximation algorithm is used to solve the bottleneck tree alignment problem, where h is the height of the tree T. It is observed that the bound is existentially tight. Finally, this paper shows that any lifted label tree is an optimal solution to the bottleneck tree alignment problem if the distance function is an ultrametric. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "On the bottleneck tree alignment problems", "paper_id": "WOS:000276819200005"}