{"auto_keywords": [{"score": 0.03969212510823958, "phrase": "razor"}, {"score": 0.00481495049065317, "phrase": "dynamic_multiresolution_ray_tracing"}, {"score": 0.004769444094319619, "phrase": "recent_work"}, {"score": 0.004701985831087475, "phrase": "interactive_ray_tracing"}, {"score": 0.004613516457919661, "phrase": "desktop_systems"}, {"score": 0.004316722156877335, "phrase": "advanced_visual_effects"}, {"score": 0.004255639740735269, "phrase": "soft_shadows"}, {"score": 0.004215397034321004, "phrase": "smooth_freeform_surfaces"}, {"score": 0.004175533280178052, "phrase": "complex_shading"}, {"score": 0.004116440453049531, "phrase": "animated_scenes"}, {"score": 0.0038332390893263844, "phrase": "rendering_system"}, {"score": 0.003725470458263889, "phrase": "new_software_rendering_architecture"}, {"score": 0.0035864603175592854, "phrase": "high-quality_images"}, {"score": 0.0035022161192936234, "phrase": "future_single-chip_many-core_hardware"}, {"score": 0.0032456625605347417, "phrase": "kd-tree_acceleration_structure"}, {"score": 0.0031393948330209255, "phrase": "scene_graph"}, {"score": 0.003094920033010818, "phrase": "system_design"}, {"score": 0.003036595866130997, "phrase": "crack-free_multiresolution_geometry"}, {"score": 0.002923214590192792, "phrase": "razor's_per-frame_kd-tree_build"}, {"score": 0.0028409576481842457, "phrase": "arbitrarily_scene_animation"}, {"score": 0.002696101728474703, "phrase": "ray_and_path_differentials"}, {"score": 0.0026077803487003, "phrase": "visibility_computations"}, {"score": 0.002570817338292482, "phrase": "two-phase_shading_scheme"}, {"score": 0.002522344964242888, "phrase": "reyes_system"}, {"score": 0.0024397017438101726, "phrase": "freeform_surfaces"}, {"score": 0.002416589459425828, "phrase": "multiple_levels"}, {"score": 0.0023485549678832628, "phrase": "experimental_results"}, {"score": 0.002304263635960015, "phrase": "prototype_system"}, {"score": 0.0022715929119140194, "phrase": "eight_cpu_cores"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Distribution ray tracing", " real-time ray tracing", " hierarchical build", " lazy build", " parallel build", " level of detail", " multiresolution", " subdivision surfaces"], "paper_abstract": "Recent work demonstrates that interactive ray tracing is possible on desktop systems, but there is still much debate as to how to most efficiently support advanced visual effects such as soft shadows, smooth freeform surfaces, complex shading, and animated scenes. With these challenges in mind, we reconsider the options for designing a rendering system and present Razor, a new software rendering architecture for distribution ray tracing designed to produce high-quality images with high performance on future single-chip many-core hardware. Razor includes two noteworthy capabilities: a set of techniques for quickly building the kd-tree acceleration structure on demand every frame from a scene graph and a system design that allows for crack-free multiresolution geometry with each ray independently choosing its geometry resolution. Razor's per-frame kd-tree build is designed to robustly handle arbitrarily scene animation, while its per-ray multiresolution geometry provides continuous level of detail driven by ray and path differentials. Razor also decouples shading from visibility computations using a two-phase shading scheme inspired by the REYES system, and caches tessellated representations of freeform surfaces at multiple levels of detail. We present experimental results gathered from a prototype system implemented on eight CPU cores, and discuss which aspects of the system are most successful and which would benefit from further investigation.", "paper_title": "Razor: An Architecture for Dynamic Multiresolution Ray Tracing", "paper_id": "WOS:000297299700007"}