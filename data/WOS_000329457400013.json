{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "crossover_rate"}, {"score": 0.004778258911940497, "phrase": "adaptive_differential_evolution"}, {"score": 0.004741845603430361, "phrase": "differential_evolution"}, {"score": 0.004634254474150777, "phrase": "simple_yet_powerful_evolutionary_algorithm"}, {"score": 0.004598982685791512, "phrase": "ea"}, {"score": 0.0045464538515249085, "phrase": "global_numerical_optimization"}, {"score": 0.004359078118356132, "phrase": "parameter_adaptation"}, {"score": 0.004243862930012258, "phrase": "efficient_way"}, {"score": 0.0041001740903338834, "phrase": "de_algorithm"}, {"score": 0.0038125469099459905, "phrase": "trial_vector"}, {"score": 0.003438058620195309, "phrase": "crossover_rate_repair_technique"}, {"score": 0.003398780792129312, "phrase": "adaptive_de_algorithms"}, {"score": 0.003334309053314909, "phrase": "successful_parameters"}, {"score": 0.003271068920884372, "phrase": "de"}, {"score": 0.0031481164109237636, "phrase": "average_number"}, {"score": 0.0030414140732789186, "phrase": "average_value"}, {"score": 0.003006654007926993, "phrase": "binary_string"}, {"score": 0.002938317647182056, "phrase": "original_crossover_rate"}, {"score": 0.0028496055358577512, "phrase": "proposed_technique"}, {"score": 0.0027741761880779535, "phrase": "adaptive_de_variant"}, {"score": 0.0027530001616294848, "phrase": "jade"}, {"score": 0.0027007380550259077, "phrase": "highly_competitive_de_variant"}, {"score": 0.0024633605241159103, "phrase": "jade."}, {"score": 0.0023079225317714815, "phrase": "improved_jade_method"}, {"score": 0.0021789194955896124, "phrase": "final_solutions"}, {"score": 0.0021539955106204354, "phrase": "convergence_rate"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Differential evolution", " Parameter adaptation", " Crossover rate repair", " Binary string", " Numerical optimization"], "paper_abstract": "Differential evolution (DE) is a simple yet powerful evolutionary algorithm (EA) for global numerical optimization. However, its performance is significantly influenced by its parameters. Parameter adaptation has been proven to be an efficient way for the enhancement of the performance of the DE algorithm. Based on the analysis of the behavior of the crossover in DE, we find that the trial vector is directly related to its binary string, but not directly related to the crossover rate. Based on this inspiration, in this paper, we propose a crossover rate repair technique for the adaptive DE algorithms that are based on successful parameters. The crossover rate in DE is repaired by its corresponding binary string, i.e. by using the average number of components taken from the mutant. The average value of the binary string is used to replace the original crossover rate. To verify the effectiveness of the proposed technique, it is combined with an adaptive DE variant, JADE, which is a highly competitive DE variant. Experiments have been conducted on 25 functions presented in CEC-2005 competition. The results indicate that our proposed crossover rate technique is able to enhance the performance of JADE. In addition, compared with other DE variants and state-of-the-art EAs, the improved JADE method obtains better, or at least comparable, results in terms of the quality of final solutions and the convergence rate. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Repairing the crossover rate in adaptive differential evolution", "paper_id": "WOS:000329457400013"}