{"auto_keywords": [{"score": 0.04926219622874721, "phrase": "k_framework"}, {"score": 0.04293428941101478, "phrase": "formal_specifications"}, {"score": 0.00481495049065317, "phrase": "automatic_inference_of_specifications"}, {"score": 0.004417848254181138, "phrase": "industrial_software_development"}, {"score": 0.0037834649508375544, "phrase": "real_code"}, {"score": 0.0037188360359702182, "phrase": "proposed_methodology"}, {"score": 0.003634371940842838, "phrase": "symbolic_execution_capabilities"}, {"score": 0.0032398798149196432, "phrase": "non-trivial_fragment"}, {"score": 0.003148116879279302, "phrase": "kernelc."}, {"score": 0.0030414140732789186, "phrase": "kernelc_programs"}, {"score": 0.0026955672787561742, "phrase": "automated_tool"}, {"score": 0.002530359917257626, "phrase": "c_routines"}, {"score": 0.002487083025913648, "phrase": "pointer-based_structures"}, {"score": 0.0023889533502525527, "phrase": "state_change"}, {"score": 0.0021049977753042253, "phrase": "c_code"}], "paper_keywords": [""], "paper_abstract": "Despite its many unquestionable benefits, formal specifications are not widely used in industrial software development. In order to reduce the time and effort required to write formal specifications, in this paper we propose a technique for automatically discovering specifications from real code. The proposed methodology relies on the symbolic execution capabilities recently provided by the K framework that we exploit to automatically infer formal specifications from programs that are written in a non-trivial fragment of C, called KERNELC. Roughly speaking, our symbolic analysis of KERNELC programs explains the execution of a (modifier) function by using other (observer) routines in the program. We implemented our technique in the automated tool KINDSPEC 2.0, which generates axioms that describe the precise input/output behavior of C routines that handle pointer-based structures (i.e., result values and state change). We describe the implementation of our system and discuss the differences w.r.t. our previous work on inferring specifications from C code.", "paper_title": "Automatic Inference of Specifications in the K Framework", "paper_id": "WOS:000367350000002"}