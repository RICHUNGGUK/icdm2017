{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model-driven_engineering"}, {"score": 0.004715702140552199, "phrase": "software_development_approach"}, {"score": 0.0044608829094248985, "phrase": "rapid_pace"}, {"score": 0.00436890075128947, "phrase": "key_aspect"}, {"score": 0.004278807087784626, "phrase": "automatic_generation"}, {"score": 0.004161553532799662, "phrase": "lower_levels"}, {"score": 0.00342568771304873, "phrase": "unwieldy_and_repetitive_manner"}, {"score": 0.0031734538599865973, "phrase": "incremental_generation"}, {"score": 0.00266693888510356, "phrase": "source_code"}, {"score": 0.0023529740798601015, "phrase": "limited_way"}, {"score": 0.0021049977753042253, "phrase": "case_study"}], "paper_keywords": ["Model-driven engineering", " evolution", " incremental generation", " traceability"], "paper_abstract": "The software development approach called Model-Driven Engineering continues to evolve at a rapid pace. A key aspect is the automatic generation of artifacts at lower levels of abstraction. However, this process typically does not take into account the evolution of systems throughout their life cycle; moreover, it is done in an unwieldy and repetitive manner. There are some works that address the problem of incremental generation of artifacts, but unfortunately that research tends to be focused on generating artifacts in the form of a model, instead of generating source code of an application that may already be deployed and running. Other studies address the issue in a limited way. In this paper, we present a proposal, a prototype, and a case study for incrementally generating source code artifacts from models. This work aims to minimize the impact of changes on applications that may already be deployed.", "paper_title": "Performing Incremental Generation of Code in Model-driven Engineering", "paper_id": "WOS:000347368600002"}