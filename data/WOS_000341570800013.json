{"auto_keywords": [{"score": 0.004603525341738782, "phrase": "temporal_stochastic_automata"}, {"score": 0.00438161736774803, "phrase": "low_level_events"}, {"score": 0.003406713877432236, "phrase": "single_\"merged\"_graph"}, {"score": 0.0032277611129050234, "phrase": "c_subgraphs"}, {"score": 0.003058179790439378, "phrase": "compute_nodes"}, {"score": 0.0029236680654022664, "phrase": "parallel_activity_detection_algorithm"}, {"score": 0.0028715299874549245, "phrase": "different_compute_node"}, {"score": 0.0026841368358805433, "phrase": "parallel_activity-search_detection"}, {"score": 0.002387758958649797, "phrase": "large_numbers"}, {"score": 0.0023033100935570755, "phrase": "large_merged_graphs"}, {"score": 0.002192121223444286, "phrase": "pass"}, {"score": 0.0021049977753042253, "phrase": "second_and_merged_graphs"}], "paper_keywords": ["Activity detection", " temporal stochastic automata", " parallel computation"], "paper_abstract": "Given a set A of activities expressed via temporal stochastic automata, and a set O of observations (detections of low level events), we study the problem of identifying instances of activities from A in O. While past work has developed algorithms to solve this problem, in this paper, we develop methods to significantly scale these algorithms. Our PASS architecture consists of three parts: (i) leveraging past work to represent all activities in A via a single \"merged\" graph, (ii) partitioning the graph into a set of C subgraphs, where (C + 1) is the number of compute nodes in a cluster, and (iii) developing a parallel activity detection algorithm that uses a different compute node in the cluster to intensively process each subgraph. We propose three possible partitioning methods and a parallel activity-search detection (PASS_Detect) algorithm that coordinates computations across nodes in the cluster. We report on experiments showing that our algorithms enable us to handle both large numbers of observations per second as well as large merged graphs. In particular, on a cluster with 9 compute nodes, PASS can reliably handle between 400K and 569K observations per second and merged graphs with as many as 50K vertices.", "paper_title": "PASS: A Parallel Activity-Search System", "paper_id": "WOS:000341570800013"}