{"auto_keywords": [{"score": 0.032646468497261105, "phrase": "stateful_information"}, {"score": 0.00481495049065317, "phrase": "performance-prediction_models"}, {"score": 0.004736434518535051, "phrase": "widespread_adoption"}, {"score": 0.004697655699119423, "phrase": "performance_prediction"}, {"score": 0.004564401713056939, "phrase": "essential_accuracy-influencing_aspects"}, {"score": 0.004416713079266374, "phrase": "system_behaviour"}, {"score": 0.004273782634394231, "phrase": "related_state"}, {"score": 0.0039362878637371574, "phrase": "component-based_software_engineering"}, {"score": 0.0038561471948364723, "phrase": "state-reflecting_attributes"}, {"score": 0.0036855132234738736, "phrase": "natural_ingredient"}, {"score": 0.0035515148917169173, "phrase": "stateful_services"}, {"score": 0.0035224030823976186, "phrase": "stateful_components"}, {"score": 0.0034935290662899488, "phrase": "stateful_systems"}, {"score": 0.003257432325797907, "phrase": "state-related_information"}, {"score": 0.003230723298995081, "phrase": "component-based_prediction_models"}, {"score": 0.0031132086055691214, "phrase": "different_types"}, {"score": 0.0030623570435946977, "phrase": "component-based_software_architecture"}, {"score": 0.0029147175927233546, "phrase": "prediction_models"}, {"score": 0.002878930338561009, "phrase": "effective_abstraction"}, {"score": 0.0028553159147435424, "phrase": "state_modelling"}, {"score": 0.0027176309244222, "phrase": "component-based_software_systems"}, {"score": 0.002673223453963085, "phrase": "performance_impact"}, {"score": 0.0026403934420630155, "phrase": "individual_state_categories"}, {"score": 0.0025130460190930554, "phrase": "increased_model_size"}, {"score": 0.0024116163689723354, "phrase": "heuristics-guiding_software_engineers"}, {"score": 0.0023430556582539805, "phrase": "practical_effect"}, {"score": 0.002295277579105177, "phrase": "software_performance"}, {"score": 0.0022484715639779153, "phrase": "real-world_case_study"}, {"score": 0.002202617924488607, "phrase": "observed_deviation"}, {"score": 0.0021049977753042253, "phrase": "stateful_dependencies"}], "paper_keywords": ["Stateful components", " Performance prediction", " Prediction accuracy"], "paper_abstract": "The accuracy of performance-prediction models is crucial for widespread adoption of performance prediction in industry. One of the essential accuracy-influencing aspects of software systems is the dependence of system behaviour on a configuration, context or history related state of the system, typically reflected with a (persistent) system attribute. Even in the domain of component-based software engineering, the presence of state-reflecting attributes (the so-called internal states) is a natural ingredient of the systems, implying the existence of stateful services, stateful components and stateful systems as such. Currently, there is no consensus on the definition or method to include state-related information in component-based prediction models. Besides the task to identify and localise different types of stateful information across component-based software architecture, the issue is to balance the expressiveness and complexity of prediction models via an effective abstraction of state modelling. In this paper, we identify and classify stateful information in component-based software systems, study the performance impact of the individual state categories, and discuss the costs of their modelling in terms of the increased model size. The observations are formulated into a set of heuristics-guiding software engineers in state modelling. Finally, practical effect of state modelling on software performance is evaluated on a real-world case study, the SPECjms2007 Benchmark. The observed deviation of measurements and predictions was significantly decreased by more precise models of stateful dependencies.", "paper_title": "Stateful component-based performance models", "paper_id": "WOS:000342493300007"}