{"auto_keywords": [{"score": 0.04966008989090483, "phrase": "esterel"}, {"score": 0.00959736400508138, "phrase": "logical_behavioral_semantics"}, {"score": 0.007778588739713354, "phrase": "incorrect_programs"}, {"score": 0.00481495049065317, "phrase": "pure_esterel"}, {"score": 0.004710306419574744, "phrase": "synchronous_design_language"}, {"score": 0.0046079260641779755, "phrase": "reactive_systems"}, {"score": 0.004294962474996283, "phrase": "simple_and_compact_formalization"}, {"score": 0.00416478405812793, "phrase": "sos_rules"}, {"score": 0.0040385352882334235, "phrase": "deterministic_deadlock-free_executions"}, {"score": 0.00376409764683147, "phrase": "nondeterministic_programs"}, {"score": 0.0033572130837348623, "phrase": "constructive_semantics"}, {"score": 0.003007389443770562, "phrase": "new_deterministic_semantics"}, {"score": 0.002693919110230191, "phrase": "input_sequence"}, {"score": 0.0022687189700002254, "phrase": "incorrect_behavior"}, {"score": 0.0022095328812245852, "phrase": "new_semantics"}, {"score": 0.0021613897794439227, "phrase": "explicit_errors"}, {"score": 0.0021236300589450143, "phrase": "better_framework"}, {"score": 0.0021049977753042253, "phrase": "formal_and_automated_reasoning"}], "paper_keywords": ["languages", " theory", " synchronous languages", " structural operational semantics"], "paper_abstract": "Esterel is a synchronous design language for the specification of reactive systems. There exist two main semantics for Esterel. On the one hand, the logical behavioral semantics provides a simple and compact formalization of the behavior of programs using SOS rules. But it does not ensure deterministic deadlock-free executions, as it may define zero, one, or many possible behaviors for a given program and input sequence. Since nondeterministic programs have to be rejected by compilers, this means that it defines behaviors for incorrect programs, which is awkward. On the other hand, the constructive semantics is deterministic (amongst other properties) but at the expense of a much more complex formalism. In this work, we build and thoroughly analyze a new deterministic semantics for Esterel that retains the simplicity of the logical behavioral semantics from which it derives. It defines, at most, one behavior per program and input sequence. We further extend this semantics with the ability to deal with errors so that incorrect programs are no longer (negatively) characterized by a lack of behavior, but (positively) by the existence of an incorrect behavior. In our view, this new semantics, with or without explicit errors, provides a better framework for formal and automated reasoning about Esterel programs.", "paper_title": "A deterministic logical semantics for pure esterel", "paper_id": "WOS:000246013700002"}