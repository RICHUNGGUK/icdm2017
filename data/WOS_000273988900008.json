{"auto_keywords": [{"score": 0.04015076015860894, "phrase": "conallen_notation"}, {"score": 0.00481495049065317, "phrase": "uml_stereotypes"}, {"score": 0.00447937340641839, "phrase": "domain-specific_applications"}, {"score": 0.004320421465896323, "phrase": "conallen"}, {"score": 0.004243064277617193, "phrase": "uml_web_application_extension"}, {"score": 0.004074016501033133, "phrase": "model_web_applications"}, {"score": 0.0037898820206470085, "phrase": "comprehension_and_maintenance_activities"}, {"score": 0.0036224139706218916, "phrase": "developers_ability"}, {"score": 0.0033393377529146893, "phrase": "different_locations"}, {"score": 0.00326469463991041, "phrase": "different_experience"}, {"score": 0.0032061793819537633, "phrase": "undergraduate_students"}, {"score": 0.0031773149810690494, "phrase": "graduate_students"}, {"score": 0.003134503353065008, "phrase": "research_associates"}, {"score": 0.0030922667860233603, "phrase": "different_ability_levels"}, {"score": 0.002942196368747418, "phrase": "comprehension_tasks"}, {"score": 0.0028764048059439205, "phrase": "source_code"}, {"score": 0.002824829396721492, "phrase": "standard_uml_diagrams"}, {"score": 0.002522738549524317, "phrase": "significant_benefit"}, {"score": 0.002455168454109375, "phrase": "stereotyped_diagrams"}, {"score": 0.0023253967212081626, "phrase": "low_skill"}, {"score": 0.0022836785412390544, "phrase": "highly_skilled_or_experienced_subjects"}, {"score": 0.0021925226977381244, "phrase": "low_experience"}, {"score": 0.0021531831652035482, "phrase": "significant_performance_improvement"}, {"score": 0.0021241414408077895, "phrase": "stereotyped_uml_diagrams"}, {"score": 0.0021049977753042253, "phrase": "web_applications"}], "paper_keywords": ["Documentation", " maintenance", " and enhancement", " software engineering", " software/software engineering"], "paper_abstract": "In recent years, several design notations have been proposed to model domain-specific applications or reference architectures. In particular, Conallen has proposed the UML Web Application Extension (WAE): a UML extension to model Web applications. The aim of our empirical investigation is to test whether the usage of the Conallen notation supports comprehension and maintenance activities with significant benefits, and whether such benefits depend on developers ability and experience. This paper reports and discusses the results of a series of four experiments performed in different locations and with subjects possessing different experience-namely, undergraduate students, graduate students, and research associates-and different ability levels. The experiments aim at comparing performances of subjects in comprehension tasks where they have the source code complemented either by standard UML diagrams or by diagrams stereotyped using the Conallen notation. Results indicate that, although, in general, it is not possible to observe any significant benefit associated with the usage of stereotyped diagrams, the availability of stereotypes reduces the gap between subjects with low skill or experience and highly skilled or experienced subjects. Results suggest that organizations employing developers with low experience can achieve a significant performance improvement by adopting stereotyped UML diagrams for Web applications.", "paper_title": "How Developers' Experience and Ability Influence Web Application Comprehension Tasks Supported by UML Stereotypes: A Series of Four Experiments", "paper_id": "WOS:000273988900008"}