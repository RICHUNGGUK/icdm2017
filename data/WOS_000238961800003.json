{"auto_keywords": [{"score": 0.0393178629096155, "phrase": "data_items"}, {"score": 0.01435069590616762, "phrase": "storage_system"}, {"score": 0.00481495049065317, "phrase": "non-uniform_size_data_placement"}, {"score": 0.004722524105267129, "phrase": "optimization_problem"}, {"score": 0.00464310078297457, "phrase": "data_placement"}, {"score": 0.004609470535040028, "phrase": "multimedia_storage_system"}, {"score": 0.004359567288569359, "phrase": "n_disks"}, {"score": 0.0041231564685814395, "phrase": "u-m"}, {"score": 0.004093277024497126, "phrase": "u-i"}, {"score": 0.004014647489992856, "phrase": "ith_data_item"}, {"score": 0.00395666443059038, "phrase": "size_si"}, {"score": 0.003760215034065266, "phrase": "maximum_total_size"}, {"score": 0.0035821630976089792, "phrase": "maximum_number"}, {"score": 0.003322643910850421, "phrase": "total_number"}, {"score": 0.0032587696053727523, "phrase": "capacity_constraints"}, {"score": 0.0031961192780296218, "phrase": "data_placement_problem"}, {"score": 0.003180645202122767, "phrase": "homogeneous_storage_systems"}, {"score": 0.0030818681190193883, "phrase": "storage_capacity"}, {"score": 0.0030520948971800212, "phrase": "load_capacity"}, {"score": 0.0030373159935141096, "phrase": "l._previous_work"}, {"score": 0.0029644848381248437, "phrase": "unit_size"}, {"score": 0.002831445957526349, "phrase": "np"}, {"score": 0.0027769755261847036, "phrase": "si"}, {"score": 0.0026972377685920168, "phrase": "delta"}, {"score": 0.0026706414939013604, "phrase": "constant_delta"}, {"score": 0.0026384167183586015, "phrase": "polynomial_time_approximation_scheme"}, {"score": 0.0025317256900559628, "phrase": "constant_k"}, {"score": 0.0023254275836200426, "phrase": "tight_bounds"}, {"score": 0.002135903717944924, "phrase": "input_distribution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "We study an optimization problem that arises in the context of data placement in a multimedia storage system. We are given a collection of M multimedia objects (data items) that need to be assigned to a storage system consisting of N disks d(1), d(2),..., d(N). We are also given sets U-1, U-2,..., U-M such that U-i is the set of clients seeking the ith data item. Data item i has size si. Each disk d(j) is characterized by two parameters, namely, its storage capacity C-j which indicates the maximum total size of data items that may be assigned to it, and a load capacity L-j which indicates the maximum number of clients that it can serve. The goal is to find a placement of data items to disks and an assignment of clients to disks so as to maximize the total number of clients served, subject to the capacity constraints of the storage system. We study this data placement problem for homogeneous storage systems where all the disks are identical. We assume that all disks have a storage capacity of and a load capacity of L. Previous work on this problem has assumed that all data items have unit size, in other words s(i) = 1 for all i. Even for this case, the problem is NP-hard. For the case where Si is an element of {1, . . . , Delta} for some constant Delta, we develop a polynomial time approximation scheme (PTAS). This result is obtained by developing two algorithms, one that works for constant k and one that works for arbitrary k. The algorithm for arbitrary k guarantees that a solution where at least ((k - Delta)/(k + Delta)) (1 - 1/(1 + root k/(2 Delta))(2))- fraction of all clients are assigned to a disk (under certain assumptions). In addition we develop an algorithm for which we can prove tight bounds when s(i) is an element of {1, 2}. In fact, we can show that a (1 - 1/(1 + root L[k/2])(2))-fraction of all clients can be assigned (under certain natural assumptions), regardless of the input distribution. (c) 2004 Elsevier Inc. All tights reserved.", "paper_title": "Algorithms for non-uniform size data placement on parallel disks", "paper_id": "WOS:000238961800003"}