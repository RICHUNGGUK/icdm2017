{"auto_keywords": [{"score": 0.044107407862903625, "phrase": "airavata"}, {"score": 0.0048149557349535885, "phrase": "apache"}, {"score": 0.004622450915803531, "phrase": "science_gateway_framework"}, {"score": 0.00437021209960886, "phrase": "apache_airavata_software_system"}, {"score": 0.004152818376630929, "phrase": "application_and_workflow_executions"}, {"score": 0.0040481944502103505, "phrase": "backend_resources"}, {"score": 0.003807684498435389, "phrase": "airavata's_design_goal"}, {"score": 0.0037307208089736835, "phrase": "component_abstractions"}, {"score": 0.0036928221419965253, "phrase": "major_tasks"}, {"score": 0.0036181717017041387, "phrase": "gateway_application_management"}, {"score": 0.003403122817578447, "phrase": "component_programming_interfaces"}, {"score": 0.0033173234105492895, "phrase": "gateway_developers"}, {"score": 0.0032668821950788533, "phrase": "full_advantage"}, {"score": 0.0032336801561165113, "phrase": "airavata's_capabilities"}, {"score": 0.0032008144731234265, "phrase": "airavata_developers"}, {"score": 0.0031042018721479385, "phrase": "middleware_research"}, {"score": 0.0030414140732789186, "phrase": "airavata's_implementations"}, {"score": 0.0027041907335656782, "phrase": "science_gateways"}, {"score": 0.0025433263646920364, "phrase": "usage_vignettes"}, {"score": 0.0024918548761791435, "phrase": "apache_software_foundation_project"}, {"score": 0.002466510117718297, "phrase": "airavata's_open_community_governance_model"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["science gateways", " distributed computing infrastructure", " cyberinfrastructure"], "paper_abstract": "This paper provides an overview and roadmap of the Apache Airavata software system for science gateways. Gateways use Airavata to manage application and workflow executions on a range of backend resources (grids, computing clouds, and local clusters). Airavata's design goal is to provide component abstractions for major tasks required to provide gateway application management. Components are not directly accessed but are instead exposed through component programming interfaces. This design allows gateway developers to take full advantage of Airavata's capabilities and Airavata developers (including those interested in middleware research) to modify Airavata's implementations and behavior. This is particularly important as Airavata evolves to become a scalable, elastic platform as a service' for science gateways. We illustrate the capabilities of Airavata through the discussion of usage vignettes. As an Apache Software Foundation project, Airavata's open community governance model is as important as its software base. We discuss how this works within Airavata and how it may be applicable to other distributed computing infrastructure and cyberinfrastructure efforts. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Apache Airavata: design and directions of a science gateway framework", "paper_id": "WOS:000363470800017"}