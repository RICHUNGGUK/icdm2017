{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "space-saving_approximation_algorithm"}, {"score": 0.004741167616693272, "phrase": "grammar-based_compression"}, {"score": 0.004632597963417253, "phrase": "space-efficient_approximation_algorithm"}, {"score": 0.004526503177267299, "phrase": "grammar-based_compression_problem"}, {"score": 0.004190019394361629, "phrase": "smallest_context-free_grammar"}, {"score": 0.003878451139312637, "phrase": "input_length"}, {"score": 0.003246672441842787, "phrase": "optimum_compression"}, {"score": 0.0030994630902300133, "phrase": "maximum_number"}, {"score": 0.003005039427642664, "phrase": "log_log"}, {"score": 0.00257424957319189, "phrase": "currently_best_approximation_ratio"}, {"score": 0.0021049977753042253, "phrase": "k-letter_alphabet"}], "paper_keywords": ["grammar-based compression", " approximation algorithm", " minimum CFG problem"], "paper_abstract": "A space-efficient approximation algorithm for the grammar-based compression problem, which requests for a given string to find a smallest context-free grammar deriving the string, is presented. For the input length it and an optimum CFG size g, the algorithm consumes only O(g log g) space and O(n log*n) time to achieve O((log*n) log n) approximation ratio to the optimum compression, where log*n is the maximum number of logarithms satisfying log log...log n > 1. This ratio is thus regarded to almost O(log n), which is the currently best approximation ratio. While g depends on the string, it is known that g = Omega(log n) and g = O(n/log(k)n) for strings from k-letter alphabet [12].", "paper_title": "A Space-Saving Approximation Algorithm for Grammar-Based Compression", "paper_id": "WOS:000265700800008"}