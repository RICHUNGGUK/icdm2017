{"auto_keywords": [{"score": 0.048778468893892986, "phrase": "pca"}, {"score": 0.010611873228285324, "phrase": "epsilon-insensitive_robust_loss_function"}, {"score": 0.008967926979126324, "phrase": "principal_components"}, {"score": 0.00816285907771895, "phrase": "generalized_form"}, {"score": 0.008099098516362506, "phrase": "kernel_component_analysis"}, {"score": 0.004556901872357751, "phrase": "feature_extraction"}, {"score": 0.004503422625191897, "phrase": "high-dimensional_feature_space"}, {"score": 0.004363846362238565, "phrase": "original_input_space"}, {"score": 0.004312622975366672, "phrase": "kernel_pca_formulation"}, {"score": 0.004195418010131832, "phrase": "kernel_matrix"}, {"score": 0.004129873531628877, "phrase": "large_eigenvalues"}, {"score": 0.0040176151419992956, "phrase": "feature_space"}, {"score": 0.003939296259436904, "phrase": "least_squares"}, {"score": 0.003908396188878932, "phrase": "vector_machine"}, {"score": 0.0038777379409703624, "phrase": "ls-svm"}, {"score": 0.003584025547693836, "phrase": "general_underlying_loss_function"}, {"score": 0.0035141291835319682, "phrase": "classical_kernel_pca"}, {"score": 0.003472845095323694, "phrase": "underlying_loss_function"}, {"score": 0.0032223742018434856, "phrase": "robust_statistics"}, {"score": 0.00290855128461017, "phrase": "desired_one"}, {"score": 0.0027307746993761035, "phrase": "dense_expansions"}, {"score": 0.002688050388891007, "phrase": "kernel_functions"}, {"score": 0.002455009746748708, "phrase": "first_method"}, {"score": 0.002407078478216306, "phrase": "nonlinear_equations"}, {"score": 0.002323142666222693, "phrase": "second_method"}, {"score": 0.0022958180852458215, "phrase": "simplified_iterative_weighting_procedure"}, {"score": 0.002224510044064184, "phrase": "generalized_eigenvalue_problems"}, {"score": 0.0021896891011033105, "phrase": "toy_and_real-life_data"}, {"score": 0.0021049977753042253, "phrase": "sparse_representation"}], "paper_keywords": ["epsilon-insensitive loss function", " kernel principal component analysis (PCA)", " least squares support vector machines (LS-SVM)", " loss function", " robustness", " sparseness"], "paper_abstract": "Kernel principal component analysis (PCA) is a technique to perform feature extraction in a high-dimensional feature space, which is nonlinearly related to the original input space. The kernel PCA formulation corresponds to an eigendecomposition of the kernel matrix: eigenvectors with large eigenvalues correspond to the principal components in the feature space. Starting from the least squares support vector machine (LS-SVM) formulation to kernel PCA, we extend it to a generalized form of kernel component analysis (KCA) with a general underlying loss function made explicit. For classical kernel PCA, the underlying loss function is L-2. In this generalized form, one can plug in also other loss functions. In the context of robust statistics, it is known that the L-2 loss function is not robust because its influence function is not bounded. Therefore, outliers can skew the solution from the desired one. Another issue with kernel PCA is the lack of sparseness: the principal components are dense expansions in terms of kernel functions. In this paper, we introduce robustness and sparseness into kernel component analysis by using an epsilon-insensitive robust loss function. We propose two different algorithms. The first method solves a set of nonlinear equations with kernel PCA as starting points. The second method uses a simplified iterative weighting procedure that leads to solving a sequence of generalized eigenvalue problems. Simulations with toy and real-life data show improvements in terms of robustness together with a sparse representation.", "paper_title": "Kernel component analysis using an epsilon-insensitive robust loss function", "paper_id": "WOS:000259499900007"}