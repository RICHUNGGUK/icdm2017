{"auto_keywords": [{"score": 0.04141596127396747, "phrase": "defect_backlog"}, {"score": 0.00828294006288282, "phrase": "ericsson"}, {"score": 0.00481495049065317, "phrase": "forecasting_defect_backlog"}, {"score": 0.00478778190213169, "phrase": "large_streamline_software_development_projects"}, {"score": 0.004562923889976588, "phrase": "large_software_projects"}, {"score": 0.00447341965028879, "phrase": "complex_statistical_methods"}, {"score": 0.004360906420260988, "phrase": "daily_basis"}, {"score": 0.004251210982670317, "phrase": "simpler_and_more_robust_way"}, {"score": 0.004167795561137289, "phrase": "software_engineering_industry"}, {"score": 0.0040171817997972335, "phrase": "simple_and_reliable_method"}, {"score": 0.0037852512654732223, "phrase": "action_research_project"}, {"score": 0.0036380913496453994, "phrase": "multivariate_linear_regression"}, {"score": 0.003617539106699534, "phrase": "expert_estimations"}, {"score": 0.003597102547969587, "phrase": "analogy-based_predictions"}, {"score": 0.0034086028336466688, "phrase": "new_method"}, {"score": 0.0033797531990222124, "phrase": "life_project"}, {"score": 0.0027873152241994544, "phrase": "current_level"}, {"score": 0.0027248086877091756, "phrase": "best_prediction_method"}, {"score": 0.0026864540069792275, "phrase": "relative_error"}, {"score": 0.0026262033625248445, "phrase": "future_defect_backlog"}, {"score": 0.0025026085288350004, "phrase": "main_aspects"}, {"score": 0.0023780623297398576, "phrase": "simple_moving_average"}, {"score": 0.0023579143175099324, "phrase": "sufficiently-good_accuracy"}, {"score": 0.002184076393632467, "phrase": "absolute_number"}], "paper_keywords": ["Quality metrics", " Defect prediction", " Early warning", " LEAN software development", " Streamline development"], "paper_abstract": "Context: Predicting a number of defects to be resolved in large software projects (defect backlog) usually requires complex statistical methods and thus is hard to use on a daily basis by practitioners in industry. Making predictions in simpler and more robust way is often required by practitioners in software engineering industry. Objective: The objective of this paper is to present a simple and reliable method for forecasting the level of defect backlog in large, lean-based software development projects. Method: The new method was created as part of an action research project conducted at Ericsson. In order to create the method we have evaluated multivariate linear regression, expert estimations and analogy-based predictions w.r.t. their accuracy and ease-of-use in industry. We have also evaluated the new method in a life project at one of the units of Ericsson during a period of 21 weeks (from the beginning of the project until the release of the product). Results: The method for forecasting the level of defect backlog uses an indicator of the trend (an arrow) as a basis to forecast the level of defect backlog. Forecasts are based on moving average which combined with the current level of defect backlog was found to be the best prediction method (Mean Magnitude of Relative Error of 16%) for the level of future defect backlog. Conclusion: We have found that ease-of-use and accuracy are the main aspects for practitioners who use predictions in their work. In this paper it is concluded that using the simple moving average provides a sufficiently-good accuracy (much appreciated by practitioners involved in the study). We also conclude that using the indicator (forecasting the trend) instead of the absolute number of defects in the backlog increases the confidence in our method compared to our previous attempts (regression, analogy-based, and expert estimates). (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "A method for forecasting defect backlog in large streamline software development projects and its industrial evaluation", "paper_id": "WOS:000280895700005"}