{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "matlab_language"}, {"score": 0.004522080178250592, "phrase": "c_translation_system"}, {"score": 0.0038651944848734133, "phrase": "system's_architecture"}, {"score": 0.003554661425339528, "phrase": "translator's_operation"}, {"score": 0.003373334961160647, "phrase": "example_input_program"}, {"score": 0.003102195256794215, "phrase": "system_implements"}, {"score": 0.0029131986574478046, "phrase": "language's_built-in_primitives"}, {"score": 0.0026233771102489394, "phrase": "execution_time"}, {"score": 0.00256895975568914, "phrase": "memory_usage"}, {"score": 0.0024894376091589244, "phrase": "translated_sources"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["typeless array languages", " translator architecture", " type inference", " code generation"], "paper_abstract": "A whole-program MATLAB to C translation system is presented. The paper outlines the motivation for the problem, discusses the system's architecture, its features and limitations. The translator's operation is explained using an example input program. Details are given on how the system implements and specializes some of the language's built-in primitives. Finally, the paper reports measurements evaluating the execution time and memory usage of the translated sources, and the compilation time required for the translations. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "A translator system for the MATLAB language", "paper_id": "WOS:000245703800005"}