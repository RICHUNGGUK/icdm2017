{"auto_keywords": [{"score": 0.026153563917107464, "phrase": "kildall"}, {"score": 0.004513957235071457, "phrase": "formal_model"}, {"score": 0.004342430078306461, "phrase": "first_order_functional_language"}, {"score": 0.0040186038781533946, "phrase": "stack_machine"}, {"score": 0.003816197777388722, "phrase": "bytecode_verifier"}, {"score": 0.003577414339646767, "phrase": "static_verifications"}, {"score": 0.0027982016314450717, "phrase": "resource_bounds"}, {"score": 0.002555950807368337, "phrase": "general_data_flow_analyzer"}, {"score": 0.0023650305205893353, "phrase": "generic_algorithm"}, {"score": 0.0021049977753042253, "phrase": "coq_proof_assistant"}], "paper_keywords": [""], "paper_abstract": "We give a formal model for a first order functional language to be executed on a stack machine and for a bytecode verifier that performs two kinds of static verifications : a type analysis and a shape analysis, that are part of a system used to ensure resource bounds. Both are instances of a general data flow analyzer due to Kildall. The generic algorithm and both of its instances are certified with the Coq proof assistant.", "paper_title": "A uniform and certified approach for two static analyses", "paper_id": "WOS:000235656800008"}