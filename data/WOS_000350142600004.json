{"auto_keywords": [{"score": 0.042403964177784984, "phrase": "gpu"}, {"score": 0.02444960554825669, "phrase": "sb"}, {"score": 0.008653565189973334, "phrase": "intel"}, {"score": 0.008047246229179449, "phrase": "cell_code"}, {"score": 0.0056911617690346625, "phrase": "mic"}, {"score": 0.005516217256575042, "phrase": "single_thread"}, {"score": 0.00481495049065317, "phrase": "computational_performance"}, {"score": 0.004190563478825626, "phrase": "sandy_bridge"}, {"score": 0.003815369123984481, "phrase": "two-stream_instability"}, {"score": 0.0037236852537136547, "phrase": "computation_times"}, {"score": 0.0036468482216440233, "phrase": "compiler_options"}, {"score": 0.0035222812668916736, "phrase": "maximum_thread_number"}, {"score": 0.0033433365160336842, "phrase": "code_syntax"}, {"score": 0.0032971718158229736, "phrase": "cuda."}, {"score": 0.0028392545452904762, "phrase": "compute_times"}, {"score": 0.0026855586569013894, "phrase": "mic."}, {"score": 0.0024533019565858073, "phrase": "net_speedup"}, {"score": 0.002336655334451464, "phrase": "initial_attempt"}, {"score": 0.002264607102799332, "phrase": "mic_coprocessor"}, {"score": 0.00221781065048839, "phrase": "optimal_number"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["coprocessor", " many integrated cores", " particle-in-cell", " heterogeneous computing"], "paper_abstract": "We present initial comparison performance results for Intel many integrated core (MIC), Sandy Bridge (SB), and graphical processing unit (GPU). A 1D explicit electrostatic particle-in-cell code is used to simulate a two-stream instability in plasma. We compare the computation times for various number of cores/threads and compiler options. The parallelization is implemented via OpenMP with a maximum thread number of 128. Parallelization and vectorization on the GPU is achieved with modifying the code syntax for compatibility with CUDA. We assess the speedup due to various auto-vectorization and optimization level compiler options. Our results show that the MIC is several times slower than SB for a single thread, and it becomes faster than SB when the number of cores increases with vectorization switched on. The compute times for the GPU are consistently about six to seven times faster than the ones for MIC. Compared with SB, the GPU is about two times faster for a single thread and about an order of magnitude faster for 128 threads. The net speedup, however, for MIC and GPU are almost the same. An initial attempt to offload parts of the code to the MIC coprocessor shows that there is an optimal number of threads where the speedup reaches a maximum. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Initial results on computational performance of Intel many integrated core, sandy bridge, and graphical processing unit architectures: implementation of a 1D c++/OpenMP electrostatic particle-in-cell code", "paper_id": "WOS:000350142600004"}