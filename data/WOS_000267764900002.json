{"auto_keywords": [{"score": 0.03916921946728104, "phrase": "new_signals"}, {"score": 0.00481495049065317, "phrase": "efficient_automatic_resolution_of_encoding_conflicts_using_stg_unfoldings"}, {"score": 0.004676173016967478, "phrase": "asynchronous_circuits"}, {"score": 0.004608284537368354, "phrase": "signal_transition_graphs"}, {"score": 0.004378309349451268, "phrase": "state_encoding_conflicts"}, {"score": 0.004190305872545087, "phrase": "stg_specification"}, {"score": 0.003981106369547929, "phrase": "fully_automatic_technique"}, {"score": 0.0036731870109004993, "phrase": "concurrency_reduction"}, {"score": 0.0034642599795044445, "phrase": "conflict_cores"}, {"score": 0.003315374849824563, "phrase": "encoding_conflicts"}, {"score": 0.0031039212233596415, "phrase": "finite_and_complete_unfolding_prefixes"}, {"score": 0.0030143100083252516, "phrase": "sat_solver"}, {"score": 0.0028427556670131307, "phrase": "stg"}, {"score": 0.002565626044684815, "phrase": "concurrency_reductions"}, {"score": 0.0025098414374397308, "phrase": "experimental_results"}, {"score": 0.002473325513637559, "phrase": "significant_improvements"}, {"score": 0.002419542935774618, "phrase": "state_space"}, {"score": 0.002401875938287542, "phrase": "based_approach"}, {"score": 0.002298544073884724, "phrase": "memory_consumption"}, {"score": 0.0021049977753042253, "phrase": "resulting_circuits"}], "paper_keywords": ["Asynchronous circuits", " concurrency reduction", " encoding conflicts", " logic synthesis", " Petri net unfoldings", " signal transition graph (STG)"], "paper_abstract": "Synthesis of asynchronous circuits from signal transition graphs (STGs) involves resolution of state encoding conflicts by means of refining the STG specification. In this paper, a fully automatic technique for resolving such conflicts by means of insertion of new signals and concurrency reduction is proposed. It is based on conflict cores, i.e., sets of transitions causing encoding conflicts, which are represented at the level of finite and complete unfolding prefixes, and a SAT solver is used to find where in the STG the transitions of new signals should be inserted and to check the validity of concurrency reductions. The experimental results show significant improvements over the state space based approach in terms of runtime and memory consumption, as well as some improvements in the quality of the resulting circuits.", "paper_title": "Efficient Automatic Resolution of Encoding Conflicts Using STG Unfoldings", "paper_id": "WOS:000267764900002"}