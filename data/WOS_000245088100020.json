{"auto_keywords": [{"score": 0.05007126221988649, "phrase": "consumer-level_graphics_hardware"}, {"score": 0.03587800005427958, "phrase": "gpu"}, {"score": 0.004289419884432487, "phrase": "locality_nature"}, {"score": 0.004119313626110943, "phrase": "high-frequency_details"}, {"score": 0.003955926499405168, "phrase": "enormous_data_volume"}, {"score": 0.0036694287631595995, "phrase": "recent_advances"}, {"score": 0.00344321906220063, "phrase": "graphics_processing_unit"}, {"score": 0.0033644530302903513, "phrase": "based_graphics_accelerator"}, {"score": 0.003306559295382181, "phrase": "simd-based_parallel_processing_power"}, {"score": 0.0031937337757356526, "phrase": "simd_algorithm"}, {"score": 0.003120657021758196, "phrase": "convolution-based_dwt"}, {"score": 0.0029622717081190667, "phrase": "significant_performance_gain"}, {"score": 0.002911278281894321, "phrase": "normal_pc"}, {"score": 0.002877769867854964, "phrase": "extra_cost"}, {"score": 0.0027159094186967247, "phrase": "proposed_algorithm"}, {"score": 0.0026384167183586015, "phrase": "almost_identical_process"}, {"score": 0.002518989593177879, "phrase": "different_wavelet_kernels"}, {"score": 0.0024899850926034567, "phrase": "boundary_extension_schemes"}, {"score": 0.002377260665147444, "phrase": "input_parameters"}, {"score": 0.0022176487309947266, "phrase": "wavelet-based_geometric_design"}, {"score": 0.002141898874982106, "phrase": "texture-illuminance_decoupling"}], "paper_keywords": ["discrete wavelet transform", " graphics processing unit", " JPEG2000", " shader"], "paper_abstract": "Discrete wavelet transform (DWT) has been heavily studied and developed in various scientific and engineering fields. Its multiresolution and locality nature facilitates applications requiring progressiveness and capturing high-frequency details. However, when dealing with enormous data volume, its performance may drastically reduce. On the other hand, with the recent advances in consumer-level graphics hardware, personal computers nowadays usually equip with a graphics processing unit (GPU) based graphics accelerator which offers SIMD-based parallel processing power. This paper presents a SIMD algorithm that performs the convolution-based DWT completely on a GPU, which brings us significant performance gain on a normal PC without extra cost. Although the for ward and inverse wavelet transforms are mathematically different, the proposed algorithm unifies them to an almost identical process that can be efficiently implemented on GPU. Different wavelet kernels and boundary extension schemes can be easily incorporated by simply modifying input parameters. To demonstrate its applicability and performance, we apply it to wavelet-based geometric design, stylized image processing, texture-illuminance decoupling, and JPEG2000 image encoding.", "paper_title": "Discrete wavelet transform on consumer-level graphics hardware", "paper_id": "WOS:000245088100020"}