{"auto_keywords": [{"score": 0.0494096760831155, "phrase": "legacy_systems"}, {"score": 0.04660802533264657, "phrase": "business_knowledge"}, {"score": 0.015719716506582524, "phrase": "dynamic_analysis"}, {"score": 0.009549447094407871, "phrase": "source_code"}, {"score": 0.00822262187286733, "phrase": "business_processes"}, {"score": 0.004551199992546761, "phrase": "legacy_information_systems"}, {"score": 0.004261617028111862, "phrase": "embedded_knowledge"}, {"score": 0.004123781267600542, "phrase": "modernised_versions"}, {"score": 0.004009175817816061, "phrase": "current_business_processes"}, {"score": 0.003916098498242888, "phrase": "modernisation_efforts"}, {"score": 0.003807242767474929, "phrase": "different_software_artefacts"}, {"score": 0.003771631577951067, "phrase": "knowledge_sources"}, {"score": 0.0034171734618737436, "phrase": "respective_legacy_system"}, {"score": 0.0033377940531761985, "phrase": "reverse_engineering_techniques"}, {"score": 0.003154701855951328, "phrase": "system_execution"}, {"score": 0.003066945490483524, "phrase": "semi-automatic_technique"}, {"score": 0.002967634471075658, "phrase": "static_analysis"}, {"score": 0.0028715299874549245, "phrase": "event_log_models"}, {"score": 0.0028312983170567948, "phrase": "event_log"}, {"score": 0.002675914969626753, "phrase": "business_activities"}, {"score": 0.0026014425686078993, "phrase": "obtained_event_log"}, {"score": 0.002291089893848235, "phrase": "formal_case_study"}, {"score": 0.002248366278757655, "phrase": "real-life_legacy_information_system"}, {"score": 0.0021049977753042253, "phrase": "event_logs"}], "paper_keywords": [""], "paper_abstract": "Information systems age over time and become legacy information systems which often embed business knowledge that is not present in any other artefact. The embedded knowledge must be preserved to align the modernised versions of the legacy systems with the current business processes of an organisation. Modernisation efforts to preserve business knowledge typically consider different software artefacts as knowledge sources (e. g. code, databases, documentation etc.). Usually, the business knowledge needed to modernise a respective legacy system is statically recovered by reverse engineering techniques. Unfortunately, there is much knowledge that is only known during system execution. This study provides a semi-automatic technique based on dynamic analysis, combined with static analysis to instrument the source code for obtaining event log models. The event log represents a mapping between the pieces of source code executed and the business activities that they support. The obtained event log can then be used to mine the business processes embedded in legacy systems. In addition, the feasibility of the technique is validated by means of a formal case study, using a real-life legacy information system. The case study reports that the technique makes it possible to obtain event logs to effectively and efficiently discover business processes.", "paper_title": "Process mining through dynamic analysis for modernising legacy systems", "paper_id": "WOS:000291203900004"}