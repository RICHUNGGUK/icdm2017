{"auto_keywords": [{"score": 0.049450454172374286, "phrase": "yao's_lemma"}, {"score": 0.03320986733020532, "phrase": "deterministic_algorithm"}, {"score": 0.00481495049065317, "phrase": "weak_algorithms"}, {"score": 0.004783232571029632, "phrase": "explicit_versions"}, {"score": 0.004704844560325455, "phrase": "simple_averaging_argument"}, {"score": 0.00462773520532301, "phrase": "randomized_algorithm_a"}, {"score": 0.00424659225577246, "phrase": "coin_tosses"}, {"score": 0.0041357305373417455, "phrase": "non-uniform_deterministic_algorithm_b"}, {"score": 0.00409490456027741, "phrase": "roughly_the_same_complexity"}, {"score": 0.003820144626025562, "phrase": "uniformly_chosen_input"}, {"score": 0.0036836332308340923, "phrase": "\"the_easy_direction"}, {"score": 0.0035637545647574853, "phrase": "\"weak_derandomization"}, {"score": 0.003313530464737521, "phrase": "fixed_value_r"}, {"score": 0.003269953798005508, "phrase": "random_coins"}, {"score": 0.003216285378512588, "phrase": "\"hardwiring_r"}, {"score": 0.0030008471779792824, "phrase": "b."}, {"score": 0.0028930017387859804, "phrase": "uniform_versions"}, {"score": 0.0027166013332405453, "phrase": "randomized_algorithm_a."}, {"score": 0.0026543514413663893, "phrase": "randomized_algorithms"}, {"score": 0.0026194209399161184, "phrase": "randomized_communication_protocols"}, {"score": 0.002602127996667857, "phrase": "randomized_decision_trees"}, {"score": 0.0025509294021449254, "phrase": "previous_result"}, {"score": 0.00253408861050512, "phrase": "zimand"}, {"score": 0.0024353398669404334, "phrase": "polynomial-size_constant-depth_circuits"}, {"score": 0.0023638323773435945, "phrase": "goldreich"}, {"score": 0.002348207777371253, "phrase": "wigderson"}, {"score": 0.0022492129111567824, "phrase": "new_type"}], "paper_keywords": ["Derandomization", " randomness extractors", " pseudorandomness", " communication complexity", " circuit complexity"], "paper_abstract": "A simple averaging argument shows that given a randomized algorithm A and a function f such that for every input x, Pr[A(x) = f(x)] >= 1 - rho (where the probability is over the coin tosses of A), there exists a non-uniform deterministic algorithm B \"of roughly the same complexity\" such that Pr[B(x) = f(x)] >= 1 - rho (where the probability is over a uniformly chosen input x). This implication is often referred to as \"the easy direction of Yao's lemma\" and can be thought of as \"weak derandomization\" in the sense that B is deterministic but only succeeds on most inputs. The implication follows as there exists a fixed value r' for the random coins of A such that \"hardwiring r' into A\" produces a deterministic algorithm B. However, this argument does not give a way to explicitly construct B. In this paper, we consider the task of proving uniform versions of the implication above. That is, how to explicitly construct a deterministic algorithm B when given a randomized algorithm A. We prove such derandomization results for several classes of randomized algorithms. These include randomized communication protocols, randomized decision trees (here we improve a previous result by Zimand), randomized streaming algorithms, and randomized algorithms computed by polynomial-size constant-depth circuits. Our proof uses an approach suggested by Goldreich and Wigderson and \"extracts randomness from the input\". We introduce a new type of (seedless) extractors that extract randomness from distributions that are \"recognizable\" by the given randomized algorithm. We show that such extractors produce randomness that is in some sense not correlated with the input.", "paper_title": "Weak Derandomization of Weak Algorithms: Explicit Versions of Yao's Lemma", "paper_id": "WOS:000290276600004"}