{"auto_keywords": [{"score": 0.0395350540885966, "phrase": "line_speed"}, {"score": 0.030779429753174808, "phrase": "proposed_cache_schemes"}, {"score": 0.00481495049065317, "phrase": "miss_penalty"}, {"score": 0.004776853267973129, "phrase": "hbs_packet_classification_algorithm"}, {"score": 0.004609094651134046, "phrase": "notable_hierarchical_or_decision-tree-based_packet_classification_algorithms"}, {"score": 0.003978866233891427, "phrase": "available_processing_microengines"}, {"score": 0.003808619097554076, "phrase": "existing_packet_classification_algorithms"}, {"score": 0.0036167509502276294, "phrase": "search_speed"}, {"score": 0.003573859492987647, "phrase": "packet_classification_algorithms"}, {"score": 0.0033668870709083884, "phrase": "temporal_locality"}, {"score": 0.0033005860945173136, "phrase": "ixp_network_processors"}, {"score": 0.0032614317990293695, "phrase": "built-in_caches"}, {"score": 0.0032355864829403413, "phrase": "fast_path_processing"}, {"score": 0.003209965852500319, "phrase": "mes"}, {"score": 0.0031342307827666675, "phrase": "hint-based_cache_designs"}, {"score": 0.0030847461428168614, "phrase": "search_duration"}, {"score": 0.0030481444896915504, "phrase": "packet_classification_data_structure"}, {"score": 0.002737615043512257, "phrase": "hbs."}, {"score": 0.00268368435171995, "phrase": "hbs"}, {"score": 0.0025687008721685454, "phrase": "classification_speed"}, {"score": 0.00252812242767189, "phrase": "memory_accesses"}, {"score": 0.0024981087707313656, "phrase": "memory_requirement"}, {"score": 0.0022524395393089544, "phrase": "proposed_rule_cache"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Packet classification", " Cache", " Network processor"], "paper_abstract": "In this paper, we implement some notable hierarchical or decision-tree-based packet classification algorithms such as extended grid of tries (EGT), hierarchical intelligent cuttings (HiCuts), HyperCuts, and hierarchical binary search (HBS) on an IXP2400 network processor. By using all six of the available processing microengines (MEs), we find that none of these existing packet classification algorithms achieve the line speed of OC-48 provided by IXP2400. To improve the search speed of these packet classification algorithms, we propose the use of software cache designs to take advantage of the temporal locality of the packets because IXP network processors have no built-in caches for fast path processing in MEs. Furthermore, we propose hint-based cache designs to reduce the search duration of the packet classification data structure when cache misses occur. Both the header and prefix caches are studied. Although the proposed cache schemes are designed for all the dimension-by-dimension packet classification schemes, they are, nonetheless, the most suitable for HBS. Our performance simulations show that the HBS enhanced with the proposed cache schemes performs the best in terms of classification speed and number of memory accesses when the memory requirement is in the same range as those of HiCuts and HyperCuts. Based on the experiments with all the high and low locality packet traces, five MEs are sufficient for the proposed rule cache with hints to achieve the line speed of OC-48 provided by IXP2400. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Hint-based cache design for reducing miss penalty in HBS packet classification algorithm", "paper_id": "WOS:000325308600014"}