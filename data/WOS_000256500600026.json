{"auto_keywords": [{"score": 0.03914199969466458, "phrase": "binary_session_types"}, {"score": 0.00481495049065317, "phrase": "central_elements"}, {"score": 0.004755054742217193, "phrase": "software_development"}, {"score": 0.004637478829869904, "phrase": "potential_typed_foundation"}, {"score": 0.004579780586951551, "phrase": "structured_communication-centred_programming"}, {"score": 0.004274981117736524, "phrase": "wide_range"}, {"score": 0.00422177384286051, "phrase": "process_calculi"}, {"score": 0.004169226023596022, "phrase": "programming_languages"}, {"score": 0.003771631577951067, "phrase": "foregoing_theories"}, {"score": 0.00347657813672945, "phrase": "practical_communication-centred_applications"}, {"score": 0.003369322866499544, "phrase": "typed_calculus"}, {"score": 0.003327349929456035, "phrase": "mobile_processes"}, {"score": 0.00320453237792, "phrase": "new_notion"}, {"score": 0.003066945490483524, "phrase": "multiple_peers"}, {"score": 0.002953711377604328, "phrase": "global_scenario"}, {"score": 0.0029169007179202164, "phrase": "global_types"}, {"score": 0.0028625406368744995, "phrase": "friendly_type_syntax"}, {"score": 0.0027741761880779535, "phrase": "complex_causal_chains"}, {"score": 0.0027395968397212053, "phrase": "multiparty_asynchronous_interactions"}, {"score": 0.002688532127821979, "phrase": "global_type"}, {"score": 0.0025892330566358503, "phrase": "shared_agreement"}, {"score": 0.0025569530630374995, "phrase": "communication_peers"}, {"score": 0.00241658945942583, "phrase": "efficient_type"}, {"score": 0.0023419588513908783, "phrase": "individual_peers"}, {"score": 0.002298288831092204, "phrase": "fundamental_properties"}, {"score": 0.002255431275670053, "phrase": "session_type_discipline"}, {"score": 0.0022133711375320266, "phrase": "communication_safety"}, {"score": 0.002158505888557746, "phrase": "session_fidelity"}, {"score": 0.0021049977753042253, "phrase": "general_n-party_asynchronous_interactions"}], "paper_keywords": ["theory", " types", " design", " communications", " multiparty", " structured programming", " session types", " mobile processes", " causality", " choreography"], "paper_abstract": "Communication is becoming one of the central elements in software development. As a potential typed foundation for structured communication-centred programming, session types have been studied over the last decade for a wide range of process calculi and programming languages, focussing on binary (two-party) sessions. This work extends the foregoing theories of binary session types to multiparty, asynchronous sessions, which often arise in practical communication-centred applications. Presented as a typed calculus for mobile processes, the theory introduces a new notion of types in which interactions involving multiple peers are directly abstracted as a global scenario. Global types retain a friendly type syntax of binary session types while capturing complex causal chains of multiparty asynchronous interactions. A global type plays the role of a shared agreement among communication peers, and is used as a basis of efficient type checking through its projection onto individual peers. The fundamental properties of the session type discipline such as communication safety, progress and session fidelity are established for general n-party asynchronous interactions.", "paper_title": "Multiparty asynchronous session types", "paper_id": "WOS:000256500600026"}