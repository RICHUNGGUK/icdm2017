{"auto_keywords": [{"score": 0.045890772216300044, "phrase": "mi"}, {"score": 0.01061217879605614, "phrase": "graphics_processing_units"}, {"score": 0.009516588487822797, "phrase": "normalization_procedure"}, {"score": 0.006889878727929208, "phrase": "mi_normalization"}, {"score": 0.00474946741204285, "phrase": "molecular_coevolution"}, {"score": 0.004642292792558686, "phrase": "massively_parallel_implementation"}, {"score": 0.004496280772084575, "phrase": "biomolecular_sequence_alignments"}, {"score": 0.004435112270935294, "phrase": "mutual_information"}, {"score": 0.004276016541197123, "phrase": "neutral_evolution"}, {"score": 0.004141476915000558, "phrase": "two-point_and_three-point_correlations"}, {"score": 0.003956558420993431, "phrase": "high_computational_demand"}, {"score": 0.003711409222544974, "phrase": "nvidia's_cuda_framework"}, {"score": 0.0035294580355761506, "phrase": "three-point_cliques"}, {"score": 0.0034813964296826973, "phrase": "amino_acids"}, {"score": 0.003418327319110734, "phrase": "large_sampling_numbers"}, {"score": 0.0032358709481309913, "phrase": "gpu_computation"}, {"score": 0.003177235604998673, "phrase": "enabling_technology"}, {"score": 0.0030491497463386924, "phrase": "traditional_computational_methods"}, {"score": 0.002926212333939311, "phrase": "sequence_analysis"}, {"score": 0.0028731719610706214, "phrase": "statistically_sufficient_sample"}, {"score": 0.0028340217672278975, "phrase": "acceptable_time"}, {"score": 0.0028082176224611542, "phrase": "affordable_commodity_hardware"}, {"score": 0.0025627194819793347, "phrase": "well-known_protein_calmodulin"}, {"score": 0.002527788827701828, "phrase": "variable_surface_glycoprotein"}, {"score": 0.0024706232839499546, "phrase": "trypanosoma_brucei"}, {"score": 0.0023927516438886445, "phrase": "evolutionary_pressure"}, {"score": 0.002327956449278255, "phrase": "striking_coevolutionary_patterns"}, {"score": 0.0023067494372458427, "phrase": "distinct_information"}, {"score": 0.002275299774554847, "phrase": "molecular_evolution"}, {"score": 0.0022136780933978612, "phrase": "previous_work"}, {"score": 0.0021735249249471614, "phrase": "non-efficient_mi_computations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["protein sequence analysis", " mutual information", " GPGPU"], "paper_abstract": "We present a massively parallel implementation of the computation of (co)evolutionary signals from biomolecular sequence alignments based on mutual information (MI) and a normalization procedure to neutral evolution. The MI is computed for two-point and three-point correlations within any multiple sequence alignment. We meet the high computational demand in the normalization procedure efficiently with an implementation on Graphics Processing Units (GPUs) using NVIDIA's CUDA framework. In particular, the normalization of the MI for three-point cliques' of amino acids or nucleotides requires large sampling numbers in the normalization, which we achieve by using GPUs. GPU computation serves as an enabling technology here insofar as MI normalization is also possible using traditional computational methods [1] or cluster computation, but only GPU computation makes MI normalization for sequence analysis feasible in a statistically sufficient sample and in acceptable time given affordable commodity hardware. We illustrate (i) the computational efficiency and (ii) the biological usefulness of two-point and three-point MI by applications to the well-known protein calmodulin and the variable surface glycoprotein (VSG) of Trypanosoma brucei, which are subject to involved evolutionary pressure. Here, we find striking coevolutionary patterns and distinct information on the molecular evolution of these molecules that question previous work that relied on non-efficient MI computations. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Using graphics processing units to investigate molecular coevolution", "paper_id": "WOS:000334330900005"}