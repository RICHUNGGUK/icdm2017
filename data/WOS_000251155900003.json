{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "local_immunity"}, {"score": 0.004566805735863274, "phrase": "mobile_virus"}, {"score": 0.004209679094023478, "phrase": "disinfected_areas"}, {"score": 0.004041686156098498, "phrase": "immunity_level"}, {"score": 0.00399260264462941, "phrase": "decontaminated_site"}, {"score": 0.0038332390893263844, "phrase": "antiviral_agent"}, {"score": 0.0036652492107503956, "phrase": "infected_neighbour"}, {"score": 0.0036207206487324506, "phrase": "network_decontamination_problem"}, {"score": 0.0035332741328861776, "phrase": "new_model"}, {"score": 0.0033646448121751574, "phrase": "decontaminated_vertex"}, {"score": 0.003310236836421397, "phrase": "cleaning_agent"}, {"score": 0.0029291801502381513, "phrase": "antiviral_agents"}, {"score": 0.002870066750788841, "phrase": "entire_network"}, {"score": 0.0028121429464519733, "phrase": "lower_and_upper_bounds"}, {"score": 0.002777949746964955, "phrase": "number_cleaners"}, {"score": 0.002634506575564286, "phrase": "vertex_degree"}, {"score": 0.002560352786969071, "phrase": "cubic_graphs"}, {"score": 0.002539550974361945, "phrase": "binary_trees"}, {"score": 0.0024580159789774516, "phrase": "tree_networks"}, {"score": 0.002398583143633567, "phrase": "established_bounds"}, {"score": 0.002350152413458658, "phrase": "upper-bound_proofs"}, {"score": 0.002274684393868218, "phrase": "decontamination_protocol"}, {"score": 0.00224701149477484, "phrase": "claimed_bound"}, {"score": 0.0021926693625590006, "phrase": "total_number"}, {"score": 0.0021049977753042253, "phrase": "tight_bounds"}], "paper_keywords": ["network decontamination", " mobile virus", " mobile agents", " majority-based rule", " toroidal meshes", " trees"], "paper_abstract": "We consider the problem of decontaminating a network infected by a mobile virus. The goal is to perform the task using as small a team of antiviral agents as possible, avoiding recontamination of disinfected areas. In all the existing literature, it is assumed that the immunity level of a decontaminated site is nil; that is, a decontaminated node, in absence of an antiviral agent on site, may be re-contaminated by any infected neighbour. The network decontamination problem is studied here under a new model of immunity to recontamination: we consider the case when a decontaminated vertex, after the cleaning agent has gone, will become recontaminated only if a majority of its neighbours are infected. We study the impact that the presence of local immunity has on the number of antiviral agents necessary to decontaminate the entire network. We establish both lower and upper bounds on the number cleaners in the case of (multidimensional) toroidal meshes, graphs of vertex degree at most three (e.g., cubic graphs, binary trees, etc.), and of tree networks. In all cases the established bounds are tight. All upper-bound proofs are constructive; i.e., we exhibit decontamination protocol achieving the claimed bound. We also analyze the total number of moves performed by the agents, and establish tight bounds in some cases.", "paper_title": "Network decontamination in presence of local immunity", "paper_id": "WOS:000251155900003"}