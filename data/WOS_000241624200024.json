{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "xml_updates"}, {"score": 0.00456020621016909, "phrase": "labeling_schemes"}, {"score": 0.004272164161788242, "phrase": "element_nodes"}, {"score": 0.003512308265830794, "phrase": "label_update_cost"}, {"score": 0.003362660648932244, "phrase": "present_labeling_schemes"}, {"score": 0.0030821633718368206, "phrase": "existing_nodes"}, {"score": 0.0027943943921568456, "phrase": "order-sensitive_element"}, {"score": 0.0025892330566358503, "phrase": "labeling_scheme"}, {"score": 0.0024519545383399773, "phrase": "order-sensitive_update"}, {"score": 0.0022472527731744974, "phrase": "experimental_results"}, {"score": 0.00217496508306238, "phrase": "proposed_scheme"}, {"score": 0.0021049977753042253, "phrase": "order-sensitive_queries"}], "paper_keywords": [""], "paper_abstract": "A number of labeling schemes have been designed to label element nodes such that the relationship between nodes can easily be determined by comparing their labels. However, the label update cost is high in present labeling schemes. These schemes must re-label existing nodes or re-calculate certain values when inserting an order-sensitive element. In this paper, a labeling scheme is proposed to support order-sensitive update, without re-labeling or re-calculation. In experimental results, the proposed scheme efficiently processes order-sensitive queries and updates.", "paper_title": "An efficient scheme to completely avoid re-labeling in XML updates", "paper_id": "WOS:000241624200024"}