{"auto_keywords": [{"score": 0.032811479610616194, "phrase": "penumbra_mask"}, {"score": 0.024846767440615158, "phrase": "penumbra_masks"}, {"score": 0.00481495049065317, "phrase": "physically-based_shadows"}, {"score": 0.004271843728776305, "phrase": "general_penumbra_detection_method"}, {"score": 0.004035107125458193, "phrase": "shared_projection_plane"}, {"score": 0.003944112858235306, "phrase": "light_source"}, {"score": 0.0038332390893263844, "phrase": "novel_area"}, {"score": 0.0037042817107563785, "phrase": "effective_and_conservative_area"}, {"score": 0.003419943984098415, "phrase": "planar_polygonal_light_source"}, {"score": 0.003267342521938321, "phrase": "point_sprite_rendering_technique"}, {"score": 0.0031754329320561317, "phrase": "silhouette_boundaries"}, {"score": 0.002999274091205852, "phrase": "modified_occlusion_map"}, {"score": 0.002706383680762465, "phrase": "important_advantage"}, {"score": 0.0026003455833291124, "phrase": "separate_lit_and_umbra_regions"}, {"score": 0.0024560114164181765, "phrase": "potential_penumbras"}, {"score": 0.002386869729952315, "phrase": "relative_simplicity"}, {"score": 0.002254357921422124, "phrase": "graphics_hardware"}, {"score": 0.002153653728048424, "phrase": "shadow_map"}, {"score": 0.0021049977753042253, "phrase": "significant_speedups"}], "paper_keywords": ["frame buffer algorithms", " rendering", " shadow algorithms"], "paper_abstract": "Computation of physically-based shadows can be significantly accelerated by limiting computations into regions where penumbras appear. In this paper, we present a general penumbra detection method that efficiently bounds regions where penumbras occur in a shared projection plane of an area light source. We introduce a novel area filling operator, which allows effective and conservative area masking with respect to all viewpoints, i.e., sampling points within a planar polygonal light source. The area filling operator uses a point sprite rendering technique on a set of silhouette boundaries to create a penumbra mask, which is essentially a modified occlusion map. We show how to efficiently test the geometry and screen-space pixels against the penumbra mask. An important advantage of our method is that we can separate lit and umbra regions, and thus drive various soft shadow algorithms to focus their computational efforts into potential penumbras. Due to the relative simplicity of computations, penumbra masks can be efficiently generated with graphics hardware. As an example, we accelerate shadow map supersampling to demonstrate significant speedups that utilizations of penumbra masks provide.", "paper_title": "Penumbra masks", "paper_id": "WOS:000236753500006"}