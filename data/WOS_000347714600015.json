{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "explicit_resource_management"}, {"score": 0.004722254884093624, "phrase": "channel-based_concurrency."}, {"score": 0.004542158659382197, "phrase": "pi-calculus_variant"}, {"score": 0.004411588377842043, "phrase": "costed_semantics"}, {"score": 0.003359647377874098, "phrase": "substructural_type_system_tracking_permission_transfer"}, {"score": 0.003107935254560724, "phrase": "behaviour_and_resource_usage_efficiency"}, {"score": 0.0029031614127920232, "phrase": "full_abstraction_results"}, {"score": 0.0027651847105654363, "phrase": "contextual_behavioural_preorder"}, {"score": 0.0026337482179592422, "phrase": "process_efficiency_wrt"}, {"score": 0.002320449502337321, "phrase": "respective_proof_techniques"}, {"score": 0.0022756672722130424, "phrase": "numerous_examples"}, {"score": 0.0022101055924375725, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "extensible_buffer"}], "paper_keywords": ["pi-calculus", " concurrency", " memory management", " coinductive reasoning"], "paper_abstract": "We define a pi-calculus variant with a costed semantics where channels are treated as resources that must explicitly be allocated before they are used and can be deallocated when no longer required. We use a substructural type system tracking permission transfer to construct coinductive proof techniques for comparing behaviour and resource usage efficiency of concurrent processes. We establish full abstraction results between our coinductive definitions and a contextual behavioural preorder describing a notion of process efficiency wrt. its management of resources. We also justify these definitions and respective proof techniques through numerous examples and a case study comparing two concurrent implementations of an extensible buffer.", "paper_title": "COMPOSITIONAL REASONING FOR EXPLICIT RESOURCE MANAGEMENT IN CHANNEL-BASED CONCURRENCY", "paper_id": "WOS:000347714600015"}