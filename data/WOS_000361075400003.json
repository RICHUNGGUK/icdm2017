{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_life_cycle"}, {"score": 0.012336809558939812, "phrase": "heterogeneous_systems"}, {"score": 0.00556558512116755, "phrase": "active_data"}, {"score": 0.004525629293824217, "phrase": "huge_and_ever_growing_data_sets"}, {"score": 0.004123781267600542, "phrase": "key_point"}, {"score": 0.003731673223879279, "phrase": "data-intensive_applications"}, {"score": 0.003680587852807675, "phrase": "large_variety"}, {"score": 0.003531474887552889, "phrase": "data_management"}, {"score": 0.0033190180867511605, "phrase": "data_management_applications"}, {"score": 0.0031845067058084583, "phrase": "formal_model"}, {"score": 0.0030554300179552415, "phrase": "programming_model"}, {"score": 0.0030344301563232944, "phrase": "code_execution"}, {"score": 0.0024842242921857705, "phrase": "mapreduce_programming_model"}, {"score": 0.002467140591777737, "phrase": "automated_data_provenance"}, {"score": 0.002302619021497886, "phrase": "distributed_and_dynamic_data_sets"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel programming model", " Distributed and heterogeneous systems", " Data life cycle"], "paper_abstract": "The Big Data challenge consists in managing, storing, analyzing and visualizing these huge and ever growing data sets to extract sense and knowledge. As the volume of data grows exponentially, the management of these data becomes more complex in proportion. A key point is to handle the complexity of the data life cycle, i.e. the various operations performed on data: transfer, archiving, replication, deletion, etc. Indeed, data-intensive applications span over a large variety of devices and e-infrastructures which implies that many systems are involved in data management and processing. We propose Active Data, a programming model to automate and improve the expressiveness of data management applications. We first define the concept of data life cycle and introduce a formal model that allows to expose data life cycle across heterogeneous systems and infrastructures. The Active Data programming model allows code execution at each stage of the data life cycle: routines provided by programmers are executed when a set of events (creation, replication, transfer, deletion) happen to any data. We implement and evaluate the model with four use cases: a storage cache to Amazon-S3, a cooperative sensor network, an incremental implementation of the MapReduce programming model and automated data provenance tracking across heterogeneous systems. Altogether, these scenarios illustrate the adequateness of the model to program applications that manage distributed and dynamic data sets. We also show that applications that do not leverage on data life cycle can still benefit from Active Data to improve their performances. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Active Data: A programming model to manage data life cycle across heterogeneous systems and infrastructures", "paper_id": "WOS:000361075400003"}