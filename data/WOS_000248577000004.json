{"auto_keywords": [{"score": 0.04904947763914552, "phrase": "logic_programs"}, {"score": 0.03939173305099784, "phrase": "strong_equivalence"}, {"score": 0.00481495049065317, "phrase": "recent_research"}, {"score": 0.004780183091824403, "phrase": "nonmonotonic_logic_programming"}, {"score": 0.004745665541429529, "phrase": "repeatedly_strong_equivalence"}, {"score": 0.004090274535243564, "phrase": "particular_case"}, {"score": 0.003958937342925219, "phrase": "program_optimization"}, {"score": 0.0038877961007492646, "phrase": "modular_logic_programming"}, {"score": 0.003681923235979914, "phrase": "actual_form"}, {"score": 0.0034995881411519925, "phrase": "uniform_equivalence"}, {"score": 0.0031614748814351823, "phrase": "deductive_databases"}, {"score": 0.002961519813246521, "phrase": "logic_program"}, {"score": 0.0028352726653271187, "phrase": "relativized_notions"}, {"score": 0.0027341763737751467, "phrase": "fixed_alphabet"}, {"score": 0.0026366753045215558, "phrase": "strong_and_uniform_equivalence"}, {"score": 0.0025704954243348276, "phrase": "disjunctive_logic_programs"}, {"score": 0.0024430651605100214, "phrase": "semantical_characterizations"}, {"score": 0.002407827985570249, "phrase": "computational_complexity"}, {"score": 0.0023219374444738723, "phrase": "set_semantics"}, {"score": 0.0022884433286785165, "phrase": "strong_negation"}, {"score": 0.0021049977753042253, "phrase": "input-based_problem"}], "paper_keywords": ["theory", " answer set semantics", " computational complexity", " program optimization", " stable models", " strong equivalence", " uniform equivalence"], "paper_abstract": "In recent research on nonmonotonic logic programming, repeatedly strong equivalence of logic programs P and Q has been considered, which holds if the programs P boolean OR R and Q boolean OR R have the same answer sets for any other program R. This property strengthens the equivalence of P and Q with respect to answer sets (which is the particular case for R = phi), and has its applications in program optimization, verification, and modular logic programming. In this article, we consider more liberal notions of strong equivalence, in which the actual form of R may be syntactically restricted. On the one hand, we consider uniform equivalence where R is a set of facts, rather than a set of rules. This notion, which is well-known in the area of deductive databases, is particularly useful for assessing whether programs P and Q are equivalent as components of a logic program which is modularly structured. On the other hand, we consider relativized notions of equivalence where R ranges over rules over a fixed alphabet, and thus generalize our results to relativized notions of strong and uniform equivalence. For all these notions, we consider disjunctive logic programs in the propositional (ground) case as well as some restricted classes, providing semantical characterizations and analyzing the computational complexity. Our results, which naturally extend to answer set semantics for programs with strong negation, complement the results on strong equivalence of logic programs and pave the way for optimizations in answer set solvers as a tool for input-based problem solving.", "paper_title": "Semantical characterizations and complexity of equivalences in answer set programming", "paper_id": "WOS:000248577000004"}