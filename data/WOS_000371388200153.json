{"auto_keywords": [{"score": 0.03550339016594857, "phrase": "high_availability"}, {"score": 0.008804281583571267, "phrase": "wasco"}, {"score": 0.00481495049065317, "phrase": "cloud_infrastructure"}, {"score": 0.004701556483912018, "phrase": "significant_energy"}, {"score": 0.004377077848734575, "phrase": "centralized_or_distributed_sleep_proxy_scheme_address"}, {"score": 0.004189863767755212, "phrase": "sleeping_machine"}, {"score": 0.003931697356115479, "phrase": "dedicated_per-subnet_servers"}, {"score": 0.0039005612858880115, "phrase": "additional_per-desktop_cpu_resource_utilization"}, {"score": 0.0036023971109946946, "phrase": "improved_scheme"}, {"score": 0.003313741359811683, "phrase": "low_cpu_resource"}, {"score": 0.0031845067058084583, "phrase": "specific_server"}, {"score": 0.0030724971661718983, "phrase": "heavy_computation"}, {"score": 0.0030119758165837625, "phrase": "stable_cloud"}, {"score": 0.0027485326424697095, "phrase": "remote_user"}, {"score": 0.0025892330566358503, "phrase": "selected_agents"}, {"score": 0.002478297391121455, "phrase": "-lan_packets"}, {"score": 0.002429451930463481, "phrase": "target_desktop"}, {"score": 0.002381566880282456, "phrase": "cga_algorithm"}, {"score": 0.0023626775529531486, "phrase": "running_agents"}, {"score": 0.002147333949483224, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "centralized_and_distributed_sleep_proxy_mechanisms"}], "paper_keywords": ["Wake-up", " cloud", " availability", " CPU", " energy"], "paper_abstract": "Enterprises can save a significant energy by letting idle desktops sleep and awake them only when needed. Though existing mechanisms based on centralized or distributed sleep proxy scheme address this issue with good availability, which means that a sleeping machine can always be awoken when needed, they still feature some drawbacks, such as dedicated per-subnet servers, additional per-desktop CPU resource utilization, and extra energy consumption. This seriously impedes their widespread deployment in enterprises. We, thus, propose an improved scheme called wake-up system based on cloud (WaSCO). WaSCO not only provides high availability but also consumes low CPU resource and energy, as it does not need any specific server to help achieve high availability. This system offloads heavy computation from desktops to a stable cloud, which is responsible for managing agents in various subnets by using our proposed algorithm called choosing-and-guaranteeing (CGA) algorithm. When a remote user wakes up a desktop with WaSCO, the cloud sends a message to the selected agents in the subnet, which then send wake-on-LAN packets to wake up the target desktop. In essence, CGA algorithm ensures running agents in each subnet, dynamically adjusts the number of agents, and selects a few desktops, rather than all the desktops, as agents. Experimental results show that WaSCO outperforms centralized and distributed sleep proxy mechanisms in terms of deployment cost, CPU resource cost, and energy consumption, while still maintains high availability.", "paper_title": "WaSCO: A Hybrid Enterprise Desktop Wake-Up System Based on Cloud Infrastructure", "paper_id": "WOS:000371388200153"}