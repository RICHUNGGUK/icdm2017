{"auto_keywords": [{"score": 0.047614595419912586, "phrase": "burrows-wheeler_transform"}, {"score": 0.01033998635297901, "phrase": "compressed_string"}, {"score": 0.00481495049065317, "phrase": "burrows-wheeler-based_compression"}, {"score": 0.004701914499141374, "phrase": "new_technique"}, {"score": 0.004677156273012756, "phrase": "worst-case_analysis"}, {"score": 0.004448337052767577, "phrase": "burrows"}, {"score": 0.004424954794998923, "phrase": "wheeler"}, {"score": 0.0043324080972201315, "phrase": "d.j._wheeler"}, {"score": 0.004275579846545026, "phrase": "lossless_data_compression_algorithm"}, {"score": 0.004208364878091134, "phrase": "digital_equipment_corporation"}, {"score": 0.004186194537946595, "phrase": "palo_alto"}, {"score": 0.004164187229032637, "phrase": "california"}, {"score": 0.0037763907319002194, "phrase": "move-to-front_algorithm"}, {"score": 0.003687645670891423, "phrase": "arithmetic_code"}, {"score": 0.003620060845528521, "phrase": "run-length_encoding"}, {"score": 0.0035163411466876356, "phrase": "worst-case_compression_ratio"}, {"score": 0.0033441163831837615, "phrase": "simple_analytical_techniques"}, {"score": 0.003121984338693259, "phrase": "mu_center"}, {"score": 0.0029768783231803072, "phrase": "kth_order"}, {"score": 0.0026219720371350942, "phrase": "integer_sequences"}, {"score": 0.0025875212917037403, "phrase": "independent_interest"}, {"score": 0.002493442431605113, "phrase": "compression_ratio"}, {"score": 0.002473730894309209, "phrase": "compression_algorithm"}, {"score": 0.002428339701880082, "phrase": "distance_coding"}, {"score": 0.0024027759145119603, "phrase": "worst-case_guarantees"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["text compression", " burrows-wheeler transform", " distance coding", " worst-case analysis"], "paper_abstract": "In this paper, we present a new technique for worst-case analysis of compression algorithms which are based on the Burrows-Wheeler Transform. We mainly deal with the algorithm proposed by Burrows and Wheeler in their first paper on the subject [M. Burrows, D.J. Wheeler, A block sorting lossless data compression algorithm, Technical Report 124, Digital Equipment Corporation, Palo Alto, California, 19941, called BW0. This algorithm consists of the following three essential steps: (1) Obtain the Burrows-Wheeler Transform of the text, (2) Convert the transform into a sequence of integers using the move-to-front algorithm, (3) Encode the integers using Arithmetic code or any order-0 encoding (possibly with run-length encoding). We achieve a strong upper bound on the worst-case compression ratio of this algorithm. This bound is significantly better than bounds known to date and is obtained via simple analytical techniques. Specifically, we show that for any input string s, and mu > 1, the length of the compressed string is bounded by mu center dot vertical bar s vertical bar H(k)(s)+log(zeta (mu)) center dot vertical bar s vertical bar + mu g(k) + O(log n) where H(k) is the kth order empirical entropy, g(k) is a constant depending only on k and on the size of the alphabet, and zeta(mu) = 1/1(mu) + 1/2(mu) + ... function. As part of the analysis, we prove a result on the compressibility of integer sequences, which is of independent interest. Finally, we apply our techniques to prove a worst-case bound on the compression ratio of a compression algorithm based on the Burrows-Wheeler Transform followed by distance coding, for which worst-case guarantees have never been given. We prove that the length of the compressed string is bounded by 1.7286 center dot vertical bar s vertical bar H(k)(s) + g(k) + O(log n). This bound is better than the bound we give for BW0. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "A simpler analysis of Burrows-Wheeler-based compression", "paper_id": "WOS:000251280800004"}