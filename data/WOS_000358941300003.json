{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "self-learning_genetic_algorithm"}, {"score": 0.004606479650820579, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0030464123943266673, "phrase": "fitness_function"}, {"score": 0.0028293966058473476, "phrase": "next_iteration"}, {"score": 0.0024405312482831646, "phrase": "proposed_algorithm"}, {"score": 0.0023346234464901978, "phrase": "holland_algorithm"}, {"score": 0.0021682027434117095, "phrase": "multiprocessor_job_scheduling"}, {"score": 0.0021049977753042253, "phrase": "subset_sum_problem"}], "paper_keywords": [""], "paper_abstract": "In this paper, a self-learning genetic algorithm for solving combinatorial optimization problems is considered. The self-learning consists in changing the values of the probabilities of crossing and mutation in accordance with changing the value of the fitness function after operations in the next iteration of the algorithm. The results of comparing the proposed algorithm with the Holland algorithm by the problems of multiprocessor job scheduling and subset sum problem are presented.", "paper_title": "Self-learning genetic algorithm", "paper_id": "WOS:000358941300003"}