{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "monadic_semantics"}, {"score": 0.00459165923324494, "phrase": "simple_computational_metalanguage"}, {"score": 0.0045052562941109734, "phrase": "general_recursive_types"}, {"score": 0.004420472010542188, "phrase": "multiple_notions"}, {"score": 0.004058180509184539, "phrase": "concrete_denotational_semantics"}, {"score": 0.002827474331638941, "phrase": "complete_programs"}, {"score": 0.0027218799769229596, "phrase": "prototypical_instance"}, {"score": 0.0024051153560799335, "phrase": "direct_and_a_continuation_semantics"}, {"score": 0.0022933216359142736, "phrase": "reynolds's_original_paper"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["monads", " computational metalanguage", " logical relations", " recursive types", " continuations"], "paper_abstract": "We present a Simple computational metalanguage with general recursive types and multiple notions of effects, through which a variety of concrete denotational semantics can be conveniently factored, by suitably interpreting the effects as monads. We then propose a methodology for relating two such interpretations of the metalanguage, with the aim of showing that the semantics they induce agree for complete programs. As a prototypical instance of such a relation, we use the framework to show agreement between a direct and a continuation semantics of the simple, untyped functional language from Reynolds's original paper on the subject. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "On the relations between monadic semantics", "paper_id": "WOS:000246750700004"}