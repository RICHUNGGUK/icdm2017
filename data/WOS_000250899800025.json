{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "principal_component"}, {"score": 0.0047310525657970615, "phrase": "vector_approximation_file"}, {"score": 0.00467600692918581, "phrase": "va"}, {"score": 0.004487989502479992, "phrase": "efficient_high-dimensional_indexing_method"}, {"score": 0.004358368398332723, "phrase": "large_database"}, {"score": 0.0041102032028337366, "phrase": "better_query_performance"}, {"score": 0.0038989120088094185, "phrase": "sequential_scan"}, {"score": 0.0038085117064624208, "phrase": "whole_vector_approximation_file"}, {"score": 0.0036126731589251906, "phrase": "new_indexing_structure"}, {"score": 0.0035496495489801667, "phrase": "vector_approximation_method"}, {"score": 0.0032697235411641695, "phrase": "principal_component_analysis"}, {"score": 0.0031751758963130135, "phrase": "multidimensional_points"}, {"score": 0.002941913249957503, "phrase": "approximate_vector"}, {"score": 0.0028234703730349894, "phrase": "k-nearest_neighbor_search"}, {"score": 0.0027417911324611917, "phrase": "searching_algorithm"}, {"score": 0.002646880721119838, "phrase": "improper_approximate_vectors"}, {"score": 0.0023674192513753996, "phrase": "cpu_cost"}, {"score": 0.002298902547676131, "phrase": "experiment_results"}, {"score": 0.002272053079580848, "phrase": "large_image_databases"}, {"score": 0.0022192891418394514, "phrase": "new_approach"}, {"score": 0.0021805201234139475, "phrase": "faster_search_speed"}], "paper_keywords": ["high-dimensional indexing", " vector approximation", " k-nearest neighbor search", " principal component sorting", " B+-tree"], "paper_abstract": "The vector approximation file (VA-file) approach is an efficient high-dimensional indexing method for image retrieval in large database. Some extensions of VA-file have been proposed towards better query performance. However, all of these methods applying sequential scan need read the whole vector approximation file. In this paper, we present a new indexing structure based on vector approximation method, in which only a small part of approximation file need be accessed. First, principal component analysis is used to map multidimensional points to a 1D line. Then a B+-tree is built to index the approximate vector according to principal component. When performing k-nearest neighbor search, the partial distortion searching algorithm is used to reject the improper approximate vectors. Only a small set of approximate vectors need to be sequentially scanned during the search, which can reduce the CPU cost and I/O cost dramatically. Experiment results on large image databases show that the new approach provides a faster search speed than the other VA-file approaches. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Efficient high-dimensional indexing by sorting principal component", "paper_id": "WOS:000250899800025"}