{"auto_keywords": [{"score": 0.04867585851491094, "phrase": "solvent-filled_cavities"}, {"score": 0.015720538468456238, "phrase": "python"}, {"score": 0.01516466106166695, "phrase": "stern"}, {"score": 0.011034732500233294, "phrase": "solvation_energy"}, {"score": 0.0045820747375409435, "phrase": "continuum_theory"}, {"score": 0.004536862734384202, "phrase": "biomolecular_electrostatics"}, {"score": 0.004477270137801732, "phrase": "implicit-solvent_model"}, {"score": 0.004418456827500267, "phrase": "poisson-boltzmann_equation"}, {"score": 0.004331675965350876, "phrase": "boundary_integral_representation"}, {"score": 0.004081385289516914, "phrase": "added_difficulty"}, {"score": 0.00404109360612109, "phrase": "multiple_boundary_surfaces"}, {"score": 0.0039748192550806815, "phrase": "meaningful_comparisons"}, {"score": 0.003948613642680196, "phrase": "volume-based_methods"}, {"score": 0.0036352070472201086, "phrase": "boundary-element_formulation"}, {"score": 0.003587415196933649, "phrase": "multiple_interacting_surfaces"}, {"score": 0.0033465923623290034, "phrase": "binding_energy"}, {"score": 0.0032807941194429235, "phrase": "well-known_apbs_finite-difference_code"}, {"score": 0.003030247482854539, "phrase": "single-surface_model"}, {"score": 0.0029608318458226755, "phrase": "binding_energies"}, {"score": 0.00290259605431505, "phrase": "multi-surface_model"}, {"score": 0.0027619548979328154, "phrase": "comparable_size"}, {"score": 0.0027166013332405453, "phrase": "apbs_solver"}, {"score": 0.002689746491842271, "phrase": "boundary-element_solver"}, {"score": 0.0026455755027979533, "phrase": "accuracy_requirements"}, {"score": 0.0025509294021449254, "phrase": "pygbe_code"}, {"score": 0.002387415795279721, "phrase": "apbs"}, {"score": 0.002363806685815014, "phrase": "six_intel_xeon_ceu_cores"}, {"score": 0.002348197638231576, "phrase": "pygbe"}, {"score": 0.0023326907270271153, "phrase": "algorithmic_acceleration"}, {"score": 0.0023096222276192194, "phrase": "boundary_element_method"}, {"score": 0.00224186055807751, "phrase": "gpus"}, {"score": 0.0022049428043454966, "phrase": "user-visible_code"}, {"score": 0.0021260268415459805, "phrase": "mit_license"}], "paper_keywords": ["Biomolecular electrostatics", " Implicit solvent", " Poisson-Boltzmann", " Boundary element method", " Treecode", " Python", " CUDA"], "paper_abstract": "The continuum theory applied to biomolecular electrostatics leads to an implicit-solvent model governed by the Poisson-Boltzmann equation. Solvers relying on a boundary integral representation typically do not consider features like solvent-filled cavities or ion-exclusion (Stern) layers, due to the added difficulty of treating multiple boundary surfaces. This has hindered meaningful comparisons with volume-based methods, and the effects on accuracy of including these features has remained unknown. This work presents a solver called PyGBe that uses a boundary-element formulation and can handle multiple interacting surfaces. It was used to study the effects of solvent-filled cavities and Stern layers on the accuracy of calculating solvation energy and binding energy of proteins, using the well-known APBS finite-difference code for comparison. The results suggest that if required accuracy for an application allows errors larger than about 2% in solvation energy, then the simpler, single-surface model can be used. When calculating binding energies, the need for a multi-surface model is problem-dependent, becoming more critical when ligand and receptor are of comparable size. Comparing with the APBS solver, the boundary-element solver is faster when the accuracy requirements are higher. The cross-over point for the PyGBe code is on the order of 1-2% error, when running on one GPU card (NVIDIA Tesla C2075), compared with APBS running on six Intel Xeon ceu cores. PyGBe achieves algorithmic acceleration of the boundary element method using a treecode, and hardware acceleration using GPUS via PyCuda from a user-visible code that is all Python. The code is open-source under MIT license. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A biomolecular electrostatics solver using Python, GPUs and boundary elements that can handle solvent-filled cavities and Stern layers", "paper_id": "WOS:000331919100003"}