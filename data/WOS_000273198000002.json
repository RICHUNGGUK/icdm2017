{"auto_keywords": [{"score": 0.03921793637367176, "phrase": "lyndon_words"}, {"score": 0.010408498652548063, "phrase": "daykin"}, {"score": 0.00481495049065317, "phrase": "unique_maximal_factorization_families"}, {"score": 0.004523865550323285, "phrase": "exactly_one_rotation"}, {"score": 0.004362226376603478, "phrase": "primitive_string"}, {"score": 0.004273416496828192, "phrase": "sigma"}, {"score": 0.003911010373894104, "phrase": "unique_maximal_factorization"}, {"score": 0.0038304902197108643, "phrase": "classic_circ-umff"}, {"score": 0.003561462980006681, "phrase": "duval"}, {"score": 0.0034519997658752598, "phrase": "linear_sequential_lyndon_factorization_algorithm"}, {"score": 0.00339853518227171, "phrase": "corresponding_pram_parallel_algorithm"}, {"score": 0.0033285306462537884, "phrase": "j._daykin"}, {"score": 0.0032940772847090865, "phrase": "iliopoulos"}, {"score": 0.0032599682272636786, "phrase": "smyth"}, {"score": 0.0031107911390188055, "phrase": "new_circ-umffs"}, {"score": 0.0026471739851621143, "phrase": "new_combinatorial_results"}, {"score": 0.002171836484200008, "phrase": "structured_methods"}, {"score": 0.002127046102734894, "phrase": "factoring_strings"}, {"score": 0.0021049977753042253, "phrase": "ordered_alphabets"}], "paper_keywords": ["alphabet", " circ-UMFF", " concatenate", " dictionary", " factor", " lexicographic order", " Lyndon", " maximal", " string", " total order", " UMFF", " word"], "paper_abstract": "Suppose a set W of strings contains exactly one rotation (cyclic shift) of every primitive string on some alphabet Sigma. Then W is a circ-UMFF if and only if every word in Sigma(+) has a unique maximal factorization over W. The classic circ-UMFF is the set of Lyndon words based on lexicographic ordering (1958). Duval (1983) designed a linear sequential Lyndon factorization algorithm; a corresponding PRAM parallel algorithm was described by J. Daykin, Iliopoulos and Smyth (1994). Daykin and Daykin defined new circ-UMFFs based on various methods for totally ordering sets of strings (2003), and further described the structure of all circ-UMFFs (2008). Here we prove new combinatorial results for circ-UMFFs, and in particular for the case of Lyndon words. We introduce Acrobat and Flight Deck circ-UMFFs, and describe some of our results in terms of dictionaries. Applications of circ-UMFFs pertain to structured methods for concatenating and factoring strings over ordered alphabets, and those of Lyndon words are wide ranging and multidisciplinary.", "paper_title": "Combinatorics of Unique Maximal Factorization Families (UMFFs)", "paper_id": "WOS:000273198000002"}