{"auto_keywords": [{"score": 0.04873605789417284, "phrase": "pulse-coupled_neural_networks"}, {"score": 0.03363896917055258, "phrase": "spt"}, {"score": 0.00481495049065317, "phrase": "efficient_shortest-path-tree"}, {"score": 0.004494570360108983, "phrase": "link-state_routing_protocols"}, {"score": 0.004144723510171449, "phrase": "new_spt"}, {"score": 0.003980106938194548, "phrase": "link_state"}, {"score": 0.0038375280115736958, "phrase": "current_spt"}, {"score": 0.003775803846431323, "phrase": "new_one"}, {"score": 0.00374531366198605, "phrase": "static_algorithms"}, {"score": 0.003685067218455088, "phrase": "dijkstra_algorithm"}, {"score": 0.003567455727660992, "phrase": "entire_spt"}, {"score": 0.003453584878128719, "phrase": "considerable_amount"}, {"score": 0.00342568771304873, "phrase": "cpu_time"}, {"score": 0.003356923403930231, "phrase": "time_delay"}, {"score": 0.0032762198196613084, "phrase": "dynamic_updating_methods"}, {"score": 0.0029965060407413898, "phrase": "dynamic_algorithms"}, {"score": 0.0029126002350975634, "phrase": "new_modified_model"}, {"score": 0.0027741761880779535, "phrase": "spt_computation"}, {"score": 0.002685558057339722, "phrase": "proposed_model"}, {"score": 0.0026209522797963447, "phrase": "optimization_problems"}, {"score": 0.0025683087007320037, "phrase": "spt."}, {"score": 0.002547535564922075, "phrase": "static_algorithm"}, {"score": 0.00241658945942583, "phrase": "large-scale_problems"}, {"score": 0.00235843888868088, "phrase": "dynamic_algorithm"}, {"score": 0.0022738201751000865, "phrase": "previously_computed_spt"}, {"score": 0.0021569129153653777, "phrase": "simulation_results"}, {"score": 0.0021307975800397816, "phrase": "effective_and_efficient_performance"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["Autowave", " open shortest path first (OSPF)", " pulse-coupled neural networks (PCNNs)", " routing", " shortest path tree (SPT)"], "paper_abstract": "Shortest path tree (SPT) computation is a critical issue for routers using link-state routing protocols, such as the most commonly used open shortest path first and intermediate system to intermediate system. Each router needs to recompute a new SPT rooted from itself whenever a change happens in the link state. Most commercial routers do this computation by deleting the current SPT and building a new one using static algorithms such as the Dijkstra algorithm at the beginning. Such recomputation of an entire SPT is inefficient, which may consume a considerable amount of CPU time and result in a time delay in the network. Some dynamic updating methods using the information in the updated SPT have been proposed in recent years. However, there are still many limitations in those dynamic algorithms. In this paper, a new modified model of pulse-coupled neural networks (M-PCNNs) is proposed for the SPT computation. It is rigorously proved that the proposed model is capable of solving some optimization problems, such as the SPT. A static algorithm is proposed based on the M-PCNNs to compute the SPT efficiently for large-scale problems. In addition, a dynamic algorithm that makes use of the structure of the previously computed SPT is proposed, which significantly improves the efficiency of the algorithm. Simulation results demonstrate the effective and efficient performance of the proposed approach.", "paper_title": "Efficient Shortest-Path-Tree Computation in Network Routing Based on Pulse-Coupled Neural Networks", "paper_id": "WOS:000319010000016"}