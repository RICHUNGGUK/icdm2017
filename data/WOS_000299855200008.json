{"auto_keywords": [{"score": 0.04978789345170096, "phrase": "network_coding"}, {"score": 0.022813949578072843, "phrase": "link_failures"}, {"score": 0.010612387000973441, "phrase": "autonomic_networks"}, {"score": 0.0068949956857288636, "phrase": "network_protection_codes"}, {"score": 0.00572656426526963, "phrase": "proposed_strategies"}, {"score": 0.004756592495553215, "phrase": "agile_recovery"}, {"score": 0.004698938469311569, "phrase": "autonomic_communication_networks"}, {"score": 0.0045301165808920045, "phrase": "data_transmission"}, {"score": 0.004394053797771851, "phrase": "least_amount"}, {"score": 0.004367333454187657, "phrase": "protection_resources"}, {"score": 0.004314377131918679, "phrase": "simple_management_plane_functionalities"}, {"score": 0.0039370647208387234, "phrase": "data_rerouting"}, {"score": 0.003913112416104065, "phrase": "packet_retransmission"}, {"score": 0.0038774558460352667, "phrase": "failure_localization"}, {"score": 0.0038187460155038383, "phrase": "simple_control"}, {"score": 0.003715291088032481, "phrase": "separate_paths"}, {"score": 0.0036367606686493227, "phrase": "encoded_packets"}, {"score": 0.003570766626733069, "phrase": "extra_links"}, {"score": 0.0033901931552297792, "phrase": "self-healing_strategies"}, {"score": 0.0032089088224564913, "phrase": "reduced_capacity"}, {"score": 0.0031029175938332263, "phrase": "npc"}, {"score": 0.0030280272943359813, "phrase": "autonomic_network"}, {"score": 0.0029279904732574438, "phrase": "network_operation"}, {"score": 0.002814005426276146, "phrase": "multiple_link_failures"}, {"score": 0.0027293449981640105, "phrase": "network_capacity"}, {"score": 0.002704445718144686, "phrase": "network_capacity_reduction"}, {"score": 0.0026472248497509845, "phrase": "practical_interest"}, {"score": 0.00261507100872001, "phrase": "implementation_aspects"}, {"score": 0.002520927983744567, "phrase": "network_protection_code"}, {"score": 0.0024675803902400916, "phrase": "integer_linear_program_formulation"}, {"score": 0.002258305302735867, "phrase": "simulation_study"}, {"score": 0.002230864807344675, "phrase": "recovery_times"}, {"score": 0.0022037570028628295, "phrase": "buffering_requirements"}, {"score": 0.00214396012113301, "phrase": "opnet_simulator"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Autonomic networks", " Network protection codes", " Self-healing", " Link failures", " Network coding", " Code construction"], "paper_abstract": "Agile recovery from link failures in autonomic communication networks is essential to increase robustness, accessibility, and reliability of data transmission. However, this must be done with the least amount of protection resources, while using simple management plane functionalities. Recently, network coding has been proposed as a solution to provide agile and cost efficient self-healing against link failures, in a manner that does not require data rerouting, packet retransmission, or failure localization, hence leading to simple control and management planes. To achieve this, separate paths have to be provisioned to carry encoded packets, hence requiring either the addition of extra links, or reserving some of the resources for this purpose. In this paper we introduce self-healing strategies for autonomic networks in order to protect against link failures. The strategies are based on network coding and reduced capacity, which is a technique that we call network protection codes (NPC). In these strategies, an autonomic network is able to provide self-healing from various network failures affecting network operation. Also, network protection codes are extended to provide self-healing from multiple link failures in autonomic networks. Although this leads to reducing the network capacity, the network capacity reduction is asymptotically small in most cases of practical interest. We provide implementation aspects of the proposed strategies, derive bounds and show how to construct network protection code. The paper also develops an Integer Linear Program formulation to evaluate the cost of provisioning connections using the proposed strategies, and uses results from this formulation to show that it is more resource efficient than 1 + 1 protection. A simulation study to evaluate the recovery times, and the buffering requirements due to network coding is also conducted using the OPNET simulator. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Network protection codes: Providing self-healing in autonomic networks using network coding", "paper_id": "WOS:000299855200008"}