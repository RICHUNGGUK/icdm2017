{"auto_keywords": [{"score": 0.028921212422359836, "phrase": "chemical_programs"}, {"score": 0.00481495049065317, "phrase": "distributed_chemical_computing"}, {"score": 0.004665296491645837, "phrase": "chemical_programming"}, {"score": 0.004472935829694716, "phrase": "naturally_parallel_languages"}, {"score": 0.004177049813981273, "phrase": "information-carrying_molecules"}, {"score": 0.004025885154716127, "phrase": "new_molecules"}, {"score": 0.0037793152987497286, "phrase": "service-oriented_computing"}, {"score": 0.003383475802364289, "phrase": "dynamic_coordination"}, {"score": 0.0032954888655173666, "phrase": "autonomic_fashion"}, {"score": 0.0030772505522663612, "phrase": "large_scale"}, {"score": 0.0030130446986008277, "phrase": "widely_open_problem"}, {"score": 0.0027547408718334603, "phrase": "distributed_execution_environment"}, {"score": 0.0026830601040919166, "phrase": "runtime_model"}, {"score": 0.0024789887640568093, "phrase": "peer-to-peer_environment"}, {"score": 0.0023640560785711923, "phrase": "experimental_campaign"}, {"score": 0.0023146962503449186, "phrase": "first_prototype"}, {"score": 0.0021385822825864425, "phrase": "full_adoption"}, {"score": 0.0021049977753042253, "phrase": "chemical_model"}], "paper_keywords": ["Distributed systems", " unconventional computing models", " chemical programming model", " runtime", " P2P", " DHT"], "paper_abstract": "Chemical Programming was born to fill the lack of naturally parallel languages. In such a paradigm, a computation is envisioned as a solution of information-carrying molecules colliding non-deterministically. On collisions, new molecules, and thus new data, are produced. With the rise of service-oriented computing, such models have recently regained momentum, and have been shown to be an adequate means to express the dynamic coordination of services in an autonomic fashion. However, the execution of programs written following this model at large scale is still a widely open problem, hindering it to be actually leveraged. This paper studies the possibility of building a distributed execution environment for chemical programs. A runtime model and algorithms to distribute the runtime of chemical programs are proposed on top of a peer-to-peer environment. The theoretical analysis as well as the experimental campaign conducted on a first prototype establish the viability of the framework proposed, thus lifting a barrier towards the full adoption of the chemical model.", "paper_title": "Distributed Chemical Computing: A Feasibility Study", "paper_id": "WOS:000318748100001"}