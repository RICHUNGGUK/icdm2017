{"auto_keywords": [{"score": 0.04989170475750613, "phrase": "adaptmin"}, {"score": 0.00481495049065317, "phrase": "adaptive_algorithm"}, {"score": 0.004740126725341152, "phrase": "perfectly_periodic_schedules"}, {"score": 0.00452252857066346, "phrase": "predefined_amount"}, {"score": 0.004181743040532619, "phrase": "battery_life"}, {"score": 0.004100620365805411, "phrase": "wireless_network"}, {"score": 0.004005339423663657, "phrase": "perfectly_periodic_schedule"}, {"score": 0.0038665369393234713, "phrase": "granted_and_requested_periods"}, {"score": 0.0037915057447460133, "phrase": "worst_case_performance"}, {"score": 0.003547084456662448, "phrase": "algorithm_a"}, {"score": 0.003491894048789576, "phrase": "a._nisgav"}, {"score": 0.0034646205853140558, "phrase": "b._patt-shamir"}, {"score": 0.003228517923065361, "phrase": "distributed_computing"}, {"score": 0.0030440661915657175, "phrase": "input_instances"}, {"score": 0.0028701222153940283, "phrase": "better_performance"}, {"score": 0.0028365413717574544, "phrase": "proposed_algorithm"}, {"score": 0.0027814417101979317, "phrase": "simulations_results"}, {"score": 0.0027597018725736165, "phrase": "randomly_generated_input_instances"}, {"score": 0.0023038997972591193, "phrase": "exponential-time_optimal_scheduling"}, {"score": 0.002206536029072657, "phrase": "proposed_algorithms"}, {"score": 0.0021551702945512494, "phrase": "optimal_scheduling"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["scheduling", " distributed systems", " algorithms", " analysis of algorithms"], "paper_abstract": "We propose an adaptive algorithm Adaptmin to create perfectly periodic schedules. A perfectly periodic schedule schedules a client regularly after a predefined amount of time known as the period of the client. The periodicity of such schedules can be used to save battery life of nodes in a wireless network. The quality of a perfectly periodic schedule is a function of the ratio between the granted and requested periods. We find a worst case performance bound on the quality of schedules produced by Adaptmin. We compare our algorithm to previously proposed algorithm A in [Z. Brakerski, A. Nisgav, B. Patt-Shamir, General perfectly periodic scheduling, in: Proc. 21st Annual Symp. on Principles of Distributed Computing, 2002, pp. 163-172], and show families of input instances where either Adaptmin does no worse than A, or always outperforms A. The better performance of the proposed algorithm is also confirmed by simulations results for randomly generated input instances. Adaptmin produces 25% more efficient schedules as compared to A in our experiments. We also propose a variant of Adaptmin which is computationally much less demanding compared to A, but is very close to Adaptmin in terms of efficiency. Finally, we compare our algorithms to exponential-time optimal scheduling. Our simulation results indicate that the performance of the proposed algorithms is close to that of optimal scheduling. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive general perfectly periodic scheduling", "paper_id": "WOS:000236244100005"}