{"auto_keywords": [{"score": 0.046888273895838106, "phrase": "frontal_matrix"}, {"score": 0.03323248941990375, "phrase": "fill-reducing_ordering"}, {"score": 0.028710465264333657, "phrase": "heath's_method"}, {"score": 0.004814951205791253, "phrase": "suitesparseqr"}, {"score": 0.004725385523804256, "phrase": "sparse_qr_factorization_package"}, {"score": 0.004608539830653038, "phrase": "multifrontal_method"}, {"score": 0.004438652108870964, "phrase": "lapack"}, {"score": 0.004328874706247672, "phrase": "blas"}, {"score": 0.004169226023596022, "phrase": "high_performance"}, {"score": 0.004117329555194574, "phrase": "multicore_architectures"}, {"score": 0.004015458740397976, "phrase": "different_frontal_matrices"}, {"score": 0.003916098498242888, "phrase": "intel's_threading_building_blocks_library"}, {"score": 0.0038431888954930083, "phrase": "symbolic_analysis"}, {"score": 0.003771631577951067, "phrase": "phase_pre-eliminates_singletons"}, {"score": 0.0036782824183282823, "phrase": "input_matrix"}, {"score": 0.003306559295382181, "phrase": "diagonal_entries"}, {"score": 0.0031056437850836326, "phrase": "column_elimination_tree"}, {"score": 0.003047776993499616, "phrase": "frontal_matrix_structures"}, {"score": 0.0022696277881969896, "phrase": "sufficiently_large_problems"}, {"score": 0.0022273034991008326, "phrase": "resulting_sparse_qr_factorization"}, {"score": 0.0021857667493036786, "phrase": "substantial_fraction"}, {"score": 0.0021450029487459403, "phrase": "theoretical_peak_performance"}, {"score": 0.0021049977753042253, "phrase": "multicore_computer"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " QR factorization", " least-square problems", " sparse matrices"], "paper_abstract": "SuiteSparseQR is a sparse QR factorization package based on the multifrontal method. Within each frontal matrix, LAPACK and the multithreaded BLAS enable the method to obtain high performance on multicore architectures. Parallelism across different frontal matrices is handled with Intel's Threading Building Blocks library. The symbolic analysis and ordering phase pre-eliminates singletons by permuting the input matrix Ainto the form inverted right perpendicularR(11) R-12; 0 A(22)inverted left perpendicular where R-11 is upper triangular with diagonal entries above a given tolerance. Next, the fill-reducing ordering, column elimination tree, and frontal matrix structures are found without requiring the formation of the pattern of A(T) A. Approximate rank-detection is performed within each frontal matrix using Heath's method. While Heath's method is not always exact, it has the advantage of not requiring column pivoting and thus does not interfere with the fill-reducing ordering. For sufficiently large problems, the resulting sparse QR factorization obtains a substantial fraction of the theoretical peak performance of a multicore computer.", "paper_title": "Algorithm 915, SuiteSparseQR: Multifrontal Multithreaded Rank-Revealing Sparse QR Factorization", "paper_id": "WOS:000297683400008"}