{"auto_keywords": [{"score": 0.034906949544734375, "phrase": "parcae"}, {"score": 0.00481495049065317, "phrase": "flexible_parallel_execution"}, {"score": 0.004605434064238641, "phrase": "available_resources"}, {"score": 0.004518442937844318, "phrase": "parallel_program's_execution_environment"}, {"score": 0.004294381488413906, "phrase": "anticipated_range"}, {"score": 0.003978866233891427, "phrase": "existing_approaches"}, {"score": 0.00385431710959668, "phrase": "dynamic_tuning"}, {"score": 0.003709974534103202, "phrase": "multiprogrammed_system"}, {"score": 0.003525861581971337, "phrase": "manual_programming_effort"}, {"score": 0.0034154440860550564, "phrase": "array-based_data-parallel_programs"}, {"score": 0.003144222265269426, "phrase": "platform-wide_dynamic_tuning"}, {"score": 0.002988101395789399, "phrase": "flexible_parallel_programs"}, {"score": 0.0026815368507715, "phrase": "system_performance"}, {"score": 0.0022434880661725493, "phrase": "current_environment"}, {"score": 0.002215081186105616, "phrase": "parallel_programs"}, {"score": 0.0021319959284827896, "phrase": "original_parallel_implementations"}], "paper_keywords": ["Design", " Performance", " automatic parallelization", " code generation", " compiler", " flexible", " multicore", " parallel", " performance portability", " run-time", " adaptivity", " tuning"], "paper_abstract": "Workload, platform, and available resources constitute a parallel program's execution environment. Most parallelization efforts statically target an anticipated range of environments, but performance generally degrades outside that range. Existing approaches address this problem with dynamic tuning but do not optimize a multiprogrammed system holistically. Further, they either require manual programming effort or are limited to array-based data-parallel programs. This paper presents Parcae, a generally applicable automatic system for platform-wide dynamic tuning. Parcae includes (i) the Nona compiler, which creates flexible parallel programs whose tasks can be efficiently reconfigured during execution; (ii) the Decima monitor, which measures resource availability and system performance to detect change in the environment; and (iii) the Morta executor, which cuts short the life of executing tasks, replacing them with other functionally equivalent tasks better suited to the current environment. Parallel programs made flexible by Parcae outperform original parallel implementations in many interesting scenarios.", "paper_title": "Parcae: A System for Flexible Parallel Execution", "paper_id": "WOS:000307582100013"}