{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "malware_detection"}, {"score": 0.03217160122346607, "phrase": "elastic_taint_tracking"}, {"score": 0.025032392208329042, "phrase": "cloudtaint"}, {"score": 0.00461302961851157, "phrase": "fine-grained_taint_tracking"}, {"score": 0.004419538941706716, "phrase": "novel_approach"}, {"score": 0.004081385289516914, "phrase": "kernel_buffer_overflow_malwares"}, {"score": 0.003982617095636925, "phrase": "demand_emulation"}, {"score": 0.003910106508089187, "phrase": "taint_tracking_framework"}, {"score": 0.0037459885494311217, "phrase": "running_system"}, {"score": 0.003417054482155433, "phrase": "cloud_environment"}, {"score": 0.003293688299319582, "phrase": "high_performance_overhead"}, {"score": 0.0030789331635764122, "phrase": "practical_malware_detection"}, {"score": 0.002878140062594849, "phrase": "taint_tracking"}, {"score": 0.0028084079003212947, "phrase": "cloud_applications'_security_requirements"}, {"score": 0.00257735013358606, "phrase": "data_flow"}, {"score": 0.002453934333239467, "phrase": "customizable_security_detection_method"}, {"score": 0.0023798115577749225, "phrase": "prototype_implementation"}, {"score": 0.0023079225317714815, "phrase": "xen_virtualization_environment"}, {"score": 0.002265833357217618, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "acceptable_performance_overhead"}], "paper_keywords": ["Elastic taint tracking", " Malware detection", " Cloud computing", " On-demand emulation"], "paper_abstract": "Full-system, fine-grained taint tracking has been proven to be a novel approach for the detection of malwares, especially for privacy-breaching and kernel buffer overflow malwares. On-demand emulation achieves a taint tracking framework in the cloud through switching a running system between virtual and emulated execution dynamically. However, facing the complexity of the cloud environment, it still suffers a high performance overhead. In this paper, we propose an approach for practical malware detection using elastic taint tracking, which provides the granularity and strategy of taint tracking according to the cloud applications' security requirements, including providing a taint tracking configuration file based on script, automatic deployment and trigger mechanism of the sources for taint tracking based on data flow as well as control flow, and customizable security detection method. We present a prototype implementation named CloudTaint based on Xen virtualization environment. The experimental results indicate that CloudTaint is effective for malware detection in the cloud with acceptable performance overhead using elastic taint tracking.", "paper_title": "CloudTaint: an elastic taint tracking framework for malware detection in the cloud", "paper_id": "WOS:000344813000022"}