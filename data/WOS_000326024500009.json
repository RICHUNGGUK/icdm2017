{"auto_keywords": [{"score": 0.04655921366631187, "phrase": "end_users"}, {"score": 0.043443105745602784, "phrase": "euse_activities"}, {"score": 0.00481495049065317, "phrase": "end-user_software_engineering"}, {"score": 0.004662913362513954, "phrase": "major_end-user_software_engineering"}, {"score": 0.00440825801245188, "phrase": "unfamiliar_software_engineering_techniques"}, {"score": 0.003908246778916674, "phrase": "-user_programming"}, {"score": 0.0036651042289628324, "phrase": "existing_workflow"}, {"score": 0.0035778632599436024, "phrase": "substantial_changes"}, {"score": 0.0032753188151508706, "phrase": "euse"}, {"score": 0.0032491108935498794, "phrase": "webbased_applications"}, {"score": 0.003171740347925348, "phrase": "software_lifecycle"}, {"score": 0.003022465992278672, "phrase": "programming_skills"}, {"score": 0.0029386456078004863, "phrase": "euse's_characteristic_informality"}, {"score": 0.0026577673946415583, "phrase": "quality_products"}, {"score": 0.0025224615049571427, "phrase": "software_engineering"}, {"score": 0.0024230746206056536, "phrase": "web-centred_euse_lifecycle_step"}, {"score": 0.002327594516681507, "phrase": "statistical_experiment"}, {"score": 0.0022812715029149216, "phrase": "web_software"}], "paper_keywords": ["Human Factors", " Languages", " Experimentation", " Design", " Reliability", " End-user programming", " end-user development", " visual programming", " human-computer interaction"], "paper_abstract": "This article addresses one of the major end-user software engineering (EUSE) challenges, namely, how to motivate end users to apply unfamiliar software engineering techniques and activities to achieve their goal: translate requirements into software that meets their needs. EUSE activities are secondary to the goal that the program is helping to achieve and end-user programming is opportunistic. The challenge is then to find ways to incorporate EUSE activities into the existing workflow without users having to make substantial changes to the type of work they do or their priorities. In this article, we set out an approach to EUSE for webbased applications. We also propose a software lifecycle that is consistent with the conditions and priorities of end users without programming skills and is well-aligned with EUSE's characteristic informality, ambiguity and opportunisticness. Users applying this lifecyclemanage to find solutions that they would otherwise be unable to identify. They also develop quality products. Users of this approach will not have to be acquainted with software engineering, as a framework will take them through the web-centred EUSE lifecycle step-by-step. We also report a statistical experiment in which users develop web software with and without a framework to guide them through the lifecycle. Its aim is to validate the applicability of our framework-driven lifecycle.", "paper_title": "A Web-Centred Approach to End-User Software Engineering", "paper_id": "WOS:000326024500009"}