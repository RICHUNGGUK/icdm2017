{"auto_keywords": [{"score": 0.05007817464644755, "phrase": "graph_isomorphism"}, {"score": 0.0044435677598780796, "phrase": "class_c"}, {"score": 0.004401794742140806, "phrase": "low_descriptive_complexity"}, {"score": 0.0043194180167921165, "phrase": "isomorphism_problem"}, {"score": 0.004178935413340453, "phrase": "fast_parallel_algorithm"}, {"score": 0.003541923233726252, "phrase": "definability_conditions"}, {"score": 0.003426640459083931, "phrase": "winning_strategy"}, {"score": 0.0033943947596098583, "phrase": "suitable_ehrenfeucht-fraisse_games"}, {"score": 0.0033465923623290034, "phrase": "logarithmic_number"}, {"score": 0.00326840809777013, "phrase": "parallel_isomorphism_algorithm"}, {"score": 0.0031769866037536045, "phrase": "simple_combinatorial_algorithm"}, {"score": 0.0028766278519176355, "phrase": "bounded_treewidth"}, {"score": 0.002769805263310232, "phrase": "open_question"}, {"score": 0.0025436978068459565, "phrase": "rotation_systems"}, {"score": 0.0024842242921857705, "phrase": "graph_embeddings"}, {"score": 0.0024378333776090243, "phrase": "ac"}, {"score": 0.0022280223816618736, "phrase": "simple_wl_algorithm"}, {"score": 0.0021049977753042253, "phrase": "new_ac'_isomorphism_algorithm"}], "paper_keywords": [""], "paper_abstract": "Our starting point is the observation that if graphs in a class C have low descriptive complexity, then the isomorphism problem for C is solvable by a fast parallel algorithm. More precisely, we prove that if every graph in C is definable in a finite-variable first order logic with counting quantifiers within logarithmic quantifier depth, then Graph Isomorphism for C is in TC1 subset of NC2. If no counting quantifiers are needed, then Graph Isomorphism for C is even in AC(1). The definability conditions can be checked by designing a winning strategy for suitable Ehrenfeucht-Fraisse games with a logarithmic number of rounds. The parallel isomorphism algorithm this approach yields is a simple combinatorial algorithm known as the Weisfeiler-Lehman (WL) algorithm. Using this approach, we prove that isomorphism of graphs of bounded treewidth is testable in TC1, answering an open question from [9]. Furthermore, we obtain an AC(1) algorithm for testing isomorphism of rotation systems (combinatorial specifications of graph embeddings). The AC' upper bound was known before, but the fact that this bound can be achieved by the simple WL algorithm is new. Combined with other known results, it also yields a new AC' isomorphism algorithm for planar graphs.", "paper_title": "Testing graph isomorphism in parallel by playing a game", "paper_id": "WOS:000239474500002"}