{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "k-means"}, {"score": 0.004717723626157272, "phrase": "parallel_architectures"}, {"score": 0.00457553517865013, "phrase": "-prefix-sum_sorting"}, {"score": 0.004483120978156604, "phrase": "updating_steps"}, {"score": 0.004174064076143015, "phrase": "parallel_k-means_clustering"}, {"score": 0.0040481944502103505, "phrase": "k-ps-means"}, {"score": 0.0038862297330905836, "phrase": "high_performance"}, {"score": 0.003807684498435389, "phrase": "near-full_occupancy_compute_kernels"}, {"score": 0.003438058620195309, "phrase": "data_points"}, {"score": 0.0031360786664165093, "phrase": "high_degrees"}, {"score": 0.002889928791032578, "phrase": "key_element"}, {"score": 0.002831462722290752, "phrase": "performance_improvement"}, {"score": 0.002718045523483502, "phrase": "parallel_sorting"}, {"score": 0.002453934333239467, "phrase": "nvidia_gpus"}, {"score": 0.0023079225317714815, "phrase": "cpu_reference_code"}, {"score": 0.0021049977753042253, "phrase": "popular_numerical_software_packages"}], "paper_keywords": ["Clustering algorithms", " graphics processors", " parallel algorithms", " biology and genetics"], "paper_abstract": "We present an implementation of parallel K-means clustering, called K-ps-means, that achieves high performance with near-full occupancy compute kernels without imposing limits on the number of dimensions and data points permitted as input, thus combining flexibility with high degrees of parallelism and efficiency. As a key element to performance improvement, we introduce parallel sorting as data preprocessing and updating steps. Our final implementation for Nvidia GPUs achieves speedups of up to 200-fold over CPU reference code and of up to three orders of magnitude when compared with popular numerical software packages.", "paper_title": "K-Means for Parallel Architectures Using All-Prefix-Sum Sorting and Updating Steps", "paper_id": "WOS:000321153600012"}