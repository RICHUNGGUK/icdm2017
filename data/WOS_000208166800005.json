{"auto_keywords": [{"score": 0.03271446824082956, "phrase": "performance_analysis"}, {"score": 0.00481495049065317, "phrase": "high-level_language_applications"}, {"score": 0.004678785623021003, "phrase": "high-level_languages"}, {"score": 0.0045464538515249085, "phrase": "field-programmable_gate_arrays"}, {"score": 0.004342430078306461, "phrase": "reconfigurable_computing_resources"}, {"score": 0.0042928648367867835, "phrase": "application_developers"}, {"score": 0.004171402455813099, "phrase": "higher-level_syntax"}, {"score": 0.003961330917648707, "phrase": "faster_development_times"}, {"score": 0.0038936755823756226, "phrase": "traditional_hardware_description_languages"}, {"score": 0.0036763623220059933, "phrase": "higher_level"}, {"score": 0.0033922781038328844, "phrase": "reduced_transparency"}, {"score": 0.003353521531649663, "phrase": "application_behavior"}, {"score": 0.0031845067058084583, "phrase": "application_performance"}, {"score": 0.003130077012135034, "phrase": "runtime_tools"}, {"score": 0.0029722900280316216, "phrase": "traditional_hlls"}, {"score": 0.002938317647182056, "phrase": "sequential_and_parallel_programming"}, {"score": 0.00290473242917264, "phrase": "hll-based_development"}, {"score": 0.002822434555587263, "phrase": "equal_or_greater_need"}, {"score": 0.0026342827320931937, "phrase": "portable_framework"}, {"score": 0.0026041635822373265, "phrase": "runtime_performance_analysis"}, {"score": 0.002574387911697005, "phrase": "hll_applications"}, {"score": 0.002487083025913648, "phrase": "automated_tool"}, {"score": 0.0023889533502525527, "phrase": "impulse_c"}, {"score": 0.002255431275670053, "phrase": "case_study"}, {"score": 0.0021416404045850224, "phrase": "performance_bottlenecks"}, {"score": 0.0021049977753042253, "phrase": "molecular_dynamics_kernel"}], "paper_keywords": ["Performance", " Measurement", " FPGA", " profile", " trace", " high-level language", " high-level synthesis tools", " Impulse C", " Carte C"], "paper_abstract": "High-Level Languages (HLLs) for Field-Programmable Gate Arrays (FPGAs) facilitate the use of reconfigurable computing resources for application developers by using familiar, higher-level syntax, semantics, and abstractions, typically enabling faster development times than with traditional Hardware Description Languages (HDLs). However, programming at a higher level of abstraction is typically accompanied by some loss of performance as well as reduced transparency of application behavior, making it difficult to understand and improve application performance. While runtime tools for performance analysis are often featured in development with traditional HLLs for sequential and parallel programming, HLL-based development for FPGAs has an equal or greater need yet lacks these tools. This article presents a novel and portable framework for runtime performance analysis of HLL applications for FPGAs, including an automated tool for performance analysis of designs created with Impulse C, a commercial HLL for FPGAs. As a case study, this tool is used to successfully locate performance bottlenecks in a molecular dynamics kernel in order to gain speedup.", "paper_title": "Performance Analysis Framework for High-Level Language Applications in Reconfigurable Computing", "paper_id": "WOS:000208166800005"}