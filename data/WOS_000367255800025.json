{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "haskell"}, {"score": 0.004608539830653038, "phrase": "different_communities"}, {"score": 0.004066379764716747, "phrase": "mac"}, {"score": 0.003990385737207714, "phrase": "information-flow_control"}, {"score": 0.0038431888954930083, "phrase": "operating_systems"}, {"score": 0.003587235362628753, "phrase": "programming_languages_community"}, {"score": 0.0032449610741097992, "phrase": "information_leaks"}, {"score": 0.003066945490483524, "phrase": "unique_privileged_role"}, {"score": 0.0027916287357898544, "phrase": "monadic_api"}, {"score": 0.00262191949451482, "phrase": "advanced_features"}, {"score": 0.002509284173541882, "phrase": "mutable_data_structures"}, {"score": 0.002298288831092204, "phrase": "new_primitives"}, {"score": 0.002255431275670053, "phrase": "library_designers"}, {"score": 0.0021049977753042253, "phrase": "new_operations"}], "paper_keywords": ["mandatory access control", " information-flow control", " security", " library"], "paper_abstract": "For several decades, researchers from different communities have independently focused on protecting confidentiality of data. Two distinct technologies have emerged for such purposes: Mandatory Access Control (MAC) and Information-Flow Control (IFC)-the former belonging to operating systems (OS) research, while the latter to the programming languages community. These approaches restrict how data gets propagated within a system in order to avoid information leaks. In this scenario, Haskell plays a unique privileged role: it is able to protect confidentiality via libraries. This pearl presents a monadic API which statically protects confidentiality even in the presence of advanced features like exceptions, concurrency, and mutable data structures. Additionally, we present a mechanism to safely extend the library with new primitives, where library designers only need to indicate the read and write effects of new operations.", "paper_title": "Functional Pearl: Two Can Keep a Secret, If One of Them Uses Haskell", "paper_id": "WOS:000367255800025"}