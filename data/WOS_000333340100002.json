{"auto_keywords": [{"score": 0.0298504557920069, "phrase": "infinite_roaming"}, {"score": 0.00481495049065317, "phrase": "dynamic_scheduling"}, {"score": 0.004502943680955863, "phrase": "real-time_rendering"}, {"score": 0.00445293569103488, "phrase": "large-scale_scenes"}, {"score": 0.004378958522416482, "phrase": "important_task"}, {"score": 0.004330321475256457, "phrase": "virtual_reality"}, {"score": 0.004141093507753515, "phrase": "local_loading"}, {"score": 0.003916098498242888, "phrase": "dynamic_loading"}, {"score": 0.0038725824361608243, "phrase": "real-time_roaming"}, {"score": 0.0037658881407605445, "phrase": "remote_servers"}, {"score": 0.0036214184763804034, "phrase": "efficient_transmission"}, {"score": 0.003541357671562449, "phrase": "transmission_time"}, {"score": 0.0034245614958572012, "phrase": "novel_dynamic_scheduling_algorithm"}, {"score": 0.003367611042980526, "phrase": "client_side"}, {"score": 0.003256526411907174, "phrase": "loading_and_real-time_rendering_performance"}, {"score": 0.0030451958332949735, "phrase": "partitioned_data_blocks"}, {"score": 0.0029945352738604742, "phrase": "server_side"}, {"score": 0.0029282926103224717, "phrase": "roaming_viewpoints"}, {"score": 0.0027690086059100495, "phrase": "large_scale_scene"}, {"score": 0.002677616534005393, "phrase": "different_networking_scenarios"}, {"score": 0.0025892330566358503, "phrase": "multi-resolution_scheme"}, {"score": 0.0025461386232786356, "phrase": "server-stored_scene_blocks"}, {"score": 0.0025037596405075866, "phrase": "different_communication_channel_conditions"}, {"score": 0.0022261705957258506, "phrase": "small_amount"}, {"score": 0.0022013916728990564, "phrase": "memory_overhead"}, {"score": 0.0021049977753042253, "phrase": "large_city_scenes"}], "paper_keywords": ["Scene management", " Dynamic scheduling", " Block prediction", " Dynamic loading", " Real-time rendering"], "paper_abstract": "3D visualization and real-time rendering of large-scale scenes is an important task of virtual reality. In this paper, different from local loading and roaming of the scenes, we focus on dynamic loading and real-time roaming, based on the remote servers and clients, to facilitate the efficient transmission and reduce the transmission time. More specifically, a novel dynamic scheduling algorithm in the client side is used to optimize the loading and real-time rendering performance, i.e., this method can dynamically load and unload the partitioned data blocks from the server side according to the roaming viewpoints so that we can realize the infinite roaming of a large scale scene. In order to accommodate different networking scenarios, we also design a multi-resolution scheme for those server-stored scene blocks according to different communication channel conditions, so that the most suitable resolution scheme can be automatically chosen. As shown in the experiments, our method only requires a small amount of memory overhead, while efficiently realizes infinite roaming of the large city scenes.", "paper_title": "Dynamic Scheduling and Real-Time Rendering for Large-Scale 3D Scenes", "paper_id": "WOS:000333340100002"}