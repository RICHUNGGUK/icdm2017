{"auto_keywords": [{"score": 0.04733190377720633, "phrase": "mobile_ad-hoc_networks"}, {"score": 0.00481495049065317, "phrase": "distributed_transaction_processing"}, {"score": 0.004758559771697795, "phrase": "manets"}, {"score": 0.004592905436175987, "phrase": "distributed_transactions"}, {"score": 0.00443308765153716, "phrase": "message_delays"}, {"score": 0.00438105507792004, "phrase": "network_failures"}, {"score": 0.004278807087784626, "phrase": "ad-hoc_network_scenarios"}, {"score": 0.004129873531628877, "phrase": "embedded_databases"}, {"score": 0.0036914757355166966, "phrase": "physically_different_databases"}, {"score": 0.0032414759269196493, "phrase": "message_loss"}, {"score": 0.0032033846797483475, "phrase": "node_failure"}, {"score": 0.003091767402370757, "phrase": "mobile_environments"}, {"score": 0.0028800314406626022, "phrase": "simple_message_exchange"}, {"score": 0.002651213849567608, "phrase": "reasonable_time-outs"}, {"score": 0.002573965014439041, "phrase": "transaction_processing"}, {"score": 0.0023976048394496446, "phrase": "\"wrong\"_time-outs"}, {"score": 0.002130056082139311, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "unreliable_networks"}], "paper_keywords": ["Mobile transaction processing", " Concurrency control", " Locking", " Validation", " Mobile ad-hoc networks", " Atomic commit", " Adjourn state"], "paper_abstract": "Atomic commit protocols for distributed transactions in mobile ad-hoc networks have to consider message delays and network failures. We consider ad-hoc network scenarios, in which participants hold embedded databases and offer services to other participants. Services that are composed of several other services can access and manipulate data of physically different databases. In such a scenario, distributed transaction processing can be used to guarantee atomicity and serializability throughout all databases. However, with problems like message loss, node failure, and network partitioning, mobile environments make it hard to get estimations on the duration of a simple message exchange. In this article, we focus on the problem of setting up reasonable time-outs when guaranteeing atomicity for transaction processing within mobile ad-hoc networks, and we show the effect of setting up \"wrong\" time-outs on the transaction throughput and blocking time. Our solution, which does not depend on time-outs, shows a better performance in unreliable networks and remarkably reduces the amount of blocking.", "paper_title": "Blocking reduction for distributed transaction processing within MANETs", "paper_id": "WOS:000264518900002"}