{"auto_keywords": [{"score": 0.05007851897071721, "phrase": "optimistic_synchronization"}, {"score": 0.04177569747328366, "phrase": "masm"}, {"score": 0.015529154871700937, "phrase": "high_level_architecture"}, {"score": 0.011771619424152743, "phrase": "rti"}, {"score": 0.011533768837564755, "phrase": "state_management"}, {"score": 0.010456753699020691, "phrase": "federate_code"}, {"score": 0.004380540407926982, "phrase": "magic_state_manager"}, {"score": 0.004204054047427536, "phrase": "runtime_infrastructure"}, {"score": 0.00388800655625083, "phrase": "federate_state"}, {"score": 0.0034364867143322304, "phrase": "existing_proposals"}, {"score": 0.0033388871136347704, "phrase": "federate_programmer"}, {"score": 0.0029027394930867902, "phrase": "state_management_issues"}, {"score": 0.002651291854234327, "phrase": "conservative_approach"}, {"score": 0.002544296663333569, "phrase": "simulation_system_performance"}, {"score": 0.002523420125608051, "phrase": "specific_scenarios"}, {"score": 0.00245168871716047, "phrase": "poor_or_zero_lookahead"}, {"score": 0.002193559776999383, "phrase": "experimental_results"}, {"score": 0.0021755548389283856, "phrase": "limited_runtime_overhead"}], "paper_keywords": ["HLA", " federated simulation systems", " transparent checkpointing/recovery", " middleware"], "paper_abstract": "In this article, the authors present the design and implementation of a software architecture - namely, MAgic State Manager (MASM) - to be employed within a runtime infrastructure (RTI) in support of High Level Architecture (HLA) federations. MASM allows performing checkpointing/recovery of the federate state in a way completely transparent to the federate itself, thus providing the possibility of demanding to the RTI any task related to state management in optimistic synchronization. Different from existing proposals, through this approach, the federate programmer is required neither to supply modules for state management within the federate code nor to explicitly interface the federate code with existing, third-party checkpointing/recovery libraries. Hence, the federate programmer is completely relieved from the burden of facing state management issues. One major application of this proposal is the possibility to employ optimistic synchronization, even in case of federates originally designed for the conservative approach. This can provide a way of improving the simulation system performance in specific scenarios (e.g., in case of poor or zero lookahead within the federation). The authors elaborate on this issue by discussing on how to integrate MASM within the RTI to achieve such a synchronization objective. Some experimental results demonstrating limited runtime overhead introduced by MASM are also reported for two case studies-namely, an interconnection network simulation and a personal communication system simulation.", "paper_title": "Transparent state management for optimistic synchronization in the high level architecture", "paper_id": "WOS:000237878500002"}