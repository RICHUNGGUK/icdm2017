{"auto_keywords": [{"score": 0.03836998339683977, "phrase": "square_roots"}, {"score": 0.010464214575715577, "phrase": "embedding_degree"}, {"score": 0.009902775241815816, "phrase": "compressed_pairings"}, {"score": 0.00481495049065317, "phrase": "computing_pairings"}, {"score": 0.004530023871441992, "phrase": "elliptic_curve_cryptography"}, {"score": 0.004122351497440992, "phrase": "extra_bit"}, {"score": 0.0035486713647627246, "phrase": "point_multiplication_formulae"}, {"score": 0.003283272764794988, "phrase": "point_compression"}, {"score": 0.0032470094613727433, "phrase": "pairing-based_cryptography"}, {"score": 0.0021049977753042253, "phrase": "analogous_methods"}], "paper_keywords": ["Elliptic curves", " Pairings", " Point compression"], "paper_abstract": "To reduce bandwidth in elliptic curve cryptography one can transmit only x-coordinates of points (or x-coordinates together with an extra bit). This is called point compression. For further computation using the points one can either recover the y-coordinates by taking square roots or one can use point multiplication formulae which use x-coordinates only. We consider how to efficiently use point compression in pairing-based cryptography when the embedding degree is even. We give a method to compute compressed pairings using x-coordinates only. We also show how to compute the compressed pairings using two x-coordinates and one y-coordinate. Our methods are more efficient than taking square roots when the embedding degree is small. We implemented the algorithms in the case of embedding degree 2 curves over F-p where p = 3 ( mod 4) and found that our methods can be 10 - 15% faster than the analogous methods using square roots.", "paper_title": "Computing pairings using x-coordinates only", "paper_id": "WOS:000262671200004"}