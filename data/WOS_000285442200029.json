{"auto_keywords": [{"score": 0.03805447680550302, "phrase": "media_streams"}, {"score": 0.015558967493238443, "phrase": "multiple_sessions"}, {"score": 0.014366839017180211, "phrase": "proposed_algorithm"}, {"score": 0.011600590547300746, "phrase": "suggested_algorithm"}, {"score": 0.00868526683161568, "phrase": "fountain_codes"}, {"score": 0.008268469932392025, "phrase": "different_parts"}, {"score": 0.00481495049065317, "phrase": "peer_networks"}, {"score": 0.004740476936977635, "phrase": "dynamic_networks"}, {"score": 0.004630910803911567, "phrase": "novel_algorithm"}, {"score": 0.00460690715991423, "phrase": "rate_allocation"}, {"score": 0.004535636777750402, "phrase": "multimedia_contents"}, {"score": 0.004488734023485018, "phrase": "network_members"}, {"score": 0.004430784015995566, "phrase": "requesting_peer"}, {"score": 0.0043509032299218955, "phrase": "ant-colony_optimization"}, {"score": 0.004272456401437226, "phrase": "network_dynamism"}, {"score": 0.004217286731331736, "phrase": "inherent_property"}, {"score": 0.004055998173160551, "phrase": "network_state_information"}, {"score": 0.004034962424068988, "phrase": "particularly_the_rate"}, {"score": 0.003921193216052828, "phrase": "accurate_measurements"}, {"score": 0.003860489913620456, "phrase": "suggested_method"}, {"score": 0.0036839398229584937, "phrase": "single_and_multiple_streaming_sessions_scenarios"}, {"score": 0.003598705020845104, "phrase": "media_providers"}, {"score": 0.0035063024767122684, "phrase": "maximum_achievable_rate"}, {"score": 0.003434085751246066, "phrase": "key_feature"}, {"score": 0.0033285306462537884, "phrase": "transient_and_permanent_network_changes"}, {"score": 0.0032011229656422596, "phrase": "temporary_losses"}, {"score": 0.0031515316747882023, "phrase": "network_changes"}, {"score": 0.0030387767523076528, "phrase": "media_stream"}, {"score": 0.00291483082800388, "phrase": "network_conditions"}, {"score": 0.002884640164372298, "phrase": "adaption_rate"}, {"score": 0.002825191058142694, "phrase": "streaming_session"}, {"score": 0.0027886573969044042, "phrase": "uninterrupted_services"}, {"score": 0.0027741761880779535, "phrase": "current_users"}, {"score": 0.002473895542219933, "phrase": "predefined_order"}, {"score": 0.002448260697722081, "phrase": "specific_list"}, {"score": 0.002435542816459651, "phrase": "media_suppliers"}, {"score": 0.0022175679453857473, "phrase": "big_difficulty"}, {"score": 0.0021381565332182773, "phrase": "specific_order"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Ant-colony optimization", " Multimedia streaming", " Peer to peer media streaming", " P2P networks", " Rate allocation"], "paper_abstract": "In this paper, we introduce a novel algorithm for rate allocation in media streaming P2P networks where multimedia contents are distributed among network members and streamed toward any requesting peer. The proposed algorithm is based on ant-colony optimization. It is capable of handling network dynamism, which is an inherent property of unstructured P2P networks. Another advantage of our algorithm is its ability to get over uncertainties in network state information, particularly the rate of supplying peers that could happen due to lack of accurate measurements. In addition, the suggested method does not rely on any information about the topology of the network. We have investigated both single and multiple streaming sessions scenarios in which more than one peer is receiving media streams from media providers. We show that the suggested algorithm will reach the maximum achievable rate of the network quite fast. A key feature of the proposed algorithm is its low pass filter property, which makes it discriminate between transient and permanent network changes. If the changes are transient, the algorithm easily and rapidly compensates the temporary losses. In cases where the network changes last longer, the algorithm overcomes losses by employing other nodes that have the media stream available. The rate of adaptation is adjustable and must be carefully determined according to network conditions. Moreover, adaption rate is not constant and varies during the streaming session. This results in uninterrupted services for current users in cases where multiple sessions are present in the network. Finally, since we have assumed that fountain codes are used to encode media streams in the P2P networks, the suggested algorithm does not require the user to receive different parts of the streams according to a predefined order and from a specific list of media suppliers. It suffices that the user gets as many stream chunks as necessary, regardless of their order or the fact that not all the media suppliers have all the parts available. In other words, using fountain codes enables us to overcome a big difficulty of P2P media streaming and that is to receive different parts of media streams according to a specific order. (c) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "An ant-based rate allocation algorithm for media streaming in peer to peer networks: Extension to multiple sessions and dynamic networks", "paper_id": "WOS:000285442200029"}