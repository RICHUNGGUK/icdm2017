{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "finding_top-k"}, {"score": 0.0047895188927660525, "phrase": "significant_n-itemsets"}, {"score": 0.004639712384096822, "phrase": "frequent_itemset_discovery"}, {"score": 0.004590820632326585, "phrase": "data_streams"}, {"score": 0.004518442937844318, "phrase": "great_importance"}, {"score": 0.004470823343432748, "phrase": "different_applications"}, {"score": 0.004285289574869884, "phrase": "minimum_support_threshold"}, {"score": 0.003674738405118697, "phrase": "data_stream"}, {"score": 0.003559675269411366, "phrase": "algorithms_topsis"}, {"score": 0.0033937776228549557, "phrase": "sliding_window"}, {"score": 0.0030521898646210413, "phrase": "relis"}, {"score": 0.0029722900280316216, "phrase": "potential_significant_itemsets"}, {"score": 0.0029409171055888804, "phrase": "mined_results"}, {"score": 0.002744888626958772, "phrase": "space_consumption"}, {"score": 0.0026168641536413978, "phrase": "impotent_nodes"}, {"score": 0.002575526825728026, "phrase": "newest_basic_window"}, {"score": 0.002481588370380518, "phrase": "support_threshold"}, {"score": 0.0024553821147953463, "phrase": "mining_process"}, {"score": 0.002196342933346204, "phrase": "experimental_studies"}, {"score": 0.002127472359795555, "phrase": "good_effectiveness"}, {"score": 0.0021049977753042253, "phrase": "high_efficiency"}], "paper_keywords": ["data mining", " FP-tree", " data stream", " sliding window", " frequent itemset"], "paper_abstract": "Frequent itemset discovery in data streams is of great importance in different applications. However, the setting of a minimum support threshold is typically hard sometimes. It is interesting for users to find the most K significant n-itemsets (1 <= n <= N) in sliding windows over a data stream. In this paper, algorithms TOPSIS are presented to address this problem. A sliding window is divided into several sub-windows which are called basic windows serving as updating units. Two new data structures TOPS-Tree and RELIS are devised to maintain potential significant itemsets and mined results, respectively. Moreover, three optimal strategies are exploited to reduce time and space consumption of the algorithms: (1) pruning impotent nodes in the newest basic window whenever a sliding window updates, (2) promoting support threshold during mining process dynamically, and (3) adjusting potency parameter adaptively. The precision of the algorithm are also analyzed. Experimental studies are performed to evaluate the good effectiveness and high efficiency of the algorithm. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "TOPSIS: Finding Top-K significant N-itemsets in sliding windows adaptively", "paper_id": "WOS:000258988300001"}