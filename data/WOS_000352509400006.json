{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "loop_invariants"}, {"score": 0.049198528177459636, "phrase": "algorithmic_learning"}, {"score": 0.0044702911400353535, "phrase": "decision_procedures"}, {"score": 0.004388035083357706, "phrase": "predicate_abstraction"}, {"score": 0.004307286039184164, "phrase": "simple_templates"}, {"score": 0.004228016636379321, "phrase": "quantified_formulae"}, {"score": 0.004036141321779216, "phrase": "automated_technique"}, {"score": 0.003644001325962353, "phrase": "arbitrary_first-order_invariants"}, {"score": 0.0035110198699787013, "phrase": "fixed_set"}, {"score": 0.003446353878654566, "phrase": "atomic_propositions"}, {"score": 0.0027827907725673845, "phrase": "simple_randomized_mechanism"}, {"score": 0.0026317312518257803, "phrase": "proposed_technique"}, {"score": 0.0025121156016001886, "phrase": "quantified_invariants"}, {"score": 0.002397923568994474, "phrase": "linux_source"}, {"score": 0.0022467024793003812, "phrase": "simpler_technique"}, {"score": 0.0021848422732893926, "phrase": "previous_works"}, {"score": 0.0021049977753042253, "phrase": "reasonable_derivation_power"}], "paper_keywords": [""], "paper_abstract": "By combining algorithmic learning, decision procedures, predicate abstraction and simple templates for quantified formulae, we present an automated technique for finding loop invariants. Theoretically, this technique can find arbitrary first-order invariants (modulo a fixed set of atomic propositions and an underlying satisfiability modulo theories solver) in the form of the given template and exploit the flexibility in invariants by a simple randomized mechanism. In our study, the proposed technique was able to find quantified invariants for loops from the Linux source and other realistic programs. Our contribution is a simpler technique than the previous works yet with a reasonable derivation power.", "paper_title": "Automatically inferring loop invariants via algorithmic learning", "paper_id": "WOS:000352509400006"}