{"auto_keywords": [{"score": 0.03380191138272064, "phrase": "constraint_matching_problem"}, {"score": 0.00481495049065317, "phrase": "simple_label_switching_algorithm"}, {"score": 0.004767261858417823, "phrase": "semisupervised_structural_svms"}, {"score": 0.004696608876994947, "phrase": "structured_output_learning"}, {"score": 0.0046269981365987915, "phrase": "labeled_data"}, {"score": 0.004581162468419365, "phrase": "real-world_applications"}, {"score": 0.004446349752828045, "phrase": "unlabeled_examples"}, {"score": 0.004272724011826495, "phrase": "classification_deals"}, {"score": 0.004209369306023422, "phrase": "small_number"}, {"score": 0.004167653403322565, "phrase": "labeled_examples"}, {"score": 0.004105850229681625, "phrase": "large_number"}, {"score": 0.004065156038847781, "phrase": "unlabeled_structured_data"}, {"score": 0.003906357144047631, "phrase": "semisupervised_structural_support_vector_machines"}, {"score": 0.0037913267098534887, "phrase": "optimization_problem"}, {"score": 0.0035891316580885665, "phrase": "loss_terms"}, {"score": 0.0035183010916001664, "phrase": "labeled_and_unlabeled_examples"}, {"score": 0.0034317185678527672, "phrase": "domain_constraints"}, {"score": 0.003347259612209552, "phrase": "simple_optimization_approach"}, {"score": 0.0032486392192981944, "phrase": "supervised_learning_problem"}, {"score": 0.003075296862372287, "phrase": "structured_prediction"}, {"score": 0.002984665318717504, "phrase": "efficient_and_effective_label_switching_method"}, {"score": 0.0028966970007550798, "phrase": "alternating_optimization"}, {"score": 0.0028113140998735366, "phrase": "deterministic_annealing_framework"}, {"score": 0.0027420820738468577, "phrase": "effective_constraint_matching"}, {"score": 0.002701361707441567, "phrase": "poor_local_minima"}, {"score": 0.00239657981537094, "phrase": "structured_output_learning_problem"}, {"score": 0.0022913497040895586, "phrase": "benchmark_sequence_labeling_data_sets"}, {"score": 0.002168975681697056, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "comparable_generalization_performance"}], "paper_keywords": [""], "paper_abstract": "In structured output learning, obtaining labeled data for real-world applications is usually costly, while unlabeled examples are available in abundance. Semisupervised structured classification deals with a small number of labeled examples and a large number of unlabeled structured data. In this work, we consider semisupervised structural support vector machines with domain constraints. The optimization problem, which in general is not convex, contains the loss terms associated with the labeled and unlabeled examples, along with the domain constraints. We propose a simple optimization approach that alternates between solving a supervised learning problem and a constraint matching problem. Solving the constraint matching problem is difficult for structured prediction, and we propose an efficient and effective label switching method to solve it. The alternating optimization is carried out within a deterministic annealing framework, which helps in effective constraint matching and avoiding poor local minima, which are not very useful. The algorithm is simple and easy to implement. Further, it is suitable for any structured output learning problem where exact inference is available. Experiments on benchmark sequence labeling data sets and a natural language parsing data set show that the proposed approach, though simple, achieves comparable generalization performance.", "paper_title": "A Simple Label Switching Algorithm for Semisupervised Structural SVMs", "paper_id": "WOS:000361479200007"}