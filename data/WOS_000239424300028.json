{"auto_keywords": [{"score": 0.04325124255431721, "phrase": "additional_design_concerns"}, {"score": 0.015251017798080078, "phrase": "web_applications"}, {"score": 0.00481495049065317, "phrase": "additional_adaptation_concerns"}, {"score": 0.00436575511349828, "phrase": "navigation_design"}, {"score": 0.003700371064796848, "phrase": "additional_concerns"}, {"score": 0.002913650880082273, "phrase": "new_functionality"}, {"score": 0.0028084079003212947, "phrase": "entire_application"}, {"score": 0.0024842242921857705, "phrase": "component-based_implementation"}, {"score": 0.0023798115577749225, "phrase": "web_application"}, {"score": 0.0023079225317714815, "phrase": "presentation_generation_level"}, {"score": 0.0021441057555396013, "phrase": "high-level_specification"}], "paper_keywords": [""], "paper_abstract": "The design of Web applications traditionally relies heavily on the navigation design. The Web as it evolves now brings additional design concerns, such as onmi-presence, device-dependence, privacy, accessibility, localization etc. Many of these additional concerns are occurrences of user- or context-dependency, and are typically realized by transformations of the application (design) that embed adaptation in the navigation. In this paper we focus on how to extend an application with new functionality without having to redesign the entire application. If we can easily add functionality, we can separate additional design concerns and describe them independently. Using a component-based implementation we show how to extend a Web application to support additional design concerns at presentation generation level. Furthermore, we demonstrate how an Aspect-Oriented approach can support the high-level specification of these (additional) design concerns at a conceptual level.", "paper_title": "Considering additional adaptation concerns in the design of Web applications", "paper_id": "WOS:000239424300028"}