{"auto_keywords": [{"score": 0.048646471286469505, "phrase": "simulated_annealing"}, {"score": 0.048084597108476984, "phrase": "geometric_programming"}, {"score": 0.00481495049065317, "phrase": "task_allocation"}, {"score": 0.004756805752518494, "phrase": "optimization_of"}, {"score": 0.004727995968069753, "phrase": "distributed_embedded_systems"}, {"score": 0.004476399615305783, "phrase": "task_model"}, {"score": 0.004422325007817267, "phrase": "periodic_tasks"}, {"score": 0.004263972370406983, "phrase": "processor_nodes"}, {"score": 0.004061584718427419, "phrase": "time-triggered_protocol"}, {"score": 0.003988180913997414, "phrase": "industry-standard_bus_protocol"}, {"score": 0.003916098498242888, "phrase": "safety-critical_automotive_and_avionics"}, {"score": 0.0037301606780397456, "phrase": "integrated_optimization_framework"}, {"score": 0.00303319936111073, "phrase": "hierarchical_optimization_framework"}, {"score": 0.0029602552900111407, "phrase": "possible_task_allocation"}, {"score": 0.0029244418026475832, "phrase": "priority_assignment"}, {"score": 0.002636956926079255, "phrase": "bus_access_configurations"}, {"score": 0.002511600086227215, "phrase": "top-level_states"}, {"score": 0.002320449502337321, "phrase": "lower-level_states"}, {"score": 0.0021569129153653777, "phrase": "good_performance"}, {"score": 0.0021049977753042253, "phrase": "solution_quality"}], "paper_keywords": ["real-time", " embedded", " scheduling"], "paper_abstract": "We consider the task model of periodic tasks running on a network of processor nodes connected by a bus based on the time-triggered protocol, an industry-standard bus protocol designed for safety-critical automotive and avionics distributed embedded systems, and present an integrated optimization framework that jointly considers one or more of the following attributes: task-to-processor allocation, task priority assignment, task period assignment and bus access configuration. We adopt a hierarchical optimization framework, where each possible task allocation and priority assignment is treated as one top-level coarse-grained state, which may contain many lower-level fine-grained states defined by different task period assignments and bus access configurations. Simulated annealing is used to explore the top-level states, which calls a geometric programming solver as a subroutine to explore the lower-level states contained within a given top-level state. Performance evaluation shows that our framework has good performance in terms of solution quality and scalability.", "paper_title": "Task Allocation and Optimization of Distributed Embedded Systems with Simulated Annealing and Geometric Programming", "paper_id": "WOS:000280704000015"}