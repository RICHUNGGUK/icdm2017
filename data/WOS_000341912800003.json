{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "genus_graphs"}, {"score": 0.004618166136069052, "phrase": "directed_graph"}, {"score": 0.004392565073466714, "phrase": "orientable_surface"}, {"score": 0.00390792986752692, "phrase": "minimum_-cuts"}, {"score": 0.00347657813672945, "phrase": "time_algorithm"}, {"score": 0.003279039724748895, "phrase": "counting_sets"}, {"score": 0.0031448288291084, "phrase": "particular_integer_homology_class"}, {"score": 0.0028926147550022607, "phrase": "interesting_result"}, {"score": 0.002728166176898541, "phrase": "prior_results"}, {"score": 0.0024883835349005863, "phrase": "integer_homology"}, {"score": 0.0022133711375320244, "phrase": "minimum_cuts"}, {"score": 0.0021049977753042253, "phrase": "-minimum_cut"}], "paper_keywords": ["Topological graph theory", " Computational topology", " Minimum cuts"], "paper_abstract": "Let be a directed graph with vertices embedded on an orientable surface of genus with two designated vertices and . We show that computing the number of minimum -cuts in is fixed-parameter tractable in . Specifically, we give a time algorithm for this problem. Our algorithm requires counting sets of cycles in a particular integer homology class. That we can count these cycles is an interesting result in itself as there are no prior results that are fixed-parameter tractable and deal directly with integer homology. We also describe an algorithm which, after running our algorithm to count minimum cuts once, can sample an -minimum cut uniformly at random in time per sample.", "paper_title": "Counting and Sampling Minimum Cuts in Genus Graphs", "paper_id": "WOS:000341912800003"}