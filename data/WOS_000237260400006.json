{"auto_keywords": [{"score": 0.025437094858346478, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "supertree_problem"}, {"score": 0.0046390482426405324, "phrase": "phylogenetic_trees"}, {"score": 0.004211069233133584, "phrase": "single_tree"}, {"score": 0.003367611042980526, "phrase": "input_trees"}, {"score": 0.002944715025443487, "phrase": "minimum_number"}, {"score": 0.0024256208351516027, "phrase": "minimum-flip_problem"}, {"score": 0.002136651746284283, "phrase": "approximation_algorithms"}, {"score": 0.0021049977753042253, "phrase": "special_cases"}], "paper_keywords": ["phylogenetic tree", " supertree", " tree assembly", " NP-completeness"], "paper_abstract": "The input to a supertree problem is a collection of phylogenetic trees that intersect pairwise in their leaf sets; the goal is to construct a single tree that retains as much as possible of the information in the input. This task is complicated by inconsistencies due to errors. We consider the case where the input trees are rooted and are represented by the clusters they exhibit. The problem is to find the minimum number of flips needed to resolve all inconsistencies, where each flip moves a taxon into or out of a cluster. We prove that the minimum-flip problem is NP-complete, but show that it is fixed-parameter tractable and give approximation algorithms for special cases.", "paper_title": "Minimum-flip supertrees: Complexity and algorithms", "paper_id": "WOS:000237260400006"}