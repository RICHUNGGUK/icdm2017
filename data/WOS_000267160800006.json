{"auto_keywords": [{"score": 0.03658441415893551, "phrase": "optimal_tree"}, {"score": 0.00481495049065317, "phrase": "group_key_tree_management"}, {"score": 0.004582528208024817, "phrase": "optimal_structure"}, {"score": 0.004515004397496303, "phrase": "group_broadcast_problem"}, {"score": 0.004448471107649881, "phrase": "key_tree_model"}, {"score": 0.00419195822011581, "phrase": "optimal_key_tree"}, {"score": 0.003834548373258131, "phrase": "initial_setup_period"}, {"score": 0.003778004256546193, "phrase": "member_deletions"}, {"score": 0.003649277504586372, "phrase": "previous_works"}, {"score": 0.0035249212996297363, "phrase": "deletion_cost"}, {"score": 0.003176626803985225, "phrase": "semi-balance_property"}, {"score": 0.003023047748772801, "phrase": "running_time"}, {"score": 0.0027787638791664663, "phrase": "optimal_tree_structure"}, {"score": 0.0027513507830537165, "phrase": "insertion_cost"}, {"score": 0.0025668646315794947, "phrase": "internal_node"}, {"score": 0.0022675820982741347, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Key trees", " Group keys", " Optimality", " Updating cost"], "paper_abstract": "We study the optimal structure for the group broadcast problem where the key tree model is extensively used. The objective is usually to find an optimal key tree to minimize the cost based on certain assumptions. Under the assumption that n members arrive in the initial setup period and only member deletions are allowed after that period, previous works show that when only considering the deletion cost, the optimal tree can be computed in O(n(2)) time. In this paper, we first prove a semi-balance property for the optimal tree and use it to reduce the running time from C(n(2)) to O(log log n) multiplications of 0(log n)-bit integers. Then we Study the optimal tree structure when insertion cost is also considered. We show that the optimal tree is such a tree where any internal node has degree at most 7 and children of nodes with degree not equal to 2 or 3 are all leaves. Based on this result we give a dynamic programming algorithm with O(n(2)) time to compute the optimal tree. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Optimal tree structures for group key tree management considering insertion and deletion cost", "paper_id": "WOS:000267160800006"}