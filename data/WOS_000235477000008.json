{"auto_keywords": [{"score": 0.049584128839210984, "phrase": "buffer_overflow_attacks"}, {"score": 0.00481495049065317, "phrase": "embedded_system_integration"}, {"score": 0.004500414250942443, "phrase": "important_problem"}, {"score": 0.004407813106104401, "phrase": "embedded_systems"}, {"score": 0.004250302819248558, "phrase": "increasing_complexity"}, {"score": 0.004206338218873218, "phrase": "strict_requirements"}, {"score": 0.004162826481635768, "phrase": "off-the-shelf_software_components"}, {"score": 0.0039519004610213595, "phrase": "military_and_other_critical_applications"}, {"score": 0.0038106195546165574, "phrase": "effective_protection"}, {"score": 0.0036174746598098863, "phrase": "system_integrators"}, {"score": 0.0035245918797629804, "phrase": "software_components"}, {"score": 0.0031107911390188055, "phrase": "secure_call_instructions"}, {"score": 0.002674885993329912, "phrase": "hsdefender_technique"}, {"score": 0.002619748321217153, "phrase": "hardware_cost"}, {"score": 0.0023977833616015422, "phrase": "mibench"}, {"score": 0.0021049977753042253, "phrase": "previous_work"}], "paper_keywords": ["security", " buffer overflow attack", " embedded system", " hardware/software", " protection"], "paper_abstract": "With more embedded systems networked, it becomes an important problem to effectively defend embedded systems against buffer overflow attacks. Due to the increasing complexity and strict requirements, off-the-shelf software components are widely used in embedded systems, especially for military and other critical applications. Therefore, in addition to effective protection, we also need to provide an approach for system integrators to efficiently check whether software components have been protected. In this paper, we propose the HSDefender ( Hardware/Software Defender) technique to perform protection and checking together. Our basic idea is to design secure call instructions so systems can be secured and checking can be easily performed. In the paper, we classify buffer overflow attacks into two categories and provide two corresponding defending strategies. We analyze the HSDefender technique with respect to hardware cost, security, and performance. We experiment with our HSDefender technique on the SimpleScalar/ARM simulator with benchmarks from MiBench, an embedded benchmark suite. The results show that our HSDefender technique can defend a system against more types of buffer overflow attacks with less overhead compared with the previous work.", "paper_title": "Security protection and checking for embedded system integration against buffer overflow attacks via hardware/software", "paper_id": "WOS:000235477000008"}