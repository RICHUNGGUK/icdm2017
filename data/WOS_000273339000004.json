{"auto_keywords": [{"score": 0.0046650615456476155, "phrase": "alphabet_sigma"}, {"score": 0.004628320711601916, "phrase": "tree_t"}, {"score": 0.0045557008859819234, "phrase": "arbitrary_degree"}, {"score": 0.004413846562278824, "phrase": "compressed_storage_scheme"}, {"score": 0.004327429667024575, "phrase": "basic_navigational_operations"}, {"score": 0.004276390289178831, "phrase": "immediate_neighbors"}, {"score": 0.0037087324991876727, "phrase": "novel_approach"}, {"score": 0.0034129490818185595, "phrase": "well-knownburrows-wheeler_transform"}, {"score": 0.003306559295382181, "phrase": "xbw"}, {"score": 0.0031782087629067686, "phrase": "labeled_tree_t"}, {"score": 0.0030068193773923387, "phrase": "first_time"}, {"score": 0.0027559226203857316, "phrase": "navigational_and_path-search_operations"}, {"score": 0.002556109032208553, "phrase": "new_results"}, {"score": 0.0025059724686541263, "phrase": "tree_compression"}, {"score": 0.0024277864377045995, "phrase": "application_contexts"}, {"score": 0.0022876877275935757, "phrase": "compressed_index"}, {"score": 0.0022696277881969896, "phrase": "xml_documents"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Theory", " Burrows-Wheeler transform", " labeled tree compression", " labeled tree indexing", " path searching", " tree navigation", " XML compression", " XML indexing"], "paper_abstract": "Consider an ordered, static tree T where each node has a label from alphabet Sigma. Tree T may be of arbitrary degree and shape. Our goal is designing a compressed storage scheme of T that supports basic navigational operations among the immediate neighbors of a node (i.e. parent, ith child, or any child with some label, ...) as well as more sophisticated path-based search operations over its labeled structure. We present a novel approach to this problem by designing what we call the XBW-transform of the tree in the spirit of the well-knownBurrows-Wheeler transform for strings [1994]. The XBW-transform uses path-sorting to linearize the labeled tree T into two coordinated arrays, one capturing the structure and the other the labels. For the first time, by using the properties of the XBW-transform, our compressed indexes go beyond the information-theoretic lower bound, and support navigational and path-search operations over labeled trees within (near-) optimal time bounds and entropy-bounded space. Our XBW-transform is simple and likely to spur new results in the theory of tree compression and indexing, as well as interesting application contexts. As an example, we use the XBW-transform to design and implement a compressed index for XML documents whose compression ratio is significantly better than the one achievable by state-of-the-art tools, and its query time performance is order of magnitudes faster.", "paper_title": "Compressing and Indexing Labeled Trees, with Applications", "paper_id": "WOS:000273339000004"}