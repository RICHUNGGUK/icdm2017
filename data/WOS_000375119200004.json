{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graphs"}, {"score": 0.004512814529823301, "phrase": "e._g."}, {"score": 0.004440277230269978, "phrase": "alexander_the_great_or"}, {"score": 0.004094639048362357, "phrase": "strong_units"}, {"score": 0.0038375280115736958, "phrase": "strategic_importance"}, {"score": 0.0037150687722055727, "phrase": "moving_forces"}, {"score": 0.00342568771304873, "phrase": "next_location"}, {"score": 0.002796782643988021, "phrase": "general_graphs"}, {"score": 0.002685558057339722, "phrase": "minimum_number"}, {"score": 0.002578745296475411, "phrase": "optimal_deployment"}, {"score": 0.0024761702541879213, "phrase": "optimal_polynomial_time"}, {"score": 0.0022101055924375725, "phrase": "arbitrary_graph_g_results"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution"}], "paper_keywords": ["deployment", " networks", " optimization", " algorithms"], "paper_abstract": "Conquerors of old (like, e. g., Alexander the Great or Ceasar) had to solve the following deployment problem. Sufficiently strong units had to be stationed at locations of strategic importance, and the moving forces had to be strong enough to advance to the next location. To the best of our knowledge we are the first to consider the (off-line) graph version of this problem. While being NP-hard for general graphs, for trees the minimum number of agents and an optimal deployment can be computed in optimal polynomial time. Moreover, the optimal solution for the minimum spanning tree of an arbitrary graph G results in a 2-approximation of the optimal solution for G.", "paper_title": "Strategic Deployment in Graphs", "paper_id": "WOS:000375119200004"}