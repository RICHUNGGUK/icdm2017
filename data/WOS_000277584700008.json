{"auto_keywords": [{"score": 0.048636009815037955, "phrase": "data_structure"}, {"score": 0.04654596457552869, "phrase": "fixed_source"}, {"score": 0.00481495049065317, "phrase": "approximate_shortest_paths"}, {"score": 0.004766090327062509, "phrase": "anisotropic_regions."}, {"score": 0.004598933498016774, "phrase": "approximate_shortest_path_queries"}, {"score": 0.004529093447865156, "phrase": "planar_subdivision"}, {"score": 0.0042819270655224916, "phrase": "real_number"}, {"score": 0.004007083686875716, "phrase": "possibly_asymmetric_convex_distance_function"}, {"score": 0.0038467574225322086, "phrase": "concentric_unit_euclidean_disk"}, {"score": 0.003769006950727621, "phrase": "concentric_euclidean_disk"}, {"score": 0.0036740168936985314, "phrase": "different_convex_distance_functions"}, {"score": 0.003581412258960711, "phrase": "different_faces"}, {"score": 0.003088384809415812, "phrase": "query_destination"}, {"score": 0.0023798115577749225, "phrase": "space_bounds"}, {"score": 0.0021817065300196634, "phrase": "geometric_parameter"}, {"score": 0.0021049977753042253, "phrase": "minimum_angle"}], "paper_keywords": ["shortest path", " anisotropic regions", " convex distance functions", " approximation algorithms"], "paper_abstract": "We present a data structure for answering approximate shortest path queries in a planar subdivision from a fixed source. Let rho >= 1 be a real number. Distances in each face of this subdivision are measured by a possibly asymmetric convex distance function whose unit disk is contained in a concentric unit Euclidean disk and contains a concentric Euclidean disk with radius 1/rho. Different convex distance functions may be used for different faces, and obstacles are allowed. Let e be any number strictly between 0 and 1. Our data structure returns a (1 + epsilon) approximation of the shortest path cost from the fixed source to a query destination in O(log rho n/epsilon) time. Afterwards, a (1 + epsilon)- approximate shortest path can be reported in O(log n) time plus the complexity of the path. The data structure uses O(rho(2)n(3)/epsilon(2) log rho n/epsilon) space and can be built in O(rho(2)n(3)/epsilon(2) (log rho n/epsilon)(2)) time. Our time and space bounds do not depend on any other parameter; in particular, they do not depend on any geometric parameter of the subdivision such as the minimum angle.", "paper_title": "QUERYING APPROXIMATE SHORTEST PATHS IN ANISOTROPIC REGIONS", "paper_id": "WOS:000277584700008"}