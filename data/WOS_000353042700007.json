{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "source_code_reuse"}, {"score": 0.046166196857162826, "phrase": "content_reuse"}, {"score": 0.04279516348007121, "phrase": "potential_cases"}, {"score": 0.004756805752518494, "phrase": "large-scale_academic_environments"}, {"score": 0.004342430078306461, "phrase": "source_code"}, {"score": 0.003988180913997414, "phrase": "large-scale_environments"}, {"score": 0.003916098498242888, "phrase": "good_example"}, {"score": 0.0037988336463795963, "phrase": "massive_courses"}, {"score": 0.003343336516033681, "phrase": "quasi_real-time"}, {"score": 0.0032431667821391044, "phrase": "automatic_systems"}, {"score": 0.003051713660488494, "phrase": "source_code_reuse_detection"}, {"score": 0.0028367868542874737, "phrase": "character_level"}, {"score": 0.002636956926079255, "phrase": "huge_number"}, {"score": 0.0025423706961391034, "phrase": "better_results"}, {"score": 0.002392188222609101, "phrase": "multiple_sets"}, {"score": 0.0023632309822037637, "phrase": "source_codes"}, {"score": 0.0022371907579775796, "phrase": "identifier_names"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["source code reuse", " plagiarism detection", " authoring tools and methods", " interactive learning environments", " programming and programming languages"], "paper_abstract": "The advent of the Internet has caused an increase in content reuse, including source code. The purpose of this research is to uncover potential cases of source code reuse in large-scale environments. A good example is academia, where massive courses are taught to students who must demonstrate that they have acquired the knowledge. The need of detecting content reuse in quasi real-time encourages the development of automatic systems such as the one described in this paper for source code reuse detection. Our approach is based on the comparison of programs at character level. It is able to find potential cases of reuse across a huge number of assignments. It achieved better results than JPlag, the most used online system to find similarities among multiple sets of source codes. The most common obfuscation operations we found were changes in identifier names, comments and indentation. (c) 2014 Wiley Periodicals, Inc. Comput Appl Eng Educ 23:383-390, 2015; View this article online at ; DOI", "paper_title": "Uncovering Source Code Reuse in Large-Scale Academic Environments", "paper_id": "WOS:000353042700007"}