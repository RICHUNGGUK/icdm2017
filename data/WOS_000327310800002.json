{"auto_keywords": [{"score": 0.004815316573636748, "phrase": "gpu"}, {"score": 0.004721893473387288, "phrase": "streaming_algorithm"}, {"score": 0.00466085208934021, "phrase": "high-resolution_cloth_simulation"}, {"score": 0.004511663118269957, "phrase": "gpu-based_streaming_algorithm"}, {"score": 0.004367228576339114, "phrase": "accurate_cloth_simulation"}, {"score": 0.00419997182602686, "phrase": "cloth_simulation_pipeline"}, {"score": 0.004118751115632515, "phrase": "time_integration"}, {"score": 0.004065474891313382, "phrase": "collision_detection"}, {"score": 0.004012885020428863, "phrase": "collision_response"}, {"score": 0.003935267970727093, "phrase": "velocity_updating"}, {"score": 0.0038843558517333327, "phrase": "gpu-based_kernels"}, {"score": 0.0031741489723036255, "phrase": "streaming_pipeline"}, {"score": 0.003012919635505122, "phrase": "high_throughput"}, {"score": 0.002973904674745238, "phrase": "many-core_gpus"}, {"score": 0.0028228178454284825, "phrase": "high-fidelity_simulation"}, {"score": 0.0027681550491613603, "phrase": "cloth_mesh"}, {"score": 0.0025934566395017424, "phrase": "parallel_performance"}, {"score": 0.0023062508214156123, "phrase": "magnitude_performance_improvement"}, {"score": 0.002232261129770455, "phrase": "single-threaded_cpu-based_algorithm"}, {"score": 0.00214659338413584, "phrase": "magnitude_improvement"}], "paper_keywords": [""], "paper_abstract": "We present a GPU-based streaming algorithm to perform high-resolution and accurate cloth simulation. We map all the components of cloth simulation pipeline, including time integration, collision detection, collision response, and velocity updating to GPU-based kernels and data structures. Our algorithm perform intra-object and inter-object collisions, handles contacts and friction, and is able to accurately simulate folds and wrinkles. We describe the streaming pipeline and address many issues in terms of obtaining high throughput on many-core GPUs. In practice, our algorithm can perform high-fidelity simulation on a cloth mesh with 2M triangles using 3GB of GPU memory. We highlight the parallel performance of our algorithm on three different generations of GPUs. On a high-end NVIDIA Tesla K20c, we observe up to two orders of magnitude performance improvement as compared to a single-threaded CPU-based algorithm, and about one order of magnitude improvement over a 16-core CPU-based parallel implementation.", "paper_title": "A GPU-based Streaming Algorithm for High-Resolution Cloth Simulation", "paper_id": "WOS:000327310800002"}