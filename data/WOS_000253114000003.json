{"auto_keywords": [{"score": 0.03738892026317543, "phrase": "pointcut_definitions"}, {"score": 0.00481495049065317, "phrase": "logic_metalanguage"}, {"score": 0.004720419202969916, "phrase": "contemporary_aspect-oriented_languages"}, {"score": 0.004303127794432684, "phrase": "source_code"}, {"score": 0.0039748192550806815, "phrase": "profound_understanding"}, {"score": 0.003896717568943166, "phrase": "entire_application's_implementation"}, {"score": 0.0033245147666408157, "phrase": "aspect-oriented_programming_system"}, {"score": 0.0032376465741070274, "phrase": "logic-based_pointcut_language"}, {"score": 0.003010250522930773, "phrase": "application-specific_pointcut_predicates"}, {"score": 0.002893001738785978, "phrase": "application-specific_model"}, {"score": 0.002761954897932813, "phrase": "base_program_developers"}, {"score": 0.002707620139970122, "phrase": "aspect_developers"}, {"score": 0.0023096222276192194, "phrase": "intricate_implementation_details"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["aspect-oriented programming", " logic metaprogramming", " pointcut languages"], "paper_abstract": "In contemporary aspect-oriented languages, pointcuts are usually specified directly in terms of the structure of the source code. The definition of such low-level pointcuts requires aspect developers to have a profound understanding of the entire application's implementation and often leads to complex, fragile and hard-to-maintain pointcut definitions. To resolve these issues, we present an aspect-oriented programming system that features a logic-based pointcut language that is open such that it can be extended with application-specific pointcut predicates. These predicates define an application-specific model that serves as a contract that base program developers provide and aspect developers can depend upon. As a result, pointcuts can be specified in terms of this more high-level model of the application which confines all intricate implementation details that are otherwise exposed in the pointcut definitions themselves. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Application-specific models and pointcuts using a logic metalanguage", "paper_id": "WOS:000253114000003"}