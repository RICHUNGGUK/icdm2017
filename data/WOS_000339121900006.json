{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "de_novo_mutations"}, {"score": 0.004653485665080485, "phrase": "-exome_sequencing"}, {"score": 0.004548848077202625, "phrase": "powerful_approach"}, {"score": 0.004497410940849537, "phrase": "disease-associated_genes"}, {"score": 0.004379631619412168, "phrase": "accurate_detection"}, {"score": 0.004313713204732449, "phrase": "sequencing_data"}, {"score": 0.004264923517966271, "phrase": "critical_step"}, {"score": 0.004232702713825967, "phrase": "triobased_genetic_studies"}, {"score": 0.004200724305692705, "phrase": "existing_bioinformatic_approaches"}, {"score": 0.004153207234462926, "phrase": "high_error_rates"}, {"score": 0.004106225442735525, "phrase": "sequencing_artifacts"}, {"score": 0.004075198669927074, "phrase": "alignment_issues"}, {"score": 0.003953409087444568, "phrase": "novo_mutations"}, {"score": 0.0038644521996539466, "phrase": "downstream_validation"}, {"score": 0.003748937184382714, "phrase": "current_approaches"}, {"score": 0.0036368625017975343, "phrase": "effective_filters"}, {"score": 0.0035685175471526823, "phrase": "spurious_de_novo_mutations"}, {"score": 0.0035281264325950556, "phrase": "unsolved_challenge"}, {"score": 0.003371066990851953, "phrase": "whole_genome"}, {"score": 0.0033329032920236994, "phrase": "alignment_context"}, {"score": 0.0032209766681045365, "phrase": "true_de_novo_mutations"}, {"score": 0.0031246358910995316, "phrase": "machine-learning_approach"}, {"score": 0.0030658872249549893, "phrase": "true_or_false_de_novo_mutations"}, {"score": 0.002951673109860487, "phrase": "de_novo_mutation_filter"}, {"score": 0.002841701708055512, "phrase": "classification_algorithm"}, {"score": 0.002756673832301398, "phrase": "experimentally_validated_true_and_false_de_novo_mutations"}, {"score": 0.0027151161550531206, "phrase": "collected_false_de_novo_mutations"}, {"score": 0.0026843584448921565, "phrase": "in-house_large-scale_exomesequencing_project"}, {"score": 0.0026438880533289893, "phrase": "dnmfilter"}, {"score": 0.0025843206540392184, "phrase": "relative_importance"}, {"score": 0.002564763827975352, "phrase": "different_sequence_features"}, {"score": 0.0025357050267224715, "phrase": "classification_accuracy"}, {"score": 0.002288519595829552, "phrase": "mutation_detection"}, {"score": 0.002254003531073337, "phrase": "effective_filtering_approach"}, {"score": 0.0022200068884960836, "phrase": "false_discovery_rate"}, {"score": 0.002153540857619362, "phrase": "software_dnmfilter"}, {"score": 0.0021050559200607778, "phrase": "java"}], "paper_keywords": [""], "paper_abstract": "Motivation: Whole-genome and -exome sequencing on parent-offspring trios is a powerful approach to identifying disease-associated genes by detecting de novo mutations in patients. Accurate detection of de novo mutations from sequencing data is a critical step in triobased genetic studies. Existing bioinformatic approaches usually yield high error rates due to sequencing artifacts and alignment issues, which may either miss true de novo mutations or call too many false ones, making downstream validation and analysis difficult. In particular, current approaches have much worse specificity than sensitivity, and developing effective filters to discriminate genuine from spurious de novo mutations remains an unsolved challenge. Results: In this article, we curated 59 sequence features in whole genome and exome alignment context which are considered to be relevant to discriminating true de novo mutations from artifacts, and then employed a machine-learning approach to classify candidates as true or false de novo mutations. Specifically, we built a classifier, named De Novo Mutation Filter (DNMFilter), using gradient boosting as the classification algorithm. We built the training set using experimentally validated true and false de novo mutations as well as collected false de novo mutations from an in-house large-scale exomesequencing project. We evaluated DNMFilter's theoretical performance and investigated relative importance of different sequence features on the classification accuracy. Finally, we applied DNMFilter on our in-house whole exome trios and one CEU trio from the 1000 Genomes Project and found that DNMFilter could be coupled with commonly used de novo mutation detection approaches as an effective filtering approach to significantly reduce false discovery rate without sacrificing sensitivity. Availability: The software DNMFilter implemented using a combination of Java and R is freely available from the website at http:// humangenome. duke. edu/software.", "paper_title": "A gradient-boosting approach for filtering de novo mutations in parent-offspring trios", "paper_id": "WOS:000339121900006"}