{"auto_keywords": [{"score": 0.04942444706912143, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "structured_real-time_computations"}, {"score": 0.004620093797504386, "phrase": "retinal_and_cortical_vision_processes"}, {"score": 0.00443308765153716, "phrase": "standard_personal_computers"}, {"score": 0.004224418476742716, "phrase": "shader_programs"}, {"score": 0.003970439654470374, "phrase": "parallel_computations"}, {"score": 0.003889206369317587, "phrase": "cpu_side"}, {"score": 0.003809628721278519, "phrase": "gpu_side"}, {"score": 0.003731673223879279, "phrase": "overall_computational_power"}, {"score": 0.0036553070575015344, "phrase": "non-graphical_applications"}, {"score": 0.003555902292752528, "phrase": "main_processor"}, {"score": 0.003483120583663528, "phrase": "heavy_work"}, {"score": 0.0034118234596993836, "phrase": "generic_library"}, {"score": 0.0031845067058084583, "phrase": "modern_hardware"}, {"score": 0.0029114187110123105, "phrase": "retinal_and_cortical_simulation"}, {"score": 0.002793380001054064, "phrase": "sample_application"}, {"score": 0.002680114113899346, "phrase": "correct_approximation"}, {"score": 0.002643386043540555, "phrase": "real_center"}, {"score": 0.002571429085596686, "phrase": "middle_temporal_cells"}, {"score": 0.0023999697562763433, "phrase": "raw_input_pictures"}, {"score": 0.002302619021497886, "phrase": "interconnection_complexity"}, {"score": 0.002224510044064184, "phrase": "vision_framework"}], "paper_keywords": [""], "paper_abstract": "Most graphics cards in standard personal computers are now equipped with several pixel pipelines running shader programs. Taking advantage of this technology by transferring parallel computations from the CPU side to the GPU side increases the overall computational power even in non-graphical applications by freeing the main processor from an heavy work. A generic library is presented to show how anyone can benefit from modern hardware by combining various techniques with little hardware specific programming skills. Its shader implementation is applied to retinal and cortical simulation. The purpose of this sample application is not to provide a correct approximation of real center surround ganglion or middle temporal cells, but to illustrate how easily intertwined spatiotemporal filters can be applied on raw input pictures in real-time. Requirements and interconnection complexity really depend on the vision framework adopted, therefore various hypothesis that may benefit from such a library are introduced.", "paper_title": "A generic library for structured real-time computations: GPU implementation applied to retinal and cortical vision processes", "paper_id": "WOS:000277415700009"}