{"auto_keywords": [{"score": 0.03203766879664707, "phrase": "hasse_diagrams"}, {"score": 0.00481495049065317, "phrase": "folded_hasse"}, {"score": 0.004704699244406775, "phrase": "combined_traces"}, {"score": 0.00456159659731398, "phrase": "concurrent_behaviours"}, {"score": 0.0043215158337835706, "phrase": "language_theory"}, {"score": 0.0036459007842756983, "phrase": "weak_causality"}, {"score": 0.0033228699494959172, "phrase": "efficient_data_structures"}, {"score": 0.002846647336160784, "phrase": "partial_orders"}, {"score": 0.002675797331220082, "phrase": "efficient_on-line_algorithm"}, {"score": 0.0026144282611001057, "phrase": "hasse"}, {"score": 0.002554406040896888, "phrase": "language_theoretic_representations"}, {"score": 0.0022394839933089074, "phrase": "basic_operations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Comtrace", " Trace", " Hasse diagram", " Stratified order structure", " Partial order", " Concurrency", " Causality", " Weak causality", " Independence", " Algorithmic complexity", " Petri net", " Inhibitor arc"], "paper_abstract": "To represent concurrent behaviours one can use concepts originating from language theory, including traces and comtraces. Traces can express notions such as concurrency and causality, whereas comtraces can also capture weak causality and simultaneity. This paper is concerned with the development of efficient data structures and algorithms for manipulating comtraces. We introduce and investigate folded Hasse diagrams of comtraces which generalise Hasse diagrams defined for partial orders and traces. We also develop an efficient on-line algorithm for deriving Hasse diagrams from language theoretic representations of comtraces. Finally, we briefly discuss how folded Hasse diagrams could be used to implement efficiently some basic operations on comtraces. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Folded Hasse diagrams of combined traces", "paper_id": "WOS:000331351600010"}