{"auto_keywords": [{"score": 0.04913171677961093, "phrase": "feasible_solution"}, {"score": 0.011678574400614478, "phrase": "artificial_variables"}, {"score": 0.00481495049065317, "phrase": "mip_infeasibility"}, {"score": 0.004782977628406988, "phrase": "local_branching"}, {"score": 0.004672727518631859, "phrase": "generic_mixed-integer_linear_program"}, {"score": 0.0046417153443271365, "phrase": "mip"}, {"score": 0.004035385456773232, "phrase": "hybrid_algorithm"}, {"score": 0.003981928669805484, "phrase": "feasibility_pump_method"}, {"score": 0.0037750632698768704, "phrase": "overall_procedure"}, {"score": 0.003614895644619489, "phrase": "original_lp"}, {"score": 0.0035197152758635344, "phrase": "known_infeasible_starting_solution"}, {"score": 0.0034614999671904964, "phrase": "augmented_model"}, {"score": 0.0031109870010753663, "phrase": "minimum-cardinality_set"}, {"score": 0.003049318402401662, "phrase": "infeasible_mip"}, {"score": 0.0030189426536422577, "phrase": "feasible_one-a_very_important_piece"}, {"score": 0.0029492339651639734, "phrase": "infeasible_mip_models"}, {"score": 0.002900426826591769, "phrase": "practical_applications"}, {"score": 0.0028715299874549245, "phrase": "good_feasible_solution"}, {"score": 0.002842920225545139, "phrase": "main_order"}, {"score": 0.0027680095380207756, "phrase": "local_search_methods"}, {"score": 0.0026593184154220123, "phrase": "fixed_point"}, {"score": 0.0024627509513027923, "phrase": "initial_slightly_infeasible_solution"}, {"score": 0.0023036445575469046, "phrase": "general-purpose_mlps-namely_feasibility_pump"}, {"score": 0.00216923754570397, "phrase": "initial_feasible_solution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["mixed-integer programs", " heuristics", " feasible solutions"], "paper_abstract": "Finding a feasible solution to a generic mixed-integer linear program (MIP) is often a very difficult task. Recently, two heuristic approaches called feasibility pump and local branching have been proposed to address the problem of finding a feasible solution and improving it, respectively. In this paper we introduce and analyze computationally a hybrid algorithm that uses the feasibility pump method to provide, at very low computational cost, an initial (possibly infeasible) solution to the local branching procedure. The overall procedure is reminiscent of Phase I of the two phase simplex algorithm, in which the original LP is augmented with artificial variables that make a known infeasible starting solution feasible and then the augmented model is solved to iteratively reduce that infeasibility by driving the values of the artificial variables to zero. As such, our approach can also to used to find (heuristically) a minimum-cardinality set of constraints whose removal converts an infeasible MIP into a feasible one-a very important piece of information in the analysis of infeasible MIP models. Often, in practical applications finding a good feasible solution is the main order of business. At this purpose, local search methods generally start by a feasible solution and eventually improve it until a fixed point is reached and the algorithm is aborted. Sometimes, however, finding such a first feasible solution is hard and can be unnecessary since an initial slightly infeasible solution can be repaired to become feasible and eventually improved. We propose to integrate in the above spirit two recent algorithms for general-purpose MlPs-namely feasibility pump and local branching-which were originally proposed to separately cope with the issues of finding an initial feasible solution and improve it. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "Repairing MIP infeasibility through local branching", "paper_id": "WOS:000251126000005"}