{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "generalized_buchi_automata"}, {"score": 0.0431872167057894, "phrase": "multiple_acceptance_conditions"}, {"score": 0.040320894196375995, "phrase": "fair-simulation_relation"}, {"score": 0.004456872931482395, "phrase": "fair-simulation_minimization"}, {"score": 0.004174677062711731, "phrase": "buchi_automaton"}, {"score": 0.004052358316137446, "phrase": "fair_simulation"}, {"score": 0.0028354207806133127, "phrase": "acceptance_sets"}, {"score": 0.0027852126030055305, "phrase": "delayed_simulation"}, {"score": 0.0027034948760997564, "phrase": "existing_definition"}, {"score": 0.0023433334920926713, "phrase": "delayed-simulation_relation"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "We consider the problem of minimization of generalized Buchi automata. We extend fair-simulation minimization and delayed-simulation minimization to the case where the Buchi automaton has multiple acceptance conditions. For fair simulation, we show how to efficiently compute the fair-simulation relation while maintaining the structure of the automaton. We then use the fair-simulation relation to merge states and remove transitions. Our fair-simulation algorithm works in time O(mn(3) k(2)) where Tn is the number of transitions, n is the number of states, and k is the number of acceptance sets. For delayed simulation, we extend the existing definition to the case of multiple acceptance conditions. We show that our definition can indeed be used for minimization and give an algorithm that computes the delayed-simulation relation. Our delayed-simulation algorithm works in time O(mn(3) k). We implemented the two algorithms and report on experimental results.", "paper_title": "Minimizing generalized Buchi automata", "paper_id": "WOS:000240257000005"}