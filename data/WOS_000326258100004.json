{"auto_keywords": [{"score": 0.03695898751500435, "phrase": "code_coverage"}, {"score": 0.008863017860304252, "phrase": "test_cases"}, {"score": 0.00860534068366999, "phrase": "bce"}, {"score": 0.00481495049065317, "phrase": "software_testing_complexity"}, {"score": 0.004751972849082626, "phrase": "complexity_measures"}, {"score": 0.004659040279237174, "phrase": "software_artifacts"}, {"score": 0.00433350214927936, "phrase": "test_phase"}, {"score": 0.004138237651024009, "phrase": "new_measure"}, {"score": 0.0034751895536268953, "phrase": "automatically_generated_test_suite"}, {"score": 0.0033294278310493524, "phrase": "markov_model"}, {"score": 0.0028703465154343373, "phrase": "theoretical_validation"}, {"score": 0.0028141081648971754, "phrase": "empirical_validation_study"}, {"score": 0.002713842991944533, "phrase": "previously_existing_measures"}, {"score": 0.00242590924077914, "phrase": "existing_complexity_measures"}, {"score": 0.002386218074955624, "phrase": "high_correlation"}, {"score": 0.002316399538424667, "phrase": "bce_measure"}, {"score": 0.0021470954708827125, "phrase": "automatic_test_case_generator"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Evolutionary testing", " Complexity", " Branch coverage", " Search based software engineering", " Evolutionary algorithms", " Testability"], "paper_abstract": "Context: Complexity measures provide us some information about software artifacts. A measure of the difficulty of testing a piece of code could be very useful to take control about the test phase. Objective: The aim in this paper is the definition of a new measure of the difficulty for a computer to generate test cases, we call it Branch Coverage Expectation (BCE). We also analyze the most common complexity measures and the most important features of a program. With this analysis we are trying to discover whether there exists a relationship between them and the code coverage of an automatically generated test suite. Method: The definition of this measure is based on a Markov model of the program. This model is used not only to compute the BCE, but also to provide an estimation of the number of test cases needed to reach a given coverage level in the program. In order to check our proposal, we perform a theoretical validation and we carry out an empirical validation study using 2600 test programs. Results: The results show that the previously existing measures are not so useful to estimate the difficulty of testing a program, because they are not highly correlated with the code coverage. Our proposed measure is much more correlated with the code coverage than the existing complexity measures. Conclusion: The high correlation of our measure with the code coverage suggests that the BCE measure is a very promising way of measuring the difficulty to automatically test a program. Our proposed measure is useful for predicting the behavior of an automatic test case generator. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Estimating software testing complexity", "paper_id": "WOS:000326258100004"}