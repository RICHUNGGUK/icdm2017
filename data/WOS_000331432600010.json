{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_component_architectures"}, {"score": 0.004761132425263795, "phrase": "service-oriented_applications"}, {"score": 0.004067635935640407, "phrase": "design_feasibility"}, {"score": 0.00397714507836836, "phrase": "design_alternatives"}, {"score": 0.003888659470009222, "phrase": "potential_failure_areas"}, {"score": 0.00378080526397273, "phrase": "acceptable_reliability_level"}, {"score": 0.003738502710504415, "phrase": "environmental_extremes"}, {"score": 0.0034944094552943, "phrase": "service-oriented_application"}, {"score": 0.003378385493203297, "phrase": "lightweight_formal_language_sca-asm."}, {"score": 0.0033405704229694656, "phrase": "sca-asm_component_model"}, {"score": 0.003247868216333148, "phrase": "oasis_standard_service_component_architecture"}, {"score": 0.0032115093493071366, "phrase": "heterogeneous_service_assembly"}, {"score": 0.003140004304719746, "phrase": "formal_method"}, {"score": 0.0031223774204093713, "phrase": "abstract_state_machines"}, {"score": 0.003087419032091453, "phrase": "modeling_service_behavior"}, {"score": 0.002951444412262927, "phrase": "abstract_but_executable_way"}, {"score": 0.0029020077365708966, "phrase": "proposed_method"}, {"score": 0.002853396755102163, "phrase": "automatic_and_compositional_means"}, {"score": 0.00266693888510356, "phrase": "reliability_model"}, {"score": 0.0026222551419772867, "phrase": "sca_assembly"}, {"score": 0.0025928815987676535, "phrase": "sca-asm_components"}, {"score": 0.0024786330057813225, "phrase": "sca-asm_component"}, {"score": 0.0023962545023307937, "phrase": "architecture-based_and_path-based_reliability_models"}, {"score": 0.0022396019251440724, "phrase": "proposed_approach"}, {"score": 0.0021773853011112882, "phrase": "state-of-the_art_bpel-based_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software reliability models", " Service Component Architecture", " Abstract State Machines"], "paper_abstract": "Service-oriented applications are dynamically built by assembling existing, loosely coupled, distributed, and heterogeneous services. Predicting their reliability is very important to appropriately drive the selection and assembly of services, to evaluate design feasibility, to compare design alternatives, to identify potential failure areas and to maintain an acceptable reliability level under environmental extremes. This article presents a model for predicting reliability of a service-oriented application based on its architecture specification in the lightweight formal language SCA-ASM. The SCA-ASM component model is based on the OASIS standard Service Component Architecture for heterogeneous service assembly and on the formal method Abstract State Machines for modeling service behavior, interactions, and orchestration in an abstract but executable way. The proposed method provides an automatic and compositional means for predicting reliability both at system-level and component-level by combining a reliability model for an SCA assembly involving SCA-ASM components, and a reliability model of an SCA-ASM component. It exploits ideas from architecture-based and path-based reliability Models. A set of experimental results shows the effectiveness of the proposed approach and its comparison with a state-of-the art BPEL-based approach. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "A reliability model for Service Component Architectures", "paper_id": "WOS:000331432600010"}