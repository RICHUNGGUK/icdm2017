{"auto_keywords": [{"score": 0.04919852817745961, "phrase": "name_parameterization"}, {"score": 0.01515275491232451, "phrase": "higher-order_processes"}, {"score": 0.00481495049065317, "phrase": "computation_power"}, {"score": 0.0029152570900178956, "phrase": "higher-order_setting"}, {"score": 0.0025592969422491476, "phrase": "complete_model"}, {"score": 0.002331909406363425, "phrase": "elementary_interactive_model"}, {"score": 0.0022889103976458437, "phrase": "built-in_recursive_functions"}, {"score": 0.0021049977753042253, "phrase": "well-known_pi-calculus"}], "paper_keywords": ["Parameterization", " Computation", " Higher-order", " Processes"], "paper_abstract": "Parameterization extends higher-order processes with the capability of abstraction ( akin to that in lambda-calculus), and is known to be able to enhance the expressiveness. This paper focuses on the parameterization of names, i.e. a construct that maps a name to a process, in the higher-order setting. We provide two results concerning its computation capacity. First, name parameterization brings up a complete model, in the sense that it can express an elementary interactive model with built-in recursive functions. Second, we compare name parameterization with the well-known pi-calculus, and provide two encodings between them.", "paper_title": "On the Computation Power of Name Parameterization in Higher-order Processes", "paper_id": "WOS:000367339200009"}