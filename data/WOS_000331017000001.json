{"auto_keywords": [{"score": 0.030361842463983282, "phrase": "register_values"}, {"score": 0.00481495049065317, "phrase": "speculative_chip_multiprocessors"}, {"score": 0.004694700982410345, "phrase": "register-level_communication"}, {"score": 0.004577440795549049, "phrase": "thread-level_speculation"}, {"score": 0.004463096299091981, "phrase": "chip_multiprocessors"}, {"score": 0.004260800171269249, "phrase": "open_literature"}, {"score": 0.004207230913063179, "phrase": "first_part"}, {"score": 0.004084829853870028, "phrase": "tls_support"}, {"score": 0.0040334640350288, "phrase": "register_level"}, {"score": 0.003932654396285872, "phrase": "tls_mechanism"}, {"score": 0.003834354624599925, "phrase": "classification_criteria"}, {"score": 0.003421437601439154, "phrase": "relevant_issues"}, {"score": 0.003335873298309004, "phrase": "thread_identification"}, {"score": 0.003266201217790818, "phrase": "misspeculation_recovery"}, {"score": 0.003117986133774198, "phrase": "second_part"}, {"score": 0.0030399874838260886, "phrase": "case_study"}, {"score": 0.0029890721584351684, "phrase": "snoopy_interregister_communication"}, {"score": 0.002805597755796506, "phrase": "processor_cores"}, {"score": 0.002770273247998903, "phrase": "cmp_architecture"}, {"score": 0.002735392281320413, "phrase": "shared_bus"}, {"score": 0.0027009493171069763, "phrase": "appropriate_software_tool"}, {"score": 0.0025892330566358503, "phrase": "sequential_binary_code"}, {"score": 0.002556625752785268, "phrase": "loop-intensive_applications"}, {"score": 0.0023694065215394593, "phrase": "producer-initiated_and_consumer-initiated_communication"}, {"score": 0.0022906498741695094, "phrase": "esic_protocol"}, {"score": 0.002233301265743633, "phrase": "sic_protocol"}, {"score": 0.002105015957644044, "phrase": "sic."}], "paper_keywords": [""], "paper_abstract": "The advantage of having register-level communication as a part of the thread-level speculation (TLS) mechanism in chip multiprocessors (CMPs) has already been clearly recognized in the open literature. The first part of this chapter extensively surveys the TLS support on the register level in CMPs. After the TLS mechanism is briefly explained, the classification criteria are established, and along them, the most prominent systems of this kind are elaborated upon focusing on the details about register communication. Then, the relevant issues in these systems such as thread identification, register communication, misspeculation recovery, performance, and scalability are comparatively discussed. The second part of the chapter represents a case study that describes the snoopy interregister communication (SIC) protocol that enables communication of the register values and synchronization between the processor cores in the CMP architecture over a shared bus. The appropriate software tool, which creates and annotates the threads from a sequential binary code of the loop-intensive applications, is described. Also, the states of registers are defined and the protocol actions during producer-initiated and consumer-initiated communication among the threads. Finally, the ESIC protocol, an enhancement of the SIC protocol with more aggressive speculation on the register values, is also presented and compared to the SIC.", "paper_title": "Register-Level Communication in Speculative Chip Multiprocessors", "paper_id": "WOS:000331017000001"}