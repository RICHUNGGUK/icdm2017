{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "analog_approximate_computing"}, {"score": 0.048004834084269796, "phrase": "power_efficiency"}, {"score": 0.004767826806287385, "phrase": "approximate_computing"}, {"score": 0.004698000536608171, "phrase": "promising_design_paradigm"}, {"score": 0.004652016085325825, "phrase": "better_performance"}, {"score": 0.004406994912939125, "phrase": "power_efficient_framework"}, {"score": 0.004299910946753963, "phrase": "emerging_metal-oxide_resistive_switching_random-access_memory"}, {"score": 0.004154332348800334, "phrase": "programmable_rram-based_approximate_computing_unit"}, {"score": 0.003935420482629049, "phrase": "approximated_computation"}, {"score": 0.003858697684681798, "phrase": "approximate_computing_framework"}, {"score": 0.003445591238183763, "phrase": "detailed_configuration_flow"}, {"score": 0.0033617891884360606, "phrase": "customized_approximator_training_scheme"}, {"score": 0.003312486229143855, "phrase": "approximator-parameter-to-rram-state_mapping_algorithm"}, {"score": 0.0031223774204093713, "phrase": "proposed_rram-based_computing_framework"}, {"score": 0.0030017207229983385, "phrase": "predictive_compact_model"}, {"score": 0.002914288956035066, "phrase": "configuration_overhead"}, {"score": 0.0028857130140890787, "phrase": "rram-acu"}, {"score": 0.0028154895878702633, "phrase": "application_scenarios"}, {"score": 0.0027878797103973313, "phrase": "rram-based_analog_approximate_computing"}, {"score": 0.00266693888510356, "phrase": "diverse_benchmarks"}, {"score": 0.002357755095722877, "phrase": "quality_loss"}, {"score": 0.0022443390559699974, "phrase": "hierarchical_model"}, {"score": 0.0022223176391038785, "phrase": "x_application"}, {"score": 0.0021789194955896124, "phrase": "proposed_rram-based_approximate_computing_framework"}], "paper_keywords": ["Approximate computing", " neural network", " power efficiency", " resistive random-access memory (RRAM)"], "paper_abstract": "Approximate computing is a promising design paradigm for better performance and power efficiency. In this paper, we propose a power efficient framework for analog approximate computing with the emerging metal-oxide resistive switching random-access memory (RRAM) devices. A programmable RRAM-based approximate computing unit (RRAM-ACU) is introduced first to accelerate approximated computation, and an approximate computing framework with scalability is then proposed on top of the RRAM-ACU. In order to program the RRAM-ACU efficiently, we also present a detailed configuration flow, which includes a customized approximator training scheme, an approximator-parameter-to-RRAM-state mapping algorithm, and an RRAM state tuning scheme. Finally, the proposed RRAM-based computing framework is modeled at system level. A predictive compact model is developed to estimate the configuration overhead of RRAM-ACU and help explore the application scenarios of RRAM-based analog approximate computing. The simulation results on a set of diverse benchmarks demonstrate that, compared with a x86-64 CPU at 2 GHz, the RRAM-ACU is able to achieve 4.06-196.41x speedup and power efficiency of 24.59-567.98 GFLOPS/W with quality loss of 8.72% on average. And the implementation of hierarchical model and X application demonstrates that the proposed RRAM-based approximate computing framework can achieve >12.8x power efficiency than its pure digital implementation counterparts (CPU, graphics processing unit, and field-programmable gate arrays).", "paper_title": "RRAM-Based Analog Approximate Computing", "paper_id": "WOS:000365222400002"}