{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "activator_pattern"}, {"score": 0.0047588556219929756, "phrase": "computing_systems"}, {"score": 0.00454090611248773, "phrase": "interacting_services"}, {"score": 0.004282391936827106, "phrase": "service_provider"}, {"score": 0.0024379730432321656, "phrase": "canonical_implementations"}, {"score": 0.002193367454830741, "phrase": "resource-constrained_computing_systems"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["patterns", " distributed computing", " embedded systems"], "paper_abstract": "Computing systems are increasingly designed as a collection of interacting services that constitute a set of functionality offered by a service provider or server to its clients. Many service-oriented computing systems have constraints on the resources they allocate and manage. In these systems, certain types of services should consume resources only when they are accessed by clients, and clients should be shielded from where services are located, how they are deployed, and how their lifecycle is managed. The activator pattern provides an effective means to efficiently and transparently automate scalable on-demand activation and deactivation of services accessed by many clients. This paper motivates the need for the activator pattern, describes the structure and dynamics of canonical implementations of the pattern, and examines the benefits and liabilities of applying this pattern to services in resource-constrained computing systems. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Efficiently and transparently automating scalable on-demand activation and deactivation of services with the activator pattern", "paper_id": "WOS:000319997100005"}