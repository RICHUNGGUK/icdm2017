{"auto_keywords": [{"score": 0.030717126062451867, "phrase": "steiner_forest"}, {"score": 0.008454766225754615, "phrase": "bounded-treewidth_graphs"}, {"score": 0.00481495049065317, "phrase": "steiner_forest_on_planar_graphs"}, {"score": 0.004767826806287385, "phrase": "graphs_of_bounded_treewidth"}, {"score": 0.004652016085325825, "phrase": "first_polynomial-time_approximation_scheme"}, {"score": 0.0046065367876194155, "phrase": "ptas"}, {"score": 0.004516733575701128, "phrase": "steiner_forest_problem"}, {"score": 0.00447251540886613, "phrase": "planar_graphs"}, {"score": 0.004278807087784626, "phrase": "bounded_genus"}, {"score": 0.004195418010131832, "phrase": "first_step"}, {"score": 0.0040334640350288, "phrase": "steiner_forest_spanner"}, {"score": 0.003820896867623235, "phrase": "clustering_procedure"}, {"score": 0.0036373553416391823, "phrase": "input_instance"}, {"score": 0.003601715012418258, "phrase": "separate_subinstances"}, {"score": 0.0033950634506367235, "phrase": "different_subinstances"}, {"score": 0.0032160319265621285, "phrase": "relatively_inexpensive_steiner_tree"}, {"score": 0.0029722900280316216, "phrase": "building_block"}, {"score": 0.002843372121209168, "phrase": "bounded_treewidth"}, {"score": 0.0027611027087035165, "phrase": "np"}, {"score": 0.002538687900036229, "phrase": "nontrivial_combination"}, {"score": 0.0025137856138000036, "phrase": "approximation_arguments"}, {"score": 0.0024891269874339553, "phrase": "dynamic_programming"}, {"score": 0.0024525907271610125, "phrase": "tree_decomposition"}, {"score": 0.002323142666222693, "phrase": "polynomial_time"}, {"score": 0.0023003498123420237, "phrase": "series-parallel_graphs"}, {"score": 0.0021789194955896124, "phrase": "novel_combination"}, {"score": 0.002157538586313944, "phrase": "dynamic_programming_and_minimum_cut_computations"}, {"score": 0.002105021912951776, "phrase": "steiner"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Theory", " Approximation algorithm", " bounded-treewidth", " dynamic programming", " network design", " planar graph", " PTAS", " series-parallel graph", " Steiner forest"], "paper_abstract": "We give the first polynomial-time approximation scheme (PTAS) for the Steiner forest problem on planar graphs and, more generally, on graphs of bounded genus. As a first step, we show how to build a Steiner forest spanner for such graphs. The crux of the process is a clustering procedure called prize-collecting clustering that breaks down the input instance into separate subinstances which are easier to handle; moreover, the terminals in different subinstances are far from each other. Each subinstance has a relatively inexpensive Steiner tree connecting all its terminals, and the subinstances can be solved (almost) separately. Another building block is a PTAS for Steiner forest on graphs of bounded treewidth. Surprisingly, Steiner forest is NP-hard even on graphs of treewidth 3. Therefore, our PTAS for bounded-treewidth graphs needs a nontrivial combination of approximation arguments and dynamic programming on the tree decomposition. We further show that Steiner forest can be solved in polynomial time for series-parallel graphs (graphs of treewidth at most two) by a novel combination of dynamic programming and minimum cut computations, completing our thorough complexity study of Steiner forest in the range of bounded-treewidth graphs, planar graphs, and bounded-genus graphs.", "paper_title": "Approximation Schemes for Steiner Forest on Planar Graphs and Graphs of Bounded Treewidth", "paper_id": "WOS:000297210200003"}