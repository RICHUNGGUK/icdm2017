{"auto_keywords": [{"score": 0.04790331843683929, "phrase": "self-controlling_software_paradigm"}, {"score": 0.0316727896939775, "phrase": "control_loops"}, {"score": 0.00481495049065317, "phrase": "time_complexity"}, {"score": 0.0047409388179452255, "phrase": "constraint_satisfaction_problem_solver_program"}, {"score": 0.004342430078306461, "phrase": "based_constraint_satisfaction_problem"}, {"score": 0.0040186038781533946, "phrase": "dynamical_system"}, {"score": 0.003936389070602614, "phrase": "feedback_control_loop"}, {"score": 0.003680587852807675, "phrase": "service_component"}, {"score": 0.003234299589505403, "phrase": "control_goal"}, {"score": 0.0028273061946184645, "phrase": "software_system"}, {"score": 0.0022283519468680475, "phrase": "added_control_loop"}, {"score": 0.0021714122348552747, "phrase": "tested_constraint_satisfaction_problems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Self-controlling software", " Constraint satisfaction problem", " Branch and bound algorithm", " PID controller", " Job scheduling problem", " Fixture design problem"], "paper_abstract": "This paper presents the self-controlling software paradigm and reports on its use to control the branch and bound based constraint satisfaction problem solving algorithm. In this paradigm, an algorithm is first conceptualized as a dynamical system and then a feedback control loop is added to control its behavior. The loop includes a Quality of Service component that assesses the performance of the algorithm during its run time and a controller that adjusts the parameters of the algorithm in order to achieve the control goal. Although other approaches - generally termed as \"self-*\" - make use of control loops, this use is limited to the structure of the software system, rather than to its behavior and its dynamics. This paper advocates the analysis of dynamics of any program with control loops. The self-controlling software paradigm is evaluated on two different NP-hard constraint satisfaction and optimization problems. The results of the evaluation show an improvement in the performance due to the added control loop for both of the tested constraint satisfaction problems. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Self-control of the time complexity of a constraint satisfaction problem solver program", "paper_id": "WOS:000310669500003"}