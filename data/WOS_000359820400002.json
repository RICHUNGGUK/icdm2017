{"auto_keywords": [{"score": 0.04426252329364738, "phrase": "random_walks"}, {"score": 0.03466775181930747, "phrase": "bloom_filters"}, {"score": 0.024907778393436705, "phrase": "expected_search_lengths"}, {"score": 0.00481495049065317, "phrase": "resource_location"}, {"score": 0.004769182299692333, "phrase": "locally_precomputed_partial_random_walks"}, {"score": 0.004568525347438891, "phrase": "complex_networks"}, {"score": 0.004503525064934708, "phrase": "desired_resource"}, {"score": 0.004418287966422041, "phrase": "search_lengths"}, {"score": 0.0034790978593553794, "phrase": "perfect_recording"}, {"score": 0.0033166379485150507, "phrase": "probabilistic_structures"}, {"score": 0.0031921317979928406, "phrase": "unnecessary_hops"}, {"score": 0.003131637033429892, "phrase": "false_positives"}, {"score": 0.0028053237950173508, "phrase": "current_node"}, {"score": 0.0023954743066925714, "phrase": "analytical_models"}, {"score": 0.0022834993174767016, "phrase": "resulting_four_mechanisms"}, {"score": 0.0022617389804167943, "phrase": "simulation_experiments"}, {"score": 0.0021354538918029286, "phrase": "simple_random_walk_searches"}], "paper_keywords": ["Resource location", " Random walks", " Partial random walks", " Self-avoiding random walks", " Search length"], "paper_abstract": "Random walks can be used to search complex networks for a desired resource. To reduce search lengths, we propose a mechanism based on building random walks connecting together partial walks (PW) previously computed at each network node. Resources found in each PW are registered. Searches can then jump over PWs where the resource is not located. However, we assume that perfect recording of resources may be costly, and hence, probabilistic structures like Bloom filters are used. Then, unnecessary hops may come from false positives at the Bloom filters. Two variations of this mechanism have been considered, depending on whether we first choose a PW in the current node and then check it for the resource, or we first check all PWs and then choose one. In addition, PWs can be either simple random walks or self-avoiding random walks. Analytical models are provided to predict expected search lengths and other magnitudes of the resulting four mechanisms. Simulation experiments validate these predictions and allow us to compare these techniques with simple random walk searches, finding very large reductions of expected search lengths.", "paper_title": "Improving resource location with locally precomputed partial random walks", "paper_id": "WOS:000359820400002"}