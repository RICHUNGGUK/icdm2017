{"auto_keywords": [{"score": 0.03849705104412654, "phrase": "storage_capacity"}, {"score": 0.014250951957334007, "phrase": "tcp"}, {"score": 0.004506968388996092, "phrase": "major_component"}, {"score": 0.004258644418211771, "phrase": "data_flows"}, {"score": 0.0041987222897385676, "phrase": "internet_applications"}, {"score": 0.004120130206000757, "phrase": "coloured_petri_nets"}, {"score": 0.003986103192038901, "phrase": "application's_view"}, {"score": 0.0035085965086415474, "phrase": "exact_expressions"}, {"score": 0.003410479630045025, "phrase": "cpn_model's_reachability_graph"}, {"score": 0.003102752392819577, "phrase": "state_space"}, {"score": 0.002931569771634119, "phrase": "symbolic_state_space"}, {"score": 0.0028766278519176355, "phrase": "infinite_family"}, {"score": 0.0028495431343111897, "phrase": "state_spaces"}, {"score": 0.0025922974876210194, "phrase": "strongly_connected_graph"}, {"score": 0.002426137929553722, "phrase": "tcp_data_transfer_service_language"}, {"score": 0.0023470862747075228, "phrase": "symbolic_representation"}, {"score": 0.002259883463607508, "phrase": "service_language"}, {"score": 0.00218623706110975, "phrase": "tcp_data_transfer_protocol"}, {"score": 0.0021049977753042253, "phrase": "observable_sequences"}], "paper_keywords": ["TCP", " data transfer service", " service language", " parametric systems", " symbolic automata", " Coloured Petri Nets"], "paper_abstract": "The TCP/IP protocol suite defines the procedures governing the movement of data within the Internet. A major component of the suite is the Transmission Control Protocol (TCP), which ensures data flows reliably between Internet applications. We use Coloured Petri Nets (CPNs) to model the application's view of the service provided by TCP for the transfer of data. This service depends on the storage capacity available in the Internet. We firstly establish exact expressions for the size of the CPN model's reachability graph (or state space) in terms of the storage capacity. They indicate that both the nodes and arcs of the state space grow exponentially in the storage capacity. Secondly, we derive a symbolic state space which represents an infinite family of state spaces, one for each value of the capacity. We prove that each member of this family is a strongly connected graph and that its associated finite state automaton is deterministic and minimum. Finally, we formulate the TCP data transfer service language for arbitrary capacity, from the symbolic representation of the family of automata. This service language is the yardstick against which the TCP data transfer protocol can be verified with respect to user observable sequences of events.", "paper_title": "Formalising TCP's data transfer service language: A symbolic automaton and its properties", "paper_id": "WOS:000251509000004"}