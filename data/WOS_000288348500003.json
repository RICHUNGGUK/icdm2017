{"auto_keywords": [{"score": 0.042980055209087174, "phrase": "ucp"}, {"score": 0.026449032969847637, "phrase": "adjustment_factors"}, {"score": 0.006302873944203187, "phrase": "factor_analysis"}, {"score": 0.005886866170884005, "phrase": "uaw"}, {"score": 0.00481495049065317, "phrase": "effort_estimation"}, {"score": 0.0047739754059430055, "phrase": "use_case_points"}, {"score": 0.004626680470601208, "phrase": "software_development_effort"}, {"score": 0.004574247691703376, "phrase": "use-case_model"}, {"score": 0.004458426563932486, "phrase": "environmental_and_technical_complexity"}, {"score": 0.004247560712327667, "phrase": "effort_estimation_point"}, {"score": 0.004046627438964482, "phrase": "possible_ways"}, {"score": 0.0039553744129764016, "phrase": "cross-validation_procedure"}, {"score": 0.0038551626276406175, "phrase": "different_variants"}, {"score": 0.0037682108720193956, "phrase": "investigated_simplifications"}, {"score": 0.0032954289787083713, "phrase": "ucp_-_with"}, {"score": 0.003267342521938321, "phrase": "unadjusted_actor_weights"}, {"score": 0.0032210609849058483, "phrase": "similar_prediction_accuracy"}, {"score": 0.003166384930533443, "phrase": "minor_influence"}, {"score": 0.0026003455833291124, "phrase": "recently_proposed_use-case-based_size_metric_ttpoints"}, {"score": 0.002519945420045647, "phrase": "ucp._conclusion"}, {"score": 0.0024490082808807396, "phrase": "ucp_method"}, {"score": 0.0023064582783867645, "phrase": "total_number"}, {"score": 0.0022802596433757565, "phrase": "use_cases"}, {"score": 0.002153653728048424, "phrase": "early_stages"}, {"score": 0.0021413855297794946, "phrase": "software_development"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Use Case Points", " Software cost estimation", " Use cases", " Use-case transactions", " TTPoints"], "paper_abstract": "Context: The Use Case Points (UCP) method can be used to estimate software development effort based on a use-case model and two sets of adjustment factors relating to the environmental and technical complexity of a project. The question arises whether all of these components are important from the effort estimation point of view. Objective: This paper investigates the construction of UCP in order to find possible ways of simplifying it. Method: The cross-validation procedure was used to compare the accuracy of the different variants of UCP (with and without the investigated simplifications). The analysis was based on data derived from a set of 14 projects for which effort ranged from 277 to 3593 man-hours. In addition, the factor analysis was performed to investigate the possibility of reducing the number of adjustment factors. Results: The two variants of UCP - with and without unadjusted actor weights (UAW) provided similar prediction accuracy. In addition, a minor influence of the adjustment factors on the accuracy of UCP was observed. The results of the factor analysis indicated that the number of adjustment factors could be reduced from 21 to 6 (2 environmental factors and 4 technical complexity factors). Another observation was made that the variants of UCP calculated based on steps were slightly more accurate than the variants calculated based on transactions. Finally, a recently proposed use-case-based size metric TTPoints provided better accuracy than any of the investigated variants of UCP. Conclusion: The observation in this study was that the UCP method could be simplified by rejecting UAW; calculating UCP based on steps instead of transactions; or just counting the total number of steps in use cases. Moreover, two recently proposed use-case-based size metrics Transactions and TTPoints could be used as an alternative to UCP to estimate effort at the early stages of software development. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Simplifying effort estimation based on Use Case Points", "paper_id": "WOS:000288348500003"}