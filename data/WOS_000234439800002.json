{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "minimal_triangulation"}, {"score": 0.04706524944365423, "phrase": "lb-triang"}, {"score": 0.004730458558634266, "phrase": "arbitrary_ordering"}, {"score": 0.004592905436175987, "phrase": "new_algorithm"}, {"score": 0.004406994912939125, "phrase": "minimal_triangulations"}, {"score": 0.003735349093835257, "phrase": "best_known_algorithms"}, {"score": 0.0034796993041104705, "phrase": "lekkerkerker"}, {"score": 0.0034388142116384504, "phrase": "boland"}, {"score": 0.003378385493203297, "phrase": "chordal_graphs"}, {"score": 0.003299460925313939, "phrase": "arbitrary_order"}, {"score": 0.0032414759269196493, "phrase": "minimal_separators"}, {"score": 0.003165739628969694, "phrase": "vertex_neighborhood"}, {"score": 0.002181069180139225, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "We present a new algorithm, called LB-Triang, which computes minimal triangulations. We give both a straightforward 0 (nm') time implementation and a more involved 0 (nm) time implementation, thus matching the best known algorithms for this problem. Our algorithm is based on a process by Lekkerkerker and Boland for recognizing chordal graphs which checks in an arbitrary order whether the minimal separators contained in each vertex neighborhood are cliques. LB-Triang checks each vertex for this property and adds edges whenever necessary to make each vertex obey this property. As the vertices can be processed in any order, LB-Triang is able to compute any minimal triangulation of a given graph, which makes it significantly different from other existing triangulation techniques. We examine several interesting and useful properties of this algorithm, and give some experimental results. (C) 2004 Elsevier Inc. All rights reserved.", "paper_title": "A wide-range algorithm for minimal triangulation from an arbitrary ordering", "paper_id": "WOS:000234439800002"}