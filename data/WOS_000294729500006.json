{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "local_search"}, {"score": 0.004285289574869884, "phrase": "new_constraints"}, {"score": 0.003936910716320182, "phrase": "successful_approach"}, {"score": 0.00385431710959668, "phrase": "constraint-based_global_search"}, {"score": 0.0032527939106509946, "phrase": "deterministic_finite_automaton"}, {"score": 0.0031176485976102688, "phrase": "ground_checker"}, {"score": 0.0025214217930287003, "phrase": "finite_automata"}, {"score": 0.002316105585203396, "phrase": "constraint_instance"}], "paper_keywords": ["Automaton constraint", " Counter automaton", " Local search"], "paper_abstract": "We explore the idea of using automata to implement new constraints for local search. This is already a successful approach in constraint-based global search. We show how to maintain the violations of a constraint and its variables via a deterministic finite automaton that describes a ground checker for that constraint. We extend the approach to counter automata, which are often much more convenient than finite automata, if not more independent of the constraint instance. We establish the practicality of our approach on several real-life combinatorial problems.", "paper_title": "An automaton Constraint for Local Search", "paper_id": "WOS:000294729500006"}