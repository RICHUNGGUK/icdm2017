{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "regular_expression"}, {"score": 0.004518442937844318, "phrase": "high-performance_architecture"}, {"score": 0.004397070564443602, "phrase": "rem"}, {"score": 0.004337502738649814, "phrase": "field-programmable_gate"}, {"score": 0.0040334640350288, "phrase": "concise_token_list_representation"}, {"score": 0.003925004567341077, "phrase": "modular_nondeterministic_finite_automaton"}, {"score": 0.0037848978618663684, "phrase": "modified_version"}, {"score": 0.0037336520904376687, "phrase": "mcnaughton-yamada_algorithm"}, {"score": 0.0035677736570659813, "phrase": "compact_register-transistor_level"}, {"score": 0.0033326252993345685, "phrase": "circuit_performance"}, {"score": 0.0032725712584012953, "phrase": "spatial_stacking"}, {"score": 0.0031129269142224168, "phrase": "clock_cycle"}, {"score": 0.003056819704624705, "phrase": "single-character_constrained_repetitions"}, {"score": 0.002988101395789399, "phrase": "parallel_shift-register_lookup_tables"}, {"score": 0.002934237411711622, "phrase": "complex_character_classes"}, {"score": 0.0028682668647074397, "phrase": "bram-based_classifier"}, {"score": 0.002765776659294382, "phrase": "multipipeline_architecture"}, {"score": 0.0026913130726432645, "phrase": "large_number"}, {"score": 0.0026427848602443267, "phrase": "priority_groups"}, {"score": 0.002491015950010074, "phrase": "snort"}, {"score": 0.0024129269611844794, "phrase": "proposed_rem_architecture"}, {"score": 0.0023586493263143553, "phrase": "place-and-route_results"}, {"score": 0.0023372808856170386, "phrase": "xilinx_ise"}, {"score": 0.0021049977753042253, "phrase": "throughput_efficiency"}], "paper_keywords": ["Regular expression", " NFA", " finite state machine", " network intrusion detection", " FPGA", " BRAM", " LUT", " SRL"], "paper_abstract": "We present the design, implementation and evaluation of a high-performance architecture for regular expression matching (REM) on field-programmable gate array (FPGA). Each regular expression (regex) is first parsed into a concise token list representation, then compiled to a modular nondeterministic finite automaton (RE-NFA) using a modified version of the McNaughton-Yamada algorithm. The RE-NFA can be mapped directly onto a compact register-transistor level (RTL) circuit. A number of optimizations are applied to improve the circuit performance: 1) spatial stacking is used to construct an REM circuit processing m >= 1 input characters per clock cycle; 2) single-character constrained repetitions are matched efficiently by parallel shift-register lookup tables; 3) complex character classes are matched by a BRAM-based classifier shared across regexes; 4) a multipipeline architecture is used to organize a large number of RE-NFAs into priority groups to limit the I/O size of the circuit. We implemented 2,630 unique PCRE regexes from Snort rules (February 2010) in the proposed REM architecture. Based on the place-and-route results from Xilinx ISE 11.1 targeting Virtex5 LX-220 FPGAs, the proposed REM architecture achieved up to 11 Gbps concurrent throughput for various regex sets and up to 2.67x the throughput efficiency of other state-of-the-art designs.", "paper_title": "High-Performance and Compact Architecture for Regular Expression Matching on FPGA", "paper_id": "WOS:000304448100008"}