{"auto_keywords": [{"score": 0.02578609636842043, "phrase": "monte-carlo"}, {"score": 0.00481495049065317, "phrase": "gpgpu_monte_carlo_simulation"}, {"score": 0.004658426838467567, "phrase": "option_pricing"}, {"score": 0.004324521292490181, "phrase": "speedup_opportunity"}, {"score": 0.004253618550301311, "phrase": "monte_carlo_simulation"}, {"score": 0.00418387341007444, "phrase": "graphic_processing_unit_architecture"}, {"score": 0.004081385289516914, "phrase": "financial_application"}, {"score": 0.0036958398682001015, "phrase": "actually_generated_random_numbers"}, {"score": 0.0035461111918923117, "phrase": "generation_phase"}, {"score": 0.0034024277222012597, "phrase": "compute_unified_device_architecture's_built-in_shuffle_instructions"}, {"score": 0.0029559346879594254, "phrase": "induced_correlation"}, {"score": 0.002883439044844259, "phrase": "granger_causality_test"}, {"score": 0.002344311033783139, "phrase": "computational_time"}], "paper_keywords": ["GPGPU", " Monte Carlo", " CUDA", " option pricing problem"], "paper_abstract": "In this paper, we demonstrate some speedup opportunity regarding Monte Carlo simulation on graphic processing unit architecture, with financial application. We leverage on the possibility of reducing the volume of actually generated random numbers, by replacing the generation phase with some shuffling using Compute Unified Device Architecture's built-in shuffle instructions. We will study various shuffling patterns and duration, elect the best among them with regard to induced correlation, using Granger causality test. We will then study the accuracy and variance of results actually achieved by our general-purpose computing on graphic processing unit shuffled Monte-Carlo, exhibiting a computational time reduced by half while error remains marginal. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "Shuffle up and deal: accelerating GPGPU Monte Carlo simulation with application to option pricing", "paper_id": "WOS:000363766600036"}