{"auto_keywords": [{"score": 0.031631002845943904, "phrase": "sticky_sets"}, {"score": 0.01290752264641629, "phrase": "query_answering"}, {"score": 0.004714387899814988, "phrase": "ontology_reasoning"}, {"score": 0.004671932143798307, "phrase": "relevant_application"}, {"score": 0.004629856947559767, "phrase": "so-called_ontology-based_data_access"}, {"score": 0.004358834624798868, "phrase": "logical_assertions"}, {"score": 0.004306556130853961, "phrase": "new_intensional_knowledge"}, {"score": 0.004091248980678087, "phrase": "logical_theory"}, {"score": 0.004042166795461166, "phrase": "fob"}, {"score": 0.0036589868713755185, "phrase": "novel_relevant_classes"}, {"score": 0.0036369632227788076, "phrase": "ontological_theories"}, {"score": 0.003539479990299223, "phrase": "tractable_data_complexity"}, {"score": 0.0032920678776655783, "phrase": "recently_introduced_family"}, {"score": 0.0032722454818973853, "phrase": "datalog-based_languages"}, {"score": 0.003080449000295983, "phrase": "tuple-generating_dependencies"}, {"score": 0.0028220792894598236, "phrase": "multiple_occurrences"}, {"score": 0.0027463775689957255, "phrase": "complexity_results"}, {"score": 0.0027215964067013924, "phrase": "conjunctive_queries"}, {"score": 0.002508392792454804, "phrase": "sql"}, {"score": 0.002463291408427568, "phrase": "edb."}, {"score": 0.0022840180582947302, "phrase": "highly_expressive_and_effective_ontology_languages"}, {"score": 0.0022429664506287577, "phrase": "classical_database_constraints"}, {"score": 0.002222717552124615, "phrase": "important_features"}, {"score": 0.002163058716517137, "phrase": "dl-lite_family"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Datalog", " Ontologies", " Semantic Web", " Conjunctive queries", " Query answering", " Chase procedure", " Dependencies", " Constraints", " Complexity", " Tractability"], "paper_abstract": "Ontology reasoning finds a relevant application in the so-called ontology-based data access, where a classical extensional database (FOB) is enhanced by an ontology, in the form of logical assertions, that generates new intensional knowledge which contributes to answering queries. In this setting, queries are therefore answered against a logical theory constituted by the FOB and the ontology; more specifically, query answering amounts to computing the answers to the query that are entailed by the EDB and the ontology. In this paper, we study novel relevant classes of ontological theories for which query answering is both decidable and of tractable data complexity, that is, the complexity with respect to the size of the data only. In particular, our new classes belong to the recently introduced family of Datalog-based languages, called Datalog(+/-). The basic Datalog(+/-) rules are (function-free) Horn rules extended with existential quantification in the head, known as tuple-generating dependencies (TGDs). We propose the language of sticky sets of TGDs (or sticky Datalog(+/-)), which are sets of TGDs with a restriction on multiple occurrences of variables in the rule-bodies. We establish complexity results for answering conjunctive queries under sticky sets of TGDs, showing, in particular, that queries can be compiled into domain independent first-order (and thus translatable into SQL) queries over the given EDB. We also present several extensions of sticky sets of TGDs, and investigate the complexity of query answering under such classes. In summary, we obtain highly expressive and effective ontology languages that unify and generalize both classical database constraints, and important features of the most widespread tractable description logics; in particular, the DL-Lite family of description logics. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Towards more expressive ontology languages: The query answering problem", "paper_id": "WOS:000311977500004"}