{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "csp"}, {"score": 0.026324850181133147, "phrase": "source_terms"}, {"score": 0.0047292449487169345, "phrase": "asynchronous_ccs"}, {"score": 0.0037104876694493815, "phrase": "multi-way_synchronisation_mechanism"}, {"score": 0.0035473867669654174, "phrase": "two-way_synchronisation_mechanism"}, {"score": 0.0032716049994249347, "phrase": "gorla"}, {"score": 0.0030171910207671205, "phrase": "additional_top-level_context"}, {"score": 0.002858642257301242, "phrase": "parrow"}, {"score": 0.0028076592725295646, "phrase": "sjodin"}, {"score": 0.0027328817607818207, "phrase": "first_encoding"}, {"score": 0.0026600905156986317, "phrase": "centralised_coordinator"}, {"score": 0.0025202582748972122, "phrase": "weak_bisimilarity"}, {"score": 0.002366361492754389, "phrase": "second_encoding"}, {"score": 0.0021049977753042253, "phrase": "coupled_similarity"}], "paper_keywords": [""], "paper_abstract": "We study encodings from CSP into asynchronous CCS with name passing and matching, so in fact, the asynchronous pi-calculus. By doing so, we discuss two different ways to map the multi-way synchronisation mechanism of CSP into the two-way synchronisation mechanism of CCS. Both encodings satisfy the criteria of Gorla except for compositionality, as both use an additional top-level context. Following the work of Parrow and Sjodin, the first encoding uses a centralised coordinator and establishes a variant of weak bisimilarity between source terms and their translations. The second encoding is decentralised, and thus more efficient, but ensures only a form of coupled similarity between source terms and their translations.", "paper_title": "Encoding CSP into CCS", "paper_id": "WOS:000367340100006"}