{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mars"}, {"score": 0.008720132190708144, "phrase": "mapreduce"}, {"score": 0.004723742646716804, "phrase": "graphics_processors"}, {"score": 0.004563880494020726, "phrase": "mapreduce_runtime_system"}, {"score": 0.0045600200467318915, "phrase": "hadoop"}, {"score": 0.004511799033574768, "phrase": "graphics_processing_units"}, {"score": 0.004375789703278455, "phrase": "simple_and_flexible_parallel_programming_paradigm"}, {"score": 0.004309351298375547, "phrase": "google"}, {"score": 0.004211504818267892, "phrase": "large-scale_data_processing"}, {"score": 0.003976523732243618, "phrase": "magnitude_higher_computation_power"}, {"score": 0.0038125469099459905, "phrase": "special-purpose_coprocessors"}, {"score": 0.0036413370053909886, "phrase": "mapreduce_programmers"}, {"score": 0.003585986761045987, "phrase": "gpus'_power"}, {"score": 0.0034512514926836667, "phrase": "nvidia_gpus"}, {"score": 0.0034249243010734, "phrase": "amd"}, {"score": 0.0030648097361278856, "phrase": "programming_complexity"}, {"score": 0.003006654007926993, "phrase": "simple_and_familiar_mapreduce_interface"}, {"score": 0.002784828661426853, "phrase": "six_representative_applications"}, {"score": 0.0026393362602995254, "phrase": "multicore_cpus"}, {"score": 0.0026091594819333654, "phrase": "experimental_results"}, {"score": 0.0025596276616952516, "phrase": "gpu-cpu_coprocessing"}, {"score": 0.0024823245668218375, "phrase": "intel"}, {"score": 0.0024445497384914063, "phrase": "phoenix"}, {"score": 0.0023346234464901978, "phrase": "multicore_cpu"}, {"score": 0.0021049977753042253, "phrase": "gpu_acceleration"}], "paper_keywords": ["MapReduce", " graphics processor", " parallel computing", " multicore processor", " many-core architecture"], "paper_abstract": "We design and implement Mars, a MapReduce runtime system accelerated with graphics processing units (GPUs). MapReduce is a simple and flexible parallel programming paradigm originally proposed by Google, for the ease of large-scale data processing on thousands of CPUs. Compared with CPUs, GPUs have an order of magnitude higher computation power and memory bandwidth. However, GPUs are designed as special-purpose coprocessors and their programming interfaces are less familiar than those on the CPUs to MapReduce programmers. To harness GPUs' power for MapReduce, we developed Mars to run on NVIDIA GPUs, AMD GPUs as well as multicore CPUs. Furthermore, we integrated Mars into Hadoop, an open-source CPU-based MapReduce system. Mars hides the programming complexity of GPUs behind the simple and familiar MapReduce interface, and automatically manages task partitioning, data distribution, and parallelization on the processors. We have implemented six representative applications on Mars and evaluated their performance on PCs equipped with GPUs as well as multicore CPUs. The experimental results show that, the GPU-CPU coprocessing of Mars on an NVIDIA GTX280 GPU and an Intel quad-core CPU outperformed Phoenix, the state-of-the-art MapReduce on the multicore CPU with a speedup of up to 72 times and 24 times on average, depending on the applications. Additionally, integrating Mars into Hadoop enabled GPU acceleration for a network of PCs.", "paper_title": "Mars: Accelerating MapReduce with Graphics Processors", "paper_id": "WOS:000287580000007"}