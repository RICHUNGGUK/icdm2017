{"auto_keywords": [{"score": 0.04955228514169987, "phrase": "integrated_development_process"}, {"score": 0.004709567162738894, "phrase": "increasing_complexity"}, {"score": 0.004674952036988355, "phrase": "large-scale_distributed_applications"}, {"score": 0.004555781299332848, "phrase": "new_software_technologies"}, {"score": 0.00447251540886613, "phrase": "distributed_systems"}, {"score": 0.004326436568191916, "phrase": "component-based_software_engineering"}, {"score": 0.004154332348800334, "phrase": "pre-fabricated_components"}, {"score": 0.004048378919038729, "phrase": "'advanced'_separation"}, {"score": 0.003830312347175889, "phrase": "software_components"}, {"score": 0.0037325918533747953, "phrase": "aspect-oriented_software_development_paradigm"}, {"score": 0.003035177667751495, "phrase": "well-defined_development_processes"}, {"score": 0.0029796206196589115, "phrase": "software_developers"}, {"score": 0.002925077525258983, "phrase": "existing_component"}, {"score": 0.002903540062437197, "phrase": "aspect-based_approaches"}, {"score": 0.002850385670169814, "phrase": "primary_aim"}, {"score": 0.0026570998719084153, "phrase": "prefabricated_components"}, {"score": 0.0024677487011556427, "phrase": "new_model"}, {"score": 0.0021601997088758957, "phrase": "current_distributed_platforms"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["component based software development", " aspect-oriented software development", " software architecture", " development environment", " middleware platform"], "paper_abstract": "The increasing complexity of large-scale distributed applications is driving the Software Engineering community to adopt new software technologies for the development of distributed systems. In this sense, the emergence of component-based software engineering represents a significant advance towards assembling applications by plugging in pre-fabricated components. Additionally, the principle of 'advanced' separation of concerns is nowadays widely applied to improve modularity, reusability and adaptability of software components. In this way, the aspect-oriented software development paradigm separates into a new dimension, named aspect, those properties that crosscut the system 'objects' or 'components', reducing their dependencies. However, the development of software based on the composition of components and aspects is still in its early stages. Part of the reason for this is the lack of well-defined development processes and tools that help software developers in the use of existing component and aspect-based approaches. Therefore, the primary aim of this paper is to propose an integrated development process for deriving applications by the assembly of a set of prefabricated components and aspects. This process supports the development of Component-Aspect Model/Dynamic Aspect-Oriented Platform (CAM/DAOP) applications, where CAM/DAOP is a new model and platform based on components and aspects. Our intention is to show how, with the support of the integrated development process presented in this paper, it is possible to use CAM/DAOP as an alternative to current distributed platforms. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Supporting the development of CAM/DAOP applications: an integrated development process", "paper_id": "WOS:000243511300002"}