{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "opaque_systems"}, {"score": 0.028961003853857654, "phrase": "dynamic_mask"}, {"score": 0.004781777766309739, "phrase": "static_and_dynamic_masks"}, {"score": 0.004749450904579909, "phrase": "opacity"}, {"score": 0.004699837689671504, "phrase": "security_property"}, {"score": 0.004619295212985837, "phrase": "secret_information_leakage"}, {"score": 0.004401011982385274, "phrase": "secret_predicate_s"}, {"score": 0.004222105714769577, "phrase": "external_user"}, {"score": 0.004193000200816171, "phrase": "partial_observability"}, {"score": 0.0038857317730249114, "phrase": "s._we"}, {"score": 0.003490462324829042, "phrase": "static_partial_observability"}, {"score": 0.0033023994098455457, "phrase": "static_mask"}, {"score": 0.0031245401051256823, "phrase": "pspace"}, {"score": 0.0030285690317007805, "phrase": "optimal_static_mask"}, {"score": 0.0029662917511334604, "phrase": "pspace-complete_problem"}, {"score": 0.0029052913631676435, "phrase": "dynamic_partial_observability"}, {"score": 0.002538164420139397, "phrase": "corresponding_synthesis_problem"}, {"score": 0.0024096216848276094, "phrase": "dynamic_masks"}, {"score": 0.002225043605730822, "phrase": "exptime"}, {"score": 0.0021867999937268084, "phrase": "lower_bound"}, {"score": 0.0021049977753042253, "phrase": "optimal_mask"}], "paper_keywords": ["Security", " Confidentiality property", " Opacity", " Synthesis", " Dynamic observation"], "paper_abstract": "Opacity is a security property formalizing the absence of secret information leakage and we address in this paper the problem of synthesizing opaque systems. A secret predicate S over the runs of a system G is opaque to an external user having partial observability over G, if s/he can never infer from the observation of a run of G that the run belongs to S. We choose to control the observability of events by adding a device, called a mask, between the system G and the users. We first investigate the case of static partial observability where the set of events the user can observe is fixed a priori by a static mask. In this context, we show that checking whether a system is opaque is PSPACE-complete, which implies that computing an optimal static mask ensuring opacity is also a PSPACE-complete problem. Next, we introduce dynamic partial observability where the set of events the user can observe changes over time and is chosen by a dynamic mask. We show how to check that a system is opaque w.r.t. to a dynamic mask and also address the corresponding synthesis problem: given a system G and secret states S, compute the set of dynamic masks under which S is opaque. Our main result is that the set of such masks can be finitely represented and can be computed in EXPTIME and this is a lower bound. Finally we also address the problem of computing an optimal mask.", "paper_title": "Synthesis of opaque systems with static and dynamic masks", "paper_id": "WOS:000300289300004"}