{"auto_keywords": [{"score": 0.044672559367905706, "phrase": "different_modes"}, {"score": 0.03217160122346607, "phrase": "internal_loop"}, {"score": 0.00481495049065317, "phrase": "application_level"}, {"score": 0.004662705558154439, "phrase": "real-time_applications"}, {"score": 0.004556901872357751, "phrase": "dynamic_set"}, {"score": 0.004515252649226697, "phrase": "soft_real-time_applications"}, {"score": 0.004412780054037622, "phrase": "shared_resources"}, {"score": 0.0036721416244816455, "phrase": "power_consumption"}, {"score": 0.003555902292752528, "phrase": "reservation-based_scheduler"}, {"score": 0.0035072146967082083, "phrase": "dynamic_allocation"}, {"score": 0.0032436052954996097, "phrase": "dynamic_changes"}, {"score": 0.003126481516783286, "phrase": "adaptive_resource_allocation_policy"}, {"score": 0.002985988377995789, "phrase": "scheduling_parameter"}, {"score": 0.002931569771634119, "phrase": "resource_allocation"}, {"score": 0.002878140062594849, "phrase": "temporal_constraints"}, {"score": 0.002799810685137358, "phrase": "external_loop"}, {"score": 0.002748775748298028, "phrase": "qos_level"}, {"score": 0.0026616868981501006, "phrase": "power_level"}, {"score": 0.00257735013358606, "phrase": "good_tradeoff"}, {"score": 0.0025420267431501367, "phrase": "global_qos"}, {"score": 0.0025071862539276283, "phrase": "energy_consumption"}, {"score": 0.0021049977753042253, "phrase": "substantial_energy_saving"}], "paper_keywords": ["Power-aware optimization", " quality-of-service (QoS) control", " real-time embedded systems"], "paper_abstract": "We consider a dynamic set of soft real-time applications using a set of shared resources. Each application can execute in different modes, each one associated with a level of Quality-of-Service (QoS). Resources, in their turn, have different modes, each one with a speed and a power consumption, and are managed by a Reservation-Based scheduler enabling a dynamic allocation of the fraction of resources (bandwidth) assigned to each application. To cope with dynamic changes of the application, we advocate an adaptive resource allocation policy organized in two nested feedback loops. The internal loop operates on the scheduling parameter to obtain a resource allocation that meets the temporal constraints of the applications. The external loop operates on the QoS level of the applications and on the power level of the resources to strike a good tradeoff between the global QoS and the energy consumption. This loop comes into play whenever the workload of the application exceeds the bounds that permit the internal loop to operate correctly, or whenever it decreases below a level that permit more aggressive choices for the QoS or substantial energy saving.", "paper_title": "On the Integration of Application Level and Resource Level QoS Control for Real-Time Applications", "paper_id": "WOS:000283984900003"}