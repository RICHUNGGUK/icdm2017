{"auto_keywords": [{"score": 0.03839035165622236, "phrase": "fmm"}, {"score": 0.009922564930054724, "phrase": "optimal_settings"}, {"score": 0.008798306783232476, "phrase": "laplace_kernel"}, {"score": 0.00481495049065317, "phrase": "graphics_processors"}, {"score": 0.004758987153057194, "phrase": "fast_multipole_method"}, {"score": 0.004703671193348433, "phrase": "rapid_approximate_evaluation"}, {"score": 0.004630910803911567, "phrase": "radial_basis_functions"}, {"score": 0.004559270778306828, "phrase": "specified_accuracy"}, {"score": 0.004250302819248558, "phrase": "direct_method"}, {"score": 0.004087756756529841, "phrase": "larger_problems"}, {"score": 0.004024485331377682, "phrase": "graphical_processing_units"}, {"score": 0.003993368269752939, "phrase": "gpu"}, {"score": 0.003781005930058317, "phrase": "significant_computational_performance"}, {"score": 0.0037516215763875225, "phrase": "low_price"}, {"score": 0.0035940277928341265, "phrase": "parallel_gpu_architecture"}, {"score": 0.0034029588672379926, "phrase": "data-parallel_processors"}, {"score": 0.0030745737579268876, "phrase": "gpu_architecture"}, {"score": 0.002956883359366778, "phrase": "gpu."}, {"score": 0.002865929543375884, "phrase": "usual_cpus"}, {"score": 0.0027995677499976406, "phrase": "fmm_algorithm"}, {"score": 0.0027347383772384102, "phrase": "modified_stencils"}, {"score": 0.0027134630181926854, "phrase": "real_polynomial_basis_functions"}, {"score": 0.002619748321217153, "phrase": "translation_operators"}, {"score": 0.002385326947545194, "phrase": "serial_cpu_fmm_implementation"}, {"score": 0.0023209828061385596, "phrase": "million_sources"}, {"score": 0.0022495644368875686, "phrase": "approximately_one_second"}, {"score": 0.0021049977753042253, "phrase": "straightforward_summation"}], "paper_keywords": [""], "paper_abstract": "The fast multipole method allows the rapid approximate evaluation of sums of radial basis functions. For a specified accuracy, epsilon, the method scales as O(N) in both time and memory compared to the direct method with complexity O(N-2), which allows the solution of larger problems with given resources. Graphical processing units (GPU) are now increasingly viewed as data parallel compute coprocessors that can provide significant computational performance at low price. We describe acceleration of the FMM using the data parallel GPU architecture. The FMM has a complex hierarchical (adaptive) structure, which is not easily implemented on data-parallel processors. We described strategies for parallelization of all components of the FMM, develop a model to explain the performance of the algorithm on the GPU architecture; and determined optimal settings for the FMM on the GPU. These optimal settings are different from those on usual CPUs. Some innovations in the FMM algorithm, including the use of modified stencils, real polynomial basis functions for the Laplace kernel, and decompositions of the translation operators, are also described. We obtained accelerations of the Laplace kernel FMM on a single NVIDIA GeForce 8800 GTX GPU in the range of 30-60 compared to a serial CPU FMM implementation. For a problem with a million sources, the summations involved are performed in approximately one second. This performance is equivalent to solving of the same problem at a 43 Teraflop rate if we use straightforward summation. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Fast multipole methods on graphics processors", "paper_id": "WOS:000258972000004"}