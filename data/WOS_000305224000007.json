{"auto_keywords": [{"score": 0.03398078596606166, "phrase": "msa"}, {"score": 0.013513350731740835, "phrase": "belief_propagation"}, {"score": 0.010989677962970196, "phrase": "stereo_matching"}, {"score": 0.010327832607377983, "phrase": "embedded_mpsoc_environments"}, {"score": 0.00481495049065317, "phrase": "multi-core_software_api"}, {"score": 0.0046184900568047565, "phrase": "markov_random_field_models"}, {"score": 0.004523272849033429, "phrase": "robust_formulation"}, {"score": 0.0044608829094248985, "phrase": "low-level_vision_problems"}, {"score": 0.004308630865024719, "phrase": "stereo_vision"}, {"score": 0.004075856592131127, "phrase": "bp"}, {"score": 0.003964007795174772, "phrase": "accurate_result"}, {"score": 0.003909301559145041, "phrase": "stereo_vision_problems"}, {"score": 0.0036722834182246933, "phrase": "practical_use"}, {"score": 0.0035222812668916736, "phrase": "case_study"}, {"score": 0.003285725064532174, "phrase": "\"multi-core_software_apis"}, {"score": 0.0030437652050982617, "phrase": "library-based_middleware"}, {"score": 0.002980916123365584, "phrase": "asynchronous_remote_procedure_call"}, {"score": 0.002939754732551094, "phrase": "rpc"}, {"score": 0.0028000270988465486, "phrase": "function-offloading_programming_model"}, {"score": 0.002723186210025975, "phrase": "underlying_interprocessor_communication"}, {"score": 0.002685558057339722, "phrase": "configuration_detail"}, {"score": 0.0024876840172100567, "phrase": "stream-specific_apis"}, {"score": 0.002419393934835993, "phrase": "streaming-function_remoting_mechanism"}, {"score": 0.0023859534478427313, "phrase": "heterogeneous_multi-core_architectures"}, {"score": 0.002272501735900584, "phrase": "bp_method"}, {"score": 0.002149418970824546, "phrase": "single_core_program"}, {"score": 0.0021049977753042253, "phrase": "multi-core_one"}], "paper_keywords": ["Multi-core programming", " Remote procedure call", " Streaming", " Stereo matching"], "paper_abstract": "Markov random field models provide a robust formulation of low-level vision problems. Among all these problems, stereo vision remains the most investigated field. The belief propagation (BP) method provides accurate result in stereo vision problems. However, the algorithm remains slow for practical use. This paper describes a case study on the parallelization of belief propagation for stereo matching using the \"Multi-core Software APIs\" (MSA) on embedded MPSoC environments. MSA is a library-based middleware providing an asynchronous remote procedure call (RPC) mechanism. It supplies a function-offloading programming model to hide the underlying interprocessor communication and configuration detail from programmers. Furthermore, MSA provides a set of stream-specific APIs for supporting a streaming-function remoting mechanism on heterogeneous multi-core architectures. Our experiments shows that the BP method for stereo matching can be adapted from a single core program to a multi-core one for embedded MPSoC environments rapidly.", "paper_title": "Case study: stereo vision experiments with multi-core software API on embedded MPSoC environments", "paper_id": "WOS:000305224000007"}