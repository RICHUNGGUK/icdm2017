{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scheduling_and_endpoint_rate_control"}, {"score": 0.004757227624616643, "phrase": "gridnetworks"}, {"score": 0.004671932143798307, "phrase": "grid_networks"}, {"score": 0.004191200981137508, "phrase": "computing-intensive_and_data-intensive_applications"}, {"score": 0.0037597491055035895, "phrase": "massive_data"}, {"score": 0.0035609154384221567, "phrase": "bulk_data_transfer_scheduling_problem"}, {"score": 0.0034759420565135253, "phrase": "optimal_solution"}, {"score": 0.0033929894721242367, "phrase": "network_congestion_factor"}, {"score": 0.003332072426367186, "phrase": "dedicated_network"}, {"score": 0.0032722454818973853, "phrase": "isolated_traffic_class"}, {"score": 0.003174903873774882, "phrase": "individual_flows'_time"}, {"score": 0.0030251262102203385, "phrase": "polynomial_time"}, {"score": 0.002899861600151726, "phrase": "multi-interval_bandwidth_allocation_profiles"}, {"score": 0.002813566267090177, "phrase": "large-scale_deployment"}, {"score": 0.0026485829604700833, "phrase": "data_plane"}, {"score": 0.0025542617599268323, "phrase": "bandwidth_profile_enforcement_mechanism"}, {"score": 0.0025235718883452585, "phrase": "traditional_transport_protocols"}, {"score": 0.002361236012575149, "phrase": "linux_kernel"}, {"score": 0.002318799760022913, "phrase": "experimental_evaluation"}, {"score": 0.0022771244331421586, "phrase": "packet_pacing"}, {"score": 0.0022361964497681934, "phrase": "ip_level"}, {"score": 0.0021960024679620886, "phrase": "simple_yet_valuable_and_tcp-compatible_solution"}], "paper_keywords": ["Grid networks", " Flow scheduling", " Bulk data transfers", " Rate limitation", " Pacing"], "paper_abstract": "In grid networks, distributed resources, computing or storage elements as well as scientific instruments are interconnected to support computing-intensive and data-intensive applications. To facilitate the efficient scheduling of these resources, we propose to manage the movements of massive data set between them. This paper formulates the bulk data transfer scheduling problem and presents an optimal solution to minimize the network congestion factor of a dedicated network or an isolated traffic class. The solution satisfying individual flows' time and volume constraints can be found in polynomial time and expressed as a set of multi-interval bandwidth allocation profiles. To ensure a large-scale deployment of this approach, we propose, for the data plane, a combination of a bandwidth profile enforcement mechanism with traditional transport protocols. The paper examines several solutions for implementing such a mechanism in a Linux kernel. The experimental evaluation shows that packet pacing performed at IP level offers a simple yet valuable and TCP-compatible solution for accurate bandwidth profile enforcement at very high speed. (C) 2008 Elsevier B.V. All rights reserved", "paper_title": "Flow scheduling and endpoint rate control in GridNetworks", "paper_id": "WOS:000267736000010"}