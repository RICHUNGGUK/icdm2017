{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "numerous_tools"}, {"score": 0.004625881588444304, "phrase": "software_errors"}, {"score": 0.004399905285945236, "phrase": "memory_checking"}, {"score": 0.004227064760262924, "phrase": "pre-deployment_testing"}, {"score": 0.004020492138367616, "phrase": "special-purpose_hardware"}, {"score": 0.0038239757564863057, "phrase": "individual_analyses"}, {"score": 0.0036921366375716005, "phrase": "generalized_mechanisms"}, {"score": 0.00354700018079049, "phrase": "commercial_processors"}, {"score": 0.003356675879109443, "phrase": "unlimited_number"}, {"score": 0.0033231814056233103, "phrase": "fine-grain_data_watchpoints"}, {"score": 0.0032571885279065126, "phrase": "runtime_overheads"}, {"score": 0.0032246835734680377, "phrase": "numerous_dynamic_software_analysis_techniques"}, {"score": 0.0031448288291084, "phrase": "watchpoint_capabilities"}, {"score": 0.0028446460307503343, "phrase": "hardware_design"}, {"score": 0.0027741761880779535, "phrase": "main_memory"}, {"score": 0.002560162916190598, "phrase": "bitmap_lookaside_buffer"}, {"score": 0.0025219085140220773, "phrase": "fine-grained_watchpoints"}, {"score": 0.0024348510123716424, "phrase": "range_cache"}, {"score": 0.0023745087648471613, "phrase": "large_contiguous_regions"}, {"score": 0.0021049977753042253, "phrase": "software_data_race_detector"}], "paper_keywords": ["Design", " Performance", " Watchpoints", " Data Race Detection", " Deterministic Concurrent Execution", " Taint Analysis", " Demand-Driven Analysis"], "paper_abstract": "Numerous tools have been proposed to help developers fix software errors and inefficiencies. Widely-used techniques such as memory checking suffer from overheads that limit their use to pre-deployment testing, while more advanced systems have such severe performance impacts that they may require special-purpose hardware. Previous works have described hardware that can accelerate individual analyses, but such specialization stymies adoption; generalized mechanisms are more likely to be added to commercial processors. This paper demonstrates that the ability to set an unlimited number of fine-grain data watchpoints can reduce the runtime overheads of numerous dynamic software analysis techniques. We detail the watchpoint capabilities required to accelerate these analyses while remaining general enough to be useful in the future. We describe a hardware design that stores watchpoints in main memory and utilizes two different on-chip caches to accelerate performance. The first is a bitmap lookaside buffer that stores fine-grained watchpoints, while the second is a range cache that can efficiently hold large contiguous regions of watchpoints. As an example of the power of such a system, it is possible to use watchpoints to accelerate read/write set checks in a software data race detector by nearly 9x", "paper_title": "A Case for Unlimited Watchpoints", "paper_id": "WOS:000209339300014"}