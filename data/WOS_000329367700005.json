{"auto_keywords": [{"score": 0.04856216099390579, "phrase": "dsm"}, {"score": 0.00481495049065317, "phrase": "cyclic_dependencies"}, {"score": 0.004746558955503364, "phrase": "enriched_dependency_structural_matrix"}, {"score": 0.004695900553353526, "phrase": "structural_matrix"}, {"score": 0.004530894050040479, "phrase": "process_optimization"}, {"score": 0.004387329529902255, "phrase": "software_dependencies"}, {"score": 0.004040688646993605, "phrase": "problematic_dependencies"}, {"score": 0.003954837422946628, "phrase": "existing_dsm_implementations"}, {"score": 0.003912595576016982, "phrase": "important_information"}, {"score": 0.003856971411867688, "phrase": "reengineering_effort"}, {"score": 0.0036947814248579243, "phrase": "problematic_relationships"}, {"score": 0.0035904480418810837, "phrase": "remediation_tasks"}, {"score": 0.00347657813672945, "phrase": "small-multiple_views"}, {"score": 0.0034148795808317555, "phrase": "fine-grained_information"}, {"score": 0.003259522768246318, "phrase": "contextual_information"}, {"score": 0.0031533694289369737, "phrase": "moose"}, {"score": 0.0029802879302375986, "phrase": "referencing_entities"}, {"score": 0.0028857130140890787, "phrase": "referenced_entities"}, {"score": 0.0028446460307503343, "phrase": "independent_cycles"}, {"score": 0.0028142286985235977, "phrase": "potentially_simple_fixes"}, {"score": 0.002764252199256058, "phrase": "coloring_information"}, {"score": 0.002619571161767134, "phrase": "moose_software_analysis_platform"}, {"score": 0.0025003054002226965, "phrase": "cell_content_information_view"}, {"score": 0.002455889980202819, "phrase": "user_feedback"}, {"score": 0.0024296194239886676, "phrase": "multiple_validations"}, {"score": 0.00235247790591897, "phrase": "seaside_software"}, {"score": 0.002285961573963468, "phrase": "usable_approach"}, {"score": 0.002158505888557746, "phrase": "analyzed_software"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software visualization", " reengineering", " dependency structural matrix", " package", " dependency analysis"], "paper_abstract": "Dependency structural matrix (DSM) is an approach originally developed for process optimization. It has been successfully applied to identify software dependencies among packages and subsystems. A number of algorithms have been proposed to compute the matrix so that it highlights patterns and problematic dependencies between subsystems. However, existing DSM implementations often miss important information to fully support reengineering effort. For example, they do not clearly qualify and quantify problematic relationships, information that is crucial to support remediation tasks. We propose enriched DSM (eDSM), which provides small-multiple views and micro-macro-readings by adding fine-grained information in each cell of the matrix. Each cell is enriched with contextual information about (i) the type of dependencies (inheritance, class reference, etc.), (ii) the proportion of referencing entities, and (iii) the proportion of referenced entities. We distinguish independent cycles and stress potentially simple fixes for cycles by using coloring information. This work is language independent and has been implemented on top of the Moose software analysis platform. In this paper, we expand our previous work. We improved the cell content information view on the basis of user feedback and performed multiple validations: two different case studies on Moose and Seaside software; one user study for validating eDSM as a usable approach for developers. Solutions to problems identified with eDSM have been performed and retrofitted in analyzed software. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Resolving cyclic dependencies between packages with enriched dependency structural matrix", "paper_id": "WOS:000329367700005"}