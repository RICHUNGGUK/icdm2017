{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "alias_speculation"}, {"score": 0.04011643449782753, "phrase": "smarq"}, {"score": 0.014901549665969505, "phrase": "tm"}, {"score": 0.00481495049065317, "phrase": "efficient_alias_speculation"}, {"score": 0.004606479650820579, "phrase": "transmeta"}, {"score": 0.004216112320418982, "phrase": "dynamic_binary_optimization"}, {"score": 0.004154332348800334, "phrase": "instruction-level_parallelism"}, {"score": 0.003858697684681798, "phrase": "state-of-the-art_alias_speculation_system"}, {"score": 0.003378385493203297, "phrase": "new_alias_registers"}, {"score": 0.0032639039638211347, "phrase": "new_checks"}, {"score": 0.0029722900280316216, "phrase": "speculation_validation_checks"}, {"score": 0.0028715299874549245, "phrase": "smarq."}, {"score": 0.0027605398374811667, "phrase": "novel_technique"}, {"score": 0.0026277995163948263, "phrase": "synergistic_combination"}, {"score": 0.002576503437739865, "phrase": "microarchitectural_techniques"}, {"score": 0.0024405312482831646, "phrase": "memory_instructions"}, {"score": 0.0021896891011033105, "phrase": "dynamic_alias_checks"}, {"score": 0.0021049977753042253, "phrase": "entire_spec"}], "paper_keywords": ["binary translator", " alias speculation", " code generation", " hardware/software co-design"], "paper_abstract": "Microprocessors designed using HW/SW codesign principles, such as Transmeta (TM) Efficeon (TM) and the soon-to-ship NVIDIA 64-bit Tegra (R) K1, use dynamic binary optimization to extract instruction-level parallelism. Many code optimizations are made significantly more effective through the use of alias speculation. The state-of-the-art alias speculation system, SMARQ, provides 40% speedup on average over a system with no alias speculation. This performance, however, comes at the cost of introducing new alias registers and increased power consumption due to new checks for validating speculation. Consequently, improving the efficiency of alias speculation by reducing alias register requirements and rationalizing speculation validation checks is critical for the viability of SMARQ. This paper presents alias coalescing, a novel technique to significantly improve the efficiency of SMARQ through a synergistic combination of compiler and microarchitectural techniques. By using a more compact encoding for memory access ranges for memory instructions, alias coalescing simultaneously reduces the alias register pressure in SMARQ by a geomean of 26.09% and 39.96%, and the dynamic alias checks by 20.73% and 33.87%, across the entire SPEC CINT2006 and SPEC CFP2006 suites respectively.", "paper_title": "Enabling Efficient Alias Speculation", "paper_id": "WOS:000370875500007"}