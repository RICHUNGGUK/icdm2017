{"auto_keywords": [{"score": 0.0455466088830923, "phrase": "iris"}, {"score": 0.004818256686983587, "phrase": "invariants"}, {"score": 0.004658426838467567, "phrase": "orthogonal_basis"}, {"score": 0.004556901872357751, "phrase": "concurrent_reasoning"}, {"score": 0.003992385826251404, "phrase": "simple_premise"}, {"score": 0.0035755653799043, "phrase": "partial_commutative_monoids"}, {"score": 0.003132236287543072, "phrase": "-user-defined_protocols"}, {"score": 0.0028360962841331634, "phrase": "conceptual_core"}, {"score": 0.002539689093411356, "phrase": "novel_extension"}, {"score": 0.0023768935613577985, "phrase": "view_shift"}, {"score": 0.002200077887697072, "phrase": "logically_atomic_specifications"}, {"score": 0.002105004671996217, "phrase": "hoare"}], "paper_keywords": ["Separation logic", " fine-grained concurrency", " atomicity", " partial commutative monoids", " invariants", " higher-order logic", " compositional verification"], "paper_abstract": "We present Iris, a concurrent separation logic with a simple premise: monoids and invariants are all you need. Partial commutative monoids enable us to express-and invariants enable us to enforce-user-defined protocols on shared state, which are at the conceptual core of most recent program logics for concurrency. Furthermore, through a novel extension of the concept of a view shift, Iris supports the encoding of logically atomic specifications, i.e., Hoare-style specs that permit the client of an operation to treat the operation essentially as if it were atomic, even if it is not.", "paper_title": "Iris: Monoids and Invariants as an Orthogonal Basis for Concurrent Reasoning", "paper_id": "WOS:000354800500051"}