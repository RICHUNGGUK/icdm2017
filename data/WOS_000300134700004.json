{"auto_keywords": [{"score": 0.042291837632617076, "phrase": "mpi"}, {"score": 0.0112490402289615, "phrase": "derived_datatypes"}, {"score": 0.00953506719785402, "phrase": "collective_interfaces"}, {"score": 0.00481495049065317, "phrase": "collective_communication"}, {"score": 0.004766694882065034, "phrase": "mpi."}, {"score": 0.004223708778943785, "phrase": "well-known_memory"}, {"score": 0.00418134346679498, "phrase": "performance_scalability_problems"}, {"score": 0.004077272409331917, "phrase": "collective_interface_definitions"}, {"score": 0.0037235274565193665, "phrase": "mpi_collectives"}, {"score": 0.0036676174658755683, "phrase": "different_set"}, {"score": 0.003558294449586273, "phrase": "data_sizes"}, {"score": 0.0030278017562213265, "phrase": "collective_operation"}, {"score": 0.002952356518921907, "phrase": "interface_scalability_issue"}, {"score": 0.002709589081384597, "phrase": "memory_scalability"}, {"score": 0.0025892330566358503, "phrase": "alternative_datatypes"}, {"score": 0.0024617483174454134, "phrase": "independent_interest"}, {"score": 0.0024247382451294255, "phrase": "running_example"}, {"score": 0.0023523750536537102, "phrase": "alternative_set"}, {"score": 0.0023053339328456234, "phrase": "implementation_issues"}, {"score": 0.0021697677572213086, "phrase": "reasonable_mpi_library_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Message-Passing Interface (MPI)", " Collective communication", " Derived datatypes", " Scalability"], "paper_abstract": "In both the regular and the irregular MPI (Message-Passing Interface) collective communication and reduction interfaces there is a correspondence between the argument lists and certain MPI derived datatypes. As a means to address and alleviate well-known memory and performance scalability problems in the irregular (or vector) collective interface definitions of MPI we propose to push this correspondence to its natural limit, and replace the interfaces of the MPI collectives with a different set of interfaces that specify all data sizes and displacements solely by means of derived datatypes. This reduces the number of collective (communication and reduction) interfaces from 16 to 10, significantly generalizes the operations, unifies regular and irregular collective interfaces, makes it possible to decouple certain algorithmic decisions from the collective operation, and moves the interface scalability issue from the collective interfaces to the MPI derived datatypes. To complete the proposal we discuss the memory scalability of the derived datatypes and suggest a number of alternative datatypes for MPI, some of which should be of independent interest. A running example illustrates the benefits of this alternative set of collective interfaces. Implementation issues are discussed showing that an implementation can be undertaken within any reasonable MPI library implementation. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Alternative, uniformly expressive and more scalable interfaces for collective communication in MPI", "paper_id": "WOS:000300134700004"}