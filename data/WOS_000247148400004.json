{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asm"}, {"score": 0.0042928648367867835, "phrase": "new_research_effort"}, {"score": 0.004147523799581407, "phrase": "abstract_state_machines"}, {"score": 0.003531474887552889, "phrase": "execution_engine"}, {"score": 0.00307657476125683, "phrase": "mathematical_definition"}, {"score": 0.003006654007926993, "phrase": "pure_asms"}, {"score": 0.002806256131739047, "phrase": "general_architecture"}, {"score": 0.0025596276616952516, "phrase": "high-level_description"}, {"score": 0.002472822097373027, "phrase": "extensibility_mechanisms"}, {"score": 0.0022296340517805125, "phrase": "arbitrary_backgrounds"}, {"score": 0.0021789194955896124, "phrase": "scheduling_policies"}, {"score": 0.0021049977753042253, "phrase": "new_rule_forms"}], "paper_keywords": ["CoreASM", " abstract state machines", " specification languages", " executable specification"], "paper_abstract": "In this paper we introduce a new research effort in making abstract state machines (ASMs) executable. The aim is to specify and implement an execution engine for a language that is as close as possible to the mathematical definition of pure ASMs. The paper presents the general architecture of the engine, together with a high-level description of the extensibility mechanisms that are used by the engine to accommodate arbitrary backgrounds, scheduling policies, and new rule forms.", "paper_title": "CoreASM: An extensible ASM execution engine", "paper_id": "WOS:000247148400004"}