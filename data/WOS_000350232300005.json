{"auto_keywords": [{"score": 0.048241894792168345, "phrase": "treewidth"}, {"score": 0.00481495049065317, "phrase": "sparsification_for_computing_treewidth"}, {"score": 0.004675768396728975, "phrase": "-vertex_instance"}, {"score": 0.00413767314434795, "phrase": "special_form"}, {"score": 0.0035553221885904467, "phrase": "polynomial_hierarchy"}, {"score": 0.003368948014436939, "phrase": "structural_parameterizations"}, {"score": 0.00298140108322916, "phrase": "np"}, {"score": 0.002838319783373086, "phrase": "optimal_kernel_size"}, {"score": 0.0027159094186967247, "phrase": "vertex_cover"}, {"score": 0.0026501935378083663, "phrase": "-vertex_kernel"}, {"score": 0.0026243534128245886, "phrase": "bodlaender_et_al"}, {"score": 0.0024264776194357993, "phrase": "novel_notion"}, {"score": 0.0024028135317872, "phrase": "treewidth-invariant_set"}, {"score": 0.002344655708000408, "phrase": "-expansion_lemma"}, {"score": 0.002321787726770895, "phrase": "fomin_et_al"}], "paper_keywords": ["Sparsification", " Lower bounds", " Treewidth", " Kernelization"], "paper_abstract": "We investigate whether an -vertex instance of Treewidth, asking whether the graph has treewidth at most , can efficiently be made sparse without changing its answer. By giving a special form of -cross-composition, we prove that this is unlikely: if there is an and a polynomial-time algorithm that reduces -vertex Treewidth instances to equivalent instances, of an arbitrary problem, with bits, then NP coNPpoly and the polynomial hierarchy collapses to its third level. Our sparsification lower bound has implications for structural parameterizations of Treewidth: parameterizations by measures that do not exceed the number of vertices cannot have kernels with bits for any , unless NP coNPpoly. Motivated by the question of determining the optimal kernel size for Treewidth parameterized by the size of a vertex cover , we improve the -vertex kernel from Bodlaender et al. (SIDMA 2013) to a kernel with vertices. Our improved kernel is based on the novel notion of treewidth-invariant set. We use the -expansion lemma of Fomin et al. (STACS 2011) to find such sets efficiently in graphs whose order is superquadratic in their vertex cover number. We believe that our new reduction rule will be useful in practice.", "paper_title": "On Sparsification for Computing Treewidth", "paper_id": "WOS:000350232300005"}