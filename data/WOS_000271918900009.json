{"auto_keywords": [{"score": 0.02841775003608198, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "parallel_ant_colony_optimization_algorithm"}, {"score": 0.004646852519870358, "phrase": "fgaco"}, {"score": 0.0037209035703970705, "phrase": "heavy_data_communication"}, {"score": 0.0036229421570951807, "phrase": "parallel_computers"}, {"score": 0.002900426826591769, "phrase": "fgaco_method"}, {"score": 0.002824005136794786, "phrase": "gp_u-acceleration"}, {"score": 0.0027252240573281163, "phrase": "parallel_aco_algorithm"}, {"score": 0.00260657976055413, "phrase": "compute_unified_device_architecture"}, {"score": 0.002470987929071079, "phrase": "analytical_results"}, {"score": 0.0023633857274905977, "phrase": "proposed_method"}, {"score": 0.0023010815714140467, "phrase": "population_size"}, {"score": 0.0021620042653528846, "phrase": "ordinary_users"}, {"score": 0.0021049977753042253, "phrase": "feasible_fgaco_solution"}], "paper_keywords": ["Ant colony optimization algorithm", " Parallel process", " CPU", " CUDA", " Fine-grained"], "paper_abstract": "Fine-grained parallel ant colony optimization algorithm (FGACO), though a popular and robust strategy for solving complicated optimization problems, is sometimes inconvenient to use as its population size is restricted by heavy data communication and the parallel computers are relatively difficult to use, manage, maintain and may not be accessible to most researchers. In this paper, we propose a FGACO method based on GP U-acceleration, which maps parallel ACO algorithm to GPU through the compute unified device architecture (CUDA). The analytical results demonstrate that, the proposed method increases the population size, speeds up its execution and provides ordinary users with a feasible FGACO solution.", "paper_title": "A PARALLEL ANT COLONY OPTIMIZATION ALGORITHM BASED ON FINE-GRAINED MODEL WITH GPU-ACCELERATION", "paper_id": "WOS:000271918900009"}