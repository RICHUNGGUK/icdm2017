{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hoare_logic"}, {"score": 0.004701015188740578, "phrase": "traced_symmetric_monoidal_categories"}, {"score": 0.0038348235692738783, "phrase": "traced_monoidal_functor"}, {"score": 0.0036993855514735746, "phrase": "arbitrary_traced_monoidal_category"}, {"score": 0.0034016119212097826, "phrase": "monotone_relations"}, {"score": 0.003053598205821532, "phrase": "usual_hoare_logics"}, {"score": 0.002708399936381754, "phrase": "pointer_programs"}, {"score": 0.0025202582748972122, "phrase": "case_studies"}, {"score": 0.002262209824105154, "phrase": "new_hoare_logics"}, {"score": 0.0022085455097790537, "phrase": "runtime_analysis"}, {"score": 0.0021049977753042253, "phrase": "stream_circuits"}], "paper_keywords": ["Theory", " Verification", " Hoare logic", " traced monoidal categories", " stream circuits"], "paper_abstract": "This article presents an abstraction of Hoare logic to traced symmetric monoidal categories, a very general framework for the theory of systems. Our abstraction is based on a traced monoidal functor from an arbitrary traced monoidal category into the category of preorders and monotone relations. We give several examples of how our theory generalizes usual Hoare logics (partial correctness of while programs, partial correctness of pointer programs), and provide some case studies on how it can be used to develop new Hoare logics (runtime analysis of while programs and stream circuits).", "paper_title": "A General Framework for Sound and Complete Floyd-Hoare Logics", "paper_id": "WOS:000272039900007"}