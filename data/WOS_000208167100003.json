{"auto_keywords": [{"score": 0.03730689531156782, "phrase": "scma"}, {"score": 0.007697234662450759, "phrase": "bandwidth-reduction_mechanism"}, {"score": 0.0074635952945570705, "phrase": "finite_difference_methods"}, {"score": 0.0065420938166444965, "phrase": "scalable_fpga-array"}, {"score": 0.004982539080230878, "phrase": "brm"}, {"score": 0.00481495049065317, "phrase": "fpga-array"}, {"score": 0.004603244077348199, "phrase": "scientific_numerical_simulation"}, {"score": 0.004551781491498328, "phrase": "relatively_high_ratio"}, {"score": 0.0045262653692203815, "phrase": "data_access"}, {"score": 0.004438075106846512, "phrase": "memory_bandwidth"}, {"score": 0.004376131419366239, "phrase": "performance_improvement"}, {"score": 0.004242868712089958, "phrase": "promising_approaches"}, {"score": 0.004207230913063179, "phrase": "bandwidth-aware_structures"}, {"score": 0.004171891198117434, "phrase": "individual_applications"}, {"score": 0.00397714507836836, "phrase": "high-performance_and_power-efficient_ccms"}, {"score": 0.0038128448094757145, "phrase": "systolic_computational-memory_array"}, {"score": 0.0036450381529042103, "phrase": "high_productivity"}, {"score": 0.0036042491702884052, "phrase": "boundary_computations"}, {"score": 0.0035639149949775856, "phrase": "systolic_computational-memory_architecture"}, {"score": 0.0035240305920962766, "phrase": "scalability_of_both_memory_bandwidth_and_arithmetic_performance"}, {"score": 0.0034262547919775587, "phrase": "homogeneously_partitioning_approach"}, {"score": 0.0032387402145603412, "phrase": "mesh_network"}, {"score": 0.00319348234663792, "phrase": "bandwidth_requirement"}, {"score": 0.003175556211659149, "phrase": "inter-fpga_communication"}, {"score": 0.003113601003720005, "phrase": "time-division_multiplexing"}, {"score": 0.003070086433952691, "phrase": "required_number"}, {"score": 0.00305285084207725, "phrase": "communication_channels"}, {"score": 0.003027178161479457, "phrase": "adjacent_fpgas"}, {"score": 0.002984867789900281, "phrase": "delay_cycles"}, {"score": 0.002893848939571513, "phrase": "inter-fpga_data-transfer"}, {"score": 0.00287759989638073, "phrase": "brm."}, {"score": 0.0026594392054760806, "phrase": "peak_performance"}, {"score": 0.0026296502381720293, "phrase": "single_precision"}, {"score": 0.0025638362414466278, "phrase": "sustained_performances"}, {"score": 0.0025208755851561368, "phrase": "high_utilization"}, {"score": 0.002506715532901322, "phrase": "computing_units"}, {"score": 0.002471661547432869, "phrase": "complete_scalability"}, {"score": 0.002450864311898833, "phrase": "increasing_number"}, {"score": 0.0024097920845706795, "phrase": "highly_localized_computation"}, {"score": 0.0023296961971785357, "phrase": "fpga-based_scma"}, {"score": 0.0021773853011112882, "phrase": "software_simulation"}, {"score": 0.002122866345896679, "phrase": "benchmark_computations"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Finite difference methods", " FPGAs", " reconfigurable computing", " scalable array"], "paper_abstract": "For scientific numerical simulation that requires a relatively high ratio of data access to computation, the scalability of memory bandwidth is the key to performance improvement, and therefore custom-computing machines (CCMs) are one of the promising approaches to provide bandwidth-aware structures tailored for individual applications. In this article, we propose a scalable FPGA-array with bandwidth-reduction mechanism (BRM) to implement high-performance and power-efficient CCMs for scientific simulations based on finite difference methods. With the FPGA-array, we construct a systolic computational-memory array (SCMA), which is given a minimum of programmability to provide flexibility and high productivity for various computing kernels and boundary computations. Since the systolic computational-memory architecture of SCMA provides scalability of both memory bandwidth and arithmetic performance according to the array size, we introduce a homogeneously partitioning approach to the SCMA so that it is extensible over a 1D or 2D array of FPGAs connected with a mesh network. To satisfy the bandwidth requirement of inter-FPGA communication, we propose BRM based on time-division multiplexing. BRM decreases the required number of communication channels between the adjacent FPGAs at the cost of delay cycles. We formulate the trade-off between bandwidth and delay of inter-FPGA data-transfer with BRM. To demonstrate feasibility and evaluate performance quantitatively, we design and implement the SCMA of 192 processing elements over two ALTERA Stratix II FPGAs. The implemented SCMA running at 106MHz has the peak performance of 40.7 GFlops in single precision. We demonstrate that the SCMA achieves the sustained performances of 32.8 to 35.7 GFlops for three benchmark computations with high utilization of computing units. The SCMA has complete scalability to the increasing number of FPGAs due to the highly localized computation and communication. In addition, we also demonstrate that the FPGA-based SCMA is power-efficient: it consumes 69% to 87% power and requires only 2.8% to 7.0% energy of those for the same computations performed by a 3.4-GHz Pentium4 processor. With software simulation, we show that BRM works effectively for benchmark computations, and therefore commercially available low-end FPGAs with relatively narrow I/O bandwidth can be utilized to construct a scalable FPGA-array.", "paper_title": "FPGA-Array with Bandwidth-Reduction Mechanism for Scalable and Power-Efficient Numerical Simulations Based on Finite Difference Methods", "paper_id": "WOS:000208167100003"}