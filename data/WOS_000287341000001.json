{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "expression_trees"}, {"score": 0.049270547314558835, "phrase": "large_objects"}, {"score": 0.004310173770196077, "phrase": "scientific_computing_applications"}, {"score": 0.004201381218977942, "phrase": "electronic_structure_calculations"}, {"score": 0.00402610372759447, "phrase": "tree_node_objects"}, {"score": 0.0032810180076973806, "phrase": "evaluation_order"}, {"score": 0.0030127172247606812, "phrase": "least_amount"}, {"score": 0.002742787059497186, "phrase": "optimal_evaluation_order"}, {"score": 0.0025183881730011597, "phrase": "n-node_expression_tree"}, {"score": 0.002253826965566618, "phrase": "representative_equations"}, {"score": 0.002215663255682209, "phrase": "quantum_chemistry"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Expression tree", " Evaluation order", " Memory minimization", " Register allocation"], "paper_abstract": "The need to evaluate expression trees involving large objects arises in scientific computing applications such as electronic structure calculations. Often, the tree node objects are so large that only a subset of them can fit into memory at a time. This paper addresses the problem of finding an evaluation order of the nodes in a given expression tree that uses the least amount of memory. We present an algorithm that finds an optimal evaluation order in Theta(n log(2) n) time for an n-node expression tree and prove its correctness. We demonstrate the utility of our algorithm using representative equations from quantum chemistry. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Memory-optimal evaluation of expression trees involving large objects", "paper_id": "WOS:000287341000001"}