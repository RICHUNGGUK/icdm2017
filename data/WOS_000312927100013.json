{"auto_keywords": [{"score": 0.04847725805604942, "phrase": "software_estimation"}, {"score": 0.0456315961504987, "phrase": "software_effort"}, {"score": 0.03223924488101999, "phrase": "regression_model"}, {"score": 0.00481495049065317, "phrase": "early_software_estimation"}, {"score": 0.004768378525561471, "phrase": "log-linear_regression"}, {"score": 0.0046993598473345395, "phrase": "multilayer_perceptron_model"}, {"score": 0.004586531354697466, "phrase": "tedious_and_daunting_task"}, {"score": 0.004542158659382197, "phrase": "project_management_and_software_development"}, {"score": 0.004161553532799662, "phrase": "new_models"}, {"score": 0.003831310632470526, "phrase": "early_stages"}, {"score": 0.003775803846431323, "phrase": "software_life_cycle"}, {"score": 0.003459191419478298, "phrase": "novel_log-linear_regression_model"}, {"score": 0.003392507399258166, "phrase": "use_case_point_model"}, {"score": 0.0033596533744857074, "phrase": "ucp"}, {"score": 0.00323134923196813, "phrase": "use_case_diagrams"}, {"score": 0.0031845067058084613, "phrase": "fuzzy_logic_approach"}, {"score": 0.003092842645798083, "phrase": "productivity_factor"}, {"score": 0.0028333356794133053, "phrase": "software_size"}, {"score": 0.002711842889248926, "phrase": "proposed_approach"}, {"score": 0.002672511078070529, "phrase": "original_ucp_model"}, {"score": 0.002545468362709126, "phrase": "log-linear_regression_models"}, {"score": 0.002366110899738696, "phrase": "mlp_model"}, {"score": 0.002297949552105756, "phrase": "small_projects"}, {"score": 0.002231747358665628, "phrase": "log-linear_regression_model"}, {"score": 0.0021674482571326283, "phrase": "larger_projects"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Use case points", " Log-linear regression model", " Software effort estimation", " Multilayer perceptron"], "paper_abstract": "Software estimation is a tedious and daunting task in project management and software development. Software estimators are notorious in predicting software effort and they have been struggling in the past decades to provide new models to enhance software estimation. The most critical and crucial part of software estimation is when estimation is required in the early stages of the software life cycle where the problem to be solved has not yet been completely revealed. This paper presents a novel log-linear regression model based on the use case point model (UCP) to calculate the software effort based on use case diagrams. A fuzzy logic approach is used to calibrate the productivity factor in the regression model. Moreover, a multilayer perceptron (MLP) neural network model was developed to predict software effort based on the software size and team productivity. Experiments show that the proposed approach outperforms the original UCP model. Furthermore, a comparison between the MLP and log-linear regression models was conducted based on the size of the projects. Results demonstrate that the MLP model can surpass the regression model when small projects are used, but the log-linear regression model gives better results when estimating larger projects. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Towards an early software estimation using log-linear regression and a multilayer perceptron model", "paper_id": "WOS:000312927100013"}