{"auto_keywords": [{"score": 0.04030714087379597, "phrase": "java"}, {"score": 0.01497262979980458, "phrase": "ada"}, {"score": 0.013985822911040148, "phrase": "safety-critical_systems"}, {"score": 0.00481512387212552, "phrase": "tm"}, {"score": 0.004674952036988355, "phrase": "safety-critical_applications"}, {"score": 0.0036553070575015344, "phrase": "serious_choice"}, {"score": 0.0034118234596993867, "phrase": "recent_work"}, {"score": 0.0032800186243040663, "phrase": "real-time_specification"}, {"score": 0.0030017207229983385, "phrase": "credible_alternative"}, {"score": 0.0027200305495826797, "phrase": "rtsj"}, {"score": 0.0021049977753042253, "phrase": "safety-certified_software"}], "paper_keywords": [""], "paper_abstract": "Ada has long been used for developing safety-critical systems, and the upcoming Ada 2005 language revision extends this support. For various reasons Java has not been a serious choice in this domain. However, recent work based on the Real-Time Specification for Java promises to make Java technology a credible alternative. This paper discusses and compares Ada and the RTSJ with respect to the requirements for safety-critical systems, in particular how they can serve as the basis for subsets that can be used for developing safety-certified software.", "paper_title": "Comparison of Ada and real-time Java (TM) for safety-critical applications", "paper_id": "WOS:000238387000002"}