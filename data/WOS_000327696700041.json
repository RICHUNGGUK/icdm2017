{"auto_keywords": [{"score": 0.04543569910692644, "phrase": "aam"}, {"score": 0.00481495049065317, "phrase": "optimizing_abstract_abstract_machines"}, {"score": 0.004461359547152617, "phrase": "abstract_machines"}, {"score": 0.004133627071344356, "phrase": "systematic_approach"}, {"score": 0.003978866233891427, "phrase": "computable_approximations"}, {"score": 0.00337224813954299, "phrase": "complementary_step-by-step_process"}, {"score": 0.0031242709509664837, "phrase": "naive_analyzer"}, {"score": 0.0029691377785333872, "phrase": "aam_approach"}, {"score": 0.002821685815956478, "phrase": "efficient_and_correct_implementation"}, {"score": 0.0027159094186967247, "phrase": "end_result"}, {"score": 0.0021870332034407817, "phrase": "hand-optimized_implementations"}, {"score": 0.0021049977753042253, "phrase": "fundamentally_less_precise_results"}], "paper_keywords": ["abstract machines", " abstract interpretation"], "paper_abstract": "The technique of abstracting abstract machines (AAM) provides a systematic approach for deriving computable approximations of evaluators that are easily proved sound. This article contributes a complementary step-by-step process for subsequently going from a naive analyzer derived under the AAM approach, to an efficient and correct implementation. The end result of the process is a two to three order-of-magnitude improvement over the systematically derived analyzer, making it competitive with hand-optimized implementations that compute fundamentally less precise results.", "paper_title": "Optimizing Abstract Abstract Machines", "paper_id": "WOS:000327696700041"}