{"auto_keywords": [{"score": 0.045562301690922014, "phrase": "requirement_traceability"}, {"score": 0.02034683920518785, "phrase": "software_evolution"}, {"score": 0.00481495049065317, "phrase": "multifaceted_requirement_traceability_approach"}, {"score": 0.004750527930368202, "phrase": "case_study._software_evolution"}, {"score": 0.004481132747216135, "phrase": "software_artifacts"}, {"score": 0.0042650992966174065, "phrase": "important_factors"}, {"score": 0.004114527599108734, "phrase": "artifacts_relationship"}, {"score": 0.0038985392250620483, "phrase": "expensive_activities"}, {"score": 0.003677280504320639, "phrase": "software_evolution_activities"}, {"score": 0.003595552309967789, "phrase": "evaluation_results"}, {"score": 0.0024641814990854463, "phrase": "software_evolution_process"}, {"score": 0.0024311346712789553, "phrase": "complete_experiment"}, {"score": 0.002366361492754389, "phrase": "real_case_study"}, {"score": 0.00216263228969761, "phrase": "existing_approach"}], "paper_keywords": ["Software evolution", " requirement traceability", " multifaceted traceability approach"], "paper_abstract": "Software evolution is inevitable. When a system evolves, there are certain relationships among software artifacts that must be maintained. Requirement traceability is one of the important factors in facilitating software evolution since it maintains the artifacts relationship before and after a change is performed. Requirement traceability can be expensive activities. Many researchers have addressed the problem of requirement traceability, especially to support software evolution activities. Yet, the evaluation results of these approaches show that most of them typically provide only limited support to software evolution. Based on the problems of requirement traceability, we have identified three directions that are important for traceability to support software evolution, i.e. process automation, procedure simplicity, and best results achievement. Those three directions are addressed in our multifaceted approach of requirement traceability. This approach utilizes three facets to generate links between artifacts, i.e. syntactical similarity matching, link prioritization, and heuristic-list based processes. This paper proposes the utilization of multifaceted approach to traceability generation and recovery in facilitating software evolution process. The complete experiment has been applied in a real case study. The results show that utilization of these three facets in generating the traceability among artifacts is better than the existing approach, especially in terms of its accuracy.", "paper_title": "UTILIZING MULTIFACETED REQUIREMENT TRACEABILITY APPROACH: A CASE STUDY", "paper_id": "WOS:000294664900004"}