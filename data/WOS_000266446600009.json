{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "deterministic_finite_automaton"}, {"score": 0.004471530397729526, "phrase": "regular_language"}, {"score": 0.004362564831572539, "phrase": "n-state_dfa"}, {"score": 0.0036030386046805598, "phrase": "worst_case"}, {"score": 0.003244050414264445, "phrase": "state_complexity"}, {"score": 0.0025972447844047515, "phrase": "lower_bound"}, {"score": 0.0025027144548626975, "phrase": "four-letter_alphabet"}, {"score": 0.002456744238900652, "phrase": "nondeterministic_state_complexity"}, {"score": 0.0021845387990972543, "phrase": "two-letter_alphabet"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Descriptional complexity", " Finite automata", " State complexity", " Combined operations", " Concatenation", " Power"], "paper_abstract": "The number of states in a deterministic finite automaton (DFA) recognizing the language L(k) where L is regular language recognized by an n-state DFA, and k >= 2 is a constant, is shown to be at most n2((k-1)n) and at least (n - k)2((k-1)(n-k)) in the worst case, for every n > k and for every alphabet of at least six letters. Thus, the state complexity of L(k) is Theta(n2((k-1)n)). In the case k = 3 the corresponding state complexity function for L(3) is determined as 6n-3/84(n) - (n-1)2(n) - n with the lower bound witnessed by automata over a four-letter alphabet. The nondeterministic state complexity of L(k) is demonstrated to be nk. This bound is shown to be tight over a two-letter alphabet. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "State complexity of power", "paper_id": "WOS:000266446600009"}