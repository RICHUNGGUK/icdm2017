{"auto_keywords": [{"score": 0.04782220347071723, "phrase": "cloud_storage"}, {"score": 0.00481495049065317, "phrase": "dynamic_approach"}, {"score": 0.004728624975677976, "phrase": "learning_automata"}, {"score": 0.004671932143798307, "phrase": "data_fault-tolerance"}, {"score": 0.004478782833067256, "phrase": "increasingly_expanded_utility"}, {"score": 0.004293584349522444, "phrase": "resources_management"}, {"score": 0.004216566615939546, "phrase": "shortest_time"}, {"score": 0.004091248980678087, "phrase": "users'_requests"}, {"score": 0.004017846065981189, "phrase": "geographical_constraints"}, {"score": 0.003945754887845885, "phrase": "prime_importance"}, {"score": 0.0037371212381934853, "phrase": "cloud_storage_systems"}, {"score": 0.0035181731203867456, "phrase": "cloud_storage_systems'_capability"}, {"score": 0.0034342161742428635, "phrase": "unexpected_fault"}, {"score": 0.003174903873774882, "phrase": "learning_automata-oriented_approach"}, {"score": 0.003117890043128058, "phrase": "tolerance_data"}, {"score": 0.0030434561939032597, "phrase": "traffic_and_query_loads"}, {"score": 0.0029887957779347394, "phrase": "data_centers"}, {"score": 0.0028650312174624635, "phrase": "best_possible_status"}, {"score": 0.0027463775689957255, "phrase": "data_nodes"}, {"score": 0.0025235718883452585, "phrase": "highest_traffic"}, {"score": 0.0024336917123957387, "phrase": "physical_nodes"}, {"score": 0.002389956401870098, "phrase": "experimental_results"}, {"score": 0.0023328599525181707, "phrase": "proposed_learning_automata_fault-tolerant_and_high-efficient_replication_algorithm"}, {"score": 0.002304824112812496, "phrase": "larfh"}, {"score": 0.002209319719984651, "phrase": "high_query_efficiency"}, {"score": 0.0021827653135510225, "phrase": "low_cost"}, {"score": 0.002156529381840657, "phrase": "high_availibility"}], "paper_keywords": ["Cloud Computation", " Cloud Storage", " Fault-Tolerance", " Learning Automata"], "paper_abstract": "Regarding the increasingly expanded utility of Cloud storage, the improvement of resources management in the shortest time to respond upon the users' requests and the geographical constraints is of prime importance to both the Cloud service providers and the users. Since the Cloud storage systems are exposed to failure, fault-tolerance is appraised by Cloud storage systems' capability for responding to unexpected fault through software or hardware. This paper represents an algorithm based on Learning Automata-oriented approach to fault tolerance data in Cloud storage regarding traffic and query loads dispatched on data centers and learning automata that provides the best possible status for scaling up or down of data nodes. Based on appraisal of traffic on nodes, the node with the highest traffic is chosen for coping among physical nodes. The experimental results indicate that the proposed Learning Automata Fault-Tolerant and High-efficient Replication algorithm (LARFH) has utilization high replication, high query efficiency, low cost and high availibility in comparison with other similar approaches.", "paper_title": "Dynamic Approach Based on Learning Automata for Data Fault-Tolerance in the Cloud Storage", "paper_id": "WOS:000370262800010"}