{"auto_keywords": [{"score": 0.049604883316905636, "phrase": "domain-specific_language"}, {"score": 0.01186718804792734, "phrase": "empirical_results"}, {"score": 0.003984968827278219, "phrase": "particular_one"}, {"score": 0.003906357144047631, "phrase": "implementation_approaches"}, {"score": 0.0038102613924627647, "phrase": "diverse_application_domains"}, {"score": 0.0035891316580885665, "phrase": "ten_diverse_implementation_approaches"}, {"score": 0.003553540530701019, "phrase": "domain-specific_languages"}, {"score": 0.003347259612209552, "phrase": "discussed_approaches"}, {"score": 0.0030600032877646263, "phrase": "a._programmer"}, {"score": 0.0028394925080958205, "phrase": "important_factor"}, {"score": 0.002687922713487696, "phrase": "correct_programs"}, {"score": 0.0026480044868438875, "phrase": "produced_domain-specific_language"}, {"score": 0.0025191653363555193, "phrase": "end-user_productivity"}, {"score": 0.002349228457383314, "phrase": "domain-specific_program"}, {"score": 0.0022913497040895586, "phrase": "original_notation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["domain-specific languages", " embedded approach", " preprocessing", " compiler/interpreter", " compiler/interpreter generator", " extensible compiler/interpreter", " commercial-off-the-shelf"], "paper_abstract": "Various implementation approaches for developing a domain-specific language are available in literature. There are certain common beliefs about the advantages/disadvantages of these approaches. However, it is hard to be objective and speak in favor of a particular one, since these implementation approaches are normally compared over diverse application domains. The purpose of this paper is to provide empirical results from ten diverse implementation approaches for domain-specific languages, but conducted using the same representative language. Comparison shows that these discussed approaches differ in terms of the effort need to implement them, however, the effort needed by a. programmer to implement a domain-specific language should not be the only factor taken into consideration. Another important factor is the effort needed by an end-user to rapidly write correct programs using the produced domain-specific language. Therefore, this paper also provides empirical results on end-user productivity, which is measured as the lines of code needed to express a domain-specific program, similarity to the original notation, and how error-reporting and debugging are supported in a given implementation. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "A preliminary study on various implementation approaches of domain-specific language", "paper_id": "WOS:000255153200003"}