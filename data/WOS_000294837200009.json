{"auto_keywords": [{"score": 0.04896221231267544, "phrase": "self-modifying_code"}, {"score": 0.03562071693205257, "phrase": "mobile_agent_code"}, {"score": 0.00481495049065317, "phrase": "mobile_agent_protection"}, {"score": 0.004129873531628877, "phrase": "parallel_distributed_computing"}, {"score": 0.0040334640350288, "phrase": "higher_performance"}, {"score": 0.0038930368103015467, "phrase": "security_issues"}, {"score": 0.003584025547693836, "phrase": "mobile_agent_system"}, {"score": 0.003459191419478298, "phrase": "sensitive_information"}, {"score": 0.0030374213037172803, "phrase": "host_platform"}, {"score": 0.002897109710213723, "phrase": "effective_protection"}, {"score": 0.00266693888510356, "phrase": "storage_size"}, {"score": 0.0023694065215394593, "phrase": "obfuscation_algorithm"}, {"score": 0.0021049977753042253, "phrase": "function_level"}], "paper_keywords": ["Mobile agent code", " Self-modifying code obfuscation"], "paper_abstract": "Mobile agent is widely used in area such as parallel distributed computing for higher performance. But security issues threaten both the algorithm and data running on mobile agent system. The sensitive information within mobile agent code is inclined to be reverse engineered on a host platform. Obfuscation provides effective protection in this case with little execution time and storage size overhead. In this paper, we propose an obfuscation algorithm based on self-modifying code to prevent mobile agent code from attack at function level. We implement the algorithm and prove the efficacy of the algorithm.", "paper_title": "Mobile Agent Protection with Self-Modifying Code", "paper_id": "WOS:000294837200009"}