{"auto_keywords": [{"score": 0.036123960464141965, "phrase": "columbus"}, {"score": 0.00481495049065317, "phrase": "software_change_impact_analysis"}, {"score": 0.004766411227641184, "phrase": "cia"}, {"score": 0.004670722261414736, "phrase": "essential_technique"}, {"score": 0.00457696724030363, "phrase": "potential_effects"}, {"score": 0.004507882471601552, "phrase": "software_changes"}, {"score": 0.00446240364863009, "phrase": "software_maintenance"}, {"score": 0.0043506951029334984, "phrase": "rich_body"}, {"score": 0.004306795240631196, "phrase": "cia_techniques"}, {"score": 0.004263336444795021, "phrase": "especially_static_cia_techniques"}, {"score": 0.004073113268289532, "phrase": "structural_static_analysis"}, {"score": 0.004032002950217453, "phrase": "textual_analysis"}, {"score": 0.003971111060168551, "phrase": "historical_analysis"}, {"score": 0.0037555742428544096, "phrase": "static_cia_techniques"}, {"score": 0.0035337158050484474, "phrase": "comparative_study"}, {"score": 0.0031926001871260524, "phrase": "cia_comparative_framework"}, {"score": 0.0031284221314354095, "phrase": "empirical_study"}, {"score": 0.002988685006809336, "phrase": "five_real-world_programs"}, {"score": 0.0028120022457134267, "phrase": "relatively_better_precision"}, {"score": 0.0023780209525032688, "phrase": "best_impact_results"}, {"score": 0.002248755794042486, "phrase": "similar_precision"}, {"score": 0.002192351481687917, "phrase": "rose"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Change impact analysis", " Comparative study", " Empirical study"], "paper_abstract": "Software Change Impact Analysis (CIA) is an essential technique to identify the potential effects caused by software changes during software maintenance and evolution. A rich body of CIA techniques, especially static CIA techniques, have continuously emerged in recent years such as structural static analysis, textual analysis, and historical analysis. However, there were only a few works focusing on comparison of static CIA techniques. This article attempts to bridge this gap by presenting a comparative study of three class-level static CIA techniques, i.e., Columbus, ROSE, and (IRCM)-M-2. We compare them based on a CIA comparative framework and conduct an empirical study to evaluate these three CIA techniques and their combinations based on five real-world programs. The empirical results show that: (1)(IRCM)-M-2 and ROSE achieve relatively better precision, recall and F-measure compared to Columbus; (2) combination of any two CIA techniques can improve the precision and recall over their individual one; moreover, combining ROSE with (IRCM)-M-2 produces the best impact results; and (3) combining all three CIA techniques obtain a similar precision and recall as combining ROSE with (IRCM)-M-2. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Static change impact analysis techniques: A comparative study", "paper_id": "WOS:000362137700010"}