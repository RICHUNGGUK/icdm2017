{"auto_keywords": [{"score": 0.004319830179921363, "phrase": "dynamic_programming"}, {"score": 0.0036248955128033084, "phrase": "partial_solutions"}, {"score": 0.0034476484413811987, "phrase": "new_non-dominated_criterion_vectors"}, {"score": 0.0032246835734680377, "phrase": "efficient_method"}, {"score": 0.0031186510842824626, "phrase": "existing_methods"}, {"score": 0.0029909851863915283, "phrase": "cpu_time"}, {"score": 0.0028926147550022607, "phrase": "solved_instances"}, {"score": 0.0028446460307503343, "phrase": "extensive_numerical_experiments"}, {"score": 0.0023864566654035924, "phrase": "first_time"}, {"score": 0.0022133711375320244, "phrase": "three-objective_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multi-objective knapsack problem", " Non-dominated criterion vectors", " Efficient solutions", " Dynamic programming", " Dominance relations", " Combinatorial optimization"], "paper_abstract": "In this paper, we present an approach, based on dynamic programming, for solving the 0-1 multi-objective knapsack problem. The main idea of the approach relies on the use of several complementary dominance relations to discard partial solutions that cannot lead to new non-dominated criterion vectors. This way, we obtain an efficient method that outperforms the existing methods both in terms of CPU time and size of solved instances. Extensive numerical experiments on various types of instances are reported. A comparison with other exact methods is also performed. In addition, for the first time to our knowledge, we present experiments in the three-objective case. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Solving efficiently the 0-1 multi-objective knapsack problem", "paper_id": "WOS:000260204300019"}