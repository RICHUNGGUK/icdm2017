{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tcp"}, {"score": 0.03873154375256223, "phrase": "transmission_phase"}, {"score": 0.038179475877321206, "phrase": "network_resource"}, {"score": 0.03165706074368635, "phrase": "initial_available_bandwidth"}, {"score": 0.004715819915695707, "phrase": "fair_streaming"}, {"score": 0.004687871834372534, "phrase": "scalable_video"}, {"score": 0.004660088610495924, "phrase": "dynamic_bandwidth_estimation"}, {"score": 0.004605012887484129, "phrase": "important_basis"}, {"score": 0.0045370785151713396, "phrase": "real-time_distributed_multimedia_applications"}, {"score": 0.004391114318381004, "phrase": "tcp-friendly_and_fair_congestion_control_algorithm"}, {"score": 0.004262481067951517, "phrase": "end-to-end_available_bandwidth"}, {"score": 0.004088674329188, "phrase": "streaming_applications"}, {"score": 0.004028326293950714, "phrase": "bandwidth_resolution"}, {"score": 0.004004436217742343, "phrase": "scalable_video_coding"}, {"score": 0.003980694356360861, "phrase": "svc"}, {"score": 0.003921926812074958, "phrase": "fine_granularity"}, {"score": 0.0038755411593867284, "phrase": "bit_level"}, {"score": 0.0038297020126219082, "phrase": "time-vary_heterogeneous_networks"}, {"score": 0.003795677450778112, "phrase": "congestion_control_algorithm"}, {"score": 0.0035977623578676496, "phrase": "svc_layers"}, {"score": 0.0035551969986263553, "phrase": "start_phase"}, {"score": 0.0034715658596258018, "phrase": "one-way_delay"}, {"score": 0.0034202949436614723, "phrase": "packet_trains"}, {"score": 0.0033597650090676032, "phrase": "available_bandwidth_inference_algorithm"}, {"score": 0.0032709661258673206, "phrase": "administrative_access"}, {"score": 0.003241889436209603, "phrase": "intermediate_routers"}, {"score": 0.0032130703855586685, "phrase": "network_path"}, {"score": 0.003165605014237376, "phrase": "binary_search"}, {"score": 0.0031468151597922214, "phrase": "fixed-rate_bandwidth_adjustment"}, {"score": 0.0030454408569868347, "phrase": "top-down_approach"}, {"score": 0.002801849371896573, "phrase": "sending_rate"}, {"score": 0.0027769311966019277, "phrase": "progressive_probing"}, {"score": 0.002760441976808015, "phrase": "also_the_accommodation"}, {"score": 0.0026635371397608107, "phrase": "unavoidable_network_congestion"}, {"score": 0.0026319954633536764, "phrase": "scalable_video_layers"}, {"score": 0.002600826330254548, "phrase": "packet_loss_rate"}, {"score": 0.0025020469669826497, "phrase": "streaming_service"}, {"score": 0.002357337046408753, "phrase": "probing_packets"}, {"score": 0.002315574871863272, "phrase": "available_bandwidth"}, {"score": 0.0022476051902301187, "phrase": "proposed_congestion_control_algorithm"}, {"score": 0.002234252028553481, "phrase": "real-time_applications"}, {"score": 0.0021622120805979937, "phrase": "existing_tcp_applications"}, {"score": 0.0021493651517912036, "phrase": "crown_copyright"}, {"score": 0.0021050078067610307, "phrase": "elsevier"}], "paper_keywords": ["Bandwidth estimation", " Congestion control", " Packet train", " Scalable video coding", " TCP-friendly"], "paper_abstract": "Dynamic bandwidth estimation serves as an important basis for performance optimization of real-time distributed multimedia applications. The objective of this paper is to develop a TCP-friendly and fair congestion control algorithm which regulates the sending rate robustly by inferring the end-to-end available bandwidth. In addition to network stability, we also consider the characteristics of streaming applications, such as the bandwidth resolution in scalable video coding (SVC) which can achieve fine granularity of scalability at bit level to fit the time-vary heterogeneous networks. The congestion control algorithm is mainly composed of two phases: start phase and transmission phase to better utilize the network resource by subscribing SVC layers. In the start phase, we analyze the relationship between the one-way delay and the dispersion of packet trains, and then propose an available bandwidth inference algorithm which makes use of these two features without requiring administrative access to the intermediate routers along the network path. Instead of either binary search or fixed-rate bandwidth adjustment of the probing data as proposed in literature, a top-down approach is proposed to infer the initial available bandwidth robustly and much more efficiently. After acquiring the initial available bandwidth, the missions of the transmission phase include the adaptation of the sending rate fairly by progressive probing and also the accommodation of the network resource to TCP flows. In case of the unavoidable network congestion, we unsubscribe scalable video layers according to the packet loss rate instead of only dropping one layer at a time to rapidly accommodate the streaming service to the channels and also to avoid persecuting the other flows at the same bottleneck. In addition, the probing packets for the estimation of the available bandwidth are encapsulated with RTP/RTCP. The simulations show that the proposed congestion control algorithm for real-time applications fairly utilizes network bandwidth without hampering the performance of the existing TCP applications. Crown Copyright (C) 2010 Published by Elsevier By. All rights reserved.", "paper_title": "TCP-friendly congestion control for the fair streaming of scalable video", "paper_id": "WOS:000281336800002"}