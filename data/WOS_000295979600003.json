{"auto_keywords": [{"score": 0.04682254053814278, "phrase": "steiner_trees"}, {"score": 0.03920747363058631, "phrase": "structural_relationships"}, {"score": 0.037737557283792675, "phrase": "keyword_queries"}, {"score": 0.00481495049065317, "phrase": "finding_top-k"}, {"score": 0.004689650818647484, "phrase": "relational_databases_using_tuple"}, {"score": 0.004628223381645729, "phrase": "existing_studies"}, {"score": 0.0045877173513910055, "phrase": "keyword_search"}, {"score": 0.004547564208690591, "phrase": "relational_databases"}, {"score": 0.004429191773525288, "phrase": "connected_database_tuples"}, {"score": 0.004183137595671171, "phrase": "rich_structural_relationships"}, {"score": 0.004146510711518748, "phrase": "database_tuples"}, {"score": 0.0038647641000798135, "phrase": "tuple_units"}, {"score": 0.003780692127133743, "phrase": "search_efficiency"}, {"score": 0.003682207422331339, "phrase": "existing_methods"}, {"score": 0.003633927813203731, "phrase": "single_tuple_unit"}, {"score": 0.003477505397536663, "phrase": "multiple_tuple_units"}, {"score": 0.003372019835750424, "phrase": "keyword_query"}, {"score": 0.003255364511414329, "phrase": "false_negatives"}, {"score": 0.00303398491761013, "phrase": "multiple_related_tuple_units"}, {"score": 0.0029161225023394363, "phrase": "high_performance"}, {"score": 0.002555247330102505, "phrase": "different_tuple_units"}, {"score": 0.0023918783117166326, "phrase": "integrated_tuple_units"}, {"score": 0.0023501014144112443, "phrase": "new_ranking_techniques"}, {"score": 0.0022787359717772976, "phrase": "top-k_answers"}, {"score": 0.0022095328812245852, "phrase": "real_database_systems"}, {"score": 0.0021709339252206825, "phrase": "experimental_results"}, {"score": 0.0021236300589450143, "phrase": "high_search_efficiency"}, {"score": 0.0021049977753042253, "phrase": "result_quality"}], "paper_keywords": ["Keyword search", " relational databases", " single-keyword-based index", " keyword-pair-based index", " tuple units"], "paper_abstract": "Existing studies on keyword search over relational databases usually find Steiner trees composed of connected database tuples as answers. They on-the-fly identify Steiner trees by discovering rich structural relationships between database tuples, and neglect the fact that such structural relationships can be precomputed and indexed. Recently, tuple units are proposed to improve search efficiency by indexing structural relationships, and existing methods identify a single tuple unit to answer keyword queries. However, in many cases, multiple tuple units should be integrated to answer a keyword query. Thus, these methods will involve false negatives. To address this problem, in this paper, we study how to integrate multiple related tuple units to effectively answer keyword queries. To achieve a high performance, we devise two novel indexes, single-keyword-based structure-aware index and keyword-pair-based structure-aware index, and incorporate structural relationships between different tuple units into the indexes. We use the indexes to efficiently identify the answers of integrated tuple units. We develop new ranking techniques and algorithms to progressively find the top-k answers. We have implemented our method in real database systems, and the experimental results show that our approach achieves high search efficiency and result quality, and outperforms state-of-the-art methods significantly.", "paper_title": "Finding Top-k Answers in Keyword Search over Relational Databases Using Tuple Units", "paper_id": "WOS:000295979600003"}