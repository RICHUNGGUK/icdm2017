{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java"}, {"score": 0.007013341156243186, "phrase": "seven_quality_attributes"}, {"score": 0.004268780663872836, "phrase": "eiffel_programming_language"}, {"score": 0.004108288481894523, "phrase": "practical_method"}, {"score": 0.004041359131062721, "phrase": "reliable_software"}, {"score": 0.003429001377800258, "phrase": "eleven_dbc_tools"}, {"score": 0.0032819448594643853, "phrase": "developer's_programming_activities"}, {"score": 0.0029573932605287947, "phrase": "existing_tools"}, {"score": 0.0028460640294160383, "phrase": "quality_attributes"}, {"score": 0.0024815011359381692, "phrase": "streamlined_integration"}, {"score": 0.0024410093024417527, "phrase": "working_environment"}, {"score": 0.002388043660169452, "phrase": "standard_java_language"}, {"score": 0.002260591903283384, "phrase": "standard_java_programs"}, {"score": 0.0021874023741762496, "phrase": "contract-enabled_programs"}, {"score": 0.002128220632893247, "phrase": "incremental_compilation"}, {"score": 0.0021049977753042253, "phrase": "automatic_refactoring"}], "paper_keywords": ["Design by Contract", " contract specification", " classification", " characterization", " quality attribute", " Java"], "paper_abstract": "Design by Contract (DBC), originated in the Eiffel programming language, is generally accepted as a practical method for building reliable software. Currently, however, few languages have built-in support for it. In recent years, several methods have been proposed to support DBC in Java. We compare eleven DBC tools for Java by analyzing their impact on the developer's programming activities, which are characterized by seven quality attributes identified in this paper. It is shown that each of the existing tools fails to achieve some of the quality attributes. This motivates us to develop ezContract, an open source DBC tool for Java that achieves all of the seven quality attributes. ezContract achieves streamlined integration with the working environment. Notably, standard Java language is used and advanced IDE features that work for standard Java programs can also work for the contract-enabled programs. Such features include incremental compilation, automatic refactoring, and code assist.", "paper_title": "Contract Specification in Java: Classification, Characterization, and a New Marker Method", "paper_id": "WOS:000261359100017"}