{"auto_keywords": [{"score": 0.028333105634795526, "phrase": "output_quality"}, {"score": 0.00481495049065317, "phrase": "query_optimizers"}, {"score": 0.004764542405129454, "phrase": "information_extraction"}, {"score": 0.004665296491645837, "phrase": "text_documents"}, {"score": 0.004402854153653114, "phrase": "structured_data"}, {"score": 0.004288472456976113, "phrase": "information_extraction_systems"}, {"score": 0.004199101289890982, "phrase": "structured_relations"}, {"score": 0.0036810726176482278, "phrase": "structured_queries"}, {"score": 0.0035853745478488254, "phrase": "text_databases"}, {"score": 0.0032609360162842767, "phrase": "basic_steps"}, {"score": 0.003209782650616367, "phrase": "relevant_text_documents"}, {"score": 0.0030449789178940787, "phrase": "extracted_relations"}, {"score": 0.0029814443878969973, "phrase": "multiple_relations"}, {"score": 0.0028734230458881903, "phrase": "different_alternatives"}, {"score": 0.002783945062714816, "phrase": "rich_space"}, {"score": 0.0027547408718334603, "phrase": "possible_query_execution_strategies"}, {"score": 0.002697245874076643, "phrase": "execution_efficiency"}, {"score": 0.0025858215477025117, "phrase": "query_execution"}, {"score": 0.0025052769325080255, "phrase": "optimization_approach"}, {"score": 0.0023025177990160487, "phrase": "user-specified_requirements"}, {"score": 0.00218419478369074, "phrase": "execution_strategy"}], "paper_keywords": [""], "paper_abstract": "Text documents often embed data that is structured in nature. This structured data is increasingly exposed using information extraction systems, which generate structured relations from documents, introducing an opportunity to process expressive, structured queries over text databases. This paper discusses our SQoUT(1) project, which focuses on processing structured queries over relations extracted from text databases. We show how, in our extraction-based scenario, query processing can be decomposed into a sequence of basic steps: retrieving relevant text documents, extracting relations from the documents, and joining extracted relations for queries involving multiple relations. Each of these steps presents different alternatives and together they form a rich space of possible query execution strategies. We identify execution efficiency and output quality as the two critical properties of a query execution, and argue that an optimization approach needs to consider both properties. To this end, we take into account the user-specified requirements for execution efficiency and output quality, and choose an execution strategy for each query based on a principled, cost-based comparison of the alternative execution strategies.", "paper_title": "Building Query Optimizers for Information Extraction: The SQoUT Project", "paper_id": "WOS:000267012800004"}