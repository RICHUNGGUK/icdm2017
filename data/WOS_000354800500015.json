{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "space-efficient_manifest_contracts"}, {"score": 0.004704699244406775, "phrase": "standard_algorithm"}, {"score": 0.004355026964936104, "phrase": "unbounded_space_consumption"}, {"score": 0.004222515162635615, "phrase": "tail_recursion"}, {"score": 0.004094018760244776, "phrase": "program's_asymptotic_space_complexity"}, {"score": 0.0039085400187964196, "phrase": "gradual_types"}, {"score": 0.0034806529881619454, "phrase": "stronger_properties"}, {"score": 0.003427246079774314, "phrase": "simple_types"}, {"score": 0.0030283730114326014, "phrase": "open_problem"}, {"score": 0.0028687545730861665, "phrase": "sound_space_efficiency"}, {"score": 0.00282470997972535, "phrase": "manifest_contracts"}, {"score": 0.0027813397260607487, "phrase": "strong_predicate_contracts"}, {"score": 0.0027175263159330523, "phrase": "essential_trick"}, {"score": 0.002292097733181405, "phrase": "duplicate_coercions"}, {"score": 0.002171202123281881, "phrase": "space_efficiency"}], "paper_keywords": ["contracts", " pre- and post-conditions", " function proxy", " coercions", " space efficiency"], "paper_abstract": "The standard algorithm for higher-order contract checking can lead to unbounded space consumption and can destroy tail recursion, altering a program's asymptotic space complexity. While space efficiency for gradual types-contracts mediating untyped and typed code-is well studied, sound space efficiency for manifest contracts-contracts that check stronger properties than simple types, e.g., \"is a natural\" instead of \"is an integer\"-remains an open problem. We show how to achieve sound space efficiency for manifest contracts with strong predicate contracts. The essential trick is breaking the contract checking down into coercions: structured, blame-annotated lists of checks. By carefully preventing duplicate coercions from appearing, we can restore space efficiency while keeping the same observable behavior.", "paper_title": "Space-Efficient Manifest Contracts", "paper_id": "WOS:000354800500015"}