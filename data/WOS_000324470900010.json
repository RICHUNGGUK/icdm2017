{"auto_keywords": [{"score": 0.04728001415879774, "phrase": "exterior"}, {"score": 0.005701753613854535, "phrase": "svm"}, {"score": 0.005499619137357109, "phrase": "gvm"}, {"score": 0.00481495049065317, "phrase": "dual-vm_based_external_shell"}, {"score": 0.003923965929636472, "phrase": "recent_advances"}, {"score": 0.0038925903520043623, "phrase": "virtual_machine_introspection"}, {"score": 0.0036651042289628324, "phrase": "kernel_state"}, {"score": 0.0036212219870826725, "phrase": "guest_virtual_machine"}, {"score": 0.0034508665218929745, "phrase": "read-only_capability"}, {"score": 0.00340954056723008, "phrase": "traditional_vmi"}, {"score": 0.00319732428387928, "phrase": "dual-vm_architecture"}, {"score": 0.0029862549873935496, "phrase": "necessary_environment"}, {"score": 0.0029504765287722465, "phrase": "running_process"}, {"score": 0.0027446057983474994, "phrase": "memory_state"}, {"score": 0.002711714675297321, "phrase": "vmm_layer"}, {"score": 0.0025736694380861604, "phrase": "kernel_state_updates"}, {"score": 0.0024822280854661792, "phrase": "gvm."}, {"score": 0.0023558375480288297, "phrase": "experimental_results"}, {"score": 0.0022721178679337025, "phrase": "timely_administration"}, {"score": 0.002182573128803447, "phrase": "guest-os_state"}, {"score": 0.0021391300942881, "phrase": "kernel_malware_intrusions"}, {"score": 0.0021049977753042253, "phrase": "user_account"}], "paper_keywords": ["Security", " Management", " Virtual machine introspection", " Semantic-gap", " Binary code reuse"], "paper_abstract": "This paper presents EXTERIOR, a dual-VM architecture based external shell that can be used for trusted, timely out-of-VM management of guest-OS such as introspection, configuration, and recovery. Inspired by recent advances in virtual machine introspection (VMI), EXTERIOR leverages an isolated, secure virtual machine (SVM) to introspect the kernel state of a guest virtual machine (GVM). However, it goes far beyond the read-only capability of the traditional VMI, and can perform automatic, fine-grained guest-OS writable operations. The key idea of EXTERIOR is to use a dual-VM architecture in which a SVM runs a kernel identical to that of the GVM to create the necessary environment for a running process (e. g., rmmod, kill), and dynamically and transparently redirect and update the memory state at the VMM layer from SVM to GVM, thereby achieving the same effect in terms of kernel state updates of running the same trusted in-VM program inside the shell of GVM. A proof-of-concept EXTERIOR has been implemented. The experimental results show that EXTERIOR can be used for a timely administration of guest-OS, including introspection and (re) configuration of the guest-OS state and timely response of kernel malware intrusions, without any user account in the guest-OS.", "paper_title": "EXTERIOR: Using a Dual-VM Based External Shell for Guest-OS Introspection, Configuration, and Recovery", "paper_id": "WOS:000324470900010"}