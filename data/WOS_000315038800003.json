{"auto_keywords": [{"score": 0.03336469327280924, "phrase": "pipeline_stalls"}, {"score": 0.014952383337679898, "phrase": "elastic_pipeline"}, {"score": 0.004815133528682739, "phrase": "gpu"}, {"score": 0.004450568197899267, "phrase": "major_problems"}, {"score": 0.004376131419366239, "phrase": "gpu_on-chip_shared_memory"}, {"score": 0.004090577229368418, "phrase": "gpu_processor"}, {"score": 0.003910595307634916, "phrase": "shared_memory_bandwidth"}, {"score": 0.003802135020791801, "phrase": "shared_memory_latency"}, {"score": 0.003474799999519295, "phrase": "varied_latencies"}, {"score": 0.0034166271604770576, "phrase": "memory_bank_conflicts"}, {"score": 0.003266201217790818, "phrase": "writeback_stage"}, {"score": 0.0032115093493071366, "phrase": "in-order_pipeline"}, {"score": 0.003087419032091453, "phrase": "system_throughput"}, {"score": 0.0027898428590137515, "phrase": "negative_impact"}, {"score": 0.002758597251689795, "phrase": "on-chip_memory_bank_conflicts"}, {"score": 0.002651960559564796, "phrase": "bank_conflicts"}, {"score": 0.0025928815987676535, "phrase": "simulation_results"}, {"score": 0.0024926348205500715, "phrase": "co-designed_bank-conflict"}, {"score": 0.0022522565004588113, "phrase": "overall_performance"}, {"score": 0.0021408862709571615, "phrase": "representative_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "trivial_hardware_overhead"}], "paper_keywords": ["GPU", " On-chip shared memory", " Bank conflicts", " Elastic pipeline"], "paper_abstract": "One of the major problems with the GPU on-chip shared memory is bank conflicts. We analyze that the throughput of the GPU processor core is often constrained neither by the shared memory bandwidth, nor by the shared memory latency (as long as it stays constant), but is rather due to the varied latencies caused by memory bank conflicts. This results in conflicts at the writeback stage of the in-order pipeline and causes pipeline stalls, thus degrading system throughput. Based on this observation, we investigate and propose a novel Elastic Pipeline design that minimizes the negative impact of on-chip memory bank conflicts on system throughput, by decoupling bank conflicts from pipeline stalls. Simulation results show that our proposed Elastic Pipeline together with the co-designed bank-conflict aware warp scheduling reduces the pipeline stalls by up to 64.0 % (with 42.3 % on average) and improves the overall performance by up to 20.7 % (on average 13.3 %) for representative benchmarks, at trivial hardware overhead.", "paper_title": "Addressing GPU On-Chip Shared Memory Bank Conflicts Using Elastic Pipeline", "paper_id": "WOS:000315038800003"}