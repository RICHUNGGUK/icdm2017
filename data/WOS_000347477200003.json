{"auto_keywords": [{"score": 0.04325124255431723, "phrase": "success_probability"}, {"score": 0.00481495049065317, "phrase": "local_distributed_computing"}, {"score": 0.0038862297330905836, "phrase": "distributed_language"}, {"score": 0.003711723285313348, "phrase": "monte-carlo_algorithm"}, {"score": 0.002860546817196148, "phrase": "distributed_languages"}, {"score": 0.0024918548761791435, "phrase": "sequential_computing"}, {"score": 0.0021049977753042253, "phrase": "randomized_execution"}], "paper_keywords": ["Distributed local algorithms", " Randomized algorithms", " Complexity classes"], "paper_abstract": "The paper tackles the power of randomization in the context of local distributed computing by analyzing the ability to \"boost\" the success probability of deciding a distributed language using a Monte-Carlo algorithm. We prove that, in many cases, the ability to increase the success probability for deciding distributed languages is rather limited. This contrasts with the sequential computing setting where boosting can systematically be achieved by repeating the randomized execution.", "paper_title": "Randomized distributed decision", "paper_id": "WOS:000347477200003"}