{"auto_keywords": [{"score": 0.02997165440966494, "phrase": "pms"}, {"score": 0.0071122005794167905, "phrase": "android"}, {"score": 0.00481495049065317, "phrase": "practical_effect_of_the_predictability_of"}, {"score": 0.004793838215546643, "phrase": "android_openssl_prng."}, {"score": 0.004751889650408546, "phrase": "built-in_pseudo"}, {"score": 0.004547564208690591, "phrase": "android_platform"}, {"score": 0.004505786870090754, "phrase": "ssl"}, {"score": 0.004429191773525288, "phrase": "encryption_keys"}, {"score": 0.0041102032028337366, "phrase": "random_numbers"}, {"score": 0.004098383068200448, "phrase": "ssl."}, {"score": 0.0039333604469462356, "phrase": "initial_openssl_prng_state"}, {"score": 0.003539252646181146, "phrase": "rsa_key_agreement_scheme"}, {"score": 0.003342471131048328, "phrase": "practical_effect"}, {"score": 0.0032697235411641695, "phrase": "openssl_prng._first"}, {"score": 0.003101503914610488, "phrase": "pms_recovery_attack"}, {"score": 0.00303398491761013, "phrase": "rsa_key_exchange"}, {"score": 0.002981026404927824, "phrase": "aslr_mechanism"}, {"score": 0.002488604965680912, "phrase": "ecdh_key_exchange"}, {"score": 0.0024451427672857458, "phrase": "heap_memory_pattern"}, {"score": 0.0021518875024104244, "phrase": "openssl_prng"}, {"score": 0.0021049977753042253, "phrase": "android_securerandom_java_class"}], "paper_keywords": ["SSL/TLS", " android", " OpenSSL", " PRNG", " SecureRandom"], "paper_abstract": "The built-in Pseudo Random Number Generator (PRNG) of OpenSSL on Android platform is important for producing the encryption keys and nonce needed for SSL/TLS communication. In addition, it is also widely used in generating random numbers for many applications irrelevant to SSL. We demonstrated that the initial OpenSSL PRNG state of Android apps can be restored practically, and claimed that a PreMasterSecret (PMS) can be recovered in certain apps using the RSA key agreement scheme at CCS 2013. In this paper, we investigate more deeply the practical effect of the predictability of OpenSSL PRNG. First, we precisely analyze, and reduce the complexity of a PMS recovery attack on SSL with the RSA key exchange by analyzing the ASLR mechanism of Android. As a result, we show that the PMS can be recovered in O(246) computations with a probability of 25%. Next, we show that the attack is also applicable to the PMS of the ECDH key exchange by analyzing the heap memory pattern. We confirmed experimentally that the PMS can be recovered in real-time with a probability of 20%. Finally, we show the relation between the predictability of OpenSSL PRNG and the vulnerability of Android SecureRandom java class.", "paper_title": "Practical Effect of the Predictability of Android OpenSSL PRNG", "paper_id": "WOS:000359467200030"}