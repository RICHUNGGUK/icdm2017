{"auto_keywords": [{"score": 0.040068893161497504, "phrase": "test_oracle_automation"}, {"score": 0.03501467026270219, "phrase": "test_oracles"}, {"score": 0.00481495049065317, "phrase": "software_testing"}, {"score": 0.004410248125081398, "phrase": "potential_faults"}, {"score": 0.0036996627006622975, "phrase": "current_bottleneck"}, {"score": 0.0036427316134070007, "phrase": "greater_overall_test_automation"}, {"score": 0.003441352119167824, "phrase": "observed_behaviour"}, {"score": 0.003234299589505403, "phrase": "oracle_automation"}, {"score": 0.0031193028729331667, "phrase": "contract-driven_development"}, {"score": 0.0029013950320185573, "phrase": "final_source"}, {"score": 0.0028715299874549245, "phrase": "test_oracle_information"}, {"score": 0.002726740692380339, "phrase": "informal_specifications"}, {"score": 0.0026297428083782875, "phrase": "specific_information"}, {"score": 0.0025892330566358503, "phrase": "informal_oracle_guidance"}, {"score": 0.0022749744354271816, "phrase": "comprehensive_survey"}, {"score": 0.002251542790734307, "phrase": "current_approaches"}, {"score": 0.0022168460543913787, "phrase": "test_oracle_problem"}, {"score": 0.002126907587540404, "phrase": "important_area"}, {"score": 0.0021049977753042253, "phrase": "software_testing_research"}], "paper_keywords": ["Test oracle", " automatic testing", " testing formalism"], "paper_abstract": "Testing involves examining the behaviour of a system in order to discover potential faults. Given an input for a system, the challenge of distinguishing the corresponding desired, correct behaviour from potentially incorrect behavior is called the \"test oracle problem\". Test oracle automation is important to remove a current bottleneck that inhibits greater overall test automation. Without test oracle automation, the human has to determine whether observed behaviour is correct. The literature on test oracles has introduced techniques for oracle automation, including modelling, specifications, contract-driven development and metamorphic testing. When none of these is completely adequate, the final source of test oracle information remains the human, who may be aware of informal specifications, expectations, norms and domain specific information that provide informal oracle guidance. All forms of test oracles, even the humble human, involve challenges of reducing cost and increasing benefit. This paper provides a comprehensive survey of current approaches to the test oracle problem and an analysis of trends in this important area of software testing research and practice.", "paper_title": "The Oracle Problem in Software Testing: A Survey", "paper_id": "WOS:000354475400005"}