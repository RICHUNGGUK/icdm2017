{"auto_keywords": [{"score": 0.04309795273052841, "phrase": "lcs_problem"}, {"score": 0.00481495049065317, "phrase": "longest_common_subsequence"}, {"score": 0.004483909657713567, "phrase": "classic_and_well-studied_problem"}, {"score": 0.003944112858235306, "phrase": "common_task"}, {"score": 0.0038332390893263844, "phrase": "dna_sequence_analysis"}, {"score": 0.0035189057079817285, "phrase": "molecular_biology"}, {"score": 0.003094920033010818, "phrase": "new_and_efficient_algorithm"}, {"score": 0.0025343769150179764, "phrase": "log_log"}, {"score": 0.0021659920594094407, "phrase": "total_number"}, {"score": 0.0021049977753042253, "phrase": "ordered_pairs"}], "paper_keywords": ["Longest common subsequence", " Algorithms", " Strings"], "paper_abstract": "The Longest Common Subsequence (LCS) problem is a classic and well-studied problem in computer science. The LCS problem is a common task in DNA sequence analysis with many applications to genetics and molecular biology. In this paper, we present a new and efficient algorithm for solving the LCS problem for two strings. Our algorithm runs in O(a\"> log log n+n) time, where a\"> is the total number of ordered pairs of positions at which the two strings match.", "paper_title": "A New Efficient Algorithm for Computing the Longest Common Subsequence", "paper_id": "WOS:000266928500009"}