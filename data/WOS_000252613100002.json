{"auto_keywords": [{"score": 0.049188612914091476, "phrase": "database_interactions"}, {"score": 0.015287791505515881, "phrase": "web_applications"}, {"score": 0.01393075092341074, "phrase": "web_application"}, {"score": 0.00481495049065317, "phrase": "static_analysis"}, {"score": 0.004769958800452922, "phrase": "automated_extraction"}, {"score": 0.004123781267600542, "phrase": "web_engineer"}, {"score": 0.003916098498242888, "phrase": "highly_dynamic_nature"}, {"score": 0.0035648266669315943, "phrase": "automated_approach"}, {"score": 0.00348202932445197, "phrase": "source_code"}, {"score": 0.0034332736827447654, "phrase": "symbolic_execution_and_inference_rules"}, {"score": 0.0031695693589575916, "phrase": "interaction_point"}, {"score": 0.0028850668183221947, "phrase": "inference_rules"}, {"score": 0.0028312983170567948, "phrase": "interaction_types"}, {"score": 0.002765490759189057, "phrase": "symbolic_expressions"}, {"score": 0.0027139447110929586, "phrase": "symbolic_execution"}, {"score": 0.0025409639091476363, "phrase": "proposed_approach"}, {"score": 0.0024014759148123736, "phrase": "function_calls"}, {"score": 0.002291089893848235, "phrase": "average_precision"}, {"score": 0.0021652891317252994, "phrase": "conservative_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["database interactions", " web applications", " automated extraction", " symbolic execution", " slicing"], "paper_abstract": "Database interactions are among the most essential functional features in web applications. Therefore, for the testing and maintenance of a web application, it is important that the web engineer could identify all the database interactions in the web application. However, the highly dynamic nature of web applications makes it challenging to extract all the possible database interactions from source code. In this paper, we propose an automated approach to extract database interactions from source code by using symbolic execution and inference rules. Our approach automatically identifies all the possible database interaction points. After that, all the program paths, which pass through each interaction point, are also computed. Each of these paths is then symbolically executed following our proposed symbolic evaluation rules. We also develop inference rules to deduce the interaction types from the set of symbolic expressions derived during the symbolic execution. Experiments have been conducted to evaluate the performance and usefulness of the proposed approach. The results indicate that even with some limitations in handling function calls, pointers and polymorphism, our approach still gives an average precision of 79.2%, which is 45.4% more than that of the conservative approach. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Applying static analysis for automated extraction of database interactions in web applications", "paper_id": "WOS:000252613100002"}