{"auto_keywords": [{"score": 0.045827291636174224, "phrase": "pgv"}, {"score": 0.00510295001110456, "phrase": "existing_schemes"}, {"score": 0.00481495049065317, "phrase": "cloud_storage"}, {"score": 0.004655285779819366, "phrase": "remote_verification_scheme"}, {"score": 0.004539005582217309, "phrase": "bidirectional_data_integrity_checking_mechanism"}, {"score": 0.0043150485532080065, "phrase": "well-known_polynomial_hash"}, {"score": 0.004207230913063179, "phrase": "polynomial_hash_provably"}, {"score": 0.004154332348800334, "phrase": "storage_enforcement_property"}, {"score": 0.003916098498242888, "phrase": "traditional_application"}, {"score": 0.003818210967854446, "phrase": "storage_content"}, {"score": 0.003770185129638344, "phrase": "remote_server"}, {"score": 0.0036450381529042133, "phrase": "de-duplication_scenarios"}, {"score": 0.003465036432323081, "phrase": "significant_amount"}, {"score": 0.0032115093493071366, "phrase": "existing_file"}, {"score": 0.0030787405733989615, "phrase": "malicious_adversarial_model"}, {"score": 0.0027123819773059127, "phrase": "practical_incentive"}, {"score": 0.0026782279715171866, "phrase": "storage_server"}, {"score": 0.0025892330566358503, "phrase": "storage_space"}, {"score": 0.002556625752785268, "phrase": "covert_adversarial_model"}, {"score": 0.0024405312482831646, "phrase": "kolmogorov_complexity"}, {"score": 0.0023395610923736595, "phrase": "low_overhead"}, {"score": 0.0021590588269751816, "phrase": "remote_verification"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Storage enforcement", " Proof of retrievability", " Cloud storage", " Proof of data possession", " Proof of ownership"], "paper_abstract": "This paper presents a storage enforcing remote verification scheme, PGV (Pretty Good Verification) as a bidirectional data integrity checking mechanism for cloud storage. At its core, PGV relies on the well-known polynomial hash; we show that the polynomial hash provably possesses the storage enforcement property and is also efficient in terms of performance. In addition to the traditional application of a client verifying the storage content at a remote server, PGV can also be applied to de-duplication scenarios where the server wants to verify whether the client possesses a significant amount of information about a file (and not just a partial knowledge/fingerprint of the file) before granting access to an existing file. While existing schemes are often developed to handle a malicious adversarial model, we argue that such a model is often too strong of an assumption, resulting in over-engineered, resource-intensive mechanisms. Instead, the storage enforcement property of PGV aims at removing a practical incentive for a storage server to cheat in order to save on storage space in a covert adversarial model. We theoretically prove the power of PGV by combining Kolmogorov complexity and list decoding and experimentally show the simplicity and low overhead of PGV by comparing it with existing schemes. Altogether, PGV provides a good, practical way to perform storage enforcing remote verification. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Bidirectional data verification for cloud storage", "paper_id": "WOS:000342717900008"}