{"auto_keywords": [{"score": 0.04925367071541481, "phrase": "open_hostile_environments"}, {"score": 0.02553485430271328, "phrase": "survivable_feedback_loops"}, {"score": 0.00481495049065317, "phrase": "software_system_attack-tolerance"}, {"score": 0.004610058444728656, "phrase": "coordination_model"}, {"score": 0.004318881178805575, "phrase": "system's_functionalities"}, {"score": 0.004189337956225294, "phrase": "coordination_constraints"}, {"score": 0.003941746077126688, "phrase": "software_system's_attack-tolerance"}, {"score": 0.003806866174028117, "phrase": "appropriate_constraint_propagations"}, {"score": 0.0037738708560271354, "phrase": "constraint_enforcements"}, {"score": 0.003459191419478298, "phrase": "coordination_and_coordination_constraints"}, {"score": 0.003115908199991072, "phrase": "inter-role_coordination"}, {"score": 0.0025059724686541263, "phrase": "single_point"}, {"score": 0.0022084059770026416, "phrase": "faulty_elements"}, {"score": 0.0021607883988873492, "phrase": "whole_system"}, {"score": 0.0021049977753042253, "phrase": "single_failures"}], "paper_keywords": ["sensor networks", " coordination model", " attack-tolerance", " distributed voting", " probabilistic analysis"], "paper_abstract": "This paper presents a coordination model that contains three active entities: actors, roles, and coordinators. Actors abstract the system's functionalities while roles and coordinators statically encapsulate coordination constraints and dynamically propagate these constraints among themselves and onto the actors. A software system's attack-tolerance and survivability in open hostile environments are enhanced through appropriate constraint propagations and constraint enforcements. The role represents a group of actors that share the same set of behaviors declared by the role. Coordination and coordination constraints in the model are categorized into two classes: inter-role coordination and intra-role coordination. The coordinators are responsible for inter-role coordination; while the roles are not only abstractions for a set of behaviors they also coordinate the actors which share the same role. This setting implies that both the coordination constraints and coordination activities are decentralized and distributed among the coordinators and the roles. The decentralization not only shields the system from single point of failures, but also provides a foundation that survivable feedback loops can be built upon. The survivable feedback loops presented in the model resist the contamination of the system by faulty elements and thereby protect the whole system from being broken down by single failures.", "paper_title": "A coordination model for improving software system attack-tolerance and survivability in open hostile environments", "paper_id": "WOS:000246004200004"}