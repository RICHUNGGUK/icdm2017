{"auto_keywords": [{"score": 0.04393033017315467, "phrase": "gp_algorithm"}, {"score": 0.011665788219210542, "phrase": "crossover_and_mutation_operators"}, {"score": 0.010294433403644271, "phrase": "tp_algorithm"}, {"score": 0.00481495049065317, "phrase": "new_problem"}, {"score": 0.004736563452994885, "phrase": "adaptive_memory_programming_over_tree_data_structures."}, {"score": 0.004533804997282168, "phrase": "gp"}, {"score": 0.004435514622798228, "phrase": "extensive_theoretical_and_application_studies"}, {"score": 0.0040192915527630995, "phrase": "artificial_intelligence"}, {"score": 0.003622088701900472, "phrase": "disruption_effect"}, {"score": 0.0033363396054797044, "phrase": "search_strategy"}, {"score": 0.0032819448594643853, "phrase": "classical_tabu_search_algorithm"}, {"score": 0.003228434077467506, "phrase": "tree_data_structure"}, {"score": 0.0030562674358159945, "phrase": "local_search_procedures"}, {"score": 0.0030064251340251196, "phrase": "tree_space"}, {"score": 0.0028305047329728254, "phrase": "extensive_numerical_experiments"}, {"score": 0.0026942333853202556, "phrase": "proposed_algorithm"}, {"score": 0.0026213749921120623, "phrase": "benchmark_problems"}, {"score": 0.0024276590297034064, "phrase": "recent_versions"}, {"score": 0.0023362245884046176, "phrase": "computational_efforts"}, {"score": 0.0021874023741762496, "phrase": "comprehensive_framework"}, {"score": 0.002163535133532765, "phrase": "meta-heuristics_programming"}, {"score": 0.002139928551945128, "phrase": "mhp"}, {"score": 0.0021049977753042253, "phrase": "general_machine_learning_tools"}], "paper_keywords": ["Machine learning", " meta-heuristics", " local search", " parse tree", " tabu programming", " tabu search"], "paper_abstract": "Since the first appearance of the Genetic Programming (GP) algorithm, extensive theoretical and application studies on it have been conducted. Nowadays, the GP algorithm is considered one of the most important tools in Artificial Intelligence (AI). Nevertheless, several questions have been raised about the complexity of the GP algorithm and the disruption effect of the crossover and mutation operators. In this paper, the Tabu Programming (TP) algorithm is proposed to employ the search strategy of the classical Tabu Search algorithm with the tree data structure. Moreover, the TP algorithm exploits a set of local search procedures over a tree space in order to mitigate the drawbacks of the crossover and mutation operators. Extensive numerical experiments are performed to study the performance of the proposed algorithm for a set of benchmark problems. The results of those experiments show that the TP algorithm compares favorably to recent versions of the GP algorithm in terms of computational efforts and the rate of success. Finally, we present a comprehensive framework called Meta-Heuristics Programming (MHP) as general machine learning tools.", "paper_title": "TABU PROGRAMMING: A NEW PROBLEM SOLVER THROUGH ADAPTIVE MEMORY PROGRAMMING OVER TREE DATA STRUCTURES", "paper_id": "WOS:000289173000009"}