{"auto_keywords": [{"score": 0.04951738916270167, "phrase": "craig"}, {"score": 0.00481495049065317, "phrase": "recursion-free_horn_clauses"}, {"score": 0.004592905436175987, "phrase": "main_challenges"}, {"score": 0.004539005582217309, "phrase": "software_verification"}, {"score": 0.004485735417293941, "phrase": "efficient_and_precise_analysis"}, {"score": 0.004278807087784626, "phrase": "interpolation_methods"}, {"score": 0.0036481158025940016, "phrase": "precise_ontology"}, {"score": 0.003378385493203297, "phrase": "constrained_recursion-free_horn_clauses"}, {"score": 0.003260690513595527, "phrase": "new_notion"}, {"score": 0.0029489527539649737, "phrase": "previous_notions"}, {"score": 0.002846175473457555, "phrase": "tree_interpolants"}, {"score": 0.0028127163745564777, "phrase": "inductive_sequences"}, {"score": 0.0025286975935774245, "phrase": "corresponding_decision_problems"}, {"score": 0.002498961351132696, "phrase": "recursion-free_horn_fragments"}, {"score": 0.0023976048394496446, "phrase": "extensive_empirical_evaluation"}, {"score": 0.002286781334850213, "phrase": "horn_problems"}, {"score": 0.002181069180139225, "phrase": "tree_interpolation"}, {"score": 0.002155412043665635, "phrase": "disjunctive_interpolation"}, {"score": 0.0021049977753042253, "phrase": "software_verification_tasks"}], "paper_keywords": ["Horn clause verification", " Interpolation", " Software verification", " SMT solver", " Software model checking", " Predicate abstraction"], "paper_abstract": "One of the main challenges in software verification is efficient and precise analysis of programs with procedures and loops. Interpolation methods remain among the most promising techniques for such verification. To accommodate the demands of various programming language features, over the past years several extended forms of interpolation have been introduced. We give a precise ontology of such extended interpolation methods, and investigate the relationship between interpolation and fragments of constrained recursion-free Horn clauses. We also introduce a new notion of interpolation, disjunctive interpolation, which solves a more general class of problems in one step compared to previous notions of interpolants, such as tree interpolants or inductive sequences of interpolants. We present algorithms and complexity for construction of interpolants, as well as the corresponding decision problems for recursion-free Horn fragments. Finally, we give an extensive empirical evaluation using a solver for (recursive) Horn problems, in particular comparing the performance of tree interpolation and disjunctive interpolation for constraints modelling software verification tasks.", "paper_title": "On recursion-free Horn clauses and Craig interpolation", "paper_id": "WOS:000361484000001"}