{"auto_keywords": [{"score": 0.03389774710214817, "phrase": "mipa"}, {"score": 0.03355311982327681, "phrase": "sapa"}, {"score": 0.013515218827193566, "phrase": "cloud_providers"}, {"score": 0.010086405764823182, "phrase": "resource_utilization"}, {"score": 0.00481495049065317, "phrase": "networking-oblivious_resource_reservation_model"}, {"score": 0.004520272777451894, "phrase": "tenants'_applications"}, {"score": 0.004472935829694716, "phrase": "virtual_networks"}, {"score": 0.00433386573276633, "phrase": "networking_resource_requirements"}, {"score": 0.004177049813981273, "phrase": "better_interfaces"}, {"score": 0.0039006600544599537, "phrase": "novel_virtual_network_model"}, {"score": 0.003383475802364289, "phrase": "multiple_virtual_networks"}, {"score": 0.003028969851366049, "phrase": "flexible_placement"}, {"score": 0.0029501745152877706, "phrase": "mixed_integer_programming"}, {"score": 0.0028734230458881903, "phrase": "placement_problem"}, {"score": 0.002828331235643921, "phrase": "multi-commodity_flow_problem"}, {"score": 0.002769304577201566, "phrase": "physical_network"}, {"score": 0.002740253546178098, "phrase": "shadow_nodes"}, {"score": 0.0026689487424251907, "phrase": "simulated_annealing-based_sapa"}, {"score": 0.0025586903829811296, "phrase": "physical_resources"}, {"score": 0.0025318431634446426, "phrase": "multiple_resource_demands"}, {"score": 0.002376559242152662, "phrase": "performance_guarantee"}, {"score": 0.0022904032758108775, "phrase": "allocation_optimality"}, {"score": 0.002266364679369248, "phrase": "running_time"}, {"score": 0.0021498955164659145, "phrase": "application_performance"}, {"score": 0.0021273284545701896, "phrase": "placement_cost"}, {"score": 0.0021049977753042253, "phrase": "extensive_simulation_results"}], "paper_keywords": ["resource allocation", " virtual network embedding", " opportunistic resource sharing"], "paper_abstract": "The networking-oblivious resource reservation model in today's public clouds cannot guarantee the performance of tenants' applications. Virtual networks that capture both computing and networking resource requirements of tenants have been proposed as better interfaces between cloud providers and tenants. In this paper, we propose a novel virtual network model that could specify not only absolute and relative location requirements but also time-varying resource demands. Building on top of our model, we study how to efficiently and flexibly place multiple virtual networks in a cloud, and we propose two algorithms, MIPA and SAPA, which focus on optimizing resource utilization and providing flexible placement, respectively. The mixed integer programming based MIPA transforms the placement problem into the multi-commodity flow problem through augmenting the physical network with shadow nodes and links. The simulated annealing-based SAPA achieves resource utilization efficiency through opportunistically sharing physical resources among multiple resource demands. Besides, SAPA allows cloud providers to control the trade-offs between performance guarantee and resource utilization, and between allocation optimality and running time, and allows tenants to control the trade-off between application performance and placement cost. Extensive simulation results confirm the efficiency of MIPA in resource utilization and the flexibility of SAPA in controlling trade-offs.", "paper_title": "Service-Oriented Resource Allocation in Clouds: Pursuing Flexibility and Efficiency", "paper_id": "WOS:000351292400018"}