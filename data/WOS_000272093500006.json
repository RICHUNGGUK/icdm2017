{"auto_keywords": [{"score": 0.03487395649103345, "phrase": "single_symbol"}, {"score": 0.00481495049065317, "phrase": "distance_with_combinations"}, {"score": 0.004649474569983707, "phrase": "name_matching._approximate_pattern_matching"}, {"score": 0.004297560964892607, "phrase": "numerous_algorithms"}, {"score": 0.004024651422626329, "phrase": "ocred_documents"}, {"score": 0.003903269701018361, "phrase": "particular_form"}, {"score": 0.003802135020791801, "phrase": "random_errors"}, {"score": 0.0037198532511087566, "phrase": "new_variant"}, {"score": 0.003671338229632309, "phrase": "edit_distance_metric"}, {"score": 0.0035761913760242697, "phrase": "traditional_edit_operations"}, {"score": 0.003468287913322255, "phrase": "combination_operation"}, {"score": 0.003393206299636482, "phrase": "string_x"}, {"score": 0.0030951536886513567, "phrase": "second_string"}, {"score": 0.002690406375639144, "phrase": "equal_number"}, {"score": 0.002464709648714996, "phrase": "edit_distance"}, {"score": 0.0024007585788965655, "phrase": "total_length"}, {"score": 0.0022089663761854657, "phrase": "upper_bound"}, {"score": 0.0021610874773389096, "phrase": "valid_splits"}, {"score": 0.0021049977753042253, "phrase": "expected_running_time"}], "paper_keywords": ["Edit distance", " combinations", " splits", " optical character recognition (OCR)", " approximate pattern matching", " name matching"], "paper_abstract": "Approximate pattern matching has a wide range of applications and, depending on the type of approximation, there exist numerous algorithms for solving it. In this article we focus on texts which originate from OCRed documents, whose errors quite often have a particular form and are far from being random errors. We introduce a new variant of the edit distance metric, where apart from the traditional edit operations, two new operations are supported. The combination operation allows two or more symbols from a string x to be interpreted as a single symbol and then \"matched\" (or aligned) against a single symbol of a second string y. Its dual is the operation of a split, where a single symbol from x is broken down into a sequence of two or more other symbols, that can then be matched against an equal number of symbols from y. Our algorithm requires O(L) time for preprocessing, and O(mnk) time for computing the edit distance, where L is the total length of all the valid combinations/splits, m and n are the lengths of the two strings under comparison and k is an upper bound on the number of valid splits for any single symbol. The expected running time is O(mn).", "paper_title": "EDIT DISTANCE WITH COMBINATIONS AND SPLITS AND ITS APPLICATIONS IN OCR NAME MATCHING", "paper_id": "WOS:000272093500006"}