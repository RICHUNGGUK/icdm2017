{"auto_keywords": [{"score": 0.04805655360322431, "phrase": "problem_domain"}, {"score": 0.029707274537141174, "phrase": "resulting_mdp"}, {"score": 0.00481495049065317, "phrase": "coalition_formation"}, {"score": 0.004688823162073856, "phrase": "nondeterministic_action_effects"}, {"score": 0.004024863549087511, "phrase": "desired_terminal_states"}, {"score": 0.003691913669486176, "phrase": "cumulative_actions"}, {"score": 0.0032324864013225166, "phrase": "representative_example"}, {"score": 0.003075296862372287, "phrase": "disaster_rescue_environment"}, {"score": 0.0030246125031350903, "phrase": "practical_methodology"}, {"score": 0.0028966970007550824, "phrase": "markov_decision_process"}, {"score": 0.0026923949531431667, "phrase": "original_features"}, {"score": 0.0025784931028501375, "phrase": "small_problem_instances"}, {"score": 0.002527556628744957, "phrase": "parallel_decomposition"}, {"score": 0.0024776238724770524, "phrase": "mdp_rsua"}, {"score": 0.002453027723284009, "phrase": "random_sampling"}, {"score": 0.002436765760924074, "phrase": "uniform_allocation"}, {"score": 0.0024125742420201, "phrase": "mdp_reuse_method"}, {"score": 0.0023806911724834046, "phrase": "lower_level"}, {"score": 0.0023259039577313294, "phrase": "parallel_subproblems"}, {"score": 0.0022951636331743066, "phrase": "experimental_study"}, {"score": 0.0022423402528961144, "phrase": "fire_simulation_components"}, {"score": 0.002154592730528917, "phrase": "heuristic_approaches"}, {"score": 0.0021403049512708494, "phrase": "mdp_reuse"}, {"score": 0.0021190503591688834, "phrase": "overall_higher_performance"}, {"score": 0.0021049977753042253, "phrase": "mdp_rsua."}], "paper_keywords": ["Optimization", " Coalition formation", " Agents"], "paper_abstract": "We consider a problem domain where coalitions of agents are formed in order to execute tasks. Each task is assigned at most one coalition of agents, and the coalition can be reorganized during execution. Executing a task means bringing it to one of the desired terminal states, which might take several time steps. The state of the task evolves even if no coalition is assigned to its execution and depends nondeterministically on the cumulative actions of the agents in the coalition. Furthermore, we assume that the reward obtained for executing a task evolves in time: the more the execution of the task is delayed, the lesser the reward. A representative example of this class of problems is the allocation of firefighters to fires in a disaster rescue environment. We describe a practical methodology through which a problem of this class can be encoded as a Markov Decision Process. Due to the three levels of factoring in the resulting MDP (the states, actions and rewards are composites of the original features of the problem) the resulting MDP can be directly solved only for small problem instances. We describe two methods for parallel decomposition of the MDP: the MDP RSUA approach for random sampling and uniform allocation and the MDP REUSE method which reuses the lower level MDP to allocate resources to the parallel subproblems. Through an experimental study which models the problem domain using the fire simulation components of the Robocup Rescue simulator, we show that both methods significantly outperform heuristic approaches and MDP REUSE provides an overall higher performance than MDP RSUA.", "paper_title": "Optimizing coalition formation for tasks with dynamically evolving rewards and nondeterministic action effects", "paper_id": "WOS:000289680900003"}