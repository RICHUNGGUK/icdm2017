{"auto_keywords": [{"score": 0.05007652773010767, "phrase": "relocatable_code"}, {"score": 0.049417008144104504, "phrase": "networked_embedded_systems"}, {"score": 0.004523272849033429, "phrase": "incremental_reprogramming_approach"}, {"score": 0.004338661611644755, "phrase": "program_similarity"}, {"score": 0.0040194764936614565, "phrase": "higher_degree"}, {"score": 0.003909301559145041, "phrase": "existing_approaches"}, {"score": 0.0036722834182246933, "phrase": "data_shifts"}, {"score": 0.0035468507553681034, "phrase": "content-aware_differencing_algorithm"}, {"score": 0.0034736499231079083, "phrase": "small_delta_files"}, {"score": 0.00342568771304873, "phrase": "efficient_dissemination"}, {"score": 0.003285725064532174, "phrase": "efficient_use"}, {"score": 0.003129623571496151, "phrase": "program_quality"}, {"score": 0.0028590732866152118, "phrase": "detailed_analysis"}, {"score": 0.0028195727965553367, "phrase": "tinyos_examples"}, {"score": 0.002723186210025975, "phrase": "case_studies"}, {"score": 0.00266693888510356, "phrase": "software_programs"}, {"score": 0.0026118503041971976, "phrase": "large-scale_sensor_system-greenorbs"}, {"score": 0.0024704333220467393, "phrase": "dissemination_cost"}, {"score": 0.0023859534478427313, "phrase": "state-of-the-art_network_reprogramming_approach-deluge"}, {"score": 0.002210105921545779, "phrase": "zephyr"}, {"score": 0.0021796440286715674, "phrase": "hermes"}, {"score": 0.002134508934917511, "phrase": "latest_works"}, {"score": 0.0021049977753042253, "phrase": "incremental_reprogramming"}], "paper_keywords": ["Wireless sensor networks", " reprogramming", " relocatable code"], "paper_abstract": "We present R2, an incremental reprogramming approach using relocatable code, to improve program similarity for efficient incremental reprogramming in networked embedded systems. R2 achieves a higher degree of similarity than existing approaches by mitigating effects of both function shifts and data shifts. R2 adopts a content-aware differencing algorithm to generate small delta files for efficient dissemination. Besides, it makes efficient use of memory and does not degrade program quality. We implement R2 based on TinyOS 2.1 and demonstrate its advantages through detailed analysis of TinyOS examples. We also present case studies on the software programs of a large-scale sensor system-GreenOrbs. Results show that R2 reduces the dissemination cost by approximately 65 percent compared to state-of-the-art network reprogramming approach-Deluge, and reduces the dissemination cost by approximately 20 percent compared to Zephyr and Hermes-the latest works on incremental reprogramming.", "paper_title": "R2: Incremental Reprogramming Using Relocatable Code in Networked Embedded Systems", "paper_id": "WOS:000322453200013"}