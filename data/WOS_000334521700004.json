{"auto_keywords": [{"score": 0.031646401925631555, "phrase": "social_network_database"}, {"score": 0.02884330215148211, "phrase": "optimal_merge"}, {"score": 0.00481495049065317, "phrase": "efficient_multiview_maintenance"}, {"score": 0.004742179945772899, "phrase": "huge_social_networks"}, {"score": 0.004617455679463816, "phrase": "social_networks"}, {"score": 0.004377719094086111, "phrase": "semantic_patterns"}, {"score": 0.004246333442872459, "phrase": "facebook_posts"}, {"score": 0.0041662189933067, "phrase": "law_enforcement_agencies"}, {"score": 0.0040720661634333424, "phrase": "potential_criminals"}, {"score": 0.0039049226745413224, "phrase": "music_companies"}, {"score": 0.00378767277402891, "phrase": "illegal_music"}, {"score": 0.0037161794591176033, "phrase": "multiple_users"}, {"score": 0.0035772012773052065, "phrase": "real_time"}, {"score": 0.0035500334260484376, "phrase": "new_data"}, {"score": 0.0034303002275695446, "phrase": "social_network"}, {"score": 0.0033019779616246356, "phrase": "social_network_view_servers"}, {"score": 0.003013191092393344, "phrase": "underlying_graph"}, {"score": 0.0028456326741466494, "phrase": "multiple_possible_ways"}, {"score": 0.0027918707809612, "phrase": "common_substructures"}, {"score": 0.0026176114383922974, "phrase": "np"}, {"score": 0.002547583216040341, "phrase": "addview"}, {"score": 0.002387560868354908, "phrase": "multiple_subgraph_views"}], "paper_keywords": ["Algorithms", " Performance", " View maintenance", " graph matching", " social network databases"], "paper_abstract": "Applications to monitor various aspects of social networks are becoming increasingly popular. For instance, marketers want to look for semantic patterns relating to the content of tweets and Facebook posts relating to their products. Law enforcement agencies want to track behaviors involving potential criminals on the Internet by looking for certain patterns of behavior. Music companies want to track patterns of spread of illegal music. These applications allow multiple users to specify patterns of interest and monitor them in real time as new data gets added to the Web or to a social network. In this article we develop the concept of social network view servers in which all of these types of applications can be simultaneously monitored. The patterns of interest are expressed as views over an underlying graph or social network database. We show that a given set of views can be compiled in multiple possible ways to take advantage of common substructures and define the concept of an optimal merge. Though finding an optimal merge is shown to be NP-hard, we develop the AddView to find very good merges quickly. We develop a very fast MultiView algorithm that scalably and efficiently maintains multiple subgraph views when insertions are made to the social network database. We show that our algorithm is correct, study its complexity, and experimentally demonstrate that our algorithm can scalably handle updates to hundreds of views on 6 real-world social network databases with up to 540M edges. Categories and Subject Descriptors: E.1 [Data Structures]: Graphs and Networks; H.2.4 [Systems]: Query Processing; H.3.3 [Information Search and Retrieval]: Retrieval Models", "paper_title": "Efficient Multiview Maintenance under Insertion in Huge Social Networks", "paper_id": "WOS:000334521700004"}