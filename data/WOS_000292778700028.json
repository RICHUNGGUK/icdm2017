{"auto_keywords": [{"score": 0.03644451033122438, "phrase": "jsbml"}, {"score": 0.004815215771351813, "phrase": "java"}, {"score": 0.004674952731430922, "phrase": "sbml."}, {"score": 0.004304144138805271, "phrase": "computer_models"}, {"score": 0.004253618550301311, "phrase": "biological_processes"}, {"score": 0.00420368356873615, "phrase": "text_files"}, {"score": 0.00405735420159564, "phrase": "model_simulations"}, {"score": 0.0040097139701644165, "phrase": "graphical_visualizations"}, {"score": 0.0038930368103015467, "phrase": "in-memory_representation"}, {"score": 0.003847321922936286, "phrase": "sbml"}, {"score": 0.003541923233726252, "phrase": "prior_implementations"}, {"score": 0.003500313767208306, "phrase": "sbml_apis"}, {"score": 0.003260690513595527, "phrase": "java_t_programming_language"}, {"score": 0.0030195184114140063, "phrase": "java_runtime_environment"}, {"score": 0.0029489527539649737, "phrase": "important_benefits"}, {"score": 0.002914288956035066, "phrase": "java_users"}, {"score": 0.002763261749602258, "phrase": "java_web_start_applications"}, {"score": 0.0026827569390113822, "phrase": "sbml_levels"}, {"score": 0.00246957392654378, "phrase": "highest_possible_degree"}, {"score": 0.0023976048394496446, "phrase": "popular_library"}, {"score": 0.0023834640793589435, "phrase": "libsbml._jsbml"}, {"score": 0.0022201273900989416, "phrase": "end_user_applications"}, {"score": 0.0021049977753042253, "phrase": "libsbml-based_backend"}], "paper_keywords": [""], "paper_abstract": "The specifications of the Systems Biology Markup Language (SBML) define standards for storing and exchanging computer models of biological processes in text files. In order to perform model simulations, graphical visualizations and other software manipulations, an in-memory representation of SBML is required. We developed JSBML for this purpose. In contrast to prior implementations of SBML APIs, JSBML has been designed from the ground up for the Java T programming language, and can therefore be used on all platforms supported by a Java Runtime Environment. This offers important benefits for Java users, including the ability to distribute software as Java Web Start applications. JSBML supports all SBML Levels and Versions through Level 3 Version 1, and we have strived to maintain the highest possible degree of compatibility with the popular library libSBML. JSBML also supports modules that can facilitate the development of plugins for end user applications, as well as ease migration from a libSBML-based backend.", "paper_title": "JSBML: a flexible Java library for working with SBML", "paper_id": "WOS:000292778700028"}