{"auto_keywords": [{"score": 0.04375545095111105, "phrase": "existing_techniques"}, {"score": 0.00481495049065317, "phrase": "chip_buses"}, {"score": 0.004768378525561471, "phrase": "deep-submicron_designs"}, {"score": 0.004722254884093624, "phrase": "large_propagation_delay"}, {"score": 0.004653900688892822, "phrase": "dominant_coupling_capacitance"}, {"score": 0.004586531354697466, "phrase": "delay_impacts_system_performance"}, {"score": 0.004284755353695709, "phrase": "common_point"}, {"score": 0.004101281992566145, "phrase": "uniformly_distributed_random_data"}, {"score": 0.004041879818641576, "phrase": "propagation_delay"}, {"score": 0.0038499929374478125, "phrase": "different_applications"}, {"score": 0.0037942165191367366, "phrase": "different_data_behaviors"}, {"score": 0.0036493838225192883, "phrase": "random_data"}, {"score": 0.0035616743422949766, "phrase": "exact_data_behavior"}, {"score": 0.00342568771304873, "phrase": "inferior_performance_results"}, {"score": 0.0032629585038738856, "phrase": "on-chip_buses"}, {"score": 0.002875027551180213, "phrase": "two-phase_transmission"}, {"score": 0.0026986685585382347, "phrase": "chip_bus"}, {"score": 0.002424450174817922, "phrase": "data_buses"}, {"score": 0.0023431692392929353, "phrase": "dpack"}, {"score": 0.002320449502337321, "phrase": "dperm"}, {"score": 0.002286781334850213, "phrase": "restp"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Encoding", " On-chip buses", " Delay minimization", " Deep-submicron designs"], "paper_abstract": "On-chip buses in deep-submicron designs have large propagation delay due to dominant coupling capacitance. As delay impacts system performance, several techniques have been proposed in the literature to minimize it. A common point in most of the existing techniques is to consider uniformly distributed random data, but propagation delay is data dependent and data is application dependent. Different applications may have different data behaviors. The existing techniques which consider uniformly distributed random data may not exploit the exact data behavior of an application and hence can give inferior performance results. By exploiting similarity in the data transmitted on on-chip buses, we propose three delay minimization techniques, namely, data packing (DPack), data permutation (DPerm), and data replication with shielding and two-phase transmission (RESTP). We show that for a 5-mm 32-bit on-chip bus in 90 nm CMOS technology, the DPack, DPerm, and RESTP techniques achieve more than 25%, 32%, and 51% delay savings, respectively, in both address and data buses. For a 32-bit bus. the DPack, DPerm, and RESTP techniques require 38, 34, and 48 wires, respectively. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Delay-efficient bus encoding techniques", "paper_id": "WOS:000269322500004"}