{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "computer_games"}, {"score": 0.01117450812811005, "phrase": "software_engineering"}, {"score": 0.0073400475522894535, "phrase": "game_development"}, {"score": 0.004634254474150777, "phrase": "computer_game_development"}, {"score": 0.0045464538515249085, "phrase": "fastest_growing_industries"}, {"score": 0.004494570360108983, "phrase": "worldwide_economy"}, {"score": 0.004243862930012258, "phrase": "newer_game_versions"}, {"score": 0.00411589720697736, "phrase": "software_engineering_techniques"}, {"score": 0.003976523732243618, "phrase": "greater_flexibility"}, {"score": 0.00385658790017119, "phrase": "better_design"}, {"score": 0.0036413370053909886, "phrase": "classical_software_development"}, {"score": 0.003347105144425849, "phrase": "possible_important_areas"}, {"score": 0.0033215617190376565, "phrase": "future_research"}, {"score": 0.0032336801561165113, "phrase": "standard_methodology"}, {"score": 0.003208999546225013, "phrase": "systematic_literature_reviews"}, {"score": 0.00307657476125683, "phrase": "research_domain"}, {"score": 0.0029722900280316216, "phrase": "dominant_research_topic"}, {"score": 0.0029158847555394714, "phrase": "requirements_engineering"}, {"score": 0.0028496055358577512, "phrase": "software_verification"}, {"score": 0.002530359917257626, "phrase": "conventional_software_engineering"}, {"score": 0.002444544487772349, "phrase": "specific_requirements"}, {"score": 0.002290291401956985, "phrase": "i.e._controlled_experiments"}, {"score": 0.002272794656458419, "phrase": "case_studies"}, {"score": 0.002246799280512825, "phrase": "game_software_engineering_research"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software engineering", " Computer games", " Systematic review"], "paper_abstract": "Context: Currently, computer game development is one of the fastest growing industries in the worldwide economy. In addition to that, computer games are rapidly evolving in the sense that newer game versions arrive in a very short interval. Thus, software engineering techniques are needed for game development in order to achieve greater flexibility and maintainability, less cost and effort, better design, etc. In addition, games present several characteristics that differentiate their development from classical software development. Objective: This study aims to assess the state of the art on research concerning software engineering for computer games and discuss possible important areas for future research. Method: We employed a standard methodology for systematic literature reviews using four well known digital libraries. Results: Software engineering for computer games is a research domain that has doubled its research activity during the last 5 years. The dominant research topic has proven to be requirements engineering, while topics such as software verification and maintenance have been neglected up to now. Conclusion: The results of the study suggest that software engineering for computer games is a field that embraces many techniques and methods from conventional software engineering and adapts them so as to fit the specific requirements of game development. In addition to that, the study proposes the employment of more elaborate empirical methods, i.e. controlled experiments and case studies, in game software engineering research, which, have not been extensively used up to now. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Software engineering research for computer games: A systematic review", "paper_id": "WOS:000280214700002"}