{"auto_keywords": [{"score": 0.032041314337963346, "phrase": "edge_lengths"}, {"score": 0.00481495049065317, "phrase": "length-constrained_maximum-density_subtree"}, {"score": 0.004608539830653038, "phrase": "tree_t"}, {"score": 0.004248294537944227, "phrase": "lower_bound_l"}, {"score": 0.004040688646993609, "phrase": "so-called_length-constrained_maximum-density_subtree_problem"}, {"score": 0.0029909851863915283, "phrase": "positive_integers"}, {"score": 0.002671722386856879, "phrase": "previous_algorithms"}, {"score": 0.002431797888365548, "phrase": "time_complexity"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Dynamic programming", " Trees", " Network design", " Divide and conquer"], "paper_abstract": "Given a tree T with weight and length on each edge, as well as a lower bound L and an upper bound U, the so-called length-constrained maximum-density subtree problem is to find a maximum-density subtree in T such that the length of this subtree is between L and U. In this study, we present an algorithm that runs in O (nU log n) time for the case when the edge lengths are positive integers, where n is the number of nodes in T, which is an improvement over the previous algorithms when U = Omega(log n). In addition, we show that the time complexity Of Our algorithm can be reduced to (nL log n/L), when the edge lengths being considered are uniform. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "An improved algorithm for finding a length-constrained maximum-density subtree in a tree", "paper_id": "WOS:000261792700016"}