{"auto_keywords": [{"score": 0.04962396550254858, "phrase": "reactive_system_specifications"}, {"score": 0.032944062073976044, "phrase": "strong_satisfiability"}, {"score": 0.00481495049065317, "phrase": "strong_satisfiability_checking"}, {"score": 0.004678940805063634, "phrase": "safety-critical_reactive_systems"}, {"score": 0.00459039896577789, "phrase": "unexpected_situations"}, {"score": 0.004439445472040688, "phrase": "design_and_test_phases"}, {"score": 0.004272969980602508, "phrase": "reactive_systems"}, {"score": 0.0038465304237380125, "phrase": "specification_phase"}, {"score": 0.003809932244103758, "phrase": "development_reworking"}, {"score": 0.00349577373145384, "phrase": "complex_and_intricate_analysis"}, {"score": 0.003413183361838603, "phrase": "realizability_problems"}, {"score": 0.0032850648549389025, "phrase": "typical_simple_deficiencies"}, {"score": 0.002739001004969201, "phrase": "input_patterns"}, {"score": 0.002699960312990493, "phrase": "loop_structures"}, {"score": 0.0024652715040303416, "phrase": "checking_method"}, {"score": 0.0024185182010749273, "phrase": "satisfiability_solver"}, {"score": 0.002316532084420729, "phrase": "bounded_strong_satisfiability_problem"}, {"score": 0.002187194307878705, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": ["reactive system", " bounded analysis", " SAT solver", " realizability", " LTL specification"], "paper_abstract": "Many fatal accidents involving safety-critical reactive systems have occurred in unexpected situations that were not considered during the design and test phases of development. To prevent such accidents, reactive systems should be designed to respond appropriately to any request from an environment at any time. Verifying this property during the specification phase reduces development reworking. This property of a specification is commonly known as realizability. Realizability checking for reactive system specifications involves complex and intricate analysis. The complexity of realizability problems is 2EXPTIME-complete. To detect typical simple deficiencies in specifications efficiently, we introduce the notion of bounded strong satisfiability (a necessary condition for realizability), and present a method for checking this property. Bounded strong satisfiability is the property that, for all input patterns represented by loop structures of a given size k, there is a response that satisfies a given specification. We report a checking method based on a satisfiability solver, and show that the complexity of the bounded strong satisfiability problem is co-NEXPTIME-complete. Moreover, we report experimental results showing that our method is more efficient than existing approaches.", "paper_title": "Bounded Strong Satisfiability Checking of Reactive System Specifications", "paper_id": "WOS:000342784400008"}