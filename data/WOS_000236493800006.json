{"auto_keywords": [{"score": 0.030875720072150302, "phrase": "arachne"}, {"score": 0.012326470918083317, "phrase": "web_caches"}, {"score": 0.00481495049065317, "phrase": "system_applications"}, {"score": 0.004651346011959237, "phrase": "typical_examples"}, {"score": 0.004571630734130793, "phrase": "system-level_c_applications"}, {"score": 0.0045088388224419, "phrase": "careful_design"}, {"score": 0.004222105714769577, "phrase": "server_downtime"}, {"score": 0.0041211075804202905, "phrase": "buffer_overflows"}, {"score": 0.004092695445765521, "phrase": "double-free_bugs"}, {"score": 0.003967235882351874, "phrase": "critical_breaches"}, {"score": 0.003939880387831148, "phrase": "running_applications"}, {"score": 0.003912712778141845, "phrase": "performance_issues"}, {"score": 0.0038456073694665, "phrase": "run_time"}, {"score": 0.0037019839121200508, "phrase": "prefetching_strategy"}, {"score": 0.0036008989464331835, "phrase": "aspect-oriented_programming"}, {"score": 0.0035637052288771706, "phrase": "appealing_solution"}, {"score": 0.0034305738274625634, "phrase": "current_dynamic_aspect_systems"}, {"score": 0.0032682787834955856, "phrase": "c_applications"}, {"score": 0.0032121901685844803, "phrase": "new_aspect_system"}, {"score": 0.002976581914095474, "phrase": "function_calls"}, {"score": 0.0029356335847783195, "phrase": "variable_aliases"}, {"score": 0.0027870176748502045, "phrase": "legacy_applications"}, {"score": 0.0026735459686033627, "phrase": "security_breaches"}, {"score": 0.002609494276659916, "phrase": "network_protocols"}, {"score": 0.002426378123762607, "phrase": "abstract_terms"}, {"score": 0.0024096216848276094, "phrase": "main_properties"}, {"score": 0.0022875739347765914, "phrase": "actual_implementation"}, {"score": 0.0022560827223539934, "phrase": "detailed_presentation"}, {"score": 0.0022404996930993413, "phrase": "arachne's_implementation"}, {"score": 0.0022096550791379033, "phrase": "performance_evaluations"}, {"score": 0.0021417950504965997, "phrase": "high-performance_applications"}, {"score": 0.0021049977753042253, "phrase": "squid_web_cache"}], "paper_keywords": [""], "paper_abstract": "Security, networking and prefetching are typical examples of concerns which crosscut system-level C applications. While a careful design can help to address these concerns, they frequently become an issue at runtime, especially if avoiding server downtime is important. Vulnerabilities caused by buffer overflows and double-free bugs are frequently discovered after deployment, thus opening critical breaches in running applications. Performance issues also often arise at run time: in the case of Web caches, e.g., a prefetching strategy may be required to increase performance. Aspect-oriented programming is an appealing solution to solve these issues. However, none of the current dynamic aspect systems is expressive and efficient enough to support them properly in the context of C applications. Arachne is a new aspect system specifically designed to address these issues. Its aspect language allows aspects to be expressed concisely using a sequence construct for quantification over function calls and accesses through variable aliases. Arachne enables aspects to be woven \"on the fly\" in running legacy applications. We show how these abilities can be used to prevent security breaches, to modularize the replacement of network protocols by more efficient ones, and to introduce prefetching in Web caches. We present two formal semantics for Arachne: one which defines in abstract terms the main properties of the sequence construct, and a second one which enables reasoning about the actual implementation. Following a detailed presentation of Arachne's implementation, we give performance evaluations showing that Arachne is fast enough to extend high-performance applications, such as the Squid Web cache.", "paper_title": "An expressive aspect language for system applications with arachne", "paper_id": "WOS:000236493800006"}