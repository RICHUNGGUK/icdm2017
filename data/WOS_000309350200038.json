{"auto_keywords": [{"score": 0.045742482980849604, "phrase": "opencl_framework"}, {"score": 0.00481495049065317, "phrase": "unified_programming_model"}, {"score": 0.003984141889010296, "phrase": "high_performance"}, {"score": 0.0035620354052144656, "phrase": "single_system"}, {"score": 0.0032398798149196432, "phrase": "multiple_heterogeneous_compute_devices"}, {"score": 0.003130077012135034, "phrase": "multicore_cpus"}, {"score": 0.0029722900280316216, "phrase": "remote_node"}, {"score": 0.0027982016314450717, "phrase": "local_node"}, {"score": 0.002726740692380339, "phrase": "communication_api"}, {"score": 0.0026116610153271943, "phrase": "mpi_library"}, {"score": 0.0024799423362011582, "phrase": "application_source"}, {"score": 0.0021416404045850224, "phrase": "nine_compute_nodes"}, {"score": 0.0021049977753042253, "phrase": "eleven_opencl_benchmark_applications"}], "paper_keywords": ["Algorithm", " Design", " Experimentation", " Languages", " Measurement", " Performance", " OpenCL", " Clusters", " Heterogeneous computing", " Programming models"], "paper_abstract": "In this paper, we propose an OpenCL framework for heterogeneous CPU/GPU clusters, and show that the framework achieves both high performance and ease of programming. The framework provides an illusion of a single system for the user. It allows the application to utilize multiple heterogeneous compute devices, such as multicore CPUs and GPUs, in a remote node as if they were in a local node. No communication API, such as the MPI library, is required in the application source. We implement the OpenCL framework and evaluate its performance on a heterogeneous CPU/GPU cluster that consists of one host node and nine compute nodes using eleven OpenCL benchmark applications.", "paper_title": "OpenCL as a Unified Programming Model for Heterogeneous CPU/GPU Clusters", "paper_id": "WOS:000309350200038"}