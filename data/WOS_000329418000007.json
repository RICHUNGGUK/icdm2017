{"auto_keywords": [{"score": 0.027379182735969967, "phrase": "object-oriented_project_size"}, {"score": 0.027250952120642526, "phrase": "metric_and_ordinary_least_square_regression"}, {"score": 0.00481495049065317, "phrase": "code_size"}, {"score": 0.004723322467153553, "phrase": "object-oriented_systems"}, {"score": 0.0046781613377273774, "phrase": "uml_class_diagrams"}, {"score": 0.004611224230543916, "phrase": "comparative_study"}, {"score": 0.004394912866629924, "phrase": "sloc"}, {"score": 0.003992129945230457, "phrase": "early_phase"}, {"score": 0.003953932197201054, "phrase": "software_development"}, {"score": 0.0037864980290391354, "phrase": "early_sloc"}, {"score": 0.003696550794743764, "phrase": "object-oriented_system"}, {"score": 0.0035229930971258316, "phrase": "early_software_development_phase"}, {"score": 0.003422781254306241, "phrase": "different_modeling_techniques"}, {"score": 0.0033575566897536906, "phrase": "prediction_models"}, {"score": 0.003262035294895737, "phrase": "six_types"}, {"score": 0.0031845067058084583, "phrase": "sloc."}, {"score": 0.003154012038613403, "phrase": "used_techniques"}, {"score": 0.003123808471618783, "phrase": "linear_models"}, {"score": 0.0030938932434437178, "phrase": "non-linear_models"}, {"score": 0.0030203487665054806, "phrase": "instance-based_models"}, {"score": 0.002977061391551628, "phrase": "investigated_metrics"}, {"score": 0.002948547333717581, "phrase": "class_diagram_metrics"}, {"score": 0.0029203055813347874, "phrase": "predictive_object_points"}, {"score": 0.0028923335491735564, "phrase": "object-oriented_project_size_metric"}, {"score": 0.0028100102841877835, "phrase": "objective_class_points"}, {"score": 0.0027697290872182477, "phrase": "object-oriented_function_points"}, {"score": 0.0026142814606853037, "phrase": "prediction_model"}, {"score": 0.00247944491239733, "phrase": "highest_accuracy"}, {"score": 0.002443892904436972, "phrase": "mmre"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Object-oriented", " Code size", " Estimation", " UML", " Class diagrams"], "paper_abstract": "Background: Source code size in terms of SLOC (source lines of code) is the input of many parametric software effort estimation models. However, it is unavailable at the early phase of software development. Objective: We investigate the accuracy of early SLOC estimation approaches for an object-oriented system using the information collected from its UML class diagram available at the early software development phase. Method: We use different modeling techniques to build the prediction models for investigating the accuracy of six types of metrics to estimate SLOC. The used techniques include linear models, non-linear models, rule/tree-based models, and instance-based models. The investigated metrics are class diagram metrics, predictive object points, object-oriented project size metric, fast&&serious class points, objective class points, and object-oriented function points. Results: Based on 100 open-source Java systems, we find that the prediction model built using object-oriented project size metric and ordinary least square regression with a logarithmic transformation achieves the highest accuracy (mean MMRE = 0.19 and mean Pred(25) = 0.74). Conclusion: We should use object-oriented project size metric and ordinary least square regression with a logarithmic transformation to build a simple, accurate, and comprehensible SLOC estimation model. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Source code size estimation approaches for object-oriented systems from UML class diagrams: A comparative study", "paper_id": "WOS:000329418000007"}