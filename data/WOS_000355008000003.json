{"auto_keywords": [{"score": 0.03784144720028532, "phrase": "rise"}, {"score": 0.00481531525112606, "phrase": "distributed"}, {"score": 0.004761254919417396, "phrase": "devs"}, {"score": 0.004620957579769604, "phrase": "rise_middleware"}, {"score": 0.004418192459607072, "phrase": "global_cooperation"}, {"score": 0.00436890075128947, "phrase": "distributed_simulation_technology"}, {"score": 0.004192803336288522, "phrase": "current_distributed_simulation_interoperability_methods"}, {"score": 0.004130535674260505, "phrase": "system_implementations"}, {"score": 0.00399378014373321, "phrase": "synchronization_algorithms"}, {"score": 0.003934456513187142, "phrase": "simulation_interoperability"}, {"score": 0.00366443843576107, "phrase": "restful_web-services"}, {"score": 0.003556345965454902, "phrase": "general_middleware"}, {"score": 0.0034514309280805106, "phrase": "different_simulation_environments"}, {"score": 0.0033121909731471787, "phrase": "heterogeneous_simulations"}, {"score": 0.0029381648092259064, "phrase": "devs_and_cell-devs_models"}, {"score": 0.00286213454317036, "phrase": "proof-of-concept_design"}, {"score": 0.002788066194685293, "phrase": "distributed_simulation"}, {"score": 0.0027569106820061707, "phrase": "rise_environment"}, {"score": 0.0026956374041441126, "phrase": "restful_ws_interoperability_style"}, {"score": 0.00250103550267459, "phrase": "substantial_performance_improvement"}, {"score": 0.002373214852820709, "phrase": "restful_ws"}, {"score": 0.0022434880661725493, "phrase": "cloud_computing_environment"}, {"score": 0.002152874480615438, "phrase": "similar_testing_environment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Interoperability", " Distributed simulation", " Web services", " REST", " SOAP", " Middleware", " DEVS", " Cell-DEVS", " CD plus"], "paper_abstract": "With the expansion of the Web, the desire toward global cooperation in the distributed simulation technology has also been on the rise. However, since current distributed simulation interoperability methods are coupled with system implementations, they place constraints on enhancing interoperability and synchronization algorithms. To enhance simulation interoperability on the Web, we implemented the RISE (RESTful Interoperability Simulation Environment) middleware, the first existing simulation middleware to be based on RESTful Web-services (WS). RISE is a general middleware that serves as a container to hold different simulation environments without being specific to a certain environment. RISE can hold heterogeneous simulations, and it exposes them as services via the Web. One of such services is called Distributed CD++ (DCD++) simulation system, an extension of the CD++ core engine that allows executing DEVS and Cell-DEVS models. Here, we introduce a proof-of-concept design and implementation of DCD++ using the distributed simulation using the RISE environment. We show how the RESTful WS interoperability style in RISE has improved the design, implementation and the performance of the DCD++ simulator. We also discuss a substantial performance improvement of the implementation of the RISE-based DCD++ presented here, showing many advantages of the RESTful WS presented here: improved interoperability, a seamless method to be connected into a cloud computing environment, and performance improvement when compared to our SOAP-based DCD++ in a similar testing environment. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Distributed simulation of DEVS and Cell-DEVS models using the RISE middleware", "paper_id": "WOS:000355008000003"}