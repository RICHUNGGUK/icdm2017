{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "continuous_dynamical_systems"}, {"score": 0.049593242225692294, "phrase": "timed_automata"}, {"score": 0.04497972432687123, "phrase": "state_space"}, {"score": 0.043891862951523725, "phrase": "positive_invariant_sets"}, {"score": 0.004238452771031322, "phrase": "dynamical_system"}, {"score": 0.003986684503518077, "phrase": "timed_automaton"}, {"score": 0.0038271712887391015, "phrase": "formal_verification"}, {"score": 0.003788296551609616, "phrase": "temporal_properties"}, {"score": 0.0037498152007206815, "phrase": "dynamical_systems"}, {"score": 0.0036740168936985314, "phrase": "system_trajectory"}, {"score": 0.0030569913145731408, "phrase": "sub-level_sets"}, {"score": 0.0030262377983752862, "phrase": "lyapunov"}, {"score": 0.0028026735035370206, "phrase": "sound_and_complete_abstractions"}, {"score": 0.002731971103291716, "phrase": "complete_abstractions"}, {"score": 0.0026630475331025955, "phrase": "multiple_timed_automata"}, {"score": 0.0025826247025542213, "phrase": "verification_process"}, {"score": 0.0025433263646920364, "phrase": "proposed_abstraction"}, {"score": 0.0021049977753042253, "phrase": "high-dimensional_system"}], "paper_keywords": ["Timed automata", " Verification", " Reachability", " Lyapunov functions"], "paper_abstract": "This paper presents a method for abstracting continuous dynamical systems by timed automata. The abstraction is based on partitioning the state space of a dynamical system using positive invariant sets, which form cells that represent locations of a timed automaton. The abstraction is intended to enable formal verification of temporal properties of dynamical systems without simulating any system trajectory, which is currently not possible. Therefore, conditions for obtaining sound, complete, and refinable abstractions are set up. The novelty of the method is the partitioning of the state space, which is generated utilizing sub-level sets of Lyapunov functions, as they are positive invariant sets. It is shown that this partition generates sound and complete abstractions. Furthermore, the complete abstractions can be composed of multiple timed automata, allowing parallelization of the verification process. The proposed abstraction is applied to two examples, which illustrate how sound and complete abstractions are generated and the type of specification we can check. Finally, an example shows how the compositionality of the abstraction can be used to analyze a high-dimensional system.", "paper_title": "Verification of continuous dynamical systems by timed automata", "paper_id": "WOS:000292565100002"}