{"auto_keywords": [{"score": 0.04940203756018457, "phrase": "coq"}, {"score": 0.00481495049065317, "phrase": "typed_tactic_programming"}, {"score": 0.0046797114400479135, "phrase": "effective_support"}, {"score": 0.004613516457919661, "phrase": "custom_proof_automation"}, {"score": 0.004483909657713567, "phrase": "large-scale_interactive_proof_development"}, {"score": 0.003752126270661821, "phrase": "base_logic"}, {"score": 0.0036727235025069828, "phrase": "accompanying_theorem_prover"}, {"score": 0.0034690732089830045, "phrase": "advanced_type-theoretic_machinery"}, {"score": 0.0033001333942688778, "phrase": "established_theorem_provers"}, {"score": 0.0032073043728420843, "phrase": "mtac"}, {"score": 0.002965229277927781, "phrase": "dependently_typed_tactic_programming"}, {"score": 0.002780783274864117, "phrase": "ordinary_coq_programming"}, {"score": 0.002664221051021009, "phrase": "new_set"}, {"score": 0.0026264601495742295, "phrase": "typed_tactical_primitives"}, {"score": 0.0024630345285372958, "phrase": "trusted_kernel_typechecker"}, {"score": 0.002326304140277375, "phrase": "new_tactical_primitives"}, {"score": 0.0021352776064254195, "phrase": "monadic_tactics"}, {"score": 0.0021049977753042253, "phrase": "type_inference"}], "paper_keywords": [""], "paper_abstract": "Effective support for custom proof automation is essential for large-scale interactive proof development. However, existing languages for automation via tactics either (a) provide no way to specify the behavior of tactics within the base logic of the accompanying theorem prover, or (b) rely on advanced type-theoretic machinery that is not easily integrated into established theorem provers. We present Mtac, a lightweight but powerful extension to Coq that supports dependently typed tactic programming. Mtac tactics have access to all the features of ordinary Coq programming, as well as a new set of typed tactical primitives. We avoid the need to touch the trusted kernel typechecker of Coq by encapsulating uses of these new tactical primitives in a monad, and instrumenting Coq so that it executes monadic tactics during type inference.", "paper_title": "Mtac: A monad for typed tactic programming in Coq", "paper_id": "WOS:000368240300005"}