{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "adaptive_drift_analysis"}, {"score": 0.004007083686875716, "phrase": "linear_objective_function"}, {"score": 0.003950846696972114, "phrase": "bit_strings"}, {"score": 0.003813669883040509, "phrase": "expected_time"}, {"score": 0.003478813491904962, "phrase": "ca_parts"}, {"score": 0.0033579708256295847, "phrase": "previous_work"}, {"score": 0.003264316172836322, "phrase": "universal_drift_functions"}, {"score": 0.0029357204796552653, "phrase": "drift_functions"}, {"score": 0.0028137115734915624, "phrase": "relevant_objective_functions"}, {"score": 0.002603012037901889, "phrase": "carefully-constructed_drift_functions"}, {"score": 0.0024947959375982614, "phrase": "expected_optimisation_time"}, {"score": 0.002357457094026928, "phrase": "alternative_proof"}, {"score": 0.0023079225317714815, "phrase": "multiplicative_drift_theorem"}, {"score": 0.0021049977753042253, "phrase": "high_probability"}], "paper_keywords": [""], "paper_abstract": "We show that, for any c > 0, the (1+1) evolutionary algorithm using an arbitrary mutation rate p (n) =c/n finds the optimum of a linear objective function over bit strings of length n in expected time I similar to(nlogn). Previously, this was only known for ca parts per thousand currency sign1. Since previous work also shows that universal drift functions cannot exist for c larger than a certain constant, we instead define drift functions which depend crucially on the relevant objective functions (and also on c itself). Using these carefully-constructed drift functions, we prove that the expected optimisation time is I similar to(nlogn). By giving an alternative proof of the multiplicative drift theorem, we also show that our optimisation-time bound holds with high probability.", "paper_title": "Adaptive Drift Analysis", "paper_id": "WOS:000313115700010"}