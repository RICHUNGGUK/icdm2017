{"auto_keywords": [{"score": 0.04870830291135745, "phrase": "clock_tree"}, {"score": 0.011863523543075268, "phrase": "clock_tree_power"}, {"score": 0.00481495049065317, "phrase": "low_power"}, {"score": 0.004799437161597158, "phrase": "gated_clock_tree"}, {"score": 0.004722613498487908, "phrase": "power_consumption"}, {"score": 0.004602233424629559, "phrase": "total_power"}, {"score": 0.004528564782757226, "phrase": "vlsi"}, {"score": 0.004044645056447888, "phrase": "previous_works"}, {"score": 0.0040186038781533946, "phrase": "gated_clock_tree_power_minimization"}, {"score": 0.003954229201647876, "phrase": "clock_routing"}, {"score": 0.003531474887552889, "phrase": "activity-aware_register_clustering"}, {"score": 0.0033861930947608207, "phrase": "smaller_area"}, {"score": 0.003278504512223807, "phrase": "similar_activity_patterns"}, {"score": 0.003163985877966426, "phrase": "resultant_subtrees"}, {"score": 0.0030732613046470314, "phrase": "signal_nets"}, {"score": 0.0026830048370777315, "phrase": "higher_switching_rates"}, {"score": 0.0025642311494861797, "phrase": "control_signal"}, {"score": 0.00250682585023182, "phrase": "local_ungating"}, {"score": 0.002427035025924384, "phrase": "gate_control"}, {"score": 0.0022676260293002706, "phrase": "consecutive_clock_cycles"}, {"score": 0.002253000188119187, "phrase": "experimental_results"}, {"score": 0.0022168460543913787, "phrase": "mcnc_benchmarks"}, {"score": 0.0021393317071153844, "phrase": "total_wirelength"}, {"score": 0.0021049977753042253, "phrase": "minimal_overheads"}], "paper_keywords": ["gated clock tree", " activity-aware", " register placement"], "paper_abstract": "As power consumption of the clock tree dominates over 40% of the total power in modem high performance VLSI designs, measures must be taken to keep it under control. One of the most effective methods is based on clock gating to shut off the clock when the modules are idle. However, previous works on gated clock tree power minimization are mostly focused on clock routing and the improvements are often limited by the given registers placement. The purpose of this work is to navigate the registers during placement to further reduce the clock tree power based on clock gating. Our method performs activity-aware register clustering that reduces the clock tree power not only by clumping the registers into a smaller area, but also by pulling the registers with the similar activity patterns closely to shut off the clock more time for the resultant subtrees. In order to reduce the impact of signal nets wirelength and power due to register clustering, we apply the timing and activity based net weighting in [14], which reduces the nets switching power by assigning a combination of activity and timing weights to the nets with higher switching rates or more critical timing. To tradeoff the power dissipated by the clock tree and the control signal, we extend the idea of local ungating in [6] and propose an algorithm of gate control signal optimization, which still sets the gate enable signal high if a register is active for a number of consecutive clock cycles. Experimental results on a set of MCNC benchmarks show that our approach is able to reduce the power and total wirelength of clock tree greatly with minimal overheads.", "paper_title": "Low power gated clock tree driven placement", "paper_id": "WOS:000253656200022"}