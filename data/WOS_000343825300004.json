{"auto_keywords": [{"score": 0.0440490531162443, "phrase": "product_line"}, {"score": 0.013288121893109678, "phrase": "sple"}, {"score": 0.00481495049065317, "phrase": "feature_modeling"}, {"score": 0.003920476803132283, "phrase": "products'_requirements"}, {"score": 0.003868257410961701, "phrase": "common_base"}, {"score": 0.0038338299812503, "phrase": "software_assets"}, {"score": 0.0034437574674180365, "phrase": "particularly_goal_modeling"}, {"score": 0.0033525843225012918, "phrase": "alternative_solutions"}, {"score": 0.0033079039414389833, "phrase": "appropriate_solution"}, {"score": 0.0031916366459252992, "phrase": "large_product_line"}, {"score": 0.0030248298759040695, "phrase": "product_line_features"}, {"score": 0.0029978863469038914, "phrase": "key_challenges"}, {"score": 0.002971182100871581, "phrase": "re._feature_modeling"}, {"score": 0.0025404470150468387, "phrase": "goal-driven_feature_modeling_approach"}, {"score": 0.0024401411219526774, "phrase": "problem_space"}, {"score": 0.002418393046947528, "phrase": "solution_space_features"}, {"score": 0.0023754752864092437, "phrase": "explicit_mappings"}, {"score": 0.002271476019266231, "phrase": "inherent_complexity"}, {"score": 0.002241171326888997, "phrase": "mixed-view_feature_model"}, {"score": 0.0022112700457629494, "phrase": "key_engineering_drivers"}, {"score": 0.002181766829493483, "phrase": "core_assets"}, {"score": 0.0021049977753042253, "phrase": "quality-based_product_configuration"}], "paper_keywords": ["Feature modeling", " Product line requirements engineering", " Goal modeling", " Feature space", " Feature modeling viewpoints"], "paper_abstract": "Requirements engineering (RE) offers the means to discover, model, and manage the requirements of the products that comprise a product line, while software product line engineering (SPLE) offers the means of realizing the products' requirements from a common base of software assets. In practice, however, RE and SPLE have proven to be less complementary than they should. While some RE techniques, particularly goal modeling, support the exploration of alternative solutions, the appropriate solution is typically conditional on context and a large product line may have many product-defining contexts. Thus, scalability and traceability through into product line features are key challenges for RE. Feature modeling, by contrast, has been widely accepted as a way of modeling commonality and variability of products of a product line that may be very complex. In this paper, we propose a goal-driven feature modeling approach that separates a feature space in terms of problem space and solution space features, and establish explicit mappings between them. This approach contributes to reducing the inherent complexity of a mixed-view feature model, deriving key engineering drivers for developing core assets of a product line, and facilitating the quality-based product configuration.", "paper_title": "A holistic approach to feature modeling for product line requirements engineering", "paper_id": "WOS:000343825300004"}