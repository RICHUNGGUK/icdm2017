{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "api"}, {"score": 0.02346541585588276, "phrase": "randomized_versions"}, {"score": 0.0045895181082906715, "phrase": "software_modularization"}, {"score": 0.004456044928556639, "phrase": "new_set"}, {"score": 0.004278807087784626, "phrase": "non-object-oriented_software_system"}, {"score": 0.004154332348800334, "phrase": "design_principles"}, {"score": 0.0040334640350288, "phrase": "defined_metrics"}, {"score": 0.0034540850937966336, "phrase": "intermodule_coupling-based_notions"}, {"score": 0.0033411580268394732, "phrase": "horizontal_layering"}, {"score": 0.003292156638306418, "phrase": "large_software_systems"}, {"score": 0.0028398718024224166, "phrase": "important_support_metrics"}, {"score": 0.0025606791601860543, "phrase": "information-theoretic_principles"}, {"score": 0.002495268931035983, "phrase": "popular_open-source_systems"}, {"score": 0.0024677487011556427, "phrase": "large_legacy-code_business_applications"}, {"score": 0.0023519508354777215, "phrase": "human-modularized_versions"}, {"score": 0.0021049977753042253, "phrase": "individual_functions"}], "paper_keywords": ["metrics/measurement", " modules and interfaces", " information theory", " distribution", " maintenance and enhancement", " maintainability", " coupling", " layered architecture"], "paper_abstract": "We present in this paper a new set of metrics that measure the quality of modularization of a non-object-oriented software system. We have proposed a set of design principles to capture the notion of modularity and defined metrics centered around these principles. These metrics characterize the software from a variety of perspectives: structural, architectural, and notions such as the similarity of purpose and commonality of goals. (By structural, we are referring to intermodule coupling-based notions, and by architectural, we mean the horizontal layering of modules in large software systems.) We employ the notion of API (Application Programming Interface) as the basis for our structural metrics. The rest of the metrics we present are in support of those that are based on API. Some of the important support metrics include those that characterize each module on the basis of the similarity of purpose of the services offered by the module. These metrics are based on information-theoretic principles. We tested our metrics on some popular open-source systems and some large legacy-code business applications. To validate the metrics, we compared the results obtained on human-modularized versions of the software (as created by the developers of the software) with those obtained on randomized versions of the code. For randomized versions, the assignment of the individual functions to modules was randomized.", "paper_title": "API-based and information-theoretic metrics for measuring the quality of software modularization", "paper_id": "WOS:000242312200002"}