{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "black_holes"}, {"score": 0.004751470337792407, "phrase": "current_mobile_agent_algorithms"}, {"score": 0.004673290248999786, "phrase": "computer_networks"}, {"score": 0.004505771917193237, "phrase": "large_classes"}, {"score": 0.0044759626695474106, "phrase": "highly_dynamic_networks"}, {"score": 0.0036553070575015344, "phrase": "urban_subway_system"}, {"score": 0.003375179864844835, "phrase": "asynchronous_computational_entities"}, {"score": 0.0032324864013225166, "phrase": "highly_dynamic_graph"}, {"score": 0.0031581587465429593, "phrase": "asynchronous_movements"}, {"score": 0.0031372369299648203, "phrase": "mobile_entities"}, {"score": 0.003044785536429499, "phrase": "necessary_conditions"}, {"score": 0.00290634217991954, "phrase": "solution_protocol"}, {"score": 0.002830068550982961, "phrase": "fault_mapping_problem"}, {"score": 0.0028113140998735366, "phrase": "subway_networks"}, {"score": 0.0027834145465170292, "phrase": "minimum_number"}, {"score": 0.002561401523136952, "phrase": "carrier_moves"}, {"score": 0.002485877135880137, "phrase": "worst_case"}, {"score": 0.0023028105026714533, "phrase": "subway_trains"}, {"score": 0.0022274718912558343, "phrase": "subway_route"}, {"score": 0.0021762030438262046, "phrase": "lower_bounds"}], "paper_keywords": ["Black hole search", " Dynamic networks", " Time-varying graphs", " Mobile agents computing"], "paper_abstract": "Current mobile agent algorithms for mapping faults in computer networks assume that the network is static. However, for large classes of highly dynamic networks (e.g., wireless mobile ad hoc networks, sensor networks, vehicular networks), the topology changes as a function of time. These networks, called delay-tolerant, challenged, opportunistic, etc., have never been investigated with regard to locating faults. We consider a subclass of these networks modeled on an urban subway system. We examine the problem of creating a map of such a subway. More precisely, we study the problem of a team of asynchronous computational entities (the mapping agents) determining the location of black holes in a highly dynamic graph, whose edges are defined by the asynchronous movements of mobile entities (the subway carriers). We determine necessary conditions for the problem to be solvable. We then present and analyze a solution protocol; we show that our algorithm solves the fault mapping problem in subway networks with the minimum number of agents possible, k = gamma + 1, where gamma is the number of carrier stops at black holes. The number of carrier moves between stations required by the algorithm in the worst case is O(k center dot n(C)(2) center dot l(R) + n(C) center dot l(R)(2)), where nC is the number of subway trains, and l(R) is the length of the subway route with the most stops. We establish lower bounds showing that this bound is tight. Thus, our protocol is both agent-optimal and move-optimal.", "paper_title": "Searching for Black Holes in Subways", "paper_id": "WOS:000299091300011"}