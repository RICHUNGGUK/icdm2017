{"auto_keywords": [{"score": 0.04561064932086239, "phrase": "reliable_transport_protocols"}, {"score": 0.00481495049065317, "phrase": "transport_layer_data"}, {"score": 0.004456611869693865, "phrase": "receiving_application"}, {"score": 0.003802135020791801, "phrase": "rare_event"}, {"score": 0.003447932289587852, "phrase": "transport_protocols"}, {"score": 0.003378385493203297, "phrase": "improved_performance"}, {"score": 0.0032567067586061834, "phrase": "sctp."}, {"score": 0.0031650944584992726, "phrase": "tcp_traces"}, {"score": 0.0028583875909257766, "phrase": "reneging_case"}, {"score": 0.0028236336891860592, "phrase": "operating_system"}, {"score": 0.002755384932325921, "phrase": "reneging_behavior"}, {"score": 0.0027330647307379926, "phrase": "linux"}, {"score": 0.0026889762015646075, "phrase": "windows"}, {"score": 0.00260246764210499, "phrase": "average_main_memory"}, {"score": 0.002539550974361945, "phrase": "reneging_operating_system"}, {"score": 0.0022378620428620782, "phrase": "insignificant_memory"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["OS fingerprinting", " Reneging", " SACK", " TCP"], "paper_abstract": "Reneging occurs when a transport layer data receiver first selectively acks data, and later discards that data from its receiver buffer prior to delivery to the receiving application or socket buffer. Reliable transport protocols such as TCP (Transmission Control Protocol) and SCTP (Stream Control Transmission Protocol) are designed to tolerate reneging. We argue that this design should be changed because: (1) reneging is a rare event in practice, and the memory saved when reneging does occur is insignificant, and (2) by not tolerating reneging, transport protocols have the potential for improved performance as has been shown in the case of SCTP. To support our argument, we analyzed TCP traces from three different domains (Internet backbone, wireless, enterprise). We detected reneging in only 0.05% of the analyzed TCP flows. In each reneging case, the operating system was fingerprinted thus allowing the reneging behavior of Linux, FreeBSD and Windows to be more precisely characterized. The average main memory returned each time to the reneging operating system was on the order of two TCP segments. Reneging saves so little memory that it is not worth the trouble. Since reneging happens rarely and when it does happen, reneging returns insignificant memory, we recommend designing reliable transport protocols to not permit reneging. (c) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Transport layer reneging", "paper_id": "WOS:000342246700007"}