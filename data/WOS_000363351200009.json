{"auto_keywords": [{"score": 0.03794869647631241, "phrase": "flow_field"}, {"score": 0.00481495049065317, "phrase": "flow_features"}, {"score": 0.004767261858417823, "phrase": "supervised_streamline_segmentation"}, {"score": 0.004720043307726269, "phrase": "effective_flow_feature_extraction"}, {"score": 0.004604023526673226, "phrase": "complex_flow_fields"}, {"score": 0.0045357787854931894, "phrase": "visual_clutter"}, {"score": 0.004490842671590769, "phrase": "existing_methods"}, {"score": 0.004337028108577593, "phrase": "preprocessing_step"}, {"score": 0.004294052530714228, "phrase": "feature_extraction"}, {"score": 0.004024863549087511, "phrase": "streamline_segmentation"}, {"score": 0.0037537380967196123, "phrase": "desired_features"}, {"score": 0.0034660938095219846, "phrase": "segmentation_points"}, {"score": 0.003281186608301359, "phrase": "remaining_points"}, {"score": 0.0032004205378150354, "phrase": "negative_examples"}, {"score": 0.003121636289442593, "phrase": "multiscale_features"}, {"score": 0.002984665318717504, "phrase": "binary_support_vector_machine"}, {"score": 0.0028822890425197582, "phrase": "trained_classifier"}, {"score": 0.0023727863021828547, "phrase": "data_set"}, {"score": 0.0023028105026714533, "phrase": "novel_heuristic"}, {"score": 0.0022573076362326135, "phrase": "minimum_bounding_ellipsoid_volume"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Flow visualization", " Flow feature extraction", " Streamline segmentation", " Support vector machine"], "paper_abstract": "Effective flow feature extraction enables users to explore complex flow fields by reducing visual clutter. Existing methods usually use streamline segmentation as a preprocessing step for feature extraction. In our work, features are directly extracted as a result of streamline segmentation. In order to achieve this, we first ask users to specify desired features by manually segmenting a few streamlines from a flow field. Users only need to pick the segmentation points (i.e., positive examples) along a streamline, remaining points will be used as negative examples. Next we compute multiscale features for each positive/negative example and feed them into a binary support vector machine (SVM) trainer. The trained classifier is then used to segment all the streamlines in a flow field. Finally, the segments are clustered based on their shape similarities. Our experiment shows that very good segmentation results can be obtained with only a small number of streamlines to be segmented by users for each data set. We also propose a novel heuristic based on the minimum bounding ellipsoid volume to help determine where to segment a streamline. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Extracting flow features via supervised streamline segmentation", "paper_id": "WOS:000363351200009"}