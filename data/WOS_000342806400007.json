{"auto_keywords": [{"score": 0.034182875683624124, "phrase": "java"}, {"score": 0.004680473391946691, "phrase": "embedded_systems"}, {"score": 0.004549734943142138, "phrase": "time_and_memory_resources"}, {"score": 0.004464602028530629, "phrase": "important_part"}, {"score": 0.004120130206000757, "phrase": "development_process"}, {"score": 0.003986103192038901, "phrase": "great_value"}, {"score": 0.003802135020791801, "phrase": "memory-related_bounds"}, {"score": 0.003766369160795001, "phrase": "recent_research_results"}, {"score": 0.0036095259108028105, "phrase": "resource_consumption_analysis"}, {"score": 0.0033308077968426937, "phrase": "research_results"}, {"score": 0.003176986603753607, "phrase": "symbolic_loop_bounds"}, {"score": 0.00314708280192844, "phrase": "symbolic_bounds"}, {"score": 0.0031174595932694036, "phrase": "heap_size"}, {"score": 0.0030017207229983385, "phrase": "stack_size"}, {"score": 0.002519739850807611, "phrase": "generally_applicable_analyses"}, {"score": 0.0022280223816618736, "phrase": "actual_development_environment"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["resource analysis", " polynomial interpolation", " ranking function", " loop bounds", " heap bounds", " stack bounds"], "paper_abstract": "For real-time and embedded systems, limiting the consumption of time and memory resources is often an important part of the requirements. Being able to predict bounds on the consumption of such resources during the development process of the code can be of great value. In this paper, we focus mainly on memory-related bounds. Recent research results have advanced the state of the art of resource consumption analysis. In this paper, we present a toolset that makes it possible to apply these research results in practice for (real-time) systems enabling JAVA developers to analyse symbolic loop bounds, symbolic bounds on heap size and both symbolic and numeric bounds on stack size. We describe which theoretical additions were needed in order to achieve this. We give an overview of the capabilities of the RESANA (Radboud University Nijmegen, The Netherlands) toolset that is the result of this effort. The toolset can not only perform generally applicable analyses, but it also contains a part of the analysis that is dedicated to the developers' (real-time) virtual machine, such that the results apply directly to the actual development environment that is used in practice. Copyright (C) 2013 John Wiley & Sons, Ltd.", "paper_title": "ResAna: a resource analysis toolset for (real-time) JAVA", "paper_id": "WOS:000342806400007"}