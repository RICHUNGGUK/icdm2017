{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gpu_for"}, {"score": 0.004786821283037044, "phrase": "parallel_on-board"}, {"score": 0.004675930527604869, "phrase": "hyperspectral_analysis_algorithms"}, {"score": 0.004621447740470602, "phrase": "inherent_parallelism"}, {"score": 0.004567596860086148, "phrase": "multiple_levels"}, {"score": 0.00440976345264104, "phrase": "high_performance_systems"}, {"score": 0.004332894955218135, "phrase": "massively_parallel_clusters"}, {"score": 0.0038989120088094185, "phrase": "onboard_data_processing_scenarios"}, {"score": 0.0038085117064624208, "phrase": "low-weight_and_low-power_integrated_components"}, {"score": 0.0036126731589251906, "phrase": "exciting_new_development"}, {"score": 0.003447035529485425, "phrase": "programmable_graphics_hardware"}, {"score": 0.0033473779327638322, "phrase": "ever-growing_demands"}, {"score": 0.00304737045343781, "phrase": "highly_parallel_and_programmable_systems"}, {"score": 0.0029766550209309127, "phrase": "extremely_high_computational_requirements"}, {"score": 0.002790511479398411, "phrase": "gpu-based_implementations"}, {"score": 0.0027417911324611917, "phrase": "morphological_endmember_extraction_algorithm"}, {"score": 0.0026313840069327713, "phrase": "representative_case_study"}, {"score": 0.002570296816631395, "phrase": "hyperspectral_analysis"}, {"score": 0.0025254115243261875, "phrase": "proposed_implementations"}, {"score": 0.002381365139274329, "phrase": "endmember_extraction_accuracy"}, {"score": 0.002353554841514325, "phrase": "parallel_efficiency"}, {"score": 0.0022455164874830777, "phrase": "thoughtful_perspective"}, {"score": 0.002129877319760485, "phrase": "hyperspectral_imaging_algorithms"}, {"score": 0.0021049977753042253, "phrase": "commodity_graphics_hardware"}], "paper_keywords": ["hyperspectral", " image processing", " endmember extraction", " commodity graphics hardware", " GPGPU"], "paper_abstract": "Hyperspectral analysis algorithms exhibit inherent parallelism at multiple levels, and map nicely on high performance systems such as massively parallel clusters and networks of computers. Unfortunately, these systems are generally expensive and difficult to adapt to onboard data processing scenarios, in which low-weight and low-power integrated components are desirable to reduce mission payload. An exciting new development in this field is the emergence of programmable graphics hardware. Driven by the ever-growing demands of game industry, graphics processing units (GPUs) have evolved from expensive, application-specific units into highly parallel and programmable systems which can satisfy extremely high computational requirements at low cost. In this paper, we investigate GPU-based implementations of a morphological endmember extraction algorithm, which is used as a representative case study of joint spatial/spectral techniques for hyperspectral analysis. The proposed implementations are quantitatively compared and assessed in terms of both endmember extraction accuracy and parallel efficiency. Combined, these parts offer a thoughtful perspective on the potential and emerging challenges of implementing hyperspectral imaging algorithms on commodity graphics hardware.", "paper_title": "GPU FOR PARALLEL ON-BOARD HYPERSPECTRAL IMAGE PROCESSING", "paper_id": "WOS:000260340000005"}