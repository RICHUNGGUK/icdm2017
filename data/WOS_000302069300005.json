{"auto_keywords": [{"score": 0.03073815000461229, "phrase": "reachable_state_space"}, {"score": 0.028312317972293805, "phrase": "original_problems"}, {"score": 0.00481495049065317, "phrase": "new_and_constructive_proof"}, {"score": 0.004674952036988355, "phrase": "context-free_language_l"}, {"score": 0.004577440795549049, "phrase": "bounded_context-free_language_l'_subset"}, {"score": 0.004425616928975799, "phrase": "l._bounded"}, {"score": 0.004333292106334861, "phrase": "ginsburg"}, {"score": 0.004296898077206539, "phrase": "spanier"}, {"score": 0.004207230913063179, "phrase": "regular_languages"}, {"score": 0.003850566273995209, "phrase": "particular_bounded_context-free_languages"}, {"score": 0.003818210967854446, "phrase": "nice_structural_and_decidability_properties"}, {"score": 0.0036144035798673967, "phrase": "new_construction"}, {"score": 0.0035389348527719404, "phrase": "context_free_language_l"}, {"score": 0.0034944094552943, "phrase": "subset_l-n"}, {"score": 0.0032250961348210473, "phrase": "linear_language"}, {"score": 0.003117986133774198, "phrase": "parikh-equivalent_bounded_context-free_subset"}, {"score": 0.0029639342245188203, "phrase": "model_checking"}, {"score": 0.0028775998963807324, "phrase": "multithreaded_procedural_programs"}, {"score": 0.0027937732927852646, "phrase": "recursive_counter_programs"}, {"score": 0.002758597251689795, "phrase": "bounded_language"}, {"score": 0.0027009493171069763, "phrase": "decidable_underapproximation"}, {"score": 0.002633355582628613, "phrase": "iteratof_underapproximations"}, {"score": 0.002471661547432869, "phrase": "progress_guarantee"}, {"score": 0.0024405312482831646, "phrase": "word_w"}, {"score": 0.002261794227418188, "phrase": "program_bug"}, {"score": 0.002122866345896679, "phrase": "bounded_languages"}, {"score": 0.0021049977753042253, "phrase": "context-bounded_reachability"}], "paper_keywords": ["Context-free grammar", " Bounded languages", " Parikh-boundedness", " Multithreaded reachability", " Recursive counter machines"], "paper_abstract": "We show a new and constructive proof of the following language-theoretic result: for every context-free language L, there is a bounded context-free language L' subset of L which has the same Parikh (commutative) image as L. Bounded languages, introduced by Ginsburg and Spanier, are subsets of regular languages of the form w(1)*w(2)...w(m)* for some w(1),...,w(m) is an element of Sigma*. In particular bounded context-free languages have nice structural and decidability properties. Our proof proceeds in two parts. First, we give a new construction that shows that each context free language L has a subset L-N that has the same Parikh image as L and that can be represented as a sequence of substitutions on a linear language. Second, we inductively construct a Parikh-equivalent bounded context-free subset of L-N. We show two applications of this result in model checking: to underapproximate the reachable state space of multithreaded procedural programs and to underapproximate the reachable state space of recursive counter programs. The bounded language constructed above provides a decidable underapproximation for the original problems. By iteratof underapproximations such that no two underapproximations of the sequence can be compared. This provides a progress guarantee: every word w is an element of L is in some underapproximation of the sequence, and hence, a program bug is guaranteed to be found. In particular, we show that verification with bounded languages generalizes context-bounded reachability for multithreaded programs.ing the construction, we get a semi-algorithm for the original problems that constructs a sequence", "paper_title": "Bounded underapproximations", "paper_id": "WOS:000302069300005"}