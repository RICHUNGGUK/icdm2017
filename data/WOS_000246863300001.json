{"auto_keywords": [{"score": 0.050078487022614894, "phrase": "low-latency_asynchronous_controllers"}, {"score": 0.025497176504605874, "phrase": "optimist"}, {"score": 0.004634459424542272, "phrase": "automated_synthesis"}, {"score": 0.004397230847865867, "phrase": "direct_mapping_approach"}, {"score": 0.004293434614435972, "phrase": "initial_specification"}, {"score": 0.004172094622123562, "phrase": "signal_transition_graph"}, {"score": 0.004132416594455344, "phrase": "stg"}, {"score": 0.003791763445590174, "phrase": "communication_net"}, {"score": 0.003348513474852869, "phrase": "reference_points"}, {"score": 0.003300813776412652, "phrase": "device_outputs"}, {"score": 0.0031466527290980686, "phrase": "output_events"}, {"score": 0.003072285184441679, "phrase": "input_events"}, {"score": 0.002928765962664163, "phrase": "two-level_architecture"}, {"score": 0.002887028262617443, "phrase": "efficient_interface"}, {"score": 0.002778604641920052, "phrase": "subsequent_mapping"}, {"score": 0.002739001004969201, "phrase": "circuit_netlist"}, {"score": 0.0026742419973883134, "phrase": "optimization_heuristics"}, {"score": 0.0024185182010749273, "phrase": "software_tool"}, {"score": 0.0021560018573288666, "phrase": "state-space_exploration"}, {"score": 0.0021049977753042253, "phrase": "conventional_eda_design_flow"}], "paper_keywords": ["asynchronous circuits", " control synthesis", " direct mapping", " low-latency controllers", " signal transition graphs", " VLSI"], "paper_abstract": "A method for an automated synthesis of low-latency asynchronous controllers is presented. It is based on a direct mapping approach and starts from an initial specification in the form of a signal transition graph (STG). This STG is split into a,device and an environment, which synchronize via a communication net that models wires. The device is represented as a tracker and a bouncer. The tracker follows the state of the environment and provides reference points to the device outputs. The bouncer communicates with the environment and generates output events in response to the input events according to the state of the tracker. This two-level architecture provides an efficient interface to the environment and is convenient for subsequent mapping into a circuit netlist. A set of optimization heuristics is developed to reduce the latency and size of the circuit. As a result of this paper, a software tool called OptiMist has been developed. Its low algorithmic complexity allows large specifications to be synthesized, which is not possible for the tools based on state-space exploration. OptiMist successfully interfaces conventional EDA design flow for simulation, timing analysis, and place-and-route.", "paper_title": "Direct mapping of low-latency asynchronous controllers from STGs", "paper_id": "WOS:000246863300001"}