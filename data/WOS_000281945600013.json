{"auto_keywords": [{"score": 0.03982946883901786, "phrase": "hepml_block"}, {"score": 0.010612390135005497, "phrase": "hepml"}, {"score": 0.006685007777053538, "phrase": "hepml_tags"}, {"score": 0.004627244470096107, "phrase": "simulated_data"}, {"score": 0.004586531354697466, "phrase": "high_energy_physics"}, {"score": 0.0044272138900038095, "phrase": "hepml_format"}, {"score": 0.004292337783332826, "phrase": "complete_description"}, {"score": 0.004254558771304349, "phrase": "parton_level_events"}, {"score": 0.004198510172614725, "phrase": "unified_and_flexible_form"}, {"score": 0.0039815737219022675, "phrase": "simulated_events"}, {"score": 0.003709595902020469, "phrase": "event_files"}, {"score": 0.003660700128133065, "phrase": "lhef_format"}, {"score": 0.0034256972236642812, "phrase": "schemas"}, {"score": 0.0033955105098235345, "phrase": "necessary_information"}, {"score": 0.003163439005885435, "phrase": "library_libhepml"}, {"score": 0.002934166052954463, "phrase": "computer_memory"}, {"score": 0.0028572830463657953, "phrase": "api"}, {"score": 0.002832081745025006, "phrase": "external_software"}, {"score": 0.0027700855441353165, "phrase": "matrix_element_monte_carlo_event_generators"}, {"score": 0.002615156460073562, "phrase": "lhef_file"}, {"score": 0.0024798279465139688, "phrase": "hadronization_event_generators"}, {"score": 0.002436289099444074, "phrase": "hepml_header"}, {"score": 0.0021049977753042253, "phrase": "hep_community"}], "paper_keywords": ["HepML", " XML", " Markup language", " Monte Carlo simulation", " Monte Carlo event generators"], "paper_abstract": "In this paper we describe a HepML format and a corresponding C++ library developed for keeping complete description of parton level events in a unified and flexible form. HepML tags contain enough information to understand what kind of physics the simulated events describe and how the events have been prepared. A HepML block can be included into event files in the LHEF format. The structure of the HepML block is described by means of several XML Schemas. The Schemas define necessary information for the HepML block and how this information should be located within the block. The library libhepml is a C++ library intended for parsing and serialization of HepML tags, and representing the HepML block in computer memory. The library is an API for external software. For example, Matrix Element Monte Carlo event generators can use the library for preparing and writing a header of an LHEF file in the form of HepML tags. In turn, Showering and Hadronization event generators can parse the HepML header and get the information in the form of C++ classes. libhepml can be used in C++, C, and Fortran programs. All necessary parts of HepML have been prepared and we present the project to the HEP community.", "paper_title": "HepML, an XML-based format for describing simulated data in high energy physics", "paper_id": "WOS:000281945600013"}