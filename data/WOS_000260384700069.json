{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mesh_analysis"}, {"score": 0.0046176782475198085, "phrase": "graph_cuts"}, {"score": 0.004030449969901066, "phrase": "triangular_mesh"}, {"score": 0.003303412571939192, "phrase": "core_algorithm"}, {"score": 0.0030062165552187086, "phrase": "layer-based_visualization"}, {"score": 0.0029131986574478046, "phrase": "distinguishing_feature"}, {"score": 0.002412371116984224, "phrase": "input_model"}, {"score": 0.002241679436497569, "phrase": "visibility_graph"}, {"score": 0.0021049977753042253, "phrase": "graph_cut"}], "paper_keywords": ["Interior/Exterior Classification", " Normal Orientation", " Layer Classification", " Inside Removal", " Graph Cut"], "paper_abstract": "In this paper we present an algorithm that operates on a triangular mesh and classifies each face of a triangle as either inside or outside. We present three example applications of this core algorithm: normal orientation, inside removal, and layer-based visualization. The distinguishing feature of our algorithm is its robustness even if a difficult input model that includes holes, coplanar triangles, intersecting triangles, and lost connectivity is given. Our algorithm works with the original triangles of the input model and uses sampling to construct a visibility graph that is then segmented using graph cut.", "paper_title": "Visibility-driven Mesh Analysis and Visualization through Graph Cuts", "paper_id": "WOS:000260384700069"}