{"auto_keywords": [{"score": 0.04583618206954147, "phrase": "fpga"}, {"score": 0.015114591113584737, "phrase": "test_architecture"}, {"score": 0.00481495049065317, "phrase": "look-up_table_based_fpgas"}, {"score": 0.004566954456805558, "phrase": "minimum_number"}, {"score": 0.004506968388996092, "phrase": "test_configurations"}, {"score": 0.003845500924733243, "phrase": "test_pattern_generator"}, {"score": 0.003623199939953831, "phrase": "test_data"}, {"score": 0.002780315523179125, "phrase": "fpga."}, {"score": 0.0027437235598539904, "phrase": "external_ora"}, {"score": 0.0022492129111567824, "phrase": "presented_scheme"}, {"score": 0.0022049428043454966, "phrase": "least_number"}], "paper_keywords": ["FPGA testing", " BIST", " LUT testing", " memory testing", " TPG with LE"], "paper_abstract": "This paper describes a test architecture for minimum number of test configurations in test of FPGA (Field Programmable Gate Array) LUTs (Look Up Tables). The test architecture includes a TPC (Test Pattern Generator) that is tested while it is generating test data for LEs (Logic Elements) that form the CUT (Circuit Under Test). This scheme eliminates the need for switching LEs between CUT, TPG and ORA (Output Response Analyzer) and having to perform many more reconfigurations of the FPGA. An external ORA locates faults of the FPGA under test. In addition to the LUTs, a scheme is presented for testing other parts of LEs. Compared with other methods, the presented scheme uses the least number of reconfigurations of an FPGA for its LUT testing.", "paper_title": "A test approach for look-up table based FPGAs", "paper_id": "WOS:000235342400016"}