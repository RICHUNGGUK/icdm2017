{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "n_vertices"}, {"score": 0.004739056045644449, "phrase": "k_terminals"}, {"score": 0.004664352260912174, "phrase": "positive_integer_weights"}, {"score": 0.004342430078306461, "phrase": "minimum_steiner_tree"}, {"score": 0.0031845067058084583, "phrase": "inclusion-exclusion_technique"}, {"score": 0.002988101395789399, "phrase": "-time_polynomial_space_algorithms"}, {"score": 0.002468450551616404, "phrase": "related_techniques"}, {"score": 0.002372103459168231, "phrase": "new_polynomial_space_algorithms"}, {"score": 0.0022977342663599042, "phrase": "cover_polynomial"}, {"score": 0.002208035721125305, "phrase": "convex_tree_coloring"}, {"score": 0.0021049977753042253, "phrase": "perfect_matchings"}], "paper_keywords": ["Inclusion-Exclusion", " Fixed parameter tractability", " Exact algorithms", " Polynomial space", " Steiner tree"], "paper_abstract": "Given a graph with n vertices, k terminals and positive integer weights not larger than c, we compute a minimum Steiner Tree in time and space, where the notation omits terms bounded by a polynomial in the input-size. We obtain the result by defining a generalization of walks, called branching walks, and combining it with the Inclusion-Exclusion technique. Using this combination we also give -time polynomial space algorithms for Degree Constrained Spanning Tree, Maximum Internal Spanning Tree and #Spanning Forest with a given number of components. Furthermore, using related techniques, we also present new polynomial space algorithms for computing the Cover Polynomial of a graph, Convex Tree Coloring and counting the number of perfect matchings of a graph.", "paper_title": "Fast Polynomial-Space Algorithms Using Inclusion-Exclusion", "paper_id": "WOS:000314692200009"}