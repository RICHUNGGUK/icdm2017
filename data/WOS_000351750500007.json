{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "encrypted_vector_databases"}, {"score": 0.045969488081988634, "phrase": "whitening_transformation"}, {"score": 0.03793044352294926, "phrase": "vector_space"}, {"score": 0.004652016085325825, "phrase": "filtering_methodology"}, {"score": 0.004556901872357751, "phrase": "locality-sensitive_hashing"}, {"score": 0.0044945977382291015, "phrase": "lsh"}, {"score": 0.004312622975366676, "phrase": "candidate_tuples"}, {"score": 0.003997891221012094, "phrase": "query_processing"}, {"score": 0.003916098498242888, "phrase": "lsh_hashing_methodology"}, {"score": 0.003555902292752528, "phrase": "randomly_chosen_vectors"}, {"score": 0.00327356326590461, "phrase": "querying_vectors"}, {"score": 0.0021049977753042253, "phrase": "server's_query_processing_cost"}], "paper_keywords": ["Query processing", " Encrypted databases", " Security and privacy"], "paper_abstract": "We introduce a filtering methodology based on locality-sensitive hashing (LSH) and whitening transformation to reduce candidate tuples between which encrypted vector databases (EVDBs) must compute similarity for query processing. The LSH hashing methodology is efficient for estimating similarities between two vectors. It hashes a vector space using randomly chosen vectors. We can filter vectors that are less similar to the querying vectors by recording which hashed space each vector belongs to. However, if vectors in EVDBs are found locally, then most vectors are in the same hashed space, so the filter will not work. Because we can treat those cases using whitening transformation to distribute the vectors broadly, our proposed filtering methodology will work effectively on any vector space. We also show that our filter reduces the server's query processing cost.", "paper_title": "A Locality Sensitive Hashing Filter for Encrypted Vector Databases", "paper_id": "WOS:000351750500007"}