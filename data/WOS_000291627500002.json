{"auto_keywords": [{"score": 0.04877846889389301, "phrase": "ebs"}, {"score": 0.01571965011934927, "phrase": "event-based_systems"}, {"score": 0.004611013257082199, "phrase": "increasing_attention"}, {"score": 0.004081385289516914, "phrase": "large_range"}, {"score": 0.003832198214757852, "phrase": "existing_approaches"}, {"score": 0.003742711659195878, "phrase": "implemented_functionality"}, {"score": 0.0037133478610481994, "phrase": "underlying_technical_concepts"}, {"score": 0.00361237042013781, "phrase": "ebs_solutions"}, {"score": 0.0035699363258657212, "phrase": "challenging_task"}, {"score": 0.003459191419478298, "phrase": "unified_view"}, {"score": 0.0031970826323202296, "phrase": "architect"}, {"score": 0.0031100973266506163, "phrase": "general_ebs"}, {"score": 0.0029899137403982027, "phrase": "proposed_framework"}, {"score": 0.0028293966058473476, "phrase": "existing_technologies"}, {"score": 0.0027093285574752457, "phrase": "software_engineering_point"}, {"score": 0.0026148807877309417, "phrase": "layered_framework"}, {"score": 0.0025137856138000014, "phrase": "system_architects"}, {"score": 0.0024842242921857705, "phrase": "complex_systems"}, {"score": 0.002464709648714996, "phrase": "specialized_components"}, {"score": 0.0022157533515146503, "phrase": "ebs_components"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Event-based systems", " Complex event processing", " Architecture", " Modeling"], "paper_abstract": "In the past decade, event-based systems (EBS) have received increasing attention from various communities. Central to these systems is the notion of event, which is often generally considered as \"a happening of interest\". An EBS encompasses a large range of functionalities on various technological levels (e.g., language, execution, or communication). Existing approaches vary in the scope of implemented functionality and underlying technical concepts. For this reason, comparing EBS solutions is a challenging task. Furthermore, the lack of a unified view on EBS poses challenges to system architects in choosing and combining technologies for building event-based systems. This paper presents ARCHITECT, a framework that decomposes a general EBS into layers of abstraction. The goal of the proposed framework is twofold: (1) provide concepts that aid the understanding of existing technologies and solutions for EBS as well as their relations from a software engineering point of view; (2) present a layered framework, which enables classifying technologies for EBS and supports system architects in building complex systems from specialized components. We believe that the concepts presented in this paper are likely to improve the way both researchers and practitioners understand, use, and develop EBS components as well as complete systems. (C) 2011 Published by Elsevier B.V.", "paper_title": "ARCHITECT: A layered framework for classifying technologies of event-based systems", "paper_id": "WOS:000291627500002"}