{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "context"}, {"score": 0.0046659637258752535, "phrase": "lightweight_formal_approaches"}, {"score": 0.004541918674719973, "phrase": "new_style"}, {"score": 0.00450130420152996, "phrase": "product_line_engineering_methods"}, {"score": 0.00438161736774803, "phrase": "embedded_systems"}, {"score": 0.0041891398413899435, "phrase": "external_physical_environments"}, {"score": 0.004133055661437163, "phrase": "current_product_line_development_projects"}, {"score": 0.004096082254543022, "phrase": "feature_analysis"}, {"score": 0.003951453722517865, "phrase": "system_configurations"}, {"score": 0.0038985392250620483, "phrase": "hardware_and_software_components"}, {"score": 0.0035473867669654174, "phrase": "unexpected_and_unfavorable_behavior"}, {"score": 0.0033459905006404207, "phrase": "possible_conflicting_combinations"}, {"score": 0.003058179790439378, "phrase": "context-dependent_product_line"}, {"score": 0.0025202582748972122, "phrase": "reusable_core_assets"}, {"score": 0.0024641814990854463, "phrase": "selected_system_components"}, {"score": 0.002366361492754389, "phrase": "specification_level"}, {"score": 0.002272415777234064, "phrase": "development_process"}, {"score": 0.0022019274077124795, "phrase": "product_line_assets"}, {"score": 0.00216263228969761, "phrase": "context_assets"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Product line engineering", " Context analysis", " Formal methods"], "paper_abstract": "This paper proposes a new style of product line engineering methods. It focuses on constructing embedded systems that take into account the contexts such as the external physical environments. In current product line development projects, Feature Analysis is mainly conducted from the viewpoint of system configurations: how hardware and software components are configured to constitute a system. In most cases, contexts are not considered explicitly. As a result, unexpected and unfavorable behavior might emerge in a system if a developer does not recognize any possible conflicting combinations between the system and contexts. To deal with this problem, this paper provides the notion of a context-dependent product line, which is composed of the system and context lines. The former is obtained by analyzing a family of systems. The latter is obtained by analyzing features of contexts associated to the systems. The system and context lines contain reusable core assets. The configuration of selected system components and contexts can be formally checked at the specification level. In this paper, we show a development process that includes the creation of both product line assets as well as context assets. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Context-dependent product line engineering with lightweight formal approaches", "paper_id": "WOS:000325664500004"}