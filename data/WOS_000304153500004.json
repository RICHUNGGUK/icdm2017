{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "inconsistent_databases"}, {"score": 0.010119816616153382, "phrase": "functional_dependencies"}, {"score": 0.008684857332514229, "phrase": "query_answer"}, {"score": 0.004405919996432158, "phrase": "reliable_information"}, {"score": 0.004243460284890507, "phrase": "minimal_set"}, {"score": 0.004214569581360156, "phrase": "tuple_insertions"}, {"score": 0.0040869663676860535, "phrase": "consistent_state"}, {"score": 0.0038431888954930083, "phrase": "repaired_database"}, {"score": 0.00365114510725007, "phrase": "original_ones"}, {"score": 0.0035526625882388936, "phrase": "tuple_deletions"}, {"score": 0.003375087185182269, "phrase": "inconsistent_database"}, {"score": 0.0032616462517547477, "phrase": "integrity_violation"}, {"score": 0.0032283609741926476, "phrase": "useful_information"}, {"score": 0.002994396880146532, "phrase": "tuple_updates"}, {"score": 0.0028838335724864547, "phrase": "source_database"}, {"score": 0.002805989498127897, "phrase": "consistent_query_answer"}, {"score": 0.002702363975375762, "phrase": "non-consistent_answers"}, {"score": 0.0026114748685439116, "phrase": "non-empty_proper_subset"}, {"score": 0.002455489835065937, "phrase": "query_answers"}, {"score": 0.002389180450772203, "phrase": "new_semantics"}, {"score": 0.0023728841359713106, "phrase": "query_answering"}, {"score": 0.0022007808283071133, "phrase": "probabilistic_query_answers"}, {"score": 0.0021194582289403925, "phrase": "probabilistic_answers"}, {"score": 0.0021049977753042253, "phrase": "arbitrary_relational_algebra_queries"}], "paper_keywords": ["Inconsistent databases", " Repair", " Query answering", " Probabilistic query answers"], "paper_abstract": "This paper presents a framework for querying inconsistent databases in the presence of functional dependencies. Most of the works dealing with the problem of extracting reliable information from inconsistent databases are based on the notion of , a minimal set of tuple insertions and deletions which leads the database to a consistent state (called ), and the notion of , a query answer that can be obtained from every repaired database. In this work, both the notion of repair and query answer differ from the original ones. In the presence of functional dependencies, tuple deletions are the only operations that are performed in order to restore the consistency of an inconsistent database. However, deleting a tuple to remove an integrity violation potentially eliminates useful information in that tuple. In order to cope with this problem, we adopt a notion of repair, based on tuple updates, which allows us to better preserve information in the source database. A drawback of the notion of consistent query answer is that it does not allow us to discriminate among non-consistent answers, namely answers which can be obtained from a non-empty proper subset of the repaired databases. To obtain more informative query answers, we propose the notion of , that is query answers are tuples associated with probabilities. This new semantics of query answering over inconsistent databases allows us to give a measure of uncertainty to query answers. We show that the problem of computing probabilistic query answers is (#) -complete. We also propose a technique for computing probabilistic answers to arbitrary relational algebra queries.", "paper_title": "Probabilistic query answering over inconsistent databases", "paper_id": "WOS:000304153500004"}