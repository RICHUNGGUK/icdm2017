{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "householder-like_transformations"}, {"score": 0.0046269981365987915, "phrase": "high-performance_algorithms"}, {"score": 0.004272724011826495, "phrase": "cholesky_factor"}, {"score": 0.004188459638572375, "phrase": "qr_factorization"}, {"score": 0.0037913351650718323, "phrase": "householder"}, {"score": 0.003264872488939969, "phrase": "high-performance_matrix-matrix_operations"}, {"score": 0.0024941578231560055, "phrase": "multithreaded_architectures"}, {"score": 0.002444883254621769, "phrase": "multicore_processors"}, {"score": 0.0021474369836979048, "phrase": "blocked_qr_factorization"}, {"score": 0.0021049977753042253, "phrase": "householder_transformations"}], "paper_keywords": ["Algorithms", " Performance", " Linear algebra", " libraries", " high performance"], "paper_abstract": "We present high-performance algorithms for up-and-downdating a Cholesky factor or QR factorization. The method uses Householder-like transformations, sometimes called hyperbolic Householder transformations, that are accumulated so that most computation can be cast in terms of high-performance matrix-matrix operations. The resulting algorithms can then be used as building blocks for an algorithm-by-blocks that allows computation to be conveniently scheduled to multithreaded architectures like multicore processors. Performance is shown to be similar to that achieved by a blocked QR factorization via Householder transformations.", "paper_title": "High-Performance Up-and-Downdating via Householder-Like Transformations", "paper_id": "WOS:000297683400004"}