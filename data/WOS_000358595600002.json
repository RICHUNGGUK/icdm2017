{"auto_keywords": [{"score": 0.049728064211752084, "phrase": "software_defined_networks"}, {"score": 0.0456161394946163, "phrase": "small_packets"}, {"score": 0.03614022543627639, "phrase": "qos"}, {"score": 0.02489365250326993, "phrase": "additional_delay"}, {"score": 0.00481495049065317, "phrase": "small-packet_flows"}, {"score": 0.0045612889352793584, "phrase": "bandwidth_usage"}, {"score": 0.004320932773749168, "phrase": "high_overhead"}, {"score": 0.004213123914295882, "phrase": "emerging_services"}, {"score": 0.0041079938275505575, "phrase": "sdn_controller"}, {"score": 0.004019964326034457, "phrase": "header_fields"}, {"score": 0.003794303324630465, "phrase": "sdn."}, {"score": 0.0035683401689358993, "phrase": "overall_number"}, {"score": 0.003343691804204423, "phrase": "sdn._four_kinds"}, {"score": 0.0033196177202591843, "phrase": "small-packet_traffic_flows"}, {"score": 0.003248446418921723, "phrase": "udp"}, {"score": 0.0032251412532450295, "phrase": "tcp"}, {"score": 0.0029893477597041493, "phrase": "significant_bandwidth_savings"}, {"score": 0.002811191663575046, "phrase": "considered_kinds"}, {"score": 0.002760836859397696, "phrase": "optimization_method"}, {"score": 0.0027113815712365924, "phrase": "different_public_internet_traffic_traces"}, {"score": 0.002549749054599413, "phrase": "bandwidth_consumption"}, {"score": 0.002158979137177815, "phrase": "low-throughput_scenarios"}, {"score": 0.0021049977753042253, "phrase": "bandwidth_saving"}], "paper_keywords": ["Software Defined Networks", " multiplexing", " traffic optimization", " compression", " small-packet services"], "paper_abstract": "This paper proposes a method for optimizing bandwidth usage in Software Defined Networks (SDNs) based on OpenFlow. Flows of small packets presenting a high overhead, as the ones generated by emerging services, can be identified by the SDN controller, in order to remove header fields that are common to any packet in the flow, only during their way through the SDN. At the same time, several packets can be multiplexed together in the same frame, thus reducing the overall number of frames. The method can be useful for providing QoS while the packets are traversing the SDN. Four kinds of small-packet traffic flows are considered (VoIP, UDP and TCP-based online games, and ACKs from TCP flows). Both IPv4 and IPv6 are studied, and significant bandwidth savings (up to 68 % for IPv4 and 78 % for IPv6) can be obtained for the considered kinds of traffic. The optimization method is also applied to different public Internet traffic traces, and significant reductions in terms of packets per second are achieved. Results show that bandwidth consumption is also reduced, especially in those traces where the percentage of small packets is high. Regarding the effect on QoS, the additional delay can be kept very low (below 1 millisecond) when the throughput is high, but it may become significant for low-throughput scenarios. Thus, a trade-off between bandwidth saving and additional delay appears in those cases.", "paper_title": "Small-Packet Flows in Software Defined Networks: Traffic Profile Optimization", "paper_id": "WOS:000358595600002"}