{"auto_keywords": [{"score": 0.04675404263653011, "phrase": "grid"}, {"score": 0.01557710530593337, "phrase": "scientific_workflow_applications"}, {"score": 0.015234945593778491, "phrase": "evolutionary_programming"}, {"score": 0.011873992460318419, "phrase": "optimized_method"}, {"score": 0.00481495049065317, "phrase": "execution_time_predictions"}, {"score": 0.004421156723819163, "phrase": "advance_prediction"}, {"score": 0.00438161736774803, "phrase": "workflow_execution_time"}, {"score": 0.004342430078306461, "phrase": "optimized_execution"}, {"score": 0.0041891398413899435, "phrase": "execution_times"}, {"score": 0.004023120753104693, "phrase": "different_structures"}, {"score": 0.003951453722517865, "phrase": "possible_parallel_execution"}, {"score": 0.003916098498242888, "phrase": "workflow_tasks"}, {"score": 0.0038810583785936505, "phrase": "multiple_resources"}, {"score": 0.0038290829316346654, "phrase": "dynamic_and_heterogeneous_nature"}, {"score": 0.003531474887552889, "phrase": "previous_work"}, {"score": 0.003499864176875713, "phrase": "nadeem_et_al"}, {"score": 0.0033459905006404207, "phrase": "execution_time_prediction"}, {"score": 0.0033160345607565565, "phrase": "workflow_applications"}, {"score": 0.003071965703296204, "phrase": "different_stages"}, {"score": 0.0028715299874549245, "phrase": "workflow_attributes"}, {"score": 0.0027328817607818207, "phrase": "suitable_templates"}, {"score": 0.002313701040445819, "phrase": "proposed_approach"}, {"score": 0.002262209824105154, "phrase": "supervised_exhaustive_search"}, {"score": 0.0022419349154472806, "phrase": "nadeem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grid", " Workflow applications", " Execution time predictions"], "paper_abstract": "Planning for execution of scientific workflow applications in the Grid requires in advance prediction of workflow execution time for optimized execution of these applications. However, predicting execution times of such applications is very complex mainly due to different structures of workflows, possible parallel execution of workflow tasks on multiple resources and the dynamic and heterogeneous nature of the Grid. In this paper, we describe an optimized method (in extension to a previous work by Nadeem et al. (2009) [4]) for execution time prediction of workflow applications in the Grid. We characterize workflows in terms of attributes describing their structures and performance during different stages of their execution. Overall, performance of the workflows is modeled through templates of workflow attributes. An optimized method exploiting evolutionary programming is employed to search for suitable templates. Three different induction models are employed to generate predictions and later compared for their accuracy. The results from our experiments for three real-world workflow applications on a real Grid are presented to show the effectiveness of our approach. We also compare the proposed approach with our previous method based on supervised exhaustive search by Nadeem and Fahringer (2009) [4]. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Optimizing execution time predictions of scientific workflow applications in the Grid through evolutionary programming", "paper_id": "WOS:000315546800002"}