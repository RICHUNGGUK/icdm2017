{"auto_keywords": [{"score": 0.03636633306860624, "phrase": "normal_level"}, {"score": 0.0330108166223237, "phrase": "semi-markov_model"}, {"score": 0.02588003492522061, "phrase": "non-parametric_method"}, {"score": 0.00481495049065317, "phrase": "optimal_software_rejuvenation"}, {"score": 0.004631637679516574, "phrase": "resource_exhaustion"}, {"score": 0.004504969093304219, "phrase": "progressive_performance_degradation"}, {"score": 0.004191540451296395, "phrase": "on-line_bookstore_application"}, {"score": 0.004099542199088835, "phrase": "standard_configuration"}, {"score": 0.004054299982508618, "phrase": "tpc-w_benchmark"}, {"score": 0.00396530196547293, "phrase": "application_failures"}, {"score": 0.0038998328617557013, "phrase": "memory_leaks"}, {"score": 0.003814212645832246, "phrase": "accelerated_life_testing"}, {"score": 0.0033384259516301223, "phrase": "weibull_time"}, {"score": 0.0030208364972341096, "phrase": "software_rejuvenation_trigger_interval"}, {"score": 0.002921815042028607, "phrase": "optimal_rejuvenation_schedule_interval"}, {"score": 0.0028895324165046166, "phrase": "fixed_point_iteration"}, {"score": 0.0028260302580927856, "phrase": "alternative_non-parametric_estimation_algorithm"}, {"score": 0.002718231974492536, "phrase": "simulation_model"}, {"score": 0.0026881926384093088, "phrase": "importance_sampling"}, {"score": 0.0025713100093065645, "phrase": "alt_experimental_results"}, {"score": 0.0025287979714720423, "phrase": "semi-mackay_model"}, {"score": 0.0023656467839555458, "phrase": "optimized_trigger_intervals"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Accelerated life tests", " Memory leaks", " Non-parametric estimation", " Optimal software rejuvenation", " Semi-Markov process", " Importance sampling"], "paper_abstract": "Software aging is caused by resource exhaustion and can lead to progressive performance degradation or result in a crash. We develop experiments that simulate an on-line bookstore application, using the standard configuration of TPC-W benchmark. We study application failures due to memory leaks, using the accelerated life testing (ALT). ALT significantly reduces the time needed to estimate the time to failure at normal level. We then select the Weibull time to failure distribution at normal level, to be used in a semi-Markov model so as to optimize the software rejuvenation trigger interval. Then we derive the optimal rejuvenation schedule interval by fixed point iteration and by an alternative non-parametric estimation algorithm. Finally, we develop a simulation model using importance sampling (IS) to cross validate the ALT experimental results and the semi-Mackay model, and also we apply the non-parametric method to cross validate the optimized trigger intervals by comparing the availabilities obtained from the semi-Markov model and those from IS simulation using the non-parametric method. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A comprehensive approach to optimal software rejuvenation", "paper_id": "WOS:000327917900001"}