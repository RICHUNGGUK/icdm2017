{"auto_keywords": [{"score": 0.04907561130245922, "phrase": "event-driven_scheduler"}, {"score": 0.00812477421933462, "phrase": "embedded_system"}, {"score": 0.004361644989356558, "phrase": "context-switching_overhead"}, {"score": 0.004300453431933622, "phrase": "redundant_data_copying"}, {"score": 0.0030847461428168614, "phrase": "main_components"}, {"score": 0.0030199761431186434, "phrase": "real-time_operating_system"}, {"score": 0.002833689453299307, "phrase": "network_communication"}, {"score": 0.0024597305738431226, "phrase": "tcp_transmission"}, {"score": 0.0024251568696803177, "phrase": "tcp_retransmission"}, {"score": 0.002259426425685765, "phrase": "embedded_networking_device"}, {"score": 0.0021049977753042253, "phrase": "high-performance_networking"}], "paper_keywords": ["TCP/IP", " TCP/IP offload engine", " embedded system"], "paper_abstract": "The traditional TCP/IP protocol stack is associated with shortcomings related to the context-switching overhead and redundant data copying. The software-based TOE (TCP/IP Offload Engine), also known as lightweight TCP/IP, was developed to optimize the TCP/IP protocol stack to run on an embedded system. In this paper, we propose the design of a lightweight TCP/IP protocol stack that runs on an event-driven scheduler. An event-driven scheduler is one of the main components of a real-time operating system that provides essential functionalities for an embedded system in network communication. We discuss the problems involved in designing a lightweight TCP/IP with an event-driven scheduler, especially for the issues of TCP transmission and TCP retransmission. We implemented and evaluated the proposed TCP/IP stack on an embedded networking device and verified that the proposed TCP/IP stack is well suited for high-performance networking in embedded systems.", "paper_title": "Design of a Lightweight TCP/IP Protocol Stack with an Event-Driven Scheduler", "paper_id": "WOS:000311584100005"}