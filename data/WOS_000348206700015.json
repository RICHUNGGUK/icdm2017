{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "update-intensive_workloads"}, {"score": 0.04883313245975001, "phrase": "multi-chip_parallelism"}, {"score": 0.04721825881327069, "phrase": "flash_disks"}, {"score": 0.04195722874922, "phrase": "flash_disk"}, {"score": 0.03392723304916882, "phrase": "internal_activities"}, {"score": 0.004648609688625397, "phrase": "solid_state_drives"}, {"score": 0.004429191773525288, "phrase": "ideal_storage"}, {"score": 0.004294962474996283, "phrase": "low_random_access_latency"}, {"score": 0.004238682850598745, "phrase": "intra-disk_multi-chip_parallelism"}, {"score": 0.004128317208406523, "phrase": "inherent_nature"}, {"score": 0.004092168350316413, "phrase": "flash_memories"}, {"score": 0.003916098498242888, "phrase": "costly_internal_activities"}, {"score": 0.003747575730190958, "phrase": "database_transaction_processing"}, {"score": 0.003698442219929622, "phrase": "motivating_update-intensive_workload"}, {"score": 0.003586278948128509, "phrase": "flash_disk_simulator"}, {"score": 0.0034018288705284427, "phrase": "significant_overhead"}, {"score": 0.0031565959573536194, "phrase": "dynamic_page_replications"}, {"score": 0.002967931416941965, "phrase": "frequently_blocked_data_pages"}, {"score": 0.0029161225023394363, "phrase": "data_availability"}, {"score": 0.002670296619878048, "phrase": "idle_periods"}, {"score": 0.0026352496813713292, "phrase": "flash_chips"}, {"score": 0.0024451427672857458, "phrase": "prediction_model"}, {"score": 0.0021709339252206825, "phrase": "real_flash_disks"}], "paper_keywords": ["Multi-chip parallelism", " flash disks", " solid state drives", " update-intensive workloads", " transaction processing", " replication"], "paper_abstract": "Solid state drives (SSDs), or flash disks have been considered as ideal storage for various data-intensive workloads, because of the low random access latency and the intra-disk multi-chip parallelism. However, due to inherent nature of flash memories, update-intensive workloads cause the flash disk fragmented, and trigger costly internal activities such as cleaning and wear leveling. We use database transaction processing as a motivating update-intensive workload. Our studies based on a flash disk simulator as well as flash disks show that, these activities result in significant overhead to the I/O response time and system throughput. To resolve the impact of internal activities, we propose dynamic page replications to exploit the multi-chip parallelism on the flash disk. Specifically, we replicate the frequently blocked data pages to improve the data availability even when internal activities block the request. To reduce the overhead of replications, we take advantage of the idle periods in the flash chips for the I/O operations by writes to replicas or reads from replicas, and further develop a prediction model for the decisions on those I/O operations to minimize the interference to normal I/O operations. We evaluate our techniques with three public transaction benchmarks in the simulator as well as on the real flash disks. Our results demonstrate the effectiveness of our replication management on improving I/O response time and system throughput.", "paper_title": "Improving Update-Intensive Workloads on Flash Disks through Exploiting Multi-Chip Parallelism", "paper_id": "WOS:000348206700015"}