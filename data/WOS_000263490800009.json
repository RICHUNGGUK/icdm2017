{"auto_keywords": [{"score": 0.04968705263604004, "phrase": "query"}, {"score": 0.00481495049065317, "phrase": "implicit_provenance"}, {"score": 0.004584509180248334, "phrase": "sql"}, {"score": 0.004380540407926982, "phrase": "scientific_and_curated_databases"}, {"score": 0.0038720442355114045, "phrase": "paramount_importance"}, {"score": 0.0029876282026237207, "phrase": "rearranged_output"}, {"score": 0.002878930338561009, "phrase": "default_provenance_semantics"}, {"score": 0.002575934917174136, "phrase": "explicit_provenance"}, {"score": 0.0024416087858984644, "phrase": "implicit_provenance_operations"}, {"score": 0.0024116163689723354, "phrase": "query_and_update_languages"}, {"score": 0.0023819914954155905, "phrase": "natural_semantic_subclasses"}, {"score": 0.0023527296826339225, "phrase": "explicit_provenance_queries"}, {"score": 0.002220846338732873, "phrase": "expressive_power"}, {"score": 0.0021049977753042253, "phrase": "annotation_propagation_schemes"}], "paper_keywords": ["Languages", " Reliability", " Theory", " Provenance", " nested relational calculus", " nested update language", " conservativity"], "paper_abstract": "Information describing the origin of data, generally referred to as provenance, is important in scientific and curated databases where it is the basis for the trust one puts in their contents. Since such databases are constructed using operations of both query and update languages, it is of paramount importance to describe the effect of these languages on provenance. In this article we study provenance for query and update languages that are closely related to SQL, and compare two ways in which they can manipulate provenance so that elements of the input are rearranged to elements of the output: implicit provenance, where a query or update only provides the rearranged output, and provenance is provided implicitly by a default provenance semantics; and explicit provenance, where a query or update provides both the output and the description of the provenance of each component of the output. Although explicit provenance is in general more expressive, we show that the classes of implicit provenance operations expressible by query and update languages correspond to natural semantic subclasses of the explicit provenance queries. One of the consequences of this study is that provenance separates the expressive power of query and update languages. The model is also relevant to annotation propagation schemes in which annotations on the input to a query or update have to be transferred to the output or vice versa.", "paper_title": "On the Expressiveness of Implicit Provenance in Query and Update Languages", "paper_id": "WOS:000263490800009"}