{"auto_keywords": [{"score": 0.03612945938560607, "phrase": "exact_technique"}, {"score": 0.00481495049065317, "phrase": "trade-off_exploration"}, {"score": 0.004753670676591174, "phrase": "cyclo-static_and_synchronous_dataflow_graphs"}, {"score": 0.004693267474329189, "phrase": "multimedia"}, {"score": 0.004574449773348889, "phrase": "throughput_constraints"}, {"score": 0.004263168852219819, "phrase": "resource_usage"}, {"score": 0.004208881856146758, "phrase": "energy_consumption"}, {"score": 0.0041023644174418205, "phrase": "intensive_kernels"}, {"score": 0.0038973170902076707, "phrase": "cyclo-static"}, {"score": 0.0038476708316022823, "phrase": "synchronous_dataflow_graphs"}, {"score": 0.003631945391344252, "phrase": "storage_space"}, {"score": 0.00334144503360907, "phrase": "pareto_space"}, {"score": 0.003256808693019209, "phrase": "storage_trade-offs"}, {"score": 0.0030741085942960814, "phrase": "minimal_buffer_space"}, {"score": 0.0026523079380037706, "phrase": "realistic_dsp"}, {"score": 0.0026184796288543878, "phrase": "multimedia_applications"}, {"score": 0.0024399717841513354, "phrase": "fast_approximation_technique"}, {"score": 0.0023029886389559122, "phrase": "tight_bound"}, {"score": 0.002259054486157494, "phrase": "maximal_overestimation"}, {"score": 0.0022302306304023602, "phrase": "buffer_requirements"}, {"score": 0.0021876814398268775, "phrase": "approximation_technique"}, {"score": 0.0021049977753042253, "phrase": "worst-case_overestimation"}], "paper_keywords": ["cyclo-static dataflow", " synchronous dataflow", " buffering", " throughput", " optimization", " Pareto analysis", " trade-offs", " DSP", " multimedia applications"], "paper_abstract": "Multimedia applications usually have throughput constraints. An implementation must meet these constraints while it minimizes resource usage and energy consumption. The compute intensive kernels of these applications are often specified as Cyclo-Static or Synchronous Dataflow Graphs. Communication between nodes in these graphs requires storage space, which influences throughput. We present an exact technique to chart the Pareto space of throughput and storage trade-offs, which can be used to determine the minimal buffer space needed to execute a graph under a given throughput constraint. The feasibility of the exact technique is demonstrated with experiments on a set of realistic DSP and multimedia applications. To increase the scalability of the approach, a fast approximation technique is developed that guarantees both throughput and a tight bound on the maximal overestimation of buffer requirements. The approximation technique allows us to trade off worst-case overestimation versus runtime.", "paper_title": "Throughput-buffering trade-off exploration for cyclo-static and synchronous dataflow graphs", "paper_id": "WOS:000258592300004"}