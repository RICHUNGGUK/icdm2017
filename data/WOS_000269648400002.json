{"auto_keywords": [{"score": 0.04117972994186603, "phrase": "suffix_array"}, {"score": 0.013785918219969726, "phrase": "lazy_evaluation"}, {"score": 0.012210080904450542, "phrase": "searching_queries"}, {"score": 0.004303830426772906, "phrase": "suffix_array_construction"}, {"score": 0.003403122817578447, "phrase": "unevaluated_part"}, {"score": 0.0031360786664165093, "phrase": "searching_process"}, {"score": 0.002860546817196148, "phrase": "complete_suffix_array"}, {"score": 0.002690406375639144, "phrase": "schurmann-stoye_algorithm"}, {"score": 0.0026359661683151006, "phrase": "experimental_results"}, {"score": 0.002556359086441866, "phrase": "lazy_schurmann-stoye_algorithm"}, {"score": 0.002453934515906479, "phrase": "maniscalco"}, {"score": 0.0022382002476510573, "phrase": "fastest_suffix_sorting_algorithm"}, {"score": 0.0021049977753042253, "phrase": "small_lcp"}], "paper_keywords": ["pattern matching", " data structure", " lazy evaluation"], "paper_abstract": "In this paper, an idea for improvement of suffix array construction using lazy evaluation is presented. Evaluation of the suffix array is based on the searching queries; only the necessary part of the suffix array is built when unevaluated part of the suffix array is referred during the searching process. This is less time consuming than constructing complete suffix array. We propose lazy evaluation of Schurmann-Stoye algorithm. Experimental results show that lazy Schurmann-Stoye algorithm runs faster than Maniscalco, which is well-recognized as the fastest suffix sorting algorithm, under the constraint of small LCP (longest common prefix) and a limited number of searching queries.", "paper_title": "Lazy Suffix Array: The Data Structure for Online Construction and Pattern Searching", "paper_id": "WOS:000269648400002"}