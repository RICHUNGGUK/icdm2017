{"auto_keywords": [{"score": 0.03936608684117128, "phrase": "object-oriented_related_instructions"}, {"score": 0.00481495049065317, "phrase": "java_processor"}, {"score": 0.004760656597533044, "phrase": "java"}, {"score": 0.004626680470601208, "phrase": "current_embedded_systems"}, {"score": 0.004296264970612285, "phrase": "platform_independence"}, {"score": 0.004223415145617665, "phrase": "java_virtual_machine"}, {"score": 0.004104722208522451, "phrase": "java_programs"}, {"score": 0.0039216854691927865, "phrase": "existing_solutions"}, {"score": 0.003877211065759289, "phrase": "java_virtual_machines"}, {"score": 0.0035796471115594553, "phrase": "system_performance"}, {"score": 0.003419943984098415, "phrase": "novel_java_processor"}, {"score": 0.0031393948330209224, "phrase": "jhisc"}, {"score": 0.002931569771634119, "phrase": "hardware-readable_data_structure"}, {"score": 0.002784755056588371, "phrase": "complete_system"}, {"score": 0.0026604326030277153, "phrase": "vhdl"}, {"score": 0.002585539416877115, "phrase": "xilinx_virtex_fpga."}, {"score": 0.0024984517279573906, "phrase": "maximum_clock_frequency"}, {"score": 0.002373276186210053, "phrase": "picojava_ii"}, {"score": 0.0023329572140896237, "phrase": "overall_performance"}, {"score": 0.002216054733102974, "phrase": "execution_efficiency"}, {"score": 0.0021908807203548345, "phrase": "object-oriented_related_bytecodes"}], "paper_keywords": [""], "paper_abstract": "Java is widely applied in current embedded systems due to its object-oriented features and advantages such as security, robustness, and platform independence. A Java virtual machine is needed to execute Java programs. However, in most of the existing solutions to Java virtual machines, the overhead of executing object-oriented related instructions is significant and becomes the bottleneck of system performance. To solve this problem, a novel Java processor called jHISC is proposed, which mainly targets J2ME and embedded applications. In jHISC, the object-oriented related instructions are implemented by hardware directly, as a hardware-readable data structure is used to represent the object. The complete system with 4 kB instruction cache and 8 kB data cache is described by VHDL and implemented in a Xilinx Virtex FPGA. It occupies 601 859 equivalent gates and the maximum clock frequency of the system is about 30 MHz. Compared with PicoJava II, the overall performance is speeded up I to 7.4 times and the execution efficiency of object-oriented related bytecodes is improved by 0.91 to 13.2 times for the same clock frequency.", "paper_title": "Design and implementation of a Java processor", "paper_id": "WOS:000235397100003"}