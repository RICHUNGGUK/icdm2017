{"auto_keywords": [{"score": 0.028789771848651575, "phrase": "chinese_chess"}, {"score": 0.00481495049065317, "phrase": "new_sequential_retrograde_analysis_algorithm"}, {"score": 0.004657185361669812, "phrase": "large_endgame_databases"}, {"score": 0.004327981760540394, "phrase": "physical_memory"}, {"score": 0.0038131198288348764, "phrase": "chinese"}, {"score": 0.0035197152758635344, "phrase": "performance_result"}, {"score": 0.0032058286587989234, "phrase": "constructed_endgame"}, {"score": 0.0029988599391845517, "phrase": "main_memory"}, {"score": 0.002842920225545139, "phrase": "kcpggmmkccmm"}, {"score": 0.0025892330566358503, "phrase": "symmetrical_positions"}, {"score": 0.0022806798371116698, "phrase": "largest_dtm"}, {"score": 0.002250415129116109, "phrase": "dtc_values"}], "paper_keywords": [""], "paper_abstract": "This paper gives a new sequential retrograde analysis algorithm for the construction of large endgame databases that are too large to be loaded entirely into the physical memory. The algorithm makes use of disk I/O patterns and saves disk I/O time. Using our algorithm we construct a set of Chinese-chess endgame databases with one side having attacking pieces. The performance result shows that our algorithm works well even when the number of positions in the constructed endgame is larger than the number of bits in the main memory of our computer. We built the 12-men database KCPGGMMKCCMM, the largest database reported in Chinese chess, which has 8,785,969,200 positions after removing symmetrical positions on a 2.2GHz P4 machine with 1 GB main memory. This process took 79 hours. We have also found positions with the largest DTM and DTC values in Chinese chess so far. They are in the 11-men database KCPGGMKGGMM; the values are 116 and 96, respectively.", "paper_title": "An external-memory retrograde analysis algorithm", "paper_id": "WOS:000236481900010"}