{"auto_keywords": [{"score": 0.033819336774639525, "phrase": "tshmem"}, {"score": 0.008666094863755776, "phrase": "many-core_processors"}, {"score": 0.00818086971401688, "phrase": "many-core_architectures"}, {"score": 0.005431786772302323, "phrase": "similar_libraries"}, {"score": 0.00481495049065317, "phrase": "low-level_pgas_computing"}, {"score": 0.004762202897268383, "phrase": "tshmem._diminishing_returns"}, {"score": 0.004736045157669388, "phrase": "increased_clock_frequencies"}, {"score": 0.00471003041684707, "phrase": "instruction-level_parallelism"}, {"score": 0.004671274735676484, "phrase": "computer_architects"}, {"score": 0.004594713028452399, "phrase": "wider_parallelism"}, {"score": 0.0045694710501318235, "phrase": "multiple_processor_cores"}, {"score": 0.004457579615095599, "phrase": "remarkable_rate"}, {"score": 0.00433645229352341, "phrase": "numerous_parallel-programming_tools"}, {"score": 0.004253618550301311, "phrase": "parallel_applications"}, {"score": 0.004138010495069077, "phrase": "unique_characteristics"}, {"score": 0.004103942174451674, "phrase": "target_platform"}, {"score": 0.003937745492689668, "phrase": "partitioned_global_address_space"}, {"score": 0.003894570038675774, "phrase": "programming_models"}, {"score": 0.0038624981944755813, "phrase": "current_state"}, {"score": 0.003736821146180386, "phrase": "shmem"}, {"score": 0.0036052633308076933, "phrase": "high_performance"}, {"score": 0.0035854375135437634, "phrase": "productivity_potential"}, {"score": 0.0035657203308982065, "phrase": "parallel-computing_systems"}, {"score": 0.0035461111918923117, "phrase": "distributed-memory_architectures"}, {"score": 0.003393057771300821, "phrase": "new_shmem_infrastructure"}, {"score": 0.003355834430771482, "phrase": "low-level_pgas"}, {"score": 0.0033373756615875517, "phrase": "modern_and_emerging_many-core_processors"}, {"score": 0.0032287289440915187, "phrase": "new_library"}, {"score": 0.0031236080850960096, "phrase": "tilera_architectures"}, {"score": 0.0028993944292191433, "phrase": "design_decisions"}, {"score": 0.0028675712105299496, "phrase": "parallel_performance"}, {"score": 0.0028439325713081527, "phrase": "tilera_tile-gx"}, {"score": 0.002828281528138126, "phrase": "tilepro"}, {"score": 0.002713604305939145, "phrase": "applications_studies"}, {"score": 0.002669042572650594, "phrase": "barrier_primitives"}, {"score": 0.002639740960006001, "phrase": "tilera_libraries"}, {"score": 0.0026252106881752067, "phrase": "dissimilar_performance"}, {"score": 0.0025608053689544475, "phrase": "tshmem's_barrier_design"}, {"score": 0.002539689093411356, "phrase": "alternative_approach"}, {"score": 0.002511803988580901, "phrase": "on-chip_mesh_network"}, {"score": 0.0024910907668765736, "phrase": "consistent_low-latency_performance"}, {"score": 0.0024232694434408093, "phrase": "naive_collective_algorithms"}, {"score": 0.00240328454980006, "phrase": "linear_distributed_collective_algorithms"}, {"score": 0.0023703411133292746, "phrase": "smp-centric_environment"}, {"score": 0.0022741894748181243, "phrase": "openshmem_reference_implementation"}, {"score": 0.002243011652519744, "phrase": "positive_performance"}, {"score": 0.002218376741764432, "phrase": "oshmpi"}, {"score": 0.002206160956125367, "phrase": "mpich"}, {"score": 0.002163930783583212, "phrase": "high-performance_parallel_computing"}, {"score": 0.0021460800751054577, "phrase": "many-core_systems"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["many-core", " PGAS", " SHMEM", " OpenSHMEM", " OpenMP", " parallel programming", " performance analysis", " high-performance computing"], "paper_abstract": "Diminishing returns from increased clock frequencies and instruction-level parallelism have forced computer architects to adopt architectures that exploit wider parallelism through multiple processor cores. While emerging many-core architectures have progressed at a remarkable rate, concerns arise regarding the performance and productivity of numerous parallel-programming tools for application development. Development of parallel applications on many-core processors often requires developers to familiarize themselves with unique characteristics of a target platform while attempting to maximize performance and maintain correctness of their applications. The family of partitioned global address space (PGAS) programming models comprises the current state of the art in balancing performance and programmability. One such PGAS approach is SHMEM, a lightweight, shared-memory programming library that has demonstrated high performance and productivity potential for parallel-computing systems with distributed-memory architectures. In the paper, we present research, design, and analysis of a new SHMEM infrastructure specifically crafted for low-level PGAS on modern and emerging many-core processors featuring dozens of cores and more. Our approach (with a new library known as TSHMEM) is investigated and evaluated atop two generations of Tilera architectures, which are among the most sophisticated and scalable many-core processors to date, and is intended to enable similar libraries atop other architectures now emerging. In developing TSHMEM, we explore design decisions and their impact on parallel performance for the Tilera TILE-Gx and TILEPro many-core architectures, and then evaluate the designs and algorithms within TSHMEM through microbenchmarking and applications studies with other communication libraries. Our results with barrier primitives provided by the Tilera libraries show dissimilar performance between the TILE-Gx and TILEPro; therefore, TSHMEM's barrier design takes an alternative approach and leverages the on-chip mesh network to provide consistent low-latency performance. In addition, our experiments with TSHMEM show that naive collective algorithms consistently outperformed linear distributed collective algorithms when executed in an SMP-centric environment. In leveraging these insights for the design of TSHMEM, our approach outperforms the OpenSHMEM reference implementation, achieves similar to positive performance over OpenMP and OSHMPI atop MPICH, and supports similar libraries in delivering high-performance parallel computing to emerging many-core systems. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Low-level PGAS computing on many-core processors with TSHMEM", "paper_id": "WOS:000363766600040"}