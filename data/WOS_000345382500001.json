{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "target_address_pointers"}, {"score": 0.03976831816650351, "phrase": "indirect-branch_targets"}, {"score": 0.032255192590058206, "phrase": "tap_prediction"}, {"score": 0.0046781613377273774, "phrase": "first_design"}, {"score": 0.004611224230543916, "phrase": "chip_development"}, {"score": 0.004523455475492876, "phrase": "higher_energy_efficiency"}, {"score": 0.004458722048888919, "phrase": "processor_architects"}, {"score": 0.00433200902751133, "phrase": "unnecessary_energy_dissipations"}, {"score": 0.00429057323623293, "phrase": "indirect-branch_prediction"}, {"score": 0.004208881856146758, "phrase": "performance_bottleneck"}, {"score": 0.004050116768809519, "phrase": "object-oriented_languages"}, {"score": 0.004011366422179016, "phrase": "previous_hardware-based_indirect-branch_predictors"}, {"score": 0.0038415095105632157, "phrase": "significant_hardware_storage"}, {"score": 0.0032308006242867224, "phrase": "existing_processor_components"}, {"score": 0.0031845067058084583, "phrase": "additional_hardware_costs"}, {"score": 0.003154012038613403, "phrase": "power_consumption"}, {"score": 0.0030790429005600898, "phrase": "indirect_branch"}, {"score": 0.0029914213495838998, "phrase": "specific_pointers"}, {"score": 0.0029203055813347874, "phrase": "conditional_branch_predictor"}, {"score": 0.0028100102841877835, "phrase": "virtual_addresses"}, {"score": 0.002690886043654469, "phrase": "similar_time"}, {"score": 0.0026395715432958665, "phrase": "dedicated_storage_techniques"}, {"score": 0.002601727192945944, "phrase": "additional_large_amounts"}, {"score": 0.00247944491239733, "phrase": "representative_state-of-the-art_branch_predictors"}, {"score": 0.002329009499335603, "phrase": "hardware-based_indirect-branch_predictors"}, {"score": 0.0022409963215568565, "phrase": "performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "vpc_predictor"}], "paper_keywords": ["microprocessor", " indirect-branch prediction", " energy-efficient", " branch target buffer"], "paper_abstract": "Nowadays energy-efficiency becomes the first design metric in chip development. To pursue higher energy efficiency, the processor architects should reduce or eliminate those unnecessary energy dissipations. Indirect-branch prediction has become a performance bottleneck, especially for the applications written in object-oriented languages. Previous hardware-based indirect-branch predictors are generally inefficient, for they either require significant hardware storage or predict indirect-branch targets slowly. In this paper, we propose an energy-efficient indirect-branch prediction technique called TAP (target address pointer) prediction. Its key idea includes two parts: utilizing specific hardware pointers to accelerate the indirect branch prediction flow and reusing the existing processor components to reduce additional hardware costs and power consumption. When fetching an indirect branch, TAP prediction first gets the specific pointers called target address pointers from the conditional branch predictor, and then uses such pointers to generate virtual addresses which index the indirect-branch targets. This technique spends similar time compared to the dedicated storage techniques without requiring additional large amounts of storage. Our evaluation shows that TAP prediction with some representative state-of-the-art branch predictors can improve performance significantly over the baseline processor. Compared with those hardware-based indirect-branch predictors, the TAP-Perceptron scheme achieves performance improvement equivalent to that provided by an 8K-entry TTC predictor, and also outperforms the VPC predictor.", "paper_title": "A General Low-Cost Indirect Branch Prediction Using Target Address Pointers", "paper_id": "WOS:000345382500001"}