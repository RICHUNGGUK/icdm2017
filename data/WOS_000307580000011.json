{"auto_keywords": [{"score": 0.04522176534199055, "phrase": "soft_errors"}, {"score": 0.008453352903867492, "phrase": "smaller_transistors"}, {"score": 0.00481495049065317, "phrase": "soft_error_protection_for_commodity_embedded_microprocessors"}, {"score": 0.0047784273577245505, "phrase": "profile_information"}, {"score": 0.004742179945772899, "phrase": "successive_generations"}, {"score": 0.004230188765513944, "phrase": "high_energy_particle_strikes"}, {"score": 0.004118874671285618, "phrase": "unexpected_behavior"}, {"score": 0.004087609837102023, "phrase": "incorrect_results"}, {"score": 0.004041155193307942, "phrase": "smaller_and_cheaper_transistors"}, {"score": 0.003980032599437366, "phrase": "mainstream_computing"}, {"score": 0.00378767277402891, "phrase": "increasing_rate"}, {"score": 0.00364603066037512, "phrase": "commodity_processors"}, {"score": 0.0035772012773052065, "phrase": "existing_methods"}, {"score": 0.00348300993356662, "phrase": "high_area"}, {"score": 0.003456554957885269, "phrase": "performance_overheads"}, {"score": 0.0033399639721674954, "phrase": "embedded_design_space"}, {"score": 0.0031422859551159506, "phrase": "necessary_first_step"}, {"score": 0.002900426826591769, "phrase": "profiling-based_software-only_application_analysis"}, {"score": 0.0027812405653371503, "phrase": "low_cost_solution"}, {"score": 0.002718301574682098, "phrase": "off-the-shelf_embedded_processors"}, {"score": 0.002567099236341096, "phrase": "program_output"}, {"score": 0.0025089940342989227, "phrase": "original_and_duplicated_instructions"}, {"score": 0.0023966900120342364, "phrase": "control_flow"}, {"score": 0.0023784664152543718, "phrase": "memory_dependence"}, {"score": 0.0022894012453842064, "phrase": "common-case_behavior"}, {"score": 0.0021211305348270413, "phrase": "best_prior_approaches"}, {"score": 0.0021049977753042253, "phrase": "approximately_the_same_fault_coverage"}], "paper_keywords": ["Reliability", " Soft Errors", " Profiling", " Profile-based Compiler Analysis", " Fault Injection"], "paper_abstract": "Successive generations of processors use smaller transistors in the quest to make more powerful computing systems. It has been previously studied that smaller transistors make processors more susceptible to soft errors (transient faults caused by high energy particle strikes). Such errors can result in unexpected behavior and incorrect results. With smaller and cheaper transistors becoming pervasive in mainstream computing, it is necessary to protect these devices against soft errors; an increasing rate of faults necessitates the protection of applications running on commodity processors against soft errors. The existing methods of protecting against such faults generally have high area or performance overheads and thus are not directly applicable in the embedded design space. In order to protect against soft errors, the detection of these errors is a necessary first step so that a recovery can be triggered. To solve the problem of detecting soft errors cheaply, we propose a profiling-based software-only application analysis and transformation solution. The goal is to develop a low cost solution which can be deployed for off-the-shelf embedded processors. The solution works by intelligently duplicating instructions that are likely to affect the program output, and comparing results between original and duplicated instructions. The intelligence of our solution is garnered through the use of control flow, memory dependence, and value profiling to understand and exploit the common-case behavior of applications. Our solution is able to achieve 92% fault coverage with a 20% instruction overhead. This represents a 41% lower performance overhead than the best prior approaches with approximately the same fault coverage.", "paper_title": "Efficient Soft Error Protection for Commodity Embedded Microprocessors using Profile Information", "paper_id": "WOS:000307580000011"}