{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fail-uncontrolled_and_ambient_intelligence_systems"}, {"score": 0.0040385352882334235, "phrase": "existing_multiagent_systems"}, {"score": 0.003633927813203731, "phrase": "fail-uncontrolled_multiagent_systems"}, {"score": 0.003447035529485425, "phrase": "particular_situations"}, {"score": 0.0033868916699805224, "phrase": "ambient_intelligence"}, {"score": 0.0030206579994328975, "phrase": "expected_patterns"}, {"score": 0.0028652153774536967, "phrase": "trace_expressions"}, {"score": 0.002298902547676131, "phrase": "extended_trace_expressions_formalism"}, {"score": 0.002142426911242168, "phrase": "different_contexts"}, {"score": 0.0021049977753042253, "phrase": "fail-uncontrolled_and_ami_systems"}], "paper_keywords": ["Runtime verification", " trace expressions", " fail-uncontrolled system", " ambient intelligence system"], "paper_abstract": "We propose an approach for designing, formalizing and implementing, on top of existing MultiAgent Systems and without interfering with them, sentinels that detect errors in fail-uncontrolled multiagent systems, and controllers that identify particular situations in ambient intelligence (AmI) systems. The formalism we use for representing the expected patterns of actions is that of trace expressions extended with features for dealing with exceptions, timeouts, and their handlers. In this paper we provide the syntax and semantics of the extended trace expressions formalism and examples of their use, in the different contexts of fail-uncontrolled and AmI systems.", "paper_title": "Runtime verification of fail-uncontrolled and ambient intelligence systems: A uniform approach", "paper_id": "WOS:000374635400004"}