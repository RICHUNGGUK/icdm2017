{"auto_keywords": [{"score": 0.03208723958700832, "phrase": "awareness_information"}, {"score": 0.027836464983431244, "phrase": "context_awareness"}, {"score": 0.00481495049065317, "phrase": "distributed_collaborative_software_engineering"}, {"score": 0.00478579024367007, "phrase": "software_development_projects"}, {"score": 0.004614483128885678, "phrase": "complex_systems"}, {"score": 0.0045726187330434025, "phrase": "integral_part"}, {"score": 0.004422325007817267, "phrase": "shared_understanding"}, {"score": 0.004355645393953418, "phrase": "software_project_tasks"}, {"score": 0.004136333933790974, "phrase": "co-located_settings"}, {"score": 0.0040987896316698495, "phrase": "vital_awareness_information"}, {"score": 0.0039042115674024006, "phrase": "informal_personal_interruptions"}, {"score": 0.0038805454197432337, "phrase": "electronic_communication"}, {"score": 0.0037529131348732715, "phrase": "distributed_teams"}, {"score": 0.0034994014234054397, "phrase": "theoretical_benefits"}, {"score": 0.0034781805438547017, "phrase": "distributed_collaborative_software_development"}, {"score": 0.0034465894339710864, "phrase": "practical_impediments"}, {"score": 0.00342568771304873, "phrase": "successful_implementation"}, {"score": 0.003353521531649663, "phrase": "similar_levels"}, {"score": 0.0033129660760880383, "phrase": "distributed_settings"}, {"score": 0.0032828706086018133, "phrase": "available_in_co-located_settings"}, {"score": 0.0032137033371524852, "phrase": "detailed_discussion"}, {"score": 0.0031459887611258765, "phrase": "particular_relevance"}, {"score": 0.0029965060407413898, "phrase": "collaborative_processes"}, {"score": 0.0029512611306191194, "phrase": "dissemination_mechanisms"}, {"score": 0.002933354468864442, "phrase": "software_development_teams"}, {"score": 0.0028802818629647614, "phrase": "main_contribution"}, {"score": 0.0027685531038981847, "phrase": "distributed_collaborative_software_engineering_and_current_support"}, {"score": 0.002511600086227215, "phrase": "individual_collaborators"}, {"score": 0.0024887661666249897, "phrase": "different_sets"}, {"score": 0.002436289099444074, "phrase": "different_perceptions"}, {"score": 0.0021503542912161243, "phrase": "collaboration_space"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["global software development", " context awareness", " empirical studies", " distributed teamwork"], "paper_abstract": "Software development projects are inherently cooperative, requiring many developers to coordinate their efforts to produce complex systems. An integral part of this process is the development and maintenance of a shared understanding concerning the state of software project tasks, artefacts, and the activities and expertise of developers working on the project. In co-located settings, this vital awareness information that concerns developers, either directly or tangentially, is typically acquired using formal, regular meetings, informal personal interruptions and electronic communication. Developing and maintaining such an awareness are far more difficult in distributed teams where developers are separated by time and space. The goal of this review is to help bridge the gap between the theoretical benefits of distributed collaborative software development and the practical impediments to successful implementation, and more specifically, achieving similar levels of awareness in distributed settings to those available in co-located settings. The review starts with a detailed discussion of awareness and awareness types with particular relevance to collaboration. This is followed by a discussion of how awareness information is disseminated during collaborative processes. Awareness information needs and dissemination mechanisms in software development teams are then presented. The main contribution of the review, derived from a comparison of awareness needs in distributed collaborative software engineering and current support from tools and techniques, is that more support is required for the type of awareness known as context awareness. Context awareness crosscuts other (more basic) forms of awareness and arises because, over time, individual collaborators work on different sets of tasks and artefacts and form different perceptions of their colleagues; their colleagues' work, roles, and relationships; and, the workspace. This awareness is highly contextual and therefore cannot be generalized across individuals, entities or activities that are found in a collaboration space. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "A review of awareness in distributed collaborative software engineering", "paper_id": "WOS:000284016000005"}