{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "code_clones"}, {"score": 0.008909499091724638, "phrase": "code_clone"}, {"score": 0.006575317847349754, "phrase": "large-scale_software"}, {"score": 0.0047310525657970615, "phrase": "software_system"}, {"score": 0.004648609688625397, "phrase": "software_systems"}, {"score": 0.004358368398332723, "phrase": "software_increase"}, {"score": 0.004232475065285966, "phrase": "software_maintenance"}, {"score": 0.003968112038249246, "phrase": "code_fragment"}, {"score": 0.003698442219929622, "phrase": "source_code"}, {"score": 0.002409526813093268, "phrase": "gemini"}, {"score": 0.0023124457559811087, "phrase": "open_source_software_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["software maintenance", " code clone", " software understanding", " software metrics"], "paper_abstract": "Maintaining software systems is becoming more difficult as the size and complexity of software increase. One factor that complicates software maintenance is the presence of code clones. A code clone is a code fragment that has identical or similar code fragments to it in the source code. Code clones are introduced for various reasons such as reusing code by 'copy and paste'. If modifying a code clone with many similar code fragments, we must consider whether to modify each of them. Especially for large-scale software, such a process is very complicated and expensive. In this paper, we propose methods of visualizing and featuring code clones to support their understanding in large-scale software. The methods have been implemented as a tool called Gemini, which has applied to an open source software system. Application results show the usefulness and capability of our system. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Method and implementation for investigating code clones in a software system", "paper_id": "WOS:000248708100003"}