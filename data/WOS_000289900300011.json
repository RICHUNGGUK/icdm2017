{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "normal_basis"}, {"score": 0.004744437370338926, "phrase": "hardware_implementations"}, {"score": 0.004674952036988355, "phrase": "finite_field_arithmetic"}, {"score": 0.004310501708408856, "phrase": "squaring_operation"}, {"score": 0.004154332348800334, "phrase": "almost_no_cost"}, {"score": 0.003945117054416623, "phrase": "new_word-level_finite_field_multiplier"}, {"score": 0.0037188360359702182, "phrase": "proposed_architecture"}, {"score": 0.003557653536102669, "phrase": "product_bits"}, {"score": 0.002726740692380339, "phrase": "optimal_normal_basis"}, {"score": 0.0025892330566358503, "phrase": "proposed_design"}, {"score": 0.0025324393547676623, "phrase": "smaller_critical_path_delay"}, {"score": 0.0022168460543913787, "phrase": "different_word_size_multipliers"}, {"score": 0.0021049977753042253, "phrase": "implementation_results"}], "paper_keywords": ["Finite field multiplier", " normal basis", " optimal normal basis", " elliptic curve cryptography"], "paper_abstract": "Hardware implementations of finite field arithmetic using normal basis are advantageous due to the fact that the squaring operation can be done at almost no cost. In this paper, a new word-level finite field multiplier using normal basis is proposed. The proposed architecture takes d clock cycles to compute the product bits, where the value for d, 1 <= d <= m, can be arbitrarily selected by the designer to set the tradeoff between area and speed. When there exists an optimal normal basis, it is shown that the proposed design has a smaller critical path delay than other word-level normal basis multipliers found in the literature, while its circuit complexities are moderate and comparable to the others. Different word size multipliers were implemented in hardware, and implementation results are also presented.", "paper_title": "A Word-Level Finite Field Multiplier Using Normal Basis", "paper_id": "WOS:000289900300011"}