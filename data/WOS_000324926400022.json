{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "modeling_language"}, {"score": 0.0047113960612140335, "phrase": "course_timetabling_problem"}, {"score": 0.004445961412092278, "phrase": "limited_set"}, {"score": 0.004272164161788242, "phrase": "hard_and_soft_constraints"}, {"score": 0.004031375102068085, "phrase": "wide_variety"}, {"score": 0.004002242925856335, "phrase": "soft_constraints"}, {"score": 0.003973320429450603, "phrase": "objective_functions"}, {"score": 0.0039019217388438134, "phrase": "resulting_encoding"}, {"score": 0.0037903327482565097, "phrase": "new_constraints"}, {"score": 0.0035507457285983268, "phrase": "different_formulations"}, {"score": 0.003424225677958491, "phrase": "effective_use"}, {"score": 0.0031614748814351823, "phrase": "asp_encoding"}, {"score": 0.0031272381208680613, "phrase": "curriculum-based_course_timetabling_problem"}, {"score": 0.003037736332283186, "phrase": "second_international_timetabling_competition"}, {"score": 0.0027842669893795766, "phrase": "hard_constraint"}, {"score": 0.0027341763737751467, "phrase": "integrity_constraints"}, {"score": 0.002675252546913683, "phrase": "soft_constraint_s"}, {"score": 0.0024519545383399773, "phrase": "violation_v"}, {"score": 0.0022884433286785165, "phrase": "five_different_formulations"}, {"score": 0.0021592189144729775, "phrase": "problem_instances"}, {"score": 0.0021049977753042253, "phrase": "previous_best_known_bounds"}], "paper_keywords": ["answer set programming", " educational timetabling", " course timetabling"], "paper_abstract": "The course timetabling problem can be generally defined as the task of assigning a number of lectures to a limited set of timeslots and rooms, subject to a given set of hard and soft constraints. The modeling language for course timetabling is required to be expressive enough to specify a wide variety of soft constraints and objective functions. Furthermore, the resulting encoding is required to be extensible for capturing new constraints and for switching them between hard and soft, and to be flexible enough to deal with different formulations. In this paper, we propose to make effective use of ASP as a modeling language for course timetabling. We show that our ASP-based approach can naturally satisfy the above requirements, through an ASP encoding of the curriculum-based course timetabling problem proposed in the third track of the second international timetabling competition (ITC-2007). Our encoding is compact and human-readable, since each constraint is individually expressed by either one or two rules. Each hard constraint is expressed by using integrity constraints and aggregates of ASP. Each soft constraint S is expressed by rules in which the head is the form of penalty (S, V, C), and a violation V and its penalty cost C are detected and calculated respectively in the body. We carried out experiments on four different benchmark sets with five different formulations. We succeeded either in improving the bounds or producing the same bounds for many combinations of problem instances and formulations, compared with the previous best known bounds.", "paper_title": "Answer set programming as a modeling language for course timetabling", "paper_id": "WOS:000324926400022"}