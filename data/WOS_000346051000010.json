{"auto_keywords": [{"score": 0.03925546853975858, "phrase": "string_graph"}, {"score": 0.01560068052155718, "phrase": "incremental_hashing"}, {"score": 0.00481495049065317, "phrase": "graph_construction"}, {"score": 0.004705206179790976, "phrase": "new_sequencing_technologies"}, {"score": 0.004669180816745142, "phrase": "larger_amount"}, {"score": 0.004562743714811391, "phrase": "decreasing_cost"}, {"score": 0.004527804152066942, "phrase": "de_novo_sequence_assembly"}, {"score": 0.004340343873304156, "phrase": "original_genome_sequence"}, {"score": 0.004241370886886689, "phrase": "reference_genome"}, {"score": 0.004176640648520877, "phrase": "algorithmic_and_computational_challenges"}, {"score": 0.004112894218792621, "phrase": "long_and_repetitive_genome_sequences"}, {"score": 0.004003660777805554, "phrase": "assembly_problem"}, {"score": 0.003912335018240945, "phrase": "de_bruijn_graphs"}, {"score": 0.003808407814695708, "phrase": "recent_works"}, {"score": 0.003512841739654183, "phrase": "suffix_arrays"}, {"score": 0.0034725269588525534, "phrase": "burrows-wheeler_transform"}, {"score": 0.0034326732528567826, "phrase": "fm_index"}, {"score": 0.0033158265075584796, "phrase": "new_approaches"}, {"score": 0.003202944392720772, "phrase": "simple_data_structures"}, {"score": 0.003178384350932103, "phrase": "algorithmic_concepts"}, {"score": 0.0030938932434437178, "phrase": "novel_hash-based_method"}, {"score": 0.0029090845459992737, "phrase": "karp-rabin_fingerprint"}, {"score": 0.002875689855454321, "phrase": "bloom"}, {"score": 0.002820850247525606, "phrase": "probabilistic_methods"}, {"score": 0.002788454815865172, "phrase": "false-positive_and_false-negative_edges"}, {"score": 0.0025917270871556475, "phrase": "proposed_approach"}, {"score": 0.002571841741339248, "phrase": "existing_methods"}, {"score": 0.0025034338848015166, "phrase": "established_probabilistic_techniques"}, {"score": 0.0024556852466581527, "phrase": "de_novo_genome_sequencing"}, {"score": 0.002381169982803105, "phrase": "first_string_graph_construction"}, {"score": 0.0023629133973697325, "phrase": "simpson"}, {"score": 0.002344763466791412, "phrase": "durbin"}, {"score": 0.002273605493468005, "phrase": "subsequent_improvements"}, {"score": 0.0021294699637639564, "phrase": "noticeable_performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_string_graph-based_assemblers"}], "paper_keywords": [""], "paper_abstract": "Motivation: New sequencing technologies generate larger amount of short reads data at decreasing cost. De novo sequence assembly is the problem of combining these reads back to the original genome sequence, without relying on a reference genome. This presents algorithmic and computational challenges, especially for long and repetitive genome sequences. Most existing approaches to the assembly problem operate in the framework of de Bruijn graphs. Yet, a number of recent works use the paradigm of string graph, using a variety of methods for storing and processing suffixes and prefixes, like suffix arrays, the Burrows-Wheeler transform or the FM index. Our work is motivated by a search for new approaches to constructing the string graph, using alternative yet simple data structures and algorithmic concepts. Results: We introduce a novel hash-based method for constructing the string graph. We use incremental hashing, and specifically a modification of the Karp-Rabin fingerprint, and Bloom filters. Using these probabilistic methods might create false-positive and false-negative edges during the algorithm's execution, but these are all detected and corrected. The advantages of the proposed approach over existing methods are its simplicity and the incorporation of established probabilistic techniques in the context of de novo genome sequencing. Our preliminary implementation is favorably comparable with the first string graph construction of Simpson and Durbin (2010) (but not with subsequent improvements). Further research and optimizations will hopefully enable the algorithm to be incorporated, with noticeable performance improvement, in state-of-the-art string graph-based assemblers.", "paper_title": "String graph construction using incremental hashing", "paper_id": "WOS:000346051000010"}