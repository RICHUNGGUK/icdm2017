{"auto_keywords": [{"score": 0.049407782669650464, "phrase": "garside_groups"}, {"score": 0.00481495049065317, "phrase": "conjugacy_problem"}, {"score": 0.004392565073466714, "phrase": "conjugacy_decision_problem"}, {"score": 0.004300453431933622, "phrase": "conjugacy_search_problem"}, {"score": 0.004007083686875716, "phrase": "usual_one"}, {"score": 0.003629557750546267, "phrase": "well-known_cycling"}, {"score": 0.0028944757265206332, "phrase": "fundamental_operations"}, {"score": 0.002853808773854451, "phrase": "simple_elements"}, {"score": 0.0026967596578196325, "phrase": "garside_group"}, {"score": 0.0024423826953133844, "phrase": "previous_knowledge"}, {"score": 0.002408052242408488, "phrase": "prior_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Garside groups", " Conjugacy", " Conjugacy problem", " Cyclic sliding", " Sliding circuits", " Complexity analysis"], "paper_abstract": "We present a solution to the conjugacy decision problem and the conjugacy search problem in Garside groups, which is theoretically simpler than the usual one, with no loss of efficiency. This is done by replacing the well-known cycling and decycling operations by a new one, called cyclic sliding, which appears to be a more natural choice. We give an analysis of the complexity of our algorithm in terms of fundamental operations with simple elements, so our analysis is valid for every Garside group. This paper intends to be self-contained, not requiring any previous knowledge of prior algorithms, and includes all the details for the algorithm to be implemented on a computer. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Solving the conjugacy problem in Garside groups by cyclic sliding", "paper_id": "WOS:000277527800002"}