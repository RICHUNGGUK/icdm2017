{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "directory_caches"}, {"score": 0.00511348973715944, "phrase": "parallel_applications"}, {"score": 0.004702092660370367, "phrase": "noncoherent_memory_blocks"}, {"score": 0.004646654984830476, "phrase": "key_aspect"}, {"score": 0.0045557008859819234, "phrase": "efficient_multiprocessor_systems"}, {"score": 0.00450198136261303, "phrase": "cache_coherence_protocol"}, {"score": 0.004448892453489832, "phrase": "directory-based_protocols"}, {"score": 0.004280128828554918, "phrase": "noncoherent_blocks"}, {"score": 0.004209269012699911, "phrase": "growing_size"}, {"score": 0.004126840854872329, "phrase": "frequent_evictions"}, {"score": 0.003998286635727259, "phrase": "cached_blocks"}, {"score": 0.003935513160201076, "phrase": "system_performance"}, {"score": 0.003828012660311739, "phrase": "memory_block"}, {"score": 0.0037828412206668206, "phrase": "processor_caches"}, {"score": 0.0037087324991876727, "phrase": "coherent_access"}, {"score": 0.003664963414801933, "phrase": "shared_memory"}, {"score": 0.0035931556794840027, "phrase": "significant_fraction"}, {"score": 0.0035507457285983268, "phrase": "cached_memory_blocks"}, {"score": 0.0034949740315415043, "phrase": "coherence_maintenance"}, {"score": 0.003128270147867462, "phrase": "coherence_protocol"}, {"score": 0.0028334016912935165, "phrase": "directory_cache_occupancy"}, {"score": 0.002669959049383929, "phrase": "operating_system"}, {"score": 0.0026175952455594277, "phrase": "minor_hardware_modifications"}, {"score": 0.002596937660779953, "phrase": "simulation_results"}, {"score": 0.0023520340492933383, "phrase": "wide_range"}, {"score": 0.0021049977753042253, "phrase": "directory_cache_size"}], "paper_keywords": ["Multiprocessor", " cache coherence", " directory cache", " operating system", " coherence deactivation", " noncoherent blocks"], "paper_abstract": "A key aspect in the design of efficient multiprocessor systems is the cache coherence protocol. Although directory-based protocols constitute the most scalable approach, the limited size of the directory caches together with the growing size of systems may cause frequent evictions and, consequently, the invalidation of cached blocks, which jeopardizes system performance. Directory caches keep track of every memory block stored in processor caches in order to provide coherent access to the shared memory. However, a significant fraction of the cached memory blocks do not require coherence maintenance (even in parallel applications) because they are either accessed by just one processor or they are never modified. In this paper, we propose to deactivate the coherence protocol for those blocks that do not require coherence. This deactivation means directory caches do not have to keep track of noncoherent blocks, which reduces directory cache occupancy and increases its effectiveness. Since the detection of noncoherent blocks is carried out by the operating system, our proposal only requires minor hardware modifications. Simulation results show that, thanks to our proposal, directory caches can avoid the tracking of about 66 percent (on average) of the blocks accessed by a wide range of applications, thereby improving the efficiency of directory caches. This contributes either to shortening the runtime of parallel applications by 15 percent (on average) while keeping directory cache size or to maintaining performance while using directory caches 16 times smaller.", "paper_title": "Increasing the Effectiveness of Directory Caches by Avoiding the Tracking of Noncoherent Memory Blocks", "paper_id": "WOS:000314391600006"}