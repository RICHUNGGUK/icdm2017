{"auto_keywords": [{"score": 0.045233214295837224, "phrase": "lean-kanban_approach"}, {"score": 0.04383441248529016, "phrase": "software_maintenance"}, {"score": 0.038337431109548986, "phrase": "maintenance_process"}, {"score": 0.00481495049065317, "phrase": "software_maintenance_process"}, {"score": 0.004698229304089357, "phrase": "work-in-process_limit"}, {"score": 0.004509919457793852, "phrase": "maintenance_effort"}, {"score": 0.004436716583179764, "phrase": "software_quality"}, {"score": 0.004224130367280183, "phrase": "software_practice"}, {"score": 0.00335867620389808, "phrase": "average_time"}, {"score": 0.003304097742490624, "phrase": "maintenance_requests"}, {"score": 0.003237116128682586, "phrase": "process_simulator"}, {"score": 0.0031714880645482496, "phrase": "existing_maintenance_processes"}, {"score": 0.0030944828434567966, "phrase": "wip_limit"}, {"score": 0.002970260970134645, "phrase": "real_maintenance_data"}, {"score": 0.002921975748248106, "phrase": "microsoft_project"}, {"score": 0.0028744731986533076, "phrase": "chinese_software_firm"}, {"score": 0.002839352319679885, "phrase": "main_results"}, {"score": 0.0023903140267755576, "phrase": "key_statistics"}, {"score": 0.002370794661629904, "phrase": "real_data"}, {"score": 0.002294294558114909, "phrase": "wip-limited_process"}, {"score": 0.0021662983565317283, "phrase": "previous_industrial_practices"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software maintenance process", " software process simulation", " Lean software development", " Kanban", " empirical software engineering"], "paper_abstract": "A software maintenance process is important for reducing maintenance effort and for improving software quality. In recent years, the Lean-Kanban approach has been widely applied in software practice including software maintenance. This approach minimizes Work-in-Progress (WIP), which is the number of items that are worked on by the team at any given time, thus improving the maintenance process. In this paper, we describe our simulation studies, which show that the Lean-Kanban approach can indeed help reduce the average time needed to complete maintenance requests. We develop a process simulator that can simulate both existing maintenance processes that do not use a WIP limit and that adopt it. We perform two case studies using real maintenance data collected from a Microsoft project and from a Chinese software firm. The main results of our study are twofold. First, we demonstrate that it is possible to effectively model and simulate, using actors and events, a maintenance process where a flow of issues is processed through a sequence of activities, correctly reproducing key statistics of real data. Second, our results confirm that the WIP-limited process could be useful to increase the efficiency of software maintenance, as reported in previous industrial practices. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Simulation of software maintenance process, with and without a work-in-process limit", "paper_id": "WOS:000328364600001"}