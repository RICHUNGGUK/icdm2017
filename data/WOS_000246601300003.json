{"auto_keywords": [{"score": 0.044037245250015095, "phrase": "module_algebra"}, {"score": 0.01571976268985775, "phrase": "maude"}, {"score": 0.004668059458774745, "phrase": "reflective_capabilities"}, {"score": 0.004479120557712926, "phrase": "maude_language"}, {"score": 0.004320055598195391, "phrase": "reflective_language"}, {"score": 0.004145143433523008, "phrase": "structured_theories"}, {"score": 0.003936389070602614, "phrase": "rich_collection"}, {"score": 0.0038959121068990517, "phrase": "module_operations"}, {"score": 0.003513264130359459, "phrase": "user_interface"}, {"score": 0.003459191419478298, "phrase": "execution_environment"}, {"score": 0.003370907075333389, "phrase": "high_level"}, {"score": 0.0030554300179552415, "phrase": "conventional_implementations"}, {"score": 0.0029467742734417255, "phrase": "greater_flexibility"}, {"score": 0.002755104031926742, "phrase": "general_principles"}, {"score": 0.0027126684113045756, "phrase": "reflective_design"}, {"score": 0.00257586859792573, "phrase": "institution_theoretic_notion"}, {"score": 0.0025493457404304446, "phrase": "structured_theory"}, {"score": 0.0023467391904246834, "phrase": "categorical_semantics"}, {"score": 0.0023225701080913388, "phrase": "maude's_parameterized_theories"}, {"score": 0.0022053994402287925, "phrase": "reflective_algebraic_specification"}, {"score": 0.0021714122348552747, "phrase": "different_module_and_view_operations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["structured theories", " institutions", " module algebra", " reflection", " Maude", " rewriting logic", " membership equational logic", " parameterization"], "paper_abstract": "The reflective capabilities of rewriting logic and their efficient implementation in the Maude language can be exploited to endow a reflective language like Maude with a module algebra in which structured theories can be combined and transformed by means of a rich collection of module operations. We have followed this approach and have used the specification of such a module algebra as its implementation, including a user interface and an execution environment for it. The high level at which the specification of the module algebra has been given makes this approach particularly attractive when compared to conventional implementations, because of its shorter development time and the greater flexibility, maintainability, and extensibility that it affords. We explain the general principles of the reflective design of the module algebra and its categorical foundations, based on the institution theoretic notion of structured theory and morphisms and colimits for such theories. Based on such foundations, we then explain the categorical semantics of Maude's parameterized theories, modules and views and their instantiation, and the reflective algebraic specification of the different module and view operations. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Maude's module algebra", "paper_id": "WOS:000246601300003"}