{"auto_keywords": [{"score": 0.042432735490005445, "phrase": "action_graphs"}, {"score": 0.00481495049065317, "phrase": "interactive_system"}, {"score": 0.004646598460957092, "phrase": "state_transitions"}, {"score": 0.004416210202299748, "phrase": "state_transition"}, {"score": 0.004305317140848514, "phrase": "previous_action"}, {"score": 0.004207886133277163, "phrase": "next_action"}, {"score": 0.004175899531189585, "phrase": "user_transition"}, {"score": 0.00410220263036908, "phrase": "system's_transition"}, {"score": 0.003978866233891427, "phrase": "user_transitions"}, {"score": 0.003869055514843829, "phrase": "system_specification"}, {"score": 0.003820144626025562, "phrase": "conventional_transition_system"}, {"score": 0.0037241630556876094, "phrase": "action_a"}, {"score": 0.0036864465771943933, "phrase": "action_graph"}, {"score": 0.003593812067062062, "phrase": "action_p"}, {"score": 0.003548368289666935, "phrase": "q.\""}, {"score": 0.0034857074630390266, "phrase": "goms"}, {"score": 0.0034680100975858197, "phrase": "klm"}, {"score": 0.00336367450773776, "phrase": "user's_actions"}, {"score": 0.0033295966773779174, "phrase": "system_graph"}, {"score": 0.003254174438877217, "phrase": "modelling_techniques"}, {"score": 0.003140221867794743, "phrase": "user_performance_metrics"}, {"score": 0.003108400804985359, "phrase": "formal_evaluations"}, {"score": 0.0030926110234113257, "phrase": "interactive_systems"}, {"score": 0.003069076150192837, "phrase": "fitts_law"}, {"score": 0.0028360962841331634, "phrase": "particular_tasks"}, {"score": 0.0026952335068497206, "phrase": "empirical_evaluations"}, {"score": 0.0026611219151602534, "phrase": "important_result"}, {"score": 0.002634142925641919, "phrase": "critical_interactive_systems"}, {"score": 0.0025744334586119367, "phrase": "possible_tasks"}, {"score": 0.0025032855546745503, "phrase": "human_participants"}, {"score": 0.0022377777597604566, "phrase": "optimal_time"}, {"score": 0.002215081186105616, "phrase": "keystroke_count"}, {"score": 0.002192614305694006, "phrase": "keyboard_layout"}, {"score": 0.002170374804200423, "phrase": "optimal_times"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Action graph", " The Fitts Law", " Finite state transition system", " Lower bounds on task time", " User modelling"], "paper_abstract": "A user operating an interactive system performs actions such as \"pressing a button\" and these actions cause state transitions in the system. However to perform an action, a user has to do what amounts to a state transition themselves, from the state of having completed the previous action to the state of starting to perform the next action; this user transition is out of step with the system's transition. This paper introduces action graphs, an elegant way of making user transitions explicit in the arcs of a graph derived from the system specification. Essentially, a conventional transition system has arcs labeled in the form \"user performs action A\" whereas an action graph has arcs labelled in the form \"having performed action P, the user performs Q.\" Action graphs support many modelling techniques (such as GOMS, KLM or shortest paths) that could have been applied to the user's actions or to the system graph, but because it combines both, the modelling techniques can be used more powerfully. Action graphs can be used to directly apply user performance metrics and hence perform formal evaluations of interactive systems. The Fitts Law is one of the simplest and most robust of such user modelling techniques, and is used as an illustration of the value of action graphs in this paper. Action graphs can help analyze particular tasks, any sample of tasks, or all possible tasks a device supports-which would be impractical for empirical evaluations. This is an important result for analyzing safety critical interactive systems, where it is important to cover all possible tasks in testing even when doing so is not feasible using human participants because of the complexity of the system. An algorithm is presented for the construction of action graphs. Action graphs are then used to study devices (a consumer device, a digital multimeter, an infusion pump) and results suggest that: optimal time is correlated with keystroke count, and that keyboard layout has little impact on optimal times. Many other applications of action graphs are suggested. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Action graphs and user performance analysis", "paper_id": "WOS:000315363200006"}