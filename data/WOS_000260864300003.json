{"auto_keywords": [{"score": 0.04844170546569224, "phrase": "multimedia"}, {"score": 0.00481495049065317, "phrase": "dynamic_memory_access_management_for_high-performance_dsp_applications"}, {"score": 0.004731928080086235, "phrase": "high-level_synthesis"}, {"score": 0.004413846562278824, "phrase": "image_processing"}, {"score": 0.004189337956225294, "phrase": "huge_number"}, {"score": 0.0041170581247889654, "phrase": "data_accesses"}, {"score": 0.0035199624440843892, "phrase": "pipelined_memory"}, {"score": 0.002831158147480665, "phrase": "high-level_synthesis_tool"}, {"score": 0.002686935113435742, "phrase": "predictable_address_patterns"}, {"score": 0.002594880866651459, "phrase": "random_ones"}, {"score": 0.0023168823213024856, "phrase": "dynamic_address_computations"}, {"score": 0.002237477619351199, "phrase": "dedicated_computation_units"}, {"score": 0.0021797112385590913, "phrase": "memory_controller"}], "paper_keywords": ["Graph model", " high-level synthesis", " memory sequencer", " multimedia applications"], "paper_abstract": "Multimedia applications such as video and image processing are often characterized by a huge number of data accesses. In many digital signal processing applications, array access patterns are regular and periodic. In these cases, optimized architectures using pipelined memory access controllers can be generated. In this paper, we focus on implementing memory interfacing modules that can be automatically generated from a high-level synthesis tool and which can efficiently handle predictable address patterns as well as random ones (i.e., dynamic address computations). The benefits of balancing dynamic address computations from datapath to dedicated computation units in the memory controller is also analyzed as well as operator bitwidth optimization and data locality to save power consumption and reduce latency.", "paper_title": "Dynamic Memory Access Management for High-Performance DSP Applications Using High-Level Synthesis", "paper_id": "WOS:000260864300003"}