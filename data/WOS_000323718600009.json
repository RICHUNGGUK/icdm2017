{"auto_keywords": [{"score": 0.04601284855430019, "phrase": "redundant_adders"}, {"score": 0.04286666008487537, "phrase": "efficient_implementation"}, {"score": 0.00481495049065317, "phrase": "multioperand_redundant_adders"}, {"score": 0.004698000536608171, "phrase": "redundant_addition"}, {"score": 0.004561386908745206, "phrase": "parallel_multioperand_adders"}, {"score": 0.004516733575701128, "phrase": "asic_implementations"}, {"score": 0.004363846362238565, "phrase": "field_programmable_gate_arrays"}, {"score": 0.004154332348800334, "phrase": "main_reasons"}, {"score": 0.003445591238183763, "phrase": "different_approaches"}, {"score": 0.0033617891884360606, "phrase": "generic_carry-save_compressor_trees"}, {"score": 0.003247868216333148, "phrase": "fast_critical_path"}, {"score": 0.0031223774204093713, "phrase": "practically_no_area"}, {"score": 0.0030614565460256897, "phrase": "cpa_trees"}, {"score": 0.002986969236641105, "phrase": "classic_carry-save_compressor_tree"}, {"score": 0.002914288956035066, "phrase": "novel_linear_array_structure"}, {"score": 0.0028293966058473476, "phrase": "fast_carry-chain_resources"}, {"score": 0.0027200305495826797, "phrase": "parameterizable_hdl_code"}, {"score": 0.002576503437739865, "phrase": "fpga_family"}, {"score": 0.0025137856138000014, "phrase": "detailed_study"}, {"score": 0.0024525907271610104, "phrase": "wide_range"}, {"score": 0.002428530921948425, "phrase": "bit_widths"}, {"score": 0.002323142666222693, "phrase": "binary_and_ternary_cpa_trees"}], "paper_keywords": ["Computer arithmetic", " reconfigurable hardware", " multioperand addition", " redundant representation", " carry-save adders"], "paper_abstract": "Although redundant addition is widely used to design parallel multioperand adders for ASIC implementations, the use of redundant adders on Field Programmable Gate Arrays (FPGAs) has generally been avoided. The main reasons are the efficient implementation of carry propagate adders (CPAs) on these devices (due to their specialized carry-chain resources) as well as the area overhead of the redundant adders when they are implemented on FPGAs. This paper presents different approaches to the efficient implementation of generic carry-save compressor trees on FPGAs. They present a fast critical path, independent of bit width, with practically no area overhead compared to CPA trees. Along with the classic carry-save compressor tree, we present a novel linear array structure, which efficiently uses the fast carry-chain resources. This approach is defined in a parameterizable HDL code based on CPAs, which makes it compatible with any FPGA family or vendor. A detailed study is provided for a wide range of bit widths and large number of operands. Compared to binary and ternary CPA trees, speedups of up to 2.29 and 2.14 are achieved for 16-bit width and up to 3.81 and 3.11 for 64-bit width.", "paper_title": "Multioperand Redundant Adders on FPGAs", "paper_id": "WOS:000323718600009"}