{"auto_keywords": [{"score": 0.049270547314558835, "phrase": "cloud_storage"}, {"score": 0.00481495049065317, "phrase": "dynamic_remote_data_possession"}, {"score": 0.004594582559945568, "phrase": "high_quality"}, {"score": 0.0045556080393342165, "phrase": "on-demand_data_storage_services"}, {"score": 0.004310173770196077, "phrase": "cloud_servers"}, {"score": 0.003991932110277654, "phrase": "major_concern"}, {"score": 0.003841699919521703, "phrase": "remote_data_possession"}, {"score": 0.0032950412841674026, "phrase": "whole_protocol"}, {"score": 0.0029998918671747168, "phrase": "forgery_attack"}, {"score": 0.0029116257477000617, "phrase": "malicious_server"}, {"score": 0.0028139168128067343, "phrase": "malicious_cloud_server"}, {"score": 0.0027078974645805736, "phrase": "entire_file"}, {"score": 0.0023926387830753033, "phrase": "improved_protocol"}, {"score": 0.00235213013487844, "phrase": "security_flaws"}, {"score": 0.002253826965566618, "phrase": "well-known_security_model"}, {"score": 0.002159623311924437, "phrase": "original_protocol"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Cloud storage", " Data possession checking", " Homomorphic hashing", " Dynamic auditing"], "paper_abstract": "Cloud storage offers the users with high quality and on-demand data storage services and frees them from the burden of maintenance. However, the cloud servers are not fully trusted. Whether the data stored on cloud are intact or not becomes a major concern of the users. Recently, Chen et al. proposed a remote data possession checking protocol to address this issue. One distinctive feature of their protocol support data dynamics, meaning that users are allowed to modify, insert and delete their outsourced data without the need to re-run the whole protocol. Unfortunately, in this paper, we find that this protocol fails to achieve its purpose since it is vulnerable to forgery attack and replace attack launched by a malicious server. Specifically, we show how a malicious cloud server can deceive the user to believe that the entire file is well-maintained by using the meta-data related to the file alone, or with only part of the file and its meta-data. Then, we propose an improved protocol to fix the security flaws and formally proved that our proposal is secure under a well-known security model. In addition, our improvement keeps all the desirable features of the original protocol. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Improved security of a dynamic remote data possession checking protocol for cloud storage", "paper_id": "WOS:000341462600011"}