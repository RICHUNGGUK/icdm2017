{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "passive_testing"}, {"score": 0.004506968388996092, "phrase": "network_protocol_system"}, {"score": 0.00428892403807229, "phrase": "fault_detection"}, {"score": 0.004081385289516914, "phrase": "formal_technique"}, {"score": 0.003516898780234098, "phrase": "system_faults"}, {"score": 0.002883439044844259, "phrase": "formal_model"}, {"score": 0.002789528662623221, "phrase": "event-driven_extended_finite_state_machines"}, {"score": 0.00240328454980006, "phrase": "protocol_system_control"}, {"score": 0.0023249757987087033, "phrase": "data_portions"}, {"score": 0.0022492129111567802, "phrase": "experimental_results"}, {"score": 0.002175915432685912, "phrase": "ospf"}, {"score": 0.002105031943310019, "phrase": "tcp"}], "paper_keywords": ["event-driven extended finite state machine", " formal method", " network protocol", " passive monitoring", " testing"], "paper_abstract": "We study network protocol system monitoring for fault detection using a formal technique of passive testing that is a process of detecting system faults by passively observing its input/output behaviors without interrupting its normal operations. After describing a formal model of event-driven extended finite state machines, we present two algorithms for passive testing of protocol system control and data portions. Experimental results on OSPF and TCP are reported.", "paper_title": "Network protocol system monitoring - A formal approach with passive testing", "paper_id": "WOS:000237033500015"}