{"auto_keywords": [{"score": 0.03291592750038855, "phrase": "problem_kernel"}, {"score": 0.015719716506582538, "phrase": "modular_decomposition"}, {"score": 0.015217714285142318, "phrase": "bicluster_graph"}, {"score": 0.014994780988604602, "phrase": "disjoint_union"}, {"score": 0.012264193565492685, "phrase": "graph_editing"}, {"score": 0.010544282035940385, "phrase": "input_graph"}, {"score": 0.004786315041142917, "phrase": "parameterized_cluster_editing_problems"}, {"score": 0.00474367934322016, "phrase": "graph_g"}, {"score": 0.004172526471885961, "phrase": "parameterized_versions"}, {"score": 0.003989844368560806, "phrase": "minimum_number"}, {"score": 0.003884081948117292, "phrase": "input_bipartite_graph"}, {"score": 0.0036699310633539844, "phrase": "fpt"}, {"score": 0.003509135412622647, "phrase": "standard_search_tree_algorithm"}, {"score": 0.003305661550005516, "phrase": "modular_decomposition_techniques"}, {"score": 0.003246944366436126, "phrase": "original_problem"}, {"score": 0.002959735028884564, "phrase": "bounded_search_tree"}, {"score": 0.0028384703537911, "phrase": "new_way"}, {"score": 0.002595044162728215, "phrase": "cluster_graph"}, {"score": 0.0025261612008752534, "phrase": "previous_fpt_algorithm"}, {"score": 0.0023938189911418373, "phrase": "gramm_et_al"}], "paper_keywords": ["NP-complete problems", " Fixed-parameter tractability", " Edge modification problems", " Cluster graphs", " Bicluster graphs"], "paper_abstract": "A graph G is said to be a bicluster graph if G is a disjoint union of bicliques (complete bipartite subgraphs), and a cluster graph if G is a disjoint union of cliques (complete subgraphs). In this work, we study the parameterized versions of the NP-hard Bicluster Graph Editing and >Cluster Graph Editing problems. The former consists of obtaining a bicluster graph by making the minimum number of modifications in the edge set of an input bipartite graph. When at most k modifications are allowed (Bicluster(k) Graph Editing problem), this problem is FPT, and can be solved in O(4 (k) nm) time by a standard search tree algorithm. We develop an algorithm of time complexity O(4 (k) +n+m), which uses a strategy based on modular decomposition techniques; we slightly generalize the original problem as the input graph is not necessarily bipartite. The algorithm first builds a problem kernel with O(k (2)) vertices in O(n+m) time, and then applies a bounded search tree. We also show how this strategy based on modular decomposition leads to a new way of obtaining a problem kernel with O(k (2)) vertices for the Cluster(k) Graph Editing problem, in O(n+m) time. This problem consists of obtaining a cluster graph by modifying at most k edges in an input graph. A previous FPT algorithm of time O(1.92 (k) +n (3)) for this problem was presented by Gramm et al. (Theory Comput. Syst. 38(4), 373-392, 2005, Algorithmica 39(4), 321-347, 2004). In their solution, a problem kernel with O(k (2)) vertices is built in O(n (3)) time.", "paper_title": "Applying Modular Decomposition to Parameterized Cluster Editing Problems", "paper_id": "WOS:000261960100005"}