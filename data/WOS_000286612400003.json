{"auto_keywords": [{"score": 0.04929460594219637, "phrase": "consistency_checking"}, {"score": 0.04377588693056621, "phrase": "relating_requirements"}, {"score": 0.036590546733605435, "phrase": "requirements_relations"}, {"score": 0.03363896917055258, "phrase": "relation_types"}, {"score": 0.0284103574020228, "phrase": "new_relations"}, {"score": 0.025995457916087112, "phrase": "formal_semantics"}, {"score": 0.00481495049065317, "phrase": "trace_relations"}, {"score": 0.004775335634705251, "phrase": "requirements_models"}, {"score": 0.004658426838467567, "phrase": "requirements_traceability"}, {"score": 0.004414806639101985, "phrase": "corresponding_design_artifacts"}, {"score": 0.004324521292490181, "phrase": "test_cases"}, {"score": 0.004271234971981848, "phrase": "considerable_research"}, {"score": 0.004098291340525772, "phrase": "backward_directions"}, {"score": 0.003773049633656302, "phrase": "software_development"}, {"score": 0.003502382624110703, "phrase": "precise_definition"}, {"score": 0.0033883824438527316, "phrase": "deficient_results"}, {"score": 0.0032242793143795454, "phrase": "formal_definitions"}, {"score": 0.0029928611380840757, "phrase": "commonly_used_relation_types"}, {"score": 0.0028360962841331634, "phrase": "first-order_logic"}, {"score": 0.0025678829712650437, "phrase": "reasoning_activities"}, {"score": 0.0023249757987087055, "phrase": "requirements_documents"}, {"score": 0.0021049977753042253, "phrase": "better_understanding"}], "paper_keywords": ["Requirements metamodel", " Requirements traceability", " Inferencing", " Consistency checking", " Reasoning"], "paper_abstract": "Requirements traceability is the ability to relate requirements back to stakeholders and forward to corresponding design artifacts, code, and test cases. Although considerable research has been devoted to relating requirements in both forward and backward directions, less attention has been paid to relating requirements with other requirements. Relations between requirements influence a number of activities during software development such as consistency checking and change management. In most approaches and tools, there is a lack of precise definition of requirements relations. In this respect, deficient results may be produced. In this paper, we aim at formal definitions of the relation types in order to enable reasoning about requirements relations. We give a requirements metamodel with commonly used relation types. The semantics of the relations is provided with a formalization in first-order logic. We use the formalization for consistency checking of relations and for inferring new relations. A tool has been built to support both reasoning activities. We illustrate our approach in an example which shows that the formal semantics of relation types enables new relations to be inferred and contradicting relations in requirements documents to be determined. The application of requirements reasoning based on formal semantics resolves many of the deficiencies observed in other approaches. Our tool supports better understanding of dependencies between requirements.", "paper_title": "Semantics of trace relations in requirements models for consistency checking and inferencing", "paper_id": "WOS:000286612400003"}