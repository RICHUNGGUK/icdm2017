{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "password_capabilities"}, {"score": 0.004576763709613412, "phrase": "distributed_system"}, {"score": 0.004350308086118336, "phrase": "local_area_network"}, {"score": 0.004195418010131832, "phrase": "new_formulation"}, {"score": 0.0041051328120736575, "phrase": "password_capability_paradigm"}, {"score": 0.0039019217388438134, "phrase": "symmetric-key_cryptography"}, {"score": 0.0036288825833675127, "phrase": "cryptographic_key"}, {"score": 0.0029615198132465236, "phrase": "object_types"}, {"score": 0.0024342079318127423, "phrase": "right_representation"}, {"score": 0.002182881082103045, "phrase": "classical_paradigm"}, {"score": 0.0021049977753042253, "phrase": "memory_requirements"}], "paper_keywords": ["access right", " distributed system", " password capability", " protection", " revocation", " symmetric-key cryptography"], "paper_abstract": "With reference to a distributed system consisting of nodes connected by a local area network, we present a new formulation of the password capability paradigm that takes advantage of techniques of symmetric-key cryptography to represent password capabilities in memory. We assign a cryptographic key to each application; the password capabilities held by a process of a given application are encrypted by using the key of this application. Passwords are associated with object types; two or more objects of the same type, which are allocated to the same node, share the same set of passwords. Our password capability paradigm preserves all the advantages concerning simplicity in access right representation and administration (distribution, verification, review and revocation) that characterize the classical paradigm, while keeping the memory requirements for password storage low and solving the problems connected with password capability stealing and forging.", "paper_title": "Password Capabilities Revisited", "paper_id": "WOS:000359137500021"}