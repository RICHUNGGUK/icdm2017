{"auto_keywords": [{"score": 0.02450721758045108, "phrase": "malicious_code"}, {"score": 0.00481495049065317, "phrase": "mobile_malware"}, {"score": 0.004278807087784626, "phrase": "modern_mobile_platforms"}, {"score": 0.004174824849669107, "phrase": "serious_threat"}, {"score": 0.003993958025223994, "phrase": "growing_convergence"}, {"score": 0.003802135020791801, "phrase": "sophisticated_malicious_software"}, {"score": 0.0036733470451885465, "phrase": "network_domains"}, {"score": 0.0031532895341013297, "phrase": "android_platform"}, {"score": 0.003091767402370757, "phrase": "static_solutions"}, {"score": 0.0030464123943266673, "phrase": "dynamic_ones"}, {"score": 0.002843372121209168, "phrase": "fully-fledged_tool"}, {"score": 0.0027605398374811667, "phrase": "ios_software"}, {"score": 0.002706659627293686, "phrase": "method_invocation"}, {"score": 0.002640829460939728, "phrase": "api"}, {"score": 0.0024891269874339553, "phrase": "exploitable_results"}, {"score": 0.0023694065215394593, "phrase": "software's_behavior"}, {"score": 0.002233301265743633, "phrase": "real_life_malware"}, {"score": 0.0021049977753042253, "phrase": "heuristic_techniques"}], "paper_keywords": ["Malware", " iOS", " Dynamic analysis", " Behavior-based detection", " Smartphone"], "paper_abstract": "It is without a doubt that malware especially designed for modern mobile platforms is rapidly becoming a serious threat. The problem is further multiplexed by the growing convergence of wired, wireless and cellular networks, since virus writers can now develop sophisticated malicious software that is able to migrate across network domains. This is done in an effort to exploit vulnerabilities and services specific to each network. So far, research in dealing with this risk has concentrated on the Android platform and mainly considered static solutions rather than dynamic ones. Compelled by this fact, in this paper, we contribute a fully-fledged tool able to dynamically analyze any iOS software in terms of method invocation (i.e., which API methods the application invokes and under what order), and produce exploitable results that can be used to manually or automatically trace software's behavior to decide if it contains malicious code or not. By employing real life malware we assessed our tool both manually, as well as, via heuristic techniques and the results we obtained seem highly accurate in detecting malicious code.", "paper_title": "Exposing mobile malware from the inside (or what is your mobile app really doing?)", "paper_id": "WOS:000339877700030"}