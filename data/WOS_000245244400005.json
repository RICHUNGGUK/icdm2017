{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "robust_polynomials"}, {"score": 0.004742511243894382, "phrase": "boolean_functions"}, {"score": 0.004635881163634672, "phrase": "related_fault-tolerant_quantum_decision_trees"}, {"score": 0.004013843843250455, "phrase": "n-bit_boolean_function"}, {"score": 0.0038644521996539466, "phrase": "n-variate_polynomial_p"}, {"score": 0.0031246358910995316, "phrase": "n_inputs"}, {"score": 0.0028525124381208705, "phrase": "n_noisy_input_bits"}, {"score": 0.0027671619871474764, "phrase": "n-bit_function"}, {"score": 0.0023952639120005193, "phrase": "classical_model"}, {"score": 0.0023591417077156555, "phrase": "feige_et_al"}], "paper_keywords": [""], "paper_abstract": "We define and study the complexity of robust polynomials for Boolean functions and the related fault-tolerant quantum decision trees, where input bits are perturbed by noise. We compare several different possible definitions. Our main results are: For every n-bit Boolean function f there is an n-variate polynomial p of degree O(n) that robustly approximates it, in the sense that p(x) remains close to f(x) if we slightly vary each of the n inputs of the polynomial. There is an O(n)-query quantum algorithm that robustly recovers n noisy input bits. Hence every n-bit function can be quantum computed with O(n) queries in the presence of noise. This contrasts with the classical model of Feige et al., where functions such as parity need Theta(n log n) queries. We give several extensions and applications of these results.", "paper_title": "Robust polynomials and quantum algorithms", "paper_id": "WOS:000245244400005"}