{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "imperative_programs"}, {"score": 0.004635881163634672, "phrase": "orthogonal_mechanisms"}, {"score": 0.004330099613414957, "phrase": "novel_mechanism"}, {"score": 0.0041374874583908535, "phrase": "program_termination"}, {"score": 0.003748937184382714, "phrase": "second-order_termination_constraints"}, {"score": 0.0035820833812158035, "phrase": "relational_assumptions"}, {"score": 0.003448705829033573, "phrase": "hoare-style_verification"}, {"score": 0.003245520963944678, "phrase": "case_analysis"}, {"score": 0.002985484575498061, "phrase": "specification_logic_form"}, {"score": 0.002874257080906824, "phrase": "current_approaches"}, {"score": 0.002254003531073337, "phrase": "sample_programs"}, {"score": 0.002203200914130907, "phrase": "recent_termination_competition"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_termination_analyzers"}], "paper_keywords": ["Languages", " Theory", " Verification", " Program termination and non-termination analysis", " Bi-abductive inference", " Hoare logic"], "paper_abstract": "Techniques for proving termination and non-termination of imperative programs are usually considered as orthogonal mechanisms. In this paper, we propose a novel mechanism that analyzes and proves both program termination and non-termination at the same time. We first introduce the concept of second-order termination constraints and accumulate a set of relational assumptions on them via a Hoare-style verification. We then solve these assumptions with case analysis to determine the (conditional) termination and non-termination scenarios expressed in some specification logic form. In contrast to current approaches, our technique can construct a summary of terminating and non-terminating behaviors for each method. This enables modularity and reuse for our termination and non-termination proving processes. We have tested our tool on sample programs from a recent termination competition, and compared favorably against state-of-the-art termination analyzers.", "paper_title": "Termination and Non-termination Specification Inference", "paper_id": "WOS:000361284200046"}