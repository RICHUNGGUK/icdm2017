{"auto_keywords": [{"score": 0.046800023565389516, "phrase": "index_size"}, {"score": 0.00481495049065317, "phrase": "predecessor_search"}, {"score": 0.004406994912939125, "phrase": "patrascu-thorup_data_structures"}, {"score": 0.0040097139701644165, "phrase": "optimal_probe_complexity"}, {"score": 0.003757480190200645, "phrase": "space_complexity"}, {"score": 0.0036481158025940016, "phrase": "z-fast_trie"}, {"score": 0.0036052633308076933, "phrase": "belazzougui_et_al"}, {"score": 0.003091767402370757, "phrase": "inter-register_operations"}, {"score": 0.002914288956035066, "phrase": "weak_prefix_search_problem"}, {"score": 0.002620040660435039, "phrase": "technical_contributions"}, {"score": 0.0025892330566358503, "phrase": "highly_efficient_single_word_indices"}, {"score": 0.0024118292918742967, "phrase": "fusion_tree_node"}, {"score": 0.002286781334850213, "phrase": "highly_efficient_bit_selectors"}, {"score": 0.002181069180139225, "phrase": "independent_interest"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Successor search", " Predecessor search", " Succinct data structures", " Cell probe model", " Fusion trees", " Tries", " Word RAM model"], "paper_abstract": "Wegive a new predecessor data structure which improves upon the index size of the Patrascu-Thorup data structures, reducing the index size from O(nw(4/5)) bits to O(n log w) bits, with optimal probe complexity. Alternatively, our new data structure can be viewed as matching the space complexity of the (probe-suboptimal) z-fast trie of Belazzougui et al. Thus, we get the best of both approaches with respect to both probe count and index size. The penalty we pay is an extra O(log w) inter-register operations. Our data structure can also be used to solve the weak prefix search problem, the index size of O(n log w) bits is known to be optimal for any such data structure. The technical contributions include highly efficient single word indices, with out-degree w/logw(compared to w(1/5) of a fusion tree node). To construct these indices we device highly efficient bit selectors which, we believe, are of independent interest. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Minimal indices for predecessor search", "paper_id": "WOS:000348667800003"}