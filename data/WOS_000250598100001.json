{"auto_keywords": [{"score": 0.049558064870310475, "phrase": "pdb"}, {"score": 0.00481495049065317, "phrase": "pattern_database"}, {"score": 0.00465944657565638, "phrase": "heuristic_function"}, {"score": 0.004558564684763264, "phrase": "lookup_table"}, {"score": 0.00441130431691048, "phrase": "optimal_solutions"}, {"score": 0.004363277689798392, "phrase": "subproblem_instances"}, {"score": 0.004315771670213371, "phrase": "standard_pdbs"}, {"score": 0.004245476558619167, "phrase": "distinct_entry"}, {"score": 0.004108288481894523, "phrase": "subproblem_instance"}, {"score": 0.003868142906199082, "phrase": "available_memory"}, {"score": 0.003429001377800258, "phrase": "domain-_independent_approaches"}, {"score": 0.0029091587159002503, "phrase": "best_compression_method"}, {"score": 0.0028460640294160383, "phrase": "domain-dependent_attributes"}, {"score": 0.0027843339377323878, "phrase": "experimental_results"}, {"score": 0.002709045632654716, "phrase": "combinatorial_problems"}, {"score": 0.002650279521276126, "phrase": "four-peg_towers_of_hanoi_problem"}, {"score": 0.002508867228980776, "phrase": "top-spin_puzzle"}, {"score": 0.002388043660169452, "phrase": "search_time"}, {"score": 0.002260591903283384, "phrase": "compressed_pdbs"}, {"score": 0.002223696715077018, "phrase": "uncompressed_pdbs"}], "paper_keywords": [""], "paper_abstract": "A pattern database (PDB) is a heuristic function implemented as a lookup table that stores the lengths of optimal solutions for subproblem instances. Standard PDBs have a distinct entry in the table for each subproblem instance. In this paper we investigate compressing PDBs that exceed available memory in their uncompressed form. We introduce a number of methods for determining which entries to merge and discuss their relative merits. These vary from domain- independent approaches that allow any set of entries in the PDB to be merged, to more intelligent methods that take into acocunt the structure of the problem. The choice of the best compression method is based on domain-dependent attributes. We present experimental results on a number of combinatorial problems, including the four-peg Towers of Hanoi problem, the sliding-tile puzzles, and the Top-Spin puzzle. For the Towers of Hanoi, we show that the search time can be reduced by up to three orders of magnitude by using compressed PDBs compared to uncompressed PDBs of the same size. More modest improvements were observed for the other domains.", "paper_title": "Compressed pattern databases", "paper_id": "WOS:000250598100001"}