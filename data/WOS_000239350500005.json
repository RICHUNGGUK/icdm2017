{"auto_keywords": [{"score": 0.02910524382253627, "phrase": "quantum_computing"}, {"score": 0.025032392208329042, "phrase": "haskell"}, {"score": 0.00481495049065317, "phrase": "quantum_effects"}, {"score": 0.004218602458288531, "phrase": "quantum_computation"}, {"score": 0.004081385289516914, "phrase": "density_matrices"}, {"score": 0.003309877074892399, "phrase": "effectful_part"}, {"score": 0.00280496585980086, "phrase": "resulting_executable_model"}, {"score": 0.0026543514413663893, "phrase": "haskell_programming_language"}, {"score": 0.002539689093411356, "phrase": "arrow_computations"}, {"score": 0.002200077887697072, "phrase": "faithful_model"}, {"score": 0.0021049977753042253, "phrase": "type_capabilities"}], "paper_keywords": [""], "paper_abstract": "We show that the model of quantum computation based on density matrices and superoperators can be decomposed into a pure classical (functional) part and an effectful part modelling probabilities and measurement. The effectful part can be modelled using a generalisation of monads called arrows. We express the resulting executable model of quantum computing in the Haskell programming language using its special syntax for arrow computations. However, the embedding in Haskell is not perfect: a faithful model of quantum computing requires type capabilities that are not directly expressible in Haskell.", "paper_title": "Structuring quantum effects: superoperators as arrows", "paper_id": "WOS:000239350500005"}