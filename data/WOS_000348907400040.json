{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asynchronous_programs"}, {"score": 0.039541503396406254, "phrase": "almost-synchronous_invariants"}, {"score": 0.0047588556219929756, "phrase": "almost-synchronous_reductions"}, {"score": 0.004461761855323898, "phrase": "asynchronous_message-passing_system"}, {"score": 0.004232475065285966, "phrase": "novel_reduction_scheme"}, {"score": 0.004183137595671171, "phrase": "asynchronous_event-driven_programs"}, {"score": 0.0041102032028337366, "phrase": "almost-synchronous_invariants_invariants"}, {"score": 0.003968112038249246, "phrase": "message_buffers"}, {"score": 0.003591542373891629, "phrase": "local_states"}, {"score": 0.0032505921489759224, "phrase": "natural_proofs"}, {"score": 0.002570296816631395, "phrase": "current_search_strategies"}, {"score": 0.0024667783849055634, "phrase": "high_point"}, {"score": 0.002339771435910601, "phrase": "windows_phone_usb_driver"}, {"score": 0.002206290313627494, "phrase": "responsiveness_property"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_model-checkers"}], "paper_keywords": ["natural proofs", " almost-synchronous reductions", " asynchronous programs", " concunency", " reductions", " distributed programs"], "paper_abstract": "We consider the problem of provably verifying that an asynchronous message-passing system satisfies its local assertions. We present a novel reduction scheme for asynchronous event-driven programs that finds almost-synchronous invariants invariants consisting of global states where message buffers are close to empty. The reduction finds almost-synchronous invariants and simultaneously argues that they cover all local states. We show that asynchronous programs often have almost-synchronous invariants and that we can exploit this to build natural proofs that they are correct. We implement our reduction strategy, which is sound and complete, and show that it is more effective in proving programs correct as well as more efficient in finding bugs in several programs, compared to current search strategies which almost always diverge. The high point of our experiments is that our technique can prove the Windows Phone USB Driver written in P [9] correct for the responsiveness property, which was hitherto not provable using state-of-the-art model-checkers.", "paper_title": "Natural Proofs for Asynchronous Programs using Almost-Synchronous Reductions", "paper_id": "WOS:000348907400040"}