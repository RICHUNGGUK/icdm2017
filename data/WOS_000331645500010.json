{"auto_keywords": [{"score": 0.0456315961504987, "phrase": "marked_vertex"}, {"score": 0.03444175794330928, "phrase": "weighted_average_number"}, {"score": 0.00481495049065317, "phrase": "average-case_tree_searching_problem"}, {"score": 0.004298666679374568, "phrase": "edge_queries"}, {"score": 0.004257067039134535, "phrase": "edge_query_e"}, {"score": 0.004041879818641576, "phrase": "worst-case_scenario"}, {"score": 0.003938383970047866, "phrase": "maximum_number"}, {"score": 0.0038375280115736958, "phrase": "linear_time_algorithms"}, {"score": 0.0037635782112965662, "phrase": "optimal_search_strategy"}, {"score": 0.003200045185608395, "phrase": "companion_paper"}, {"score": 0.0030480018094535158, "phrase": "bounded_diameter"}, {"score": 0.0029506624896613446, "phrase": "complexity_result"}, {"score": 0.002922069655177295, "phrase": "tight_algorithmic_analysis"}, {"score": 0.002893753089970741, "phrase": "bounded_degree_instances"}, {"score": 0.0028379381771661116, "phrase": "optimal_strategy"}, {"score": 0.0026252106881752067, "phrase": "worst_case"}, {"score": 0.002436289099444074, "phrase": "minimum_positive_likelihood"}, {"score": 0.0023507916951658455, "phrase": "maximum_degree"}, {"score": 0.0022830706430588482, "phrase": "non-trivial_exponential_time_algorithm"}, {"score": 0.002224510044064184, "phrase": "bounded_degree"}, {"score": 0.0021745003291048356, "phrase": "unbounded_instances"}, {"score": 0.002160419006055386, "phrase": "natural_greedy_strategy"}], "paper_keywords": ["Searching in trees", " Average case analysis", " Approximation algorithms", " FPTAS", " Decision trees"], "paper_abstract": "We study the following tree search problem: in a given tree T=(V,E) a vertex has been marked and we want to identify it. In order to locate the marked vertex, we can use edge queries. An edge query e asks in which of the two connected components of Ta-e the marked vertex lies. The worst-case scenario where one is interested in minimizing the maximum number of queries is well understood, and linear time algorithms are known for finding an optimal search strategy. Here we study the more involved average-case analysis: A function w:V -> a\"e(+) is given which measures the likelihood for a vertex to be the one marked, and we seek to determine the strategy (decision tree) that minimizes the weighted average number of queries. In a companion paper we prove that the above tree search problem is -complete even for the class of trees of bounded diameter or bounded degree. Here, we match this complexity result with a tight algorithmic analysis of the bounded degree instances. We show that any optimal strategy (i.e., one that minimizes the weighted average number of queries) performs at most O(Delta(T)(log|V|+log(w(T)/w (min)))) queries in the worst case, where w(T) is the sum of the likelihoods of the vertices of T, w (min) is the minimum positive likelihood over the vertices of T and Delta(T) is the maximum degree of T. We combine this result with a non-trivial exponential time algorithm to provide an FPTAS for trees with bounded degree. We also show that for unbounded instances a natural greedy strategy attains a 1.62-approximation, improving upon the best known 14-approximation guarantee, previously provided by two of the authors.", "paper_title": "Improved Approximation Algorithms for the Average-Case Tree Searching Problem", "paper_id": "WOS:000331645500010"}