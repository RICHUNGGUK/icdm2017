{"auto_keywords": [{"score": 0.035366979368155665, "phrase": "mlcbf"}, {"score": 0.00481495049065317, "phrase": "adaptive_stateful_replication_for_stream_processing_engines"}, {"score": 0.004760017604908536, "phrase": "high-availability_cluster"}, {"score": 0.0047057084749407485, "phrase": "stateful_stream_process_engines"}, {"score": 0.004652016085325825, "phrase": "high_availability_clusters"}, {"score": 0.004494570360108983, "phrase": "large_number"}, {"score": 0.004443276312972159, "phrase": "concurrent_flow_states"}, {"score": 0.004243862930012258, "phrase": "reliable_functionality"}, {"score": 0.004171402455813099, "phrase": "high_traffic_loads"}, {"score": 0.004123781267600542, "phrase": "existing_solutions"}, {"score": 0.003961330917648707, "phrase": "precise_stateful_replication"}, {"score": 0.0036763623220059933, "phrase": "replication_representation"}, {"score": 0.003613556291453534, "phrase": "replication_scheme"}, {"score": 0.003431481042678356, "phrase": "hashing_structure"}, {"score": 0.0033922781038328844, "phrase": "multilevel_counting_bloom_filter"}, {"score": 0.0032398798149196432, "phrase": "low_resource-consuming_solution"}, {"score": 0.003006654007926993, "phrase": "theoretic_analysis"}, {"score": 0.0029722900280316216, "phrase": "extensive_trace-based_tests"}, {"score": 0.002938317647182056, "phrase": "trace-based_simulation"}, {"score": 0.0028550709503536494, "phrase": "network_and_memory_requirements"}, {"score": 0.0027424619603260837, "phrase": "url_categorization"}, {"score": 0.002444544487772349, "phrase": "adaptive_scheme"}, {"score": 0.002191489192077851, "phrase": "hac._testbed_evaluation"}, {"score": 0.0021049977753042253, "phrase": "overloaded_hac."}], "paper_keywords": ["Multiple hash functions", " bloom filters", " adaptive method", " high availability", " replication"], "paper_abstract": "Stateful stream process engines in high availability clusters (HACs) track a large number of concurrent flow states and replicate them to backups to provide reliable functionality. Under high traffic loads, existing solutions in such HACs are expensive owing to precise stateful replication. This work presents two novel methods to address this issue: randomization on replication representation and a replication scheme designed for when system becomes overloaded. A hashing structure called Multilevel Counting Bloom Filter (MLCBF) is proposed as a low resource-consuming solution of stateful replication. Its performance and tradeoffs are then evaluated based on theoretic analysis and extensive trace-based tests. Trace-based simulation reveals that MLCBF reduces network and memory requirements of replication typically by over 90 percent for URL categorization. Most importantly, MLCBF is quite as simple and practical for implementation and maintenance. Moreover, an adaptive scheme called dynamic lazy insertion is designed to prevent replication from overloading system continuously and optimize the throughput of HAC. Testbed evaluation demonstrates its feasibility and effectiveness in an overloaded HAC.", "paper_title": "Efficient and Adaptive Stateful Replication for Stream Processing Engines in High-Availability Cluster", "paper_id": "WOS:000295163500003"}