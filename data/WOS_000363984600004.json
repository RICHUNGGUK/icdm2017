{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_programming_algorithm"}, {"score": 0.004709193603747991, "phrase": "exemplar_breakpoint_distance_problem"}, {"score": 0.004605748839642513, "phrase": "conserved_sets"}, {"score": 0.004405596416783185, "phrase": "respective_exemplars"}, {"score": 0.004289686492089576, "phrase": "breakpoint_distance"}, {"score": 0.004139850082354509, "phrase": "repeated_gene"}, {"score": 0.0034807976670686628, "phrase": "algorithm_design"}, {"score": 0.0032129675521135616, "phrase": "maximum_physical_span"}, {"score": 0.0029789104204803137, "phrase": "fixed-parameter_algorithm"}, {"score": 0.002861961643289598, "phrase": "dynamic_programming_approach"}, {"score": 0.002537880772794665, "phrase": "second_genome"}, {"score": 0.0023113506171584157, "phrase": "maximum_adjacencies"}, {"score": 0.0021910825909008946, "phrase": "randomly_generated_data"}, {"score": 0.0021049977753042253, "phrase": "software_package"}], "paper_keywords": ["algorithm", " breakpoint", " exemplar", " genome", " span"], "paper_abstract": "The exemplar breakpoint distance problem is motivated by finding conserved sets of genes between two genomes. It asks to find respective exemplars in two genomes to minimize the breakpoint distance between them. If one genome has no repeated gene (called trivial genome) and the other has genes repeating at most twice, it is referred to as the (1, 2)-exemplar breakpoint distance problem, EBD(1, 2) for short. Little has been done on algorithm design for this problem by now. In this article, we propose a parameter to describe the maximum physical span between two copies of a gene in a genome, and based on it, design a fixed-parameter algorithm for EBD(1, 2). Using a dynamic programming approach, our algorithm can take O(4(s)n(2)) time and O(4(s)n) space to solve an EBD(1, 2) instance that has two genomes of n genes where the second genome has each two copies of a gene spanning at most s copies of the genes. Our algorithm can also be used to compute the maximum adjacencies between two genomes. The algorithm has been implemented in C++. Simulations on randomly generated data have verified the effectiveness of our algorithm. The software package is available from the authors.", "paper_title": "A Dynamic Programming Algorithm For (1,2)-Exemplar Breakpoint Distance", "paper_id": "WOS:000363984600004"}