{"auto_keywords": [{"score": 0.046955526858105924, "phrase": "steiner"}, {"score": 0.00481495049065317, "phrase": "euclidean_prize-collecting_steiner_forest"}, {"score": 0.004645057834614705, "phrase": "steiner_forest"}, {"score": 0.004441059405327222, "phrase": "k-steiner_forest"}, {"score": 0.004303591748086452, "phrase": "input_graph"}, {"score": 0.004208002469225673, "phrase": "euclidean_plane"}, {"score": 0.004114527599108734, "phrase": "euclidean_distances"}, {"score": 0.003987126862293129, "phrase": "simpler_analysis"}, {"score": 0.003933736547198066, "phrase": "polynomial-time_approximation_scheme"}, {"score": 0.00384633057714983, "phrase": "borradaile_et_al"}, {"score": 0.003677280504320636, "phrase": "computer_science"}, {"score": 0.0036444062896142247, "phrase": "focs"}, {"score": 0.0034529760173586583, "phrase": "euclidean_steiner_forest_problem"}, {"score": 0.00333097896868937, "phrase": "new_structural_property"}, {"score": 0.0032716011062067286, "phrase": "dynamic_programming"}, {"score": 0.0032132782979796895, "phrase": "new_piece"}, {"score": 0.003141830113006653, "phrase": "dynamic_programming_state"}, {"score": 0.003058255772156222, "phrase": "ptas"}, {"score": 0.0030171910207671205, "phrase": "well-motivated_case"}, {"score": 0.0026362590493392785, "phrase": "broad_class"}, {"score": 0.0026126405272417783, "phrase": "bicriteria_ptass"}, {"score": 0.0023557346035701096, "phrase": "general_euclidean_case"}, {"score": 0.0022318655527987846, "phrase": "multiplicative_case"}, {"score": 0.002105010628169209, "phrase": "marx"}], "paper_keywords": ["Steiner forest", " Pize-collecting", " Euclidean", " Approximation algorithms"], "paper_abstract": "In this paper, we consider Steiner forest and its generalizations, prize-collecting Steiner forest and k-Steiner forest, when the vertices of the input graph are points in the Euclidean plane and the lengths are Euclidean distances. First, we present a simpler analysis of the polynomial-time approximation scheme (PTAS) of Borradaile et al. (Proceedings of the 49th annual IEEE symposium on foundations of computer science, FOCS, pp. 115-124, 2008) for the Euclidean Steiner forest problem. This is done by proving a new structural property and modifying the dynamic programming by adding a new piece of information to each dynamic programming state. Next we develop a PTAS for a well-motivated case, i.e., the multiplicative case, of prize-collecting and budgeted Steiner forest. The ideas used in the algorithm may have applications in design of a broad class of bicriteria PTASs; see Sect. 1.3. At the end, we demonstrate why PTASs for these problems can be hard in the general Euclidean case (and thus for PTASs we cannot go beyond the multiplicative case). In fact, this conjecture was later proved by Bateni, Hajiaghayi and Marx (1006.4339 [abs], 2009).", "paper_title": "Euclidean Prize-Collecting Steiner Forest", "paper_id": "WOS:000298852300014"}