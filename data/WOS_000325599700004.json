{"auto_keywords": [{"score": 0.03806431507322747, "phrase": "squire's_recurrence"}, {"score": 0.010359068272175533, "phrase": "gray_code_order"}, {"score": 0.010234666021250016, "phrase": "ruskey"}, {"score": 0.007890644753871159, "phrase": "gray_code"}, {"score": 0.0055175653851149255, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "efficient_generation"}, {"score": 0.004098791256221743, "phrase": "squire"}, {"score": 0.0036627245728600073, "phrase": "recent_article"}, {"score": 0.0033637374697995616, "phrase": "recently_published_article"}, {"score": 0.0032828707713809155, "phrase": "pruesse"}, {"score": 0.0025423706961391034, "phrase": "possible_cases"}, {"score": 0.002406799309495983, "phrase": "squire's_algorithm"}, {"score": 0.0023133947578542, "phrase": "ruskey's_program"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Poset", " Hamiltonian cycle", " Gray code", " Algorithm"], "paper_abstract": "Pruesse and Ruskey presented an algorithm for generating their Gray code for the ideals of a poset, where two adjacent ideals differ by one or two elements. Their algorithm takes O(n) amortized time per ideal, where n is the number of elements in the poset. Squire presented a recurrence for the ideals of a poset that enabled him to find an algorithm for generating these ideals in O(log n) amortized time per ideal, but not in Gray code order. In a recent article, we used Squire's recurrence to find a Gray code for the ideals of a poset, where two adjacent ideals differ by one or two elements. Our algorithm, presented in a recently published article, has the same complexity as that of Pruesse and Ruskey, but it generates a Gray code that is different from the one generated by their algorithm. In this article, we generalize Squire's recurrence. Squire's recurrence includes a condition that enables his algorithm to run in O(log n) amortized time per ideal. We propose a less restrictive condition than his. This condition, along with our generalization of Squire's recurrence, enabled us to improve the complexity of our algorithm. We implemented our algorithm and tested it on several examples which together illustrate most of the possible cases. We found that the running time of our program is almost the same as that of our program of Squire's algorithm for all those posets. For most of those posets, the running time of Ruskey's program is close to that of each of the other two programs, whereas for some posets it is much greater than that of either of the other two programs. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Efficient generation of the ideals of a poset in gray code order, part II", "paper_id": "WOS:000325599700004"}