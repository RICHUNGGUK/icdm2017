{"auto_keywords": [{"score": 0.04899883615751873, "phrase": "power-aware_real-time_scheduling"}, {"score": 0.035240068277609664, "phrase": "pinwheel_model"}, {"score": 0.00481495049065317, "phrase": "pinwheel_scheduling"}, {"score": 0.004579147045265106, "phrase": "critical_design_issue"}, {"score": 0.004537525607322823, "phrase": "embedded_systems"}, {"score": 0.004455409162867219, "phrase": "battery-operated_systems"}, {"score": 0.0043947942344037105, "phrase": "high_performance"}, {"score": 0.004315249628884236, "phrase": "battery_life"}, {"score": 0.004256533389293113, "phrase": "interesting_challenge"}, {"score": 0.0042178318724732005, "phrase": "system_designers"}, {"score": 0.004179480763003705, "phrase": "dynamic_voltage_scaling"}, {"score": 0.0040111533608228195, "phrase": "supply_voltage"}, {"score": 0.003974673997871831, "phrase": "processor_frequency"}, {"score": 0.0038849148160362257, "phrase": "workload_demand"}, {"score": 0.003849579089885659, "phrase": "better_energy_management"}, {"score": 0.0037626342268042997, "phrase": "high_complexity"}, {"score": 0.0036275736378775757, "phrase": "online_power-aware_real-time_scheduling"}, {"score": 0.0032064196784562017, "phrase": "start_times"}, {"score": 0.0029666322924554274, "phrase": "system_predictability"}, {"score": 0.0028863414975346512, "phrase": "better_control"}, {"score": 0.0028082176224611542, "phrase": "job_execution_time"}, {"score": 0.0025981315738078793, "phrase": "profiling_tool"}, {"score": 0.002527788827701828, "phrase": "runtime_information"}, {"score": 0.0025047659706737215, "phrase": "real-time_tasks"}, {"score": 0.0024819522818492284, "phrase": "worst_case_execution_time"}, {"score": 0.002349357968054711, "phrase": "actual_execution"}, {"score": 0.0022136780933978612, "phrase": "proposed_scheduling_algorithm"}, {"score": 0.0021049977753042253, "phrase": "profiling_technique"}], "paper_keywords": ["power-aware real-time scheduling", " pinwheel model", " dynamic voltage scaling", " embedded systems", " profiling"], "paper_abstract": "Energy consumption is a critical design issue in embedded systems, especially in battery-operated systems. Maintaining high performance while extending the battery life is an interesting challenge for system designers. Dynamic voltage scaling and dynamic frequency scaling allow us to adjust supply voltage and processor frequency to adapt to the workload demand for better energy management. Because of the high complexity involved, most solutions depend on heuristics for online power-aware real-time scheduling or offline time-consuming scheduling. In this paper, we discuss how we can apply pinwheel model to power-aware real-time scheduling so that task information, including start times, finish times, preemption times, etc, can be efficiently derived using pinwheel model. System predictability is thus increased and under better control on power-awareness. However, job execution time may be only a small portion of its worst case execution time and can only be determined at runtime. We implement a profiling tool to insert codes for collecting runtime information of real-time tasks. Worst case execution time is updated online for scheduler to perform better rescheduling according to actual execution. Simulations have shown that at most 50% energy can be saved by the proposed scheduling algorithm. Moreover, at most additional 33% energy can be saved when the profiling technique is applied.", "paper_title": "Applying pinwheel scheduling and compiler profiling for power-aware real-time scheduling", "paper_id": "WOS:000239049800003"}