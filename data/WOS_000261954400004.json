{"auto_keywords": [{"score": 0.04205516846635205, "phrase": "inspector_stage"}, {"score": 0.00481495049065317, "phrase": "inspector-executor_paradigm"}, {"score": 0.0045411156682300695, "phrase": "novel_multiple_phase"}, {"score": 0.00445332728705756, "phrase": "generic_block-cyclic_distributions"}, {"score": 0.003935267970727093, "phrase": "communication_pattern"}, {"score": 0.0038092152998069786, "phrase": "required_datatypes"}, {"score": 0.0035458802311188497, "phrase": "executor_stage"}, {"score": 0.0034099718632933027, "phrase": "file_accesses"}, {"score": 0.003194898129853895, "phrase": "repetitive_file"}, {"score": 0.0031741489723036255, "phrase": "access_patterns"}, {"score": 0.0026969099161088398, "phrase": "inspector_cost"}, {"score": 0.002477753633057247, "phrase": "multiple_phase"}, {"score": 0.0023213398100616132, "phrase": "art_approaches"}, {"score": 0.0022912596877648723, "phrase": "experimental_results"}, {"score": 0.002232261129770455, "phrase": "small_access_granularities"}, {"score": 0.00214659338413584, "phrase": "large_majority"}], "paper_keywords": ["Parallel computing", " Parallel file systems", " Performance evaluation", " Parallel I/O", " Parallel programming"], "paper_abstract": "In this paper, we present a novel multiple phase I/O collective technique for generic block-cyclic distributions. The I/O technique is divided into two stages: inspector and executor. During the inspector stage, the communication pattern is computed and the required datatypes are automatically generated. This information is used during the executor stage in performing the communication and file accesses. The two stages are decoupled, so that for repetitive file access patterns, the computations from the inspector stage can be performed once and reused several times by the executor. This strategy allows to amortize the inspector cost over several I/O operations. In this paper, we evaluate the performance of multiple phase I/O collective technique and we compare it with other state of the art approaches. Experimental results show that for small access granularities, our method outperforms in the large majority of cases other parallel I/O optimizations techniques.", "paper_title": "A collective I/O implementation based on inspector-executor paradigm", "paper_id": "WOS:000261954400004"}