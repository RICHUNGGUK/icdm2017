{"auto_keywords": [{"score": 0.04274518365190482, "phrase": "maximum_influence"}, {"score": 0.015366886500071997, "phrase": "software_systems"}, {"score": 0.014224604404794084, "phrase": "influence_maximization"}, {"score": 0.01384176449871971, "phrase": "software_networks"}, {"score": 0.012296909584276811, "phrase": "influence_behavior"}, {"score": 0.010387892198480362, "phrase": "degree_distributions"}, {"score": 0.00481495049065317, "phrase": "maximum_influence_and_degree_distributions"}, {"score": 0.004598933498016774, "phrase": "complex_networks"}, {"score": 0.004392565073466714, "phrase": "network_analysis"}, {"score": 0.004157058883925715, "phrase": "important_nodes"}, {"score": 0.003809628721278519, "phrase": "network_fabric"}, {"score": 0.0037060428445111664, "phrase": "highly_influential_nodes"}, {"score": 0.0035722806911457545, "phrase": "class_dependence_graph"}, {"score": 0.003539601615371423, "phrase": "cdg"}, {"score": 0.0034751259234824913, "phrase": "eight_practical_java_software_systems"}, {"score": 0.0030414140732789186, "phrase": "artificial_nature"}, {"score": 0.0030135741897058844, "phrase": "cdg_networks"}, {"score": 0.002931569771634119, "phrase": "scale_free_behavior"}, {"score": 0.0028914057633212045, "phrase": "in-degree_distribution"}, {"score": 0.002799810685137358, "phrase": "out-degree_distribution"}, {"score": 0.002686284749214443, "phrase": "expected_influence_spread"}, {"score": 0.0025892330566358503, "phrase": "greedy_method"}, {"score": 0.002461472107682778, "phrase": "identified_influence"}, {"score": 0.002427732996314194, "phrase": "influential_classes"}, {"score": 0.0022041312401435346, "phrase": "software_engineering"}, {"score": 0.0021342613107011624, "phrase": "new_approaches"}, {"score": 0.0021049977753042253, "phrase": "optimization_procedures"}], "paper_keywords": ["software network", " scale free", " influence maximization", " power law", " complex network"], "paper_abstract": "Software systems can be represented as complex networks and their artificial nature can be investigated with approaches developed in network analysis. Influence maximization has been successfully applied on software networks to identify the important nodes that have the maximum influence on the other parts. However, research is open to study the effects of network fabric on the influence behavior of the highly influential nodes. In this paper, we construct class dependence graph (CDG) networks based on eight practical Java software systems, and apply the procedure of influence maximization to study empirically the correlations between the characteristics of maximum influence and the degree distributions in the software networks. We demonstrate that the artificial nature of CDG networks is reflected partly from the scale free behavior: the in-degree distribution follows power law, and the out-degree distribution is lognormal. For the influence behavior, the expected influence spread of the maximum influence set identified by the greedy method correlates significantly with the degree distributions. In addition, the identified influence set contains influential classes that are complex in both the number of methods and the lines of code (LOG). For the applications in software engineering, the results provide possibilities of new approaches in designing optimization procedures of software systems.", "paper_title": "Correlations between characteristics of maximum influence and degree distributions in software networks", "paper_id": "WOS:000337259300002"}