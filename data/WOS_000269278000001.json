{"auto_keywords": [{"score": 0.031151190237917438, "phrase": "non-local_means"}, {"score": 0.00481495049065317, "phrase": "gaussian_kd-trees"}, {"score": 0.0047804843375940835, "phrase": "fast_high-dimensional"}, {"score": 0.0046118021635786315, "phrase": "broad_class"}, {"score": 0.004578783486828809, "phrase": "non-linear_filters"}, {"score": 0.004276610897002087, "phrase": "similar_way"}, {"score": 0.004066740842661956, "phrase": "vector_space"}, {"score": 0.003937273640906994, "phrase": "weighted_linear_combination"}, {"score": 0.003798231095121328, "phrase": "gaussian_function"}, {"score": 0.0036509280916606937, "phrase": "pixel_colors"}, {"score": 0.003459191419478298, "phrase": "gaussian_blur"}, {"score": 0.0032075033252058835, "phrase": "five-dimensional_space-color_volume"}, {"score": 0.003038983069081333, "phrase": "local_patches"}, {"score": 0.002984794722633428, "phrase": "associated_pixel"}, {"score": 0.002889672003089062, "phrase": "monte-carlo_kd-tree_sampling_algorithm"}, {"score": 0.0027181663098561066, "phrase": "gpu_implementation"}, {"score": 0.0026032523182547003, "phrase": "accelerated_bilateral_filter"}, {"score": 0.0022218413146898887, "phrase": "d-dimensional_space"}, {"score": 0.0021049977753042253, "phrase": "existing_methods"}], "paper_keywords": ["bilateral filter", " non-local means", " geometry filtering", " denoising"], "paper_abstract": "We propose a method for accelerating a broad class of non-linear filters that includes the bilateral, non-local means, and other related filters. These filters can all be expressed in a similar way: First, assign each value to be filtered a position in some vector space. Then, replace every value with a weighted linear combination of all values, with weights determined by a Gaussian function of distance between the positions. If the values are pixel colors and the positions are (x, y) coordinates, this describes a Gaussian blur. If the positions are instead (x, y, r, g, b) coordinates in a five-dimensional space-color volume, this describes a bilateral filter. If we instead set the positions to local patches of color around the associated pixel, this describes non-local means. We describe a Monte-Carlo kd-tree sampling algorithm that efficiently computes any filter that can be expressed in this way, along with a GPU implementation of this technique. We use this algorithm to implement an accelerated bilateral filter that respects full 3D color distance; accelerated non-local means on single images, volumes, and unaligned bursts of images for denoising; and a fast adaptation of non-local means to geometry. If we have n values to filter, and each is assigned a position in a d-dimensional space, then our space complexity is O(dn) and our time complexity is O(dn log n), whereas existing methods are typically either exponential in d or quadratic in n.", "paper_title": "Gaussian KD-Trees for Fast High-Dimensional Filtering", "paper_id": "WOS:000269278000001"}