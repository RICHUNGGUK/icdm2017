{"auto_keywords": [{"score": 0.04029022923409539, "phrase": "document_order"}, {"score": 0.030343089550264365, "phrase": "xquery_expressions"}, {"score": 0.004832762679569154, "phrase": "context"}, {"score": 0.004475436844227947, "phrase": "known_problem"}, {"score": 0.0043464021636703066, "phrase": "unnecessary_internal_element_construction"}, {"score": 0.004221072004655573, "phrase": "variable_elimination"}, {"score": 0.004159763048814389, "phrase": "xml_processing"}, {"score": 0.0037001842068098184, "phrase": "xquery"}, {"score": 0.003081272473508291, "phrase": "first_xquery_fusion"}, {"score": 0.002680932410366204, "phrase": "context_representation"}, {"score": 0.002565626044684815, "phrase": "dewey_order_encoding"}, {"score": 0.0024915167458844914, "phrase": "context-preserving_xquery_fusion"}, {"score": 0.002401875938287542, "phrase": "static_emulation"}, {"score": 0.0023496433751182162, "phrase": "xml_store"}], "paper_keywords": [""], "paper_abstract": "This paper solves the known problem of elimination of unnecessary internal element construction as well as variable elimination in XML processing with (a subset of) XQuery without ignoring the issues of document order. The semantics of XQuery is context sensitive and requires preservation of document order. In this paper, we propose, as far as we are aware, the first XQuery fusion that can deal with both the document order and the context of XQuery expressions. More specifically, we carefully design a context representation of XQuery expressions based on the Dewey order encoding, develop a context-preserving XQuery fusion for ordered trees by static emulation of the XML store, and prove that our fusion is correct. Our XQuery fusion has been implemented, and all the examples in this paper have passed through the system.", "paper_title": "Context-preserving XQuery fusion", "paper_id": "WOS:000352509400007"}