{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fast_error_estimation"}, {"score": 0.004769182299692333, "phrase": "efficient_support_vector_machine"}, {"score": 0.004503525064934708, "phrase": "off-the-shelf_solution"}, {"score": 0.004252602474733162, "phrase": "resulting_machines"}, {"score": 0.00401560412621627, "phrase": "practical_applications"}, {"score": 0.003977403701783668, "phrase": "extremely_fast_response"}, {"score": 0.0037199473428123175, "phrase": "full_svm_model"}, {"score": 0.003529364798514874, "phrase": "large_computational_cost"}, {"score": 0.0034459835582278746, "phrase": "reduction_algorithms"}, {"score": 0.003348513474852869, "phrase": "local_minima"}, {"score": 0.00326939082861424, "phrase": "additional_non-negligible_computational_cost"}, {"score": 0.003131637033429892, "phrase": "semiparametric_model"}, {"score": 0.003087017178815267, "phrase": "good_compromise"}, {"score": 0.0030285084113651035, "phrase": "machine_size"}, {"score": 0.0029147869733574844, "phrase": "potential_benefits"}, {"score": 0.00276534038425712, "phrase": "semiparametric_svm_growing_process"}, {"score": 0.002648768009464535, "phrase": "fee_method"}, {"score": 0.002598543802992702, "phrase": "best_node"}, {"score": 0.002488985155689794, "phrase": "growing_step"}, {"score": 0.0023954743066925714, "phrase": "lowest_cross-validation_error"}, {"score": 0.0023388183537341213, "phrase": "proposed_approach"}, {"score": 0.0022188370388602813, "phrase": "real_world"}, {"score": 0.002176747110119268, "phrase": "uci_machine"}, {"score": 0.002166349705365602, "phrase": "learning_repository"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Fast error estimation", " Growing", " Semiparametric", " Support vector machine"], "paper_abstract": "Support vector machines (SVMs) have become an off-the-shelf solution to solve many machine learning tasks but, unfortunately, the size of the resulting machines is quite often exceedingly large, which hampers their use in those practical applications demanding extremely fast response. Some methods exist to prune the models after training, but a full SVM model needs to be trained first, which usually represents a large computational cost. Furthermore, the reduction algorithms are prone to fall in local minima and also represent an additional non-negligible computational cost. Alternative procedures based on incrementally growing a semiparametric model provide a good compromise between complexity, machine size and performance. We investigate here the potential benefits of a fast error estimation (FEE) mechanism to improve the semiparametric SVM growing process. Precisely, we propose to use the FEE method to identify the best node to be added to the model in every growing step, by selecting the candidate with the lowest cross-validation error. We evaluate the proposed approach by evaluating the performance of the algorithm in benchmarks with real world datasets from the UCI machine learning repository. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Fast error estimation for efficient support vector machine growing", "paper_id": "WOS:000275643000057"}