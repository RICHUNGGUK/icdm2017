{"auto_keywords": [{"score": 0.03386332385628929, "phrase": "proposed_method"}, {"score": 0.010612387000973441, "phrase": "genetic_algorithm"}, {"score": 0.004663533386096864, "phrase": "major_causes"}, {"score": 0.004621148492564008, "phrase": "software_failures"}, {"score": 0.004516856326107826, "phrase": "undesirable_performance-overhead"}, {"score": 0.004455409162867219, "phrase": "main_shortcomings"}, {"score": 0.0043947942344037105, "phrase": "state-of-the-art_software-based_methods"}, {"score": 0.004103817210338686, "phrase": "main_questions"}, {"score": 0.003832031470970347, "phrase": "vulnerable_sections"}, {"score": 0.0036275736378775757, "phrase": "software-based_method"}, {"score": 0.0031627430133087616, "phrase": "dynamic_behavior"}, {"score": 0.0029666322924554274, "phrase": "fault-injection_experiments"}, {"score": 0.002610043728801011, "phrase": "statistical_fault_injection"}, {"score": 0.0024819522818492284, "phrase": "error_coverage"}, {"score": 0.002360132221690264, "phrase": "injection_space"}, {"score": 0.002254571365634257, "phrase": "fault_injection"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Soft-error", " Vulnerable blocks", " Genetic algorithm", " Detection coverage", " Performance overhead", " Fault injection"], "paper_abstract": "Soft-errors are one of the major causes of software failures. Restricted reliability-improvement and undesirable performance-overhead are the main shortcomings of the state-of-the-art software-based methods to detect and recover soft-errors in a program. One of the main questions in this area of study is that which sections of the program, as the vulnerable sections, need to be duplicated against soft-errors? We propose a software-based method to tolerate soft-errors, as selective-replication, which precisely identifies and hardens the most vulnerable blocks of a program. Using the genetic algorithm (GA), the proposed method takes the dynamic behavior of the programs into consideration to identify the most vulnerable blocks. The results of fault-injection experiments show that, with about 30% duplication and about 24% performance-overhead, the proposed method leads to 82% error-detection coverage. Furthermore, the proposed method can be used to improve the efficiency of the statistical fault injection (SFI) methods which are used to evaluate the error coverage of a technique or reliability of a program; the injection space in a program is reduced about 30% by avoiding the fault injection in the derating-blocks which were identified by the proposed method. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "An efficient vulnerability-driven method for hardening a program against soft-error using genetic algorithm", "paper_id": "WOS:000368046000003"}