{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "overlay_construction"}, {"score": 0.004775531918452571, "phrase": "peer-to-peer_live_streaming"}, {"score": 0.004084744133085742, "phrase": "service_delay"}, {"score": 0.004018087343963485, "phrase": "short_tree"}, {"score": 0.003968806706727518, "phrase": "delay_optimization"}, {"score": 0.0038403151693333017, "phrase": "tree_reliability"}, {"score": 0.0037776319581225046, "phrase": "sometimes_more_critical_fora_streaming_internet_service"}, {"score": 0.0034506596895901003, "phrase": "peer_layout"}, {"score": 0.0031649018957020337, "phrase": "analytical_results"}, {"score": 0.0029027394930867902, "phrase": "depth-optimized_tree"}, {"score": 0.002797121441432477, "phrase": "heap_algorithm"}, {"score": 0.002565345470805401, "phrase": "difference_layers"}, {"score": 0.002492425259337031, "phrase": "simple_metric"}, {"score": 0.0022117133940361025, "phrase": "service_reliability"}, {"score": 0.0021755548389283856, "phrase": "extensive_simulations"}, {"score": 0.002139986159978777, "phrase": "new_algorithm"}, {"score": 0.0021224200236681498, "phrase": "better_comprehensive_performance"}, {"score": 0.0021049977753042253, "phrase": "existing_algorithms"}], "paper_keywords": ["overlay construction", " peer-to-peer", " streaming", " reliability"], "paper_abstract": "For single-source, single-tree-based peer-to-peer live media streaming, it is generally believed that a short (and wide) tree has a good comprehensive performance in terms of reliability and service delay. While the short tree directly benefits delay optimization, it is unclear whether such a structure maximizes tree reliability, which is sometimes more critical fora streaming Internet service. This article studies several prevalent overlay construction algorithms from the aspects of (1) service reliability, (2) service delay, and (3) protocol overhead. Two types of peer layout, bandwidth-ordered layout and time-ordered layout, are identified, and their performance is evaluated. The analytical results show that, by appropriately placing peers according to their time properties, the tree achieves a much higher degree of reliability than the depth-optimized tree. This finding motivates the design of a heap algorithm, which aims for combining the strengths of both bandwidth ordering and time ordering. It dynamically moves peers between difference layers of the tree according to a simple metric and gradually adjusts the tree toward a layout partially ordered in time and partially ordered in bandwidth. In so doing, the tree has advantages in both service reliability and delay. Extensive simulations show that this new algorithm achieves better comprehensive performance than existing algorithms.", "paper_title": "Performance analysis and improvement of overlay construction for peer-to-peer live streaming", "paper_id": "WOS:000237835700002"}