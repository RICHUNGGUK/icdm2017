{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "task_granularity"}, {"score": 0.0043947942344037105, "phrase": "end_users"}, {"score": 0.0040111533608228195, "phrase": "execution_conditions"}, {"score": 0.003867206750827, "phrase": "system_administration"}, {"score": 0.0037626342268042997, "phrase": "non-clairvoyant_conditions"}, {"score": 0.003418327319110734, "phrase": "scientific_workflows"}, {"score": 0.0031483163191080425, "phrase": "workflow_executions"}, {"score": 0.0029802289354540507, "phrase": "previous_executions"}, {"score": 0.0029396242707327986, "phrase": "appropriate_actions"}, {"score": 0.002860062341014677, "phrase": "appropriate_ranges"}, {"score": 0.0025862736445290088, "phrase": "slowdown_variability"}, {"score": 0.002349357968054711, "phrase": "granularity_control"}, {"score": 0.002327956449278255, "phrase": "fairness_control"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["distributed computing infrastructures", " task granularity", " fairness", " scientific workflows", " online conditions", " non-clairvoyant conditions"], "paper_abstract": "Distributed computing infrastructures are commonly used for scientific computing, and science gateways provide complete middleware stacks to allow their transparent exploitation by end users. However, administrating such systems manually is time consuming and sub-optimal because of the complexity of the execution conditions. Algorithms and frameworks aiming at automating system administration must deal with online and non-clairvoyant conditions, where most parameters are unknown and evolve over time. We consider the problem of controlling task granularity and fairness among scientific workflows executed in these conditions. We present two self-managing loops monitoring the fineness, coarseness, and fairness of workflow executions, comparing these metrics with thresholds extracted from knowledge acquired in previous executions and planning appropriate actions to maintain these metrics to appropriate ranges. Experiments on the European Grid Infrastructure show that our task granularity control can speed up executions up to a factor of 2 and that our fairness control reduces slowdown variability by 3-7 compared with first-come, first-served. We also study the interaction between granularity control and fairness control: our experiments demonstrate that controlling task granularity degrades fairness but that our fairness control algorithm can compensate this degradation. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Controlling fairness and task granularity in distributed, online, non-clairvoyant workflow executions", "paper_id": "WOS:000342806400002"}