{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hoare_type_theory"}, {"score": 0.028038871449425018, "phrase": "separation_logic"}, {"score": 0.004690952711665194, "phrase": "previous_work"}, {"score": 0.0044138518088939335, "phrase": "htt"}, {"score": 0.004262881313926916, "phrase": "effectful_higher-order_functions"}, {"score": 0.004081385289516914, "phrase": "hoare_logic_specifications"}, {"score": 0.003976203286249396, "phrase": "unified_framework"}, {"score": 0.003459191419478298, "phrase": "modular_treatment"}, {"score": 0.0027581067089091434, "phrase": "modular_state_specifications"}, {"score": 0.0024201029474586007, "phrase": "essential_ingredient"}, {"score": 0.002237477619351199, "phrase": "higher-order_functions"}, {"score": 0.0021049977753042253, "phrase": "spatial_connectives"}], "paper_keywords": ["type theory", " Hoare Logic", " separation logic"], "paper_abstract": "In previous work, we proposed a Hoare Type Theory (HTT) which combines effectful higher-order functions, dependent types and Hoare Logic specifications into a unified framework. However, the framework did not support polymorphism, and failed to provide a modular treatment of state in specifications. In this paper, we address these shortcomings by showing that the addition of polymorphism alone is sufficient for capturing modular state specifications in the style of Separation Logic. Furthermore, we argue that polymorphism is an essential ingredient of the extension, as the treatment of higher-order functions requires operations not encodable via the spatial connectives of Separation Logic.", "paper_title": "Polymorphism and separation in Hoare Type Theory", "paper_id": "WOS:000202972400007"}