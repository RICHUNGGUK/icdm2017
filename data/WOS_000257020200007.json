{"auto_keywords": [{"score": 0.0445238517082911, "phrase": "mopso"}, {"score": 0.036156713977722486, "phrase": "multiobjective_local_search"}, {"score": 0.00481495049065317, "phrase": "multiobjective_permutation_flow_shop_scheduling"}, {"score": 0.00470862827326028, "phrase": "hybrid_algorithm"}, {"score": 0.00465634671242413, "phrase": "particle_swarm_optimization"}, {"score": 0.004621894065943451, "phrase": "pso"}, {"score": 0.004553510708976456, "phrase": "multiobjective_permutation_flow_shop_scheduling_problem"}, {"score": 0.0044695432851061525, "phrase": "typical_np-hard_combinatorial_optimization_problem"}, {"score": 0.004306205029641728, "phrase": "proposed_multiobjective_algorithm"}, {"score": 0.004195418010131832, "phrase": "parallel_evolution_mechanism"}, {"score": 0.004118026552723285, "phrase": "individual_improvement"}, {"score": 0.004087469540575263, "phrase": "population_cooperation"}, {"score": 0.003724034990158436, "phrase": "scheduling_problems"}, {"score": 0.0036281710561308377, "phrase": "random_key_technique"}, {"score": 0.0035744997458371335, "phrase": "continuous_position_values"}, {"score": 0.0035216195857272403, "phrase": "job_permutations"}, {"score": 0.0033801845720347118, "phrase": "nawaz-enscore-ram_heuristic"}, {"score": 0.003280891942617853, "phrase": "specified_probability"}, {"score": 0.003232341244892437, "phrase": "exploitation_ability"}, {"score": 0.003149094460617212, "phrase": "searching_behavior"}, {"score": 0.003102488033561956, "phrase": "premature_convergence"}, {"score": 0.0030338645940033875, "phrase": "simulated_annealing"}, {"score": 0.0030113280682863234, "phrase": "multiple_different_neighborhoods"}, {"score": 0.0029447150254434842, "phrase": "adaptive_meta-lamarckian_learning_strategy"}, {"score": 0.002784540221128404, "phrase": "multiple_different_searching_operations"}, {"score": 0.002722930209707764, "phrase": "real_pareto_front"}, {"score": 0.002613487968156893, "phrase": "random_weighted_linear_sum_function"}, {"score": 0.0025461386232786356, "phrase": "single_one"}, {"score": 0.0025272158996086378, "phrase": "solution_evaluation"}, {"score": 0.002480520548392772, "phrase": "evolution_process"}, {"score": 0.0024529174827030787, "phrase": "multiobjective_sense"}, {"score": 0.0023719332915829268, "phrase": "searching_direction"}, {"score": 0.0023021895404322767, "phrase": "good_diversity"}, {"score": 0.002259642580775186, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_hybrid_algorithm"}], "paper_keywords": ["adaptive meta-Lamarckian learning", " hybrid algorithm", " local search", " multiobjective optimization (MOO)", " Pareto front", " particle swarm optimization (PSO)", " permutation flow shop scheduling"], "paper_abstract": "This paper proposes a hybrid algorithm based on particle swarm optimization (PSO) for a multiobjective permutation flow shop scheduling problem, which is a typical NP-hard combinatorial optimization problem with strong engineering backgrounds. Not only does the proposed multiobjective algorithm (named MOPSO) apply the parallel evolution mechanism of PSO characterized by individual improvement, population cooperation, and competition to effectively perform exploration but it also utilizes several adaptive local search methods to perform exploitation. First, to make PSO suitable for solving scheduling problems, a ranked-order value (ROV) rule based on a random key technique to convert the continuous position values of particles to job permutations is presented. Second, a multiobjective local search based on the Nawaz-Enscore-Ram heuristic is applied to good solutions with a specified probability to enhance the exploitation ability. Third, to enrich the searching behavior and to avoid premature convergence, a multiobjective local search based on simulated annealing with multiple different neighborhoods is designed, and an adaptive meta-Lamarckian learning strategy is employed to decide which neighborhood will be used. Due to the fusion of multiple different searching operations, good solutions approximating the real Pareto front can be obtained. In addition, MOPSO adopts a random weighted linear sum function to aggregate multiple objectives to a single one for solution evaluation and for guiding the evolution process in the multiobjective sense. Due to the randomness of weights, searching direction can be enriched, and solutions with good diversity can be obtained. Simulation results and comparisons based on a variety of instances demonstrate the effectiveness, efficiency, And robustness of the proposed hybrid algorithm.", "paper_title": "An effective PSO-based hybrid algorithm for multiobjective permutation flow shop scheduling", "paper_id": "WOS:000257020200007"}