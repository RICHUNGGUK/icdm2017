{"auto_keywords": [{"score": 0.02907660981165939, "phrase": "underlying_communication_mechanisms"}, {"score": 0.00481495049065317, "phrase": "cloud_runtime"}, {"score": 0.004765482708043842, "phrase": "cloud_runtimes"}, {"score": 0.004692227830462433, "phrase": "effective_method"}, {"score": 0.004410248125081398, "phrase": "runtime's_native_language"}, {"score": 0.004209893377338457, "phrase": "granules_cloud_runtime"}, {"score": 0.004145143433523008, "phrase": "bridge_framework"}, {"score": 0.003856053794343928, "phrase": "python"}, {"score": 0.003680587852807675, "phrase": "diagnostics_system"}, {"score": 0.003531474887552889, "phrase": "system_state"}, {"score": 0.003405948098114941, "phrase": "underlying_bridge_framework"}, {"score": 0.003336225354214798, "phrase": "system_load"}, {"score": 0.003267925215811654, "phrase": "dynamic_nature"}, {"score": 0.003234299589505403, "phrase": "granules_computations"}, {"score": 0.0030554300179552415, "phrase": "intermittent_cpu_bursts"}, {"score": 0.0029164434911787187, "phrase": "successive_rounds"}, {"score": 0.002643386043540555, "phrase": "granules_bridges"}, {"score": 0.00257586859792573, "phrase": "different_programming_languages"}, {"score": 0.0025361866386341796, "phrase": "multiple_methods"}, {"score": 0.002471400498582011, "phrase": "named_pipes"}, {"score": 0.002445950676329976, "phrase": "unnamed_pipes"}, {"score": 0.0023225701080913388, "phrase": "limited_resources"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Adaptive behavior", " Cloud runtime", " Granules", " Language bridges"], "paper_abstract": "Cloud runtimes are an effective method of distributing computations, but can force developers to use the runtime's native language for all computations. We have extended the Granules cloud runtime with a bridge framework that allows computations to be written in C, C++, C#, Python, and R. We have additionally developed a diagnostics system which is capable of gathering information on system state, as well as modifying the underlying bridge framework in response to system load. Given the dynamic nature of Granules computations, which can be characterized as long-running with intermittent CPU bursts that allow a state to build up during successive rounds of execution, these bridges need to be bidirectional and the underlying communication mechanisms decoupled, robust and configurable. Granules bridges handle a number of different programming languages and support multiple methods of communication such as named pipes, unnamed pipes, and sockets. This choice of underlying communication mechanisms allows limited resources, such as sockets, to remain available for use by the runtime. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive heterogeneous language support within a cloud runtime", "paper_id": "WOS:000295947900015"}