{"auto_keywords": [{"score": 0.03631612053351337, "phrase": "task_assignment"}, {"score": 0.03547124798636307, "phrase": "cache_behavior"}, {"score": 0.03189820721440473, "phrase": "overall_wcet"}, {"score": 0.015719716506582538, "phrase": "joint_task_assignment"}, {"score": 0.004586531354697466, "phrase": "wcet_minimization"}, {"score": 0.00453113241842654, "phrase": "mpsoc._cache"}, {"score": 0.00450368324850566, "phrase": "locking_technique"}, {"score": 0.0043161190928529755, "phrase": "tighter_prediction"}, {"score": 0.004263972370406983, "phrase": "worst-case_execution_time"}, {"score": 0.0042124558287278705, "phrase": "wcet"}, {"score": 0.003531474887552889, "phrase": "extended_unpredictability"}, {"score": 0.0034049123167891955, "phrase": "inherent_relevancy"}, {"score": 0.003070340620983981, "phrase": "dramatic_influences"}, {"score": 0.002735052488172277, "phrase": "mpsoc_systems"}, {"score": 0.0027019561451518768, "phrase": "cache_locking"}, {"score": 0.0025578967205807843, "phrase": "precise_wcet."}, {"score": 0.002481200970201421, "phrase": "joint_problem"}, {"score": 0.002451668831188071, "phrase": "np"}, {"score": 0.002348883765159185, "phrase": "experimental_results"}, {"score": 0.0022923586577645143, "phrase": "proposed_algorithms"}, {"score": 0.00218334762335187, "phrase": "previous_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["MPSoC", " Worst-case analysis", " Task assignment", " Cache partitioning"], "paper_abstract": "Cache locking technique is often utilized to guarantee a tighter prediction of Worst-Case Execution Time (WCET) which is one of the most important performance metrics for embedded systems. However, in Multi-Processor Systems-on-Chip (MPSoC) systems with multi-tasks, Level 2 (L2) cache is often shared among different tasks and cores, which leads to extended unpredictability of cache. Task assignment has inherent relevancy for cache behavior, while cache behavior also affects the efficiency of task assignment. Task assignment and cache behavior have dramatic influences on the overall WCET of MPSoC. This paper proposes joint task assignment and cache partitioning techniques to minimize the overall WCET for MPSoC systems. Cache locking is applied to each task to guarantee a precise WCET. We prove that the joint problem is NP-hard and propose several efficient algorithms. Experimental results show that the proposed algorithms can consistently reduce the overall WCET compared to previous techniques. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Joint task assignment and cache partitioning with cache locking for WCET minimization on MPSoC", "paper_id": "WOS:000295018500005"}