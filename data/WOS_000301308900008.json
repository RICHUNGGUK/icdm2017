{"auto_keywords": [{"score": 0.03304876018844092, "phrase": "agreeable_deadlines"}, {"score": 0.010612493553978879, "phrase": "dsa"}, {"score": 0.00608017365311857, "phrase": "multi-device_balancing_dsa"}, {"score": 0.004342430078306461, "phrase": "balancing_dsa"}, {"score": 0.0037075456471849892, "phrase": "srf_problem"}, {"score": 0.0035965032173588753, "phrase": "dsa_problem"}, {"score": 0.003426153049437162, "phrase": "np"}, {"score": 0.0029244418026475832, "phrase": "single-device_dsa_problems"}, {"score": 0.0025735173163957993, "phrase": "non-clairvoyant_algorithm"}, {"score": 0.0024511688853030168, "phrase": "clairvoyant_algorithm"}, {"score": 0.002264607102799332, "phrase": "general_jobs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Dynamic Storage Allocation", " Online algorithms", " Multiple device", " NP-completeness"], "paper_abstract": "We study the single-device Dynamic Storage Allocation (DSA) problem and the multi-device Balancing DSA problem in this paper. The goal is to dynamically allocate the job into memory to minimize the usage of space without concurrency. The SRF problem is just a variant of the DSA problem. Our results are as follows. The NP-completeness for the 2-SRF problem, 3-DSA problem, and DSA problem for jobs with agreeable deadlines. An improved 3-competitive algorithm for jobs with agreeable deadlines on single-device DSA problems. A 4-competitive algorithm for jobs with agreeable deadlines on multi-device Balancing DSA problems. Lower bounds for jobs with agreeable deadlines: any non-clairvoyant algorithm cannot be (2-epsilon)-competitive and any clairvoyant algorithm cannot be (1.54-epsilon)-competitive. The first O(log L)-competitive algorithm for general jobs on multi-device Balancing DSA problems without any assumption. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Single and multiple device DSA problems, complexities and online algorithms", "paper_id": "WOS:000301308900008"}