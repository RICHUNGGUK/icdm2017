{"auto_keywords": [{"score": 0.044380667726653916, "phrase": "data_robustness"}, {"score": 0.013986395475240136, "phrase": "data_confidentiality"}, {"score": 0.008504366355369419, "phrase": "cloud_storage"}, {"score": 0.0053962616544191815, "phrase": "storage_server_failure"}, {"score": 0.005056220328219384, "phrase": "storage_server_corruption"}, {"score": 0.00481495049065317, "phrase": "secure_erasure_code-based_storage_systems"}, {"score": 0.004313793774439379, "phrase": "stored_files"}, {"score": 0.004192571571622019, "phrase": "main_security_issues"}, {"score": 0.003944112858235306, "phrase": "encrypted_files"}, {"score": 0.003562186600028245, "phrase": "cloud_storage_services"}, {"score": 0.0035333055256187513, "phrase": "lin"}, {"score": 0.0035045962900658472, "phrase": "tzeng"}, {"score": 0.0034620119220744347, "phrase": "secure_erasure_code-based_storage_system"}, {"score": 0.00332375606483146, "phrase": "repair_mechanism"}, {"score": 0.0032700071110068323, "phrase": "new_storage_server"}, {"score": 0.003217124533918232, "phrase": "new_ciphertext"}, {"score": 0.003126623133221065, "phrase": "remaining_storage_servers"}, {"score": 0.002870066750788841, "phrase": "integrity_check_scheme"}, {"score": 0.002508663916554954, "phrase": "challenging_part"}, {"score": 0.0024480094603893175, "phrase": "homomorphic_integrity_tags"}, {"score": 0.0024281181691350085, "phrase": "new_integrity_tags"}, {"score": 0.002379092507901856, "phrase": "old_integrity_tags"}, {"score": 0.002359759876402679, "phrase": "storage_servers"}, {"score": 0.0023121112251855667, "phrase": "user's_secret_key"}, {"score": 0.0021309254505358253, "phrase": "overwhelming_probability"}, {"score": 0.0021049977753042253, "phrase": "successful_data_retrieval"}], "paper_keywords": ["Data confidentiality", " data robustness", " homomorphism", " integrity check", " secure decentralized erasure code"], "paper_abstract": "In the application of cloud storage, a user no longer possesses his files in his local depository. Thus, he is concerned about the security of the stored files. Data confidentiality and data robustness are the main security issues. For data confidentiality, the user can first encrypt files and then store the encrypted files in a cloud storage. For data robustness, there are two concerns: service failure, and service corruption. We are concerned about data robustness in cloud storage services. Lin and Tzeng proposed a secure erasure code-based storage system with multiple key servers recently. Their system supports a repair mechanism, where a new storage server can compute a new ciphertext from the ciphertexts obtained from the remaining storage servers. Their system considers data confidentiality in the cloud, and data robustness against storage server failure. In this paper, we propose an integrity check scheme for their system to enhance data robustness against storage server corruption, which returns tampered ciphertexts. With our integrity check scheme, their storage system can deal with not only the problem of storage server failure, but also the problem of storage server corruption. The challenging part of our work is to have homomorphic integrity tags. New integrity tags can be computed from old integrity tags by storage servers without involvement of the user's secret key or backup servers. We prove the security of our integrity check scheme formally, and establish the parameters for achieving an overwhelming probability of a successful data retrieval.", "paper_title": "An Effective Integrity Check Scheme for Secure Erasure Code-Based Storage Systems", "paper_id": "WOS:000360794600002"}