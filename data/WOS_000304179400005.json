{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reo_circuits"}, {"score": 0.04967710401179305, "phrase": "constraint_automata"}, {"score": 0.00916318083206002, "phrase": "reo_circuit"}, {"score": 0.004734452887852191, "phrase": "reo"}, {"score": 0.004674952036988355, "phrase": "coordination_language"}, {"score": 0.004539005582217309, "phrase": "different_systems"}, {"score": 0.004406994912939125, "phrase": "symbolic_execution"}, {"score": 0.004315048553208003, "phrase": "symbolic_representation"}, {"score": 0.004278807087784626, "phrase": "data_constraints"}, {"score": 0.003965975628742746, "phrase": "different_nodes"}, {"score": 0.003818210967854446, "phrase": "coordination_patterns"}, {"score": 0.003738514661289975, "phrase": "deadlocks"}, {"score": 0.003660452313567116, "phrase": "data_values"}, {"score": 0.0035539019235553897, "phrase": "reachability_analysis"}, {"score": 0.0034359094594153304, "phrase": "symbolic_execution_tree"}, {"score": 0.003378385493203297, "phrase": "regular_expressions"}, {"score": 0.0031710903727066313, "phrase": "upper_bound"}, {"score": 0.002951444412262927, "phrase": "symbolic_representations"}, {"score": 0.0024097920845706795, "phrase": "static_analysis"}, {"score": 0.002280990744438186, "phrase": "extracted_relations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Symbolic execution", " Reo", " Constraint automata", " Coordination languages", " Program verification", " Program validation"], "paper_abstract": "Reo is a coordination language that can be used to model different systems. We propose a technique for symbolic execution of Reo circuits using the symbolic representation of data constraints in Constraint Automata. This technique enables us to obtain the relations among the data that pass through different nodes in a circuit from which we infer the coordination patterns of the circuit. Deadlocks, which may involve data values, can also be checked using reachability analysis. As an alternative to constructing the symbolic execution tree, we use regular expressions and their derivatives which we obtain from our deterministic finite automata. We show that there is an upper bound of one for unfolding the cycles in constraint automata which is enough to reveal the relations between symbolic representations of inputs and outputs. In the presence of feedback in a Reo circuit a number of substitutions are necessary to make the relationship between successive input/output values explicit. The number of these substitutions depends on the number of buffers in the Reo circuit, and can be found by static analysis. We illustrate our technique on a set of Reo circuits to show the extracted relations between inputs and outputs. We have implemented a tool to automate our proposed technique. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Symbolic execution of Reo circuits using constraint automata", "paper_id": "WOS:000304179400005"}