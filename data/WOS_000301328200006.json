{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "decision_procedures"}, {"score": 0.004718897469501381, "phrase": "formal_methods"}, {"score": 0.004624751696958501, "phrase": "hardware_design"}, {"score": 0.004245051445971095, "phrase": "automatic_tools"}, {"score": 0.003876806615011266, "phrase": "equational_logic"}, {"score": 0.0037423521744765075, "phrase": "uninterpreted_symbols"}, {"score": 0.003704797078215222, "phrase": "linear_arithmetic"}, {"score": 0.0036491673002304326, "phrase": "usual_data-structures"}, {"score": 0.003332440548684892, "phrase": "propositional_solvers"}, {"score": 0.0031366648074858555, "phrase": "deducible_equalities"}, {"score": 0.002982307044758515, "phrase": "model_equalities"}, {"score": 0.0028642924503126154, "phrase": "classical_nelson-oppen_combination_procedure"}, {"score": 0.002821247621250663, "phrase": "simple_platform"}, {"score": 0.002764856305713066, "phrase": "convex_and_non-convex_theories"}, {"score": 0.0025892330566358503, "phrase": "original_abstract_framework"}, {"score": 0.002437012847684331, "phrase": "algorithmic_translation"}, {"score": 0.0023053339328456234, "phrase": "verit_solver"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal verification", " Automated theorem proving", " SMT solving", " Combination of decision procedures"], "paper_abstract": "Formal methods in software and hardware design often generate formulas that need to be validated, either interactively or automatically. Among the automatic tools, SMT (Satisfiability Modulo Theories) solvers are particularly suitable to discharge such proof obligations, as their input language is equational logic with symbols from various useful decidable fragments such as uninterpreted symbols, linear arithmetic, and usual data-structures like arrays or lists. In this paper, we present an approach to combine decision procedures and propositional solvers into an SMT-solver, based not only on the exchange of deducible equalities between decision procedures, but also on the generation of model equalities by decision procedures. This extends nicely the classical Nelson-Oppen combination procedure in a simple platform to smoothly combine convex and non-convex theories. We show the soundness and completeness of this approach using an original abstract framework to represent and reason about SMT-solvers. We then describe an algorithmic translation of this method, implemented in the kernel of the veriT solver (Bouton et al. (2009)) [9]. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Combining decision procedures by (model-)equality propagation", "paper_id": "WOS:000301328200006"}