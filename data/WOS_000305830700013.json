{"auto_keywords": [{"score": 0.04548812433856781, "phrase": "mapreduce"}, {"score": 0.00481495049065317, "phrase": "semiring_fusion"}, {"score": 0.004027031316965272, "phrase": "large_scale_data-intensive_parallel_programming"}, {"score": 0.003724034990158436, "phrase": "programming_theory"}, {"score": 0.003641713874009232, "phrase": "calculational_form"}, {"score": 0.0034437574674180365, "phrase": "generate-and-test_programming_paradigm"}, {"score": 0.0030451958332949735, "phrase": "novel_parallel_programming_framework"}, {"score": 0.0025461386232786356, "phrase": "homomorphisms_bridges"}, {"score": 0.0023807981747706376, "phrase": "efficient_implementations"}, {"score": 0.002276566401216226, "phrase": "filter-embedding_theorem"}, {"score": 0.002176887956041267, "phrase": "parallel_programs"}, {"score": 0.0021049977753042253, "phrase": "systematic_and_incremental_way"}], "paper_keywords": ["MapReduce", " List homomorphisms", " Functional programming", " Program transformation", " Program calculation", " Semiring computation"], "paper_abstract": "We show that MapReduce, the de facto standard for large scale data-intensive parallel programming, can be equipped with a programming theory in calculational form. By integrating the generate-and-test programming paradigm and semirings for aggregation of results, we propose a novel parallel programming framework for MapReduce. The framework consists of two important calculation theorems: the shortcut fusion theorem of semiring homomorphisms bridges the gap between specifications and efficient implementations, and the filter-embedding theorem helps to develop parallel programs in a systematic and incremental way.", "paper_title": "Filter-embedding semiring fusion for programming with MapReduce", "paper_id": "WOS:000305830700013"}