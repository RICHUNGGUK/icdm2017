{"auto_keywords": [{"score": 0.049596205816074275, "phrase": "malware"}, {"score": 0.00481495049065317, "phrase": "intelligent_malware_detection"}, {"score": 0.00469445816161498, "phrase": "serious_threat"}, {"score": 0.004600228893803583, "phrase": "catastrophic_disasters"}, {"score": 0.004011603024990615, "phrase": "substantial_problem"}, {"score": 0.00395101799538683, "phrase": "new_instances"}, {"score": 0.0037555742428544096, "phrase": "second_malware_attacks"}, {"score": 0.003606178185661875, "phrase": "rapid_proliferation"}, {"score": 0.00351582806482809, "phrase": "significant_human_effort_requirement"}, {"score": 0.0033588449972778004, "phrase": "inadequate_solution"}, {"score": 0.0032746712603464235, "phrase": "intelligent_malware_detection_system"}, {"score": 0.0031603487697867538, "phrase": "major_phases"}, {"score": 0.00309681702203087, "phrase": "feature_extraction"}, {"score": 0.0030038988468808845, "phrase": "learning_model"}, {"score": 0.0028263192354046245, "phrase": "semantic_signatures"}, {"score": 0.002727606388863445, "phrase": "learning_models"}, {"score": 0.002632332114727894, "phrase": "different_programming_styles"}, {"score": 0.002592523232809191, "phrase": "execution_files"}, {"score": 0.0024516267507109753, "phrase": "frequent_sub-graphs"}, {"score": 0.002426842369975213, "phrase": "common_code_sub-structures"}, {"score": 0.0023066199295447686, "phrase": "control_flow_graphs"}, {"score": 0.002271725588755076, "phrase": "experimental_results"}, {"score": 0.002237357942660354, "phrase": "improved_f-measure_rate"}, {"score": 0.002181227522730908, "phrase": "classic_graph-based_approach"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["malware", " intelligent detection", " semantic signature", " programming style", " frequent sub-graph", " CFG"], "paper_abstract": "Malware is a serious threat that has caused catastrophic disasters in recent decades. To deal with this issue, various approaches have been proposed. One effective and widely used method is signature-based detection. However, there is a substantial problem in detecting new instances; therefore, this method is solely useful for second malware attacks. In addition, owing to the rapid proliferation of malware and the significant human effort requirement to extract signatures, this approach is an inadequate solution; thus, an intelligent malware detection system is required. One of the major phases of such a system is feature extraction, used to construct a learning model. This paper introduces an approach to generate a group of semantic signatures, represented by a set of learning models, in which various features indicate the different programming styles of the execution files. A set of these signatures is obtained by mining frequent sub-graphs, common code sub-structures employed for malware writing, in a group of control flow graphs. The experimental results depict an improved F-measure rate in comparison with the classic graph-based approach. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Frequent sub-graph mining for intelligent malware detection", "paper_id": "WOS:000344322100018"}