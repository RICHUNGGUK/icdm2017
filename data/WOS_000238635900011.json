{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "two-dimensional_conflict-free_filters"}, {"score": 0.038043345179570524, "phrase": "lower_bound"}, {"score": 0.0301186586991193, "phrase": "worst_case"}, {"score": 0.004751011171658849, "phrase": "packet_classification"}, {"score": 0.0047130539259566465, "phrase": "advanced_functions"}, {"score": 0.004675398507423721, "phrase": "qos_routing"}, {"score": 0.004650461402054554, "phrase": "virtual_private_networks"}, {"score": 0.0046256566852302256, "phrase": "access_control"}, {"score": 0.00458869631642791, "phrase": "traditional_routers"}, {"score": 0.004503594685501314, "phrase": "destination_address"}, {"score": 0.00444377150105556, "phrase": "packet_classification_capability"}, {"score": 0.00437302709192313, "phrase": "multiple_header_fields"}, {"score": 0.004326488232412809, "phrase": "source_address"}, {"score": 0.004303404058571052, "phrase": "protocol_type"}, {"score": 0.00426900754050533, "phrase": "application_port_numbers"}, {"score": 0.004234884779773412, "phrase": "destination-based_forwarding"}, {"score": 0.004167451906343558, "phrase": "one-dimensional_packet_classification"}, {"score": 0.004079201887393388, "phrase": "one-dimensional_ip_lookup_problem"}, {"score": 0.0040465901036133975, "phrase": "multi-dimensional_packet_classification"}, {"score": 0.003876996400581697, "phrase": "ip_lookup"}, {"score": 0.003856301222065986, "phrase": "srinivisan_et_al"}, {"score": 0.0038254646057281232, "phrase": "v._srinivasan"}, {"score": 0.0038050434501581904, "phrase": "s._suri"}, {"score": 0.0037847308929559163, "phrase": "g._varghese"}, {"score": 0.0037344208641063637, "phrase": "tuple_space_search"}, {"score": 0.0035587591319367782, "phrase": "k-dimensional_filter_lookup"}, {"score": 0.0034554889970700993, "phrase": "header_field"}, {"score": 0.003346233959203152, "phrase": "binary_search"}, {"score": 0.003301733505307784, "phrase": "two-dimensional_filters"}, {"score": 0.0030063184802762775, "phrase": "filter_database"}, {"score": 0.002693611989967953, "phrase": "prefix_lookup_scheme"}, {"score": 0.0026294345532129368, "phrase": "filter_databases"}, {"score": 0.0025462308249913643, "phrase": "additional_filters"}, {"score": 0.0024263237087568464, "phrase": "experimental_results"}, {"score": 0.0024004522093009043, "phrase": "proposed_scheme"}, {"score": 0.00234324312505334, "phrase": "existing_schemes"}, {"score": 0.002244876254113051, "phrase": "source_and_destination_ip_prefixes"}, {"score": 0.00218550043626348, "phrase": "filter_sets"}, {"score": 0.0021738146596180404, "phrase": "arbitrarily_many_filtering_rules"}, {"score": 0.002162314537736242, "phrase": "ip"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["IP look-ups", " classifiers", " filter conflicts", " packet classifications", " VPN"], "paper_abstract": "Routers can use packet classification to support advanced functions such as QoS routing, virtual private networks and access control. Unlike traditional routers, which forward packets based on destination address only, routers with packet classification capability can forward packets based on multiple header fields, such as source address, protocol type, or application port numbers. The destination-based forwarding can be thought of as one-dimensional packet classification. While several efficient solutions are known for the one-dimensional IP lookup problem, the multi-dimensional packet classification has proved to be far more difficult. While an O(log w) time scheme is known for the IP lookup, Srinivisan et al. [V. Srinivasan, S. Suri, G. Varghese, Packet classification using tuple space search, in: Proceedings of SIGCOMM'99, 1999] show a lower bound of Omega(w(k-1)) for k-dimensional filter lookup, where w is the number of bits in a header field. In particular, this lower bound precludes the possibility of a binary search like scheme even for two-dimensional filters (say, IP source and destination pairs). In this paper, we examine this lower bound more closely, and discover that the lower bound depends crucially on conflicts in the filter database. We then show that for two-dimensional conflict-free filters, a binary search scheme does work! Our lookup scheme requires O(log 2 w) hashes in the worst case, and uses O(n log(2)w) memory. Alternatively, our algorithm can be viewed as making O(log w) calls to a prefix lookup scheme. It has been observed in practice that filter databases have very few conflicts, and these conflicts can be removed by adding additional filters (one per conflict). Thus, our scheme may also be quite practical. Our simulation and experimental results show that the proposed scheme also performs as good as or better than existing schemes. For example, on real fire-wall data sets with over 200 rules consisting of source and destination IP prefixes, our algorithm performs worst case 12 hashes. For filter sets containing arbitrarily many filtering rules with IP prefixes, the worst case search time guaranteed is utmost 25 hashes. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Fast packet classification for two-dimensional conflict-free filters", "paper_id": "WOS:000238635900011"}