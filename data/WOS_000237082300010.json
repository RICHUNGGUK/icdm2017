{"auto_keywords": [{"score": 0.039044723702949105, "phrase": "java_applications"}, {"score": 0.013753171310083133, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "ahead-of-time_optimization"}, {"score": 0.004763362836239534, "phrase": "java"}, {"score": 0.004686688155058031, "phrase": "loop_optimizations"}, {"score": 0.004611369021812453, "phrase": "loop_unrolling"}, {"score": 0.004512814529823301, "phrase": "invariant_code_motion"}, {"score": 0.004345363360869553, "phrase": "wide_variety"}, {"score": 0.00394264312173188, "phrase": "experimental_results"}, {"score": 0.003635600104609725, "phrase": "time_optimization"}, {"score": 0.003519561814102764, "phrase": "optimization_tools"}, {"score": 0.003334309053314909, "phrase": "soot_framework"}, {"score": 0.0032278559855285945, "phrase": "previous_papers"}, {"score": 0.0028195727965553367, "phrase": "performance_improvements"}, {"score": 0.0025167026017217926, "phrase": "jit_compilation"}, {"score": 0.0024896081630179194, "phrase": "class_size"}, {"score": 0.0021049977753042253, "phrase": "scientific_applications"}], "paper_keywords": [""], "paper_abstract": "Loop optimizations such as loop unrolling, unfolding and invariant code motion have long been used in a wide variety of compilers to improve the running time of applications. In this paper we present a series of experimental results detailing the effect these techniques have on the running time of Java applications following ahead of time optimization. We also detail the optimization tools and transformations developed for this paper which extend the SOOT framework discussed in a number of previous papers on the subject. Our experimentation, conducted on the SciMark 2.0 benchmarking suite, demonstrates that when optimized using the techniques mentioned, Java applications can benefit from performance improvements of up to 20%. We finish with a discussion of the results obtained, including results on how the optimizations affect JIT compilation and class size and proceed to argue that ahead-of-time loop unrolling and unfolding optimization may have a role to play in improving the performance of Java applications, particularly in scientific applications.", "paper_title": "Loop transformations in the ahead-of-time optimization of Java bytecode", "paper_id": "WOS:000237082300010"}