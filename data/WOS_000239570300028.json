{"auto_keywords": [{"score": 0.04512022970606561, "phrase": "ua"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_utility_accrual_real-time_scheduling"}, {"score": 0.004437115547184535, "phrase": "first_utility_accrual"}, {"score": 0.003802135020791801, "phrase": "real-time_activities"}, {"score": 0.003600351201298387, "phrase": "variable_execution_time_demands"}, {"score": 0.003503497128638099, "phrase": "resource_overloads"}, {"score": 0.0034092396400930446, "phrase": "total_activity_utilization_demand"}, {"score": 0.0033175095965171674, "phrase": "total_capacity"}, {"score": 0.0030017207229983385, "phrase": "optimal_total_utility"}, {"score": 0.0028944757265206332, "phrase": "special_case"}, {"score": 0.0027407299369891502, "phrase": "individual_activity_utility_lower_bounds"}, {"score": 0.002548331088496964, "phrase": "system-wide_total_accrued_utility"}, {"score": 0.0021049977753042253, "phrase": "algorithm's_effectiveness"}], "paper_keywords": [""], "paper_abstract": "We present the first Utility Accrual (or UA) real-time scheduling algorithm for multiprocessors, called gMUA. The algorithm considers an application model where real-time activities are subject to time/utility function time constraints, variable execution time demands, and resource overloads where the total activity utilization demand exceeds the total capacity of all processors. We establish several properties of gMUA including optimal total utility (for a special case), conditions under which individual activity utility lower bounds are satisfied, a lower bound on system-wide total accrued utility, and bounded sensitivity for assurances to variations in execution time demand estimates. Our simulation experiments confirm our analysis and illustrate the algorithm's effectiveness.", "paper_title": "On multiprocessor utility accrual real-time scheduling with statistical timing assurances", "paper_id": "WOS:000239570300028"}