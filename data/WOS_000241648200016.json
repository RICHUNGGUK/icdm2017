{"auto_keywords": [{"score": 0.04925367071541478, "phrase": "modular_arithmetic"}, {"score": 0.00481495049065317, "phrase": "modular_arithmetic_formulae"}, {"score": 0.004610058444728656, "phrase": "underlying_integral_computation_model"}, {"score": 0.004530552828603269, "phrase": "conventional_programming_languages"}, {"score": 0.004189337956225294, "phrase": "satisfiability_problem"}, {"score": 0.0041170581247889654, "phrase": "propositional_formulae"}, {"score": 0.003941746077126688, "phrase": "finite_ring"}, {"score": 0.0037087324991876727, "phrase": "upper_bound"}, {"score": 0.003399466007862412, "phrase": "alternation-free_presburger_arithmetic"}, {"score": 0.002806595775343074, "phrase": "efficient_reduction"}, {"score": 0.0027581067089091434, "phrase": "integer_programming"}, {"score": 0.0023782753249846794, "phrase": "non-linear_modular_arithmetic_formulae"}, {"score": 0.0021049977753042253, "phrase": "efficient_integer_programming_packages"}], "paper_keywords": [""], "paper_abstract": "Modular arithmetic is the underlying integral computation model in conventional programming languages. In this paper, we discuss the satisfiability problem of propositional formulae in modular arithmetic over the finite ring Z(2 omega). Although an upper bound of 2(2O)((n4)) can be obtained by solving alternation-free Presburger arithmetic, it is easy to see that the problem is in fact NP-complete. Further, we give an efficient reduction to integer programming with the number of constraints and variables linear in the length of the given linear modular arithmetic formula. For non-linear modular arithmetic formulae, an additional factor of omega is needed. With the advent of efficient integer programming packages, our algorithm could be useful to software verification in practice.", "paper_title": "On the satisfiability of modular arithmetic formulae", "paper_id": "WOS:000241648200016"}