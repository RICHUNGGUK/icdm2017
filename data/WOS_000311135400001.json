{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "planning_community"}, {"score": 0.004654642380553263, "phrase": "plan_help"}, {"score": 0.003772793879444995, "phrase": "safety_properties"}, {"score": 0.00357362651129581, "phrase": "novel_algorithms"}, {"score": 0.0033393377529146893, "phrase": "general_class"}, {"score": 0.002915701586760994, "phrase": "greater_applicability"}, {"score": 0.0027060037347363987, "phrase": "computed_plans"}, {"score": 0.002598034157587518, "phrase": "experimental_results"}, {"score": 0.0022682274656069643, "phrase": "applicability_conditions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Automated planning", " Plans with loops", " Plan verification", " Reachability in abacus programs", " Generalized planning"], "paper_abstract": "The utility of including loops in plans has been long recognized by the planning community. Loops in a plan help increase both its applicability and the compactness of its representation. However, progress in finding such plans has been limited largely due to lack of methods for reasoning about the correctness and safety properties of loops of actions. We present novel algorithms for determining the applicability and progress made by a general class of loops of actions. These methods can be used for directing the search for plans with loops towards greater applicability while guaranteeing termination, as well as in post-processing of computed plans to precisely characterize their applicability. Experimental results demonstrate the efficiency of these algorithms. We also discuss the factors which can make the problem of determining applicability conditions for plans with loops incomputable. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Applicability conditions for plans with loops: Computability results and algorithms", "paper_id": "WOS:000311135400001"}