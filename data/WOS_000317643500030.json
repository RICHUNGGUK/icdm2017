{"auto_keywords": [{"score": 0.039624636080800406, "phrase": "pre-specified_kernel"}, {"score": 0.010447642841853953, "phrase": "optimal_kernel"}, {"score": 0.00481495049065317, "phrase": "learning_optimal_neighborhood_kernels"}, {"score": 0.004684157900507474, "phrase": "pivotal_role"}, {"score": 0.004647442352794694, "phrase": "kernel-based_methods"}, {"score": 0.004521179256835894, "phrase": "optimal_neighborhood_kernel_learning"}, {"score": 0.004485735417293941, "phrase": "onkl"}, {"score": 0.004363846362238565, "phrase": "promising_classification_performance"}, {"score": 0.004129873531628877, "phrase": "\"pre-specified\"_kernel"}, {"score": 0.003970439654470374, "phrase": "principled_way"}, {"score": 0.003728000957725218, "phrase": "extra_variable"}, {"score": 0.003626626504149897, "phrase": "optimal_neighborhood_kernel"}, {"score": 0.003584025547693833, "phrase": "structure_parameters"}, {"score": 0.003555902292752528, "phrase": "support_vector_machines"}, {"score": 0.003500313767208306, "phrase": "trivial_solutions"}, {"score": 0.0033917213078141373, "phrase": "parameterized_model"}, {"score": 0.003247868216333148, "phrase": "particular_high-light_its_adaptivity"}, {"score": 0.0030735451757603555, "phrase": "common_gaussian_radial_basis_function_kernel"}, {"score": 0.002966438503447793, "phrase": "base_kernels"}, {"score": 0.00290855128461017, "phrase": "multiple_kernel_learning"}, {"score": 0.0027307746993761035, "phrase": "min-max_problem"}, {"score": 0.0026355812883224203, "phrase": "extended_level_method"}, {"score": 0.0026148807877309417, "phrase": "nesterov's_method"}, {"score": 0.0025436978068459565, "phrase": "probabilistic_interpretation"}, {"score": 0.002455009746748708, "phrase": "existing_kernel_learning_methods"}, {"score": 0.0023600807990911145, "phrase": "comprehensive_experimental_results"}, {"score": 0.002268814162496699, "phrase": "joint_learning_process"}, {"score": 0.002155412043665635, "phrase": "superior_classification_performance"}, {"score": 0.002130056082139311, "phrase": "original_onkl"}, {"score": 0.0021049977753042253, "phrase": "related_mkl_algorithms"}], "paper_keywords": ["Multiple kernel learning (MKL)", " optimal neighborhood kernel learning (ONKL)", " support vector machines (SVMs)"], "paper_abstract": "Learning an optimal kernel plays a pivotal role in kernel-based methods. Recently, an approach called optimal neighborhood kernel learning (ONKL) has been proposed, showing promising classification performance. It assumes that the optimal kernel will reside in the neighborhood of a \"pre-specified\" kernel. Nevertheless, how to specify such a kernel in a principled way remains unclear. To solve this issue, this paper treats the pre-specified kernel as an extra variable and jointly learns it with the optimal neighborhood kernel and the structure parameters of support vector machines. To avoid trivial solutions, we constrain the pre-specified kernel with a parameterized model. We first discuss the characteristics of our approach and in particular high-light its adaptivity. After that, two instantiations are demonstrated by modeling the pre-specified kernel as a common Gaussian radial basis function kernel and a linear combination of a set of base kernels in the way of multiple kernel learning (MKL), respectively. We show that the optimization in our approach is a min-max problem and can be efficiently solved by employing the extended level method and Nesterov's method. Also, we give the probabilistic interpretation for our approach and apply it to explain the existing kernel learning methods, providing another perspective for their commonness and differences. Comprehensive experimental results on 13 UCI data sets and another two real-world data sets show that via the joint learning process, our approach not only adaptively identifies the pre-specified kernel, but also achieves superior classification performance to the original ONKL and the related MKL algorithms.", "paper_title": "An Adaptive Approach to Learning Optimal Neighborhood Kernels", "paper_id": "WOS:000317643500030"}