{"auto_keywords": [{"score": 0.04252420525659764, "phrase": "tuple_clustering"}, {"score": 0.00481495049065317, "phrase": "database_performance"}, {"score": 0.004686963264680882, "phrase": "mixed_fragmentation_design"}, {"score": 0.004481132747216135, "phrase": "database_operations"}, {"score": 0.0042459818200777846, "phrase": "efficient_storage_structure_design"}, {"score": 0.0035794251590584563, "phrase": "combined_problem"}, {"score": 0.0032716011062067286, "phrase": "novel_approach"}, {"score": 0.0031845067058084613, "phrase": "mixed_fragmentation_problem"}, {"score": 0.003071965703296204, "phrase": "genetic_algorithm"}, {"score": 0.0024311346712789553, "phrase": "database_access_cost_reduction"}, {"score": 0.00216263228969761, "phrase": "varying_genetic_parameters"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution"}], "paper_keywords": ["Mixed fragmentation", " Attribute partitioning", " Tuple clustering", " Genetic algorithms", " Database performance", " Data Mining"], "paper_abstract": "The performance of database operations can be enhanced with an efficient storage structure design using attribute partitioning and/or tuple clustering. Previous research deals mostly with attribute partitioning. We address here the combined problem of attribute partitioning and tuple clustering. We propose a novel approach for this mixed fragmentation problem by applying a genetic algorithm iteratively to attribute partitioning and tuple clustering sub-problems. We compared our results to attribute-only partitioning and random search solution, resulting in a database access cost reduction of upto 70% and 67% respectively. We analyzed the effect of varying genetic parameters on the optimal solution through experimentation.", "paper_title": "Improving database performance with a mixed fragmentation design", "paper_id": "WOS:000311029800001"}