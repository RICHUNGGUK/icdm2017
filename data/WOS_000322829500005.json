{"auto_keywords": [{"score": 0.0379174999603017, "phrase": "pbig_algorithm"}, {"score": 0.015719716506582538, "phrase": "pairwise_box_intersection"}, {"score": 0.013384500583422358, "phrase": "large-scale_datasets"}, {"score": 0.004647911247507267, "phrase": "large-scale_simulations"}, {"score": 0.004582722012454012, "phrase": "box_intersection_checking"}, {"score": 0.004486640769041646, "phrase": "common_task"}, {"score": 0.004180622964109706, "phrase": "fast_box_intersection"}, {"score": 0.003923023699005215, "phrase": "parallel_algorithm"}, {"score": 0.003760137090849196, "phrase": "graphics_processing_units"}, {"score": 0.003310813458610484, "phrase": "planning_phase"}, {"score": 0.003195787852087248, "phrase": "small_cells"}, {"score": 0.0029150253706493852, "phrase": "mapping_phase"}, {"score": 0.002735194789581153, "phrase": "checking_phase"}, {"score": 0.002677744558540711, "phrase": "box_intersections"}, {"score": 0.002408052242408488, "phrase": "pipelined_execution"}, {"score": 0.002259426425685765, "phrase": "experimental_results"}], "paper_keywords": ["Box intersection checking", " load-balancing", " data compression", " pipelined execution"], "paper_abstract": "Box intersection checking is a common task used in many large-scale simulations. Traditional methods cannot provide fast box intersection checking with large-scale datasets. This article presents a parallel algorithm to perform Pairwise Box Intersection checking on Graphics processing units (PBIG). The PBIG algorithm consists of three phases: planning, mapping and checking. The planning phase partitions the space into small cells, the sizes of which are determined to optimize performance. The mapping phase maps the boxes into the cells. The checking phase examines the box intersections in the same cell. Several performance optimizations, including load-balancing, output data compression/encoding, and pipelined execution, are presented for the PBIG algorithm. The experimental results show that the PBIG algorithm can process large-scale datasets and outperforms three well-performing algorithms.", "paper_title": "Optimizing Pairwise Box Intersection Checking on GPUs for Large-Scale Simulations", "paper_id": "WOS:000322829500005"}