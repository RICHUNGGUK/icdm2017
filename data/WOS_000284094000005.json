{"auto_keywords": [{"score": 0.034692465572853035, "phrase": "semi-honest_model"}, {"score": 0.00481495049065317, "phrase": "malicious_adversaries"}, {"score": 0.00473509474652851, "phrase": "efficient_framework"}, {"score": 0.004687815426832587, "phrase": "secure_multi-party_numerical_computations"}, {"score": 0.004641005983799053, "phrase": "peer-to-peer_network"}, {"score": 0.004458375125223899, "phrase": "collaborative_filtering"}, {"score": 0.004240116703465252, "phrase": "computing_nodes"}, {"score": 0.004073196909500369, "phrase": "joint_computation"}, {"score": 0.003952316497572257, "phrase": "rich_literature"}, {"score": 0.0038867116254051363, "phrase": "distributed_systems_security"}, {"score": 0.003860774424566198, "phrase": "secure_multi-party_computation"}, {"score": 0.0035507457285983268, "phrase": "theoretical_algorithms"}, {"score": 0.00351525021580923, "phrase": "security_domain"}, {"score": 0.0031579462920888132, "phrase": "private_information"}, {"score": 0.0030950988205648605, "phrase": "secure_multi-party_numerical_computation"}, {"score": 0.0030233510365494406, "phrase": "single_light-weight_scheme"}, {"score": 0.002953261517737546, "phrase": "extensive_simulation_results"}, {"score": 0.0029335351665967396, "phrase": "real_internet_topologies"}, {"score": 0.0027710786693798534, "phrase": "second_model"}, {"score": 0.0027250276317603507, "phrase": "malicious_peers_model"}, {"score": 0.0024478477463201302, "phrase": "fourth_scheme"}, {"score": 0.002367137788925062, "phrase": "malicious_peers"}, {"score": 0.0023434465472518943, "phrase": "proposed_scheme"}, {"score": 0.0023199918653986342, "phrase": "higher_complexity"}, {"score": 0.0021049977753042253, "phrase": "desired_level"}], "paper_keywords": ["Peer-to-Peer", " Secure multi-party computation", " Byzantine agreement", " Jacobi algorithm", " Numerical iterative methods"], "paper_abstract": "We propose an efficient framework for enabling secure multi-party numerical computations in a Peer-to-Peer network. This problem arises in a range of applications such as collaborative filtering, distributed computation of trust and reputation, monitoring and other tasks, where the computing nodes are expected to preserve the privacy of their inputs while performing a joint computation of a certain function. Although there is a rich literature in the field of distributed systems security concerning secure multi-party computation, in practice it is hard to deploy those methods in very large scale Peer-to-Peer networks. In this work, we try to bridge the gap between theoretical algorithms in the security domain, and a practical Peer-to-Peer deployment. We consider two security models. The first is the semi-honest model where peers correctly follow the protocol, but try to reveal private information. We provide three possible schemes for secure multi-party numerical computation for this model and identify a single light-weight scheme which outperforms the others. Using extensive simulation results over real Internet topologies, we demonstrate that our scheme is scalable to very large networks, with up to millions of nodes. The second model we consider is the malicious peers model, where peers can behave arbitrarily, deliberately trying to affect the results of the computation as well as compromising the privacy of other peers. For this model we provide a fourth scheme to defend the execution of the computation against the malicious peers. The proposed scheme has a higher complexity relative to the semi-honest model. Overall, we provide the Peer-to-Peer network designer a set of tools to choose from, based on the desired level of security.", "paper_title": "Peer-to-peer secure multi-party numerical computation facing malicious adversaries", "paper_id": "WOS:000284094000005"}