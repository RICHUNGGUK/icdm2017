{"auto_keywords": [{"score": 0.03748443929333412, "phrase": "csopt"}, {"score": 0.010612387000973441, "phrase": "cache_replacement_algorithms"}, {"score": 0.007508237461252978, "phrase": "cost_function"}, {"score": 0.007455483493731014, "phrase": "opt"}, {"score": 0.005839965131833214, "phrase": "lru"}, {"score": 0.004298367681427065, "phrase": "modern_systems"}, {"score": 0.004252864101987588, "phrase": "cache_misses"}, {"score": 0.0038234000205958547, "phrase": "replacement_algorithms"}, {"score": 0.0037561467438280175, "phrase": "nonuniform_miss_cost_function_\"cost-sensitive_replacement_algorithms"}, {"score": 0.0035867530188337933, "phrase": "optimum_cost-sensitive_replacement_algorithm"}, {"score": 0.003486316700608598, "phrase": "multiple_nonuniform_miss_costs"}, {"score": 0.003258871417680268, "phrase": "large_regions"}, {"score": 0.003224336566887827, "phrase": "design_space"}, {"score": 0.0031340167205149813, "phrase": "unrealizable_replacement_policy"}, {"score": 0.003024655649924378, "phrase": "achievable_cost"}, {"score": 0.0030032443093632125, "phrase": "realistic_cost-sensitive_replacement_algorithms"}, {"score": 0.0029294877178473017, "phrase": "latency_cost"}, {"score": 0.0029087480993530796, "phrase": "cc-numa_multiprocessors"}, {"score": 0.002767613012044169, "phrase": "current_replacement_algorithms"}, {"score": 0.002699627613420169, "phrase": "opt._next"}, {"score": 0.0025144238077014114, "phrase": "csopt."}, {"score": 0.0024701382170046462, "phrase": "practical_application"}, {"score": 0.002426630714074822, "phrase": "realizable_cost-sensitive_replacement_algorithms"}, {"score": 0.0023754296478100865, "phrase": "second-level_caches"}, {"score": 0.0023502347146791285, "phrase": "cc-numa_multiprocessor"}, {"score": 0.0022924784914292026, "phrase": "miss_latency"}, {"score": 0.0022361384265153677, "phrase": "simple_replacement_policies"}, {"score": 0.0021427510493208864, "phrase": "execution_time"}, {"score": 0.002120018771276572, "phrase": "parallel_applications"}], "paper_keywords": ["cache", " latency", " memory system", " power", " replacement policy", " trace-driven simulations"], "paper_abstract": "Cache replacement algorithms originally developed in the context of uniprocessors executing one instruction at a time implicitly assume that all cache misses have the same cost. However, in modern systems, some cache misses are more expensive than others. The cost may be latency, penalty, power consumption, bandwidth consumption, or any other ad hoc numerical property attached to a miss. We call the class of replacement algorithms designed to minimize a nonuniform miss cost function \"cost-sensitive replacement algorithms.\" In this paper, we first introduce and analyze an optimum cost-sensitive replacement algorithm ( CSOPT) in the context of multiple nonuniform miss costs. CSOPT can significantly improve the cost function over OPT ( the replacement algorithm minimizing miss count) in large regions of the design space. Although CSOPT is an offline and unrealizable replacement policy, it serves as a lower bound on the achievable cost by realistic cost-sensitive replacement algorithms. Using the practical example of latency cost in CC-NUMA multiprocessors, we demonstrate that there is a lot of room left to improve current replacement algorithms in many situations beyond the promise of OPT. Next, we introduce three practical extensions of LRU inspired by CSOPT and we compare their performance to LRU, OPT, and CSOPT. Finally, as a practical application, we evaluate these realizable cost-sensitive replacement algorithms in the context of the second-level caches of a CC-NUMA multiprocessor with superscalar processors, using the miss latency as the cost function. By applying simple replacement policies sensitive to the latency of misses, we can improve the execution time of some parallel applications by up to 18 percent.", "paper_title": "Cache replacement algorithms with nonuniform miss costs", "paper_id": "WOS:000235477000001"}