{"auto_keywords": [{"score": 0.042076739687030414, "phrase": "distributed_evolutionary_algorithm"}, {"score": 0.03398967036398332, "phrase": "new_nodes"}, {"score": 0.027700088750831985, "phrase": "information_exchange"}, {"score": 0.004817820458809552, "phrase": "cloud"}, {"score": 0.004580769304731227, "phrase": "cloud-computing_based_evolutionary_algorithm"}, {"score": 0.004175533280178052, "phrase": "wifi_or"}, {"score": 0.003944112858235306, "phrase": "new_pcs"}, {"score": 0.0037789720824759503, "phrase": "algorithmic_performance"}, {"score": 0.003607834976869384, "phrase": "proposed_multi-computer"}, {"score": 0.0035189057079817285, "phrase": "automatic_load-balancing"}, {"score": 0.002923214590192792, "phrase": "proposed_problems"}, {"score": 0.002830839166653185, "phrase": "homogeneous_or_heterogeneous_platforms"}, {"score": 0.0027610089418453614, "phrase": "different_configuration"}, {"score": 0.0025800088089364737, "phrase": "selected_storage_service"}, {"score": 0.0024895500851796603, "phrase": "homogeneous_or_heterogeneous_nodes"}, {"score": 0.002445514186654732, "phrase": "significative_differences"}, {"score": 0.002419466507425567, "phrase": "synchronous_storage_services"}, {"score": 0.0021049977753042253, "phrase": "specific_service"}], "paper_keywords": ["Evolutionary parallel algorithm", " Cloud computing", " Free storage services", " Distributed computing"], "paper_abstract": "This paper presents a cloud-computing based evolutionary algorithm using a synchronous storage service as pool for exchange information among population of solutions. The multi-computer was composed of several normal PCs or laptops connected via Wifi or Ethernet. In this work the effect of how the distributed evolutionary algorithm reached the solution when new PCs was added was tested whether that effect also translates to the algorithmic performance of the algorithm. To this end different (and hard) problems was addressed using the proposed multi-computer, analyzing the effects that the automatic load-balancing and synchronization had on the speed of algorithm successful, and analyzing how the number of evaluation per second increases when the multi-computer includes new nodes. The measure used for the analysis was number of evaluation per second which was increased when the multi-computer includes new nodes. The algorithm solved the proposed problems and it was viable to run it in homogeneous or heterogeneous platforms. The experiments includes two problems and different configuration for the distributed evolutionary algorithm in order to check the results of the algorithm for several rates of information exchange with the selected storage service. Results shows that the system is viable with homogeneous or heterogeneous nodes and there is no significative differences for the synchronous storage services we have tested. But when the problem is harder, and the threads of the algorithm does not stop for each information exchange (migration of individual from one population to another one), the differences of using a specific service became significative in terms of success of the algorithm.", "paper_title": "Cloud-based evolutionary algorithms: An algorithmic study", "paper_id": "WOS:000319433600002"}