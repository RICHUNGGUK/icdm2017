{"auto_keywords": [{"score": 0.027639864376718025, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "correct_provenance_analysis"}, {"score": 0.004740126725341152, "phrase": "abstract_groups"}, {"score": 0.004611959213131437, "phrase": "high_level_composite_tasks"}, {"score": 0.004452228677941085, "phrase": "provenance_analysis"}, {"score": 0.003927625349474979, "phrase": "unsound_views"}, {"score": 0.0038363485899400285, "phrase": "incorrect_provenance_analysis"}, {"score": 0.0036600862989330106, "phrase": "unsound_workflow_views"}, {"score": 0.0036315039559860654, "phrase": "minimal_changes"}, {"score": 0.0035750047462243836, "phrase": "minimal_sound"}, {"score": 0.003547084456662448, "phrase": "elucidative_workflow_views"}, {"score": 0.0034782306784111525, "phrase": "user-specified_relevant_tasks"}, {"score": 0.0033053807885373905, "phrase": "workflow_view"}, {"score": 0.0032158817866929563, "phrase": "unsound_composite_task"}, {"score": 0.0031782684007251403, "phrase": "minimal_number"}, {"score": 0.003092200512475624, "phrase": "resulting_view"}, {"score": 0.002915514089373717, "phrase": "relevant_tasks"}, {"score": 0.0028588847851995533, "phrase": "sound_view"}, {"score": 0.0028033523242224833, "phrase": "composite_task"}, {"score": 0.002727409429089543, "phrase": "total_number"}, {"score": 0.002541417196444962, "phrase": "independent_set"}, {"score": 0.00238674051726235, "phrase": "design_polynomial_time_algorithms"}, {"score": 0.002206536029072657, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "general_networks"}], "paper_keywords": ["Algorithms", " Reliability", " workflow", " network", " view", " soundness", " provenance"], "paper_abstract": "Workflow views abstract groups of tasks in a workflow into high level composite tasks, in order to reuse subworkflows and facilitate provenance analysis. However, unless a view is carefully designed, it may not preserve the dataflow between tasks in the workflow, that is, it may not be sound. Unsound views can be misleading and cause incorrect provenance analysis. This article studies the problem of efficiently identifying and correcting unsound workflow views with minimal changes, and constructing minimal sound and elucidative workflow views with a set of user-specified relevant tasks. In particular, two related problems are investigated. First, given a workflow view, we wish to split each unsound composite task into the minimal number of tasks, such that the resulting view is sound. Second, given a workflow and a set of user specified relevant tasks, we generate a sound view, such that each composite task contains at most one relevant task, and the total number of tasks is minimized. We prove that both problems are NP-hard by reduction from independent set. We then propose two local optimality conditions (weak and strong) for each problem, and design polynomial time algorithms for both problems to meet these conditions. Experiments show that our proposed algorithms are reasonably effective and efficient. The proposed techniques are useful for view analysis/construction for not only workflows, but general networks as well.", "paper_title": "Generating Sound Workflow Views for Correct Provenance Analysis", "paper_id": "WOS:000288488500006"}