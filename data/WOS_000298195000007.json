{"auto_keywords": [{"score": 0.036562079488376455, "phrase": "common_interface"}, {"score": 0.004815205047099066, "phrase": "python"}, {"score": 0.004606023493393774, "phrase": "nonlinear_constrained_optimization"}, {"score": 0.004238307626560739, "phrase": "nonlinear_constrained_optimization_problems"}, {"score": 0.004054299982508618, "phrase": "object-oriented_concepts"}, {"score": 0.00396530196547293, "phrase": "class_inheritance"}, {"score": 0.0037931018103829427, "phrase": "distinct_separation"}, {"score": 0.003730465168354817, "phrase": "problem_formulation"}, {"score": 0.003668859054928118, "phrase": "optimization_approach"}, {"score": 0.0034134024569847264, "phrase": "flexible_environment"}, {"score": 0.0030208364972341096, "phrase": "python_programming_language"}, {"score": 0.0029380909574836587, "phrase": "easy_integration"}, {"score": 0.002905629026254221, "phrase": "optimization_software"}, {"score": 0.002857687523155439, "phrase": "fortran"}, {"score": 0.002643753276264565, "phrase": "optimization_algorithms"}, {"score": 0.0023788319661581696, "phrase": "increasing_complexity"}], "paper_keywords": ["Optimization algorithms", " Constrained optimization", " Nonlinear programming", " Object-oriented programming", " Python", " Aerostructural optimization"], "paper_abstract": "We present pyOpt, an object-oriented framework for formulating and solving nonlinear constrained optimization problems in an efficient, reusable and portable manner. The framework uses object-oriented concepts, such as class inheritance and operator overloading, to maintain a distinct separation between the problem formulation and the optimization approach used to solve the problem. This creates a common interface in a flexible environment where both practitioners and developers alike can solve their optimization problems or develop and benchmark their own optimization algorithms. The framework is developed in the Python programming language, which allows for easy integration of optimization software programmed in Fortran, C, C+ +, and other languages. A variety of optimization algorithms are integrated in pyOpt and are accessible through the common interface. We solve a number of problems of increasing complexity to demonstrate how a given problem is formulated using this framework, and how the framework can be used to benchmark the various optimization algorithms.", "paper_title": "pyOpt: a Python-based object-oriented framework for nonlinear constrained optimization", "paper_id": "WOS:000298195000007"}