{"auto_keywords": [{"score": 0.04861823021267309, "phrase": "grid"}, {"score": 0.00481495049065317, "phrase": "workflow_scheduling_strategies"}, {"score": 0.00443308765153716, "phrase": "key_concern"}, {"score": 0.004209893377338457, "phrase": "performance-driven_grid_applications"}, {"score": 0.0038758293658651237, "phrase": "different_existing_approaches"}, {"score": 0.0037188360359702182, "phrase": "scientific_workflow_applications"}, {"score": 0.0036052633308076933, "phrase": "grid_environment"}, {"score": 0.003353017894741353, "phrase": "heft"}, {"score": 0.0028715299874549245, "phrase": "full-graph_scheduling_strategy"}, {"score": 0.0026986685585382347, "phrase": "real-world_scientific_applications"}, {"score": 0.002310578855290687, "phrase": "full-graph_scheduling"}, {"score": 0.0022399174232611853, "phrase": "heft_algorithm"}], "paper_keywords": [""], "paper_abstract": "Scheduling is a key concern for the execution of performance-driven Grid applications. In this paper we comparatively examine different existing approaches for scheduling of scientific workflow applications in a Grid environment. We evaluate three algorithms namely genetic, HEFT, and simple \"myopic\" and compare incremental workflow partitioning against the full-graph scheduling strategy. We demonstrate experiments using real-world scientific applications covering both balanced (symmetric) and unbalanced (asymmetric) workflows. Our results demonstrate that full-graph scheduling with the HEFT algorithm performs best compared to the other strategies examined in this paper.", "paper_title": "Comparison of workflow scheduling strategies on the Grid", "paper_id": "WOS:000238107100095"}