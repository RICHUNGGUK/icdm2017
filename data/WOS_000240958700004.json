{"auto_keywords": [{"score": 0.04828702148089275, "phrase": "branching-time_transformation"}, {"score": 0.00481495049065317, "phrase": "datalog_programs"}, {"score": 0.004724020632103649, "phrase": "non-deterministic_constructs"}, {"score": 0.00454725669814484, "phrase": "recent_technique"}, {"score": 0.004461359547152617, "phrase": "chain_datalog_programs"}, {"score": 0.004240116703465252, "phrase": "significant_extension"}, {"score": 0.003978866233891427, "phrase": "promising_new_direction"}, {"score": 0.003805591825381666, "phrase": "value-propagating_datalog_optimizations"}, {"score": 0.003663067281537946, "phrase": "proposed_transformation"}, {"score": 0.003525861581971337, "phrase": "multiple_consumptive_occurrences"}, {"score": 0.0031845067058084583, "phrase": "target_language"}, {"score": 0.003144222265269426, "phrase": "temporal_logic_programming_formalism"}, {"score": 0.0030651710672229926, "phrase": "choice_predicates"}, {"score": 0.002785978280998868, "phrase": "intensional_logic_programming"}, {"score": 0.002468450551616404, "phrase": "target_code"}, {"score": 0.002360796860462937, "phrase": "bottom-up_proof_procedure"}, {"score": 0.002286781334850213, "phrase": "target_programs"}, {"score": 0.0021049977753042253, "phrase": "herbrand_base"}], "paper_keywords": ["logic programming", " deductive databases", " program and query transformations", " nondeterministic constructs"], "paper_abstract": "The branching-time transformation is a recent technique for optimizing Chain Datalog programs. In this paper we propose a significant extension of the branching-time transformation which we believe opens up a promising new direction of research in the area of value-propagating Datalog optimizations. More specifically, the proposed transformation can handle more general programs that allow multiple consumptive occurrences of variables in the bodies of clauses. This extension is achieved by using as target language the temporal logic programming formalism Datalog(n)s enriched with choice predicates (a non-deterministic construct that was originally introduced in the area of intensional logic programming). We demonstrate the correctness of the transformation and propose several optimizations that can be applied to the target code. Moreover, we define a bottom-up proof procedure that applies to the target programs and demonstrate that it always terminates (despite the fact that the Herbrand base of these programs is generally infinite).", "paper_title": "A value-propagating transformation technique for Datalog programs based on non-deterministic constructs", "paper_id": "WOS:000240958700004"}