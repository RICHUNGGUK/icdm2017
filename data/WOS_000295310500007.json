{"auto_keywords": [{"score": 0.047394121869807716, "phrase": "cuda"}, {"score": 0.00481495049065317, "phrase": "knapsack_problems"}, {"score": 0.004633429997452688, "phrase": "parallel_implementation"}, {"score": 0.004416079619543104, "phrase": "dynamic_programming_method"}, {"score": 0.00429057323623293, "phrase": "knapsack_problem"}, {"score": 0.004208881856146758, "phrase": "nvidia_gpu"}, {"score": 0.0036788184374592706, "phrase": "computational_tests"}, {"score": 0.003608732492631878, "phrase": "processing_times"}, {"score": 0.0034725269588525534, "phrase": "parallel_code"}, {"score": 0.0033094525227603012, "phrase": "sequential_one"}, {"score": 0.002948547333717581, "phrase": "speedup_factor"}, {"score": 0.002837188425640173, "phrase": "large_size_problems"}, {"score": 0.0023857603808363527, "phrase": "compression_technique"}, {"score": 0.0022302306304023602, "phrase": "memory_occupancy"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Combinatorial optimization problems", " Dense dynamic programming", " Parallel computing", " GPU computing", " CUDA"], "paper_abstract": "A parallel implementation via CUDA of the dynamic programming method for the knapsack problem on NVIDIA GPU is presented. A GTX 260 card with 192 cores (1.4 GHz) is used for computational tests and processing times obtained with the parallel code are compared to the sequential one on a CPU with an Intel Xeon 3.0 GHz. The results show a speedup factor of 26 for large size problems. Furthermore, in order to limit the communication between the CPU and the CPU, a compression technique is presented which decreases significantly the memory occupancy. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Solving knapsack problems on GPU", "paper_id": "WOS:000295310500007"}