{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_spectral_clustering"}, {"score": 0.004747997855358171, "phrase": "distributed_systems"}, {"score": 0.004681971826924847, "phrase": "spectral_clustering_algorithms"}, {"score": 0.004274527415193801, "phrase": "traditional_algorithms"}, {"score": 0.004041546659145336, "phrase": "spectral_clustering"}, {"score": 0.003929843413153981, "phrase": "scalability_problem"}, {"score": 0.003821215658570578, "phrase": "computational_time"}, {"score": 0.003663857375787215, "phrase": "data_set"}, {"score": 0.0034640450599342488, "phrase": "large_data_sets"}, {"score": 0.003275093899046286, "phrase": "dense_similarity_matrix"}, {"score": 0.002989714021608139, "phrase": "nystrom_method"}, {"score": 0.002729133029776093, "phrase": "nearest_neighbors"}, {"score": 0.0025801648787263662, "phrase": "memory_use"}, {"score": 0.0025087506382067536, "phrase": "distributed_computers"}, {"score": 0.002439308179084911, "phrase": "empirical_study"}, {"score": 0.002388487669097511, "phrase": "document_data_set"}, {"score": 0.0021049977753042253, "phrase": "large_problems"}], "paper_keywords": ["Parallel spectral clustering", " distributed computing", " normalized cuts", " nearest neighbors", " Nystrom approximation"], "paper_abstract": "Spectral clustering algorithms have been shown to be more effective in finding clusters than some traditional algorithms, such as k-means. However, spectral clustering suffers from a scalability problem in both memory use and computational time when the size of a data set is large. To perform clustering on large data sets, we investigate two representative ways of approximating the dense similarity matrix. We compare one approach by sparsifying the matrix with another by the Nystrom method. We then pick the strategy of sparsifying the matrix via retaining nearest neighbors and investigate its parallelization. We parallelize both memory use and computation on distributed computers. Through an empirical study on a document data set of 193,844 instances and a photo data set of 2,121,863, we show that our parallel algorithm can effectively handle large problems.", "paper_title": "Parallel Spectral Clustering in Distributed Systems", "paper_id": "WOS:000286204700010"}