{"auto_keywords": [{"score": 0.04933167036983738, "phrase": "bounded_clique_width"}, {"score": 0.008413442744761353, "phrase": "real-world_instances"}, {"score": 0.00481495049065317, "phrase": "loading_problem"}, {"score": 0.004450568197899267, "phrase": "special_pallet-loading_problem"}, {"score": 0.0042119653427658025, "phrase": "manufacturing_company"}, {"score": 0.0041136473765874815, "phrase": "graph-theoretical_terms"}, {"score": 0.003832198214757852, "phrase": "permutation_graph"}, {"score": 0.003772306776343196, "phrase": "bounded-size_cliques"}, {"score": 0.003541923233726252, "phrase": "integer_program"}, {"score": 0.00327356326590461, "phrase": "first_algorithm"}, {"score": 0.0031970796597571367, "phrase": "branch-and-price_algorithm"}, {"score": 0.003097865379563127, "phrase": "integer-programming_formulation"}, {"score": 0.0030254743224136247, "phrase": "second_one"}, {"score": 0.002752390133272192, "phrase": "latter_algorithm"}, {"score": 0.0021049977753042253, "phrase": "first_implementation"}], "paper_keywords": ["integer programming", " analysis of algorithms"], "paper_abstract": "In this paper we discuss a special pallet-loading problem, which we encountered at a manufacturing company. In graph-theoretical terms, the problem is equivalent to partitioning a permutation graph into bounded-size cliques. We formulate the problem as an integer program, and present two exact algorithms for solving it. The first algorithm is a branch-and-price algorithm based on the integer-programming formulation; the second one is an algorithm based on the concept of bounded clique width. The latter algorithm was motivated by the structure present in the real-world instances. Test results are given, both for real-world instances and randomly generated instances. As far as we are aware, this is the first implementation of an algorithm based on bounded clique width.", "paper_title": "Exact algorithms for a loading problem with bounded clique width", "paper_id": "WOS:000242675600006"}