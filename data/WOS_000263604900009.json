{"auto_keywords": [{"score": 0.04034190794741309, "phrase": "memory_modules"}, {"score": 0.00481495049065317, "phrase": "image_processing"}, {"score": 0.004743164872278112, "phrase": "multiple_windows"}, {"score": 0.004568326972997448, "phrase": "image_processors"}, {"score": 0.004399905285945236, "phrase": "memory_system"}, {"score": 0.004301834610818624, "phrase": "parallel_access"}, {"score": 0.004205940624913343, "phrase": "simple_interconnection_network"}, {"score": 0.004020492138367616, "phrase": "efficient_memory_allocation"}, {"score": 0.003785836059995376, "phrase": "processing_elements"}, {"score": 0.003701401653850141, "phrase": "parallel_access_capability"}, {"score": 0.0036188435232325337, "phrase": "arbitrary_shapes"}, {"score": 0.003382017342396959, "phrase": "efficient_search_method"}, {"score": 0.0032571885279065126, "phrase": "window-type_image_processing"}, {"score": 0.003136952589428254, "phrase": "practical_examples"}, {"score": 0.003066945490483524, "phrase": "stereo-matching_processor"}, {"score": 0.0029095936591723645, "phrase": "optical-flow_processor"}, {"score": 0.002392453087295389, "phrase": "basic_approach"}, {"score": 0.002252602622785975, "phrase": "search_time"}, {"score": 0.0021369416775353124, "phrase": "practical_image_sizes"}, {"score": 0.0021049977753042253, "phrase": "window_sizes"}], "paper_keywords": ["Image processing", " memory design", " optimization", " parallel processors"], "paper_abstract": "One major issue in designing image processors is to design a memory system that supports parallel access with a simple interconnection network. This paper presents an efficient memory allocation to minimize the number of memory modules and processing elements with a parallel access capability when multiple windows with arbitrary shapes are specified. This paper also presents an efficient search method based on regularity of window-type image processing. We give some practical examples including a stereo-matching processor for acquiring 3-D information, and an optical-flow processor for motion estimation. These examples show that the numbers of memory modules are reduced to 2.7% and 10%, respectively, in comparison with a basic approach. It is also shown that the search time is less than I ms for practical image sizes and window sizes.", "paper_title": "Optimal Periodic Memory Allocation for Image Processing With Multiple Windows", "paper_id": "WOS:000263604900009"}