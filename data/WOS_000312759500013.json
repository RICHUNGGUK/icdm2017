{"auto_keywords": [{"score": 0.013757171567815652, "phrase": "existing_formalizations"}, {"score": 0.00481495049065317, "phrase": "in-place_transformations"}, {"score": 0.004708056866527125, "phrase": "business_process_model"}, {"score": 0.00450130420152996, "phrase": "precise_execution_semantics"}, {"score": 0.004401342842183475, "phrase": "process_instances"}, {"score": 0.003595552309967789, "phrase": "in-place_graph_transformation_rules"}, {"score": 0.003499864176875713, "phrase": "bpmn_syntax"}, {"score": 0.003437486158494063, "phrase": "transformations_update_models"}, {"score": 0.0032277611129050234, "phrase": "mature_tool"}, {"score": 0.003141830113006653, "phrase": "reference_implementation"}, {"score": 0.0030036501770192865, "phrase": "promising_complement"}, {"score": 0.0027950561494657633, "phrase": "conceptual_validation"}, {"score": 0.0027328817607818207, "phrase": "informal_semantics"}, {"score": 0.002464184617340032, "phrase": "bpmn"}, {"score": 0.002282667669149476, "phrase": "tool_vendors"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["BPMN", " BPM", " MDA", " Formal semantics", " Graph transformation"], "paper_abstract": "Context: The Business Process Model and Notation (BPMN) standard informally defines a precise execution semantics. It defines how process instances should be updated in a model during execution. Existing formalizations of the standard are incomplete and rely on mappings to other languages. Objective: This paper provides a BPMN 2.0 semantics formalization that is more complete and intuitive than existing formalizations. Method: The formalization consists of in-place graph transformation rules that are documented visually using BPMN syntax. In-place transformations update models directly and do not require mappings to other languages. We have used a mature tool and test-suite to develop a reference implementation of all rules. Results: Our formalization is a promising complement to the standard, in particular because all rules have been extensively verified and because conceptual validation is facilitated (the informal semantics also describes in-place updates). Conclusion: Since our formalization has already revealed problems with the standard and since the BPMN is still evolving, the maintainers of the standard can benefit from our results. Moreover, tool vendors can use our formalization and reference implementation for verifying conformance to the standard. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A visual token-based formalization of BPMN 2.0 based on in-place transformations", "paper_id": "WOS:000312759500013"}