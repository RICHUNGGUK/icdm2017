{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "closed_dependent_type_theory"}, {"score": 0.004291617358806677, "phrase": "generative_declarations"}, {"score": 0.0038651944848734133, "phrase": "inductive_datatype"}, {"score": 0.0031348622158167195, "phrase": "datatype-generic_programming"}, {"score": 0.0030378759123133644, "phrase": "ordinary_programming"}, {"score": 0.002823050755743821, "phrase": "resulting_generic_operations"}, {"score": 0.0024634797027967203, "phrase": "datatype_descriptions"}, {"score": 0.002337684811187166, "phrase": "existing_systems"}, {"score": 0.002241679436497569, "phrase": "apparently_self-supporting_setup"}, {"score": 0.0021049977753042253, "phrase": "infinite_regress"}], "paper_keywords": ["Design", " Languages", " Theory"], "paper_abstract": "We present a closed dependent type theory whose inductive types are given not by a scheme for generative declarations, but by encoding in a universe. Each inductive datatype arises by interpreting its description-a first-class value in a datatype of descriptions. Moreover, the latter itself has a description. Datatype-generic programming thus becomes ordinary programming. We show some of the resulting generic operations and deploy them in particular, useful ways on the datatype of datatype descriptions itself. Simulations in existing systems suggest that this apparently self-supporting setup is achievable without paradox or infinite regress.", "paper_title": "The Gentle Art of Levitation", "paper_id": "WOS:000286594300002"}