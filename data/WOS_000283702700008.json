{"auto_keywords": [{"score": 0.0294723611304405, "phrase": "best_known_algorithm"}, {"score": 0.00481495049065317, "phrase": "job_scheduling"}, {"score": 0.004762893197005439, "phrase": "processing_set_restrictions"}, {"score": 0.00456020621016909, "phrase": "n_independent_jobs"}, {"score": 0.004112582094962078, "phrase": "restricted_set"}, {"score": 0.0030821633718368206, "phrase": "fast_algorithm"}, {"score": 0.002999386721353559, "phrase": "tree-hierarchical_processing"}, {"score": 0.0025611773887867255, "phrase": "nested_processing"}, {"score": 0.00217496508306238, "phrase": "worst-case_bounds"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tree-hierarchical processing set", " Inclusive processing set", " Nested processing set", " Makespan minimization", " Polynomial-time approximation algorithm", " NP-hard", " Nonpreemptive scheduling"], "paper_abstract": "We consider the problem of scheduling n independent jobs on m parallel machines, where the machines differ in their functionality but not in their processing speeds. Each job has a restricted set of machines to which it can be assigned, called its processing set. Preemption is not allowed. Our goal is to minimize the makespan of the schedule. We study two variants of this problem: (1) the case of tree-hierarchical processing set and (2) the case of nested processing set. We first give a fast algorithm for the case of tree-hierarchical processing set with a worst-case bound of 4/3, which is better than the best known algorithm whose worst-case bound is 2. We then give a more complicated algorithm for the case of nested processing set with a worst-case bound of 5/3, which is better than the best known algorithm whose worst-case bound is 7/4. In both cases, we will give examples achieving the worst-case bounds. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Fast approximation algorithms for job scheduling with processing set restrictions", "paper_id": "WOS:000283702700008"}