{"auto_keywords": [{"score": 0.03481146599948752, "phrase": "unit_processing_times"}, {"score": 0.00481495049065317, "phrase": "obligatory_vacations"}, {"score": 0.004664352260912174, "phrase": "n_jobs"}, {"score": 0.00422516469733364, "phrase": "average_profit"}, {"score": 0.0036424097335610492, "phrase": "production_planning"}, {"score": 0.0036167509502276294, "phrase": "machine_maintenance"}, {"score": 0.0035159043158639633, "phrase": "database_query_processing"}, {"score": 0.0033831783145374687, "phrase": "np"}, {"score": 0.003275879115801376, "phrase": "unit_profits"}, {"score": 0.003229870860371533, "phrase": "approximation_algorithms"}, {"score": 0.0031845067058084583, "phrase": "optimal_algorithms"}, {"score": 0.0029565620771207003, "phrase": "known_results"}, {"score": 0.002863921785266393, "phrase": "preemptive_greedy_algorithm"}, {"score": 0.002735194789581153, "phrase": "general_instances"}, {"score": 0.0027063176464371115, "phrase": "arbitrary_processing_times"}, {"score": 0.002640114583897493, "phrase": "special_case"}, {"score": 0.0021731423856364003, "phrase": "intended_idle_times"}, {"score": 0.0021501863832966966, "phrase": "optimal_schedule"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Periodic scheduling", " Vacations", " Approximation algorithms"], "paper_abstract": "We consider a problem of repeatedly scheduling n jobs on m parallel machines. Each job is associated with a profit that is gained each time the job is completed, and the goal is to maximize the average profit per time unit. Once the processing of a job is completed, it goes on vacation and returns to the system, ready to be processed again, only after its vacation is over. This problem has many applications: in production planning, machine maintenance, video-on-demand and database query processing, among others. We show that the problem is NP-hard already for jobs with unit processing times and unit profits, and develop approximation algorithms as well as optimal algorithms for certain subclasses of instances. We first show that a 5/3-approximation algorithm can be obtained for instances with unit processing times, using known results for windows scheduling. We then present a preemptive greedy algorithm, which yields a ratio of e/(e-1) to the optimal for general instances, with arbitrary processing times and arbitrary profits. For the special case where all jobs have the same (unit) processing times and the same (unit) profits, we present a 1.39-approximation algorithm. For this case we also show that, when the load generated by an instance is sufficiently large (in terms of n and m), any algorithm which uses no intended idle times yields an optimal schedule. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Periodic scheduling with obligatory vacations", "paper_id": "WOS:000271282800027"}