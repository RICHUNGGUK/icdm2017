{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "programmable_architecture"}, {"score": 0.004138813595009761, "phrase": "processor_architecture"}, {"score": 0.004043541331944951, "phrase": "elliptic_curve_cryptography_computations"}, {"score": 0.0035989687070420977, "phrase": "elliptic-_curve_point"}, {"score": 0.003435092524339692, "phrase": "prime_fields"}, {"score": 0.003129317057177867, "phrase": "maximum_degree"}, {"score": 0.002720785798036066, "phrase": "proposed_elliptic_curve_processor"}, {"score": 0.0023932142697579506, "phrase": "throughput_results"}, {"score": 0.002154693685426657, "phrase": "previously_proposed_designs"}, {"score": 0.0021049977753042253, "phrase": "interesting_performance"}], "paper_keywords": ["Modulo multipliers", " Elliptic curve cryptography", " FPGA hardware designs"], "paper_abstract": "This paper presents a processor architecture for elliptic curve cryptography computations over GF(p). The speed to compute the Elliptic- curve point multiplication over the prime fields GF(p) is increased by using the maximum degree of parallelism, and by carefully selecting the most appropriate coordinates system. The proposed Elliptic Curve processor is implemented using FPGAs. The time, area and throughput results are obtained, analyzed, and compared with previously proposed designs showing interesting performance and features.", "paper_title": "Efficient FPGA Implementation of a Programmable Architecture for GF(p) Elliptic Curve Crypto Computations", "paper_id": "WOS:000276185000001"}