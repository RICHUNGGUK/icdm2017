{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "musical_instruments"}, {"score": 0.004712344306372038, "phrase": "browser"}, {"score": 0.004645057834614705, "phrase": "native_web_technologies"}, {"score": 0.004481132747216135, "phrase": "musical_expression"}, {"score": 0.004110831924517065, "phrase": "heavily_optimized_audio_dsp"}, {"score": 0.004023120753104693, "phrase": "interface.js"}, {"score": 0.0034841647157189985, "phrase": "complete_system"}, {"score": 0.0031959843979467704, "phrase": "mobile_web_browsers"}, {"score": 0.003038983069081333, "phrase": "remote_synthesis_applications"}, {"score": 0.0029740732099993706, "phrase": "server_application"}, {"score": 0.002889672003089062, "phrase": "socket_protocol"}, {"score": 0.0028279422436488116, "phrase": "web_interfaces"}, {"score": 0.0027675275077806744, "phrase": "midi_and_osc_messages"}, {"score": 0.0025938977569302177, "phrase": "creative_coding_environment"}, {"score": 0.0025752890978323873, "phrase": "gibber"}, {"score": 0.0024842242921857705, "phrase": "mapping_abstractions"}, {"score": 0.0023791769068748194, "phrase": "digital_musical_instruments"}, {"score": 0.00232832698253493, "phrase": "single_line"}, {"score": 0.0021509807762081145, "phrase": "central_database"}, {"score": 0.0021049977753042253, "phrase": "new_instruments"}], "paper_keywords": [""], "paper_abstract": "Native Web technologies provide great potential for musical expression. We introduce two JavaScript libraries towards this end: Gibberish.js, providing heavily optimized audio DSP, and Interface.js, a GUI toolkit that works with mouse, touch, and motion events. Together they provide a complete system for defining musical instruments that can be used in both desktop and mobile Web browsers. Interface.js also enables control of remote synthesis applications via a server application that translates the socket protocol used by Web interfaces into both MIDI and OSC messages. We have incorporated these libraries into the creative coding environment Gibber, where we provide mapping abstractions that enable users to create digital musical instruments in as little as a single line of code. They can then be published to a central database, enabling new instruments to be created, distributed, and run entirely in the browser.", "paper_title": "Designing Musical Instruments for the Browser", "paper_id": "WOS:000351669200002"}