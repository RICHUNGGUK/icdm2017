{"auto_keywords": [{"score": 0.04872654495804916, "phrase": "aosd"}, {"score": 0.04697765197411397, "phrase": "software_development"}, {"score": 0.04247109788985101, "phrase": "better_runtime_performance"}, {"score": 0.00481495049065317, "phrase": "aspect-oriented_software"}, {"score": 0.004723847090183984, "phrase": "-oriented_software_development"}, {"score": 0.004612376827433774, "phrase": "systematic_means"}, {"score": 0.004546755482549647, "phrase": "crosscutting_concerns"}, {"score": 0.004460703838987562, "phrase": "common_aosd_benefits"}, {"score": 0.004397230847865867, "phrase": "higher_level"}, {"score": 0.004313996835376177, "phrase": "concern_reuse"}, {"score": 0.004272969980602508, "phrase": "better_legibility"}, {"score": 0.004212157020917929, "phrase": "software_maintainability_improvement"}, {"score": 0.004112711391952791, "phrase": "static_weaving_implementations"}, {"score": 0.003996458454723708, "phrase": "dynamic_weaving"}, {"score": 0.003958439439112026, "phrase": "runtime_application_adaptiveness"}, {"score": 0.003902085339580381, "phrase": "valuable_aid"}, {"score": 0.003413183361838603, "phrase": "high_dynamic_adaptiveness"}, {"score": 0.0033645655483989746, "phrase": "static_one"}, {"score": 0.003161740194257218, "phrase": "weaving_techniques"}, {"score": 0.0029711052657054463, "phrase": "adaptiveness_requirements"}, {"score": 0.002928765962664163, "phrase": "life_cycle_stage"}, {"score": 0.0026742419973883134, "phrase": "source_code"}, {"score": 0.0025615007555804506, "phrase": "dsaw"}, {"score": 0.0023388183537341213, "phrase": "wide_set"}, {"score": 0.0022188370388602813, "phrase": "detailed_assessment"}, {"score": 0.002166349705365602, "phrase": "dsaw_platform"}, {"score": 0.0021354538918029286, "phrase": "competitive_alternative"}, {"score": 0.0021049977753042253, "phrase": "aspect_oriented_software"}], "paper_keywords": ["Aspect-oriented software development", " static weaving", " dynamic weaving", " separation of concerns", " dynamism", " computational reflection", " language neutrality"], "paper_abstract": "Aspect-Oriented Software Development (AOSD) provides systematic means to modularize crosscutting concerns in software development. Common AOSD benefits are a higher level of abstraction, concern reuse, better legibility, and software maintainability improvement. In AOSD, static weaving implementations commonly obtain better runtime performance, whereas dynamic weaving provides runtime application adaptiveness and a valuable aid in software development. Since both approaches provide benefits, we have developed a Dynamic and Static Aspect Weaving (DSAW) platform that supports both kinds of weavers: a full dynamic one to offer high dynamic adaptiveness and a static one to obtain better runtime performance when the application is deployed. Furthermore, both weaving techniques can even be used simultaneously in the same application. Depending on the adaptiveness requirements and the life cycle stage, the programmer could change from one type of weaving to the other without performing any modification in the source code of either components or aspects. Therefore, DSAW provides the separation of the dynamism (weaving-time) concern in the aspect-oriented software development process. Moreover, our platform also supports a wide set of join-points and is language and platform neutral. A detailed assessment has revealed that the DSAW platform provides a competitive alternative to develop aspect oriented software.", "paper_title": "THE DSAW ASPECT-ORIENTED SOFTWARE DEVELOPMENT PLATFORM", "paper_id": "WOS:000299173500001"}