{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "common_phrase_index"}, {"score": 0.008957844566292188, "phrase": "overall_and_large_queries"}, {"score": 0.004178935413340453, "phrase": "efficient_index_structure"}, {"score": 0.0040334640350288, "phrase": "phrase_queries"}, {"score": 0.003541923233726252, "phrase": "previous_index_structures"}, {"score": 0.003338690782620756, "phrase": "better_query_efficiency"}, {"score": 0.003260690513595527, "phrase": "negligible_extra_storage_cost"}, {"score": 0.0028293966058473476, "phrase": "query_time"}, {"score": 0.0026045914281028473, "phrase": "long_phrases"}, {"score": 0.002455009746748708, "phrase": "auxiliary_nextword_index"}, {"score": 0.002155412043665635, "phrase": "inverted_index"}], "paper_keywords": [""], "paper_abstract": "In this paper, we propose a common phrase index as an efficient index structure to support phrase queries in a very large text database. Our structure is an extension of previous index structures for phrases and achieves better query efficiency with negligible extra storage cost. In our experimental evaluation, a common phrase index has 5% and 20% improvement in query time for the overall and large queries (queries of long phrases) respectively over an auxiliary nextword index. Moreover, it uses only 1% extra storage cost. Compared with an inverted index, our improvement is 40% and 72% for the overall and large queries respectively.", "paper_title": "Efficient phrase querying with common phrase index", "paper_id": "WOS:000238083200007"}