{"auto_keywords": [{"score": 0.03213722452878966, "phrase": "access_requests"}, {"score": 0.012795668391573669, "phrase": "authorization_state"}, {"score": 0.01046110600635816, "phrase": "resource_guard"}, {"score": 0.00481495049065317, "phrase": "state-modifying_authorization_policies"}, {"score": 0.004697308822154191, "phrase": "access_control_systems"}, {"score": 0.004628101576367193, "phrase": "challenging_task"}, {"score": 0.004492717291734985, "phrase": "complex_and_changing_authorization_requirements"}, {"score": 0.004382913938427474, "phrase": "authorization_logics"}, {"score": 0.004212759658511567, "phrase": "access_control"}, {"score": 0.004130165601475531, "phrase": "authorization_policy"}, {"score": 0.0040491842732233154, "phrase": "hard-coded_resource_guard"}, {"score": 0.0037967593942595233, "phrase": "granted_access_request"}, {"score": 0.003455765987713262, "phrase": "current_authorization_languages"}, {"score": 0.0027925723953701083, "phrase": "transaction_logic"}, {"score": 0.002336071138145897, "phrase": "sound_and_complete_proof_system"}, {"score": 0.0021902063413831545, "phrase": "goal-oriented_algorithm"}, {"score": 0.002157857111130435, "phrase": "minimal_sequences"}, {"score": 0.0021049977753042253, "phrase": "specified_target_authorization_state"}], "paper_keywords": ["Security", " Authorization", " access control", " policy", " hoare logic"], "paper_abstract": "Administering and maintaining access control systems is a challenging task, especially in environments with complex and changing authorization requirements. A number of authorization logics have been proposed that aim at simplifying access control by factoring the authorization policy out of the hard-coded resource guard. However, many policies require the authorization state to be updated after a granted access request, for example, to reflect the fact that a user has activated or deactivated a role. Current authorization languages cannot express such state modifications; these still have to be hard-coded into the resource guard. We present a logic for specifying policies where access requests can have effects on the authorization state. The logic is semantically defined by a mapping to Transaction Logic. Using this approach, updates to the state are factored out of the resource guard, thus enhancing maintainability and facilitating more expressive policies that take the history of access requests into account. We also present a sound and complete proof system for reasoning about sequences of access requests. This gives rise to a goal-oriented algorithm for finding minimal sequences that lead to a specified target authorization state.", "paper_title": "A Logic for State-Modifying Authorization Policies", "paper_id": "WOS:000280545800002"}