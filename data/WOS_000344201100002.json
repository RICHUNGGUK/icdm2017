{"auto_keywords": [{"score": 0.03439667787008811, "phrase": "wavelet_matrix"}, {"score": 0.015719716506582538, "phrase": "large_alphabets"}, {"score": 0.0047057084749407485, "phrase": "wavelet_tree"}, {"score": 0.004598933498016774, "phrase": "flexible_data_structure"}, {"score": 0.0041316803676012155, "phrase": "size_sigma"}, {"score": 0.004037877545494505, "phrase": "compressed_space"}, {"score": 0.003916098498242888, "phrase": "wide_range"}, {"score": 0.003545024951402821, "phrase": "current_wavelet_tree_representations"}, {"score": 0.00346449481422526, "phrase": "noticeable_space_or_time_overheads"}, {"score": 0.0029951555610569225, "phrase": "wavelet_trees"}, {"score": 0.0026091594819333654, "phrase": "zero-order_entropy"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Succinct data structures", " Compressed sequence representations"], "paper_abstract": "The wavelet tree is a flexible data structure that permits representing sequences S[1, n] of symbols over an alphabet of size sigma, within compressed space and supporting a wide range of operations on S. When sigma is significant compared to n, current wavelet tree representations incur in noticeable space or time overheads. In this article we introduce the wavelet matrix, an alternative representation for large alphabets that retains all the properties of wavelet trees but is significantly faster. We also show how the wavelet matrix can be compressed up to the zero-order entropy of the sequence without sacrificing, and actually improving, its time performance. Our experimental results show that the wavelet matrix outperforms all the wavelet tree variants along the space/time tradeoff map. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "The wavelet matrix: An efficient wavelet tree for large alphabets", "paper_id": "WOS:000344201100002"}