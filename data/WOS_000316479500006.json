{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "problem_case"}, {"score": 0.004255639740735269, "phrase": "flat_monte_carlo_search"}, {"score": 0.004019797503157808, "phrase": "plain_upper_confidence_bounds"}, {"score": 0.0037610536973798113, "phrase": "excessive_number"}, {"score": 0.0034526191487098093, "phrase": "domain_knowledge"}, {"score": 0.0032922964156452696, "phrase": "uct_performance"}, {"score": 0.0031693980719538287, "phrase": "slight_negative_effect"}, {"score": 0.003022186855664124, "phrase": "rapid_action_value_estimate"}, {"score": 0.0026202187680903063, "phrase": "actual_game"}, {"score": 0.002570817338292482, "phrase": "standard_play"}, {"score": 0.002359759876402679, "phrase": "flat_monte_carlo"}, {"score": 0.0023152577218214804, "phrase": "unenhanced_uct_search"}, {"score": 0.0022500695985527668, "phrase": "rough_estimates"}, {"score": 0.002186712881521657, "phrase": "brief_comparison"}, {"score": 0.0021049977753042253, "phrase": "rave_failure"}], "paper_keywords": ["Bridge heuristic", " flat models", " Go", " Hex", " Monte Carlo methods", " Monte Carlo tree search (MCTS)", " rapid action value estimate (RAVE) failure", " upper confidence bounds (UCBs)", " upper confidence bounds for trees (UCT)"], "paper_abstract": "This paper examines a simple 5 5 Hex position that not only completely defeats flat Monte Carlo search, but also initially defeats plain upper confidence bounds for trees (UCT) search until an excessive number of iterations are performed. The inclusion of domain knowledge during playouts significantly improves UCT performance, but a slight negative effect is shown for the rapid action value estimate (RAVE) heuristic under some circumstances. This example was drawn from an actual game during standard play, and highlights the dangers of relying on flat Monte Carlo and unenhanced UCT search even for rough estimates. A brief comparison is made with RAVE failure in Go.", "paper_title": "A Problem Case for UCT", "paper_id": "WOS:000316479500006"}