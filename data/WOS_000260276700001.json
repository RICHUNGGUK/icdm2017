{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "axiomatic_design"}, {"score": 0.0046632033374901715, "phrase": "design_guidance"}, {"score": 0.004430248457624686, "phrase": "axiomatic_design_theory"}, {"score": 0.004128744931660049, "phrase": "suh"}, {"score": 0.004076157223660074, "phrase": "object-oriented_software_development"}, {"score": 0.0036553070575015344, "phrase": "service-based_development"}, {"score": 0.003298856341173034, "phrase": "conflicting_components"}, {"score": 0.0031743093007496736, "phrase": "missing_components"}, {"score": 0.002864628676257225, "phrase": "high_level_architecture"}, {"score": 0.002601727192945944, "phrase": "hla_federation_development"}, {"score": 0.0024088451312725924, "phrase": "component-oriented_approaches"}, {"score": 0.00236289633510808, "phrase": "fedep"}, {"score": 0.0022302306304023602, "phrase": "available_components"}, {"score": 0.0021876814398268775, "phrase": "federates"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Axiomatic Design", " Component-Oriented programming", " HLA", " Mature domain", " Simulation", " Federation Development and Execution Process"], "paper_abstract": "A form of design guidance is offered through a process that applies Axiomatic Design Theory to Component-Orientation. Axiomatic Design has been proposed by Do and Suh for object-oriented software development. Our approach leverages divide-and-conquer and find-integrate techniques that support service-based development as an alternative to developing code from scratch. Using this process, missing or conflicting components can be identified, and missing components can be defined. The effectiveness of our proposed system is demonstrated through an example based on High Level Architecture (HLA) simulations. Our Component-Oriented approach utilizing axiomatic design theory has been adapted to HLA Federation Development and Execution Process (FEDEP). As one of the Component-Oriented approaches proposed, FEDEP is able to obtain interoperability and reusability of available components, namely Federates. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Systematic Component-Oriented development with Axiomatic Design", "paper_id": "WOS:000260276700001"}