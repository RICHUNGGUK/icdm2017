{"auto_keywords": [{"score": 0.04940203756018457, "phrase": "non-identical_job_sizes"}, {"score": 0.004420472010542188, "phrase": "job_shop_scheduling_problem"}, {"score": 0.004145882022189891, "phrase": "limited_capacity"}, {"score": 0.003725470458263889, "phrase": "total_size"}, {"score": 0.0035189057079817285, "phrase": "machine_capacity"}, {"score": 0.0034444213065548688, "phrase": "processing_times"}, {"score": 0.003094920033010818, "phrase": "minimising_makespan"}, {"score": 0.0029441472095672397, "phrase": "strong_sense"}, {"score": 0.0028207566216121856, "phrase": "approximation_algorithm"}, {"score": 0.0027807832748641195, "phrase": "worst-case_ratio"}, {"score": 0.0026264601495742295, "phrase": "running_time"}, {"score": 0.002359759876402679, "phrase": "proposed_algorithm"}, {"score": 0.0022933216359142736, "phrase": "different_levels"}, {"score": 0.0022287497627555895, "phrase": "computational_results"}], "paper_keywords": ["batch processing machines", " non-identical job sizes", " job shop", " approximation algorithm"], "paper_abstract": "In this article, the job shop scheduling problem with two batch-processing machines is considered. The machines have limited capacity and the jobs have non-identical job sizes. The jobs are processed in batches and the total size of each batch cannot exceed the machine capacity. The processing times of a job on the two machines are proportional. We show the problem of minimising makespan is NP-hard in the strong sense. Then we provide an approximation algorithm with worst-case ratio no more than 4, and the running time of the algorithm is O(n log n). Finally, the performance of the proposed algorithm is tested by different levels of instances. Computational results demonstrate the effectiveness of the algorithm for all the instances.", "paper_title": "Minimising makespan for two batch-processing machines with non-identical job sizes in job shop", "paper_id": "WOS:000309720900001"}