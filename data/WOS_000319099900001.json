{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-component_environment"}, {"score": 0.004751889650408546, "phrase": "distributed_environment"}, {"score": 0.004567596860086148, "phrase": "suboptimal_manner"}, {"score": 0.004371160978838441, "phrase": "message_loss"}, {"score": 0.0036984482690886307, "phrase": "carmona"}, {"score": 0.0036660436272785476, "phrase": "cortadella"}, {"score": 0.0029289895726382653, "phrase": "closed_environment"}, {"score": 0.002790511479398411, "phrase": "general_notion"}, {"score": 0.002682081928174866, "phrase": "extended_definition"}, {"score": 0.0025665261770229757, "phrase": "modeling_formalism"}, {"score": 0.0025328377393370642, "phrase": "arbitrary_synchronization_strategies"}, {"score": 0.0024130437638400404, "phrase": "general_definition"}, {"score": 0.0022787359717772976, "phrase": "compatibility_problems"}, {"score": 0.0022290883852844057, "phrase": "team_automaton"}, {"score": 0.0021613897794439227, "phrase": "arbitrary_synchronization_strategy"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": [""], "paper_abstract": "A distributed environment where many components interact may be functioning in a suboptimal manner due to two main factors: message loss and deadlocks. Message loss occurs when a component is not ready to receive as input a message sent to it. In the case of a deadlock, a system is indefinitely waiting for a message that never arrives. In Carmona and Cortadella (2002) [12] a theory has been presented for characterizing when a pair of systems is compatible in the sense that they can engage in a dialog free from these two problems. The theory developed was restricted to only two components, a particular mode of synchronization and a closed environment. In this paper we lift all these assumptions to define a general notion of compatibility in a multi-component environment. For the extended definition of compatibility, we use team automata as a modeling formalism which allows arbitrary synchronization strategies and iterative/hierarchical composition. Moreover, it is shown how the general definition of compatibility presented in this paper can be used to determine the compatibility problems that arise in a team automaton built on the basis of an arbitrary synchronization strategy. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Compatibility in a multi-component environment", "paper_id": "WOS:000319099900001"}