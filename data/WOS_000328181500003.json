{"auto_keywords": [{"score": 0.04889532068804289, "phrase": "personal_devices"}, {"score": 0.00481495049065317, "phrase": "mobile_operating_systems"}, {"score": 0.004735254735115024, "phrase": "active_object_model"}, {"score": 0.004485200522202792, "phrase": "powerful_yet_heavy_software_platforms"}, {"score": 0.004337900700685262, "phrase": "physical_hardware_resource_limitations"}, {"score": 0.004248294537944227, "phrase": "thick_layers"}, {"score": 0.00417793854311445, "phrase": "embedded_mobile_operating_system"}, {"score": 0.003940706575253453, "phrase": "virtual_machines"}, {"score": 0.0038431888954930083, "phrase": "portable_code_execution"}, {"score": 0.003763763153640936, "phrase": "mobile_devices"}, {"score": 0.0036553070575015344, "phrase": "real-time_domains"}, {"score": 0.0035499650812710806, "phrase": "specialized_computing_hardware"}, {"score": 0.003265365666305185, "phrase": "interfacing_purposes"}, {"score": 0.003197843245296877, "phrase": "full_adoption"}, {"score": 0.0031712256091350316, "phrase": "personal_embedded_devices"}, {"score": 0.0031448288291084, "phrase": "real-time_environments"}, {"score": 0.002953711377604328, "phrase": "operating_system's_execution"}, {"score": 0.0028446460307503343, "phrase": "efficient_and_timely_management"}, {"score": 0.0026384167183586015, "phrase": "emerging_application_domains"}, {"score": 0.0026055251533586804, "phrase": "heavy_resource_consumers"}, {"score": 0.002477998427152547, "phrase": "resource_management_techniques"}, {"score": 0.002426717832834137, "phrase": "concurrency_model"}, {"score": 0.0024065032567542107, "phrase": "embedded_operating_systems"}, {"score": 0.0023665766694993535, "phrase": "active_object_concurrency_model"}, {"score": 0.0022133714671312373, "phrase": "symbian"}, {"score": 0.0021049977753042253, "phrase": "proposed_resource_management_scheme"}], "paper_keywords": [""], "paper_abstract": "Personal devices are penetrating most technology market sectors nowadays. Despite their growing computation power, they execute powerful yet heavy software platforms that, in the end, expose the physical hardware resource limitations. Such software platforms are becoming thick layers that contain an embedded mobile operating system with graphical tools, communication software supporting wired and wireless protocols, and virtual machines and hosting platforms to enable portable code execution. In the last decade, mobile devices have also become part of some real-time domains that in the past only used specialized computing hardware; this is the case of, for example, industrial control infrastructures where personal devices are used mainly for interfacing purposes. Still, the full adoption of personal embedded devices in real-time environments has not been achieved due to their temporal unpredictability derived, among other reasons, from the operating system's execution and concurrency model. Therefore, mechanisms for efficient and timely management of resources are needed to meet, at least, soft real-time constrains of the emerging application domains that are heavy resource consumers. In this paper, we describe a scheme for integrating resource management techniques on top of the concurrency model of embedded operating systems that use the active object concurrency model; we illustrate the approach by taking, just as example, the model of Symbian. Also, results are presented and discussed that validate the proposed resource management scheme.", "paper_title": "Resource management for mobile operating systems based on the active object model", "paper_id": "WOS:000328181500003"}