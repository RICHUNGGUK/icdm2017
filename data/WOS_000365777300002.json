{"auto_keywords": [{"score": 0.045952199681975565, "phrase": "communication_medium"}, {"score": 0.00481495049065317, "phrase": "task_dependency"}, {"score": 0.00473320761888448, "phrase": "fundamental_problem"}, {"score": 0.0046928556063004214, "phrase": "distributed_computing"}, {"score": 0.00445783412174435, "phrase": "p_asynchronous_processors"}, {"score": 0.003837205620832367, "phrase": "partitionable_network_scenario"}, {"score": 0.0037719988989298983, "phrase": "competitive_performance"}, {"score": 0.0037238193456845124, "phrase": "randomized_scheduling_algorithm"}, {"score": 0.003374250301861101, "phrase": "natural_extension"}, {"score": 0.0031640918630415566, "phrase": "simple_randomized_algorithm"}, {"score": 0.003137074867443131, "phrase": "p_processors"}, {"score": 0.0030705342386533083, "phrase": "known_tasks"}, {"score": 0.0029416448256236057, "phrase": "k-partite_task_dependency_graph"}, {"score": 0.0028302635493019867, "phrase": "dynamic_communication_medium"}, {"score": 0.0026998264237910884, "phrase": "competitive_analysis"}, {"score": 0.002564360070426064, "phrase": "omniscient_offline_algorithm"}, {"score": 0.0025315664299815537, "phrase": "complete_knowledge"}, {"score": 0.002404522326122611, "phrase": "competitive_ratio"}, {"score": 0.002283839204519042, "phrase": "communication_medium_viz"}, {"score": 0.0021049977753042253, "phrase": "task_dependency_graph"}], "paper_keywords": ["On-line algorithms", " distributed computing", " randomized algorithms", " competitive analysis", " partitionable networks"], "paper_abstract": "A fundamental problem in distributed computing is the task of cooperatively executing a given set of t tasks by p asynchronous processors where the communication medium is dynamic and subject to failures. Also known as do-all, this problem been studied extensively in various distributed settings. In [2], the authors consider a partitionable network scenario and analyze the competitive performance of a randomized scheduling algorithm for the case where the tasks to be completed are independent of each other. In this paper, we study a natural extension of this problem where the tasks have dependencies among them. We present a simple randomized algorithm for p processors cooperating to perform t known tasks where the dependencies between them are defined by a k-partite task dependency graph and additionally these processors are subject to a dynamic communication medium. By virtue of the problem setting, we pursue competitive analysis where the performance of our algorithm is measured against that of the omniscient offline algorithm which has complete knowledge of the dynamics of the communication medium. We show that the competitive ratio of our algorithm is tight and depends on the dynamics of the communication medium viz. the computational width defined in [2] and also on the number of partitions of the task dependency graph.", "paper_title": "Work-Competitive Scheduling on Task Dependency Graphs", "paper_id": "WOS:000365777300002"}