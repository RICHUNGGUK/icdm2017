{"auto_keywords": [{"score": 0.04928409246925515, "phrase": "cloud_gaming"}, {"score": 0.0136156164317368, "phrase": "gpu_resource_sharing"}, {"score": 0.011987445398765194, "phrase": "runtime_uncertainties"}, {"score": 0.011153867889229601, "phrase": "vgasa"}, {"score": 0.00481495049065317, "phrase": "adaptive_scheduling_algorithm_of"}, {"score": 0.0047881480263782675, "phrase": "virtualized_gpu_resource"}, {"score": 0.004630423009638876, "phrase": "virtualization_technology"}, {"score": 0.004403480614319231, "phrase": "emerging_application"}, {"score": 0.004354572391793908, "phrase": "cloud_services"}, {"score": 0.004211069233133584, "phrase": "poor_default_mechanisms"}, {"score": 0.004049590638590415, "phrase": "cloud_games"}, {"score": 0.0038510053729959074, "phrase": "complex_game_scenarios"}, {"score": 0.00333029623311297, "phrase": "gpu"}, {"score": 0.0030794433253250476, "phrase": "graphics_api"}, {"score": 0.0030282147475402736, "phrase": "operating_system"}, {"score": 0.002722930209707764, "phrase": "service_level_agreement"}, {"score": 0.0026478260192958924, "phrase": "gpu_usage"}, {"score": 0.0024075916292945715, "phrase": "system_performance"}, {"score": 0.0023675132064088803, "phrase": "experimental_results"}, {"score": 0.002176887956041267, "phrase": "desired_level"}, {"score": 0.0021406417439887907, "phrase": "performance_overhead"}], "paper_keywords": ["GPU", " resource management", " scheduling", " control theory", " cloud gaming"], "paper_abstract": "As the virtualization technology for GPUs matures, cloud gaming has become an emerging application among cloud services. In addition to the poor default mechanisms of GPU resource sharing, the performance of cloud games is inevitably undermined by various runtime uncertainties such as rendering complex game scenarios. The question of how to handle the runtime uncertainties for GPU resource sharing remains unanswered. To address this challenge, we propose vGASA, a virtualized GPU resource adaptive scheduling algorithm in cloud gaming. vGASA interposes scheduling algorithms in the graphics API of the operating system, and hence the host graphic driver or the guest operating system remains unmodified. To fulfill the service level agreement as well as maximize GPU usage, we propose three adaptive scheduling algorithms featuring feedback control that mitigates the impact of the runtime uncertainties on the system performance. The experimental results demonstrate that vGASA is able to maintain frames per second of various workloads at the desired level with the performance overhead limited to 5-12 percent.", "paper_title": "vGASA: Adaptive Scheduling Algorithm of Virtualized GPU Resource in Cloud Gaming", "paper_id": "WOS:000343904400025"}