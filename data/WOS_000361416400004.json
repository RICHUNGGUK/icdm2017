{"auto_keywords": [{"score": 0.026205290102798512, "phrase": "ipo"}, {"score": 0.004597754207658615, "phrase": "software_test_suites"}, {"score": 0.004555499634179394, "phrase": "combinatorial_testing"}, {"score": 0.004096493540086106, "phrase": "test_suites"}, {"score": 0.004058826900076531, "phrase": "reasonable_amounts"}, {"score": 0.0038577428353448596, "phrase": "smallest_test_suites"}, {"score": 0.0036328561748082138, "phrase": "fixed_t"}, {"score": 0.0030336118627011786, "phrase": "horizontal_and_vertical_growth_address_test_suite_size"}, {"score": 0.0028303313661029597, "phrase": "growth_strategies"}, {"score": 0.0025565050791036973, "phrase": "reordering_strategy"}, {"score": 0.002407290605654707, "phrase": "fault_detection"}, {"score": 0.0022458849724980904, "phrase": "generation_time"}, {"score": 0.0021049977753042253, "phrase": "test_suite_size"}], "paper_keywords": ["combinatorial testing", " IPO", " test suite generation", " expected time to fault detection", " software under test"], "paper_abstract": "The In-Parameter-Order (IPO) algorithm is a widely used strategy for the construction of software test suites for combinatorial testing (CT) whose goal is to reveal faults triggered by interactions among parameters. Variants of IPO have been shown to produce test suites within reasonable amounts of time that are often not much larger than the smallest test suites known. When an entire test suite is executed, all faults that arise from t-way interactions for some fixed t are surely found. However, when tests are executed one at a time, it is desirable to detect a fault as early as possible so that it can be repaired. The basic IPO strategies of horizontal and vertical growth address test suite size, but not the early detection of faults. In this paper, the growth strategies in IPO are modified to attempt to evenly distribute the values of each parameter across the tests. Together with a reordering strategy that we add, this modification to IPO improves the rate of fault detection dramatically (improved by 31% on average). Moreover, our modifications always reduce generation time (2 times faster on average) and in some cases also reduce test suite size.", "paper_title": "Balancing Frequencies and Fault Detection in the In-Parameter-Order Algorithm", "paper_id": "WOS:000361416400004"}