{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_execution_time"}, {"score": 0.004668510065740584, "phrase": "heterogeneous_clusters"}, {"score": 0.0043215158337835706, "phrase": "general_techniques"}, {"score": 0.0039694170761766226, "phrase": "distributed_architectures"}, {"score": 0.003702702337768558, "phrase": "partitioning_step"}, {"score": 0.0036178264212372497, "phrase": "uniformly_related_processors"}, {"score": 0.003562322256892338, "phrase": "processors_speeds"}, {"score": 0.003427246079774314, "phrase": "constant_factor"}, {"score": 0.0032718761046588835, "phrase": "constant_time_technique"}, {"score": 0.0031968441980848436, "phrase": "processor_load"}, {"score": 0.0031477782772867655, "phrase": "execution_time"}, {"score": 0.003075583447856341, "phrase": "heterogeneous_environment"}, {"score": 0.0030283730114326014, "phrase": "also_a_technique"}, {"score": 0.0029361086955646625, "phrase": "unknown_cost_functions"}, {"score": 0.0028687545730861665, "phrase": "non_uniformly_related_processors"}, {"score": 0.0026965813247045427, "phrase": "dynamic_programming"}, {"score": 0.0022222152430170254, "phrase": "problem_size"}, {"score": 0.0021049977753042253, "phrase": "small_overhead"}], "paper_keywords": [""], "paper_abstract": "The aim of the paper is to introduce general techniques in order to optimize the parallel execution time of sorting on a distributed architectures with processors of various speeds. Such an application requires a partitioning step. For uniformly related processors (processors speeds are related by a constant factor), we develop a constant time technique for mastering processor load and execution time in an heterogeneous environment and also a technique to deal with unknown cost functions. For non uniformly related processors, we use a technique based on dynamic programming. Most of the time, the solutions are in O(p) (p is the number of processors), independent of the problem size n. Consequently, there is a small overhead regarding the problem we deal with but it is inherently limited by the knowing of time complexity of the portion of code following the partitioning.", "paper_title": "Methods for partitioning data to improve parallel execution time for sorting on heterogeneous clusters", "paper_id": "WOS:000237540300018"}