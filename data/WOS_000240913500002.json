{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "priority_queues"}, {"score": 0.015271462702187152, "phrase": "tree-like_processes"}, {"score": 0.011100343187922707, "phrase": "alternate_system"}, {"score": 0.004190305872545087, "phrase": "general_class"}, {"score": 0.003952082333580496, "phrase": "new_methodology"}, {"score": 0.0037823114064881357, "phrase": "key_result"}, {"score": 0.0032433414042726356, "phrase": "single_stack"}, {"score": 0.002948798472453167, "phrase": "tree-like_markov_process"}, {"score": 0.00276066021951467, "phrase": "matrix_analytic_methods"}, {"score": 0.0027006464509273806, "phrase": "main_performance_measures"}, {"score": 0.002401875938287542, "phrase": "steady_state"}, {"score": 0.0023496433751182162, "phrase": "tree-like_process"}, {"score": 0.002298544073884724, "phrase": "censoring_argument"}, {"score": 0.0021049977753042253, "phrase": "numerical_examples"}], "paper_keywords": ["priority queues", " tree-like processes", " matrix analytic methods"], "paper_abstract": "In this paper we demonstrate how tree-like processes can be used to analyze a general class of priority queues with three service classes, creating a new methodology to study priority queues. The key result is that the operation of a 3-class priority queue can be mimicked by means of an alternate system that is composed of a single stack and queue. The evolution of this alternate system is reduced to a tree-like Markov process, the solution of which is realized through matrix analytic methods. The main performance measures, i.e., the queue length distributions and loss rates, are obtained from the steady state of the tree-like process through a censoring argument. The strength of our approach is demonstrated via a series of numerical examples.", "paper_title": "Analyzing priority queues with 3 classes using tree-like processes", "paper_id": "WOS:000240913500002"}