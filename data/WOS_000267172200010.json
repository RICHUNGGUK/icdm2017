{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "non-linear_structures"}, {"score": 0.004749106104067268, "phrase": "classical_pattern"}, {"score": 0.004332471656145115, "phrase": "alphabet_set_sigma"}, {"score": 0.004253618550301311, "phrase": "parameterized_pattern_matching_model"}, {"score": 0.004195418010131832, "phrase": "consistent_renaming"}, {"score": 0.004119666181779188, "phrase": "sigma"}, {"score": 0.003970439654470374, "phrase": "parameterized_matching_paradigm"}, {"score": 0.0038447943243941685, "phrase": "software_engineering"}, {"score": 0.003809628721278519, "phrase": "computer_vision"}, {"score": 0.0037060428445111664, "phrase": "classical_pattern_matching"}, {"score": 0.003427540517249369, "phrase": "hypertext_require"}, {"score": 0.003140888248194296, "phrase": "exact_and_approximate_parameterized_matching"}, {"score": 0.0030414140732789186, "phrase": "exact_and_approximate_string"}, {"score": 0.002799810685137358, "phrase": "exact_parameterized_matching"}, {"score": 0.002711109302199029, "phrase": "linear_time"}, {"score": 0.0024842242921857705, "phrase": "tree_size"}, {"score": 0.0024389277933858054, "phrase": "pattern_length"}, {"score": 0.0023507916951658455, "phrase": "comparison_model"}, {"score": 0.0022347698358650514, "phrase": "acyclic_graphs"}, {"score": 0.002184235748605572, "phrase": "np"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Parameterized matching", " Pattern matching in trees and DAGs", " NP-completeness"], "paper_abstract": "The classical pattern matching paradigm is that of seeking occurrences of one string in another, where both strings are drawn from an alphabet set Sigma. In the parameterized pattern matching model, a consistent renaming of symbols from Sigma is allowed in a match. The parameterized matching paradigm has proven useful in problems in software engineering, computer vision, and other applications. In classical pattern matching, both the text and pattern are strings. Applications such as searching in xml or searching in hypertext require searching strings in non-linear structures such as trees or graphs. There has been work in the literature on exact and approximate parameterized matching, as well as work on exact and approximate string matching on non-linear structures. In this paper we explore parameterized matching in non-linear structures. We prove that exact parameterized matching on trees can be computed in linear time for alphabets in an O(n)-size integer range, and in time O(n log m) in general, where n is the tree size and m the pattern length. These bounds are optimal in the comparison model. We also show that exact parameterized matching on directed acyclic graphs (DAGs) is NP-complete. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Parameterized matching on non-linear structures", "paper_id": "WOS:000267172200010"}