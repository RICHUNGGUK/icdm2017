{"auto_keywords": [{"score": 0.0452277255352896, "phrase": "genetic_programming"}, {"score": 0.00481495049065317, "phrase": "instructionless_self-replicating_structures"}, {"score": 0.0047135086583390585, "phrase": "cellular_automata_models"}, {"score": 0.0046141941030386525, "phrase": "major_approach"}, {"score": 0.004536244367689415, "phrase": "information-processing_properties"}, {"score": 0.0041657281535389615, "phrase": "fairly_arbitrary_initial_cellular_automata_configuration"}, {"score": 0.003557924423642353, "phrase": "genetic_programming_work"}, {"score": 0.0033517342967390065, "phrase": "identifiable_instruction_sequence"}, {"score": 0.0033232673019931206, "phrase": "construction_arm"}, {"score": 0.0032810180076973806, "phrase": "replicating_structures"}, {"score": 0.0030908254851076005, "phrase": "fissionlike_process"}, {"score": 0.0030515222178491923, "phrase": "highly_parallel_operations"}, {"score": 0.0027078974645805736, "phrase": "self-replicating_structures"}, {"score": 0.0026058621464926826, "phrase": "resulting_replicators"}, {"score": 0.002413153346716919, "phrase": "secondary_structures"}, {"score": 0.0022346638243276717, "phrase": "powerful_tool"}, {"score": 0.0021049977753042253, "phrase": "cellular_spaces"}], "paper_keywords": ["Artificial life", " self-replication", " cellular automata", " evolutionary computing", " computational creativity", " genetic programming"], "paper_abstract": "Cellular automata models have historically been a major approach to studying the information-processing properties of self-replication. Here we explore the feasibility of adopting genetic programming so that, when it is given a fairly arbitrary initial cellular automata configuration, it will automatically generate a set of rules that make the given configuration replicate. We found that this approach works surprisingly effectively for structures as large as 50 components or more. The replication mechanisms discovered by genetic programming work quite differently than those of many past manually designed replicators: There is no identifiable instruction sequence or construction arm, the replicating structures generally translate and rotate as they reproduce, and they divide via a fissionlike process that involves highly parallel operations. This makes replication very fast, and one cannot identify which descendant is the parent and which is the child. The ability to automatically generate self-replicating structures in this fashion allowed us to examine the resulting replicators as their properties were systematically varied. Further, it proved possible to produce replicators that simultaneously deposited secondary structures while replicating, as in some past manually designed models. We conclude that genetic programming is a powerful tool for studying self-replication that might also be profitably used in contexts other than cellular spaces.", "paper_title": "Computational Discovery of Instructionless Self-Replicating Structures in Cellular Automata", "paper_id": "WOS:000272867800003"}