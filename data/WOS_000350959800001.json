{"auto_keywords": [{"score": 0.04765243024404616, "phrase": "new_compounds"}, {"score": 0.015719716506582538, "phrase": "predictive_models"}, {"score": 0.015639138747485497, "phrase": "production_environments"}, {"score": 0.015008985323829025, "phrase": "biological_properties"}, {"score": 0.013402190174706738, "phrase": "qsar_models"}, {"score": 0.004283576270012874, "phrase": "early_assessment"}, {"score": 0.004014035333627087, "phrase": "whole_qsar_model_life_cycle"}, {"score": 0.0037516215763875225, "phrase": "self-contained_virtual_machine"}, {"score": 0.0036363418376496484, "phrase": "web_services"}, {"score": 0.0035614563596982306, "phrase": "object-oriented_python_modules"}, {"score": 0.0035245918797629804, "phrase": "common_tasks"}, {"score": 0.0035063024767122684, "phrase": "standard_modeling_workflows"}, {"score": 0.0033198817440839795, "phrase": "graphic_user_interface"}, {"score": 0.0032769720645483102, "phrase": "simple_models"}, {"score": 0.003143341238802547, "phrase": "overriding_pieces"}, {"score": 0.0031188970263124546, "phrase": "original_source_code"}, {"score": 0.003070575642753471, "phrase": "object-oriented_capabilities"}, {"score": 0.003054715833975723, "phrase": "python"}, {"score": 0.0030308784612749647, "phrase": "high_flexibility"}, {"score": 0.002930044097238534, "phrase": "parent_model"}, {"score": 0.0029072537537959374, "phrase": "common_tools"}, {"score": 0.00286966196130402, "phrase": "automatic_exposure"}, {"score": 0.0028325548627901004, "phrase": "prediction_web_services"}, {"score": 0.002810520668490478, "phrase": "particular_etoxlab_architecture"}, {"score": 0.002759769970554556, "phrase": "portable_prediction_engine"}, {"score": 0.0027454383581457555, "phrase": "building_models"}, {"score": 0.0027311809666295565, "phrase": "confidential_information"}, {"score": 0.0027169974137406148, "phrase": "corporate_facilities"}, {"score": 0.002599365215003002, "phrase": "training_series"}, {"score": 0.00253916011199984, "phrase": "full_support"}, {"score": 0.002519402443228795, "phrase": "specific_needs"}, {"score": 0.002435542816459651, "phrase": "corporate_environments"}, {"score": 0.002366783703833563, "phrase": "vm"}, {"score": 0.002311933249234786, "phrase": "elegant_solution"}, {"score": 0.002299921909935613, "phrase": "common_practical_issues"}, {"score": 0.0022466367299066206, "phrase": "heterogeneous_environments"}, {"score": 0.002171836484200008, "phrase": "simple_and_safe_solution"}, {"score": 0.0021437334457067012, "phrase": "confidential_structures"}, {"score": 0.0021049977753042253, "phrase": "sensitive_information"}], "paper_keywords": ["Modeling", " Predictive models", " Web services", " QSAR", " Open source", " Confidential compounds"], "paper_abstract": "Background: Computational models based in Quantitative-Structure Activity Relationship (QSAR) methodologies are widely used tools for predicting the biological properties of new compounds. In many instances, such models are used as a routine in the industry (e.g. food, cosmetic or pharmaceutical industry) for the early assessment of the biological properties of new compounds. However, most of the tools currently available for developing QSAR models are not well suited for supporting the whole QSAR model life cycle in production environments. Results: We have developed eTOXlab; an open source modeling framework designed to be used at the core of a self-contained virtual machine that can be easily deployed in production environments, providing predictions as web services. eTOXlab consists on a collection of object-oriented Python modules with methods mapping common tasks of standard modeling workflows. This framework allows building and validating QSAR models as well as predicting the properties of new compounds using either a command line interface or a graphic user interface (GUI). Simple models can be easily generated by setting a few parameters, while more complex models can be implemented by overriding pieces of the original source code. eTOXlab benefits from the object-oriented capabilities of Python for providing high flexibility: any model implemented using eTOXlab inherits the features implemented in the parent model, like common tools and services or the automatic exposure of the models as prediction web services. The particular eTOXlab architecture as a self-contained, portable prediction engine allows building models with confidential information within corporate facilities, which can be safely exported and used for prediction without disclosing the structures of the training series. Conclusions: The software presented here provides full support to the specific needs of users that want to develop, use and maintain predictive models in corporate environments. The technologies used by eTOXlab (web services, VM, object-oriented programming) provide an elegant solution to common practical issues; the system can be installed easily in heterogeneous environments and integrates well with other software. Moreover, the system provides a simple and safe solution for building models with confidential structures that can be shared without disclosing sensitive information.", "paper_title": "eTOXlab, an open source modeling framework for implementing predictive models in production environments", "paper_id": "WOS:000350959800001"}