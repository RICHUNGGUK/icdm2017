{"auto_keywords": [{"score": 0.04589323623988377, "phrase": "service_composition_model"}, {"score": 0.004647105813224402, "phrase": "abstract_execution_model"}, {"score": 0.00457696724030363, "phrase": "user-defined_correctness"}, {"score": 0.00446240364863009, "phrase": "service_composition_environment"}, {"score": 0.0040525061916685924, "phrase": "multi-level_protection"}, {"score": 0.004011603024990615, "phrase": "service_execution_failure"}, {"score": 0.003871653343842317, "phrase": "different_composition_granularity_levels"}, {"score": 0.003736567662016446, "phrase": "forward_recovery"}, {"score": 0.003569763795153386, "phrase": "recovery_procedures"}, {"score": 0.003462704420080129, "phrase": "recovery_option"}, {"score": 0.003410380718649286, "phrase": "incremental_data_changes"}, {"score": 0.003291336101694653, "phrase": "service_executions"}, {"score": 0.0032088487124106936, "phrase": "data_changes"}, {"score": 0.0031603487697867538, "phrase": "process_history_capture_system"}, {"score": 0.0028990018343924683, "phrase": "delta-enabled_rollback"}, {"score": 0.002618995204424126, "phrase": "delta-enabled-rollback"}, {"score": 0.002540377258232509, "phrase": "process_execution"}, {"score": 0.0024516267507109753, "phrase": "case_study"}, {"score": 0.0023780209525032688, "phrase": "evaluation_framework"}, {"score": 0.002294929467537814, "phrase": "recovery_algorithm"}, {"score": 0.002203509076886664, "phrase": "recovery_command_generation_process"}, {"score": 0.00217017119491777, "phrase": "article_copies"}, {"score": 0.0021049977753042253, "phrase": "infosci"}], "paper_keywords": ["Compensation", " Contingency", " Delta-Enabled Rollback", " Failure Recovery", " Service Composition"], "paper_abstract": "This research has defined an abstract execution model for establishing user-defined correctness and recovery in a service composition environment. The service composition model defines a flexible, hierarchical service composition structure, where a service is composed of atomic and/or composite groups. The model provides multi-level protection against service execution failure by using compensation and contingency at different composition granularity levels, thus maximizing the potential for forward recovery of a process when failure occurs. The recovery procedures also include rollback as a recovery option, where incremental data changes known as deltas are extracted from service executions and externalized by streaming data changes to a Process History Capture System. Deltas can then be used to backward recover an operation through a process known as Delta-Enabled Rollback. This article defines the semantics of the service composition model and the manner in which compensation, contingency, and Delta-Enabled-rollback are used together to recover process execution. The authors also present a case study and describe a simulation and evaluation framework for demonstrating the functionality of the recovery algorithm and for evaluating the performance of the recovery command generation process. [Article copies are available for purchase from InfoSci-on-Demand.com]", "paper_title": "The DeltaGrid Service Composition and Recovery Model", "paper_id": "WOS:000267974000004"}