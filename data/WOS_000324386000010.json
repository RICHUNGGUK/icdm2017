{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "open_educational_resources"}, {"score": 0.004737201825299411, "phrase": "interoperability_issues"}, {"score": 0.0046987973264610685, "phrase": "intelligent_tutoring_systems"}, {"score": 0.004585433265422727, "phrase": "current_educational_platforms"}, {"score": 0.004548253531664032, "phrase": "additional_work"}, {"score": 0.004420472010542188, "phrase": "tutoring_systems"}, {"score": 0.004384623928442369, "phrase": "considerable_time"}, {"score": 0.004141663280057689, "phrase": "high_educational_value"}, {"score": 0.0038332390893263844, "phrase": "different_platforms"}, {"score": 0.0037406791638601206, "phrase": "new_approach"}, {"score": 0.003695237613399466, "phrase": "open-source_and_interoperable_intelligent_tutors"}, {"score": 0.003490343299449249, "phrase": "nonstandardized_peripheral_systems"}, {"score": 0.00335095982979018, "phrase": "learning_objects"}, {"score": 0.0031393948330209224, "phrase": "e-learning_standards"}, {"score": 0.0030635374056374016, "phrase": "external_resource_dependencies"}, {"score": 0.0029895074299598275, "phrase": "\"atomic\"_tutoring_systems"}, {"score": 0.0029291801502381513, "phrase": "\"molecular\"_tree_structures"}, {"score": 0.0026452734009203764, "phrase": "distinct_granularities"}, {"score": 0.002359759876402679, "phrase": "inner_loops"}, {"score": 0.0023405839743112482, "phrase": "outer_loops"}, {"score": 0.0022561982694417116, "phrase": "scorm_standards"}, {"score": 0.00220163445285539, "phrase": "implementation_details"}, {"score": 0.002148387364260776, "phrase": "theoretical_concepts"}, {"score": 0.0021309254505358253, "phrase": "technical_specifications"}, {"score": 0.0021049977753042253, "phrase": "practical_examples"}], "paper_keywords": ["Computers and education", " computer-assisted instruction", " computer-managed instruction", " distance learning"], "paper_abstract": "Because of interoperability issues, intelligent tutoring systems are difficult to deploy in current educational platforms without additional work. This limitation is significant because tutoring systems require considerable time and resources for their implementation. In addition, because these tutors have a high educational value, it is desirable that they could be shared, used by many stakeholders, and easily loaded onto different platforms. This paper describes a new approach to implementing open-source and interoperable intelligent tutors through standardization. In contrast to other methods, our technique does not require using nonstandardized peripheral systems or databases, which would restrict the interoperability of learning objects. Thus, our approach has the advantage of yielding tutors that are fully conformant to e-learning standards and that are free of external resource dependencies. According to our method, \"atomic\" tutoring systems are grouped to create \"molecular\" tree structures that cover course modules. In addition, given the interoperability of our technique, tutors can also be combined to create courses that have distinct granularities, topics, and target students. The key to our method is the focus on assuring what defines a tutor in terms of behavior and functionalities (inner loops and outer loops). Our proof of concept was developed using SCORM standards. This paper presents the implementation details of our technique, including the theoretical concepts, technical specifications, and practical examples.", "paper_title": "Interoperable Intelligent Tutoring Systems as Open Educational Resources", "paper_id": "WOS:000324386000010"}