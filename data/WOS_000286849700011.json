{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "software_engineering"}, {"score": 0.004562362497952548, "phrase": "parallel_isolation"}, {"score": 0.004521566043596533, "phrase": "ontological_thinking"}, {"score": 0.004421156723819163, "phrase": "research_field"}, {"score": 0.00438161736774803, "phrase": "artificial_intelligence"}, {"score": 0.0042459818200777846, "phrase": "software_engineering_researchers"}, {"score": 0.003406713877432236, "phrase": "coherent_underpinning_theory"}, {"score": 0.0033011569787033297, "phrase": "large_number"}, {"score": 0.0032716011062067286, "phrase": "theoretical_and_semi-theoretical_approaches"}, {"score": 0.0031845067058084583, "phrase": "multi-level_modelling_construct"}, {"score": 0.0030307927228223883, "phrase": "extant_literature"}, {"score": 0.00295008998986066, "phrase": "conceptual_definitions"}, {"score": 0.0028715299874549245, "phrase": "real-world_descriptors"}, {"score": 0.00249767641333441, "phrase": "domain_ontologies"}, {"score": 0.0024311346712789553, "phrase": "foundational_ontology"}, {"score": 0.0023033100935570755, "phrase": "domain_ontology"}, {"score": 0.00216263228969761, "phrase": "appropriate_semantic_mapping"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Ontology", " Metamodel", " Software engineering"], "paper_abstract": "Over the last several years, metamodels and ontologies have been developed in parallel isolation. Ontological thinking, largely from the research field of artificial intelligence, has been increasingly investigated by software engineering researchers, more familiar with the idea of a metamodel. Here, we investigate the literature on both metamodelling and ontologies in order to identify ways in which they can be made compatible and linked in such a way as to benefit both communities and create a contribution to a coherent underpinning theory for software engineering. Analysis of a large number of theoretical and semi-theoretical approaches using as a framework a multi-level modelling construct identifies strengths, weaknesses, incompatibilities and inconsistencies within the extant literature. A metamodel deals with conceptual definitions while an ontology deals with real-world descriptors of business entities and is thus better named \"domain ontology\". A specific kind of ontology (foundational or high-level) provides \"metalevel\" concepts for the domain ontologies. In other words, a foundational ontology may be used at the same abstraction level as a metamodel and a domain ontology at the same abstraction level as a (design) model, with each pair linked via an appropriate semantic mapping. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Bridging metamodels and ontologies in software engineering", "paper_id": "WOS:000286849700011"}