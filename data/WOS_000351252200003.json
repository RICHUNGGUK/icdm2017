{"auto_keywords": [{"score": 0.030998280832097137, "phrase": "cs"}, {"score": 0.00481495049065317, "phrase": "unreliable_reset"}, {"score": 0.004608284537368354, "phrase": "checking_sequence"}, {"score": 0.004039792863335641, "phrase": "reliable_reset_feature"}, {"score": 0.003754731210715724, "phrase": "distinguishing_sequence"}, {"score": 0.0035671997165370403, "phrase": "exponential_length"}, {"score": 0.0028014064098604093, "phrase": "reset_input_r"}, {"score": 0.0026613618933208467, "phrase": "reliable_reset"}, {"score": 0.0024915167458844914, "phrase": "synchronizing_sequence"}, {"score": 0.0023843376332011936, "phrase": "compound_reset_input"}, {"score": 0.002298544073884724, "phrase": "proposed_method"}, {"score": 0.0022321322970228308, "phrase": "wide_range"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Model-based testing", " Finite State Machines", " Checking sequences", " Synchronizing sequences", " Formal methods"], "paper_abstract": "The length of a checking sequence (CS) generated from a deterministic, minimal, and completely specified finite state machine model M of a system under test which does not have a reliable reset feature, is exponential when M does not have a distinguishing sequence. This is due to the exponential length locating sequences that need to be used in such a CS. In this work, we propose a method to decrease the number of locating sequences used in CS, by first verifying the reset input r and then using r as a reliable reset. When such a reset input is not available, a synchronizing sequence can be used as a compound reset input, which makes the proposed method applicable to a wide range of systems. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Reduced checking sequences using unreliable reset", "paper_id": "WOS:000351252200003"}