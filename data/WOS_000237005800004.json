{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fortran"}, {"score": 0.049582956915322066, "phrase": "least_squares"}, {"score": 0.04801282066094716, "phrase": "data_values"}, {"score": 0.04660546583022841, "phrase": "smoothed_values"}, {"score": 0.0045718784881879915, "phrase": "random_errors"}, {"score": 0.0045013675768375665, "phrase": "second_divided_differences"}, {"score": 0.004386247089914253, "phrase": "sign_change"}, {"score": 0.004318586703426523, "phrase": "optimization_problem"}, {"score": 0.0042851472210540436, "phrase": "highly_useful_description"}, {"score": 0.0038731929369886097, "phrase": "adjacent_data"}, {"score": 0.0038332390893263844, "phrase": "required_fit"}, {"score": 0.0037936958151903485, "phrase": "strictly_convex_quadratic_programming_problem"}, {"score": 0.003735141581977622, "phrase": "piecewise_linear_interpolant"}, {"score": 0.003658467551854842, "phrase": "first_set"}, {"score": 0.0035555949530956415, "phrase": "suitable_sets"}, {"score": 0.003509792495258205, "phrase": "finite_iterative_algorithm"}, {"score": 0.003393439115707876, "phrase": "quadratic_programming_problems"}, {"score": 0.0033758830345501246, "phrase": "consecutive_data"}, {"score": 0.0031969216992345974, "phrase": "divided_differences_constraints"}, {"score": 0.0031721397716029448, "phrase": "quadratic_programming_technique"}, {"score": 0.0031393948330209255, "phrase": "active_sets"}, {"score": 0.003090908149777001, "phrase": "b-spline_representation"}, {"score": 0.0030352831308463643, "phrase": "efficient_updating_procedures"}, {"score": 0.0030117504087859605, "phrase": "entire_code"}, {"score": 0.002874325505148923, "phrase": "data_sets"}, {"score": 0.0027934404090474456, "phrase": "overall_number"}, {"score": 0.002778979787458387, "phrase": "active_set_changes"}, {"score": 0.0025245283457440214, "phrase": "new_users"}, {"score": 0.002472643795752315, "phrase": "important_applications"}, {"score": 0.002453462513314309, "phrase": "smoothing_technique"}, {"score": 0.002409281455475267, "phrase": "sigmoid_approximation"}, {"score": 0.0023782103338224696, "phrase": "common_topic"}, {"score": 0.002281444023655679, "phrase": "distribution_material"}, {"score": 0.0022637425880437803, "phrase": "single_and_double_precision_versions"}, {"score": 0.0022345441935094023, "phrase": "driver_programs"}, {"score": 0.0022229703241525367, "phrase": "technical_details"}, {"score": 0.002188606372069588, "phrase": "software_package"}, {"score": 0.0021049977753042253, "phrase": "accompanying_ascii_file"}], "paper_keywords": ["Antarctica temperatures", " approximation", " convex", " concave", " data fitting", " divided difference", " increasing/diminishing rates of change", " inflection point", " growth", " least squares", " noise", " quadratic programming", " S-curve", " sigmoid", " smoothing", " spline", " utility function"], "paper_abstract": "Fortran 77 software is given for least squares smoothing to data values contaminated by random errors Subject to one sign change in the second divided differences of the smoothed values, where the location of the sign change is also unknown of the optimization problem. A highly useful description of the constraints is that they follow from the assumption of initially increasing and subsequently decreasing rates of change. or vice versa, of the process considered. The underlying algorithm partitions the data into two disjoint sets of adjacent data and calculates the required fit by solving a strictly convex quadratic programming problem for each set. The piecewise linear interpolant to the fit is convex on the first set and concave on the other one. The partition into suitable sets is achieved by a finite iterative algorithm, which is made quite efficient because of the interactions of the quadratic programming problems on consecutive data. The algorithm obtains the Solution by employing no more quadratic programming calculations over subranges of data than twice the number of the divided differences constraints. The quadratic programming technique makes use of active sets and takes advantage of a B-spline representation of the smoothed values that allows some efficient updating procedures. The entire code required to implement the method is 2920 Fortran lines. The package has been tested on a variety of data sets and it has performed very efficiently, terminating in an overall number of active set changes over subranges of data that is only proportional to the number of data. The results suggest that the package can be used for very large numbers of data values. Some examples with output are provided to help new users and exhibit certain features of the software. Important applications of the smoothing technique may be found in calculating a sigmoid approximation. which is a common topic in various contexts in applications in disciplines like physics, economics, biology and engineering. Distribution material that includes single and double precision versions of the code, driver programs, technical details of the implementation of the software package and test examples that demonstrate the use of the software is available in an accompanying ASCII file.", "paper_title": "L2CXCV: A Fortran 77 package for least squares convex/concave data smoothing", "paper_id": "WOS:000237005800004"}