{"auto_keywords": [{"score": 0.049146612112995924, "phrase": "java_card_applications"}, {"score": 0.015719716506582538, "phrase": "secure_information_flow"}, {"score": 0.003993958025223994, "phrase": "static_analysis"}, {"score": 0.003916098498242888, "phrase": "java_card_cap_files"}, {"score": 0.00376488621224566, "phrase": "cap_viewer"}, {"score": 0.0034118234596993836, "phrase": "abstract_interpretation"}, {"score": 0.0032800186243040663, "phrase": "multi-level_security_policy_assignment"}, {"score": 0.0030017207229983385, "phrase": "security_levels"}, {"score": 0.002914288956035066, "phrase": "bytecode_instructions"}, {"score": 0.0027741761880779535, "phrase": "abstract_domain"}, {"score": 0.002538687900036229, "phrase": "security_issues"}, {"score": 0.002464709648714996, "phrase": "explicit_or_implicit_information"}, {"score": 0.002346160830406661, "phrase": "security_properties"}, {"score": 0.002233301265743633, "phrase": "untrusted_sources"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Java card", " Java bytecode", " CAP file", " Secure information flow", " Abstract interpretation"], "paper_abstract": "This paper describes a tool for checking secure information flow in Java Card applications. The tool performs a static analysis of Java Card CAP files and includes a CAP viewer. The analysis is based on the theory of abstract interpretation and on a multi-level security policy assignment. Actual values of variables are abstracted into security levels, and bytecode instructions are executed over an abstract domain. The tool can be used for discovering security issues due to explicit or implicit information flows and for checking security properties of Java Card applications downloaded from untrusted sources. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "JCSI: A tool for checking secure information flow in Java Card applications", "paper_id": "WOS:000309315500006"}