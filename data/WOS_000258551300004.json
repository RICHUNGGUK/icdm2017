{"auto_keywords": [{"score": 0.04510723877933964, "phrase": "presented_method"}, {"score": 0.009848578973147159, "phrase": "cartesian_grids"}, {"score": 0.0037651925588909783, "phrase": "grid_size"}, {"score": 0.003688773272422118, "phrase": "spatial_direction"}, {"score": 0.0035892794633115227, "phrase": "anisotropic_and_non-graded_refinements"}, {"score": 0.003352088714126572, "phrase": "main_benefits"}, {"score": 0.003173636240475185, "phrase": "alternative_methods"}, {"score": 0.0031091858573262265, "phrase": "octree_grid_generation"}, {"score": 0.003025277245730244, "phrase": "simple_and_efficient_data_compression_method"}, {"score": 0.0029235593748707495, "phrase": "grid_levels"}, {"score": 0.002883833572486452, "phrase": "considerable_memory_overhead"}, {"score": 0.002786858120570499, "phrase": "octree_grids"}, {"score": 0.002602555367635598, "phrase": "finest_level"}, {"score": 0.002532284627202572, "phrase": "complicated_geometry"}, {"score": 0.002447101794397243, "phrase": "traditional_desktop_computers"}, {"score": 0.0022083264126633085, "phrase": "gnu_general_public_license"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Cartesian grid generation", " embedded boundary", " hierarchical grid", " immersed boundary", " octree generation", " STL file", " voxelization"], "paper_abstract": "An efficient and easy to implement method to generate Cartesian grids is presented. The presented method generates various kinds of Cartesian grids such as uniform, octree and embedded boundary grids. It supports the variation of grid size along each spatial direction as well as anisotropic and non-graded refinements. The efficiency and ease of implementation are the main benefits of the presented method in contrast to the alternative methods. Regarding octree grid generation, applying a simple and efficient data compression method permits to store all grid levels without considerable memory overhead. The presented method generates octree grids up to a 13-level refinement (84923 grids on the finest level) from a complicated geometry in a few minutes on the traditional desktop computers. The FORTRAN 90 implementation of the presented method is freely available under the terms of the GNU general public license. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "CartGen: Robust, efficient and easy to implement uniform/octree/embedded boundary Cartesian grid generator", "paper_id": "WOS:000258551300004"}