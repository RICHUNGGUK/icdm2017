{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_interfaces"}, {"score": 0.004648609688625397, "phrase": "physically_distributed_interfaces"}, {"score": 0.004183137595671171, "phrase": "global_sequence"}, {"score": 0.004020813632357377, "phrase": "different_systems"}, {"score": 0.0037311260623089436, "phrase": "input_output_transition_system"}, {"score": 0.003682207422331339, "phrase": "multiple_ports"}, {"score": 0.0036179751816682454, "phrase": "widely_used_ioco_implementation_relation"}, {"score": 0.003447035529485425, "phrase": "first_scenario"}, {"score": 0.003372019835750424, "phrase": "different_ports"}, {"score": 0.0031845067058084613, "phrase": "external_agent"}, {"score": 0.0029548937818509656, "phrase": "local_behaviours"}, {"score": 0.0028276174348291923, "phrase": "stronger_implementation_relation"}, {"score": 0.0027782510491938315, "phrase": "implementation_relations"}, {"score": 0.0026352496813713292, "phrase": "single-port_system"}, {"score": 0.0026121403051734744, "phrase": "new_implementation_relations"}, {"score": 0.002434396049547248, "phrase": "test_case"}, {"score": 0.002248816575548875, "phrase": "test_generation_algorithm"}, {"score": 0.0021998194157393353, "phrase": "complete_test_suites"}, {"score": 0.0021049977753042253, "phrase": "partially_specified_systems"}], "paper_keywords": ["Formal approaches to testing", " Systems with distributed ports", " Formal methodologies to develop distributed software systems"], "paper_abstract": "Some systems interact with their environment at physically distributed interfaces called ports and we separately observe sequences of inputs and outputs at each port. As a result we cannot reconstruct the global sequence that occurred and this reduces our ability to distinguish different systems in testing or in use. In this paper we explore notions of conformance for an input output transition system that has multiple ports, adapting the widely used ioco implementation relation to this situation. We consider two different scenarios. In the first scenario the agents at the different ports are entirely independent. Alternatively, it may be feasible for some external agent to receive information from more than one of the agents at the ports of the system, these local behaviours potentially being brought together and here we require a stronger implementation relation. We define implementation relations for these scenarios and prove that in the case of a single-port system the new implementation relations are equivalent to ioco. In addition, we define what it means for a test case to be controllable and give an algorithm that decides whether this condition holds. We give a test generation algorithm to produce sound and complete test suites. Finally, we study two implementation relations to deal with partially specified systems.", "paper_title": "Implementation relations and test generation for systems with distributed interfaces", "paper_id": "WOS:000300893400003"}