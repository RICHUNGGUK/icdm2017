{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sediment_dynamics"}, {"score": 0.049636680610423214, "phrase": "shallow_water"}, {"score": 0.03747360849945527, "phrase": "poisson_distribution_function"}, {"score": 0.036313720386738475, "phrase": "suspended_particles"}, {"score": 0.034405284271895015, "phrase": "second_method"}, {"score": 0.004726382602809228, "phrase": "particle_decomposition_approach"}, {"score": 0.004596561972944185, "phrase": "parallel_simulation"}, {"score": 0.004408456735066782, "phrase": "lagrangian_model"}, {"score": 0.00418892838079239, "phrase": "large_number"}, {"score": 0.00415019999222481, "phrase": "independent_particles"}, {"score": 0.0038708810091769856, "phrase": "high_efficiency"}, {"score": 0.003764469758319617, "phrase": "sediment_transport_model"}, {"score": 0.003610292749660581, "phrase": "modified_mean"}, {"score": 0.0034947408949397127, "phrase": "expected_number"}, {"score": 0.0033986345279488476, "phrase": "particular_grid_cell"}, {"score": 0.0033051623473192814, "phrase": "available_processors"}, {"score": 0.003011706511096639, "phrase": "grid_cells"}, {"score": 0.0028882701690741467, "phrase": "third_method"}, {"score": 0.0027698788736535865, "phrase": "synchronised_pseudo-random-number_generator"}, {"score": 0.002656327554326748, "phrase": "valid_grid_cells"}, {"score": 0.0025952620596908747, "phrase": "parallel_simulation_experiments"}, {"score": 0.002420339995088838, "phrase": "parallel_performance"}, {"score": 0.002267708463966758, "phrase": "best_method"}, {"score": 0.0022467024793003812, "phrase": "distributed_computing_systems"}, {"score": 0.0021049977753042253, "phrase": "best_load_distribution"}], "paper_keywords": ["Lagrangian particle model", " stochastic differential equation", " sediment transport", " parallel processing", " speed up", " load balance", " efficiency"], "paper_abstract": "This paper describes the parallel simulation of sediment dynamics in shallow water. By using a Lagrangian model, the problem is transformed to one in which a large number of independent particles must be tracked. This results in a technique that can be parallelised with high efficiency. We have developed a sediment transport model using three different sediment suspension methods. The first method uses a modified mean for the Poisson distribution function to determine the expected number of the suspended particles in each particular grid cell of the domain over all available processors. The second method determines the number of particles to suspend with the aid of the Poisson distribution function only in those grid cells which are assigned to that processor. The third method is based on the technique of using a synchronised pseudo-random-number generator to generate identical numbers of suspended particles in all valid grid cells for each processor. Parallel simulation experiments are performed in order to investigate the efficiency of these three methods. Also the parallel performance of the implementations is analysed. We conclude that the second method is the best method on distributed computing systems (e.g., a Beowulf cluster), whereas the third maintains the best load distribution. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Parallel and distributed simulation of sediment dynamics in shallow water using particle decomposition approach", "paper_id": "WOS:000256804600001"}