{"auto_keywords": [{"score": 0.04040652410615597, "phrase": "software_products"}, {"score": 0.00481495049065317, "phrase": "software_reliability_estimation"}, {"score": 0.004808273011008349, "phrase": "analysis"}, {"score": 0.004642292792558686, "phrase": "key_part"}, {"score": 0.00429558848734449, "phrase": "biggest_challenge"}, {"score": 0.004256533389293113, "phrase": "software_engineers"}, {"score": 0.004122604238556912, "phrase": "high_reliability"}, {"score": 0.004066498558415824, "phrase": "timely_manner"}, {"score": 0.0036275736378775757, "phrase": "practical_problem"}, {"score": 0.003545625043276134, "phrase": "selected_srgms"}, {"score": 0.0034813964296826973, "phrase": "software_practitioners"}, {"score": 0.003371773890338284, "phrase": "single_model"}, {"score": 0.0032805541677236325, "phrase": "consistently_accurate_results"}, {"score": 0.003105428650735113, "phrase": "combinational_models"}, {"score": 0.0030491497463386924, "phrase": "prediction_capability"}, {"score": 0.003021392767766593, "phrase": "software_reliability"}, {"score": 0.0027954035431845344, "phrase": "harmonic_combinations"}, {"score": 0.0026582395558737855, "phrase": "proper_weights"}, {"score": 0.002634031703695684, "phrase": "model_combinations"}, {"score": 0.002539379289856756, "phrase": "enhanced_genetic_algorithms"}, {"score": 0.0024593458703463474, "phrase": "weighted_assignments"}, {"score": 0.0023818288346547692, "phrase": "real_software_failure_data"}, {"score": 0.002349357968054713, "phrase": "numerical_results"}, {"score": 0.002203570941628287, "phrase": "management_metrics"}, {"score": 0.0021438877099090262, "phrase": "software_quality"}, {"score": 0.0021049977753042253, "phrase": "optimal_release_strategy"}], "paper_keywords": ["Genetic algorithm", " non-homogeneous Poisson process", " optimization problems", " software development process", " software reliability growth models", " weighted combinations"], "paper_abstract": "Software is currently a key part of many safety-critical and life-critical application systems. People always need easyand instinctive-to-use software, but the biggest challenge for software engineers is how to develop software with high reliability in a timely manner. To assure quality, and to assess the reliability of software products, many software reliability growth models (SRGMs) have been proposed in the past three decades. The practical problem is that sometimes these selected SRGMs by companies or software practitioners disagree in their reliability predictions, while no single model can be trusted to provide consistently accurate results across various applications. Consequently, some researchers have proposed to use combinational models for improving the prediction capability of software reliability. In this paper, three enhanced weighted-combinations, namely weighted arithmetic, weighted geometric, and weighted harmonic combinations, are proposed. To solve the problem of determining proper weights for model combinations, we further study how to incorporate enhanced genetic algorithms (EGAs) with several efficient operators into weighted assignments. Experiments are performed based on real software failure data, and numerical results show that our proposed models are flexible enough to depict various software development environments. Finally, some management metrics are presented to both assure software quality and determine the optimal release strategy of software products under development.", "paper_title": "Optimal Weighted Combinational Models for Software Reliability Estimation and Analysis", "paper_id": "WOS:000345904800005"}