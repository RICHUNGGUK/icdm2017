{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "object-centric_view"}, {"score": 0.004544629724830453, "phrase": "large_body"}, {"score": 0.004415189385015778, "phrase": "runtime_execution"}, {"score": 0.004264697351852424, "phrase": "abstract_behavioral_views"}, {"score": 0.00402514392911723, "phrase": "method_execution_events"}, {"score": 0.003933118499284644, "phrase": "object_graphs"}, {"score": 0.003887894704361635, "phrase": "heap_memory_snapshots"}, {"score": 0.0033257460346754687, "phrase": "object_flow"}, {"score": 0.0029281780903782284, "phrase": "object-oriented_application"}, {"score": 0.00282822695516646, "phrase": "object_flow_analysis"}, {"score": 0.0026691455928407022, "phrase": "new_information"}, {"score": 0.0025044454602720597, "phrase": "visual_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Dynamic analysis", " Object flow analysis"], "paper_abstract": "A large body of research analyzes the runtime execution of a system to extract abstract behavioral views. Those approaches primarily analyze control flow by tracing method execution events or they analyze object graphs of heap memory snapshots. However, they do not capture how objects are passed through the system at runtime. We refer to the exchange of objects as the object flow, and we claim that it is necessary to analyze object flows if we are to understand the runtime of an object-oriented application. We propose and detail object flow analysis, a novel dynamic analysis technique that takes this new information into account. To evaluate its usefulness, we present a visual approach that allows a developer to study classes and components in terms of how they exchange objects at runtime. We illustrate our approach on three case studies. (c) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Taking an object-centric view on dynamic information with object flow analysis", "paper_id": "WOS:000260328700006"}