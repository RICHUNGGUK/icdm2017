{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "task-level_concurrency"}, {"score": 0.004360412703519539, "phrase": "multiprocessor_soc._a_simple_extension"}, {"score": 0.0035755653799043, "phrase": "concurrency_decomposition"}, {"score": 0.0028360962841331634, "phrase": "readily_available_reference_c_programs"}, {"score": 0.0027437235598539904, "phrase": "easy_and_rapid_exploration"}, {"score": 0.0024569466759289055, "phrase": "crucial_task"}, {"score": 0.0023249757987087033, "phrase": "overall_quality"}, {"score": 0.0022245107065724215, "phrase": "mpsoc."}, {"score": 0.002175913488493802, "phrase": "test_case"}, {"score": 0.0021049977753042253, "phrase": "jpeg_encoder_application"}], "paper_keywords": ["task-level concurrency", " hybrid dataflow", " C language", " multiprocessor system-on-chips"], "paper_abstract": "A simple extension used to assist the decomposition of task-level concurrency within C programs is presented in this paper. The concurrency decomposition is meant to be used as the point of entry for Multiprocessor System-on-Chips (MPSoC) architectures' design-flow. Our methodology allows the (re)use of readily available reference C programs and enables easy and rapid exploration for various alternatives of task partitioning strategies; a crucial task that greatly influences the overall quality of the designed MPSoC. A test case using a JPEG encoder application has been performed and the results are presented in this paper.", "paper_title": "Decomposition of task-level concurrency on C programs applied to the design of multiprocessor SoC", "paper_id": "WOS:000257990300026"}