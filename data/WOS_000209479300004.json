{"auto_keywords": [{"score": 0.04472882712454684, "phrase": "unity"}, {"score": 0.00481495049065317, "phrase": "concurrent_programs"}, {"score": 0.003954837422946628, "phrase": "sequential_programming_model"}, {"score": 0.003468287913322258, "phrase": "auxiliary_variables"}, {"score": 0.003334309053314909, "phrase": "systematic_way"}, {"score": 0.0032054891061528896, "phrase": "program_counters"}, {"score": 0.00308163068747474, "phrase": "program_text"}, {"score": 0.0025638362414466278, "phrase": "new_system"}, {"score": 0.00216108812070072, "phrase": "owicki"}, {"score": 0.002104998715352348, "phrase": "gries"}], "paper_keywords": [""], "paper_abstract": "This paper describes a logic of progress for concurrent programs. The logic is based on that of UNITY, molded to fit a sequential programming model. Integration of the two is achieved by using auxiliary variables in a systematic way that incorporates program counters into the program text. The rules for progress in UNITY are then modified to suit this new system. This modification is however subtle enough to allow the theory of Owicki and Gries to be used without change.", "paper_title": "EXTENDING THE THEORY OF OWICKI AND GRIES WITH A LOGIC OF PROGRESS", "paper_id": "WOS:000209479300004"}