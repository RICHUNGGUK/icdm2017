{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimal_broadcast_schedule"}, {"score": 0.049139223492443776, "phrase": "total_flow_time"}, {"score": 0.04356786662400934, "phrase": "dynamic_programming_approach"}, {"score": 0.03860254031762916, "phrase": "optimal_schedule"}, {"score": 0.004360412703519539, "phrase": "broadcast_scheduling"}, {"score": 0.003948613642680196, "phrase": "broadcast_server"}, {"score": 0.003896717568943166, "phrase": "k_pages"}, {"score": 0.003820144626025562, "phrase": "last_page_request"}, {"score": 0.0032807941194429235, "phrase": "single_broadcast_channel"}, {"score": 0.0025173564697303836, "phrase": "broadcast_scheduling_problem"}, {"score": 0.0024852377375594197, "phrase": "np"}, {"score": 0.0021049977753042253, "phrase": "straightforward_implementation"}], "paper_keywords": ["broadcast scheduling", " flow time minimization", " dynamic programming"], "paper_abstract": "We study the problem of (off-line) broadcast scheduling in minimizing total flow time and propose a dynamic programming approach to compute an optimal broadcast schedule. Suppose the broadcast server has k pages and the last page request arrives at time n. The optimal schedule can be computed in O(k(3)(n+k)(k-1)) time for the case that the server has a single broadcast channel. For m channels case, i.e., the server can broadcast m different pages at a time where m < k, the optimal schedule can be computed in O(n(k-m)) time when k and m are constants. Note that this broadcast scheduling problem is NP-hard when k is a variable and will take O(n(k-m+1)) time when k is fixed and m > 1 with the straightforward implementation of the dynamic programming approach.", "paper_title": "A dynamic programming approach of finding an optimal broadcast schedule in minimizing total flow time", "paper_id": "WOS:000236792900005"}