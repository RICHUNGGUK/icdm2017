{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "p_systems"}, {"score": 0.008521061018792896, "phrase": "np-complete_numerical_problems"}, {"score": 0.008221480770788485, "phrase": "unary_notation"}, {"score": 0.00666105712127802, "phrase": "binary_notation"}, {"score": 0.00481495049065317, "phrase": "binary_form"}, {"score": 0.00477190623242136, "phrase": "current_p_systems"}, {"score": 0.004441059405327222, "phrase": "classical_complexity_theory"}, {"score": 0.0043619799095455415, "phrase": "turing_machines"}, {"score": 0.0042459818200777846, "phrase": "unary_encoded_instances"}, {"score": 0.0035473867669654174, "phrase": "simple_method"}, {"score": 0.003499864176875713, "phrase": "binary_numbers"}, {"score": 0.0032863459256972896, "phrase": "usual_unary_notation"}, {"score": 0.0031559919178954644, "phrase": "unary_p_systems"}, {"score": 0.0027328817607818207, "phrase": "uniform_families"}, {"score": 0.0026720866990543744, "phrase": "np-complete_problems"}, {"score": 0.0025316254589087973, "phrase": "binary_encoded_instances"}, {"score": 0.0021049977753042253, "phrase": "partition_numerical_problem"}], "paper_keywords": ["membrane computing", " P systems", " PARTITION", " 3-SAT"], "paper_abstract": "Current P systems which solve NP-complete numerical problems represent the instances of the problems in unary notation. However, in classical complexity theory, based upon Turing machines, switching from binary to unary encoded instances generally corresponds to simplify the problem. In this paper we show that, when working with P systems, we can assume without loss of generality that instances are expressed in binary notation. More precisely, we propose a simple method to encode binary numbers using multisets, and a family of P systems which transforms such multisets into the usual unary notation. Such a family could thus be composed with the unary P systems currently proposed in the literature to obtain (uniform) families of P systems which solve NP-complete numerical problems with instances encoded in binary notation. We introduce also a framework which can be used to design uniform families of P systems which solve NP-complete problems (both numerical and non-numerical) working directly on binary encoded instances, i.e., without first transforming them to unary notation. We illustrate our framework by designing a family of P systems which solves the 3-SAT problem. Next, we discuss the modifications needed to obtain a family of P systems which solves the PARTITION numerical problem.", "paper_title": "P systems with input in binary form", "paper_id": "WOS:000235344700008"}