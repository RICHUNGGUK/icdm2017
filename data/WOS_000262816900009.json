{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "error_candidates"}, {"score": 0.014811546274031417, "phrase": "design_errors"}, {"score": 0.008985315381951412, "phrase": "debugging_priority"}, {"score": 0.004784565134881178, "phrase": "efficient_hdl_design_debugging"}, {"score": 0.004739344544832536, "phrase": "hardware_description_languages"}, {"score": 0.0047353624927990575, "phrase": "masking_error_situation"}, {"score": 0.004562676524864167, "phrase": "digital_circuit"}, {"score": 0.004392565073466714, "phrase": "hdl_code"}, {"score": 0.0043235627487378595, "phrase": "existing_approaches"}, {"score": 0.004215397034321004, "phrase": "debugging_process"}, {"score": 0.004162328961227939, "phrase": "reduced_set"}, {"score": 0.004071055784602253, "phrase": "derived_set"}, {"score": 0.0039691820377914635, "phrase": "true_design_errors"}, {"score": 0.0038090252359678336, "phrase": "debugging_priority_method"}, {"score": 0.00369022262431101, "phrase": "error-searching_process"}, {"score": 0.0036553070575015344, "phrase": "derived_error_candidate"}, {"score": 0.003474575242120264, "phrase": "individual's_degree"}, {"score": 0.003334309053314909, "phrase": "rank_order"}, {"score": 0.0031996871318754685, "phrase": "error_candidate"}, {"score": 0.0031593653672862924, "phrase": "design_error"}, {"score": 0.0029840952148215733, "phrase": "displayed_rank_order"}, {"score": 0.002965229277927781, "phrase": "circuit_designers"}, {"score": 0.0029001301231553005, "phrase": "blind_searching"}, {"score": 0.0028006988338192375, "phrase": "currently_used_confidence_score"}, {"score": 0.0024204262825429095, "phrase": "new_probabilistic_confidence_score"}, {"score": 0.002242940472941759, "phrase": "better_results"}, {"score": 0.0021454671611847507, "phrase": "better_accuracy"}, {"score": 0.002105000753461325, "phrase": "cs."}], "paper_keywords": ["Error diagnosis", " hardware description language (HDL)", " HDL code debugging", " verification"], "paper_abstract": "When hardware description languages (HDLs) are used in describing the behavior of a digital circuit, design errors (or bugs) almost inevitably appear in the HDL code of the circuit. Existing approaches attempt to reduce efforts involved in this debugging process by extracting a reduced set of error candidates. However, the derived set can still contain many error candidates, and finding true design errors among the candidates in the set may still consume much valuable time. A debugging priority method [21] was proposed to speed up the error-searching process in the derived error candidate set. The idea is to display error candidates in an order that corresponds to an individual's degree of suspicion. With this method, error candidates are placed in a rank order based on their probability of being an error. The more likely an error candidate is, a design error (or a bug), the higher the rank order that it has. With the displayed rank order, circuit designers should find design errors quicker than with blind searching when searching for design errors among all the derived candidates. However, the currently used confidence score (CS) for deriving the debugging priority has some flaws in estimating the likelihood of correctness of error candidates due to the masking error situation. This reduces the degree of accuracy in establishing a debugging priority. Therefore, the objective of this work is to develop a new probabilistic confidence score (PCS) that takes the masking error situation into consideration in order to provide a more reliable and accurate debugging priority. The experimental results show that our proposed PCS achieves better results in estimating the likelihood of correctness and can indeed suggest a debugging priority with better accuracy, as compared to the CS.", "paper_title": "Accurate Rank Ordering of Error Candidates for Efficient HDL Design Debugging", "paper_id": "WOS:000262816900009"}