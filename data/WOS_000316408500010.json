{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "content-based_video_retrieval_system"}, {"score": 0.004632039024076267, "phrase": "shot_boundary_detection"}, {"score": 0.004456044928556639, "phrase": "unavoidable_stage"}, {"score": 0.003967021436047945, "phrase": "computational_point"}, {"score": 0.0036710872046569532, "phrase": "suitable_optimization_strategies"}, {"score": 0.003441352119167824, "phrase": "different_strategies"}, {"score": 0.0024906610581090223, "phrase": "video_segmentation"}, {"score": 0.0023650305205893353, "phrase": "data_access"}, {"score": 0.0021049977753042253, "phrase": "load_balancing_issues"}], "paper_keywords": ["Shot boundary detection", " Information storage and retrieval", " Distributed systems", " Performance evaluation", " Load balancing"], "paper_abstract": "In a Content-based Video Retrieval system, the shot boundary detection is an unavoidable stage. Such a high demanding task needs a deep study from a computational point of view to allow finding suitable optimization strategies. This paper presents different strategies implemented on both a shared-memory symmetric multiprocessor and a Beowulf cluster, and the evaluation of two different programming paradigms: shared-memory and message passing. Several approaches for video segmentation as well as data access are tested in the experiments that also consider load balancing issues.", "paper_title": "Scalable shot boundary detection", "paper_id": "WOS:000316408500010"}