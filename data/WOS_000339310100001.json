{"auto_keywords": [{"score": 0.04986258904819165, "phrase": "voting_game_design_problems"}, {"score": 0.041461131062088104, "phrase": "target_distribution"}, {"score": 0.03596833326968807, "phrase": "inverse_problem"}, {"score": 0.03301617671098093, "phrase": "weighted_voting_game"}, {"score": 0.028045396569549026, "phrase": "weighted_voting_games"}, {"score": 0.024016894719827927, "phrase": "target_power_index"}, {"score": 0.00481495049065317, "phrase": "finding_optimal_solutions"}, {"score": 0.004739262340543531, "phrase": "multiple_agents"}, {"score": 0.004685925469417181, "phrase": "joint_decision"}, {"score": 0.0046018264570209765, "phrase": "agents'_preferences"}, {"score": 0.004570678125498602, "phrase": "agent's_vote"}, {"score": 0.00400809235943757, "phrase": "so-called_inverse_problem"}, {"score": 0.0035869274480340727, "phrase": "specified_distance_measure"}, {"score": 0.0035384847666577158, "phrase": "solution_approaches"}, {"score": 0.0035145084518315656, "phrase": "larger_class"}, {"score": 0.0034986142487041954, "phrase": "voting_game_design"}, {"score": 0.003381668914281943, "phrase": "general_vgd_problem"}, {"score": 0.0033208994907835197, "phrase": "voting_game"}, {"score": 0.0027512013196747185, "phrase": "doubly_exponential_algorithm"}, {"score": 0.002714014662631513, "phrase": "simple_games"}, {"score": 0.0025643902117791144, "phrase": "improved_algorithm"}, {"score": 0.0025469973648469717, "phrase": "output-polynomial_time"}, {"score": 0.0024785947526160296, "phrase": "polynomial_factor"}, {"score": 0.0024395426929046415, "phrase": "exact_anytime-algorithm"}, {"score": 0.0024175034387671633, "phrase": "exponential_time"}, {"score": 0.0024011044456895875, "phrase": "power_index"}, {"score": 0.0022738454676924876, "phrase": "normalized_banzhaf_power_distribution"}, {"score": 0.0021338577107571912, "phrase": "exponential-time_computable_function"}, {"score": 0.0021049977753042253, "phrase": "normalized_banzhaf_index"}], "paper_keywords": [""], "paper_abstract": "In many circumstances where multiple agents need to make a joint decision, voting is used to aggregate the agents' preferences. Each agent's vote carries a weight, and if the sum of the weights of the agents in favor of some outcome is larger than or equal to a given quota, then this outcome is decided upon. The distribution of weights leads to a certain distribution of power. Several 'power indices' have been proposed to measure such power. In the so-called inverse problem, we are given a target distribution of power, and are asked to come up with a game-in the form of a quota, plus an assignment of weights to the players-whose power distribution is as close as possible to the target distribution (according to some specified distance measure). Here we study solution approaches for the larger class of voting game design (VGD) problems, one of which is the inverse problem. In the general VGD problem, the goal is to find a voting game (with a given number of players) that optimizes some function over these games. In the inverse problem, for example, we look for a weighted voting game that minimizes the distance between the distribution of power among the players and a given target distribution of power (according to a given distance measure). Our goal is to find algorithms that solve voting game design problems exactly, and we approach this goal by enumerating all games in the class of games of interest. We first present a doubly exponential algorithm for enumerating the set of simple games. We then improve on this algorithm for the class of weighted voting games and obtain a quadratic exponential (i.e., 2(O)(n(2))) algorithm for enumerating them. We show that this improved algorithm runs in output-polynomial time, making it the fastest possible enumeration algorithm up to a polynomial factor. Finally, we propose an exact anytime-algorithm that runs in exponential time for the power index weighted voting game design problem (the 'inverse problem'). We implement this algorithm to find a weighted voting game with a normalized Banzhaf power distribution closest to a target power index, and perform experiments to obtain some insights about the set of weighted voting games. We remark that our algorithm is applicable to optimizing any exponential-time computable function, the distance of the normalized Banzhaf index to a target power index is merely taken as an example.", "paper_title": "Finding Optimal Solutions for Voting Game Design Problems", "paper_id": "WOS:000339310100001"}