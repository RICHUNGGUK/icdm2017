{"auto_keywords": [{"score": 0.037158875120775314, "phrase": "server_resource"}, {"score": 0.028387849147691914, "phrase": "mqos_scheduling"}, {"score": 0.011073339957922307, "phrase": "main_scheduler"}, {"score": 0.00481495049065317, "phrase": "differentiated_qos"}, {"score": 0.004769182299692333, "phrase": "website_gateway"}, {"score": 0.004723847090183984, "phrase": "differentiated_quality"}, {"score": 0.004546755482549647, "phrase": "website_operator"}, {"score": 0.004482063543727601, "phrase": "different_service_levels"}, {"score": 0.004397230847865867, "phrase": "traditional_http_request_scheduling_schemes"}, {"score": 0.003828187766572941, "phrase": "multiple_resources"}, {"score": 0.0037199473428123175, "phrase": "multiple-resource_request_scheduling_algorithm"}, {"score": 0.0034790978593553794, "phrase": "mqos_scheduler"}, {"score": 0.0029996699429582835, "phrase": "appropriate_sub-scheduler"}, {"score": 0.0029147869733574844, "phrase": "server_resources"}, {"score": 0.00283229915062791, "phrase": "mqos_gateway"}, {"score": 0.0027786788609068355, "phrase": "squid"}, {"score": 0.0027521703998709796, "phrase": "linux"}, {"score": 0.0025737890313763407, "phrase": "single-resource_request_scheduling"}, {"score": 0.0024652715040303416, "phrase": "accurate_differentiation_oil"}, {"score": 0.0023613185213421173, "phrase": "total_server_throughput"}, {"score": 0.0022294857939412073, "phrase": "sqos_scheduling"}, {"score": 0.0021976915360493628, "phrase": "average_user-perceived_latency"}], "paper_keywords": ["multiple resources", " request scheduling", " service differentiation"], "paper_abstract": "Differentiated quality of service is a way for a website operator to provide different service levels to its clients. Traditional HTTP request scheduling schemes can achieve this, but they schedule requests to manage only one server resource, such as CPU or disk I/O. Actually, processing a request on the server will consume multiple resources. This paper presents a multiple-resource request scheduling algorithm, called mQoS, for differentiating the utilization of the server resource. The mQoS scheduler consists of several sub-schedulers and a main scheduler. Each sub-scheduler manages a server resource to differentiate its utilization among the classes. The main scheduler checks the availability of every server resource and triggers an appropriate sub-scheduler to balance the utilization of server resources. The implementation of the mQoS gateway is based on Squid and Linux. The evaluation compares the mQoS scheduling with no scheduling (nQoS) and single-resource request scheduling (sQoS). The mQoS scheduling reveals the accurate differentiation oil every server resource. In addition, the total server throughput in the mQoS scheduling is improved by 21%, compared with the sQoS scheduling. The average user-perceived latency of the mQoS scheduling is also shorter than other scheduling. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Multiple-resource request scheduling for differentiated QoS at website gateway", "paper_id": "WOS:000258035900014"}