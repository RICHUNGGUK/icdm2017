{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "grid"}, {"score": 0.004692980391580608, "phrase": "pgpgrid_project"}, {"score": 0.004322967486451877, "phrase": "necessary_resources"}, {"score": 0.004085579055228594, "phrase": "unusual_features"}, {"score": 0.004023120753104693, "phrase": "rapid_spawning"}, {"score": 0.003941319912895672, "phrase": "real_time"}, {"score": 0.0038810583785936505, "phrase": "dynamic_inter-process_network_topology"}, {"score": 0.0036490529923833884, "phrase": "usual_task_migration_capabilities"}, {"score": 0.0035932440062595252, "phrase": "globus_toolkit"}, {"score": 0.0035382855372646164, "phrase": "present_paper"}, {"score": 0.003413284742632989, "phrase": "real_parallelizability"}, {"score": 0.003361069456060196, "phrase": "scanner_application"}, {"score": 0.00325901518290063, "phrase": "new_java_application_programming_interface"}, {"score": 0.003192700856094016, "phrase": "milner's_pi-calculus"}, {"score": 0.003064087762743245, "phrase": "globus"}, {"score": 0.0028807718824400697, "phrase": "dynamic_parallel_structure"}, {"score": 0.0028076592725295646, "phrase": "processing_resources"}, {"score": 0.0026945086500597304, "phrase": "web-services-based_resource_locator"}, {"score": 0.002546315584783112, "phrase": "initial_stereo_photogrametry"}, {"score": 0.00250732953434891, "phrase": "final_production"}, {"score": 0.00248167018931442, "phrase": "animation_models"}, {"score": 0.002443671484766342, "phrase": "key_step"}, {"score": 0.002357249810661667, "phrase": "animators_models"}, {"score": 0.0022738775158524793, "phrase": "real-time_scanner"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Grid", " pi-calculus", " Java animation", " 3D capture"], "paper_abstract": "The PGPGrid project aims to parallelize the process of extracting range data from an experimental 31) scanner using the Grid as a vehicle for accessing necessary resources. The application is potentially highly parallel but has some unusual features such as rapid spawning of processes in real time and a dynamic inter-process network topology. These characteristics are such as to require enhancement of the usual task migration capabilities of the Globus toolkit. The present paper initially discusses attempts to estimate the real parallelizability of the scanner application. It then describes a new Java application programming interface, based on Milner's pi-calculus, which could be used to extend Globus in a manner capable of supporting systems with this kind of dynamic parallel structure. The location of processing resources for the pi-calculus is done using a Web-services-based resource locator. The article also describes the pipeline of processing from initial stereo photogrametry to the final production of animation models. A key step in this is the conformation of animators models to the data obtained by the real-time scanner. Algorithmic innovations in this process are described. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Applying the Grid to 3D capture technology", "paper_id": "WOS:000243671900009"}