{"auto_keywords": [{"score": 0.04940587850605653, "phrase": "branch_direction_history"}, {"score": 0.04896221231267544, "phrase": "global_branch_history"}, {"score": 0.03310342048452108, "phrase": "new_embedded_branch_predictor"}, {"score": 0.031329080989608175, "phrase": "bdh_information"}, {"score": 0.02654144127554778, "phrase": "direction-gshare_predictor"}, {"score": 0.00481495049065317, "phrase": "branch_predictor"}, {"score": 0.004614643339546038, "phrase": "higher_performance"}, {"score": 0.004571269461883144, "phrase": "embedded_systems"}, {"score": 0.004528301408585875, "phrase": "recent_embedded_microprocessor_cores"}, {"score": 0.004339867166576126, "phrase": "general_high-performance_microprocessor_cores"}, {"score": 0.004139639802595566, "phrase": "embedded_microprocessor_cores"}, {"score": 0.004081385289516914, "phrase": "simple_bimodal_branch_predictors"}, {"score": 0.0038930368103015467, "phrase": "embedded_processor_cores"}, {"score": 0.003766369160795001, "phrase": "branch_instruction"}, {"score": 0.0036095259108028105, "phrase": "recently_some_predictors"}, {"score": 0.0035755653799043, "phrase": "advanced_embedded_cores"}, {"score": 0.003541923233726252, "phrase": "dynamic_branch_predictor"}, {"score": 0.0034755915724228093, "phrase": "gbh"}, {"score": 0.0032838979278935814, "phrase": "new_component"}, {"score": 0.0032376465741070274, "phrase": "input_vector"}, {"score": 0.003207173639414978, "phrase": "branch_prediction"}, {"score": 0.0029039692582303904, "phrase": "implementation_example"}, {"score": 0.0028630535573013686, "phrase": "simulation_parts"}, {"score": 0.002822712709335093, "phrase": "neural_network"}, {"score": 0.0026169435194789772, "phrase": "branch_prediction_accuracy"}, {"score": 0.002437645786158106, "phrase": "simulation_results"}, {"score": 0.0023694065215394593, "phrase": "pattern_history_table"}, {"score": 0.002259883463607508, "phrase": "additional_use"}, {"score": 0.0021656385587456952, "phrase": "previous_embedded_branch_predictors"}, {"score": 0.002125020720324262, "phrase": "bimodal_predictor"}, {"score": 0.0021049977753042253, "phrase": "two-level_adaptive_predictor"}], "paper_keywords": [""], "paper_abstract": "To achieve higher performance in embedded systems, recent embedded microprocessor cores have gradually taken to adopting the technologies of general high-performance microprocessor cores. In branch prediction techniques, usually, the embedded microprocessor cores have used simple bimodal branch predictors. That is, until now, most branch predictors in embedded processor cores have utilised the address of the branch instruction (program counter, PC), and recently some predictors in advanced embedded cores use dynamic branch predictor with global branch history (GBH). The authors suggest branch direction history (BDH) as a new component of the input vector for branch prediction. Additionally, a new embedded branch predictor is proposed, called direction-gshare predictor, which utilises BDH information, as an implementation example. In simulation parts, a neural network with three branch prediction input vectors (PC, GBH and BDH) is modelled and their actual impact upon the branch prediction accuracy is analysed. Then, the new embedded branch predictor, the direction-gshare predictor is simulated. The simulation results show that the aliasings in pattern history table are reduced, 48.9% on average, by the additional use of BDH information. Moreover, the direction-gshare predictor outperforms previous embedded branch predictors, such as bimodal predictor, two-level adaptive predictor and gshare predictor, up to 15.32%, 5.41% and 5.74%, respectively.", "paper_title": "High-performance embedded branch predictor by combining branch direction history and global branch history", "paper_id": "WOS:000254264500007"}