{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "collective_sort_problem"}, {"score": 0.049636680610423214, "phrase": "distributed_tuple_spaces"}, {"score": 0.004617949594931096, "phrase": "distributed_set"}, {"score": 0.004575272950516775, "phrase": "tuple_spaces"}, {"score": 0.004054931951058077, "phrase": "similar_tuples"}, {"score": 0.003336031521101184, "phrase": "complete_sort"}, {"score": 0.0031845067058084583, "phrase": "n_tuple_spaces"}, {"score": 0.003068242064611088, "phrase": "n_kinds"}, {"score": 0.0028350413546400703, "phrase": "self-organizing_solution"}, {"score": 0.0026811531172346676, "phrase": "simple_agents"}, {"score": 0.0026440008776012665, "phrase": "partial_observations"}, {"score": 0.0025712297362596574, "phrase": "tuple_movement"}, {"score": 0.002488851299416018, "phrase": "fully_adaptive_method"}, {"score": 0.0024658019116387845, "phrase": "simulated_annealing"}, {"score": 0.002420339995088838, "phrase": "noise_tuples"}, {"score": 0.002331909406363425, "phrase": "need_basis"}, {"score": 0.002278284823857861, "phrase": "sub-optimal_sorting"}, {"score": 0.0021646022201798247, "phrase": "stochastic_simulations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Self-organizing systems", " Tuple spaces", " Stochastic simulations", " Collective sort"], "paper_abstract": "In systems coordinated with a distributed set of tuple spaces, it is crucial to assist agents in retrieving the tuples they are interested in. This can be achieved by sorting techniques that group similar tuples together in the same tuple space, so that the position of a tuple can be inferred by similarity. Accordingly. we formulate the collective sort problem for distributed tuple spaces, where a set of agents is in charge of moving tuples up to a complete sort has been reached, namely, each of the N tuple spaces aggregate tuples belonging to one of the N kinds available. After pointing out the requirements for effectively tackling this problem, we propose a self-organizing solution resembling brood sorting performed by ants. This is based on simple agents that perform partial observations and accordingly take decisions on tuple movement. Convergence is addressed by a fully adaptive method for simulated annealing, based on noise tuples inserted and removed by agents on a need basis so as to avoid sub-optimal sorting. Emergence of sorting properties and scalability are evaluated through stochastic simulations. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "On the collective sort problem for distributed tuple spaces", "paper_id": "WOS:000267380200004"}