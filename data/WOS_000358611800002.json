{"auto_keywords": [{"score": 0.050070929372759004, "phrase": "ltl_formulae"}, {"score": 0.04567744927911164, "phrase": "ba"}, {"score": 0.0436854113245113, "phrase": "conversion_algorithm"}, {"score": 0.011081754490050378, "phrase": "acceptance_degree"}, {"score": 0.010887395949675563, "phrase": "u-subformulae"}, {"score": 0.009720952281774976, "phrase": "de-generalization_algorithm"}, {"score": 0.004780780407878596, "phrase": "buchi_automata"}, {"score": 0.004629977311316031, "phrase": "system_properties"}, {"score": 0.004548253531664032, "phrase": "linear_temporal_logic"}, {"score": 0.0044047527104545525, "phrase": "buchi_automaton"}, {"score": 0.004131135118662576, "phrase": "model_checkers"}, {"score": 0.004087207102190335, "phrase": "intermediate_automata"}, {"score": 0.004015025120733852, "phrase": "generalized_buchi_automaton"}, {"score": 0.003646629717560631, "phrase": "ltl_formula"}, {"score": 0.003481465013724763, "phrase": "acceptance_conditions"}, {"score": 0.003094920033010818, "phrase": "standard_de-generalization_algorithm"}, {"score": 0.0027316100642958544, "phrase": "f-subformulae"}, {"score": 0.0024984517279573906, "phrase": "shannon_expansion"}, {"score": 0.0024281181691350085, "phrase": "ordered_binary_decision_diagrams"}, {"score": 0.002181514206602054, "phrase": "five_families_ltl_formulae"}, {"score": 0.002127667143545464, "phrase": "random_formulae"}, {"score": 0.0021049977753042253, "phrase": "lbtt"}], "paper_keywords": ["model checking", " Buchi automata", " acceptance degree", " on-the-fly de-generalization"], "paper_abstract": "In explicit-state model checking, system properties are typically expressed in linear temporal logic (LTL), and translated into a Buchi automaton (BA) to be checked. In order to improve performance of the conversion algorithm, some model checkers involve the intermediate automata, such as a generalized Buchi automaton (GBA). The de-generalization is a translation from a GBA to a BA. In this paper, we present a conversion algorithm to translate an LTL formula to a BA directly. A labeling, acceptance degree, is presented to record acceptance conditions satisfied in each state and transition. Acceptance degree is a set of U-subformulae or F-subformulae of the given LTL formula. According to the acceptance degree, on-the-fly degeneralization algorithm, which is different from the standard de-generalization algorithm, is conceived and implemented. On-the-fly de-generalization algorithm is carried out during the expansion of the given LTL formula. It is performed in the case of the given LTL formula contains U-subformulae and F-subformulae, that is, the on-the-fly de-generalization algorithm is performed as required. In order to get a more deterministic BA, the shannon expansion is used recursively during expanding LTL formulae. Ordered binary decision diagrams are used to represent the BA and simplify LTL formulae.We compare the conversion algorithm presented in this paper to previousworks, and show that it is more efficient for five families LTL formulae in common use and four sets of random formulae generated by LBTT (an LTL-to-Buchi translator testbench).", "paper_title": "Efficient approach of translating LTL formulae into Buchi automata", "paper_id": "WOS:000358611800002"}