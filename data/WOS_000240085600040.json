{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "network_invariants"}, {"score": 0.044835251181568475, "phrase": "network_invariant"}, {"score": 0.004518442937844318, "phrase": "uniform_verification"}, {"score": 0.004466519142879166, "phrase": "parameterized_systems"}, {"score": 0.004364446928620496, "phrase": "system_p"}, {"score": 0.003463196032143783, "phrase": "parallel_to_center_dot_center_dot_center"}, {"score": 0.002795671770303977, "phrase": "finite_automata"}, {"score": 0.0027475407954228584, "phrase": "angluin"}, {"score": 0.002715915886339696, "phrase": "biermann"}, {"score": 0.0025336179740814905, "phrase": "successive_possible_invariants"}, {"score": 0.0024049552650867935, "phrase": "learning_problem"}, {"score": 0.0023773618833585488, "phrase": "sat"}, {"score": 0.0023363141951290526, "phrase": "efficient_sat"}, {"score": 0.002141898874982106, "phrase": "overall_search_procedure"}, {"score": 0.0021049977753042253, "phrase": "minimal_such_invariant"}], "paper_keywords": [""], "paper_abstract": "Verification by network invariants is a heuristic to solve uniform verification of parameterized systems. Given a system P, a network invariant for P is a system that abstracts the composition of every number of copies of P running in parallel. If there is such a network invariant, by reasoning about it, uniform verification with respect to the family P[l] parallel to center dot center dot center dot parallel to P[n] can be carried out. In this paper, we propose a procedure that searches systematically for a network invariant satisfying a given safety property. The search is based on algorithms for learning finite automata due to Angluin and Biermann. We optimize the search by combining both algorithms for improving successive possible invariants. We also show how to reduce the learning problem to SAT, allowing efficient SAT solvers to be used, which turns out to yield a very competitive learning algorithm. The overall search procedure finds a minimal such invariant, if it exists.", "paper_title": "Inferring network invariants automatically", "paper_id": "WOS:000240085600040"}