{"auto_keywords": [{"score": 0.03400555046881372, "phrase": "cluster_analysis"}, {"score": 0.03270362323112601, "phrase": "effort_intervals"}, {"score": 0.00481495049065317, "phrase": "software_development_effort_intervals"}, {"score": 0.004666756595735701, "phrase": "open_challenge"}, {"score": 0.004462892860919036, "phrase": "point_estimates"}, {"score": 0.004364310576600359, "phrase": "software_cost_estimation"}, {"score": 0.004248869786808024, "phrase": "regression_problem"}, {"score": 0.0037997077863530897, "phrase": "exact_values"}, {"score": 0.0035374012552316573, "phrase": "classification_problem"}, {"score": 0.003474694300991964, "phrase": "new_software_projects"}, {"score": 0.003397866151093552, "phrase": "effort_classes"}, {"score": 0.003278447235176858, "phrase": "effort_interval"}, {"score": 0.0031916366459252992, "phrase": "classification_methods"}, {"score": 0.0030656984915295275, "phrase": "different_classification_algorithms"}, {"score": 0.0029978863469038914, "phrase": "corresponding_effort_classes"}, {"score": 0.002957919048133256, "phrase": "proposed_approach"}, {"score": 0.002905454531687249, "phrase": "seven_public_datasets"}, {"score": 0.0028284924551705516, "phrase": "hit_rate"}, {"score": 0.0027907771648224273, "phrase": "effort_estimation"}, {"score": 0.002644865209801606, "phrase": "related_studies"}, {"score": 0.0025632898741546556, "phrase": "point_estimation"}, {"score": 0.0023333173799963795, "phrase": "dynamic_generation"}, {"score": 0.0021526564019119466, "phrase": "project_managers"}, {"score": 0.0021049977753042253, "phrase": "human_intervention"}], "paper_keywords": ["Software effort estimation", " Interval prediction", " Classification", " Cluster analysis", " Machine learning"], "paper_abstract": "Software cost/effort estimation is still an open challenge. Many researchers have proposed various methods that usually focus on point estimates. Until today, software cost estimation has been treated as a regression problem. However, in order to prevent overestimates and underestimates, it is more practical to predict the interval of estimations instead of the exact values. In this paper, we propose an approach that converts cost estimation into a classification problem and that classifies new software projects in one of the effort classes, each of which corresponds to an effort interval. Our approach integrates cluster analysis with classification methods. Cluster analysis is used to determine effort intervals while different classification algorithms are used to find corresponding effort classes. The proposed approach is applied to seven public datasets. Our experimental results show that the hit rate obtained for effort estimation are around 90-100%, which is much higher than that obtained by related studies. Furthermore, in terms of point estimation, our results are comparable to those in the literature although a simple mean/median is used for estimation. Finally, the dynamic generation of effort intervals is the most distinctive part of our study, and it results in time and effort gain for project managers through the removal of human intervention.", "paper_title": "A comparative study for estimating software development effort intervals", "paper_id": "WOS:000291486100004"}