{"auto_keywords": [{"score": 0.04851548352374306, "phrase": "html_pages"}, {"score": 0.03665330595437948, "phrase": "web_page"}, {"score": 0.034124196593740774, "phrase": "spatial_joins"}, {"score": 0.015491993213262745, "phrase": "web_pages"}, {"score": 0.013986395475240136, "phrase": "xpath_queries"}, {"score": 0.010825129489949088, "phrase": "spatial_objects"}, {"score": 0.00481495049065317, "phrase": "spatial_join"}, {"score": 0.004779564521350969, "phrase": "robust_tuple_extraction"}, {"score": 0.0045895181082906715, "phrase": "important_issue"}, {"score": 0.004522291357556591, "phrase": "commercial_tuple_extraction_systems"}, {"score": 0.004326436568191916, "phrase": "tree_structures"}, {"score": 0.0040186038781533946, "phrase": "small_changes"}, {"score": 0.003844478919573134, "phrase": "robust_tuple_extraction_system"}, {"score": 0.003802135020791801, "phrase": "spatial_relationships"}, {"score": 0.0036914757355166966, "phrase": "spatial_information"}, {"score": 0.0035184576341236317, "phrase": "dom_tree"}, {"score": 0.0033288399506044763, "phrase": "rendered_page"}, {"score": 0.003196292402522254, "phrase": "target_elements"}, {"score": 0.002903540062437197, "phrase": "manual_extraction"}, {"score": 0.0027878797103973313, "phrase": "new_query_language"}, {"score": 0.002726740692380339, "phrase": "topological_relationships"}, {"score": 0.002618104519194264, "phrase": "spatial_join_algorithms_that_efficiently_process_the_raquery_using_novel_notions_of_group_match_and_prunable_relation_group"}, {"score": 0.002343271162668978, "phrase": "boundary_html_elements"}, {"score": 0.0022665781920241245, "phrase": "extensive_experimental_results"}, {"score": 0.0022498783454674254, "phrase": "real_html_pages"}, {"score": 0.002176235362654451, "phrase": "existing_tuple_extraction_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Tuple extraction", " Wrapper", " Spatial join"], "paper_abstract": "Extracting tuples from HTML pages has been an important issue in various web applications. Commercial tuple extraction systems have enjoyed some success to extract tuples by regarding HTML pages as tree structures and exploiting XPath queries to find attributes of tuples in the HTML pages. However, such systems would be vulnerable to small changes on the web pages. In this paper, we propose a robust tuple extraction system which utilizes spatial relationships among elements rather than the XPath queries. Spatial information (e.g., 2-D coordinates) of elements are maintained in the DOM tree when a web page is rendered in a browser. Our system regards elements in the rendered page as spatial objects in the 2-D space and executes spatial joins to extract target elements. Since humans also identify an element in a web page by its relative spatial location, our system extracting elements by their spatial relationships could possibly be as robust as manual extraction. To specify and execute spatial joins, we propose a new query language, RAQuery, based on topological relationships between any spatial objects in the 2-D space. We then propose spatial join algorithms that efficiently process the RAQuery using novel notions of group match and prunable relation group. We next propose a tuple construction algorithm to build tuples from the extracted elements obtained by the spatial joins, which can construct tuples even when there are no boundary HTML elements specified for the tuples in the web page. Extensive experimental results using real HTML pages confirm that our solutions are far more robust than existing tuple extraction systems without sacrificing performance. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Leveraging spatial join for robust tuple extraction from web pages", "paper_id": "WOS:000331689700008"}