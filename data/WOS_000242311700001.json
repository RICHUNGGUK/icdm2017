{"auto_keywords": [{"score": 0.03681583952353281, "phrase": "ems"}, {"score": 0.00481495049065317, "phrase": "fast_motion"}, {"score": 0.004731638279336065, "phrase": "multimedia_communication"}, {"score": 0.00464976086880886, "phrase": "data_compression_technology"}, {"score": 0.004542780650208743, "phrase": "data_bits"}, {"score": 0.004438250823243621, "phrase": "motion_compensation"}, {"score": 0.004361428012479218, "phrase": "key_function"}, {"score": 0.0042859292226559535, "phrase": "temporal_redundancy"}, {"score": 0.004067152645111547, "phrase": "fixed_search_pattern_motion_estimation_algorithms"}, {"score": 0.003927516959113487, "phrase": "hexbs"}, {"score": 0.003837089839193524, "phrase": "extra_search_steps"}, {"score": 0.003726967166630923, "phrase": "zero_motion_vectors"}, {"score": 0.0035366216368204182, "phrase": "efficient_three-step_search"}, {"score": 0.0033559647822437298, "phrase": "probability_model"}, {"score": 0.0033170847930578473, "phrase": "motion_vectors"}, {"score": 0.0031660031870090434, "phrase": "complementary_double-layered"}, {"score": 0.003021781956684419, "phrase": "initial_search_patterns"}, {"score": 0.0029694040368299624, "phrase": "computational_complexity"}, {"score": 0.002917931350071647, "phrase": "inner-layer_search"}, {"score": 0.00280126189041041, "phrase": "small_motion"}, {"score": 0.002720785798036066, "phrase": "outer_layer_search"}, {"score": 0.0026580683046325253, "phrase": "guard_line"}, {"score": 0.0026119782818898193, "phrase": "large_motion"}, {"score": 0.002492931483018372, "phrase": "inner_search_layer"}, {"score": 0.002421291757425244, "phrase": "good_solution"}, {"score": 0.0023932142697579506, "phrase": "experimental_results"}, {"score": 0.0023654615987859402, "phrase": "motion_estimation"}, {"score": 0.0022841153001549193, "phrase": "proposed_algorithm"}, {"score": 0.0022576249214220187, "phrase": "image_quality"}, {"score": 0.0022184630090454132, "phrase": "diamond_search"}, {"score": 0.0021672995161145276, "phrase": "search_point"}, {"score": 0.0021049977753042253, "phrase": "cross-diamond-hexagonal_search"}], "paper_keywords": ["divide and conquer strategy", " motion estimation", " video coding"], "paper_abstract": "Multimedia communication relies on data compression technology to reduce the data bits of transmission. Motion compensation is the key function in exploiting temporal redundancy for compression in most video coding standards. For example, fixed search pattern motion estimation algorithms such as hexagonal search (HEXBS) usually spend extra search steps to confirm near-zero motion vectors. Divide and conquer methods such as the efficient three-step search (EMS) are not optimized for the probability model of motion vectors. This paper proposes a pair of complementary double-layered (inner layer and outer layer) initial search patterns to reduce computational complexity. The inner-layer search is applied first and tests for small motion. Afterwards, the outer layer search serves as a guard line to catch large motion. It is used only when the inner search layer fails to find a good solution. Experimental results of motion estimation on various QCIF/CIF video sequences show that the proposed algorithm achieves image quality similar to diamond search but with the search point cost as low as cross-diamond-hexagonal search.", "paper_title": "Adaptive double-layered initial search pattern for fast motion estimation", "paper_id": "WOS:000242311700001"}