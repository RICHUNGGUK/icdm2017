{"auto_keywords": [{"score": 0.025268367455175925, "phrase": "framenet"}, {"score": 0.00481495049065317, "phrase": "sentence-level_semantic_role_labeling"}, {"score": 0.004589763483242731, "phrase": "semantic_role_labeling"}, {"score": 0.0044277810648955624, "phrase": "sentence-level_task"}, {"score": 0.004322967486451877, "phrase": "semantic_arguments"}, {"score": 0.00414545383888272, "phrase": "fairly_local_context"}, {"score": 0.0038348235692738783, "phrase": "local_view"}, {"score": 0.0037664981403399064, "phrase": "important_information"}, {"score": 0.003611751858608048, "phrase": "local_argument_structures"}, {"score": 0.003526186748088922, "phrase": "sentence_boundaries"}, {"score": 0.0028245516301681713, "phrase": "linking_events_and_their_participants_in_discourse"}, {"score": 0.0024604876113911173, "phrase": "multiple_levels"}, {"score": 0.0023451553255837317, "phrase": "propbank"}], "paper_keywords": ["SemEval", " Null instantiation", " Semantic roles", " Frame semantics"], "paper_abstract": "Semantic role labeling is traditionally viewed as a sentence-level task concerned with identifying semantic arguments that are overtly realized in a fairly local context (i.e., a clause or sentence). However, this local view potentially misses important information that can only be recovered if local argument structures are linked across sentence boundaries. One important link concerns semantic arguments that remain locally unrealized (null instantiations) but can be inferred from the context. In this paper, we report on the SemEval 2010 Task-10 on \"Linking Events and Their Participants in Discourse\", that addressed this problem. We discuss the corpus that was created for this task, which contains annotations on multiple levels: predicate argument structure (FrameNet and PropBank), null instantiations, and coreference. We also provide an analysis of the task and its difficulties.", "paper_title": "Beyond sentence-level semantic role labeling: linking argument structures in discourse", "paper_id": "WOS:000323754700006"}