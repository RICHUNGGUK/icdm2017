{"auto_keywords": [{"score": 0.04084574972884765, "phrase": "attribute_evaluation_system"}, {"score": 0.00481495049065317, "phrase": "automatic_generation"}, {"score": 0.004782587436296574, "phrase": "attribute_evaluation_hardware_systems"}, {"score": 0.0047030358373859, "phrase": "ag"}, {"score": 0.004608422081389008, "phrase": "context-sensitive_properties"}, {"score": 0.004577440795549049, "phrase": "context_free_grammars"}, {"score": 0.004455575231721042, "phrase": "semantic_notations"}, {"score": 0.004264395507931215, "phrase": "considerable_number"}, {"score": 0.004081385289516914, "phrase": "artificial_intelligence"}, {"score": 0.004053932711987671, "phrase": "structural_pattern_recognition"}, {"score": 0.004026664041845776, "phrase": "compiler_construction"}, {"score": 0.003999578057088828, "phrase": "even_text_editing"}, {"score": 0.003802135020791801, "phrase": "syntactic_and_semantic_subsystems"}, {"score": 0.0037133478610481994, "phrase": "hardware_architecture"}, {"score": 0.0035659209800190847, "phrase": "efficient_combinatorial_implementation"}, {"score": 0.003541923233726252, "phrase": "earley's_parallel_parsing_algorithm"}, {"score": 0.003459191419478298, "phrase": "attribute_grammar"}, {"score": 0.0034243271052114234, "phrase": "semantic_part"}, {"score": 0.0033669963955215427, "phrase": "special_purpose_module"}, {"score": 0.0033218213825698417, "phrase": "parse_tree"}, {"score": 0.0032332756920184177, "phrase": "proposed_stack-based_approach"}, {"score": 0.00314708280192844, "phrase": "verilog_hdl"}, {"score": 0.00305285084207725, "phrase": "template_form"}, {"score": 0.0029815085406590426, "phrase": "arbitrary_attribute_grammar"}, {"score": 0.002951444412262927, "phrase": "hdl_synthesizable_source_code"}, {"score": 0.002843772431469196, "phrase": "proposed_automated_tool"}, {"score": 0.002815093247670994, "phrase": "generated_code"}, {"score": 0.002552309172078995, "phrase": "previous_approaches"}, {"score": 0.0024343522820859578, "phrase": "input_string_length"}, {"score": 0.002353441996629643, "phrase": "attribute_evaluation"}, {"score": 0.002275214783528274, "phrase": "embedded_systems"}, {"score": 0.0022370795358896784, "phrase": "natural_language_interface"}, {"score": 0.0021847592782091923, "phrase": "question-answering_application"}, {"score": 0.002148136905808445, "phrase": "airline_flights"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Attribute grammars", " FPGA", " Attribute evaluation", " Hardware", " Semantic evaluation"], "paper_abstract": "Attribute grammars (AG) allow the addition of context-sensitive properties into context free grammars, augmenting their expressional capabilities by using syntactic and semantic notations, making them in this way a really useful tool for a considerable number of applications. AGs have extensively been utilized in applications such as artificial intelligence, structural pattern recognition, compiler construction and even text editing. Obviously, the performance of an attribute evaluation system resides in the efficiency of the syntactic and semantic subsystems. In this paper, a hardware architecture for an attribute evaluation system is presented, which is based on an efficient combinatorial implementation of Earley's parallel parsing algorithm for the syntax part of the attribute grammar. The semantic part is managed by a special purpose module that traverses the parse tree and evaluates the attributes based on a proposed stack-based approach. The entire system is described in Verilog HDL (hardware design language), in a template form that given the specification of an arbitrary attribute grammar, the HDL synthesizable source code of the system is produced on the fly by a proposed automated tool. The generated code has been simulated for validation, synthesized and tested on an Xilinx FPGA (field programmable gate arrays) board for various AGs. Our method increases the performance up to three orders of magnitude compared to previous approaches, depending on the implementation, the size of the grammar and the input string length. This makes it particularly appealing for applications where attribute evaluation is a crucial aspect, like in real-time and embedded systems. Specifically, a natural language interface is presented, based on a question-answering application from the area of airline flights. (c) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A platform for the automatic generation of attribute evaluation hardware systems", "paper_id": "WOS:000274520300004"}