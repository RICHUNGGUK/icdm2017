{"auto_keywords": [{"score": 0.049465088868450476, "phrase": "lagrangian_data"}, {"score": 0.010299634330163395, "phrase": "eulerian"}, {"score": 0.008137291460398951, "phrase": "eulerian_mesh"}, {"score": 0.00481495049065317, "phrase": "parallel_algorithms"}, {"score": 0.004361163586439822, "phrase": "parallel_environment"}, {"score": 0.004305203085016233, "phrase": "underlying_mesh"}, {"score": 0.004106063237069123, "phrase": "uniform_and_adaptive_meshes"}, {"score": 0.003899334207298591, "phrase": "flash"}, {"score": 0.003577414339646767, "phrase": "eulerian_grid_points"}, {"score": 0.003501175642882274, "phrase": "lagrangian_entities"}, {"score": 0.0032259472087775138, "phrase": "data_migration_methods"}, {"score": 0.0029722900280316216, "phrase": "grid_resolution"}, {"score": 0.0029214769181390653, "phrase": "resulting_regridding_process"}, {"score": 0.0028839363228932704, "phrase": "complex_lagrangian_data_migration"}, {"score": 0.0027741761880779535, "phrase": "lagrangian_data_movement"}, {"score": 0.002738523189244011, "phrase": "static_uniform_mesh"}, {"score": 0.0026916956768363158, "phrase": "adaptive_octree_based_block-structured_mesh"}, {"score": 0.00253400005142168, "phrase": "block_structured_mesh"}, {"score": 0.0024586427394152196, "phrase": "meta-data_and_structure"}, {"score": 0.002437525632451029, "phrase": "paramesh"}, {"score": 0.002365067372086726, "phrase": "amr"}, {"score": 0.0023145721625119626, "phrase": "flash."}, {"score": 0.0021883400011393564, "phrase": "different_parallel_environments"}, {"score": 0.0021601997088758957, "phrase": "different_flow_characteristics"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel algorithm", " Lagrangian data", " Tracer particles", " Adaptive mesh", " FLASH"], "paper_abstract": "We present a suite of algorithms for migrating Lagrangian data between processors in a parallel environment when the underlying mesh is Eulerian. The collection of algorithms applies to both uniform and adaptive meshes. The algorithms are implemented in, and distributed with, FLASH, a publicly available multiphysics simulation code. Migrating Lagrangian data on an Eulerian mesh is non-trivial because the Eulerian grid points are spatially fixed whereas Lagrangian entities move with the flow of a simulation. Thus, the movement of Lagrangian data cannot use the data migration methods associated with the Eulerian mesh. Additionally, when the mesh is adaptive, as the simulation progresses the grid resolution changes. The resulting regridding process can cause complex Lagrangian data migration. The algorithms presented in this paper describe Lagrangian data movement on a static uniform mesh and on an adaptive octree based block-structured mesh. Some of the algorithms are general enough to be applicable to any block structured mesh, while some others exploit the meta-data and structure of PARAMESH, the adaptive mesh refinement (AMR) package used in FLASH. We also present an analysis of the algorithms' comparative performances in different parallel environments, and different flow characteristics. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Parallel algorithms for moving Lagrangian data on block structured Eulerian meshes", "paper_id": "WOS:000288632100003"}