{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_quality"}, {"score": 0.01470489567329192, "phrase": "quality_software"}, {"score": 0.003802135020791801, "phrase": "software_development"}, {"score": 0.0027123819773059127, "phrase": "different_external_quality_attributes"}, {"score": 0.0022145052062614514, "phrase": "quality_attributes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software metrics", " Refactoring", " Quality improvement", " Empirical study"], "paper_abstract": "Developers and designers always strive for quality software. Quality software tends to be robust, reliable and easy to maintain, and thus reduces the cost of software development and maintenance. Several methods have, been applied to improve software quality. Refactoring is one of those methods. The goal of this paper is to validate/invalidate the claims that refactoring improves software quality. We focused this study on different external quality attributes, which are adaptability, maintainability, understandability, reusability, and testability. We found that refactoring does not necessarily improve these quality attributes. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Empirical investigation of refactoring effect on software quality", "paper_id": "WOS:000268561700003"}