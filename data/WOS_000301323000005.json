{"auto_keywords": [{"score": 0.04715783641110325, "phrase": "method_users"}, {"score": 0.02107886148071418, "phrase": "method_requirements"}, {"score": 0.01039358705213108, "phrase": "method-user-centered_method_configuration"}, {"score": 0.009035824977843353, "phrase": "method_configuration"}, {"score": 0.00836182267102504, "phrase": "mc_sandbox"}, {"score": 0.007555132311086664, "phrase": "multi-grounded_action_research"}, {"score": 0.0048151030133563, "phrase": "mc"}, {"score": 0.004388182727039715, "phrase": "systems_requirements"}, {"score": 0.004023120753104693, "phrase": "borrowing_ideas"}, {"score": 0.003999089046152065, "phrase": "user-centered_design"}, {"score": 0.00389270357935381, "phrase": "method_engineering_layer"}, {"score": 0.0038119123317396954, "phrase": "computerized_tool"}, {"score": 0.003600944099419042, "phrase": "developers'_and_method_engineers'_understanding"}, {"score": 0.00353677092936782, "phrase": "situational_method"}, {"score": 0.0034841647157189985, "phrase": "research_method"}, {"score": 0.0033409791799749403, "phrase": "traditional_'canonical'_action_research_method"}, {"score": 0.0032618078775887077, "phrase": "action_planning"}, {"score": 0.0031465436619697385, "phrase": "research_project"}, {"score": 0.002936849401568391, "phrase": "continuously_ongoing_dialog"}, {"score": 0.0028844769395018595, "phrase": "method_engineers"}, {"score": 0.002867227226349298, "phrase": "configuration_workshops"}, {"score": 0.0027992509096654754, "phrase": "method_engineer_role"}, {"score": 0.002765867822046626, "phrase": "systems_developers"}, {"score": 0.002692200353719145, "phrase": "negotiated_methods"}, {"score": 0.0026680819883265574, "phrase": "systems_development_projects"}, {"score": 0.0025583481578439894, "phrase": "suitable_situational_methods"}, {"score": 0.0025127084501976745, "phrase": "appropriate_high-level_modelling_concepts"}, {"score": 0.0024604876113911173, "phrase": "configuration_packages"}, {"score": 0.002445767214680791, "phrase": "configuration_templates"}, {"score": 0.00240213106042981, "phrase": "project_members'_understanding"}, {"score": 0.002380605108907738, "phrase": "current_development_practice"}, {"score": 0.0022964086745845998, "phrase": "available_method_support"}, {"score": 0.0022019274077124795, "phrase": "important_aspects"}, {"score": 0.0021561514733516676, "phrase": "collaboration_point"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Situational method", " Method adaptation", " Method configuration", " Method tailoring", " Methods", " Method engineering"], "paper_abstract": "Context: Method engineering approaches are often based on the assumption that method users are able to explicitly express their situational method requirements. Similar to systems requirements, method requirements are often vague and hard to explicate. In this paper we address the issue of involving method users early in method configuration. This is done through borrowing ideas from user-centered design and prototyping, and implementing them on the method engineering layer. Objective: We design a computerized tool, MC Sandbox, to capture method requirements through the use of method-user-centered method configuration, hence bridging the gap between systems developers' and method engineers' understanding of and expectations on a situational method. Method: The research method adopted can be characterized as multi-grounded action research. Our implementation of multi-grounded action research follows the traditional 'canonical' action research method, which has cycles of diagnosing, action planning, action taking, evaluating, and specifying learning. The research project comprised three such action research cycles where 10 action cases were performed. Results: MC Sandbox has proven useful in eliciting and negotiating method requirements in a continuously ongoing dialog between the method users and the method engineers during configuration workshops. The results also show that the method engineer role rotated among the systems developers and that they were indeed committed to the negotiated methods during the systems development projects. Conclusion: It is possible for method users to actively participate and construct suitable situational methods if they are provided with appropriate high-level modelling concepts, such as method components, configuration packages and configuration templates. This way, the project members' understanding of the current development practice develops incrementally, both in terms of understanding the needs and available method support. In addition, both method requirements and commitments are made explicit, which are important aspects when working with method configuration from a collaboration point of view. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "MC Sandbox: Devising a tool for method-user-centered method configuration", "paper_id": "WOS:000301323000005"}