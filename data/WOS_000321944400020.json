{"auto_keywords": [{"score": 0.035328796626908965, "phrase": "cran"}, {"score": 0.00481495049065317, "phrase": "possible_directions"}, {"score": 0.004729856080441582, "phrase": "dependency_versioning"}, {"score": 0.004404188306112211, "phrase": "contributed_code"}, {"score": 0.004326321719714357, "phrase": "built-in_package_manager"}, {"score": 0.004174677062711731, "phrase": "great_system"}, {"score": 0.0038870860864224656, "phrase": "important_role"}, {"score": 0.00368442237104581, "phrase": "de-facto_standard"}, {"score": 0.002991524908432975, "phrase": "current_design"}, {"score": 0.002903771635043968, "phrase": "general_lack"}, {"score": 0.0026714812866037584, "phrase": "greater_detail"}, {"score": 0.0022209780222461587, "phrase": "package_management"}, {"score": 0.0021049977753042253, "phrase": "r_community"}], "paper_keywords": [""], "paper_abstract": "One of the most powerful features of R is its infrastructure for contributed code. The built-in package manager and complementary repositories provide a great system for development and exchange of code, and have played an important role in the growth of the platform towards the de-facto standard in statistical computing that it is today. However, the number of packages on CRAN and other repositories has increased beyond what might have been foreseen, and is revealing some limitations of the current design. One such problem is the general lack of dependency versioning in the infrastructure. This paper explores this problem in greater detail, and suggests approaches taken by other open source communities that might work for R as well. Three use cases are defined that exemplify the issue, and illustrate how improving this aspect of package management could increase reliability while supporting further growth of the R community.", "paper_title": "Possible Directions for Improving Dependency Versioning in R", "paper_id": "WOS:000321944400020"}