{"auto_keywords": [{"score": 0.048140506081445586, "phrase": "scalalab"}, {"score": 0.01379149283548322, "phrase": "jlapack"}, {"score": 0.010015386522910645, "phrase": "scala_language"}, {"score": 0.00481495049065317, "phrase": "scientific_computation"}, {"score": 0.0046970764288494764, "phrase": "jlapack_libraries"}, {"score": 0.004506973410985562, "phrase": "lapack"}, {"score": 0.004396600680348434, "phrase": "powerful_library"}, {"score": 0.004115380574878089, "phrase": "java"}, {"score": 0.003916098498242888, "phrase": "fortran_lapack_sources"}, {"score": 0.0035755653799043, "phrase": "lapack_routines"}, {"score": 0.0034879261743468574, "phrase": "mtj_library"}, {"score": 0.0034024277222012597, "phrase": "object_oriented_java_interface"}, {"score": 0.0029559346879594254, "phrase": "even_more_friendly_and_convenient_interface"}, {"score": 0.002883439044844259, "phrase": "powerful_but_complicated_jlapack_library"}, {"score": 0.002676418520290942, "phrase": "low-level_jlapack_routines"}, {"score": 0.00240328454980006, "phrase": "well_suited_features"}, {"score": 0.0021401625519713577, "phrase": "jlapack_routines"}, {"score": 0.0021049977753042253, "phrase": "linear_algebra_operations"}], "paper_keywords": ["Java", " Scala", " functional languages", " scripting", " interpreters", " MATLAB", " scientific programming", " class loaders", " binding"], "paper_abstract": "Although LAPACK is a powerful library its utilization is difficult. JLAPACK, a Java translation obtained automatically from the Fortran LAPACK sources, retains exactly the same difficult to use interface of LAPACK routines. The MTJ library implements an object oriented Java interface to JLAPACK that hides many complicated details. ScalaLab exploits the flexibility of the Scala language to present an even more friendly and convenient interface to the powerful but complicated JLAPACK library. The article describes the interfacing of the low-level JLAPACK routines within the ScalaLab environment. This is performed rather easily by exploiting well suited features of the Scala language. Also, the paper demonstrates the convenience of using JLAPACK routines for linear algebra operations from within ScalaLab.", "paper_title": "The software architecture for performing scientific computation with the JLAPACK libraries in ScalaLab", "paper_id": "WOS:000318692900002"}