{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "obb-based_collision_detection"}, {"score": 0.004620093797504386, "phrase": "efficient_algorithm"}, {"score": 0.0045443671106012405, "phrase": "triangle-triangle_intersection_test"}, {"score": 0.0036958398682001015, "phrase": "intersection_test"}, {"score": 0.0033465923623290034, "phrase": "redundant_operations"}, {"score": 0.0031845067058084583, "phrase": "local_coordinate"}, {"score": 0.0031064226956732497, "phrase": "bounding_rectangle"}, {"score": 0.0029805015010906013, "phrase": "global_coordinate"}, {"score": 0.002836096284133166, "phrase": "performance_improvement"}, {"score": 0.0026107601878587816, "phrase": "redundant_computations"}, {"score": 0.0025257081555100556, "phrase": "conventional_algorithms"}, {"score": 0.0023834640793589414, "phrase": "computing_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Triangle-triangle intersection", " OBB", " Collision detection", " Coordinate representation"], "paper_abstract": "We present an efficient algorithm for triangle-triangle intersection test in oriented bounding box (OBB)-based collision detection. In testing two OBB leaf nodes (i.e., rectangles), many intermediate computation results can be reused for the intersection test of two triangles they contain. It is considerably easier to detect redundant operations when we work in the local coordinate of the bounding rectangle rather than in the global coordinate of the object. The performance improvement of our algorithm is based on this observation that eliminates redundant computations. Compared with conventional algorithms, we have observed 15-79% improvement in computing time. We demonstrate the effectiveness of our approach using several experimental results. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient triangle-triangle intersection test for OBB-based collision detection", "paper_id": "WOS:000267277500007"}