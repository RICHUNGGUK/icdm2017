{"auto_keywords": [{"score": 0.04719839762621181, "phrase": "fnn"}, {"score": 0.010739739453789962, "phrase": "large_number"}, {"score": 0.010522267913151601, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "fuzzy_neural_networks"}, {"score": 0.004775335634705251, "phrase": "high-dimensional_inputs_through_parallel_processing"}, {"score": 0.004736045157669388, "phrase": "graphic_processing_units"}, {"score": 0.004324521292490181, "phrase": "training_time"}, {"score": 0.004271234971981848, "phrase": "software_platform"}, {"score": 0.004149429072483132, "phrase": "compute_unified_device_architecture"}, {"score": 0.00389994107619882, "phrase": "self-constructing_neural_fuzzy_inference_network"}, {"score": 0.003773049633656302, "phrase": "fnn_training"}, {"score": 0.003680587852807675, "phrase": "single-threaded_cpu"}, {"score": 0.0036202043425301042, "phrase": "input_variable"}, {"score": 0.0033465923623290034, "phrase": "high-dimensional_fnn"}, {"score": 0.003030247482854539, "phrase": "gpu-implemented_fnn"}, {"score": 0.0028360962841331634, "phrase": "independent_properties"}, {"score": 0.0028127163745564777, "phrase": "fuzzy_rules"}, {"score": 0.002789528662623221, "phrase": "large_sets"}, {"score": 0.0027665315772006575, "phrase": "input_data"}, {"score": 0.0027211030647461324, "phrase": "parallel_threads"}, {"score": 0.0026543514413663893, "phrase": "memory_management"}, {"score": 0.0025257081555100556, "phrase": "smaller_chunks"}, {"score": 0.002494531100339247, "phrase": "fuzzy_rule_structures"}, {"score": 0.0024637379406427856, "phrase": "on-chip_memory"}, {"score": 0.0024434201175883674, "phrase": "multiple_thread_processors"}, {"score": 0.002363806685815014, "phrase": "different_problems"}, {"score": 0.0022306602656266545, "phrase": "gpu_implementation"}, {"score": 0.0021401625519713577, "phrase": "cpu_implementation"}, {"score": 0.0021049977753042253, "phrase": "high-dimensional_attributes"}], "paper_keywords": ["Classification", " compute unified device architecture (CUDA)", " fuzzy neural networks (FNNs)", " graphic processing unit (GPU)", " neural fuzzy systems"], "paper_abstract": "This paper proposes the implementation of a zero-order Takagi-Sugeno-Kang (TSK)-type fuzzy neural network (FNN) on graphic processing units (GPUs) to reduce training time. The software platform that this study uses is the compute unified device architecture (CUDA). The implemented FNN uses structure and parameter learning in a self-constructing neural fuzzy inference network because of its admirable learning performance. FNN training is conventionally implemented on a single-threaded CPU, where each input variable and fuzzy rule is serially processed. This type of training is time consuming, especially for a high-dimensional FNN that consists of a large number of rules. The GPU is capable of running a large number of threads in parallel. In a GPU-implemented FNN (GPU-FNN), blocks of threads are partitioned according to parallel and independent properties of fuzzy rules. Large sets of input data are mapped to parallel threads in each block. For memory management, this research suitably divides the datasets in the GPU-FNN into smaller chunks according to fuzzy rule structures to share on-chip memory among multiple thread processors. This study applies the GPU-FNN to different problems to verify its efficiency. The results show that to train an FNN with GPU implementation achieves a speedup of more than 30 times that of CPU implementation for problems with high-dimensional attributes.", "paper_title": "Speedup of Implementing Fuzzy Neural Networks With High-Dimensional Inputs Through Parallel Processing on Graphic Processing Units", "paper_id": "WOS:000293750700009"}