{"auto_keywords": [{"score": 0.03173870024080406, "phrase": "tcm"}, {"score": 0.00481495049065317, "phrase": "tuple_channel_model"}, {"score": 0.004653120760786245, "phrase": "new_coordination_model"}, {"score": 0.004296264970612285, "phrase": "tuple_channels"}, {"score": 0.004035107125458193, "phrase": "different_activities"}, {"score": 0.003944112858235306, "phrase": "multi-point_channels"}, {"score": 0.003877211065759289, "phrase": "complex_data_structures"}, {"score": 0.0037682108720193956, "phrase": "multiple_producers"}, {"score": 0.0036622637391432143, "phrase": "communication_model"}, {"score": 0.0036207206487324506, "phrase": "incremental_and_backward_communication"}, {"score": 0.0034789831290103967, "phrase": "elegant_way"}, {"score": 0.0034395119150793787, "phrase": "implicit_and_direct_communication"}, {"score": 0.0031754329320561317, "phrase": "user-defined_connectors"}, {"score": 0.0031215289677725693, "phrase": "great_flexibility"}, {"score": 0.0030337085953063125, "phrase": "complex_and_dynamic_interaction_protocols"}, {"score": 0.002931569771634119, "phrase": "simple_service_management_mechanism"}, {"score": 0.0028328599839713866, "phrase": "open_systems"}, {"score": 0.0027374647587075935, "phrase": "appropriate_way"}, {"score": 0.0024700776739384977, "phrase": "illustrative_examples"}, {"score": 0.002386869729952315, "phrase": "implementation_details"}, {"score": 0.0023463203637929466, "phrase": "developed_prototypes"}, {"score": 0.002254357921422124, "phrase": "preliminary_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["coordination paradigm", " parallel and distributing programming", " open systems"], "paper_abstract": "This paper presents tuple channel model (TCM), a new coordination model for parallel and distributed programming. Our proposal is based on the use of tuple channels (TCs) to model the communication and synchronization of different activities. TCs are multi-point channels that allow complex data structures to be communicated among multiple producers and consumers. This communication model allows incremental and backward communication to be expressed, providing an elegant way of implicit and direct communication and reactive control. TCs can be dynamically interconnected through the use of user-defined connectors, providing great flexibility for the definition of complex and dynamic interaction protocols. TCM also provides a simple service management mechanism, by means of which open systems can be implemented in an appropriate way. The suitability, expressiveness and programming techniques of the model are presented by means of some illustrative examples. In addition, some implementation details of the developed prototypes are sketched and we show the preliminary results demonstrating the efficiency of the proposal. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "A tuple channel-based coordination model for parallel and distributed programming", "paper_id": "WOS:000250067100004"}