{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_neighbourhood_cellular_automata"}, {"score": 0.004416713079266374, "phrase": "cellular_automaton"}, {"score": 0.002938821840519756, "phrase": "constant_throughout"}, {"score": 0.0025972447844047515, "phrase": "theoretical_model"}, {"score": 0.0025027144548626975, "phrase": "algorithmic_and_computational_complexity_issues"}, {"score": 0.0021049977753042253, "phrase": "firing_squad_synchronization_problem"}], "paper_keywords": ["cellular automata", " distributed algorithms", " syncronization", " firing squad problem"], "paper_abstract": "We propose a definition of cellular automaton in which each cell can change its neighbourhood during a computation. This is done locally by looking not farther than neighbours of neighbours and the number of links remains bounded by a constant throughout. We suggest that dynamic neighbourhood cellular automata can serve as a theoretical model in studying algorithmic and computational complexity issues of ubiquitous computations. We illustrate our approach by giving an optimal, logarithmic time solution of the Firing Squad Synchronization problem in this setting.", "paper_title": "Dynamic Neighbourhood Cellular Automata", "paper_id": "WOS:000285625100003"}