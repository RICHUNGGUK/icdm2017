{"auto_keywords": [{"score": 0.0319990419334291, "phrase": "event_logs"}, {"score": 0.015719716506582538, "phrase": "process_models"}, {"score": 0.015112558962221922, "phrase": "process_model"}, {"score": 0.014964413512785808, "phrase": "event_log"}, {"score": 0.014480850989205565, "phrase": "process_mining_algorithm"}, {"score": 0.004783105609960904, "phrase": "event_multiset"}, {"score": 0.004704407458864224, "phrase": "process_mining"}, {"score": 0.004490842671590769, "phrase": "information_system"}, {"score": 0.004461131750106576, "phrase": "typical_steps"}, {"score": 0.0039323878878973284, "phrase": "first_two_steps"}, {"score": 0.00367967106192446, "phrase": "novel_algorithm"}, {"score": 0.002792683583705368, "phrase": "ordering_relations"}, {"score": 0.0027741761880779535, "phrase": "causal_dependency"}, {"score": 0.0027557911038816256, "phrase": "potential_parallelism"}, {"score": 0.0027375275272639933, "phrase": "non-potential_parallelism"}, {"score": 0.002544422946205545, "phrase": "event_classes"}, {"score": 0.0024125742420201, "phrase": "existing_process"}, {"score": 0.0023259039577313294, "phrase": "real-world_process"}, {"score": 0.002183454435945014, "phrase": "implicit_dependency"}, {"score": 0.002154592730528917, "phrase": "non-free_choice_constructions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Business process models", " Process mining", " Petri nets", " Event multiset", " Post-tasks"], "paper_abstract": "The aim of process mining is to discover the process model from the event log which is recorded by the information system. Typical steps of process mining algorithm can be described as: (1) generating event traces from event log, (2) analyzing event traces and obtaining ordering relations of tasks, (3) generating process model with ordering relations of tasks. The first two steps could be very time consuming involving millions of events and thousands of event traces. This paper presents a novel algorithm (lambda-algorithm) which almost eliminates these two steps in generating event traces from event log and analyzing event traces so as to reduce the performance of process mining algorithm. Firstly, we retrieve the event multiset (input data of algorithm marked as MS) which records the frequency of each event but ignores their orders when extracted from event logs. The event in event multiset contains the information of post-activities. Secondly, we obtain ordering relations from event multiset. The ordering relations contain causal dependency, potential parallelism and non-potential parallelism. Finally, we discover a process models with ordering relations. The complexity of lambda-algorithm is only bound up with the event classes (the set of events in event logs) that has significantly improved the performance of existing process mining algorithms and is expected to be more practical in real-world process mining based on event logs, as well as being able to detect SWF-nets, short-loops and most of implicit dependency (generated by non-free choice constructions). (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Discovering process models from event multiset", "paper_id": "WOS:000306881200017"}