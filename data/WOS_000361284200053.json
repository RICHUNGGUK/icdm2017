{"auto_keywords": [{"score": 0.0353238326861397, "phrase": "parsify"}, {"score": 0.00481495049065317, "phrase": "interactive_parser_synthesis"}, {"score": 0.004209539728590977, "phrase": "subtle_bugs"}, {"score": 0.004016072233242585, "phrase": "programming-by-example_framework"}, {"score": 0.0035344448639851827, "phrase": "single_line"}, {"score": 0.003152531962718477, "phrase": "grammar_one_example"}, {"score": 0.002907992115184249, "phrase": "immediate_visual_feedback"}, {"score": 0.002541741549046619, "phrase": "example_parse_trees"}, {"score": 0.002251637552201872, "phrase": "source_code"}, {"score": 0.0022066110528527853, "phrase": "verilog"}, {"score": 0.002177134051980494, "phrase": "sql"}, {"score": 0.0021479668071589983, "phrase": "apache"}, {"score": 0.002105002791198285, "phrase": "tiger"}], "paper_keywords": ["Algorithms", " Human Factors", " Languages", " Parsing", " Programming by Example", " Program Synthesis"], "paper_abstract": "Despite decades of research on parsing, the construction of parsers remains a painstaking, manual process prone to subtle bugs and pitfalls. We present a programming-by-example framework called Parsify that is able to synthesize a parser from input/output examples. The user does not write a single line of code. To achieve this, Parsify provides: (a) an iterative algorithm for synthesizing and refining a grammar one example at a time, (b) an interface that provides immediate visual feedback in response to changes in the grammar being refined, and (c) a graphical mechanism for specifying example parse trees using only textual selections. We empirically demonstrate the viability of our approach by using Parsify to construct parsers for source code drawn from Verilog, SQL, Apache, and Tiger.", "paper_title": "Interactive Parser Synthesis by Example", "paper_id": "WOS:000361284200053"}