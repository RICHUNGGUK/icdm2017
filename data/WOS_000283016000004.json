{"auto_keywords": [{"score": 0.03347279022910549, "phrase": "previous_architecture"}, {"score": 0.03249223992321251, "phrase": "c._koc"}, {"score": 0.00481495049065317, "phrase": "scalable_radix"}, {"score": 0.004303830426772906, "phrase": "new_processor_array_architecture"}, {"score": 0.004089725258435817, "phrase": "montgomery_modular_multiplication_algorithm"}, {"score": 0.0036928221419965253, "phrase": "modulus_words"}, {"score": 0.003509006038574667, "phrase": "processing_element"}, {"score": 0.0033004240095380623, "phrase": "processing_elements"}, {"score": 0.0029196116767956273, "phrase": "multiplier_bits"}, {"score": 0.0027459678326877744, "phrase": "first_processing_element"}, {"score": 0.0026630475331025955, "phrase": "processor_array"}, {"score": 0.0026091594819333654, "phrase": "odd_clock_cycle"}, {"score": 0.002284444272376043, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "lower_power_consumption"}], "paper_keywords": ["processor array", " Montgomery multiplication", " cryptography", " secure communications", " low power modular multipliers"], "paper_abstract": "This paper presents a new processor array architecture for scalable radix 2 Montgomery modular multiplication algorithm. In this architecture, the multiplicand and the modulus words are allocated to each processing element rather than pipelined between the processing elements as in the previous architecture extracted by C. Koc. Also, the multiplier bits are fed serially to the first processing element of the processor array every odd clock cycle. By analyzing this architecture, we found that it has a better performance in terms of area and speed and lower power consumption than the previous architecture extracted by C. Koc.", "paper_title": "High-performance, low-power architecture for scalable radix 2 montgomery modular multiplication algorithm", "paper_id": "WOS:000283016000004"}