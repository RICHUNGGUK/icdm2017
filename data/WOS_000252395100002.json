{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "modular_ontologies"}, {"score": 0.028448572782996114, "phrase": "compiled_knowledge"}, {"score": 0.004678785623021003, "phrase": "modular_representations"}, {"score": 0.004494570360108983, "phrase": "computer_science"}, {"score": 0.004392565073466714, "phrase": "software_engineering_modularization"}, {"score": 0.004219571240696568, "phrase": "distributed_development"}, {"score": 0.004053362743156545, "phrase": "knowledge_representation"}, {"score": 0.0039841418890102925, "phrase": "main_goal"}, {"score": 0.0034512514926836667, "phrase": "explicit_representations"}, {"score": 0.003221316290858497, "phrase": "formal_representation"}, {"score": 0.00307657476125683, "phrase": "distributed_description_logics"}, {"score": 0.0029552551661591988, "phrase": "local_reasoning"}, {"score": 0.00290473242917264, "phrase": "implied_axioms"}, {"score": 0.002574387911697005, "phrase": "different_modules"}, {"score": 0.0023079225317714815, "phrase": "compiled_information"}, {"score": 0.0021789194955896124, "phrase": "modular_ontology"}, {"score": 0.0021416404045850224, "phrase": "unnecessary_re-compilation"}], "paper_keywords": ["ontologies", " reasoning", " distributed knowledge representation", " change management"], "paper_abstract": "The benefits of modular representations are well known from many areas of computer science. While in software engineering modularization is mainly a vehicle for supporting distributed development and re-use, in knowledge representation, the main goal of modularization is efficiency of reasoning. In this paper, we concentrate on the benefits of modularization in the context of ontologies, explicit representations of the terminology used in a domain. We define a formal representation for modular ontologies based on the notion of Distributed Description Logics and introduce an architecture that supports local reasoning by compiling implied axioms. We further address the problem of guaranteeing the correctness and completeness of compiled knowledge in the presence of changes in different modules. We propose a heuristic for analyzing changes and their impact on compiled knowledge and guiding the process of updating compiled information that can often reduce the effort of maintaining a modular ontology by avoiding unnecessary re-compilation. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Reasoning and change management in modular ontologies", "paper_id": "WOS:000252395100002"}