{"auto_keywords": [{"score": 0.033702372737662974, "phrase": "java_based_application"}, {"score": 0.029309250237309112, "phrase": "disassembly_engine"}, {"score": 0.00481495049065317, "phrase": "decision_making"}, {"score": 0.004777744121315302, "phrase": "environmentally_conscious_manufacturing"}, {"score": 0.0047224703862074665, "phrase": "important_paradigm"}, {"score": 0.0046859752697029355, "phrase": "today's_industrial_practices"}, {"score": 0.0045959609346817535, "phrase": "crucial_factor"}, {"score": 0.004043541331944951, "phrase": "disassembly_decision"}, {"score": 0.003612971658533784, "phrase": "computational_methodology"}, {"score": 0.003516079377293321, "phrase": "disassembly_cost"}, {"score": 0.0030572112793962004, "phrase": "computational_algorithms"}, {"score": 0.003021781956684419, "phrase": "graphical_user_interface"}, {"score": 0.002952146666681891, "phrase": "product_designs"}, {"score": 0.002917931350071647, "phrase": "front_end_user_interface"}, {"score": 0.00278497898719426, "phrase": "data_parser"}, {"score": 0.0026892447164623247, "phrase": "java_and_xml_technologies"}, {"score": 0.002566685388128598, "phrase": "xml_data_store"}, {"score": 0.0025172781808293827, "phrase": "back-end_component"}, {"score": 0.0024880904032564583, "phrase": "computational_tools"}, {"score": 0.0024592402228499105, "phrase": "user_interface"}, {"score": 0.0023932142697579506, "phrase": "dynamically_configurable_disassembly_tree"}, {"score": 0.0023654615987859402, "phrase": "disassembly_knowledge"}, {"score": 0.0023289568500915207, "phrase": "xml_format"}, {"score": 0.002301947614465974, "phrase": "robust_and_scalable_parsing"}, {"score": 0.0022141537427057363, "phrase": "configurable_disassembly_tree"}, {"score": 0.0021049977753042253, "phrase": "computational_design_methodology"}], "paper_keywords": ["design for disassembly", " algorithms", " decision tree", " disassembly tool", " XML data representations", " Java parser", " binary tree", " splay tree"], "paper_abstract": "Environmentally conscious manufacturing is an important paradigm in today's industrial practices and disassembly is a crucial factor in implementing this paradigm. Disassembly allows the reuse and recycling of parts and products that reach their \"death\" after their life cycle ends. There are many questions that must be answered before a disassembly decision can be reached. The most important question is economical. The cost of disassembly versus the cost of scrapping a product is always considered. This paper develops a computational methodology that allows decision-makers to calculate the disassembly cost of a product before it is built. The methodology makes it simple to perform \"what if\" scenarios fairly quickly. A Java based application has been developed to implement this methodology and it uses computational algorithms and a graphical user interface to enable designers to simulate product designs. The front end user interface is a Java based application while the back-end is the combination of a data parser and disassembly engine, which also makes use of Java and XML technologies. The disassembly engine performs calculations based on data represented in an XML data store and runs as the back-end component of the computational tools. The user interface has the ability to display a dynamically configurable disassembly tree. The disassembly knowledge is represented in XML format to allow robust and scalable parsing and processing of the various disassembly alternatives that correspond to the configurable disassembly tree. Examples are presented to demonstrate the implementation and capabilities of the computational design methodology presented in this paper.", "paper_title": "To disassemble or not: a computational methodology for decision making", "paper_id": "WOS:000241113300008"}