{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "genetic_algorithms"}, {"score": 0.04763743657605741, "phrase": "test_data"}, {"score": 0.028004226307295575, "phrase": "random_search"}, {"score": 0.004740009255053372, "phrase": "test_sequences"}, {"score": 0.004690694501758065, "phrase": "complex_timed_systems"}, {"score": 0.004522080178250592, "phrase": "state-based_specifications"}, {"score": 0.004451676867747938, "phrase": "computationally_expensive_process"}, {"score": 0.004224786847720058, "phrase": "time_constraints"}, {"score": 0.003946960862020283, "phrase": "studied_system"}, {"score": 0.0038854765143440965, "phrase": "main_goal"}, {"score": 0.0037261429556468217, "phrase": "complete_methodology"}, {"score": 0.003480993634130542, "phrase": "test_data_generation_problem"}, {"score": 0.0034267429854665035, "phrase": "optimization_problem"}, {"score": 0.003303412571939192, "phrase": "test_cases"}, {"score": 0.0028527866590859967, "phrase": "test_case_generation_problem"}, {"score": 0.0027645030021576926, "phrase": "search_problem"}, {"score": 0.002362320344521919, "phrase": "problem_size"}], "paper_keywords": ["Formal testing", " Genetic algorithms", " Timed systems"], "paper_abstract": "The generation of test data for state-based specifications is a computationally expensive process. This problem is magnified if we consider that time constraints have to be taken into account to govern the transitions of the studied system. The main goal of this paper is to introduce a complete methodology, supported by tools, that addresses this issue by representing the test data generation problem as an optimization problem. We use heuristics to generate test cases. In order to assess the suitability of our approach we consider two different case studies: a communication protocol and the scientific application BIPS3D. We give details concerning how the test case generation problem can be presented as a search problem and automated. Genetic algorithms (GAs) and random search are used to generate test data and evaluate the approach. GAs outperform random search and seem to scale well as the problem size increases. It is worth to mention that we use a very simple fitness function that can be easily adapted to be used with other evolutionary search techniques.", "paper_title": "Using genetic algorithms to generate test sequences for complex timed systems", "paper_id": "WOS:000313969400010"}