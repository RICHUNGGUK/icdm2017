{"auto_keywords": [{"score": 0.048506844221552735, "phrase": "communication_protocols"}, {"score": 0.039379210173022164, "phrase": "performance_evaluation"}, {"score": 0.00481495049065317, "phrase": "model_checking"}, {"score": 0.004735254735115024, "phrase": "protocol_optimization"}, {"score": 0.004695900553353526, "phrase": "simulation_models"}, {"score": 0.004503959683578956, "phrase": "protocol_engineering"}, {"score": 0.00389164348807591, "phrase": "optysim"}, {"score": 0.0037795163893761027, "phrase": "correctness_analysis"}, {"score": 0.003716894849271535, "phrase": "execution_traces"}, {"score": 0.0034332736827447654, "phrase": "uniform_framework"}, {"score": 0.0031579997262619758, "phrase": "rich_formalisms"}, {"score": 0.0031186510842824626, "phrase": "temporal_logic"}, {"score": 0.0030541531847589833, "phrase": "execution_trace"}, {"score": 0.0028091907694771613, "phrase": "controlled_exploration"}, {"score": 0.0027741761880779535, "phrase": "parameter_space"}, {"score": 0.0027395968397212053, "phrase": "associated_execution_traces"}, {"score": 0.0025623050508233078, "phrase": "human_analysis"}, {"score": 0.002426717832834137, "phrase": "communication_protocol"}, {"score": 0.0023964590500856887, "phrase": "easier_adaptation"}, {"score": 0.0023764959294052964, "phrase": "new_systems"}, {"score": 0.002298288831092204, "phrase": "spin_model_checker"}, {"score": 0.0021049977753042253, "phrase": "mobile_environments"}], "paper_keywords": ["Performance analysis", " reliability analysis", " optimization", " communication protocols", " model checking"], "paper_abstract": "Simulation models of communication protocols are widely used in the field of protocol engineering. Some methods have been proposed to ensure the correctness of these models, or to tune their parameters for performance. However, these aspects have usually been considered separately. This paper presents OptySim, a uniform framework to perform correctness analysis and performance evaluation over execution traces of communication protocols. The same protocol models can be tested for correctness before being used for performance evaluation, using this uniform framework. The exploration of the scenarios is controlled by performance or correctness objectives set by the user, using rich formalisms such as temporal logic and automata. Each execution trace is analyzed on the fly, stopping simulations as soon as the objectives are met or violated. The controlled exploration of the parameter space and the associated execution traces can help uncover errors or configurations that may have been otherwise missed with other exhaustive methods or human analysis. Our framework separates the analyzer from the system under analysis using a communication protocol that enables easier adaptation to new systems. We have implemented our framework with the Spin model checker to analyze ns-2 network simulations, and demonstrated the usefulness of our approach with two case studies: video streaming and VoIP call quality in mobile environments.", "paper_title": "Integrating model checking and simulation for protocol optimization", "paper_id": "WOS:000348114400001"}