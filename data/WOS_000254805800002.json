{"auto_keywords": [{"score": 0.03883248484962394, "phrase": "turbo-like_code"}, {"score": 0.038509900758815545, "phrase": "particular_interleaver"}, {"score": 0.02322730111336099, "phrase": "turbo-like_codes"}, {"score": 0.017248485321371257, "phrase": "minimum_hamming_distance"}, {"score": 0.014791161727739114, "phrase": "ldpc_code"}, {"score": 0.014665243374577044, "phrase": "particular_parity_check_matrix"}, {"score": 0.010166415758003316, "phrase": "nil"}, {"score": 0.008487183151325338, "phrase": "ensemble_codes"}, {"score": 0.006332523862117289, "phrase": "uniform_interleaver_assumption"}, {"score": 0.004787309936374976, "phrase": "low_density_parity_check_codes"}, {"score": 0.004678317945062391, "phrase": "error_probabilities"}, {"score": 0.004638085752617182, "phrase": "maximum_likelihood"}, {"score": 0.004519443838868363, "phrase": "low_density_parity_check"}, {"score": 0.004403823349864079, "phrase": "long_codeword_block_size"}, {"score": 0.004278807087784626, "phrase": "short_codeword_block_size"}, {"score": 0.0041693170015901235, "phrase": "simple_bound_technique"}, {"score": 0.0040743371651540345, "phrase": "upper_bounds"}, {"score": 0.004050930846552577, "phrase": "ldpc_codes"}, {"score": 0.003958637205284778, "phrase": "uniformly_interleaved_assumption"}, {"score": 0.003780286517897356, "phrase": "previous_research_effort"}, {"score": 0.0037154886271517683, "phrase": "upper_bound"}, {"score": 0.00363080961099728, "phrase": "truncated_union"}, {"score": 0.0033300397189425304, "phrase": "error_floor"}, {"score": 0.0032075435331011173, "phrase": "high_signal-to-noise_ratios"}, {"score": 0.0029587491394808658, "phrase": "heavy_complexity"}, {"score": 0.0027929100418926725, "phrase": "new_bound_technique"}, {"score": 0.00266693888510356, "phrase": "ml_estimated_weight_distributions"}, {"score": 0.002613623820413697, "phrase": "practical_iterative_decoding_performance"}, {"score": 0.0025761937402886954, "phrase": "nil_sense"}, {"score": 0.002553992825810561, "phrase": "simulation_performance"}, {"score": 0.0025392983369523143, "phrase": "iterative_decoding"}, {"score": 0.0025029300115295317, "phrase": "proposed_upper_bound"}, {"score": 0.0023489834444837187, "phrase": "simulation_results"}, {"score": 0.0023287359930308864, "phrase": "proposed_upper"}, {"score": 0.002282166507956957, "phrase": "proposed_bound_technique"}, {"score": 0.0022494725694725244, "phrase": "simple_bound"}, {"score": 0.0022300809511147305, "phrase": "approximate_weight_distribution"}, {"score": 0.0021854800233595444, "phrase": "ensemble_distribution"}, {"score": 0.0021233040503324005, "phrase": "tighter_upper_bound"}], "paper_keywords": ["low-density parity-check (LDPC) codes", " maximum likelihood (ML) decoding", " turbo-like codes", " weight distributions"], "paper_abstract": "Researchers have investigated many upper bound techniques applicable to error probabilities on the maximum likelihood (NIL) decoding performance of turbo-like codes and low density parity check (LDPC) codes in recent years for a long codeword block size. This is because it is trivial for a short codeword block size. Previous research efforts, such as the simple bound technique [20] recently proposed, developed upper bounds for LDPC codes and turbo-like codes using ensemble codes or the uniformly interleaved assumption. This assumption bounds the performance averaged over all ensemble codes or all interleavers. Another previous research effort [21] obtained the upper bound of turbo-like code with a particular interleaver using a truncated union bound which requires information of the minimum Hamming distance and the number of codewords with the minimum Hamming distance. However, it gives the reliable bound only in the region of the error floor where the minimum Hamming distance is dominant, i.e., in the region of high signal-to-noise ratios. Therefore, currently an upper bound on ML decoding performance for turbo-like code with a particular interleaver and LDPC code with a particular parity check matrix cannot be calculated because of heavy complexity so that only average bounds for ensemble codes can be obtained using a uniform interleaver assumption. In this paper, we propose a new bound technique on NIL decoding performance for turbo-like code with a particular interleaver and LDPC code with a particular parity check matrix using ML estimated weight distributions and we also show that the practical iterative decoding performance is approximately suboptimal in NIL sense because the simulation performance of iterative decoding is worse than the proposed upper bound and no wonder, even worse than NIL decoding performance. In order to show this point, we compare the simulation results with the proposed upper bound and previous bounds. The proposed bound technique is based on the simple bound with an approximate weight distribution including several exact smallest distance terms, not with the ensemble distribution or the uniform interleaver assumption. This technique also shows a tighter upper bound than any other previous bound techniques for turbo-like code with a particular interleaver and LDPC code with a particular parity check matrix.", "paper_title": "Upper bounds for the performance of turbo-like codes and low density parity check codes", "paper_id": "WOS:000254805800002"}