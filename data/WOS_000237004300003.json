{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "parameterized_protocols"}, {"score": 0.0047283116134926645, "phrase": "array_formulas"}, {"score": 0.004278807087784626, "phrase": "automated_verification"}, {"score": 0.004201774694043468, "phrase": "temporal_properties"}, {"score": 0.003907212558276185, "phrase": "logic_programming"}, {"score": 0.0038368442918503072, "phrase": "program_transformation"}, {"score": 0.0034092396400930446, "phrase": "stratified_logic_programs"}, {"score": 0.0031129269142224194, "phrase": "first_order_formulas"}, {"score": 0.0030017207229983385, "phrase": "parameterized_length"}, {"score": 0.0023694065215394593, "phrase": "parameterized_peterson's_protocol"}, {"score": 0.0021049977753042253, "phrase": "mutual_exclusion_property"}], "paper_keywords": [""], "paper_abstract": "We propose a method for the specification and the automated verification of temporal properties of parameterized protocols. Our method is based on logic programming and program transformation. We specify the properties of parameterized protocols by using an extension of stratified logic programs. This extension allows premises of clauses to contain first order formulas over arrays of parameterized length. A property of a given protocol is proved by applying suitable unfold/fold transformations to the specification of that protocol. We demonstrate our method by proving that the parameterized Peterson's protocol among N processes, for any N >= 2, ensures the mutual exclusion property.", "paper_title": "Transformational verification of parameterized protocols using array formulas", "paper_id": "WOS:000237004300003"}