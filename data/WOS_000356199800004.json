{"auto_keywords": [{"score": 0.004751216062917875, "phrase": "classical_problem"}, {"score": 0.004709193603747991, "phrase": "ski_rental"}, {"score": 0.00450456611645112, "phrase": "unknown_time"}, {"score": 0.0032706520949775065, "phrase": "option_i."}, {"score": 0.0029133627624098064, "phrase": "transition_cost_c"}, {"score": 0.0027010719929751, "phrase": "classical_version"}, {"score": 0.002470987929071079, "phrase": "deterministic_and_randomized_algorithms"}, {"score": 0.002438203996977464, "phrase": "general_setting"}, {"score": 0.00233202607446404, "phrase": "competitive_ratios"}, {"score": 0.0022304616068189575, "phrase": "lower_bounds"}, {"score": 0.0021620042653528846, "phrase": "randomized_cases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Competitive analysis", " Ski rental", " Randomized algorithms", " Duration prediction", " Buy or rent"], "paper_abstract": "We consider the following generalization of the classical problem of ski rental. There is a game that ends at an unknown time, and the algorithm needs to decide how to pay for the time until the game ends. In our generalization, there are two \"payment plans\" called \"options,\" such that each option i (for i = 1,2) consists of two kinds of costs: b(i) is the (one time) cost to start using Option i, and a(1) is the (ongoing) usage cost per unit of time for Option i. We assume w.l.o.g. that a(1) > a(2) and b(1) < b(2). Additionally, we assume the existence of a transition cost c, which is incurred if we switch from Option 1 to Option 2. (In the classical version, b(1) = 0, a(2) = 0 and c = b(2).) We give deterministic and randomized algorithms for this general setting and analyze their competitive ratio. We also prove that the competitive ratios of our algorithms are the best possible by presenting matching lower bounds for both the deterministic and the randomized cases. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Non-additive two-option ski rental", "paper_id": "WOS:000356199800004"}