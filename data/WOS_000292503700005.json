{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "concurrent_programs"}, {"score": 0.04938419617030255, "phrase": "read-write_locks"}, {"score": 0.007002356317108794, "phrase": "csl"}, {"score": 0.004685745235462011, "phrase": "logical_heap"}, {"score": 0.004608284537368354, "phrase": "write_locking"}, {"score": 0.004508286991825192, "phrase": "important_mechanism"}, {"score": 0.0044104497301196794, "phrase": "concurrent_granularity"}, {"score": 0.003923269062268688, "phrase": "concurrent_separation_logic"}, {"score": 0.003754731210715724, "phrase": "simple_but_powerful_technique"}, {"score": 0.0035671997165370403, "phrase": "mutual_exclusive_locks"}, {"score": 0.0031039212233596415, "phrase": "different_concurrent_control_mechanisms"}, {"score": 0.002720505061804933, "phrase": "heap_model"}, {"score": 0.0026613618933208467, "phrase": "writing_permission_set"}, {"score": 0.0024915167458844914, "phrase": "strong_separation"}, {"score": 0.002298544073884724, "phrase": "csl's_local-reasoning_idea"}, {"score": 0.0022158306933307685, "phrase": "novel_program_logic"}, {"score": 0.0021676351850669017, "phrase": "weak_separations"}, {"score": 0.0021049977753042253, "phrase": "different_threads"}], "paper_keywords": ["verification", " concurrent separation logic", " mutual exclusive locks", " read-write locks"], "paper_abstract": "Read-write locking is an important mechanism to improve concurrent granularity, but it is difficult to reason about the safety of concurrent programs with read-write locks. Concurrent separation logic (CSL) provides a simple but powerful technique for locally reasoning about concurrent programs with mutual exclusive locks. Unfortunately, CSL cannot be directly applied to reasoning about concurrent programs with read-write locks due to the different concurrent control mechanisms. This paper focuses on extending CSL and presenting a proof-carrying code (PCC) system for reasoning about concurrent programs with read-write locks. We extend the heap model with a writing permission set, denoted as logical heap, then define \"strong separation\" and \"weak separation\" over logical heap. Following CSL's local-reasoning idea, we develop a novel program logic to enforce weak separations of heap between different threads and provide verification of concurrent programs with read-write locks.", "paper_title": "Formal verification of concurrent programs with read-write locks", "paper_id": "WOS:000292503700005"}