{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mitigating_memory-induced"}, {"score": 0.004707188147442449, "phrase": "many-accelerator_architectures"}, {"score": 0.004498812433096501, "phrase": "promising_architectural_paradigm"}, {"score": 0.004275347843870176, "phrase": "general-purpose_computing_platforms"}, {"score": 0.0037959868107895053, "phrase": "fpga-based_ma_platforms"}, {"score": 0.003648411055689428, "phrase": "typically_expected_peak_power_budget"}, {"score": 0.003546513036085932, "phrase": "memory_resources"}, {"score": 0.0034867406208212146, "phrase": "severe_under-utilization_factor"}, {"score": 0.003313380246267812, "phrase": "dark_silicon"}, {"score": 0.003239114833599948, "phrase": "static_memory_allocation"}, {"score": 0.003078028357912228, "phrase": "modern_design_techniques"}, {"score": 0.0030433302702291116, "phrase": "synthesis_tools"}, {"score": 0.002975099633631871, "phrase": "main_source"}, {"score": 0.00294868007708754, "phrase": "dmm"}, {"score": 0.002941558420246247, "phrase": "memory-induced_dark_silicon"}, {"score": 0.002859345731792013, "phrase": "novel_framework"}, {"score": 0.0028111220617485985, "phrase": "conventional_high_level_synthesis"}, {"score": 0.0027325449069867222, "phrase": "dynamic_memory_management"}, {"score": 0.0025239898026543964, "phrase": "runtime_memory_requirements"}, {"score": 0.0024534188907003726, "phrase": "overall_accelerator_count"}, {"score": 0.0024257447861185813, "phrase": "effective_sharing"}, {"score": 0.002398382089724878, "phrase": "fpga's_memories_resources"}, {"score": 0.002305014991156598, "phrase": "significant_gains"}, {"score": 0.002279011030331704, "phrase": "fpga's_accelerators_density"}, {"score": 0.0021049977753042253, "phrase": "shared_and_private_memory_accelerators"}], "paper_keywords": ["Many-accelerator architectures", " dynamic memory management", " high-level synthesis"], "paper_abstract": "Many-Accelerator (MA) systems have been introduced as a promising architectural paradigm that can boost performance and improve power of general-purpose computing platforms. In this paper, we focus on the problem of resource under-utilization, i.e. Dark Silicon, in FPGA-based MA platforms. We show that except the typically expected peak power budget, on-chip memory resources form a severe under-utilization factor in MA platforms, leading up to 75 percent of dark silicon. Recognizing that static memory allocation-the de-facto mechanism supported by modern design techniques and synthesis tools-forms the main source of memory-induced Dark Silicon, we introduce a novel framework that extends conventional high level synthesis (HLS) with dynamic memory management (DMM) features, enabling accelerators to dynamically adapt their allocated memory to the runtime memory requirements, thus maximizing the overall accelerator count through effective sharing of FPGA's memories resources. We show that our technique delivers significant gains in FPGA's accelerators density, i.e. 3.8x, and application throughput up to 3.1x and 21.4x for shared and private memory accelerators.", "paper_title": "Mitigating Memory-Induced Dark Silicon in Many-Accelerator Architectures", "paper_id": "WOS:000367259100013"}