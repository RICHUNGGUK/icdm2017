{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "traffic-aware_design"}, {"score": 0.004740476936977635, "phrase": "high-speed_fpga_network_intrusion_detection_system"}, {"score": 0.004500414250942443, "phrase": "network_intrusion_detection_systems"}, {"score": 0.004250302819248558, "phrase": "supported_rule_sets"}, {"score": 0.004184526032558792, "phrase": "new_emerging_attacks"}, {"score": 0.004141238989360548, "phrase": "field-programmable_gate_arrays"}, {"score": 0.003931402465972151, "phrase": "important_issue"}, {"score": 0.0038304902197108643, "phrase": "fpga-based_nids_implementations"}, {"score": 0.0037908515763223107, "phrase": "ever_faster_network_links"}, {"score": 0.003712796038920873, "phrase": "trivial_approach"}, {"score": 0.003380897678672156, "phrase": "whole_rule"}, {"score": 0.0032769720645483102, "phrase": "obvious_cons"}, {"score": 0.003226209534553224, "phrase": "linear_increase"}, {"score": 0.0031762308449055305, "phrase": "resource_occupation"}, {"score": 0.0029530125680590413, "phrase": "fpga-based_nids."}, {"score": 0.002847339938387273, "phrase": "equivalent_modules"}, {"score": 0.002759769970554556, "phrase": "homogeneous_traffic"}, {"score": 0.0026609940110902666, "phrase": "capable_hardware_blocks"}, {"score": 0.0025259712348798323, "phrase": "specific_traffic_category"}, {"score": 0.002360607691114015, "phrase": "well-known_snort_nids"}, {"score": 0.0022760856906838814, "phrase": "emerging_trade-offs"}, {"score": 0.0022175679453857473, "phrase": "resource_savings"}, {"score": 0.0021493248730171132, "phrase": "real-world_traffic_statistics"}, {"score": 0.0021049977753042253, "phrase": "operator's_backbone"}], "paper_keywords": ["Deep packet inspection", " FPGA", " intrusion detection system", " Snort", " string matching", " traffic awareness"], "paper_abstract": "Security of today's networks heavily rely on network intrusion detection systems (NIDSs). The ability to promptly update the supported rule sets and detect new emerging attacks makes field-programmable gate arrays (FPGAs) a very appealing technology. An important issue is how to scale FPGA-based NIDS implementations to ever faster network links. Whereas a trivial approach is to balance traffic over multiple, but functionally equivalent, hardware blocks, each implementing the whole rule set (several thousands rules), the obvious cons is the linear increase in the resource occupation. In this work, we promote a different, traffic-aware, modular approach in the design of FPGA-based NIDS. Instead of purely splitting traffic across equivalent modules, we classify and group homogeneous traffic, and dispatch it to differently capable hardware blocks, each supporting a (smaller) rule set tailored to the specific traffic category. We implement and validate our approach using the rule set of the well-known Snort NIDS, and we experimentally investigate the emerging trade-offs and advantages, showing resource savings up to 80 percent based on real-world traffic statistics gathered from an operator's backbone.", "paper_title": "Traffic-Aware Design of a High-Speed FPGA Network Intrusion Detection System", "paper_id": "WOS:000325171200016"}