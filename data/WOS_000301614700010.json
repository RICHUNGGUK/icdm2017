{"auto_keywords": [{"score": 0.04941061878695795, "phrase": "openoffice.org"}, {"score": 0.01561077489267234, "phrase": "loading_documents"}, {"score": 0.00481495049065317, "phrase": "optimization_method"}, {"score": 0.004648609688625397, "phrase": "open_source_community"}, {"score": 0.0045197163740735334, "phrase": "linux"}, {"score": 0.004183137595671171, "phrase": "whole_document"}, {"score": 0.00368544869176071, "phrase": "asynchronous_importing_mechanism"}, {"score": 0.0032697235411641695, "phrase": "remaining_parts"}, {"score": 0.0031901183059524804, "phrase": "drawing_queue"}, {"score": 0.002931569771634119, "phrase": "long_time"}, {"score": 0.0029109914689364465, "phrase": "application_start-up_time_testing_tool"}, {"score": 0.0028003586585812097, "phrase": "different_pages"}, {"score": 0.0026562224049977213, "phrase": "regression_theory"}, {"score": 0.0025915147359879616, "phrase": "page_number"}, {"score": 0.0025462598594116373, "phrase": "loading_time"}, {"score": 0.002501793273494325, "phrase": "visual_modeling"}, {"score": 0.00247548600804924, "phrase": "experimental_data"}, {"score": 0.0023897719795915, "phrase": "obvious_increase"}, {"score": 0.0021499920551456956, "phrase": "microsoft_office"}, {"score": 0.0021198904828154657, "phrase": "optimized_openoffice.org"}], "paper_keywords": ["OpenOffice.org", " loading document", " optimization", " asynchronous import"], "paper_abstract": "As a giant in open source community, OpenOffice.org has become the most popular office suite within Linux community. But OpenOffice.org is relatively slow while loading documents. Research shows that the most time consuming part is importing one page of whole document. If there are many pages in a document, the accumulation of time consumed can be astonishing. Therefore, this paper proposes a solution, which has improved the speed of loading documents through asynchronous importing mechanism: a document is not imported as a whole, but only part of the document is imported at first for display, then mechanism in the background is started to asynchronously import the remaining parts, and insert it into the drawing queue of OpenOffice.org for display. In this way, the problem can be solved and users don't have to wait for a long time. Application start-up time testing tool has been used to test the time consumed in loading different pages of documents before and after optimization of OpenOffice.org. then, we adopt the regression theory to analyse the correlation between the page number of documents and the loading time. In addition, visual modeling of the experimental data are acquired with the aid of matlab. An obvious increase in loading speed can be seen after a comparison of the time consumed to load a document before and after the solution is adopted. And then, using Microsoft Office compared with the optimized OpenOffice.org, their loading speeds are almost same. The results of the experiments show the effectiveness of this solution.", "paper_title": "A Kind of Optimization Method of Loading Documents in OpenOffice.org", "paper_id": "WOS:000301614700010"}