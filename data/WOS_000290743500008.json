{"auto_keywords": [{"score": 0.04795066700982643, "phrase": "flexible_coloring"}, {"score": 0.00481495049065317, "phrase": "reliability_considerations"}, {"score": 0.004775335634705251, "phrase": "data_deduplication"}, {"score": 0.004736045157669388, "phrase": "storage_systems"}, {"score": 0.004525629293824217, "phrase": "hypergraph_h"}, {"score": 0.00443308765153716, "phrase": "allowable_colors"}, {"score": 0.00389994107619882, "phrase": "vertex's_color_list"}, {"score": 0.0036653985479652854, "phrase": "different_color"}, {"score": 0.0036202043425301042, "phrase": "different_colors"}, {"score": 0.003502382624110703, "phrase": "different_incident_hyperedges"}, {"score": 0.0033190180867511605, "phrase": "color_consumption"}, {"score": 0.0032510690712452147, "phrase": "total_number"}, {"score": 0.0031199386667082932, "phrase": "np"}, {"score": 0.0028953973490895746, "phrase": "largest_hyperedge"}, {"score": 0.002755104031926742, "phrase": "recent_result"}, {"score": 0.002732392408191378, "phrase": "bansal"}, {"score": 0.0027098658850171434, "phrase": "khot"}, {"score": 0.002122507495446441, "phrase": "strong_coloring_algorithm"}], "paper_keywords": ["Approximation algorithms", " Graph algorithms", " Graph coloring", " Hardness of approximation"], "paper_abstract": "Motivated by reliability considerations in data deduplication for storage systems, we introduce the problem of flexible coloring. Given a hypergraph H and the number of allowable colors k, a flexible coloring of H is an assignment of one or more colors to each vertex such that, for each hyperedge, it is possible to choose a color from each vertex's color list so that this hyperedge is strongly colored (i.e., each vertex has a different color). Different colors for the same vertex can be chosen for different incident hyperedges (hence the term flexible). The goal is to minimize color consumption, namely, the total number of colors assigned, counting multiplicities. Flexible coloring is NP-hard and trivially s - (s-1)k/n approximable, where s is the size of the largest hyperedge, and n is the number of vertices. Using a recent result by Bansal and Khot, we show that if k is constant, then it is UGC-hard to approximate to within a factor of s - epsilon, for arbitrarily small constant epsilon > 0. Lastly, we present an algorithm with an s - (s-1)k/k' approximation ratio, where k' is number of colors used by a strong coloring algorithm for H. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Flexible coloring", "paper_id": "WOS:000290743500008"}