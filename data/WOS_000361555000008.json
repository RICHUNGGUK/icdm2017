{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "discovered_sequential_patterns"}, {"score": 0.035648822730098034, "phrase": "original_database"}, {"score": 0.015456171186625827, "phrase": "pre-large_concept"}, {"score": 0.008436217080003828, "phrase": "pre-large_sequences"}, {"score": 0.004653120760786245, "phrase": "useful_information"}, {"score": 0.004600389726895716, "phrase": "large_databases"}, {"score": 0.0044967055264893184, "phrase": "important_research_area"}, {"score": 0.004223415145617665, "phrase": "sequential_pattern"}, {"score": 0.00401216440036853, "phrase": "market_analysis"}, {"score": 0.003966667994579941, "phrase": "web_click_streams"}, {"score": 0.003899385109646589, "phrase": "biological_data"}, {"score": 0.0038332390893263844, "phrase": "fast_updated_sequential_pattern_tree"}, {"score": 0.0035796471115594553, "phrase": "sequential_patterns"}, {"score": 0.0035390378585554547, "phrase": "incremental_mining"}, {"score": 0.003211883390828745, "phrase": "prefusp-tree-ins_algorithm"}, {"score": 0.002965229277927781, "phrase": "cumulative_number"}, {"score": 0.002931569771634119, "phrase": "newly_added_customer_sequences"}, {"score": 0.0028167336373711494, "phrase": "execution_time"}, {"score": 0.0027218799769229596, "phrase": "old_or_new_customer_sequences"}, {"score": 0.0024700776739384977, "phrase": "lower_and_upper_support_thresholds"}, {"score": 0.0023196699954340437, "phrase": "small_and_vice_versa"}, {"score": 0.002178400923036365, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "inserted_sequences"}], "paper_keywords": ["Data mining", " sequential pattern", " FUSP-tree", " large sequence", " incremental mining", " dynamic databases"], "paper_abstract": "Mining useful information from large databases has become an important research area in recent years. Among the classes of knowledge derived, sequential pattern can be applied in many domains, such as market analysis, web click streams, and biological data. The fast updated sequential pattern tree (FUSP-tree) algorithm was proposed to update discovered sequential patterns in incremental mining. However, it must rescan the original database for maintaining discovered sequential patterns. This study proposes the PreFUSP-TREE-INS algorithm based on the pre-large concept for maintaining discovered sequential patterns without rescanning the original database until the cumulative number of newly added customer sequences exceeds a safety bound. The execution time for reconstructing the tree when old or new customer sequences are added into the original database is reduced by using pre-large sequences. The pre-large sequences are defined by lower and upper support thresholds that prevent the movement of sequences directly from large to small and vice versa. Experiments are conducted to show the performance of the proposed algorithm for various minimum support thresholds and ratios of inserted sequences.", "paper_title": "Incrementally updating the discovered sequential patterns based on pre-large concept", "paper_id": "WOS:000361555000008"}