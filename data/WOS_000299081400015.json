{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_development_for_infrastructure"}, {"score": 0.004610058444728656, "phrase": "infrastructure_software"}, {"score": 0.003399466007862412, "phrase": "up-front_design"}, {"score": 0.002918826667294298, "phrase": "type_system"}, {"score": 0.0027943943921568456, "phrase": "compact_data_structures"}, {"score": 0.002675252546913683, "phrase": "simplified_code_structure"}, {"score": 0.0021049977753042253, "phrase": "application_developers"}], "paper_keywords": [""], "paper_abstract": "Infrastructure software needs more stringent correctness, reliability, efficiency, and maintainability requirements than non-essential applications. This implies greater emphasis on up-front design, static structure enforced by a type system, compact data structures, simplified code structure, and improved tool support. Education for infrastructure and application developers should differ to reflect that emphasis.", "paper_title": "Software Development for Infrastructure", "paper_id": "WOS:000299081400015"}