{"auto_keywords": [{"score": 0.04571345706034806, "phrase": "dsl-based_design"}, {"score": 0.00849588285677612, "phrase": "architectural_decisions"}, {"score": 0.006347162751714628, "phrase": "dsl_project"}, {"score": 0.004814963899077359, "phrase": "dsl"}, {"score": 0.004634799977448855, "phrase": "dsl-based_software_design"}, {"score": 0.004489810932879285, "phrase": "mature_toolkits"}, {"score": 0.00443308765153716, "phrase": "language_workbenches"}, {"score": 0.0036167509502276294, "phrase": "dsl's_architecture"}, {"score": 0.002931569771634119, "phrase": "important_benefits"}, {"score": 0.0028944757265206332, "phrase": "different_dsl_toolkits"}, {"score": 0.0028397103530211415, "phrase": "unique_way"}, {"score": 0.0021731423856364003, "phrase": "explicit_language_model"}], "paper_keywords": ["Software Architecture", " Software Design", " Domain-specific language (DSL)", " Architectural Decisions"], "paper_abstract": "A number of mature toolkits and language workbenches for DSL-based design have been proposed, making DSL-based design attractive for many projects. These toolkits preselect many architectural decision options. However, in many cases it would be beneficial for DSL-based design to decide for the DSL's architecture later on in a DSL project, once the requirements and the domain have been sufficiently understood. We propose a language and a number of DSLs for DSL-based design and development that combine important benefits of different DSL toolkits in a unique way. Our approach specifically targets at deferring architectural decisions in DSL-based design. As a consequence, the architect can choose, even late in a DSL project, for options such as whether to provide the DSL as one or more external or embedded DSLs and whether to use an explicit language model or not. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "A DSL toolkit for deferring architectural decisions in DSL-based software design", "paper_id": "WOS:000278342600003"}