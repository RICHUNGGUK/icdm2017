{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "service-oriented_computing"}, {"score": 0.004680474782462742, "phrase": "edi"}, {"score": 0.004549734943142138, "phrase": "distributed_computing"}, {"score": 0.004485735417293941, "phrase": "key_enabler"}, {"score": 0.0044435677598780796, "phrase": "today's_enterprises"}, {"score": 0.004218602458288531, "phrase": "cloud_computing"}, {"score": 0.0038930368103015467, "phrase": "rapid_evolution"}, {"score": 0.0038564191670589884, "phrase": "distributed_computing_technologies"}, {"score": 0.0037486121194392564, "phrase": "rich_set"}, {"score": 0.003626626504149897, "phrase": "robust_enterprise_systems"}, {"score": 0.003475582268210954, "phrase": "unresolved_problems"}, {"score": 0.0034428776029411974, "phrase": "fundamental_inconsistencies"}, {"score": 0.00326840809777013, "phrase": "object_computing"}, {"score": 0.0032376465741070274, "phrase": "service-oriented_architecture"}, {"score": 0.0031174595932694036, "phrase": "growing_need"}, {"score": 0.00297346171320082, "phrase": "client_applications"}, {"score": 0.0029039692582303904, "phrase": "large_scale_business_applications"}, {"score": 0.002836096284133166, "phrase": "laptop_programs"}, {"score": 0.0028093921138602606, "phrase": "small_apps"}, {"score": 0.002782938683493689, "phrase": "mobile_devices"}, {"score": 0.00266693888510356, "phrase": "unified_conceptual_framework"}, {"score": 0.002426137929553724, "phrase": "core_concepts"}, {"score": 0.002336004938424957, "phrase": "foundational_model_transformation_patterns"}, {"score": 0.002281376328251423, "phrase": "presented_concepts"}, {"score": 0.0022385926290967263, "phrase": "practical_service-oriented_computing_scenarios"}, {"score": 0.002155412043665635, "phrase": "developed_framework"}], "paper_keywords": ["distributed computing", " model-driven development", " service-oriented architectures"], "paper_abstract": "As the foundation of EDI, B2C and B2B, distributed computing is a key enabler for today's enterprises and will become even more important with the advent of cloud computing on the one hand and an ever more agile work organization on the other hand. Whilst the rapid evolution of distributed computing technologies in the last three decades has delivered a rich set of platforms and paradigms for building robust enterprise systems, it has also left a legacy of unresolved problems including fundamental inconsistencies between the concepts of the two leading distributed computing paradigms, i.e., distributed object computing and service-oriented architecture. Equally important, there is a growing need to lower the complexities and barriers involved in developing client applications, which range from large scale business applications and business processes to laptop programs and small apps on mobile devices. In this article, we present a unified conceptual framework for service-oriented computing based on the proven MDA (Model Driven Architecture) terminology stack. With the conceptual framework we consolidate, and give semantics to, core concepts of service-oriented computing and provide a set of foundational model transformation patterns that map between the presented concepts and further clarify practical service-oriented computing scenarios. Finally, we show how the developed framework perfectly fits to the OSM (Orthographical Software Modeling) approach.", "paper_title": "Foundational MDA Patterns for Service-Oriented Computing", "paper_id": "WOS:000359199200002"}