{"auto_keywords": [{"score": 0.04572074988236009, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "efficient_forest_data_structure"}, {"score": 0.004773476989344654, "phrase": "evolutionary_algorithms_applied"}, {"score": 0.0047323590206695305, "phrase": "network_design"}, {"score": 0.004284100953217494, "phrase": "population-based_metaheuristics"}, {"score": 0.003962998498942108, "phrase": "large_number"}, {"score": 0.003928834302530914, "phrase": "potential_solutions"}, {"score": 0.0038613835226952117, "phrase": "search_space"}, {"score": 0.0037138072936226, "phrase": "local_optima"}, {"score": 0.0036500346000495317, "phrase": "potential_solution"}, {"score": 0.0029012378668247397, "phrase": "new_spanning_tree"}, {"score": 0.0027781870000242004, "phrase": "new_solution"}, {"score": 0.002718627370925435, "phrase": "new_data_structure"}, {"score": 0.0026705298788954022, "phrase": "ea"}, {"score": 0.0024606422183102382, "phrase": "new_spanning_forest"}, {"score": 0.0024393978073660757, "phrase": "average_time"}, {"score": 0.0023257824499250653, "phrase": "nddr"}, {"score": 0.0022957232752482196, "phrase": "large-scale_instances"}, {"score": 0.002266051712795851, "phrase": "degree-constrained_minimum"}, {"score": 0.002169882514603539, "phrase": "small_constants"}, {"score": 0.0021049977753042253, "phrase": "theoretical_bound"}], "paper_keywords": ["Dynamic forest data structures", " evolutionary algorithms", " network design problems", " tree representations"], "paper_abstract": "The design of a network is a solution to several engineering and science problems. Several network design problems are known to be NP-hard, and population-based metaheuristics like evolutionary algorithms (EAs) have been largely investigated for such problems. Such optimization methods simultaneously generate a large number of potential solutions to investigate the search space in breadth and, consequently, to avoid local optima. Obtaining a potential solution usually involves the construction and maintenance of several spanning trees, or more generally, spanning forests. To efficiently explore the search space, special data structures have been developed to provide operations that manipulate a set of spanning trees (population). For a tree with n nodes, the most efficient data structures available in the literature require time O(n) to generate a new spanning tree that modifies an existing one and to store the new solution. We propose a new data structure, called node-depth-degree representation (NDDR), and we demonstrate that using this encoding, generating a new spanning forest requires average time O(root n). Experiments with an EA based on NDDR applied to large-scale instances of the degree-constrained minimum spanning tree problem have shown that the implementation adds small constants and lower order terms to the theoretical bound.", "paper_title": "Efficient Forest Data Structure for Evolutionary Algorithms Applied to Network Design", "paper_id": "WOS:000314269000006"}