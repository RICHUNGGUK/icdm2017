{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "delaunay_triangulation"}, {"score": 0.004581162468419365, "phrase": "bi-cell_filtering"}, {"score": 0.004315487055548749, "phrase": "data_points"}, {"score": 0.003984968827278219, "phrase": "computation_time"}, {"score": 0.003906357144047631, "phrase": "variational_methods"}, {"score": 0.003829290275367182, "phrase": "mesh_generation"}, {"score": 0.0036070601923916196, "phrase": "connectivity_coherence"}, {"score": 0.003044785536429499, "phrase": "effective_filtering_technique"}, {"score": 0.002896750449784931, "phrase": "delaunay"}, {"score": 0.00256993314099902, "phrase": "bi-cell_flipping"}, {"score": 0.002444883254621769, "phrase": "efficient_algorithm"}, {"score": 0.0023727863021828547, "phrase": "two-dimensional_and_three-dimensional_delaunay_triangulations"}, {"score": 0.0021049977753042253, "phrase": "previous_methods"}], "paper_keywords": [""], "paper_abstract": "Updating a Delaunay triangulation when data points are slightly moved is the bottleneck of computation time in variational methods for mesh generation and remeshing. Utilizing the connectivity coherence between two consecutive Delaunay triangulations for computation speedup is the key to solving this problem. Our contribution is an effective filtering technique that confirms most bi-cells whose Delaunay connectivities remain unchanged after the points are perturbed. Based on bi-cell flipping, we present an efficient algorithm for updating two-dimensional and three-dimensional Delaunay triangulations of dynamic point sets. Experimental results show that our algorithm outperforms previous methods.", "paper_title": "Fast Updating of Delaunay Triangulation of Moving Points by Bi-cell Filtering", "paper_id": "WOS:000283159400026"}