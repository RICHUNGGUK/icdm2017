{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "legacy_data-race-free_programs"}, {"score": 0.004351595642056769, "phrase": "fence_placement"}, {"score": 0.003999578057088828, "phrase": "legacy_parallel_programs"}, {"score": 0.003738502710504415, "phrase": "relaxed_architectures"}, {"score": 0.002853396755102163, "phrase": "necessary_conditions"}, {"score": 0.0021049977753042253, "phrase": "drf_programs"}], "paper_keywords": ["Fence Placement", " Relaxed Memory Models"], "paper_abstract": "Fence placement is required to ensure legacy parallel programs operate correctly on relaxed architectures. The challenge is to place as few fences as possible without compromising correctness. By identifying necessary conditions for a read to be an acquire we improve upon the state of the art for legacy DRF programs by up to 2.64x.", "paper_title": "Fence Placement for Legacy Data-Race-Free Programs via Synchronization Read Detection", "paper_id": "WOS:000367254800024"}