{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "adaptive"}, {"score": 0.0045820747375409435, "phrase": "legacy_multimedia_applications"}, {"score": 0.004506968388996092, "phrase": "multimedia_applications"}, {"score": 0.004324521292490181, "phrase": "standard_personal_computers"}, {"score": 0.004149429072483132, "phrase": "established_standards"}, {"score": 0.003948613642680196, "phrase": "real-time_scheduling_solutions"}, {"score": 0.0036052633308076933, "phrase": "wide_range"}, {"score": 0.0035461111918923117, "phrase": "heuristic_approaches"}, {"score": 0.0034306925765832633, "phrase": "acceptable_timing_behavior"}, {"score": 0.0029805015010906013, "phrase": "real-time_scheduling"}, {"score": 0.0024434201175883674, "phrase": "activation_period"}, {"score": 0.0021579641460002523, "phrase": "scheduling_parameters"}], "paper_keywords": ["Experimentation", " Performance", " Measurement"], "paper_abstract": "Multimedia applications are often executed on standard personal computers. The absence of established standards has hindered the adoption of real-time scheduling solutions in this class of applications. Developers have adopted a wide range of heuristic approaches to achieve an acceptable timing behavior but the result is often unreliable. We propose a mechanism to extend the benefits of real-time scheduling to legacy applications based on the combination of two techniques: (1) a real-time monitor that observes and infers the activation period of the application, and (2) a feedback mechanism that adapts the scheduling parameters to improve its real-time performance.", "paper_title": "Adaptive Real-Time Scheduling for Legacy Multimedia Applications", "paper_id": "WOS:000313395700017"}