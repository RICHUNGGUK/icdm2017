{"auto_keywords": [{"score": 0.03905383994125658, "phrase": "user_interface_elements"}, {"score": 0.03813442830268009, "phrase": "uims"}, {"score": 0.00481495049065317, "phrase": "ubiquitous_user_interfaces"}, {"score": 0.004583205112737672, "phrase": "system_side"}, {"score": 0.0044991925146184025, "phrase": "multidisciplinary_problem"}, {"score": 0.004416713079266374, "phrase": "user_interface_management_systems"}, {"score": 0.004152502093643003, "phrase": "new_architecture"}, {"score": 0.003952513974962462, "phrase": "distributed_synthetic_file_system_interfaces"}, {"score": 0.003244050414264445, "phrase": "daily_basis"}, {"score": 0.003145417398038261, "phrase": "personal_computers"}, {"score": 0.0030686679245324837, "phrase": "transparent_distribution"}, {"score": 0.0029027394930867902, "phrase": "highly_heterogeneous_devices"}, {"score": 0.0026953359825383646, "phrase": "special_tools"}, {"score": 0.002518227743688769, "phrase": "new_human-computer_interaction_techniques"}, {"score": 0.0023819914954155905, "phrase": "orthogonal_services"}, {"score": 0.002239225269052105, "phrase": "distributed_ui."}, {"score": 0.0021049977753042253, "phrase": "window_system"}], "paper_keywords": [""], "paper_abstract": "This article is focused on the system side of the multidisciplinary problem of building User Interface Management Systems (UIMS) for distributed and heterogeneous I/O devices. It presents a new architecture that decouples applications from their interfaces by using distributed synthetic file system interfaces (similar to /proc on UNIX) to export user interface elements and a new UIMS, O/live, following this approach. The UIMS has been in use for several years on a daily basis, in our laboratory and personal computers. It supports transparent distribution, replication, and migration of user interface elements among highly heterogeneous devices. Moreover, it is highly programmable without the need for special tools, which (a) facilitates experimentation and iteration for new human-computer interaction techniques and (b) enables the creation of orthogonal services to manipulate programmatically and independently the elements of the distributed UI. This article describes both the approach and the O/live UIMS and window system.", "paper_title": "O/live: Transparent Distribution, Persistence, and Partial Replication for Ubiquitous User Interfaces", "paper_id": "WOS:000340174000002"}