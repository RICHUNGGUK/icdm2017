{"auto_keywords": [{"score": 0.04822150491313864, "phrase": "cps"}, {"score": 0.00481495049065317, "phrase": "cyber-physical_system"}, {"score": 0.004669085371587273, "phrase": "cyber-physical_systems"}, {"score": 0.004527619017250708, "phrase": "safety-critical_systems"}, {"score": 0.00440976345264104, "phrase": "security_hazard"}, {"score": 0.0043519860930099795, "phrase": "design_phase"}, {"score": 0.003682207422331339, "phrase": "hybrid_interface_automata"}, {"score": 0.00355485940716082, "phrase": "interface_automata"}, {"score": 0.0033720233465568167, "phrase": "cps."}, {"score": 0.0033131809910010267, "phrase": "hia"}, {"score": 0.0032410683344688625, "phrase": "optimistic_approach"}, {"score": 0.0030206579994328975, "phrase": "illegal_location"}, {"score": 0.002670296619878048, "phrase": "forbidden_behaviors"}, {"score": 0.002646880721119838, "phrase": "behavioral_nonexistent_consistency"}, {"score": 0.002544017922741882, "phrase": "unconstrained_dynamic_programming"}, {"score": 0.0024559368099486647, "phrase": "genetic_algorithm"}, {"score": 0.0023708980662168547, "phrase": "nonlinear_hybrid_model"}, {"score": 0.0022290883852844057, "phrase": "traditional_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cyber-Physical System", " Hybrid system", " Hybrid interface automaton", " Scenario", " Genetic algorithm"], "paper_abstract": "Cyber-Physical Systems (CPS) are hybrid, safety-critical systems. For finding safety or security hazard in the design phase, modeling for CPS and checking their properties become very important. We focus on the compatibility, i.e., two systems can work together, and behavioral nonexistent consistency, i.e., forbidden behaviors do not occur in a system. Hybrid interface automata (HIA), which extend from interface automata and is not input-enabled, are introduced to model CPS. The compatibility of HIA is checked under an optimistic approach, which means if there is an environment in which two HIA cannot reach an illegal location, namely, at the location one cannot accept the input send by the other, they are compatible. Based on a scenario that specifies forbidden behaviors, behavioral nonexistent consistency is boundedly checked by transforming it to an unconstrained dynamic programming, and solving the programming by a genetic algorithm. The method can directly apply to nonlinear hybrid model. It relaxes a restriction on the form of the system dynamic in traditional algorithms. An experiment and simulation validate our algorithms. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Modeling and checking for Cyber-Physical System based on hybrid interface automata", "paper_id": "WOS:000365335400015"}