{"auto_keywords": [{"score": 0.04231365345404785, "phrase": "power_consumption"}, {"score": 0.020345563660994423, "phrase": "application_developers"}, {"score": 0.00481495049065317, "phrase": "sid-based_power-aware_simulator"}, {"score": 0.0047310525657970615, "phrase": "embedded_multicore_systems"}, {"score": 0.004689650818647484, "phrase": "increasingly_important_roles"}, {"score": 0.004621447740470602, "phrase": "consumer_electronics"}, {"score": 0.004422706216600923, "phrase": "mobile_devices"}, {"score": 0.004320213877598964, "phrase": "power_metrics"}, {"score": 0.004294962474996283, "phrase": "popular_application_design_platforms"}, {"score": 0.004244907061688778, "phrase": "sid"}, {"score": 0.003887496109332722, "phrase": "sidbased_power-aware_simulation_framework"}, {"score": 0.0038085117064624208, "phrase": "proposed_power_estimation"}, {"score": 0.0036126731589251906, "phrase": "first_phase"}, {"score": 0.003539252646181146, "phrase": "power_model"}, {"score": 0.0035082436540296406, "phrase": "processor_ip"}, {"score": 0.003447035529485425, "phrase": "second_phase"}, {"score": 0.0034168317227203206, "phrase": "power_abstract_interpretation_method"}, {"score": 0.0033769698684652646, "phrase": "simulation_trace"}, {"score": 0.0033180444439225645, "phrase": "cpe_module"}, {"score": 0.0032410683344688625, "phrase": "summarized_trace_information"}, {"score": 0.0031938648476635225, "phrase": "ip_power_models"}, {"score": 0.003138124398958758, "phrase": "manager_component"}, {"score": 0.0030833537429977797, "phrase": "digital_signal_processor"}, {"score": 0.003065319797982121, "phrase": "dsp"}, {"score": 0.0030206579994328975, "phrase": "host_thread"}, {"score": 0.002967931416941965, "phrase": "shared_resources"}, {"score": 0.0028990540380955596, "phrase": "simulation_performance"}, {"score": 0.0028568174308720167, "phrase": "simulated_dsp_components_increases"}, {"score": 0.0028317705704546123, "phrase": "power-profiling_api"}, {"score": 0.0027741761880779535, "phrase": "embedded_software"}, {"score": 0.0026860218805819184, "phrase": "specific_code_section"}, {"score": 0.0026624684547385718, "phrase": "target_application"}, {"score": 0.002623669616798891, "phrase": "case_studies"}, {"score": 0.0024667783849055634, "phrase": "dsp_applications"}, {"score": 0.0024451427672857458, "phrase": "dspstone_benchmark"}, {"score": 0.002416589459425828, "phrase": "compiler_optimization_levels"}, {"score": 0.0024024377855956136, "phrase": "simd_intrinsics"}, {"score": 0.0023466530426848064, "phrase": "histogram_application"}, {"score": 0.002326068563512387, "phrase": "augmented-reality_application"}, {"score": 0.002212780203829396, "phrase": "multicore_systems"}, {"score": 0.002136142919325754, "phrase": "optimization_process"}, {"score": 0.002117401083432857, "phrase": "different_views"}, {"score": 0.0021049977753042253, "phrase": "power_dissipations"}], "paper_keywords": ["Design", " Experimentation", " Multicore simulation", " power modeling", " embedded processor", " DSP", " Design", " Experimentation"], "paper_abstract": "Embedded multicore systems are playing increasingly important roles in the design of consumer electronics. The objective of such systems is to optimize both performance and power characteristics of mobile devices. However, currently there are no power metrics supporting popular application design platforms (such as SID) that application developers use to develop their applications. This hinders the ability of application developers to optimize power consumption. In this article we present the design and experiments of a SIDbased power-aware simulation framework for embedded multicore systems. The proposed power estimation flow includes two phases: IP-level power modeling and power-aware system simulation. The first phase employs PowerMixer(IP) to construct the power model for the processor IP and other major IPs, while the second phase involves a power abstract interpretation method for summarizing the simulation trace, then, with a CPE module, estimating the power consumption based on the summarized trace information and the input of IP power models. In addition, a Manager component is devised to map each digital signal processor (DSP) component to a host thread and maintain the access to shared resources. The aim is to maintain the simulation performance as the number of simulated DSP components increases. A power-profiling API is also supported that developers of embedded software can use to tune the granularity of power-profiling for a specific code section of the target application. We demonstrate via case studies and experiments how application developers can use our SID-based power simulator for optimizing the power consumption of their applications. We characterize the power consumption of DSP applications with the DSPstone benchmark and discuss how compiler optimization levels with SIMD intrinsics influence the performance and power consumption. A histogram application and an augmented-reality application based on human-face-based RMS(recognition, mining, and synthesis) application are deployed as running examples on multicore systems to demonstrate how our power simulator can be used by developers in the optimization process to illustrate different views of power dissipations of applications.", "paper_title": "The Design and Experiments of A SID-Based Power-Aware Simulator for Embedded Multicore Systems", "paper_id": "WOS:000350565900006"}