{"auto_keywords": [{"score": 0.04707046420780691, "phrase": "snake_arm_robot"}, {"score": 0.00481495049065317, "phrase": "continuum_snake_arm_robots"}, {"score": 0.004661446705304497, "phrase": "novel_technique"}, {"score": 0.004440277230269978, "phrase": "real-time_inspections"}, {"score": 0.004050625770007516, "phrase": "inverse_kinematics"}, {"score": 0.0037554497046697432, "phrase": "sequential_quadratic_programming_optimization_approach"}, {"score": 0.003352388337911934, "phrase": "snake_arm"}, {"score": 0.0032278559855285975, "phrase": "desired_trajectory"}, {"score": 0.003193129886123359, "phrase": "minimal_error"}, {"score": 0.002881255933884771, "phrase": "main_objective"}, {"score": 0.0028043588777213533, "phrase": "efficient_objective_function"}, {"score": 0.0027592065435732955, "phrase": "uninterrupted_movements"}, {"score": 0.002599763359352916, "phrase": "extensive_set"}, {"score": 0.0025440911575156755, "phrase": "common_arrangements"}, {"score": 0.0023841092222805253, "phrase": "average_computation_time"}, {"score": 0.0021745003291048356, "phrase": "ideal_path"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hyper-redundant manipulator", " Optimization", " Snake arm", " Tip following"], "paper_abstract": "This paper presents a novel technique for the navigation of a snake arm robot, for real-time inspections in complex and constrained environments. These kinds of manipulators rely on redundancy, making the inverse kinematics very difficult. Therefore, a tip following method is proposed using the sequential quadratic programming optimization approach to navigate the robot. This optimization is used to minimize a set of changes to the arrangement of the snake arm that lets the algorithm follow the desired trajectory with minimal error. The information of the Snake Arm pose is used to limit deviations from the path taken. Therefore, the main objective is to find an efficient objective function that allows uninterrupted movements in real-time. The method proposed is validated through an extensive set of simulations of common arrangements and poses for the snake arm robot. For a 24 DoF robot, the average computation time is 0.4 s, achieving a speed of 4.5 mm/s, with deviation of no more than 25 mm from the ideal path. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Real-time method for tip following navigation of continuum snake arm robots", "paper_id": "WOS:000341464300012"}