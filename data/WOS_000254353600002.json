{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "natural_languages"}, {"score": 0.004616859702338596, "phrase": "major_part"}, {"score": 0.004185632403886255, "phrase": "software_engineering_life_cycle"}, {"score": 0.003957477564354679, "phrase": "software_maintenance"}, {"score": 0.003848088904418221, "phrase": "reverse_engineering"}, {"score": 0.003741712498615481, "phrase": "semantic_information"}, {"score": 0.0033919477901198716, "phrase": "important_knowledge"}, {"score": 0.0032522091171602557, "phrase": "software_engineer"}, {"score": 0.0031182092708983184, "phrase": "text_mining_system"}, {"score": 0.0029069972482610403, "phrase": "software_ontology"}, {"score": 0.0025264171945423254, "phrase": "particular_novelty"}, {"score": 0.002289993730291138, "phrase": "automated_source_code_analysis"}, {"score": 0.002195552442011313, "phrase": "natural_language_processing_pipeline"}], "paper_keywords": [""], "paper_abstract": "Documents written in natural languages constitute a major part of the artefacts produced during the software engineering life cycle. Especially during software maintenance or reverse engineering, semantic information conveyed in these documents can provide important knowledge for the software engineer. A text mining system capable of populating a software ontology with information detected in documents is presented. A particular novelty is the integration of results from automated source code analysis into a natural language processing pipeline, allowing to cross-link software artefacts represented in code and natural language on a semantic level.", "paper_title": "Text mining and software engineering: an integrated source code and document analysis approach", "paper_id": "WOS:000254353600002"}