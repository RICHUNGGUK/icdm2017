{"auto_keywords": [{"score": 0.03884976197665515, "phrase": "multiverse"}, {"score": 0.015401481435582223, "phrase": "high-level_speculation"}, {"score": 0.00481495049065317, "phrase": "distributed_high-level"}, {"score": 0.004755650013733963, "phrase": "algorithmic_speculation"}, {"score": 0.004658426838467567, "phrase": "promising_programming_paradigm"}, {"score": 0.00446987606516801, "phrase": "multiple_independent_parallel_sections"}, {"score": 0.004218602458288531, "phrase": "continuing_execution"}, {"score": 0.0041666157975446564, "phrase": "speculatively_branched_section"}, {"score": 0.003997891221012094, "phrase": "programming_paradigm"}, {"score": 0.0038518661517315533, "phrase": "dramatic_performance_improvements"}, {"score": 0.003726533059542558, "phrase": "multiverse_speculative_programming_model"}, {"score": 0.003502382624110703, "phrase": "large_amounts"}, {"score": 0.0034024277222012597, "phrase": "entire_cluster"}, {"score": 0.0032510690712452147, "phrase": "single_machine"}, {"score": 0.0030808211830129304, "phrase": "large_scale_high-level_speculative_parallelism"}, {"score": 0.002907405102646616, "phrase": "address_space_sharing_mechanism"}, {"score": 0.0028596699752849682, "phrase": "efficient_transparent_access"}, {"score": 0.0028243822059448266, "phrase": "original_address_space"}, {"score": 0.0026875205754965537, "phrase": "machine_boundaries"}, {"score": 0.002494531100339247, "phrase": "novel_mechanisms"}, {"score": 0.0024535580495414783, "phrase": "scalability_bottlenecks"}, {"score": 0.00240328454980006, "phrase": "large_number"}, {"score": 0.002286781334850213, "phrase": "impressive_speedups"}, {"score": 0.0022679195103377124, "phrase": "good_scalability"}, {"score": 0.0022492129111567824, "phrase": "entire_clusters"}, {"score": 0.0021049977753042253, "phrase": "scaling_cluster"}], "paper_keywords": ["speculation", " parallelism", " cluster", " multiverse", " algorithmic speculation", " function speculation"], "paper_abstract": "Algorithmic speculation or high-level speculation is a promising programming paradigm which allows programmers to speculatively branch an execution into multiple independent parallel sections and then choose the best (perhaps fastest) amongst them. The continuing execution after the speculatively branched section sees only the modifications made by the best one. This programming paradigm allows programmers to harness parallelism and can provide dramatic performance improvements. In this paper we present the Multiverse speculative programming model. Multiverse allows programmers to exploit parallelism through high-level speculation. It can effectively harness large amounts of parallelism by speculating across an entire cluster and is not bound by the parallelism available in a single machine. We present abstractions and a runtime which allow programmers to introduce large scale high-level speculative parallelism into applications with minimal effort. We introduce a novel on-demand address space sharing mechanism which provide speculations efficient transparent access to the original address space of the application (including the use of pointers) across machine boundaries. Multiverse provides single commit semantics across speculations while guaranteeing isolation between them. We also introduce novel mechanisms to deal with scalability bottlenecks when there are a large number of speculations. We demonstrate that for several benchmarks, Multiverse achieves impressive speedups and good scalability across entire clusters. We study the overheads of the runtime and demonstrate how our special scalability mechanisms are crucial in scaling cluster wide.", "paper_title": "Multiverse: Efficiently Supporting Distributed High-Level Speculation", "paper_id": "WOS:000327697300030"}