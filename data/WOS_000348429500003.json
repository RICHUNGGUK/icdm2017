{"auto_keywords": [{"score": 0.04966229511350135, "phrase": "replicated_cloud_services"}, {"score": 0.015719716506582538, "phrase": "effective_utilization"}, {"score": 0.013568664990167277, "phrase": "midcloud"}, {"score": 0.00462919213721188, "phrase": "resource_replication"}, {"score": 0.004354315061804687, "phrase": "large_geographic_areas"}, {"score": 0.00398959232769596, "phrase": "cloud_clients"}, {"score": 0.003954837422946628, "phrase": "dynamic_load_balancing"}, {"score": 0.003920384090110374, "phrase": "fault_tolerance_mechanisms"}, {"score": 0.0036553070575015344, "phrase": "multiple_replicated_cloud_services"}, {"score": 0.003607630811220324, "phrase": "fast_and_reliable_service_delivery"}, {"score": 0.003498782065781398, "phrase": "load_balancing"}, {"score": 0.003468287913322255, "phrase": "fault_tolerance"}, {"score": 0.003438058620195309, "phrase": "distributed_systems"}, {"score": 0.0033197446406648626, "phrase": "prior_knowledge"}, {"score": 0.0032764307492734145, "phrase": "environment's_operating_conditions"}, {"score": 0.0031636612155559267, "phrase": "run_time"}, {"score": 0.0029755458462182565, "phrase": "operational_conditions"}, {"score": 0.0027863537694678094, "phrase": "high_communication_delay"}, {"score": 0.0026677353022182223, "phrase": "cloud"}, {"score": 0.0026321198895843173, "phrase": "data_storage_and_computation_servers"}, {"score": 0.0024007585788965655, "phrase": "negative_impact"}, {"score": 0.0023798115577749225, "phrase": "high_and_dynamic_delays"}, {"score": 0.0023487324083283205, "phrase": "cloud_servers"}, {"score": 0.002287783663138828, "phrase": "experimental_results"}, {"score": 0.0022579036318895753, "phrase": "positive_effects"}, {"score": 0.0021993066642488237, "phrase": "efficient_load_balancing"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Cloud computing", " middleware", " agents", " Internet", " fault tolerance", " load balancing"], "paper_abstract": "The Cloud relies heavily on resource replication to support the demands of the clients efficiently. Replicated Cloud services are distributed across large geographic areas and are accessible via the Internet. This paper describes MidCloud; an agent-based middleware that provides Cloud clients with dynamic load balancing and fault tolerance mechanisms for effective utilization of replicated Cloud services and resources. MidCloud can be used to connect clients with multiple replicated Cloud services and provide fast and reliable service delivery from multiple replicas. Several approaches for load balancing and fault tolerance in distributed systems were introduced; however, they require prior knowledge of the environment's operating conditions and/or constant monitoring of these conditions at run time that allows the applications to adjust the load and redistribute the tasks when operational conditions change and when failures occur. These techniques work well when there is no high communication delay. Yet, this is not true in the Cloud, where data storage and computation servers are scattered all over the world and communication delays are usually very high. MidCloud deploys approaches to reduce the negative impact of high and dynamic delays on the Cloud servers and the Internet. The experimental results show the positive effects of using MidCloud to provide efficient load balancing and fault tolerance. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "MidCloud: an agent-based middleware for effective utilization of replicated Cloud services", "paper_id": "WOS:000348429500003"}