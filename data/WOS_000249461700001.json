{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "approximate_inverse"}, {"score": 0.0046993598473345395, "phrase": "architectural_platforms"}, {"score": 0.00412796126884884, "phrase": "finite_element_systems"}, {"score": 0.003685075985513874, "phrase": "globus"}, {"score": 0.003567455727660992, "phrase": "open_mpi_open-source_software"}, {"score": 0.002984373546099842, "phrase": "underlying_platform"}, {"score": 0.0026638482306228575, "phrase": "linear_system"}, {"score": 0.002537216271965659, "phrase": "\"retention_parameter"}, {"score": 0.002264607102799332, "phrase": "numerical_results"}, {"score": 0.0021745003291048356, "phrase": "finite_element_sparse_linear_systems"}], "paper_keywords": ["approximate inverses", " preconditioned conjugate gradient method", " parallel iterative methods", " parallel/distributed computations", " MPI", " globus toolkit", " open MPI"], "paper_abstract": "In this paper we examine the performance of parallel approximate inverse preconditioning for solving finite element systems, using a variety of clusters containing the Message Passing Interface (MPI) communication library, the Globus toolkit and the Open MPI open-source software. The techniques outlined in this paper contain parameters that can be varied so as to tune the execution to the underlying platform. These parameters include the number of CPUs, the order of the linear system (n) and the \"retention parameter\" (delta l) of the approximate inverse used as a preconditioner. Numerical results are presented for solving finite element sparse linear systems on platforms with various CPU types and number, different compilers, different File System types, different MPI implementations and different memory sizes.", "paper_title": "Matching high performance approximate inverse preconditioning to architectural platforms", "paper_id": "WOS:000249461700001"}