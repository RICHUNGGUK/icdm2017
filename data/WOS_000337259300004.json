{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "quality_requirements"}, {"score": 0.004767261858417823, "phrase": "internetware"}, {"score": 0.004696608876994947, "phrase": "emerging_software_paradigm"}, {"score": 0.004065156038847781, "phrase": "implementation_decisions"}, {"score": 0.00392586404888927, "phrase": "critical_issue"}, {"score": 0.003848413823574867, "phrase": "traditional_software_engineering"}, {"score": 0.003553540530701019, "phrase": "potential_functional_design_alternatives"}, {"score": 0.0034660938095219846, "phrase": "goal-oriented_paradigms"}, {"score": 0.0034146585649631692, "phrase": "graphical_goal_models"}, {"score": 0.0032975819773787985, "phrase": "qualitative_or_quantitative_reasoning_schemas"}, {"score": 0.0031061129850110994, "phrase": "ever-changing_operating_environment"}, {"score": 0.003044785536429499, "phrase": "run-time_decision_making"}, {"score": 0.0028822890425197582, "phrase": "implementation_decision"}, {"score": 0.0027148677103585985, "phrase": "symbolic_formula_representation"}, {"score": 0.002687922713487696, "phrase": "requirements_goal_models"}, {"score": 0.0026480044868438875, "phrase": "tree_structure"}, {"score": 0.0025827837420330816, "phrase": "well-defined_syntax"}, {"score": 0.0024571101010891347, "phrase": "reasoning_rules"}, {"score": 0.00239657981537094, "phrase": "reasoning_action"}, {"score": 0.0023143284925318916, "phrase": "multiple-factor_decision_making"}, {"score": 0.002136747803494932, "phrase": "supporting_tool"}], "paper_keywords": ["design alternatives", " decision making", " implementation decision", " internetware", " quality requirements"], "paper_abstract": "Internetware is an emerging software paradigm in the open, dynamic and ever-changing Internet environment. A successful internetware must demonstrate acceptable degree of quality when carrying out its functionality. Hence, when internetware is being dynamically constructed, making implementation decisions to satisfice the quality requirements becomes a critical issue. In the traditional software engineering, quality requirements are usually refined stepwise by sub-requirements utilizing goal modeling perspective, until some potential functional design alternatives are identified. The goal-oriented paradigms have adopted graphical goal models to reason about quality requirements and proposed qualitative or quantitative reasoning schemas. However, these techniques may become unviable due to the ever-changing operating environment and demands for run-time decision making. In this paper, we propose an approach for implementation decision making driven by quality requirements for internetware. It focuses on the symbolic formula representation of requirements goal models with the tree structure, which is of well-defined syntax and clear traceability. Furthermore, we explore some reasoning rules which effectively automate each reasoning action on the formulae. This supports multiple-factor decision making. A case study is also provided to illustrate our proposed approach. We have developed a supporting tool based on our theoretical approach that we also present in this paper.", "paper_title": "Implementation decision making for internetware driven by quality requirements", "paper_id": "WOS:000337259300004"}