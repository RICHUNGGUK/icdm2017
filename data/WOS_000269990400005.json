{"auto_keywords": [{"score": 0.03863200290132849, "phrase": "evoarch"}, {"score": 0.014552842597302324, "phrase": "functional_spaces"}, {"score": 0.013129118897289946, "phrase": "ea"}, {"score": 0.01130505785276466, "phrase": "adjacency_matrices"}, {"score": 0.00481495049065317, "phrase": "architectural_layout_design"}, {"score": 0.004740476936977635, "phrase": "architectural_layout_design_problem"}, {"score": 0.004500414250942443, "phrase": "best_adjacencies"}, {"score": 0.004206338218873218, "phrase": "combinatorial_optimization_problem"}, {"score": 0.004055998173160551, "phrase": "evolutionary_algorithm"}, {"score": 0.003580032420161922, "phrase": "graph-encoding_scheme"}, {"score": 0.0035063024767122684, "phrase": "topological_configuration"}, {"score": 0.0031270239691197515, "phrase": "large_search_space"}, {"score": 0.0030946423142739813, "phrase": "graph_topologies"}, {"score": 0.0030466955629231047, "phrase": "reproduction_operators"}, {"score": 0.0028325548627901004, "phrase": "equal_chances"}, {"score": 0.002512850690695835, "phrase": "fitness_function"}, {"score": 0.002461044825190643, "phrase": "consideration_preferences"}, {"score": 0.0024103044278902916, "phrase": "different_functional_spaces"}, {"score": 0.002299921909935613, "phrase": "different_experiments"}, {"score": 0.002171836484200008, "phrase": "architectural_layout_design_tasks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Architectural space topology", " Evolutionary algorithm", " Crossover", " Genetic algorithm", " Graph algorithm", " Mutation"], "paper_abstract": "The architectural layout design problem, which is concerned with the finding of the best adjacencies between functional spaces among many possible ones under given constraints, can be formulated as a combinatorial optimization problem and can be solved with an Evolutionary Algorithm (EA). We present functional spaces and their adjacencies in form of graphs and propose an EA called EvoArch that works with a graph-encoding scheme. EvoArch encodes topological configuration in the adjacency matrices of the graphs that they represent and its reproduction operators operate on these adjacency matrices. In order to explore the large search space of graph topologies, these reproduction operators are designed to be unbiased so that all nodes in a graph have equal chances of being selected to be swapped or mutated. To evaluate the fitness of a graph, EvoArch makes use of a fitness function that takes into consideration preferences for adjacencies between different functional spaces, budget and other design constraints. By means of different experiments, we show that EvoArch can be a very useful tool for architectural layout design tasks. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "EvoArch: An evolutionary algorithm for architectural layout design", "paper_id": "WOS:000269990400005"}