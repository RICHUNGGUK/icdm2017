{"auto_keywords": [{"score": 0.04296474234776576, "phrase": "computation_complexity"}, {"score": 0.038063285146677034, "phrase": "ime"}, {"score": 0.03223774761456219, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "macroblock_feature_based_complexity_reduction"}, {"score": 0.00463507149599759, "phrase": "variable_block_size"}, {"score": 0.004599955702923899, "phrase": "vbs"}, {"score": 0.004547656324173302, "phrase": "multiple_reference_frame"}, {"score": 0.004428025469002531, "phrase": "motion_estimation"}, {"score": 0.004311527998148399, "phrase": "superior_coding_performance"}, {"score": 0.004198082549566806, "phrase": "new_techniques"}, {"score": 0.004134596278123439, "phrase": "great_burden"}, {"score": 0.003995226376780718, "phrase": "low_power_hardware_implementation"}, {"score": 0.003919830848124645, "phrase": "fast_me_algorithms"}, {"score": 0.003802135020791801, "phrase": "real-time_hardwired_encoder"}, {"score": 0.0037161794591176033, "phrase": "fractional_motion_estimation"}, {"score": 0.0036879638523425106, "phrase": "fme"}, {"score": 0.00364603066037512, "phrase": "integer_motion_estimation"}, {"score": 0.0035772012773052065, "phrase": "pipeline_stage"}, {"score": 0.003404244237372396, "phrase": "single_stage"}, {"score": 0.0032519989404960073, "phrase": "hardware_data_flow"}, {"score": 0.0031784407245606704, "phrase": "complexity_reduction_algorithm"}, {"score": 0.003024705160129876, "phrase": "similarity_analysis"}, {"score": 0.0029902938871031637, "phrase": "big_mode_mb"}, {"score": 0.002956272941199248, "phrase": "early_termination"}, {"score": 0.00293380698353469, "phrase": "ime_stage"}, {"score": 0.0028783840417661694, "phrase": "normal_mb._motion_feature"}, {"score": 0.002718301574682098, "phrase": "redundant_search_positions"}, {"score": 0.002636587060621144, "phrase": "large_motion_feature"}, {"score": 0.00260657976055413, "phrase": "pixel_difference"}, {"score": 0.002537880772794665, "phrase": "blur_effect"}, {"score": 0.0025185863209688016, "phrase": "video_sensor"}, {"score": 0.0024615764782448214, "phrase": "sub-sampling_technique"}, {"score": 0.0023966900120342364, "phrase": "experimental_results"}, {"score": 0.0023424328921363585, "phrase": "hardware_friendly_full_search_algorithm"}, {"score": 0.0023157656212149367, "phrase": "proposed_fast_me_algorithm"}, {"score": 0.0022547140008848912, "phrase": "negligible_video_quality_degradation"}, {"score": 0.0021702728407945976, "phrase": "hardware_friendly_way"}, {"score": 0.0021049977753042253, "phrase": "real-time_hardwired_video_encoder"}], "paper_keywords": ["H.264/AVC", " ME", " similarity analysis", " motion analysis"], "paper_abstract": "In H.264/AVC standard, many new techniques Such as variable block size (VBS) and multiple reference frame (MRF) are used in motion estimation (ME) part to achieve superior coding performance, However, the use of new techniques will also cause great burden on computation complexity, which leads to problems in low power hardware implementation. Many software based fast ME algorithms are proposed to reduce complexity. For real-time hardwired encoder, the huge throughput of fractional motion estimation (FME) and integer motion estimation (IME) makes pipeline stage a must. In this case. IME is arranged in a single stage. which deteriorates the efficiency of many software based algorithms. Based on the hardware data flow, this paper provides a complexity reduction algorithm which speeds up ME procedure through three schemes. Firstly, the proposed algorithm executes similarity analysis to detect big mode MB and apply early termination in IME stage. Secondly, for normal MB. motion feature is extracted after IME of each frame and a 6-ring based search range adjustment scheme is introduced to remove redundant search positions. Thirdly, for MBs which have large motion feature, the pixel difference is very small due to the blur effect on video sensor. So, we use sub-sampling technique to reduce computation complexity for such MBs. Experimental results show that. compared with hardware friendly full search algorithm, the proposed fast ME algorithm can reduce 52.63% to 83.21% ME time with negligible video quality degradation. Furthermore, since the proposed algorithm works in a hardware friendly way, it can be embedded into 3-stage real-time hardwired video encoder to achieve low power design.", "paper_title": "Macroblock Feature Based Complexity Reduction for H.264/AVC Motion Estimation", "paper_id": "WOS:000260400600033"}