{"auto_keywords": [{"score": 0.03622608793694689, "phrase": "domain_theory"}, {"score": 0.03426852460672926, "phrase": "domain-dependent_planners"}, {"score": 0.013227544252732726, "phrase": "domain-independent_planners"}, {"score": 0.007920334106766352, "phrase": "ml_techniques"}, {"score": 0.004667780781335814, "phrase": "instantiated_activities"}, {"score": 0.004623405003209069, "phrase": "knowledge_base"}, {"score": 0.004601374835486024, "phrase": "generic_actions"}, {"score": 0.00451429415690544, "phrase": "initial_state"}, {"score": 0.004482063543727601, "phrase": "desirable_end-state"}, {"score": 0.004428854141258374, "phrase": "long_tradition"}, {"score": 0.0043910399418042876, "phrase": "al"}, {"score": 0.004202105650903394, "phrase": "artificial_domains"}, {"score": 0.004025211190803361, "phrase": "domain-independent_heuristics"}, {"score": 0.003948991108330936, "phrase": "'syntactic'_structure"}, {"score": 0.003920780681351006, "phrase": "problem_space"}, {"score": 0.0038834787946979863, "phrase": "search_tree"}, {"score": 0.003800837029949237, "phrase": "'semantic'_information"}, {"score": 0.0036845490951857617, "phrase": "knowledge_engineering"}, {"score": 0.0033166379485150507, "phrase": "'good'_solutions"}, {"score": 0.0032929299316035864, "phrase": "minimal_computational_resources"}, {"score": 0.00263612191603326, "phrase": "solved_problems"}, {"score": 0.0025310328434864256, "phrase": "middle-ground_solutions"}, {"score": 0.002500927169609655, "phrase": "aforementioned_two_extremes"}, {"score": 0.0023783352461520368, "phrase": "new_knowledge"}, {"score": 0.0022617389804167943, "phrase": "pltool"}, {"score": 0.0021252533072727707, "phrase": "ke_framework"}, {"score": 0.0021151013453674407, "phrase": "mixed-initiative_generation"}, {"score": 0.0021049977753042253, "phrase": "efficient_and_good_planning_knowledge"}], "paper_keywords": [""], "paper_abstract": "Artificial intelligence (AI) planning solves the problem of generating a correct and efficient ordered set of instantiated activities, from a knowledge base of generic actions, which when executed will transform some initial state into some desirable end-state. There is a long tradition of work in Al for developing planners that make use of heuristics that are shown to improve their performance in many real world and artificial domains. The developers of planners have chosen between two extremes when defining those heuristics. The domain-independent planners use domain-independent heuristics, which exploit information only from the 'syntactic' structure of the problem space and of the search tree. Therefore, they do not need any 'semantic' information from a given domain in order to guide the search. From a knowledge engineering (KE) perspective, the planners that use this type of heuristics have the advantage that the users of this technology need only focus on defining the domain theory and not on defining how to make the planner efficient (how to obtain 'good' solutions with the minimal computational resources). However, the domain-dependent planners require users to manually represent knowledge not only about the domain theory, but also about how to make the planner efficient. This approach has the advantage of using either better domain-theory formulations or using domain knowledge for defining the heuristics, thus potentially making them more efficient. However, the efficiency of these domain-dependent planners strongly relies on the KE and planning expertise of the user. When the user is an expert on these two types of knowledge, domain-dependent planners clearly outperform domain-independent planners in terms of number of solved problems and quality of solutions. Machine-learning (ML) techniques applied to solve the planning problems have focused on providing middle-ground solutions as compared to the aforementioned two extremes. Here, the user first defines a domain theory, and then executes the ML techniques that automatically modify or generate new knowledge with respect to both the domain theory and the heuristics. In this paper, we present our work on building a tool, PLTOOL (planning and learning tool), to help users interact with a set of ML techniques and planners. The goal is to provide a KE framework for mixed-initiative generation of efficient and good planning knowledge.", "paper_title": "PLTOOL: A knowledge engineering tool for planning and learning", "paper_id": "WOS:000248568900004"}