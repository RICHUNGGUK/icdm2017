{"auto_keywords": [{"score": 0.03519040000566708, "phrase": "nowhere_dense_set"}, {"score": 0.00481495049065317, "phrase": "unbounded_timestamps"}, {"score": 0.0047409388179452255, "phrase": "timestamp_problem"}, {"score": 0.004668059458774745, "phrase": "fundamental_aspect"}, {"score": 0.0041666157975446564, "phrase": "real-time_ordering"}, {"score": 0.003997891221012094, "phrase": "space_complexity"}, {"score": 0.003956784357357341, "phrase": "wait-free_implementations"}, {"score": 0.0038758293658651237, "phrase": "shared_read-write_registers"}, {"score": 0.0037769520261285872, "phrase": "n_processes"}, {"score": 0.0026570998719084153, "phrase": "anonymous_implementations"}, {"score": 0.0025100713447593773, "phrase": "unique_identifiers"}, {"score": 0.0024333239726872604, "phrase": "general_case"}, {"score": 0.0023834640793589435, "phrase": "anonymous_timestamp_implementations"}, {"score": 0.002358917661465133, "phrase": "n_registers"}, {"score": 0.0022283519468680475, "phrase": "lower_bound"}, {"score": 0.0021490449563443025, "phrase": "first_anonymous_timestamp_implementation"}, {"score": 0.0021049977753042253, "phrase": "finite_number"}], "paper_keywords": ["timestamps", " shared memory", " anonymous", " obstruction-free", " wait-free", " lower bounds"], "paper_abstract": "The timestamp problem captures a fundamental aspect of asynchronous distributed computing. It allows processes to label events throughout the system with timestamps that provide information about the real-time ordering of those events. We consider the space complexity of wait-free implementations of timestamps from shared read-write registers in a system of n processes. We prove an Omega(root n) lower bound on the number of registers required. If the timestamps are elements of a nowhere dense set, for example the integers, we prove a stronger, and tight, lower bound of n. However, if timestamps are not from a nowhere dense set, this bound can be beaten: we give an implementation that uses n - 1 (single-writer) registers. We also consider the special case of anonymous implementations, where processes are programmed identically and do not have unique identifiers. In contrast to the general case, we prove anonymous timestamp implementations require n registers. We also give an implementation to prove that this lower bound is tight. This is the first anonymous timestamp implementation that uses a finite number of registers.", "paper_title": "The space complexity of unbounded timestamps", "paper_id": "WOS:000257203300003"}