{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "genetic_programming"}, {"score": 0.013730156613618262, "phrase": "automatic_synthesis"}, {"score": 0.0046986841646790315, "phrase": "systematic_method"}, {"score": 0.004409304640026443, "phrase": "high-level_statement"}, {"score": 0.004178351419209898, "phrase": "computer_program"}, {"score": 0.003998380230709541, "phrase": "simulated_evolutionary_process"}, {"score": 0.0037519679864796906, "phrase": "high-return_human-competitive_machine_intelligence"}, {"score": 0.0036256123915754303, "phrase": "automated_invention_machine"}, {"score": 0.0034693659976716197, "phrase": "general_solution"}, {"score": 0.003319830633865628, "phrase": "parameterized_topology"}, {"score": 0.0031612033120065747, "phrase": "qualitatively_more_substantial_results"}, {"score": 0.003099888654615187, "phrase": "five_approximately_order-of-magnitude_increases"}, {"score": 0.0028662606272282926, "phrase": "recent_results"}, {"score": 0.002729246328390722, "phrase": "analog_electrical_circuits"}, {"score": 0.002344655708000408, "phrase": "chemical_reactions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Genetic programming", " Evolutionary computation", " Automated design", " Automated invention", " Patented inventions", " Controllers", " Analog circuits"], "paper_abstract": "Genetic programming is a systematic method for getting computers to automatically solve problems. Genetic programming starts from a high-level statement of what needs to be done and automatically creates a computer program to solve the problem by means of a simulated evolutionary process. The paper demonstrates that genetic programming (1) now routinely delivers high-return human-competitive machine intelligence; (2) is an automated invention machine; (3) can automatically create a general solution to a problem in the form of a parameterized topology and (4) has delivered a progression of qualitatively more substantial results in synchrony with five approximately order-of-magnitude increases in the expenditure of computer time. These points are illustrated by a group of recent results involving the automatic synthesis of the topology and sizing of analog electrical circuits, the automatic synthesis of placement and routing of circuits, and the automatic synthesis of controllers as well as references to work involving the automatic synthesis of antennas, networks of chemical reactions (metabolic pathways), genetic networks, mathematical algorithms, and protein classifiers. (C) 2008 Published by Elsevier Inc.", "paper_title": "Routine high-return human-competitive automated problem-solving by means of genetic programming", "paper_id": "WOS:000260712200003"}