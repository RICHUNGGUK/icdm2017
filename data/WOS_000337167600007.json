{"auto_keywords": [{"score": 0.04455074562181148, "phrase": "nand"}, {"score": 0.00481495049065317, "phrase": "lifetime-aware_progressive_programming"}, {"score": 0.004731638279336065, "phrase": "slc_nand_flash_memory_write_endurance"}, {"score": 0.004569293780076254, "phrase": "lifetime-aware_progressive_programming_concept"}, {"score": 0.004386887374401584, "phrase": "cell_nand"}, {"score": 0.004361428012479218, "phrase": "flash_memory"}, {"score": 0.004020066537823032, "phrase": "memory_cell_storage_noise_margin"}, {"score": 0.003950453462399077, "phrase": "sufficiently_strong_fault_tolerance"}, {"score": 0.0036411406244705557, "phrase": "relatively_large_cell_storage_noise_margin"}, {"score": 0.0034551632687788857, "phrase": "conventional_design_practice"}, {"score": 0.0032596049901888724, "phrase": "available_cell_storage_noise_margin"}, {"score": 0.003129317057177867, "phrase": "storage_levels"}, {"score": 0.002867348342846275, "phrase": "simple_progressive_programming_design_concept"}, {"score": 0.002566685388128598, "phrase": "approximate_nand_flash_memory_device_model"}, {"score": 0.002421291757425244, "phrase": "design_concept"}, {"score": 0.0022841153001549193, "phrase": "write_endurance"}, {"score": 0.0021672995161145276, "phrase": "average_programming_speed"}, {"score": 0.0021049977753042253, "phrase": "read_speed"}], "paper_keywords": ["NAND flash memory", " P/E cycling endurance", " progressive programming", " single-level per cell (SLC)"], "paper_abstract": "This paper advocates a lifetime-aware progressive programming concept to improve single-level per cell NAND flash memory write endurance. NAND flash memory program/erase (P/E) cycling gradually degrades memory cell storage noise margin, and sufficiently strong fault tolerance must be used to ensure the memory P/E cycling endurance. As a result, the relatively large cell storage noise margin in early memory lifetime is essentially wasted in conventional design practice. This paper proposes to always fully utilize the available cell storage noise margin by adaptively adjusting the number of storage levels per cell, and progressively use these levels to realize multiple 1-bit programming operations between two consecutive erase operations. This simple progressive programming design concept is realized by two different implementation strategies, which are discussed and compared in detail. On the basis of an approximate NAND flash memory device model, we carried out simulations to quantitatively evaluate this design concept. The results show that it can improve the write endurance by 35.9% and in the meanwhile improve the average programming speed by 12% without sacrificing read speed.", "paper_title": "Using Lifetime-Aware Progressive Programming to Improve SLC NAND Flash Memory Write Endurance", "paper_id": "WOS:000337167600007"}