{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asynchronous_circuits"}, {"score": 0.008507876749236934, "phrase": "prototype_tool"}, {"score": 0.004387225575447685, "phrase": "high-level_synthesis"}, {"score": 0.004108288481894523, "phrase": "one-to-one_mapping"}, {"score": 0.0039322149318145845, "phrase": "corresponding_circuit"}, {"score": 0.0037636590459094762, "phrase": "behavioral_synthesis"}, {"score": 0.0033916328188225843, "phrase": "automatic_design_space_exploration"}, {"score": 0.0033363396054797044, "phrase": "area_or_speed_constraints"}, {"score": 0.003228434077467506, "phrase": "asynchronous_implementation_template"}, {"score": 0.0031069334778456633, "phrase": "control_unit"}, {"score": 0.0030229485340586473, "phrase": "asynchronous_hardware_description_language"}, {"score": 0.0030064251340251196, "phrase": "balsa"}, {"score": 0.0029573932605287947, "phrase": "\"conventional\"_template_architecture"}, {"score": 0.002877438939246423, "phrase": "traditional_synchronous_synthesis_techniques"}, {"score": 0.0024815011359381692, "phrase": "balsa_framework"}, {"score": 0.0022980978400845144, "phrase": "example_circuits"}, {"score": 0.002260591903283384, "phrase": "main_contributions"}, {"score": 0.0021874023741762496, "phrase": "fundamental_idea"}, {"score": 0.0021516991383785985, "phrase": "template_architecture"}, {"score": 0.0021049977753042253, "phrase": "asynchronous_handshake_components"}], "paper_keywords": ["Asynchronous circuits", " behavioral synthesis"], "paper_abstract": "The current state-of-the art in high-level synthesis of asynchronous circuits is syntax directed translation, which performs a one-to-one mapping of an HDL-description into a corresponding circuit. This paper presents a method for behavioral synthesis of asynchronous circuits which builds on top of syntax directed translation, and which allows the designer to perform automatic design space exploration guided by area or speed constraints. This paper presents an asynchronous implementation template consisting of a data-path and a control unit and its implementation using the asynchronous hardware description language Balsa. This \"conventional\" template architecture allows us to adapt traditional synchronous synthesis techniques for resource sharing, scheduling, binding, etc., to the domain of asynchronous circuits. A prototype tool has been implemented on top of the Balsa framework, and the method is illustrated through the implementation of a set of example circuits. The main contributions of this paper are the fundamental idea, the template architecture and its implementation using asynchronous handshake components, and the implementation of a prototype tool.", "paper_title": "Behavioral Synthesis of Asynchronous Circuits Using Syntax Directed Translation as Backend", "paper_id": "WOS:000262778500008"}