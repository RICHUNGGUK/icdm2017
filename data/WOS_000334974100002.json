{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "edge-disjoint_triangle_packing"}, {"score": 0.0041001740903338834, "phrase": "k_edge-disjoint_triangles"}, {"score": 0.003916103155526159, "phrase": "etp"}, {"score": 0.0034118234596993836, "phrase": "maximal_triangle_packing"}, {"score": 0.003208999546225013, "phrase": "reduction_rules"}, {"score": 0.0029951555610569225, "phrase": "remaining_graph"}, {"score": 0.002860546817196148, "phrase": "kernel_size"}, {"score": 0.002731971103291716, "phrase": "natural_question"}, {"score": 0.0025694584194998335, "phrase": "optimal_vertex_kernel_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Triangle packing", " Kernelization", " Linear kernel", " Fixed-parameter tractable", " Graph algorithms"], "paper_abstract": "We study the kernelization of the EDGE-DISJOINT TRIANGLE PACKING (ETP) problem, in which we are asked to find k edge-disjoint triangles in an undirected graph. ETP is known to be fixed-parameter tractable with a 4k vertex kernel. The kernelization first finds a maximal triangle packing which contains at most 3k vertices, then the reduction rules are used to bound the size of the remaining graph. The constant in the kernel size is so small that a natural question arises: Could 4k be already the optimal vertex kernel size for this problem? In this paper, we answer the question negatively by deriving an improved 3.5k vertex kernel for the problem. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Towards optimal kernel for edge-disjoint triangle packing", "paper_id": "WOS:000334974100002"}