{"auto_keywords": [{"score": 0.04849105041601803, "phrase": "inner_classes"}, {"score": 0.00481495049065317, "phrase": "direct_superclasses"}, {"score": 0.004761263588349522, "phrase": "java"}, {"score": 0.004707913053935566, "phrase": "similar_languages"}, {"score": 0.004327196832280818, "phrase": "oriented_programming_languages"}, {"score": 0.0036759314172445934, "phrase": "serious_problem"}, {"score": 0.0035539019235553897, "phrase": "direct_superclass"}, {"score": 0.0029681091946289757, "phrase": "non-deterministic_algorithm"}, {"score": 0.0023035922232490106, "phrase": "complete_specification"}, {"score": 0.0022145052062614514, "phrase": "corresponding_parts"}, {"score": 0.0021896891011033105, "phrase": "java_language_specification"}, {"score": 0.0021288561076024844, "phrase": "uniquely_a_fragment"}, {"score": 0.0021049977753042253, "phrase": "java_semantics"}], "paper_keywords": ["Object oriented programming", " Inheritance", " Inner classes", " Direct superclass", " Static semantic analysis", " Static binding"], "paper_abstract": "Some object oriented programming languages allow inner classes. All of them admit inheritance. This combination of inner classes and inheritance is very fruitful however less known. On the other hand it creates a serious problem: how to determine the direct superclass of a given class C, i.e. the class which class C directly inherits from. For there may be several classes of the same name in one program. A specification of the problem and a non-deterministic algorithm are provided. We prove that the algorithm is correct w.r.t. the specification and complete, i.e. if the algorithm signals an error then no solution exists. We show that the specification itself has at most one solution, in other words, it is a complete specification. This proves also that the corresponding parts of Java Language Specification are consistent and define uniquely a fragment of Java semantics. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "On an algorithm determining direct superclasses in Java and similar languages with inner classes-Its correctness, completeness and uniqueness of solutions", "paper_id": "WOS:000264444400002"}