{"auto_keywords": [{"score": 0.0496439738720196, "phrase": "recursive_computations"}, {"score": 0.014427140572300217, "phrase": "mapreduce"}, {"score": 0.010364766882843334, "phrase": "gmr"}, {"score": 0.00481495049065317, "phrase": "shared_data"}, {"score": 0.004537525607322823, "phrase": "complex_computations"}, {"score": 0.004475798524102238, "phrase": "existing_higher_level_abstractions"}, {"score": 0.004374772914140018, "phrase": "dryad"}, {"score": 0.004237138632255772, "phrase": "wide_variety"}, {"score": 0.004141476915000558, "phrase": "artificial_intelligence"}, {"score": 0.004103817210338686, "phrase": "decision_tree_algorithms"}, {"score": 0.004066498558415824, "phrase": "association_rule_mining"}, {"score": 0.004029517895918228, "phrase": "recommender_systems"}, {"score": 0.0039928721865882, "phrase": "graph_algorithms"}, {"score": 0.003956558420993431, "phrase": "clustering_algorithms"}, {"score": 0.003920573616298175, "phrase": "compute_intensive_scientific_workflows"}, {"score": 0.0037284065559949064, "phrase": "new_challenges"}, {"score": 0.003660879039645457, "phrase": "programmer_expressibility"}, {"score": 0.0036275736378775757, "phrase": "runtime_performance"}, {"score": 0.0035781807623238905, "phrase": "iterative_and_recursive_computations"}, {"score": 0.003545625043276134, "phrase": "shared_communication_model"}, {"score": 0.003325852346387272, "phrase": "generate-map-reduce"}, {"score": 0.003119659433566212, "phrase": "new_generate_abstraction"}, {"score": 0.0030771609361092164, "phrase": "mapreduce_framework"}, {"score": 0.002953097497434808, "phrase": "iterative_jobs"}, {"score": 0.0028470123663391126, "phrase": "shared_data_structures"}, {"score": 0.0027322025124213566, "phrase": "complex_applications"}, {"score": 0.0026949679939994226, "phrase": "simulated_annealing"}, {"score": 0.002551022760887132, "phrase": "recursive_spawning"}, {"score": 0.002527788827701828, "phrase": "new_tasks"}, {"score": 0.002493333098814506, "phrase": "variable_degree"}, {"score": 0.0024481198073210567, "phrase": "gmr_runtime"}, {"score": 0.002403724423251419, "phrase": "common_data"}, {"score": 0.002360132221690264, "phrase": "memory_and_local_disks"}, {"score": 0.002254571365634257, "phrase": "significant_speedup"}, {"score": 0.002234031373581961, "phrase": "iterative_computations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["cloud computing", " MapReduce", " recursive computations", " A* search", " adaptive quadrature", " shared data structures"], "paper_abstract": "It is difficult to express the parallelism present in complex computations by using existing higher level abstractions such as MapReduce and Dryad. These computations include applications from wide variety of domains, like Artificial Intelligence, Decision Tree Algorithms, Association Rule Mining, Recommender Systems, Graph Algorithms, Clustering Algorithms, Compute Intensive Scientific Workflows, Optimization Algorithms, and so forth. Their execution graphs introduce new challenges in terms of programmer expressibility and runtime performance such as iterative and recursive computations, shared communication model, and so forth. We propose an extension to MapReduce, called Generate-Map-Reduce (GMR), targeted towards modeling these applications. GMR introduces a new Generate abstraction into the MapReduce framework that captures recursive computations. The runtime also supports iterative jobs and a distributed communication model by using shared data structures. We illustrate recursive computations with GMR by modeling complex applications such as simulated annealing, A* search, and adaptive quadrature computation that require recursive spawning of new tasks to handle variable degree of parallelism. GMR runtime supports caching of common data across iterations in memory and local disks. We illustrate how this caching helps in achieving significant speedup for iterative computations by modeling k-means clustering. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Generate-map-reduce: An extension to map-reduce to support shared data and recursive computations", "paper_id": "WOS:000329764200014"}