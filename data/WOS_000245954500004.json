{"auto_keywords": [{"score": 0.04407953898448545, "phrase": "feature_location"}, {"score": 0.013536464154783562, "phrase": "source_code"}, {"score": 0.00481495049065317, "phrase": "probabilistic_ranking"}, {"score": 0.004605748839642513, "phrase": "execution_scenarios"}, {"score": 0.004524624065803229, "phrase": "information_retrieval"}, {"score": 0.0040309035566691645, "phrase": "decision-making_problem"}, {"score": 0.0033442114331500407, "phrase": "different_experts"}, {"score": 0.0025605773834404253, "phrase": "latent_semantic_indexing"}, {"score": 0.0021620042653528846, "phrase": "mozilla_web_browser"}, {"score": 0.0021049977753042253, "phrase": "eclipse_integrated_development_environment"}], "paper_keywords": ["program understanding", " feature identification", " concept location", " dynamic and static analyses", " information retrieval", " Latent Semantic Indexing", " scenario-based probabilistic ranking", " open source software"], "paper_abstract": "This paper recasts the problem of feature location in source code as a decision-making problem in the presence of uncertainty. The solution to the problem is formulated as a combination of the opinions of different experts. The experts in this work are two existing techniques for feature location: a scenario-based probabilistic ranking of events and an information-retrieval-based technique that uses Latent Semantic Indexing. The combination of these two experts is empirically evaluated through several case studies, which use the source code of the Mozilla Web browser and the Eclipse integrated development environment. The results show that the combination of experts significantly improves the effectiveness of feature location as compared to each of the experts used independently.", "paper_title": "Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval", "paper_id": "WOS:000245954500004"}