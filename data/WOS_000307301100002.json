{"auto_keywords": [{"score": 0.04384309786385, "phrase": "tlm"}, {"score": 0.00481495049065317, "phrase": "uml_based_validation"}, {"score": 0.004748556604045108, "phrase": "compliance_checking"}, {"score": 0.0046184900568047565, "phrase": "soc_system_designers"}, {"score": 0.004523272849033429, "phrase": "systemc_based_transaction_level_modeling"}, {"score": 0.003991646181215783, "phrase": "virtual_prototyping"}, {"score": 0.0038822311096089307, "phrase": "soc_components"}, {"score": 0.0038286491141253584, "phrase": "different_abstraction_levels"}, {"score": 0.0036468482216440233, "phrase": "interoperability_rules"}, {"score": 0.003285725064532174, "phrase": "tlm_library"}, {"score": 0.003107935254560724, "phrase": "interoperability_errors"}, {"score": 0.002980916123365584, "phrase": "major_problem"}, {"score": 0.0028392545452904762, "phrase": "automatic_compliance_checking_techniques"}, {"score": 0.0025578967205807843, "phrase": "detailed_intercommunication_protocols"}, {"score": 0.002505054869094183, "phrase": "system_components"}, {"score": 0.0021947755130109696, "phrase": "efficient_uml_based_compliance_checking_technique"}], "paper_keywords": ["Transaction level modeling", " TLM compliance checking", " UML based validation"], "paper_abstract": "SoC system designers commonly employ SystemC based Transaction level modeling (TLM) for its early software development usage and its analysis capabilities. TLM helps in realizing a SoC using virtual prototyping by integration of SoC components at different abstraction levels. The TLM 2 standard introduces interoperability rules for the models that may have been developed independently. However, neither SystemC compiler nor TLM library supports checking of such rules and manually debugging interoperability errors in such models could be a major problem. This provides motivation for developing automatic compliance checking techniques which can detect and report such errors. As the models are refined to incorporate detailed intercommunication protocols among the system components, the need for compliance checking extends to these protocols as well. In this paper, we present an efficient UML based compliance checking technique for TLM 2 models which supports static, dynamic and protocol-specific rule checking.", "paper_title": "Exploiting UML based validation for compliance checking of TLM 2 based models", "paper_id": "WOS:000307301100002"}