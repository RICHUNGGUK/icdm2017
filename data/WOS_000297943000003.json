{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "huge_scientific_datasets"}, {"score": 0.004672953146379813, "phrase": "modern_scientific_experiments"}, {"score": 0.0044277810648955624, "phrase": "even_petabytes"}, {"score": 0.004220624516321415, "phrase": "large_numbers"}, {"score": 0.0041703614123283165, "phrase": "relatively_small_files"}, {"score": 0.003927848423072668, "phrase": "remote_collaborators"}, {"score": 0.0038810583785936505, "phrase": "computational_centers"}, {"score": 0.0038348235692738783, "phrase": "data_analysis"}, {"score": 0.0036993855514735746, "phrase": "high_performance"}, {"score": 0.0036553070575015344, "phrase": "strong_robustness"}, {"score": 0.0035687137873965684, "phrase": "simple_interface"}, {"score": 0.003361069456060196, "phrase": "data_transfer_framework"}, {"score": 0.0033011569787033297, "phrase": "high-performance_data_transfer_library"}, {"score": 0.002741091312632307, "phrase": "automatic_tuning_mechanisms"}, {"score": 0.0026126405272417783, "phrase": "concurrent_threads"}, {"score": 0.0024604876113911173, "phrase": "restart_mechanisms"}, {"score": 0.0022758279600841014, "phrase": "data_transfer_performance"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["data transfer", " data-intensive computing", " Internet", " e-science"], "paper_abstract": "Modern scientific experiments can generate hundreds of gigabytes to terabytes or even petabytes of data that may be maintained in large numbers of relatively small files. Frequently, these data must be disseminated to remote collaborators or computational centers for data analysis. Moving this dataset with high performance and strong robustness and providing a simple interface for users are challenging tasks. We present a data transfer framework comprising a high-performance data transfer library based on GridFTP, an extensible data scheduler with four data scheduling policies, and a GUI that allows users to transfer their dataset easily, reliably, and securely. This system incorporates automatic tuning mechanisms to select at runtime the number of concurrent threads to be used for transfers. Also included are restart mechanisms for handling client, network, and server failures. Experimental results indicate that our data transfer system can significantly improve data transfer performance and can recover well from failures. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Moving huge scientific datasets over the Internet", "paper_id": "WOS:000297943000003"}