{"auto_keywords": [{"score": 0.043035202886745394, "phrase": "knowledge-based_systems"}, {"score": 0.014561447637532473, "phrase": "domain_knowledge"}, {"score": 0.00481495049065317, "phrase": "reusable_problem_solverse"}, {"score": 0.004664983066310498, "phrase": "software_components"}, {"score": 0.004583686207645165, "phrase": "reusable_algorithms"}, {"score": 0.00440976345264104, "phrase": "intelligent_application_systems"}, {"score": 0.004242411872706126, "phrase": "principled_methods"}, {"score": 0.0037906837773782, "phrase": "intuitive_appeal"}, {"score": 0.003737697279708501, "phrase": "conceptual_building_blocks"}, {"score": 0.0035579889785989738, "phrase": "widely_available_tools"}, {"score": 0.003459191419478298, "phrase": "public_libraries"}, {"score": 0.0032467792804296036, "phrase": "widespread_adoptions"}, {"score": 0.003223995503078124, "phrase": "psm_techniques"}, {"score": 0.0030153435879168634, "phrase": "psm_research"}, {"score": 0.002900756392266265, "phrase": "task-method_decomposition_process"}, {"score": 0.0028201570908224166, "phrase": "knowledge-based_tasks"}, {"score": 0.0027806988302728633, "phrase": "powerful_abstraction"}, {"score": 0.002732149335827768, "phrase": "analytic_methods"}, {"score": 0.002628295539850913, "phrase": "conceptual_modeling"}, {"score": 0.0025915147359879616, "phrase": "software_engineering_challenges"}, {"score": 0.0023315400785212785, "phrase": "widespread_use"}, {"score": 0.0023151639346874883, "phrase": "psm-based_systems"}, {"score": 0.002258745901862197, "phrase": "recent_interest"}, {"score": 0.0021882194836465936, "phrase": "comprehensive_domain_ontologies"}, {"score": 0.0021652024032375833, "phrase": "robust_ontology-authoring_tools"}, {"score": 0.002134888329742086, "phrase": "new_opportunities"}, {"score": 0.0021049977753042253, "phrase": "psm_approach"}], "paper_keywords": ["Knowledge-Based Systems", " Problem Solving Methods", " Reusable Problem Solvers", " Software-Engineering Challenges", " Task-Method Decomposition Process"], "paper_abstract": "Problem solving methods (PSMs) are software components that represent and encode reusable algorithms They call be combined with representations of domain knowledge to produce intelligent application systems. A goal of research on PSMs is to provide principled methods and tools for comprising and reusing algorithm in knowledge-based systems The ultimate objective is to produce libraries of methods that can be easily adapted for use in these systems. Despite the intuitive appeal of PSMs as conceptual building blocks, in practice, these goals are largely unmet. There are no widely available tools for building applications using PSMs and no public libraries of PSMs available for reuse. This paper analyzes some of the reasons for the lack of widespread adoptions of PSM techniques and illustrate our analysis by describing our experiences developing a complex, high-throughput software system based on PSM principles We conclude that many fundamental principles in PSM research are useful for building knowledge-based systems. In particular, the task-method decomposition process, which provides a means for structuring knowledge-based tasks, is a powerful abstraction for building systems of analytic methods. However, despite the power of PSMs in the conceptual modeling of knowledge-based systems. software engineering challenges have been seriously underestimated. The complexity of integrating control of knowledge modeled by developers using PSMs with the domain knowledge that they model using ontologies creates a barrier to widespread use of PSM-based systems. Nevertheless, the surge of recent interest in ontologies has led to the production of comprehensive domain ontologies and of robust ontology-authoring tools These developments present new opportunities to leverage the PSM approach.", "paper_title": "Software-engineering challenges of building and deploying reusable problem solverse", "paper_id": "WOS:000271131600003"}