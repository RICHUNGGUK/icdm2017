{"auto_keywords": [{"score": 0.04975317258245106, "phrase": "proper_interval_vertex_deletion"}, {"score": 0.00481495049065317, "phrase": "np-complete_problem"}, {"score": 0.004590217765551337, "phrase": "input_graph"}, {"score": 0.004527947981009528, "phrase": "n_vertices"}, {"score": 0.004287166497171827, "phrase": "proper_interval_graph"}, {"score": 0.0041149859710361125, "phrase": "van_bevern"}, {"score": 0.0038170129089059013, "phrase": "computer_science"}, {"score": 0.0030879936732269293, "phrase": "time_algorithm"}, {"score": 0.002903628734069691, "phrase": "new_structural_result"}, {"score": 0.002825251837733693, "phrase": "connected_component"}, {"score": 0.002497862210672172, "phrase": "proper_circular_arc_graph"}, {"score": 0.0024138345020219333, "phrase": "simple_greedy_algorithm"}], "paper_keywords": ["Proper interval graphs", " Proper circular arc graphs", " Vertex deletion", " FPT algorithms"], "paper_abstract": "The NP-complete problem Proper Interval Vertex Deletion is to decide whether an input graph on n vertices and m edges can be turned into a proper interval graph by deleting at most k vertices. Van Bevern et al. (In: Proceedings WG 2010. Lecture notes in computer science, vol. 6410, pp. 232-243, 2010) showed that this problem can be solved in time. We improve this result by presenting an time algorithm for Proper Interval Vertex Deletion. Our fixed-parameter algorithm is based on a new structural result stating that every connected component of a {claw,net,tent,C (4),C (5),C (6)}-free graph is a proper circular arc graph, combined with a simple greedy algorithm that solves Proper Interval Vertex Deletion on {claw,net,tent,C (4),C (5),C (6)}-free graphs in time. Our approach also yields a polynomial-time 6-approximation algorithm for the optimization variant of Proper Interval Vertex Deletion.", "paper_title": "Proper Interval Vertex Deletion", "paper_id": "WOS:000314692200008"}