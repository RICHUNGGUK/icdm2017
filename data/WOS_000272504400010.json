{"auto_keywords": [{"score": 0.04702899831726304, "phrase": "strategy_annotations"}, {"score": 0.01375902662201537, "phrase": "natural_numbers"}, {"score": 0.011854311699562858, "phrase": "obj-iike_languages"}, {"score": 0.009897603715116058, "phrase": "on-demand_strategy_annotations"}, {"score": 0.00481495049065317, "phrase": "demand_strategy"}, {"score": 0.004666599737349241, "phrase": "obj"}, {"score": 0.004579787390603073, "phrase": "maude"}, {"score": 0.004328856373663559, "phrase": "syntactically"}, {"score": 0.004104456271230213, "phrase": "function_symbols"}, {"score": 0.003977907771686101, "phrase": "corresponding_symbol"}, {"score": 0.003940706575253453, "phrase": "positive_index"}, {"score": 0.003831169445079928, "phrase": "negative_index"}, {"score": 0.0037130155038449554, "phrase": "on-demand_indices"}, {"score": 0.0033169383771576343, "phrase": "fully_general_annotations"}, {"score": 0.0032858981413454802, "phrase": "positive_and_negative_indices"}, {"score": 0.003047776993499616, "phrase": "current_proposals"}, {"score": 0.0028895932204402986, "phrase": "accurate_track"}, {"score": 0.0028446460307503343, "phrase": "evaluation_sequences"}, {"score": 0.0027741761880779535, "phrase": "suitable_extension"}, {"score": 0.002748201169075936, "phrase": "evaluation_strategy"}, {"score": 0.00260560290356648, "phrase": "ode"}, {"score": 0.0025569530630374995, "phrase": "previous_proposals"}, {"score": 0.002525074485615743, "phrase": "better_computational_properties"}, {"score": 0.002298288831092204, "phrase": "new_evaluation_strategy"}, {"score": 0.0022767594422780004, "phrase": "standard_rewriting_techniques"}, {"score": 0.0022133711375320244, "phrase": "new_strategy"}, {"score": 0.0021857667493036786, "phrase": "encouraging_experiments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Declarative programming", " Demandedness", " Lazy evaluation", " OBJ", " On-demand strategy annotations"], "paper_abstract": "in functional languages such as OBJ*, CafeOBJ, and Maude, symbols are given strategy annotations that specify (the order in) which subterms are evaluated. Syntactically, strategy annotations are given either as lists of natural numbers or as lists of integers associated to function symbols whose (absolute) values refer to the arguments of the corresponding symbol. A positive index prescribes the evaluation of an argument whereas a negative index means \"evaluation on-demand\". These on-demand indices have been proposed to support laziness in OBJ-Iike languages. While strategy annotations containing only natural numbers have been implemented and investigated to some extent (regarding, for example, termination, confluence, and completeness), fully general annotations (including positive and negative indices) have been disappointingly under-explored to date. In this paper, we first point out a number of problems of current proposals for handling on-demand strategy annotations. Then, we propose a solution to these problems by keeping an accurate track of annotations along the evaluation sequences. We formalize this solution as a suitable extension of the evaluation strategy of OBJ-Iike languages (which only consider annotations given as natural numbers) to on-demand strategy annotations. Our on-demand evaluation strategy (ODE) overcomes the drawbacks of previous proposals and also has better computational properties. For instance, we show how to use this strategy for computing (head-)normal forms. We also introduce a transformation which allows us to prove the termination of the new evaluation strategy by using standard rewriting techniques. Finally, we present two interpreters of the new strategy together with some encouraging experiments which demonstrate the usefulness of our approach. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "On-demand strategy annotations revisited: An improved on-demand evaluation strategy", "paper_id": "WOS:000272504400010"}