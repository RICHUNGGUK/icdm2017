{"auto_keywords": [{"score": 0.047547044341195395, "phrase": "group_communication"}, {"score": 0.00481495049065317, "phrase": "grid_programming"}, {"score": 0.004643839937761046, "phrase": "object-oriented_mechanism"}, {"score": 0.004505881071218599, "phrase": "large_scale_grids"}, {"score": 0.004372002674739612, "phrase": "crucial_feature"}, {"score": 0.004267757384195032, "phrase": "grid_computing"}, {"score": 0.004191200981137508, "phrase": "previous_work"}, {"score": 0.004140924670517666, "phrase": "collective_communications"}, {"score": 0.004017846065981193, "phrase": "dedicated_interfaces"}, {"score": 0.0037825134619339537, "phrase": "group_communications"}, {"score": 0.003714629047818465, "phrase": "standard_public_methods"}, {"score": 0.0035181731203867456, "phrase": "special_object_factory"}, {"score": 0.0034550163444256386, "phrase": "object_factory"}, {"score": 0.0032920678776655783, "phrase": "\"parallel_processing_enhanced\"_implementation"}, {"score": 0.003155784719225786, "phrase": "original_class"}, {"score": 0.002899861600151726, "phrase": "classical_spmd_programming_paradigm"}, {"score": 0.0026326249204932733, "phrase": "oospmd"}, {"score": 0.0025388705701873075, "phrase": "transparent_remote_method_invocations"}, {"score": 0.0024932498388507084, "phrase": "custom_interfaces"}, {"score": 0.002361236012575149, "phrase": "component_models"}, {"score": 0.0023328599525181707, "phrase": "advanced_composition"}, {"score": 0.002304824112812496, "phrase": "parallel_building_blocks"}, {"score": 0.0022633993976138387, "phrase": "typed_group_pattern"}, {"score": 0.0021049977753042253, "phrase": "programming_applications"}], "paper_keywords": ["Java middleware", " Group communication", " object-oriented parallelism", " SPMD programming"], "paper_abstract": "This article presents an object-oriented mechanism to achieve group communication in large scale grids. Group communication is a crucial feature for high-performance and grid computing. While previous work on collective communications imposed the use of dedicated interfaces, we propose a scheme where one can initiate group communications using the standard public methods of the class by instantiating objects through a special object factory. The object factory utilizes casting and introspection to construct a \"parallel processing enhanced\" implementation of the object which matches the original class' interface. This mechanism is then extended in an evolution of the classical SPMD programming paradigm into the domain of clusters and grids named \"Object-Oriented SPMD\". OOSPMD provides interprocess (inter-object) communications via transparent remote method invocations rather than custom interfaces. Such typed group communication constitutes a basis for improvement of component models allowing advanced composition of parallel building blocks. The typed group pattern leads to an interesting, uniform, and complete model for programming applications intended to be run on clusters and grids.", "paper_title": "Asynchronous typed object groups for grid programming", "paper_id": "WOS:000249814500003"}