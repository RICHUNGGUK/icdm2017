{"auto_keywords": [{"score": 0.042204995264092014, "phrase": "fault_correction_process"}, {"score": 0.041671336282502434, "phrase": "component_software"}, {"score": 0.040108824253493075, "phrase": "instantaneous_and_perfect_debugging"}, {"score": 0.00481495049065317, "phrase": "component_software_reliability"}, {"score": 0.004689321062844586, "phrase": "growing_size"}, {"score": 0.004566954456805558, "phrase": "software_applications"}, {"score": 0.004360412703519539, "phrase": "component_software_reliability_analysis"}, {"score": 0.004163172790791119, "phrase": "analytical_tractability"}, {"score": 0.0041084684278314305, "phrase": "traditional_approaches"}, {"score": 0.003368816076401138, "phrase": "realistic_estimates"}, {"score": 0.0029903851294825023, "phrase": "fault_repair_policy"}, {"score": 0.002798780784517325, "phrase": "integration_testing"}, {"score": 0.0026543514413663893, "phrase": "hybrid_infinite_server"}, {"score": 0.002451527111936163, "phrase": "imperfect_debugging"}, {"score": 0.002387415084371473, "phrase": "fault_detection_process"}, {"score": 0.0023559890904375504, "phrase": "repair_policy"}, {"score": 0.0022196020509093694, "phrase": "component_software_reliability_growth"}, {"score": 0.0021049977753042253, "phrase": "evaluation_experiment"}], "paper_keywords": ["Software Reliability", " Component Software", " Queueing Theory"], "paper_abstract": "With the growing size and complexity of software applications, research in the area of component software reliability analysis has gained prominence. To ensure analytical tractability, traditional approaches usually ignore fault correction process of component software based on simplifying assumptions of instantaneous and perfect debugging. As a result, the estimates obtained from these models tend to be optimistic. To obtain realistic estimates, it is desirable that the assumptions of instantaneous and perfect debugging be amended. In this paper we discuss fault repair policy according to which debugging to various components may be conducted in integration testing of component software. We then propose a hybrid infinite server queueing model to describe fault correction process with consideration of the possibility of imperfect debugging. Based on fault detection process and repair policy, the model can be resolved to represent component software reliability growth during integration testing. Finally, the evaluation experiment shows the effectiveness of the model.", "paper_title": "A HYBRID QUEUEING MODEL WITH IMPERFECT DEBUGGING FOR COMPONENT SOFTWARE RELIABILITY ANALYSIS", "paper_id": "WOS:000294522100008"}