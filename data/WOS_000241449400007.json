{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "attack_graphs"}, {"score": 0.04642847898086282, "phrase": "attack_graph"}, {"score": 0.00699944405099114, "phrase": "system_administrator"}, {"score": 0.004709434052130218, "phrase": "computer_systems"}, {"score": 0.004406496547539966, "phrase": "general_formalism"}, {"score": 0.004351033214640434, "phrase": "security_vulnerabilities"}, {"score": 0.004269138804116093, "phrase": "possible_sequences"}, {"score": 0.004122964978180509, "phrase": "specific_goal"}, {"score": 0.004019797503157808, "phrase": "off-the-shelf_model-checking_tools"}, {"score": 0.00382111305629386, "phrase": "human_ability"}, {"score": 0.003643741834170836, "phrase": "relevant_portions"}, {"score": 0.0035077705328504546, "phrase": "ranking_scheme"}, {"score": 0.003199687131875466, "phrase": "ranked_attack_graph"}, {"score": 0.0031294568052050186, "phrase": "relevant_subgraphs"}, {"score": 0.003051073364818384, "phrase": "security_measures"}, {"score": 0.0025954008219792337, "phrase": "first_algorithm"}, {"score": 0.00255455751702188, "phrase": "pagerank_algorithm"}, {"score": 0.00253039783200332, "phrase": "google"}, {"score": 0.0024905375922547918, "phrase": "web_pages"}, {"score": 0.0023522840272302507, "phrase": "large_sized_graphs"}, {"score": 0.0022643957465558287, "phrase": "second_algorithm"}, {"score": 0.0022500695985527668, "phrase": "individual_states"}, {"score": 0.0022216880365475418, "phrase": "reachability_probability"}, {"score": 0.0021797840569206697, "phrase": "random_simulation"}, {"score": 0.0021049977753042253, "phrase": "ranking_techniques"}], "paper_keywords": ["Google PageRank", " Attack Model", " Attack Graph", " Model Checking", " security metric"], "paper_abstract": "A majority of attacks on computer systems result from a combination of vulnerabilities exploited by an intruder to break into the system. An Attack Graph is a general formalism used to model security vulnerabilities of a system and all possible sequences of exploits which an intruder can use to achieve a specific goal. Attack Graphs can be constructed automatically using off-the-shelf model-checking tools. However, for real systems, the size and complexity of Attack Graphs greatly exceeds human ability to visualize, understand and analyze. Therefore, it is useful to identify relevant portions of an Attack Graph. To achieve this, we propose a ranking scheme for the states of an Attack Graph. Rank of a state shows its importance based on factors like the probability of an intruder reaching that state. Given a Ranked Attack Graph, the system administrator can concentrate on relevant subgraphs to figure out how to start deploying security measures. We also define a metric of security of the system based on ranks which the system administrator can use to compare Attack Graphs and determine the effectiveness of various defense measures. We present two algorithms to rank states of an Attack Graph based on the probability of an attacker reaching those states. The first algorithm is similar to the PageRank algorithm used by Google to measure importance of web pages on the World Wide Web. It is flexible enough to model a variety of situations, efficiently computable for large sized graphs and offers the possibility of approximations using graph partitioning. The second algorithm ranks individual states based on the reachability probability of an attacker in a random simulation. Finally, we give examples of an application of ranking techniques to multi-stage cyber attacks.", "paper_title": "Ranking Attack Graphs", "paper_id": "WOS:000241449400007"}