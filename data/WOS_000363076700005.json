{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "armstrong_tables"}, {"score": 0.008086116993093135, "phrase": "sql_constraints"}, {"score": 0.005910630888947896, "phrase": "domain_semantics"}, {"score": 0.004653339900995785, "phrase": "semantically_meaningful_sql_constraints"}, {"score": 0.004590217765551337, "phrase": "sql_schema_designs"}, {"score": 0.004405935925922321, "phrase": "uml"}, {"score": 0.004346139434813299, "phrase": "entity-relationship_models"}, {"score": 0.004287166497171827, "phrase": "description_logics"}, {"score": 0.004200197763119297, "phrase": "relational_normalization"}, {"score": 0.0040040425282442125, "phrase": "sample_data"}, {"score": 0.0037395458116642306, "phrase": "schema_designs"}, {"score": 0.0035892794633115227, "phrase": "abstract_standard-compliant_encoding"}, {"score": 0.003516417950483685, "phrase": "designers'_perception"}, {"score": 0.003375087185182269, "phrase": "application_domain"}, {"score": 0.002825251837733693, "phrase": "new_empirical_measures"}, {"score": 0.0027489904437492676, "phrase": "armstrong"}, {"score": 0.0027116246112603875, "phrase": "help_design_teams"}, {"score": 0.0026384167183586015, "phrase": "extensive_experiments"}, {"score": 0.0023167153974120104, "phrase": "existing_schema_design_methodologies"}, {"score": 0.0022696277881969896, "phrase": "quality_schemata"}, {"score": 0.002238767763626708, "phrase": "process_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Armstrong database", " Database semantics", " Empirical studies", " Management of integrity constraints", " Requirements engineering"], "paper_abstract": "SQL schema designs result from methodologies such as UML, Entity-Relationship models, description logics, or relational normalization. Independently of the methodology, sample data is promoted by academia and industry to consolidate the schema designs produced. SQL constraints are an abstract standard-compliant encoding of the designers' perception about the semantics of an application domain. Armstrong tables can visualize SQL constraints concisely, in the sense that they satisfy all constraints perceived meaningful and violate all constraints perceived meaningless. Using new empirical measures we investigate how Armstrong tables help design teams recognize domain semantics. Extensive experiments confirm that users of Armstrong tables are likely to recognize domain semantics they would overlook otherwise. Armstrong tables therefore complement existing schema design methodologies in producing quality schemata that process data efficiently. (C) 2015 Published by Elsevier B.V.", "paper_title": "Empirical evidence for the usefulness of Armstrong tables in the acquisition of semantically meaningful SQL constraints", "paper_id": "WOS:000363076700005"}