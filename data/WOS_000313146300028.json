{"auto_keywords": [{"score": 0.0423811058705983, "phrase": "soa"}, {"score": 0.005519337402664439, "phrase": "reusable_service"}, {"score": 0.00481495049065317, "phrase": "product-line"}, {"score": 0.004794785022441359, "phrase": "service-oriented_applications"}, {"score": 0.004779406424192843, "phrase": "software_product-line_engineering"}, {"score": 0.004605565335682916, "phrase": "component-based_software_development"}, {"score": 0.0044052452943364314, "phrase": "reusable_core_assets"}, {"score": 0.004244955499652296, "phrase": "new_software"}, {"score": 0.004198010835867604, "phrase": "core_assets"}, {"score": 0.0040904740665330805, "phrase": "service-oriented_environments"}, {"score": 0.003985680946956402, "phrase": "flexible_reuse_environments"}, {"score": 0.003941592232278979, "phrase": "pre-developed_component_structure"}, {"score": 0.0037421829222825964, "phrase": "heterogeneous_environments"}, {"score": 0.00370077772049505, "phrase": "core_asset"}, {"score": 0.0030856268625708695, "phrase": "current_research"}, {"score": 0.002951220859491642, "phrase": "soa_environments"}, {"score": 0.002822652835367827, "phrase": "product-line_engineering"}, {"score": 0.002572463625403536, "phrase": "supporting_environment"}, {"score": 0.002543967677678384, "phrase": "proposed_mechanism"}, {"score": 0.002344398099179438, "phrase": "new_services"}, {"score": 0.0022009497295481678, "phrase": "systematic_reuse"}, {"score": 0.0021365087453258263, "phrase": "pre-developed_reusable_service"}], "paper_keywords": ["SOA", " service reuse", " service variability", " UDDI", " service oriented development"], "paper_abstract": "Software product-line engineering is the successful reuse of technology when applied to component-based software development. The main concept and structure of this technology is developing reusable core assets by applying commonality and variability, and then developing new software reusing these core assets. Recently, the emergence of service-oriented environments, called SOA, has provided flexible reuse environments by reusing pre-developed component structure as service units; this is platform-independent and can integrate into heterogeneous environments. The core asset of an SOA is the service. Therefore, we can increase the reusability of an SOA by combining it with the concept of a product-line. These days, there exists research that combines SOA and product-lines, taking into account reusability. However, current research does not consider the interaction between the provider and consumer in SOA environments. Furthermore, this research tends to focus on more fragmentary aspects of product-line engineering, such as modeling and proposing variability in services. In this paper, we propose a mechanism named 2-Level SOA, including a supporting environment. This proposed mechanism deploys and manages the reusable service. In addition, by reusing and customizing this reusable service, we can develop and generate new services. Our proposed approach provides a structure to maximize the flexibility of SOA, develops services that consider systematic reuse, and constructs service-oriented applications by reusing this pre-developed reusable service. Therefore, our approach can increase both efficiency and productivity when developing service-oriented applications.", "paper_title": "Two-Level Service-Oriented Architecture Based on Product-Line", "paper_id": "WOS:000313146300028"}