{"auto_keywords": [{"score": 0.03437887121509479, "phrase": "ec"}, {"score": 0.00481495049065317, "phrase": "web_services_composition"}, {"score": 0.004545240514015278, "phrase": "bounded_model-checking_based_approach"}, {"score": 0.004401955895933783, "phrase": "declarative_web_services_composition"}, {"score": 0.004050116768809519, "phrase": "bounded_model-checking_approach"}, {"score": 0.0038973170902076707, "phrase": "declarative_processes"}, {"score": 0.003450329424861292, "phrase": "composition_process"}, {"score": 0.0033845816848753073, "phrase": "proposed_approach"}, {"score": 0.003298856341173034, "phrase": "event_calculus"}, {"score": 0.0031743093007496736, "phrase": "modeling_formalism"}, {"score": 0.003015508235745547, "phrase": "sat_encoding_process"}, {"score": 0.0028463059289874637, "phrase": "also_formalism"}, {"score": 0.0027741761880779535, "phrase": "highly_expressive_approach"}, {"score": 0.002703869368554536, "phrase": "composition_model"}, {"score": 0.002601727192945944, "phrase": "verification_properties"}, {"score": 0.0025034338848015166, "phrase": "conflict_clauses"}, {"score": 0.0024399717841513354, "phrase": "sat_solver"}, {"score": 0.002347775213789611, "phrase": "complex_processes"}, {"score": 0.0023178219772486868, "phrase": "verification_requirements"}, {"score": 0.002244596395352896, "phrase": "filtering_criterion"}, {"score": 0.0022159566043745724, "phrase": "defined_patterns"}, {"score": 0.0021049977753042253, "phrase": "process_verification"}], "paper_keywords": ["Declarative", " Event-Calculus", " Model-Checking", " Verification", " Web Services Composition"], "paper_abstract": "In this paper, we propose a bounded model-checking based approach for the verification of declarative Web services composition processes using satisfiability solving (SAT). The need for the bounded model-checking approach stems from the nature of declarative processes as they are defined by only specifying the constraints that mark the boundary of the solution to the composition process. The proposed approach relies on using Event Calculus (EC) as the modeling formalism with a sound and complete EC to SAT encoding process. The use of EC as the modeling also formalism allows for a highly expressive approach for both the specification of composition model and for the specification of verification properties. Furthermore, as the conflict clauses returned by the SAT solver can be significantly large for complex processes and verification requirements, we propose a filtering criterion and defined patterns for identifying the clauses of interest for process verification.", "paper_title": "A Bounded Model Checking Approach for the Verification of Web Services Composition", "paper_id": "WOS:000339055700004"}