{"auto_keywords": [{"score": 0.041451887954457124, "phrase": "topological_methods"}, {"score": 0.00481495049065317, "phrase": "distributed_merge_trees"}, {"score": 0.004769958800452922, "phrase": "improved_simulations"}, {"score": 0.004201991568145053, "phrase": "significant_features"}, {"score": 0.003990385737207714, "phrase": "subsequent_analysis"}, {"score": 0.003789395499639015, "phrase": "robust_and_general_feature_definitions"}, {"score": 0.003684048704119722, "phrase": "serial_computational_power"}, {"score": 0.003615443704375908, "phrase": "data_analysis"}, {"score": 0.00351491577968631, "phrase": "massively_parallel_machines"}, {"score": 0.0034332736827447654, "phrase": "computational_demand"}, {"score": 0.0033851984021896287, "phrase": "complex_datasets"}, {"score": 0.0032602525602322832, "phrase": "computer_architectures"}, {"score": 0.003110515172439764, "phrase": "global_information"}, {"score": 0.0028312983170567948, "phrase": "distributed_representation"}, {"score": 0.0027916287357898544, "phrase": "merge_tree"}, {"score": 0.002726740692380339, "phrase": "global_tree"}, {"score": 0.002688532127821979, "phrase": "single_processor"}, {"score": 0.002626034130205569, "phrase": "subsequent_queries"}, {"score": 0.002552946390854313, "phrase": "increasing_number"}, {"score": 0.002447101794397243, "phrase": "new_data_structure"}, {"score": 0.0023678143146455017, "phrase": "multiple_shared-memory_cores"}, {"score": 0.002291089893848235, "phrase": "single_node"}, {"score": 0.0021049977753042253, "phrase": "future_challenges"}], "paper_keywords": ["topological data analysis", " feature extraction", " merge tree computation", " parallelization", " hybrid parallelization approaches"], "paper_abstract": "Improved simulations and sensors are producing datasets whose increasing complexity exhausts our ability to visualize and comprehend them directly. To cope with this problem, we can detect and extract significant features in the data and use them as the basis for subsequent analysis. Topological methods are valuable in this context because they provide robust and general feature definitions. As the growth of serial computational power has stalled, data analysis is becoming increasingly dependent on massively parallel machines. To satisfy the computational demand created by complex datasets, algorithms need to effectively utilize these computer architectures. The main strength of topological methods, their emphasis on global information, turns into an obstacle during parallelization. We present two approaches to alleviate this problem. We develop a distributed representation of the merge tree that avoids computing the global tree on a single processor and lets us parallelize subsequent queries. To account for the increasing number of cores per processor, we develop a new data structure that lets us take advantage of multiple shared-memory cores to parallelize the work on a single node. Finally, we present experiments that illustrate the strengths of our approach as well as help identify future challenges.", "paper_title": "Distributed Merge Trees", "paper_id": "WOS:000324158900009"}