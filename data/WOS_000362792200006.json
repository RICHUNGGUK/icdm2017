{"auto_keywords": [{"score": 0.04127853893061473, "phrase": "coretsar"}, {"score": 0.003594369823549604, "phrase": "parallel-loop_regions"}, {"score": 0.0030278017562213265, "phrase": "performance_improvements"}, {"score": 0.002878785759716458, "phrase": "current_state-of-the-art_heterogeneous_task_scheduler"}, {"score": 0.0026025364957906762, "phrase": "gpu"}, {"score": 0.0023053339328456234, "phrase": "robust_ability"}, {"score": 0.0021049977753042253, "phrase": "underlying_system_configurations"}], "paper_keywords": ["Heterogeneous", " OpenMP", " OpenACC", " GPU", " coscheduling"], "paper_abstract": "Heterogeneity continues to increase at all levels of computing, with the rise of accelerators such as GPUs, FPGAs, and other co-processors into everything from desktops to supercomputers. As a consequence, efficiently managing such disparate resources has become increasingly complex. CoreTSAR seeks to reduce this complexity by adaptively worksharing parallel-loop regions across compute resources without requiring any transformation of the code within the loop. Our results show performance improvements of up to three-fold over a current state-of-the-art heterogeneous task scheduler as well as linear performance scaling from a single GPU to four GPUs for many codes. In addition, CoreTSAR demonstrates a robust ability to adapt to both a variety of workloads and underlying system configurations.", "paper_title": "CoreTSAR: Core Task-Size Adapting Runtime", "paper_id": "WOS:000362792200006"}