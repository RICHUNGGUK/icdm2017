{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "event-recording_automata"}, {"score": 0.04071777520893947, "phrase": "timed_systems"}, {"score": 0.035340830246983104, "phrase": "deterministic_event-recording_automata"}, {"score": 0.004756521061849989, "phrase": "regular_inference"}, {"score": 0.0046987973264610685, "phrase": "regular_language"}, {"score": 0.004566805735863274, "phrase": "finite_set"}, {"score": 0.004529776351030488, "phrase": "membership_queries"}, {"score": 0.004108066884382925, "phrase": "dana_angluin"}, {"score": 0.004008897491380646, "phrase": "almost_no_extensions"}, {"score": 0.003817655499320344, "phrase": "angluin's_algorithm"}, {"score": 0.0037866774001097596, "phrase": "on-line_learning"}, {"score": 0.0036207206487324506, "phrase": "timed_automata"}, {"score": 0.0035477010181860376, "phrase": "arbitrary_number"}, {"score": 0.0023310544011985253, "phrase": "learning_algorithm"}, {"score": 0.0023026973099101876, "phrase": "full_class"}, {"score": 0.0021571717917276724, "phrase": "region_graph"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model inference", " Model learning", " Timed systems"], "paper_abstract": "In regular inference, a regular language is inferred from answers to a finite set of membership queries, each of which asks whether the language contains a certain word. One of the most well-known regular inference algorithms is the L* algorithm due to Dana Angluin. However, there are almost no extensions of these algorithms to the setting of timed systems. We extend Angluin's algorithm for on-line learning of regular languages to the setting of timed systems. Since timed automata can freely use an arbitrary number of clocks, we restrict our attention to systems that can be described by deterministic event-recording automata (DERAs). We present three algorithms, TL(sg)*, TL(nsg)* and TL(s)*, for inference of DERAs. In TL(sg)* and TL(nsg)*, we further restrict event-recording automata to be event-deterministic in the sense that each state has at most one outgoing transition per action; learning such an automaton becomes significantly more tractable. The algorithm TL(nsg)* builds on TL(sg)*, by attempts to construct a smaller (in number of locations) automaton. Finally, TL(s)* is a learning algorithm for a full class of deterministic event-recording automata, which infers a so called simple DERA, which is similar in spirit to the region graph. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Learning of event-recording automata", "paper_id": "WOS:000283695700001"}