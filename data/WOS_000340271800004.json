{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimization_algorithms"}, {"score": 0.048433181540646186, "phrase": "traveling_salesman_problem"}, {"score": 0.004548939310612501, "phrase": "experimentation_procedure"}, {"score": 0.00407781620412982, "phrase": "algorithm's_performance"}, {"score": 0.00397217701571219, "phrase": "algorithm's_progress"}, {"score": 0.0038692638652494697, "phrase": "performance_curves"}, {"score": 0.003545024951402821, "phrase": "performance_metric"}, {"score": 0.003468287913322255, "phrase": "different_metrics"}, {"score": 0.0033636292024305406, "phrase": "global_ranking"}, {"score": 0.0032908057622663732, "phrase": "quick_overview"}, {"score": 0.0031498398446368025, "phrase": "open_source_software_framework"}, {"score": 0.0030414140732789186, "phrase": "experimental_procedure"}, {"score": 0.0030017332288341126, "phrase": "tsp."}, {"score": 0.002898378776839434, "phrase": "tsp_solvers"}, {"score": 0.002737960968372391, "phrase": "distributed_fashion"}, {"score": 0.00266693888510356, "phrase": "evaluator_component"}, {"score": 0.0026091594819333654, "phrase": "proposed_evaluation_process"}, {"score": 0.0025750928944698673, "phrase": "detailed_reports"}, {"score": 0.002475532161577715, "phrase": "tsp_suite"}, {"score": 0.0023798115577749225, "phrase": "large_set"}, {"score": 0.002359046870732839, "phrase": "baseline_data"}, {"score": 0.0022678201262721323, "phrase": "research_community"}, {"score": 0.0022089663761854657, "phrase": "tested_pure_global_optimization_algorithms"}, {"score": 0.0021705796895687864, "phrase": "local_search"}, {"score": 0.0021328586481696157, "phrase": "best_results"}, {"score": 0.0021049977753042253, "phrase": "hybrid_algorithms"}], "paper_keywords": [""], "paper_abstract": "We introduce an experimentation procedure for evaluating and comparing optimization algorithms based on the Traveling Salesman Problem (TSP). We argue that end-of-run results alone do not give sufficient information about an algorithm's performance, so our approach analyzes the algorithm's progress over time. Comparisons of performance curves in diagrams can be formalized by comparing the areas under them. Algorithms can be ranked according to a performance metric. Rankings based on different metrics can then be aggregated into a global ranking, which provides a quick overview of the quality of algorithms in comparison. An open source software framework, the TSP Suite, applies this experimental procedure to the TSP. The framework can support researchers in implementing TSP solvers, unit testing them, and running experiments in a parallel and distributed fashion. It also has an evaluator component, which implements the proposed evaluation process and produces detailed reports. We test the approach by using the TSP Suite to benchmark several local search and evolutionary computation methods. This results in a large set of baseline data, which will be made available to the research community. Our experiments show that the tested pure global optimization algorithms are outperformed by local search, but the best results come from hybrid algorithms.", "paper_title": "Benchmarking Optimization Algorithms: An Open Source Framework for the Traveling Salesman Problem", "paper_id": "WOS:000340271800004"}