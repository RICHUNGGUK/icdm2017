{"auto_keywords": [{"score": 0.03233679314229407, "phrase": "global_specifications"}, {"score": 0.03191366106676245, "phrase": "adaptive_software"}, {"score": 0.00481495049065317, "phrase": "global_specification"}, {"score": 0.004750178261675602, "phrase": "dynamically_adaptive_software"}, {"score": 0.004654642380553263, "phrase": "software_systems"}, {"score": 0.004204904449336037, "phrase": "changing_conditions"}, {"score": 0.0039028497942174777, "phrase": "large_numbers"}, {"score": 0.003525493807130663, "phrase": "system_operation"}, {"score": 0.003272083495778595, "phrase": "mode-supported_linear_temporal_logic"}, {"score": 0.0031203609829058587, "phrase": "effective_way"}, {"score": 0.0027429789393362703, "phrase": "global_adapting_process"}, {"score": 0.002687702958515561, "phrase": "model_checking_problem"}, {"score": 0.0025630077791393125, "phrase": "linear_temporal_logic"}, {"score": 0.0025285013546469223, "phrase": "ltl"}, {"score": 0.0024774888010414206, "phrase": "labelled_transition_system_analyser"}, {"score": 0.0023148964315569866, "phrase": "prototype_implementation"}, {"score": 0.002237637525225501, "phrase": "adaptive_programs"}, {"score": 0.0021925226977381244, "phrase": "experimental_evaluation"}], "paper_keywords": ["Autonomic computing", " Dynamic adaptation", " Formal specification", " Verification"], "paper_abstract": "As software systems are becoming increasingly complex, they need to dynamically and continually adapt their behavior to changing conditions in the long-term running. There will be large numbers of adaptations in these systems when evolving and the adaptations may be unknowable until system operation. To specify these adaptations, this paper proposes the mode-supported Linear Temporal Logic (mLTL) that is an effective way to describe global specifications of adaptive software. The global specifications are defined for adaptive software as requirements from the perspective of global adapting process. The model checking problem of mLTL is also resolved using Linear Temporal Logic (LTL) and Labelled Transition System Analyser (LTSA). Finally, we provide a prototype implementation for modelling and analyzing adaptive programs, and experimental evaluation shows feasibility and scalability of our approach.", "paper_title": "Development of global specification for dynamically adaptive software", "paper_id": "WOS:000323742500004"}