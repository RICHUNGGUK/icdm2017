{"auto_keywords": [{"score": 0.02281839168052196, "phrase": "niwinski"}, {"score": 0.00481495049065317, "phrase": "simply-typed_lambda_terms"}, {"score": 0.004803620075850102, "phrase": "knapik"}, {"score": 0.004654783185587997, "phrase": "urzyczyn"}, {"score": 0.004521179256835894, "phrase": "checking_properties"}, {"score": 0.004278807087784626, "phrase": "finite_automata"}, {"score": 0.004178935413340453, "phrase": "particular_such_automaton"}, {"score": 0.0040176151419992956, "phrase": "infinite_trees"}, {"score": 0.003954837422946628, "phrase": "finitely_many_classes"}, {"score": 0.003742711659195878, "phrase": "infinite_run"}, {"score": 0.003626626504149897, "phrase": "full_type_hierarchy"}, {"score": 0.003459191419478298, "phrase": "base_type"}, {"score": 0.003378385493203297, "phrase": "finite_semantics"}, {"score": 0.0033255627814855163, "phrase": "simply-typed_lambda-trees"}, {"score": 0.0028857130140890787, "phrase": "regular_infinite_lambda-trees"}, {"score": 0.0025841336988141235, "phrase": "regular_lambda-trees"}, {"score": 0.0025436978068459565, "phrase": "precisely_recursion_schemes"}, {"score": 0.0024842242921857705, "phrase": "decidability_result"}, {"score": 0.002426137929553722, "phrase": "arbitrary_recursion_schemes"}, {"score": 0.00238816839721704, "phrase": "arbitrary_level"}, {"score": 0.0023139986108451946, "phrase": "syntactical_restriction"}, {"score": 0.0022070310530794097, "phrase": "open_problem"}], "paper_keywords": [""], "paper_abstract": "Model checking properties are often described by means of finite automata. Any particular such automaton divides the set of infinite trees into finitely many classes, according to which state has an infinite run. Building the full type hierarchy upon this interpretation of the base type gives a finite semantics for simply-typed lambda-trees. A calculus based on this semantics is proven sound and complete. In particular, for regular infinite lambda-trees it is decidable whether a given automaton has a run or not. As regular lambda-trees are precisely recursion schemes, this decidability result holds for arbitrary recursion schemes of arbitrary level, without any syntactical restriction. This partially solves an open problem of Knapik, Niwinski and Urzyczyn.", "paper_title": "A finite semantics of simply-typed lambda terms for infinite runs of automata", "paper_id": "WOS:000241587300007"}