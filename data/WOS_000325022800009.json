{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_heuristic"}, {"score": 0.004278807087784626, "phrase": "crucial_step"}, {"score": 0.0034606012252270525, "phrase": "np"}, {"score": 0.0029781530607129653, "phrase": "hardware_cost"}, {"score": 0.0028857130140890787, "phrase": "account_software_and_communication_constraints"}, {"score": 0.002752390133272192, "phrase": "heuristic_approach"}, {"score": 0.002464709648714996, "phrase": "tabu_search"}, {"score": 0.002259883463607508, "phrase": "proposed_heuristic_algorithm"}, {"score": 0.002224510044064184, "phrase": "experimental_results"}, {"score": 0.002155412043665635, "phrase": "proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "recently_reported_work"}], "paper_keywords": ["Algorithm", " Heuristic", " Tabu search", " Hardware/software partitioning"], "paper_abstract": "Hardware/software (HW/SW) partitioning is a crucial step in HW/SW codesign that determines which components of the system are implemented on hardware and which ones on software. It has been proved that the HW/SW partitioning problem is NP-hard. In this paper, we present two approaches for HW/SW partitioning that aims to minimize the hardware cost while taking into account software and communication constraints. The first is a heuristic approach that treats the HW/SW partitioning problem as an extended 0-1 knapsack problem. In the second approach, tabu search is used to further improve the solution obtained from the proposed heuristic algorithm. Experimental results show that the proposed algorithms outperform a recently reported work by up to 28 %.", "paper_title": "Efficient heuristic and tabu search for hardware/software partitioning", "paper_id": "WOS:000325022800009"}