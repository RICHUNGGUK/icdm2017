{"auto_keywords": [{"score": 0.039988068601093676, "phrase": "garbage_collection"}, {"score": 0.00481495049065317, "phrase": "lock-free_algorithm"}, {"score": 0.0046046429665581555, "phrase": "realistic_model"}, {"score": 0.004553510708976456, "phrase": "synchronization_primitives"}, {"score": 0.004072275820209647, "phrase": "machine_arch"}, {"score": 0.003166751241099304, "phrase": "coarse_grain"}, {"score": 0.0030451958332949735, "phrase": "reduction_method"}, {"score": 0.0028635111041882956, "phrase": "lock-free_parallel_algorithms"}, {"score": 0.002618366076489732, "phrase": "high-level_atomic_steps"}, {"score": 0.0025461386232786356, "phrase": "low-level_primitives"}, {"score": 0.0025178072071268534, "phrase": "even_the_correctness"}, {"score": 0.002475898613632249, "phrase": "coarse_grain_algorithm"}, {"score": 0.002354302193867031, "phrase": "concurrent_mutator"}, {"score": 0.0023281003994670714, "phrase": "collector_threads"}, {"score": 0.002189105604712615, "phrase": "interactive_theorem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["garbage collection", " lock-free", " shared-memory", " correctness", " theorem proving"], "paper_abstract": "This paper presents a lock-free algorithm for mark&sweep garbage collection (GC) in a realistic model using synchronization primitives load-linked/store-conditional (LL/SC) or compare-and-swap (CAS) offered by machine arch i lectures. The algorithm is concurrent in the sense that garbage collection can run concurrently with the application (the mutator threads). It is parallel in that garbage collection itself may employ several concurrent collector threads. We first design and prove an algorithm with a coarse grain of atomicity and subsequently apply the reduction method developed and verified in [H. Gao, W.H. Hesselink, A formal reduction for lock-free parallel algorithms, in: Proceedings of the 16th Conference on Computer Aided Verification, CAV, July 2004] to implement the high-level atomic steps by means of the low-level primitives. Even the correctness of the coarse grain algorithm is very delicate due to the presence of concurrent mutator and collector threads. We have verified it therefore by means of the interactive theorem prover PVS. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Lock-free parallel and concurrent garbage collection by mark&sweep", "paper_id": "WOS:000243246500006"}