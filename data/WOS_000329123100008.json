{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "xml_documents"}, {"score": 0.022638699662255245, "phrase": "external_memory"}, {"score": 0.006851588465304515, "phrase": "xml_document"}, {"score": 0.004740009255053372, "phrase": "streaming_model"}, {"score": 0.004382364826200616, "phrase": "general_dtds"}, {"score": 0.004180809918117248, "phrase": "starting_point"}, {"score": 0.004051595625804513, "phrase": "well-known_space"}, {"score": 0.0038249462699142733, "phrase": "p-pass_streaming_algorithms"}, {"score": 0.003480993634130542, "phrase": "deterministic_streaming_algorithm"}, {"score": 0.003303412571939192, "phrase": "constant_number"}, {"score": 0.0031845067058084583, "phrase": "total_number"}, {"score": 0.003069867656852932, "phrase": "auxiliary_streams"}, {"score": 0.0030220049006970317, "phrase": "important_intermediate_step"}, {"score": 0.0027790254309734428, "phrase": "initial_xml_document"}, {"score": 0.0027356847952125433, "phrase": "streaming_fashion"}, {"score": 0.00256895975568914, "phrase": "memory-efficient_streaming_algorithms"}, {"score": 0.002387214876538434, "phrase": "binary_trees"}, {"score": 0.002349975269704307, "phrase": "dtd"}, {"score": 0.0023133055945761235, "phrase": "usual_streaming_model"}, {"score": 0.0022299587520401747, "phrase": "sublinear_memory"}, {"score": 0.002172266188075892, "phrase": "one-pass_algorithm"}, {"score": 0.0021049977753042253, "phrase": "bidirectional_two-pass_algorithm"}], "paper_keywords": ["Algorithms", " Theory"], "paper_abstract": "We study the problem of validating XML documents of size N against general DTDs in the context of streaming algorithms. The starting point of this work is a well-known space lower bound. There are XML documents and DTDs for which p-pass streaming algorithms require Omega(N/p) space. We show that when allowing access to external memory, there is a deterministic streaming algorithm that solves this problem with memory space O(log(2) N), a constant number of auxiliary read/write streams, and O(log N) total number of passes on the XML document and auxiliary streams. An important intermediate step of this algorithm is the computation of the First-Child-Next-Sibling (FCNS) encoding of the initial XML document in a streaming fashion. We study this problem independently, and we also provide memory-efficient streaming algorithms for decoding an XML document given in its FCNS encoding. Furthermore, validating XML documents encoding binary trees against any DTD in the usual streaming model without external memory can be done with sublinear memory. There is a one-pass algorithm using O(root N log N) space, and a bidirectional two-pass algorithm using O(log(2) N) space which perform this task.", "paper_title": "Validating XML Documents in the Streaming Model with External Memory", "paper_id": "WOS:000329123100008"}