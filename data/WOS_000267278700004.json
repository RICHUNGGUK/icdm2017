{"auto_keywords": [{"score": 0.04520513221478601, "phrase": "scenario-based_properties"}, {"score": 0.024954773562296004, "phrase": "symtime"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_embedded_applications"}, {"score": 0.004646258518859209, "phrase": "static_timing-analysis_method"}, {"score": 0.0045370785151713396, "phrase": "scenario-based_real-time_properties"}, {"score": 0.004456872931482395, "phrase": "graphical_task-level_models"}, {"score": 0.004100851549096203, "phrase": "specific_control-flow_behaviors"}, {"score": 0.003957078581524691, "phrase": "static_checking"}, {"score": 0.0038411109150557504, "phrase": "computationally_expensive_model_checking_methods"}, {"score": 0.0037507793596022326, "phrase": "proposed_graph-based_static_timing-analysis_algorithm"}, {"score": 0.0034101316738399203, "phrase": "significant_performance_advantage"}, {"score": 0.003369778677878286, "phrase": "timed_model_checking"}, {"score": 0.0031374619658664843, "phrase": "state_space_explosion"}, {"score": 0.0030819219279832224, "phrase": "proposed_algorithm"}, {"score": 0.0030273620861817055, "phrase": "compositional_reasoning"}, {"score": 0.002991524908432975, "phrase": "abstraction_refinement"}, {"score": 0.002938560664857691, "phrase": "large_problems"}, {"score": 0.002801849371896573, "phrase": "scenario-based_timing_analysis"}, {"score": 0.0025623821393275146, "phrase": "timed_systems"}, {"score": 0.0025320371865605834, "phrase": "fddi"}, {"score": 0.0025020752746134287, "phrase": "fischer"}, {"score": 0.002414191082427217, "phrase": "timing_verification_algorithm"}, {"score": 0.002315574871863272, "phrase": "present_experimental_results"}, {"score": 0.002243607438942819, "phrase": "spin"}, {"score": 0.0022077846767897228, "phrase": "uppaal"}, {"score": 0.002155780030180817, "phrase": "tctl"}, {"score": 0.0021049977753042253, "phrase": "time_petri_nets"}], "paper_keywords": ["Verification", " Algorithms", " Timing verification", " execution scenarios", " static timing analysis", " real time systems"], "paper_abstract": "This work presents a static timing-analysis method for verification of scenario-based real-time properties, on graphical task-level models of embedded applications. Scenario-based properties specify timing constraints which must be honored for specific control-flow behaviors and task execution orderings. Static checking of scenario-based properties currently requires computationally expensive model checking methods. Hence the proposed graph-based static timing-analysis algorithm improves upon the state-of-the-art. This is manifested in a significant performance advantage over timed model checking (up to 1000X in several cases), which suffers from state space explosion. The proposed algorithm also employs compositional reasoning and abstraction refinement for handling large problems. We also illustrate methods for using scenario-based timing analysis, which can act as alternatives to traditional timed model checking for verification of timed systems like FDDI and Fischer protocols. We implement this timing verification algorithm as a tool called SymTime and present experimental results for SymTime comparing it with SPIN, UPPAAL, and a TCTL model checker for Time Petri Nets, called Romeo.", "paper_title": "Scenario-Based Timing Verification of Multiprocessor Embedded Applications", "paper_id": "WOS:000267278700004"}