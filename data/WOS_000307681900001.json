{"auto_keywords": [{"score": 0.02578609636842043, "phrase": "karpinski"}, {"score": 0.00481495049065317, "phrase": "straight-line_programs"}, {"score": 0.004620093797504386, "phrase": "simple_algorithm"}, {"score": 0.00443308765153716, "phrase": "straight-line_program"}, {"score": 0.004218602458288531, "phrase": "string_s"}, {"score": 0.003970012328381372, "phrase": "plandowski"}, {"score": 0.0031582637043009562, "phrase": "arbitrary_composition_system"}, {"score": 0.0031064226956732497, "phrase": "size_c"}, {"score": 0.0029207008274487185, "phrase": "gasieniec"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " String processing", " Repetitions in strings", " Text compression", " Straight-line programs"], "paper_abstract": "We give a simple algorithm that, given a straight-line program of size n for a string S of length N, tests whether S is square-free in O(n(4) log N) time and O(n(2)) space. The algorithm also allows us to test square-freeness on an arbitrary composition system of size c for S. in O(c(4) log(5) N) time and O(c(2) log(2) N) space, which is faster than using the algorithm by Gasieniec, Karpinski, Plandowski, and Rytter (1996) [4]. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "An efficient algorithm to test square-freeness of strings compressed by straight-line programs", "paper_id": "WOS:000307681900001"}