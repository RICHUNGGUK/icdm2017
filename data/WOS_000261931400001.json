{"auto_keywords": [{"score": 0.03023740114861577, "phrase": "crikey"}, {"score": 0.015459727487894455, "phrase": "metric_temporal_planning"}, {"score": 0.010973520378792408, "phrase": "temporal_problems"}, {"score": 0.00481495049065317, "phrase": "temporal_planning"}, {"score": 0.004774530554776608, "phrase": "planner-scheduler_interaction"}, {"score": 0.00413684709497912, "phrase": "start_times"}, {"score": 0.004050514095922329, "phrase": "central_concern"}, {"score": 0.003916098498242888, "phrase": "widely_adopted_planning_domain_description_language_standard"}, {"score": 0.0036914757355166966, "phrase": "large_number"}, {"score": 0.0034944094552943, "phrase": "great_majority"}, {"score": 0.002770273247998903, "phrase": "wide_range"}, {"score": 0.0026112013707473938, "phrase": "wide_and_interesting_subset"}, {"score": 0.0025892330566358503, "phrase": "metric_temporal_problems"}, {"score": 0.002461241017147324, "phrase": "required_concurrency"}, {"score": 0.002419995316129757, "phrase": "empirical_data"}, {"score": 0.0023395610923736595, "phrase": "crikeyshe"}, {"score": 0.0021682027434117095, "phrase": "first_competitive_planner"}, {"score": 0.0021049977753042253, "phrase": "concurrent_actions"}], "paper_keywords": ["Temporal planning", " PDDL2.1", " Planning and scheduling"], "paper_abstract": "Metric temporal planning involves both selecting and organising actions to satisfy the goals and also assigning to each of these actions its start time and, where necessary, its duration. The assignment of start times to actions is a central concern of scheduling. In PDDL2.1, the widely adopted planning domain description language standard, metric temporal planning problems are described using actions with durations. A large number of planners have been developed to handle this language, but the great majority of them are fundamentally limited in the class of temporal problems they can solve. In this paper, we review the source of this limitation and present an approach to metric temporal planning that is not so restricted. Our approach links planning and scheduling algorithms into a planner, CRIKEY, that can successfully tackle a wide range of temporal problems. We show how CRIKEY can be simplified to solve a wide and interesting subset of metric temporal problems, while remaining competitive with other temporal planners that are unable to handle required concurrency. We provide empirical data comparing the performance of this planner, CRIKEYSHE, our original version, CRIKEY, and a range of other modern temporal planners. Our contribution is to describe the first competitive planner capable of solving problems that require concurrent actions. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Managing concurrency in temporal planning using planner-scheduler interaction", "paper_id": "WOS:000261931400001"}