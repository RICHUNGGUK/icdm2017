{"auto_keywords": [{"score": 0.02390195893253067, "phrase": "windows"}, {"score": 0.00481495049065317, "phrase": "program_analysis_task"}, {"score": 0.0045846424310611745, "phrase": "temporal_property_verification"}, {"score": 0.004489327204473076, "phrase": "program_analysis_problem"}, {"score": 0.004304574865291508, "phrase": "proof_system"}, {"score": 0.004156411748278609, "phrase": "standard_formulation"}, {"score": 0.003929843413153981, "phrase": "infinite-state_systems"}, {"score": 0.003587616378156851, "phrase": "state_space_and_temporal_operators"}, {"score": 0.0034884152484429207, "phrase": "special_sets"}, {"score": 0.002989714021608139, "phrase": "off-the-shelf_program_analysis_tools"}, {"score": 0.0028068030356445894, "phrase": "temporal_properties"}, {"score": 0.002598333022293788, "phrase": "branching-time_properties"}, {"score": 0.0025863289851447905, "phrase": "apache"}, {"score": 0.0023551955270737215, "phrase": "postgresql_database_server"}, {"score": 0.0021347607855562102, "phrase": "practical_viability"}], "paper_keywords": ["Automatic software verification", " Program analysis", " Temporal logic", " Model checking", " Termination", " Formal verification"], "paper_abstract": "We describe a reduction from temporal property verification to a program analysis problem. First we present a proof system that, unlike the standard formulation, is more amenable to reasoning about infinite-state systems: disjunction is treated by partitioning, rather than enumerating, the state space and temporal operators are characterized with special sets of states called frontiers. We then describe a transformation that, with the use of procedures and nondeterminism, enables off-the-shelf program analysis tools to naturally perform the reasoning necessary for proving temporal properties (e.g. backtracking, eventuality checking, tree counterexamples for branching-time properties, abstraction refinement, etc.). Using examples drawn from the PostgreSQL database server, Apache web server, and Windows OS kernel, we demonstrate the practical viability of our work.", "paper_title": "Temporal property verification as a program analysis task", "paper_id": "WOS:000305785600005"}