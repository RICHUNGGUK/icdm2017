{"auto_keywords": [{"score": 0.04616065522315392, "phrase": "center_server"}, {"score": 0.039506941575037056, "phrase": "sensor_nodes"}, {"score": 0.015719716506582538, "phrase": "wireless_sensor_networks"}, {"score": 0.004693476992528682, "phrase": "novel_key-update_scheme"}, {"score": 0.004310173770196077, "phrase": "wireless_sensor_network"}, {"score": 0.004095323392273661, "phrase": "randomly_generated_code_slices"}, {"score": 0.003512702405367876, "phrase": "slice_numbers"}, {"score": 0.0029871209444889716, "phrase": "common_program"}, {"score": 0.0027662954811372154, "phrase": "subsequent_key-updates"}, {"score": 0.0025183881730011597, "phrase": "previous_keys"}, {"score": 0.0024547103576350233, "phrase": "proposed_scheme"}, {"score": 0.0021049977753042253, "phrase": "short_bound"}], "paper_keywords": [""], "paper_abstract": "A novel key-update scheme is proposed for wireless sensor networks. The center server in a wireless sensor network first broadcasts a series of randomly generated code slices to sensor nodes. Upon receiving all the code slices, the sensor nodes find their neighboring coordinators to generate a permutation of slice numbers and send this permutation back to the center server. The center server and the sensor nodes can thus assemble a common program based on the permutation to derive their common key. Subsequent key-updates can then be done by this program based on the previous keys. The proposed scheme is simple, efficient, and is secure if the sensor nodes cannot be compromised within a short bound of time.", "paper_title": "An efficient key-update scheme for wireless sensor networks", "paper_id": "WOS:000238389200160"}