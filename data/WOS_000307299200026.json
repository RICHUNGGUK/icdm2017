{"auto_keywords": [{"score": 0.03828844329705514, "phrase": "gene_loss"}, {"score": 0.00481495049065317, "phrase": "fixed-parameter_algorithm"}, {"score": 0.004614483128885678, "phrase": "minimum-cost_lca-reconciliations"}, {"score": 0.004476399615305783, "phrase": "gene_losses"}, {"score": 0.004395532072377065, "phrase": "lateral_gene_transfers"}, {"score": 0.003939980614608312, "phrase": "weighted_version"}, {"score": 0.0037075456471849892, "phrase": "gene_duplication"}, {"score": 0.003553033237648043, "phrase": "lgt"}, {"score": 0.0034465894339710864, "phrase": "user's_discretion"}, {"score": 0.002751751956416832, "phrase": "gene_duplication_cost"}, {"score": 0.0027019561451518768, "phrase": "lgt_cost"}, {"score": 0.0026050445177883005, "phrase": "minimum_cost"}, {"score": 0.0021049977753042253, "phrase": "running_time"}], "paper_keywords": ["Phylogenetic trees", " reconciliations", " fixed-parameter algorithms"], "paper_abstract": "We give a fixed-parameter algorithm for the problem of enumerating all minimum-cost LCA-reconciliations involving gene duplications, gene losses, and lateral gene transfers (LGTs) for a given species tree S and a given gene tree G. Our algorithm can work for the weighted version of the problem, where the costs of a gene duplication, a gene loss, and an LGT are left to the user's discretion. The algorithm runs in O(m + 3(k/c)n) time, where m is the number of vertices in S, n is the number of vertices in G, c is the smaller between a gene duplication cost and an LGT cost, and k is the minimum cost of an LCA-reconciliation between S and G. The time complexity is indeed better if the cost of a gene loss is greater than 0. In particular, when the cost of a gene loss is at least 0.614c, the running time of the algorithm is O(m + 2.78(k/c)n).", "paper_title": "Simultaneous Identification of Duplications, Losses, and Lateral Gene Transfers", "paper_id": "WOS:000307299200026"}