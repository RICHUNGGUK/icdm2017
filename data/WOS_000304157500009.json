{"auto_keywords": [{"score": 0.04735080253683591, "phrase": "security_requirements"}, {"score": 0.029252683765316537, "phrase": "saint"}, {"score": 0.0048150162811486765, "phrase": "android"}, {"score": 0.004461761855323898, "phrase": "relatively_new_systems"}, {"score": 0.0040622852274783275, "phrase": "security_infrastructure"}, {"score": 0.003991449490087454, "phrase": "current_smartphone_operating_systems"}, {"score": 0.003676811616723809, "phrase": "smartphone_applications"}, {"score": 0.0035915423738916256, "phrase": "existing_android_operating_system"}, {"score": 0.0033868916699805224, "phrase": "secure_application_interaction"}, {"score": 0.0031938648476635225, "phrase": "install-time_permission_assignment"}, {"score": 0.0030833537429977797, "phrase": "application_provider_policy"}, {"score": 0.0029075757820516634, "phrase": "application_policy"}, {"score": 0.0027905114793984084, "phrase": "technical_detail"}, {"score": 0.002452333524620638, "phrase": "concrete_example"}, {"score": 0.0023953929817357882, "phrase": "real-world_applications"}, {"score": 0.002339771435910601, "phrase": "necessary_utility"}, {"score": 0.0022323643840655646, "phrase": "security_decisions"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["security", " android", " smartphones"], "paper_abstract": "Smartphones are now ubiquitous. However, the security requirements of these relatively new systems and the applications they support are still being understood. As a result, the security infrastructure available in current smartphone operating systems is largely underdeveloped. In this paper, we consider the security requirements of smartphone applications and augment the existing Android operating system with a framework to meet them. We present Secure Application INTeraction (Saint), a modified infrastructure that governs install-time permission assignment and their run-time use as dictated by application provider policy. An in-depth description of the semantics of application policy is presented. The architecture and technical detail of Saint are given, and areas for extension, optimization, and improvement are explored. We demonstrate through a concrete example and study of real-world applications that Saint provides necessary utility for applications to assert and control the security decisions on the platform. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Semantically rich application-centric security in Android", "paper_id": "WOS:000304157500009"}