{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "broadcast"}, {"score": 0.00481495049065317, "phrase": "ad_hoc_networks"}, {"score": 0.004669845451682529, "phrase": "fundamental_operation"}, {"score": 0.00461302961851157, "phrase": "wireless_network"}, {"score": 0.004529093447865156, "phrase": "naive_flooding"}, {"score": 0.00436575511349828, "phrase": "previous_results"}, {"score": 0.004260134699483774, "phrase": "broadcast_scheduling"}, {"score": 0.0041825926310470616, "phrase": "constant_approximation_ratios"}, {"score": 0.004007083686875716, "phrase": "current_state-of-the-art_algorithm's_ratio"}, {"score": 0.0036107898615445797, "phrase": "small_ratios"}, {"score": 0.003459191419478298, "phrase": "low_redundancy"}, {"score": 0.002985988377995789, "phrase": "highly_efficient_algorithm"}, {"score": 0.002791239714439304, "phrase": "network_radius"}, {"score": 0.0021049977753042253, "phrase": "approximation_ratio"}], "paper_keywords": [""], "paper_abstract": "Broadcast is a fundamental operation in wireless network, and naive flooding is simply not practical. Previous results showed that although broadcast scheduling can achieve constant approximation ratios in respect of latency, the current state-of-the-art algorithm's ratio is still overwhelmingly large 650). In this paper we present two basic broadcast scheduling algorithms that both achieve small ratios 51 and 24, while preserving low redundancy 1 and 4 (in terms of number of retransmissions a node has to make). Moreover, we also present a highly efficient algorithm whose latency is R + O(root Rlog(1.5) R) (where R is the network radius) and each node only has to transmit up to 5 times. This result, in a sense of approximation, is nearly optimal since O(root Rlog(1.5) R) is negligible when R is large. Moreover, R is itself a lower bound for latency, so the approximation ratio is nearly 1 and this algorithm is nearly optimal.", "paper_title": "Low-latency broadcast scheduling in ad hoc networks", "paper_id": "WOS:000240084000050"}