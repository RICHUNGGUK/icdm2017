{"auto_keywords": [{"score": 0.03990106221936603, "phrase": "sigma"}, {"score": 0.013628005450246816, "phrase": "text_fingerprinting_indexing_problem"}, {"score": 0.010874229276312394, "phrase": "maximal_substrings"}, {"score": 0.00481495049065317, "phrase": "text_fingerprinting_problem"}, {"score": 0.004532988904965752, "phrase": "substring_s"}, {"score": 0.004388035083357706, "phrase": "distinct_characters"}, {"score": 0.004073809704022463, "phrase": "data_structure"}, {"score": 0.004017437417375057, "phrase": "string_s"}, {"score": 0.003852939975815287, "phrase": "input_subset"}, {"score": 0.00321425262806329, "phrase": "best_known_results"}, {"score": 0.0028786753386776383, "phrase": "k"}, {"score": 0.0026317312518257803, "phrase": "first_one"}, {"score": 0.0023646866829474798, "phrase": "second_one"}, {"score": 0.002331909406363425, "phrase": "query_time_complexities"}, {"score": 0.002164602220179823, "phrase": "amir_et_al"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Fingerprints", " Combinatorial algorithms on words", " Text indexing", " Patricia trie"], "paper_abstract": "Let S be a string over a finite, ordered alphabet Sigma. For any substring S' of S. the set of distinct characters contained in S' is called its fingerprint. The text fingerprinting indexing problem is to construct a data structure for the string S in advance, so that on given any input subset C of Sigma, we can answer the following queries efficiently: (1) determine if C represents a fingerprint of some substrings in S; (2) find all maximal substrings of S whose fingerprint is C. The best known results solved these two queries in Theta(vertical bar Sigma vertical bar) and Theta(vertical bar Sigma vertical bar + K) time, respectively, where K is the number of maximal substrings. In this paper, we propose two improved algorithms for the text fingerprinting indexing problem. The first one solves the two queries in O(vertical bar C vertical bar logn) and O(vertical bar C vertical bar logn + K) time, respectively. For the second one, the query time complexities are further reduced to O(vertical bar C vertical bar log(vertical bar Sigma vertical bar/vertical bar C vertical bar)) and O(vertical bar C vertical bar log (vertical bar Sigma vertical bar/vertical bar C vertical bar) + K). Both results answer an open problem proposed by Amir et al. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Faster query algorithms for the text fingerprinting problem", "paper_id": "WOS:000291507900005"}