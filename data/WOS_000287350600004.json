{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "clustered_vliw_architectures"}, {"score": 0.047162968910015264, "phrase": "register_file"}, {"score": 0.004690694501758065, "phrase": "scalability_problem"}, {"score": 0.0046176782475198085, "phrase": "flat_vliw_architectures"}, {"score": 0.004382364826200616, "phrase": "functional_units"}, {"score": 0.004224786847720058, "phrase": "inter-cluster_communication"}, {"score": 0.0040942189695983185, "phrase": "increased_leakage"}, {"score": 0.004051595625804513, "phrase": "functional_components"}, {"score": 0.003988487841970088, "phrase": "high_number"}, {"score": 0.003946960862020283, "phrase": "register_accesses"}, {"score": 0.003785115566529808, "phrase": "compiler_scheduling_algorithms"}, {"score": 0.0034088473318056537, "phrase": "split_decoder_design"}, {"score": 0.0033381913087533457, "phrase": "new_energy-aware_instruction_scheduling_algorithm"}, {"score": 0.0031845067058084583, "phrase": "decoder_power_consumption"}, {"score": 0.003085989256759819, "phrase": "purely_hardware_based_scheme"}, {"score": 0.0028828348726682965, "phrase": "register_files"}, {"score": 0.0027790254309734428, "phrase": "limited_register"}, {"score": 0.0027071661844502992, "phrase": "extra_register_file_accesses"}, {"score": 0.0026649432435828842, "phrase": "proposed_algorithms"}, {"score": 0.002637160140011997, "phrase": "register_file_power_consumption"}, {"score": 0.0023997601127552256, "phrase": "performance_improvement"}, {"score": 0.002253461585851626, "phrase": "traditional_greedy_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling", " Clustered VLIW processors", " Energy-aware scheduling"], "paper_abstract": "Clustered VLIW architectures solve the scalability problem associated with flat VLIW architectures by partitioning the register file and connecting only a subset of the functional units to a register file. However, inter-cluster communication in clustered architectures leads to increased leakage in functional components and a high number of register accesses. In this paper, we propose compiler scheduling algorithms targeting two previously ignored power-hungry components in clustered VLIW architectures, viz., instruction decoder and register file. We consider a split decoder design and propose a new energy-aware instruction scheduling algorithm that provides 14.5% and 17.3% benefit in the decoder power consumption on an average over a purely hardware based scheme in the context of 2-clustered and 4-clustered VLIW machines. In the case of register files, we propose two new scheduling algorithms that exploit limited register snooping capability to reduce extra register file accesses. The proposed algorithms reduce register file power consumption on an average by 6.85% and 11.90% (10.39% and 17.78%), respectively, along with performance improvement of 4.81% and 5.34% (9.39% and 11.16%) over a traditional greedy algorithm for 2-clustered (4-clustered) VLIW machine. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Compiler-assisted power optimization for clustered VLIW architectures", "paper_id": "WOS:000287350600004"}