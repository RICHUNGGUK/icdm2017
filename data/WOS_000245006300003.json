{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "video_data"}, {"score": 0.02969146130504462, "phrase": "qrm_algorithm"}, {"score": 0.009045234336466807, "phrase": "qedf_algorithm"}, {"score": 0.004778031885668542, "phrase": "local_area_network_environment"}, {"score": 0.004717125879761534, "phrase": "multiple_high_quality_video_streams"}, {"score": 0.004597622380240611, "phrase": "increasingly_important_class"}, {"score": 0.004492648247988178, "phrase": "cluster_environment"}, {"score": 0.004446762251086613, "phrase": "powerful_symmetric_multiprocessor"}, {"score": 0.004424014894851205, "phrase": "smp"}, {"score": 0.0043452175611323335, "phrase": "high-speed_network"}, {"score": 0.004256895619944631, "phrase": "hardware_point"}, {"score": 0.004181081654934407, "phrase": "actual_construction"}, {"score": 0.004096082254543022, "phrase": "difficult_problems"}, {"score": 0.003931211989641077, "phrase": "multiple_video_packet_streams"}, {"score": 0.00383154215593113, "phrase": "rate_variability"}, {"score": 0.0038119123317396954, "phrase": "video_streams"}, {"score": 0.00368673793612343, "phrase": "variable_bit_rate_fashion"}, {"score": 0.003611751858608048, "phrase": "requested_qos_levels"}, {"score": 0.003275807170434343, "phrase": "extensive_performance_study"}, {"score": 0.003250669764924111, "phrase": "edf"}, {"score": 0.0032340709108698747, "phrase": "rm"}, {"score": 0.0031681812424108214, "phrase": "qos_guarantees"}, {"score": 0.003151939207323674, "phrase": "smoothed_video_data"}, {"score": 0.003119703729649559, "phrase": "probabilistic_definition"}, {"score": 0.003103819095677929, "phrase": "qos"}, {"score": 0.0030877969090964386, "phrase": "admission_control_conditions"}, {"score": 0.0030094459611176207, "phrase": "counter-based_scheduling_module"}, {"score": 0.002971016979295967, "phrase": "core_scheduling_mechanism"}, {"score": 0.0029330772709348384, "phrase": "actual_qos_levels"}, {"score": 0.002851301751761804, "phrase": "qedf"}, {"score": 0.002836680245131927, "phrase": "qrm"}, {"score": 0.002743441412836047, "phrase": "different_workload_and_utilization_conditions"}, {"score": 0.0026875896756849258, "phrase": "new_metric"}, {"score": 0.002632871981677528, "phrase": "overall_performance"}, {"score": 0.0026126405272417783, "phrase": "packet_scheduler"}, {"score": 0.0025792654256039187, "phrase": "simultaneous_requests"}, {"score": 0.002533253511622532, "phrase": "smp-based_linux_platform"}, {"score": 0.002468938912850425, "phrase": "rather_stable_level"}, {"score": 0.0024311346712789553, "phrase": "workload_and_utilization_levels"}, {"score": 0.0022914917245958647, "phrase": "high_level"}, {"score": 0.002262209824105154, "phrase": "large_number"}, {"score": 0.0022161333611134806, "phrase": "lower_complexity"}, {"score": 0.0021654157292186967, "phrase": "qrm_approach"}, {"score": 0.0021377414429251647, "phrase": "packet_scheduling"}, {"score": 0.002121306567029367, "phrase": "client-server_environment"}], "paper_keywords": ["parallel processing", " multimedia networking", " link scheduling", " QoS", " soft real-time constraints", " earliest-deadline-first", " rate-monotonic", " smoothed video", " client-server systems", " Linux", " SMP"], "paper_abstract": "Simultaneous transmission of multiple high quality video streams from a server to the clients is becoming an increasingly important class of traffic in a network of workstations or cluster environment. With a powerful symmetric multiprocessor (SMP) as the server and a high-speed network, such transmission is practicable from a hardware point of view. However, the actual construction of such a video data server system entails tackling a number of difficult problems related to the provision of strict quality of service (QoS) guarantees. Among others, the smoothing and scheduling of multiple video packet streams are two crucial issues. Smoothing is concerned with reducing the rate variability of video streams in view of the fact that video data are usually compressed in a variable bit rate fashion. Scheduling is important to guarantee the requested QoS levels while maximizing the utilization of the resources. Although much work on smoothing has been done, it is not clear which scheduling scheme is suitable for multiplexing smoothed video data to the network. In this paper we present an extensive performance study of the EDF and RM scheduling algorithms which are modified to provide QoS guarantees for smoothed video data. With a probabilistic definition of QoS, admission control conditions are incorporated into the two algorithms. Furthermore, a counter-based scheduling module is included as the core scheduling mechanism which adaptively adjusts the actual QoS levels assigned to requests. Our theoretical analysis of the two modified algorithms, called QEDF and QRM, shows that the QRM algorithm is more robust than the QEDF algorithm for different workload and utilization conditions. We also propose to use a new metric called meta-QoS to quantify the overall performance of a packet scheduler given a set of simultaneous requests. In our experiments based on an SMP-based Linux platform, we find that the QRM algorithm can sustain a rather stable level of meta-QoS even when the workload and utilization levels are increased. On the other hand, the QEDF algorithm, due to its conservative admission control policy, is found to be not suitable for a high level of utilization and a large number of requests. In view of the lower complexity of the QRM algorithm, it seems that the QRM approach is a more suitable candidate for packet scheduling in the client-server environment considered in our study.", "paper_title": "Practical algorithms for scheduling video data in a local area network environment", "paper_id": "WOS:000245006300003"}