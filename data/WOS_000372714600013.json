{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "probabilistic_programming"}, {"score": 0.004424768776701965, "phrase": "semantic_intricacies"}, {"score": 0.003916098498242888, "phrase": "machine_learning"}, {"score": 0.0037363522297378777, "phrase": "quantitative_weakest_pre-condition_semantics"}, {"score": 0.003095923814666088, "phrase": "operational_semantics"}, {"score": 0.0029816229984366374, "phrase": "markov_models"}, {"score": 0.0028715299874549245, "phrase": "expected_rewards"}, {"score": 0.0027916287357898544, "phrase": "quantitative_pre-conditions"}, {"score": 0.0027139447110929586, "phrase": "program_transformation"}, {"score": 0.0021857667493036786, "phrase": "inductive_semantics"}, {"score": 0.0021049977753042253, "phrase": "non-deterministic_probabilistic_programs"}], "paper_keywords": ["Probabilistic Programming", " Semantics", " Conditional Probabilities", " Program Transformation"], "paper_abstract": "In this paper, we investigate the semantic intricacies of conditioning in probabilistic programming, a major feature, e.g., in machine learning. We provide a quantitative weakest pre-condition semantics. In contrast to all other approaches, non-termination is taken into account by our semantics. We also present an operational semantics in terms of Markov models and show that expected rewards coincide with quantitative pre-conditions. A program transformation that entirely eliminates conditioning from programs is given; the correctness is shown using our semantics. Finally, we show that an inductive semantics for conditioning in non-deterministic probabilistic programs cannot exist.", "paper_title": "Conditioning in Probabilistic Programming", "paper_id": "WOS:000372714600013"}