{"auto_keywords": [{"score": 0.038193465585667406, "phrase": "fsam"}, {"score": 0.006347162457571642, "phrase": "nonroot_states"}, {"score": 0.006272094571702284, "phrase": "root_state"}, {"score": 0.00481495049065317, "phrase": "fast_scalable"}, {"score": 0.004701556483912018, "phrase": "embedded_content_processors"}, {"score": 0.004664352260912174, "phrase": "home_and_office_network_gateways"}, {"score": 0.004590820632326585, "phrase": "cost-effective_embedded_network_processor"}, {"score": 0.004412000844879264, "phrase": "strong_demand"}, {"score": 0.004325208730208653, "phrase": "intrusion_detection"}, {"score": 0.004290969772225093, "phrase": "keyword_blocking"}, {"score": 0.00405873677211836, "phrase": "appropriate_fast_scalable_automaton-matching"}, {"score": 0.003931697356115479, "phrase": "embedded_network_processors"}, {"score": 0.0038696708318671446, "phrase": "matching_algorithms"}, {"score": 0.003808619097554076, "phrase": "deterministic_matching_time"}, {"score": 0.0036023971109946946, "phrase": "novel_prehash_and_root-index_techniques"}, {"score": 0.0033269488835014583, "phrase": "prehash_approach"}, {"score": 0.003287482882222731, "phrase": "hashing_functions"}, {"score": 0.0032355864829403413, "phrase": "input_sub-string"}, {"score": 0.0031592690527974285, "phrase": "root-index_approach"}, {"score": 0.00295264307195965, "phrase": "prevalent_automaton_algorithm"}, {"score": 0.0029292378971875594, "phrase": "aho-corasick"}, {"score": 0.002759515220105503, "phrase": "fpga"}, {"score": 0.0025180781216911246, "phrase": "small_logic_circuit"}, {"score": 0.002478297391121455, "phrase": "competitive_performance"}, {"score": 0.002439143581855858, "phrase": "larger_memory"}, {"score": 0.0022614266476954467, "phrase": "internal_circuits"}, {"score": 0.002208035721125305, "phrase": "high-speed_external_memories"}, {"score": 0.0021049977753042253, "phrase": "similar_high_performance"}], "paper_keywords": ["Algorithms", " Performance", " Design", " String matching", " content filtering", " automaton", " Aho-Corasick", " Bloom filter"], "paper_abstract": "Home and office network gateways often employ a cost-effective embedded network processor to handle their network services. Such network gateways have received strong demand for applications dealing with intrusion detection, keyword blocking, antivirus and antispam. Accordingly, we were motivated to propose an appropriate fast scalable automaton-matching (FSAM) hardware to accelerate the embedded network processors. Although automaton matching algorithms are robust with deterministic matching time, there is still plenty of room for improving their average-case performance. FSAM employs novel prehash and root-index techniques to accelerate the matching for the nonroot states and the root state, respectively, in automation based hardware. The prehash approach uses some hashing functions to pretest the input sub-string for the nonroot states while the root-index approach handles multiple bytes in one single matching for the root state. Also, FSAM is applied in a prevalent automaton algorithm, Aho-Corasick (AC), which is often used in many content-filtering applications. When implemented in FPGA, FSAM can perform at the rate of 11.1Gbps with the pattern set of 32,634 bytes, demonstrating that our proposed approach can use a small logic circuit to achieve a competitive performance, although a larger memory is used. Furthermore, the amount of patterns in FSAM is not limited by the amount of internal circuits and memories. If the high-speed external memories are employed, FSAM can support up to 21,302 patterns while maintaining similar high performance.", "paper_title": "A Fast Scalable Automaton-Matching Accelerator for Embedded Content Processors", "paper_id": "WOS:000266818500003"}