{"auto_keywords": [{"score": 0.03431336294915633, "phrase": "memory-bound_applications"}, {"score": 0.030698195623572126, "phrase": "-cab"}, {"score": 0.027234489651551647, "phrase": "intersocket_tier"}, {"score": 0.02658880766844932, "phrase": "intrasocket_tier"}, {"score": 0.00481495049065317, "phrase": "adaptive_cache_aware_bitier_work-stealing"}, {"score": 0.004736820055728928, "phrase": "multisocket_multicore_architectures"}, {"score": 0.004659951478263083, "phrase": "modern_multicore_computers"}, {"score": 0.004509919457793852, "phrase": "multisocket_multicore_architecture"}, {"score": 0.004436716583179764, "phrase": "shared_caches"}, {"score": 0.004189698902282913, "phrase": "traditional_work-stealing_schedulers"}, {"score": 0.004021689117050817, "phrase": "shared_cache"}, {"score": 0.003386310007555803, "phrase": "cab"}, {"score": 0.0031714880645482496, "phrase": "memory_footprint"}, {"score": 0.0031199418866663543, "phrase": "cache_misses"}, {"score": 0.0028046593475268174, "phrase": "dag_partitioner"}, {"score": 0.0026920404458807444, "phrase": "directed_acyclic_graph"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Cache aware", " work-stealing", " multisocket multicore architectures", " divide-and-conquer programs"], "paper_abstract": "Modern multicore computers often adopt a multisocket multicore architecture with shared caches in each socket. However, traditional work-stealing schedulers tend to pollute the shared cache and incur more cache misses due to their random stealing. To relieve this problem, this paper proposes an Adaptive Cache-Aware Bi-tier work-stealing (A-CAB) scheduler. A-CAB improves the performance of memory-bound applications by reducing memory footprint and cache misses of tasks running inside the same CPU socket. A-CAB adaptively uses a DAG partitioner to divide an execution Directed Acyclic Graph (DAG) into the intersocket tier and the intrasocket tier. Tasks in the intersocket tier are scheduled across sockets while tasks in the intrasocket tier are scheduled within the same socket. Experimental results tell us that A-CAB can improve the performance of memory-bound applications up to 74.4 percent compared with the traditional work-stealing.", "paper_title": "Adaptive Cache Aware Bitier Work-Stealing in Multisocket Multicore Architectures", "paper_id": "WOS:000326501400003"}