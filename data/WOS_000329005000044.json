{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bayesian_networks"}, {"score": 0.049618672169140725, "phrase": "causality_constraints"}, {"score": 0.04826300170743257, "phrase": "software_development"}, {"score": 0.047818976511196806, "phrase": "risk_management"}, {"score": 0.042192437711649204, "phrase": "software_development_projects"}, {"score": 0.031870661289085805, "phrase": "bncc"}, {"score": 0.004456717971917794, "phrase": "key_activities"}, {"score": 0.0038924989779389424, "phrase": "present_research"}, {"score": 0.003855034057431947, "phrase": "software_risk_analysis"}, {"score": 0.0037267132967205136, "phrase": "risk_factors"}, {"score": 0.0036908381347418805, "phrase": "project_outcome"}, {"score": 0.0036553070575015344, "phrase": "software_project_failures"}, {"score": 0.0035507457285983268, "phrase": "insufficient_and_ineffective_risk_management"}, {"score": 0.0034826993555190765, "phrase": "proper_and_effective_risk_control"}, {"score": 0.003334309053314909, "phrase": "risk_causality"}, {"score": 0.0032389001343643064, "phrase": "decision_making"}, {"score": 0.002968695624366393, "phrase": "risk_analysis"}, {"score": 0.0027474453262607834, "phrase": "proposed_model"}, {"score": 0.0026175952455594277, "phrase": "expert_knowledge"}, {"score": 0.002469830206270585, "phrase": "logistic_regression"}, {"score": 0.0024224481033945943, "phrase": "naive_bayes"}, {"score": 0.002387507583705495, "phrase": "general_bns"}, {"score": 0.002319127685733821, "phrase": "first_causal_discovery_framework"}, {"score": 0.0022967713922705, "phrase": "risk_causality_analysis"}, {"score": 0.002274630121183437, "phrase": "software_projects"}, {"score": 0.0021670777282518424, "phrase": "software_project_risk_management"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software project risk analysis", " Bayesian networks", " Causality analysis", " Knowledge discovery", " Expert knowledge constraint"], "paper_abstract": "Many risks are involved in software development and risk management has become one of the key activities in software development. Bayesian networks (BNs) have been explored as a tool for various risk management practices, including the risk management of software development projects. However, much of the present research on software risk analysis focuses on finding the correlation between risk factors and project outcome. Software project failures are often a result of insufficient and ineffective risk management. To obtain proper and effective risk control, risk planning should be performed based on risk causality which can provide more risk information for decision making. In this study, we propose a model using BNs with causality constraints (BNCC) for risk analysis of software development projects. Through unrestricted automatic causality learning from 302 collected software project data, we demonstrated that the proposed model can not only discover causalities in accordance with the expert knowledge but also perform better in prediction than other algorithms, such as logistic regression, C4.5, Naive Bayes, and general BNs. This research presents the first causal discovery framework for risk causality analysis of software projects and develops a model using BNCC for application in software project risk management. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Software project risk analysis using Bayesian networks with causality constraints", "paper_id": "WOS:000329005000044"}