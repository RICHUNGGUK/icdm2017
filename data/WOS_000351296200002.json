{"auto_keywords": [{"score": 0.04976849859687576, "phrase": "dynamic_pairwise_constraints"}, {"score": 0.02680013239509042, "phrase": "mekl"}, {"score": 0.015719716506582538, "phrase": "multiple_empirical_kernel_learning"}, {"score": 0.006340823643859538, "phrase": "present_work"}, {"score": 0.005390043760048903, "phrase": "meklpc"}, {"score": 0.004721893473387288, "phrase": "traditional_multiple_kernel_learning"}, {"score": 0.004630626571109149, "phrase": "implicit_kernels"}, {"score": 0.004497008230182996, "phrase": "original_data_space"}, {"score": 0.004467840466181518, "phrase": "multiple_feature_spaces"}, {"score": 0.004438861041839598, "phrase": "different_empirical_kernels"}, {"score": 0.004324802749898957, "phrase": "good_classification_performance"}, {"score": 0.004105367230078949, "phrase": "input_space"}, {"score": 0.0038717306726380233, "phrase": "dynamic_pairwise_constraints_method"}, {"score": 0.003747705541406206, "phrase": "pairwise_constraint"}, {"score": 0.003443454339200118, "phrase": "original_pairwise_constraints"}, {"score": 0.0033222630615013763, "phrase": "boundary_samples"}, {"score": 0.003257960296952439, "phrase": "decision_hyperplane"}, {"score": 0.0031638248208086263, "phrase": "proposed_meklpc"}, {"score": 0.0030326180561817497, "phrase": "multiple_folds"}, {"score": 0.003012919635505122, "phrase": "prior_information"}, {"score": 0.002906836691319759, "phrase": "classification_performance"}, {"score": 0.002869191468702503, "phrase": "feature_space"}, {"score": 0.0027145478956494356, "phrase": "decision_boundary"}, {"score": 0.0026189428303175664, "phrase": "mapped_feature_space"}, {"score": 0.002568217828414509, "phrase": "empirical_risk"}, {"score": 0.0025515282069418286, "phrase": "generalization_risk"}, {"score": 0.002518472813045417, "phrase": "different_feature_spaces"}, {"score": 0.0024939618994290016, "phrase": "multiple_empirical_kernels"}, {"score": 0.0023213398100616132, "phrase": "first_time"}, {"score": 0.002268955084689301, "phrase": "mekl_framework"}, {"score": 0.002189009136006588, "phrase": "real-world_data_sets"}, {"score": 0.0021396042585285946, "phrase": "meklpc."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiple Kernel Learning", " Dynamic pairwise constraints", " Empirical Kernel Mapping", " Prior knowledge", " Pattern recognition"], "paper_abstract": "Unlike the traditional Multiple Kernel Learning (MKL) with the implicit kernels, Multiple Empirical Kernel Learning (MEKL) explicitly maps the original data space into multiple feature spaces via different empirical kernels. MEKL has been demonstrated to bring good classification performance and to be much easier in processing and analyzing the adaptability of kernels for the input space. In this paper, we incorporate the dynamic pairwise constraints into MEKL to propose a novel Multiple Empirical Kernel Learning with dynamic Pairwise Constraints method (MEKLPC). It is known that the pairwise constraint provides the relationship between two samples, which tells whether these samples belong to the same class or not. In the present work, we boost the original pairwise constraints and design the dynamic pairwise constraints which can pay more attention onto the boundary samples and thus to make the decision hyperplane more reasonable and accurate. Thus, the proposed MEKLPC not only inherits the advantages of the MEKL, but also owns multiple folds of prior information. Firstly, MEKLPC gets the side-information and boosts the classification performance significantly in each feature space. Here, the side-information is the dynamic pairwise constraints which are constructed by the samples near the decision boundary, i.e. the boundary samples. Secondly, in each mapped feature space, MEKLPC still measures the empirical risk and generalization risk. Lastly, different feature spaces mapped by multiple empirical kernels can agree to their outputs for the same input sample as much as possible. To the best of our knowledge, it is the first time to introduce the dynamic pairwise constraints into the MEKL framework in the present work. The experiments on a number of real-world data sets demonstrate the feasibility and effectiveness of MEKLPC. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Multiple Empirical Kernel Learning with dynamic pairwise constraints", "paper_id": "WOS:000351296200002"}