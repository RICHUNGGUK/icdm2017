{"auto_keywords": [{"score": 0.04948948915272368, "phrase": "minmax_regret"}, {"score": 0.012811375745116071, "phrase": "evacuation_time"}, {"score": 0.009377899783484415, "phrase": "dynamic_path_network"}, {"score": 0.00481495049065317, "phrase": "improved_algorithms"}, {"score": 0.0046970764288494764, "phrase": "dynamic_path"}, {"score": 0.004658426838467567, "phrase": "tree_networks"}, {"score": 0.003997891221012094, "phrase": "k-sink_problem"}, {"score": 0.0038518661517315533, "phrase": "k_sinks"}, {"score": 0.0037886833451021723, "phrase": "minmax_regret_version"}, {"score": 0.0036958398682001015, "phrase": "exact_number"}, {"score": 0.003502382624110703, "phrase": "possible_number"}, {"score": 0.0031977096047057898, "phrase": "worst_case"}, {"score": 0.0031452231581533814, "phrase": "actual_numbers"}, {"score": 0.003030247482854539, "phrase": "chosen_sink_locations"}, {"score": 0.002286781334850213, "phrase": "dynamic_tree_network"}, {"score": 0.0022492129111567824, "phrase": "previously_best_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Facility location", " Sink location problem", " Minmax regret optimization", " Robust solution", " Uncertain demand"], "paper_abstract": "Suppose that in an emergency, such as an earthquake or fire, a number of people need to be evacuated to a safe \"sink\" from every vertex of a network. The k-sink problem seeks to minimize the evacuation time of all the evacuees to k sinks. In the minmax regret version of this problem, the exact number of evacuees at each vertex is unknown, but only an interval for a possible number is given. Under the assumption that all edges have the same capacity, we want to minimize the evacuation time in the worst case, where the actual numbers of evacuees are the most unfavorable to the chosen sink locations. We first present an O(n) time algorithm for finding the minmax regret 1-sink on a dynamic path network, improving the previously known O(n log n) algorithms. We then present an O(n log(4) n) time algorithm for finding the minmax regret 2-sink on a dynamic path network, improving the previously best O(n(2) log(2) n) time algorithm. We also present an O(n log n) time algorithm for finding the minmax regret 1-sink in a dynamic tree network, improving the previously best algorithm that runs in O(n(2) log(2) n) time. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Improved algorithms for computing minmax regret sinks on dynamic path and tree networks", "paper_id": "WOS:000366773600012"}