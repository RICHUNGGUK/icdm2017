{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "xml_ancestor_queries"}, {"score": 0.00478557489890886, "phrase": "xml_documents"}, {"score": 0.004460309246062286, "phrase": "ancestor_relationships"}, {"score": 0.00443308765153716, "phrase": "tree_nodes"}, {"score": 0.004406031457123015, "phrase": "search_engines"}, {"score": 0.004339108074589304, "phrase": "index_structure"}, {"score": 0.004299440848047056, "phrase": "ancestor_relations"}, {"score": 0.004208282550386197, "phrase": "document_item"}, {"score": 0.004093901605219401, "phrase": "logical_id"}, {"score": 0.0038862297330905836, "phrase": "ancestor_relationship"}, {"score": 0.003850686614685676, "phrase": "corresponding_nodes"}, {"score": 0.0037459885494311217, "phrase": "main_factor"}, {"score": 0.003711723285313348, "phrase": "index_size"}, {"score": 0.0035887342563437935, "phrase": "constant_factor"}, {"score": 0.003545024951402821, "phrase": "critical_issue"}, {"score": 0.003417054482155433, "phrase": "rooted_xml_tree_t"}, {"score": 0.0031942814007173254, "phrase": "constant_time"}, {"score": 0.002673957615079041, "phrase": "interval_containment_test"}, {"score": 0.0026252106881752067, "phrase": "maximum_label_length"}, {"score": 0.002358013394257883, "phrase": "real_xml_data"}, {"score": 0.0023221248824337576, "phrase": "orthogonal_prefix-based_approach"}, {"score": 0.002258893331333988, "phrase": "ancestor_query"}], "paper_keywords": [""], "paper_abstract": "XML documents are often viewed as trees (basically the parse tree of the document), and queries over such documents typically test for ancestor relationships among tree nodes. Search engines process such queries using an index structure summarizing the ancestor relations. In the index, each document item (tree node) is identified using some logical id (node label), such that, given two labels, the engine can determine the ancestor relationship between the corresponding nodes. The length of the labels is a main factor of the index size. Therefore, reducing this length, even by a constant factor, is a critical issue. In this work we consider the following problem. Given a rooted XML tree T, label the nodes of T in the most compact way such that given the labels of two nodes, one can determine in constant time, by looking at the labels only, whether one node is an ancestor of the other. Labelings currently being used are all variants of the following interval scheme. Number the leaves say from left to right and label each node with a pair consisting of the numbers of its smallest and largest leaf descendants. An ancestor query then amounts to an interval containment test on the labels. The maximum label length using this scheme is 2 log n, where n is the number of nodes in the tree.(1) The focus of this work is finding a scheme that works best in practice on real XML data. We suggest an orthogonal prefix-based approach, where the labeling is such that an ancestor query roughly amounts to testing whether one label is a prefix of the other. We present several new labeling schemes based on this approach and analyze their performance both theoretically and empirically.", "paper_title": "Compact labeling scheme for XML ancestor queries", "paper_id": "WOS:000243133200004"}