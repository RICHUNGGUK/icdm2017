{"auto_keywords": [{"score": 0.02470537390580125, "phrase": "processing_units"}, {"score": 0.011975678441831516, "phrase": "raw_data"}, {"score": 0.009727827900093737, "phrase": "dkbta_framework"}, {"score": 0.00481495049065317, "phrase": "efficient_parallelization"}, {"score": 0.004764859786310636, "phrase": "knowledge-based_temporal_abstractions"}, {"score": 0.0047152877145889656, "phrase": "data_storage_capabilities"}, {"score": 0.004666228956744244, "phrase": "computational_power"}, {"score": 0.004440049534195442, "phrase": "great_amount"}, {"score": 0.004314127287770832, "phrase": "new_knowledge"}, {"score": 0.004191761229019263, "phrase": "new_problems"}, {"score": 0.004083521450624747, "phrase": "rapid_growth"}, {"score": 0.004062209850474988, "phrase": "stored_time-oriented_data"}, {"score": 0.0040094142308666975, "phrase": "new_methods"}, {"score": 0.003926359151817743, "phrase": "large_amounts"}, {"score": 0.003905864553426306, "phrase": "temporal_data"}, {"score": 0.0038349690130889767, "phrase": "automatic_summarization_process"}, {"score": 0.0038049789989278463, "phrase": "predefined_knowledge"}, {"score": 0.003629882559085245, "phrase": "higher_level_interpretations"}, {"score": 0.003601490552425841, "phrase": "predefined_domain_knowledge"}, {"score": 0.0035361001070845677, "phrase": "temporal_abstraction"}, {"score": 0.003453762161498497, "phrase": "enormous_volume"}, {"score": 0.003435725890684843, "phrase": "multivariate_data"}, {"score": 0.003373334961160647, "phrase": "complex_patterns"}, {"score": 0.003260446582969186, "phrase": "scalability_problem"}, {"score": 0.003234934827553253, "phrase": "temporal-abstraction_task"}, {"score": 0.0032012284065895537, "phrase": "significantly_large_amounts"}, {"score": 0.0031430823944465177, "phrase": "new_computational_framework"}, {"score": 0.003061838370348944, "phrase": "abstraction_process"}, {"score": 0.0029905104479072482, "phrase": "acceptable_computation_time"}, {"score": 0.0029438813080245544, "phrase": "temporal-abstraction_process"}, {"score": 0.0028378798711397235, "phrase": "main_temporal-abstraction_task"}, {"score": 0.002786315148863582, "phrase": "different_subject_groups"}, {"score": 0.002771754731852373, "phrase": "concepts_types"}, {"score": 0.002750056254309311, "phrase": "abstraction_types"}, {"score": 0.0026579702194790174, "phrase": "preliminary_fashion"}, {"score": 0.0026165125617194037, "phrase": "information_security_domains"}, {"score": 0.0025960262223338293, "phrase": "encouraging_results"}, {"score": 0.002535522160022571, "phrase": "subjects_axis"}, {"score": 0.0025025186963415, "phrase": "concept-type_axis"}, {"score": 0.0024250482323322606, "phrase": "individual_subjects"}, {"score": 0.0022358114311461976, "phrase": "tcp_protocol"}, {"score": 0.0021049977753042253, "phrase": "shared_memory_architecture"}], "paper_keywords": ["Temporal reasoning", " Knowledge-based systems", " Temporal-abstraction", " Distributed computation", " Parallel computation", " Temporal data mining"], "paper_abstract": "Today, data storage capabilities as well as computational power are rapidly increasing. On the one hand, this improvement makes it possible to generate and store a great amount of temporal (time-oriented) data for future query, analysis and discovery of new knowledge. On the other hand, systems and experts are encountering new problems in processing this increased amount of data. The rapid growth in stored time-oriented data necessitates the development of new methods for handling, processing, and interpreting large amounts of temporal data. One approach is to use an automatic summarization process based on predefined knowledge, such the Knowledge-Based Temporal-Abstraction (KBTA) method. This method enables one to summarize and reduce the amount of raw data by creating higher level interpretations based on predefined domain knowledge. Unfortunately, the task of temporal abstraction is inherently computationally expensive, especially when an enormous volume of multivariate data has to be handled and when complex patterns need to be considered. In this research, we address the scalability problem of a temporal-abstraction task that involves processing significantly large amounts of raw data. We propose a new computational framework, the Distributed KBTA (DKBTA), which efficiently distributes the abstraction process among several parallel computational nodes, in order to achieve an acceptable computation time. The DKBTA framework distributes the temporal-abstraction process along one or more computational axes, each of which enables parallelization of one or more temporal-abstraction tasks into which the main temporal-abstraction task is decomposed, such as by different subject groups, concepts types, or abstraction types. We have implemented the DKBTA framework and have evaluated it in a preliminary fashion in the medical and the information security domains, with encouraging results. In our small-scale evaluation, only distribution along the subjects axis and sometimes along the concept-type axis seemed to consistently enhance performance, and only for computations involving individual subjects and not functions of sets of subjects; but this observation might depend on the number of processing units. Additionally, since the communication between the processing units was based on the TCP protocol, we could not observe any speedup even when using two processing units on the same machine. In our further evaluations we plan to use a shared memory architecture in order to exchange data between processing units.", "paper_title": "A distributed architecture for efficient parallelization and computation of knowledge-based temporal abstractions", "paper_id": "WOS:000306121000010"}