{"auto_keywords": [{"score": 0.03726682411720789, "phrase": "design_flow"}, {"score": 0.014707750118717128, "phrase": "high-performance_data-path"}, {"score": 0.00481495049065317, "phrase": "embedded_microprocessor_systems"}, {"score": 0.004746065479362881, "phrase": "high-performance_coprocessor_data-path"}, {"score": 0.004589124394375718, "phrase": "generic_microprocessor_system"}, {"score": 0.004229158339021651, "phrase": "critical_code_segments"}, {"score": 0.004188702178897384, "phrase": "called_kernels"}, {"score": 0.004089239912167375, "phrase": "overall_performance"}, {"score": 0.0037864980290391354, "phrase": "flexible_computational_components"}, {"score": 0.003643607569483598, "phrase": "two-level_template"}, {"score": 0.0034725269588525534, "phrase": "automated_coprocessor_synthesis_method"}, {"score": 0.0031845067058084583, "phrase": "analytical_exploration"}, {"score": 0.0030642636185693054, "phrase": "custom_data-path"}, {"score": 0.0030058503645435455, "phrase": "microprocessor_architecture"}, {"score": 0.0028923335491735564, "phrase": "overall_application_speedups"}, {"score": 0.002864628676257225, "phrase": "six_real-life_applications"}, {"score": 0.0027965187255008647, "phrase": "software_execution"}, {"score": 0.002527654365712841, "phrase": "average_overall_improvement"}, {"score": 0.002467536552997677, "phrase": "small_overhead"}, {"score": 0.002443890721386284, "phrase": "circuit_area"}, {"score": 0.0023066880707738736, "phrase": "theoretical_bounds"}, {"score": 0.002166711569953301, "phrase": "better_performance"}, {"score": 0.0021356322417874106, "phrase": "smaller_area-time_products"}, {"score": 0.0021049977753042253, "phrase": "generated_data-paths"}], "paper_keywords": ["performance", " coprocessor data-path", " design flow", " synthesis", " template units", " chaining", " kernels"], "paper_abstract": "The speedups achieved in a generic microprocessor system by employing a high-performance data-path are presented. The data-path acts as a coprocessor that accelerates time critical code segments, called kernels, thereby increasing the overall performance. The data-path has been previously introduced by the authors and it is composed by Flexible Computational Components (FCCs) that can realize any two-level template of primitive operations. A design flow, integrating the automated coprocessor synthesis method, for executing applications on the system is presented. For evaluating the effectiveness of our coprocessor approach, analytical exploration in respect to the type of the custom data-path and to the microprocessor architecture is performed. The kernel and the overall application speedups of six real-life applications, relative to the software execution on the microprocessor, are estimated using the design flow. Kernel speedups up to 155 are achieved that result in an average overall improvement of 2.78 with a small overhead in circuit area. The design flow achieved the acceleration of the applications near to theoretical bounds. A comparison with another high-performance data-path showed that the proposed coprocessor achieves better performance while having smaller area-time products for the generated data-paths.", "paper_title": "Exploring the speedups of embedded microprocessor systems utilizing a high-performance coprocessor data-path", "paper_id": "WOS:000245006400001"}