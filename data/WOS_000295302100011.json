{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "single_batch-processing_machine"}, {"score": 0.004316722156877335, "phrase": "multiple_jobs"}, {"score": 0.004155742403177802, "phrase": "release_time"}, {"score": 0.004116440453049531, "phrase": "processing_time"}, {"score": 0.004058180509184539, "phrase": "job_size"}, {"score": 0.003962899903266524, "phrase": "mixed_integer_programming_model"}, {"score": 0.0036379729015583975, "phrase": "idle_space"}, {"score": 0.003246985625386632, "phrase": "np"}, {"score": 0.003022186855664124, "phrase": "candidate_list_strategy"}, {"score": 0.002979367540824502, "phrase": "new_method"}, {"score": 0.002937153116494391, "phrase": "heuristic_information"}, {"score": 0.002868116925014397, "phrase": "aco_approach"}, {"score": 0.0028140548269469934, "phrase": "satisfactory_solution"}, {"score": 0.0027741761880779535, "phrase": "reasonable_computational_time"}, {"score": 0.0027348611289528583, "phrase": "extensive_computational_experiments"}, {"score": 0.002708960273193547, "phrase": "appropriate_aco_parameter_values"}, {"score": 0.0026077803487003, "phrase": "proposed_algorithms"}, {"score": 0.0025586128304269616, "phrase": "solution_quality"}, {"score": 0.0025343769150179764, "phrase": "run_time"}, {"score": 0.0024513404432665153, "phrase": "aco_algorithm"}, {"score": 0.0024051153560799335, "phrase": "candidate_list"}, {"score": 0.002326304140277375, "phrase": "genetic_algorithm"}, {"score": 0.0023045366674637325, "phrase": "ga"}, {"score": 0.0022715996768562664, "phrase": "cplex"}, {"score": 0.0021659920594094407, "phrase": "large_job_instances"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Scheduling", " Batch-processing machine", " Makespan (C-max)", " Ant colony optimization"], "paper_abstract": "This paper investigates the problem of minimizing makespan on a single batch-processing machine, and the machine can process multiple jobs simultaneously. Each job is characterized by release time, processing time, and job size. We established a mixed integer programming model and proposed a valid lower bound for this problem. By introducing a definition of waste and idle space (WIS), this problem is proven to be equivalent to minimizing the WIS for the schedule. Since the problem is NP-hard, we proposed a heuristic and an ant colony optimization (ACO) algorithm based on the theorems presented. A candidate list strategy and a new method to construct heuristic information were introduced for the ACO approach to achieve a satisfactory solution in a reasonable computational time. Through extensive computational experiments, appropriate ACO parameter values were chosen and the effectiveness of the proposed algorithms was evaluated by solution quality and run time. The results showed that the ACO algorithm combined with the candidate list was more robust and consistently outperformed genetic algorithm (GA), CPLEX, and the other two heuristics, especially for large job instances. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Makespan minimization on single batch-processing machine via ant colony optimization", "paper_id": "WOS:000295302100011"}