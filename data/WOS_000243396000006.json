{"auto_keywords": [{"score": 0.03795119753784684, "phrase": "input_data"}, {"score": 0.004760765880314089, "phrase": "analytic_query_processing"}, {"score": 0.0046018264570209765, "phrase": "aggregate_function"}, {"score": 0.004448169552315403, "phrase": "relational_join"}, {"score": 0.0035065523764817143, "phrase": "statistically_random_fashion"}, {"score": 0.0032026066791743866, "phrase": "eventual_answer"}, {"score": 0.003078028357912228, "phrase": "probabilistic_confidence_bounds"}, {"score": 0.0027017308406240563, "phrase": "estimate's_accuracy"}, {"score": 0.0025673005153462707, "phrase": "total_time_requirement"}, {"score": 0.0021049977753042253, "phrase": "main_memory"}], "paper_keywords": ["algorithms", " online algorithms", " OLAP", " nonparametric statistics"], "paper_abstract": "One of the most common operations in analytic query processing is the application of an aggregate function to the result of a relational join. We describe an algorithm called the Sort-Merge-Shrink (SMS) Join for computing the answer to such a query over large, disk-based input tables. The key innovation of the SMS join is that if the input data are clustered in a statistically random fashion on disk, then at all times, the join provides an online, statistical estimator for the eventual answer to the query as well as probabilistic confidence bounds. Thus, a user can monitor the progress of the join throughout its execution and stop the join when satisfied with the estimate's accuracy or run the algorithm to completion with a total time requirement that is not much longer than that of other common join algorithms. This contrasts with other online join algorithms, which either do not offer such statistical guarantees or can only offer guarantees so long as the input data can fit into main memory.", "paper_title": "The Sort-Merge-Shrink Join", "paper_id": "WOS:000243396000006"}