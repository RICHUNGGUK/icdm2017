{"auto_keywords": [{"score": 0.039046977343094244, "phrase": "software_ecosystem_architecture"}, {"score": 0.02555090582279664, "phrase": "software_ecosystems"}, {"score": 0.00481495049065317, "phrase": "software_ecosystem_architectures"}, {"score": 0.004698949637072005, "phrase": "telemedicine"}, {"score": 0.004627848087788984, "phrase": "health_care"}, {"score": 0.004516323676817212, "phrase": "effective_way"}, {"score": 0.004096353910862841, "phrase": "application-specific_data_models"}, {"score": 0.00405903443476192, "phrase": "application_stove-pipes"}, {"score": 0.0039854083031404764, "phrase": "telemedical_solutions"}, {"score": 0.003913112416104065, "phrase": "software_ecosystem_approach"}, {"score": 0.0036367606686493227, "phrase": "software_ecosystem"}, {"score": 0.0033185114695278226, "phrase": "existing_software_ecosystems"}, {"score": 0.003228564642402843, "phrase": "new_software_ecosystems"}, {"score": 0.003160289566495475, "phrase": "mixed-method_study"}, {"score": 0.0031124046570971398, "phrase": "case_study"}, {"score": 0.002963980409835403, "phrase": "danish_telemedicine_ecosystem"}, {"score": 0.002704445718144686, "phrase": "software_ecosystem_architecture_concept"}, {"score": 0.0025286424059485745, "phrase": "viable_concept"}, {"score": 0.0025132370375220213, "phrase": "software_ecosystem_analysis"}, {"score": 0.0024153589988125303, "phrase": "software_engineering"}, {"score": 0.0021505234515372504, "phrase": "elsevier_b.v."}, {"score": 0.0021243898166922177, "phrase": "open_access_article"}, {"score": 0.0021049977753042253, "phrase": "cc_by-nc-sa_license"}], "paper_keywords": ["Software ecosystem architecture", " Third-party sponsored software ecosystems", " Telemedicine software ecosystems"], "paper_abstract": "Context: Telemedicine, the provision of health care at a distance, is arguably an effective way of increasing access to, reducing cost of, and improving quality of care. However, the deployment of telemedicine is faced with standards that are hard to use, application-specific data models, and application stove-pipes that inhibit the adoption of telemedical solutions. To which extent can a software ecosystem approach to telemedicine alleviate this? Objective: In this article, we define the concept of software ecosystem architecture as the structure(s) of a software ecosystem comprising elements, relations among them, and properties of both. Our objective is to show how this concept can be used (i) in the analysis of existing software ecosystems and (ii) in the design of new software ecosystems. Method: We performed a mixed-method study that consisted of a case study and an experiment. For (i), we performed a descriptive, revelatory case study of the Danish telemedicine ecosystem and for (ii), we experimentally designed, implemented, and evaluated the architecture of 4S. Results: We contribute in three areas. First, we define the software ecosystem architecture concept that captures organization, business, and software aspects of software ecosystems. Secondly, we apply this concept in our case study and demonstrate that it is a viable concept for software ecosystem analysis. Finally, based on our experiments, we discuss the practice of software engineering for software ecosystems drawn from experience in creating and evolving the 4S telemedicine ecosystem. Conclusion: The concept of software ecosystem architecture can be used analytically and constructively in respectively the analysis and design of software ecosystems. (C) 2014 Elsevier B.V. This is an open access article under the CC BY-NC-SA license (http://creativecommons.org/licenses/by-nc-sa/3.0/).", "paper_title": "Analysis and design of software ecosystem architectures - Towards the 4S telemedicine ecosystem", "paper_id": "WOS:000341349000005"}