{"auto_keywords": [{"score": 0.048412942923644654, "phrase": "hidden_markov_model"}, {"score": 0.00481495049065317, "phrase": "oriented_vulnerability_analyzer"}, {"score": 0.004329630571352367, "phrase": "novel_binary_vulnerability_analyzer"}, {"score": 0.0038930368103015467, "phrase": "hidden_markov_model_a_vulnerability_instruction_library"}, {"score": 0.003500313767208306, "phrase": "binary_frames"}, {"score": 0.003378385493203297, "phrase": "double_precision_analysis_executable_programs"}, {"score": 0.0031845067058084613, "phrase": "structurized_code_sequences"}, {"score": 0.003073545175760353, "phrase": "vil"}, {"score": 0.0030017207229983385, "phrase": "code_sequences"}, {"score": 0.0024842242921857705, "phrase": "hmm_based_vulnerability_analyzer"}, {"score": 0.0023415390666563177, "phrase": "potential_vulnerabilities"}, {"score": 0.002286781334850213, "phrase": "executable_programs_experimental_results"}, {"score": 0.0022070310530794097, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "latest_static_analyzers"}], "paper_keywords": ["executable program", " binary", " double precision analysis", " vulner", " ability instruction library", " Hidden Markov Model"], "paper_abstract": "The letter proposes a novel binary vulnerability analyzer for executable programs that is based on the Hidden Markov Model A vulnerability instruction library (VIL) is primarily constructed by collecting binary frames located by double precision analysis Executable programs are then converted into structurized code sequences with the VIL The code sequences are essentially context sensitive which can be modeled by Hidden Markov Model (HMM) Finally the HMM based vulnerability analyzer is built to recognize potential vulnerabilities of executable programs Experimental results show the proposed approach achieves lower false positive/negative rate than latest static analyzers", "paper_title": "Binary Oriented Vulnerability Analyzer Based on Hidden Markov Model", "paper_id": "WOS:000285434100032"}