{"auto_keywords": [{"score": 0.04550288640963527, "phrase": "logic_simulation"}, {"score": 0.00481495049065317, "phrase": "cycle_based_logic_simulation_using_graphics_processing_units"}, {"score": 0.004579780586951551, "phrase": "electronic_system_design"}, {"score": 0.004466519142879166, "phrase": "design_effort"}, {"score": 0.004291073117901643, "phrase": "major_verification_technique"}, {"score": 0.004205940624913343, "phrase": "logic_simulation_results"}, {"score": 0.004164007198843467, "phrase": "great_savings"}, {"score": 0.004122490120202936, "phrase": "shorter_time"}, {"score": 0.00392100783796804, "phrase": "graphics_processing_units"}, {"score": 0.0037106898330901534, "phrase": "special-purpose_application_accelerators"}, {"score": 0.0036188435232325337, "phrase": "conventional_graphics_applications"}, {"score": 0.0035648266669315943, "phrase": "new_generations"}, {"score": 0.0035292625231068517, "phrase": "gpu_architecture"}, {"score": 0.0034940519373446335, "phrase": "easier_programmability"}, {"score": 0.003459191419478298, "phrase": "increased_generality"}, {"score": 0.0033905067962602515, "phrase": "tremendous_memory_bandwidth"}, {"score": 0.003356675879109443, "phrase": "computational_power"}, {"score": 0.0033231814056233103, "phrase": "traditional_gpus"}, {"score": 0.003240895431893266, "phrase": "parallel_cycle-based_logic_simulation_algorithm"}, {"score": 0.0031765314093444956, "phrase": "inverter_graphs"}, {"score": 0.003097865379563127, "phrase": "design_representations"}, {"score": 0.002976019715894587, "phrase": "effective_representation"}, {"score": 0.002873331232538783, "phrase": "similar_benefits"}, {"score": 0.0026384167183586015, "phrase": "independent_blocks"}, {"score": 0.0025730425700096365, "phrase": "massively_parallel_gpu_architecture"}, {"score": 0.0025219085140220773, "phrase": "concurrent_threads"}, {"score": 0.002224510044064184, "phrase": "first_and_second_clustering_algorithms"}, {"score": 0.0021369416775353107, "phrase": "significant_reduction"}, {"score": 0.0021049977753042253, "phrase": "overall_design_cycle"}], "paper_keywords": ["Graphics processing units (GPU)", " Parallel logic simulation", " Cycle based simulation", " And inverter graph (AIG)"], "paper_abstract": "Verification has grown to dominate the cost of electronic system design, consuming about 60% of design effort. Among several verification techniques, logic simulation remains the major verification technique. Speeding up logic simulation results in great savings and shorter time-to-market. We parallelize logic simulation using Graphics Processing Units (GPUs). In the past, GPUs were special-purpose application accelerators, suitable only for conventional graphics applications. The new generations of GPU architecture provide easier programmability and increased generality while maintaining the tremendous memory bandwidth and computational power of traditional GPUs. We develop a parallel cycle-based logic simulation algorithm that uses And Inverter Graphs (AIGs) as design representations. AIGs have proven to be an effective representation for various design automation applications, and we obtain similar benefits for speeding up logic simulation. We develop two clustering algorithms that partition the gates in the designs into independent blocks. Our algorithms exploit the massively parallel GPU architecture featuring thousands of concurrent threads, fast memory, and memory coalescing for optimizations. We demonstrate up-to 5x and 21x speedups on several benchmarks using our simulation system with the first and second clustering algorithms, respectively. Our work ultimately results in significant reduction in the overall design cycle.", "paper_title": "Speeding Up Cycle Based Logic Simulation Using Graphics Processing Units", "paper_id": "WOS:000291043700006"}