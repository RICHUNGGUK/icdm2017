{"auto_keywords": [{"score": 0.0374786552751376, "phrase": "panda"}, {"score": 0.00481495049065317, "phrase": "pareto-optimal_cloud_bursting"}, {"score": 0.004506968388996092, "phrase": "independent_operations"}, {"score": 0.004378469469879815, "phrase": "public_clouds"}, {"score": 0.0042495517546698005, "phrase": "isomap"}, {"score": 0.004236074477264561, "phrase": "private_computer_system"}, {"score": 0.0041666157975446564, "phrase": "appealing_alternative"}, {"score": 0.0038678251731669865, "phrase": "performance_to_cost_ratio"}, {"score": 0.003820144626025562, "phrase": "cost_efficiency"}, {"score": 0.0037981127001591006, "phrase": "pareto-optimality"}, {"score": 0.003680587852807675, "phrase": "scheduling_and_resource_allocation_strategies"}, {"score": 0.0034879261743468574, "phrase": "static_scheduling"}, {"score": 0.0033883824438527316, "phrase": "private_and_public_clouds"}, {"score": 0.003264547032549398, "phrase": "fully_polynomial-time_approximation_scheme"}, {"score": 0.0031845067058084583, "phrase": "novel_scheduling_algorithm"}, {"score": 0.003093595537995837, "phrase": "best_trade-off_point"}, {"score": 0.002643386043540555, "phrase": "real-world_bot_application"}, {"score": 0.0025678829712650437, "phrase": "'multi-cloud'_environment"}, {"score": 0.0024637379406427856, "phrase": "scheduling_quality"}, {"score": 0.002373615081691254, "phrase": "measurable_distance"}, {"score": 0.002344311033783139, "phrase": "optimal_solution"}, {"score": 0.0021049977753042253, "phrase": "performance_errors"}], "paper_keywords": ["Cloud computing", " cloud bursting", " resource allocation", " cost efficiency", " pareto-frontier", " approximation algorithm"], "paper_abstract": "Large-scale Bag-of-Tasks (BoT) applications are characterized by their massively parallel, yet independent operations. The use of resources in public clouds to dynamically expand the capacity of a private computer system might be an appealing alternative to cope with such massive parallelism. To fully realize the benefit of this 'cloud bursting', the performance to cost ratio (or cost efficiency) must be thoroughly studied and incorporated into scheduling and resource allocation strategies. In this paper, we present PANDA, a framework for static scheduling BoT applications across resources in both private and public clouds. The framework at the core incorporates a fully polynomial-time approximation scheme (FPTAS) as a novel scheduling algorithm, which generates schedules with the best trade-off point between cost and performance; hence Pareto-optimality. We have theoretically discussed the complexity and correctness of our algorithms, and experimentally verified their efficacy and practicality using ISOMAP-a widely-used nonlinear manifold method as a real-world BoT application. Our evaluation conducted in a 'multi-cloud' environment of our 40-core private system and Amazon EC2 public cloud demonstrates the scheduling quality of PANDA is guaranteed to be within a measurable distance from the optimal solution. Results obtained from our experiments show such quality is 8 percent or less from the optimum. We also show the sensitivity and robustness of our scheduling solutions against performance errors in both resources and applications.", "paper_title": "Pareto-Optimal Cloud Bursting", "paper_id": "WOS:000342179600018"}