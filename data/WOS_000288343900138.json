{"auto_keywords": [{"score": 0.036317287873185625, "phrase": "sparse"}, {"score": 0.00481495049065317, "phrase": "semantic_web_technologies"}, {"score": 0.0045404698551856125, "phrase": "negative_consequences"}, {"score": 0.0036224139706218916, "phrase": "software_project"}, {"score": 0.003573626511295813, "phrase": "challenging_task"}, {"score": 0.003525493807130663, "phrase": "expert_knowledge"}, {"score": 0.003235305151177897, "phrase": "software_project_managers"}, {"score": 0.0031917146566068245, "phrase": "antipattern_detection_process"}, {"score": 0.002889444701599236, "phrase": "semantic_relationships"}, {"score": 0.002824829396721492, "phrase": "antipattern_definitions"}, {"score": 0.0027616550517346066, "phrase": "pellet_dl_reasoner"}, {"score": 0.002675571068567923, "phrase": "cool_language"}, {"score": 0.002639502113350897, "phrase": "clips_production_rule_engine"}, {"score": 0.0025113494092413604, "phrase": "compact_representation"}, {"score": 0.0024774888010414206, "phrase": "antipattern_knowledge"}, {"score": 0.0024111277643627154, "phrase": "object-oriented_clips_production_rules"}, {"score": 0.0023148964315569866, "phrase": "initial_symptoms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Antipatterns", " Symptom-based retrieval", " OWL ontology", " Production rules", " Objects"], "paper_abstract": "Antipatterns provide information on commonly occurring solutions to problems that generate negative consequences. The number of software project management antipatterns that appears in the literature and the Web increases to the extent that makes using antipatterns problematic. Furthermore, antipatterns are usually inter-related and rarely appear in isolation. As a result, detecting which antipatterns exist in a software project is a challenging task which requires expert knowledge. This paper proposes SPARSE, an OWL ontology based knowledge-based system that aims to assist software project managers in the antipattern detection process. The antipattern ontology documents antipatterns and how they are related with other antipatterns through their causes, symptoms and consequences. The semantic relationships that derive from the antipattern definitions are determined using the Pellet DL reasoner and they are transformed into the COOL language of the CLIPS production rule engine. The purpose of this transformation is to create a compact representation of the antipattern knowledge, enabling a set of object-oriented CLIPS production rules to run and retrieve antipatterns relevant to some initial symptoms. SPARSE is exemplified through 31 OWL ontology antipattern instances of software development antipatterns that appear on the Web. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "SPARSE: A symptom-based antipattern retrieval knowledge-based system using Semantic Web technologies", "paper_id": "WOS:000288343900138"}