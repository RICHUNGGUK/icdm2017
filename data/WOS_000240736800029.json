{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.013302921611721683, "phrase": "nurbs"}, {"score": 0.004697655699119423, "phrase": "deformable_parameterized_surfaces"}, {"score": 0.004564401713056939, "phrase": "current_programmable_gpus"}, {"score": 0.004152502093643003, "phrase": "higher_level_geometry"}, {"score": 0.00388800655625083, "phrase": "per-frame_operation"}, {"score": 0.003793206550770237, "phrase": "parallel_processing_power"}, {"score": 0.003746705662242497, "phrase": "gpu."}, {"score": 0.0036855132234738736, "phrase": "efficient_accurate_collision_detection"}, {"score": 0.003284361433827464, "phrase": "gpu-based_approaches"}, {"score": 0.003204244482595627, "phrase": "cpu."}, {"score": 0.0031132086055691214, "phrase": "novel_gpu-based_collision_detection_method"}, {"score": 0.0029631248341951064, "phrase": "aforementioned_approaches"}, {"score": 0.0029147175927233546, "phrase": "individual_parameterized_surfaces"}, {"score": 0.002890810475014827, "phrase": "stenciled_geometry_images"}, {"score": 0.002843581231499026, "phrase": "gpu-optimized_bounding_volume_hierarchies"}, {"score": 0.0027064605585684696, "phrase": "optimized_gpu-based_hierarchical_collision_detection_algorithm"}, {"score": 0.0025865679621853667, "phrase": "collision_detection"}, {"score": 0.002565345470805401, "phrase": "deformable_trimmed_nurbs_models"}, {"score": 0.0025130460190930554, "phrase": "important_problem"}, {"score": 0.002333421318779658, "phrase": "recent_approach"}, {"score": 0.002139986159978777, "phrase": "deformable_models"}, {"score": 0.0021049977753042253, "phrase": "nurbs_patches"}], "paper_keywords": [""], "paper_abstract": "Based on the potential of current programmable GPUs' recently several approaches were developed that use the GPU to calculate deformations of surfaces like the folding of cloth or to convert higher level geometry to renderable primitives like NURBS or subdivision surfaces. These algorithms are realized as a per-frame operation and take advantage of the parallel processing power of the GPU. Unfortunately, an efficient accurate collision detection, that is necessary for the simulation itself or for the interaction with and editing of the objects, can currently not be integrated seamlessly into these GPU-based approaches without switching back to the CPU. In this paper we describe a novel GPU-based collision detection method for deformable parameterized surfaces that can easily be combined with the aforementioned approaches. Representing the individual parameterized surfaces by stenciled geometry images allows to generate GPU-optimized bounding volume hierarchies in real-time that serve as a basis for an optimized GPU-based hierarchical collision detection algorithm. As a test case we applied our algorithm to the collision detection of deformable trimmed NURBS models, which is an important problem in industry. For the trimming and tessellation of the NURBS on the GPU we used a recent approach [GBK05] and combined it with our collision detection algorithm. This way we are able to render and check collisions for deformable models consisting of several thousands of trimmed NURBS patches in real-time.", "paper_title": "GPU-based collision detection for deformable parameterized surfaces", "paper_id": "WOS:000240736800029"}