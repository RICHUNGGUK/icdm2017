{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "efficient_rollback_recovery"}, {"score": 0.004721162131188487, "phrase": "rollback_recovery"}, {"score": 0.004674952036988355, "phrase": "large-scale_long-running_applications"}, {"score": 0.004539005582217309, "phrase": "pessimistic_message_logging_protocols"}, {"score": 0.004154332348800334, "phrase": "fault-free_execution"}, {"score": 0.004053362743156545, "phrase": "coordinated_checkpointing_protocols"}, {"score": 0.004013662619667083, "phrase": "message_logging"}, {"score": 0.002986969236641105, "phrase": "proposed_conversion"}, {"score": 0.0028574164693918433, "phrase": "unbearable_logging_overhead"}, {"score": 0.0027605398374811667, "phrase": "proper_logging"}, {"score": 0.00266693888510356, "phrase": "unacceptable_coordinating_overhead"}, {"score": 0.0023346234464901978, "phrase": "recovery_process"}, {"score": 0.0022890371899188466, "phrase": "recovery_efficiency"}, {"score": 0.0022665781920241245, "phrase": "performance_evaluation_results"}, {"score": 0.0021896891011033105, "phrase": "overall_system_overhead"}], "paper_keywords": ["rollback recovery", " logging overhead", " coordinating overhead", " performance optimization"], "paper_abstract": "In the rollback recovery of large-scale long-running applications in a distributed environment, pessimistic message logging protocols enable failed processes to recover independently, though at the expense of logging every message synchronously during fault-free execution. In contrast, coordinated checkpointing protocols avoid message logging, but they are poor in scalability with a sharply increased coordinating overhead as the system grows. With the aim of achieving efficient rollback recovery by trading off logging overhead and coordinating overhead, this paper suggests a partitioning of the system into clusters, and then presents a scheme to implement the conversion between these overheads. Using the proposed conversion, coordination can be introduced to reduce the unbearable logging overhead found in some systems, whereas proper logging can be employed to alleviate the unacceptable coordinating overhead in others. Furthermore, heuristics are introduced to address the issue of how to partition the system into clusters in order to speed up the recovery process and to improve recovery efficiency. Performance evaluation results indicate that our scheme can lower the overall system overhead effectively. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Trading off logging overhead and coordinating overhead to achieve efficient rollback recovery", "paper_id": "WOS:000264852400005"}