{"auto_keywords": [{"score": 0.04000242598370857, "phrase": "edp"}, {"score": 0.00481495049065317, "phrase": "all-or-nothing_multicommodity_flow_problem"}, {"score": 0.004360412703519539, "phrase": "unit_demand"}, {"score": 0.004115267130977749, "phrase": "multicommodity_flow"}, {"score": 0.0038306894467186985, "phrase": "edge-disjoint_path_problem"}, {"score": 0.003716273882758735, "phrase": "integral_flows"}, {"score": 0.0036052633308076933, "phrase": "maximum_routable_subset"}, {"score": 0.0035461111918923117, "phrase": "capacitated_tree"}, {"score": 0.0034038144701215205, "phrase": "np"}, {"score": 0.0032287289440915187, "phrase": "cardinality_case"}, {"score": 0.003175734975557754, "phrase": "weighted_case"}, {"score": 0.003097865379563127, "phrase": "natural_linear_programming_relaxation"}, {"score": 0.003072334174479404, "phrase": "all-or-nothing_flow_problem"}, {"score": 0.0030135741897058844, "phrase": "general_undirected_graphs"}, {"score": 0.0029722900280316216, "phrase": "sharp_contrast"}, {"score": 0.0028127163745564777, "phrase": "best_approximation_ratio"}, {"score": 0.002504880563070155, "phrase": "maximum_demand"}, {"score": 0.002409927844969004, "phrase": "online_admission_control_version"}, {"score": 0.0022804767338275023, "phrase": "accepted_pairs"}, {"score": 0.002224510044064184, "phrase": "randomized_algorithm"}, {"score": 0.002200077887697072, "phrase": "polylogarithmic_competitive_ratio"}, {"score": 0.002163930783583212, "phrase": "accepted_requests"}, {"score": 0.002122507495446441, "phrase": "edge_capacities"}], "paper_keywords": ["all-or-nothing", " multicommodity flow", " routing", " undirected graphs", " approximation"], "paper_abstract": "We consider the all-or-nothing multicommodity flow problem in general graphs. We are given a capacitated undirected graph G = (V, E, u) and a set of k node pairs s(1)t(1), s(2)t(2), ... , s(k)t(k). Each pair has a unit demand. A subset S of {1, 2, ... , k} is routable if there is a multicommodity flow in G that simultaneously sends one unit of flow between s(i) and t(i) for each i in S. Note that this differs from the edge-disjoint path problem (EDP) in that we do not insist on integral flows for the pairs. The objective is to find a maximum routable subset S. When G is a capacitated tree, the problem already generalizes b-matchings, and even in this case it is NP-hard and APX-hard to approximate. For trees, a 2-approximation is known for the cardinality case and a 4-approximation for the weighted case. In this paper we show that the natural linear programming relaxation for the all-or-nothing flow problem has a polylogarithmic integrality gap in general undirected graphs. This is in sharp contrast to EDP, where the gap is known to be Theta(root n); this ratio is also the best approximation ratio currently known for edp. Our algorithm extends to the case where each pair s(i)t(i) has a demand d(i) associated with it and we need to completely route d(i) to get credit for pair i; we assume that the maximum demand of the pairs is at most the minimum capacity of the edges. We also consider the online admission control version where pairs arrive online and the algorithm has to decide immediately on its arrival whether to accept it and the accepted pairs have to be routed. We obtain a randomized algorithm which has a polylogarithmic competitive ratio for maximizing throughput of the accepted requests if it is allowed to violate edge capacities by a (2 + epsilon) factor.", "paper_title": "THE ALL-OR-NOTHING MULTICOMMODITY FLOW PROBLEM", "paper_id": "WOS:000323889100002"}