{"auto_keywords": [{"score": 0.046625865839435295, "phrase": "control_logic"}, {"score": 0.00947226710994177, "phrase": "proposed_method"}, {"score": 0.007985761194782746, "phrase": "fpu."}, {"score": 0.006730948388945259, "phrase": "area_overhead"}, {"score": 0.006584939164285149, "phrase": "fpu_size"}, {"score": 0.00481495049065317, "phrase": "floating-point_unit"}, {"score": 0.004628223381645729, "phrase": "nonintrusive_concurrent_error_detection"}, {"score": 0.004587722349336796, "phrase": "ced"}, {"score": 0.00440976345264104, "phrase": "contemporary_floating-point_unit"}, {"score": 0.004146510711518748, "phrase": "logic_errors"}, {"score": 0.004092168350316413, "phrase": "extensive_data_path_corruption"}, {"score": 0.004003169429008801, "phrase": "high_probability"}, {"score": 0.0038141000450978746, "phrase": "exponent_monitoring"}, {"score": 0.003539252646181146, "phrase": "relatively_simple_operations"}, {"score": 0.003447035529485425, "phrase": "significantly_lower_overhead"}, {"score": 0.0034018288705284427, "phrase": "classical_approach"}, {"score": 0.0031151864044353245, "phrase": "control_logic_duplication"}, {"score": 0.002790511479398411, "phrase": "transient_errors"}, {"score": 0.002753891109273246, "phrase": "fpu_control_logic"}, {"score": 0.0026585629592360085, "phrase": "ancillary_benefit"}, {"score": 0.0025778546800417808, "phrase": "data_path_errors"}, {"score": 0.002339771435910601, "phrase": "classical_residue_code-based_method"}, {"score": 0.002248816575548875, "phrase": "complete_ced_solution"}, {"score": 0.0022192891418394535, "phrase": "entire_fpu"}, {"score": 0.0021049977753042253, "phrase": "area_cost"}], "paper_keywords": ["Error correction", " control logic", " floating point", " IEEE-754"], "paper_abstract": "We present a nonintrusive concurrent error detection (CED) method for protecting the control logic of a contemporary floating-point unit (FPU). The proposed method is based on the observation that control logic errors lead to extensive data path corruption and affect, with high probability, the exponent part of the IEEE-754 floating-point representation. Thus, exponent monitoring can be utilized to detect errors in the control logic of the FPU. Predicting the exponent involves relatively simple operations; therefore, our method incurs significantly lower overhead than the classical approach of duplicating the control logic of the FPU. Indeed, experimental results on the openSPARC T1 processor using SPEC2006FP benchmarks show that as compared to control logic duplication, which incurs an area overhead of 17.9 percent of the FPU size, our method incurs an area overhead of only 5.8 percent yet still achieves detection of over 93 percent of transient errors in the FPU control logic. Moreover, the proposed method offers the ancillary benefit of also detecting 98.1 percent of the data path errors that affect the exponent, which cannot be detected via duplication of control logic. Finally, when combined with a classical residue code-based method for the fraction, our method leads to a complete CED solution for the entire FPU which provides a coverage of 94.1 percent of all errors at an area cost of 16.32 percent of the FPU size.", "paper_title": "Low-Cost Concurrent Error Detection for Floating-Point Unit (FPU) Controllers", "paper_id": "WOS:000319601900008"}