{"auto_keywords": [{"score": 0.040918691207282594, "phrase": "timed_csp"}, {"score": 0.00481495049065317, "phrase": "timed_csp._a"}, {"score": 0.0047761092701293474, "phrase": "well-established_specification"}, {"score": 0.004440277230269978, "phrase": "high-level_events"}, {"score": 0.004229556887896042, "phrase": "remaining_low-level_view"}, {"score": 0.003964007795174772, "phrase": "workable_definition"}, {"score": 0.0036257863613963245, "phrase": "deterministic_ones"}, {"score": 0.002865710140187219, "phrase": "resulting_timed_noninterference_check"}, {"score": 0.0027295084882654917, "phrase": "recent_extension"}, {"score": 0.0026856300031124665, "phrase": "fdr"}, {"score": 0.002599763359352916, "phrase": "discrete_version"}, {"score": 0.002456148932305311, "phrase": "extended_theory"}], "paper_keywords": ["CSP", " Timed CSP", " Noninterference", " Refinement"], "paper_abstract": "A well-established specification of noninterference in CSP is that, when high-level events are appropriately abstracted, the remaining low-level view is deterministic. This is not a workable definition in Timed CSP, where many processes cannot be refined to deterministic ones. We argue that in fact \"deterministic\" should be replaced by \"maximally refined\" in the definition above. We show how to automate the resulting timed noninterference check within the context of the recent extension of FDR to analyse a discrete version of Timed CSP, and how an extended theory of digitisation has the potential both to create more accurate specifications and to infer when processes are noninterfering in the more usual continuous-time semantics.", "paper_title": "Checking noninterference in Timed CSP", "paper_id": "WOS:000313073100002"}