{"auto_keywords": [{"score": 0.04515299348767128, "phrase": "bt"}, {"score": 0.033001720267461156, "phrase": "target_architecture"}, {"score": 0.00481495049065317, "phrase": "new_added_hardware_feature"}, {"score": 0.004698000536608171, "phrase": "underlying_instruction_set_architecture"}, {"score": 0.004406994912939125, "phrase": "existing_code"}, {"score": 0.004363846362238565, "phrase": "binary_translation"}, {"score": 0.004195418010131832, "phrase": "already_compiled_applications"}, {"score": 0.004154332348800334, "phrase": "different_architectures"}, {"score": 0.004033464035028803, "phrase": "new_possibilities"}, {"score": 0.003877737556673229, "phrase": "specific_isa"}, {"score": 0.0037463983616303786, "phrase": "bt_inherent_performance_penalty"}, {"score": 0.0036553070575015344, "phrase": "new_mechanism"}, {"score": 0.003584025547693836, "phrase": "dynamic_two-level_binary_translation_system"}, {"score": 0.0033288399506044763, "phrase": "intermediate_machine_language"}, {"score": 0.0032160319265621285, "phrase": "already_translated_instructions"}, {"score": 0.002928682556953258, "phrase": "radically_different_isas"}, {"score": 0.0028574164693918433, "phrase": "different_target_architectures"}, {"score": 0.0027741761880779535, "phrase": "first_effort"}, {"score": 0.0026020254041372723, "phrase": "mips_assembly"}, {"score": 0.0022665781920241245, "phrase": "binary_compatibility"}, {"score": 0.002233301265743633, "phrase": "performance_improvements"}, {"score": 0.0021363670305843403, "phrase": "native_execution"}], "paper_keywords": ["Binary translation", " Reconfigurable architecture", " Code optimization", " Transparent execution"], "paper_abstract": "In these days, every new added hardware feature must not change the underlying Instruction Set Architecture (ISA), in order to avoid adaptation or recompilation of existing code. Binary translation (BT) allows the execution of already compiled applications on different architectures. Therefore, it opens new possibilities for designers, previously tied to a specific ISA and all its legacy hardware issues. To overcome the BT inherent performance penalty, we propose a new mechanism based on a dynamic two-level binary translation system. While the first level is responsible for the BT de facto to an intermediate machine language, the second level optimizes the already translated instructions to be executed on the target architecture. The system is totally flexible: it supports the porting of radically different ISAs and the employment of different target architectures. This paper presents the first effort towards this direction: it translates code implemented in the x86 ISA to MIPS assembly (the intermediate language), which will be optimized by the target architecture: a dynamically reconfigurable array. We show that it is possible to maintain binary compatibility, with performance improvements and no energy losses, when compared to native execution. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Towards a multiple-ISA embedded system", "paper_id": "WOS:000317456300004"}