{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "limited_workspace"}, {"score": 0.004688321299229397, "phrase": "excellent_algorithmic_paradigm"}, {"score": 0.004492573860101133, "phrase": "general_scheme"}, {"score": 0.004374385639298755, "phrase": "-search_technique"}, {"score": 0.004191690483929023, "phrase": "space-efficient_manner"}, {"score": 0.003767517649628532, "phrase": "traditional_model"}, {"score": 0.003571751184289622, "phrase": "large_number"}, {"score": 0.0031930184711888867, "phrase": "tremendous_practical_usage"}, {"score": 0.0031422859551159506, "phrase": "theoretical_implication"}, {"score": 0.0030758904011907533, "phrase": "minimum_enclosing_circle"}, {"score": 0.002947266048104005, "phrase": "n_points"}, {"score": 0.002869613770219469, "phrase": "linear_programming_problems"}, {"score": 0.0027349450784503273, "phrase": "in-place_setting"}, {"score": 0.002497531381123025, "phrase": "read-only_setup"}, {"score": 0.0023802825369325354, "phrase": "proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Prune-and-search", " Space-efficient algorithms", " In-place algorithms", " Read-only memory algorithms", " Minimum enclosing circle", " Low dimensional linear programming"], "paper_abstract": "Prune-and-search is an excellent algorithmic paradigm for solving various optimization problems. We provide a general scheme for prune-and-search technique and show how to implement it in space-efficient manner. We consider both the in-place and read-only model which have several advantages compared to the traditional model of computation. Our technique can be applied to a large number of problems which accept prune-and-search. For examples, we study the following problems each of which has tremendous practical usage apart from theoretical implication: computing the minimum enclosing circle (MEC) of a set of n points in R-2, and linear programming problems with two and three variables and n constraints. In the in-place setting, all these problems can be solved in O(n) time using O(1) extra-space. In the read-only setup, the time and extra-space complexities of the proposed algorithms for all these problems are O (n polylog(n)) and O (polylog(n)), respectively. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Prune-and-search with limited workspace", "paper_id": "WOS:000345822400004"}