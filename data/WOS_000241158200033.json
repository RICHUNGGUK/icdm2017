{"auto_keywords": [{"score": 0.04940203756018457, "phrase": "data_streams"}, {"score": 0.015719716506582538, "phrase": "frequent_patterns"}, {"score": 0.0035189057079817285, "phrase": "inherent_characteristics"}, {"score": 0.0034690732089830045, "phrase": "data_stream_environments"}, {"score": 0.003371508176308189, "phrase": "high_load_conditions"}, {"score": 0.0031845067058084583, "phrase": "system_resources"}, {"score": 0.003094920033010818, "phrase": "incoming_transactions"}, {"score": 0.0030078460113945136, "phrase": "unwanted_latencies"}, {"score": 0.0028006988338192375, "phrase": "data_mining_models"}, {"score": 0.002664221051021009, "phrase": "small_window"}, {"score": 0.002326304140277375, "phrase": "overload_situations"}, {"score": 0.0021971473452127126, "phrase": "probabilistic_model"}], "paper_keywords": [""], "paper_abstract": "Most algorithms that focus on discovering frequent patterns from data streams assumed that the machinery is capable of managing all the incoming transactions without any delay; or without the need to drop transactions. However, this assumption is often impractical due to the inherent characteristics of data stream environments. Especially under high load conditions, there is often a shortage of system resources to process the incoming transactions. This causes unwanted latencies that in turn, affects the applicability of the data mining models produced - which often has a small window of opportunity. We propose a load shedding algorithm to address this issue. The algorithm adaptively detects overload situations and drops transactions from data streams using a probabilistic model. We tested our algorithm on both synthetic and real-life datasets to verify the feasibility of our algorithm.", "paper_title": "Adaptive load shedding for mining frequent patterns from data streams", "paper_id": "WOS:000241158200033"}