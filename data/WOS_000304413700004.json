{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "runtime_deadlock_detection"}, {"score": 0.0046394362688524475, "phrase": "interconnection_networks"}, {"score": 0.004596561972944185, "phrase": "adaptive_routing"}, {"score": 0.004388035083357706, "phrase": "performance_degradation"}, {"score": 0.003961842092184655, "phrase": "deadlock_detection_method"}, {"score": 0.003907013105134715, "phrase": "runtime_transitive_closure"}, {"score": 0.00372965096877929, "phrase": "deadlock-equivalence_sets"}, {"score": 0.0034303736977646135, "phrase": "detection_scheme"}, {"score": 0.003336031521101184, "phrase": "true_deadlocks"}, {"score": 0.0033051623473192814, "phrase": "false_alarms"}, {"score": 0.003125835572347772, "phrase": "heuristic_approaches"}, {"score": 0.0030825404960282713, "phrase": "distributed_tc-network_architecture"}, {"score": 0.002997735656669146, "phrase": "noc_infrastructure"}, {"score": 0.0028882701690741467, "phrase": "detection_mechanism"}, {"score": 0.0028482561434303886, "phrase": "detailed_hardware_realization_architectures"}, {"score": 0.0027062100658653485, "phrase": "cycle-accurate_simulator"}, {"score": 0.0026317312518257803, "phrase": "proposed_method"}, {"score": 0.0025712297362596574, "phrase": "timing-based_deadlock_detection_mechanisms"}, {"score": 0.0024543571925896073, "phrase": "energy_wastage"}, {"score": 0.0023867931451842087, "phrase": "real-world_application"}, {"score": 0.002331909406363425, "phrase": "timing-based_methods"}, {"score": 0.002236272403824371, "phrase": "tc-network_method"}, {"score": 0.0021049977753042253, "phrase": "hardware_overhead"}], "paper_keywords": ["Networks-on-chip", " deadlock detection", " dynamic programming", " transitive closure computation", " performance analysis"], "paper_abstract": "Interconnection networks with adaptive routing are susceptible to deadlock, which could lead to performance degradation or system failure. Detecting deadlocks at runtime is challenging because of their highly distributed characteristics. In this paper, we present a deadlock detection method that utilizes runtime transitive closure (TC) computation to discover the existence of deadlock-equivalence sets, which imply loops of requests in networks-on-chip (NoCs). This detection scheme guarantees the discovery of all true deadlocks without false alarms in contrast with state-of-the-art approximation and heuristic approaches. A distributed TC-network architecture, which couples with the NoC infrastructure, is also presented to realize the detection mechanism efficiently. Detailed hardware realization architectures and schematics are also discussed. Our results based on a cycle-accurate simulator demonstrate the effectiveness of the proposed method. It drastically outperforms timing-based deadlock detection mechanisms by eliminating false detections and, thus, reducing energy wastage in retransmission for various traffic scenarios including real-world application. We found that timing-based methods may produce two orders of magnitude more deadlock alarms than the TC-network method. Moreover, the implementations presented in this paper demonstrate that the hardware overhead of TC-networks is insignificant.", "paper_title": "Embedded Transitive Closure Network for Runtime Deadlock Detection in Networks-on-Chip", "paper_id": "WOS:000304413700004"}