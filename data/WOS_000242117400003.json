{"auto_keywords": [{"score": 0.0342818172727244, "phrase": "flow-shop_scheduling_problem"}, {"score": 0.015719716506582538, "phrase": "double_branch-and-bound_algorithm"}, {"score": 0.013517038755261744, "phrase": "storage_space"}, {"score": 0.013096074464771294, "phrase": "bound_algorithm"}, {"score": 0.011825732847403146, "phrase": "first_step"}, {"score": 0.011416549052765908, "phrase": "local_search_procedure"}, {"score": 0.004313643010028869, "phrase": "permutation_flow-shop_scheduling_problem"}, {"score": 0.004032441847334232, "phrase": "improved_branch"}, {"score": 0.003947492797744999, "phrase": "parallel_computation"}, {"score": 0.00376950244909, "phrase": "initial_good_solution"}, {"score": 0.0037295765964056255, "phrase": "auxiliary_heuristics"}, {"score": 0.003511159930253876, "phrase": "second_step"}, {"score": 0.0033527773742790695, "phrase": "neh"}, {"score": 0.0028984332556216946, "phrase": "nabeshima"}, {"score": 0.002877912855903293, "phrase": "lageweg"}, {"score": 0.002767613012044169, "phrase": "reversibility_property"}, {"score": 0.0026900523406547827, "phrase": "double_branch"}, {"score": 0.00257775722777195, "phrase": "inverse_instances"}, {"score": 0.0024439412207268355, "phrase": "lompen"}, {"score": 0.002204566591599102, "phrase": "similar_way"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["scheduling", " permutation flow-shop", " blocking flow-shop", " double branch-and-bound algorithm"], "paper_abstract": "In this paper we face the permutation flow-shop scheduling problem with a makespan objective function in two variants, with and without storage space between machines. We use an improved branch and bound algorithm, suitable for parallel computation, to solve these problems, and auxiliary heuristics to attain an initial good solution. The auxiliary heuristics proposed are built by two steps: in the first step a permutation is obtained; in the second step a local search procedure is applied. The improvement obtained by the local search procedure on NEH heuristic as first step is shown. Since the flow-shop scheduling problem with storage space is a relaxation of the problem without storage space, some elements and procedures developed for that problem can be used in both problems. In particular, some bounding procedures, for instance Nabeshima or Lageweg bounding schema, can be adapted. Moreover, the reversibility property holds on both problems. Consequently a double branch and bound algorithm can be applied simultaneously to the direct and the inverse instances. The same sets of data are submitted to heuristics and to the double branch-and-bound algorithm, LOMPEN, assuming first they are instances of flow-shop scheduling problem with storage space and later they are instances of flow-shop scheduling problem without storage space. The algorithms are coded in a similar way; therefore the behaviour and performance can be compared. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Different behaviour of a double branch-and-bound algorithm on Fm vertical bar prmu vertical bar C-max,, and Fm vertical bar block vertical bar C-max problems", "paper_id": "WOS:000242117400003"}