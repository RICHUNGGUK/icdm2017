{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "concurrent_programs"}, {"score": 0.004723322467153553, "phrase": "predicate_sequencing_constraints"}, {"score": 0.004589124394375718, "phrase": "predicate_sequencing_constraint_logic"}, {"score": 0.0042495320879288615, "phrase": "test_purpose"}, {"score": 0.004168618849008299, "phrase": "concurrent_program_testing"}, {"score": 0.0034392837410790293, "phrase": "event_parameters"}, {"score": 0.00334144503360907, "phrase": "pscl-based_symbolic_test_generation_method"}, {"score": 0.003154012038613403, "phrase": "symbolic_test_cases"}, {"score": 0.0027830917623582903, "phrase": "syntactic_way"}, {"score": 0.002677964894127131, "phrase": "concrete_program_states"}, {"score": 0.002601727192945944, "phrase": "derived_test_cases"}, {"score": 0.0025521085778978042, "phrase": "dynamic_test_data_selection"}, {"score": 0.0021049977753042253, "phrase": "case_study"}], "paper_keywords": ["model-based testing", " symbolic test generation", " predicate sequencing constraints"], "paper_abstract": "A predicate sequencing constraint logic (PSCL) is proposed to represent test purpose for concurrent program testing. The logic is capable of expressing not only sequencing relationships among input and output events, but also data dependencies between event parameters. A PSCL-based symbolic test generation method is developed to automatically derive symbolic test cases that incorporate given data dependency constraints as verdict conditions. The method works in a syntactic way without referring to concrete program states and the derived test cases allow dynamic test data selection according to the response from the software under test. The advantage of the approach is demonstrated with a case study.", "paper_title": "Model-based testing of concurrent programs with predicate sequencing constraints", "paper_id": "WOS:000241963600005"}