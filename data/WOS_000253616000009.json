{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tagger_generator"}, {"score": 0.028913351851010006, "phrase": "corpus_transformation"}, {"score": 0.004745260932479212, "phrase": "information_extraction_application"}, {"score": 0.004454691230204595, "phrase": "named_entities"}, {"score": 0.004411588377842043, "phrase": "spanish_texts"}, {"score": 0.004326624385772596, "phrase": "named_entity_extraction"}, {"score": 0.004284757900613611, "phrase": "nee"}, {"score": 0.004161553532799662, "phrase": "information_extraction"}, {"score": 0.003631671435460452, "phrase": "predefined_categories"}, {"score": 0.0034423989472667756, "phrase": "re-trainable_tagger_generator"}, {"score": 0.003376037544631762, "phrase": "named_entity_extractor"}, {"score": 0.003294875957676514, "phrase": "tagged_examples"}, {"score": 0.0032471155306148156, "phrase": "main_contribution"}, {"score": 0.0030628762739398855, "phrase": "stacking_scheme"}, {"score": 0.0029747028229638625, "phrase": "additional_training_material"}, {"score": 0.0029458777184930896, "phrase": "tagger_generators"}, {"score": 0.002685558057339722, "phrase": "original_training_corpus"}, {"score": 0.0025829353063908256, "phrase": "training_corpus"}, {"score": 0.0024481856932959227, "phrase": "machine_learning_algorithm"}, {"score": 0.0022101055924375725, "phrase": "natural_language_processing_applications"}], "paper_keywords": ["named entity extraction", " corpus transformation", " system combination", " stacking"], "paper_abstract": "In this paper we present an experience in the extraction of named entities from Spanish texts using stacking. Named Entity Extraction (NEE) is a subtask of Information Extraction that involves the identification of groups of words that make up the name of an entity, and the classification of these names into a set of predefined categories. Our approach is corpus-based, we use a re-trainable tagger generator to obtain a named entity extractor from a set of tagged examples. The main contribution of our work is that we obtain the systems needed in a stacking scheme without making use of any additional training material or tagger generators. Instead of it, we have generated the variability needed in stacking by applying corpus transformation to the original training corpus. Once we have several versions of the training corpus we generate several extractors and combine them by means of a machine learning algorithm. Experiments show that the combination of corpus transformation and stacking improve the performance of the tagger generator in this kind of natural language processing applications. The best of our experiments achieves an improvement of more than six percentual points respect to the predefined baseline.", "paper_title": "Improving the performance of a tagger generator in an information extraction application", "paper_id": "WOS:000253616000009"}