{"auto_keywords": [{"score": 0.04051211375775462, "phrase": "run-time_library"}, {"score": 0.00481495049065317, "phrase": "automatic_grid"}, {"score": 0.004633429997452688, "phrase": "imperative_programming_languages"}, {"score": 0.004545240514015278, "phrase": "grid_superscalar"}, {"score": 0.004416079619543104, "phrase": "grid_programming_environment"}, {"score": 0.004050116768809519, "phrase": "sequential_applications"}, {"score": 0.0039729853486821995, "phrase": "computational_grids"}, {"score": 0.003714368305523811, "phrase": "task_data-dependence_graph"}, {"score": 0.00334144503360907, "phrase": "implicit_workflow_system"}, {"score": 0.0032463805170627686, "phrase": "current_interface"}, {"score": 0.0029203055813347874, "phrase": "gram_and_gsiftp_services"}, {"score": 0.002703869368554536, "phrase": "grid_superscalar_basics"}, {"score": 0.0025521085778978042, "phrase": "grid_workflow"}, {"score": 0.002340250894008014, "phrase": "imperative_language"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Grid computing", " Grid workflows", " Grid programming models"], "paper_abstract": "GRID superscalar is a Grid programming environment that enables one to parallelize the execution of sequential applications in computational Grids. The run-time library automatically builds a task data-dependence graph of the application and it can be seen as an implicit workflow system. The current interface supports C/C++ and Perl applications. The run-time library is based on Globus Toolkit 2.x using GRAM and GSIFTP services. In this document we describe the GRID superscalar basics emphasizing those aspects related to Grid workflow, in particular the flexibility of using an imperative language to describe the application. Copyright (c) 2005 John Wiley & Sons, Ltd.", "paper_title": "Automatic Grid workflow based on imperative programming languages", "paper_id": "WOS:000239804900009"}