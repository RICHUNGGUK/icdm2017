{"auto_keywords": [{"score": 0.03389941211547353, "phrase": "delong"}, {"score": 0.010435419759611228, "phrase": "boykov"}, {"score": 0.009952280532601436, "phrase": "cvpr"}, {"score": 0.004776853267973129, "phrase": "path_augmentation"}, {"score": 0.004609094651134046, "phrase": "novel_distributed_algorithm"}, {"score": 0.004554488671294504, "phrase": "minimum_cut_problem"}, {"score": 0.004447201233380302, "phrase": "volumetric_segmentation"}, {"score": 0.004412000844879264, "phrase": "computer_vision"}, {"score": 0.0043080553835735825, "phrase": "large_sparse_problems"}, {"score": 0.0036893794227117194, "phrase": "shared_memory_architecture"}, {"score": 0.00347574024760684, "phrase": "disjoint_regions"}, {"score": 0.0034073030552032304, "phrase": "exchange_messages"}, {"score": 0.0030724971661718983, "phrase": "n-d_grids"}, {"score": 0.0028944757265206332, "phrase": "message_exchange"}, {"score": 0.0027594936602962075, "phrase": "path_augmentations"}, {"score": 0.002705121052747945, "phrase": "push-relabel_style"}, {"score": 0.00252812242767189, "phrase": "boundary_vertices"}, {"score": 0.0024981087707313656, "phrase": "sequential_and_parallel_versions"}, {"score": 0.0023439376937579204, "phrase": "shared_memory_model"}, {"score": 0.0022977342663599042, "phrase": "lower_amount"}, {"score": 0.002279508335630797, "phrase": "message_exchanges"}, {"score": 0.0021559025985688255, "phrase": "large_problems"}, {"score": 0.002130298466581199, "phrase": "disk_storage"}, {"score": 0.0021049977753042253, "phrase": "distributed_system"}], "paper_keywords": ["Maximum flow", " Minimum cut", " Distributed", " Parallel", " Push-relable", " Augmenting path", " Large scale"], "paper_abstract": "We propose a novel distributed algorithm for the minimum cut problem. Motivated by applications like volumetric segmentation in computer vision, we aim at solving large sparse problems. When the problem does not fully fit in the memory, we need to either process it by parts, looking at one part at a time, or distribute across several computers. Many mincut/maxflow algorithms are designed for the shared memory architecture and do not scale to this setting. We consider algorithms that work on disjoint regions of the problem and exchange messages between the regions. We show that the region push-relabel algorithm of Delong and Boykov (A scalable graph-cut algorithm for N-D grids, in CVPR, 2008) uses I similar to(n (2)) rounds of message exchange, where n is the number of vertices. Our new algorithm performs path augmentations inside the regions and push-relabel style updates between the regions. It uses asymptotically less message exchanges, , where is the set of boundary vertices. The sequential and parallel versions of our algorithm are competitive with the state-of-the-art in the shared memory model. By achieving a lower amount of message exchanges (even asymptotically lower in our synthetic experiments), they suit better for solving large problems using a disk storage or a distributed system.", "paper_title": "A Distributed Mincut/Maxflow Algorithm Combining Path Augmentation and Push-Relabel", "paper_id": "WOS:000322371100006"}