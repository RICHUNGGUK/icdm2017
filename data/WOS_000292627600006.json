{"auto_keywords": [{"score": 0.04805655360322429, "phrase": "browser-based_attacks"}, {"score": 0.00481495049065317, "phrase": "current_web_browsers"}, {"score": 0.004673290248999786, "phrase": "easy_access"}, {"score": 0.004642377903273107, "phrase": "computer_systems"}, {"score": 0.004581162468419365, "phrase": "browser_security_efforts"}, {"score": 0.0045357787854931894, "phrase": "existing_browsers"}, {"score": 0.004490842671590769, "phrase": "limited_success"}, {"score": 0.0044169318855693356, "phrase": "modern_browsers"}, {"score": 0.004216362268148017, "phrase": "new_browser"}, {"score": 0.003945467978172845, "phrase": "operating_system_design_principles"}, {"score": 0.003643185395780667, "phrase": "smaller_subsystems"}, {"score": 0.0034317185678527672, "phrase": "small_browser_kernel"}, {"score": 0.003386412845243943, "phrase": "browser_subsystems"}, {"score": 0.003034682308336483, "phrase": "flexible_security_policies"}, {"score": 0.002974760986688745, "phrase": "browser_plugins"}, {"score": 0.0028966970007550824, "phrase": "formal_methods"}, {"score": 0.00286795254228461, "phrase": "useful_security_properties"}, {"score": 0.002848947756758754, "phrase": "user_interface_invariants"}, {"score": 0.002830068550982961, "phrase": "browser_security_policy"}, {"score": 0.002746644177161797, "phrase": "browser-level_information-flow_tracking_system"}, {"score": 0.0026130182682465096, "phrase": "op_browser_architecture"}, {"score": 0.002527556628744957, "phrase": "second_version"}, {"score": 0.0023727863021828547, "phrase": "overall_security"}, {"score": 0.002190729937598138, "phrase": "popular_pages"}, {"score": 0.0021474369836979048, "phrase": "additional_security_features"}, {"score": 0.0021332467464889836, "phrase": "op"}, {"score": 0.0021049977753042253, "phrase": "minimal_overhead"}], "paper_keywords": ["Design", " Security", " Verification", " Web browsing", " security", " browser plugin", " formal verification", " OP browser"], "paper_abstract": "Current web browsers are plagued with vulnerabilities, providing hackers with easy access to computer systems via browser-based attacks. Browser security efforts that retrofit existing browsers have had limited success because the design of modern browsers is fundamentally flawed. To enable more secure web browsing, we design and implement a new browser, called the OP web browser, that attempts to improve the state-of-the-art in browser security. We combine operating system design principles with formal methods to design a more secure web browser by drawing on the expertise of both communities. Our design philosophy is to partition the browser into smaller subsystems and make all communication between subsystems simple and explicit. At the core of our design is a small browser kernel that manages the browser subsystems and interposes on all communications between them to enforce our new browser security features. To show the utility of our browser architecture, we design and implement three novel security features. First, we develop flexible security policies that allow us to include browser plugins within our security framework. Second, we use formal methods to prove useful security properties including user interface invariants and browser security policy. Third, we design and implement a browser-level information-flow tracking system to enable post-mortem analysis of browser-based attacks. In addition to presenting the OP browser architecture, we discuss the design and implementation of a second version of OP, OP2, that includes features from other secure web browser designs to improve on the overall security and performance of OP. To evaluate our design, we implemented OP2 and tested both performance, memory, and filesystem impact while browsing popular pages. We show that the additional security features in OP and OP2 introduce minimal overhead.", "paper_title": "Designing and Implementing the OP and OP2 Web Browsers", "paper_id": "WOS:000292627600006"}