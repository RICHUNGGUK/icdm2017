{"auto_keywords": [{"score": 0.04047293105117697, "phrase": "data_transfers"}, {"score": 0.033438166505496705, "phrase": "buffer-based_dataflow"}, {"score": 0.00481495049065317, "phrase": "buffer_controller-based"}, {"score": 0.004640079189342692, "phrase": "dataflow_synthesis"}, {"score": 0.004471530397729526, "phrase": "effective_design_methodology"}, {"score": 0.004362564831572539, "phrase": "complex_system"}, {"score": 0.004256243266481051, "phrase": "dataflow_graph"}, {"score": 0.004076352180903171, "phrase": "multi-core_processors"}, {"score": 0.003738973626996355, "phrase": "different_processors"}, {"score": 0.003244050414264445, "phrase": "mapping_methodology"}, {"score": 0.0030123335878664064, "phrase": "data-centric_applications"}, {"score": 0.002849442549612025, "phrase": "estimated_execution_times"}, {"score": 0.002814454488050123, "phrase": "functional_blocks"}, {"score": 0.002728847267539957, "phrase": "proposed_methodology"}, {"score": 0.002678734566245688, "phrase": "mapped_partition"}, {"score": 0.0026133424923929227, "phrase": "template_code"}, {"score": 0.002487296495786493, "phrase": "target_platform"}, {"score": 0.0023967582707115354, "phrase": "processor_initiation_scheme"}, {"score": 0.0023527296826339225, "phrase": "wrong_operations"}, {"score": 0.002295277579105177, "phrase": "actual_execution"}, {"score": 0.0021710766932077972, "phrase": "generated_template_code"}, {"score": 0.0021049977753042253, "phrase": "systemc_model"}], "paper_keywords": ["Buffer-based dataflow", " data-centric applications", " field-programmable gate array (FPGA)", " multi-core architecture", " system mapping"], "paper_abstract": "This paper presents an effective design methodology which maps a complex system represented as a dataflow graph to a reconfigurable target architecture having multi-core processors and programmable logics. In order to synchronize data transfers between two processing blocks mapped to different processors (alternatively, one block is mapped to a processor and the other is realized as a hardware), we propose a mapping methodology that exploits the buffer-based dataflow, a new representation technique for realizing data-centric applications in reconfigurable platforms. From the buffer-based dataflow and estimated execution times of functional blocks and data transfers, the proposed methodology creates a mapped partition and generates the template code which runs on the processors of the target platform. We also use a processor initiation scheme to prevent wrong operations from happening when actual execution takes longer than estimated. Our proposed mapping methodology and the generated template code are evaluated with the SystemC model and Xilinx ISE.", "paper_title": "Buffer Controller-Based Multiple Processing Element Utilization for Dataflow Synthesis", "paper_id": "WOS:000292098600012"}