{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "ca-mpsoc"}, {"score": 0.012236433802851703, "phrase": "ca"}, {"score": 0.011413859231449927, "phrase": "ca-based_platform"}, {"score": 0.010345243640321185, "phrase": "super-set_hardware"}, {"score": 0.0047178930715062704, "phrase": "predictable_multi-processor_architectures"}, {"score": 0.0045959609346817535, "phrase": "multi-processor_designs"}, {"score": 0.004556018017257075, "phrase": "real-time_deadlines"}, {"score": 0.00451642066363115, "phrase": "large_number"}, {"score": 0.004412494693940597, "phrase": "exponential_number"}, {"score": 0.0043487535506391275, "phrase": "key_design_automation_challenges"}, {"score": 0.004187284711626886, "phrase": "hardware_implementation_alternatives"}, {"score": 0.004162978902905443, "phrase": "accurate_performance_evaluation"}, {"score": 0.004020066537823032, "phrase": "current_design_methodologies"}, {"score": 0.003792657064634775, "phrase": "fully_automated_design_flow"}, {"score": 0.0037596691909408666, "phrase": "communication_assist"}, {"score": 0.003609465839614284, "phrase": "worst-case_performance_model"}, {"score": 0.0034052040544137255, "phrase": "design_flow"}, {"score": 0.003385422532841961, "phrase": "performance_estimates"}, {"score": 0.003365755538047523, "phrase": "timing_guarantees"}, {"score": 0.003326762498260739, "phrase": "soft_real-time_applications"}, {"score": 0.003269115546207996, "phrase": "processor_mappings"}, {"score": 0.002926447931147561, "phrase": "communication_architecture"}, {"score": 0.0028925295982470418, "phrase": "application_tasks"}, {"score": 0.0028341130433482565, "phrase": "xilinx_fpgas"}, {"score": 0.0026892447164623247, "phrase": "research_community"}, {"score": 0.0026119782818898193, "phrase": "performance_analysis"}, {"score": 0.002581697798958568, "phrase": "sobel"}, {"score": 0.002566693984707007, "phrase": "jpeg"}, {"score": 0.0024784363584530976, "phrase": "maximum_error"}, {"score": 0.0024496978447849835, "phrase": "analyzed_and_measured_periods"}, {"score": 0.0022974765563692776, "phrase": "case_study"}, {"score": 0.0022841153001549193, "phrase": "six_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multi-processor", " Multiple applications", " Performance analysis", " Automated design flow", " Communication assist"], "paper_abstract": "Future embedded systems demand multi-processor designs to meet real-time deadlines. The large number of applications in these systems generates an exponential number of use-cases. The key design automation challenges are designing systems for these use-cases and fast exploration of software and hardware implementation alternatives with accurate performance evaluation of these use-cases. These challenges cannot be overcome by current design methodologies which are semi-automated, time consuming and error prone. In this paper, we present a fully automated design flow to generate communication assist (CA) based multi-processor systems (CA-MPSoC). A worst-case performance model of our CA is proposed so that the performance of the CA-based platform can be analyzed before its implementation. The design flow provides performance estimates and timing guarantees for both hard real-time and soft real-time applications, provided the task to processor mappings are given by the user. The flow automatically generates a super-set hardware that can be used in all use-cases of the applications. The software for each of these use-cases is also generated including the configuration of communication architecture and interfacing with application tasks. CA-MPSoC has been implemented on Xilinx FPGAs for evaluation. Further, it is made available on-line for the benefit of the research community and in this paper, it is used for performance analysis of two real life applications, Sobel and JPEG encoder executing concurrently. The CA-based platform generated by our design flow records a maximum error of 3.4% between analyzed and measured periods. Our tool can also merge use-cases to generate a super-set hardware which accelerates the evaluation of these use-cases. In a case study with six applications, the use-case merging results in a speed up of 18 when compared to the case where each use-case is evaluated individually. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "CA-MPSoC: An automated design flow for predictable multi-processor architectures for multiple applications", "paper_id": "WOS:000279978400006"}