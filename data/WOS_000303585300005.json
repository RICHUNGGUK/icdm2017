{"auto_keywords": [{"score": 0.048153996910559355, "phrase": "flash_storage_platform_software"}, {"score": 0.009389766127171455, "phrase": "mobile_devices"}, {"score": 0.00481495049065317, "phrase": "concolic_testing"}, {"score": 0.00454090611248773, "phrase": "today's_information_society"}, {"score": 0.004358368398332723, "phrase": "virtually_indispensable_component"}, {"score": 0.0039218440805789965, "phrase": "flash_memory"}, {"score": 0.0037201996003549246, "phrase": "file_system"}, {"score": 0.003676811616723809, "phrase": "flash_translation_layer"}, {"score": 0.0036126731589251906, "phrase": "low-level_device_drivers"}, {"score": 0.003447035529485425, "phrase": "embedded_software"}, {"score": 0.0034068225125064586, "phrase": "conventional_testing_methods"}, {"score": 0.0033083236588614174, "phrase": "hidden_flaws"}, {"score": 0.003119760592916715, "phrase": "effective_test_cases"}, {"score": 0.00304737045343781, "phrase": "different_approach"}, {"score": 0.002924694271730544, "phrase": "complete_analysis"}, {"score": 0.0028234703730349916, "phrase": "limited_scale"}, {"score": 0.0026781477395106993, "phrase": "empirical_study"}, {"score": 0.0026313840069327713, "phrase": "concolic_testing_method"}, {"score": 0.002409503258044183, "phrase": "concrete_dynamic_execution"}, {"score": 0.0023674192513753996, "phrase": "symbolic_execution"}, {"score": 0.0023124457559811087, "phrase": "test_cases"}, {"score": 0.0022854384756395116, "phrase": "full_path_coverage"}, {"score": 0.0021049977753042253, "phrase": "concolic_testing_approach"}], "paper_keywords": ["Flash memory", " concolic testing", " unit analysis", " and embedded software verification"], "paper_abstract": "In today's information society, flash memory has become a virtually indispensable component, particularly for mobile devices. In order for mobile devices to operate successfully, it is essential that flash memory be controlled correctly through flash storage platform software such as the file system, flash translation layer, and low-level device drivers. However, as is typical for embedded software, conventional testing methods often fail to detect hidden flaws in the software due to the difficulty of creating effective test cases. As a different approach, model checking techniques guarantee a complete analysis, but only on a limited scale. In this paper, we describe an empirical study wherein a concolic testing method is applied to the multi-sector read operation for flash storage platform software. This method combines a concrete dynamic execution and a symbolic execution to automatically generate test cases for full path coverage. Through the experiments, we analyze the advantages and weaknesses of the concolic testing approach on the flash storage platform software.", "paper_title": "Concolic testing of the multi-sector read operation for flash storage platform software", "paper_id": "WOS:000303585300005"}