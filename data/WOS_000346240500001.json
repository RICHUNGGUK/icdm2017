{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "certificate_checkers"}, {"score": 0.004726382602809228, "phrase": "hardest-to-round_computation"}, {"score": 0.0044702911400353535, "phrase": "efficient_and_robust_floating-point_implementations"}, {"score": 0.003747020072136732, "phrase": "i.e._the_floating-point_numbers"}, {"score": 0.003199345207727474, "phrase": "floating-point_format"}, {"score": 0.0025832180231667853, "phrase": "hensel's_lemma"}, {"score": 0.002397923568994474, "phrase": "lattice_basis_reduction"}, {"score": 0.0021049977753042253, "phrase": "coq_proof_assistant"}], "paper_keywords": ["Formal proofs", " Certificate checkers", " Hensel's lemma", " Modular arithmetic"], "paper_abstract": "In order to derive efficient and robust floating-point implementations of a given function f, it is crucial to compute its hardest-to-round points, i.e. the floating-point numbers x such that f(x) is closest to the midpoint of two consecutive floating-point numbers. Depending on the floating-point format one is aiming at, this can be highly computationally intensive. In this paper, we show how certificates based on Hensel's lemma can be added to an algorithm using lattice basis reduction so that the result of a computation can be formally checked in the Coq proof assistant.", "paper_title": "Formally Verified Certificate Checkers for Hardest-to-Round Computation", "paper_id": "WOS:000346240500001"}