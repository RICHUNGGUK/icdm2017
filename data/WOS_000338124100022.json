{"auto_keywords": [{"score": 0.033438166505496705, "phrase": "disco"}, {"score": 0.023040606091172217, "phrase": "flow_size"}, {"score": 0.00481495049065317, "phrase": "fast_flow_statistics"}, {"score": 0.00430907756010007, "phrase": "flow_volume"}, {"score": 0.004084744133085742, "phrase": "previous_studies"}, {"score": 0.003968806706727518, "phrase": "flow_size_counting_problem"}, {"score": 0.0038720442355114045, "phrase": "great_challenge"}, {"score": 0.003793206550770237, "phrase": "flow_volume_statistics"}, {"score": 0.0037312893857519803, "phrase": "demanding_requirements"}, {"score": 0.0036855132234738736, "phrase": "memory_size"}, {"score": 0.0036104596826132965, "phrase": "monitoring_device"}, {"score": 0.003479180627368156, "phrase": "discount_counting"}, {"score": 0.0032174507570710835, "phrase": "incoming_packet"}, {"score": 0.0031260524791486347, "phrase": "corresponding_counter"}, {"score": 0.002938821840519756, "phrase": "elaborate_design"}, {"score": 0.0029027394930867902, "phrase": "counter_update_rule"}, {"score": 0.002867098884583832, "phrase": "inverse_estimation"}, {"score": 0.0028202559386070873, "phrase": "memory_consumption"}, {"score": 0.0027741761880779535, "phrase": "accurate_unbiased_estimator"}, {"score": 0.002684257009647205, "phrase": "theoretical_analysis"}, {"score": 0.0026403934420630155, "phrase": "synthetic_and_real_traces"}, {"score": 0.002523420125608051, "phrase": "related_work"}, {"score": 0.0024116163689723354, "phrase": "network_processor"}, {"score": 0.002401710449688387, "phrase": "intel"}, {"score": 0.0023624435546097658, "phrase": "performance_test"}, {"score": 0.0021845387990972543, "phrase": "traditional_traffic_pattern"}], "paper_keywords": ["Counter", " flow statistics", " network measurement", " unbiased estimation"], "paper_abstract": "A complete flow statistics report should include both flow size (the number of packets in a flow) counting and flow volume (the number of bytes in a flow) counting. Although previous studies have contributed a lot to the flow size counting problem, it is still a great challenge to well support the flow volume statistics due to the demanding requirements on both memory size and memory bandwidth in monitoring device. In this paper, we propose a DIScount COunting (DISCO) method, which is designed for both flow size and flow bytes counting. For each incoming packet of length, DISCO increases the corresponding counter assigned to the flow with an increment that is less than. With an elaborate design on the counter update rule and the inverse estimation, DISCO saves memory consumption while providing an accurate unbiased estimator. The method is evaluated thoroughly under theoretical analysis and simulations with synthetic and real traces. The results demonstrate that DISCO is more accurate than related work given the same counter sizes. DISCO is also implemented on the network processor Intel IXP2850 for a performance test. Using only one microengine (ME) in IXP2850, the throughput can reach up to 11.1 Gb/s under a traditional traffic pattern. The throughput increases to 39 Gb/s when employing four MEs.", "paper_title": "Discount Counting for Fast Flow Statistics on Flow Size and Flow Volume", "paper_id": "WOS:000338124100022"}