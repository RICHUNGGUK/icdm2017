{"auto_keywords": [{"score": 0.02615933502243924, "phrase": "proposed_optimizations"}, {"score": 0.00481495049065317, "phrase": "sparql_query_answering"}, {"score": 0.004780334370089564, "phrase": "owl_ontologies"}, {"score": 0.004728874038094706, "phrase": "sparql_query_language"}, {"score": 0.004544859094594241, "phrase": "so-called_entailment_regimes"}, {"score": 0.004336556638639097, "phrase": "sparql's_standard_simple_entailment"}, {"score": 0.0042436501739199495, "phrase": "subgraph_matching"}, {"score": 0.004063741692442559, "phrase": "complex_concepts"}, {"score": 0.0037806195039533355, "phrase": "complete_algorithm"}, {"score": 0.0037398806676032068, "phrase": "entailment_regime"}, {"score": 0.003581252556182843, "phrase": "good_query_execution_order"}, {"score": 0.0033196177202591843, "phrase": "query_execution_time"}, {"score": 0.0032601856292942106, "phrase": "good_execution_order"}, {"score": 0.0032018141503341365, "phrase": "cost-based_model"}, {"score": 0.00296781730323553, "phrase": "model_abstraction"}, {"score": 0.0029252191241632888, "phrase": "owl_reasoner"}, {"score": 0.0027708353425467927, "phrase": "dynamic_case"}, {"score": 0.002682133505994396, "phrase": "individual_clustering_approach"}, {"score": 0.002624577999455744, "phrase": "cost_functions"}, {"score": 0.002522240133079871, "phrase": "prototypical_implementation"}, {"score": 0.002406415352892016, "phrase": "static_ordering"}, {"score": 0.0023718560142554634, "phrase": "dynamic_one"}, {"score": 0.002354762471810519, "phrase": "accurate_statistics"}, {"score": 0.0022143417457627006, "phrase": "nondeterministic_reasoning_decisions"}, {"score": 0.002158979137177815, "phrase": "conjunctive_instance"}], "paper_keywords": [""], "paper_abstract": "The SPARQL query language is currently being extended by the World Wide Web Consortium (W3C) with so-called entailment regimes. An entailment regime defines how queries are evaluated under more expressive semantics than SPARQL's standard simple entailment, which is based on subgraph matching. The queries are very expressive since variables can occur within complex concepts and can also bind to concept or role names. In this paper, we describe a sound and complete algorithm for the OWL Direct Semantics entailment regime. We further propose several novel optimizations such as strategies for determining a good query execution order, query rewriting techniques, and show how specialized OWL reasoning tasks and the concept and role hierarchy can be used to reduce the query execution time. For determining a good execution order, we propose a cost-based model, where the costs are based on information about the instances of concepts and roles that are extracted from a model abstraction built by an OWL reasoner. We present two ordering strategies: a static and a dynamic one. For the dynamic case, we improve the performance by exploiting an individual clustering approach that allows for computing the cost functions based on one individual sample from a cluster. We provide a prototypical implementation and evaluate the efficiency of the proposed optimizations. Our experimental study shows that the static ordering usually outperforms the dynamic one when accurate statistics are available. This changes, however, when the statistics are less accurate, e. g., due to nondeterministic reasoning decisions. For queries that go beyond conjunctive instance queries we observe an improvement of up to three orders of magnitude due to the proposed optimizations.", "paper_title": "Optimizing SPARQL Query Answering over OWL Ontologies", "paper_id": "WOS:000326320900001"}