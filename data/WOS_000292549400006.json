{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "smoothed_analysis_of_balancing_networks"}, {"score": 0.004723322467153553, "phrase": "balancing_network"}, {"score": 0.004611224230543916, "phrase": "initial_collection"}, {"score": 0.004567129988306349, "phrase": "unit-size_jobs"}, {"score": 0.003878625406105021, "phrase": "predefined_rule"}, {"score": 0.0032777653153451265, "phrase": "uniformly-random_assignment_rule"}, {"score": 0.0030058503645435455, "phrase": "arbitrary_assignment"}, {"score": 0.002977061391551628, "phrase": "balancer_directions"}, {"score": 0.0028784478769295204, "phrase": "probability_alpha"}, {"score": 0.0028100102841877835, "phrase": "large_class"}, {"score": 0.002467536552997677, "phrase": "high_probability"}, {"score": 0.0023972750359328235, "phrase": "known_upper_bounds"}, {"score": 0.0022302306304023602, "phrase": "natural_network"}, {"score": 0.002198242191529977, "phrase": "upper_bound"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["distributed computing", " load balancing", " balancing networks", " smoothed analysis", " average case analysis"], "paper_abstract": "In a balancing network each processor has an initial collection of unit-size jobs (tokens) and in each round, pairs of processors connected by balancers split their load as evenly as possible. An excess token (if any) is placed according to some predefined rule. As it turns out, this rule crucially affects the performance of the network. In this work we propose a model that studies this effect. We suggest a model bridging the uniformly-random assignment rule, and the arbitrary one (in the spirit of smoothed-analysis). We start with an arbitrary assignment of balancer directions and then flip each assignment with probability alpha independently. For a large class of balancing networks our result implies that after O(log n) rounds the discrepancy is O((1/2 - alpha) log n + log log n) with high probability. This matches and generalizes known upper bounds for alpha = 0 and alpha = 1/2. We also show that a natural network matches the upper bound for any alpha. (C) 2010 Wiley Periodicals, Inc. Random Struct. Alg., 39, 115-138, 2011", "paper_title": "Smoothed Analysis of Balancing Networks", "paper_id": "WOS:000292549400006"}