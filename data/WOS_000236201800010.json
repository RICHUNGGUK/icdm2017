{"auto_keywords": [{"score": 0.0259654481376653, "phrase": "trusted_resource"}, {"score": 0.00481495049065317, "phrase": "untrusted_computational_resource"}, {"score": 0.004655285779819366, "phrase": "fixed-base_variable-exponent_exponentiation"}, {"score": 0.0046161999598320486, "phrase": "variable-base_fixed-exponent_exponentiation"}, {"score": 0.004444317282171449, "phrase": "fixed-base_protocols"}, {"score": 0.004260800171269249, "phrase": "variable-base_protocols"}, {"score": 0.003982741546775355, "phrase": "cyclic_group"}, {"score": 0.003834354624599925, "phrase": "exponentiation_modulo"}, {"score": 0.0036450381529042103, "phrase": "single_multiplicity"}, {"score": 0.0033641551050434663, "phrase": "square-and-multiply_algorithm"}, {"score": 0.003104849179057156, "phrase": "exponentiation-based_verification"}, {"score": 0.0030787405733989615, "phrase": "discrete_log-based_signature"}, {"score": 0.0029639342245188203, "phrase": "signature_verifiers"}, {"score": 0.0026445028886931837, "phrase": "work-security_tradeoff"}, {"score": 0.0025892330566358503, "phrase": "fifth_protocol"}, {"score": 0.002556625752785268, "phrase": "variable-base_variable-_exponent_exponentiation"}, {"score": 0.002280990744438186, "phrase": "offline_stage"}], "paper_keywords": ["untrusted computation", " exponentiation", " signature verification"], "paper_abstract": "We present protocols for speeding up fixed-base variable-exponent exponentiation and variable-base fixed-exponent exponentiation using an untrusted computational resource. In the fixed-base protocols, the exponent may be blinded. In the variable-base protocols, the base may be blinded. The protocols are described for exponentiation in a cyclic group. We describe how to extend them to exponentiation modulo an integer where the modulus is the product of primes with single multiplicity. The protocols provide a speedup of 3/2 ((log k) - 1) over the square-and-multiply algorithm, where k is the bitlength of the exponent. One application of the protocols is to speed up exponentiation-based verification in discrete log-based signature and credential schemes. The protocols also allow signature verifiers to dynamically choose, for each message, the amount of work it would like to perform to verify the signature. This results in a work-security tradeoff. We introduce a fifth protocol to perform variable-base variable- exponent exponentiation, which also has this feature. Our model allows the trusted resource to perform computations in its idle time. The protocols facilitate the offloading of work to the offline stage, such that the work the trusted resource performs when it has to do an exponentiation is smaller. Our protocols are unconditionally secure.", "paper_title": "Speeding up exponentiation using an untrusted computational resource", "paper_id": "WOS:000236201800010"}