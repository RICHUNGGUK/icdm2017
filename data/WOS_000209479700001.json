{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "separation-logic_typing"}, {"score": 0.004287680323820891, "phrase": "algol-like_languages."}, {"score": 0.0038737214010638745, "phrase": "coherent_semantics"}, {"score": 0.0032546105164772995, "phrase": "separation_logic"}, {"score": 0.0030267296900520217, "phrase": "higher_types"}, {"score": 0.0026175952455594277, "phrase": "immutable_stack_variables"}, {"score": 0.0023303871145705954, "phrase": "simple_sound_rules"}, {"score": 0.002230984431056064, "phrase": "higher-order_frame_rules"}, {"score": 0.0021049977753042253, "phrase": "local_reasoning"}], "paper_keywords": ["Program Verification", " Separation Logic"], "paper_abstract": "We show how to give a coherent semantics to programs that are well-specified in a version of separation logic for a language with higher types: idealized algol extended with heaps (but with immutable stack variables). In particular, we provide simple sound rules for deriving higher-order frame rules, allowing for local reasoning.", "paper_title": "SEMANTICS OF SEPARATION-LOGIC TYPING AND HIGHER-ORDER FRAME RULES FOR ALGOL-LIKE LANGUAGES", "paper_id": "WOS:000209479700001"}