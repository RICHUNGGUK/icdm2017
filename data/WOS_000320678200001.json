{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_quality"}, {"score": 0.015006354243819717, "phrase": "overall_quality"}, {"score": 0.013174270790777728, "phrase": "software_object"}, {"score": 0.010967950043594321, "phrase": "software_metrics"}, {"score": 0.01079870609582324, "phrase": "class_labels"}, {"score": 0.008209810333055982, "phrase": "fuzzy_integration"}, {"score": 0.004755054742217193, "phrase": "increasing_sophistication"}, {"score": 0.004725385523804256, "phrase": "today's_software_systems"}, {"score": 0.004565468027464384, "phrase": "underlying_software_components"}, {"score": 0.004315324272986853, "phrase": "software_engineering_literature"}, {"score": 0.00422177384286051, "phrase": "varying_levels"}, {"score": 0.004156191156783823, "phrase": "large_swath"}, {"score": 0.004130243047687995, "phrase": "qualitative_attributes"}, {"score": 0.003928383344128396, "phrase": "simple_interpretation"}, {"score": 0.003831169445079928, "phrase": "better_strategy"}, {"score": 0.003194503900101423, "phrase": "fuzzy_classification_approach"}, {"score": 0.00285357934700279, "phrase": "individual_software_objects"}, {"score": 0.0028268629720802772, "phrase": "large_collection"}, {"score": 0.002748201169075936, "phrase": "software_metric"}, {"score": 0.002671722386856879, "phrase": "fuzzy_logic"}, {"score": 0.0023789822182914877, "phrase": "software_objects"}, {"score": 0.0023566987138026285, "phrase": "sophisticated_algorithm_development_framework"}, {"score": 0.002327310963701377, "phrase": "biomedical_data_analysis_systems"}, {"score": 0.002283913454238574, "phrase": "sampling_method"}, {"score": 0.0022133711375320244, "phrase": "aggregated_classification_results"}, {"score": 0.0021450029487459403, "phrase": "respective_best_individual_classifiers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Computational intelligence", " Fuzzy logic", " Pattern classification", " Software metric", " Software engineering"], "paper_abstract": "With the increasing sophistication of today's software systems, it is often difficult to estimate the overall quality of underlying software components with respect to attributes such as complexity, utility, and extensibility. Many metrics exist in the software engineering literature that attempt to quantify, with varying levels of accuracy, a large swath of qualitative attributes. However, the overall quality of a software object may manifest itself in ways that the simple interpretation of metrics fails to identify. A better strategy is to determine the best, possibly non-linear, subset of many software metrics for accurately estimating software quality. This strategy may be couched in terms of a problem of classification, that is, determine a mapping from a set of software metrics to a set of class labels representing software quality. We implement this strategy using a fuzzy classification approach. The software metrics are automatically computed and presented as features (input) to a classifier, while the class labels (output) are assigned via an expert's (software architect) thorough assessment of the quality of individual software objects. A large collection of classifiers is presented with subsets of the software metric features. Subsets are selected stochastically using a fuzzy logic based sampling method. The classifiers then predict the quality, specifically the class label, of each software object. Fuzzy integration is applied to the results from the most accurate individual classifiers. We empirically evaluate this approach using software objects from a sophisticated algorithm development framework used to develop biomedical data analysis systems. We demonstrate that the sampling method attenuates the effects of confounding features, and the aggregated classification results using fuzzy integration are superior to the predictions from the respective best individual classifiers. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "A fuzzy classifier approach to estimating software quality", "paper_id": "WOS:000320678200001"}