{"auto_keywords": [{"score": 0.04015076015860894, "phrase": "road_traffic"}, {"score": 0.036040477101518094, "phrase": "speed_patterns"}, {"score": 0.01374714030378251, "phrase": "speed_variations"}, {"score": 0.011621708943313816, "phrase": "current_road_status"}, {"score": 0.00872866740448245, "phrase": "least_travel_time_path"}, {"score": 0.00481495049065317, "phrase": "time-dependent_shortest_path_queries"}, {"score": 0.004782455247247007, "phrase": "pre-computed_speed_information"}, {"score": 0.004702168843383725, "phrase": "shortest_path"}, {"score": 0.004499647408293102, "phrase": "direct_application"}, {"score": 0.0044692705329574, "phrase": "road_networks"}, {"score": 0.004349791059765796, "phrase": "time-dependent_shortest-path_queries"}, {"score": 0.004176509019758331, "phrase": "road_segments"}, {"score": 0.00388964573736626, "phrase": "static_past_traffic_data"}, {"score": 0.0037093941875325862, "phrase": "new_problem"}, {"score": 0.0036594395622282358, "phrase": "dynamic_time-dependent_shortest_path"}, {"score": 0.0035135619115963627, "phrase": "pre-determined_speed_patterns"}, {"score": 0.0030783143919343972, "phrase": "travel_time"}, {"score": 0.003036832649117453, "phrase": "dtdsp_queries"}, {"score": 0.0028280256704977746, "phrase": "previously_adopted_piece-wise_constant_speed_pattern_models"}, {"score": 0.0027336881691956186, "phrase": "dtdsp_query"}, {"score": 0.002452392552332778, "phrase": "new_vehicle"}, {"score": 0.002427549902743566, "phrase": "road_network"}, {"score": 0.002370555661688829, "phrase": "efficient_algorithms"}, {"score": 0.0023148964315569866, "phrase": "new_query"}, {"score": 0.0022300545742463262, "phrase": "existing_vehicles"}, {"score": 0.002199978308846543, "phrase": "real_data_sets"}], "paper_keywords": ["Shortest path", " Road network", " Routing"], "paper_abstract": "Shortest path (or least travel time path) identification has been actively studied for direct application to road networks. In addition, the processing of time-dependent shortest-path queries, which use past traffic data to compute the speed variations of road segments, has been investigated in order to incorporate speed variations over time. However, speed information pre-computed from static past traffic data is often invalid because road traffic is inherently dynamic. This paper addresses a new problem in processing a Dynamic Time-Dependent Shortest Path (DTDSP) query, which considers the current road status without assuming pre-determined speed patterns on roads. By dynamically adjusting the speed patterns of roads instead of fixing them based on past traffic data, the recommended paths, which reflect the current road status, are more effective in distributing the road traffic and thus reducing the travel time. To process DTDSP queries, we first propose a Continuous Piece-wise Linear Speed Pattern (CPLSP) model to compute the vehicle speed patterns, which is more flexible and realistic than previously adopted piece-wise constant speed pattern models. Using dynamically computed CPLSPs, we process a DTDSP query in two phases: (1) the least travel time path is found for the query and (2) the speed patterns of the following vehicles, which are affected by the participation of the new vehicle on the road network, are updated. We propose efficient algorithms for finding the least travel time path of a new query (vehicle) and for updating the speed patterns of the existing vehicles. Experiments on real data sets show that our query processing algorithms effectively distribute road traffic, and thus, significantly reduce both global and individual travel times. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Processing time-dependent shortest path queries without pre-computed speed information on road networks", "paper_id": "WOS:000327001300009"}