{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "cnf."}, {"score": 0.00481495049065317, "phrase": "smallest_proof"}, {"score": 0.004261617028111862, "phrase": "resolution_refutations"}, {"score": 0.004143196873246147, "phrase": "minimum_unsatisfiable_subsets"}, {"score": 0.003701401653850141, "phrase": "minimum_tree-like_resolution_refutations"}, {"score": 0.0032145922365231093, "phrase": "shortest_paths"}, {"score": 0.003125175084962886, "phrase": "implication_graph"}, {"score": 0.002818013056816282, "phrase": "efficient_algorithm"}, {"score": 0.0027139447110929586, "phrase": "smallest_tree-like_refutation"}, {"score": 0.002447101794397243, "phrase": "good_approximation"}, {"score": 0.0023127544795063263, "phrase": "smallest_general_refutation"}, {"score": 0.0021857667493036786, "phrase": "polynomial_time_dynamic_programming_algorithm"}, {"score": 0.0021049977753042253, "phrase": "smallest_unsatisfiable_subset"}], "paper_keywords": [""], "paper_abstract": "We consider the problem of finding the smallest proof of unsatisfiability of a 2CNF formula. In particular, we look at Resolution refutations and at minimum unsatisfiable subsets of the clauses of the CNF. We give a characterization of minimum tree-like Resolution refutations that explains why, to find them, it is not sufficient to find shortest paths in the implication graph of the CNF. The characterization allows us to develop an efficient algorithm for finding a smallest tree-like refutation and to show that the size of such a refutation is a good approximation to the size of the smallest general refutation. We also give a polynomial time dynamic programming algorithm for finding a smallest unsatisfiable subset of the clauses of a 2CNF.", "paper_title": "Minimum witnesses for unsatisfiable 2CNFs", "paper_id": "WOS:000240082500006"}