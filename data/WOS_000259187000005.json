{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "side_channel_attacks"}, {"score": 0.034316372449548334, "phrase": "cache-based_side_channel_attacks"}, {"score": 0.004771196027464407, "phrase": "side_channel_cryptanalysis"}, {"score": 0.004706305193222972, "phrase": "significant_attention"}, {"score": 0.004558289038745564, "phrase": "low-cost_and_facile_way"}, {"score": 0.004374772264092067, "phrase": "secure_computing_system"}, {"score": 0.00393852508392789, "phrase": "cryptographic_algorithm"}, {"score": 0.003814563533445401, "phrase": "data-dependent_behavior"}, {"score": 0.0037626342268042997, "phrase": "microprocessor's_cache_memory"}, {"score": 0.003356396922662246, "phrase": "cache_decay_approach"}, {"score": 0.003221111762383486, "phrase": "cache_decay"}, {"score": 0.003063123420705719, "phrase": "cache_items"}, {"score": 0.0029802289354540507, "phrase": "cache_power_leakage_savings"}, {"score": 0.0028995712226514746, "phrase": "decay_interval"}, {"score": 0.002769950045729965, "phrase": "non-deterministic_behavior"}, {"score": 0.0024819522818492284, "phrase": "different_cache_statistics"}, {"score": 0.002254571365634257, "phrase": "cycle-based_processor_simulator"}, {"score": 0.002203570941628287, "phrase": "required_modifications"}], "paper_keywords": ["side channel cryptanalysis", " side channel attack", " cache attack", " cache decay"], "paper_abstract": "Side channel cryptanalysis has received significant attention lately, because it provides a low-cost and facile way to reveal the secret information held on a secure computing system. One particular type of side channel attacks, called cache-based side channel attacks, aims to deduce information about the state of a cryptographic algorithm or its key by observing the data-dependent behavior of a microprocessor's cache memory. These attacks have been proven successful and very hard to protect against. In this paper, we introduce the use of the Cache Decay approach as an aid to guard against cache-based side channel attacks. Cache Decay controls the lifetime (called decay interval) of the cache items and was initially proposed for cache power leakage savings. By randomly selecting the decay interval of the cache, we actually create caches with non-deterministic behavior in regard to their statistics. Thus, as we demonstrate, multiple runs of the same algorithm (performing on the same input) will result in different cache statistics, defending against the attacker and reinforcing the protection offered by the system. In our work, we use a cycle-based processor simulator, enhanced with the required modifications, in order to evaluate our proposal and show that our technique can be used effectively to protect against cache-based side channel attacks.", "paper_title": "Non deterministic caches: a simple and effective defense against side channel attacks", "paper_id": "WOS:000259187000005"}