{"auto_keywords": [{"score": 0.029024248113878024, "phrase": "mvji"}, {"score": 0.006446745513231952, "phrase": "multiple_dw_versions"}, {"score": 0.00481495049065317, "phrase": "multiversion_data_warehouse"}, {"score": 0.004760518730536645, "phrase": "data_warehouse"}, {"score": 0.004514491994233911, "phrase": "external_data_sources"}, {"score": 0.004379631619412168, "phrase": "advanced_data_analysis"}, {"score": 0.003748937184382714, "phrase": "dw_evolution"}, {"score": 0.0035957006001349915, "phrase": "different_states"}, {"score": 0.0034618177773967015, "phrase": "persistent_dw_versions"}, {"score": 0.003383884759373793, "phrase": "real_world_state"}, {"score": 0.0033329032920236994, "phrase": "simulation_scenario"}, {"score": 0.0032826873794020253, "phrase": "olap_applications"}, {"score": 0.0032578629307203097, "phrase": "star_queries"}, {"score": 0.0032209766681045365, "phrase": "multiple_fact"}, {"score": 0.0031966173935538992, "phrase": "dimension_tables"}, {"score": 0.0031604223680801774, "phrase": "important_optimization_technique"}, {"score": 0.0030542703032534766, "phrase": "join_indexes"}, {"score": 0.002996840657035727, "phrase": "mvdw_fact"}, {"score": 0.0029741713977710495, "phrase": "dimension_data"}, {"score": 0.002896167001212006, "phrase": "standard_join_indexes"}, {"score": 0.0027566738323014, "phrase": "multiversion_join_index"}, {"score": 0.0026945722090537397, "phrase": "indexing_dimension"}, {"score": 0.0026741832921475667, "phrase": "fact_tables"}, {"score": 0.0026438880533289893, "phrase": "mvdw."}, {"score": 0.0025941547726803594, "phrase": "two-level_structure"}, {"score": 0.002555040841339798, "phrase": "upper_level"}, {"score": 0.0025165151708122957, "phrase": "indexing_attributes"}, {"score": 0.002488001663771768, "phrase": "lower_level"}, {"score": 0.0024504843466435487, "phrase": "indexing_dw_versions"}, {"score": 0.0022454559805729717, "phrase": "experimental_evaluation"}, {"score": 0.002169968849836984, "phrase": "system_performance"}, {"score": 0.002121056250381627, "phrase": "exact_match"}, {"score": 0.0021049977753042253, "phrase": "range_predicates"}], "paper_keywords": ["Star query", " Join index", " Multiversion data warehouse", " Multiversion query", " Multiversion join index"], "paper_abstract": "The data warehouse (DW) technology is developed in order to support the integration of external data sources (EDSs) for the purpose of advanced data analysis by On-Line Analytical Processing (OLAP) applications. Since contents and structures of integrated EDSs may evolve in time, the content and schema of a DW must evolve too in order to correctly reflect the evolution of EDSs. In order to manage a DW evolution, we developed the multiversion data warehouse (MVDW) approach. In this approach, different states of a DW are represented by the sequence of persistent DW versions that correspond either to the real world state or to a simulation scenario. Typically, OLAP applications execute star queries that join multiple fact and dimension tables. An important optimization technique for this kind of queries is based on join indexes. Since in the MVDW fact and dimension data are physically distributed among multiple DW versions, standard join indexes need extensions. In this paper we present the concept of a multiversion join index (MVJI) applicable to indexing dimension and fact tables in the MVDW. The MVJI has a two-level structure, where an upper level is used for indexing attributes and a lower level is used for indexing DW versions. The paper also presents the theoretical upper bound (pessimistic) analysis of the MVJI performance characteristic with respect to I/O operations. The analysis is followed by experimental evaluation. It shows that the MVJI increases a system performance for queries addressing multiple DW versions with exact match and range predicates. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Multiversion join index for multiversion data warehouse", "paper_id": "WOS:000262077500011"}