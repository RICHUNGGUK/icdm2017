{"auto_keywords": [{"score": 0.04162715718691743, "phrase": "model_checking_problem"}, {"score": 0.03485917626028694, "phrase": "data_structures"}, {"score": 0.00481495049065317, "phrase": "linear_temporal_logic_model_checking"}, {"score": 0.00443308765153716, "phrase": "novel_implementation_strategy"}, {"score": 0.004352411290383643, "phrase": "linear_temporal_logic"}, {"score": 0.0036553070575015344, "phrase": "datalog_rules"}, {"score": 0.0034911335714333507, "phrase": "systematic_and_fully_automated_method"}, {"score": 0.0033651019362620866, "phrase": "specialized_algorithm"}, {"score": 0.003097865379563127, "phrase": "generated_implementation"}, {"score": 0.0030135741897058844, "phrase": "incremental_approach"}, {"score": 0.0024842242921857705, "phrase": "precise_time_complexity"}], "paper_keywords": [""], "paper_abstract": "This paper presents a novel implementation strategy for linear temporal logic (LTL) model checking of pushdown systems (PDS). The model checking problem is formulated intuitively in terms of evaluation of Datalog rules. We use a systematic and fully automated method to generate a specialized algorithm and data structures directly from the rules. The generated implementation employs an incremental approach that considers one fact at a time and uses a combination of linked and indexed data structures for facts. We provide precise time complexity for the model checking problem; it is computed automatically and directly from the rules. We obtain a more precise and simplified complexity analysis, as well as improved algorithm understanding.", "paper_title": "Improved algorithm complexities for linear temporal logic model checking of pushdown systems", "paper_id": "WOS:000235836700013"}