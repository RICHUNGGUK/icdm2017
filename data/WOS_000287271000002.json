{"auto_keywords": [{"score": 0.04424296209239414, "phrase": "two-stage_differentiation_flowshop"}, {"score": 0.004720043307726269, "phrase": "fixed_sequences"}, {"score": 0.0046269981365987915, "phrase": "job_type"}, {"score": 0.004358676214574977, "phrase": "total_completion_time_minimization"}, {"score": 0.0031372369299648203, "phrase": "optimal_interleaved_processing_sequence"}, {"score": 0.002955050521440921, "phrase": "first_stage"}, {"score": 0.002444883254621769, "phrase": "type-k_jobs"}, {"score": 0.0023727863021828547, "phrase": "running_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Design of algorithms", " Scheduling", " Differentiation flowshop", " Fixed sequences", " Dynamic programming"], "paper_abstract": "This paper addresses the total completion time minimization in a two-stage differentiation flowshop where the sequences of jobs per type are predetermined. The two-stage differentiation flowshop consists of a stage-1 common machine and m stage-2 parallel dedicated machines. The goal is to determine an optimal interleaved processing sequence of all jobs at the first stage. We propose an O(m(2)Pi(m)(k=1)n(k)(m+1)) dynamic programming algorithm, where n(k) is the number of type-k jobs. The running time is polynomial when m is constant. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Total completion time minimization in a 2-stage differentiation flowshop with fixed sequences per job type", "paper_id": "WOS:000287271000002"}