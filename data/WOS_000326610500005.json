{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "edge-equitable_spanning_trees"}, {"score": 0.00462773520532301, "phrase": "ordered_spanning_tree_problem"}, {"score": 0.004081385289516914, "phrase": "previously_given_coefficients_vector"}, {"score": 0.0036472537997966938, "phrase": "special_attention"}, {"score": 0.003459191419478298, "phrase": "balanced_weights"}, {"score": 0.0027256122357680393, "phrase": "miller-tucker-zemlin_constraints"}, {"score": 0.0024678216843278806, "phrase": "computational_experiment"}, {"score": 0.002234358539133758, "phrase": "objective_non-linear_functions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Integer programming", " Spanning tree", " Ordered median function"], "paper_abstract": "This paper studies the Ordered Spanning Tree Problem, where the weights of the edges of the tree are sorted and then linearly combined using a previously given coefficients vector. Depending on the coefficients, several objectives can be incorporated to the problem. We pay special attention to the search of spanning trees with balanced weights, i.e., where the differences among the weights are, in some sense, minimized. To solve the problem, we propose two Integer Programming formulations, one based on flow and the other one on the Miller-Tucker-Zemlin constraints. We analyze several potential improvements for both the formulations whose behaviors are checked by means of a computational experiment. Finally, we show how both the formulations can be adapted to incorporate to the objective non-linear functions of the weights. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Looking for edge-equitable spanning trees", "paper_id": "WOS:000326610500005"}