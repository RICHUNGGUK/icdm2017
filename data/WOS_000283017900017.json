{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "state-space_models"}, {"score": 0.045032319739093496, "phrase": "gaussian_simulation"}, {"score": 0.004602085616330634, "phrase": "state_variables"}, {"score": 0.004489952932659799, "phrase": "discrete_time_state-space_models"}, {"score": 0.004238775572746022, "phrase": "particular_interest"}, {"score": 0.004135458387200662, "phrase": "direct_analysis"}, {"score": 0.004101579688745222, "phrase": "gaussian_linear_models"}, {"score": 0.004001593118269276, "phrase": "indirect_analysis"}, {"score": 0.0037312893857519803, "phrase": "kalman_filter"}, {"score": 0.0036553070575015344, "phrase": "gaussian_linear_state-space_models"}, {"score": 0.00343652095784611, "phrase": "cfa"}, {"score": 0.00327086925741257, "phrase": "band_diagonal_structure"}, {"score": 0.003230723298995081, "phrase": "hessian_matrix"}, {"score": 0.0031910685060552485, "phrase": "log_density"}, {"score": 0.0031518989079229714, "phrase": "efficient_draws"}, {"score": 0.0030497740719977835, "phrase": "special_structure"}, {"score": 0.0029876282026237207, "phrase": "latent_states"}, {"score": 0.002890810475014827, "phrase": "computational_efficiency"}, {"score": 0.002867098884583832, "phrase": "kalman-filter-based_methods"}, {"score": 0.0027064605585684696, "phrase": "computational_experiments"}, {"score": 0.002461810159687652, "phrase": "observed_variables"}, {"score": 0.002391825892939338, "phrase": "repeated_draws"}, {"score": 0.002276439636865258, "phrase": "multivariate_poisson_model"}, {"score": 0.0022577559526646904, "phrase": "time-varying_intensities"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["State-space models", " Markov chain Monte Carlo", " Importance sampling", " Count data", " High frequency financial data"], "paper_abstract": "Simulation smoothing involves drawing state variables (or innovations) in discrete time state-space models from their conditional distribution given parameters and observations. Gaussian simulation smoothing is of particular interest, not only for the direct analysis of Gaussian linear models, but also for the indirect analysis of more general models. Several methods for Gaussian simulation smoothing exist, most of which are based on the Kalman filter. Since states in Gaussian linear state-space models are Gaussian Markov random fields, it is also possible to apply the Cholesky Factor Algorithm (CFA) to draw states. This algorithm takes advantage of the band diagonal structure of the Hessian matrix of the log density to make efficient draws. We show how to exploit the special structure of state-space models to draw latent states even more efficiently. We analyse the computational efficiency of Kalman-filter-based methods, the CFA, and our new method using counts of operations and computational experiments. We show that for many important cases, our method is most efficient. Gains are particularly large for cases where the dimension of observed variables is large or where one makes repeated draws of states for the same parameter values. We apply our method to a multivariate Poisson model with time-varying intensities, which we use to analyse financial market transaction count data. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Simulation smoothing for state-space models: A computational efficiency analysis", "paper_id": "WOS:000283017900017"}