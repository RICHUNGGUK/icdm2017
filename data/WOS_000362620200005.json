{"auto_keywords": [{"score": 0.03863573199265333, "phrase": "second_heuristic"}, {"score": 0.034514699977015034, "phrase": "karp-sipser_heuristic"}, {"score": 0.00481495049065317, "phrase": "multicore_architectures"}, {"score": 0.004639712384096822, "phrase": "bipartite_matching_problem"}, {"score": 0.004518442937844318, "phrase": "shared-memory_parallelization"}, {"score": 0.004447201233380302, "phrase": "first_heuristic"}, {"score": 0.0043080553835735825, "phrase": "parallelization_perspective"}, {"score": 0.004195418010131832, "phrase": "significant_algorithmic_synchronization_overhead"}, {"score": 0.004129248271757936, "phrase": "conflict_resolution"}, {"score": 0.00385431710959668, "phrase": "approximation_ratio"}, {"score": 0.0037336520904376687, "phrase": "common_conditions"}, {"score": 0.003559675269411366, "phrase": "larger_matching"}, {"score": 0.0034849681064606543, "phrase": "well-known_karp-sipser_heuristic"}, {"score": 0.0034299649219748513, "phrase": "judiciously_chosen_subgraph"}, {"score": 0.003375826910838081, "phrase": "original_graph"}, {"score": 0.0032014433546265694, "phrase": "maximum_cardinality"}, {"score": 0.0031342307827666675, "phrase": "chosen_subgraph"}, {"score": 0.0029722900280316216, "phrase": "general_graphs"}, {"score": 0.0028487656293168795, "phrase": "selected_subgraphs"}, {"score": 0.0027889366191837504, "phrase": "specialized_implementation"}, {"score": 0.0026168641536413978, "phrase": "approximation_guarantee"}, {"score": 0.002481588370380518, "phrase": "first_algorithm"}, {"score": 0.002429451930463481, "phrase": "parallel_implementations"}, {"score": 0.002391067964886602, "phrase": "proposed_heuristics"}, {"score": 0.0023532890136269986, "phrase": "multicore_architecture"}, {"score": 0.002328434471939886, "phrase": "experimental_results"}, {"score": 0.002231607958228148, "phrase": "theoretical_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Shared memory parallelism", " Matching", " Bipartite graphs", " Approximation algorithm"], "paper_abstract": "We propose two heuristics for the bipartite matching problem that are amenable to shared-memory parallelization. The first heuristic is very intriguing from a parallelization perspective. It has no significant algorithmic synchronization overhead and no conflict resolution is needed across threads. We show that this heuristic has an approximation ratio of around 0.632 under some common conditions. The second heuristic is designed to obtain a larger matching by employing the well-known Karp-Sipser heuristic on a judiciously chosen subgraph of the original graph. We show that the Karp-Sipser heuristic always finds a maximum cardinality matching in the chosen subgraph. Although the Karp-Sipser heuristic is hard to parallelize for general graphs, we exploit the structure of the selected subgraphs to propose a specialized implementation which demonstrates very good scalability. We prove that this second heuristic has an approximation guarantee of around 0.866 under the same conditions as in the first algorithm. We discuss parallel implementations of the proposed heuristics on a multicore architecture. Experimental results, for demonstrating speed-ups and verifying the theoretical results in practice, are provided. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Two approximation algorithms for bipartite matching on multicore architectures", "paper_id": "WOS:000362620200005"}