{"auto_keywords": [{"score": 0.03986980848596096, "phrase": "overlapping_regions"}, {"score": 0.03850253843948161, "phrase": "file_consistency_problem"}, {"score": 0.004815116388816289, "phrase": "mpi"}, {"score": 0.003997891221012094, "phrase": "former_case"}, {"score": 0.003623949225126944, "phrase": "parallel_machines"}, {"score": 0.003459191419478298, "phrase": "traditional_solutions"}, {"score": 0.003370907075333389, "phrase": "whole_file"}, {"score": 0.003336225354214798, "phrase": "byte-range_file"}, {"score": 0.003267925215811654, "phrase": "exclusive_access"}, {"score": 0.003151736708029235, "phrase": "file_system_cache"}, {"score": 0.0028864239961184364, "phrase": "aggregate_communication_overhead"}, {"score": 0.0027126684113045756, "phrase": "mpi's_requirements"}, {"score": 0.002670884656785558, "phrase": "portable_operating_system_interface"}, {"score": 0.0026161698049580804, "phrase": "standard_and_propose_two_scalable_approaches"}, {"score": 0.002471400498582011, "phrase": "access_conflicts"}, {"score": 0.00226322835801988, "phrase": "persistent_file_domains"}, {"score": 0.0022168460543913787, "phrase": "cache_coherency"}, {"score": 0.002194011800331242, "phrase": "additional_information"}, {"score": 0.002137947680862631, "phrase": "safe_cache_access"}, {"score": 0.0021049977753042253, "phrase": "file_locks"}], "paper_keywords": ["MPI", " MPI I/O", " atomic I/O", " file atomicity", " file consistency", " cache coherence", " overlapping I/O"], "paper_abstract": "We investigate the Message Passing Interface Input/Output (MPI I/O) implementation issues for two overlapping access patterns: the overlaps among processes within a single I/O operation and the overlaps across a sequence of I/O operations. The former case considers whether I/O atomicity can be obtained in the overlapping regions. The latter focuses on the file consistency problem on parallel machines with client-side file caching enabled. Traditional solutions for both overlapping I/O problems use whole file or byte-range file locking to ensure exclusive access to the overlapping regions and bypass the file system cache. Unfortunately, not only can file locking serialize I/O, but it can also increase the aggregate communication overhead between clients and I/O servers. For atomicity, we first differentiate MPI's requirements from the Portable Operating System Interface (POSIX) standard and propose two scalable approaches, graph coloring and process-rank ordering, which can resolve access conflicts and maintain I/O parallelism. For solving the file consistency problem across multiple I/O operations, we propose a method called Persistent File Domains, which tackles cache coherency with additional information and coordination to guarantee safe cache access without using file locks.", "paper_title": "Scalable design and implementations for MPI parallel overlapping I/O", "paper_id": "WOS:000240698900005"}