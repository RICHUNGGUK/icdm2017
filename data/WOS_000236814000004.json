{"auto_keywords": [{"score": 0.03872466973946225, "phrase": "mstp"}, {"score": 0.0139465594065674, "phrase": "low-weight_edges"}, {"score": 0.013827730304739081, "phrase": "optimum_solutions"}, {"score": 0.00481495049065317, "phrase": "subgraph-selection_problems"}, {"score": 0.0047325016751114165, "phrase": "minimum_weight"}, {"score": 0.004584978036864935, "phrase": "minimum_spanning_tree_problem"}, {"score": 0.004442032546224076, "phrase": "tree_problem"}, {"score": 0.004328383851864678, "phrase": "traveling_salesman_problem"}, {"score": 0.004133443893051179, "phrase": "evolutionary_algorithms"}, {"score": 0.004027658449157296, "phrase": "variation_operators"}, {"score": 0.003902020354497715, "phrase": "biased_edge-exchange_mutation"}, {"score": 0.0038573081851680656, "phrase": "large-scale_empirical_investigation"}, {"score": 0.003835633585589211, "phrase": "euclidean"}, {"score": 0.003813106398912961, "phrase": "uniform_random_instances"}, {"score": 0.00353784217050407, "phrase": "edges'_weight-based_ranks"}, {"score": 0.0034671773098114192, "phrase": "exponential_functions"}, {"score": 0.003437324609836465, "phrase": "approximately_optimal_probabilities"}, {"score": 0.00335896380465609, "phrase": "candidate_solutions"}, {"score": 0.0033108950376365717, "phrase": "theoretical_analysis"}, {"score": 0.003282383509542342, "phrase": "expected_running_time"}, {"score": 0.0031434552452869156, "phrase": "derived_probabilities"}, {"score": 0.0031253798902093457, "phrase": "edge_selection"}, {"score": 0.003010389418340144, "phrase": "classical_implementation"}, {"score": 0.0029930769150284956, "phrase": "kruskal's_minimum_spanning_tree_algorithm"}, {"score": 0.0028498718992429825, "phrase": "new_edge-selection_strategy"}, {"score": 0.0027291997451172486, "phrase": "mstp_support"}, {"score": 0.0026746433547511165, "phrase": "new_strategy"}, {"score": 0.0025393255521438257, "phrase": "ea"}, {"score": 0.002517414574213069, "phrase": "larger_population"}, {"score": 0.0025029300115295317, "phrase": "unbiased_recombination"}, {"score": 0.0024670812720373114, "phrase": "new_biased_mutation"}, {"score": 0.0024458183524365233, "phrase": "alternate_mutations"}, {"score": 0.0024177787123818915, "phrase": "tsp"}, {"score": 0.002383120224166142, "phrase": "weight-biased_mutation"}, {"score": 0.0023153345189871805, "phrase": "specific_new_edge"}, {"score": 0.002255973756526505, "phrase": "second_dependent_edge"}, {"score": 0.0022108561281356863, "phrase": "euclidean_and_uniform_random_instances"}, {"score": 0.0021049977753042253, "phrase": "different_ways"}], "paper_keywords": ["biased operators", " graph problems", " minimum spanning tree problem (MSTP)", " mutation", " traveling salesman problem (TSP)"], "paper_abstract": "Many graph problems seek subgraphs of minimum weight that satisfy a set of constraints. Examples include the minimum spanning tree problem (MSTP), the degree-constrained minimum spanning tree problem (d-MSTP), and the traveling salesman problem (TSP). Low-weight edges predominate in optimum solutions to such problems, and the performance of evolutionary algorithms (EAs) is often improved by biasing variation operators to favor these edges. We investigate the impact of biased edge-exchange mutation. In a large-scale empirical investigation on Euclidean and uniform random instances, we describe the distributions of edges in optimum solutions of the MSTP, the d-MSTP, and the TSP in terms of the edges' weight-based ranks. We approximate these distributions by exponential functions and derive approximately optimal probabilities for selecting edges to be incorporated into candidate solutions during mutation. A theoretical analysis of the expected running time of a (1 + 1)-EA on nondegenerate instances of the MSTP shows that when using the derived probabilities for edge selection in mutation, the (1 + 1)-EA is asymptotically as fast as a classical implementation of Kruskal's minimum spanning tree algorithm. In experiments on the MSTP, d-MSTP, and the TSP, we compare the new edge-selection strategy to four alternative methods. The results of a (1 + 1)-EA on instances of the MSTP support the theory and indicate that the new strategy is superior to the other methods in practice. On instances of the d-MSTP, a more sophisticated EA with a larger population and unbiased recombination performs better with the new biased mutation than with alternate mutations. On the TSP, the advantages of weight-biased mutation are generally smaller, because the insertion of a specific new edge into a tour requires the insertion of a second dependent edge as well. Although we considered Euclidean and uniform random instances only, we conjecture that the same biasing toward low-weight edges also works well on other instance classes structured in different ways.", "paper_title": "Biased mutation operators for subgraph-selection problems", "paper_id": "WOS:000236814000004"}