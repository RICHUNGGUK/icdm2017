{"auto_keywords": [{"score": 0.03325118113972693, "phrase": "robot_services"}, {"score": 0.010773969610724318, "phrase": "end_users"}, {"score": 0.007740489563401459, "phrase": "automated_robot_services"}, {"score": 0.004525088883501587, "phrase": "limited_industrial_areas"}, {"score": 0.004439445472040688, "phrase": "service_areas"}, {"score": 0.004376273644295806, "phrase": "general_public"}, {"score": 0.004334657104697421, "phrase": "everyday_life"}, {"score": 0.004034841146538891, "phrase": "new_services"}, {"score": 0.003529364798514874, "phrase": "abstract_robots'_behaviors"}, {"score": 0.00349577373145384, "phrase": "primitive_robot_functions"}, {"score": 0.0033806943112103397, "phrase": "context_awareness"}, {"score": 0.003253791343615811, "phrase": "appropriate_services"}, {"score": 0.002887028262617443, "phrase": "lowest_layer"}, {"score": 0.002859533151305368, "phrase": "robots'_behaviors"}, {"score": 0.00283229915062791, "phrase": "functional_level"}, {"score": 0.002778604641920052, "phrase": "middle_layer"}, {"score": 0.0026742419973883134, "phrase": "situational_information"}, {"score": 0.0026235360404084137, "phrase": "highest_layer"}, {"score": 0.0025737890313763407, "phrase": "sequential_order"}, {"score": 0.002512926336312949, "phrase": "practically_a_flow"}, {"score": 0.0024417832296664698, "phrase": "intuitive_gui."}, {"score": 0.0023388183537341213, "phrase": "layered_middleware_architecture"}, {"score": 0.00230546852838578, "phrase": "prototype_system"}, {"score": 0.0022509365210787993, "phrase": "facile_definition"}, {"score": 0.00220823903315848, "phrase": "application_level"}, {"score": 0.002145703330831668, "phrase": "robot_service"}, {"score": 0.0021049977753042253, "phrase": "abstraction_process"}], "paper_keywords": [""], "paper_abstract": "These days, using robots has gradually been extending from the limited industrial areas in factories to service areas for the general public in everyday life. It is possible to imagine that end users easily control robots and they define new services by themselves as they wish in the near future. However, there are three issues to resolve to realize the future. Firstly, it is required to abstract robots' behaviors from primitive robot functions, and secondly, we need context awareness in order to provide users with the appropriate services. Lastly end users can define the robot services easily. In this paper, we propose three layered middleware architecture for automated robot services to resolve the problems. The lowest layer abstracts robots' behaviors in functional level, and the middle layer provides users with robot services based on the situational information. And the highest layer defines robot services by sequential order. End users can define practically a flow of robot services by using an intuitive GUI. We showed the availability and effectiveness of the layered middleware architecture with a prototype system, which presents the facile definition of robot services in application level, the control process of robot service, and the abstraction process of robot services.", "paper_title": "A Layered Middleware Architecture for Automated Robot Services", "paper_id": "WOS:000337418600001"}