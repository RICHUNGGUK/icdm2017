{"auto_keywords": [{"score": 0.03104244392514206, "phrase": "tabular_expression-based_specifications"}, {"score": 0.00481495049065317, "phrase": "tabular_expression-based_testing_strategies"}, {"score": 0.004337710093279712, "phrase": "mathematically_precise_but_readable_software_specifications"}, {"score": 0.0035199624440843892, "phrase": "partition_strategy"}, {"score": 0.002686935113435742, "phrase": "mathematical_basis"}, {"score": 0.002640507929183363, "phrase": "formal_and_precise_definitions"}, {"score": 0.0025723630851105304, "phrase": "subsumption_relationship"}, {"score": 0.0023990982005125763, "phrase": "experimental_studies"}, {"score": 0.002237477619351199, "phrase": "current_methods"}, {"score": 0.0021049977753042253, "phrase": "appropriate_testing_strategies"}], "paper_keywords": ["Tabular expression", " test case constraint", " subsume", " unconditionally subsume", " conditionally subsume"], "paper_abstract": "Tabular expressions have been proposed as a notation to document mathematically precise but readable software specifications. One of the many roles of such documentation is to guide testers. This paper 1) explores the application of four testing strategies (the partition strategy, decision table-based testing, the basic meaningful impact strategy, and fault-based testing) to tabular expression-based specifications, and 2) compares the strategies on a mathematical basis through formal and precise definitions of the subsumption relationship. We also compare these strategies through experimental studies. These results will help researchers improve current methods and will enable testers to select appropriate testing strategies for tabular expression-based specifications.", "paper_title": "A Comparison of Tabular Expression-Based Testing Strategies", "paper_id": "WOS:000295162900002"}