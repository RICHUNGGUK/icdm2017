{"auto_keywords": [{"score": 0.033346880904386214, "phrase": "formal_specification"}, {"score": 0.00481495049065317, "phrase": "long_time"}, {"score": 0.004708056866527125, "phrase": "major_research_goals"}, {"score": 0.004645057834614705, "phrase": "computer_science_research_community"}, {"score": 0.004481132747216135, "phrase": "abstraction_power"}, {"score": 0.004023120753104693, "phrase": "limited_computer_support"}, {"score": 0.003933736547198066, "phrase": "inefficient_implementations"}, {"score": 0.0038290829316346654, "phrase": "executable_specification_languages"}, {"score": 0.0037948184359488284, "phrase": "high_abstraction_power"}, {"score": 0.00374399358035391, "phrase": "high_performance"}, {"score": 0.003660788124282824, "phrase": "practical_usage"}, {"score": 0.003595552309967789, "phrase": "execution_speed"}, {"score": 0.0034841647157189985, "phrase": "low-level_languages"}, {"score": 0.003256922225995089, "phrase": "efficient_executable_specification_languages"}, {"score": 0.0031845067058084583, "phrase": "first_area"}, {"score": 0.0031277316566463978, "phrase": "programming_language_semantics"}, {"score": 0.0030171910207671205, "phrase": "complex_systems"}, {"score": 0.002923668065402269, "phrase": "object-oriented_mathematical_modeling_language"}, {"score": 0.0028974829585803586, "phrase": "modelica"}, {"score": 0.0028586409810976367, "phrase": "architectural_support"}, {"score": 0.0026481480455339055, "phrase": "unified_equation-based_mathematical_modeling_language"}, {"score": 0.0025316254589087973, "phrase": "programming_languages"}, {"score": 0.0025089420019955232, "phrase": "computer_algebra"}, {"score": 0.0024864612830452254, "phrase": "event-driven_systems"}, {"score": 0.002453116398642071, "phrase": "continuous-time_physical_systems"}, {"score": 0.0024202176034746337, "phrase": "key_unifying_feature"}, {"score": 0.0022318655527987846, "phrase": "unified_language"}, {"score": 0.0022019274077124795, "phrase": "compiler_implementation"}, {"score": 0.0021049977753042253, "phrase": "substantial_applications"}], "paper_keywords": [""], "paper_abstract": "For a long time, one of the major research goals in the computer science research community has been to raise the level of abstraction power of specification languages/programming languages. Many specification languages and formalisms have been invented, but unfortunately very few of those are practically useful, due to limited computer support of these languages and/or inefficient implementations. Thus, one important goal is executable specification languages of high abstraction power and with high performance, good enough for practical usage and comparable in execution speed to hand implementations of applications in low-level languages such as C or C++. In this paper we briefly describe our work in creating efficient executable specification languages for two application domains. The first area is formal specification of programming language semantics, whereas the second is formal specification of complex systems for which we have developed an object-oriented mathematical modeling language called Modelica, including architectural support for components and connectors. Based on these efforts, we are currently working on a unified equation-based mathematical modeling language that can handle modeling of items as diverse as programming languages, computer algebra, event-driven systems, and continuous-time physical systems. The key unifying feature is the notion of equation. In this paper we describe the design and implementation of the unified language. A compiler implementation is already up and running, and used for substantial applications.", "paper_title": "MetaModelica: A unified equation-based semantical and mathematical modeling language", "paper_id": "WOS:000241813400014"}