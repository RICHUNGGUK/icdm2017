{"auto_keywords": [{"score": 0.05007852962005366, "phrase": "clustering"}, {"score": 0.004781915513030716, "phrase": "noisy_comparisons"}, {"score": 0.004588389551682397, "phrase": "comparison_operations"}, {"score": 0.004138010495069077, "phrase": "type_comparison"}, {"score": 0.0037965243835456214, "phrase": "value_comparison"}, {"score": 0.0037060428445111694, "phrase": "efficient_algorithms"}, {"score": 0.0036301992752948956, "phrase": "correct_results"}, {"score": 0.0036052633308076933, "phrase": "high_probability"}, {"score": 0.003459191419478298, "phrase": "total_number"}, {"score": 0.0033651019362620866, "phrase": "fixed-cost_model"}, {"score": 0.0030344301563232944, "phrase": "error_model"}, {"score": 0.0028715299874549245, "phrase": "sorted_order_increases"}, {"score": 0.002803031561019101, "phrase": "important_class"}, {"score": 0.0027837615811247963, "phrase": "cost_functions"}, {"score": 0.002492810341589618, "phrase": "important_first_step"}, {"score": 0.0024586427394152196, "phrase": "formal_basis"}, {"score": 0.0023999697562763433, "phrase": "crowdsourcing_applications"}, {"score": 0.00226322835801988, "phrase": "simplifying_assumptions"}, {"score": 0.0021714122348552747, "phrase": "generalized_crowdsourcing_setting"}, {"score": 0.0021049977753042253, "phrase": "full-fledged_model"}], "paper_keywords": ["Algorithms", " Theory", " Top-k", " clustering", " algorithm", " approximation", " crowdsourcing"], "paper_abstract": "We study the problems of max/top-k and clustering when the comparison operations may be performed by oracles whose answer may be erroneous. Comparisons may either be of type or of value: given two data elements, the answer to a type comparison is \"yes\" if the elements have the same type and therefore belong to the same group (cluster); the answer to a value comparison orders the two data elements. We give efficient algorithms that are guaranteed to achieve correct results with high probability, analyze the cost of these algorithms in terms of the total number of comparisons (i.e., using a fixed-cost model), and show that they are essentially the best possible. We also show that fewer comparisons are needed when values and types are correlated, or when the error model is one in which the error decreases as the distance between the two elements in the sorted order increases. Finally, we examine another important class of cost functions, concave functions, which balances the number of rounds of interaction with the oracle with the number of questions asked of the oracle. Results of this article form an important first step in providing a formal basis for max/top-k and clustering queries in crowdsourcing applications, that is, when the oracle is implemented using the crowd. We explain what simplifying assumptions are made in the analysis, what results carry to a generalized crowdsourcing setting, and what extensions are required to support a full-fledged model.", "paper_title": "Top-k and Clustering with Noisy Comparisons", "paper_id": "WOS:000347799000010"}