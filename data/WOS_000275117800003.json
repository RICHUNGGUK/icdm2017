{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "context-driven_dynamic_agent_organizations"}, {"score": 0.03909061387037846, "phrase": "dual_responsibility"}, {"score": 0.030243292324834446, "phrase": "dynamic_organizations"}, {"score": 0.025950633620500277, "phrase": "software_architecture"}, {"score": 0.004736973212570135, "phrase": "major_challenges"}, {"score": 0.00469079145638866, "phrase": "distributed_multiagent_systems"}, {"score": 0.004540064673326908, "phrase": "different_agents"}, {"score": 0.0041703614123283165, "phrase": "global_control"}, {"score": 0.0040893952934649485, "phrase": "global_knowledge"}, {"score": 0.0040099947738626495, "phrase": "dynamic_interactions"}, {"score": 0.0037808893362191887, "phrase": "existing_approaches"}, {"score": 0.0034164751616551437, "phrase": "organization_dynamics"}, {"score": 0.0033831234599419435, "phrase": "realistic_multiagent_systems"}, {"score": 0.003285002755070217, "phrase": "complex_task"}, {"score": 0.0030870755475461494, "phrase": "integrated_approach"}, {"score": 0.0030569295881497176, "phrase": "macodo"}, {"score": 0.0030369955065974222, "phrase": "middleware_architecture_for_context-driven"}, {"score": 0.0030270771166811296, "phrase": "dynamic_agent_organizations"}, {"score": 0.0029975152932436144, "phrase": "complementary_part"}, {"score": 0.0029682413050825677, "phrase": "macodo_approach"}, {"score": 0.0029392523663327253, "phrase": "organization_model"}, {"score": 0.0028821186265508597, "phrase": "application_developers"}, {"score": 0.0028076592725295646, "phrase": "weyns_et_al"}, {"score": 0.0027440826979105533, "phrase": "macodo_middleware"}, {"score": 0.002717277008333612, "phrase": "life-cycle_management"}, {"score": 0.002664446536828292, "phrase": "reusable_service"}, {"score": 0.0025038150103055823, "phrase": "multiagent_systems"}, {"score": 0.0024631735269020735, "phrase": "detailed_description"}, {"score": 0.0024152714799789547, "phrase": "madoco_middleware"}, {"score": 0.0023682987863242427, "phrase": "essential_building_blocks"}, {"score": 0.0023451553255837317, "phrase": "distributed_middleware_platform"}, {"score": 0.002314647987893668, "phrase": "macodo_organization_model"}, {"score": 0.0022770700208637807, "phrase": "middleware_architecture"}, {"score": 0.002247446386787241, "phrase": "prototype_middleware_platform"}, {"score": 0.002225481283887324, "phrase": "traffic_monitoring_application"}, {"score": 0.002189347748410919, "phrase": "macodo_middeware_architecture"}, {"score": 0.0021049977753042253, "phrase": "prototype_platform"}], "paper_keywords": ["Design", " Experimentation"], "paper_abstract": "One of the major challenges in engineering distributed multiagent systems is the coordination necessary to align the behavior of different agents. Decentralization of control implies a style of coordination in which the agents cooperate as peers with respect to each other and no agent has global control over the system, or global knowledge about the system. The dynamic interactions and collaborations among agents are usually structured and managed by means of roles and organizations. In existing approaches agents typically have a dual responsibility: on the one hand playing roles within the organization, on the other hand managing the life-cycle of the organization itself, for example, setting up the organization and managing organization dynamics. Engineering realistic multiagent systems in which agents encapsulate this dual responsibility is a complex task. In this article, we present a middleware for context-driven dynamic agent organizations. The middleware is part of an integrated approach, called MACODO: Middleware Architecture for COntext-driven Dynamic agent Organizations. The complementary part of the MACODO approach is an organization model that defines abstractions to support application developers in describing dynamic organizations, as described in Weyns et al. [2010]. The MACODO middleware offers the life-cycle management of dynamic organizations as a reusable service separated from the agents, which makes it easier to understand, design, and manage dynamic organizations in multiagent systems. We give a detailed description of the software architecture of the MADOCO middleware. The software architecture describes the essential building blocks of a distributed middleware platform that supports the MACODO organization model. We used the middleware architecture to develop a prototype middleware platform for a traffic monitoring application. We evaluate the MACODO middeware architecture by assessing the adaptability, scalability, and robustness of the prototype platform.", "paper_title": "The MACODO Middleware for Context-Driven Dynamic Agent Organizations", "paper_id": "WOS:000275117800003"}