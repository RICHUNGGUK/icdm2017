{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "feedback"}, {"score": 0.04943456728713578, "phrase": "adaptive"}, {"score": 0.029266591063364558, "phrase": "afa_prefetcher"}, {"score": 0.004656871909510407, "phrase": "data_access"}, {"score": 0.004618166136069052, "phrase": "high-performance_processors"}, {"score": 0.0045607070754363245, "phrase": "rapid_advance"}, {"score": 0.004522796947899013, "phrase": "processor_architectures"}, {"score": 0.004447915226010682, "phrase": "emerged_multicore_architectures"}, {"score": 0.004392565073466714, "phrase": "substantially_increased_computing_capability"}, {"score": 0.004248294537944227, "phrase": "sluggish_memory_systems"}, {"score": 0.0039737570920809215, "phrase": "data-access_delay"}, {"score": 0.0038271712887391015, "phrase": "leading_performance_bottleneck"}, {"score": 0.003795335309109018, "phrase": "high-performance_computing"}, {"score": 0.003701401653850141, "phrase": "effective_solution"}, {"score": 0.0036553070575015344, "phrase": "applications'_data"}, {"score": 0.003579750245670577, "phrase": "growing_gap"}, {"score": 0.003505749731180509, "phrase": "data-access_speed"}, {"score": 0.0032517484445814334, "phrase": "computing_power_consumption_concern"}, {"score": 0.0031579997262619758, "phrase": "low_effectiveness"}, {"score": 0.0028805513421146663, "phrase": "afa"}, {"score": 0.0027054473441439422, "phrase": "data-access_history_cache"}, {"score": 0.002594652434287807, "phrase": "data_access_acceleration"}, {"score": 0.0025409639091476363, "phrase": "algorithm-level_adaptation"}, {"score": 0.002447101794397243, "phrase": "prefetching_algorithms"}, {"score": 0.0023764959294052964, "phrase": "extensive_simulation_testing"}, {"score": 0.002346861891137455, "phrase": "simplescalar_simulator"}, {"score": 0.0022601535748259785, "phrase": "performance_gain"}, {"score": 0.00223196703759329, "phrase": "simulation_results"}, {"score": 0.0021405207258001118, "phrase": "instructions_per_cycle"}], "paper_keywords": ["Data prefetching", " Adaptive prefetching", " Data access acceleration", " Application accelerator", " High-performance processors", " Memory hierarchy", " Memory wall"], "paper_abstract": "The rapid advance of processor architectures such as the emerged multicore architectures and the substantially increased computing capability on chip have put more pressure on the sluggish memory systems than ever. In the meantime, many applications become more and more data intensive. Data-access delay, not the processor speed, becomes the leading performance bottleneck of high-performance computing. Data prefetching is an effective solution to accelerating applications' data access and bridging the growing gap between computing speed and data-access speed. Existing works of prefetching, however, are very conservative in general, due to the computing power consumption concern of the past. They suffer low effectiveness especially when applications' access pattern changes. In this study, we propose an Algorithm-level Feedback-controlled Adaptive (AFA) data prefetcher to address these issues. The AFA prefetcher is based on the Data-Access History Cache, a hardware structure that is specifically designed for data access acceleration. It provides an algorithm-level adaptation and is capable of dynamically adapting to appropriate prefetching algorithms at runtime. We have conducted extensive simulation testing with the SimpleScalar simulator to validate the design and to analyze the performance gain. The simulation results show that the AFA prefetcher is effective and achieves considerable IPC (Instructions Per Cycle) improvement for 21 representative SPEC-CPU benchmarks. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Algorithm-level Feedback-controlled Adaptive data prefetcher: Accelerating data access for high-performance processors", "paper_id": "WOS:000311528900001"}