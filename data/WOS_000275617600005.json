{"auto_keywords": [{"score": 0.03881357674286589, "phrase": "reshape_framework"}, {"score": 0.00481495049065317, "phrase": "scheduling_framework"}, {"score": 0.004757227624616643, "phrase": "resizable_parallel_applications"}, {"score": 0.004533142516832776, "phrase": "initial_implementation"}, {"score": 0.004451846834142146, "phrase": "software_framework"}, {"score": 0.004319566932528865, "phrase": "distributed-memory_parallel_applications"}, {"score": 0.0037597491055035895, "phrase": "parallel_application"}, {"score": 0.0035824802350703376, "phrase": "cluster_scheduler"}, {"score": 0.0034759420565135253, "phrase": "data_redistribution"}, {"score": 0.003332072426367186, "phrase": "application_programming_interface"}, {"score": 0.0032920975031532334, "phrase": "api"}, {"score": 0.003080449000295983, "phrase": "resizing_library"}, {"score": 0.002796616969627065, "phrase": "additional_free_processors"}, {"score": 0.0026970382454914437, "phrase": "high_priority_application"}, {"score": 0.002616762777413686, "phrase": "experimental_results"}, {"score": 0.0024932498388507084, "phrase": "individual_job_turnaround_time"}, {"score": 0.0024632912250657636, "phrase": "overall_system_throughput"}, {"score": 0.0022633993976138387, "phrase": "convenient_platform"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling malleable applications", " Run-time systems", " Malleability in distributed-memory systems", " Dynamic scheduling", " High performance computing", " Dynamic resizing", " Data redistribution", " Application resizing framework"], "paper_abstract": "This paper describes the design and initial implementation of a software framework for exploiting resizability in distributed-memory parallel applications. By \"resizable\" we mean the ability at run-time to expand or contract the number of processes participating in a parallel application. The ReSHAPE framework described here includes a cluster scheduler, a library supporting data redistribution and process remapping, and an application programming interface (API) which allows applications to interact with the scheduler and resizing library with only minor code modifications. Parallel applications executed using the ReSHAPE framework can expand to take advantage of additional free processors or contract to accommodate a high priority application without being suspended. Experimental results show that the ReSHAPE framework can significantly improve individual job turnaround time and overall system throughput, even with very simple application scheduling policies. In addition, the framework serves as a convenient platform for research into much more sophisticated cluster scheduling policies and methods. (c) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Design and performance of a scheduling framework for resizable parallel applications", "paper_id": "WOS:000275617600005"}