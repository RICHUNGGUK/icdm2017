{"auto_keywords": [{"score": 0.04850161465082996, "phrase": "job_scheduling"}, {"score": 0.03456265793643298, "phrase": "tmwd"}, {"score": 0.02373397024087816, "phrase": "dag_simulator"}, {"score": 0.00481495049065317, "phrase": "list_scheduling_heuristics"}, {"score": 0.004761494044422926, "phrase": "dependent_job_scheduling"}, {"score": 0.00470862827326028, "phrase": "grid_computing_environments"}, {"score": 0.004579005794486596, "phrase": "critical_role"}, {"score": 0.004528156929805637, "phrase": "resource_utilisation"}, {"score": 0.00445293569103488, "phrase": "grid_computing_environment"}, {"score": 0.004330321475256457, "phrase": "grid_resources"}, {"score": 0.00389427992231721, "phrase": "direct_acyclic_graphs"}, {"score": 0.0036826452656927877, "phrase": "job_scheduling_optimisation"}, {"score": 0.0035811651542886746, "phrase": "six_heuristic_enhancements"}, {"score": 0.003311604528903634, "phrase": "upward_dag_levelling"}, {"score": 0.003149102893575835, "phrase": "slack"}, {"score": 0.0030967107893195246, "phrase": "task_scheduling"}, {"score": 0.0030451958332949735, "phrase": "slack_time"}, {"score": 0.0029447150254434842, "phrase": "slack_heuristic"}, {"score": 0.002895721231882758, "phrase": "nlpets"}, {"score": 0.0026626797255348287, "phrase": "lslack"}, {"score": 0.002603758927691463, "phrase": "best_heuristics"}, {"score": 0.002546267097416754, "phrase": "bl"}, {"score": 0.0025178184515857885, "phrase": "lmt"}, {"score": 0.00244834685428352, "phrase": "heuristic_enhancements"}, {"score": 0.0024346858809238766, "phrase": "mmsts"}, {"score": 0.0023151088048303705, "phrase": "generated_schedules"}, {"score": 0.002263861731320045, "phrase": "performance_evaluation"}, {"score": 0.0021049977753042253, "phrase": "dag_job_configuration"}], "paper_keywords": ["Grid computing", " Dependent job scheduling", " Heuristics", " Direct acyclic graphs", " Job scheduling optimisation"], "paper_abstract": "Job scheduling plays a critical role in resource utilisation in a grid computing environment. The heterogeneity of grid resources adds some challenges to the work of job scheduling especially when jobs have dependencies which can be represented as Direct Acyclic Graphs (DAGs). Heuristics have been developed for job scheduling optimisation. This paper presents six heuristic enhancements-MMSTFT for minimising both makespan and task finish time, levelU for upward DAG levelling, TMWD for matching tasks with data, Slack for prioritising task scheduling based on slack time, LSlack for levelling the Slack heuristic, and NLPETS for non-levelling of performance effective task scheduling (PETS). The performance of LSlack is amongst the best heuristics evaluated (with BL and LMT). Additionally, heuristic enhancements MMSTS and TMWD can significantly improve the makespan of generated schedules. To facilitate performance evaluation, a DAG simulator is implemented which provides a set of tools for DAG job configuration, execution and monitoring. The components of the DAG simulator are also presented in this paper.", "paper_title": "Enhancing list scheduling heuristics for dependent job scheduling in grid computing environments", "paper_id": "WOS:000297359600006"}