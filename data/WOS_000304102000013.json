{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automating_data_analysis"}, {"score": 0.004663396040465122, "phrase": "silicon_debug_environment"}, {"score": 0.004565007074039171, "phrase": "growing_size"}, {"score": 0.00451659023910662, "phrase": "modern_designs"}, {"score": 0.004304963945457799, "phrase": "pre-silicon_verification"}, {"score": 0.00421410521089045, "phrase": "silicon_prototypes"}, {"score": 0.003995226376780718, "phrase": "fabrication_process"}, {"score": 0.003952828685048176, "phrase": "silicon_debug"}, {"score": 0.003869373085652601, "phrase": "necessary_step"}, {"score": 0.0038079353103469865, "phrase": "digital_integrated_circuit_design_flow"}, {"score": 0.0036488111139918135, "phrase": "scan_chains"}, {"score": 0.003422462630994095, "phrase": "internal_signals"}, {"score": 0.0033861224940737846, "phrase": "real_time"}, {"score": 0.0031255543155487234, "phrase": "pre-silicon_debugging"}, {"score": 0.0030270132320276096, "phrase": "automated_software_solution"}, {"score": 0.0029630461161780203, "phrase": "sparse_data"}, {"score": 0.0026914710445743693, "phrase": "configuration_process"}, {"score": 0.002662871928330334, "phrase": "trace-buffer-based_hardware"}, {"score": 0.002592693161475495, "phrase": "helpful_information"}, {"score": 0.0024578219177450876, "phrase": "hardware_constraints"}, {"score": 0.0023051837161137674, "phrase": "traceable_set"}, {"score": 0.0021049977753042253, "phrase": "proposed_software_solution"}], "paper_keywords": ["Boolean satisfiability", " data acquisition setup", " post-silicon diagnosis", " Silicon debug", " test"], "paper_abstract": "With the growing size of modern designs and more strict time-to-market constraints, design errors can unavoidably escape pre-silicon verification and reside in silicon prototypes. Due to those errors and faults in the fabrication process, silicon debug has become a necessary step in the digital integrated circuit design flow. Embedded hardware blocks, such as scan chains and trace buffers, provide a means to acquire data of internal signals in real time for debugging. However, the amount of the data is limited compared to pre-silicon debugging. This paper presents an automated software solution to analyze this sparse data to detect suspects of the failure in both the spatial and temporal domain. It also introduces a technique to automate the configuration process for trace-buffer-based hardware in order to acquire helpful information for debugging the failure. The technique takes the hardware constraints into account and identifies alternatives for signals not part of the traceable set so that their values can be restored by implications. The experiments demonstrate the effectiveness of the proposed software solution in terms of run-time and resolution.", "paper_title": "Automating Data Analysis and Acquisition Setup in a Silicon Debug Environment", "paper_id": "WOS:000304102000013"}