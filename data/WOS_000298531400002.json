{"auto_keywords": [{"score": 0.04915207774681705, "phrase": "physics_principles"}, {"score": 0.004815215771351808, "phrase": "java"}, {"score": 0.004675768396728975, "phrase": "computer_modeling"}, {"score": 0.004607686390487483, "phrase": "powerful_instructional_tool"}, {"score": 0.004345085569121329, "phrase": "physical_models"}, {"score": 0.004178351419209898, "phrase": "physics_phenomena"}, {"score": 0.0037519679864796906, "phrase": "discipline-specific_code_libraries"}, {"score": 0.0036792371574197826, "phrase": "needed_functionality"}, {"score": 0.0036256123915754303, "phrase": "platform_independent_manner"}, {"score": 0.0034020946201397057, "phrase": "computer-generated_data"}, {"score": 0.0033524956061690868, "phrase": "complex_motion"}, {"score": 0.0032237268289353983, "phrase": "hardware_accelerated_video_cards"}, {"score": 0.0028944757265206332, "phrase": "abstract_java_interfaces"}, {"score": 0.0026115277372906805, "phrase": "java-enabled_computer"}, {"score": 0.002535876002754739, "phrase": "new_implementation"}, {"score": 0.0023677483882740317, "phrase": "implemented_models"}, {"score": 0.0021678232353129472, "phrase": "compadre_osp_digital_library"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Java", " Java 3D", " Three-dimensional visualization", " Simulations"], "paper_abstract": "Computer modeling is a powerful instructional tool which can be used to engage students in the design of physical models to describe, explain, and predict physics phenomena. Because implementing a model is difficult for researchers and teachers as well as for students, professionals almost always use discipline-specific code libraries to access a needed functionality in a platform independent manner. For example, although three-dimensional (3D) visualization is of great importance when displaying computer-generated data or showing complex motion, few users are prepared to deal with hardware accelerated video cards to graphically display a visualization. This paper describes a Java-based 3D framework which is based on physics principles. Our framework is defined using abstract Java interfaces that are implemented in the Open Source Physics (OSP) code library. The library contains a Simple 3D implementation that uses only the standard Java distribution and will run on any Java-enabled computer. This paper introduces a new implementation that makes use of Java 3D to improve both the performance and the appearance of implemented models. Examples are presented using both pure Java code and the Easy Java Simulations authoring tool and these examples are available through the ComPADRE OSP digital library. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A new 3D visualization Java framework based on physics principles", "paper_id": "WOS:000298531400002"}