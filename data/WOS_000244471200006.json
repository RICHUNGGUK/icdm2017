{"auto_keywords": [{"score": 0.04941343102175344, "phrase": "shannon_decomposition"}, {"score": 0.015719716506582538, "phrase": "sequential_cycles"}, {"score": 0.012503675363005872, "phrase": "tight_sequential_cycles"}, {"score": 0.004395984840790689, "phrase": "high-performance_circuits"}, {"score": 0.004215057618794356, "phrase": "packet_processing"}, {"score": 0.004069963083642548, "phrase": "powerful_technique"}, {"score": 0.0040133278382101885, "phrase": "speeding_pipelines"}, {"score": 0.0035376693476114733, "phrase": "retiming_-_effectively_a_form"}, {"score": 0.0032294837250130327, "phrase": "efficient_algorithm"}, {"score": 0.0025801648787263662, "phrase": "performance_increase"}, {"score": 0.0021049977753042253, "phrase": "synthesis_flow"}], "paper_keywords": ["circuit optimization", " circuit synthesis", " encoding", " sequential logic circuits"], "paper_abstract": "Optimizing sequential cycles is essential for many types of high-performance circuits, such as pipelines for packet processing. Retiming is a powerful technique for speeding pipelines, but it is stymied by tight sequential cycles. Designers usually attack such cycles by manually combining Shannon decomposition with retiming - effectively a form of speculation - but such manual decomposition is error prone. We propose an efficient algorithm that simultaneously applies Shannon decomposition and retiming to optimize circuits with tight sequential cycles. While the algorithm is only able to improve certain circuits (roughly half of the benchmarks we tried), the performance increase can be dramatic (7%-61%) with only a modest increase in area (1%-12%). The algorithm is also fast, making,it a practical addition to a synthesis flow.", "paper_title": "Optimizing sequential cycles through Shannon decomposition and retiming", "paper_id": "WOS:000244471200006"}