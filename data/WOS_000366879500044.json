{"auto_keywords": [{"score": 0.039727979573206104, "phrase": "global_synchronization"}, {"score": 0.034943082878889815, "phrase": "communication_relations"}, {"score": 0.00481495049065317, "phrase": "many-core_architectures"}, {"score": 0.004643839937761046, "phrase": "adaptive_approach"}, {"score": 0.004588158931776543, "phrase": "parallel_simulation"}, {"score": 0.004533142516832776, "phrase": "systemc_rtl_models"}, {"score": 0.004478782833067256, "phrase": "future_many-core_architectures"}, {"score": 0.004398457709182882, "phrase": "single-chip_cloud_computer"}, {"score": 0.004267808754125291, "phrase": "intel"}, {"score": 0.004042166795461166, "phrase": "configurable_parallel_systemc_kernel"}, {"score": 0.003945754887845885, "phrase": "partial_order"}, {"score": 0.0038516336597530614, "phrase": "systemc_delta_cycles"}, {"score": 0.003626000977962191, "phrase": "underlying_algorithm"}, {"score": 0.003496994062890991, "phrase": "existing_communication_relations"}, {"score": 0.0034550163444256386, "phrase": "parallel_processes"}, {"score": 0.003174903873774882, "phrase": "causality_conditions"}, {"score": 0.0029887957779347394, "phrase": "parallel_kernel"}, {"score": 0.002899861600151726, "phrase": "automated_tool_flow"}, {"score": 0.002830617996609902, "phrase": "relevant_model-specific_properties"}, {"score": 0.0027630232270330402, "phrase": "fine-grained_model"}, {"score": 0.0025235718883452585, "phrase": "mpsoc_model_show"}, {"score": 0.0024932498388507084, "phrase": "pure_local_synchronization"}, {"score": 0.002448446849997207, "phrase": "significant_performance_gains"}, {"score": 0.002304824112812496, "phrase": "local_synchronization"}, {"score": 0.0022771244331421586, "phrase": "fine-grained_partitioning"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Adaptive algorithm", " Many-core", " Parallel simulation", " SystemC"], "paper_abstract": "Within this article an adaptive approach for parallel simulation of SystemC RTL Models on future many-core architectures like the Single-chip Cloud Computer (SCC) from Intel is presented. It is based on a configurable parallel SystemC kernel that preserves the partial order defined by the SystemC delta cycles while avoiding global synchronization as far as possible. The underlying algorithm relies on a classification of existing communication relations between parallel processes. The type and topology of communication relations determines the type and number of causality conditions that need to be fulfilled during runtime. The parallel kernel is complemented by an automated tool flow that allows detecting relevant model-specific properties, performing a fine-grained model partitioning, classifying communication relations and configuring the kernel. Experiments by means of a MPSoC model show that pure local synchronization can provide significant performance gains compared to global synchronization. Furthermore, the combination of local synchronization with fine-grained partitioning provides additional degrees of freedom for optimization. (c) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive algorithm and tool flow for accelerating SystemC on many-core architectures", "paper_id": "WOS:000366879500044"}