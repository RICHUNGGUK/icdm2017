{"auto_keywords": [{"score": 0.03350294552252322, "phrase": "redundant_rules"}, {"score": 0.006759656126470509, "phrase": "packet_classifiers"}, {"score": 0.00476167303775568, "phrase": "packet_classification"}, {"score": 0.0047221003380992525, "phrase": "core_mechanism"}, {"score": 0.004605335502605577, "phrase": "firewall_packet_filtering"}, {"score": 0.004579780586951551, "phrase": "traffic_accounting"}, {"score": 0.004541712637353326, "phrase": "ternary_content_addressable_memories"}, {"score": 0.004466519142879166, "phrase": "high-speed_packet_classification"}, {"score": 0.004417079972725732, "phrase": "de_facto_standard"}, {"score": 0.004308707765027642, "phrase": "tcam_entries"}, {"score": 0.004307824824939332, "phrase": "constant_time"}, {"score": 0.004224712426762704, "phrase": "classification_rules"}, {"score": 0.004201260666621267, "phrase": "ternary_encoding"}, {"score": 0.004074574278425223, "phrase": "well-known_interval_expansion_problem"}, {"score": 0.003897064755246921, "phrase": "tcam-compatible_rules"}, {"score": 0.0038431888954930083, "phrase": "explosive_increase"}, {"score": 0.003685972800046028, "phrase": "large_capacities"}, {"score": 0.003371670107290574, "phrase": "growing_number"}, {"score": 0.003215711939910443, "phrase": "interval_expansion_problem"}, {"score": 0.003127352773772064, "phrase": "equivalent_transformation"}, {"score": 0.0029993317330442104, "phrase": "real-life_classifiers"}, {"score": 0.002974361501127496, "phrase": "average_reduction"}, {"score": 0.002860546817196148, "phrase": "logical_interleaving_nature"}, {"score": 0.002844646030750337, "phrase": "packet_filtering_rules"}, {"score": 0.002587429107459106, "phrase": "first_time"}, {"score": 0.002551612225562499, "phrase": "necessary_and_sufficient_condition"}, {"score": 0.002426717832834137, "phrase": "upward_redundant_rules"}, {"score": 0.002413222714874815, "phrase": "downward_redundant_rules"}, {"score": 0.0022507188208913394, "phrase": "resulting_classifiers"}, {"score": 0.0021705796895687864, "phrase": "extensive_experiments"}, {"score": 0.0021405207258001118, "phrase": "synthetic_classifiers"}, {"score": 0.00212268510072928, "phrase": "experimental_results"}], "paper_keywords": ["Packet classification", " Ternary Content Addressable Memory (TCAM)", " redundant rules"], "paper_abstract": "Packet classification is the core mechanism that enables many networking services on the Internet such as firewall packet filtering and traffic accounting. Using Ternary Content Addressable Memories (TCAMs) to perform high-speed packet classification has become the de facto standard in the industry. TCAMs classify packets in constant time by comparing a packet with all classification rules of ternary encoding in parallel. Despite their high speed, TCAMs suffer from the well-known interval expansion problem. As packet classification rules usually have fields specified as intervals, converting such rules to TCAM-compatible rules may result in an explosive increase in the number of rules. This is not a problem if TCAMs have large capacities. Unfortunately, TCAMs have very limited capacity, and more rules means more power consumption and more heat generation for TCAMs. Even worse, the number of rules in packet classifiers have been increasing rapidly with the growing number of services deployed on the Internet. In this paper, we propose to address the interval expansion problem of TCAMs by removing redundant rules in classifiers. This equivalent transformation can significantly reduce the number of TCAM entries needed by a classifier. Our experiments on real-life classifiers show an average reduction of 58.2 percent in the number of TCAM entries by removing redundant rules. Given the logical interleaving nature of packet filtering rules, identifying redundant rules in classifiers is by no means trivial, and to achieve the guarantee of no redundant rules in resulting classifiers is even more challenging. In this paper, for the first time, we give a necessary and sufficient condition for identifying all redundant rules in a classifier. Based on this condition, we categorize redundant rules into upward redundant rules and downward redundant rules. Second, we present two algorithms for detecting and removing the two types of redundant rules, respectively. Third, we formally prove that the resulting classifiers have no redundant rules after running the two algorithms. Last, we conduct extensive experiments on both real-life and synthetic classifiers. The experimental results show that our redundancy removal algorithms are both effective and efficient.", "paper_title": "Complete Redundancy Removal for Packet Classifiers in TCAMs", "paper_id": "WOS:000274794200002"}