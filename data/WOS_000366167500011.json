{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "range-aggregate_queries"}, {"score": 0.040068893161497504, "phrase": "fastraq"}, {"score": 0.02299303924883181, "phrase": "big_data_environments"}, {"score": 0.00443308765153716, "phrase": "existing_approaches"}, {"score": 0.004364919932563366, "phrase": "-aggregate_queries"}, {"score": 0.004231699728933577, "phrase": "accurate_results"}, {"score": 0.003757480190200645, "phrase": "big_data"}, {"score": 0.0037188360359702182, "phrase": "independent_partitions"}, {"score": 0.0036616109902631293, "phrase": "balanced_partitioning_algorithm"}, {"score": 0.0035497797026638033, "phrase": "local_estimation_sketch"}, {"score": 0.0034236045013591437, "phrase": "range-aggregate_query_request"}, {"score": 0.0032510690712452147, "phrase": "local_estimates"}, {"score": 0.0030239842475439814, "phrase": "time_complexity"}, {"score": 0.0028715299874549245, "phrase": "distinct_tuples"}, {"score": 0.002755104031926742, "phrase": "partition_number"}, {"score": 0.002670884656785558, "phrase": "bucket_number"}, {"score": 0.0025625729433234623, "phrase": "fastraq_approach"}, {"score": 0.0025230952890994236, "phrase": "linux_platform"}, {"score": 0.0023467391904246834, "phrase": "range-aggregate_query_results"}, {"score": 0.0021601997088758957, "phrase": "relative_error"}], "paper_keywords": ["Balanced partition", " big data", " multidimensional histogram", " range-aggregate query"], "paper_abstract": "Range-aggregate queries are to apply a certain aggregate function on all tuples within given query ranges. Existing approaches to range-aggregate queries are insufficient to quickly provide accurate results in big data environments. In this paper, we propose FastRAQ-a fast approach to range-aggregate queries in big data environments. FastRAQ first divides big data into independent partitions with a balanced partitioning algorithm, and then generates a local estimation sketch for each partition. When a range-aggregate query request arrives, FastRAQ obtains the result directly by summarizing local estimates from all partitions. FastRAQ has O(1) time complexity for data updates and O(N/PxB) time complexity for range-aggregate queries, where N is the number of distinct tuples for all dimensions, P is the partition number, and B is the bucket number in the histogram. We implement the FastRAQ approach on the Linux platform, and evaluate its performance with about 10 billions data records. Experimental results demonstrate that FastRAQ provides range-aggregate query results within a time period two orders of magnitude lower than that of Hive, while the relative error is less than 3 percent within the given confidence interval.", "paper_title": "FastRAQ: A Fast Approach to Range-Aggregate Queries in Big Data Environments", "paper_id": "WOS:000366167500011"}