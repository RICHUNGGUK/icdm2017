{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "continuous_streams"}, {"score": 0.0047517225918491226, "phrase": "arbitrary_updates"}, {"score": 0.004658426838467567, "phrase": "existing_random_sampling_methods"}, {"score": 0.004054479957160662, "phrase": "large_space_overhead"}, {"score": 0.003896717568943166, "phrase": "prohibitive_maintenance_cost"}, {"score": 0.0037203741725514126, "phrase": "stream_environments"}, {"score": 0.0035052810710060893, "phrase": "large_volume"}, {"score": 0.0031739835218110015, "phrase": "considerable_success"}, {"score": 0.003132236287543072, "phrase": "random_sampling"}, {"score": 0.003091036449708673, "phrase": "conventional_databases"}, {"score": 0.0028739078688746374, "phrase": "random_samples"}, {"score": 0.0028360962841331634, "phrase": "individual_relations"}, {"score": 0.0027437235598539904, "phrase": "join_result"}, {"score": 0.002602127996667857, "phrase": "update_pattern"}, {"score": 0.0025678829712650437, "phrase": "small_space"}, {"score": 0.0025340874787959195, "phrase": "computational_overhead"}, {"score": 0.0024353398669404334, "phrase": "in-depth_analysis"}, {"score": 0.002387415084371473, "phrase": "valuable_insight"}, {"score": 0.0023096222276192194, "phrase": "alternative_sampling_strategies"}, {"score": 0.0022492129111567824, "phrase": "precision_guarantees"}, {"score": 0.0022196020509093694, "phrase": "extensive_experiments"}], "paper_keywords": ["sampling", " selectivity estimation"], "paper_abstract": "The existing random sampling methods have at least one of the following disadvantages: they 1) are applicable only to certain update patterns, 2) entail large space overhead, or 3) incur prohibitive maintenance cost. These drawbacks prevent their effective application in stream environments ( where a relation is updated by a large volume of insertions and deletions that may arrive in any order), despite the considerable success of random sampling in conventional databases. Motivated by this, we develop several fully dynamic algorithms for obtaining random samples from individual relations, and from the join result of two tables. Our solutions can handle any update pattern with small space and computational overhead. We also present an in-depth analysis that provides valuable insight into the characteristics of alternative sampling strategies and leads to precision guarantees. Extensive experiments validate our theoretical findings and demonstrate the efficiency of our techniques in practice.", "paper_title": "Random sampling for continuous streams with arbitrary updates", "paper_id": "WOS:000242041400008"}