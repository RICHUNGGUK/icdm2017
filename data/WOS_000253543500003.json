{"auto_keywords": [{"score": 0.04931727328027492, "phrase": "input-queued_switches"}, {"score": 0.004814955019827299, "phrase": "max-min"}, {"score": 0.004662913362513954, "phrase": "traffic_management"}, {"score": 0.00455202992136173, "phrase": "traffic_streams"}, {"score": 0.004425979295788883, "phrase": "transient_bottlenecks"}, {"score": 0.004217925382695912, "phrase": "service_attacks"}, {"score": 0.004117579919425373, "phrase": "critical_component"}, {"score": 0.003908246778916674, "phrase": "delay_bounds"}, {"score": 0.003876996400581697, "phrase": "minimum_bandwidths"}, {"score": 0.003739421738326676, "phrase": "popular_notion"}, {"score": 0.0035778632599436024, "phrase": "rigorous_definition"}, {"score": 0.0033822643082593285, "phrase": "output_ports"}, {"score": 0.0033150213498435617, "phrase": "input_ports"}, {"score": 0.003171740347925348, "phrase": "overall_max-min_fair_allocation"}, {"score": 0.003022465992278672, "phrase": "new_algorithm"}, {"score": 0.0029268619875960715, "phrase": "distributed_fashion"}, {"score": 0.002891793055307152, "phrase": "input_and_output_ports"}, {"score": 0.0028456853685842293, "phrase": "exact_max-min_fair_rate_allocations"}, {"score": 0.002615381301695394, "phrase": "practical_scheduling_strategy"}, {"score": 0.00254282157860369, "phrase": "simulation_results"}, {"score": 0.002502264043067568, "phrase": "real_traffic"}, {"score": 0.0023653276631862958, "phrase": "popular_scheduling_algorithms"}, {"score": 0.0022721178679337025, "phrase": "better_fairness"}, {"score": 0.0021049977753042253, "phrase": "best_schedulers"}], "paper_keywords": ["routers", " input-queued switches", " fairness", " quality-of-service"], "paper_abstract": "Fairness in traffic management can improve the isolation between traffic streams, offer a more predictable performance, eliminate transient bottlenecks, mitigate the effect of certain kinds of denial-of-service attacks, and serve as a critical component of a quality-of-service strategy to achieve certain guaranteed services such as delay bounds and minimum bandwidths. In this paper, we choose a popular notion of fairness called max-min fairness and provide a rigorous definition in the context of input-queued switches. We show that being fair at the output ports alone or at the input ports alone or even at both input and output ports does not actually achieve an overall max-min fair allocation of bandwidth in a switch. Instead, we propose a new algorithm that can be readily implemented in a distributed fashion at the input and output ports to determine the exact max-min fair rate allocations for the flows through the switch. In addition to proving the correctness of the algorithm, we propose a practical scheduling strategy based on our algorithm. We present simulation results, using both real traffic traces and synthetic traffic, to evaluate the fairness of a variety of popular scheduling algorithms for input-queued switches. The results show that our scheduling strategy achieves better fairness than other known algorithms for input-queued switches and, in addition, achieves throughput performance very close to that of the best schedulers.", "paper_title": "Max-min fair scheduling in input-queued switches", "paper_id": "WOS:000253543500003"}