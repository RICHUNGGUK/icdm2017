{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java"}, {"score": 0.03956946506938788, "phrase": "http"}, {"score": 0.031000127081793748, "phrase": "detailed_performance_analysis"}, {"score": 0.004484908028307205, "phrase": "qualitative_and_quantitative_comparison"}, {"score": 0.004286708921931472, "phrase": "distributed_solutions"}, {"score": 0.004177401550420744, "phrase": "rmi"}, {"score": 0.004044645056447888, "phrase": "regular_unsecured_communication"}, {"score": 0.003992729692096799, "phrase": "rmi-ssl"}, {"score": 0.003941479812099502, "phrase": "ws-security"}, {"score": 0.0038908817250961633, "phrase": "secure_communication"}, {"score": 0.0034636656250083744, "phrase": "rmi_communication"}, {"score": 0.0032468685934998335, "phrase": "functional_comparison"}, {"score": 0.0028346293790895024, "phrase": "major_bottlenecks"}, {"score": 0.0027622407190589326, "phrase": "design_and_implementation_guidelines"}, {"score": 0.0025892330566358503, "phrase": "distributed_middleware"}, {"score": 0.00244278788608393, "phrase": "different_approaches"}, {"score": 0.0023958326775913165, "phrase": "java_distributed_applications"}, {"score": 0.0022749744354271816, "phrase": "implementation_guidelines"}, {"score": 0.002202547013259953, "phrase": "major_performance_overheads"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["RMI", " Web services", " performance", " Java"], "paper_abstract": "In this article we have undertaken a qualitative and quantitative comparison of common approaches used to develop distributed solutions in Java: RMI and Web services for regular unsecured communication, RMI-SSL and WS-Security for secure communication and authentication, and HTTP-to-port and HTTP-to-CGI/servlet tunnelling for RMI communication through firewalls and proxies. We have performed a functional comparison that helps with the selection of the most appropriate approach. We have also carried out a detailed performance analysis with the identification of major bottlenecks, identification of design and implementation guidelines for distributed applications, and specification of optimizations for distributed middleware. This article contributes to the understanding of different approaches for developing Java distributed applications, provides detailed performance analysis, presents design and implementation guidelines, and identifies the major performance overheads. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "Qualitative and quantitative analysis and comparison of Java distributed architectures", "paper_id": "WOS:000241905800002"}