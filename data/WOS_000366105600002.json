{"auto_keywords": [{"score": 0.03759528653367177, "phrase": "switch_analysis"}, {"score": 0.008713768692145006, "phrase": "running_time_analysis"}, {"score": 0.008634456041197953, "phrase": "evolutionary_algorithms"}, {"score": 0.005639953809101881, "phrase": "fitness_level_method"}, {"score": 0.005562890576330655, "phrase": "drift_analysis"}, {"score": 0.004598933498016774, "phrase": "large_family"}, {"score": 0.004556901872357751, "phrase": "heuristic_optimization_algorithms"}, {"score": 0.004253618550301311, "phrase": "general_analysis_tools"}, {"score": 0.0039341294012600085, "phrase": "switch_analysis_approach"}, {"score": 0.0038625314962915437, "phrase": "eas"}, {"score": 0.0034911335714333507, "phrase": "well-analyzed_algorithm"}, {"score": 0.003334309053314909, "phrase": "better_results"}, {"score": 0.002851790448644913, "phrase": "reducibility_relationship"}, {"score": 0.00257735013358606, "phrase": "specific_configurations"}, {"score": 0.002286781334850213, "phrase": "concrete_analysis_case"}, {"score": 0.0021940118003312397, "phrase": "reducibility_study"}, {"score": 0.002124461969404541, "phrase": "unified_view"}, {"score": 0.0021049977753042253, "phrase": "different_running_time_analysis"}], "paper_keywords": ["Analysis approaches", " evolutionary algorithms (EAs)", " running time complexity", " switch analysis"], "paper_abstract": "Evolutionary algorithms (EAs) are a large family of heuristic optimization algorithms. They are problem independent and have been applied in various optimization problems. Thus, general analysis tools are especially appealing for guiding the analysis of EAs in various situations. This paper develops the switch analysis approach for running time analysis of EAs, revealing their average computational complexity. Unlike previous analysis approaches that analyze an algorithm from scratch, the switch analysis makes use of another well-analyzed algorithm and, by contrasting them, can lead to better results. We investigate the power of switch analysis by comparing it with two commonly used analysis approaches, the fitness level method and the drift analysis. We define the reducibility between two analysis approaches for comparing their power. By the reducibility relationship, it is revealed that both the fitness level method and the drift analysis are reducible to the switch analysis, as they are equivalent to specific configurations of the switch analysis. We further show that the switch analysis is not reducible to the fitness level method, and compare it with the drift analysis on a concrete analysis case (the discrete linear problem). The reducibility study might shed some light on the unified view of different running time analysis approaches.", "paper_title": "Switch Analysis for Running Time Analysis of Evolutionary Algorithms", "paper_id": "WOS:000366105600002"}