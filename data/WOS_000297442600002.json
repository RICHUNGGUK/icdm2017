{"auto_keywords": [{"score": 0.042466631867108605, "phrase": "marked_node"}, {"score": 0.03633974142857173, "phrase": "n_p-complete"}, {"score": 0.00481495049065317, "phrase": "weighted_average_number"}, {"score": 0.0047539837463160695, "phrase": "initially_unknown_object"}, {"score": 0.004663971224237778, "phrase": "general_posets"}, {"score": 0.004575655174918625, "phrase": "n_p_subset"}, {"score": 0.004451018472808005, "phrase": "hasse_diagram"}, {"score": 0.004422739537175179, "phrase": "partially_ordered_set"}, {"score": 0.0040108707569806714, "phrase": "node_queries"}, {"score": 0.0038603092709816873, "phrase": "function_u"}, {"score": 0.0036217826915765673, "phrase": "expected_number"}, {"score": 0.0033264386247581373, "phrase": "complete_characterization"}, {"score": 0.003249513507568657, "phrase": "diameter_size"}, {"score": 0.0031075463518466548, "phrase": "dynamic_programming_approach"}, {"score": 0.0029907923529592234, "phrase": "maximum_degree"}, {"score": 0.0028722938741760793, "phrase": "tree_search_problem"}, {"score": 0.0026661281363730828, "phrase": "maximum_number"}, {"score": 0.0026155434423864215, "phrase": "worst_case_scenario"}, {"score": 0.002604433039970171, "phrase": "linear_time_algorithms"}, {"score": 0.002571383474748273, "phrase": "optimal_search_strategy"}, {"score": 0.0025279671996011814, "phrase": "binary_search"}, {"score": 0.002495885537473901, "phrase": "forest-like_partial_orders"}, {"score": 0.002427761708894784, "phrase": "computer_science"}, {"score": 0.0023969665114860154, "phrase": "washington"}, {"score": 0.002326560334313955, "phrase": "s._mozes"}, {"score": 0.0023166746337604065, "phrase": "k._onak"}, {"score": 0.0023068308410432643, "phrase": "o._weimann"}, {"score": 0.0022872682725227932, "phrase": "optimal_tree"}, {"score": 0.002267871222935348, "phrase": "linear_time"}, {"score": 0.0022248258378513505, "phrase": "nineteenth_annual_acm-siam_symposium"}, {"score": 0.0022012649885680136, "phrase": "society_for_industrial_and_applied_mathematics"}, {"score": 0.002191914096619255, "phrase": "philadelphia"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Decision tree", " Search problems", " NP-completeness", " Search in posets", " Hardness of approximability"], "paper_abstract": "We study the problem of minimizing the weighted average number of queries to identify an initially unknown object in a poset. We show that for general posets, there cannot be any o(log n)-approximation algorithm unless N P subset of TIME(n(0(log log n))))). When the Hasse diagram of the partially ordered set has the structure of a tree, the problem is equivalent to the following tree search problem: in a given rooted tree T = (V, E) a node has been marked and we want to identify it. In order to locate the marked node, we can perform node queries. A node query u asks whether the marked node lies in the subtree rooted at u. A function u : V -> Z(+) is given which defines the likelihood for a node to be the one marked, and we want the strategy that minimizes the expected number of queries. Prior to this paper the complexity of this problem had remained open. We prove that the above tree search problem is N P-complete even for the class of trees with diameter at most 4. This results in a complete characterization of the complexity of the problem with respect to the diameter size. In fact, for diameter not larger than 3 we show that the problem is polynomially solvable using a dynamic programming approach. In addition we prove that the problem is N P-complete even for the class of trees of maximum degree at most 16. To the best of our knowledge, the only known result in this direction is that the tree search problem is solvable in 0(vertical bar V vertical bar log vertical bar V vertical bar) time for trees with degree at most 2 (paths). Our results sharply contrast with those for the variant of the problem where one is interested in minimizing the maximum number of queries. In fact, for the worst case scenario, linear time algorithms are known for finding an optimal search strategy [K. Onak, P. Parys, Generalization of binary search: searching in trees and forest-like partial orders, in: FOCS'06: Proceedings of the 47th Annual IEEE Symposium on Foundations of Computer Science, IEEE Computer Society, Washington, DC, USA, 2006, pp. 379-388; S. Mozes, K. Onak, O. Weimann, Finding an optimal tree searching strategy in linear time, in: SODA'08: Proceedings of the Nineteenth Annual ACM-SIAM Symposium on Discrete Algorithms, Society for Industrial and Applied Mathematics, Philadelphia, PA, USA, 2008, pp. 1096-1105]. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "On the complexity of searching in trees and partially ordered structures", "paper_id": "WOS:000297442600002"}