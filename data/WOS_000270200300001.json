{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "equilibrium_logic"}, {"score": 0.028016859795186158, "phrase": "nested_logic_programs"}, {"score": 0.00461246494886034, "phrase": "non-monotonic_reasoning"}, {"score": 0.0045218909699308385, "phrase": "answer-set_semantics"}, {"score": 0.004360412703519539, "phrase": "general_case"}, {"score": 0.00428892403807229, "phrase": "arbitrary_boolean_combinations"}, {"score": 0.0041357305373417455, "phrase": "special_kinds"}, {"score": 0.00400119808662365, "phrase": "polynomial_reductions"}, {"score": 0.003961694867182568, "phrase": "main_reasoning_tasks"}, {"score": 0.003871024872459116, "phrase": "quantified_propositional_logic"}, {"score": 0.003807529003314843, "phrase": "classical_propositional_logic"}, {"score": 0.003757480190200645, "phrase": "atomic_formulas"}, {"score": 0.0036714667610391535, "phrase": "propositional_logic"}, {"score": 0.0036112323484812675, "phrase": "second-order_logic"}, {"score": 0.0035052810710060893, "phrase": "quantified_boolean_formulas"}, {"score": 0.003379983027734299, "phrase": "decision_problems"}, {"score": 0.003313530464737521, "phrase": "central_semantical_concepts"}, {"score": 0.0030003014343035965, "phrase": "basic_tasks"}, {"score": 0.0028930017387859804, "phrase": "brave_reasoning"}, {"score": 0.0028739078688746374, "phrase": "skeptical_reasoning"}, {"score": 0.0027256122357680393, "phrase": "different_notions"}, {"score": 0.0025935242726503964, "phrase": "considered_reasoning_tasks"}, {"score": 0.0025340874787959195, "phrase": "strict_complexity_bounds"}, {"score": 0.0024842242921857705, "phrase": "upper_bounds"}, {"score": 0.002459660938061167, "phrase": "direct_manner"}, {"score": 0.0024353398669404334, "phrase": "useful_feature"}, {"score": 0.00234043119560776, "phrase": "uniform_axiomatisation"}, {"score": 0.002279217896185919, "phrase": "common_language"}, {"score": 0.0022492129111567824, "phrase": "extant_solvers"}, {"score": 0.002197649447160344, "phrase": "back-end_inference_engines"}, {"score": 0.002154392046210367, "phrase": "encoded_task"}, {"score": 0.0021330830123432614, "phrase": "rapid_prototyping_manner"}], "paper_keywords": ["answer-set programming", " equilibrium logic", " reduction techniques", " quantified Boolean formulas", " computational complexity", " equivalence testing"], "paper_abstract": "Equilibrium logic is an approach to non-monotonic reasoning that extends the stable-model and answer-set semantics for logic programs. In particular, it includes the general case of nested logic programs, where arbitrary Boolean combinations are permitted in heads and bodies of rules, as special kinds of theories. In this paper, we present polynomial reductions Of the main reasoning tasks associated with equilibrium logic and nested logic programs into quantified propositional logic, an extension of classical propositional logic where quantifications over atomic formulas are permitted. Thus, quantified propositional logic is a fragment of second-order logic, and its formulas are usually referred to as quantified Boolean formulas (QBFs). We provide reductions not only for decision problems, but also for the central semantical concepts of equilibrium logic and nested logic programs. In particular, our encodings map a given decision problem into some QBF such that the latter is valid precisely in case the former holds. The basic tasks we deal with here are the consistency, problem, brave reasoning and skeptical reasoning. Additionally, we also provide encodings for testing equivalence of theories or programs under different notions of equivalence, viz. ordinary, strong and uniform equivalence. For all considered reasoning tasks, we analyse their computational complexity and give strict complexity bounds. Hereby, our encodings yield upper bounds in a direct manner Besides this useful feature, our approach has the following benefits: First, Our encodings yield a uniform axiomatisation for a variety of problems in a common language. Second, extant solvers for QBFs can be used as back-end inference engines to realise implementations of the encoded task in a rapid prototyping manner. Third, our axiomatisations also allow us to straightforwardly relate equilibrium logic with circumscription.", "paper_title": "Characterising equilibrium logic and nested logic programs: Reductions and complexity", "paper_id": "WOS:000270200300001"}