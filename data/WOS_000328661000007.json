{"auto_keywords": [{"score": 0.026831747073449014, "phrase": "traces"}, {"score": 0.00481495049065317, "phrase": "practical_graph_isomorphism"}, {"score": 0.004498812433096501, "phrase": "current_state"}, {"score": 0.004348580182733617, "phrase": "graph_isomorphism_problem"}, {"score": 0.004203343568960231, "phrase": "practical_point"}, {"score": 0.003882970272082245, "phrase": "general_principles"}, {"score": 0.0037532257703888315, "phrase": "refinement-individualization_paradigm"}, {"score": 0.0031665087019813244, "phrase": "key_implementations"}, {"score": 0.002795228413298423, "phrase": "best_known_program_nauty"}, {"score": 0.0025819015229390663, "phrase": "innovative_approach"}], "paper_keywords": ["Graph isomorphism", " Canonical labelling", " Nauty", " Traces", " Partition refinement"], "paper_abstract": "We report the current state of the graph isomorphism problem from the practical point of view. After describing the general principles of the refinement-individualization paradigm and proving its validity, we explain how it is implemented in several of the key implementations. In particular, we bring the description of the best known program nauty up to date and describe an innovative approach called Traces that outperforms the competitors for many difficult graph classes. Detailed comparisons against saucy, Bliss and conauto are presented. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Practical graph isomorphism, II", "paper_id": "WOS:000328661000007"}