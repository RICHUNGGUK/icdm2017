{"auto_keywords": [{"score": 0.04432077024897853, "phrase": "polynomial_time"}, {"score": 0.00481495049065317, "phrase": "complexity_bounds"}, {"score": 0.004756805752518494, "phrase": "first-order_functional_programs"}, {"score": 0.004586531354697466, "phrase": "termination_orderings"}, {"score": 0.004449280529563265, "phrase": "sufficient_condition"}, {"score": 0.0032828706086018133, "phrase": "non-deterministic_program"}, {"score": 0.003070340620983981, "phrase": "single_one"}, {"score": 0.00218334762335187, "phrase": "necessary_and_sufficient_condition"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time_executable"}], "paper_keywords": [""], "paper_abstract": "Quasi-interpretations are a technique for guaranteeing complexity bounds on first-order functional programs: in particular, with termination orderings, they give a sufficient condition for a program to be executable in polynomial time (Marion and Moyen 2000), which we call the P-criterion here. We study properties of the programs satisfying the P-criterion in order to improve the understanding of its intensional expressive power. Given a program, its blind abstraction is the non-deterministic program obtained by replacing all constructors with the same arity by a single one. A program is blindly polytime if its blind abstraction terminates in polynomial time. We show that all programs satisfying a variant of the P-criterion are in fact blindly polytime. Then we give two extensions of the P-criterion: one relaxing the termination ordering condition and the other (the bounded-value property) giving a necessary and sufficient condition for a program to be polynomial time executable, with memoisation.", "paper_title": "On quasi-interpretations, blind abstractions and implicit complexity", "paper_id": "WOS:000306936800001"}