{"auto_keywords": [{"score": 0.02792897342647025, "phrase": "complete_and_incomplete_occurrences"}, {"score": 0.00481495049065317, "phrase": "design-pattern_identification"}, {"score": 0.004688321299229397, "phrase": "new_approach"}, {"score": 0.004565007074039171, "phrase": "exploratory_study"}, {"score": 0.004289686492089576, "phrase": "design_patterns"}, {"score": 0.003959863717046575, "phrase": "program_design"}, {"score": 0.0035908627899097407, "phrase": "informed_changes"}, {"score": 0.003527550673371394, "phrase": "current_identification_approaches"}, {"score": 0.0027741761880779535, "phrase": "numerical_approach"}, {"score": 0.0024490834773668153, "phrase": "structural_approach"}, {"score": 0.002405853977978678, "phrase": "explanation-based_constraint_programming"}, {"score": 0.0022604585778195152, "phrase": "experimentally_built_numerical_signatures"}, {"score": 0.0021049977753042253, "phrase": "numerical_signatures"}], "paper_keywords": ["Program understanding", " Design patterns", " Explanation-based constraint programming", " Metrics", " Exploratory study"], "paper_abstract": "The identification of occurrences of design patterns in programs can help maintainers to understand the program design and implementation. It can also help them to make informed changes. Current identification approaches are limited to complete occurrences, are time- and resource-consuming, and lead to many false positives. We propose to combine a structural and a numerical approach to improve the identification of complete and incomplete occurrences of design patterns. We develop a structural approach using explanation-based constraint programming and we enhance this approach using experimentally built numerical signatures. We show that the use of numerical signatures improves the identification of complete and incomplete occurrences in terms of performance and precision.", "paper_title": "Improving design-pattern identification: a new approach and an exploratory study", "paper_id": "WOS:000273806600007"}