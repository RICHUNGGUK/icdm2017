{"auto_keywords": [{"score": 0.03183170623808, "phrase": "fraction-based_tolerance"}, {"score": 0.00481495049065317, "phrase": "data_streams"}, {"score": 0.004785466029391189, "phrase": "entity-based_continuous_queries"}, {"score": 0.004698086429418318, "phrase": "query_users"}, {"score": 0.0045419945049406385, "phrase": "data_stream_management_system"}, {"score": 0.004486522962052524, "phrase": "location-based_services"}, {"score": 0.00431085649482107, "phrase": "maximum_error"}, {"score": 0.004219121035447185, "phrase": "query_answers"}, {"score": 0.004116658579367809, "phrase": "system_resources"}, {"score": 0.003955416337187053, "phrase": "query_tolerance"}, {"score": 0.0038950888505884687, "phrase": "numerical_value"}, {"score": 0.0036403522868511742, "phrase": "actual_value"}, {"score": 0.003350299880802315, "phrase": "entity-based_query"}, {"score": 0.0029623991857435183, "phrase": "nonvalue-based_tolerance"}, {"score": 0.0028992754776056336, "phrase": "maximum_fractions"}, {"score": 0.0028726347068397887, "phrase": "query_answer"}, {"score": 0.002837493000816031, "phrase": "false_positives"}, {"score": 0.0028200832328369816, "phrase": "false_negatives"}, {"score": 0.0027515028939691186, "phrase": "entity-based_queries"}, {"score": 0.002417829700753522, "phrase": "maximum_tolerance"}, {"score": 0.002301614895279686, "phrase": "distributed_stream_environment"}, {"score": 0.0022734427000632483, "phrase": "adaptive_filter_algorithms"}, {"score": 0.00221130685073215, "phrase": "data_stream_sources"}, {"score": 0.0021842376228111537, "phrase": "overall_query_correctness"}, {"score": 0.00217082725339744, "phrase": "extensive_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "energy_resources"}], "paper_keywords": ["Data streams", " continuous queries", " adaptive filters", " fraction-based tolerance"], "paper_abstract": "The idea of allowing query users to relax their correctness requirements in order to improve performance of a data stream management system (e.g., location-based services and sensor networks) has been recently studied. By exploiting the maximum error (or tolerance) allowed in query answers, algorithms for reducing the use of system resources have been developed. In most of these works, however, query tolerance is expressed as a numerical value, which may be difficult to specify. We observe that in many situations, users may not be concerned with the actual value of an answer, but rather which object satisfies a query (e.g., \"who is my nearest neighbor?\"). In particular, an entity-based query returns only the names of objects that satisfy the query. For these queries, it is possible to specify a tolerance that is \"nonvalue-based.\" In this paper, we study fraction-based tolerance, a type of nonvalue-based tolerance, where a user specifies the maximum fractions of a query answer that can be false positives and false negatives. We develop fraction-based tolerance for two major classes of entity-based queries: 1) nonrank-based query (e.g., range queries) and 2) rank-based query (e.g., k-nearest-neighbor queries). These definitions provide users with an alternative to specify the maximum tolerance allowed in their answers. We further investigate how these definitions can be exploited in a distributed stream environment. We design adaptive filter algorithms that allow updates be dropped conditionally at the data stream sources without affecting the overall query correctness. Extensive experimental results show that our protocols reduce the use of network and energy resources significantly.", "paper_title": "Filtering Data Streams for Entity-Based Continuous Queries", "paper_id": "WOS:000272838500006"}