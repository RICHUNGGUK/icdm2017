{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dense_saddle-point_linear_systems"}, {"score": 0.04411571818342814, "phrase": "stochastic_optimization_problems"}, {"score": 0.004590820632326585, "phrase": "novel_approach"}, {"score": 0.004447201233380302, "phrase": "distributed-memory_environment"}, {"score": 0.004085713541752114, "phrase": "proposed_approach"}, {"score": 0.003957833102043277, "phrase": "large_family"}, {"score": 0.003916098498242888, "phrase": "dense_saddle-point_systems"}, {"score": 0.0037336520904376687, "phrase": "convex_programming"}, {"score": 0.0035408501923902477, "phrase": "serious_computational_difficulties"}, {"score": 0.0032355864829403413, "phrase": "single_shared-memory_system"}, {"score": 0.0031342307827666675, "phrase": "interior-point_methods"}, {"score": 0.003101153870424188, "phrase": "specialized_linear_algebra"}, {"score": 0.0029409171055888804, "phrase": "scenario-based_decomposition"}, {"score": 0.0028037753646260937, "phrase": "computational_nodes"}, {"score": 0.002744888626958772, "phrase": "sparse_saa_problems"}, {"score": 0.002658863179011018, "phrase": "dense_and_possibly_very_large_saddle-point_linear_system"}, {"score": 0.0025214217930287003, "phrase": "specialized_parallel_factorization_procedure"}, {"score": 0.002416589459425828, "phrase": "streamlined_method"}, {"score": 0.002365815362517737, "phrase": "distributed_dense_matrix"}, {"score": 0.0023408288327263316, "phrase": "strong_scaling_tests"}, {"score": 0.002255431275670053, "phrase": "stochastic_unit_commitment_problem"}, {"score": 0.002196342933346204, "phrase": "stochastic_unit_commitment_problems"}], "paper_keywords": ["stochastic programming", " parallel computing", " parallel dense linear algebra", " saddle-point"], "paper_abstract": "We present a novel approach for solving dense saddle-point linear systems in a distributed-memory environment. This work is motivated by an application in stochastic optimization problems with recourse, but the proposed approach can be used for a large family of dense saddle-point systems, in particular, for those arising in convex programming. Although stochastic optimization problems have many important applications, they can present serious computational difficulties. In particular, sample average approximation (SAA) problems with a large number of samples are often too big to solve on a single shared-memory system. Recent work has developed interior-point methods and specialized linear algebra to solve these problems in parallel, using a scenario-based decomposition that distributes the data, and work across computational nodes. Even for sparse SAA problems, the decomposition produces a dense and possibly very large saddle-point linear system that must be solved repeatedly. We developed a specialized parallel factorization procedure for these systems, together with a streamlined method for assembling the distributed dense matrix. Strong scaling tests indicate over 90% efficiency on 1024 cores on a stochastic unit commitment problem with 57 million variables. Stochastic unit commitment problems with up to 189 million variables are solved efficiently on up to 2048 cores.", "paper_title": "The parallel solution of dense saddle-point linear systems arising in stochastic programming", "paper_id": "WOS:000305295400014"}