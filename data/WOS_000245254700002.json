{"auto_keywords": [{"score": 0.038365578567144946, "phrase": "dns"}, {"score": 0.00481495049065317, "phrase": "sip_telephony"}, {"score": 0.004620093797504386, "phrase": "existing_web_server_redundancy_techniques"}, {"score": 0.00438105507792004, "phrase": "relatively_new_ip_telephony_context"}, {"score": 0.0040097139701644165, "phrase": "session_initiation_protocol"}, {"score": 0.0037797419108291227, "phrase": "sip_server_failover_techniques"}, {"score": 0.0036052633308076933, "phrase": "domain_name_service"}, {"score": 0.003260690513595527, "phrase": "sip_identifiers"}, {"score": 0.0032223742018434856, "phrase": "network_address_translators"}, {"score": 0.0028293966058473476, "phrase": "second_stage_server_group"}, {"score": 0.002763261749602258, "phrase": "destination_user_identifier"}, {"score": 0.00266693888510356, "phrase": "performance_improvement"}, {"score": 0.0024405312482831646, "phrase": "sip_server_architecture"}, {"score": 0.0021940118003312397, "phrase": "failover_mechanism"}, {"score": 0.0021049977753042253, "phrase": "open_source_mysql_database"}], "paper_keywords": ["availability", " scalability", " failover", " load sharing", " SIP"], "paper_abstract": "We apply some of the existing web server redundancy techniques for high service availability and scalability to the relatively new IP telephony context. The paper compares various failover and load sharing methods for registration and call routing servers based on the Session Initiation Protocol (SIP). In particular, we consider SIP server failover techniques based on the clients, DNS (Domain Name Service), database replication and IP address takeover, and load sharing techniques using DNS, SIP identifiers, network address translators, and servers with same IP addresses. We describe our two-stage reliable and scalable SIP server architecture in which the first stage proxies the request to one of the second stage server group based on the destination user identifier. We quantitatively evaluate the performance improvement of the load sharing architecture using our SIP server. We quantitatively compare the effect of SIP server architecture such as event-based and thread pool. Additionally, we present an overview of the failover mechanism we implemented in our test-bed using the open source MySQL database. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Failover, load sharing and server architecture in SIP telephony", "paper_id": "WOS:000245254700002"}