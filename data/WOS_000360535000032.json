{"auto_keywords": [{"score": 0.04653478165971171, "phrase": "nvm"}, {"score": 0.015719707847184506, "phrase": "persistent_store"}, {"score": 0.0046155034808589915, "phrase": "nvm_duet"}, {"score": 0.004499647408293102, "phrase": "high_density"}, {"score": 0.00441909542037375, "phrase": "computer_architects"}, {"score": 0.004359625030298944, "phrase": "large-scale_main_memory_systems"}, {"score": 0.004167086373747367, "phrase": "promising_alternative"}, {"score": 0.004129607015893271, "phrase": "conventional_persistent_store"}, {"score": 0.00391167729353583, "phrase": "data_structures"}, {"score": 0.0035095935622207956, "phrase": "working_memory"}, {"score": 0.003249966782844541, "phrase": "new_design_constraints"}, {"score": 0.0032061793819537633, "phrase": "memory_system"}, {"score": 0.00298238929037041, "phrase": "memory_cells"}, {"score": 0.0028764048059439205, "phrase": "write_speed"}, {"score": 0.0028120802837806234, "phrase": "unified_architecture"}, {"score": 0.002712131567923321, "phrase": "suboptimal_design"}, {"score": 0.002592163447843447, "phrase": "unified_working_memory"}, {"score": 0.002568812627436125, "phrase": "persistent_store_architecture"}, {"score": 0.002488724764295623, "phrase": "required_consistency"}, {"score": 0.0022733662000757318, "phrase": "cross-layer_design_approach"}, {"score": 0.0022124605840026313, "phrase": "design_goal"}, {"score": 0.0021727640931660038, "phrase": "simulation_results"}], "paper_keywords": ["Non-volatile memory", " storage-class memory", " phase-change memory", " consistency", " durability", " memory management", " memory scheduler", " resistance drift, resistance distribution", " refresh"], "paper_abstract": "Emerging non-volatile memory (NVM) technologies have gained a lot of attention recently. The byte-addressability and high density of NVM enable computer architects to build large-scale main memory systems. NVM has also been shown to be a promising alternative to conventional persistent store. With NVM, programmers can persistently retain in-memory data structures without writing them to disk. Therefore, one can envision that in the future, NVM will play the role of both working memory and persistent store at the same time. Persistent store demands consistency and durability guarantees, thereby imposing new design constraints on the memory system. Consistency is achieved at the expense of serializing multiple write operations. Durability requires memory cells to guarantee non-volatility and thus reduces the write speed. Therefore, a unified architecture oblivious to these two use cases would lead to suboptimal design. In this paper, we propose a novel unified working memory and persistent store architecture, NVM Duet, which provides the required consistency and durability guarantees for persistent store while relaxing these constraints if accesses to NVM are for working memory. A cross-layer design approach is adopted to achieve the design goal. Overall, simulation results demonstrate that NVM Duet achieves up to 1.68 x (1.32 x on average) speedup compared with the baseline design.", "paper_title": "NVM Duet: Unified Working Memory and Persistent Store Architecture", "paper_id": "WOS:000360535000032"}