{"auto_keywords": [{"score": 0.033113841863967784, "phrase": "safl"}, {"score": 0.014440559913472999, "phrase": "test_suite"}, {"score": 0.00481495049065317, "phrase": "testing-based_fault_localization"}, {"score": 0.0046993598473345395, "phrase": "software_development"}, {"score": 0.004692639138072141, "phrase": "test_suites"}, {"score": 0.0046238380150870435, "phrase": "software_debugging"}, {"score": 0.004567990533989851, "phrase": "inevitable_and_time-consuming_task"}, {"score": 0.004333642054036135, "phrase": "fault_localization"}, {"score": 0.004246729915110547, "phrase": "testing-based_fault-localization_approaches"}, {"score": 0.0041112665381266315, "phrase": "execution_information"}, {"score": 0.003932003833923186, "phrase": "existing_testing-based_fault-localization_approaches"}, {"score": 0.0035100601949451028, "phrase": "similarity-aware_fault-localization_approach"}, {"score": 0.003384262486955773, "phrase": "fuzzy_set"}, {"score": 0.003289534854212415, "phrase": "test_cases"}, {"score": 0.0032497506915502876, "phrase": "statements'_suspicions"}, {"score": 0.0031974502006267163, "phrase": "probability_theory"}, {"score": 0.0030828215204304473, "phrase": "similarity_issue"}, {"score": 0.0030086877092638945, "phrase": "redundant_test_cases"}, {"score": 0.0029244418026475832, "phrase": "experimental_study"}, {"score": 0.0028890603352364273, "phrase": "original_test_suite"}, {"score": 0.0027741761880779535, "phrase": "experimental_results"}, {"score": 0.002685558057339722, "phrase": "effective_fault-localization_approach"}, {"score": 0.0026316112429083235, "phrase": "manually_injected_redundancy"}, {"score": 0.002456148932305311, "phrase": "siemens_program_suite"}], "paper_keywords": ["debugging", " maintenance", " fault localization", " fuzzy set"], "paper_abstract": "In the process of software development and maintenance, software debugging is an inevitable and time-consuming task. To accelerate software debugging, various approaches have been proposed to automate fault localization. Among them, testing-based fault-localization approaches are most promising, which use the execution information of many test cases to localize the faults. However, these existing testing-based fault-localization approaches ignore the similarity between test cases, which may harm the effectiveness of these approaches according to our previous research. Therefore, in this paper we propose a similarity-aware fault-localization approach, which takes each test case as a fuzzy set to deal with the similarity between test cases and calculates statements' suspicions based on the probability theory. To investigate whether SAFL can address the similarity issue effectively, we manually injected redundant test cases in a test suite and performed an experimental study on the original test suite and the test suite with redundancy, respectively. The experimental results demonstrate that in our experiments SAFL is an effective fault-localization approach, whether there is manually injected redundancy in the test suite. To compare SAFL with most existing testing-based fault-localization approaches, we performed another experimental study on Siemens program suite, which is extensively used in the evaluation of many other testing-based fault-localization approaches. This experimental study confirms the effectiveness of SAFL. Based on the two experimental studies, it seems that in our experiments SAFL cannot only deal with test suites containing much redundancy effectively but also perform effectively for test suites without much redundancy.", "paper_title": "On similarity-awareness in testing-based fault localization", "paper_id": "WOS:000256426700004"}