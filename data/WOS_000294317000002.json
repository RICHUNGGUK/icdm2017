{"auto_keywords": [{"score": 0.047148552246853125, "phrase": "recursive_program_schemes"}, {"score": 0.00481495049065317, "phrase": "second-order_iterative_monads"}, {"score": 0.004665483918844599, "phrase": "algebraic_trees"}, {"score": 0.0046069985410261746, "phrase": "precisely_the_solutions"}, {"score": 0.004217537792708984, "phrase": "corresponding_monad"}, {"score": 0.0038608730929994696, "phrase": "\"suitable\"_category"}, {"score": 0.003579179502431823, "phrase": "guarded_recursive_program_scheme"}, {"score": 0.0035120164504478437, "phrase": "unique_solution"}, {"score": 0.002980124909321296, "phrase": "initial_second-order_iterative_monad"}, {"score": 0.002544616720630384, "phrase": "original_case"}, {"score": 0.0024968185204913935, "phrase": "polynomial_endofunctor_h"}, {"score": 0.002299830460180699, "phrase": "b._courcelle"}], "paper_keywords": ["Algebraic trees", " Recursive program schemes", " Ideal theory", " Monads"], "paper_abstract": "B. Courcelle studied algebraic trees as precisely the solutions of all recursive program schemes for a given signature in Set. He proved that the corresponding monad is iterative. We generalize this to recursive program schemes over a given unitary endofunctor H of a \"suitable\" category. A monad is called second-order iterative if every guarded recursive program scheme has a unique solution in it. We construct two second-order iterative monads: one, called the second-order rational monad, S(H), is proved to be the initial second-order iterative monad. The other one, called the context-free monad, C(H), is a quotient of S(H) and in the original case of a polynomial endofunctor H of Set we prove that C(H) is the monad studied by B. Courcelle. The question whether these two monads are equal is left open. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "On second-order iterative monads", "paper_id": "WOS:000294317000002"}