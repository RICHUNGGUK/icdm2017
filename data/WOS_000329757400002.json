{"auto_keywords": [{"score": 0.04016157518902184, "phrase": "database_application"}, {"score": 0.013505778730673474, "phrase": "attribute_dependency_graph"}, {"score": 0.00481495049065317, "phrase": "database_applications"}, {"score": 0.004733625412289433, "phrase": "extracting_attribute_dependency_graph"}, {"score": 0.004536244367689415, "phrase": "major_component"}, {"score": 0.0042373381286051354, "phrase": "novel_graph"}, {"score": 0.003117307618682836, "phrase": "inter-procedural_static_program_analysis"}, {"score": 0.002936577024096783, "phrase": "straightforward_indicator"}, {"score": 0.002838033152426417, "phrase": "maintenance_process"}, {"score": 0.002742787059497186, "phrase": "impact_analysis"}, {"score": 0.0023926387830753033, "phrase": "proposed_approach"}, {"score": 0.00235213013487844, "phrase": "php-based_database_applications"}], "paper_keywords": ["Attribute Dependency Graph", " Database Application", " Extraction", " Impact Analysis", " Maintenance", " Structured Query Language (SQL) Query"], "paper_abstract": "Database is a major component of many software systems. This paper proposes a novel graph called the attribute dependency graph to reveal the dependencies between attributes in a database application and also the programs involved. The authors propose an approach to automatically extract the attribute dependency graph out of a database application from its source code through inter-procedural static program analysis. The extracted information is a straightforward indicator that benefits the maintenance process, particularly for impact analysis on the modifications in a database application. A tool has been developed to implement the proposed approach for PHP-based database applications. Case studies have also been conducted to demonstrate the use of our approach.", "paper_title": "Aiding Maintenance of Database Applications Through Extracting Attribute Dependency Graph", "paper_id": "WOS:000329757400002"}