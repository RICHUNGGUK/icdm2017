{"auto_keywords": [{"score": 0.04398714383022719, "phrase": "changing_network_topology"}, {"score": 0.04230192164302268, "phrase": "aodv_performance"}, {"score": 0.041320593302151765, "phrase": "potentially_vulnerable_links"}, {"score": 0.024724266431122466, "phrase": "data_delivery_rate"}, {"score": 0.00481495049065317, "phrase": "complementary_preemptive_link"}, {"score": 0.004610778163351966, "phrase": "aodv"}, {"score": 0.004561019117546361, "phrase": "well-known_routing_protocol"}, {"score": 0.004536371075341048, "phrase": "mobile_ad_hoc_networks"}, {"score": 0.004499647408293102, "phrase": "original_aodv_protocol"}, {"score": 0.004451142490911742, "phrase": "semi-dynamic_fashion"}, {"score": 0.004182172788492861, "phrase": "ad_hoc_networks"}, {"score": 0.003993829133258082, "phrase": "broken_links"}, {"score": 0.0038555230685370034, "phrase": "redundant_nodes"}, {"score": 0.0038242899532391914, "phrase": "transmission_path"}, {"score": 0.0037933088900625822, "phrase": "local_repair"}, {"score": 0.0036918332580584768, "phrase": "longer_paths"}, {"score": 0.0036126036756569703, "phrase": "heavy_traffic_conditions"}, {"score": 0.003544668879158414, "phrase": "packet_loss"}, {"score": 0.003525493807130663, "phrase": "communication_delay"}, {"score": 0.0034969248327364052, "phrase": "route_rebuilding"}, {"score": 0.0033757682119505412, "phrase": "special_hardware"}, {"score": 0.003357503738345204, "phrase": "additional_tables"}, {"score": 0.0032587955310474513, "phrase": "path_shortening"}, {"score": 0.0032236233292781908, "phrase": "shorter_and_more_efficient_routes"}, {"score": 0.0031458632397120302, "phrase": "new_paths"}, {"score": 0.003069973098301674, "phrase": "preemptive_link"}, {"score": 0.0029959082125682918, "phrase": "modified_aodv_protocol"}, {"score": 0.002955533639862811, "phrase": "difficult_issue"}, {"score": 0.002915701586760994, "phrase": "right_timing"}, {"score": 0.002799388549023265, "phrase": "routing_performance"}, {"score": 0.002776687200568343, "phrase": "numerical_analysis"}, {"score": 0.00271704379695679, "phrase": "simple_parameter"}, {"score": 0.002637114831946217, "phrase": "appropriate_time"}, {"score": 0.0026157259734105, "phrase": "proposed_combination"}, {"score": 0.002594510142298757, "phrase": "highly_dynamic_ad_hoc"}, {"score": 0.002497750121448195, "phrase": "extremely_good_performance"}, {"score": 0.0023657330062474996, "phrase": "integrated_protocol"}, {"score": 0.002277485549459112, "phrase": "network_overhead"}, {"score": 0.00222249726328354, "phrase": "best_cases"}, {"score": 0.002186576365096799, "phrase": "control_overhead"}, {"score": 0.002162951519368368, "phrase": "delay_time"}, {"score": 0.002104999656271301, "phrase": "aodv."}], "paper_keywords": ["Ad hoc networks", " Dynamic routing", " Dynamic link breaking avoidance", " Dynamic path shortening", " AODV"], "paper_abstract": "Ad-hoc on-demand distance vector routing (AODV) is a well-known routing protocol for mobile ad hoc networks. The original AODV protocol works in a semi-dynamic fashion, by establishing a route on demand and using that route until it breaks. However, to suit the changing network topology of ad hoc networks, more aggressive and adaptable routing strategies are required. A number of researches have proposed improving AODV performance by locally repairing broken links, predicting and replacing potentially vulnerable links, or shortening a link through removing redundant nodes from the transmission path. Although local repair may relieve some problems, it usually results in longer paths and thus a considerable performance drop in heavy traffic conditions. There are also issues regarding packet loss and communication delay due to route rebuilding once the link is broken. Predicting and replacing potentially vulnerable links may require special hardware, additional tables to maintain, or other extra overhead. Finally, path shortening may result in shorter and more efficient routes, but there is no guarantee that the new paths will be robust. This paper proposes integrating preemptive link breaking avoidance and path shortening mechanisms into a modified AODV protocol. However, the difficult issue lies in determining the right timing to initiate the two independent mechanisms so that the two dynamically and complementarily operating mechanisms can work together to improve the routing performance. Through numerical analysis and simulation, we have arranged a simple parameter setting for controlling the activation of each mechanism at the appropriate time. The proposed combination is a highly dynamic ad hoc routing protocol that is capable of adapting itself to the changing network topology and achieving extremely good performance in various routing performance metrics. Extensive simulations show that each of the two schemes alone improves AODV performance. More importantly, the integrated protocol performs even better in terms of data delivery rate, average delay time, and network overhead. To be more specific, in the best cases our protocol can reduce up to 82% in control overhead and 66% in delay time, while achieving 12% more in data delivery rate comparing to AODV.", "paper_title": "A highly topology adaptable ad hoc routing protocol with complementary preemptive link breaking avoidance and path shortening mechanisms", "paper_id": "WOS:000278968500006"}