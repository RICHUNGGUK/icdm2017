{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "model_checker"}, {"score": 0.00409895142748329, "phrase": "meta-level_entities"}, {"score": 0.003969018740062018, "phrase": "object_level"}, {"score": 0.003603327452846714, "phrase": "reflective_language"}, {"score": 0.003451766520526601, "phrase": "local_model_checker"}, {"score": 0.002610198789888055, "phrase": "concise_implementation"}], "paper_keywords": ["reflection", " rewriting logic", " model checking", " logic programming"], "paper_abstract": "Intuitively, reflection is the feature that can represent and reason meta-level entities at the object level. In this paper, we use a reflective language to implement a local model checker and analyze the implementation. The implementation is greatly simplified by reflection. Further, we show the feature can be applied to verify the concise implementation rather easily. The simplicity of our approach suggests that reflection may be useful in the implementation and verification of other explicit-state model checking algorithms.", "paper_title": "Automatic verification of a model checker by reflection", "paper_id": "WOS:000235801500004"}