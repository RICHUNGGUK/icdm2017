{"auto_keywords": [{"score": 0.03111187826964007, "phrase": "output_quality"}, {"score": 0.015719716506582538, "phrase": "approximate_programs"}, {"score": 0.015542316130590986, "phrase": "energy_efficiency"}, {"score": 0.010376046483413382, "phrase": "deployed_applications"}, {"score": 0.004678785623021003, "phrase": "key_concern"}, {"score": 0.0045464538515249085, "phrase": "modern_computer_systems"}, {"score": 0.004443276312972159, "phrase": "energy-efficient_computation"}, {"score": 0.004268293864953256, "phrase": "output_accuracy"}, {"score": 0.004219571240696568, "phrase": "significant_gains"}, {"score": 0.004030157055463817, "phrase": "actual_cause"}, {"score": 0.0039841418890102925, "phrase": "output_quality_problems"}, {"score": 0.0037834649508375544, "phrase": "dynamic_techniques"}, {"score": 0.003613556291453534, "phrase": "approximate_computations"}, {"score": 0.003511246498068952, "phrase": "offline_debugging_tools"}, {"score": 0.003372844338742438, "phrase": "key_sources"}, {"score": 0.003334309053314909, "phrase": "output_degradation"}, {"score": 0.003006654007926993, "phrase": "first_offline_tool"}, {"score": 0.0028550709503536494, "phrase": "individual_approximate_operations"}, {"score": 0.0027741761880779535, "phrase": "approximate_operations"}, {"score": 0.0026955672787561742, "phrase": "particular_value"}, {"score": 0.0025596276616952516, "phrase": "quality_problems"}, {"score": 0.002444544487772349, "phrase": "energy_savings"}, {"score": 0.002268441347979241, "phrase": "seven_applications"}, {"score": 0.002166421738415464, "phrase": "significant_energy_efficiency_gains"}, {"score": 0.0021049977753042253, "phrase": "new_insights"}], "paper_keywords": ["Approximate computing", " debugging", " monitoring"], "paper_abstract": "Energy efficiency is a key concern in the design of modern computer systems. One promising approach to energy-efficient computation, approximate computing, trades off output accuracy for significant gains in energy efficiency. However, debugging the actual cause of output quality problems in approximate programs is challenging. This paper presents dynamic techniques to debug and monitor the quality of approximate computations. We propose both offline debugging tools that instrument code to determine the key sources of output degradation and online approaches that monitor the quality of deployed applications. We present two offline debugging techniques and three online monitoring mechanisms. The first offline tool identifies correlations between output quality and the execution of individual approximate operations. The second tracks approximate operations that flow into a particular value. Our online monitoring mechanisms are complementary approaches designed for detecting quality problems in deployed applications, while still maintaining the energy savings from approximation. We present implementations of our techniques and describe their usage with seven applications. Our online monitors control output quality while still maintaining significant energy efficiency gains, and our offline tools provide new insights into the effects of approximation on output quality.", "paper_title": "Monitoring and Debugging the Quality of Results in Approximate Programs", "paper_id": "WOS:000370874900028"}