{"auto_keywords": [{"score": 0.03152938003499142, "phrase": "rrt"}, {"score": 0.020917243461748045, "phrase": "input_domain"}, {"score": 0.017519550805594745, "phrase": "rt"}, {"score": 0.00970421892951705, "phrase": "failure_patterns"}, {"score": 0.00481495049065317, "phrase": "random_testing"}, {"score": 0.004783106894192595, "phrase": "adaptive"}, {"score": 0.004688321299229397, "phrase": "restricted_random_testing"}, {"score": 0.004595529592539951, "phrase": "new_method"}, {"score": 0.004035385456773232, "phrase": "testing_strategies"}, {"score": 0.0038642157757169315, "phrase": "widespread_and_even_distribution"}, {"score": 0.003651245743840663, "phrase": "ordinary_rt._testing_methods"}, {"score": 0.003531474887552889, "phrase": "even_and_widespread_distributions"}, {"score": 0.0034730657554172405, "phrase": "adaptive_random_testing"}, {"score": 0.003359119985242403, "phrase": "rrt._rrt"}, {"score": 0.0033367819052051995, "phrase": "exclusion_zones"}, {"score": 0.00312138530097218, "phrase": "subsequent_test_cases"}, {"score": 0.002900426826591769, "phrase": "empirical_analyses"}, {"score": 0.0027131212233443137, "phrase": "orrt"}, {"score": 0.002537880772794665, "phrase": "non-homogeneous_input_domains"}, {"score": 0.0024792523879679836, "phrase": "alternative_exclusion_shapes"}, {"score": 0.002430076037416881, "phrase": "simple_technique"}, {"score": 0.002397833600728684, "phrase": "computational_overheads"}, {"score": 0.0023424328921363585, "phrase": "alternative_exclusion_shape_investigations"}, {"score": 0.002220551141101661, "phrase": "art_method"}, {"score": 0.002198412942421744, "phrase": "maximized_minimum_test_case_separation"}, {"score": 0.002154795052149279, "phrase": "excellent_improvement"}, {"score": 0.0021049978798023815, "phrase": "dart."}], "paper_keywords": ["software testing", " random testing", " adaptive random testing", " restricted random testing"], "paper_abstract": "Restricted Random Testing (RRT) is a new method of testing software that improves upon traditional Random Testing (RT) techniques. Research has indicated that failure patterns (portions of an input domain which, when executed, cause the program to fail or reveal an error) can influence the effectiveness of testing strategies. For certain types of failure patterns, it has been found that a widespread and even distribution of test cases in the input domain can be significantly more effective at detecting failure compared with ordinary RT. Testing methods based on RT, but which aim to achieve even and widespread distributions, have been called Adaptive Random Testing (ART) strategies. One implementation of ART is RRT. RRT uses exclusion zones around executed, but non-failure-causing, test cases to restrict the regions of the input domain from which subsequent test cases may be drawn. In this paper, we introduce the motivation behind RRT, explain the algorithm and detail some empirical analyses carried out to examine the effectiveness of the method. Two versions of RRT are presented: Ordinary RRT (ORRT) and Normalized RRT (NRRT). The two versions share the same fundamental algorithm, but differ in their treatment of non-homogeneous input domains. Investigations into the use of alternative exclusion shapes are outlined, and a simple technique for reducing the computational overheads of RRT, prompted by the alternative exclusion shape investigations, is also explained. The performance of RRT is compared with RT and another ART method based on maximized minimum test case separation (DART), showing excellent improvement over RT and a very favorable comparison with DART.", "paper_title": "Restricted random testing: Adaptive random testing by exclusion", "paper_id": "WOS:000240606000003"}