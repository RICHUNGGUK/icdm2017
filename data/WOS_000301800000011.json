{"auto_keywords": [{"score": 0.04427589583460462, "phrase": "cmst"}, {"score": 0.00481495049065317, "phrase": "ip_lookup"}, {"score": 0.004605258779434384, "phrase": "new_data_structure"}, {"score": 0.00427578268550103, "phrase": "dynamic_router-tables"}, {"score": 0.004171259063201874, "phrase": "better_performance"}, {"score": 0.004130165601475531, "phrase": "existing_data_structures"}, {"score": 0.00395017798595193, "phrase": "longest_matching_prefix"}, {"score": 0.003834548373258131, "phrase": "internal_node"}, {"score": 0.0035249212996297332, "phrase": "dynamic_router-table_operations"}, {"score": 0.003371220210416809, "phrase": "memory_requirement"}, {"score": 0.0032887360307856635, "phrase": "prefix's_corresponding_suffix"}, {"score": 0.0032402142645120958, "phrase": "cmst_node"}, {"score": 0.0031453010852936334, "phrase": "full_binary_string"}, {"score": 0.0029784342137867776, "phrase": "data_structure"}, {"score": 0.0029055323737809825, "phrase": "pcmst"}, {"score": 0.0027513507830537165, "phrase": "router-table_operations"}, {"score": 0.0026443691099806003, "phrase": "proposed_data_structures"}, {"score": 0.0025668646315794947, "phrase": "memory_usage"}, {"score": 0.002454835845644037, "phrase": "average_times"}, {"score": 0.0021793698531006197, "phrase": "proposed_data_structure"}], "paper_keywords": ["Classless inter domain routing", " dynamic router tables", " IP address lookup", " longest matching prefix", " multiprefix trie", " classified multisuffix trie"], "paper_abstract": "In this paper, a new data structure, called the classified multisuffix trie (CMST), is proposed for designing dynamic router-tables. CMST achieves a better performance than existing data structures because each node can store more than one prefix and the longest matching prefix may be found in an internal node rather than on a leaf. Furthermore, with the classification in each node, the dynamic router-table operations can be performed efficiently. To reduce the memory requirement, we store each prefix's corresponding suffix in a CMST node, instead of storing a full binary string. Based on the CMST, we also propose another data structure, called the Partitioning Classified Multisuffix Trie (PCMST) to reduce the height of the trie and expedite router-table operations. Experiments using real IPv4 routing databases demonstrate that the proposed data structures are efficient in terms of memory usage and it performs well in terms of the average times of the lookup, insert, and delete operations. We report the results of experiments conducted to compare the performance of the proposed data structure with that of other structures using the benchmark IPv4 prefix databases AS4637, AS6447, and AS65000 with 219,581, 296,552, and 226,847 prefixes, respectively.", "paper_title": "A Classified Multisuffix Trie for IP Lookup and Update", "paper_id": "WOS:000301800000011"}