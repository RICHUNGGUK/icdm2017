{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "recovery_system"}, {"score": 0.013644619950012501, "phrase": "malicious_tasks"}, {"score": 0.013502124664748079, "phrase": "incorrect_data"}, {"score": 0.004714023408114857, "phrase": "workflow_systems"}, {"score": 0.004615202066192795, "phrase": "daily_business_processing"}, {"score": 0.004353948887538618, "phrase": "workflow_management_system"}, {"score": 0.0043080553835735825, "phrase": "successful_attacks"}, {"score": 0.004064117897000019, "phrase": "workflow_system"}, {"score": 0.003978866233891427, "phrase": "legitimate_tasks"}, {"score": 0.0036167509502276294, "phrase": "integrity_level"}, {"score": 0.003304965389155549, "phrase": "existing_defense_mechanisms"}, {"score": 0.0032355864829403413, "phrase": "access_control"}, {"score": 0.0032014433546265694, "phrase": "intrusion_detection"}, {"score": 0.0030039966201398966, "phrase": "practical_solution"}, {"score": 0.0029722900280316216, "phrase": "on-line_attack_recovery"}, {"score": 0.002603012037901889, "phrase": "workflow_tasks"}, {"score": 0.002548331088496964, "phrase": "fundamental_theories"}, {"score": 0.0025214217930287003, "phrase": "workflow_attack_recovery_system"}, {"score": 0.002391067964886602, "phrase": "prototype_system"}, {"score": 0.0023408288327263316, "phrase": "corresponding_recovery_algorithms"}, {"score": 0.002219790619936024, "phrase": "different_attacking_densities"}, {"score": 0.002196342933346204, "phrase": "intrusion_detection_delays"}, {"score": 0.0021731423856364003, "phrase": "arrival_rates"}, {"score": 0.0021387992835532367, "phrase": "experimental_results"}], "paper_keywords": ["Attack recovery", " Performance evaluation", " Quality of information assurance"], "paper_abstract": "Workflow systems are popular in daily business processing. Since vulnerability cannot be totally removed from a workflow management system, successful attacks always happen and may inject malicious tasks or incorrect data into the workflow system. Moreover, legitimate tasks referring to the incorrect data will further corrupt more data objects in the system. As a result, the integrity level of the system can be seriously compromised. This problem cannot be efficiently solved by existing defense mechanisms, such as access control, intrusion detection, and checkpoints. In this paper, we propose a practical solution for on-line attack recovery of workflows. The recovery system discovers all damages caused by the malicious tasks and automatically repairs the damages based on data and control dependencies between workflow tasks. We describe fundamental theories for workflow attack recovery system. Based on these theories, we build a prototype system and develop the corresponding recovery algorithms. We evaluate the performance of the recovery system under different attacking densities, intrusion detection delays and arrival rates. The experimental results show that our system is practical. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "The implementation and evaluation of a recovery system for workflows", "paper_id": "WOS:000266954000009"}