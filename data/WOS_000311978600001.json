{"auto_keywords": [{"score": 0.04384309786385, "phrase": "spanning_tree"}, {"score": 0.00481495049065317, "phrase": "maximum_internal_spanning_tree"}, {"score": 0.00465067040500426, "phrase": "polynomial_time_algorithm"}, {"score": 0.002980916123365584, "phrase": "maximum_internal_spanning_tree_problem"}, {"score": 0.0028590732866152118, "phrase": "internal_vertices"}, {"score": 0.002630085891013006, "phrase": "innovative_application"}, {"score": 0.002575756583567029, "phrase": "classical_min-max_result"}, {"score": 0.0024026156525362684, "phrase": "hypergraph_h"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Algorithm", " Crown decomposition", " Kernelization", " Parameterized complexity", " Preprocessing"], "paper_abstract": "We present a polynomial time algorithm that for any graph G and integer k >= 0, either finds a spanning tree with at least k internal vertices, or outputs a new graph G(R) on at most 3k vertices and an integer k' such that G has a spanning tree with at least k internal vertices if and only if G(R) has a spanning tree with at least k' internal vertices. In other words, we show that the MAXIMUM INTERNAL SPANNING TREE problem parameterized by the number of internal vertices k has a 3k-vertex kernel. Our result is based on an innovative application of a classical min-max result about hypertrees in hypergraphs which states that \"a hypergraph H contains a hypertree if and only if H is partition-connected.\" (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A linear vertex kernel for maximum internal spanning tree", "paper_id": "WOS:000311978600001"}