{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimal_resource_allocation"}, {"score": 0.04964635174824772, "phrase": "computational_grid"}, {"score": 0.012782564730131682, "phrase": "utility_function"}, {"score": 0.007814148801068437, "phrase": "budget_constraint"}, {"score": 0.007743739304950725, "phrase": "deadline_constraint"}, {"score": 0.004664352260912174, "phrase": "complex_undertaking"}, {"score": 0.00460125407969429, "phrase": "large-scale_heterogeneity"}, {"score": 0.004259418153299952, "phrase": "grid_resource"}, {"score": 0.004201774694043468, "phrase": "standard_method"}, {"score": 0.0038194503801108324, "phrase": "promising_method"}, {"score": 0.0037848978618663684, "phrase": "grid_resource_allocation"}, {"score": 0.0036663981146086103, "phrase": "heterogeneous_demand"}, {"score": 0.0036167509502276294, "phrase": "user's_preference"}, {"score": 0.0034403745992576808, "phrase": "user-centric_scheme"}, {"score": 0.0033937776228549557, "phrase": "system-centric_parameters"}, {"score": 0.00334780964309978, "phrase": "cost_functions"}, {"score": 0.0032577270508271305, "phrase": "grid_user"}, {"score": 0.003170060683860338, "phrase": "different_constraints"}, {"score": 0.0030707512751243214, "phrase": "common_resource"}, {"score": 0.0030429511467945525, "phrase": "multiple_bidding_users"}, {"score": 0.0030017207229983385, "phrase": "optimal_solution"}, {"score": 0.0029209233709517634, "phrase": "equilibrium_point"}, {"score": 0.0028293966058473476, "phrase": "total_demand_fora_resource"}, {"score": 0.002778385486855157, "phrase": "total_amount"}, {"score": 0.0026913130726432645, "phrase": "optimal_user_bids"}, {"score": 0.0026069623057065664, "phrase": "java-based_discrete-event_grid_simulation_toolkit"}, {"score": 0.0025833506486210764, "phrase": "gridsim"}, {"score": 0.002491015208328868, "phrase": "utility-driven_resource_allocation_strategy"}, {"score": 0.002401972657236928, "phrase": "utility_optimization"}, {"score": 0.002133937537670312, "phrase": "utility-driven_method"}], "paper_keywords": ["Resource allocation", " Utility function", " Computational grid", " GridSim"], "paper_abstract": "Optimal resource allocation is a complex undertaking due to large-scale heterogeneity present in computational grid. Traditionally, the decision based on certain cost functions has been used in allocating grid resource as a standard method that does not take resource access cost into consideration. In this paper, the utility function is presented as a promising method for grid resource allocation. To tackle the issue of heterogeneous demand, the user's preference is represented by utility function, which is driven by a user-centric scheme rather than system-centric parameters adopted by cost functions. The goal of each grid user is to maximize its own utility under different constraints. In order to allocate a common resource to multiple bidding users. the optimal solution is achieved by searching the equilibrium point of resource price such that the total demand fora resource exactly equals the total amount available to generate a set of optimal user bids. The experiments run on a Java-based discrete-event grid simulation toolkit called GridSim are made to study characteristics of the utility-driven resource allocation strategy under different constraints. Results show that utility optimization under budget constraint outperforms deadline constraint in terms of time spent, whereas deadline constraint outperforms budget constraint in terms of cost spent. The conclusion indicates that the utility-driven method is a very potential candidate for the optimal resource allocation in computational grid. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Utility-driven solution for optimal resource allocation in computational grid", "paper_id": "WOS:000268472200004"}