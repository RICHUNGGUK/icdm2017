{"auto_keywords": [{"score": 0.05007737955022616, "phrase": "relaxed_separation_logic"}, {"score": 0.03913206293172502, "phrase": "csl"}, {"score": 0.004308630865024719, "phrase": "first_program_logic"}, {"score": 0.004190563478825626, "phrase": "concurrent_programs"}, {"score": 0.003964007795174772, "phrase": "user's_perspective"}, {"score": 0.003909306789475787, "phrase": "rsl"}, {"score": 0.003775803846431323, "phrase": "concurrent_separation_logic"}, {"score": 0.0036468482216440233, "phrase": "proof_rules"}, {"score": 0.003378385493203297, "phrase": "individual_threads"}, {"score": 0.0030437652050982643, "phrase": "data_races"}, {"score": 0.0027806165169981622, "phrase": "sc-atomic_accesses"}, {"score": 0.002704306866425829, "phrase": "arbitrary_ownership_transfer"}, {"score": 0.002630085891013006, "phrase": "atomic_accesses"}, {"score": 0.002419393934835993, "phrase": "relaxed_atomic_accesses"}, {"score": 0.002336655334451464, "phrase": "ownership_transfer"}], "paper_keywords": ["Concurrency", " Weak memory models", " C/C plus", " Proof system", " Separation logic"], "paper_abstract": "We introduce relaxed separation logic (RSL), the first program logic for reasoning about concurrent programs running under the C11 relaxed memory model. From a user's perspective, RSL is an extension of concurrent separation logic (CSL) with proof rules for the various kinds of C11 atomic accesses. As in CSL, individual threads are allowed to access non-atomically only the memory that they own, thus preventing data races. Ownership can, however, be transferred via certain atomic accesses. For SC-atomic accesses, we permit arbitrary ownership transfer; for acquire/release atomic accesses, we allow ownership transfer only in one direction; whereas for relaxed atomic accesses, we rule out ownership transfer completely. We illustrate RSL with a few simple examples and prove its soundness directly over the axiomatic C11 weak memory model.", "paper_title": "Relaxed Separation Logic: A Program Logic for C11 Concurrency", "paper_id": "WOS:000327697300049"}