{"auto_keywords": [{"score": 0.004712988631183401, "phrase": "big_data_concept"}, {"score": 0.004632968695963776, "phrase": "massive_amounts"}, {"score": 0.004270960586542813, "phrase": "memory_or_storage_elements"}, {"score": 0.004234532601573088, "phrase": "exascale_computing_systems"}, {"score": 0.0041984140090404985, "phrase": "immediate_examples"}, {"score": 0.004144810537437608, "phrase": "scientific_data"}, {"score": 0.003522027550662857, "phrase": "social_data_posts"}, {"score": 0.003432604816716035, "phrase": "in-memory_components_database"}, {"score": 0.003359816816853762, "phrase": "commercial_storage"}, {"score": 0.003274499008699115, "phrase": "extreme_scale"}, {"score": 0.003137074867443131, "phrase": "current_concepts"}, {"score": 0.00296698375549856, "phrase": "data_intensive_applications"}, {"score": 0.0028669153591624696, "phrase": "computing_elements"}, {"score": 0.002608744950946475, "phrase": "starting_point"}, {"score": 0.002553382046204689, "phrase": "new_programming_paradigms"}, {"score": 0.0025099367332615794, "phrase": "runtime_tools"}, {"score": 0.0024566655761509276, "phrase": "data-intensive_tasks"}, {"score": 0.0023134312557290043, "phrase": "massive_parallelism"}, {"score": 0.002283839204519042, "phrase": "simplified_model"}, {"score": 0.002254624822004988, "phrase": "system_architecture"}, {"score": 0.002216251512062482, "phrase": "high_performance"}, {"score": 0.0021692000054033956, "phrase": "powerful_operations"}, {"score": 0.0021231452870210965, "phrase": "extreme_data_sources"}, {"score": 0.0021049977753042253, "phrase": "high_speed"}], "paper_keywords": ["Extreme Data", " HPC", " Exascale Systems", " Extreme Computing", " Parallel Programming Models", " Scalable Data Analysis"], "paper_abstract": "Extreme Data is an incarnation of Big Data concept distinguished by the massive amounts of data that must be queried, communicated and analyzed in near real-time by using a very large number of memory or storage elements and exascale computing systems. Immediate examples are the scientific data produced at a rate of hundreds of gigabits-per-second that must be stored, filtered and analyzed, the millions of images per day that must be analyzed in parallel, the one billion of social data posts queried in real-time on an in-memory components database. Traditional disks or commercial storage nowadays cannot handle the extreme scale of such application data. Following the need of improvement of current concepts and technologies, we focus in this paper on the needs of data intensive applications running on systems composed of up to millions of computing elements (exascale systems). We propose in this paper a methodology to advance the state-of-the-art. The starting point is the definition of new programming paradigms, APIs, runtime tools and methodologies for expressing data-intensive tasks on exascale systems. This will pave the way for the exploitation of massive parallelism over a simplified model of the system architecture, thus promoting high performance and efficiency, offering powerful operations and mechanisms for processing extreme data sources at high speed and/or real time.", "paper_title": "ON PROCESSING EXTREME DATA", "paper_id": "WOS:000371914800009"}