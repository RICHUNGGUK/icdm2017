{"auto_keywords": [{"score": 0.04835978765719222, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "frame_layout"}, {"score": 0.004574709094672837, "phrase": "seamless_support"}, {"score": 0.004508286991825192, "phrase": "cross_calls"}, {"score": 0.004442824994700736, "phrase": "cpu-fpga_coupling_architecture"}, {"score": 0.004221072004655573, "phrase": "host_processor"}, {"score": 0.004010342699414496, "phrase": "main_challenges"}, {"score": 0.003923269062268688, "phrase": "automatic_translation"}, {"score": 0.003866268750750096, "phrase": "high-level_languages"}, {"score": 0.003810093416457147, "phrase": "hardware_description_languages"}, {"score": 0.003489714006817602, "phrase": "novel_communication_framework"}, {"score": 0.0032671775301001513, "phrase": "unlimited_cross_calls"}, {"score": 0.0032196786163178107, "phrase": "hardware_recursive_calls"}, {"score": 0.0031267359296488118, "phrase": "software's_frame_layout"}, {"score": 0.003081272473508291, "phrase": "hdl_code_generation"}, {"score": 0.002992313172550772, "phrase": "stack_space"}, {"score": 0.002905914725757534, "phrase": "hardware_codes"}, {"score": 0.002622647280008795, "phrase": "indirect_interfaces"}, {"score": 0.0025098414374397308, "phrase": "interrupt_communication"}, {"score": 0.0023669270875629205, "phrase": "proposed_approach"}, {"score": 0.002298544073884724, "phrase": "small_additional_complexity"}, {"score": 0.0022321322970228308, "phrase": "insignificant_overhead"}, {"score": 0.0021996478802839316, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["CPU-FPGA communication interface", " CPU-FPGA cross call", " HLL-to-HDL translator", " Hardware-software co-design"], "paper_abstract": "A cross call between a host processor and FPGA is one of the main challenges for supporting automatic translation of high-level languages into hardware description languages (HDL). In this paper, we present a novel communication framework between the processor and FPGA, which supports unlimited cross calls and hardware recursive calls by following the software's frame layout in HDL code generation and sharing a stack space between software and hardware codes. Also, we introduce two implementation methods for our cross call, a direct and an indirect interfaces by an instruction-level and an interrupt communication, respectively. Our experiment shows that the proposed approach achieves our goal with small additional complexity in implementation and insignificant overhead in execution time. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Applying frame layout to hardware design in FPGA for seamless support of cross calls in CPU-FPGA coupling architecture", "paper_id": "WOS:000292490400002"}