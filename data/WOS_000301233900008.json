{"auto_keywords": [{"score": 0.04937176974353987, "phrase": "multiparty_applications"}, {"score": 0.04850161465082996, "phrase": "clock_drifts"}, {"score": 0.00481495049065317, "phrase": "distributed_denial"}, {"score": 0.00477924690801092, "phrase": "service_attacks"}, {"score": 0.004621813738791474, "phrase": "network-based_applications"}, {"score": 0.004274257668843717, "phrase": "earlier_solutions"}, {"score": 0.003737934295442975, "phrase": "longer_time"}, {"score": 0.003641713874009232, "phrase": "time_servers"}, {"score": 0.0033426036530090205, "phrase": "bigwheel_algorithm"}, {"score": 0.003293142761521425, "phrase": "application_server"}, {"score": 0.0032444113660668743, "phrase": "multiple_clients"}, {"score": 0.0032083351151314405, "phrase": "port-hopping_manner"}, {"score": 0.003149094460617212, "phrase": "group_synchronization"}, {"score": 0.0030679850425428053, "phrase": "adaptive_algorithm"}, {"score": 0.0030451958332949735, "phrase": "hoperaa"}, {"score": 0.0029447150254434842, "phrase": "bounded_asynchrony"}, {"score": 0.0028795712616923462, "phrase": "communicating_parties"}, {"score": 0.0024346858809238766, "phrase": "fixed_port"}, {"score": 0.0023021895404322767, "phrase": "\"first-contact\"_port"}, {"score": 0.0021607035327962246, "phrase": "experimentally_their_success_rates"}, {"score": 0.0021049977753042253, "phrase": "analytical_bounds"}], "paper_keywords": ["Clock drift", " data communication", " denial of service attack", " reliability", " application"], "paper_abstract": "Network-based applications commonly open some known communication port(s), making themselves easy targets for (distributed) Denial of Service (DoS) attacks. Earlier solutions for this problem are based on port-hopping between pairs of processes which are synchronous or exchange acknowledgments. However, acknowledgments, if lost, can cause a port to be open for longer time and thus be vulnerable, while time servers can become targets to DoS attack themselves. Here, we extend port-hopping to support multiparty applications, by proposing the BIGWHEEL algorithm, for each application server to communicate with multiple clients in a port-hopping manner without the need for group synchronization. Furthermore, we present an adaptive algorithm, HOPERAA, for enabling hopping in the presence of bounded asynchrony, namely, when the communicating parties have clocks with clock drifts. The solutions are simple, based on each client interacting with the server independently of the other clients, without the need of acknowledgments or time server(s). Further, they do not rely on the application having a fixed port open in the beginning, neither do they require the clients to get a \"first-contact\" port from a third party. We show analytically the properties of the algorithms and also study experimentally their success rates, confirm the relation with the analytical bounds.", "paper_title": "Mitigating Distributed Denial of Service Attacks in Multiparty Applications in the Presence of Clock Drifts", "paper_id": "WOS:000301233900008"}