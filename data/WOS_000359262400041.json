{"auto_keywords": [{"score": 0.028588547579191232, "phrase": "parallel_computation"}, {"score": 0.00481495049065317, "phrase": "graphic_processing_units"}, {"score": 0.004682708592184678, "phrase": "neural_fuzzy_systems"}, {"score": 0.004347473906950474, "phrase": "large-scale_problems"}, {"score": 0.00418892838079239, "phrase": "single-threaded_central_processing_unit"}, {"score": 0.004092774981286263, "phrase": "serially_processed_computation"}, {"score": 0.004036141321779216, "phrase": "input_variable"}, {"score": 0.00399881984083004, "phrase": "fuzzy_rule"}, {"score": 0.003943481134959376, "phrase": "graphics_processing_units"}, {"score": 0.0035110198699787013, "phrase": "parallel_processing"}, {"score": 0.003336031521101184, "phrase": "system_training_time"}, {"score": 0.0031697368057340895, "phrase": "online_learning_approach"}, {"score": 0.003096905353118796, "phrase": "rule-firing_strength"}, {"score": 0.002956209594959227, "phrase": "well-known_gradient_descent_algorithm"}, {"score": 0.002795762692061496, "phrase": "gpu_implementation_techniques"}, {"score": 0.002488851299416018, "phrase": "parallel_and_independent_properties"}, {"score": 0.002431626477893495, "phrase": "input_variables"}, {"score": 0.002397923568994474, "phrase": "fuzzy_rules"}, {"score": 0.0023103100997344072, "phrase": "type-reduction_operation"}, {"score": 0.0022467024793003812, "phrase": "possible_system_outputs"}, {"score": 0.0022052711621931144, "phrase": "traditional_iterative_procedure"}], "paper_keywords": ["Compute unified device architecture", " fuzzy neural networks", " graphic processing units", " neural fuzzy systems", " parallel processing", " type-2 fuzzy systems"], "paper_abstract": "In contrast with type-1 neural fuzzy systems (NFSs), interval type-2 NFSs process interval membership values are much more computationally expensive in implementation, especially for large-scale problems. Interval type-2 NFSs are conventionally implemented on a single-threaded central processing unit (CPU) with serially processed computation for each input variable and fuzzy rule. Because graphics processing units (GPUs) have many cores that can collectively run many threads in parallel, this paper proposes the implementation of interval type-2 NFSs through the parallel processing on GPUs (IT2NFS-GPU) to reduce the system training time. The structure in the IT2NFS-GPU is built through an online learning approach that is based on rule-firing strength. Parameters in the T2NFS-GPU are tuned using the well-known gradient descent algorithm; therefore, it is easier for users to follow the GPU implementation techniques. In the IT2NFS-GPU, for the parallel computation of the structure and parameter learning algorithms, blocks of threads are partitioned according to the parallel and independent properties of interval boundaries, input variables, and fuzzy rules. Specifically, the IT2NFS-GPU implements the type-reduction operation through the parallel computation of all possible system outputs instead of the traditional iterative procedure. The IT2NFS-GPU is applied to several data-driven learning problems to verify its shorter computing times.", "paper_title": "Speedup of Learning in Interval Type-2 Neural Fuzzy Systems Through Graphic Processing Units", "paper_id": "WOS:000359262400041"}