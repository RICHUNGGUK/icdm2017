{"auto_keywords": [{"score": 0.03817717905827686, "phrase": "lcp"}, {"score": 0.01204943000805289, "phrase": "special_case"}, {"score": 0.00481495049065317, "phrase": "largest_common_point"}, {"score": 0.004300453431933622, "phrase": "dimensional_euclidean_space"}, {"score": 0.004007083686875716, "phrase": "maximum_cardinality"}, {"score": 0.0034543031591181546, "phrase": "largest_common_point_set"}, {"score": 0.0030630037175103032, "phrase": "efficient_algorithms"}, {"score": 0.0028944757265206332, "phrase": "related_problem"}, {"score": 0.0025846562485378247, "phrase": "time_algorithm"}, {"score": 0.002391067964886602, "phrase": "small_k"}, {"score": 0.0021049977753042253, "phrase": "vertical_bar"}], "paper_keywords": ["largest common point set", " approximate string matching", " computational", " geometry", " point set matching", " congruence", " pattern matching"], "paper_abstract": "The largest common point set problem (LCP) is, given two point set P and Q in d-dimensional Euclidean space, to find a subset of P with the maximum cardinality that is congruent to some subset of Q. We consider a special case of LCP in which the size of the largest common point set is at least (vertical bar P vertical bar + vertical bar Q vertical bar - k)/2. We develop efficient algorithms for this special case of LCP and a related problem. In particular, we present an O (k(3)n(1.34) + kn(2) log n) time algorithm for LCP in two-dimensions, which is much better for small k than an existing 0 (n(3.2) log n) time algorithm, where n max {vertical bar P vertical bar,vertical bar Q vertical bar}.", "paper_title": "Algorithms for point set matching with k-differences", "paper_id": "WOS:000239874300012"}