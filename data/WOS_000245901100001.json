{"auto_keywords": [{"score": 0.040012451990183516, "phrase": "packet_errors"}, {"score": 0.03767407563899196, "phrase": "tree_nodes"}, {"score": 0.03560150591760226, "phrase": "tree_reliability"}, {"score": 0.00481495049065317, "phrase": "fault_resilience"}, {"score": 0.004777569299319633, "phrase": "overlay_multicast"}, {"score": 0.004740476936977635, "phrase": "media_streaming"}, {"score": 0.004685375117376838, "phrase": "key_technical_challenge"}, {"score": 0.004559270778306828, "phrase": "highly_dynamic_multicast_members"}, {"score": 0.004506265705673849, "phrase": "data_delivery"}, {"score": 0.004250302819248558, "phrase": "live_media"}, {"score": 0.004087756756529841, "phrase": "stable_multicast_tree"}, {"score": 0.004024485331377682, "phrase": "negative_impact"}, {"score": 0.003993216345115755, "phrase": "frequent_member_departures"}, {"score": 0.003946766004066276, "phrase": "existing_overlay"}, {"score": 0.00373701482510911, "phrase": "network_failures"}, {"score": 0.0036791522245326514, "phrase": "first_problem"}, {"score": 0.00331125524068286, "phrase": "stochastic_analysis"}, {"score": 0.003234615195382533, "phrase": "tree_depth"}, {"score": 0.002968424524565369, "phrase": "commonly_used_distributed_algorithms"}, {"score": 0.0029338597685088603, "phrase": "rost_algorithm"}, {"score": 0.002865929543375884, "phrase": "average_service_delay"}, {"score": 0.0026923527275481804, "phrase": "malicious_behaviors"}, {"score": 0.0025892330566358503, "phrase": "second_problem"}, {"score": 0.00243237365704391, "phrase": "single_recovery_source"}, {"score": 0.002366763442497185, "phrase": "timely_delivery"}, {"score": 0.0023391880766516285, "phrase": "lost_data"}, {"score": 0.00228499525153, "phrase": "data_outages"}, {"score": 0.0022583704173318123, "phrase": "residual_bandwidths"}, {"score": 0.0022407927161620855, "phrase": "multiple_sources"}, {"score": 0.0021803388613879896, "phrase": "minimum-loss-correlation_algorithm"}, {"score": 0.0021049977753042253, "phrase": "proposed_schemes"}], "paper_keywords": ["reliability", " fault resilience", " multicast", " media streaming", " peer-to-peer", " overlay"], "paper_abstract": "A key technical challenge for overlay multicast is that the highly dynamic multicast members can make data delivery unreliable. In this paper, we address this issue in the context of live media streaming by exploring 1) how to construct a stable multicast tree that minimizes the negative impact of frequent member departures on an existing overlay and 2) how to efficiently recover from packet errors caused by end-system or network failures. For the first problem, we identify two layout schemes for the tree nodes, namely, the bandwidth-ordered tree and the time-ordered tree, which represent two typical approaches to improving tree reliability, and conduct a stochastic analysis on their properties regarding reliability and tree depth. Based on the findings, we propose a distributed Reliability-Oriented Switching Tree ( ROST) algorithm that minimizes the failure correlation among tree nodes. Compared with some commonly used distributed algorithms, the ROST algorithm significantly improves tree reliability and reduces average service delay, while incurring only a small protocol overhead; furthermore, it features a mechanism that prevents cheating or malicious behaviors in the exchange of bandwidth/time information. For the second problem, we develop a simple Cooperative Error Recovery (CER) protocol that helps recover from packet errors efficiently. Recognizing that a single recovery source is usually incapable of providing the timely delivery of the lost data, the protocol recovers from data outages using the residual bandwidths from multiple sources, which are identified using a minimum-loss-correlation algorithm. Extensive simulations demonstrate the effectiveness of the proposed schemes.", "paper_title": "Improving the fault resilience of overlay multicast for media streaming", "paper_id": "WOS:000245901100001"}