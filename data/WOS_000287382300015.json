{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hairpin_completion"}, {"score": 0.00475413908468027, "phrase": "formal_operation"}, {"score": 0.004576253356889219, "phrase": "restricted_variant"}, {"score": 0.004330941610682453, "phrase": "single_stranded_molecule_x_such_that_either_a_suffix"}, {"score": 0.0040298010803060495, "phrase": "new_word"}, {"score": 0.003639835714755229, "phrase": "purely_mathematical_one"}, {"score": 0.003593812067062062, "phrase": "biological_reality"}, {"score": 0.0029817668105720924, "phrase": "current_word"}, {"score": 0.0027390682208834013, "phrase": "formal_languages"}, {"score": 0.002548331088496964, "phrase": "bounded_hairpin_completion_distance"}, {"score": 0.0023708445073819277, "phrase": "finally_also_the_inverse_operation"}, {"score": 0.0023309080951251335, "phrase": "hairpin_reduction"}, {"score": 0.002224510044064184, "phrase": "hairpin_roots"}, {"score": 0.002196342933346204, "phrase": "regular_language"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["DNA computing", " Formal languages", " Hairpin completion", " Bounded hairpin completion", " Iterated bounded hairpin completion", " Bounded hairpin completion distance", " Bounded hairpin reduction"], "paper_abstract": "Hairpin completion is a formal operation inspired from biochemistry. Here we consider a restricted variant of hairpin completion called bounded hairpin completion. Applied to a word encoding a single stranded molecule x such that either a suffix or a prefix of x is complementary to a subword of x, hairpin completion produces a new word z, which is a prolongation of x to the right or to the left by annealing. Although this operation is a purely mathematical one and the biological reality is just a source of inspiration, it seems rather unrealistic to impose no restriction on the length of the prefix or suffix added by the hairpin completion. The restriction considered here concerns the length of all prefixes and suffixes that are added to the current word by hairpin completion. They cannot be longer than a given constant. Closure properties of some classes of formal languages under the non-iterated and iterated bounded hairpin completion are investigated. We consider the bounded hairpin completion distance between two words and generalize this distance to languages and discuss algorithms for computing them. Finally also the inverse operation, namely bounded hairpin reduction, as well as the set of all primitive bounded hairpin roots of a regular language are considered. (C) 2010 Published by Elsevier Inc.", "paper_title": "Bounded hairpin completion", "paper_id": "WOS:000287382300015"}