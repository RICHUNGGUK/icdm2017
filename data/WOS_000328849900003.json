{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "propositional_dummett_logic"}, {"score": 0.049178471674397164, "phrase": "subformula_property"}, {"score": 0.004337276328199398, "phrase": "tableau_calculi"}, {"score": 0.003725470458263889, "phrase": "kripke_semantics"}, {"score": 0.0036553070575015344, "phrase": "dummett_logic"}, {"score": 0.0035525230119401153, "phrase": "first_calculus"}, {"score": 0.0031096747349602344, "phrase": "second_calculus"}, {"score": 0.003022186855664124, "phrase": "semantical_levels"}, {"score": 0.0028006988338192375, "phrase": "present_state"}, {"score": 0.0025954008219792337, "phrase": "tableau_systems"}, {"score": 0.002337403139264533, "phrase": "completeness_theorem"}, {"score": 0.0021049977753042253, "phrase": "check_mechanisms"}], "paper_keywords": ["Dummett logic", " Tableau calculi", " Automated theorem proving", " Subformula property"], "paper_abstract": "In this paper we present two terminating tableau calculi for propositional Dummett logic obeying the subformula property. The ideas of our calculi rely on the linearly ordered Kripke semantics of Dummett logic. The first calculus works on two semantical levels: the present and the next possible world. The second calculus employs the semantical levels of known or not known at the present state of knowledge, that are usual in tableau systems, and exploits a property of the construction of the completeness theorem to introduce a check which is an alternative to loop check mechanisms.", "paper_title": "Terminating Calculi for Propositional Dummett Logic with Subformula Property", "paper_id": "WOS:000328849900003"}