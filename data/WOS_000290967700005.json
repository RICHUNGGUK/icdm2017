{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ordered_disjunction"}, {"score": 0.03626275334087338, "phrase": "answer_sets"}, {"score": 0.03572270209581421, "phrase": "split_programs"}, {"score": 0.024613758485763877, "phrase": "regular_disjunction"}, {"score": 0.004620093797504386, "phrase": "logical_treatment"}, {"score": 0.004549063619065006, "phrase": "ordered_disjunction_operator_x"}, {"score": 0.0044791265470480795, "phrase": "brewka"}, {"score": 0.004433090944906116, "phrase": "niemela"}, {"score": 0.0043875257506180865, "phrase": "syrjanen"}, {"score": 0.004320055598195391, "phrase": "logic_programs_with_ordered_disjunctions"}, {"score": 0.004060350364088702, "phrase": "logic_programming"}, {"score": 0.003776952587683581, "phrase": "lpod"}, {"score": 0.003680587852807675, "phrase": "normal_programs"}, {"score": 0.0034951469511975346, "phrase": "preference_relation"}, {"score": 0.0032848684681050745, "phrase": "first_step"}, {"score": 0.003201018846103988, "phrase": "suitable_translation"}, {"score": 0.0031032109441552287, "phrase": "derived_operator"}, {"score": 0.0028127163745564777, "phrase": "direct_way"}, {"score": 0.0026570998719084153, "phrase": "alternative_implementation"}, {"score": 0.0025100713447593773, "phrase": "strongly_equivalent_transformations"}, {"score": 0.0024586427394152196, "phrase": "x_operator"}, {"score": 0.002171417085299585, "phrase": "karger"}, {"score": 0.0021490622382190736, "phrase": "lopes"}, {"score": 0.002126907904291535, "phrase": "olmedilla"}, {"score": 0.0021049980887993046, "phrase": "polleres"}], "paper_keywords": ["Answer set programming", " logic programs with ordered disjunction", " preferences", " equilibrium logic"], "paper_abstract": "In this paper we consider a logical treatment for the ordered disjunction operator x introduced by Brewka, Niemela and Syrjanen in their Logic Programs with Ordered Disjunctions (LPOD). LPODs are used to represent preferences in logic programming under the answer set semantics. Their semantics is defined by first translating the LPOD into a set of normal programs (called split programs) and then imposing a preference relation among the answer sets of these split programs. We concentrate on the first step and show how a suitable translation of the ordered disjunction as a derived operator into the logic of Here-and-There allows capturing the answer sets of the split programs in a direct way. We use this characterisation not only for providing an alternative implementation for LPODs, but also for checking several properties (under strongly equivalent transformations) of the x operator, like for instance, its distributivity with respect to conjunction or regular disjunction. We also make a comparison to an extension proposed by Karger, Lopes, Olmedilla and Polleres, that combines x with regular disjunction.", "paper_title": "A logical characterisation of ordered disjunction", "paper_id": "WOS:000290967700005"}