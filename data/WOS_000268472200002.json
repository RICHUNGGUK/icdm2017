{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "monotone_framework"}, {"score": 0.03758245287377805, "phrase": "control_structure"}, {"score": 0.004754152501428601, "phrase": "ccs."}, {"score": 0.004634799977448855, "phrase": "communicating_systems"}, {"score": 0.0045763546489249645, "phrase": "ccs"}, {"score": 0.00443308765153716, "phrase": "robin_milner"}, {"score": 0.004267163206961948, "phrase": "concurrent_systems"}, {"score": 0.003663067281537946, "phrase": "static_analysis"}, {"score": 0.0030071857666598193, "phrase": "efficient_implementation"}, {"score": 0.0029691377785333872, "phrase": "classical_imperative_programming_languages"}, {"score": 0.002821685815956478, "phrase": "finite_automaton"}, {"score": 0.0026815368507715, "phrase": "ccs_model"}, {"score": 0.0024842242921857705, "phrase": "enabled_actions"}, {"score": 0.0024527767211457046, "phrase": "appropriate_transfer_functions"}, {"score": 0.0023013968622710847, "phrase": "classical_worklist_algorithm"}, {"score": 0.0022578275190855124, "phrase": "overall_construction"}, {"score": 0.0021049977753042253, "phrase": "abstract_interpretation"}], "paper_keywords": ["Process calculi", " CCS", " Static analysis", " Monotone frameworks"], "paper_abstract": "The calculus of communicating systems, CCS, was introduced by Robin Milner as a calculus for modelling concurrent systems. Subsequently several techniques have been developed for analysing such models in order to get further insight into their dynamic behaviour. In this paper we present a static analysis for approximating the control structure embedded within the models. We formulate the analysis as an instance of a monotone framework and thus draw on techniques that often are associated with the efficient implementation of classical imperative programming languages. We show how to construct a finite automaton that faithfully captures the control structure of a CCS model. Each state in the automaton records a multiset of the enabled actions and appropriate transfer functions are developed for transforming one state into another. A classical worklist algorithm governs the overall construction of the automaton and its termination is ensured using techniques from abstract interpretation. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "A monotone framework for CCS", "paper_id": "WOS:000268472200002"}