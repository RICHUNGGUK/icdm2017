{"auto_keywords": [{"score": 0.038173795681782564, "phrase": "profit_caching"}, {"score": 0.0074959925827317595, "phrase": "hybrid_disk_drive"}, {"score": 0.007337268458758665, "phrase": "flash_memory"}, {"score": 0.007105416722332285, "phrase": "hybrid_drive"}, {"score": 0.005776304116160638, "phrase": "hybrid_drives"}, {"score": 0.00481495049065317, "phrase": "completely_fair_queuing"}, {"score": 0.004746558955503364, "phrase": "hybrid_disks"}, {"score": 0.004728337882134815, "phrase": "cfq_scheduler"}, {"score": 0.004611419523589853, "phrase": "ha-cfq_scheduler"}, {"score": 0.004596192494271827, "phrase": "small_amount"}, {"score": 0.004514714250357749, "phrase": "mechanical_drive"}, {"score": 0.004466519142879166, "phrase": "significant_attention"}, {"score": 0.004371660146981191, "phrase": "storage_hierarchy"}, {"score": 0.004277653278831255, "phrase": "experimental_results"}, {"score": 0.004233119608341877, "phrase": "mechanical_disk"}, {"score": 0.004172957742905294, "phrase": "current_caching_architectures"}, {"score": 0.003926626018798576, "phrase": "rotational_mechanical_disk_drives"}, {"score": 0.0036684182697540382, "phrase": "new_data_caching_scheme"}, {"score": 0.003526735797659508, "phrase": "self-optimizing_caching_algorithm"}, {"score": 0.0034271313706984658, "phrase": "possible_data_characteristics"}, {"score": 0.003318423751430509, "phrase": "read_count"}, {"score": 0.0031448288291084, "phrase": "caching_policy"}, {"score": 0.003066945490483524, "phrase": "hybrid_disk-aware_completely_fair_queuing"}, {"score": 0.002834470668509792, "phrase": "linux_kernel"}, {"score": 0.0027841357057119317, "phrase": "trace-driven_simulator"}, {"score": 0.002724909017963099, "phrase": "detailed_experiments"}, {"score": 0.002610198789888055, "phrase": "significantly_improved_performance"}, {"score": 0.0025730425700096365, "phrase": "previous_schemes"}, {"score": 0.002482443883144136, "phrase": "previous_random_access_first_and_flashcache_caching_schemes"}, {"score": 0.0023440589015485077, "phrase": "total_execution_time"}, {"score": 0.002229300966775034, "phrase": "runtime_overhead"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["disk cache", " hybrid disks", " heterogeneous storage", " disk scheduler", " flash memory"], "paper_abstract": "Recently, a hybrid disk drive that integrates a small amount of flash memory within a mechanical drive has received significant attention. The hybrid drive extends the storage hierarchy by using flash memory to cache data from the mechanical disk. Unfortunately, current caching architectures fail to fully exploit the potential of the hybrid drive. Furthermore, current disk input/output (I/O) schedulers are optimized for rotational mechanical disk drives and thus must be re-targeted for the hybrid disk drive. In this paper, we propose a new data caching scheme, called Profit Caching, for hybrid drives. Profit Caching is a self-optimizing caching algorithm. It considers and seamlessly integrates all possible data characteristics that impact the performance of hybrid drives, including read count, write count, sequentiality, randomness, and recency, to determine the caching policy. Moreover, we propose a hybrid disk-aware Completely Fair Queuing (HA-CFQ) scheduler to avoid unnecessary I/O anticipations of the CFQ scheduler. We have implemented Profit Caching and HA-CFQ scheduler in the Linux kernel. Coupled with a trace-driven simulator, we have also conducted detailed experiments under a variety of workloads. Experimental results show that Profit Caching provides significantly improved performance compared with the previous schemes. In particular, the throughput of Profit Caching outperforms previous Random Access First and FlashCache caching schemes by factors of up to 1.8 and 7.6, respectively. In addition, the HA-CFQ scheduler reduces the total execution time of the CFQ scheduler by up to 1.74%. Finally, the experimental results show that the runtime overhead of Profit Caching is extremely insignificant and can be ignored. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Profit data caching and hybrid disk-aware Completely Fair Queuing scheduling algorithms for hybrid disks", "paper_id": "WOS:000358012100003"}