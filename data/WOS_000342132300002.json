{"auto_keywords": [{"score": 0.047204746937999364, "phrase": "socialcloud"}, {"score": 0.00481495049065317, "phrase": "trustworthy_distributed_computing_on_social_networks"}, {"score": 0.004603244077348199, "phrase": "new_computing_paradigm"}, {"score": 0.004425616928975799, "phrase": "computing_nodes"}, {"score": 0.004327196832280818, "phrase": "social_ties"}, {"score": 0.004230956171850591, "phrase": "bootstrapping_trust-possessing_social_graph"}, {"score": 0.004022137057452406, "phrase": "existing_computing_paradigms"}, {"score": 0.003932654396285872, "phrase": "grid_computing"}, {"score": 0.0038668462001710314, "phrase": "conventional_cloud_computing_paradigms"}, {"score": 0.003284637361174143, "phrase": "computing_paradigm"}, {"score": 0.0032115093493071366, "phrase": "real-world_social_graphs"}, {"score": 0.003140004304719746, "phrase": "social_traces"}, {"score": 0.0030017207229983385, "phrase": "paradigmfor_ordinary_users"}, {"score": 0.002743105561254975, "phrase": "straggler_handling"}, {"score": 0.0023827927890399357, "phrase": "high_trust_properties"}, {"score": 0.0023035922232490106, "phrase": "computing_algorithms"}, {"score": 0.0022522565004588113, "phrase": "sybil_defenses"}, {"score": 0.0021529842700733974, "phrase": "good_candidates"}], "paper_keywords": ["Distributed computing", " trust", " social computing"], "paper_abstract": "In this paper we investigate a new computing paradigm, called SocialCloud, in which computing nodes are governed by social ties driven from a bootstrapping trust-possessing social graph. We investigate how this paradigm differs from existing computing paradigms, such as grid computing and the conventional cloud computing paradigms. We show that incentives to adopt this paradigm are intuitive and natural, and security and trust guarantees provided by it are solid. We propose metrics for measuring the utility and advantage of this computing paradigm, and using real-world social graphs and structures of social traces; we investigate the potential of this paradigmfor ordinary users. We study several design options and trade-offs, such as scheduling algorithms, centralization, and straggler handling, and show how they affect the utility of the paradigm. Interestingly, we conclude that whereas graphs known in the literature for high trust properties do not serve distributed trusted computing algorithms, such as Sybil defenses-for their weak algorithmic properties, such graphs are good candidates for our paradigm for their self-load-balancing features.", "paper_title": "Trustworthy Distributed Computing on Social Networks", "paper_id": "WOS:000342132300002"}