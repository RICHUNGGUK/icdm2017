{"auto_keywords": [{"score": 0.04949240338189186, "phrase": "input_validation"}, {"score": 0.00805128648359274, "phrase": "input_validation_testing"}, {"score": 0.006694914292628155, "phrase": "path_partition"}, {"score": 0.00481495049065317, "phrase": "code_behavior"}, {"score": 0.004697655699119423, "phrase": "functional_testing"}, {"score": 0.004471530397729526, "phrase": "software_systems"}, {"score": 0.004230068512904886, "phrase": "external_effects"}, {"score": 0.003976978140059542, "phrase": "large_class"}, {"score": 0.003808845109556467, "phrase": "major_part"}, {"score": 0.003738973626996355, "phrase": "data-intensive_system"}, {"score": 0.0033251716926666437, "phrase": "code-based_method"}, {"score": 0.0029937855454238507, "phrase": "input_conditions"}, {"score": 0.0027457584014804574, "phrase": "white-box_test_cases"}, {"score": 0.0024416087858984644, "phrase": "valid_and_invalid_input_conditions"}, {"score": 0.0022531089868518235, "phrase": "test_suite_design"}, {"score": 0.002225426912273257, "phrase": "black-box_testing"}, {"score": 0.0021311850321045767, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "experimental_study"}], "paper_keywords": ["Software testing", " Black-box testing", " White-box testing", " Input validation", " Test coverage"], "paper_abstract": "Input validation is the enforcement built in software systems to ensure that only valid input is accepted to raise external effects. It is essential and very important to a large class of systems and usually forms a major part of a data-intensive system. Most existing methods for input validation testing are specification-based. However, to test input validation more accurately, a code-based method is also required. In this paper, we propose an approach to extract path partition and input conditions from code for testing input validation. The path partition can be used to design white-box test cases for testing input validation. It can also be used to measure the coverage of input validation testing. The valid and invalid input conditions recovered can be used to check against the specifications and aid the test suite design in black-box testing. We have also evaluated the proposed method through experimental study. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Covering code behavior on input validation in functional testing", "paper_id": "WOS:000261919900022"}