{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "priority_rules"}, {"score": 0.004713379149462482, "phrase": "rcmpsp."}, {"score": 0.00451659023910662, "phrase": "useful_decision_making_technique"}, {"score": 0.004421284843189731, "phrase": "single_and_multiple_projects"}, {"score": 0.0038900709793274484, "phrase": "conclusive_guidance"}, {"score": 0.0034407781868385423, "phrase": "easy_and_quick_learning_process"}, {"score": 0.00232995025271599, "phrase": "genetic_algorithms"}, {"score": 0.0022685255265595624, "phrase": "scheduling_problems"}, {"score": 0.002196944917134202, "phrase": "wrong_choice"}, {"score": 0.0021735890994119757, "phrase": "priority_rule"}, {"score": 0.0021049977753042253, "phrase": "high_performance"}], "paper_keywords": ["Project scheduling", " Priority rules", " Resource constrained multi-project scheduling", " Learning process", " Genetic algorithm"], "paper_abstract": "The priority rules are extensively used as a useful decision making technique for managers in single and multiple projects with limited resources, mainly because of their speed and simplicity. However, the question of which priority rule to use has been discussed without conclusive guidance. There is not any rule which performs better than any other in all instances. In this paper we propose an easy and quick learning process to determine which priority rule is the best for each instance. The analysis was carried out with 34 popular priority rules in 26 benchmarking problems. However, the process is capable of using any set of priority rules. As expected, every instance has its own best priority rule. It is also demonstrated that the selection of the most appropriate priority rule is extremely relevant, even when any meta-heuristic is used to solve the problem. In particular, we focus on genetic algorithms because of their high performance in scheduling problems. Our results show that a wrong choice of priority rule is not compensated by the high performance of the meta-heuristic.", "paper_title": "Learning process on priority rules to solve the RCMPSP", "paper_id": "WOS:000347893700010"}