{"auto_keywords": [{"score": 0.05007637157079306, "phrase": "grid-computing_interface"}, {"score": 0.04027097824508859, "phrase": "distributed_program"}, {"score": 0.0400435113643928, "phrase": "test_data"}, {"score": 0.0376942651593154, "phrase": "linux"}, {"score": 0.004768049055225149, "phrase": "main_design_concepts"}, {"score": 0.004740126725341152, "phrase": "object-oriented_particle_dynamics_code"}, {"score": 0.004703149944841539, "phrase": "freely_available_software"}, {"score": 0.004630055463858585, "phrase": "microscopic_classical_molecular_dynamics"}, {"score": 0.00459393336391459, "phrase": "lagrangian_particle-based_discretisation"}, {"score": 0.004575977644865379, "phrase": "macroscopic_continuum_mechanics_equations"}, {"score": 0.00452252857066346, "phrase": "runtime_definition"}, {"score": 0.004504850679320975, "phrase": "arbitrary_degrees"}, {"score": 0.004460956321885683, "phrase": "arbitrary_equations"}, {"score": 0.004417487764326481, "phrase": "modular_and_symbolic_computation"}, {"score": 0.004365881789903319, "phrase": "symbolic_expressions"}, {"score": 0.004348813532606792, "phrase": "inter-particle_forces"}, {"score": 0.004206390040747923, "phrase": "high_performance_grid_computing_environment"}, {"score": 0.0041899426866893385, "phrase": "huge_geographically_distributed_computational_resources"}, {"score": 0.0041328796505374155, "phrase": "easy-to-use_interface"}, {"score": 0.004102919795277547, "phrase": "program"}, {"score": 0.004076590577260784, "phrase": "sympler_catalogue"}, {"score": 0.003981865752571105, "phrase": "cpc_program_library"}, {"score": 0.003966292811419841, "phrase": "queen's_university"}, {"score": 0.003950781121211149, "phrase": "belfast"}, {"score": 0.003935328685660454, "phrase": "n._ireland"}, {"score": 0.0039046053435687904, "phrase": "gnu_general_public_license"}, {"score": 0.0036457672198249333, "phrase": "tar.gz_programming_language"}, {"score": 0.0033710114526256216, "phrase": "ram"}, {"score": 0.003122669003407283, "phrase": "libsuperlu_nature"}, {"score": 0.0029616217177058602, "phrase": "macroscopic_time"}, {"score": 0.0029500270981001058, "phrase": "length_scales"}, {"score": 0.0029384777371425862, "phrase": "suitable_particle_based_simulation_methods"}, {"score": 0.0029040994533437903, "phrase": "dissipative_particle_dynamics"}, {"score": 0.002892729377519916, "phrase": "smoothed_particle_hydrodynamics"}, {"score": 0.0027978585876558843, "phrase": "code_extensions"}, {"score": 0.0027705505273051007, "phrase": "sympler"}, {"score": 0.0027167292419065514, "phrase": "modular_object_oriented_structure"}, {"score": 0.00268493828558848, "phrase": "user_level"}, {"score": 0.0026535183547537655, "phrase": "different_integration_algorithms"}, {"score": 0.0026431267487109543, "phrase": "particle_interaction_forces"}, {"score": 0.0026327757304477665, "phrase": "boundary_conditions"}, {"score": 0.002556421011223597, "phrase": "complex_multi-component_systems"}, {"score": 0.0025215486544004134, "phrase": "additional_user-defined_degrees"}, {"score": 0.002472552537325606, "phrase": "runtime-compiled_mathematical_expressions"}, {"score": 0.0024008333622318767, "phrase": "available_computational_cores"}, {"score": 0.0023038997972591193, "phrase": "runtime-compiled_user-defined_expressions"}, {"score": 0.0022769287097263564, "phrase": "current_version"}, {"score": 0.0022635615323574124, "phrase": "future_updates"}, {"score": 0.002167898771925307, "phrase": "running_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Molecular dynamics", " Dissipative particle dynamics", " Smoothed particle hydrodynamics", " Symbolic computation", " Runtime compilation", " Object oriented programming"], "paper_abstract": "We present the main design concepts of the object-oriented particle dynamics code SYMPLER. With this freely available software, simulations can be performed ranging from microscopic classical molecular dynamics up to the Lagrangian particle-based discretisation of macroscopic continuum mechanics equations. We show how the runtime definition of arbitrary degrees of freedom and of arbitrary equations of motion allows for modular and symbolic computation with high flexibility. Arbitrary symbolic expressions for inter-particle forces can be defined as well as fluxes of arbitrarily many additional scalar, vectorial or tensorial degrees of freedom. The integration in a high performance grid computing environment makes huge geographically distributed computational resources accessible to the software by an easy-to-use interface. Program summary Program title: SYMPLER Catalogue identifier: AERQ_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AERQ_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public License, version 3 No. of lines in distributed program, including test data, etc.: 221255 No. of bytes in distributed program, including test data, etc.: 1805954 Distribution format: tar.gz Programming language: C++. Computer: Any system operatable with Linux. Operating system: Linux, MacOS. Has the code been vectorised or parallelised?: Experimental OpenMP parallelisation for usually up to 8 cores, the grid-version can use hundreds of cores. RAM: tens of MB to several GB, depending on problem. Classification: 7.7, 12, 16.1, 16.3, 16.13, 23. External routines: GSL, libxmI2; optional: Iibsdl, OpenMP, libjama, libtnt, libsuperlu Nature of problem: A unified flexible and modular simulation tool allowing for the investigation of structural, thermodynamic, and dynamical properties of fluids and solids from microscopic over mesoscopic up to macroscopic time and length scales with suitable particle based simulation methods such as molecular dynamics, dissipative particle dynamics or smoothed particle hydrodynamics. The user should be enabled to freely define his own physical models without the need for recoding or code extensions. Solution method: SYMPLER provides flexibility to the user by 1. a modular object oriented structure that is passed to the user level and allows easy switching among different integration algorithms, particle interaction forces, boundary conditions, etc. 2. an arbitrary number of particle-species for the simulation of complex multi-component systems 3. an arbitrary number of additional user-defined degrees of freedom per particle-species 4. symbolic definition of runtime-compiled mathematical expressions for particle interactions 5. import of CAD-geometries 6. a flexible choice of available computational cores through a grid-computing interface, amongst others. Restrictions: Classical deterministic and stochastic Newtonian dynamics. Unusual features: Symbolic runtime-compiled user-defined expressions. Additional comments: The current version and all future updates to the code are also found at http://sympler.org. Running time: Some benchmarks are given in the paper. The running time is problem dependent and ranges from seconds to days. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "SYMPLER: SYMbolic ParticLE simulatoR with grid-computing interface", "paper_id": "WOS:000331919100040"}