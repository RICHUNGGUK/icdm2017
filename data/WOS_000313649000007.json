{"auto_keywords": [{"score": 0.048474177026984554, "phrase": "steiner_tree"}, {"score": 0.04264676067030431, "phrase": "international_integer_programming"}, {"score": 0.03899790453225917, "phrase": "higher_cost"}, {"score": 0.037165381049465665, "phrase": "k_terminals"}, {"score": 0.03236470472097692, "phrase": "k-steiner_tree"}, {"score": 0.022770144069384005, "phrase": "proc"}, {"score": 0.00481495049065317, "phrase": "robust_network_design"}, {"score": 0.004793203387266194, "phrase": "exponential_scenarios"}, {"score": 0.004750002000045893, "phrase": "two-stage_robust_variants"}, {"score": 0.004685925469417181, "phrase": "undirected_graphs"}, {"score": 0.0046331860706959275, "phrase": "steiner_forest"}, {"score": 0.0046018264570209765, "phrase": "uncapacitated_facility_location"}, {"score": 0.004509009676783725, "phrase": "dhamdhere_et_al"}, {"score": 0.004156053024946526, "phrase": "feige"}, {"score": 0.003927203683176278, "phrase": "two-stage_planning_problems"}, {"score": 0.003636030901063731, "phrase": "robust_k-steiner_tree_problem"}, {"score": 0.003268619794473257, "phrase": "total_cost"}, {"score": 0.003246466092301221, "phrase": "worst-case_scenario"}, {"score": 0.003159337923955675, "phrase": "exponentially_many_scenarios"}, {"score": 0.0030124355359328206, "phrase": "k_terminal-pairs"}, {"score": 0.0029920129598858545, "phrase": "k-steiner_forest"}, {"score": 0.002944895504859249, "phrase": "k_clients"}, {"score": 0.0029249294679606656, "phrase": "facility_location"}, {"score": 0.0027449684441263234, "phrase": "lp-based_general_framework"}, {"score": 0.0026411384812121503, "phrase": "network_design_problems"}, {"score": 0.0026113524778702602, "phrase": "later_elaboration"}, {"score": 0.002558579472926165, "phrase": "robust_facility_location_problem"}, {"score": 0.0025068702807711915, "phrase": "first_constant-factor_approximation_algorithms"}, {"score": 0.002489866586003267, "phrase": "robust_k-steiner_tree"}, {"score": 0.0024395426929046415, "phrase": "robust_uncapacitated_facility_location_problems"}, {"score": 0.002374019033880878, "phrase": "optimum_cost"}, {"score": 0.0023366107810157467, "phrase": "robust_k-steiner_forest_problem"}, {"score": 0.0023102511985741117, "phrase": "uniform_multiplicative_increase_factor"}, {"score": 0.002238012143899288, "phrase": "constant_approximation"}, {"score": 0.002202742267484358, "phrase": "robust_min-cut_problem"}, {"score": 0.0021828376285310614, "phrase": "singleton-set_scenarios"}, {"score": 0.0021582090265155783, "phrase": "open_question"}], "paper_keywords": ["Approximation algorithms", " Hardness of approximation", " Robust network design", " Robust Steiner tree", " Robust Steiner forest", " Robust facility location"], "paper_abstract": "We study two-stage robust variants of combinatorial optimization problems on undirected graphs, like Steiner tree, Steiner forest, and uncapacitated facility location. Robust optimization problems, previously studied by Dhamdhere et al. (Proc. of 46th Annual IEEE Symposium on Foundations of Computer Science (FOCS'05), pp. 367-378, 2005), Golovin et al. (Proc. of the 23rd Annual Symposium on Theoretical Aspects of Computer Science (STACS), 2006), and Feige et al. (Proc. of the 12th International Integer Programming and Combinatorial Optimization Conference, pp. 439-453, 2007), are two-stage planning problems in which the requirements are revealed after some decisions are taken in Stage 1. One has to then complete the solution, at a higher cost, to meet the given requirements. In the robust k-Steiner tree problem, for example, one buys some edges in Stage 1. Then k terminals are revealed in Stage 2 and one has to buy more edges, at a higher cost, to complete the Stage 1 solution to build a Steiner tree on these terminals. The objective is to minimize the total cost under the worst-case scenario. In this paper, we focus on the case of exponentially many scenarios given implicitly. A scenario consists of any subset of k terminals (for k-Steiner tree), or any subset of k terminal-pairs (for k-Steiner forest), or any subset of k clients (for facility location). Feige et al. (Proc. of the 12th International Integer Programming and Combinatorial Optimization Conference, pp. 439-453, 2007) give an LP-based general framework for approximation algorithms for a class of two stage robust problems. Their framework cannot be used for network design problems like k-Steiner tree (see later elaboration). Their framework can be used for the robust facility location problem, but gives only a logarithmic approximation. We present the first constant-factor approximation algorithms for the robust k-Steiner tree (with exponential number of scenarios) and robust uncapacitated facility location problems. Our algorithms are combinatorial and are based on guessing the optimum cost and clustering to aggregate nearby vertices. For the robust k-Steiner forest problem on trees and with uniform multiplicative increase factor for Stage 2 (also known as inflation), we present a constant approximation. We show APX-hardness of the robust min-cut problem (even with singleton-set scenarios), resolving an open question of (Dhamdhere et al. in Proc. of 46th Annual IEEE Symposium on Foundations of Computer Science (FOCS'05), pp. 367-378, 2005) and (Golovin et al. in Proc. of the 23rd Annual Symposium on Theoretical Aspects of Computer Science (STACS), 2006).", "paper_title": "Two-stage Robust Network Design with Exponential Scenarios", "paper_id": "WOS:000313649000007"}