{"auto_keywords": [{"score": 0.01343481349375567, "phrase": "idle_time_distribution"}, {"score": 0.00481495049065317, "phrase": "execution_unit_leakage_power"}, {"score": 0.004597244847332915, "phrase": "low-overhead_power_optimization_techniques"}, {"score": 0.004418456827500267, "phrase": "embedded_processors"}, {"score": 0.004303127794432684, "phrase": "previous_work"}, {"score": 0.004054479957160662, "phrase": "different_execution_units"}, {"score": 0.0033025823350563087, "phrase": "idle_time_period"}, {"score": 0.0027256122357680393, "phrase": "gated_execution_unit"}, {"score": 0.0025678829712650437, "phrase": "early_and_less_costly_reactivation"}, {"score": 0.002387415084371473, "phrase": "representative_subset"}, {"score": 0.0023559890904375526, "phrase": "mibench_benchmarks"}, {"score": 0.0022049428043454966, "phrase": "intels_xscale_processor"}, {"score": 0.0021049977753042253, "phrase": "leakage_power"}], "paper_keywords": [""], "paper_abstract": "We introduce low-overhead power optimization techniques to reduce leakage power in embedded processors. Our techniques improve previous work by a) taking into account idle time distribution for different execution units, and b) using instruction decode and control dependencies to wakeup the gated (but needed) units as soon as possible. We take into account idle time distribution per execution unit to detect an idle time period as soon as possible. This in turn results in increasing our leakage power savings. In addition, we use information already available in the processor to predict when a gated execution unit will be needed again. This results in early and less costly reactivation of gated execution units. We evaluate our techniques for a representative subset of MiBench benchmarks and for a processor using a configuration similar to Intels Xscale processor. We show that our techniques reduce leakage power considerably while maintaining performance.", "paper_title": "Reducing execution unit leakage power in embedded processors", "paper_id": "WOS:000239423500031"}