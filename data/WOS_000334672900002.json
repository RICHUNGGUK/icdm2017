{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stream_programs"}, {"score": 0.009318290873932565, "phrase": "scheduling_scheme"}, {"score": 0.00818069467012975, "phrase": "homogeneous_multiple_threads"}, {"score": 0.006076439387344466, "phrase": "proposed_technique"}, {"score": 0.004764859786310636, "phrase": "clustered_vliw_stream_architectures"}, {"score": 0.004569630374630379, "phrase": "mainstream_solution"}, {"score": 0.004522080178250592, "phrase": "computation-intensive_applications"}, {"score": 0.004314127287770832, "phrase": "multithreading_technique"}, {"score": 0.004137288854115515, "phrase": "clustered_vliw_stream_architecture"}, {"score": 0.004030449969901066, "phrase": "optimal_arithmetic_unit_utilization"}, {"score": 0.00396767023935381, "phrase": "energy_consumption"}, {"score": 0.0032689949867583633, "phrase": "homogeneous_multithreaded_stream_programs"}, {"score": 0.0031845067058084583, "phrase": "efficient_kernel_combination"}, {"score": 0.003118486096035156, "phrase": "stream_segmentation"}, {"score": 0.0030220049006970317, "phrase": "memory_transfers"}, {"score": 0.0029905104479072482, "phrase": "startup_overheads"}, {"score": 0.002721388234661538, "phrase": "experimental_results"}, {"score": 0.002637160140011997, "phrase": "kernel-level_software_pipeline"}], "paper_keywords": ["Stream architecture", " stream program", " scheduling scheme", " homogeneous multiple threads", " arithmetic unit utilization"], "paper_abstract": "Stream architectures have emerged as a mainstream solution for computation-intensive applications due to their rich arithmetic units. This paper proposes a multithreading technique based on a scheduling scheme of stream programs on clustered VLIW stream architecture, which aims at optimal arithmetic unit utilization without increasing energy consumption. Its principle is to exploit more kernel-level parallelism for further optimal compilation by constructing homogeneous multiple threads on stream programs. Three phases are proposed in the scheduling scheme. First, threads in stream programs are replicated for constructing homogeneous multiple threads. Second, time step assignment for homogeneous multithreaded stream programs is utilized to obtain efficient kernel combination. Third, stream segmentation is presented to optimize both memory transfers and startup overheads of kernels. A set of benchmarks are exploited to evaluate the effectiveness of the proposed technique. Experimental results show that, with exploiting kernel-level software pipeline, the proposed technique improves the performance by 20.9 percent averagely with the energy decreasing by 7.6 percent. Utilizations of adders and multipliers are up to average 77.4 and 75.8 percent, increasing 17.0 and 13.3 percent, respectively. Moreover, the proposed technique performs an average of 12.5 percent improvement over CSMT4 with the energy decreasing by 12.0 percent.", "paper_title": "A High-Utilization Scheduling Scheme of Stream Programs on Clustered VLIW Stream Architectures", "paper_id": "WOS:000334672900002"}