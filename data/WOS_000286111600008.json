{"auto_keywords": [{"score": 0.04318158275943853, "phrase": "optimization_process"}, {"score": 0.015087428827687857, "phrase": "cutting_contour"}, {"score": 0.008600700803105554, "phrase": "sensitive_metrics"}, {"score": 0.00481495049065317, "phrase": "interactive_mesh_cutting_using_constrained_random_walks"}, {"score": 0.0045158206186680224, "phrase": "existing_mesh"}, {"score": 0.004398094237005956, "phrase": "constrained_random_walks_algorithm_that_can_add_constraints_to_the_random_walks_procedure"}, {"score": 0.004062937864702115, "phrase": "shortest_graph_path"}, {"score": 0.004002044115117644, "phrase": "nice_cut_contour"}, {"score": 0.003942059405218598, "phrase": "new_mesh"}, {"score": 0.003927203683176278, "phrase": "cutting_algorithm"}, {"score": 0.0038392331564122387, "phrase": "constrained_random"}, {"score": 0.0036830211726031946, "phrase": "new_algorithm"}, {"score": 0.003641528016135388, "phrase": "novel_user_interface"}, {"score": 0.003614124997453808, "phrase": "interactive_mesh_cutting"}, {"score": 0.003546513036085932, "phrase": "also_their_combinations"}, {"score": 0.002572158343938064, "phrase": "surface_geometric_properties"}, {"score": 0.002552781867125423, "phrase": "cognitive_theory"}, {"score": 0.002495521662819317, "phrase": "constrained_random_walks_algorithm"}, {"score": 0.0023758152068732025, "phrase": "user_inputs"}, {"score": 0.002253299769886694, "phrase": "experimental_examples"}, {"score": 0.0022194677375148063, "phrase": "proposed_cutting_method"}, {"score": 0.002137088643982437, "phrase": "good_results"}, {"score": 0.002120982646893519, "phrase": "user_intention"}, {"score": 0.0021049977753042253, "phrase": "geometric_attributes"}], "paper_keywords": ["Computational geometry and object modeling", " interaction techniques", " geometric algorithms"], "paper_abstract": "This paper considers the problem of interactively finding the cutting contour to extract components from an existing mesh. First, we propose a constrained random walks algorithm that can add constraints to the random walks procedure and thus allows for a variety of intuitive user inputs. Second, we design an optimization process that uses the shortest graph path to derive a nice cut contour. Then a new mesh cutting algorithm is developed based on the constrained random walks plus the optimization process. Within the same computational framework, the new algorithm provides a novel user interface for interactive mesh cutting that supports three typical user inputs and also their combinations: 1) foreground/background seed inputs: the user draws strokes specifying seeds for \"foreground\" (i.e., the part to be cut out) and \"background\" (i.e., the rest); 2) soft constraint inputs: the user draws strokes on the mesh indicating the region which the cuts should be made nearby; and 3) hard constraint inputs: the marks which the cutting contour must pass. The algorithm uses feature sensitive metrics that are based on surface geometric properties and cognitive theory. The integration of the constrained random walks algorithm, the optimization process, the feature sensitive metrics, and the varieties of user inputs makes the algorithm intuitive, flexible, and effective as well. The experimental examples show that the proposed cutting method is fast, reliable, and capable of producing good results reflecting user intention and geometric attributes.", "paper_title": "Interactive Mesh Cutting Using Constrained Random Walks", "paper_id": "WOS:000286111600008"}