{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "programmable_vertex_processing_unit"}, {"score": 0.0045324756541157574, "phrase": "vertex_processing_unit"}, {"score": 0.003975781274672803, "phrase": "graphics_pipeline"}, {"score": 0.00363080961099728, "phrase": "procedural_vertex_animation"}, {"score": 0.003282383509542342, "phrase": "fixed_vertex_processing"}, {"score": 0.0029973957125353306, "phrase": "programmable_graphics_hardware"}, {"score": 0.002907992115184249, "phrase": "embedded_systems"}, {"score": 0.002821247621250663, "phrase": "mobile_phones"}, {"score": 0.0022365262201954643, "phrase": "instruction_format"}, {"score": 0.0021479597698614373, "phrase": "test_results"}], "paper_keywords": [""], "paper_abstract": "Programmable vertex processing unit increases the programmability and enables customizations of transformation and lighting in the graphics pipeline. Furthermore, it offers various effects such as procedural vertex animation and deformation, which were impossible to handle in fixed vertex processing. Since it is hard to find a programmable graphics hardware for the embedded systems such as mobile phones, we've designed and implemented a programmable vertex processing unit based on the OpenGL ES 2.0 specification. In this paper, we explain the architecture, instruction format, implementation and test results of our vertex processing unit.", "paper_title": "Design of a programmable vertex processing unit for mobile platforms", "paper_id": "WOS:000240081000081"}