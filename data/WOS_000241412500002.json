{"auto_keywords": [{"score": 0.030735314503319976, "phrase": "avd_prediction"}, {"score": 0.021494953428724626, "phrase": "long-latency_cache"}, {"score": 0.010466486506179437, "phrase": "runahead_execution"}, {"score": 0.00481495049065317, "phrase": "dependent_cache_misses"}, {"score": 0.0046394362688524475, "phrase": "independent_long-latency_cache"}, {"score": 0.004208427318712072, "phrase": "novel_hardware_technique"}, {"score": 0.004169519409162853, "phrase": "address-value_delta"}, {"score": 0.004036141321779216, "phrase": "avd_predictor"}, {"score": 0.0037820003983334476, "phrase": "arithmetic_difference"}, {"score": 0.003644001325962353, "phrase": "effective_address"}, {"score": 0.003593555152077465, "phrase": "data_value"}, {"score": 0.0032898346872897383, "phrase": "stable_delta"}, {"score": 0.003140401552000472, "phrase": "dependent_instructions"}, {"score": 0.003096905353118796, "phrase": "load_instructions"}, {"score": 0.002795762692061496, "phrase": "implementable_avd_predictor"}, {"score": 0.002731500545019039, "phrase": "simple_hardware_and_software_optimizations"}, {"score": 0.0025355968118803956, "phrase": "runahead_efficiency_techniques"}, {"score": 0.002278284823857861, "phrase": "runahead_processor"}, {"score": 0.0022155569675462333, "phrase": "average_execution_time"}, {"score": 0.002164602220179823, "phrase": "pointer-intensive_applications"}, {"score": 0.0021049977753042253, "phrase": "benchmark_health"}], "paper_keywords": ["single data stream architectures", " runahead execution", " value prediction", " memory-level parallelism"], "paper_abstract": "While runahead execution is effective at parallelizing independent long-latency cache misses, it is unable to parallelize dependent long-latency cache misses. To overcome this limitation, this paper proposes a novel hardware technique, address-value delta (AVD) prediction. An AVD predictor keeps track of the address ( pointer) load instructions for which the arithmetic difference (i.e., delta) between the effective address and the data value is stable. If such a load instruction incurs a long-latency cache miss during runahead execution, its data value is predicted by subtracting the stable delta from its effective address. This prediction enables the preexecution of dependent instructions, including load instructions that incur long-latency cache misses. We analyze why and for what kind of loads AVD prediction works and describe the design of an implementable AVD predictor. We also describe simple hardware and software optimizations that can significantly improve the benefits of AVD prediction and analyze the interaction of AVD prediction with runahead efficiency techniques and stream-based data prefetching. Our analysis shows that AVD prediction is complementary to these techniques. Our results show that augmenting a runahead processor with a simple, 16-entry AVD predictor improves the average execution time of a set of pointer-intensive applications by 14.3 percent (7.5 percent excluding benchmark health).", "paper_title": "Address-value delta (AVD) prediction: A hardware technique for efficiently parallelizing dependent cache misses", "paper_id": "WOS:000241412500002"}