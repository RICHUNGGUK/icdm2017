{"auto_keywords": [{"score": 0.049027569260597106, "phrase": "link_failure"}, {"score": 0.04351879568458235, "phrase": "failed_link"}, {"score": 0.03125795476937915, "phrase": "flow_entries"}, {"score": 0.03058924875342611, "phrase": "configuration_messages"}, {"score": 0.00481495049065317, "phrase": "openflow-based_networks"}, {"score": 0.004484596684703308, "phrase": "minimal_packet_loss"}, {"score": 0.0038728151007982378, "phrase": "new_route"}, {"score": 0.003737485125097945, "phrase": "well-known_segment_protection_schemes"}, {"score": 0.0035908627899097407, "phrase": "link_recovery_time"}, {"score": 0.0034963129868796033, "phrase": "precalculated_protection_paths"}, {"score": 0.003329368827624161, "phrase": "primary_path"}, {"score": 0.0032852337992126564, "phrase": "path_configuration"}, {"score": 0.0031006232333900055, "phrase": "fast_rerouting"}, {"score": 0.0030595112110658675, "phrase": "openflow-based_network"}, {"score": 0.0030189426536422577, "phrase": "new_design"}, {"score": 0.0028492532869274743, "phrase": "network_rerouting"}, {"score": 0.002761856557698856, "phrase": "memory_size"}, {"score": 0.0026771333996253783, "phrase": "cpu_load"}, {"score": 0.0023113506171584157, "phrase": "existing_openflow-based_segment_protection_design"}, {"score": 0.0022404162042797262, "phrase": "proposed_design"}, {"score": 0.00221068461235127, "phrase": "paneuropean_network"}], "paper_keywords": ["Mininet", " Network protection", " OpenFlow", " Routing", " Software-defined network"], "paper_abstract": "Network protection against link failure is required to allow packets to reach the destination with minimal packet loss when a failure occurs. When a link fails, traffic that attempts to use the failed link is interrupted. Typically, routers in the network discover the failure and find a new route to bypass the failed link. Alternatively, well-known segment protection schemes can also be used to speed up the link recovery time by rerouting packets locally through precalculated protection paths. However, several backup paths have to be prepared for each primary path, making path configuration rather complex and poorly scalable. This paper proposes a design for fast rerouting in an OpenFlow-based network. This new design reduces the number of flow entries and the number of configuration messages needed for network rerouting, which in turn reduces the memory size needed in each switch and the CPU load at the controller. We show empirically and using simulations that our design can reduce the number of flow entries and configuration messages needed by about 60% and 75%, respectively, when compared with an existing OpenFlow-based segment protection design. Furthermore, we implement the proposed design on a panEuropean network and show that our design can recover from a link failure in as little as 25 ms.", "paper_title": "Independent Transient Plane Design for Protection in OpenFlow-Based Networks", "paper_id": "WOS:000353570100007"}