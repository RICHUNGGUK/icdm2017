{"auto_keywords": [{"score": 0.04757820278080473, "phrase": "lll_algorithm"}, {"score": 0.010612387000973441, "phrase": "ideal_lattices"}, {"score": 0.009797031909967654, "phrase": "lenstra"}, {"score": 0.004625255533545965, "phrase": "gentry-halevi's_fhe_scheme"}, {"score": 0.004364324410919477, "phrase": "lovasz"}, {"score": 0.004027031316965272, "phrase": "first_variant"}, {"score": 0.0036335821512795026, "phrase": "lll_procedures"}, {"score": 0.003601235776892337, "phrase": "previously_reduced_vectors"}, {"score": 0.003011328068286321, "phrase": "heuristic_approach"}, {"score": 0.002957919048133256, "phrase": "re-use_method"}, {"score": 0.002716844480081738, "phrase": "typical_scenarios"}, {"score": 0.00269263690712392, "phrase": "lattice_dimension"}, {"score": 0.0025518429503461736, "phrase": "gentry-halevi's_fully_homomorphic_challenges"}, {"score": 0.0024620842899061614, "phrase": "toy_challenge"}, {"score": 0.002354302193867031, "phrase": "classical_lll_algorithm"}, {"score": 0.0021334650920198715, "phrase": "small_challenges"}, {"score": 0.0021049977753042253, "phrase": "previous_best_prediction"}], "paper_keywords": ["Lattice theory", " Lattice reduction", " LLL", " Ideal lattice", " Fully homomorphic encryption"], "paper_abstract": "The LLL algorithm, named after its inventors, Lenstra, Lenstra and Lovasz, is one of the most popular lattice reduction algorithms in the literature. In this paper, we propose the first variant of LLL algorithm that is dedicated for ideal lattices, namely, the iLLL algorithm. Our iLLL algorithm takes advantage of the fact that within LLL procedures, previously reduced vectors can be re-used for further reductions. Using this method, we prove that the iLLL is at least as fast as the LLL algorithm, and it outputs a basis with the same quality. We also provide a heuristic approach that accelerates the re-use method. As a result, in practice, our algorithm can be approximately eight times faster than LLL algorithm for typical scenarios where lattice dimension is between 100 and 150. When applying our algorithm to the Gentry-Halevi's fully homomorphic challenges, we are able to solve the toy challenge within 24 days using a 2.66 GHz CPU, while with the classical LLL algorithm, it takes 32 days. Further, assuming a 4.0 GHz CPU, we predict to reduce the basis in 15.7 years for the small challenges, while previous best prediction was 45 years.", "paper_title": "LLL for ideal lattices: re-evaluation of the security of Gentry-Halevi's FHE scheme", "paper_id": "WOS:000356360000011"}