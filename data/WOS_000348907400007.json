{"auto_keywords": [{"score": 0.048609175050806475, "phrase": "rubah"}, {"score": 0.00481495049065317, "phrase": "stock_jvm."}, {"score": 0.0043511430556231485, "phrase": "java"}, {"score": 0.0038404642251010797, "phrase": "standard_jvm"}, {"score": 0.003389704997952315, "phrase": "nearly_arbitrary_changes"}, {"score": 0.002968424524565369, "phrase": "program_state"}, {"score": 0.0029224275921964724, "phrase": "multiple_threads"}, {"score": 0.0028325548627901004, "phrase": "novel_lazy_algorithm"}, {"score": 0.002422890839801611, "phrase": "five_long-running_applications"}, {"score": 0.002293939949544648, "phrase": "voldemort"}], "paper_keywords": ["Dynamic Software Updating", " Java", " JVM"], "paper_abstract": "This paper presents Rubah, the first dynamic software updating system for Java that: is portable, implemented via libraries and bytecode rewriting on top of a standard JVM; is efficient, imposing essentially no overhead on normal, steady-state execution; is flexible, allowing nearly arbitrary changes to classes between updates; and is non-disruptive, employing either a novel eager algorithm that transforms the program state with multiple threads, or a novel lazy algorithm that transforms objects as they are demanded, post-update. Requiring little programmer effort, Rubah has been used to dynamically update five long-running applications: the H2 database, the Voldemort key-value store, the Jake2 implementation of the Quake 2 shooter game, the CrossFTP server, and the JavaEmailServer.", "paper_title": "Rubah: DSU for Java on a Stock JVM", "paper_id": "WOS:000348907400007"}