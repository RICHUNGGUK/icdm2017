{"auto_keywords": [{"score": 0.0044695432851061525, "phrase": "directed_graph"}, {"score": 0.0038224221344037236, "phrase": "final_configuration"}, {"score": 0.0024620842899061614, "phrase": "solitary_pebbles"}, {"score": 0.002354302193867031, "phrase": "nontrivial_generalization"}, {"score": 0.0023021895404322767, "phrase": "nonbipartite_matching_problem"}, {"score": 0.0021687806803474367, "phrase": "augmenting_paths_technique"}, {"score": 0.0021049977753042253, "phrase": "matching_problems"}], "paper_keywords": ["Algorithms", " Theory", " 2-gatherings", " nonbipartite matchings", " augmenting paths"], "paper_abstract": "Pebbles are placed on some vertices of a directed graph. Is it possible to move each pebble along at most one edge of the graph so that in the final configuration no pebble is left on its own? We give an O(mn)-time algorithm for solving this problem, which we call the 2-gathering problem, where n is the number of vertices and m is the number of edges of the graph. If such a 2-gathering is not possible, the algorithm finds a solution that minimizes the number of solitary pebbles. The 2-gathering problem forms a nontrivial generalization of the nonbipartite matching problem and it is solved by extending the augmenting paths technique used to solve matching problems.", "paper_title": "Efficient Algorithms for the 2-Gathering Problem", "paper_id": "WOS:000276389400011"}