{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "software_requirements"}, {"score": 0.04955111375780364, "phrase": "requirements_catalog"}, {"score": 0.02644783113712884, "phrase": "proposed_model"}, {"score": 0.004580550308652044, "phrase": "higher_quality"}, {"score": 0.004530023871441992, "phrase": "software_products"}, {"score": 0.004455272634364756, "phrase": "increased_complexity"}, {"score": 0.004076858589744185, "phrase": "key_elements"}, {"score": 0.0039433581938239926, "phrase": "software_companies"}, {"score": 0.0037721073763702486, "phrase": "software_industry"}, {"score": 0.003451517638449501, "phrase": "effective_way"}, {"score": 0.0033945024593626675, "phrase": "software_quality"}, {"score": 0.002857605453835429, "phrase": "requirements_reuse_process"}, {"score": 0.002614534850703364, "phrase": "commercial_tool"}, {"score": 0.0026000466400112974, "phrase": "computer-aided_requirements_engineering_rational_requisitepro"}, {"score": 0.0025287979714720423, "phrase": "feasible_the_implementation"}, {"score": 0.0023920904611571783, "phrase": "tool_plug-in"}, {"score": 0.00230080652063411, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["requirements engineering", " requirements reuse process", " traceability", " software tool integration", " software enterprises"], "paper_abstract": "Nowadays, the demand for higher quality in software products causes the increased complexity of these products. These two aspects (quality and complexity) combined with productivity are key elements for improving the competitiveness between software companies and differentiating success from failure in the software industry. In this sense, software reuse, and requirements reuse in particular, has been widely recognized as an effective way to improve software quality and productivity. In this paper, we propose a model to reuse the software requirements in a Requirements Catalog. This research aims to define the guidelines to carry out the requirements reuse process through four principal activities: searching, selecting, adapting, and implementing. Also, the commercial tool Computer-Aided Requirements Engineering Rational RequisitePro was tailored to make feasible the implementation of the proposed model; in this sense, a tool plug-in was developed. Finally, a case study is presented to demonstrate the feasibility of the proposed model. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "A proposed model for reuse of software requirements in requirements catalog", "paper_id": "WOS:000348506500001"}