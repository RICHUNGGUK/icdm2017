{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "deep_metamodelling"}, {"score": 0.004406994912939125, "phrase": "model-driven_engineering"}, {"score": 0.004236908273106904, "phrase": "language_engineering"}, {"score": 0.003728000957725218, "phrase": "two-metalevel_approach"}, {"score": 0.002640781900605126, "phrase": "fundamental_concepts"}, {"score": 0.0025638362414466278, "phrase": "deep_characterisation"}, {"score": 0.002464709648714996, "phrase": "linguistic_extension"}, {"score": 0.002255431275670053, "phrase": "diagram_predicate_framework"}, {"score": 0.0021049977753042253, "phrase": "metadepth_tool"}], "paper_keywords": ["Model-driven engineering", " Multi-level metamodelling", " Deep metamodelling", " Deep characterisation", " Potency", " Double linguistic/ontological typing", " Linguistic extension", " Category theory", " Graph transformation", " Diagram predicate framework", " METADEPTH"], "paper_abstract": "Metamodelling is one of the pillars of model-driven engineering, used for language engineering and domain modelling. Even though metamodelling is traditionally based on a two-metalevel approach, several researchers have pointed out limitations of this solution and proposed an alternative deep (also called multi-level) approach to obtain simpler system specifications. However, this approach currently lacks a formalisation that can be used to explain fundamental concepts such as deep characterisation, double linguistic/ontological typing and linguistic extension. This paper provides such a formalisation based on the Diagram Predicate Framework, and discusses its practical realisation in the metaDepth tool.", "paper_title": "A formalisation of deep metamodelling", "paper_id": "WOS:000343878400002"}