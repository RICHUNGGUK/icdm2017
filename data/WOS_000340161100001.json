{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "vigilagent"}, {"score": 0.00444377150105556, "phrase": "agent-oriented_monitoring_applications"}, {"score": 0.004234884779773412, "phrase": "key_abstraction_elements"}, {"score": 0.004134137523409649, "phrase": "involved_models"}, {"score": 0.003665107680519599, "phrase": "prometheus"}, {"score": 0.003606711217432998, "phrase": "ingenias"}, {"score": 0.0035208552733545463, "phrase": "modelling_tasks"}, {"score": 0.003437036036889996, "phrase": "icaro_framework"}, {"score": 0.0033822643082593285, "phrase": "implementation_purposes"}, {"score": 0.003071429173571846, "phrase": "development_process"}, {"score": 0.0029504765287722465, "phrase": "model_transformation_techniques"}, {"score": 0.0028342734482926677, "phrase": "key_aspects"}, {"score": 0.0027667539384678814, "phrase": "model-driven_development_approach"}, {"score": 0.0027008385562908425, "phrase": "model-to-model_transformation"}, {"score": 0.0025326211341475903, "phrase": "prometheus_and_ingenias_methodologies"}, {"score": 0.0023558375480288297, "phrase": "text_transformation"}, {"score": 0.0022630008787375435, "phrase": "icaro_code"}, {"score": 0.0022090603669919187, "phrase": "ingenias_model"}, {"score": 0.002156402793481102, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "access_control"}], "paper_keywords": ["agent-oriented software methodologies", " model-driven development", " model-to-model transformations", " model-to-text ransformations"], "paper_abstract": "VigilAgent is a methodology for the development of agent-oriented monitoring applications that uses agents as the key abstraction elements of the involved models. It has not been developed from scratch, but it reuses fragments from Prometheus and INGENIAS methodologies for modelling tasks and the ICARO framework for implementation purposes. As VigilAgent intends to automate as much as possible the development process, it exploits. Model transformation techniques are one of the key aspects of the model-driven development approach. A model-to-model transformation is used to facilitate the interoperability between Prometheus and INGENIAS methodologies. Also, a model-to-text transformation is performed to generate ICARO code from the INGENIAS model. A case study based on access control is used to illustrate the fundamentals of the model-to-model and model-to-text transformations implemented in VigilAgent.", "paper_title": "Model-to-model and model-to-text: looking for the automation of VigilAgent", "paper_id": "WOS:000340161100001"}