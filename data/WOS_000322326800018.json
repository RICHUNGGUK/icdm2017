{"auto_keywords": [{"score": 0.04898285994723956, "phrase": "cell_processor"}, {"score": 0.015719716506582538, "phrase": "fast_multipole_method"}, {"score": 0.004491678520807451, "phrase": "first_deployment"}, {"score": 0.0039694170761766226, "phrase": "matrix_formulation"}, {"score": 0.0039085400187964196, "phrase": "blas_routines"}, {"score": 0.0038189638340666936, "phrase": "fmb_code"}, {"score": 0.0033228699494959172, "phrase": "far_field"}, {"score": 0.003246672441842787, "phrase": "field_computations"}, {"score": 0.00317221667574882, "phrase": "cell_heterogeneous_cores"}, {"score": 0.0027175263159330523, "phrase": "single_and_double_precisions"}, {"score": 0.0024385083712241988, "phrase": "uniform_and_non-uniform_distributions"}, {"score": 0.0022394839933089074, "phrase": "multicore_cpus"}], "paper_keywords": ["Fast multipole method", " Cell processor", " N-body problem", " complex matrix multiplication", " BLAS routines"], "paper_abstract": "This paper presents the first deployment of the Fast Multipole Method on the Cell processor (PowerXCell 8i). We rely on the matrix formulation with BLAS routines of the FMB code (Fast Multipole with BLAS) in order to directly and efficiently offload the most time consuming operators of both far field and near field computations on the Cell heterogeneous cores. We detail the difficulties that had to be solved first, and we finally obtain a deployment in single and double precisions, which scales linearly on several Cell blades and which is able to handle both uniform and non-uniform distributions of particles. We also present our performance results and comparisons with multicore CPUs, as well as the limitations of our deployment on the Cell processor.", "paper_title": "An (almost) direct deployment of the Fast Multipole Method on the Cell processor", "paper_id": "WOS:000322326800018"}