{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "performance-aware_parallel_components"}, {"score": 0.004403480614319231, "phrase": "novel_framework"}, {"score": 0.004306205029641728, "phrase": "performance-aware_composition"}, {"score": 0.004211069233133584, "phrase": "sequential_and_explicitly_parallel_software_components"}, {"score": 0.0037658881407605445, "phrase": "table-driven_implementation"}, {"score": 0.003561205990687285, "phrase": "parallel_call"}, {"score": 0.0034437574674180365, "phrase": "performance-aware_component"}, {"score": 0.003256526411907174, "phrase": "expected_best_implementation_variant"}, {"score": 0.002977835845437357, "phrase": "current_problem"}, {"score": 0.002722930209707764, "phrase": "dispatch_tables"}, {"score": 0.0025461386232786356, "phrase": "component_deployment_time"}, {"score": 0.0024620842899061614, "phrase": "interleaved_dynamic_programming_algorithm"}, {"score": 0.0024075916292945715, "phrase": "time-prediction_meta-code"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software component", " software composition", " parallel computing", " auto-tuning", " program optimization"], "paper_abstract": "We describe the principles of a novel framework for performance-aware composition of sequential and explicitly parallel software components with implementation variants. Automatic composition results in a table-driven implementation that, for each parallel call of a performance-aware component, looks up the expected best implementation variant, processor allocation and schedule given the current problem, and processor group sizes. The dispatch tables are computed off-line at component deployment time by an interleaved dynamic programming algorithm from time-prediction meta-code provided by the component supplier. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Optimized composition of performance-aware parallel components", "paper_id": "WOS:000300977700004"}