{"auto_keywords": [{"score": 0.04946189595812947, "phrase": "natural_language_queries"}, {"score": 0.015386993309409408, "phrase": "fuzzy_semantics"}, {"score": 0.00481495049065317, "phrase": "uml_concepts"}, {"score": 0.004671342094877447, "phrase": "sql._database_applications"}, {"score": 0.0043213410601860985, "phrase": "naive_users"}, {"score": 0.004156259296367594, "phrase": "formal_query_languages"}, {"score": 0.003980191398041843, "phrase": "natural_language_constructs"}, {"score": 0.003911862375084159, "phrase": "popular_interface"}, {"score": 0.0037786899855446, "phrase": "object-oriented_modeling"}, {"score": 0.0037299231609021783, "phrase": "real_world"}, {"score": 0.0035564156572789473, "phrase": "logical_form"}, {"score": 0.0034953361767153285, "phrase": "class_diagram"}, {"score": 0.003465208385481699, "phrase": "uml"}, {"score": 0.0033762956164519286, "phrase": "static_relationships"}, {"score": 0.0031502008922533894, "phrase": "uml_class_diagram_representations"}, {"score": 0.003003579442221871, "phrase": "conceptual_schema"}, {"score": 0.0029647862293448895, "phrase": "class_diagram_representation"}, {"score": 0.002802373595203129, "phrase": "corresponding_class_diagram"}, {"score": 0.002766171878646582, "phrase": "structured_object_model"}, {"score": 0.0026488343783448273, "phrase": "sql_statements"}, {"score": 0.0026259694526633037, "phrase": "query_executions"}, {"score": 0.002525489173110693, "phrase": "vague_terms"}, {"score": 0.0024928553725344933, "phrase": "fuzzy_modifiers"}, {"score": 0.0022857899334246946, "phrase": "corresponding_degree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["natural language query", " UML", " class", " diagram", " object-oriented modeling", " fuzzy set theory"], "paper_abstract": "Database applications tend toward getting more versatile and broader to comply with the expansion of various organizations. However, naive users usually suffer from accessing data arbitrarily by using formal query languages. Therefore, we believe that accessing databases using natural language constructs will become a popular interface in the future. The concept of object-oriented modeling makes the real world to be well represented or expressed in some kinds of logical form. Since the class diagram in UML is used to model the static relationships of databases, in this paper, we intend to study how to extend the UML class diagram representations to capture natural language queries with fuzzy semantics. By referring to the conceptual schema throughout the class diagram representation, we propose a methodology to map natural language constructs into the corresponding class diagram and employ Structured Object Model (SOM) methodology to transform the natural language queries into SQL statements for query executions. Moreover, our approach can handle queries containing vague terms specified in fuzzy modifiers, like 'good' or 'bad'. By our approach, users obtain not only the query answers but also the corresponding degree of vagueness, which can be regarded as the same way we are thinking. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Extending the UML concepts to transform natural language queries with fuzzy semantics into SQL", "paper_id": "WOS:000239751500012"}