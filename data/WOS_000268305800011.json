{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_architecture_reconstruction"}, {"score": 0.004384960761826366, "phrase": "large_applications"}, {"score": 0.004055998173160551, "phrase": "first_problem"}, {"score": 0.0035245918797629804, "phrase": "second_problem"}, {"score": 0.003443031148055198, "phrase": "successful_applications"}, {"score": 0.0028771413440398614, "phrase": "important_aid"}, {"score": 0.002619748321217153, "phrase": "architecture_reconstruction"}, {"score": 0.002519402443228795, "phrase": "comprehensive_software_architecture_reconstruction_state"}, {"score": 0.0021049977753042253, "phrase": "software_architecture_reconstruction_approaches"}], "paper_keywords": ["Software architecture reconstruction"], "paper_abstract": "To maintain and understand large applications, it is important to know their architecture. The first problem is that unlike classes and packages, architecture is not explicitly represented in the code. The second problem is that successful applications evolve over time, so their architecture inevitably drifts. Reconstructing the architecture and checking whether it is still valid is therefore an important aid. While there is a plethora of approaches and techniques supporting architecture reconstruction, there is no comprehensive software architecture reconstruction state of the art and it is often difficult to compare the approaches. This paper presents a state of the art in software architecture reconstruction approaches.", "paper_title": "Software Architecture Reconstruction: A Process-Oriented Taxonomy", "paper_id": "WOS:000268305800011"}