{"auto_keywords": [{"score": 0.04126630752096143, "phrase": "energy_usage"}, {"score": 0.04027505327775881, "phrase": "static_pipelining"}, {"score": 0.00481495049065317, "phrase": "processor_efficiency"}, {"score": 0.004754600386388821, "phrase": "statically_pipelining_instructions"}, {"score": 0.004665483918844599, "phrase": "new_generation"}, {"score": 0.004549242970806199, "phrase": "reduced_power_consumption"}, {"score": 0.0044079880067019765, "phrase": "instruction_pipelining"}, {"score": 0.004244234872662471, "phrase": "application_performance_requirements"}, {"score": 0.0041384457437123635, "phrase": "implementation_aspects"}, {"score": 0.003764603272900618, "phrase": "new_instruction"}, {"score": 0.0034028574973016933, "phrase": "pipeline_structure"}, {"score": 0.0032148229832850215, "phrase": "hardware_pipeline_requirements"}, {"score": 0.0029427043216782604, "phrase": "code_generation"}, {"score": 0.0025933275734892508, "phrase": "performance_and_code_size_improvements"}, {"score": 0.0021049977753042253, "phrase": "traditional_architectures"}], "paper_keywords": ["compiler optimizations", " energy efficiency", " static pipeline"], "paper_abstract": "A new generation of applications requires reduced power consumption without sacrificing performance. Instruction pipelining is commonly used to meet application performance requirements, but some implementation aspects of pipelining are inefficient with respect to energy usage. We propose static pipelining as a new instruction set architecture to enable more efficient instruction flow through the pipeline, which is accomplished by exposing the pipeline structure to the compiler. While this approach simplifies hardware pipeline requirements, significant modifications to the compiler are required. This paper describes the code generation and compiler optimizations we implemented to exploit the features of this architecture. We show that we can achieve performance and code size improvements despite a very low-level instruction representation. We also demonstrate that static pipelining of instructions reduces energy usage by simplifying hardware, avoiding many unnecessary operations, and allowing the compiler to perform optimizations that are not possible on traditional architectures.", "paper_title": "Improving Processor Efficiency by Statically Pipelining Instructions", "paper_id": "WOS:000321865100005"}