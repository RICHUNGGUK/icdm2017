{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "xml_documents"}, {"score": 0.029702396872572714, "phrase": "prefix_encoding_scheme"}, {"score": 0.0047747348769918, "phrase": "xpath_query_processing"}, {"score": 0.004734853555630616, "phrase": "external_memory"}, {"score": 0.004695303774351139, "phrase": "existing_encoding_schemes"}, {"score": 0.004656082803151484, "phrase": "index_structures"}, {"score": 0.004597861947580946, "phrase": "xml_query_processing"}, {"score": 0.0045213598841171935, "phrase": "containment_relationship"}, {"score": 0.004174929128880472, "phrase": "-sibling_location_steps"}, {"score": 0.004122699822340296, "phrase": "xpath_specification"}, {"score": 0.00403709306806495, "phrase": "de_facto_query_language"}, {"score": 0.004003467772386568, "phrase": "xml"}, {"score": 0.003936698872193083, "phrase": "horizontal_navigation"}, {"score": 0.0038711548651825917, "phrase": "vertical_navigation"}, {"score": 0.003727628340195049, "phrase": "efficient_evaluation"}, {"score": 0.003696460568091852, "phrase": "xml_queries"}, {"score": 0.003619672388007568, "phrase": "existing_range-based_and_prefix-based_encoding_schemes"}, {"score": 0.0033420978105332686, "phrase": "external-memory_index_structure"}, {"score": 0.0031645050772280033, "phrase": "index_element"}, {"score": 0.003098733069760013, "phrase": "defined_location_steps"}, {"score": 0.003059925849144792, "phrase": "xpath_language"}, {"score": 0.002586513876943306, "phrase": "richer_information"}, {"score": 0.002358050109031317, "phrase": "query_performance"}, {"score": 0.0022326306658609365, "phrase": "comprehensive_xpath_location_steps"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["XML", " XPatb query language", " external-memory index structure", " B plus -tree"], "paper_abstract": "Existing encoding schemes and index structures proposed for XML query processing primarily target the containment relationship, specifically the parent-child and ancestor-descendant relationship. The presence of preceding-sibling and following-sibling location steps in the XPath specification, which is the de facto query language for XML, makes the horizontal navigation, besides the vertical navigation, among nodes of XML documents a necessity for efficient evaluation of XML queries. Our work enhances the existing range-based and prefix-based encoding schemes such that all structural relationships between XML nodes can be determined from their codes alone. Furthermore, an external-memory index structure based on the traditional B+-tree, XL+-tree(XML Location+-tree), is introduced to index element sets such that all defined location steps in the XPath language, vertical and horizontal, top-down and bottom-up, can be processed efficiently. The XL+-trees under the range or prefix encoding scheme actually share the same structure; but various search operations upon them may be slightly different as a result of the richer information provided by the prefix encoding scheme. Finally, experiments are conducted to validate the efficiency of the XL+-tree approach. We compare the query performance of XL+-tree with that of R-tree, which is capable of handling comprehensive XPath location steps and has been empirically shown to outperform other indexing approaches. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Indexing XML documents for XPath query processing in external memory", "paper_id": "WOS:000241533800009"}