{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "programming_effort"}, {"score": 0.0046046429665581555, "phrase": "current_generation"}, {"score": 0.004563691742821759, "phrase": "parallel_systems"}, {"score": 0.004523103062368843, "phrase": "significant_programmer_effort"}, {"score": 0.004248869786808024, "phrase": "good_performance"}, {"score": 0.0040996651541091575, "phrase": "parallel_programming_models"}, {"score": 0.003666217992454448, "phrase": "sparse-matrix_dense-vector_multiplication"}, {"score": 0.0034902664176377943, "phrase": "second_group"}, {"score": 0.003397866151093552, "phrase": "pram-like_model"}, {"score": 0.0030794433253250476, "phrase": "xmtc._main_outcome_measures"}, {"score": 0.0029447150254434842, "phrase": "mean_xmtc_development_time"}, {"score": 0.0028539179130824786, "phrase": "mpi_development_time"}, {"score": 0.0026686444508167875, "phrase": "xmtc_programs"}, {"score": 0.0025291018422967083, "phrase": "correctness_rates"}, {"score": 0.0023861329619604666, "phrase": "xmtc_solutions"}, {"score": 0.002354302193867031, "phrase": "particular_problem"}, {"score": 0.0023125191783901367, "phrase": "mpi_equivalents"}, {"score": 0.0022311596751824416, "phrase": "different_types"}, {"score": 0.002162316557411786, "phrase": "programmer_experience"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["MPI", " XMT", " Message-passing", " PRAM", " Empirical study", " Parallel programming", " Effort"], "paper_abstract": "Context: Writing software for the current generation of parallel systems requires significant programmer effort, and the community is seeking alternatives that reduce effort while still achieving good performance. Objective: Measure the effect of parallel programming models (message-passing vs. PRAM-like) oil programmer effort. Design, setting. and subjects: One group of subjects implemented sparse-matrix dense-vector multiplication using message-passing (MPI), and a second group solved the same problem using a PRAM-like model (XMTC). The subjects were students in two graduate-level classes: one class was taught MPI and the other was taught XMTC. Main outcome measures: Development time, program correctness. Results: Mean XMTC development time was 4.8 h less than mean MPI development time (95% confidence interval, 2.0-7.7), a 46% reduction. XMTC programs were more likely to be correct, but the difference in correctness rates was not statistically significant (p = .16). Conclusions: XMTC Solutions for this particular problem required less effort than MPI equivalents, but further Studies are necessary which examine different types of problems and different levels of programmer experience. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "A pilot study to compare programming effort for two parallel programming models", "paper_id": "WOS:000260276700008"}