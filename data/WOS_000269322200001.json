{"auto_keywords": [{"score": 0.04971747610320427, "phrase": "self-organizing_neural_networks"}, {"score": 0.032542525398234, "phrase": "adaptivity_analysis"}, {"score": 0.00481495049065317, "phrase": "finite_element_mesh_triangulation"}, {"score": 0.004724571550328985, "phrase": "finite_element_method"}, {"score": 0.004671156704912419, "phrase": "computationally_intensive_method"}, {"score": 0.004635881163634672, "phrase": "effective_use"}, {"score": 0.004497410940849537, "phrase": "computational_framework"}, {"score": 0.00444655284354007, "phrase": "appropriate_manner"}, {"score": 0.004313713204732449, "phrase": "computational_cost"}, {"score": 0.003953409087444568, "phrase": "numeric_solver"}, {"score": 0.003908678575537341, "phrase": "partial_differential_equations"}, {"score": 0.0037918465913284478, "phrase": "specific_numeric_scheme"}, {"score": 0.0036093693971289754, "phrase": "mesh_generation_approach"}, {"score": 0.0035415392642831616, "phrase": "self-organizing_artificial_neural_networks"}, {"score": 0.003435643372146385, "phrase": "problem_domain"}, {"score": 0.0031724417545242315, "phrase": "finite_element_analysis"}, {"score": 0.0031246358910995316, "phrase": "adaptive_parameters"}, {"score": 0.0030311679447397725, "phrase": "self-organizing_neural_network"}, {"score": 0.002929344511491418, "phrase": "randomly_selected_mesh_nodes"}, {"score": 0.002788257824525862, "phrase": "chosen_node"}, {"score": 0.0026945722090537397, "phrase": "selected_nodes"}, {"score": 0.0026640466056415298, "phrase": "specific_input_point"}, {"score": 0.0024785689583828796, "phrase": "nodal_points"}, {"score": 0.0024504843466435487, "phrase": "element_sizes"}, {"score": 0.002314752262613559, "phrase": "high_stresses"}, {"score": 0.0022284577808744316, "phrase": "two-dimensional_triangular_elements"}, {"score": 0.0021782296784218923, "phrase": "quadrilateral_elements"}, {"score": 0.0021617392821644005, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Finite element", " Mesh generation", " Neural networks", " Triangulation", " Self-organizing map"], "paper_abstract": "The finite element method is a computationally intensive method. Effective use of the method requires setting up the computational framework in an appropriate manner, which typically requires expertise. The computational cost of generating the mesh may be much lower, comparable, or in some cases higher than the cost associated with the numeric solver of the partial differential equations, depending on the application and the specific numeric scheme at hand. The aim of this paper is to present a mesh generation approach using the application of self-organizing artificial neural networks through adaptive finite element computations. The problem domain is initially constructed using the self-organizing neural networks. This domain is used as the background mesh which forms the input for finite element analysis and from which adaptive parameters are calculated through adaptivity analysis. Subsequently, self-organizing neural network is used again to adjust the location of randomly selected mesh nodes as is the coordinates of all nodes within a certain neighborhood of the chosen node. The adjustment is a movement of the selected nodes toward a specific input point on the mesh. Thus, based on the results obtained from the adaptivity analysis, the movement of nodal points adjusts the element sizes in a way that the concentration of elements will occur in the regions of high stresses. The methods and experiments developed here are for two-dimensional triangular elements but seem naturally extendible to quadrilateral elements. Crown Copyright (C) 2009 Published by Elsevier Ltd. All rights reserved.", "paper_title": "Adaptive finite element mesh triangulation using self-organizing neural networks", "paper_id": "WOS:000269322200001"}