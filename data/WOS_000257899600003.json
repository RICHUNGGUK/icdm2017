{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_file_systems"}, {"score": 0.004594443767709888, "phrase": "widespread_use"}, {"score": 0.0044356867986444426, "phrase": "key_issues"}, {"score": 0.0041586840496756474, "phrase": "remote_files"}, {"score": 0.004014923642015515, "phrase": "cache_replacement"}, {"score": 0.003968112038249246, "phrase": "file-prefetching_technologies"}, {"score": 0.00376409764683147, "phrase": "novel_method"}, {"score": 0.0035705347414368696, "phrase": "main_idea"}, {"score": 0.003175175896313016, "phrase": "appointed_file-prefetching_language"}, {"score": 0.0030295361111006866, "phrase": "system_administrator"}, {"score": 0.0028234703730349894, "phrase": "appropriate_times"}, {"score": 0.0027741761880779535, "phrase": "prefetching_instructions"}, {"score": 0.002725740264152553, "phrase": "afpl"}, {"score": 0.002540285736232122, "phrase": "required_files"}, {"score": 0.0023674192513753996, "phrase": "experimental_results"}, {"score": 0.0023124457559811087, "phrase": "waiting_time"}, {"score": 0.0022854384756395116, "phrase": "remote_file"}, {"score": 0.0021805201234139475, "phrase": "hit_ratio"}], "paper_keywords": ["distributed file system", " file prefetching", " thin-client/server computing", " appointed file prefetching"], "paper_abstract": "Many types of distributed file systems have been in widespread use for more than a decade. One of key issues in their design is how to reduce the latency when accessing remote files, with the solutions including cache replacement and file-prefetching technologies. In this paper, we propose a novel method called appointed file prefetching, in which the main idea is to enable the user or system administrator to specify how to perform file prefetching. We define the appointed file-prefetching language (AFPL) that the user and system administrator can use to instruct the system to perform desired prefetching at appropriate times. The prefetching instructions in the AFPL can be divided into two categories: (1) selecting the required files and (2) specifying when to perform prefetching. The experimental results show that the waiting time of remote file fetching is reduced by 30% to 90% and the hit ratio is increased by 6% to 18% in most cases.", "paper_title": "The design and implementation of appointed file prefetching for distributed file systems", "paper_id": "WOS:000257899600003"}