{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "algorithm_design"}, {"score": 0.004133055661437163, "phrase": "inverse_integer"}, {"score": 0.0037104876694493815, "phrase": "matrix_factorizations"}, {"score": 0.0036443694410100507, "phrase": "kronecker_product"}, {"score": 0.0035794251590584563, "phrase": "direct_sum"}, {"score": 0.00249767641333441, "phrase": "larger_throughput_rate"}, {"score": 0.0024311346712789553, "phrase": "row-column_based_method"}, {"score": 0.002282667669149476, "phrase": "proposed_fast_algorithms"}, {"score": 0.0022019274077124795, "phrase": "vlsi_implementations"}, {"score": 0.0021049977753042253, "phrase": "frext"}], "paper_keywords": ["H.264", " fidelity range extensions (FRExt)", " integer transform", " fast algorithm"], "paper_abstract": "In this letter, efficient two-dimensional (2-D) fast algorithms for realizations of 8 x 8 forward and inverse integer transforms in H.264/AVC fidelity range extensions (FRExt) are proposed. Based on matrix factorizations with Kronecker product and direct sum operations, efficient fast 2-D 8 x 8 forward and inverse integer transforms can be derived from the one-dimensional (1-D) fast 8 x 8 forward and inverse integer transforms through matrix operations. The proposed fast 2-D 8 x 8 forward and inverse integer transform designs don't require transpose memory in hardware realizations. The fast 2-D 8 x 8 integer transforms require fewer latency delays and provide a larger throughput rate than the row-column based method. With regular modularity, the proposed fast algorithms are suitable for VLSI implementations to achieve H.264/AVC,FRExt high-profile signal processing.", "paper_title": "Fast 2-dimensional 8 x 8 integer transform algorithm design for H.264/AVC fidelity range extensions", "paper_id": "WOS:000242877700026"}