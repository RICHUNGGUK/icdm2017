{"auto_keywords": [{"score": 0.030054231181529112, "phrase": "valera"}, {"score": 0.029453411950539306, "phrase": "android"}, {"score": 0.00481495049065317, "phrase": "lightweight_record-and-replay_for_android"}, {"score": 0.004683618147754759, "phrase": "smartphone_apps"}, {"score": 0.004401011982385274, "phrase": "effective_record-and-replay"}, {"score": 0.004050442607427367, "phrase": "high-bandwidth_stream"}, {"score": 0.003872310849448784, "phrase": "concurrency_events"}, {"score": 0.0037148167062767096, "phrase": "minimal_overhead"}, {"score": 0.0036384794303356413, "phrase": "app_execution"}, {"score": 0.0036008989464331835, "phrase": "record-and-replay_approaches"}, {"score": 0.0035391223341472502, "phrase": "machine_instructions"}, {"score": 0.0035147084172295123, "phrase": "system_calls"}, {"score": 0.0034424690391411093, "phrase": "good_fit"}, {"score": 0.0031352744329834676, "phrase": "sweet_spot"}, {"score": 0.0030601947866320403, "phrase": "network_input"}, {"score": 0.0030390745780621503, "phrase": "event_schedules"}, {"score": 0.0030076664326204013, "phrase": "inter-app_communication"}, {"score": 0.0025914765323897604, "phrase": "app_source_code"}, {"score": 0.0024859463164240603, "phrase": "valera's_replay_fidelity"}, {"score": 0.002460240519198386, "phrase": "current_record-and-replay_approaches"}, {"score": 0.002426378123762607, "phrase": "valera's_precise_timing_control"}, {"score": 0.0021943920257952174, "phrase": "valera's_support"}, {"score": 0.002179234170770192, "phrase": "event_schedule_replay"}, {"score": 0.0021417950504965997, "phrase": "useful_analyses"}, {"score": 0.0021049977753042253, "phrase": "event-driven_race_bugs"}], "paper_keywords": ["Reliability", " Verification", " Mobile applications", " Record-and-replay", " Google Android", " App testing", " Event-based races"], "paper_abstract": "Recording and replaying the execution of smartphone apps is useful in a variety of contexts, from reproducing bugs to profiling and testing. Achieving effective record-and-replay is a balancing act between accuracy and overhead. On smartphones, the act is particularly complicated, because smartphone apps receive a high-bandwidth stream of input (e.g., network, GPS, camera, microphone, touch-screen) and concurrency events, but the stream has to be recorded and replayed with minimal overhead, to avoid interfering with app execution. Prior record-and-replay approaches have focused on replaying machine instructions or system calls, which is not a good fit on smartphones. We propose a novel, stream-oriented record-and-replay approach which achieves high-accuracy and low-overhead by aiming at a sweet spot: recording and replaying sensor and network input, event schedules, and inter-app communication via intents. To demonstrate the versatility of our approach, we have constructed a tool named VALERA that supports record-and-replay on the Android platform. VALERA works with apps running directly on the phone, and does not require access to the app source code. Through an evaluation on 50 popular Android apps, we show that: VALERA's replay fidelity far exceeds current record-and-replay approaches for Android; VALERA's precise timing control and low overhead (about 1% for either record or replay) allows it to replay high-throughput, timing-sensitive apps such as video/audio capture and recognition; and VALERA's support for event schedule replay enables the construction of useful analyses, such as reproducing event-driven race bugs.", "paper_title": "Versatile yet Lightweight Record-and-Replay for Android", "paper_id": "WOS:000367256500020"}