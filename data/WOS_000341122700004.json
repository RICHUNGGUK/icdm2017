{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "context_diversity"}, {"score": 0.03404407165486171, "phrase": "test_suites"}, {"score": 0.010760171810062377, "phrase": "context_changes"}, {"score": 0.008014583930819759, "phrase": "higher_context_diversity"}, {"score": 0.0047559432344272, "phrase": "context-aware_pervasive_software"}, {"score": 0.0044991925146184025, "phrase": "faulty_implementation"}, {"score": 0.004416713079266374, "phrase": "context-aware_features"}, {"score": 0.00430907756010007, "phrase": "unpredictable_behavior"}, {"score": 0.004256243266481051, "phrase": "adverse_effects"}, {"score": 0.004178198896815672, "phrase": "software_testing"}, {"score": 0.0038561471948364723, "phrase": "test_suite"}, {"score": 0.0036703791815812328, "phrase": "existing_adequacy_criteria"}, {"score": 0.0036030386046805598, "phrase": "traditional_software"}, {"score": 0.0033873366086549735, "phrase": "serial_test_inputs"}, {"score": 0.0028670988845838296, "phrase": "serial_inputs"}, {"score": 0.0026458370516131255, "phrase": "data-flow_testing_criteria"}, {"score": 0.002471973283582411, "phrase": "test_cases"}, {"score": 0.0023382335380460304, "phrase": "existing_data-flow_testing_criteria"}, {"score": 0.0022670785913397637, "phrase": "pervasive_software"}, {"score": 0.0021049977753042253, "phrase": "significantly_longer_paths"}], "paper_keywords": ["Verification", " Experimentation", " Measurement", " Reliability", " Context-aware program", " context diversity", " test adequacy"], "paper_abstract": "Context-aware pervasive software is responsive to various contexts and their changes. A faulty implementation of the context-aware features may lead to unpredictable behavior with adverse effects. In software testing, one of the most important research issues is to determine the sufficiency of a test suite to verify the software under test. Existing adequacy criteria for testing traditional software, however, have not explored the dimension of serial test inputs and have not considered context changes when constructing test suites. In this article, we define the concept of context diversity to capture the extent of context changes in serial inputs and propose three strategies to study how context diversity may improve the effectiveness of the data-flow testing criteria. Our case study shows that the strategy that uses test cases with higher context diversity can significantly improve the effectiveness of existing data-flow testing criteria for context-aware pervasive software. In addition, test suites with higher context diversity are found to execute significantly longer paths, which may provide a clue that reveals why context diversity can contribute to the improvement of effectiveness of test suites.", "paper_title": "Improving the Effectiveness of Testing Pervasive Software via Context Diversity", "paper_id": "WOS:000341122700004"}