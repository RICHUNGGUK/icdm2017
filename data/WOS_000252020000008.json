{"auto_keywords": [{"score": 0.03967305438082863, "phrase": "control_instructions"}, {"score": 0.015719716506582538, "phrase": "energy_saving"}, {"score": 0.015452516247737278, "phrase": "reconfigurable_processor"}, {"score": 0.004650896226390719, "phrase": "control_data_flow_graphs"}, {"score": 0.004314292485628779, "phrase": "dfg"}, {"score": 0.004215677131963292, "phrase": "hardware_accelerator"}, {"score": 0.004071957673937727, "phrase": "embedded_systems"}, {"score": 0.004001938457469328, "phrase": "base_processor"}, {"score": 0.003910441483033426, "phrase": "tightly_coupled_accelerator"}, {"score": 0.0037121208432871118, "phrase": "control_dfgs"}, {"score": 0.0035855066449812273, "phrase": "dfgs_results"}, {"score": 0.003503497128638102, "phrase": "application_code_portion"}, {"score": 0.002945175711537758, "phrase": "basic_requirements"}, {"score": 0.002861160152640875, "phrase": "conditional_execution_support"}, {"score": 0.00270023138867066, "phrase": "temporal_partitioning"}, {"score": 0.002623184850933423, "phrase": "target_accelerator_architectural_constraints"}, {"score": 0.002518989593177879, "phrase": "proposed_ideas"}, {"score": 0.002349884235026956, "phrase": "amber._experimental"}, {"score": 0.0022960713730673494, "phrase": "remarkable_effectiveness"}, {"score": 0.00221764889611211, "phrase": "cdfgs"}, {"score": 0.0021049977753042253, "phrase": "energy_reduction"}], "paper_keywords": ["reconfigurable accelerator", " conditional execution", " control data flow graph", " temporal partitioning", " reconfigurable processor"], "paper_abstract": "Extracting frequently executed (hot) portions of the application and executing their corresponding data flow graph (DFG) on the hardware accelerator brings about more speedup and energy saving for embedded systems comprising a base processor integrated with a tightly coupled accelerator. Extending DFGs to support control instructions and using Control DFGs (CDFGs) instead of DFGs results in more coverage of application code portion are being accelerated hence, more speedup and energy saving. In this paper, motivations for extending DFGs to CDFGs and handling control instructions are introduced. In addition, basic requirements for an accelerator with conditional execution support are proposed. Then, two algorithms are presented for temporal partitioning of CDFGs considering the target accelerator architectural constraints. To demonstrate effectiveness of the proposed ideas, they are applied to the accelerator of a reconfigurable processor called AMBER. Experimental results approve the remarkable effectiveness of covering control instructions and using CDFGs versus DFGs in the aspects of performance and energy reduction.", "paper_title": "Improving performance and energy saving in a reconfigurable processor via accelerating control data flow graphs", "paper_id": "WOS:000252020000008"}