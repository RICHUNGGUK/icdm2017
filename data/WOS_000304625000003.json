{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dataflow_applications"}, {"score": 0.0047563776685277314, "phrase": "heterogeneous_environments"}, {"score": 0.00461302961851157, "phrase": "multi-core_processor_parallelism"}, {"score": 0.004446677711302801, "phrase": "many-core_accelerator_processors"}, {"score": 0.004234129588974058, "phrase": "traditional_smp_systems"}, {"score": 0.004007083686875716, "phrase": "parallel_system_design"}, {"score": 0.0039341294012600085, "phrase": "open_problem"}, {"score": 0.003769006950727621, "phrase": "current_tools"}, {"score": 0.0036553070575015344, "phrase": "parallel_applications"}, {"score": 0.0036107898615445797, "phrase": "hierarchical_systems"}, {"score": 0.003022825806274343, "phrase": "heterogeneous_computing_resources"}, {"score": 0.002949598537993663, "phrase": "application_performance"}, {"score": 0.002825681384008326, "phrase": "optimizing_applications"}, {"score": 0.002723607240517261, "phrase": "application_task_execution"}, {"score": 0.002673957615079041, "phrase": "available_processing_units"}, {"score": 0.0025615908073796027, "phrase": "replicated_dataflow_applications"}, {"score": 0.0025148871904409095, "phrase": "proposed_techniques"}, {"score": 0.002409188797323273, "phrase": "integrated_run-time_system"}, {"score": 0.0022797772939670063, "phrase": "real-world_complex_biomedical_application_show"}, {"score": 0.0021441057555396013, "phrase": "gpu-only_implementation"}, {"score": 0.0021049977753042253, "phrase": "distributed_heterogeneous_accelerator_cluster"}], "paper_keywords": ["GPGPU", " Run-time optimizations", " Filter-stream"], "paper_abstract": "The increases in multi-core processor parallelism and in the flexibility of many-core accelerator processors, such as GPUs, have turned traditional SMP systems into hierarchical, heterogeneous computing environments. Fully exploiting these improvements in parallel system design remains an open problem. Moreover, most of the current tools for the development of parallel applications for hierarchical systems concentrate on the use of only a single processor type (e.g., accelerators) and do not coordinate several heterogeneous processors. Here, we show that making use of all of the heterogeneous computing resources can significantly improve application performance. Our approach, which consists of optimizing applications at run-time by efficiently coordinating application task execution on all available processing units is evaluated in the context of replicated dataflow applications. The proposed techniques were developed and implemented in an integrated run-time system targeting both intra- and inter-node parallelism. The experimental results with a real-world complex biomedical application show that our approach nearly doubles the performance of the GPU-only implementation on a distributed heterogeneous accelerator cluster.", "paper_title": "Optimizing dataflow applications on heterogeneous environments", "paper_id": "WOS:000304625000003"}