{"auto_keywords": [{"score": 0.0494208158242398, "phrase": "transaction-intensive_workflows"}, {"score": 0.023858145854985587, "phrase": "overall_throughput"}, {"score": 0.008713768692145006, "phrase": "throughput_maximization_strategy"}, {"score": 0.006954818550859016, "phrase": "existing_scheduling_algorithms"}, {"score": 0.0047051051659828275, "phrase": "swindew-g."}, {"score": 0.004640398886726948, "phrase": "rapid_development"}, {"score": 0.004555499634179394, "phrase": "workflow_systems"}, {"score": 0.004309968592440261, "phrase": "huge_number"}, {"score": 0.004270347498153512, "phrase": "concurrent_workflow_instances"}, {"score": 0.004002972723329302, "phrase": "good_quality"}, {"score": 0.0037177622939493084, "phrase": "single_complex_scientific_workflow"}, {"score": 0.0030759821501544224, "phrase": "first_algorithm"}, {"score": 0.0029234476524900794, "phrase": "overall_load_balance"}, {"score": 0.002883172383460653, "phrase": "instance_level"}, {"score": 0.0028303313661029597, "phrase": "second_algorithm"}, {"score": 0.0028042741141125712, "phrase": "extended_min-min"}, {"score": 0.0026899455459275575, "phrase": "task_level"}, {"score": 0.002640636493247601, "phrase": "utilization_rate"}, {"score": 0.0025802660239538353, "phrase": "local_autonomous_group"}, {"score": 0.0024865237976623286, "phrase": "swinburne_decentralized_workflow"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["scheduling algorithms", " transaction-intensive workflows", " p2p-based grid workflow systems"], "paper_abstract": "With the rapid development of e-business, workflow systems no,,v have to deal with transaction-intensive workflows whose main characteristic is the huge number of concurrent workflow instances. For such workflows, it is important to maximize the overall throughput to provide good quality of service. However. most of the existing scheduling algorithms are designed for scheduling of a single complex scientific workflow, instance and are not efficient enough for scheduling transaction-intensive workflows. To address this problem. we propose a throughput maximization strategy (TMS), which contains two specific algorithms for scheduling transaction-intensive workflows at the instance and task levels. respectively. The first algorithm called Opposite Average Load tries to maximize the overall throughput by pursuing the overall load balance at the instance level, whereas the second algorithm called Extended Min-Min tries to further maximize the overall throughput at the task level by increasing the utilization rate of resources within each local autonomous group. The comparison and simulation performed on Swinburne Decentralized Workflow for Grid (SwinDeW-G), a peer-to-peer-based grid workflow environment, demonstrate that our strategy can improve the overall throughput significantly over existing scheduling algorithms when scheduling transaction-intensive workflows. Copyright (c) 2008 John Wiley & Sons, Ltd.", "paper_title": "A throughput maximization strategy for scheduling transaction-intensive workflows on SwinDeW-G", "paper_id": "WOS:000259707600007"}