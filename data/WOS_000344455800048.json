{"auto_keywords": [{"score": 0.04084574972884765, "phrase": "pestrie"}, {"score": 0.010612387000973441, "phrase": "pointer_information"}, {"score": 0.006400222607627807, "phrase": "related_queries"}, {"score": 0.004592905436175987, "phrase": "static_analysis_tools"}, {"score": 0.003986103192038901, "phrase": "query-efficient_persistence_technique"}, {"score": 0.0036697319652557363, "phrase": "costly_computation"}, {"score": 0.003459191419478298, "phrase": "precise_pointer_information"}, {"score": 0.0024842242921857705, "phrase": "smaller_persistent_files"}, {"score": 0.0023976048394496446, "phrase": "traditional_bitmap"}, {"score": 0.0023415390666563177, "phrase": "bdd_encodings"}, {"score": 0.0021049977753042253, "phrase": "traditional_demand-driven_approaches"}], "paper_keywords": ["Algorithms", " Languages", " Performance", " Pestrie", " fast querying", " compact indexing"], "paper_abstract": "Pointer information, indispensable for static analysis tools, is expensive to compute and query. We provide a query-efficient persistence technique, Pestrie, to mitigate the costly computation and slow querying of precise pointer information. Leveraging equivalence and hub properties, Pestrie can compress pointer information and answers pointer related queries very efficiently. The experiment shows that Pestrie produces 10.5x and 17.5x smaller persistent files than the traditional bitmap and BDD encodings. Meanwhile, Pestrie is 2.9x to 123.6x faster than traditional demand-driven approaches for serving points-to related queries.", "paper_title": "Persistent Pointer Information", "paper_id": "WOS:000344455800048"}