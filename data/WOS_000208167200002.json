{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "multivariate_gaussian_random_number_generator"}, {"score": 0.012144797463867058, "phrase": "fpga"}, {"score": 0.011929816186387146, "phrase": "computational_path"}, {"score": 0.011009552772500819, "phrase": "proposed_approach"}, {"score": 0.00477190623242136, "phrase": "monte_carlo"}, {"score": 0.004603525341738782, "phrase": "computationally_intensive_simulations"}, {"score": 0.004562362497952548, "phrase": "mathematical_analysis"}, {"score": 0.0043619799095455415, "phrase": "main_building_blocks"}, {"score": 0.004284302478991387, "phrase": "field_programmable_gate_arrays"}, {"score": 0.0041703614123283165, "phrase": "increased_popularity"}, {"score": 0.004041238873048836, "phrase": "traditional_general_purpose_processors"}, {"score": 0.003933736547198066, "phrase": "computationally_expensive_random_number_generator_block"}, {"score": 0.0038290829316346654, "phrase": "novel_approach"}, {"score": 0.0035794251590584563, "phrase": "hardware_resource_usage_subject"}, {"score": 0.003531474887552889, "phrase": "acceptable_error"}, {"score": 0.0032863459256972896, "phrase": "eigenvalue_decomposition_algorithm"}, {"score": 0.0031845067058084583, "phrase": "different_precision_requirements"}, {"score": 0.003141830113006653, "phrase": "computational_paths"}, {"score": 0.0028715299874549245, "phrase": "analytical_expression"}, {"score": 0.0026962411675196213, "phrase": "error_analysis"}, {"score": 0.0026126405272417783, "phrase": "resource_utilization"}, {"score": 0.002398529964696261, "phrase": "experimental_results"}, {"score": 0.0023557346035701096, "phrase": "hardware_resource_usage"}, {"score": 0.0021049977753042253, "phrase": "optimization_techniques"}], "paper_keywords": ["Design", " Performance", " Algorithms", " Multivariate Gaussian distribution", " word-length optimization", " FPGA", " hardware architecture optimization"], "paper_abstract": "Monte Carlo simulation is one of the most widely used techniques for computationally intensive simulations in mathematical analysis and modeling. A multivariate Gaussian random number generator is one of the main building blocks of such a system. Field Programmable Gate Arrays (FPGAs) are gaining increased popularity as an alternative means to the traditional general purpose processors targeting the acceleration of the computationally expensive random number generator block. This article presents a novel approach for mapping a multivariate Gaussian random number generator onto an FPGA by optimizing the computational path in terms of hardware resource usage subject to an acceptable error in the approximation of the distribution of interest. The proposed approach is based on the eigenvalue decomposition algorithm which leads to a design with different precision requirements in the computational paths. An analysis on the impact of the error due to truncation/rounding operation along the computational path is performed and an analytical expression of the error inserted into the system is presented. Based on the error analysis, three algorithms that optimize the resource utilization and at the same time minimize the error in the output of the system are presented and compared. Experimental results reveal that the hardware resource usage on an FPGA as well as the error in the approximation of the distribution of interest are significantly reduced by the use of the optimization techniques introduced in the proposed approach.", "paper_title": "An Optimized Hardware Architecture of a Multivariate Gaussian Random Number Generator", "paper_id": "WOS:000208167200002"}