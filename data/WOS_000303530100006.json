{"auto_keywords": [{"score": 0.03718034097391593, "phrase": "data_structure"}, {"score": 0.00481495049065317, "phrase": "space_efficient_two_dimensional_range_minimum_data_structures"}, {"score": 0.004658426838467567, "phrase": "static_m"}, {"score": 0.0043066860455264, "phrase": "subsequent_queries"}, {"score": 0.0041666157975446564, "phrase": "minimum_element"}, {"score": 0.004115267130977749, "phrase": "rectangular_range"}, {"score": 0.003835972725191194, "phrase": "query_time"}, {"score": 0.0032376465741070274, "phrase": "thousand_currency"}, {"score": 0.0029437270961011077, "phrase": "lower_bound"}, {"score": 0.0028715299874549245, "phrase": "constant_factor"}, {"score": 0.002546708483171714, "phrase": "query_time_algorithm"}, {"score": 0.0021049977753042253, "phrase": "thousand_currency_signn"}], "paper_keywords": ["Range minimum query", " Cartesian tree", " Time-space trade-off", " Indexing model", " Encoding model"], "paper_abstract": "The two dimensional range minimum query problem is to preprocess a static m by n matrix (two dimensional array) A of size N=ma <...n, such that subsequent queries, asking for the position of the minimum element in a rectangular range within A, can be answered efficiently. We study the trade-off between the space and query time of the problem. We show that every algorithm enabled to access A during the query and using a data structure of size O(N/c) bits requires Omega(c) query time, for any c where 1a parts per thousand currency signca parts per thousand currency signN. This lower bound holds for arrays of any dimension. In particular, for the one dimensional version of the problem, the lower bound is tight up to a constant factor. In two dimensions, we complement the lower bound with an indexing data structure of size O(N/c) bits which can be preprocessed in O(N) time to support O(clog (2) c) query time. For c=O(1), this is the first O(1) query time algorithm using a data structure of optimal size O(N) bits. For the case where queries can not probe A, we give a data structure of size O(Na <...min {m,log n}) bits with O(1) query time, assuming ma parts per thousand currency signn. This leaves a gap to the space lower bound of Omega(Nlog m) bits for this version of the problem.", "paper_title": "On Space Efficient Two Dimensional Range Minimum Data Structures", "paper_id": "WOS:000303530100006"}