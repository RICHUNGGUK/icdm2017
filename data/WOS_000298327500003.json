{"auto_keywords": [{"score": 0.04889532068804289, "phrase": "spice_circuit_simulator"}, {"score": 0.02360043575620971, "phrase": "intel_core"}, {"score": 0.00481495049065317, "phrase": "spatial_processors_interconnected"}, {"score": 0.004774937143916685, "phrase": "concurrent_execution"}, {"score": 0.004637478829869904, "phrase": "fpga._spatial_processing"}, {"score": 0.00441107613093701, "phrase": "fpga"}, {"score": 0.004266067096140677, "phrase": "magnitude_speedup"}, {"score": 0.004143196873246147, "phrase": "conventional_microprocessor"}, {"score": 0.0037480753312398754, "phrase": "complete_simulator"}, {"score": 0.0036859870499530143, "phrase": "spice"}, {"score": 0.003404703106153948, "phrase": "spatial_architecture"}, {"score": 0.0031317126905234145, "phrase": "parallel_patterns"}, {"score": 0.0030541531847589807, "phrase": "fpga_architecture"}, {"score": 0.0029909851863915283, "phrase": "conventional_processors"}, {"score": 0.0028805474861014722, "phrase": "high_utilization"}, {"score": 0.002856563331151566, "phrase": "statically-scheduled_resources"}, {"score": 0.0028327783069076883, "phrase": "low-overhead_dataflow_scheduling"}, {"score": 0.0028091907694771613, "phrase": "fine-grained_tasks"}, {"score": 0.002751075263422475, "phrase": "overlapped_processing"}, {"score": 0.0027167830773160203, "phrase": "control_algorithms"}, {"score": 0.0026164433143193015, "phrase": "model_evaluation"}, {"score": 0.0025838249689625775, "phrase": "mean_factor"}, {"score": 0.0024883835349005863, "phrase": "nonlinear_device_models"}, {"score": 0.0023665766694993535, "phrase": "mean_combined_speedup"}, {"score": 0.0023079225317714793, "phrase": "composite_design"}, {"score": 0.0021049977753042253, "phrase": "energy_savings"}], "paper_keywords": ["Parallelism", " reconfigurable logic", " simulation"], "paper_abstract": "Spatial processing of sparse, irregular, double-precision floating-point computation using a single field-programmable gate array (FPGA) enables up to an order of magnitude speedup (mean 2.8x speedup) over a conventional microprocessor for the SPICE circuit simulator. We develop a parallel, FPGA-based, heterogeneous architecture customized for accelerating the SPICE simulator to deliver this speedup. To properly parallelize the complete simulator, we decompose SPICE into its three constituent phases-model evaluation, sparse matrix-solve, and iteration control-and customize a spatial architecture for each phase independently. Our heterogeneous FPGA organization mixes very large instruction word, dataflow and streaming architectures into a cohesive, unified design to match the parallel patterns exposed by our programming framework. This FPGA architecture is able to outperform conventional processors due to a combination of factors, including high utilization of statically-scheduled resources, low-overhead dataflow scheduling of fine-grained tasks, and streaming, overlapped processing of the control algorithms. We demonstrate that we can independently accelerate model evaluation by a mean factor of 6.5 x (1.4-23x) across a range of nonlinear device models and matrix solve by 2.4x(0.6-13x) across various benchmark matrices while delivering a mean combined speedup of 2.8x(0.2-11x) for the composite design when comparing a Xilinx Virtex-6 LX760 (40 nm) with an Intel Core i7 965 (45 nm). We also estimate mean energy savings of 8.9x(up to 40.9x) when comparing a Xilinx Virtex-6 LX760 with an Intel Core i7 965.", "paper_title": "SPICE2 : Spatial Processors Interconnected for Concurrent Execution for Accelerating the SPICE Circuit Simulator Using an FPGA", "paper_id": "WOS:000298327500003"}