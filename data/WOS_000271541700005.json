{"auto_keywords": [{"score": 0.032883543743821096, "phrase": "critical_path"}, {"score": 0.02956978352997437, "phrase": "critical_region"}, {"score": 0.00481495049065317, "phrase": "critical_region_reliability_support"}, {"score": 0.004766661233294193, "phrase": "grid"}, {"score": 0.004500414250942443, "phrase": "timing_constraints"}, {"score": 0.0039519004610213595, "phrase": "time-constrained_workflow_processing"}, {"score": 0.0036553070575015344, "phrase": "successful_execution"}, {"score": 0.0034519997658752598, "phrase": "'normal_state"}, {"score": 0.00339853518227171, "phrase": "'abnormal_state"}, {"score": 0.003345895878114341, "phrase": "grid_resources"}, {"score": 0.0032940691998512963, "phrase": "successive_turns"}, {"score": 0.003226209534553224, "phrase": "relative_difference"}, {"score": 0.0031928040608991543, "phrase": "execution_time"}, {"score": 0.0030308784612749647, "phrase": "non-critical_path"}, {"score": 0.0028622019660721363, "phrase": "new_some_conceptions"}, {"score": 0.002619748321217153, "phrase": "scheduling_algorithm"}, {"score": 0.00253916011199984, "phrase": "finite-state_continuous-time_markov_process"}, {"score": 0.002461044825190643, "phrase": "resource_combination_scheme"}, {"score": 0.0024103044278902916, "phrase": "lowest_expenditure"}, {"score": 0.0023361440016375972, "phrase": "resource_reliability"}, {"score": 0.0022642601698943687, "phrase": "dag-based_workflow"}, {"score": 0.002171836484200008, "phrase": "theory_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Grid workflow scheduling", " Critical region reliability", " Critical path", " Time constraint"], "paper_abstract": "Many Directed Acyclic Graph (DAG)-based workflow applications often have timing constraints Such that each processing of a workflow needs to be finished within its deadline. There have been some Studies to improve the performance of time-constrained workflow processing. Few of them, however, have taken into account the fact that Successful execution of a workflow within its deadline is also affected by the 'normal state' and 'abnormal state' of Grid resources occurring in successive turns and by the relative difference in execution time between tasks on the critical path and tasks on the non-critical path. To solve the problem, we first Put forward new some conceptions, Such as the critical region and the reliability of the critical region, and then present a Scheduling algorithm. In terms of the finite-state continuous-time Markov process, the algorithm selects a resource combination scheme which has the lowest expenditure under a certain credit level of the resource reliability on the critical path in the DAG-based workflow. The simulation shows the validity of theory analysis. (C) 2009 Elsevier Inc. All rights reserved", "paper_title": "Towards critical region reliability support for Grid workflows", "paper_id": "WOS:000271541700005"}