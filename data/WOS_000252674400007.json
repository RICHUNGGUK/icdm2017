{"auto_keywords": [{"score": 0.039510674444560676, "phrase": "proposed_algorithms"}, {"score": 0.01542811239402803, "phrase": "svm"}, {"score": 0.00481495049065317, "phrase": "randomized_sampling"}, {"score": 0.004769444094319619, "phrase": "support_vector_machine"}, {"score": 0.004483909657713567, "phrase": "parallel_randomized_support_vector_machine"}, {"score": 0.004441517985511521, "phrase": "prsvm"}, {"score": 0.004357927940322685, "phrase": "parallel_randomized_support_vector_regression"}, {"score": 0.004195418010131832, "phrase": "randomized_sampling_technique"}, {"score": 0.004038943596016986, "phrase": "proposed_prsvm"}, {"score": 0.004000741805312148, "phrase": "prsvr"}, {"score": 0.003925414526537783, "phrase": "previous_methods"}, {"score": 0.00370780481244907, "phrase": "average_convergence_rate"}, {"score": 0.003603549914861701, "phrase": "fastest_bounded_convergence_rate"}, {"score": 0.0035356745476539885, "phrase": "svm_decomposition_training_algorithms"}, {"score": 0.0034037221513153566, "phrase": "fast_average_convergence"}, {"score": 0.003307988966112615, "phrase": "unique_priority"}, {"score": 0.0031693980719538317, "phrase": "previous_work"}, {"score": 0.0030656196752517836, "phrase": "support_vector_machines"}, {"score": 0.002937153116494391, "phrase": "general_linear-nonseparable_svm"}, {"score": 0.0027348611289528583, "phrase": "new_lp-type_problems"}, {"score": 0.002696101728474703, "phrase": "karush-kuhn-tucker_optimality_conditions"}, {"score": 0.00258307991054107, "phrase": "first_parallel_version"}, {"score": 0.0025586128304269616, "phrase": "randomized_sampling_algorithms"}, {"score": 0.0025103701782334263, "phrase": "svr."}, {"score": 0.0023936956017015696, "phrase": "real_application_show"}, {"score": 0.002359759876402679, "phrase": "proposed_algorithm"}, {"score": 0.002337403139264533, "phrase": "good_scalability"}, {"score": 0.002186712881521657, "phrase": "synthetic_data"}, {"score": 0.0021251363422701446, "phrase": "real_word_application"}, {"score": 0.0021049977753042253, "phrase": "performance_comparisons"}], "paper_keywords": ["randomized sampling", " support vector machine", " support vector regression", " parallel algorithm"], "paper_abstract": "A parallel randomized support vector machine (PRSVM) and a parallel randomized support vector regression (PRSVR) algorithm based on a randomized sampling technique are proposed in this paper. The proposed PRSVM and PRSVR have four major advantages over previous methods. (1) We prove that the proposed algorithms achieve an average convergence rate that is so far the fastest bounded convergence rate, among all SVM decomposition training algorithms to the best of our knowledge. The fast average convergence bound is achieved by a unique priority based sampling mechanism. (2) Unlike previous work (Provably fast training algorithm for support vector machines, 2001) the proposed algorithms work for general linear-nonseparable SVM and general non-linear SVR problems. This improvement is achieved by modeling new LP-type problems based on Karush-Kuhn-Tucker optimality conditions. (3) The proposed algorithms are the first parallel version of randomized sampling algorithms for SVM and SVR. Both the analytical convergence bound and the numerical results in a real application show that the proposed algorithm has good scalability. (4) We present demonstrations of the algorithms based on both synthetic data and data obtained from a real word application. Performance comparisons with SVMlight show that the proposed algorithms may be efficiently implemented.", "paper_title": "Parallel randomized sampling for support vector machine (SVM) and support vector regression (SVR)", "paper_id": "WOS:000252674400007"}