{"auto_keywords": [{"score": 0.04177183488565657, "phrase": "reflex"}, {"score": 0.015719618370140638, "phrase": "low-power_processors"}, {"score": 0.006478360276417325, "phrase": "dsm"}, {"score": 0.004777949425456245, "phrase": "smartphones"}, {"score": 0.004288261454002681, "phrase": "mobile_systems"}, {"score": 0.004222515162635615, "phrase": "existing_solutions"}, {"score": 0.004046843083499649, "phrase": "inter-processor_communication"}, {"score": 0.003878451139312637, "phrase": "runtime_techniques"}, {"score": 0.0036038701178581403, "phrase": "distributed_shared_memory"}, {"score": 0.0035076666315744525, "phrase": "memory_objects"}, {"score": 0.0034806529881619454, "phrase": "release_consistency"}, {"score": 0.0034140224493254935, "phrase": "loosely_coupled_processors"}, {"score": 0.0033357416981328577, "phrase": "high_energy_efficiency"}, {"score": 0.0030994630902300133, "phrase": "powerful_central_processors"}, {"score": 0.0028687545730861665, "phrase": "efficient_message"}, {"score": 0.0027492483892113, "phrase": "complete_realization"}, {"score": 0.0026143990748127253, "phrase": "custom_tri-processor_mobile_platform"}, {"score": 0.0025347150832077175, "phrase": "recent_literature"}, {"score": 0.0024574537875026634, "phrase": "programming_style"}, {"score": 0.002419708657850547, "phrase": "contemporary_smartphone_programming"}, {"score": 0.002382541887825168, "phrase": "message_passing"}, {"score": 0.0023550410480905727, "phrase": "reflex_dsm"}, {"score": 0.00230098581403254, "phrase": "heterogeneous_smartphones"}, {"score": 0.0022308329460335985, "phrase": "source_lines"}, {"score": 0.0022136307563123256, "phrase": "application_code"}, {"score": 0.0021461354559957234, "phrase": "existing_smartphones"}, {"score": 0.0021049977753042253, "phrase": "average_system_power_consumption"}], "paper_keywords": ["Design", " Experimentation", " Heterogeneous systems", " energy-efficiency", " mobile systems", " distributed shared memory"], "paper_abstract": "To accomplish frequent, simple tasks with high efficiency, it is necessary to leverage low-power, microcontroller-like processors that are increasingly available on mobile systems. However, existing solutions require developers to directly program the low-power processors and carefully manage inter-processor communication. We present Reflex, a suite of compiler and runtime techniques that significantly lower the barrier for developers to leverage such low-power processors. The heart of Reflex is a software Distributed Shared Memory (DSM) that enables shared memory objects with release consistency among code running on loosely coupled processors. In order to achieve high energy efficiency without sacrificing performance much, the Reflex DSM leverages (i) extreme architectural asymmetry between low-power processors and powerful central processors, (ii) aggressive compile-time optimization, and (iii) a minimalist runtime that supports efficient message passing and event-driven execution. We report a complete realization of Reflex that runs on a TI OMAP4430-based development platform as well as on a custom tri-processor mobile platform. Using smartphone sensing applications reported in recent literature, we show that Reflex supports a programming style very close to contemporary smartphone programming. Compared to message passing, the Reflex DSM greatly reduces efforts in programming heterogeneous smartphones, eliminating up to 38% of the source lines of application code. Compared to running the same applications on existing smartphones, Reflex reduces the average system power consumption by up to 81%.", "paper_title": "Reflex: Using Low-Power Processors in Smartphones without Knowing Them", "paper_id": "WOS:000209339300002"}