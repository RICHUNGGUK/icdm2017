{"auto_keywords": [{"score": 0.03185402246382477, "phrase": "minimum_sparsity"}, {"score": 0.02898452830624612, "phrase": "k-size_cut"}, {"score": 0.00481495049065317, "phrase": "unbalanced_cut_problems"}, {"score": 0.004089725258435817, "phrase": "ek-size"}, {"score": 0.003946195919158241, "phrase": "input_parameter"}, {"score": 0.003351381374975648, "phrase": "input_graph"}, {"score": 0.0030569913145731408, "phrase": "ek-size_cut"}, {"score": 0.0028459677232555176, "phrase": "bicriteria_approximation_algorithm"}, {"score": 0.0028026735035370206, "phrase": "k-sparsest_cut_problem"}, {"score": 0.0021049977753042253, "phrase": "minimum_conductance"}], "paper_keywords": ["Unbalanced cut", " Sparsest cut", " Network community", " Social networks", " Approximation algorithms"], "paper_abstract": "We investigate the unbalanced cut problems. A cut (A, B) is called unbalanced if the size of its smaller side is at most k (called k-size) or exactly k (called Ek-size), where k is an input parameter. We consider two closely related unbalanced cut problems, in which the quality of a cut is measured with respect to the sparsity and the conductance, respectively. We show that even if the input graph is restricted to be a tree, the Ek-Sparsest Cut problem (to find an Ek-size cut with the minimum sparsity) is still NP-hard. We give a bicriteria approximation algorithm for the k-Sparsest Cut problem (to find a k-size cut with the minimum sparsity), which outputs a cut whose sparsity is at most O(log n) times the optimum and whose smaller side has size at most O(log n) k. As a consequence, this leads to a (O(log n), O(log n))-bicriteria approximation algorithm for the Min k-Conductance problem (to find a k-size cut with the minimum conductance).", "paper_title": "Unbalanced Graph Partitioning", "paper_id": "WOS:000322744700005"}