{"auto_keywords": [{"score": 0.03696728512565971, "phrase": "embedded_blocks"}, {"score": 0.03039937299603838, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "reconfigurable_device"}, {"score": 0.004624751696958501, "phrase": "floating-point_applications"}, {"score": 0.004563028873351776, "phrase": "fine-grained_units"}, {"score": 0.004412285905508977, "phrase": "control_logic"}, {"score": 0.0043533862892678864, "phrase": "bit-oriented_operations"}, {"score": 0.004266501496765747, "phrase": "parameterized_and_reconfigurable_word-based_coarse-grained_units"}, {"score": 0.004043158538239064, "phrase": "floating-point_operations"}, {"score": 0.003704797078215222, "phrase": "existing_fpga_devices"}, {"score": 0.003630809610997277, "phrase": "virtual_embedded_block_scheme"}, {"score": 0.0034638476252104706, "phrase": "existing_field-programmable_gate_array"}, {"score": 0.003238517900104576, "phrase": "existing_fpga_resources"}, {"score": 0.0029873281676201565, "phrase": "embedded_elements"}, {"score": 0.002927626967420519, "phrase": "standard_design_flow"}, {"score": 0.002830757050018908, "phrase": "computer-aided_design_vendors"}, {"score": 0.0027187231747900814, "phrase": "timing_analysis"}, {"score": 0.002441118140830714, "phrase": "selected_floating-point_benchmark_circuits"}, {"score": 0.0023287359930308864, "phrase": "proposed_architecture"}, {"score": 0.0021049977753042253, "phrase": "traditional_fpga_device"}], "paper_keywords": ["Architecture", " embedded blocks", " field-programmable gate array (FPGA)", " floating point", " modeling"], "paper_abstract": "This paper presents an architecture for a reconfigurable device that is specifically optimized for floating-point applications. Fine-grained units are used for implementing control logic and bit-oriented operations, while parameterized and reconfigurable word-based coarse-grained units incorporating word-oriented lookup tables and floating-point operations are used to implement datapaths. In order to facilitate comparison with existing FPGA devices, the virtual embedded block scheme is proposed to model embedded blocks using existing field-programmable gate array (FPGA) tools. This methodology involves adopting existing FPGA resources to model the size, position, and delay of the embedded elements. The standard design flow offered by FPGA and computer-aided design vendors is then applied and static timing analysis can be used to estimate the performance of the FPGA with the embedded blocks. On selected floating-point benchmark circuits, our results indicate that the proposed architecture can achieve four times improvement in speed and 25 times reduction in area compared with a traditional FPGA device.", "paper_title": "Floating-Point FPGA: Architecture and Modeling", "paper_id": "WOS:000271958900005"}