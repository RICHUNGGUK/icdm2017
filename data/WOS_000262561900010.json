{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "hierarchical_cores"}, {"score": 0.010894129960730418, "phrase": "test_architecture"}, {"score": 0.010153538308647013, "phrase": "socs"}, {"score": 0.009462741062472853, "phrase": "first_approach"}, {"score": 0.008715500586557566, "phrase": "second_approach"}, {"score": 0.004279937931073062, "phrase": "hierarchy"}, {"score": 0.0038930368103015467, "phrase": "wrapper_design"}, {"score": 0.0038624981944755813, "phrase": "test_access_mechanism"}, {"score": 0.00383220733044266, "phrase": "tam"}, {"score": 0.0031970796597571367, "phrase": "corresponding_test_schedule"}, {"score": 0.0031595084685030845, "phrase": "nonhierarchical_socs"}, {"score": 0.0029781530607129653, "phrase": "efficient_testing"}, {"score": 0.002785133616425661, "phrase": "conventional_wrapper_design"}, {"score": 0.0027307746993761035, "phrase": "full_flexibility"}, {"score": 0.0027093285574752457, "phrase": "tam_optimization"}, {"score": 0.002688050388891007, "phrase": "test_scheduling"}, {"score": 0.0026045914281028473, "phrase": "modified_wrapper_design"}, {"score": 0.0025841336988141235, "phrase": "parent_cores"}, {"score": 0.0024842242921857705, "phrase": "child_cores"}, {"score": 0.0023787690061742566, "phrase": "corresponding_schedule"}, {"score": 0.002323142666222693, "phrase": "existing_test_architecture_design_algorithm"}, {"score": 0.002155412043665635, "phrase": "lower_test_application_times"}], "paper_keywords": ["SoC test", " TAMs and wrappers", " hierarchical SoCs", " test scheduling", " test architecture design"], "paper_abstract": "Many system-on-chip (SoC) integrated circuits today contain multiple hierarchy levels for both design and test. Hierarchy imposes constraints on the manner in which tests must be applied to \"parent\" cores and their \"child\" cores. However, most prior work on wrapper design, test access mechanism (TAM) optimization, and test scheduling is hierarchy oblivious, i.e., these techniques treat all cores in an SoC as if they are at the same level of hierarchy. We first show that the test architecture, consisting of wrappers and TAMs, and the corresponding test schedule designed for nonhierarchical SoCs are not valid for SoCs with hierarchical cores. Next, we present two approaches for efficient testing of SoCs with hierarchical cores. In the first approach, the problem is solved by extending a conventional wrapper design; this approach leaves full flexibility for TAM optimization and test scheduling. The second approach is based on a modified wrapper design for parent cores that operates in two disjoint modes for testing of parent and child cores. This approach has an impact on the test architecture and corresponding schedule. We show how an existing test architecture design algorithm can be adapted for use with both approaches. Experiments with the ITC'02 SoC Test Benchmarks show that the first approach offers lower test application times, while the second approach incurs less area costs.", "paper_title": "Testing of SoCs with Hierarchical Cores: Common Fallacies, Test Access Optimization, and Test Scheduling", "paper_id": "WOS:000262561900010"}