{"auto_keywords": [{"score": 0.038354821270219504, "phrase": "software_platform"}, {"score": 0.00481495049065317, "phrase": "safe_paas_clouds"}, {"score": 0.004702168843383725, "phrase": "multitenant_software_platforms"}, {"score": 0.0045302298105691615, "phrase": "software_platforms"}, {"score": 0.004092463367307375, "phrase": "malicious_or_faulty_code"}, {"score": 0.003983016985197904, "phrase": "normal_execution"}, {"score": 0.003850299959557491, "phrase": "security_requirement"}, {"score": 0.0036101552409969037, "phrase": "paas_systems"}, {"score": 0.0035615322947497013, "phrase": "safe_environments_users"}, {"score": 0.0034428109010424175, "phrase": "relevant_application"}, {"score": 0.0032061793819537633, "phrase": "paas_offer"}, {"score": 0.0029859281118356624, "phrase": "java"}, {"score": 0.0029256091368059446, "phrase": "security_mechanisms"}, {"score": 0.0028569549040495163, "phrase": "multitenant_platforms"}, {"score": 0.002678598911294797, "phrase": "standard_container_technologies"}, {"score": 0.0026424892463535717, "phrase": "enterprise_java_beans"}, {"score": 0.0025630077791393125, "phrase": "hosting_environment"}, {"score": 0.0025456716198597627, "phrase": "paas_clouds"}, {"score": 0.002494361792853831, "phrase": "brief_discussion"}, {"score": 0.0024774888010414206, "phrase": "operating_systems"}, {"score": 0.0024440836179156593, "phrase": "traditional_security_capacities"}, {"score": 0.0023385951973179217, "phrase": "paas"}, {"score": 0.002275939921439533, "phrase": "research_initiatives"}, {"score": 0.0022074592164608134, "phrase": "untrusted_code"}, {"score": 0.002148315508445588, "phrase": "multitenant_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Security", " Cloud", " PaaS", " Multitenancy", " Container", " Java", " .NET"], "paper_abstract": "This paper surveys the risks brought by multitenancy in software platforms, along with the most prominent solutions proposed to address them. A multitenant platform hosts and executes software from several users (tenants). The platform must ensure that no malicious or faulty code from any tenant can interfere with the normal execution of other users' code or with the platform itself. This security requirement is specially relevant in Platform-as-a-Service (PaaS) clouds. PaaS clouds offer an execution environment based on some software platform. Unless PaaS systems are deemed as safe environments users will be reluctant to trust them to run any relevant application. This requires to take into account how multitenancy is handled by the software platform used as the basis of the PaaS offer. This survey focuses on two technologies that are or will be the platform-of-choice in many PaaS clouds: Java and .NET. We describe the security mechanisms they provide, study their limitations as multitenant platforms and analyze the research works that try to solve those limitations. We include in this analysis some standard container technologies (such as Enterprise Java Beans) that can be used to standardize the hosting environment of PaaS clouds. Also we include a brief discussion of Operating Systems (OSs) traditional security capacities and why OSs are unlikely to be chosen as the basis of PaaS offers. Finally, we describe some research initiatives that reinforce security by monitoring the execution of untrusted code, whose results can be of interest in multitenant systems. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Building safe PaaS clouds: A survey on security in multitenant software platforms", "paper_id": "WOS:000301011700009"}