{"auto_keywords": [{"score": 0.04913171677961093, "phrase": "package_merge"}, {"score": 0.00481495049065317, "phrase": "uml_package"}, {"score": 0.003614895644619489, "phrase": "novel_construct"}, {"score": 0.0035670020476885503, "phrase": "uml"}, {"score": 0.0031006232333900055, "phrase": "ambiguous_and_missing_rules"}, {"score": 0.0026593184154220123, "phrase": "desirable_properties"}, {"score": 0.0025892925291998567, "phrase": "alloy"}, {"score": 0.002438203996977464, "phrase": "tool_support"}, {"score": 0.00235813005446246, "phrase": "mathematical_logic"}, {"score": 0.002250415129116109, "phrase": "general_taxonomy"}, {"score": 0.002220551141101661, "phrase": "package_extension_mechanisms"}, {"score": 0.0021333110194180997, "phrase": "unexpected_failure"}, {"score": 0.0021049977753042253, "phrase": "important_properties"}], "paper_keywords": ["UML", " semantics formalization", " model composition", " metamodeling techniques"], "paper_abstract": "Package merge allows the content of one package to be combined with that of another package. Package merge is used extensively in the UML 2 specification to modularize the definition of the UML 2 meta model and to define the four compliance levels of UML 2. Package merge is a novel construct in UML and currently not well understood. This paper summarizes our work to understand and improve package merge. First, we identify ambiguous and missing rules in the package merge definition and suggest corrections. Then, we formalize package merge and analyze it with respect to some desirable properties. Our analyses employs Alloy, a first-order modelling language with tool support, and concepts from mathematical logic which allow us to develop a general taxonomy of package extension mechanisms. The analyses reveal the unexpected failure of important properties.", "paper_title": "Understanding and improving UML package merge", "paper_id": "WOS:000259188200005"}