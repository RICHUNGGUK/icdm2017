{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ant_colony"}, {"score": 0.049198528177459636, "phrase": "event-flow_model"}, {"score": 0.0046394362688524475, "phrase": "graphical_user_interface_test_case_generation"}, {"score": 0.0044289730051264116, "phrase": "complex_and_inefficient_testing_issues"}, {"score": 0.003888905257972882, "phrase": "automatic_framework"}, {"score": 0.003817306032290766, "phrase": "gui_test_case_generation"}, {"score": 0.003610292749660581, "phrase": "reverse_engineering"}, {"score": 0.003543804852018315, "phrase": "executive_gui"}, {"score": 0.003446353878654566, "phrase": "gui_information"}, {"score": 0.0030825404960282713, "phrase": "ant_colony_algorithm"}, {"score": 0.002942495422585405, "phrase": "test_cases"}, {"score": 0.002731500545019039, "phrase": "valid_event_interactions"}, {"score": 0.002656327554326748, "phrase": "generated_test_cases"}, {"score": 0.0025355968118803956, "phrase": "deep_faults"}, {"score": 0.002488851299416018, "phrase": "infeasible_problems"}, {"score": 0.002375714262344562, "phrase": "different_parameters"}, {"score": 0.002267708463966758, "phrase": "good_design"}, {"score": 0.0022052711621931144, "phrase": "proposed_framework"}, {"score": 0.0021646022201798247, "phrase": "flexible_interfaces"}, {"score": 0.0021049977753042253, "phrase": "test_suites"}], "paper_keywords": [""], "paper_abstract": "Aimed at the complex and inefficient testing issues of graphical user interface (GUI) software, this study describes an automatic framework for GUI test case generation. The framework includes a reverse engineering of executive GUI to create GUI information and event-flow model. According to these information and model, an ant colony algorithm is applied to generate test cases. The study shows that by identifying valid event interactions, the generated test cases are capable of finding deep faults without infeasible problems; the configuration of different parameters for ant colony and the good design of the proposed framework provide flexible interfaces to control test suites.", "paper_title": "Apply ant colony to event-flow model for graphical user interface test case generation", "paper_id": "WOS:000308233300004"}