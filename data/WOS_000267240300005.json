{"auto_keywords": [{"score": 0.049445419527232116, "phrase": "freyd"}, {"score": 0.00481495049065317, "phrase": "moggi's_computational_monads_and_power_et_al.'s_equivalent_notion"}, {"score": 0.004386063799793622, "phrase": "programming_languages"}, {"score": 0.003995226376780718, "phrase": "side_effects"}, {"score": 0.0037624955853577786, "phrase": "computational_monads"}, {"score": 0.003712640297460159, "phrase": "freyd_categories"}, {"score": 0.003359119985242403, "phrase": "computational_effects"}, {"score": 0.003314591878914152, "phrase": "para_meters"}, {"score": 0.0031845067058084613, "phrase": "composable_continuations"}, {"score": 0.0027131212233443137, "phrase": "structured_parameterisation"}, {"score": 0.002520990102833368, "phrase": "separated_side_effects"}, {"score": 0.0024875444192203485, "phrase": "multiple_independent_streams"}, {"score": 0.0022806798371116698, "phrase": "categorical_definitions"}, {"score": 0.0022057677637040396, "phrase": "symmetric_monoidal_parameterisation"}, {"score": 0.0021333110194180997, "phrase": "prototypical_languages"}, {"score": 0.0021049977753042253, "phrase": "parameterised_effects"}], "paper_keywords": [""], "paper_abstract": "Moggi's computational Monads and Power et al.'s equivalent notion of Freyd category have captured a large range of computational effects present in programming languages. Examples include non-termination, non-determinism, exceptions, continuations, side effects and input/output. We present generalisations of both computational monads and Freyd categories, which we call parameterised monads and parameterised Freyd categories, that also capture computational effects with para meters. Examples of such are composable continuations, side effects where the type of the state varies and input/output where the range of inputs and outputs varies. By considering structured parameterisation also, we extend the range of effects to cover separated side effects and Multiple independent streams of I/O. We also present two typed lambda-calculi that Soundly and completely model out categorical definitions - with and without symmetric monoidal parameterisation - and act as prototypical languages with parameterised effects.", "paper_title": "Parameterised notions of computation", "paper_id": "WOS:000267240300005"}