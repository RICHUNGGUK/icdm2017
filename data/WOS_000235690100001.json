{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "product_family"}, {"score": 0.04011776510220632, "phrase": "object-oriented_design"}, {"score": 0.004650896226390719, "phrase": "software_engineering_concepts"}, {"score": 0.004466519142879166, "phrase": "software_development"}, {"score": 0.004071957673937727, "phrase": "software_product_families"}, {"score": 0.003978866233891427, "phrase": "related_products"}, {"score": 0.003910441483033426, "phrase": "intensive_reuse"}, {"score": 0.0038654774211631564, "phrase": "already_developed_components"}, {"score": 0.003523822585025555, "phrase": "product_families"}, {"score": 0.003268516165008944, "phrase": "meshing_tools"}, {"score": 0.0031937337757356526, "phrase": "family_members"}, {"score": 0.003138768436081888, "phrase": "software_structure"}, {"score": 0.0030141556259370675, "phrase": "particular_algorithms"}, {"score": 0.002877769867854964, "phrase": "different_tools"}, {"score": 0.0027795345823932406, "phrase": "good_family_design"}, {"score": 0.0026691455928407022, "phrase": "existing_algorithms"}, {"score": 0.0025780134737796085, "phrase": "new_ones"}, {"score": 0.0025336179740814905, "phrase": "software_family_evolution"}, {"score": 0.002447101794397243, "phrase": "family_design"}, {"score": 0.002349884235026956, "phrase": "finite_element"}, {"score": 0.0022048406330100697, "phrase": "new_tool"}, {"score": 0.0021794454466797382, "phrase": "image_processing"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["meshing tools", " object-oriented design", " software product family"], "paper_abstract": "Applying software engineering concepts can improve the quality of any software development, and this is even more dramatic for complex, large and sophisticated software, such as meshing tools. Software product families are series of related products that make intensive reuse of already developed components. Object-oriented design promotes reusability, so it is specially suited for designing the structure of product families. In this paper we present an object-oriented design of a product family of meshing tools, where all family members share the software structure. By instantiating the structure with particular algorithms and parameters, we can easily produce different tools of the family. A good family design allows us not only to combine existing algorithms but also to easily incorporate new ones, improving software family evolution. We show how the family design is used for the generation of finite element and finite volume meshing tools, as well as a new tool for image processing. (C) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Designing a product family of meshing tools", "paper_id": "WOS:000235690100001"}