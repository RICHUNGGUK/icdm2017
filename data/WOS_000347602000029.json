{"auto_keywords": [{"score": 0.047319915496406253, "phrase": "k-reversible_process"}, {"score": 0.033217995657831983, "phrase": "predecessor_existence"}, {"score": 0.00481495049065317, "phrase": "k-reversible_processes"}, {"score": 0.004276541976450121, "phrase": "discrete_time"}, {"score": 0.0041515831652973794, "phrase": "present_time"}, {"score": 0.0036598289615980837, "phrase": "predecessor_existence_problem"}, {"score": 0.003436169600453596, "phrase": "exactly_one_time_step"}, {"score": 0.0030856268625708695, "phrase": "polynomial_time"}, {"score": 0.00290891457752536, "phrase": "np"}, {"score": 0.0028648759706752162, "phrase": "bipartite_graphs"}, {"score": 0.002572463625403536, "phrase": "predecessor_configurations"}, {"score": 0.0024240794798626674, "phrase": "specific_case"}, {"score": 0.002379484250348599, "phrase": "maximum_degree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["k-Reversible processes", " Garden-of-Eden configurations", " Predecessor-existence problem", " Graph dynamical systems"], "paper_abstract": "For k >= 1, we consider the graph dynamical system known as a k-reversible process. In such a process, each vertex in the graph has one of two possible states at each discrete time. Each vertex changes its state between the present time and the next if and only if it currently has at least k neighbors in a state different than its own. Given a k-reversible process and a configuration of states assigned to the vertices, the PREDECESSOR EXISTENCE problem consists of determining whether this configuration can be generated by the process from another configuration within exactly one time step. We can also extend the problem by asking for the number of configurations from which a given configuration is reachable within one time step. PREDECESSOR EXISTENCE can be solved in polynomial time for k = 1, but for k > 1 we show that it is NP-complete for bipartite graphs. When the graph in question is a tree we show how to solve it in O (n) time and how to count the number of predecessor configurations in O (n(2)) time. We also solve PREDECESSOR EXISTENCE efficiently for the specific case of 2-reversible processes when the maximum degree of a vertex in the graph is no greater than 3. For this case we present an algorithm that runs in O (n) time. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "The predecessor-existence problem for k-reversible processes", "paper_id": "WOS:000347602000029"}