{"auto_keywords": [{"score": 0.03929444231178765, "phrase": "vm-based_web_system"}, {"score": 0.00481495049065317, "phrase": "scalable_web_systems"}, {"score": 0.004764542405129454, "phrase": "multicore_clusters"}, {"score": 0.004640808212832262, "phrase": "virtual_machines"}, {"score": 0.004520272777451894, "phrase": "existing_design_pattern"}, {"score": 0.004402854153653114, "phrase": "existing_softwares"}, {"score": 0.004288472456976113, "phrase": "full_use"}, {"score": 0.004243552607799184, "phrase": "multicore_processing_power"}, {"score": 0.004177049813981273, "phrase": "low_utilization"}, {"score": 0.004089991141220082, "phrase": "even_a_bottleneck"}, {"score": 0.004025885154716127, "phrase": "whole_system"}, {"score": 0.0035477930970463432, "phrase": "linux_virtual_server"}, {"score": 0.003510612013777509, "phrase": "lvs"}, {"score": 0.0034013521529056715, "phrase": "web_server"}, {"score": 0.003365694087781389, "phrase": "tomcat"}, {"score": 0.0032954888655173666, "phrase": "mean_time"}, {"score": 0.003226744277130179, "phrase": "vnix"}, {"score": 0.0031428202743657057, "phrase": "vm_management_toolkit"}, {"score": 0.0030772505522663612, "phrase": "managing_vms"}, {"score": 0.00291923164591297, "phrase": "multicore_cpu_power"}, {"score": 0.002858313353461727, "phrase": "resources_contention"}, {"score": 0.002740253546178098, "phrase": "lvs_schedulers"}, {"score": 0.002697245874076643, "phrase": "different_physical_nodes"}, {"score": 0.0025858215477025117, "phrase": "extensive_experiments"}, {"score": 0.002518525107994039, "phrase": "classical_physical_machine-based_web_system"}, {"score": 0.0024144659350277954, "phrase": "proposed_vm-based_web_system"}, {"score": 0.0022307779508260205, "phrase": "error_rate"}, {"score": 0.0021957487795963666, "phrase": "server_side"}, {"score": 0.0021049977753042253, "phrase": "classic_systems"}], "paper_keywords": [""], "paper_abstract": "Limited by the existing design pattern, a lot of existing softwares have not yet taken full use of multicore processing power, incurring low utilization of hardware, even a bottleneck of the whole system. To address this problem, in this paper, we propose a VM-based Web system on multicore clusters. The VM-based Web system is scheduled by Linux Virtual Server (LVS) and we implement the web server with Tomcat. In the mean time, we develop VNIX, a set of VM management toolkit, to facilitate managing VMs on clusters, aiming at improving the usage of multicore CPU power. To reduce resources contention among VMs, we propose to deploy LVS schedulers distributively on different physical nodes. To evaluate our approach, we conduct extensive experiments to compare VM-based Web system with classical physical machine-based Web system. Our experimental results demonstrate that the proposed VM-based Web system can result in throughput improvements of up to three times compared with the same multicore clusters, with an error rate at the server side as low as 20% of that of classic systems.", "paper_title": "Toward scalable Web systems on multicore clusters: making use of virtual machines", "paper_id": "WOS:000305224000003"}