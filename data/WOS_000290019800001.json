{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "type_constraints"}, {"score": 0.004674952036988355, "phrase": "subtype_relationships"}, {"score": 0.004505638402009237, "phrase": "program_expressions"}, {"score": 0.004154332348800334, "phrase": "type_correctness"}, {"score": 0.003916098498242888, "phrase": "convenient_framework"}, {"score": 0.003830312347175889, "phrase": "type_checking"}, {"score": 0.003774164192882704, "phrase": "type_inference_problems"}, {"score": 0.0034034331737042363, "phrase": "practical_refactoring_tools"}, {"score": 0.003091767402370757, "phrase": "type-correct_program"}, {"score": 0.0030239842475439814, "phrase": "main_insight"}, {"score": 0.0027673496368158545, "phrase": "constraint_system"}, {"score": 0.0026867260506696455, "phrase": "alternative_solutions"}, {"score": 0.002570162055835289, "phrase": "refactored_versions"}, {"score": 0.002317423416027688, "phrase": "class_hierarchies"}, {"score": 0.0021363670305843403, "phrase": "standard_distribution"}, {"score": 0.0021050299956372263, "phrase": "eclipse"}], "paper_keywords": ["Algorithms", " Design", " Languages", " Refactoring", " type constraints", " program transformation"], "paper_abstract": "Type constraints express subtype relationships between the types of program expressions, for example, those relationships that are required for type correctness. Type constraints were originally proposed as a convenient framework for solving type checking and type inference problems. This paper shows how type constraints can be used as the basis for practical refactoring tools. In our approach, a set of type constraints is derived from a type-correct program P. The main insight behind our work is the fact that P constitutes just one solution to this constraint system, and that alternative solutions may exist that correspond to refactored versions of P. We show how a number of refactorings for manipulating types and class hierarchies can be expressed naturally using type constraints. Several refactorings in the standard distribution of Eclipse are based on our work.", "paper_title": "Refactoring Using Type Constraints", "paper_id": "WOS:000290019800001"}