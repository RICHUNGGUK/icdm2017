{"auto_keywords": [{"score": 0.04410425397162581, "phrase": "knapsack_problem"}, {"score": 0.04284446828228854, "phrase": "nk_subproblems"}, {"score": 0.00481495049065317, "phrase": "incremental_dynamic_programming"}, {"score": 0.004700193486903964, "phrase": "so-called_\"incremental\"_dynamic_programming_algorithms"}, {"score": 0.004293584349522444, "phrase": "classical_dynamic_programming_algorithm"}, {"score": 0.003570344020052068, "phrase": "k"}, {"score": 0.003496994062890991, "phrase": "knapsack_capacity"}, {"score": 0.0033725614574134396, "phrase": "incremental_algorithm"}, {"score": 0.0031367803372203498, "phrase": "nklogk_wires"}, {"score": 0.0028823939507764238, "phrase": "subset-sum_problem"}, {"score": 0.002419025278429845, "phrase": "traveling_salesman_problem"}, {"score": 0.002389956401870098, "phrase": "exponential_number"}, {"score": 0.002169607777109063, "phrase": "boolean_circuit_complexity"}, {"score": 0.0021306081217770173, "phrase": "lower_bounds"}, {"score": 0.0021049977753042253, "phrase": "dynamic_programming"}], "paper_keywords": ["Dynamic programming", " Knapsack", " Matching", " Branching programs", " Lower bounds"], "paper_abstract": "We consider so-called \"incremental\" dynamic programming algorithms, and are interested in the number of subproblems produced by them. The classical dynamic programming algorithm for the Knapsack problem is incremental, produces nK subproblems and nK (2) relations (wires) between the subproblems, where n is the number of items, and K is the knapsack capacity. We show that any incremental algorithm for this problem must produce about nK subproblems, and that about nKlogK wires (relations between subproblems) are necessary. This holds even for the Subset-Sum problem. We also give upper and lower bounds on the number of subproblems needed to approximate the Knapsack problem. Finally, we show that the Maximum Bipartite Matching problem and the Traveling Salesman problem require exponential number of subproblems. The goal of this paper is to leverage ideas and results of boolean circuit complexity for proving lower bounds on dynamic programming.", "paper_title": "Limitations of Incremental Dynamic Programming", "paper_id": "WOS:000334062500011"}