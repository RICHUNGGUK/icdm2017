{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "event_calculus"}, {"score": 0.03897200869072899, "phrase": "workflow_manager"}, {"score": 0.009065175993140516, "phrase": "control_flow_graph"}, {"score": 0.0046928556063004214, "phrase": "logic_programming_formalism"}, {"score": 0.0045348429403481464, "phrase": "database_applications"}, {"score": 0.004363401436068803, "phrase": "logic-based_methodology"}, {"score": 0.004056981775766067, "phrase": "workflow_specification"}, {"score": 0.003920295222165263, "phrase": "logical_formulas"}, {"score": 0.003582928547553209, "phrase": "execution_dependencies"}, {"score": 0.00350696416714684, "phrase": "proposed_framework"}, {"score": 0.003044313656896057, "phrase": "already_occurred_events"}, {"score": 0.0029797347088361056, "phrase": "new_events"}, {"score": 0.0029416448256236057, "phrase": "new_activities"}, {"score": 0.0028060889647071787, "phrase": "net_effect"}, {"score": 0.0027702126237754625, "phrase": "alternative_approach"}, {"score": 0.0027230880516264685, "phrase": "workflow_engine"}, {"score": 0.0026425357050743003, "phrase": "operational_semantics"}, {"score": 0.002608744950946475, "phrase": "deductive_database"}, {"score": 0.00249919111154604, "phrase": "sequential_and_concurrent_activities"}, {"score": 0.002373767863833987, "phrase": "agent_assignment"}, {"score": 0.0023333715029833007, "phrase": "concurrent_workflow_instances"}, {"score": 0.0022449697898020947, "phrase": "logical_perspective"}, {"score": 0.0021599099979586946, "phrase": "workflow_management_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["event calculus", " workflow formalization", " temporal reasoning"], "paper_abstract": "The event calculus is a logic programming formalism for representing events and their effects especially in database applications. This paper proposes the event calculus as a logic-based methodology for the specification and execution of workflows. It is shown that the control flow graph of a workflow specification can be expressed as a set of logical formulas and the event calculus can be used to specify the role of a workflow manager through a set of rules for the execution dependencies of activities. The proposed framework for a workflow manager maintains a history of events to control the execution of activities. The events are instructions to the workflow manager to coordinate the execution of activities. Based on the already occurred events, the workflow manager triggers new events to schedule new activities in accordance with the control flow graph of the workflow. The net effect is an alternative approach for defining a workflow engine whose operational semantics is naturally integrated with the operational semantics of a deductive database. Within this framework it is possible to model sequential and concurrent activities with or without synchronization. It is also possible to model agent assignment and execution of concurrent workflow instances. The paper, thus, contributes a logical perspective to the task of developing formalization for the workflow management systems. (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Formalizing the specification and execution of workflows using the event calculus", "paper_id": "WOS:000238666000006"}