{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "underlying_relationships"}, {"score": 0.004681525814235883, "phrase": "monitoring_purposes"}, {"score": 0.004603244077348199, "phrase": "traffic_monitoring"}, {"score": 0.004475659507646842, "phrase": "poor_information"}, {"score": 0.004425616928975799, "phrase": "traffic_volume"}, {"score": 0.0043029342321223825, "phrase": "clear_view"}, {"score": 0.004207230913063179, "phrase": "hidden_rules"}, {"score": 0.003104849179057156, "phrase": "hidden_relationships"}, {"score": 0.002918394200972564, "phrase": "specific_applications"}, {"score": 0.0027586758630745467, "phrase": "ip"}, {"score": 0.0027123819773059127, "phrase": "service_ports"}, {"score": 0.0026370661343466354, "phrase": "novel_hybrid_genetic_algorithm"}, {"score": 0.0025928815987676535, "phrase": "small_set"}, {"score": 0.0025638362414466278, "phrase": "fuzzy_rules"}, {"score": 0.0023296961971785357, "phrase": "service_graph"}, {"score": 0.002264982416465872, "phrase": "useful_tool"}, {"score": 0.0022396019251440724, "phrase": "fault_localization"}, {"score": 0.0022145052062614514, "phrase": "monitoring_service_performance"}, {"score": 0.0021529842700733974, "phrase": "anomaly_detection_copyright"}], "paper_keywords": [""], "paper_abstract": "Nowadays traffic monitoring and analysis tools provide poor information about traffic volume. without giving any clear view of what the hidden rules and relationships that govern these flows are Since the majority of flows is generated by services (web browsing, email, p2p) and most of these applications are dependent on many network assets (servers and databases) we should discover the underlying relationships of every application We present a technique that discovers the hidden relationships among components of a network that consist of parts of specific applications From time Information and flow attributes, such as IP addresses and Service ports, our method using a novel hybrid genetic algorithm produces a small set of fuzzy rules that can reveal the underlying relationships over a network without any guidance. These dependencies build a service graph which can become a useful tool for fault localization, monitoring service performance, designing changes and anomaly detection Copyright (C) 2009 John Wiley & Sons, Ltd", "paper_title": "Unveiling the underlying relationships over a network for monitoring purposes", "paper_id": "WOS:000274439900005"}