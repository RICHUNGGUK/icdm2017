{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "predicate_transformers"}, {"score": 0.005619557584680655, "phrase": "healthiness_conditions"}, {"score": 0.004478308876320956, "phrase": "input_states"}, {"score": 0.004435230698216773, "phrase": "output_states"}, {"score": 0.0043713857434347254, "phrase": "state_transformer_semantics"}, {"score": 0.004267004541988167, "phrase": "verification_purposes"}, {"score": 0.0041450181887917135, "phrase": "'predicate_transformer_semantics"}, {"score": 0.0038924989779389424, "phrase": "weakest_precondition"}, {"score": 0.00376293585033711, "phrase": "desired_property"}, {"score": 0.0036026484429137998, "phrase": "computational_effects"}, {"score": 0.0033667304423940893, "phrase": "map_t"}, {"score": 0.0031922210879462513, "phrase": "appropriate_computational_monad"}, {"score": 0.003146212656743413, "phrase": "corresponding_predicate_transformer"}, {"score": 0.0030267296900520217, "phrase": "x._one"}, {"score": 0.0027474453262607834, "phrase": "state_transformers"}, {"score": 0.0023759728305710365, "phrase": "almost_all_situations"}, {"score": 0.0021670777282518424, "phrase": "new_results"}, {"score": 0.0021049977753042253, "phrase": "quite_narrow_limitations"}], "paper_keywords": ["predicate transformers", " healthiness conditions", " continuation monad", " commuting operations", " entropic algebras"], "paper_abstract": "The behavior of a program can be modeled by describing how it transforms input states to output states, the state transformer semantics. Alternatively, for verification purposes one is interested in a 'predicate transformer semantics' which, for every condition on the output, yields the weakest precondition on the input that guarantees the desired property for the output. In the presence of computational effects like nondeterministic or probabilistic choice, a computation will be modeled by a map t: X -> TY, where T is an appropriate computational monad. The corresponding predicate transformer assigns predicates on Y to predicates on X. One looks for necessary and, if possible, sufficient conditions (healthiness conditions) on predicate transformers that correspond to state transformers t: X -> TY. In this paper we propose a framework for establishing healthiness conditions for predicate transformers. As far as the author knows, it fits to almost all situations in which healthiness conditions for predicate transformers have been worked out. It may serve as a guideline for finding new results; but it also shows quite narrow limitations.", "paper_title": "Healthiness Conditions for Predicate Transformers", "paper_id": "WOS:000372714600016"}