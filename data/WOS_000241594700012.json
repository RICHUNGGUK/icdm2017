{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "minimal-interval_semantics"}, {"score": 0.027435990507147418, "phrase": "input_antichains"}, {"score": 0.0038226070564362697, "phrase": "minimal_regions"}, {"score": 0.0034148795808317555, "phrase": "user_presentation"}, {"score": 0.003050508020268648, "phrase": "logic_conjunction"}, {"score": 0.002969628818856786, "phrase": "basic_issue"}, {"score": 0.0028446460307503343, "phrase": "first_algorithms"}, {"score": 0.0022696277881969896, "phrase": "random_access"}, {"score": 0.0021049977753042253, "phrase": "large-scale_web_search_engines"}], "paper_keywords": [""], "paper_abstract": "Minimal-interval semantics [3] associates with each query over a document a set of intervals, called witnesses, that are incomparable with respect to inclusion (i.e., they form an antichain): witnesses define the minimal regions of the document satisfying the query. Minimal-interval semantics makes it easy to define and compute several sophisticated proximity operators, provides snippets for user presentation, and can be used to rank documents: thus, computing efficiently the antichains obtained by operations such as logic conjunction and disjunction is a basic issue. In this paper we provide the first algorithms for computing such operators that are linear in the number of intervals and logarithmic in the number of input antichains. The space used is linear in the number of antichains. Moreover, the algorithms are lazy-they do not assume random access to the input antichains. These properties make the usage of our algorithms feasible in large-scale web search engines.", "paper_title": "Efficient lazy algorithms for minimal-interval semantics", "paper_id": "WOS:000241594700012"}