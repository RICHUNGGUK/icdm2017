{"auto_keywords": [{"score": 0.040387229066893286, "phrase": "gpu"}, {"score": 0.00831936995620036, "phrase": "fdtd"}, {"score": 0.004458722048888919, "phrase": "popular_but_computational_intensive_method"}, {"score": 0.0043738432231020885, "phrase": "maxwell's_equations"}, {"score": 0.0043181530164057135, "phrase": "electrical_and_optical_devices_simulation"}, {"score": 0.0041287394089001405, "phrase": "three-dimensional_fdtd"}, {"score": 0.004076157223660074, "phrase": "convolutional_perfect_match_layer"}, {"score": 0.003947601392882997, "phrase": "boundary_conditions"}, {"score": 0.0038973170902076707, "phrase": "graphics_processing_unit"}, {"score": 0.0037743802306714545, "phrase": "electromagnetic_fields"}, {"score": 0.0037262941538784094, "phrase": "yee_cells"}, {"score": 0.003631945391344252, "phrase": "parallel_millions"}, {"score": 0.0034063576796640603, "phrase": "compute_unified_device_architecture"}, {"score": 0.0033200826267264383, "phrase": "programming_model"}, {"score": 0.0032777653153451265, "phrase": "considerable_speedup_factors"}, {"score": 0.003194736764837261, "phrase": "sequential_cpu_code"}, {"score": 0.0030938932434437178, "phrase": "parallel_algorithm"}, {"score": 0.003054450075234415, "phrase": "multiple_gpus"}, {"score": 0.002958021635132416, "phrase": "electrically_large_structures"}, {"score": 0.0029203055813347874, "phrase": "asynchronous_memory_copy_scheme"}, {"score": 0.0028463059289874637, "phrase": "data_exchange_procedure"}, {"score": 0.0027741761880779535, "phrase": "computation_efficiency"}, {"score": 0.0026184796288543878, "phrase": "pointwise_source_radiation"}, {"score": 0.0024874156497091994, "phrase": "high_precision_computation"}, {"score": 0.0024243586247372087, "phrase": "favorable_agreements"}, {"score": 0.0023327506323251074, "phrase": "single_personal_computer"}, {"score": 0.0021049977753042253, "phrase": "traditional_cpu_computation"}], "paper_keywords": ["Finite-difference time-domain", " graphics processing unit", " convolutional perfect match layer", " compute unified device architecture"], "paper_abstract": "Finite-difference time-domain (FDTD) is a popular but computational intensive method to solve Maxwell's equations for electrical and optical devices simulation. This paper presents implementations of three-dimensional FDTD with convolutional perfect match layer (CPML) absorbing boundary conditions on graphics processing unit (GPU). Electromagnetic fields in Yee cells are calculated in parallel millions of threads arranged as a grid of blocks with compute unified device architecture (CUDA) programming model and considerable speedup factors are obtained versus sequential CPU code. We extend the parallel algorithm to multiple GPUs in order to solve electrically large structures. Asynchronous memory copy scheme is used in data exchange procedure to improve the computation efficiency. We successfully use this technique to simulate pointwise source radiation and validate the result by comparison to high precision computation, which shows favorable agreements. With four commodity GTX295 graphics cards on a single personal computer, more than 4000 million Yee cells can be updated in one second, which is hundreds of times faster than traditional CPU computation.", "paper_title": "PARALLEL 3D FINITE-DIFFERENCE TIME-DOMAIN METHOD ON MULTI-GPU SYSTEMS", "paper_id": "WOS:000288566500002"}