{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "query_formulation_language"}, {"score": 0.04952525101149597, "phrase": "data_web"}, {"score": 0.03421376944965005, "phrase": "mashql"}, {"score": 0.00445550467119693, "phrase": "structured_data"}, {"score": 0.004352974291381376, "phrase": "main_novelty"}, {"score": 0.0042035670399069485, "phrase": "limited_it_skills"}, {"score": 0.003859500298805362, "phrase": "technical_details"}, {"score": 0.0035297609635321203, "phrase": "data_source"}, {"score": 0.00326594229173048, "phrase": "query_formulation_power"}, {"score": 0.0031050953733360825, "phrase": "data_web_scenario"}, {"score": 0.003033608749866697, "phrase": "rdf"}, {"score": 0.002839625463110821, "phrase": "relational_databases"}, {"score": 0.00281764895084491, "phrase": "xml."}, {"score": 0.0024307237540684076, "phrase": "piping_web_feeds"}, {"score": 0.002393218189218813, "phrase": "firefox"}, {"score": 0.002310915790114425, "phrase": "web_composer"}, {"score": 0.002179986401502467, "phrase": "dblp"}, {"score": 0.0021630968260282035, "phrase": "dbpedia"}, {"score": 0.0021049977753042253, "phrase": "instant_user_interaction"}], "paper_keywords": ["Query formulation", " semantic\\data web", " RDF and SPARQL", " indexing methods"], "paper_abstract": "We present a query formulation language (called MashQL) in order to easily query and fuse structured data on the web. The main novelty of MashQL is that it allows people with limited IT skills to explore and query one (or multiple) data sources without prior knowledge about the schema, structure, vocabulary, or any technical details of these sources. More importantly, to be robust and cover most cases in practice, we do not assume that a data source should have-an offline or inline-schema. This poses several language-design and performance complexities that we fundamentally tackle. To illustrate the query formulation power of MashQL, and without loss of generality, we chose the Data web scenario. We also chose querying RDF, as it is the most primitive data model; hence, MashQL can be similarly used for querying relational databases and XML. We present two implementations of MashQL, an online mashup editor, and a Firefox add on. The former illustrates how MashQL can be used to query and mash up the Data web as simple as filtering and piping web feeds; and the Firefox add on illustrates using the browser as a web composer rather than only a navigator. To end, we evaluate MashQL on querying two data sets, DBLP and DBPedia, and show that our indexing techniques allow instant user interaction.", "paper_title": "A Query Formulation Language for the Data Web", "paper_id": "WOS:000301746800002"}