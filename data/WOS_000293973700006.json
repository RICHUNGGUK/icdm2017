{"auto_keywords": [{"score": 0.04380655797740593, "phrase": "application_execution"}, {"score": 0.035680674196695655, "phrase": "rescheduling_plans"}, {"score": 0.01553194239510187, "phrase": "multi-cluster_grids"}, {"score": 0.00481495049065317, "phrase": "tightly-coupled_parallel_applications"}, {"score": 0.004670896353428476, "phrase": "computational_grids"}, {"score": 0.004449280529563265, "phrase": "multi-phase_parallel_applications"}, {"score": 0.004263972370406983, "phrase": "efficient_rescheduling_frameworks"}, {"score": 0.003574695610710444, "phrase": "parallel_applications"}, {"score": 0.0033029038236817372, "phrase": "potential_points"}, {"score": 0.0030147970456037274, "phrase": "large_number"}, {"score": 0.0027184540871935284, "phrase": "large_decrease"}, {"score": 0.002685558057339722, "phrase": "application_execution_times"}, {"score": 0.0025578967205807843, "phrase": "dynamic_grid_resources"}, {"score": 0.0022923586577645143, "phrase": "near-optimal_plans"}, {"score": 0.0022508572821818124, "phrase": "brute-force_methods"}, {"score": 0.0021700901058417602, "phrase": "genetic_algorithm"}], "paper_keywords": ["Rescheduling", " Parallel applications", " Multi-phase", " Rescheduling plans"], "paper_abstract": "As computational Grids are increasingly used for executing long running multi-phase parallel applications, it is important to develop efficient rescheduling frameworks that adapt application execution in response to resource and application dynamics. In this paper, three strategies or algorithms have been developed for deciding when and where to reschedule parallel applications that execute on multi-cluster Grids. The algorithms derive rescheduling plans that consist of potential points in application execution for rescheduling and schedules of resources for application execution between two consecutive rescheduling points. Using large number of simulations, it is shown that the rescheduling plans developed by the algorithms can lead to large decrease in application execution times when compared to executions without rescheduling on dynamic Grid resources. The rescheduling plans generated by the algorithms are also shown to be competitive when compared to the near-optimal plans generated by brute-force methods. Of the algorithms, genetic algorithm yielded the most efficient rescheduling plans with 9-12% smaller average execution times than the other algorithms.", "paper_title": "Strategies for Rescheduling Tightly-Coupled Parallel Applications in Multi-Cluster Grids", "paper_id": "WOS:000293973700006"}