{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "dynamic_workflows"}, {"score": 0.015435256974963694, "phrase": "scientific_workflows"}, {"score": 0.013705970178363456, "phrase": "user_input"}, {"score": 0.013581150785661902, "phrase": "dynamic_steering"}, {"score": 0.004661868629458321, "phrase": "computational_science_simulations"}, {"score": 0.0045765783794477505, "phrase": "dynamic_processes"}, {"score": 0.004513631630494221, "phrase": "runtime_scientific_data_analyses"}, {"score": 0.004096493540086106, "phrase": "data-centric_iteration"}, {"score": 0.004040123129261597, "phrase": "important_step"}, {"score": 0.003966162568548304, "phrase": "user_interaction"}, {"score": 0.0038222630466021494, "phrase": "current_support"}, {"score": 0.0033739270918502285, "phrase": "algebraic_operators"}, {"score": 0.0033274664434575136, "phrase": "dynamic_execution_model"}, {"score": 0.003281643474564305, "phrase": "workflow_adaptation"}, {"score": 0.0031045562469735307, "phrase": "iteration_lineage"}, {"score": 0.0030617935728586006, "phrase": "provenance_data_management"}, {"score": 0.0030196181347744372, "phrase": "dynamic_iterative_workflow_changes"}, {"score": 0.0029918372556513376, "phrase": "lineage"}, {"score": 0.002909960617042717, "phrase": "workflow_data"}, {"score": 0.002817298064454963, "phrase": "api"}, {"score": 0.0026651772919894534, "phrase": "real_large-scale_workflow"}, {"score": 0.0025329623864528317, "phrase": "impressive_execution_time_savings"}, {"score": 0.0024636239664210433, "phrase": "non-iterative_workflow_execution"}, {"score": 0.002396179086883187, "phrase": "maximum_overhead"}, {"score": 0.0023198180380964305, "phrase": "execution_time"}, {"score": 0.002164264600379492, "phrase": "worst-case_scenario"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scientific workflows", " Dynamic workflows", " Iteration", " Steering"], "paper_abstract": "Dynamic workflows are scientific workflows to support computational science simulations, typically using dynamic processes based on runtime scientific data analyses. They require the ability of adapting the workflow, at runtime, based on user input and dynamic steering. Supporting data-centric iteration is an important step towards dynamic workflows because user interaction with workflows is iterative. However, current support for iteration in scientific workflows is static and does not allow for changing data at runtime. In this paper, we propose a solution based on algebraic operators and a dynamic execution model to enable workflow adaptation based on user input and dynamic steering. We introduce the concept of iteration lineage that makes provenance data management consistent with dynamic iterative workflow changes. Lineage enables scientists to interact with workflow data and configuration at runtime through an API that triggers steering. We evaluate our approach using a novel and real large-scale workflow for uncertainty quantification on a 640-core cluster. The results show impressive execution time savings from 2.5 to 24 days, compared to non-iterative workflow execution. We verify that the maximum overhead introduced by our iterative model is less than 5% of execution time. Also, our proposed steering algorithms are very efficient and run in less than 1 millisecond, in the worst-case scenario. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Data-centric iteration in dynamic workflows", "paper_id": "WOS:000350937100009"}