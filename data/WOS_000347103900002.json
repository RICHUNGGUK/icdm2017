{"auto_keywords": [{"score": 0.04752155296993489, "phrase": "similarity_relations"}, {"score": 0.03754363682447156, "phrase": "proximity_relations"}, {"score": 0.004815664701991996, "phrase": "proximity"}, {"score": 0.004710489616113198, "phrase": "similarity-based_logic_programming"}, {"score": 0.004591466267316524, "phrase": "logic_programming_paradigm"}, {"score": 0.004426607895888934, "phrase": "vague_or_imprecise_information"}, {"score": 0.004378309349451268, "phrase": "similarity_relation"}, {"score": 0.004190305872545087, "phrase": "standard_notion"}, {"score": 0.004159763048814389, "phrase": "equivalence_relation"}, {"score": 0.003908940988435398, "phrase": "significant_limitations"}, {"score": 0.0038380787059463075, "phrase": "transitivity_restriction"}, {"score": 0.003741016338085083, "phrase": "fuzzy_information"}, {"score": 0.003351987298847214, "phrase": "logic_programming_system"}, {"score": 0.003315374849824563, "phrase": "bousi_prolog"}, {"score": 0.0030700099570048346, "phrase": "naive_combination"}, {"score": 0.0030143100083252516, "phrase": "existing_unification_algorithms"}, {"score": 0.0029813748433158032, "phrase": "incompleteness_problems"}, {"score": 0.002863652837038965, "phrase": "accurate_definition"}, {"score": 0.002730488910300527, "phrase": "new_unification_algorithm"}, {"score": 0.0026516301310428756, "phrase": "so-called_weak_unification_algorithm"}, {"score": 0.002603504227742271, "phrase": "martelli"}, {"score": 0.002584494385587982, "phrase": "montanari's_unification_algorithm"}, {"score": 0.0025468951021098717, "phrase": "new_notion"}, {"score": 0.002500662348528587, "phrase": "major_relevant_properties"}, {"score": 0.0024462867877027435, "phrase": "weak_unification_algorithm"}, {"score": 0.00234104879370883, "phrase": "weak_unifier"}, {"score": 0.002175594509651082, "phrase": "weak_most_general_unifier"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Fuzzy logic programming", " Unification theory", " Proximity relations"], "paper_abstract": "Similarity-based Logic Programming has been proposed to enhance the Logic Programming paradigm with similarity relations, in order to represent and manage vague or imprecise information. A similarity relation is a reflexive, symmetric, transitive fuzzy binary relation, extending the standard notion of equivalence relation with the purpose of weakening the concept of equality. As is reported, similarity relations have significant limitations, due to the transitivity restriction, that can lead to representing fuzzy information incorrectly in some situations. Recently we have proposed the use of proximity relations (i.e., reflexive, symmetric, fuzzy binary relations) in the context of a logic programming system, called Bousi Prolog, as a way of solving this problem and generalizing later approaches exclusively based on similarity relations. However, a naive combination of proximity relations and the existing unification algorithms may cause incompleteness problems. Hence, in this paper, we introduce an accurate definition of proximity between expressions (terms or atomic formulas) and a new unification algorithm able to manage proximity relations properly. The so-called weak unification algorithm is an extension of Martelli and Montanari's unification algorithm supported by the new notion of proximity. As major relevant properties, we prove that the weak unification algorithm terminates and it is sound (i.e., it produces a weak unifier of two expressions, if they are unifiable) and complete (i.e., it is able to compute a weak most general unifier for two unifiable expressions). (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Proximity-based unification theory", "paper_id": "WOS:000347103900002"}