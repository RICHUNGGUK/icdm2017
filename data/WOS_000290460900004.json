{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "agglomerative_hierarchical_clustering_algorithms"}, {"score": 0.0318524882381123, "phrase": "proposed_size"}, {"score": 0.0106455415379782, "phrase": "linkage_methods"}, {"score": 0.010067462088190189, "phrase": "component_identification_results"}, {"score": 0.009482546761868684, "phrase": "experimental_results"}, {"score": 0.004719359108879602, "phrase": "legacy_systems"}, {"score": 0.004515655183335171, "phrase": "legacy_system"}, {"score": 0.0044795698035664695, "phrase": "finely_organized_component-based_software_systems"}, {"score": 0.004355516897622305, "phrase": "software_reengineering"}, {"score": 0.004035777314816881, "phrase": "thorough_investigation"}, {"score": 0.003923965929636472, "phrase": "component_identification"}, {"score": 0.0035208552733545463, "phrase": "future_practical_applications"}, {"score": 0.0032231139180761183, "phrase": "eleven_subject_systems"}, {"score": 0.00319732428387928, "phrase": "different_application_domains"}, {"score": 0.003171740347925348, "phrase": "source_code_sizes"}, {"score": 0.0028456853685842293, "phrase": "employed_similarity_measures"}, {"score": 0.0028229071631385634, "phrase": "weighting_schemes"}, {"score": 0.002553063001454625, "phrase": "quite_different_clustering_results"}, {"score": 0.0023653276631862958, "phrase": "perfectly_satisfactory_results"}, {"score": 0.0022721178679337025, "phrase": "varied_capabilities"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Component identification", " Agglomerative hierarchical clustering algorithm", " Weighting scheme", " Similarity measure", " Legacy systems", " Software reengineering"], "paper_abstract": "Context: Component identification, the process of evolving legacy system into finely organized component-based software systems, is a critical part of software reengineering. Currently, many component identification approaches have been developed based on agglomerative hierarchical clustering algorithms. However, there is a lack of thorough investigation on which algorithm is appropriate for component identification. Objective: This paper focuses on analyzing agglomerative hierarchical clustering algorithms in software reengineering, and then identifying their respective strengths and weaknesses in order to apply them effectively for future practical applications. Method: A series of experiments were conducted for 18 clustering strategies combined according to various similarity measures, weighting schemes and linkage methods. Eleven subject systems with different application domains and source code sizes were used in the experiments. The component identification results are evaluated by the proposed size, coupling and cohesion criteria. Results: The experimental results suggested that the employed similarity measures, weighting schemes and linkage methods can have various effects on component identification results with respect to the proposed size, coupling and cohesion criteria, so the hierarchical clustering algorithms produced quite different clustering results. Conclusions: According to the experimental results, it can be concluded that it is difficult to produce perfectly satisfactory results for a given clustering algorithm. Nevertheless, these algorithms demonstrated varied capabilities to identify components with respect to the proposed size, coupling and cohesion criteria. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Applying agglomerative hierarchical clustering algorithms to component identification for legacy systems", "paper_id": "WOS:000290460900004"}