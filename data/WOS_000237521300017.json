{"auto_keywords": [{"score": 0.03538009322318605, "phrase": "computational_complexity"}, {"score": 0.03104244392514206, "phrase": "locality_properties"}, {"score": 0.00481495049065317, "phrase": "application_locality"}, {"score": 0.004339108074589307, "phrase": "spatial_locality"}, {"score": 0.0036777702949712457, "phrase": "high_probability"}, {"score": 0.0034804536625952596, "phrase": "embedded_classifiers"}, {"score": 0.003293688299319582, "phrase": "aware_design"}, {"score": 0.0030789331635764122, "phrase": "gated-parallel_family"}, {"score": 0.002673957615079041, "phrase": "master-enabling_module"}, {"score": 0.002157302200451323, "phrase": "significant_reduction"}, {"score": 0.0021049977753042253, "phrase": "power_consumption"}], "paper_keywords": ["applicational-level design", " classifier design", " embedded systems", " gated-parallel classifiers", " power-aware design"], "paper_abstract": "Temporal and spatial locality of the inputs, i.e., the property allowing a classifier to receive the same samples over time-or samples belonging to a neighborhood-with high probability, can be translated into the design of embedded classifiers. The outcome is a computational complexity and power aware design particularly suitable for implementation. A classifier based on the gated-parallel family has been found particularly suitable for exploiting locality properties: Subclassifiers are generally small, independent each other, and controlled by a master-enabling module granting that only a subclassifier is active at a time, the others being switched off. By exploiting locality properties we obtain classifiers with accuracy comparable with the ones designed without integrating locality but gaining a significant reduction in computational complexity and power consumption.", "paper_title": "Exploiting application locality to design low-complexity, highly performing, and power-aware embedded classifiers", "paper_id": "WOS:000237521300017"}