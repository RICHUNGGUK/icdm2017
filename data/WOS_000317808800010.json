{"auto_keywords": [{"score": 0.04881318091486499, "phrase": "data_center_networks"}, {"score": 0.04348566951371689, "phrase": "specific_path"}, {"score": 0.00481495049065317, "phrase": "flow-based_load_balancing"}, {"score": 0.004772142833220795, "phrase": "stateless"}, {"score": 0.004645959941491617, "phrase": "hash-based_load-balancing_techniques"}, {"score": 0.004462892860919036, "phrase": "multiple_forwarding_paths"}, {"score": 0.004383852039913171, "phrase": "packet_sequence"}, {"score": 0.004344855841195913, "phrase": "transport-level_flows"}, {"score": 0.004045068727683462, "phrase": "desired_mechanism"}, {"score": 0.0039380388343479384, "phrase": "hot_spots"}, {"score": 0.003732368382223596, "phrase": "network_use"}, {"score": 0.003666217992454448, "phrase": "current_per-flow_load-balancing_methods"}, {"score": 0.0033376244286643176, "phrase": "deterministic_approach"}, {"score": 0.0033079039414389833, "phrase": "end_hosts"}, {"score": 0.003220315882881027, "phrase": "desired_load-balanced_path"}, {"score": 0.003149094460617212, "phrase": "packet_header_extension"}, {"score": 0.0030794433253250476, "phrase": "invertible_mechanism"}, {"score": 0.002984504445973107, "phrase": "hash_function"}, {"score": 0.0028539179130824786, "phrase": "packet's_header_field_values"}, {"score": 0.002451088210833819, "phrase": "linux_kernel_implementation"}, {"score": 0.002354302193867031, "phrase": "lab_experiments"}, {"score": 0.0023333173799963795, "phrase": "multipath_tcp"}, {"score": 0.0022311596751824416, "phrase": "flow_scheduling_system"}, {"score": 0.002162316557411786, "phrase": "large_data_center_networks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Load balancing", " Data center networks", " MultiPath TCP"], "paper_abstract": "Hash-based load-balancing techniques are widely used to distribute the load over multiple forwarding paths and preserve the packet sequence of transport-level flows. Forcing a long-lived, i.e., elephant, flow to follow a specific path in the network is a desired mechanism in data center networks to avoid crossing hot spots. This limits the formation of bottlenecks and so improves the network use. Unfortunately, current per-flow load-balancing methods do not allow sources to deterministically force a specific path for a flow. In this paper, we propose a deterministic approach enabling end hosts to steer their flows over any desired load-balanced path without relying on any packet header extension. By using an invertible mechanism instead of solely relying on a hash function in routers, our method allows to easily select the packet's header field values in order to force the selection of a given load-balanced path without storing any state in routers. We perform various simulations and experiments to evaluate the performance and prove the feasibility of our method using a Linux kernel implementation. Furthermore, we demonstrate with simulations and lab experiments how MultiPath TCP can benefit from the combination of our solution with a flow scheduling system that efficiently distributes elephant flows in large data center networks. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Revisiting flow-based load balancing: Stateless path selection in data center networks", "paper_id": "WOS:000317808800010"}