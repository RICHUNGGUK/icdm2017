{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "modal_formulas"}, {"score": 0.004453874101119545, "phrase": "internal_action_tau"}, {"score": 0.004055998173160551, "phrase": "process_algebra_term"}, {"score": 0.003870541730075597, "phrase": "modal_formula"}, {"score": 0.003062594954962045, "phrase": "original_formula"}, {"score": 0.0027886573969044042, "phrase": "structural_operational_semantics"}, {"score": 0.002619748321217153, "phrase": "process_algebra"}, {"score": 0.002422890839801611, "phrase": "decomposition_method"}, {"score": 0.002311933249234786, "phrase": "congruence_formats"}, {"score": 0.0021049977753042253, "phrase": "bisimulation_equivalence"}], "paper_keywords": [""], "paper_abstract": "We present a method for decomposing modal formulas for processes with the internal action tau. To decide whether a process algebra term satisfies a modal formula, one can check whether its subterms satisfy formulas that are obtained by decomposing the original formula. The decomposition uses the structural operational semantics that underlies the process algebra. We use this decomposition method to derive congruence formats for branching and rooted branching bisimulation equivalence.", "paper_title": "Divide and congruence: From decomposition of modalities to preservation of branching bisimulation", "paper_id": "WOS:000240360000010"}