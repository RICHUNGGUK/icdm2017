{"auto_keywords": [{"score": 0.04076541308437712, "phrase": "role_models"}, {"score": 0.00481495049065317, "phrase": "agent_behavior"}, {"score": 0.004518442937844318, "phrase": "role_model_implementation"}, {"score": 0.004140432202560092, "phrase": "java"}, {"score": 0.004074901471704325, "phrase": "role_support"}, {"score": 0.003947358102140903, "phrase": "brief_introduction"}, {"score": 0.0037336520904376687, "phrase": "jawiro"}, {"score": 0.0036456298076415652, "phrase": "paper_proceeds"}, {"score": 0.0034208822062692127, "phrase": "role_model"}, {"score": 0.0033402088717816446, "phrase": "design_pattern"}, {"score": 0.0027815466400771768, "phrase": "valuable_tools"}, {"score": 0.0027159094186967247, "phrase": "dynamic_real_world_entities"}, {"score": 0.0025687008721685454, "phrase": "significant_performance_overhead"}, {"score": 0.002508073621696602, "phrase": "dynamic_nature"}, {"score": 0.0024101837218440834, "phrase": "good_domain"}, {"score": 0.0021049977753042253, "phrase": "sample_application"}], "paper_keywords": [""], "paper_abstract": "This paper presents a role model implementation, JAWIRO (JAva WIth ROles), which enhances Java with role support. After a brief introduction to role models and the capabilities of JAWIRO, the paper proceeds to a comparison of our model with another role model and a design pattern for implementing roles. These three approaches are compared on the basis of their abilities and performances. It is shown that role models are valuable tools for modeling dynamic real world entities as they provide many useful abilities without a significant performance overhead. The dynamic nature of agents represents a good domain for using roles to describe both behavior and coordination issues. The paper ends with a sample application for agents that demonstrates how characteristics of roles may be employed.", "paper_title": "A role model for description of agent behavior and coordination", "paper_id": "WOS:000238506800003"}