{"auto_keywords": [{"score": 0.04284268705083233, "phrase": "laplacian"}, {"score": 0.031699373625622855, "phrase": "graph_kernel"}, {"score": 0.029408968043418915, "phrase": "graph_laplacian_matrix"}, {"score": 0.014060044627638857, "phrase": "manifold_regularization_framework"}, {"score": 0.010479533477755034, "phrase": "proposed_framework"}, {"score": 0.010145522606696527, "phrase": "transformed_kernel"}, {"score": 0.00481495049065317, "phrase": "scalable_manifold_regularization"}, {"score": 0.004716185578189119, "phrase": "ssl"}, {"score": 0.004646852519870358, "phrase": "powerful_tool"}, {"score": 0.004578547645288202, "phrase": "limited_number"}, {"score": 0.004551506364497413, "phrase": "labeled_data"}, {"score": 0.004511242245115447, "phrase": "large_number"}, {"score": 0.004484596684703308, "phrase": "unlabeled_data"}, {"score": 0.004418666248371415, "phrase": "increasing_attention"}, {"score": 0.004379572106088617, "phrase": "machine_learning_community"}, {"score": 0.004264343940547844, "phrase": "solid_theoretical_foundations"}, {"score": 0.004226609368143841, "phrase": "large_family"}, {"score": 0.004201637890307767, "phrase": "ssl_algorithms"}, {"score": 0.004152134827373379, "phrase": "laplacian_support_vector_machine"}, {"score": 0.004127601839725886, "phrase": "lapsvm"}, {"score": 0.004066898031169739, "phrase": "least_squares"}, {"score": 0.003901617424466747, "phrase": "small_scale_problems"}, {"score": 0.0038556354709511818, "phrase": "high_computational_cost"}, {"score": 0.003821503621554738, "phrase": "matrix_inversion_operation"}, {"score": 0.003776462258204936, "phrase": "optimization_problem"}, {"score": 0.0036770435321756903, "phrase": "novel_framework"}, {"score": 0.0035908627899097407, "phrase": "intermediate_decision_variable"}, {"score": 0.003517107332500739, "phrase": "epsilon-insensitive_loss"}, {"score": 0.003444861556939966, "phrase": "support_vector_regression"}, {"score": 0.0033541431225443306, "phrase": "sparse_solution"}, {"score": 0.00333430930125525, "phrase": "svr."}, {"score": 0.0032852337992126564, "phrase": "laplacian_embedded_rls"}, {"score": 0.003123700735336378, "phrase": "simpler_form"}, {"score": 0.0030234236561882443, "phrase": "original_kernel"}, {"score": 0.00296128862361938, "phrase": "manifold_structure"}, {"score": 0.0027989800906333805, "phrase": "original_kernel_matrix"}, {"score": 0.0026143265665547525, "phrase": "inverse_operation"}, {"score": 0.002591154768100912, "phrase": "sparse_matrix"}, {"score": 0.002493087803216478, "phrase": "dense_one"}, {"score": 0.002463664816791839, "phrase": "kernel_principal_component_analysis"}, {"score": 0.002405853977978678, "phrase": "introduced_decision_variable"}, {"score": 0.0022874602835499195, "phrase": "data_manifold"}, {"score": 0.0021555948898187944, "phrase": "large_scale_ssl_problems"}, {"score": 0.0021049977753042253, "phrase": "real_world_data_sets"}], "paper_keywords": ["Laplacian embedding", " large scale semi-supervised learning", " manifold regularization"], "paper_abstract": "Semi-supervised learning (SSL), as a powerful tool to learn from a limited number of labeled data and a large number of unlabeled data, has been attracting increasing attention in the machine learning community. In particular, the manifold regularization framework has laid solid theoretical foundations for a large family of SSL algorithms, such as Laplacian support vector machine (LapSVM) and Laplacian regularized least squares (LapRLS). However, most of these algorithms are limited to small scale problems due to the high computational cost of the matrix inversion operation involved in the optimization problem. In this paper, we propose a novel framework called Laplacian embedded regression by introducing an intermediate decision variable into the manifold regularization framework. By using epsilon-insensitive loss, we obtain the Laplacian embedded support vector regression (LapESVR) algorithm, which inherits the sparse solution from SVR. Also, we derive Laplacian embedded RLS (LapERLS) corresponding to RLS under the proposed framework. Both LapESVR and LapERLS posses a simpler form of a transformed kernel, which is the summation of the original kernel and a graph kernel that captures the manifold structure. The benefits of the transformed kernel are two-fold: 1) we can deal with the original kernel matrix and the graph Laplacian matrix in the graph kernel separately and 2) if the graph Laplacian matrix is sparse, we only need to perform the inverse operation for a sparse matrix, which is much more efficient when compared with that for a dense one. Inspired by kernel principal component analysis, we further propose to project the introduced decision variable into a subspace spanned by a few eigenvectors of the graph Laplacian matrix in order to better reflect the data manifold, as well as accelerate the calculation of the graph kernel, allowing our methods to efficiently and effectively cope with large scale SSL problems. Extensive experiments on both toy and real world data sets show the effectiveness and scalability of the proposed framework.", "paper_title": "Laplacian Embedded Regression for Scalable Manifold Regularization", "paper_id": "WOS:000306522200005"}