{"auto_keywords": [{"score": 0.045422024392825396, "phrase": "physical_characteristics"}, {"score": 0.023093009500031184, "phrase": "general-purpose_computation"}, {"score": 0.007739373246339948, "phrase": "embedded_control_software"}, {"score": 0.006082651049034845, "phrase": "dsml"}, {"score": 0.00481495049065317, "phrase": "domain-specific_physical_models"}, {"score": 0.0047823219739028325, "phrase": "general-purpose_software_modules"}, {"score": 0.004669845451682529, "phrase": "considerable_portion"}, {"score": 0.004638195656547484, "phrase": "software_systems"}, {"score": 0.004544521651302002, "phrase": "embedded_control_domain"}, {"score": 0.004498393285602365, "phrase": "control_software_deals"}, {"score": 0.004437613070853689, "phrase": "physical_system"}, {"score": 0.004231249907249981, "phrase": "current_practices"}, {"score": 0.0042025601346464365, "phrase": "usually_general-purpose_languages"}, {"score": 0.004048194450210347, "phrase": "embedded_systems_development"}, {"score": 0.0035571129372263532, "phrase": "dedicated_abstractions"}, {"score": 0.003532977898022071, "phrase": "composition_operators"}, {"score": 0.003485196263406553, "phrase": "domain-specific_static_and_dynamic_checks"}, {"score": 0.003380029058401904, "phrase": "domain-specific_modeling_languages"}, {"score": 0.0031360786664165093, "phrase": "physical_systems"}, {"score": 0.002690406375639144, "phrase": "novel_approach"}, {"score": 0.002547663224855668, "phrase": "composition_filters_model"}, {"score": 0.0023960878466674795, "phrase": "abstraction_level"}, {"score": 0.0021049977753042253, "phrase": "printing_systems_domain"}], "paper_keywords": ["Domain specific languages", " Embedded systems", " Software composition", " Composition filters", " Aspect-oriented programming"], "paper_abstract": "A considerable portion of software systems today are adopted in the embedded control domain. Embedded control software deals with controlling a physical system, and as such models of physical characteristics become part of the embedded control software. In current practices, usually general-purpose languages (GPL), such as C/C++ are used for embedded systems development. Although a GPL is suitable for expressing general-purpose computation, it falls short in expressing the models of physical characteristics as desired. This reduces not only the readability of the code but also hampers reuse due to the lack of dedicated abstractions and composition operators. Moreover, domain-specific static and dynamic checks may not be applied effectively. There exist domain-specific modeling languages (DSML) and tools to specify models of physical characteristics. Although they are commonly used for simulation and documentation of physical systems, they are often not used to implement embedded control software. This is due to the fact that these DSMLs are not suitable to express the general-purpose computation and they cannot be easily composed with other software modules that are implemented in GPL. This paper presents a novel approach to combine a DSML to model physical characteristics and a GPL to implement general-purpose computation. The composition filters model is used to compose models specified in the DSML with modules specified in the GPL at the abstraction level of both languages. As such, this approach combines the benefits of using a DSML to model physical characteristics with the freedom of a GPL to implement general-purpose computation. The approach is illustrated using two industrial case studies from the printing systems domain.", "paper_title": "Composing domain-specific physical models with general-purpose software modules in embedded control software", "paper_id": "WOS:000331000000005"}