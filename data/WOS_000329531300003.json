{"auto_keywords": [{"score": 0.03915591522920403, "phrase": "intervention_processes"}, {"score": 0.008283937902247688, "phrase": "business_process"}, {"score": 0.00481495049065317, "phrase": "business_processes"}, {"score": 0.004772593750252861, "phrase": "concurrent_business_processes"}, {"score": 0.004688989566904871, "phrase": "mutual_interference"}, {"score": 0.004606843145343611, "phrase": "highly_distributed_service_environments"}, {"score": 0.004466519142879166, "phrase": "different_stakeholders"}, {"score": 0.004330450801016359, "phrase": "supposedly_stable_case-related_data"}, {"score": 0.004198510172614725, "phrase": "process_execution"}, {"score": 0.004106725110985659, "phrase": "undesirable_business_outcomes"}, {"score": 0.003894512634265439, "phrase": "dependency_scopes"}, {"score": 0.003826231150275071, "phrase": "critical_parts"}, {"score": 0.0034868462688262864, "phrase": "complex_processes"}, {"score": 0.00344087639309216, "phrase": "manual_specification"}, {"score": 0.0033955105098235345, "phrase": "appropriate_intervention_processes"}, {"score": 0.003365598242636633, "phrase": "design_time"}, {"score": 0.003080548510001051, "phrase": "important_intervention_cases"}, {"score": 0.0027456676902333304, "phrase": "domain-independent_ai_planning_techniques"}, {"score": 0.0024688710065898646, "phrase": "available_compensation_activities"}, {"score": 0.002320449502337321, "phrase": "erroneous_situation"}, {"score": 0.0022101055924375725, "phrase": "real_case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Process interference", " Business process management", " Run-time process repair", " e-Government"], "paper_abstract": "Concurrent business processes frequently suffer from mutual interference, especially in highly distributed service environments, where resources are shared among different stakeholders. Interference may be caused by supposedly stable case-related data, which are modified externally during process execution and may result in undesirable business outcomes. One way to address this problem is through the specification of dependency scopes, that cover critical parts of the process, and intervention processes, which are triggered at runtime to repair the inconsistencies. However, for complex processes, the manual specification of the appropriate intervention processes at design time can be particularly time-consuming and error-prone, while it is difficult to ensure that all important intervention cases are taken into account. To overcome this limitation, we propose an approach for automating the generation of intervention processes at runtime, by using domain-independent AI planning techniques. This way, intervention processes are composed on the fly, taking into account the characteristics of the business process in execution, the available compensation activities, and the properties that have to be fulfilled to recover from the erroneous situation. A prototype has been implemented and evaluated on a real case study of a business process from the Dutch e-Government. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Automated runtime repair of business processes", "paper_id": "WOS:000329531300003"}