{"auto_keywords": [{"score": 0.03241061602837417, "phrase": "refresh_operations"}, {"score": 0.028137781441974187, "phrase": "ccear"}, {"score": 0.015719716506582538, "phrase": "cache-coherence-enabled_adaptive_refresh"}, {"score": 0.011885795941577106, "phrase": "volatile_stt-ram"}, {"score": 0.011557489011802586, "phrase": "llc"}, {"score": 0.0045876189888390895, "phrase": "promising_candidate"}, {"score": 0.004550783060775205, "phrase": "sram_replacement"}, {"score": 0.004424160689087029, "phrase": "fast_read_access"}, {"score": 0.004388631450145507, "phrase": "high_density"}, {"score": 0.0043533862892678864, "phrase": "low_leakage_power"}, {"score": 0.004301046274139699, "phrase": "cmos_technology"}, {"score": 0.00421520166010848, "phrase": "wide_adoption"}, {"score": 0.004147756103284082, "phrase": "cache_memories"}, {"score": 0.0039677715255034595, "phrase": "write_performance"}, {"score": 0.0039042694651106884, "phrase": "retention_time"}, {"score": 0.0038728990904778678, "phrase": "stt-ram_cells"}, {"score": 0.003675023529026644, "phrase": "data_loss"}, {"score": 0.003558294449586273, "phrase": "last-level_cache"}, {"score": 0.003487222504700868, "phrase": "chip_multiprocessor"}, {"score": 0.003403801095792972, "phrase": "frequent_refresh_operations"}, {"score": 0.0033628392198449134, "phrase": "significant_extra_energy"}, {"score": 0.0031780859997873803, "phrase": "overall_system_performance"}, {"score": 0.0031020367403802773, "phrase": "performance_impact"}, {"score": 0.0029792984108210525, "phrase": "volatile_stt-ram."}, {"score": 0.0026932247685847246, "phrase": "cmp_systems"}, {"score": 0.0026181517251690606, "phrase": "cache_coherence_protocol"}, {"score": 0.002597088221737922, "phrase": "cache_management_policy"}, {"score": 0.0025145109881926143, "phrase": "volatile_stt-ram_caches"}, {"score": 0.002494279207996077, "phrase": "full-system_simulation_results"}, {"score": 0.0024149629835339926, "phrase": "ideal_refresh_policy"}, {"score": 0.002395530243993313, "phrase": "low_overhead"}, {"score": 0.002357131515622894, "phrase": "state-of-the-art_refresh_policies"}, {"score": 0.002254672021120091, "phrase": "energy_consumption"}, {"score": 0.0021392979397427984, "phrase": "small_filter_caches"}, {"score": 0.0021049977753042253, "phrase": "not-refreshed_private_stt-ram_blocks"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Spin-torque transfer RAM", " embedded DRAM", " nonvolatile memory", " refresh", " energy efficiency", " cache coherence"], "paper_abstract": "Spin-Torque Transfer RAM (STT-RAM) is a promising candidate for SRAM replacement because of its excellent features, such as fast read access, high density, low leakage power, and CMOS technology compatibility. However, wide adoption of STT-RAM as cache memories is impeded by its long write latency and high write power. Recent work proposed improving the write performance through relaxing the retention time of STT-RAM cells. The resultant volatile STT-RAM needs to be periodically refreshed to prevent data loss. When volatile STT-RAM is applied as the last-level cache (LLC) in chip multiprocessor (CMP) systems, frequent refresh operations could dissipate significant extra energy. In addition, refresh operations could severely conflict with normal read/write operations to degrade overall system performance. Therefore, minimizing the performance impact caused by refresh operations is crucial for the adoption of volatile STT-RAM. In this article, we propose Cache-Coherence-Enabled Adaptive Refresh (CCear) to minimize the number of refresh operations for volatile STT-RAM, adopted as the LLC for CMP systems. Specifically, CCear interacts with cache coherence protocol and cache management policy to minimize the number of refresh operations on volatile STT-RAM caches. Full-system simulation results show that CCear performs close to an ideal refresh policy with low overhead. Compared with state-of-the-art refresh policies, CCear simultaneously improves the system performance and reduces the energy consumption. Moreover, the performance of CCear could be further enhanced using small filter caches to accommodate the not-refreshed private STT-RAM blocks.", "paper_title": "Low-Energy Volatile STT-RAM Cache Design Using Cache-Coherence-Enabled Adaptive Refresh", "paper_id": "WOS:000329131400005"}