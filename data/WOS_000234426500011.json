{"auto_keywords": [{"score": 0.04615766476303907, "phrase": "polynomial_time"}, {"score": 0.014169280651993216, "phrase": "two-sided_error"}, {"score": 0.00481495049065317, "phrase": "probabilistic_logspace"}, {"score": 0.004752234191437114, "phrase": "nisan"}, {"score": 0.004539005582217309, "phrase": "randomized_logarithmic_space_algorithm"}, {"score": 0.004140726362519362, "phrase": "deterministic_algorithm"}, {"score": 0.0038777482214255635, "phrase": "saks"}, {"score": 0.003703611021999795, "phrase": "space_complexity"}, {"score": 0.003584025547693836, "phrase": "deterministic_simulation"}, {"score": 0.003021502415143067, "phrase": "time-space_tradeoff"}], "paper_keywords": [""], "paper_abstract": "Nisan [5] showed that any randomized logarithmic space algorithm (running in polynomial time and with two-sided error) can be simulated by a deterministic algorithm that runs simultaneously in polynomial time and Theta(log(2)n) space. Subsequently Saks and Zhou [8] improved the space complexity and showed that a deterministic simulation can be carried out in space Theta((log1.5)n). However, their simulation runs in time n (Theta(log 0.5n)). We prove a time-space tradeoff that interpolates these two simulations. Specifically, we prove that, for any 0 <= alpha <= 0.5, any randomized logarithmic space algorithm (running in polynomial time and with two-sided error) can be simulated deterministically in time n(O(log0.5-alpha n)) and space O(log(1.5+alpha)n). That is, we prove that BPL subset of DTISP[n(O(log0.5-alpha n)), O(log(1.5+alpha)n)].", "paper_title": "Time-space tradeoff in derandomizing probabilistic logspace", "paper_id": "WOS:000234426500011"}