{"auto_keywords": [{"score": 0.04080705021857226, "phrase": "multiple_versions"}, {"score": 0.030628977458871248, "phrase": "original_version"}, {"score": 0.025716674648363212, "phrase": "logical_version"}, {"score": 0.00481495049065317, "phrase": "version_management_framework"}, {"score": 0.004781915513030716, "phrase": "rdf_triple_stores._rdf"}, {"score": 0.004684157900507474, "phrase": "ontology_language"}, {"score": 0.004588389551682397, "phrase": "semantic_web"}, {"score": 0.004327500975159818, "phrase": "particular_domain"}, {"score": 0.004067349981835669, "phrase": "distributed_and_collaborative_way"}, {"score": 0.0038624981944755813, "phrase": "rdf_data"}, {"score": 0.003835972725191194, "phrase": "earlier_studies"}, {"score": 0.003809628721278519, "phrase": "rdf_versions"}, {"score": 0.0037060428445111694, "phrase": "different_versions"}, {"score": 0.0035072146967082083, "phrase": "existing_approaches"}, {"score": 0.003459191419478298, "phrase": "space_overhead"}, {"score": 0.003435426082776884, "phrase": "large_scale_data"}, {"score": 0.00307657476125683, "phrase": "rdf_applications"}, {"score": 0.0029620573986902416, "phrase": "rdf_version_management"}, {"score": 0.0029416973901327925, "phrase": "relational_databases"}, {"score": 0.002793380001054064, "phrase": "space_requirement"}, {"score": 0.0026986685585382347, "phrase": "change_queries"}, {"score": 0.0026616868981501006, "phrase": "flip_side"}, {"score": 0.002571429085596686, "phrase": "specific_logical_version"}, {"score": 0.0023670716500937667, "phrase": "query_performance"}, {"score": 0.00227890329511847, "phrase": "compression_technique"}, {"score": 0.0022399174232611853, "phrase": "aggregated_delta"}, {"score": 0.0021195791482462004, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "real_life_rdf_data_sets"}], "paper_keywords": ["RDF", " ontology", " versioning system", " ontology evolution", " relational database"], "paper_abstract": "RDF is widely used as an ontology language for representing the metadata in Semantic Web, knowledge management system and E-commerce. Since ontologies model the knowledge in a particular domain, they may change over time. Furthermore, ontologies are usually developed and controlled in a distributed and collaborative way. Thus, it is very important to be able to manage multiple versions for RDF data. Earlier studies on RDF versions have focused on providing the accesses to different versions (i.e. snapshots) and computing the differences between those two versions. However, the existing approaches suffer from the space overhead for large scale data, since all snapshots should be redundantly kept in a repository. Moreover, it is very time consuming to compute the delta between two specific versions, which is very common in RDF applications. In this paper, we propose a framework for RDF version management in relational databases. It stores the original version and the deltas between two consecutive versions, thereby reducing the space requirement considerably. The other benefit of our approach is appropriate for change queries. On the flip side, in order to answer a query on a specific logical version, version should be constructed on the fly by applying the deltas between the original version and the logical version. This can slow down query performance. In order to overcome this, we propose a compression technique for deltas, called Aggregated Delta, to create a logical version directly rather than executing the sequence of deltas. An experimental study with real life RDF data sets shows our framework maintains multiple versions efficiently.", "paper_title": "A VERSION MANAGEMENT FRAMEWORK FOR RDF TRIPLE STORES", "paper_id": "WOS:000303207500004"}