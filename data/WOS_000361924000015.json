{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "matrix_algorithms"}, {"score": 0.009777598277704892, "phrase": "processor_arrays"}, {"score": 0.004750178261675602, "phrase": "embedded_platforms"}, {"score": 0.004581660953729745, "phrase": "important_part"}, {"score": 0.004459190343665408, "phrase": "core_kernels"}, {"score": 0.004223941453664225, "phrase": "different_tasks"}, {"score": 0.004186231488343808, "phrase": "hardware"}, {"score": 0.004055652445791872, "phrase": "good_compromise"}, {"score": 0.003947186611084043, "phrase": "power_consumption"}, {"score": 0.0038764861784138117, "phrase": "high_level_synthesis_techniques"}, {"score": 0.003573626511295813, "phrase": "polytope_model"}, {"score": 0.0034937647771945803, "phrase": "proposed_approach"}, {"score": 0.003415681637907093, "phrase": "efficient_data_memory_accesses"}, {"score": 0.003309278541665552, "phrase": "processor_array"}, {"score": 0.0031203609829058587, "phrase": "limited_only_by_the_fpga_available_resources"}, {"score": 0.002915701586760994, "phrase": "digital_signal_processing_applications"}, {"score": 0.002799395423162793, "phrase": "cholesky"}, {"score": 0.002774248018915902, "phrase": "lu"}, {"score": 0.0025572160146590623, "phrase": "microblaze_processor"}, {"score": 0.002488724764295623, "phrase": "general_view"}, {"score": 0.0023571835517819124, "phrase": "sequential_processors"}, {"score": 0.0022427071130840647, "phrase": "implemented_arrays"}, {"score": 0.0022224972632835416, "phrase": "hardware_and_software_implementations"}, {"score": 0.0021925226977381244, "phrase": "embedded_platforms_scenario"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Processor arrays", " Polytope", " Embedded platforms", " FPGAs"], "paper_abstract": "Matrix algorithms are an important part of many digital signal processing applications as they are core kernels that are usually required to be applied many times while computing different tasks. Hardware assisted implementations using FPGAs provide a good compromise between performance, cost and power consumption, specially when high level synthesis techniques are employed for deriving co-processors. In this paper a high level synthesis approach to generate embedded processor arrays for matrix algorithms based on the polytope model is presented. The proposed approach provides a solution for efficient data memory accesses and data transferring for feeding the processor array, as well as support for solving problems independently of their size and limited only by the FPGA available resources. The proposed approach has been validated by generating processor arrays for three different matrix algorithms used in digital signal processing applications; more precisely matrix-matrix multiplication, Cholesky and LU decomposition algorithms. These algorithms were targeted for a Spartan-6 device and compared against their sequential implementations targeted for a MicroBlaze processor in order to provide a general view of the gain achieved by the processor arrays when the arrays and sequential processors are implemented in the same technology. Results show that the implemented arrays outperforms hardware and software implementations considering an embedded platforms scenario with a Spartan-6 device. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Processor arrays generation for matrix algorithms used in embedded platforms implemented on FPGAs", "paper_id": "WOS:000361924000015"}