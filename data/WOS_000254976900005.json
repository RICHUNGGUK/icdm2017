{"auto_keywords": [{"score": 0.04890846668503995, "phrase": "candidate_itemsets"}, {"score": 0.00481495049065317, "phrase": "apriori-based_association_rule_mining"}, {"score": 0.0045119929871912405, "phrase": "hardware_architecture"}, {"score": 0.004228016636379321, "phrase": "hardware_capacity"}, {"score": 0.004073809704022463, "phrase": "time_complexity"}, {"score": 0.004024079413950881, "phrase": "hash_table"}, {"score": 0.003949592017305331, "phrase": "database_items"}, {"score": 0.0036553070575015344, "phrase": "large_database"}, {"score": 0.003610292749660581, "phrase": "performance_bottleneck"}, {"score": 0.0035222796379355092, "phrase": "happi"}, {"score": 0.0033828748627992193, "phrase": "pipeline_methodology"}, {"score": 0.0033515736929172644, "phrase": "happi_architecture"}, {"score": 0.0032593915869553714, "phrase": "useful_information"}, {"score": 0.002933387900492055, "phrase": "frequent_itemsets"}, {"score": 0.0026811531172346676, "phrase": "useful_trimming_information"}, {"score": 0.0023464207498977, "phrase": "bottleneck_problem"}, {"score": 0.0023246873451701995, "phrase": "priori-based_hardware_schemes"}, {"score": 0.0022328064591297676, "phrase": "hardware_implementation"}, {"score": 0.0021916308348851428, "phrase": "experiment_results"}, {"score": 0.0021512129013162846, "phrase": "previous_hardware_approach"}, {"score": 0.0021312837202666687, "phrase": "software_algorithm"}, {"score": 0.0021049977753042253, "phrase": "execution_time"}], "paper_keywords": ["hardware enhanced", " association rule"], "paper_abstract": "Generally speaking, to implement Apriori-based association rule mining in hardware, one has to load candidate itemsets and a database into the hardware. Since the capacity of the hardware architecture is fixed, if the number of candidate itemsets or the number of items in the database is larger than the hardware capacity, the items are loaded into the hardware separately. The time complexity of those steps that need to load candidate itemsets or database items into the hardware is in proportion to the number of candidate itemsets multiplied by the number of items in the database. Too many candidate itemsets and a large database would create a performance bottleneck. In this paper, we propose a HAsh-based and PiPellned (abbreviated as HAPPI) architecture for hardware-enhanced association rule mining. We apply the pipeline methodology in the HAPPI architecture to compare itemsets with the database and collect useful information for reducing the number of candidate itemsets and items in the database simultaneously. When the database is fed into the hardware, candidate itemsets are compared with the items in the database to find frequent itemsets. At the same time, trimming information is collected from each transaction. In addition, itemsets are generated from transactions and hashed into a hash table. The useful trimming information and the hash table enable us to reduce the number of items in the database and the number of candidate itemsets. Therefore, we can effectively reduce the frequency of loading the database into the hardware. As such, HAPPI solves the bottleneck problem in a priori-based hardware schemes. We also derive some properties to investigate the performance of this hardware implementation. As shown by the experiment results, HAPPI significantly outperforms the previous hardware approach and the software algorithm in terms of execution time.", "paper_title": "Hardware-enhanced association rule mining with hashing and pipelining", "paper_id": "WOS:000254976900005"}