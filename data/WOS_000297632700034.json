{"auto_keywords": [{"score": 0.03757753897006022, "phrase": "new_operators"}, {"score": 0.0047310525657970615, "phrase": "multi-faceted_and_ubiquitous_notion"}, {"score": 0.0045143706249204905, "phrase": "programming_language_concepts"}, {"score": 0.004332894955218135, "phrase": "denotational_perspective"}, {"score": 0.004134372859330047, "phrase": "linear_functions"}, {"score": 0.00408617426304956, "phrase": "coherence_spaces"}, {"score": 0.00376409764683147, "phrase": "higher-order_expressivity"}, {"score": 0.003698442219929622, "phrase": "linear_core"}, {"score": 0.0035082436540296406, "phrase": "exception_handling"}, {"score": 0.0034673190692473903, "phrase": "parallel_evaluation"}, {"score": 0.003101503914610488, "phrase": "full_abstraction_result"}, {"score": 0.002890557197908352, "phrase": "denotational_linearity"}, {"score": 0.00284009509859163, "phrase": "crucial_information"}, {"score": 0.002790511479398411, "phrase": "operational_evaluation"}, {"score": 0.002600661525224505, "phrase": "first_one"}, {"score": 0.002555247330102505, "phrase": "abstract_and_concise_operational_semantics"}, {"score": 0.002339771435910601, "phrase": "infinite-branching_search"}, {"score": 0.002298902547676131, "phrase": "evaluation_space"}, {"score": 0.002258745901862197, "phrase": "second_one"}, {"score": 0.0021049977753042253, "phrase": "linear_assumptions"}], "paper_keywords": ["Languages", " Theory", " Design", " PCF", " Linear Logic", " Denotational Semantics", " Operational Semantics"], "paper_abstract": "Linearity is a multi-faceted and ubiquitous notion in the analysis and the development of programming language concepts. We study linearity in a denotational perspective by picking out programs that correspond to linear functions between coherence spaces. We introduce a language, named SlPCF(star), that increases the higher-order expressivity of a linear core of PCF by means of new operators related to exception handling and parallel evaluation. SlPCF(star) allows us to program all the finite elements of the model and, consequently, it entails a full abstraction result that makes the reasoning on the equivalence between programs simpler. Denotational linearity provides also crucial information for the operational evaluation of programs. We formalize two evaluation machineries for the language. The first one is an abstract and concise operational semantics designed with the aim of explaining the new operators, and is based on an infinite-branching search of the evaluation space. The second one is more concrete and it prunes such a space, by exploiting the linear assumptions. This can also be regarded as a base for an implementation.", "paper_title": "Linearity and PCF: a Semantic Insight!", "paper_id": "WOS:000297632700034"}