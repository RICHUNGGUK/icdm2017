{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "volatile_concerns"}, {"score": 0.0045726187330434025, "phrase": "rapidly_changing_market"}, {"score": 0.00443308765153716, "phrase": "software_systems"}, {"score": 0.004342430078306461, "phrase": "highly_volatile_requirements"}, {"score": 0.0034236045013591437, "phrase": "new_requirements"}, {"score": 0.0033190180867511605, "phrase": "externalizing_volatile_concerns"}, {"score": 0.0030554300179552415, "phrase": "future_management"}, {"score": 0.0029928611380840757, "phrase": "unanticipated_requirements"}, {"score": 0.0025625729433234623, "phrase": "early_lifecycle_software_modeling"}, {"score": 0.0024842242921857705, "phrase": "key_insight"}, {"score": 0.002408265305704217, "phrase": "aspect-oriented_techniques"}, {"score": 0.0021049977753042253, "phrase": "base_software_artifacts"}], "paper_keywords": [""], "paper_abstract": "A rapidly changing market leads to software systems with highly volatile requirements. These must be managed in a way that reduces the time and costs associated with updating a system to meet these new requirements. By externalizing volatile concerns, we can build a stepping-stone for future management of unanticipated requirements change. In this paper, we present a method for handling volatile concerns during early lifecycle software modeling. The key insight is that aspect-oriented techniques can be applied to modularize volatility and to weave volatile concerns into the base software artifacts.", "paper_title": "Modeling volatile concerns as aspects", "paper_id": "WOS:000238486900036"}