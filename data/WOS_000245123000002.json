{"auto_keywords": [{"score": 0.03873611469278556, "phrase": "usability_requirements"}, {"score": 0.015351724186734288, "phrase": "software_development_process"}, {"score": 0.012350603597381138, "phrase": "software_architecture"}, {"score": 0.00481495049065317, "phrase": "architecturally_sensitive_usability_requirements"}, {"score": 0.004626553103375699, "phrase": "human-computer_interaction"}, {"score": 0.004288581530198804, "phrase": "user_interface"}, {"score": 0.004203803478570494, "phrase": "usability_problems"}, {"score": 0.003959353513286997, "phrase": "presentation_layer"}, {"score": 0.0036262124965265015, "phrase": "software_development_cycle"}, {"score": 0.0035403060198952244, "phrase": "architectural_design_phase"}, {"score": 0.0030414140732789186, "phrase": "usability-driven_adaptation"}, {"score": 0.003005151718290603, "phrase": "quality_attribute_workshop"}, {"score": 0.0029339151044984134, "phrase": "software_development_organizations"}, {"score": 0.0026760974046034854, "phrase": "existing_software_framework_workflows"}, {"score": 0.0026022112631368223, "phrase": "new_activity"}, {"score": 0.00255068452076921, "phrase": "preliminary_exercise"}, {"score": 0.002421428191952395, "phrase": "proposed_method"}, {"score": 0.002382987346529592, "phrase": "different_levels"}, {"score": 0.0021647968783414504, "phrase": "architecturally_relevant_usability_requirements"}, {"score": 0.0021049977753042253, "phrase": "usability_aspects"}], "paper_keywords": ["usability requirements", " software architecture", " software process", " QAW"], "paper_abstract": "In the Human-Computer Interaction (HCI) community, software usability has primarily been concerned with the presentation of information, more precisely with the user interface. However, some usability problems can prove costly to fix if the changes require modifications that reach beyond the presentation layer, namely those that cannot be easily accommodated by the software architecture. Taking into account some usability requirements earlier in the software development cycle, specifically prior to the architectural design phase, can reduce the cost of these modifications. There is a scarcity of methods and guidelines with the scope to direct users in eliciting the usability requirements that can impact the software architecture. This paper proposes a usability-driven adaptation of the quality attribute workshop (QAW) to assist software development organizations in discovering and documenting usability requirements. It shows how this method can be integrated into a software development process, by discussing how the existing software framework workflows can be adjusted to take this new activity into consideration. A preliminary exercise was conducted to help discern the utility and the limits of the proposed method. Participants with different levels of knowledge of usability and comprehension of the system being developed found the method constructive, as it guided them in identifying the architecturally relevant usability requirements. It also helped determine the usability aspects that would not necessarily have been defined if this technique had not been employed.", "paper_title": "A method to elicit architecturally sensitive usability requirements: its integration into a software development process", "paper_id": "WOS:000245123000002"}