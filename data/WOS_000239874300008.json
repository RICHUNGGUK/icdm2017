{"auto_keywords": [{"score": 0.04403369388104736, "phrase": "internal_actions"}, {"score": 0.013048241463576318, "phrase": "internal_branching_structures"}, {"score": 0.011572881692301555, "phrase": "weak_bisimulation"}, {"score": 0.009129789611684508, "phrase": "timed_failure_equivalence"}, {"score": 0.00481495049065317, "phrase": "parametric_time-interval_automata"}, {"score": 0.004517275498868226, "phrase": "system's_internal_behavior"}, {"score": 0.004309725894724034, "phrase": "systems'_internal_branching_structures"}, {"score": 0.0038964032225585117, "phrase": "systems'_external_timed_behavior"}, {"score": 0.003131393466870228, "phrase": "existing_model"}, {"score": 0.0030176323936876317, "phrase": "upper-_and_lower-bound_parameters"}, {"score": 0.0029473940028924748, "phrase": "consecutive_actions"}, {"score": 0.002830757050018908, "phrase": "abstraction_algorithm"}, {"score": 0.002811770047652563, "phrase": "ptia"}, {"score": 0.0025675372701474035, "phrase": "internal_resolution"}, {"score": 0.0024247382451294255, "phrase": "communicating_actions"}, {"score": 0.0023923066544220277, "phrase": "external_environment"}, {"score": 0.0022898630573629144, "phrase": "reduced_ptia"}, {"score": 0.002206606452557159, "phrase": "parameter_condition"}, {"score": 0.0021479597698614355, "phrase": "failure_equivalent"}, {"score": 0.0021049977753042253, "phrase": "existing_parametric_strong_bisimulation_equivalence_checking"}], "paper_keywords": ["real-time communicating systems", " parametric timed automata", " equivalence checking", " timed failure equivalence", " abstraction"], "paper_abstract": "In the development of real-time communicating hardware/embedded-software systems, it is frequently the case that we want to refine/optimize the system's internal behavior while preserving the external timed 1/0 behavior. In such a design refinement, modification of the systems' internal branching structures, as well as re-scheduling of internal actions, may frequently occur. Our goal is, then, to ensure that such modification of internal branching structures and re-scheduling of internal actions preserve the systems' external timed behavior, which is typically formalized by the notion of (timed) failure equivalence since it is less sensitive to the difference of internal branching structures than (timed) weak bisimulation. In order to know the degree of freedom of such re-scheduling, parametric analysis is useful. One of the models suitable for such an analysis is a parametric time-interval autoniaton(PTIA), which is a subclass of the existing model, a parametric timed automaton. It has only a time interval with upper- and lower-bound parameters as a relative timing constraint between consecutive actions. In this paper, at first, we propose an abstraction algorithm of PTIA which preserves timed failure equivalence. Timed failure equivalence is strictly weaker than timed weak bisimulation in the sense that it does not distinguish the difference of the timing when the internal resolution of nondeterminism. has occurred, but it does distinguish the difference of the refusals of communicating actions observed by an external environment. Then, we also show that after applying our algorithm, the reduced PTIA has no internal actions, and thus the problem deriving a parameter condition in order that given two models are timed failure equivalent can be reduced to the existing parametric strong bisimulation equivalence checking.", "paper_title": "A timed failure equivalence preserving abstraction for parametric time-interval automata", "paper_id": "WOS:000239874300008"}