{"auto_keywords": [{"score": 0.02890432233657509, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "consensus_string_problem"}, {"score": 0.004537401559396022, "phrase": "hard_and_challenging_problem"}, {"score": 0.0031453010852936334, "phrase": "common_ancestor"}, {"score": 0.003083712182111329, "phrase": "dna."}, {"score": 0.0029344771385297137, "phrase": "clustering_aid"}, {"score": 0.0028911669203979156, "phrase": "stringology_community"}, {"score": 0.002806449337145999, "phrase": "hamming_distance"}, {"score": 0.0027513507830537165, "phrase": "metric_the_problem"}, {"score": 0.0025415366388578465, "phrase": "euclidean_metric"}, {"score": 0.002442693254693416, "phrase": "consensus_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Combinatorial problems", " Computational complexity", " Consensus", " Hamming distance", " Swap", " Reversal"], "paper_abstract": "Finding the consensus of a given set of strings is a hard and challenging problem. The problem is formally defined as follows: given a set of strings S = {s(1), ... , s(k)} and a constant d, find, if it exists, a string e such that the distance of s* from each of the strings does not exceed d. This problem has many applications. Two examples are: In biology, it may be used to seek a common ancestor to given sections of DNA. In web searching it may be used as a clustering aid. The stringology community researched this problem under the Hamming distance. In that metric the problem is NP-hard. A lot of work has been also done in the Euclidean metric. In this paper we consider the Consensus problem under other string metrics. We show that this problem is NP-hard for the swap metric and APX-hard for the reversal metric. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "On the hardness of the Consensus String problem", "paper_id": "WOS:000318192000004"}