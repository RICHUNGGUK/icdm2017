{"auto_keywords": [{"score": 0.04916809664432026, "phrase": "motion_estimation"}, {"score": 0.015521816488218496, "phrase": "differential_evolution"}, {"score": 0.013287884072249866, "phrase": "current_frame"}, {"score": 0.01254954678401388, "phrase": "previous_frame"}, {"score": 0.010910982874212022, "phrase": "bm_process"}, {"score": 0.010270579878580554, "phrase": "sad_values"}, {"score": 0.00481495049065317, "phrase": "block-matching"}, {"score": 0.004618614357974438, "phrase": "major_problems"}, {"score": 0.004574449773348889, "phrase": "video_coding_applications"}, {"score": 0.004263168852219819, "phrase": "hardware_implementations"}, {"score": 0.004222388726840072, "phrase": "bm_approach"}, {"score": 0.0041023644174418205, "phrase": "defined_region"}, {"score": 0.0039986103219510315, "phrase": "mb"}, {"score": 0.003750260412839128, "phrase": "motion_vector"}, {"score": 0.0036553070575015344, "phrase": "absolute_differences"}, {"score": 0.0035060903664150115, "phrase": "determined_search_window"}, {"score": 0.0034392837410790293, "phrase": "sad_evaluation"}, {"score": 0.0032672702570491164, "phrase": "full_search_algorithm"}, {"score": 0.0030839851024657395, "phrase": "search_window"}, {"score": 0.002948547333717581, "phrase": "sad_operations"}, {"score": 0.0028463059289874637, "phrase": "poor_accuracy"}, {"score": 0.0027830917623582903, "phrase": "new_algorithm"}, {"score": 0.002660832900348446, "phrase": "search_locations"}, {"score": 0.0024478159375394878, "phrase": "previously_calculated_neighboring_positions"}, {"score": 0.00241658945942583, "phrase": "proposed_algorithm"}, {"score": 0.002378114613631841, "phrase": "fixed_search_pattern"}, {"score": 0.0023327506323251074, "phrase": "high_probability"}, {"score": 0.0021876814398268775, "phrase": "proposed_method"}, {"score": 0.002145942273032774, "phrase": "competitive_time_rates"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Block matching algorithms", " Motion estimation", " Differential evolution", " Fitness approximation"], "paper_abstract": "Motion estimation is one of the major problems in developing video coding applications. Among all motion estimation approaches, block-matching (BM) algorithms are the most popular methods due to their effectiveness and simplicity for both software and hardware implementations. A BM approach assumes that the movement of pixels within a defined region of the current frame (macro block, MB) can be modeled as a translation of pixels contained in the previous frame. In this procedure, the motion vector is obtained by minimizing the sum of absolute differences (SAD) produced by the MB of the current frame over a determined search window from the previous frame. The SAD evaluation is computationally expensive and represents the most consuming operation in the BM process. The most straightforward BM method is the full search algorithm (FSA), which finds the most accurate motion vector, exhaustively calculating the SAD values for all the elements of the search window. Over this decade, several fast BM algorithms have been proposed to reduce the number of SAD operations by calculating only a fixed subset of search locations at the cost of poor accuracy. In this paper, a new algorithm based on differential evolution (DE) is proposed to reduce the number of search locations in the BM process. To avoid computing several search locations, the algorithm estimates the SAD values (fitness) for some locations using the SAD values of previously calculated neighboring positions. As the proposed algorithm does not consider any fixed search pattern or any other different assumption, a high probability for finding the true minimum (accurate motion vector) is expected. In comparison with other fast BM algorithms, the proposed method deploys more accurate motion vectors, yet delivering competitive time rates. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Block-matching algorithm based on differential evolution for motion estimation", "paper_id": "WOS:000313855000041"}