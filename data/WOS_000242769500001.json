{"auto_keywords": [{"score": 0.04302914169551048, "phrase": "horizontal_and_hierarchical_collaboration"}, {"score": 0.007355926446185729, "phrase": "asynchronous_collaboration"}, {"score": 0.00481495049065317, "phrase": "collaborative_environment"}, {"score": 0.004372442291178139, "phrase": "distributed_cad_systems"}, {"score": 0.004312622975366676, "phrase": "collaborative_methodologies"}, {"score": 0.0037060428445111694, "phrase": "flexible_and_multilayer_architecture"}, {"score": 0.003630299396270101, "phrase": "java"}, {"score": 0.003097865379563127, "phrase": "system's_communication_types"}, {"score": 0.0023999697562763433, "phrase": "macro_data"}, {"score": 0.0021049977753042253, "phrase": "communication_types"}], "paper_keywords": ["CAD", " flexible architecture", " macro data", " horizontal and hierarchical collaboration", " asynchronous collaboration"], "paper_abstract": "Recently, there are products that have been carded out to develop distributed CAD systems with collaborative methodologies. But how to integrate between horizontal and hierarchical collaboration is difficult. In order to prevent problems occurring while integrating horizontal and hierarchical collaboration, a flexible and multilayer architecture based on Java and solid modeling kernel - Spring Solid - is proposed in this article. By implementing this architecture, we change the system's communication types into three types - 'Stand Alone', 'Thin Client-Thick Server', and 'Peer to Peer'. The data passed among this architecture are referenced from the concept of macro data. By utilizing this type of data, an asynchronous collaboration can easily be carried out. As these communication types are changeable and can also achieve asynchronous collaboration, we can integrate the horizontal and hierarchical collaboration more easily.", "paper_title": "Multilayer architecture in collaborative environment", "paper_id": "WOS:000242769500001"}