{"auto_keywords": [{"score": 0.048186916426953504, "phrase": "stable_matching_problem"}, {"score": 0.00481495049065317, "phrase": "small_messages"}, {"score": 0.004695183699894267, "phrase": "distributed_complexity"}, {"score": 0.004288059466938456, "phrase": "communication_graph"}, {"score": 0.0038379074449947067, "phrase": "unmatched_nodes"}, {"score": 0.003417565253539315, "phrase": "blocking_pair"}, {"score": 0.0033492947290751996, "phrase": "distributed_model"}, {"score": 0.0031845067058084583, "phrase": "communication_links"}, {"score": 0.0030895394261534776, "phrase": "stable_matching"}, {"score": 0.002878785759716458, "phrase": "distributed_algorithm"}, {"score": 0.0027934887626965225, "phrase": "omega"}, {"score": 0.002723301730223192, "phrase": "worst_case"}], "paper_keywords": [""], "paper_abstract": "We consider the distributed complexity of the stable matching problem (a.k.a. \"stable marriage\"). In this problem, the communication graph is undirected and bipartite, and each node ranks its neighbors. Given a matching of the nodes, a pair of unmatched nodes is called blocking if they prefer each other to their assigned match. A matching is called stable if it does not induce any blocking pair. In the distributed model, nodes exchange messages in each round over the communication links, until they find a stable matching. We show that if messages may contain at most B bits each, then any distributed algorithm that solves the stable matching problem requires Omega (root n/B log n) communication rounds in the worst case, even for graphs of diameter O(log n), where n is the number of nodes in the graph. Furthermore, the lower bound holds even if we allow the output to contain O (root n) blocking pairs, and if a pair is considered blocking only if they like each other much more then their assigned match.", "paper_title": "On the complexity of distributed stable matching with small messages", "paper_id": "WOS:000283114200001"}