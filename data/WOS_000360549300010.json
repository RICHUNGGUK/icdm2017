{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "time_synchronization"}, {"score": 0.0482937679895443, "phrase": "distributed_systems"}, {"score": 0.0047468516620285525, "phrase": "fundamental_requirement"}, {"score": 0.004296264970612285, "phrase": "high_accuracy"}, {"score": 0.004195418010131832, "phrase": "even_more_than_common_protocols"}, {"score": 0.004136044939878838, "phrase": "network_time_protocol"}, {"score": 0.0040969285074699, "phrase": "precision_time_protocol"}, {"score": 0.003925414526537783, "phrase": "additional_computations"}, {"score": 0.0038698476651328898, "phrase": "online_distributed_tracing_and_monitoring_system"}, {"score": 0.0037789720824759503, "phrase": "functional_and_performance_problems"}, {"score": 0.0036553070575015344, "phrase": "high_precision"}, {"score": 0.0036207206487324506, "phrase": "minimum_time_overhead_and_system_resource_consumption"}, {"score": 0.003436242862104006, "phrase": "efficient_algorithm"}, {"score": 0.003371508176308189, "phrase": "online_mode"}, {"score": 0.0032922964156452696, "phrase": "distributed_services"}, {"score": 0.0032456625605347417, "phrase": "proposed_method"}, {"score": 0.0031693980719538317, "phrase": "five_key_requirements"}, {"score": 0.0031244995579170465, "phrase": "practical_solution"}, {"score": 0.0030078460113945136, "phrase": "microseconds_scale_accuracy"}, {"score": 0.002923214590192792, "phrase": "trace_events"}, {"score": 0.002895535087931938, "phrase": "nanosecond_timestamp_granularity"}, {"score": 0.0027741761880779535, "phrase": "new_network_traffic"}, {"score": 0.002657890175649468, "phrase": "existing_traffic"}, {"score": 0.002570817338292482, "phrase": "distributed_traces"}, {"score": 0.002546466113418944, "phrase": "average_time_complexity"}, {"score": 0.002486589906779091, "phrase": "synchronization_update"}, {"score": 0.002416589459425828, "phrase": "online_synchronization_parameters"}, {"score": 0.0022933216359142736, "phrase": "early_estimates"}, {"score": 0.0022608057001451414, "phrase": "significant_buffering"}, {"score": 0.0022393843660697484, "phrase": "earlier_data"}, {"score": 0.0021557052355026048, "phrase": "distributed_trace_synchronization"}], "paper_keywords": ["Accuracy", " Time synchronization", " Online", " Optimum", " Timestamps", " Drift", " Offset", " Trace events", " Kernel", " Convex-Hull"], "paper_abstract": "Time synchronization is a fundamental requirement for many services provided by distributed systems. For this purpose, several time synchronization protocols have been proposed. However, they either achieve high accuracy by adding further network traffic, even more than common protocols such as network time protocol and precision time protocol, or consume a lot of time in additional computations. An online distributed tracing and monitoring system, used to identify functional and performance problems in distributed systems, must offer high precision with minimum time overhead and system resource consumption. The aim of this paper is to propose an efficient algorithm for time synchronization in online mode, applicable for all distributed services. The proposed method in this paper addresses five key requirements for a practical solution in distributed systems. First, it provides microseconds scale accuracy, which is applicable for trace events with nanosecond timestamp granularity. Secondly, it does not require adding new network traffic, using the send and receive time of existing traffic. Thirdly, it synchronizes the distributed traces in average time complexity of O(1) per synchronization update. Fourthly, it updates online synchronization parameters immediately without latency. Finally, it iteratively refines the early estimates without requiring significant buffering of earlier data. Although we used this work for distributed trace synchronization, it is a general, fully incremental, continuous synchronization approach applicable to most synchronization purposes.", "paper_title": "Online Incremental Clock Synchronization", "paper_id": "WOS:000360549300010"}