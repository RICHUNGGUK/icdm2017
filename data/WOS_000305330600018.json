{"auto_keywords": [{"score": 0.04610758837572877, "phrase": "temporal_logics"}, {"score": 0.03724793858998928, "phrase": "hybrid_automaton"}, {"score": 0.0308162514646343, "phrase": "computation_tree_logic"}, {"score": 0.027812448676070446, "phrase": "requirement_specification"}, {"score": 0.00481495049065317, "phrase": "multi-robot_motion"}, {"score": 0.004761010795871555, "phrase": "temporal_logic_specifications"}, {"score": 0.004466519142879166, "phrase": "formal_requirement_specifications"}, {"score": 0.004366970206156021, "phrase": "regular_tessellation"}, {"score": 0.004158794879468156, "phrase": "disjoint_regular_and_equal_cells"}, {"score": 0.003743381699791, "phrase": "finite_collection"}, {"score": 0.0037153426267756452, "phrase": "continuous-time_nonlinear_closed-loop_dynamics"}, {"score": 0.003485304124598714, "phrase": "finitely_many_modes"}, {"score": 0.003382017342396959, "phrase": "current_cell"}, {"score": 0.0033315236647127734, "phrase": "adjacent_cell"}, {"score": 0.0032941471167321408, "phrase": "corresponding_facet"}, {"score": 0.003232779373179631, "phrase": "motion_capabilities"}, {"score": 0.003172551230409948, "phrase": "bisimilar_discrete_abstraction"}, {"score": 0.002931569771634119, "phrase": "linear-time_temporal_logic"}, {"score": 0.0028127163745564777, "phrase": "motion_planning"}, {"score": 0.0027395968397212053, "phrase": "discrete_level"}, {"score": 0.0026986685585382347, "phrase": "parallel_composition"}, {"score": 0.002678433668156678, "phrase": "discrete_abstractions"}, {"score": 0.0025795066118838067, "phrase": "suitable_temporal_logic"}, {"score": 0.0025124343366192954, "phrase": "discrete_planning_solutions"}, {"score": 0.002437907960209364, "phrase": "demonstration_purpose"}, {"score": 0.0024105326885334962, "phrase": "finite_automaton"}, {"score": 0.0022781884538102264, "phrase": "model_checker"}, {"score": 0.0022696277881969896, "phrase": "cadence_smv"}, {"score": 0.0022273034991008326, "phrase": "coordinated_verified_motion_planning_solutions"}, {"score": 0.0021530945641993152, "phrase": "proposed_framework"}, {"score": 0.0021049977753042253, "phrase": "coordinated_motion_planning_problems"}], "paper_keywords": ["motion planning", " multi-robot systems", " temporal logic", " hybrid automata", " discrete abstraction"], "paper_abstract": "We propose a framework for the coordination of a network of robots with respect to formal requirement specifications expressed in temporal logics. A regular tessellation is used to partition the space of interest into a union of disjoint regular and equal cells with finite facets, and each cell can only be occupied by a robot or an obstacle. Each robot is assumed to be equipped with a finite collection of continuous-time nonlinear closed-loop dynamics to be operated in. The robot is then modeled as a hybrid automaton for capturing the finitely many modes of operation for either staying within the current cell or reaching an adjacent cell through the corresponding facet. By taking the motion capabilities into account, a bisimilar discrete abstraction of the hybrid automaton can be constructed. Having the two systems bisimilar, all properties that are expressible in temporal logics such as Linear-time Temporal Logic, Computation Tree Logic, and A mu-calculus can be preserved. Motion planning can then be performed at a discrete level by considering the parallel composition of discrete abstractions of the robots with a requirement specification given in a suitable temporal logic. The bisimilarity ensures that the discrete planning solutions are executable by the robots. For demonstration purpose, a finite automaton is used as the abstraction and the requirement specification is expressed in Computation Tree Logic. The model checker Cadence SMV is used to generate coordinated verified motion planning solutions. Two autonomous aerial robots are used to demonstrate how the proposed framework may be applied to solve coordinated motion planning problems.", "paper_title": "A framework for multi-robot motion planning from temporal logic specifications", "paper_id": "WOS:000305330600018"}