{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "natural_mergesort"}, {"score": 0.004518442937844318, "phrase": "mechanically_verified_implementation"}, {"score": 0.004349337717774093, "phrase": "sorting_algorithm"}, {"score": 0.003287482882222731, "phrase": "automatic_verification"}, {"score": 0.0031643005824589917, "phrase": "contract_satisfaction"}, {"score": 0.002857849698346116, "phrase": "state-of-the-art_verifier_dafny"}, {"score": 0.002421726275597666, "phrase": "stable_sort"}, {"score": 0.0021049977753042253, "phrase": "complete_text"}], "paper_keywords": ["Assertions", " Invariants", " Mechanical Verification", " Verification", " theorem proving", " formal methods", " dafny", " natural mergesort", " software engineering", " sorting", " stability"], "paper_abstract": "We present a mechanically verified implementation of the sorting algorithm Natural Mergesort that consists of a few methods specified by their contracts of pre/post conditions. Methods are annotated with assertions that allow the automatic verification of the contract satisfaction. This program-proof is made using the state-of-the-art verifier Dafny. We verify not only the standard sortedness property, but also that the algorithm performs a stable sort. Throughout the article, we provide and explain the complete text of the program-proof.", "paper_title": "An Assertional Proof of the Stability and Correctness of Natural Mergesort", "paper_id": "WOS:000367919000006"}