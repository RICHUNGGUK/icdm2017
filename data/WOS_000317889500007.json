{"auto_keywords": [{"score": 0.050056152965932396, "phrase": "parameter_sweep_workflow"}, {"score": 0.04968247202820613, "phrase": "grid"}, {"score": 0.04336854470222437, "phrase": "grid_resources"}, {"score": 0.02898580547904664, "phrase": "besom"}, {"score": 0.01314737013193978, "phrase": "grid_workflow_scheduling"}, {"score": 0.010093452173167646, "phrase": "multiple_workflow_instances"}, {"score": 0.004735519962945449, "phrase": "resource_competition"}, {"score": 0.004709333998298903, "phrase": "workflow_technology"}, {"score": 0.00464449788953748, "phrase": "scientific_domains"}, {"score": 0.004580550308652044, "phrase": "scientific_processes"}, {"score": 0.004455272634364756, "phrase": "large_data_sets"}, {"score": 0.004430629452265786, "phrase": "intensive_computation"}, {"score": 0.004285594361623147, "phrase": "scientific_workflow"}, {"score": 0.004076858589744185, "phrase": "efficient_execution"}, {"score": 0.0037721073763702486, "phrase": "single_workflow"}, {"score": 0.0036892809673917592, "phrase": "parameter_sweep_workflows"}, {"score": 0.003628352506247126, "phrase": "parametric_study"}, {"score": 0.003519242552610694, "phrase": "different_input_parameters"}, {"score": 0.0034324073240680213, "phrase": "parameter_combination"}, {"score": 0.003366347836830716, "phrase": "multiple_instances"}, {"score": 0.0032470094613727433, "phrase": "overall_execution"}, {"score": 0.0032200742200248584, "phrase": "parallel_execution"}, {"score": 0.0032022412405787095, "phrase": "new_challenges"}, {"score": 0.0031318883844936294, "phrase": "scheduling_algorithm"}, {"score": 0.002857605453835429, "phrase": "appropriate_resource_allocation"}, {"score": 0.0028417741269408194, "phrase": "resource_competition_problem"}, {"score": 0.002787050068693891, "phrase": "new_grid_workflow_scheduling_technique"}, {"score": 0.0026956712908896147, "phrase": "scheduling_decision"}, {"score": 0.002643753276264565, "phrase": "resource_dependencies"}, {"score": 0.0025713100093065645, "phrase": "conventional_grid_resource-performance_metrics"}, {"score": 0.0025287979714720423, "phrase": "proposed_technique"}, {"score": 0.0024939073328022507, "phrase": "loop_structures"}, {"score": 0.002480085906545355, "phrase": "scientific_workflows"}, {"score": 0.0024594969044952108, "phrase": "existing_loop-unrolling_techniques"}, {"score": 0.002333001929659445, "phrase": "simulation_results"}, {"score": 0.0023136311468961125, "phrase": "besom_algorithm"}, {"score": 0.0022068557886223673, "phrase": "existing_algorithms"}, {"score": 0.0021763973978248005, "phrase": "complex_structures"}, {"score": 0.002152332983488664, "phrase": "overlapping_resource_dependencies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grid workflow", " Workflow scheduler", " Workflow scheduling algorithm", " Parameter sweep", " Resource competition"], "paper_abstract": "Workflow technology has been adopted in scientific domains to orchestrate and automate scientific processes in order to facilitate experimentation. Such scientific workflows often involve large data sets and intensive computation that necessitate the use of the Grid. To execute a scientific workflow in the Grid, tasks within the workflow are assigned to Grid resources. Thus, to ensure efficient execution of the workflow, Grid workflow scheduling is required to manage the allocation of Grid resources. Although many Grid workflow scheduling techniques exist, they are mainly designed for the execution of a single workflow. This is not the case with parameter sweep workflows, which are used for parametric study and optimisation. A parameter sweep workflow is executed numerous times with different input parameters in order to determine the effect of each parameter combination on the experiment. While executing multiple instances of a parameter sweep workflow in parallel can reduce the time required for the overall execution, this parallel execution introduces new challenges to Grid workflow scheduling. Not only is a scheduling algorithm that is able to manage multiple workflow instances required, but this algorithm also needs the ability to schedule tasks across multiple workflow instances judiciously, as tasks may require the same set of Grid resources. Without appropriate resource allocation, resource competition problem could arise. We propose a new Grid workflow scheduling technique for parameter sweep workflow called the Besom scheduling algorithm. The scheduling decision of our algorithm is based on the resource dependencies of tasks in the workflow, as well as conventional Grid resource-performance metrics. In addition, the proposed technique is extended to handle loop structures in scientific workflows without using existing loop-unrolling techniques. The Besom algorithm is evaluated using simulations with a variety of scenarios. A comparison between the simulation results of the Besom algorithm and of the three existing Grid workflow scheduling algorithms shows that the Besom algorithm is able to perform better than the existing algorithms for workflows that have complex structures and that involve overlapping resource dependencies of tasks. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Scheduling parameter sweep workflow in the Grid based on resource competition", "paper_id": "WOS:000317889500007"}