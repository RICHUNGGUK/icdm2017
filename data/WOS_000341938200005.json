{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "program_comprehension"}, {"score": 0.004260134699483774, "phrase": "qualitative_and_quantitative_research"}, {"score": 0.0037198532511087566, "phrase": "online_survey"}, {"score": 0.0032764307492734145, "phrase": "pragmatic_comprehension_strategies"}, {"score": 0.002962543869356265, "phrase": "graphical_interfaces"}, {"score": 0.002835599469639296, "phrase": "personal_communication"}, {"score": 0.0027741761880779535, "phrase": "team_size"}, {"score": 0.0027140798043053986, "phrase": "open-source_experience"}, {"score": 0.0026206146061151917, "phrase": "face-to-face_communication"}, {"score": 0.0024864020775253767, "phrase": "informal_comments"}, {"score": 0.002287783663138828, "phrase": "comprehension_tools"}, {"score": 0.002123531043641047, "phrase": "research_agendas"}, {"score": 0.0021049977753042253, "phrase": "context-aware_tool_support"}], "paper_keywords": ["Documentation", " Human Factors", " Empirical software engineering", " context-aware software engineering", " knowledge sharing", " program comprehension", " information needs"], "paper_abstract": "Research in program comprehension has evolved considerably over the past decades. However, only little is known about how developers practice program comprehension in their daily work. This article reports on qualitative and quantitative research to comprehend the strategies, tools, and knowledge used for program comprehension. We observed 28 professional developers, focusing on their comprehension behavior, strategies followed, and tools used. In an online survey with 1,477 respondents, we analyzed the importance of certain types of knowledge for comprehension and where developers typically access and share this knowledge. We found that developers follow pragmatic comprehension strategies depending on context. They try to avoid comprehension whenever possible and often put themselves in the role of users by inspecting graphical interfaces. Participants confirmed that standards, experience, and personal communication facilitate comprehension. The team size, its distribution, and open-source experience influence their knowledge sharing and access behavior. While face-to-face communication is preferred for accessing knowledge, knowledge is frequently shared in informal comments. Our results reveal a gap between research and practice, as we did not observe any use of comprehension tools and developers seem to be unaware of them. Overall, our findings call for reconsidering the research agendas towards context-aware tool support.", "paper_title": "On the Comprehension of Program Comprehension", "paper_id": "WOS:000341938200005"}