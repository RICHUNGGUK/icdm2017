{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "execution_history"}, {"score": 0.004734448316824488, "phrase": "forensics_memory_analysis"}, {"score": 0.004577440795549049, "phrase": "great_attention"}, {"score": 0.004500891637057374, "phrase": "cyber_forensics_community"}, {"score": 0.003999578057088828, "phrase": "important_kernel_data_structures"}, {"score": 0.003899612025233852, "phrase": "executive_objects"}, {"score": 0.0035240305920962766, "phrase": "formal_approach"}, {"score": 0.003407026489727143, "phrase": "stack_memory"}, {"score": 0.003349984456443527, "phrase": "process_threads"}, {"score": 0.0032387402145603412, "phrase": "partial_execution_history"}, {"score": 0.003027178161479457, "phrase": "process_logic"}, {"score": 0.0029266219967426224, "phrase": "extracted_properties"}, {"score": 0.002600194073758015, "phrase": "program_assembly_code"}, {"score": 0.002535115422089855, "phrase": "main_focus"}, {"score": 0.0024097920845706795, "phrase": "windows_thread_stack_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["cyber forensics", " physical memory", " stack", " thread", " process logic"], "paper_abstract": "Forensics memory analysis has recently gained great attention in cyber forensics community. However, most of the proposals have focused on the extraction of important kernel data structures such as executive objects from the memory. In this paper, we propose a formal approach to analyze the stack memory of process threads to discover a partial execution history of the process. Our approach uses a process logic to model the extracted properties from the stack and then verify these properties against models generated from the program assembly code. The main focus of the paper is on Windows thread stack analysis though the same idea is applicable to other operating systems. (C) 2007 DFRWS. Published by Elsevier Ltd. All rights reserved.", "paper_title": "Forensic memory analysis: From stack and code to execution history", "paper_id": "WOS:000255423800017"}