{"auto_keywords": [{"score": 0.04475207662864961, "phrase": "fully_uniform_version"}, {"score": 0.044025223828763595, "phrase": "constant_factors"}, {"score": 0.031191689854587448, "phrase": "optimal_parameters"}, {"score": 0.00481495049065317, "phrase": "uniform_direct_product_theorems"}, {"score": 0.004796760896831838, "phrase": "simplified"}, {"score": 0.004778631171021279, "phrase": "optimized"}, {"score": 0.004733532938797516, "phrase": "classical_direct_product_theorem"}, {"score": 0.0043218986766902605, "phrase": "slightly_smaller_circuits"}, {"score": 0.004256845492925314, "phrase": "direct_product_theorem"}, {"score": 0.004240735119314779, "phrase": "information-theoretically_optimal_parameters"}, {"score": 0.004059772950454586, "phrase": "efficient_randomized_algorithm_a"}, {"score": 0.004006239465045394, "phrase": "circuit_c"}, {"score": 0.0035685175471526823, "phrase": "output_circuit"}, {"score": 0.0034291306450067627, "phrase": "oracle_access"}, {"score": 0.0034096661914349577, "phrase": "circuit_c."}, {"score": 0.0033903118462555782, "phrase": "goldreich-levin_decoding_algorithm"}, {"score": 0.0033582976109650608, "phrase": "l._a._levin"}, {"score": 0.0033014293617958067, "phrase": "one-way_functions"}, {"score": 0.003264051445489372, "phrase": "twenty-first_annual_acm_symposium"}, {"score": 0.0032271087837182325, "phrase": "seattle"}, {"score": 0.0031305721276121967, "phrase": "yao's_xor_lemma"}, {"score": 0.0030717121936642586, "phrase": "trapdoor_functions"}, {"score": 0.003036927150218697, "phrase": "twenty-third_annual_ieee_symposium"}, {"score": 0.002868805474023381, "phrase": "r._jaiswal"}, {"score": 0.0028525124381208705, "phrase": "v._kabanets"}, {"score": 0.002841701708055512, "phrase": "approximately"}, {"score": 0.0028363116733462618, "phrase": "list-decoding_direct_product_codes"}, {"score": 0.002799394573892567, "phrase": "proceedings"}, {"score": 0.0027829688772838773, "phrase": "forty-seventh_annual_ieee_symposium"}, {"score": 0.0027462841744246014, "phrase": "berkeley"}, {"score": 0.0026489133838301427, "phrase": "efficient_approximate"}, {"score": 0.0026040262154057607, "phrase": "direct_product_codes"}, {"score": 0.0025022179045294836, "phrase": "\"derandomized\"_direct_product_codes"}, {"score": 0.0023771343615901185, "phrase": "decoding_algorithm"}, {"score": 0.0022972306948217548, "phrase": "direct_consequence"}, {"score": 0.0022668857638727244, "phrase": "first_derandomized_direct_product_result"}, {"score": 0.0022369407711124775, "phrase": "hardness_amplification"}, {"score": 0.002169968849836984, "phrase": "input_length"}, {"score": 0.0021494532873322547, "phrase": "general_setting"}, {"score": 0.0021250899336248755, "phrase": "concatenated_codes"}, {"score": 0.0021049977753042253, "phrase": "nearly_optimal_derandomized_amplification"}], "paper_keywords": ["direct product theorem", " direct product code", " Yao's XOR lemma", " error-correcting code", " list-decoding algorithms"], "paper_abstract": "The classical direct product theorem for circuits says that if a Boolean function f : {0, 1}(n) -> {0, 1} is somewhat hard to compute on average by small circuits, then the corresponding k-wise direct product function f(k)(x(1), ..., x(k)) = (f(x(1)), ..., f(x(k))) (where each x(i) is an element of {0, 1}(n)) is significantly harder to compute on average by slightly smaller circuits. We prove a fully uniform version of the direct product theorem with information-theoretically optimal parameters, up to constant factors. Namely, we show that for given k and is an element of, there is an efficient randomized algorithm A with the following property. Given a circuit C that computes f(k) on at least is an element of fraction of inputs, the algorithm A outputs with probability at least 3/4 a list of O(1/is an element of) circuits such that at least one of the circuits on the list computes f on more than 1 -delta fraction of inputs, for delta = O((log 1/is an element of)/ k); moreover, each output circuit is an AC(0) circuit (of size poly(n, k, log 1/delta, 1/is an element of)), with oracle access to the circuit C. Using the Goldreich-Levin decoding algorithm [O. Goldreich and L. A. Levin, A hard-core predicate for all one-way functions, in Proceedings of the Twenty-First Annual ACM Symposium on Theory of Computing, Seattle, 1989, pp. 25-32], we also get a fully uniform version of Yao's XOR lemma [A. C. Yao, Theory and applications of trapdoor functions, in Proceedings of the Twenty-Third Annual IEEE Symposium on Foundations of Computer Science, Chicago, 1982, pp. 80-91] with optimal parameters, up to constant factors. Our results simplify and improve those in [R. Impagliazzo, R. Jaiswal, and V. Kabanets, Approximately list-decoding direct product codes and uniform hardness amplification, in Proceedings of the Forty-Seventh Annual IEEE Symposium on Foundations of Computer Science, Berkeley, CA, 2006, pp. 187-196]. Our main result may be viewed as an efficient approximate, local, list-decoding algorithm for direct product codes (encoding a function by its values on all k-tuples) with optimal parameters. We generalize it to a family of \"derandomized\" direct product codes, which we call intersection codes, where the encoding provides values of the function only on a subfamily of k-tuples. The quality of the decoding algorithm is then determined by sampling properties of the sets in this family and their intersections. As a direct consequence of this generalization we obtain the first derandomized direct product result in the uniform setting, allowing hardness amplification with only constant (as opposed to a factor of k) increase in the input length. Finally, this general setting naturally allows the decoding of concatenated codes, which further yields nearly optimal derandomized amplification.", "paper_title": "UNIFORM DIRECT PRODUCT THEOREMS: SIMPLIFIED, OPTIMIZED, AND DERANDOMIZED", "paper_id": "WOS:000277584300001"}