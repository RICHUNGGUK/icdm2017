{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "heterogeneous_mpsocs"}, {"score": 0.004772593750252861, "phrase": "image_processing"}, {"score": 0.004526129302830441, "phrase": "compact_design"}, {"score": 0.004466519142879166, "phrase": "computing_power"}, {"score": 0.004292337783332826, "phrase": "massively_parallel_processor_arrays"}, {"score": 0.004143196873246147, "phrase": "instruction-set_extensions"}, {"score": 0.003946519058822334, "phrase": "low-level_image-processing_algorithms"}, {"score": 0.003759142310009214, "phrase": "multiple_processing_elements"}, {"score": 0.003676926952533304, "phrase": "different_characteristics"}, {"score": 0.0035648266669315943, "phrase": "application_mapping"}, {"score": 0.0033955105098235345, "phrase": "heterogeneous_mpsocs_results"}, {"score": 0.003350740737336966, "phrase": "static_mapping"}, {"score": 0.0032485526269852606, "phrase": "different_pe_types"}, {"score": 0.0029471818883482688, "phrase": "instantaneous_load"}, {"score": 0.002592100731070259, "phrase": "heterogeneous_mpsoc"}, {"score": 0.0025241429061867633, "phrase": "real-world_image-processing_algorithm"}, {"score": 0.002447101794397243, "phrase": "case_study"}, {"score": 0.002404136142279618, "phrase": "resource-aware_programming_model"}, {"score": 0.002382936364692606, "phrase": "invasive_computing"}, {"score": 0.0023101951336207955, "phrase": "worst_observed_latency"}, {"score": 0.002279702500235741, "phrase": "application_program"}, {"score": 0.0022101055924375725, "phrase": "different_types"}, {"score": 0.0021521410307795657, "phrase": "heterogeneous_mpsoc."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Resource awareness", " Invasive Computing", " Image processing", " Computer vision", " MPSoC", " Heterogeneous processor"], "paper_abstract": "Multiprocessor system-on-chip (MPSoC) designs offer a lot of computational power assembled in a compact design. The computing power of MPSoCs can be further augmented by adding massively parallel processor arrays (MPPA) and specialized hardware with instruction-set extensions. On-chip MPPAs can be used to accelerate low-level image-processing algorithms with massive inherent parallelism. However, the presence of multiple processing elements (PEs) with different characteristics raises issues related to programming and application mapping, among others. The conventional approach used for programming heterogeneous MPSoCs results in a static mapping of various parts of the application to different PE types, based on the nature of the algorithm and the structure of the PEs. Yet, such a mapping scheme independent of the instantaneous load on the PEs may lead to under-utilization of some type of PEs while overloading others. In this work, we investigate the benefits of using a heterogeneous MPSoC for accelerating various stages within a real-world image-processing algorithm for object-recognition. A case study demonstrates that a resource-aware programming model called Invasive Computing helps to improve the throughput and worst observed latency of the application program, by dynamically mapping applications to different types of PEs available on a heterogeneous MPSoC. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Resource-awareness on heterogeneous MPSoCs for image processing", "paper_id": "WOS:000367492700017"}