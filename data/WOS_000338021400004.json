{"auto_keywords": [{"score": 0.03778979740462975, "phrase": "bpel"}, {"score": 0.03459305925622503, "phrase": "code_duplication"}, {"score": 0.034272138803096666, "phrase": "process_complexity"}, {"score": 0.03286320183781393, "phrase": "fault_policy"}, {"score": 0.00481495049065317, "phrase": "reusable_fault_handling"}, {"score": 0.0047689174754929195, "phrase": "ws-bpel._service_oriented_architecture"}, {"score": 0.004589124394375718, "phrase": "distributed_computing"}, {"score": 0.004394910907549057, "phrase": "interoperable_services"}, {"score": 0.004311241567238011, "phrase": "reliable_and_robust_service_oriented_information_systems"}, {"score": 0.004148631410346188, "phrase": "effective_fault_handling"}, {"score": 0.004108943003483022, "phrase": "ws-bpel"}, {"score": 0.003992129945230457, "phrase": "sophisticated_and_reusable_support"}, {"score": 0.003878625406105021, "phrase": "process_designers"}, {"score": 0.0037864980290391354, "phrase": "process_implementation"}, {"score": 0.003696550794743764, "phrase": "novel_policy"}, {"score": 0.0034392837410790293, "phrase": "separate_business_process"}, {"score": 0.003215295260684715, "phrase": "overall_process_size"}, {"score": 0.003169222811082848, "phrase": "proposed_framework"}, {"score": 0.0030203487665054806, "phrase": "bpel_fault"}, {"score": 0.0029203055813347874, "phrase": "fault_handlers"}, {"score": 0.002864628676257225, "phrase": "recovery_actions"}, {"score": 0.0027697290872182477, "phrase": "handling_bpel_process_faults"}, {"score": 0.0025892330566358503, "phrase": "prototype_implementation"}, {"score": 0.0025521085778978042, "phrase": "proposed_policy"}, {"score": 0.0025155150482635688, "phrase": "handling_framework"}, {"score": 0.0023515464194592195, "phrase": "proposed_solution"}, {"score": 0.0022409963215568565, "phrase": "process_size"}, {"score": 0.0021049977753042253, "phrase": "bpel_processes"}], "paper_keywords": ["Fault handling", " policy driven mechanism", " Service Oriented Architecture", " WS-BPEL", " PDFHF for BPEL"], "paper_abstract": "Service Oriented Architecture (SOA) is an evolution of distributed computing and it is based on the concepts of interoperable services. To enable reliable and robust service oriented information systems, it is important to establish an effective fault handling. WS-BPEL 2.0 specification does not provide sophisticated and reusable support for handling faults and challenges process designers with many obstacles in the process implementation. We introduce a novel policy driven fault handling framework for BPEL by extending the WS-BPEL 2.0 specification. We propose to separate business process and fault handling logic with the aim to decrease code duplication, process complexity and overall process size. The proposed framework consists of a fault policy which includes the definition of BPEL fault handling logic. The fault policy defines fault handlers and fault handling recovery actions that can be used to design handling BPEL process faults. As a proof-of-concept, we have developed a prototype implementation of the proposed policy driven fault handling framework for BPEL and tested it on 117 real world BPEL scenarios. We have confirmed that the proposed solution decreases the code duplication, the process complexity and overall the process size. Even more, we successfully improved the reliability and readability of BPEL processes.", "paper_title": "Towards a Reusable Fault Handling in WS-BPEL", "paper_id": "WOS:000338021400004"}