{"auto_keywords": [{"score": 0.04936538823130262, "phrase": "mapreduce"}, {"score": 0.007512008486658358, "phrase": "cloud_computing"}, {"score": 0.006275346416317836, "phrase": "intermediate_data"}, {"score": 0.00481495049065317, "phrase": "adaptive_combiner"}, {"score": 0.00450020161335541, "phrase": "programming_model"}, {"score": 0.004366970206156021, "phrase": "massive_amount"}, {"score": 0.002976019715894587, "phrase": "performance_degradation"}, {"score": 0.0029095936591723645, "phrase": "intermediate_data_benefits"}, {"score": 0.0022696277881969896, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "seven_applications"}], "paper_keywords": ["MapReduce", " Combiner", " Cloud computing", " ACMR"], "paper_abstract": "MapReduce is a programming model to process a massive amount of data on cloud computing. MapReduce processes data in two phases and needs to transfer intermediate data among computers between phases. MapReduce allows programmers to aggregate intermediate data with a function named combiner before transferring it. By leaving programmers the choice of using a combiner, MapReduce has a risk of performance degradation because aggregating intermediate data benefits some applications but harms others. Now, MapReduce can work with our proposal named the Adaptive Combiner for MapReduce (ACMR) to automatically, smartly, and trainer for getting a better performance without any interference of programmers. In experiments on seven applications, MapReduce can utilize ACMR to get the performance comparable to the system that is optimal for an application.", "paper_title": "Adaptive Combiner for MapReduce on cloud computing", "paper_id": "WOS:000345077400011"}