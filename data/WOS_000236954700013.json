{"auto_keywords": [{"score": 0.044159349827621125, "phrase": "multiple_alignment"}, {"score": 0.010947238399882703, "phrase": "preserving_alignment_formulation"}, {"score": 0.009889658301297741, "phrase": "polynomial_time"}, {"score": 0.008139453236691269, "phrase": "iterative_refinements"}, {"score": 0.007998588383538166, "phrase": "similar_or_better_accuracy"}, {"score": 0.00481495049065317, "phrase": "multiple_sequence_alignment"}, {"score": 0.004772966298144304, "phrase": "traditional_multiple_alignment_formulations"}, {"score": 0.0047461450542262635, "phrase": "np"}, {"score": 0.004608641771480322, "phrase": "acceptable_alignments"}, {"score": 0.004568448239746845, "phrase": "guaranteed_performance"}, {"score": 0.004489105014468467, "phrase": "substantial_difficulty"}, {"score": 0.004424034641288626, "phrase": "resulting_alignment"}, {"score": 0.004246790720119858, "phrase": "alternative_formulation"}, {"score": 0.004100506821168323, "phrase": "k_sequences"}, {"score": 0.0037894584172273316, "phrase": "mainstream_method"}, {"score": 0.0036269293593361447, "phrase": "pairwise_similarities"}, {"score": 0.0035224543064259553, "phrase": "pairwise_alignments"}, {"score": 0.003491700554796557, "phrase": "consistency_information"}, {"score": 0.0032837882028183287, "phrase": "reasonable_objective_function"}, {"score": 0.003217263549364608, "phrase": "shortest_preserving_alignment"}, {"score": 0.0031337020830262954, "phrase": "graph-theoretic_problem"}, {"score": 0.0030612433926714196, "phrase": "shortest_preserving_multiple_alignment"}, {"score": 0.0029127672735266836, "phrase": "benchmark_multiple_alignments"}, {"score": 0.0028873211377922234, "phrase": "consistency-based_pairwise_alignments"}, {"score": 0.0028123050344492553, "phrase": "best_performing_progressive_alignment_algorithms_tcoffee"}, {"score": 0.0027633772255013164, "phrase": "second_heuristic_progressive_step"}, {"score": 0.0027152983329730173, "phrase": "exact_preserving_alignment_step"}, {"score": 0.0026602596982627, "phrase": "tcoffee"}, {"score": 0.0021049977753042253, "phrase": "software_program"}], "paper_keywords": ["multiple alignment", " polynomial time formulation", " graph theory"], "paper_abstract": "Since traditional multiple alignment formulations are NP-hard, heuristics are commonly employed to find acceptable alignments with no guaranteed performance bound. This causes a substantial difficulty in understanding what the resulting alignment means and in assessing the quality of these alignments. We propose an alternative formulation of multiple alignment based on the idea of finding a multiple alignment of k sequences which preserves k - 1 pairwise alignments as specified by edges of a given tree. Although it is well known that such a preserving alignment always exists, it did not become a mainstream method for multiple alignment since it seems that a lot of information is lost from ignoring pairwise similarities outside the tree. In contrast, by using pairwise alignments that incorporate consistency information from other sequences, we show that it is possible to obtain very good accuracy with the preserving alignment formulation. We show that a reasonable objective function to use is to find the shortest preserving alignment, and, by a reduction to a graph-theoretic problem, that the problem of finding the shortest preserving multiple alignment can be solved in polynomial time. We demonstrate the success of this approach on three sets of benchmark multiple alignments by using consistency-based pairwise alignments from the first stage of two of the best performing progressive alignment algorithms TCoffee and ProbCons and replace the second heuristic progressive step of these algorithms by the exact preserving alignment step. We apply this strategy to TCoffee and show that our approach outperforms TCoffee on two of the three test sets. We apply the strategy to a variant of ProbCons with no iterative refinements and show that our approach achieves similar or better accuracy except on one test set. We also compare our performance to ProbCons with iterative refinements and show that our approach achieves similar or better accuracy on many subcategories even without further refinements. The most important advantage of the preserving alignment formulation is that we are certain that we can solve the problem in polynomial time without using a heuristic. A software program implementing this approach (PSAlign) is available at http://faculty.cs.tamu.edu/shsze/psalign.", "paper_title": "A polynomial time solvable formulation of multiple sequence alignment", "paper_id": "WOS:000236954700013"}