{"auto_keywords": [{"score": 0.04127853893061473, "phrase": "clcs_problem"}, {"score": 0.00481495049065317, "phrase": "constrained_lcs"}, {"score": 0.004776297980616768, "phrase": "run-length_encoded_strings"}, {"score": 0.004496080495247288, "phrase": "longest_common_subsequence"}, {"score": 0.004064958518350867, "phrase": "constrained_sequence_p"}, {"score": 0.004032302251481604, "phrase": "length_r"}, {"score": 0.003999907278478564, "phrase": "previous_research"}, {"score": 0.0036454883790271843, "phrase": "total_r_umber"}, {"score": 0.003616189733352126, "phrase": "ordered_pairs"}, {"score": 0.0028498718992429825, "phrase": "simple_algorithm"}, {"score": 0.002347628167175859, "phrase": "matched_blocks"}, {"score": 0.002319346861878611, "phrase": "first_layer"}, {"score": 0.002182958452794581, "phrase": "fully_matched_cuboids"}, {"score": 0.0021566565951738658, "phrase": "dp_lattice"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Design of algorithms", " Longest common subsequence", " Run-length encoding", " Constrained LCS"], "paper_abstract": "The constrained LCS (CLCS) problem, a recent variant of the longest common subsequence (LCS) problem, has gained much attention. Given two sequences X and Y of lengths n and m, respectively, and the constrained sequence P of length r, previous research shows that the CLCS problem can be solved by either an 0(nmr)-time algorithm based upon dynamic programming (DP) techniques or an 0(r R log log(n + m))-time Hunt-Szymanski-like algorithm, where,R is the total r umber of ordered pairs of positions at which the two strings match. In this paper, we investigate the case that X, Y and P are all in run-length encoded (RLE) format, where the numbers of runs are N, M and R, respectively. We first show that when the sequences are encoded, the CLCS problem can be solved by a simple algorithm in 0(nmR + nMr + Nmr) time without decompressing the sequences. Then, we propose a more efficient algorithm with 0(NMr + r x min{q(1), q(2)} + q(3)) time, where q(1) and q(2) denote the numbers of elements in the south and east faces of the matched blocks on the first layer, respectively, and q(3) denotes the number of face elements of all fully matched cuboids in the DP lattice. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Fast algorithms for computing the constrained LCS of run-length encoded strings", "paper_id": "WOS:000303946800001"}