{"auto_keywords": [{"score": 0.010612387000973441, "phrase": "jpeg_xr_encoding"}, {"score": 0.010509123254216334, "phrase": "jpeg_xr"}, {"score": 0.007569643864974228, "phrase": "entropy_coding"}, {"score": 0.004698000536608171, "phrase": "emerging_image_coding_standard"}, {"score": 0.004606479650820579, "phrase": "hd_photo"}, {"score": 0.004539005582217309, "phrase": "microsoft_corporation"}, {"score": 0.004450568197899267, "phrase": "high_compression_performance"}, {"score": 0.004321118442104989, "phrase": "de_facto_image_coding_system"}, {"score": 0.00423691771768811, "phrase": "jpeg"}, {"score": 0.003974349782102708, "phrase": "computational_cost"}, {"score": 0.00376488621224566, "phrase": "embedded_systems"}, {"score": 0.003548905904860611, "phrase": "novel_architecture"}, {"score": 0.003462599815177726, "phrase": "previous_architectures"}, {"score": 0.003378385493203297, "phrase": "throughput_bottleneck"}, {"score": 0.0032639039638211347, "phrase": "sequential_algorithm"}, {"score": 0.0030314419455512013, "phrase": "intra-macroblock_data"}, {"score": 0.00266693888510356, "phrase": "pipeline_stage"}, {"score": 0.0023346234464901978, "phrase": "different_degrees"}, {"score": 0.0021682027434117095, "phrase": "parallel_architecture"}, {"score": 0.0021049977753042253, "phrase": "grayscale_images"}], "paper_keywords": ["Design", " Experimentation", " Performance", " JPEG XR", " image coding", " pipelined architecture", " parallel architecture", " scalability"], "paper_abstract": "JPEG XR is an emerging image coding standard, based on HD Photo developed by Microsoft Corporation. It supports high compression performance twice as high as the de facto image coding system, namely, JPEG, and also has an advantage over JPEG 2000 in terms of computational cost. JPEG XR is expected to be widespread for many devices including embedded systems in the near future. In this article, we propose a novel architecture for JPEG XR encoding. In previous architectures, entropy coding was the throughput bottleneck because it was implemented as a sequential algorithm to handle data with dependency. We found that there is no dependency in intra-macroblock data, and we could safely pipeline all the encoding processes including the entropy coding. In addition, each module of our architecture, which can be regarded as a pipeline stage, can be parallelized. As a result, our architecture can achieve 12.8 pixel/cycle at its maximum. To demonstrate our architecture, we designed three versions of our architecture with different degrees of parallelism of one, two, and four. Our four-way parallel architecture achieves 579 Mpixel/sec at 181MHz clock frequency for grayscale images.", "paper_title": "A High-Throughput Pipelined Parallel Architecture for JPEG XR Encoding", "paper_id": "WOS:000313395700003"}