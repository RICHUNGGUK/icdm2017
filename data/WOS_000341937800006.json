{"auto_keywords": [{"score": 0.03985525324325749, "phrase": "wcet"}, {"score": 0.015719700919695684, "phrase": "worst-case_execution_time"}, {"score": 0.007409266933642806, "phrase": "control_programs"}, {"score": 0.004611108249179507, "phrase": "program_semantics"}, {"score": 0.0045124316982387315, "phrase": "hard_real-time_constraints"}, {"score": 0.004377806391261418, "phrase": "upper_bounds"}, {"score": 0.004084920064588169, "phrase": "real_wcet"}, {"score": 0.003894963476923956, "phrase": "synchronous_reactive_control_loops"}, {"score": 0.0038447018470115146, "phrase": "fixed_clock"}, {"score": 0.00374610869916551, "phrase": "loop_body"}, {"score": 0.003665874747419775, "phrase": "clock_period"}, {"score": 0.0033471722682967046, "phrase": "optimization_modulo_theory_problem"}, {"score": 0.0030960762496815737, "phrase": "longest_path"}, {"score": 0.0029392020223716966, "phrase": "optimization_modulo_theory"}, {"score": 0.002913837945508097, "phrase": "satisfiability_modulo_theory"}, {"score": 0.0028513785049061767, "phrase": "maximization_problems"}, {"score": 0.002790254164160135, "phrase": "wcet_problems"}, {"score": 0.002766171878646582, "phrase": "smt_yield_formulas"}, {"score": 0.002718627370925435, "phrase": "current_production-grade"}, {"score": 0.0024820711838337713, "phrase": "appropriate_\"cuts"}, {"score": 0.0023767561522363367, "phrase": "computation_time"}, {"score": 0.0022174469839432013, "phrase": "otawa_analyzer"}, {"score": 0.0021604924928015283, "phrase": "underlying_microarchitectural_analysis"}, {"score": 0.0021049977753042253, "phrase": "notable_improvement"}], "paper_keywords": ["WCET", " Optimization Modulo Theory", " Bounded Model Checking", " Craig Interpolants"], "paper_abstract": "In systems with hard real-time constraints, it is necessary to compute upper bounds on the worst-case execution time (WCET) of programs; the closer the bound to the real WCET, the better. This is especially the case of synchronous reactive control loops with a fixed clock; the WCET of the loop body must not exceed the clock period. We compute the WCET (or at least a close upper bound thereof) as the solution of an optimization modulo theory problem that takes into account the semantics of the program, in contrast to other methods that compute the longest path whether or not it is feasible according to these semantics. Optimization modulo theory extends satisfiability modulo theory (SMT) to maximization problems. Immediate encodings of WCET problems into SMT yield formulas intractable for all current production-grade solvers-this is inherent to the DPLL(T) approach to SMT implemented in these solvers. By conjoining some appropriate \"cuts\" to these formulas, we considerably reduce the computation time of the SMT-solver. We experimented our approach on a variety of control programs, using the OTAWA analyzer both as baseline and as underlying microarchitectural analysis for our analysis, and show notable improvement on the WCET bound on a variety of benchmarks and control programs.", "paper_title": "How to Compute Worst-Case Execution Time by Optimization Modulo Theory and a Clever Encoding of Program Semantics", "paper_id": "WOS:000341937800006"}