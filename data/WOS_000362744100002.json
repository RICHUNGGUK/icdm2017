{"auto_keywords": [{"score": 0.04930231023249967, "phrase": "combinatorial_explosion"}, {"score": 0.00481495049065317, "phrase": "feasibility_analysis"}, {"score": 0.004775726266706856, "phrase": "static_priorities"}, {"score": 0.004546970518808189, "phrase": "hard_real-time_systems"}, {"score": 0.004418601451254075, "phrase": "static_priority_schedulability"}, {"score": 0.004382591802405206, "phrase": "workload_models"}, {"score": 0.004258843584164121, "phrase": "traditional_periodic_task_model"}, {"score": 0.0041725881174377345, "phrase": "directed_graphs"}, {"score": 0.004054745478848129, "phrase": "model_structures"}, {"score": 0.003876226041373242, "phrase": "dynamic_priority_schedulers"}, {"score": 0.0038446194432899183, "phrase": "pseudo-polynomial_time_analysis_methods"}, {"score": 0.0035278613436978933, "phrase": "relatively_simple_class"}, {"score": 0.0034990853199511982, "phrase": "cyclic_digraphs"}, {"score": 0.003331275574328097, "phrase": "different_behaviors"}, {"score": 0.003290591812800382, "phrase": "participating_tasks"}, {"score": 0.003223883109446599, "phrase": "novel_iterative_approach"}, {"score": 0.002970260970134645, "phrase": "exponential_growth"}, {"score": 0.002839352319679885, "phrase": "static_task_priorities"}, {"score": 0.0027817658627604653, "phrase": "prototype_implementation"}, {"score": 0.0027477745788313163, "phrase": "state-of-the_art_pseudo-polynomial_analysis"}, {"score": 0.0026482660253173075, "phrase": "better_scaling_behavior"}, {"score": 0.002626645763725465, "phrase": "randomly_generated_problem_instances"}, {"score": 0.0025523518748506347, "phrase": "non-preemptive_schedulers"}, {"score": 0.002510843167476253, "phrase": "static_job-type_priorities"}, {"score": 0.0024700078414481297, "phrase": "different_types"}, {"score": 0.0024001337476063094, "phrase": "different_static_priorities"}, {"score": 0.0021662983565317283, "phrase": "combinatorial_problems"}, {"score": 0.0021223334214910006, "phrase": "real-time_systems"}], "paper_keywords": ["Real-time", " Schedulability analysis", " Static priorities", " Combinatorial explosion", " Abstraction refinement"], "paper_abstract": "Combinatorial explosion is a challenge for many analysis problems in the theory of hard real-time systems. One of these problems is static priority schedulability of workload models which are more expressive than the traditional periodic task model. Different classes of directed graphs have been proposed in recent years to model structures like frames, branching and loops. In contrast to dynamic priority schedulers with pseudo-polynomial time analysis methods, static priority schedulability has been shown to be intractable since it is strongly coNP-hard already for the relatively simple class of cyclic digraphs. The core of this problem is the necessity to combine different behaviors of the participating tasks. We introduce a novel iterative approach to efficiently cope with this combinatorial explosion, called combinatorial abstraction refinement. In combination with other techniques it significantly reduces exponential growth of run-time for most inputs. We apply the method to static task priorities and demonstrate that a prototype implementation outperforms the state-of-the art pseudo-polynomial analysis for dynamic priority feasibility. It further shows better scaling behavior for randomly generated problem instances. We extend the approach to non-preemptive schedulers as well as static job-type priorities where jobs of different types in the same task may be assigned different static priorities. Finally, we provide a general, abstract formulation of the algorithm, since we believe that this method can be applicable to a variety of combinatorial problems in the theory of real-time systems with certain abstraction structures.", "paper_title": "Combinatorial abstraction refinement for feasibility analysis of static priorities", "paper_id": "WOS:000362744100002"}