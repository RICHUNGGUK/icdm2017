{"auto_keywords": [{"score": 0.045587003596087645, "phrase": "list_edge-coloring"}, {"score": 0.00481495049065317, "phrase": "list_edge-colorings"}, {"score": 0.003887894704361635, "phrase": "allowed_colors"}, {"score": 0.003777140768785618, "phrase": "ito"}, {"score": 0.003733653755858226, "phrase": "kaminski"}, {"score": 0.003690718241672105, "phrase": "demaine"}, {"score": 0.0036272258853286433, "phrase": "sufficient_condition"}, {"score": 0.0031937337757356526, "phrase": "new_sufficient_condition"}, {"score": 0.002795671770303977, "phrase": "polynomial-time_algorithm"}, {"score": 0.002623184850933423, "phrase": "n_vertices"}, {"score": 0.0023228223366301226, "phrase": "recoloring_steps"}, {"score": 0.0022176487309947266, "phrase": "infinite_family"}], "paper_keywords": ["graph algorithm", " list edge-coloring", " reachability on solution space", " reconfiguration problem", " tree"], "paper_abstract": "We study the problem of reconfiguring one list edge-coloring of a graph into another list edge-coloring by changing only one edge color assignment at a time, while at all times maintaining a list edge-coloring, given a list of allowed colors for each edge. Ito, Kaminski and Demaine gave a sufficient condition so that any list edge-coloring of a tree can be transformed into any other. In this paper, we give a new sufficient condition which improves the known one. Our sufficient condition is best possible in some sense. The proof is constructive, and yields a polynomial-time algorithm that finds a transformation between two given list edge-colorings of a tree with n vertices via O(n(2)) recoloring steps. We remark that the upper bound O(n(2)) on the number of recoloring steps is tight, because there is an infinite family of instances on paths that satisfy our sufficient condition and whose reconfiguration requires Omega(n(2)) recoloring steps.", "paper_title": "An Improved Sufficient Condition Tor Reconfiguration of List Edge-Colorings in a Tree", "paper_id": "WOS:000301614700005"}