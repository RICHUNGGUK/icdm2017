{"auto_keywords": [{"score": 0.033550893132319834, "phrase": "aes"}, {"score": 0.030684584799701625, "phrase": "code_size"}, {"score": 0.029419541077142855, "phrase": "silicon_area"}, {"score": 0.00481495049065317, "phrase": "efficient_aes_implementation"}, {"score": 0.004712065638657606, "phrase": "secure_communication"}, {"score": 0.004661446705304497, "phrase": "public_networks"}, {"score": 0.004464326432401002, "phrase": "cryptographic_algorithms"}, {"score": 0.00441635700580562, "phrase": "basic_building_blocks"}, {"score": 0.004298666679374568, "phrase": "considerable_burden"}, {"score": 0.004161553532799662, "phrase": "cell_phones"}, {"score": 0.004094639048362357, "phrase": "sensor_nodes"}, {"score": 0.003964007795174772, "phrase": "processing_power"}, {"score": 0.0035386420095120706, "phrase": "symmetric_cryptographic_algorithms"}, {"score": 0.0032806521851034766, "phrase": "custom_instructions"}, {"score": 0.003210446135114967, "phrase": "advanced_encryption_standard"}, {"score": 0.002714779217561487, "phrase": "moderate_increase"}, {"score": 0.002656650588033728, "phrase": "aes_performance"}, {"score": 0.002436289099444074, "phrase": "implementation_flexibility"}, {"score": 0.002246292543825748, "phrase": "superscalar_processors"}, {"score": 0.002127915423138391, "phrase": "previously_proposed_cryptographic_processors"}, {"score": 0.0021049977753042253, "phrase": "instruction_set_extensions"}], "paper_keywords": ["Advanced Encryption Standard", " instruction set extensions", " embedded RISC processor", " SPARC V8 architecture", " efficient implementation"], "paper_abstract": "Secure communication over public networks like the Internet requires the use of cryptographic algorithms as basic building blocks. Most cryptographic workloads pose a considerable burden on devices like PDAs, cell phones, and sensor nodes, which are limited in processing power, memory and energy. In this paper we present an approach to increase the efficiency of 32-bit processors for handling symmetric cryptographic algorithms with the help of instruction set extensions. We propose a number of custom instructions to support the Advanced Encryption Standard (AES). Using the SPARC V8-compatible Leon2 embedded processor, we evaluate the effects of the extensions on performance and code size of AES, as well as on silicon area. With a moderate increase in silicon area, AES performance can be improved by a factor of nearly 10, while code size is reduced significantly and implementation flexibility is retained. We also show that our approach is very beneficial for implementation in superscalar processors and that it can compete with the performance of previously proposed cryptographic processors and instruction set extensions.", "paper_title": "Instruction set extensions for efficient AES implementation on 32-bit processors", "paper_id": "WOS:000242313400022"}