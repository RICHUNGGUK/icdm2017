{"auto_keywords": [{"score": 0.04381934363111791, "phrase": "hash_code"}, {"score": 0.041904013256512336, "phrase": "hash_collision"}, {"score": 0.015245246995800028, "phrase": "hash_functions"}, {"score": 0.013904858211766518, "phrase": "source_information_sequence"}, {"score": 0.00908375668577244, "phrase": "npc"}, {"score": 0.004815133171259446, "phrase": "distributed"}, {"score": 0.004716520738331953, "phrase": "adaptive_selection"}, {"score": 0.004549063619065006, "phrase": "compression_efficiency"}, {"score": 0.00450231514359539, "phrase": "feedback-free_and_hash-check_distributed_video_coding"}, {"score": 0.004060350364088702, "phrase": "motion_search"}, {"score": 0.003936389070602614, "phrase": "special_case"}, {"score": 0.0038558497470953306, "phrase": "hash_codes"}, {"score": 0.003816197777388722, "phrase": "wrongly_reconstructed_information_sequences"}, {"score": 0.003531474887552889, "phrase": "decoded_image"}, {"score": 0.003234299589505403, "phrase": "optimal_trade-off"}, {"score": 0.0029467742734417255, "phrase": "rate-distortion_optimization"}, {"score": 0.0026570998719084153, "phrase": "nonzero_coefficients"}, {"score": 0.00257586859792573, "phrase": "second_algorithm"}, {"score": 0.0021601997088758957, "phrase": "detailed_optimization"}, {"score": 0.002104998559040644, "phrase": "ahf"}], "paper_keywords": ["Hash", " Collision", " Distributed video coding", " Wyner-Ziv"], "paper_abstract": "We address the compression efficiency of feedback-free and hash-check distributed video coding, which generates and transmits a hash code of a source information sequence. The hash code helps the decoder perform a motion search. A hash collision is a special case in which the hash codes of wrongly reconstructed information sequences occasionally match the hash code of the source information sequence. This deteriorates the quality of the decoded image greatly. In this paper, the statistics of hash collision are analyzed to help the codec select the optimal trade-off between the probability of hash collision and the length of the hash code, according to the principle of rate-distortion optimization. Furthermore, two novel algorithms are proposed: (1) the nonzero prefix of coefficients (NPC), which indicates the count of nonzero coefficients of each block for the second algorithm, and also saves 8.4% bitrate independently; (2) the adaptive selection of hash functions (AHF), which is based on the NPC and saves a further 2%-6% bitrate on average. The detailed optimization of the parameters of AHF is also presented.", "paper_title": "Distributed video coding with adaptive selection of hash functions", "paper_id": "WOS:000290579600005"}