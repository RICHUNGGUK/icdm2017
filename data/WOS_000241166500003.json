{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "machine_cost"}, {"score": 0.00459165923324494, "phrase": "scheduling_problem"}, {"score": 0.0045052562941109734, "phrase": "rejection_penalties"}, {"score": 0.004255639740735269, "phrase": "independent_jobs"}, {"score": 0.0036379729015583975, "phrase": "new_machines"}, {"score": 0.0035525230119401153, "phrase": "new_job"}, {"score": 0.0030802351224657673, "phrase": "existing_machine"}, {"score": 0.0029935730127943496, "phrase": "machine_load"}, {"score": 0.002895535087931938, "phrase": "new_machine"}, {"score": 0.002486589906779091, "phrase": "rejected_jobs"}, {"score": 0.0024397017438101726, "phrase": "small_job_case"}, {"score": 0.0021352776064254195, "phrase": "optimal_online_algorithm"}, {"score": 0.0021049977753042253, "phrase": "competitive_ratio"}], "paper_keywords": ["scheduling", " online algorithm", " machine cost", " rejection penalty"], "paper_abstract": "In this paper we consider the scheduling problem with machine cost and rejection penalties. For this problem, we are given a sequence of independent jobs, each being characterized by its processing time (size) and its penalty. No machine is initially provided, and when a job is revealed the algorithm has the option to purchase new machines. Right when a new job arrives, we have the following choices: (i) reject it, in which case we pay its penalty; (ii) non-preemptively process it on an existing machine, which contributes to the machine load; (iii) purchase a new machine, and assign it to this machine. The objective is to minimize the sum of the makespan, the cost for purchasing machines, and the total penalty of all rejected jobs. For the small job case, (where all jobs have sizes no greater than the cost for purchasing one machine, and which is the generalization of the Ski-Rental Problem) we present an optimal online algorithm with a competitive ratio of 2.", "paper_title": "Scheduling with machine cost and rejection", "paper_id": "WOS:000241166500003"}