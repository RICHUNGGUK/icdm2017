{"auto_keywords": [{"score": 0.04962656673317322, "phrase": "mercury_blast."}, {"score": 0.03227078104988101, "phrase": "ungapped_extension_stage"}, {"score": 0.00481495049065317, "phrase": "ungapped_extension"}, {"score": 0.0046797114400479135, "phrase": "biosequence_data"}, {"score": 0.004462663711734448, "phrase": "useful_information"}, {"score": 0.004399525320473839, "phrase": "massive_amount"}, {"score": 0.004255639740735269, "phrase": "increasingly_difficult_task"}, {"score": 0.004038943596016986, "phrase": "genomic_data"}, {"score": 0.0038515000499988673, "phrase": "blast._mercury_blast"}, {"score": 0.0037969755088553326, "phrase": "streaming_approach"}, {"score": 0.0037432199549135826, "phrase": "blast_computation"}, {"score": 0.0036727235025069828, "phrase": "performance-critical_sections"}, {"score": 0.0033875770020590796, "phrase": "host_system"}, {"score": 0.0033395980635636644, "phrase": "blast_results"}, {"score": 0.003199687131875466, "phrase": "general-purpose_processor"}, {"score": 0.002787406053363446, "phrase": "mercury_blast_system"}, {"score": 0.0026452734009203764, "phrase": "available_fpgas"}, {"score": 0.0025103699913760057, "phrase": "biosequence_comparisons"}, {"score": 0.002371018116266096, "phrase": "standard_software_distribution"}, {"score": 0.0022824314760583834, "phrase": "complete_blast_application"}, {"score": 0.0021659920594094407, "phrase": "standard_distribution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["BLAST", " Biosequence analysis", " Sequence alignment", " FPGA acceleration"], "paper_abstract": "The amount of biosequence data being produced each year is growing exponentially. Extracting useful information from this massive amount of data efficiently is becoming an increasingly difficult task. There are many available software tools that molecular biologists use for comparing genomic data. This paper focuses on accelerating the most widely used such tool, BLAST. Mercury BLAST takes a streaming approach to the BLAST computation by offloading the performance-critical sections to specialized hardware. This hardware is then used in combination with the processor of the host system to deliver BLAST results in a fraction of the time of the general-purpose processor alone. This paper presents the design of the ungapped extension stage of Mercury BLAST. The architecture of the ungapped extension stage is described along with the context of this stage within the Mercury BLAST system. The design is compact and runs at 100 MHz on available FPGAs, making it an effective and powerful component for accelerating biosequence comparisons. The performance of this stage is 25x that of the standard software distribution, yielding close to 50x performance improvement on the complete BLAST application. The sensitivity is essentially equivalent to that of the standard distribution. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Acceleration of ungapped extension in Mercury BLAST", "paper_id": "WOS:000267301500007"}