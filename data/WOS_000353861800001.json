{"auto_keywords": [{"score": 0.03519156660657269, "phrase": "aadl"}, {"score": 0.00481495049065317, "phrase": "aadl_verification_tool"}, {"score": 0.004762550320451225, "phrase": "model_transformation"}, {"score": 0.00471071771178029, "phrase": "architecture_analysis"}, {"score": 0.00441130431691048, "phrase": "safety-critical_real-time_systems"}, {"score": 0.004176321608449849, "phrase": "formal_specification"}, {"score": 0.004108288481894523, "phrase": "aadl_models"}, {"score": 0.003953806321226277, "phrase": "existing_tools"}, {"score": 0.003910740988145338, "phrase": "timed_abstract_state_machine"}, {"score": 0.003868142906199082, "phrase": "tasm"}, {"score": 0.003373101013123386, "phrase": "functional_and_nonfunctional_properties"}, {"score": 0.0030064251340251196, "phrase": "translation_rules"}, {"score": 0.0029573932605287947, "phrase": "adequate_subset"}, {"score": 0.002877438939246423, "phrase": "thread_component"}, {"score": 0.0028460640294160383, "phrase": "port_communication"}, {"score": 0.002522662955545598, "phrase": "atlas_transformation_language"}, {"score": 0.0024143815950383647, "phrase": "case_study"}, {"score": 0.0023749823753904204, "phrase": "actual_data_processing_unit"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Real-time system", " AADL", " TASM", " Model transformation", " Translation rules"], "paper_abstract": "Architecture Analysis and Design Language (AADL) is often used to model safety-critical real-time systems. Model transformation is widely used to extract a formal specification so that AADL models can be verified and analyzed by existing tools. Timed Abstract State Machine (TASM) is a formalism not only able to specify behavior and communication but also timing and resource aspects of the system. To verify functional and nonfunctional properties of AADL models, this paper presents a methodology for translating AADL to TASM. Our main contribution is to formally define the translation rules from an adequate subset of AADL (including thread component, port communication, behavior annex and mode change) into TASM. Based on these rules, a tool called AADL2TASM is implemented using Atlas Transformation Language (ATL). Finally, a case study from an actual data processing unit of a satellite is provided to validate the transformation and illustrate the practicality of the approach. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Exploring AADL verification tool through model transformation", "paper_id": "WOS:000353861800001"}