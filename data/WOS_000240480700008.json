{"auto_keywords": [{"score": 0.04962656673317322, "phrase": "correction_processes"}, {"score": 0.00481495049065317, "phrase": "fault_detection"}, {"score": 0.004724365740062236, "phrase": "software_reliability_analysis"}, {"score": 0.0046797114400479135, "phrase": "software_reliability"}, {"score": 0.00452670409375785, "phrase": "failure-free_software_operation"}, {"score": 0.004337276328199398, "phrase": "specified_environment"}, {"score": 0.004116440453049531, "phrase": "software_quality"}, {"score": 0.003981776671030206, "phrase": "srgms"}, {"score": 0.003725470458263889, "phrase": "important_measures"}, {"score": 0.0036553070575015344, "phrase": "mean_time"}, {"score": 0.0035356745476539885, "phrase": "remaining_faults"}, {"score": 0.0035022161192936234, "phrase": "defect_levels"}, {"score": 0.003436242862104006, "phrase": "failure_intensity"}, {"score": 0.0032456625605347417, "phrase": "person_power"}, {"score": 0.0031693980719538317, "phrase": "desired_reliability_requirements"}, {"score": 0.002923214590192792, "phrase": "fault_detection_process"}, {"score": 0.002522344964242888, "phrase": "general_framework"}, {"score": 0.0024747842618794255, "phrase": "software_fault_detection"}, {"score": 0.002359759876402679, "phrase": "proposed_approaches"}, {"score": 0.002304263635960015, "phrase": "well-known_srgms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["software fault detection and correction processes", " non-homogeneous Poisson process (NHPP)", " mean value function (MVF)", " software reliability growth model (SRGM)"], "paper_abstract": "Software reliability is defined as the probability of failure-free software operation for a specified period of time in a specified environment and is widely recognized as one of the most significant aspects of software quality. Over the past 30 years, many software reliability growth models (SRGMs) have been proposed and they can greatly help us to estimate some important measures such as the mean time to failure, the number of remaining faults, defect levels, and the failure intensity, etc. Besides, SRGMs can also help to determine person power needed to support the desired reliability requirements. However, from our studies, most of SRGMs only focus on describing the behavior of fault detection process and assume that faults are fixed immediately upon detection. In fact, this assumption may not be realistic. Thus, in this paper, we will propose a general framework for modeling the software fault detection and correction processes. We will also show that the proposed approaches cover a number of well-known SRGMs. Two numerical examples based on two real software failure data sets are presented and discussed in detail. (C) 2005 Published by Elsevier Inc.", "paper_title": "An integration of fault detection and correction processes in software reliability analysis", "paper_id": "WOS:000240480700008"}