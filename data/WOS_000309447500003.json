{"auto_keywords": [{"score": 0.04325684761378906, "phrase": "test_prioritization"}, {"score": 0.015719716506582538, "phrase": "system_models"}, {"score": 0.015383802837300703, "phrase": "modified_system"}, {"score": 0.01505495749468268, "phrase": "existing_test_suite"}, {"score": 0.007738646043126066, "phrase": "empirical_study"}, {"score": 0.004762665113390216, "phrase": "regression_testing"}, {"score": 0.004493207015584002, "phrase": "test_suite"}, {"score": 0.004162445117081609, "phrase": "retesting_process"}, {"score": 0.003955523458325766, "phrase": "early_detection"}, {"score": 0.0038279459368975965, "phrase": "existing_prioritization_methods"}, {"score": 0.0037588493723080757, "phrase": "source_code"}, {"score": 0.0035202324978577263, "phrase": "dependence-based_method"}, {"score": 0.0034440966820590024, "phrase": "state-based_model"}, {"score": 0.0030873424635143045, "phrase": "system_model"}, {"score": 0.0026201089205321704, "phrase": "analytical_framework"}, {"score": 0.002582159550634798, "phrase": "test_prioritization_methods"}, {"score": 0.002314481096847367, "phrase": "different_test_prioritization_methods"}, {"score": 0.002159460831267798, "phrase": "early_fault_detection"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["test suite prioritization", " model-based testing", " extended finite state machine model"], "paper_abstract": "During regression testing, a modified system is often retested using an existing test suite. Since the size of the test suite may be very large, testers are interested in detecting faults in the modified system as early as possible during this retesting process. Test prioritization attempts to order tests for execution so that the chances of early detection of faults during retesting are increased. The existing prioritization methods are based on the source code of the system under test. In this paper, we present and evaluate two model-based selective methods and a dependence-based method of test prioritization utilizing the state-based model of the system under test. These methods assume that the modifications are made both on the system under test and its model. The existing test suite is executed on the system model and information about this execution is used to prioritize tests. Execution of the model is inexpensive as compared with execution of the system under test; therefore, the overhead associated with test prioritization is relatively small. In addition, we present an analytical framework for evaluation of test prioritization methods. This framework may reduce the cost of evaluation as compared with the framework that is based on observation. We have performed an empirical study in which we compared different test prioritization methods. The results of the empirical study suggest that system models may improve the effectiveness of test prioritization with respect to early fault detection. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Regression test suite prioritization using system models", "paper_id": "WOS:000309447500003"}