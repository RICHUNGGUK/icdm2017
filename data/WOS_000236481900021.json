{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "active_objects"}, {"score": 0.041193980626642264, "phrase": "lockstep_protocol"}, {"score": 0.004704187604192605, "phrase": "turn-based_networked_multiplayer_computer_game"}, {"score": 0.004386887374401584, "phrase": "one's_action"}, {"score": 0.004067152645111547, "phrase": "look-ahead_cheating"}, {"score": 0.0033559647822437298, "phrase": "earlier_announced_commitment"}, {"score": 0.0032031180198375283, "phrase": "separate_transmissions"}, {"score": 0.003039445153076014, "phrase": "synchronization_step"}, {"score": 0.0021049977753042253, "phrase": "mere_threat"}], "paper_keywords": [""], "paper_abstract": "In a turn-based networked multiplayer computer game, it is possible to cheat by delaying the announcement of one's action for a turn until one has received messages from all the other players. This look-ahead cheating can be prevented with a lockstep protocol, which requires that the player first announces a commitment to an action and later on the action itself, which can be compared with the earlier announced commitment. However, because the lockstep protocol requires separate transmissions for the commitment and the action and a synchronization step before the actions can be announced, it slows down the turns of the game. In this paper, we propose that active objects can be used to prevent look-ahead cheating. Moreover, we can parameterize the probability of catching cheaters: The smaller this probability is, the less bandwidth and transmissions are required. In most cases, the mere threat of getting caught is enough to discourage cheating, and, consequently, this probability can be quite small.", "paper_title": "Preventing look-ahead cheating with active objects", "paper_id": "WOS:000236481900021"}