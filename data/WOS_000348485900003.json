{"auto_keywords": [{"score": 0.04869496857615713, "phrase": "mpsocs"}, {"score": 0.00481495049065317, "phrase": "chaos_theory_based_workload_analysis"}, {"score": 0.0047448515702010734, "phrase": "dynamic_frequency"}, {"score": 0.004630270043271386, "phrase": "embedded_systems"}, {"score": 0.004562847483469705, "phrase": "transient_overloads"}, {"score": 0.004496402246090618, "phrase": "workload_bursts"}, {"score": 0.004302791070310513, "phrase": "timely_reactions"}, {"score": 0.004198839649063847, "phrase": "unexpected_situations"}, {"score": 0.004097389262726735, "phrase": "smart_techniques"}, {"score": 0.004017989546119125, "phrase": "available_computing_power"}, {"score": 0.003959447096055027, "phrase": "urgent_events"}, {"score": 0.0037888687452790953, "phrase": "processing_frequency"}, {"score": 0.0037519679864796906, "phrase": "inactive_periods"}, {"score": 0.0034187896011435245, "phrase": "dynamic_frequency_scaling_technique"}, {"score": 0.0033524956061690868, "phrase": "workload_trend"}, {"score": 0.003303617297414837, "phrase": "dynamic_wireless_application"}, {"score": 0.003192312493850036, "phrase": "operation_frequency"}, {"score": 0.003130396338031522, "phrase": "worldoad_fluctuations"}, {"score": 0.0030696773722514105, "phrase": "final_performance"}, {"score": 0.002880333728285514, "phrase": "abstract_model"}, {"score": 0.002852256089630964, "phrase": "workload_analysis"}, {"score": 0.0028106505443369545, "phrase": "mathematical_tools"}, {"score": 0.0027159094186967247, "phrase": "dynamic_handling"}, {"score": 0.002689430273401131, "phrase": "data_streams"}, {"score": 0.002663208600887875, "phrase": "complex_behavior"}, {"score": 0.0025608471909800076, "phrase": "proposed_approach"}, {"score": 0.002486659929589854, "phrase": "real_application_workload"}, {"score": 0.0024503741901918527, "phrase": "cycle-accurate_network-on-chip_simulation_framework"}, {"score": 0.0023104373174118458, "phrase": "remarkable_improvements"}, {"score": 0.002276717177453959, "phrase": "final_power_consumption"}, {"score": 0.0021678232353129472, "phrase": "system_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Workload", " Analysis", " Chaos", " Systematic", " DFS", " NoC", " Power"], "paper_abstract": "Embedded systems sometimes experience transient overloads due to workload bursts. Such systems have to be designed to take timely reactions at the occurrences of unexpected situations. The development of smart techniques that focus the available computing power on these urgent events and at the same time, slow down the processing frequency during inactive periods could be the key for preserving energy. In the context of this study, we present a Dynamic Frequency Scaling technique based on the workload trend of a dynamic wireless application. The system can adjust the operation frequency by analyzing the worldoad fluctuations without degrading the final performance or violating any deadlines. In this direction, we employ an abstract model of workload analysis that combines mathematical tools from the Chaos Theory field, allowing the dynamic handling of data streams with complex behavior. To evaluate the efficiency of the proposed approach we applied it using a real application workload on a cycle-accurate Network-on-Chip simulation framework. The simulation results showed that the proposed technique could achieve remarkable improvements at the final power consumption, between 17.5% and 37.8%, depending on the system constraints. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Using Chaos Theory based workload analysis to perform Dynamic Frequency Scaling on MPSoCs", "paper_id": "WOS:000348485900003"}