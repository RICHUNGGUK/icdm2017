{"auto_keywords": [{"score": 0.024485748815327266, "phrase": "approximation_ratio"}, {"score": 0.004755054742217193, "phrase": "reoptimization_problem"}, {"score": 0.0045607070754363245, "phrase": "optimization_problem"}, {"score": 0.004485200522202792, "phrase": "optimal_solution"}, {"score": 0.004319830179921363, "phrase": "good_solution"}, {"score": 0.004266067096140677, "phrase": "locally_modified_instance"}, {"score": 0.004108742905942481, "phrase": "reoptimization_variants"}, {"score": 0.004057596233938867, "phrase": "shortest_common_superstring_problem"}, {"score": 0.004023920606099638, "phrase": "scs"}, {"score": 0.0039571974661570695, "phrase": "local_modifications"}, {"score": 0.0038431888954930083, "phrase": "single_string"}, {"score": 0.0037168948492715386, "phrase": "reoptimization_problems"}, {"score": 0.0034620831765465425, "phrase": "scs_algorithm"}, {"score": 0.003404703106153948, "phrase": "approximation_algorithm"}, {"score": 0.0033622909109253616, "phrase": "reoptimization_variant"}, {"score": 0.002953711377604328, "phrase": "best_currently_known_scs_approximation_ratio"}, {"score": 0.0028685304140180137, "phrase": "iteration_technique"}, {"score": 0.0027857990883821504, "phrase": "improved_scs_approximation_algorithm"}, {"score": 0.0027054473441439422, "phrase": "input_instance"}, {"score": 0.002671722386856879, "phrase": "long_string"}, {"score": 0.0026055251533586804, "phrase": "independent_interest"}, {"score": 0.002551612225562499, "phrase": "iterative_algorithms"}, {"score": 0.0022133711375320244, "phrase": "lower_bounds"}], "paper_keywords": ["Reoptimization", " Shortest Common Superstring", " Approximation algorithms"], "paper_abstract": "A reoptimization problem describes the following scenario: given an instance of an optimization problem together with an optimal solution for it, we want to find a good solution for a locally modified instance. In this paper, we deal with reoptimization variants of the shortest common superstring problem (SCS) where the local modifications consist of adding or removing a single string. We show the NP-hardness of these reoptimization problems and design several approximation algorithms for them. First, we use a technique of iteratively using any SCS algorithm to design an approximation algorithm for the reoptimization variant of adding a string whose approximation ratio is arbitrarily close to 8/5 and another algorithm for deleting a string with a ratio tending to 13/7. Both algorithms significantly improve over the best currently known SCS approximation ratio of 2.5. Additionally, this iteration technique can be used to design an improved SCS approximation algorithm (without reoptimization) if the input instance contains a long string, which might be of independent interest. However, these iterative algorithms are relatively slow. Thus, we present another, faster approximation algorithm for inserting a string which is based on cutting the given optimal solution and achieves an approximation ratio of 11/6. Moreover, we give some lower bounds on the approximation ratio which can be achieved by algorithms that use such cutting strategies.", "paper_title": "Reoptimization of the Shortest Common Superstring Problem", "paper_id": "WOS:000293234800001"}