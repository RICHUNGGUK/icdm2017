{"auto_keywords": [{"score": 0.029783129882699717, "phrase": "gpu"}, {"score": 0.014053625105090572, "phrase": "existing_tools"}, {"score": 0.013630483602725564, "phrase": "instrumented_program"}, {"score": 0.012266964463036975, "phrase": "dataflow_recording"}, {"score": 0.008723653687749145, "phrase": "gpu_code"}, {"score": 0.00481495049065317, "phrase": "gpu_stream_programs_through_automatic_dataflow_recording"}, {"score": 0.0047007816199415905, "phrase": "novel_framework"}, {"score": 0.0046526806928044485, "phrase": "gpu_stream_programs"}, {"score": 0.004620885890478087, "phrase": "automatic_dataflow_recording"}, {"score": 0.004404296965915598, "phrase": "general_purpose_stream_programs"}, {"score": 0.004255807517348647, "phrase": "stream_program"}, {"score": 0.004084186458199923, "phrase": "instrumenting_compiler"}, {"score": 0.004014728271095809, "phrase": "original_program_dataflow_recording_code"}, {"score": 0.003919459003028067, "phrase": "gpu_memory_operations"}, {"score": 0.003892655187180623, "phrase": "log_files"}, {"score": 0.003852791434660505, "phrase": "resulting_stream_program"}, {"score": 0.0037743120934724075, "phrase": "gpu."}, {"score": 0.0036846952802928, "phrase": "common_memory_errors"}, {"score": 0.0036469533983843755, "phrase": "out-of-bound_access"}, {"score": 0.0035603802089559716, "phrase": "race_conditions"}, {"score": 0.0032563753253986912, "phrase": "dataflow_visualizer"}, {"score": 0.003135679861067472, "phrase": "memory_operation_history"}, {"score": 0.0029782504696742283, "phrase": "error_sources"}, {"score": 0.0029376169407844314, "phrase": "relevant_threads"}, {"score": 0.0028876014831335, "phrase": "recorded_dataflow"}, {"score": 0.0028580007147015734, "phrase": "key_ingredient"}, {"score": 0.0025604827895852646, "phrase": "specialized_compilation_algorithm"}, {"score": 0.002508239347479441, "phrase": "gpu_kernels"}, {"score": 0.0024910622362019573, "phrase": "cpu_management_code"}, {"score": 0.0024069209350505933, "phrase": "interrupt_handlers"}, {"score": 0.0022703369939978185, "phrase": "customized_debugging_functions"}, {"score": 0.002141487053045766, "phrase": "data_verification"}, {"score": 0.0021049977753042253, "phrase": "intermediate_results"}], "paper_keywords": ["GPGPU", " Stream Programming", " Debugging", " Interrupt"], "paper_abstract": "We present a novel framework for debugging GPU stream programs through automatic dataflow recording and visualization. Our debugging system can help programmers locate errors that are common in general purpose stream programs but very difficult to debug with existing tools. A stream program is first compiled into an instrumented program using a compiler. This instrumenting compiler automatically adds to the original program dataflow recording code that saves the information of all GPU memory operations into log files. The resulting stream program is then executed on the GPU. With dataflow recording, our debugger automatically detects common memory errors such as out-of-bound access, uninitialized data access, and race conditions - these errors are extremely difficult to debug with existing tools. When the instrumented program terminates, either normally or due to an error, a dataflow visualizer is launched and it allows the user to examine the memory operation history of all threads and values in all streams. Thus the user can analyze error sources by tracing through relevant threads and streams using the recorded dataflow. A key ingredient of our debugging framework is the GPU interrupt, a novel mechanism that we introduce to support CPU function calls from inside GPU code. We enable interrupts on the GPU by designing a specialized compilation algorithm that translates these interrupts into GPU kernels and CPU management code. Dataflow recording involving disk I/O operations can thus be implemented as interrupt handlers. The GPU interrupt mechanism also allows the programmer to discover errors in more active ways by developing customized debugging functions that can be directly used in GPU code. As examples we show two such functions: assert for data verification and watch for visualizing intermediate results.", "paper_title": "Debugging GPU Stream Programs Through Automatic Dataflow Recording and Visualization", "paper_id": "WOS:000273315300048"}