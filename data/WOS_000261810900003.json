{"auto_keywords": [{"score": 0.049486545799943334, "phrase": "code_clones"}, {"score": 0.006805524791227757, "phrase": "code_fragment"}, {"score": 0.006448608712268536, "phrase": "source_code"}, {"score": 0.00481495049065317, "phrase": "refactoring_opportunities"}, {"score": 0.004696491408936132, "phrase": "java_software_system"}, {"score": 0.004638354165775803, "phrase": "code_clone"}, {"score": 0.004112020122418323, "phrase": "software_maintenance"}, {"score": 0.0036214186998954965, "phrase": "case_study"}, {"score": 0.0029857124153761187, "phrase": "tool_aries"}, {"score": 0.0027020387992490367, "phrase": "refactoring_methods"}, {"score": 0.002528021281333922, "phrase": "large_number"}, {"score": 0.0025070703395635133, "phrase": "code_lines"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["code clone", " software maintenance", " refactoring", " metrics", " object-oriented"], "paper_abstract": "A code clone is a code fragment that has other code fragments identical or similar to it in the source code. The presence of code clones is generally regarded as one factor that makes software maintenance more difficult. For example, if a code fragment with code clones is modified, it is necessary to consider whether each of the other code clones has to be modified as well. Removing code clones is one way of avoiding problems that arise due to the presence of code clones. This makes the source code more maintainable and more comprehensible. This paper proposes a set of metrics that suggest how code clones can be refactored. As well, the tool Aries, which automatically computes these metrics, is presented. The tool gives metrics that are indicators for certain refactoring methods rather than suggesting the refactoring methods themselves. The tool performs only lightweight source code analysis; hence, it can be applied to a large number of code lines. This paper also describes a case study that illustrates how this tool can be used. Based on the results of this case study, it can be concluded that this method can efficiently merge code clones. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "A metric-based approach to identifying refactoring opportunities for merging code clones in a Java software system", "paper_id": "WOS:000261810900003"}