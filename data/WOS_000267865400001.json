{"auto_keywords": [{"score": 0.03689565391010681, "phrase": "ampso"}, {"score": 0.00481495049065317, "phrase": "nearest_prototype_methods"}, {"score": 0.0044237033788643715, "phrase": "input_patterns"}, {"score": 0.004270178957872099, "phrase": "nearest_prototype"}, {"score": 0.004078502325220629, "phrase": "standard_particle_swarm_optimizer"}, {"score": 0.0038679618585498597, "phrase": "new_algorithm"}, {"score": 0.0038136725289948867, "phrase": "michigan"}, {"score": 0.0036424097335610492, "phrase": "search_space"}, {"score": 0.0034421126037849, "phrase": "different_approach"}, {"score": 0.003417859963947459, "phrase": "particle_swarms"}, {"score": 0.003310813458610484, "phrase": "single_prototype"}, {"score": 0.0031732652552570644, "phrase": "single_solution"}, {"score": 0.0030847461428168614, "phrase": "local_classifier"}, {"score": 0.0030414140732789186, "phrase": "whole_swarm"}, {"score": 0.0029150253706493852, "phrase": "modified_pso_equations"}, {"score": 0.0028842551358494823, "phrase": "particle_competition"}, {"score": 0.002833689453299307, "phrase": "dynamic_neighborhood"}, {"score": 0.002793874145713024, "phrase": "additional_feature"}, {"score": 0.002365815362517737, "phrase": "standard_pso"}, {"score": 0.0022997683233147125, "phrase": "data_sets"}, {"score": 0.0022355610034493225, "phrase": "better_solution"}, {"score": 0.002211947103318718, "phrase": "standard_pso."}, {"score": 0.0021049977753042253, "phrase": "nearest_neighbor_classifiers"}], "paper_keywords": ["Data mining", " Nearest Neighbor (NN)", " particle swarm", " pattern classification", " swarm intelligence"], "paper_abstract": "Nearest prototype methods can be quite successful on many pattern classification problems. In these methods, a collection of prototypes has to be found that accurately represents the input patterns. The classifier then assigns classes based on the nearest prototype in this collection. In this paper, we first use the standard particle swarm optimizer (PSO) algorithm to find those prototypes. Second, we present a new algorithm, called adaptive Michigan PSO (AMPSO) in order to reduce the dimension of the search space and provide more flexibility than the former in this application. AMPSO is based on a different approach to particle swarms as each particle in the swarm represents a single prototype in the solution. The swarm does not converge to a single solution; instead, each particle is a local classifier, and the whole swarm is taken as the solution to the problem. It uses modified PSO equations with both particle competition and cooperation and a dynamic neighborhood. As an additional feature, in AMPSO, the number of prototypes represented in the swarm is able to adapt to the problem, increasing as needed the number of prototypes and classes of the prototypes that make the solution to the problem. We compared the results of the standard PSO and AMPSO in several benchmark problems from the University of California, Irvine, data sets and find that AMPSO always found a better solution than the standard PSO. We also found that it was able to improve the results of the Nearest Neighbor classifiers, and it is also competitive with some of the algorithms most commonly used for classification.", "paper_title": "AMPSO: A New Particle Swarm Method for Nearest Neighborhood Classification", "paper_id": "WOS:000267865400001"}