{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "runnable_knowledge"}, {"score": 0.004643839937761046, "phrase": "growing_awareness"}, {"score": 0.004588158931776543, "phrase": "deep_relations"}, {"score": 0.004319566932528865, "phrase": "efficiency_oriented_way"}, {"score": 0.004242085112539693, "phrase": "computing_machines"}, {"score": 0.004116012194714212, "phrase": "human_oriented_runnable_knowledge"}, {"score": 0.003714629047818465, "phrase": "basic_thesis"}, {"score": 0.003539479990299223, "phrase": "abstract_software"}, {"score": 0.0034759420565135253, "phrase": "knowledge_distillation_procedure"}, {"score": 0.0033725614574134396, "phrase": "constructive_feasibility_proof"}, {"score": 0.003252542052430779, "phrase": "formal_basis"}, {"score": 0.0029887957779347394, "phrase": "semantic_structural_models"}, {"score": 0.0028823939507764238, "phrase": "formal_behavioral_models"}, {"score": 0.002830617996609902, "phrase": "uml_statecharts"}, {"score": 0.002779769492357829, "phrase": "meaning_functions"}, {"score": 0.002648582960470086, "phrase": "concept_densities"}, {"score": 0.002448446849997207, "phrase": "knowledge_runnability"}, {"score": 0.0023470051993423483, "phrase": "runnable_knowledge_convergence_point"}, {"score": 0.002318799760022913, "phrase": "skyware"}, {"score": 0.0021827653135510225, "phrase": "content_meaning"}, {"score": 0.0021049977753042253, "phrase": "underlying_machine"}], "paper_keywords": ["SKYWare", " Runnable Knowledge", " content", " meaning functions", " densities", " knowledge distillation"], "paper_abstract": "There has been a growing awareness of deep relations between software and knowledge. Software, from an efficiency oriented way to program computing machines, gradually converged to human oriented Runnable Knowledge. Apparently this has happened unintentionally, but knowledge is not incidental to software. The basic thesis: runnable knowledge is the essence of abstract software. A knowledge distillation procedure is offered as a constructive feasibility proof of the thesis. A formal basis is given for these notions. Runnable knowledge is substantiated in the association of semantic structural models (like ontologies) with formal behavioral models (like UML statecharts). Meaning functions are defined for ontologies in terms of concept densities. Examples are provided to concretely clarify the meaning and implications of knowledge runnability. The paper concludes with the runnable knowledge convergence point: SKYWare, a new term designating the domain in which content meaning is completely independent of any underlying machine.", "paper_title": "SKYWare: The Unavoidable Convergence of Software towards Runnable Knowledge", "paper_id": "WOS:000368457300003"}