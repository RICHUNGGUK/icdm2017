{"auto_keywords": [{"score": 0.032792739662093666, "phrase": "computation_performance"}, {"score": 0.014542150195867836, "phrase": "design_patterns"}, {"score": 0.00481495049065317, "phrase": "cloud_service_implementation"}, {"score": 0.004752221133109136, "phrase": "evaluating_design_pattern"}, {"score": 0.004690305164360866, "phrase": "software_evolution"}, {"score": 0.004392565073466714, "phrase": "software_quality"}, {"score": 0.004306968571854912, "phrase": "increasing_attention"}, {"score": 0.004167982855788402, "phrase": "software_engineering"}, {"score": 0.0040334640350288, "phrase": "valuable_knowledge"}, {"score": 0.003954837422946628, "phrase": "design_problems"}, {"score": 0.003752550907120244, "phrase": "design_quality"}, {"score": 0.003607630811220324, "phrase": "utilization_evaluation_method"}, {"score": 0.0035141291835319682, "phrase": "design_pattern's_quality"}, {"score": 0.003378385493203297, "phrase": "evaluated_software_project"}, {"score": 0.00329080576226637, "phrase": "analysis_time"}, {"score": 0.0031636612155559267, "phrase": "increasing_source_code_size"}, {"score": 0.002962543869356265, "phrase": "practical_data_analysis"}, {"score": 0.0028293966058473476, "phrase": "large_data_processes"}, {"score": 0.002737960968372391, "phrase": "cloud_computing"}, {"score": 0.00268452026617243, "phrase": "internet-based_and_scalable_infrastructure"}, {"score": 0.0024007585788965655, "phrase": "software_quality_evaluation_cloud"}, {"score": 0.0023384629381463054, "phrase": "utilization_evaluation_cloud_service"}, {"score": 0.0022928018832993387, "phrase": "powerful_computing_capability"}, {"score": 0.002233301265743633, "phrase": "large_amount"}, {"score": 0.0021610874773389096, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "cloud_service_architecture"}], "paper_keywords": ["design pattern", " software quality", " software evolution", " Hadoop", " MapReduce"], "paper_abstract": "In recent years, the influences of design patterns on software quality have attracted increasing attention in the area of software engineering, as design patterns encapsulate valuable knowledge to resolve design problems, and more importantly to improve the design quality. Our previous research has proposed a utilization evaluation method to assess the design pattern's quality. As the versions of evaluated software project grows, the analysis time increases in pace with the increasing source code size. The computation performance cannot be applicable to the practical data analysis. However, the computation performance and large data processes can be improved by cloud computing which provides internet-based and scalable infrastructure, platforms and services. In this research, we draw a picture of implementing a software quality evaluation cloud by developing a utilization evaluation cloud service based on powerful computing capability to process a large amount of data. The experimental results show that the cloud service architecture can indeed improve the computation performance.", "paper_title": "A Cloud Service Implementation for Evaluating Design Pattern in Software Evolution", "paper_id": "WOS:000355962400015"}