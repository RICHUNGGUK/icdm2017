{"auto_keywords": [{"score": 0.048168621566366844, "phrase": "bounded_model_checking"}, {"score": 0.041361508715379594, "phrase": "asynchronous_system"}, {"score": 0.00481495049065317, "phrase": "step_semantics"}, {"score": 0.004775918707955445, "phrase": "efficient_bounded_model_checking"}, {"score": 0.004585447570649902, "phrase": "bmc"}, {"score": 0.004529776351030488, "phrase": "asynchronous_systems"}, {"score": 0.004331393784852601, "phrase": "efficient_sat"}, {"score": 0.004296354346757851, "phrase": "smt"}, {"score": 0.004244102948402086, "phrase": "model_checking"}, {"score": 0.004192571571622019, "phrase": "main_contribution"}, {"score": 0.004041686156098498, "phrase": "simple_modeling_formalism"}, {"score": 0.0038962096720793443, "phrase": "transition_formula"}, {"score": 0.0036207206487324506, "phrase": "-step_semantics"}, {"score": 0.003419943984098415, "phrase": "process_semantics"}, {"score": 0.0032833625797814474, "phrase": "earlier_works"}, {"score": 0.0032567057896906314, "phrase": "different_low_level_asynchronous_system_formalisms"}, {"score": 0.0029172611440429963, "phrase": "high-level_data_manipulation_operations"}, {"score": 0.0028121429464519733, "phrase": "dynamic_fashion"}, {"score": 0.002677837900473396, "phrase": "larger_class"}, {"score": 0.002613103872300205, "phrase": "technical_approach"}, {"score": 0.0025499307228648883, "phrase": "coherent_encoding"}, {"score": 0.0025189177411152645, "phrase": "transition_relation"}, {"score": 0.0024680632991561074, "phrase": "simple_and_elegant_translation"}, {"score": 0.002438043578514396, "phrase": "partial_order_semantics"}, {"score": 0.002388817995161952, "phrase": "presented_translations"}, {"score": 0.002321563536990284, "phrase": "extensive_empirical_results"}, {"score": 0.002265422518417868, "phrase": "different_translations"}, {"score": 0.0021837406983565098, "phrase": "explicit_state_model_checker"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bounded model checking", " Step encodings", " Process semantics", " Asynchronous systems", " SMT"], "paper_abstract": "This paper discusses bounded model checking (BMC) for asynchronous systems. Bounded model checking is a technique that employs the power of efficient SAT and SMT solvers for model checking. The main contribution of this paper is the presentation of a simple modeling formalism independent way of translating an asynchronous system into a transition formula for three partial order semantics: the there exists-step semantics, its generalization, the relaxed there exists-step semantics, and a novel variant that combines the latter with the idea of process semantics. Step and process semantics have been introduced in earlier works for different low level asynchronous system formalisms to improve the efficiency of BMC. However, this paper is the first one showing how to translate the semantics for any asynchronous system modeling formalism including high-level data manipulation operations while encoding the independence of actions in a dynamic fashion. Thus, the approaches have been extended to cover a larger class of modeling formalisms. The technical approach uses the notion of a coherent encoding of the transition relation, making for a simple and elegant translation of the partial order semantics in question. The presented translations have been implemented and we present extensive empirical results comparing the efficiency of the different translations to each other as well as to an explicit state model checker DiVinE on its own BEEM benchmark suite. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Exploiting step semantics for efficient bounded model checking of asynchronous systems", "paper_id": "WOS:000306889800005"}