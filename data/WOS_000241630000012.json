{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ajax_framework"}, {"score": 0.04971245563968758, "phrase": "data_quality_problems"}, {"score": 0.029237135610446486, "phrase": "ajax_system"}, {"score": 0.004723322467153553, "phrase": "different_application_contexts"}, {"score": 0.004669180816745142, "phrase": "appropriate_handling"}, {"score": 0.00451043437607004, "phrase": "data_anomalies"}, {"score": 0.00429057323623293, "phrase": "data_inconsistencies"}, {"score": 0.004257708925521277, "phrase": "wrong_data_formats"}, {"score": 0.0042250952759280225, "phrase": "current_technologies"}, {"score": 0.0040971095888461045, "phrase": "software_programs"}, {"score": 0.004034572092608487, "phrase": "programming_language"}, {"score": 0.0039427614253159365, "phrase": "java"}, {"score": 0.0038823698601516687, "phrase": "rdbms"}, {"score": 0.003692997523960715, "phrase": "relational_database_management_systems"}, {"score": 0.0035810720634458933, "phrase": "commercial_data_quality_tool"}, {"score": 0.003445906915464945, "phrase": "non-conventional_data_applications"}, {"score": 0.003290403747743492, "phrase": "existing_technology"}, {"score": 0.0031661748179556606, "phrase": "data_flow_graph"}, {"score": 0.0030938932434437178, "phrase": "clean_data"}, {"score": 0.0030701709368601516, "phrase": "ajax"}, {"score": 0.003034916887102753, "phrase": "data_cleaning"}, {"score": 0.002820850247525606, "phrase": "entire_set"}, {"score": 0.002683125911877974, "phrase": "logical_and_physical_levels"}, {"score": 0.002522791642460087, "phrase": "data_cleaning_programs"}, {"score": 0.002474674704809152, "phrase": "set_of_logical_data_cleaning_and_transformation_operators"}, {"score": 0.0023995846112991625, "phrase": "declarative_language"}, {"score": 0.00230003335593664, "phrase": "debugging_facility"}, {"score": 0.0022302306304023602, "phrase": "exception_mechanism"}, {"score": 0.0022046030435199796, "phrase": "logical_operators"}, {"score": 0.0021049977753042253, "phrase": "experimental_validation"}], "paper_keywords": [""], "paper_abstract": "Data quality problems arise in different application contexts and require appropriate handling so that information becomes reliable. Examples of data anomalies are: missing values, the existence of duplicates, misspellings, data inconsistencies and wrong data formats. Current technologies handle data quality problems through: (i) software programs written in a programming language (e.g., C or Java) or an RDBMS programming language, (ii) the integrity constraints mechanisms offered by relational database management systems; or (iii) using a commercial data quality tool. None of these approaches is appropriate when handling non-conventional data applications dealing with large amounts of information. In fact, the existing technology is not able to support the design of a data flow graph that effectively and efficiently produce clean data. AJAX is a data cleaning and transformation tool that overcomes these aspects. In this paper, we present an overview of the entire set of functionalities supported by the AJAX system. First, we explain the logical and physical levels of the AJAX framework, and the advantages brought in terms of specification and optimization of data cleaning programs. Second, the set of logical data cleaning and transformation operators is described and exemplified, using the declarative language proposed. Third, we illustrate the purpose of the debugging facility and how it is supported by the exception mechanism offered by logical operators. Finally, the architecture of the AJAX system is presented and experimental validation of the prototype is briefly referred.", "paper_title": "Data cleaning and transformation using the AJAX framework", "paper_id": "WOS:000241630000012"}