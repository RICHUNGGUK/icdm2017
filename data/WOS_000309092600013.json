{"auto_keywords": [{"score": 0.04882985100763265, "phrase": "hpc"}, {"score": 0.00481495049065317, "phrase": "application_dependent_network_design"}, {"score": 0.0047517225918491226, "phrase": "extreme_scale_high_performance_computing"}, {"score": 0.004566954456805558, "phrase": "traditional_scalable_network_designs"}, {"score": 0.004477270137801732, "phrase": "fast_point-to-point_transmission"}, {"score": 0.004274766964161756, "phrase": "proposed_network"}, {"score": 0.0041084684278314305, "phrase": "high_performance_computing_applications"}, {"score": 0.0039748192550806815, "phrase": "semantic_data_objects"}, {"score": 0.003896717568943166, "phrase": "hpc_applications"}, {"score": 0.003845500924733243, "phrase": "data-driven_parallel_processing"}, {"score": 0.0036958398682001015, "phrase": "semantic_object"}, {"score": 0.003459191419478298, "phrase": "tuple_switching_network"}, {"score": 0.003413705707789296, "phrase": "data_parallel_hpc_applications"}, {"score": 0.003132236287543072, "phrase": "computing_and_communication_resources"}, {"score": 0.003030247482854539, "phrase": "sustainability_model"}, {"score": 0.0029706504420983896, "phrase": "simple_computational_experiment"}, {"score": 0.002912222095383313, "phrase": "extreme_scale_application's_sustainability"}, {"score": 0.0028549396580672417, "phrase": "system_mean_time"}, {"score": 0.002671990515821213, "phrase": "statistical_multiplexing"}, {"score": 0.0025509294021449254, "phrase": "two-tier_tuple_switching_framework"}, {"score": 0.00240328454980006, "phrase": "extreme_scale_hpc_application"}, {"score": 0.00236892021800239, "phrase": "mtbf."}, {"score": 0.002234358539133758, "phrase": "higher_checkpoint_overheads"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Application dependent networking", " Sustainable high performance computing"], "paper_abstract": "This paper reports an application dependent network design for extreme scale high performance computing (HPC) applications. Traditional scalable network designs focus on fast point-to-point transmission of generic data packets. The proposed network focuses on the sustainability of high performance computing applications by statistical multiplexing of semantic data objects. For HPC applications using data-driven parallel processing, a tuple is a semantic object. We report the design and implementation of a tuple switching network for data parallel HPC applications in order to gain performance and reliability at the same time when adding computing and communication resources. We describe a sustainability model and a simple computational experiment to demonstrate extreme scale application's sustainability with decreasing system mean time between failures (MTBF). Assuming three times slowdown of statistical multiplexing and 35% time loss per checkpoint, a two-tier tuple switching framework would produce sustained performance and energy savings for extreme scale HPC application using more than 1024 processors or less than 6 hour MTBF. Higher processor counts or higher checkpoint overheads accelerate the benefits. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Tuple switching network-When slower may be better", "paper_id": "WOS:000309092600013"}