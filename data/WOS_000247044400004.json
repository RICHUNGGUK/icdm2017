{"auto_keywords": [{"score": 0.030336914577021794, "phrase": "rmhc"}, {"score": 0.00481495049065317, "phrase": "heuristic_state_merging"}, {"score": 0.004782587436296574, "phrase": "finite-state_transducers"}, {"score": 0.0047026237903774895, "phrase": "finite-state_machines"}, {"score": 0.004562027986828209, "phrase": "source_domain"}, {"score": 0.004485735417293941, "phrase": "target_domain"}, {"score": 0.004122911675081472, "phrase": "fitness_functions"}, {"score": 0.004122642742419328, "phrase": "ostia"}, {"score": 0.003789322824699646, "phrase": "increasing_computational_complexity"}, {"score": 0.003626626504149897, "phrase": "fitness-distance_correlation"}, {"score": 0.0036022232017938203, "phrase": "fdc"}, {"score": 0.0035659209800190847, "phrase": "evolutionary_performance"}, {"score": 0.003529984775927307, "phrase": "fitness_function"}, {"score": 0.0034475308539463323, "phrase": "random_mutation_hill-climber"}, {"score": 0.003344332868248692, "phrase": "strongest_fdc"}, {"score": 0.0032883370175509053, "phrase": "best_evolutionary_performance"}, {"score": 0.003104849179057156, "phrase": "fitness_function_evaluations"}, {"score": 0.0030839447259626215, "phrase": "edit_distance"}, {"score": 0.002951444412262927, "phrase": "extra_computation"}, {"score": 0.002815093247670994, "phrase": "best_known_heuristic_method"}, {"score": 0.002758597251689795, "phrase": "onward_subsequential_transducer_inference_algorithm"}, {"score": 0.0027032319980161805, "phrase": "noise-free_data"}, {"score": 0.0026222551419772867, "phrase": "sparse_training_sets"}, {"score": 0.0026045914281028473, "phrase": "small_target_machines"}, {"score": 0.0025436978068459565, "phrase": "similar_performance"}, {"score": 0.00252656192077797, "phrase": "large_target_machines"}, {"score": 0.002509541181962613, "phrase": "denser_data_sets"}, {"score": 0.0024842242921857705, "phrase": "noise-corrupted_data"}, {"score": 0.0023455000216532802, "phrase": "even_small_amounts"}, {"score": 0.0022522565004588113, "phrase": "genetic_algorithm"}, {"score": 0.002199582070223336, "phrase": "fst_induction_problem"}, {"score": 0.002126458181856629, "phrase": "best_performance"}, {"score": 0.0021049977753042253, "phrase": "known_algorithm"}], "paper_keywords": ["finite-state transducer (FST)", " random mutation hill-climber (RMHC)", " state merging", " string distance", " string translation"], "paper_abstract": "Finite-state transducers (FSTs) are finite-state machines (FSMs) that map strings in a source domain into strings in a target domain. While there are many reports in the literature of evolving FSMs, there has been much less work on evolving FSTs. In particular, the fitness functions required for evolving FSTs are generally different from those used for FSMs. In this paper, three string distance-based fitness functions are evaluated, in order of increasing computational complexity: string equality, Hamming distance, and edit distance. The fitness-distance correlation (FDC) and evolutionary performance of each fitness function is analyzed when used within a random mutation hill-climber (RMHC). Edit distance has the strongest FDC and also provides the best evolutionary performance, in that it is more likely to find the target FST within a given number of fitness function evaluations. Edit distance is also the most expensive to compute, but in most cases this extra computation is more than justified by its performance. The RMHC was compared with the best known heuristic method for learning FSTs, the onward subsequential transducer inference algorithm (OSTIA). On noise-free data, the RMHC performs best on problems with sparse training sets and small target machines. The RMHC and OSTIA offer similar performance for large target machines and denser data sets. When noise-corrupted data is used for training, the RMHC still performs well, while OSTIA performs poorly given even small amounts of noise. The RMHC is also shown to outperform a genetic algorithm. Hence, for certain classes of FST induction problem, the RMHC presented in this paper offers the best performance of any known algorithm.", "paper_title": "Learning finite-state transducers: Evolution versus heuristic state merging", "paper_id": "WOS:000247044400004"}