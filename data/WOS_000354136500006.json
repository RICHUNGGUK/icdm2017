{"auto_keywords": [{"score": 0.03478167905660463, "phrase": "error_propagation"}, {"score": 0.034287434471945516, "phrase": "undirected_parsers"}, {"score": 0.00481495049065317, "phrase": "undirected_dependency_parsing._dependency_parsers"}, {"score": 0.004652016085325825, "phrase": "natural_language_processing_tasks"}, {"score": 0.004236908273106904, "phrase": "directed_links"}, {"score": 0.003954837422946628, "phrase": "new_approach"}, {"score": 0.00376488621224566, "phrase": "parsing_algorithm"}, {"score": 0.0034118234596993836, "phrase": "postprocessing_step"}, {"score": 0.0031377955308198634, "phrase": "single-head_constraint"}, {"score": 0.00307657476125683, "phrase": "better_accuracy"}, {"score": 0.0029576827451501956, "phrase": "existing_directed_transition-based_parsers"}, {"score": 0.0027605398374811667, "phrase": "undirected_variants"}, {"score": 0.0026943183393071564, "phrase": "planar"}, {"score": 0.0026277995163948263, "phrase": "covington"}, {"score": 0.002428530921948425, "phrase": "wall_street_journal_portion"}, {"score": 0.0023928819778638055, "phrase": "penn_treebank"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_transition-based_parsers"}], "paper_keywords": ["natural language processing", " dependency parsing", " parsing", " computational linguistics", " automata"], "paper_abstract": "Dependency parsers, which are widely used in natural language processing tasks, employ a representation of syntax in which the structure of sentences is expressed in the form of directed links (dependencies) between their words. In this article, we introduce a new approach to transition-based dependency parsing in which the parsing algorithm does not directly construct dependencies, but rather undirected links, which are then assigned a direction in a postprocessing step. We show that this alleviates error propagation, because undirected parsers do not need to observe the single-head constraint, resulting in better accuracy. Undirected parsers can be obtained by transforming existing directed transition-based parsers as long as they satisfy certain conditions. We apply this approach to obtain undirected variants of three different parsers (the Planar, 2-Planar, and Covington algorithms) and perform experiments on several data sets from the CoNLL-X shared tasks and on the Wall Street Journal portion of the Penn Treebank, showing that our approach is successful in reducing error propagation and produces improvements in parsing accuracy in most of the cases and achieving results competitive with state-of-the-art transition-based parsers.", "paper_title": "UNDIRECTED DEPENDENCY PARSING", "paper_id": "WOS:000354136500006"}