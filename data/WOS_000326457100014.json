{"auto_keywords": [{"score": 0.030721872186812164, "phrase": "rpfuzzer"}, {"score": 0.00481495049065317, "phrase": "router_protocols_vulnerabilities_based"}, {"score": 0.004638602678192715, "phrase": "router_vulnerabilities"}, {"score": 0.004492573860101133, "phrase": "critical_problem"}, {"score": 0.004374385639298755, "phrase": "information_security"}, {"score": 0.004327981760540394, "phrase": "previous_research"}, {"score": 0.0042820680211904235, "phrase": "router_security"}, {"score": 0.004103212598803194, "phrase": "known_flaws"}, {"score": 0.003952828685048176, "phrase": "famous_automated_vulnerability"}, {"score": 0.0038283058265876713, "phrase": "traditional_fuzzing_tools"}, {"score": 0.003727527379253624, "phrase": "network_applications"}, {"score": 0.0032969458013463807, "phrase": "router_protocol_vulnerabilities"}, {"score": 0.003210110095236981, "phrase": "mathematical_model"}, {"score": 0.0030758904011907533, "phrase": "previous_methods"}, {"score": 0.0030270132320276096, "phrase": "test_cases"}, {"score": 0.0027643161113894018, "phrase": "normal_packets"}, {"score": 0.0026914710445743693, "phrase": "cpu_utilization"}, {"score": 0.0026486862281576086, "phrase": "system_logs"}, {"score": 0.0025790023975310397, "phrase": "dos"}, {"score": 0.0025514745448798385, "phrase": "router_reboot"}, {"score": 0.002418742283474052, "phrase": "modified_dynamips"}, {"score": 0.0023549822490693344, "phrase": "register_values"}, {"score": 0.0022087165619569006, "phrase": "snmp_protocol"}, {"score": 0.0021049977753042253, "phrase": "five_unreleased_vulnerabilities"}], "paper_keywords": ["router security", " fuzzing", " TFTCG", " protocol vulnerability discovering"], "paper_abstract": "How to discover router vulnerabilities effectively and automatically is a critical problem to ensure network and information security. Previous research on router security is mostly about the technology of exploiting known flaws of routers. Fuzzing is a famous automated vulnerability finding technology; however, traditional Fuzzing tools are designed for testing network applications or other software. These tools are not or partly not suitable for testing routers. This paper designs a framework of discovering router protocol vulnerabilities, and proposes a mathematical model Two-stage Fuzzing Test Cases Generator(TFTCG) that improves previous methods to generate test cases. We have developed a tool called RPFuzzer based on TFTCG. RPFuzzer monitors routers by sending normal packets, keeping watch on CPU utilization and checking system logs, which can detect DoS, router reboot and so on. RPFuzzer' debugger based on modified Dynamips, which can record register values when an exception occurs. Finally, we experiment on the SNMP protocol, find 8 vulnerabilities, of which there are five unreleased vulnerabilities. The experiment has proved the effectiveness of RPFuzzer.", "paper_title": "RPFuzzer: A Framework for Discovering Router Protocols Vulnerabilities Based on Fuzzing", "paper_id": "WOS:000326457100014"}