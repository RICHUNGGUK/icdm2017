{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "simple_grammars"}, {"score": 0.0047267100475487595, "phrase": "prefix-free_language"}, {"score": 0.0041269626762569095, "phrase": "polynomial_time"}, {"score": 0.003952513974962462, "phrase": "simple_context-free_grammar"}, {"score": 0.0037854112749311844, "phrase": "canonical_representation"}, {"score": 0.0037159680715717056, "phrase": "simple_language"}, {"score": 0.0036030386046805598, "phrase": "prime_normal_form"}, {"score": 0.0034720284451902083, "phrase": "simple_grammar"}, {"score": 0.0030123335878664064, "phrase": "best_previously_known_algorithm"}, {"score": 0.002487296495786493, "phrase": "total_size"}, {"score": 0.002295277579105179, "phrase": "shortest_string_derivable"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["deterministic context-free language", " language equivalence", " simple grammar", " prime normal form"], "paper_abstract": "A prefix-free language is prime if it cannot be decomposed into a concatenation of two prefix-free languages. We show that we can check in polynomial time if a language generated by a simple context-free grammar is prime. Our algorithm computes a canonical representation of a simple language, converting its arbitrary simple grammar into prime normal form (PNF); a simple grammar is in PNF if all its nonterminals define primes. We also improve the complexity of testing the equivalence of simple grammars. The best previously known algorithm for this problem worked in O(n(13)) time. We improve it to O(n(7) log(2) n) and O(n(5) polylog v) time, where n is the total size of the grammars involved, and v is the length of a shortest string derivable from a nonterminal, maximized over all nonterminals. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Prime normal form and equivalence of simple grammars", "paper_id": "WOS:000241545800003"}