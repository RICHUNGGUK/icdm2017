{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "communicating_tasks"}, {"score": 0.004749646583168342, "phrase": "identical_processors"}, {"score": 0.004466519142879166, "phrase": "parallelization_strategies"}, {"score": 0.004405919996432158, "phrase": "local_search"}, {"score": 0.00422899036681456, "phrase": "neighborhood_size"}, {"score": 0.0040040425282442125, "phrase": "communication_delays"}, {"score": 0.0035892794633115227, "phrase": "dynamic_load_distribution_strategy"}, {"score": 0.0034924598001567944, "phrase": "supervisor_worker_framework"}, {"score": 0.003352088714126572, "phrase": "best_performance"}, {"score": 0.003306559295382181, "phrase": "experimental_results"}, {"score": 0.0031305230217636495, "phrase": "excellent_speedups"}, {"score": 0.0028446460307503343, "phrase": "final_solution"}, {"score": 0.002786858120570499, "phrase": "proposed_parallel_ls"}, {"score": 0.0027116246112603875, "phrase": "multistart_local_search"}, {"score": 0.0026747708876640377, "phrase": "variable_neighborhood_search_meta-heuristic_frameworks"}, {"score": 0.002447101794397243, "phrase": "sequential_and_parallel_versions"}, {"score": 0.0022234951091677085, "phrase": "solution_quality"}, {"score": 0.0021932609696277937, "phrase": "proportionally_smaller_cpu_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed memory multiprocessors", " Load balancing", " Neighborhood decomposition", " Directed acyclic graph", " Meta-heuristics"], "paper_abstract": "This paper reports on the analysis of parallelization strategies for Local Search (IS) when the neighborhood size varies throughout the search. The Multiprocessor Scheduling Problem with Communication Delays (MSPCD) is used as benchmark for illustrating the methodology and results. The dynamic load distribution strategy implemented within a supervisor worker framework is shown to offer the best performance. Experimental results on several sets of instances with up to 500 tasks show excellent speedups (super-linear in most cases) while preserving the quality of the final solution. The proposed parallel LS is incorporated into Multistart Local Search and Variable Neighborhood Search meta-heuristic frameworks to analyze its efficiency in a more complex environment. The comparison between the sequential and parallel versions of each meta-heuristic, using various numbers of processors, shows improvement in the solution quality within proportionally smaller CPU time. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Parallel Local Search to schedule communicating tasks on identical processors", "paper_id": "WOS:000362057600001"}