{"auto_keywords": [{"score": 0.04058108573680191, "phrase": "large_result_sets"}, {"score": 0.004694700982410345, "phrase": "well-documented_problem"}, {"score": 0.004655285779819366, "phrase": "industrial_software_systems"}, {"score": 0.0045581828632009795, "phrase": "considerable_research"}, {"score": 0.003999578057088828, "phrase": "software_systems"}, {"score": 0.0037701851296383405, "phrase": "result_sets"}, {"score": 0.003660452313567116, "phrase": "complementary_tool_support"}, {"score": 0.003266201217790818, "phrase": "in-depth_case_study"}, {"score": 0.0031979796189858206, "phrase": "large_software_system"}, {"score": 0.003144426503333397, "phrase": "wide_use"}, {"score": 0.0031048593416286335, "phrase": "apache"}, {"score": 0.002805597755796506, "phrase": "effective_use"}, {"score": 0.0027469703311742647, "phrase": "clone-detection_tools"}, {"score": 0.0026445028886931837, "phrase": "cloning_occurrences"}, {"score": 0.002524428047147766, "phrase": "single_subsystem"}, {"score": 0.002471661547432869, "phrase": "system_code"}, {"score": 0.0022238834225283594, "phrase": "particular_cloning"}, {"score": 0.0021682027434117095, "phrase": "experimental_functionality"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["code clone", " duplication", " software architecture", " visualization", " maintenance", " clone detection"], "paper_abstract": "Code duplication is a well-documented problem in industrial software systems. There has been considerable research into techniques for detecting duplication in software, and there are several effective tools to perform this task. However, there have been few detailed qualitative studies into how cloning actually manifests itself within software systems. This is primarily due to the large result sets that many clone-detection tools return; these result sets are very difficult to manage without complementary tool support that can scale to the size of the problem, and this kind of support does not currently exist. In this paper we present an in-depth case study of cloning in a large software system that is in wide use, the Apache Web server; we provide insights into cloning as it exists in this system, and we demonstrate techniques to manage and make effective use of the large result sets of clone-detection tools. In our case study, we found several interesting types of cloning occurrences, such as 'cloning hotspots', where a single subsystem comprising only 17% of the system code contained 38.8% of the clones. We also found several examples of cloning behavior that were beneficial to the development of the system, in particular cloning as a way to add experimental functionality. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "Supporting the analysis of clones in software-systems: a case study", "paper_id": "WOS:000237145500002"}