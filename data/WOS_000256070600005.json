{"auto_keywords": [{"score": 0.03672997117230457, "phrase": "dsvl"}, {"score": 0.03649194020608375, "phrase": "slammer"}, {"score": 0.00481495049065317, "phrase": "model_quality"}, {"score": 0.004766683200410046, "phrase": "key_success_factor"}, {"score": 0.004640311812502743, "phrase": "recent_software_engineering_paradigms"}, {"score": 0.00454772672262359, "phrase": "model-driven_software_development"}, {"score": 0.00418134346679498, "phrase": "wide_variety"}, {"score": 0.004084129504819342, "phrase": "visual_notations"}, {"score": 0.004043158538239064, "phrase": "software_engineers"}, {"score": 0.004002596930301241, "phrase": "hard_and_repetitive_task"}, {"score": 0.003909522412849035, "phrase": "previous_developments"}, {"score": 0.003717273538121102, "phrase": "visual_specification"}, {"score": 0.0036430378180975667, "phrase": "domain_specific_visual_languages"}, {"score": 0.0033492947290751996, "phrase": "internal_product_measurements"}, {"score": 0.002937493907103812, "phrase": "visual_patterns"}, {"score": 0.002878785759716458, "phrase": "relevant_elements"}, {"score": 0.002830757050018908, "phrase": "redesign_type"}, {"score": 0.00267335773670308, "phrase": "graph_transformation_rules"}, {"score": 0.0024909230668523825, "phrase": "meta-model_ling_tool"}, {"score": 0.0022668507535947976, "phrase": "final_modelling_environment"}, {"score": 0.0021697677572213086, "phrase": "case_study"}, {"score": 0.0021479597698614355, "phrase": "web_modelling_domain"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["domain specific visual languages", " meta-modelling", " measurement", " redesign", " graph transformation", " graphical pattern"], "paper_abstract": "Ensuring model quality is a key success factor in many computer science areas, and becomes crucial in recent software engineering paradigms like the one proposed by model-driven software development. Tool support for measurements and redesigns becomes essential to help developers improve the quality of their models. However, developing such helper tools for the wide variety of (frequently domain specific) visual notations used by software engineers is a hard and repetitive task that does not take advantage from previous developments, thus being frequently forgotten. In this paper we present our approach for the visual specification of measurements and redesigns for Domain Specific Visual Languages (DSVLs). With this purpose, we introduce a novel DSVL called SLAMMER that contains generalisations of some of the more used types of internal product measurements and redesigns. The goal is to facilitate the task of defining measurements and redesigns for any DSVL, as well as the generation of tools from such specification reducing or eliminating the necessity of coding. We rely on the use of visual patterns for the specification of the relevant elements for each measurement and redesign type. In addition, SLAMMER allows the specification of redesigns either procedurally or by means of graph transformation rules. These redesigns can be triggered when the measurements reach a certain threshold. These concepts have been implemented in the meta-model ling tool AToM(3). In this way, when a DSVL is designed, it is possible to specify measurements and redesigns that will become available in the final modelling environment generated for the language. As an example, we show a case study in the web modelling domain. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Visual specification of measurements and redesigns for domain specific visual languages", "paper_id": "WOS:000256070600005"}