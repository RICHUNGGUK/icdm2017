{"auto_keywords": [{"score": 0.049509300669177574, "phrase": "distributed_embedded_systems"}, {"score": 0.00481495049065317, "phrase": "model-driven_design_of_network_aspects"}, {"score": 0.004562362497952548, "phrase": "challenging_task"}, {"score": 0.003975200317233532, "phrase": "semantic_specification"}, {"score": 0.003857871979942733, "phrase": "network_description"}, {"score": 0.0038119123317396954, "phrase": "high_level"}, {"score": 0.0036553070575015344, "phrase": "abstraction_view"}, {"score": 0.003611751858608048, "phrase": "model_manipulation"}, {"score": 0.0034633412134999425, "phrase": "code_generation"}, {"score": 0.0031654684543975077, "phrase": "unified_modeling_language_diagrams"}, {"score": 0.0030904433394138963, "phrase": "formal_computational_model"}, {"score": 0.0030353401945270755, "phrase": "key_solution"}, {"score": 0.0029280552768499056, "phrase": "design_alternatives"}, {"score": 0.002741091312632307, "phrase": "formal_framework"}, {"score": 0.002628362641980801, "phrase": "application_requirements"}, {"score": 0.00255068452076921, "phrase": "network_components"}, {"score": 0.0025051811853674215, "phrase": "environment_description"}, {"score": 0.0022758279600841014, "phrase": "design_validation"}, {"score": 0.0021953290937408807, "phrase": "annotation_mechanism"}, {"score": 0.0021561514733516676, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "original_model"}], "paper_keywords": ["Modeling and analysis of real time and embedded systems (MARTE)", " network manipulation", " network synthesis", " simulation", " SystemC/transaction level modeling (TLM)", " unified modeling language (UML)"], "paper_abstract": "Design of distributed embedded systems is a challenging task and it requires raising the level of abstraction to overcome the complexity of the design. In particular, modeling languages and semantic specification are necessary to address network description at high level of abstraction. Starting from this abstraction view, model manipulation is needed to explore various design alternatives and code generation is required for their simulation. In this paper, we propose the use of unified modeling language diagrams combined with a formal computational model as a key solution to specify requirements, generate design alternatives, and code for simulation. This paper proposes a formal framework and supporting tools to represent the application requirements, the library of network components, the environment description, and the rules to compose them. The framework allows to generate code for design validation by simulation and provides back annotation mechanism of the simulation results to refine the original model.", "paper_title": "Model-Driven Design of Network Aspects of Distributed Embedded Systems", "paper_id": "WOS:000351765000010"}