{"auto_keywords": [{"score": 0.014483695184301535, "phrase": "node-controlling_adversary"}, {"score": 0.013994323939626909, "phrase": "network_size"}, {"score": 0.01382875291911445, "phrase": "end-to-end_communication"}, {"score": 0.01290926884258893, "phrase": "public-key_setting"}, {"score": 0.010061365148935783, "phrase": "barak_et_al"}, {"score": 0.00991551006017151, "phrase": "lncs"}, {"score": 0.009707040646446974, "phrase": "fault_localization"}, {"score": 0.007630932492144709, "phrase": "afek"}, {"score": 0.007500032960700625, "phrase": "distributed_computing"}, {"score": 0.00481495049065317, "phrase": "authenticated_adversarial_routing"}, {"score": 0.0047321275331907815, "phrase": "authenticated_throughput-efficient_routing"}, {"score": 0.004713216797618433, "phrase": "unreliable_and_dynamically_changing_synchronous_network"}, {"score": 0.00467562067653756, "phrase": "malicious_insiders"}, {"score": 0.004185158719764001, "phrase": "extremely_general_corruption_patterns"}, {"score": 0.004113124166785655, "phrase": "corruption_pattern"}, {"score": 0.004036928841281608, "phrase": "honest_nodes"}, {"score": 0.0039305107836283305, "phrase": "optimal_transfer_rate"}, {"score": 0.003920023893036737, "phrase": "bounded_memory"}, {"score": 0.0035273479242422965, "phrase": "routing_protocol"}, {"score": 0.0032686078241820605, "phrase": "explicit_example"}, {"score": 0.003233840256806254, "phrase": "adversarial_routing"}, {"score": 0.003169641584514807, "phrase": "practical_solution"}, {"score": 0.003102562769362896, "phrase": "memory_requirements"}, {"score": 0.0030777746923963435, "phrase": "recent_work"}, {"score": 0.0029409927299529756, "phrase": "private-key_trusted-setup_setting"}, {"score": 0.002901928542940263, "phrase": "public-key_pki_setup"}, {"score": 0.002859555254898739, "phrase": "transmission_optimality"}, {"score": 0.0028215697125280785, "phrase": "open_questions"}, {"score": 0.0027840873507631652, "phrase": "multiple_paths"}, {"score": 0.0027507779645425754, "phrase": "strong_error-correction_results"}, {"score": 0.002717866012431769, "phrase": "micali_et_al"}, {"score": 0.0026889407784030876, "phrase": "cryptography_conf"}, {"score": 0.0026179638214458485, "phrase": "classical_error_correction"}, {"score": 0.002607479665020587, "phrase": "polynomially_bounded_adversary"}, {"score": 0.0025900990478111567, "phrase": "surprisingly_high_precision"}, {"score": 0.0025625300959581003, "phrase": "interactive_coding_theorem"}, {"score": 0.0025556837132865583, "phrase": "rajagopalan_and"}, {"score": 0.0025522713561219007, "phrase": "schulman"}, {"score": 0.002521724508316682, "phrase": "theory_of_computing"}, {"score": 0.002474936481671516, "phrase": "noisy-edge_static-topology_networks"}, {"score": 0.002399942999462572, "phrase": "optimal-rate_routing_theorem"}, {"score": 0.0023935299628494978, "phrase": "static-topology_networks"}, {"score": 0.002317894789279234, "phrase": "gafni"}, {"score": 0.0022237164206717693, "phrase": "ieee_symp"}, {"score": 0.002208888180090198, "phrase": "computer_science"}, {"score": 0.002202995699124548, "phrase": "focs"}, {"score": 0.0021049977753042253, "phrase": "j._algorithms"}], "paper_keywords": ["Network routing", " Fault localization", " Error-correction", " Multi-party computation", " End-to-end communication", " Communication complexity"], "paper_abstract": "The aim of this paper is to demonstrate the feasibility of authenticated throughput-efficient routing in an unreliable and dynamically changing synchronous network in which the majority of malicious insiders try to destroy and alter messages or disrupt communication in any way. More specifically, in this paper we seek to answer the following question: Given a network in which the majority of nodes are controlled by a node-controlling adversary and whose topology is changing every round, is it possible to develop a protocol with polynomially bounded memory per processor (with respect to network size) that guarantees throughput-efficient and correct end-to-end communication? We answer the question affirmatively for extremely general corruption patterns: we only request that the topology of the network and the corruption pattern of the adversary leaves at least one path each round connecting the sender and receiver through honest nodes (though this path may change at every round). Out construction works in the public-key setting and enjoys optimal transfer rate and bounded memory per processor (that is polynomial in the network size and does not depend on the amount of traffic). We stress that our protocol assumes no knowledge of which nodes are corrupted nor which path is reliable at any round, and is also fully distributed with nodes making decisions locally, so that they need not know the topology of the network at any time. The optimality that we prove for our protocol is very strong. Given any routing protocol, we evaluate its efficiency (rate of message delivery) in the \"worst case,\" that is with respect to the worst possible graph and against the worst possible (polynomially bounded) adversarial strategy (subject to the above mentioned connectivity constraints). Using this metric, we show that there does not exist any protocol that can be asymptotically superior (in terms of throughput) to ours in this setting. We remark that the aim of our paper is to demonstrate via explicit example the feasibility of throughput-efficient authenticated adversarial routing. However, we stress that out protocol is not intended to provide a practical solution, as due to its complexity, no attempt thus far has been made to reduce constants and memory requirements. Our result is related to recent work of Barak et al. (Proc. of Advances in Cryptology-27th EUROCRYPT 2008, LNCS, vol. 4965, pp. 341-360, 2008) who studied fault localization in networks assuming a private-key trusted-setup setting. Our work, in contrast, assumes a public-key PKI setup and aims at not only fault localization, but also transmission optimality. Among other things, our work answers one of the open questions posed in the Barak et al. paper regarding fault localization on multiple paths. The use of a public-key setting to achieve strong error-correction results in networks was inspired by the work of Micali et al. (Proc. of 2nd Theory of Cryptography Conf., LNCS, vol. 3378, pp. 1-16, 2005) who showed that classical error correction against a polynomially bounded adversary can be achieved with surprisingly high precision. Our work is also related to an interactive coding theorem of Rajagopalan and Schulman (Proc. 26th ACM Symp. on Theory of Computing, pp. 790-799, 1994) who showed that in noisy-edge static-topology networks a constant overhead in communication can also be achieved (provided none of the processors are malicious), thus establishing an optimal-rate routing theorem for static-topology networks. Finally, our work is closely related and builds upon to the problem of End-To-End Communication in distributed networks, studied by Afek and Gafni (Proc. of the 7th ACM Symp. on Principles of Distributed Computing, pp. 131-148, 1988); Awebuch et al. (Proc. of the 30th IEEE Symp. on Foundations of Computer Science, FOCS, 1989); Afek et al. (Proc. of the 11th ACM Symp. on Principles of Distributed Computing, pp. 35-46, 1992); and Afek et al. (J. Algorithms 22:158-186, 1997), though none of these papers consider or ensure correctness in the setting of a node-controlling adversary that may corrupt the majority of the network.", "paper_title": "Authenticated Adversarial Routing", "paper_id": "WOS:000340868900002"}