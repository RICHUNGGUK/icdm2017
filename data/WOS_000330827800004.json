{"auto_keywords": [{"score": 0.049506552437065775, "phrase": "large_instances"}, {"score": 0.038537984845902096, "phrase": "starting_tours"}, {"score": 0.03607836515970264, "phrase": "pseudo-backbone_edges"}, {"score": 0.0271331987863387, "phrase": "world_records"}, {"score": 0.004815057040519387, "phrase": "tsp"}, {"score": 0.004662913362513954, "phrase": "reduction_technique"}, {"score": 0.004570326517392777, "phrase": "traveling_salesman_problem"}, {"score": 0.004303404058571052, "phrase": "good_quality"}, {"score": 0.004003511299646736, "phrase": "shared_edges"}, {"score": 0.003923965929636472, "phrase": "important_tour_subspace"}, {"score": 0.003769567397860168, "phrase": "basic_tsp_heuristic"}, {"score": 0.0033417571465258, "phrase": "maximal_paths"}, {"score": 0.0032231139180761183, "phrase": "tsp_instance"}, {"score": 0.0031590250068577867, "phrase": "smaller_size"}, {"score": 0.003071429173571846, "phrase": "single_edge"}, {"score": 0.003034633345146293, "phrase": "reduced_tsp_instance"}, {"score": 0.002891793055307152, "phrase": "reduced_instance"}, {"score": 0.0027890803075309926, "phrase": "original_instance"}, {"score": 0.002722634472231842, "phrase": "currently_leading_tsp_heuristic"}, {"score": 0.0027008385562908425, "phrase": "helsgaun"}, {"score": 0.002615381301695394, "phrase": "well-known_tsp_homepage"}, {"score": 0.0025326211341475903, "phrase": "seven_vlsi_instances"}, {"score": 0.0024822279007111255, "phrase": "better_tours"}, {"score": 0.0024524733595572084, "phrase": "best_tours"}, {"score": 0.002308953751676031, "phrase": "keld_helsgaun"}, {"score": 0.0022904619303011097, "phrase": "yuichi_nagata"}, {"score": 0.0022268964676199292, "phrase": "remaining_instances"}, {"score": 0.0021049977753042253, "phrase": "world_record_tours"}], "paper_keywords": ["Traveling salesman problem", " Lin-Kernighan Heuristic", " Helsgaun Heuristic (LKH)", " Pseudo-Backbones"], "paper_abstract": "We introduce a reduction technique for large instances of the traveling salesman problem (TSP). This approach is based on the observation that tours with good quality are likely to share many edges. We exploit this observation by neglecting the less important tour space defined by the shared edges, and searching the important tour subspace in more depth. More precisely, by using a basic TSP heuristic, we obtain a set of starting tours. We call the set of edges which are contained in each of these starting tours as pseudo-backbone edges. Then we compute the maximal paths consisting only of pseudo-backbone edges, and transform the TSP instance to another one with smaller size by contracting each such path to a single edge. This reduced TSP instance can be investigated more intensively, and each tour of the reduced instance can be expanded to a tour of the original instance. Combining our reduction technique with the currently leading TSP heuristic of Helsgaun, we experimentally investigate 32 difficult VLSI instances from the well-known TSP homepage. In our experimental results we set world records for seven VLSI instances, i.e., find better tours than the best tours known so far (two of these world records have since been improved upon by Keld Helsgaun and Yuichi Nagata, respectively). For the remaining instances we find tours that are equally good or only slightly worse than the world record tours.", "paper_title": "A backbone based TSP heuristic for large instances", "paper_id": "WOS:000330827800004"}