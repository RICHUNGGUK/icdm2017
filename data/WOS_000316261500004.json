{"auto_keywords": [{"score": 0.03849418835328374, "phrase": "mobile_objects"}, {"score": 0.010331896757137518, "phrase": "voronoi_diagram"}, {"score": 0.00481495049065317, "phrase": "vgq-vor"}, {"score": 0.004750527930368202, "phrase": "virtual_grid"}, {"score": 0.004645057834614705, "phrase": "mobile_k_nearest_neighbor_queries"}, {"score": 0.004521566043596533, "phrase": "mobile_k_nearest_neighbor"}, {"score": 0.004303591748086452, "phrase": "challenging_problem"}, {"score": 0.0038119123317396954, "phrase": "current_locations"}, {"score": 0.003611751858608048, "phrase": "efficient_update_operations"}, {"score": 0.0035794251590584563, "phrase": "efficient_query_handling"}, {"score": 0.003406713877432236, "phrase": "mknn_queries"}, {"score": 0.003361069456060196, "phrase": "update_costs"}, {"score": 0.00295008998986066, "phrase": "position_changes"}, {"score": 0.002820319063320601, "phrase": "virtual_grid_quadtree"}, {"score": 0.0027206133859493725, "phrase": "two-layer_index_structure"}, {"score": 0.0023033100935570755, "phrase": "experimental_results"}, {"score": 0.0022318655527987846, "phrase": "existing_techniques"}, {"score": 0.0021723899772112423, "phrase": "bdual-tree"}], "paper_keywords": ["location based services", " mobile k nearest neighbor query", " mobile object index", " Voronoi diagram"], "paper_abstract": "Performing mobile k nearest neighbor (MkNN) queries whilst also being mobile is a challenging problem. All the mobile objects issuing queries and/or being queried aremobile. The performance of this kind of query relies heavily on the maintenance of the current locations of the objects. The index used for mobile objects must support efficient update operations and efficient query handling. This study aims to improve the performance of the MkNN queries while reducing update costs. Our approach is based on an observation that the frequency of one region changing between being occupied or not by mobile objects is much lower than the frequency of the position changes reported by the mobile objects. We first propose an virtual grid quadtree with Voronoi diagram(VGQ-Vor), which is a two-layer index structure that indexes regions occupied by mobile objects in a quadtree and builds a Voronoi diagram of the regions. Then we propose a moving k nearest neighbor (kNN) query algorithm on the VGQ-Vor and prove the correctness of the algorithm. The experimental results show that the VGQ-Vor outperforms the existing techniques (Bx-tree, Bdual-tree) by one to three orders of magnitude in most cases.", "paper_title": "VGQ-Vor: extending virtual grid quadtree with Voronoi diagram for mobile k nearest neighbor queries over mobile objects", "paper_id": "WOS:000316261500004"}