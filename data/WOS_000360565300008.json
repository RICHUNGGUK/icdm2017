{"auto_keywords": [{"score": 0.03666833546437711, "phrase": "learning_procedure"}, {"score": 0.012874320129321212, "phrase": "absolute_value_function"}, {"score": 0.008543887849624834, "phrase": "interval_weights"}, {"score": 0.0078037802598428675, "phrase": "one-layer_interval"}, {"score": 0.007297963495847107, "phrase": "original_learning_method"}, {"score": 0.00481495049065317, "phrase": "modified_learning_algorithm"}, {"score": 0.00453772385360173, "phrase": "interval_data"}, {"score": 0.0040943214728975845, "phrase": "real_numbers"}, {"score": 0.003982500388997765, "phrase": "interval_perceptron"}, {"score": 0.0038737214010638745, "phrase": "newly_learned_radii"}, {"score": 0.0033328427701162337, "phrase": "modified_learning_method"}, {"score": 0.003128270147867462, "phrase": "absolute_value"}, {"score": 0.0030068193773923387, "phrase": "error_function"}, {"score": 0.0029362173680378624, "phrase": "interval_weight"}, {"score": 0.002901538668877986, "phrase": "quadratic_term"}, {"score": 0.002867268370615848, "phrase": "simple_trick"}, {"score": 0.0028110458014332187, "phrase": "additional_computational_work"}, {"score": 0.002164216680934624, "phrase": "convergence_analysis"}, {"score": 0.0021049977753042253, "phrase": "easy_job"}], "paper_keywords": ["Interval perceptron", " Interval computation", " Interval neural network", " Interval weight", " Convergence"], "paper_abstract": "In many applications, it is natural to use interval data to describe various kinds of uncertainties. This paper is concerned with a one-layer interval perceptron with the weights and the outputs being intervals and the inputs being real numbers. In the original learning method for this interval perceptron, an absolute value function is applied for newly learned radii of the interval weights, so as to force the radii to be positive. This approach seems unnatural somehow, and might cause oscillation in the learning procedure as indicated in our numerical experiments. In this paper, a modified learning method is proposed for this one-layer interval perceptron. We do not use the function of the absolute value, and instead, we replace, in the error function, the radius of each interval weight by a quadratic term. This simple trick does not cause any additional computational work for the learning procedure, but it brings about the following three advantages: First, the radii of the intervals of the weights are guaranteed to be positive during the learning procedure without the help of the absolute value function. Secondly, the oscillation mentioned above is eliminated and the convergence of the learning procedure is improved, as indicated by our numerical experiments. Finally, a by-product is that the convergence analysis of the learning procedure is now an easy job, while the analysis for the original learning method is at least difficult, if not impossible, due to the non-smoothness of the absolute value function involved.", "paper_title": "A Modified Learning Algorithm for Interval Perceptrons with Interval Weights", "paper_id": "WOS:000360565300008"}