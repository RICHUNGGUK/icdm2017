{"auto_keywords": [{"score": 0.04459389785449592, "phrase": "tail"}, {"score": 0.00481495049065317, "phrase": "app_inventor_usability"}, {"score": 0.00373682045166829, "phrase": "mit_app_inventor"}, {"score": 0.0034279606788466957, "phrase": "al"}, {"score": 0.0033465923623290034, "phrase": "code_blocks"}, {"score": 0.0032376465741070274, "phrase": "novel_mechanism"}, {"score": 0.003132236287543072, "phrase": "bidirectional_conversions"}, {"score": 0.002996992362027833, "phrase": "text_fragments"}, {"score": 0.0028675712105299496, "phrase": "ai's_usability"}, {"score": 0.0022492129111567824, "phrase": "text_programming"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Blocks programming", " Text programming"], "paper_abstract": "We have developed TAIL, a textual programming language isomorphic to the blocks language of MIT App Inventor (AI), and have extended Al with code blocks, a novel mechanism that enables bidirectional conversions between blocks and text fragments. TAIL improves AI's usability by facilitating the reading, writing, and sharing of programs, and may also ease the transition from blocks to text programming. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Improving App Inventor usability via conversion between blocks and text", "paper_id": "WOS:000346818000045"}