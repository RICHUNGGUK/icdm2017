{"auto_keywords": [{"score": 0.03968926893211486, "phrase": "aject"}, {"score": 0.00481495049065317, "phrase": "attack_injection"}, {"score": 0.004752873752686246, "phrase": "increasing_reliance"}, {"score": 0.00469159356595623, "phrase": "networked_computer_systems"}, {"score": 0.004651177631663439, "phrase": "higher_levels"}, {"score": 0.004454237726525018, "phrase": "new_threats"}, {"score": 0.004014800383343256, "phrase": "attack_injection_methodology"}, {"score": 0.003962998498942108, "phrase": "automatic_discovery"}, {"score": 0.003894963476923956, "phrase": "software_components"}, {"score": 0.0038447018470115146, "phrase": "proposed_methodology"}, {"score": 0.003634262647873338, "phrase": "security_analysts"}, {"score": 0.0035564156572789473, "phrase": "network-connected_servers"}, {"score": 0.0034353020860809404, "phrase": "server's_communication_protocol"}, {"score": 0.0033909518548844047, "phrase": "test_case_generation_algorithms"}, {"score": 0.0033182992967343916, "phrase": "large_number"}, {"score": 0.002990592465417758, "phrase": "target_system"}, {"score": 0.0028267701593809877, "phrase": "unexpected_behavior"}, {"score": 0.0026835045963349647, "phrase": "particular_attack"}, {"score": 0.0021049977753042253, "phrase": "well-known_servers"}], "paper_keywords": ["Testing and debugging", " software engineering", " test design", " testing tools", " experimental evaluation", " fault injection", " attack injection"], "paper_abstract": "The increasing reliance put on networked computer systems demands higher levels of dependability. This is even more relevant as new threats and forms of attack are constantly being revealed, compromising the security of systems. This paper addresses this problem by presenting an attack injection methodology for the automatic discovery of vulnerabilities in software components. The proposed methodology, implemented in AJECT, follows an approach similar to hackers and security analysts to discover vulnerabilities in network-connected servers. AJECT uses a specification of the server's communication protocol and predefined test case generation algorithms to automatically create a large number of attacks. Then, while it injects these attacks through the network, it monitors the execution of the server in the target system and the responses returned to the clients. The observation of an unexpected behavior suggests the presence of a vulnerability that was triggered by some particular attack (or group of attacks). This attack can then be used to reproduce the anomaly and to assist the removal of the error. To assess the usefulness of this approach, several attack injection campaigns were performed with 16 publicly available POP and IMAP servers. The results show that AJECT could effectively be used to locate vulnerabilities, even on well-known servers tested throughout the years.", "paper_title": "Vulnerability Discovery with Attack Injection", "paper_id": "WOS:000278073400006"}