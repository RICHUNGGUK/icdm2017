{"auto_keywords": [{"score": 0.029588915133989056, "phrase": "bio-inspired_view"}, {"score": 0.027626369235161246, "phrase": "klonos"}, {"score": 0.00481495049065317, "phrase": "scientific_applications"}, {"score": 0.004599831967997116, "phrase": "important_aspect"}, {"score": 0.004567596860086148, "phrase": "software_porting"}, {"score": 0.004394281902031765, "phrase": "scientific_application"}, {"score": 0.0042126709243529275, "phrase": "key_subroutines"}, {"score": 0.004124688058533477, "phrase": "overall_porting_strategy"}, {"score": 0.004024351756560517, "phrase": "significant_feature"}, {"score": 0.0038989120088094185, "phrase": "code_structure"}, {"score": 0.0035579889785989738, "phrase": "new_platform"}, {"score": 0.0035206146304891973, "phrase": "proposed_methodology"}, {"score": 0.0033988361874354306, "phrase": "similar_subroutines"}, {"score": 0.0033395304916220086, "phrase": "similar_strategies"}, {"score": 0.0032812562034088646, "phrase": "similar-quality_porting"}, {"score": 0.003212663446866794, "phrase": "data_and_operator_sequences"}, {"score": 0.0031677308747058187, "phrase": "dna_sequences"}, {"score": 0.00304737045343781, "phrase": "similarity_analysis"}, {"score": 0.002994178996584381, "phrase": "np-complete_challenges"}, {"score": 0.002732149335827768, "phrase": "porting_planning_problem"}, {"score": 0.0021805201234139475, "phrase": "program_code"}, {"score": 0.002157583854640276, "phrase": "future_work"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["source code similarity", " software porting strategies", " code clone detection tools"], "paper_abstract": "In this paper, we propose a methodology to address an important aspect of software porting that receives little attention, namely planning support. When a scientific application consisting of many subroutines is to be ported, the selection of key subroutines greatly impacts the productivity and overall porting strategy because these subroutines may represent a significant feature of the code in terms of functionality, code structure, or performance. They may as well serve as indicators of the difficulty and amount of effort involved in porting a code to a new platform. The proposed methodology is based on the idea that a set of similar subroutines can be ported with similar strategies and result in a similar-quality porting. By viewing subroutines as data and operator sequences, analogous to DNA sequences, we are able to use various bioinformatics techniques to conduct the similarity analysis of subroutines while mitigating NP-complete challenges of other approaches. To the best of our knowledge, we are one of the first to explore this bio-inspired view of program to target the porting planning problem. In this paper, we describe our methodology and present a tool called Klonos to facilitate the execution of the methodology, which integrates to well known bioinformatics tools. As a proof of concept, we use Klonos to conduct experiments to find strategies for porting of several scientific benchmarks and applications. We also have identified some of the advantages and limitations of the bio-inspired view of a program code and the future work. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "KLONOS: Similarity-based planning tool support for porting scientific applications", "paper_id": "WOS:000318042500005"}