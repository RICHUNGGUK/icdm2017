{"auto_keywords": [{"score": 0.04222565054522196, "phrase": "gpu."}, {"score": 0.00481495049065317, "phrase": "extended_anisotropic_chessboard_distance_fields"}, {"score": 0.004724020632103649, "phrase": "parallel_stream_processor"}, {"score": 0.004664352260912174, "phrase": "modern_graphics_processing_units"}, {"score": 0.00443308765153716, "phrase": "parallel_stream_processors"}, {"score": 0.004133627071344356, "phrase": "mapping_ray"}, {"score": 0.003978866233891427, "phrase": "graphics_processors"}, {"score": 0.003829877278269543, "phrase": "complex_data_structures"}, {"score": 0.003663067281537946, "phrase": "data_structures"}, {"score": 0.003571018150056717, "phrase": "efficient_stream_processing"}, {"score": 0.0034812740368914455, "phrase": "ray_traversal"}, {"score": 0.00337224813954299, "phrase": "major_bottlenecks"}, {"score": 0.003026391655379905, "phrase": "efficient_regular_grid"}, {"score": 0.0030071857666598193, "phrase": "based_ray_traversals"}, {"score": 0.002931569771634119, "phrase": "new_empty_space"}, {"score": 0.0028944757265206332, "phrase": "traversal_method"}, {"score": 0.002768293851511292, "phrase": "anisotropic_chessboard_distance_structure"}, {"score": 0.0026986685585382347, "phrase": "gpu_friendly_traversal_algorithm"}, {"score": 0.002664513608074113, "phrase": "minimal_dynamic_branching"}, {"score": 0.002468450551616404, "phrase": "stream_processing_model"}, {"score": 0.0022434880661725493, "phrase": "parallel_stream_processing"}, {"score": 0.0021870332034407817, "phrase": "based_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["parallel stream processing", " distance fields", " ray tracing", " parallel rendering", " ray traversal"], "paper_abstract": "Modern graphics processing units (GPUs) are an implementation of parallel stream processors. In recent years, there have been a few studies on mapping ray tracing to the GPU. Since graphics processors are not designed to process complex data structures, it is crucial to explore data structures and algorithms for efficient stream processing. In particular ray traversal is one of the major bottlenecks in ray tracing and direct volume rendering methods. In this work we focus on the efficient regular grid based ray traversals on GPU. A new empty space skipping traversal method is introduced. Our method extends the anisotropic chessboard distance structure and employs a GPU friendly traversal algorithm with minimal dynamic branching. Additionally, several previous techniques have been redesigned and adapted to the stream processing model. We experimentally show that our traversal method is considerably faster and better suited to the parallel stream processing than the other grid based techniques. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Accelerated regular grid traversals using extended anisotropic chessboard distance fields on a parallel stream processor", "paper_id": "WOS:000250637100005"}