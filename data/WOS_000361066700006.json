{"auto_keywords": [{"score": 0.04382667184639675, "phrase": "field_failures"}, {"score": 0.03798153199472977, "phrase": "bugredux"}, {"score": 0.03394349817157487, "phrase": "observed_field_failures"}, {"score": 0.00481495049065317, "phrase": "automated_support"}, {"score": 0.004726382602809228, "phrase": "debugging_field_failures"}, {"score": 0.004596561972944185, "phrase": "recent_survey"}, {"score": 0.004470305751833109, "phrase": "apache"}, {"score": 0.004429311188313328, "phrase": "eclipse"}, {"score": 0.004367707617503722, "phrase": "mozilla_projects"}, {"score": 0.004073809704022463, "phrase": "user_machines"}, {"score": 0.003764469758319617, "phrase": "overall_approach"}, {"score": 0.0035603115570447467, "phrase": "general_technique"}, {"score": 0.0034624082435775676, "phrase": "dynamic_data"}, {"score": 0.003054009753601139, "phrase": "automated_debugging"}, {"score": 0.0029838294169759663, "phrase": "suitably_optimized_fault-localization_techniques"}, {"score": 0.0028218877037665484, "phrase": "empirical_evaluation"}, {"score": 0.0027188259793109264, "phrase": "real-world_programs"}, {"score": 0.0021646022201798247, "phrase": "synthesized_executions"}, {"score": 0.0021246816854197732, "phrase": "fault_localization"}, {"score": 0.0021049977753042253, "phrase": "accurate_results"}], "paper_keywords": ["Algorithms", " Experimentation", " Verification", " Debugging", " fault localization", " field failures"], "paper_abstract": "As confirmed by a recent survey conducted among developers of the Apache, Eclipse, and Mozilla projects, two extremely challenging tasks during maintenance are reproducing and debugging field failures-failures that occur on user machines after release. To help developers with these tasks, in this article we present an overall approach that comprises two different techniques: BUGREDUX and F3. BUGREDUX is a general technique for reproducing field failures that collects dynamic data about failing executions in the field and uses this data to synthesize executions that mimic the observed field failures. F3 leverages the executions generated by BUGREDUX to perform automated debugging using a set of suitably optimized fault-localization techniques. To assess the usefulness of our approach, we performed an empirical evaluation of the approach on a set of real-world programs and field failures. The results of our evaluation are promising in that, for all the failures considered, our approach was able to (1) synthesize failing executions that mimicked the observed field failures, (2) synthesize passing executions similar to the failing ones, and (3) use the synthesized executions to successfully perform fault localization with accurate results.", "paper_title": "Automated Support for Reproducing and Debugging Field Failures", "paper_id": "WOS:000361066700006"}