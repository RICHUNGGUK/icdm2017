{"auto_keywords": [{"score": 0.049438579755394715, "phrase": "functional_dependency"}, {"score": 0.012421384716028864, "phrase": "inference_attacks"}, {"score": 0.007569141904055792, "phrase": "xml_databases"}, {"score": 0.006706890943163178, "phrase": "verification_method"}, {"score": 0.0054323594065932585, "phrase": "available_information"}, {"score": 0.004057238343719479, "phrase": "tree_automaton"}, {"score": 0.0037104876694493815, "phrase": "sensitive_data"}, {"score": 0.003595552309967789, "phrase": "unauthorized_query"}, {"score": 0.00333097896868937, "phrase": "authorized_queries"}, {"score": 0.003141830113006653, "phrase": "database_instances"}, {"score": 0.003044455555031339, "phrase": "functional_dependencies"}, {"score": 0.0028844769395018595, "phrase": "sensitive_information"}, {"score": 0.002708399936381754, "phrase": "k-secrecy_problem"}, {"score": 0.0025892330566358503, "phrase": "candidate_set"}, {"score": 0.002262209824105154, "phrase": "infinity-secrecy_problem"}, {"score": 0.0021049977753042253, "phrase": "deterministic_topdown_tree_transducer"}], "paper_keywords": ["XML database", " inference attack", " security", " verification", " functional dependency"], "paper_abstract": "This paper discusses verification of the security against inference attacks on XML databases in the presence of a functional dependency. So far, we have provided the verification method for k-secrecy, which is a metric for the security against inference attacks on databases. Intuitively, k-secrecy means that the number of candidates of sensitive data (i.e., the result of unauthorized query) of a given database instance cannot be narrowed down to k-1 by using available information such as authorized queries and their results. In this paper, we consider a functional dependency on database instances as one of the available information. Functional dependencies help attackers to reduce the number of the candidates for the sensitive information. The verification method we have provided cannot be naively extended to the k-secrecy problem with a functional dependency. The method requires that the candidate set can be captured by a tree automaton, but the candidate set when a functional dependency is considered cannot be always captured by any tree automaton. We show that the infinity-secrecy problem in the presence of a functional dependency is decidable when a given unauthorized query is represented by a deterministic topdown tree transducer, without explicitly computing the candidate set.", "paper_title": "Decidability of the Security against Inference Attacks Using a Functional Dependency on XML Databases", "paper_id": "WOS:000304573100022"}