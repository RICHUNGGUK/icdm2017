{"auto_keywords": [{"score": 0.048063121570751016, "phrase": "chicoma"}, {"score": 0.04454153022265076, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "nvidia_fermi-class_graphics_processing_unit_hardware"}, {"score": 0.004312622975366672, "phrase": "graphics_processing_unit"}, {"score": 0.003958299299658418, "phrase": "gpu_architectures"}, {"score": 0.0038624981944755813, "phrase": "threaded_multicore_execution_model"}, {"score": 0.0036553070575015344, "phrase": "memory_performance"}, {"score": 0.003545024951402821, "phrase": "graph_theory_techniques"}, {"score": 0.0032336801561165113, "phrase": "high-level_programming_constructs"}, {"score": 0.0030414140732789186, "phrase": "low-level_programming_extensions"}, {"score": 0.002931588964400608, "phrase": "sta"}, {"score": 0.002861317198437286, "phrase": "ca"}, {"score": 0.0028258234939621055, "phrase": "usa"}, {"score": 0.002641360377825228, "phrase": "performance_gains"}, {"score": 0.002499508839669243, "phrase": "gpu_performance"}, {"score": 0.002469032978674379, "phrase": "threaded_multicore_performance"}, {"score": 0.0024389586544306826, "phrase": "openmp"}, {"score": 0.0023944552329463035, "phrase": "hybrid_multicore-gpu_calculations"}, {"score": 0.0021441057555396013, "phrase": "public_domain"}, {"score": 0.0021050284947791995, "phrase": "usa."}], "paper_keywords": ["Eulerian", " finite element", " partial differential equations", " compressible flow", " parallelization", " explicit"], "paper_abstract": "We describe the performance of Chicoma, a 3D unstructured mesh compressible flow solver, on graphics processing unit (GPU) hardware. The approach used to deploy the solver on GPU architectures derives from the threaded multicore execution model used in Chicoma, and attempts to improve memory performance via the application of graph theory techniques. The result is a scheme that can be deployed on the GPU with high-level programming constructs, for example, compiler directives, rather than low-level programming extensions. With an NVIDIA Fermi-class GPU (NVIDIA Corp., Sta. Clara, CA, USA) and double precision floating point arithmetic, we observe performance gains of 45xon problem sizes of 106 107 tetrahedra. We also compare GPU performance to threaded multicore performance with OpenMP and demonstrate hybrid multicore-GPU calculations with adaptive mesh refinement. Published 2012. This article is a US Government work and is in the public domain in the USA.", "paper_title": "Performance of a three-dimensional unstructured mesh compressible flow solver on NVIDIA Fermi-class graphics processing unit hardware", "paper_id": "WOS:000317627000006"}