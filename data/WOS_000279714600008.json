{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "total_completion_time"}, {"score": 0.049584128839210984, "phrase": "maximum_lateness"}, {"score": 0.014183913011154986, "phrase": "jobs"}, {"score": 0.011965321767357229, "phrase": "setup_time"}, {"score": 0.004715908063787721, "phrase": "identical_parallel_machines"}, {"score": 0.004667149874736771, "phrase": "setup_times"}, {"score": 0.004250302819248558, "phrase": "parallel_machines"}, {"score": 0.003598705020845104, "phrase": "processing_length"}, {"score": 0.0032094634756436595, "phrase": "availability_constraint"}, {"score": 0.0031597433845085092, "phrase": "completion_time"}, {"score": 0.0029224275921964724, "phrase": "due_dates"}, {"score": 0.002552938220078604, "phrase": "np"}, {"score": 0.002448260697722081, "phrase": "constructive_heuristic"}, {"score": 0.002324007171619245, "phrase": "genetic_algorithm"}, {"score": 0.0022407927161620855, "phrase": "heuristic_approach"}, {"score": 0.0022175679453857473, "phrase": "computational_experiments"}, {"score": 0.0021049977753042253, "phrase": "proposed_algorithms"}], "paper_keywords": ["Batch processing machine", " Bi-criteria scheduling", " Multi-agent model", " Makespan", " Maximum lateness", " Dynamic programming"], "paper_abstract": "This paper aims at minimizing the total completion time together with the maximum lateness. Jobs are processed by parallel machines in batches. A setup is required before processing a batch, which is common for all jobs in the batch. Jobs are continuously processed after the setup time. The processing length of a batch is the sum of the setup time and processing times of the jobs it contains. Due to the availability constraint, the completion time of a job is the time when a batch is totally processed. Considering due dates, the jobs need to be processed in a way that the total completion time and the maximum lateness are minimized. This problem is a kind of NP-hard so first we present a constructive heuristic to solve the problem. Then we propose a genetic algorithm whose initial population is formed by using the heuristic approach. Computational experiments are carried out to evaluate the performance of the proposed algorithms.", "paper_title": "Heuristics for minimizing total completion time and maximum lateness on identical parallel machines with setup times", "paper_id": "WOS:000279714600008"}