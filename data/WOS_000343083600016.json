{"auto_keywords": [{"score": 0.003996727479807572, "phrase": "ngs_machines"}, {"score": 0.003859500298805362, "phrase": "serious_bottleneck"}, {"score": 0.0033952989364738353, "phrase": "sophisticated_data_structures"}, {"score": 0.0033170847930578473, "phrase": "advanced_hardware_implementation"}, {"score": 0.0030572112793962004, "phrase": "open-source_library"}, {"score": 0.002952146666681891, "phrase": "genome_assembly"}, {"score": 0.002658068304632523, "phrase": "efficient_software"}, {"score": 0.002421291757425244, "phrase": "recent_optimized_de-bruijn_graph_implementation"}, {"score": 0.002205560249972527, "phrase": "desktop_computers"}, {"score": 0.002154693685426657, "phrase": "fast_algorithms"}, {"score": 0.0021049977753042253, "phrase": "low_memory_footprints"}], "paper_keywords": [""], "paper_abstract": "Motivation: Efficient and fast next-generation sequencing (NGS) algorithms are essential to analyze the terabytes of data generated by the NGS machines. A serious bottleneck can be the design of such algorithms, as they require sophisticated data structures and advanced hardware implementation. Results: We propose an open-source library dedicated to genome assembly and analysis to fasten the process of developing efficient software. The library is based on a recent optimized de-Bruijn graph implementation allowing complex genomes to be processed on desktop computers using fast algorithms with low memory footprints.", "paper_title": "GATB: Genome Assembly & Analysis Tool Box", "paper_id": "WOS:000343083600016"}