{"auto_keywords": [{"score": 0.04051412026681927, "phrase": "tcam-based_lookup_engines"}, {"score": 0.02580952549503669, "phrase": "tcam_storage_requirement"}, {"score": 0.00481495049065317, "phrase": "multi-field_packet_classification"}, {"score": 0.00470975295439431, "phrase": "advanced_internet_functions"}, {"score": 0.004627244470096107, "phrase": "network_security"}, {"score": 0.004546174820239776, "phrase": "service_provisioning"}, {"score": 0.004506171772318298, "phrase": "traffic_policing"}, {"score": 0.004466519142879166, "phrase": "virtual_private_networking"}, {"score": 0.004388252997694986, "phrase": "ternary_content"}, {"score": 0.00436890075128947, "phrase": "addressable_memory"}, {"score": 0.004330452731488388, "phrase": "tcam"}, {"score": 0.004235793609579307, "phrase": "dominant_solution_method"}, {"score": 0.004016938499717623, "phrase": "filter_table_management"}, {"score": 0.0039815737219022675, "phrase": "high_cost"}, {"score": 0.003946519058822334, "phrase": "high_power_consumption"}, {"score": 0.003759142310009214, "phrase": "increased_address_length"}, {"score": 0.00353342812142574, "phrase": "filter_encoding_method"}, {"score": 0.0032199307816384577, "phrase": "encoded_format"}, {"score": 0.0031774686451753477, "phrase": "storage_requirement"}, {"score": 0.003149471116658739, "phrase": "codeword_assignment"}, {"score": 0.003121836073380883, "phrase": "pic"}, {"score": 0.003080548510001051, "phrase": "inclusion_relationship"}, {"score": 0.0028826733506942554, "phrase": "single_codeword"}, {"score": 0.0028446460307503343, "phrase": "unnecessary_filter_replication"}, {"score": 0.00278237555651743, "phrase": "codeword_lookup"}, {"score": 0.0027094427948305515, "phrase": "longest_matching_prefix"}, {"score": 0.0026736945502820303, "phrase": "codeword_table"}, {"score": 0.002615156460073562, "phrase": "pure-tcam_lookup_engine"}, {"score": 0.0022696277881969896, "phrase": "high_power_dissipation_problem"}, {"score": 0.0022396694076443446, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["multi-field packet classification", " ternary content addressable memory", " prefix inclusion coding", " filter compression", " IPv4 and 1Pv6"], "paper_abstract": "Multi-field packet classification is necessary to support advanced Internet functions, such as network security, quality of service provisioning, traffic policing, virtual private networking, etc, Ternary content addressable memory (TCAM) is currently the dominant solution method used by the industry because of its speed and the simplicity of filter table management. High cost and high power consumption are the two major drawbacks of TCAM-based lookup engines. Adoption of IPv6 with increased address length will further exacerbate the challenges. In this article, we present a filter encoding method, called prefix inclusion coding (PIC) to improve the efficiency of TCAM-based lookup engines. Filters are stored in an encoded format to reduce storage requirement. Codeword assignment in PIC preserves the inclusion relationship among prefixes/ranges. By doing so, a prefix will be represented by a single codeword, and unnecessary filter replication can be avoided. Codeword lookup is equivalent to finding the longest matching prefix in the codeword table. Hence, a pure-TCAM lookup engine can be built without the needs of other semi-custom ASICs in the system. Our method can reduce the TCAM storage requirement by 70% to over 90%. The reduction in TCAM storage requirement also helps to alleviate the high power dissipation problem. The proposed method can be applied to both IPv4 and IPv6. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Efficient packet classification using TCAMs", "paper_id": "WOS:000241505900001"}