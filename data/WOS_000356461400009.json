{"auto_keywords": [{"score": 0.04948654579994331, "phrase": "memory-constrained_algorithms"}, {"score": 0.009788418623912009, "phrase": "simple_polygon"}, {"score": 0.009548774585758176, "phrase": "monotone_polygon"}, {"score": 0.00481495049065317, "phrase": "stack-based_algorithms"}, {"score": 0.004412881870378388, "phrase": "extra_variables"}, {"score": 0.004146327465630697, "phrase": "compressed_stack_technique"}, {"score": 0.0030231983220281836, "phrase": "convex_hull"}, {"score": 0.0024350966556966757, "phrase": "best-known_results"}, {"score": 0.0023849523850778807, "phrase": "constant-workspace_models"}, {"score": 0.0021049977753042253, "phrase": "first_general_framework"}], "paper_keywords": ["Memory constrained algorithms", " Space-time trade-off", " Stack algorithms", " Constant workspace"], "paper_abstract": "In memory-constrained algorithms, access to the input is restricted to be read-only, and the number of extra variables that the algorithm can use is bounded. In this paper we introduce the compressed stack technique, a method that allows to transform algorithms whose main memory consumption takes the form of a stack into memory-constrained algorithms. Given an algorithm that runs in time using a stack of length , we can modify it so that it runs in time using a workspace of variables (for any ) or time using variables (for any ). We also show how the technique can be applied to solve various geometric problems, namely computing the convex hull of a simple polygon, a triangulation of a monotone polygon, the shortest path between two points inside a monotone polygon, a 1-dimensional pyramid approximation of a 1-dimensional vector, and the visibility profile of a point inside a simple polygon. Our approach improves or matches up to a factor the running time of the best-known results for these problems in constant-workspace models (when they exist), and gives a trade-off between the size of the workspace and running time. To the best of our knowledge, this is the first general framework for obtaining memory-constrained algorithms.", "paper_title": "Space-Time Trade-offs for Stack-Based Algorithms", "paper_id": "WOS:000356461400009"}