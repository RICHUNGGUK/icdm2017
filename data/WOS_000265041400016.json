{"auto_keywords": [{"score": 0.03447147592902459, "phrase": "qos_requirement"}, {"score": 0.03156429996966141, "phrase": "qos_overview"}, {"score": 0.00481495049065317, "phrase": "algorithm_selection"}, {"score": 0.004766683200410046, "phrase": "composite_service_based"}, {"score": 0.004718897469501381, "phrase": "reference_vector"}, {"score": 0.004578382275810468, "phrase": "composite_service"}, {"score": 0.0044644734709113985, "phrase": "multiple_component_services"}, {"score": 0.004266501496765747, "phrase": "research_topic"}, {"score": 0.004223708778943785, "phrase": "qos_composition"}, {"score": 0.004118587636081584, "phrase": "service_composition"}, {"score": 0.0038573081851680656, "phrase": "assumed_qos"}, {"score": 0.0037423521744765075, "phrase": "required_qos"}, {"score": 0.0036125439380579626, "phrase": "user_preferred_composition_algorithm"}, {"score": 0.003540392285585644, "phrase": "different_computational_cost"}, {"score": 0.0035048567587934254, "phrase": "different_selection_results"}, {"score": 0.003332440548684892, "phrase": "current_service_composition_mechanism"}, {"score": 0.0031684791285366315, "phrase": "qos_reference_vectors"}, {"score": 0.003058515297281172, "phrase": "existing_individual_services'_qos"}, {"score": 0.0029374939071038146, "phrase": "best_qos"}, {"score": 0.0026959452932289797, "phrase": "composite_services"}, {"score": 0.002437012847684331, "phrase": "experiment_examples"}, {"score": 0.002282166507956957, "phrase": "selection_cost"}, {"score": 0.0022365262201954643, "phrase": "experimental_results"}, {"score": 0.0021263705039915198, "phrase": "appropriate_qos_requirement"}, {"score": 0.0021049977753042253, "phrase": "customized_selection_algorithm"}], "paper_keywords": ["service-oriented architecture", " service composition", " quality of services", " service selection"], "paper_abstract": "Under SOA (Service-Oriented Architecture), composite service is formed by aggregating multiple component services together in a given workflow. One key criterion of this research topic is QoS composition. Most work on service composition mainly focuses on the algorithms about how to compose services according to assumed QoS, without considering where the required QoS comes from and the selection of user preferred composition algorithm among those with different computational cost and different selection results. In this paper, we propose to strengthen current service composition mechanism by generation of QoS requirement and its algorithm selection based on the QoS reference vectors which are calculated optimally from the existing individual services' QoS by registry to represent QoS overview about the best QoS, the worst (or most economical) QoS, or the average QoS of all composite services. To implement QoS requirement, which is determined according to QoS overview, this paper introduces two selection algorithms as two kinds of experiment examples, one aiming at the most accurate service selection and the other chasing for trade-off between selection cost and result. Experimental results show our mechanism can help the requester achieve his expected composite service with appropriate QoS requirement and customized selection algorithm.", "paper_title": "QoS Requirement Generation and Algorithm Selection for Composite Service Based on Reference Vector", "paper_id": "WOS:000265041400016"}