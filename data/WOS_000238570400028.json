{"auto_keywords": [{"score": 0.0455466088830923, "phrase": "based_cryptography"}, {"score": 0.03762867376091313, "phrase": "computational_procedure"}, {"score": 0.029375216410904997, "phrase": "pipelined_version"}, {"score": 0.00481495049065317, "phrase": "point_multiplication_operation"}, {"score": 0.004614643339546038, "phrase": "well-known_performance"}, {"score": 0.004528301408585875, "phrase": "computer_science"}, {"score": 0.004485735417293941, "phrase": "point_multiplication"}, {"score": 0.004422632150619634, "phrase": "computationally_dominant_operation"}, {"score": 0.0038930368103015467, "phrase": "group_elements"}, {"score": 0.0033624514778823763, "phrase": "similar_processes"}, {"score": 0.0033150974333333244, "phrase": "pipelining_technique"}, {"score": 0.0032376465741070274, "phrase": "running_time"}, {"score": 0.003132236287543072, "phrase": "pipeline_sequence"}, {"score": 0.003073545175760353, "phrase": "error_method"}, {"score": 0.003030247482854539, "phrase": "nontrivial_task"}, {"score": 0.00297346171320082, "phrase": "current_work"}, {"score": 0.0029039692582303904, "phrase": "general_methodology"}, {"score": 0.0027437235598539904, "phrase": "improved_computational_speed"}, {"score": 0.002641823250595624, "phrase": "first_such_attempt"}, {"score": 0.00247249708860822, "phrase": "point_multiplication_methods"}, {"score": 0.002449208093757498, "phrase": "inversion-free_explicit_formula"}, {"score": 0.00240328454980006, "phrase": "prime_fields"}, {"score": 0.0023030731312573246, "phrase": "proposed_general_methodology"}, {"score": 0.0022280223816618736, "phrase": "hyperelliptic_curve_binary_algorithm"}, {"score": 0.002155412043665635, "phrase": "performance_gain"}, {"score": 0.0021049977753042253, "phrase": "ideal_theoretical_value"}], "paper_keywords": [""], "paper_abstract": "Pipelining is a well-known performance enhancing technique in computer science. Point multiplication is the computationally dominant operation in curve based cryptography. It is generally computed by repeatedly invoking some curve (group) operation like doubling, tripling, halving, addition of group elements. Such a computational procedure may be efficiently computed in a pipeline. More generally, let 17 be a computational procedure, which computes its output by repeatedly invoking processes from a set of similar processes. Employing pipelining technique may speed up the running time of the computational procedure. To find pipeline sequence by trial and error method is a nontrivial task. In the current work, we present a general methodology, which given any such computational procedure 17 can find a pipelined version with improved computational speed. To our knowledge, this is the first such attempt in curve based cryptography, where it can be used to speed up the point multiplication methods using inversion-free explicit formula for curves over prime fields. As an example, we employ the proposed general methodology to derive a pipelined version of the hyperelliptic curve binary algorithm for point multiplication and obtain a performance gain of 32% against the ideal theoretical value of 50%.", "paper_title": "A general methodology for pipelining the point multiplication operation in curve based cryptography", "paper_id": "WOS:000238570400028"}