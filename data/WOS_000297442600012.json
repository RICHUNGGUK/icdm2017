{"auto_keywords": [{"score": 0.04863310990251769, "phrase": "fixed_graph_h"}, {"score": 0.04525800253223521, "phrase": "h-minor_containment"}, {"score": 0.04406814292154228, "phrase": "robertson"}, {"score": 0.043832089378757905, "phrase": "seymour"}, {"score": 0.00481495049065317, "phrase": "minor_containment"}, {"score": 0.004774937143916685, "phrase": "h-minor_containment_problem"}, {"score": 0.004429388453288922, "phrase": "contracting_edges"}, {"score": 0.0043560464825349275, "phrase": "polynomial-time_algorithm"}, {"score": 0.004236487143672267, "phrase": "graph_minor_theory"}, {"score": 0.004074574278425223, "phrase": "algorithmic_applications"}, {"score": 0.0039737570920809215, "phrase": "bounded_branchwidth"}, {"score": 0.003940706575253453, "phrase": "basic_ingredient"}, {"score": 0.0038754247183799885, "phrase": "currently_fastest_solution"}, {"score": 0.0036859749922993346, "phrase": "hicks"}, {"score": 0.0036460625949131277, "phrase": "branch"}, {"score": 0.0032067651867042466, "phrase": "h_vertices"}, {"score": 0.003075503355629819, "phrase": "hicks'_result"}, {"score": 0.002781919402709524, "phrase": "combinatorial_object"}, {"score": 0.0026091594819333654, "phrase": "rooted_packings"}, {"score": 0.002509284173541882, "phrase": "fixed_surface"}, {"score": 0.002481455317052351, "phrase": "first_algorithm"}, {"score": 0.00246765655376112, "phrase": "minor_containment_testing"}, {"score": 0.002453934333239467, "phrase": "single-exponential_dependence"}, {"score": 0.002219552530380699, "phrase": "slight_modifications"}, {"score": 0.0021766418372878835, "phrase": "related_problems"}, {"score": 0.0021405207258001118, "phrase": "induced_minor_or_contraction_containment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Graph minors", " Branchwidth", " Graph minor containment", " Parameterized complexity", " Dynamic programming", " Graphs on surfaces"], "paper_abstract": "The H-MINOR CONTAINMENT problem asks whether a graph G contains some fixed graph H as a minor, that is, whether H can be obtained by some subgraph of G after contracting edges. The derivation of a polynomial-time algorithm for H-MINOR CONTAINMENT is one of the most important and technical parts of the Graph Minor Theory of Robertson and Seymour and it is a cornerstone for most of the algorithmic applications of this theory. H-MINOR CONTAINMENT for graphs of bounded branchwidth is a basic ingredient of this algorithm. The currently fastest solution to this problem, based on the ideas introduced by Robertson and Seymour, was given by Hicks in [I.V. Hicks, Branch decompositions and minor containment, Networks 43 (1) (2004) 1-9], providing an algorithm that in time 0(3(k2) . (h+k-1)!.m) decides if a graph G with m edges and branchwidth k, contains a fixed graph H on h vertices as a minor. In this work we improve the dependence on k of Hicks' result by showing that checking if H is a minor of G can be done in time O(2((2k+1).log k) h(2k) . 2(2h2) m). We set up an approach based on a combinatorial object called rooted packing, which captures the properties of the subgraphs of H that we seek in our dynamic programming algorithm. This formulation with rooted packings allows us to speed up the algorithm when G is embedded in a fixed surface, obtaining the first algorithm for minor containment testing with single-exponential dependence on branchwidth. Namely, it runs in time 2(O(k)) . 2(O(k)) . 2(O(h)) . n, with n = vertical bar V(G) vertical bar. Finally, we show that slight modifications of our algorithm permit to solve some related problems within the same time bounds, like induced minor or contraction containment. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Faster parameterized algorithms for minor containment", "paper_id": "WOS:000297442600012"}