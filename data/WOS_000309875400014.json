{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "best-fitted_rectangle"}, {"score": 0.02226633111423987, "phrase": "bisection_method"}, {"score": 0.004231699728933577, "phrase": "new_method"}, {"score": 0.003441352119167824, "phrase": "upper-estimated_rectangle"}, {"score": 0.003353521531649663, "phrase": "under-estimated_rectangle"}, {"score": 0.003130077012135034, "phrase": "under-estimated_rectangles"}, {"score": 0.0029980260560551982, "phrase": "closed-form_solutions"}, {"score": 0.0028468767420392945, "phrase": "straight_lines"}, {"score": 0.002294686545883412, "phrase": "fitted_rectangles"}, {"score": 0.0022168460543913787, "phrase": "consecutive_iterations"}, {"score": 0.0021789194955896102, "phrase": "extensive_evaluation"}], "paper_keywords": ["Minimum bounding box", " Shape features", " Centroid", " Orientation", " Major axis", " Minor axis", " Rectangular fit", " Segmentation", " Least square method"], "paper_abstract": "In this paper, we have presented a new method for computing the best-fitted rectangle for closed regions using their boundary points. The vertices of the best-fitted rectangle are computed using a bisection method starting with the upper-estimated rectangle and the under-estimated rectangle. The vertices of the upper- and under-estimated rectangles are directly computed using closed-form solutions by solving for pairs of straight lines. Starting with these two rectangles, we solve for the best-fitted rectangle iteratively using a bisection method. The algorithm stops when the areas of the fitted rectangles remain unchanged during consecutive iterations. Extensive evaluation of our algorithm demonstrates its effectiveness.", "paper_title": "Finding best-fitted rectangle for regions using a bisection method", "paper_id": "WOS:000309875400014"}