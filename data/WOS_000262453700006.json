{"auto_keywords": [{"score": 0.027931009928858136, "phrase": "django"}, {"score": 0.00481495049065317, "phrase": "efficient_subsumption_testing"}, {"score": 0.004683073921949839, "phrase": "runtime_distributions"}, {"score": 0.0046184900568047565, "phrase": "subsumption_testing"}, {"score": 0.004523272849033429, "phrase": "graph_data"}, {"score": 0.004278807087784626, "phrase": "gradual_growth"}, {"score": 0.003936560022538905, "phrase": "problem_instance_location"}, {"score": 0.003855347387268162, "phrase": "phase_transition_space"}, {"score": 0.0037236852537136547, "phrase": "heavy_tails"}, {"score": 0.003217896008931311, "phrase": "finite_time"}, {"score": 0.0031514627590375354, "phrase": "basic_restarted_strategy"}, {"score": 0.0030017207229983385, "phrase": "odd_and_even_restarts"}, {"score": 0.0029193609786176632, "phrase": "exponential_runtime_distribution_decay_guarantee"}, {"score": 0.0028000270988465486, "phrase": "restart_pairs"}, {"score": 0.002648448458159033, "phrase": "state-of-the-art_subsumption_algorithm"}, {"score": 0.0024533019565858073, "phrase": "predictive_toxicology_challenge"}, {"score": 0.002241087008892355, "phrase": "relatively_small_examples"}], "paper_keywords": ["Relational learning", " Graph Mining", " Subsumption", " Homomorphism", " Randomized Complete Algorithm"], "paper_abstract": "We study runtime distributions of subsumption testing. On graph data randomly sampled from two different generative models we observe a gradual growth of the tails of the distributions as a function of the problem instance location in the phase transition space. To avoid the heavy tails, we design a randomized restarted subsumption testing algorithm RESUMER2. The algorithm is complete in that it correctly decides both subsumption and non-subsumption in finite time. A basic restarted strategy is augmented by allowing certain communication between odd and even restarts without losing the exponential runtime distribution decay guarantee resulting from mutual independence of restart pairs. We empirically test RESUMER2 against the state-of-the-art subsumption algorithm Django on generated graph data as well as on the predictive toxicology challenge (PTC) data set. RESUMER2 performs comparably with Django for relatively small examples (tens to hundreds of literals), while for further growing example sizes, RESUMER2 becomes vastly superior.", "paper_title": "A Restarted Strategy for Efficient Subsumption Testing", "paper_id": "WOS:000262453700006"}