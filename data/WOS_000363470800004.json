{"auto_keywords": [{"score": 0.029725760425679804, "phrase": "sidney_heuristic"}, {"score": 0.015719716506582538, "phrase": "large_areas"}, {"score": 0.012641655711243769, "phrase": "area-maximal_schedules"}, {"score": 0.004630270043271386, "phrase": "g's_nodes"}, {"score": 0.004507409180942999, "phrase": "average_number"}, {"score": 0.004366387782457736, "phrase": "g_node"}, {"score": 0.004323886831151445, "phrase": "extensive_simulations"}, {"score": 0.004250498944695784, "phrase": "processor_availability"}, {"score": 0.004188583059712052, "phrase": "larger_areas"}, {"score": 0.004067432889457786, "phrase": "platform's_processors"}, {"score": 0.003998380230709541, "phrase": "unpredictable_ways"}, {"score": 0.003969144836240849, "phrase": "unpredictable_times"}, {"score": 0.003920891569777894, "phrase": "desktop_grids"}, {"score": 0.0037888687452790953, "phrase": "efficient_generators"}, {"score": 0.0037063451347377403, "phrase": "well-structured_dags"}, {"score": 0.0034439852794962322, "phrase": "efficient_algorithm"}, {"score": 0.0034187896011435245, "phrase": "optimal_area"}, {"score": 0.003263428402502978, "phrase": "daga_factor"}, {"score": 0.0032079813320482304, "phrase": "small_dags"}, {"score": 0.003168952160907741, "phrase": "efficient_area-maximizing_schedulers"}, {"score": 0.0030175122503040275, "phrase": "novel_polynomial-time_heuristic"}, {"score": 0.0029807934480637855, "phrase": "quite_large_areas"}, {"score": 0.0029229677574293725, "phrase": "sidney_decomposition"}, {"score": 0.0028452794282799194, "phrase": "random_structure"}, {"score": 0.002573424607574822, "phrase": "earlier_studies"}, {"score": 0.0024624103660827695, "phrase": "previously_known_heuristics"}, {"score": 0.0024087078818727445, "phrase": "area-maximization_problem"}, {"score": 0.002391067964886602, "phrase": "linear_program"}, {"score": 0.0022935154199244688, "phrase": "area_value"}, {"score": 0.0022434880661725493, "phrase": "reported_results"}, {"score": 0.002232519579957705, "phrase": "random_dags"}, {"score": 0.0021999341184897217, "phrase": "second_heuristic"}, {"score": 0.002141421723174112, "phrase": "lp_formulation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["DAG scheduling algorithms", " cloud computing", " dynamic heterogeneity"], "paper_abstract": "The Area of a schedule sigma for a directed acyclic graph (DAG) G is a quality metric that measures the rate at which sigma renders G's nodes eligible for execution. Specifically, AREA(sigma) is the average number of nodes of G that are eligible for execution as sigma executes G node by node. Extensive simulations suggest that, for many distributions of processor availability and power, DAG-schedules having larger Areas execute DAGs faster on platforms that are dynamically heterogeneous: the platform's processors change power and availability status in unpredictable ways and at unpredictable times. (Clouds and desktop grids exemplify such platforms.) While Area-maximal schedules can provably be found for everyDAG, efficient generators of such schedules are known only for families of well-structured DAGs. Our first result shows that the problem of crafting Area-maximal schedules for general DAGs is <sans-serif>NP</sans-serif>-complete, hence likely computationally intractable. We also provide an efficient algorithm that approximates optimal Area to within a factor of 1/(2<mml:msqrt>n</mml:msqrt>), where n is the number of tasks in the DAGa factor that is likely interesting only for small DAGs. The lack of efficient Area-maximizing schedulers for general DAGs has instigated the development of several heuristics for producing DAG-schedules that have large Areas. We propose a novel polynomial-time heuristic that produces schedules having quite large Areas; the heuristic is based on the Sidney decomposition of a DAG. (1) Simulations on DAGs having random structure yield the following results. The SIDNEY heuristic produces schedules whose Areas: (a) are at least 85% of maximal; and (b) are at least 1.25 times greater than previously known heuristics. (2) Simulations on DAGs having the structure of random LEGO((R);)DAGs (as formulated in earlier studies) indicate that the schedules produced by the SIDNEY heuristic have Areas that are at least 1.5 times greater than previously known heuristics. The 85%' result is obtained from formulating the Area-maximization problem as a linear program (LP); the Areas of DAG-schedules produced by the SIDNEY heuristic are at least 85% of the Area value produced by the (unrounded) LP. (3) The reported results on random DAGs are essentially matched by a second heuristic, which produces DAG-schedules by rounding the results of the LP formulation. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "On constructing DAG-schedules with large areas", "paper_id": "WOS:000363470800004"}