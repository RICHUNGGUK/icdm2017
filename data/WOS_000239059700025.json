{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "versatile_kernel"}, {"score": 0.04602548513647441, "phrase": "software_systems"}, {"score": 0.004738325072560588, "phrase": "distributed_aop._aspect-oriented_programming"}, {"score": 0.00455202992136173, "phrase": "better_separation"}, {"score": 0.004201033616196156, "phrase": "modular_implementation"}, {"score": 0.004134137523409649, "phrase": "crosscutting_concerns"}, {"score": 0.003301733505307784, "phrase": "explicit_introduction"}, {"score": 0.003197331418636181, "phrase": "aop"}, {"score": 0.0030468495296763617, "phrase": "distributed_aspects"}, {"score": 0.0025326211341475903, "phrase": "distributed_aop"}, {"score": 0.002209060366991921, "phrase": "distributed_manner"}], "paper_keywords": [""], "paper_abstract": "Aspect-Oriented Programming (AOP) promotes better separation of concerns in software systems by introducing aspects for the modular implementation of crosscutting concerns. As a result, modularity and adaptability of software systems are greatly enhanced. To date, very few AOP proposals take distribution into account. This paper considers the explicit introduction of distribution in AOP, by proposing support for distributed aspects: all dimensions of aspects are studied in the light of distribution. The result of this work is a versatile kernel for distributed AOP in Java: a flexible infrastructure that allows aspects to be defined and applied in a distributed manner, on top of which various distributed aspect languages and frameworks can be defined.", "paper_title": "A versatile kernel for distributed AOP", "paper_id": "WOS:000239059700025"}