{"auto_keywords": [{"score": 0.048254425966030454, "phrase": "output_sensitive_algorithms"}, {"score": 0.02765071126697575, "phrase": "previous_algorithm"}, {"score": 0.00481495049065317, "phrase": "sensitive_algorithms"}, {"score": 0.004455061431809975, "phrase": "positive_integer"}, {"score": 0.004255121395629569, "phrase": "maximal_number"}, {"score": 0.004021267064832957, "phrase": "maximum_number"}, {"score": 0.0031732652552570644, "phrase": "previous_o"}, {"score": 0.0030306762103395842, "phrase": "previous_algorithms"}, {"score": 0.0021049977753042253, "phrase": "faster_algorithms"}], "paper_keywords": ["covering with disks", " output sensitive algorithm", " computational geometry"], "paper_abstract": "In this paper we devise some output sensitive algorithms for a problem where a set of points and a positive integer, m, are given and the goal is to cover a maximal number of these points with m disks. We introduce a parameter, rho, as the maximum number of points that one disk can cover and we analyse the algorithms based on this parameter. At first, we solve the problem for m = 1 in O(n rho) time, which improves the previous O(n(2)) time algorithm for this problem. Then we solve the problem for m = 2 in O(n rho + rho(3) log rho) time, which improves the previous O (n(3) log n) algorithm for this problem. Our algorithms outperform the previous algorithms because rho is much smaller than n in many cases. Finally, we extend the algorithm for any value of m and solve the problem in O (mn rho + (m rho)(2m-1) log m rho) time. The previous algorithm for this problem runs in O (n(2m-1) log n) time and our algorithm usually runs faster than the previous algorithm because m rho is smaller than n in many cases. We obtain output sensitive algorithms by confining the areas that we should search for the result. The techniques used in this paper may be applicable in other covering problems to obtain faster algorithms.", "paper_title": "Output sensitive algorithms for covering many points", "paper_id": "WOS:000365862100004"}