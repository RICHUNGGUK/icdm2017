{"auto_keywords": [{"score": 0.04595091693053785, "phrase": "root_canal_refactoring"}, {"score": 0.009409955594205228, "phrase": "root_canal_refactorings"}, {"score": 0.007490716375343464, "phrase": "floss_refactoring"}, {"score": 0.00481495049065317, "phrase": "software_refactoring_tactics"}, {"score": 0.004254814649568355, "phrase": "extended_period"}, {"score": 0.003888659470009222, "phrase": "large-scale_case_study"}, {"score": 0.0035539019235553897, "phrase": "case_study"}, {"score": 0.0029020077365708966, "phrase": "floss_refactorings"}, {"score": 0.0026971491199975083, "phrase": "obvious_bias"}, {"score": 0.0025208755851561368, "phrase": "usage_data_information"}, {"score": 0.0024786330057813225, "phrase": "eclipse_usage_data_collector"}, {"score": 0.0021049977753042253, "phrase": "relative_popularity"}], "paper_keywords": ["software maintenance", " software process improvement", " software quality", " software refactoring tactics", " software quality improvement", " software external behaviour preservation", " root canal refactoring", " floss refactoring", " rename method", " extract method", " refactoring density", " Eclipse UDC", " Eclipse usage data collector", " usage data information"], "paper_abstract": "Refactorings might be done using two different tactics: root canal refactoring and floss refactoring. Root canal refactoring is to set aside an extended period specially for refactoring. Floss refactoring is to interleave refactorings with other programming tasks. However, no large-scale case study on refactoring tactics is available. To this end, the authors carry out a case study to investigate the following research questions. (i) How often are root canal refactoring and floss refactoring employed, respectively? (ii) Are some kinds of refactorings more likely than others to be applied as floss refactorings or root canal refactorings? (iii) Do engineers employing both tactics have obvious bias to or against either of the tactics? They analyse the usage data information collected by Eclipse usage data collector. Results suggest that about 14% of refactorings are root canal refactorings. These findings reconfirm the hypothesis that, in general, floss refactoring is more common than root canal refactoring. The relative popularity of root canal refactoring, however, is much higher than expected. They also find that some kinds of refactorings are more likely than others to be performed as root canal refactorings. Results also suggest that engineers who have explored both tactics obviously tended towards root canal refactoring.", "paper_title": "Case study on software refactoring tactics", "paper_id": "WOS:000331070000001"}