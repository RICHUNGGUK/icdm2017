{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "layout_design"}, {"score": 0.004761494044422926, "phrase": "packing_and_layout_problems"}, {"score": 0.004682414867878963, "phrase": "np-complete_problems"}, {"score": 0.004528156929805637, "phrase": "wide_utilization"}, {"score": 0.004428139418750855, "phrase": "parallel_genetic_algorithms"}, {"score": 0.0039380388343479384, "phrase": "e.g._premature_convergence"}, {"score": 0.00389427992231721, "phrase": "slow_convergence_rate"}, {"score": 0.0037449033166879874, "phrase": "parallel_hybrid_pso-ga_algorithm"}, {"score": 0.0033301694494391612, "phrase": "probability_values"}, {"score": 0.003293142761521422, "phrase": "improved_adaptive_crossover"}, {"score": 0.003256526411907174, "phrase": "mutation_operators"}, {"score": 0.0031140747752837826, "phrase": "different_classes"}, {"score": 0.0030451958332949735, "phrase": "different_modes"}, {"score": 0.003011328068286321, "phrase": "pso_update_operators"}, {"score": 0.0028795712616923462, "phrase": "full_use"}, {"score": 0.002831658243608909, "phrase": "fast_convergence_property"}, {"score": 0.002800158709933889, "phrase": "particle_swarm_optimization"}, {"score": 0.0027690086059100495, "phrase": "adjustable_arithmetic-progression_rank-based_selection"}, {"score": 0.002475898613632249, "phrase": "early_stage"}, {"score": 0.0023807981747706376, "phrase": "convergence_rate"}, {"score": 0.002341164727388944, "phrase": "late_stage"}, {"score": 0.0022386642196006567, "phrase": "simplex_method"}, {"score": 0.0022013916728990564, "phrase": "local_search_performance"}, {"score": 0.0021406417439887907, "phrase": "layout_design_problem"}, {"score": 0.0021049977753042253, "phrase": "phpso-ga"}], "paper_keywords": [""], "paper_abstract": "Packing and layout problems belong to NP-Complete problems theoretically and have found a wide utilization in practice. Parallel genetic algorithms (PGA) are relatively effective to solve these problems. But there still exist some defects of them, e.g. premature convergence and slow convergence rate. To overcome them, a parallel hybrid PSO-GA algorithm (PHPSO-GA) is proposed based on PGA. In PHPSO-GA, subpopulations are classified as several classes according to probability values of improved adaptive crossover and mutation operators. And in accordance with characteristics of different classes of subpopulations, different modes of PSO update operators are introduced. It aims at making full use of the fast convergence property of particle swarm optimization. Adjustable arithmetic-progression rank-based selection is introduced into this algorithm as well. It not only can prevent the algorithm from premature in the early stage of evolution but also can accelerate convergence rate in the late stage of evolution. To be hybridized with simplex method can improve local search performance. An example of layout design problem shows that PHPSO-GA is feasible and effective.", "paper_title": "Parallel hybrid PSO-GA algorithm and its application to layout design", "paper_id": "WOS:000241891600100"}