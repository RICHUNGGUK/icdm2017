{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "circuit-level_timing_speculation"}, {"score": 0.03920747363058631, "phrase": "timing_errors"}, {"score": 0.03480639414561012, "phrase": "error_rates"}, {"score": 0.03335306997705366, "phrase": "static_instructions"}, {"score": 0.004294962474996283, "phrase": "design_margins"}, {"score": 0.004183137595671171, "phrase": "power_and_performance_overheads"}, {"score": 0.003968112038249246, "phrase": "microarchitectural_methods"}, {"score": 0.0036660436272785476, "phrase": "processor_logic"}, {"score": 0.002941913249957503, "phrase": "pronounced_locality"}, {"score": 0.002646880721119838, "phrase": "error_prediction"}, {"score": 0.0024024377855956136, "phrase": "costly_recovery_penalty"}, {"score": 0.0021613897794439227, "phrase": "baseline_policy"}], "paper_keywords": ["Error locality", " timing speculation", " low-power design", " reliability"], "paper_abstract": "Circuit-level timing speculation has been proposed as a technique to reduce dependence on design margins, eliminating power and performance overheads. Recent work has proposed microarchitectural methods to dynamically detect and recover from timing errors in processor logic. This work has not evaluated or exploited the disparity of error rates at the level of static instructions. In this paper, we demonstrate pronounced locality in error rates at the level of static instructions. We propose timing error prediction to dynamically anticipate timing errors at the instruction-level and reduce the costly recovery penalty. This allows us to achieve 43.6% power savings when compared to a baseline policy and incurs only 6.9% performance penalty.", "paper_title": "Exploiting Locality to Improve Circuit-level Timing Speculation", "paper_id": "WOS:000207924800003"}