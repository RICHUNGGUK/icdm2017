{"auto_keywords": [{"score": 0.04283466066833854, "phrase": "rule_scheduling_process"}, {"score": 0.014166859032464, "phrase": "rule_scheduler"}, {"score": 0.009099312787110053, "phrase": "rule_scheduling_approaches"}, {"score": 0.008195000648450834, "phrase": "ex-spestla"}, {"score": 0.00481495049065317, "phrase": "active_rule_scheduling"}, {"score": 0.004780183091824403, "phrase": "active_database_systems"}, {"score": 0.004610058444728656, "phrase": "predefined_events"}, {"score": 0.0045108906244892165, "phrase": "active_rules"}, {"score": 0.00442987501427177, "phrase": "main_modules"}, {"score": 0.004256703909255889, "phrase": "significant_impact"}, {"score": 0.003387153161968927, "phrase": "existing_rule"}, {"score": 0.0033262524445013303, "phrase": "laboratory_environment"}, {"score": 0.0032783186166708985, "phrase": "three-tier_architecture"}, {"score": 0.003138609109371368, "phrase": "rule_scheduling"}, {"score": 0.003104619199351347, "phrase": "average_response_time"}, {"score": 0.003082486713860374, "phrase": "throughput"}, {"score": 0.003059869469624301, "phrase": "response_time_standard_deviation"}, {"score": 0.003037736332283186, "phrase": "time_overhead_per_transaction"}, {"score": 0.002855934865505357, "phrase": "latter_two_criteria"}, {"score": 0.002704554429386671, "phrase": "new_approach"}, {"score": 0.002542642270762272, "phrase": "learning_automaton"}, {"score": 0.0023817332409567403, "phrase": "unconstrained_scheduling_approaches"}, {"score": 0.002206801982145622, "phrase": "proposed_approach"}, {"score": 0.002151388538895855, "phrase": "evaluation_criteria"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Active database management systems", " Probability estimation", " Active rule scheduling", " Learning automata"], "paper_abstract": "Active database systems (ADSs) react automatically to the occurrence of predefined events by defining a set of active rules. One of the main modules of an ADS is the rule scheduler, which has a significant impact on the effectiveness and efficiency of ADSs. During the rule scheduling process, the rule scheduler is responsible for choosing one of the activated or ready-to-be-executed rules to evaluate its condition section or execute its action section, respectively. This process continues until there is no rule to be evaluated or executed. In this research, we evaluate and compare existing rule scheduling approaches in a laboratory environment based on a three-tier architecture. There are criteria used for the evaluation and comparison of rule scheduling approaches: Average Response Time, Throughput, Response Time Standard Deviation, Time Overhead per Transaction, and CPU Utilization. The three first criteria are used to evaluate the effectiveness, and the latter two criteria are used to evaluate the efficiency of rule scheduling approaches. In this paper, a new approach, referred to as Ex-SJF(EsTLA), is proposed to improve the rule scheduling process, using a learning automaton. In our laboratory environment, Ex-SPEsTLA is compared with those rule scheduling approaches that are unconstrained as Ex-SPEsTLA is. Unconstrained scheduling approaches serially schedule the rules that do not have any priorities or deadlines. The results of experiments revealed that the proposed approach improved the rule scheduling process according to the evaluation criteria. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "A new approach to active rule scheduling", "paper_id": "WOS:000349878400006"}