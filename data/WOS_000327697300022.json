{"auto_keywords": [{"score": 0.02611583496136967, "phrase": "ddec"}, {"score": 0.00481495049065317, "phrase": "data-driven_equivalence_checking"}, {"score": 0.004539005582217309, "phrase": "data_driven_algorithm"}, {"score": 0.00443308765153716, "phrase": "equivalence_checking"}, {"score": 0.004081385289516914, "phrase": "simulation_relations"}, {"score": 0.0038930368103015467, "phrase": "test_runs"}, {"score": 0.0037133478610481994, "phrase": "candidate_simulation_relation"}, {"score": 0.003500313767208306, "phrase": "off-the-shelf_smt_solvers"}, {"score": 0.0032223742018434856, "phrase": "simulation_relation"}, {"score": 0.002897109710213723, "phrase": "insufficient_data"}, {"score": 0.0025436978068459565, "phrase": "prototype_implementation"}, {"score": 0.002233301265743633, "phrase": "first_sound_equivalence_checker"}], "paper_keywords": ["Binary Analysis", " Compilers", " Markov Chain Monte Carlo", " Optimization", " Superoptimization", " SMT", " Verification", " x86"], "paper_abstract": "We present a data driven algorithm for equivalence checking of two loops. The algorithm infers simulation relations using data from test runs. Once a candidate simulation relation has been obtained, off-the-shelf SMT solvers are used to check whether the simulation relation actually holds. The algorithm is sound: insufficient data will cause the proof to fail. We demonstrate a prototype implementation, called DDEC, of our algorithm, which is the first sound equivalence checker for loops written in x86 assembly.", "paper_title": "Data-Driven Equivalence Checking", "paper_id": "WOS:000327697300022"}