{"auto_keywords": [{"score": 0.025167814366433762, "phrase": "step."}, {"score": 0.00481495049065317, "phrase": "defect_escalation"}, {"score": 0.004384504920139083, "phrase": "prolonged_software_development_cycle"}, {"score": 0.00433645229352341, "phrase": "enterprise_software_venders"}, {"score": 0.004218602458288531, "phrase": "software_products"}, {"score": 0.004014452814186653, "phrase": "limited_resources"}, {"score": 0.003948613642680196, "phrase": "small_number"}, {"score": 0.0038838500580958744, "phrase": "reported_defects"}, {"score": 0.0036553070575015344, "phrase": "escalated_defects"}, {"score": 0.003478321590910367, "phrase": "software_vendors"}, {"score": 0.0033651019362620866, "phrase": "total_costs"}, {"score": 0.002758907973783665, "phrase": "escalation_risk"}, {"score": 0.0027286224888843956, "phrase": "current_defect_reports"}, {"score": 0.0026986685585382347, "phrase": "maximum_net_profit"}, {"score": 0.0025678829712650437, "phrase": "simple_and_general_framework"}, {"score": 0.002511803988580901, "phrase": "maximum_net_profit_problem"}, {"score": 0.0024842242921857705, "phrase": "cost-sensitive_learning"}, {"score": 0.0022994427535192492, "phrase": "cost-sensitive_decision_trees"}, {"score": 0.002224510044064184, "phrase": "best_methods"}, {"score": 0.002175913488493802, "phrase": "highest_positive_net_profit"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software defect escalation prediction", " Cost-sensitive learning", " Data mining", " Defect escalation", " Machine learning"], "paper_abstract": "While most software defects (i.e., bugs) are corrected and tested as part of the prolonged software development cycle, enterprise software venders often have to release software products before all reported defects are corrected, due to deadlines and limited resources. A small number of these reported defects will be escalated by customers whose businesses are seriously impacted. Escalated defects must be resolved immediately and individually by the software vendors at a very high cost. The total costs can be even greater, including loss of reputation, satisfaction, loyalty, and repeat revenue. In this paper, we develop a Software defecT Escalation Prediction (STEP) system to mine historical defect report data and predict the escalation risk of current defect reports for maximum net profit. More specifically, we first describe a simple and general framework to convert the maximum net profit problem to cost-sensitive learning. We then apply and compare four well-known cost-sensitive learning approaches for STEP. Our experiments suggest that cost-sensitive decision trees (CSTree) is the best methods for producing the highest positive net profit. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Cost-sensitive learning for defect escalation", "paper_id": "WOS:000338814800014"}