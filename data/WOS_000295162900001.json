{"auto_keywords": [{"score": 0.026618506469151294, "phrase": "component_models"}, {"score": 0.014848288559431424, "phrase": "large_number"}, {"score": 0.00481495049065317, "phrase": "software_component_models"}, {"score": 0.004458722048888919, "phrase": "different_software_component_models"}, {"score": 0.004208881856146758, "phrase": "different_aims"}, {"score": 0.004089239912167375, "phrase": "different_principles"}, {"score": 0.003154012038613403, "phrase": "component-based_development"}, {"score": 0.002977061391551628, "phrase": "standard_principles"}, {"score": 0.0022302306304023602, "phrase": "fundamental_principles"}, {"score": 0.0021049977753042253, "phrase": "component_model_classification_framework"}], "paper_keywords": ["Software components", " software component models", " component lifecycle", " extra-functional properties", " component composition"], "paper_abstract": "In the last decade, a large number of different software component models have been developed, with different aims and using different principles and technologies. This has resulted in a number of models which have many similarities, but also principal differences, and in many cases unclear concepts. Component-based development has not succeeded in providing standard principles, as has, for example, object-oriented development. In order to increase the understanding of the concepts and to differentiate component models more easily, this paper identifies, discusses, and characterizes fundamental principles of component models and provides a Component Model Classification Framework based on these principles. Further, the paper classifies a large number of component models using this framework.", "paper_title": "A Classification Framework for Software Component Models", "paper_id": "WOS:000295162900001"}