{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asynchronous_circuits"}, {"score": 0.049584128839210984, "phrase": "synchronous_specifications"}, {"score": 0.004715908063787721, "phrase": "asynchronous_implementation_techniques"}, {"score": 0.004618893461411858, "phrase": "logic_delays"}, {"score": 0.00422826362023938, "phrase": "worst_case_delays"}, {"score": 0.004184526032558792, "phrase": "design_time"}, {"score": 0.004098397888277889, "phrase": "clock_cycle"}, {"score": 0.003972504904621217, "phrase": "new_paradigm"}, {"score": 0.003712796038920873, "phrase": "widespread_adoption"}, {"score": 0.0036174746598098863, "phrase": "special_design_skills"}, {"score": 0.0034700069041302003, "phrase": "different_protocols"}, {"score": 0.0031762308449055305, "phrase": "distributed_deployment"}, {"score": 0.003143341238802547, "phrase": "synchronous_language_specifications"}, {"score": 0.0030625949549620475, "phrase": "existing_protocols"}, {"score": 0.0030308784612749647, "phrase": "asynchronous_latch_controllers"}, {"score": 0.0029072537537959374, "phrase": "four-phase_handshake_protocols"}, {"score": 0.0027169974137406148, "phrase": "new_controller"}, {"score": 0.002674885993329912, "phrase": "provably_maximal_concurrency"}, {"score": 0.0025524176761139413, "phrase": "desynchronized_circuits"}, {"score": 0.002461044825190643, "phrase": "original_synchronous"}, {"score": 0.0022760856906838814, "phrase": "proposed_approach"}, {"score": 0.0021831803612759855, "phrase": "real_designs"}, {"score": 0.0021381565332182773, "phrase": "complete_implementation"}, {"score": 0.0021049977753042253, "phrase": "dlx_microprocessor_architecture"}], "paper_keywords": ["asynchronous circuits", " concurrent systems", " desynchronization", " electronic design automation", " handshake protocols", " synthesis"], "paper_abstract": "Asynchronous implementation techniques, which measure logic delays at runtime and activate registers accordingly, are inherently more robust than their synchronous counterparts, which estimate worst case delays at design time and constrain the clock cycle accordingly. Desynchronization is a new paradigm to automate the design of asynchronous circuits from synchronous specifications, thus, permitting widespread adoption of asynchronicity without requiring special design skills or tools. In this paper, different protocols for desynchronization are first studied, and their correctness is formally proven using techniques originally developed for distributed deployment of synchronous language specifications. A taxonomy of existing protocols for asynchronous latch controllers, covering, in particular, the four-phase handshake protocols devised in the literature for micropipelines, is also provided. A new controller that exhibits provably maximal concurrency is then proposed, and the performance of desynchronized circuits is analyzed with respect to the original synchronous optimized implementation. Finally, this paper proves the feasibility and effectiveness of the proposed approach by showing its application to a set of real designs, including a complete implementation of the DLX microprocessor architecture.", "paper_title": "Desynchronization: Synthesis of asynchronous circuits from synchronous specifications", "paper_id": "WOS:000240926700002"}