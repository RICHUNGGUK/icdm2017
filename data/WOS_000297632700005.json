{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "monad_stack"}, {"score": 0.012835478062953442, "phrase": "monad_zipper"}, {"score": 0.011552359762376436, "phrase": "monad_views"}, {"score": 0.004671156704912419, "phrase": "monadic_components"}, {"score": 0.0038352452380298464, "phrase": "higher-order_monad_transformer"}, {"score": 0.003748937184382714, "phrase": "virtual_monad_stacks"}, {"score": 0.0036645642553325215, "phrase": "particular_layers"}, {"score": 0.0035820833812158035, "phrase": "concrete_stack"}, {"score": 0.003448705829033573, "phrase": "general_framework"}, {"score": 0.0033967510986397946, "phrase": "monad_stack_virtualization"}, {"score": 0.0030542703032534766, "phrase": "wide_range"}, {"score": 0.002896167001212006, "phrase": "particular_views"}, {"score": 0.0028525124381208705, "phrase": "restricted_access"}, {"score": 0.002564763827975352, "phrase": "call-by-reference-like_mechanism"}, {"score": 0.0023235629819760018, "phrase": "monadic_effects"}, {"score": 0.0021049977753042253, "phrase": "concrete_monad_stack"}], "paper_keywords": ["Design", " Languages", " Components with Side Effects", " Modularity", " Monad Transformers", " Zipper"], "paper_abstract": "We make monadic components more reusable and robust to changes by employing two new techniques for virtualizing the monad stack: the monad zipper and monad views. The monad zipper is a higher-order monad transformer that creates virtual monad stacks by ignoring particular layers in a concrete stack. Monad views provide a general framework for monad stack virtualization: they take the monad zipper one step further and integrate it with a wide range of other virtualizations. For instance, particular views allow restricted access to monads in the stack. Furthermore, monad views provide components with a call-by-reference-like mechanism for accessing particular layers of the monad stack. With our two new mechanisms, the monadic effects required by components no longer need to be literally reflected in the concrete monad stack. This makes these components more reusable and robust to changes.", "paper_title": "Monads, Zippers and Views Virtualizing the Monad Stack", "paper_id": "WOS:000297632700005"}