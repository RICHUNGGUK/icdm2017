{"auto_keywords": [{"score": 0.04118782375185734, "phrase": "xml_data"}, {"score": 0.00481495049065317, "phrase": "xml_query_processing"}, {"score": 0.0045820747375409435, "phrase": "data_collections"}, {"score": 0.00443308765153716, "phrase": "effective_way"}, {"score": 0.004265354774450696, "phrase": "database_system"}, {"score": 0.004126623209579942, "phrase": "relational_data"}, {"score": 0.003992385826251404, "phrase": "unique_characteristics"}, {"score": 0.0038838500580958744, "phrase": "query_model"}, {"score": 0.003778253716938922, "phrase": "different_distribution_techniques"}, {"score": 0.0031845067058084583, "phrase": "distributed_query_processing"}, {"score": 0.0030808211830129304, "phrase": "namely_localization"}, {"score": 0.0029641011108505785, "phrase": "fragmentation-unaware_query_plan"}, {"score": 0.0028675712105299496, "phrase": "distributed_query_plan"}, {"score": 0.002713604305939145, "phrase": "xml_data_fragments"}, {"score": 0.002669042572650594, "phrase": "distributed_system"}, {"score": 0.0025678829712650437, "phrase": "resulting_distributed_query_plan"}, {"score": 0.0023507916951658455, "phrase": "query_result"}, {"score": 0.0022122603123901114, "phrase": "real-life_xml_database_system"}, {"score": 0.0021049977753042253, "phrase": "distributed_query_execution"}], "paper_keywords": ["Distributed", " XML", " Localization", " Pruning"], "paper_abstract": "Distributing data collections by fragmenting them is an effective way of improving the scalability of a database system. While the distribution of relational data is well understood, the unique characteristics of the XML data and query model present challenges that require different distribution techniques. In this paper, we show how XML data can be fragmented horizontally and vertically. Based on this, we propose solutions to two of the problems encountered in distributed query processing and optimization on XML data, namely localization and pruning. Localization takes a fragmentation-unaware query plan and converts it to a distributed query plan that can be executed at the sites that hold XML data fragments in a distributed system. We then show how the resulting distributed query plan can be pruned so that only those sites are accessed that can contribute to the query result. We demonstrate that our techniques can be integrated into a real-life XML database system and that they significantly improve the performance of distributed query execution.", "paper_title": "Scaling XML query processing: distribution, localization and pruning", "paper_id": "WOS:000293757400004"}