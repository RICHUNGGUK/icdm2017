{"auto_keywords": [{"score": 0.04196815273226382, "phrase": "timing_failure"}, {"score": 0.04095310106756124, "phrase": "software_design"}, {"score": 0.024980496026097854, "phrase": "tpn_bound_techniques"}, {"score": 0.00481495049065317, "phrase": "uml_design"}, {"score": 0.00475413908468027, "phrase": "time_petri"}, {"score": 0.004694092086199672, "phrase": "bound_techniques"}, {"score": 0.004634799977448855, "phrase": "software_systems"}, {"score": 0.004159997145421619, "phrase": "comprehensive_method"}, {"score": 0.0037336520904376687, "phrase": "best_practises"}, {"score": 0.0036864465771943933, "phrase": "software_engineering"}, {"score": 0.0036046336325252044, "phrase": "time"}, {"score": 0.0030847461428168614, "phrase": "case_study"}, {"score": 0.002988101395789399, "phrase": "real-time_embedded_systems"}, {"score": 0.0028761045789798103, "phrase": "australian_standard_risk_management_process"}, {"score": 0.0028037753646260937, "phrase": "system_context"}, {"score": 0.002750721367040336, "phrase": "uml-based_software_specification"}, {"score": 0.0026815368507715, "phrase": "standard_marte_profile_annotations"}, {"score": 0.0026307897899760383, "phrase": "nonfunctional_system_properties"}, {"score": 0.0025646139644088803, "phrase": "risk_analysis"}, {"score": 0.0024372021710656585, "phrase": "model_transformation"}, {"score": 0.0023758843175179702, "phrase": "software_design_specification"}, {"score": 0.0021049977753042253, "phrase": "risk_evaluation"}], "paper_keywords": ["MARTE profile", " risk assessment", " time Petri net (TPN) bound techniques", " unified modeling language (UML)"], "paper_abstract": "Software systems that do not meet their timing constraints can cause risks. In this work, we propose a comprehensive method for assessing the risk of timing failure by evaluating the software design. We show how to apply best practises in software engineering and well-known Time Petri Net (TPN) modeling and analysis techniques, and we demonstrate the effectiveness of the method with reference to a case study in the domain of real-time embedded systems. The method customizes the Australian standard risk management process, where the system context is the UML-based software specification, enriched with standard MARTE profile annotations to capture nonfunctional system properties. During the risk analysis, a TPN is derived, via model transformation, from the software design specification and TPN bound techniques are applied to estimate the probability of timing failure. TPN bound techniques are also exploited, within the risk evaluation and treatment steps, to identify the risk causes in the software design.", "paper_title": "Timing-Failure Risk Assessment of UML Design Using Time Petri Net Bound Techniques", "paper_id": "WOS:000287087000008"}