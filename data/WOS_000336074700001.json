{"auto_keywords": [{"score": 0.05006805598880613, "phrase": "particle_swarm_optimization"}, {"score": 0.042103928452180035, "phrase": "rankpso"}, {"score": 0.034348842641913305, "phrase": "pca"}, {"score": 0.004712463245074863, "phrase": "central_issues"}, {"score": 0.004674139115239771, "phrase": "learning"}, {"score": 0.004533427352547707, "phrase": "information_retrieval"}, {"score": 0.004379977556546879, "phrase": "ranking_models"}, {"score": 0.004305203085016233, "phrase": "common_evaluation_measures"}, {"score": 0.004250065562414429, "phrase": "ir."}, {"score": 0.004106063237069123, "phrase": "new_learning-to-rank_method"}, {"score": 0.003816197777388722, "phrase": "particle_swarm"}, {"score": 0.0036395944934310524, "phrase": "ranking_function"}, {"score": 0.0035620354052144656, "phrase": "evaluation_measure"}, {"score": 0.0035162927451540065, "phrase": "training_data"}, {"score": 0.003426556090707852, "phrase": "diversification_strategy"}, {"score": 0.0033680032592969633, "phrase": "early_convergence"}, {"score": 0.0033391018638565715, "phrase": "local_minima"}, {"score": 0.0032820385246266773, "phrase": "principal_components_analysis"}, {"score": 0.0031982609080278643, "phrase": "analysis_methods"}, {"score": 0.003157174936641705, "phrase": "data_dimension"}, {"score": 0.003130077012135034, "phrase": "extensive_experiments"}, {"score": 0.00307657476125683, "phrase": "proposed_algorithm"}, {"score": 0.0030501665085457606, "phrase": "state-of-the-art_ranking_algorithms"}, {"score": 0.002822434555587263, "phrase": "significant_improvement"}, {"score": 0.002622947550220266, "phrase": "tested_datasets"}, {"score": 0.002566997205079849, "phrase": "better_precision_stability"}, {"score": 0.0024906610581090223, "phrase": "evaluation_measures"}, {"score": 0.002427035025924384, "phrase": "computational_efficiency"}, {"score": 0.0023958326775913165, "phrase": "ranicpso_method"}, {"score": 0.0022848490808146946, "phrase": "pso"}, {"score": 0.002255431275670053, "phrase": "bio-inspired_algorithm"}, {"score": 0.0021643115268252995, "phrase": "cluster"}, {"score": 0.0021049977753042253, "phrase": "data_dimensionality"}], "paper_keywords": ["Information retrieval", " learning to rank", " particle swarm optimization", " cluster", " principal components analysis", " ranking functions", " learning algorithms"], "paper_abstract": "One of the central issues in Learning to Rank (L2R) for Information Retrieval is the development of algorithms that construct ranking models by directly optimizing common evaluation measures used in IR. In this article, we propose a new learning-to-rank method, referred to as RankPSO, based on particle swarm optimization (PSO). Our algorithm implements a particle swarm that works as a unit, managing to construct a ranking function that directly optimizes an evaluation measure according to training data. It also applies a diversification strategy to avoid an early convergence in local minima. We used Principal Components Analysis (PCA) and cluster analysis methods to reduce data dimension. Extensive experiments show that the proposed algorithm outperforms state-of-the-art ranking algorithms on several benchmark datasets. The obtained results were analyzed statistically and showing that RankPSO presents a significant improvement in precision on other state-of-the-art methods; for most of the tested datasets, it also presents better precision stability regarding the methods that directly optimize evaluation measures. In addition, the computational efficiency of the RanIcPSO method was evaluated. The results show the advantages of using PSO as a bio-inspired algorithm for L2R and the advantages of combining PCA and Cluster as a method for reducing data dimensionality.", "paper_title": "RankPSO: A New L2R algorithm Based on Particle Swarm Optimization", "paper_id": "WOS:000336074700001"}