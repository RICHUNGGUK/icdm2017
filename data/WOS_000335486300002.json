{"auto_keywords": [{"score": 0.04677218786890629, "phrase": "knowledge-based_approaches"}, {"score": 0.015290995061305301, "phrase": "software_documents"}, {"score": 0.009808216995596912, "phrase": "software_documentation"}, {"score": 0.004653220443592979, "phrase": "core_artifacts"}, {"score": 0.004581505405526037, "phrase": "documentation_activity"}, {"score": 0.004539005582217309, "phrase": "software_lifecycle"}, {"score": 0.004400153852462583, "phrase": "software_development"}, {"score": 0.004305481798183612, "phrase": "software_engineering_community"}, {"score": 0.004265531504874966, "phrase": "comprehensive_understanding"}, {"score": 0.004122179528285764, "phrase": "software_architecture_design"}, {"score": 0.0036288825833675127, "phrase": "systematic_literature_review_method"}, {"score": 0.003584025547693836, "phrase": "primary_studies"}, {"score": 0.0034851070574149993, "phrase": "pre-defined_review_protocol"}, {"score": 0.0034420211080526094, "phrase": "sixty_studies"}, {"score": 0.003367894141916481, "phrase": "twelve_quality_attributes"}, {"score": 0.0032953582866530966, "phrase": "nine_benefit_categories"}, {"score": 0.0031944286166257466, "phrase": "architecture_understanding"}, {"score": 0.00316475494774005, "phrase": "top_benefit"}, {"score": 0.0030017207229983385, "phrase": "major_concern"}, {"score": 0.002777055546998579, "phrase": "current_research"}, {"score": 0.002633941112839883, "phrase": "quality_attributes"}, {"score": 0.002577171858769087, "phrase": "especially_credibility"}, {"score": 0.0024672686023811574, "phrase": "knowledge_content"}, {"score": 0.002414082940963702, "phrase": "current_applications"}, {"score": 0.0023183255207530193, "phrase": "software_documentation_activity"}], "paper_keywords": ["Knowledge-based approach", " Software documentation", " Systematic literature review", " Knowledge activity", " Software architecture design"], "paper_abstract": "Context: Software documents are core artifacts produced and consumed in documentation activity in the software lifecycle. Meanwhile, knowledge-based approaches have been extensively used in software development for decades, however, the software engineering community lacks a comprehensive understanding on how knowledge-based approaches are used in software documentation, especially documentation of software architecture design. Objective: The objective of this work is to explore how knowledge-based approaches are employed in software documentation, their influences to the quality of software documentation, and the costs and benefits of using these approaches. Method: We use a systematic literature review method to identify the primary studies on knowledge-based approaches in software documentation, following a pre-defined review protocol. Results: Sixty studies are finally selected, in which twelve quality attributes of software documents, four cost categories, and nine benefit categories of using knowledge-based approaches in software documentation are identified. Architecture understanding is the top benefit of using knowledge-based approaches in software documentation. The cost of retrieving information from documents is the major concern when using knowledge-based approaches in software documentation. Conclusions: The findings of this review suggest several future research directions that are critical and promising but underexplored in current research and practice: (1) there is a need to use knowledge-based approaches to improve the quality attributes of software documents that receive less attention, especially credibility, conciseness, and unambiguity; (2) using knowledge-based approaches with the knowledge content in software documents which gets less attention in current applications of knowledge-based approaches in software documentation, to further improve the practice of software documentation activity; (3) putting more focus on the application of software documents using the knowledge-based approaches (knowledge reuse, retrieval, reasoning, and sharing) in order to make the most use of software documents; and (4) evaluating the costs and benefits of using knowledge-based approaches in software documentation qualitatively and quantitatively. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Knowledge-based approaches in software documentation: A systematic literature review", "paper_id": "WOS:000335486300002"}