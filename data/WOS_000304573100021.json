{"auto_keywords": [{"score": 0.033281015443432385, "phrase": "multi-valued_bounded_model_checking"}, {"score": 0.00481495049065317, "phrase": "efficient_multi-valued"}, {"score": 0.004684248350753999, "phrase": "ltl"}, {"score": 0.0046328364646343375, "phrase": "quasi-boolean_algebras"}, {"score": 0.004241914481080374, "phrase": "multi-valued_logic"}, {"score": 0.004172360444377281, "phrase": "quasi-boolean_logic"}, {"score": 0.004103942174451674, "phrase": "added_expressivity"}, {"score": 0.003841263262252044, "phrase": "target_systems"}, {"score": 0.003575566975064381, "phrase": "chechik"}, {"score": 0.003478321590910367, "phrase": "efficient_reduction"}, {"score": 0.003440166097491567, "phrase": "multi-valued_model"}, {"score": 0.0033651019362620866, "phrase": "two-valued_ones"}, {"score": 0.00327356326590461, "phrase": "authors'_knowledge"}, {"score": 0.002539689093411356, "phrase": "single_formula"}, {"score": 0.0024569466759289055, "phrase": "suitable_encoding"}, {"score": 0.0023900527169254744, "phrase": "standard_sat_solver"}, {"score": 0.002286781334850213, "phrase": "significant_improvement"}, {"score": 0.0021520139248317333, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "reduction-based_one"}], "paper_keywords": ["multi-valued model checking", " bounded model checking", " quasi-boolean logic"], "paper_abstract": "Multi-valued Model Checking extends classical, two-valued model checking to multi-valued logic such as Quasi-Boolean logic. The added expressivity is useful in dealing with such concepts as incompleteness and uncertainty in target systems, while it comes with the cost of time and space. Chechik and others proposed an efficient reduction from multi-valued model checking problems to two-valued ones, but to the authors' knowledge, no study was done for multi-valued bounded model checking. In this paper, we propose a novel, efficient algorithm for multi-valued bounded model checking. A notable feature of our algorithm is that it is not based on reduction of multi-values into two-values; instead, it generates a single formula which represents multi-valuedness by a suitable encoding, and asks a standard SAT solver to check its satisfiability. Our experimental results show a significant improvement in the number of variables and clauses and also in execution time compared with the reduction-based one.", "paper_title": "Efficient Multi-Valued Bounded Model Checking for LTL over Quasi-Boolean Algebras", "paper_id": "WOS:000304573100021"}