{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "malleable_tasks"}, {"score": 0.041785145698431454, "phrase": "processing_time"}, {"score": 0.012856448961934422, "phrase": "malleable_task"}, {"score": 0.010758664667477854, "phrase": "proposed_algorithm"}, {"score": 0.009127870950291826, "phrase": "approximation_ratio"}, {"score": 0.004769702911065878, "phrase": "precedence_constraints"}, {"score": 0.004658426838467567, "phrase": "general_precedence_constraints"}, {"score": 0.004571269461883144, "phrase": "minimum_makespan"}, {"score": 0.004401794742140806, "phrase": "feasible_allotment"}, {"score": 0.004299064805926241, "phrase": "monotonous_penalty_assumptions"}, {"score": 0.004258644418211771, "phrase": "blayo_et_al"}, {"score": 0.003475582268210954, "phrase": "work_function"}, {"score": 0.0032376465741070274, "phrase": "linear_program"}, {"score": 0.0030881143614111552, "phrase": "associated_proofs"}, {"score": 0.0028766278519176355, "phrase": "novel_polynomial-time_approximation_algorithm"}, {"score": 0.0022706045233150795, "phrase": "previous_best_approximation_ratio"}], "paper_keywords": ["Approximation algorithms", " scheduling", " malleable tasks", " precedence constraints"], "paper_abstract": "Scheduling malleable tasks under general precedence constraints involves finding a minimum makespan (maximum completion time) by a feasible allotment. Based on the monotonous penalty assumptions of Blayo et al. [2], this work defines two assumptions concerning malleable tasks: the processing time of a malleable task is nonincreasing in the number of processors, while the work of a malleable task is nondecreasing in the number of processors. Additionally, the work function is assumed herein to be convex in the processing time. The proposed algorithm reformulates the linear program of [11], and this algorithm and associated proofs are inspired by the ones of [11]. This work describes a novel polynomial-time approximation algorithm that is capable of achieving an approximation ratio of 2 + root 2 approximate to 3.4142. This work further demonstrates that the proposed algorithm can yield an approximation ratio of 2.9549 when the processing time is strictly decreasing in the number of the processors allocated to the task. This finding represents an improvement upon the previous best approximation ratio of 100/63 + 100(root 6469 + 137)/5481 approximate to 3.2920 [12] achieved under the same assumptions.", "paper_title": "A 3.42-Approximation Algorithm for Scheduling Malleable Tasks under Precedence Constraints", "paper_id": "WOS:000321153600001"}