{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "web_service_composition"}, {"score": 0.013197695825483259, "phrase": "new_composite_web_service"}, {"score": 0.004665483918844599, "phrase": "low_cost"}, {"score": 0.0046069985410261746, "phrase": "efficient_way"}, {"score": 0.0044922081848067135, "phrase": "existing_resource"}, {"score": 0.0043527164193299574, "phrase": "current_web_service_composition_implementations"}, {"score": 0.0038365781437074017, "phrase": "access_control_policy"}, {"score": 0.003693973656103879, "phrase": "substantial_administration"}, {"score": 0.0036018503805251424, "phrase": "security_administrator"}, {"score": 0.0034899090274046014, "phrase": "distributed_nature"}, {"score": 0.0034461093496505127, "phrase": "web_service_based_applications"}, {"score": 0.0034028574973016933, "phrase": "traditional_role_mining_methods"}, {"score": 0.003194580334752371, "phrase": "minimal_role_mining_problem"}, {"score": 0.0029996240860692487, "phrase": "np"}, {"score": 0.0028692628457408025, "phrase": "sub-optimal_greedy_algorithm"}, {"score": 0.0027625134766418266, "phrase": "necessary_role_mapping"}, {"score": 0.0026935568995690947, "phrase": "multiple_domains"}, {"score": 0.002481085648977411, "phrase": "existing_methods"}, {"score": 0.002419136901298873, "phrase": "significant_performance_advantages"}, {"score": 0.0023290951071300433, "phrase": "practical_application"}, {"score": 0.002256619934086924, "phrase": "real_agent"}, {"score": 0.0022423971916457684, "phrase": "based_web_service_system"}, {"score": 0.0021049977753042253, "phrase": "minimal_role"}], "paper_keywords": ["Web service composition", " Role base access control (RBAC)", " Role mining", " Access control policy", " Role mapping", " Web service security"], "paper_abstract": "Web service composition is a low cost and efficient way to leverage the existing resource and implementation. In current Web service composition implementations, the issue of how to define the role for a new composite Web service has been little addressed. Adjusting the access control policy for a new composite Web service always causes substantial administration overhead from the security administrator. Furthermore, the distributed nature of Web service based applications makes traditional role mining methods obsolete. In this paper, we analyze the minimal role mining problem for Web service composition, and prove that this problem is NP-complete. We propose a sub-optimal greedy algorithm based on the analysis of necessary role mapping for interoperation across multiple domains. Simulation shows the effectiveness of our algorithm, and compared to the existing methods, our algorithm has significant performance advantages. We also demonstrate the practical application of our method in a real agent based Web service system. The results show that our method could find the minimal role mapping efficiently.", "paper_title": "Minimal role mining method for Web service composition", "paper_id": "WOS:000277763000002"}