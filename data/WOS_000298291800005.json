{"auto_keywords": [{"score": 0.047869525215773305, "phrase": "bag_semantics"}, {"score": 0.011802855826346133, "phrase": "tree_pattern_queries"}, {"score": 0.011262205107414058, "phrase": "bag_equivalence"}, {"score": 0.00481495049065317, "phrase": "tree_patterns"}, {"score": 0.003986103192038901, "phrase": "aggregation_functions"}, {"score": 0.00387011040370557, "phrase": "query_results"}, {"score": 0.003378385493203297, "phrase": "large_class"}, {"score": 0.002455009746748708, "phrase": "equivalence_characterizations"}, {"score": 0.0023003498123420237, "phrase": "descendant_axis"}, {"score": 0.002259883463607508, "phrase": "recursive_relationship"}, {"score": 0.0021049977753042253, "phrase": "recursive_queries"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Bag semantics", " query equivalence", " tree patterns", " XPath"], "paper_abstract": "When a query is evaluated under bag semantics, each answer is returned as many times as it has derivations. Bag semantics has long been recognized as important, especially when aggregation functions will be applied to query results. This article is the first to focus on bag semantics for tree pattern queries. In particular, the problem of bag equivalence of a large class of tree pattern queries (which can be used to model XPath) is explored. The queries can contain unions, branching, label wildcards, the vertical child and descendant axes, the horizontal following and following-sibling axes, as well as positional (i.e., first and last) axes. Equivalence characterizations are provided, and their complexity is analyzed. As the descendant axis involves a recursive relationship, this article is also the first to address bag equivalence over recursive queries, in any setting.", "paper_title": "Bag Equivalence of Tree Patterns", "paper_id": "WOS:000298291800005"}