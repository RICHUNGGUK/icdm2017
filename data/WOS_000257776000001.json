{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sml-sys"}, {"score": 0.004624751696958501, "phrase": "multiple_models"}, {"score": 0.004471978831302331, "phrase": "heterogeneous_system"}, {"score": 0.0040978781692373005, "phrase": "high-level_modeling"}, {"score": 0.0035344448639851827, "phrase": "modeling_constructs"}, {"score": 0.0033268412940032103, "phrase": "ptolemy_ii"}, {"score": 0.003282383509542342, "phrase": "systemc-h"}, {"score": 0.003238517900104576, "phrase": "multi-moc_modeling"}, {"score": 0.003131393466870228, "phrase": "imperative_programming_languages"}, {"score": 0.0030484113354930682, "phrase": "java"}, {"score": 0.002869115451202179, "phrase": "computation_and_communication_aspects"}, {"score": 0.002646501671714952, "phrase": "formal_analysis"}, {"score": 0.002507748938616919, "phrase": "function-based_semantic_definitions"}, {"score": 0.00247421017746772, "phrase": "mocs"}, {"score": 0.0023603078194781965, "phrase": "functional_framework"}, {"score": 0.0021479597698614355, "phrase": "system_models"}, {"score": 0.0021049977753042253, "phrase": "functional_programming_paradigm"}], "paper_keywords": ["functional programming", " model of computation", " heterogeneity", " modeling fidelity", " modeling expressiveness"], "paper_abstract": "System-on-Chip and other complex distributed hardware/software systems contain heterogeneous components. High-level modeling of such systems require frameworks that provide designers with the ability to express concepts of models of computation (MoC)s as modeling constructs. Many system-level modeling frameworks and corresponding modeling notations such as Ptolemy II and SystemC-H facilitate multi-MoC modeling but are based on imperative programming languages (C++, Java, etc). In such frameworks, the computation and communication aspects between the components of models get intertwined thereby hindering its amenability to formal analysis. In this work, we illustrate function-based semantic definitions of MoCs, which are formulated in a functional framework called SML-Sys. We illustrate through a number of examples how to create system models using this functional programming paradigm.", "paper_title": "SML-Sys: a functional framework with multiple models of computation for modeling heterogeneous system", "paper_id": "WOS:000257776000001"}