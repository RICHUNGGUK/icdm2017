{"auto_keywords": [{"score": 0.03855300246495418, "phrase": "typed_processes"}, {"score": 0.011389473358378087, "phrase": "k"}, {"score": 0.00481495049065317, "phrase": "deadlock-free_session_typed_processes"}, {"score": 0.0047268728636719725, "phrase": "prescribed_protocols"}, {"score": 0.0046834372388970405, "phrase": "communication-centric_systems"}, {"score": 0.004390312150344245, "phrase": "liveness_properties"}, {"score": 0.004058826900076531, "phrase": "mobile_processes"}, {"score": 0.003822263046602146, "phrase": "precise_relationship"}, {"score": 0.003312121699003206, "phrase": "concurrent_processes"}, {"score": 0.0032665093519968083, "phrase": "class_l"}, {"score": 0.00309023627455429, "phrase": "linear_logic_propositions"}, {"score": 0.0030617935728586006, "phrase": "session_types"}, {"score": 0.0030196181347744372, "phrase": "class_k"}, {"score": 0.0029642838574678526, "phrase": "encoding_session_types"}, {"score": 0.002936997013291548, "phrase": "kobayashi's_usage_types"}, {"score": 0.00271571499100692, "phrase": "k."}, {"score": 0.002652878591019016, "phrase": "precise_condition"}, {"score": 0.0024636239664210433, "phrase": "parallel_processes"}, {"score": 0.002429668083484833, "phrase": "new_expressiveness_hierarchy"}, {"score": 0.002215048633397192, "phrase": "l."}, {"score": 0.0021049977753042253, "phrase": "rather_subtle_criteria"}], "paper_keywords": [""], "paper_abstract": "Besides respecting prescribed protocols, communication-centric systems should never \"get stuck\". This requirement has been expressed by liveness properties such as progress or (dead) lock freedom. Several typing disciplines that ensure these properties for mobile processes have been proposed. Unfortunately, very little is known about the precise relationship between these disciplines-and the classes of typed processes they induce. In this paper, we compare L and K, two classes of deadlock-free, session typed concurrent processes. The class L stands out for its canonicity: it results naturally from interpretations of linear logic propositions as session types. The class K, obtained by encoding session types into Kobayashi's usage types, includes processes not typable in other type systems. We show that L is strictly included in K. We also identify the precise condition under which L and K coincide. One key observation is that the degree of sharing between parallel processes determines a new expressiveness hierarchy for typed processes. We also provide a type-preserving rewriting procedure of processes in K into processes in L. This procedure suggests that, while effective, the degree of sharing is a rather subtle criteria for distinguishing typed processes.", "paper_title": "Comparing Deadlock-Free Session Typed Processes", "paper_id": "WOS:000367340100002"}