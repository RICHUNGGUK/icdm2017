{"auto_keywords": [{"score": 0.034182875683624124, "phrase": "multi-chip_implementation"}, {"score": 0.00481495049065317, "phrase": "multi-chip_centralized_schedulers"}, {"score": 0.004762202897268383, "phrase": "input_queued"}, {"score": 0.004684157900507474, "phrase": "iq_switches"}, {"score": 0.0045820747375409435, "phrase": "input_ports"}, {"score": 0.004482206282876944, "phrase": "memory_speedup"}, {"score": 0.004408729661992651, "phrase": "oq_switches"}, {"score": 0.004312622975366672, "phrase": "packet_schedulers"}, {"score": 0.0039053194919285725, "phrase": "output_ports"}, {"score": 0.0036958398682001015, "phrase": "scheduler_implementation"}, {"score": 0.0034975571855450373, "phrase": "multi-chip_scheduler_implementation"}, {"score": 0.0033651019362620866, "phrase": "hardware_scheduler_complexity"}, {"score": 0.0031669873302916, "phrase": "non-negligible_delay"}, {"score": 0.003132236287543072, "phrase": "input_and_output_selectors"}, {"score": 0.002996992362027833, "phrase": "time_slot"}, {"score": 0.0028675712105299496, "phrase": "inter-chip_latency"}, {"score": 0.002789528662623221, "phrase": "traditional_scheduling_algorithms"}, {"score": 0.0026543514413663893, "phrase": "information_exchange"}, {"score": 0.0025537472239953807, "phrase": "negligible_delay"}, {"score": 0.0024842242921857705, "phrase": "novel_multicast_scheduler"}, {"score": 0.0024434201175883674, "phrase": "imirr"}, {"score": 0.002363806685815014, "phrase": "previously_proposed_multicast_scheduling_algorithm"}, {"score": 0.002337848196418384, "phrase": "mrrm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multicast", " IQ switches", " Multi-chip implementation"], "paper_abstract": "IQ switches store packets at input ports to avoid the memory speedup required by OQ switches. However, packet schedulers are needed to determine an I/O (input/output) interconnection pattern that avoids conflicts among packets at output ports. Today, centralized, single-chip, scheduler implementation are largely dominant. in the near future, the multi-chip scheduler implementation will be needed to reduce the hardware scheduler complexity in very large, high-speed, switches. However, the multi-chip implementation implies introducing a non-negligible delay among input and output selectors used to determine the I/O interconnection pattern at each time slot. This delay, mainly due to inter-chip latency, requires modifications to traditional scheduling algorithms. which normally rely on the hypothesis that information exchange among selectors can be performed with negligible delay. We propose a novel multicast scheduler, named IMIRR, an extension of a previously proposed multicast scheduling algorithm named mRRM, making it suitable to a multi-chip implementation, and examine its performance by simulation. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Multicast support in multi-chip centralized schedulers in Input Queued switches", "paper_id": "WOS:000265316600011"}