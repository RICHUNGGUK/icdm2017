{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "deep_and_shallow_embedding"}, {"score": 0.046106503701524776, "phrase": "embedded_languages"}, {"score": 0.008669415954985786, "phrase": "embedded_language"}, {"score": 0.00476323161560059, "phrase": "domain-specific_languages"}, {"score": 0.003964007795174772, "phrase": "abstract_syntax_tree"}, {"score": 0.0037554497046697432, "phrase": "deep_embedding"}, {"score": 0.0036553070575015344, "phrase": "rather_cumbersome_technique"}, {"score": 0.0033163269450817716, "phrase": "shallow_embeddings"}, {"score": 0.0032806521851034766, "phrase": "language_constructs"}, {"score": 0.0025167026017217926, "phrase": "unexpected_but_welcome_secondary_effects"}, {"score": 0.0023970487263732737, "phrase": "intermediate_results"}, {"score": 0.002333044307949414, "phrase": "additional_effort"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Domain specific languages", " Shallow embedding", " Deep embedding", " Fusion", " Monads"], "paper_abstract": "We present a technique to combine deep and shallow embedding in the context of compiling embedded languages in order to provide the benefits of both techniques. When compiling embedded languages it is natural to use an abstract syntax tree to represent programs. This is known as a deep embedding and it is a rather cumbersome technique compared to other forms of embedding, typically leading to more code and being harder to extend. In shallow embeddings, language constructs are mapped directly to their semantics which yields more flexible and succinct implementations. But shallow embeddings are not well-suited for compiling embedded languages. Our technique uses a combination of deep and shallow embedding, which helps keeping the deep embedding small and makes extending the embedded language much easier. The technique also has some unexpected but welcome secondary effects. It provides fusion of functions to remove intermediate results for free without any additional effort. It also helps us to give the embedded language a more natural programming interface. (C) 2015 Published by Elsevier Ltd.", "paper_title": "Combining deep and shallow embedding of domain-specific languages", "paper_id": "WOS:000366778500002"}