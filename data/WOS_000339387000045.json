{"auto_keywords": [{"score": 0.045517553922793025, "phrase": "network_coding"}, {"score": 0.041133586303589764, "phrase": "base_layer"}, {"score": 0.00481495049065317, "phrase": "scalable_video_multicast_networks"}, {"score": 0.004606023493393774, "phrase": "content-aware_prioritization"}, {"score": 0.004555217356295278, "phrase": "scalable_video_multicast"}, {"score": 0.004406121974246201, "phrase": "multipath_streaming"}, {"score": 0.004333406378146173, "phrase": "based_routing"}, {"score": 0.004238307626560739, "phrase": "multiple_layer_distribution"}, {"score": 0.004145287175409325, "phrase": "scalable_video_stream"}, {"score": 0.004054299982508618, "phrase": "total_video_distortion"}, {"score": 0.0038567860860362745, "phrase": "minimum_costs"}, {"score": 0.0037931018103829427, "phrase": "application-layer_qos"}, {"score": 0.003730465168354817, "phrase": "layer_synchronization"}, {"score": 0.0036892809673917592, "phrase": "svc_streaming"}, {"score": 0.003588291565092195, "phrase": "network_throughput"}, {"score": 0.0035290250358997904, "phrase": "path-overlapping_transmissions"}, {"score": 0.003451517638449501, "phrase": "bandwidth_sharing"}, {"score": 0.0034134024569847264, "phrase": "different_receivers"}, {"score": 0.0032470094613727433, "phrase": "targeted_problem"}, {"score": 0.003158088307044493, "phrase": "minimization_programming"}, {"score": 0.003088702479841264, "phrase": "quality_variation"}, {"score": 0.003004103583782076, "phrase": "transmission_cost"}, {"score": 0.002857605453835429, "phrase": "efficient_resource_utilization"}, {"score": 0.0027333769432036905, "phrase": "dual_approach"}, {"score": 0.0026881926384093088, "phrase": "global_convex_problem"}, {"score": 0.002614534850703364, "phrase": "two-level_decentralized_iterative_algorithm"}, {"score": 0.0025287979714720423, "phrase": "distributed_algorithm"}, {"score": 0.0024323098907299027, "phrase": "communication_overhead"}, {"score": 0.0023788319661581696, "phrase": "convergence_performance"}, {"score": 0.0023265270905455334, "phrase": "numerical_experiments"}, {"score": 0.00230080652063411, "phrase": "packet-level_simulations"}, {"score": 0.0022502133699402018, "phrase": "proposed_algorithm"}, {"score": 0.00218853009252455, "phrase": "maximum_flow_rates"}, {"score": 0.002152332983488664, "phrase": "max-flow_min-cut_theorem"}, {"score": 0.0021049977753042253, "phrase": "overall_received_video_quality"}], "paper_keywords": ["Scalable video coding", " Multicast", " Network coding", " Rate distortion", " Distributed algorithm"], "paper_abstract": "This paper aims to optimize the content-aware prioritization of scalable video multicast, which is coupled with multipath streaming and network coding based routing. It constructs multiple layer distribution meshes for the scalable video stream to minimize the total video distortion at all the receivers, determines the base layer meshes with minimum costs to maintain application-layer QoS and the layer synchronization of SVC streaming, and improves the network throughput by encouraging path-overlapping transmissions and thus allowing bandwidth sharing among different receivers for the same video layer by utilizing network coding. The targeted problem is formulated into a minimization programming in which the quality variation between layers, the transmission cost of the base layer, as well as the efficient resource utilization are jointly considered. By decomposition and dual approach, the global convex problem is solved by a two-level decentralized iterative algorithm. The implementation of the distributed algorithm is discussed with regard to the communication overhead, and the convergence performance is validated by numerical experiments. Packet-level simulations demonstrate that the proposed algorithm could approximately achieve the maximum flow rates determined by Max-Flow Min-Cut Theorem and benefit the overall received video quality.", "paper_title": "Content-aware optimization on rate-distortion and network traffic for scalable video multicast networks", "paper_id": "WOS:000339387000045"}