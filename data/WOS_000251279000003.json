{"auto_keywords": [{"score": 0.04885877600670675, "phrase": "hpc"}, {"score": 0.00481495049065317, "phrase": "genetic_programming-based_error_correction_procedure"}, {"score": 0.004726970265271088, "phrase": "high_performance_computing"}, {"score": 0.004423284899590467, "phrase": "hpc_systems"}, {"score": 0.004185108816866677, "phrase": "application_performance"}, {"score": 0.004093453936415085, "phrase": "hpc_centers"}, {"score": 0.003989046949801574, "phrase": "resource_requirements"}, {"score": 0.003844478919573134, "phrase": "application_performance_bottlenecks"}, {"score": 0.0037602557461171478, "phrase": "scalability_issues"}, {"score": 0.0036778708850237814, "phrase": "performance_model"}, {"score": 0.003597284507308585, "phrase": "particular_performance_investigation"}, {"score": 0.0034160263294684785, "phrase": "semi-empirical_model"}, {"score": 0.003316567137142017, "phrase": "astrophysics_application"}, {"score": 0.0032199943889464873, "phrase": "communication_cost"}, {"score": 0.003196292402522254, "phrase": "large_numbers"}, {"score": 0.0029576827451501956, "phrase": "communication_contention"}, {"score": 0.0027368368719283298, "phrase": "new_approach"}, {"score": 0.0026966744704447275, "phrase": "unknown_features"}, {"score": 0.0026570998719084153, "phrase": "predictive_capabilities"}, {"score": 0.002570162055835289, "phrase": "systematic_model_error-correction_procedure"}, {"score": 0.002495268931035983, "phrase": "error_correction_term"}, {"score": 0.0024586427394152196, "phrase": "existing_model"}, {"score": 0.0023346234464901978, "phrase": "better_results"}, {"score": 0.0023088708688076666, "phrase": "original_model"}, {"score": 0.0022918601312169676, "phrase": "successful_cross-platform_application"}, {"score": 0.0022168460543913787, "phrase": "machine_dependent_characteristics"}, {"score": 0.0021363670305843403, "phrase": "second_application"}], "paper_keywords": ["error correction procedure", " genetic programming", " performance modeling"], "paper_abstract": "Performance models of high performance computing (HPC) applications are important for several reasons. First, they provide insight to designers of HPC systems on the role of subsystems such as the processor or the network in determining application performance. Second, they allow HPC centers more accurately to target procurements to resource requirements. Third, they can be used to identify application performance bottlenecks and to provide insights about scalability issues. The suitability of a performance model, however, for a particular performance investigation is a function of both the accuracy and the cost of the model. A semi-empirical model previously published by the authors for an astrophysics application was shown to be inaccurate when predicting communication cost for large numbers of processors. It is hypothesized that this deficiency is due to the inability of the model adequately to capture communication contention (threshold effects) as well as other unmodeled components such as noise and 1/0 contention. In this paper we present a new approach to capture these unknown features to improve the predictive capabilities of the model. This approach uses a systematic model error-correction procedure that uses evolutionary algorithms to find an error correction term to augment the existing model. Four variations of this procedure were investigated and all were shown to produce better results than the original model. Successful cross-platform application of this approach showed that it adequately captures machine dependent characteristics. This approach was then successfully demonstrated for a second application, further showing its versatility.", "paper_title": "Parallel performance modeling using a genetic programming-based error correction procedure", "paper_id": "WOS:000251279000003"}