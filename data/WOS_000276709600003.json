{"auto_keywords": [{"score": 0.04158910772275424, "phrase": "cloned_code"}, {"score": 0.015719716506582538, "phrase": "function_clones"}, {"score": 0.015543532808173026, "phrase": "open_source_software"}, {"score": 0.004574247691703376, "phrase": "new_hybrid_clone_detection_tool"}, {"score": 0.004548253531664032, "phrase": "nicad"}, {"score": 0.004296264970612285, "phrase": "text-based_and_ast-based_clone_detection_techniques"}, {"score": 0.00401216440036853, "phrase": "highly_accurate_identification"}, {"score": 0.0039216854691927865, "phrase": "software_systems"}, {"score": 0.003725470458263889, "phrase": "in-depth_study"}, {"score": 0.0035390378585554547, "phrase": "nicad."}, {"score": 0.0034396067950483813, "phrase": "java"}, {"score": 0.0033048445033866795, "phrase": "entire_linux_kernel"}, {"score": 0.003267342521938321, "phrase": "apache_httpd"}, {"score": 0.002982203248352076, "phrase": "clone_size"}, {"score": 0.0029483516334882862, "phrase": "clone_similarity"}, {"score": 0.0029148831519944358, "phrase": "clone_location"}, {"score": 0.002881793492919646, "phrase": "clone_density"}, {"score": 0.0028006988338192375, "phrase": "cloned_functions"}, {"score": 0.0026452734009203764, "phrase": "detected_clones"}, {"score": 0.002585539416877115, "phrase": "complete_catalogue"}, {"score": 0.0025561788724870974, "phrase": "different_clones"}, {"score": 0.0025127604406208668, "phrase": "online_repository"}, {"score": 0.0024005409468262203, "phrase": "validated_results"}, {"score": 0.0023196699954340437, "phrase": "cloning_reference"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["near-miss function clones", " empirical study", " open source software"], "paper_abstract": "The new hybrid clone detection tool NICAD combines the strengths and overcomes the limitations of both text-based and AST-based clone detection techniques and exploits novel applications of a source transformation system to yield highly accurate identification of cloned code in software systems. In this paper, we present an in-depth study of near-miss function clones in open source software using NICAD. We examine more than 20 open source C, Java and C# systems, including the entire Linux Kernel, Apache httpd, J2SDK-Swing and db4o and compare their use of cloned code in several different dimensions, including language, clone size, clone similarity, clone location and clone density both by proportion of cloned functions and lines of cloned code. We manually verify all detected clones and provide a complete catalogue of different clones in an online repository in a variety of formats. These validated results can be used as a cloning reference for these systems and as a benchmark for evaluating other clone detection tools. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "Near-miss function clones in open source software: an empirical study", "paper_id": "WOS:000276709600003"}