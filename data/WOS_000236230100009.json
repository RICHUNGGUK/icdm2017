{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "petri"}, {"score": 0.005924800558367405, "phrase": "lecture_notes"}, {"score": 0.005886725673588451, "phrase": "computer_science"}, {"score": 0.005519104933323585, "phrase": "geometric_regions"}, {"score": 0.005075128714601338, "phrase": "tpn_state_space"}, {"score": 0.0041773934798743405, "phrase": "atomic_state_class_graph"}, {"score": 0.0038908817250961633, "phrase": "partition_refinement_technique"}, {"score": 0.003565875860873326, "phrase": "yoneda"}, {"score": 0.0035429043440226124, "phrase": "ryuba"}, {"score": 0.003520088977677509, "phrase": "ctl"}, {"score": 0.0032155369606336206, "phrase": "intermediate_abstraction"}, {"score": 0.0030732613046470314, "phrase": "ctv_properties"}, {"score": 0.0029754949467239887, "phrase": "ascg"}, {"score": 0.002927780883930371, "phrase": "first_way"}, {"score": 0.0028715299874549245, "phrase": "refinement_process"}, {"score": 0.002411383506019635, "phrase": "second_way"}, {"score": 0.002372693822379709, "phrase": "ascg_node"}, {"score": 0.0022096849931961247, "phrase": "experimental_results"}, {"score": 0.0021601997088758957, "phrase": "good_impact"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["time Petri nets", " state class spaces", " strong state class graph", " atomic state class graph", " CTL* properties", " model checking"], "paper_abstract": "This paper aims at applying the CTL*(1) model checking method to the time Petri net (TPN) model. We show here how to contract its generally infinite state space into a graph that captures all its CTL* properties. This graph, called atomic state class graph (ASCG), is finite if and only if, the model is bounded.(2) Our approach is based on a partition refinement technique, similarly to what is proposed in [Berthomieu, Vernadat, State class constructions for branching analysis of time Petri nets, Lecture Notes in Computer Science, vol. 2619, 2003; Yoneda, Ryuba, CTL model checking of time Petri nets using geometric regions, IEICE Trans. Inf. Syst. E99-D(3) (1998)]. In such a technique, an intermediate abstraction (contraction) of the TPN state space is first built, then refined until CTV properties are restored. Our approach improves the construction of the ASCG in two ways. The first way deals with speeding up the refinement process by using a much more compact intermediate contraction of the TPN state space than those used in [Berthomieu, Vernadat, State class constructions for branching analysis of time Petri nets, Lecture Notes in Computer Science, vol. 2619, 2003; Yoneda, Ryuba, CTL model checking of time Petri nets using geometric regions, IEICE Trans. Inf. Syst. E99-D(3) (1998)]. The second way deals with computing each ASCG node in O(n(2)) instead of O(n(3)), n being the number of transitions enabled at the node. Experimental results have shown that our improvements have a good impact on performances. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "CTL* model checking for time Petri nets", "paper_id": "WOS:000236230100009"}