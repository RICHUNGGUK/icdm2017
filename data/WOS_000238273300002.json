{"auto_keywords": [{"score": 0.04472882712454684, "phrase": "memory_usage"}, {"score": 0.00481495049065317, "phrase": "memory-minimizing_schedules"}, {"score": 0.004178935413340453, "phrase": "multifrontal_methods"}, {"score": 0.0038023102395179386, "phrase": "liu"}, {"score": 0.003626626504149897, "phrase": "new_schedules"}, {"score": 0.003073545175760353, "phrase": "memory-allocation_schedules"}, {"score": 0.0027961342030212353, "phrase": "specific_tree_traversal"}, {"score": 0.00266693888510356, "phrase": "optimal_algorithms"}, {"score": 0.002573965014439041, "phrase": "new_class"}, {"score": 0.002286781334850213, "phrase": "real-world_matrices"}, {"score": 0.002233301265743633, "phrase": "sparse_matrix_collections"}, {"score": 0.0021049977753042253, "phrase": "total_memory"}], "paper_keywords": ["algorithms", " performance", " Liu's algorithm", " memory", " multifrontal methods", " scheduling", " sparse matrices"], "paper_abstract": "We are interested in the memory usage of multifrontal methods. Starting from the algorithms introduced by Liu, we propose new schedules to allocate and process tasks that improve memory usage. This generalizes two existing factorization and memory-allocation schedules by allowing a more flexible task allocation together with a specific tree traversal. We present optimal algorithms for this new class of schedules, and demonstrate experimentally their benefit for some real-world matrices from sparse matrix collections where either the active memory or the total memory is minimized.", "paper_title": "Constructing memory-minimizing schedules for multifrontal methods", "paper_id": "WOS:000238273300002"}