{"auto_keywords": [{"score": 0.015469842941326471, "phrase": "commodity_hardware"}, {"score": 0.00481495049065317, "phrase": "efficient_shellcode_detection"}, {"score": 0.003806541299696042, "phrase": "program's_execution"}, {"score": 0.00374531366198605, "phrase": "previous_solutions"}, {"score": 0.003370565320453525, "phrase": "static_analysis"}, {"score": 0.003158776195052182, "phrase": "obfuscation_techniques"}, {"score": 0.002984373546099842, "phrase": "dynamic_analysis"}, {"score": 0.0029126002350975634, "phrase": "considerable_performance_overhead"}, {"score": 0.0027295084882654917, "phrase": "lemo"}, {"score": 0.002436289099444074, "phrase": "operating_systems"}, {"score": 0.0021049977753042253, "phrase": "multi-core_technology"}], "paper_keywords": ["efficient shellcode detection", " multi-core technology"], "paper_abstract": "As more and more software vulnerabilities are exposed, shellcode has become very popular in recent years. It is widely used by attackers to exploit vulnerabilities and then hijack program's execution. Previous solutions suffer from limitations in that: 1) Some methods based on static analysis may fail to detect the shellcode using obfuscation techniques. 2) Other methods based on dynamic analysis could impose considerable performance overhead. In this paper, we propose Lemo, an efficient shellcode detection system. Our system is compatible with commodity hardware and operating systems, which enables deployment. To improve the performance of our system, we make use of the multi-core technology. The experiments show that our system can detect shellcode efficiently.", "paper_title": "Efficient Shellcode Detection on Commodity Hardware", "paper_id": "WOS:000326667900011"}