{"auto_keywords": [{"score": 0.04835645688467941, "phrase": "set_reconciliation_problem"}, {"score": 0.04318235426332534, "phrase": "set_difference"}, {"score": 0.035340830246983104, "phrase": "set_differences"}, {"score": 0.00481495049065317, "phrase": "counting_bloom_filters"}, {"score": 0.004493045859210086, "phrase": "node_pair"}, {"score": 0.003848886045448135, "phrase": "lightweight_but_efficient_method"}, {"score": 0.0036503460615862574, "phrase": "counting_bloom_filter"}, {"score": 0.003392182098020722, "phrase": "total_size"}, {"score": 0.003310236836421397, "phrase": "receiving_node"}, {"score": 0.0032567057896906314, "phrase": "received_cbf"}, {"score": 0.0031139032290048788, "phrase": "resultant_cbf"}, {"score": 0.002870066750788841, "phrase": "resultant_cbf."}, {"score": 0.002777949746964955, "phrase": "novel_estimator"}, {"score": 0.0024680632991561074, "phrase": "parameter_setting"}, {"score": 0.0024380519268512118, "phrase": "cbf"}, {"score": 0.002388817995161952, "phrase": "false_negatives"}, {"score": 0.0023694065215394593, "phrase": "comprehensive_analysis"}, {"score": 0.002274684393868218, "phrase": "prior_bf-based_methods"}, {"score": 0.0021396386320044172, "phrase": "prior_context_logs"}], "paper_keywords": ["Set reconciliation", " set difference", " Bloom filters"], "paper_abstract": "In this paper, we study the set reconciliation problem, in which each member of a node pair has a set of objects and seeks to deliver its unique objects to the other member. How could each node compute the set difference, however, is challenging in the set reconciliation problem. To address such an issue, we propose a lightweight but efficient method that only requires the pair of nodes to represent objects using a counting Bloom filter (CBF) of size O(d) and exchange with each other, where d denotes the total size of the set differences. A receiving node then subtracts the received CBF from its local one via minus operation proposed in this paper. The resultant CBF can approximately represent the union of the set differences and thus the set difference to each node can be identified after querying the resultant CBF. In this paper, we propose a novel estimator through which each node can accurately estimate not only the value of d but also the size of the set difference to each node. Such an estimation result can be used to optimize the parameter setting of the CBF to achieve less false positives and false negatives. Comprehensive analysis and evaluation demonstrates that our method is more efficient than prior BF-based methods in terms of achieving the same accuracy with less communication cost. Moreover, our reconciliating method needs no prior context logs and it is very useful in networking and distributed applications.", "paper_title": "Set Reconciliation via Counting Bloom Filters", "paper_id": "WOS:000323503100015"}