{"auto_keywords": [{"score": 0.03094069001359418, "phrase": "genetic_algorithm"}, {"score": 0.02262020181635885, "phrase": "event_log"}, {"score": 0.008362229859976112, "phrase": "non-trivial_constructs"}, {"score": 0.007115981960780932, "phrase": "global_search"}, {"score": 0.00481495049065317, "phrase": "process_mining"}, {"score": 0.004734448316824488, "phrase": "process_model"}, {"score": 0.004639612079116459, "phrase": "discovered_models"}, {"score": 0.004562027986828209, "phrase": "objective_starting_points"}, {"score": 0.004485735417293941, "phrase": "process-aware_information_systems"}, {"score": 0.004136850579059447, "phrase": "wiley"}, {"score": 0.004109023004472115, "phrase": "new_york"}, {"score": 0.004013098289856805, "phrase": "feedback_mechanism"}, {"score": 0.003972673543700013, "phrase": "prescribed_models"}, {"score": 0.003945949295597681, "phrase": "enacted_ones"}, {"score": 0.0038930368103015467, "phrase": "current_techniques"}, {"score": 0.0035062280202127136, "phrase": "local_information"}, {"score": 0.003344332868248692, "phrase": "genetic_algorithms"}, {"score": 0.0032883370175509053, "phrase": "main_motivation"}, {"score": 0.003063180586734181, "phrase": "internal_representation"}, {"score": 0.0027867024825194834, "phrase": "main_challenge"}, {"score": 0.002758597251689795, "phrase": "genetic_approach"}, {"score": 0.0027032319980161805, "phrase": "good_fitness_measure"}, {"score": 0.0025180372061991206, "phrase": "synthetic_and_real-life_logs"}, {"score": 0.0024179512279236207, "phrase": "process_models"}, {"score": 0.0022675361957417727, "phrase": "extra_behavior"}, {"score": 0.0021049977753042253, "phrase": "prom_framework"}], "paper_keywords": ["process mining", " genetic mining", " genetic algorithms", " Petri nets", " workflow nets"], "paper_abstract": "One of the aims of process mining is to retrieve a process model from an event log. The discovered models can be used as objective starting points during the deployment of process-aware information systems (Dumas et al., eds., Process-Aware Information Systems: Bridging People and Software Through Process Technology. Wiley, New York, 2005) and/or as a feedback mechanism to check prescribed models against enacted ones. However, current techniques have problems when mining processes that contain non-trivial constructs and/or when dealing with the presence of noise in the logs. Most of the problems happen because many current techniques are based on local information in the event log. To overcome these problems, we try to use genetic algorithms to mine process models. The main motivation is to benefit from the global search performed by this kind of algorithms. The non-trivial constructs are tackled by choosing an internal representation that supports them. The problem of noise is naturally tackled by the genetic algorithm because, per definition, these algorithms are robust to noise. The main challenge in a genetic approach is the definition of a good fitness measure because it guides the global search performed by the genetic algorithm. This paper explains how the genetic algorithm works. Experiments with synthetic and real-life logs show that the fitness measure indeed leads to the mining of process models that are complete (can reproduce all the behavior in the log) and precise (do not allow for extra behavior that cannot be derived from the event log). The genetic algorithm is implemented as a plug-in in the ProM framework.", "paper_title": "Genetic process mining: an experimental evaluation", "paper_id": "WOS:000245281600003"}