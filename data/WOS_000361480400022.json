{"auto_keywords": [{"score": 0.03753970440536791, "phrase": "stored_sequence"}, {"score": 0.00481495049065317, "phrase": "functional_test_sequences"}, {"score": 0.0047273577269638725, "phrase": "restoration_based_static_test_compaction_procedure"}, {"score": 0.004529093447865156, "phrase": "functional_test_sequence"}, {"score": 0.004157058883925715, "phrase": "storage_requirements"}, {"score": 0.003910106508089187, "phrase": "new_approach"}, {"score": 0.0038389110156920926, "phrase": "single_stored_sequence"}, {"score": 0.0034804536625952596, "phrase": "two-dimensional_arrays"}, {"score": 0.003293688299319582, "phrase": "different_test_sequence"}, {"score": 0.0029677378488677983, "phrase": "target_faults"}, {"score": 0.0023944552329463035, "phrase": "significant_reductions"}, {"score": 0.0023507916951658455, "phrase": "input_test_data_volume"}, {"score": 0.0022797772939670063, "phrase": "increased_numbers"}, {"score": 0.0022519745140925475, "phrase": "clock_cycles"}, {"score": 0.002224510044064184, "phrase": "test_application"}, {"score": 0.0021309898622781124, "phrase": "fault_coverage"}, {"score": 0.0021049977753042253, "phrase": "non-target_faults"}], "paper_keywords": ["Input test data volume", " functional test sequences", " static test compaction"], "paper_abstract": "A restoration based static test compaction procedure removes unnecessary test vectors from a functional test sequence in order to reduce its length. To allow the procedure to reduce the storage requirements of the sequence further, this paper introduces a new approach where a single stored sequence is used for applying several different functional test sequences. Under this approach, the stored sequence is considered as two-dimensional arrays with different dimensions. Each array yields a different test sequence, which is a permutation of the stored sequence. When the permutations are effective in detecting target faults, an existing static test compaction procedure, with certain modifications, can reduce the length of the stored sequence, and rely on the application of the permutations to detect all the target faults. Simulation results show significant reductions in the input test data volume. The cost of increased numbers of clock cycles for test application can be utilized for increasing the fault coverage of non-target faults.", "paper_title": "Two-Dimensional Static Test Compaction for Functional Test Sequences", "paper_id": "WOS:000361480400022"}