{"auto_keywords": [{"score": 0.02907007991496347, "phrase": "loop_transformations"}, {"score": 0.00481495049065317, "phrase": "memory_management"}, {"score": 0.004764542405129454, "phrase": "signal_processing_applications"}, {"score": 0.00468991337957911, "phrase": "storage_requirements"}, {"score": 0.004640808212832262, "phrase": "data-dominated_signal_processing_systems"}, {"score": 0.004288472456976113, "phrase": "overall_energy_consumption"}, {"score": 0.004243552607799184, "phrase": "data_access_latency"}, {"score": 0.004177049813981273, "phrase": "chip_area"}, {"score": 0.004047141845635495, "phrase": "tutorial_overview"}, {"score": 0.00398370478688858, "phrase": "existing_techniques"}, {"score": 0.0038597866217852353, "phrase": "data_memory_size"}, {"score": 0.0037594599958631404, "phrase": "important_step"}, {"score": 0.0037005154613244363, "phrase": "early_stage"}, {"score": 0.0036617315529835497, "phrase": "system-level_exploration"}, {"score": 0.003312901888725435, "phrase": "estimation_approach"}, {"score": 0.003278167066287366, "phrase": "non-procedural_specifications"}, {"score": 0.0031594291695784286, "phrase": "loop_execution"}, {"score": 0.0031262984171100856, "phrase": "loop_nests"}, {"score": 0.0030772505522663612, "phrase": "significant_memory_savings"}, {"score": 0.0029038817737006405, "phrase": "procedural_specifications"}, {"score": 0.002858313353461727, "phrase": "relevant_memory_management_applications"}, {"score": 0.002697245874076643, "phrase": "data_storage"}, {"score": 0.0025994945418484935, "phrase": "different_signal-to-memory_mapping_models"}, {"score": 0.002339246282204109, "phrase": "storage_requirement"}, {"score": 0.0021612684684351974, "phrase": "design_space"}, {"score": 0.0021049977753042253, "phrase": "system_specification"}], "paper_keywords": ["memory management", " loop transformations", " memory size evaluation", " digital signal processing"], "paper_abstract": "The storage requirements in data-dominated signal processing systems, whose behavior is described by array-based, loop-organized algorithmic specifications, have an important impact on the overall energy consumption, data access latency, and chip area. This paper gives a tutorial overview on the existing techniques for the evaluation of the data memory size, which is an important step during the early stage of system-level exploration. The paper focuses on the most advanced developments in the field, presenting in more detail (1) an estimation approach for non-procedural specifications, where the reordering of the loop execution within loop nests can yield significant memory savings, and (2) an exact computation approach for procedural specifications, with relevant memory management applications - like, measuring the impact of loop transformations on the data storage, or analyzing the performance of different signal-to-memory mapping models. Moreover, the paper discusses typical memory management trade-offs - like, for instance, between storage requirement and number of memory accesses - taken into account during the exploration of the design space by loop transformations in the system specification.", "paper_title": "Storage estimation and design space exploration methodologies for the memory management of signal processing applications", "paper_id": "WOS:000259734000005"}