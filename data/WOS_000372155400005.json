{"auto_keywords": [{"score": 0.046793532854124374, "phrase": "cloud-based_system"}, {"score": 0.031319367567177736, "phrase": "system_reliability"}, {"score": 0.00481495049065317, "phrase": "cloud-based_software_rejuvenation"}, {"score": 0.004263336444795021, "phrase": "promised_high_reliability"}, {"score": 0.004220314322073171, "phrase": "physical_facilities"}, {"score": 0.004156590395333602, "phrase": "cloud_services"}, {"score": 0.004114641015648682, "phrase": "software_faults"}, {"score": 0.003991305899593133, "phrase": "major_factors"}, {"score": 0.0038913443732432468, "phrase": "cloud-based_systems"}, {"score": 0.0036988415150699945, "phrase": "software_aging_phenomenon"}, {"score": 0.0036614948691735105, "phrase": "system_performance"}, {"score": 0.00349803055484394, "phrase": "system_resources"}, {"score": 0.003308085469148074, "phrase": "proactive_technique"}, {"score": 0.0031603487697867538, "phrase": "software_aging_problem"}, {"score": 0.0031125795874844438, "phrase": "dynamic_fault_tree"}, {"score": 0.002884317729022721, "phrase": "software_rejuvenation_process"}, {"score": 0.002840708910768261, "phrase": "aging_cloud-based_system"}, {"score": 0.002797757576619329, "phrase": "novel_analytical_approach"}, {"score": 0.002713788077665689, "phrase": "reliability_function"}, {"score": 0.0025793874956029795, "phrase": "continuous_time_markov_chains"}, {"score": 0.0024516267507109753, "phrase": "case_study"}, {"score": 0.002283298119790413, "phrase": "reliability_analytical_results"}, {"score": 0.0021049977753042253, "phrase": "predefined_critical_level"}], "paper_keywords": ["Software aging", " software rejuvenation", " reliability analysis", " dynamic fault tree (DFT)", " hot spare (HSP) gate", " Markov chain", " scheduling"], "paper_abstract": "Correctly measuring the reliability and availability of a cloud-based system is critical for evaluating its system performance. Due to the promised high reliability of physical facilities provided for cloud services, software faults have become one of the major factors for the failures of cloud-based systems. In this paper, we focus on the software aging phenomenon where system performance may be progressively degraded due to exhaustion of system resources, fragmentation and accumulation of errors. We use a proactive technique, called software rejuvenation, to counteract the software aging problem. The dynamic fault tree (DFT) formalism is adopted to model the system reliability before and during a software rejuvenation process in an aging cloud-based system. A novel analytical approach is presented to derive the reliability function of a cloud-based Hot SPare (HSP) gate, which is further verified using Continuous Time Markov Chains (CTMC) for its correctness. We use a case study of a cloud-based system to illustrate the validity of our approach. Based on the reliability analytical results, we show how cost-effective software rejuvenation schedules can be created to keep the system reliability consistently staying above a predefined critical level.", "paper_title": "A Software Reliability Model for Cloud-Based Software Rejuvenation Using Dynamic Fault Trees", "paper_id": "WOS:000372155400005"}