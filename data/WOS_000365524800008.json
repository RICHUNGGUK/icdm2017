{"auto_keywords": [{"score": 0.0497141445691543, "phrase": "web_service"}, {"score": 0.0474062288539893, "phrase": "fault_tolerance_method"}, {"score": 0.043891862951523704, "phrase": "tolerance_action"}, {"score": 0.031933131772783514, "phrase": "fault_propagation"}, {"score": 0.00481495049065317, "phrase": "fault_propagation_problems"}, {"score": 0.0047057084749407485, "phrase": "important_issue"}, {"score": 0.004309323675697185, "phrase": "composition_process"}, {"score": 0.004243862930012258, "phrase": "failure_service"}, {"score": 0.004037877545494505, "phrase": "service_oriented_architecture"}, {"score": 0.003946195919158241, "phrase": "different_service_based_systems"}, {"score": 0.003697538418750941, "phrase": "whole_network"}, {"score": 0.0036274201504044685, "phrase": "even_the_global_redistribution"}, {"score": 0.0033857878144822906, "phrase": "service_network_paralysis"}, {"score": 0.0033215617190376565, "phrase": "cascading_failure"}, {"score": 0.003296212583539166, "phrase": "complex_network"}, {"score": 0.00307657476125683, "phrase": "new_approach"}, {"score": 0.002960922610176301, "phrase": "view_point"}, {"score": 0.0029270797740550973, "phrase": "whole_service_network"}, {"score": 0.002784828661426853, "phrase": "different_types"}, {"score": 0.0027424619603260837, "phrase": "load_allocation_strategies"}, {"score": 0.0026091594819333654, "phrase": "web_service_complex_network"}, {"score": 0.00254983442025512, "phrase": "single_service"}, {"score": 0.0024073421672242486, "phrase": "propagation_process"}, {"score": 0.0023798115577749225, "phrase": "wscn_performance"}, {"score": 0.002361632539339945, "phrase": "small_attack"}, {"score": 0.0023435920614377306, "phrase": "large_attack"}, {"score": 0.002325689073229477, "phrase": "random_attack"}, {"score": 0.0023079225317714815, "phrase": "calculated_attack"}, {"score": 0.002255431275670053, "phrase": "wscn"}, {"score": 0.0022211005680689666, "phrase": "weight-based_and_spare-load-based_load_allocation_methods"}], "paper_keywords": ["Web Service Complex Network", " invocable relation between services", " fault propagation", " loads allocation strategy"], "paper_abstract": "How to prevent the fault propagation problems in Web Service has become an important issue. The recent research works mostly take some fault tolerance method in service based system. These methods detect or diagnose faults in the composition process, find the failure service, take tolerance action and recover the system. However, in the service oriented architecture, one service is shared by different service based systems. The fault tolerance method only considers from the view of one service user, and tolerance action not considering the whole network would change its load and even the global redistribution of loads over all of the services, trigger a cascade of overload, and result in service network paralysis. The research of cascading failure in Complex Network provides a set of models to help study the above problems. Consequently, this paper proposes a new approach to deal with the fault propagation for Web Service from the view point of the whole service network, which could analyze its resistance influenced by the size of network, different types of attacks and load allocation strategies and prevent the disasters from happening. Firstly, it constructs a Web Service Complex Network (WSCN) composed of single service and their functional similarity. Then it models fault propagation based on WSCN, and simulates the propagation process by analyzing WSCN performance under small attack, large attack, random attack and calculated attack. When fault happens in WSCN, our method uses weight-based and spare-load-based load allocation methods of failed service to compare their influences on the whole network. The experimental results show that when fault happens in WSCN, the network has better resistance for small scale failure than big scale one, and resists stronger for random attack than deliberate one; when the service failure happens, the remaining space based load allocation strategy on it has higher robustness than weight based one. The simulation of fault propagation for Web Service could set example for preventing and reducing probabilities of collapse in the service network.", "paper_title": "PREVENTION OF FAULT PROPAGATION IN WEB SERVICE: A COMPLEX NETWORK APPROACH", "paper_id": "WOS:000365524800008"}