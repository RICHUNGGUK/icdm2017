{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_subgraphs"}, {"score": 0.0047006879240764935, "phrase": "frequent_pattern_mining"}, {"score": 0.004633429997452688, "phrase": "huge_number"}, {"score": 0.004589124394375718, "phrase": "frequent_patterns"}, {"score": 0.004394910907549057, "phrase": "serious_problem"}, {"score": 0.003916098498242888, "phrase": "complex_nature"}, {"score": 0.0037864980290391354, "phrase": "standard_solutions"}, {"score": 0.0036261282565554507, "phrase": "closed_frequent_subgraphs"}, {"score": 0.0035741900278634616, "phrase": "redundant_and_maximal_frequent_subgraphs"}, {"score": 0.002977061391551631, "phrase": "current_algorithm"}, {"score": 0.002948547333717581, "phrase": "mining_d-tolerance"}, {"score": 0.002690886043654469, "phrase": "delta-tolerance_closedness"}, {"score": 0.0026268961477241026, "phrase": "efficient_algorithm"}, {"score": 0.0023972750359328235, "phrase": "new_pruning_conditions"}, {"score": 0.0022409963215568565, "phrase": "real_computation_time"}, {"score": 0.002198242191529979, "phrase": "mining_delta-tolerance"}, {"score": 0.0021049977753042253, "phrase": "practical_settings"}], "paper_keywords": ["Frequent subgraph mining", " delta-tolerance closedness", " Partial reverse search"], "paper_abstract": "The output of frequent pattern mining is a huge number of frequent patterns, which are very redundant, causing a serious problem in understandability. We focus on mining frequent subgraphs for which well-considered approaches to reduce the redundancy are limited because of the complex nature of graphs. Two known, standard solutions are closed and maximal frequent subgraphs, but closed frequent subgraphs are still redundant and maximal frequent subgraphs are too specific. A more promising solution is delta-tolerance closed frequent subgraphs, which decrease monotonically in delta, being equal to maximal frequent subgraphs and closed frequent subgraphs for delta = 0 and 1, respectively. However, the current algorithm for mining d-tolerance closed frequent subgraphs is a naive, two-step approach in which frequent subgraphs are all enumerated and then sifted according to delta-tolerance closedness. We propose an efficient algorithm based on the idea of \"reverse-search\" by which the completeness of enumeration is guaranteed and for which new pruning conditions are incorporated. We empirically demonstrate that our approach significantly reduced the amount of real computation time of two compared algorithms for mining delta-tolerance closed frequent subgraphs, being pronounced more for practical settings.", "paper_title": "Efficiently mining delta-tolerance closed frequent subgraphs", "paper_id": "WOS:000288121900002"}