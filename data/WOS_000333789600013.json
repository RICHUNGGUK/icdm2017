{"auto_keywords": [{"score": 0.03306221521902804, "phrase": "proposed_approach"}, {"score": 0.012542674126456863, "phrase": "dynamic_control"}, {"score": 0.00481495049065317, "phrase": "dynamic_behavior_specification"}, {"score": 0.004780780407878596, "phrase": "higher_usability"}, {"score": 0.0047468516620285525, "phrase": "small_humanoid_robots"}, {"score": 0.0045320819060445045, "phrase": "human-robot_interaction"}, {"score": 0.004326987090971404, "phrase": "standard_paradigm"}, {"score": 0.004296264970612285, "phrase": "robot_visual_programming"}, {"score": 0.004190438004831167, "phrase": "behavioral_blocks"}, {"score": 0.004101797841848363, "phrase": "communication_links"}, {"score": 0.004029359223675788, "phrase": "efficient_user_support"}, {"score": 0.003958194802333944, "phrase": "complex_series"}, {"score": 0.003902165732101058, "phrase": "sequential_behaviors"}, {"score": 0.003765525342866404, "phrase": "data_flow"}, {"score": 0.0036990033106718183, "phrase": "control_loops"}, {"score": 0.0036727235025069828, "phrase": "object_permanence"}, {"score": 0.003607834976869384, "phrase": "object_positions"}, {"score": 0.003544088803300751, "phrase": "finite_state_machines"}, {"score": 0.003347547260807785, "phrase": "new_programming_paradigm"}, {"score": 0.0031731685183735508, "phrase": "dynamic_robotic_tasks"}, {"score": 0.003051073364818384, "phrase": "declarative_association"}, {"score": 0.003029382820031577, "phrase": "reusable_dynamic_components"}, {"score": 0.0029971349193857093, "phrase": "central_memory"}, {"score": 0.002790723338582723, "phrase": "end_users"}, {"score": 0.0026928966146175636, "phrase": "dynamic_behaviors"}, {"score": 0.0026077803487003, "phrase": "robotic_tasks"}, {"score": 0.00223672097810462, "phrase": "positive_outcomes"}, {"score": 0.002212892265364764, "phrase": "usability_experiment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["End-user programming", " Usability", " Application layer", " Behavior specification", " Dynamic behaviors", " Commercial humanoid robots", " TDM"], "paper_abstract": "Small humanoid robots are becoming more affordable and are now used in fields such as human-robot interaction, ethics, psychology, or education. For non-roboticists, the standard paradigm for robot visual programming is based on the selection of behavioral blocks, followed by their connection using communication links. These programs provide efficient user support during the development of complex series of movements and sequential behaviors. However, implementing dynamic control remains challenging because the data flow between components to enforce control loops, object permanence, the memories of object positions, odometry, and finite state machines has to be organized by the users. In this study, we develop a new programming paradigm, Targets-Drives-Means, which is suitable for the specification of dynamic robotic tasks. In this proposed approach, programming is based on the declarative association of reusable dynamic components. A central memory organizes the information flows automatically and issues related to dynamic control are solved by processes that remain hidden from the end users. The proposed approach has advantages during the implementation of dynamic behaviors, but it requires that users stop conceiving robotic tasks as the execution of a sequence of actions. Instead, users are required to organize their programs as collections of behaviors that run in parallel and compete for activation. This might be considered non-intuitive but we also report the positive outcomes of a usability experiment, which evaluated the accessibility of the proposed approach. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Targets-Drives-Means: A declarative approach to dynamic behavior specification with higher usability", "paper_id": "WOS:000333789600013"}