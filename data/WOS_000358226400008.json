{"auto_keywords": [{"score": 0.044372506936841576, "phrase": "area"}, {"score": 0.007201571435528778, "phrase": "simulation_experiments"}, {"score": 0.006368932231170375, "phrase": "a-m_schedules"}, {"score": 0.00481495049065317, "phrase": "volatile_computing_platforms"}, {"score": 0.004556901872357751, "phrase": "computing_power"}, {"score": 0.004270888854681611, "phrase": "new_quality_metric"}, {"score": 0.004134658048970194, "phrase": "interdependent_constituent_chores"}, {"score": 0.003938383970047866, "phrase": "average_number"}, {"score": 0.0035848560487286166, "phrase": "host_platforms"}, {"score": 0.0034145918296403874, "phrase": "faster_rate"}, {"score": 0.003370565320453525, "phrase": "benign_impact"}, {"score": 0.0033163269450817716, "phrase": "volatile_platforms"}, {"score": 0.003200045185608395, "phrase": "earlier_work"}, {"score": 0.003158776195052182, "phrase": "basic_properties"}, {"score": 0.002922069655177295, "phrase": "significant_computations"}, {"score": 0.002685558057339722, "phrase": "current_study"}, {"score": 0.002659527314613792, "phrase": "efficient_algorithm"}, {"score": 0.002260932310934101, "phrase": "lightweight_ones"}, {"score": 0.0022390081666133627, "phrase": "intensive_ones"}, {"score": 0.0021745003291048356, "phrase": "-m_schedules"}, {"score": 0.0021187186371584674, "phrase": "larger_areas"}, {"score": 0.0021049977753042253, "phrase": "smaller_completion_times"}], "paper_keywords": ["Scheduling for dynamically heterogeneous platforms", " DAG scheduling", " Cloud computing", " Volunteer computing", " Desktop grids"], "paper_abstract": "Many modern computing platforms-notably clouds and desktop grids-exhibit dynamic heterogeneity: the availability and computing power of their constituent resources can change unexpectedly and dynamically, even in the midst of a computation. We introduce a new quality metric, AREA, for schedules that execute computations having interdependent constituent chores (jobs, tasks, etc.) on such platforms. AREA measures the average number of chores that a schedule renders eligible for execution at each step of a computation. Even though the definition of AREA does not mention any properties of host platforms (such as volatility), intuition suggests that rendering chores eligible at a faster rate will have a benign impact on the performance of volatile platforms. We report on simulation experiments that support this intuition. Earlier work has derived the basic properties of the AREA metric and has shown how to efficiently craft AREA-maximizing (A-M) schedules for several classes of significant computations. Even though A-M schedules always exist for every computation, it is not always known how to derive such schedules efficiently. In response, the current study develops an efficient algorithm that produces AREA-Oriented (A-O) schedules, which aim to efficiently approximate the AREAs of A-M schedules on arbitrary computations. The simulation experiments reported on here suggest that, in common with A-M schedules, A-O schedules complete computations on volatile heterogeneous platforms faster than a variety of heuristics that range from lightweight ones to computationally intensive ones-albeit not to the same degree as A-M schedules do. Our experiments suggest that schedules having larger AREAs have smaller completion times-but no proof of that yet exists.", "paper_title": "An AREA-Oriented Heuristic for Scheduling DAGs on Volatile Computing Platforms", "paper_id": "WOS:000358226400008"}