{"auto_keywords": [{"score": 0.05007834503226343, "phrase": "component_connectors"}, {"score": 0.049496721057450455, "phrase": "reo"}, {"score": 0.004669845451682529, "phrase": "exogenous_coordination_language"}, {"score": 0.004556901872357751, "phrase": "data_flow_networks"}, {"score": 0.004446677711302801, "phrase": "context-dependent_behavior"}, {"score": 0.00436575511349828, "phrase": "first_proposed_formalism"}, {"score": 0.004260134699483774, "phrase": "operational_semantics"}, {"score": 0.0038862297330905836, "phrase": "operational_model"}, {"score": 0.003769006950727621, "phrase": "buchi_automata"}, {"score": 0.003700371064796848, "phrase": "port_synchronization"}, {"score": 0.0034804536625952596, "phrase": "context_dependencies"}, {"score": 0.003253560798692431, "phrase": "constraint_automata"}, {"score": 0.002985988377995789, "phrase": "composition_operator"}, {"score": 0.002499508839669243, "phrase": "previous_models"}, {"score": 0.0023944552329463035, "phrase": "standard_automata_theory"}, {"score": 0.002336414425972225, "phrase": "existing_theories"}, {"score": 0.002157302200451323, "phrase": "first_formal_model"}, {"score": 0.0021049977753042253, "phrase": "reo's_features"}], "paper_keywords": ["Buchi automata", " Component connector", " Reo", " Constraint automata"], "paper_abstract": "Reo is an exogenous coordination language for component connectors extending data flow networks with synchronization and context-dependent behavior. The first proposed formalism to capture the operational semantics of Reo is called constraint automaton. In this paper, we propose another operational model of Reo based on Buchi automata in which port synchronization is modeled by records labeling the transitions, whereas context dependencies are stored in the states. It is shown that constraint automata can be recast into our proposed Buchi automata of records. Also, we provide a composition operator which models the joining of two connectors and show that it can be obtained by using two standard operators: alphabet extension and automata product. Our semantics has the advantage over previous models in that it is based on standard automata theory, so that existing theories and tools can be easily reused. Moreover, it is the first formal model addressing all of Reo's features: synchronization, mutual exclusion, hiding, and context-dependency.", "paper_title": "Buchi automata for modeling component connectors", "paper_id": "WOS:000289901500004"}