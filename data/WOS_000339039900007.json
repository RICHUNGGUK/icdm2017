{"auto_keywords": [{"score": 0.03492129383115456, "phrase": "vertical_bar_csa_vertical_bar"}, {"score": 0.010181421237226377, "phrase": "csa"}, {"score": 0.00481495049065317, "phrase": "top-k_document_retrieval"}, {"score": 0.004671274735676484, "phrase": "collection_d"}, {"score": 0.004457579615095599, "phrase": "total_length_n"}, {"score": 0.004360412703519539, "phrase": "top-k_queries"}, {"score": 0.004324521292490181, "phrase": "k_documents"}, {"score": 0.004265354774450696, "phrase": "pattern_p"}, {"score": 0.004241914481080374, "phrase": "length_p"}, {"score": 0.004206994330732085, "phrase": "query_time"}, {"score": 0.004160879027087841, "phrase": "linear-space_data_structures"}, {"score": 0.004003404177052108, "phrase": "optimal_o"}, {"score": 0.0039053194919285725, "phrase": "ample_set"}, {"score": 0.003809628721278519, "phrase": "linear_space"}, {"score": 0.003747136136147979, "phrase": "large_text_collections"}, {"score": 0.0034496656880436526, "phrase": "term_frequency"}, {"score": 0.0033651019362620866, "phrase": "document_t-i"}, {"score": 0.0030808211830129304, "phrase": "compressed_suffix_array_indexing_d"}, {"score": 0.003005271873916767, "phrase": "suffix_array_interval"}, {"score": 0.0026764185202909395, "phrase": "time_o"}, {"score": 0.0025820967615278073, "phrase": "iterated_logarithm"}, {"score": 0.002200077887697072, "phrase": "suffix_array_cell"}, {"score": 0.0021401625519713577, "phrase": "independent_interest"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Document retrieval", " Top-k queries", " String databases", " Compressed data structures"], "paper_abstract": "We address the problem of indexing a collection D = {T-1, T-2,..., T-D)} of D string documents of total length n, so that we can efficiently answer top-k queries: retrieve k documents most relevant to a pattern P of length p given at query time. There exist linear-space data structures, that is, using O(n) words, that answer such queries in optimal O (p + k) time for an ample set of notions of relevance. However, using linear space is not sufficiently good for large text collections. In this paper we explore how far the space/time tradeoff for this problem can be pushed. We obtain three results: (1) When relevance is measured as term frequency (number of times P appears in a document T-i), an index occupying vertical bar CSA vertical bar + o(n) bits answers the query in time O (t(search)(p) + klg(2) klg(epsilon) n), where CSA is a compressed suffix array indexing D, t(search)(p) is its time to find the suffix array interval of P, and epsilon > 0 is any constant. (2) With the same measure of relevance, an index occupying vertical bar CSA vertical bar + n lg D o(n lg sigma + n lg D) bits answers the query in time O (t(search) (p) + k lg* k), where lg* k is the iterated logarithm of k. (3) When the relevance depends only on the documents, an index occupying vertical bar CSA vertical bar + O (n lg lg n) bits answers the query in O (t(search) (p) + k t(SA)) time, where t(SA) is the time the CSA needs to retrieve a suffix array cell. On our way, we obtain some other results of independent interest. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "New space/time tradeoffs for top-k document retrieval on sequences", "paper_id": "WOS:000339039900007"}