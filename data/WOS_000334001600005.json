{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large-scale_systems"}, {"score": 0.004762550320451225, "phrase": "software_architecture_specifications"}, {"score": 0.004363277689798392, "phrase": "abstract_view"}, {"score": 0.004292212137716459, "phrase": "high-level_structural_system_entities"}, {"score": 0.0040192915527630995, "phrase": "behavioral_conformance"}, {"score": 0.003975515793563275, "phrase": "component_implementations"}, {"score": 0.00380511089035825, "phrase": "model-based_integration_testing"}, {"score": 0.003743102131902864, "phrase": "increasing_inherent_diversity"}, {"score": 0.0034102660898135155, "phrase": "architecture-driven_model-based_testing_principles"}, {"score": 0.0030899524399043863, "phrase": "variant-rich_systems"}, {"score": 0.0030064251340251196, "phrase": "integrated_delta-oriented_architectural_test_modeling"}, {"score": 0.002861708609922034, "phrase": "integration_testing"}, {"score": 0.0027389142053945246, "phrase": "test_artifacts"}, {"score": 0.002709045632654716, "phrase": "different_system_variants"}, {"score": 0.0026357877401570764, "phrase": "automated_derivation"}, {"score": 0.0026070408483940535, "phrase": "retesting_obligations"}, {"score": 0.002564505790176378, "phrase": "accurate_delta-oriented_architectural_change_impact_analysis"}, {"score": 0.0024679299547216956, "phrase": "formal_conceptual_framework"}, {"score": 0.0024276590297034064, "phrase": "stable_test_coverage"}, {"score": 0.002388043660169452, "phrase": "system_variant"}, {"score": 0.002323446065342625, "phrase": "sample_implementation"}, {"score": 0.0021399277552314067, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "automotive_domain"}], "paper_keywords": ["Large-scale systems", " Model-based testing", " Regression testing", " Variable software architectures"], "paper_abstract": "Software architecture specifications are of growing importance for coping with the complexity of large-scale systems. They provide an abstract view on the high-level structural system entities together with their explicit dependencies and build the basis for ensuring behavioral conformance of component implementations and interaction's, e.g., using model-based integration testing. The increasing inherent diversity of such large-scale variant-rich systems further complicates quality assurance. In this article, we present a combination of architecture-driven model-based testing principles and regression-inspired testing strategies for efficient, yet comprehensive variability-aware conformance testing of variant-rich systems. We propose an integrated delta-oriented architectural test modeling and testing approach for component as well as integration testing that allows the generation and reuse of test artifacts among different system variants. Furthermore, an automated derivation of retesting obligations based on accurate delta-oriented architectural change impact analysis is provided. Based on a formal conceptual framework that guarantees stable test coverage for every system variant, we present a sample implementation of our approach and an evaluation of the validity and efficiency by means of a case study from the automotive domain. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Delta-oriented model-based integration testing of large-scale systems", "paper_id": "WOS:000334001600005"}