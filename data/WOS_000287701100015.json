{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ray_tracing"}, {"score": 0.045693275459193064, "phrase": "traversal_algorithms"}, {"score": 0.0034426417353349567, "phrase": "different_limitations"}, {"score": 0.002945669860541221, "phrase": "ray_coherence"}, {"score": 0.0027741761880779535, "phrase": "specific_hardware_architecture_limitations"}, {"score": 0.0026760974046034854, "phrase": "memory_latency"}, {"score": 0.0021049977753042253, "phrase": "previous_research"}], "paper_keywords": ["kd-tree", " ray tracing", " traversal"], "paper_abstract": "In this paper we review the traversal algorithms for kd-trees for ray tracing. Ordinary traversal algorithms such as sequential, recursive, and those with neighbour-links have different limitations, which led to several new developments within the last decade. We describe algorithms exploiting ray coherence and algorithms designed with specific hardware architecture limitations such as memory latency and consumption in mind. We also discuss the robustness of traversal algorithms as one issue that has been neglected in previous research.", "paper_title": "Review: Kd-tree Traversal Algorithms for Ray Tracing", "paper_id": "WOS:000287701100015"}