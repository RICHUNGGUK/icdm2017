{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "leakage-resilient_secret_sharing_schemes"}, {"score": 0.045458312844898874, "phrase": "shared_secrets"}, {"score": 0.03264380679993051, "phrase": "existing_secret_sharing_schemes"}, {"score": 0.004090577229368418, "phrase": "unauthorized_sets"}, {"score": 0.003845154818609644, "phrase": "unauthorized_set"}, {"score": 0.0035941231858949035, "phrase": "uncorrupted_shareholders'_memory_information"}, {"score": 0.003474799999519295, "phrase": "side_channel_attacks"}, {"score": 0.003303177222901723, "phrase": "partial_information"}, {"score": 0.0028373742057129126, "phrase": "secure_secret_sharing_schemes"}, {"score": 0.002758597251689795, "phrase": "memory_leakage"}, {"score": 0.002506715532901322, "phrase": "formal_definition"}, {"score": 0.0024786330057813204, "phrase": "mlr-ss_scheme"}, {"score": 0.0023560952790080943, "phrase": "physical_unclonable_functions"}, {"score": 0.0021049977753042253, "phrase": "mlr-ss_schemes"}], "paper_keywords": ["secret sharing", " multi-secret sharing", " side-channel attacks", " physical unclonable functions (PUFs)", " memory leakage-resilient"], "paper_abstract": "A secret sharing scheme is a method to share secrets among some shareholders such that the shared secrets can be recovered only by certain authorized sets, not by the unauthorized sets. However, in practice, attackers who corrupted an unauthorized set are often able to obtain some or even all of the uncorrupted shareholders' memory information by a great variety of side channel attacks. Then, they can illegally obtain the partial information or even all of the shared secrets. Facing such attacks, all existing secret sharing schemes are no longer secure. In this paper, we investigate how to construct secure secret sharing schemes with the presence of memory leakage, we call them memory leakage-resilient secret sharing schemes (MLR-SS schemes). We present the formal definition of MLR-SS scheme and construct two MLR-SS schemes by combining the existing secret sharing schemes with physical unclonable functions (PUFs). With these two concrete examples, we are attempting to demonstrate the use of PUFs in constructing MLR-SS schemes.", "paper_title": "Memory leakage-resilient secret sharing schemes", "paper_id": "WOS:000365129500009"}