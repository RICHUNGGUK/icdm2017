{"auto_keywords": [{"score": 0.04801135713994133, "phrase": "runtime_efficiency"}, {"score": 0.03650115677354154, "phrase": "cwa"}, {"score": 0.029574113185758092, "phrase": "perfect_hashing"}, {"score": 0.00481495049065317, "phrase": "object-oriented_implementations"}, {"score": 0.004776484866276242, "phrase": "multiple_inheritance"}, {"score": 0.004738325072560588, "phrase": "static_typing"}, {"score": 0.004700468701207975, "phrase": "object-oriented_languages"}, {"score": 0.004644247838681628, "phrase": "threefold_tradeoff"}, {"score": 0.004035777314816881, "phrase": "data_structures"}, {"score": 0.003987474771008829, "phrase": "method_invocation"}, {"score": 0.003908246778916674, "phrase": "subtype_testing"}, {"score": 0.0037999551521987426, "phrase": "production_line"}, {"score": 0.0037095162593960727, "phrase": "source_code"}, {"score": 0.0035350218469335573, "phrase": "fully_global_compilation"}, {"score": 0.0034926916198124484, "phrase": "closed-world_assumption"}, {"score": 0.0033822643082593285, "phrase": "dynamic_loading"}, {"score": 0.003341760625989164, "phrase": "owa"}, {"score": 0.003301733505307784, "phrase": "midway_solutions"}, {"score": 0.0032231139180761183, "phrase": "significant_subset"}, {"score": 0.00319732428387928, "phrase": "possible_combinations"}, {"score": 0.002974281028713475, "phrase": "prm_compiler"}, {"score": 0.002857143106182505, "phrase": "considered_techniques"}, {"score": 0.0027667539384678814, "phrase": "binary_tree_dispatch"}, {"score": 0.002615381301695394, "phrase": "first_results"}, {"score": 0.0025840347813610815, "phrase": "intuitive_or_theoretical_abstract_assessments"}, {"score": 0.0024133533748653033, "phrase": "quantitative_standpoint"}, {"score": 0.0022358683283304533, "phrase": "specific_languages"}, {"score": 0.0022001958412800745, "phrase": "eiffel."}, {"score": 0.0021051140663618973, "phrase": "java"}], "paper_keywords": ["Experimentation", " Languages", " Measurement", " Performance", " binary tree dispatch", " closed-world assumption", " coloring", " downcast", " dynamic loading", " interfaces", " late binding", " method tables", " multiple inheritance", " multiple subtyping", " open-world assumption", " perfect hashing", " single inheritance", " subtype test", " type analysis", " virtual function tables"], "paper_abstract": "Object-oriented languages involve a threefold tradeoff between runtime efficiency, expressiveness (multiple inheritance), and modularity, i.e. open-world assumption (OWA). Runtime efficiency is conditioned by both the implementation technique and compilation scheme. The former specifies the data structures that support method invocation, attribute access and subtype testing. The latter consists of the production line of an executable from the source code. Many implementation techniques have been proposed and several compilation schemes can be considered from fully global compilation under the closed-world assumption (CWA) to separate compilation with dynamic loading under the OWA, with midway solutions. This article reviews a significant subset of possible combinations and presents a systematic, empirical comparison of their respective efficiencies with all other things being equal. The testbed consists of the PRM compiler that has been designed for this purpose. The considered techniques include C++ subobjects, coloring, perfect hashing, binary tree dispatch and caching. A variety of processors were considered. Qualitatively, these first results confirm the intuitive or theoretical abstract assessments of the tested approaches. As expected, efficiency increases as CWA strengthens. From a quantitative standpoint, the results are the first to precisely compare the efficiency of techniques that are closely associated with specific languages like C++ and EIFFEL. They also confirm that perfect hashing should be considered for implementing JAVA and. NET interfaces.", "paper_title": "Empirical Assessment of Object-Oriented Implementations with Multiple Inheritance and Static Typing", "paper_id": "WOS:000271211300003"}