{"auto_keywords": [{"score": 0.049084030038618824, "phrase": "pollution_attack"}, {"score": 0.04220158282143814, "phrase": "pollution_attacks"}, {"score": 0.030789521195853452, "phrase": "short_generations"}, {"score": 0.00481495049065317, "phrase": "simple_countermeasures"}, {"score": 0.004274527415193801, "phrase": "effective_solution"}, {"score": 0.004229847379280629, "phrase": "user_capacities"}, {"score": 0.004170996594527844, "phrase": "system_throughput"}, {"score": 0.004141877689172017, "phrase": "live_multimedia_streaming"}, {"score": 0.003957477564354679, "phrase": "malicious_peers"}, {"score": 0.003754847652236926, "phrase": "unaware_honest_nodes"}, {"score": 0.0036128527616772848, "phrase": "previous_research"}, {"score": 0.0035750641312373202, "phrase": "malicious_nodes"}, {"score": 0.0034038593017883295, "phrase": "pollution_countermeasures"}, {"score": 0.0033564619316337634, "phrase": "standard_nc_scheme"}, {"score": 0.0031291625125786293, "phrase": "malicious_and_honest_neighbors"}, {"score": 0.0028364942193465194, "phrase": "clean_generation"}, {"score": 0.002767696345005216, "phrase": "recombination_scheme"}, {"score": 0.0026443135597866924, "phrase": "input_queue"}, {"score": 0.002598333022293788, "phrase": "decoding_scheme"}, {"score": 0.0025352969524471496, "phrase": "polluted_packets"}, {"score": 0.0024999636244840647, "phrase": "decoding_process"}, {"score": 0.002388487669097511, "phrase": "real_system"}, {"score": 0.002306123367679187, "phrase": "experimental_evidence"}, {"score": 0.0021649437083408425, "phrase": "video_quality"}, {"score": 0.0021049977753042253, "phrase": "pre-attack_levels"}], "paper_keywords": ["Continuity index", " measurements", " network coding", " peer to peer (P2P)", " pollution attack"], "paper_abstract": "Network coding (NC)-based peer-to-peer (P2P) streaming represents an effective solution to aggregate user capacities and to increase system throughput in live multimedia streaming. Nonetheless, such systems are vulnerable to pollution attacks where a handful of malicious peers can disrupt the communication by transmitting just a few bogus packets which are then recombined and relayed by unaware honest nodes, further spreading the pollution over the network. Whereas previous research focused on malicious nodes identification schemes and pollution-resilient coding, in this paper we show pollution countermeasures which make a standard NC scheme resilient to pollution attacks. Thanks to a simple yet effective analytical model of a reference node collecting packets by malicious and honest neighbors, we demonstrate that: i) packets received earlier are less likely to be polluted, and ii) short generations increase the likelihood to recover a clean generation. Therefore, we propose a recombination scheme where nodes draw packets to be recombined according to their age in the input queue, paired with a decoding scheme able to detect the reception of polluted packets early in the decoding process and short generations. The effectiveness of our approach is experimentally evaluated in a real system we developed and deployed on hundreds to thousands of peers. Experimental evidence shows that, thanks to our simple countermeasures, the effect of a pollution attack is almost canceled and the video quality experienced by the peers is comparable to pre-attack levels.", "paper_title": "Simple Countermeasures to Mitigate the Effect of Pollution Attack in Network Coding-Based Peer-to-Peer Live Streaming", "paper_id": "WOS:000351586300009"}