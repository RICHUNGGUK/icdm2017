{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "domain-specific_model_patterns"}, {"score": 0.004590217765551337, "phrase": "widely_applied_technique"}, {"score": 0.004436116555817464, "phrase": "graphical_languages"}, {"score": 0.004346139434813299, "phrase": "highly_configurable_modeling_environments"}, {"score": 0.00417160036938041, "phrase": "rapid_development"}, {"score": 0.0041149859710361125, "phrase": "domain-specific_modeling_languages"}, {"score": 0.003976775340098895, "phrase": "design_patterns"}, {"score": 0.003922794571908569, "phrase": "efficient_solutions"}, {"score": 0.0038695436922618876, "phrase": "recurring_problems"}, {"score": 0.003540539868937462, "phrase": "domain-specific_design_patterns"}, {"score": 0.003352088714126572, "phrase": "different_domains"}, {"score": 0.0031305230217636495, "phrase": "theoretical_and_practical_foundations"}, {"score": 0.002825251837733693, "phrase": "premature_model_parts"}, {"score": 0.002730240935688002, "phrase": "instantiation_relationship"}, {"score": 0.002602555367635598, "phrase": "instantiation_rules"}, {"score": 0.002285216591220303, "phrase": "necessary_modifications"}, {"score": 0.002254145085288829, "phrase": "metamodeling_tools"}, {"score": 0.002148677187261496, "phrase": "contributed_results"}, {"score": 0.0021049977753042253, "phrase": "well-founded_domain-specific_model_pattern_support"}], "paper_keywords": [""], "paper_abstract": "Metamodeling is a widely applied technique in the field of graphical languages to create highly configurable modeling environments. These environments support the rapid development of domain-specific modeling languages (DSMLs). Design patterns are efficient solutions for recurring problems. With the proliferation of DSMLs, there is a need for domain-specific design patterns to offer solutions to problems recurring in different domains. The aim of this paper is to provide theoretical and practical foundations to support domain-specific model patterns in metamodeling environments. In order to support the treatment of premature model parts, we weaken the instantiation relationship. We provide constructs relaxing the instantiation rules, and we show that these constructs are appropriate and sufficient to express patterns. We provide the necessary modifications in metamodeling tools for supporting patterns. With the contributed results, a well-founded domain-specific model pattern support can be realized in metamodeling tools.", "paper_title": "Supporting domain-specific model patterns with metamodeling", "paper_id": "WOS:000269218900004"}