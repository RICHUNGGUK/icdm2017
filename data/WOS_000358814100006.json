{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "data_mashups"}, {"score": 0.04749520186100095, "phrase": "web_apis"}, {"score": 0.009345991465910346, "phrase": "csg"}, {"score": 0.004718897469501381, "phrase": "growing_popularity"}, {"score": 0.004266501496765747, "phrase": "right_apis"}, {"score": 0.00418134346679498, "phrase": "increasingly_complex_task"}, {"score": 0.004056769841308405, "phrase": "yahoo's_pipes"}, {"score": 0.004016105661740823, "phrase": "ibm"}, {"score": 0.003975781274672803, "phrase": "lotus_mashup"}, {"score": 0.0039161220750459245, "phrase": "intel"}, {"score": 0.003876806615011266, "phrase": "mashmaker"}, {"score": 0.0036676174658755683, "phrase": "programming_skills"}, {"score": 0.003522579870903474, "phrase": "large_number"}, {"score": 0.0034348484776384643, "phrase": "data_mashup"}, {"score": 0.0033492947290751996, "phrase": "novel_algorithms"}, {"score": 0.0032989853590079153, "phrase": "automatic_discovery"}, {"score": 0.002878785759716458, "phrase": "composable_similarity_graph"}, {"score": 0.0027929100418926725, "phrase": "composition_candidates"}, {"score": 0.002709589081384597, "phrase": "semantic_functional_dependency"}, {"score": 0.002486734224234698, "phrase": "directed_acyclic_graphs"}, {"score": 0.0023523750536537102, "phrase": "desired_goal"}, {"score": 0.0022592313766072658, "phrase": "real-world_dataset"}, {"score": 0.0022365262201954643, "phrase": "programmableweb.com"}, {"score": 0.0021049977753042253, "phrase": "user's_desired_output"}], "paper_keywords": ["data mashup", " Web API", " discovery", " composition", " ontology learning", " graph-based algorithm"], "paper_abstract": "With the growing popularity of data mashups, the number of Web APIs has increased significantly. As a result, finding and composing the right APIs has become an increasingly complex task. Although several tools such as Yahoo's Pipes, IBM's Lotus Mashup, and Intel's Mashmaker have been developed to enable users to create data mashups without programming skills, there are several challenging issues when combining a large number of APIs into the data mashup. This paper proposes novel algorithms for the automatic discovery and composition of Web APIs. Our discovery algorithm adopts strategies that rapidly prune APIs that are guaranteed not to match the query. Our composition algorithm consists of constructing a composable similarity graph (CSG) and searching composition candidates. The CSG presents the semantic functional dependency between the inputs and the outputs of the Web APIs. Using this graph, we generate directed acyclic graphs (DAGs) that can produce the output satisfying the desired goal. We evaluate the algorithms on a real-world dataset from ProgrammableWeb.com, and show that they can produce the results satisfying the user's desired output.", "paper_title": "Semantic-Based Web API Composition for Data Mashups", "paper_id": "WOS:000358814100006"}