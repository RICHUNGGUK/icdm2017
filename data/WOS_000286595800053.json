{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "online_upgrades"}, {"score": 0.04962656673317322, "phrase": "multiple_administrative_domains"}, {"score": 0.03168010654497529, "phrase": "mixed-version_races"}, {"score": 0.004724365740062236, "phrase": "online_software_upgrades"}, {"score": 0.004613516457919661, "phrase": "runtime_behaviors"}, {"score": 0.004275904315753662, "phrase": "multiple_versions"}, {"score": 0.004019797503157808, "phrase": "latent_errors"}, {"score": 0.00388828234270598, "phrase": "industry_trends"}, {"score": 0.0037432199549135826, "phrase": "large-scale_enterprise_systems"}, {"score": 0.003485605409687907, "phrase": "ajax_client-side_code"}, {"score": 0.0034037221513153566, "phrase": "cloud-computing_resources"}, {"score": 0.0030949200330108156, "phrase": "upgrade_process"}, {"score": 0.003051073364818384, "phrase": "existing_techniques"}, {"score": 0.002868116925014397, "phrase": "analytical_framework"}, {"score": 0.0028409576481842457, "phrase": "impact_assessment"}, {"score": 0.002787406053363446, "phrase": "system_administrators"}, {"score": 0.0026705669656375197, "phrase": "online-upgrade_plan"}, {"score": 0.002486589906779091, "phrase": "executable_model"}, {"score": 0.0024051153560799335, "phrase": "systematic_approach"}, {"score": 0.0023485549678832628, "phrase": "online_upgrade"}, {"score": 0.0022500695985527668, "phrase": "last_resort"}, {"score": 0.0022181655497912796, "phrase": "undesirable_program_behaviors"}], "paper_keywords": ["Management", " Reliability", " Mixed-version race", " Online upgrade", " Multiple administrative domains", " Risk assessment"], "paper_abstract": "Online software upgrades are often plagued by runtime behaviors that are poorly understood and difficult to ascertain. For example, the interactions among multiple versions of the software expose the system to race conditions that can introduce latent errors or data corruption. Moreover, industry trends suggest that online upgrades are currently needed in large-scale enterprise systems, which often span multiple administrative domains (e.g., Web 2.0 applications that rely on AJAX client-side code or systems that lease cloud-computing resources). In such systems, the enterprise does not control all the tiers of the system and cannot coordinate the upgrade process, making existing techniques inadequate to prevent mixed-version races. In this paper, we present an analytical framework for impact assessment, which allows system administrators to directly compare the risk of following an online-upgrade plan with the risk of delaying or canceling the upgrade. We also describe an executable model that implements our formal impact assessment and enables a systematic approach for deciding whether an online upgrade is appropriate. Our model provides a method of last resort for avoiding undesirable program behaviors, in situations where mixed-version races cannot be avoided through other technical means.", "paper_title": "To Upgrade or Not to Upgrade Impact of Online Upgrades across Multiple Administrative Domains", "paper_id": "WOS:000286595800053"}