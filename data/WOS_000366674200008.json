{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "algorithm"}, {"score": 0.004681226806682058, "phrase": "fuzzy_frequent_itemsets"}, {"score": 0.003990385737207714, "phrase": "complete_set"}, {"score": 0.0038431888954930083, "phrase": "candidate_generation"}, {"score": 0.0036667768092524576, "phrase": "novel_fuzzy-list_structure"}, {"score": 0.003531474887552889, "phrase": "essential_information"}, {"score": 0.0034657012607680173, "phrase": "later_mining_process"}, {"score": 0.003369322866499541, "phrase": "efficient_pruning_strategy"}, {"score": 0.003154701855951328, "phrase": "search_space"}, {"score": 0.0029816229984366374, "phrase": "mining_process"}, {"score": 0.002564985233317994, "phrase": "proposed_ffi-miner_algorithm"}, {"score": 0.002470237978694949, "phrase": "apriori-based_and_tree-based_approaches"}, {"score": 0.002248366278757655, "phrase": "traversal_nodes"}, {"score": 0.0021049977753042253, "phrase": "membership_functions"}], "paper_keywords": ["List-based", " fuzzy-set theory", " quantitative databases", " fuzzy frequent itemsets"], "paper_abstract": "In this paper, a fuzzy frequent itemset (FFI)-Miner algorithm is developed to mine the complete set of FFIs without candidate generation. It uses a novel fuzzy-list structure to keep the essential information for later mining process. An efficient pruning strategy is also developed to reduce the search space, thus speeding up the mining process to directly discover the FFIs. Experiments are conducted to show the performance of the proposed FFI-Miner algorithm compared to the Apriori-based and tree-based approaches in terms of execution time and the number of traversal nodes for discovering FFIs under variants of membership functions.", "paper_title": "A fast Algorithm for mining fuzzy frequent itemsets", "paper_id": "WOS:000366674200008"}