{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gals-designer"}, {"score": 0.03669884834098149, "phrase": "gals_programs"}, {"score": 0.004645057834614705, "phrase": "gals_software_systems"}, {"score": 0.004375061788023814, "phrase": "software_systems"}, {"score": 0.0042459818200777846, "phrase": "formal_globally_asynchronous_locally_synchronous_model"}, {"score": 0.003975200317233532, "phrase": "single_or_multiple_gals_programs"}, {"score": 0.0033011569787033297, "phrase": "single_and_multiple_gals_programs"}, {"score": 0.0028758391869611374, "phrase": "libgals_runtime_library"}, {"score": 0.002612640527241776, "phrase": "complex_embedded_system"}, {"score": 0.0025051811853674215, "phrase": "multiprocessor_platforms"}, {"score": 0.0023592715993204796, "phrase": "multiprocessor_and_multicore_systems"}, {"score": 0.0022486729928886885, "phrase": "standard_systemc._results"}, {"score": 0.0022085455097790537, "phrase": "simulation_models"}, {"score": 0.0021561514733516676, "phrase": "simulation_performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "multicore_platforms"}], "paper_keywords": ["System-level design", " libGALS", " SystemC", " SystemJ", " GALS", " simulation", " implementation", " globally asynchronous", " locally synchronous", " software concurrency", " specification", " modeling"], "paper_abstract": "GALS-Designer is a framework for the design of software systems which comply with the formal Globally Asynchronous Locally Synchronous model of computation (GALS). Those systems consist of single or multiple GALS programs and their immediate environment, which can be other programs and any other modules described in SystemC. The framework integrates our libGALS library for writing GALS programs and SystemC. It enables modeling and simulation of single and multiple GALS programs within the single SystemC executable model on the host (simulation) operating system. The same GALS programs can then be run without SystemC on a target operating system for which the libGALS runtime library is available. The use of the GALS-Designer is demonstrated on an example of a complex embedded system. As libGALS can execute on multiprocessor platforms both the simulation and target models of the GALS system can take advantage of multiprocessor and multicore systems, which is not possible when using standard SystemC. Results of running simulation models of GALS programs demonstrate simulation performance improvement when executing on multicore platforms.", "paper_title": "GALS-Designer: A Design Framework for GALS Software Systems", "paper_id": "WOS:000297137800003"}