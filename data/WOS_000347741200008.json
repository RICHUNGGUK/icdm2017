{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "javascript"}, {"score": 0.004298134888203576, "phrase": "multiple_inheritance"}, {"score": 0.004217537792708984, "phrase": "object_composition"}, {"score": 0.0036707250689857348, "phrase": "javascript's_recently_added_meta-level_object_description_format"}, {"score": 0.0032556926399045635, "phrase": "similar_libraries"}, {"score": 0.0031544754107802413, "phrase": "built-in_primitives"}, {"score": 0.002905752244360772, "phrase": "high-integrity\"_objects"}, {"score": 0.0026597250663309385, "phrase": "web_content"}, {"score": 0.0025933275734892508, "phrase": "mutually_suspicious_scripts"}, {"score": 0.002373690110881497, "phrase": "operational_semantics"}, {"score": 0.002228263890334039, "phrase": "core_functionality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v.all_rights"}], "paper_keywords": ["Traits", " ixins", " Javascript", " ECMAScript 5"], "paper_abstract": "We introduce traits. is, a small, portable trait composition library for Javascript. Traits are a more robust alternative to multiple inheritance and enable object composition and reuse. traits, is is motivated by two goals: first, it is an experiment in using and extending Javascript's recently added meta-level object description format. By reusing this standard description format, traits. j s can be made more interoperable with similar libraries, and even with built-in primitives. Second, traits. is makes it convenient to create \"high-integrity\" objects whose integrity cannot be violated by clients, an important property when web content is composed from mutually suspicious scripts. We describe the design of traits. j s and provide an operational semantics for TRAITS-JS, a minimal calculus that models the core functionality of the library. (C) 2012 Elsevier B.V.All rights reserved.", "paper_title": "Robust trait composition for Javascript", "paper_id": "WOS:000347741200008"}