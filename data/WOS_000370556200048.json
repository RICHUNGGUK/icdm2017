{"auto_keywords": [{"score": 0.02803093454138703, "phrase": "near-equivalent_levels"}, {"score": 0.00481495049065317, "phrase": "alternative_trust_sources"}, {"score": 0.004736045157669388, "phrase": "dnssec_signature_verification_operations"}, {"score": 0.004684157900507474, "phrase": "tls._dnssec"}, {"score": 0.004408729661992651, "phrase": "provable_security"}, {"score": 0.00433645229352341, "phrase": "domain_names"}, {"score": 0.004195418010131832, "phrase": "public_key_infrastructure"}, {"score": 0.003970439654470374, "phrase": "significant_overhead"}, {"score": 0.0039053241364430014, "phrase": "dnssec"}, {"score": 0.003841263262252044, "phrase": "certificate_chains"}, {"score": 0.00379914165379475, "phrase": "signed_dns_messages"}, {"score": 0.003757480190200645, "phrase": "extra_computation"}, {"score": 0.003675517796014622, "phrase": "remote_resolvers"}, {"score": 0.0036352070472201086, "phrase": "additional_transfers"}, {"score": 0.003555902292752528, "phrase": "added_latency"}, {"score": 0.0034975571855450343, "phrase": "dns_query_path"}, {"score": 0.00327356326590461, "phrase": "practical_security"}, {"score": 0.0031845067058084583, "phrase": "certificate_chain"}, {"score": 0.0027742959101979296, "phrase": "dns"}, {"score": 0.0023900527169254744, "phrase": "reputation_system"}, {"score": 0.0022994427535192492, "phrase": "dnssec_responses"}, {"score": 0.0021049977753042253, "phrase": "compromised_resolvers"}], "paper_keywords": [""], "paper_abstract": "DNSSEC has been in development for 20 years. It provides for provable security when retrieving domain names through the use of a public key infrastructure (PKI). Unfortunately, there is also significant overhead involved with DNSSEC: verifying certificate chains of signed DNS messages involves extra computation, queries to remote resolvers, additional transfers, and introduces added latency into the DNS query path. We pose the question: is it possible to achieve practical security without always verifying this certificate chain if we use a different, outside source of trust between resolvers? We believe we can. Namely, by using a long-lived, mutually authenticated TLS connection between pairs of DNS resolvers, we suggest that we can maintain near-equivalent levels of security with very little extra overhead compared to a non-DNSSEC enabled resolver. By using a reputation system or probabilistically verifying a portion of DNSSEC responses would allow for near-equivalent levels of security to be reached, even in the face of compromised resolvers.", "paper_title": "Alternative Trust Sources: Reducing DNSSEC Signature Verification Operations with TLS", "paper_id": "WOS:000370556200048"}