{"auto_keywords": [{"score": 0.04962913836247387, "phrase": "total_completion_time"}, {"score": 0.015719716506582538, "phrase": "total_flow_time"}, {"score": 0.015428814625146352, "phrase": "immediate_dispatching"}, {"score": 0.007889476399340893, "phrase": "optimal_migratory_offline_algorithm"}, {"score": 0.004422632150619634, "phrase": "multiprocessor_setting"}, {"score": 0.004299064805926241, "phrase": "job_migration"}, {"score": 0.003930000775297499, "phrase": "previous_studies"}, {"score": 0.0035755653799043, "phrase": "scheduling_algorithm"}, {"score": 0.003410479630045025, "phrase": "different_machine"}, {"score": 0.003102752392819577, "phrase": "central_queue"}, {"score": 0.003073545175760353, "phrase": "unassigned_jobs"}, {"score": 0.003015950477134494, "phrase": "\"no_option"}, {"score": 0.00297346171320082, "phrase": "large_computing_systems"}, {"score": 0.0028360962841331634, "phrase": "simple_online_non-migratory_algorithm"}, {"score": 0.0028227145996946104, "phrase": "imd"}, {"score": 0.002437645786158106, "phrase": "logarithmic_factor"}, {"score": 0.002281376328251423, "phrase": "small_constant_factor"}, {"score": 0.0021351033500114735, "phrase": "open_problem"}, {"score": 0.0021049977753042253, "phrase": "awerbuch_et_al"}], "paper_keywords": ["online", " competitive", " flow time", " completion time", " dispatching", " migration", " scheduling"], "paper_abstract": "We consider the problem of scheduling jobs arriving over time in a multiprocessor setting, with immediate dispatching, disallowing job migration. The goal is to minimize both the total flow time (total time in the system) and the total completion time. Previous studies have shown that while preemption (interrupt a job and later continue its execution) is inherent to make a scheduling algorithm efficient, migration (continue the execution on a different machine) is not. Still, the current non-migratory online algorithms suffer from a need for a central queue of unassigned jobs which is a \"no option\" in large computing systems, such as the Web. We introduce a simple online non-migratory algorithm IMD, which employs immediate dispatching, i.e., it immediately assigns released jobs to one of the machines. We show that the performance of this algorithm is within a logarithmic factor of the optimal migratory offline algorithm, with respect to the total flow time, and within a small constant factor of the optimal migratory offline algorithm, with respect to the total completion time. This solves an open problem suggested by Awerbuch et al. (STOC 99).", "paper_title": "Minimizing total flow time and total completion time with immediate dispatching", "paper_id": "WOS:000244834400004"}