{"auto_keywords": [{"score": 0.047667240890459914, "phrase": "hierarchical_data"}, {"score": 0.04026893024653011, "phrase": "dynamic_use_cases"}, {"score": 0.00481495049065317, "phrase": "highly_dynamic_hierarchical_data"}, {"score": 0.00443308765153716, "phrase": "relational_database_system"}, {"score": 0.004297795905522757, "phrase": "important_task"}, {"score": 0.0037188360359702182, "phrase": "high_rate"}, {"score": 0.00226322835801988, "phrase": "competitive_query_performance"}, {"score": 0.0022168460543913787, "phrase": "unprecedented_update_efficiency"}, {"score": 0.0021049977753042253, "phrase": "highly_dynamic_workloads"}], "paper_keywords": [""], "paper_abstract": "Maintaining and querying hierarchical data in a relational database system is an important task in many business applications. This task is especially challenging when considering dynamic use cases with a high rate of complex, possibly skewed structural updates. Labeling schemes are widely considered the indexing technique of choice for hierarchical data, and many different schemes have been proposed. However, they cannot handle dynamic use cases well due to various problems which we investigate in this paper. We therefore propose our dynamic Order Indexes, which offer competitive query performance, unprecedented update efficiency, and robustness for highly dynamic workloads.", "paper_title": "Indexing Highly Dynamic Hierarchical Data", "paper_id": "WOS:000362282500003"}