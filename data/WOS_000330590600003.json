{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ant_colony"}, {"score": 0.004637478829869904, "phrase": "unrelated_parallel_machines-part_ii"}, {"score": 0.004466519142879166, "phrase": "previous_paper"}, {"score": 0.003953068310598579, "phrase": "schedule's_makespan"}, {"score": 0.003916098498242888, "phrase": "unrelated_parallel_machines"}, {"score": 0.0038794730876377057, "phrase": "sequence-dependent_setup_times"}, {"score": 0.003789395499639015, "phrase": "small_instances"}, {"score": 0.0036324746826127997, "phrase": "mixed_integer_program"}, {"score": 0.003548111729206587, "phrase": "larger_instances"}, {"score": 0.0032756158688245, "phrase": "reasonable_computational_times"}, {"score": 0.003229741076887148, "phrase": "i's_performance"}, {"score": 0.003081400693055518, "phrase": "tabu_search"}, {"score": 0.002995677265350124, "phrase": "randomized_priority_search"}, {"score": 0.0027139447110929586, "phrase": "better_performance"}, {"score": 0.002447101794397243, "phrase": "enhanced_aco"}, {"score": 0.0023678143146455017, "phrase": "aco_ii"}, {"score": 0.002280333649167796, "phrase": "new_algorithms"}, {"score": 0.0022273034991008326, "phrase": "metaraps"}, {"score": 0.002196081177740382, "phrase": "sa."}, {"score": 0.0021755038991725147, "phrase": "extensive_and_expanded_experiments"}, {"score": 0.0021049977753042253, "phrase": "enhanced_aco_ii."}], "paper_keywords": ["Scheduling", " Unrelated parallel machine", " Sequence-dependent setup times", " Ant Colony optimization"], "paper_abstract": "In a previous paper (Arnaout et al in J Intell Manuf 21:693-701, 2010), an Ant Colony optimization (ACO I) algorithm was introduced for minimizing the schedule's makespan on unrelated parallel machines with sequence-dependent setup times. Optimal solutions for small instances of this problem were obtained by solving a mixed integer program. However, for larger instances (up to 10 machines and 120 jobs), heuristic and approximate algorithms were necessary to reach solutions in reasonable computational times. ACO I's performance was evaluated by comparing its solutions to solutions obtained using Tabu Search and MetaRaPS (metaheuristic for Randomized Priority Search). While the results indicated that ACO I outperformed the other heuristics, it also showed that MetaRaPS had a better performance when all ratios of N/M (jobs to machines ratio) were considered. In this paper, we introduce an enhanced ACO which will be referred to as ACO II and compare its performance to other existing and new algorithms including ACO I, MetaRaPS, and SA. The extensive and expanded experiments conducted prove the superiority of the enhanced ACO II.", "paper_title": "A two-stage Ant Colony optimization algorithm to minimize the makespan on unrelated parallel machines-part II: enhancements and experimentations", "paper_id": "WOS:000330590600003"}