{"auto_keywords": [{"score": 0.04958720442967606, "phrase": "particle_filters"}, {"score": 0.00481495049065317, "phrase": "embedded_computer_vision_systems"}, {"score": 0.004732785510739708, "phrase": "particle_filtering_methods"}, {"score": 0.004668059458774745, "phrase": "significant_importance"}, {"score": 0.004588389551682397, "phrase": "embedded_computer_vision_applications"}, {"score": 0.004494570360108983, "phrase": "smart_camera_systems"}, {"score": 0.004463723624910583, "phrase": "object_tracking"}, {"score": 0.0043875257506180865, "phrase": "particle_filter"}, {"score": 0.004372442291178139, "phrase": "based_tracking_algorithms"}, {"score": 0.004327500975159818, "phrase": "promising_results"}, {"score": 0.004297795905522757, "phrase": "robust_tracking_performance"}, {"score": 0.004209893377338457, "phrase": "vast_amount"}, {"score": 0.004180992206290323, "phrase": "computational_complexity"}, {"score": 0.003929613937944779, "phrase": "common_characteristics"}, {"score": 0.0037704502704526996, "phrase": "key_system_parameters"}, {"score": 0.0033767221949228834, "phrase": "fast_and_efficient_reuse"}, {"score": 0.0033190180867511605, "phrase": "minimal_re-design_effort"}, {"score": 0.0032510690712452147, "phrase": "particle_filtering_applications"}, {"score": 0.0032065418360603293, "phrase": "implementation_platforms"}, {"score": 0.0031193028729331667, "phrase": "different_design_options"}, {"score": 0.0030659842174709656, "phrase": "field-programmable_gate_arrays"}, {"score": 0.0030031998605136788, "phrase": "first_two_applications"}, {"score": 0.002962057398690244, "phrase": "one-dimensional_state_transition_models"}, {"score": 0.002881450787481037, "phrase": "key_features"}, {"score": 0.0028321862184182913, "phrase": "main_focus"}, {"score": 0.0027741761880779535, "phrase": "design_methodology"}, {"score": 0.002736162634990377, "phrase": "multi-dimensional_particle_filter_application"}, {"score": 0.002670884656785558, "phrase": "third_application"}, {"score": 0.002580315755140875, "phrase": "multi-dimensional_particle_filtering_application"}, {"score": 0.0024842242921857705, "phrase": "limited_hardware_resources"}, {"score": 0.002302619021497886, "phrase": "efficient_design"}, {"score": 0.002255431275670053, "phrase": "different_memory_management_schemes"}, {"score": 0.0021490449563443025, "phrase": "execution_speed"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Design space exploration", " Particle filters", " Reconfigurable platforms"], "paper_abstract": "Particle filtering methods are gradually attaining significant importance in a variety of embedded computer vision applications. For example, in smart camera systems, object tracking is a very important application and particle filter based tracking algorithms have shown promising results with robust tracking performance. However, most particle filters involve vast amount of computational complexity, thereby intensifying the challenges faced in their real-time, embedded implementation. Many of these applications share common characteristics, and the same system design can be reused by identifying and varying key system parameters and varying them appropriately. In this paper, we present a System-on-Chip (SoC) architecture involving both hardware and software components for a class of particle filters. The framework uses parameterization to enable fast and efficient reuse of the architecture with minimal re-design effort for a wide range of particle filtering applications as well as implementation platforms. Using this framework, we explore different design options for implementing three different particle filtering applications on field-programmable gate arrays (FPGAs). The first two applications involve particle filters with one-dimensional state transition models, and are used to demonstrate the key features of the framework The main focus of this paper is on design methodology for hardware/software implementation of multi-dimensional particle filter application and we explore this in the third application which is a 3D facial pose tracking system for videos. In this multi-dimensional particle filtering application, we extend our proposed architecture with models for hardware/software co-design so that limited hardware resources can be utilized most effectively. Our experiments demonstrate that the framework is easy and intuitive to use, while providing for efficient design and implementation. We present different memory management schemes along with results on trade-offs between area (FPGA resource requirement) and execution speed. (c) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Design and implementation of embedded computer vision systems based on particle filters", "paper_id": "WOS:000283834900008"}