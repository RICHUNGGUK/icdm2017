{"auto_keywords": [{"score": 0.04937176974353987, "phrase": "ad_hoc_interaction"}, {"score": 0.04581394571995767, "phrase": "advance_knowledge"}, {"score": 0.031404389133350745, "phrase": "guided_interaction"}, {"score": 0.00481495049065317, "phrase": "incremental_revelation"}, {"score": 0.00477924690801092, "phrase": "software_interfaces"}, {"score": 0.004570491683870396, "phrase": "web_services"}, {"score": 0.004258372598568333, "phrase": "pre-programmed_calls"}, {"score": 0.0039380388343479384, "phrase": "mobile_devices"}, {"score": 0.003865376734263166, "phrase": "rich_dynamic_environments"}, {"score": 0.0037658881407605445, "phrase": "necessary_knowledge"}, {"score": 0.003696390664266446, "phrase": "unplanned_ad_hoc_interaction"}, {"score": 0.0034954725617970294, "phrase": "programmatic_service_interfaces"}, {"score": 0.0034695189961509625, "phrase": "interaction_sequences"}, {"score": 0.003367611042980526, "phrase": "different_resources"}, {"score": 0.0033426036530090205, "phrase": "diverse_competencies"}, {"score": 0.003280891942617853, "phrase": "newly_discovered_services"}, {"score": 0.0031140747752837826, "phrase": "context_sensitive_error_reporting"}, {"score": 0.0030225753906647935, "phrase": "service_interaction_mechanism"}, {"score": 0.0028903278985330117, "phrase": "prior_knowledge"}, {"score": 0.0028688545415450407, "phrase": "programmatic_interfaces"}, {"score": 0.0028053842615436706, "phrase": "successful_outcome"}, {"score": 0.0027331033178323145, "phrase": "core_computing_primitives"}, {"score": 0.0026826140171754675, "phrase": "dialogue_model"}, {"score": 0.002613487968156893, "phrase": "first_part"}, {"score": 0.00247128526955136, "phrase": "second_part"}, {"score": 0.002398627220761343, "phrase": "interaction_plans"}, {"score": 0.002276566401216226, "phrase": "flexible_way"}, {"score": 0.0021049977753042253, "phrase": "exchange_language"}], "paper_keywords": [""], "paper_abstract": "At present, most of the interest in web services is focussed on pre-planned B2B interaction. Clients interact with services using advance knowledge of the the data and sequence requirements of the service and pre-programmed calls to their interfaces. This type of interaction cannot be used for ad hoc interaction between services and their clients such as mobile devices moving in and around rich dynamic environments because they may not have the necessary knowledge in advance. For unplanned ad hoc interaction an interaction mechanism is required that does not require clients to have advance knowledge of programmatic service interfaces and interaction sequences. The mechanism must ensure clients with different resources and diverse competencies can successfully interact with newly discovered services by providing assistance such as disambiguation of terminology, alternative types of inputs, and context sensitive error reporting when necessary. This paper introduces a service interaction mechanism called guided interaction. Guided interaction is designed to enable clients without prior knowledge of programmatic interfaces to be assisted to a successful outcome. The mechanism is grounded in core computing primitives and based on a dialogue model. Guided interaction has two parts, the first part is a language for the exchange of information between services and their clients. The second part is a language for services to create interaction plans that allow them to gather the data they require from clients in a flexible way with the provision of assistance when necessary. An interpreter uses the plan to generate and interpret messages in the exchange language and to manage the path of the dialogue.", "paper_title": "Guided interaction: A language and method for incremental revelation of software interfaces for ad hoc interaction", "paper_id": "WOS:000236884100001"}