{"auto_keywords": [{"score": 0.03208723958700832, "phrase": "transformed_graph"}, {"score": 0.03163537021432405, "phrase": "candidate_path"}, {"score": 0.02543273295845106, "phrase": "candidate_path_generation"}, {"score": 0.00481495049065317, "phrase": "holistic_top-k"}, {"score": 0.00468344330752583, "phrase": "graphs"}, {"score": 0.004498213310668266, "phrase": "group_relationship_analysis"}, {"score": 0.00436890075128947, "phrase": "new_operation"}, {"score": 0.004081385289516914, "phrase": "top-k_simple_shortest_paths"}, {"score": 0.00386876598761639, "phrase": "top-k_simple_paths"}, {"score": 0.003685067218455088, "phrase": "holistic_join_method"}, {"score": 0.003614044704141927, "phrase": "top-k_path"}, {"score": 0.0035443861412929006, "phrase": "constrained_top-k_simple_shortest_paths"}, {"score": 0.003392507399258166, "phrase": "efficient_method"}, {"score": 0.0033271045779740683, "phrase": "latter_problem"}, {"score": 0.0031536550157613974, "phrase": "precomputed_shortest_paths"}, {"score": 0.003107935254560724, "phrase": "target_node"}, {"score": 0.0026986685585382347, "phrase": "original_graph"}, {"score": 0.002545468362709126, "phrase": "precomputed_results"}, {"score": 0.002424450174817922, "phrase": "join_constraint"}, {"score": 0.002297949552105756, "phrase": "search_space"}, {"score": 0.002231747358665628, "phrase": "adaptively_determined_threshold"}, {"score": 0.002199363362666037, "phrase": "final_extensive_experimental_results"}, {"score": 0.002125612498781805, "phrase": "significant_performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "existing_ones"}], "paper_keywords": ["Graph", " shortest path", " join", " Top-K"], "paper_abstract": "Motivated by the needs such as group relationship analysis, this paper introduces a new operation on graphs, named top-k path join, which discovers the top-k simple shortest paths between two given node sets. Rather than discovering the top-k simple paths between each node pair, this paper proposes a holistic join method which answers the top-k path join by finding constrained top-k simple shortest paths between two nodes, and then devises an efficient method to handle the latter problem. Specifically, we transform the graph by encoding the precomputed shortest paths to the target node, and use the transformed graph in the candidate path searching. We show that the candidate path searching on the transformed graph not only has the same result as that on the original graph but also can be terminated much earlier with the aid of precomputed results. We also discuss two other optimization strategies, including considering the join constraint in the candidate path generation as early as possible, and pruning search space in each candidate path generation with an adaptively determined threshold. The final extensive experimental results also show that our method offers a significant performance improvement over existing ones.", "paper_title": "Holistic Top-k Simple Shortest Path Join in Graphs", "paper_id": "WOS:000300662500007"}