{"auto_keywords": [{"score": 0.038585994510800935, "phrase": "yarp"}, {"score": 0.00481495049065317, "phrase": "long-lived_robot_genes"}, {"score": 0.004758053266234474, "phrase": "evolutionary_dead_ends"}, {"score": 0.004618720776729413, "phrase": "humanoid_robotics"}, {"score": 0.004555096191993042, "phrase": "avid_appetite"}, {"score": 0.0045370785151713396, "phrase": "novel_devices"}, {"score": 0.00449234410381824, "phrase": "great_deal"}, {"score": 0.004052358316137446, "phrase": "hardware_designs"}, {"score": 0.003902532628265557, "phrase": "new_projects"}, {"score": 0.0037359312167652117, "phrase": "yarp_robot_software_architecture"}, {"score": 0.0036990665564329136, "phrase": "paul_fitzpatrick"}, {"score": 0.00368442237104581, "phrase": "lorenzo_natale"}, {"score": 0.0036408354779365643, "phrase": "robot_platform"}, {"score": 0.0036049057885393014, "phrase": "advanced_robotics_systems"}, {"score": 0.0034578191978753997, "phrase": "loose_coupling"}, {"score": 0.0034236894037643017, "phrase": "gradual_system_evolution"}, {"score": 0.003303578511521704, "phrase": "data_flow"}, {"score": 0.003251552926963083, "phrase": "underlying_networks"}, {"score": 0.0031939996970411027, "phrase": "long_term"}, {"score": 0.003125034135647482, "phrase": "device_drivers"}, {"score": 0.003009390313137981, "phrase": "basic_interoperation"}, {"score": 0.0029327337678718133, "phrase": "socket_library"}, {"score": 0.002915322108104089, "phrase": "maximally_efficient_interoperation"}, {"score": 0.0028808074000049705, "phrase": "documented_protocols"}, {"score": 0.0028354207806133153, "phrase": "first_things"}, {"score": 0.0027304649245647053, "phrase": "strategic_utility"}, {"score": 0.0027142508672031982, "phrase": "social_contract"}, {"score": 0.002650349217351483, "phrase": "chris_dibona"}, {"score": 0.002639845784408318, "phrase": "sam_ockman"}, {"score": 0.002629383867221964, "phrase": "mark_stone"}, {"score": 0.002618977596002679, "phrase": "eds"}, {"score": 0.002567475098612861, "phrase": "open_source_revolution"}, {"score": 0.0025370791758025065, "phrase": "cambridge"}, {"score": 0.0024921297928119, "phrase": "small_communities"}, {"score": 0.0024822518287767508, "phrase": "idiosyncratic_requirements"}, {"score": 0.002310980435492671, "phrase": "j._santos-victor"}, {"score": 0.0023018188296933923, "phrase": "a.j._ijspeert"}, {"score": 0.0022926934605218712, "phrase": "m.c._carrozza"}, {"score": 0.002283604185312917, "phrase": "d.g._caldwell"}, {"score": 0.0022386942642576083, "phrase": "open_humanoid_platform"}, {"score": 0.002229818587867775, "phrase": "cognitive_and_neuroscience_research"}, {"score": 0.0022121724291200096, "phrase": "advanced_robotics"}, {"score": 0.0021600656172287244, "phrase": "free_and_open_licence"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["humanoid robotics", " free software", " device drivers", " ICub humanoid", " YARP"], "paper_abstract": "Robot projects are often evolutionary dead ends, with the software and hardware they produce disappearing without trace afterwards. In humanoid robotics, a small field with an avid appetite for novel devices, we experience a great deal of \"churn\" of this nature. In this paper, we explore how best to make our projects stable and long-lasting, without compromising our ability to constantly change our sensors, actuators, processors and networks. We also look at how to encourage the propagation and evolution of hardware designs, so that we can start to build up a \"gene-pool\" of material to draw upon for new projects. We advance on two fronts, software and hardware. For some time, we have been developing and using the YARP robot software architecture [Giorgio Metta, Paul Fitzpatrick, Lorenzo Natale, YARP: Yet another robot platform, International Journal on Advanced Robotics Systems 3 (2006) 43-48], which helps organize communication between sensors, processors, and actuators so that loose coupling is encouraged, making gradual system evolution much easier. YARP includes a model of communication that is transport-neutral, so that data flow is decoupled from the details of the underlying networks and protocols in use. Importantly for the long term, YARP is designed to play well with other architectures. Device drivers written for YARP can be ripped out and used without any \"middleware\". On the network, basic interoperation is possible with a few lines of code in any language with a socket library, and maximally efficient interoperation can be achieved by following documented protocols. These features are not normally the first things that end-users look for when starting a project, but they are crucial for longevity. We emphasize the strategic utility of the Free Software social contract [B. Perens, The open source definition, in: Chris DiBona, Sam Ockman, Mark Stone (Eds.), Open Sources: Voices from the Open Source Revolution, O'Reilly and Associates, Cambridge, MA, 19991 to software development for small communities with idiosyncratic requirements. We also work to expand our community by releasing the design of our ICub humanoid [N.G. Tsagarakis, G. Metta, G. Sandini, D. Vernon, R. Beira, F. Becchi, L. Righetti, J. Santos-Victor, A.J. Ijspeert, M.C. Carrozza, D.G. Caldwell, iCub - The design and realization of an open humanoid platform for cognitive and neuroscience research, Journal of Advanced Robotics 21 (10) (2007) 1151-1175] under a free and open licence, and funding development using this platform. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Towards long-lived robot genes", "paper_id": "WOS:000252938300004"}