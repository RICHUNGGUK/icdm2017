{"auto_keywords": [{"score": 0.042078324571925355, "phrase": "query_complexity"}, {"score": 0.03969412350246243, "phrase": "canonical_tester"}, {"score": 0.014498638144019728, "phrase": "triangle-free_function"}, {"score": 0.012898193905923457, "phrase": "constant_probability"}, {"score": 0.010740152628430137, "phrase": "green"}, {"score": 0.00481495049065317, "phrase": "boolean_functions"}, {"score": 0.004757017456572827, "phrase": "boolean_function"}, {"score": 0.003907212558276185, "phrase": "triangle-free_functions"}, {"score": 0.0030200001822966965, "phrase": "fox"}, {"score": 0.0024423826953133844, "phrase": "n_variables"}, {"score": 0.0021896891011033105, "phrase": "corresponding_canonical_tester"}, {"score": 0.0021371774747471033, "phrase": "one-sided_tester"}], "paper_keywords": ["Property testing", " query lower bounds", " Boolean function triangles"], "paper_abstract": "Given a Boolean function , we say a triple (x, y, x + y) is a triangle in f if . A triangle-free function contains no triangle. If f differs from every triangle-free function on at least points, then f is said to be -far from triangle-free. In this work, we analyze the query complexity of testers that, with constant probability, distinguish triangle-free functions from those -far from triangle-free. Let the canonical tester for triangle-freeness denotes the algorithm that repeatedly picks x and y uniformly and independently at random from , queries f(x), f(y) and f(x + y), and checks whether f(x) = f(y) = f(x + y) = 1. Green showed that the canonical tester rejects functions -far from triangle-free with constant probability if its query complexity is a tower of 2's whose height is polynomial in . Fox later improved the height of the tower in Green's upper bound to . A trivial lower bound of on the query complexity is immediate. In this paper, we give the first non-trivial lower bound for the number of queries needed. We show that, for every small enough , there exists an integer such that for all there exists a function depending on all n variables which is -far from being triangle-free and requires queries for the canonical tester. We also show that the query complexity of any general (possibly adaptive) one-sided tester for triangle-freeness is at least square root of the query complexity of the corresponding canonical tester. Consequently, this means that any one-sided tester for triangle-freeness must make at least queries.", "paper_title": "Lower bounds for testing triangle-freeness in Boolean functions", "paper_id": "WOS:000351224100003"}