{"auto_keywords": [{"score": 0.0497377294589231, "phrase": "internet_servers"}, {"score": 0.02032271653139655, "phrase": "secure_os"}, {"score": 0.016798236445843086, "phrase": "initialization_phase"}, {"score": 0.00722341843422493, "phrase": "protocol_processing_phase"}, {"score": 0.006846946969481476, "phrase": "access_control"}, {"score": 0.006513180633424704, "phrase": "remote_attacks"}, {"score": 0.005625902568677952, "phrase": "policy_rules"}, {"score": 0.00481495049065317, "phrase": "security_policy_size"}, {"score": 0.004746558955503364, "phrase": "secure_operating_systems"}, {"score": 0.004695900553353526, "phrase": "operating_systems"}, {"score": 0.004466519142879166, "phrase": "unauthorized_access"}, {"score": 0.004340488340181084, "phrase": "security_policy"}, {"score": 0.004248294537944227, "phrase": "least_privilege"}, {"score": 0.004055176557424983, "phrase": "remote_attackers"}, {"score": 0.003829455440282146, "phrase": "novel_scheme"}, {"score": 0.0037480753312398754, "phrase": "security_policy_descriptions"}, {"score": 0.0036422425344358037, "phrase": "entire_system"}, {"score": 0.0031335830806256777, "phrase": "key_observation"}, {"score": 0.002647890142618442, "phrase": "access-control_policy"}, {"score": 0.002447101794397243, "phrase": "security_policies"}, {"score": 0.002369434858710495, "phrase": "pop"}, {"score": 0.0021049977753042253, "phrase": "existing_selinux_policy"}], "paper_keywords": ["secure operating system", " SELinux", " Internet server", " policy description"], "paper_abstract": "Secure operating systems (secure OSes) are widely used to limit the damage caused by unauthorized access to Internet servers. However, writing a security policy based on the principle of least privilege for a secure OS is a challenge for an administrator. Considering that remote attackers can never attack a server before they establish connections to it, we propose a novel scheme that exploits phases to simplify security policy descriptions for Internet servers. In our scheme, the entire system has two execution phases: an initialization phase and a protocol processing phase. The initialization phase is defined as the phase before the server establishes connections to its clients, and the protocol processing phase is defined as the phase after it establishes connections. The key observation is that access control should be enforced by the secure OS only in the protocol processing phase to defend against remote attacks. Since remote attacks cannot be launched in the initialization phase. a secure OS is not required to enforce access control in this phase. Thus, we can omit the access-control policy in the initialization phase, which effectively reduces the number of policy rules. To prove the effectiveness of our scheme, we wrote security policies for three kinds of Internet servers (HTTP. SMTR and POP servers). Our experimental results demonstrate that our scheme effectively reduces the number of descriptions; it eliminates 47.2%, 27.5%, and 24.0% of policy rules for HTTP, SMTP, and POP servers, respectively, compared with an existing SELinux policy that includes the initialization of the server.", "paper_title": "Reducing Security Policy Size for Internet Servers in Secure Operating Systems", "paper_id": "WOS:000272773300003"}