{"auto_keywords": [{"score": 0.047929617715279135, "phrase": "context_sensitivity"}, {"score": 0.03973761244758953, "phrase": "heap_abstraction"}, {"score": 0.00481495049065317, "phrase": "empirical_study"}, {"score": 0.004723742646716804, "phrase": "subset-based_points"}, {"score": 0.004563880494020726, "phrase": "java_benchmarks"}, {"score": 0.004529093447865156, "phrase": "significant_size"}, {"score": 0.004409404470207072, "phrase": "call_site_strings"}, {"score": 0.004359078118356132, "phrase": "context_abstraction"}, {"score": 0.0043258453436258405, "phrase": "object_sensitivity"}, {"score": 0.004260134699483774, "phrase": "bdd-based_context-sensitive_algorithm"}, {"score": 0.004211591186931298, "phrase": "zhu"}, {"score": 0.004179392391349015, "phrase": "calman"}, {"score": 0.004115899653938541, "phrase": "whaley"}, {"score": 0.004084558750302254, "phrase": "lam"}, {"score": 0.0034777887763821425, "phrase": "client_analyses"}, {"score": 0.003398780792129312, "phrase": "efficient_analysis_implementations"}, {"score": 0.003246091321090681, "phrase": "distinct_contexts"}, {"score": 0.0031723302551782324, "phrase": "distinct_points"}, {"score": 0.00307657476125683, "phrase": "context_sensitivity_variation"}, {"score": 0.002938317647182056, "phrase": "call_graph"}, {"score": 0.0028170314398963704, "phrase": "devirtualizable_call_sites"}, {"score": 0.0026191799769765085, "phrase": "object-sensitive_analysis_implementations"}, {"score": 0.002482320290902079, "phrase": "object-sensitive_analyses"}, {"score": 0.002435190484324197, "phrase": "comparable_variations"}, {"score": 0.0022815262950738814, "phrase": "context_strings"}, {"score": 0.002204252995814406, "phrase": "java"}, {"score": 0.0021049977753042253, "phrase": "cyclic_regions"}], "paper_keywords": [""], "paper_abstract": "We present the results of an empirical study evaluating the precision of subset-based points-to analysis with several variations of context sensitivity on Java benchmarks of significant size. We compare the use of call site strings as the context abstraction, object sensitivity, and the BDD-based context-sensitive algorithm proposed by Zhu and Calman, and by Whaley and Lam, Our study includes analyses that context-sensitively specialize only pointer variables, as well as ones that also specialize the heap abstraction. We measure both characteristics of the points-to sets themselves, as well as effects on the precision of client analyses. To guide development of efficient analysis implementations, we measure the number of contexts, the number of distinct contexts, and the number of distinct points-to sets that arise with each context sensitivity variation. To evaluate precision, we measure the size of the call graph in terms of methods and edges, the number of devirtualizable call sites, and the number of casts statically provable to be safe. The results of our study indicate that object-sensitive analysis implementations are likely to scale better and more predictably than the other approaches; that object-sensitive analyses are more precise than comparable variations of the other approaches; that specializing the heap abstraction improves precision more than extending the length of context strings; and that the profusion of cycles in Java call graphs severely reduces precision of analyses that forsake context sensitivity in cyclic regions.", "paper_title": "Context-sensitive points-to analysis: Is it worth it?", "paper_id": "WOS:000237082300004"}