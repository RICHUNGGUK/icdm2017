{"auto_keywords": [{"score": 0.043322976460317755, "phrase": "conjunction_operator"}, {"score": 0.03916532560301708, "phrase": "naive_preorder"}, {"score": 0.00481495049065317, "phrase": "ready-tree_semantics"}, {"score": 0.004731638279336065, "phrase": "key_problem"}, {"score": 0.004090901264701185, "phrase": "labelled_transition_systems"}, {"score": 0.004020066537823032, "phrase": "basic_intuition"}, {"score": 0.003619993477999133, "phrase": "inconsistent_specification"}, {"score": 0.0034753508746887957, "phrase": "inconsistent_implementation"}, {"score": 0.003415137969569376, "phrase": "main_body"}, {"score": 0.0032406665327678616, "phrase": "largest_precongruence"}, {"score": 0.0030042210975126616, "phrase": "novel_semantics"}, {"score": 0.0028506823968539206, "phrase": "ready_traces"}, {"score": 0.0027687904688616983, "phrase": "ready_simulation"}, {"score": 0.0026580683046325253, "phrase": "induced_ready-tree_preorder"}, {"score": 0.0024072121760839427, "phrase": "paper's_results"}, {"score": 0.002244494905883452, "phrase": "unified_framework"}, {"score": 0.0021297010898172534, "phrase": "process_algebras"}, {"score": 0.0021049977753042253, "phrase": "temporal_logics"}], "paper_keywords": [""], "paper_abstract": "A key problem in mixing operational (e.g., process-algebraic) and declarative (e.g., logical) styles of specification is how to deal with inconsistencies arising when composing processes under conjunction. This paper introduces a conjunction operator on labelled transition systems capturing the basic intuition of \"a and b = false\", and considers a naive preorder that demands that an inconsistent specification can only be refined by an inconsistent implementation. The main body of the paper is concerned with characterising the largest precongruence contained in the naive preorder. This characterisation will be based on a novel semantics called ready-tree semantics, which refines ready traces but is coarser than ready simulation. It is proved that the induced ready-tree preorder is compositional and fully-abstract, and that the conjunction operator indeed reflects conjunction. The paper's results provide a foundation for, and an important step towards a unified framework that allows one to freely mix operators from process algebras and temporal logics.", "paper_title": "Conjunction on processes: Full-abstraction via ready-tree semantics", "paper_id": "WOS:000237082000018"}