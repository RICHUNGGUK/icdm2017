{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "redundancy_repair_efficiency"}, {"score": 0.004392565073466714, "phrase": "embedded-memory_cores"}, {"score": 0.0041316803676012155, "phrase": "raisin"}, {"score": 0.003438058620195309, "phrase": "ra_algorithm's_repair_rate"}, {"score": 0.0029951555610569225, "phrase": "redundancy_structure"}, {"score": 0.0026091594819333654, "phrase": "redundant_elements"}, {"score": 0.002453934333239467, "phrase": "bira_algorithms"}, {"score": 0.0021705796895687864, "phrase": "bisr"}, {"score": 0.0021049977753042253, "phrase": "embedded_memories"}], "paper_keywords": [""], "paper_abstract": "To increase redundancy repair efficiency and thus final yield in embedded-memory cores, we propose Raisin, a redundancy analysis algorithm simulation tool that can calculate an RA algorithm's repair rate, yield, associated memory configuration, and redundancy structure. Raisin lets users easily assess and plan redundant elements and subsequently develop BIRA algorithms and circuits, which are essential for BISR of embedded memories.", "paper_title": "Raisin: Redundancy analysis algorithm simulation", "paper_id": "WOS:000248791600011"}