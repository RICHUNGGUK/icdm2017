{"auto_keywords": [{"score": 0.03620728805533268, "phrase": "soc"}, {"score": 0.005185641011458702, "phrase": "synchronous"}, {"score": 0.004191242654217582, "phrase": "csp"}, {"score": 0.004171891198117439, "phrase": "service_composition"}, {"score": 0.003932654396285872, "phrase": "autonomous_heterogeneous_services"}, {"score": 0.0036450381529042103, "phrase": "particular_task"}, {"score": 0.0034944094552943, "phrase": "new_calculus"}, {"score": 0.0032938942910948096, "phrase": "csp_process_algebra"}, {"score": 0.003131178497790961, "phrase": "verification_techniques"}, {"score": 0.002951444412262927, "phrase": "soc_calculi"}, {"score": 0.0026222551419772867, "phrase": "built-in_buffers"}, {"score": 0.002556625752785268, "phrase": "direct_asynchronous_communications"}, {"score": 0.002450864311898833, "phrase": "operational_semantics"}, {"score": 0.0021049977753042253, "phrase": "asynchronous_communications"}], "paper_keywords": ["asynchrony", " CSP", " asynchronous calculi", " buffers", " SOC calculi"], "paper_abstract": "Service Oriented Computing (SOC) is based on service composition, that is, loosely coupled autonomous heterogeneous services, which are collectively composed to implement a particular task. We develop a new calculus for SOC within the framework of CSP process algebra, aiming to improve the verification techniques and to enhance the expressiveness of SOC calculi. This paper presents the part of the calculus that extends CSP with built-in buffers to facilitate direct asynchronous communications. We provide the operational semantics of the calculus and extend the FDR (a CSP model checker) by implementing functions for asynchronous communications.", "paper_title": "Enabling Synchronous and Asynchronous Communications in CSP for SOC", "paper_id": "WOS:000357615500005"}