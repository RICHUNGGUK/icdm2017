{"auto_keywords": [{"score": 0.039356982695209576, "phrase": "register_allocation"}, {"score": 0.00481495049065317, "phrase": "latch-based_architectures"}, {"score": 0.004777917315737992, "phrase": "level-sensitive_latches"}, {"score": 0.00468656988857138, "phrase": "high-performance_custom_designs"}, {"score": 0.004491678520807451, "phrase": "application-specific_integrated_circuits"}, {"score": 0.004222515162635615, "phrase": "high-level_synthesis"}, {"score": 0.0036884198249734863, "phrase": "extra_conflicts"}, {"score": 0.003562322256892338, "phrase": "control_synthesis"}, {"score": 0.0034538466642399976, "phrase": "latch-based_data-path"}, {"score": 0.003111472132927442, "phrase": "operation_schedule"}, {"score": 0.00297037471252423, "phrase": "register_conflict_graph"}, {"score": 0.0028576796380512157, "phrase": "clock_duty_cycle"}, {"score": 0.0027813397260607487, "phrase": "tighter_schedule"}, {"score": 0.0027175263159330523, "phrase": "optimization_procedures"}, {"score": 0.0025842289219860795, "phrase": "benchmark_designs"}, {"score": 0.002410363090950055, "phrase": "conventional_hls"}, {"score": 0.0021965609224818853, "phrase": "industrial_example"}], "paper_keywords": ["ASIC", " dual-edge-triggered flip-flop", " high performance", " high-level synthesis", " latch"], "paper_abstract": "Level-sensitive latches are widely used in high-performance custom designs while edge-triggered. flip-flops are predominantly used in application-specific integrated circuits. We consider a latch as a basis for storage and address each step of high-level synthesis (HLS), including scheduling, allocation, and control synthesis. While the use of latches provides an opportunity to reduce the latency during the scheduling, the register allocation has to take extra conflicts caused by latch into account, and the control synthesis has to be tailored to support the latch-based data-path. Optimization potentials specific to this HLS are identified and solutions are proposed. Specifically, the register allocation can be improved by re. ning the operation schedule in a way to reduce the number of edges in a register conflict graph; the latency can be reduced by adjusting the clock duty cycle in a way to generate a tighter schedule. All the steps of HLS and optimization procedures were integrated into a framework called HLS-1. It was tested on benchmark designs implemented in 1.1-V, 45 nm complementary metal-oxide-semiconductor technology. Compared to the conventional HLS, HLS-1 was able to reduce the latency by 18.2% on average with 9.2% less area and 16.0% less power consumption. The application of HLS-1 to an industrial example is demonstrated through the design of a module extracted from H.264/advanced video coding.", "paper_title": "HLS-1: A High-Level Synthesis Framework for Latch-Based Architectures", "paper_id": "WOS:000278502500001"}