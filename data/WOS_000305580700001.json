{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "interactive_staged_feature_model_configuration"}, {"score": 0.004681525814235883, "phrase": "attractive_technique"}, {"score": 0.004425616928975799, "phrase": "application_domain"}, {"score": 0.004376131419366239, "phrase": "generative_programming"}, {"score": 0.004207230913063179, "phrase": "feature_models"}, {"score": 0.00413684709497912, "phrase": "overarching_representation"}, {"score": 0.004067635935640407, "phrase": "possible_application_configuration_space"}, {"score": 0.0038668462001710314, "phrase": "specific_domain_requirements"}, {"score": 0.003823584649521733, "phrase": "stakeholder_goals"}, {"score": 0.00345530020388352, "phrase": "holistic_approach"}, {"score": 0.003303177222901723, "phrase": "stakeholder's_soft_and_hard_constraints"}, {"score": 0.0028857130140890787, "phrase": "feature_model"}, {"score": 0.0027898428590137515, "phrase": "propositional_logic"}, {"score": 0.002743105561254975, "phrase": "concrete_domains"}, {"score": 0.0025494354909453847, "phrase": "soft_constraints"}, {"score": 0.002450864311898833, "phrase": "semi-automated_feature_model_customization"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["feature models", " variability", " software product lines", " soft constraints", " logic languages"], "paper_abstract": "Feature modeling an attractive technique for capturing commonality as well as variability within an application domain for generative programming and software product line engineering. Feature models symbolize an overarching representation of the possible application configuration space, and can hence be customized based on specific domain requirements and stakeholder goals. Most interactive or semi-automated feature model customization processes neglect the need to have a holistic approach towards the integration and satisfaction of the stakeholder's soft and hard constraints, and the application-domain integrity constraints. In this paper, we will show how the structure and constraints of a feature model can be modeled uniformly through Propositional Logic extended with concrete domains, called P(N). Furthermore, we formalize the representation of soft constraints in fuzzy P(N) and explain how semi-automated feature model customization is performed in this setting. The model configuration derivation process that we propose respects the soundness and completeness properties. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Formalizing interactive staged feature model configuration", "paper_id": "WOS:000305580700001"}