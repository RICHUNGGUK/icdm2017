{"auto_keywords": [{"score": 0.04855239486253465, "phrase": "soft_constraints"}, {"score": 0.04805356321275286, "phrase": "penalty_functions"}, {"score": 0.0456315961504987, "phrase": "optimization_problem"}, {"score": 0.00481495049065317, "phrase": "exact_penalty_functions"}, {"score": 0.004764355883451222, "phrase": "mpc"}, {"score": 0.004712065638657606, "phrase": "mixed_integer_programming"}, {"score": 0.004298666679374568, "phrase": "feasible_solution"}, {"score": 0.0041840994704406866, "phrase": "mpc_controller_failure"}, {"score": 0.003964007795174772, "phrase": "unnecessary_violations"}, {"score": 0.003900257249255497, "phrase": "original_constraints"}, {"score": 0.003519561814102764, "phrase": "constraints_exists"}, {"score": 0.003210446135114967, "phrase": "lagrange_multipliers"}, {"score": 0.0030250067691601967, "phrase": "mpc_problem_formulation"}, {"score": 0.002928399649340438, "phrase": "licq_condition"}, {"score": 0.0027001292153471202, "phrase": "existing_mixed_integer_formulations"}, {"score": 0.0024495111090152857, "phrase": "corresponding_soft_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Soft constraints", " Exact penalty functions", " Lagrange multipliers", " Mixed integer programming", " LICQ"], "paper_abstract": "Soft constraints and penalty functions are commonly used in MPC to ensure that the optimization problem has a feasible solution, and thereby avoid MPC controller failure. On the other hand, soft constraints may allow for unnecessary violations of the original constraints, i.e., the constraints may be violated even if a valid solution that does not violate any constraints exists. The paper develops procedures for the minimizing (according to some norm) of the Lagrange multipliers associated with a given mp-QP problem, assumed to originate from an MPC problem formulation. To this end the LICQ condition is exploited in order to efficiently formulate the optimization problem, and thereby improve upon existing mixed integer formulations and enhance the tractability of the problem. The results are used to design penalty functions such that corresponding soft constraints are made exact, that is, the original (hard) constraints are violated only if there exists no solution where all constraints are satisfied. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "On the design of exact penalty functions for MPC using mixed integer programming", "paper_id": "WOS:000342461300010"}