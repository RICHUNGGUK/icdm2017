{"auto_keywords": [{"score": 0.046518682750576405, "phrase": "high_performance"}, {"score": 0.00481495049065317, "phrase": "reconfigurable_hardware"}, {"score": 0.004762202897268383, "phrase": "embedded_applications"}, {"score": 0.004408729661992651, "phrase": "embedded_systems"}, {"score": 0.004360412703519539, "phrase": "high_utilization"}, {"score": 0.004081385289516914, "phrase": "dynamic_adaptation"}, {"score": 0.004014452814186653, "phrase": "silicon_resources"}, {"score": 0.003970439654470374, "phrase": "reconfigurable_systems"}, {"score": 0.003820144626025562, "phrase": "execution_proceeds"}, {"score": 0.003716273882758735, "phrase": "encountered_reconfiguration_overheads"}, {"score": 0.0034975571855450343, "phrase": "time-consuming_kernels"}, {"score": 0.003459191419478298, "phrase": "also_the_reconfiguration_overheads"}, {"score": 0.0034024277222012597, "phrase": "overall_performance_gain"}, {"score": 0.0031845067058084583, "phrase": "performance_results"}, {"score": 0.003097865379563127, "phrase": "field-programmable_gate_arrays"}, {"score": 0.0030135741897058844, "phrase": "embedded_kernels"}, {"score": 0.0027741761880779535, "phrase": "benchmark_kernels"}, {"score": 0.0026543514413663893, "phrase": "reconfiguration_overheads"}, {"score": 0.0025820967615278073, "phrase": "required_reconfigurations"}, {"score": 0.002497976173193543, "phrase": "brute-force_solutions"}, {"score": 0.0023900527169254744, "phrase": "ideal_execution_time"}, {"score": 0.002312174113289583, "phrase": "fpga_resources"}, {"score": 0.002286781334850213, "phrase": "alternative_strategies"}, {"score": 0.0022368274529152342, "phrase": "reconfiguration_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["System reconfiguration", " Embedded systems", " FPGA"], "paper_abstract": "To conserve space and power as well as to harness high performance in embedded systems, high utilization of the hardware is required. This can be facilitated through dynamic adaptation of the silicon resources in reconfigurable systems in order to realize various customized kernels as execution proceeds. Fortunately, the encountered reconfiguration overheads can be estimated. Therefore, if the scheduling of time-consuming kernels considers also the reconfiguration overheads, an overall performance gain can be obtained. We present our policy, experiments, and performance results of customizing and reconfiguring Field-Programmable Gate Arrays (FPGAs) for embedded kernels. Experiments involving EEMBC (EDN Embedded Microprocessor Benchmarking Consortium) and MiBench embedded benchmark kernels show high performance using our main policy, when considering reconfiguration overheads. Our policy reduces the required reconfigurations by more than 50% as compared to brute-force solutions, and performs within 25% of the ideal execution time while conserving 60% of the FPGA resources. Alternative strategies to reduce the reconfiguration overhead are also presented and evaluated. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Customized kernel execution on reconfigurable hardware for embedded applications", "paper_id": "WOS:000266230500005"}