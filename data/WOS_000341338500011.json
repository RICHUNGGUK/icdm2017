{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimization_space"}, {"score": 0.004745665541429529, "phrase": "multiple-gpu_parallel_implementation"}, {"score": 0.004677372885331908, "phrase": "x-ray_tomography_reconstruction_algorithm"}, {"score": 0.004543708337879809, "phrase": "massively_parallel_architectures"}, {"score": 0.00393032656248792, "phrase": "challenging_process"}, {"score": 0.0034826993555190765, "phrase": "massively_parallel_implementation"}, {"score": 0.003350480663660326, "phrase": "ct_application"}, {"score": 0.00317681090697906, "phrase": "cone-beam_geometry"}, {"score": 0.003131023880006021, "phrase": "main_contribution"}, {"score": 0.0029400959763737364, "phrase": "modular_application_design"}, {"score": 0.002855934865505357, "phrase": "functional_parallelism"}, {"score": 0.0027209713296448296, "phrase": "individual_application_phases"}, {"score": 0.0024107449502335583, "phrase": "massively_parallel_multi-gpu_system"}, {"score": 0.002252701813819903, "phrase": "modularized_application"}, {"score": 0.0021987994275190314, "phrase": "significant_benefit"}, {"score": 0.0021254913611527455, "phrase": "adequate_combination"}, {"score": 0.0021049977753042253, "phrase": "application_optimizations"}], "paper_keywords": ["CT reconstruction", " Tomography", " GPGPU", " Optimization", " Paralellism"], "paper_abstract": "The increasing popularity of massively parallel architectures based on accelerators have opened up the possibility of significantly improving the performance of X-ray computed tomography (CT) applications towards achieving real-time imaging. However, achieving this goal is a challenging process, as most CT applications have not been designed for exploiting the amount of parallelism existing in these architectures. In this paper we present the massively parallel implementation and optimization of Mangoose(++), a CT application for reconstructing 3D volumes from 20 images collected by scanners based on cone-beam geometry. The main contribution of this paper are the following. First, we develop a modular application design that allows to exploit the functional parallelism inside the application and to facilitate the parallelization of individual application phases. Second, we identify a set of optimizations that can be applied individually and in combination for optimally deploying the application on a massively parallel multi-GPU system. Third, we present a study of surfing the optimization space of the modularized application and demonstrate that a significant benefit can be obtained from employing the adequate combination of application optimizations. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Surfing the optimization space of a multiple-GPU parallel implementation of a X-ray tomography reconstruction algorithm", "paper_id": "WOS:000341338500011"}