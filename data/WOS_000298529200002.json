{"auto_keywords": [{"score": 0.04635486234415222, "phrase": "resource_partitioning"}, {"score": 0.042895987791392844, "phrase": "real-time_tasks"}, {"score": 0.03884938303474948, "phrase": "resource_supply"}, {"score": 0.03442732612455498, "phrase": "pads"}, {"score": 0.004762202897268383, "phrase": "resource_demand"}, {"score": 0.004675565200598801, "phrase": "formal_analysis"}, {"score": 0.004641351004344458, "phrase": "hierarchical_scheduling"}, {"score": 0.004344424495876066, "phrase": "real-time_performance"}, {"score": 0.004172360444377281, "phrase": "real-time_scheduling_theory"}, {"score": 0.004051501401100304, "phrase": "restricted_resource_supply_environments"}, {"score": 0.003977741661623133, "phrase": "real-time_scheduling-based_approaches"}, {"score": 0.0037921662574137535, "phrase": "resource-demand_tasks"}, {"score": 0.003615217162972726, "phrase": "process_algebraic_framework_padsfor_reasoning"}, {"score": 0.0034975571855450343, "phrase": "timed_process_algebra"}, {"score": 0.003484721713676736, "phrase": "acsr."}, {"score": 0.00328562353036406, "phrase": "resource-supply_processes"}, {"score": 0.003213920601037463, "phrase": "resource_cpu"}, {"score": 0.0030638704739988595, "phrase": "requesting_task_process"}, {"score": 0.002975024676463106, "phrase": "supply-demand_relation"}, {"score": 0.0028153046221865386, "phrase": "demand_process_t"}, {"score": 0.002763988044737562, "phrase": "supply_s."}, {"score": 0.0027036380093304747, "phrase": "compositional_schedulability_analysis"}, {"score": 0.0026155681847364483, "phrase": "optimal_supply_process"}, {"score": 0.0023079225317714815, "phrase": "hierarchical_scheduling_approaches"}, {"score": 0.002224510044064184, "phrase": "simple_representation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Real-time process algebra", " Compositional schedulability analysis", " Resource demand and resource supply", " Hierarchical scheduling"], "paper_abstract": "As real-time embedded systems become more complex, resource partitioning is increasingly used to guarantee real-time performance. Recently, several compositional frameworks of resource partitioning have been proposed using real-time scheduling theory with various notions of real-time tasks running under restricted resource supply environments. However, these real-time scheduling-based approaches are limited in their expressiveness in that, although capable of describing resource-demand tasks, they are unable to model resource supply. This paper describes a process algebraic framework PADSfor reasoning about resource demand and resource supply inspired by the timed process algebra ACSR. In ACSR, real-time tasks are specified by enunciating their consumption needs for resources. To also accommodate resource-supply processes in PADS, given a resource cpu, we write cpu to denote the availability of cpu for a requesting task process. Using PADS, we define a supply-demand relation where a pair (T, S) belongs to the relation if the demand process T can be scheduled under supply S. We develop a theory of compositional schedulability analysis as well as a technique for synthesizing an optimal supply process for a set of tasks. Furthermore, we define ordering relations between supplies which describe when a supply offers more resource capacity than another. With this notion it is possible to formally represent hierarchical scheduling approaches that assign more \"generous\" resource allocations to tasks in exchange for a simple representation. We illustrate our techniques via a number of examples. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "PADS: An approach to modeling resource demand and supply for the formal analysis of hierarchical scheduling", "paper_id": "WOS:000298529200002"}