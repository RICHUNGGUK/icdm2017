{"auto_keywords": [{"score": 0.04163651342265048, "phrase": "tvf"}, {"score": 0.009904390131073639, "phrase": "target_thread"}, {"score": 0.00481495049065317, "phrase": "parallel_applications"}, {"score": 0.004747997855358171, "phrase": "transistor_sizes"}, {"score": 0.004714869813251479, "phrase": "aggressive_low_power_operating_modes"}, {"score": 0.0045846424310611745, "phrase": "transient_error_rates"}, {"score": 0.0045208777171271254, "phrase": "multicore_machines"}, {"score": 0.004457995891964028, "phrase": "architectural_spectrum"}, {"score": 0.004319677360634253, "phrase": "fresh_look"}, {"score": 0.004259582098193949, "phrase": "multithreaded_applications"}, {"score": 0.004229847379280629, "phrase": "transient_errors"}, {"score": 0.004185632403886255, "phrase": "software_perspective"}, {"score": 0.004027412633636142, "phrase": "new_metric"}, {"score": 0.003916098498242888, "phrase": "distinguishing_characteristic"}, {"score": 0.003663857375787215, "phrase": "multithreaded_application"}, {"score": 0.002958423758207526, "phrase": "vulnerability_impact"}, {"score": 0.002826562521633885, "phrase": "local_and_remote_tvf_values"}, {"score": 0.002653606593103781, "phrase": "ten_multithreaded_applications"}, {"score": 0.002562123444678208, "phrase": "tvf_values"}, {"score": 0.0024912073108138613, "phrase": "cores_increases"}, {"score": 0.002396883802324751, "phrase": "core_count"}, {"score": 0.0023387234705715154, "phrase": "tvf_metric"}, {"score": 0.002289993730291136, "phrase": "performance-reliability_tradeoffs"}, {"score": 0.0022580713471027996, "phrase": "reliability-based_analysis"}, {"score": 0.0022187920251626257, "phrase": "redundancy-based_fault_tolerance"}, {"score": 0.0021801944769738618, "phrase": "potential_usages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Reliability", " Thread Vulnerability", " Fault tolerance", " Multicores", " TVF"], "paper_abstract": "Continuously reducing transistor sizes and aggressive low power operating modes employed by modern architectures tend to increase transient error rates. Concurrently, multicore machines are dominating the architectural spectrum today in various application domains. These two trends require a fresh look at resiliency of multithreaded applications against transient errors from a software perspective. In this paper, we propose and evaluate a new metric called the Thread Vulnerability Factor (TVF). A distinguishing characteristic of TVF is that its calculation for a given thread (which is typically one of the threads of a multithreaded application) does not depend on its code alone, but also on the codes of the threads that share resources and data with that thread. As a result, we decompose TVF of a thread into two complementary parts: local and remote. While the former captures the TVF induced by the code of the target thread, the latter represents the vulnerability impact of the threads that interact with the target thread. We quantify the local and remote TVF values for three architectural components (register file, ALUs, and caches) using a set of ten multithreaded applications from the Parsec and Splash-2 benchmark suites. Our experimental evaluation shows that TVF values tend to increase as the number of cores increases, which means the system becomes more vulnerable as the core count rises. We further discuss how TVF metric can be employed to explore performance-reliability tradeoffs in multicores. Reliability-based analysis of compiler optimizations and redundancy-based fault tolerance are also mentioned as potential usages of our TVF metric. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Thread vulnerability in parallel applications", "paper_id": "WOS:000308276400002"}