{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "double_counting"}, {"score": 0.004749646583168342, "phrase": "constraint_programming"}, {"score": 0.004685224205630963, "phrase": "matrix_models"}, {"score": 0.004558977045730675, "phrase": "constraint_problems"}, {"score": 0.0041149859710361125, "phrase": "finite-state_automaton"}, {"score": 0.003922794571908569, "phrase": "global_cardinality_constraint"}, {"score": 0.003284026247389735, "phrase": "first_method_yields"}, {"score": 0.003239418275717787, "phrase": "necessary_conditions"}, {"score": 0.003195414285736136, "phrase": "simple_arithmetic_constraints"}, {"score": 0.0031305230217636495, "phrase": "second_method"}, {"score": 0.003066945490483524, "phrase": "cardinality_automaton"}, {"score": 0.002963830787280652, "phrase": "overall_behaviour"}, {"score": 0.002748984715897838, "phrase": "linear_constraints"}, {"score": 0.0026384167183586015, "phrase": "domain_consistency_filtering_algorithm"}, {"score": 0.002549672862868133, "phrase": "lexicographic_ordering_constraints"}, {"score": 0.002515014676664348, "phrase": "adjacent_rows"}, {"score": 0.0021340178074057245, "phrase": "large_set"}, {"score": 0.0021049977753042253, "phrase": "nurse_rostering_problem_instances"}], "paper_keywords": ["Double counting", " Necessary (implied) constraint", " Matrix model", " Automaton constraint", " Nurse scheduling"], "paper_abstract": "Matrix models are ubiquitous for constraint problems. Many such problems have a matrix of variables , with the same constraint C defined by a finite-state automaton on each row of and a global cardinality constraint on each column of . We give two methods for deriving, by double counting, necessary conditions on the cardinality variables of the constraints from the automaton . The first method yields linear necessary conditions and simple arithmetic constraints. The second method introduces the cardinality automaton, which abstracts the overall behaviour of all the row automata and can be encoded by a set of linear constraints. We also provide a domain consistency filtering algorithm for the conjunction of lexicographic ordering constraints between adjacent rows of and (possibly different) automaton constraints on the rows. We evaluate the impact of our methods in terms of runtime and search effort on a large set of nurse rostering problem instances.", "paper_title": "On matrices, automata, and double counting in constraint programming", "paper_id": "WOS:000312879500005"}