{"auto_keywords": [{"score": 0.04594846582703764, "phrase": "noise_generation"}, {"score": 0.04505606543446886, "phrase": "distributed_implementation"}, {"score": 0.00481495049065317, "phrase": "distributed_noise_generation"}, {"score": 0.00467905143301368, "phrase": "efficient_distributed_protocols"}, {"score": 0.0045843245695654875, "phrase": "random_noise"}, {"score": 0.004509919457793852, "phrase": "malicious_participants"}, {"score": 0.004258843584164121, "phrase": "privacy-preserving_statistical_databases"}, {"score": 0.0039402177950179345, "phrase": "true_answer"}, {"score": 0.003892126266260425, "phrase": "database_query"}, {"score": 0.003797690272118125, "phrase": "small_amount"}, {"score": 0.003769523472841089, "phrase": "gaussian"}, {"score": 0.0037360045780015804, "phrase": "exponentially_distributed_random_noise"}, {"score": 0.0036903962975894634, "phrase": "computational_power"}, {"score": 0.0036602993802452863, "phrase": "even_a_simple_form"}, {"score": 0.0029100272315053253, "phrase": "trusted_database_administrator"}, {"score": 0.0028161764476743257, "phrase": "independent_interest"}, {"score": 0.002759058732719621, "phrase": "gaussian_noise"}, {"score": 0.002626645763725465, "phrase": "verifiable_secret_sharing"}, {"score": 0.0025628355581338563, "phrase": "previous_approaches"}, {"score": 0.0024298350266697905, "phrase": "exponentially_distributed_noise"}, {"score": 0.002322689143237591, "phrase": "biased_coins"}, {"score": 0.002294294558114909, "phrase": "amortized_cost"}, {"score": 0.0021398115287338693, "phrase": "appropriate_biases"}, {"score": 0.0021049977753042253, "phrase": "exponential_distribution"}], "paper_keywords": [""], "paper_abstract": "In this work we provide efficient distributed protocols for generating shares of random noise, secure against malicious participants. The purpose of the noise generation is to create a distributed implementation of the privacy-preserving statistical databases described in recent papers [14,4,13]. In these databases, privacy is obtained by perturbing the true answer to a database query by the addition of a small amount of Gaussian or exponentially distributed random noise. The computational power of even a simple form of these databases, when the query is just of the form Sigma(i)f(d(i)), that is, the sum over all rows i in the database of a function f applied to the data in row i, has been demonstrated in [4]. A distributed implementation eliminates the need for a trusted database administrator. The results for noise generation are of independent interest. The generation of Gaussian noise introduces a technique for distributing shares of many unbiased coins with fewer executions of verifiable secret sharing than would be needed using previous approaches (reduced by a factor of n). The generation of exponentially distributed noise uses two shallow circuits: one for generating many arbitrarily but identically biased coins at an amortized cost of two unbiased random bits apiece, independent of the bias, and the other to combine bits of appropriate biases to obtain an exponential distribution.", "paper_title": "Our data, ourselves: Privacy via distributed noise generation", "paper_id": "WOS:000238574200029"}