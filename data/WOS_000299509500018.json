{"auto_keywords": [{"score": 0.04660802533264657, "phrase": "extraction_algorithms"}, {"score": 0.01550881895316471, "phrase": "gray_level_co-occurrence_matrices"}, {"score": 0.00481495049065317, "phrase": "parallel_implementation"}, {"score": 0.004685224205630963, "phrase": "haralick_texture"}, {"score": 0.004590217765551337, "phrase": "cell_architecture"}, {"score": 0.004405919996432158, "phrase": "key_functions"}, {"score": 0.0042579795015449005, "phrase": "medical_images"}, {"score": 0.004200197763119297, "phrase": "remote_sensing"}, {"score": 0.0041149859710361125, "phrase": "content-based_image_retrieval"}, {"score": 0.003949693102823493, "phrase": "texture_features"}, {"score": 0.0036636495018515275, "phrase": "glcm"}, {"score": 0.0035892794633115227, "phrase": "second-order_statistical_information"}, {"score": 0.00332924643541238, "phrase": "haralick_texture_features"}, {"score": 0.0030669459467999507, "phrase": "haralick"}, {"score": 0.002786858120570499, "phrase": "different_parallel_techniques"}, {"score": 0.002693134880651768, "phrase": "data-level_parallelism"}, {"score": 0.0026384167183586015, "phrase": "available_parallelism"}, {"score": 0.002532284627202572, "phrase": "cell_multi-core_processor"}, {"score": 0.0023167153974120083, "phrase": "computational_times"}, {"score": 0.0021049977753042253, "phrase": "non-parallel_optimized_implementations"}], "paper_keywords": ["Texture feature extraction", " Co-occurrence matrix", " Parallel techniques", " Cell architecture"], "paper_abstract": "Texture features extraction algorithms are key functions in various image processing applications such as medical images, remote sensing, and content-based image retrieval. The most common way to extract texture features is the use of Gray Level Co-occurrence Matrices (GLCMs). The GLCM contains the second-order statistical information of spatial relationship of the pixels of an image. Haralick texture features are extracted using these GLCMs. However, the GLCMs and Haralick texture features extraction algorithms are computationally intensive. In this paper, we apply different parallel techniques such as task- and data-level parallelism to exploit available parallelism of those applications on the Cell multi-core processor. Experimental results have shown that our parallel implementations using 16 Synergistic Processor Elements significantly reduce the computational times of the GLCMs and texture features extraction algorithms by a factor of 10x over non-parallel optimized implementations for different image sizes from 128x128 to 1024x1024.", "paper_title": "Parallel implementation of Gray Level Co-occurrence Matrices and Haralick texture features on cell architecture", "paper_id": "WOS:000299509500018"}