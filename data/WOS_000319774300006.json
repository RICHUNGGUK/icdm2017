{"auto_keywords": [{"score": 0.03978801929617648, "phrase": "performance_improvements"}, {"score": 0.014954290444094652, "phrase": "sbse"}, {"score": 0.00481495049065317, "phrase": "graphics_cards"}, {"score": 0.00452063603944825, "phrase": "so-called_'embarrassingly_parallel'_algorithms"}, {"score": 0.004325339932975582, "phrase": "easy_routes"}, {"score": 0.004271100220705305, "phrase": "dramatic_performance_improvements"}, {"score": 0.0041384457437123635, "phrase": "recent_advances"}, {"score": 0.00408654006336477, "phrase": "multicore_computation"}, {"score": 0.0037409118365761894, "phrase": "multicore_sbse."}, {"score": 0.0035120164504478437, "phrase": "graphical_processing_units"}, {"score": 0.0032556926399045635, "phrase": "sbse_algorithms"}, {"score": 0.0028332303659245085, "phrase": "archive_evolutionary_algorithm"}, {"score": 0.002676587673012276, "phrase": "multi-objective_regression_test_selection"}, {"score": 0.0023887436047824386, "phrase": "widely_available_standard_gpus"}, {"score": 0.0021049977753042253, "phrase": "problem_instance"}], "paper_keywords": ["Search based software engineering", " GPGPU", " Test suite minimisation", " Regression testing"], "paper_abstract": "It has often been claimed that SBSE uses so-called 'embarrassingly parallel' algorithms that will imbue SBSE applications with easy routes to dramatic performance improvements. However, despite recent advances in multicore computation, this claim remains largely theoretical; there are few reports of performance improvements using multicore SBSE. This paper shows how inexpensive General Purpose computing on Graphical Processing Units (GPGPU) can be used to massively parallelise suitably adapted SBSE algorithms, thereby making progress towards cheap, easy and useful SBSE parallelism. The paper presents results for three different algorithms: NSGA2, SPEA2, and the Two Archive Evolutionary Algorithm, all three of which are adapted for multi-objective regression test selection and minimization. The results show that all three algorithms achieved performance improvements up to 25 times, using widely available standard GPUs. We also found that the speed-up was observed to be statistically strongly correlated to the size of the problem instance; as the problem gets harder the performance improvements also get better.", "paper_title": "GPGPU test suite minimisation: search based software engineering performance improvement using graphics cards", "paper_id": "WOS:000319774300006"}