{"auto_keywords": [{"score": 0.04002553300900063, "phrase": "rewriting_relation"}, {"score": 0.00481495049065317, "phrase": "translation_function"}, {"score": 0.0047292449487169345, "phrase": "nominal_rewriting_systems"}, {"score": 0.004521566043596533, "phrase": "combinatory_reduction_systems"}, {"score": 0.004284302478991387, "phrase": "closed_nominal_rules"}, {"score": 0.004208002469225673, "phrase": "ground_nominal_terms"}, {"score": 0.004133055661437163, "phrase": "crss_rules"}, {"score": 0.003611751858608048, "phrase": "reduction-preserving_translation"}, {"score": 0.0032132782979796895, "phrase": "previously_defined_translation"}, {"score": 0.0030171910207671205, "phrase": "existing_translations"}, {"score": 0.0025202582748972122, "phrase": "nominal_rewriting"}], "paper_keywords": ["rewriting", " nominal syntax", " Combinatory Reduction Systems", " higher-order syntax", " translation tool"], "paper_abstract": "We present a translation function from nominal rewriting systems (NRSs) to combinatory reduction systems (CRSs), transforming closed nominal rules and ground nominal terms to CRSs rules and terms, respectively, while preserving the rewriting relation. We also provide a reduction-preserving translation in the other direction, from CRSs to NRSs, improving over a previously defined translation. These tools, together with existing translations between CRSs and other higher-order rewriting formalisms, open up the path for a transfer of results between higher-order and nominal rewriting. In particular, techniques and properties of the rewriting relation, such as termination, can be exported from one formalism to the other.", "paper_title": "FROM NOMINAL TO HIGHER-ORDER REWRITING AND BACK AGAIN", "paper_id": "WOS:000373922900009"}