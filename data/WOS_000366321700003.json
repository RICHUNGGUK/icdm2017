{"auto_keywords": [{"score": 0.042193380913313115, "phrase": "final_outcome"}, {"score": 0.015719716506582538, "phrase": "progressive_analytics"}, {"score": 0.00797490086693615, "phrase": "proposed_models"}, {"score": 0.004776853267973129, "phrase": "big_data"}, {"score": 0.004739056045644449, "phrase": "big_data_analytics"}, {"score": 0.004682917599491709, "phrase": "key_research_subject"}, {"score": 0.004645860180714466, "phrase": "future_data_driven_decision_making"}, {"score": 0.00453643016617164, "phrase": "large_amount"}, {"score": 0.0043945048085683005, "phrase": "efficient_way"}, {"score": 0.004342430078306461, "phrase": "big_data_clusters"}, {"score": 0.004206548500039536, "phrase": "examined_data"}, {"score": 0.004173244935967375, "phrase": "continuous_queries"}, {"score": 0.004123781267600542, "phrase": "data_sources"}, {"score": 0.004091130285858113, "phrase": "intelligent_mechanisms"}, {"score": 0.003916098498242888, "phrase": "minimum_time"}, {"score": 0.0038696708318671446, "phrase": "maximum_performance"}, {"score": 0.00339378090390215, "phrase": "qc."}, {"score": 0.0033668870709083884, "phrase": "proposed_mechanism"}, {"score": 0.0033005860945173136, "phrase": "partial_results"}, {"score": 0.003036040409062437, "phrase": "specific_cluster"}, {"score": 0.0028944757265206332, "phrase": "incoming_partial_results"}, {"score": 0.0028601252251285025, "phrase": "first_model"}, {"score": 0.0028037753646260937, "phrase": "finite_horizon_time-optimized_model"}, {"score": 0.002705121052747945, "phrase": "infinite_horizon"}, {"score": 0.0026307897899760383, "phrase": "mathematical_formulations"}, {"score": 0.0025892330566358503, "phrase": "discussed_problem"}, {"score": 0.0025687008721685454, "phrase": "present_simulation_results"}, {"score": 0.00252812242767189, "phrase": "large_number"}, {"score": 0.0024006068621542642, "phrase": "numerical_results"}, {"score": 0.0023532890136269986, "phrase": "deterministic_model"}, {"score": 0.0022434880661725493, "phrase": "required_time"}, {"score": 0.0021218313648947926, "phrase": "aggregated_result"}, {"score": 0.0021049977753042253, "phrase": "high_levels"}], "paper_keywords": ["Big data", " Continuous queries", " Progressive analytics", " Sequential time-optimized models"], "paper_abstract": "Big data analytics is the key research subject for future data driven decision making applications. Due to the large amount of data, progressive analytics could provide an efficient way for querying big data clusters. Each cluster contains only a piece of the examined data. Continuous queries over these data sources require intelligent mechanisms to result the final outcome (query response) in the minimum time with the maximum performance. A Query Controller(QC) is responsible to manage continuous/sequential queries and return the final outcome to users or applications. In this paper, we propose a mechanism that can be adopted by the QC. The proposed mechanism is capable of managing partial results retrieved by a number of processors each one responsible for each cluster. Each processor executes a query over a specific cluster of data. Our mechanism adopts two sequential decision making models for handling the incoming partial results. The first model is based on a finite horizon time-optimized model and the second one is based on an infinite horizon optimally scheduled model. We provide mathematical formulations for solving the discussed problem and present simulation results. Through a large number of experiments, we reveal the advantages of the proposed models and give numerical results comparing them with a deterministic model. These results indicate that the proposed models can efficiently reduce the required time for returning the final outcome to the user/application while keeping the quality of the aggregated result at high levels. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "An Efficient Time Optimized Scheme for Progressive Analytics in Big Data", "paper_id": "WOS:000366321700003"}