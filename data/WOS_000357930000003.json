{"auto_keywords": [{"score": 0.04960770684597511, "phrase": "android_malware_detection"}, {"score": 0.0491410816092368, "phrase": "decompiled_source_code"}, {"score": 0.02819827616624647, "phrase": "probabilistic_discriminative_model"}, {"score": 0.008548794727735898, "phrase": "application_permissions"}, {"score": 0.0046741260449047976, "phrase": "mobile_devices"}, {"score": 0.004605258779434384, "phrase": "important_part"}, {"score": 0.004470539706227421, "phrase": "android_platform"}, {"score": 0.004382913938427474, "phrase": "market_leader"}, {"score": 0.004029187256595917, "phrase": "source_code_analysis"}, {"score": 0.003969784439380027, "phrase": "dynamic_analysis"}, {"score": 0.0037039021744127783, "phrase": "regularized_logistic_regression"}, {"score": 0.0036133077234252633, "phrase": "extensive_experimental_evaluation"}, {"score": 0.003472927015404464, "phrase": "probabilistic_outputs"}, {"score": 0.0034386894664467003, "phrase": "highly_accurate_classification_results"}, {"score": 0.0032887360307856635, "phrase": "android_api_calls"}, {"score": 0.00308357048262018, "phrase": "feature_granularity"}, {"score": 0.003053159610975692, "phrase": "feature_representation"}, {"score": 0.003023047748772801, "phrase": "feature_selection"}, {"score": 0.0025415366388578465, "phrase": "discriminative_learning_model"}, {"score": 0.002504011301105577, "phrase": "best_detection_results"}, {"score": 0.002301572462091142, "phrase": "first_research"}, {"score": 0.002212040873849046, "phrase": "thorough_study"}, {"score": 0.0021902063413831545, "phrase": "desired_representation"}, {"score": 0.0021259846592569386, "phrase": "first_research_work"}, {"score": 0.0021049977753042253, "phrase": "android_malware_detection_task"}], "paper_keywords": ["Android", " malicious application", " machine learning", " discriminative model"], "paper_abstract": "Mobile devices are an important part of our everyday lives, and the Android platform has become a market leader. In recent years a number of approaches for Android malware detection have been proposed, using permissions, source code analysis, or dynamic analysis. In this paper, we propose to use a probabilistic discriminative model based on regularized logistic regression for Android malware detection. Through extensive experimental evaluation, we demonstrate that it can generate probabilistic outputs with highly accurate classification results. In particular, we propose to use Android API calls as features extracted from decompiled source code, and analyze and explore issues in feature granularity, feature representation, feature selection, and regularization. We show that the probabilistic discriminative model also works well with permissions, and substantially outperforms the state-of-the-art methods for Android malware detection with application permissions. Furthermore, the discriminative learning model achieves the best detection results by combining both decompiled source code and application permissions. To the best of our knowledge, this is the first research that proposes probabilistic discriminative model for Android malware detection with a thorough study of desired representation of decompiled source code and is the first research work for Android malware detection task that combines both analysis of decompiled source code and application permissions.", "paper_title": "A Probabilistic Discriminative Model for Android Malware Detection with Decompiled Source Code", "paper_id": "WOS:000357930000003"}