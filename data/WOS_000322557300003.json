{"auto_keywords": [{"score": 0.03165006562135795, "phrase": "eapac"}, {"score": 0.03097563144889371, "phrase": "developed_framework"}, {"score": 0.00481495049065317, "phrase": "optimized_application"}, {"score": 0.004692227830462433, "phrase": "cloud_system"}, {"score": 0.004555781299332848, "phrase": "data_center"}, {"score": 0.00447251540886613, "phrase": "large_number"}, {"score": 0.004439634831927606, "phrase": "application_servers"}, {"score": 0.003816197777388722, "phrase": "physical_servers"}, {"score": 0.003776416150798388, "phrase": "cloud"}, {"score": 0.0036508108698357932, "phrase": "client-oriented_performance"}, {"score": 0.0036105923401756126, "phrase": "existing_application_placement_algorithms"}, {"score": 0.0035054881943660096, "phrase": "system_resources"}, {"score": 0.0030239842475439814, "phrase": "application_placement_framework"}, {"score": 0.002860938351029155, "phrase": "optimized_performance"}, {"score": 0.002777595758483679, "phrase": "proper_mixture"}, {"score": 0.0027571412070078703, "phrase": "different_types"}, {"score": 0.0027368368719283298, "phrase": "application_request"}, {"score": 0.002541817937194794, "phrase": "resource_conflicts"}, {"score": 0.0025230952890994236, "phrase": "different_applications"}, {"score": 0.0024860616730750158, "phrase": "concurrent_requests"}, {"score": 0.0024136132575631273, "phrase": "extensive_experiments"}, {"score": 0.0023260075698364087, "phrase": "experiment_results"}, {"score": 0.0022749744354271816, "phrase": "existing_method"}, {"score": 0.0021522261505574035, "phrase": "reply_rate"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Application placement", " Resource conflicts", " Cloud"], "paper_abstract": "A Cloud system, which is also often called a data center, may host a large number of application servers (termed as applications for short in this paper) that consume various types of resource, such as CPU, memory, and I/O. In such a scenario, the application placement strategy, which specifies how to host applications across the physical servers in the Cloud, is critical to achieve good system- and/or client-oriented performance. The existing application placement algorithms in literature assume that the consumption of system resources is proportional to the level of workloads submitted to the system. In this paper, we reveal that it may not be the case in some circumstances. Based on this observation, we design and implement an application placement framework, called EAPAC, for Clouds. The developed framework is able to achieve the optimized performance by judiciously allocating to the applications a proper mixture of different types of application request as well as an appropriate number of requests in each type. Further, we investigate the issue of resource conflicts among different applications when there exist concurrent requests in the system. We have conducted extensive experiments to evaluate the performance of the developed framework. The experiment results show that compared with the existing method in literature, EAPAC can improve the performance by 35% in terms of the reply rate. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Developing an optimized application hosting framework in Clouds", "paper_id": "WOS:000322557300003"}