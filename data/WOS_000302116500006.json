{"auto_keywords": [{"score": 0.049390246951185, "phrase": "javascript"}, {"score": 0.012493095707741216, "phrase": "vm"}, {"score": 0.00481495049065317, "phrase": "self-hosted_research_virtual_machine_javascript_an_experience_report"}, {"score": 0.004413846562278824, "phrase": "existing_javascript_vms"}, {"score": 0.004075469816959996, "phrase": "static_languages"}, {"score": 0.0037087324991876727, "phrase": "new_implementation_approaches"}, {"score": 0.0035507457285983268, "phrase": "tachyon_javascript_vm"}, {"score": 0.0032546105164772995, "phrase": "new_approaches"}, {"score": 0.003070996252787868, "phrase": "tachyon_vm"}, {"score": 0.0027943943921568456, "phrase": "full_language"}, {"score": 0.0023644936731468252, "phrase": "self-hosted_vm._preliminary_performance_results"}, {"score": 0.0021049977753042253, "phrase": "commercial_javascript_interpreter"}], "paper_keywords": ["Algorithms", " Performance", " Design", " Languages", " JavaScript", " virtual machine", " compiler", " self-hosted", " optimization", " implementation", " framework"], "paper_abstract": "JavaScript is one of the most widely used dynamic languages. The performance of existing JavaScript VMs, however, is lower than that of VMs for static languages. There is a need for a research VM to easily explore new implementation approaches. This paper presents the Tachyon JavaScript VM which was designed to be flexible and to allow experimenting with new approaches for the execution of JavaScript. The Tachyon VM is itself implemented in JavaScript and currently supports a subset of the full language that is sufficient to bootstrap itself. The paper discusses the architecture of the system and in particular the bootstrapping of a self-hosted VM. Preliminary performance results indicate that our VM, with few optimizations, can already execute code faster than a commercial JavaScript interpreter on some benchmarks.", "paper_title": "Bootstrapping a Self-Hosted Research Virtual Machine JavaScript An Experience Report", "paper_id": "WOS:000302116500006"}