{"auto_keywords": [{"score": 0.0323967293259252, "phrase": "traditional_technique"}, {"score": 0.00481495049065317, "phrase": "large_integer_multipliers"}, {"score": 0.004732785510739708, "phrase": "embedded_blocks"}, {"score": 0.00467207889925365, "phrase": "efficient_design_methodology"}, {"score": 0.004612147352416241, "phrase": "systematic_approach"}, {"score": 0.004475266375001531, "phrase": "squaring_functions"}, {"score": 0.0044369056710423065, "phrase": "unsigned_large_integers"}, {"score": 0.004379977556546879, "phrase": "small-size_embedded_multipliers"}, {"score": 0.004286708921931472, "phrase": "general_architecture"}, {"score": 0.004231699728933577, "phrase": "multiplier_and_squarer"}, {"score": 0.0037188360359702182, "phrase": "efficient_utilisation"}, {"score": 0.003592859432554987, "phrase": "reduced_number"}, {"score": 0.0035620354052144656, "phrase": "required_addition_operations"}, {"score": 0.003471135453226184, "phrase": "different_segments"}, {"score": 0.003212074324593725, "phrase": "xilinx_ise"}, {"score": 0.002934098412396701, "phrase": "design_approach"}, {"score": 0.0027741761880779535, "phrase": "combinational_delay"}, {"score": 0.0022168460543913787, "phrase": "embedded_multipliers"}, {"score": 0.002150900082318562, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "required_embedded_multipliers"}], "paper_keywords": [""], "paper_abstract": "An efficient design methodology and a systematic approach for the implementation of multiplication and squaring functions for unsigned large integers, using small-size embedded multipliers are presented. A general architecture of the multiplier and squarer is proposed and a set of equations is derived to aid in the realisation. The inputs of the multiplier and squarer are split into several segments leading to an efficient utilisation of the small-size embedded multipliers and a reduced number of required addition operations. Various benchmarks were tested for different segments ranging from 2 to 5 targeting Xilinx Spartan-3 FPGAs. The synthesis was performed with the aid of the Xilinx ISE 7.1 XST tool. The approach was compared with the traditional technique using the same tool. The results illustrate that the design approach is very efficient in terms of both timing and area savings. Combinational delay is reduced by an average of 7.71% for the multiplier and 21.73% for the squarer. In terms of 4-inputs look-up tables, area is lowered by an average of 11.63% for the multiplier and 52.22% for the squarer. In the case of the multiplier, both approaches use the same number of embedded multipliers. For the squarer, the proposed approach reduces the number of required embedded multipliers by an average of 32.77% compared with the traditional technique.", "paper_title": "Optimised realisations of large integer multipliers and squarers using embedded blocks", "paper_id": "WOS:000249391200002"}