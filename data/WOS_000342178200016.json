{"auto_keywords": [{"score": 0.04954033184026153, "phrase": "heterogeneous_multicore_processors"}, {"score": 0.014292087682885916, "phrase": "task_assignment"}, {"score": 0.01135392507630319, "phrase": "general_heterogeneous_task_assignment_problem"}, {"score": 0.007358002580231671, "phrase": "homogeneous_task_assignment_method"}, {"score": 0.00481495049065317, "phrase": "efficient_task_assignment"}, {"score": 0.004707188147442449, "phrase": "time_constraint"}, {"score": 0.004654210559456924, "phrase": "high-performance_computing_systems"}, {"score": 0.004575854901681043, "phrase": "heterogeneous_multicore_design"}, {"score": 0.00447341965028879, "phrase": "execution_performance"}, {"score": 0.00417961150804265, "phrase": "computation_capability"}, {"score": 0.0035869274480340727, "phrase": "execution_and_communication_costs"}, {"score": 0.003427989979708738, "phrase": "np-complete"}, {"score": 0.0032946562900625187, "phrase": "optimal_task_assignment"}, {"score": 0.0030433302702291116, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0029751016257398293, "phrase": "ota"}, {"score": 0.0028756028995504035, "phrase": "optimal_assignments"}, {"score": 0.0027325449069867222, "phrase": "integer_linear_programming_model"}, {"score": 0.0026864540069792275, "phrase": "general_task_assignment_problem"}, {"score": 0.002656158309155626, "phrase": "directed_acyclic_graphs"}, {"score": 0.0026113524778702624, "phrase": "polynomial-time_heuristic"}, {"score": 0.0024257447861185813, "phrase": "near-optimal_solutions"}, {"score": 0.0023313149689465386, "phrase": "experimental_results"}, {"score": 0.002279011030331704, "phrase": "proposed_algorithms"}, {"score": 0.002141134176057931, "phrase": "ota_algorithm"}, {"score": 0.0021049977753042253, "phrase": "total_system_time"}], "paper_keywords": ["Task assignment", " heterogeneous multicore systems", " dynamic programming"], "paper_abstract": "High-performance computing systems typically employ heterogeneous multicore design to improve both execution performance and efficiency. Task assignment is critical in exploiting the diversity of computation capability, energy consumption, as well as communication cost on heterogeneous multicore processors. In this paper, we explore the opportunity of task assignment on heterogeneous multicore processors to minimize execution and communication costs considering time constraint. The general heterogeneous task assignment problem is NP-Complete. However, we find that optimal task assignment can be achieved for widely used, tree-shaped task graphs using dynamic programming. We first propose a dynamic programming algorithm, the Optimal Tree Assign (OTA) algorithm, to generate optimal assignments for trees. Then, we develop the Integer Linear Programming model of the general task assignment problem for Directed Acyclic Graphs. A polynomial-time heuristic, the Extended Tree Assignment algorithm, is also proposed to produce near-optimal solutions for the general heterogeneous task assignment problem efficiently. The experimental results show that the proposed algorithms outperform both homogeneous task assignment method and greedy strategy for all the benchmarks. The OTA algorithm reduces the total system time by 42.5 percent and 23.5 percent on average compared with the homogeneous task assignment method and greedy algorithm, respectively.", "paper_title": "Minimizing System Cost with Efficient Task Assignment on Heterogeneous Multicore Processors Considering Time Constraint", "paper_id": "WOS:000342178200016"}