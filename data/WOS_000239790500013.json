{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "formal_languages"}, {"score": 0.004723322467153553, "phrase": "computer_security"}, {"score": 0.0043738432231020885, "phrase": "intrusion_detection_strategies"}, {"score": 0.0037864980290391354, "phrase": "well_known_formal_languages_problem"}, {"score": 0.0035399770257915466, "phrase": "string_x"}, {"score": 0.0034063576796640603, "phrase": "l._in"}, {"score": 0.0032777653153451265, "phrase": "main_differences"}, {"score": 0.0030642636185693054, "phrase": "intrusion_detection_systems"}, {"score": 0.0028100102841877835, "phrase": "language_l"}, {"score": 0.002340250894008014, "phrase": "computational_point"}, {"score": 0.0021049977753042253, "phrase": "efficient_parallelization"}], "paper_keywords": [""], "paper_abstract": "In this paper we analyze some intrusion detection strategies proposed in the literature and we show that they represent the various facets of a well known formal languages problem: computing the distance between a string x and a language L. In particular, the main differences among the various approaches adopted for building intrusion detection systems can be reduced to the characteristics of the language L and to the notion of distance adopted. As a further contribution we will also show that from the computational point of view all these strategies are equivalent and they are amenable to efficient parallelization.", "paper_title": "String distances and intrusion detection: Bridging the gap between formal languages and computer security", "paper_id": "WOS:000239790500013"}