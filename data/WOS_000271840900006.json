{"auto_keywords": [{"score": 0.04376301877070776, "phrase": "space_usage"}, {"score": 0.00481495049065317, "phrase": "entropy-bounded_compressed_suffix_trees"}, {"score": 0.004339108074589307, "phrase": "flourishing_areas"}, {"score": 0.003982617095636925, "phrase": "compressed_representations"}, {"score": 0.0038154673253945003, "phrase": "smaller_suffix_tree_representation"}, {"score": 0.003700371064796848, "phrase": "faster_memory"}, {"score": 0.0035668128900149814, "phrase": "theoretical_slowdown"}, {"score": 0.0034804536625952596, "phrase": "space_reduction"}, {"score": 0.003375429082739004, "phrase": "novel_compressed_suffix_tree"}, {"score": 0.0031747618267940155, "phrase": "sublogarithmic_complexity"}, {"score": 0.002791239714439304, "phrase": "main_ideas"}, {"score": 0.002690406375639144, "phrase": "longest_common_prefix_information"}, {"score": 0.00257735013358606, "phrase": "suffix_tree_topology"}, {"score": 0.002183938718432764, "phrase": "independent_interest"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Suffix trees", " Compressed data structures", " Range minimum queries"], "paper_abstract": "Suffix trees are among the most important data structures in stringology, with a number of applications in flourishing areas like bioinformatics. Their main problem is space usage, which has triggered much research striving for compressed representations that are still functional. A smaller suffix tree representation could fit in a faster memory, outweighing by far the theoretical slowdown brought by the space reduction. We present a novel compressed suffix tree, which is the first achieving at the same time sublogarithmic complexity for the operations, and space usage that asymptotically goes to zero as the entropy of the text does. The main ideas in our development are compressing the longest common prefix information, totally getting rid of the suffix tree topology, and expressing all the suffix tree operations using range minimum queries and a novel primitive called next/previous smaller value in a sequence. Our solutions to those operations are of independent interest. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Faster entropy-bounded compressed suffix trees", "paper_id": "WOS:000271840900006"}