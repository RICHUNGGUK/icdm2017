{"auto_keywords": [{"score": 0.03081794619125733, "phrase": "inference-proof_database"}, {"score": 0.00481495049065317, "phrase": "inference-proof_complete_database"}, {"score": 0.004638788604042707, "phrase": "controlled_query_evaluation"}, {"score": 0.004469042910390712, "phrase": "logical_framework"}, {"score": 0.003825849505589868, "phrase": "priori_knowledge"}, {"score": 0.0037551444630619015, "phrase": "appropriate_way"}, {"score": 0.0036857412768922827, "phrase": "cqe_system"}, {"score": 0.003336614511719501, "phrase": "dynamic_cqe_system"}, {"score": 0.0032749212355657215, "phrase": "inference_control"}, {"score": 0.0029830992938695007, "phrase": "static_approach"}, {"score": 0.002855934865505357, "phrase": "preprocessing_step"}, {"score": 0.0026013505538490223, "phrase": "confidential_information"}, {"score": 0.002429161048032688, "phrase": "comprehensive_example"}, {"score": 0.0023694065215394593, "phrase": "essential_requirements"}, {"score": 0.002325554982412043, "phrase": "inference-proof_and_highly_available_database"}, {"score": 0.0021581904576566096, "phrase": "sat"}, {"score": 0.0021049977753042253, "phrase": "branch_and_bound"}], "paper_keywords": ["Controlled Query Evaluation", " inference control", " lying", " confidentiality of data", " complete database systems", " propositional logic", " SAT solving", " Branch and Bound"], "paper_abstract": "Controlled Query Evaluation (CQE) offers a logical framework to prevent a user of a database from inadvertently gaining knowledge he is not allowed to know. By modeling the user's a priori knowledge in an appropriate way, a CQE system can control not only plain access to database entries but also inferences made by the user. A dynamic CQE system that enforces inference control at runtime has already been investigated. In this article, we pursue a static approach that constructs an inference-proof database in a preprocessing step. The inference-proof database can respond to any query without enabling the user to infer confidential information. We illustrate the semantics of the system by a comprehensive example and state the essential requirements for an inference-proof and highly available database. We present an algorithm that accomplishes the preprocessing by combining SAT solving and \"Branch and Bound\".", "paper_title": "On finding an inference-proof complete database for controlled query evaluation", "paper_id": "WOS:000239572200003"}