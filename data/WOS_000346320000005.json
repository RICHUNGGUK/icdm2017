{"auto_keywords": [{"score": 0.004483909657713567, "phrase": "american_and_european_computer_programmers"}, {"score": 0.0038332390893263844, "phrase": "machinein-dependent_programming_tool"}, {"score": 0.0031393948330209255, "phrase": "algol's_aspired_universality"}, {"score": 0.0028006988338192375, "phrase": "specific_machine"}, {"score": 0.0026452734009203764, "phrase": "amsterdam_and_munich_styles"}, {"score": 0.002359759876402679, "phrase": "algol_controversy"}, {"score": 0.0022933216359142736, "phrase": "recursive_procedures"}, {"score": 0.0022287497627555895, "phrase": "edsger_dijkstra's"}, {"score": 0.0021049977753042253, "phrase": "machine-independent_object_language"}], "paper_keywords": [""], "paper_abstract": "In the 1950s, American and European computer programmers collaborated in an effort to combine the ideal of a machinein-dependent programming tool with the metaphor of language. This article elaborates on the tension between Algol's aspired universality and necessary locality of working on a specific machine by contrasting the Amsterdam and Munich styles of programming. It also highlights the Algol controversy on recursive procedures and Edsger Dijkstra's concept of a machine-independent object language.", "paper_title": "Universality versus Locality: The Amsterdam Style of Algol Implementation", "paper_id": "WOS:000346320000005"}