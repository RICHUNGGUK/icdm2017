{"auto_keywords": [{"score": 0.028481557122942536, "phrase": "glift_logic"}, {"score": 0.00481495049065317, "phrase": "generating_gate_level_information_flow_tracking_logic"}, {"score": 0.004569905085027681, "phrase": "hard-to-detect_security_holes"}, {"score": 0.004337276328199398, "phrase": "performmalicious_activities"}, {"score": 0.0040969285074699, "phrase": "hardware_design_flows"}, {"score": 0.00398177607914381, "phrase": "security_holes"}, {"score": 0.0038698476651328898, "phrase": "significant_damage"}, {"score": 0.0037432199549135826, "phrase": "gate_level_information_flow_tracking"}, {"score": 0.0035864603175592854, "phrase": "information_flow_security"}, {"score": 0.0035022161192936234, "phrase": "boolean_gates"}, {"score": 0.0034690732089830045, "phrase": "glift"}, {"score": 0.003371508176308189, "phrase": "logical_flows"}, {"score": 0.0033395980635636644, "phrase": "hardware_specific_timing_channels"}, {"score": 0.0030802351224657673, "phrase": "real-time_guarantees"}, {"score": 0.002923214590192792, "phrase": "standard_hardware_design"}, {"score": 0.0027479040199262393, "phrase": "target_design"}, {"score": 0.0026452734009203764, "phrase": "difficult_problem"}, {"score": 0.002570817338292482, "phrase": "potential_losses"}, {"score": 0.0024747842618794255, "phrase": "formal_basis"}, {"score": 0.002326304140277375, "phrase": "precise_glift_logic"}, {"score": 0.0022933216359142736, "phrase": "formal_analysis"}, {"score": 0.0021659920594094407, "phrase": "iwls_benchmarks"}, {"score": 0.0021352776064254195, "phrase": "practical_understanding"}, {"score": 0.0021049977753042253, "phrase": "computational_complexity"}], "paper_keywords": ["Algorithm design and analysis", " Boolean functions", " computational complexity", " gate level information flow tracking", " information security"], "paper_abstract": "Hardware-based side channels are known to expose hard-to-detect security holes enabling attackers to get a foothold into the system to performmalicious activities. Despite this fact, security is rarely accounted for in hardware design flows. As a result, security holes are often only identified after significant damage has been inflicted. Recently, gate level information flow tracking (GLIFT) has been proposed to verify information flow security at the level of Boolean gates. GLIFT is able to detect all logical flows including hardware specific timing channels, which is useful for ensuring properties related to confidentiality and integrity and can even provide real-time guarantees on system behavior. GLIFT can be integrated into the standard hardware design, testing and verification process to eliminate unintended information flows in the target design. However, generating GLIFT logic is a difficult problem due to its inherent complexity and the potential losses in precision. This paper provides a formal basis for deriving GLIFT logic which includes a proof on the NP-completeness of generating precise GLIFT logic and a formal analysis of the complexity and precision of various GLIFT logic generation algorithms. Experimental results using IWLS benchmarks provide a practical understanding of the computational complexity.", "paper_title": "On the Complexity of Generating Gate Level Information Flow Tracking Logic", "paper_id": "WOS:000304091600018"}