{"auto_keywords": [{"score": 0.03022564535973555, "phrase": "unbalanced_binary_tree"}, {"score": 0.027475168021277526, "phrase": "single_query_algorithm"}, {"score": 0.026698537067676033, "phrase": "different_query_types"}, {"score": 0.00481495049065317, "phrase": "advanced_indexing_technique"}, {"score": 0.004768104290288521, "phrase": "temporal_data"}, {"score": 0.004652963867892925, "phrase": "efficient_access_and_management_of_time_dependent_data"}, {"score": 0.004409304640026443, "phrase": "existing_access_methods"}, {"score": 0.004240116703465252, "phrase": "spatial_r-tree_indexing_techniques"}, {"score": 0.003998380230709541, "phrase": "open_ended_intervals"}, {"score": 0.0038827100184187805, "phrase": "temporal_databases"}, {"score": 0.003697287104870263, "phrase": "huge_dead_space"}, {"score": 0.0034693659976716197, "phrase": "detailed_investigation"}, {"score": 0.0034187896011435245, "phrase": "new_approach"}, {"score": 0.003368948014436942, "phrase": "triangular_decomposition_tree"}, {"score": 0.0032237268289353983, "phrase": "underlying_idea"}, {"score": 0.00311510526624626, "phrase": "temporal_intervals"}, {"score": 0.0030847461428168614, "phrase": "virtual_index_structures"}, {"score": 0.0030397596289795143, "phrase": "geometric_interpretations"}, {"score": 0.0026762874092443197, "phrase": "virtual_index"}, {"score": 0.0024503741901918527, "phrase": "dedicated_query_transformations"}, {"score": 0.002254510319372956, "phrase": "better_space_complexity"}, {"score": 0.0022216045996270974, "phrase": "empirical_performance"}], "paper_keywords": ["Temporal Databases", " Access Methods", " Performance Evaluation"], "paper_abstract": "The need for efficient access and management of time dependent data in modern database applications is well recognised and researched. Existing access methods are mostly derived from the family of spatial R-tree indexing techniques. These techniques are particularly not suitable to handle data involving open ended intervals, which are common in temporal databases. This is due to overlapping between nodes and huge dead space found in the database. In this study, we describe a detailed investigation of a new approach called \"Triangular Decomposition Tree\" (TD-Tree). The underlying idea for the TD-Tree is to manage temporal intervals by virtual index structures relying on geometric interpretations of intervals, and a space partition method that results in an unbalanced binary tree. We demonstrate that the unbalanced binary tree can be efficiently manipulated using a virtual index. We also show that the single query algorithm can be applied uniformly to different query types without the need of dedicated query transformations. In addition to the advantages related to the usage of a single query algorithm for different query types and better space complexity, the empirical performance of the TD-tree has been found to be superior to its best known competitors.", "paper_title": "Advanced Indexing Technique for Temporal Data", "paper_id": "WOS:000285693300001"}