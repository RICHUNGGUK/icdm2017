{"auto_keywords": [{"score": 0.04312419408962291, "phrase": "streaming_time_series"}, {"score": 0.004815245083715262, "phrase": "continuous"}, {"score": 0.0047057084749407485, "phrase": "time_series"}, {"score": 0.004662705558154439, "phrase": "performing_data_mining_tasks"}, {"score": 0.004372442291178139, "phrase": "continuous_data_evolution"}, {"score": 0.004025531820226182, "phrase": "sliding_window_paradigm"}, {"score": 0.0038447943243941685, "phrase": "subspace_alpha-clusters"}, {"score": 0.0037921662574137535, "phrase": "subspace_a-cluster"}, {"score": 0.0035395987202335223, "phrase": "consecutive_number"}, {"score": 0.0035072146967082083, "phrase": "time_instances"}, {"score": 0.0031845067058084583, "phrase": "proposed_technique"}, {"score": 0.0031121406603482112, "phrase": "careful_examination"}, {"score": 0.003083655376444887, "phrase": "pair-wise_stream_similarities"}, {"score": 0.002748775748298028, "phrase": "maximal_pclusters"}, {"score": 0.002723607240517261, "phrase": "consecutive_dimensions"}, {"score": 0.0026494723416072316, "phrase": "previously_proposed_clustering_methods"}, {"score": 0.0025537472239953807, "phrase": "real-life_and_synthetic_data_sets"}, {"score": 0.002427732996314194, "phrase": "existing_techniques"}, {"score": 0.002329258721870127, "phrase": "proposed_pruning_criteria"}, {"score": 0.002276283303864666, "phrase": "search_space_reduction"}, {"score": 0.0022041312401435346, "phrase": "incremental_cluster_monitoring"}, {"score": 0.0021342613107011624, "phrase": "re-clustering_process"}], "paper_keywords": ["continuous processing", " subspace clustering", " streaming time series", " sliding window"], "paper_abstract": "Performing data mining tasks in streaming data is considered a challenging research direction, due to the continuous data evolution. In this work, we focus on the problem of clustering streaming time series, based on the sliding window paradigm. More specifically, we use the concept Of subspace alpha-clusters. A subspace a-cluster consists of a set of streams, whose value difference is less than a in a consecutive number of time instances (dimensions). The clusters can be continuously and incrementally updated as the streaming time series evolve with time. The proposed technique is based on a careful examination of pair-wise stream similarities for a subset of dimensions and then it is generalized for more streams per cluster. Additionally, we extend our technique in order to find maximal pClusters in consecutive dimensions that have been used in previously proposed clustering methods. Performance evaluation results, based on real-life and synthetic data sets. show that the proposed method is more efficient than existing techniques. Moreover, it is shown that the proposed pruning criteria are very important for search space reduction, and that the cost of incremental cluster monitoring is more computationally efficient that the re-clustering process. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Continuous subspace clustering in streaming time series", "paper_id": "WOS:000253094600006"}