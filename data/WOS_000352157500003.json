{"auto_keywords": [{"score": 0.038553002464954196, "phrase": "vacuity_detection"}, {"score": 0.00481495049065317, "phrase": "different_definitions"}, {"score": 0.0047268728636719725, "phrase": "temporal_logic_model_checking"}, {"score": 0.004390312150344245, "phrase": "interesting_phenomenon"}, {"score": 0.004172874316207784, "phrase": "high-complexity_vacuity_detection_algorithms"}, {"score": 0.00398452530840582, "phrase": "literature_report"}, {"score": 0.0038577428353448596, "phrase": "practical_applications"}, {"score": 0.003734979290204709, "phrase": "system_verifier"}, {"score": 0.003616108223034427, "phrase": "undesirable_situation"}, {"score": 0.0031045562469735307, "phrase": "practical_usage"}, {"score": 0.0030196181347744372, "phrase": "temporal_antecedent_failure"}, {"score": 0.002950608985750058, "phrase": "antecedent_failure"}, {"score": 0.0029234476524900794, "phrase": "temporal_logic"}, {"score": 0.0025212722607043546, "phrase": "vacuity_information"}, {"score": 0.002407290605654707, "phrase": "original_property"}, {"score": 0.0023198180380964305, "phrase": "vacuity_explanation"}, {"score": 0.0021344259291927914, "phrase": "negligible_increase"}, {"score": 0.0021049977753042253, "phrase": "overall_runtime"}], "paper_keywords": ["Model checking", " Temporal logic", " Vacuity", " Regular expressions", " PSL / SVA", " Forward NFA"], "paper_abstract": "Different definitions of vacuity in temporal logic model checking have been suggested along the years. Examining them closely, however, reveals an interesting phenomenon. On the one hand, some of the definitions require high-complexity vacuity detection algorithms. On the other hand, studies in the literature report that not all vacuities detected in practical applications are considered a problem by the system verifier. This brings vacuity detection into an undesirable situation where the user of the model checking tool may find herself waiting a long time for results that are of no interest for her. In this paper we restrict our attention to practical usage of vacuity detection. We define Temporal Antecedent Failure, an extension of antecedent failure to temporal logic, which refines the notion of vacuity. According to our experience, this type of vacuity always indicates a problem in the model, environment or property. We show how vacuity information can be derived from the automaton built for the original property, and we introduce the notion of vacuity explanation. Our experiments demonstrate that this type of vacuity as well as its reasons can be computed with a negligible increase in the overall runtime.", "paper_title": "Vacuity in practice: temporal antecedent failure", "paper_id": "WOS:000352157500003"}