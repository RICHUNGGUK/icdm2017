{"auto_keywords": [{"score": 0.028840656414376893, "phrase": "gpu."}, {"score": 0.00481495049065317, "phrase": "independent_tasks"}, {"score": 0.004622450915803531, "phrase": "gpu_accelerators"}, {"score": 0.004303830426772906, "phrase": "multi-core_processors"}, {"score": 0.0040481944502103505, "phrase": "graphics_processing_units"}, {"score": 0.0036181717017041387, "phrase": "new_method"}, {"score": 0.003509006038574667, "phrase": "efficiently_parallel_applications"}, {"score": 0.0033685408148574846, "phrase": "k_gpus"}, {"score": 0.002530359917257626, "phrase": "maximum_completion_time"}, {"score": 0.0023798115577749225, "phrase": "corresponding_scheduling_problem"}, {"score": 0.002331641523873951, "phrase": "non-deterministic_polynomial"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["scheduling", " approximation algorithms", " parallel heterogeneous systems"], "paper_abstract": "More and more computers use hybrid architectures combining multi-core processors and hardware accelerators such as graphics processing units (GPUs). We present in this paper a new method for scheduling efficiently parallel applications with m CPUs and k GPUs, where each task of the application can be processed either on a core (CPU) or on a GPU. The objective is to minimize the maximum completion time (makespan). The corresponding scheduling problem is Non-deterministic Polynomial (NP)-time hard, Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Scheduling independent tasks on multi-cores with GPU accelerators", "paper_id": "WOS:000351683600020"}