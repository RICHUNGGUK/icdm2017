{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "communicating_complex_state_machines"}, {"score": 0.049668773491620556, "phrase": "web_services_environments"}, {"score": 0.040235524417325794, "phrase": "new_validation_technique"}, {"score": 0.03702587432587853, "phrase": "execution_states"}, {"score": 0.004712463245074863, "phrase": "finite_state_machines"}, {"score": 0.004592340708764929, "phrase": "high_level"}, {"score": 0.004231699728933577, "phrase": "highly_complex_protocols"}, {"score": 0.003949974260471287, "phrase": "protocol_specification_model"}, {"score": 0.003751011827704279, "phrase": "protocol_errors"}, {"score": 0.0036553070575015344, "phrase": "non-reachable_transitions"}, {"score": 0.003608370966473902, "phrase": "reachability_graph"}, {"score": 0.003212074324593725, "phrase": "complex_fsm"}, {"score": 0.003170811465728631, "phrase": "rlra"}, {"score": 0.002985130390111069, "phrase": "deadlock_errors"}, {"score": 0.0029214769181390653, "phrase": "backtracking_approach"}, {"score": 0.0028468767420392945, "phrase": "initial_set"}, {"score": 0.002822434555587263, "phrase": "suspected_states"}, {"score": 0.0024799423362011582, "phrase": "root_state"}, {"score": 0.0024061887405214186, "phrase": "leap_graphs"}, {"score": 0.002255431275670053, "phrase": "combinatorial_explosion"}, {"score": 0.002226430168622392, "phrase": "state_space"}, {"score": 0.0022073031056287903, "phrase": "extensive_tests"}], "paper_keywords": ["Web services validation protocol", " Complex finite state machines", " Deadlock errors"], "paper_abstract": "Communicating Finite State Machines (CFSM) lack the high level syntactic and structural abstractions of Communicating Complex State Machines (CCSM), such as nesting and encapsulation, to model highly complex protocols that are likely to arise in web services environments. The incorporation of these features in a protocol specification model would require the design of a new validation technique to efficiently check for protocol errors, such as deadlocks and non-reachable transitions. A reachability graph is used to represent the execution states of the protocol and to verify their consistency. In this paper, we propose a new validation technique for protocols modeled with complex FSM, called RLRA (Reverse Leaping Reachability Analysis), which enables the detection of all deadlock errors. It is a backtracking approach, which first identifies an initial set of suspected states, those possibly containing deadlocks, then refines this set to those likely to cause deadlock, and finally backtracks through the graph while checking for errors until the root state of the protocol is reached. Leap graphs are employed to prune the number of execution states examined, and thereby mitigate the combinatorial explosion of the state space. Extensive tests and comparisons were performed, which show the effectiveness of our technique.", "paper_title": "Backward validation of communicating complex state machines in web services environments", "paper_id": "WOS:000275893000002"}