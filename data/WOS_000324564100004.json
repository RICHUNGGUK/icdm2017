{"auto_keywords": [{"score": 0.046273829908275756, "phrase": "control_software"}, {"score": 0.01540181578678468, "phrase": "embedded_control_software"}, {"score": 0.008717635354009932, "phrase": "code_generator"}, {"score": 0.00481495049065317, "phrase": "runtime_optimization"}, {"score": 0.004765482708043842, "phrase": "multiple_system_objectives"}, {"score": 0.00450231514359539, "phrase": "varying_operational_conditions"}, {"score": 0.004297795905522757, "phrase": "operational_state"}, {"score": 0.004188198923320451, "phrase": "multiple_objectives"}, {"score": 0.004102528738941734, "phrase": "well-known_techniques"}, {"score": 0.003956784357357341, "phrase": "current_practice"}, {"score": 0.0038758293658651237, "phrase": "applied_techniques"}, {"score": 0.003835972725191194, "phrase": "control_variables"}, {"score": 0.003757480190200645, "phrase": "related_design_decisions"}, {"score": 0.0035866734383189366, "phrase": "architecture_description"}, {"score": 0.003441352119167824, "phrase": "specific_characteristics"}, {"score": 0.0033883824438527316, "phrase": "embedded_system"}, {"score": 0.0030083825666563898, "phrase": "architectural_framework"}, {"score": 0.0029013950320185573, "phrase": "multi-objective_optimization"}, {"score": 0.0027837615811247963, "phrase": "architectural_style"}, {"score": 0.0027126684113045756, "phrase": "domain-specific_analysis_tools"}, {"score": 0.00257586859792573, "phrase": "optimizer_module"}, {"score": 0.002471400498582011, "phrase": "aspect-oriented_software_development_techniques"}, {"score": 0.0022053994402287925, "phrase": "industrial_case_study"}, {"score": 0.0021714122348552747, "phrase": "printing_systems_domain"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Architectural framework", " Multi-objective optimization", " Runtime adaptation", " Embedded systems", " Control software"], "paper_abstract": "Today's complex embedded systems function in varying operational conditions. The control software adapts several control variables to keep the operational state optimal with respect to multiple objectives. There exist well-known techniques for solving such optimization problems. However, current practice shows that the applied techniques, control variables, constraints and related design decisions are not documented as a part of the architecture description. Their implementation is implicit, tailored for specific characteristics of the embedded system, tightly integrated into and coupled with the control software, which hinders its reusability, analyzability and maintainability. This paper presents an architectural framework to design, document and realize multi-objective optimization in embedded control software. The framework comprises an architectural style together with its visual editor and domain-specific analysis tools, and a code generator. The code generator generates an optimizer module specific for the given architecture and it employs aspect-oriented software development techniques to seamlessly integrate this module into the control software. The effectiveness of the framework is validated in the context of an industrial case study from the printing systems domain. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "MOO: An architectural framework for runtime optimization of multiple system objectives in embedded control software", "paper_id": "WOS:000324564100004"}