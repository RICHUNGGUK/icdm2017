{"auto_keywords": [{"score": 0.026847768931295677, "phrase": "test_cases"}, {"score": 0.010612387000973441, "phrase": "real-time_systems"}, {"score": 0.004668659654386976, "phrase": "different_domains"}, {"score": 0.004620885890478087, "phrase": "telephone_switching_systems"}, {"score": 0.004589307360976108, "phrase": "air_traffic_control_systems"}, {"score": 0.004557943646825813, "phrase": "patient_monitoring_systems"}, {"score": 0.004241235563017201, "phrase": "output_events"}, {"score": 0.004212240534862585, "phrase": "time_constraints"}, {"score": 0.004098221047046135, "phrase": "main_cause"}, {"score": 0.0039464466517932706, "phrase": "severe_damage"}, {"score": 0.003919459003028067, "phrase": "human_lives"}, {"score": 0.003852791434660505, "phrase": "mandrioli"}, {"score": 0.0038267139293359786, "phrase": "d."}, {"score": 0.00365949103351756, "phrase": "computer_systems"}, {"score": 0.0032452142903668666, "phrase": "formal_techniques"}, {"score": 0.002927545222513142, "phrase": "test_case_generation_method"}, {"score": 0.002877700749616268, "phrase": "timed_input_output_automata"}, {"score": 0.002733187900351625, "phrase": "tioa"}, {"score": 0.002457059241474629, "phrase": "resulting_subautomaton"}, {"score": 0.002317636745271539, "phrase": "small_number"}, {"score": 0.0021049977753042253, "phrase": "error-free_implementation"}], "paper_keywords": ["Real-time systems", " TIOA", " testing", " formal methods"], "paper_abstract": "Real-time systems (RTSs) are used in different domains such as telephone switching systems, air traffic control systems and patient monitoring systems. The behavior of RTSs is time-sensitive; that is, RTSs interact with their environment with input and output events under time constraints. The violation of such time constraints is the main cause of the misbehavior of RTSs, and may result in severe damage to human lives and the environment [Mandrioli, D., Morasca, S., & Morzenti, A. 1995. ACM Transactions on Computer Systems, 13(4), 365-398]. To prevent failures in RTSs, we must verify that the implementation of an RTS is correct before its deployment. Testing is one of the formal techniques that can be used to achieve this goal. It consists of three main phases: test generation, test execution, and test results analysis. This paper presents a test case generation method for RTSs modeled as Timed Input Output Automata (TIOA). The approach is made in two steps. First, the TIOA describing the system being tested is sampled to construct a subautomaton, which is easily testable (i.e., easy to generate test cases from it). Then, the resulting subautomaton is traversed to generate test cases. Our method is scalable in the sense that it generates a small number of test cases even when the specifications are significant. Moreover, the test cases derived by our method are executable (i.e., they can be run on any error-free implementation of the system being tested).", "paper_title": "A scalable method for testing real-time systems", "paper_id": "WOS:000252169800002"}