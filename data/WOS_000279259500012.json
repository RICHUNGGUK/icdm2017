{"auto_keywords": [{"score": 0.03707229926323659, "phrase": "compression_function"}, {"score": 0.00481495049065317, "phrase": "blake_hash_function"}, {"score": 0.00440825801245188, "phrase": "bloke"}, {"score": 0.004338076511024884, "phrase": "brake_hash_functions"}, {"score": 0.004003517845770601, "phrase": "blake"}, {"score": 0.003908246778916674, "phrase": "bloke_hash_function"}, {"score": 0.0037544644262310525, "phrase": "message_words"}, {"score": 0.003437047283003159, "phrase": "brake"}, {"score": 0.002722634472231842, "phrase": "intermediate_hash_value"}, {"score": 0.002512342528545883, "phrase": "internal_collision"}, {"score": 0.0023558375480288297, "phrase": "equal_length"}, {"score": 0.0022268964676199292, "phrase": "internal_collisions"}, {"score": 0.002191366809047192, "phrase": "brake."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["BLAKE", " BLOKE", " BRAKE", " Collision", " Cryptography", " Fixed point", " Hash functions"], "paper_abstract": "In this paper we present an attack to the BLOKE and BRAKE hash functions, which are weakened versions of the SHA-3 candidate BLAKE. In difference to BLAKE, the BLOKE hash function does not permute the message words and constants in the round computation of the compression function, and BRAKE additionally removes feedforward and zeroes the constants used in each round of the compression function. We show that in these cases we can efficiently find, for any intermediate hash value, a fixed-point block giving us an internal collision, thus producing collisions for messages of equal length in case of BLOKE, and internal collisions for BRAKE. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Collisions for variants of the BLAKE hash function", "paper_id": "WOS:000279259500012"}