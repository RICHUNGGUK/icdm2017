{"auto_keywords": [{"score": 0.041417826861176184, "phrase": "environmental_model_development"}, {"score": 0.00481495049065317, "phrase": "environmental_modeling_framework_design"}, {"score": 0.004733458808453602, "phrase": "environmental_modeling_community"}, {"score": 0.004497129150551236, "phrase": "collective_model_development_tasks"}, {"score": 0.003976775340098895, "phrase": "mainstream_modeling_tools"}, {"score": 0.003909413809681226, "phrase": "scientific_understanding"}, {"score": 0.00388278852285898, "phrase": "environmental_phenomena"}, {"score": 0.0038563438670516127, "phrase": "software_developer_proficiency"}, {"score": 0.0037910145286595386, "phrase": "modeling_process"}, {"score": 0.0037523473563976246, "phrase": "model_code_development"}, {"score": 0.0037140731069193896, "phrase": "seamless_access"}, {"score": 0.0036386875640595944, "phrase": "data_analysis"}, {"score": 0.003528458369404996, "phrase": "model_components"}, {"score": 0.003504418473478722, "phrase": "functional_units"}, {"score": 0.0033406481167452436, "phrase": "spatial_data"}, {"score": 0.0031198362555601403, "phrase": "high-performance_computing"}, {"score": 0.003066945490483524, "phrase": "particular_modeling_domains"}, {"score": 0.00293357578778008, "phrase": "new_advances"}, {"score": 0.0029135770621039926, "phrase": "software_framework_design"}, {"score": 0.0028641729745364952, "phrase": "environmental_model_development_process"}, {"score": 0.002786858120570499, "phrase": "software_engineering_aspects"}, {"score": 0.002647458797373923, "phrase": "software_engineering_efforts"}, {"score": 0.0026114748685439116, "phrase": "modeling_community"}, {"score": 0.002549672862868133, "phrase": "emf_development"}, {"score": 0.002532284627202572, "phrase": "software_engineering_approaches"}, {"score": 0.002463906556781983, "phrase": "non-invasive_lightweight_framework_design"}, {"score": 0.002447101794397243, "phrase": "component-based_model_development"}, {"score": 0.0024138345020219333, "phrase": "implicit_parallelism"}, {"score": 0.002397370428991875, "phrase": "system_design"}, {"score": 0.0023566987138026285, "phrase": "specific_language_design_patterns"}, {"score": 0.002332626862738603, "phrase": "cloud-based_support"}, {"score": 0.002285216591220303, "phrase": "key_advancements"}, {"score": 0.0022696277881969896, "phrase": "emf_design"}, {"score": 0.002148677187261496, "phrase": "improved_framework_design"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Object Modeling System", " Environmental modeling frameworks", " Modeling and simulation", " Software engineering", " Software design"], "paper_abstract": "The environmental modeling community has historically been concerned with the proliferation of models and the effort associated with collective model development tasks (e.g., code generation, data transformation, etc.). Environmental modeling frameworks (EMFs) have been developed to address this problem, but much work remains before EMFs are adopted as mainstream modeling tools. Environmental model development requires both scientific understanding of environmental phenomena and software developer proficiency. EMFs support the modeling process through streamlining model code development, allowing seamless access to data, and supporting data analysis and visualization. EMFs also support aggregation of model components into functional units, component interaction and communication, temporal-spatial stepping, scaling of spatial data, multi-threading/multi-processor support, and cross-language interoperability. Some EMFs additionally focus on high-performance computing and are tailored for particular modeling domains such as ecosystem, socio-economic, or climate change research. The Object Modeling System Version 3 (OMS3) EMF employs new advances in software framework design to better support the environmental model development process. This paper discusses key EMF design goals/constraints and addresses software engineering aspects that have made OMS3 framework development efficacious and its application practical, as demonstrated by leveraging software engineering efforts outside of the modeling community and lessons learned from over a decade of EMF development. Software engineering approaches employed in OMS3 are highlighted including a non-invasive lightweight framework design supporting component-based model development, use of implicit parallelism in system design, use of domain specific language design patterns, and cloud-based support for computational scalability. The key advancements in EMF design presented herein may be applicable and beneficial for other EMF developers seeking to better support environmental model development through improved framework design. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "A software engineering perspective on environmental modeling framework design: The Object Modeling System", "paper_id": "WOS:000312517200015"}