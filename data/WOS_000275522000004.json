{"auto_keywords": [{"score": 0.04895869514720282, "phrase": "key_updates"}, {"score": 0.010018763551913916, "phrase": "group_controller"}, {"score": 0.006832486742622262, "phrase": "multicast_tree"}, {"score": 0.00481495049065317, "phrase": "secure_group_communication"}, {"score": 0.004677588817740052, "phrase": "secure_dynamic_group_communication"}, {"score": 0.004640808212832262, "phrase": "secure_groups"}, {"score": 0.004580145821004561, "phrase": "group_membership"}, {"score": 0.004472935829694716, "phrase": "new_keys"}, {"score": 0.004402854153653114, "phrase": "group_communication"}, {"score": 0.00433386573276633, "phrase": "current_key_management_algorithms"}, {"score": 0.004277198303015911, "phrase": "well-known_logical_key_hierarchical_algorithms"}, {"score": 0.004025885154716127, "phrase": "key-update_distribution_algorithms"}, {"score": 0.0038294117813503135, "phrase": "downstream_users"}, {"score": 0.003799275066001196, "phrase": "multicast_tree_and_forwarding_mechanisms"}, {"score": 0.003729871726054667, "phrase": "descendant_tracking_information"}, {"score": 0.0037005154613244363, "phrase": "forwarding_mechanisms"}, {"score": 0.0036043137580229873, "phrase": "key_management_algorithm"}, {"score": 0.0034829676478305015, "phrase": "encrypted_key_update"}, {"score": 0.003374572770620577, "phrase": "encrypting_key"}, {"score": 0.003312901888725435, "phrase": "required_key_update"}, {"score": 0.003278167066287366, "phrase": "minimal_state_overhead"}, {"score": 0.003218252325552682, "phrase": "n_bits"}, {"score": 0.0031761255583359726, "phrase": "n_users"}, {"score": 0.0031180699859857026, "phrase": "intermediate_nodes"}, {"score": 0.0030449789178940787, "phrase": "identifier_assignment_algorithm"}, {"score": 0.0030051134531731793, "phrase": "logical_identifiers"}, {"score": 0.0029579611933182514, "phrase": "physical_proximity"}, {"score": 0.002858313353461727, "phrase": "logically_clustered_users"}, {"score": 0.0028357972357118118, "phrase": "approximately_same_set"}, {"score": 0.002697245874076643, "phrase": "previous_solution"}, {"score": 0.0026063580561924023, "phrase": "secure_data_distribution"}, {"score": 0.0025118923081006625, "phrase": "group_users"}, {"score": 0.0024465151699093433, "phrase": "different_key_management_algorithms"}, {"score": 0.002376559242152662, "phrase": "bandwidth_reduction"}, {"score": 0.002266364679369248, "phrase": "topology_matching"}, {"score": 0.0022544399432457164, "phrase": "logical_key_tree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Secure group communication", " Key-update distribution", " Descendent tracking", " Identifier assignment", " Secure interval multicast"], "paper_abstract": "We focus on the problem of distributing key updates in secure dynamic group communication. In secure groups, to reflect changing group membership, the group controller needs to change and distribute new keys to ensure confidentiality of the group communication. However, in the current key management algorithms, which include the well-known logical key hierarchical algorithms, the group controller broadcasts all key updates even if only a Subset of users need them. In this paper, we describe key-update distribution algorithms for distributing keys to only those users who need them. Our algorithms consist of a descendant tracking scheme - to track downstream users in the multicast tree and forwarding mechanisms - to forward key updates using the descendant tracking information. The forwarding mechanisms, in turn, depend on the type of key management algorithm used by the group controller. Using our descendant tracking scheme, a node forwards an encrypted key update only if it believes that there are descendents who know the encrypting key which enables them to decrypt the required key update. Our descendant tracking scheme requires minimal state overhead, of the order of log N bits for a group of N users, to be stored at the intermediate nodes in the multicast tree. We also describe an identifier assignment algorithm that assigns closely clustered logical identifiers to users who are in physical proximity in the multicast tree. Our identifier assignment algorithms leverages the fact that logically clustered users require the approximately same set of key updates. We show that our identifier assignment algorithm improves the performance of our key update distribution algorithms as well as that of a previous solution. Furthermore, we show that, Our proposed algorithms reduce the cost of secure data distribution in applications where data needs to be sent securely to only a subset of the group users. To validate our algorithms, we tested them on different key management algorithms for distributing key updates and data. Our simulations results show that a bandwidth reduction of up to 55%, compared to broadcast, is achieved by our algorithms. We also discuss implications of topology matching and logical key tree balancing on Our key distribution algorithm and show that it is possible to achieve bandwidth saving up to 90% by combining all three techniques. (C) 2010 Published by Elsevier B.V.", "paper_title": "Key-update distribution in secure group communication", "paper_id": "WOS:000275522000004"}