{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sub-linear_time_string-matching_algorithm"}, {"score": 0.004670722261414736, "phrase": "bloom_filters"}, {"score": 0.004553822674247401, "phrase": "string_matching"}, {"score": 0.004241771072194993, "phrase": "software_implementation"}, {"score": 0.00409382470158851, "phrase": "high-speed_demand"}, {"score": 0.004011603024990615, "phrase": "hardware-based_solutions"}, {"score": 0.0038520615699124123, "phrase": "innovative_architecture"}, {"score": 0.003736567662016446, "phrase": "sub-linear_time"}, {"score": 0.0036801209922064817, "phrase": "algorithmic_heuristics"}, {"score": 0.003587924960158317, "phrase": "parallel_queries"}, {"score": 0.00349803055484394, "phrase": "space-efficient_bloom_filters"}, {"score": 0.0031603487697867538, "phrase": "multiple_characters"}, {"score": 0.0025663181430010686, "phrase": "verification_job"}, {"score": 0.0025275050635202878, "phrase": "verification_module"}, {"score": 0.002426842369975213, "phrase": "behavior_simulation"}, {"score": 0.0023780209525032688, "phrase": "timing_simulation"}, {"score": 0.0023301793939902015, "phrase": "antivirus_applications"}, {"score": 0.002214734873559146, "phrase": "windows_executable_files"}, {"score": 0.0021049977753042253, "phrase": "worst-case_performance"}], "paper_keywords": ["Algorithms", " field-programmable gate arrays (FPGAs)", " string matching"], "paper_abstract": "Many network security applications rely on string matching to detect intrusions, viruses, spam, and so on. Since software implementation may not keep pace with the high-speed demand, turning to hardware-based solutions becomes promising. This work presents an innovative architecture to realize string matching in sub-linear time based on algorithmic heuristics, which come from parallel queries to a set of space-efficient Bloom filters. The algorithm allows skipping characters not in a match in the text, and in turn simultaneously inspect multiple characters in effect. The techniques to reduce the impact of certain bad situations on performance are also proposed: the bad-block heuristic, a linear worst-case time method and a non-blocking interface to hand over the verification job to a verification module. This architecture is simulated with both behavior simulation in C and timing simulation in HDL for antivirus applications. The simulation shows that the throughput of scanning Windows executable files for more than 10 000 virus signatures can achieve 5.64 Gb/s, while the worst-case performance is 1.2 Gb/s if the signatures are properly specified.", "paper_title": "Realizing a Sub-Linear Time String-Matching Algorithm With a Hardware Accelerator Using Bloom Filters", "paper_id": "WOS:000268282700004"}