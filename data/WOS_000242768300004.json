{"auto_keywords": [{"score": 0.028281410189250105, "phrase": "test_agents"}, {"score": 0.015719716506582538, "phrase": "web_applications"}, {"score": 0.010496526325322343, "phrase": "data-flow_testing"}, {"score": 0.0041981583430961734, "phrase": "standard_technologies"}, {"score": 0.004068611852912931, "phrase": "dynamic_behaviors"}, {"score": 0.004036852178449883, "phrase": "heterogeneous_representations"}, {"score": 0.003989675045520656, "phrase": "novel_data_handling_mechanisms"}, {"score": 0.0039122637074546895, "phrase": "concrete_support"}, {"score": 0.003761900996118551, "phrase": "new_challenges"}, {"score": 0.0035332058983966424, "phrase": "testing_approaches"}, {"score": 0.0033183674218329904, "phrase": "wa_testing"}, {"score": 0.003241203549050267, "phrase": "agent-based_approach"}, {"score": 0.0030440661915657175, "phrase": "autonomous_test_agents"}, {"score": 0.0030084563186769764, "phrase": "method_level"}, {"score": 0.002926973459215349, "phrase": "cluster_level"}, {"score": 0.002892729377519916, "phrase": "low_abstraction_level"}, {"score": 0.0028701222153940283, "phrase": "high_abstraction_level"}, {"score": 0.002792375587031108, "phrase": "recommended_data-flow_testing"}, {"score": 0.0027597018725736165, "phrase": "agent-based_wa_testing_system"}, {"score": 0.0025816239578784067, "phrase": "entire_wa"}, {"score": 0.002155170294551251, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Web application testing", " data-flow testing", " agent-based framework"], "paper_abstract": "In recent years, Web applications (WAs) have grown so quickly that they have already become crucial to the success of businesses. However, since they are built on Internet and open standard technologies, WAs possess their own unique features, such as dynamic behaviors, heterogeneous representations, and novel data handling mechanisms. These features provide concrete support to the success of WAs, but they bring new challenges to researchers and developers, especially in regard to testing WAs and ensuring their quality. Testing approaches for non-WAs have to be extended to handle these features before they are used in WA testing. This paper presents an agent-based approach to perform data-flow testing of WAs. More precisely, the data-flow testing will be performed by autonomous test agents at the method level, object level, and object cluster level, from low abstraction level to high abstraction level. In the process of the recommended data-flow testing, an agent-based WA testing system (WAT) will automatically generate and coordinate test agents to decompose the task of testing an entire WA into a set of subtasks that can be accomplished by test agents. The test agents, rooted in the Belief-Desire-Intention (BDI) model, cooperate with each other to complete the testing of a WA. An example is used to show the feasibility of the proposed approach. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "An agent-based data-flow testing approach for Web applications", "paper_id": "WOS:000242768300004"}