{"auto_keywords": [{"score": 0.04152691671834336, "phrase": "test_code_quality"}, {"score": 0.010612387000973441, "phrase": "issue_handling_performance"}, {"score": 0.008608407393878187, "phrase": "source_code_metrics"}, {"score": 0.00476697427418509, "phrase": "automated_testing"}, {"score": 0.004695900553353526, "phrase": "basic_principle"}, {"score": 0.0046491050101721545, "phrase": "agile_development"}, {"score": 0.004556901872357751, "phrase": "early_defect_detection"}, {"score": 0.004511485198940203, "phrase": "defect_cause_localization"}, {"score": 0.004184921610672245, "phrase": "high_quality_test_code"}, {"score": 0.003441891354624516, "phrase": "quality_ratings"}, {"score": 0.003051601113971322, "phrase": "handling_performance"}, {"score": 0.0029169007179202164, "phrase": "test_code_quality_model"}, {"score": 0.002816246391862638, "phrase": "test_quality_ratings"}, {"score": 0.0027327327233891865, "phrase": "issue_handling_indicators"}, {"score": 0.0026516890043911836, "phrase": "mining_issue_repositories"}, {"score": 0.002315658491366464, "phrase": "significant_positive_correlation"}, {"score": 0.0021049977753042253, "phrase": "good_test_code_quality"}], "paper_keywords": ["Testing", " defects", " bugs", " metrics", " measurement"], "paper_abstract": "Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect cause localization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test code quality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the Software Improvement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment is conducted in which the test code quality model is applied to 18 open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance.", "paper_title": "Test Code Quality and Its Relation to Issue Handling Performance", "paper_id": "WOS:000346224200004"}