{"auto_keywords": [{"score": 0.049027569260597106, "phrase": "goanna"}, {"score": 0.008432917295707495, "phrase": "underlying_technology"}, {"score": 0.004544770921520536, "phrase": "software_bugs"}, {"score": 0.00450456611645112, "phrase": "security_vulnerabilities"}, {"score": 0.004347256848088215, "phrase": "formal_software_analysis_techniques"}, {"score": 0.004289686492089571, "phrase": "model_checking"}, {"score": 0.004251728624599691, "phrase": "static_analysis"}, {"score": 0.004214134435419281, "phrase": "smt"}, {"score": 0.004139850082354509, "phrase": "commercial_version"}, {"score": 0.003995226376780718, "phrase": "wide_range"}, {"score": 0.003737485125097945, "phrase": "independent_software_vendor"}, {"score": 0.003543273649210823, "phrase": "largest_deployments"}, {"score": 0.0035118972210075633, "phrase": "automated_formal_methods_technology"}, {"score": 0.003314591878914152, "phrase": "positive_results"}, {"score": 0.0032272929113113203, "phrase": "technology_transfer_process"}, {"score": 0.003073154478201771, "phrase": "design_decisions"}, {"score": 0.002992195343569767, "phrase": "large_industrial_code_bases"}, {"score": 0.0029394074636168435, "phrase": "engineering_challenges"}, {"score": 0.002761856557698856, "phrase": "core_aspects"}, {"score": 0.0027252240573281163, "phrase": "bigger_picture"}, {"score": 0.002689076130099546, "phrase": "formal_techniques"}, {"score": 0.0026652435674846095, "phrase": "commercial_products"}, {"score": 0.0024490834773668153, "phrase": "particular_focus"}, {"score": 0.0022404162042797262, "phrase": "wider_field"}, {"score": 0.002220551141101661, "phrase": "formal_analysis"}, {"score": 0.002200861826643147, "phrase": "verification_technology"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Static analysis", " Model checking", " SMT solving", " Industrial application", " Experience report"], "paper_abstract": "In this work we report on our experiences on developing and commercializing Goanna, a source code analyzer for detecting software bugs and security vulnerabilities in C/C++ code. Goanna is based on formal software analysis techniques such as model checking, static analysis and SMT solving. The commercial version of Goanna is currently deployed in a wide range of organizations around the world. Moreover, the underlying technology is licensed to an independent software vendor with tens of thousands of customers, making it possibly one of the largest deployments of automated formal methods technology. This paper explains some of the challenges as well as the positive results that we encountered in the technology transfer process. In particular, we provide some background on the design decisions and techniques to deal with large industrial code bases, we highlight engineering challenges and efforts that are typically outside of a more academic setting, and we address core aspects of the bigger picture for transferring formal techniques into commercial products, namely, the adoption of such technology and the value for purchasing organizations. While we provide a particular focus on Goanna and our experience with that underlying technology, we believe that many of those aspects hold true for the wider field of formal analysis and verification technology and its adoption in industry. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Technology transfer: Formal analysis, engineering, and business value", "paper_id": "WOS:000351964100002"}