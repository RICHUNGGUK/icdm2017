{"auto_keywords": [{"score": 0.024897093404206136, "phrase": "server_sites"}, {"score": 0.004594326191526569, "phrase": "server_resources"}, {"score": 0.004544859094594241, "phrase": "large-scale_decentralized_distributed_systems"}, {"score": 0.004305364955542171, "phrase": "network_link_or_server_failures"}, {"score": 0.004137761530535196, "phrase": "failure_conditions"}, {"score": 0.004093190049699647, "phrase": "grid_job"}, {"score": 0.004049096735491828, "phrase": "virtual_machine"}, {"score": 0.0039623243082901214, "phrase": "alternate_destination"}, {"score": 0.0038356264368681107, "phrase": "failure-free_conditions"}, {"score": 0.003699579190650754, "phrase": "known_origin"}, {"score": 0.003416963042033614, "phrase": "grid_applications"}, {"score": 0.0032484270911235526, "phrase": "virtual_machines"}, {"score": 0.0032134045046357876, "phrase": "cloud_case"}, {"score": 0.0031558679589831287, "phrase": "generic_methodology"}, {"score": 0.0031218401638802053, "phrase": "integer_linear_programming"}, {"score": 0.0030993902283435325, "phrase": "ilp"}, {"score": 0.0029146651796243704, "phrase": "server_infrastructure"}, {"score": 0.002790940765338191, "phrase": "server_capacity"}, {"score": 0.0025683289326950895, "phrase": "european"}, {"score": 0.0024591984725764932, "phrase": "total_amount"}, {"score": 0.0023804491500749106, "phrase": "sparse_topologies"}, {"score": 0.002354762471810519, "phrase": "higher_numbers"}, {"score": 0.0023042157412517333, "phrase": "failure-dependent_backup_routing_strategy"}, {"score": 0.0022711207841260767, "phrase": "lower_resource_dimensions"}, {"score": 0.0021746545596056125, "phrase": "high_number"}, {"score": 0.0021049977753042253, "phrase": "potential_savings"}], "paper_keywords": ["Anycast", " cloud computing", " column generation", " dimensioning", " grid computing", " integer linear programming (ILP)", " linear programming", " optical networks"], "paper_abstract": "We address the dimensioning of infrastructure, comprising both network and server resources, for large-scale decentralized distributed systems such as grids or clouds. We design the resulting grid/cloud to be resilient against network link or server failures. To this end, we exploit relocation: Under failure conditions, a grid job or cloud virtual machine may be served at an alternate destination (i.e., different from the one under failure-free conditions). We thus consider grid/cloud requests to have a known origin, but assume a degree of freedom as to where they end up being served, which is the case for grid applications of the bag-of-tasks (BoT) type or hosted virtual machines in the cloud case. We present a generic methodology based on integer linear programming (ILP) that: 1) chooses a given number of sites in a given network topology where to install server infrastructure; and 2) determines the amount of both network and server capacity to cater for both the failure-free scenario and failures of links or nodes. For the latter, we consider either failure-independent (FID) or failure-dependent (FD) recovery. Case studies on European-scale networks show that relocation allows considerable reduction of the total amount of network and server resources, especially in sparse topologies and for higher numbers of server sites. Adopting a failure-dependent backup routing strategy does lead to lower resource dimensions, but only when we adopt relocation (especially for a high number of server sites): Without exploiting relocation, potential savings of FD versus FID are not meaningful.", "paper_title": "Joint Dimensioning of Server and Network Infrastructure for Resilient Optical Grids/Clouds", "paper_id": "WOS:000344157600016"}