{"auto_keywords": [{"score": 0.027852783834442715, "phrase": "robdd"}, {"score": 0.00481495049065317, "phrase": "prime_implicants"}, {"score": 0.004622450915803531, "phrase": "program_analysis"}, {"score": 0.004552255360140208, "phrase": "extensive_literature"}, {"score": 0.004506048850130758, "phrase": "robdd_minimisation"}, {"score": 0.0036740168936985314, "phrase": "abstract_interpretation"}, {"score": 0.0036181717017041387, "phrase": "running_time"}, {"score": 0.0033857878144822906, "phrase": "individual_robdd_operations"}, {"score": 0.0029798924689472014, "phrase": "boolean_function"}, {"score": 0.0021928902836049384, "phrase": "weaker_function"}, {"score": 0.0021049977753042253, "phrase": "stronger_function"}], "paper_keywords": ["ROBDD", " widening", " approximation", " abstract interpretation"], "paper_abstract": "Despite the ubiquity of ROBDDs in program analysis, and extensive literature on ROBDD minimisation, there is a dearth of work on approximating ROBDDs. The need for approximation arises because many ROBDD operations result in an ROBDD whose size is quadratic in the size of the inputs. Furthermore, if ROBDDs are used in abstract interpretation, the running time of the analysis is related not only to the complexity of the individual ROBDD operations but also the number of operations applied. The number of operations is, in turn, constrained by the number of times a Boolean function can be weakened before stability is achieved. This paper proposes a widening that can be used to both constrain the size of an ROBDD and also ensure that the number of times that it is weakened is bounded by some given constant. The widening can be used to either systematically approximate from above (i.e. derive a weaker function) or below (i.e. infer a stronger function).", "paper_title": "Widening ROBDDs with prime implicants", "paper_id": "WOS:000236941100007"}