{"auto_keywords": [{"score": 0.04897776997473007, "phrase": "efficient_behavioral_synthesis"}, {"score": 0.00481495049065317, "phrase": "sequential_programs"}, {"score": 0.004386887374401584, "phrase": "behavioral_level_partitioning_method"}, {"score": 0.004138813595009761, "phrase": "large_sequential_program"}, {"score": 0.0033952989364738353, "phrase": "main_module"}, {"score": 0.003093054709625219, "phrase": "sub_modules"}, {"score": 0.002917931350071647, "phrase": "overall_datapath"}, {"score": 0.0026892447164623247, "phrase": "individual_modules"}, {"score": 0.0024496978447849835, "phrase": "partitioning_problem"}, {"score": 0.002310915790114425, "phrase": "integer_programming_problem"}, {"score": 0.0022576249214220187, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_method"}], "paper_keywords": ["behavioral synthesis", " function-level partitioning", " integer programming problem"], "paper_abstract": "This paper proposes a behavioral level partitioning method for efficient behavioral synthesis from a large sequential program consisting of a set of functions. Our method optimally determines functions to be inlined into the main module and the other functions to be synthesized into sub modules in such a way that the overall datapath is minimized while the complexity of individual modules is lower than a certain level. The partitioning problem is formulated as an integer programming problem. Experimental results show the effectiveness of the proposed method.", "paper_title": "Function-level partitioning of sequential programs for efficient behavioral synthesis", "paper_id": "WOS:000252020700025"}