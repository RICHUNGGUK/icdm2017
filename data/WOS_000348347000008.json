{"auto_keywords": [{"score": 0.04771869171148843, "phrase": "genome_rearrangement_field"}, {"score": 0.00481495049065317, "phrase": "genome_rearrangement_problems"}, {"score": 0.004661116930794176, "phrase": "general_heuristic"}, {"score": 0.0042436501739199495, "phrase": "non-optimal_algorithm"}, {"score": 0.0034046409849387365, "phrase": "classic_problem"}, {"score": 0.003000171314687074, "phrase": "better_approximation_ratio"}, {"score": 0.0029358111718032704, "phrase": "rearrangement_problem"}, {"score": 0.0028418430688995247, "phrase": "practical_implementation"}, {"score": 0.002721201438773336, "phrase": "best_practical_results"}, {"score": 0.002549749054599413, "phrase": "transpositions_problem"}, {"score": 0.0024151333926491878, "phrase": "good_results"}, {"score": 0.0023042157412517333, "phrase": "optimum_solutions"}, {"score": 0.0021202820950055193, "phrase": "new_approaches"}], "paper_keywords": ["Genome rearrangement", " sorting by transpositions", " sorting by reversals", " general heuristic"], "paper_abstract": "In this paper, we present a general heuristic for several problems in the genome rearrangement field. Our heuristic does not solve any problem directly, it is rather used to improve the solutions provided by any non-optimal algorithm that solve them. Therefore, we have implemented several algorithms described in the literature and several algorithms developed by ourselves. As a whole, we implemented 23 algorithms for 9 well known problems in the genome rearrangement field. A total of 13 algorithms were implemented for problems that use the notions of prefix and suffix operations. In addition, we worked on 5 algorithms for the classic problem of sorting by transposition and we conclude the experiments by presenting results for 3 approximation algorithms for the sorting by reversals and transpositions problem and 2 approximation algorithms for the sorting by reversals problem. Another algorithm with better approximation ratio can be found for the last genome rearrangement problem, but it is purely theoretical with no practical implementation. The algorithms we implemented in addition to our heuristic lead to the best practical results in each case. In particular, we were able to improve results on the sorting by transpositions problem, which is a very special case because many efforts have been made to generate algorithms with good results in practice and some of these algorithms provide results that equal the optimum solutions in many cases. Our source codes and benchmarks are freely available upon request from the authors so that it will be easier to compare new approaches against our results.", "paper_title": "A general heuristic for genome rearrangement problems", "paper_id": "WOS:000348347000008"}