{"auto_keywords": [{"score": 0.04393760318192205, "phrase": "fcc"}, {"score": 0.014364204360259078, "phrase": "data_path"}, {"score": 0.00481495049065317, "phrase": "dsp_kernels"}, {"score": 0.004721893473387288, "phrase": "high-performance_data_path"}, {"score": 0.0042550030421781605, "phrase": "flexible_computational_component"}, {"score": 0.004039094712469991, "phrase": "pure_combinational_circuit"}, {"score": 0.003735522846193052, "phrase": "primitive_resources"}, {"score": 0.003454687811707182, "phrase": "intracomponent_chaining"}, {"score": 0.0033006894756949776, "phrase": "flexible_structure"}, {"score": 0.00307240091019322, "phrase": "small_number"}, {"score": 0.002935393439834135, "phrase": "direct_connections"}, {"score": 0.0028228178454284825, "phrase": "intercomponent_chaining"}, {"score": 0.0025266963982350523, "phrase": "simple_and_efficient_algorithms"}, {"score": 0.002413964586947992, "phrase": "data_flow_graph"}, {"score": 0.002336527289457915, "phrase": "dsp_benchmarks"}, {"score": 0.0022763657774198184, "phrase": "fcc_data_path_method"}, {"score": 0.0022468671200629024, "phrase": "significant_performance_improvements"}, {"score": 0.002189009136006588, "phrase": "template-based_data_path_designs"}, {"score": 0.0021187728322916285, "phrase": "execution_time"}], "paper_keywords": ["binding", " chaining", " high-performance data-path", " scheduling", " template units"], "paper_abstract": "A high-performance data path to implement digital signal processing (DSP) kernels is introduced in this paper. The data path is realized by a flexible computational component (FCC), which is a pure combinational circuit and-it can implement any 2 x 2 template (cluster) of primitive resources. Thus, the data path's performance benefits from the intracomponent chaining of operations. Due to the flexible structure of the FCC, the data path is implemented by a small number of such components. This allows for direct connections among FCCs and for exploiting intercomponent chaining, which further improves performance. Due to the universality and flexibility of the FCC, simple and efficient algorithms perform scheduling and binding of the data flow graph (DFG). DSP benchmarks synthesized with the FCC data path method show significant performance improvements when compared with template-based data path designs. Detailed results on execution time, FCC utilization, and area are presented.", "paper_title": "A high-performance data path for synthesizing DSP kernels", "paper_id": "WOS:000237956000017"}