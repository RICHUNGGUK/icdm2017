{"auto_keywords": [{"score": 0.04756494355891956, "phrase": "mm"}, {"score": 0.029239768019198125, "phrase": "karatsuba"}, {"score": 0.00481495049065317, "phrase": "modular_multiplication"}, {"score": 0.004645057834614705, "phrase": "large_integer_modular_multiplication"}, {"score": 0.004441059405327222, "phrase": "modular_exponentiation"}, {"score": 0.004023187718017638, "phrase": "rsa"}, {"score": 0.003951453722517865, "phrase": "diffie-helleman"}, {"score": 0.0035473867669654174, "phrase": "mm_algorithms"}, {"score": 0.003071965703296204, "phrase": "well-known_montgomery_multiplication_method"}, {"score": 0.0028844769395018595, "phrase": "standard_multiplication_operations"}, {"score": 0.002708490214469803, "phrase": "fft"}, {"score": 0.0025202582748972122, "phrase": "hardware_implementation"}, {"score": 0.002282667669149476, "phrase": "original_implementations"}], "paper_keywords": ["cryptography", " multiplication", " modular arithmetic", " hardware complexity"], "paper_abstract": "Large integer Modular Multiplication (MM) and Modular Exponentiation (ME) are the foundation of most public-key cryptosystems, specifically RSA, Diffie-Helleman, ElGamal, and the Elliptic Curve Cryptosystems. Thus, MM algorithms have been studied widely and extensively. Most of the work is based on the well-known Montgomery Multiplication Method and its variants, which require standard multiplication operations. Despite their better complexity orders, Karatsuba and FFT algorithms seem to rarely be used for hardware implementation. In this paper, we review their hardware complexity and propose original implementations of MM and ME that become useful for 24-bit operators (Karatsuba algorithm) or 373-bit operators (FFT algorithm).", "paper_title": "Hardware complexity of modular multiplication and exponentiation", "paper_id": "WOS:000248891000002"}