{"auto_keywords": [{"score": 0.04851462386946882, "phrase": "unit_testing_techniques"}, {"score": 0.03667961778394491, "phrase": "software_engineering"}, {"score": 0.03397963527554084, "phrase": "testing_techniques"}, {"score": 0.00481495049065317, "phrase": "maturing_software_engineering_knowledge"}, {"score": 0.004561950666122737, "phrase": "significant_contribution"}, {"score": 0.0039446780026489905, "phrase": "practical_application"}, {"score": 0.0038796562792487, "phrase": "object_selection"}, {"score": 0.003784120134537663, "phrase": "software_engineering_knowledge"}, {"score": 0.003690927840780375, "phrase": "organized_structure"}, {"score": 0.003660374693346876, "phrase": "knowledge_items"}, {"score": 0.00313849462329633, "phrase": "preliminary_classification"}, {"score": 0.002948689937518561, "phrase": "generic_process"}, {"score": 0.0029121251930855664, "phrase": "useful_software_engineering_classifications"}, {"score": 0.0028760125558659907, "phrase": "proposed_classification"}, {"score": 0.002805121439110729, "phrase": "maturing_knowledge"}, {"score": 0.002591927716261631, "phrase": "systematic_description"}, {"score": 0.002306855521822739, "phrase": "potentially_useful_techniques"}, {"score": 0.0021314498639048085, "phrase": "testing_technique_selection"}, {"score": 0.0021049977753042253, "phrase": "technique_characteristics"}], "paper_keywords": ["Classification", " software engineering", " software testing", " test design techniques", " testing techniques", " unit testing techniques"], "paper_abstract": "Classification makes a significant contribution to advancing knowledge in both science and engineering. It is a way of investigating the relationships between the objects to be classified and identifies gaps in knowledge. Classification in engineering also has a practical application; it supports object selection. They can help mature Software Engineering knowledge, as classifications constitute an organized structure of knowledge items. Till date, there have been few attempts at classifying in Software Engineering. In this research, we examine how useful classifications in Software Engineering are for advancing knowledge by trying to classify testing techniques. The paper presents a preliminary classification of a set of unit testing techniques. To obtain this classification, we enacted a generic process for developing useful Software Engineering classifications. The proposed classification has been proven useful for maturing knowledge about testing techniques, and therefore, SE, as it helps to: 1) provide a systematic description of the techniques, 2) understand testing techniques by studying the relationships among techniques ( measured in terms of differences and similarities), 3) identify potentially useful techniques that do not yet exist by analyzing gaps in the classification, and 4) support practitioners in testing technique selection by matching technique characteristics to project characteristics.", "paper_title": "Maturing Software Engineering Knowledge through Classifications: A Case Study on Unit Testing Techniques", "paper_id": "WOS:000268305800009"}