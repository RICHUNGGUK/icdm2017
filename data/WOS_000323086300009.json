{"auto_keywords": [{"score": 0.04939024695118498, "phrase": "ubiquitous_systems"}, {"score": 0.00481495049065317, "phrase": "requirements_engineering"}, {"score": 0.004700027722284931, "phrase": "recent_technological_advances"}, {"score": 0.00456571874088313, "phrase": "ubiquitous_computing"}, {"score": 0.004413846562278824, "phrase": "numerous_software_systems"}, {"score": 0.004225950334493496, "phrase": "new_paradigm"}, {"score": 0.003949377440799037, "phrase": "development_process"}, {"score": 0.0038364365168131586, "phrase": "important_part"}, {"score": 0.0035852640843794252, "phrase": "system_design"}, {"score": 0.0034325187732054093, "phrase": "non-functional_requirements"}, {"score": 0.00328625950643742, "phrase": "important_features"}, {"score": 0.00317681090697906, "phrase": "higher_quality_designs"}, {"score": 0.003070996252787868, "phrase": "requirements_engineering_method"}, {"score": 0.002954361295811154, "phrase": "reubi"}, {"score": 0.0028421434495262796, "phrase": "goal-based_method"}, {"score": 0.0027341763737751467, "phrase": "adverse_situations"}, {"score": 0.0026817365934071486, "phrase": "evaluation_procedure"}, {"score": 0.002579847272930948, "phrase": "objectives_satisfaction"}, {"score": 0.002446024708601971, "phrase": "positioning_service"}, {"score": 0.0024107449502335583, "phrase": "real_system"}, {"score": 0.002230984431056064, "phrase": "software_engineers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Non-functional requirements", " Requirements engineering", " Ubiquitous systems", " Software design", " Context-awareness", " Positioning systems"], "paper_abstract": "Recent technological advances are increasing the spread of Ubiquitous Computing, leading to the appearance of numerous software systems, which benefit from the features of this new paradigm. Nevertheless, there are a lack of methodologies to properly support the development process of these systems. An important part of the Software Engineering lifecycle is the Requirements Engineering stage, as it grounds the bases for system design for their success. In particular, systematically addressing Non-Functional Requirements such as dynamicity and adaptation, that are important features of ubiquitous systems, eventually leads to higher quality designs. In this paper, a Requirements Engineering Method for the analysis of Ubiquitous Systems, called REUBI, is introduced. It is a goal-based method that represents the influence of context and adverse situations, providing an evaluation procedure to help in the decision making about objectives satisfaction. The proposal is illustrated through the analysis of a Positioning Service of a real system. Additionally, the application of the method has been evaluated by a team of software engineers for the analysis of an Ambient Assisted Living (AAL) health care system. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "REUBI: A Requirements Engineering method for ubiquitous systems", "paper_id": "WOS:000323086300009"}