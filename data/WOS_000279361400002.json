{"auto_keywords": [{"score": 0.03478167905660461, "phrase": "system_evolution"}, {"score": 0.009969762971430207, "phrase": "large-scale_reuse"}, {"score": 0.009597482178119445, "phrase": "sequence_diagrams"}, {"score": 0.00481495049065317, "phrase": "large_multidomain_multifunctional_embedded_systems"}, {"score": 0.004778258911940497, "phrase": "hardware-software_partitioning"}, {"score": 0.004723742646716804, "phrase": "important_phase"}, {"score": 0.004687742829233727, "phrase": "embedded_systems"}, {"score": 0.0043258453436258405, "phrase": "final_product"}, {"score": 0.004053362743156545, "phrase": "relatively_fine_granularity"}, {"score": 0.003991774582021095, "phrase": "low-level_executable_specification"}, {"score": 0.003769006950727621, "phrase": "industrial_products"}, {"score": 0.0037402558657576124, "phrase": "frequent_release"}, {"score": 0.003711723285313348, "phrase": "upgraded_or_new_members"}, {"score": 0.0036274201504044685, "phrase": "low-level_specification"}, {"score": 0.00346449481422526, "phrase": "high-level_specification"}, {"score": 0.003438058620195309, "phrase": "component-based_development"}, {"score": 0.0033857878144822906, "phrase": "better_option"}, {"score": 0.003347105144425849, "phrase": "component_integration"}, {"score": 0.0033215617190376565, "phrase": "replacement_problems"}, {"score": 0.0032710562699144814, "phrase": "new_product_release"}, {"score": 0.0032336801561165113, "phrase": "new_approach"}, {"score": 0.00307657476125683, "phrase": "product_lines"}, {"score": 0.002949614557703259, "phrase": "uml"}, {"score": 0.0028936226331006563, "phrase": "concept_repository_concepts"}, {"score": 0.002680114113899346, "phrase": "interpart_communication"}, {"score": 0.0026494723416072316, "phrase": "system_specification"}, {"score": 0.0024633601573822114, "phrase": "configurable_feature_variations"}, {"score": 0.002435190484324197, "phrase": "product_line"}, {"score": 0.0023889533502525527, "phrase": "generic_adaptive_layer"}, {"score": 0.0023435920614377306, "phrase": "selected_concepts"}, {"score": 0.002246799280512825, "phrase": "unmanned_aerial_vehicle"}, {"score": 0.002129356014992349, "phrase": "performance_and_size_overhead"}], "paper_keywords": ["Design", " Experimentation", " Codesign", " embedded system design", " UML", " system partitioning", " product families", " system evolution"], "paper_abstract": "Hardware-software partitioning is an important phase in embedded systems. Decisions made during this phase impact the quality, cost, performance, and the delivery date of the final product. Over the past decade or more, various partitioning approaches have been proposed. A majority operate at a relatively fine granularity and use a low-level executable specification as the starting point. This presents problems if the context is families of industrial products with frequent release of upgraded or new members. Managing complexity using a low-level specification is extremely challenging and impacts developer productivity. Designing using a high-level specification and component-based development, although a better option, imposes component integration and replacement problems during system evolution and new product release. A new approach termed Concept-Based Partitioning is presented that focuses on system evolution, product lines, and large-scale reuse when partitioning. Beginning with information from UML 2.0 sequence diagrams and a concept repository concepts are identified and used as the unit of partitioning within a specification. A methodology for the refinement of interpart communication in the system specification using sequence diagrams is also presented. Change localization during system evolution, composability during large-scale reuse, and provision for configurable feature variations for a product line are facilitated by a Generic Adaptive Layer (GAL) around selected concepts. The methodology was applied on a subsystem of an Unmanned Aerial Vehicle (UAV) using various concepts which improved the composability of concepts while keeping performance and size overhead within the 2% range.", "paper_title": "Concept-Based Partitioning for Large Multidomain Multifunctional Embedded Systems", "paper_id": "WOS:000279361400002"}