{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "concurrency_control_protocol"}, {"score": 0.0047563776685277314, "phrase": "clipping_indexing"}, {"score": 0.004698514007994158, "phrase": "multidimensional_databases"}, {"score": 0.004473982381245469, "phrase": "wide_range"}, {"score": 0.00428629884026304, "phrase": "fast-growing_demand"}, {"score": 0.004208282550386197, "phrase": "r-tree_family"}, {"score": 0.00405646687267772, "phrase": "fast_access"}, {"score": 0.004007083686875716, "phrase": "multidimensional_data"}, {"score": 0.0037459885494311217, "phrase": "efficient_concurrent_access"}, {"score": 0.003700371064796848, "phrase": "multiuser_environments"}, {"score": 0.0036553070575015344, "phrase": "concurrency_control_mechanisms"}, {"score": 0.0036107898615445797, "phrase": "multidimensional_indexing"}, {"score": 0.0030601162942933665, "phrase": "multiple_leaves"}, {"score": 0.002913650880082273, "phrase": "r-tree_variants"}, {"score": 0.002641360377825228, "phrase": "glip"}, {"score": 0.00259320616168125, "phrase": "first_concurrency_control_approach"}, {"score": 0.002409188797323273, "phrase": "efficient_concurrent_operations"}, {"score": 0.0023798115577749225, "phrase": "serializable_isolation"}, {"score": 0.0022519745140925475, "phrase": "experimental_tests"}, {"score": 0.002210903392596343, "phrase": "real_and_synthetic_data_sets"}, {"score": 0.0021049977753042253, "phrase": "proposed_concurrent_access_framework"}], "paper_keywords": [""], "paper_abstract": "Multidimensional databases are beginning to be used in a wide range of applications. To meet this fast-growing demand, the R-tree family is being applied to support fast access to multidimensional data, for which the R+-tree exhibits outstanding search performance. In order to support efficient concurrent access in multiuser environments, concurrency control mechanisms for multidimensional indexing have been proposed. However, these mechanisms cannot be directly applied to the R+-tree because an object in the R+-tree may be indexed in multiple leaves. This paper proposes a concurrency control protocol for R-tree variants with object clipping, namely, Granular Locking for clIPping indexing (GLIP). GLIP is the first concurrency control approach specifically designed for the R+-tree and its variants, and it supports efficient concurrent operations with serializable isolation, consistency, and deadlock-free. Experimental tests on both real and synthetic data sets validated the effectiveness and efficiency of the proposed concurrent access framework.", "paper_title": "GLIP: A Concurrency Control Protocol for Clipping Indexing", "paper_id": "WOS:000264300600008"}