{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_computation_patterns"}, {"score": 0.004734448316824488, "phrase": "parallel_computation"}, {"score": 0.0046161999598320486, "phrase": "high-performance_computing_environment"}, {"score": 0.004388450908826472, "phrase": "distributed_memory_access_patterns"}, {"score": 0.004278807087784626, "phrase": "underlying_algorithm"}, {"score": 0.004033464035028803, "phrase": "compute_nodes"}, {"score": 0.003802135020791801, "phrase": "access_patterns"}, {"score": 0.003584025547693836, "phrase": "observable_messages"}, {"score": 0.0034359094594153304, "phrase": "latent_class_analysis"}, {"score": 0.003266201217790818, "phrase": "computational_network"}, {"score": 0.002951444412262927, "phrase": "network_theory"}, {"score": 0.00287759989638073, "phrase": "parallel_computations"}, {"score": 0.002805597755796506, "phrase": "network_communication_patterns"}, {"score": 0.002758597251689795, "phrase": "pattern_classification"}, {"score": 0.0026222551419772867, "phrase": "anomaly_detection"}, {"score": 0.00257831812581194, "phrase": "performance_analysis"}, {"score": 0.0025137856138000014, "phrase": "automated_algorithm_replacement"}, {"score": 0.002349467661235186, "phrase": "previous_efforts"}, {"score": 0.00215905882697518, "phrase": "massive_datasets"}, {"score": 0.0021049977753042253, "phrase": "lawrence_berkeley_national_laboratory"}], "paper_keywords": ["communication patterns", " computational dwarves", " pattern recognition", " graph theory", " network theory"], "paper_abstract": "Parallel computation in a high-performance computing environment can be characterized by the distributed memory access patterns of the underlying algorithm. During execution, networks of compute nodes exchange messages that indirectly exhibit these access patterns. Identifying the algorithm underlying these observable messages is the problem of latent class analysis over information flows in a computational network. Towards this end, our work applies methods from graph and network theory to classify parallel computations solely from network communication patterns. Pattern classification has applications to several areas including anomaly detection, performance analysis, and automated algorithm replacement. We discuss the difficulties encountered by previous efforts, introduce two new approximate matching techniques, and compare these approaches using massive datasets collected at Lawrence Berkeley National Laboratory.", "paper_title": "Network-theoretic classification of parallel computation patterns", "paper_id": "WOS:000304698700008"}