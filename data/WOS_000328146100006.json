{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minimum_shared_edges"}, {"score": 0.0046797114400479135, "phrase": "security_problem"}, {"score": 0.004626680470601208, "phrase": "geographic_information_systems"}, {"score": 0.004104722208522451, "phrase": "number_k"}, {"score": 0.004035107125458193, "phrase": "k_paths"}, {"score": 0.0034789831290103967, "phrase": "well-known_disjoint_paths_problem"}, {"score": 0.0031406747152934004, "phrase": "np"}, {"score": 0.0028653893877383188, "phrase": "minimum_number"}, {"score": 0.0028328599839713866, "phrase": "shared_edges"}, {"score": 0.0025561788724870974, "phrase": "positive_side"}, {"score": 0.0023064582783867645, "phrase": "network_flow_algorithm"}, {"score": 0.0021049977753042253, "phrase": "empirical_results"}], "paper_keywords": ["Minimum shared edges problem", " Approximation algorithm", " Inapproximability", " Heuristic algorithms"], "paper_abstract": "Motivated by a security problem in geographic information systems, we study the following graph theoretical problem: given a graph G, two special nodes s and t in G, and a number k, find k paths from s to t in G so as to minimize the number of edges shared among the paths. This is a generalization of the well-known disjoint paths problem. While disjoint paths can be computed efficiently, we show that finding paths with minimum shared edges is NP-hard. Moreover, we show that it is even hard to approximate the minimum number of shared edges within a factor of 2(log1-epsilon) n, for any constant epsilon > 0. On the positive side, we show that there exists a (k - 1)-approximation algorithm for the problem, using an adaption of a network flow algorithm. We design some heuristics to improve the quality of the output, and provide empirical results.", "paper_title": "Finding paths with minimum shared edges", "paper_id": "WOS:000328146100006"}