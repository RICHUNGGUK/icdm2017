{"auto_keywords": [{"score": 0.0500768684496286, "phrase": "wavelet_neural_network"}, {"score": 0.037045008134528865, "phrase": "pso"}, {"score": 0.004757227624616643, "phrase": "particle_swarm_optimization_learning"}, {"score": 0.004478784163914632, "phrase": "wnn"}, {"score": 0.004398457709182882, "phrase": "learning_ability"}, {"score": 0.004345706062641742, "phrase": "field_programmable_gate_array"}, {"score": 0.004191200981137508, "phrase": "learning_algorithm"}, {"score": 0.004140924670517666, "phrase": "gradient_descent_method"}, {"score": 0.003945754887845885, "phrase": "electronic_circuit"}, {"score": 0.0038749521906474593, "phrase": "local_minimum"}, {"score": 0.0037371212381934853, "phrase": "particle_swarm_optimization"}, {"score": 0.0035824802350703376, "phrase": "population-based_optimization_algorithm"}, {"score": 0.0034139448117543763, "phrase": "ga"}, {"score": 0.0032920678776655783, "phrase": "evolution_operators"}, {"score": 0.003232956879952914, "phrase": "crossover_and_mutation"}, {"score": 0.0030991131563500446, "phrase": "nonlinear_activation_function"}, {"score": 0.0030069062905274976, "phrase": "taylor_series"}, {"score": 0.002952900365829518, "phrase": "look-up_table"}, {"score": 0.002680789041160613, "phrase": "successful_hardware_implementation"}, {"score": 0.0026326249204932733, "phrase": "wavelet_neural_networks"}, {"score": 0.0025853238923610076, "phrase": "pso_algorithm"}, {"score": 0.0025542773489945648, "phrase": "fpga."}, {"score": 0.002209319719984651, "phrase": "simultaneous_perturbation_algorithm"}, {"score": 0.0021827653135510225, "phrase": "sufficient_particle_sizes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["wavelet neural networks (WNN)", " field programmable gate array (FPGA)", " particle swarm optimization (PSO)", " prediction", " identification"], "paper_abstract": "This paper introduces implementation of a wavelet neural network (WNN) with learning ability on field programmable gate array (FPGA). A learning algorithm using gradient descent method is not easy to implement in an electronic circuit and has local minimum. A more suitable method is the particle swarm optimization (PSO) that is a population-based optimization algorithm. The PSO is similar to the GA, but it has no evolution operators such as crossover and mutation. In the approximation of a nonlinear activation function, we use a Taylor series and a look-up table (LUT) to achieve a more accurate approximation. The results of the two experiments demonstrate the successful hardware implementation of the wavelet neural networks with the PSO algorithm using FPGA. From the results of the experiment, it can be seen that the performance of the PSO is better than that of the simultaneous perturbation algorithm at sufficient particle sizes. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "FPGA implementation of a wavelet neural network with particle swarm optimization learning", "paper_id": "WOS:000255511900015"}