{"auto_keywords": [{"score": 0.03154805401771904, "phrase": "dynamic_software_product_lines"}, {"score": 0.028148907699406287, "phrase": "dspl_models"}, {"score": 0.025292733885623763, "phrase": "runtime_variability_mechanisms"}, {"score": 0.00481495049065317, "phrase": "dynamic_software_product_line_architectures"}, {"score": 0.004584495834677719, "phrase": "software_product_lines"}, {"score": 0.004365022891478405, "phrase": "related_products"}, {"score": 0.004187507332394002, "phrase": "changing_world"}, {"score": 0.004156012879026324, "phrase": "modern_software_demands"}, {"score": 0.003942059405218598, "phrase": "software_architecture"}, {"score": 0.003897659323896113, "phrase": "adaptation_capabilities"}, {"score": 0.0036005006349430586, "phrase": "service-based_applications"}, {"score": 0.0035599338383885447, "phrase": "self-adaptive_systems_demand_runtime_capabilities"}, {"score": 0.0034539685987677376, "phrase": "post-deployment_activities"}, {"score": 0.0033893426032054366, "phrase": "traditional_software_product_line_architectures"}, {"score": 0.003313380246267812, "phrase": "runtime_adaptation"}, {"score": 0.003083849594367653, "phrase": "autonomous_decision-making"}, {"score": 0.0030375852871252934, "phrase": "varying_conditions"}, {"score": 0.003014713272570927, "phrase": "recent_development_approaches"}, {"score": 0.002859345731792013, "phrase": "dynamic_conditions"}, {"score": 0.0027741761880779535, "phrase": "solution_architectures"}, {"score": 0.002591681512611419, "phrase": "research_work"}, {"score": 0.002476721068743341, "phrase": "current_techniques"}, {"score": 0.002279011030331704, "phrase": "integrated_view"}, {"score": 0.002153316680437517, "phrase": "software_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Dynamic Software Product Lines", " Dynamic variability", " Software architecture", " Feature models"], "paper_abstract": "Over the last two decades, software product lines have been used successfully in industry for building families of systems of related products, maximizing reuse, and exploiting their variable and configurable options. In a changing world, modern software demands more and more adaptive features, many of them performed dynamically, and the requirements on the software architecture to support adaptation capabilities of systems are increasing in importance. Today, many embedded system families and application domains such as ecosystems, service-based applications, and self-adaptive systems demand runtime capabilities for flexible adaptation, reconfiguration, and post-deployment activities. However, as traditional software product line architectures fail to provide mechanisms for runtime adaptation and behavior of products, there is a shift toward designing more dynamic software architectures and building more adaptable software able to handle autonomous decision-making, according to varying conditions. Recent development approaches such as Dynamic Software Product Lines (DSPLs) attempt to face the challenges of the dynamic conditions of such systems but the state of these solution architectures is still immature. In order to provide a more comprehensive treatment of DSPL models and their solution architectures, in this research work we provide an overview of the state of the art and current techniques that, partially, attempt to face the many challenges of runtime variability mechanisms in the context of Dynamic Software Product Lines. We also provide an integrated view of the challenges and solutions that are necessary to support runtime variability mechanisms in DSPL models and software architectures. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "An overview of Dynamic Software Product Line architectures and techniques: Observations from research and industry", "paper_id": "WOS:000334001600002"}