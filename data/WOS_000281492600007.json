{"auto_keywords": [{"score": 0.046551697985518066, "phrase": "functional_requirements"}, {"score": 0.00481495049065317, "phrase": "system_nfrs"}, {"score": 0.00478163886605204, "phrase": "behavioral_models"}, {"score": 0.004602483094756597, "phrase": "successful_development"}, {"score": 0.004570634647887452, "phrase": "software_systems"}, {"score": 0.004338661611644755, "phrase": "different_functionalities"}, {"score": 0.0038822311096089307, "phrase": "capital_importance"}, {"score": 0.0038419751490849133, "phrase": "final_product_acceptance"}, {"score": 0.003621588555525458, "phrase": "development_process"}, {"score": 0.0034978813769575233, "phrase": "first_stages"}, {"score": 0.003449585750738867, "phrase": "eventual_failure"}, {"score": 0.003413800638453569, "phrase": "final_product"}, {"score": 0.003378385493203297, "phrase": "scenario-based_approaches"}, {"score": 0.0032629585038738856, "phrase": "different_use_cases"}, {"score": 0.003129623571496151, "phrase": "formal_specification"}, {"score": 0.0030437652050982617, "phrase": "current_practices"}, {"score": 0.002723186210025975, "phrase": "non-functional_goals"}, {"score": 0.002540160379502092, "phrase": "partial_behavioral_models"}, {"score": 0.0024533019565858073, "phrase": "nfr_goals"}, {"score": 0.002436289099444074, "phrase": "partial_behavior"}, {"score": 0.0023776656246300063, "phrase": "system_nfr_goal"}, {"score": 0.0023285383529595416, "phrase": "different_behavioral_models"}, {"score": 0.002272501735900584, "phrase": "resulting_nfr"}, {"score": 0.002233301265743633, "phrase": "nfr_goal"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Behavioral model", " NFRs", " Formal composition", " NFR Estimations", " Scenario-based approaches"], "paper_abstract": "Complete and precise software requirements description is critical in successful development of software systems. This description should specify both functional requirements (FRs), that define the different functionalities the system should perform, and non-functional requirements (NFRs), that define attributes of how the system should perform these functional requirements. Even though their satisfaction is of capital importance to the final product acceptance, little has been done in order to consider NFRs as early as possible in the development process. To date, NFRs are often dismissed in first stages, causing an eventual failure of the final product. In scenario-based approaches, behavioral models (BMs) representing formalization of different use cases are commonly generated. These BMs are composed to generate a formal specification of the system under development. In current practices, these BMs do not handle NFRs, a shortcoming of these approaches. We address this issue and we propose a framework where NFRs are defined as a set of non-functional goals. The framework assists the analyst to: (1) distribute the NFRs of the system among the partial behavioral models defining its specification (2) define estimations of the NFR goals each partial behavior should fulfill with respect to a system NFR goal (3) compose the different behavioral models and their NFRs. Afterward, the resulting NFR is verified against the NFR goal of the system to validate the estimations the analyst has made. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Towards a framework for estimating system NFRs on behavioral models", "paper_id": "WOS:000281492600007"}