{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "seeded_clustering"}, {"score": 0.011328424034649669, "phrase": "target_r-tree"}, {"score": 0.008083309554633381, "phrase": "bulk_insertion"}, {"score": 0.004610058444728656, "phrase": "scalable_technique"}, {"score": 0.004262881313926916, "phrase": "r-tree_indices"}, {"score": 0.003976203286249396, "phrase": "high_data_arrival_rates"}, {"score": 0.003773870856027139, "phrase": "seed_tree"}, {"score": 0.0035507457285983268, "phrase": "top_k_levels"}, {"score": 0.003340768341189764, "phrase": "input_data_objects"}, {"score": 0.002880927789104712, "phrase": "input_r-trees"}, {"score": 0.0025723630851105304, "phrase": "detailed_algorithms"}, {"score": 0.0023990982005125763, "phrase": "experimental_results"}, {"score": 0.002218054404179068, "phrase": "previously_known_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["R-tree", " bulk insertion", " repacking", " seeded clustering", " seed tree"], "paper_abstract": "We propose a scalable technique called Seeded Clustering that allows us to maintain R-tree indices by bulk insertion while keeping pace with high data arrival rates. Our approach uses a seed tree, which is copied from the top k levels of a target R-tree, to classify input data objects into clusters. We then build an R-tree for each of the clusters and insert the input R-trees into the target R-tree in bulk one at a time. We present detailed algorithms for the seeded clustering and bulk insertion. The experimental results show that the bulk insertion by seeded clustering outperforms the previously known methods. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Bulk insertion for R-trees by seeded clustering", "paper_id": "WOS:000239850700004"}