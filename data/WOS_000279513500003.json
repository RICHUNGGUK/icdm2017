{"auto_keywords": [{"score": 0.04045998690442279, "phrase": "external_server"}, {"score": 0.03382095863639888, "phrase": "access_control"}, {"score": 0.00481495049065317, "phrase": "key_hierarchies"}, {"score": 0.004779406424192843, "phrase": "access_control_enforcement"}, {"score": 0.004691684576246597, "phrase": "data_outsourcing"}, {"score": 0.004588531238691602, "phrase": "successful_paradigm"}, {"score": 0.004454497011118188, "phrase": "external_servers"}, {"score": 0.004260719592945006, "phrase": "main_problem"}, {"score": 0.004167001961564886, "phrase": "sensitive_data"}, {"score": 0.004000486064911652, "phrase": "data_owner's_direct_control"}, {"score": 0.003912469968653304, "phrase": "major_security_problem"}, {"score": 0.0037700424606538856, "phrase": "high_availability"}, {"score": 0.0033981387193790353, "phrase": "access_control_policy"}, {"score": 0.0033730181385496186, "phrase": "different_data"}, {"score": 0.0033110234463504125, "phrase": "different_keys"}, {"score": 0.0031668306413359794, "phrase": "selective_dissemination"}, {"score": 0.0030176779201170306, "phrase": "efficient_management"}, {"score": 0.002984264956378651, "phrase": "encryption_policy"}, {"score": 0.002572463625403536, "phrase": "np-hard_and_present_alternative_approaches"}, {"score": 0.0024879169065840493, "phrase": "minimization_problem"}, {"score": 0.0024330980793680337, "phrase": "integer_linear_programming_problem"}, {"score": 0.0023184226291364097, "phrase": "key_derivation_tree"}, {"score": 0.0022757667100089243, "phrase": "user_groups"}, {"score": 0.002152440300818582, "phrase": "previous_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data outsourcing", " Encryption policy", " Confidentiality", " Access control", " Key hierarchies", " Heuristics"], "paper_abstract": "Data outsourcing is emerging today as a successful paradigm allowing individuals and organizations to resort to external servers for storing their data, and sharing them with others. The main problem of this trend is that sensitive data are stored on a site that is not under the data owner's direct control. This scenario poses a major security problem since often the external server is relied upon for ensuring high availability of the data, but it is not authorized to read them. Data need therefore to be encrypted. In such a context, the application of an access control policy requires different data to be encrypted with different keys so to allow the external server to directly enforce access control and support selective dissemination and access. The problem therefore emerges of designing solutions for the efficient management of an encryption policy enforcing access control, with the goal of minimizing the number of keys to be maintained by the system and distributed to users. In this paper, we prove that the problem of minimizing the number of keys is NP-hard and present alternative approaches for its solution. We first formulate the minimization problem as an instance of an integer linear programming problem and then propose three different families of heuristics, which are based on a key derivation tree exploiting the relationships among user groups. Finally, we experimentally evaluate the performance of our heuristics, comparing them with previous approaches. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Managing key hierarchies for access control enforcement: Heuristic approaches", "paper_id": "WOS:000279513500003"}