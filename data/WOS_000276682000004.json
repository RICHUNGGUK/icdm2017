{"auto_keywords": [{"score": 0.03531917121851837, "phrase": "tau"}, {"score": 0.00481495049065317, "phrase": "performance_monitoring"}, {"score": 0.004761494044422926, "phrase": "hpc_applications"}, {"score": 0.00465634671242413, "phrase": "adaptive_optimization"}, {"score": 0.004553510708976456, "phrase": "dynamic_performance_behavior"}, {"score": 0.00445293569103488, "phrase": "purely_post-mortem_performance_views"}, {"score": 0.004330321475256457, "phrase": "parallel_performance_monitoring_system"}, {"score": 0.004258372598568333, "phrase": "low_overhead"}, {"score": 0.004211069233133584, "phrase": "high_efficiency"}, {"score": 0.0039822874870125095, "phrase": "scalable_parallel_performance_monitor"}, {"score": 0.003703282519292336, "phrase": "tau_performance_system"}, {"score": 0.0032383707002544755, "phrase": "different_transport_substrates"}, {"score": 0.003166751241099304, "phrase": "online_performance_data"}, {"score": 0.0030451958332949735, "phrase": "transport_overlay_structure"}, {"score": 0.002847540262784593, "phrase": "added_support"}, {"score": 0.002800158709933889, "phrase": "job_manager"}, {"score": 0.002618366076489732, "phrase": "performance_analysis"}, {"score": 0.002531933388815139, "phrase": "overlay_nodes"}, {"score": 0.00244834685428352, "phrase": "large-scale_profile_data"}, {"score": 0.002341164727388946, "phrase": "single_sink"}, {"score": 0.002276566401216226, "phrase": "low_perturbation"}, {"score": 0.002251227801482381, "phrase": "significant_savings"}, {"score": 0.002189105604712615, "phrase": "large_processor-counts"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance", " monitoring", " tree-based", " overlay", " TAU", " MRNet"], "paper_abstract": "Performance monitoring of HPC applications offers opportunities for adaptive optimization based on the dynamic performance behavior, unavailable in purely post-mortem performance views. However, a parallel performance monitoring system must have low overhead and high efficiency to make these opportunities tangible. We describe a scalable parallel performance monitor called TAUoverMRNet (ToM), created from the integration of the TAU performance system and the Multicast Reduction Network (MRNet). The integration is achieved through a plug-in architecture in TAU that allows the selection of different transport substrates to offload the online performance data. A method to establish the transport overlay structure of the monitor from within TAU, one that requires no added support from the job manager or application, is presented. We demonstrate the distribution of performance analysis from the sink to the overlay nodes and the reduction in the large-scale profile data that could, otherwise, overwhelm any single sink. The results show low perturbation and significant savings accrued from reduction at large processor-counts. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "A framework for scalable, parallel performance monitoring", "paper_id": "WOS:000276682000004"}