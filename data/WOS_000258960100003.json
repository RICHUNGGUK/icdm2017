{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "evolutionary_dynamics"}, {"score": 0.0044685410845412745, "phrase": "software_system"}, {"score": 0.004188459638572375, "phrase": "important_goal"}, {"score": 0.004126349202545883, "phrase": "software_evolvability"}, {"score": 0.0038676325043529524, "phrase": "authors'_previous_simulations"}, {"score": 0.003829290275367182, "phrase": "software_evolution_processes"}, {"score": 0.003716520760680603, "phrase": "human-related_aspects"}, {"score": 0.0035712919163869176, "phrase": "technical_entities"}, {"score": 0.0033639840192975835, "phrase": "latour's_actor-network_theory"}, {"score": 0.0032486392192981944, "phrase": "non-human_entities_-_development_tools"}, {"score": 0.0030906666356950887, "phrase": "potentially_active_participants"}, {"score": 0.002984665318717504, "phrase": "latour's_theory"}, {"score": 0.0028822890425197582, "phrase": "software_evolution_process"}, {"score": 0.0027557911038816256, "phrase": "technical_and_human_aspects"}, {"score": 0.0027148677103585985, "phrase": "closer_juxtaposition"}, {"score": 0.002687922713487696, "phrase": "previous_models"}, {"score": 0.0025191653363555193, "phrase": "published_case_study"}, {"score": 0.0024941578231560055, "phrase": "software_development"}, {"score": 0.0024571101010891347, "phrase": "proof-of-concept_calibration"}, {"score": 0.0023846534541336326, "phrase": "ant-based_approach"}, {"score": 0.0022913497040895586, "phrase": "long-term_software_evolution_process"}, {"score": 0.0022127018991294047, "phrase": "dynamic_simulation_models"}, {"score": 0.0021049977753042253, "phrase": "software_evolution"}], "paper_keywords": [""], "paper_abstract": "The pressures which act on a software system over its life from inception to retirement are many and varied. An important goal in researching software evolvability is to understand, and if possible to manage, these influences. The authors' previous simulations of software evolution processes have concentrated on capturing the human-related aspects of software evolution, while effectively treating technical entities as objects which are acted on by humans and their organisations. Latour's actor-network theory ( ANT) suggests that the non-human entities - development tools, documents, the evolution process itself - are potentially active participants in their own evolution. The authors describe Latour's theory and present a model of a software evolution process in the form of a diagram which places technical and human aspects in a closer juxtaposition than previous models. They present support for this model from an analysis of a published case study of software development and a proof-of-concept calibration. They believe that an ANT-based approach will result in a more accurate representation of the long-term software evolution process and thus be a step towards dynamic simulation models whose predictive power will help us to better understand and manage software evolution and evolvability.", "paper_title": "Software evolutionary dynamics modelled as the activity of an actor-network", "paper_id": "WOS:000258960100003"}