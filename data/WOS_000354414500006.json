{"auto_keywords": [{"score": 0.049062712519921996, "phrase": "functional_decomposition"}, {"score": 0.02787080894154439, "phrase": "average_saving"}, {"score": 0.00481495049065317, "phrase": "automatic_high-level_data-flow_synthesis"}, {"score": 0.004763565662615503, "phrase": "optimization_of_polynomial_datapaths"}, {"score": 0.004563427013973105, "phrase": "high-level_data-flow_optimization"}, {"score": 0.0044426140044122545, "phrase": "datapath_intensive_designs"}, {"score": 0.004324985524216987, "phrase": "digital_signal_processing"}, {"score": 0.004210458358142504, "phrase": "computer_graphics"}, {"score": 0.004165497627464024, "phrase": "embedded_systems_applications"}, {"score": 0.0040334640350288, "phrase": "polynomial_computations"}, {"score": 0.0035648266669315943, "phrase": "optimization_method"}, {"score": 0.003470358620464986, "phrase": "multivariate_polynomial"}, {"score": 0.003034158379493625, "phrase": "good_building_blocks"}, {"score": 0.0028446460307503343, "phrase": "polynomial_functions"}, {"score": 0.002724909017963099, "phrase": "combinational_implementation"}, {"score": 0.002460295872115956, "phrase": "critical_path_delay"}, {"score": 0.0023694065215394593, "phrase": "state-of-the-art_techniques"}, {"score": 0.0021049977753042253, "phrase": "sequential_implementations"}], "paper_keywords": ["High-level synthesis", " polynomial datapath", " functional decomposition", " modulo optimization", " vanishing polynomial"], "paper_abstract": "This paper concentrates on high-level data-flow optimization and synthesis techniques for datapath intensive designs such as those in Digital Signal Processing (DSP), computer graphics and embedded systems applications, which are modeled as polynomial computations over Z(2n1) x Z(2n2) x ... x Z(2nd) to Z(2m). Our main contribution in this paper is proposing an optimization method based on functional decomposition of multivariate polynomial in the form of f(x) = g(x) o h(x) + f(0) = g(h(x)) + f(0) to obtain good building blocks, and vanishing polynomials over Z(2m) to add/delete redundancy to/from given polynomial functions to extract further common sub-expressions. Experimental results for combinational implementation of the designs have shown an average saving of 38.85 and 18.85 percent in the number of gates and critical path delay, respectively, compared with the state-of-the-art techniques. Regarding the comparison with our previous works, the area and delay are improved by 10.87 and 11.22 percent, respectively. Furthermore, experimental results of sequential implementations have shown an average saving of 39.26 and 34.70 percent in the area and the latency, respectively, compared with the state-of-the-art techniques.", "paper_title": "Automatic High-Level Data-Flow Synthesis and Optimization of Polynomial Datapaths Using Functional Decomposition", "paper_id": "WOS:000354414500006"}