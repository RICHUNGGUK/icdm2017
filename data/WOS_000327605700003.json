{"auto_keywords": [{"score": 0.04954397446159371, "phrase": "affine_arithmetic"}, {"score": 0.00481495049065317, "phrase": "enhanced_precision_analysis_for_accuracy-aware_bit-width_optimization"}, {"score": 0.004707913053935566, "phrase": "bit-width_allocation"}, {"score": 0.00462919213721188, "phrase": "crucial_impact"}, {"score": 0.004577440795549049, "phrase": "hardware_efficiency"}, {"score": 0.004475659507646842, "phrase": "fixed-point_arithmetic_circuits"}, {"score": 0.004327196832280818, "phrase": "new_accuracy-guaranteed_word-length_optimization_approach"}, {"score": 0.003910595307634916, "phrase": "well-known_analytical_technique"}, {"score": 0.00378080526397273, "phrase": "precision_analyses"}, {"score": 0.0036553070575015344, "phrase": "acceleration_technique"}, {"score": 0.003474799999519295, "phrase": "first_algorithm"}, {"score": 0.0034166271604770576, "phrase": "progressive_search_strategy"}, {"score": 0.0033594249301033604, "phrase": "second_one"}, {"score": 0.003303177222901723, "phrase": "tree-shaped_search_method"}, {"score": 0.003035711716881469, "phrase": "polynomial_complexity"}, {"score": 0.002984867789900281, "phrase": "comparable_results"}, {"score": 0.002951444412262927, "phrase": "existing_heuristic_approaches"}, {"score": 0.0029020077365708966, "phrase": "second_algorithm"}, {"score": 0.0028695095228791724, "phrase": "exponential_complexity"}, {"score": 0.0027898428590137515, "phrase": "near-optimal_results"}, {"score": 0.002727700630869639, "phrase": "exhaustive_search_method"}, {"score": 0.0026820015810254004, "phrase": "commonly_used_set"}, {"score": 0.002651960559564796, "phrase": "case_studies"}, {"score": 0.0025208755851561368, "phrase": "proposed_techniques"}, {"score": 0.0024370965602952496, "phrase": "optimization_time"}, {"score": 0.0024097920845706795, "phrase": "hardware_cost"}, {"score": 0.0023694065215394593, "phrase": "first_and_second_algorithms"}, {"score": 0.0022145052062614514, "phrase": "uniform_fractional_width_allocation"}, {"score": 0.0021773853011112882, "phrase": "proposed_acceleration_technique"}, {"score": 0.0021049977753042253, "phrase": "fractional_width_selection_problem"}], "paper_keywords": ["Affine arithmetic", " fixed-point arithmetic", " precision analysis", " word-length optimization"], "paper_abstract": "Bit-width allocation has a crucial impact on hardware efficiency and accuracy of fixed-point arithmetic circuits. This paper introduces a new accuracy-guaranteed word-length optimization approach for feed-forward fixed-point designs. This method uses affine arithmetic, which is a well-known analytical technique, for both range and precision analyses. This paper introduces an acceleration technique and two new semianalytical algorithms for precision analysis. While the first algorithm follows a progressive search strategy, the second one uses a tree-shaped search method for fractional width optimization. The algorithms offer two different time-complexity/cost efficiency tradeoffs. The first algorithm has polynomial complexity and achieves comparable results with existing heuristic approaches. The second algorithm has exponential complexity, but it achieves near-optimal results compared to the exhaustive search method. A commonly used set of case studies is used to evaluate the efficiency of the proposed techniques and algorithms in terms of optimization time and hardware cost. The first and second algorithms achieve 10.9% and 13.1% improvements in area, respectively, over uniform fractional width allocation. The proposed acceleration technique reduces the complexity of the fractional width selection problem by an average of 20.3%.", "paper_title": "Enhanced Precision Analysis for Accuracy-Aware Bit-Width Optimization Using Affine Arithmetic", "paper_id": "WOS:000327605700003"}