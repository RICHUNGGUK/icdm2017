{"auto_keywords": [{"score": 0.028329958442618996, "phrase": "sla"}, {"score": 0.02665063051895084, "phrase": "salmonada"}, {"score": 0.00481495049065317, "phrase": "comprehensive_explanation_of_sla"}, {"score": 0.004750873844061641, "phrase": "runtime."}, {"score": 0.004729704116022601, "phrase": "service_level_agreements"}, {"score": 0.004502943680955863, "phrase": "service-based_systems_consumers"}, {"score": 0.004248869786808024, "phrase": "quality_assurance_techniques"}, {"score": 0.004118026552723285, "phrase": "slas_fulfillment"}, {"score": 0.004009074013302036, "phrase": "existing_proposals"}, {"score": 0.0037157201349604222, "phrase": "real-world_scenarios"}, {"score": 0.003601235776892337, "phrase": "monitoring_configuration"}, {"score": 0.0030932495918679285, "phrase": "low_cohesion"}, {"score": 0.0029447150254434842, "phrase": "comprehensive_solution"}, {"score": 0.002892484028902088, "phrase": "conceptual_reference_model"}, {"score": 0.002741269087816162, "phrase": "resulting_platform"}, {"score": 0.0025632898741546556, "phrase": "timely_and_comprehensive_explanations"}, {"score": 0.002473129577319634, "phrase": "automated_monitoring_configuration"}, {"score": 0.0024292428060702803, "phrase": "highly_expressive_slas"}, {"score": 0.0023754752864092437, "phrase": "constraint_satisfaction_problems"}, {"score": 0.002241171326888997, "phrase": "resulting_service_consumption_time_performance"}, {"score": 0.0021334650920198715, "phrase": "sla_supervision"}], "paper_keywords": ["Service level agreement", " SLA", " monitoring", " analysis", " violation detection and explanation", " QoS"], "paper_abstract": "Service Level Agreements (SLAs) establish the Quality of Service (QoS) agreed between service-based systems consumers and providers. Since the violation of such SLAs may involve penalties, quality assurance techniques have been developed to supervise the SLAs fulfillment at runtime. However, existing proposals present some drawbacks: 1) the SLAs they support are not expressive enough to model real-world scenarios, 2) they couple the monitoring configuration to a given SLA specification, 3) the explanations of the violations are difficult to understand and even potentially inaccurate, 4) some proposals either do not provide an architecture, or present low cohesion within their elements. In this paper, we propose a comprehensive solution, from a conceptual reference model to its design and implementation, that overcomes these drawbacks. The resulting platform, SALMonADA, receives the SLA agreed between the parties as input and reports timely and comprehensive explanations of SLA violations. SALMonADA performs an automated monitoring configuration and it analyses highly expressive SLAs by means of a constraint satisfaction problems based technique. We have evaluated the impact of SALMonADA over the resulting service consumption time performance. The results are satisfactory enough to consider SALMonADA for SLA supervision because of its low intrusiveness.", "paper_title": "Comprehensive Explanation of SLA Violations at Runtime", "paper_id": "WOS:000337901500004"}