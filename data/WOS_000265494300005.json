{"auto_keywords": [{"score": 0.03430668837271943, "phrase": "output_quality"}, {"score": 0.015041938031243294, "phrase": "information_extraction_systems"}, {"score": 0.012966692652972258, "phrase": "extraction_system"}, {"score": 0.01095191001219428, "phrase": "extracted_relation"}, {"score": 0.00481495049065317, "phrase": "information_extraction"}, {"score": 0.004756805752518494, "phrase": "large_amount"}, {"score": 0.004718431349852634, "phrase": "structured_information"}, {"score": 0.004642604455537883, "phrase": "unstructured_text"}, {"score": 0.004549524321051407, "phrase": "structured_relations"}, {"score": 0.004229556887896042, "phrase": "imperfect_precision"}, {"score": 0.0041112665381266315, "phrase": "spurious_tuples"}, {"score": 0.004061584718427419, "phrase": "good_tuples"}, {"score": 0.003210446135114967, "phrase": "information_extraction_task"}, {"score": 0.003158776195052182, "phrase": "ad_hoc_procedure"}, {"score": 0.0029602552900111407, "phrase": "receiver_operating_characteristic"}, {"score": 0.0029363484120546114, "phrase": "roc"}, {"score": 0.002865710140187219, "phrase": "extraction_quality"}, {"score": 0.002831037222426215, "phrase": "statistically_robust_way"}, {"score": 0.002762941385784905, "phrase": "roc_analysis"}, {"score": 0.0027184540871935284, "phrase": "extraction_parameters"}, {"score": 0.002685558057339722, "phrase": "principled_manner"}, {"score": 0.0026209522797963447, "phrase": "analytic_models"}, {"score": 0.002255431275670053, "phrase": "execution_plan"}, {"score": 0.0021394674440767124, "phrase": "fastest_execution_plan"}, {"score": 0.0021049977753042253, "phrase": "output_quality_restrictions"}], "paper_keywords": ["Algorithms", " Experimentation", " Measurement", " Performance", " Information Extraction", " ROC curves"], "paper_abstract": "A large amount of structured information is buried in unstructured text. Information extraction systems can extract structured relations from the documents and enable sophisticated, SQL-like queries over unstructured text. Information extraction systems are not perfect and their output has imperfect precision and recall (i.e., contains spurious tuples and misses good tuples). Typically, an extraction system has a set of parameters that can be used as \"knobs\" to tune the system to be either precision- or recall-oriented. Furthermore, the choice of documents processed by the extraction system also affects the quality of the extracted relation. So far, estimating the output quality of an information extraction task has been an ad hoc procedure, based mainly on heuristics. In this article, we show how to use Receiver Operating Characteristic (ROC) curves to estimate the extraction quality in a statistically robust way and show how to use ROC analysis to select the extraction parameters in a principled manner. Furthermore, we present analytic models that reveal how different document retrieval strategies affect the quality of the extracted relation. Finally, we present our maximum likelihood approach for estimating, on the fly, the parameters required by our analytic models to predict the runtime and the output quality of each execution plan. Our experimental evaluation demonstrates that our optimization approach predicts accurately the output quality and selects the fastest execution plan that satisfies the output quality restrictions.", "paper_title": "A Quality-Aware Optimizer for Information Extraction", "paper_id": "WOS:000265494300005"}