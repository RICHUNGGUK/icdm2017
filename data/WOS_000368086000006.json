{"auto_keywords": [{"score": 0.03644451033122438, "phrase": "best_configurations"}, {"score": 0.0047273577269638725, "phrase": "gpu._stencil_computation"}, {"score": 0.004675565200598801, "phrase": "paramount_importance"}, {"score": 0.004590496414177077, "phrase": "image_processing"}, {"score": 0.004556901872357751, "phrase": "structural_biology"}, {"score": 0.004392565073466714, "phrase": "permanent_demand"}, {"score": 0.003977741661623133, "phrase": "important_issues"}, {"score": 0.003877014765235754, "phrase": "gpu"}, {"score": 0.0037921662574137535, "phrase": "best_thread"}, {"score": 0.0037094500688222695, "phrase": "overall_performance"}, {"score": 0.003601951458683923, "phrase": "optimal_thread-block_configuration"}, {"score": 0.0035233696341819437, "phrase": "square_thread-block_configurations"}, {"score": 0.0034212450542713607, "phrase": "previous_works"}, {"score": 0.003261547125192671, "phrase": "better_understanding"}, {"score": 0.0032021226849872054, "phrase": "thread-block_configurations"}, {"score": 0.003109333564016097, "phrase": "gpu."}, {"score": 0.003019121766552419, "phrase": "optimal_configurations"}, {"score": 0.00257735013358606, "phrase": "optimal_thread-block_configurations"}, {"score": 0.0024660058541899647, "phrase": "proposed_model"}, {"score": 0.00244792069601419, "phrase": "six_stencils"}, {"score": 0.0024299678474208023, "phrase": "different_halo_widths"}, {"score": 0.002368160970983679, "phrase": "optimization_space"}, {"score": 0.0023249757987087055, "phrase": "total_valid_space"}, {"score": 0.002216336059488137, "phrase": "best_configuration"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["modeling", " global memory transactions", " shared memory transactions", " thread-block", " concurrent thread-blocks", " GPU", " stencils", " convolutions"], "paper_abstract": "Stencil computation is of paramount importance in many fields, in image processing, structural biology and biomedicine, among others. There exists a permanent demand of maximizing the performance of stencils on state-of-the-art architectures, such graphics processing units (GPUs). One of the important issues when optimizing these kernels for the GPU is the selection of the best thread-block that maximizes the overall performance. Usually, programmers look for the optimal thread-block configuration in a reduced space of square thread-block configurations or simply use the best configurations reported in previous works, which is usually 16 x 16. This paper provides a better understanding of the impact of thread-block configurations on the performance of stencils on the GPU. In particular, we model locality and parallelism and consider that the optimal configurations are within the space that provides: (1) a small number of global memory communications; (2) a good shared memory utilization with small numbers of conflicts; (3) a good streaming multi-processors utilization; and (4) a high efficiency of the threads within a thread-block. The model determines the set of optimal thread-block configurations without the need of executing the code. We validate the proposed model using six stencils with different halo widths and show that it reduces the optimization space to around 25% of the total valid space. The configurations in this space achieve at least a throughput of 75% of the best configuration and guarantee the inclusion of the best configurations. Copyright (C) 2015 John Wiley & Sons, Ltd.", "paper_title": "Demystifying the 16 x 16 thread-block for stencils on the GPU", "paper_id": "WOS:000368086000006"}