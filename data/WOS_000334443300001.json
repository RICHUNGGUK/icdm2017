{"auto_keywords": [{"score": 0.025378220318680155, "phrase": "generated_code"}, {"score": 0.00481495049065317, "phrase": "large_schema_sets"}, {"score": 0.004769182299692333, "phrase": "geospatial_mobile_applications"}, {"score": 0.004678940805063634, "phrase": "xml_schema"}, {"score": 0.004568525347438891, "phrase": "geospatial_domain"}, {"score": 0.004252602474733162, "phrase": "spatial_data"}, {"score": 0.00409310463335204, "phrase": "geospatial_standards"}, {"score": 0.003939565240409143, "phrase": "reaching_levels"}, {"score": 0.0036669760226536977, "phrase": "timely_and_cost-effective_manner"}, {"score": 0.0035632774896594524, "phrase": "xml_processing_code"}, {"score": 0.0035125292519354724, "phrase": "large_schemas"}, {"score": 0.0033969001271637934, "phrase": "xml_data"}, {"score": 0.0033806943112103397, "phrase": "binding_generators"}, {"score": 0.003146652729098066, "phrase": "resource-constrained_devices"}, {"score": 0.003087017178815267, "phrase": "mobile_phones"}, {"score": 0.00305762327908599, "phrase": "large_and_complex_schemas"}, {"score": 0.0029147869733574844, "phrase": "large_size"}, {"score": 0.002873247913129334, "phrase": "complicated_structure"}, {"score": 0.002791932344920906, "phrase": "device_limitations"}, {"score": 0.002687070469080394, "phrase": "instance-based_xml_data"}, {"score": 0.0022725931637071852, "phrase": "individual_applications"}, {"score": 0.0022188370388602813, "phrase": "significant_simplification"}, {"score": 0.0021976915360493628, "phrase": "xml_schema_sets"}, {"score": 0.002166349705365602, "phrase": "real_needs"}, {"score": 0.002145703330831668, "phrase": "client_applications"}, {"score": 0.0021049977753042253, "phrase": "substantial_reduction"}], "paper_keywords": ["XML processing", " XML schema", " Code generator", " Mobile applications", " XML data binding"], "paper_abstract": "XML and XML Schema are used in the geospatial domain for the definition of standards that enhance the interoperability between producers and consumers of spatial data. The size and complexity of these geospatial standards and their associated schemas have been growing with time reaching levels of complexity that make it difficult to build systems based on them in a timely and cost-effective manner. The problem of producing XML processing code based on large schemas has been traditionally solved by using XML data binding generators. Unfortunately, this solution is not always effective when code is generated for resource-constrained devices, such as mobile phones. Large and complex schemas often result in the production of code with a large size and a complicated structure that might not fit the device limitations. In this article we present the instance-based XML data binding approach to produce more compact application-specific XML processing code for geospatial applications targeted to mobile devices. The approach tries to reduce the size and complexity of the generated code by using information about how schemas are used by individual applications. Our experimental results suggest a significant simplification of XML Schema sets to the real needs of client applications accompanied by a substantial reduction of size of the generated code.", "paper_title": "Personalised code generation from large schema sets for geospatial mobile applications", "paper_id": "WOS:000334443300001"}