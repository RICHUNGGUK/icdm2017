{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "software_measurement"}, {"score": 0.011216615338608817, "phrase": "smo"}, {"score": 0.004559661374976129, "phrase": "technology_engineering"}, {"score": 0.003925004567341077, "phrase": "software_artefacts"}, {"score": 0.0038895008852940323, "phrase": "software_development_processes"}, {"score": 0.003683097597914604, "phrase": "effective_use"}, {"score": 0.003287482882222731, "phrase": "thorough_analysis"}, {"score": 0.0032429499567088113, "phrase": "software_measurement_domain"}, {"score": 0.003170060683860338, "phrase": "domain_ontology"}, {"score": 0.00297454367746853, "phrase": "conceptual_basis"}, {"score": 0.002934237411711622, "phrase": "international_standards"}, {"score": 0.0027035833504191233, "phrase": "software_artifact"}, {"score": 0.0025137856138000014, "phrase": "data_quality_model"}, {"score": 0.002491015208328868, "phrase": "web_portals"}, {"score": 0.0023586493263143553, "phrase": "domain-specific_language"}, {"score": 0.0022951216874671516, "phrase": "software_entities"}, {"score": 0.002233301265743633, "phrase": "significant_role"}, {"score": 0.0021731423856364003, "phrase": "software_artifacts"}, {"score": 0.002124247104243502, "phrase": "model-driven_engineering"}, {"score": 0.0021049977753042253, "phrase": "domain-specific_modeling"}], "paper_keywords": [""], "paper_abstract": "Ontologies are frequently used in the context of software and technology engineering. These can be grouped into two main categories, depending oil whether they are used to describe the knowledge of a domain ((domain ontologies) or whether they are used as software artefacts in software development processes. This paper presents some experiences and lessons learnt from the effective use of all ontology for Software Measurement, called software measurement Ontology (SMO). The SMO was developed some years ago as a result Of a thorough analysis of the software measurement domain. Its use as a domain ontology is presented first, a description of]low the SMO can serve as a conceptual basis for comparing international standards related to software Measurement. Second, the paper describes several examples of the applications of SMO as a software artifact. In particular, we show how the SMO can be instantiated to define a data quality model for Web portals, and also how it can be used to define a Domain-Specific Language (DSL) for measuring software entities. These examples show the significant role that ontologies can play as software artifacts in the realm of model-driven engineering and domain-specific modeling.", "paper_title": "Effective use of ontologies in software measurement", "paper_id": "WOS:000265069000003"}