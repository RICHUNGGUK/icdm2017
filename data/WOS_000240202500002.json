{"auto_keywords": [{"score": 0.004753194996637899, "phrase": "threshold_password"}, {"score": 0.004692227830462433, "phrase": "key_exchange"}, {"score": 0.004513957235071457, "phrase": "password_authentication"}, {"score": 0.0042591158963728665, "phrase": "single_authenticating_server"}, {"score": 0.004044645056447888, "phrase": "n_servers"}, {"score": 0.0031845067058084583, "phrase": "hackers_attacks"}, {"score": 0.00306334226516593, "phrase": "authenticating_server"}, {"score": 0.003004494701922268, "phrase": "password_information"}, {"score": 0.0029467742734417255, "phrase": "known_centralized_password_authentication_schemes"}, {"score": 0.0027801631944598206, "phrase": "first_protocols"}, {"score": 0.0026570998719084153, "phrase": "standard_model"}, {"score": 0.0025725382476862305, "phrase": "random_oracles"}, {"score": 0.0021049977753042253, "phrase": "costly_zero-knowledge_proofs"}], "paper_keywords": ["authenticated key exchange", " password", " threshold cryptography"], "paper_abstract": "We present two protocols for threshold password authenticated key exchange. In this model for password authentication, the password is not stored in a single authenticating server but rather shared among a set of n servers so that an adversary can learn the password only by breaking into t + 1 of them. The protocols require n > 3t servers to work. The goal is to protect the password against hackers attacks that can break into the authenticating server and steal password information. All known centralized password authentication schemes are susceptible to such an attack. Ours are the first protocols which are provably secure in the standard model (i.e., no random oracles are used for the proof of security). Moreover, our protocols are reasonably efficient and implementable in practice. In particular a goal of the design was to avoid costly zero-knowledge proofs to keep interaction to a minimum. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Provably secure threshold password-authenticated key exchange", "paper_id": "WOS:000240202500002"}