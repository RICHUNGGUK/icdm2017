{"auto_keywords": [{"score": 0.03998529032331102, "phrase": "automatic_extraction"}, {"score": 0.00481495049065317, "phrase": "behavioral_hdl_models"}, {"score": 0.004663396040465122, "phrase": "complex_high-performance_microprocessors"}, {"score": 0.004468684611798047, "phrase": "crucial_design_step"}, {"score": 0.004421284843189731, "phrase": "constraint-based_test_generation"}, {"score": 0.0043511221096418475, "phrase": "well-studied_directed_behavioral_level_functional_test_generation_paradigm"}, {"score": 0.003995226376780718, "phrase": "constraint_solvers"}, {"score": 0.003571751184289622, "phrase": "challenging_open_problem"}, {"score": 0.0033861224940737846, "phrase": "word-level_model_constraints"}, {"score": 0.003332332086930163, "phrase": "behavioral_verilog_hdl_description"}, {"score": 0.00304321897427383, "phrase": "scenario_constraints"}, {"score": 0.002947266048104005, "phrase": "integer_solver"}, {"score": 0.002869613770219469, "phrase": "necessary_functional_test"}, {"score": 0.0026771333996253783, "phrase": "constraint_models"}, {"score": 0.0022685255265595624, "phrase": "test_vectors"}, {"score": 0.0022444104439449737, "phrase": "high_level_scenarios"}, {"score": 0.002220551141101661, "phrase": "pipeline_hazards"}, {"score": 0.0021049977753042253, "phrase": "multiple_time-frames"}], "paper_keywords": ["behavioral models", " constraint solvers", " functional test generation (FTG)", " hardware description languages (HDL)", " processor architectures"], "paper_abstract": "With the emergence of complex high-performance microprocessors, functional test generation has become a crucial design step. Constraint-based test generation is a well-studied directed behavioral level functional test generation paradigm. The paradigm involves conversion of a given circuit model into a set of constraints and employing constraint solvers to generate tests for it. However, automatic extraction of constraints from a given behavioral hardware design language (HDL) model remained a challenging open problem. This paper proposes an approach for automatic extraction of word-level model constraints from the behavioral verilog HDL description. The scenarios to be tested are also expressed as constraints. The model and the scenario constraints are solved together using an integer solver to arrive at the necessary functional test. The effectiveness of the approach is demonstrated by automatically generating the constraint models for: 1) an exclusive-shared-invalid multiprocessor cache coherency model and 2) the 16-bit DLX-architecture, from their respective Verilog-based behavioral models. Experimental results that generate test vectors for high level scenarios like pipeline hazards, cache miss, etc., spanning over multiple time-frames are presented.", "paper_title": "Automatic constraint based test generation for behavioral HDL models", "paper_id": "WOS:000254782900008"}