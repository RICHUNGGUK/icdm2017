{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.004274527415193801, "phrase": "gpu-friendly_shape_interpolation_method"}, {"score": 0.004127394241838696, "phrase": "state-of-the-art_interpolation_algorithms"}, {"score": 0.003741712498615481, "phrase": "large_linear_systems"}, {"score": 0.003663857375787215, "phrase": "interpolation_step"}, {"score": 0.0034398445347109396, "phrase": "trajectory_parameters"}, {"score": 0.0028866770996648057, "phrase": "pre-computing_stage"}, {"score": 0.002691105581191125, "phrase": "intermediate_shape"}, {"score": 0.0025264171945423254, "phrase": "close_form_formulation"}, {"score": 0.0023551955270737215, "phrase": "extremely_high_performance"}, {"score": 0.0023223663501882917, "phrase": "modern_gpu"}, {"score": 0.0022110183535859374, "phrase": "multi-pose_interpolation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["shape interpolation", " vertex path problem", " trajectory warping"], "paper_abstract": "In this paper, we propose a GPU-friendly shape interpolation method. In contrast with state-of-the-art interpolation algorithms, our method computes the trajectory of each vertex independently instead of solving large linear systems in every interpolation step. Given two poses being interpolated, we find trajectory parameters for each vertex by optimization with the consideration of the key pose reconstruction and as-rigid-as-possible deformation in the pre-computing stage. During run-time, the vertices coordinates on the intermediate shape can be computed in parallel according to a close form formulation. In the results we demonstrate that our method achieves extremely high performance on modern GPU and can be extended easily to multi-pose interpolation. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "GPU-friendly shape interpolation based on trajectory warping", "paper_id": "WOS:000289941700025"}