{"auto_keywords": [{"score": 0.03843856552198327, "phrase": "context_information"}, {"score": 0.03104244392514206, "phrase": "objectplaces"}, {"score": 0.00481495049065317, "phrase": "context-aware_applications"}, {"score": 0.004665764181113345, "phrase": "programming_applications"}, {"score": 0.004592905436175987, "phrase": "highly_dynamic_environments"}, {"score": 0.004485735417293941, "phrase": "mobile_ad_hoc_networks"}, {"score": 0.004178935413340453, "phrase": "working_context"}, {"score": 0.003486627657538784, "phrase": "manets"}, {"score": 0.003405109584265324, "phrase": "application_agent"}, {"score": 0.0030017207229983385, "phrase": "supporting_middleware_platform"}, {"score": 0.002645992747675361, "phrase": "agent's_context_information"}, {"score": 0.0025638362414466278, "phrase": "dynamic_situation"}, {"score": 0.002407078478216306, "phrase": "distributed_protocol"}, {"score": 0.0021049977753042253, "phrase": "protocol's_correctness"}], "paper_keywords": [""], "paper_abstract": "Programming applications for highly dynamic environments such as mobile ad hoc networks (MANETs) is complex, since the working context of applications changes continuously. This paper presents \"views\" as abstractions for representing and maintaining context information, tailored to applications in MANETs. An application agent can define a view by declaratively describing the context information it is interested in. A supporting middleware platform, called ObjectPlaces, ensures that the information represented by a view continuously reflects the agent's context information, despite the dynamic situation in a MANET. We elaborate on the distributed protocol that ObjectPlaces uses to maintain the information of views, and give an evaluation of the protocol's correctness and overhead.", "paper_title": "Views: Middleware abstractions for context-aware applications in MANETs", "paper_id": "WOS:000238283600002"}