{"auto_keywords": [{"score": 0.02396865354213627, "phrase": "castro"}, {"score": 0.004589763483242731, "phrase": "previous_algorithms"}, {"score": 0.004023120753104693, "phrase": "trusted_service"}, {"score": 0.003677280504320636, "phrase": "verified_implementation"}, {"score": 0.003526186748088922, "phrase": "commercial_trusted_hardware"}, {"score": 0.0034016119212097826, "phrase": "nice_executions"}, {"score": 0.0032618078775887077, "phrase": "minimum_number"}, {"score": 0.0032229262928681304, "phrase": "communication_steps"}, {"score": 0.0031845067058084583, "phrase": "nonspeculative_and_speculative_algorithms"}, {"score": 0.0030353401945270755, "phrase": "obvious_benefits"}, {"score": 0.0026283626419808036, "phrase": "previous_ones"}, {"score": 0.0025354258731826148, "phrase": "fault-tolerant_replication_algorithms"}, {"score": 0.0024350947713383626, "phrase": "liskov"}, {"score": 0.002373472641477602, "phrase": "trusted_component"}, {"score": 0.0022758279600841014, "phrase": "better_throughput"}, {"score": 0.0021561514733516676, "phrase": "better_latency"}, {"score": 0.0021049977753042253, "phrase": "nonnegligible_communication_delays"}], "paper_keywords": ["Byzantine fault-tolerance", " intrusion tolerance", " state machine replication", " distributed systems", " trusted components"], "paper_abstract": "We present two asynchronous Byzantine fault-tolerant state machine replication (BFT) algorithms, which improve previous algorithms in terms of several metrics. First, they require only 2f + 1 replicas, instead of the usual 3f + 1. Second, the trusted service in which this reduction of replicas is based is quite simple, making a verified implementation straightforward (and even feasible using commercial trusted hardware). Third, in nice executions the two algorithms run in the minimum number of communication steps for nonspeculative and speculative algorithms, respectively, four and three steps. Besides the obvious benefits in terms of cost, resilience and management complexity-fewer replicas to tolerate a certain number of faults-our algorithms are simpler than previous ones, being closer to crash fault-tolerant replication algorithms. The performance evaluation shows that, even with the trusted component access overhead, they can have better throughput than Castro and Liskov's PBFT, and better latency in networks with nonnegligible communication delays.", "paper_title": "Efficient Byzantine Fault-Tolerance", "paper_id": "WOS:000311846200002"}