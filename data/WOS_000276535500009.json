{"auto_keywords": [{"score": 0.03686325203206044, "phrase": "secret_data"}, {"score": 0.03481487178682438, "phrase": "proposed_scheme"}, {"score": 0.012478734873820127, "phrase": "kr"}, {"score": 0.012405466786571175, "phrase": "kc"}, {"score": 0.01176832629411913, "phrase": "pixel_group"}, {"score": 0.007711261127284027, "phrase": "wang"}, {"score": 0.00481495049065317, "phrase": "modulus_function"}, {"score": 0.004661176995136095, "phrase": "data_hiding_scheme"}, {"score": 0.00438105507792004, "phrase": "data-embedding_algorithm"}, {"score": 0.004329630571352367, "phrase": "data_hiding_schemes"}, {"score": 0.004191291301774421, "phrase": "novel_data_hiding_scheme"}, {"score": 0.004142084961822865, "phrase": "simple_modulus_function"}, {"score": 0.004021571540928605, "phrase": "input_secret_keys"}, {"score": 0.003757480190200645, "phrase": "variant_cartesian_product"}, {"score": 0.003531474887552889, "phrase": "efficient_modulus_function"}, {"score": 0.0034185505275141077, "phrase": "mapping_process"}, {"score": 0.0033584796908285863, "phrase": "cartesian_product"}, {"score": 0.0032128654564385494, "phrase": "embedding_capacity"}, {"score": 0.002931569771634119, "phrase": "secret_keys"}, {"score": 0.002738860577028354, "phrase": "cover_pixels"}, {"score": 0.0026355812883224203, "phrase": "mielikainen's_and_zhang_and_wang's_schemes"}, {"score": 0.002573965014439041, "phrase": "experimental_results"}, {"score": 0.0025361866386341796, "phrase": "mielikainen"}, {"score": 0.0023764249306830196, "phrase": "higher_embedding_capacity"}, {"score": 0.002362507608021536, "phrase": "zhang"}, {"score": 0.002259883463607508, "phrase": "color_images"}, {"score": 0.002200516898576322, "phrase": "tsai"}, {"score": 0.002142696637011647, "phrase": "memory_space_requirement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Data hiding", " Steganography", " Modulus operation"], "paper_abstract": "Four criteria are generally used to evaluate the performance of data hiding scheme: the embedding capacity, the visual quality of the stego-image, the security, and the complexity of the data-embedding algorithm. However, data hiding schemes seldom take all these factors into consideration. This paper proposes a novel data hiding scheme that uses a simple modulus function to address all the performance criteria listed above. According to the input secret keys, the encoder and decoder use the same set-generation functions H(r)() and H(c)() to first generate two sets Kr and Kc. A variant Cartesian product is then created using Kr and Kc. Each cover pixel then forms a pixel group with its neighboring pixels by exploiting an efficient modulus function; the secret data are then embedded or extracted via a mapping process between the variant of the Cartesian product and each pixel group. The proposed scheme offers several advantages, namely (1) the embedding capacity can be scaled, (2) a good visual quality of the stego-image can be achieved, (3) the computational cost of embedding or extracting the secret data is low and requires little memory space, (4) secret keys are used to protect the secret data and (5) the problem of overflow or underflow does not occur, regardless of the nature of the cover pixels. We tested the performance of the proposed scheme by comparing it with Mielikainen's and Zhang and Wang's schemes for gray-scale images. The experimental results showed that our proposed scheme outperforms Mielikainen's in three respects, namely scalable embedding capacity, embedding rate, and level of security. Our data hiding scheme also achieved a higher embedding capacity than Zhang and Wang's. The proposed scheme can easily be applied to both gray-scale and color images. Analyses of its performance showed that our proposed scheme outperforms Tsai and Wang's in terms of its time complexity and memory space requirement. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A novel data hiding scheme based on modulus function", "paper_id": "WOS:000276535500009"}