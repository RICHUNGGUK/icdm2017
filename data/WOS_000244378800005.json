{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "information_system_security"}, {"score": 0.004734987730139094, "phrase": "computational_resources"}, {"score": 0.004682414867878963, "phrase": "system_security_tasks"}, {"score": 0.0046046429665581555, "phrase": "shared_resource"}, {"score": 0.004211069233133584, "phrase": "traditional_uni-processor"}, {"score": 0.003916098498242888, "phrase": "protected_application"}, {"score": 0.003541357671562449, "phrase": "different_processor"}, {"score": 0.0034824716857663114, "phrase": "shadow_process"}, {"score": 0.0034245614958572012, "phrase": "application_process'_activity"}, {"score": 0.0031490944606172152, "phrase": "prototype_cupids_system"}, {"score": 0.0029447150254434842, "phrase": "self-protecting_and_self-healing_system"}, {"score": 0.002847540262784593, "phrase": "fine-grained_protection"}, {"score": 0.002800158709933889, "phrase": "real-world_application_wu-ftp"}, {"score": 0.0026626797255348287, "phrase": "cupids'_ability"}, {"score": 0.002603758927691463, "phrase": "illegitimate_behavior"}], "paper_keywords": ["intrusion detection", " information system security", " co-processor", " multi-processor", " security policy compliance monitoring"], "paper_abstract": "The Co-Processing Intrusion Detection System (CuPIDS) project explores improving information system security through dedicating computational resources to system security tasks in a shared resource, multi-processor (MP) architecture. Our research explores ways in which this architecture offers improvements over the traditional uni-processor (UP) model of security. One approach we examined has a protected application running on one processor in a symmetric multi-processing (SMP) system while a shadow process specific to that application runs on a different processor. The shadow process monitors the application process' activity, ready to respond immediately if the application violates policy. Experiments with a prototype CuPIDS system demonstrate the feasibility of this approach in the context of a self-protecting and self-healing system. An untuned prototype supporting fine-grained protection of the real-world application WU-FTP resulted in less than a 15% slowdown while demonstrating CuPIDS' ability to quickly detect illegitimate behavior, raise an alarm, automatically repair the damage done by the fault or attack, allow the application to resume execution, and export a signature for the activity leading up to the error. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "CuPIDS: An exploration of highly focused, co-processor-based information system protection", "paper_id": "WOS:000244378800005"}