{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "worst-case_design"}, {"score": 0.004704187604192605, "phrase": "process_parameters"}, {"score": 0.00464976086880886, "phrase": "nanometer_cmos_circuits"}, {"score": 0.0045959609346817535, "phrase": "standard_worst-case_design_methodology_waste"}, {"score": 0.004361428012479218, "phrase": "common-case_design"}, {"score": 0.004211731831120046, "phrase": "perilous_alternative"}, {"score": 0.003996727479807572, "phrase": "design_yield"}, {"score": 0.0036411406244705557, "phrase": "btwc_risc_processor"}, {"score": 0.00357806560856829, "phrase": "worst-case_extra_delays"}, {"score": 0.0034753508746887957, "phrase": "significant_impact"}, {"score": 0.003415137969569376, "phrase": "overall_performance"}, {"score": 0.0032596049901888724, "phrase": "latency-insensitive_design"}, {"score": 0.002952146666681891, "phrase": "vl_units"}, {"score": 0.002720785798036066, "phrase": "worst-case_approach"}, {"score": 0.002351705899181029, "phrase": "worst_process_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Variable-latency", " Latency-insensitive design", " Better than worst-case (BTWC) design"], "paper_abstract": "Variability of process parameters in nanometer CMOS circuits makes standard worst-case design methodology waste much of the advantages of scaling. A common-case design, though, is a perilous alternative, as it gives up much of the design yield. Better than worst-case (BTWC) design methodology reconciles performance and yield. In this paper we present a BTWC RISC processor that tolerates worst-case extra delays of critical paths without significant impact on the overall performance. We obtain this result by coupling latency-insensitive design and variable-latency (VL) units. A software built-in self-test checks VL units individually to determine whether to activate them or not. Compared to a worst-case approach, the RISC clock frequency increases by 23% in a 45 nm CMOS technology. The impact of VL on instructions per cycle is circumscribed to the worst process case only and very limited, as we show through a set of benchmarks. (C) 2014 Elsevier B.V. All rights reserved,", "paper_title": "A synchronous latency-insensitive RISC for better than worst-case design", "paper_id": "WOS:000345541100007"}