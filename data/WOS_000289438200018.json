{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimal_transitive_approximation"}, {"score": 0.0450143627548408, "phrase": "suboptimal_transitive_approximation"}, {"score": 0.004682708592184678, "phrase": "proximity_relation"}, {"score": 0.0044289730051264116, "phrase": "optimal_transitive_approximations"}, {"score": 0.00399881984083004, "phrase": "first_one"}, {"score": 0.0032898346872897383, "phrase": "second_one"}, {"score": 0.002731500545019039, "phrase": "transitive_closure"}, {"score": 0.0026811531172346676, "phrase": "third_method"}, {"score": 0.0025121156016001864, "phrase": "locally_optimal_transitive_approximation"}, {"score": 0.002420339995088838, "phrase": "numerical_experiments"}], "paper_keywords": ["Proximity relation", " Fuzzy similarity relation", " Transitive approximation", " The optimal transitive approximation", " The suboptimal transitive approximation"], "paper_abstract": "Three ways for generating the optimal transitive approximations or a suboptimal transitive approximation are given in this paper. The first one can obtain all the optimal transitive approximations for any proximity relation. However, trying to find all the optimal transitive approximations can be very expensive. The second one gives a method to obtain a suboptimal transitive approximation which can frequently generate an optimal transitive approximation. Furthermore, starting from the transitive closure the third method is proposed which can obtain a locally optimal transitive approximation. Finally, numerical experiments are carried out to show the abilities of these algorithms and compare them to other existing approximation algorithms.", "paper_title": "Algorithms for computing the optimal transitive approximation of a proximity relation", "paper_id": "WOS:000289438200018"}