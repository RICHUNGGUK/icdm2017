{"auto_keywords": [{"score": 0.025391659877494296, "phrase": "lookup"}, {"score": 0.00481495049065317, "phrase": "scalable_lookup_algorithms"}, {"score": 0.0034162643819889054, "phrase": "memory_requirements"}, {"score": 0.0033633514001658086, "phrase": "diverse_lookup_algorithms"}, {"score": 0.003234615195382533, "phrase": "different_lookup_table_sizes"}, {"score": 0.0031351720217878917, "phrase": "high_lookup_throughput"}, {"score": 0.0030387767523076528, "phrase": "memory_access"}, {"score": 0.002681859084438076, "phrase": "bpfl"}, {"score": 0.002619748321217153, "phrase": "lookup_table"}, {"score": 0.002519402443228795, "phrase": "range_selector"}, {"score": 0.0024803459795996116, "phrase": "balanced_trees"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Address lookup algorithms", " IP packet forwarding", " Internet router", " Lookup tables"], "paper_abstract": "IPv4 addresses have been exhausted, and the Internet is moving to IPv6. Many IP lookup algorithms have been proposed in the past. In this paper, we analyze their scalability and applicability to IPv6. In particular, we calculate the memory requirements of diverse lookup algorithms and compare them for different lookup table sizes, assuming the high lookup throughput of one lookup per memory access. The BPFL (Balanced Parallelized Frugal Lookup) algorithm requires the smallest external and internal memories for the examined IPv6 lookup tables. In BPFL, the lookup table is defined using the range selector, balanced trees, and bitmaps. Lookup algorithms based on hashing and TCAMs also use memory frugally. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A comparative review of scalable lookup algorithms for IPv6", "paper_id": "WOS:000307924300004"}