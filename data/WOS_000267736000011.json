{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "grid_networks"}, {"score": 0.004745665541429529, "phrase": "key_problem"}, {"score": 0.004543708337879809, "phrase": "available_infrastructure"}, {"score": 0.004413846562278824, "phrase": "user_requirements"}, {"score": 0.004350308086118336, "phrase": "resource_utilization"}, {"score": 0.004246428036409373, "phrase": "large_part"}, {"score": 0.0036730297909962142, "phrase": "communication_and_computation_resources"}, {"score": 0.0035507457285983268, "phrase": "grid_task"}, {"score": 0.00346589179059467, "phrase": "multi-cost_scheme"}, {"score": 0.0033667304423940893, "phrase": "immediate_reservations"}, {"score": 0.0033021988455635403, "phrase": "computation_resource"}, {"score": 0.003115908199991072, "phrase": "input_data"}, {"score": 0.0030267296900520217, "phrase": "multi-cost_algorithms"}, {"score": 0.0029830992938695007, "phrase": "advance_reservations"}, {"score": 0.002897710777957041, "phrase": "starting_times"}, {"score": 0.002855934865505357, "phrase": "data_transmission"}, {"score": 0.002814759530655965, "phrase": "task_execution"}, {"score": 0.0027341763737751467, "phrase": "optimal_scheme"}, {"score": 0.002707829887747594, "phrase": "non-polynomial_complexity"}, {"score": 0.0026049517737353365, "phrase": "candidate_paths"}, {"score": 0.002542642270762272, "phrase": "heuristic_algorithm"}, {"score": 0.0025181367444581993, "phrase": "polynomial_complexity"}, {"score": 0.0024342079318127423, "phrase": "grid_network"}, {"score": 0.0022094759531152072, "phrase": "scheduling_algorithm"}, {"score": 0.0021566056345478373, "phrase": "computational_and_communication_problems"}, {"score": 0.0021049977753042253, "phrase": "immediate_and_advance_reservation_schemes"}], "paper_keywords": ["Algorithms", " Network problems", " Scheduling", " Optimization"], "paper_abstract": "A key problem in Grid networks is how to efficiently manage the available infrastructure, in order to satisfy user requirements and maximize resource utilization. This is in large part influenced by the algorithms responsible for the routing of data and the scheduling of tasks. In this paper, we present several multi-cost algorithms for the joint scheduling of the communication and computation resources that will be used by a Grid task. We propose a multi-cost scheme of polynomial complexity that performs immediate reservations and selects the computation resource to execute the task and determines the path to route the input data. Furthermore, we introduce multi-cost algorithms that perform advance reservations and thus also find the starting times for the data transmission and the task execution. We initially present an optimal scheme of non-polynomial complexity and by appropriately pruning the set of candidate paths we also give a heuristic algorithm of polynomial complexity. Our performance results indicate that in a Grid network in which tasks are either CPU- or data-intensive (or both), it is beneficial for the scheduling algorithm to jointly consider the computational and communication problems. A comparison between immediate and advance reservation schemes shows the trade-offs with respect to task blocking probability, end-to-end delay and the complexity of the algorithms. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Multi-cost job routing and scheduling in Grid networks", "paper_id": "WOS:000267736000011"}