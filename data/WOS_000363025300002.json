{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "general_purpose_applications"}, {"score": 0.04858938791901053, "phrase": "cloud_infrastructures"}, {"score": 0.027905147053831736, "phrase": "cloud_store"}, {"score": 0.025546738500686034, "phrase": "consistency_level"}, {"score": 0.004771672073078768, "phrase": "cloud_storages"}, {"score": 0.004623224002010226, "phrase": "novel_challenges"}, {"score": 0.0045404698551856125, "phrase": "existing_and_well-studied_approaches"}, {"score": 0.0044795251327418555, "phrase": "acid"}, {"score": 0.004439097815805505, "phrase": "long-running_transactions"}, {"score": 0.004339979174946844, "phrase": "main_requirements"}, {"score": 0.004223941453664225, "phrase": "partition_tolerance"}, {"score": 0.00391167729353583, "phrase": "weaker_consistency"}, {"score": 0.003772793879444995, "phrase": "weak_memory_models"}, {"score": 0.0034937647771945803, "phrase": "large_data"}, {"score": 0.0033393377529146893, "phrase": "widespread_availability"}, {"score": 0.0032794890195334513, "phrase": "weak_storages"}, {"score": 0.0031917146566068245, "phrase": "specialised_applications"}, {"score": 0.0030644247579222333, "phrase": "formal_approach"}, {"score": 0.0028376361457661415, "phrase": "cloud_stores"}, {"score": 0.002603918128553617, "phrase": "'strong'_properties"}, {"score": 0.002568812627436125, "phrase": "wise_usage"}, {"score": 0.0025456716198597627, "phrase": "asynchronous_message-passing"}, {"score": 0.0023253967212081626, "phrase": "proposed_approach"}, {"score": 0.002202469129781332, "phrase": "parallel_composition"}, {"score": 0.0021337783230121286, "phrase": "process-store_ensembles"}, {"score": 0.0021049977753042253, "phrase": "weak_simulation"}], "paper_keywords": ["Cloud", " Weak stores", " Eventual consistency", " Process calculi"], "paper_abstract": "Managing data over cloud infrastructures raises novel challenges with respect to existing and well-studied approaches such as ACID and long-running transactions. One of the main requirements is to provide availability and partition tolerance in a scenario with replicas and distributed control. This comes at the price of a weaker consistency, usually called eventual consistency. These weak memory models have proved to be suitable in a number of scenarios, such as the analysis of large data with map reduce. However, due to the widespread availability of cloud infrastructures, weak storages are used not only by specialised applications but also by general purpose applications. We provide a formal approach, based on process calculi, to reason about the behaviour of programs that rely on cloud stores. For instance, it allows to check that the composition of a process with a cloud store ensures 'strong' properties through a wise usage of asynchronous message-passing; in this case, we say that the process supports the consistency level provided by the cloud store. The proposed approach is compositional: the support of a consistency level is preserved by parallel composition when the preorder used to compare process-store ensembles is the weak simulation.", "paper_title": "On the behaviour of general purpose applications on cloud storages", "paper_id": "WOS:000363025300002"}