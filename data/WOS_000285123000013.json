{"auto_keywords": [{"score": 0.04227539537967157, "phrase": "proposed_algorithm"}, {"score": 0.010519569757466537, "phrase": "heterogeneous_multiprocessor_system"}, {"score": 0.010111734487628529, "phrase": "high_performance"}, {"score": 0.008669916657229756, "phrase": "ga"}, {"score": 0.00481495049065317, "phrase": "task_scheduling"}, {"score": 0.0047306078475683865, "phrase": "effective_task_scheduling"}, {"score": 0.004446823283475876, "phrase": "challenging_problem"}, {"score": 0.004407690586271672, "phrase": "extensive_studies"}, {"score": 0.0042734067085669885, "phrase": "heuristic-based_hybrid_genetic-variable_neighborhood_search_algorithm"}, {"score": 0.0040886093072615, "phrase": "heterogeneous_multiprocessor_scheduling_problem"}, {"score": 0.003709595902020469, "phrase": "variable_neighborhood_search"}, {"score": 0.0034868462688262864, "phrase": "intrinsic_structure"}, {"score": 0.0033805214040814233, "phrase": "exploration_process"}, {"score": 0.003149471116658739, "phrase": "communication_reduction"}, {"score": 0.002832081745025006, "phrase": "task-processor_mapping_solutions"}, {"score": 0.0027456676902333304, "phrase": "upward-ranking_heuristic"}, {"score": 0.002697474061842142, "phrase": "traditional_list_scheduling_approaches"}, {"score": 0.0026501241093379786, "phrase": "task_sequence_assignment"}, {"score": 0.002592100731070259, "phrase": "empirical_results"}, {"score": 0.0025692477422626678, "phrase": "benchmark_task_graphs"}, {"score": 0.002436289099444074, "phrase": "non-parametric_statistical_tests"}, {"score": 0.0022999859758286423, "phrase": "schedule_quality"}, {"score": 0.002123730137917387, "phrase": "wide_range"}, {"score": 0.0021049977753042253, "phrase": "parameter_settings"}], "paper_keywords": ["Variable neighborhood search", " Genetic algorithm", " Hybrid metaheuristic", " Memetic algorithm", " Heterogeneous multiprocessor scheduling"], "paper_abstract": "Effective task scheduling, which is essential for achieving high performance in a heterogeneous multiprocessor system, remains a challenging problem despite extensive studies. In this article, a heuristic-based hybrid genetic-variable neighborhood search algorithm is proposed for the minimization of makespan in the heterogeneous multiprocessor scheduling problem. The proposed algorithm distinguishes itself from many existing genetic algorithm (GA) approaches in three aspects. First, it incorporates GA with the variable neighborhood search (VNS) algorithm, a local search metaheuristic, to exploit the intrinsic structure of the solutions for guiding the exploration process of GA. Second, two novel neighborhood structures are proposed, in which problem-specific knowledge concerned with load balancing and communication reduction is utilized respectively, to improve both the search quality and efficiency of VNS. Third, the proposed algorithm restricts the use of GA to evolve the task-processor mapping solutions, while taking advantage of an upward-ranking heuristic mostly used by traditional list scheduling approaches to determine the task sequence assignment in each processor. Empirical results on benchmark task graphs of several well-known parallel applications, which have been validated by the use of non-parametric statistical tests, show that the proposed algorithm significantly outperforms several related algorithms in terms of the schedule quality. Further experiments are carried out to reveal that the proposed algorithm is able to maintain high performance within a wide range of parameter settings. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A heuristic-based hybrid genetic-variable neighborhood search algorithm for task scheduling in heterogeneous multiprocessor system", "paper_id": "WOS:000285123000013"}