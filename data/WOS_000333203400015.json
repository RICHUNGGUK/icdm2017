{"auto_keywords": [{"score": 0.04758008554756529, "phrase": "mapreduce"}, {"score": 0.006769408495843008, "phrase": "mpi"}, {"score": 0.004815072275334311, "phrase": "distributed"}, {"score": 0.004494570360108983, "phrase": "web-scale_digital_assets"}, {"score": 0.004227653047394939, "phrase": "sequential_algorithms"}, {"score": 0.0035722806911457545, "phrase": "programming_model"}, {"score": 0.0034911858312641542, "phrase": "google"}, {"score": 0.003438058620195309, "phrase": "scalable_data_processing"}, {"score": 0.0032585499655442404, "phrase": "data_intensive_algorithms"}, {"score": 0.0031121406603482112, "phrase": "message_passing_interface"}, {"score": 0.002949598537993663, "phrase": "high_performance_algorithms"}, {"score": 0.0028170314398963704, "phrase": "adapted_structure"}, {"score": 0.0027529929913806066, "phrase": "mapreduce_programming_model"}, {"score": 0.0026698611202305715, "phrase": "multimedia_indexing"}, {"score": 0.002629238854352447, "phrase": "experimental_results"}, {"score": 0.0023435920614377306, "phrase": "good_speedup"}, {"score": 0.002272794656458419, "phrase": "original_sequential_versions"}, {"score": 0.0022382112455742466, "phrase": "hadoop"}, {"score": 0.002105001223658591, "phrase": "mpi."}], "paper_keywords": ["Distributed multimedia indexing", " MPI", " MapReduce", " Distributed inverted indexing", " Permutation-based indexes", " Distributed approximate similarity search"], "paper_abstract": "Web-scale digital assets comprise millions or billions of documents. Due to such increase, sequential algorithms cannot cope with this data, and parallel and distributed computing become the solution of choice. MapReduce is a programming model proposed by Google for scalable data processing. MapReduce is mainly applicable for data intensive algorithms. In contrast, the message passing interface (MPI) is suitable for high performance algorithms. This paper proposes an adapted structure of the MapReduce programming model using MPI for multimedia indexing. Experimental results are done on various multimedia applications to validate our model. The experiments indicate that our proposed model achieves good speedup compared to the original sequential versions, Hadoop and the earlier versions of MapReduce using MPI.", "paper_title": "Distributed media indexing based on MPI and MapReduce", "paper_id": "WOS:000333203400015"}