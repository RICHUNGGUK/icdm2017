{"auto_keywords": [{"score": 0.04897469322900726, "phrase": "available_bandwidth"}, {"score": 0.046418933249490715, "phrase": "network_path"}, {"score": 0.043793559268453644, "phrase": "data_packets"}, {"score": 0.0048151063785101976, "phrase": "tcp"}, {"score": 0.004747997855358171, "phrase": "inline_measurement_mechanism"}, {"score": 0.004595356579614969, "phrase": "novel_mechanism"}, {"score": 0.004344965512058521, "phrase": "probe_traffic"}, {"score": 0.004224911726496726, "phrase": "new_mechanism"}, {"score": 0.004108161406159407, "phrase": "tcp_connection"}, {"score": 0.003920674807745575, "phrase": "new_bandwidth_measurement_algorithm"}, {"score": 0.003848088904418221, "phrase": "measurement_estimates"}, {"score": 0.0037069087922811488, "phrase": "inline_measurement"}, {"score": 0.0036382660173943393, "phrase": "smaller_number"}, {"score": 0.003604421041893448, "phrase": "probe_packets"}, {"score": 0.0035376693476114733, "phrase": "negligible_effect"}, {"score": 0.003329117824699891, "phrase": "renotcp"}, {"score": 0.0032370412139943808, "phrase": "tcp_sender"}, {"score": 0.0031475032122226, "phrase": "modified_version"}, {"score": 0.0030604342671868836, "phrase": "proposed_mechanism"}, {"score": 0.0029343128039167185, "phrase": "imtcp_sender"}, {"score": 0.002893434697072309, "phrase": "transmission_intervals"}, {"score": 0.0026722904884984348, "phrase": "arrival_intervals"}, {"score": 0.0026474076254702525, "phrase": "ack_packets"}, {"score": 0.0025741370320813968, "phrase": "new_measurement_mechanism"}, {"score": 0.0025264171945423254, "phrase": "tcp_data_transmission_performance"}, {"score": 0.0021649437083408425, "phrase": "measurement_results"}, {"score": 0.0021347607855562102, "phrase": "tcp_performance"}], "paper_keywords": ["available bandwidth", " inline measurement", " TCP"], "paper_abstract": "We introduce a novel mechanism for actively measuring available bandwidth along a network path. Instead of adding probe traffic to the network, the new mechanism exploits data packets transmitted in a TCP connection (inline measurement). We first introduce a new bandwidth measurement algorithm that can perform measurement estimates quickly and continuously and is suitable for inline measurement because of the smaller number of probe packets required and the negligible effect on other network traffic. We then show how the algorithm is applied in RenoTCP through a modification to the TCP sender only. We call the modified version of RenoTCP that incorporates the proposed mechanism ImTCP (Inline measurement TCP). The ImTCP sender adjusts the transmission intervals of data packets, then estimates available bandwidth of the network path between sender and receiver utilizing the arrival intervals of ACK packets. Simulations show that the new measurement mechanism does not degrade TCP data transmission performance, has no effect on surrounding traffic and yields acceptable measurement results in intervals as short as some RTTs (round-trip times). We also give examples in which measurement results help improving TCP performance. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "ImTCP: TCP with an inline measurement mechanism for available bandwidth", "paper_id": "WOS:000238881900006"}