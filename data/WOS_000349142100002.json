{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "false_sharing"}, {"score": 0.011021302234590469, "phrase": "predator"}, {"score": 0.005743328037443783, "phrase": "false_sharing_problems"}, {"score": 0.004756521061849989, "phrase": "notorious_problem"}, {"score": 0.004717960684395242, "phrase": "multithreaded_applications"}, {"score": 0.004529776351030488, "phrase": "existing_approaches"}, {"score": 0.003771282384646587, "phrase": "slight_differences"}, {"score": 0.003740679163860117, "phrase": "memory_allocation_order"}, {"score": 0.003710323357333052, "phrase": "object_placement_decisions"}, {"score": 0.003433909720151841, "phrase": "different_cache_line_sizes"}, {"score": 0.0031650944584992726, "phrase": "single_execution"}, {"score": 0.0030386598795433474, "phrase": "current_execution"}, {"score": 0.002870066750788841, "phrase": "different_object_placement"}, {"score": 0.0027893011631269873, "phrase": "virtual_cache_lines"}, {"score": 0.0027666443986705453, "phrase": "contiguous_memory"}, {"score": 0.0027218799769229596, "phrase": "actual_hardware_cache_lines"}, {"score": 0.0026560841114619147, "phrase": "hardware_platforms"}, {"score": 0.002634506575564286, "phrase": "larger_cache_line_sizes"}, {"score": 0.0025499307228648883, "phrase": "exact_program_location"}, {"score": 0.002529213370528279, "phrase": "predicted_false_sharing_problems"}, {"score": 0.002359759876402679, "phrase": "actual_applications"}, {"score": 0.0022933216359142736, "phrase": "previous_tools"}, {"score": 0.002130926878586976, "phrase": "mysql"}, {"score": 0.0021049977753042253, "phrase": "boost_library"}], "paper_keywords": ["Performance", " Measurement", " False Sharing", " Multi-threaded"], "paper_abstract": "False sharing is a notorious problem for multithreaded applications that can drastically degrade both performance and scalability. Existing approaches can precisely identify the sources of false sharing, but only report false sharing actually observed during execution; they do not generalize across executions. Because false sharing is extremely sensitive to object layout, these detectors can easily miss false sharing problems that can arise due to slight differences in memory allocation order or object placement decisions by the compiler. In addition, they cannot predict the impact of false sharing on hardware with different cache line sizes. This paper presents PREDATOR, a predictive software-based false sharing detector. PREDATOR generalizes from a single execution to precisely predict false sharing that is latent in the current execution. PREDATOR tracks accesses within a range that could lead to false sharing given different object placement. It also tracks accesses within virtual cache lines, contiguous memory ranges that span actual hardware cache lines, to predict sharing on hardware platforms with larger cache line sizes. For each, it reports the exact program location of predicted false sharing problems, ranked by their projected impact on performance. We evaluate PREDATOR across a range of benchmarks and actual applications. PREDATOR identifies problems undetectable with previous tools, including two previously-unknown false sharing problems, with no false positives. PREDATOR is able to immediately locate false sharing problems in MySQL and the Boost library that had eluded detection for years.", "paper_title": "PREDATOR: Predictive False Sharing Detection", "paper_id": "WOS:000349142100002"}