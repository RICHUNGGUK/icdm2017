{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "time_windows"}, {"score": 0.03363896917055258, "phrase": "local_search"}, {"score": 0.004777214679969785, "phrase": "lifo_loading"}, {"score": 0.0045748683993128425, "phrase": "delivery_problem"}, {"score": 0.0041625173012740544, "phrase": "linear_stack_structure"}, {"score": 0.003472845095323694, "phrase": "larger_instances"}, {"score": 0.0033518704336033905, "phrase": "initial_solutions"}, {"score": 0.003286486670483032, "phrase": "greedy_randomized_adaptive_search_procedure"}, {"score": 0.003073545175760353, "phrase": "total_number"}, {"score": 0.0028405715222684183, "phrase": "vehicle_routes"}, {"score": 0.002807178116892454, "phrase": "solution_pool"}, {"score": 0.0026774738852854427, "phrase": "crossover_operator"}, {"score": 0.0025537472239953807, "phrase": "child_solution"}, {"score": 0.002426137929553722, "phrase": "best_survivors"}, {"score": 0.0023139986108451946, "phrase": "good_quality_solutions"}, {"score": 0.0022777800735119405, "phrase": "total_cost"}, {"score": 0.002259883463607508, "phrase": "population_diversity"}, {"score": 0.002242127152093798, "phrase": "computational_results"}, {"score": 0.0022070310530794097, "phrase": "large_instances"}, {"score": 0.002155412043665635, "phrase": "proposed_metaheuristic"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Vehicle routing with pickup and delivery", " Last-in-first-out loading", " Genetic algorithm", " GRASP", " Adaptive large neighborhood search"], "paper_abstract": "In this paper, we solve the pickup and delivery problem with time windows and last-in-first-out (LIFO) loading. LIFO loading minimizes handling while unloading items from the vehicle: the items are loaded according to a linear stack structure, and an item can only be delivered if it is the one on top of the stack. Three exact branch-price-and-cut algorithms are available for this problem. These can solve instances with up to 75 requests within one hour. We propose a population-based metaheuristic capable of handling larger instances much faster. First, a set of initial solutions is generated with a greedy randomized adaptive search procedure. For each of these solutions, local search is applied in order to first decrease the total number of vehicles and then the total traveled distance. Two different strategies are used to create offspring. The first selects vehicle routes from the solution pool. The second selects two parents to create an offspring with a crossover operator. For both strategies, local search is then performed on the child solution. Finally, the offspring is added to the population and the best survivors are kept. The population is managed so as to maintain good quality solutions with respect to total cost and population diversity. Computational results on medium to large instances confirm the effectiveness of the proposed metaheuristic. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A population-based metaheuristic for the pickup and delivery problem with time windows and LIFO loading", "paper_id": "WOS:000357224000003"}