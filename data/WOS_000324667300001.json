{"auto_keywords": [{"score": 0.04964156968469261, "phrase": "profitable_custom_instructions"}, {"score": 0.008330291454711774, "phrase": "custom_instructions"}, {"score": 0.00481495049065317, "phrase": "rapid_generation"}, {"score": 0.004641351004344458, "phrase": "fpga_based_reconfigurable_processors"}, {"score": 0.004473982381245469, "phrase": "increasingly_strict_design_constraints"}, {"score": 0.004138010495069077, "phrase": "fpga_architectural_constraints"}, {"score": 0.004062682236016889, "phrase": "design_space"}, {"score": 0.0038981499110532307, "phrase": "notable_reduction"}, {"score": 0.003459191419478298, "phrase": "area_constraint"}, {"score": 0.00338060449446278, "phrase": "previously_proposed_methods"}, {"score": 0.0032886455096627324, "phrase": "traditional_methods"}, {"score": 0.0030554300179552415, "phrase": "arbitrary_area_constraints"}, {"score": 0.0030135741897058844, "phrase": "proposed_heuristic"}, {"score": 0.0029586543333524904, "phrase": "new_pruning_criterion"}, {"score": 0.0027361626349903744, "phrase": "suitable_algorithm"}, {"score": 0.0026616868981501006, "phrase": "enumerated_patterns"}, {"score": 0.0026252106881752067, "phrase": "proposed_template_selection_algorithm"}, {"score": 0.0025655216052760093, "phrase": "fpga_area-time_measures"}, {"score": 0.00241658945942583, "phrase": "fpga-aware_enumeration_strategy"}, {"score": 0.0023400004981080818, "phrase": "proposed_methods"}, {"score": 0.0023079225317714815, "phrase": "paper_result"}, {"score": 0.0022450768409733807, "phrase": "average_performance_gain"}], "paper_keywords": ["Custom instruction extension", " Enumeration", " Selection", " Application-specific architectures"], "paper_abstract": "Instruction set extension of FPGA based reconfigurable processors provides an effective means to meet the increasingly strict design constraints of embedded systems. We have shown in our previous works [20,21] that the usage of FPGA architectural constraints for pruning the design space during enumeration of custom instructions/patterns not only leads to notable reduction in the time taken to identify custom instructions but can also result in the selection of profitable custom instructions when the area is highly constrained. However when area constraint is relaxed, the previously proposed methods failed to perform better than traditional methods. In this paper, we propose a heuristic to identify profitable custom instructions for designs with arbitrary area constraints. The proposed heuristic relies on a new pruning criterion to enumerate patterns with high size-to-hardware-area ratio. We also proposed a suitable algorithm to select profitable custom instructions from the enumerated patterns. The proposed template selection algorithm takes advantage of the FPGA area-time measures of the enumerated patterns, which can be easily inferred from the FPGA-aware enumeration strategy. Experimental results show that the proposed methods in this paper result in custom instructions that achieve an average performance gain of 76.23% over current state-of-the-art approaches. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "FPGA-aware techniques for rapid generation of profitable custom instructions", "paper_id": "WOS:000324667300001"}