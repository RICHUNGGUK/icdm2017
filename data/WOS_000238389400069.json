{"auto_keywords": [{"score": 0.013934073937694618, "phrase": "embedded_software's_performance"}, {"score": 0.01117450812811005, "phrase": "code_analyzer"}, {"score": 0.010999480689550445, "phrase": "test_suite_generator"}, {"score": 0.00481495049065317, "phrase": "embedded_software"}, {"score": 0.004542441734438654, "phrase": "performance_profiling"}, {"score": 0.004494570360108983, "phrase": "testing_tool"}, {"score": 0.004400329132129292, "phrase": "convenient_environments"}, {"score": 0.003957833102043277, "phrase": "suggested_tool"}, {"score": 0.00385431710959668, "phrase": "additional_hardware"}, {"score": 0.0031676593724896075, "phrase": "software's_structure"}, {"score": 0.0031176485976102688, "phrase": "parse_tree"}, {"score": 0.0030199761431186434, "phrase": "additional_codes"}, {"score": 0.002833689453299307, "phrase": "test_script_wizard"}, {"score": 0.0027303606813078255, "phrase": "test_driver"}, {"score": 0.002687235334499192, "phrase": "report_generator"}, {"score": 0.0026447893350441502, "phrase": "string-type_result"}, {"score": 0.002603012037901889, "phrase": "xml-based_class_instance"}, {"score": 0.0023038418282549274, "phrase": "result_data"}, {"score": 0.0022674379203603224, "phrase": "visual_views"}], "paper_keywords": [""], "paper_abstract": "In this paper, we suggest a performance profiling and testing tool that offers developers convenient environments to profile or test an embedded software's performance and to analyze the results through various graphic report views. Because the suggested tool does not need any additional hardware, it is efficient in aspects of costs and management for profiling or testing an embedded software's performance. The tool consists of a code analyzer, a test suite generator, and a report generator. The code analyzer expresses a software's structure as a parse tree and decides a position that additional codes for profiling must be inserted into. The test suite generator offers a test script wizard for users to easily make a test driver. The report generator converts a string-type result to an XML-based class instance in order to raise reusability for the result. To offer various report views we divide the instance into two sections, which are for result data and for visual views. Therefore, users can get various report views by associating the two sections according to their intention.", "paper_title": "A performance profile and test tool for development of embedded software using various report views", "paper_id": "WOS:000238389400069"}