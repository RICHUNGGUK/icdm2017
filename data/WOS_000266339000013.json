{"auto_keywords": [{"score": 0.034602220866799344, "phrase": "python"}, {"score": 0.00481495049065317, "phrase": "parallel_numerical_linear_algebra_libraries"}, {"score": 0.004438250823243621, "phrase": "parallel_software_libraries"}, {"score": 0.003837089839193524, "phrase": "parallel_environment"}, {"score": 0.0033820756307040793, "phrase": "scalapack"}, {"score": 0.003375574760845742, "phrase": "high_level_user_interfaces"}, {"score": 0.003336468343971626, "phrase": "scalapack._concretely"}, {"score": 0.0031111332159761344, "phrase": "numerical_experiments"}, {"score": 0.0030750809317435304, "phrase": "traditional_programming_practices"}, {"score": 0.002867348342846275, "phrase": "python_interfaces"}, {"score": 0.0026736111900632934, "phrase": "original_calls"}, {"score": 0.0025221759076833124, "phrase": "performance_deliverance"}, {"score": 0.0023932142697579506, "phrase": "real_scientific_application_code"}, {"score": 0.0022184630090454132, "phrase": "pyscalapack"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Parallel software", " ScaLAPACK", " Python interfaces", " Numerical experiments", " Performance"], "paper_abstract": "In many high performance engineering and scientific applications there is a need to use parallel software libraries. Researchers behind these applications find it difficult to understand the interfaces to these libraries because they carry arguments that are related to the parallel environment and performance in addition to arguments related to the problem at hand. In this paper we introduce the use of high level user interfaces for ScaLAPACK. Concretely, a Python-based interface to ScaLAPACK is proposed. Numerical experiments comparing traditional programming practices with our proposed approach are presented. These experiments evaluate not only the performance of the Python interfaces but also how user friendlier they are, compared to the original calls, and show that PyScaLAPACK does not hinder the performance deliverance of ScaLAPACK. Finally, an example of a real scientific application code, whose functionality can be prototyped or extended with the use of PyScaLAPACK, is presented. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Interfaces for parallel numerical linear algebra libraries in high level languages", "paper_id": "WOS:000266339000013"}