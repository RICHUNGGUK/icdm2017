{"auto_keywords": [{"score": 0.0415992188895559, "phrase": "lsq"}, {"score": 0.004498490110526062, "phrase": "low-power_processor_design"}, {"score": 0.0041589926969138585, "phrase": "memory-based_dependences"}, {"score": 0.0036873373225096624, "phrase": "associative_fashion"}, {"score": 0.003444732262403694, "phrase": "resource's_energy_consumption"}, {"score": 0.0033910448175165004, "phrase": "unnecessary_lookups"}, {"score": 0.0032180376288035296, "phrase": "straightforward_filtering_mechanism"}, {"score": 0.0029131986574478046, "phrase": "previous_approaches"}, {"score": 0.0027936239349923464, "phrase": "microarchitectural_model"}, {"score": 0.0027645030021576926, "phrase": "new_opportunities"}, {"score": 0.0027356847952125433, "phrase": "extra_types"}, {"score": 0.002637160140011997, "phrase": "higher_energy_savings"}, {"score": 0.0025555322596460036, "phrase": "authors_proposal"}, {"score": 0.0024894376091589244, "phrase": "associative_accesses"}, {"score": 0.002450602177683066, "phrase": "load_queue"}, {"score": 0.002387214876538434, "phrase": "store_queue"}, {"score": 0.0023254633298356894, "phrase": "dependence_predictor"}, {"score": 0.002289180040240783, "phrase": "reduced_amount"}, {"score": 0.002160907646736523, "phrase": "dynamic_energy_saving"}, {"score": 0.0021049977753042253, "phrase": "conventional_lsq."}], "paper_keywords": [""], "paper_abstract": "In the last few years, many researchers have focused their efforts on the field of low-power processor design. Several jobs in this area have dealt with the logic that enforces correct memory-based dependences - the load-store queue - (LSQ) a pretty energy-consuming structure since many accesses are performed in an associative fashion. Among these proposals, some of them manage to reduce this resource's energy consumption by avoiding unnecessary lookups. In this context, the authors introduce a straightforward filtering mechanism, which results in a more energy-efficient design than past techniques, using less and simpler hardware. Besides, both the new scheme and some previous approaches are tested in the widespread x86 architecture. This microarchitectural model provides new opportunities for extra types of filtering, which lead to higher energy savings. On average, the authors proposal filters up to 75% of the associative accesses to the load queue, 56% to the store queue and 42% to the dependence predictor with a reduced amount of hardware - less than 100 bytes. According to their energy model, this means a dynamic energy saving of more than 39% over a conventional LSQ.", "paper_title": "Hybrid timing-address oriented load-store queue filtering for an x86 architecture", "paper_id": "WOS:000287964500008"}