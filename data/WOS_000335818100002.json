{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "black-box_component-based_systems"}, {"score": 0.004574247691703376, "phrase": "component-based_software_engineering"}, {"score": 0.004345525254560329, "phrase": "high-quality_components"}, {"score": 0.004247560712327667, "phrase": "high-quality_software_systems"}, {"score": 0.004058180509184539, "phrase": "possible_interactions"}, {"score": 0.0038551626276406175, "phrase": "inter-component_misfunctions"}, {"score": 0.0035796471115594553, "phrase": "source_code"}, {"score": 0.0034988876789164235, "phrase": "formal_models"}, {"score": 0.0032302647179383915, "phrase": "iterative_approach"}, {"score": 0.0031754329320561317, "phrase": "model_learning"}, {"score": 0.003068537223324389, "phrase": "formal_analysis"}, {"score": 0.002982203248352076, "phrase": "black-box_components"}, {"score": 0.002881793492919646, "phrase": "individual_components"}, {"score": 0.0027689017918347755, "phrase": "finite_state_machines"}, {"score": 0.0026604207233593973, "phrase": "behavioural_structure"}, {"score": 0.002570817338292482, "phrase": "learned_models"}, {"score": 0.0024281181691350085, "phrase": "partial_models"}, {"score": 0.002386869729952315, "phrase": "integration_faults"}, {"score": 0.002241517354570928, "phrase": "case_studies"}, {"score": 0.0021908807203548345, "phrase": "encouraging_results"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["commercial-off-the-shelf (COTS)", " black-box components", " integration testing", " system validation", " reverse engineering", " automata learning"], "paper_abstract": "From experience in component-based software engineering, it is known that the integration of high-quality components may not yield high-quality software systems. It is difficult to evaluate all possible interactions between the components in the system to uncover inter-component misfunctions. The problem is even harder when the components are used without source code, specifications or formal models. Such components are called black boxes in literature. This paper presents an iterative approach of combining model learning and testing techniques for the formal analysis of a system of black-box components. In the approach, individual components in the system are learned as finite state machines that (partially) model the behavioural structure of the components. The learned models are then used to derive tests for refining the partial models and/or finding integration faults in the system. The approach has been applied on case studies that have produced encouraging results. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Analysis and testing of black-box component-based systems by inferring partial models", "paper_id": "WOS:000335818100002"}