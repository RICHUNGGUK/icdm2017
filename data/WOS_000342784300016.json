{"auto_keywords": [{"score": 0.039510674444560655, "phrase": "composite_services"}, {"score": 0.010435409021063343, "phrase": "existing_services"}, {"score": 0.008122865878938564, "phrase": "composite_service"}, {"score": 0.00481495049065317, "phrase": "correctness_assurance_approach"}, {"score": 0.004769444094319619, "phrase": "automatic_synthesis_of_composite_web_services"}, {"score": 0.004613516457919661, "phrase": "web_services_application"}, {"score": 0.0045052562941109734, "phrase": "different_existing_services"}, {"score": 0.004441517985511521, "phrase": "new_composite_service"}, {"score": 0.004399525320473839, "phrase": "existing_work"}, {"score": 0.0040969285074699, "phrase": "composite_service_model"}, {"score": 0.004019797503157808, "phrase": "formal_verifications"}, {"score": 0.0037969755088553326, "phrase": "synthesis_process"}, {"score": 0.0033875770020590796, "phrase": "fully-automatic_approaches"}, {"score": 0.0032149396890830575, "phrase": "simple_composition_problems"}, {"score": 0.0030078460113945136, "phrase": "correct_assurance_approach"}, {"score": 0.002909342017421165, "phrase": "finite_state_machine_model"}, {"score": 0.0028006988338192375, "phrase": "requirement_model"}, {"score": 0.0027741761880779535, "phrase": "composition_requirements"}, {"score": 0.002657890175649468, "phrase": "abstract_bpel_descriptions"}, {"score": 0.00258307991054107, "phrase": "composition_requirement"}, {"score": 0.0025103699913760057, "phrase": "bpel_implementation"}, {"score": 0.0024281181691350085, "phrase": "existing_approaches"}, {"score": 0.0022287497627555895, "phrase": "formal_verification"}, {"score": 0.0021049977753042253, "phrase": "case_analysis"}], "paper_keywords": ["web services", " composite service", " FSM model", " automatic synthesis", " composition requirement"], "paper_abstract": "One of the most important problems in web services application is the integration of different existing services into a new composite service. Existing work has the following disadvantages: (i) developers are often required to provide a composite service model first and perform formal verifications to check whether the model is correct. This makes the synthesis process of composite services semi-automatic, complex and inefficient: (ii) there is no assurance that composite services synthesized by using the fully-automatic approaches are correct; (iii) some approaches only handle simple composition problems where existing services are atomic. To address these problems, we propose a correct assurance approach for automatically synthesizing composite services based on finite state machine model. The syntax and semantics of the requirement model specifying composition requirements is also proposed. Given a set of abstract BPEL descriptions of existing services, and a composition requirement, our approach automatically generate the BPEL implementation of the composite service. Compared with existing approaches, the composite service generated by utilizing our proposed approach is guaranteed to be correct and does not require any formal verification. The correctness of our approach is proved. Moreover, the case analysis indicates that our approach is feasible and effective.", "paper_title": "A Correctness Assurance Approach to Automatic Synthesis of Composite Web Services", "paper_id": "WOS:000342784300016"}