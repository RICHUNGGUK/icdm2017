{"auto_keywords": [{"score": 0.04752555935900585, "phrase": "commodity_systems"}, {"score": 0.03581756621697851, "phrase": "external_outputs"}, {"score": 0.004743594110762319, "phrase": "continued_process"}, {"score": 0.004604023526673226, "phrase": "hardware_failures"}, {"score": 0.004188459638572375, "phrase": "heavy_redundancy"}, {"score": 0.0038676325043529524, "phrase": "anomalous_software_execution"}, {"score": 0.003643185395780667, "phrase": "viable_low-cost_alternative"}, {"score": 0.0035183010916001664, "phrase": "important_but_commonly_ignored_aspect"}, {"score": 0.0030600032877646263, "phrase": "fault-free_performance"}, {"score": 0.0028113140998735366, "phrase": "prior_work"}, {"score": 0.0026217213613095322, "phrase": "in-core_faults"}, {"score": 0.0024941578231560055, "phrase": "dedicated_hardware"}, {"score": 0.0023609780669713288, "phrase": "exorbitant_overheads"}, {"score": 0.002337537183727731, "phrase": "hardware_buffering"}, {"score": 0.0022127018991294047, "phrase": "checkpoint_interval"}, {"score": 0.002168975681697056, "phrase": "practical_solution"}, {"score": 0.002136747803494932, "phrase": "high_resiliency"}, {"score": 0.0021049977753042253, "phrase": "low_overheads"}], "paper_keywords": ["Performance", " Reliability", " Hardware reliability", " fault tolerance", " I/O recovery"], "paper_abstract": "With continued process scaling, the rate of hardware failures in commodity systems is increasing. Because these commodity systems are highly sensitive to cost, traditional solutions that employ heavy redundancy to handle such failures are no longer acceptable owing to their high associated costs. Detecting such faults by identifying anomalous software execution and recovering through checkpoint-and-replay is emerging as a viable low-cost alternative for future commodity systems. An important but commonly ignored aspect of such solutions is ensuring that external outputs to the system are fault-free. The outputs must be delayed until the detectors guarantee this, influencing fault-free performance. The overheads for resiliency must thus be evaluated while taking these delays into consideration; prior work has largely ignored this relationship. This article concerns recovery for I/O intensive applications from in-core faults. We present a strategy to buffer external outputs using dedicated hardware and show that checkpoint intervals previously considered as acceptable incur exorbitant overheads when hardware buffering is considered. We then present two techniques to reduce the checkpoint interval and demonstrate a practical solution that provides high resiliency while incurring low overheads.", "paper_title": "Hardware Fault Recovery for I/O Intensive Applications", "paper_id": "WOS:000344830900011"}