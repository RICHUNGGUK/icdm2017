{"auto_keywords": [{"score": 0.03781977122883892, "phrase": "software_quality"}, {"score": 0.015719716506582524, "phrase": "software_structure"}, {"score": 0.004419703921314433, "phrase": "foundational_technique"}, {"score": 0.0043753813457279404, "phrase": "software_development"}, {"score": 0.004266501496765747, "phrase": "traditional_evaluation_criteria"}, {"score": 0.004160319763461951, "phrase": "high_cohesion"}, {"score": 0.004118587636081584, "phrase": "low_coupling"}, {"score": 0.003935892934907777, "phrase": "new_web_applications"}, {"score": 0.0037993970934472243, "phrase": "hierarchical_framework"}, {"score": 0.0037423521744765075, "phrase": "novel_approach"}, {"score": 0.003332440548684892, "phrase": "high_quality_software"}, {"score": 0.003282383509542342, "phrase": "functional_and_hierarchical_structure"}, {"score": 0.0031845067058084583, "phrase": "widely_used_web_applications"}, {"score": 0.0031366648074858555, "phrase": "cohesion_and_coupling_and_layer_matching_ratios"}, {"score": 0.0028355237433457313, "phrase": "functional_or_hierarchical_structure"}, {"score": 0.0026688629249775925, "phrase": "software_system"}, {"score": 0.0026155094974689595, "phrase": "structural_types"}, {"score": 0.0024742127558656803, "phrase": "struts"}, {"score": 0.0024493494346360415, "phrase": "six_open-source_software_packages"}, {"score": 0.0023405257495466352, "phrase": "minor_upgrades"}, {"score": 0.0022478501955483024, "phrase": "minor_functionality"}, {"score": 0.0021697677572213086, "phrase": "major_upgrades"}, {"score": 0.0021049977753042253, "phrase": "messy_code"}], "paper_keywords": ["software structure evaluation", " method interaction", " method encapsulation", " functional structure", " hierarchical structure"], "paper_abstract": "Software structure is the most important factor affecting the quality of a program. The evaluation of software structure is a foundational technique for software development. However, the traditional evaluation criteria, such as \"high cohesion and low coupling\", are no longer appropriate for the new web applications, which are designed with a hierarchical framework. A novel approach is proposed in this paper to evaluate software quality based on the interaction and encapsulation of methods. In particular, two criteria for high quality software, the functional and hierarchical structure, are proposed to support widely used web applications. The cohesion and coupling and layer matching ratios between methods within a software package are calculated to determine whether the package is well implemented in terms of functional or hierarchical structure. This approach enables us to quantify the quality of a software system according to the structural types of its packages. Experiments were carried out on 18 versions of Struts and six open-source software packages. Our evaluation concurs with the intuition that minor upgrades, aimed at fixing bugs and adding minor functionality quickly, reduce software quality, whereas major upgrades, which normally clean up messy code and re-construct the software, improve software quality.", "paper_title": "Software structure evaluation based on the interaction and encapsulation of methods", "paper_id": "WOS:000312884300011"}