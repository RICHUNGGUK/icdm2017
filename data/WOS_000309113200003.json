{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "new_decimal_redundant_cordic_algorithm"}, {"score": 0.004673290248999786, "phrase": "transcendental_functions"}, {"score": 0.004535778785493185, "phrase": "floating-point_representation"}, {"score": 0.0041469500929423595, "phrase": "elementary_rotation"}, {"score": 0.004065156038847781, "phrase": "sign_estimations"}, {"score": 0.003945467978172845, "phrase": "binary_redundant_cordic"}, {"score": 0.003500812175550438, "phrase": "novel_decimal_codes"}, {"score": 0.0032975819773787985, "phrase": "sufficient_redundancy"}, {"score": 0.002925728709297618, "phrase": "low-cost_unit"}, {"score": 0.002595698433525986, "phrase": "floating-point_decimal_division_unit"}, {"score": 0.0024941578231560055, "phrase": "current_decimal_floating-point_units"}, {"score": 0.0023259039577313294, "phrase": "minor_modifications"}, {"score": 0.0022573076362326135, "phrase": "native_hardware"}, {"score": 0.0021474369836979048, "phrase": "huge_set"}, {"score": 0.0021049977753042253, "phrase": "elementary_functions"}], "paper_keywords": ["CORDIC algorithm", " decimal arithmetic", " carry-save arithmetic"], "paper_abstract": "In this work, we propose a new decimal redundant CORDIC algorithm to manage transcendental functions, using floating-point representation. The algorithms determine the direction of the elementary rotation using sign estimations. Unlike binary redundant CORDIC, repetition of iterations are not required to ensure convergence since novel decimal codes have been carefully selected with sufficient redundancy to prevent any repetition. The algorithms are mapped to a low-cost unit based on a decimal 3-2 carry-save adder which can also be used as a floating-point decimal division unit. Compared to current decimal floating-point units, the implementation of our algorithm involves minor modifications of the native hardware, while providing a huge set of elementary functions.", "paper_title": "Redundant Floating-Point Decimal CORDIC Algorithm", "paper_id": "WOS:000309113200003"}