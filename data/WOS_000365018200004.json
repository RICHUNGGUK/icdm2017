{"auto_keywords": [{"score": 0.03700385809508468, "phrase": "oracle_data"}, {"score": 0.00481495049065317, "phrase": "automated_oracle_data_selection_support"}, {"score": 0.004681525814235883, "phrase": "test_oracle"}, {"score": 0.004160177106153782, "phrase": "testing_process"}, {"score": 0.003910595307634916, "phrase": "test_input_selection"}, {"score": 0.00378080526397273, "phrase": "oracle_creation"}, {"score": 0.0036144035798673967, "phrase": "test_oracle_creation"}, {"score": 0.003303177222901723, "phrase": "expected_value_test_oracles"}, {"score": 0.0031223774204093713, "phrase": "mutation_analysis"}, {"score": 0.0030017207229983385, "phrase": "fault-finding_effectiveness"}, {"score": 0.0028373742057129126, "phrase": "experimental_results"}, {"score": 0.002743105561254975, "phrase": "six_industrial_systems"}, {"score": 0.0026971491199975083, "phrase": "varying_test_input_types"}, {"score": 0.0026222551419772867, "phrase": "generated_mutants"}, {"score": 0.0024926348205500715, "phrase": "test_inputs"}, {"score": 0.0023827927890399357, "phrase": "specific_structural_coverage_criteria"}, {"score": 0.0023166075278110237, "phrase": "cost-effective_approach"}, {"score": 0.0021896891011033105, "phrase": "current_industrial_best_practice"}, {"score": 0.0021049977753042253, "phrase": "typical_improvements"}], "paper_keywords": ["Testing", " test oracles", " oracle data", " oracle selection", " verification"], "paper_abstract": "The choice of test oracle-the artifact that determines whether an application under test executes correctly-can significantly impact the effectiveness of the testing process. However, despite the prevalence of tools that support test input selection, little work exists for supporting oracle creation. We propose a method of supporting test oracle creation that automatically selects the oracle data-the set of variables monitored during testing-for expected value test oracles. This approach is based on the use of mutation analysis to rank variables in terms of fault-finding effectiveness, thus automating the selection of the oracle data. Experimental results obtained by employing our method over six industrial systems (while varying test input types and the number of generated mutants) indicate that our method-when paired with test inputs generated either at random or to satisfy specific structural coverage criteria-may be a cost-effective approach for producing small, effective oracle data sets, with fault finding improvements over current industrial best practice of up to 1,435 percent observed (with typical improvements of up to 50 percent).", "paper_title": "Automated Oracle Data Selection Support", "paper_id": "WOS:000365018200004"}