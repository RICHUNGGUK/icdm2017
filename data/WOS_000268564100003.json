{"auto_keywords": [{"score": 0.04925367071541481, "phrase": "master-worker_applications"}, {"score": 0.00481495049065317, "phrase": "factoring_load_balancing"}, {"score": 0.004650330504968421, "phrase": "load_imbalance"}, {"score": 0.004375613460102577, "phrase": "main_causes"}, {"score": 0.004300133642951283, "phrase": "performance_shortcomings"}, {"score": 0.00367658459781873, "phrase": "distributed_parallel_loops"}, {"score": 0.0027104531025934865, "phrase": "simple_an_elegant_strategy"}, {"score": 0.0025279105573394727, "phrase": "excellent_automatic_and_dynamic_load_balancing_strategy"}, {"score": 0.0022967713922705, "phrase": "resulting_strategy"}, {"score": 0.002257070536352418, "phrase": "extensive_experimentation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Performance evaluation", " Distributed systems", " Load balancing"], "paper_abstract": "Load imbalance among workers is one of the main causes of performance shortcomings in Master-Worker applications. We have observed that this problem is very similar to the one of scheduling distributed parallel loops, which has been widely in the literature. Thus, we have adapted one of the most successful algorithms, known as Factoring, to be used for Master-Worker applications. This has leads to a simple an elegant strategy that can be used to obtain an excellent automatic and dynamic load balancing strategy for the workers. Finally, we have assessed the resulting strategy through extensive experimentation and simulation. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Task distribution using factoring load balancing in Master-Worker applications", "paper_id": "WOS:000268564100003"}