{"auto_keywords": [{"score": 0.01306944039023413, "phrase": "gcs"}, {"score": 0.00481495049065317, "phrase": "distributed_gradient_clock_synchronization_problem"}, {"score": 0.004742179945772899, "phrase": "traditional_distributed_clock_synchronization"}, {"score": 0.004565007074039171, "phrase": "hardware_clocks"}, {"score": 0.004530371221172796, "phrase": "bounded_drift"}, {"score": 0.004461882369408972, "phrase": "logical_clock_values"}, {"score": 0.004377719094086111, "phrase": "message_exchanges"}, {"score": 0.004230188765513944, "phrase": "nodes'_logical_clocks"}, {"score": 0.00405658135587089, "phrase": "new_feature"}, {"score": 0.004025787455454387, "phrase": "gradient_clock_synchronization"}, {"score": 0.0037446140218109895, "phrase": "nondecreasing_function"}, {"score": 0.003673930454794753, "phrase": "inessage_delay"}, {"score": 0.003391290302481397, "phrase": "nearby_nodes"}, {"score": 0.0032894118890753805, "phrase": "faraway_nodes"}, {"score": 0.0031542917620807093, "phrase": "traditional_clock_synchronization"}, {"score": 0.0030017207229983385, "phrase": "ad-hoc_networks"}, {"score": 0.00293380698353469, "phrase": "worst_case_clock"}, {"score": 0.0028783840417661694, "phrase": "distance_d"}, {"score": 0.002596653214530156, "phrase": "clock_synchronization"}, {"score": 0.002557322657104706, "phrase": "local_property"}, {"score": 0.002220551141101661, "phrase": "tdma_protocol"}, {"score": 0.0021952683716334478, "phrase": "fixed_slot_granularity"}, {"score": 0.0021049977753042253, "phrase": "maximum_degree"}], "paper_keywords": ["clock synchronization", " lower bounds", " indistinguishability", " ad-hoc networks"], "paper_abstract": "We introduce the distributed gradient clock synchronization problem. As in traditional distributed clock synchronization, we consider a network of nodes equipped with hardware clocks with bounded drift. Nodes compute logical clock values based on their hardware clocks and message exchanges, and the goal is to synchronize the nodes' logical clocks as closely as possible, while satisfying certain validity conditions. The new feature of gradient clock synchronization (GCS for short) is to require that the skew between any two nodes' logical clocks be bounded by a nondecreasing function of the uncertainty in inessage delay (call this the distance) between the two nodes, and other network parameters. That is, we require nearby nodes to be closely synchronized, and allow faraway nodes to be more loosely synchronized. We contrast GCS with traditional clock synchronization, and discuss several practical motivations for GCS, mostly arising in sensor and ad-hoc networks. Our main result is that the worst case clock skew between two nodes at distance d or less from each other is Omega (d+ log D/log log D) where D is the diameterl of the network. This means that clock synchronization is not a local property, in the sense that the clock skew between two nodes depends not only on the distance between the nodes, but also on the size of the network. Our lower bound implies, for example, that the TDMA protocol with a fixed slot granularity will fail as the network grows, even if the maximum degree of each node stays constant.", "paper_title": "Gradient clock synchronization", "paper_id": "WOS:000236108700003"}