{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gpu_accelerated"}, {"score": 0.004627944735913613, "phrase": "virtual_disassembly"}, {"score": 0.004575854901681043, "phrase": "previous_collision_detection_methods"}, {"score": 0.004373267443572639, "phrase": "discrete_time_intervals"}, {"score": 0.004275347843870176, "phrase": "oriented_bounding_boxes"}, {"score": 0.004039995317682942, "phrase": "discrete_methods"}, {"score": 0.0033511469200347907, "phrase": "subsequent_process"}, {"score": 0.0031308163228919773, "phrase": "real-time_collision_handling"}, {"score": 0.0030606302942851027, "phrase": "computational_power"}, {"score": 0.003026127736667187, "phrase": "modern_gpus"}, {"score": 0.0029249294679606656, "phrase": "novel_gpu-based_collision_handling_framework"}, {"score": 0.0027480831196871093, "phrase": "continuous_collision_detection"}, {"score": 0.0025819015229390663, "phrase": "triangle_intersection_detection_algorithm"}, {"score": 0.0022919762167777427, "phrase": "initial_configuration"}, {"score": 0.002253299769886694, "phrase": "experimental_results"}, {"score": 0.0021655683497137234, "phrase": "overall_performance"}, {"score": 0.002141134176057931, "phrase": "collision_detection"}, {"score": 0.0021049977753042253, "phrase": "real-time_simulation"}], "paper_keywords": ["GPU-based virtual disassembly", " continuous collision detection", " discrete collision detection", " collision handling"], "paper_abstract": "Previous collision detection methods for virtual disassembly mainly detect collisions at discrete time intervals, and use oriented bounding boxes to speed up the process. However, these discrete methods cannot guarantee no penetration occurs when the components move. Meanwhile, because some of the components are embedded into each other, these components cannot be separated in the subsequent process. To solve these problems, we propose an approach for real-time collision handling by utilizing the computational power of modern GPUs. First we present a novel GPU-based collision handling framework for virtual disassembly. Second we use a collision-streams based continuous collision detection to guarantee no collision missed. Finally we introduce a triangle intersection detection algorithm to solve the problem that collision cannot be detected when the components are embedded into each other at the initial configuration. The experimental results show that our method can improve the overall performance of collision detection and achieve real-time simulation.", "paper_title": "GPU Accelerated Real-Time Collision Handling in Virtual Disassembly", "paper_id": "WOS:000354101800008"}