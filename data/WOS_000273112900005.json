{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "referential_integrity_issues"}, {"score": 0.039282223508626896, "phrase": "referential_integrity_errors"}, {"score": 0.004754447398742591, "phrase": "inconsistent_databases"}, {"score": 0.004694700982410345, "phrase": "broad_and_difficult_problem"}, {"score": 0.004388450908826472, "phrase": "referential_errors"}, {"score": 0.004296889776409743, "phrase": "database_integration"}, {"score": 0.0042250123967577284, "phrase": "source_database"}, {"score": 0.004189523950071494, "phrase": "different_tables"}, {"score": 0.0041194351307673556, "phrase": "similar_content"}, {"score": 0.004084829853870028, "phrase": "multiple_databases"}, {"score": 0.003850566273995209, "phrase": "integrated_database"}, {"score": 0.0036759314172445934, "phrase": "data_warehouse"}, {"score": 0.003599182629885611, "phrase": "etl_processes"}, {"score": 0.0034504423179340738, "phrase": "\"dummy\"_records"}, {"score": 0.003407026489727146, "phrase": "dimension_tables"}, {"score": 0.0032938942910948066, "phrase": "referential_integrity"}, {"score": 0.003104849179057156, "phrase": "invalid_or_null_foreign_key_value"}, {"score": 0.003027178161479457, "phrase": "potentially_valuable_information"}, {"score": 0.0029020077365708966, "phrase": "sql_aggregate_functions"}, {"score": 0.002805597755796506, "phrase": "complete_answer_sets"}, {"score": 0.0026445028886931837, "phrase": "referenced_key"}, {"score": 0.0026112013707473938, "phrase": "dimension_table"}, {"score": 0.002556625752785268, "phrase": "invalid_or_null_foreign_keys"}, {"score": 0.0024405312482831646, "phrase": "joined_tables"}, {"score": 0.0023996317685956213, "phrase": "invalid_or_null_references"}, {"score": 0.002349467661235186, "phrase": "aggregation_totals"}, {"score": 0.002280990744438186, "phrase": "correct_foreign_keys"}, {"score": 0.002242758902593467, "phrase": "real_and_synthetic_databases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Aggregate functions", " Data quality", " Inconsistent databases", " Imprecision", " SQL"], "paper_abstract": "Querying inconsistent databases remains a broad and difficult problem. In this work, we study how to improve aggregations computed on databases with referential errors in the context of database integration, where each source database has different tables, columns with similar content across multiple databases. but different referential integrity constraints. Thus, a query in an integrated database may involve tables and columns with referential integrity errors. In a data warehouse, even though the ETL processes fix referential integrity errors, this is generally done by inserting \"dummy\" records into the dimension tables corresponding to such invalid foreign keys, thereby artificially enforcing referential integrity. When two tables are joined and aggregations are computed, rows with an invalid or null foreign key value are skipped, effectively eliminating potentially valuable information. With that motivation in mind, we extend SQL aggregate functions computed over tables with referential integrity issues to return complete answer sets in the sense that no row is excluded. We associate to each referenced key in the dimension table, a probability that invalid or null foreign keys refer to it. Our main idea is to compute aggregations over joined tables including rows with invalid or null references by distributing their contribution to aggregation totals, based on probabilities computed over correct foreign keys. Experiments with real and synthetic databases evaluate the usefulness, accuracy and performance of our extended aggregations. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Extended aggregations for databases with referential integrity issues", "paper_id": "WOS:000273112900005"}