{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mcnaughton_families"}, {"score": 0.047667240890459914, "phrase": "monadic_string-rewriting_systems"}, {"score": 0.02864039936811681, "phrase": "mcnaughton_family"}, {"score": 0.0037965243835456214, "phrase": "general_case"}, {"score": 0.003513264130359459, "phrase": "context-free_languages"}, {"score": 0.003405948098114941, "phrase": "confluent_systems"}, {"score": 0.003234299589505403, "phrase": "special_rules"}, {"score": 0.0031193028729331667, "phrase": "empty_right-hand_side"}, {"score": 0.002931569771634119, "phrase": "strictly_monadic_systems"}, {"score": 0.0028567126120064546, "phrase": "monadic_systems"}, {"score": 0.0028127163745564777, "phrase": "inverse_context-free_systems"}, {"score": 0.002740885774408238, "phrase": "generalized_monadic_systems"}, {"score": 0.002643386043540555, "phrase": "former_systems"}, {"score": 0.0024971144603069006, "phrase": "latter_systems"}, {"score": 0.0023467391904246834, "phrase": "former_family"}, {"score": 0.002286781334850213, "phrase": "inverse_alphabetic_morphisms"}, {"score": 0.002194011800331242, "phrase": "latter_family"}, {"score": 0.0021601997088758957, "phrase": "proper_subclass"}, {"score": 0.0021049977753042253, "phrase": "deterministic_context-free_languages"}], "paper_keywords": [""], "paper_abstract": "We study the McNaughton families of languages that are specified by four different variants of monadic string-rewriting systems: strictly monadic systems, monadic systems, inverse context-free systems, and generalized monadic systems. In the general case these four variants yield the same McNaughton family of languages, which coincides with the class of context-free languages. In the case of confluent systems, however, we obtain two McNaughton families by showing that special rules, that is, rules with empty right-hand side, are not needed. This implies that in this situation strictly monadic systems are as expressive as monadic systems, and inverse context-free systems are as expressive as generalized monadic systems. The McNaughton family defined by the former systems is contained in the McNaughton family that is defined by the latter systems, and this inclusion is proper if and only if the former family is not closed under inverse alphabetic morphisms. Finally, we show that the latter family is a proper subclass of the class of deterministic context-free languages.", "paper_title": "On McNaughton Families of Languages That Are Specified by Some Variants of Monadic String-Rewriting Systems", "paper_id": "WOS:000299977800007"}