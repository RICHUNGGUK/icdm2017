{"auto_keywords": [{"score": 0.04456021350650444, "phrase": "large-scale_continuous_optimization_problems"}, {"score": 0.03022084635258387, "phrase": "mmts"}, {"score": 0.00481495049065317, "phrase": "multi-trajectory_search"}, {"score": 0.004777214679969785, "phrase": "large-scale_optimization"}, {"score": 0.004665764181113345, "phrase": "self-adaptive_differential_evolution"}, {"score": 0.004503422625191897, "phrase": "jade_mutation_strategy"}, {"score": 0.00443308765153716, "phrase": "modified_multi-trajectory_search"}, {"score": 0.004329630571352367, "phrase": "sade-mmts"}, {"score": 0.003728000957725218, "phrase": "mutant_vectors"}, {"score": 0.0036697319652557363, "phrase": "mutation_phase"}, {"score": 0.003527998934981411, "phrase": "crossover_option"}, {"score": 0.0032864881371021657, "phrase": "sade"}, {"score": 0.003247868216333148, "phrase": "trial_vector_generation_strategies"}, {"score": 0.003073545175760353, "phrase": "promising_solutions"}, {"score": 0.0030254743224136273, "phrase": "suitable_offspring_generation_strategy"}, {"score": 0.0029899137403982027, "phrase": "associated_parameter_settings"}, {"score": 0.00290855128461017, "phrase": "different_phases"}, {"score": 0.0028743610212291727, "phrase": "search_process"}, {"score": 0.002763261749602258, "phrase": "different_search_stages"}, {"score": 0.0026148807877309417, "phrase": "step_sizes"}, {"score": 0.0025237171554924128, "phrase": "mmts_step"}, {"score": 0.002494039334114861, "phrase": "success_rates"}, {"score": 0.0023415390666563177, "phrase": "search_algorithms"}, {"score": 0.0021384748235753425, "phrase": "soft_computing"}, {"score": 0.0021049977753042253, "phrase": "evolutionary_algorithms"}], "paper_keywords": ["Differential evolution", " Large scale continuous optimization", " Self-adaptation", " Strategy adaptation", " Parameter adaptation", " Multi-trajectory search", " JADE mutation"], "paper_abstract": "In this paper, self-adaptive differential evolution (DE) is enhanced by incorporating the JADE mutation strategy and hybridized with modified multi-trajectory search (MMTS) algorithm (SaDE-MMTS) to solve large-scale continuous optimization problems. The JADE mutation strategy, the \"DE/current-to-pbest'' which is a variation of the classic \"DE/current-to-best'', is used for generating mutant vectors. After the mutation phase, the binomial (uniform) crossover, the exponential crossover as well as no crossover option are used to generate each pair of target and trial vectors. By utilizing the self-adaptation in SaDE, both trial vector generation strategies and their associated control parameter values are gradually self-adapted by learning from their previous experiences in generating promising solutions. Consequently, suitable offspring generation strategy along with associated parameter settings will be determined adaptively to match different phases of the search process. MMTS is applied frequently to refine several diversely distributed solutions at different search stages satisfying both the global and the local search requirement. The initialization of step sizes is also defined by a self-adaption during every MMTS step. The success rates of both SaDE and the MMTS are determined and compared; consequently, future function evaluations for both search algorithms are assigned proportionally to their recent past performance. The proposed SaDE-MMTS is employed to solve the 19 numerical optimization problems in special issue of soft computing on scalability of evolutionary algorithms for large-scale continuous optimization problems and competitive results are presented.", "paper_title": "Self-adaptive differential evolution with multi-trajectory search for large-scale optimization", "paper_id": "WOS:000297127200007"}