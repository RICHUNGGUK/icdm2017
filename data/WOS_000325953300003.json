{"auto_keywords": [{"score": 0.00481501413591532, "phrase": "reliable"}, {"score": 0.004537254814246843, "phrase": "reliable_workflow_scheduling"}, {"score": 0.004392565073466714, "phrase": "workflow_applications"}, {"score": 0.004345363360869553, "phrase": "heterogeneous_systems"}, {"score": 0.004028796143006953, "phrase": "np-complete_problems"}, {"score": 0.00385832528624328, "phrase": "specific_reliability_and_deadline_requirements"}, {"score": 0.0032278559855285945, "phrase": "reliability_analysis"}, {"score": 0.002992456421856031, "phrase": "reliability_requirement"}, {"score": 0.0029602552900111407, "phrase": "drr_algorithm"}, {"score": 0.0028502479839354637, "phrase": "deadline_requirement"}, {"score": 0.0026710653215026685, "phrase": "\"chain_effect"}, {"score": 0.0025717770066591076, "phrase": "task_execution_time_estimates"}, {"score": 0.002436289099444074, "phrase": "failure_estimation"}, {"score": 0.0023712394008737958, "phrase": "empirical_evaluation"}, {"score": 0.0022830706430588482, "phrase": "significant_amount"}, {"score": 0.002258485755625332, "phrase": "computation_and_communication_resources"}, {"score": 0.0022101055924375725, "phrase": "similar_reliability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Workflow Scheduling", " Reliability", " Redundancy", " Heterogeneous systems"], "paper_abstract": "We examine the problem of reliable workflow scheduling with less resource redundancy. As scheduling workflow applications in heterogeneous systems, either for optimizing the reliability or for minimizing the makespan, are NP-Complete problems, we alternatively find schedules for meeting specific reliability and deadline requirements. First, we analyze the reliability of a given schedule using two important definitions: Accumulated Processor Reliability (APR) and Accumulated Communication Reliability (ACR). Second, inspired by the reliability analysis, we present three scheduling algorithms: RR algorithm schedules least Resources to meet the Reliability requirement; DRR algorithm extends RR by further considering the Deadline requirement; and dynamic algorithm schedules tasks dynamically: It avoids the \"Chain effect\" caused by uncertainties on the task execution time estimates, and relieves the impact from the inaccuracy on failure estimation. Finally, the empirical evaluation shows that our algorithms can save a significant amount of computation and communication resources when performing a similar reliability compared to Fault-Tolerant-Scheduling-Algorithm (FTSA) algorithm. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Reliable workflow scheduling with less resource redundancy", "paper_id": "WOS:000325953300003"}