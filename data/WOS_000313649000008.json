{"auto_keywords": [{"score": 0.0342010001668746, "phrase": "graph_problems"}, {"score": 0.023865361951748196, "phrase": "shortest_s-t_path"}, {"score": 0.00481495049065317, "phrase": "graph_computations"}, {"score": 0.004717325943509345, "phrase": "helpful_advisor"}, {"score": 0.004405919996432158, "phrase": "commercial_cloud_computing_services"}, {"score": 0.00417160036938041, "phrase": "streaming_paradigm"}, {"score": 0.0040869663676860535, "phrase": "streaming_algorithm"}, {"score": 0.003922794571908569, "phrase": "powerful_helper"}, {"score": 0.0037395458116642306, "phrase": "data_stream"}, {"score": 0.0036386875640595944, "phrase": "previous_work"}, {"score": 0.003284026247389735, "phrase": "streaming_algorithms"}, {"score": 0.003173636240475185, "phrase": "significant_memory"}, {"score": 0.0028446460307503343, "phrase": "totally_unimodular_integer_programming_formulations"}, {"score": 0.002602555367635598, "phrase": "single-pass_algorithms_given_linear-sized_annotations"}, {"score": 0.002480826434008026, "phrase": "essentially_optimal_tradeoffs"}, {"score": 0.002447101794397243, "phrase": "annotation_length"}, {"score": 0.0023167153974120083, "phrase": "integer_matrix-vector_multiplication"}, {"score": 0.0022083264126633085, "phrase": "small-diameter_graphs"}, {"score": 0.0021340178074057245, "phrase": "non-trivial_tradeoffs"}, {"score": 0.0021049977753042253, "phrase": "minimum_weight_bipartite_perfect_matching"}], "paper_keywords": ["Streaming", " Delegation", " Cloud computing", " MA-communication complexity"], "paper_abstract": "Motivated by the trend to outsource work to commercial cloud computing services, we consider a variation of the streaming paradigm where a streaming algorithm can be assisted by a powerful helper that can provide annotations to the data stream. We extend previous work on such annotation models by considering a number of graph streaming problems. Without annotations, streaming algorithms for graph problems generally require significant memory; we show that for many standard problems, including all graph problems that can be expressed with totally unimodular integer programming formulations, only constant space (measured in words) is needed for single-pass algorithms given linear-sized annotations. We also obtain protocols achieving essentially optimal tradeoffs between annotation length and memory usage for several important problems, including integer matrix-vector multiplication, as well as shortest s-t path in small-diameter graphs. We also obtain non-trivial tradeoffs for minimum weight bipartite perfect matching and shortest s-t path in general graphs.", "paper_title": "Streaming Graph Computations with a Helpful Advisor", "paper_id": "WOS:000313649000008"}