{"auto_keywords": [{"score": 0.049566500278869, "phrase": "computational_fluid_dynamics"}, {"score": 0.014668162096264821, "phrase": "early_stage"}, {"score": 0.013613162902167754, "phrase": "computational_fluid_dynamics_models"}, {"score": 0.008479223811297688, "phrase": "evolving_blocks_algorithm"}, {"score": 0.00481495049065317, "phrase": "creative_design"}, {"score": 0.004789105805595663, "phrase": "fluid_systems"}, {"score": 0.004661938724774664, "phrase": "conceptual_design_stage"}, {"score": 0.004636911517556731, "phrase": "product_development"}, {"score": 0.004587257596576765, "phrase": "lengthy_computation_times"}, {"score": 0.004538132965602751, "phrase": "complex_computational_fluid_dynamics_models"}, {"score": 0.004465426224845726, "phrase": "design_options"}, {"score": 0.004405723948608186, "phrase": "significant_changes"}, {"score": 0.004335129332699343, "phrase": "updated_solutions"}, {"score": 0.004107848907565576, "phrase": "analysis_tools"}, {"score": 0.00395585199280152, "phrase": "creative_engineering_design"}, {"score": 0.0038924376662459424, "phrase": "novel_method"}, {"score": 0.0037787965734501763, "phrase": "engineering_design_process"}, {"score": 0.0037483813086134376, "phrase": "key_aspects"}, {"score": 0.003728240083633891, "phrase": "analysis_models"}, {"score": 0.003551752939997457, "phrase": "altered_model"}, {"score": 0.0034294909626243065, "phrase": "entire_altered_model"}, {"score": 0.003320360087169083, "phrase": "significant_amount"}, {"score": 0.0032759168467374053, "phrase": "entire_domain"}, {"score": 0.0029729578703205453, "phrase": "bulk_characteristics"}, {"score": 0.0028783125147910983, "phrase": "design_process"}, {"score": 0.002809305540570528, "phrase": "large-scale_behavior"}, {"score": 0.002786671812199566, "phrase": "fluid_flow"}, {"score": 0.00277168377634575, "phrase": "fine_details"}, {"score": 0.0026618065353009, "phrase": "turnaround_time"}, {"score": 0.0026120278905601693, "phrase": "computational_fluid_dynamics_model"}, {"score": 0.0025425219605190725, "phrase": "genetic_programming-based_optimization_program"}, {"score": 0.0024549151475552187, "phrase": "simple_flow_dynamics"}, {"score": 0.0023322628488025325, "phrase": "combined_segregation_scheme"}, {"score": 0.0023197131534778417, "phrase": "solver_placement"}, {"score": 0.0022579680942469236, "phrase": "solution_times"}, {"score": 0.0021221066364072766, "phrase": "single-model_solution"}, {"score": 0.0021049977753042253, "phrase": "significant_loss"}], "paper_keywords": ["Computational fluid dynamics", " Evolutionary computation", " Genetic programming", " Multi-solver", " Optimization", " Design"], "paper_abstract": "Computational fluid dynamics is not often used early in the conceptual design stage of product development due to the lengthy computation times involved with solving complex computational fluid dynamics models. At this early stage, design options are being explored and significant changes are common, and therefore updated solutions must be found quickly to make these models effective. Because of this, computational fluid dynamics models are often reduced to analysis tools used later in the process and are used for refinement rather than for creative engineering design. This paper presents a novel method to create computational fluid dynamics models that can be used earlier in the engineering design process. The key aspects of analysis models used in the initial, creative phase of design are the ability to make changes and re-analyze the altered model quickly. Typically, computational fluid dynamics analysts choose to re-analyze the entire altered model to maintain the same level of accuracy. This can take a significant amount of time because the entire domain must be recalculated. Much of this time is devoted to fine-tuning the model, i.e., improving the accuracy of details of the domain that are sometimes non-essential to the bulk characteristics of the flowfield. However, in the early stage of the design process, decisions are often made based on the large-scale behavior of the fluid flow; fine details are often inconsequential. We have taken advantage of this premise to decrease the turnaround time required to re-analyze a computational fluid dynamics model using the Adaptive Modeling by Evolving Blocks Algorithm. The Adaptive Modeling by Evolving Blocks Algorithm is a genetic programming-based optimization program that segregates a flowfield and places minimal cost solvers in regions with simple flow dynamics while placing full-scale computational fluid dynamics solvers in the more complex regions to preserve accuracy. The program evolves the combined segregation scheme and solver placement until a reliably accurate, faster multi-solver model is found. Substantial reductions in solution times have been found in some cases. The results show an improvement in the speed of the multi-solver when compared with a single-model solution with no significant loss of accuracy.", "paper_title": "A novel engineering tool for creative design of fluid systems", "paper_id": "WOS:000329241000002"}