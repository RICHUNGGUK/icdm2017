{"auto_keywords": [{"score": 0.04853583542060624, "phrase": "system_f"}, {"score": 0.04432874351868407, "phrase": "f_omega"}, {"score": 0.03454205138659384, "phrase": "kind_polymorphic_terms"}, {"score": 0.00481495049065317, "phrase": "girard's_system_u."}, {"score": 0.004745366051347356, "phrase": "pfenning"}, {"score": 0.004711318415341238, "phrase": "lee"}, {"score": 0.004592427776766215, "phrase": "typed_self-interpreter"}, {"score": 0.004460609967916904, "phrase": "system_f_\""}, {"score": 0.004057670872363875, "phrase": "kind_polymorphism"}, {"score": 0.0039268117782861696, "phrase": "rendel"}, {"score": 0.0038983082695646693, "phrase": "ostermann"}, {"score": 0.0038700499770282027, "phrase": "hofer"}, {"score": 0.003786337629480068, "phrase": "kind-polymorphic_terms"}, {"score": 0.003611179715045633, "phrase": "infinite_regress"}, {"score": 0.0034692911858848893, "phrase": "typed_self-representation"}, {"score": 0.0034440966820590024, "phrase": "girard's_system_u"}, {"score": 0.0033451289921748407, "phrase": "decidable_type_checking"}, {"score": 0.003320833167729157, "phrase": "system_u"}, {"score": 0.003296713221268488, "phrase": "system_f_omega"}, {"score": 0.0031903162513050804, "phrase": "kind_polymorphic_types"}, {"score": 0.0024625698287060586, "phrase": "intensional_structure"}, {"score": 0.0022561645318747124, "phrase": "cps"}, {"score": 0.002128169201317242, "phrase": "typed_languages"}], "paper_keywords": ["Languages", " Theory", " Lambda Calculus", " Self Representation", " Types"], "paper_abstract": "In 1991, Pfenning and Lee studied whether System F could support a typed self-interpreter. They concluded that typed self-representation for System F \"seems to be impossible\", but were able to represent System F in F omega. Further, they found that the representation of F omega requires kind polymorphism, which is outside F omega. In 2009, Rendel, Ostermann and Hofer conjectured that the representation of kind-polymorphic terms would require another, higher form of polymorphism. Is this a case of infinite regress? We show that it is not and present a typed self-representation for Girard's System U, the first for a lambda-calculus with decidable type checking. System U extends System F omega with kind polymorphic terms and types. We show that kind polymorphic types (i.e. types that depend on kinds) are sufficient to \"tie the knot\" - they enable representations of kind polymorphic terms without introducing another form of polymorphism. Our self-representation supports operations that iterate over a term, each of which can be applied to a representation of itself. We present three typed self-applicable operations: a self-interpreter that recovers a term from its representation, a predicate that tests the intensional structure of a term, and a typed continuation-passing-style (CPS) transformation - the first typed self-applicable CPS transformation. Our techniques could have applications from verifiably type-preserving metaprograms, to growable typed languages, to more efficient self-interpreters.", "paper_title": "Self-Representation in Girard's System U", "paper_id": "WOS:000354800500037"}