{"auto_keywords": [{"score": 0.048992899974696226, "phrase": "delaunay_triangulation"}, {"score": 0.00481495049065317, "phrase": "imprecise_points"}, {"score": 0.003961330917648707, "phrase": "set_p"}, {"score": 0.0034911335714333507, "phrase": "input_regions"}, {"score": 0.003221316290858497, "phrase": "recent_work"}, {"score": 0.0031481164109237636, "phrase": "loffler"}, {"score": 0.00307657476125683, "phrase": "snoeyink"}, {"score": 0.002680114113899346, "phrase": "faster_delaunay_computation"}, {"score": 0.002530359917257626, "phrase": "fancy_machinery"}, {"score": 0.0023889533502525527, "phrase": "wide_variety"}, {"score": 0.0021539955106204354, "phrase": "different_sizes"}, {"score": 0.0021049977753042253, "phrase": "fat_regions"}], "paper_keywords": ["Delaunay triangulation", " Data imprecision", " Quadtree"], "paper_abstract": "Suppose we want to compute the Delaunay triangulation of a set P whose points are restricted to a collection a\"> of input regions known in advance. Building on recent work by Loffler and Snoeyink, we show how to leverage our knowledge of a\"> for faster Delaunay computation. Our approach needs no fancy machinery and optimally handles a wide variety of inputs, e.g., overlapping disks of different sizes and fat regions.", "paper_title": "Preprocessing Imprecise Points for Delaunay Triangulation: Simplified and Extended", "paper_id": "WOS:000293962400008"}