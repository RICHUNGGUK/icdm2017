{"auto_keywords": [{"score": 0.048890872801774475, "phrase": "ncc"}, {"score": 0.03922368461822236, "phrase": "novel_methods"}, {"score": 0.03483894236450602, "phrase": "rnd"}, {"score": 0.015719668014583632, "phrase": "variable_data_rate"}, {"score": 0.010682689339724025, "phrase": "frq"}, {"score": 0.00908033107701604, "phrase": "network_utilization"}, {"score": 0.00478479690198388, "phrase": "vdr"}, {"score": 0.004219663341808313, "phrase": "proposed_methods"}, {"score": 0.00411487907113509, "phrase": "combined_random-innerloop_frequency-outerloop"}, {"score": 0.0040379950810436995, "phrase": "combined_frequency-innerloop_random-outerloop"}, {"score": 0.003962541905291554, "phrase": "generic_model"}, {"score": 0.003913021620260308, "phrase": "rnd_drop"}, {"score": 0.0038762863757919237, "phrase": "congestion_avoidance_methods"}, {"score": 0.003756298824153418, "phrase": "intermediate_network_nodes"}, {"score": 0.0036976999184012535, "phrase": "data_priority_values"}, {"score": 0.003640011825552854, "phrase": "first_step"}, {"score": 0.003571968614903263, "phrase": "stronger_and_efficient_router_technology"}, {"score": 0.0035384237846107793, "phrase": "quality_of_service"}, {"score": 0.003483211883149014, "phrase": "voice_applications"}, {"score": 0.0033647490935899134, "phrase": "frq_method"}, {"score": 0.0032096540059468426, "phrase": "bandwidth_limited_threshold"}, {"score": 0.0031695126964559235, "phrase": "mean_opinion_score"}, {"score": 0.0030044208366869205, "phrase": "mos_scale"}, {"score": 0.002957516535697149, "phrase": "crfrq"}, {"score": 0.0029113423551788264, "phrase": "tested_scenarios"}, {"score": 0.0028930745799089683, "phrase": "cfrnd"}, {"score": 0.002856881200879377, "phrase": "similar_manner"}, {"score": 0.002699518198352191, "phrase": "rnd_method"}, {"score": 0.0026241089938360634, "phrase": "possible_outcomes"}, {"score": 0.0025750071068101356, "phrase": "computational_complexity"}, {"score": 0.0024254832239892017, "phrase": "traditional_lossy_compression_methods"}, {"score": 0.0023951255255435272, "phrase": "fft_operations"}, {"score": 0.0023429088315910585, "phrase": "lossy_voice_coders"}, {"score": 0.0023208797258260283, "phrase": "speex"}, {"score": 0.0022489295919084643, "phrase": "real-time_transport_protocol"}, {"score": 0.0021929755499482174, "phrase": "simulation_results"}, {"score": 0.0021723527926629234, "phrase": "network_congestion_control_methods"}, {"score": 0.0021587119099287337, "phrase": "higher_mos_scores"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["VoIP", " MOS", " QoS", " Speech", " Network congestion control", " Variable data rate"], "paper_abstract": "This paper presents three novel methods for implementing variable data rate (VDR) network congestion control (NCC), and compares them with traditional random (RND) drop methods. The proposed methods include: frequency (FRQ), combined random-innerloop frequency-outerloop (CRFRQ), and combined frequency-innerloop random-outerloop (CFRND). A generic model is used for RND drop that approximates congestion avoidance methods that drop packets. These methods allow NCC at intermediate network nodes using novel methods for setting data priority values. This is a first step towards demonstrating the need for stronger and efficient router technology to enhance Quality of Service (QoS) for voice applications. In the examples considered in this paper, the FRQ method reduced outage from 60% with RND to 0% with FRQ with 5 incoming flows through a bandwidth limited threshold of 1000 bits. Mean Opinion Score (MOS) was increased by a factor in the range from 0.2 to 1 on the MOS scale when using FRQ and CRFRQ over RND in the tested scenarios. CFRND performs in a similar manner to RND except it allows packet shrinking to increase network utilization. Network utilization increased by up to 37.5% over the RND method compared with the novel methods in one example where all possible outcomes for RND were analyzed. Computational complexity with the novel methods can yield a speedup from 0.02 ms faster for 1 flow to 0.56 ms faster for 10 flows over traditional lossy compression methods that rely on FFT operations. which are commonly found in lossy voice coders such as Speex. MELPe, and others. Finally, live real-time transport protocol (RTP) congestion tests were performed which confirmed the simulation results that the network congestion control methods achieve higher MOS scores and better QoS. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Variable data rate (VDR) network congestion control (NCC) applied to voice/audio communication", "paper_id": "WOS:000302760600013"}