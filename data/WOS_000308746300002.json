{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pedigree_graphs"}, {"score": 0.035479698847890914, "phrase": "pedigree_isomorphism_problem"}, {"score": 0.03403112053370178, "phrase": "leaf-labeled_pedigrees"}, {"score": 0.03309727757176553, "phrase": "pedigree_edit_distance_problem"}, {"score": 0.0047013405841819025, "phrase": "family_trees"}, {"score": 0.004546755482549647, "phrase": "expensive_process"}, {"score": 0.004482063543727601, "phrase": "genealogical_records"}, {"score": 0.00409310463335204, "phrase": "input_genetic_data"}, {"score": 0.003996458454723708, "phrase": "extant_individuals"}, {"score": 0.003939565240409143, "phrase": "ancestral_individuals"}, {"score": 0.0038465304237380125, "phrase": "great_need"}, {"score": 0.0036494864560524735, "phrase": "estimated_pedigree"}, {"score": 0.003597514862052876, "phrase": "true_pedigree"}, {"score": 0.003253791343615811, "phrase": "linear-time_algorithm"}, {"score": 0.002661474607275484, "phrase": "general_graph_isomorphism_problem"}, {"score": 0.002598543802992702, "phrase": "sub-pedigree_isomorphism_problem"}, {"score": 0.0022834993174767016, "phrase": "simulated_pedigrees"}, {"score": 0.0021560018573288666, "phrase": "branch-and-bound_algorithm"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution"}], "paper_keywords": ["algorithms", " pedigrees", " hardness"], "paper_abstract": "Pedigree graphs, or family trees, are typically constructed by an expensive process of examining genealogical records to determine which pairs of individuals are parent and child. New methods to automate this process take as input genetic data from a set of extant individuals and reconstruct ancestral individuals. There is a great need to evaluate the quality of these methods by comparing the estimated pedigree to the true pedigree. In this article, we consider two main pedigree comparison problems. The first is the pedigree isomorphism problem, for which we present a linear-time algorithm for leaf-labeled pedigrees. The second is the pedigree edit distance problem, for which we present (1) several algorithms that are fast and exact in various special cases, and (2) a general, randomized heuristic algorithm. In the negative direction, we first prove that the pedigree isomorphism problem is as hard as the general graph isomorphism problem, and that the sub-pedigree isomorphism problem is NP-hard. We then show that the pedigree edit distance problem is APX-hard in general and NP-hard on leaf-labeled pedigrees. We use simulated pedigrees to compare our edit-distance algorithms to each other as well as to a branch-and-bound algorithm that always finds an optimal solution.", "paper_title": "Comparing Pedigree Graphs", "paper_id": "WOS:000308746300002"}