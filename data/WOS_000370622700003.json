{"auto_keywords": [{"score": 0.04846792924157254, "phrase": "correlated_component_failures"}, {"score": 0.03795733986962976, "phrase": "component_failures"}, {"score": 0.00481495049065317, "phrase": "architecture-based_software"}, {"score": 0.004607686390487483, "phrase": "high_reliability"}, {"score": 0.004518442937844318, "phrase": "essential_attributes"}, {"score": 0.004474468584252318, "phrase": "software_systems"}, {"score": 0.004409304640026443, "phrase": "critical_real-time_applications"}, {"score": 0.004077394032903726, "phrase": "fault_recovery_mechanism"}, {"score": 0.003998380230709541, "phrase": "contemporary_models"}, {"score": 0.003959447096055027, "phrase": "software_reliability"}, {"score": 0.0038448988429199086, "phrase": "fault_recovery_mechanisms"}, {"score": 0.0037888687452790953, "phrase": "notable_shortcoming"}, {"score": 0.0036434002236454305, "phrase": "simplifying_assumption"}, {"score": 0.0033361232750221863, "phrase": "software_components"}, {"score": 0.003192312493850036, "phrase": "architecture-based_model"}, {"score": 0.0030397596289795143, "phrase": "two-stage_fault_recovery_mechanism"}, {"score": 0.002966230968271199, "phrase": "application-level_retries"}, {"score": 0.0029229677574293725, "phrase": "application_architecture"}, {"score": 0.002852256089630964, "phrase": "discrete_time_markov_chain"}, {"score": 0.0027561164046279413, "phrase": "dynamic_branching_behavior"}, {"score": 0.002523481637809674, "phrase": "efficient_numerical_algorithm"}, {"score": 0.002356173823922118, "phrase": "case_study"}, {"score": 0.002321787726770895, "phrase": "embedded_software_application"}, {"score": 0.002146676231930343, "phrase": "software_fault_recovery"}, {"score": 0.0021049977753042253, "phrase": "application_reliability"}], "paper_keywords": ["Software architecture", " software reliability", " software performance", " software recovery mechanisms", " correlated component failure"], "paper_abstract": "High reliability and performance are essential attributes of software systems designed for critical real-time applications. To improve the reliability and performance of software, many systems incorporate some form of fault recovery mechanism. However, contemporary models of software reliability and performance rarely consider these fault recovery mechanisms. Another notable shortcoming of many software models is that they make the simplifying assumption that component failures are statistically independent, which disagrees with several experimental studies that have shown that the failures of software components can exhibit correlation. This paper presents an architecture-based model of software reliability and performance that explicitly considers a two-stage fault recovery mechanism implementing component restarts and application-level retries. The application architecture is characterized by a Discrete Time Markov Chain (DTMC) to represent the dynamic branching behavior of control between the components of the application. Correlations between the component failures are computed with an efficient numerical algorithm for a multivariate Bernoulli (MVB) distribution. We illustrate the utility of the model through a case study of an embedded software application. The results suggest that the model can be used to quantify the impact of software fault recovery and correlated component failures on application reliability and performance.", "paper_title": "Reliability and Performance Analysis of Architecture-Based Software Implementing Restarts and Retries Subject to Correlated Component Failures", "paper_id": "WOS:000370622700003"}