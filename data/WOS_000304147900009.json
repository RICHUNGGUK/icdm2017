{"auto_keywords": [{"score": 0.04406462037614954, "phrase": "mac"}, {"score": 0.037650280669234266, "phrase": "tracer"}, {"score": 0.00481495049065317, "phrase": "mandatory_access_control"}, {"score": 0.004767546015485477, "phrase": "commodity_os"}, {"score": 0.004339744430169516, "phrase": "promising_approach"}, {"score": 0.00427578268550103, "phrase": "firmest_barriers"}, {"score": 0.004150661689086371, "phrase": "malware_programs"}, {"score": 0.004089475312474684, "phrase": "incompatible_and_unusable_problems"}, {"score": 0.0040491842732233154, "phrase": "existing_mac_systems"}, {"score": 0.0036312482387007815, "phrase": "novel_mac_enforcement_approach"}, {"score": 0.003507504253087326, "phrase": "intrusion_detection"}, {"score": 0.003421697038352743, "phrase": "commercial_operating_system"}, {"score": 0.003176626803985225, "phrase": "suspected_intruders"}, {"score": 0.003068327486877065, "phrase": "light-weight_intrusion_detection"}, {"score": 0.0029784342137867776, "phrase": "security_label_configuration"}, {"score": 0.0028768722873689432, "phrase": "tough_issue"}, {"score": 0.0028203950416405563, "phrase": "mac_system"}, {"score": 0.002657511557782469, "phrase": "information_flow"}, {"score": 0.002618278365749875, "phrase": "traditional_mac"}, {"score": 0.0023947191132328233, "phrase": "potential_agents"}, {"score": 0.0023593563827190626, "phrase": "remote_attacker"}, {"score": 0.0022903522628890415, "phrase": "windows"}, {"score": 0.0022010965931147735, "phrase": "malware_samples"}, {"score": 0.002157857111130435, "phrase": "malware_behaviors"}, {"score": 0.0021049977753042253, "phrase": "significant_compatibility_problem"}], "paper_keywords": ["Access controls", " operating system", " invasive software", " OS-level information flow"], "paper_abstract": "Enforcing a practical Mandatory Access Control (MAC) in a commercial operating system to tackle malware problem is a grand challenge but also a promising approach. The firmest barriers to apply MAC to defeat malware programs are the incompatible and unusable problems in existing MAC systems. To address these issues, we manually analyze 2,600 malware samples one by one and two types of MAC enforced operating systems, and then design a novel MAC enforcement approach, named Tracer, which incorporates intrusion detection and tracing in a commercial operating system. The approach conceptually consists of three actions: detecting, tracing, and restricting suspected intruders. One novelty is that it leverages light-weight intrusion detection and tracing techniques to automate security label configuration that is widely acknowledged as a tough issue when applying a MAC system in practice. The other is that, rather than restricting information flow as a traditional MAC does, it traces intruders and restricts only their critical malware behaviors, where intruders represent processes and executables that are potential agents of a remote attacker. Our prototyping and experiments on Windows show that Tracer can effectively defeat all malware samples tested via blocking malware behaviors while not causing a significant compatibility problem.", "paper_title": "Enforcing Mandatory Access Control in Commodity OS to Disable Malware", "paper_id": "WOS:000304147900009"}