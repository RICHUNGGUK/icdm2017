{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "operator_precedence_languages"}, {"score": 0.004652963867892925, "phrase": "robert_floyd"}, {"score": 0.004585212379675535, "phrase": "deterministic_and_efficient_parsing"}, {"score": 0.004540591176992658, "phrase": "context-free_languages"}, {"score": 0.003959447096055027, "phrase": "parallel_and_incremental_parsing"}, {"score": 0.0038074544783102226, "phrase": "automatic_verification_techniques"}, {"score": 0.0037519679864796906, "phrase": "model_checking"}, {"score": 0.0036079110889031874, "phrase": "fairly_complete_theory"}, {"score": 0.003303617297414837, "phrase": "generative_power"}, {"score": 0.003099888654615187, "phrase": "monadic_second-order_logic"}, {"score": 0.0030101325901285537, "phrase": "previous_literature"}, {"score": 0.0028662606272282926, "phrase": "input-driven_ones"}, {"score": 0.0027159094186967247, "phrase": "language_sentences"}, {"score": 0.002689430273401131, "phrase": "finite_length"}, {"score": 0.002663208600887875, "phrase": "infinite_length"}, {"score": 0.0024264776194357993, "phrase": "nice_properties"}, {"score": 0.0024028135317872, "phrase": "regular_languages"}], "paper_keywords": ["operator precedence", " visibly pushdown languages", " monadic second-order logic", " omega-languages"], "paper_abstract": "Operator precedence languages were introduced half a century ago by Robert Floyd to support deterministic and efficient parsing of context-free languages. Recently, we renewed our interest in this class of languages thanks to a few distinguishing properties that make them attractive for exploiting various modern technologies. Precisely, their local parsability enables parallel and incremental parsing, whereas their closure properties make them amenable to automatic verification techniques, including model checking. In this paper we provide a fairly complete theory of this class of languages: we introduce a class of automata with the same recognizing power as the generative power of their grammars; we provide a characterization of their sentences in terms of monadic second-order logic as has been done in previous literature for more restricted language classes such as regular, parenthesis, and input-driven ones; we investigate preserved and lost properties when extending the language sentences from finite length to infinite length (omega-languages). As a result, we obtain a class of languages that enjoys many of the nice properties of regular languages (closure and decidability properties, logic characterization) but is considerably larger than other families-typically parenthesis and input-driven ones-with the same properties, covering \"almost\" all deterministic languages.", "paper_title": "OPERATOR PRECEDENCE LANGUAGES: THEIR AUTOMATA-THEORETIC AND LOGIC CHARACTERIZATION", "paper_id": "WOS:000360654100006"}