{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_flow_integrity"}, {"score": 0.0044277810648955624, "phrase": "runtime_data_flow"}, {"score": 0.0034016119212097826, "phrase": "formal_foundation"}, {"score": 0.003321008590273796, "phrase": "dfi_specification"}, {"score": 0.002841545331522694, "phrase": "enforcement_techniques"}, {"score": 0.002708399936381754, "phrase": "static_analysis"}, {"score": 0.002644179117033107, "phrase": "program_monitoring"}, {"score": 0.0023451553255837317, "phrase": "practical_satisfaction"}, {"score": 0.0022895295914797144, "phrase": "dfi"}, {"score": 0.0021049977753042253, "phrase": "applied_platform"}], "paper_keywords": ["data flow analysis", " data flow integrity", " reference monitor", " security policy", " dynamic enforcement"], "paper_abstract": "Subverting runtime data flow is common in many current software attacks. Data Flow Integrity (DFI) is a policy whose satisfaction can prevent such attacks. This paper develops a formal foundation on DFI specification, and characteristics of its enforcement techniques with formulations of hypotheses and guarantees. Enforcement techniques are based on static analysis and program monitoring at runtime. This foundation can be used for practical satisfaction of DFI and help establish guarantees in every applied platform.", "paper_title": "Principles of Data Flow Integrity: Specification and Enforcement", "paper_id": "WOS:000351401300010"}