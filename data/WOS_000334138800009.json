{"auto_keywords": [{"score": 0.03174883816485077, "phrase": "experimental_results"}, {"score": 0.00481495049065317, "phrase": "open_flow"}, {"score": 0.004733791336312872, "phrase": "effective_and_scalable_anomaly_detection"}, {"score": 0.004653993775422955, "phrase": "sdn_environments"}, {"score": 0.004622450915803531, "phrase": "software_defined_networks"}, {"score": 0.004437613070853689, "phrase": "export_control-plane_programmability"}, {"score": 0.004260134699483774, "phrase": "traffic_management"}, {"score": 0.004034444399739595, "phrase": "specific_flows"}, {"score": 0.0037947482487057076, "phrase": "efficient_and_scalable_mechanism"}, {"score": 0.0037562016088622447, "phrase": "anomaly_detection"}, {"score": 0.003705412219296983, "phrase": "sdn_architectures"}, {"score": 0.003680274684654909, "phrase": "flow_statistics"}, {"score": 0.0036058769733410614, "phrase": "large_scale_malicious_events"}, {"score": 0.0035571129372263532, "phrase": "distributed_denial_of_service"}, {"score": 0.0034497831301482144, "phrase": "mitigation_policies"}, {"score": 0.0033229756875116597, "phrase": "statistics_collection_and_processing_overloads_the_centralized_control_plane"}, {"score": 0.0032008144731234265, "phrase": "modular_architecture"}, {"score": 0.0031360786664165093, "phrase": "data_collection_process"}, {"score": 0.003104201872147936, "phrase": "sdn_control_plane"}, {"score": 0.003051790083321992, "phrase": "sflow_monitoring_data"}, {"score": 0.0028997895009747502, "phrase": "standard_flow_table_statistics"}, {"score": 0.0028218336994432864, "phrase": "entropy-based_method"}, {"score": 0.0028026735035370206, "phrase": "high_volume_real_network_traffic_data"}, {"score": 0.002764741440770032, "phrase": "university_campus_network"}, {"score": 0.0027366287564324966, "phrase": "packet_traces"}, {"score": 0.002618064695883912, "phrase": "flow-based_data-gathering"}, {"score": 0.0024707163158758307, "phrase": "proposed_sflow-based_mechanism"}, {"score": 0.002339601774631419, "phrase": "system_resources"}, {"score": 0.0022535101994966907, "phrase": "network_anomaly"}, {"score": 0.0021484955960643167, "phrase": "flow_table_modifications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software Defined Networking", " SDN", " OpenFlow", " sFlow", " Anomaly detection", " Attack mitigation"], "paper_abstract": "Software Defined Networks (SDNs) based on the OpenFlow (OF) protocol export control-plane programmability of switched substrates. As a result, rich functionality in traffic management, load balancing, routing, firewall configuration, etc. that may pertain to specific flows they control, may be easily developed. In this paper we extend these functionalities with an efficient and scalable mechanism for performing anomaly detection and mitigation in SDN architectures. Flow statistics may reveal anomalies triggered by large scale malicious events (typically massive Distributed Denial of Service attacks) and subsequently assist networked resource owners/operators to raise mitigation policies against these threats. First, we demonstrate that OF statistics collection and processing overloads the centralized control plane, introducing scalability issues. Second, we propose a modular architecture for the separation of the data collection process from the SDN control plane with the employment of sFlow monitoring data. We then report experimental results that compare its performance against native OF approaches that use standard flow table statistics. Both alternatives are evaluated using an entropy-based method on high volume real network traffic data collected from a university campus network. The packet traces were fed to hardware and software OF devices in order to assess flow-based data-gathering and related anomaly detection options. We subsequently present experimental results that demonstrate the effectiveness of the proposed sFlow-based mechanism compared to the native OF approach, in terms of overhead imposed on usage of system resources. Finally, we conclude by demonstrating that once a network anomaly is detected and identified, the OF protocol can effectively mitigate it via flow table modifications. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Combining Open Flow and sFlow for an effective and scalable anomaly detection and mitigation mechanism on SDN environments", "paper_id": "WOS:000334138800009"}