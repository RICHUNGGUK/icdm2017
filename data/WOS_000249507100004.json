{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "partial_system_behaviours"}, {"score": 0.004749646583168342, "phrase": "use-case_automata"}, {"score": 0.004243460284890507, "phrase": "difficult_task"}, {"score": 0.004185874747231179, "phrase": "significant_time_investment"}, {"score": 0.004143196873246147, "phrase": "high_level"}, {"score": 0.004017745870068031, "phrase": "system_model"}, {"score": 0.003990385737207714, "phrase": "partial_behavioural_descriptions"}, {"score": 0.003688773272422118, "phrase": "formal_composition_mechanism"}, {"score": 0.0036015684625793775, "phrase": "expected_behavioural_model"}, {"score": 0.0035526625882388936, "phrase": "verifiable_model"}, {"score": 0.003480541792744611, "phrase": "use-case_approaches"}, {"score": 0.0030460403366412126, "phrase": "finite_state_automata"}, {"score": 0.002767856819656175, "phrase": "different_ucas"}, {"score": 0.0025236349164549877, "phrase": "precise_semantics"}, {"score": 0.0023973704289918726, "phrase": "use-case_composition"}, {"score": 0.002364777610365689, "phrase": "label_matching"}, {"score": 0.0021857667493036786, "phrase": "intended_behaviour"}, {"score": 0.002170854875902186, "phrase": "unexpected_scenarios"}, {"score": 0.0021340178074057245, "phrase": "umact"}], "paper_keywords": [""], "paper_abstract": "Modelling the behaviour of a system under development has proved to be a very effective way to ensure that it will be constructed correctly. However, building up this model is a difficult task that requires a significant time investment and a high level of expertise. Consequently, incremental approaches that construct a system model from partial behavioural descriptions have been widely adopted. The challenge in such approaches lies in finding both the adequate behavioural formalism that fits the needs of the analyst and a formal composition mechanism that facilitates the generation of the expected behavioural model and produces a verifiable model. Within this framework, use-case approaches have been also accepted in industry because they make the process of requirements elicitation simpler. Their main shortcoming is their lack of formalisation, which makes validation difficult. A formal approach for composing partial system behaviours where partial system behaviours are defined as finite state automata is proposed. Each automaton represents a use-case that describes a certain system concern, hence the name use-case automaton (UCA). The composition of different UCAs could be performed with respect to a set of states or transitions specified by the analyst, using certain composition operators. Each of these operators has a precise semantics, which is defined by how the composition is performed. The formalization of use-case composition is based on label matching between the UCAs to be composed. Our approach is fully automated and provides the advantage of generating a UCA that meets the intended behaviour without unexpected scenarios. Finally, the UMACT, which implements our composition approach, is presented.", "paper_title": "Merging partial system behaviours: composition of use-case automata", "paper_id": "WOS:000249507100004"}