{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multiagent_systems"}, {"score": 0.036653305954379496, "phrase": "social_knowledge"}, {"score": 0.004779564521350969, "phrase": "agent's_flexibility"}, {"score": 0.004439634831927606, "phrase": "multiagent_systems_useful_to_work_in_dynamic_and_distributed_environments"}, {"score": 0.004048378919038729, "phrase": "surrounding_conditions"}, {"score": 0.00388729255686046, "phrase": "message_exchange"}, {"score": 0.003830312347175889, "phrase": "blackboard_systems"}, {"score": 0.0037881238886444332, "phrase": "traditional_methods"}, {"score": 0.0036105923401756126, "phrase": "multiagent_platforms"}, {"score": 0.003069006373093756, "phrase": "highly_distributed_pieces"}, {"score": 0.002925077525258983, "phrase": "great_deal"}, {"score": 0.002777595758483679, "phrase": "multiagent_system"}, {"score": 0.0026277995163948263, "phrase": "indirect_interaction"}, {"score": 0.0026084451971464867, "phrase": "coordination_mechanism"}, {"score": 0.0022834017104377525, "phrase": "abstract_model"}, {"score": 0.002258212866482022, "phrase": "tracing_system"}, {"score": 0.002233301265743633, "phrase": "architectural_design"}, {"score": 0.0021522261505574035, "phrase": "typical_multiagent_platform"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multiagent systems", " Event tracing", " Social knowledge", " Environment", " Overhearing"], "paper_abstract": "Agent's flexibility and autonomy, as well as their capacity to coordinate and cooperate, are some of the features which make multiagent systems useful to work in dynamic and distributed environments. These key features are directly related to the way in which agents communicate and perceive each other, as well as their environment and surrounding conditions. Traditionally, this has been accomplished by means of message exchange or by using blackboard systems. These traditional methods have the advantages of being easy to implement and well supported by multiagent platforms; however, their main disadvantage is that the amount of social knowledge in the system directly depends on every agent actively informing of what it is doing, thinking, perceiving, etc. There are domains, for example those where social knowledge depends on highly distributed pieces of data provided by many different agents, in which such traditional methods can produce a great deal of overhead, hence reducing the scalability, efficiency and flexibility of the multiagent system. This work proposes the use of event tracing in multiagent systems, as an indirect interaction and coordination mechanism to improve the amount and quality of the information that agents can perceive from both their physical and social environment, in order to fulfill their goals more efficiently. In order to do so, this work presents an abstract model of a tracing system and an architectural design of such model, which can be incorporated to a typical multiagent platform. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "TRAMMAS: A tracing model for multiagent systems", "paper_id": "WOS:000295151200003"}