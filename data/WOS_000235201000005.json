{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "intensional_views"}, {"score": 0.00850788433664908, "phrase": "software_system"}, {"score": 0.004103212598803194, "phrase": "high-level_structural_regularities"}, {"score": 0.003465350958971198, "phrase": "source_code"}, {"score": 0.0032272929113113203, "phrase": "software_maintenance"}, {"score": 0.002900426826591769, "phrase": "case_study"}, {"score": 0.0027741761880779535, "phrase": "smallwiki_application"}, {"score": 0.0023424328921363585, "phrase": "co-evolving_high-level_design"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["case study", " co-evolution", " intensional views and relations", " SmallWiki"], "paper_abstract": "Intensional views and relations have been proposed as a way of actively documenting high-level structural regularities in the source code of a software system. By checking conformance of these intensional views and relations against the source code, they supposedly facilitate a variety of software maintenance and evolution tasks. In this paper, by performing a case study on three different versions of the SmallWiki application, we critically analyze in how far the model of intensional views and its current generation of tools provide support for co-evolving high-level design and source code of a software system. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Co-evolving code and design with intensional views - A case study", "paper_id": "WOS:000235201000005"}