{"auto_keywords": [{"score": 0.04900761970662832, "phrase": "otf"}, {"score": 0.00481495049065317, "phrase": "open_trace_format"}, {"score": 0.004348580182733617, "phrase": "new_open_trace_format"}, {"score": 0.004203343568960231, "phrase": "first_part"}, {"score": 0.004062937864702115, "phrase": "small_overview"}, {"score": 0.003971938976270902, "phrase": "trace_format_libraries"}, {"score": 0.0035065523764817143, "phrase": "important_requirements"}, {"score": 0.002795228413298423, "phrase": "design_decisions"}, {"score": 0.0024395426929046415, "phrase": "early_evaluation"}, {"score": 0.002253299769886694, "phrase": "storage_size"}], "paper_keywords": [""], "paper_abstract": "This paper introduces the new Open Trace Format. The first part provides a small overview about Trace Format Libraries in general and existing Formats/Libraries and their features. After that the important requirements are discussed. In particular it concerns efficient parallel and selective access to trace data. The following part presents design decisions and features of OTF comprehensively. Finally, there is some early evaluation of OTF It features comparison of storage size for several examples as well as sequential and parallel I/O benchmarks. At the end, a conclusion will summarize the results and give some outlook.", "paper_title": "Introducing the Open Trace Format (OTF)", "paper_id": "WOS:000238389400071"}