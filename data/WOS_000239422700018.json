{"auto_keywords": [{"score": 0.030296967498600766, "phrase": "data_entries"}, {"score": 0.00481495049065317, "phrase": "iterated_powers"}, {"score": 0.00467207889925365, "phrase": "first_example"}, {"score": 0.004612147352416241, "phrase": "truly_nested_datatype"}, {"score": 0.004342430078306461, "phrase": "constructor_argument"}, {"score": 0.004195418010131832, "phrase": "changing_index"}, {"score": 0.003933000051147382, "phrase": "time_being"}, {"score": 0.0038825121288253435, "phrase": "induction_principles"}, {"score": 0.0036553766268168043, "phrase": "abel"}, {"score": 0.0036239535362310505, "phrase": "uustalu"}, {"score": 0.003116619756505405, "phrase": "bushes"}, {"score": 0.002622947550220266, "phrase": "n-branching_trees"}, {"score": 0.0025449518236394103, "phrase": "real_question"}, {"score": 0.002427035025924384, "phrase": "complicated_data_structure"}, {"score": 0.002294686545883412, "phrase": "\"refined_conventional_iteration"}, {"score": 0.002255431275670053, "phrase": "cited_article"}, {"score": 0.002123274361767215, "phrase": "coq"}], "paper_keywords": [""], "paper_abstract": "Bushes are considered as the first example of a truly nested datatype, i.e., a family of datatypes indexed over all types where a constructor argument not only calls this family with a changing index but even with an index that, involves the family itself. For the time being, no induction principles for these datatypes are known. However, the author has introduced with Abel and Uustalu (TCS 333(1-2), pp. 3-66, 2005) iteration schemes that guarantee to define only terminating functions on those datatypes. The article uses a generalization of Bushes to n-fold self-application and shows how to define elements of these types that have a number of data entries that is obtained by iterated raising to the power of n. Moreover, the data entries are just all the n-branching trees up to a certain height. The real question is how to extract this list of trees from that complicated data structure and to prove this extraction correct. Here, we use the \"refined conventional iteration\" from the cited article for the extraction and describe a verification that has been formally verified inside Coq with its predicative notion of set.", "paper_title": "A datastructure for iterated powers", "paper_id": "WOS:000239422700018"}