{"auto_keywords": [{"score": 0.03197908885946712, "phrase": "competitive_ratio"}, {"score": 0.00481495049065317, "phrase": "-online_hierarchical_load_balancing_problem"}, {"score": 0.004399349717218995, "phrase": "online_hierarchical_scheduling_problem"}, {"score": 0.004104132253183181, "phrase": "minimum_machine_load"}, {"score": 0.003991646181215783, "phrase": "competitive_algorithm"}, {"score": 0.003749654338704576, "phrase": "semi-online_version"}, {"score": 0.003697895355947004, "phrase": "bounded_processing_times"}, {"score": 0.003571591012750155, "phrase": "processing_times"}, {"score": 0.0028392545452904762, "phrase": "optimal_algorithm"}, {"score": 0.002630085891013006, "phrase": "jobs'_processing_times"}, {"score": 0.002241087008892355, "phrase": "alpha-competitive_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling", " Semi-online", " Load balancing", " Competitive ratio", " Hierarchy"], "paper_abstract": "In this paper, we consider the online hierarchical scheduling problem on two parallel machines, with the objective of maximizing the minimum machine load. Since no competitive algorithm exists for this problem, we consider the semi-online version with bounded processing times, in which the processing times are bounded by an interval [1, alpha] where alpha >= 1. We prove that no algorithm can have a competitive ratio less than 1 + alpha and present an optimal algorithm. Moreover, if we further know the sum of jobs' processing times in advance, we prove that no algorithm can have a competitive ratio less than a where 1 <= alpha < 2, and propose an alpha-competitive algorithm for this case. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Semi-online hierarchical load balancing problem with bounded processing times", "paper_id": "WOS:000366773400008"}