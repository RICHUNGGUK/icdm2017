{"auto_keywords": [{"score": 0.04635074898147141, "phrase": "length-weighted_kernels"}, {"score": 0.03189161721380206, "phrase": "bit-parallel_technique"}, {"score": 0.00481495049065317, "phrase": "gapped_string_kernels"}, {"score": 0.0045709675813472884, "phrase": "new_kind"}, {"score": 0.004518442937844318, "phrase": "gapped_string_kernel"}, {"score": 0.004364446928620496, "phrase": "p-length-weighted_and_all-length-weighted_kernels"}, {"score": 0.004071957673937727, "phrase": "suffix_kernel"}, {"score": 0.003755307753574745, "phrase": "gap_penalty_lambda"}, {"score": 0.0037121208432871118, "phrase": "all-length-weighted_kernel"}, {"score": 0.0033644530302903513, "phrase": "-length_and_p-length_kernels"}, {"score": 0.0026846436189970446, "phrase": "word_size"}, {"score": 0.002447101794397243, "phrase": "longest_matching_subsequence"}, {"score": 0.002349884235026956, "phrase": "empirical_results"}, {"score": 0.0022960713730673494, "phrase": "bit-parallel_technique_algorithm"}, {"score": 0.0022176487309947266, "phrase": "suffix_kernel_technique"}, {"score": 0.0021049977753042253, "phrase": "necessary_condition"}], "paper_keywords": [""], "paper_abstract": "In this paper, we present a new kind of gapped string kernel, named length-weighted kernels, including p-length-weighted and all-length-weighted kernels. Moreover, we propose a dynamic programming algorithm based on suffix kernel to compute the length-weighted kernels. Given strings s and t, and a gap penalty lambda, all-length-weighted kernel can be calculated in time O(lslltl) using our algorithms. Based on the relationship between all-length and p-length kernels, the p-length-weighted can be computed in O(plslltl) time. Furthermore, a bit-parallel technique is used to reduce the complexity from O(plslltl) to O([ pk/w ]lslltl), where w is the word size of the machine (e.g. 32 or 64 in practice) and k is determined by the longest matching subsequence of two strings s and t. The empirical results suggest that this bit-parallel technique algorithm combined with dynamic programming and suffix kernel technique outperforms the other approaches in some cases where the necessary condition of using bit-parallel technique can be satisfied.", "paper_title": "A fast bit-parallel algorithm for gapped string kernels", "paper_id": "WOS:000241790100071"}