{"auto_keywords": [{"score": 0.04393033017315467, "phrase": "multiscale_models"}, {"score": 0.00481495049065317, "phrase": "distributed_multiscale_computing"}, {"score": 0.004583579470330216, "phrase": "inherently_complex_problems"}, {"score": 0.004459857205489101, "phrase": "multiscale_modeling_approach"}, {"score": 0.003868142906199082, "phrase": "distributed_infrastructure"}, {"score": 0.0037226570791514184, "phrase": "firm_foundations"}, {"score": 0.003682100144121148, "phrase": "multiscale_modeling"}, {"score": 0.0035630518377071916, "phrase": "useful_interaction_patterns"}, {"score": 0.0034102660898135155, "phrase": "submodel_execution_loop"}, {"score": 0.0030229485340586473, "phrase": "multiscale_modeling_language"}, {"score": 0.0028150302583265655, "phrase": "modular_way"}, {"score": 0.002709045632654716, "phrase": "directed_acyclic_task_graphs"}, {"score": 0.002664850766529523, "phrase": "validity_checking"}, {"score": 0.0026070408483940535, "phrase": "computing_resources"}, {"score": 0.002564505790176378, "phrase": "computational_costs"}, {"score": 0.0024815011359381692, "phrase": "distributed_execution"}, {"score": 0.0024410093024417527, "phrase": "multiscale_coupling_library"}, {"score": 0.0023880553929463933, "phrase": "muscle"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Multiscale modeling", " Distributed multiscale computing", " Modeling methodology", " MML", " MUSCLE", " Task graph", " Coupling template", " Coupling topology", " Submodel execution loop"], "paper_abstract": "Inherently complex problems from many scientific disciplines require a multiscale modeling approach. Yet its practical contents remain unclear and inconsistent. Moreover, multiscale models can be very computationally expensive, and may have potential to be executed on distributed infrastructure. In this paper we propose firm foundations for multiscale modeling and distributed multiscale computing. Useful interaction patterns of multiscale models are made predictable with a submodel execution loop (SEL), four coupling templates, and coupling topology properties. We enhance a high-level and well-defined Multiscale Modeling Language (MML) that describes and specifies multiscale models and their computational architecture in a modular way. The architecture is analyzed using directed acyclic task graphs, facilitating validity checking, scheduling distributed computing resources, estimating computational costs, and predicting deadlocks. Distributed execution using the multiscale coupling library and environment (MUSCLE) is outlined. The methodology is applied to two selected applications in nanotechnology and biophysics, showing its capabilities. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Foundations of distributed multiscale computing: Formalization, specification, and analysis", "paper_id": "WOS:000315614400008"}