{"auto_keywords": [{"score": 0.0038900709793274484, "phrase": "don't_care_letter"}, {"score": 0.0032706520949775065, "phrase": "longest_k-repeats"}, {"score": 0.002861961643289598, "phrase": "proposed_algorithm"}, {"score": 0.0027865506182608263, "phrase": "suffix_trees"}, {"score": 0.0023739321566540682, "phrase": "lowest_common_ancestor_queries"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["combinatorial pattern matching", " string", " repeat", " don't care"], "paper_abstract": "A k-repeat is a string w(k) = u* (k)v that matches more than one substring of x, where is the don't care letter and k > 0. We propose an O(n log n)-time algorithm for computing all longest k-repeats in a given string x = x[l..n]. The proposed algorithm uses suffix trees to fulfill this task and relies on the ability to answer lowest common ancestor queries in constant time. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Longest repeats with a block of k don't cares", "paper_id": "WOS:000241117900018"}