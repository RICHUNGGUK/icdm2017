{"auto_keywords": [{"score": 0.04472882712454684, "phrase": "core's_resources"}, {"score": 0.00481495049065317, "phrase": "tightly-coupled_cores"}, {"score": 0.004738078275822989, "phrase": "individual_processors"}, {"score": 0.0045879792359519375, "phrase": "rigid_boundaries"}, {"score": 0.004539005582217309, "phrase": "inter-core_communication"}, {"score": 0.004077005481951783, "phrase": "today's_challenging_energy_targets"}, {"score": 0.0038431888954930083, "phrase": "processor_types"}, {"score": 0.003741371936431574, "phrase": "alternative_approach"}, {"score": 0.0035457302646174148, "phrase": "large_number"}, {"score": 0.0035078427258024613, "phrase": "homogeneous_cores"}, {"score": 0.0033243718810317254, "phrase": "processor_boundaries"}, {"score": 0.0032536902910768957, "phrase": "richer_mix"}, {"score": 0.0032189132350239013, "phrase": "inter-core_communication_mechanisms"}, {"score": 0.003167441161387607, "phrase": "finer-grain_control"}, {"score": 0.0028753924616209277, "phrase": "loki"}, {"score": 0.0027102997281261733, "phrase": "homogeneous_many-core_architecture"}, {"score": 0.0025137856138000014, "phrase": "building_block"}, {"score": 0.002473560912156024, "phrase": "larger_many-core_system"}, {"score": 0.002407941567598653, "phrase": "tile's_ability"}, {"score": 0.0023314867226678555, "phrase": "parallelisation_opportunities"}, {"score": 0.0022818671653408278, "phrase": "control_and_communication_mechanisms"}, {"score": 0.0021857667493036786, "phrase": "flexible_manner"}, {"score": 0.002127765807039172, "phrase": "detailed_breakdown"}, {"score": 0.0021049977753042253, "phrase": "energy_usage"}], "paper_keywords": ["Computer architecture", " Many-core", " Parallelism", " Homogeneous"], "paper_abstract": "The individual processors of a chip-multiprocessor traditionally have rigid boundaries. Inter-core communication is only possible via memory, and control over a core's resources is localised. The specialisation necessary to meet today's challenging energy targets is typically provided through the provision of a range of processor types and accelerators. An alternative approach is to permit specialisation by tailoring the way a large number of homogeneous cores are used. The approach here is to relax processor boundaries, create a richer mix of inter-core communication mechanisms and provide finer-grain control over, and access to, the resources of each core. We evaluate one such design, called Loki, that aims to support specialisation in software on a homogeneous many-core architecture. We focus on the design of a single 8-core tile, conceived as the building block for a larger many-core system. We explore the tile's ability to support a range of parallelisation opportunities and detail the control and communication mechanisms needed to exploit each core's resources in a flexible manner. Performance and a detailed breakdown of energy usage is provided for a range of benchmarks and configurations.", "paper_title": "Exploiting Tightly-Coupled Cores", "paper_id": "WOS:000351209700008"}