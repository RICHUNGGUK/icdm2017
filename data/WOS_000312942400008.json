{"auto_keywords": [{"score": 0.037469768164155544, "phrase": "core_provenance"}, {"score": 0.00481495049065317, "phrase": "provenance_minimization"}, {"score": 0.0047787596516662, "phrase": "provenance_information"}, {"score": 0.004584495834677719, "phrase": "computational_process"}, {"score": 0.0042351951710402425, "phrase": "trust_assessment"}, {"score": 0.004187507332394002, "phrase": "query_answering"}, {"score": 0.004156012879026324, "phrase": "probabilistic_databases"}, {"score": 0.003363830908814182, "phrase": "compact_input"}, {"score": 0.003325921766364862, "phrase": "aforementioned_data_management_tools"}, {"score": 0.0029471223246724204, "phrase": "input_database"}, {"score": 0.0027428939498108746, "phrase": "expressive_power"}, {"score": 0.002476721068743341, "phrase": "database_systems"}, {"score": 0.0024395426929046415, "phrase": "specific_p-minimal_query"}, {"score": 0.002202742267484358, "phrase": "arbitrary_equivalent_query"}], "paper_keywords": ["Algorithms", " Theory", " Provenance", " query minimization"], "paper_abstract": "Provenance information has been proved to be very effective in capturing the computational process performed by queries, and has been used extensively as the input to many advanced data management tools (e.g., view maintenance, trust assessment, or query answering in probabilistic databases). We observe here that while different (set-) equivalent queries may admit different provenance expressions when evaluated on the same database, there is always some part of these expressions that is common to all. We refer to this part as the core provenance. In addition to being informative, the core provenance is also useful as a compact input to the aforementioned data management tools. We formally define the notion of core provenance. We study algorithms that, given a query, compute an equivalent (called p-minimal) query that for every input database, the provenance of every result tuple is the core provenance. We study such algorithms for queries of varying expressive power (namely conjunctive queries with disequalities and unions thereof). Finally, we observe that, in general, one would not want to require database systems to execute a specific p-minimal query, but instead to be able to find, possibly off-line, the core provenance of a given tuple in the output (computed by an arbitrary equivalent query), without reevaluating the query. We provide algorithms for such direct computation of the core provenance.", "paper_title": "On Provenance Minimization", "paper_id": "WOS:000312942400008"}