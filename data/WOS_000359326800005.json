{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minkowski"}, {"score": 0.004684157900507474, "phrase": "gpu_implementation"}, {"score": 0.004473982381245469, "phrase": "minkowski_sum_algorithm"}, {"score": 0.004119049028319832, "phrase": "robust_cpu"}, {"score": 0.004044064541716598, "phrase": "gpu_implementations"}, {"score": 0.0036553070575015344, "phrase": "user-specified_backward_error"}, {"score": 0.003097865379563127, "phrase": "cpu_program"}, {"score": 0.0030414140732789186, "phrase": "prior_work"}, {"score": 0.0029586543333524904, "phrase": "non-robust_programs"}, {"score": 0.002878140062594849, "phrase": "gpu_program"}, {"score": 0.002748775748298028, "phrase": "median_speedup_factor"}, {"score": 0.002329258721870127, "phrase": "minkowski_sum"}, {"score": 0.00226583335721762, "phrase": "million_features"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Minkowski sums", " Robust computational geometry", " GPU algorithms"], "paper_abstract": "We present a Minkowski sum algorithm for polyhedra based on convolution. We develop robust CPU and GPU implementations, using our ACP strategy to eliminate degeneracy and to enforce a user-specified backward error bound. We test the programs on 45 inputs with an error bound of 10(-8). The CPU program outperforms prior work, including non-robust programs. The GPU program using 2688 CUDA cores exhibits a median speedup factor of 36, which increases to 68 on the 6 hardest tests. For example, it computes a Minkowski sum with a million features in 20 seconds. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Robust polyhedral Minkowski sums with GPU implementation", "paper_id": "WOS:000359326800005"}