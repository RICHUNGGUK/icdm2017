{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "equal-length_intervals"}, {"score": 0.004174451361776433, "phrase": "total_weight"}, {"score": 0.004112175423546628, "phrase": "completed_intervals"}, {"score": 0.0038144050983900286, "phrase": "deterministic_case"}, {"score": 0.003701401653850141, "phrase": "randomized_case"}, {"score": 0.003511613254403125, "phrase": "first_randomized_algorithm"}, {"score": 0.0033315236647127734, "phrase": "competitive_ratio"}, {"score": 0.0025989960809479104, "phrase": "deterministic_multiprocessor_case"}, {"score": 0.002218933616777076, "phrase": "lower_bound"}], "paper_keywords": ["online algorithms", " scheduling", " intervals", " randomization"], "paper_abstract": "We consider the problem of scheduling a set of equal-length intervals arriving online, where each interval is associated with a weight and the objective is to maximize the total weight of completed intervals. An optimal 4-competitive algorithm has long been known in the deterministic case, but the randomized case remains open. We give the first randomized algorithm for this problem, achieving a competitive ratio of 3.5822. We also prove a randomized lower bound of 4/3, which is an improvement over the previous 5/4 result. Then we show that the techniques can be carried to the deterministic multiprocessor case, giving a 3.5822-competitive 2-processor algorithm, and a 4/3 lower bound for any number of processors. We also give a lower bound of 2 for the case of two processors.", "paper_title": "Online interval scheduling: randomized and multiprocessor cases", "paper_id": "WOS:000258531700004"}