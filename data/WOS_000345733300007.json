{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scientific_computing"}, {"score": 0.004539005582217309, "phrase": "high_level_tools"}, {"score": 0.004463096299091981, "phrase": "parallel_programming"}, {"score": 0.004351595642056769, "phrase": "major_challenge"}, {"score": 0.004171891198117434, "phrase": "modern_architectures_increases"}, {"score": 0.004102096151528319, "phrase": "domain_specific_languages"}, {"score": 0.003407026489727146, "phrase": "full_advantage"}, {"score": 0.0033218213825698417, "phrase": "parallel_architectures"}, {"score": 0.0030787405733989615, "phrase": "library-based_solution"}, {"score": 0.0029266219967426224, "phrase": "generative_programming"}, {"score": 0.0027819985260847577, "phrase": "generative_programming_idioms"}, {"score": 0.0027123819773059127, "phrase": "architecture_specificities"}, {"score": 0.00266693888510356, "phrase": "mere_parameters"}, {"score": 0.002600194073758015, "phrase": "code_generation_process"}, {"score": 0.0024302416436559867, "phrase": "high_performance"}, {"score": 0.002349467661235188, "phrase": "high_level_api"}, {"score": 0.0022145052062614514, "phrase": "new_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["C plus", " Embedded domain specific languages", " Parallel skeletons", " Generic programming", " Generative programming"], "paper_abstract": "The design and implementation of high level tools for parallel programming is a major challenge as the complexity of modern architectures increases. Domain Specific Languages (or DSL) have been proposed as a solution to facilitate this design but few of those DSLs actually take full advantage of said parallel architectures. In this paper, we propose a library-based solution by designing a C++ DSLs using generative programming: NT2. By adapting generative programming idioms so that architecture specificities become mere parameters of the code generation process, we demonstrate that our library can deliver high performance while featuring a high level API and being easy to extend over new architectures. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "The numerical template toolbox: A modern C plus plus design for scientific computing", "paper_id": "WOS:000345733300007"}