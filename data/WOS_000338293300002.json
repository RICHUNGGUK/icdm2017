{"auto_keywords": [{"score": 0.045051084910580984, "phrase": "call-time_choice"}, {"score": 0.00481495049065317, "phrase": "constructor_systems"}, {"score": 0.00478701880312723, "phrase": "call-time_choice_semantics"}, {"score": 0.004704187604192605, "phrase": "non-terminating_constructor-based_term_rewriting_systems"}, {"score": 0.00451642066363115, "phrase": "existing_functional_logic_languages"}, {"score": 0.004451184959169275, "phrase": "rewrite_systems"}, {"score": 0.004412494693940597, "phrase": "possibly_non-strict_non-deterministic_functions"}, {"score": 0.004211731831120046, "phrase": "non-trivial_issue"}, {"score": 0.004126783377011788, "phrase": "semantic_point"}, {"score": 0.004067152645111547, "phrase": "constructor-based_rewriting_logic"}, {"score": 0.003904713104101532, "phrase": "suitable_semantic_basis"}, {"score": 0.0038820411362656803, "phrase": "modern_functional_logic_languages"}, {"score": 0.003825933835888156, "phrase": "crwl"}, {"score": 0.003726967166630923, "phrase": "proper_notion"}, {"score": 0.003705323407433896, "phrase": "one-step_reduction"}, {"score": 0.0034251007650845534, "phrase": "first-order_version"}, {"score": 0.0032031180198375283, "phrase": "-binding_construction"}, {"score": 0.0031202119316866336, "phrase": "non-strict_semantics"}, {"score": 0.003030600725762668, "phrase": "particular_textual_presentation"}, {"score": 0.00301298877185846, "phrase": "term_graph"}, {"score": 0.002850682396853918, "phrase": "conservative_extension"}, {"score": 0.002744683473733121, "phrase": "case_studies"}, {"score": 0.0026503306888150426, "phrase": "powerful_reasoning_tool"}, {"score": 0.0023380300046435187, "phrase": "-narrowing_relations"}, {"score": 0.002290786209279345, "phrase": "ordinary_term"}, {"score": 0.002244494905883452, "phrase": "particular_soundness"}, {"score": 0.0021049977753042253, "phrase": "semantic_sense"}], "paper_keywords": ["term rewriting systems", " constructor-based rewriting logic", " narrowing", " non-determinism", " call-time choice semantics", " sharing", " local bindings"], "paper_abstract": "Non-confluent and non-terminating constructor-based term rewriting systems are useful for the purpose of specification and programming. In particular, existing functional logic languages use such kinds of rewrite systems to define possibly non-strict non-deterministic functions. The semantics adopted for non-determinism is call-time choice, whose combination with non-strictness is a non-trivial issue, addressed years ago from a semantic point of view with the Constructor-based Rewriting Logic (CRWL), a well-known semantic framework commonly accepted as suitable semantic basis of modern functional logic languages. A drawback of CRWL is that it does not come with a proper notion of one-step reduction, which would be very useful to understand and reason about how computations proceed. In this paper, we develop thoroughly the theory for the first-order version of let-rewriting, a simple reduction notion close to that of classical term rewriting, but extended with a let-binding construction to adequately express the combination of call-time choice with non-strict semantics. Let-rewriting can be seen as a particular textual presentation of term graph rewriting. We investigate the properties of let-rewriting, most remarkably their equivalence with respect to a conservative extension of the CRWL-semantics coping with let-bindings, and we show by some case studies that having two interchangeable formal views (reduction/semantics) of the same language is a powerful reasoning tool. After that, we provide a notion of let-narrowing, which is adequate for call-time choice as proved by soundness and completeness results of let-narrowing with respect to let-rewriting. Moreover, we relate those let-rewriting and let-narrowing relations (and hence CRWL) with ordinary term rewriting and narrowing, providing in particular soundness and completeness of let-rewriting with respect to term rewriting for a class of programs which are deterministic in a semantic sense.", "paper_title": "Rewriting and narrowing for constructor systems with call-time choice semantics", "paper_id": "WOS:000338293300002"}