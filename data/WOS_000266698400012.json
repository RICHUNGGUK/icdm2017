{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_data_warehouse_design"}, {"score": 0.041369559181851014, "phrase": "olap_systems"}, {"score": 0.027000735806077272, "phrase": "ground_model"}, {"score": 0.0047588556219929756, "phrase": "abstract_state_machines"}, {"score": 0.004232475065285966, "phrase": "latest_updates"}, {"score": 0.0038309141193444015, "phrase": "data_warehouse"}, {"score": 0.003676811616723809, "phrase": "operational_databases"}, {"score": 0.0035705363343606837, "phrase": "olap."}, {"score": 0.003447035529485425, "phrase": "olap_systems_change"}, {"score": 0.003367077034382727, "phrase": "data_warehouses"}, {"score": 0.0031938648476635225, "phrase": "design_process"}, {"score": 0.0030295361111006866, "phrase": "new_requirements"}, {"score": 0.0028568174308720167, "phrase": "system_design"}, {"score": 0.0027257950295241024, "phrase": "asm"}, {"score": 0.002693919110230191, "phrase": "based_development_method"}, {"score": 0.0025854347094662247, "phrase": "basic_user_requirements"}, {"score": 0.0024813081174066653, "phrase": "stepwise_refinements"}, {"score": 0.0023953929817357882, "phrase": "design_decisions"}, {"score": 0.0022323643840655646, "phrase": "systematical_approach"}, {"score": 0.0021677478798910565, "phrase": "data_warehouse_design"}, {"score": 0.0021049977753042253, "phrase": "formal_refinement_rules"}], "paper_keywords": ["Abstract State Machine", " On-Line Analytical Processing", " Data Warehouse", " Refinement"], "paper_abstract": "On-line analytical processing (OLAP) systems deal with analytical tasks that support decision making. As these tasks do not depend on the latest updates by transactions, it is assumed that the data required by OLAP systems are kept in a data warehouse, which separates the input from operational databases from the outputs to OLAP. However, user requirements for OLAP systems change over time. Data warehouses and OLAP systems thus are rather dynamic and the design process is continuous. In order to easily incorporate new requirements and at the same time ensure the quality of the system design, we suggest to apply the Abstract State Machine (ASM) based development method. This assumes we capture the basic user requirements in a ground model and then apply stepwise refinements to the ground model for every design decisions or further new requirements. In this article, we show that a systematical approach which is tailored for data warehouse design with a set of formal refinement rules can simplify the work in dynamic data warehouse design and at the same time improves the quality of the system.", "paper_title": "Dynamic Data Warehouse Design with Abstract State Machines", "paper_id": "WOS:000266698400012"}