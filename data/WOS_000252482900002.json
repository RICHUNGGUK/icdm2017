{"auto_keywords": [{"score": 0.02576554420465121, "phrase": "cp"}, {"score": 0.00481495049065317, "phrase": "parallel_applications"}, {"score": 0.00475924837336259, "phrase": "stream-oriented_mpsoc_platforms"}, {"score": 0.004464156619275582, "phrase": "precedence-constrained_tasks"}, {"score": 0.004310949776826717, "phrase": "distributed_real-time_system"}, {"score": 0.0036838048761094933, "phrase": "complete_allocation"}, {"score": 0.0036411406244705557, "phrase": "scheduling_framework"}, {"score": 0.0035366216368204182, "phrase": "mpsoc_virtual_platform"}, {"score": 0.003415137969569376, "phrase": "modelling_assumptions"}, {"score": 0.0032978134802348433, "phrase": "efficient_and_exact_approach"}, {"score": 0.0032406665327678616, "phrase": "mapping_problem"}, {"score": 0.0031660031870090434, "phrase": "decomposition_strategy"}, {"score": 0.003111133215976132, "phrase": "allocation_subproblem"}, {"score": 0.003039445153076014, "phrase": "integer_programming"}, {"score": 0.002884111441153185, "phrase": "constraint_programming"}, {"score": 0.0026892447164623247, "phrase": "iterative_procedure"}, {"score": 0.002551762519273805, "phrase": "optimal_solution"}, {"score": 0.0025221759076833124, "phrase": "experimental_results"}, {"score": 0.002492931483018372, "phrase": "significant_speed-ups_w.r.t"}, {"score": 0.0022576249214220187, "phrase": "cycle-accurate_functional_simulation"}, {"score": 0.002154693685426657, "phrase": "practical_viability"}, {"score": 0.0021049977753042253, "phrase": "real-life_applications"}], "paper_keywords": ["MPSoCs", " allocation", " scheduling", " integer programming", " constraint programming"], "paper_abstract": "The problem of allocating and scheduling precedence-constrained tasks on the processors of a distributed real-time system is NP-hard. As such, it has been traditionally tackled by means of heuristics, which provide only approximate or near-optimal solutions. This paper proposes a complete allocation and scheduling framework, and deploys an MPSoC virtual platform to validate the accuracy of modelling assumptions. The optimizer implements an efficient and exact approach to the mapping problem based on a decomposition strategy. The allocation subproblem is solved through Integer Programming (IP) while the scheduling one through Constraint Programming (CP). The two solvers interact by means of an iterative procedure which has been proven to converge to the optimal solution. Experimental results show significant speed-ups w.r.t. pure IP and CP exact solution strategies as well as high accuracy with respect to cycle-accurate functional simulation. Two case studies further demonstrate the practical viability of our framework for real-life applications.", "paper_title": "A fast and accurate technique for mapping parallel applications on stream-oriented MPSoC platforms with communication awareness", "paper_id": "WOS:000252482900002"}