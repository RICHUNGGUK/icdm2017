{"auto_keywords": [{"score": 0.04070629305155005, "phrase": "integration_algorithm"}, {"score": 0.015552696685207148, "phrase": "isogeometric_finite_element_method"}, {"score": 0.012828636595290975, "phrase": "cpu."}, {"score": 0.00481495049065317, "phrase": "gpu_integration_algorithm"}, {"score": 0.004686688155058031, "phrase": "task_dependency_graphs"}, {"score": 0.004252469672259375, "phrase": "higher_order_b-splines"}, {"score": 0.004028796143006953, "phrase": "element_frontal_matrices"}, {"score": 0.0037352048741373816, "phrase": "basic_undividable_computational_tasks"}, {"score": 0.003675120438902734, "phrase": "dependency_relation"}, {"score": 0.0035386420095120706, "phrase": "basic_tasks"}, {"score": 0.0034629341517018438, "phrase": "particular_steps"}, {"score": 0.0031759067385562553, "phrase": "independent_sets"}, {"score": 0.0029602552900111407, "phrase": "gpu_card"}, {"score": 0.002557994178335554, "phrase": "gpu"}, {"score": 0.0024628046987344846, "phrase": "numerical_examples"}, {"score": 0.0023842119605420537, "phrase": "mri"}, {"score": 0.002333044307949414, "phrase": "human_head"}, {"score": 0.002295463032589125, "phrase": "execution_time"}, {"score": 0.002258485755625332, "phrase": "concurrent_gpu_integration"}, {"score": 0.002198173002125907, "phrase": "sequential_integration"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Isogeometric finite element method", " Numerical integration", " L-2 - projection", " Modeling of brain"], "paper_abstract": "This article analyzes the integration for isogeometric finite element method solvers. In particular, it shows that isogeometric solvers with higher order B-splines spend significant amount of time for generation of the element frontal matrices when executed sequentially on CPU. The integration algorithm is represented as a sequence of basic undividable computational tasks and the dependency relation between them is identified. The basic tasks are defined for particular steps of the integration algorithm, for given integration points. In this article we show how to prepare independent sets of tasks that can be automatically scheduled and executed concurrently in a GPU card. This is done with the help of the graph expressing the dependency between tasks, constructed for the integration algorithm. The algorithm is implemented on GPU and tested on a sequence of numerical examples concerning the two dimensional isogeometric L-2 - projection problems for the MRI scans of the human head. The execution time of the concurrent GPU integration is compared with the sequential integration executed on CPU. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Fast GPU integration algorithm for isogeometric finite element method solvers using task dependency graphs", "paper_id": "WOS:000367774700015"}