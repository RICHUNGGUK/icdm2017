{"auto_keywords": [{"score": 0.044330490798065544, "phrase": "competitive_ratio"}, {"score": 0.040287025689518835, "phrase": "semi-online_scheduling"}, {"score": 0.027549773111982794, "phrase": "previous_strategies"}, {"score": 0.00481495049065317, "phrase": "-online_scheduling"}, {"score": 0.004770295517830214, "phrase": "makespan_minimization"}, {"score": 0.00469678464293492, "phrase": "fundamental_scheduling_problem"}, {"score": 0.004469042910390712, "phrase": "processing_time"}, {"score": 0.004427581692544645, "phrase": "parallel_machines"}, {"score": 0.004345804626592329, "phrase": "maximum_completion_time"}, {"score": 0.004278807087784626, "phrase": "deterministic_online_algorithms"}, {"score": 0.004135010810625326, "phrase": "relatively_high_competitiveness"}, {"score": 0.004008467832216946, "phrase": "randomized_online_strategies"}, {"score": 0.00398362591640497, "phrase": "recent_research"}, {"score": 0.003910016472705627, "phrase": "online_constraint"}, {"score": 0.0037668375812212654, "phrase": "online_scheduler"}, {"score": 0.0036972190829870906, "phrase": "jobs'_processing_times"}, {"score": 0.003662892058072211, "phrase": "problem_relaxation"}, {"score": 0.003606384575869449, "phrase": "practical_applications"}, {"score": 0.0035728978842974246, "phrase": "best_known_semi-online_algorithm"}, {"score": 0.003485160960213252, "phrase": "cheng"}, {"score": 0.0034634983477388934, "phrase": "kellerer"}, {"score": 0.0034420221319116703, "phrase": "kotov"}, {"score": 0.0032647501331200023, "phrase": "angelelli"}, {"score": 0.0032445162854742816, "phrase": "nagy"}, {"score": 0.003224380094218674, "phrase": "speranza"}, {"score": 0.003204396595796583, "phrase": "tuza"}, {"score": 0.0029462012558267863, "phrase": "deterministic_semi-online_algorithm"}, {"score": 0.002759823989317719, "phrase": "upper_bound"}, {"score": 0.0026835920552084488, "phrase": "new_semi-online_algorithm"}, {"score": 0.002498183546874872, "phrase": "best_possible_competitiveness"}, {"score": 0.0023694065215394593, "phrase": "job_classes"}, {"score": 0.0022967713922705, "phrase": "online_algorithms"}, {"score": 0.0022683432490549064, "phrase": "extra_information"}, {"score": 0.0022125358787611457, "phrase": "additional_power"}, {"score": 0.00219196314559129, "phrase": "small_piece"}, {"score": 0.0021446993452098597, "phrase": "online_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Competitive analysis", " Makespan minimization", " Online computation"], "paper_abstract": "Makespan minimization on m identical machines is a fundamental scheduling problem. The goal is to assign a sequence of jobs, each specified by a processing time, to parallel machines so as to minimize the maximum completion time of any job. Deterministic online algorithms achieve a competitive ratio of about 1.92. Due to this relatively high competitiveness and the lack of progress in the area of randomized online strategies, recent research has investigated scenarios where the online constraint is relaxed. We study semi-online scheduling where at any time an online scheduler knows the sum of the jobs' processing times. This problem relaxation is well motivated by practical applications. The best known semi-online algorithm achieves a competitive ratio of 1.6 (Cheng, Kellerer, Kotov, 2005 [11]. The best known lower bound is equal to 1.565 (Angelelli, Nagy, Speranza, Tuza, 2004 [3]). In this paper, we present two contributions for semi-online scheduling. We develop an improved lower bound showing that no deterministic semi-online algorithm can attain a competitive ratio smaller than 1.585. This significantly reduces the gap between the previous lower bound and the upper bound of 1.6. Second, we present a new semi-online algorithm that is based on an approach different from that of previous strategies. The algorithm is 1.75-competitive and hence does not achieve the best possible competitiveness. However, our algorithm is extremely simple and, unlike previous strategies, does not resort to job classes. The algorithm is more in the spirit of online algorithms not using any extra information. Hence our upper bound highlights the additional power of a small piece of advice when provided to an online algorithm. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Semi-online scheduling revisited", "paper_id": "WOS:000305849500001"}