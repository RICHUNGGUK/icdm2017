{"auto_keywords": [{"score": 0.004766877640444116, "phrase": "aligned_k-center_problem"}, {"score": 0.004610058444728656, "phrase": "points_s"}, {"score": 0.004413846562278824, "phrase": "k_disks"}, {"score": 0.004340614094598847, "phrase": "line_l"}, {"score": 0.004225950334493496, "phrase": "maximum_radius"}, {"score": 0.004073196909500369, "phrase": "constrained_version"}, {"score": 0.0040324997782003455, "phrase": "well-known_k-center_problem"}, {"score": 0.0038867116254051363, "phrase": "particular_region"}, {"score": 0.003671663469605366, "phrase": "simplest_version"}, {"score": 0.0031054861345720854, "phrase": "arbitrary_line"}, {"score": 0.003053894781246847, "phrase": "randomized_algorithm"}, {"score": 0.0030334982939315, "phrase": "expected_running_time"}, {"score": 0.0022814200422609774, "phrase": "randomized_algorithms"}, {"score": 0.0022661710658109916, "phrase": "expected_running_times"}], "paper_keywords": ["The k-center problem", " approximate algorithm"], "paper_abstract": "In this paper we study several instances of the aligned k-center problem where the goal is, given a set of points S in the plane and a parameter k >= 1, to find k disks with centers on a line l such that their union covers S and the maximum radius of the disks is minimized. This problem is a constrained version of the well-known k-center problem in which the centers are constrained to lie in a particular region such as a segment, a line, or a polygon. We first consider the simplest version of the problem where the line I: is given in advance; we can sole this problem in time O(n log(2) n). In the case where only the direction of is fixed, we give an O(n(2) log(2) n)-time algorithm. When l is an arbitrary line, we give a randomized algorithm with expected running time O(n(4) log(2) n). Then we present (1+epsilon)-approximation algorithms for these three problems. When we denote T (k, epsilon) = (k/epsilon(2)+(k/epsilon) log k) log(1/epsilon), these algorithms run in O(n log k+T (k, epsilon)) time, O(n log k vertical bar T(k. epsilon)/epsilon) time, and O(n log k vertical bar T(k. epsilon)/epsilon(2)) time, respectively. For k = O(n(1/ 3) / log n), we also give randomized algorithms with expected running times O(n + (k/epsilon(2)) log(1/epsilon)), O(n + (k/epsilon(3)) log(1/epsilon)), and O(n + (k/epsilon(4)) log(1/epsilon)), respectively.", "paper_title": "THE ALIGNED K-CENTER PROBLEM", "paper_id": "WOS:000289373800002"}