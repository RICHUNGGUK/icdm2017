{"auto_keywords": [{"score": 0.04927465911141675, "phrase": "statistical_simulation"}, {"score": 0.008136217805004627, "phrase": "synthetic_trace"}, {"score": 0.00481495049065317, "phrase": "memory_data"}, {"score": 0.00467424463996457, "phrase": "efficient_exploration"}, {"score": 0.004634799977448855, "phrase": "microprocessor_design_spaces"}, {"score": 0.00459568664065473, "phrase": "microprocessor_design"}, {"score": 0.004404994123834589, "phrase": "huge_design_space"}, {"score": 0.004330941610682453, "phrase": "optimal_design"}, {"score": 0.00416882434439484, "phrase": "detailed_architectural_simulation"}, {"score": 0.004133627071344356, "phrase": "entire_benchmark_executions"}, {"score": 0.004046923261950549, "phrase": "recently_introduced_approach"}, {"score": 0.0039620308501590795, "phrase": "microprocessor_design_space"}, {"score": 0.0039119492240482, "phrase": "basic_idea"}, {"score": 0.0037654565082218595, "phrase": "important_program_characteristics"}, {"score": 0.003400984514637656, "phrase": "statistical_simulation_methodology"}, {"score": 0.0033579708256295847, "phrase": "accurate_memory_data_flow_models"}, {"score": 0.0031912706211861324, "phrase": "cache_statistics"}, {"score": 0.0031242709509664837, "phrase": "global_cache"}, {"score": 0.0029817668105720924, "phrase": "memory-_level_parallelism"}, {"score": 0.0028944757265206332, "phrase": "outstanding_cache_lines"}, {"score": 0.0027741761880779535, "phrase": "dependency_distributions"}, {"score": 0.0027390682208834013, "phrase": "load_forwarding"}, {"score": 0.0026363807171515255, "phrase": "substantial_improvements"}, {"score": 0.002603012037901889, "phrase": "current_state-_of-_the-_art_statistical_simulation_methods"}, {"score": 0.0024842242921857705, "phrase": "average_instructions"}, {"score": 0.002421726275597666, "phrase": "prediction_error"}, {"score": 0.0023507916951658455, "phrase": "maximum_error"}, {"score": 0.0022434880661725493, "phrase": "performance_trends"}, {"score": 0.0021501863832966966, "phrase": "accurate_data_flow_models"}, {"score": 0.0021049977753042253, "phrase": "efficient_and_accurate_microprocessor_design_space_explorations"}], "paper_keywords": ["performance of systems", " modeling techniques", " simulation"], "paper_abstract": "Microprocessor design is both complex and time consuming: Exploring a huge design space for identifying the optimal design under a number of constraints is infeasible using detailed architectural simulation of entire benchmark executions. Statistical simulation is a recently introduced approach for efficiently culling the microprocessor design space. The basic idea of statistical simulation is to collect a number of important program characteristics and to generate a synthetic trace from it. Simulating this synthetic trace is extremely fast as it contains only a million instructions. This paper improves the statistical simulation methodology by proposing accurate memory data flow models. We propose 1) cache miss correlation, or measuring cache statistics conditionally dependent on the global cache hit/ miss history, for modeling cache miss patterns and memory- level parallelism, 2) cache line reuse distributions for modeling accesses to outstanding cache lines, and 3) through- memory read- after- write dependency distributions for modeling load forwarding and bypassing. Our experiments using the SPEC CPU2000 benchmarks show substantial improvements compared to current state- of- the- art statistical simulation methods. For example, for our baseline configuration, we reduce the average instructions per cycle ( IPC) prediction error from 10.9 to 2.1 percent; the maximum error observed equals 5.8 percent. In addition, we show that performance trends are predicted very accurately, making statistical simulation enhanced with accurate data flow models a useful tool for efficient and accurate microprocessor design space explorations.", "paper_title": "Memory data flow Modeling in statistical simulation for the efficient exploration of microprocessor design spaces", "paper_id": "WOS:000251048500004"}