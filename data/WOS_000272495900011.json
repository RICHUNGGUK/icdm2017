{"auto_keywords": [{"score": 0.04660802533264657, "phrase": "assembly_sequences"}, {"score": 0.040018529529699524, "phrase": "optimal_or_near-optimal_assembly_sequences"}, {"score": 0.033775525781890345, "phrase": "traditional_pso_algorithm"}, {"score": 0.015719716506582538, "phrase": "assembly_sequence_planning"}, {"score": 0.011432197033582893, "phrase": "optimization_model"}, {"score": 0.008620802251740986, "phrase": "preferable_assembly_sequences"}, {"score": 0.004735254735115024, "phrase": "complex_products"}, {"score": 0.004503959683578956, "phrase": "search_space"}, {"score": 0.004143196873246147, "phrase": "conventional_methods"}, {"score": 0.0040916230716372265, "phrase": "intelligent_optimization_algorithms"}, {"score": 0.0039737570920809215, "phrase": "vexatious_trap"}, {"score": 0.003701401653850141, "phrase": "assembly_process_constraints"}, {"score": 0.0036553070575015344, "phrase": "assembly_cost"}, {"score": 0.0033905067962602515, "phrase": "mapping_rules"}, {"score": 0.003306559295382181, "phrase": "traditional_pso_model"}, {"score": 0.0032381878248821383, "phrase": "variable_velocity"}, {"score": 0.0031317126905234145, "phrase": "velocity_operator"}, {"score": 0.0028091907694771613, "phrase": "optimal_assembly_sequence"}, {"score": 0.002762601646452813, "phrase": "convergence_rate"}, {"score": 0.0026941587813581274, "phrase": "chaos_method"}, {"score": 0.0025623050508233078, "phrase": "current_optimization_time_step"}, {"score": 0.002337066031028783, "phrase": "proposed_method"}, {"score": 0.0022886952510350416, "phrase": "illustrative_example"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Assembly sequence planning", " Particle swarm optimization (PSO)", " Chaos method"], "paper_abstract": "Assembly sequence planning of complex products is difficult to be tackled, because the size of the search space of assembly sequences is exponentially proportional to the number of parts or components of the products. Contrasted with the conventional methods, the intelligent optimization algorithms display their predominance in escaping from the vexatious trap. This paper proposes a chaotic particle swarm optimization (CPSO) approach to generate the optimal or near-optimal assembly sequences of products. Six kinds of assembly process constraints affecting the assembly cost are concerned and clarified at first. Then, the optimization model of assembly sequences is presented. The mapping rules between the optimization model and the traditional PSO model are given. The variable velocity in the traditional PSO algorithm is changed to the velocity operator (nu o) which is used to rearrange the parts in the assembly sequences to generate the optimal or near-optimal assembly sequences. To improve the quality of the optimal assembly sequence and increase the convergence rate of the traditional PSO algorithm, the chaos method is proposed to provide the preferable assembly sequences of each particle in the current optimization time step. Then, the preferable assembly sequences are considered as the seeds to generate the optimal or near-optimal assembly sequences utilizing the traditional PSO algorithm. The proposed method is validated with an illustrative example and the results are compared with those obtained using the traditional PSO algorithm under the same assembly process constraints. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Chaotic particle swarm optimization for assembly sequence planning", "paper_id": "WOS:000272495900011"}