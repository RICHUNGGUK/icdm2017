{"auto_keywords": [{"score": 0.048868122179027106, "phrase": "watershed"}, {"score": 0.00481495049065317, "phrase": "ecohydrological_model"}, {"score": 0.004753670676591174, "phrase": "dynamic_task_scheduling"}, {"score": 0.0045162169185355, "phrase": "massive_data"}, {"score": 0.004458722048888919, "phrase": "intensive_computation"}, {"score": 0.004345909305473054, "phrase": "rising_demand"}, {"score": 0.00429057323623293, "phrase": "performance_computing"}, {"score": 0.0038476708316022823, "phrase": "low_parallel_efficiency"}, {"score": 0.0037262941538784094, "phrase": "load_unbalance"}, {"score": 0.0035173498506324476, "phrase": "grid_cell"}, {"score": 0.00334144503360907, "phrase": "poor_stability"}, {"score": 0.003256808693019209, "phrase": "parallel_computing"}, {"score": 0.003133844153806967, "phrase": "dynamic_task_scheduling_based_parallelism_scheme"}, {"score": 0.003034916887102753, "phrase": "simple_control_logic"}, {"score": 0.002977061391551628, "phrase": "basic_concept"}, {"score": 0.0028463059289874637, "phrase": "grid-based_tasks"}, {"score": 0.0027920359090544107, "phrase": "flow_connectivity"}, {"score": 0.0027564303939865476, "phrase": "independent_tasks"}, {"score": 0.0026693851900137953, "phrase": "dependent_tasks"}, {"score": 0.002635339648135844, "phrase": "dynamic_proceed"}, {"score": 0.002568542343945288, "phrase": "dynamic_task-tree_scheduling_solution"}, {"score": 0.0024399717841513354, "phrase": "experimental_watershed"}, {"score": 0.0022882500116799777, "phrase": "computing_speed"}, {"score": 0.0021049977753042253, "phrase": "watershed_distributed_ecohydrological_models_application"}], "paper_keywords": ["watershed distributed ecohydrological models", " parallelisation", " dynamic task scheduling", " DAG model"], "paper_abstract": "Watershed distributed ecohydrological modelling associating with massive data and intensive computation, has a rising demand for performance computing. Till now models parallelisation mainly conducted at a granularity of sub-basin, which is of low parallel efficiency and tends to cause load unbalance. Few studies conducted at a granularity of grid cell, which has very complicated control logic, leading to poor stability and extensibility of parallel computing. This paper presents a dynamic task scheduling based parallelism scheme with fine granularity and simple control logic. The basic concept is to decouple the dependence among grid-based tasks according to flow connectivity. Independent tasks are parallel executed while dependent tasks are dynamic proceed based on a dynamic task-tree scheduling solution. The approach is applied in an experimental watershed and results illustrate that this approach can highly promote computing speed. Therefore, the approach proposed in this study is valuable for watershed distributed ecohydrological models application.", "paper_title": "Parallelisation of a watershed distributed ecohydrological model with dynamic task scheduling", "paper_id": "WOS:000347629700004"}