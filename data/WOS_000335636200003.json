{"auto_keywords": [{"score": 0.03085994387441879, "phrase": "fault_tolerance"}, {"score": 0.004773476989344654, "phrase": "symbolic_computation"}, {"score": 0.00471193241675062, "phrase": "important_area"}, {"score": 0.0045124316982387315, "phrase": "parallel_execution"}, {"score": 0.004473552224535518, "phrase": "symbolic_computations"}, {"score": 0.0042656009036320585, "phrase": "complex_data"}, {"score": 0.004228839109569368, "phrase": "control_structures"}, {"score": 0.003894963476923956, "phrase": "small-scale_parallel_architectures"}, {"score": 0.003828091961373454, "phrase": "multicore_revolution"}, {"score": 0.003525744120930142, "phrase": "communication_topology"}, {"score": 0.003405671497507337, "phrase": "improved_parallel_symbolic_computation_framework"}, {"score": 0.003261295948815592, "phrase": "initial_evaluation"}, {"score": 0.0026033013834547507, "phrase": "task_placement"}, {"score": 0.0024928553725344933, "phrase": "remote_computations"}, {"score": 0.002449997042686432, "phrase": "higher-level_fault_tolerance_abstractions"}, {"score": 0.0023767561522363367, "phrase": "development_plans"}, {"score": 0.0022758994740331258, "phrase": "weak_scaling"}, {"score": 0.0021604924928015283, "phrase": "simple_symbolic_computations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Parallel functional programming", " Locality control", " Fault tolerance"], "paper_abstract": "Symbolic computation is an important area of both Mathematics and Computer Science, with many large computations that would benefit from parallel execution. Symbolic computations are, however, challenging to parallelise as they have complex data and control structures, and both dynamic and highly irregular parallelism. The SymGridPar framework (SGP) has been developed to address these challenges on small-scale parallel architectures. However the multicore revolution means that the number of cores and the number of failures are growing exponentially, and that the communication topology is becoming increasingly complex. Hence an improved parallel symbolic computation framework is required. This paper presents the design and initial evaluation of SymGridPar2 (SGP2), a successor to SymGridPar that is designed to provide scalability onto 10(5) cores, and hence also provide fault tolerance. We present the SGP2 design goals, principles and architecture. We describe how scalability is achieved using layering and by allowing the programmer to control task placement. We outline how fault tolerance is provided by supervising remote computations, and outline higher-level fault tolerance abstractions. We describe the SGP2 implementation status and development plans. We report the scalability and efficiency, including weak scaling to about 32,000 cores, and investigate the overheads of tolerating faults for simple symbolic computations. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Reliable scalable symbolic computation: The design of SymGridPar2", "paper_id": "WOS:000335636200003"}