{"auto_keywords": [{"score": 0.040791125332030366, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "graph_problem"}, {"score": 0.004631335513513859, "phrase": "node_clustering"}, {"score": 0.0035965032173588753, "phrase": "polynomial_time"}, {"score": 0.003231349231968127, "phrase": "special_case"}, {"score": 0.0027651847105654363, "phrase": "ordinary_sense"}, {"score": 0.0025578967205807843, "phrase": "pseudopolynomial_algorithm"}, {"score": 0.0024842242921857705, "phrase": "dynamic_programming"}, {"score": 0.0021049977753042253, "phrase": "tree_case"}], "paper_keywords": ["maximum node clustering", " knapsack", " complexity", " approximation"], "paper_abstract": "In this note we introduce a graph problem, called Maximum Node Clustering (MNC). We prove that the problem (which is easily shown to be strongly NP-complete) can be approximated in polynomial time within a ratio arbitrarily close to 2. For the special case where the graph is a tree, the problem is NP-complete in the ordinary sense; for this case we present a pseudopolynomial algorithm based on dynamic programming, and a related Fully Polynomial Time Approximation Scheme (FPTAS). Also, the tree case is shown to be exactly solvable in O(2(2/3n) poly (n)) time, where n is the number of nodes.", "paper_title": "A \"maximum node clustering\" problem", "paper_id": "WOS:000237795700002"}