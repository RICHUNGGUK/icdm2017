{"auto_keywords": [{"score": 0.04439563634541904, "phrase": "coherent_logic"}, {"score": 0.03656307570619558, "phrase": "proof_simplification_procedure"}, {"score": 0.00481495049065317, "phrase": "coherent_logic."}, {"score": 0.004734853555630616, "phrase": "proof_simplification"}, {"score": 0.004071121244999291, "phrase": "filtering-out_\"clean\"_and_short_proofs"}, {"score": 0.0038066979615349822, "phrase": "automated_theorem_provers"}, {"score": 0.003727628340195049, "phrase": "theorem_provers"}, {"score": 0.0035444736871640147, "phrase": "readable_proofs"}, {"score": 0.0035148319209810128, "phrase": "natural-language_form"}, {"score": 0.0033844715014920233, "phrase": "first_one"}, {"score": 0.003286420941205958, "phrase": "inference_steps"}, {"score": 0.0032046343506232588, "phrase": "present_proof"}, {"score": 0.0030470980812086247, "phrase": "second_one"}, {"score": 0.0030089355635315005, "phrase": "lifting-up_steps"}, {"score": 0.002971249577042111, "phrase": "branching_steps"}, {"score": 0.002897283610433351, "phrase": "repeated_steps"}, {"score": 0.00284899583294417, "phrase": "third_one"}, {"score": 0.0028015105858516702, "phrase": "proof_fragments"}, {"score": 0.002766415324343602, "phrase": "reductio_ad_absurdum_form"}, {"score": 0.00267495669519805, "phrase": "general_simplification_procedures"}, {"score": 0.002575665611013556, "phrase": "first_order_logic"}, {"score": 0.002459288755782293, "phrase": "simple_generation"}, {"score": 0.002438699976481979, "phrase": "object_level_proofs"}], "paper_keywords": ["Proof simplification", " coherent logic", " readable proofs", " automated theorem provers", " reductio ad absurdum"], "paper_abstract": "The problem of proof simplification draws a lot of attention to itself across various contexts. In this paper, we present one approach for simplifying proofs constructed in the framework of coherent logic. This approach is motivated by the need for filtering-out \"clean\" and short proofs from proof-traces, which typically contain many irrelevant steps, and which are generated by automated theorem provers in this case, theorem provers based on coherent logic. Such \"clean\" proofs can then be used for producing readable proofs in natural-language form. The proof simplification procedure consists of three transformation steps. The first one is based on the elimination of inference steps which are irrelevant for the present proof, also allowing some irrelevant branchings to be eliminated, the second one consists of lifting-up steps through the branching steps, followed by elimination of repeated steps, while the third one serves to convert proof fragments into the reductio ad absurdum form, if possible. In contrast to general simplification procedures, our proof simplification procedure is specific for a fragment of first order logic and therefore simple and easy to implement, and allows simple generation of object level proofs. We proceed to prove that this procedure is correct and terminating, and also that it never increases the size of a proof. Finally, we implement the proof simplification procedure, and provide several example proofs.", "paper_title": "PROOF SIMPLIFICATION IN THE FRAMEWORK OF COHERENT LOGIC", "paper_id": "WOS:000361869000003"}