{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "monte-carlo"}, {"score": 0.03145750997411558, "phrase": "gnu_go"}, {"score": 0.004674952036988355, "phrase": "knowledge-guided_simulations"}, {"score": 0.004450568197899267, "phrase": "light_go-domain_knowledge_items"}, {"score": 0.003877737556673229, "phrase": "random_simulations"}, {"score": 0.0037283556118957156, "phrase": "mc"}, {"score": 0.003312486229143855, "phrase": "desired_knowledge_items"}, {"score": 0.003247868216333148, "phrase": "simulation_games"}, {"score": 0.0031845067058084583, "phrase": "monte-carlo_tree_search"}, {"score": 0.0030314419455512013, "phrase": "extensive_testing"}, {"score": 0.0026933542552712033, "phrase": "appropriate_collection"}, {"score": 0.002640781900605126, "phrase": "five_light_basic_go_knowledge_items"}, {"score": 0.0024891269874339553, "phrase": "simulation_routine"}, {"score": 0.0024405312482831646, "phrase": "go_intellect."}, {"score": 0.002346160830406661, "phrase": "knowledge_items"}, {"score": 0.0022777800735119405, "phrase": "program_performance"}, {"score": 0.0021049977753042253, "phrase": "bare-bone_solid-eye-avoidance"}], "paper_keywords": [""], "paper_abstract": "This article explores light Go-domain knowledge items. Light items are computable in a speed suitable to be used in random simulations in Monte-Carlo (MC) Go. For our put-pose, We evaluated and filtered the desired knowledge items for simulation games in Monte-Carlo Tree Search (MCTS) through extensive testing against GNU Go. As a result, we arrived at an appropriate collection of five light basic Go knowledge items to be included in the simulation routine of Go INTELLECT. This collection of knowledge items improved the program performance by 30 percentage points in winning rates over using bare-bone solid-eye-avoidance knowledge alone in random simulations when tested against GNU Go.", "paper_title": "Monte-Carlo go with knowledge-guided simulations", "paper_id": "WOS:000258752300001"}