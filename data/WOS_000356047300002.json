{"auto_keywords": [{"score": 0.015719716506582538, "phrase": "mixed-dimensional_and_non-manifold_meshes"}, {"score": 0.015133356025853369, "phrase": "ahf"}, {"score": 0.0047006879240764935, "phrase": "array-based_half-facet_mesh_data_structure"}, {"score": 0.004567129988306349, "phrase": "efficient_mesh_query"}, {"score": 0.0043738432231020885, "phrase": "compact_array-based_half-edge"}, {"score": 0.0041287394089001405, "phrase": "x._jiao"}, {"score": 0.003934974152154934, "phrase": "imr"}, {"score": 0.0035570425396761122, "phrase": "neighborhood_queries"}, {"score": 0.0034392837410790293, "phrase": "memory_footprint"}, {"score": 0.003325410433297401, "phrase": "mesh-based_application_codes"}, {"score": 0.0031238084716187805, "phrase": "core_abstraction"}, {"score": 0.0029914213495838998, "phrase": "unique_feature"}, {"score": 0.0029203055813347874, "phrase": "comprehensive_implementation"}, {"score": 0.0028924073548131125, "phrase": "matlab"}, {"score": 0.002837188425640173, "phrase": "rapid_prototyping"}, {"score": 0.0025034338848015166, "phrase": "t.j._tautges"}, {"score": 0.00247944491239733, "phrase": "r._meyers"}, {"score": 0.002443890721386284, "phrase": "k._merkley"}, {"score": 0.00242047093248845, "phrase": "moab"}, {"score": 0.002329009499335603, "phrase": "sandia_national_laboratories"}, {"score": 0.002208853811052348, "phrase": "memory_requirements"}, {"score": 0.0021876814398268775, "phrase": "computational_costs"}], "paper_keywords": ["Mesh generation", " Data structure", " Non-manifold", " Mixed-dimensional meshes", " Sibling half-facets", " MATLAB"], "paper_abstract": "We present an Array-based Half-Facet mesh data structure, or AHF, for efficient mesh query and modification operations. The AHF extends the compact array-based half-edge and half-face data structures (T. J. Alumbaugh and X. Jiao, Compact array-based mesh data structures, IMR, 2005) to support mixed-dimensional and non-manifold meshes. The design goals of our data structure include generality to support such meshes, efficiency of neighborhood queries and mesh modification, compactness of memory footprint, and facilitation of interoperability of mesh-based application codes. To accomplish these goals, our data structure uses sibling half-facets as a core abstraction, coupled with other explicit and implicit representations of entities. A unique feature of our data structure is a comprehensive implementation in MATLAB, which allows rapid prototyping, debugging, testing, and deployment of meshing algorithms and other mesh-based numerical methods. We have also developed a C++ implementation built on top of MOAB (T.J. Tautges, R. Meyers, and K. Merkley, MOAB: A Mesh-Oriented Database, Sandia National Laboratories, 2004). We present some comparisons of the memory requirements and computational costs, and also demonstrate its effectiveness with a few sample applications.", "paper_title": "AHF: array-based half-facet data structure for mixed-dimensional and non-manifold meshes", "paper_id": "WOS:000356047300002"}