{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computation_sequences"}, {"score": 0.004745665541429529, "phrase": "memory-efficient_binary_field_multiplication"}, {"score": 0.0045108906244892165, "phrase": "crucial_building_block"}, {"score": 0.004016782710006123, "phrase": "efficient_finite_field_multiplication"}, {"score": 0.003161474881435185, "phrase": "memory_usage"}, {"score": 0.0029615198132465236, "phrase": "multiplication_algorithm"}, {"score": 0.0028352726653271187, "phrase": "ram_requirement"}, {"score": 0.0027741761880779535, "phrase": "operation_sequences"}, {"score": 0.002579847272930948, "phrase": "proposed_algorithm"}, {"score": 0.002487835869510301, "phrase": "required_ram"}, {"score": 0.0021049977753042253, "phrase": "elliptic_curve_cryptosystem"}], "paper_keywords": ["Finite field", " Binary field", " Multiplication", " Elliptic curve cryptosystem"], "paper_abstract": "Finite field multiplication is a crucial building block for cryptography, especially the elliptic curve public key cryptosystem. Recently, various algorithms for efficient finite field multiplication over devices whose resources are extremely constrained have been proposed. However, most of these proposals only take speed optimization into account, but they do not pay much attention to optimization of memory usage. In this paper, we propose a multiplication algorithm on , which minimizes the RAM requirement by rescheduling operation sequences. According to our experimental results on the ATmega128L microprocessor, the proposed algorithm reduces the amount of required RAM by up to 50 % while maintaining the speed at the same level. We also verify the feasibility of our algorithm by applying it to the elliptic curve cryptosystem.", "paper_title": "Reordering computation sequences for memory-efficient binary field multiplication", "paper_id": "WOS:000326461100021"}