{"auto_keywords": [{"score": 0.049164584944876015, "phrase": "tpn"}, {"score": 0.014288786812255861, "phrase": "ctl"}, {"score": 0.011141831083114008, "phrase": "zone-based_state_space_abstraction"}, {"score": 0.010826048788850457, "phrase": "tpn."}, {"score": 0.00481495049065317, "phrase": "time_petri_nets"}, {"score": 0.004753433756140211, "phrase": "vine_petri_nets"}, {"score": 0.004647655812642494, "phrase": "firing_time_interval"}, {"score": 0.004400462341332809, "phrase": "ltl"}, {"score": 0.004099807729119934, "phrase": "quantitative_timed_properties"}, {"score": 0.004021432924450511, "phrase": "effective_verification"}, {"score": 0.003970013879881066, "phrase": "real-life_systems"}, {"score": 0.003869132124880576, "phrase": "subscript_tctl"}, {"score": 0.003746613650522989, "phrase": "temporal_operators"}, {"score": 0.0036868116297599255, "phrase": "time_interval"}, {"score": 0.0036396555012105365, "phrase": "time_constraint"}, {"score": 0.0036046832119756528, "phrase": "firing_sequences"}, {"score": 0.003524377837382856, "phrase": "tpn-tctl"}, {"score": 0.0032728607237892038, "phrase": "tinted_automata"}, {"score": 0.0032519340026960723, "phrase": "ta"}, {"score": 0.0031691634837160572, "phrase": "over-approximation_operator"}, {"score": 0.0028041227333229883, "phrase": "tpn-tctl_properties"}, {"score": 0.002697799358876857, "phrase": "efficient_on-the-fly_model-checking_algorithms"}, {"score": 0.0023487724551034227, "phrase": "lecture_notes"}, {"score": 0.0023336832083729973, "phrase": "computer_science"}, {"score": 0.002252404639706065, "phrase": "tpn_edition"}, {"score": 0.002195072749159075, "phrase": "old_feature"}, {"score": 0.002104998245546188, "phrase": "tctl"}], "paper_keywords": ["Time Petri Net", " model-checking", " TCTL", " zone based state space abstraction"], "paper_abstract": "We consider Vine Petri Nets (TPN) for which a firing time interval is associated with each transition. State space abstractions for TPN preserving various classes of properties (LTL, CTL and CTL*) can be computed, in terms of so called state classes. Some methods were proposed to check quantitative timed properties but are not suitable for effective verification of properties of real-life systems. In this article, we consider subscript TCTL for TPN (TPN-TCTL) for which temporal operators are extended with a time interval, specifying a time constraint on the firing sequences. We prove the decidability of TPN-TCTL on bounded TPN and give its theoretical complexity. We propose a zone-based state space abstraction that preserves marking reachability and traces of the TPN. As for Tinted Automata (TA), the abstraction may use an over-approximation operator on zones to enforce the termination. A coarser (and efficient) abstraction is then provided and proved exact w.r.t. marking reachability and traces (LTL properties). Finally, we consider a subset of TPN-TCTL properties (TPN-TCTL(S)) for which it is possible to propose efficient on-the-fly model-checking algorithms. Our approach consists in computing and exploring the zone-based state space abstraction. On a Practical point of view, the method is integrated in RoMEO [Gardey et al. (2005, Proceedings of 17th International Conference on CAV05, Vol. 3576 of Lecture Notes in Computer Science, 418-423)], a tool for TPN edition and analysis. In addition to the old feature,, it is now possible to effectively verify a subset of TCTL directly on TPN.", "paper_title": "TCTL Model Checking of Time Petri Nets", "paper_id": "WOS:000273177000024"}