{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "time_requirements"}, {"score": 0.004777392826700429, "phrase": "spectral_clustering"}, {"score": 0.004740126725341152, "phrase": "resource_selection"}, {"score": 0.004703149944841539, "phrase": "task_assignment"}, {"score": 0.004666460260366703, "phrase": "basic_operations"}, {"score": 0.004630055463858585, "phrase": "distributed_computing_environments"}, {"score": 0.004281202319048493, "phrase": "corresponding_algorithms"}, {"score": 0.004100620365805411, "phrase": "user_satisfaction"}, {"score": 0.0038363485899400285, "phrase": "resource-related_performance_metrics"}, {"score": 0.0034510635632071978, "phrase": "fixed_but_not_strict_time_requirements"}, {"score": 0.0033444934455768623, "phrase": "requested_start"}, {"score": 0.0033183674218329904, "phrase": "finish_time"}, {"score": 0.00310435218261112, "phrase": "tasks'_time_requirements"}, {"score": 0.0030440661915657175, "phrase": "resources'_utilization_efficiency"}, {"score": 0.0029500270981001058, "phrase": "exact_time_scheduling"}, {"score": 0.0027814417101979317, "phrase": "time_constraints"}, {"score": 0.002748895580860912, "phrase": "proposed_scheme"}, {"score": 0.002358801930248239, "phrase": "different_resources"}, {"score": 0.002285883886723896, "phrase": "spectral_clustering_methodology"}, {"score": 0.0022680085357731196, "phrase": "normalized_cuts"}, {"score": 0.002250272652754455, "phrase": "experimental_results"}, {"score": 0.0022152149658434916, "phrase": "proposed_algorithm"}, {"score": 0.0021807022596449527, "phrase": "different_values"}, {"score": 0.0021049977753042253, "phrase": "task_requests"}], "paper_keywords": ["Resource assignment", " spectral clustering", " graph partitioning", " interval scheduling", " soft time constraints"], "paper_abstract": "Resource selection and task assignment are basic operations in distributed computing environments, like the grid and the cloud, where tasks compete for resources. The decisions made by the corresponding algorithms should be judged based not only on metrics related to user satisfaction, such as the percentage of tasks served without violating their quality-of-service (QoS) requirements, but also based on resource-related performance metrics, such as the number of resources used to serve the tasks and their utilization efficiency. In our work, we focus on the case of tasks with fixed but not strict time requirements, given in the form of a requested start and finish time. We propose an algorithm for assigning tasks to resources that minimizes the violations of the tasks' time requirements while simultaneously maximizing the resources' utilization efficiency for a given number of resources. The exact time scheduling of the tasks on the resources is then decided by taking into account the time constraints. The proposed scheme exploits concepts derived from graph partitioning, and groups together tasks so as to 1) minimize the time overlapping of the tasks assigned to a given resource and 2) maximize the time overlapping among tasks assigned to different resources. The partitioning is performed using a spectral clustering methodology through normalized cuts. Experimental results show that the proposed algorithm outperforms other scheduling algorithms for different values of the granularity and the load of the task requests.", "paper_title": "Resource Selection for Tasks with Time Requirements Using Spectral Clustering", "paper_id": "WOS:000333469900016"}