{"auto_keywords": [{"score": 0.04714657528813317, "phrase": "dynamic_logic"}, {"score": 0.00481495049065317, "phrase": "plan_revision"}, {"score": 0.004760017604908536, "phrase": "agent_programming"}, {"score": 0.004443276312972159, "phrase": "propositional_version"}, {"score": 0.00436742595270452, "phrase": "agent_programming_language"}, {"score": 0.004007083686875716, "phrase": "agent's_beliefs"}, {"score": 0.003613556291453534, "phrase": "plan_revision_capabilities"}, {"score": 0.0034118234596993836, "phrase": "structural_induction"}, {"score": 0.003130077012135034, "phrase": "plan_revision_aspect"}, {"score": 0.002711109302199029, "phrase": "complete_axiomatization"}, {"score": 0.002444544487772349, "phrase": "non-restricted_plans"}, {"score": 0.002375253757224999, "phrase": "example_proofs"}, {"score": 0.0021049977753042253, "phrase": "procedural_programs"}], "paper_keywords": ["specification and verification of programs", " agent programming languages", " dynamic logic", " operational semantics", " plan revision"], "paper_abstract": "In this paper, we present a dynamic logic for a propositional version of the agent programming language 3APL. A 3APL agent has beliefs and a plan. The execution of a plan changes an agent's beliefs. Plans can be revised during execution by means of plan revision rules. Due to these plan revision capabilities of 3APL agents, plans cannot be analyzed by structural induction as in for example standard propositional dynamic logic. We propose a dynamic logic that is tailored to handle the plan revision aspect of 3APL. The logic is one for plans that are restricted in a certain way. For this logic, we give a sound and complete axiomatization. Further, we discuss how this logic for restricted 3APL plans can be extended to a logic for non-restricted plans and we discuss some example proofs, using the logic. Finally, we consider the relation between proving properties of 3APL agents and proving properties of procedural programs.", "paper_title": "Dynamic logic for plan revision in agent programming", "paper_id": "WOS:000237931300004"}