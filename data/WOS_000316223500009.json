{"auto_keywords": [{"score": 0.031227936348435292, "phrase": "fused_backups"}, {"score": 0.0144793406537485, "phrase": "f_crash_faults"}, {"score": 0.00481495049065317, "phrase": "distributed_systems"}, {"score": 0.004773040022691547, "phrase": "fused_data_structures"}, {"score": 0.004669845451682529, "phrase": "prevalent_solution"}, {"score": 0.004568871736067739, "phrase": "large_data_structures"}, {"score": 0.00450933377534525, "phrase": "distributed_servers"}, {"score": 0.004297560964892607, "phrase": "n_distinct_data_structures"}, {"score": 0.004167982855788402, "phrase": "data_structure"}, {"score": 0.00407781620412982, "phrase": "additional_backups"}, {"score": 0.003802135020791801, "phrase": "erasure_codes"}, {"score": 0.003769006950727621, "phrase": "selective_replication"}, {"score": 0.0036553070575015344, "phrase": "additional_fused_backups"}, {"score": 0.003305243635051068, "phrase": "f_byzantine_faults"}, {"score": 0.0027863537694678094, "phrase": "theoretical_and_experimental_evaluation"}, {"score": 0.0025638362414466278, "phrase": "normal_operation"}, {"score": 0.002508284945907166, "phrase": "practical_usefulness"}, {"score": 0.0024007585788965655, "phrase": "amazon's_highly_available_key-value_store"}, {"score": 0.00237993996358462, "phrase": "dynamo"}, {"score": 0.0023384629381463054, "phrase": "current_replication-based_solution"}], "paper_keywords": ["Distributed systems", " fault tolerance", " data structures"], "paper_abstract": "Replication is the prevalent solution to tolerate faults in large data structures hosted on distributed servers. To tolerate f crash faults (dead/unresponsive data structures) among n distinct data structures, replication requires f + 1 replicas of each data structure, resulting in nf additional backups. We present a solution, referred to as fusion that uses a combination of erasure codes and selective replication to tolerate f crash faults using just f additional fused backups. We show that our solution achieves O(n) savings in space over replication. Further, we present a solution to tolerate f Byzantine faults (malicious data structures), that requires only nf + f backups as compared to the 2nf backups required by replication. We explore the theory of fused backups and provide a library of such backups for all the data structures in the Java Collection Framework. The theoretical and experimental evaluation confirms that the fused backups are space-efficient as compared to replication, while they cause very little overhead for normal operation. To illustrate the practical usefulness of fusion, we use fused backups for reliability in Amazon's highly available key-value store, Dynamo. While the current replication-based solution uses 300 backup structures, we present a solution that only requires 120 backup structures. This results in savings in space as well as other resources such as power.", "paper_title": "Fault Tolerance in Distributed Systems Using Fused Data Structures", "paper_id": "WOS:000316223500009"}