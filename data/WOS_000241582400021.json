{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "positive_table_constraints"}, {"score": 0.04137164392198624, "phrase": "allowed_tuples"}, {"score": 0.004505638402009237, "phrase": "new_algorithm"}, {"score": 0.004406994912939125, "phrase": "generalized_arc_consistency"}, {"score": 0.0043424462097528685, "phrase": "gac"}, {"score": 0.004185108816866677, "phrase": "i.e._constraints"}, {"score": 0.0037463983616303786, "phrase": "valid_and_allowed_tuples"}, {"score": 0.003664315990489347, "phrase": "alternative_fashion"}, {"score": 0.0030017207229983385, "phrase": "valid_tuples"}, {"score": 0.002935905915691203, "phrase": "allowed_tuple"}, {"score": 0.0027673496368158545, "phrase": "valid_tuple"}, {"score": 0.002551231163230566, "phrase": "generic_gac_algorithm"}, {"score": 0.002422552850701705, "phrase": "behaviour_quadratic"}, {"score": 0.0022834017104377525, "phrase": "classical_approaches"}, {"score": 0.0021049977753042253, "phrase": "exponential_behaviour"}], "paper_keywords": [""], "paper_abstract": "In this paper, we propose a new algorithm to establish Generalized Arc Consistency (GAC) on positive table constraints, i.e. constraints defined in extension by a set of allowed tuples. Our algorithm visits the lists of valid and allowed tuples in an alternative fashion when looking for a support (i.e. a tuple that is both allowed and valid). It is then able to jump over sequences of valid tuples containing no allowed tuple and over sequences of allowed tuples containing no valid tuple. Our approach, that can be easily grafted to any generic GAC algorithm, admits on some instances a behaviour quadratic in the arity of the constraints whereas classical approaches, i.e. approaches that focus on either valid or allowed tuples, admit an exponential behaviour. We show the effectiveness of this approach, both theoretically and experimentally.", "paper_title": "Generalized Arc Consistency for positive table constraints", "paper_id": "WOS:000241582400021"}