{"auto_keywords": [{"score": 0.026656236066622294, "phrase": "input_clusters"}, {"score": 0.00481495049065317, "phrase": "rooted_phylogenetic_networks"}, {"score": 0.004696491408936132, "phrase": "conflicting_phylogenetic_signals"}, {"score": 0.004358240019060018, "phrase": "softwired_sense"}, {"score": 0.0035113478590679133, "phrase": "\"tangled\"_region"}, {"score": 0.0033964919992320024, "phrase": "np-hard_problems"}, {"score": 0.0030867203659106727, "phrase": "phylogenetic_network"}, {"score": 0.0027246145918972025, "phrase": "practical_implementation"}, {"score": 0.002646412155387084, "phrase": "comparatively_efficient_cass_algorithm"}, {"score": 0.0025385621498128243, "phrase": "reticulation_number"}, {"score": 0.0023261372216194383, "phrase": "general_cluster_sets"}, {"score": 0.002259346051668556, "phrase": "new_algorithm"}, {"score": 0.0022220423638260015, "phrase": "polynomial-time_all_binary_phylogenetic_networks"}, {"score": 0.0021049977753042253, "phrase": "fixed_r"}], "paper_keywords": ["Rooted phylogenetic networks", " clusters", " reticulate evolution", " parsimony", " computational complexity", " polynomial-time algorithms"], "paper_abstract": "Rooted phylogenetic networks are often used to represent conflicting phylogenetic signals. Given a set of clusters, a network is said to represent these clusters in the softwired sense if, for each cluster in the input set, at least one tree embedded in the network contains that cluster. Motivated by parsimony we might wish to construct such a network using as few reticulations as possible, or minimizing the level of the network, i.e., the maximum number of reticulations used in any \"tangled\" region of the network. Although these are NP-hard problems, here we prove that, for every fixed k >= 0, it is polynomial-time solvable to construct a phylogenetic network with level equal to k representing a cluster set, or to determine that no such network exists. However, this algorithm does not lend itself to a practical implementation. We also prove that the comparatively efficient CASS algorithm correctly solves this problem (and also minimizes the reticulation number) when input clusters are obtained from two not necessarily binary gene trees on the same set of taxa but does not always minimize level for general cluster sets. Finally, we describe a new algorithm which generates in polynomial-time all binary phylogenetic networks with exactly r reticulations representing a set of input clusters (for every fixed r >= 0).", "paper_title": "On the Elusiveness of Clusters", "paper_id": "WOS:000299560500018"}