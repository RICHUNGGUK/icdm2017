{"auto_keywords": [{"score": 0.048364759730099696, "phrase": "volume_hierarchies"}, {"score": 0.03227735483741963, "phrase": "spatial_partitioning_hierarchies"}, {"score": 0.004815112813718618, "phrase": "cache"}, {"score": 0.00450368324850566, "phrase": "novel_algorithm"}, {"score": 0.004422325007817267, "phrase": "cache-efficient_layouts"}, {"score": 0.004212453011596424, "phrase": "polygonal_models"}, {"score": 0.003964007795174772, "phrase": "cache_parameters"}, {"score": 0.003916098498242888, "phrase": "block_sizes"}, {"score": 0.003845313870879042, "phrase": "memory_hierarchy"}, {"score": 0.0037301606780397456, "phrase": "new_probabilistic_model"}, {"score": 0.003640516896245813, "phrase": "runtime_access_patterns"}, {"score": 0.003574695610710444, "phrase": "bvh."}, {"score": 0.0034676182423067307, "phrase": "spatial_localities"}, {"score": 0.0034049123167891955, "phrase": "accessed_nodes"}, {"score": 0.0033029038236817372, "phrase": "cache_misses"}, {"score": 0.0031845067058084583, "phrase": "working_set"}, {"score": 0.0027854565462509095, "phrase": "large_models"}, {"score": 0.002511600086227215, "phrase": "collision_detection"}, {"score": 0.002481200970201421, "phrase": "ray_tracing"}, {"score": 0.0023632309822037637, "phrase": "better_performance"}, {"score": 0.0021307975800397816, "phrase": "underlying_algorithms"}, {"score": 0.0021049977753042253, "phrase": "runtime_applications"}], "paper_keywords": [""], "paper_abstract": "We present a novel algorithm to compute cache-efficient layouts of bounding volume hierarchies (BVHs) of polygonal models. Our approach does not make any assumptions about the cache parameters or block sizes of the memory hierarchy. We introduce a new probabilistic model to predict the runtime access patterns of a BVH. Our layout computation algorithm utilizes parent-child and spatial localities between the accessed nodes to reduce both the number of cache misses and the size of the working set. Our algorithm also works well for spatial partitioning hierarchies including kd-trees. We use our algorithm to compute layouts of BVHs and spatial partitioning hierarchies of large models composed of millions of triangles. We compare our cache-efficient layouts with other layouts in the context of collision detection and ray tracing. In our benchmarks, our layouts consistently show better performance over other layouts and improve the performance of these applications by 26%-300% without any modification of the underlying algorithms or runtime applications.", "paper_title": "Cache-efficient layouts of bounding volume hierarchies", "paper_id": "WOS:000240736800030"}