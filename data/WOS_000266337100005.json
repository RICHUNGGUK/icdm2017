{"auto_keywords": [{"score": 0.03747430649313055, "phrase": "gft"}, {"score": 0.00481495049065317, "phrase": "widely_used_and_useful_technique"}, {"score": 0.004620885890478087, "phrase": "diverse_text_algorithmic_problems"}, {"score": 0.004359216541892805, "phrase": "length_d"}, {"score": 0.003906034193833338, "phrase": "peterlongo_et_al"}, {"score": 0.0034520742915588004, "phrase": "text_t"}, {"score": 0.0033706169103814815, "phrase": "sigma"}, {"score": 0.0029275472554673564, "phrase": "occ"}, {"score": 0.0028288887698018944, "phrase": "t."}, {"score": 0.002752029982133015, "phrase": "new_improved_indexing_scheme"}, {"score": 0.002587010112064415, "phrase": "indexing_data_structure"}, {"score": 0.002193634795186667, "phrase": "slight_increase"}, {"score": 0.0021049977753042253, "phrase": "query_time"}], "paper_keywords": ["Algorithms", " Data structure", " String index", " Gapped-factor", " Suffix tree"], "paper_abstract": "Indexing of factors or substrings is a widely used and useful technique in stringology and can be seen as a tool in solving diverse text algorithmic problems. A gapped-factor is a concatenation of a factor of length k, a gap of length d and another factor of length k'. Such a gapped factor is called a (k-d-k')-gapped-factor. The problem of indexing the gapped-factors was considered recently by Peterlongo et al. (In: Stringology, pp. 182-196, 2006). In particular, Peterlongo et al. devised a data structure, namely a gapped factor tree (GFT) to index the gapped-factors. Given a text T of length n over the alphabet Sigma and the values of the parameters k, d and k', the construction of GFT requires O(n vertical bar Sigma vertical bar) time. Once GFT is constructed, a given (k-d-k')-gapped-factor can be reported in O(k+k'+Occ) time, where Occ is the number of occurrences of that factor in T. In this paper, we present a new improved indexing scheme for the gapped-factors. The improvements we achieve come from two aspects. Firstly, we generalize the indexing data structure in the sense that, unlike GFT, it is independent of the parameters k and k'. Secondly, our data structure can be constructed in O(n log(1+epsilon) n) time and space, where 0 < epsilon < 1. The only price we pay is a slight increase, i.e. an additional log log n term, in the query time.", "paper_title": "Indexing Factors with Gaps", "paper_id": "WOS:000266337100005"}