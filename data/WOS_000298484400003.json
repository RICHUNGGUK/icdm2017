{"auto_keywords": [{"score": 0.049850756629456816, "phrase": "sensor_networks"}, {"score": 0.013227544252732726, "phrase": "communication_radius"}, {"score": 0.012496647892051543, "phrase": "particular_monitored_area"}, {"score": 0.00481495049065317, "phrase": "query_regions"}, {"score": 0.0047013405841819025, "phrase": "strategic_information"}, {"score": 0.004450062018120696, "phrase": "deployed_sensors"}, {"score": 0.004376273644295806, "phrase": "network_persistence"}, {"score": 0.004232331639807526, "phrase": "large_scale_sensor_networks"}, {"score": 0.004202105650903394, "phrase": "sensing_radius"}, {"score": 0.003791763445590174, "phrase": "circular_area"}, {"score": 0.0037288497164934334, "phrase": "sensor's_sensing_radius"}, {"score": 0.0034050320442456155, "phrase": "minimum_connected_cover"}, {"score": 0.0033806943112103397, "phrase": "query_region"}, {"score": 0.00311669276800628, "phrase": "minimal_number"}, {"score": 0.0031018195951638882, "phrase": "connected_sensors"}, {"score": 0.0030796423997279335, "phrase": "np_hard_problem"}, {"score": 0.002887028262617443, "phrase": "different_sensing"}, {"score": 0.0028255311595541868, "phrase": "robust_solutions"}, {"score": 0.0028053237950173508, "phrase": "minimum_connected_cover_problem"}, {"score": 0.00276534038425712, "phrase": "transient_faults"}, {"score": 0.0027324553458944827, "phrase": "internal_memory"}, {"score": 0.002661474607275484, "phrase": "extended_versions"}, {"score": 0.0026424374176438115, "phrase": "multi-hop_information"}, {"score": 0.0026047695117821634, "phrase": "self-stabilization_property"}, {"score": 0.002549269480908849, "phrase": "extended_simulations"}, {"score": 0.0025310328434864256, "phrase": "self-stabilizing_system"}, {"score": 0.0024711787041199057, "phrase": "arbitrary_state"}, {"score": 0.0023783352461520368, "phrase": "desired_behavior"}, {"score": 0.0023388183537341213, "phrase": "finite_number"}, {"score": 0.00226715959118724, "phrase": "better_performance"}, {"score": 0.0022188370388602813, "phrase": "self-stabilizing_solutions"}, {"score": 0.0021819644700616543, "phrase": "multi-hop_solutions"}, {"score": 0.002166349705365602, "phrase": "better_approximation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["connectivity", " coverage", " query response system", " distributed algorithm", " self-stabilizing", " sensor networks"], "paper_abstract": "Sensor networks are mainly used to gather strategic information in various monitored areas. Sensors may be deployed in zones where their internal memory, or the sensors themselves, can be corrupted. Since deployed sensors cannot be easily replaced, network persistence and robustness are the two main issues that have to be addressed while efficiently deploying large scale sensor networks. The sensing radius of a sensor is the distance within which a sensor can monitor certain events. The communication radius of a sensor is the distance within which a sensor can transmit and receive data. A sensor is said to cover a particular monitored area if a circular area, with radius equal to that sensor's sensing radius, covers that area. A set of sensors is said to be strongly connected if any two sensors in the set can communicate with each other, either directly or indirectly. The goal of forming a minimum connected cover of a query region in sensor networks is to select a subset of nodes that entirely covers a particular monitored area, which is strongly connected, and which does not contain a subset with the same properties. Selecting a minimal number of connected sensors is an NP hard problem. In our work, we address minimality in terms of inclusion. In this paper, we consider the most general case, wherein every sensor has a different sensing and communication radius. We propose two novel and robust solutions to the minimum connected cover problem that can cope with both transient faults (corruptions of the internal memory of sensors) and sensor crash/join. Also, our proposal includes extended versions which use multi-hop information. We also prove the self-stabilization property of our solutions, both analytically and through extended simulations. A self-stabilizing system is a system that, when started from an arbitrary state, is always guaranteed to recover following the occurrence of (transient) faults and converge to a desired behavior (legitimate state) in a finite number of steps. Via simulations, we also conclude that our solutions provide better performance, in terms of coverage, than preexisting self-stabilizing solutions. Moreover, we observe that multi-hop solutions produce a better approximation to an optimal cover set. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "Self-stabilizing minimum connected covers of query regions in sensor networks", "paper_id": "WOS:000298484400003"}