{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "overlaid_data_structures"}, {"score": 0.00466085208934021, "phrase": "static_program_analysis"}, {"score": 0.004282787299993434, "phrase": "multiple_data_structures"}, {"score": 0.0037844916274672544, "phrase": "systems_code"}, {"score": 0.003639471039860495, "phrase": "multiple_types"}, {"score": 0.0035923719610602214, "phrase": "indexing_structures"}, {"score": 0.003236802914194731, "phrase": "multiple_sub-analyses"}, {"score": 0.003133052778244851, "phrase": "non-overlaid_data_structures"}, {"score": 0.0029933487820771217, "phrase": "second_idea"}, {"score": 0.002804478352027886, "phrase": "ghost_states"}, {"score": 0.0027681550491613603, "phrase": "ghost_instructions"}, {"score": 0.002576603426735759, "phrase": "high_level"}, {"score": 0.002189009136006588, "phrase": "memory_safety"}, {"score": 0.00214659338413584, "phrase": "linux_deadline"}, {"score": 0.002132637840285576, "phrase": "io_scheduler"}, {"score": 0.0021049977753042253, "phrase": "afs_server"}], "paper_keywords": ["Automatic program verification", " Memory safety", " Shape analysis", " Overlaid data structure"], "paper_abstract": "We present a static program analysis for overlaid data structures such that a node in the structure includes links for multiple data structures and these links are intended to be used at the same time. These overlaid data structures are frequently used in systems code, in order to impose multiple types of indexing structures over the same set of nodes. Our analysis implements two main ideas. The first is to run multiple sub-analyses that track information about non-overlaid data structures, such as lists. The second idea is to control the communication among the sub-analyses using ghost states and ghost instructions. The purpose of this control is to achieve a high level of efficiency by allowing only necessary information to be transferred among sub-analyses and at as few program points as possible. Our analysis has been successfully applied to prove the memory safety of the Linux deadline IO scheduler and AFS server.", "paper_title": "A divide-and-conquer approach for analysing overlaid data structures", "paper_id": "WOS:000305785600002"}