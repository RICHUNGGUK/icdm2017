{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "candidate_generation"}, {"score": 0.004685575787741084, "phrase": "active_research_fields"}, {"score": 0.004518442937844318, "phrase": "growing_use"}, {"score": 0.004477595431209663, "phrase": "xml_documents"}, {"score": 0.004437115547184535, "phrase": "tree_data"}, {"score": 0.004278807087784626, "phrase": "frequent_subtrees"}, {"score": 0.004144908086646161, "phrase": "active_research_problem"}, {"score": 0.0041074234667687875, "phrase": "traditional_methods"}, {"score": 0.004070276454809864, "phrase": "e._g."}, {"score": 0.0040334640350288, "phrase": "itemset_mining"}, {"score": 0.003996983218174335, "phrase": "transactional_databases"}, {"score": 0.0037506567448470163, "phrase": "tree-based_data"}, {"score": 0.0035194572615570977, "phrase": "generate-and-prune_methods"}, {"score": 0.0034092396400930446, "phrase": "large_volume"}, {"score": 0.0031271133933467575, "phrase": "unfrequent_subtrees"}, {"score": 0.0030429511467945525, "phrase": "novel_approach"}, {"score": 0.002947611960613497, "phrase": "equivalence_classes"}, {"score": 0.0026913130726432645, "phrase": "right_equivalence_relation"}, {"score": 0.0025833500717948343, "phrase": "left_equivalence_relation"}, {"score": 0.002536763634539386, "phrase": "third_one"}, {"score": 0.002468450551616404, "phrase": "root_equivalence_relation"}, {"score": 0.0023694065215394593, "phrase": "new_method"}, {"score": 0.0022537212268979507, "phrase": "frequent_subtree"}, {"score": 0.0021049977753042253, "phrase": "synthetic_and_real_datasets"}], "paper_keywords": ["Data mining", " tree mining", " candidate generation", " equivalent classes"], "paper_abstract": "With the rise of active research fields such as bioinformatics, taxonomies and the growing use of XML documents, tree data are playing a more and more important role. Mining for frequent subtrees from these data is thus an active research problem and traditional methods (e. g., itemset mining from transactional databases) have to be extended in order to tackle the problem of handling tree-based data. Some approaches have been proposed in the literature, mainly based on generate-and-prune methods. However, they generate a large volume of candidates before pruning them, whereas it could be possible to discard some solutions as they contain unfrequent subtrees. We thus propose a novel approach, called pivot, based on equivalence classes in order to decrease the number of candidates. Three equivalence classes are defined, the first one relying on a right equivalence relation between two trees, the second one on a left equivalence relation, and the third one on the ground of a root equivalence relation. In this paper, we introduce this new method, showing that it is complete (i.e., no frequent subtree is forgotten), and efficient, as illustrated by the experiments led on synthetic and real datasets.", "paper_title": "Tree mining: Equivalence classes for candidate generation", "paper_id": "WOS:000269802800003"}