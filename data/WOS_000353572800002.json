{"auto_keywords": [{"score": 0.03787243357790546, "phrase": "product_metrics"}, {"score": 0.015497508616002735, "phrase": "defect_prediction_models"}, {"score": 0.014309122615542413, "phrase": "process_metrics"}, {"score": 0.009372795736134679, "phrase": "data_set"}, {"score": 0.008478035732568605, "phrase": "advanced_models"}, {"score": 0.004947515662155431, "phrase": "simple_models"}, {"score": 0.00491912955833869, "phrase": "ndc"}, {"score": 0.004862807958485435, "phrase": "effect_size"}, {"score": 0.0046114557978424245, "phrase": "software_metrics"}, {"score": 0.00455865160794147, "phrase": "defect_indicators"}, {"score": 0.0044934920013049145, "phrase": "efficient_allocation"}, {"score": 0.004442032546224076, "phrase": "quality_assurance"}, {"score": 0.0038684381518304177, "phrase": "product_metric-based_defect_prediction_models"}, {"score": 0.003802135020791801, "phrase": "empirical_evaluation"}, {"score": 0.0035480536257462567, "phrase": "wide_range"}, {"score": 0.0035276600002380316, "phrase": "software_projects"}, {"score": 0.0029672941061574375, "phrase": "statistical_tests"}, {"score": 0.0029332611651817528, "phrase": "effect_sizes"}, {"score": 0.0028912667826416494, "phrase": "advanced_defect_prediction_models"}, {"score": 0.002800977405203334, "phrase": "distinct_committers"}, {"score": 0.0025687721301935465, "phrase": "simple_ones"}, {"score": 0.00245997322259401, "phrase": "defect_prediction"}, {"score": 0.0024038934143954136, "phrase": "ps"}, {"score": 0.002288761966815233, "phrase": "investigated_process_metrics"}, {"score": 0.0021729011671662536, "phrase": "modified_lines"}, {"score": 0.0021049996562565424, "phrase": "nml"}], "paper_keywords": ["Software metrics", " Product metrics", " Process metrics", " Defect prediction models", " Software defect prediction"], "paper_abstract": "The knowledge about the software metrics which serve as defect indicators is vital for the efficient allocation of resources for quality assurance. It is the process metrics, although sometimes difficult to collect, which have recently become popular with regard to defect prediction. However, in order to identify rightly the process metrics which are actually worth collecting, we need the evidence validating their ability to improve the product metric-based defect prediction models. This paper presents an empirical evaluation in which several process metrics were investigated in order to identify the ones which significantly improve the defect prediction models based on product metrics. Data from a wide range of software projects (both, industrial and open source) were collected. The predictions of the models that use only product metrics (simple models) were compared with the predictions of the models which used product metrics, as well as one of the process metrics under scrutiny (advanced models). To decide whether the improvements were significant or not, statistical tests were performed and effect sizes were calculated. The advanced defect prediction models trained on a data set containing product metrics and additionally Number of Distinct Committers (NDC) were significantly better than the simple models without NDC, while the effect size was medium and the probability of superiority (PS) of the advanced models over simple ones was high (, , ), which is a substantial finding useful in defect prediction. A similar result with slightly smaller PS was achieved by the advanced models trained on a data set containing product metrics and additionally all of the investigated process metrics (, , ). The advanced models trained on a data set containing product metrics and additionally Number of Modified Lines (NML) were significantly better than the simple models without NML, but the effect size was small (, ). Hence, it is reasonable to recommend the NDC process metric in building the defect prediction models.", "paper_title": "Which process metrics can significantly improve defect prediction models? An empirical study", "paper_id": "WOS:000353572800002"}