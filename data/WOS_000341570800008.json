{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "suffix_array"}, {"score": 0.004738078275822989, "phrase": "efficient_data_structure"}, {"score": 0.0046875099587735825, "phrase": "in-memory_pattern_search"}, {"score": 0.004466519142879166, "phrase": "external-memory_pattern_search"}, {"score": 0.004395185177346749, "phrase": "two-level_structures"}, {"score": 0.004301834610818624, "phrase": "internal_index"}, {"score": 0.004210458358142504, "phrase": "correct_block"}, {"score": 0.004165497627464024, "phrase": "suffix_pointers"}, {"score": 0.003969018740062018, "phrase": "new_two-level_suffix"}, {"score": 0.003802135020791801, "phrase": "significantly_less_disk_space"}, {"score": 0.0035457302646174148, "phrase": "disk_blocks"}, {"score": 0.0031167895790050405, "phrase": "new_in-memory_structure"}, {"score": 0.002937879003671346, "phrase": "common_patterns"}, {"score": 0.0027395968397212053, "phrase": "web_text"}, {"score": 0.0026384167183586015, "phrase": "main_memory"}, {"score": 0.0025273383208209922, "phrase": "new_approach"}, {"score": 0.002382182688788248, "phrase": "previous_two-level_mechanisms"}, {"score": 0.0023314867226678555, "phrase": "memory_footprint"}, {"score": 0.0022696277881969896, "phrase": "text_size"}, {"score": 0.0021049977753042253, "phrase": "compact_fm-index."}], "paper_keywords": ["String search", " pattern matching", " suffix array", " Burrows-Wheeler transform", " succinct data structure", " disk-based algorithm", " experimental evaluation"], "paper_abstract": "The suffix array is an efficient data structure for in-memory pattern search. Suffix arrays can also be used for external-memory pattern search, via two-level structures that use an internal index to identify the correct block of suffix pointers. In this paper, we describe a new two-level suffix array-based index structure that requires significantly less disk space than previous approaches. Key to the saving is the use of disk blocks that are based on prefixes rather than the more usual uniform-sampling approach, allowing reductions between blocks and subparts of other blocks. We also describe a new in-memory structure-the condensed BWT-and show that it allows common patterns to be resolved without access to the text. Experiments using 64 GB of English web text on a computer with 4 GB of main memory demonstrate the speed and versatility of the new approach. For this data, the index is around one-third the size of previous two-level mechanisms; and the memory footprint of as little as 1% of the text size means that queries can be processed more quickly than is possible with a compact FM-INDEX.", "paper_title": "Large-Scale Pattern Search Using Reduced-Space On-Disk Suffix Arrays", "paper_id": "WOS:000341570800008"}