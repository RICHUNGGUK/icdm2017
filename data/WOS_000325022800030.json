{"auto_keywords": [{"score": 0.04871093899700793, "phrase": "mapreduce"}, {"score": 0.045760267667118756, "phrase": "matrix_chain_multiplication_problem"}, {"score": 0.00481495049065317, "phrase": "inter-operation_parallelism"}, {"score": 0.004745665541429529, "phrase": "matrix_chain_multiplication"}, {"score": 0.0038179283509963695, "phrase": "different_points"}, {"score": 0.0036553070575015344, "phrase": "mapreduce_algorithms"}, {"score": 0.0034995881411519925, "phrase": "scalable_computation"}, {"score": 0.0034491650585057754, "phrase": "large_matrices"}, {"score": 0.0030933709720820605, "phrase": "single_multiplication"}, {"score": 0.0029830992938695033, "phrase": "matrix_multiplication"}, {"score": 0.002542642270762272, "phrase": "multi-way_join"}, {"score": 0.002230984431056064, "phrase": "proposed_algorithms"}], "paper_keywords": ["Matrix chain multiplication", " Multi-way join", " MapReduce", " Hadoop"], "paper_abstract": "In this paper, we address the matrix chain multiplication problem, i.e., the multiplication of several matrices. Although several studies have investigated the problem, our approach has some different points. First, we propose MapReduce algorithms that allow us to provide scalable computation for large matrices. Second, we transform the matrix chain multiplication problem from sequential multiplications of two matrices into a single multiplication of several matrices. Since matrix multiplication is associative, this approach helps to improve the performance of the algorithms. To implement the idea, we adopt multi-way join algorithms in MapReduce that have been studied in recent years. In our experiments, we show that the proposed algorithms are fast and scalable, compared to several baseline algorithms.", "paper_title": "Exploiting inter-operation parallelism for matrix chain multiplication using MapReduce", "paper_id": "WOS:000325022800030"}