{"auto_keywords": [{"score": 0.04963913874714364, "phrase": "ncs"}, {"score": 0.035256965084423886, "phrase": "global_optimisation"}, {"score": 0.00481495049065317, "phrase": "protocol_stack"}, {"score": 0.0047268728636719725, "phrase": "deterministic_and_stochastic_petri_net"}, {"score": 0.004534517530868195, "phrase": "networked_control_systems"}, {"score": 0.004431041346291019, "phrase": "full_or_partial_reconfiguration"}, {"score": 0.004309968592440261, "phrase": "optimised_communication_service"}, {"score": 0.004270347498153512, "phrase": "system_performance"}, {"score": 0.004192190072470619, "phrase": "field_testing"}, {"score": 0.004040123129261597, "phrase": "reconfigurable_protocol_stack"}, {"score": 0.003966162568548304, "phrase": "petri_net_formal_description_technique"}, {"score": 0.0038577428353448596, "phrase": "intuitive_representation"}, {"score": 0.003822263046602146, "phrase": "tool_support"}, {"score": 0.003787108326100196, "phrase": "analytical_capabilities"}, {"score": 0.0036665842836420223, "phrase": "different_layers"}, {"score": 0.003616108223034427, "phrase": "osi_model"}, {"score": 0.0035498822293046884, "phrase": "common_practice"}, {"score": 0.003312121699003206, "phrase": "protocol_reconfiguration"}, {"score": 0.003177154457204775, "phrase": "general_modelling_analysis_framework"}, {"score": 0.00309023627455429, "phrase": "cross-layer_concept"}, {"score": 0.002991823455621222, "phrase": "efficiency_system_scheduling_model"}, {"score": 0.002936997013291548, "phrase": "time_constraint"}, {"score": 0.00274017282519193, "phrase": "upper_and_lower_layers"}, {"score": 0.0026042472337367015, "phrase": "cross-layer_design"}, {"score": 0.0024750474634399797, "phrase": "information_sharing"}, {"score": 0.0024522530645471065, "phrase": "protocol_layers"}, {"score": 0.0023522423291484212, "phrase": "controller_area_network"}, {"score": 0.0022878396720586044, "phrase": "case_study"}, {"score": 0.0022563011263787847, "phrase": "simulation_results"}, {"score": 0.0022355167967736326, "phrase": "deterministic_and_stochastic_petri-net"}, {"score": 0.0021344259291927914, "phrase": "message_scheduling_scheme"}, {"score": 0.0021049977753042253, "phrase": "better_system_performance"}], "paper_keywords": ["networked control system", " deterministic and stochastic Petri-net", " cross-layer design", " controller area network"], "paper_abstract": "Protocol stack is the basis of the networked control systems (NCS). Full or partial reconfiguration of protocol stack offers both optimised communication service and system performance. Nowadays, field testing is unrealistic to determine the performance of reconfigurable protocol stack; and the Petri net formal description technique offers the best combination of intuitive representation, tool support and analytical capabilities. Traditionally, separation between the different layers of the OSI model has been a common practice. Nevertheless, such a layered modelling analysis framework of protocol stack leads to the lack of global optimisation for protocol reconfiguration. In this article, we proposed a general modelling analysis framework for NCS based on the cross-layer concept, which is to establish an efficiency system scheduling model through abstracting the time constraint, the task interrelation, the processor and the bus sub-models from upper and lower layers (application, data link and physical layer). Cross-layer design can help to overcome the inadequacy of global optimisation based on information sharing between protocol layers. To illustrate the framework, we take controller area network (CAN) as a case study. The simulation results of deterministic and stochastic Petri-net (DSPN) model can help us adjust the message scheduling scheme and obtain better system performance.", "paper_title": "Modelling the protocol stack in NCS with deterministic and stochastic petri net", "paper_id": "WOS:000288195800014"}