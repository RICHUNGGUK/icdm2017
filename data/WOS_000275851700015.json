{"auto_keywords": [{"score": 0.015430452414822798, "phrase": "high-level_designs"}, {"score": 0.00481495049065317, "phrase": "handle_don't-care"}, {"score": 0.004579780586951551, "phrase": "initialized_registers"}, {"score": 0.004494570360108983, "phrase": "-care_conditions"}, {"score": 0.004274981117736524, "phrase": "additional_flexibility"}, {"score": 0.003965468669507077, "phrase": "gate_level"}, {"score": 0.0036553070575015344, "phrase": "transfer_levels"}, {"score": 0.0033905067962602515, "phrase": "high-level_synthesis"}, {"score": 0.0032246835734680377, "phrase": "innovative_methods"}, {"score": 0.00262191949451482, "phrase": "routing_resources"}, {"score": 0.0025569530630374995, "phrase": "reset_signals"}, {"score": 0.002493592357827492, "phrase": "routing_problem"}, {"score": 0.0023864566654035924, "phrase": "five-stage_pipelined_processor"}, {"score": 0.002283913454238574, "phrase": "control_registers"}], "paper_keywords": ["Don't-care (DC)", " initialized register reduction", " symbolic simulation", " synthesis"], "paper_abstract": "Don't-care conditions are utilized by many synthesis tools because such conditions provide additional flexibility for logic optimization. However, most techniques only focus on the gate level because it is difficult to handle such conditions accurately at behavior and register transfer levels. This is problematic since the trend is to move toward high-level synthesis. In this paper, we propose innovative methods to handle such conditions accurately at high-level designs. In addition, we propose three novel algorithms based on our new methods to minimize the number of registers that need to be initialized, which can reduce the routing resources used by the reset signals and alleviate the routing problem. We applied our techniques to a five-stage pipelined processor and successfully reduced the number of control registers that need to be initialized by 53%, demonstrating the effectiveness of our approach.", "paper_title": "Accurately Handle Don't-Care Conditions in High-Level Designs and Application for Reducing Initialized Registers", "paper_id": "WOS:000275851700015"}