{"auto_keywords": [{"score": 0.04926219622874719, "phrase": "queuing_networks"}, {"score": 0.00481495049065317, "phrase": "queuing_network_simulation"}, {"score": 0.004773692073488661, "phrase": "gpu-based_hardware_acceleration"}, {"score": 0.004632039024076267, "phrase": "computer_simulation_studies"}, {"score": 0.004379977556546879, "phrase": "supply_chains"}, {"score": 0.004323776691055635, "phrase": "work_flow"}, {"score": 0.003933000051147382, "phrase": "discrete_event_simulations"}, {"score": 0.0038326698261576023, "phrase": "significant_delays"}, {"score": 0.003130077012135034, "phrase": "fairly_inexpensive_and_commonly_available_graphics_processing_units"}, {"score": 0.0029467742734417255, "phrase": "gpu-based_algorithm"}, {"score": 0.0028468767420392945, "phrase": "gpu_approach"}, {"score": 0.002680114113899346, "phrase": "approximation_error"}, {"score": 0.002622947550220266, "phrase": "cluster_size_increases"}, {"score": 0.0024906610581090223, "phrase": "small_error"}, {"score": 0.0024586427394152196, "phrase": "specific_implementation"}, {"score": 0.0023958326775913165, "phrase": "network_simulation"}, {"score": 0.002294686545883412, "phrase": "error_analysis_trends"}, {"score": 0.0022651818270925704, "phrase": "reasonably_accurate_output_statistics"}, {"score": 0.002236055625099805, "phrase": "experimental_results"}, {"score": 0.0022073031056287903, "phrase": "mobile_ad"}, {"score": 0.0021049977753042253, "phrase": "time-dependent_output_statistics"}], "paper_keywords": ["Accuracy", " CUDA", " GPU", " parallel discrete event simulation", " queuing network", " SIMD", " time interval"], "paper_abstract": "Queuing networks are used widely in computer simulation studies. Examples of queuing networks can be found in areas such as the supply chains, manufacturing work flow, and internet routing. If the networks are fairly small in size and complexity, it is possible to create discrete event simulations of the networks without incurring significant delays in analyzing the system. However, as the networks grow in size, such analysis can be time consuming, and thus require more expensive parallel processing computers or clusters. We have constructed a set of tools that allow the analyst to simulate queuing networks in parallel, using the fairly inexpensive and commonly available graphics processing units (GPUs) found in most recent computing platforms. We present an analysis of a GPU-based algorithm, describing benefits and issues with the GPU approach. The algorithm clusters events, achieving speedup at the expense of an approximation error which grows as the cluster size increases. We were able to achieve 10-x speedup using our approach with a small error in a specific implementation of a synthetic closed queuing network simulation. This error can be mitigated, based on error analysis trends, obtaining reasonably accurate output statistics. The experimental results of the mobile ad hoc network simulation show that errors occur only in the time-dependent output statistics.", "paper_title": "An Analysis of Queuing Network Simulation Using GPU-Based Hardware Acceleration", "paper_id": "WOS:000287919900004"}