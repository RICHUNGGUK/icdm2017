{"auto_keywords": [{"score": 0.03590031820327418, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "stack-based_parallel_recursion_on_graphics_processors"}, {"score": 0.004747429622531595, "phrase": "recent_research"}, {"score": 0.004647911247507267, "phrase": "promising_results"}, {"score": 0.004550469496119256, "phrase": "graphics_processing_units"}, {"score": 0.004361644989356558, "phrase": "general-purpose_computation"}, {"score": 0.004240116703465252, "phrase": "today's_gpus"}, {"score": 0.004121960535174029, "phrase": "recursive_functions"}, {"score": 0.003923023699005215, "phrase": "inherently_recursive_algorithms"}, {"score": 0.0038407203087210775, "phrase": "tree_traversal"}, {"score": 0.0037868092509097404, "phrase": "gpu_programmers"}, {"score": 0.003334309053314909, "phrase": "programming_difficulty"}, {"score": 0.0029565620771207003, "phrase": "first_step"}, {"score": 0.0025664295665392203, "phrase": "stack_sharing"}, {"score": 0.0025125151618810523, "phrase": "tree_traversals"}, {"score": 0.0023742031943872464, "phrase": "performance_tradeoffs"}, {"score": 0.0021049977753042253, "phrase": "gpu_compiler_writers"}], "paper_keywords": ["Algorithms", " Languages", " Stack", " Parallel Recursion", " Graphics Processors"], "paper_abstract": "Recent research has shown promising results on using graphics processing units (GPUs) to accelerate general-purpose computation. However, today's GPUs do not support recursive functions. As a result, for inherently recursive algorithms such as tree traversal, GPU programmers need to explicitly use stacks to emulate the recursion. Parallelizing such stack-based implementation on the GPU increases the programming difficulty; moreover, it is unclear how to improve the efficiency of such parallel implementations. As a first step to address both ease of programming and efficiency issues, we propose three parallel stack implementation alternatives that differ in the granularity of stack sharing. Taking tree traversals as an example, we study the performance tradeoffs between these alternatives and analyze their behaviors in various situations. Our results could be useful to both GPU programmers and GPU compiler writers.", "paper_title": "Stack-Based Parallel Recursion on Graphics Processors", "paper_id": "WOS:000272014600039"}