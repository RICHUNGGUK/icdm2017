{"auto_keywords": [{"score": 0.02575847313982304, "phrase": "xml"}, {"score": 0.00481495049065317, "phrase": "workflow_specification"}, {"score": 0.004065156038847781, "phrase": "workflow_specification_formalisms"}, {"score": 0.0035358770665604657, "phrase": "widely_different_workflow_systems"}, {"score": 0.0033306180744375616, "phrase": "common_representation"}, {"score": 0.0026480044868438875, "phrase": "temporal_constraints"}, {"score": 0.0023727863021828547, "phrase": "relational_databases"}, {"score": 0.0023259039577313294, "phrase": "underlying_data_models"}, {"score": 0.0022127018991294047, "phrase": "considerable_power"}, {"score": 0.002168975681697056, "phrase": "static_constraints"}, {"score": 0.0021049977753042253, "phrase": "apparently_much_richer_workflow_control_mechanisms"}], "paper_keywords": ["Design", " Languages", " Theory"], "paper_abstract": "We address the problem of comparing the expressiveness of workflow specification formalisms using a notion of view of a workflow. Views allow to compare widely different workflow systems by mapping them to a common representation capturing the observables relevant to the comparison. Using this framework, we compare the expressiveness of several workflow specification mechanisms, including automata, temporal constraints, and pre-and postconditions, with XML and relational databases as underlying data models. One surprising result shows the considerable power of static constraints to simulate apparently much richer workflow control mechanisms.", "paper_title": "Comparing Workflow Specification Languages: A Matter of Views", "paper_id": "WOS:000304769100003"}