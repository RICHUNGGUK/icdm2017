{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "random_numbers"}, {"score": 0.004492841495994535, "phrase": "popular_pseudo-random_number_generators"}, {"score": 0.004390312150344245, "phrase": "general_purpose_machine-learning_techniques"}, {"score": 0.004290112502811656, "phrase": "novel_approach"}, {"score": 0.004211594861013822, "phrase": "pseudo-random_number_generators"}, {"score": 0.003752275718257509, "phrase": "machine-learning_methods"}, {"score": 0.0032665093519968083, "phrase": "matlab's_function"}, {"score": 0.0032066653632708965, "phrase": "method_state"}, {"score": 0.0030617935728586006, "phrase": "matlab_versions"}, {"score": 0.0024409345168575833, "phrase": "large_simulations"}, {"score": 0.002396179086883189, "phrase": "randu"}, {"score": 0.0023741093119014436, "phrase": "ansic"}, {"score": 0.0023091093387071593, "phrase": "c_library"}, {"score": 0.002235553080322112, "phrase": "park"}, {"score": 0.0022047672117785277, "phrase": "miller"}, {"score": 0.0021049977753042253, "phrase": "microsoft_c_compiler"}], "paper_keywords": [""], "paper_abstract": "We describe how dependencies between random numbers generated with some popular pseudo-random number generators can be detected using general purpose machine-learning techniques. This is a novel approach, since usually pseudo-random number generators are evaluated using tests specifically designed for this purpose. Such specific tests (ire more sensitive. Hence, detecting the dependence using machine-learning methods implies that the dependence is indeed very strong. 7, he most important example of a generator, where dependencies may easily be found using our approach, is MATLAB's function rand if the method state is used. This method was the default in MATLAB versions between 5 (1995) and 7.3 (2006b), i.e., for more than 10 years. In order to evaluate the strength of the dependence in it, we used the same machine-teaming tools to detect dependencies in some other random number generators, which are known to be bad or insufficient for large simulations: the infamous RANDU, ANSIC, the oldest generator in C library, minimal standard generator suggested by Park. and Miller (1988), and the rand function in Microsoft C compiler.", "paper_title": "Learning random numbers: A MATLAB anomaly", "paper_id": "WOS:000254579900005"}