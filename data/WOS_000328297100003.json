{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "python"}, {"score": 0.004751972849082626, "phrase": "high_energy_physics_data_analysis"}, {"score": 0.004705278218845159, "phrase": "lhc_era"}, {"score": 0.004659040279237174, "phrase": "world's_largest_particle_collider"}, {"score": 0.004646782337848048, "phrase": "lhc"}, {"score": 0.004568336657675134, "phrase": "cern"}, {"score": 0.00452305213308044, "phrase": "geneva"}, {"score": 0.00446384610114756, "phrase": "huge_amount"}, {"score": 0.004206948146882303, "phrase": "data_analysis"}, {"score": 0.004179328666330398, "phrase": "high_energy_physics"}, {"score": 0.004152214804874833, "phrase": "hep"}, {"score": 0.004070644790285917, "phrase": "experimental_data"}, {"score": 0.004043916535301396, "phrase": "custom_software_frameworks"}, {"score": 0.0038616499489536123, "phrase": "dedicated_tools"}, {"score": 0.0037736090925144807, "phrase": "filter_functions"}, {"score": 0.003748823861741978, "phrase": "analysis_algorithms"}, {"score": 0.003675437054650504, "phrase": "physics_underlain"}, {"score": 0.003651294258881569, "phrase": "modern_hep_experiments"}, {"score": 0.0036153760112398485, "phrase": "complex_software_frameworks"}, {"score": 0.0035562929339427803, "phrase": "analysis_code"}, {"score": 0.0034981720122414153, "phrase": "easy_task"}, {"score": 0.003452357563167821, "phrase": "learning_curve"}, {"score": 0.0033294278310493524, "phrase": "dedicated_analysis"}, {"score": 0.0032534813517243275, "phrase": "better_control"}, {"score": 0.0031272833420309685, "phrase": "different_groups"}, {"score": 0.0027228088474257426, "phrase": "physics_analyses"}, {"score": 0.0026871217010784143, "phrase": "final_analysis_code"}, {"score": 0.002482585701725093, "phrase": "dynamic_nature"}, {"score": 0.002433926157079375, "phrase": "prototyping_speed"}, {"score": 0.0024099543488850946, "phrase": "key_features"}, {"score": 0.0023317370273404454, "phrase": "watchman"}, {"score": 0.0021470954708827125, "phrase": "hep_data_analysis_code"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Large Hadron Collider", " LHC", " High Energy Physics", " Data analysis", " Computer aided software engineering", " Python", " Physics framework"], "paper_abstract": "The world's largest particle collider LHC is taking data at CERN, in Geneva, providing a huge amount of data to be looked at, of the order of several Petabytes per year. Nowadays, Data Analysis in High Energy Physics (HEP) means handling billions of experimental data in custom software frameworks. Physicists have to access and select data interacting with the experiment using dedicated tools; they also have to apply filter functions and analysis algorithms to test hypotheses about the physics underlain. Modern HEP experiments rely on complex software frameworks, hence writing the analysis code is not always an easy task, and the learning curve is usually quite steep. Moreover each hypothesis requires a dedicated analysis, in order to have a better control on it and to be able to validate the results among different groups of researchers. And the writing of so many analyses can be error prone and time consuming. In order to ease the writing of such data analysis code, we built a software-generator: the idea is that the user inserts the settings of the physics analyses, and the final analysis code is automatically and dynamically generated, ready to be run on data. Python helped us to build such a package. Its high-level and dynamic nature, together with its flexibility and prototyping speed are the key features which made our choice. So we conceived and developed WATCHMAN, a Python CASE (Computer-Aided Software Engineering) framework to automatically generate reliable, easy to maintain and easy to validate HEP data analysis code. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "WATCHMAN project-A Python CASE framework for High Energy Physics data analysis in the LHC era", "paper_id": "WOS:000328297100003"}