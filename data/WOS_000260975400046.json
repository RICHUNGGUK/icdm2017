{"auto_keywords": [{"score": 0.030424249019695215, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "pair_correlation_distance"}, {"score": 0.004716520738331953, "phrase": "pattern_matching"}, {"score": 0.004620093797504386, "phrase": "pair_correlation_distance_problem"}, {"score": 0.004283019592801715, "phrase": "pattern_p"}, {"score": 0.004224418476742716, "phrase": "length_m"}, {"score": 0.004109600767747015, "phrase": "text_t"}, {"score": 0.003731673223879279, "phrase": "threshold_k."}, {"score": 0.0036553070575015344, "phrase": "text_location"}, {"score": 0.0033883824438527316, "phrase": "different_kinds"}, {"score": 0.0033419808453225516, "phrase": "mismatched_pairs"}, {"score": 0.0023834640793589435, "phrase": "interesting_problem"}, {"score": 0.0023346234464901978, "phrase": "one-side_pair_correlation_distance"}, {"score": 0.0021049977753042253, "phrase": "mismatched_characters"}], "paper_keywords": [""], "paper_abstract": "In pattern matching with the pair correlation distance problem, the goal is to find all occurrences of a pattern P of length m, in a text T of length n, where the distance between them is less than a threshold k. For each text location i, the distance is defined as the number of different kinds of mismatched pairs (alpha, beta), between P and T[i...i + m]. We present an algorithm with running time of O (min {vertical bar Sigma(P)vertical bar(2) n log m, n (m log m)2/3}) for this problem. Another interesting problem is the one-side pair correlation distance where it is desired to find all occurrences of P where the number of mismatched characters in P is less than k. For this problem, we present an algorithm with running time of O (min{vertical bar Sigma(p)vertical bar n log m, n root m log m}). (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Pattern matching with pair correlation distance", "paper_id": "WOS:000260975400046"}