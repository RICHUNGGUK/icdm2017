{"auto_keywords": [{"score": 0.04694776222290319, "phrase": "diet"}, {"score": 0.007004852625878918, "phrase": "interactive_servers"}, {"score": 0.00481495049065317, "phrase": "hierarchical_request_flow_management"}, {"score": 0.004776853267973129, "phrase": "network-enabled_server_environments"}, {"score": 0.00453643016617164, "phrase": "network-enabled_server_systems"}, {"score": 0.004447201233380302, "phrase": "transparent_access"}, {"score": 0.004091130285858113, "phrase": "batch-managed_systems"}, {"score": 0.004042635935882651, "phrase": "diet_server"}, {"score": 0.004010624853427534, "phrase": "request_submission"}, {"score": 0.003978866233891427, "phrase": "completion_notification"}, {"score": 0.003931697356115479, "phrase": "distributed_hierarchy"}, {"score": 0.0039005612858880115, "phrase": "scheduling_agents"}, {"score": 0.0037040785566765954, "phrase": "client_request"}, {"score": 0.003588100032858716, "phrase": "scheduling_process"}, {"score": 0.003531474887552889, "phrase": "resource_information"}, {"score": 0.0034895911869254146, "phrase": "performance_prediction"}, {"score": 0.0034482025128821548, "phrase": "server_level"}, {"score": 0.003353521531649663, "phrase": "on-line_scheduling_model"}, {"score": 0.0031467250930224126, "phrase": "high-load_conditions"}, {"score": 0.0028944757265206332, "phrase": "alternative_model"}, {"score": 0.0028601252251285, "phrase": "active_management"}, {"score": 0.0026203386550421558, "phrase": "concurrent_requests"}, {"score": 0.002558495760339272, "phrase": "agent-level_queues"}, {"score": 0.0024981087707313656, "phrase": "window-based_scheduling_algorithms"}, {"score": 0.002468450551616404, "phrase": "request_release_rate"}, {"score": 0.0021049977753042253, "phrase": "standard_diet_approach"}], "paper_keywords": ["distributed scheduling", " scheduling heuristics", " on-line scheduling", " network enabled servers", " grid computing"], "paper_abstract": "The Distributed Interactive Engineering Toolbox (DIET) is a toolbox for the construction of network-enabled server systems. DIET servers provide transparent access to compute resources; resources can be either a single, interactive machine where the DIET server runs each request directly on its host, or batch-managed systems where the DIET server manages request submission and completion notification. A distributed hierarchy of scheduling agents connects the servers and is responsible for selecting servers appropriate to each client request. DIET seeks scalability by distributing the scheduling process and by keeping resource information measurement and performance prediction at the server level. DIET has traditionally offered an on-line scheduling model whereby all requests are scheduled immediately or refused. This approach can overload interactive servers in high-load conditions and does not allow adaptation of the schedule to task or data dependences. In this paper we consider an alternative model based on active management of the flow of requests throughout the system. We have added support for (1) limiting the number of concurrent requests on interactive servers, (2) server and agent-level queues, and (3) window-based scheduling algorithms whereby the request release rate to servers can be controlled and some rearrangement of request to host mappings is possible. We present experiments demonstrating that these approaches can improve performance and that the overheads introduced are not significantly different from those of the standard DIET approach.", "paper_title": "Experiences with hierarchical request flow management for network-enabled server environments", "paper_id": "WOS:000235685200012"}