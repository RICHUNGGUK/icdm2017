{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model-driven_requirements_engineering"}, {"score": 0.03395789429339523, "phrase": "software_requirements"}, {"score": 0.0046993598473345395, "phrase": "software_development"}, {"score": 0.004653900688892822, "phrase": "adequate_methods"}, {"score": 0.004608879242346434, "phrase": "requirements_engineering"}, {"score": 0.004101281992566145, "phrase": "significant_part"}, {"score": 0.004061584718427419, "phrase": "software_projects"}, {"score": 0.003983334573043943, "phrase": "appropriate_requirements_engineering"}, {"score": 0.00386876598761639, "phrase": "testing_method"}, {"score": 0.003631671435460452, "phrase": "right_method"}, {"score": 0.0034760655218366, "phrase": "ad_hoc_design_and_development_decisions"}, {"score": 0.0029747028229638625, "phrase": "engineering_process"}, {"score": 0.002711842889248926, "phrase": "new_tool_support"}, {"score": 0.002545468362709126, "phrase": "experience_report"}, {"score": 0.002242647404307089, "phrase": "requirements_engineering_method"}, {"score": 0.0022101055924375725, "phrase": "whole_development_cycle"}], "paper_keywords": ["software modeling", " requirements-engineering", " requirements modeling", " model-driven methods", " communication platform"], "paper_abstract": "Software development requires adequate methods for requirements engineering, design, development, testing and maintenance. The more complex the system is, the more sophisticated methods should be applied. A significant part of software projects is short on appropriate requirements engineering, communication, development and testing method, furthermore, verification and validation processes; i.e., not the right method is applied, and the project turns into ad hoc design and development decisions. This paper introduces our quality assured model-driven requirements engineering and software development method. The method is based on the modeling of the software requirements in a way that these models can be used to automatically generate several artifacts during the engineering process. This method is continuously developed during the last 12 years driven by our software projects. In the last two years, we have developed new tool support and also reworked the method. In this paper, as an experience report, we introduce the method: a framework to specify software requirements with four domain-specific languages and automated solutions to process the models. We focus on the requirements engineering method of the whole development cycle. We also report the lessons learned and share our best practices on the field of model-driven requirements engineering and software development.", "paper_title": "Quality Assured Model-Driven Requirements Engineering and Software Development", "paper_id": "WOS:000365157000024"}