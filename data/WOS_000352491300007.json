{"auto_keywords": [{"score": 0.034759776055713565, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "multi-processor_system"}, {"score": 0.004547438494330851, "phrase": "embedded_systems"}, {"score": 0.004317109072311102, "phrase": "great_challenges"}, {"score": 0.004162826481635768, "phrase": "rapid_prototype"}, {"score": 0.004119762981892093, "phrase": "diverse_applications"}, {"score": 0.003542976343910816, "phrase": "novel_high_level_architecture_support"}, {"score": 0.0031928040608991543, "phrase": "architecture_support"}, {"score": 0.0031107911390188055, "phrase": "hierarchical_middleware"}, {"score": 0.003062594954962045, "phrase": "automatic_task_level"}, {"score": 0.0030466955629231047, "phrase": "ooo_parallel_execution_engine"}, {"score": 0.002968424524565369, "phrase": "hierarchical_ooo_layer_model"}, {"score": 0.0028325548627901004, "phrase": "parallel_regions"}, {"score": 0.0027741761880779535, "phrase": "sources_codes"}, {"score": 0.0026888503045081505, "phrase": "runtime_middleware_task-scoreboarding"}, {"score": 0.0026471739851621143, "phrase": "inter-task_data_dependencies"}, {"score": 0.00234834406550549, "phrase": "fpga_platform"}, {"score": 0.0022879728308318205, "phrase": "jpeg_case_study"}, {"score": 0.0021049977753042253, "phrase": "task_level_parallelism"}], "paper_keywords": ["Middleware", " architecture support", " MPSoC", " data dependencies", " FPGA", " out-of-order execution"], "paper_abstract": "Multi-processor system on chip (MPSoC) has been widely applied in embedded systems in the past decades. However, it has posed great challenges to efficiently design and implement a rapid prototype for diverse applications due to heterogeneous instruction set architectures (ISA), programming interfaces and software tool chains. In order to solve the problem, this paper proposes a novel high level architecture support for automatic out-of-order (OoO) task execution on FPGA based heterogeneous MPSoCs. The architecture support is composed of a hierarchical middleware with an automatic task level OoO parallel execution engine. Incorporated with a hierarchical OoO layer model, the middleware is able to identify the parallel regions and generate the sources codes automatically. Besides, a runtime middleware Task-Scoreboarding analyzes the inter-task data dependencies and automatically schedules and dispatches the tasks with parameter renaming techniques. The middleware has been verified by the prototype built on FPGA platform. Examples and a JPEG case study demonstrate that our model can largely ease the burden of programmers as well as uncover the task level parallelism.", "paper_title": "Architecture Support for Task Out-of-Order Execution in MPSoCs", "paper_id": "WOS:000352491300007"}