{"auto_keywords": [{"score": 0.048970045726729874, "phrase": "abstract_components"}, {"score": 0.00481495049065317, "phrase": "bottom-up_integration"}, {"score": 0.00438399094249306, "phrase": "model-checking_compositions"}, {"score": 0.004307569753106432, "phrase": "bottom-up_construction"}, {"score": 0.004014923642015515, "phrase": "model_construction_process"}, {"score": 0.0039218440805789965, "phrase": "composite_behaviors"}, {"score": 0.0038085117064624208, "phrase": "process_deadlock"}, {"score": 0.0037201996003549246, "phrase": "inter-component_call_sequences"}, {"score": 0.003633927813203731, "phrase": "single_processor_model"}, {"score": 0.0035705347414368696, "phrase": "scalability_issue"}, {"score": 0.0034673190692473903, "phrase": "operational_models"}, {"score": 0.0032889671598112023, "phrase": "spurious_behaviors"}, {"score": 0.0032315723330399375, "phrase": "typical_parallel_compositions"}, {"score": 0.003119760592916715, "phrase": "synchronized_abstraction"}, {"score": 0.0030833537429977797, "phrase": "projection_abstraction"}, {"score": 0.002994178996584381, "phrase": "internal_communication_behavior"}, {"score": 0.002941913249957503, "phrase": "operational_model"}, {"score": 0.0026624684547385718, "phrase": "marmot_development_framework"}, {"score": 0.00249592321829865, "phrase": "horizontal_verification"}, {"score": 0.0024379730432321656, "phrase": "vertical_verification"}, {"score": 0.002326068563512387, "phrase": "wireless_sensor_network_application"}, {"score": 0.002298902547676131, "phrase": "promising_performance_improvement"}, {"score": 0.002272053079580848, "phrase": "linear_growth"}, {"score": 0.0022455164874830777, "phrase": "memory_usage"}, {"score": 0.002206290313627494, "phrase": "vertically_incremental_verification"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Controlled composition", " Abstraction", " Verification"], "paper_abstract": "This work proposes a method for improving the scalability of model-checking compositions in the bottom-up construction of abstract components. The approach uses model checking in the model construction process for testing the composite behaviors of components, including process deadlock and inconsistency in inter-component call sequences. Assuming a single processor model, the scalability issue is addressed by introducing operational models for synchronous/asynchronous inter-component message passing, which are designed to reduce spurious behaviors caused by typical parallel compositions. Together with two abstraction techniques, synchronized abstraction and projection abstraction, that hide verified internal communication behavior, this operational model helps to reduce the complexity of composition and verification. The approach is supported by the MARMOT development framework, where the soundness of the approach is assured through horizontal verification as well as vertical verification. Application of the approach on a wireless sensor network application shows promising performance improvement with linear growth in memory usage for the vertically incremental verification of abstract components. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Controlled composition and abstraction for bottom-up integration and verification of abstract components", "paper_id": "WOS:000297871500008"}