{"auto_keywords": [{"score": 0.033330168836556255, "phrase": "mars"}, {"score": 0.00481495049065317, "phrase": "data_mining_techniques_for_software_effort_estimation"}, {"score": 0.004657542074154025, "phrase": "predictive_model"}, {"score": 0.004136044939878838, "phrase": "software_effort_estimation"}, {"score": 0.004077508669922702, "phrase": "previous_studies"}, {"score": 0.00398177607914381, "phrase": "univocal_conclusion"}, {"score": 0.0035525230119401153, "phrase": "large_scale_benchmarking_study"}, {"score": 0.0032149396890830575, "phrase": "linear_regression"}, {"score": 0.0031845067058084583, "phrase": "nonlinear_models"}, {"score": 0.0031244995579170465, "phrase": "multilayered_perceptron_neural_networks"}, {"score": 0.003094920033010818, "phrase": "radial_basis_function_networks"}, {"score": 0.003022186855664124, "phrase": "support_vector_machines"}, {"score": 0.002632716358833918, "phrase": "feature_subset"}, {"score": 0.002570817338292482, "phrase": "generic_backward_input_selection_wrapper"}, {"score": 0.0024630345285372958, "phrase": "rigorous_statistical_testing"}, {"score": 0.00241658945942583, "phrase": "ordinary_least_squares_regression"}, {"score": 0.002359759876402679, "phrase": "logarithmic_transformation"}, {"score": 0.002304263635960015, "phrase": "key_finding"}, {"score": 0.0022181655497912796, "phrase": "highly_predictive_attributes"}, {"score": 0.002186712881521657, "phrase": "project_size"}, {"score": 0.0021251363422701446, "phrase": "related_attributes"}, {"score": 0.0021049977753042253, "phrase": "typically_a_significant_increase"}], "paper_keywords": ["Data mining", " software effort estimation", " regression"], "paper_abstract": "A predictive model is required to be accurate and comprehensible in order to inspire confidence in a business setting. Both aspects have been assessed in a software effort estimation setting by previous studies. However, no univocal conclusion as to which technique is the most suited has been reached. This study addresses this issue by reporting on the results of a large scale benchmarking study. Different types of techniques are under consideration, including techniques inducing tree/rule-based models like M5 and CART, linear models such as various types of linear regression, nonlinear models (MARS, multilayered perceptron neural networks, radial basis function networks, and least squares support vector machines), and estimation techniques that do not explicitly induce a model (e.g., a case-based reasoning approach). Furthermore, the aspect of feature subset selection by using a generic backward input selection wrapper is investigated. The results are subjected to rigorous statistical testing and indicate that ordinary least squares regression in combination with a logarithmic transformation performs best. Another key finding is that by selecting a subset of highly predictive attributes such as project size, development, and environment related attributes, typically a significant increase in estimation accuracy can be obtained.", "paper_title": "Data Mining Techniques for Software Effort Estimation: A Comparative Study", "paper_id": "WOS:000301915200009"}