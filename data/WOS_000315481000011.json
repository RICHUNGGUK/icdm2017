{"auto_keywords": [{"score": 0.049517389162701646, "phrase": "model_checking"}, {"score": 0.010936807802338041, "phrase": "abstraction_refinement"}, {"score": 0.010683199024748, "phrase": "simplified_model"}, {"score": 0.010435409021063343, "phrase": "original_model"}, {"score": 0.00481495049065317, "phrase": "long_error_traces"}, {"score": 0.004674952036988355, "phrase": "formal_method"}, {"score": 0.004459334186889869, "phrase": "user-defined_specification"}, {"score": 0.00387011040370557, "phrase": "long_and_complex_sequences"}, {"score": 0.0035210572541244664, "phrase": "abstraction-refinement_scheme"}, {"score": 0.002931569771634119, "phrase": "simplified_error"}, {"score": 0.0028127163745564777, "phrase": "deep_bugs"}, {"score": 0.002620040660435039, "phrase": "error_trace"}, {"score": 0.0025286975935774245, "phrase": "abstract_ones"}, {"score": 0.0024405312482831646, "phrase": "spurious_abstract_error_traces"}, {"score": 0.002246553137021003, "phrase": "novel_concretization_algorithm"}], "paper_keywords": ["Abstraction refinement", " algorithms", " concretization", " satisfiability (SAT)", " simulation", " verification"], "paper_abstract": "Model checking is a formal method for verifying whether the system satisfies a user-defined specification. Compared to simulation, model checking is restricted in capacity. On the other hand, simulation is weak in detecting bugs that require long and complex sequences of events to be exposed. This paper combines model checking and simulation in an abstraction-refinement scheme to mitigate the problems of both methods. Abstraction refinement iteratively constructs a simplified model to verify the original model. While a simplified model mitigates the weakness of model checking, the set of simplified error traces model helps guide simulation toward deep bugs. In abstraction refinement, concretization-a process of deriving an error trace in the original model from the abstract ones-is used to invalidate spurious abstract error traces or to refute a property. In this paper, we describe a novel concretization algorithm that combines simulation with satisfiability to efficiently refute properties with very long error traces.", "paper_title": "Using Abstraction to Guide the Search for Long Error Traces", "paper_id": "WOS:000315481000011"}