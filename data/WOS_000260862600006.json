{"auto_keywords": [{"score": 0.04400766828232206, "phrase": "multimedia_applications"}, {"score": 0.0100380039694815, "phrase": "multimedia_processing"}, {"score": 0.00481495049065317, "phrase": "multimedia_workloads"}, {"score": 0.004659040279237174, "phrase": "significant_workloads"}, {"score": 0.00462846651646366, "phrase": "current_generation_desktop_processors"}, {"score": 0.0044199701363984495, "phrase": "modern_processors"}, {"score": 0.004376523540676604, "phrase": "large_caches"}, {"score": 0.004319255461225845, "phrase": "increased_power_consumption"}, {"score": 0.004276794599014972, "phrase": "access_delays"}, {"score": 0.004248718518635191, "phrase": "regular_data_access_patterns"}, {"score": 0.004179328666330398, "phrase": "video_processing_applications"}, {"score": 0.004138237651024009, "phrase": "high_hit-rates"}, {"score": 0.004030618026002216, "phrase": "access_time"}, {"score": 0.0037985575652591985, "phrase": "memory_system"}, {"score": 0.0036997388927095935, "phrase": "efficient_multimedia_application_processors"}, {"score": 0.003521305923598047, "phrase": "power_and_energy_tradeoffs"}, {"score": 0.0032534813517243275, "phrase": "d-cache_power"}, {"score": 0.0032002934215958068, "phrase": "multilevel_cache_hierarchy"}, {"score": 0.003168797616694096, "phrase": "dynamic_and_static_power_increase"}, {"score": 0.0030559337757849634, "phrase": "dynamic_power"}, {"score": 0.0029862071871499295, "phrase": "static_power"}, {"score": 0.00289888453546698, "phrase": "smaller_feature_sizes"}, {"score": 0.0028608962312791264, "phrase": "significant_static_power_dissipation"}, {"score": 0.0026959995147791188, "phrase": "future_multimedia_systems"}, {"score": 0.002643168068896905, "phrase": "leakage_power_reduction_techniques"}, {"score": 0.0025999315182615823, "phrase": "energy_consumption"}, {"score": 0.0025155632965105533, "phrase": "cache_size_variations"}, {"score": 0.002378357925871225, "phrase": "efficient_choices"}, {"score": 0.002354932118789557, "phrase": "power_and_performance_balance"}, {"score": 0.002316399538424667, "phrase": "significant_amounts"}, {"score": 0.0022860268828044134, "phrase": "integer_operations"}, {"score": 0.0022118223311537954, "phrase": "low_power_full_adders"}, {"score": 0.0021684583061292264, "phrase": "data_path"}, {"score": 0.0021049977753042253, "phrase": "overall_power_consumption"}], "paper_keywords": ["Cache", " leakage power", " low power", " multimedia workload characterization"], "paper_abstract": "One of the significant workloads in current generation desktop processors and mobile devices is multimedia processing. Large on-chip caches are common in modern processors, but large caches will result in increased power consumption and increased access delays. Regular data access patterns in streaming multimedia applications and video processing applications can provide high hit-rates, but due to issues associated with access time, power and energy, caches cannot be made very large. Characterizing and optimizing the memory system is conducive for designing power and performance efficient multimedia application processors. Performance tradeoffs for multimedia applications have been studied in the past, however, power and energy tradeoffs for caches for multimedia processing have not been adequately studied in the past. In this paper, we characterize multimedia applications for I-cache and D-cache power and energy using a multilevel cache hierarchy. Both dynamic and static power increase with increasing cache sizes, however, the increase in dynamic power is small. The increase in static power is significant, and becomes increasingly relevant for smaller feature sizes. There is significant static power dissipation, similar to 45%, in L1 & L2 caches at 70 ram technology sizes, emphasizing the fact that future multimedia systems must be designed by taking leakage power reduction techniques into account. The energy consumption of on-chip L2 caches is seen to be very sensitive to cache size variations. Sizes larger than 16 k for I-caches and 32 k for D-caches will not be efficient choices to maintain power and performance balance. Since multimedia applications spend significant amounts of time in integer operations, to improve the performance, we propose implementing low power full adders and hybrid multipliers in the data path, which results in 9% to 21% savings in the overall power consumption.", "paper_title": "Caches for Multimedia Workloads: Power and Energy Tradeoffs", "paper_id": "WOS:000260862600006"}