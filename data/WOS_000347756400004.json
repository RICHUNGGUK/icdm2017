{"auto_keywords": [{"score": 0.04194788802612482, "phrase": "dicsa"}, {"score": 0.0069233924307843, "phrase": "wireless_sensor_networks"}, {"score": 0.006286788464595944, "phrase": "drand"}, {"score": 0.00481501138342223, "phrase": "distributed"}, {"score": 0.004694353795114243, "phrase": "data_gathering"}, {"score": 0.004610058444728656, "phrase": "link_scheduling"}, {"score": 0.004462105963334103, "phrase": "data_gathering_applications"}, {"score": 0.004397875849247165, "phrase": "existing_link_scheduling_algorithms"}, {"score": 0.004272164161788242, "phrase": "specific_assumptions"}, {"score": 0.004046020290832207, "phrase": "distributed_and_concurrent_link_scheduling_algorithm"}, {"score": 0.00393032656248792, "phrase": "specific_assumption"}, {"score": 0.0038877961007492646, "phrase": "underlying_network"}, {"score": 0.0034742854447532678, "phrase": "secondary_state_machine"}, {"score": 0.003314203895848455, "phrase": "slot_reservation"}, {"score": 0.0031845067058084583, "phrase": "forbidden_slots"}, {"score": 0.003104619199351347, "phrase": "concurrent_and_collision-free_slot_reservation"}, {"score": 0.0030267296900520217, "phrase": "execution_duration"}, {"score": 0.0027741761880779535, "phrase": "slot_assignment_efficiency"}, {"score": 0.0027242666160349938, "phrase": "higher_spatial_reuse"}, {"score": 0.002675252546913683, "phrase": "maximum_slot_number"}, {"score": 0.002598652897946253, "phrase": "vdec."}, {"score": 0.002579847272930948, "phrase": "data-gathering_applications"}, {"score": 0.0025242409510332527, "phrase": "higher_performance"}, {"score": 0.0023644936731468252, "phrase": "network_throughput"}, {"score": 0.0021987994275190314, "phrase": "seedex"}, {"score": 0.0021828814613489723, "phrase": "ncr"}, {"score": 0.002167080256179705, "phrase": "fps"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling algorithm", " Interference", " MAC"], "paper_abstract": "Although link scheduling has been used to improve the performance of data gathering applications, unfortunately, existing link scheduling algorithms are either centralized or they rely on specific assumptions that are not realistic in wireless sensor networks. In this paper, we propose a distributed and concurrent link scheduling algorithm, called DICSA, that requires no specific assumption regarding the underlying network. The operation of DICSA is managed through two algorithms: (i) Primary State Machine (PSM): Enables each node to perform its own slot reservation; (ii) Secondary State Machine (SSM): Enables each node to concurrently participate in the slot reservation of its neighbors. Through these algorithms and a set of forbidden slots managed by them, DICSA provides concurrent and collision-free slot reservation. Our results show that the execution duration and energy consumption of DICSA are at least 50% and 40% less than that of DRAND, respectively. In terms of slot assignment efficiency, while our results show higher spatial reuse over DRAND, the maximum slot number assigned by DICSA is at least 60% lower than VDEC. In data-gathering applications, our results confirm the higher performance of DICSA in terms of throughput, delivery ratio and packet delay. We show that the network throughput achievable by DICSA is more than 50%, 70%, 90% and 170% higher than that of DRAND, SEEDEX, NCR and FPS, respectively. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "DICSA: Distributed and concurrent link scheduling algorithm for data gathering in wireless sensor networks", "paper_id": "WOS:000347756400004"}