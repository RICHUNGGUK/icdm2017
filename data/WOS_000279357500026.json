{"auto_keywords": [{"score": 0.03063110596580221, "phrase": "object-oriented_languages"}, {"score": 0.00481495049065317, "phrase": "k-cfa_paradox_illuminating_functional"}, {"score": 0.004773904938276846, "phrase": "object-oriented_program_analysis"}, {"score": 0.00473320761888448, "phrase": "low-level_program_analysis"}, {"score": 0.0045348429403481464, "phrase": "\"flow_analysis"}, {"score": 0.004476963405985556, "phrase": "functional_languages"}, {"score": 0.004382127278148236, "phrase": "\"_analysis"}, {"score": 0.004344755264641137, "phrase": "imperative_and_object-oriented_languages"}, {"score": 0.0040223714916651845, "phrase": "limited_cross-understanding"}, {"score": 0.0039035351575463103, "phrase": "shivers's_k-cfa_work"}, {"score": 0.0037719988989298983, "phrase": "\"context-sensitive_analysis"}, {"score": 0.0036137713873827374, "phrase": "recent_results"}, {"score": 0.00350696416714684, "phrase": "functional_and_object-oriented_incarnations"}, {"score": 0.003316884515934182, "phrase": "van_horn"}, {"score": 0.003288568163462762, "phrase": "mairson"}, {"score": 0.0030837288356760973, "phrase": "polynomial-time_algorithm"}, {"score": 0.002954287204671029, "phrase": "context-sensitive_points"}, {"score": 0.0028060889647071787, "phrase": "functional_k-cfa"}, {"score": 0.0027465495490291746, "phrase": "profoundly_different_analysis"}, {"score": 0.0027230880516264685, "phrase": "object-oriented_k-cfa."}, {"score": 0.0026199603775129516, "phrase": "exact_same_specification"}, {"score": 0.0025099367332615794, "phrase": "functional_ones"}, {"score": 0.002254624822004988, "phrase": "immediate_payoff"}, {"score": 0.0022067604433257814, "phrase": "object-oriented_treatment"}, {"score": 0.0021231452870210965, "phrase": "polynomial-time_hierarchy"}, {"score": 0.0021049977753042253, "phrase": "context-sensitive_cfas"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " static analysis", " control-flow analysis", " pointer analysis", " functional", " object-oriented", " k-CFA", " m-CFA"], "paper_abstract": "Low-level program analysis is a fundamental problem, taking the shape of \"flow analysis\" in functional languages and \"points-to\" analysis in imperative and object-oriented languages. Despite the similarities, the vocabulary and results in the two communities remain largely distinct, with limited cross-understanding. One of the few links is Shivers's k-CFA work, which has advanced the concept of \"context-sensitive analysis\" and is widely known in both communities. Recent results indicate that the relationship between the functional and object-oriented incarnations of k-CFA is not as well understood as thought. Van Horn and Mairson proved k-CFA for k >= 1 to be EXPTIME-complete; hence, no polynomial-time algorithm can exist. Yet, there are several polynomial-time formulations of context-sensitive points-to analyses in object-oriented languages. Thus, it seems that functional k-CFA may actually be a profoundly different analysis from object-oriented k-CFA. We resolve this paradox by showing that the exact same specification of k-CFA is polynomial-time for object-oriented languages yet exponential-time for functional ones: objects and closures are subtly different, in a way that interacts crucially with context-sensitivity and complexity. This illumination leads to an immediate payoff: by projecting the object-oriented treatment of objects onto closures, we derive a polynomial-time hierarchy of context-sensitive CFAs for functional programs.", "paper_title": "Resolving and Exploiting the k-CFA Paradox Illuminating Functional vs. Object-Oriented Program Analysis", "paper_id": "WOS:000279357500026"}