{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "complexity_analysis"}, {"score": 0.004462105963334103, "phrase": "imperative_program"}, {"score": 0.004272164161788242, "phrase": "program's_inputs"}, {"score": 0.004002242925856335, "phrase": "semantic_relation"}, {"score": 0.003344407169522133, "phrase": "iff_every_value"}, {"score": 0.003032228032253871, "phrase": "syntactical_proof_calculus"}, {"score": 0.0026607205525625995, "phrase": "bottom_line"}, {"score": 0.0024253827365474734, "phrase": "exhaustive_proof_search"}, {"score": 0.0021049977753042253, "phrase": "computational_method"}], "paper_keywords": ["Theory", " Implicit computational complexity", " static program anaysis", " automatable complexity analysis of imperative programs"], "paper_abstract": "We present a method for certifying that the values computed by an imperative program will be bounded by polynomials in the program's inputs. To this end, we introduce mwp-matrices and define a semantic relation satisfies C : M, where C is a program and M is an mwp-matrix. It follows straightforwardly from our definitions that there exists M such that satisfies C : M holds iff every value computed by C is bounded by a polynomial in the inputs. Furthermore, we provide a syntactical proof calculus and define the relation proves C : M to hold iff there exists a derivation in the calculus where C: M is the bottom line. We prove that proves C: M implies satisfies C: M. By means of exhaustive proof search, an algorithm can decide if there exists M such that the relation proves C: M holds, and thus, our results yield a computational method.", "paper_title": "A Flow Calculus of mwp-Bounds for Complexity Analysis", "paper_id": "WOS:000269268700006"}