{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "reconfigurable_computing"}, {"score": 0.004652016085325825, "phrase": "reconfigurable_computing_platforms"}, {"score": 0.004342430078306461, "phrase": "concurrent_nature"}, {"score": 0.004283019592801715, "phrase": "hardware_structures"}, {"score": 0.004053362743156545, "phrase": "hardware_customization"}, {"score": 0.0037834649508375544, "phrase": "extremely_cumbersome_and_error-prone_process"}, {"score": 0.0035072146967082083, "phrase": "hardware_designers"}, {"score": 0.003435426082776884, "phrase": "hardware_description_languages"}, {"score": 0.0032065418360603293, "phrase": "promising_technology"}, {"score": 0.0029928611380840757, "phrase": "numerous_approaches"}, {"score": 0.002851790448644913, "phrase": "compilation_levels"}, {"score": 0.0027741761880779535, "phrase": "high-level_programming_abstractions"}, {"score": 0.0025892330566358503, "phrase": "reconfigurable_architectures"}, {"score": 0.0024842242921857705, "phrase": "major_research_efforts"}, {"score": 0.0024501740852758505, "phrase": "compilation_techniques"}, {"score": 0.002416589459425828, "phrase": "reconfigurable_computing_architectures"}, {"score": 0.002286781334850213, "phrase": "map_computations"}, {"score": 0.0022399174232611853, "phrase": "imperative_programming_languages"}, {"score": 0.0021342613107011624, "phrase": "main_compilation"}, {"score": 0.0021049977753042253, "phrase": "synthesis_techniques"}], "paper_keywords": ["Languages", " Design", " Performance", " Compilation", " hardware compilers", " high-level synthesis", " mapping methods", " reconfigurable computing", " FPGA", " custom-computing platforms"], "paper_abstract": "Reconfigurable computing platforms offer the promise of substantially accelerating computations through the concurrent nature of hardware structures and the ability of these architectures for hardware customization. Effectively programming such reconfigurable architectures, however, is an extremely cumbersome and error-prone process, as it requires programmers to assume the role of hardware designers while mastering hardware description languages, thus limiting the acceptance and dissemination of this promising technology. To address this problem, researchers have developed numerous approaches at both the programming languages as well as the compilation levels, to offer high-level programming abstractions that would allow programmers to easily map applications to reconfigurable architectures. This survey describes the major research efforts on compilation techniques for reconfigurable computing architectures. The survey focuses on efforts that map computations written in imperative programming languages to reconfigurable architectures and identifies the main compilation and synthesis techniques used in this mapping.", "paper_title": "Compiling for Reconfigurable Computing: A Survey", "paper_id": "WOS:000279357800001"}