{"auto_keywords": [{"score": 0.046450453288119344, "phrase": "query_nodes"}, {"score": 0.032485236788075564, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "approximate_closest_community_search"}, {"score": 0.004686963264680882, "phrase": "significant_interest"}, {"score": 0.004603525341738782, "phrase": "community_search_problem"}, {"score": 0.0045760425755563714, "phrase": "social_and_information_networks"}, {"score": 0.004494570360108983, "phrase": "densely_connected_communities"}, {"score": 0.004335932873514455, "phrase": "\"free_rider\"_issue"}, {"score": 0.00414545383888272, "phrase": "detected_community"}, {"score": 0.003755229065596736, "phrase": "restrictive_assumptions"}, {"score": 0.0035794251590584563, "phrase": "undirected_graph"}, {"score": 0.0035156341294017685, "phrase": "query_nodes_q"}, {"score": 0.003473737415587531, "phrase": "community_search"}, {"score": 0.0034426417353349567, "phrase": "k-truss_based_community_model"}, {"score": 0.0033510093127915768, "phrase": "closest_truss_community"}, {"score": 0.0032716011062067286, "phrase": "connected_k-truss_subgraph"}, {"score": 0.0031559919178954644, "phrase": "minimum_diameter"}, {"score": 0.002790867657645595, "phrase": "greedy_algorithmic_framework"}, {"score": 0.0026680819883265574, "phrase": "furthest_nodes"}, {"score": 0.0025583481578439894, "phrase": "optimal_solution"}, {"score": 0.0024604876113911173, "phrase": "compact_truss_index"}, {"score": 0.0024384399939984163, "phrase": "efficient_algorithms"}, {"score": 0.00242385118139873, "phrase": "k_-_truss_identification"}, {"score": 0.0023381288193776778, "phrase": "bulk_deletion"}, {"score": 0.002228519136218028, "phrase": "approximation_quality"}, {"score": 0.00216263228969761, "phrase": "extensive_experiments"}], "paper_keywords": [""], "paper_abstract": "Recently, there has been significant interest in the study of the community search problem in social and information networks: given one or more query nodes, find densely connected communities containing the query nodes. However, most existing studies do not address the \"free rider\" issue, that is, nodes far away from query nodes and irrelevant to them are included in the detected community. Some state-of-the-art models have attempted to address this issue, but not only are their formulated problems NP-hard, they do not admit any approximations without restrictive assumptions, which may not always hold in practice. In this paper, given an undirected graph G and a set of query nodes Q, we study community search using the k-truss based community model. We formulate our problem of finding a closest truss community (CTC), as finding a connected k-truss subgraph with the largest k that contains Q, and has the minimum diameter among such subgraphs. We prove this problem is NP-hard. Furthermore, it is NP-hard to approximate the problem within a factor (2 - ), for any epsilon > 0. However, we develop a greedy algorithmic framework, which first finds a CTC containing Q, and then iteratively removes the furthest nodes from Q, from the graph. The method achieves 2-approximation to the optimal solution. To further improve the efficiency, we make use of a compact truss index and develop efficient algorithms for k - truss identification and maintenance as nodes get eliminated. In addition, using bulk deletion optimization and local exploration strategies, we propose two more efficient algorithms. One of them trades some approximation quality for efficiency while the other is a very efficient heuristic. Extensive experiments on 6 real-world networks show the effectiveness and efficiency of our community model and search algorithms.", "paper_title": "Approximate Closest Community Search in Networks", "paper_id": "WOS:000386426200005"}