{"auto_keywords": [{"score": 0.041269222832803924, "phrase": "shared_networks"}, {"score": 0.036241675507294666, "phrase": "easismp"}, {"score": 0.00481495049065317, "phrase": "runtime_propagation"}, {"score": 0.0047689174754929195, "phrase": "restful_resources"}, {"score": 0.004567129988306349, "phrase": "sensor_networks"}, {"score": 0.004523455475492876, "phrase": "macro-programming_methods"}, {"score": 0.004416079619543104, "phrase": "prior_work"}, {"score": 0.004229158339021651, "phrase": "dedicated_networks"}, {"score": 0.004188702178897384, "phrase": "specific_scenarios"}, {"score": 0.0038415095105632157, "phrase": "heterogeneous_devices"}, {"score": 0.003246380517062771, "phrase": "generic_application_scenarios"}, {"score": 0.003049555059533735, "phrase": "restful_virtual_resources"}, {"score": 0.0028923335491735564, "phrase": "uniform_resource_identifier"}, {"score": 0.0028100102841877835, "phrase": "post-deployment_vr"}, {"score": 0.0025892330566358503, "phrase": "resource_propagation"}, {"score": 0.0025644240336018045, "phrase": "programming_primitives"}, {"score": 0.0025034338848015166, "phrase": "virtual_resource_engine"}, {"score": 0.0024794486036106415, "phrase": "vre"}, {"score": 0.0023178219772486868, "phrase": "relic_monitoring_network"}, {"score": 0.0022956075241520064, "phrase": "experimental_results"}, {"score": 0.002251813863195168, "phrase": "ea-sismp"}, {"score": 0.0021876814398268775, "phrase": "average_deployment_overhead"}, {"score": 0.0021049977753042253, "phrase": "node-level_programming"}], "paper_keywords": ["macro-programming", " RESTful virtual resource", " resource propagation", " cloud-sea computing"], "paper_abstract": "In order to simplify programming for building sensor networks, macro-programming methods have been proposed in prior work. Most of them are designed for the dedicated networks and specific scenarios where devices are mostly homogeneous. Nevertheless the methods rarely consider those shared networks which are composed of heterogeneous devices, e.g., sensors, actuators, mobile devices, and share resources among themselves. In this paper, we present EasiSMP, a resource-oriented programming framework for these shared networks and generic application scenarios. In this framework, the devices and their functionalities are abstracted into RESTful virtual resources (VRs) each of which is labelled by a uniform resource identifier (URI). The post-deployment VR can be globally accessed and reused to propagate new resource(s) at runtime. To support the resource propagation, programming primitives are proposed and a virtual resource engine (VRE) is studied. To perform evaluation, EasiSMP is deployed into a relic monitoring network. Experimental results show that programming using Ea-siSMP is concise, and the average deployment overhead is decreased by up to 27% compared with the node-level programming.", "paper_title": "EasiSMP: A Resource-Oriented Programming Framework Supporting Runtime Propagation of RESTful Resources", "paper_id": "WOS:000333071200003"}