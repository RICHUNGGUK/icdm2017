{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "high_data_rate_streams"}, {"score": 0.0047113960612140335, "phrase": "system_s._high-performance_stream_processing"}, {"score": 0.0037493114715625784, "phrase": "runtime_support"}, {"score": 0.0032546105164772995, "phrase": "processing_data"}, {"score": 0.0031845067058084613, "phrase": "high-rate_live_streams"}, {"score": 0.002855934865505357, "phrase": "programming_model"}, {"score": 0.0027641218567092665, "phrase": "workload_splitting_mechanisms"}, {"score": 0.002675252546913683, "phrase": "code_generation_framework"}, {"score": 0.0025611773887867255, "phrase": "underlying_system_s_middleware"}, {"score": 0.0025059724686541263, "phrase": "spade_programming_model"}, {"score": 0.0023990982005125763, "phrase": "considerable_scalability_behavior"}, {"score": 0.0023219374444738723, "phrase": "low_processing_latency"}, {"score": 0.0022472527731744974, "phrase": "real-world_financial_trading_application"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Data stream processing", " Scale-up strategies", " Workload balancing", " Split/aggregate/join architectural pattern"], "paper_abstract": "High-performance stream processing is critical in many sense-and-respond application domains from environmental monitoring to algorithmic trading. In this paper, we focus on language and runtime support for improving the performance of sense-and-respond applications in processing data from high-rate live streams. The central tenets of this work are the programming model, the workload splitting mechanisms, the code generation framework, and the underlying System S middleware and SPADE programming model. We demonstrate considerable scalability behavior coupled with low processing latency in a real-world financial trading application. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Processing high data rate streams in System S", "paper_id": "WOS:000286363900002"}