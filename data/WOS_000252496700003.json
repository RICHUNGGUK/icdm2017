{"auto_keywords": [{"score": 0.04490388164168672, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "jastadd_system"}, {"score": 0.0046797114400479135, "phrase": "modular_specifications"}, {"score": 0.004548253531664032, "phrase": "extensible_compiler_tools"}, {"score": 0.003371508176308189, "phrase": "static_aspect-oriented_programming"}, {"score": 0.0031845067058084583, "phrase": "declarative_attributes"}, {"score": 0.0028409576481842457, "phrase": "highly_modular_specifications"}, {"score": 0.0022933216359142736, "phrase": "non-null_types"}], "paper_keywords": ["compiler construction", " extensible languages", " modular implementation"], "paper_abstract": "The JastAdd system enables modular specifications of extensible compiler tools and languages. Java has been extended with the Rewritable Circular Reference Attributed Grammars formalism that supports modularization and extensibility through several synergistic mechanisms. Object-orientation and static aspect-oriented programming are combined with declarative attributes and context-dependent rewrites to allow highly modular specifications. The techniques have been verified by implementing a full Java 1.4 compiler with modular extensions for non-null types and Java 5 features. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "The JastAdd system - modular extensible compiler construction", "paper_id": "WOS:000252496700003"}