{"auto_keywords": [{"score": 0.04959913342990779, "phrase": "flash_storage"}, {"score": 0.02618581352479118, "phrase": "flash_controller"}, {"score": 0.004718897469501381, "phrase": "flash_storage_devices"}, {"score": 0.004601508848655033, "phrase": "hard_disk_drives"}, {"score": 0.0038964032225585117, "phrase": "large_number"}, {"score": 0.0038573081851680656, "phrase": "contiguous_pages"}, {"score": 0.0036491673002304326, "phrase": "flash_blocks"}, {"score": 0.003594369823549604, "phrase": "premature_wearing"}, {"score": 0.003417565253539315, "phrase": "nand_flash_devices"}, {"score": 0.003366233863411861, "phrase": "intermediate_software_layer"}, {"score": 0.003073988343893906, "phrase": "ftl_implementations"}, {"score": 0.0030431198971423937, "phrase": "powerful_processors"}, {"score": 0.0029973957125353306, "phrase": "large_amount"}, {"score": 0.0029374939071038146, "phrase": "flash_controllers"}, {"score": 0.0028355237433457313, "phrase": "flash_storage_performance"}, {"score": 0.002682370021834353, "phrase": "refactored_design"}, {"score": 0.0025761937402886954, "phrase": "storage_performance"}, {"score": 0.002400373755068185, "phrase": "page-level_ftl"}, {"score": 0.002202894673025544, "phrase": "storage_lifetime"}], "paper_keywords": ["Storage systems", " file systems", " NAND flash memory", " I/O architectures"], "paper_abstract": "Flash storage devices behave quite differently from hard disk drives (HDDs); a page on flash has to be erased before it can be rewritten, and the erasure has to be performed on a block which consists of a large number of contiguous pages. It is also important to distribute writes evenly among flash blocks to avoid premature wearing. To achieve interoperability with existing block I/O subsystems for HDDs, NAND flash devices employ an intermediate software layer, called the flash translation layer (FTL), which hides these differences. Unfortunately, FTL implementations require powerful processors with a large amount of DRAM in flash controllers and also incur many unnecessary I/O operations which degrade flash storage performance and lifetime. In this paper, we present a refactored design of I/O architecture for flash storage which dramatically increases storage performance and lifetime while decreasing the cost of the flash controller. In comparison with page-level FTL, our preliminary experiments show a reduction of 19 percent in I/O operations, improvement of I/O performance by 9 percent and storage lifetime by 36 percent. In addition, our scheme uses only 1/128 DRAM memory in the flash controller. Index Terms-Storage systems,", "paper_title": "Refactored Design of I/O Architecture for Flash Storage", "paper_id": "WOS:000356718700018"}