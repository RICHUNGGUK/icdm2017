{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multikey_quicksort"}, {"score": 0.010115814406323056, "phrase": "bentley"}, {"score": 0.008179273802971666, "phrase": "equal_elements"}, {"score": 0.004525629966185848, "phrase": "sedgewick"}, {"score": 0.0029114187110123105, "phrase": "'dutch_national_flag_problem"}, {"score": 0.002698668692428472, "phrase": "mcilroy"}, {"score": 0.0025361866386341796, "phrase": "dna_sequences"}, {"score": 0.0025014259919355453, "phrase": "html_files"}, {"score": 0.0024501740852758505, "phrase": "english_texts"}, {"score": 0.0023834640793589435, "phrase": "'collect-center'_partitioning"}, {"score": 0.002302623478590979, "phrase": "quicksort"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " String sorting", " Multikey Quicksort", " Ternary partitioning"], "paper_abstract": "Bentley and Sedgewick proposed multikey Quicksort with 'split-end' partitioning for sorting strings. But it can be slow in case of many equal elements because it adopted 'splitend' partitioning that moves equal elements to the ends and swaps back to the middle. We present 'collect-center' partitioning to improve multikey Quicksort in that case. It moves equal elements to the middle directly like the 'Dutch National Flag Problem' partitioning approach and it uses two inner loops like Bentley and McIlroy's. In case of many equal elements such as DNA sequences, HTML files, and English texts, multikey Quicksort with 'collect-center' partitioning is faster than multikey Quicksort with 'split-end' partitioning. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Improving multikey Quicksort for sorting strings with many equal elements", "paper_id": "WOS:000264972600009"}