{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "ftl-cfree"}, {"score": 0.047599993411656535, "phrase": "runtime_verification"}, {"score": 0.004406994912939125, "phrase": "functional_specification_language_fuzzy_temporal_logic_context"}, {"score": 0.003916098498242888, "phrase": "complex_scenarios"}, {"score": 0.003735349093835257, "phrase": "manufacturing_event_correlations"}, {"score": 0.0036914757355166966, "phrase": "performance_constraints"}, {"score": 0.003626626504149897, "phrase": "timing_restrictions"}, {"score": 0.0033584796908285894, "phrase": "temporal_logic_expressiveness"}, {"score": 0.0033190180867511605, "phrase": "random_access"}, {"score": 0.0032414759269196493, "phrase": "fuzzy_evolutionary_semantics"}, {"score": 0.003165739628969694, "phrase": "specific_input_trace"}, {"score": 0.0026827569390113822, "phrase": "new_trace_suffixes"}, {"score": 0.002426137929553724, "phrase": "oracle_generation"}, {"score": 0.0023554316787703137, "phrase": "automatic_observable_specification"}, {"score": 0.002286781334850213, "phrase": "high-level_requirements"}, {"score": 0.0021940118003312397, "phrase": "practical_usefulness"}], "paper_keywords": ["Condition monitoring", " formal languages", " fuzzy logic", " runtime verification"], "paper_abstract": "This paper presents the functional specification language fuzzy temporal logic context free (FTL-CFree), a real runtime language designed to enable industry to model and verify complex scenarios. Such specification requirements demand the flexibility to manage manufacturing event correlations, performance constraints, and timing restrictions, such as holdups and delays. Moreover, this language enriches temporal logic expressiveness with random access to past values and fuzzy evolutionary semantics. Given a specific input trace, this interpretation not only aims to measure the degree of truth of an assertion, but also sets how it will evolve in the future if new trace suffixes are provided. As it is usually the case in runtime verification, the language provides for oracle generation, and so an automatic observable specification can be obtained from high-level requirements. To test the expressiveness and practical usefulness of FTL-CFree, the specifications of two industrial use cases are generated: 1) a batch plant in a glassworks; and 2) a manufacturing execution system.", "paper_title": "FTL-CFree: A Fuzzy Real-Time Language for Runtime Verification", "paper_id": "WOS:000340428100001"}