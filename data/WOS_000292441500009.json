{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cluster_deletion"}, {"score": 0.049505168345722585, "phrase": "cluster_editing"}, {"score": 0.013459250400209089, "phrase": "cluster_graph"}, {"score": 0.0037597491055035895, "phrase": "conflict_triples"}, {"score": 0.0031367803372203498, "phrase": "considerably_improved_time_bounds"}, {"score": 0.0029351141718104725, "phrase": "small_connected_components"}, {"score": 0.002796616969627065, "phrase": "exponential_part"}, {"score": 0.0027463775689957255, "phrase": "time_complexity"}, {"score": 0.0023328599525181707, "phrase": "full_power"}, {"score": 0.0022909325048608054, "phrase": "earlier_structure_theorem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithms", " Cluster editing", " Parameterized complexity"], "paper_abstract": "CLUSTER DELETION and CLUSTER EDITING ask to transform a graph by at most k edge deletions or edge edits, respectively, into a cluster graph, i.e., disjoint union of cliques. Equivalently, a cluster graph has no conflict triples, i.e., two incident edges without a transitive edge. We solve the two problems in time O*(1.415(k)) and O*(1.76(k)), respectively. These results round off our earlier work by considerably improved time bounds. For CLUSTER DELETION we use a technique that cuts away small connected components that do no longer contribute to the exponential part of the time complexity. As this idea is simple and versatile, it may lead to improvements for several other parameterized graph problems. The improvement for CLUSTER EDITING is achieved by using the full power of an earlier structure theorem for graphs where no edge is in three conflict triples. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Even faster parameterized cluster deletion and cluster editing", "paper_id": "WOS:000292441500009"}