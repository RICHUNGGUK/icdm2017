{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ubiquitous_computing"}, {"score": 0.0399683188090249, "phrase": "user_collaboration"}, {"score": 0.03339227424903452, "phrase": "conflicting_goals"}, {"score": 0.02934793031558272, "phrase": "proposed_approach"}, {"score": 0.004480394224548146, "phrase": "potentially_uneven_conditions"}, {"score": 0.004330099613414957, "phrase": "high_degree"}, {"score": 0.004297388539539564, "phrase": "user_autonomy"}, {"score": 0.004264923517966271, "phrase": "long-term_challenges"}, {"score": 0.004232702713825967, "phrase": "mobile_application_design"}, {"score": 0.004106225442735525, "phrase": "service_discovery_protocols"}, {"score": 0.004013843843250455, "phrase": "building_block"}, {"score": 0.0039684322717435045, "phrase": "peer_collaboration"}, {"score": 0.003923532450854754, "phrase": "user-provided_services"}, {"score": 0.0035147642199945387, "phrase": "multiple_domains"}, {"score": 0.0033329032920236994, "phrase": "administrative_domain"}, {"score": 0.0032826873794020253, "phrase": "user_privacy"}, {"score": 0.0030892533800837463, "phrase": "flexible_protocol"}, {"score": 0.0030658872249549893, "phrase": "service_discovery"}, {"score": 0.003042697264766327, "phrase": "ubiquitous_systems"}, {"score": 0.002929344511491418, "phrase": "dynamic_choice"}, {"score": 0.002735816302446788, "phrase": "oil_decentralized_mechanisms"}, {"score": 0.0027048247303526583, "phrase": "well-known_trust_management_principles"}, {"score": 0.002643888053328987, "phrase": "service_information"}, {"score": 0.002613935123129054, "phrase": "resulting_protocol"}, {"score": 0.002459810433812049, "phrase": "simple_prototype"}, {"score": 0.00233240715947344, "phrase": "run-time_decisions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Ubiquitous computing", " Service discovery", " Network security", " Peer-to-peer"], "paper_abstract": "The realization of ubiquitous computing requires achieving seamless service provisioning for users and devices everywhere. However, potentially uneven conditions imposed (by heterogeneous, overlapping environments) and a high degree of user autonomy pose long-term challenges for mobile application design and implementation. in this context, service discovery protocols can be used as a building block to foster peer collaboration, allowing user-provided services to be found and used. Promoting user collaboration, in turn, raises issues regarding security and privacy. interacting peers (i.e. users) may belong to Multiple domains, and authentication cannot always rely on an infrastructure provided by an administrative domain. Thus, user privacy, security, and collaboration may be regarded as conflicting goals. This paper presents a flexible protocol for service discovery in ubiquitous systems whose peer-to-peer design enables the dynamic choice among the levels of collaboration, security and privacy desired by participants. The proposed approach is based oil decentralized mechanisms that harness well-known trust management principles to control the exposure of service information. The resulting protocol is called Flexible and Secure Service Discovery (FSSD). An evaluation with a simple prototype was conducted to Support our claims of flexibility (e,g. allowing run-time decisions). Results demonstrate that the proposed approach can reflect well the balance among the conflicting goals of security, privacy and user collaboration. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Flexible and secure service discovery in ubiquitous computing", "paper_id": "WOS:000275132700006"}