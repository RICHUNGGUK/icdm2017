{"auto_keywords": [{"score": 0.04967791847177961, "phrase": "gpu"}, {"score": 0.008669860680855323, "phrase": "graphics_processing_unit"}, {"score": 0.008583107829103495, "phrase": "real-coded_genetic_algorithm"}, {"score": 0.008384016915839723, "phrase": "desired_heat_distribution"}, {"score": 0.00481495049065317, "phrase": "electroheat_problems"}, {"score": 0.0047266506923463415, "phrase": "purpose_-_inverting_electroheat_problems"}, {"score": 0.004694942826543346, "phrase": "electromagnetic_arrangement"}, {"score": 0.004524296544608405, "phrase": "magnetic_fields"}, {"score": 0.004501510077718155, "phrase": "joule_heat"}, {"score": 0.004478837857757374, "phrase": "associated_eddy_currents"}, {"score": 0.00441893283709528, "phrase": "heat_sources"}, {"score": 0.004374528158939814, "phrase": "heat_distribution"}, {"score": 0.0043524926974492124, "phrase": "two-part_problem"}, {"score": 0.004287047206068479, "phrase": "desired_thermal_distribution"}, {"score": 0.004243962162045718, "phrase": "time_consuming_process"}, {"score": 0.004021353878487676, "phrase": "coupled_problem"}, {"score": 0.004001090284326433, "phrase": "heavy_computational_load"}, {"score": 0.003987637752903983, "phrase": "long_wait-times"}, {"score": 0.0038685743572283793, "phrase": "finite_element_computations"}, {"score": 0.003772064736191012, "phrase": "naturally_parallel_genetic_algorithm"}, {"score": 0.0037153141806602844, "phrase": "coupled_electroheat_finite_element_optimization"}, {"score": 0.0036717636307507383, "phrase": "computational_efficiencies"}, {"score": 0.0036226140485269825, "phrase": "single_finite_element_problem"}, {"score": 0.00359828563297084, "phrase": "genetic_algorithm"}, {"score": 0.0035861825416217434, "phrase": "coding_objective_functions"}, {"score": 0.003574120013860442, "phrase": "real_numbers"}, {"score": 0.003556101983823247, "phrase": "binary_arithmetic"}, {"score": 0.0035441402755122366, "phrase": "added_speed"}, {"score": 0.003461523483718057, "phrase": "computational_time"}, {"score": 0.003449878808942298, "phrase": "increase_accuracy"}, {"score": 0.0034209376286350826, "phrase": "simple_problem"}, {"score": 0.0033979589939536242, "phrase": "current_carrying_conductor"}, {"score": 0.003363779145944749, "phrase": "constant_temperature"}, {"score": 0.0032853528567942836, "phrase": "gpu_time_ratio"}, {"score": 0.0032468258466128172, "phrase": "population_size"}, {"score": 0.0032195825829705927, "phrase": "increasing_communications"}, {"score": 0.00310239381725832, "phrase": "intrinsically_parallel_genetic_algorithm"}, {"score": 0.0030763587045158445, "phrase": "large_complex_coupled_problems"}, {"score": 0.0029394873845475823, "phrase": "primary_purpose"}, {"score": 0.002890349846975395, "phrase": "thermal_problem"}, {"score": 0.0028134277742675145, "phrase": "computational_procedure"}, {"score": 0.002757078949277794, "phrase": "direct_applications"}, {"score": 0.0027477975139792135, "phrase": "electrical_machine_design"}, {"score": 0.002738547237917739, "phrase": "metallurgical_mixing_processes"}, {"score": 0.0027247300199240323, "phrase": "hyperthermia_treatment"}, {"score": 0.002661163335511421, "phrase": "exciting_coil"}, {"score": 0.0025599274340655236, "phrase": "machine_heat"}, {"score": 0.002547009132614095, "phrase": "cancerous_tissue"}, {"score": 0.0024833865073308837, "phrase": "particularly_the_above-mentioned_application"}, {"score": 0.0024625332369151236, "phrase": "human_suffering"}, {"score": 0.002445976459209728, "phrase": "hyperthermia_treatment_planning"}, {"score": 0.0024377397597733566, "phrase": "cancer_treatment"}, {"score": 0.002405068729703665, "phrase": "new_commercial_software_development"}, {"score": 0.00235290737830799, "phrase": "gradient_methods"}, {"score": 0.00232137064148324, "phrase": "analytical_and_circuit_models"}, {"score": 0.002305760772983261, "phrase": "finite_elements"}, {"score": 0.0022825421133706044, "phrase": "massive_parallelization"}, {"score": 0.002259556732597772, "phrase": "inherently_parallel_genetic_algorithm"}, {"score": 0.0022368022975139184, "phrase": "single_field_system_problems"}, {"score": 0.0022068183102456397, "phrase": "practicable_solution_times"}, {"score": 0.002177235376608579, "phrase": "gpu_computations"}, {"score": 0.0021300047455857863, "phrase": "real_number"}, {"score": 0.0021192513768431946, "phrase": "binary_coding"}, {"score": 0.0021121125777450902, "phrase": "object_functions"}], "paper_keywords": ["CAD", " Finite element methods", " Applied electromagnetics", " Computational methods", " Genetic algorithms", " Field optimization"], "paper_abstract": "Purpose - Inverting electroheat problems involves synthesizing the electromagnetic arrangement of coils and geometries to realize a desired heat distribution. To this end two finite element problems need to be solved, first for the magnetic fields and the joule heat that the associated eddy currents generate and then, based on these heat sources, the second problem for heat distribution. This two-part problem needs to be iterated on to obtain the desired thermal distribution by optimization. Being a time consuming process, the purpose of this paper is to parallelize the process using the graphics processing unit (GPU) and the real-coded genetic algorithm, each for both speed and accuracy. Design/methodology/approach - This coupled problem represents a heavy computational load with long wait-times for results. The GPU has recently been demonstrated to enhance the efficiency and accuracy of the finite element computations and cut down solution times. It has also been used to speedup the naturally parallel genetic algorithm. The authors use the GPU to perform coupled electroheat finite element optimization by the genetic algorithm to achieve computational efficiencies far better than those reported for a single finite element problem. In the genetic algorithm, coding objective functions in real numbers rather than binary arithmetic gives added speed and accuracy. Findings - The feasibility of the method proposed to reduce computational time and increase accuracy is established through the simple problem of shaping a current carrying conductor so as to yield a constant temperature along a line. The authors obtained a speedup (CPU time to GPU time ratio) saturating to about 28 at a population size of 500 because of increasing communications between threads. But this far better than what is possible on a workstation. Research limitations/implications - By using the intrinsically parallel genetic algorithm on a GPU, large complex coupled problems may be solved very quickly. The method demonstrated here without accounting for radiation and convection, may be trivially extended to more completely modeled electroheat systems. Since the primary purpose here is to establish methodology and feasibility, the thermal problem is simplified by neglecting convection and radiation. While that introduces some error, the computational procedure is still validated. Practical implications - The methodology established has direct applications in electrical machine design, metallurgical mixing processes, and hyperthermia treatment in oncology. In these three practical application areas, the authors need to compute the exciting coil (or antenna) arrangement (current magnitude and phase) and device geometry that would accomplish a desired heat distribution to achieve mixing, reduce machine heat or burn cancerous tissue. This process presented does it more accurately and speedily. Social implications - Particularly the above-mentioned application in oncology will alleviate human suffering through use in hyperthermia treatment planning in cancer treatment. The method presented provides scope for new commercial software development and employment. Originality/value - Previous finite element shape optimization of coupled electroheat problems by this group used gradient methods whose difficulties are explained. Others have used analytical and circuit models in place of finite elements. This paper applies the massive parallelization possible with GPUs to the inherently parallel genetic algorithm, and extends it from single field system problems to coupled problems, and thereby realizes practicable solution times for such a computationally complex problem. Further, by using GPU computations rather than CPU, accuracy is enhanced. And then by using real number rather than binary coding for object functions, further accuracy and speed gains are realized.", "paper_title": "Faster, more accurate, parallelized inversion for shape optimization in electroheat problems on a graphics processing unit (GPU) with the real-coded genetic algorithm", "paper_id": "WOS:000349641700021"}