{"auto_keywords": [{"score": 0.04663224362477528, "phrase": "data_structure"}, {"score": 0.0047014216428514465, "phrase": "n_points"}, {"score": 0.0044159264136285035, "phrase": "k_closest_points"}, {"score": 0.0043505358211043425, "phrase": "query_point"}, {"score": 0.004235252881661159, "phrase": "k-nn_query_problem"}, {"score": 0.00382653658519243, "phrase": "set_q"}, {"score": 0.003604725094696445, "phrase": "point_p"}, {"score": 0.0033354158080573697, "phrase": "maximum_number_m"}, {"score": 0.0033155501248770375, "phrase": "query_points"}, {"score": 0.003058626737273869, "phrase": "range_tree"}, {"score": 0.00224142490874505, "phrase": "arbitrarily_small_constant"}, {"score": 0.002162421416462823, "phrase": "weighted_group_k-nearest-neighbor_query_problem"}, {"score": 0.0021431085940929783, "phrase": "group_k-farthest-neighbor_query_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["k-nearest-neighbor query", " Plane sweep algorithm", " Orthogonal range searching", " Segment dragging query", " Geometric data structure"], "paper_abstract": "Let P be a set of n points in the plane. The k-nearest-neighbor (abbreviated as k-NN) query problem is to preprocess P into a data structure that quickly reports k closest points in P for a query point q. This paper addresses a generalization of the k-NN query problem to a query set Q of points, namely, the group k-nearest-neighbor query problem, in the L-1 plane. More precisely, a query is assigned with a set Q of at most m points and a positive integer k with k <= n, and the distance between a point p of P and a query set Q is defined as the sum of L-1 distances from p to all q is an element of Q. The maximum number m of query points Q is assumed to be known in advance and to be at most n. In this paper, we propose two algorithms, one based on the range tree and the other based on a data structure for segment dragging queries, and obtain the following complexity bounds: (1) a group k-NN query can be handled in O (T-min log n + (k + m(2))(log logn + logm)) time after preprocessing P using O(m(2)nlog(2)n) space, where T-min = min {k + m, m(2)}, or (2) a group k-NN query can be handled in O ((k + m)log(2) n + m(2)(log(is an element of) n + log m)) time after preprocessing P using O (m(2)n) space, where is an element of > 0 is an arbitrarily small constant. We also show that our approach can be applied to the weighted group k-nearest-neighbor query problem and the group k-farthest-neighbor query problem. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Group nearest-neighbor queries in the L-1 plane", "paper_id": "WOS:000358624300004"}