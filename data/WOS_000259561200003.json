{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "hamiltonian"}, {"score": 0.00481495049065317, "phrase": "directed_graph"}, {"score": 0.004720043307726269, "phrase": "node-disjoint_trees"}, {"score": 0.004272724011826495, "phrase": "side_constraints"}, {"score": 0.004105850229681625, "phrase": "tree_count"}, {"score": 0.004024863549087511, "phrase": "node_degrees"}, {"score": 0.0037537380967196123, "phrase": "node_subsets"}, {"score": 0.0034660938095219846, "phrase": "tree_constraint"}, {"score": 0.003264872488939969, "phrase": "key_point"}, {"score": 0.002955050521440921, "phrase": "strong_interactions"}, {"score": 0.0022799458141165587, "phrase": "extended_tree_constraint"}], "paper_keywords": ["global constraint", " digraph partitioning", " tree", " tree constraint", " precedence constraint", " incomparability constraint", " filtering", " Hamiltonian path problem", " ordered disjoint paths problem", " phylogenetic supertree problem"], "paper_abstract": "The tree constraint partitions a directed graph into node-disjoint trees. In many practical applications that involve such a partition, there exist side constraints specifying requirements on tree count, node degrees, or precedences and incomparabilities within node subsets. We present a generalisation of the tree constraint that incorporates such side constraints. The key point of our approach is to take partially into account the strong interactions between the tree partitioning problem and all the side constraints, in order to avoid thrashing during search. We describe filtering rules for this extended tree constraint and evaluate its effectiveness on three applications: the Hamiltonian path problem, the ordered disjoint paths problem, and the phylogenetic supertree problem.", "paper_title": "Combining tree partitioning, precedence, and incomparability constraints", "paper_id": "WOS:000259561200003"}