{"auto_keywords": [{"score": 0.04474127874370813, "phrase": "crash_failure_model"}, {"score": 0.031054716220860944, "phrase": "omission_failures"}, {"score": 0.015656724149654782, "phrase": "general_omission_failures"}, {"score": 0.015562701114928901, "phrase": "k-set_agreement_problem"}, {"score": 0.0071572114008998065, "phrase": "general_omission_failure_model"}, {"score": 0.00481495049065317, "phrase": "synchronous_systems"}, {"score": 0.00470862827326028, "phrase": "consensus_problem"}, {"score": 0.004539663907223747, "phrase": "non-faulty_process"}, {"score": 0.004457458932723716, "phrase": "decided_value"}, {"score": 0.004430387933450537, "phrase": "proposed_value"}, {"score": 0.004084702852954035, "phrase": "non-faulty_processes"}, {"score": 0.0040188589968285435, "phrase": "upper_bound"}, {"score": 0.00397824450246995, "phrase": "process_crashes"}, {"score": 0.003586627880732543, "phrase": "new_property"}, {"score": 0.0033335560167876226, "phrase": "receive_omission_failure"}, {"score": 0.0032797804867967196, "phrase": "k-set_agreement_protocol"}, {"score": 0.0031555037245151224, "phrase": "first_agreement_protocol"}, {"score": 0.0031045915125222806, "phrase": "failure_model"}, {"score": 0.0027987352448113397, "phrase": "first_early_deciding_k-set_agreement_protocol"}, {"score": 0.0027146348521950073, "phrase": "also_the_following_additional_early_stopping_property"}, {"score": 0.002232976650536193, "phrase": "proposed_protocol"}, {"score": 0.0021049977753042253, "phrase": "non-_faulty_processes"}], "paper_keywords": ["Agreement problem", " Crash failure", " Strong Termination", " Early decision", " Early stopping", " Efficiency", " k-set agreement", " Message-passing system", " Receive omission failure", " Round-based computation", " Send omission failure", " Synchronous system"], "paper_abstract": "The k-set agreement problem is a generalization of the consensus problem: considering a system made up of n processes where each process proposes a value, each non-faulty process has to decide a value such that a decided value is a proposed value, and no more than k different values are decided. It has recently be shown that, in the crash failure model, min([f/k] + 2, [t/k] + 1 is a lower bound on the number of rounds for the non-faulty processes to decide (where t is an upper bound on the number of process crashes, and f, 0 <= f <= t, the actual number of crashes). This paper considers the k-set agreement problem in synchronous systems where up to t < n/2 processes can experience general omission failures (i.e., a process can crash or omit sending or receiving messages). It first introduces a new property, called strong termination. This property is on the processes that decide. It is satisfied if, not only every non-faulty process, but any process that neither crashes nor commits receive omission failure decides. The paper then presents a k-set agreement protocol that enjoys the following features. First, it is strongly terminating (to our knowledge, it is the first agreement protocol to satisfy this property, whatever the failure model considered). Then, it is early deciding and stopping in the sense that a process that either is non-faulty or commits only send omission failures decides and halts by round min([f/k] + 2, [t/k] + 1). To our knowledge, this is the first early deciding k-set agreement protocol for the general omission failure model. Moreover, the protocol pro-vides also the following additional early stopping property: a process that commits receive omission failures (and does not crash) executes at most min([f/k] + 2, [t/k] + 1) rounds. It is worth noticing that the protocol allows each property (strong termination vs early deciding/ stopping vs early stopping) not to be obtained at the detriment of the two others. The combination of the fact that min([f/k] + 2, [t/k] + 1) is a lower bound on the number of rounds in the crash failure model, and the very existence of the proposed protocol has two noteworthy consequences. First, it shows that, although the general omission failure model is more severe than the crash failure model, both models have the same lower bound for the non- faulty processes to decide. Second, it shows that, in the general omission failure model, this bound applies also the processes that do not crash and commit only send omission failures.", "paper_title": "Strongly Terminating Early-Stopping k-Set Agreement in Synchronous Systems with General Omission Failures", "paper_id": "WOS:000276746800013"}