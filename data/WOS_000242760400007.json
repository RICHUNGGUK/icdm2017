{"auto_keywords": [{"score": 0.035473764133107426, "phrase": "audsley's_algorithm"}, {"score": 0.013229053543686049, "phrase": "exact_schedulability_analysis"}, {"score": 0.01135084965762365, "phrase": "task_sets"}, {"score": 0.009736673864916705, "phrase": "runtime_overhead"}, {"score": 0.00481495049065317, "phrase": "fixed-priority_scheduling"}, {"score": 0.004767261858417823, "phrase": "real-time_scheduling"}, {"score": 0.0045357787854931894, "phrase": "corresponding_schedulability_analysis"}, {"score": 0.004358676214574977, "phrase": "considerable_overheads"}, {"score": 0.0034146585649631692, "phrase": "important_issue"}, {"score": 0.0031845067058084583, "phrase": "rate-monotonic_scheduling"}, {"score": 0.0031061129850110994, "phrase": "optimal_fixed-priority_scheduling_algorithms"}, {"score": 0.0025191653363555193, "phrase": "task_set"}, {"score": 0.00239657981537094, "phrase": "proposed_algorithm"}, {"score": 0.0023259039577313294, "phrase": "related_works"}, {"score": 0.0021049977753042253, "phrase": "heavy_load"}], "paper_keywords": ["real-time systems", " schedulability analysis", " periodic tasks", " fixed-priority preemptive scheduling"], "paper_abstract": "Real-time scheduling for task sets has been studied, and the corresponding schedulability analysis has been developed. Due to the considerable overheads required to precisely analyze the schedulability of a task set (referred to as exact schedulability analysis), the trade-off between precision and efficiency is widely studied. Many efficient but imprecise (i.e., sufficient but not necessary) analyses are discussed in the literature. However, how to precisely and efficiently analyze the schedulability of task sets remains an important issue. The Audsley's Algorithm was shown to be effective in exact schedulability analysis for task sets under rate-monotonic scheduling (one of the optimal fixed-priority scheduling algorithms). This paper focuses on reducing the runtime overhead of the Audsley's Algorithm. By properly partitioning a task set into two subsets and differently treating these two subsets during each iteration, the number of iterations required for analyzing the schedulability of the task set can be significantly reduced. The capability of the proposed algorithm was evaluated and compared to related works, which revealed up to a 55.5% saving in the runtime overhead for the Audsley's Algorithm when the system was under a heavy load. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "A faster exact schedulability analysis for fixed-priority scheduling", "paper_id": "WOS:000242760400007"}