{"auto_keywords": [{"score": 0.04672144708597597, "phrase": "input_artifacts"}, {"score": 0.00481495049065317, "phrase": "software_artifacts"}, {"score": 0.0046046429665581555, "phrase": "new_artifacts"}, {"score": 0.0041642891310893, "phrase": "composition_engines"}, {"score": 0.00409508755819924, "phrase": "distinct_kind"}, {"score": 0.004049590638590415, "phrase": "software_component"}, {"score": 0.003561205990687285, "phrase": "desired_results"}, {"score": 0.0033864888703414903, "phrase": "research_problems"}, {"score": 0.003220315882881027, "phrase": "executable_code"}, {"score": 0.0030451958332949735, "phrase": "build_or_configuration_controls"}, {"score": 0.002977836288535375, "phrase": "ui."}, {"score": 0.0029447150254434842, "phrase": "software_composition"}, {"score": 0.0027382040767844093, "phrase": "aspect-oriented_software_development"}, {"score": 0.0026478260192958924, "phrase": "aosd's_composition"}, {"score": 0.002618366076489732, "phrase": "separate_concerns"}], "paper_keywords": [""], "paper_abstract": "Composition is the process of creating new artifacts from a set of input artifacts by combining the content of the input artifacts according to some given specifications. Composition engines are a distinct kind of software component. Like compilers, parsers, and UI-generators, they have their own domain of discourse and base of concepts, their own structure for expressing desired results, their own internal solution structure, and their own set of research problems. Composition applies not only to artifacts representing executable code, but to any sort of artifacts, from build or configuration controls to documentation or UI. While software composition is of interest to an audience wider than that of developers applying aspect-oriented software development (AOSD) approaches, AOSD's composition of separate concerns or aspects presents more complex requirements than does object-composition. This paper describes a base of concepts suitable for expressing composition and shows how a general composition engine realizing these concepts can be used to effect the composition needs of several existing AOSD approaches.", "paper_title": "General composition of software artifacts", "paper_id": "WOS:000241358100013"}