{"auto_keywords": [{"score": 0.023960074177543624, "phrase": "mtf"}, {"score": 0.00481495049065317, "phrase": "parameterized_analysis_of_paging_and_list_update_algorithms"}, {"score": 0.004624751696958501, "phrase": "input_sequences"}, {"score": 0.0045324756541157574, "phrase": "list_update"}, {"score": 0.003955787027818301, "phrase": "input_sequence"}, {"score": 0.0037235274565193665, "phrase": "denning's_working_set_model"}, {"score": 0.0036125439380579626, "phrase": "well_known_algorithms"}, {"score": 0.0034348484776384643, "phrase": "parameterized-style_analysis"}, {"score": 0.0031684791285366315, "phrase": "online_algorithm"}, {"score": 0.0028070431733705735, "phrase": "denning's_working_set_measure"}, {"score": 0.002723301730223192, "phrase": "performance_hierarchy"}, {"score": 0.0025119730908615104, "phrase": "larger_cache"}, {"score": 0.0024617483174454113, "phrase": "better_performance"}, {"score": 0.002388283252319309, "phrase": "parameterized_analysis_framework"}, {"score": 0.002214048743052355, "phrase": "classical_model"}, {"score": 0.0021479597698614373, "phrase": "parameterized_case"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Online algorithms", " Paging", " List update", " Locality of reference"], "paper_abstract": "It is well-established that input sequences for paging and list update have locality of reference. In this paper we analyze the performance of algorithms for these problems in terms of the amount of locality in the input sequence. We define a measure for locality that is based on Denning's working set model and express the performance of well known algorithms in terms of this parameter. This explicitly introduces parameterized-style analysis to online algorithms. The idea is that rather than normalizing the performance of an online algorithm by an (optimal) offline algorithm, we explicitly express the behavior of the algorithm in terms of two more natural parameters: the size of the cache and Denning's working set measure. This technique creates a performance hierarchy of paging algorithms which better reflects their experimentally observed relative strengths. It also reflects the intuition that a larger cache leads to a better performance. We also apply the parameterized analysis framework to list update and show that certain randomized algorithms which are superior to MTF in the classical model are not so in the parameterized case, which matches experimental results.", "paper_title": "Parameterized Analysis of Paging and List Update Algorithms", "paper_id": "WOS:000352290500005"}