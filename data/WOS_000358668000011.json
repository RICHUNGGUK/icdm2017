{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "smartrank"}, {"score": 0.006340101162837455, "phrase": "cloud_computing"}, {"score": 0.004654826737377134, "phrase": "mobile_cloud_computing"}, {"score": 0.004610058444728656, "phrase": "resource_scarcity"}, {"score": 0.004543708337879809, "phrase": "major_obstacle"}, {"score": 0.0043713857434347254, "phrase": "energy_power"}, {"score": 0.004329331617724, "phrase": "processing_potential"}, {"score": 0.004085333687668526, "phrase": "human_cognition"}, {"score": 0.00393032656248792, "phrase": "mobile_hardware's_capabilities"}, {"score": 0.003855034057431947, "phrase": "language_translation"}, {"score": 0.0038179283509963695, "phrase": "speech_recognition"}, {"score": 0.00376293585033711, "phrase": "face_recognition"}, {"score": 0.0037087324991876727, "phrase": "new_trend"}, {"score": 0.0032232653428491435, "phrase": "mobile_applications"}, {"score": 0.0030858947334838145, "phrase": "response_time"}, {"score": 0.002968695624366393, "phrase": "face_recognition_application"}, {"score": 0.0029400959763737364, "phrase": "mobile_cloud"}, {"score": 0.002828418443899226, "phrase": "case_study"}, {"score": 0.0026817365934071486, "phrase": "face_recognition_process"}, {"score": 0.002542642270762272, "phrase": "balanced_metrics"}, {"score": 0.00249386680748172, "phrase": "cpu_utilization"}, {"score": 0.002469830206270585, "phrase": "round-trip_time"}, {"score": 0.002387507583705495, "phrase": "full_factorial_experimental_design"}, {"score": 0.0021670777282518424, "phrase": "new_parameters"}], "paper_keywords": ["Mobile cloud computing", " Offloading", " Partitioning", " Performance evaluation"], "paper_abstract": "Resource scarcity is a major obstacle for many mobile applications, since devices have limited energy power and processing potential. As an example, there are applications that seamlessly augment human cognition and typically require resources that far outstrip mobile hardware's capabilities, such as language translation, speech recognition, and face recognition. A new trend has been explored to tackle this problem, the use of cloud computing. This study presents SmartRank, a scheduling framework to perform load partitioning and offloading for mobile applications using cloud computing to increase performance in terms of response time. We first explore a benchmarking of face recognition application using mobile cloud and confirm its suitability to be used as case study with SmartRank. We have applied the approach to a face recognition process based on two strategies: cloudlet federation and resource ranking through balanced metrics (level of CPU utilization and round-trip time). Second, using a full factorial experimental design we tuned the SmartRank with the most suitable partitioning decision calibrating scheduling parameters. Nevertheless, SmartRank uses an equation that is extensible to include new parameters and make it applicable to other scenarios.", "paper_title": "SmartRank: a smart scheduling tool for mobile cloud computing", "paper_id": "WOS:000358668000011"}