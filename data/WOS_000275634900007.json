{"auto_keywords": [{"score": 0.04924037556403323, "phrase": "partially-ordered_domains"}, {"score": 0.0324336007450962, "phrase": "high-dimensional_data"}, {"score": 0.03188107595130305, "phrase": "pods"}, {"score": 0.00481495049065317, "phrase": "skyline_queries"}, {"score": 0.004627244470096107, "phrase": "skyline_algorithm"}, {"score": 0.004506171772318298, "phrase": "enormous_overhead"}, {"score": 0.004143196873246147, "phrase": "massive_datasets"}, {"score": 0.004106725110985659, "phrase": "existing_techniques"}, {"score": 0.004052616113326177, "phrase": "significant_amount"}, {"score": 0.003964007795174772, "phrase": "dominance_comparison"}, {"score": 0.0038602215057106917, "phrase": "skyline_points"}, {"score": 0.0038093479435377764, "phrase": "unprogressive_method"}, {"score": 0.003775803846431323, "phrase": "skyline_computing"}, {"score": 0.003742554019950264, "phrase": "pods."}, {"score": 0.003660700128133065, "phrase": "high_dimensionality"}, {"score": 0.003502305158321511, "phrase": "progressiveness_property"}, {"score": 0.003410565849262162, "phrase": "key_feature"}, {"score": 0.003350740737336966, "phrase": "remaining_problems"}, {"score": 0.0032629585038738856, "phrase": "fast-sky_algorithm"}, {"score": 0.003135564707433078, "phrase": "skyline_query_processing_time"}, {"score": 0.0030399188412691914, "phrase": "progressive_skyline_evaluation"}, {"score": 0.0029602552900111433, "phrase": "new_index_structures"}, {"score": 0.002934166052954463, "phrase": "topological_sorting_order"}, {"score": 0.00289546142998427, "phrase": "stratification_technique"}, {"score": 0.0028446460307503343, "phrase": "index_data"}, {"score": 0.002615156460073562, "phrase": "low-dimensional_data"}, {"score": 0.002592100731070259, "phrase": "stratified_minmax_treaps"}, {"score": 0.0024798279465139688, "phrase": "fast_dominance_comparison"}, {"score": 0.0024148064819862337, "phrase": "reporting_query"}, {"score": 0.0023724065150232897, "phrase": "dominance_query"}, {"score": 0.002289821830549781, "phrase": "experimental_results"}, {"score": 0.0022496114364599328, "phrase": "general_cases"}, {"score": 0.0021331586055770447, "phrase": "existing_algorithms"}], "paper_keywords": ["Skyline computation", " Optimality", " Progressiveness", " Partially-ordered domain"], "paper_abstract": "We devise a skyline algorithm that can efficiently mitigate the enormous overhead of processing millions of tuples on totally- and partially-ordered domains (henceforth, TODs and PODs). With massive datasets, existing techniques spend a significant amount of time on a dominance comparison because of both a large number of skyline points and the unprogressive method of skyline computing with PODS. (if data has high dimensionality, the situation is undoubtedly aggravated,) The progressiveness property turns out to be the key feature for solving all remaining problems. This article presents a FAST-SKY algorithm that deals successfully with these two obstacles and improves skyline query processing time strikingly, even with high-dimensional data. Progressive skyline evaluation with PODS is guaranteed by new index structures and topological sorting order. A stratification technique is adopted to index data on PODS, and we propose two new index structures: stratified R-trees (SR-trees) for low-dimensional data and stratified MinMax treaps (SM-treaps) for high-dimensional data. A fast dominance comparison is achieved by using a reporting query instead of a dominance query, and a dimensionality reduction technique. Experimental results suggest that in general cases (anti-correlated and uniform distributions) FAST-SKY is orders of magnitude faster than existing algorithms. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A fast and progressive algorithm for skyline queries with totally- and partially-ordered domains", "paper_id": "WOS:000275634900007"}