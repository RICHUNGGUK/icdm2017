{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optional_cycles"}, {"score": 0.004774530554776608, "phrase": "imprecise-computation_systems"}, {"score": 0.004635701867952543, "phrase": "realtime_systems"}, {"score": 0.004296889776409743, "phrase": "imprecise_computation_model"}, {"score": 0.0038668462001710314, "phrase": "stringent_energy_constraints"}, {"score": 0.0037861265016041813, "phrase": "battery_powered_devices"}, {"score": 0.003568932067237836, "phrase": "imprecise_computation_systems"}, {"score": 0.0035240305920962766, "phrase": "energy_constraints"}, {"score": 0.0031577303835881964, "phrase": "total_reward"}, {"score": 0.003104849179057156, "phrase": "time_and_energy_constraints"}, {"score": 0.003014422649429416, "phrase": "quasi-static_approach"}, {"score": 0.0027819985260847577, "phrase": "actual_number"}, {"score": 0.002758597251689795, "phrase": "task_execution_cycles"}, {"score": 0.002389514188569084, "phrase": "precomputed_assignments"}, {"score": 0.0023100907305651872, "phrase": "actual_completion_times"}, {"score": 0.00214995338990007, "phrase": "numerous_experiments"}, {"score": 0.0021049977753042253, "phrase": "real_life_application"}], "paper_keywords": ["energy management", " imprecise computation", " quasi-static", " realtime"], "paper_abstract": "For some realtime systems, it is possible to tradeoff precision for timeliness. For such systems, typically considered under the imprecise computation model, a function assigns reward to the application depending on the amount of computation allotted to it. Also, these systems often have stringent energy constraints since many such applications run on battery powered devices. We address in this paper, the problem of maximizing rewards for imprecise computation systems that have energy constraints, more specifically, the problem of determining the voltage at which each task runs as well as the number of optional cycles such that the total reward is maximal while time and energy constraints Are satisfied. We propose a quasi-static approach that is able to exploit, with, low online overhead, the dynamic slack that arises from variations in the actual number of task execution cycles. In our quasi-static approach, the problem is solved in two steps: first, at design-time, a set of voltage/optional-cycles assignments are computed and stored (offline phase); second, the selection among the precomputed assignments is left for runtime, based on actual completion times and consumed energy (online phase). The advantages of the approach are demonstrated through numerous experiments with both synthetic examples and a real life application.", "paper_title": "Quasi-static assignment of voltages and optional cycles in imprecise-computation systems with energy considerations", "paper_id": "WOS:000241747500006"}