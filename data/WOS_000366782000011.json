{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graph_databases"}, {"score": 0.0430291416955105, "phrase": "knowledge_base"}, {"score": 0.04260387679889847, "phrase": "rdf_kb_store"}, {"score": 0.004195418010131832, "phrase": "large_set"}, {"score": 0.003997891221012094, "phrase": "static_data"}, {"score": 0.003970439654470374, "phrase": "historical_data"}, {"score": 0.0039431758381711125, "phrase": "real_time_data"}, {"score": 0.0038758293658651237, "phrase": "rdf_stores"}, {"score": 0.003822778117250714, "phrase": "inferential_engines"}, {"score": 0.0033883824438527316, "phrase": "ontological_part"}, {"score": 0.0032065418360603293, "phrase": "graph_database_versioning_feature"}, {"score": 0.0031193028729331667, "phrase": "rdf_stores_tool"}, {"score": 0.0029722900280316216, "phrase": "black_box_approach"}, {"score": 0.0028914057633212045, "phrase": "time_consuming_process"}, {"score": 0.0028224589174032535, "phrase": "kb"}, {"score": 0.002793380001054064, "phrase": "manually_edited_long_scripts"}, {"score": 0.0025981810951165836, "phrase": "lifecycle_methodology"}, {"score": 0.0023917027133236813, "phrase": "knowledge_oriented_projects"}, {"score": 0.002375253757224999, "phrase": "sii-mobility"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["RDF knowledge base versioning", " Graph stores versioning", " RDF store management", " Knowledge base life cycle"], "paper_abstract": "Graph databases are taking place in many different applications: smart city, smart cloud, smart education, etc. In most cases, the applications imply the creation of ontologies and the integration of a large set of knowledge to build a knowledge base as an RDF KB store, with ontologies, static data, historical data and real time data. Most of the RDF stores are endowed with inferential engines that materialize some knowledge as triples during indexing or querying. In these cases, deleting concepts may imply the removal and change of many triples, especially if the triples are those modeling the ontological part of the knowledge base, or are referred by many other concepts. For these solutions, the graph database versioning feature is not provided at level of the RDF stores tool, and it is quite complex and time consuming to be addressed as black box approach. In most cases the indexing is a time consuming process, and the rebuilding of the KB may imply manually edited long scripts that are error prone. Therefore, in order to solve these kinds of problems, this paper proposes a lifecycle methodology and a tool supporting versioning of indexes for RDF KB store. The solution proposed has been developed on the basis of a number of knowledge oriented projects as Sii-Mobility (smart city), RESOLUTE (smart city risk assessment), ICARO (smart cloud). Results are reported in terms of time saving and reliability. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Graph databases methodology and tool supporting index/store versioning", "paper_id": "WOS:000366782000011"}