{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "top_crashes"}, {"score": 0.004707672504464783, "phrase": "early_stage"}, {"score": 0.004602773636967002, "phrase": "debugging_efforts"}, {"score": 0.003511613254403125, "phrase": "empirical_investigation"}, {"score": 0.0033820175939147895, "phrase": "thunderbird"}, {"score": 0.0030901063954739375, "phrase": "large_majority"}, {"score": 0.003043957650600757, "phrase": "crash_reports"}, {"score": 0.002953711377604328, "phrase": "\"top_crashes"}, {"score": 0.0028233196851239753, "phrase": "software_quality"}, {"score": 0.002719055901632759, "phrase": "machine_learner"}, {"score": 0.0023745087648471613, "phrase": "new_release"}, {"score": 0.002286781334850213, "phrase": "quick_resolution"}, {"score": 0.0021693692831601745, "phrase": "improved_user_experience"}, {"score": 0.0021369416775353124, "phrase": "better_allocation"}, {"score": 0.0021049977753042253, "phrase": "maintenance_efforts"}], "paper_keywords": ["Top crash", " machine learning", " crash reports", " social network analysis", " data mining"], "paper_abstract": "Many popular software systems automatically report failures back to the vendors, allowing developers to focus on the most pressing problems. However, it takes a certain period of time to assess which failures occur most frequently. In an empirical investigation of the Firefox and Thunderbird crash report databases, we found that only 10 to 20 crashes account for the large majority of crash reports; predicting these \"top crashes\" thus could dramatically increase software quality. By training a machine learner on the features of top crashes of past releases, we can effectively predict the top crashes well before a new release. This allows for quick resolution of the most important crashes, leading to improved user experience and better allocation of maintenance efforts.", "paper_title": "Which Crashes Should I Fix First?: Predicting Top Crashes at an Early Stage to Prioritize Debugging Efforts", "paper_id": "WOS:000290934800009"}