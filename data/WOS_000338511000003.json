{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "modern_memory_systems"}, {"score": 0.013030936543970764, "phrase": "apc"}, {"score": 0.007096672327740879, "phrase": "memory_performance"}, {"score": 0.004706895428234964, "phrase": "infamous_\"memory_wall\"_problem"}, {"score": 0.004497973025639345, "phrase": "intensive_applications"}, {"score": 0.004317848984770719, "phrase": "leading_performance_bottleneck"}, {"score": 0.004278807087784626, "phrase": "modern_computing_systems"}, {"score": 0.0041827333568982055, "phrase": "memory_system_performance"}, {"score": 0.004051828608343507, "phrase": "high-end_computing"}, {"score": 0.003907212558276185, "phrase": "miss_ratio"}, {"score": 0.0038718693803734623, "phrase": "amat"}, {"score": 0.003584025547693836, "phrase": "overall_performance"}, {"score": 0.003503497128638099, "phrase": "modern_memory_system"}, {"score": 0.0034092474150348036, "phrase": "ipc"}, {"score": 0.0033175095965171674, "phrase": "cpu_performance"}, {"score": 0.0030847461428168614, "phrase": "novel_memory_metric"}, {"score": 0.003056819704624705, "phrase": "access_per_cycle"}, {"score": 0.0029209233709517634, "phrase": "data_accesses"}, {"score": 0.0028293966058473476, "phrase": "overall_memory_performance"}, {"score": 0.0027035833504191233, "phrase": "unique_contribution"}, {"score": 0.0026307897899760383, "phrase": "memory_evaluation"}, {"score": 0.0026069623057065664, "phrase": "cpu_evaluation"}, {"score": 0.002525248554951453, "phrase": "quantitative_measurement"}, {"score": 0.002423931101340771, "phrase": "simulation_results"}, {"score": 0.002316105585203396, "phrase": "concurrency_complexity"}, {"score": 0.0021049977753042253, "phrase": "existing_memory_metrics"}], "paper_keywords": ["Memory performance measurement", " memory metric", " measurement methodology"], "paper_abstract": "Due to the infamous \"memory wall\" problem and a drastic increase in the number of data intensive applications, memory rather than processors has become the leading performance bottleneck in modern computing systems. Evaluating and understanding memory system performance is increasingly becoming the core of high-end computing. Conventional memory metrics, such as miss ratio, AMAT, etc., are designed to measure a given memory performance parameter, and do not reflect the overall performance or complexity of a modern memory system. On the other hand, widely used system-performance metrics, such as IPC, are designed to measure CPU performance, and do not directly reflect memory performance. In this paper, we propose a novel memory metric called Access Per Cycle (APC), which is the number of data accesses per cycle, to measure the overall memory performance with respect to the complexity of modern memory systems. A unique contribution of APC is its separation of memory evaluation from CPU evaluation; therefore, it provides a quantitative measurement of the \"data-intensiveness\" of an application. Simulation results show that the memory performance measured by APC captures the concurrency complexity of modern memory systems, while other metrics cannot. APC is simple, effective, and is significantly more appropriate than existing memory metrics in evaluating modern memory systems.", "paper_title": "APC: A Novel Memory Metric and Measurement Methodology for Modern Memory Systems", "paper_id": "WOS:000338511000003"}