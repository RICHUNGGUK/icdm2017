{"auto_keywords": [{"score": 0.050075984798138407, "phrase": "split_state_model"}, {"score": 0.03849719849691108, "phrase": "halevi"}, {"score": 0.03831771280575004, "phrase": "lin"}, {"score": 0.014408296589015693, "phrase": "entire_secret"}, {"score": 0.00479147041454407, "phrase": "leakage_resilient_cryptography"}, {"score": 0.004540591176992658, "phrase": "leakage_oracle"}, {"score": 0.004240116703465252, "phrase": "public-key_encryption"}, {"score": 0.00413767314434795, "phrase": "secret-key_leakage"}, {"score": 0.004008172944779366, "phrase": "secret-key_leakage_oracle"}, {"score": 0.003911311262963231, "phrase": "challenge_ciphertext"}, {"score": 0.0038448988429199086, "phrase": "sender-randomness_leakage"}, {"score": 0.003798150286809466, "phrase": "one-bit_leakage"}, {"score": 0.0037611594739947007, "phrase": "target_public_key"}, {"score": 0.0036882563399941565, "phrase": "tcc"}, {"score": 0.0035120820636355458, "phrase": "so-called_split_statemodel"}, {"score": 0.003477867589973215, "phrase": "secret_key"}, {"score": 0.0032079813320482304, "phrase": "split-state_model"}, {"score": 0.003168952160907741, "phrase": "post-challenge_secret-key_leakage_resilient_cpa_secure_pkes"}, {"score": 0.0030923300111095646, "phrase": "cca"}, {"score": 0.0030249112978202922, "phrase": "pke"}, {"score": 0.002937318465594425, "phrase": "sender-randomness_leakage_pke"}, {"score": 0.002852256089630964, "phrase": "open_issues"}, {"score": 0.0027628750428786296, "phrase": "post-challenge_secret-key_leakage_cpa_secure"}, {"score": 0.0027026375053777543, "phrase": "multiple_challenges"}, {"score": 0.002669740017533749, "phrase": "efficient_generic_construction"}, {"score": 0.0026437098141162403, "phrase": "cca_secure_pke_scheme"}, {"score": 0.0026243534128245886, "phrase": "multiple-challenge_cca_secure_pke"}, {"score": 0.00250500329800437, "phrase": "additional_assumption"}, {"score": 0.0024563849242113626, "phrase": "resulting_schemes"}, {"score": 0.002125735077004312, "phrase": "identity-based_encryption"}, {"score": 0.0021049977753042253, "phrase": "scheme_to_a_post-challenge_master-key_leakage_and_sender-randomness_leakage_secure_ibe."}], "paper_keywords": ["post-challenge (bounded) leakage", " simultaneous secret-key and sender-randomness leakage", " CCA2 security for multiple messages"], "paper_abstract": "Leakage resilient cryptography is often considered in the presence of a very strong leakage oracle: An adversary may submit arbitrary efficiently computable function f to the leakage oracle to receive f (x), where x denotes the entire secret that a party possesses. This model is somewhat too strong in the setting of public-key encryption (PKE). It is known that no secret-key leakage resilient PKE scheme exists if the adversary may have access to the secret-key leakage oracle to receive only one bit after it was given the challenge ciphertext. Similarly, there exists no sender-randomness leakage resilient PKE scheme if one-bit leakage occurs after the target public key was given to the adversary. At TCC 2011, Halevi and Lin have broken the barrier of after-the-fact leakage, by proposing the so-called split statemodel, where a secret key of a party is explicitly divided into at least two pieces, and the adversary may have not access to the entire secret at once, but each divided pieces, one by one. In the split-state model, they have constructed post-challenge secret-key leakage resilient CPA secure PKEs from hash proof systems, but the construction of CCA secure post-challenge secret-key leakage PKE has remained open. They have also remained open to construct sender-randomness leakage PKE in the split state model. This paper provides a solution to the open issues. We also note that the proposal of Halevi and Lin is post-challenge secret-key leakage CPA secure against a single challenge ciphertext; not against multiple challenges. We present an efficient generic construction that converts any CCA secure PKE scheme into a multiple-challenge CCA secure PKE that simultaneously tolerates post-challenge secret-key and sender-randomness leakage in the split state model, without any additional assumption. In addition, our leakage amount of the resulting schemes is the same as that of Halevi and Lin CPA PKE, i.e., (1/2 + gamma)l/2 where l denotes the length of the entire secret (key or randomness) and. denotes a universal (possitive) constant less than 1/2. Our conversion is generic and available for many other public-key primitives. For instance, it can convert any identity-based encryption (IBE) scheme to a post-challenge master-key leakage and sender-randomness leakage secure IBE.", "paper_title": "Post-Challenge Leakage Resilient Public-Key Cryptosystem in Split State Model", "paper_id": "WOS:000359464800006"}