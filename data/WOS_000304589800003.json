{"auto_keywords": [{"score": 0.04749269056426767, "phrase": "tile_complexity"}, {"score": 0.037817751206302624, "phrase": "fixed_aspect_ratio"}, {"score": 0.03726905590060176, "phrase": "high_probability"}, {"score": 0.0353219410822574, "phrase": "approximate_shapes"}, {"score": 0.03515000140464733, "phrase": "lncs"}, {"score": 0.03472507903261577, "phrase": "springer"}, {"score": 0.03102555340982689, "phrase": "binary_arithmetic"}, {"score": 0.00481495049065317, "phrase": "rectangular_shapes"}, {"score": 0.004790756351382389, "phrase": "concentration_programming"}, {"score": 0.004766683200410046, "phrase": "probabilistic_tile_assembly_models"}, {"score": 0.004742730438544081, "phrase": "efficient_tile_sets"}, {"score": 0.004695183699894267, "phrase": "rectilinear_shapes"}, {"score": 0.004659835253478786, "phrase": "critical_importance"}, {"score": 0.004636416905269351, "phrase": "algorithmic_self_assembly"}, {"score": 0.004521070773781327, "phrase": "deterministic_self_assembly_system"}, {"score": 0.0044870272550540415, "phrase": "n_x_n_square"}, {"score": 0.004419703921314433, "phrase": "kolmogrov_complexity"}, {"score": 0.004386420328440248, "phrase": "deterministic_self_assembly_systems"}, {"score": 0.0043533862892678864, "phrase": "optimal_tile_complexity"}, {"score": 0.004277266958351814, "phrase": "related_shapes"}, {"score": 0.004202472962684885, "phrase": "unique_tiles"}, {"score": 0.004118587636081584, "phrase": "intensive_task"}, {"score": 0.0038186039088445524, "phrase": "self_assembly"}, {"score": 0.0037993970934472243, "phrase": "tile_concentration_programming_models"}, {"score": 0.003704797078215222, "phrase": "concentration_programming_model"}, {"score": 0.0034348484776384643, "phrase": "existing_results"}, {"score": 0.003417565253539315, "phrase": "kao_et_al"}, {"score": 0.0032330817161112177, "phrase": "doty"}, {"score": 0.00317648284060926, "phrase": "exact_shapes"}, {"score": 0.0030895394261534776, "phrase": "computer_science"}, {"score": 0.0030509744794449344, "phrase": "ieee"}, {"score": 0.0030354548064754393, "phrase": "atlanta"}, {"score": 0.0026487293624964997, "phrase": "approximate_frames"}, {"score": 0.0024742098091226203, "phrase": "staircase_sampling"}, {"score": 0.002455541069531787, "phrase": "equimolar_concentration_programming_model"}, {"score": 0.0024186240910910525, "phrase": "linear_assemblies"}, {"score": 0.0023287467415552803, "phrase": "icalp"}, {"score": 0.002305344573604953, "phrase": "springer-verlag"}, {"score": 0.0021317474351448544, "phrase": "probabilistic_tile_assembly_model"}, {"score": 0.0021049977753042253, "phrase": "upper_bound"}], "paper_keywords": ["Tile assembly model", " Concentration programming", " Self assembly algorithms", " Probabilistic self assembly model (PTAM)", " Randomized algorithms"], "paper_abstract": "Efficient tile sets for self assembling rectilinear shapes is of critical importance in algorithmic self assembly. A lower bound on the tile complexity of any deterministic self assembly system for an n x n square is (inferred from the Kolmogrov complexity). Deterministic self assembly systems with an optimal tile complexity have been designed for squares and related shapes in the past. However designing unique tiles specific to a shape is still an intensive task in the laboratory. On the other hand copies of a tile can be made rapidly using PCR (polymerase chain reaction) experiments. This led to the study of self assembly on tile concentration programming models. We present two major results in this paper on the concentration programming model. First we show how to self assemble rectangles with a fixed aspect ratio (alpha:beta), with high probability, using tiles. This result is much stronger than the existing results by Kao et al. (Randomized self-assembly for approximate shapes, LNCS, vol 5125. Springer, Heidelberg, 2008) and Doty (Randomized self-assembly for exact shapes. In: proceedings of the 50th annual IEEE symposium on foundations of computer science (FOCS), IEEE, Atlanta. pp 85-94, 2009)-which can only self assembly squares and rely on tiles which perform binary arithmetic. On the other hand, our result is based on a technique called staircase sampling. This technique eliminates the need for sub-tiles which perform binary arithmetic, reduces the constant in the asymptotic bound, and eliminates the need for approximate frames (Kao et al. Randomized self-assembly for approximate shapes, LNCS, vol 5125. Springer, Heidelberg, 2008) . Our second result applies staircase sampling on the equimolar concentration programming model (The tile complexity of linear assemblies. In: proceedings of the 36th international colloquium automata, languages and programming: Part I on ICALP '09, Springer-Verlag, pp 235-253, 2009), to self assemble rectangles (of fixed aspect ratio) with high probability. The tile complexity of our algorithm is and is optimal on the probabilistic tile assembly model (PTAM)-n being an upper bound on the dimensions of a rectangle.", "paper_title": "Self assembly of rectangular shapes on concentration programming and probabilistic tile assembly models", "paper_id": "WOS:000304589800003"}