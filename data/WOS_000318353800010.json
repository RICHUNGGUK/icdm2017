{"auto_keywords": [{"score": 0.049488021144002546, "phrase": "full_reversal"}, {"score": 0.0491952477301852, "phrase": "partial_reversal"}, {"score": 0.006309575217647174, "phrase": "work_complexity"}, {"score": 0.005731090272050236, "phrase": "initial_labelings"}, {"score": 0.00481495049065317, "phrase": "binary_link_labels"}, {"score": 0.004624402232460234, "phrase": "gafni"}, {"score": 0.004595760763189549, "phrase": "bertsekas"}, {"score": 0.0041478818670853115, "phrase": "connected_input"}, {"score": 0.004096635798793164, "phrase": "acyclic_graph"}, {"score": 0.004046020290832207, "phrase": "output_dag"}, {"score": 0.003934401172799425, "phrase": "distinguished_destination"}, {"score": 0.003778566972399296, "phrase": "link_reversal"}, {"score": 0.0036742989715836745, "phrase": "novel_formalization"}, {"score": 0.003640183972131238, "phrase": "binary_labels"}, {"score": 0.003517773841528639, "phrase": "legal_link_labelings"}, {"score": 0.003357435261066107, "phrase": "exact_expression"}, {"score": 0.003135356056324338, "phrase": "legal_input_graph"}, {"score": 0.003077372515276563, "phrase": "per-node_work_complexity"}, {"score": 0.0030582832134483685, "phrase": "full_reversal_and_partial_reversal_follow"}, {"score": 0.002973831814707697, "phrase": "first_exact_expression"}, {"score": 0.002918826667294298, "phrase": "binary_link"}, {"score": 0.0027684263985790526, "phrase": "partial_reversal_-_using_game_theory"}, {"score": 0.002700348931172875, "phrase": "incoming_links"}, {"score": 0.0025691622090542325, "phrase": "good_work_complexity"}, {"score": 0.0021049977753042253, "phrase": "rigorous_basis"}], "paper_keywords": ["link reversal routing", " wireless networks", " complexity of algorithms", " applications of game theory"], "paper_abstract": "Full Reversal and Partial Reversal are two well-known routing algorithms that were introduced by Gafni and Bertsekas [IEEE Trans. Commun., 29 (1981), pp. 11-18]. By reversing the directions of some links of the graph, these algorithms transform a connected input DAG (directed acyclic graph) into an output DAG in which each node has at least one path to a distinguished destination node. We present a generalization of these algorithms, called the link reversal (LR) algorithm, based on a novel formalization that assigns binary labels to the links of the input DAG. We characterize the legal link labelings for which LR is guaranteed to establish routes. Moreover, we give an exact expression for the number of steps - called work complexity - taken by each node in every execution of LR from any legal input graph. Exact expressions for the per-node work complexity of Full Reversal and Partial Reversal follow from our general formula; this is the first exact expression known for Partial Reversal. Our binary link labels formalism facilitates comparison of the work complexity of certain link labelings - including those corresponding to Full Reversal and Partial Reversal - using game theory. We consider labelings in which all incoming links of a given node i are labeled with the same binary value mu(i). Finding initial labelings that induce good work complexity can be considered as a game in which to each node i a player is associated who has strategy mu(i). In this game, one tries to minimize the cost, i. e., the number of steps. Modeling the initial labelings as this game allows us to compare the work complexity of Full Reversal and Partial Reversal in a way that provides a rigorous basis for the intuition that Partial Reversal is better than Full Reversal with respect to work complexity.", "paper_title": "LINK REVERSAL ROUTING WITH BINARY LINK LABELS: WORK COMPLEXITY", "paper_id": "WOS:000318353800010"}