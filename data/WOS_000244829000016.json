{"auto_keywords": [{"score": 0.044617999017165066, "phrase": "materialized_views"}, {"score": 0.03314999892612071, "phrase": "total_accesses"}, {"score": 0.00481495049065317, "phrase": "incremental_view_maintenance"}, {"score": 0.004700193486903964, "phrase": "data_warehouse_environment"}, {"score": 0.004533142516832776, "phrase": "materialized_view"}, {"score": 0.004372002674739612, "phrase": "efficient_support"}, {"score": 0.004319566932528865, "phrase": "olap_query_processing"}, {"score": 0.003922011960904278, "phrase": "source_relations"}, {"score": 0.00360417515510547, "phrase": "significant_overhead"}, {"score": 0.0034342161742428635, "phrase": "warehouse_views"}, {"score": 0.0028650312174624635, "phrase": "efficient_incremental_view_maintenance_method"}, {"score": 0.0025853238923610076, "phrase": "delta_evaluation_expression"}, {"score": 0.0025388705701873075, "phrase": "delta_evaluation_tree"}, {"score": 0.0024932498388507084, "phrase": "core_concepts"}, {"score": 0.0023755529073496394, "phrase": "dynamic_programming_algorithm"}, {"score": 0.002304824112812496, "phrase": "optimal_delta_evaluation_tree"}], "paper_keywords": ["materialized view", " view maintenance", " incremental maintenance"], "paper_abstract": "in the data warehouse environment, the concept of a materialized view is common and important for efficient support of OLAP query processing. Materialized views are generally derived from several relations. These materialized views need to be updated when source relations change. Since the propagation of updates to the views may impose a significant overhead, it is essential to update the warehouse views efficiently. Though various view maintenance strategies have been discussed in the past, optimizations on the total accesses to relations have not been sufficiently investigated. In this paper we propose an efficient incremental view maintenance method called optimal delta evaluation that can minimize the total accesses to relations. We first present the delta evaluation expression and a delta evaluation tree which are core concepts of the method. Then, a dynamic programming algorithm that can find the optimal delta evaluation tree is proposed. We also present various experimental results that show the usefulness and efficiency of our proposed method. (c) 2006 Elsevier B.V All rights reserved.", "paper_title": "Reducing the cost of accessing relations in incremental view maintenance", "paper_id": "WOS:000244829000016"}