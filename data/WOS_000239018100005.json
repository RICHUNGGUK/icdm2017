{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "black_hole"}, {"score": 0.004615202066192795, "phrase": "highly_harmful_stationary_process"}, {"score": 0.004270178957872099, "phrase": "mobile_agents"}, {"score": 0.003603989174919527, "phrase": "upper_bound"}, {"score": 0.003287482882222731, "phrase": "minimum_number"}, {"score": 0.0029357204796552653, "phrase": "starting_node"}, {"score": 0.00281371157349156, "phrase": "fastest_possible_black_hole_search"}, {"score": 0.002677744558540711, "phrase": "general_scenario"}, {"score": 0.0023408288327263294, "phrase": "remaining_nodes"}, {"score": 0.002180848602315088, "phrase": "fastest_possible_black_hole_search_scheme"}, {"score": 0.0021052125089108904, "phrase": "np"}], "paper_keywords": ["approximation algorithm", " black hole", " graph", " mobile agent", " NP-hard problem"], "paper_abstract": "A black hole is a highly harmful stationary process residing in a node of a network and destroying all mobile agents visiting the node, without leaving any trace. We consider the task of locating a black hole in a (partially) synchronous network, assuming an upper bound on the time of any edge traversal by an agent. The minimum number of agents capable to identify a black hole is two. For a given graph and given starting node we are interested in the fastest possible black hole search by two agents, under the general scenario in which some subset of nodes is safe and the black hole can be located in one of the remaining nodes. We show that the problem of finding the fastest possible black hole search scheme by two agents is NP-hard, and we give a 9.3-approximation for it.", "paper_title": "Complexity of searching for a black hole", "paper_id": "WOS:000239018100005"}