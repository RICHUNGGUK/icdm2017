{"auto_keywords": [{"score": 0.048483033890383866, "phrase": "input_wires"}, {"score": 0.00481495049065317, "phrase": "smoothing_network"}, {"score": 0.00475413908468027, "phrase": "distributed_data_structure"}, {"score": 0.004204320052179726, "phrase": "output_wires"}, {"score": 0.004064117897000019, "phrase": "smoothing_networks"}, {"score": 0.0038789122930433305, "phrase": "real_distributed_system"}, {"score": 0.003813669883040509, "phrase": "network_switches"}, {"score": 0.003548368289666932, "phrase": "correct_initial_state"}, {"score": 0.003503497128638099, "phrase": "new_switch"}, {"score": 0.0034738975998176323, "phrase": "prior_analyses"}, {"score": 0.0033865859510157238, "phrase": "new_assumptions"}, {"score": 0.0031375577552605533, "phrase": "counting_networks"}, {"score": 0.0030586736004285216, "phrase": "arbitrary_initial_state"}, {"score": 0.0024012441367538455, "phrase": "balancing_network"}, {"score": 0.0022916428586256723, "phrase": "local_stabilization_actions"}, {"score": 0.0021870332034407817, "phrase": "\"legal_state"}, {"score": 0.0021049977753042253, "phrase": "illegal_state"}], "paper_keywords": ["smoothing networks", " counting networks", " self-stabilization"], "paper_abstract": "A smoothing network is a distributed data structure that accepts tokens on input wires and routes them to output wires. It ensures that however imbalanced the traffic on input wires, the numbers of tokens emitted on output wires are approximately balanced. Prior work on smoothing networks always assumed that such networks were properly initialized. In a real distributed system, however, network switches may be rebooted or replaced dynamically, and it may not be practical to determine the correct initial state for the new switch. Prior analyses do not work under these new assumptions. This paper makes the following contributions. First, we show that some well-known 1-smoothing networks, known as counting networks, when started in an arbitrary initial state (perhaps chosen by an adversary), remain remarkably smooth, degrading from 1-smooth to (log n)-smooth, where it is the number of input/output wires. For the networks that we consider, we show that the above (log it) bound for the smoothness is tight. Our second contribution is to show how any balancing network can be made self-stabilizing with the addition of local stabilization actions and state, which restore the network back to a \"legal state\" even if it starts out in an illegal state.", "paper_title": "Self-stabilizing smoothing and balancing networks", "paper_id": "WOS:000237023500002"}