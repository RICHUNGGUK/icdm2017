{"auto_keywords": [{"score": 0.0466435239499027, "phrase": "requirements_changes"}, {"score": 0.00481495049065317, "phrase": "managing_software_requirements_changes"}, {"score": 0.004752221133109136, "phrase": "negotiation-style_revision"}, {"score": 0.004669845451682529, "phrase": "proposed_software_project"}, {"score": 0.004588891098290524, "phrase": "software_requirements"}, {"score": 0.004149792080414689, "phrase": "existing_artifacts"}, {"score": 0.003954837422946628, "phrase": "effective_and_flexible_requirements"}, {"score": 0.003671338229632309, "phrase": "booth's_negotiation-style_framework"}, {"score": 0.0035141291835319682, "phrase": "current_requirements_specification"}, {"score": 0.0032054891061528896, "phrase": "new_information"}, {"score": 0.0030017207229983385, "phrase": "requirements_change"}, {"score": 0.002749980017065414, "phrase": "belief_negotiation_models"}, {"score": 0.0027140798043053986, "phrase": "different_processes"}, {"score": 0.002690406375639144, "phrase": "requirements_revision"}, {"score": 0.002475532161577715, "phrase": "current_requirements"}, {"score": 0.0023694065215394593, "phrase": "current_specification"}, {"score": 0.0021705796895687864, "phrase": "important_role"}, {"score": 0.0021049977753042253, "phrase": "belief_negotiation_model"}], "paper_keywords": ["requirements change", " non-prioritized belief revision", " inconsistency handling", " negotiation"], "paper_abstract": "For any proposed software project, when the software requirements specification has been established, requirements changes may result in not only a modification of the requirements specification but also a series of modifications of all existing artifacts during the development. Then it is necessary to provide effective and flexible requirements changes management. In this paper, we present an approach to managing requirements changes based on Booth's negotiation-style framework for belief revision. Informally, we consider the current requirements specification as a belief set about the system-to-be. The request of requirements change is viewed as new information about the same system-to-be. Then the process of executing the requirements change is a process of revising beliefs about the system-to-be. We design a family of belief negotiation models appropriate for different processes of requirements revision, including the setting of the request of requirements change being fully accepted, the setting of the current requirements specification being fully preserved, and that of the current specification and the request of requirements change reaching a compromise. In particular, the prioritization of requirements plays an important role in reaching an agreement in each belief negotiation model designed in this paper.", "paper_title": "Managing Software Requirements Changes Based on Negotiation-Style Revision", "paper_id": "WOS:000297212300014"}