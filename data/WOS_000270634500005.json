{"auto_keywords": [{"score": 0.025662565572789047, "phrase": "fpt_algorithm"}, {"score": 0.00481495049065317, "phrase": "set_problem"}, {"score": 0.0040186038781533946, "phrase": "so-called_hypernodes"}, {"score": 0.003310447652300423, "phrase": "nontrivial_extension"}, {"score": 0.0032468685934998335, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0027444334639134217, "phrase": "network_analysis"}, {"score": 0.0022749744354271816, "phrase": "target_vertices"}, {"score": 0.0021049977753042253, "phrase": "fpt_result"}], "paper_keywords": ["Hitting set", " Job assignment", " Parameterized algorithms", " Dynamic programming on subsets", " Cores in graphs"], "paper_abstract": "The multiple weighted hitting set problem is to find a subset of nodes in a hypergraph that hits every hyperedge in at least m nodes. We extend the problem to a notion of hypergraphs with so-called hypernodes and show that, for m=2, it remains fixed-parameter tractable (FPT), parameterized by the number of hyperedges. This is accomplished by a nontrivial extension of the dynamic programming algorithm for hypergraphs. The algorithm might be interesting for certain assignment problems, but here we need it as a tool to solve another problem motivated by network analysis: A d-core of a graph is a subgraph in which every vertex has at least d neighbors. We give an FPT algorithm that computes a smallest 2-core including a given set of target vertices, where the number of targets is the parameter. This FPT result is best possible in the sense that no FPT algorithm for 3-cores can be expected.", "paper_title": "Multiple hypernode hitting sets and smallest two-cores with targets", "paper_id": "WOS:000270634500005"}