{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "prediction_systems"}, {"score": 0.0462274775871369, "phrase": "competing_prediction_systems"}, {"score": 0.004764859786310636, "phrase": "software_project_estimation"}, {"score": 0.004666228956744244, "phrase": "software_engineering"}, {"score": 0.004359500411441827, "phrase": "conflicting_results"}, {"score": 0.0041589926969138585, "phrase": "validation_study_results"}, {"score": 0.003946960862020283, "phrase": "particular_focus"}, {"score": 0.003905864553426306, "phrase": "continuous_prediction_systems"}, {"score": 0.0038049789989278463, "phrase": "new_framework"}, {"score": 0.0035733198242955634, "phrase": "unbiased_statistic"}, {"score": 0.0035361001070845677, "phrase": "standardised_accuracy"}, {"score": 0.0034088473318056537, "phrase": "result_likelihood"}, {"score": 0.0033381913087533457, "phrase": "baseline_technique"}, {"score": 0.003303412571939192, "phrase": "random_'predictions"}, {"score": 0.003085989256759819, "phrase": "effect_sizes"}, {"score": 0.0029905104479072482, "phrase": "empirical_evaluations"}, {"score": 0.0028527866590859967, "phrase": "original_conclusions"}, {"score": 0.0027356847952125433, "phrase": "even_the_strongest_results"}, {"score": 0.0026096659285441384, "phrase": "medium_effect_size"}, {"score": 0.00256895975568914, "phrase": "random_guessing"}, {"score": 0.002450604366714158, "phrase": "mmre"}, {"score": 0.002362320344521919, "phrase": "new_empirical_validation_framework"}, {"score": 0.0023254633298356894, "phrase": "meaningful_results"}, {"score": 0.002241679436497571, "phrase": "future_meta-analyses"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software engineering", " Prediction system", " Empirical validation", " Randomisation techniques"], "paper_abstract": "Context: Software engineering has a problem in that when we empirically evaluate competing prediction systems we obtain conflicting results. Objective: To reduce the inconsistency amongst validation study results and provide a more formal foundation to interpret results with a particular focus on continuous prediction systems. Method: A new framework is proposed for evaluating competing prediction systems based upon (1) an unbiased statistic, Standardised Accuracy, (2) testing the result likelihood relative to the baseline technique of random 'predictions', that is guessing, and (3) calculation of effect sizes. Results: Previously published empirical evaluations of prediction systems are re-examined and the original conclusions shown to be unsafe. Additionally, even the strongest results are shown to have no more than a medium effect size relative to random guessing. Conclusions: Biased accuracy statistics such as MMRE are deprecated. By contrast this new empirical validation framework leads to meaningful results. Such steps will assist in performing future meta-analyses and in providing more robust and usable recommendations to practitioners. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Evaluating prediction systems in software project estimation", "paper_id": "WOS:000305599200003"}