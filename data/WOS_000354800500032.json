{"auto_keywords": [{"score": 0.03600704009648377, "phrase": "finite_set"}, {"score": 0.014951206367780365, "phrase": "multi-threaded_programs"}, {"score": 0.012325477724919915, "phrase": "correctness_proof"}, {"score": 0.011102625716418322, "phrase": "hoare_triples"}, {"score": 0.009732126148205612, "phrase": "proof_system"}, {"score": 0.009434817961308264, "phrase": "multi-threaded_program"}, {"score": 0.00481495049065317, "phrase": "unbounded_parallelism"}, {"score": 0.004648995193787914, "phrase": "new_approach"}, {"score": 0.004471270242168067, "phrase": "unbounded_number"}, {"score": 0.004333973355873714, "phrase": "starting_point"}, {"score": 0.004152018764100109, "phrase": "existing_automated_verification_technology"}, {"score": 0.004024485331377682, "phrase": "craig_interpolation"}, {"score": 0.0031229578623834394, "phrase": "theorem_prover"}, {"score": 0.0030387767523076528, "phrase": "genuinely_new_hoare_triples"}, {"score": 0.0025690867646665835, "phrase": "simple_combinatorial_inference_rules"}, {"score": 0.002470676601347937, "phrase": "classical_proof_method"}, {"score": 0.00243237365704391, "phrase": "inductive_invariant"}, {"score": 0.0021049977753042253, "phrase": "well-structured_transition_systems"}], "paper_keywords": [""], "paper_abstract": "In this paper, we present a new approach to automatically verify multi-threaded programs which are executed by an unbounded number of threads running in parallel. The starting point for our work is the problem of how we can leverage existing automated verification technology for sequential programs (abstract interpretation, Craig interpolation, constraint solving, etc.) for multi-threaded programs. Suppose that we are given a correctness proof for a trace of a program (or for some other program fragment). We observe that the proof can always be decomposed into a finite set of Hoare triples, and we ask what can be proved from the finite set of Hoare triples using only simple combinatorial inference rules (without access to a theorem prover and without the possibility to infer genuinely new Hoare triples)? We introduce a proof system where one proves the correctness of a multi-threaded program by showing that for each trace of the program, there exists a correctness proof in the space of proofs that are derivable from a finite set of axioms using simple combinatorial inference rules. This proof system is complete with respect to the classical proof method of establishing an inductive invariant (which uses thread quantification and control predicates). Moreover, it is possible to algorithmically check whether a given set of axioms is sufficient to prove the correctness of a multi-threaded program, using ideas from well-structured transition systems.", "paper_title": "Proof Spaces for Unbounded Parallelism", "paper_id": "WOS:000354800500032"}