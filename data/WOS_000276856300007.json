{"auto_keywords": [{"score": 0.034166914460032366, "phrase": "osf"}, {"score": 0.004700468701207975, "phrase": "peak_cpu_speeds"}, {"score": 0.00444377150105556, "phrase": "irregular_memory_accesses"}, {"score": 0.004338076511024884, "phrase": "overall_accesses"}, {"score": 0.004217925382695912, "phrase": "small_number"}, {"score": 0.0041842092128678105, "phrase": "floating-point_operations"}, {"score": 0.004134137523409649, "phrase": "single_sparse_iteration"}, {"score": 0.004084662575167727, "phrase": "low_floating-point_pipeline_utilization"}, {"score": 0.003955593400628455, "phrase": "large_ensemble_computations"}, {"score": 0.003908246778916674, "phrase": "multiple_systems"}, {"score": 0.003876996400581697, "phrase": "linear_equations"}, {"score": 0.003845994935767022, "phrase": "identical_sparsity_structure"}, {"score": 0.003739421738326676, "phrase": "multiple_problems"}, {"score": 0.003635790924434452, "phrase": "operation_stacking"}, {"score": 0.0035635256137029592, "phrase": "cache_misses"}, {"score": 0.0035067452724203124, "phrase": "floating-point_pipeline_utilization"}, {"score": 0.0032621876512517398, "phrase": "operation_stacking_framework"}, {"score": 0.003083793024782014, "phrase": "code_generation_support"}, {"score": 0.003022465992278672, "phrase": "stacked_iterative_solvers"}, {"score": 0.0029982770062678926, "phrase": "osf's_runtime_component"}, {"score": 0.0029623549392492777, "phrase": "iteration_engine"}, {"score": 0.0029268619875960715, "phrase": "efficient_ejection"}, {"score": 0.0029034358982402346, "phrase": "converged_problems"}, {"score": 0.0028115863316685937, "phrase": "specific_solver_algorithm"}, {"score": 0.0027778947555117243, "phrase": "coding_conventions"}, {"score": 0.0027556576784848207, "phrase": "data_representations"}, {"score": 0.002668470532683947, "phrase": "stacked_solvers"}, {"score": 0.0025633455664747606, "phrase": "significant_changes"}, {"score": 0.00254282157860369, "phrase": "existing_applications"}, {"score": 0.0021219954544970878, "phrase": "better_cache_utilization"}, {"score": 0.0021049977753042253, "phrase": "improved_floating-point_utilization"}], "paper_keywords": ["operation stacking", " sparse computation", " irregular applications", " CG", " GMRES", " loop unroll and jam"], "paper_abstract": "Sparse matrix operations achieve only small fractions of peak CPU speeds because of the use of specialized, index-based matrix representations, which degrade cache utilization by imposing irregular memory accesses and increasing the number of overall accesses. Compounding the problem, the small number of floating-point operations in a single sparse iteration leads to low floating-point pipeline utilization. Operation stacking addresses these problems for large ensemble computations that solve multiple systems of linear equations with identical sparsity structure. By combining the data of multiple problems and solving them as one, operation stacking improves locality, reduces cache misses, and increases floating-point pipeline utilization. Operation stacking also requires less memory bandwidth because it involves fewer index array accesses. In this paper we present the Operation Stacking Framework (OSF), an object-oriented framework that provides runtime and code generation support for the development of stacked iterative solvers. OSF's runtime component provides an iteration engine that supports efficient ejection of converged problems from the stack. It separates the specific solver algorithm from the coding conventions and data representations that are necessary to implement stacking. Stacked solvers created with OSF can be used transparently without requiring significant changes to existing applications. Our results show that stacking can provide speedups up to 1.94x with an average of 1.46x, even in scenarios in which the number of iterations required to converge varies widely within a stack of problems. Our evaluation shows that these improvements correlate with better cache utilization, improved floating-point utilization, and reduced memory accesses.", "paper_title": "OPERATION STACKING FOR ENSEMBLE COMPUTATIONS WITH VARIABLE CONVERGENCE", "paper_id": "WOS:000276856300007"}