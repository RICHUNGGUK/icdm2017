{"auto_keywords": [{"score": 0.0324337131484804, "phrase": "fpga"}, {"score": 0.008470528127246408, "phrase": "asic"}, {"score": 0.005374882940292898, "phrase": "fpga."}, {"score": 0.00481495049065317, "phrase": "multi-operand_adder_synthesis_targeting_fpgas"}, {"score": 0.004395185177346749, "phrase": "compressor_trees"}, {"score": 0.004143196873246147, "phrase": "carry_propagation"}, {"score": 0.0038846843242954935, "phrase": "asic_implementation"}, {"score": 0.0038226070564362697, "phrase": "former_part"}, {"score": 0.0037213333316218522, "phrase": "full_adders"}, {"score": 0.003584025547693836, "phrase": "wallace-trees"}, {"score": 0.0034890505116128606, "phrase": "adder_trees"}, {"score": 0.003451766520526601, "phrase": "dedicated_hardware"}, {"score": 0.0032189132350239013, "phrase": "compression_trees"}, {"score": 0.003034158379493625, "phrase": "m-input_lut"}, {"score": 0.0027395968397212053, "phrase": "generalized_parallel_counters"}, {"score": 0.0025822818714499795, "phrase": "high-performance_compressor_trees"}, {"score": 0.0025273383208209922, "phrase": "intermediate_height_limits"}, {"score": 0.0024868972942701582, "phrase": "compression_process"}, {"score": 0.002460295872115956, "phrase": "dadda's_multipliers"}, {"score": 0.0024339783012484032, "phrase": "experimental_results"}, {"score": 0.0022574539115388054, "phrase": "existing_heuristic"}, {"score": 0.002127765807039172, "phrase": "existing_approaches"}, {"score": 0.0021049977753042253, "phrase": "altera's_stratix_iii."}], "paper_keywords": ["multi-operand adder", " generalized parallel counter", " arithmetic synthesis", " FPGA"], "paper_abstract": "Multi-operand adders, which calculates the summation of more than two operands, usually consist of compressor trees which reduce the number of operands to two without any carry propagation, and a carry-propagate adder for the two operands in ASIC implementation. The former part is usually realized using full adders or (3;2) counters like Wallace-trees in ASIC, while adder trees or dedicated hardware are used in FPGA. In this paper, an approach to realize compression trees on FPGAs is proposed. In case of FPGA with m-input LUT, any counters with up to m inputs can be realized with one LUT per an output. Our approach utilizes generalized parallel counters (GPCs) with up to m inputs and synthesizes high-performance compressor trees by setting some intermediate height limits in the compression process like Dadda's multipliers. Experimental results show that the number of GPCs are reduced by up to 22% compared to the existing heuristic. Its effectivity on reduction of delay is also shown against existing approaches on Altera's Stratix III.", "paper_title": "Multi-Operand Adder Synthesis Targeting FPGAs", "paper_id": "WOS:000298304800013"}