{"auto_keywords": [{"score": 0.0245298000722585, "phrase": "mehta"}, {"score": 0.00481495049065317, "phrase": "flow_lines"}, {"score": 0.00471465954562773, "phrase": "ant_colony_digraph"}, {"score": 0.004472935829694716, "phrase": "n_jobs"}, {"score": 0.0042212686864468805, "phrase": "mixed-integer_linear_programing_model"}, {"score": 0.003941964605885606, "phrase": "permuting_sequences"}, {"score": 0.0036617315529835497, "phrase": "non-permutation_flowshop_scheduling"}, {"score": 0.003623352647973122, "phrase": "npfs"}, {"score": 0.003437387719239532, "phrase": "disjunctive_graph"}, {"score": 0.0031594291695784286, "phrase": "npfs_problem"}, {"score": 0.002997203022420553, "phrase": "biologically_inspired_mechanisms"}, {"score": 0.0029657683623403085, "phrase": "learned_desirability"}, {"score": 0.0029346624184926305, "phrase": "pheromone_rule"}, {"score": 0.002858313353461727, "phrase": "natively_eligible_schedules"}, {"score": 0.0027258422018680453, "phrase": "permutation_solutions"}, {"score": 0.002640947693258573, "phrase": "proposed_aco"}, {"score": 0.0025318431634446426, "phrase": "computation_experiments"}, {"score": 0.0025220663266741243, "phrase": "taillard"}, {"score": 0.0025052769325080255, "phrase": "existing_native_approaches"}, {"score": 0.0024529757621396717, "phrase": "upper_bounds"}, {"score": 0.0024144659350277954, "phrase": "established_benchmark_problems"}, {"score": 0.002326938965568362, "phrase": "demirkol"}, {"score": 0.002266364679369248, "phrase": "uzsoy"}], "paper_keywords": ["Flexible manufacturing systems (FMS)", " Native non-permutation flowshop scheduling (NPFS)", " Metaheuristics", " Swarm systems", " Ant colony system (ACS)", " Benchmark problems"], "paper_abstract": "This work starts from modeling the scheduling of n jobs on m machines/stages as flowshop with buffers in manufacturing. A mixed-integer linear programing model is presented, showing that buffers of size n - 2 allow permuting sequences of jobs between stages. This model is addressed in the literature as non-permutation flowshop scheduling (NPFS) and is described in this article by a disjunctive graph (digraph) with the purpose of designing specialized heuristic and metaheuristics algorithms for the NPFS problem. Ant colony optimization (ACO) with the biologically inspired mechanisms of learned desirability and pheromone rule is shown to produce natively eligible schedules, as opposed to most metaheuristics approaches, which improve permutation solutions found by other heuristics. The proposed ACO has been critically compared and assessed by computation experiments over existing native approaches. Most makespan upper bounds of the established benchmark problems from Taillard (1993) and Demirkol, Mehta, and Uzsoy (1998) with up to 500 jobs on 20 machines have been improved by the proposed ACO. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Scheduling flow lines with buffers by ant colony digraph", "paper_id": "WOS:000316581300002"}