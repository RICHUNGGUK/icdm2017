{"auto_keywords": [{"score": 0.03836857540761451, "phrase": "synchronous_task_systems"}, {"score": 0.00481495049065317, "phrase": "periodic_real-time_scheduling"}, {"score": 0.004680624753255133, "phrase": "preemptive_scheduling"}, {"score": 0.004627944735913613, "phrase": "periodic_tasks"}, {"score": 0.004575854901681043, "phrase": "hard_deadlines"}, {"score": 0.004348580182733617, "phrase": "uniprocessor_case"}, {"score": 0.004275347843870176, "phrase": "pseudopolynomial-time_algorithm"}, {"score": 0.004109212945115815, "phrase": "task_system"}, {"score": 0.004039995317682942, "phrase": "constant_speedup"}, {"score": 0.0037959868107895053, "phrase": "recent_results"}, {"score": 0.0037532257703888315, "phrase": "sporadic_task_systems"}, {"score": 0.003546513036085932, "phrase": "constant_number"}, {"score": 0.0035065523764817143, "phrase": "different_task_types"}, {"score": 0.0034086028336466688, "phrase": "first_polynomial-time_constant-speedup_feasibility_tests"}, {"score": 0.0030433302702291116, "phrase": "synchronous_multiprocessor_task_systems"}, {"score": 0.0028111220617485985, "phrase": "long_time"}, {"score": 0.0027170943110836425, "phrase": "weight_maximization_variant"}, {"score": 0.002671263324230699, "phrase": "feasibility_problem"}, {"score": 0.0025673005153462707, "phrase": "nonnegative_weight"}, {"score": 0.002305014991156598, "phrase": "maximum_weight"}, {"score": 0.0022405528759521856, "phrase": "first_constant-speed"}, {"score": 0.002215274527909304, "phrase": "constant-approximation_algorithm"}, {"score": 0.0021049977753042253, "phrase": "related_hardness_results"}], "paper_keywords": ["Algorithms", " Approximation algorithms", " computational complexity", " Earliest Deadline First", " feasibility test", " inapproximability", " periodic task system", " real-time scheduling"], "paper_abstract": "We investigate the preemptive scheduling of periodic tasks with hard deadlines. We show that, even in the uniprocessor case, no pseudopolynomial-time algorithm can test the feasibility of a task system within a constant speedup bound, unless P = NP. This result contrasts with recent results for sporadic task systems. For two special cases, synchronous task systems and systems with a constant number of different task types, we provide the first polynomial-time constant-speedup feasibility tests for multiprocessor platforms. Furthermore, we show that the problem of testing feasibility is coNP-hard for synchronous multiprocessor task systems. The complexity of some of these problems has been open for a long time. We also propose a weight maximization variant of the feasibility problem, where every task has a nonnegative weight, and the goal is to find a subset of tasks that can be scheduled feasibly and has maximum weight. We give the first constant-speed, constant-approximation algorithm for the case of synchronous task systems, together with related hardness results.", "paper_title": "Algorithms and Complexity for Periodic Real-Time Scheduling", "paper_id": "WOS:000312942600006"}