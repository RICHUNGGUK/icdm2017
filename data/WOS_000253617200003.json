{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "petri_nets"}, {"score": 0.004713379149462482, "phrase": "software_evolution"}, {"score": 0.004421284843189731, "phrase": "critical_and_nonstopping_systems"}, {"score": 0.004103212598803194, "phrase": "application_design"}, {"score": 0.003973971215091993, "phrase": "obvious_difficulties"}, {"score": 0.003767517649628532, "phrase": "application_code"}, {"score": 0.0035527409334589317, "phrase": "current_system_functionality"}, {"score": 0.0027791193706247267, "phrase": "pn_based_reflective_framework"}, {"score": 0.00260657976055413, "phrase": "separated_functional_aspects"}, {"score": 0.002578880352208335, "phrase": "evolutionary_ones"}, {"score": 0.0023802825369325354, "phrase": "system's_model"}, {"score": 0.002196944917134202, "phrase": "system_properties"}, {"score": 0.0021622311940411375, "phrase": "pn"}], "paper_keywords": ["Petri Nets", " reflection", " software evolution"], "paper_abstract": "Nowadays, software evolution is a very hot topic. It is particularly complex when it regards critical and nonstopping systems. Usually, these situations are tackled by hard- coding all the foreseeable evolutions in the application design and code. Neglecting the obvious difficulties in pursuing this approach, we also get the application code and design polluted with details that do not regard the current system functionality, and that hamper design analysis, code reuse and application maintenance in general. Petri Nets ( PN), as a formalism for modeling and designing distributed/concurrent software systems, are not exempt from this issue. The goal of this work is to propose a PN based reflective framework that lets everyone model a system able to evolve, keeping separated functional aspects from evolutionary ones and applying evolution to the model only if necessary. Such an approach tries to keep system's model as simple as possible, preserving ( and exploiting) ability of formally verifying system properties typical of PN, granting at the same time adaptability.", "paper_title": "Self-evolving Petri Nets", "paper_id": "WOS:000253617200003"}