{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_checking_problem"}, {"score": 0.00476323161560059, "phrase": "open_systems"}, {"score": 0.004116863735013327, "phrase": "ctl"}, {"score": 0.003675120438902734, "phrase": "graded_modalities"}, {"score": 0.0031417377608722, "phrase": "mu-calculus_pushdown_module_checking"}, {"score": 0.003074495313651187, "phrase": "double-exponential_time"}, {"score": 0.0028968858148006823, "phrase": "known_lower_bounds"}, {"score": 0.0028657135518731012, "phrase": "ctl."}, {"score": 0.002789226820897593, "phrase": "module_checking_problem"}, {"score": 0.0027001292153471202, "phrase": "graded_mu-calculus"}, {"score": 0.002656650588033728, "phrase": "inverse_programs"}, {"score": 0.0024495111090152857, "phrase": "tiling_problem"}, {"score": 0.002320449502337321, "phrase": "short_overview"}, {"score": 0.002246292543825748, "phrase": "fully_enriched_mu-calculus"}, {"score": 0.0021049977753042253, "phrase": "additional_constructs"}], "paper_keywords": ["Finite state machine", " tree automaton", " push down automaton", " interactive and reactive computation", " logics of programs", " modal logic", " mu-calculus", " formal verification", " model checking"], "paper_abstract": "The model checking problem for open systems has been widely studied in the literature, for both finite-state (module checking) and infinite-state (pushdown module checking) systems, with respect to CTL and CTL*. In this paper, we further investigate this problem with respect to the mu-calculus enriched with nominals and graded modalities (hybrid graded mu-calculus), in both the finite-state and infinite-state settings. Using an automata-theoretic approach, we show that hybrid graded mu-calculus module checking is solvable in exponential time, while hybrid graded mu-calculus pushdown module checking is solvable in double-exponential time. These results are also tight since they match the known lower bounds for CTL. We also investigate the module checking problem with respect to the hybrid graded mu-calculus enriched with inverse programs (Fully enriched mu-calculus): by showing a reduction from the tiling problem, we show its undecidability. We conclude with a short overview of the model checking problem for the Fully enriched mu-calculus and the fragments obtained by dropping at least one of the additional constructs.", "paper_title": "ENRICHED mu-CALCULI MODULE CHECKING", "paper_id": "WOS:000262643100001"}