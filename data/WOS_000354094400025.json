{"auto_keywords": [{"score": 0.0327048684145304, "phrase": "aurus"}, {"score": 0.004543708337879809, "phrase": "conceptual_schemas"}, {"score": 0.0034742854447532678, "phrase": "different_kinds"}, {"score": 0.003424225677958491, "phrase": "desirable_properties"}, {"score": 0.002598652897946253, "phrase": "sample_instantiation"}, {"score": 0.002487835869510301, "phrase": "particular_situation"}, {"score": 0.0021049977753042253, "phrase": "integrity_constraints"}], "paper_keywords": ["Validation", " Conceptual modeling", " UML", " OCL", " Automated reasoning", " Explanation"], "paper_abstract": "The validation and the verification of conceptual schemas have attracted a lot of interest during the last years, and several tools have been developed to automate this process as much as possible. This is achieved, in general, by assessing whether the schema satisfies different kinds of desirable properties which ensure that the schema is correct. In this paper we describe AuRUS, a tool we have developed to analyze UML/OCL conceptual schemas and to explain their (in)correctness. When a property is satisfied, AuRUS provides a sample instantiation of the schema showing a particular situation where the property holds. When it is not, AuRUS provides an explanation for such unsatisfiability, i.e., a set of integrity constraints which is in contradiction with the property.", "paper_title": "AuRUS: explaining the validation of UML/OCL conceptual schemas", "paper_id": "WOS:000354094400025"}