{"auto_keywords": [{"score": 0.04408580801729789, "phrase": "design_space_exploration"}, {"score": 0.014289417897759183, "phrase": "design_space"}, {"score": 0.00481495049065317, "phrase": "early_phases"}, {"score": 0.004749106104067268, "phrase": "complex_systems"}, {"score": 0.004473982381245469, "phrase": "automated_synthesis_tools"}, {"score": 0.0042928648367867835, "phrase": "multiple_models"}, {"score": 0.004253618550301311, "phrase": "different_valid_design_candidates"}, {"score": 0.0038981499110532307, "phrase": "structural_and_numeric_design_constraints"}, {"score": 0.0038271712887391015, "phrase": "balanced_choice"}, {"score": 0.0036721416244816455, "phrase": "model-driven_engineering"}, {"score": 0.003638556418681846, "phrase": "mde"}, {"score": 0.0035233696341819437, "phrase": "specific_sort"}, {"score": 0.0034911335714333507, "phrase": "constraint_satisfaction_problem"}, {"score": 0.0033962320197349124, "phrase": "csp"}, {"score": 0.0033651019362620866, "phrase": "declarative_constraints"}, {"score": 0.00327356326590461, "phrase": "finite_domains"}, {"score": 0.0030135741897058844, "phrase": "existing_formulation"}, {"score": 0.002985988377995789, "phrase": "constraint_satisfaction_problems"}, {"score": 0.00283870598459543, "phrase": "complex_structural_constraints"}, {"score": 0.002786964045867666, "phrase": "underlying_models"}, {"score": 0.002686284749214443, "phrase": "flexible_and_dynamic_constraint_satisfaction_problems"}, {"score": 0.0024842242921857705, "phrase": "solving_process"}, {"score": 0.002361632539339945, "phrase": "incremental_re-evaluation"}, {"score": 0.0022450768409733807, "phrase": "graph_models"}, {"score": 0.0021049977753042253, "phrase": "related_tools"}], "paper_keywords": ["Constraint satisfaction programming", " Graph transformation", " Dynamic constraint satisfaction programming", " Flexible constraint satisfaction problem"], "paper_abstract": "In early phases of designing complex systems, models are not sufficiently detailed to serve as an input for automated synthesis tools. Instead, a design space is constituted by multiple models representing different valid design candidates. Design space exploration aims at searching through these candidates defined in the design space to find solutions that satisfy the structural and numeric design constraints and provide a balanced choice with respect to various quality metrics. Design space exploration in an model-driven engineering (MDE) context is frequently tackled as specific sort of constraint satisfaction problem (CSP). In CSP, declarative constraints capture restrictions over variables with finite domains where both the number of variables and their domains are required to be a priori finite. However, the existing formulation of constraint satisfaction problems can be too restrictive to capture design space exploration in many MDE applications with complex structural constraints expressed over the underlying models. In this paper, we interpret flexible and dynamic constraint satisfaction problems directly in the context of models. These extensions allow the relaxation of constraints during a solving process and address problems that are subject to change and require incremental re-evaluation. Furthermore, we present our prototype constraint solver for the domain of graph models built upon the Viatra2 model transformation framework and provide an evaluation of its performance with comparison to related tools.", "paper_title": "Dynamic constraint satisfaction problems over models", "paper_id": "WOS:000305750600008"}