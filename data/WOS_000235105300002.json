{"auto_keywords": [{"score": 0.038136354061204386, "phrase": "qos-based_scheduling_problem"}, {"score": 0.03515757251110245, "phrase": "penalty_functions"}, {"score": 0.00481495049065317, "phrase": "qos_requirements"}, {"score": 0.004781357546476652, "phrase": "heterogeneous_computing_systems"}, {"score": 0.004665608609734034, "phrase": "new_applications"}, {"score": 0.004616859702338596, "phrase": "increasing_number"}, {"score": 0.004552648949390462, "phrase": "diverse_needs"}, {"score": 0.0044736342427651185, "phrase": "heterogeneous_computing"}, {"score": 0.0040133278382101885, "phrase": "independent_tasks"}, {"score": 0.003985305257857655, "phrase": "multiple_qos_needs"}, {"score": 0.0038346288310750804, "phrase": "data_accuracy"}, {"score": 0.003741712498615481, "phrase": "hc_system"}, {"score": 0.0035632814618295327, "phrase": "np"}, {"score": 0.0034884152484429207, "phrase": "first_part"}, {"score": 0.003286596407873823, "phrase": "utility_function"}, {"score": 0.002787181295054319, "phrase": "computationally_efficient_static_scheduling_algorithm"}, {"score": 0.002729133029776093, "phrase": "time-invariant_penalty_functions"}, {"score": 0.0024307637980373552, "phrase": "dynamic_scheduling_algorithm"}, {"score": 0.002405309378904663, "phrase": "simulation_studies"}, {"score": 0.00231423064137482, "phrase": "diverse_qos_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["heterogeneous computing", " quality of service", " QoS-based scheduling", " utility functions", " heuristic algorithms"], "paper_abstract": "Due to the development of new applications and the increasing number of users with diverse needs who are exposed to heterogeneous computing (HQ, providing users with quality of service (QoS) guarantees while executing applications has become a crucial problem that needs to be addressed. Motivated by this fact, this paper investigates the problem of scheduling a set of independent tasks with multiple QoS needs. which may include timeliness, reliability, security, data accuracy, and priority, in a HC system. This problem is referred to as the QoS-based scheduling problem and proved to be NP-hard. In the first part of this study, we formulate the QoS-based scheduling problem by using utility and penalty functions, where a utility function associated with a task is used to measure how much the owner of this task will benefit from a given scheduling decision, while penalty functions associated with resources are used to provide incentives to users to set their QoS requirements in accordance with their needs. In order to solve the QoS-based scheduling problem, a computationally efficient static scheduling algorithm (QSMTS_IP) which assumes time-invariant penalty functions is developed. We later extend the QSMTS_IP to the case where penalty functions are time varying. Furthermore, it is shown that the QSMTS_IP can be modified to run as a dynamic scheduling algorithm. The simulation studies carried out show that the QSMTS_IP is capable of meeting diverse QoS requirements of many users simultaneously, while minimizing the number of users whose tasks cannot be scheduled due to the scarcity of machines. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Scheduling of a meta-task with QoS requirements in heterogeneous computing systems", "paper_id": "WOS:000235105300002"}