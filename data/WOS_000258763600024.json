{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "unbounded_petri_nets"}, {"score": 0.04894077157096776, "phrase": "modified_reachability_trees"}, {"score": 0.00458869631642791, "phrase": "deadlock-checking_approach"}, {"score": 0.004515655183335171, "phrase": "one-place_unbounded_petri_nets"}, {"score": 0.004003511299646736, "phrase": "useful_information"}, {"score": 0.0038152404172111815, "phrase": "finite_reachability_tree"}, {"score": 0.003694652993546994, "phrase": "mrt's_use"}, {"score": 0.0029504765287722465, "phrase": "property_analysis"}, {"score": 0.0028115863316685937, "phrase": "dead_lock-checking_purpose"}, {"score": 0.0026792166577171476, "phrase": "full_conditional_nodes"}, {"score": 0.002636506663159432, "phrase": "mrt"}, {"score": 0.0022630008787375435, "phrase": "full_conditional_node"}, {"score": 0.0021049977753042253, "phrase": "necessary_and_sufficient_condition"}], "paper_keywords": ["automated manufacturing systems", " deadlock", " Petri net", " reachability tree"], "paper_abstract": "A deadlock-checking approach for one-place unbounded Petri nets is presented based on modified reachability trees (MRTs). An MRT can provide some useful information that is lost in a finite reachability tree, owing to MRT's use of the expression a + bn(j) rather than symbol omega to represent the value of the components of a marking. The information is helpful In property analysis of unbounded Petri nets. For the dead lock-checking purpose, this correspondence paper classifies full conditional nodes in MRT into two types: true and fake ones. Then, an algorithm is proposed to determine whether a full conditional node is true or not. Finally, a necessary and sufficient condition of deadlocks is presented. Examples are given to illustrate the method.", "paper_title": "Deadlock checking for one-place unbounded Petri nets based on modified reachability trees", "paper_id": "WOS:000258763600024"}