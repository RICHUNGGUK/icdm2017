{"auto_keywords": [{"score": 0.04815845221780695, "phrase": "atomic_systems"}, {"score": 0.010612387000973441, "phrase": "atomic_data_files"}, {"score": 0.010091005644498373, "phrase": "ab_initio_calculations"}, {"score": 0.007705310013203692, "phrase": "distributed_program"}, {"score": 0.007660530696810453, "phrase": "test_data"}, {"score": 0.006173443291096607, "phrase": "anisotropic_media"}, {"score": 0.004749723071004129, "phrase": "open_source"}, {"score": 0.004694514284178664, "phrase": "atomsk"}, {"score": 0.004559270778306828, "phrase": "classical_atomistic_calculations"}, {"score": 0.0044799936615283215, "phrase": "computational_physics"}, {"score": 0.004317109072311102, "phrase": "easy_conversion"}, {"score": 0.004300310127339099, "phrase": "atomic_configuration_files"}, {"score": 0.004275233671055634, "phrase": "command-line_options"}, {"score": 0.003923743050154162, "phrase": "comprehensive_workflow"}, {"score": 0.003900853871728297, "phrase": "unit_cell"}, {"score": 0.0038780976976014207, "phrase": "final_atomic_system"}, {"score": 0.0038255128976509545, "phrase": "complex_structures"}, {"score": 0.0037883877729449314, "phrase": "specific_analysis"}, {"score": 0.0037450111144306355, "phrase": "program"}, {"score": 0.0037224647319912293, "phrase": "atomsk_catalogue"}, {"score": 0.0036434422786904507, "phrase": "cpc_program_library"}, {"score": 0.003629255183741058, "phrase": "queen's_university"}, {"score": 0.0036151233102664237, "phrase": "belfast"}, {"score": 0.0036010459086929895, "phrase": "n._ireland"}, {"score": 0.0033177230206024332, "phrase": "tar.gz_programming_language"}, {"score": 0.003304831650690416, "phrase": "fortran"}, {"score": 0.0032472646337850042, "phrase": "fortran_compiler"}, {"score": 0.0031412974147502675, "phrase": "makefiles"}, {"score": 0.003104725508614074, "phrase": "unix-like_system"}, {"score": 0.0030746480021619166, "phrase": "windows"}, {"score": 0.0029395925668102185, "phrase": "external_routines"}, {"score": 0.0027508039944440787, "phrase": "unified_program"}, {"score": 0.0026661950520772636, "phrase": "classical_atomistic_simulations"}, {"score": 0.0025640746692326584, "phrase": "ionic_core-shell_model"}, {"score": 0.002490053106007765, "phrase": "simulation_output_files"}, {"score": 0.0024562429924060328, "phrase": "molecular_bonds"}, {"score": 0.0023806724980476477, "phrase": "nye_tensor"}, {"score": 0.0023209828061385596, "phrase": "ionic_core-shell_models"}, {"score": 0.0023029188952824685, "phrase": "electric_polarization"}, {"score": 0.0022939396079753463, "phrase": "additional_comments"}, {"score": 0.002163367190715979, "phrase": "atomic_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Atomistic simulations", " File conversion", " Dislocation", " Polycrystal", " Nye tensor"], "paper_abstract": "We present a libre, Open Source command-line program named Atomsk, that aims at creating and manipulating atomic systems for the purposes of ab initio calculations, classical atomistic calculations, and visualization, in the areas of computational physics and chemistry. The program can run on GNU/Linux, Apple Mac OS X, and Microsoft Windows platforms. Many file formats are supported, allowing for easy conversion of atomic configuration files. The command-line options allow to construct supercells, insert point defects (vacancies, interstitials), line defects (dislocations, cracks), plane defects (stacking faults), as well as other transformations. Several options can beapplied consecutively, allowing for a comprehensive workflow from a unit cell to the final atomic system. Some modes allow to construct complex structures, or to perform specific analysis of atomic systems. Program summary Program title: Atomsk Catalogue identifier: AEXM_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEXM_v1.0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU/GPL version 3 or any later version No. of lines in distributed program, including test data, etc.: 61,450 No. of bytes in distributed program, including test data, etc.: 539,898 Distribution format: tar.gz Programming language: Fortran 90. Computer: All computers with a Fortran compiler supporting at least Fortran 90. Operating system: All operating systems with such a compiler. Some of the Makefiles and scripts depend on a Unix-like system and need modification under Windows. RAM: Typically 32 bytes x N, where N is the number of particles. Classification: 4.14, 7.1. External routines: LAPACK Nature of problem: Atomistic simulations require the generation of atomic data files. Few software are available to construct atomic systems containing dislocations, especially in anisotropic media. Solution method: Atomsk is a unified program that allows to generate, convert and transform atomic systems for the purposes of ab initio calculations, classical atomistic simulations, or visualization. It supports many lattice types, all atom chemical species, and supports systems described with the ionic core-shell model. It allows to construct dislocations and analyze them, and perform post-treatment of simulation output files. Restrictions: no support for molecular bonds; limit of 2 billions particles. Unusual features: dislocations in anisotropic media; computation of the Nye tensor; generation of polycrystal from any type of lattice; support for ionic core-shell models and analysis of electric polarization. Additional comments: the program and its documentation are available at: http://atomsk.univ-lillel.fr Running time: spans from a fraction of a second to several minutes depending on the number of particles in the atomic system, the mode, and the machine performance. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Atomsk: A tool for manipulating and converting atomic data files", "paper_id": "WOS:000362919500022"}