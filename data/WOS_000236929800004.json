{"auto_keywords": [{"score": 0.04420612461768112, "phrase": "all-pairs_shortest_paths"}, {"score": 0.036372004403240406, "phrase": "existing_algorithms"}, {"score": 0.03403308414745243, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "-pairs_shortest_paths"}, {"score": 0.004668659654386976, "phrase": "new_solution"}, {"score": 0.004621703098771428, "phrase": "dynamic"}, {"score": 0.0044498415012873965, "phrase": "linear_reinforcement_learning_scheme"}, {"score": 0.004098221047046135, "phrase": "continuous_probabilistically-based_updates"}, {"score": 0.003892655187180623, "phrase": "illustrative_example"}, {"score": 0.0037228262889889402, "phrase": "\"statistical\"_average_graph"}, {"score": 0.0035849042994947366, "phrase": "new_changes"}, {"score": 0.003335581163845351, "phrase": "affected_shortest_paths"}, {"score": 0.0033014033657620375, "phrase": "edge-weight_update"}, {"score": 0.0031899784784921222, "phrase": "first_contribution"}, {"score": 0.0031249312057114237, "phrase": "stochastic_graph"}, {"score": 0.0027805362553564336, "phrase": "final_list"}, {"score": 0.002551700779294785, "phrase": "second_contribution"}, {"score": 0.002423519259896573, "phrase": "particular_edge"}, {"score": 0.00236591959343317, "phrase": "shortest_path"}, {"score": 0.002193634795186667, "phrase": "graph_topologies"}, {"score": 0.0021786074765975006, "phrase": "multiple_simultaneous_edge-weight_updates"}, {"score": 0.0021195184368629017, "phrase": "average_number"}, {"score": 0.0021049977753042253, "phrase": "processed_nodes"}], "paper_keywords": ["routing", " all pairs shortest path", " dynamic", " learning automata", " stochastic graphs"], "paper_abstract": "This paper presents a new solution to the Dynamic All-Pairs Shortest Path Routing Problem, using a linear reinforcement learning scheme. The particular instance of the problem that we have investigated concerns finding the all-pairs shortest paths in a stochastic graph, where there are continuous probabilistically-based updates in edge-weights. We present the details of the algorithm with an illustrative example. The algorithm can be used to find the all-pairs shortest paths for the \"statistical\" average graph, and the solution converges irrespective of whether there are new changes in edge-weights or not. On the other hand, the existing algorithms will fail to exhibit such a behavior and would recalculate the affected shortest paths after each edge-weight update. There are two important contributions of the proposed algorithm. The first contribution is that not all the edges in a stochastic graph are probed and, even if they are, they are not all probed equally often. Indeed, the algorithm attempts to almost always probe only those edges that will be included in the final list involving all pairs of nodes in the graph, while probing the other edges minimally. This increases the performance of the proposed algorithm. The second contribution is designing a data-structure, the elements of which represent the probability that a particular edge in the graph lies in the shortest path between a pair of nodes in the graph. All the algorithms were tested in environments where edge-weights change stochastically and where the graph topologies undergo multiple simultaneous edge-weight updates. Its superiority in terms of the average number of processed nodes, scanned edges, and the time per update operation, when compared with the existing algorithms, was experimentally established.", "paper_title": "An efficient dynamic algorithm for maintaining all-pairs shortest paths in stochastic networks", "paper_id": "WOS:000236929800004"}