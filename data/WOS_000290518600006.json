{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "kinematic_control"}, {"score": 0.03303780353868204, "phrase": "jacobian_matrix"}, {"score": 0.004770461993586338, "phrase": "redundant_manipulators"}, {"score": 0.004726382602809228, "phrase": "input_pattern_switching"}, {"score": 0.004596561972944185, "phrase": "dual_neural_network"}, {"score": 0.0044495843279816075, "phrase": "freedom_robot_manipulator"}, {"score": 0.004388035083357706, "phrase": "first_network"}, {"score": 0.00432733352307636, "phrase": "static_multilayer_perceptron"}, {"score": 0.00411182818527434, "phrase": "seven_dof_manipulator"}, {"score": 0.004054931951058077, "phrase": "second_network"}, {"score": 0.00399881984083004, "phrase": "recurrent_neural_network"}, {"score": 0.0036271080216837286, "phrase": "joint_velocities"}, {"score": 0.00357689487273538, "phrase": "least_squares_sense"}, {"score": 0.003543804852018315, "phrase": "simulation_results"}, {"score": 0.0035110198699787013, "phrase": "relatively_good_comparison"}, {"score": 0.003414467360488913, "phrase": "actual_jacobian_matrix"}, {"score": 0.0033828748627992193, "phrase": "multilayer_neural_network"}, {"score": 0.003244275497488318, "phrase": "seven_joints"}, {"score": 0.0030825404960282713, "phrase": "surprisingly_smaller_computations"}, {"score": 0.0030398432591176357, "phrase": "actual_trigonometric_function_evaluations"}, {"score": 0.002997735656669146, "phrase": "new_technique"}, {"score": 0.0028218877037665484, "phrase": "global_training"}, {"score": 0.0027827907725673845, "phrase": "static_network"}, {"score": 0.002744234034162797, "phrase": "recurrent_network"}, {"score": 0.002656327554326748, "phrase": "neural_network_approximation"}, {"score": 0.0025595422362310323, "phrase": "jacobian"}, {"score": 0.002431626477893495, "phrase": "time-efficient_procedure"}, {"score": 0.002375714262344562, "phrase": "robot_manipulators"}, {"score": 0.002267708463966758, "phrase": "classical-trigonometric-based_methods"}, {"score": 0.0022155569675462333, "phrase": "electronic_implementation"}, {"score": 0.002164602220179823, "phrase": "kinematic_solutions"}], "paper_keywords": ["Redundant", " Manipulator", " Robot", " Inverse", " Kinematics", " Neural networks"], "paper_abstract": "This paper presents a dual neural network for kinematic control of a seven degrees of freedom robot manipulator. The first network is a static multilayer perceptron with two hidden layers which is trained to mimic the Jacobian of a seven DOF manipulator. The second network is a recurrent neural network which is used for determining the inverse kinematics solutions of the manipulator; The redundancy is used to minimize the joint velocities in the least squares sense. Simulation results show relatively good comparison between the outputs of the actual Jacobian matrix and multilayer neural network. The first network maps motions of the seven joints of the manipulator into 42 elements of the Jacobian matrix, with surprisingly smaller computations than the actual trigonometric function evaluations. A new technique, input-pattern-switching, is presented which improves the global training of the static network. The recurrent network was designed to work with the neural network approximation of the Jacobian matrix instead of the actual Jacobian. The combination of these two networks has resulted in a time-efficient procedure for kinematic control of robot manipulators which avoids most of the complexity present in the classical-trigonometric-based methods. Also, by electronic implementation of the networks, kinematic solutions can be obtained in a very timely manner (few nanoseconds).", "paper_title": "A Dual Neural Network for Kinematic Control of Redundant Manipulators Using Input Pattern Switching", "paper_id": "WOS:000290518600006"}