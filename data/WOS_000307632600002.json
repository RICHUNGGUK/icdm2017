{"auto_keywords": [{"score": 0.027808783287138917, "phrase": "ibm"}, {"score": 0.00481495049065317, "phrase": "computational_science_storage_access"}, {"score": 0.004697308822154191, "phrase": "computational_science_applications"}, {"score": 0.0045599093158915326, "phrase": "increasingly_powerful_storage_systems"}, {"score": 0.0043183186953102805, "phrase": "individual_application_trial_runs"}, {"score": 0.00419195822011581, "phrase": "storage_system"}, {"score": 0.004069280130346136, "phrase": "production_system"}, {"score": 0.004009288598277725, "phrase": "daunting_challenge"}, {"score": 0.0038919354605673104, "phrase": "compute_cores"}, {"score": 0.003853583126988071, "phrase": "multiple_petabytes"}, {"score": 0.003685604033479918, "phrase": "storage_systems"}, {"score": 0.003577691211998842, "phrase": "clear_understanding"}, {"score": 0.0035249212996297363, "phrase": "diverse_computational_science_workloads"}, {"score": 0.0031453010852936334, "phrase": "storage_device_instrumentation"}, {"score": 0.003114283314285167, "phrase": "static_file_system_analysis"}, {"score": 0.003053159610975692, "phrase": "new_mechanism"}, {"score": 0.0030081030319492343, "phrase": "detailed_application-level_behavior"}, {"score": 0.0028768722873689432, "phrase": "system-wide_trends"}, {"score": 0.002728129988106162, "phrase": "intrepid"}, {"score": 0.0022901862321082407, "phrase": "example_applications"}, {"score": 0.0021902063413831545, "phrase": "future_storage_systems"}], "paper_keywords": ["Measurement", " Performance", " I/O characterization", " parallel file systems"], "paper_abstract": "Computational science applications are driving a demand for increasingly powerful storage systems. While many techniques are available for capturing the I/O behavior of individual application trial runs and specific components of the storage system, continuous characterization of a production system remains a daunting challenge for systems with hundreds of thousands of compute cores and multiple petabytes of storage. As a result, these storage systems are often designed without a clear understanding of the diverse computational science workloads they will support. In this study, we outline a methodology for scalable, continuous, systemwide I/O characterization that combines storage device instrumentation, static file system analysis, and a new mechanism for capturing detailed application-level behavior. This methodology allows us to identify both system-wide trends and application-specific I/O strategies. We demonstrate the effectiveness of our methodology by performing a multilevel, two-month study of Intrepid, a 557-teraflop IBM Blue Gene/P system. During that time, we captured application-level I/O characterizations from 6,481 unique jobs spanning 38 science and engineering projects. We used the results of our study to tune example applications, highlight trends that impact the design of future storage systems, and identify opportunities for improvement in I/O characterization methodology.", "paper_title": "Understanding and Improving Computational Science Storage Access through Continuous Characterization", "paper_id": "WOS:000307632600002"}