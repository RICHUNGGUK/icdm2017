{"auto_keywords": [{"score": 0.045998857053669205, "phrase": "random_permutation"}, {"score": 0.00481495049065317, "phrase": "paraperm-parallel_generation_of_random"}, {"score": 0.004524624065803229, "phrase": "parallel_generation"}, {"score": 0.004289686492089576, "phrase": "large_set"}, {"score": 0.00421410521089045, "phrase": "distinct_integers"}, {"score": 0.0038900709793274484, "phrase": "massively_parallel_systems"}, {"score": 0.003821503621554738, "phrase": "distributed_memory_architectures"}, {"score": 0.0037209035703970705, "phrase": "mpi-based_runtime_environments"}, {"score": 0.003374094774912924, "phrase": "memory_and_communication_requirements"}, {"score": 0.003032405563826263, "phrase": "software_library"}, {"score": 0.0028492532869274743, "phrase": "mpi_application_programming_interface"}], "paper_keywords": ["Algorithms", " Design", " C plus", " distributed memory", " implementation", " MPI", " parallel computing", " random permutation"], "paper_abstract": "An algorithm for parallel generation of a random permutation of a large set of distinct integers is presented. This algorithm is designed for massively parallel systems with distributed memory architectures and the MPI-based runtime environments. Scalability of the algorithm is analyzed according to the memory and communication requirements. An implementation of the algorithm in a form of a software library based on the C++ programming language and the MPI application programming interface is further provided. Finally, performed experiments are described and their results discussed. The biggest of these experiments resulted in a generation of a random permutation of 2(41) integers in slightly more than four minutes using 131072 CPU cores.", "paper_title": "Algorithm 947: Paraperm-Parallel Generation of Random Permutations with MPI", "paper_id": "WOS:000345576000005"}