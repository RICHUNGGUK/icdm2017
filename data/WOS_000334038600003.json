{"auto_keywords": [{"score": 0.031399005275115355, "phrase": "processing_nodes"}, {"score": 0.00481495049065317, "phrase": "personalised_applications"}, {"score": 0.004452641437293878, "phrase": "distributed_data_sources"}, {"score": 0.004240116703465252, "phrase": "high_degree"}, {"score": 0.003920891569777894, "phrase": "scalability_challenges"}, {"score": 0.0038261310307416475, "phrase": "centralised_architectures"}, {"score": 0.0037888687452790953, "phrase": "current_mashup_platforms"}, {"score": 0.0035902958977673313, "phrase": "scalability_issues"}, {"score": 0.0034187896011435245, "phrase": "comap's_architecture"}, {"score": 0.003099888654615187, "phrase": "comap"}, {"score": 0.003054681986032532, "phrase": "dynamic_and_efficient_scheme"}, {"score": 0.0027969169552385974, "phrase": "link_delays"}, {"score": 0.0027026375053777543, "phrase": "mashup_processing_nodes"}, {"score": 0.0026501935378083663, "phrase": "effective_and_low-cost_mechanisms"}, {"score": 0.002511147699138714, "phrase": "node_failures"}, {"score": 0.0024383967028975616, "phrase": "novel_techniques"}, {"score": 0.002310437317411848, "phrase": "end-user_experience"}, {"score": 0.0022107428653358715, "phrase": "comap's_performance"}, {"score": 0.002157223877108711, "phrase": "comap's_benefits"}, {"score": 0.0021049977753042253, "phrase": "mashup_platform"}], "paper_keywords": ["personalisation", " Web 2.0", " collaboration", " mashup", " cooperative information systems"], "paper_abstract": "Since the advent of Web 2.0, personalised applications such as mashups have become widely popular. Mashups enable end-users to fetch data from distributed data sources, and refine it based on their personal needs. This high degree of personalisation that mashups offer comes at the expense of performance and scalability. These scalability challenges are exacerbated by the centralised architectures of current mashup platforms. In this paper, we address the performance and scalability issues by designing CoMaP - a distributed mashup platform. CoMaP's architecture comprises of several cooperative mashup processing nodes distributed over the Internet upon which mashups can, fully or partially, be executed. CoMaP incorporates a dynamic and efficient scheme for deploying mashups on the processing nodes. Our scheme considers a number of parameters such as variations in link delays and bandwidths, and loads on mashup processing nodes. CoMaP includes effective and low-cost mechanisms for balancing loads on the processing nodes as well for handling node failures. Furthermore, we propose novel techniques that leverage keyword synonyms, ontologies and caching to enhance end-user experience. This paper reports several experiments to comprehensively study CoMaP's performance. The results demonstrate CoMaP's benefits as a scalable distributed mashup platform.", "paper_title": "Cooperative distributed architecture for mashups", "paper_id": "WOS:000334038600003"}