{"auto_keywords": [{"score": 0.04430256680288919, "phrase": "modelica"}, {"score": 0.00481495049065317, "phrase": "integrated_debugging_of"}, {"score": 0.00475924837336259, "phrase": "modelica_models"}, {"score": 0.0045959609346817535, "phrase": "high_abstraction_level"}, {"score": 0.003996727479807572, "phrase": "programming_and_modeling_errors"}, {"score": 0.0034753508746887957, "phrase": "integrated_static_and_dynamic_debugging_methods"}, {"score": 0.0032406665327678616, "phrase": "debugger_prototype"}, {"score": 0.002817639725689939, "phrase": "integrated_debugging_framework"}, {"score": 0.002720785798036066, "phrase": "classical_debugging_techniques"}, {"score": 0.002658068304632523, "phrase": "special_techniques"}, {"score": 0.0025967927629150715, "phrase": "equation-based_languages"}, {"score": 0.0024784363584530976, "phrase": "graph_visualization"}, {"score": 0.002205560249972527, "phrase": "first_modelica_debugger"}, {"score": 0.0021049977753042253, "phrase": "equation-based_transformational_and_algorithmic_code_debugging"}], "paper_keywords": ["Modelica", " Debugging", " Modeling and Simulation", " Transformations", " Equations"], "paper_abstract": "The high abstraction level of equation-based object-oriented (EOO) languages such as Modelica has the drawback that programming and modeling errors are often hard to find. In this paper we present integrated static and dynamic debugging methods for Modelica models and a debugger prototype that addresses several of those problems. The goal is an integrated debugging framework that combines classical debugging techniques with special techniques for equation-based languages partly based on graph visualization and interaction. To our knowledge, this is the first Modelica debugger that supports both equation-based transformational and algorithmic code debugging in an integrated fashion.", "paper_title": "Integrated Debugging of Modelica Models", "paper_id": "WOS:000344366300003"}