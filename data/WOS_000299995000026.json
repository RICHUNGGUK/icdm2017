{"auto_keywords": [{"score": 0.04187714396259637, "phrase": "wrong_path"}, {"score": 0.011667540933824494, "phrase": "reconvergence_point"}, {"score": 0.010376319275654695, "phrase": "syrant"}, {"score": 0.00481495049065317, "phrase": "symmetric_resource_allocation"}, {"score": 0.004617455679463816, "phrase": "multicore_era"}, {"score": 0.004565007074039171, "phrase": "ultimate_single_process_performance"}, {"score": 0.004444921827311577, "phrase": "single_process_workload"}, {"score": 0.004394424341776717, "phrase": "sequential_sections"}, {"score": 0.004361077072629878, "phrase": "parallel_applications"}, {"score": 0.004278807087784626, "phrase": "tremendous_research_effort"}, {"score": 0.004246333442872459, "phrase": "branch_prediction"}, {"score": 0.00421410521089045, "phrase": "substantial_performance_potential"}, {"score": 0.004118874671285618, "phrase": "branch_mispredictions"}, {"score": 0.00405658135587089, "phrase": "branch_misprediction_resolution"}, {"score": 0.0038166522763373434, "phrase": "conditional_branch"}, {"score": 0.00373036974937097, "phrase": "not-taken_paths"}, {"score": 0.0034963129868796033, "phrase": "branch_outcome"}, {"score": 0.0033019779616246356, "phrase": "taken"}, {"score": 0.003190584226787897, "phrase": "control_independence"}, {"score": 0.0030829367866722825, "phrase": "conventional_processor"}, {"score": 0.0029675701595142656, "phrase": "exact_same_resources"}, {"score": 0.00293380698353469, "phrase": "out-of-order_execution_mechanism"}, {"score": 0.002405853977978678, "phrase": "aggressive_superscalar_execution_core"}, {"score": 0.002324620886282579, "phrase": "significant_branch_misprediction_rate"}, {"score": 0.0021952683716334478, "phrase": "simple_and_non-intrusive_hardware_reconvergence_detection_mechanism"}, {"score": 0.002129243122440408, "phrase": "conventional_superscalar_processor"}, {"score": 0.0021049977753042253, "phrase": "branch_prediction_accuracy"}], "paper_keywords": ["Design", " Measurement", " Performance", " Architecture", " control flow reconvergence", " control independence", " many-core", " multicore", " sequential", " SYRANT"], "paper_abstract": "In the multicore era, achieving ultimate single process performance is still an issue e.g. for single process workload or for sequential sections in parallel applications. Unfortunately, despite tremendous research effort on branch prediction, substantial performance potential is still wasted due to branch mispredictions. On a branch misprediction resolution, instruction treatment on the wrong path is essentially thrown away. However, in most cases after a conditional branch, the taken and the not-taken paths of execution merge after a few instructions. Instructions that follow the reconvergence point are executed whatever the branch outcome is. We present SYRANT (SYmmetric Resource Allocation on Not-taken and Taken paths), a new technique for exploiting control independence. SYRANT essentially uses the same pipeline structure as a conventional processor. SYRANT tries to enforce the allocation of the exact same resources on the out-of-order execution mechanism (physical register, load/store queue and reorder buffer) for both the taken and not-taken paths. Thus, on a branch misprediction, the result of an instruction already executed on the wrong path after the reconvergence point can be conserved in the same structure when it is data independent. Adding SYRANT on top of an aggressive superscalar execution core allows to improve performance for applications suffering a significant branch misprediction rate. As a side, but important extra contribution, we introduce ABL/SBL a simple and non-intrusive hardware reconvergence detection mechanism. ABL/SBL can be used in a conventional superscalar processor to improve branch prediction accuracy by exploiting the execution of branches along the wrong path.", "paper_title": "SYRANT: SYmmetric Resource Allocation on Not-Taken and Taken Paths", "paper_id": "WOS:000299995000026"}