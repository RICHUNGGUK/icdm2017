{"auto_keywords": [{"score": 0.049488021144002525, "phrase": "recommender_system"}, {"score": 0.015719716506582538, "phrase": "matrix_factorization"}, {"score": 0.013396481765774352, "phrase": "rating_matrix"}, {"score": 0.0044968982227349625, "phrase": "latent_factor_model"}, {"score": 0.004386503433248535, "phrase": "recommender_system_problem"}, {"score": 0.004332322079100859, "phrase": "collaborative_filtering"}, {"score": 0.003971262520692664, "phrase": "pre-determined_range"}, {"score": 0.0037551444630619015, "phrase": "new_improved_matrix_factorization_approach"}, {"score": 0.003640183972131238, "phrase": "bounded_matrix_factorization"}, {"score": 0.003399466007862412, "phrase": "upper_bound"}, {"score": 0.003336614511719501, "phrase": "estimated_missing_element"}, {"score": 0.0031746155143471725, "phrase": "efficient_algorithm"}, {"score": 0.0031159102860889016, "phrase": "bmf"}, {"score": 0.0030017207229983385, "phrase": "descent_method"}, {"score": 0.0028382152567141784, "phrase": "large_matrices"}, {"score": 0.002803104254950008, "phrase": "missing_elements"}, {"score": 0.0027684263985790526, "phrase": "multicore_systems"}, {"score": 0.0027341763737751467, "phrase": "low_memory"}, {"score": 0.00266693888510356, "phrase": "substantial_experimental_results"}, {"score": 0.0026013505538490223, "phrase": "proposed_method"}, {"score": 0.0025059724686541263, "phrase": "art_algorithms"}, {"score": 0.002429161048032688, "phrase": "stochastic_gradient_descent"}, {"score": 0.002384206251320424, "phrase": "least_squares"}, {"score": 0.0022967713922705, "phrase": "bias-svd"}, {"score": 0.0022683432490549064, "phrase": "real-world_datasets"}, {"score": 0.0022263581193461193, "phrase": "jester"}, {"score": 0.0021988053212499557, "phrase": "movielens"}, {"score": 0.0021715812867126884, "phrase": "book_crossing"}, {"score": 0.002144773111911639, "phrase": "online"}, {"score": 0.002105004672077452, "phrase": "netflix"}], "paper_keywords": ["Low-rank approximation", " Recommender systems", " Bound constraints", " Matrix factorization", " Block coordinate descent method", " Scalable algorithm", " Block"], "paper_abstract": "Matrix factorization has been widely utilized as a latent factor model for solving the recommender system problem using collaborative filtering. For a recommender system, all the ratings in the rating matrix are bounded within a pre-determined range. In this paper, we propose a new improved matrix factorization approach for such a rating matrix, called Bounded Matrix Factorization (BMF), which imposes a lower and an upper bound on every estimated missing element of the rating matrix. We present an efficient algorithm to solve BMF based on the block coordinate descent method. We show that our algorithm is scalable for large matrices with missing elements on multicore systems with low memory. We present substantial experimental results illustrating that the proposed method outperforms the state of the art algorithms for recommender system such as stochastic gradient descent, alternating least squares with regularization, SVD++ and Bias-SVD on real-world datasets such as Jester, Movielens, Book crossing, Online dating and Netflix.", "paper_title": "Bounded matrix factorization for recommender system", "paper_id": "WOS:000337034300001"}