{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "random_searches"}, {"score": 0.004680624753255133, "phrase": "parallelization_procedure"}, {"score": 0.0046018264570209765, "phrase": "two-dimensional_random_search"}, {"score": 0.00417961150804265, "phrase": "sequential_random_search"}, {"score": 0.004109212945115815, "phrase": "parallel_version"}, {"score": 0.00399449659126893, "phrase": "former_spatial_patterns"}, {"score": 0.003927203683176278, "phrase": "encountered_targets"}, {"score": 0.003882970272082245, "phrase": "different_search_strategies"}, {"score": 0.0037959868107895053, "phrase": "homogeneously_distributed_targets"}, {"score": 0.003689982350051231, "phrase": "lognormal_tendency"}, {"score": 0.003546513036085932, "phrase": "consecutively_detected_targets"}, {"score": 0.0034086028336466688, "phrase": "distinct_mean"}, {"score": 0.003370190834214415, "phrase": "standard_deviation"}, {"score": 0.0032575241721857343, "phrase": "corresponding_configuration"}, {"score": 0.0032026066791743866, "phrase": "parallel_simulations"}, {"score": 0.0031308163228919773, "phrase": "parallel_random_walkers"}, {"score": 0.0029920129598858545, "phrase": "important_statistical_properties"}, {"score": 0.0028111220617485985, "phrase": "original_problem"}, {"score": 0.002763709443278514, "phrase": "proposed_parallel_approach"}, {"score": 0.0026864540069792275, "phrase": "nearly_one_order"}, {"score": 0.0025965853546625352, "phrase": "sequential_implementation"}, {"score": 0.0024673738215365104, "phrase": "different_instances"}, {"score": 0.0022405528759521856, "phrase": "automated_computer_searchers"}, {"score": 0.002215274527909304, "phrase": "high-capacity_databases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Random search", " Parallel random search", " Parallel random walk", " Levy flights"], "paper_abstract": "We discuss a parallelization procedure for a two-dimensional random search of a single individual, a typical sequential process. To assure the same features of the sequential random search in the parallel version, we analyze the former spatial patterns of the encountered targets for different search strategies and densities of homogeneously distributed targets. We identify a lognormal tendency for the distribution of distances between consecutively detected targets. Then, by assigning the distinct mean and standard deviation of this distribution for each corresponding configuration in the parallel simulations (constituted by parallel random walkers), we are able to recover important statistical properties, e.g., the target detection efficiency, of the original problem. The proposed parallel approach presents a speedup of nearly one order of magnitude compared with the sequential implementation. This algorithm can be easily adapted to different instances, as searches in three dimensions. Its possible range of applicability covers problems in areas as diverse as automated computer searchers in high-capacity databases and animal foraging. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A parallel algorithm for random searches", "paper_id": "WOS:000362602900037"}