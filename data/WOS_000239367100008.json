{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "single-chip_heterogeneous_multiprocessors"}, {"score": 0.004449452743965974, "phrase": "computational_demands"}, {"score": 0.004402854153653114, "phrase": "portable_and_handheld_devices"}, {"score": 0.00433386573276633, "phrase": "computing_systems"}, {"score": 0.004243552607799184, "phrase": "custom_designs"}, {"score": 0.004133292222875435, "phrase": "design_automation_community"}, {"score": 0.00392125815948488, "phrase": "computer_architecture_community"}, {"score": 0.0038597866217852353, "phrase": "pure_embedded_designs"}, {"score": 0.0037594599958631404, "phrase": "real-time_community"}, {"score": 0.0037005154613244363, "phrase": "entirely_new_design_philosophy"}, {"score": 0.0035853745478488254, "phrase": "hybrid_class"}, {"score": 0.003330406613112555, "phrase": "narrower_set"}, {"score": 0.0031262984171100856, "phrase": "longer_period"}, {"score": 0.0030449789178940787, "phrase": "general-purpose_programming"}, {"score": 0.002769304577201566, "phrase": "individual_processing_element"}, {"score": 0.002711506442590442, "phrase": "multiple_processing_elements"}, {"score": 0.0026830601040919166, "phrase": "even_the_entire_chip"}, {"score": 0.0023891283748647416, "phrase": "simplescalar"}, {"score": 0.0022904032758108775, "phrase": "spec_benchmarks"}, {"score": 0.0021957487795963666, "phrase": "new_benchmark-based_design_strategies"}, {"score": 0.0021049977753042253, "phrase": "scenario-oriented_design"}], "paper_keywords": ["benchmarking", " design methodology", " heterogeneous multiprocessor", " modeling", " scenario-oriented design", " system-on-chip (SOC)"], "paper_abstract": "Single-chip heterogeneous multiprocessors (SCHMs) are arising to meet the computational demands of portable and handheld devices. These computing systems are not fully custom designs traditionally targeted by the design automation community, general-purpose designs traditionally targeted by the computer architecture community, nor pure embedded designs traditionally targeted by the real-time community. An entirely new design philosophy will be needed for this hybrid class of computing. The programming of the device will be drawn from a narrower set of applications with execution that persists in the system over a longer period of time than for general-purpose programming. However, the devices will still be programmable, not only at the level of the individual processing element, but across multiple processing elements and even the entire chip. The design of other programmable single chip computers has enjoyed an era where the design tradeoffs; could be captured in simulators such as SimpleScalar and performance could be evaluated to the SPEC benchmarks. Motivated by this, we describe new benchmark-based design strategies for SCHMs which we refer to as scenario-oriented design. We include an example and results.", "paper_title": "Scenario-oriented design for single-chip heterogeneous multiprocessors", "paper_id": "WOS:000239367100008"}