{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dataflow_formalisation"}, {"score": 0.0045641317216991205, "phrase": "composable_and_predictable_multi-processor_soc._embedded_systems"}, {"score": 0.00430067200637091, "phrase": "real-time_requirements"}, {"score": 0.003980687255880282, "phrase": "modem_embedded_systems"}, {"score": 0.0037507793596022326, "phrase": "sram_memories"}, {"score": 0.00368442237104581, "phrase": "system_software"}, {"score": 0.0036408354779365643, "phrase": "e.g._microkernel"}, {"score": 0.0035977623578676496, "phrase": "communication_libraries"}, {"score": 0.0033497809969621267, "phrase": "real-time_applications"}, {"score": 0.0032709661258673206, "phrase": "compsoc_platform"}, {"score": 0.0032130703855586685, "phrase": "new_models"}, {"score": 0.0031561961485589633, "phrase": "entire_software_stack"}, {"score": 0.003063627258654102, "phrase": "guaranteed_application_throughput"}, {"score": 0.0028354207806133153, "phrase": "fpga_implementation"}, {"score": 0.0025471636425006155, "phrase": "real-time_application"}, {"score": 0.0022610379771517966, "phrase": "application_speed-up"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Real time", " Mixed time criticality", " Multi-processor", " GALS", " Dataflow", " Performance analysis"], "paper_abstract": "Embedded systems often contain multiple applications, some of which have real-time requirements and whose performance must be guaranteed. To efficiently execute applications, modem embedded systems contain Globally Asynchronous Locally Synchronous (GALS) processors, network on chip, DRAM and SRAM memories, and system software, e.g. microkernel and communication libraries. In this paper we describe a dataflow formalisation to independently model real-time applications executing on the CompSOC platform, including new models of the entire software stack. We compare the guaranteed application throughput as computed by our tool flow to the throughput measured on an FPGA implementation of the platform, for both synthetic and real H.263 applications. The dataflow formalisation is composable (i.e. independent for each real-time application), conservative, models the impact of GALS on performance, and correctly predicts trends, such as application speed-up when mapping an application to more processors. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Dataflow formalisation of real-time streaming applications on a Composable and Predictable Multi-Processor SOC", "paper_id": "WOS:000364271900005"}