{"auto_keywords": [{"score": 0.04836829363661747, "phrase": "stream_processing"}, {"score": 0.00481495049065317, "phrase": "catalog_of_stream_processing_optimizations"}, {"score": 0.004571133708117502, "phrase": "programming_model"}, {"score": 0.004523865550323285, "phrase": "efficient_and_parallel_computing"}, {"score": 0.004407813106104401, "phrase": "digital_signal_processing"}, {"score": 0.004317109072311102, "phrase": "operating_systems"}, {"score": 0.004250302819248558, "phrase": "complex_event_processing"}, {"score": 0.0040771431404398855, "phrase": "challenging_performance_requirements"}, {"score": 0.003771185758226876, "phrase": "conflicting_terminology"}, {"score": 0.0037321585095070483, "phrase": "unstated_assumptions"}, {"score": 0.0032769720645483102, "phrase": "system's_optimizer"}, {"score": 0.003143341238802547, "phrase": "engineering_tradeoffs"}, {"score": 0.0028178463431115562, "phrase": "design_patterns"}, {"score": 0.002422890839801611, "phrase": "profitability_experiment"}, {"score": 0.002206045784326466, "phrase": "streaming_system_builders"}], "paper_keywords": ["Languages", " Stream processing", " optimizations"], "paper_abstract": "Various research communities have independently arrived at stream processing as a programming model for efficient and parallel computing. These communities include digital signal processing, databases, operating systems, and complex event processing. Since each community faces applications with challenging performance requirements, each of them has developed some of the same optimizations, but often with conflicting terminology and unstated assumptions. This article presents a survey of optimizations for stream processing. It is aimed both at users who need to understand and guide the system's optimizer and at implementers who need to make engineering tradeoffs. To consolidate terminology, this article is organized as a catalog, in a style similar to catalogs of design patterns or refactorings. To make assumptions explicit and help understand tradeoffs, each optimization is presented with its safety constraints (when does it preserve correctness?) and a profitability experiment (when does it improve performance?). We hope that this survey will help future streaming system builders to stand on the shoulders of giants from not just their own community.", "paper_title": "A Catalog of Stream Processing Optimizations", "paper_id": "WOS:000336405900004"}