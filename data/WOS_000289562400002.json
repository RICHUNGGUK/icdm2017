{"auto_keywords": [{"score": 0.035935416587620665, "phrase": "computation_cost"}, {"score": 0.00481495049065317, "phrase": "efficient_multi-dimensional_similarity_search"}, {"score": 0.004664352260912174, "phrase": "information_retrieval_applications"}, {"score": 0.004477595431209663, "phrase": "high_dimensionality"}, {"score": 0.004357245559948974, "phrase": "increasing_need"}, {"score": 0.004240116703465252, "phrase": "high-dimensional_data"}, {"score": 0.004126123386192962, "phrase": "indexing_structures"}, {"score": 0.003942877273973905, "phrase": "well-known_\"curse"}, {"score": 0.00385431710959668, "phrase": "linear_scan"}, {"score": 0.0036663981146086103, "phrase": "high-dimensional_similarity_search"}, {"score": 0.00334780964309978, "phrase": "expensive_distance_function"}, {"score": 0.0032135959043774085, "phrase": "fractional_p"}, {"score": 0.003056819704624705, "phrase": "new_technique"}, {"score": 0.003015401937358271, "phrase": "expensive_distance_functions"}, {"score": 0.002855251306715901, "phrase": "key_values"}, {"score": 0.0025951294037626174, "phrase": "data_vector"}, {"score": 0.002559951153813876, "phrase": "query_vector"}, {"score": 0.0024129269611844794, "phrase": "distance_function_computations"}, {"score": 0.002316105585203396, "phrase": "extra_secondary_storage"}, {"score": 0.0021731423856364003, "phrase": "cost_analysis"}, {"score": 0.0021049977753042253, "phrase": "synthetic_and_real_data"}], "paper_keywords": ["Similarity search", " High-dimensional space", " Function index"], "paper_abstract": "Similarity search is important in information retrieval applications where objects are usually represented as vectors of high dimensionality. This leads to the increasing need for supporting the indexing of high-dimensional data. On the other hand, indexing structures based on space partitioning are powerless because of the well-known \"curse of dimensionality\". Linear scan of the data with approximation is more efficient in the high-dimensional similarity search. However, approaches so far have concentrated on reducing I/O, and ignored the computation cost. For an expensive distance function such as L (p) norm with fractional p, the computation cost becomes the bottleneck. We propose a new technique to address expensive distance functions by \"indexing the function\" by pre-computing some key values of the function once. Then, the values are used to develop the upper/lower bounds of the distance between a data vector and the query vector. The technique is extremely efficient since it avoids most of the distance function computations; moreover, it does not involve any extra secondary storage because no index is constructed and stored. The efficiency is confirmed by cost analysis, as well as experiments on synthetic and real data.", "paper_title": "Indexing expensive functions for efficient multi-dimensional similarity search", "paper_id": "WOS:000289562400002"}