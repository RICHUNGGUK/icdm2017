{"auto_keywords": [{"score": 0.043692086897500614, "phrase": "fft"}, {"score": 0.00481495049065317, "phrase": "opencl_gpus"}, {"score": 0.004760394308239882, "phrase": "fourier_methods"}, {"score": 0.004420472010542188, "phrase": "medical_imaging"}, {"score": 0.004223415145617665, "phrase": "fast_fourier_transform"}, {"score": 0.004081385289516914, "phrase": "computationally_efficient_method"}, {"score": 0.003989351600022163, "phrase": "fourier_transform"}, {"score": 0.0039216854691927865, "phrase": "emerging_class"}, {"score": 0.003877211065759289, "phrase": "high_performance_computing_architectures"}, {"score": 0.003789950946387273, "phrase": "cpu"}, {"score": 0.0035189057079817285, "phrase": "distinct_memories"}, {"score": 0.0033427754823819157, "phrase": "gpu_programming"}, {"score": 0.0032860401904845522, "phrase": "significant_challenge"}, {"score": 0.00308610073274614, "phrase": "automatic_performance_tuning_framework"}, {"score": 0.002931569771634119, "phrase": "high_performance_library"}, {"score": 0.002898291237210567, "phrase": "mpfft"}, {"score": 0.0026302120935562568, "phrase": "clamdfft_library"}, {"score": 0.0026003455833291124, "phrase": "amd_gpus"}, {"score": 0.0025561788724870974, "phrase": "comparable_performance"}, {"score": 0.0025127604406208668, "phrase": "cufft_library"}, {"score": 0.0024842242921857705, "phrase": "nvidia_gpus"}, {"score": 0.002386869729952315, "phrase": "non-power-of-two_size"}, {"score": 0.0022160570430189105, "phrase": "fftw"}], "paper_keywords": ["fast Fourier transform", " GPU", " OpenCL", " auto-tuning"], "paper_abstract": "Fourier methods have revolutionized many fields of science and engineering, such as astronomy, medical imaging, seismology and spectroscopy, and the fast Fourier transform (FFT) is a computationally efficient method of generating a Fourier transform. The emerging class of high performance computing architectures, such as CPU, seeks to achieve much higher performance and efficiency by exposing a hierarchy of distinct memories to software. However, the complexity of GPU programming poses a significant challenge to developers. In this paper, we propose an automatic performance tuning framework for FFT on various OpenCL GPUs, and implement a high performance library named MPFFT based on this framework. For power-of-two length FFTs, our library substantially outperforms the clAmdFft library on AMD GPUs and achieves comparable performance as the CUFFT library on NVIDIA GPUs. Furthermore, our library also supports non-power-of-two size. For 3D non-power-of-two FFTs, our library delivers 1.5x to 28x faster than FFTW with 4 threads and 20.01x average speedup over CUFFT 4.0 on Tesla C2050.", "paper_title": "MPFFT: An Auto-Tuning FFT Library for OpenCL GPUs", "paper_id": "WOS:000314190600008"}