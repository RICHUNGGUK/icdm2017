{"auto_keywords": [{"score": 0.05006517691377039, "phrase": "grid_networks"}, {"score": 0.046273829908275756, "phrase": "dc"}, {"score": 0.0047732596509542135, "phrase": "performance_analysis"}, {"score": 0.004670597652149685, "phrase": "task_scheduling"}, {"score": 0.004630150894006861, "phrase": "data_migration_problem"}, {"score": 0.004300133642951283, "phrase": "multiple_pieces"}, {"score": 0.00417115038996633, "phrase": "grid_network"}, {"score": 0.004028452405970376, "phrase": "selected_site"}, {"score": 0.0038234714417849495, "phrase": "data_manager"}, {"score": 0.0037087324991876727, "phrase": "data_replicas"}, {"score": 0.003311799410921826, "phrase": "routing_paths"}, {"score": 0.0031845067058084613, "phrase": "selected_datasets"}, {"score": 0.0031023662967184216, "phrase": "execution_site"}, {"score": 0.002893505913503472, "phrase": "corresponding_paths"}, {"score": 0.0028559348655053545, "phrase": "data_consolidation_scheme"}, {"score": 0.0027581067089091434, "phrase": "polynomial_number"}, {"score": 0.002629026692001082, "phrase": "concurrent_data_transfers"}, {"score": 0.002473420909291381, "phrase": "fault_tolerance"}, {"score": 0.0023886641270884973, "phrase": "important_problem"}, {"score": 0.002286781334850213, "phrase": "data_grids"}, {"score": 0.0022084059770026416, "phrase": "significant_benefits"}, {"score": 0.0021702292394814144, "phrase": "task_delay_network_load"}, {"score": 0.0021050078058552006, "phrase": "elsevier"}], "paper_keywords": ["Grids", " Task scheduling", " Data migration", " Routing"], "paper_abstract": "We examine a task scheduling and data migration problem for grid networks which we refer to as the Data Consolidation (DC) problem DC arises when a task concurrently requests multiple pieces of data possibly scattered throughout the grid network that have to be present at a selected site before the task s execution starts In such a case the scheduler and the data manager must select (i) the data replicas to be used (ii) the site where these data will be gathered for the task to be executed and (iii) the routing paths to be followed this is assuming that the selected datasets are transferred concurrently to the execution site The algorithms or policies for selecting the data replicas the data consolidating site and the corresponding paths comprise a Data Consolidation scheme We propose and experimentally evaluate several DC schemes of polynomial number of operations that attempt to estimate the cost of the concurrent data transfers to avoid congestion that may appear due to these transfers and to provide fault tolerance Our simulation results strengthen our belief that DC is an important problem that needs to be addressed in the design of data grids and can lead if performed efficiently to significant benefits in terms of task delay network load and other performance parameters (C) 2010 Elsevier B V All rights reserved", "paper_title": "Efficient data consolidation in grid networks and performance analysis", "paper_id": "WOS:000284339200005"}