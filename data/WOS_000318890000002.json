{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "string_matching"}, {"score": 0.004669845451682529, "phrase": "classical_problem"}, {"score": 0.004089725258435817, "phrase": "real-time_string"}, {"score": 0.003926105480202798, "phrase": "worst-case_constant-time"}, {"score": 0.0037307208089736835, "phrase": "pattern_occurrence"}, {"score": 0.003581412258960711, "phrase": "text_location"}, {"score": 0.003403122817578447, "phrase": "real-time_variation"}, {"score": 0.0033004240095380623, "phrase": "elegant_crochemore-perrin_constant-space_string"}, {"score": 0.003104201872147936, "phrase": "simple_and_efficient_control_structure"}, {"score": 0.002831462722290752, "phrase": "critical_factorizations"}, {"score": 0.002479150189700726, "phrase": "complementary_parts"}, {"score": 0.0022382002476510573, "phrase": "complete_pattern"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": [""], "paper_abstract": "String matching is the classical problem of finding all occurrences of a pattern in a text. A real-time string matching algorithm takes worst-case constant-time to check if a pattern occurrence ends at each text location. We derive a real-time variation of the elegant Crochemore-Perrin constant-space string matching algorithm that has a simple and efficient control structure. We use observations about the locations of critical factorizations to deploy two tightly-coupled simplified real-time instances of the Crochemore-Perrin algorithm that search for complementary parts of the pattern whose simultaneous occurrence indicates an occurrence of the complete pattern. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Simple real-time constant-space string matching", "paper_id": "WOS:000318890000002"}