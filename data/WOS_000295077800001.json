{"auto_keywords": [{"score": 0.04809176147872217, "phrase": "ndp"}, {"score": 0.033569776741192055, "phrase": "descent_direction"}, {"score": 0.02991042888171316, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "dual_variable_approximation-based"}, {"score": 0.004714023408114857, "phrase": "bi-level_continuous_dynamic_network_design_problem"}, {"score": 0.0046544807197808095, "phrase": "transportation_network_design_problem"}, {"score": 0.004537631845923196, "phrase": "network_topology"}, {"score": 0.004349337717774093, "phrase": "system_performance"}, {"score": 0.004240116703465252, "phrase": "selfish_routing_behavior"}, {"score": 0.004204320052179726, "phrase": "road_users"}, {"score": 0.003995772867224968, "phrase": "bi-level_formulation"}, {"score": 0.0038789122930433305, "phrase": "static_case"}, {"score": 0.003829877278269543, "phrase": "stackelberg_game"}, {"score": 0.0037178503842258087, "phrase": "users'_individual_objectives"}, {"score": 0.003624429617337833, "phrase": "system-wide_objectives"}, {"score": 0.0034738975998176323, "phrase": "optimal_allocation"}, {"score": 0.0034445472801689046, "phrase": "limited_resources"}, {"score": 0.00337224813954299, "phrase": "bi-level_dynamic_ndp"}, {"score": 0.003287482882222731, "phrase": "dual_variable_approximation-based_heuristic"}, {"score": 0.0032184697893776052, "phrase": "system-wide_gradient"}, {"score": 0.0031110402375026016, "phrase": "iterative_solution_framework"}, {"score": 0.0029817668105720924, "phrase": "bi-level_programming_problems"}, {"score": 0.002857849698346116, "phrase": "solution_process"}, {"score": 0.0027159094186967247, "phrase": "dual_variables"}, {"score": 0.0026701760128830573, "phrase": "cell_transmission_model_constraints"}, {"score": 0.0026252106881752067, "phrase": "constructed_rational_direction"}, {"score": 0.002570064617803693, "phrase": "upper-level_objective"}, {"score": 0.0024947959375982614, "phrase": "lower-level_program"}, {"score": 0.0023210293050850276, "phrase": "empirical_solution"}, {"score": 0.0022434880661725493, "phrase": "exact_kth-best_algorithm"}, {"score": 0.002177762848946681, "phrase": "promising_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_descent_method"}], "paper_keywords": [""], "paper_abstract": "The transportation network design problem (NDP) considers modifying network topology or parameters, such as capacity, to optimize system performance by taking into account the selfish routing behavior of road users. The nature of the problem naturally lends itself to a bi-level formulation of a problem that represents a static case of a Stackelberg game. The NDP is complex because users' individual objectives do not necessarily align with system-wide objectives; thus, it is difficult to determine the optimal allocation of limited resources. To solve the bi-level dynamic NDP, this study develops a dual variable approximation-based heuristic, which identifies the system-wide gradient as a descent direction, and designs an iterative solution framework. Descent direction-based approaches designed to solve bi-level programming problems typically suffer from non-differentiability, which can hamper the solution process. The proposed method addresses this issue by approximating the descent direction with dual variables that correspond to cell transmission model constraints and using the constructed rational direction to iteratively decrease the upper-level objective while maintaining the feasibility of the lower-level program. The proposed method was empirically applied to three networks of various sizes. The results obtained from this empirical solution were compared with the results from an exact Kth-best algorithm and a genetic algorithm. The promising results demonstrate the efficacy and efficiency of the proposed descent method.", "paper_title": "A Dual Variable Approximation-Based Descent Method for a Bi-level Continuous Dynamic Network Design Problem", "paper_id": "WOS:000295077800001"}