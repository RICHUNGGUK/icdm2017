{"auto_keywords": [{"score": 0.04932659148957108, "phrase": "visualization_applications"}, {"score": 0.03951761950435035, "phrase": "qos_attributes"}, {"score": 0.00481495049065317, "phrase": "qos-based_discovery"}, {"score": 0.004793203387266194, "phrase": "visualization_web_services"}, {"score": 0.0047716029361655615, "phrase": "collaborative"}, {"score": 0.004685925469417181, "phrase": "high-performance_and_high-end_resources"}, {"score": 0.004529473241633146, "phrase": "limited_number"}, {"score": 0.004448169552315403, "phrase": "grid_infrastructure"}, {"score": 0.004368318853732804, "phrase": "visualization_service_providers"}, {"score": 0.004309368854601124, "phrase": "effective_use"}, {"score": 0.004184347221796804, "phrase": "particular_constraints"}, {"score": 0.004146610621578086, "phrase": "particular_application_resource_demands"}, {"score": 0.00398997488362411, "phrase": "timely_manner"}, {"score": 0.0039094504071253535, "phrase": "stringent_real-time_constraints"}, {"score": 0.0038218760331371043, "phrase": "novel_approach"}, {"score": 0.0037959868107895053, "phrase": "visualization_service_requests"}, {"score": 0.003778824462012974, "phrase": "service_advertisements"}, {"score": 0.0035869274480340727, "phrase": "quality_criteria"}, {"score": 0.0035626240654214932, "phrase": "visualization_services"}, {"score": 0.0033435594184605686, "phrase": "qos-based_matchmaking"}, {"score": 0.00328347257571715, "phrase": "visualization_service_requesters"}, {"score": 0.003188118524597198, "phrase": "function_properties"}, {"score": 0.0031665087019813244, "phrase": "non-functional_properties"}, {"score": 0.0031308163228919773, "phrase": "good_quality_services"}, {"score": 0.003109593696520339, "phrase": "matchmaking_approach"}, {"score": 0.0030467824582741557, "phrase": "service_requests"}, {"score": 0.0030058250077013766, "phrase": "qos"}, {"score": 0.0029249294679606656, "phrase": "response_time"}, {"score": 0.002852868554827307, "phrase": "matching_algorithm"}, {"score": 0.0027762742757824555, "phrase": "visualization_service_discovery_system"}, {"score": 0.002689502466126005, "phrase": "semantic_portal"}, {"score": 0.0026531475439267216, "phrase": "visualization_service"}, {"score": 0.002635154295298248, "phrase": "multiple_techniques"}, {"score": 0.0026172827539525764, "phrase": "available_visualization_services"}, {"score": 0.0025643902117791144, "phrase": "functional_attributes"}, {"score": 0.0025412259366265925, "phrase": "qos_ones"}, {"score": 0.0025239898026543964, "phrase": "enhanced_system"}, {"score": 0.002495521662819317, "phrase": "qos_similarity"}, {"score": 0.0024673738215365104, "phrase": "qos_feedback"}, {"score": 0.0024120247307686084, "phrase": "qualified_visualization_web_services"}, {"score": 0.0023794116210910164, "phrase": "prototype's_architecture"}, {"score": 0.0021778895748464024, "phrase": "qos_matching"}, {"score": 0.0021338577107571912, "phrase": "nonfunctional_attributes"}], "paper_keywords": [""], "paper_abstract": "Collaborative and distributed visualization applications generally require access to high-performance and high-end resources that are both expensive to own and maintain. Often there are also a limited number of such resources available. The development of Grid infrastructure allows these resources to be shared by visualization service providers and users. However, effective use of such resources necessitate the development of mechanisms which take into account the particular constraints needed to satisfy particular application resource demands as some visualization applications may be dependent on requiring data to be stored and delivered in a timely manner. Therefore, these applications must adhere to stringent real-time constraints and Quality-of-Service (QoS) requirements. In this paper we proposed a novel approach to matching visualization service requests with service advertisements using QoS attributes. Five attributesResponse time, Availability, Execution price, Memory capacity, and Number of CPUsare selected as the quality criteria for the visualization services, and for each one, we provide a definition, indicate its granularity, and provide rules to compute its value for a given service. The idea behind QoS-based matchmaking for visualization is an attempt to provide visualization service requesters with an approach to locate services, which have been selected by function properties, utilizing non-functional properties in order to get good quality services. The matchmaking approach proposed is concerned with computing the similarity between service requests and services based on above QoS attributes. The paper gives the equations of the similarities for Response time, Availability, Execution price, Memory capacity, Number of CPUs, and details the matching algorithm based on these equations for similarity. A prototype of the visualization service discovery system was developed, which is based on QoS and extends our previous prototype of the semantic portal for the discovery of the visualization service which provides multiple techniques to search available visualization services. But these techniques are all based on functional attributes, not on QoS ones. The enhanced system introduces the computation of QoS similarity and the capability of QoS feedback to users, which will be faster in finding qualified visualization Web Services. The paper discusses the prototype's architecture and how it works. The paper finally presents an experiment, the objective of which is to observe the performance of the search with QoS attributes. It can be seen from the experiment that the time for QoS matching is acceptable, and the search based on nonfunctional attributes allows the user to locate more appropriate visualization Web Services.", "paper_title": "Supporting QoS-Based Discovery for Visualization Web Services", "paper_id": "WOS:000265103800018"}