{"auto_keywords": [{"score": 0.046081391722127746, "phrase": "good_cache_utilization"}, {"score": 0.00481495049065317, "phrase": "nested_loops"}, {"score": 0.004660453113061494, "phrase": "good_performance"}, {"score": 0.0045108906244892165, "phrase": "computer_program"}, {"score": 0.004180234323211199, "phrase": "numerical_linear_algebra_libraries"}, {"score": 0.003916098498242888, "phrase": "explicit_loop_restructuring"}, {"score": 0.0034742854447532678, "phrase": "complicated_memory_pattern_behavior_analysis"}, {"score": 0.0031500213134140953, "phrase": "new_source_code_transformation"}, {"score": 0.002887210021573995, "phrase": "temporal_and_spatial_locality"}, {"score": 0.002704554429386671, "phrase": "formal_method"}, {"score": 0.0026175952455594277, "phrase": "cache_behavior"}, {"score": 0.0024519545383399773, "phrase": "model_accuracy"}, {"score": 0.0022967713922705, "phrase": "cache_monitor"}, {"score": 0.0021049977753042253, "phrase": "measured_cache_misses"}], "paper_keywords": ["Source code optimization", " loop transformations", " model of cache behavior"], "paper_abstract": "For good performance of every computer program, good cache utilization is crucial. In numerical linear algebra libraries, good cache utilization is achieved by explicit loop restructuring (mainly loop blocking), but it requires a complicated memory pattern behavior analysis. In this paper, we describe a new source code transformation called dynamic loop reversal that can increase temporal and spatial locality. We also describe a formal method for predicting cache behavior and evaluate results of the model accuracy by the measurements on a cache monitor. The comparisons of the numbers of measured cache misses and the numbers of cache misses estimated by the model indicate that the model is relatively accurate and can be used in practice.", "paper_title": "A new code transformation technique for nested loops", "paper_id": "WOS:000345948100011"}