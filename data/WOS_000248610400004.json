{"auto_keywords": [{"score": 0.05007456881345017, "phrase": "product_family_design"}, {"score": 0.04908443941591453, "phrase": "pfd"}, {"score": 0.03197225574974635, "phrase": "gga"}, {"score": 0.004428452434981208, "phrase": "diverse_market_niches"}, {"score": 0.004115697805448384, "phrase": "configuration_problem"}, {"score": 0.003988487841970088, "phrase": "combinatorial_explosion"}, {"score": 0.0036873373225096624, "phrase": "genetic_algorithms"}, {"score": 0.003480993634130542, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0033381913087533457, "phrase": "traditional_ga"}, {"score": 0.003251920460276645, "phrase": "complex_data"}, {"score": 0.0031513240597392843, "phrase": "pfd_problem"}, {"score": 0.0030538300202383106, "phrase": "generic_genetic_algorithm"}, {"score": 0.002974886152979993, "phrase": "pfd._a_generic_encoding_scheme"}, {"score": 0.0028828348726682965, "phrase": "diverse_pfd_scenarios"}, {"score": 0.0028378798711397235, "phrase": "hybrid_constraint-handling_strategy"}, {"score": 0.0027645030021576926, "phrase": "complex_and_distinguishing_constraints"}, {"score": 0.002678944072162297, "phrase": "evolutionary_process"}, {"score": 0.002637160140011997, "phrase": "design_and_implementation_procedures"}, {"score": 0.0024634797027967203, "phrase": "proposed_gga"}, {"score": 0.0024250482323322606, "phrase": "family_design"}, {"score": 0.002362320344521919, "phrase": "gga_efficiency"}, {"score": 0.002301211274459965, "phrase": "efficiency_analysis"}, {"score": 0.002206700502606511, "phrase": "feasible_solutions"}, {"score": 0.0021049977753042253, "phrase": "gga_complexity"}], "paper_keywords": ["product family", " configuration design", " product variety", " genetic algorithm", " constraint handling"], "paper_abstract": "Product family design (PFD) has been well recognized as an effective means to satisfy diverse market niches while maintaining the economies of scale and scope. PFD essentially entails a configuration problem by \"combination,\" where combinatorial explosion always occurs and is known to be mathematically intractable or NP- hard. Although genetic algorithms (GAs) have been proven to excel in solving combinatorial optimization problems, it is difficult to adopt the traditional GA to deal with the complex data and interrelationships inherent in the PFD problem. This paper proposes a generic genetic algorithm (GGA) for PFD. A generic encoding scheme is developed to adapt to diverse PFD scenarios. A hybrid constraint-handling strategy is proposed to handle complex and distinguishing constraints at different stages along the evolutionary process. The design and implementation procedures of the GGA are discussed in detail. An application of the proposed GGA to motor family design is reported. The GGA efficiency is also tested through efficiency analysis in terms of the probability of generating feasible solutions, as well as through analysis of the GGA complexity.", "paper_title": "A generic genetic algorithm for product family design", "paper_id": "WOS:000248610400004"}