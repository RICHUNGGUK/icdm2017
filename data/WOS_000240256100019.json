{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "concurrent"}, {"score": 0.003889206369317587, "phrase": "graph_items"}, {"score": 0.003555902292752528, "phrase": "latter_feature"}, {"score": 0.0034118234596993836, "phrase": "satisfactory_concurrent_semantics"}, {"score": 0.0032510690712452147, "phrase": "partial_order_description"}, {"score": 0.002643386043540555, "phrase": "distributed_systems"}, {"score": 0.0024501740852758505, "phrase": "double-pushout_approach"}, {"score": 0.0023507916951658455, "phrase": "theoretical_results"}, {"score": 0.0021342613107011624, "phrase": "simple_calculus"}, {"score": 0.0021049977753042253, "phrase": "name_mobility"}], "paper_keywords": ["concurrent graph rewriting", " DPO approach", " graphical encoding of nominal calculi", " graph process semantics"], "paper_abstract": "Several applications of graph rewriting systems (notably, some encodings of calculi with name passing) require rules which, besides deleting and generating graph items, are able to coalesce some parts of the graph. This latter feature forbids the development of a satisfactory concurrent semantics for rewrites (intended as a partial order description of the steps in a computation). This paper proposes the use of graphs with equivalences, i.e., (typed hyper-) graphs equipped with an equivalence over nodes, for the analysis of distributed systems. The formalism is amenable to the tools of the double-pushout approach to rewriting, including the theoretical results associated to its concurrent features. The formalism is tested against the encoding of a simple calculus with name mobility, namely the solo calculus.", "paper_title": "Concurrent rewriting for graphs with equivalences", "paper_id": "WOS:000240256100019"}