{"auto_keywords": [{"score": 0.03709269343537923, "phrase": "conversion_ratios"}, {"score": 0.00481495049065317, "phrase": "calibrating_function_point"}, {"score": 0.004783730450730986, "phrase": "backfiring_conversion_ratios_using_neuro-fuzzy_technique._software_size_estimation"}, {"score": 0.004482400730101345, "phrase": "poor_estimations"}, {"score": 0.004367228576339114, "phrase": "late_delivery"}, {"score": 0.004012885020428863, "phrase": "popular_technique"}, {"score": 0.0038092152998069786, "phrase": "source_code"}, {"score": 0.0037112756920669593, "phrase": "function_point"}, {"score": 0.003639471039860495, "phrase": "source_lines"}, {"score": 0.003236802914194731, "phrase": "high_margin"}, {"score": 0.0030326180561817497, "phrase": "new_method"}, {"score": 0.002878556952876824, "phrase": "neural_networks"}, {"score": 0.0028412769256691, "phrase": "fuzzy_logic"}, {"score": 0.002804478352027886, "phrase": "software_prediction_models"}, {"score": 0.002644678812707061, "phrase": "improved_performance"}, {"score": 0.0026104197983396367, "phrase": "traditional_techniques"}, {"score": 0.0024939618994290016, "phrase": "neuro-fuzzy_approach"}, {"score": 0.002413964586947992, "phrase": "backfiring_technique"}, {"score": 0.0022615684627308283, "phrase": "neuro-fuzzy_calibration_solution"}, {"score": 0.0022033327475266496, "phrase": "calibrated_model"}, {"score": 0.002160640052461594, "phrase": "default_conversion_ratios"}, {"score": 0.0021049977753042253, "phrase": "soft_ware_practitioners"}], "paper_keywords": ["Backfiring", " software estimation", " sizing", " function point", " neuro-fuzzy", " lines of code"], "paper_abstract": "Software size estimation is an important aspect in software development projects because poor estimations can lead to late delivery, cost over runs and possibly project failure. Backfiring is a popular technique for sizing and predicting the volume of source code by converting the function point metric into source lines of code mathematically using conversion ratios. While this technique is popular and useful, there is a high margin of error in backfiring. This research introduces a new method to reduce this margin of error. Neural networks and fuzzy logic in software prediction models have been demonstrated in the past to have improved performance over traditional techniques. For this reason, a neuro-fuzzy approach is introduced to the backfiring technique to calibrate the conversion ratios. This paper presents the neuro-fuzzy calibration solution and compares the calibrated model against the default conversion ratios currently used by soft ware practitioners.", "paper_title": "CALIBRATING FUNCTION POINT BACKFIRING CONVERSION RATIOS USING NEURO-FUZZY TECHNIQUE", "paper_id": "WOS:000262087000005"}