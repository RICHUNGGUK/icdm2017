{"auto_keywords": [{"score": 0.04683590293207772, "phrase": "power_consumption"}, {"score": 0.008633117944789472, "phrase": "clock_networks"}, {"score": 0.006777414147190453, "phrase": "clock_tree"}, {"score": 0.00481495049065317, "phrase": "low_power_clock_tree_synthesis"}, {"score": 0.004703878334423852, "phrase": "significant_fraction"}, {"score": 0.00468884334315489, "phrase": "maximum_latency"}, {"score": 0.004638462976078815, "phrase": "entire_chip_power_budget"}, {"score": 0.00428451995524549, "phrase": "high_performance_ic_designs"}, {"score": 0.004127394241838696, "phrase": "traditional_studies"}, {"score": 0.0040133278382101885, "phrase": "clock_routing"}, {"score": 0.003976007772514762, "phrase": "buffer_insertion_strategy"}, {"score": 0.0038661089070527424, "phrase": "novel_register_clustering_methodology"}, {"score": 0.00379452936798156, "phrase": "leaf_level_topology"}, {"score": 0.003537669873715706, "phrase": "ksr"}, {"score": 0.0035047593568757226, "phrase": "gsr"}, {"score": 0.0034238045290210534, "phrase": "comprehensive_study"}, {"score": 0.0032370412139943808, "phrase": "buffer_allocation_algorithm"}, {"score": 0.0031475032122226, "phrase": "slew_constraint"}, {"score": 0.0030604342671868836, "phrase": "minimum_cost"}, {"score": 0.0029343128039167185, "phrase": "classical_clock_tree_synthesis"}, {"score": 0.0028664985822266344, "phrase": "register_clustering_methodology"}, {"score": 0.0028133741785871867, "phrase": "experimental_results"}, {"score": 0.002722758109991685, "phrase": "clustering_algorithms"}, {"score": 0.002445021071485221, "phrase": "gsr_algorithm"}, {"score": 0.0022058510091498666, "phrase": "total_runtime"}, {"score": 0.0021750990136123367, "phrase": "cts_flow"}, {"score": 0.0021049977753042253, "phrase": "almost_an_order"}], "paper_keywords": ["low power", " register clustering", " clock tree synthesis"], "paper_abstract": "Clock networks dissipate a significant fraction of the entire chip power budget. Therefore, the optimization for power consumption of clock networks has become one of the most important objectives in high performance IC designs. In contrast to most of the traditional studies that handle this problem with clock routing or buffer insertion strategy, this paper proposes a novel register clustering methodology in generating the leaf level topology of the clock tree to reduce the power consumption. Three register clustering algorithms called KMR, KSR and GSR are developed and a comprehensive study of them is discussed in this paper. Meanwhile, a buffer allocation algorithm is proposed to satisfy the slew constraint within the clusters at a minimum cost of power consumption. We integrate our algorithms into a classical clock tree synthesis (CTS) flow to test the register clustering methodology on ISPD 2010 benchmark circuits. Experimental results show that all the three register clustering algorithms achieve more than 20% reduction in power consumption without affecting the skew and the maximum latency of the clock tree. As the most effective method among the three algorithms, GSR algorithm achieves a 31% reduction in power consumption as well as a 4% reduction in skew and a 5% reduction in maximum latency. Moreover, the total runtime of the CTS flow with our register clustering algorithms is significantly reduced by almost an order of magnitude.", "paper_title": "Register Clustering Methodology for Low Power Clock Tree Synthesis", "paper_id": "WOS:000351292400016"}