{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sequence-based_specification"}, {"score": 0.004712988631183401, "phrase": "constructive_method"}, {"score": 0.004632968695963776, "phrase": "ordinary_functional_requirements"}, {"score": 0.004419819325202464, "phrase": "precise_specifications"}, {"score": 0.004307700591183651, "phrase": "human_requirements_analyst"}, {"score": 0.003954030683259778, "phrase": "original_requirements_document"}, {"score": 0.003788196352457501, "phrase": "string-rewriting_theory"}, {"score": 0.003274499008699115, "phrase": "prefix_rewrite_rules"}, {"score": 0.0032465423581390625, "phrase": "general_string_rewrite_rules"}, {"score": 0.0030573959252626695, "phrase": "new_equivalences"}, {"score": 0.0028669153591624696, "phrase": "enhanced_enumeration_process"}, {"score": 0.0027940789980683, "phrase": "working_enumerations"}, {"score": 0.0026425357050743003, "phrase": "new_reductions"}, {"score": 0.002575385171755899, "phrase": "complete_enumeration"}, {"score": 0.0023233800372985686, "phrase": "effort_reduction"}, {"score": 0.002216251512062482, "phrase": "consistent_decisions"}, {"score": 0.0021599099979586946, "phrase": "additional_opportunity"}, {"score": 0.0021049977753042253, "phrase": "specification_decisions"}], "paper_keywords": ["String-rewriting", " Prefix string-rewriting", " Sequence-based specification", " Software specification", " Abstract reduction system", " Requirements engineering", " Requirements elicitation"], "paper_abstract": "Sequence-based specification is a constructive method designed to convert ordinary functional requirements (that are often imprecisely and informally composed) into precise specifications. The method prompts a human requirements analyst to make the many decisions necessary to resolve the ambiguities, omissions, inconsistencies, and errors inherent in the original requirements document, and construct a complete, consistent, and traceably correct specification. We find that string-rewriting theory can be applied to make a number of these decisions automatically. In this paper we develop a method of applying string-rewriting to sequence enumeration. We give prescriptions on how prefix rewrite rules and general string rewrite rules can be declared, and used later in the process to automatically make new equivalences thereby prompting the human for fewer decisions. Based on the results we present an enhanced enumeration process, in which one develops working enumerations and working reduction systems concurrently, applying string-rewriting to deduce new reductions as needed, until a complete enumeration is obtained. We present data from four published applications that shows the feasibility and applicability of applying string-rewriting. In addition to effort reduction we have observed the benefit of eliminating rework achieved by consistent decisions, as well as an additional opportunity string-rewriting provides for validation of specification decisions to requirements.", "paper_title": "Applying string-rewriting to sequence-based specification", "paper_id": "WOS:000327846700002"}