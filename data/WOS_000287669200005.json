{"auto_keywords": [{"score": 0.049481323529186536, "phrase": "pattern-based_decomposition"}, {"score": 0.015719716506582538, "phrase": "machine-learning_algorithms"}, {"score": 0.015191438728188239, "phrase": "wide_variety"}, {"score": 0.0045789085863942825, "phrase": "useful_information"}, {"score": 0.004550225097519697, "phrase": "data_sets"}, {"score": 0.004423346952963429, "phrase": "super-linear_increases"}, {"score": 0.004354387464909719, "phrase": "increasing_data_size"}, {"score": 0.00411487907113509, "phrase": "larger_detection"}, {"score": 0.003950103621065539, "phrase": "probability_density_functions"}, {"score": 0.0038885390819956987, "phrase": "k-means"}, {"score": 0.003779996603264111, "phrase": "integral_part"}, {"score": 0.003756298824153418, "phrase": "numerous_machine-learning_applications"}, {"score": 0.0036058303048537837, "phrase": "fpga-based_reconfigurable_computing"}, {"score": 0.0035832894896809494, "phrase": "rc"}, {"score": 0.0034941851527001146, "phrase": "computationally_intensive_problems"}, {"score": 0.003439661147299417, "phrase": "scientific_domains"}, {"score": 0.0033859850551189938, "phrase": "traditional_software_implementations"}, {"score": 0.003333143779627263, "phrase": "potential_benefit"}, {"score": 0.0032400921800645947, "phrase": "efficient_fpga_designs"}, {"score": 0.0031102371319399946, "phrase": "redundant_time"}, {"score": 0.0029113423551788264, "phrase": "significant_increases"}, {"score": 0.0028749210987951677, "phrase": "design_reusability"}, {"score": 0.0027509877943131945, "phrase": "multi-dimensional_pdf_estimation_algorithm"}, {"score": 0.0027347410300126366, "phrase": "gaussian"}, {"score": 0.0026657398039253008, "phrase": "algorithm's_amenability"}, {"score": 0.002640682934273318, "phrase": "hardware_paradigm"}, {"score": 0.0026241089938360634, "phrase": "expected_speedups"}, {"score": 0.002566913022636081, "phrase": "actual_speedup"}, {"score": 0.0024026792279374784, "phrase": "multi-core_architectures"}, {"score": 0.002291827910789624, "phrase": "hardware_design"}, {"score": 0.00227743851871825, "phrase": "multiple_fpga_platforms"}, {"score": 0.0022207767448896515, "phrase": "pdf_algorithm"}, {"score": 0.002138410677608455, "phrase": "rapid_development"}, {"score": 0.0021049977753042253, "phrase": "correlation_algorithms"}], "paper_keywords": ["FPGA", " Design patterns", " Machine learning", " Pattern recognition", " Hardware acceleration", " Performance prediction"], "paper_abstract": "Machine-learning algorithms are employed in a wide variety of applications to extract useful information from data sets, and many are known to suffer from super-linear increases in computational time with increasing data size and number of signals being processed (data dimension). Certain principal machine-learning algorithms are commonly found embedded in larger detection, estimation, or classification operations. Three such principal algorithms are the Parzen window-based, non-parametric estimation of Probability Density Functions (PDFs), K-means clustering and correlation. Because they form an integral part of numerous machine-learning applications, fast and efficient execution of these algorithms is extremely desirable. FPGA-based reconfigurable computing (RC) has been successfully used to accelerate computationally intensive problems in a wide variety of scientific domains to achieve speedup over traditional software implementations. However, this potential benefit is quite often not fully realized because creating efficient FPGA designs is generally carried out in a laborious, case-specific manner requiring a great amount of redundant time and effort. In this paper, an approach using pattern-based decomposition for algorithm acceleration on FPGAs is proposed that offers significant increases in productivity via design reusability. Using this approach, we design, analyze, and implement a multi-dimensional PDF estimation algorithm using Gaussian kernels on FPGAs. First, the algorithm's amenability to a hardware paradigm and expected speedups are predicted. After implementation, actual speedup and performance metrics are compared to the predictions, showing speedup on the order of 20x over a 3.2 GHz processor. Multi-core architectures are developed to further improve performance by scaling the design. Portability of the hardware design across multiple FPGA platforms is also analyzed. After implementing the PDF algorithm, the value of pattern-based decomposition to support reuse is demonstrated by rapid development of the K-means and correlation algorithms.", "paper_title": "Accelerating Machine-Learning Algorithms on FPGAs using Pattern-Based Decomposition", "paper_id": "WOS:000287669200005"}