{"auto_keywords": [{"score": 0.04975757974160046, "phrase": "eventual_leader"}, {"score": 0.014641000077659207, "phrase": "common_leader"}, {"score": 0.00481495049065317, "phrase": "asynchronous_intermittent_rotating_star"}, {"score": 0.004739874550843914, "phrase": "asynchronous_system"}, {"score": 0.004697498281684938, "phrase": "n_processes"}, {"score": 0.004562362497952548, "phrase": "weakest_assumption"}, {"score": 0.004391469078541056, "phrase": "holy_grail_quests"}, {"score": 0.004371787660986721, "phrase": "fault-tolerant_asynchronous_computing"}, {"score": 0.004208002469225673, "phrase": "simple_and_general_asynchronous_system_model"}, {"score": 0.004041238873048836, "phrase": "additional_assumption"}, {"score": 0.00384633057714983, "phrase": "asynchronous_intermittent_rotating_t-star"}, {"score": 0.0034920056544634017, "phrase": "intermittent_rotating_t-star_assumption"}, {"score": 0.0034452224126541513, "phrase": "process_p"}, {"score": 0.003406713877432236, "phrase": "pulse_numbers"}, {"score": 0.003376216135716632, "phrase": "associated_sets"}, {"score": 0.0032350269013554965, "phrase": "pulse_pn"}, {"score": 0.0032132782979796895, "phrase": "timely_manner"}, {"score": 0.002930251343471448, "phrase": "finite_periods"}, {"score": 0.0027452053065200152, "phrase": "time-free_assumptions"}, {"score": 0.0025602676529537936, "phrase": "second_contribution"}, {"score": 0.0024586427394152196, "phrase": "asynchronous_intermittent_rotating_t-star_assumption"}, {"score": 0.0023770362063833903, "phrase": "design_point"}, {"score": 0.002313701040445819, "phrase": "cost_point"}, {"score": 0.0022368945809383874, "phrase": "infinite_executions"}, {"score": 0.0021821915946356168, "phrase": "corresponding_sender"}, {"score": 0.002119261092659259, "phrase": "message_fields"}, {"score": 0.0021049977753042253, "phrase": "finite_domain"}], "paper_keywords": ["Assumption coverage", " asynchronous system", " distributed algorithm", " eventual t-source", " eventual leader", " failure detector", " fault tolerance", " message pattern", " moving source", " omega", " partial synchrony", " process crash", " system model", " timely link"], "paper_abstract": "Considering an asynchronous system made up of n processes and where up to t of them can crash, finding the weakest assumption that such a system has to satisfy for a common leader to be eventually elected is one of the holy grail quests of fault-tolerant asynchronous computing. This paper is a step in that direction. It has two contributions. Considering a simple and general asynchronous system model where processes generate asynchronous pulses during which they send and receive messages, it first introduces an additional assumption that allows to elect an eventual leader in all the runs that satisfy that assumption. That assumption is captured by the notion of asynchronous intermittent rotating t-star. An x-star is made up of one process p (the center of the star) plus a sequence of sets of x processes (the successive points of the star), which satisfies some properties. Intuitively, the intermittent rotating t-star assumption means that there are a process p, a subset of pulse numbers pn, and associated sets of processes Q(pn) such that each process of Q(pn) receives from p a message sent in pulse pn in a timely manner or among the first (n - t) messages tagged pn it ever receives. The t-star is called rotating because the setQ(pn) is allowed to change with pn; it is intermittent because it can disappear during finite periods; it is asynchronous because the points of a star are not required to be simultaneously at the same pulse. (This assumption combines and generalizes several synchrony and time-free assumptions that have been previously proposed to elect an eventual leader, e.g., eventual t-source, eventual t-moving source, and message pattern assumption.) The second contribution of the paper is an algorithm that eventually elects a common leader in the systems that satisfy the asynchronous intermittent rotating t-star assumption. This algorithm enjoys, among others, two noteworthy properties. First, from a design point of view, it is simple. Second, from a cost point of view, only the pulse numbers increase without bound. This means that, even in infinite executions, be links timely or not (or have the corresponding sender crashed or not), all the other local variables (including the timers) and message fields have a finite domain.", "paper_title": "From an Asynchronous Intermittent Rotating Star to an Eventual Leader", "paper_id": "WOS:000280169200006"}