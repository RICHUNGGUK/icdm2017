{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "complex_holes"}, {"score": 0.004749106104067268, "phrase": "reverse_engineering"}, {"score": 0.004372442291178139, "phrase": "mesh_operations"}, {"score": 0.004195418010131832, "phrase": "model_rebuilding"}, {"score": 0.004138010495069077, "phrase": "rapid_prototyping"}, {"score": 0.004081385289516914, "phrase": "finite_element_analysis"}, {"score": 0.004025531820226182, "phrase": "existing_hole-filling_algorithms"}, {"score": 0.003835972725191194, "phrase": "small_and_smooth_regions"}, {"score": 0.003680587852807675, "phrase": "large_holes"}, {"score": 0.0036301992752948956, "phrase": "complex_boundaries"}, {"score": 0.003555902292752528, "phrase": "curved_region"}, {"score": 0.0033883824438527316, "phrase": "satisfactory_results"}, {"score": 0.003097865379563127, "phrase": "flatter_ones"}, {"score": 0.0028914057633212045, "phrase": "edge_expansion"}, {"score": 0.0027741761880779535, "phrase": "complex_hole"}, {"score": 0.0027361626349903744, "phrase": "simple_ones"}, {"score": 0.0024333239726872604, "phrase": "simple_hole"}, {"score": 0.0023999697562763433, "phrase": "planar_triangulation"}, {"score": 0.0023507916951658455, "phrase": "proposed_algorithm"}, {"score": 0.0021490449563443025, "phrase": "detailed_features"}, {"score": 0.0021049977753042253, "phrase": "original_mesh"}], "paper_keywords": ["reverse engineering", " triangular mesh", " point cloud", " hole filling"], "paper_abstract": "The existence of holes in meshes makes it difficult for mesh operations, especially when comes to model rebuilding, rapid prototyping and finite element analysis. Existing hole-filling algorithms are capable of filling holes on small and smooth regions of a model. For large holes with complex boundaries or in curved region, they may not result in satisfactory results. This paper proposes an algorithm which first split the holes into flatter ones and then split the complex holes based the concept of edge expansion. It incrementally splits a complex hole into simple ones by respecting the 3D shape of its boundary and the neighboring meshes, and then fills each resulting simple hole with planar triangulation. The proposed algorithm works well for a variety of complex holes and can better preserve the detailed features of the original mesh.", "paper_title": "An algorithm for filling complex holes in reverse engineering", "paper_id": "WOS:000255254200003"}