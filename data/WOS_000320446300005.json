{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reactive_systems"}, {"score": 0.004598933498016774, "phrase": "formal_methods"}, {"score": 0.0044688500725247726, "phrase": "informal_requirements"}, {"score": 0.004417848254181138, "phrase": "formal_specifications"}, {"score": 0.0039841418890102925, "phrase": "complex_mathematical_theory"}, {"score": 0.003634371940842838, "phrase": "state_space"}, {"score": 0.0034911335714333507, "phrase": "also_a_consistent_set"}, {"score": 0.003296212583539166, "phrase": "requirements_conflicts"}, {"score": 0.003130077012135034, "phrase": "specification_technique"}, {"score": 0.0030414140732789186, "phrase": "signal_patterns"}, {"score": 0.00298942278888105, "phrase": "main_elements"}, {"score": 0.00283870598459543, "phrase": "regular_expressions"}, {"score": 0.0027741761880779535, "phrase": "piece-wise_formalization"}, {"score": 0.0027424619603260837, "phrase": "potentially_inconsistent_requirements"}, {"score": 0.002649472341607234, "phrase": "input_completeness"}, {"score": 0.002255431275670053, "phrase": "formal_foundation"}, {"score": 0.002166421738415464, "phrase": "prototypical_tool_support"}, {"score": 0.0021049977753042253, "phrase": "industrial_case_study"}], "paper_keywords": ["Tabular specification", " Consistency", " Streams"], "paper_abstract": "A core problem in formal methods is the transition from informal requirements to formal specifications. Especially when specifying the behavior of reactive systems, many formalisms require the user to either understand a complex mathematical theory and notation or to derive details not given in the requirements, such as the state space of the problem. For many approaches also a consistent set of requirements is needed, which enforces to resolve requirements conflicts prior to formalization. This paper describes a specification technique, where not states but signal patterns are the main elements. The notation is based on tables of regular expressions and supports a piece-wise formalization of potentially inconsistent requirements. Many properties, such as input completeness and consistency, can be checked automatically for these specifications. The detection and resolution of conflicts can be performed within our framework after formalization. Besides the formal foundation of our approach, this paper presents prototypical tool support and results from an industrial case study.", "paper_title": "Behavioral specification of reactive systems using stream-based I/O tables", "paper_id": "WOS:000320446300005"}