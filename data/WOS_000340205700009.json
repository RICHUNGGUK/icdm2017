{"auto_keywords": [{"score": 0.04489580559834048, "phrase": "query_keywords"}, {"score": 0.00481495049065317, "phrase": "efficient_duplication_free"}, {"score": 0.0046672975629621465, "phrase": "graphs"}, {"score": 0.004610058444728656, "phrase": "keyword_search"}, {"score": 0.004046020290832207, "phrase": "duplicate_answers"}, {"score": 0.003916098498242888, "phrase": "content_nodes"}, {"score": 0.0037697665240643066, "phrase": "query_keyword"}, {"score": 0.0035701213515857227, "phrase": "different_answers"}, {"score": 0.003362660648932247, "phrase": "trivial_differences"}, {"score": 0.002575167114383286, "phrase": "content_node"}, {"score": 0.002347378595930709, "phrase": "duplication-free_and_minimal_answers"}, {"score": 0.0022228943786652914, "phrase": "extensive_performance_studies"}, {"score": 0.0021049977753042253, "phrase": "proposed_methods"}], "paper_keywords": ["Keyword search", " graph data", " polynomial delay", " approximation algorithm"], "paper_abstract": "Keyword search over a graph searches for a subgraph that contains a set of query keywords. A problem with most existing keyword search methods is that they may produce duplicate answers that contain the same set of content nodes (i.e., nodes containing a query keyword) although these nodes may be connected differently in different answers. Thus, users may be presented with many similar answers with trivial differences. In addition, some of the nodes in an answer may contain query keywords that are all covered by other nodes in the answer. Removing these nodes does not change the coverage of the answer but can make the answer more compact. The answers in which each content node contains at least one unique query keyword are called minimal answers in this paper. We define the problem of finding duplication-free and minimal answers, and propose algorithms for finding such answers efficiently. Extensive performance studies using two large real data sets confirm the efficiency and effectiveness of the proposed methods.", "paper_title": "Efficient Duplication Free and Minimal Keyword Search in Graphs", "paper_id": "WOS:000340205700009"}