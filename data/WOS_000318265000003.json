{"auto_keywords": [{"score": 0.048171695241769195, "phrase": "habitat"}, {"score": 0.00481495049065317, "phrase": "sql_queries"}, {"score": 0.004409127897028587, "phrase": "sql._habitat"}, {"score": 0.004349791059765796, "phrase": "true_language-level"}, {"score": 0.0038242899532391914, "phrase": "sql_subexpressions"}, {"score": 0.003772793879444995, "phrase": "arbitrary_size"}, {"score": 0.0034780071331554003, "phrase": "query_nesting"}, {"score": 0.0034311578789991363, "phrase": "free_row_variables"}, {"score": 0.00338493754743055, "phrase": "correlated_subqueries"}, {"score": 0.0031629800646754505, "phrase": "suspect_subexpressions"}, {"score": 0.0029959082125682918, "phrase": "marked_sql_text"}, {"score": 0.002955533639862811, "phrase": "habitat's_algebraic_compiler"}, {"score": 0.002895986736522535, "phrase": "new_query"}, {"score": 0.0027616550517346066, "phrase": "desired_observations"}, {"score": 0.0026157259734105, "phrase": "target_sql_database_host"}, {"score": 0.002494361792853833, "phrase": "original_data"}, {"score": 0.0023948164534491273, "phrase": "prior_data_extraction"}, {"score": 0.0023625233416109917, "phrase": "extra_debugging_middleware"}, {"score": 0.0022992346264367374, "phrase": "tpc-h_database_instances"}, {"score": 0.0021049977753042253, "phrase": "interactive_debugging_sessions"}], "paper_keywords": ["Algorithms", " Languages", " Declarative debugging", " query languages", " relational databases", " SQL"], "paper_abstract": "We describe HABITAT, a declarative observational debugger for SQL. HABITAT facilitates true language-level (not: plan-level) debugging of, probably flawed, SQL queries that yield unexpected results. Users mark SQL subexpressions of arbitrary size and then observe whether these evaluate as expected. HABITAT understands query nesting and free row variables in correlated subqueries, and generally aims to not constrain users while suspect subexpressions are marked for observation. From the marked SQL text, HABITAT's algebraic compiler derives a new query whose result represents the values of the desired observations. These observations are generated by the target SQL database host itself and are derived from the original data: HABITAT does not require prior data extraction or extra debugging middleware. Experiments with TPC-H database instances indicate that observations impose a runtime overhead sufficiently low to allow for interactive debugging sessions.", "paper_title": "Observing SQL Queries in their Natural Habitat", "paper_id": "WOS:000318265000003"}