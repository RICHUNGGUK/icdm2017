{"auto_keywords": [{"score": 0.03398665802358191, "phrase": "contribution_management"}, {"score": 0.00481495049065317, "phrase": "community_contributions"}, {"score": 0.004576253356889219, "phrase": "thriving_user"}, {"score": 0.004537631845923196, "phrase": "developer_community"}, {"score": 0.004480307124735185, "phrase": "major_factor"}, {"score": 0.0044237033788643715, "phrase": "innovative_technology"}, {"score": 0.0043678116213858, "phrase": "market_demand"}, {"score": 0.004012751049253625, "phrase": "external_developers"}, {"score": 0.0039119492240482, "phrase": "software_companies"}, {"score": 0.0037654565082218595, "phrase": "empirical_study"}, {"score": 0.0037178503842258087, "phrase": "contribution_management_processes"}, {"score": 0.003245900020944865, "phrase": "conceptual_model"}, {"score": 0.0031110402375026016, "phrase": "seven_major_open-source_software_systems"}, {"score": 0.0029691377785333872, "phrase": "android_code_review_system"}, {"score": 0.002931569771634119, "phrase": "linux_kernel_code_review_mailing_lists"}, {"score": 0.0028578496983461136, "phrase": "significantly_different_contribution_management_styles"}, {"score": 0.002762423953243486, "phrase": "individual_advantages"}, {"score": 0.0026252106881752067, "phrase": "real-world_problem"}, {"score": 0.002548331088496964, "phrase": "research_community"}, {"score": 0.002463270608738429, "phrase": "linux"}, {"score": 0.002442416147112293, "phrase": "android"}, {"score": 0.0024114635128122783, "phrase": "different_strategies"}, {"score": 0.0023013968622710847, "phrase": "valuable_examples"}, {"score": 0.0022339789476489877, "phrase": "specific_advantages"}, {"score": 0.0021049977753042253, "phrase": "contribution_management_process"}], "paper_keywords": ["Software management", " Software process", " Measurement", " Contribution management", " Open source software", " Best practices"], "paper_abstract": "In recent years, many companies have realized that collaboration with a thriving user or developer community is a major factor in creating innovative technology driven by market demand. As a result, businesses have sought ways to stimulate contributions from developers outside their corporate walls, and integrate external developers into their development process. To support software companies in this process, this paper presents an empirical study on the contribution management processes of two major, successful, open source software ecosystems. We contrast a for-profit (ANDROID) system having a hybrid contribution style, with a not-for-profit (LINUX kernel) system having an open contribution style. To guide our comparisons, we base our analysis on a conceptual model of contribution management that we derived from a total of seven major open-source software systems. A quantitative comparison based on data mined from the ANDROID code review system and the LINUX kernel code review mailing lists shows that both projects have significantly different contribution management styles, suited to their respective market goals, but with individual advantages and disadvantages that are important for practitioners. Contribution management is a real-world problem that has received very little attention from the research community so far. Both studied systems (LINUX and ANDROID) employ different strategies and techniques for managing contributions, and both approaches are valuable examples for practitioners. Each approach has specific advantages and disadvantages that need to be carefully evaluated by practitioners when adopting a contribution management process in practice.", "paper_title": "Management of community contributions", "paper_id": "WOS:000348381800008"}