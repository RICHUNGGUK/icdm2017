{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "communicating_uml_statechart_diagrams."}, {"score": 0.0044870272550540415, "phrase": "uml_statechart_diagrams"}, {"score": 0.003594369823549604, "phrase": "channel-passing_interaction_paradigm"}, {"score": 0.0033832583769880576, "phrase": "original_uml_semantics"}, {"score": 0.003282383509542342, "phrase": "statechart_diagrams"}, {"score": 0.003152531962718477, "phrase": "different_sorts"}, {"score": 0.0030278017562213265, "phrase": "uml_scds"}, {"score": 0.002907992115184249, "phrase": "strong_behavioural_equivalence"}, {"score": 0.0028498718992429825, "phrase": "weak_behavioural_equivalence"}, {"score": 0.0021049977753042253, "phrase": "industry_level_case_study"}], "paper_keywords": ["Equivalence checking", " UML statechart diagrams", " equivalence classification"], "paper_abstract": "We demonstrate how a subset of UML statechart diagrams (SCDs) as distinct from statecharts is encoded in the pi-calculus as a number of processes which communicate via a channel-passing interaction paradigm. An extension to the original UML semantics for communicating statechart diagrams is presented. Different sorts of equivalences of UML SCDs encompassing isomorphism, strong behavioural equivalence and weak behavioural equivalence are defined. Determining equivalence of any two UML SCDs is transformed to a problem of checking whether their respective pi-calculus process expressions are equivalent. The practicality of the approach is exemplified using an industry level case study.", "paper_title": "EQUIVALENCE CHECKING OF COMMUNICATING UML STATECHART DIAGRAMS", "paper_id": "WOS:000304829200007"}