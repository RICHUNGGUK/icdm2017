{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "clover"}, {"score": 0.004681525814235883, "phrase": "soft_error_detection"}, {"score": 0.004551781491498328, "phrase": "lightweight_soft_error_resilience"}, {"score": 0.004400804926266097, "phrase": "soft_error_tolerant_code"}, {"score": 0.004327196832280818, "phrase": "idem-potent_processing"}, {"score": 0.004183638135671596, "phrase": "program_execution"}, {"score": 0.004044822781630218, "phrase": "small_number"}, {"score": 0.003999578057088828, "phrase": "acoustic_wave_detectors"}, {"score": 0.003845154818609644, "phrase": "soft_errors"}, {"score": 0.0036759314172445934, "phrase": "particle_strike"}, {"score": 0.0035739564426454603, "phrase": "due"}, {"score": 0.0033974527047473044, "phrase": "sensing_latency"}, {"score": 0.0033594249301033604, "phrase": "error_detection"}, {"score": 0.003266201217790818, "phrase": "novel_selective_instruction_duplication_technique"}, {"score": 0.003035711716881469, "phrase": "soft_error"}, {"score": 0.00266693888510356, "phrase": "exception_handling"}, {"score": 0.002506715532901322, "phrase": "program_control"}, {"score": 0.0024234059612683032, "phrase": "code_region"}, {"score": 0.0023166075278110237, "phrase": "experiment_results"}, {"score": 0.002264982416465872, "phrase": "average_runtime_overhead"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_soft_error_resilience_technique"}], "paper_keywords": ["Terms Reliability", " Languages", " Soft Error Resilience", " Compilers", " Tail-DMR Frontier", " Idempotent Processing", " Acoustic Wave Detectors"], "paper_abstract": "This paper presents Clover, a compiler directed soft error detection and recovery scheme for lightweight soft error resilience. The compiler carefully generates soft error tolerant code based on idem-potent processing without explicit checkpoint. During program execution, Clover relies on a small number of acoustic wave detectors deployed in the processor to identify soft errors by sensing the wave made by a particle strike. To cope with DUE (detected unrecoverable errors) caused by the sensing latency of error detection, Clover leverages a novel selective instruction duplication technique called tail-DMR (dual modular redundancy). Once a soft error is detected by either the sensor or the tail-DMR, Clover takes care of the error as in the case of exception handling. To recover from the error, Clover simply redirects program control to the beginning of the code region where the error is detected. The experiment results demonstrate that the average runtime overhead is only 26%, which is a 75% reduction compared to that of the state-of-the-art soft error resilience technique.", "paper_title": "Clover: Compiler Directed Lightweight Soft Error Resilience", "paper_id": "WOS:000370875500002"}