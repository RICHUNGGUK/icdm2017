{"auto_keywords": [{"score": 0.03867712206987224, "phrase": "parallel_programs"}, {"score": 0.00481495049065317, "phrase": "video_streaming_processing"}, {"score": 0.0046038458731764926, "phrase": "unprecedented_rate"}, {"score": 0.004545240514015278, "phrase": "computer_hardware"}, {"score": 0.0044873778175404475, "phrase": "networking_technologies"}, {"score": 0.0037743802306714545, "phrase": "scalable_parallel_software"}, {"score": 0.003608732492631878, "phrase": "many-core_platform"}, {"score": 0.003494866798828308, "phrase": "multifaceted_problem"}, {"score": 0.0033845816848753073, "phrase": "architectural_factors"}, {"score": 0.00299622333197717, "phrase": "different_available_programming_paradigms"}, {"score": 0.0029391032882625473, "phrase": "application_behaviors"}, {"score": 0.0027564303939865476, "phrase": "hybrid_producer-write_plus_consumer-read_shared_memory_programming_paradigm"}, {"score": 0.0026693851900137953, "phrase": "master-worker_video_decoder"}, {"score": 0.002585081657512565, "phrase": "referred_many-core_platform"}, {"score": 0.002471499653433169, "phrase": "proposed_implementation"}, {"score": 0.0024243586247372087, "phrase": "competitive_performance_speedup"}, {"score": 0.0023029886389559122, "phrase": "available_cores"}, {"score": 0.00220177373403577, "phrase": "performance_improvement"}], "paper_keywords": ["Many-core", " Master-worker", " Producer-consumer", " Shared memory", " Message passing", " TILE64"], "paper_abstract": "Advances at an unprecedented rate in computer hardware and networking technologies have made the many-core computing affordable and readily available in a matter of few years. Nonetheless, it incurs challenges to programmers to build scalable parallel software. Optimizations of parallel programs for a many-core platform are viewed as a multifaceted problem, where system and architectural factors should be taken into account. In this paper, we tackle this problem by implementing parallel programs with different available programming paradigms and evaluate application behaviors on TILE64 many-core platform. That is, we investigate a hybrid producer-write plus consumer-read shared memory programming paradigm for the implementation of master-worker video decoder and encoder in the referred many-core platform. Experimental results show that the proposed implementation has achieved competitive performance speedup, scaling well with the number of available cores and up to four times of performance improvement over other implementations on the decoding of sample 1080P video.", "paper_title": "Efficient programming paradigm for video streaming processing on TILE64 platform", "paper_id": "WOS:000321290800022"}