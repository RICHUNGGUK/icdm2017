{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minimal_acyclic_deterministic_finite_automata"}, {"score": 0.004527024978801684, "phrase": "canonical_representation"}, {"score": 0.00430907756010007, "phrase": "madfa"}, {"score": 0.004152502093643003, "phrase": "n_states"}, {"score": 0.0039040344230094164, "phrase": "k_symbols"}, {"score": 0.0037159680715717056, "phrase": "normal_form"}, {"score": 0.0033664873319204027, "phrase": "exact_generation"}, {"score": 0.0030497740719977835, "phrase": "rejection_phase"}, {"score": 0.002797121441432477, "phrase": "generation_algorithm"}, {"score": 0.0026953359825383646, "phrase": "larger_class"}, {"score": 0.002323826502178581, "phrase": "upper_and_lower_bounds"}, {"score": 0.002157697367447098, "phrase": "exact_formulas"}, {"score": 0.0021049977753042253, "phrase": "small_values"}], "paper_keywords": ["acyclic deterministic finite automata", " minimal automata", " finite languages", " generation", " enumeration"], "paper_abstract": "We give a canonical representation for minimal acyclic deterministic finite automata (MADFA) with n states over an alphabet of k symbols. Using this normal form, we present a method for the exact generation of MADFAs. This method avoids a rejection phase that would be needed if a generation algorithm for a larger class of objects that contains the MADFAs were used. We give upper and lower bounds for MADFAs enumeration and some exact formulas for small values of n.", "paper_title": "Exact generation of minimal acyclic deterministic finite automata", "paper_id": "WOS:000258291000002"}