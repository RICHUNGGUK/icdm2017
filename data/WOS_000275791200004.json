{"auto_keywords": [{"score": 0.050078387629161586, "phrase": "hash_functions"}, {"score": 0.043819218568594685, "phrase": "large_class"}, {"score": 0.04006877835439105, "phrase": "kelsey"}, {"score": 0.03718034097391593, "phrase": "joux"}, {"score": 0.03554430980941275, "phrase": "cascaded_hash_functions"}, {"score": 0.024738554879749033, "phrase": "dunkelman"}, {"score": 0.02448943321803635, "phrase": "preneel"}, {"score": 0.004596295252559861, "phrase": "iterated_hash_functions"}, {"score": 0.00450231514359539, "phrase": "input_dependent_checksum"}, {"score": 0.004320055598195391, "phrase": "hash_computation"}, {"score": 0.004039423410198574, "phrase": "non-linear_or_even_one-way_checksum_functions"}, {"score": 0.0037769520261285872, "phrase": "schneier"}, {"score": 0.0036239540751112458, "phrase": "kohno"}, {"score": 0.0035681790580031998, "phrase": "multicollision_attack"}, {"score": 0.0029013950320185573, "phrase": "previous_best_known_short-cut_second_preimage_attacks"}, {"score": 0.00257586859792573, "phrase": "generic_checksum_functions"}, {"score": 0.002445950676329976, "phrase": "special_case"}, {"score": 0.0023711591828229736, "phrase": "cascaded_iterated_hash_functions"}, {"score": 0.0021714122348552747, "phrase": "easily_invertible_checksums"}, {"score": 0.0021049977753042253, "phrase": "hash_value"}], "paper_keywords": ["Iterated hash functions", " Checksums", " Generic attacks"], "paper_abstract": "We analyse the security of iterated hash functions that compute an input dependent checksum which is processed as part of the hash computation. We show that a large class of such schemes, including those using non-linear or even one-way checksum functions, is not secure against the second preimage attack of Kelsey and Schneier, the herding attack of Kelsey and Kohno and the multicollision attack of Joux. Our attacks also apply to a large class of cascaded hash functions. Our second preimage attacks on the cascaded hash functions improve the results of Joux presented at Crypto'04. We also apply our attacks to the MD2 and GOST hash functions. Our second preimage attacks on the MD2 and GOST hash functions improve the previous best known short-cut second preimage attacks on these hash functions by factors of at least 2(26) and 2(54), respectively. Our herding and multicollision attacks on the hash functions based on generic checksum functions (e.g., one-way) are a special case of the attacks on the cascaded iterated hash functions previously analysed by Dunkelman and Preneel and are not better than their attacks. On hash functions with easily invertible checksums, our multicollision and herding attacks (if the hash value is short as in MD2) are more efficient than those of Dunkelman and Preneel.", "paper_title": "On hash functions using checksums", "paper_id": "WOS:000275791200004"}