{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "keyword_search"}, {"score": 0.032839958078635254, "phrase": "lca_size"}, {"score": 0.004706206193274572, "phrase": "large_tree-structured_datasets"}, {"score": 0.00463507149599759, "phrase": "unknown_structure"}, {"score": 0.004461882369408972, "phrase": "lowest_common_ancestors"}, {"score": 0.00421410521089045, "phrase": "keyword_query"}, {"score": 0.0041662189933067, "phrase": "major_challenge"}, {"score": 0.004118874671285618, "phrase": "ranking_approach"}, {"score": 0.0038458526450015976, "phrase": "data_increase"}, {"score": 0.0037161794591176033, "phrase": "known_approaches"}, {"score": 0.0034697573205392887, "phrase": "relevant_results"}, {"score": 0.003352722512047951, "phrase": "top-k-size_stack-based_algorithms"}, {"score": 0.0032272929113113203, "phrase": "ranking_semantics"}, {"score": 0.0032027739752274, "phrase": "keyword_queries"}, {"score": 0.0030595112110658675, "phrase": "metric_selection"}, {"score": 0.003036263091666092, "phrase": "information_retrieval"}, {"score": 0.002956272941199248, "phrase": "keyword_matches"}, {"score": 0.002922637921202474, "phrase": "data_tree"}, {"score": 0.0028347983387988847, "phrase": "predefined_subset"}, {"score": 0.0027706507124407686, "phrase": "layered_presentation"}, {"score": 0.0027079507175554857, "phrase": "improved_effectiveness"}, {"score": 0.0026771333996253783, "phrase": "previous_relevant_approaches"}, {"score": 0.0025282151875392817, "phrase": "keyword_set"}, {"score": 0.0024804352736263005, "phrase": "linear_time_performance"}, {"score": 0.002387560868354908, "phrase": "auxiliary_precomputed_data_structures"}, {"score": 0.002360381056508366, "phrase": "extensive_experimental_study"}, {"score": 0.0023157656212149367, "phrase": "theoretical_analysis"}, {"score": 0.0021049977753042253, "phrase": "keywords_increase"}], "paper_keywords": ["Keyword search", " Tree-structured data", " LCA", " Search algorithm", " Ranking"], "paper_abstract": "Keyword search is the most popular technique for querying large tree-structured datasets, often of unknown structure, in the web. Recent keyword search approaches return lowest common ancestors (LCAs) of the keyword matches ranked with respect to their relevance to the keyword query. A major challenge of a ranking approach is the efficiency of its algorithms as the number of keywords and the size and complexity of the data increase. To face this challenge most of the known approaches restrict their ranking to a subset of the LCAs (e.g., SLCAs, ELCAs), missing relevant results. In this work, we design novel top-k-size stack-based algorithms on tree-structured data. Our algorithms implement ranking semantics for keyword queries which is based on the concept of LCA size. Similar to metric selection in information retrieval, LCA size reflects the proximity of keyword matches in the data tree. This semantics does not rank a predefined subset of LCAs and through a layered presentation of results, it demonstrates improved effectiveness compared to previous relevant approaches. To address performance challenges our algorithms exploit a lattice of the partitions of the keyword set, which empowers a linear time performance. This result is obtained without the support of auxiliary precomputed data structures. An extensive experimental study on various and large datasets confirms the theoretical analysis. The results show that, in contrast in other approaches, our algorithms scale smoothly when the size of the dataset and the number of keywords increase. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Top-k-size keyword search on tree structured data", "paper_id": "WOS:000344201100009"}