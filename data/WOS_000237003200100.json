{"auto_keywords": [{"score": 0.049488021144002546, "phrase": "maxwell"}, {"score": 0.008038030835275371, "phrase": "lagrange"}, {"score": 0.00481495049065317, "phrase": "parallel_multilevel"}, {"score": 0.004553128404612054, "phrase": "parallel_implementation"}, {"score": 0.004199766284749713, "phrase": "large_real_symmetric_generalized_matrix_eigenvalue_problem"}, {"score": 0.003946650265907885, "phrase": "eigenvalue_problem"}, {"score": 0.0037551444630619015, "phrase": "particle_accelerators"}, {"score": 0.0035951877427580006, "phrase": "finite_element"}, {"score": 0.003506851152129303, "phrase": "time-harmonic_maxwell_equation"}, {"score": 0.0033828180659519216, "phrase": "nedelec"}, {"score": 0.0029097582786754444, "phrase": "good_preconditioner"}, {"score": 0.0028206052780047424, "phrase": "correction_equations"}, {"score": 0.002633941112839883, "phrase": "jd_iteration"}, {"score": 0.0024595996811420566, "phrase": "hierarchical_basis_preconditioner"}, {"score": 0.002414082940963702, "phrase": "smoothed_aggregation_amg_preconditioner"}, {"score": 0.0022967713922705, "phrase": "iteration_count"}, {"score": 0.0022125358787611457, "phrase": "memory_consumption"}, {"score": 0.0021715812867126884, "phrase": "parallel_code"}, {"score": 0.0021446993452098597, "phrase": "extensive_use"}, {"score": 0.0021049977753042253, "phrase": "trilinos_software_framework"}], "paper_keywords": [""], "paper_abstract": "We report on a parallel implementation of the Jacobi-Davidson (JD) to compute a few eigenpairs of a large real symmetric generalized matrix eigenvalue problem Ax = lambda Mx, C(T)x = 0. The eigenvalue problem sterns from the design of cavities of particle accelerators. It is obtained by the finite element discretization of the time-harmonic Maxwell equation in weak form by a combination of Nedelec (edge) and Lagrange (node) elements. We found the Jacobi-Davidson (JD) method to be a very effective solver provided that a good preconditioner is available for the correction equations that have to be solved in each step of the JD iteration. The preconditioner of our choice is a combination of a hierarchical basis preconditioner and a smoothed aggregation AMG preconditioner. It is close to optimal regarding iteration count and scales with regard to memory consumption. The parallel code makes extensive use of the Trilinos software framework.", "paper_title": "Towards a parallel multilevel preconditioned Maxwell eigensolver", "paper_id": "WOS:000237003200100"}