{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "memory-based_solid_state_disk"}, {"score": 0.004692227830462433, "phrase": "large_logically_chained_blocks"}, {"score": 0.004549063619065006, "phrase": "adjacent_flash_blocks"}, {"score": 0.004410248125081398, "phrase": "flash_memory"}, {"score": 0.004320055598195391, "phrase": "in-place_overwriting"}, {"score": 0.004081385289516914, "phrase": "visible_decrease"}, {"score": 0.003936389070602614, "phrase": "small_random_writes"}, {"score": 0.003835972725191194, "phrase": "disk_address_space"}, {"score": 0.003441352119167824, "phrase": "stable_ssd_performance"}, {"score": 0.0032848684681050745, "phrase": "pattern_adaptive_ssd_structure"}, {"score": 0.0032176163279340206, "phrase": "access_patterns"}, {"score": 0.0030083825666563898, "phrase": "write_cache"}, {"score": 0.0029620573986902416, "phrase": "flash_translation_layer"}, {"score": 0.0028567126120064546, "phrase": "access_pattern"}, {"score": 0.002684740763324991, "phrase": "write_patterns"}, {"score": 0.0026570998719084153, "phrase": "greater_parallelism"}, {"score": 0.00257586859792573, "phrase": "large_block_management"}, {"score": 0.002471400498582011, "phrase": "proposed_ssd._simulation_experiments"}, {"score": 0.002420762293555924, "phrase": "proposed_pattern_adaptive_structure"}, {"score": 0.002358917661465133, "phrase": "extra_flash_block"}, {"score": 0.002137947680862631, "phrase": "basic_ftl"}, {"score": 0.0021049977753042253, "phrase": "existing_parallel_ssd_structures"}], "paper_keywords": ["Disk access pattern", " flash translation layer", " NAND flash memory", " secondary storage", " solid state disk"], "paper_abstract": "To enhance performance of flash memory-based solid state disk (SSD), large logically chained blocks can be assembled by binding adjacent flash blocks across several flash memory chips. However, flash memory does not allow in-place overwriting and thus the operations that merge writes on these blocks suffer a visible decrease in performance. Furthermore, when small random writes are spread over the disk address space, performance tends to be degraded significantly. We thus present a technique to manage random writes efficiently to achieve stable SSD performance. In this paper, we propose a pattern adaptive SSD structure, which classifies access patterns as either random or sequential. The structure primarily consists of a write cache and a flash translation layer that separates groups of writes by access pattern (S-FTL). Separately managing the two types of write patterns enables greater parallelism and reduces the cost of large block management, thus enhancing the performance of the proposed SSD. Simulation experiments show that the proposed pattern adaptive structure can provide 39 percent decrease in extra flash block erase overhead on the average, and write performance can be improved by around 60 percent, compared with a basic FTL applied to existing parallel SSD structures.", "paper_title": "A Pattern Adaptive NAND Flash Memory Storage Structure", "paper_id": "WOS:000297587000011"}