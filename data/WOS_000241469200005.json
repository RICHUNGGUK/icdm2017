{"auto_keywords": [{"score": 0.027626369235161246, "phrase": "flux"}, {"score": 0.00481495049065317, "phrase": "xpath_queries"}, {"score": 0.0047310525657970615, "phrase": "range_predicates"}, {"score": 0.004648609688625397, "phrase": "range_queries"}, {"score": 0.004371160978838441, "phrase": "constrained_region"}, {"score": 0.004257360656055417, "phrase": "data_space"}, {"score": 0.004146510711518748, "phrase": "xml_range_query"}, {"score": 0.0039333604469462356, "phrase": "numerical_or_textual_contents"}, {"score": 0.0033277936960179892, "phrase": "xml_query_processing_engine"}, {"score": 0.003212663446866794, "phrase": "effective_indexing"}, {"score": 0.0031565959573536194, "phrase": "summarization_techniques"}, {"score": 0.0030206579994328975, "phrase": "xml_document"}, {"score": 0.002693919110230191, "phrase": "dynamic_summarization"}, {"score": 0.002646880721119838, "phrase": "indexing_method"}, {"score": 0.0025106241866273897, "phrase": "bloom_filters"}, {"score": 0.002238930800075706, "phrase": "extensive_experimental_evaluations"}, {"score": 0.0021049977753042253, "phrase": "proposed_technique"}], "paper_keywords": [""], "paper_abstract": "Range queries seek the objects residing in a constrained region of the data space. An XML range query may impose predicates on the numerical or textual contents of the elements and/or their respective path structures. In order to handle content and structure range queries efficiently, an XML query processing engine needs to incorporate effective indexing and summarization techniques to efficiently partition the XML document and locate the results. In this paper, we describe a dynamic summarization and indexing method, FLUX, based on Bloom filters and B+-trees to tackle these problems. We present the results of extensive experimental evaluations which indicate the efficiency of the proposed technique.", "paper_title": "FLUX: Content and structure matching of XPath queries with range predicates", "paper_id": "WOS:000241469200005"}