{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "decentralized_service_discovery_approach"}, {"score": 0.0046797114400479135, "phrase": "peer_networks"}, {"score": 0.004635477242873163, "phrase": "service-oriented_computing"}, {"score": 0.004399525320473839, "phrase": "distributed_applications"}, {"score": 0.004337276328199398, "phrase": "critical_issue"}, {"score": 0.0042766169684815385, "phrase": "soc"}, {"score": 0.003944112858235306, "phrase": "traditional_service_discovery_methods"}, {"score": 0.0037432199549135826, "phrase": "performance_bottleneck"}, {"score": 0.0036379729015583975, "phrase": "large_scalable_service_networks"}, {"score": 0.0033875770020590796, "phrase": "peer-to-peer-based_decentralized_service_discovery_approach"}, {"score": 0.0031845067058084583, "phrase": "popular_chord"}, {"score": 0.0030656196752517836, "phrase": "decentralized_manner"}, {"score": 0.003036595866130997, "phrase": "data_availability"}, {"score": 0.0029511579080222137, "phrase": "published_descriptions"}, {"score": 0.002923214590192792, "phrase": "functionally_equivalent_services"}, {"score": 0.002895535087931938, "phrase": "different_successor_nodes"}, {"score": 0.0028274743316389437, "phrase": "virtual_segments"}, {"score": 0.0027218799769229596, "phrase": "service_publication_approach"}, {"score": 0.0026705669656375197, "phrase": "qos-aware_service_discovery"}, {"score": 0.0026077803487003, "phrase": "service_discovery"}, {"score": 0.0024984517279573906, "phrase": "chord_routing_protocol"}, {"score": 0.0024397017438101726, "phrase": "efficient_discovery"}, {"score": 0.002416589459425828, "phrase": "multiple_services"}, {"score": 0.002382329940096419, "phrase": "single_query"}, {"score": 0.002337403139264533, "phrase": "late_negotiation"}, {"score": 0.0023152577218214804, "phrase": "service_level_agreements"}, {"score": 0.0022608057001451414, "phrase": "service_consumers"}, {"score": 0.0022393843660697484, "phrase": "multiple_candidate_service_providers"}, {"score": 0.0022076314894741394, "phrase": "experimental_evaluation"}, {"score": 0.0021557052355026048, "phrase": "higher_data_availability"}, {"score": 0.0021251363422701446, "phrase": "efficient_query"}, {"score": 0.0021049977753042253, "phrase": "reasonable_overhead"}], "paper_keywords": ["Web-based services", " search process"], "paper_abstract": "Service-Oriented Computing (SOC) is emerging as a paradigm for developing distributed applications. A critical issue of utilizing SOC is to have a scalable, reliable, and robust service discovery mechanism. However, traditional service discovery methods using centralized registries can easily suffer from problems such as performance bottleneck and vulnerability to failures in large scalable service networks, thus functioning abnormally. To address these problems, this paper proposes a peer-to-peer-based decentralized service discovery approach named Chord4S. Chord4S utilizes the data distribution and lookup capabilities of the popular Chord to distribute and discover services in a decentralized manner. Data availability is further improved by distributing published descriptions of functionally equivalent services to different successor nodes that are organized into virtual segments in the Chord4S circle. Based on the service publication approach, Chord4S supports QoS-aware service discovery. Chord4S also supports service discovery with wildcard(s). In addition, the Chord routing protocol is extended to support efficient discovery of multiple services with a single query. This enables late negotiation of Service Level Agreements (SLAs) between service consumers and multiple candidate service providers. The experimental evaluation shows that Chord4S achieves higher data availability and provides efficient query with reasonable overhead.", "paper_title": "A Decentralized Service Discovery Approach on Peer-to-Peer Networks", "paper_id": "WOS:000320994800007"}