{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "disjoint_paths"}, {"score": 0.004758053266234474, "phrase": "p_systems"}, {"score": 0.004378078970574258, "phrase": "node-disjoint_paths"}, {"score": 0.004275173711009189, "phrase": "source_node"}, {"score": 0.0041995784967999985, "phrase": "target_node"}, {"score": 0.0038640303886081444, "phrase": "classical_distributed_depth-first_search"}, {"score": 0.002852377396804936, "phrase": "bfs"}, {"score": 0.0028185852354729026, "phrase": "based_algorithms"}, {"score": 0.0026714888416197384, "phrase": "empirically"}, {"score": 0.002608583927848071, "phrase": "large_set"}, {"score": 0.0025776913268808124, "phrase": "randomly_generated_digraphs"}, {"score": 0.002472412920623605, "phrase": "dinneen"}, {"score": 0.002414191082427217, "phrase": "'s_edge-disjoint_algorithm"}, {"score": 0.0022077827041801193, "phrase": "p_system"}, {"score": 0.0021946656099592608, "phrase": "modelling_exercise"}, {"score": 0.0021049977753042253, "phrase": "distributed_implementation"}], "paper_keywords": ["Breadth-first search", " Cidon's depth-first search", " Depth-first search", " Digraphs", " Distributed", " Edge-disjoint paths", " Edmonds-Karp", " Ford-Fulkerson", " Message-based", " Node-disjoint paths", " Network flow", " P systems", " Synchronous"], "paper_abstract": "We propose four fast synchronous distributed message-based algorithms, to identify maximum cardinality sets of edge- and node-disjoint paths, between a source node and a target node in a digraph. Previously, Dinneen et al. presented two algorithms, based on the classical distributed depth-first search (DFS), which run in O(mf) steps, where m is the number of edges and f is the number of disjoint paths. Combining Cidon's distributed DFS and our new result, Theorem 3, we propose two improved DFS-based algorithms, which run in O(nf) steps, where n is the number of nodes. We also present improved versions of our two breadth-first search (BFS) based algorithms, with the same complexity upperbound, O(nf). Empirically, for a large set of randomly generated digraphs, our DFS-based edge-disjoint algorithm is 39 % faster than Dinneen et al.'s edge-disjoint algorithm and our BFS-based edge-disjoint algorithm is 80 % faster. All these improved algorithms have been inspired and guided by a P system modelling exercise, but are suitable for any distributed implementation.", "paper_title": "New solutions for disjoint paths in P systems", "paper_id": "WOS:000312130900008"}