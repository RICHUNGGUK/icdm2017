{"auto_keywords": [{"score": 0.036493951257548334, "phrase": "laplacian"}, {"score": 0.00481495049065317, "phrase": "commute_times"}, {"score": 0.004747997855358171, "phrase": "random_walks"}, {"score": 0.004395984840790689, "phrase": "commute_time"}, {"score": 0.0042446888127531945, "phrase": "graph_matching"}, {"score": 0.004098578483988551, "phrase": "lazy_random_walk"}, {"score": 0.0033447157263095223, "phrase": "random_walk"}, {"score": 0.0029688173975648173, "phrase": "laplacian_spectrum"}, {"score": 0.0029069972482610403, "phrase": "discrete_green's_function"}, {"score": 0.002729133029776093, "phrase": "minimum_spanning_tree"}, {"score": 0.002422249273477746, "phrase": "structural_variations"}, {"score": 0.0022739766507258105, "phrase": "tree-matching_method"}, {"score": 0.002226592967032469, "phrase": "spanning_trees"}, {"score": 0.0021049977753042253, "phrase": "synthetic_and_real-world_image_data"}], "paper_keywords": [""], "paper_abstract": "This paper exploits the properties of the commute time for the purposes of graph matching. Our starting point is the lazy random walk on the graph, which is determined by the heat-kernel of the graph and can be computed from the spectrum of the graph Laplacian. We characterise the random walk using the IN commute time between nodes, and show how this quantity may be computed from the Laplacian spectrum using the discrete Green's function. We use the commute-time to locate the minimum spanning tree of the graph. The spanning trees located using commute time prove to be stable to structural variations. We match the graphs by applying a tree-matching method to the spanning trees. We experiment with the method on synthetic and real-world image data, where it proves to to be effective.", "paper_title": "Spanning trees from the commute times of random walks on graphs", "paper_id": "WOS:000241553600034"}