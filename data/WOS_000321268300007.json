{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "bpmn"}, {"score": 0.00481495049065317, "phrase": "service_compatibility"}, {"score": 0.004762550320451225, "phrase": "service_composition"}, {"score": 0.004685012337701536, "phrase": "recent_field"}, {"score": 0.004508942069742167, "phrase": "different_approaches"}, {"score": 0.004363277689798392, "phrase": "flexible_distributed_heterogeneous_interoperation"}, {"score": 0.003997343989408636, "phrase": "higher-level_models"}, {"score": 0.003868142906199082, "phrase": "low_level"}, {"score": 0.003743102131902864, "phrase": "service_interoperability"}, {"score": 0.0036419834462626125, "phrase": "significant_modelling_approach"}, {"score": 0.003602302241898501, "phrase": "multiple_abstraction_levels"}, {"score": 0.0035435867326548665, "phrase": "existing_formal_approaches"}, {"score": 0.0034102660898135155, "phrase": "global_space"}, {"score": 0.003373101013123386, "phrase": "joint_executions"}, {"score": 0.0033363396054797044, "phrase": "interacting_services"}, {"score": 0.0032107911131811057, "phrase": "locally_checkable_consistency_rules"}, {"score": 0.0031411751440831165, "phrase": "behavioural_consistency"}, {"score": 0.0031069334778456633, "phrase": "inheritance_hierarchies"}, {"score": 0.0030562674358159945, "phrase": "model-driven_approach"}, {"score": 0.0030064251340251196, "phrase": "consistent_service_orchestrations"}, {"score": 0.0029412271277166873, "phrase": "service_execution"}, {"score": 0.0028305047329728254, "phrase": "high-level_model"}, {"score": 0.0027691111795848156, "phrase": "extended_petri_net_notation"}, {"score": 0.002664850766529523, "phrase": "service_consistency"}, {"score": 0.002550481822137976, "phrase": "local_model_properties"}, {"score": 0.0024815011359381692, "phrase": "multi-step_design_approach"}, {"score": 0.0022482261385133617, "phrase": "presented_results"}, {"score": 0.0021516991383785985, "phrase": "modelling_processes"}], "paper_keywords": ["Service compatibility", " Petri net", " BPMN", " Business process modelling", " Behavior diagrams", " Consistency rules"], "paper_abstract": "Service composition is a recent field that has seen a flurry of different approaches proposed towards the goal of flexible distributed heterogeneous interoperation of software systems, usually based on the expectation that such systems must be derived from higher-level models rather than be coded at low level. In practice, achieving service interoperability nonetheless continues to require significant modelling approach at multiple abstraction levels, and existing formal approaches typically require the analysis of the global space of joint executions of interacting services. Based on our earlier work on providing locally checkable consistency rules for guaranteeing the behavioural consistency of inheritance hierarchies, a model-driven approach for creating consistent service orchestrations is proposed. Service execution and interaction is represented with a high-level model in terms of extended Petri net notation; formal criteria are provided for service consistency that can be checked in terms of local model properties, and give a multi-step design approach for developing services that are guaranteed to be interoperable. Finally, it is outlined how the presented results can be carried over and applied to modelling processes using the Business Process Modelling Notation (BPMN).", "paper_title": "Design for service compatibility", "paper_id": "WOS:000321268300007"}