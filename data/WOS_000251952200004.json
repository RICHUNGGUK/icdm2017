{"auto_keywords": [{"score": 0.042234660233635535, "phrase": "cavlc_decoder"}, {"score": 0.028964411436954378, "phrase": "power_consumption"}, {"score": 0.004814977665536469, "phrase": "vlsi"}, {"score": 0.004589124394375718, "phrase": "efficient_algorithm"}, {"score": 0.004458722048888919, "phrase": "decoding_efficiency"}, {"score": 0.004394910907549057, "phrase": "context-based_adaptive_variable_length_coding"}, {"score": 0.004352876088312741, "phrase": "cavlc"}, {"score": 0.004208881856146758, "phrase": "data_dependency"}, {"score": 0.003992129945230457, "phrase": "large_computation_time"}, {"score": 0.0038973170902076707, "phrase": "overall_decoder_system_performance"}, {"score": 0.0037683358267785435, "phrase": "critical_path"}, {"score": 0.0035399770257915466, "phrase": "adaptive_detection"}, {"score": 0.003422781254306241, "phrase": "shortened_critical_path"}, {"score": 0.0033737457695128203, "phrase": "cavlc_architecture"}, {"score": 0.0031540120386134058, "phrase": "pipeline_structure"}, {"score": 0.0030790429005600898, "phrase": "overall_performance"}, {"score": 0.002977061391551631, "phrase": "hardware_implementation"}, {"score": 0.0029343925814926787, "phrase": "low_power"}, {"score": 0.0028784478769295204, "phrase": "single_output_buffer"}, {"score": 0.002677964894127131, "phrase": "decoding_performance"}, {"score": 0.0026523079380037706, "phrase": "experimental_results"}, {"score": 0.002601727192945944, "phrase": "proposed_architecture"}, {"score": 0.0023743009016047424, "phrase": "original_decoding_procedure"}, {"score": 0.0022956075241520064, "phrase": "maximum_frequency"}, {"score": 0.002166711569953301, "phrase": "real-time_requirement"}], "paper_keywords": ["context-based adaptive variable length coding (CAVLC)", " H.264/AVC", " variable length coding"], "paper_abstract": "In this paper, an efficient algorithm is proposed to improve the decoding efficiency of the context-based adaptive variable length coding (CAVLC) procedure. Due to the data dependency among symbols in the decoding How, the CAVLC decoder requires large computation time, which dominates the overall decoder system performance. To expedite its decoding speed, the critical path in the CAVLC decoder is first analyzed and then reduced by forwarding the adaptive detection for succeeding symbols. With a shortened critical path, the CAVLC architecture is further divided into two segments, which can be easily implemented by a pipeline structure. Consequently, the overall performance is effectively improved. In the hardware implementation, a low power combined LUT and single output buffer have been adopted to reduce the area as well as power consumption without affecting the decoding performance. Experimental results show that the proposed architecture surpassing other recent designs can approximately reduce power consumption by 40% and achieve three times decoding speed in comparison to the original decoding procedure suggested in the H.264 standard. The maximum frequency can be larger than 210 MHz, which can easily support the real-time requirement for resolutions higher than the HD1080 format.", "paper_title": "A highly efficient VLSI architecture for H.264/AVC CAVLC decoder", "paper_id": "WOS:000251952200004"}