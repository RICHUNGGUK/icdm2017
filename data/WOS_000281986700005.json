{"auto_keywords": [{"score": 0.04141464122866945, "phrase": "tcp_goodput"}, {"score": 0.015570693799842031, "phrase": "tcp"}, {"score": 0.014082358865279837, "phrase": "tcp_congestion_window"}, {"score": 0.013749298469488028, "phrase": "fixed-delay_burst_assembler"}, {"score": 0.009501823180821739, "phrase": "congestion_window_size"}, {"score": 0.00481495049065317, "phrase": "window-based_adaptive_burst_assembly"}, {"score": 0.004700027722284931, "phrase": "obs_networks"}, {"score": 0.004654826737377134, "phrase": "burst_assembly"}, {"score": 0.004543708337879809, "phrase": "key_factors"}, {"score": 0.004478308876320956, "phrase": "tcp_performance"}, {"score": 0.004435230698216773, "phrase": "optical_burst"}, {"score": 0.004046020290832207, "phrase": "end-to-end_delay"}, {"score": 0.0036201167891046046, "phrase": "large_number"}, {"score": 0.0035852640843794252, "phrase": "small-sized_bursts"}, {"score": 0.0034325187732054093, "phrase": "correlation_gain"}, {"score": 0.00317681090697906, "phrase": "adaptive_burst_assembly_algorithms"}, {"score": 0.0031159081999910694, "phrase": "congestion_window_sizes"}, {"score": 0.002855934865505357, "phrase": "burst_assembly_algorithm"}, {"score": 0.002655894070657161, "phrase": "individual_flows"}, {"score": 0.002592369213499121, "phrase": "timer-based_assembly"}, {"score": 0.002530359917257626, "phrase": "timer-based_assembler"}, {"score": 0.00249386680748172, "phrase": "optimum_assembly_period"}, {"score": 0.0023990982005125763, "phrase": "even_when_estimated_values"}, {"score": 0.0022967713922705, "phrase": "passive_measurements"}, {"score": 0.002241816883550397, "phrase": "tcp_goodput_improvements"}, {"score": 0.002135812692862058, "phrase": "exact_values"}, {"score": 0.0021049977753042253, "phrase": "congestion_window"}], "paper_keywords": ["Optical burst switching", " Adaptive burst assembly", " TCP over OBS"], "paper_abstract": "Burst assembly is one of the key factors affecting the TCP performance in optical burst switching (OBS) networks. When the TCP congestion window is small, the fixed-delay burst assembler waits unnecessarily long, which increases the end-to-end delay and thus decreases the TCP goodput. On the other hand, when the TCP congestion window becomes larger, the fixed-delay burst assembler may unnecessarily generate a large number of small-sized bursts, which increases the overhead and decreases the correlation gain, resulting in a reduction in the TCP goodput. In this paper, we propose adaptive burst assembly algorithms that use the congestion window sizes of TCP flows. Using simulations, we show that the usage of the congestion window size in the burst assembly algorithm significantly improves the TCP goodput (by up to 38.4% on the average and by up to 173.89% for individual flows) compared with the timer-based assembly, even when the timer-based assembler uses the optimum assembly period. It is shown through simulations that even when estimated values of the congestion window size, that are obtained via passive measurements, are used, TCP goodput improvements are still close to the results obtained by using exact values of the congestion window.", "paper_title": "Congestion window-based adaptive burst assembly for TCP traffic in OBS networks", "paper_id": "WOS:000281986700005"}