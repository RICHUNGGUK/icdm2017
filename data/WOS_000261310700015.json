{"auto_keywords": [{"score": 0.042158331965617524, "phrase": "service_sharing"}, {"score": 0.01062342049553075, "phrase": "optimal_algorithm"}, {"score": 0.01049771081723231, "phrase": "base_case"}, {"score": 0.008710057728821911, "phrase": "existing_service_composition_requests"}, {"score": 0.008403889126828396, "phrase": "new_request"}, {"score": 0.00481495049065317, "phrase": "video_multicast"}, {"score": 0.0047386923107107645, "phrase": "general_context"}, {"score": 0.004645057834614705, "phrase": "intermediate_service_results"}, {"score": 0.004608121749000898, "phrase": "different_processes"}, {"score": 0.004375061788023814, "phrase": "transactional_and_side_effects"}, {"score": 0.004271490815763164, "phrase": "streaming_video_multicast_environment"}, {"score": 0.004220624516321415, "phrase": "large_number"}, {"score": 0.003927848423072668, "phrase": "large_potential"}, {"score": 0.0038655854071187115, "phrase": "processing_cost"}, {"score": 0.003669941438286456, "phrase": "service_invocation_orders"}, {"score": 0.003640730820018083, "phrase": "multiple_service_composition_requests"}, {"score": 0.0035973486787314883, "phrase": "streaming_video_multicast"}, {"score": 0.0033077782268072214, "phrase": "np-complete"}, {"score": 0.0031152526492532785, "phrase": "general_case"}, {"score": 0.002818909613625567, "phrase": "building_block"}, {"score": 0.002530359917257626, "phrase": "local_greedy_algorithm"}, {"score": 0.0022895278869126848, "phrase": "global_greedy_algorithm"}, {"score": 0.002199725773957207, "phrase": "simulation_results"}, {"score": 0.0021647968783414504, "phrase": "greedy_algorithms"}, {"score": 0.0021049977753042253, "phrase": "naive_algorithm"}], "paper_keywords": ["Greedy algorithm", " NP-hard", " service cost optimization", " service invocation order", " service-oriented architecture"], "paper_abstract": "In a general context, the sharing of intermediate service results among different processes is seldom feasible because parameters are often different and there may be transactional and side effects. However, in a streaming video multicast environment, a large number of users often request various similar processing on the same stream. Therefore, service sharing is feasible, with a large potential of savings in processing cost. In this paper, we study the problem of determining the service invocation orders for multiple service composition requests in a streaming video multicast with the aim of maximizing the service sharing. We first formally define the problem. After proving the problem is NP-Complete, we develop an optimal algorithm for the base case of two requests. Then for the general case, we develop two heuristic algorithms, namely, a global greedy algorithm and a local greedy algorithm using the optimal algorithm for the base case as the building block. The global greed), algorithm is designed for a system where the existing service composition requests can be recomposed with the arrival of a new request. The local greedy algorithm can be used in a system where the existing service composition requests do not change their service composition solutions with the arrival of a new request. We prove that the global greedy algorithm is a 2-approximation algorithm in terms of maximizing service sharing. Simulation results show that the greedy algorithms can save more service costs compared with a naive algorithm, and are effective compared with the cost lower bound.", "paper_title": "Service Sharing for Streaming Video Multicast", "paper_id": "WOS:000261310700015"}