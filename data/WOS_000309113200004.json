{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "trigger_units"}, {"score": 0.01040440160922442, "phrase": "post-silicon_validation"}, {"score": 0.008534233094711019, "phrase": "trigger_conditions"}, {"score": 0.004627025858440665, "phrase": "debugging"}, {"score": 0.0045357787854931894, "phrase": "on-chip_trigger_units"}, {"score": 0.0033306180744375616, "phrase": "trigger_events"}, {"score": 0.003014576010931602, "phrase": "design_time"}, {"score": 0.0026480044868438875, "phrase": "hardware_implementation"}, {"score": 0.002349228457383314, "phrase": "architectural_features"}, {"score": 0.0021049977753042253, "phrase": "algorithmic_approach"}], "paper_keywords": ["Post-silicon validation and debugging", " trigger conditions", " trigger units"], "paper_abstract": "On-chip trigger units are employed for detecting events of interest during post-silicon validation and debugging. Their implementation constrains the trigger conditions that can be programmed at runtime. It is often the case that some trigger events of interest, which were not accounted for during design time, cannot be detected due to the constraints imposed by the hardware implementation of the trigger units. To address this issue, we present architectural features that can be included into the trigger units and discuss the algorithmic approach for automatically mapping trigger conditions onto the trigger units.", "paper_title": "Mapping Trigger Conditions onto Trigger Units during Post-silicon Validation and Debugging", "paper_id": "WOS:000309113200004"}