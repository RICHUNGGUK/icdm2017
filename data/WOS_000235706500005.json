{"auto_keywords": [{"score": 0.04902194563396072, "phrase": "hierarchical_communicating_real-time_state_machines"}, {"score": 0.00481495049065317, "phrase": "real-time_systems"}, {"score": 0.0041642891310893, "phrase": "distributed_real-time_systems"}, {"score": 0.003601235776892337, "phrase": "modelling_language"}, {"score": 0.003443761052719748, "phrase": "violin"}, {"score": 0.003256526411907174, "phrase": "statecharts_constructs"}, {"score": 0.0031845067058084583, "phrase": "csp-like"}, {"score": 0.0029447150254434842, "phrase": "visual_environment"}, {"score": 0.002815864555488112, "phrase": "seamless_way"}, {"score": 0.0025461386232786356, "phrase": "temporal_validation"}, {"score": 0.0024620842899061614, "phrase": "assertion_checking"}, {"score": 0.0024075916292945715, "phrase": "system_simulation"}, {"score": 0.002354302193867031, "phrase": "code_generation"}, {"score": 0.0022513521528857248, "phrase": "java"}, {"score": 0.002176887956041267, "phrase": "customizable_runtime"}, {"score": 0.0021049977753042253, "phrase": "practical_use"}], "paper_keywords": ["modular modelling", " hierarchical state machines", " real-time constrains", " prototyping", " assertions", " integrated development environment", " Java"], "paper_abstract": "This paper proposes a methodology for the development of distributed real-time systems. The methodology consists of the Hierarchical Communicating Real-Time State Machines (H-CRSM) modelling language, and the VIOLIN toolset. H-CRSM combines Statecharts constructs with CSP-like timed communications. VIOLIN provides a visual environment supporting in a seamless way all the life-cycle development phases of an H-CRSM system. Temporal validation rests on assertion checking during system simulation. Code generation is based on Java and a customizable runtime. The practical use of H-CRSM/VIOLIN is shown by an example.", "paper_title": "Modular design of real-time systems using hierarchical communicating real-time state machines", "paper_id": "WOS:000235706500005"}