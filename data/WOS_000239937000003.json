{"auto_keywords": [{"score": 0.04226255901245674, "phrase": "parallel_reduction_algorithms"}, {"score": 0.00481495049065317, "phrase": "reduction_parallelization"}, {"score": 0.004767826806287385, "phrase": "irregular_and_dynamic_memory_reference_patterns"}, {"score": 0.00462919213721188, "phrase": "low_level_algorithms"}, {"score": 0.004516733575701128, "phrase": "parallel_algorithms"}, {"score": 0.004278807087784626, "phrase": "adaptive_algorithm_selection_framework"}, {"score": 0.004073359218158693, "phrase": "particular_instance"}, {"score": 0.003858697684681798, "phrase": "existing_library"}, {"score": 0.003531474887552889, "phrase": "input_sensitivity"}, {"score": 0.0033950634506367235, "phrase": "corresponding_predictive_performance_models"}, {"score": 0.0031070348334684356, "phrase": "algorithmic_choices"}, {"score": 0.0028857130140890787, "phrase": "restructuring_compiler"}, {"score": 0.0024891269874339553, "phrase": "optimal_performance"}, {"score": 0.002404706573379854, "phrase": "best_algorithms"}, {"score": 0.0023811153883132536, "phrase": "dynamic_phases"}, {"score": 0.002346160830406661, "phrase": "running_program"}, {"score": 0.0023003498123420237, "phrase": "performance_improvements"}, {"score": 0.0021682027434117095, "phrase": "underlying_machine_architectures"}, {"score": 0.002125859121671525, "phrase": "ibm_regatta"}, {"score": 0.002105041662409387, "phrase": "hp"}], "paper_keywords": ["runtime parallelization", " adaptive optimization", " reduction parallelization", " compiler optimization"], "paper_abstract": "Irregular and dynamic memory reference patterns can cause performance variations for low level algorithms in general and for parallel algorithms in particular. In this paper, we present an adaptive algorithm selection framework which can collect and interpret the characteristics of a particular instance of parallel reduction algorithms and select the best performing one from an existing library. The framework consists of the following components: 1) an offline systematic process for characterizing the input sensitivity of parallel reduction algorithms and a method for building corresponding predictive performance models, 2) an online input characterization and algorithm selection module, and 3) a small library of parallel reduction algorithms, which represent the algorithmic choices made available at runtime. We also present one possible integration of this framework in a restructuring compiler. We validate our design experimentally and show that our framework 1) selects the most appropriate algorithms in 85 percent of the cases studied, 2) overall, delivers 98 percent of the optimal performance, 3) adaptively selects the best algorithms for dynamic phases of a running program (resulting in performance improvements otherwise not possible), and 4) adapts to the underlying machine architectures (evaluated on IBM Regatta and HP V-Class systems).", "paper_title": "An adaptive algorithm selection framework for reduction parallelization", "paper_id": "WOS:000239937000003"}