{"auto_keywords": [{"score": 0.04900031007413473, "phrase": "software_product_lines"}, {"score": 0.00481495049065317, "phrase": "software_inspection"}, {"score": 0.004760394308239882, "phrase": "feature_specification"}, {"score": 0.0041517954514423625, "phrase": "also_their_constraints"}, {"score": 0.003989351600022163, "phrase": "feature_specification_task"}, {"score": 0.003746779951069909, "phrase": "natural_language"}, {"score": 0.0029148831519944358, "phrase": "inspection_approach"}, {"score": 0.0028328599839713866, "phrase": "spl._data_from"}, {"score": 0.0028006988338192375, "phrase": "spl_reengineering_project"}, {"score": 0.0026152363154073707, "phrase": "correction_activity"}, {"score": 0.002527150892127982, "phrase": "pareto's_principle"}, {"score": 0.0024281181691350085, "phrase": "higher_non-conformity_occurrences"}, {"score": 0.002359759876402679, "phrase": "poisson_regression_analysis"}, {"score": 0.0023196699954340437, "phrase": "sub-domain_risk_information"}, {"score": 0.0022672718785099666, "phrase": "good_indicator"}, {"score": 0.002178400923036365, "phrase": "inspection_activity"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software quality control", " Software inspection", " Software product lines", " Empirical study"], "paper_abstract": "In software product lines (SPL), scoping is a phase responsible for capturing, specifying and modeling features, and also their constraints, interactions and variations. The feature specification task, performed in this phase, is usually based on natural language, which may lead to lack of clarity, non-conformities and defects. Consequently, scoping analysts may introduce ambiguity, inconsistency, omissions and non-conformities. In this sense, this paper aims at gathering evidence about the effects of applying an inspection approach to feature specification for SPL. Data from a SPL reengineering project were analyzed in this work and the analysis indicated that the correction activity demanded more effort. Also, Pareto's principle showed that incompleteness and ambiguity reported higher non-conformity occurrences. Finally, the Poisson regression analysis showed that sub-domain risk information can be a good indicator for prioritization of sub-domains in the inspection activity. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Evidence of software inspection on feature specification for software product lines", "paper_id": "WOS:000317322400002"}