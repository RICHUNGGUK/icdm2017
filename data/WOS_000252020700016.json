{"auto_keywords": [{"score": 0.04443809788762847, "phrase": "prefix_graphs"}, {"score": 0.010612387000973441, "phrase": "parallel_prefix_adders"}, {"score": 0.0046739596755881185, "phrase": "parallel_prefix_adder_synthesis"}, {"score": 0.004591345494188032, "phrase": "area_minimization"}, {"score": 0.004174677062711731, "phrase": "global_structures"}, {"score": 0.004076533120753605, "phrase": "technology-independent_level"}, {"score": 0.003980687255880282, "phrase": "two-folded_algorithm"}, {"score": 0.0037507793596022326, "phrase": "first_process"}, {"score": 0.003706410380455668, "phrase": "dynamic_programming_based_area_minimization"}, {"score": 0.003513133457324989, "phrase": "specific_subset"}, {"score": 0.0033898953358387075, "phrase": "exact_minimum_solution"}, {"score": 0.003290494847464381, "phrase": "dynamic_programming"}, {"score": 0.002852356597632014, "phrase": "minimum_solutions"}, {"score": 0.002801849371896573, "phrase": "practical_bit_width"}, {"score": 0.0027522340188241446, "phrase": "second_process"}, {"score": 0.002719644855867468, "phrase": "area_reduction"}, {"score": 0.002532035301903554, "phrase": "imposed_restrictions"}, {"score": 0.002399850604120431, "phrase": "dpam"}, {"score": 0.002329412930430366, "phrase": "timing_constraints"}, {"score": 0.0023018188296933923, "phrase": "experimental_results"}, {"score": 0.0022610379771517966, "phrase": "smaller_area"}, {"score": 0.002181626277903721, "phrase": "existing_methods"}, {"score": 0.002142970278347126, "phrase": "prefix_graph_level"}, {"score": 0.0021049977753042253, "phrase": "gate_level"}], "paper_keywords": ["parallel arithmetic synthesis", " dynamic programming"], "paper_abstract": "This paper addresses parallel prefix adder synthesis which targets area minimization under given bitwise timing constraints. This problem is treated as a problem to synthesize prefix graphs which represent global structures of parallel prefix adders at technology-independent level, and a two-folded algorithm to minimize area of prefix graphs is proposed. The first process is dynamic programming based area minimization (DPAM), which focuses on a specific subset of prefix graphs and finds an exact minimum solution for the subset by dynamic programming. The subset is defined by imposing some restrictions on structures of prefix graphs. By utilizing these restrictions, DPAM can find the minimum solutions efficiently for practical bit width. The second process is area reduction with re-structuring (ARRS), which removes the imposed restrictions on structures, and restructures the result of DPAM for further area reduction while satisfying timing constraints. Experimental results show that smaller area can be achieved compared to existing methods both at prefix graph level and at gate level.", "paper_title": "Timing-constrained area minimization algorithm for parallel prefix adders", "paper_id": "WOS:000252020700016"}