{"auto_keywords": [{"score": 0.04336705121455173, "phrase": "attacked_steps"}, {"score": 0.004579780586951551, "phrase": "preimage_resistance"}, {"score": 0.004466519142879166, "phrase": "tiger_hash_function"}, {"score": 0.004248294537944227, "phrase": "maximum_number"}, {"score": 0.004007083686875716, "phrase": "previous_preimage_attacks"}, {"score": 0.003940715948092406, "phrase": "tiger"}, {"score": 0.0038112201846057445, "phrase": "full_version"}, {"score": 0.003334309053314909, "phrase": "main_contribution"}, {"score": 0.0032517484445814334, "phrase": "pseudo-preimage_attack"}, {"score": 0.0031712256091350316, "phrase": "compression_function"}, {"score": 0.0028926147550022607, "phrase": "meet-in-the-middle_approach"}, {"score": 0.002682917193736698, "phrase": "preimage_attack"}, {"score": 0.002447101794397243, "phrase": "memory_requirement"}, {"score": 0.0023079225317714815, "phrase": "tiger_digest"}, {"score": 0.0021049977753042253, "phrase": "exhaustive_search"}], "paper_keywords": ["Tiger", " hash function", " meet-in-the-middle", " preimage attack", " independent chunks"], "paper_abstract": "This paper evaluates the preimage resistance of the Tiger hash function. To our best knowledge, the maximum number of the attacked steps is 17 among previous preimage attacks on Tiger, where the full version has 24 steps. Our attack will extend the number of the attacked steps to 23. The main contribution is a pseudo-preimage attack on the compression function up to 23 steps with a complexity of 2181 following the meet-in-the-middle approach. This attack can be converted to a preimage attack on 23-step Tiger hash function with a complexity of 2(187.5). The memory requirement of our attack is 222 words. A Tiger digest has 192 bits. Therefore, our attacks are faster than the exhaustive search.", "paper_title": "Preimage Attack on 23-Step Tiger", "paper_id": "WOS:000293818300013"}