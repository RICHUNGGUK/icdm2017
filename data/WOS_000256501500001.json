{"auto_keywords": [{"score": 0.04917847167439712, "phrase": "paramodel"}, {"score": 0.014175628901062567, "phrase": "parallel_applications"}, {"score": 0.009361072725322014, "phrase": "code_skeletons"}, {"score": 0.00481495049065317, "phrase": "programming_parallel_applications"}, {"score": 0.00459165923324494, "phrase": "extensible_system"}, {"score": 0.004136044939878838, "phrase": "unified_user_interface"}, {"score": 0.003906804492585634, "phrase": "different_code_skeletons"}, {"score": 0.0037969755088553326, "phrase": "specific_runtime_environment"}, {"score": 0.0035864603175592854, "phrase": "construction_blocks"}, {"score": 0.0030802351224657673, "phrase": "different_parallel_environments"}, {"score": 0.0022076314894741394, "phrase": "high_level_design"}, {"score": 0.0021049977753042253, "phrase": "visually_constructed_graphical_models"}], "paper_keywords": ["program parallel application", " visual modeling", " design pattern", " architectural skeleton"], "paper_abstract": "ParaModel is an extensible system for simplifying the development of parallel applications, by providing a unified user interface for modeling visually while generating different code skeletons according to specific runtime environment automatically. A set of construction blocks and rules is designed to describe parallel applications in form of graph, and parsers for different parallel environments are implemented to translate graph to source code skeletons. ParaModel is implemented basing on Eclipse and compatible with its plug-in architecture. With the help of ParaModel, developers can focus on high level design and obtain code skeletons from visually constructed graphical models.", "paper_title": "ParaModel: A visual modeling and code skeleton generation system for programming parallel applications", "paper_id": "WOS:000256501500001"}