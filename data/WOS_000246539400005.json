{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computational_grids"}, {"score": 0.0046238380150870435, "phrase": "desktop_machines"}, {"score": 0.0039642263797621344, "phrase": "java"}, {"score": 0.00386876598761639, "phrase": "java_virtual_machines"}, {"score": 0.003567455727660992, "phrase": "shared_jvms"}, {"score": 0.003107935254560724, "phrase": "permanent_desktop_grid"}, {"score": 0.0029126002350975634, "phrase": "computation_record"}, {"score": 0.0028195727965553367, "phrase": "nqueens_problem"}, {"score": 0.002599763359352916, "phrase": "desktop_grid"}, {"score": 0.0025578967205807843, "phrase": "five_highly_heterogeneous_clusters"}, {"score": 0.00233936726307301, "phrase": "thousand_cpu_grid"}, {"score": 0.002264607102799332, "phrase": "nqueens_and"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["grid", " unstructured Peer-to-Peer", " communicating application"], "paper_abstract": "This paper presents a Peer-to-Peer (P2P) infrastructure that supports a large scale grid. The P2P infrastructure is implemented in Java and federates Java Virtual Machines (JVMs) for computation. The management of shared JVMs is decentralized, self-organized, and configurable. The P2P infrastructure was deployed as a permanent desktop grid, with which we have achieved a computation record by solving the NQueens problem for 25 queens. Thereafter, we have mixed this desktop grid with five highly heterogeneous clusters from the Grid'5000 platform. We analyze the behavior of this thousand CPU grid with two communicating applications: NQueens and Flow-Shop. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Peer-to-peer for computational grids: mixing clusters and desktop machines", "paper_id": "WOS:000246539400005"}