{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "radial_basis_neural_networks"}, {"score": 0.004671156704912419, "phrase": "training_data"}, {"score": 0.004429727701202369, "phrase": "input_space"}, {"score": 0.004297388539539564, "phrase": "non-local_methods"}, {"score": 0.004200724305692705, "phrase": "neural_networks"}, {"score": 0.0038062581748678245, "phrase": "local_methods"}, {"score": 0.003501452436803395, "phrase": "best_examples"}, {"score": 0.0034226302212225206, "phrase": "test_pattern"}, {"score": 0.0030311679447397725, "phrase": "local_and_nonlocal_methods"}, {"score": 0.0029182434479165884, "phrase": "radial_basis_neural_network"}, {"score": 0.002830931833230673, "phrase": "learning_algorithm"}, {"score": 0.002643888053328987, "phrase": "training_patterns"}, {"score": 0.0024504843466435487, "phrase": "rbnn_initialization_algorithm"}, {"score": 0.0023412849215629986, "phrase": "deterministic_way"}, {"score": 0.0022711961447468114, "phrase": "initial_condition_influence"}, {"score": 0.0021865218861454256, "phrase": "new_method"}], "paper_keywords": ["lazy learning", " local learning", " radial basis neural networks", " pattern selection"], "paper_abstract": "Usually, training data are not evenly distributed in the input space. This makes non-local methods, like Neural Networks, not very accurate in those cases. On the other hand, local methods have the problem of how to know which are the best examples for each test pattern. In this work, we present a way of performing a trade off between local and nonlocal methods. On one hand a Radial Basis Neural Network is used like learning algorithm, on the other hand a selection of the training patterns is used for each query. Moreover, the RBNN initialization algorithm has been modified in a deterministic way to eliminate any initial condition influence. Finally, the new method has been validated in two time series domains, an artificial and a real world one.", "paper_title": "Lazy training of radial basis neural networks", "paper_id": "WOS:000241472100021"}