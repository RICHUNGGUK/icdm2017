{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "big-step_modelling_languages"}, {"score": 0.04631644833296801, "phrase": "requirements_engineer"}, {"score": 0.03136341447784251, "phrase": "bsml_semantics"}, {"score": 0.0046781613377273774, "phrase": "model-driven_methodologies"}, {"score": 0.004567129988306349, "phrase": "modelling_languages"}, {"score": 0.004501774379030109, "phrase": "major_question"}, {"score": 0.004050116768809519, "phrase": "semantic_point"}, {"score": 0.003750260412839128, "phrase": "popular_behavioural_modelling_languages"}, {"score": 0.0035399770257915466, "phrase": "multiple_transitions"}, {"score": 0.0034063576796640603, "phrase": "operational_semantics"}, {"score": 0.0033575566897536906, "phrase": "large_class"}, {"score": 0.003293570937654716, "phrase": "eight_high-level"}, {"score": 0.003262035294895737, "phrase": "mostly_orthogonal_semantic_aspects"}, {"score": 0.003108814986752103, "phrase": "semantic_option"}, {"score": 0.003049555059533735, "phrase": "feature_diagrams"}, {"score": 0.0029914213495838998, "phrase": "design_space"}, {"score": 0.0027965187255008647, "phrase": "syntactic_features"}, {"score": 0.002730023736069673, "phrase": "semantic_variations"}, {"score": 0.0026395715432958665, "phrase": "syntactic_and_semantic_features"}, {"score": 0.0025155150482635688, "phrase": "semantic_options"}, {"score": 0.0022956075241520064, "phrase": "appropriate_bsml"}, {"score": 0.0022409963215568565, "phrase": "existing_bsmls"}, {"score": 0.0021771713131746636, "phrase": "semantic_features"}, {"score": 0.002145942273032774, "phrase": "new_desired_bsml"}, {"score": 0.0021049980887993046, "phrase": "bsml"}], "paper_keywords": ["Big-step modelling languages", " Semantics of modelling languages", " Model-driven development", " Domain-specific modelling languages", " Statecharts", " UML StateMachines"], "paper_abstract": "With the popularity of model-driven methodologies and the abundance of modelling languages, a major question for a requirements engineer is: which language is suitable for modelling a system under study? We address this question from a semantic point-of-view for big-step modelling languages (BSMLs). BSMLs are a class of popular behavioural modelling languages in which a model can respond to an input by executing multiple transitions, possibly concurrently. We deconstruct the operational semantics of a large class of BSMLs into eight high-level, mostly orthogonal semantic aspects and their common semantic options. We analyse the characteristics of each semantic option. We use feature diagrams to present the design space of BSML semantics that arises from our deconstruction, as well as to taxonomize the syntactic features of BSMLs that exhibit semantic variations. We enumerate the dependencies between syntactic and semantic features. We also discuss the effects of certain combinations of semantic options when used together in a BSML semantics. Our goal is to empower a requirements engineer to compare and choose an appropriate BSML from the plethora of existing BSMLs, or to articulate the semantic features of a new desired BSML when such a BSML does not exist.", "paper_title": "Deconstructing the semantics of big-step modelling languages", "paper_id": "WOS:000278121400006"}