{"auto_keywords": [{"score": 0.04835764792705378, "phrase": "combinatorial_optimization"}, {"score": 0.04787636758356028, "phrase": "evolutionary_algorithms"}, {"score": 0.043965416920295285, "phrase": "island_models"}, {"score": 0.00481495049065317, "phrase": "parallel_evolutionary_algorithms"}, {"score": 0.004545793387330536, "phrase": "popular_heuristics"}, {"score": 0.004246947739596565, "phrase": "good_results"}, {"score": 0.0040942189695983185, "phrase": "different_populations"}, {"score": 0.0038854765143440965, "phrase": "graph_structure"}, {"score": 0.0038450179181069833, "phrase": "communication_topology"}, {"score": 0.0036873373225096624, "phrase": "good_solutions"}, {"score": 0.0036489343475053187, "phrase": "neighboring_islands"}, {"score": 0.003320756562046789, "phrase": "parallel_running_time"}, {"score": 0.00316804077203463, "phrase": "eulerian"}, {"score": 0.0028527866590859967, "phrase": "offspring_populations"}, {"score": 0.0027356847952125433, "phrase": "potential_speedups"}, {"score": 0.002637160140011997, "phrase": "search_operators"}, {"score": 0.0025824576209656676, "phrase": "fitness_functions"}, {"score": 0.0024894376091589244, "phrase": "also_the_parameters"}, {"score": 0.002450602177683068, "phrase": "island_model"}, {"score": 0.002337684811187166, "phrase": "natural_instance"}, {"score": 0.0023133055945761235, "phrase": "eulerian_cycles"}, {"score": 0.002253461585851626, "phrase": "logarithmic_speedups"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel evolutionary algorithms", " Combinatorial optimization", " Island model", " Spatial structures", " Offspring populations", " Runtime analysis"], "paper_abstract": "Evolutionary algorithms are popular heuristics for solving various combinatorial problems as they are easy to apply and often produce good results. Island models parallelize evolution by using different populations, called islands, which are connected by a graph structure as communication topology. Each island periodically communicates copies of good solutions to neighboring islands in a process called migration. We consider the speedup gained by island models in terms of the parallel running time for problems from combinatorial optimization: sorting (as maximization of sortedness), shortest paths and Eulerian cycles. The results show in which settings and up to what degree evolutionary algorithms can be parallelized efficiently. Our results include offspring populations in (1 + lambda) EAs as a special case. Potential speedups depend on many design choices such as the search operators, representations and fitness functions used on the islands, and also the parameters of the island model. In particular, we show that a natural instance for Eulerian cycles leads to exponential vs. logarithmic speedups, depending on the frequency of migration. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Analysis of speedups in parallel evolutionary algorithms and (1+lambda) EAs for combinatorial optimization", "paper_id": "WOS:000347600700005"}