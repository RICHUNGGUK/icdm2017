{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallelizing_consensuses"}, {"score": 0.004732785510739708, "phrase": "byzantine_fault_tolerance"}, {"score": 0.004598933498016774, "phrase": "new_method"}, {"score": 0.00452043800760441, "phrase": "asynchronous_byzantine_fault_tolerant"}, {"score": 0.004268293864953256, "phrase": "state_machine_replication"}, {"score": 0.004219571240696568, "phrase": "state_machine_replication_protocols"}, {"score": 0.0038271712887391015, "phrase": "naive_way"}, {"score": 0.0037402558657576124, "phrase": "application_order"}, {"score": 0.0035518193979811367, "phrase": "bft_consensus"}, {"score": 0.003471135453226184, "phrase": "next_executed_operation"}, {"score": 0.0031845067058084613, "phrase": "previous_execution"}, {"score": 0.003130077012135034, "phrase": "consensus_protocol"}, {"score": 0.0029722900280316216, "phrase": "parallel_execution"}, {"score": 0.002472822097373027, "phrase": "existing_method"}, {"score": 0.0023480892503414596, "phrase": "evaluation_results"}, {"score": 0.002268441347979241, "phrase": "bft_protocol"}, {"score": 0.002166421738415464, "phrase": "existing_one"}, {"score": 0.0021049977753042253, "phrase": "message_transmissions"}], "paper_keywords": ["Byzantine fault tolerance", " asynchronous distributed system", " agreement", " consensus", " state machine replication"], "paper_abstract": "We propose a new method that accelerates asynchronous Byzantine Fault Tolerant (BFT) protocols designed on the principle of state machine replication. State machine replication protocols ensure consistency among replicas by applying operations in the same order to all of them. A naive way to determine the application order of the operations is to repeatedly execute the BFT consensus to determine the next executed operation, but this may introduce inefficiency caused by waiting for the completion of the previous execution of the consensus protocol. To reduce this inefficiency, our method allows parallel execution of the consensuses while keeping consistency of the consensus results at the replicas. In this paper, we also prove the correctness of our method and experimentally compare it with the existing method in terms of latency and throughput. The evaluation results show that our method makes a BFT protocol three or four times faster than the existing one when some machines or message transmissions are delayed.", "paper_title": "A Method of Parallelizing Consensuses for Accelerating Byzantine Fault Tolerance", "paper_id": "WOS:000330553700006"}