{"auto_keywords": [{"score": 0.04942444706912143, "phrase": "multiple_link_state_decrements"}, {"score": 0.00481495049065317, "phrase": "dynamic_spt"}, {"score": 0.004641351004344458, "phrase": "previous_approaches"}, {"score": 0.004577869668211548, "phrase": "dynamic_updating"}, {"score": 0.004536029676655286, "phrase": "shortest_path_trees"}, {"score": 0.004062682236016889, "phrase": "new_spt"}, {"score": 0.004007083686875716, "phrase": "existing_spt"}, {"score": 0.0038624981944755813, "phrase": "link-state_routing_protocols"}, {"score": 0.003809630986847224, "phrase": "ospf"}, {"score": 0.003427540517249369, "phrase": "simple_forms"}, {"score": 0.0031845067058084583, "phrase": "multiple_decrements"}, {"score": 0.0029722900280316216, "phrase": "updating_mechanisms"}, {"score": 0.002799810685137358, "phrase": "node_update_redundancy"}, {"score": 0.0026252106881752067, "phrase": "new_spt."}, {"score": 0.0024842242921857705, "phrase": "unnecessary_node_updates"}, {"score": 0.002372562933393242, "phrase": "spt"}, {"score": 0.002318566141177149, "phrase": "particular_node"}, {"score": 0.002286781334850213, "phrase": "built_node_list"}, {"score": 0.002255431275670053, "phrase": "algorithm_complexity_analysis"}, {"score": 0.0021940119092387998, "phrase": "maxr"}, {"score": 0.002174036146649517, "phrase": "mind"}, {"score": 0.0021342613107011624, "phrase": "dynamic_update_procedures"}], "paper_keywords": ["Network routing", " Shortest path tree", " Dynamic update", " Multiple link state decrements"], "paper_abstract": "Previous approaches to the dynamic updating of Shortest Path Trees (SPTs) have in the main focused on just one link state change. Not much work has been done on the problem of deriving a new SPT from an existing SPT for multiple link state decrements in a network that applies link-state routing protocols such as OSPF and IS-IS. This problem is complex because in the process of updating an SPT there are, firstly, no simple forms of node set to presumable contain all nodes to be updated and, secondly, multiple decrements can be accumulated to make the updating much harder. If we adopt the updating mechanisms engaged in one link state change for the case of multiple link state decrements, the result is node update redundancy, as a node changes several times before it reaches its final state in the new SPT. This paper proposes two dynamic algorithms (MaxR, MinD) for obviating unnecessary node updates by having part nodes updated in a branch on the SPT only after selecting a particular node from a built node list. The algorithm complexity analysis and simulation results show that MaxR and MinD require fewer node updates during dynamic update procedures than do other algorithms for updating SPT of multiple link state decrements.", "paper_title": "Dynamic SPT update for multiple link state decrements in network routing", "paper_id": "WOS:000260380600003"}