{"auto_keywords": [{"score": 0.049272197070513044, "phrase": "ray_tracing"}, {"score": 0.014354522408900176, "phrase": "algorithmic_improvements"}, {"score": 0.009969762971430216, "phrase": "animated_scenes"}, {"score": 0.004819578846190333, "phrase": "ray"}, {"score": 0.004591120854640081, "phrase": "off-line_rendering"}, {"score": 0.004467900288375827, "phrase": "interactive_use"}, {"score": 0.0044225461990535855, "phrase": "faster_hardware"}, {"score": 0.004289215825521407, "phrase": "real-time_ray_tracing"}, {"score": 0.004174064076143015, "phrase": "real-time_capability"}, {"score": 0.004117647922204903, "phrase": "new_problems"}, {"score": 0.004020740863986328, "phrase": "off-line_environment"}, {"score": 0.003718045060236861, "phrase": "data_structures"}, {"score": 0.003593623872399777, "phrase": "spatial_data_structures"}, {"score": 0.0035571129372263532, "phrase": "fast_ray_tracing"}, {"score": 0.003461547484288942, "phrase": "scene_changes"}, {"score": 0.0031254169757175257, "phrase": "different_algorithms"}, {"score": 0.002949598537993663, "phrase": "dynamic_scenes"}, {"score": 0.0028703075616629634, "phrase": "scene_complexity"}, {"score": 0.002850819170139645, "phrase": "model_structure"}, {"score": 0.0025738397248551217, "phrase": "best_technique"}, {"score": 0.002547663224855668, "phrase": "particular_problem"}, {"score": 0.002453934333239467, "phrase": "art_report"}, {"score": 0.0023717148226629105, "phrase": "different_approaches"}, {"score": 0.002230584233627327, "phrase": "overall_goal"}, {"score": 0.0021705796895687864, "phrase": "best_approach"}, {"score": 0.0021049977753042253, "phrase": "promising_areas"}], "paper_keywords": ["ray tracing", " animated scenes", " traversal and construction of spatial and hierarchical data structures", " E", " 1 [Data Structures]: Trees", " I", " 3", " 7 [Three-Dimensional Graphics and Realism]: Ray tracing"], "paper_abstract": "Ray tracing has long been a method of choice for off-line rendering, but traditionally was too slow for interactive use. With faster hardware and algorithmic improvements this has recently changed, and real-time ray tracing is finally within reach. However, real-time capability also opens up new problems that do not exist in an off-line environment. In particular real-time ray tracing offers the opportunity to interactively ray trace moving/animated scene content. This presents a challenge to the data structures that have been developed for ray tracing over the past few decades. Spatial data structures crucial for fast ray tracing must be rebuilt or updated as the scene changes, and this can become a bottleneck for the speed of ray tracing. This bottleneck has recently received much attention by researchers and that has resulted in a multitude of different algorithms, data structures and strategies for handling animated scenes. The effectiveness of techniques for ray tracing dynamic scenes vary dramatically depending on details such as scene complexity, model structure, type of motion and the coherency of the rays. Consequently, there is so far no approach that is best in all cases, and determining the best technique for a particular problem can be a challenge. In this State of the Art Report (STAR), we aim to survey the different approaches to ray tracing animated scenes, discussing their strengths and weaknesses, and their relationship to other approaches. The overall goal is to help the reader choose the best approach depending on the situation, and to expose promising areas where there is potential for algorithmic improvements.", "paper_title": "State of the Art in Ray Tracing Animated Scenes", "paper_id": "WOS:000269902100011"}