{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "variable_values"}, {"score": 0.0047555023078686386, "phrase": "round-off_effects"}, {"score": 0.004278807087784626, "phrase": "individual_computations"}, {"score": 0.004199766284749713, "phrase": "memory_usage"}, {"score": 0.004096635798793164, "phrase": "potential_parallelism"}, {"score": 0.00402094658848301, "phrase": "fixed_hardware_budget"}, {"score": 0.0038737214010638745, "phrase": "new_method"}, {"score": 0.003778566972399296, "phrase": "minimum_precision"}, {"score": 0.003506851152129303, "phrase": "basic_algebraic_operations"}, {"score": 0.003234425353582135, "phrase": "computational_word-length"}, {"score": 0.0031549249117721946, "phrase": "existing_methods"}, {"score": 0.0030204580407008214, "phrase": "superior_hardware_designs"}, {"score": 0.0029279232349513724, "phrase": "proposed_procedure"}, {"score": 0.0028206052780047424, "phrase": "conjugate_gradient_algorithm"}, {"score": 0.00265038878247831, "phrase": "global_word-length_savings"}, {"score": 0.002325554982412043, "phrase": "competing_approaches"}, {"score": 0.0022542611024997474, "phrase": "comparable_bounds"}, {"score": 0.002226357953581725, "phrase": "recent_literature"}, {"score": 0.0021851480717840484, "phrase": "small_fraction"}, {"score": 0.0021446993452098597, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "greater_scalability"}], "paper_keywords": ["Algorithms implemented in hardware", " numerical analysis", " optimization", " performance analysis and design aids"], "paper_abstract": "The precision used in an algorithm affects the error and performance of individual computations, the memory usage, and the potential parallelism for a fixed hardware budget. This paper describes a new method to determine the minimum precision required to meet a given error specification for an algorithm consisting of the basic algebraic operations. Using this approach, it is possible to significantly reduce the computational word-length in comparison to existing methods, and this can lead to superior hardware designs. We demonstrate the proposed procedure on an iteration of the conjugate gradient algorithm, achieving proofs of bounds that can translate to global word-length savings ranging from a few bits to proving the existence of ranges that must otherwise be assumed to be unbounded when using competing approaches. We also achieve comparable bounds to recent literature in a small fraction of the execution time, with greater scalability.", "paper_title": "Bounding Variable Values and Round-Off Effects Using Handelman Representations", "paper_id": "WOS:000296015200009"}