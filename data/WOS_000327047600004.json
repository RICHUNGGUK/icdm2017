{"auto_keywords": [{"score": 0.025836481126000614, "phrase": "distributed_approach"}, {"score": 0.015719716506582538, "phrase": "information-centric_networking"}, {"score": 0.01365203059966879, "phrase": "in-network_caching"}, {"score": 0.0126852818189265, "phrase": "user-assisted_in-network_caching"}, {"score": 0.008246796738798764, "phrase": "caching_information"}, {"score": 0.008084517622909886, "phrase": "higher_cache"}, {"score": 0.007681628459366805, "phrase": "larger_view"}, {"score": 0.004626680470601208, "phrase": "network_efficiency"}, {"score": 0.004600389726895716, "phrase": "content_distribution_performance"}, {"score": 0.004561232179195321, "phrase": "user_requests"}, {"score": 0.00453531164565523, "phrase": "cached_content"}, {"score": 0.00447115003744675, "phrase": "requested_content"}, {"score": 0.004445739135694758, "phrase": "remote_sources"}, {"score": 0.003800586434296711, "phrase": "user_resources"}, {"score": 0.003559284776569813, "phrase": "attractive_features"}, {"score": 0.0035189057079817285, "phrase": "self-scalable_caching"}, {"score": 0.0034889212590758865, "phrase": "near-optimal_cache"}, {"score": 0.0031845067058084613, "phrase": "centralized_server"}, {"score": 0.0031483659534456802, "phrase": "content_availability_information"}, {"score": 0.002999274091205852, "phrase": "user's_content_availability_information"}, {"score": 0.002939948763582007, "phrase": "caching_strategy"}, {"score": 0.002898291237210567, "phrase": "upload_overhead"}, {"score": 0.0027374647587075935, "phrase": "small_storage_space"}, {"score": 0.002683304054823427, "phrase": "content_size"}, {"score": 0.0026377320257839933, "phrase": "centralized_and_distributed_approaches"}, {"score": 0.002527150892127982, "phrase": "overall_view"}, {"score": 0.00249132787923097, "phrase": "centralized_approach"}, {"score": 0.0021908807203548345, "phrase": "interesting_observation"}, {"score": 0.0021659920594094407, "phrase": "random_distributed_strategy_yields"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["In-network caching", " User-assisted", " Information-centric networking", " Performance study"], "paper_abstract": "In information-centric networking, in-network caching has the potential to improve network efficiency and content distribution performance by satisfying user requests with cached content rather than downloading the requested content from remote sources. In this respect, users who request, download, and keep the content may be able to contribute to in-network caching by sharing their downloaded content with other users in the same network domain (i.e., user-assisted in-network caching). In this paper, we examine various aspects of user-assisted in-network caching in the hopes of efficiently utilizing user resources to achieve in-network caching. Through simulations, we first show that user-assisted in-network caching has attractive features, such as self-scalable caching, a near-optimal cache hit ratio (that can be achieved when the content is fully cached by the in-network caching) based on stable caching, and performance improvements over in-network caching. We then examine the caching strategy of user-assisted in-network caching. We examine three caching strategies based on a centralized server that maintains all content availability information and informs each user of what to cache. We also examine three caching strategies based on each user's content availability information. We first show that the caching strategy affects the distribution of upload overhead across users and the number of cache hits in each segment. One interesting observation is that, even with a small storage space (i.e., 0.1% of the content size per user), the centralized and distributed approaches improve the cache hit ratio by 50% and 45%, respectively. With an overall view of caching information, the centralized approach can achieve a higher cache hit ratio than the distributed approach. Based on this observation, we discuss a distributed approach with a larger view of caching information than the distributed approach and, through simulations, confirm that a larger view leads to a higher cache hit ratio. Another interesting observation is that the random distributed strategy yields comparable performance to more complex strategies. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "User-assisted in-network caching in information-centric networking", "paper_id": "WOS:000327047600004"}