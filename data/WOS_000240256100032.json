{"auto_keywords": [{"score": 0.039978282308139886, "phrase": "ore"}, {"score": 0.015719584889131163, "phrase": "task_orchestration"}, {"score": 0.004637481929896943, "phrase": "orc"}, {"score": 0.004508661664944657, "phrase": "new_language"}, {"score": 0.00422177384286051, "phrase": "concurrent_programming"}, {"score": 0.003990385737207714, "phrase": "business_process_management"}, {"score": 0.0038794730876377057, "phrase": "web_service_orchestration"}, {"score": 0.003598492288058048, "phrase": "concurrent_invocation"}, {"score": 0.0028715299874549245, "phrase": "trace-based_semantic_model"}, {"score": 0.0026384167183586015, "phrase": "ore_programs"}, {"score": 0.0021049977753042253, "phrase": "useful_orchestration_tasks"}], "paper_keywords": [""], "paper_abstract": "Orc is a new language for task orchestration, a form of concurrent programming with applications in workflow, business process management, and web service orchestration. Ore provides constructs to orchestrate the concurrent invocation of services - while managing timeouts, priorities, and failure of services or communication. In this paper, we show a trace-based semantic model for Ore, which induces a congruence on Ore programs and facilitates reasoning about them. Despite the simplicity of the language and its semantic model, Ore is able to express a variety of useful orchestration tasks.", "paper_title": "A language for task orchestration and its semantic properties", "paper_id": "WOS:000240256100032"}