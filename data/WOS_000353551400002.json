{"auto_keywords": [{"score": 0.03592892330172109, "phrase": "elastic_predicates"}, {"score": 0.035537103511539554, "phrase": "many-valued_labeling_functions"}, {"score": 0.012992401435214764, "phrase": "simulation_developer"}, {"score": 0.011743319466627843, "phrase": "general-purpose_software"}, {"score": 0.010145884322266024, "phrase": "random_variates"}, {"score": 0.010032313291912273, "phrase": "continuous_numbers"}, {"score": 0.00481495049065317, "phrase": "public_policy"}, {"score": 0.004498812433096501, "phrase": "faulty_simulations_outputs"}, {"score": 0.004275347843870176, "phrase": "insight_gathering_method"}, {"score": 0.004086010164600727, "phrase": "faulty_output"}, {"score": 0.0037532257703888315, "phrase": "software_engineering"}, {"score": 0.002958281631770322, "phrase": "existing_debuggers"}, {"score": 0.0025383451160985488, "phrase": "program_statement"}, {"score": 0.002495521662819317, "phrase": "faulty_simulation_output"}, {"score": 0.0024120247307686084, "phrase": "leading_alternatives"}, {"score": 0.002202742267484358, "phrase": "program_statements"}, {"score": 0.0021049977753042253, "phrase": "imperfect_conditions"}], "paper_keywords": ["Modeling and simulation", " automated debugging", " fault localization"], "paper_abstract": "Predictions from simulations have entered the mainstream of public policy and decision-making practices. Unfortunately, methods for gaining insight into faulty simulations outputs have not kept pace. Ideally, an insight gathering method would automatically identify the cause of a faulty output and explain to the simulation developer how to correct it. In the field of software engineering, this challenge has been addressed for general-purpose software through statistical debuggers. We present two research contributions, elastic predicates and many-valued labeling functions, that enable debuggers designed for general-purpose software to become more effective for simulations employing random variates and continuous numbers. Elastic predicates address deficiencies of existing debuggers related to continuous numbers, whereas many-valued labeling functions support the use of random variates. When used in combinations, these contributions allow a simulation developer tasked with localizing the program statement causing the faulty simulation output to examine 40% fewer statements than the leading alternatives. Our evaluation shows that elastic predicates and many-valued labeling functions maintain their ability to reduce the number of program statements that need to be examined under the imperfect conditions that developers experience in practice.", "paper_title": "Statistical Debugging for Simulations", "paper_id": "WOS:000353551400002"}