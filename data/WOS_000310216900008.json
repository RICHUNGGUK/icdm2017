{"auto_keywords": [{"score": 0.04054987344772189, "phrase": "gap"}, {"score": 0.014675690389005243, "phrase": "conventional_sequential_instruction_streams"}, {"score": 0.011240372080414845, "phrase": "configuration_unit"}, {"score": 0.00481495049065317, "phrase": "reconfigurable_grid_alu_processor"}, {"score": 0.004721711709176679, "phrase": "billion_transistor_era"}, {"score": 0.00413767314434795, "phrase": "sequential_applications"}, {"score": 0.004037694641919865, "phrase": "current_superscalar_processors"}, {"score": 0.003978866233891427, "phrase": "grid_arithmetic_logic_unit"}, {"score": 0.0036079110889031874, "phrase": "processor_front-end"}, {"score": 0.003503497128638102, "phrase": "superscalar_processor"}, {"score": 0.003385480888810982, "phrase": "two-dimensional_array"}, {"score": 0.0032714270066711835, "phrase": "execution_unit"}, {"score": 0.003239549357111286, "phrase": "instruction_sequences"}, {"score": 0.0030101325901285537, "phrase": "dataflow_graph"}, {"score": 0.002880333728285514, "phrase": "performance_evaluation"}, {"score": 0.002838319783373086, "phrase": "gap_architecture"}, {"score": 0.0028106505443369545, "phrase": "different_array_dimensions"}, {"score": 0.0027159094186967247, "phrase": "simplified_interconnection_network"}, {"score": 0.0026501935378083663, "phrase": "out-of-order_superscalar_processor"}, {"score": 0.002535876002754739, "phrase": "complete_crossbar_interconnect"}, {"score": 0.0024624103660827695, "phrase": "interconnection_network"}, {"score": 0.002391067964886602, "phrase": "maximum_performance_drawback"}, {"score": 0.0023104373174118458, "phrase": "single_benchmark"}, {"score": 0.0021891781017389783, "phrase": "minimum_interconnect"}], "paper_keywords": [""], "paper_abstract": "In the billion transistor era only a few architectural approaches propose new paths to improve the execution of conventional sequential instruction streams. Many legacy applications could profit from processors that are able to speed-up the execution of sequential applications beyond the performance of current superscalar processors. The Grid arithmetic logic unit (ALU) Processor (GAP) accelerates conventional sequential instruction streams without the need for recompilation. The GAP comprises a processor front-end similar to that of a superscalar processor extended by a configuration unit and a two-dimensional array of functional units that forms the execution unit. Instruction sequences are mapped dynamically into the array by the configuration unit so that they form the dataflow graph of the sequence. This study shows a performance evaluation of the GAP architecture with different array dimensions as well as its performance using a simplified interconnection network. GAP outperforms an out-of-order superscalar processor by a maximum of factor 2 with a complete crossbar interconnect between two array rows. Reducing the interconnection network to the minimum shows a maximum performance drawback of 10% for only a particular configuration and a single benchmark. In general, the slowdown is less than 2% for the minimum interconnect (two buses) and about 0.02% if three interconnection buses are used.", "paper_title": "Advanced architecture optimisation and performance analysis of a reconfigurable grid ALU processor", "paper_id": "WOS:000310216900008"}