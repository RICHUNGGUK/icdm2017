{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "process_mining_algorithms"}, {"score": 0.004244234872662471, "phrase": "process_mining"}, {"score": 0.0041384457437123635, "phrase": "machine_learning_task"}, {"score": 0.0030757650386969903, "phrase": "mining_algorithms"}, {"score": 0.0029241700853970013, "phrase": "probabilistic_automata"}, {"score": 0.0028692628457408025, "phrase": "unifying_representation"}, {"score": 0.002626317051411829, "phrase": "alpha_algorithm"}, {"score": 0.002544616720630384, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "efficient_use"}], "paper_keywords": ["Business processes", " machine learning", " Petri nets", " probabilistic automata", " process mining"], "paper_abstract": "There are many process mining algorithms and representations, making it difficult to choose which algorithm to use or compare results. Process mining is essentially a machine learning task, but little work has been done on systematically analyzing algorithms to understand their fundamental properties, such as how much data are needed for confidence in mining. We propose a framework for analyzing process mining algorithms. Processes are viewed as distributions over traces of activities and mining algorithms as learning these distributions. We use probabilistic automata as a unifying representation to which other representation languages can be converted. We present an analysis of the Alpha algorithm under this framework and experimental results, which show that from the substructures in a model and behavior of the algorithm, the amount of data needed for mining can be predicted. This allows efficient use of data and quantification of the confidence which can be placed in the results.", "paper_title": "A Framework for the Analysis of Process Mining Algorithms", "paper_id": "WOS:000317614400006"}