{"auto_keywords": [{"score": 0.040869582274540454, "phrase": "garbage_collection"}, {"score": 0.00797490086693615, "phrase": "proposed_methods"}, {"score": 0.00481495049065317, "phrase": "channel_garbage-collection"}, {"score": 0.004764220976404241, "phrase": "improving_internal_parallelism"}, {"score": 0.004714023408114857, "phrase": "multichannel_solid-state_disks"}, {"score": 0.004664352260912174, "phrase": "solid-state_disks"}, {"score": 0.004447201233380302, "phrase": "realistic_disk_workloads"}, {"score": 0.004400329132129292, "phrase": "numerous_small_write_requests"}, {"score": 0.004353948887538618, "phrase": "modern_flash-storage_devices"}, {"score": 0.004151188559520802, "phrase": "independent_channels"}, {"score": 0.0041074234667687875, "phrase": "better_parallelism"}, {"score": 0.004042635935882651, "phrase": "small_write_requests"}, {"score": 0.003674738405118697, "phrase": "page_data"}, {"score": 0.0036167509502276294, "phrase": "write_buffer"}, {"score": 0.0034849681064606543, "phrase": "buffer_space"}, {"score": 0.0034299649219748513, "phrase": "idle_periods"}, {"score": 0.003287482882222731, "phrase": "channel-management_strategy"}, {"score": 0.0031176485976102688, "phrase": "early_start"}, {"score": 0.002956562077120703, "phrase": "channel_activities"}, {"score": 0.002833689453299307, "phrase": "buffer-space_usage"}, {"score": 0.0025348408238837655, "phrase": "operation_model"}, {"score": 0.002508073621696602, "phrase": "flash_planes"}, {"score": 0.002481588370380518, "phrase": "experimental_results"}, {"score": 0.002391067964886602, "phrase": "existing_designs"}, {"score": 0.002365815362517737, "phrase": "multichannel_systems"}, {"score": 0.0021731423856364003, "phrase": "real_solid-state_disk"}, {"score": 0.0021049977753042253, "phrase": "real_hardware"}], "paper_keywords": ["Design", " Performance", " Algorithms", " Solid-state disks", " flash memory", " multichannel architectures"], "paper_abstract": "Solid-state disks use multichannel architectures to boost their data transfer rates. Because realistic disk workloads have numerous small write requests, modern flash-storage devices adopt a write buffer and a set of independent channels for better parallelism in serving small write requests. When a channel is undergoing garbage collection, it stops responding to inbound write traffic and accumulates page data in the write buffer. This results in contention for buffer space and creates idle periods in channels. This study presents a channel-management strategy, called garbage-collection advancing, which allows early start of garbage collection in channels for increasing the overlap among channel activities of garbage collection and restoring the balance of buffer-space usage among channels. This study further introduces cycle filling, which is a version of garbage-collection advancing tailored for the operation model of flash planes. Experimental results show that the proposed methods greatly outperformed existing designs of multichannel systems in terms of response and throughput. We also successfully implemented the proposed methods in a real solid-state disk and proved their feasibility in real hardware.", "paper_title": "Reducing Asynchrony in Channel Garbage-Collection for Improving Internal Parallelism of Multichannel Solid-State Disks", "paper_id": "WOS:000330905800008"}