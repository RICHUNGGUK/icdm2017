{"auto_keywords": [{"score": 0.041463602643680264, "phrase": "dag"}, {"score": 0.013657863186136971, "phrase": "parallel_program"}, {"score": 0.00481495049065317, "phrase": "directed_acyclic_graphs"}, {"score": 0.004768559572292452, "phrase": "strict_energy_constraints"}, {"score": 0.004737879690862494, "phrase": "multi-core_architectures"}, {"score": 0.004662036750452837, "phrase": "energy-constrained_performance_optimization"}, {"score": 0.004587402291248795, "phrase": "performance-constrained_energy_optimization"}, {"score": 0.004484908028307205, "phrase": "considerable_attention"}, {"score": 0.004413096646892175, "phrase": "sustainable_computing"}, {"score": 0.0043705604923728195, "phrase": "paper_surveys_algorithms"}, {"score": 0.0042591158963728665, "phrase": "schedule_length"}, {"score": 0.00415050117148714, "phrase": "multi-core_systems"}, {"score": 0.0041104856245548285, "phrase": "energy_budget"}, {"score": 0.004057728601458481, "phrase": "dynamic_voltage_scaling"}, {"score": 0.0040186038781533946, "phrase": "structural_properties"}, {"score": 0.003979854888950705, "phrase": "directed_acrylic_graph"}, {"score": 0.003577414339646767, "phrase": "maximum_supply_voltage"}, {"score": 0.0035429043440226124, "phrase": "methodical_voltage_reductions"}, {"score": 0.003353521531649663, "phrase": "minimum_supply_voltage"}, {"score": 0.0033211641484589775, "phrase": "judicious_boosts"}, {"score": 0.003163985877966426, "phrase": "second_technique"}, {"score": 0.003133451532433272, "phrase": "third_method"}, {"score": 0.00306334226516593, "phrase": "voltage_adjustment"}, {"score": 0.0029467742734417255, "phrase": "second_method"}, {"score": 0.0029183300121987422, "phrase": "surveyed_techniques"}, {"score": 0.002862260172272785, "phrase": "voltage_adjustments"}, {"score": 0.0028072645684856313, "phrase": "task's_\"impact_factor"}, {"score": 0.002717937009041744, "phrase": "intelligent_allocation"}, {"score": 0.0026657070241024963, "phrase": "\"impact_factor"}, {"score": 0.0025725382476862305, "phrase": "entire_context"}, {"score": 0.0024348987477622983, "phrase": "fourth_method"}, {"score": 0.0023958326775913165, "phrase": "local_characteristics"}, {"score": 0.002304606411453748, "phrase": "core's_viability"}, {"score": 0.0022897425998475362, "phrase": "supply_voltage_raise"}, {"score": 0.002260301305523054, "phrase": "run-time_complexity"}, {"score": 0.0022457226013538343, "phrase": "detailed_simulation_experiments"}, {"score": 0.0021462652605453163, "phrase": "surveyed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Energy", " DVS", " Multi-core", " Performance", " DAG"], "paper_abstract": "The problem of energy-constrained performance optimization (as opposed to performance-constrained energy optimization) for parallel applications has garnered considerable attention in the area of sustainable computing. This paper surveys algorithms developed for effectively minimizing the degradation in schedule length that results from rescheduling a parallel program to multi-core systems under an energy budget. By utilizing dynamic voltage scaling and the structural properties of the directed acrylic graph (DAG) representing the parallel program, we embrace four static techniques in order to achieve this goal. These heuristics encompass procedures. The first is assigning to a set of tasks a maximum supply voltage followed by methodical voltage reductions, thereby geometrically \"stretching\" the schedule. The second is assigning to tasks a minimum supply voltage followed by judicious boosts in voltage, thereby \"compressing\" the schedule. In contrast with the second technique, the third method completely reschedules the DAG following each voltage adjustment. However, this technique largely follows the same procedure as the second method. The surveyed techniques effectively determine what nodes receive voltage adjustments by calculating and comparing each task's \"Impact Factor\", a metric devised to assist in the intelligent allocation of resources. Calculating the \"Impact Factor\" of each task (node) involves examining the entire context of the DAG, a rather expensive process. In contrast with the three previous techniques, a fourth method relies only upon the local characteristics of the DAG and state of the schedule for determining a core's viability for supply voltage raise, severely reducing run-time complexity. Detailed simulation experiments demonstrate the effect of various task and processor parameters on the performance of the surveyed algorithms. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Methods for optimizing the performance of directed acyclic graphs operating under strict energy constraints on multi-core architectures", "paper_id": "WOS:000209575300003"}