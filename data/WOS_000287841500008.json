{"auto_keywords": [{"score": 0.047244318311946, "phrase": "dial-a-flight_problem"}, {"score": 0.00481495049065317, "phrase": "dynamic_programming-based"}, {"score": 0.00468627326602559, "phrase": "time-expanded_networks"}, {"score": 0.0043793594257092805, "phrase": "relaxation-based_dynamic_programming_algorithm"}, {"score": 0.0042912493195237725, "phrase": "resource-constrained_shortest-path_problems"}, {"score": 0.0040648241451154525, "phrase": "column_generation"}, {"score": 0.0039028497942174777, "phrase": "resulting_network_formulation_and_pricing_problem"}, {"score": 0.003772793879444995, "phrase": "extremely_large_time-expanded_networks"}, {"score": 0.0036224139706218916, "phrase": "local_resource_constraints"}, {"score": 0.0034311578789991363, "phrase": "small_subnetworks"}, {"score": 0.0030992666061123533, "phrase": "backward_search"}, {"score": 0.002915701586760994, "phrase": "previous_search"}, {"score": 0.0028376361457661415, "phrase": "search_space"}, {"score": 0.0027804579695873827, "phrase": "consecutive_searches"}, {"score": 0.002598034157587518, "phrase": "critical_resources"}, {"score": 0.0025113494092413604, "phrase": "critical_arcs"}, {"score": 0.0022992346264367374, "phrase": "relatively_small_state_space"}, {"score": 0.0021049977753042253, "phrase": "optimal_path"}], "paper_keywords": ["dynamic programming", " column generation", " time-expanded networks", " dial-a-flight"], "paper_abstract": "We present a relaxation-based dynamic programming algorithm for solving resource-constrained shortest-path problems (RCSPPs) in the context of column generation for the dial-a-flight problem. The resulting network formulation and pricing problem require solving RCSPPs on extremely large time-expanded networks having a huge number of local resource constraints, i.e., constraints that apply to small subnetworks. The relaxation-based dynamic programming algorithm alternates between a forward and a backward search. Each search employs bounds derived in the previous search to prune the search space. Between consecutive searches, the relaxation is tightened using a set of critical resources and a set of critical arcs over which these resources are consumed. As a result, a relatively small state space is maintained, and many paths can be pruned while guaranteeing that an optimal path is ultimately found.", "paper_title": "Dynamic Programming-Based Column Generation on Time-Expanded Networks: Application to the Dial-a-Flight Problem", "paper_id": "WOS:000287841500008"}