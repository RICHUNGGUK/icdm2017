{"auto_keywords": [{"score": 0.04968705263604004, "phrase": "formal_software_models"}, {"score": 0.00890096797829402, "phrase": "tool_support"}, {"score": 0.008614176951599349, "phrase": "software_models"}, {"score": 0.008001960784948414, "phrase": "semantic_web"}, {"score": 0.007524898717172825, "phrase": "formal_software_development"}, {"score": 0.00481495049065317, "phrase": "semantic_accessing"}, {"score": 0.004489952932659799, "phrase": "different_formal_models"}, {"score": 0.004380540407926982, "phrase": "software_developments"}, {"score": 0.00430907756010007, "phrase": "large_and_complex_software_systems"}, {"score": 0.0041696157492057, "phrase": "complex_mathematical_nature"}, {"score": 0.0041184843463633386, "phrase": "formal_methods"}, {"score": 0.0035661605757956096, "phrase": "next_generation"}, {"score": 0.0035369291417564606, "phrase": "web_technology"}, {"score": 0.003479180627368156, "phrase": "profound_impact"}, {"score": 0.003244050414264445, "phrase": "formal_models"}, {"score": 0.0030623570435946977, "phrase": "distributed_manner"}, {"score": 0.002999955539996569, "phrase": "full_potential"}, {"score": 0.002890810475014827, "phrase": "proper_semantic_metadata"}, {"score": 0.0025972447844047515, "phrase": "semantic_technology"}, {"score": 0.00245168871716047, "phrase": "ontological_metadata"}, {"score": 0.002333421318779658, "phrase": "semantic_web_environment"}, {"score": 0.002239225269052105, "phrase": "prototype_tool"}, {"score": 0.002193559776999383, "phrase": "semantic_query"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Semantic Web", " Ontology", " Formal method", " Software engineering"], "paper_abstract": "Many software engineers have found that it is difficult to understand, incorporate and use different formal models consistently in the process of software developments, especially for large and complex software systems. This is mainly due to the complex mathematical nature of the formal methods and the lack of tool support. It is highly desirable to have software models and their related software artefacts systematically connected and used collaboratively, rather than in isolation. The success of the Semantic Web, as the next generation of Web technology, can have profound impact on the environment for formal software development. It allows both the software engineers and machines to understand the content of formal models and supports more effective software design in terms of understanding, sharing and reusing in a distributed manner. To realise the full potential of the Semantic Web in formal software development, effectively creating proper semantic metadata for formal software models and their related software artefacts is crucial. This paper proposed a framework that allows users to interconnect the knowledge about formal software models and other related documents using the semantic technology. We first propose a methodology with tool support is proposed to automatically derive ontological metadata from formal software models and semantically describe them. We then develop a Semantic Web environment for representing and sharing formal Z/OZ models. A method with prototype tool is presented to enhance semantic query to software models and other artefacts. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "An automated tool for semantic accessing to formal software models", "paper_id": "WOS:000344578600006"}