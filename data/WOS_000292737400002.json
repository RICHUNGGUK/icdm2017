{"auto_keywords": [{"score": 0.04546473354430293, "phrase": "agile_methods"}, {"score": 0.007436123096576763, "phrase": "safety-critical_systems"}, {"score": 0.006255973147217109, "phrase": "igstk"}, {"score": 0.00481495049065317, "phrase": "open_source_safety-critical_software"}, {"score": 0.004728874038094706, "phrase": "software_technology"}, {"score": 0.004677965073019951, "phrase": "life-dependent_environment"}, {"score": 0.0046276016230633495, "phrase": "development_team"}, {"score": 0.004495922204117959, "phrase": "high_level"}, {"score": 0.0044635893862404385, "phrase": "software_reliability"}, {"score": 0.004213123914295882, "phrase": "process_family"}, {"score": 0.003905509840047469, "phrase": "scrum"}, {"score": 0.003726398477619122, "phrase": "tight_feedback_loop"}, {"score": 0.0035683401689358993, "phrase": "safety-critical_software_development"}, {"score": 0.0034417406427881075, "phrase": "right_amount"}, {"score": 0.0032601856292942106, "phrase": "formal_specification"}, {"score": 0.0032367108248520277, "phrase": "requirements_management"}, {"score": 0.003190265467214105, "phrase": "agile_process"}, {"score": 0.0031331419276289306, "phrase": "necessary_activities"}, {"score": 0.0030438576446554138, "phrase": "continuous_process_management"}, {"score": 0.0030219357765636497, "phrase": "code-level_quality"}, {"score": 0.003000171314687074, "phrase": "classic_software_engineering_process_models"}, {"score": 0.0029252191241632888, "phrase": "image-guided_surgical_toolkit"}, {"score": 0.002801047964786189, "phrase": "open_source_software_project"}, {"score": 0.0026628098176168682, "phrase": "lighter_process"}, {"score": 0.002549749054599413, "phrase": "process_elements"}, {"score": 0.002423882939663573, "phrase": "research_labs"}, {"score": 0.0023804491500749106, "phrase": "clinical_trials"}, {"score": 0.002320943211698446, "phrase": "academic_community"}, {"score": 0.0021904435447196884, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["agile methods", " software process", " open source", " safety"], "paper_abstract": "The introduction of software technology in a life-dependent environment requires the development team to execute a process that ensures a high level of software reliability and correctness. Despite their popularity, agile methods are generally assumed to be inappropriate as a process family in these environments due to their lack of emphasis on documentation, traceability, and other formal techniques. Agile methods, notably Scrum, favor empirical process control, or small constant adjustments in a tight feedback loop. This paper challenges the assumption that agile methods are inappropriate for safety-critical software development. Agile methods are flexible enough to encourage the right amount of ceremony; therefore if safety-critical systems require greater emphasis on activities, such as formal specification and requirements management, then an agile process will include these as necessary activities. Furthermore, agile methods focus more on continuous process management and code-level quality than classic software engineering process models. We present our experiences on the image-guided surgical toolkit (IGSTK) project as a backdrop. IGSTK is an open source software project employing agile practices since 2004. We started with the assumption that a lighter process is better, focused on evolving code, and only adding process elements as the need arose. IGSTK has been adopted by teaching hospitals and research labs, and used for clinical trials. Agile methods have matured since the academic community suggested almost a decade ago that they were not suitable for safety-critical systems; we present our experiences as a case study for renewing the discussion. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Agile methods for open source safety-critical software", "paper_id": "WOS:000292737400002"}