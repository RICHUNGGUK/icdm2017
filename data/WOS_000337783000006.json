{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "feature_models"}, {"score": 0.004778244961916804, "phrase": "context"}, {"score": 0.004565007074039171, "phrase": "central_element"}, {"score": 0.004524624065803229, "phrase": "model-driven_software_product_line_architectures"}, {"score": 0.004386063799793622, "phrase": "legacy_code"}, {"score": 0.004176813329075736, "phrase": "long_and_arduous_task"}, {"score": 0.003770869401884267, "phrase": "automatic_synthesis"}, {"score": 0.0037043953071235155, "phrase": "propositional_constraints"}, {"score": 0.003606866938661143, "phrase": "decision_version"}, {"score": 0.0035280297975714063, "phrase": "np"}, {"score": 0.0033442114331500407, "phrase": "cnf_and_dnf_formulas"}, {"score": 0.0032272929113113203, "phrase": "experimental_evaluation"}, {"score": 0.0031422859551159506, "phrase": "binary_decision_diagram"}, {"score": 0.0030868583963299698, "phrase": "formal_concept_analysis"}, {"score": 0.0029789104204803137, "phrase": "realistic_models"}, {"score": 0.002811464848641341, "phrase": "bdd-based_approach"}, {"score": 0.0027373807320805084, "phrase": "dnf-based_algorithm"}, {"score": 0.0026771333996253783, "phrase": "fca-based_approach"}, {"score": 0.0025605773834404253, "phrase": "input_properties"}, {"score": 0.0024600113832396187, "phrase": "dnf-based_algorithms"}, {"score": 0.0023845255359681143, "phrase": "first_known_techniques"}, {"score": 0.0022604585778195152, "phrase": "real_systems"}, {"score": 0.0022304616068189575, "phrase": "new_possibilities"}, {"score": 0.0021910825909008946, "phrase": "engineering_and_model_management_tools"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Feature models", " Variability models", " Software product lines"], "paper_abstract": "Context: Variability modeling, and in particular feature modeling, is a central element of model-driven software product line architectures. Such architectures often emerge from legacy code, but, creating feature models from large, legacy systems is a long and arduous task. We describe three synthesis scenarios that can benefit from the algorithms in this paper. Objective: This paper addresses the problem of automatic synthesis of feature models from propositional constraints. We show that the decision version of the problem is NP-hard. We designed two efficient algorithms for synthesis of feature models from CNF and DNF formulas respectively. Method: We performed an experimental evaluation of the algorithms against a binary decision diagram (BDD)-based approach and a formal concept analysis (FCA)-based approach using models derived from realistic models. Results: Our evaluation shows a 10 to 1,000-fold performance improvement for our algorithms over the BDD-based approach. The performance of the DNF-based algorithm was similar to the FCA-based approach, with advantages for both techniques. We identified input properties that affect the runtimes of the CNF- and DNF-based algorithms. Conclusions: Our algorithms are the first known techniques that are efficient enough to be used on dependencies extracted from real systems, opening new possibilities of creating reverse engineering and model management tools for variability models. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Efficient synthesis of feature models", "paper_id": "WOS:000337783000006"}