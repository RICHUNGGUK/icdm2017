{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "new_simple_algorithms"}, {"score": 0.004743164872278112, "phrase": "fast_computation"}, {"score": 0.004672444473700524, "phrase": "quotient_boot"}, {"score": 0.00396050388346298, "phrase": "moenck"}, {"score": 0.0036553070575015344, "phrase": "fast_multiplication"}, {"score": 0.0035827424231607784, "phrase": "degree_d"}, {"score": 0.003240895431893263, "phrase": "non-defective_case"}, {"score": 0.0029611289031152856, "phrase": "general_case"}, {"score": 0.002902304851882577, "phrase": "complexity_bounds"}, {"score": 0.0022925278792429553, "phrase": "simple_character"}, {"score": 0.0021912600076114033, "phrase": "fast_algorithms"}], "paper_keywords": ["Fast algorithms", " Greatest common divisor (gcd)", " Half-greatest common divisor (half-gcd)", " Quotient boot", " Complexity"], "paper_abstract": "We give new simple algorithms for the fast computation of the quotient boot and the gcd of two polynomials, and obtain a complexity 0 (d(log(2)d)(2)), where d is the degree of the polynomials, similarly to Schonhage (1971), Moenck (1973). More precisely, denoting by M(d) the cost of a fast multiplication of polynomials of degree d, we reach the complexity (9/2M(d) + 0(d))log2d where d is the degree of the polynomials in the non-defective case (when degrees drop one by one), and (21M(d) + 0(d))log2d + 0(M(d)) in the general case, improving the complexity bounds (respectively (10M(d) + 0(d)) log(2) d and (24M(d) + 0(d))log2d + 0(M(d))) previously known for these problems (von zur Gathen and Gerhard, 1999, see Exercise 11.7). We hope that the simple character of our algorithms will make it easier to use fast algorithms in practice for these problems. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "New fast euclidean algorithms", "paper_id": "WOS:000312574000011"}