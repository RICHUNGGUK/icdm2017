{"auto_keywords": [{"score": 0.04662823073132362, "phrase": "vm"}, {"score": 0.030981302772894702, "phrase": "network_traffic"}, {"score": 0.00481495049065317, "phrase": "memory_content_similarity"}, {"score": 0.004673290248999786, "phrase": "highly_available_virtual_machines"}, {"score": 0.004402295697276237, "phrase": "high_availability"}, {"score": 0.004188459638572375, "phrase": "significant_performance_degradation"}, {"score": 0.0039651694106206245, "phrase": "large_amount"}, {"score": 0.003716520760680603, "phrase": "backup_machines"}, {"score": 0.0035712919163869176, "phrase": "new_ways"}, {"score": 0.0035183010916001664, "phrase": "good_performance"}, {"score": 0.0033639840192975835, "phrase": "tolerant_execution"}, {"score": 0.0032164136388931805, "phrase": "novel_approach"}, {"score": 0.003075296862372287, "phrase": "replicated_virtual_machines"}, {"score": 0.003029643234751066, "phrase": "data_similarity"}, {"score": 0.002984665318717504, "phrase": "vm's_memory_image"}, {"score": 0.0028394925080958205, "phrase": "similar_memory_areas"}, {"score": 0.002769568481822277, "phrase": "bit_density"}, {"score": 0.0026217213613095322, "phrase": "content_addressable_hash_table"}, {"score": 0.0025571463140118805, "phrase": "quantitative_analysis"}, {"score": 0.0023846534541336326, "phrase": "lightweight_compression_method"}, {"score": 0.0023143284925318916, "phrase": "existing_replication_techniques"}, {"score": 0.0022127018991294047, "phrase": "performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Virtualization", " Hypervisor", " Checkpoint", " Recovery", " Fault tolerance"], "paper_abstract": "Checkpoint-recovery based Virtual Machine (VM) replication is an emerging approach towards accommodating VM installations with high availability. However, it comes with the price of significant performance degradation of the application executed in the VM due to the large amount of state that needs to be synchronized between the primary and the backup machines. It is therefore critical to find new ways for attaining good performance, and at the same time, maintaining fault tolerant execution. In this paper, we present a novel approach to improve the performance of services deployed over replicated virtual machines by exploiting data similarity within the VM's memory image to reduce the network traffic during synchronization. For identifying similar memory areas, we propose a bit density based hash function, upon which, we build a content addressable hash table. We present a quantitative analysis on the degree of similarity we found in various workloads, and introduce a lightweight compression method, which, compared to existing replication techniques, reduces network traffic by up to 80% and yields a performance improvement over 90% for certain latency sensitive applications. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Utilizing memory content similarity for improving the performance of highly available virtual machines", "paper_id": "WOS:000315546800015"}