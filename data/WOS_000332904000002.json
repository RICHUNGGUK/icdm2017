{"auto_keywords": [{"score": 0.047905977291456965, "phrase": "test_data"}, {"score": 0.02736282121816296, "phrase": "infeasible_paths"}, {"score": 0.015719716506582538, "phrase": "search-based_test_data_generation"}, {"score": 0.012452701153298452, "phrase": "feasible_paths"}, {"score": 0.009500283228097109, "phrase": "early_termination"}, {"score": 0.004711779740073973, "phrase": "evolutionary_algorithms"}, {"score": 0.004568198442824687, "phrase": "path_coverage_testing"}, {"score": 0.0044289730051264116, "phrase": "target_paths"}, {"score": 0.004036141321779216, "phrase": "fixed_limit"}, {"score": 0.0037354317390837616, "phrase": "remaining_un-covered_target_paths"}, {"score": 0.0035658307992470243, "phrase": "evolutionary_test_data_generation_process"}, {"score": 0.0034250633972597254, "phrase": "confidence_level"}, {"score": 0.0033619752116657545, "phrase": "software_reliability_growth_models"}, {"score": 0.003092109667890803, "phrase": "uncovered_target_paths"}, {"score": 0.0029152570900178956, "phrase": "different_decision_rules"}, {"score": 0.0028526747080263757, "phrase": "twenty-one_test_programs"}, {"score": 0.002826265478343143, "phrase": "sbse_path_testing_literature"}, {"score": 0.0026978319081381145, "phrase": "standard_number"}, {"score": 0.0026235830665288003, "phrase": "total_computation"}, {"score": 0.0025912411705523953, "phrase": "test_programs"}, {"score": 0.0024811443887080543, "phrase": "extra_computation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Path testing", " Evolutionary algorithm", " Software reliability growth model"], "paper_abstract": "Context: Evolutionary algorithms have proved to be successful for generating test data for path coverage testing. However in this approach, the set of target paths to be covered may include some that are infeasible. It is impossible to find test data to cover those paths. Rather than searching indefinitely, or until a fixed limit of generations is reached, it would be desirable to stop searching as soon it seems likely that feasible paths have been covered and all remaining un-covered target paths are infeasible. Objective: The objective is to develop criteria to halt the evolutionary test data generation process as soon as it seems not worth continuing, without compromising testing confidence level. Method: Drawing on software reliability growth models as an analogy, this paper proposes and evaluates a method for determining when it is no longer worthwhile to continue searching for test data to cover uncovered target paths. We outline the method, its key parameters, and how it can be used as the basis for different decision rules for early termination of a search. Twenty-one test programs from the SBSE path testing literature are used to evaluate the method. Results: Compared to searching for a standard number of generations, an average of 30-75% of total computation was avoided in test programs with infeasible paths, and no feasible paths were missed due to early termination. The extra computation in programs with no infeasible paths was negligible. Conclusions: The method is effective and efficient. It avoids the need to specify a limit on the number of generations for searching. It can help to overcome problems caused by infeasible paths in search-based test data generation for path testing. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic stopping criteria for search-based test data generation for path testing", "paper_id": "WOS:000332904000002"}