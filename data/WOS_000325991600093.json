{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "integrated_visualization_environment"}, {"score": 0.004721162131188487, "phrase": "visualization_field"}, {"score": 0.00462919213721188, "phrase": "increasing_number"}, {"score": 0.004583878086896926, "phrase": "general_toolkits"}, {"score": 0.004450568197899267, "phrase": "broad_range"}, {"score": 0.004299910946753963, "phrase": "general_tool"}, {"score": 0.004216112320418982, "phrase": "latest_capabilities"}, {"score": 0.004154332348800334, "phrase": "possible_applications"}, {"score": 0.004053362743156545, "phrase": "user_interfaces"}, {"score": 0.003877737556673229, "phrase": "user_communities"}, {"score": 0.003531474887552889, "phrase": "individual_applications"}, {"score": 0.003479692058963528, "phrase": "ad-hoc_scripts"}, {"score": 0.0032160319265621285, "phrase": "best-in-task_tools"}, {"score": 0.002943147037670826, "phrase": "api_or_sdk_level"}, {"score": 0.0027605398374811667, "phrase": "sheer_variety"}, {"score": 0.0027334673433027086, "phrase": "data_models"}, {"score": 0.002706659627293686, "phrase": "design_philosophies"}, {"score": 0.002576503437739865, "phrase": "closed_commercial_systems"}, {"score": 0.002464709648714996, "phrase": "manyvis_framework"}, {"score": 0.002428530921948425, "phrase": "custom_solutions"}, {"score": 0.0022665781920241245, "phrase": "existing_unrelated_applications"}, {"score": 0.0022443390559699974, "phrase": "manyvis"}, {"score": 0.0021896891011033105, "phrase": "software_tools"}, {"score": 0.0021682027434117095, "phrase": "complementary_characteristics"}], "paper_keywords": ["Visualization environments", " integrated applications", " macros", " linked views"], "paper_abstract": "As the visualization field matures, an increasing number of general toolkits are developed to cover a broad range of applications. However, no general tool can incorporate the latest capabilities for all possible applications, nor can the user interfaces and workflows be easily adjusted to accommodate all user communities. As a result, users will often chose either substandard solutions presented in familiar, customized tools or assemble a patchwork of individual applications glued through ad-hoc scripts and extensive, manual intervention. Instead, we need the ability to easily and rapidly assemble the best-in-task tools into custom interfaces and workflows to optimally serve any given application community. Unfortunately, creating such meta-applications at the API or SDK level is difficult, time consuming, and often infeasible due to the sheer variety of data models, design philosophies, limits in functionality, and the use of closed commercial systems. In this paper, we present the ManyVis framework which enables custom solutions to be built both rapidly and simply by allowing coordination and communication across existing unrelated applications. ManyVis allows users to combine software tools with complementary characteristics into one virtual application driven by a single, custom-designed interface.", "paper_title": "ManyVis: Multiple Applications in an Integrated Visualization Environment", "paper_id": "WOS:000325991600093"}