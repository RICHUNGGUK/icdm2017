{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multi-functional_double-precision_floating-point_computation"}, {"score": 0.004627244470096107, "phrase": "unified_architecture"}, {"score": 0.004546174820239776, "phrase": "double-precision_floating_division"}, {"score": 0.004466519142879166, "phrase": "square_root"}, {"score": 0.0044272138900038095, "phrase": "inverse_square_root"}, {"score": 0.004330450801016359, "phrase": "significant_area_reduction"}, {"score": 0.004235793609579307, "phrase": "double-precision_multiplication-based_divider"}, {"score": 0.0040886093072615, "phrase": "arithmetic_computations"}, {"score": 0.0039815737219022675, "phrase": "modified_goldschmidt_algorithm"}, {"score": 0.003929107176349023, "phrase": "better_area_efficiency"}, {"score": 0.0038093479435377764, "phrase": "linear-degree_minimax_approximation"}, {"score": 0.003502305158321511, "phrase": "rather_small_lookup_table"}, {"score": 0.0032919615578986816, "phrase": "partial_products"}, {"score": 0.0032057142600527, "phrase": "hardware_reuse"}, {"score": 0.003121719509312159, "phrase": "final_accurate_result"}, {"score": 0.003013129637451091, "phrase": "pipelined_processing"}, {"score": 0.0029733865110222785, "phrase": "time_cost"}, {"score": 0.002844646030750337, "phrase": "reconfigurable_datapath"}, {"score": 0.002733539375462443, "phrase": "multiple_double-precision_computations"}, {"score": 0.002685558057339722, "phrase": "optimized_divider"}, {"score": 0.0025241429061867633, "phrase": "experimental_results"}, {"score": 0.002479827946513971, "phrase": "proposed_design"}, {"score": 0.002279702500235741, "phrase": "area_efficiency"}, {"score": 0.0022101055924375725, "phrase": "proposed_unified_architecture"}, {"score": 0.0021049977753042253, "phrase": "better_performance-area_trade-off"}], "paper_keywords": ["Computer arithmetic", " floating-point", " division", " square root", " multiplication"], "paper_abstract": "In this paper, we propose a unified architecture for computation of double-precision floating division, reciprocal, square root, inverse square root and multiplication with a significant area reduction. First, a double-precision multiplication-based divider, the common datapath shared with these arithmetic computations, is optimized by a modified Goldschmidt algorithm to achieve better area efficiency. In this algorithm, a linear-degree minimax approximation instead of second-degree is used to obtain a 15-bit precision estimate of the reciprocal so that we can get a rather small lookup table (LUT) as well as reduced amount of computation when accumulating the partial products. Two Goldschmidt iterations specially designed for hardware reuse are performed to gain the final accurate result of division. By virtue of the pipelined processing, the time cost for the two iterations is minimized. Second, a reconfigurable datapath with a little extra area cost is introduced to dynamically support multiple double-precision computations by executing the optimized divider iteratively. The design is finally implemented and synthesized in SMIC 0.13-mu m CMOS process. The experimental results show that the proposed design can achieve a speed of 400MHz with area of 61.6K logic gates and 9-Kb LUT. Compared with other works, the area efficiency (performance/area ratio) of the proposed unified architecture is increased by about 20% in average, which is a better performance-area trade-off for embedded microprocessors.", "paper_title": "An Area-Efficient Unified Architecture for Multi-Functional Double-Precision Floating-Point Computation", "paper_id": "WOS:000363784800007"}