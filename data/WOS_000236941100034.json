{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "abstract_interpretation"}, {"score": 0.004700193486903964, "phrase": "interpretation_techniques"}, {"score": 0.004505881071218599, "phrase": "abstract_fixpoints"}, {"score": 0.004267757384195032, "phrase": "false_errors"}, {"score": 0.004140924670517666, "phrase": "new_counterexample_driven_refinement_technique"}, {"score": 0.00399367108161192, "phrase": "abstract_interpretations"}, {"score": 0.0038284549148537373, "phrase": "precision_losses"}, {"score": 0.0037825134619339537, "phrase": "forward_fixpoint_computation"}, {"score": 0.0036700484729006136, "phrase": "precise_backward_propagation"}, {"score": 0.0034342161742428666, "phrase": "true_error"}, {"score": 0.003213489259323921, "phrase": "false_error"}, {"score": 0.0029887957779347394, "phrase": "specific_abstract_domain"}, {"score": 0.0028477727736832283, "phrase": "affine_transition_systems"}, {"score": 0.0026970382454914437, "phrase": "sting_tool"}, {"score": 0.0025853238923610076, "phrase": "specialized_analysis"}, {"score": 0.0025542617599268323, "phrase": "linear_relations"}, {"score": 0.0021960024679620886, "phrase": "shape_analysis"}, {"score": 0.0021306081217770173, "phrase": "appropriate_widening_operator"}, {"score": 0.0021049977753042253, "phrase": "shape_graphs"}], "paper_keywords": [""], "paper_abstract": "Abstr. interpretation techniques prove properties of programs by computing abstract fixpoints. All such analyses stiffer from the possibility of false errors. We present a new counterexample driven refinement technique to reduce false errors in abstract interpretations. Our technique keeps track of the precision losses during forward fixpoint computation, and does a precise backward propagation from the error to either confirm the error as a true error, or identify a refinement so as to avoid the false error. Our technique is quite simple, and is independent of the specific abstract domain used. An implementation of our technique for affine transition systems is able to prove invariants generated by the StInG tool (19] without doing any specialized analysis for linear relations. Thus, we hope that the technique can work for other abstract domains as well. We sketch how our technique can be used to perform shape analysis by simply defining an appropriate widening operator over shape graphs.", "paper_title": "Counterexample driven refinement for abstract interpretation", "paper_id": "WOS:000236941100034"}