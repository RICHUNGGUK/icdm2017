{"auto_keywords": [{"score": 0.035729029000976936, "phrase": "transient_web_services"}, {"score": 0.031779986038401, "phrase": "multiple_web_service_registries"}, {"score": 0.031554716442117194, "phrase": "transient_web_service_providers"}, {"score": 0.030778376141194518, "phrase": "integration_concept"}, {"score": 0.027754722017525133, "phrase": "unified_global_data_model"}, {"score": 0.025839669221737978, "phrase": "view_concept"}, {"score": 0.00481495049065317, "phrase": "based_integration"}, {"score": 0.004779876533667754, "phrase": "heterogeneous_web_service_registries"}, {"score": 0.004642105253191792, "phrase": "standardization_efforts"}, {"score": 0.004591466267316524, "phrase": "web_service_area"}, {"score": 0.0043147264956783565, "phrase": "centralized_universal_business_registry"}, {"score": 0.004190305872545087, "phrase": "centralized_approaches"}, {"score": 0.00406945841245389, "phrase": "fault_tolerance"}, {"score": 0.004025040955430234, "phrase": "proposed_solution"}, {"score": 0.003952082333580496, "phrase": "registry_information"}, {"score": 0.003923269062268688, "phrase": "multiple_distributed_web_service_registries"}, {"score": 0.003810093416457147, "phrase": "specialized_web_service_registries"}, {"score": 0.003754731210715724, "phrase": "large_number"}, {"score": 0.0037273513742154237, "phrase": "different_web_service_registries"}, {"score": 0.0035671997165370403, "phrase": "particular_web_service"}, {"score": 0.003476963781647026, "phrase": "web_service_provisioning"}, {"score": 0.003438990973529508, "phrase": "considerable_administrative_overhead"}, {"score": 0.003303259489028193, "phrase": "limited_lifetime"}, {"score": 0.0030587884803931964, "phrase": "peer_architecture"}, {"score": 0.0030253688063143157, "phrase": "transparent_integration"}, {"score": 0.0028014064098604093, "phrase": "so-called_views"}, {"score": 0.0027505663559338825, "phrase": "needed_abstractions"}, {"score": 0.002720505061804933, "phrase": "seamless_integration"}, {"score": 0.002690771424958613, "phrase": "different_registries"}, {"score": 0.0026516301310428756, "phrase": "common_lightweight_web_service_profiles"}, {"score": 0.0025939803934423486, "phrase": "visr_web_service_profiles"}, {"score": 0.002565626044684815, "phrase": "flexible_extension"}, {"score": 0.0025468951021098717, "phrase": "registry_entries"}, {"score": 0.002473325513637559, "phrase": "original_web_service_registry_entries"}, {"score": 0.0023843376332011936, "phrase": "simple_grammar"}, {"score": 0.0023669270875629205, "phrase": "view_description_language"}, {"score": 0.00234104879370883, "phrase": "view_descriptions"}, {"score": 0.002290135975651888, "phrase": "working_example"}, {"score": 0.0022321322970228308, "phrase": "web_service_communities"}, {"score": 0.0022077244919858218, "phrase": "possible_application"}, {"score": 0.0021518035978153878, "phrase": "different_types"}, {"score": 0.002136087390959268, "phrase": "web_services_providers"}], "paper_keywords": ["web service discovery", " web service registry integration", " distributed web service registry"], "paper_abstract": "Despite all standardization efforts in the Web service area, several different incompatible Web service registry implementations exist. The initial focus of these implementations was geared towards working with a centralized Universal Business Registry (UBR). However, these centralized approaches tend to be bottlenecks regarding performance and fault tolerance. A proposed solution is the replication of registry information among multiple distributed Web service registries. In addition, the creation of specialized Web service registries leads to a large number of different Web service registries. This leads to a situation where the search for a particular Web service becomes a very complex task. Besides, Web service provisioning includes a considerable administrative overhead when dealing with transient Web services. Transient Web services exist only for a limited lifetime and in a certain context. In this paper, we propose the VISR (View based Integration of Web Service Registries) peer to peer architecture for the transparent integration of multiple Web service registries and transient Web service providers. This work focuses on the integration concept of multiple Web service registries and transient Web service providers. The integration concept relies on so-called views. Views provide the needed abstractions for the seamless integration on the different registries. Views use common lightweight Web service profiles that serve as unified global data model. VISR Web service profiles allow the flexible extension of registry entries with value added information without changing the original Web service registry entries. To illustrate the view concept, we introduce a simple grammar (View Description Language) for view descriptions that is used in the working example throughout the paper. We present Web service communities as a possible application of the view concept and show how different types of Web services providers, respectively, their registries are integrated into a unified global data model.", "paper_title": "View based integration of heterogeneous web service registries - the case of VISR", "paper_id": "WOS:000243471000005"}