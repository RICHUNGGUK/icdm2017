{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "component-based_development"}, {"score": 0.004565007074039171, "phrase": "important_emerging_topic"}, {"score": 0.004484596684703308, "phrase": "software_engineering"}, {"score": 0.004103212598803194, "phrase": "increased_reuse"}, {"score": 0.0040309035566691645, "phrase": "reduced_time"}, {"score": 0.003465350958971198, "phrase": "cbd_technology"}, {"score": 0.0031703706626348507, "phrase": "current_models"}, {"score": 0.0030595112110658675, "phrase": "architectural_units"}, {"score": 0.002824005136794786, "phrase": "component_reuse"}, {"score": 0.0027741761880779535, "phrase": "systematic_composition"}, {"score": 0.002537880772794665, "phrase": "current_component_models"}, {"score": 0.0023424328921363585, "phrase": "commonly_accepted_desiderata"}, {"score": 0.0023010815714140467, "phrase": "cbd."}], "paper_keywords": ["software components", " software component models", " component life cycle", " component syntax", " component semantics", " component composition"], "paper_abstract": "Component-based development (CBD) is an important emerging topic in software engineering, promising long-sought-after benefits like increased reuse, reduced time to market, and, hence, reduced software production cost. The cornerstone of a CBD technology is its underlying software component model, which defines components and their composition mechanisms. Current models use objects or architectural units as components. These are not ideal for component reuse or systematic composition. In this paper, we survey and analyze current component models and classify them into a taxonomy based on commonly accepted desiderata for CBD. For each category in the taxonomy, we describe its key characteristics and evaluate them with respect to these desiderata.", "paper_title": "Software component models", "paper_id": "WOS:000249076200005"}