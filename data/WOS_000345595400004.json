{"auto_keywords": [{"score": 0.03932486938372318, "phrase": "future_bugs"}, {"score": 0.02322730111336099, "phrase": "file_editing_patterns"}, {"score": 0.010557188702184474, "phrase": "software_quality"}, {"score": 0.010339221797825173, "phrase": "change_requests"}, {"score": 0.0047273577269638725, "phrase": "different_file_editing_patterns"}, {"score": 0.004665764181113345, "phrase": "existing_research"}, {"score": 0.004580872896983597, "phrase": "potential_negative_impacts"}, {"score": 0.004438906892324366, "phrase": "quantitative_evidence"}, {"score": 0.00409211122248989, "phrase": "editing_pattern"}, {"score": 0.003360685661587978, "phrase": "extended_period"}, {"score": 0.0032054891061528896, "phrase": "long_interruptions"}, {"score": 0.002590935071953531, "phrase": "major_owner"}, {"score": 0.002530359917257626, "phrase": "concurrent_editing_pattern"}, {"score": 0.0025038930574283174, "phrase": "major_owners"}, {"score": 0.0024777023459225307, "phrase": "bad_code_quality"}, {"score": 0.002451785889161692, "phrase": "mccabe"}, {"score": 0.0022958180852458215, "phrase": "clear_ownership"}, {"score": 0.0022777800735119405, "phrase": "code_quality"}, {"score": 0.002259883463607508, "phrase": "negative_impact"}, {"score": 0.0021724831184390192, "phrase": "software_development_teams"}, {"score": 0.0021441057555396013, "phrase": "risky_file_editing_patterns"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["file editing pattern", " bug", " defect", " software quality", " change request", " ownership", " empirical software engineering", " mylyn"], "paper_abstract": "Developers might follow different file editing patterns when handling change requests. Existing research has warned the community about the potential negative impacts of some file editing patterns on software quality. However, very few studies have provided quantitative evidence to support these claims. In this paper, we propose four metrics to identify four file editing patterns: concurrent editing pattern, parallel editing pattern, extended editing pattern, and interrupted editing pattern. Our empirical study on three open source projects shows that 90% (i.e. 1935 out of 2140) of files exhibit at least one file editing pattern. More specifically (1) files that are edited concurrently by many developers are 1.8 times more likely to experience future bugs than files that are not concurrently edited; (2) files edited in parallel with too many other files by the same developer are 2.9 times more likely to exhibit future bugs than files individually edited; (3) files edited over an extended period of time are 1.9 times more likely to experience future bugs than other files; and (4) files edited with long interruptions have 2.0 times more future bugs than other files. We also observe that the likelihood of future bugs in files experiencing all the four file editing patterns is 3.9 times higher than in files that are never involved in any of the four patterns. We further investigate factors impacting the occurrence of these file editing patterns along three dimensions: the ownership of files, the type of change requests in which the files were involved, and the initial code quality of the files. Results show that a file with a major owner is 0.6 times less likely to exhibit the concurrent editing pattern than files without major owners. Files with bad code quality (e.g. high McCabe's complexity, high coupling between objects, and lack of cohesion) are more likely to experience the four editing patterns. By ensuring a clear ownership and improving code quality, the negative impact of the four patterns could be reduced. Overall, our findings could be used by software development teams to warn developers about risky file editing patterns. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "An empirical study of the effect of file editing patterns on software quality", "paper_id": "WOS:000345595400004"}