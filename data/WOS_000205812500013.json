{"auto_keywords": [{"score": 0.004444921827311577, "phrase": "parallel_program_development"}, {"score": 0.00421410521089045, "phrase": "generative_design-pattern_systems"}, {"score": 0.004066898031169742, "phrase": "target_languages"}, {"score": 0.00378767277402891, "phrase": "high-performance_computing_community"}, {"score": 0.0035908627899097407, "phrase": "initial_effort"}, {"score": 0.003032405563826263, "phrase": "new_system"}, {"score": 0.00258347644721642, "phrase": "significant_challenges"}, {"score": 0.002220551141101661, "phrase": "object-oriented_programming_language"}, {"score": 0.0021049977753042253, "phrase": "parallel-annotated_procedural_language"}], "paper_keywords": ["Parallel programming", " Programming environments", " Design patterns", " MPI", " Cowichan problems", " Mesh", " Search tree"], "paper_abstract": "Generative parallel design patterns can be used to improve the productivity of parallel program development. However many of the generative design-pattern systems are developed for target languages that are not widely used by the high-performance computing community. This paper describes an initial effort to develop a system that will hopefully answer the question in the title in the affirmative. This new system is ostensibly based on, and built upon the experience with, the successful CO2P3S system. Significant challenges must be overcome to implement the features of a system that generates frameworks conceived for an object-oriented programming language (Java) into a parallel-annotated procedural language (MPI/C). (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Is MPI suitable for a generative design-pattern system?", "paper_id": "WOS:000205812500013"}