{"auto_keywords": [{"score": 0.032292199824268716, "phrase": "gp-bucb"}, {"score": 0.00481495049065317, "phrase": "parallelizing_exploration-exploitation_tradeoffs"}, {"score": 0.004767546015485477, "phrase": "gaussian_process_bandit_optimization"}, {"score": 0.0047010681734812616, "phrase": "gp-aucb"}, {"score": 0.004537401559396022, "phrase": "experimental_parallelization"}, {"score": 0.004492717291734985, "phrase": "explorationexploitation_tradeoffs"}, {"score": 0.0037222908218253054, "phrase": "gaussian_process_batch_upper_confidence_bound"}, {"score": 0.0035424245257172234, "phrase": "bound-based_algorithm"}, {"score": 0.003455765987713262, "phrase": "reward_function"}, {"score": 0.0033545600622020464, "phrase": "gaussian_process"}, {"score": 0.0030988889679192965, "phrase": "general_regret"}, {"score": 0.0029637093924781825, "phrase": "surprising_result"}, {"score": 0.0029055323737809825, "phrase": "common_kernels"}, {"score": 0.002862648127577722, "phrase": "asymptotic_average_regret"}, {"score": 0.0027650234530228897, "phrase": "batch_size"}, {"score": 0.002724207384182295, "phrase": "gp-bucb_algorithm"}, {"score": 0.0026443691099806003, "phrase": "related_case"}, {"score": 0.0023828731731474306, "phrase": "gaussian_process_adaptive_upper_confidence_bound"}, {"score": 0.002359397828549217, "phrase": "gp"}, {"score": 0.0021902063413831545, "phrase": "adaptive_manner"}], "paper_keywords": ["Gaussian process", " upper confidence bound", " batch", " active learning", " regret bound"], "paper_abstract": "How can we take advantage of opportunities for experimental parallelization in explorationexploitation tradeoffs? In many experimental scenarios, it is often desirable to execute experiments simultaneously or in batches, rather than only performing one at a time. Additionally, observations may be both noisy and expensive. We introduce Gaussian Process Batch Upper Confidence Bound (GP-BUCB), an upper confidence bound-based algorithm, which models the reward function as a sample from a Gaussian process and which can select batches of experiments to run in parallel. We prove a general regret bound for GP-BUCB, as well as the surprising result that for some common kernels, the asymptotic average regret can be made independent of the batch size. The GP-BUCB algorithm is also applicable in the related case of a delay between initiation of an experiment and observation of its results, for which the same regret bounds hold. We also introduce Gaussian Process Adaptive Upper Confidence Bound (GP-AUCB), a variant of GP-BUCB which can exploit parallelism in an adaptive manner. We evaluate GP-BUCB and GP-AUCB on several simulated and real data sets. These experiments show that GP-BUCB and GP-AUCB are competitive with state-of-the-art heuristics.", "paper_title": "Parallelizing Exploration-Exploitation Tradeoffs in Gaussian Process Bandit Optimization", "paper_id": "WOS:000354999700003"}