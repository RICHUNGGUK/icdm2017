{"auto_keywords": [{"score": 0.004717723626157272, "phrase": "pattern_matching"}, {"score": 0.004529093447865156, "phrase": "swap_matching"}, {"score": 0.0040481944502103505, "phrase": "graph-theoretic_model"}, {"score": 0.0038467574225322086, "phrase": "new_and_so_far_unexplored_avenue"}, {"score": 0.0030414140732789186, "phrase": "resulting_algorithms"}, {"score": 0.002889928791032578, "phrase": "classic_shift"}, {"score": 0.002479150189700726, "phrase": "target_machine"}, {"score": 0.0023079225317714815, "phrase": "linear_time"}, {"score": 0.0022382002476510573, "phrase": "fixed_alphabet"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Strings", " Swap Matching", " Graphs"], "paper_abstract": "In this paper, we revisit the much studied problem of Pattern Matching with Swaps (Swap Matching problem, for short). We first present a graph-theoretic model, which opens a new and so far unexplored avenue to solve the problem. Then, using the model, we devise two efficient algorithms to solve the swap matching problem. The resulting algorithms are adaptations of the classic shift-and algorithm. For patterns having length similar to the word-size of the target machine, both the algorithms run in linear time considering a fixed alphabet. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "The swap matching problem revisited", "paper_id": "WOS:000343784800003"}