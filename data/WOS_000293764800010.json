{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "path_intersection"}, {"score": 0.004602773636967002, "phrase": "freeman_chain_code"}, {"score": 0.00450020161335541, "phrase": "common_and_useful_way"}, {"score": 0.004399905285945236, "phrase": "discrete_paths"}, {"score": 0.0038431888954930083, "phrase": "discrete_plane"}, {"score": 0.003591733916159209, "phrase": "connected_discrete_sets"}, {"score": 0.0034332736827447654, "phrase": "closed_and_intersection"}, {"score": 0.0031606404966938568, "phrase": "multidimensional_radix_tree"}, {"score": 0.003113441660343867, "phrase": "data_structure"}, {"score": 0.002976019715894587, "phrase": "discrete_d-dimensional_space"}, {"score": 0.0027811441123794427, "phrase": "simple_and_efficient_algorithm"}, {"score": 0.0026186324161493225, "phrase": "extra_initialization"}, {"score": 0.0024842242921857705, "phrase": "space_complexities"}, {"score": 0.002392453087295391, "phrase": "fixed_dimension"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Freeman code", " Lattice paths", " Self-intersection", " Radix tree"], "paper_abstract": "The Freeman chain code is a common and useful way for representing discrete paths by means of words such that each letter encodes a step in a given direction. In the discrete plane Z(2) such a coding is widely used for representing connected discrete sets by their contour which forms a closed and intersection free path. In this paper, we use a multidimensional radix tree like data structure for storing paths in the discrete d-dimensional space Z(d). It allows to design a simple and efficient algorithm for detecting path intersection. Even though an extra initialization is required, the time and space complexities remain linear for any fixed dimension d. Several problems that are solved by adapting our algorithm are also discussed. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A linear time and space algorithm for detecting path intersection in Z(d)", "paper_id": "WOS:000293764800010"}