{"auto_keywords": [{"score": 0.046591905845561506, "phrase": "moving_objects"}, {"score": 0.008713768692145006, "phrase": "continuous_range_queries"}, {"score": 0.0066564661220455765, "phrase": "communication_cost"}, {"score": 0.006525810685334589, "phrase": "server_workload"}, {"score": 0.004590820632326585, "phrase": "scalable_evaluation"}, {"score": 0.0037336520904376687, "phrase": "system_performance"}, {"score": 0.0033269488835014583, "phrase": "novel_query_indexing_structure"}, {"score": 0.003248483521309273, "phrase": "query_region_tree"}, {"score": 0.0030000149283621286, "phrase": "available_computational_resources"}, {"score": 0.002917604283241353, "phrase": "overall_system_performance"}, {"score": 0.0027159094186967247, "phrase": "query_region"}, {"score": 0.002558495760339272, "phrase": "additional_non-spatial_selections"}, {"score": 0.0024488738006005133, "phrase": "non-spatial_information"}, {"score": 0.002316105585203396, "phrase": "comprehensive_simulations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Continuous range query", " Moving object", " Index structure", " Query indexing", " Location-based service", " Mobile/ubiquitous computing"], "paper_abstract": "In this paper, we explore the problem of the scalable evaluation of continuous range queries (CRQs) over moving objects, each of which continually retrieves the moving objects that are currently within a given query region of interest. Most existing methods assume that moving objects continually communicate with the server to report their current locations and the server continuously updates the results of queries. However, such an assumption degrades the system performance, because the communication cost is huge and the server workload is increased when the number of moving objects and queries is enormous. In this paper, we propose a novel query indexing structure, referred to as the Query Region tree (QR-tree), which allows the server to cooperate with moving objects efficiently by leveraging the available computational resources of the moving objects to improve the overall system performance. In addition, we present another version of the QR-tree, called the Bit-vector Query Region tree (BQR-tree), for the evaluation of CRQs that specify additional non-spatial selections. The BQR-tree stores a summary of the non-spatial information specified by CRQs in the form of bit-vectors. Through a series of comprehensive simulations, we verify the efficiency of the QR-tree and the BQR-tree in terms of the communication cost and server workload. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "QR-tree: An efficient and scalable method for evaluation of continuous range queries", "paper_id": "WOS:000336706000010"}