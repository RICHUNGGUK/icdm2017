{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "self-stabilizing_algorithms"}, {"score": 0.0428614620458835, "phrase": "random_bits"}, {"score": 0.004007083686875716, "phrase": "infinite_number"}, {"score": 0.003923023699005215, "phrase": "expected_bounded_number"}, {"score": 0.0035533891890176823, "phrase": "local_predicate"}, {"score": 0.0033817999428800457, "phrase": "global_consistency"}, {"score": 0.003195787852087248, "phrase": "local_predicates"}, {"score": 0.0030414140732789186, "phrase": "token_circulation_algorithm"}, {"score": 0.0029987076071536327, "phrase": "herman"}, {"score": 0.0024947974232053336, "phrase": "hoch"}, {"score": 0.0023408288327263294, "phrase": "distributed_computing"}, {"score": 0.0021049977753042253, "phrase": "first_constant_time"}], "paper_keywords": [""], "paper_abstract": "We present a scheme to convert self-stabilizing algorithms that use randomization during and following convergence to self-stabilizing algorithms that use randomization only during convergence. We thus reduce the number of random bits from an infinite number to an expected bounded number. The scheme is applicable to the cases in which there exits a local predicate for each node, such that global consistency is implied by the union of the local predicates. We demonstrate our scheme over the token circulation algorithm of Herman (Infor Process Lett 35:63-67, 1990) and the recent constant time Byzantine self-stabilizing clock synchronization algorithm by Ben-Or, Dolev and Hoch (Proceedings of the 27th Annual ACM SIGACT-SIGOPS symposium on principles of distributed computing, (PODC), 2008). The application of our scheme results in the first constant time Byzantine self-stabilizing clock synchronization algorithm that eventually stops using random bits.", "paper_title": "Randomization adaptive self-stabilization", "paper_id": "WOS:000282069200002"}