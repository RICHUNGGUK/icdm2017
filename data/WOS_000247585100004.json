{"auto_keywords": [{"score": 0.03558706453911331, "phrase": "trivial_instructions"}, {"score": 0.015719716506582538, "phrase": "high-performance_processors"}, {"score": 0.004749646583168342, "phrase": "trivial_instruct_ions"}, {"score": 0.004405919996432158, "phrase": "actual_computation"}, {"score": 0.0038431888954930083, "phrase": "source_operands"}, {"score": 0.0030460403366412126, "phrase": "speculative_trivialization_point"}, {"score": 0.002730240935688002, "phrase": "decode_stage"}, {"score": 0.002567180189640976, "phrase": "conventional_processor"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["high-performance processors", " trivial instructions", " value prediction"], "paper_abstract": "Trivial instruct ions are those instructions whose output can be determined without performing the actual computation. This is due to the fact that for these instructions the output is often either one of the source operands or zero (e.g., addition with or multiplication by zero). In this work we study trivial instructions and use our findings to improve performance in high-performance processors. In particular, we introduce speculative trivialization point advancing to detect and bypass trivial instructions as soon as possible and as early as the decode stage. Consequently, we improve performance over a conventional processor (up to 30%) and a processor that detects and bypasses trivial instructions at their conventional point of trivialization. (up to 5%). (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Speculative trivialization point advancing in high-performance processors", "paper_id": "WOS:000247585100004"}