{"auto_keywords": [{"score": 0.02390195893253067, "phrase": "apache"}, {"score": 0.00481495049065317, "phrase": "asbestos_operating_system"}, {"score": 0.004489327204473076, "phrase": "novel_labeling_and_isolation_mechanisms"}, {"score": 0.004274527415193801, "phrase": "exploitable_software_flaws"}, {"score": 0.004098578483988551, "phrase": "wide_range"}, {"score": 0.003985305257857655, "phrase": "asbestos's_kernel-enforced_labels"}, {"score": 0.003848088904418221, "phrase": "interprocess_communication_and_system-wide_information_flow"}, {"score": 0.0035625556447293804, "phrase": "single_process"}, {"score": 0.0033447157263095223, "phrase": "multiple_users"}, {"score": 0.0031845067058084583, "phrase": "single_user's_data"}, {"score": 0.0030747771905143273, "phrase": "web_server_demonstration_application"}, {"score": 0.002948066398723126, "phrase": "private_user_data"}, {"score": 0.0028664985822266344, "phrase": "untrusted_workers"}, {"score": 0.002787181295054319, "phrase": "client_requests"}, {"score": 0.0026722904884984348, "phrase": "exploited_workers"}, {"score": 0.0025801648787263662, "phrase": "user_data"}, {"score": 0.0024912073108138613, "phrase": "application_policy"}, {"score": 0.002439308179084911, "phrase": "server_application"}, {"score": 0.002289993730291136, "phrase": "connection_rates"}, {"score": 0.0021801944769738618, "phrase": "additional_security"}, {"score": 0.0021049977753042253, "phrase": "acceptable_cost"}], "paper_keywords": ["security", " design", " performance", " information flow", " labels", " mandatory access control", " process abstractions", " secure Web servers"], "paper_abstract": "Asbestos, a new operating system, provides novel labeling and isolation mechanisms that help contain the effects of exploitable software flaws. Applications can express a wide range of policies with Asbestos's kernel-enforced labels, including controls on interprocess communication and system-wide information flow. A new event process abstraction defines lightweight, isolated contexts within a single process, allowing one process to act on behalf of multiple users while preventing it from leaking any single user's data to others. A Web server demonstration application uses these primitives to isolate private user data. Since the untrusted workers that respond to client requests are constrained by labels, exploited workers cannot directly expose user data except as allowed by application policy. The server application requires 1.4 memory pages per user for up to 145,000 users and achieves connection rates similar to Apache, demonstrating that additional security can come at an acceptable cost.", "paper_title": "Labels and event processes in the Asbestos operating system", "paper_id": "WOS:000251909000003"}