{"auto_keywords": [{"score": 0.03867712206987222, "phrase": "computational_efficiency"}, {"score": 0.03291444850131273, "phrase": "hybrid_strategy"}, {"score": 0.00481495049065317, "phrase": "hybrid_differentiation_strategies"}, {"score": 0.004545240514015278, "phrase": "efficient_and_accurate_derivatives"}, {"score": 0.00429057323623293, "phrase": "numerical_methods"}, {"score": 0.004235938758522453, "phrase": "automatic_differentation"}, {"score": 0.004076157223660074, "phrase": "truncation-free_derivatives"}, {"score": 0.0038476708316022823, "phrase": "present_ad_tools"}, {"score": 0.003750260412839128, "phrase": "convenient_implementation_mechanism"}, {"score": 0.0035856674209019234, "phrase": "analytically_derived_versions"}, {"score": 0.00299622333197717, "phrase": "optimal_balance"}, {"score": 0.0028463059289874637, "phrase": "appropriate_components"}, {"score": 0.0027920359090544107, "phrase": "target_algorithms"}, {"score": 0.0027212777001495176, "phrase": "analytical_derivation"}, {"score": 0.0024399717841513354, "phrase": "ad_tools"}, {"score": 0.002259054486157494, "phrase": "partial_differential_equations"}, {"score": 0.0022302306304023602, "phrase": "gas_dynamics"}, {"score": 0.0021049977753042253, "phrase": "differentiable_equations"}], "paper_keywords": ["algorithms", " performance", " hybrid differentiation methods", " Euler equations", " automatic differentiation", " finite volume methods", " template overloading"], "paper_abstract": "Computationally efficient and accurate derivatives are important to the success of many different types of numerical methods. Automatic differentation (AD) approaches compute truncation-free derivatives and can be efficient in many cases. Although present AD tools can provide a convenient implementation mechanism, the computational efficiency rarely compares to analytically derived versions that have been carefully implemented. The focus of this work is to combine the strength of these methods into a hybrid strategy that attempts to achieve an optimal balance of implementation and computational efficiency by selecting the appropriate components of the target algorithms for AD and analytical derivation. Although several AD approaches can be considered, our focus is on the use of template overloading forward AD tools in C++ applications. We demonstrate this hybrid strategy for a system of partial differential equations in gas dynamics. These methods apply however to other systems of differentiable equations, including DAEs and ODEs.", "paper_title": "Hybrid differentiation strategies for simulation and analysis of applications in C++", "paper_id": "WOS:000259432800001"}