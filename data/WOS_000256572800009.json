{"auto_keywords": [{"score": 0.04938086173344481, "phrase": "improved_greedy_matching_algorithm"}, {"score": 0.03296660889708308, "phrase": "cpu_time"}, {"score": 0.031442661686401724, "phrase": "bb"}, {"score": 0.03114358479814018, "phrase": "t.h._chao"}, {"score": 0.03099614733985733, "phrase": "y.c._hsu"}, {"score": 0.030849385643539007, "phrase": "j.m._ho"}, {"score": 0.030414807306961167, "phrase": "zero"}, {"score": 0.030125612898978117, "phrase": "minimum_wirelength"}, {"score": 0.02998284550346883, "phrase": "ieee_trans"}, {"score": 0.00481495049065317, "phrase": "clock_routing"}, {"score": 0.004676173016967478, "phrase": "nanometer_territory"}, {"score": 0.004653433636670279, "phrase": "clock_network_layout"}, {"score": 0.004619530769352269, "phrase": "increasingly_important_role"}, {"score": 0.004585873765376289, "phrase": "circuit_quality"}, {"score": 0.0043147264956783565, "phrase": "existing_routing_algorithms"}, {"score": 0.0042728495339535676, "phrase": "continuous_increase"}, {"score": 0.004241707618476644, "phrase": "problem_size"}, {"score": 0.004210791715561724, "phrase": "high-performance_requirement"}, {"score": 0.00391371121233689, "phrase": "conventional_manhattan_routing"}, {"score": 0.0038380787059463075, "phrase": "zero_skew_clock_routing"}, {"score": 0.0037273513742154237, "phrase": "fitted_elmore_delay_model"}, {"score": 0.003646399625591736, "phrase": "elmore_delay_model"}, {"score": 0.003558506222096925, "phrase": "load_balance"}, {"score": 0.0034727240311194832, "phrase": "effective_and_efficient_greedy_matching_scheme"}, {"score": 0.00343060885627576, "phrase": "wire_snaking"}, {"score": 0.00336428077531883, "phrase": "proposed_algorithm"}, {"score": 0.003315374849824563, "phrase": "practical_applications"}, {"score": 0.0032992308493069978, "phrase": "experimental_results"}, {"score": 0.003283165201986546, "phrase": "benchmark_circuits"}, {"score": 0.0032433414042726356, "phrase": "gmzstx"}, {"score": 0.0031806224342452935, "phrase": "total_wirelength"}, {"score": 0.003081272473508291, "phrase": "zero_skew_clock"}, {"score": 0.003051330222508351, "phrase": "manhattan_plane"}, {"score": 0.0029850165163948484, "phrase": "top-down_balanced_bipartition"}, {"score": 0.002667869516253534, "phrase": "tree_topology"}, {"score": 0.0026419338604879404, "phrase": "deferred-merge_embedding"}, {"score": 0.0023611518030532096, "phrase": "internal_nodes"}, {"score": 0.002136087390959268, "phrase": "resulting_clock_tree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["clock network", " X-architecture", " zero-skew clock routing", " greedy matching"], "paper_abstract": "As technology advances into nanometer territory, clock network layout plays an increasingly important role in determining circuit quality indicated by timing, power consumption, cost, power supply noise and tolerance to process variation. To alleviate the challenges to the existing routing algorithms due to the continuous increase of the problem size and the high-performance requirement, X-architecture has been proposed and applied to routing in that it can reduce wirelength and via counts, and thus improves the performance and routability compared with the conventional Manhattan routing. In this paper, we investigate zero skew clock routing using X-architecture based on an improved greedy matching algorithm (GMZSTX). The fitted Elmore delay model is employed to improve the accuracy over the Elmore delay model. The interactions among distance, delay balance and load balance are analyzed. Based on this analysis, an effective and efficient greedy matching scheme is suggested to reduce wire snaking and to get a more balanced clock tree. The proposed algorithm is simple and fast for practical applications. Experimental results on benchmark circuits show that our algorithm (GMZSTX) achieves a reduction of 8.15% in total wirelength, 30.19% in delay and 55.31% in CPU time on average compared with zero skew clock routing in the Manhattan plane (BB + DME-2, which means using the top-down balanced bipartition (BB) method [T.H. Chao, Y.C. Hsu, J.M. Ho, et at., Zero skew routing with minimum wirelength, IEEE Trans. Circuits Syst. II-Analog & Digital Signal Process 39 (11) (1992) 799-814] to generate the tree topology and using the Deferred-Merge Embedding (DME) algorithm [T.H. Chao, Y.C. Hsu, J.M. Ho, et al., Zero skew routing with minimum wirelength, IEEE Trans. Circuits Syst. II-Analog & Digital Signal Process 39 (11) (1992) 799-814] to embed the internal nodes), and reduces delay and CPU time by 17.44% and 62.21% on average over the BB + DME-4 method (which is similar to BB + DME-2, but routing in X-architecture). Our SPICE simulation further verifies the correctness of the resulting clock tree. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Zero skew clock routing in X-architecture based on an improved greedy matching algorithm", "paper_id": "WOS:000256572800009"}