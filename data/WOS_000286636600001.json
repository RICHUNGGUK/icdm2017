{"auto_keywords": [{"score": 0.03644451033122436, "phrase": "gac"}, {"score": 0.013177350748202444, "phrase": "dc"}, {"score": 0.00481495049065317, "phrase": "comprehensive_study"}, {"score": 0.0047732596509542135, "phrase": "second-order_consistencies"}, {"score": 0.004650330504968421, "phrase": "inconsistent_pairs"}, {"score": 0.004550300345169981, "phrase": "constraint_satisfaction"}, {"score": 0.0044524122425287005, "phrase": "full_picture"}, {"score": 0.0037411604449359794, "phrase": "dual_consistency"}, {"score": 0.0036926236934657864, "phrase": "original_property"}, {"score": 0.0034894451015047875, "phrase": "generalized_arc_consistency"}, {"score": 0.0032974089700312423, "phrase": "constraint_solvers"}, {"score": 0.0031845067058084583, "phrase": "binary_constraint_networks"}, {"score": 0.00303553181618577, "phrase": "existing_constraints"}, {"score": 0.0029961221584602405, "phrase": "conservative_dual_consistency"}, {"score": 0.002970138831804861, "phrase": "cdc"}, {"score": 0.002880927789104712, "phrase": "traditional_conservative_consistencies"}, {"score": 0.002843519597398796, "phrase": "path_consistency"}, {"score": 0.002818850283787242, "phrase": "namely_partial_path_consistency"}, {"score": 0.0027943987588377067, "phrase": "ppc"}, {"score": 0.0027581067089091434, "phrase": "conservative_path_consistency"}, {"score": 0.0027341808500806154, "phrase": "cpc"}, {"score": 0.002663620639539737, "phrase": "general_algorithm"}, {"score": 0.0024950747439601863, "phrase": "wide_range"}, {"score": 0.00220848850454852, "phrase": "mac"}], "paper_keywords": [""], "paper_abstract": "In this paper, we propose a comprehensive study of second-order consistencies (i.e., consistencies identifying inconsistent pairs of values) for constraint satisfaction. We build a full picture of the relationships existing between four basic second-order consistencies, namely path consistency (PC), 3-consistency (3C), dual consistency (DC) and 2-singleton arc consistency (2SAC), as well as their conservative and strong variants. Interestingly, dual consistency is an original property that can be established by using the outcome of the enforcement of generalized arc consistency (GAC), which makes it rather easy to obtain since constraint solvers typically maintain GAC during search. On binary constraint networks, DC is equivalent to PC, but its restriction to existing constraints, called conservative dual consistency (CDC), is strictly stronger than traditional conservative consistencies derived from path consistency, namely partial path consistency (PPC) and conservative path consistency (CPC). After introducing a general algorithm to enforce strong (C) DC, we present the results of an experimentation over a wide range of benchmarks that demonstrate the interest of (conservative) dual consistency. In particular, we show that enforcing (C) DC before search clearly improves the performance of MAC (the algorithm that maintains GAC during search) on several binary and non-binary structured problems.", "paper_title": "Second-Order Consistencies", "paper_id": "WOS:000286636600001"}