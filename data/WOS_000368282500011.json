{"auto_keywords": [{"score": 0.04601284855430017, "phrase": "entire_file"}, {"score": 0.030351453433981775, "phrase": "allocated_budget"}, {"score": 0.009579233870825089, "phrase": "least_cost"}, {"score": 0.00481495049065317, "phrase": "distributed_storage"}, {"score": 0.004791330993892003, "phrase": "data_files"}, {"score": 0.004767826806287385, "phrase": "different_nodes"}, {"score": 0.004652016085325825, "phrase": "node_and_link_failures"}, {"score": 0.004439634831927606, "phrase": "multiple_copies"}, {"score": 0.004385367803204002, "phrase": "different_locations"}, {"score": 0.004278807087784626, "phrase": "file_segments"}, {"score": 0.004205752490816441, "phrase": "different_node_locations"}, {"score": 0.004093453936415085, "phrase": "file_f"}, {"score": 0.003877737556673229, "phrase": "reconstruction_scheme"}, {"score": 0.0037927885415997213, "phrase": "k_segments"}, {"score": 0.003462599815177726, "phrase": "node_failures"}, {"score": 0.0033452741392850523, "phrase": "disaster_situations"}, {"score": 0.0033288399506044763, "phrase": "natural_calamities"}, {"score": 0.0032881056673952054, "phrase": "disaster_zone"}, {"score": 0.003247868216333148, "phrase": "first_goal"}, {"score": 0.0031845067058084613, "phrase": "least_cost_file_storage_scheme"}, {"score": 0.0030464123943266673, "phrase": "largest_connected_component"}, {"score": 0.0030239842475439814, "phrase": "residual_network"}, {"score": 0.002843372121209168, "phrase": "storage_design"}, {"score": 0.0026867260506696455, "phrase": "arft_file_storage_system_design"}, {"score": 0.0026538282523433684, "phrase": "second_goal"}, {"score": 0.0026084451971464845, "phrase": "file_storage_schemes"}, {"score": 0.0025828604252720465, "phrase": "maximum_region"}, {"score": 0.0025262061502713683, "phrase": "third_goal"}, {"score": 0.0024586427394152196, "phrase": "coding_parameters"}, {"score": 0.002428530921948425, "phrase": "storage_requirements"}, {"score": 0.0023928819778638055, "phrase": "maximum_region_fault-tolerant_design"}, {"score": 0.002272172245295404, "phrase": "optimal_solutions"}, {"score": 0.002255431275670053, "phrase": "integer_linear_program"}, {"score": 0.002238813373820782, "phrase": "simulation_results"}, {"score": 0.0022168460543913787, "phrase": "approximation_algorithms"}, {"score": 0.0021363670305843403, "phrase": "optimal_solution"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["distributed data storage", " region-based faults", " fault tolerance", " ( N,K) coding", " budget constraints", " connected components"], "paper_abstract": "Distributed storage of data files in different nodes of a network enhances its fault tolerance capability by offering protection against node and link failures. Reliability is often achieved through redundancy in one of the following two ways: (i) storage of multiple copies of the entire file at different locations (nodes) or (ii) storage of file segments (not entire files) at different node locations. In the (N, K) file distribution scheme, N file segments from a file F are created in such a way that it is possible to reconstruct the entire file, just by accessing any K = N segments. For the reconstruction scheme to work, it is essential that the K segments of the file are stored in nodes that are connected in the network. However, in the event of node/link failures, the network might become disconnected (i.e.,split into several connected components). We focus on node failures that are spatially correlated or region based. Such failures are often encountered in disaster situations or natural calamities where only the nodes in the disaster zone are affected. The first goal of this research is to design a least cost file storage scheme to ensure that no matter which region is destroyed; resulting in fragmentation of the network, a largest connected component of the residual network will have enough file segments with which to reconstruct the entire file. In case the least cost to ensure this objective is within the allocated budget, the storage design will be all region fault-tolerant (ARFT). In case the least cost exceeds the allocated budget, design of an ARFT file storage system design is impossible. The second goal of this research is to design file storage schemes that will be maximum region fault-tolerant within the allocated budget. The third goal of this research is to investigate the impact of the coding parameters N and K on storage requirements for ensuring all region or maximum region fault-tolerant design. We provide approximation algorithms for the problems and evaluate their performance through simulation using two real networks and compare their results to the optimal solutions obtained using Integer Linear Program. The simulation results demonstrate that the approximation algorithms almost always produce near optimal results in a fraction of the time needed to find the optimal solution. (c) 2015 Wiley Periodicals, Inc. NETWORKS, Vol. 66(4), 380-395 2015", "paper_title": "Region-Based Fault-Tolerant Distributed File Storage System Design in Networks", "paper_id": "WOS:000368282500011"}