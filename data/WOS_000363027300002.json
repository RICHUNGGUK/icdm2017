{"auto_keywords": [{"score": 0.028733600349064685, "phrase": "dbtp"}, {"score": 0.012256362915251383, "phrase": "btp"}, {"score": 0.010802767077250424, "phrase": "dual_representation"}, {"score": 0.00481495049065317, "phrase": "non-binary_csps"}, {"score": 0.004771435352180973, "phrase": "new_islands"}, {"score": 0.004657299036322549, "phrase": "csp_instances"}, {"score": 0.004532141038197266, "phrase": "fundamental_task"}, {"score": 0.004464061452094005, "phrase": "constraint_satisfaction_problems"}, {"score": 0.004397000006837371, "phrase": "hybrid_tractable_class"}, {"score": 0.004138637076221288, "phrase": "structural_properties"}, {"score": 0.003919064949140323, "phrase": "hybrid_class"}, {"score": 0.0038953958723049287, "phrase": "non-binary_csp_instances"}, {"score": 0.003767738552860633, "phrase": "broken_triangle_property"}, {"score": 0.0036998728605395384, "phrase": "cooper_et_al"}, {"score": 0.0036663981146086103, "phrase": "artificial_intelligence"}, {"score": 0.003535489842686145, "phrase": "tractable_class"}, {"score": 0.0034823290869920804, "phrase": "binary_instances"}, {"score": 0.0033376791052242907, "phrase": "arbitrary_arities"}, {"score": 0.003189336613974262, "phrase": "new_definition"}, {"score": 0.0031035049228517715, "phrase": "semantic_property"}, {"score": 0.0030661003993462665, "phrase": "compatibility_relations"}, {"score": 0.0029655392888938295, "phrase": "dual_broken_triangle_property"}, {"score": 0.0027741761880779535, "phrase": "known_classes"}, {"score": 0.0026268035120419536, "phrase": "well_known_tractable_classes"}, {"score": 0.0025872705784794198, "phrase": "beta-acyclic_csps"}, {"score": 0.0024572448003065423, "phrase": "new_results"}, {"score": 0.0024423826953133844, "phrase": "btp."}, {"score": 0.002383825621519496, "phrase": "practical_viewpoint"}, {"score": 0.0021049977753042253, "phrase": "dbtp_class"}], "paper_keywords": ["Constraint satisfaction", " Tractable class"], "paper_abstract": "Find new islands of tractability, that is classes of CSP instances for which polytime algorithms exist, is a fundamental task in the study of constraint satisfaction problems. The concept of hybrid tractable class, which allows to deal simultaneously with the restrictions of languages and, for example, the satisfaction of structural properties, is an approach which has already shown its interest in this domain. Here we study a hybrid class for non-binary CSP instances. With this aim in view, we consider the Broken Triangle Property (BTP) introduced in Cooper et al. (Artificial Intelligence, 174, 570-584 2010). While this tractable class has been defined for binary instances, the authors have suggested to extend it to instances with constraints of arbitrary arities, using the dual representation of such CSPs. We develop this idea by proposing a new definition without exploiting the dual representation, but using a semantic property associated to the compatibility relations of the constraints. This class is called DBTP for Dual Broken Triangle Property. We study it in depth, firstly to show that it is tractable. Then we compare it to some known classes. In particular, we prove that DBTP is incomparable with BTP and that it includes some well known tractable classes of CSPs such as beta-acyclic CSPs. Then, we compare it with the Hyper-k-Consistency, which allows us to also present new results for BTP. Finally, we analyse DBTP from a practical viewpoint, by first highlighting that some benchmarks which are classically used to compare the solvers are included in DBTP and then by explaining the efficiency of solvers of the state of the art on such instances thanks to their membership of the DBTP class.", "paper_title": "A hybrid tractable class for non-binary CSPs", "paper_id": "WOS:000363027300002"}