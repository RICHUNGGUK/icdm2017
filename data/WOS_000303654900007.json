{"auto_keywords": [{"score": 0.03329471463625431, "phrase": "krylov_subspace"}, {"score": 0.015719716506582538, "phrase": "exponential_integrators"}, {"score": 0.012811375745116071, "phrase": "matrix_function"}, {"score": 0.004518442937844318, "phrase": "large_system"}, {"score": 0.004470823343432748, "phrase": "linear_ordinary_differential_equations"}, {"score": 0.004353948887538618, "phrase": "polynomial_inhomogeneity"}, {"score": 0.003978866233891427, "phrase": "initial_condition"}, {"score": 0.00385431710959668, "phrase": "linear_combination"}, {"score": 0.0037935066882208235, "phrase": "matrix_exponential_and_other_functions"}, {"score": 0.003578600071301459, "phrase": "major_computational_burden"}, {"score": 0.0033937776228549557, "phrase": "general_odes"}, {"score": 0.003117655323170177, "phrase": "arnoldi"}, {"score": 0.0030847461428168614, "phrase": "lanczos_iteration"}, {"score": 0.002416589459425828, "phrase": "required_accuracy"}, {"score": 0.002316105585203396, "phrase": "matlab_function_phipm"}, {"score": 0.0021049977753042253, "phrase": "phipm_function"}], "paper_keywords": ["Algorithms", " Theory", " Krylov subspace methods", " exponential integrators", " matrix exponential"], "paper_abstract": "We develop an algorithm for computing the solution of a large system of linear ordinary differential equations (ODEs) with polynomial inhomogeneity. This is equivalent to computing the action of a certain matrix function on the vector representing the initial condition. The matrix function is a linear combination of the matrix exponential and other functions related to the exponential (the so-called phi-functions). Such computations are the major computational burden in the implementation of exponential integrators, which can solve general ODEs. Our approach is to compute the action of the matrix function by constructing a Krylov subspace using Arnoldi or Lanczos iteration and projecting the function on this subspace. This is combined with time-stepping to prevent the Krylov subspace from growing too large. The algorithm is fully adaptive: it varies both the size of the time steps and the dimension of the Krylov subspace to reach the required accuracy. We implement this algorithm in the MATLAB function phipm and we give instructions on how to obtain and use this function. Various numerical experiments show that the phipm function is often significantly more efficient than the state-of-the-art.", "paper_title": "Algorithm 919: A Krylov Subspace Algorithm for Evaluating the phi-Functions Appearing in Exponential Integrators", "paper_id": "WOS:000303654900007"}