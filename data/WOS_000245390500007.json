{"auto_keywords": [{"score": 0.04926219622874721, "phrase": "apl"}, {"score": 0.00481495049065317, "phrase": "adaptive_prototype_learning"}, {"score": 0.0037834649508375544, "phrase": "weighted_averages"}, {"score": 0.0034118234596993836, "phrase": "distance_measures"}, {"score": 0.0031845067058084583, "phrase": "theoretical_viewpoint"}, {"score": 0.0027503564589458837, "phrase": "soft_version"}, {"score": 0.0025892330566358503, "phrase": "non-zero_training_error"}, {"score": 0.00241658945942583, "phrase": "generalization_power"}, {"score": 0.0023548511815224098, "phrase": "resultant_classifier"}, {"score": 0.0022749744354271834, "phrase": "proposed_algorithms"}, {"score": 0.002236055625099805, "phrase": "twelve_uci_benchmark_data_sets"}], "paper_keywords": ["adaptive prototype learning", " cluster-based prototypes", " consistency", " instance-based prototype", " pattern classification"], "paper_abstract": "In this paper, we propose a number of adaptive prototype learning (APL) algorithms. They employ the same algorithmic scheme to determine the number and location of prototypes, but differ in the use of samples or the weighted averages of samples as prototypes, and also in the assumption of distance measures. To understand these algorithms from a theoretical viewpoint, we address their convergence properties, as well as their consistency under certain conditions. We also present a soft version of APL, in which a non-zero training error is allowed in order to enhance the generalization power of the resultant classifier. Applying the proposed algorithms to twelve UCI benchmark data sets, we demonstrate that they outperform many instance-based learning algorithms, the k-nearest neighbor rule, and support vector machines in terms of average test accuracy.", "paper_title": "Adaptive prototype learning algorithms: Theoretical and experimental studies", "paper_id": "WOS:000245390500007"}