{"auto_keywords": [{"score": 0.03756652729061808, "phrase": "msfla"}, {"score": 0.013024286937128125, "phrase": "sfla"}, {"score": 0.00481495049065317, "phrase": "extremal_optimisation"}, {"score": 0.004769444094319619, "phrase": "continuous_optimisation"}, {"score": 0.0046797114400479135, "phrase": "evolutionary_computing_methods"}, {"score": 0.004420472010542188, "phrase": "unconstrained_optimisation_problems"}, {"score": 0.004296264970612285, "phrase": "hybrid_scheme"}, {"score": 0.004155742403177802, "phrase": "global_search_algorithm"}, {"score": 0.003725470458263889, "phrase": "strong_robustness"}, {"score": 0.00369022262431101, "phrase": "fast_convergence"}, {"score": 0.0036553070575015344, "phrase": "high-dimensional_continuous_function_optimisation"}, {"score": 0.003603549914861701, "phrase": "modified_shuffled_frog-leaping_algorithm"}, {"score": 0.0034526191487098093, "phrase": "leaping_rule"}, {"score": 0.003371508176308189, "phrase": "leaping_step_size"}, {"score": 0.003307988966112615, "phrase": "leaping_inertia_component"}, {"score": 0.0032456625605347417, "phrase": "social_behaviour"}, {"score": 0.003154360892955196, "phrase": "local_search_ability"}, {"score": 0.0029935819213085493, "phrase": "eo"}, {"score": 0.002923214590192792, "phrase": "excellent_local_exploration_capability"}, {"score": 0.002868116925014397, "phrase": "local_exploration_process"}, {"score": 0.002827474331638941, "phrase": "msfla."}, {"score": 0.0027348611289528583, "phrase": "coarse-grained_cauchy_mutation"}, {"score": 0.002696101728474703, "phrase": "fine-grained_gaussian_mutation"}, {"score": 0.0026452734009203764, "phrase": "standard_particle_swarm_optimisation"}, {"score": 0.0025343769150179764, "phrase": "six_widely_used_benchmark_examples"}, {"score": 0.0024984517279573906, "phrase": "hybrid_msfia-eo"}, {"score": 0.0024281181691350085, "phrase": "good_and_robust_choice"}, {"score": 0.0023936956017015696, "phrase": "high-dimensional_continuous_function_optimisation_problems"}, {"score": 0.0022824314760583834, "phrase": "mean_function_values"}, {"score": 0.0021049977753042253, "phrase": "rough_measure"}], "paper_keywords": ["Evolutionary computation", " Extremal optimisation", " Shuffled frog-leaping algorithm", " Particle swarm optimisation", " Continuous optimisation"], "paper_abstract": "Several types of evolutionary computing methods are documented in the literature and are well known for solving unconstrained optimisation problems. This paper proposes a hybrid scheme that combines the merits of a global search algorithm, the shuffled frog-leaping algorithm (SFLA) and local exploration, extremal optimisation (EO) and that exhibits strong robustness and fast convergence for high-dimensional continuous function optimisation. A modified shuffled frog-leaping algorithm (MSFLA) is investigated that improves the leaping rule by properly extending the leaping step size and adding a leaping inertia component to account for social behaviour. To further improve the local search ability of MSFLA and speed up convergence, we occasionally introduce EO, which has an excellent local exploration capability, in the local exploration process of the MSFLA. It is characterised by alternating the coarse-grained Cauchy mutation and the fine-grained Gaussian mutation. Compared with standard particle swarm optimisation (PSO), SFLA and MSFLA for six widely used benchmark examples, the hybrid MSFIA-EO is shown to be a good and robust choice for solving high-dimensional continuous function optimisation problems. It possesses excellent performance in terms of the mean function values, the success rate and the fitness function evaluations (FFE), which is a rough measure of the complexity of the algorithm. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "An improved shuffled frog-leaping algorithm with extremal optimisation for continuous optimisation", "paper_id": "WOS:000302511900011"}