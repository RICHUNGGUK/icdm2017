{"auto_keywords": [{"score": 0.04937176974353987, "phrase": "software_plagiarism_detection"}, {"score": 0.00481495049065317, "phrase": "runtime_values"}, {"score": 0.00470862827326028, "phrase": "illegal_code_reuse"}, {"score": 0.0046390482426405324, "phrase": "serious_threat"}, {"score": 0.004587535692463736, "phrase": "software_community"}, {"score": 0.004553510708976456, "phrase": "identifying_similar_or_identical_code_fragments"}, {"score": 0.00445293569103488, "phrase": "code_theft_cases"}, {"score": 0.004274257668843717, "phrase": "stolen_code"}, {"score": 0.004195418010131832, "phrase": "previous_works"}, {"score": 0.0039380388343479384, "phrase": "advanced_obfuscation_techniques"}, {"score": 0.0037940502405699765, "phrase": "source_code_analysis"}, {"score": 0.0037101871762082153, "phrase": "source_code"}, {"score": 0.0036826452656927877, "phrase": "suspicious_programs"}, {"score": 0.003587842947046177, "phrase": "strong_evidences"}, {"score": 0.0034437574674180365, "phrase": "critical_runtime_values"}, {"score": 0.003293142761521425, "phrase": "semantics-preserving_transformation_techniques"}, {"score": 0.003232341244892437, "phrase": "novel_approach"}, {"score": 0.0032083351151314405, "phrase": "dynamic_characterization"}, {"score": 0.0031845067058084583, "phrase": "executable_programs"}, {"score": 0.0030565692640988585, "phrase": "data_obfuscation_techniques"}, {"score": 0.0028903278985330117, "phrase": "critical_values"}, {"score": 0.002815864555488112, "phrase": "runtime_property"}, {"score": 0.0026626797255348287, "phrase": "dynamic_taint_analyzer"}, {"score": 0.0026330549554033876, "phrase": "generic_processor_emulator"}, {"score": 0.0025940660106162404, "phrase": "vapd"}, {"score": 0.0025556529150386168, "phrase": "longest_common_subsequence"}, {"score": 0.002363101338529545, "phrase": "real-world_automated_obfuscators"}, {"score": 0.002293616682932668, "phrase": "value-based_method"}, {"score": 0.0022428442879034614, "phrase": "sandmark"}, {"score": 0.002193193339812606, "phrase": "klassmaster"}, {"score": 0.0021526576842206234, "phrase": "thicket"}], "paper_keywords": ["Software plagiarism detection", " dynamic code identification"], "paper_abstract": "Illegal code reuse has become a serious threat to the software community. Identifying similar or identical code fragments becomes much more challenging in code theft cases where plagiarizers can use various automated code transformation or obfuscation techniques to hide stolen code from being detected. Previous works in this field are largely limited in that (i) most of them cannot handle advanced obfuscation techniques, and (ii) the methods based on source code analysis are not practical since the source code of suspicious programs typically cannot be obtained until strong evidences have been collected. Based on the observation that some critical runtime values of a program are hard to be replaced or eliminated by semantics-preserving transformation techniques, we introduce a novel approach to dynamic characterization of executable programs. Leveraging such invariant values, our technique is resilient to various control and data obfuscation techniques. We show how the values can be extracted and refined to expose the critical values and how we can apply this runtime property to help solve problems in software plagiarism detection. We have implemented a prototype with a dynamic taint analyzer atop a generic processor emulator. Our value-based plagiarism detection method (VaPD) uses the longest common subsequence based similarity measuring algorithms to check whether two code fragments belong to the same lineage. We evaluate our proposed method through a set of real-world automated obfuscators. Our experimental results show that the value-based method successfully discriminates 34 plagiarisms obfuscated by SandMark, plagiarisms heavily obfuscated by KlassMaster, programs obfuscated by Thicket, and executables obfuscated by Loco/Diablo.", "paper_title": "Program Characterization Using Runtime Values and Its Application to Software Plagiarism Detection", "paper_id": "WOS:000361700500005"}