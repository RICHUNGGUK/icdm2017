{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "knowledge-based_software_engineering"}, {"score": 0.0043258453436258405, "phrase": "formal_requirements_specification_language"}, {"score": 0.004227653047394939, "phrase": "important_role"}, {"score": 0.004163427731140163, "phrase": "software_development"}, {"score": 0.00385658790017119, "phrase": "requirements_specification"}, {"score": 0.0035722806911457545, "phrase": "software_development_life_cycle"}, {"score": 0.0034911335714333507, "phrase": "frorl_project"}, {"score": 0.0032836104153151973, "phrase": "solid_logical_foundation"}, {"score": 0.002690406375639144, "phrase": "industrial_applications"}, {"score": 0.0026091594819333654, "phrase": "code_generation_tool"}, {"score": 0.002530359917257626, "phrase": "embedded_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Formal specification language", " Nonmonotonic logic", " Formal verification", " Automatic code generation", " Knowledge-based software engineering"], "paper_abstract": "A formal requirements specification language plays an important role in software development. Not only can such language be used for stating requirements specification, but also can be used in many phases of software development life cycle. The FRORL project started from constructing a language with a solid logical foundation and further expanded to research in verification, validation, requirements analysis, debugging, and transformation. Research in this project aided in some industrial applications in which a code generation tool produced software for embedded systems. This article reports the experiences gained from this project and states the value of research in knowledge-based software engineering. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Experience on knowledge-based software engineering: A logic-based requirements language and its industrial applications", "paper_id": "WOS:000270628100003"}