{"auto_keywords": [{"score": 0.029862490220946277, "phrase": "sigma"}, {"score": 0.00481495049065317, "phrase": "closest_string_problem"}, {"score": 0.0047057084749407485, "phrase": "n_strings"}, {"score": 0.004669845451682529, "phrase": "length_l"}, {"score": 0.004616560363089716, "phrase": "radius_d"}, {"score": 0.004276468590041119, "phrase": "hamming_distance"}, {"score": 0.004023270170986068, "phrase": "np"}, {"score": 0.003916098498242888, "phrase": "polynomial_time_approximation_scheme"}, {"score": 0.0038418515481939463, "phrase": "parameterized_algorithms"}, {"score": 0.0035586268203884673, "phrase": "new_approach"}, {"score": 0.003398780792129312, "phrase": "parameterized_algorithm"}, {"score": 0.003372844338742438, "phrase": "binary_strings"}, {"score": 0.002960922610176301, "phrase": "arbitrary_alphabet_sizes"}, {"score": 0.0026698611202305715, "phrase": "vertical_bar"}, {"score": 0.0026596472456182707, "phrase": "sigma_vertical_bar"}, {"score": 0.002629238854352447, "phrase": "alphabet_size"}, {"score": 0.0023798115577749225, "phrase": "new_time"}, {"score": 0.0022990901047984197, "phrase": "small_alphabets"}, {"score": 0.0021375377706211686, "phrase": "dna_strings"}], "paper_keywords": ["Computational biology", " The closest string problem", " Fixed-parameter algorithms"], "paper_abstract": "Given a set of n strings of length L and a radius d, the closest string problem (CSP for short) asks for a string t(sol) that is within a Hamming distance of d to each of the given strings. It is known that the problem is NP-hard and its optimization version admits a polynomial time approximation scheme (PTAS). Parameterized algorithms have been then developed to solve the problem when d is small. In this paper, with a new approach (called the 3-string approach), we first design a parameterized algorithm for binary strings that runs in O (nL + nd(3).6.731(d)) time, while the previous best runs in O (nL + nd.8(d)) time. We then extend the algorithm to arbitrary alphabet sizes, obtaining an algorithm that runs in time O(nL + nd.(1.612(vertical bar Sigma vertical bar + beta(2) + beta - 2))(d)), where vertical bar Sigma vertical bar is the alphabet size and beta = alpha(2) + 1 - 2 alpha(-1) + alpha(2) with alpha = 3 root root vertical bar Sigma vertical bar - 1 + 1. This new time bound is better than the previous best for small alphabets, including the very important case where vertical bar Sigma vertical bar = 4 (i.e., the case of DNA strings). (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "A three-string approach to the closest string problem", "paper_id": "WOS:000297833200011"}