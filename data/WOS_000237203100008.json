{"auto_keywords": [{"score": 0.04958923365267513, "phrase": "labeled_transition_systems"}, {"score": 0.0446448005937327, "phrase": "application-specific_codes"}, {"score": 0.029882824601805056, "phrase": "hot_spots"}, {"score": 0.00481495049065317, "phrase": "application_framework_selection"}, {"score": 0.004733123544564746, "phrase": "framework_technology"}, {"score": 0.0046526806928044485, "phrase": "promising_approaches"}, {"score": 0.004605069682942661, "phrase": "effectively_software"}, {"score": 0.004465126965932753, "phrase": "suitable_frameworks"}, {"score": 0.004419426676931621, "phrase": "software_requirements_specification"}, {"score": 0.004299823165101385, "phrase": "suitable_hot_spots"}, {"score": 0.004140613635632826, "phrase": "new_technique"}, {"score": 0.004112303664150895, "phrase": "automated_support"}, {"score": 0.0039464466517932706, "phrase": "metrics_technique"}, {"score": 0.003800271653332246, "phrase": "system_behavior"}, {"score": 0.0037484651075873933, "phrase": "requirements_specification"}, {"score": 0.0036469533983843755, "phrase": "bisimilar_relationship"}, {"score": 0.0032009501549788576, "phrase": "bisimilar_relationships"}, {"score": 0.00265909739882579, "phrase": "corresponding_hot_spot"}, {"score": 0.002587010112064415, "phrase": "developer's_efforts"}, {"score": 0.002201187194326849, "phrase": "selected_implementation"}, {"score": 0.002163682878218085, "phrase": "case_studies"}, {"score": 0.002126816206925344, "phrase": "web_application"}, {"score": 0.0021049977753042253, "phrase": "struts_and_turbine"}], "paper_keywords": ["application framework", " labeled transition system"], "paper_abstract": "Framework technology is one of the promising approaches to reuse effectively software and its key issues are 1) to select the suitable frameworks for the software requirements specification, and 2) to fill the suitable hot spots with application-specific codes (customization). This paper proposes a new technique for automated support of the above issues by using labeled transition systems (LTSs) together with metrics technique. We model the behavior of the frameworks and the system behavior specified in the requirements specification by using two LTSs respectively. By establishing bisimilar relationship between the two LTSs, we check whether the behavior of the framework can match to the requirements and explore how to fill its hot spots. This process is done by means of constructing a graph to extract the bisimilar relationships, and each path of the graph denotes one of the implementations of the requirements by the framework. We attach some measures to the LTS of the framework, such as the number of the hot spots to be filled and the number of the parameters to be set up when filling the corresponding hot spot. These measures are used to estimate developer's efforts in filling the hot spots for each implementation, i.e. for each path of the graph. The result of estimating the efforts guides the developers to select the implementation, and the structure of the application-specific codes to be filled in can be automatically generated from the selected implementation. Furthermore we discuss case studies in the area of Web application, where Struts and Turbine can be used.", "paper_title": "Supporting application framework selection based on labeled transition systems", "paper_id": "WOS:000237203100008"}