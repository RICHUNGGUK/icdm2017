{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "chemical_searches"}, {"score": 0.004338076511024884, "phrase": "long_binary_fingerprint_vectors"}, {"score": 0.004035777314816881, "phrase": "particular_functional_groups"}, {"score": 0.003971502222405927, "phrase": "combinatorial_features"}, {"score": 0.002974281028713475, "phrase": "large_databases"}, {"score": 0.0029268619875960715, "phrase": "small_molecules"}, {"score": 0.002857143106182505, "phrase": "previously_developed_tree_and_hashing_data_structures"}, {"score": 0.0026792166577171476, "phrase": "false_negatives"}, {"score": 0.002512342528545883, "phrase": "mathematical_analysis"}, {"score": 0.0021049977753042253, "phrase": "simulation_experiments"}], "paper_keywords": ["Drug design", " Computational chemistry", " Tree data structures", " Hashing data structures"], "paper_abstract": "In many large chemoinformatics database systems, molecules are represented by long binary fingerprint vectors whose components record the presence or absence of particular functional groups or combinatorial features. For a given query molecule, one is interested in retrieving all the molecules in the database with a similarity to the query above a certain threshold. Here we describe a method for speeding up chemical searches in these large databases of small molecules by combining previously developed tree and hashing data structures to prune the search space without any false negatives. More importantly, we provide a mathematical analysis that allows one to predict the level of pruning, and validate the quality of the predictions of the method through simulation experiments.", "paper_title": "Tree and Hashing Data Structures to Speed up Chemical Searches: Analysis and Experiments", "paper_id": "WOS:000295878500005"}