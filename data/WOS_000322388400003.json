{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "variability-intensive_systems"}, {"score": 0.004695183699894267, "phrase": "ltl_model_checking"}, {"score": 0.0046547831901035345, "phrase": "snip"}, {"score": 0.0044870272550540415, "phrase": "software_product_line_engineering"}, {"score": 0.004309725894724034, "phrase": "large_family"}, {"score": 0.004266501496765747, "phrase": "different_systems"}, {"score": 0.004118587636081584, "phrase": "thorough_quality_assurance_techniques"}, {"score": 0.0037423521744765075, "phrase": "single_systems"}, {"score": 0.003558294449586273, "phrase": "whole_system_family"}, {"score": 0.0034003686971964707, "phrase": "efficient_automata-based_approach"}, {"score": 0.003299006622694739, "phrase": "ltl"}, {"score": 0.0031366648074858555, "phrase": "earlier_work"}, {"score": 0.003058515297281172, "phrase": "featured_transitions_systems"}, {"score": 0.0028355237433457313, "phrase": "variability-intensive_system"}, {"score": 0.002792920987211859, "phrase": "fts"}, {"score": 0.002764856305713066, "phrase": "checking_algorithms"}, {"score": 0.0024742098091226203, "phrase": "important_theoretical_aspects"}, {"score": 0.0024125253170522816, "phrase": "parallel_composition"}, {"score": 0.0023170054862555896, "phrase": "vacuity_detection"}, {"score": 0.002214048743052355, "phrase": "in-depth_treatment"}, {"score": 0.0021807544600219216, "phrase": "fts_model"}, {"score": 0.0021697677572213086, "phrase": "checking_algorithm"}], "paper_keywords": ["Formal methods", " model checking", " verification", " variability", " features", " software product lines"], "paper_abstract": "The premise of variability-intensive systems, specifically in software product line engineering, is the ability to produce a large family of different systems efficiently. Many such systems are critical. Thorough quality assurance techniques are thus required. Unfortunately, most quality assurance techniques were not designed with variability in mind. They work for single systems, and are too costly to apply to the whole system family. In this paper, we propose an efficient automata-based approach to linear time logic (LTL) model checking of variability-intensive systems. We build on earlier work in which we proposed featured transitions systems (FTSs), a compact mathematical model for representing the behaviors of a variability-intensive system. The FTS model checking algorithms verify all products of a family at once and pinpoint those that are faulty. This paper complements our earlier work, covering important theoretical aspects such as expressiveness and parallel composition as well as more practical things like vacuity detection and our logic feature LTL. Furthermore, we provide an in-depth treatment of the FTS model checking algorithm. Finally, we present SNIP, a new model checker for variability-intensive systems. The benchmarks conducted with SNIP confirm the speedups reported previously.", "paper_title": "Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking", "paper_id": "WOS:000322388400003"}