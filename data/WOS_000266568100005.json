{"auto_keywords": [{"score": 0.03668709025874424, "phrase": "full_set"}, {"score": 0.029823520158227448, "phrase": "non-redundant_rules"}, {"score": 0.014968490410194981, "phrase": "sequential_rules"}, {"score": 0.011711736701261095, "phrase": "mined_rules"}, {"score": 0.00481495049065317, "phrase": "sequential_rule"}, {"score": 0.004444921827311577, "phrase": "sequential_format"}, {"score": 0.004377719094086111, "phrase": "purchase_histories"}, {"score": 0.00434449804021954, "phrase": "network_logs"}, {"score": 0.004311527998148399, "phrase": "program_execution_traces"}, {"score": 0.004134596278123439, "phrase": "syntactic_characterization"}, {"score": 0.004087609837102023, "phrase": "non-redundant_set"}, {"score": 0.003964896373751171, "phrase": "compact_set"}, {"score": 0.003934795713147731, "phrase": "representative_patterns"}, {"score": 0.003536526698282596, "phrase": "composite_filter"}, {"score": 0.003417247483597346, "phrase": "non-redundant_subset"}, {"score": 0.0031422859551159506, "phrase": "pattern_sets"}, {"score": 0.0028893844749296863, "phrase": "rule_sets"}, {"score": 0.0028347983387988847, "phrase": "tight_and_complete_set"}, {"score": 0.002646665861584495, "phrase": "compressed_set"}, {"score": 0.0025089940342989227, "phrase": "compressed_representation"}, {"score": 0.0023069440108381364, "phrase": "performance_study"}, {"score": 0.0022719915771356354, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Theoretical data mining", " Frequent pattern mining", " Sequential pattern mining", " Sequential rules", " Non-redundant rules"], "paper_abstract": "A sequential rule expresses a relationship between two series of events happening one after another. Sequential rules are potentially useful for analyzing data in sequential format, ranging from purchase histories, network logs and program execution traces. In this work, we investigate and propose a syntactic characterization of a non-redundant set of sequential rules built upon past work on compact set of representative patterns. A rule is redundant if it can be inferred from another rule having the same support and confidence. When using the set of mined rules as a composite filter, replacing a full set of rules with a non-redundant subset of the rules does not impact the accuracy of the filter. We consider several rule sets based on composition of various types of pattern sets-generators, projected-database generators, closed patterns and projected-database closed patterns. We investigate the completeness and tightness of these rule sets. We characterize a tight and complete set of non-redundant rules by defining it based on the composition of two pattern sets. Furthermore, we propose a compressed set of non-redundant rules in a spirit similar to how closed patterns serve as a compressed representation of a full set of patterns. Lastly, we propose an algorithm to mine this compressed set of non-redundant rules. A performance study shows that the proposed algorithm significantly improves both the runtime and compactness of mined rules over mining a full set of sequential rules. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Non-redundant sequential rules-Theory and algorithm", "paper_id": "WOS:000266568100005"}