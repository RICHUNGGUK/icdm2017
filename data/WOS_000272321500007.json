{"auto_keywords": [{"score": 0.049387699203582415, "phrase": "distributed_systems"}, {"score": 0.048841799272134626, "phrase": "bda"}, {"score": 0.00481495049065317, "phrase": "uml-based_analysis"}, {"score": 0.0047178930715062704, "phrase": "behavioral_dependency_analysis"}, {"score": 0.004609352548073816, "phrase": "dependency_information"}, {"score": 0.004529581568905548, "phrase": "high_priority"}, {"score": 0.004503297824977738, "phrase": "industrial_software_systems"}, {"score": 0.004031786919040826, "phrase": "risk_analysis"}, {"score": 0.00398510860837973, "phrase": "load_planning"}, {"score": 0.003961971696168206, "phrase": "fault_tolerance"}, {"score": 0.0038148090091532933, "phrase": "source_code"}, {"score": 0.0036945485333312747, "phrase": "model-driven_development"}, {"score": 0.0035885019925285394, "phrase": "model-based_bda_techniques"}, {"score": 0.0034753508746887957, "phrase": "previous_work"}, {"score": 0.003326762498260739, "phrase": "distributed_objects"}, {"score": 0.0032786537599187125, "phrase": "uml_behavioral_models"}, {"score": 0.0029435555176530732, "phrase": "real-world_systems"}, {"score": 0.0026272523687965615, "phrase": "new_bda_metrics"}, {"score": 0.0025592131046551472, "phrase": "different_weighting_mechanisms"}, {"score": 0.002529540325742311, "phrase": "example_application"}, {"score": 0.002507511169156787, "phrase": "proposed_metrics"}, {"score": 0.0023862457972716523, "phrase": "interesting_observations"}, {"score": 0.0023176647900094226, "phrase": "practical_decisions"}, {"score": 0.002129701089817251, "phrase": "reliable_communication"}, {"score": 0.0021049977753042253, "phrase": "intensive_dependencies"}], "paper_keywords": ["Behavioral dependency analysis", " Message weights", " Distributed systems", " Metrics", " UML", " Model-driven development", " Dependability"], "paper_abstract": "Behavioral dependency analysis (BDA) and the visualization of dependency information have been identified as a high priority in industrial software systems (in specific, distributed systems). BDA determines the extent to which the functionality of one system entity (e.g., an object or a node) depends on other entities. Among many uses, a BDA is used to perform risk analysis and assessment, load planning, fault tolerance and redundancy provisions in distributed systems. Traditionally, most BDA techniques are based on source code or execution traces of a system. However, as model-driven development is gaining more popularity, there is a need for model-based BDA techniques. To address this need, we proposed in a previous work a metric, referred to as dependency index (DI), for the BDA of distributed objects and nodes based on UML behavioral models (sequence diagrams). However, in our previous BDA work, for simplicity, it was assumed that all messages are equivalent in terms of the dependencies they entail. However, to perform a more realistic BDA on real-world systems, messages must be weighted, e.g., certain messages may be more critical (or important) than others, and thus entail more intensive dependency. To address the above need, we define in this article a family of new BDA metrics, as extensions to our basic DI metric, based on different weighting mechanisms. Through an example application of the proposed metrics, we show that they can be used to predict more realistic dependency information. Furthermore, we derive interesting observations from our dependency analysis that would influence, in practice, practical decisions, which could not have been easily derived without it, e.g., we come up with a suggestion to install more reliable data-transmission network links between two nodes to ensure a reliable communication on links with intensive dependencies.", "paper_title": "Incorporating message weights in UML-based analysis of behavioral dependencies in distributed systems", "paper_id": "WOS:000272321500007"}