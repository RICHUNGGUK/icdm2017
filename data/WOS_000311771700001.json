{"auto_keywords": [{"score": 0.050067233313081425, "phrase": "evolutionary_algorithms"}, {"score": 0.03708952716562414, "phrase": "boinc"}, {"score": 0.03548517282140461, "phrase": "ga"}, {"score": 0.004727458827066875, "phrase": "ea"}, {"score": 0.004515252649226697, "phrase": "optimization_problems"}, {"score": 0.004473982381245469, "phrase": "computationally_intensive_objective_function_evaluations"}, {"score": 0.004273196830970426, "phrase": "low-cost_distributed_computing_platform"}, {"score": 0.004214729542986473, "phrase": "volunteer_computing"}, {"score": 0.003970517550482336, "phrase": "vc"}, {"score": 0.0039341294012600085, "phrase": "nodes'_volatility"}, {"score": 0.0037921662574137535, "phrase": "task_dependency"}, {"score": 0.0037402558657576124, "phrase": "parallel_ea's_tend"}, {"score": 0.0036721416244816455, "phrase": "algorithm's_progress"}, {"score": 0.0035722806911457545, "phrase": "enhanced_scheduling"}, {"score": 0.0034911335714333507, "phrase": "berkeley_open_infrastructure_for_network_computing"}, {"score": 0.0033961782274326948, "phrase": "genetic_algorithm"}, {"score": 0.002825681384008326, "phrase": "iterative_ea"}, {"score": 0.0024956789310376635, "phrase": "available_hosts"}, {"score": 0.002405496949144104, "phrase": "scheduling_technique"}, {"score": 0.0023400004981080818, "phrase": "simulation_environment"}, {"score": 0.002297327670408112, "phrase": "benchmark_functions"}, {"score": 0.002194011800331242, "phrase": "convergence_speed"}, {"score": 0.0021539955106204354, "phrase": "execution_time"}], "paper_keywords": ["Evolutionary algorithms", " Genetic algorithm", " Volunteer computing", " Boinc", " Virtual prairie", " Scheduling", " Matchmaking"], "paper_abstract": "Evolutionary Algorithms (EA) have been extensively used in research to resolve optimization problems involving computationally intensive objective function evaluations. It is even more interesting to use a low-cost distributed computing platform based on Volunteer Computing (VC), to perform such optimizations. The downside is that VC compute nodes' volatility and unreliability associated with the level of task dependency introduced by parallel EA's tend to delay the algorithm's progress. This work proposes an enhanced scheduling of the BOINC (Berkeley Open Infrastructure for Network Computing) tasks associated with a Genetic Algorithm (GA) that aims at improving the performance of the algorithm. BOINC is the most popular middleware used for VC. While the GA has been chosen as it is the most commonly used EA, this approach is applicable to most of iterative EA's. The scheduling performs a matchmaking between a pool of tasks, classified according to their potential (predicted) fitness, and the pool of available hosts, classified according to their reliability. The scheduling technique have been implemented in a simulation environment and tested with benchmark functions. It proved to be effective in increasing the convergence speed and reducing the execution time of the GA. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Improving volunteer computing scheduling for evolutionary algorithms", "paper_id": "WOS:000311771700001"}