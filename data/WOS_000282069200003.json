{"auto_keywords": [{"score": 0.031798708510637326, "phrase": "ranking_path"}, {"score": 0.011768985157753284, "phrase": "k-complete_problem"}, {"score": 0.011198877898777998, "phrase": "k-complete_allocation"}, {"score": 0.00481495049065317, "phrase": "review_tasks"}, {"score": 0.00478968045369969, "phrase": "robust_ranking"}, {"score": 0.00468991337957911, "phrase": "ranking_projects"}, {"score": 0.004472935829694716, "phrase": "major_impact"}, {"score": 0.004057812071086187, "phrase": "individual_reviewer"}, {"score": 0.003973228652938147, "phrase": "k_projects"}, {"score": 0.003941964605885606, "phrase": "k-allocation_problem"}, {"score": 0.0036617315529835497, "phrase": "resulting_union"}, {"score": 0.0036424917384748024, "phrase": "reviewed_projects"}, {"score": 0.003252354374549961, "phrase": "possible_adverse_properties"}, {"score": 0.003226744277130179, "phrase": "outcome_ranking"}, {"score": 0.0029579611933182514, "phrase": "pairwise_rankings"}, {"score": 0.002740253546178098, "phrase": "relative_comparisons"}, {"score": 0.0027186648987897683, "phrase": "increased_length"}, {"score": 0.0025452314655691165, "phrase": "fixed_values"}, {"score": 0.0023516185395256505, "phrase": "graph_problems"}, {"score": 0.0023146962503449186, "phrase": "connectivity-k-aloc_problem"}, {"score": 0.0022783523466965187, "phrase": "matroid_intersection"}, {"score": 0.0021669774367188673, "phrase": "approximation_algorithms"}, {"score": 0.0021498955164659145, "phrase": "related_optimization_problem"}, {"score": 0.002105427264376596, "phrase": "np"}], "paper_keywords": [""], "paper_abstract": "In the process of reviewing and ranking projects by a group of reviewers, the allocation of the subset of projects to each reviewer has major impact on the robustness of the outcome ranking. We address here this problem where each reviewer is assigned, out of the list of all projects, a subset of up to k projects. Each individual reviewer then ranks and compares all pairs of k projects. The k-allocation problem is to determine an allocation of up to k projects to each reviewer, that lie within the expertise set of the reviewer, so that the resulting union of reviewed projects has certain desirable properties. The k-complete problem is a k-allocation with the property that all pairs of projects have been compared by at least one reviewer. A k-complete allocation is desirable as otherwise there may be projects that were not compared by any reviewer, leading to possible adverse properties in the outcome ranking. When a k-complete allocation cannot be achieved, one might settle for other properties. One basic requirement is that each pair of projects is comparable via a ranking path which is a sequence of pairwise rankings of projects implying a comparison of all pairs on the path. A k-allocation with a ranking path between each pair is the connectivity-k-aloe. Since the robustness of relative comparisons deteriorates with increased length of the ranking path, another goal is that between each pair of projects there will be at least one ranking path that has at most two hops or q hops for fixed values of q. An alternative means for increasing the robustness of the ranking is to use a k-allocation with at least p disjoint ranking paths between each pair. We model all these problems as graph problems. We demonstrate that the CONNECTIVITY-k-ALOC problem is polynomially solvable, using matroid intersection; we prove that the k-complete problem is NP-hard unless k = 2; and we provide approximation algorithms for a related optimization problem. All other variants are shown to be NP-complete for all values of k >= 2.", "paper_title": "How to allocate review tasks for robust ranking", "paper_id": "WOS:000282069200003"}