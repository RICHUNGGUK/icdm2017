{"auto_keywords": [{"score": 0.04712665802421912, "phrase": "evaluable_functions"}, {"score": 0.00481495049065317, "phrase": "answer_set_programming"}, {"score": 0.004215720985114768, "phrase": "asp"}, {"score": 0.004167218012926657, "phrase": "quantified_equilibrium_logic"}, {"score": 0.0037336520904376687, "phrase": "herbrand_functions"}, {"score": 0.0033450437338616596, "phrase": "direct_connection"}, {"score": 0.003306559295382181, "phrase": "scott's_logic_of_existence"}, {"score": 0.0030847461428168614, "phrase": "scott's_formalisation"}, {"score": 0.0030141556259370675, "phrase": "general_framework"}, {"score": 0.0029794666460666646, "phrase": "arbitrary_theories"}, {"score": 0.0028446460307503343, "phrase": "syntactic_subclass"}, {"score": 0.0027795345823932406, "phrase": "normal_logic_programs"}, {"score": 0.0025631294247072476, "phrase": "function-free_normal_programs"}, {"score": 0.0025044454602720597, "phrase": "safety_condition"}, {"score": 0.002447101794397243, "phrase": "resulting_program"}, {"score": 0.002349884235026956, "phrase": "usual_meaning"}, {"score": 0.0023228251034930463, "phrase": "asp."}, {"score": 0.0022305310659333864, "phrase": "formal_comparison"}, {"score": 0.0022048798649253122, "phrase": "lin"}, {"score": 0.0021794454466797382, "phrase": "wang's_approach"}, {"score": 0.0021049977753042253, "phrase": "evaluable_total_functions"}], "paper_keywords": ["answer set programming", " equilibrium logic", " partial functions", " functional logic programming"], "paper_abstract": "In this paper we propose an extension of Answer Set Programming (ASP) to deal with (possibly partial) evaluable functions. To this aim, we start from the most general logical counterpart of ASP, Quantified Equilibrium Logic (QEL), and propose a variant QEL(F)(=) where the set of functions is partitioned into Herbrand functions (or constructors) and evaluable functions (or operations). We show how this extension has a direct connection to Scott's Logic of Existence, and introduce several useful derived operators, some of them directly borrowed from Scott's formalisation. Using this general framework for arbitrary theories, we proceed to focus on a syntactic subclass that corresponds to normal logic programs with evaluable functions and equality. We provide a translation of this class into function-free normal programs and consider a safety condition so that the resulting program is also safe, under the usual meaning in ASP. Finally, we also establish a formal comparison to Lin and Wang's approach (FASP) dealing with evaluable total functions.", "paper_title": "Functional answer set programming", "paper_id": "WOS:000287977500004"}