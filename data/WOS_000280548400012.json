{"auto_keywords": [{"score": 0.036135955526345236, "phrase": "selective_compilation"}, {"score": 0.00481495049065317, "phrase": "novel_online_profiling_for_virtual_machines"}, {"score": 0.004776669953449352, "phrase": "application_profiling"}, {"score": 0.004719816332271661, "phrase": "popular_technique"}, {"score": 0.004663636232080366, "phrase": "program_performance"}, {"score": 0.004571478018964363, "phrase": "offline_profiling"}, {"score": 0.004375061788023814, "phrase": "prior_program_runs"}, {"score": 0.004023120753104693, "phrase": "actual_program_run"}, {"score": 0.003991110291836103, "phrase": "managed_languages"}, {"score": 0.003943787093225088, "phrase": "java"}, {"score": 0.003850173884725567, "phrase": "unique_opportunity"}, {"score": 0.003684634192576662, "phrase": "profile_information"}, {"score": 0.0036262124965265015, "phrase": "current_program"}, {"score": 0.0035544816252832375, "phrase": "online_profiling"}, {"score": 0.0034841647157189985, "phrase": "current_vms"}, {"score": 0.0033880439015902446, "phrase": "program_startup_performance"}, {"score": 0.0031654684543975077, "phrase": "current_reactive_mechanism"}, {"score": 0.0030781126453776723, "phrase": "current_vm_profiling_mechanisms"}, {"score": 0.003005151718290603, "phrase": "associated_transformations"}, {"score": 0.002957471572421436, "phrase": "future_behavior"}, {"score": 0.002841545331522694, "phrase": "potential_misspeculation"}, {"score": 0.0026760974046034854, "phrase": "average_performance_loss"}, {"score": 0.0026126405272417783, "phrase": "benchmark_programs"}, {"score": 0.002571171956724731, "phrase": "ideal_offline_approach"}, {"score": 0.0025202582748972122, "phrase": "hot_methods"}, {"score": 0.00240213106042981, "phrase": "novel_strategy"}, {"score": 0.002373472641477602, "phrase": "similar_performance_benefits"}, {"score": 0.0023451553255837317, "phrase": "online_profiling_approach"}, {"score": 0.0022803854904010347, "phrase": "loop_iteration_bounds"}, {"score": 0.0022531762659857507, "phrase": "future_method_hotness"}, {"score": 0.0022085455097790537, "phrase": "present_promising_results"}, {"score": 0.0021049977753042253, "phrase": "successful_implementation"}], "paper_keywords": ["Languages", " Performance", " Virtual machines", " Online profiling", " Java"], "paper_abstract": "Application profiling is a popular technique to improve program performance based on its behavior. Offline profiling, although beneficial for several applications, fails in cases where prior program runs may not be feasible, or if changes in input cause the profile to not match the behavior of the actual program run. Managed languages, like Java and C#, provide a unique opportunity to overcome the drawbacks of offline profiling by generating the profile information online during the current program run. Indeed, online profiling is extensively used in current VMs, especially during selective compilation to improve program startup performance, as well as during other feedback-directed optimizations. In this paper we illustrate the drawbacks of the current reactive mechanism of online profiling during selective compilation. Current VM profiling mechanisms are slow - thereby delaying associated transformations, and estimate future behavior based on the program's immediate past -leading to potential misspeculation that limit the benefits of compilation. We show that these drawbacks produce an average performance loss of over 14.5% on our set of benchmark programs, over an ideal offline approach that accurately compiles the hot methods early. We then propose and evaluate the potential of a novel strategy to achieve similar performance benefits with an online profiling approach. Our new online profiling strategy uses early determination of loop iteration bounds to predict future method hotness. We explore and present promising results on the potential, feasibility, and other issues involved for the successful implementation of this approach.", "paper_title": "Novel Online Profiling for Virtual Machines", "paper_id": "WOS:000280548400012"}