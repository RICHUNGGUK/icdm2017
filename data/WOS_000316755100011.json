{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "arbitrary_order_constraints"}, {"score": 0.00471228691115201, "phrase": "spatial_points"}, {"score": 0.004562362497952548, "phrase": "categorical_information"}, {"score": 0.004529696178827392, "phrase": "e._g."}, {"score": 0.004369824355829779, "phrase": "optimal_route_query"}, {"score": 0.004322967486451877, "phrase": "shortest_path"}, {"score": 0.0042459818200777846, "phrase": "query_point"}, {"score": 0.004037608759610068, "phrase": "user-specified_set"}, {"score": 0.00374399358035391, "phrase": "partial_order_constraints"}, {"score": 0.0037171648669537287, "phrase": "different_categories"}, {"score": 0.0035346515636097533, "phrase": "previous_work"}, {"score": 0.0034716556902775037, "phrase": "special_case"}, {"score": 0.003397535839387366, "phrase": "total_order"}, {"score": 0.0031390053628808706, "phrase": "general_scenario"}, {"score": 0.0029210388852074208, "phrase": "naive_approach"}, {"score": 0.002889672003089062, "phrase": "significant_amount"}, {"score": 0.0028689475587958917, "phrase": "repeated_computations"}, {"score": 0.0027675275077806744, "phrase": "large_data_sets"}, {"score": 0.0026889720516076205, "phrase": "novel_solutions"}, {"score": 0.0026600905156986317, "phrase": "general_optimal_route_query"}, {"score": 0.00247529638625566, "phrase": "proposed_methods"}, {"score": 0.002387758958649797, "phrase": "optimal_route_queries"}, {"score": 0.0022540779997940897, "phrase": "extensive_experiments"}, {"score": 0.0022218413146898887, "phrase": "real_and_synthetic_data_sets"}, {"score": 0.0021821915946356168, "phrase": "proposed_solutions"}, {"score": 0.0021202154023229123, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "large_margins"}], "paper_keywords": ["Query processing", " spatial databases"], "paper_abstract": "Given a set of spatial points DS, each of which is associated with categorical information, e. g., restaurant, pub, etc., the optimal route query finds the shortest path that starts from the query point (e. g., a home or hotel), and covers a user-specified set of categories (e. g., {pub, restaurant, museum}). The user may also specify partial order constraints between different categories, e. g., a restaurant must be visited before a pub. Previous work has focused on a special case where the query contains the total order of all categories to be visited (e. g., museum -> restaurant -> pub). For the general scenario without such a total order, the only known solution reduces the problem to multiple, total-order optimal route queries. As we show in this paper, this naive approach incurs a significant amount of repeated computations, and, thus, is not scalable to large data sets. Motivated by this, we propose novel solutions to the general optimal route query, based on two different methodologies, namely backward search and forward search. In addition, we discuss how the proposed methods can be adapted to answer a variant of the optimal route queries, in which the route only needs to cover a subset of the given categories. Extensive experiments, using both real and synthetic data sets, confirm that the proposed solutions are efficient and practical, and outperform existing methods by large margins.", "paper_title": "Optimal Route Queries with Arbitrary Order Constraints", "paper_id": "WOS:000316755100011"}