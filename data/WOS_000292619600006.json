{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_applications"}, {"score": 0.0375665272906181, "phrase": "web_application"}, {"score": 0.015499791416900133, "phrase": "model_checker"}, {"score": 0.004515967518891287, "phrase": "online_transaction"}, {"score": 0.004205395707787349, "phrase": "web_application_development"}, {"score": 0.0032533888943254144, "phrase": "web_page_transitions"}, {"score": 0.003051073364818384, "phrase": "internal_state_transitions"}, {"score": 0.0029441472095672397, "phrase": "general_properties"}, {"score": 0.002861302930564756, "phrase": "web_application_design"}, {"score": 0.0027807832748641195, "phrase": "ltl_formulae"}, {"score": 0.002631951099726469, "phrase": "spin"}, {"score": 0.0025892330566358503, "phrase": "test_cases"}, {"score": 0.0022608057001451414, "phrase": "model_checking"}, {"score": 0.002150580119047236, "phrase": "example_web_application"}], "paper_keywords": ["Web application", " modeling", " testing", " automata", " model checking", " Spin"], "paper_abstract": "The number of Web applications handling online transaction is increasing, but verification of the correctness of Web application development has been done manually. This paper proposes a method for modeling, verifying and testing Web applications. In our method, a Web application is modeled using two finite-state automata, i.e., a page automaton which specifies Web page transitions, and an internal state automaton which specifies internal state transitions of the Web application. General properties for checking the Web application design are presented in LTL formulae and they are verified using the model checker Spin. Test cases examining the behavior of the Web application are also generated by utilizing the counterexamples obtained as the result of model checking. We applied our method to an example Web application to confirm its effectiveness.", "paper_title": "Modeling, Verification and Testing of Web Applications Using Model Checker", "paper_id": "WOS:000292619600006"}