{"auto_keywords": [{"score": 0.04075527301706068, "phrase": "structural_representation"}, {"score": 0.03017111532801184, "phrase": "higher-level_abstraction"}, {"score": 0.00481495049065317, "phrase": "functional_abstractionx"}, {"score": 0.004715465748738294, "phrase": "graph-based_semantic_data_model"}, {"score": 0.004604271739916253, "phrase": "primary_objective"}, {"score": 0.004509120242098446, "phrase": "human_perception"}, {"score": 0.004311765153841034, "phrase": "particular_manner"}, {"score": 0.004286109357236311, "phrase": "efficient_storage"}, {"score": 0.004222632929330698, "phrase": "graph_data_model"}, {"score": 0.004110725239362369, "phrase": "alternative_data_model"}, {"score": 0.004025732081831055, "phrase": "relational_model"}, {"score": 0.003989844368560806, "phrase": "positive_features"}, {"score": 0.003966096429996537, "phrase": "semantic_data_models"}, {"score": 0.0037250869218569244, "phrase": "complex_relations"}, {"score": 0.003702908986507269, "phrase": "basic_data_items"}, {"score": 0.0036808713605026326, "phrase": "gdm"}, {"score": 0.003648037996175166, "phrase": "entire_database"}, {"score": 0.0035196305109619803, "phrase": "layered_organization"}, {"score": 0.0033453930912354796, "phrase": "basic_instances"}, {"score": 0.0032958023701245022, "phrase": "functionally_abstracted_module"}, {"score": 0.0032276125538372507, "phrase": "psg"}, {"score": 0.0031988083245396825, "phrase": "secondary_semantic_group"}, {"score": 0.003058626737273869, "phrase": "secondary_semantic_groups"}, {"score": 0.0030042843107651847, "phrase": "lowest_layer"}, {"score": 0.002959735028884561, "phrase": "data_values"}, {"score": 0.002915844417747579, "phrase": "primary_semantic_groups"}, {"score": 0.0027303083730101734, "phrase": "basic_data_elements"}, {"score": 0.0027059374439494075, "phrase": "encapsulation_methodology"}, {"score": 0.002556547771670116, "phrase": "actual_problem_domain"}, {"score": 0.002503607929521596, "phrase": "standard_abstractions"}, {"score": 0.0024738490295633194, "phrase": "semantic_data_model"}, {"score": 0.0023724444453105983, "phrase": "data_model"}, {"score": 0.0023372424895785125, "phrase": "proposed_graph_algebra"}, {"score": 0.00231637194556478, "phrase": "graph_query_language"}, {"score": 0.002234732712120406, "phrase": "widely_accepted_user-friendly_sql."}, {"score": 0.0021303290947326517, "phrase": "distributed_environment"}, {"score": 0.0021049977753042253, "phrase": "corresponding_query_processing_technique"}], "paper_keywords": ["graph data model", " semantic group", " semantic data model", " distributed database", " fragmentation and allocation schema"], "paper_abstract": "In this paper, a Graph-based semantic Data Model (GDM) is proposed with the primary objective of bridging the gap between the human perception of an enterprise and the needs of computing infrastructure to organize information in some particular manner for efficient storage and retrieval. The Graph Data Model (GDM) has been proposed as an alternative data model to combine the advantages of the relational model with the positive features of semantic data models. The proposed GDM offers a structural representation for interacting to the designer, making it always easy to comprehend the complex relations amongst basic data items. GDM allows an entire database to be viewed as a Graph (V, E) in a layered organization. Here, a graph is created in a bottom up fashion where V represents the basic instances of data or a functionally abstracted module, called primary semantic group (PSG) and secondary semantic group (SSG). An edge in the model implies the relationship among the secondary semantic groups. The contents of the lowest layer are the semantically grouped data values in the form of primary semantic groups. The SSGs are nothing but the higher-level abstraction and are created by the method of encapsulation of various PSGs, SSGs and basic data elements. This encapsulation methodology to provide a higher-level abstraction continues generating various secondary semantic groups until the designer thinks that it is sufficient to declare the actual problem domain. GDM, thus, uses standard abstractions available in a semantic data model with a structural representation in terms of a graph. The operations on the data model are formalized in the proposed graph algebra. A Graph Query Language (GQL) is also developed, maintaining similarity with the widely accepted user-friendly SQL. Finally, the paper also presents the methodology to make this GDM compatible with the distributed environment, and a corresponding query processing technique for distributed environment is also suggested for the sake of completeness.", "paper_title": "GDM: A new graph based data model using functional abstractionx", "paper_id": "WOS:000238079200018"}