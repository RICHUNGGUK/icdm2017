{"auto_keywords": [{"score": 0.004772593750252861, "phrase": "mobile_environments"}, {"score": 0.004688989566904871, "phrase": "particular_characteristics"}, {"score": 0.0037260386566859197, "phrase": "decentralized_and_dynamic_networks"}, {"score": 0.003660700128133065, "phrase": "current_solutions"}, {"score": 0.0035648266669315943, "phrase": "unstructured_network_search_algorithms"}, {"score": 0.0034868462688262864, "phrase": "alternative_method"}, {"score": 0.0030399188412691914, "phrase": "unavailable_service"}, {"score": 0.0027947199430705077, "phrase": "already_existing_redundancy"}, {"score": 0.002626760910629479, "phrase": "finite-state_transducers"}, {"score": 0.0023724065150232897, "phrase": "inter-service_redundancy"}, {"score": 0.0022297712188622293, "phrase": "computational_cost"}, {"score": 0.0021712920081029194, "phrase": "services'_size"}, {"score": 0.0021049977753042253, "phrase": "non-redundant_functionality"}], "paper_keywords": ["Mobile P2P applications", " Robustness", " Service accessibility", " Finite state transducers"], "paper_abstract": "Mobile P2P networks possess particular characteristics which make accessibility of services deployed on peers a challenge. This has to be taken into account when considering robustness of applications that depend on successfully accessing a set of services. While ensuring robustness is traditionally handled through replication or redundancy, those solutions are not readily applicable to decentralized and dynamic networks. Instead, current solutions are based on efficient P2P structure maintenance or unstructured network search algorithms. A novel and alternative method proposed in this paper is based on the observation that some redundancy may exist between services offered on the network, a fact which could be used to recreate an unavailable service from services accessible to a peer. Instead of adding redundancy to the system, our solution exploits the already existing redundancy to improve robustness of mobile P2P applications. We model the interaction with services as finite-state transducers and propose a heuristic to obtain redundancy between any pair of services. Then, a set of algorithms that uses this inter-service redundancy to recreate the interaction with one service from the other is discussed. The computational cost is polynomial with respect to services' size, and in practice, the non-redundant functionality and related control need to be implemented locally.", "paper_title": "Improving robustness of P2P applications in mobile environments", "paper_id": "WOS:000284091500004"}