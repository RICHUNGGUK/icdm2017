{"auto_keywords": [{"score": 0.049299759016574796, "phrase": "maximum_clique_problem"}, {"score": 0.004508943409530208, "phrase": "pullan"}, {"score": 0.004459857205489101, "phrase": "hoos"}, {"score": 0.004315771670213371, "phrase": "iterated_local_search_algorithms"}, {"score": 0.004176321608449849, "phrase": "basic_components"}, {"score": 0.004063547375196532, "phrase": "fast_neighbourhood_search"}, {"score": 0.003953806321226277, "phrase": "node_evaluation"}, {"score": 0.0038893838564184107, "phrase": "completely_random_selection"}, {"score": 0.003682100144121148, "phrase": "restart_rules"}, {"score": 0.003622088701900472, "phrase": "detailed_computational_study"}, {"score": 0.0033916328188225843, "phrase": "proposed_algorithms"}, {"score": 0.0032819448594643853, "phrase": "different_components"}, {"score": 0.0031584367879334114, "phrase": "tested_algorithms"}, {"score": 0.002989991779830814, "phrase": "dimacs_benchmark_instances"}, {"score": 0.0028305047329728254, "phrase": "hardest_tests"}, {"score": 0.0027843339377323878, "phrase": "new_putative_optimum"}, {"score": 0.002592784882557155, "phrase": "recently_proposed_and_more_difficult_instances"}, {"score": 0.002323446065342625, "phrase": "appropriate_value"}, {"score": 0.002285527382381719, "phrase": "unique_parameter"}, {"score": 0.0021049977753042253, "phrase": "problem_instances"}], "paper_keywords": ["Maximum clique", " Randomness", " Plateau search", " Penalties", " Restart rules"], "paper_abstract": "Starting from an algorithm recently proposed by Pullan and Hoos, we formulate and analyze iterated local search algorithms for the maximum clique problem. The basic components of such algorithms are a fast neighbourhood search (not based on node evaluation but on completely random selection) and simple, yet very effective, diversification techniques and restart rules. A detailed computational study is performed in order to identify strengths and weaknesses of the proposed algorithms and the role of the different components on several classes of instances. The tested algorithms are very fast and reliable: most of the DIMACS benchmark instances are solved within very short CPU times. For one of the hardest tests, a new putative optimum was discovered by one of our algorithms. Very good performances were also shown on recently proposed and more difficult instances. It is important to remark that the heuristics tested in this paper are basically parameter free (the appropriate value for the unique parameter is easily identified and was, in fact, the same value for all problem instances used in this paper).", "paper_title": "Simple ingredients leading to very efficient heuristics for the maximum clique problem", "paper_id": "WOS:000261065000003"}