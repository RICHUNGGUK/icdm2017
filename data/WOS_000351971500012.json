{"auto_keywords": [{"score": 0.044340662163821175, "phrase": "software_faults"}, {"score": 0.00481495049065317, "phrase": "large-scale_software_systems"}, {"score": 0.004566567411073082, "phrase": "experimental_dependability_evaluation"}, {"score": 0.003813669883040509, "phrase": "traditional_stuck-at"}, {"score": 0.0037139103792217143, "phrase": "hardware_faults"}, {"score": 0.0034299649219748513, "phrase": "adequate_fault_injection_targets"}, {"score": 0.003150900886669123, "phrase": "open_and_crucial_issue"}, {"score": 0.0030039966201398966, "phrase": "possible_software_faults"}, {"score": 0.00267301171407926, "phrase": "small_number"}, {"score": 0.0026447893350441502, "phrase": "representative_faults"}, {"score": 0.002603012037901889, "phrase": "utmost_importance"}, {"score": 0.0025214217930287003, "phrase": "comprehensive_fault_injection_study"}, {"score": 0.002416589459425828, "phrase": "fault_injection_target_selection"}, {"score": 0.0022434880661725493, "phrase": "proposed_approach"}, {"score": 0.002208035721125305, "phrase": "real_web-server_dependability_benchmark"}, {"score": 0.0021731423856364003, "phrase": "large-scale_integer_vector_sort_application"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Experimental dependability evaluation", " Dependability benchmarking", " Injection of software faults"], "paper_abstract": "The faultload is one of the most critical elements of experimental dependability evaluation. It should embody a repeatable, portable, representative and generally accepted fault set. Concerning software faults, the definition of that kind of faultloads is particularly difficult, as it requires a much more complex emulation method than the traditional stuck-at or bit-flip used for hardware faults. Although faultloads based on software faults have already been proposed, the choice of adequate fault injection targets (i.e., actual software components where the faults are injected) is still an open and crucial issue. Furthermore, knowing that the number of possible software faults that can be injected in a given system is potentially very large, the problem of defining a faultload made of a small number of representative faults is of utmost importance. This paper presents a comprehensive fault injection study and proposes a strategy to guide the fault injection target selection to reduce the number of faults required for the faultload and exemplifies the proposed approach with a real web-server dependability benchmark and a large-scale integer vector sort application. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Practical and representative faultloads for large-scale software systems", "paper_id": "WOS:000351971500012"}