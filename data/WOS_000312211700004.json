{"auto_keywords": [{"score": 0.04094632319124644, "phrase": "shared_resource_contention"}, {"score": 0.025068922623158657, "phrase": "os_scheduler"}, {"score": 0.00481495049065317, "phrase": "scheduling_techniques"}, {"score": 0.004772137871562584, "phrase": "addressing_shared_resources"}, {"score": 0.004729704116022601, "phrase": "multicore_processors"}, {"score": 0.004687645903373103, "phrase": "chip_multicore_processors"}, {"score": 0.004523103062368843, "phrase": "dominant_architecture_choice"}, {"score": 0.004482873744893272, "phrase": "modern_computing_platforms"}, {"score": 0.004248869786808024, "phrase": "foreseeable_future"}, {"score": 0.004063186599879217, "phrase": "unique_set"}, {"score": 0.0038338299812503, "phrase": "cmp_cores"}, {"score": 0.0037827603118271757, "phrase": "independent_processors"}, {"score": 0.0037157201349604222, "phrase": "common_resources"}, {"score": 0.0036173729405604674, "phrase": "last_level_cache"}, {"score": 0.0035851820714359758, "phrase": "llc"}, {"score": 0.003474694300991964, "phrase": "severe_and_unpredictable_performance_impact"}, {"score": 0.003367612545679888, "phrase": "cmp."}, {"score": 0.003293142761521425, "phrase": "tremendous_opportunities"}, {"score": 0.0032638170723261538, "phrase": "mulithreaded_applications"}, {"score": 0.003163212007747804, "phrase": "simultaneous_thread_execution"}, {"score": 0.0031071175640144943, "phrase": "fast_inter_thread_data_sharing"}, {"score": 0.002957919048133256, "phrase": "negative_aspects"}, {"score": 0.0026567282965815823, "phrase": "os_thread-level_scheduling"}, {"score": 0.0023754777621716886, "phrase": "os."}, {"score": 0.0022816681646340518, "phrase": "time-multiplexing_threads"}, {"score": 0.002251227801482381, "phrase": "single_core"}, {"score": 0.002221192647477371, "phrase": "complex_and_effective_resource_manager"}, {"score": 0.0021430393104977788, "phrase": "new_and_exciting_work"}, {"score": 0.0021049977753042253, "phrase": "diverse_new_roles"}], "paper_keywords": ["Performance", " Measurement", " Algorithms", " Survey", " shared resource contention", " thread level scheduling", " power-aware scheduling", " thermal effects", " cooperative resource sharing"], "paper_abstract": "Chip multicore processors (CMPs) have emerged as the dominant architecture choice for modern computing platforms and will most likely continue to be dominant well into the foreseeable future. As with any system, CMPs offer a unique set of challenges. Chief among them is the shared resource contention that results because CMP cores are not independent processors but rather share common resources among cores such as the last level cache (LLC). Shared resource contention can lead to severe and unpredictable performance impact on the threads running on the CMP. Conversely, CMPs offer tremendous opportunities for mulithreaded applications, which can take advantage of simultaneous thread execution as well as fast inter thread data sharing. Many solutions have been proposed to deal with the negative aspects of CMPs and take advantage of the positive. This survey focuses on the subset of these solutions that exclusively make use of OS thread-level scheduling to achieve their goals. These solutions are particularly attractive as they require no changes to hardware and minimal or no changes to the OS. The OS scheduler has expanded well beyond its original role of time-multiplexing threads on a single core into a complex and effective resource manager. This article surveys a multitude of new and exciting work that explores the diverse new roles the OS scheduler can successfully take on.", "paper_title": "Survey of Scheduling Techniques for Addressing Shared Resources in Multicore Processors", "paper_id": "WOS:000312211700004"}