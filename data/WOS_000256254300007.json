{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_project_planning"}, {"score": 0.004303404058571052, "phrase": "decision_making"}, {"score": 0.004234884779773412, "phrase": "software_development_projects"}, {"score": 0.003971502222405927, "phrase": "future_implications"}, {"score": 0.003549245218355768, "phrase": "project_plan"}, {"score": 0.003301733505307784, "phrase": "project_planning"}, {"score": 0.002857143106182505, "phrase": "formal_model"}, {"score": 0.0027008385562908425, "phrase": "dependency_management"}, {"score": 0.002553063001454623, "phrase": "plan_inconsistencies"}, {"score": 0.0023182554418193927, "phrase": "project_planners"}, {"score": 0.0021049977753042253, "phrase": "specific_decisions"}], "paper_keywords": ["process-centered software engineering", " decision support", " design rationales", " reuse"], "paper_abstract": "In this paper, we propose an approach to support decision making in software development projects by analyzing past experience and pointing out future implications. Based on a mechanism for tracing the operations conducted to modify the project plan or to create deliverables, decisions made during project planning and enactment are recorded. Moreover, dependencies between decisions are detected automatically, and using a formal model on planning and plan enactment, dependency management is provided. This allows spotting plan inconsistencies, and provides guidance how to overcome them. Thus, project planners and developers are assisted in understanding the effects and necessities of specific decisions.", "paper_title": "Decision support for software project planning and enactment", "paper_id": "WOS:000256254300007"}