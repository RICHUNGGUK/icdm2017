{"auto_keywords": [{"score": 0.04897776997473009, "phrase": "real-time_reactive_systems"}, {"score": 0.010490323772805274, "phrase": "formal_specifications"}, {"score": 0.00481495049065317, "phrase": "test_suites"}, {"score": 0.004361428012479218, "phrase": "complex_time-dependent_functionality"}, {"score": 0.004236321075918639, "phrase": "test_experiments"}, {"score": 0.0038820411362656803, "phrase": "safety-critical_contexts"}, {"score": 0.003705323407433896, "phrase": "rigorous_analysis"}, {"score": 0.003662410853488772, "phrase": "thorough_testing"}, {"score": 0.0034753508746887957, "phrase": "test_case_generation_methods"}, {"score": 0.003415137969569376, "phrase": "metric-based_test_case_selection_algorithm"}, {"score": 0.0029694040368299624, "phrase": "test_generation"}, {"score": 0.0028341130433482565, "phrase": "tromlab"}, {"score": 0.0025967927629150715, "phrase": "formal_specification"}, {"score": 0.0025221779101665493, "phrase": "tgc"}, {"score": 0.002351705899181029, "phrase": "real-time_systems_community"}, {"score": 0.0022576249214220187, "phrase": "experimental_results"}, {"score": 0.002205560249972527, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["specification-based testing", " fault models", " real-time reactive systems", " test adequacy", " metric-based test selection", " optimal test selection"], "paper_abstract": "Real-time reactive systems are among the most difficult systems to test because of their size and complex time-dependent functionality. The number of test experiments for such systems is very large, if not infinite. Often such systems arise in safety-critical contexts. Hence., such systems require a rigorous analysis and thorough testing before they are deployed. This paper addresses test case generation methods and a metric-based test case selection algorithm for sufficient testing of real-time reactive systems. The methods are rigorous, and based on the formal specifications of the system and its fault models. The test generation and execution of algorithms are implemented in TROMLAB, a formal framework for developing real-time reactive systems. The methods are applied to the formal specification of the Train-Gate-Controller (TGC) example, a bench-mark case study in the real-time systems community. A brief description of the experimental results obtained on the case study is given. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Automated generation of test suites from formal specifications of real-time reactive systems", "paper_id": "WOS:000253100000009"}