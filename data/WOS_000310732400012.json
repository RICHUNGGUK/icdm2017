{"auto_keywords": [{"score": 0.046273829908275756, "phrase": "starss"}, {"score": 0.009000049643025927, "phrase": "clusterss"}, {"score": 0.00481495049065317, "phrase": "multicore-based_architectures"}, {"score": 0.004482206282876944, "phrase": "application_performance"}, {"score": 0.004312622975366672, "phrase": "parallel_programming_models"}, {"score": 0.004241914481080374, "phrase": "automatic_function-level_parallelism"}, {"score": 0.004058951880810154, "phrase": "data-flow_model"}, {"score": 0.003615217162972726, "phrase": "cluster_superscalar"}, {"score": 0.0032198357970567595, "phrase": "clusterss_tasks"}, {"score": 0.0030808211830129304, "phrase": "available_resources"}, {"score": 0.0029805015010906013, "phrase": "ibm_apgas_runtime"}, {"score": 0.0028993944292191433, "phrase": "efficient_and_portable_communication_layer"}, {"score": 0.002851790448644913, "phrase": "one-sided_communication"}, {"score": 0.002683814996377301, "phrase": "apgas"}, {"score": 0.002511803988580901, "phrase": "java_applications"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel programming models", " high performance computing", " asynchronous execution", " productivity"], "paper_abstract": "Programming for large-scale, multicore-based architectures requires adequate tools that offer ease of programming and do not hinder application performance. StarSs is a family of parallel programming models based on automatic function-level parallelism that targets productivity. StarSs deploys a data-flow model: it analyzes dependencies between tasks and manages their execution, exploiting their concurrency as much as possible. This paper introduces Cluster Superscalar (ClusterSs), a new StarSs member designed to execute on clusters of SMPs (Symmetric Multiprocessors). ClusterSs tasks are asynchronously created and assigned to the available resources with the support of the IBM APGAS runtime, which provides an efficient and portable communication layer based on one-sided communication. We present the design of ClusterSs on top of APGAS, as well as the programming model and execution runtime for Java applications. Finally, we evaluate the productivity of ClusterSs, both in terms of programmability and performance and compare it to that of the IBM X10 language. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "A high-productivity task-based programming model for clusters", "paper_id": "WOS:000310732400012"}