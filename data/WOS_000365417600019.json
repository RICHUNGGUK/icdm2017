{"auto_keywords": [{"score": 0.04576021885069074, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "featherweight_verifast._verifast"}, {"score": 0.004735519962945449, "phrase": "leading_research_prototype_tool"}, {"score": 0.004657393640152439, "phrase": "sound_modular_verification"}, {"score": 0.004606023493393774, "phrase": "safety_and_correctness_properties"}, {"score": 0.004210418912455025, "phrase": "coq"}, {"score": 0.004009555045206973, "phrase": "novel_program_verification_techniques"}, {"score": 0.0039433581938239926, "phrase": "industrial_case_studies"}, {"score": 0.003730465168354817, "phrase": "program_verification_competitions"}, {"score": 0.0035290250358997904, "phrase": "multiple_teachers"}, {"score": 0.0033015555065209865, "phrase": "verifast's_operation"}, {"score": 0.003088702479841264, "phrase": "specific_verification_techniques"}, {"score": 0.002995224441987907, "phrase": "verifast"}, {"score": 0.002987463078971627, "phrase": "clear_and_precise_exposition"}, {"score": 0.0027031706928674092, "phrase": "first_time"}, {"score": 0.0026732973536990373, "phrase": "formal_definition"}, {"score": 0.002585638506308606, "phrase": "core_subset"}, {"score": 0.002542890176213921, "phrase": "verifast_program_verification_approach"}, {"score": 0.0023136311468961125, "phrase": "lecture_notes"}, {"score": 0.002275369652100353, "phrase": "graduate_course"}, {"score": 0.0022502133699402018, "phrase": "program_verification"}, {"score": 0.002152332983488664, "phrase": "executable_machine-readable_definition"}, {"score": 0.0021285340816566906, "phrase": "machine-checked_soundness_proof"}], "paper_keywords": ["program verification", " separation logic", " symbolic execution"], "paper_abstract": "VeriFast is a leading research prototype tool for the sound modular verification of safety and correctness properties of single-threaded and multithreaded C and Java, programs. It has been used as a vehicle for exploration and validation of novel program verification techniques and for industrial case studies; it has served well at a number of program verification competitions; and it has been used for teaching by multiple teachers independent of the authors. However, until now, while VeriFast's operation has been described informally in a number of publications, and specific verification techniques have been formalized, a clear and precise exposition of how VeriFast, works has not yet appeared. In this article we present for the first time a formal definition and soundness proof of a core subset of the VeriFast program verification approach. The exposition aims to be both accessible and rigorous: the text is based on lecture notes for a graduate course on program verification, and it is backed by all executable machine-readable definition and machine-checked soundness proof in Coq.", "paper_title": "FEATHERWEIGHT VERIFAST", "paper_id": "WOS:000365417600019"}