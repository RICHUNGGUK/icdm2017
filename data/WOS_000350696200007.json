{"auto_keywords": [{"score": 0.048304899972243916, "phrase": "vm"}, {"score": 0.008487317730019137, "phrase": "ttr"}, {"score": 0.007709380963531523, "phrase": "proposed_technique"}, {"score": 0.00481495049065317, "phrase": "virtual_machines"}, {"score": 0.004675652357253327, "phrase": "running_virtual_machine"}, {"score": 0.004578616481036476, "phrase": "later_restoration"}, {"score": 0.004502433187097914, "phrase": "indispensable_tool"}, {"score": 0.00444612502361583, "phrase": "balanced_and_energy-efficient_usage"}, {"score": 0.004335603324413586, "phrase": "virtual_desktop_cloud_environments"}, {"score": 0.004140036888016244, "phrase": "remote_user's_vm"}, {"score": 0.004071121244999291, "phrase": "external_storage"}, {"score": 0.004020185355794902, "phrase": "user_disconnects"}, {"score": 0.0038711548651825917, "phrase": "vdc._existing_techniques"}, {"score": 0.003727628340195049, "phrase": "checkpoint_image"}, {"score": 0.003650195070580192, "phrase": "duplicated_memory_pages"}, {"score": 0.0035148319209810128, "phrase": "significantly_increased_restoration_time"}, {"score": 0.003370287778450475, "phrase": "vdc_environments"}, {"score": 0.0029587924529332695, "phrase": "entire_memory_contents"}, {"score": 0.0025541050375256992, "phrase": "restored_vms"}, {"score": 0.0024081387633065206, "phrase": "wide_range"}, {"score": 0.0022232633360792222, "phrase": "xen_hypervisor"}, {"score": 0.0021770116505684394, "phrase": "previously_fasted_restoration"}, {"score": 0.002158780936704905, "phrase": "space-optimized_checkpoints"}, {"score": 0.0021049977753042253, "phrase": "threefold_speedup"}], "paper_keywords": ["Virtualization", " Checkpointing", " Performance"], "paper_abstract": "Saving the state of a running virtual machine (VM) for later restoration has become an indispensable tool to achieve balanced and energy-efficient usage of the underlying hardware in virtual desktop cloud environments (VDC). To free up resources, a remote user's VM is saved to external storage when the user disconnects and restored when the user reconnects to the VDC. Existing techniques are able to reduce the size of the checkpoint image by up to 80 % by excluding duplicated memory pages; however, those techniques suffer from a significantly increased restoration time which adversely affects the deployment of the technique in VDC environments. In this paper, we introduce a method to efficiently restore VMs from such space-optimized checkpoint images. With the presented method, a VM is available to the user before the entire memory contents of the VM have been restored. Using a combination of lazy-fetch and intercepting accesses to yet unrestored pages we are able to reduce the time-to-responsiveness (TTR) for restored VMs to a few seconds. Experiments with VMs with 4 GB of memory running a wide range of benchmarks show that the proposed technique, on average, reduces the TTR by 50 % compared to the Xen hypervisor. Compared to the previously fasted restoration of space-optimized checkpoints, the proposed technique achieves a threefold speedup on average.", "paper_title": "Efficiently Restoring Virtual Machines", "paper_id": "WOS:000350696200007"}