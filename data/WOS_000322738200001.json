{"auto_keywords": [{"score": 0.0399657996805008, "phrase": "chemora"}, {"score": 0.00481495049065317, "phrase": "physics_model"}, {"score": 0.004646496622257368, "phrase": "cross-architecture_code_generation"}, {"score": 0.004483909657713567, "phrase": "high-level_problem_description"}, {"score": 0.004357927940322685, "phrase": "partial_differential_equations"}, {"score": 0.004296264970612285, "phrase": "abstract_tensor_notation"}, {"score": 0.004205395707787349, "phrase": "chemora_framework"}, {"score": 0.004000741805312148, "phrase": "complete_high_performance_codes"}, {"score": 0.003916098498242888, "phrase": "wide_range"}, {"score": 0.0038606630003037864, "phrase": "compute_architectures"}, {"score": 0.0036727508077904415, "phrase": "cactus"}, {"score": 0.003371508176308189, "phrase": "complex_applications"}, {"score": 0.0033001333942688778, "phrase": "low-level_code_tuning"}, {"score": 0.003007884051980566, "phrase": "openmp"}, {"score": 0.002965244279488607, "phrase": "cuda."}, {"score": 0.0029024303666003153, "phrase": "high-level_code_transformations"}, {"score": 0.002861302930564756, "phrase": "efficient_loop_traversal_strategies"}, {"score": 0.0028207566216121856, "phrase": "dynamically_selected_data"}, {"score": 0.0027807832748641195, "phrase": "instruction_cache_usage_strategies"}, {"score": 0.0027218799769229596, "phrase": "jit_compilation"}, {"score": 0.002683304054823427, "phrase": "gpu_code"}, {"score": 0.0026077803487003, "phrase": "problem_characteristics"}, {"score": 0.002480680078868508, "phrase": "higher-order_finite_differences"}, {"score": 0.002445514186654732, "phrase": "multi-block_domains"}, {"score": 0.0024108455980729284, "phrase": "chemora's_capabilities"}, {"score": 0.002309754152767196, "phrase": "black_hole_collisions"}, {"score": 0.002212892265364764, "phrase": "acid_test"}, {"score": 0.0021049977753042253, "phrase": "einstein_equations"}], "paper_keywords": ["Automatic parallelization", " hybrid computing", " GPU computing", " parallel application frameworks", " numerical methods"], "paper_abstract": "Starting from a high-level problem description in terms of partial differential equations using abstract tensor notation, the Chemora framework discretizes, optimizes, and generates complete high performance codes for a wide range of compute architectures. Chemora extends the capabilities of Cactus, facilitating the usage of large-scale CPU/GPU systems in an efficient manner for complex applications, without low-level code tuning. Chemora achieves parallelism through MPI and multi-threading, combining OpenMP and CUDA. Optimizations include high-level code transformations, efficient loop traversal strategies, dynamically selected data and instruction cache usage strategies, and JIT compilation of GPU code tailored to the problem characteristics. The discretization is based on higher-order finite differences on multi-block domains. Chemora's capabilities are demonstrated by simulations of black hole collisions. This problem provides an acid test of the framework, as the Einstein equations contain hundreds of variables and thousands of terms.", "paper_title": "From physics model to results: An optimizing framework for cross-architecture code generation", "paper_id": "WOS:000322738200001"}