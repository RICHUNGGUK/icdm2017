{"auto_keywords": [{"score": 0.04896221231267542, "phrase": "discrete-event_systems"}, {"score": 0.00481495049065317, "phrase": "dynamic_threads"}, {"score": 0.0038930368103015467, "phrase": "concurrency_constraints"}, {"score": 0.003802135020791801, "phrase": "multithreaded_applications"}, {"score": 0.003260690513595527, "phrase": "static_pool"}, {"score": 0.0031845067058084583, "phrase": "pre-existing_instantiated_threads"}, {"score": 0.002426137929553724, "phrase": "terminated_threads"}, {"score": 0.0023415390666563177, "phrase": "petri_net_formalism"}, {"score": 0.002259883463607508, "phrase": "online_limited-lookahead_state-space_search_technique"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Programming techniques", " Concurrent programming", " Software engineering", " Design tools and techniques", " Petri nets", " Discrete-event systems", " Concurrency control", " Autogeneration", " Limited lookahead"], "paper_abstract": "The application of Discrete-Event Systems (DES) theory to the problem of guaranteeably enforcing concurrency constraints in multithreaded applications has been studied under certain assumptions, namely, the assumption of a static pool of pre-existing instantiated threads, whose creation and termination are not modeled. This work presents an extension of this case to handle dynamically instantiated and terminated threads using a Petri net formalism and an online limited-lookahead state-space search technique. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Concurrency control generation for dynamic threads using discrete-event systems", "paper_id": "WOS:000331857300003"}