{"auto_keywords": [{"score": 0.049146612112995945, "phrase": "closest_string_problem"}, {"score": 0.04845849110410783, "phrase": "closest_substring_problem"}, {"score": 0.011016808404270613, "phrase": "sigma"}, {"score": 0.00481495049065317, "phrase": "closest_string_and"}, {"score": 0.004583878086896926, "phrase": "natural_theoretical_computer_science_problems"}, {"score": 0.004450568197899267, "phrase": "computational_biology"}, {"score": 0.004363846362238565, "phrase": "input_strings"}, {"score": 0.004299910946753963, "phrase": "closest_string"}, {"score": 0.004216112320418982, "phrase": "new_string"}, {"score": 0.004174824849669107, "phrase": "distance_d"}, {"score": 0.003784235603958563, "phrase": "np"}, {"score": 0.0036194914688460656, "phrase": "new_algorithms"}, {"score": 0.0034118234596993836, "phrase": "exact_algorithm"}, {"score": 0.003107034833468438, "phrase": "previously_best_known_result"}, {"score": 0.0029722900280316216, "phrase": "polynomial_time_algorithm"}, {"score": 0.0027605398374811667, "phrase": "polynomial_time_approximation_scheme"}, {"score": 0.0027335013118585283, "phrase": "ptas"}, {"score": 0.002404706573379854, "phrase": "new_algorithm"}, {"score": 0.0022443390559699974, "phrase": "restricted_version"}, {"score": 0.002146926767291475, "phrase": "closest_substring"}, {"score": 0.0021049977753042253, "phrase": "open_question"}], "paper_keywords": ["closest string", " closest substring", " fixed-parameter algorithm", " approximation algorithms"], "paper_abstract": "The closest string problem and the closest substring problem are all natural theoretical computer science problems and find important applications in computational biology. Given n input strings, the closest string ( substring) problem finds a new string within distance d to ( a substring of) each input string and such that d is minimized. Both problems are NP-complete. In this paper we propose new algorithms for these two problems. For the closest string problem, we developed an exact algorithm with time complexity O(n vertical bar Sigma vertical bar(O(d))), where Sigma is the alphabet. This improves the previously best known result O(nd(O(d))) and results into a polynomial time algorithm when d = O( log n). By using this algorithm, a polynomial time approximation scheme (PTAS) for the closest string problem is also given with time complexity O(n(O)(epsilon(-2))), improving the previously best known O(n(O)(epsilon (2) log 1/epsilon)) PTAS. A new algorithm for the closest substring problem is also proposed. Finally, we prove that a restricted version of the closest substring problem has the same parameterized complexity as the closest substring, answering an open question in the literature.", "paper_title": "MORE EFFICIENT ALGORITHMS FOR CLOSEST STRING AND SUBSTRING PROBLEMS", "paper_id": "WOS:000271724000011"}