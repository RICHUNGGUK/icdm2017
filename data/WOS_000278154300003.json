{"auto_keywords": [{"score": 0.04903863882355194, "phrase": "fuzzy_extractor"}, {"score": 0.01776339875945009, "phrase": "fuzzy_embedder"}, {"score": 0.005218102527382667, "phrase": "embedded_string"}, {"score": 0.00481495049065317, "phrase": "renewable_cryptographic_keys"}, {"score": 0.004772818068176176, "phrase": "noisy_data"}, {"score": 0.004648609688625397, "phrase": "powerful_but_theoretical_tool"}, {"score": 0.004507760907425495, "phrase": "uniform_strings"}, {"score": 0.004257360656055417, "phrase": "extra_features"}, {"score": 0.004074212307838049, "phrase": "extracted_strings"}, {"score": 0.0038989120088094185, "phrase": "continuous_input_data"}, {"score": 0.003847802030433298, "phrase": "discrete_data"}, {"score": 0.003226834737003501, "phrase": "direct_analysis"}, {"score": 0.003198554193075258, "phrase": "quantization_effects"}, {"score": 0.0031151864044353245, "phrase": "limiting_assumptions"}, {"score": 0.00303398491761013, "phrase": "input_source"}, {"score": 0.002941913249957503, "phrase": "general_construction"}, {"score": 0.0029161225023394363, "phrase": "fuzzy_embedders"}, {"score": 0.00284009509859163, "phrase": "quantization_index_modulation"}, {"score": 0.002729744174693491, "phrase": "performance_measures"}, {"score": 0.002623669616798891, "phrase": "watermarking_community"}, {"score": 0.002555247330102505, "phrase": "security_properties"}, {"score": 0.0025217065652145443, "phrase": "corresponding_fuzzy_embedder"}, {"score": 0.0022095328812245852, "phrase": "two-dimensional_space"}, {"score": 0.0021805201234139475, "phrase": "first_construction"}, {"score": 0.002142426911242168, "phrase": "reliability_perspective"}, {"score": 0.0021049977753042253, "phrase": "second_construction"}], "paper_keywords": ["Biometrics", " Cryptographic keys", " Sphere packing"], "paper_abstract": "A fuzzy extractor is a powerful but theoretical tool that can be used to extract uniform strings from (discrete) noisy sources. However, when using a fuzzy extractor in practice, extra features are needed, such as the renewability of the extracted strings and the ability to use the fuzzy extractor directly on continuous input data instead of discrete data. Our contribution is threefold. Firstly, we propose a fuzzy embedder as a generalization of the fuzzy extractor. A fuzzy embedder naturally supports renewability, as it allows a string to be embedded instead of extracted. It also supports direct analysis of quantization effects, as it makes no limiting assumptions about the nature of the input source. Secondly, we give a general construction for fuzzy embedders based on the technique of quantization index modulation (QIM). We show that the performance measures of a QIM, as proposed by the watermarking community, translate directly to the security properties of the corresponding fuzzy embedder. Finally, we show that from the perspective of the length of the embedded string, quantization in two dimensions is optimal. We present two practical constructions for a fuzzy embedder in two-dimensional space. The first construction is optimal from reliability perspective, and the second construction is optimal in the length of the embedded string.", "paper_title": "Embedding renewable cryptographic keys into noisy data", "paper_id": "WOS:000278154300003"}