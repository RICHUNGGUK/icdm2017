{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fine-grained_tasks"}, {"score": 0.004303830426772906, "phrase": "well-suited_programming_paradigm"}, {"score": 0.004175368300206908, "phrase": "grid"}, {"score": 0.003769006950727621, "phrase": "divide-and-conquer_application"}, {"score": 0.003403122817578447, "phrase": "long-running_applications"}, {"score": 0.0032336801561165113, "phrase": "fault-tolerance_mechanism"}, {"score": 0.0031682817605340028, "phrase": "satin"}, {"score": 0.0030726480920918097, "phrase": "negligible_overhead"}, {"score": 0.003010496595090984, "phrase": "normal_execution"}, {"score": 0.0028026735035370206, "phrase": "redundant_work"}, {"score": 0.0021705796895687864, "phrase": "european_testbed"}, {"score": 0.0021049977753042253, "phrase": "ec-funded_project"}], "paper_keywords": ["fault-tolerance", " divide-and-conquer", " grid computing", " Java"], "paper_abstract": "Divide-and-conquer is a well-suited programming paradigm for parallel Grid applications. Our Satin system efficiently schedules the fine-grained tasks of a divide-and-conquer application across multiple clusters in a grid. To accommodate long-running applications, we present a fault-tolerance mechanism for Satin that has negligible overhead during normal execution, while minimizing the amount of redundant work done after a crash of one or more nodes. We study the impact of our fault-tolerance mechanism on application efficiency, both on the Dutch DAS-2 system and using the European testbed of the EC-funded project GridLab.", "paper_title": "Fault-tolerant scheduling of fine-grained tasks in grid environments", "paper_id": "WOS:000235685200009"}