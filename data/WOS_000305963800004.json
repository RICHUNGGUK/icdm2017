{"auto_keywords": [{"score": 0.048929739366992464, "phrase": "testing_techniques"}, {"score": 0.015719716506582538, "phrase": "defect_characteristics"}, {"score": 0.004614483128885678, "phrase": "new_software-testing_techniques"}, {"score": 0.004395532072377065, "phrase": "widespread_acceptance"}, {"score": 0.003964007795174772, "phrase": "empirical_studies"}, {"score": 0.0037075456471849892, "phrase": "known_defects"}, {"score": 0.0028890603352364273, "phrase": "experiment_architecture"}, {"score": 0.002526938673434697, "phrase": "gui-testing_techniques"}, {"score": 0.002320449502337321, "phrase": "defect_detection"}, {"score": 0.0022508572821818124, "phrase": "gui_testing"}, {"score": 0.0021049977753042253, "phrase": "defective_code"}], "paper_keywords": ["Experimentation", " Measurement", " Defects", " faults", " GUI testing"], "paper_abstract": "As new software-testing techniques are developed, before they can achieve widespread acceptance, their effectiveness at detecting defects must be evaluated. The most common way of evaluating testing techniques is with empirical studies, in which one or more techniques are tried out on software with known defects. However, the defects used can affect the performance of the techniques. To complicate matters, it is not even clear how to effectively describe or characterize defects. To address these problems, this article describes an experiment architecture for empirically evaluating testing techniques which takes both defect and test-suite characteristics into account. As proof of concept, an experiment on GUI-testing techniques is conducted. It provides evidence that the defect characteristics proposed do help explain defect detection, at least for GUI testing, and it explores the relationship between the coverage of defective code and the detection of defects.", "paper_title": "Accounting for Defect Characteristics in Evaluations of Testing Techniques", "paper_id": "WOS:000305963800004"}