{"auto_keywords": [{"score": 0.034564065191684486, "phrase": "peda"}, {"score": 0.00481495049065317, "phrase": "production_environment_server_systems"}, {"score": 0.004638788604042707, "phrase": "production_servers"}, {"score": 0.004553128404612054, "phrase": "onerous_and_error-prone_work"}, {"score": 0.004386503433248535, "phrase": "existing_tools"}, {"score": 0.004122179528285764, "phrase": "system_events"}, {"score": 0.003996027647611435, "phrase": "intrusion_propagation"}, {"score": 0.0039221899471111, "phrase": "dynamic_taint_tracking"}, {"score": 0.0037087324991876727, "phrase": "significant_runtime_overhead"}, {"score": 0.0035728978842974246, "phrase": "production_environment_damage_assessment"}, {"score": 0.003357435261066107, "phrase": "postmortem_intrusion_analysis"}, {"score": 0.0033159224502739247, "phrase": "production_workload_servers"}, {"score": 0.0032143649757754595, "phrase": "\"has-been-infected\"_execution"}, {"score": 0.0030965805992969027, "phrase": "separate_analyzing_instrumentation_platform"}, {"score": 0.0030204580407008188, "phrase": "heavy_workload_analysis"}, {"score": 0.0029462012558267863, "phrase": "replayed_execution"}, {"score": 0.0028737647829311587, "phrase": "instrumentation_platform"}, {"score": 0.0026013505538490223, "phrase": "first-run_execution"}, {"score": 0.002521623057264411, "phrase": "hardware-assisted_virtual_machine"}, {"score": 0.002474961375646351, "phrase": "minimum_runtime_overhead"}, {"score": 0.0023546984428119864, "phrase": "peda_system"}, {"score": 0.0021987994275190314, "phrase": "real-life_intrusion_studies"}, {"score": 0.002131383155056741, "phrase": "peda_intrusion_analysis"}, {"score": 0.0021049977753042253, "phrase": "existing_techniques"}], "paper_keywords": ["Forward and backward tracking", " heterogeneous virtual machine (VM) migration", " taint analysis"], "paper_abstract": "Analyzing the intrusion to production servers is an onerous and error-prone work for system security technicians. Existing tools or techniques are quite limited. For instance, system events tracking lacks completeness of intrusion propagation, while dynamic taint tracking is not feasible to be deployed due to significant runtime overhead. Thus, we propose production environment damage assessment (PEDA), a systematic approach to do postmortem intrusion analysis for production workload servers. PEDA replays the \"has-been-infected\" execution with high fidelity on a separate analyzing instrumentation platform to conduct the heavy workload analysis. Though the replayed execution runs atop the instrumentation platform (i.e., binary-translation-based virtual machine), PEDA allows the first-run execution to run atop the hardware-assisted virtual machine to ensure minimum runtime overhead. Our evaluation demonstrates the efficiency of the PEDA system with a runtime overhead as low as 5%. The real-life intrusion studies show the advantage of PEDA intrusion analysis over existing techniques.", "paper_title": "PEDA: Comprehensive Damage Assessment for Production Environment Server Systems", "paper_id": "WOS:000297344200012"}