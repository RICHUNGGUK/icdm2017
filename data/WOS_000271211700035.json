{"auto_keywords": [{"score": 0.0457701092857861, "phrase": "type-directed_coercion_insertion"}, {"score": 0.00481495049065317, "phrase": "typed_coercions"}, {"score": 0.004593787100061613, "phrase": "important_program"}, {"score": 0.00415333528095237, "phrase": "coercive_subtyping"}, {"score": 0.004016072233242585, "phrase": "type_theories"}, {"score": 0.003679969180334367, "phrase": "gradual_typing"}, {"score": 0.003558294449586273, "phrase": "lining_code"}, {"score": 0.003487222504700868, "phrase": "security_policies"}, {"score": 0.003417565253539315, "phrase": "access_control"}, {"score": 0.0033718991936259038, "phrase": "provenance_tracking"}, {"score": 0.003195236629209403, "phrase": "general_theory"}, {"score": 0.0030278017562213265, "phrase": "inherent_tradeoff"}, {"score": 0.002507748938616919, "phrase": "increasingly_powerful_coercion_generation_strategies"}, {"score": 0.002441118140830714, "phrase": "example_applications"}, {"score": 0.0023762535034673017, "phrase": "increased_power"}, {"score": 0.002206606452557159, "phrase": "inherent_ambiguity_problems"}], "paper_keywords": ["Design", " Languages", " Theory", " coercion insertion", " nonambiguity", " type-directed translation", " provenance", " gradual typing"], "paper_abstract": "A number of important program rewriting scenarios can be recast as type-directed coercion insertion. These range from more theoretical applications such as coercive subtyping and supporting overloading in type theories, to more practical applications such as integrating static and dynamically typed code using gradual typing, and in-lining code to enforce security policies such as access control and provenance tracking. In this paper we give a general theory of type-directed coercion insertion. We specifically explore the inherent tradeoff between expressiveness and ambiguity-the more powerful the strategy for generating coercions, the greater the possibility of several, semantically distinct rewritings for a given program. We consider increasingly powerful coercion generation strategies, work out example applications supported by the increased power (including those mentioned above), and identify the inherent ambiguity problems of each setting, along with various techniques to tame the ambiguities.", "paper_title": "A Theory of Typed Coercions and its Applications", "paper_id": "WOS:000271211700035"}