{"auto_keywords": [{"score": 0.027325564729984462, "phrase": "nitpick"}, {"score": 0.004126123386192962, "phrase": "finite_relational_model_finder"}, {"score": 0.003907212558276185, "phrase": "high-level_definitional_principles"}, {"score": 0.0034092396400930446, "phrase": "previous_work"}, {"score": 0.003257727050827128, "phrase": "algebraic_datatypes"}, {"score": 0.0031990183472675377, "phrase": "restricted_occurrences"}, {"score": 0.003141364320497748, "phrase": "unbounded_quantifiers"}, {"score": 0.002947611960613497, "phrase": "arbitrary_formulas"}, {"score": 0.002816556934231128, "phrase": "three-valued_kleene_logic"}, {"score": 0.0025951294037626174, "phrase": "counterexample_generator"}, {"score": 0.002305589818994465, "phrase": "inductively_defined_context-free_grammar"}, {"score": 0.0021830553825770097, "phrase": "aa_trees"}, {"score": 0.0021049977753042253, "phrase": "coalgebraic_list_datatype"}], "paper_keywords": ["Model finding", " Higher-order logic", " First-order relational logic"], "paper_abstract": "We present techniques for applying a finite relational model finder to logical specifications that involve high-level definitional principles such as (co)inductive predicates, (co)algebraic datatypes, and (co)recursive functions. In contrast to previous work, which focused on algebraic datatypes and restricted occurrences of unbounded quantifiers in formulas, we can handle arbitrary formulas by means of a three-valued Kleene logic. The techniques form the basis of the counterexample generator Nitpick for Isabelle/HOL. As case studies, we consider formulas about an inductively defined context-free grammar, a functional implementation of AA trees, and a coalgebraic list datatype.", "paper_title": "Relational analysis of (co)inductive predicates, (co)algebraic datatypes, and (co)recursive functions", "paper_id": "WOS:000313815500006"}