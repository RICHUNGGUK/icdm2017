{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.048691918581482134, "phrase": "occlusion_query"}, {"score": 0.004745056850725867, "phrase": "block_clipping"}, {"score": 0.004508286991825192, "phrase": "acceleration_method"}, {"score": 0.004442824994700736, "phrase": "maximum_intensity_projection"}, {"score": 0.004378348380410675, "phrase": "mip"}, {"score": 0.004252063063815893, "phrase": "graphics_processing_units"}, {"score": 0.004010342699414496, "phrase": "cache_efficiency"}, {"score": 0.003810093416457147, "phrase": "volume_data"}, {"score": 0.003754731210715724, "phrase": "equal_blocks"}, {"score": 0.003489714006817602, "phrase": "block_boundary"}, {"score": 0.0031728680535262083, "phrase": "data_size"}, {"score": 0.0030587884803931964, "phrase": "efficient_visibility"}, {"score": 0.002927278301452369, "phrase": "new_method"}, {"score": 0.002528300562452668, "phrase": "depth_buffer"}, {"score": 0.0024915167458844914, "phrase": "long_latency"}, {"score": 0.002455266773537278, "phrase": "asynchronous_functionality"}, {"score": 0.0023843376332011936, "phrase": "suitable_adaptations"}, {"score": 0.002315452777999619, "phrase": "optimal_performance"}, {"score": 0.0022321322970228308, "phrase": "good_performance_improvement"}, {"score": 0.0021996478802839316, "phrase": "image_degradation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["MIP volume rendering", " texture cache", " visibility culling", " GPU-based rendering"], "paper_abstract": "We present an acceleration method for maximum intensity projection (MIP) based on graphics processing units (GPUs). To enhance the cache efficiency of the GPU, we divide volume data into equal blocks without memory reordering overhead, and seam on the block boundary. Then, we perform visibility culling on each block to reduce data size during runtime. For efficient visibility culling, we propose a new method using occlusion query, which is a function supported by GPUs. Because this has some drawbacks such as requiring depth buffer, long latency and asynchronous functionality, we present suitable adaptations and experiments for optimal performance. The algorithm achieves good performance improvement without image degradation. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Accelerated MIP based on GPU using block clipping and occlusion query", "paper_id": "WOS:000258024100001"}