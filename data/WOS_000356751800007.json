{"auto_keywords": [{"score": 0.03541239344095569, "phrase": "token_swaps"}, {"score": 0.026164860660277314, "phrase": "polynomial_time"}, {"score": 0.00481495049065317, "phrase": "labeled_tokens"}, {"score": 0.004518442937844318, "phrase": "n_tokens"}, {"score": 0.0044237033788643715, "phrase": "n-vertex_graph"}, {"score": 0.0042102651938187114, "phrase": "distinct_starting_vertex"}, {"score": 0.004121960535174029, "phrase": "distinct_target"}, {"score": 0.003681238363808568, "phrase": "adjacent_vertices"}, {"score": 0.0029565620771207003, "phrase": "token_placement"}, {"score": 0.002196342933346204, "phrase": "complete_bipartite_graphs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Approximation", " Complete bipartite graph", " Graph algorithm", " Sorting network", " Tree"], "paper_abstract": "Consider a puzzle consisting of n tokens on an n-vertex graph, where each token has a distinct starting vertex and a distinct target vertex it wants to reach, and the only allowed transformation is to swap the tokens on adjacent vertices. We prove that every such puzzle is solvable in O(n(2)) token swaps, and thus focus on the problem of minimizing the number of token swaps to reach the target token placement. We give a polynomial-time 2-approximation algorithm for trees, and using this, obtain a polynomial-time 2 alpha-approximation algorithm for graphs whose tree a-spanners can be computed in polynomial time. Finally, we show that the problem can be solved exactly in polynomial time on complete bipartite graphs. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Swapping labeled tokens on graphs", "paper_id": "WOS:000356751800007"}