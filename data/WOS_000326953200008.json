{"auto_keywords": [{"score": 0.034076945538525735, "phrase": "dftl"}, {"score": 0.015719716506582538, "phrase": "poor_performance"}, {"score": 0.013183532105195742, "phrase": "ftl"}, {"score": 0.004772367030970874, "phrase": "random_writes"}, {"score": 0.004646852519870358, "phrase": "major_concern"}, {"score": 0.00436661740263741, "phrase": "enterprise-scale_environments"}, {"score": 0.004232875294230749, "phrase": "important_causes"}, {"score": 0.004066898031169739, "phrase": "flash_translation_layer"}, {"score": 0.0038900709793274484, "phrase": "-physical_address_translations"}, {"score": 0.003821503621554738, "phrase": "erase-before-write_characteristics"}, {"score": 0.0037043953071235155, "phrase": "complete_paradigm_shift"}, {"score": 0.003606866938661143, "phrase": "core_ftl_engine"}, {"score": 0.0035590664550919854, "phrase": "existing_techniques"}, {"score": 0.0034194194985380268, "phrase": "page-level_address_mappings"}, {"score": 0.003329368827624161, "phrase": "flashsim"}, {"score": 0.003299880298525124, "phrase": "realistic_enterprise-scale_workloads"}, {"score": 0.003198705576491802, "phrase": "enterprise-scale_storage_systems"}, {"score": 0.002824005136794786, "phrase": "large_financial_institution"}, {"score": 0.002761856557698856, "phrase": "average_response_time"}, {"score": 0.002641621667026613, "phrase": "garbage_collector"}, {"score": 0.002572001496778222, "phrase": "hybrid_ftl_scheme"}, {"score": 0.002515384834484012, "phrase": "well-known_read-dominant_tpc-h_benchmark"}, {"score": 0.002395166073437286, "phrase": "system_response_time"}, {"score": 0.002250415129116109, "phrase": "dftl-based_ssd"}, {"score": 0.0021716540012278744, "phrase": "page-based_ftl_scheme"}, {"score": 0.0021049977753042253, "phrase": "financial_trace"}], "paper_keywords": ["flash memory", " flash translation layer", " storage system"], "paper_abstract": "The poor performance of random writes has been a cause of major concern which needs to be addressed to better utilize the potential of flash in enterprise-scale environments. We examine one of the important causes of this poor performance: the design of the flash translation layer (FTL) which performs the virtual-to-physical address translations and hides the erase-before-write characteristics of flash. We propose a complete paradigm shift in the design of the core FTL engine from the existing techniques with our Demand-Based Flash Translation Layer (DFTL) which selectively caches page-level address mappings. Our experimental evaluation using FlashSim with realistic enterprise-scale workloads endorses the utility of DFTL in enterprise-scale storage systems by demonstrating: 1) improved performance, 2) reduced garbage collection overhead and 3) better overload behavior compared with hybrid FTL schemes which are the most popular implementation methods. For example, a predominantly random-write dominant I/O trace from an OLTP application running at a large financial institution shows a 78% improvement in average response time (due to a 3-fold reduction in operations of the garbage collector), compared with the hybrid FTL scheme. Even for the well-known read-dominant TPC-H benchmark, for which DFTL introduces additional overheads, we improve system response time by 56%. Moreover, interestingly, when write-back cache on DFTL-based SSD is enabled, DFTL even outperforms the page-based FTL scheme, improving their response time by 72% in Financial trace.", "paper_title": "A Temporal Locality-Aware Page-Mapped Flash Translation Layer", "paper_id": "WOS:000326953200008"}