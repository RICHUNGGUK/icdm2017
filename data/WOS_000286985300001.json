{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "neural_network"}, {"score": 0.03663103907138758, "phrase": "logical_rules"}, {"score": 0.026013352125464323, "phrase": "real_life_data_sets"}, {"score": 0.004567596860086148, "phrase": "neural_networks"}, {"score": 0.004332894955218135, "phrase": "data_mining_practitioners"}, {"score": 0.004003169429008801, "phrase": "statistical_techniques"}, {"score": 0.0039333604469462356, "phrase": "real_data_sets"}, {"score": 0.0034168317227203206, "phrase": "empirical_data-reverse_analysis"}, {"score": 0.0030473890431038358, "phrase": "hebbian"}, {"score": 0.0021998194157393353, "phrase": "conjunctive_normal_form"}, {"score": 0.0021049977753042253, "phrase": "horn_clauses"}], "paper_keywords": ["Reverse analysis", " Data mining", " Hebbian learning", " CNF", " Horn clauses"], "paper_abstract": "Neural networks are becoming very popular with data mining practitioners because they have proven through comparison their predictive power with statistical techniques using real data sets. Based on this idea, we will present a method for inducing logical rules from empirical data-Reverse Analysis. When the values of the connections of a neural network resulting from Hebbian learning for the data are given, we hope to know what logical rules are entrenched in it. This method is tested with some real life data sets. In real life data sets, logical rules are assumed to be in conjunctive normal form (CNF) since Horn clauses are inadequate.", "paper_title": "Logic mining in neural network: reverse analysis method", "paper_id": "WOS:000286985300001"}