{"auto_keywords": [{"score": 0.02363669222305869, "phrase": "design_abstraction"}, {"score": 0.00481495049065317, "phrase": "systemc-uml_profiles"}, {"score": 0.004771276094330179, "phrase": "model-driven_embedded_system_design_flow"}, {"score": 0.004642604455537883, "phrase": "systems_complexity"}, {"score": 0.004614483128885678, "phrase": "multifaceted_nature"}, {"score": 0.0045726187330434025, "phrase": "flexible_high-level_design_techniques"}, {"score": 0.004462819565604272, "phrase": "model-driven_approaches"}, {"score": 0.0042252744467257885, "phrase": "high_degree"}, {"score": 0.004148924650733264, "phrase": "common_framework"}, {"score": 0.004061584718427419, "phrase": "configuration_management"}, {"score": 0.004036968488559984, "phrase": "complex_heterogeneous_systems"}, {"score": 0.003976076057473637, "phrase": "great_variety"}, {"score": 0.003798874875408548, "phrase": "uml"}, {"score": 0.0037529131348732715, "phrase": "embedded_system"}, {"score": 0.0036074566790283633, "phrase": "single_modeling_language"}, {"score": 0.0034781805438547017, "phrase": "whole_system_development_flow"}, {"score": 0.0032828706086018133, "phrase": "specific_abstraction_level"}, {"score": 0.0032431667821391044, "phrase": "possible_strategies"}, {"score": 0.003117405395602633, "phrase": "common_modeling_framework"}, {"score": 0.0030424424705823455, "phrase": "system_design_development"}, {"score": 0.0027769919995947676, "phrase": "systemc_uml_profile"}, {"score": 0.002751751956416832, "phrase": "structural_aspects"}, {"score": 0.0027101925966844117, "phrase": "behavioral_aspects"}, {"score": 0.0026209522797963447, "phrase": "systemc_process"}, {"score": 0.002565695161331182, "phrase": "complementary_behavioral_formalisms"}, {"score": 0.002519257735651759, "phrase": "model-driven_soc_design_flow"}, {"score": 0.0025039656549083497, "phrase": "platform-independent_and_platform-specific_description_level"}, {"score": 0.0023849158959156026, "phrase": "already_defined_model-driven_hardware-software_co-design_flow"}, {"score": 0.002320449502337321, "phrase": "platform-independent_design_level"}, {"score": 0.002299349400076823, "phrase": "platform-specific_level"}, {"score": 0.002278440725193307, "phrase": "refined_co-design_flow"}, {"score": 0.0022508572821818124, "phrase": "sysml_description"}, {"score": 0.0022303885749306645, "phrase": "high_level"}, {"score": 0.002163491500079535, "phrase": "refined_systemc_uml_models"}, {"score": 0.0021438155673297377, "phrase": "lower_levels"}], "paper_keywords": ["Embedded systems and System-on-Chip design", " Model-driven development", " Modeling notations", " UML profiles", " SysML", " SystemC"], "paper_abstract": "Modern embedded systems development, due to systems complexity and multifaceted nature, requires flexible high-level design techniques and notations. In this context, model-driven approaches are gaining popularity, both in industry as well as in academy, since they offer a high degree of abstraction and provide a common framework for the design, simulation and configuration management of complex heterogeneous systems. Moreover, a great variety of languages have been emerging as customization (or profiles) of the Unified Modeling Language (UML) for the embedded system and System-on-Chip (SoC) domains. No single modeling language or profile is adequate to cover aspects and requirements of the whole system development flow. Indeed, each of these languages owns characteristics and offers modeling primitives suitable for designing at a specific abstraction level. Therefore, possible strategies for integrating such UML profiles must be determined, in order to establish a common modeling framework able to support all steps of a system design development. This paper presents the integration of two modeling languages, the SysML and the SystemC UML profiles. The integration is based on a mapping from the SysML to the SystemC UML profile for the structural aspects, while for the behavioral aspects two main models of computation, SysML control-flow graphs and SystemC Process state machines, are proposed as complementary behavioral formalisms to be adopted in a model-driven SoC design flow at platform-independent and platform-specific description level, respectively. The integration we propose, has enabled us also to refine an already defined model-driven hardware-software co-design flow, where a gap remained moving from a platform-independent design level to a platform-specific level. The refined co-design flow starts from a SysML description at a high level of design abstraction, and proceeds through a chain of refined SystemC UML models, to lower levels of design abstraction, where the more complex last-level SystemC coding is left to automation.", "paper_title": "Integrating the SysML and the SystemC-UML profiles in a model-driven embedded system design flow", "paper_id": "WOS:000328330700003"}