{"auto_keywords": [{"score": 0.042948433778622036, "phrase": "aesa_algorithm"}, {"score": 0.041119376424415405, "phrase": "aesa"}, {"score": 0.00481495049065317, "phrase": "metric_spaces"}, {"score": 0.004472671724694934, "phrase": "euclidean"}, {"score": 0.004362564831572539, "phrase": "distance_computation"}, {"score": 0.004001593118269276, "phrase": "performance_measurement"}, {"score": 0.003746673633703251, "phrase": "promising_candidate"}, {"score": 0.003464890914694523, "phrase": "new_information"}, {"score": 0.0034083145672246067, "phrase": "previous_calculation"}, {"score": 0.00327086925741257, "phrase": "piaesa_algorithm"}, {"score": 0.0031004173389196387, "phrase": "approximation_criterion"}, {"score": 0.0030497740719977835, "phrase": "first_iterations"}, {"score": 0.002938821840519756, "phrase": "good_nn_candidates"}, {"score": 0.002740109776120878, "phrase": "cheap_approximation"}, {"score": 0.0027064605585684696, "phrase": "distance_function"}, {"score": 0.0026622351303038885, "phrase": "good_approximation"}, {"score": 0.0025865679621853667, "phrase": "aesa_usual_behavior"}, {"score": 0.002544296663333569, "phrase": "pivot_list"}, {"score": 0.0025027144548626975, "phrase": "preprocessing_time"}, {"score": 0.002471973283582411, "phrase": "run_time"}, {"score": 0.0022577559526646904, "phrase": "competing_methods"}, {"score": 0.002202617924488607, "phrase": "new_approach"}, {"score": 0.0021755548389283856, "phrase": "significant_reduction"}, {"score": 0.0021576973674470997, "phrase": "distance_computations"}, {"score": 0.0021311850321045767, "phrase": "execution_time_penalty"}], "paper_keywords": ["Fast nearest neighbor", " Similarity search", " Metric space"], "paper_abstract": "This work focus on fast nearest neighbor (NN) search algorithms that can work in any metric space (not just the Euclidean distance) and where the distance computation is very time consuming. One of the most well known methods in this field is the AESA algorithm, used as baseline for performance measurement for over twenty years. The AESA works in two steps that repeats: first it searches a promising candidate to NN and computes its distance (approximation step), next it eliminates all the unsuitable NN candidates in view of the new information acquired in the previous calculation (elimination step). This work introduces the PiAESA algorithm. This algorithm improves the performance of the AESA algorithm by splitting the approximation criterion: on the first iterations, when there is not enough information to find good NN candidates, it uses a list of pivots (objects in the database) to obtain a cheap approximation of the distance function. Once a good approximation is obtained it switches to the AESA usual behavior. As the pivot list is built in preprocessing time, the run time of PiAESA is almost the same than the AESA one. In this work, we report experiments comparing with some competing methods. Our empirical results show that this new approach obtains a significant reduction of distance computations with no execution time penalty. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A fast pivot-based indexing algorithm for metric spaces", "paper_id": "WOS:000293050700002"}