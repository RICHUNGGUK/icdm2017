{"auto_keywords": [{"score": 0.03223276241340444, "phrase": "cfm"}, {"score": 0.00481495049065317, "phrase": "distributed_systems"}, {"score": 0.004567596860086148, "phrase": "basic_message_sequence_charts"}, {"score": 0.004371160978838441, "phrase": "positive_and_negative_scenarios"}, {"score": 0.004257360656055417, "phrase": "finite-state_machines"}, {"score": 0.0038309141193444015, "phrase": "fifo_buffers"}, {"score": 0.003698442219929622, "phrase": "system_realizations"}, {"score": 0.0036020923276404403, "phrase": "key_contribution"}, {"score": 0.003447035529485425, "phrase": "angluin's_learning_algorithm"}, {"score": 0.002890557197908352, "phrase": "positive_scenarios"}, {"score": 0.002790511479398411, "phrase": "negative_ones"}, {"score": 0.0024667783849055634, "phrase": "msc_languages"}, {"score": 0.002298902547676131, "phrase": "optimization_technique"}, {"score": 0.0022389308000757037, "phrase": "partial_orders"}, {"score": 0.0021613897794439227, "phrase": "substantial_empirical_evidence"}, {"score": 0.0021049977753042253, "phrase": "practical_feasibility"}], "paper_keywords": ["Software engineering/requirements/specifications/elicitation methods", " software engineering/design/design concepts", " computing methodologies/artificial intelligence/learning/induction", " theory of computation/computation by abstract devices/models of computation/automata"], "paper_abstract": "This paper is concerned with bridging the gap between requirements and distributed systems. Requirements are defined as basic message sequence charts (MSCs) specifying positive and negative scenarios. Communicating finite-state machines (CFMs), i.e., finite automata that communicate via FIFO buffers, act as system realizations. The key contribution is a generalization of Angluin's learning algorithm for synthesizing CFMs from MSCs. This approach is exact - the resulting CFM precisely accepts the set of positive scenarios and rejects all negative ones - and yields fully asynchronous implementations. The paper investigates for which classes of MSC languages CFMs can be learned, presents an optimization technique for learning partial orders, and provides substantial empirical evidence indicating the practical feasibility of the approach.", "paper_title": "Learning Communicating Automata from MSCs", "paper_id": "WOS:000278073400008"}