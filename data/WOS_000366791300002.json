{"auto_keywords": [{"score": 0.048339607507904336, "phrase": "android"}, {"score": 0.03578226641234323, "phrase": "malicious_code"}, {"score": 0.0048149512057830334, "phrase": "droid"}, {"score": 0.004775621286637291, "phrase": "mouse"}, {"score": 0.004678384952779725, "phrase": "split-personality_malware"}, {"score": 0.004416713079266374, "phrase": "android_malware"}, {"score": 0.004362564831572539, "phrase": "current_automated_analysis_systems"}, {"score": 0.00430907756010007, "phrase": "av_solutions"}, {"score": 0.004273782634394231, "phrase": "mobile_sandboxes"}, {"score": 0.004204242710770817, "phrase": "google"}, {"score": 0.004101579688745222, "phrase": "sand-finger"}, {"score": 0.004018087343963485, "phrase": "android-based_analysis_systems"}, {"score": 0.0039040344230094164, "phrase": "ten_unique_analysis_environments"}, {"score": 0.0036855132234738736, "phrase": "tested_environments"}, {"score": 0.0036402965997795536, "phrase": "actual_hardware"}, {"score": 0.0035224030823976186, "phrase": "analysis_system"}, {"score": 0.003230723298995081, "phrase": "dynamic_code_loading"}, {"score": 0.003204232566468624, "phrase": "benign_and_malicious_apps"}, {"score": 0.00313894917464766, "phrase": "malicious_apps"}, {"score": 0.0027064605585684696, "phrase": "encrypted_assets"}, {"score": 0.002673223453963085, "phrase": "network_connections"}, {"score": 0.002565345470805401, "phrase": "existing_functions"}, {"score": 0.0025027144548626975, "phrase": "arbitrary_code"}, {"score": 0.0024215727801940434, "phrase": "dynamic_code"}, {"score": 0.0024017007954518065, "phrase": "script_loading"}, {"score": 0.002323826502178581, "phrase": "concept_malware"}, {"score": 0.002295277579105179, "phrase": "up-to-date_malware_scanners"}, {"score": 0.002239225269052105, "phrase": "known_samples"}, {"score": 0.002202617924488607, "phrase": "google_play_store"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Android malware", " Dynamic code loading", " Dynamic script loading"], "paper_abstract": "In the work at hand, we first demonstrate that Android malware can bypass current automated analysis systems, including AV solutions, mobile sandboxes, and the Google Bouncer. A tool called Sand-Finger allowed us to fingerprint Android-based analysis systems. By analyzing the fingerprints of ten unique analysis environments from different vendors, we were able to find characteristics in which all tested environments differ from actual hardware. Depending on the availability of an analysis system, malware can either behave benignly or load malicious code dynamically at runtime. We also have investigated the widespread of dynamic code loading among benign and malicious apps, and found that malicious apps make use of this technique more often. About one third out of 14,885 malware samples we analyzed was found to dynamically load and execute code. To hide malicious code from analysis, it can be loaded from encrypted assets or via network connections. As we show, however, even dynamic scripts which call existing functions enable an attacker to execute arbitrary code. To demonstrate the effectiveness of both dynamic code and script loading, we create proof-of-concept malware that surpasses up-to-date malware scanners for Android and show that known samples can enter the Google Play Store by modifying them only slightly. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A game of Droid and Mouse: The threat of split-personality malware on Android", "paper_id": "WOS:000366791300002"}