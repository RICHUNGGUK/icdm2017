{"auto_keywords": [{"score": 0.05007851542092211, "phrase": "transactional_memory"}, {"score": 0.0415973318138235, "phrase": "offline-greedy"}, {"score": 0.038163087835001164, "phrase": "conflict_graph"}, {"score": 0.004673709383305897, "phrase": "greedy_contention_managers"}, {"score": 0.004502943680955863, "phrase": "n_transactions"}, {"score": 0.004133390261297075, "phrase": "duration_tau"}, {"score": 0.0039822874870125095, "phrase": "first_algorithm"}, {"score": 0.003737934295442975, "phrase": "high_probability"}, {"score": 0.003696390664266446, "phrase": "offline_algorithm"}, {"score": 0.0034695189961509625, "phrase": "second_algorithm"}, {"score": 0.0034566148296956045, "phrase": "online-greedy"}, {"score": 0.003137377828938824, "phrase": "third_algorithm"}, {"score": 0.0031257046538823354, "phrase": "adaptive-greedy"}, {"score": 0.0030909442697163356, "phrase": "adaptive_version"}, {"score": 0.0030565692640988585, "phrase": "previous_algorithms"}, {"score": 0.0029228387900175554, "phrase": "online_algorithm"}, {"score": 0.002847540262784593, "phrase": "c._all_of"}, {"score": 0.002826383890518307, "phrase": "algorithms_exhibit_competitive_ratio"}, {"score": 0.00269263690712392, "phrase": "shared_resources"}, {"score": 0.002603758927691463, "phrase": "new_non-trivial_tradeoffs"}, {"score": 0.0025366596616434793, "phrase": "window_sizes"}, {"score": 0.0025178072071268534, "phrase": "transaction_conflicts"}, {"score": 0.0024897902536499005, "phrase": "execution_window"}, {"score": 0.002443784721651744, "phrase": "window-based_algorithms"}, {"score": 0.0024075916292945715, "phrase": "sorted_link_list"}, {"score": 0.002276566401216226, "phrase": "evaluation_results"}, {"score": 0.0022428442879034614, "phrase": "practical_performance_throughput"}, {"score": 0.0021049977753042253, "phrase": "non-trivial_provable_properties"}], "paper_keywords": ["Transactional memory", " Execution window", " Contention management", " Greedy transaction scheduling", " Shared memory", " Concurrency control"], "paper_abstract": "We consider greedy contention managers for transactional memory for M x N execution windows of transactions with M threads and N transactions per thread. We present, formally analyze, and experimentally evaluate three new randomized greedy contention management algorithms for transaction windows. Assuming that each transaction has duration tau and conflicts with at most C other transactions inside the window, the first algorithm Offline-Greedy produces a schedule of length O(tau center dot (C + N center dot log(MN))) with high probability. The offline algorithm depends on knowing the conflict graph which evolves while the execution of the transactions progresses. The second algorithm Online-Greedy produces a schedule of length that is only a logarithmic factor worse than Offline-Greedy, but does not require knowledge of the conflict graph. The third algorithm Adaptive-Greedy is the adaptive version of the previous algorithms which produces a schedule of length asymptotically the same as with online algorithm by adaptively guessing the value of C. All of the algorithms exhibit competitive ratio very close to O(s), where s is the number of shared resources, and at the same time, our algorithms provide new non-trivial tradeoffs for greedy transaction scheduling that parameterize window sizes and transaction conflicts within the execution window. We evaluate these window-based algorithms experimentally using the sorted link list, red-black tree, skip list, and vacation benchmarks. The evaluation results confirm their benefits in practical performance throughput and other metrics such as aborts per commit ratio and execution time overhead, along with the non-trivial provable properties of the algorithms.", "paper_title": "Window-based greedy contention management for transactional memory: theory and practice", "paper_id": "WOS:000304652300003"}