{"auto_keywords": [{"score": 0.04621807134587006, "phrase": "total_number"}, {"score": 0.04145379063270441, "phrase": "bin_packing"}, {"score": 0.00481495049065317, "phrase": "item_fragmentation"}, {"score": 0.004675652357253327, "phrase": "classical_bin_packing_problem"}, {"score": 0.003920209964956682, "phrase": "size_increasing_fragmentation"}, {"score": 0.003727628340195049, "phrase": "input_size"}, {"score": 0.003619672388007568, "phrase": "fixed_size"}, {"score": 0.0032046343506232588, "phrase": "fragmented_items"}, {"score": 0.003059925849144792, "phrase": "message_transmission"}, {"score": 0.0030343239259424497, "phrase": "community_tv_networks"}, {"score": 0.0030089355635315005, "phrase": "vlsi_circuit_design"}, {"score": 0.0029837589912490026, "phrase": "preemptive_scheduling"}, {"score": 0.0029587924529332695, "phrase": "parallel_machines"}, {"score": 0.002873038567884343, "phrase": "bp-sif"}, {"score": 0.0027317585060414253, "phrase": "polynomial_time_approximation_scheme"}, {"score": 0.002564862727498502, "phrase": "dual_ptas"}, {"score": 0.002522106883609611, "phrase": "ptas."}, {"score": 0.0024182831453515782, "phrase": "dual_asymptotic"}, {"score": 0.0022609695885550058, "phrase": "non-trivial_application"}, {"score": 0.002213957639000606, "phrase": "fptas"}, {"score": 0.0021861845339709533, "phrase": "linear_programs"}, {"score": 0.0021678771715091492, "phrase": "negative_entries"}, {"score": 0.002122785693770903, "phrase": "garg"}, {"score": 0.002104998402294156, "phrase": "khandekar"}], "paper_keywords": [""], "paper_abstract": "We consider two variants of the classical bin packing problem in which items may be fragmented. This can potentially reduce the total number of bins needed for packing the instance. However, since fragmentation incurs overhead, we attempt to avoid it as much as possible. In bin packing with size increasing fragmentation (BP-SIF), fragmenting an item increases the input size (due to a header/footer of fixed size that is added to each fragment). In bin packing with size preserving fragmentation (BP-SPF), there is a bound on the total number of fragmented items. These two variants of bin packing capture many practical scenarios, including message transmission in community TV networks, VLSI circuit design and preemptive scheduling on parallel machines with setup times/setup costs. While both BP-SPF and BP-SIF do not belong to the class of problems that admit a polynomial time approximation scheme (PTAS), we show in this paper that both problems admit a dual PTAS and an asymptotic PTAS. We also develop for each of the problems a dual asymptotic fully polynomial time approximation scheme (AFPTAS). The AFPTASs are based on a non-trivial application of a fast combinatorial FPTAS for packing linear programs with negative entries, proposed recently by Garg and Khandekar [5].", "paper_title": "Approximation schemes for packing with item fragmentation", "paper_id": "WOS:000236483500026"}