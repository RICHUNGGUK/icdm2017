{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "maximum_lateness"}, {"score": 0.04897263249241297, "phrase": "release_dates"}, {"score": 0.048248278211652, "phrase": "precedence_constraints"}, {"score": 0.004283576270012874, "phrase": "nonpreemptive_schedule"}, {"score": 0.004184526032558792, "phrase": "single_machine"}, {"score": 0.003781005930058317, "phrase": "bound_algorithm"}, {"score": 0.0034971932704828197, "phrase": "upper_bounds"}, {"score": 0.0034162643819889054, "phrase": "initial_branch_node"}, {"score": 0.0033633514001658086, "phrase": "early_release_date_heuristic"}, {"score": 0.0032855095476183372, "phrase": "schrage's_heuristic"}, {"score": 0.0032103709672364213, "phrase": "block"}, {"score": 0.0031107911390188055, "phrase": "variable_neighborhood_descent_procedure"}, {"score": 0.0027886573969044042, "phrase": "heuristic_block"}, {"score": 0.0027240799841720957, "phrase": "binary_branching_rule"}, {"score": 0.002619748321217153, "phrase": "critical_jobs"}, {"score": 0.00253916011199984, "phrase": "lower_bound"}, {"score": 0.0024040357029838774, "phrase": "relaxed_problem"}, {"score": 0.0021049977753042253, "phrase": "cpu_time"}], "paper_keywords": ["Deterministic scheduling", " Maximum lateness", " Release date", " Precedence constraint", " Branch and bound algorithm"], "paper_abstract": "This paper considers the problem of finding a nonpreemptive schedule for a single machine to minimize the maximum lateness with release dates and precedence constraints. A branch and bound algorithm is developed. The algorithm uses four different heuristics to find upper bounds at the initial branch node: early release date heuristic, modified Schrage's heuristic, heuristic BLOCK, and a variable neighborhood descent procedure. At each branch node, two branches evolve from a schedule found by heuristic BLOCK using a binary branching rule based on bottleneck and critical jobs, and a lower bound is obtained by optimally solving the relaxed problem with preemption. The algorithm solves 14,984 out of the 15,000 systematically generated instances with up to 1,000 jobs within I minute of CPU time. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Single machine scheduling to minimize maximum lateness subject to release dates and precedence constraints", "paper_id": "WOS:000275588400002"}