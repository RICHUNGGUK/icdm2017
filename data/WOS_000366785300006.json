{"auto_keywords": [{"score": 0.04863120390879734, "phrase": "tcp_synflood_attacks"}, {"score": 0.008713783517098861, "phrase": "openflow"}, {"score": 0.008569615100370367, "phrase": "tcp_synflood"}, {"score": 0.008498427383192708, "phrase": "web_servers"}, {"score": 0.004991583147269885, "phrase": "operetta"}, {"score": 0.0046046429665581555, "phrase": "distributed_denial_of_service"}, {"score": 0.004415792880356964, "phrase": "normal_tcp_three-way_handshake_mechanism"}, {"score": 0.004342430078306461, "phrase": "targeted_server"}, {"score": 0.00428222231579898, "phrase": "server_resources"}, {"score": 0.004083665825986903, "phrase": "multiple_fake_syn_packets"}, {"score": 0.00389427992231721, "phrase": "three-way_handshake"}, {"score": 0.0037658881407605445, "phrase": "attacked_server"}, {"score": 0.0037136443127486684, "phrase": "traditional_networks"}, {"score": 0.0035911864946764614, "phrase": "intrusion_detection_schemes"}, {"score": 0.003453395626161181, "phrase": "software_defined_networks"}, {"score": 0.003405472159599445, "phrase": "new_features"}, {"score": 0.0033864888703414903, "phrase": "network_programmability"}, {"score": 0.0032656422780001407, "phrase": "sdn_networks"}, {"score": 0.003229330714669772, "phrase": "security_menaces"}, {"score": 0.003175616603746162, "phrase": "single_network_element"}, {"score": 0.0030967107893195246, "phrase": "complete_information"}, {"score": 0.0030282147475402736, "phrase": "best_condition"}, {"score": 0.003002919967963025, "phrase": "ongoing_attacks"}, {"score": 0.002847540262784593, "phrase": "unique_point"}, {"score": 0.0027077527953067253, "phrase": "remedy"}, {"score": 0.002618366076489732, "phrase": "incoming_tcp_syn_packets"}, {"score": 0.002596485860622193, "phrase": "fake_connection_requests"}, {"score": 0.002574788013427524, "phrase": "operetta_protocol"}, {"score": 0.002553271022743369, "phrase": "heterogeneous_networks"}, {"score": 0.002475898613632249, "phrase": "centralized_controller"}, {"score": 0.002441506836344489, "phrase": "delocalized_controllers"}, {"score": 0.0024143368618449114, "phrase": "access_routers"}, {"score": 0.0023941575109692314, "phrase": "users_premises"}, {"score": 0.002347724817229228, "phrase": "mininet"}, {"score": 0.0023215955357304796, "phrase": "purpose_prototypes"}, {"score": 0.0023021895404322767, "phrase": "relevant_control_plane_functions"}, {"score": 0.0022575359484509187, "phrase": "pox_controller"}, {"score": 0.0022449372414691787, "phrase": "numerical_results"}, {"score": 0.0022137465420508785, "phrase": "good_performance"}, {"score": 0.002164738347530832, "phrase": "low_level"}, {"score": 0.0021406417439887907, "phrase": "memory_consumption"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["OpenFlow", " DDoS", " SDN"], "paper_abstract": "TCP SYNFLOOD attacks are a type of Distributed Denial of Service (DDoS) attacks usually carried out against web servers. TCP SYNFLOOD rely on the normal TCP Three-Way Handshake mechanism to consume resources on the targeted server. In this way server resources are blocked and the server is made unresponsive. To this purpose, the attacker sends multiple fake SYN packets as if it wants to set several TCP connections up, but then it does not finalize the Three-Way Handshake. In this way, it blocks the resources of the attacked server, uselessly. In traditional networks, these attacks have been counteracted by means of firewalls and intrusion detection schemes. However, these solutions are not effective since can be violated. Software Defined Networks (SDNs) offer new features like network programmability which make solutions to TCP SYNFLOOD attacks more effective. In fact, in SDN networks intelligence for counteracting security menaces can be moved to a single network element, i.e., the Controller, which has complete information about the network and is in the best condition to identify ongoing attacks. However, in this way TCP SYNFLOOD attacks can turn into attacks to the Controller, which becomes a unique point of failure for the network. In this paper we propose OPERETTA, an OPEnflow-based Remedy to TCP SYNFLOOD Attacks. OPERETTA is implemented in the Controller which manages incoming TCP SYN packets and rejects fake connection requests. The OPERETTA protocol works in heterogeneous networks, as it can be implemented not only on a centralized Controller, but also on delocalized Controllers available in the access routers at the users premises. OPERETTA has been tested using MININET and to this purpose prototypes of the relevant Control Plane functions have been implemented starting from the POX Controller. Numerical results show that OPERETTA achieves good performance in terms of resilience to TCP SYNFLOOD attacks and low level of CPU and memory consumption. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "OPERETTA: An OPEnflow-based REmedy to mitigate TCP SYNFLOOD Attacks against web servers", "paper_id": "WOS:000366785300006"}