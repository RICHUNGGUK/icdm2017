{"auto_keywords": [{"score": 0.042238565002607614, "phrase": "heterogeneous_computing"}, {"score": 0.04075292987843501, "phrase": "heterogeneous_systems"}, {"score": 0.00481495049065317, "phrase": "irregular_applications"}, {"score": 0.004775335634705251, "phrase": "future_computing_devices"}, {"score": 0.0046392209103157936, "phrase": "heterogeneous_architectures"}, {"score": 0.0045443671106012405, "phrase": "multi-core_cpus"}, {"score": 0.004488725449273657, "phrase": "gpu"}, {"score": 0.0044514440242754815, "phrase": "special_purpose_accelerators"}, {"score": 0.004396600680348434, "phrase": "challenging_issue"}, {"score": 0.00418387341007444, "phrase": "high_efficiency"}, {"score": 0.004149429072483132, "phrase": "low_energy_consumption"}, {"score": 0.004098291340525772, "phrase": "multiple_new_programming_models"}, {"score": 0.004064548693812535, "phrase": "advanced_framework_support"}, {"score": 0.0036352070472201086, "phrase": "irregular_program's_attribute"}, {"score": 0.0034165310204389682, "phrase": "heterogeneous_resources"}, {"score": 0.003360464999544279, "phrase": "highest_efficiency"}, {"score": 0.0032242793143795454, "phrase": "control_flow_divergence"}, {"score": 0.0031977096047057898, "phrase": "load_imbalance"}, {"score": 0.003171358146412577, "phrase": "low_efficiency"}, {"score": 0.0031452231581533814, "phrase": "parallel_execution"}, {"score": 0.0029805015010906013, "phrase": "dynamic_work"}, {"score": 0.002789528662623221, "phrase": "program_phases"}, {"score": 0.002676418520290942, "phrase": "subsequent_phases"}, {"score": 0.0025678829712650437, "phrase": "adaptive_runtime_system"}, {"score": 0.0025257081555100556, "phrase": "aforementioned_technique"}, {"score": 0.0024945418697526305, "phrase": "ray-tracing"}, {"score": 0.0024535580495414783, "phrase": "performance_potential"}, {"score": 0.0024333239726872604, "phrase": "dynamic_work_distribution_techniques"}, {"score": 0.0023249757987087055, "phrase": "performance_gain"}, {"score": 0.0021940118003312397, "phrase": "original_system"}, {"score": 0.0021669202726173928, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "similar_properties"}], "paper_keywords": ["Heterogeneous Systems", " Irregular Program", " Amorphous Parallelism"], "paper_abstract": "Future computing devices are likely to be based on heterogeneous architectures, which comprise of multi-core CPUs accompanied with GPU or special purpose accelerators. A challenging issue for such devices is how to effectively manage the resources to achieve high efficiency and low energy consumption. With multiple new programming models and advanced framework support for heterogeneous computing, we have seen many regular applications benefit greatly from heterogeneous systems. However, migrating the success of heterogeneous computing to irregulars remains a challenge. An irregular program's attribute may vary during execution and are often unpredictable, making it difficult to allocate heterogeneous resources to achieve the highest efficiency. Moreover, the irregularity in applications may cause control flow divergence, load imbalance and low efficiency in parallel execution. To resolve these issues, we studied and proposed phase guided dynamic work partitioning, a light-weight and fast analysis technique, to collect information during program phases at runtime in order to guide work partitioning in subsequent phases for more efficient work dispatching on heterogeneous systems. We implemented an adaptive Runtime System based on the aforementioned technique and take Ray-Tracing to explore the performance potential of dynamic work distribution techniques in our framework. The experiments have shown that the performance gain of this approach can be as high as 5 times faster than the original system. The proposed techniques can be applied to other irregular applications with similar properties.", "paper_title": "An Adaptive Heterogeneous Runtime Framework for Irregular Applications", "paper_id": "WOS:000353048300002"}