{"auto_keywords": [{"score": 0.010341766032377867, "phrase": "tcp_throughput_prediction"}, {"score": 0.006729463215865737, "phrase": "tcp_throughput"}, {"score": 0.006489531069634209, "phrase": "actual_value"}, {"score": 0.00481495049065317, "phrase": "machine_learning_approach"}, {"score": 0.004740476936977635, "phrase": "throughput_prediction"}, {"score": 0.004618893461411858, "phrase": "important_capability"}, {"score": 0.004523865550323285, "phrase": "multiple_paths"}, {"score": 0.004453874101119545, "phrase": "data_senders"}, {"score": 0.004206338218873218, "phrase": "new_lightweight_method"}, {"score": 0.0040771431404398855, "phrase": "support_vector_regression"}, {"score": 0.003870541730075597, "phrase": "prior_file_transfer_history"}, {"score": 0.0037908515763223107, "phrase": "simple_path_properties"}, {"score": 0.0036553070575015344, "phrase": "laboratory_setting"}, {"score": 0.0036174746598098863, "phrase": "ground_truth"}, {"score": 0.0035245918797629804, "phrase": "perfect_accuracy"}, {"score": 0.0033633514001658086, "phrase": "oracular_and_practical_measurements"}, {"score": 0.0032599633778910516, "phrase": "wide_range"}, {"score": 0.003226209534553224, "phrase": "traffic_conditions"}, {"score": 0.0031928040608991543, "phrase": "transfer_sizes"}, {"score": 0.003143341238802547, "phrase": "bulk_transfers"}, {"score": 0.0031107911390188055, "phrase": "heavy_traffic"}, {"score": 0.003078577062864183, "phrase": "oracular_measurements"}, {"score": 0.0028325548627901004, "phrase": "nearly_a_threefold_improvement"}, {"score": 0.0027741761880779535, "phrase": "prior_history-based_methods"}, {"score": 0.0026888503045081505, "phrase": "path_properties"}, {"score": 0.002448260697722081, "phrase": "history-based_methods"}, {"score": 0.0022175679453857473, "phrase": "wide_area"}, {"score": 0.0021049977753042253, "phrase": "diverse_wide_area_paths"}], "paper_keywords": ["Active measurements", " machine learning", " support vector regression", " TCP throughput prediction"], "paper_abstract": "TCP throughput prediction is an important capability for networks where multiple paths exist between data senders and receivers. In this paper, we describe a new lightweight method for TCP throughput prediction. Our predictor uses Support Vector Regression (SVR); prediction is based on both prior file transfer history and measurements of simple path properties. We evaluate our predictor in a laboratory setting where ground truth can be measured with perfect accuracy. We report the performance of our predictor for oracular and practical measurements of path properties over a wide range of traffic conditions and transfer sizes. For bulk transfers in heavy traffic using oracular measurements, TCP throughput is predicted within 10% of the actual value 87% of the time, representing nearly a threefold improvement in accuracy over prior history-based methods. For practical measurements of path properties, predictions can be made within 10% of the actual value nearly 50% of the time, approximately a 60% improvement over history-based methods, and with much lower measurement traffic overhead. We implement our predictor in a tool called PathPerf, test it in the wide area, and show that PathPerf predicts TCP throughput accurately over diverse wide area paths.", "paper_title": "A Machine Learning Approach to TCP Throughput Prediction", "paper_id": "WOS:000281113500002"}