{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "hash_codes"}, {"score": 0.036194576353354144, "phrase": "equal_hamming_distances"}, {"score": 0.004772367030970874, "phrase": "scalable_image_search"}, {"score": 0.004709193603747991, "phrase": "visual_similarity"}, {"score": 0.004626255242038005, "phrase": "active_topic"}, {"score": 0.004327981760540394, "phrase": "hashing_methods"}, {"score": 0.004158290806404304, "phrase": "hamming_space"}, {"score": 0.003959863717046575, "phrase": "hamming_distance"}, {"score": 0.0039248128268720645, "phrase": "compact_hash_codes"}, {"score": 0.0038728151007982378, "phrase": "traditional_metrics"}, {"score": 0.0038055224735567476, "phrase": "euclidean"}, {"score": 0.003737485125097945, "phrase": "continuous_distances"}, {"score": 0.003687960013746783, "phrase": "hamming_distances"}, {"score": 0.0036553070575015344, "phrase": "discrete_integer_values"}, {"score": 0.0034963129868796033, "phrase": "large_number"}, {"score": 0.003314591878914152, "phrase": "search_results"}, {"score": 0.0032852337992126564, "phrase": "fine-grained_ranking"}, {"score": 0.003114449258490062, "phrase": "query-adaptive_ranking"}, {"score": 0.003073154478201771, "phrase": "returned_images"}, {"score": 0.0028875481626754696, "phrase": "bitwise_weights"}, {"score": 0.002811464848641341, "phrase": "diverse_set"}, {"score": 0.0027865506182608263, "phrase": "predefined_semantic_concept_classes"}, {"score": 0.0027252240573281163, "phrase": "weight_learning_process"}, {"score": 0.002689076130099546, "phrase": "quadratic_programming_problem"}, {"score": 0.0026534064006291853, "phrase": "intra-class_distance"}, {"score": 0.0026182085765020548, "phrase": "inter-class_relationship"}, {"score": 0.00258347644721642, "phrase": "original_raw_image_features"}, {"score": 0.0025605773834404253, "phrase": "query-adaptive_weights"}, {"score": 0.002405853977978678, "phrase": "semantic_concept_classes"}, {"score": 0.0023633857274905977, "phrase": "query-adaptive_bitwise_weights"}, {"score": 0.0022705467477443417, "phrase": "weighted_hamming_distance"}, {"score": 0.0022404162042797262, "phrase": "finer-grained_hash_code_level"}, {"score": 0.002200861826643147, "phrase": "original_hamming_distance_level"}, {"score": 0.002152397315548125, "phrase": "flickr_image"}, {"score": 0.002123831297790248, "phrase": "clear_improvements"}], "paper_keywords": ["Query-adaptive image search", " scalability", " hash codes", " weighted Hamming distance"], "paper_abstract": "Scalable image search based on visual similarity has been an active topic of research in recent years. State-of-the-art solutions often use hashing methods to embed high-dimensional image features into Hamming space, where search can be performed in real-time based on Hamming distance of compact hash codes. Unlike traditional metrics (e.g., Euclidean) that offer continuous distances, the Hamming distances are discrete integer values. As a consequence, there are often a large number of images sharing equal Hamming distances to a query, which largely hurts search results where fine-grained ranking is very important. This paper introduces an approach that enables query-adaptive ranking of the returned images with equal Hamming distances to the queries. This is achieved by firstly offline learning bitwise weights of the hash codes for a diverse set of predefined semantic concept classes. We formulate the weight learning process as a quadratic programming problem that minimizes intra-class distance while preserving inter-class relationship captured by original raw image features. Query-adaptive weights are then computed online by evaluating the proximity between a query and the semantic concept classes. With the query-adaptive bitwise weights, returned images can be easily ordered by weighted Hamming distance at a finer-grained hash code level rather than the original Hamming distance level. Experiments on a Flickr image dataset show clear improvements from our proposed approach.", "paper_title": "Query-Adaptive Image Search With Hash Codes", "paper_id": "WOS:000313875500018"}