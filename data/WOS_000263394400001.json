{"auto_keywords": [{"score": 0.04969466339476691, "phrase": "large_distributed_systems"}, {"score": 0.04530079138051037, "phrase": "global_state"}, {"score": 0.00481495049065317, "phrase": "mining_data_streams"}, {"score": 0.004699916946246509, "phrase": "large_network"}, {"score": 0.004624751696958501, "phrase": "wireless_sensors"}, {"score": 0.00419823857480455, "phrase": "system's_functionality"}, {"score": 0.004147756103284082, "phrase": "message_routing"}, {"score": 0.0041144374213500715, "phrase": "information_retrieval"}, {"score": 0.004064958518350867, "phrase": "load_sharing"}, {"score": 0.0031909403420958752, "phrase": "e._g."}, {"score": 0.002884603537502399, "phrase": "communication_cost"}, {"score": 0.002748159131396737, "phrase": "dynamic_scenario"}, {"score": 0.002597088221737922, "phrase": "two-step_approach"}, {"score": 0.0024742098091226203, "phrase": "highly_efficient_local_algorithm"}, {"score": 0.002395530243993313, "phrase": "wide_class"}, {"score": 0.0023762535034673017, "phrase": "data_mining_models"}, {"score": 0.002282166507956957, "phrase": "feedback_loop"}, {"score": 0.0022365262201954643, "phrase": "complex_functions"}, {"score": 0.0021049977753042253, "phrase": "thorough_experimental_analysis"}], "paper_keywords": ["Distributed data mining", " peer-to-peer", " local algorithms"], "paper_abstract": "In a large network of computers or wireless sensors, each of the components (henceforth, peers) has some data about the global state of the system. Much of the system's functionality such as message routing, information retrieval, and load sharing relies on modeling the global state. We refer to the outcome of the function (e. g., the load experienced by each peer) as the model of the system. Since the state of the system is constantly changing, it is necessary to keep the models up to date. Computing global data mining models, e. g., decision trees, k-means clustering in large distributed systems may be very costly due to the scale of the system and due to communication cost, which may be high. The cost further increases in a dynamic scenario when the data changes rapidly. In this paper, we describe a two-step approach for dealing with these costs. First, we describe a highly efficient local algorithm that can be used to monitor a wide class of data mining models. Then, we use this algorithm as a feedback loop for the monitoring of complex functions of the data such as its k-means clustering. The theoretical claims are corroborated with a thorough experimental analysis.", "paper_title": "A Generic Local Algorithm for Mining Data Streams in Large Distributed Systems", "paper_id": "WOS:000263394400001"}