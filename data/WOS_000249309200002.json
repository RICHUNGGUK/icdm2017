{"auto_keywords": [{"score": 0.004860218511356111, "phrase": "time"}, {"score": 0.004439634831927606, "phrase": "area-efficient_arithmetic_circuits"}, {"score": 0.004310501708408856, "phrase": "fixed-point_input_value"}, {"score": 0.0037463983616303786, "phrase": "time-multiplexed_multiple-constant_multiplication_problem"}, {"score": 0.0036105923401756126, "phrase": "single-constant_multiplication_circuits"}, {"score": 0.0033288399506044763, "phrase": "baseline_implementation_style"}, {"score": 0.0032319109979344184, "phrase": "full_multiplier"}, {"score": 0.003161065111494053, "phrase": "lookup_table"}, {"score": 0.0028928306994090453, "phrase": "significant_area_advantage"}, {"score": 0.0027673496368158545, "phrase": "increased_latency"}, {"score": 0.002706659627293686, "phrase": "problem_sizes"}, {"score": 0.0021049977753042253, "phrase": "standard-cell_application-specific_integrated_circuits"}], "paper_keywords": ["addition chain", " multiplierless", " reconfigurable", " multiplier block (ReMB)"], "paper_abstract": "This paper studies area-efficient arithmetic circuits to multiply a fixed-point input value selectively by one of several preset fixed-point constants. We present an algorithm that generates a class of solutions to this time-multiplexed multiple-constant multiplication problem by \"fusing\" single-constant multiplication circuits for the required constants. Our evaluation compares our solution against a baseline implementation style that employs a full multiplier and a lookup table for the constants. The evaluation shows that we gain a significant area advantage, at the price of increased latency, for problem sizes (in terms of the number of constants) up to a threshold dependent on the bit-widths of the input and the constants. Our evaluation further shows that our solution is better suited for standard-cell application-specific integrated circuits than prior works on reconfigurable multiplier blocks.", "paper_title": "Time-multiplexed multiple-constant multiplication", "paper_id": "WOS:000249309200002"}