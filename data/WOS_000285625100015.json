{"auto_keywords": [{"score": 0.04836829363661747, "phrase": "design_patterns"}, {"score": 0.015320872964656816, "phrase": "design_pattern"}, {"score": 0.014403851359257367, "phrase": "design_experience"}, {"score": 0.010408486354769694, "phrase": "software_designers"}, {"score": 0.004814984458437144, "phrase": "instantiation"}, {"score": 0.004594951819987416, "phrase": "expert_design_experience"}, {"score": 0.004547438494330851, "phrase": "generic_design_structure"}, {"score": 0.004141238989360548, "phrase": "application_design"}, {"score": 0.0040771431404398855, "phrase": "particular_context"}, {"score": 0.003870541730075597, "phrase": "multiple_design_problems"}, {"score": 0.0032430426853131346, "phrase": "considerable_time"}, {"score": 0.0027886573969044042, "phrase": "rigorous_proofs"}, {"score": 0.002499798127196099, "phrase": "design_processes"}, {"score": 0.002299921909935613, "phrase": "informed_design_decisions"}, {"score": 0.0022291501521610737, "phrase": "different_design_processes"}, {"score": 0.0021831803612759855, "phrase": "possible_design_choices"}, {"score": 0.0021049977753042253, "phrase": "software_development"}], "paper_keywords": ["design pattern", " commutability", " logics", " process algebra"], "paper_abstract": "Design patterns capture expert design experience in generic design structure and behavior. To reuse design experience, a design pattern needs to be instantiated from its generic template to the application design in a particular context. It can be integrated with other patterns to solve multiple design problems. The instantiation and integration of design patterns are two important processes when a designer reuses design experience in an application. It is important to know whether the instantiation and integration commute because it can save considerable time and effort of software designers for trial-and-error. In this paper, we investigate the commutability of the instantiation and integration of design patterns. We provide rigorous proofs on the conditions when the order of these two design processes does not matter. Our results allow the software designers to choose the design processes with assurance of their equivalence. The benefits of our work include helping the designers to make informed design decisions based on the convergence of different design processes and reducing the possible design choices, and thus the complexity of software development.", "paper_title": "On Instantiation and Integration Commutability of Design Pattern", "paper_id": "WOS:000285625100015"}