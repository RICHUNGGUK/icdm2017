{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "matrix-vector_multiplication"}, {"score": 0.04974064540897104, "phrase": "iterative_methods"}, {"score": 0.012554952684229152, "phrase": "lopes"}, {"score": 0.004630755876583033, "phrase": "linear_equations"}, {"score": 0.0045817497454044565, "phrase": "fundamental_problem"}, {"score": 0.004549366134876482, "phrase": "scientific_computing"}, {"score": 0.0044535760439663235, "phrase": "wide_interest"}, {"score": 0.004406436661912347, "phrase": "fpga_community"}, {"score": 0.004375286710337962, "phrase": "morris_et_al"}, {"score": 0.004313643010028869, "phrase": "zhang_et_al"}, {"score": 0.004252864417993201, "phrase": "zhuo"}, {"score": 0.004003925104720979, "phrase": "particular_interest"}, {"score": 0.003961526165403768, "phrase": "recent_literature"}, {"score": 0.003933508945770709, "phrase": "large_performance_improvements"}, {"score": 0.003905689096176873, "phrase": "general-purpose_processors"}, {"score": 0.0037163618245226755, "phrase": "performance_gain"}, {"score": 0.003329051037399227, "phrase": "el-kurdi"}, {"score": 0.002950374774004939, "phrase": "on-chip_memory_buffers"}, {"score": 0.0028474035592052052, "phrase": "significantly_more_parallelism"}, {"score": 0.002748016244165687, "phrase": "existing_approaches"}, {"score": 0.00266152927283908, "phrase": "large_matrices"}, {"score": 0.002642681666526916, "phrase": "limited_improvement"}, {"score": 0.0025686131021181134, "phrase": "el-kurdi_et_al"}, {"score": 0.0024613749081680474, "phrase": "high_performance"}, {"score": 0.0024439412207268355, "phrase": "relatively_smallmatrices"}, {"score": 0.0023923768532792267, "phrase": "boland"}, {"score": 0.002325306388085057, "phrase": "hardware_designs"}, {"score": 0.0022843440226146005, "phrase": "symmetrical_and_banded_matrix_structure"}, {"score": 0.0022124176057373365, "phrase": "ram_use"}, {"score": 0.0021049977753042253, "phrase": "larger-order_matrices"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Iterative methods", " integer linear programming"], "paper_abstract": "Computing the solution to a system of linear equations is a fundamental problem in scientific computing, and its acceleration has drawn wide interest in the FPGA community [Morris et al. 2006; Zhang et al. 2008; Zhuo and Prasanna 2006]. One class of algorithms to solve these systems, iterative methods, has drawn particular interest, with recent literature showing large performance improvements over General-Purpose Processors (GPPs) [Lopes and Constantinides 2008]. In several iterative methods, this performance gain is largely a result of parallelization of the matrix-vector multiplication, an operation that occurs in many applications and hence has also been widely studied on FPGAs [Zhuo and Prasanna 2005; El-Kurdi et al. 2006]. However, whilst the performance of matrix-vector multiplication on FPGAs is generally I/O bound [Zhuo and Prasanna 2005], the nature of iterative methods allows the use of on-chip memory buffers to increase the bandwidth, providing the potential for significantly more parallelism [deLorimier and DeHon 2005]. Unfortunately, existing approaches have generally only either been capable of solving large matrices with limited improvement over GPPs [Zhuo and Prasanna 2005; El-Kurdi et al. 2006; deLorimier and DeHon 2005], or achieve high performance for relatively smallmatrices [Lopes and Constantinides 2008; Boland and Constantinides 2008]. This article proposes hardware designs to take advantage of symmetrical and banded matrix structure, as well as methods to optimize the RAM use, in order to both increase the performance and retain this performance for larger-order matrices.", "paper_title": "Optimizing Memory Bandwidth Use and Performance for Matrix-Vector Multiplication in Iterative Methods", "paper_id": "WOS:000299337400002"}