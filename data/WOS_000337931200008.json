{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fine-grain_parallelism"}, {"score": 0.0044800522651664695, "phrase": "deblocking_filtering"}, {"score": 0.0042148594491580324, "phrase": "many-core_architectures"}, {"score": 0.004145287175409325, "phrase": "future_trend"}, {"score": 0.004099542199088835, "phrase": "system_design"}, {"score": 0.004054299982508618, "phrase": "computation_time"}, {"score": 0.003814212645832246, "phrase": "multiple_processing_elements"}, {"score": 0.003628352506247126, "phrase": "four-pixel-long_boundary"}, {"score": 0.0034707339811048403, "phrase": "possible_parallelism"}, {"score": 0.0029380909574836587, "phrase": "unlimited_number"}, {"score": 0.002905629026254221, "phrase": "processing_elements"}, {"score": 0.0025713100093065645, "phrase": "frame_size"}, {"score": 0.0024054226746197706, "phrase": "square_root"}, {"score": 0.0023656467839555458, "phrase": "frame_size_increase"}, {"score": 0.0022880528191813083, "phrase": "height_ratio"}, {"score": 0.0022007302738063566, "phrase": "practical_real-time_deblocking"}, {"score": 0.0021763973978248005, "phrase": "increasingly_larger_video_sizes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Deblocking", " Parallelization", " Data intensive", " Many-core architecture", " H.264"], "paper_abstract": "In the H.264 video compression standard, the deblocking filtering contributes about one-third of all computation in the decoder. With many-core architectures becoming the future trend of system design, computation time can be reduced if the deblocking appropriately apportions its operations to multiple processing elements. In this study, we used a four-pixel-long boundary as the basis for analyzing and exploiting possible parallelism. Compared with the two-dimensional (2D) wavefront method order for deblocking both 1920 x 1080- and 1080 x 1920-pixel frames, the proposed design exhibits speedups of 1.92 and 2.44 times, respectively, given an unlimited number of processing elements. Compared with our previous design, it gains speedups of 1.25 and 1.13 times, respectively. In addition, as the frame size grows, this approach requires only extra time that is proportional to the square root of the frame size increase (keeping the same width to height ratio), pushing the boundary of practical real-time deblocking of increasingly larger video sizes. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Exploiting fine-grain parallelism in the H.264 deblocking filter by operation reordering", "paper_id": "WOS:000337931200008"}