{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "reprojection-based_pixel_shader_optimization"}, {"score": 0.004438250823243621, "phrase": "temporal_data_reprojection"}, {"score": 0.004361428012479218, "phrase": "general_tool"}, {"score": 0.0042859292226559535, "phrase": "procedural_shaders"}, {"score": 0.004187284711626886, "phrase": "general_strategy"}, {"score": 0.004067152645111547, "phrase": "expensive_intermediate_shading_calculations"}, {"score": 0.0038148090091532933, "phrase": "effective_trade-off"}, {"score": 0.003662410853488772, "phrase": "critical_choices"}, {"score": 0.0034551632687788857, "phrase": "cached_entries"}, {"score": 0.0031660031870090434, "phrase": "deep_understanding"}, {"score": 0.0031111332159761344, "phrase": "procedure's_semantic_structure"}, {"score": 0.0030042210975126616, "phrase": "optimal_candidates"}, {"score": 0.002850682396853918, "phrase": "parametric_models"}, {"score": 0.00278497898719426, "phrase": "possible_caching_decisions"}, {"score": 0.002736694413701639, "phrase": "shader's_performance"}, {"score": 0.0027049694095434905, "phrase": "visual_fidelity"}, {"score": 0.0025816953009851072, "phrase": "sample_rendering_session"}, {"score": 0.0025221759076833124, "phrase": "interactive_profiler"}, {"score": 0.002351705899181029, "phrase": "temporal_reprojection"}, {"score": 0.0022841153001549193, "phrase": "proposed_models"}, {"score": 0.0022576249214220187, "phrase": "selection_algorithm"}, {"score": 0.0022184630090454132, "phrase": "prototype_system"}, {"score": 0.0021049977753042253, "phrase": "current_alternatives"}], "paper_keywords": ["Real-Time Rendering", " Temporal Reprojection", " Procedural Shading", " Code Optimization"], "paper_abstract": "We present a framework and supporting algorithms to automate the use of temporal data reprojection as a general tool for optimizing procedural shaders. Although the general strategy of caching and reusing expensive intermediate shading calculations across consecutive frames has previously been shown to provide an effective trade-off between speed and accuracy, the critical choices of what to reuse and at what rate to refresh cached entries have been left to a designer. The fact that these decisions require a deep understanding of a procedure's semantic structure makes it challenging to select optimal candidates among possibly hundreds of alternatives. Our automated approach relies on parametric models of the way possible caching decisions affect the shader's performance and visual fidelity. These models are trained using a sample rendering session and drive an interactive profiler in which the user can explore the error/performance trade-offs associated with incorporating temporal reprojection. We evaluate the proposed models and selection algorithm with a prototype system used to optimize several complex shaders and compare our approach to current alternatives.", "paper_title": "Automated Reprojection-Based Pixel Shader Optimization", "paper_id": "WOS:000266986100021"}