{"auto_keywords": [{"score": 0.048912784012203225, "phrase": "datatype-generic_programs"}, {"score": 0.00481495049065317, "phrase": "datatype-generic_termination_proofs"}, {"score": 0.004001593118269276, "phrase": "allegorical_foundations"}, {"score": 0.002295277579105177, "phrase": "datatype-generic_programming_schemas"}, {"score": 0.0021049977753042253, "phrase": "concise_proof"}], "paper_keywords": ["Datatype", " Generic programming", " Relation algebra", " Allegory", " Programming methodology"], "paper_abstract": "Datatype-generic programs are programs that are parameterised by a datatype. We review the allegorical foundations of a methodology of designing datatype-generic programs. The notion of F-reductivity, where F parametrises a datatype, is reviewed and a number of its properties are presented. The properties are used to give concise, effective proofs of termination of a number of datatype-generic programming schemas. The paper concludes with a concise proof of the well-foundedness of a datatype-generic occurs-in relation.", "paper_title": "Datatype-Generic Termination Proofs", "paper_id": "WOS:000261345700004"}