{"auto_keywords": [{"score": 0.003991932110277654, "phrase": "characteristic_polynomial"}, {"score": 0.0036657110980445416, "phrase": "previously_best_quadratic_time"}, {"score": 0.0031440159350875057, "phrase": "counting_algorithm"}, {"score": 0.002583713580625699, "phrase": "independent_sets"}, {"score": 0.0025183881730011597, "phrase": "possible_sizes"}, {"score": 0.002372298201966367, "phrase": "counting_algorithms"}, {"score": 0.0021412594173592513, "phrase": "arbitrary_graphs"}, {"score": 0.0021049977753042253, "phrase": "bounded_tree-width"}], "paper_keywords": ["Characteristic polynomial", " Counting matchings", " Counting independent sets", " Bounded tree-width", " Efficient algorithms"], "paper_abstract": "An O(nlog(2) n) algorithm is presented to compute all coefficients of the characteristic polynomial of a tree on n vertices improving on the previously best quadratic time. With the same running time, the algorithm can be generalized in two directions. The algorithm is a counting algorithm for matchings, and the same ideas can be used to count other objects. For example, one can count the number of independent sets of all possible sizes simultaneously with the same running time. These counting algorithms not only work for trees, but can be extended to arbitrary graphs of bounded tree-width.", "paper_title": "Efficient Computation of the Characteristic Polynomial of a Tree and Related Tasks", "paper_id": "WOS:000330969900004"}