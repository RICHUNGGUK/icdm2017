{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_services"}, {"score": 0.004724878518219719, "phrase": "behavioural_descriptions"}, {"score": 0.003930000775297499, "phrase": "successful_completion"}, {"score": 0.0038746849003761024, "phrase": "possible_interaction"}, {"score": 0.0038382392088338784, "phrase": "compatible_clients"}, {"score": 0.0037486121194392564, "phrase": "technical_device"}, {"score": 0.003525220627709056, "phrase": "explicit_coercions"}, {"score": 0.003459191419478298, "phrase": "possible_behaviours"}, {"score": 0.0032376465741070274, "phrase": "different_usage_scenarios"}, {"score": 0.0030446120560494155, "phrase": "sound_and_complete_subcontracting_deduction_system"}, {"score": 0.0029594318330247614, "phrase": "hennessy's_classical_axiomatisation"}, {"score": 0.0028093921138602606, "phrase": "decision_algorithm"}, {"score": 0.0027437235598539904, "phrase": "cut-elimination_process"}, {"score": 0.0026293540353514075, "phrase": "logical_system"}, {"score": 0.0025436978068459565, "phrase": "technical_development"}, {"score": 0.002507845411496512, "phrase": "resulting_approach"}, {"score": 0.002460825108719896, "phrase": "simple_ideas"}, {"score": 0.002437645786158106, "phrase": "basic_intuitions"}, {"score": 0.002175913488493802, "phrase": "possible_practical_impact"}, {"score": 0.0021049977753042253, "phrase": "future_research"}], "paper_keywords": ["languages", " standardization", " theory", " Web services", " contracts", " concurrency theory", " CCS", " must testing", " type theory", " subtyping", " explicit coercions"], "paper_abstract": "Contracts are behavioural descriptions of Web services. We devise a theory of contracts that formalises the compatibility of a client to a service, and the safe replacement of a service with another service. The use of contracts statically ensures the successful completion of every possible interaction between compatible clients and services. The technical device that underlies the theory is the definition of filters, which are explicit coercions that prevent some possible behaviours of services and, in doing so, they make services compatible with different usage scenarios. We show that filters can be seen as proofs of a sound and complete subcontracting deduction system which simultaneously refines and extends Hennessy's classical axiomatisation of the must testing preorder. The relation is decidable and the decision algorithm is obtained via a cut-elimination process that proves the coherence of subcontracting as a logical system. Despite the richness of the technical development, the resulting approach is based on simple ideas and basic intuitions. Remarkably, its application is mostly independent of the language used to program the services or the clients. We also outline the possible practical impact of such a work and the perspectives of future research it opens.", "paper_title": "A theory of contracts for web services", "paper_id": "WOS:000256500600025"}