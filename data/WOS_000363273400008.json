{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "kernel-based_applications"}, {"score": 0.004765482708043842, "phrase": "modern_heterogeneous_architectures"}, {"score": 0.004716520738331953, "phrase": "heterogeneous_architectures"}, {"score": 0.004549063619065006, "phrase": "system_processing_capabilities"}, {"score": 0.00450231514359539, "phrase": "critical_functions"}, {"score": 0.004253618550301311, "phrase": "different_computing_devices"}, {"score": 0.003936389070602614, "phrase": "best_performance"}, {"score": 0.0036996627006622975, "phrase": "right_device"}, {"score": 0.003267925215811654, "phrase": "compute_resources"}, {"score": 0.003234299589505403, "phrase": "heterogeneous_parallel_architectures"}, {"score": 0.0030872017736888113, "phrase": "static_partitioning_model"}, {"score": 0.0029928611380840757, "phrase": "previous_executions"}, {"score": 0.0029013950320185573, "phrase": "quantitative_model_approach"}, {"score": 0.002841971477743441, "phrase": "optimal_match"}, {"score": 0.0027982016314450717, "phrase": "user-defined_constraints"}, {"score": 0.002740885774408238, "phrase": "different_scenarios"}, {"score": 0.002670884656785558, "phrase": "single_kernel_and_multi-kernel_applications"}, {"score": 0.0025230952890994236, "phrase": "parallel_applications"}, {"score": 0.002408265305704217, "phrase": "single_kernel"}, {"score": 0.0023834640793589414, "phrase": "multiple_devices"}, {"score": 0.002251542790734307, "phrase": "heterogeneous_platforms"}, {"score": 0.0021714122348552747, "phrase": "overall_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel computing", " Heterogeneous computing", " Kernel partitioning"], "paper_abstract": "Heterogeneous architectures are being used extensively to improve system processing capabilities. Critical functions of each application (kernels) can be mapped to different computing devices (i.e. CPUs, GPGPUs, accelerators) to maximize performance. However, best performance can only be achieved if kernels are accurately mapped to the right device. Moreover, in some cases those kernels could be split and executed over several devices at the same time to maximize the use of compute resources on heterogeneous parallel architectures. In this paper, we define a static partitioning model based on profiling information from previous executions. This model follows a quantitative model approach which computes the optimal match according to user-defined constraints. We test different scenarios to evaluate our model: single kernel and multi-kernel applications. Experimental results show that our static partitioning model could increase performance of parallel applications by deploying not only different kernels over different devices but a single kernel over multiple devices. This allows to avoid having idle compute resources on heterogeneous platforms, as well as enhancing the overall performance. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Static partitioning and mapping of kernel-based applications over modern heterogeneous architectures", "paper_id": "WOS:000363273400008"}