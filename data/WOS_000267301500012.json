{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multimedia_processors"}, {"score": 0.004742511243894382, "phrase": "intel's_xscale"}, {"score": 0.004429727701202369, "phrase": "instruction_execution"}, {"score": 0.004363058588000252, "phrase": "scoreboard"}, {"score": 0.0030311679447397725, "phrase": "stall_behaviour"}, {"score": 0.002940487679224863, "phrase": "adaptive_technique"}, {"score": 0.002874257080906824, "phrase": "regular_access"}, {"score": 0.0027671619871474764, "phrase": "stall_periods"}, {"score": 0.0025453546203590364, "phrase": "representative_subset"}, {"score": 0.0025069746344846397, "phrase": "mibench_benchmark_suite"}, {"score": 0.0023412849215629986, "phrase": "scoreboard_energy_consumption"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scoreboard", " XScale", " Multimedia processors", " Power-aware microarchitectures"], "paper_abstract": "Intel's XScale which has powered many multimedia applications uses scoreboard to control instruction execution. Scoreboard stalls the pipeline whenever a source operand or functional unit is needed but not available. While waiting for the availability of the resources, the processor accesses the scoreboard every cycle. Such accesses consume energy without contributing to performance. We address this inefficiency by investigating stall behaviour and introduce an adaptive technique to avoid regular access to the scoreboard during stall periods. Our study shows that by using our technique and for the representative subset of MiBench benchmark suite studied here, it is possible to reduce scoreboard energy consumption by up to 33% while maintaining performance cost within 0.25%. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Power-aware scoreboard alternatives for multimedia processors", "paper_id": "WOS:000267301500012"}