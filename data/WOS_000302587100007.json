{"auto_keywords": [{"score": 0.049702932426897224, "phrase": "distributed_agent_systems"}, {"score": 0.03500802419041651, "phrase": "das"}, {"score": 0.029157768267531466, "phrase": "proposed_methodology"}, {"score": 0.00481495049065317, "phrase": "simulation-based_prototyping"}, {"score": 0.004721602309430702, "phrase": "application_domains"}, {"score": 0.004648222388468414, "phrase": "distributed_information_retrieval"}, {"score": 0.004611959213131437, "phrase": "content_management"}, {"score": 0.004452228677941085, "phrase": "agent-based_computing_paradigm"}, {"score": 0.0041981583430961734, "phrase": "distributed_software_systems"}, {"score": 0.004068611852912931, "phrase": "suitable_agent_models"}, {"score": 0.00385141330111392, "phrase": "development_lifecycle"}, {"score": 0.0036600862989330106, "phrase": "effective_validation_methods"}, {"score": 0.0036172962914449826, "phrase": "design_objects"}, {"score": 0.003589046900483573, "phrase": "different_degrees"}, {"score": 0.003424107910734022, "phrase": "eldameth"}, {"score": 0.0032667240408191015, "phrase": "rapid_prototyping"}, {"score": 0.003228517923065361, "phrase": "visual_programming"}, {"score": 0.0031658283119347396, "phrase": "automatic_code_generation"}, {"score": 0.003141093559655865, "phrase": "jade-based_das"}, {"score": 0.0028143720888311537, "phrase": "simulation-based_validation"}, {"score": 0.0024150092189446424, "phrase": "highly_dynamic_distributed_computing"}, {"score": 0.002358801930248239, "phrase": "case_tool-driven_iterative_process"}, {"score": 0.0022680085357731196, "phrase": "implementation_phases"}, {"score": 0.002250272652754455, "phrase": "das."}, {"score": 0.002232675154416128, "phrase": "simple_yet_effective_case_study"}, {"score": 0.002206536029072657, "phrase": "distributed_information_retrieval_domain"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Agent oriented software engineering", " Simulation", " CASE tools", " Mobile agents", " Multi-coordination", " Statecharts"], "paper_abstract": "In application domains, such as distributed information retrieval, content management and distribution, e-Commerce, the agent-based computing paradigm has been demonstrated to be effective for the analysis, design and implementation of distributed software systems. In particular, several agent-oriented methodologies, incorporating suitable agent models, frameworks and tools, have been to date defined to support the development lifecycle of distributed agent systems (DAS). However, few of them provide effective validation methods to analyze design objects at different degrees of refinement before their actual implementation and deployment. In this paper, ELDAMeth, a simulation-based methodology for DAS, which enables rapid prototyping based on visual programming, validation, and automatic code generation for JADE-based DAS, is presented. ELDAMeth can be used both stand-alone for the modeling and evaluation of DAS and coupled with other agent-oriented methodologies for enhancing them with simulation-based validation. In particular, the proposed methodology, which is based on the ELDA (Event-driven Lightweight Distilled StateCharts-based Agents) agent model, provides key programming abstractions (event-driven computation, multi-coordination, and coarse-grained strong mobility) very suitable for highly dynamic distributed computing and is supported by a CASE tool-driven iterative process seamlessly covering the detailed design, simulation, and implementation phases of DAS. A simple yet effective case study in the distributed information retrieval domain is used to illustrate the proposed methodology. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "ELDAMeth: An agent-oriented methodology for simulation-based prototyping of distributed agent systems", "paper_id": "WOS:000302587100007"}