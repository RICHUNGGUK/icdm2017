{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "state-driven_operating_system"}, {"score": 0.004766388573192505, "phrase": "highly_reconfigurable_sensor_networks"}, {"score": 0.004647105813224402, "phrase": "low-cost_and_low-power_requirement"}, {"score": 0.00446240364863009, "phrase": "available_computing_resources"}, {"score": 0.004285010985001827, "phrase": "small_memory_footprint"}, {"score": 0.004241771072194993, "phrase": "irreplaceable_battery_power"}, {"score": 0.004198965651975536, "phrase": "sensed_data_fusion"}, {"score": 0.0038325685550319863, "phrase": "power_consumption"}, {"score": 0.003717656912608012, "phrase": "application_program"}, {"score": 0.003393115177189967, "phrase": "operating_environment"}, {"score": 0.003291336101694653, "phrase": "state-driven_operating_system_platform"}, {"score": 0.0031926001871260524, "phrase": "challenging_situation"}, {"score": 0.0031125795874844438, "phrase": "powerful_way"}, {"score": 0.0030655302236416502, "phrase": "complex_reactive_systems"}, {"score": 0.003034558550137019, "phrase": "diverse_wireless_sensor_network_applications"}, {"score": 0.002884317729022721, "phrase": "state_transition_table"}, {"score": 0.002840708910768261, "phrase": "complicated_issues"}, {"score": 0.0028120022457134267, "phrase": "concurrency_control"}, {"score": 0.0027835848648596513, "phrase": "asynchronous_event_handling_capabilities"}, {"score": 0.002686360550456695, "phrase": "well-defined_behavior"}, {"score": 0.0026592094867526803, "phrase": "state_transition_diagram"}, {"score": 0.002540377258232509, "phrase": "efficient_and_effective_design"}, {"score": 0.0023780209525032688, "phrase": "new_platform"}, {"score": 0.0023183698048498797, "phrase": "extremely_resource_constrained_situation"}, {"score": 0.002271725588755076, "phrase": "desired_concurrency"}, {"score": 0.002148226022654619, "phrase": "executing_results"}, {"score": 0.0021049977753042253, "phrase": "benchmark_test_results"}], "paper_keywords": [""], "paper_abstract": "Due to the low-cost and low-power requirement in an individual sensor node, the available computing resources turn out to be very limited like small memory footprint and irreplaceable battery power. Sensed data fusion might be needed before being transmitted as a tradeoff between procession and transmission in consideration of saving power consumption. Even worse, the application program needs to be complicated enough to be self-organizing and dynamically reconfigurable because changes in an operating environment continue even after deployment. State-driven operating system platform offers numerous benefits in this challenging situation. It provides a powerful way to accommodate complex reactive systems like diverse wireless sensor network applications. The memory usage can be bounded within a state transition table. The complicated issues like concurrency control and asynchronous event handling capabilities can be easily achieved in a well-defined behavior of state transition diagram. In this paper, we present an efficient and effective design of the state-driven operating system for wireless sensor nodes. We describe that the new platform can operate in an extremely resource constrained situation while providing the desired concurrency, reactivity, and reconfigurability. We also compare the executing results after comparing some benchmark test results with those on TinyOS.", "paper_title": "Design and Implementation of a State-Driven Operating System for Highly Reconfigurable Sensor Networks", "paper_id": "WOS:000323959900001"}