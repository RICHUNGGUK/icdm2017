{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "office-space-allocation_problem"}, {"score": 0.004718897469501381, "phrase": "cooperative_local_search"}, {"score": 0.004624751696958501, "phrase": "known_results"}, {"score": 0.004245051445971095, "phrase": "research_students"}, {"score": 0.003876806615011266, "phrase": "physical_space"}, {"score": 0.0036491673002304326, "phrase": "hard_and_soft_constraints"}, {"score": 0.003558294449586273, "phrase": "asynchronous_cooperative_local_search_approach"}, {"score": 0.003452218803245602, "phrase": "local_search_threads"}, {"score": 0.003366233863411861, "phrase": "better_solutions"}, {"score": 0.0032658649336454923, "phrase": "cooperation_mechanism"}, {"score": 0.0029973957125353306, "phrase": "global_search_strategy"}, {"score": 0.0028642924503126154, "phrase": "asynchronous_cooperative_search"}, {"score": 0.002563219920877287, "phrase": "tabu_search"}, {"score": 0.0024617483174454134, "phrase": "population-based_variants"}, {"score": 0.0023523750536537102, "phrase": "population-based_approach"}, {"score": 0.0022365262201954643, "phrase": "comparable_computation_time"}, {"score": 0.002202894673025544, "phrase": "asynchronous_cooperative_metaheuristics"}, {"score": 0.0021049977753042253, "phrase": "test_instances"}], "paper_keywords": ["artificial intelligence", " heuristics", " approximation algorithms", " office-space-allocation"], "paper_abstract": "We investigate cooperative local search to improve upon known results of the office-space-allocation problem in universities and other organizations. A number of entities (e.g., research students, staff, etc.) must be allocated into a set of rooms so that the physical space is utilized as efficiently as possible while satisfying a number of hard and soft constraints. We develop an asynchronous cooperative local search approach in which a population of local search threads cooperate asynchronously to find better solutions. The approach incorporates a cooperation mechanism in which a pool of genes (parts of solutions) is shared to improve the global search strategy. Our implementation is single-processor and we show that asynchronous cooperative search is also advantageous in this case. We illustrate this by extending four single-solution metaheuristics (hill-climbing, simulated annealing, tabu search, and a hybrid metaheuristic) to population-based variants using our asynchronous cooperative mechanism. In each case, the population-based approach performs better than the single-solution one using comparable computation time. The asynchronous cooperative metaheuristics developed here improve upon known results for a number of test instances.", "paper_title": "Asynchronous cooperative local search for the office-space-allocation problem", "paper_id": "WOS:000251037100010"}