{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "projection_temporal_logic"}, {"score": 0.004262881313926916, "phrase": "executable_temporal_logic_programming_language"}, {"score": 0.003907586297783078, "phrase": "minimal_model-based_approach"}, {"score": 0.0037738708560271354, "phrase": "temporal_logic_programming"}, {"score": 0.0032263862712733934, "phrase": "non-framed_programs"}, {"score": 0.002880927789104712, "phrase": "minimal_model_theory"}, {"score": 0.0027104531025934865, "phrase": "temporal_semantics"}, {"score": 0.002663620639539737, "phrase": "framed_programs"}, {"score": 0.0024842242921857705, "phrase": "minimal_model"}, {"score": 0.0023168823213024856, "phrase": "synchronous_communication_mechanism"}, {"score": 0.0022768346311104735, "phrase": "concurrent_programs"}, {"score": 0.0021420294823879292, "phrase": "framing_technique"}, {"score": 0.0021049977753042253, "phrase": "minimal_model_semantics"}], "paper_keywords": ["temporal logic programming", " framing", " minimal model", " monotonicity", " synchronization", " communication", " semantics"], "paper_abstract": "A Projection Temporal Logic is discussed and some of its laws are given. After that, an executable temporal logic programming language, called Framed Tempura, is formalized. A minimal model-based approach for framing in temporal logic programming is presented. Since framing destroys monotonicity, canonical models - used to define the semantics of non-framed programs - are no longer appropriate. To deal with this, a minimal model theory is developed, using which the temporal semantics of framed programs is captured. The existence of a minimal model for a given framed program is demonstrated. A synchronous communication mechanism for concurrent programs is provided by means of the framing technique and minimal model semantics. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Framed temporal logic programming", "paper_id": "WOS:000252636000002"}