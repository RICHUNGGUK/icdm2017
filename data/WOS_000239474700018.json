{"auto_keywords": [{"score": 0.04853750751694915, "phrase": "bounded_genus"}, {"score": 0.00481495049065317, "phrase": "non-local_problems"}, {"score": 0.00447316895126645, "phrase": "general_technique"}, {"score": 0.004364696693320128, "phrase": "fast_subexponential_algorithms"}, {"score": 0.003556873173040166, "phrase": "wide_family"}, {"score": 0.003414153126809511, "phrase": "hamiltonian_cycle"}, {"score": 0.00335867620389808, "phrase": "sigma-embedded_graph_travelling_salesman_problem"}, {"score": 0.003304097742490624, "phrase": "longest_cycle"}, {"score": 0.003223883109446599, "phrase": "max_leaf_tree."}, {"score": 0.0030692309090066166, "phrase": "planarizing_techniques"}, {"score": 0.0030193416820392554, "phrase": "dynamic_programming"}, {"score": 0.002970260970134645, "phrase": "special_type_branch_decompositions"}, {"score": 0.0027365364488693656, "phrase": "parameterized_problems"}, {"score": 0.00241989408309933, "phrase": "length_p"}], "paper_keywords": [""], "paper_abstract": "We give a general technique for designing fast subexponential algorithms for several graph problems whose instances are restricted to graphs of bounded genus. We use it to obtain time 2(O(root n)) algorithms for a wide family of problems such as HAMILTONIAN CYCLE, Sigma-EMBEDDED GRAPH TRAVELLING SALESMAN PROBLEM, LONGEST CYCLE, and MAX LEAF TREE. For our results, we combine planarizing techniques with dynamic programming on special type branch decompositions. Our techniques can also be used to solve parameterized problems. Thus, for example, we show how to find a cycle of length p (or to conclude that there is no such a cycle) on graphs of bounded genus in time 2(O(root P).)n(O(1)).", "paper_title": "Fast subexponential algorithm for non-local problems on graphs of bounded genus", "paper_id": "WOS:000239474700018"}