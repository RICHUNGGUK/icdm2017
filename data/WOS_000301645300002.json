{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "change_requests"}, {"score": 0.046888273895838106, "phrase": "expert_developers"}, {"score": 0.038780937298415766, "phrase": "change_request"}, {"score": 0.004536029676655286, "phrase": "ranked_list"}, {"score": 0.004352411290383643, "phrase": "software_change_requests"}, {"score": 0.0039522429946090174, "phrase": "source_code_entities"}, {"score": 0.0035887342563437935, "phrase": "version_control_repositories"}, {"score": 0.0033651019362620866, "phrase": "ir_method"}, {"score": 0.0032886455096627324, "phrase": "mining_space"}, {"score": 0.0032287289440915187, "phrase": "previous_approaches"}, {"score": 0.002985988377995789, "phrase": "argouml"}, {"score": 0.0029181203386806683, "phrase": "koffice"}, {"score": 0.00283870598459543, "phrase": "accuracy_criteria"}, {"score": 0.002748775748298028, "phrase": "overall_accuracies"}, {"score": 0.002711109302199029, "phrase": "correctly_recommended_developers"}, {"score": 0.0026252106881752067, "phrase": "bug_reports"}, {"score": 0.0025537472239953807, "phrase": "feature_requests"}, {"score": 0.0024501740852758505, "phrase": "presented_approach"}, {"score": 0.0023944552329463035, "phrase": "substantial_margin"}, {"score": 0.002276283303864666, "phrase": "maintenance_tasks"}, {"score": 0.0021739117830106365, "phrase": "free-form_text"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["concept and feature location", " information retrieval", " developer recommendation", " software evolution and maintenance", " mining software repositories"], "paper_abstract": "The paper presents an approach to recommend a ranked list of expert developers to assist in the implementation of software change requests (e.g., bug reports and feature requests). An Information Retrieval (IR)-based concept location technique is first used to locate source code entities, e. g., files and classes, relevant to a given textual description of a change request. The previous commits from version control repositories of these entities are then mined for expert developers. The role of the IR method in selectively reducing the mining space is different from previous approaches that textually index past change requests and/or commits. The approach is evaluated on change requests from three open-source systems: ArgoUML, Eclipse, and KOffice, across a range of accuracy criteria. The results show that the overall accuracies of the correctly recommended developers are between 47 and 96% for bug reports, and between 43 and 60% for feature requests. Moreover, comparison results with two other recommendation alternatives show that the presented approach outperforms them with a substantial margin. Project leads or developers can use this approach in maintenance tasks immediately after the receipt of a change request in a free-form text. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Assigning change requests to software developers", "paper_id": "WOS:000301645300002"}