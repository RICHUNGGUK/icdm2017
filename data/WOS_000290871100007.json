{"auto_keywords": [{"score": 0.029905970710509176, "phrase": "power_consumption"}, {"score": 0.015719716506582538, "phrase": "scalable_radix"}, {"score": 0.004309725894724034, "phrase": "systematic_methodology"}, {"score": 0.00418134346679498, "phrase": "possible_processor_arrays"}, {"score": 0.004016072233242585, "phrase": "modular_montgomery_multiplication_algorithm"}, {"score": 0.003522579870903474, "phrase": "regular_iterative_expression"}, {"score": 0.0033492947290751996, "phrase": "suitable_affine_scheduling_function"}, {"score": 0.0026023381988430666, "phrase": "low_power_techniques"}, {"score": 0.0024247382451294255, "phrase": "expected_switching_activity"}, {"score": 0.0023762991385640453, "phrase": "esa"}, {"score": 0.0023053339328456234, "phrase": "high_fan-out_signals"}, {"score": 0.0021917966722180132, "phrase": "resulting_processor_arrays"}], "paper_keywords": ["Processor array", " Montgomery multiplication", " scalability", " cryptography", " secure communications", " low power modular multipliers"], "paper_abstract": "This paper presents a systematic methodology for exploring possible processor arrays of scalable radix 4 modular Montgomery multiplication algorithm. In this methodology, the algorithm is first expressed as a regular iterative expression, then the algorithm data dependence graph and a suitable affine scheduling function are obtained. Four possible processor arrays are obtained and analyzed in terms of speed, area, and power consumption. To reduce power consumption, we applied low power techniques for reducing the glitches and the Expected Switching Activity (ESA) of high fan-out signals in our processor array architectures. The resulting processor arrays are compared to other efficient ones in terms of area, speed, and power consumption.", "paper_title": "Processor Array Architectures for Scalable Radix 4 Montgomery Modular Multiplication Algorithm", "paper_id": "WOS:000290871100007"}