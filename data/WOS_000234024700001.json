{"auto_keywords": [{"score": 0.030448746273178867, "phrase": "approximation_algorithm"}, {"score": 0.00481495049065317, "phrase": "undirected_graph"}, {"score": 0.004054479957160662, "phrase": "subset_a"}, {"score": 0.0035285548582081627, "phrase": "e._e"}, {"score": 0.0033025823350563087, "phrase": "minimum_total_weight"}, {"score": 0.003196367172292135, "phrase": "np"}, {"score": 0.002836096284133166, "phrase": "performance_guarantee"}, {"score": 0.0027076221549645592, "phrase": "calinescu"}, {"score": 0.0026719940952062682, "phrase": "karloff"}, {"score": 0.002619425228871773, "phrase": "rabani"}], "paper_keywords": [""], "paper_abstract": "Given an undirected graph G = (V, E) and three specified terminal nodes t(1), t(2), t(3), a 3-cut is a subset A of E such that no two terminals are in the same component of G\\A. If a non-negative edge weight c(e) is specified for each e. E, the optimal 3-cut problem is to find a 3-cut of minimum total weight. This problem is NP-hard, and in fact, is max-SNP-hard. An approximation algorithm having performance guarantee 7/6 has recently been given by Calinescu, Karloff, and Rabani. It is based on a certain linear-programming relaxation, for which it is shown that the optimal 3-cut has weight at most 7/6 times the optimal LP value. It is proved here that 7/6 can be improved to 12 /11, and that this is best possible. As a consequence, we obtain an approximation algorithm for the optimal 3-cut problem having performance guarantee 12/11. In addition, we show that 12/11 is best possible for this algorithm.", "paper_title": "Optimal 3-terminal cuts and linear programming", "paper_id": "WOS:000234024700001"}