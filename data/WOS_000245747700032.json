{"auto_keywords": [{"score": 0.04043476064430838, "phrase": "genetic_algorithm"}, {"score": 0.00481495049065317, "phrase": "complex_datapath"}, {"score": 0.004752221133109136, "phrase": "data-flow_digital_systems"}, {"score": 0.004421471944783611, "phrase": "complex_datapath_oriented_digital_circuits"}, {"score": 0.004167982855788402, "phrase": "earlier_development"}, {"score": 0.004086744751579196, "phrase": "automatic_circuit_synthesizer"}, {"score": 0.004007083686875716, "phrase": "hardware_description_language_specifications"}, {"score": 0.003928969293303814, "phrase": "available_functional_modules"}, {"score": 0.0036793800647811365, "phrase": "digital_circuit_optimization"}, {"score": 0.0035605741849764187, "phrase": "specific_structures"}, {"score": 0.003378385493203297, "phrase": "concise_encoding"}, {"score": 0.0031223774204093713, "phrase": "specific_crossover_and_mutation_mechanisms"}, {"score": 0.0027741761880779535, "phrase": "module_data_type"}, {"score": 0.002737960968372391, "phrase": "hardware_resource_sharing"}, {"score": 0.00268452026617243, "phrase": "module_implementation_version"}, {"score": 0.0026321198895843173, "phrase": "fitness_function"}, {"score": 0.002464709648714996, "phrase": "optimization_parameters"}, {"score": 0.0023850311572318496, "phrase": "particular_circuit"}, {"score": 0.0021896891011033105, "phrase": "analysis_phase"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b._v."}], "paper_keywords": ["optimization", " data-flow", " genetic algorithm", " high-level synthesis", " field-programmable gate array"], "paper_abstract": "In this paper we present a methodology for optimizing complex datapath oriented digital circuits. An optimizer was developed based on the earlier development of an automatic circuit synthesizer that synthesizes hardware description language specifications based on available functional modules. A genetic algorithm is tailored to the problem of digital circuit optimization through the development of specific structures and procedures. In particular, a concise encoding of the circuit is developed that the genetic algorithm can manipulate. Specific crossover and mutation mechanisms are also developed to complement the functionality of the synthesizer. The searches are effected by altering module data type, hardware resource sharing, and module implementation version. A fitness function is derived that makes use of a number of optimization parameters to objectively evaluate each particular circuit. The features of each circuit are calculated and estimated during the analysis phase. (c) 2006 Elsevier B. V. All rights reserved.", "paper_title": "A genetic algorithm high-level optimizer for complex datapath and data-flow digital systems", "paper_id": "WOS:000245747700032"}