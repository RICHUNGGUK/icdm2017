{"auto_keywords": [{"score": 0.029232787264038232, "phrase": "anonymous_systems"}, {"score": 0.015719716506582538, "phrase": "homonymous_distributed_systems"}, {"score": 0.014542150195867836, "phrase": "initial_knowledge"}, {"score": 0.01367192957178551, "phrase": "failure_detectors"}, {"score": 0.01135797807583315, "phrase": "h_omega"}, {"score": 0.01106583584242048, "phrase": "homonymous_systems"}, {"score": 0.009309597350604926, "phrase": "correct_processes"}, {"score": 0.00835865613167074, "phrase": "partial_synchrony"}, {"score": 0.004406994912939125, "phrase": "system_membership"}, {"score": 0.004209202947762995, "phrase": "new_classes"}, {"score": 0.003865033938931324, "phrase": "homonymous_counterparts"}, {"score": 0.0037905301573009278, "phrase": "sigma"}, {"score": 0.003607630811220324, "phrase": "weakest_failure_detector"}, {"score": 0.003356275163203055, "phrase": "membership_knowledge"}, {"score": 0.0033233797886807375, "phrase": "different_synchrony_requirements"}, {"score": 0.0031532895341013297, "phrase": "homonymous_asynchronous_systems"}, {"score": 0.0027741761880779535, "phrase": "unique_identifiers"}, {"score": 0.002737960968372391, "phrase": "extreme_cases"}, {"score": 0.0025892330566358503, "phrase": "new_failure_detector_class_h_omega"}, {"score": 0.002472822097373027, "phrase": "bounded_time"}, {"score": 0.0023850311572318496, "phrase": "analogous_class_a_omega"}, {"score": 0.0023003498123420237, "phrase": "synchronous_systems"}, {"score": 0.002233301265743633, "phrase": "first_consensus_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Agreement problem", " Asynchrony", " Consensus", " Distributed computability", " Failure detector", " Homonymous systems", " Message-passing", " Process crash"], "paper_abstract": "This paper is on homonymous distributed systems where processes are prone to crash failures and have no initial knowledge of the system membership (\"homonymous\" means that several processes may have the same identifier). New classes of failure detectors suited to these systems are first defined. Among them, the classes H Omega and H Sigma are introduced that are the homonymous counterparts of the classes Omega and Sigma, respectively. (Recall that the pair <Omega, Sigma > defines the weakest failure detector to solve consensus.) Then, the paper shows how H Omega and H Sigma can be implemented in homonymous systems without membership knowledge (under different synchrony requirements). Finally, two algorithms are presented that use these failure detectors to solve consensus in homonymous asynchronous systems where there is no initial knowledge of the membership. One algorithm solves consensus with < H Omega, H Sigma >, while the other uses only HQ, but needs a majority of correct processes. Observe that the systems with unique identifiers and anonymous systems are extreme cases of homonymous systems from which follows that all these results also apply to these systems. Interestingly, the new failure detector class H Omega can be implemented with partial synchrony (i.e., all messages sent after some bounded time GST will be received after at most an unknown bounded latency delta), while the analogous class A Omega defined for anonymous systems cannot be implemented (even in synchronous systems). Hence, the paper provides the first consensus algorithm for anonymous systems with this model of partial synchrony and a majority of correct processes. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Failure detectors in homonymous distributed systems (with an application to consensus)", "paper_id": "WOS:000358755700007"}