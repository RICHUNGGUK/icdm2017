{"auto_keywords": [{"score": 0.026597672683514845, "phrase": "sun"}, {"score": 0.00481495049065317, "phrase": "parallel_particle-to-grid"}, {"score": 0.004744437370338926, "phrase": "leading_multicore_platforms"}, {"score": 0.004583878086896926, "phrase": "multicore_revolution"}, {"score": 0.00447251540886613, "phrase": "rapid_evolution"}, {"score": 0.004428728205625129, "phrase": "architectural_designs"}, {"score": 0.004363846362238565, "phrase": "power_constraints"}, {"score": 0.004321118442104989, "phrase": "correspondingly_limited_microprocessor_clock_speeds"}, {"score": 0.004033464035028803, "phrase": "numerical_algorithms"}, {"score": 0.003974349782102708, "phrase": "urgent_challenge"}, {"score": 0.003896871009090446, "phrase": "ever_growing_computational_needs"}, {"score": 0.003858697684681798, "phrase": "high-end_computing"}, {"score": 0.003709693561373117, "phrase": "multicore_parallel_optimization"}, {"score": 0.0036553070575015344, "phrase": "particle-to-grid_interpolation_step"}, {"score": 0.0033950634506367235, "phrase": "potential_fine-grained_data_hazards"}, {"score": 0.0031070348334684356, "phrase": "immersed_boundary"}, {"score": 0.0027993917849901454, "phrase": "intel"}, {"score": 0.0027878797103973313, "phrase": "low-level_optimization_techniques"}, {"score": 0.0027473589591633946, "phrase": "amd"}, {"score": 0.0026433013107558896, "phrase": "nehalem"}, {"score": 0.00262402038518335, "phrase": "barcelona"}, {"score": 0.002346160830406661, "phrase": "significant_performance_improvements"}, {"score": 0.002233301265743633, "phrase": "reference_parallel_implementation"}, {"score": 0.0021789194955896102, "phrase": "valuable_insight"}, {"score": 0.002125859121671523, "phrase": "future_autotuning_frameworks"}, {"score": 0.0021049977753042253, "phrase": "particle-to-grid_interpolation"}], "paper_keywords": ["Particle mesh", " particle-to-grid interpolation", " multicore performance tuning", " synchronization", " atomic", " lock free"], "paper_abstract": "We are now in the multicore revolution which is witnessing a rapid evolution of architectural designs due to power constraints and correspondingly limited microprocessor clock speeds. Understanding how to efficiently utilize these systems in the context of demanding numerical algorithms is an urgent challenge to meet the ever growing computational needs of high-end computing. In this work, we examine multicore parallel optimization of the particle-to-grid interpolation step in particle-mesh methods, an inherently complex optimization problem due to its low computation intensity, irregular data accesses, and potential fine-grained data hazards. Our evaluated kernels are derived from two important numerical computations: a biological simulation of the heart using the Immersed Boundary (IB) method, and a Gyrokinetic Particle-in-Cell (PIC)-based application for studying fusion plasma microturbulence. We develop several novel synchronization and grid decomposition schemes, as well as low-level optimization techniques to maximize performance on three modern multicore platforms: Intel's Xeon X5550 (Nehalem), AMD's Opteron 2356 (Barcelona), and Sun's UltraSparc T2+ (Niagara). Results show that our optimizations lead to significant performance improvements, achieving up to a 5.6x speedup compared to the reference parallel implementation. Our work also provides valuable insight into the design of future autotuning frameworks for particle-to-grid interpolation on next-generation systems.", "paper_title": "Optimization of Parallel Particle-to-Grid Interpolation on Leading Multicore Platforms", "paper_id": "WOS:000307824600010"}