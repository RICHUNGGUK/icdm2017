{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "logical_framework"}, {"score": 0.004530647056513315, "phrase": "smt"}, {"score": 0.004225950334493496, "phrase": "high_confidence"}, {"score": 0.004046020290832207, "phrase": "solver_results"}, {"score": 0.003806866174028117, "phrase": "relative_complexity"}, {"score": 0.0032546105164772995, "phrase": "critical_characteristic"}, {"score": 0.003170667618004276, "phrase": "proof-checking_solution"}, {"score": 0.0031159119086120136, "phrase": "smt."}, {"score": 0.002831158147480665, "phrase": "side_conditions"}, {"score": 0.0024412911465483225, "phrase": "flexible_proof_production"}, {"score": 0.0021797112385590913, "phrase": "empirical_results"}, {"score": 0.0021420294823879292, "phrase": "good_performance_relative"}, {"score": 0.0021049977753042253, "phrase": "solver_execution_time"}], "paper_keywords": ["Satisfiability modulo theories", " Proof checking", " Edinburgh logical framework", " LFSC"], "paper_abstract": "Producing and checking proofs from SMT solvers is currently the most feasible method for achieving high confidence in the correctness of solver results. The diversity of solvers and relative complexity of SMT over, say, SAT means that flexibility, as well as performance, is a critical characteristic of a proof-checking solution for SMT. This paper describes such a solution, based on a Logical Framework with Side Conditions (LFSC). We describe the framework and show how it can be applied for flexible proof production and checking for two different SMT solvers, clsat and cvc3. We also report empirical results showing good performance relative to solver execution time.", "paper_title": "SMT proof checking using a logical framework", "paper_id": "WOS:000313365300006"}