{"auto_keywords": [{"score": 0.03974635414502915, "phrase": "uml"}, {"score": 0.008237522562454695, "phrase": "mda"}, {"score": 0.006046744463308342, "phrase": "customized"}, {"score": 0.004866634662232027, "phrase": "mda."}, {"score": 0.004508942069742167, "phrase": "customized_benchmark_suites"}, {"score": 0.004435514622798228, "phrase": "software_architecture_description"}, {"score": 0.004153520149706423, "phrase": "tool_implementation"}, {"score": 0.003953806321226277, "phrase": "widely_used_open_source_mda_frameworks"}, {"score": 0.003622088701900472, "phrase": "existing_community-maintained_code_generation_\"cartridges"}, {"score": 0.0032107911131811057, "phrase": "performance_testing"}, {"score": 0.003175792987190496, "phrase": "data_collection_architecture"}, {"score": 0.0031240075437664314, "phrase": "standards_compatible_way"}, {"score": 0.0030229485340586473, "phrase": "mda_framework"}, {"score": 0.0029573932605287947, "phrase": "load_testing_suite"}, {"score": 0.002925149105307855, "phrase": "automatic_performance_measurement_infrastructure"}, {"score": 0.0027239390917424898, "phrase": "complex_component"}, {"score": 0.0026942333853202556, "phrase": "web_service_technologies"}, {"score": 0.002536534348967784, "phrase": "current_model-based_performance_prediction"}, {"score": 0.0024410093024417527, "phrase": "benchmark_application"}, {"score": 0.00236199235951202, "phrase": "performance_models"}, {"score": 0.0021994343316143125, "phrase": "enterprise_javabean_component_technology"}, {"score": 0.002175436093794315, "phrase": "web_services"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["MDA", " model-driven development", " performance", " testing", " code generation"], "paper_abstract": "This paper describes an approach for generating customized benchmark suites from a software architecture description following a Model Driven Architecture (MDA) approach. The benchmark generation and performance data capture tool implementation (MDA-Bench) is based on widely used open source MDA frameworks. The benchmark application is modeled in UML and generated by taking advantage of the existing community-maintained code generation \"cartridges\" so that current component technology can be exploited. We have also tailored the UML 2.0 Testing Profile so architects can model the performance testing and data collection architecture in a standards compatible way. We then extended the MDA framework to generate a load testing suite and automatic performance measurement infrastructure. This greatly reduces the effort and expertise needed for benchmarking with complex component and Web service technologies while being fully MDA standard compatible. The approach complements current model-based performance prediction and analysis methods by generating the benchmark application from the same application architecture that the performance models are derived from. We illustrate the approach using two case studies based on Enterprise JavaBean component technology and Web services. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "MDABench: Customized benchmark generation using MDA", "paper_id": "WOS:000244026300009"}