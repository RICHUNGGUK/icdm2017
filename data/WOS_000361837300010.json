{"auto_keywords": [{"score": 0.0406718782151503, "phrase": "cuda"}, {"score": 0.009837442465650796, "phrase": "opencl"}, {"score": 0.004716520738331953, "phrase": "hybrid_cpu"}, {"score": 0.004668059458774745, "phrase": "gpu_platforms"}, {"score": 0.004525629293824217, "phrase": "optimization_method"}, {"score": 0.004188198923320451, "phrase": "optimization_engine"}, {"score": 0.004123781267600542, "phrase": "different_computing_components"}, {"score": 0.003956784357357341, "phrase": "appropriate_kernel"}, {"score": 0.0034771228725942846, "phrase": "block_size"}, {"score": 0.0034236045013591437, "phrase": "work-group_size"}, {"score": 0.003267925215811654, "phrase": "execution_time"}, {"score": 0.003201018846103988, "phrase": "proportionally_different_parts"}, {"score": 0.003151736708029235, "phrase": "video_sequence"}, {"score": 0.0028127163745564777, "phrase": "hybrid_cluster"}, {"score": 0.0026986685585382347, "phrase": "different_parallel_programming_paradigms"}, {"score": 0.0025892330566358503, "phrase": "gpu_simd"}, {"score": 0.0024842242921857705, "phrase": "computing_capacity"}, {"score": 0.002445950676329976, "phrase": "different_computational_elements"}, {"score": 0.0023346234464901978, "phrase": "efficient_combination"}, {"score": 0.002310578855290687, "phrase": "basic_codes"}, {"score": 0.00226322835801988, "phrase": "individual_components"}, {"score": 0.002126907587540404, "phrase": "compression_time"}, {"score": 0.0021049977753042253, "phrase": "long_video_sequences"}], "paper_keywords": ["Autotuning engine", " 3D-FWT", " Cluster", " Manycore GPUs", " Multicore CPUs"], "paper_abstract": "This work presents an optimization method to run the 3D-fast wavelet transform (3D-FWT) on a CPU + GPU system. The optimization engine detects the different computing components in the system, and executes the appropriate kernel implemented in both CUDA or OpenCL for GPUs, and programmed with pthreads for a CPU. This engine automatically selects parameters such as the block size, the work-group size or the number of threads to reduce the execution time, and sends proportionally different parts of a video sequence to run concurrently in all the computing components of the system. An analysis of the development and optimization of the 3D-FWT for a hybrid cluster of CPU + GPUs is also described. Different parallel programming paradigms (message passing, shared memory and GPU SIMD) are combined to fully exploit the computing capacity of the different computational elements of the cluster, so resulting in an efficient combination of basic codes developed previously for individual components (CPUs or GPUs) and an important reduction of the compression time of long video sequences.", "paper_title": "An Autotuning Engine for the 3D Fast Wavelet Transform on Clusters with Hybrid CPU plus GPU Platforms", "paper_id": "WOS:000361837300010"}