{"auto_keywords": [{"score": 0.03544401896528494, "phrase": "incremental_computations"}, {"score": 0.00481495049065317, "phrase": "incremental_computation"}, {"score": 0.004023120753104693, "phrase": "expensive_computations"}, {"score": 0.0038810583785936505, "phrase": "short_feedback_cycles"}, {"score": 0.003789137457228946, "phrase": "interactive_systems"}, {"score": 0.0032618078775887077, "phrase": "declarative_sql-like_syntax"}, {"score": 0.0031654684543975077, "phrase": "incremental_versions"}, {"score": 0.0030904433394138963, "phrase": "relational_algebra"}, {"score": 0.002981216610222911, "phrase": "general_recursion"}, {"score": 0.002875855021453499, "phrase": "scala"}, {"score": 0.002708399936381754, "phrase": "regular_scala_code"}, {"score": 0.0026760974046034854, "phrase": "non-incremental_subcomputations"}, {"score": 0.0025202582748972122, "phrase": "larger_software_projects"}, {"score": 0.0023451553255837317, "phrase": "partial_evaluation"}], "paper_keywords": ["Incremental Computation", " Scala", " Reactive Programming"], "paper_abstract": "An incremental computation updates its result based on a change to its input, which is often an order of magnitude faster than a recomputation from scratch. In particular, incrementalization can make expensive computations feasible for settings that require short feedback cycles, such as interactive systems, IDEs, or (soft) real-time systems. This paper presents i3QL, a general-purpose programming language for specifying incremental computations. i3QL provides a declarative SQL-like syntax and is based on incremental versions of operators from relational algebra, enriched with support for general recursion. We integrated i3QL into Scala as a library, which enables programmers to use regular Scala code for non-incremental subcomputations of an i3QL query and to easily integrate incremental computations into larger software projects. To improve performance, i3QL optimizes user-defined queries by applying algebraic laws and partial evaluation. We describe the design and implementation of i3QL and its optimizations, demonstrate its applicability, and evaluate its performance.", "paper_title": "i3QL: Language-Integrated Live Data Views", "paper_id": "WOS:000348907400024"}