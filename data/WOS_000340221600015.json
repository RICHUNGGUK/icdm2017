{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "case-base_maintenance_algorithms"}, {"score": 0.004694092086199672, "phrase": "case-based_reasoning"}, {"score": 0.004404994123834589, "phrase": "life_cycle"}, {"score": 0.0043678116213858, "phrase": "cbr_systems"}, {"score": 0.004240116703465252, "phrase": "new_cases"}, {"score": 0.004098725744818192, "phrase": "useless_cases"}, {"score": 0.0039119492240482, "phrase": "case-base_maintenance"}, {"score": 0.003878952081284089, "phrase": "cbm"}, {"score": 0.0037654565082218595, "phrase": "great_efforts"}, {"score": 0.003624429617337833, "phrase": "different_kind"}, {"score": 0.0034299649219748513, "phrase": "cbr_system_designers"}, {"score": 0.0029691377785333872, "phrase": "classical_validation_methods"}, {"score": 0.002882279673195756, "phrase": "cross-validation"}, {"score": 0.002762423953243486, "phrase": "non-deterministic_algorithms"}, {"score": 0.0026252106881752067, "phrase": "methodological_point"}, {"score": 0.0025591748412278174, "phrase": "exhaustive_review"}, {"score": 0.002526780881314497, "phrase": "evaluation_methods"}, {"score": 0.0024320326084093465, "phrase": "specific_methodology"}, {"score": 0.0023210293050850276, "phrase": "experiment_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Case-Based Reasoning", " Case-Base Maintenance", " Case-Base Reduction", " Case Selection", " Evaluation"], "paper_abstract": "The success of a Case-Based Reasoning (CBR) system closely depends on its knowledge-base, named the case-base. The life cycle of CBR systems usually implies updating the case-base with new cases. However, it also implies removing useless cases for reasons of efficiency. This process is known as Case-Base Maintenance (CBM) and, in recent decades, great efforts have been made to automatise this process using different kind of algorithms (deterministic and non-deterministic). Indeed, CBR system designers find it difficult to choose from the wealth of algorithms available to maintain the case-base. Despite the importance of such a key decision, little attention has been paid to evaluating these algorithms. Although classical validation methods have been used, such as Cross-Validation and Hold-Out, they are not always valid for non-deterministic algorithms. In this work, we analyse this problem from a methodological point of view, providing an exhaustive review of these evaluation methods supported by experimentation. We also propose a specific methodology for evaluating Case-Base Maintenance algorithms (the alpha beta evaluation). Experiment results show that this method is the most suitable for evaluating most of the algorithms and datasets studied. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Evaluating Case-Base Maintenance algorithms", "paper_id": "WOS:000340221600015"}