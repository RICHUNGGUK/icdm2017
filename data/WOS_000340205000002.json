{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "why-not_questions"}, {"score": 0.049445419527232116, "phrase": "top-k_queries"}, {"score": 0.00450456611645112, "phrase": "database_performance"}, {"score": 0.004270665568018583, "phrase": "database_systems"}, {"score": 0.0038900709793274484, "phrase": "missing_tuples"}, {"score": 0.003813017794036879, "phrase": "query_result"}, {"score": 0.003712640297460159, "phrase": "so-called_\"why-not\"_questions"}, {"score": 0.002824005136794786, "phrase": "multi-criteria_decisions"}, {"score": 0.0024875444192203485, "phrase": "query_results"}, {"score": 0.002220551141101661, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "high_quality_explanations"}], "paper_keywords": ["Why-Not", " top-k", " usability", " dominating"], "paper_abstract": "After decades of effort working on database performance, the quality and the usability of database systems have received more attention in recent years. In particular, the feature of explaining missing tuples in a query result, or the so-called \"why-not\" questions, has recently become an active topic. In this paper, we study the problem of answering why-not questions on top-k queries. Our motivation is that we know many users love to pose those kinds of queries when they are making multi-criteria decisions. However, they would also want to know why if their expected answers do not show up in the query results. In this paper, we develop algorithms to answer such why-not questions efficiently. Case studies and experimental results show that our algorithms are able to return high quality explanations efficiently.", "paper_title": "Answering Why-Not Questions on Top-K Queries", "paper_id": "WOS:000340205000002"}