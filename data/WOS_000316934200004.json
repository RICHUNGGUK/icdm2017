{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_compression"}, {"score": 0.048231156244864744, "phrase": "transport_layer"}, {"score": 0.03373087714809986, "phrase": "compression_decision_mechanism"}, {"score": 0.03318304350012266, "phrase": "compression_ratio_estimation_algorithm"}, {"score": 0.004761132425263795, "phrase": "efficient_tcp_transmission"}, {"score": 0.0045262653692203815, "phrase": "transmitted_bytes"}, {"score": 0.004475659507646842, "phrase": "network_links"}, {"score": 0.004376131419366239, "phrase": "transmitted_application_data"}, {"score": 0.003954837422946628, "phrase": "transmission_efficiency"}, {"score": 0.0037595947142663997, "phrase": "limited_bandwidth"}, {"score": 0.003717528595128948, "phrase": "long_delay_links"}, {"score": 0.0035339597999254064, "phrase": "on-the-fly_tcp_data_compression_scheme"}, {"score": 0.0034359094594153304, "phrase": "tcpcomp"}, {"score": 0.0033594249301033604, "phrase": "tcp_performance"}, {"score": 0.003070086433952691, "phrase": "application_data"}, {"score": 0.0026971491199975083, "phrase": "compression_ratios"}, {"score": 0.00266693888510356, "phrase": "upcoming_application_data"}, {"score": 0.002607527117561699, "phrase": "proper_size"}, {"score": 0.0025638362414466278, "phrase": "next_data_block"}, {"score": 0.0024926348205500715, "phrase": "compression_efficiency"}, {"score": 0.0024234059612683032, "phrase": "assessment_criteria"}, {"score": 0.0023962545023307937, "phrase": "tcp_data_compression_scheme"}, {"score": 0.0023296961971785357, "phrase": "experimental_results"}, {"score": 0.0022270182923887012, "phrase": "transmitted_tcp_segments"}, {"score": 0.0021529842700733974, "phrase": "greater_transmission_efficiency"}, {"score": 0.0021049977753042253, "phrase": "standard_tcp_and_other_tcp_compression_schemes"}], "paper_keywords": ["TCP data compression", " long delay networks", " limited bandwidth", " compression decision mechanism", " compression ratio estimation"], "paper_abstract": "Data compression at the transport layer could both reduce transmitted bytes over network links and increase the transmitted application data (TCP PDU) in one RTT at the same network conditions. Therefore, it is able to improve transmission efficiency on Internet, especially on the networks with limited bandwidth or long delay links. In this paper, we propose an on-the-fly TCP data compression scheme, i.e., the TCPComp, to enhance TCP performance. This scheme is primarily composed of the compression decision mechanism and the compression ratio estimation algorithm. When the application data arrives at the transport layer, the compression decision mechanism is applied to determine which data block could be compressed. The compression ratio estimation algorithm is employed to predict compression ratios of upcoming application data for determining the proper size of the next data block so as to maximize compression efficiency. Furthermore, the assessment criteria for TCP data compression scheme are systematically developed. Experimental results show that the scheme can effectively reduce transmitted TCP segments and bytes, leading to greater transmission efficiency compared with the standard TCP and other TCP compression schemes.", "paper_title": "On-the-fly Data Compression for Efficient TCP Transmission", "paper_id": "WOS:000316934200004"}