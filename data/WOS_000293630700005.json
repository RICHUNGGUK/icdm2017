{"auto_keywords": [{"score": 0.04927465911141673, "phrase": "evaluable_functions"}, {"score": 0.01142418124514777, "phrase": "weight_constraint_programs"}, {"score": 0.01109251478856414, "phrase": "asp."}, {"score": 0.008723385381298809, "phrase": "global_constraints"}, {"score": 0.007816506691077908, "phrase": "prototype_system"}, {"score": 0.004816274043194455, "phrase": "weight"}, {"score": 0.0046544807197808095, "phrase": "current_practice"}, {"score": 0.004615202066192795, "phrase": "answer_set_programming"}, {"score": 0.0044424917428102445, "phrase": "special_kinds"}, {"score": 0.004294381488413906, "phrase": "resulting_program"}, {"score": 0.00416882434439484, "phrase": "large_domain"}, {"score": 0.004116139569480336, "phrase": "extra_constraints"}, {"score": 0.0039119492240482, "phrase": "logic_program"}, {"score": 0.0036864465771943933, "phrase": "set_logic_programs"}, {"score": 0.0036090884921108086, "phrase": "logic_programs"}, {"score": 0.003259702394241964, "phrase": "extended_weight_constraint_programs"}, {"score": 0.0032184697893776052, "phrase": "loop_completion"}, {"score": 0.0030457198309616694, "phrase": "loop_completions"}, {"score": 0.002944039482467119, "phrase": "constraint_satisfaction_problem"}, {"score": 0.002857849698346116, "phrase": "off-the-shelf_csp_solvers"}, {"score": 0.0027274643070540733, "phrase": "main_advantage"}, {"score": 0.0025160740422447837, "phrase": "new_encoding"}, {"score": 0.0024947959375982614, "phrase": "csp_problems"}, {"score": 0.002224510044064184, "phrase": "state-of-the-art_asp_solvers"}, {"score": 0.0021049977753042253, "phrase": "asp_context"}], "paper_keywords": ["Answer set programming", " Weight constraints", " Evaluable functions", " Constraint satisfaction problem"], "paper_abstract": "In the current practice of Answer Set Programming (ASP), evaluable functions are represented as special kinds of relations. This often makes the resulting program unnecessarily large when instantiated over a large domain. The extra constraints needed to enforce the relation as a function also make the logic program less transparent. In this paper, we consider adding evaluable functions to answer set logic programs. The class of logic programs that we consider here is that of weight constraint programs, which are widely used in ASP. We propose an answer set semantics to these extended weight constraint programs and define loop completion to characterize the semantics. Computationally, we provide a translation from loop completions of these programs to instances of the Constraint Satisfaction Problem (CSP) and use the off-the-shelf CSP solvers to compute the answer sets of these programs. A main advantage of this approach is that global constraints implemented in such CSP solvers become available to ASP. The approach also provides a new encoding for CSP problems in the style of weight constraint programs. We have implemented a prototype system based on these results, and our experiments show that this prototype system competes well with the state-of-the-art ASP solvers. In addition, we illustrate the utilities of global constraints in the ASP context.", "paper_title": "Weight constraint programs with evaluable functions", "paper_id": "WOS:000293630700005"}