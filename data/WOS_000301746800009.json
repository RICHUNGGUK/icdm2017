{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "xml_data"}, {"score": 0.010941742795972686, "phrase": "query_keywords"}, {"score": 0.004739056045644449, "phrase": "traditional_keyword-search_system"}, {"score": 0.0045726187330434025, "phrase": "keyword_query"}, {"score": 0.0043945048085683005, "phrase": "relevant_answers"}, {"score": 0.0038390240716280302, "phrase": "try-and-see_approach"}, {"score": 0.003674738405118697, "phrase": "fuzzy_type-ahead_search"}, {"score": 0.0033668870709083884, "phrase": "user_types"}, {"score": 0.0031217859267564344, "phrase": "minor_errors"}, {"score": 0.0029060172786617294, "phrase": "autocomplete"}, {"score": 0.0028487656293168795, "phrase": "multiple_keywords"}, {"score": 0.002726740692380339, "phrase": "high-quality_answers"}, {"score": 0.002488183412451029, "phrase": "research_challenges"}, {"score": 0.0024586427394152196, "phrase": "new_search_framework"}, {"score": 0.002419798694301991, "phrase": "effective_index_structures"}, {"score": 0.0024006068621542642, "phrase": "top-k_algorithms"}, {"score": 0.0023626775529531486, "phrase": "high_interactive_speed"}, {"score": 0.0023253461255420436, "phrase": "effective_ranking_functions"}, {"score": 0.0023069016803337365, "phrase": "early_termination_techniques"}, {"score": 0.0022614266476954467, "phrase": "top-k_relevant_answers"}, {"score": 0.0021992603252793995, "phrase": "real_data_sets"}, {"score": 0.0021645053655350703, "phrase": "experimental_results"}, {"score": 0.0021218313648947926, "phrase": "high_search_efficiency"}, {"score": 0.0021049977753042253, "phrase": "result_quality"}], "paper_keywords": ["XML", " keyword search", " type-ahead search", " fuzzy search"], "paper_abstract": "In a traditional keyword-search system over XML data, a user composes a keyword query, submits it to the system, and retrieves relevant answers. In the case where the user has limited knowledge about the data, often the user feels \"left in the dark\" when issuing queries, and has to use a try-and-see approach for finding information. In this paper, we study fuzzy type-ahead search in XML data, a new information-access paradigm in which the system searches XML data on the fly as the user types in query keywords. It allows users to explore data as they type, even in the presence of minor errors of their keywords. Our proposed method has the following features: 1) Search as you type: It extends Autocomplete by supporting queries with multiple keywords in XML data. 2) Fuzzy: It can find high-quality answers that have keywords matching query keywords approximately. 3) Efficient: Our effective index structures and searching algorithms can achieve a very high interactive speed. We study research challenges in this new search framework. We propose effective index structures and top-k algorithms to achieve a high interactive speed. We examine effective ranking functions and early termination techniques to progressively identify the top-k relevant answers. We have implemented our method on real data sets, and the experimental results show that our method achieves high search efficiency and result quality.", "paper_title": "Efficient Fuzzy Type-Ahead Search in XML Data", "paper_id": "WOS:000301746800009"}