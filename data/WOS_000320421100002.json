{"auto_keywords": [{"score": 0.040170396999330955, "phrase": "service_provider"}, {"score": 0.00481495049065317, "phrase": "cryptographic_cloud_storage"}, {"score": 0.004772593750252861, "phrase": "public_verifiability"}, {"score": 0.0047306078475683865, "phrase": "ensuring_data_security"}, {"score": 0.0046683172874085015, "phrase": "yml_framework._yml_framework"}, {"score": 0.004606843145343611, "phrase": "well-adapted_advanced_tool"}, {"score": 0.0044863018460183784, "phrase": "portable_parallel_applications"}, {"score": 0.004446823283475876, "phrase": "large_scale_peer"}, {"score": 0.004407690586271672, "phrase": "peer_and_grid_middlewares"}, {"score": 0.004235793609579307, "phrase": "data_security"}, {"score": 0.004179991181159956, "phrase": "yml_framework"}, {"score": 0.003929107176349023, "phrase": "data_repository"}, {"score": 0.003877329308854808, "phrase": "public_cloud_infrastructure"}, {"score": 0.0035648266669315943, "phrase": "encryption_algorithm"}, {"score": 0.0033805214040814233, "phrase": "pre-classified_keywords"}, {"score": 0.0032199307816384577, "phrase": "statistically_consistent_public-key_encryption"}, {"score": 0.003013129637451091, "phrase": "corresponding_trapdoor"}, {"score": 0.0029212075318449616, "phrase": "specific_keywords"}, {"score": 0.00278237555651743, "phrase": "elegant_verification_scheme"}, {"score": 0.0027094427948305515, "phrase": "third_party_auditor"}, {"score": 0.0026855812408894276, "phrase": "tpa"}, {"score": 0.002615156460073562, "phrase": "data_owner"}, {"score": 0.0021049977753042253, "phrase": "cloud_computing"}], "paper_keywords": ["Data Repository", " Cryptographic Cloud Storage", " Bilinear Diffie-Hellman Problem", " Ciphertext-Searching", " Statistical Consistency", " Public Verifiability"], "paper_abstract": "YML framework is a well-adapted advanced tool to support designing and executing portable parallel applications over large scale peer to peer and grid middlewares. This work studies the problem of ensuring data security of the YML framework. We define and construct a mechanism that enables us to move the data repository to a public cloud infrastructure where the service provider is not completely trustworthy. To achieve confidentiality, we encrypt the data using the encryption algorithm in our prior work before uploading to the cloud, and then attach pre-classified keywords to them for ciphertext-searching, which are generated by a statistically consistent public-key encryption with keyword search (PEKS) scheme, so the service provider can use the corresponding trapdoor to identify all data containing some specific keywords without learning anything else. To ensure integrity, an elegant verification scheme is proposed, enabling a third party auditor (TPA), on behalf of data owner, to verify the integrity of the (encrypted) data stored in the cloud. The introduction of TPA eliminates the involvement of client through the auditing of whether his data stored in the cloud is indeed intact, which can be important in achieving economies of scale for cloud computing.", "paper_title": "CRYPTOGRAPHIC CLOUD STORAGE WITH PUBLIC VERIFIABILITY: ENSURING DATA SECURITY OF THE YML FRAMEWORK", "paper_id": "WOS:000320421100002"}