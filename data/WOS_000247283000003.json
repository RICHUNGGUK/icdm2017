{"auto_keywords": [{"score": 0.004775918707955445, "phrase": "possibilistic_databases"}, {"score": 0.004585433265422727, "phrase": "imprecise_information"}, {"score": 0.004420472010542188, "phrase": "imprecise_data"}, {"score": 0.004226856126282259, "phrase": "real_data"}, {"score": 0.004158563941891469, "phrase": "commercial_systems"}, {"score": 0.0039280803011236395, "phrase": "possibilistic_setting"}, {"score": 0.003740679163860117, "phrase": "probabilistic_one"}, {"score": 0.0036652492107503956, "phrase": "imprecise_piece"}, {"score": 0.003562186600028245, "phrase": "possibility_distribution"}, {"score": 0.003419943984098415, "phrase": "natural_interpretation"}, {"score": 0.00332375606483146, "phrase": "regular_databases"}, {"score": 0.0032567057896906314, "phrase": "basic_gateway"}, {"score": 0.0029531640201737384, "phrase": "restricted_queries"}, {"score": 0.0028583875909257766, "phrase": "possibilistic_database"}, {"score": 0.0027330029055210926, "phrase": "possibilistic_relations"}, {"score": 0.0023121112251855667, "phrase": "algebraic_relational_query"}], "paper_keywords": [""], "paper_abstract": "This article is concerned with the handling of imprecise information in databases. The need for dealing with imprecise data is more and more acknowledged in order to cope with real data, even if commercial systems are most of the time unable to manage them. Here, the possibilistic setting is taken into consideration because it is less demanding than the probabilistic one. Then, any imprecise piece of information is modeled as a possibility distribution intended for constraining the more or less acceptable values. Such a possibilistic database has a natural interpretation in terms of a set of regular databases, which provides the basic gateway to interpret queries. However, if this approach is sound, it is not realistic, and it is necessary to consider restricted queries for which a calculus grounded on the possibilistic database, that is, where the operators work directly on possibilistic relations, is feasible. Extended yes/no queries are dealt with here, where their general form is: \"to what extent is it possible and certain that tuple t (given) belongs to the answer to Q,\" where Q is an algebraic relational query. A strategy for processing such queries efficiently is proposed under some assumptions as to the operators appearing in Q. (c) 2007 Wiley Periodicals, Inc.", "paper_title": "About yes/no queries against possibilistic databases", "paper_id": "WOS:000247283000003"}