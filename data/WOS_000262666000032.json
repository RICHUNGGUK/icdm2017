{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "photon"}, {"score": 0.00471811808206897, "phrase": "irradiance_cache"}, {"score": 0.004561019117546361, "phrase": "global_illumination_method"}, {"score": 0.004233492114255375, "phrase": "photon_mapping_method"}, {"score": 0.003929391999210588, "phrase": "costly_additional_rendering_pass"}, {"score": 0.0037219886365287085, "phrase": "irradiance_caching"}, {"score": 0.0031845067058084583, "phrase": "single_camera"}, {"score": 0.003036832649117453, "phrase": "entire_scene"}, {"score": 0.002975652654536407, "phrase": "irradiance_caching_method"}, {"score": 0.0027616550517346066, "phrase": "long_time"}, {"score": 0.002687702958515561, "phrase": "tedious_task"}, {"score": 0.0025456716198597627, "phrase": "needed_cameras"}, {"score": 0.0021049977753042253, "phrase": "global_illumination_solution"}], "paper_keywords": [""], "paper_abstract": "We describe a global illumination method combining two well known techniques: photon mapping and irradiance caching. The photon mapping method has the advantage of being view independent but requires a costly additional rendering pass, called final gathering. As for irradiance caching, it is view-dependent, irradiance is only computed and cached on surfaces of the scene as viewed by a single camera. To compute records covering the entire scene, the irradiance caching method has to be run for many cameras, which takes a long time and is a tedious task since the user has to place the needed cameras manually. Our method exploits the advantages of these two methods and avoids any intervention of the user. It computes a refined, view-independent irradiance cache from a photon map. The global illumination solution is then rendered interactively using radiance cache splatting.", "paper_title": "Photon-driven Irradiance Cache", "paper_id": "WOS:000262666000032"}