{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multilevel_cache_hierarchies"}, {"score": 0.03773596973966994, "phrase": "design_points"}, {"score": 0.004546970518808189, "phrase": "overall_memory_access_speed"}, {"score": 0.004436716583179764, "phrase": "configurable_processors"}, {"score": 0.0040052617265655035, "phrase": "near-optimal_set_size"}, {"score": 0.003782174375003052, "phrase": "multilevel_cache_hierarchy"}, {"score": 0.003736004578001584, "phrase": "challenging_task"}, {"score": 0.0036156119373414067, "phrase": "even_trillions"}, {"score": 0.0034990853199511982, "phrase": "iterative_exploration_method"}, {"score": 0.003456359260921982, "phrase": "suitable_configurations"}, {"score": 0.0033449479263613848, "phrase": "application_specific_multiprocessor_system"}, {"score": 0.003237116128682586, "phrase": "memory_access_speed"}, {"score": 0.003069230909006614, "phrase": "specialized_hardware"}, {"score": 0.0030441844088874366, "phrase": "parallel_cache_simulation"}, {"score": 0.0030069962181403487, "phrase": "multiple_back-and-forth_iterations"}, {"score": 0.0028627183712016894, "phrase": "selected_portions"}, {"score": 0.002827740707723551, "phrase": "entire_design_space"}, {"score": 0.002759058732719621, "phrase": "final_design_point"}, {"score": 0.0026920404458807444, "phrase": "two-and_three-level_cache_hierarchies"}, {"score": 0.0026700637696697414, "phrase": "private_and_shared_caches"}, {"score": 0.002637433799290365, "phrase": "quad-core_system"}, {"score": 0.0023514343164101332, "phrase": "state-of-the-art_noniterative_method"}], "paper_keywords": ["Cache hierarchy", " design space exploration", " hardware assisted simulation", " multiprocessor system-on-chip (MPSoC)"], "paper_abstract": "Multiprocessor systems make use of multilevel cache hierarchies to improve overall memory access speed. Embedded systems typically use configurable processors, where the caches in the system can be customized for a given application or a set of applications. Finding the optimal or a near-optimal set size, block size, and associativity of each of the caches in a multilevel cache hierarchy is a challenging task due to the presence of billions or even trillions of design points. This paper presents an iterative exploration method to find suitable configurations for all the caches in the hierarchy of an application specific multiprocessor system-on-chip, to improve memory access speed. We propose an algorithm and combine it with the use of specialized hardware for parallel cache simulation to enable multiple back-and-forth iterations through the cache levels. In every iteration, our algorithm explores selected portions of the entire design space to quickly converge upon the final design point. We demonstrate our methodology on two-and three-level cache hierarchies with private and shared caches in a quad-core system, respectively, consisting of 5.4 billion and 10.4 trillion design points. Our method was able to find design points with up to 18.9% lower average memory access time while reducing total cache size by up to 74.15%, compared to a state-of-the-art noniterative method. The number of design points explored was 4x higher in our method, which is still a mere 3.6 x 10(-5)% of the entire design space, and took 6.08 h.", "paper_title": "Exploring Multilevel Cache Hierarchies in Application Specific MPSoCs", "paper_id": "WOS:000365222400009"}