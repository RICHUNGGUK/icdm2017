{"auto_keywords": [{"score": 0.03623561938966861, "phrase": "tornado"}, {"score": 0.00481495049065317, "phrase": "distributed_spatio-textual_stream_processing_system"}, {"score": 0.004744018246633455, "phrase": "widespread_use"}, {"score": 0.004697308822154191, "phrase": "location-aware_devices"}, {"score": 0.004605258779434384, "phrase": "increased_popularity"}, {"score": 0.0045599093158915326, "phrase": "micro-blogging_applications"}, {"score": 0.004470671852230511, "phrase": "twitter"}, {"score": 0.0043183186953102805, "phrase": "large_streams"}, {"score": 0.00427578268550103, "phrase": "spatio-textual_data"}, {"score": 0.004150661689086371, "phrase": "real-time_applications"}, {"score": 0.004029187256595917, "phrase": "large-scale_spatio-textual_streams"}, {"score": 0.0031924235048662055, "phrase": "storm"}, {"score": 0.003114283314285167, "phrase": "spatio-textual_streams"}, {"score": 0.003038066486989815, "phrase": "spatio-textual_indexing_layer"}, {"score": 0.0029199689963238726, "phrase": "indexing_layer"}, {"score": 0.0026443691099806003, "phrase": "data_distribution"}, {"score": 0.002618278365749875, "phrase": "query_workload"}, {"score": 0.0025289662786567896, "phrase": "higher-level_textual_concepts"}, {"score": 0.0024306105794630246, "phrase": "spatio-textual_queries"}, {"score": 0.0023828731731474306, "phrase": "data_deduplication"}, {"score": 0.0023245146355917626, "phrase": "redundant_textual_data"}, {"score": 0.002212040873849046, "phrase": "real_twitter_streams"}, {"score": 0.0021365562685368767, "phrase": "continuous_or_snapshot_spatio-textual_queries"}, {"score": 0.0021049977753042253, "phrase": "map-assisted_query-interface"}], "paper_keywords": [""], "paper_abstract": "The widespread use of location-aware devices together with the increased popularity of micro-blogging applications (e.g., Twitter) led to the creation of large streams of spatio-textual data. In order to serve real-time applications, the processing of these large-scale spatio-textual streams needs to be distributed. However, existing distributed stream processing systems (e.g., Spark and Storm) are not optimized for spatial/textual content. In this demonstration, we introduce Tornado, a distributed in-memory spatio-textual stream processing server that extends Storm. To efficiently process spatio-textual streams, Tornado introduces a spatio-textual indexing layer to the architecture of Storm. The indexing layer is adaptive, i.e., dynamically re-distributes the processing across the system according to changes in the data distribution and/or query workload. In addition to keywords, higher-level textual concepts are identified and are semantically matched against spatio-textual queries. Tornado provides data deduplication and fusion to eliminate redundant textual data. We demonstrate a prototype of Tornado running against real Twitter streams, where the users can register continuous or snapshot spatio-textual queries using a map-assisted query-interface.", "paper_title": "Tornado: A Distributed Spatio-Textual Stream Processing System", "paper_id": "WOS:000386424800091"}