{"auto_keywords": [{"score": 0.04561683059234016, "phrase": "ram"}, {"score": 0.0053419055911487524, "phrase": "ram."}, {"score": 0.00481495049065317, "phrase": "finger_search"}, {"score": 0.0046253989970108985, "phrase": "new_finger_search_tree"}, {"score": 0.004195418010131832, "phrase": "large_class"}, {"score": 0.004147523799581407, "phrase": "input_distributions"}, {"score": 0.0040767015025213625, "phrase": "parameter_d"}, {"score": 0.004037743360581361, "phrase": "andersson"}, {"score": 0.0038271712887391015, "phrase": "search_element"}, {"score": 0.0035722806911457545, "phrase": "finger_search_tree"}, {"score": 0.003381453817169319, "phrase": "mattsson"}, {"score": 0.003372844338742438, "phrase": "previous_result"}, {"score": 0.003094306770612843, "phrase": "distance_d"}, {"score": 0.0030414140732789186, "phrase": "search_time_complexity"}, {"score": 0.002758273619951683, "phrase": "search_time"}, {"score": 0.002664749302333897, "phrase": "high_probability"}, {"score": 0.002530359917257626, "phrase": "slowly_growing_function"}, {"score": 0.002321234686549485, "phrase": "\"balls_and_bins\"_combinatorial_game"}, {"score": 0.0021049977753042253, "phrase": "unknown_distribution"}], "paper_keywords": ["Data structures", " Dictionary problem", " Balls and bins problem", " Interpolation search", " Expected analysis"], "paper_abstract": "We present a new finger search tree with O(loglogd) expected search time in the Random Access Machine (RAM) model of computation for a large class of input distributions. The parameter d represents the number of elements (distance) between the search element and an element pointed to by a finger, in a finger search tree that stores n elements. Our data structure improves upon a previous result by Andersson and Mattsson that exhibits expected O(loglogn) search time by incorporating the distance d into the search time complexity, and thus removing the dependence on n. We are also able to show that the search time is O(loglogd+I center dot(n)) with high probability, where I center dot(n) is any slowly growing function of n. For the need of the analysis we model the updates by a \"balls and bins\" combinatorial game that is interesting in its own right as it involves insertions and deletions of balls according to an unknown distribution.", "paper_title": "Improved Bounds for Finger Search on a RAM", "paper_id": "WOS:000316073700002"}