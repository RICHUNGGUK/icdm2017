{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "noninstantaneous_server_activation"}, {"score": 0.0046797114400479135, "phrase": "performance_evaluation"}, {"score": 0.004580769304731227, "phrase": "k_servers"}, {"score": 0.004483909657713567, "phrase": "n_heterogeneous_classes"}, {"score": 0.0044047527104545525, "phrase": "server_allocation"}, {"score": 0.004250588556735512, "phrase": "class_specific_threshold-based_policy"}, {"score": 0.004116440453049531, "phrase": "server_activation_time"}, {"score": 0.003916098498242888, "phrase": "multiclass_threshold-based_queueing_system"}, {"score": 0.0037789720824759503, "phrase": "threshold-based_approaches"}, {"score": 0.0036727235025069828, "phrase": "server_usage_costs"}, {"score": 0.003419943984098415, "phrase": "hysteresis_control"}, {"score": 0.00335950642866031, "phrase": "unnecessary_cost"}, {"score": 0.0033356305227059072, "phrase": "server_setup"}, {"score": 0.003161870571621082, "phrase": "momentary_fluctuations"}, {"score": 0.0029971349193857093, "phrase": "multiple_classes"}, {"score": 0.0028715299874549245, "phrase": "good_approaches"}, {"score": 0.0028409576481842457, "phrase": "server_resources"}, {"score": 0.0028107098861552124, "phrase": "different_classes"}, {"score": 0.0027218799769229596, "phrase": "server_pool"}, {"score": 0.002664221051021009, "phrase": "important_and_distinguishing_characteristic"}, {"score": 0.0025343769150179764, "phrase": "multiclass_system"}, {"score": 0.0024895500851796603, "phrase": "main_contributions"}, {"score": 0.0024022553322977165, "phrase": "efficient_approximation_method"}, {"score": 0.00223672097810462, "phrase": "resulting_accuracy"}, {"score": 0.0021893168527276105, "phrase": "performance_measures"}, {"score": 0.0021049977753042253, "phrase": "system_design_choices"}], "paper_keywords": ["multiclass multiserver queueing system", " hysteresis control", " performance", " evaluation", " system design"], "paper_abstract": "In this paper, we consider performance evaluation of a system which shares K servers ( or resources) among N heterogeneous classes of workloads, where server allocation and deallocation for class i is dictated by a class specific threshold-based policy with hysteresis control. In particular, the server activation time for class i is noninstantaneous. There are many systems and applications where a multiclass threshold-based queueing system can be of great use. One important utility of using threshold-based approaches is in situations where applications may incur server usage costs. In these cases, one needs to consider not only the performance aspects but also the resulting cost/performance ratio. The motivation for using hysteresis control is to reduce the unnecessary cost of server setup ( or activation) and server removal ( or deactivation) whenever there are momentary fluctuations in workload. Moreover, servers in such systems and applications are often needed by multiple classes of workloads and, hence, it is desirable to find good approaches to sharing server resources among the different classes of workloads, preferably without statically partitioning the server pool among these classes. An important and distinguishing characteristic of our work is that we consider the modeling and analysis of a multiclass system with noninstantaneous server activation. The main contributions of this work are 1) in developing an efficient approximation method for solving such models, 2) in verifying the convergence of our iterative method, and 3) in evaluating the resulting accuracy of the technique for computing performance measures of interest, which can subsequently be used in making system design choices.", "paper_title": "Multiclass multiserver threshold-based systems: A study of noninstantaneous server activation", "paper_id": "WOS:000242312000008"}