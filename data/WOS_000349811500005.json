{"auto_keywords": [{"score": 0.037854240060554, "phrase": "ems"}, {"score": 0.00481495049065317, "phrase": "parallel_file_systems"}, {"score": 0.004729856080441582, "phrase": "ever-growing_demand"}, {"score": 0.0046739596755881185, "phrase": "high_performance_computation"}, {"score": 0.004591345494188032, "phrase": "progressively_larger_parallel_distributed_file_systems"}, {"score": 0.004404188306112211, "phrase": "file_systems"}, {"score": 0.004326321719714357, "phrase": "high_performance"}, {"score": 0.004149922666541166, "phrase": "numerous_data_servers"}, {"score": 0.003957078581524691, "phrase": "quality_service"}, {"score": 0.0038411109150557504, "phrase": "small_files"}, {"score": 0.0036408354779365643, "phrase": "delegable_metadata_service"}, {"score": 0.0034715658596258018, "phrase": "metadata_accesses"}, {"score": 0.0034304883989739804, "phrase": "optimizing_small-file_performance"}, {"score": 0.0029855405367707117, "phrase": "cappella"}, {"score": 0.0028693932802982417, "phrase": "transaction_operations"}, {"score": 0.0028354207806133153, "phrase": "fine-grained_lock_revocation"}, {"score": 0.0026874405408023956, "phrase": "parallel_distributed_file_system"}, {"score": 0.002593091742792519, "phrase": "industrial_standards"}, {"score": 0.002357337046408753, "phrase": "significant_improvement"}, {"score": 0.0022881443200668886, "phrase": "metadata_operations"}, {"score": 0.0022610379771517966, "phrase": "small-file_access"}], "paper_keywords": ["delegable metadata service", " metadata performance", " consistency", " small file", " parallel file system"], "paper_abstract": "The ever-growing demand for high performance computation calls for progressively larger parallel distributed file systems to match their requirement. These file systems can achieve high performance for large I/O operations through distributing load across numerous data servers. However, they fail to provide quality service for applications pertaining to small files. In this paper, we propose a delegable metadata service (EMS) for hiding latency of metadata accesses and optimizing small-file performance. In addition, four techniques have been designed to maintain consistency and efficiency in DMS: pre-allocate serial metahandles, directory-based metadata replacement, packing transaction operations and fine-grained lock revocation. These schemes have been employed in Cappella parallel distributed file system, and various experiments complying with industrial standards have been conducted for evaluation of its efficiency. The results show that our design has achieved significant improvement in performance of both metadata operations and small-file access. Moreover, this scheme is widely applicable for integration within many other distributed file systems.", "paper_title": "Mlock: building delegable metadata service for the parallel file systems", "paper_id": "WOS:000349811500005"}