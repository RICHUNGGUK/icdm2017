{"auto_keywords": [{"score": 0.04810417603515557, "phrase": "byzantine_agreement"}, {"score": 0.028479034717190523, "phrase": "uncorrupt_processors"}, {"score": 0.00481495049065317, "phrase": "scalable_byzantine_agreement"}, {"score": 0.004544127927346964, "phrase": "synchronous_network"}, {"score": 0.004496542293425754, "phrase": "n_processors"}, {"score": 0.004379737380744606, "phrase": "private_random_string"}, {"score": 0.004133292222875435, "phrase": "private_communication_line"}, {"score": 0.003383475802364289, "phrase": "expected_constant_number"}, {"score": 0.0032609360162842767, "phrase": "scalable_model"}, {"score": 0.0031594291695784286, "phrase": "uncorrupt_processor"}, {"score": 0.003028969851366049, "phrase": "n_other_processors"}, {"score": 0.0024017638230939514, "phrase": "corrupt_processors"}, {"score": 0.0021049977753042253, "phrase": "lossless_protocols"}], "paper_keywords": ["Byzantine Agreement", " scalable distributed protocol", " lower bounds", " malicious adversary"], "paper_abstract": "We consider the problem of computing Byzantine Agreement in a synchronous network with n processors, each with a private random string, where each pair of processors is connected by a private communication line. The adversary is malicious and non-adaptive, i.e., it must choose the processors to corrupt at the start of the algorithm. Byzantine Agreement is known to be computable in this model in an expected constant number of rounds. We consider a scalable model where in each round each uncorrupt processor can send to any set of log n other processors and listen to any set of log n processors. We define the loss of an execution to be the number of uncorrupt processors whose output does not agree with the output of the majority of uncorrupt processors. We show that if there are t corrupt processors, then any randomised protocol which has probability at least 1/2 + 1/ logn of loss less than t(2/3)/16fn(1/3) log(5/3) n requires at least f rounds. This also shows that lossless protocols require both (Omega) over tilde (n(1/3)) rounds, and for at least one uncorrupt processor to send (Omega) over tilde (n(1/3)) messages during the protocol.", "paper_title": "Lower bound for scalable Byzantine Agreement", "paper_id": "WOS:000259068200001"}