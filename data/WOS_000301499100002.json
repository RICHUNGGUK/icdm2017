{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "nlp"}, {"score": 0.004550669123303854, "phrase": "natural_language_processing"}, {"score": 0.004127753467337283, "phrase": "workflow_comparison"}, {"score": 0.003782655283668953, "phrase": "nlp_problems"}, {"score": 0.0036490529923833884, "phrase": "scientific_and_engineering_perspectives"}, {"score": 0.0033096502887394233, "phrase": "similar_pieces"}, {"score": 0.0030798711656591948, "phrase": "component_reuse"}, {"score": 0.002971016979295967, "phrase": "nlp_development_efficiency"}, {"score": 0.0028659990472580154, "phrase": "unstructured_information_management_architecture"}, {"score": 0.0027223626424366207, "phrase": "large_library"}, {"score": 0.0026945086500597304, "phrase": "interoperable_resources"}, {"score": 0.0025992391074270097, "phrase": "customizable_comparison"}, {"score": 0.0025726416100664853, "phrase": "evaluation_system"}, {"score": 0.0025202582748972122, "phrase": "visualization_utilities"}, {"score": 0.0023816257768353344, "phrase": "potential_reuse_scenarios"}, {"score": 0.0022390533383717715, "phrase": "nlp_developer_efficiency"}, {"score": 0.0021267708018655493, "phrase": "web_browser"}, {"score": 0.0021049977753042253, "phrase": "u-compare"}], "paper_keywords": [""], "paper_abstract": "During the development of natural language processing (NLP) applications, developers are often required to repeatedly perform certain tasks. Among these tasks, workflow comparison and evaluation are two of the most crucial because they help to discover the nature of NLP problems, which is important from both scientific and engineering perspectives. Although these tasks can potentially be automated, developers tend to perform them manually, repeatedly writing similar pieces of code. We developed tools to largely automate these subtasks. Promoting component reuse is another way to further increase NLP development efficiency. Building on the interoperability enhancing Unstructured Information Management Architecture (UIMA) framework, we have collected a large library of interoperable resources, developed several workflow creation utilities, added a customizable comparison and evaluation system, and built visualization utilities. These tools are modularly designed to accommodate various use cases and potential reuse scenarios. By integrating all these features into our U-Compare system, we hope to increase NLP developer efficiency. Simple to use and directly runnable from a web browser, U-Compare has already found uses in a range of applications.", "paper_title": "U-Compare: A modular NLP workflow construction and evaluation system", "paper_id": "WOS:000301499100002"}