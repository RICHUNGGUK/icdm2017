{"auto_keywords": [{"score": 0.04807496386351964, "phrase": "progress_indicators"}, {"score": 0.03782612329479551, "phrase": "multi-query_progress_indicator"}, {"score": 0.03227078104988101, "phrase": "multi-query_progress_indicators"}, {"score": 0.0048150563254579296, "phrase": "sql"}, {"score": 0.004452078350485375, "phrase": "sql_queries"}, {"score": 0.004389089714294084, "phrase": "rdbmss"}, {"score": 0.004296264970612285, "phrase": "previously_proposed_progress_indicators"}, {"score": 0.0038332390893263844, "phrase": "other's_performance"}, {"score": 0.003371508176308189, "phrase": "even_queries"}, {"score": 0.0029441472095672397, "phrase": "single-query_progress_indicators"}, {"score": 0.002683304054823427, "phrase": "gui_tool"}, {"score": 0.0024108455980729284, "phrase": "initial_implementation"}, {"score": 0.0023263096822819735, "phrase": "postgresql"}, {"score": 0.0021049977753042253, "phrase": "workload_management"}], "paper_keywords": [""], "paper_abstract": "Recently, progress indicators have been proposed for SQL queries in RDBMSs. All previously proposed progress indicators consider each query in isolation, ignoring the impact simultaneously running queries have on each other's performance, In this paper, we explore a multi-query progress indicator, which explicitly considers concurrently running queries and even queries predicted to arrive in the future when producing its estimates. We demonstrate that multi-query progress indicators can provide more accurate estimates than single-query progress indicators. Moreover, we extend the use of progress indicators beyond being a GUI tool and show how to apply multi-query progress indicators to workload management. We report on an initial implementation of a multi-query progress indicator in PostgreSQL and experiments with its use both for estimating remaining query execution time and for workload management.", "paper_title": "Multi-query SQL progress indicators", "paper_id": "WOS:000237081600054"}