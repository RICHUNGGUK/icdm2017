{"auto_keywords": [{"score": 0.029188827492907903, "phrase": "newreno"}, {"score": 0.00481495049065317, "phrase": "independent_h-tcp_implementation"}, {"score": 0.00450368324850566, "phrase": "key_requirement"}, {"score": 0.004449280529563265, "phrase": "ietf_recognition"}, {"score": 0.004395532072377065, "phrase": "new_tcp_algorithms"}, {"score": 0.0038453138708790385, "phrase": "dynamically_loadable_kernel_module"}, {"score": 0.0036627245728600073, "phrase": "summary_description"}, {"score": 0.0035965032173588753, "phrase": "h-tcp_algorithm"}, {"score": 0.003223494720348768, "phrase": "h-tcp_behavior"}, {"score": 0.003089080923888397, "phrase": "implementation-specific_issues"}, {"score": 0.00303319936111073, "phrase": "h-tcp's_dynamic_behavior"}, {"score": 0.0029066973917258655, "phrase": "actual_collateral_impact"}, {"score": 0.002802463736946288, "phrase": "h-tcp"}, {"score": 0.0025578967205807843, "phrase": "h-tcp's_cwnd_growth_strategy"}, {"score": 0.002511600086227215, "phrase": "faster_fluctuations"}, {"score": 0.002481200970201421, "phrase": "queue_sizes"}, {"score": 0.002348883765159185, "phrase": "congestion_points"}, {"score": 0.0022371907579775796, "phrase": "valuable_predictors"}, {"score": 0.0022101055924375725, "phrase": "h-tcp's_potential_impact"}, {"score": 0.0021569129153653777, "phrase": "consumer_end-hosts"}], "paper_keywords": ["experimentation", " validation", " measurement", " performance", " H-TCP", " TCP", " FreeBSD", " congestion control"], "paper_abstract": "A key requirement for IETF recognition of new TCP algorithms is having an independent, interoperable implementation. This paper describes our BSD-licensed implementation of H-TCP within FreeBSD 7.0, publicly available as a dynamically loadable kernel module. Based on our implementation experience we provide a summary description of the H-TCP algorithm to assist other groups build further interoperable implementations. Using data from our live testbed we demonstrate that our version exhibits expected H-TCP behavior, and describe a number of implementation-specific issues that influence H-TCP's dynamic behavior. Finally, we illustrate the actual collateral impact on path latency of using H-TCP instead of NewReno. In particular we illustrate how, compared to NewReno, H-TCP's cwnd growth strategy can cause faster fluctuations in queue sizes at, yet lower median latency through, congestion points. We believe these insights will prove valuable predictors of H-TCP's potential impact if deployed in consumer end-hosts in addition to specialist, high-performance network environments.", "paper_title": "An independent H-TCP implementation under FreeBSD 7.0: Description and observed behaviour", "paper_id": "WOS:000257819700003"}