{"auto_keywords": [{"score": 0.0494162196744337, "phrase": "temporal_consistency_maintenance"}, {"score": 0.048924945515857556, "phrase": "real-time_object"}, {"score": 0.04042828959160227, "phrase": "sensor_transactions"}, {"score": 0.03679048193550959, "phrase": "periodic_sensor_transactions"}, {"score": 0.023814164393779737, "phrase": "optimal_algorithm"}, {"score": 0.00481495049065317, "phrase": "earliest_deadline"}, {"score": 0.004475022550508119, "phrase": "temporal_validity_interval"}, {"score": 0.0043976740574978085, "phrase": "object_state"}, {"score": 0.004101366149219787, "phrase": "temporal_consistency"}, {"score": 0.00396075511616602, "phrase": "real-time_system"}, {"score": 0.003629882559085245, "phrase": "relevant_data_update"}, {"score": 0.0035176353680157367, "phrase": "deadline_assignment_problem"}, {"score": 0.0033265580369717996, "phrase": "more-less_scheme"}, {"score": 0.0030378759123133644, "phrase": "dynamic_priority_scheduling"}, {"score": 0.0026602925366283952, "phrase": "optimal_solution"}, {"score": 0.002586972610351776, "phrase": "linear_time"}, {"score": 0.0025510720021028107, "phrase": "resulting_processor_utilization"}, {"score": 0.0024894376091589244, "phrase": "traditional_approach"}, {"score": 0.0024039564563674673, "phrase": "optimal_periods"}, {"score": 0.00227323596233465, "phrase": "arbitrary_deadlines"}, {"score": 0.00217987162651941, "phrase": "problem_size"}, {"score": 0.0021049977753042253, "phrase": "heuristic_search-based_algorithm"}], "paper_keywords": ["real-time databases", " temporal consistency", " earliest deadline first"], "paper_abstract": "A real-time object is one whose state may become invalid with the passage of time. A temporal validity interval is associated with the object state, and the real-time object is temporally consistent if its temporal validity interval has not expired. Clearly, the problem of maintaining temporal consistency of data is motivated by the need for a real-time system to track its environment correctly. Hence, sensor transactions must be able to execute periodically and also each instance of a transaction should perform the relevant data update before its deadline. Unfortunately, the period and deadline assignment problem for periodic sensor transactions has not received the attention that it deserves. An exception is the More-Less scheme, which uses the Deadline Monotonic (DM) algorithm for scheduling periodic sensor transactions. However, there is no work addressing this problem from the perspective of dynamic priority scheduling. In this paper, we examine the problem of temporal consistency maintenance using the Earliest Deadline First (EDF) algorithm in three steps: First, the problem is transformed to another problem with a sufficient (but not necessary) condition for feasibly assigning periods and deadlines. An optimal solution for the problem can be found in linear time, and the resulting processor utilization is characterized and compared to a traditional approach. Second, an algorithm to search for the optimal periods and deadlines is proposed. The problem can be solved for sensor transactions that require any arbitrary deadlines. However, the optimal algorithm does not scale well when the problem size increases. Hence, thirdly, we propose a heuristic search-based algorithm that is more efficient than the optimal algorithm and is capable of finding a solution if one exists.", "paper_title": "On earliest deadline first scheduling for temporal consistency maintenance", "paper_id": "WOS:000259191300003"}