{"auto_keywords": [{"score": 0.03784144720028532, "phrase": "distributed"}, {"score": 0.00481495049065317, "phrase": "distributed_parallel_scripting"}, {"score": 0.004440277230269978, "phrase": "domain-specific_application_programs"}, {"score": 0.004298666679374568, "phrase": "large_collections"}, {"score": 0.004229556887896042, "phrase": "file-based_data"}, {"score": 0.004061584718427419, "phrase": "complex_orchestration"}, {"score": 0.003996271202811961, "phrase": "data_management"}, {"score": 0.0036553070575015344, "phrase": "application_invocations"}, {"score": 0.0035386420095120706, "phrase": "parallel_computing_resources"}, {"score": 0.0031845067058084583, "phrase": "swift_parallel_scripting_language"}, {"score": 0.0030331993611107328, "phrase": "file_system_structures"}, {"score": 0.0029602552900111433, "phrase": "language_constructs"}, {"score": 0.002865710140187219, "phrase": "ordinary_application_programs"}, {"score": 0.002751751956416832, "phrase": "powerful_parallel_scripts"}, {"score": 0.002599763359352916, "phrase": "distributed_resources"}, {"score": 0.0025167026017217926, "phrase": "swift's_implicitly_parallel_and_deterministic_programming_model"}, {"score": 0.0023016843709107297, "phrase": "functional_style"}, {"score": 0.0022101055924375725, "phrase": "distributed_parallel_execution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Swift", " Parallel programming", " Scripting", " Dataflow"], "paper_abstract": "Scientists, engineers, and statisticians must execute domain-specific application programs many times on large collections of file-based data. This activity requires complex orchestration and data management as data is passed to, from, and among application invocations. Distributed and parallel computing resources can accelerate such processing, but their use further increases programming complexity. The Swift parallel scripting language reduces these complexities by making file system structures accessible via language constructs and by allowing ordinary application programs to be composed into powerful parallel scripts that can efficiently utilize parallel and distributed resources. We present Swift's implicitly parallel and deterministic programming model, which applies external applications to file collections using a functional style that abstracts and simplifies distributed parallel execution. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Swift: A language for distributed parallel scripting", "paper_id": "WOS:000295150400010"}