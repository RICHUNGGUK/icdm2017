{"auto_keywords": [{"score": 0.03311104010653644, "phrase": "simultaneous_startup"}, {"score": 0.010794733908921949, "phrase": "arbitrary_startup"}, {"score": 0.008861011678793083, "phrase": "initial_distance"}, {"score": 0.004786519708868553, "phrase": "distinct_identifiers"}, {"score": 0.004688321299229397, "phrase": "unknown_anonymous_connected_graph"}, {"score": 0.004497899823062428, "phrase": "fast_deterministic_algorithms"}, {"score": 0.004458107800947839, "phrase": "rendezvous_problem"}, {"score": 0.003936461984681817, "phrase": "rendezvous_algorithm"}, {"score": 0.003666159244841419, "phrase": "later_agent"}, {"score": 0.003424492885231787, "phrase": "n-node_tree"}, {"score": 0.003114449258490062, "phrase": "efficient_rendezvous"}, {"score": 0.0030685999966886734, "phrase": "fast_network_exploration"}, {"score": 0.0029263562233195423, "phrase": "simplest_such_network"}, {"score": 0.002629889135655667, "phrase": "rendezvous_cost"}, {"score": 0.0025758208205978825, "phrase": "arbitrary_connected_graphs"}, {"score": 0.002537880772794665, "phrase": "deterministic_rendezvous_algorithm"}, {"score": 0.002522861292947622, "phrase": "cost_polynomial"}, {"score": 0.0024783327548305316, "phrase": "log_l"}, {"score": 0.0024201785622872847, "phrase": "startup_times"}, {"score": 0.0022074054996625886, "phrase": "generic_rendezvous_algorithm"}, {"score": 0.0021748801206355416, "phrase": "connected_graphs"}, {"score": 0.0021049977753042253, "phrase": "bounded_degree"}], "paper_keywords": ["algorithm", " deterministic", " graph", " mobile agent", " rendezvous"], "paper_abstract": "Two mobile agents having distinct identifiers and located in nodes of an unknown anonymous connected graph, have to meet at some node of the graph. We seek fast deterministic algorithms for this rendezvous problem, under two scenarios: simultaneous startup, when both agents start executing the algorithm at the same time, and arbitrary startup, when starting times of the agents are arbitrarily decided by an adversary. The measure of performance of a rendezvous algorithm is its cost: for a given initial location of agents in a graph, this is the number of steps since the startup of the later agent until rendezvous is achieved. We first show that rendezvous can be completed at cost O(n + log l) on any n-node tree, where l is the smaller of the two identifiers, even with arbitrary startup. This complexity of the cost cannot be improved for some trees, even with simultaneous startup. Efficient rendezvous in trees relies on fast network exploration and cannot be used when the graph contains cycles. We further study the simplest such network, i.e., the ring. We prove that, with simultaneous startup, optimal cost of rendezvous on any ring is Theta(D log l), where D is the initial distance between agents. We also establish bounds on rendezvous cost in rings with arbitrary startup. For arbitrary connected graphs, our main contribution is a deterministic rendezvous algorithm with cost polynomial in n, tau and log l, where tau is the difference between startup times of the agents. We also show a lower bound Omega(n(2)) on the cost of rendezvous in some family of graphs. If simultaneous startup is assumed, we construct a generic rendezvous algorithm, working for all connected graphs, which is optimal for the class of graphs of bounded degree, if the initial distance between agents is bounded.", "paper_title": "Deterministic rendezvous in graphs", "paper_id": "WOS:000240060500007"}