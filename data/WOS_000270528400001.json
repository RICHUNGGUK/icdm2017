{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_services"}, {"score": 0.007190247270071991, "phrase": "bpel"}, {"score": 0.004626255242038005, "phrase": "active_research"}, {"score": 0.004484596684703308, "phrase": "industrial_and_theoretical_factors"}, {"score": 0.004289686492089576, "phrase": "design_model"}, {"score": 0.004176813329075736, "phrase": "electronic_business"}, {"score": 0.0039248128268720645, "phrase": "major_formalisms"}, {"score": 0.003838531755488468, "phrase": "distributed_and_cooperative_applications"}, {"score": 0.00378767277402891, "phrase": "open_environment"}, {"score": 0.003404244237372396, "phrase": "interaction_problem"}, {"score": 0.0033442114331500407, "phrase": "interaction_protocol"}, {"score": 0.003299880298525127, "phrase": "web_service"}, {"score": 0.0031703706626348507, "phrase": "appropriate_client"}, {"score": 0.003073154478201771, "phrase": "formal_semantics"}, {"score": 0.0030189426536422577, "phrase": "process_algebra"}, {"score": 0.002689076130099546, "phrase": "design_process"}, {"score": 0.0024600202947311317, "phrase": "uml"}, {"score": 0.0023951660734372877, "phrase": "bpel_model"}, {"score": 0.0023424328921363585, "phrase": "java_code"}, {"score": 0.002321665383971456, "phrase": "jcswl"}, {"score": 0.0021716540012278744, "phrase": "service_development_framework"}, {"score": 0.0021049977753042253, "phrase": "synthetic_way"}], "paper_keywords": ["BPEL", " Formal Semantics", " Interoperability", " Language Expressivity", " Program Synthesis"], "paper_abstract": "Currently, Web services give place to active research and this is due both to industrial and theoretical factors. On one hand, Web services are essential as the design model of applications dedicated to the electronic business. On the other hand, this model aims to become one of the major formalisms for the design of distributed and cooperative applications in an open environment (the Internet). In this article, the authors will focus on two features of Web services. The first one concerns the interaction problem: given the interaction protocol of a Web service described in BPEL, how to generate the appropriate client? Their approach is based on a formal semantics for BPEL via process algebra and yields an algorithm which decides whether such a client exists and synthetize the description of this client as a (timed) automaton. The second one concerns the design process of a service. They propose a method which proceeds by two successive refinements: first the service is described via UML, then refined in a BPEL model and finally enlarged with JAVA code using JCSWL, a new language that we introduce here. Their solutions are integrated in a service development framework that will be presented in a synthetic way.", "paper_title": "An Integrated Framework for Web Services Orchestration", "paper_id": "WOS:000270528400001"}