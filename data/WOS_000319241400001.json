{"auto_keywords": [{"score": 0.041023109667051603, "phrase": "fem"}, {"score": 0.004734448316824488, "phrase": "generalized_finite_element_method"}, {"score": 0.004577440795549049, "phrase": "meshbased_approach"}, {"score": 0.0043029342321223825, "phrase": "unity_method"}, {"score": 0.004022137057452406, "phrase": "conventional_interpolations"}, {"score": 0.0036553070575015344, "phrase": "analyzed_problem"}, {"score": 0.0035141323191390235, "phrase": "gfem"}, {"score": 0.0033218213825698417, "phrase": "fem_computational_environment"}, {"score": 0.0032296377835432533, "phrase": "object-oriented_system"}, {"score": 0.002918394200972564, "phrase": "gfem_formulation"}, {"score": 0.0028695095228791724, "phrase": "minimum_impact"}, {"score": 0.0028214413724451442, "phrase": "code_structure"}, {"score": 0.0025494354909453847, "phrase": "different_kinds"}, {"score": 0.0024926348205500715, "phrase": "analysis_models"}, {"score": 0.002450864311898833, "phrase": "gfem_enrichment_strategies"}, {"score": 0.0024234059612683032, "phrase": "numerical_examples"}, {"score": 0.0023827927890399357, "phrase": "linear_analysis"}, {"score": 0.002264982416465872, "phrase": "code_expansion"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Finite Element Method (FEM)", " Generalized Finite Element Method (GFEM)", " Partition of unity enrichment", " Object-oriented programming (OOP)", " Extended Finite Element Method (XFEM)", " Computational Mechanics"], "paper_abstract": "The Generalized Finite Element Method (GFEM) is a meshbased approach that can be considered as one instance of the Partition of Unity Method (PUM). The partition of unity is provided by conventional interpolations used in the Finite Element Method (FEM) which are extrinsically enriched by other functions specially chosen for the analyzed problem. The similarities and differences between GFEM and FEM are pointed out here to expand a FEM computational environment. Such environment is an object-oriented system that allows linear and non-linear, static and dynamic structural analysis and has an extense finite element library. The aiming is to enclose the GFEM formulation with a minimum impact in the code structure and meet requirements for extensibility and robustness. The implementation proposed here make it possible to combine different kinds of elements and analysis models with the GFEM enrichment strategies. Numerical examples, for linear analysis, are presented in order to demonstrate the code expansion and to illustrate some of the above mentioned combinations. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "An object-oriented approach to the Generalized Finite Element Method", "paper_id": "WOS:000319241400001"}