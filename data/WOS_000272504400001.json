{"auto_keywords": [{"score": 0.036146701610938206, "phrase": "class_diagrams"}, {"score": 0.007538788081788876, "phrase": "uml_class_diagrams"}, {"score": 0.0052899431189214665, "phrase": "pspace"}, {"score": 0.005206550808067, "phrase": "exptime"}, {"score": 0.00481495049065317, "phrase": "restricted_uml_class_diagrams"}, {"score": 0.004590820632326585, "phrase": "visual_specification"}, {"score": 0.004542441734438654, "phrase": "software_systems"}, {"score": 0.004353948887538618, "phrase": "logical_consistency"}, {"score": 0.004173244935967375, "phrase": "tractable_consistency_checking"}, {"score": 0.00385431710959668, "phrase": "first-order_predicate_logic"}, {"score": 0.0035408501923902477, "phrase": "optimized_algorithms"}, {"score": 0.003466536738232506, "phrase": "respective_consistencies"}, {"score": 0.0033937776228549557, "phrase": "different_expressive_powers"}, {"score": 0.003322811372193455, "phrase": "np"}, {"score": 0.0029253546782349875, "phrase": "attribute_value_types"}, {"score": 0.0028487656293168795, "phrase": "consistency_checking"}, {"score": 0.002561892963059385, "phrase": "disjointness_constraints"}, {"score": 0.002365815362517737, "phrase": "completeness_constraints"}, {"score": 0.0021731423856364003, "phrase": "logical_inconsistency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": [""], "paper_abstract": "Automatic debugging of UML class diagrams helps in the visual specification of software systems because users cannot detect errors in logical consistency easily. This study focuses on the tractable consistency checking of UML class diagrams. We accurately identify inconsistencies in these diagrams by translating them into first-order predicate logic that is generalized by counting quantifiers and classify their expressivities by eliminating certain components. We introduce optimized algorithms that compute the respective consistencies of class diagrams of different expressive powers in P, NP, PSPACE, or EXPTIME with respect to the size of the class diagrams. In particular, owing to the restrictions imposed on attribute value types, the complexities of consistency checking of class diagrams decrease from EXPTIME to P and PSPACE in two cases: (i) when the class diagrams contain disjointness constraints and overwriting/multiple inheritances and (ii) when the class diagrams contain both these components along with completeness constraints. Additionally, we confirm the existence of a restriction of class diagrams that prevents any logical inconsistency. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "On the complexities of consistency checking for restricted UML class diagrams", "paper_id": "WOS:000272504400001"}