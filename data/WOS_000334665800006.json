{"auto_keywords": [{"score": 0.04063185478507006, "phrase": "psp"}, {"score": 0.004749824776508639, "phrase": "runtime_analysis"}, {"score": 0.004664352260912174, "phrase": "evolutionary_algorithms"}, {"score": 0.004457309741979921, "phrase": "project_scheduling_problem"}, {"score": 0.004259418153299952, "phrase": "design_choices"}, {"score": 0.004051828608343507, "phrase": "different_eas"}, {"score": 0.003925004567341077, "phrase": "first_runtime_analysis"}, {"score": 0.003584025547693836, "phrase": "specific_instance_classes"}, {"score": 0.0034403745992576808, "phrase": "practical_implications"}, {"score": 0.00330246222643051, "phrase": "improved_ea_design"}, {"score": 0.0032429499567088113, "phrase": "normalizing_employees'_dedication"}, {"score": 0.002947611960613497, "phrase": "clear_gradient"}, {"score": 0.0029209233709517634, "phrase": "feasible_solutions"}, {"score": 0.002548331088496964, "phrase": "best_results"}, {"score": 0.0024572448003065423, "phrase": "key_component"}, {"score": 0.002423931101340771, "phrase": "practical_effectiveness"}, {"score": 0.002391067964886602, "phrase": "new_design"}, {"score": 0.002305589818994465, "phrase": "new_and_effective_algorithm"}, {"score": 0.002213065910356615, "phrase": "rigorous_theoretical_analysis"}, {"score": 0.0021049977753042253, "phrase": "increasingly_large_projects"}], "paper_keywords": ["Schedule and organizational issues", " evolutionary algorithms", " software project scheduling", " software project management", " search-based software engineering", " runtime analysis"], "paper_abstract": "Several variants of evolutionary algorithms (EAs) have been applied to solve the project scheduling problem (PSP), yet their performance highly depends on design choices for the EA. It is still unclear how and why different EAs perform differently. We present the first runtime analysis for the PSP, gaining insights into the performance of EAs on the PSP in general, and on specific instance classes that are easy or hard. Our theoretical analysis has practical implications-based on it, we derive an improved EA design. This includes normalizing employees' dedication for different tasks to ensure they are not working overtime; a fitness function that requires fewer pre-defined parameters and provides a clear gradient towards feasible solutions; and an improved representation and mutation operator. Both our theoretical and empirical results show that our design is very effective. Combining the use of normalization to a population gave the best results in our experiments, and normalization was a key component for the practical effectiveness of the new design. Not only does our paper offer a new and effective algorithm for the PSP, it also provides a rigorous theoretical analysis to explain the efficiency of the algorithm, especially for increasingly large projects.", "paper_title": "Improved Evolutionary Algorithm Design for the Project Scheduling Problem Based on Runtime Analysis", "paper_id": "WOS:000334665800006"}