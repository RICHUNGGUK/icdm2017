{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_behavior"}, {"score": 0.004768378525561471, "phrase": "metamodeled_languages"}, {"score": 0.004722254884093624, "phrase": "language_engineering"}, {"score": 0.004653900688892822, "phrase": "key_factor"}, {"score": 0.004608879242346434, "phrase": "multi-paradigm_modeling"}, {"score": 0.004476414912050776, "phrase": "mpm"}, {"score": 0.004326624385772596, "phrase": "applied_language_engineering_methods"}, {"score": 0.004081385289516914, "phrase": "generic_methods"}, {"score": 0.0040027552011993005, "phrase": "abstract_and_concrete_syntax"}, {"score": 0.0039447744176901054, "phrase": "visual_language"}, {"score": 0.003294875957676514, "phrase": "visual_languages"}, {"score": 0.003018468582368033, "phrase": "animation_support"}, {"score": 0.0029602552900111407, "phrase": "visual_modeling_and_transformation_system"}, {"score": 0.002875027551180213, "phrase": "vmts_animation_framework"}, {"score": 0.0028471655497661528, "phrase": "novel_languages"}, {"score": 0.002672511078070529, "phrase": "existing_approaches"}, {"score": 0.00259554612218815, "phrase": "domain_knowledge"}, {"score": 0.0025578967205807843, "phrase": "animation_description"}, {"score": 0.0025085435314540837, "phrase": "conceptual_and_implementation_level"}, {"score": 0.0024481856932959227, "phrase": "vmts"}, {"score": 0.0024126686412257407, "phrase": "concise_and_systematic_solution"}, {"score": 0.002366110899738696, "phrase": "highly_customizable_animation_framework"}, {"score": 0.0023091721866305426, "phrase": "strong_integration_support"}, {"score": 0.002286781334850213, "phrase": "external_systems"}, {"score": 0.0022536005664642294, "phrase": "simulation_engines"}, {"score": 0.002135995282374723, "phrase": "rather_complex_animation_case_study"}, {"score": 0.0021049977753042253, "phrase": "model_transformation_debugger"}], "paper_keywords": ["modeling and simulation environments", " simulation languages", " simulation system architecture"], "paper_abstract": "Language engineering is a key factor in Multi-Paradigm Modeling (MPM). Since MPM strongly builds on metamodeling, the applied language engineering methods must also be generic enough to support various metamodels. Besides the generic methods to build the abstract and concrete syntax of a visual language, only a few solutions are available to describe the dynamic behavior ('animation') of the models. The aim of this paper is to contribute (i) an event-based conceptual architecture to support animation, (ii) a set of visual languages to describe the animation of the models and their execution. These concepts were used to implement the animation support in our tool called Visual Modeling and Transformation System (VMTS). The VMTS animation framework introduces novel languages to describe certain aspects of animation, while integrating the benefits of the existing approaches. Our solution clearly separates the domain knowledge and the animation description both on a conceptual and implementation level. Thus, the VMTS offers a concise and systematic solution to provide a highly customizable animation framework for metamodeled languages with strong integration support to external systems such as simulation engines. The efficiency of the approach is illustrated with a rather complex animation case study implementing a model transformation debugger.", "paper_title": "Engineering the Dynamic Behavior of Metamodeled Languages", "paper_id": "WOS:000270737600007"}