{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_systems"}, {"score": 0.004726382602809228, "phrase": "sequential_assignment"}, {"score": 0.00418892838079239, "phrase": "task_parallelism"}, {"score": 0.00411182818527434, "phrase": "fine-grained_co-design_specialisation"}, {"score": 0.003712362078915926, "phrase": "distributed_heterogeneous_architectures"}, {"score": 0.0032593915869553714, "phrase": "code_sections"}, {"score": 0.003199345207727474, "phrase": "parallel_tasks"}, {"score": 0.003111336942540226, "phrase": "computational_components"}, {"score": 0.0030257422786589723, "phrase": "optimal_trade-off"}, {"score": 0.0029152570900178956, "phrase": "component_specialism"}, {"score": 0.0028615323526689582, "phrase": "serialisation_delay"}, {"score": 0.0026811531172346676, "phrase": "software_benchmarks"}, {"score": 0.0025355968118803956, "phrase": "formal_implementations"}, {"score": 0.002488851299416018, "phrase": "previous_alternatives"}, {"score": 0.0023537101705489957, "phrase": "linear_programming_approach"}, {"score": 0.0022467024793003812, "phrase": "program_acceleration"}, {"score": 0.0022258906408344973, "phrase": "potential_deliverable"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Parallel partitioning", " Sequential assignment", " Write-Only Architecture", " Heterogeneous computing", " High-performance computing"], "paper_abstract": "This paper introduces a method to combine the advantages of both task parallelism and fine-grained co-design specialisation to achieve faster execution times than either method alone on distributed heterogeneous architectures. The method uses a novel mixed integer linear programming formalisation to assign code sections from parallel tasks to share computational components with the optimal trade-off between acceleration from component specialism and serialisation delay. The paper provides results for software benchmarks partitioned using the method and formal implementations of previous alternatives to demonstrate both the practical tractability of the linear programming approach and the increase in program acceleration potential deliverable. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Parallel partitioning for distributed systems using sequential assignment", "paper_id": "WOS:000314139800009"}