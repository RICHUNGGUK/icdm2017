{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "distributed_policies"}, {"score": 0.00481495049065317, "phrase": "conflict_detection"}, {"score": 0.00428629884026304, "phrase": "system_behaviour"}, {"score": 0.0034804536625952565, "phrase": "novel_formal_semantics"}, {"score": 0.0033548062793973144, "phrase": "appel_language"}, {"score": 0.0032735695963231155, "phrase": "appel"}, {"score": 0.0031942814007173254, "phrase": "informal_semantics"}, {"score": 0.0031360786664165093, "phrase": "recently_defined_formal_semantics"}, {"score": 0.0028084079003212973, "phrase": "temporal_logic"}, {"score": 0.0027403605798830984, "phrase": "global_applications"}, {"score": 0.00259320616168125, "phrase": "system_components"}, {"score": 0.002210903392596343, "phrase": "based_techniques"}, {"score": 0.0021705796895687864, "phrase": "policy_conflict"}, {"score": 0.0021049977753042253, "phrase": "conflict_resolution"}], "paper_keywords": [""], "paper_abstract": "Policies are used to describe rules that are employed to modify (often distributed) system behaviour at runtime. Typically policies are created by many different people and there are many policies leading naturally to inconsistency between the policies, a problem that has been recognised and termed policy conflict. We present a novel formal semantics for distributed policies expressed in the APPEL language (so far APPEL only had an informal semantics and a recently defined formal semantics without distribution of policies). The semantics is expressed in Delta DSTL(x), an extension of temporal logic to deal with global applications: it includes modalities to localize properties to system components, an operator to deal with events, and temporal modalities a la Unity. A further contribution of the paper is the development of semantics based techniques to detect policy conflict and a consideration of conflict resolution.", "paper_title": "Logic-based Conflict Detection for Distributed Policies", "paper_id": "WOS:000262454000007"}