{"auto_keywords": [{"score": 0.030714350356538505, "phrase": "partial_enumeration"}, {"score": 0.009447285784203195, "phrase": "existing_algorithms"}, {"score": 0.00922994057408264, "phrase": "cartesian_products"}, {"score": 0.006481121080973375, "phrase": "exhaustive_enumeration"}, {"score": 0.00481495049065317, "phrase": "lut-based_fpgas"}, {"score": 0.004777569299319633, "phrase": "recent_technology_mappers"}, {"score": 0.004740480457605332, "phrase": "lut"}, {"score": 0.00470369704365227, "phrase": "fpgas"}, {"score": 0.004667149874736771, "phrase": "cut_enumeration"}, {"score": 0.004488734023485018, "phrase": "good_network"}, {"score": 0.004402088928254543, "phrase": "large_size"}, {"score": 0.004233762728640565, "phrase": "bottom-up_mergaing"}, {"score": 0.004135859558144883, "phrase": "fanins'_cuts"}, {"score": 0.002756180088265064, "phrase": "bottom-up_merging"}, {"score": 0.002671406231520296, "phrase": "enumerated_cuts"}, {"score": 0.0026095369186867707, "phrase": "depth-minimum_network"}, {"score": 0.002549096826249, "phrase": "experimental_results"}, {"score": 0.0024418934977061876, "phrase": "existing_bottom-lip_algorithm"}, {"score": 0.002188874450946842, "phrase": "existing_algorithm"}, {"score": 0.0021049977753042253, "phrase": "average_area"}], "paper_keywords": ["FPGA", " technology mapping", " cut enumeration"], "paper_abstract": "Recent technology mappers for LUT based FPGAs employ cut enumeration. Although many cuts are often needed to find a good network, enumerating all the cuts with large size consumes a lot of runtime. Existing algorithms employ the bottom-up mergaing which calculates Cartesian products of the fanins' cuts for each node. The number Of Cuts is much smaller than the size of the Cartesian products in most cases. Thus, the existing algorithms are inefficient. Furthermore, the number of cuts exponentially increases with the size of cuts, that makes the run-time much longer. Several algorithms to enumerate not all the cuts but partial cuts have been presented [8], [9], but they tend to disturb the quality of networks. This paper presents two algorithms to enumerate cuts: an exhaustive enumeration and a partial enumeration. Both of them are efficient because they do not employ the bottom-up merging. The partial enumeration reduces the number of enumerated cuts with a guarantee that a depth-minimum network can be constructed. The experimental results show that the exhaustive enumeration runs about 5 and 13 times faster than the existing bottom-lip algorithm [12] for K = 8, 9 respectively, while keeping the same results. On the other hand, the partial enumeration runs about 9 and 29 times faster than the existing algorithm for K = 8, 9. respectively. The average area of networks derived by the sets of cuts enumerated by the partial enumeration is only 4% larger than that derived with using all the cuts, and the depth is the same.", "paper_title": "Efficient Cut Enumeration Heuristics for Depth-Optimum Technology Mapping for LUT-Based FPGAs", "paper_id": "WOS:000273190700038"}