{"auto_keywords": [{"score": 0.04517806343671265, "phrase": "large_number"}, {"score": 0.031231844729985154, "phrase": "pctmc_model"}, {"score": 0.004860218511356111, "phrase": "time"}, {"score": 0.0047650691627251825, "phrase": "population_models"}, {"score": 0.004715702140552199, "phrase": "cycle-stealing_distributed_system"}, {"score": 0.004634552430216732, "phrase": "research_institutions"}, {"score": 0.0044608829094248985, "phrase": "high-throughput_cycle-stealing_distributed_system"}, {"score": 0.004293693193836074, "phrase": "computing_tasks"}, {"score": 0.004249188865832993, "phrase": "central_pool"}, {"score": 0.00386876598761639, "phrase": "task_execution"}, {"score": 0.0035965032173588753, "phrase": "computing_cycles"}, {"score": 0.0032743220621043023, "phrase": "interactive_users"}, {"score": 0.0032516342542969387, "phrase": "high-throughput_tasks"}, {"score": 0.003217896008931311, "phrase": "pctmc_framework"}, {"score": 0.0031514627590375354, "phrase": "inherently_time-inhomogeneous_nature"}, {"score": 0.0030017207229983385, "phrase": "energy_consumption_metrics"}, {"score": 0.0029295314433077134, "phrase": "real_data"}, {"score": 0.0028590732866152118, "phrase": "cluster_availability"}, {"score": 0.002657677633954843, "phrase": "efficient_fluid_analysis_techniques"}, {"score": 0.0026209522797963447, "phrase": "desired_metrics"}, {"score": 0.002575756583567029, "phrase": "fast_analysis"}, {"score": 0.0024963543716522087, "phrase": "working_implementation"}, {"score": 0.0024447807655923926, "phrase": "existing_gpa_tool"}, {"score": 0.0024109902338204873, "phrase": "pctmc_models"}, {"score": 0.0023285383529595416, "phrase": "system_maintainers"}, {"score": 0.002149418970824546, "phrase": "model_forecasts"}], "paper_keywords": ["Cycle-stealing", " distributed systems", " Continuous time Markov chain", " PCTMC"], "paper_abstract": "Organisations such as research institutions and universities often increase utilisation of their office workstations by deploying a high-throughput cycle-stealing distributed system. Such systems allow users to submit a large number of computing tasks into a central pool. The system observes activity of workstations and continually assigns tasks to idle machines. When a user becomes active on the machine, the scheduler interrupts the task execution. This approach can significantly increase utilisation of the resources. However, it can also lead to wastage of computing cycles if tasks get interrupted too often. In this paper, we develop a detailed Population Continuous Time Markov Chain (PCTMC) model of the whole system that accurately captures the contention between the interactive users and high-throughput tasks. The PCTMC framework is well suited to the inherently time-inhomogeneous nature of the user behaviour and allows to capture a large number of performance and energy consumption metrics. We fit the PCTMC model to real data and propose a methodology to forecast cluster availability in the near future. We show how to use historically collected and live data to parametrise the PCTMC model and use efficient fluid analysis techniques to predict the desired metrics. Additionally, the fast analysis enables exploration of various what-if scenarios. We demonstrate a working implementation of the method using the existing GPA tool for analysis of PCTMC models. We argue that this methodology could allow the system maintainers to optimise the energy and performance parameters of the system. Moreover, it would benefit the users who could use the model forecasts to better distribute and plan their large scale computations.", "paper_title": "Time-inhomogeneous Population Models of a Cycle-Stealing Distributed System", "paper_id": "WOS:000365198300002"}