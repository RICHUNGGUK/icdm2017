{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "performance_traces"}, {"score": 0.004763565662615503, "phrase": "temporal_formulas"}, {"score": 0.0045879792359519375, "phrase": "debugging_performance_problems"}, {"score": 0.004490552331642995, "phrase": "common_case"}, {"score": 0.004301834610818624, "phrase": "performance_problems"}, {"score": 0.0039055990919333082, "phrase": "web_service_providers"}, {"score": 0.0038431888954930083, "phrase": "long-tail_latencies"}, {"score": 0.00366185681714204, "phrase": "user_experience"}, {"score": 0.003470358620464986, "phrase": "long-tail_latency"}, {"score": 0.003378385493203297, "phrase": "fine-grained_traces"}, {"score": 0.0030834712590249863, "phrase": "long_chains"}, {"score": 0.002937879003671346, "phrase": "significant_domain_knowledge"}, {"score": 0.002875391177926809, "phrase": "event_sequences"}, {"score": 0.002695768552609587, "phrase": "linear-temporal_logic"}, {"score": 0.002407941567598653, "phrase": "relevant_information"}, {"score": 0.002209406458446019, "phrase": "long-tail_performance_problems"}, {"score": 0.0021858650388711666, "phrase": "google"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance analysis", " trace matching", " temporal logic", " large-scale online applications", " long-tail latencies"], "paper_abstract": "While profiling is invaluable for debugging performance problems that affect the common case, it is of little help in tracking performance problems that affect the slowest 1% of the operations (i.e., long-tail latencies). For Web service providers, these long-tail latencies affect both the cost of the service and the user experience. Because interactions between operations are often responsible for long-tail latency, we must analyze fine-grained traces to investigate their cause.Unfortunately, analyzing traces is difficult because one needs to reason over long chains of events and because this reasoning often requires significant domain knowledge about what the event sequences mean. This paper shows how we can use formulas in linear-temporal logic to analyze traces. Given these formulas, our system searches through traces to find matches for these formulas and extracts relevant information from the matches. We demonstrate that our system is scalable and enables us to investigate long-tail performance problems at Google. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Analyzing performance traces using temporal formulas", "paper_id": "WOS:000337731000002"}