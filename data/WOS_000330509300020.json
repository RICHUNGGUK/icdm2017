{"auto_keywords": [{"score": 0.04439563634541904, "phrase": "resense"}, {"score": 0.04229912314242766, "phrase": "multithreaded_applications"}, {"score": 0.041959030741870164, "phrase": "dynamic_workloads"}, {"score": 0.03869898982926289, "phrase": "shared_resources"}, {"score": 0.03823143825431689, "phrase": "memory_hierarchy"}, {"score": 0.03170834931407811, "phrase": "resense's_effectiveness"}, {"score": 0.02725549851973045, "phrase": "average_response_time"}, {"score": 0.00481495049065317, "phrase": "colocated_multithreaded_applications"}, {"score": 0.0047747348769918, "phrase": "resource_sensitivity"}, {"score": 0.004675652357253327, "phrase": "full_potential"}, {"score": 0.004636594774238505, "phrase": "modern_chip_multiprocessors"}, {"score": 0.004578616481036476, "phrase": "scalable_performance_improvements"}, {"score": 0.00444612502361583, "phrase": "resource_contention"}, {"score": 0.004390517953424082, "phrase": "multithreaded_workloads"}, {"score": 0.004105435059094972, "phrase": "application_characteristics"}, {"score": 0.003790751492305239, "phrase": "unpredictable_ways"}, {"score": 0.003574364535717202, "phrase": "novel_thread-mapping_algorithm"}, {"score": 0.003398714712611042, "phrase": "precalculated_sensitivity_score"}, {"score": 0.0033561632967173856, "phrase": "sensitivity_score"}, {"score": 0.0033141428467975795, "phrase": "application's_sensitivity"}, {"score": 0.00325893016361821, "phrase": "particular_memory_resource"}, {"score": 0.0031778255332904487, "phrase": "efficient_characterization_process"}, {"score": 0.0031117775337824853, "phrase": "multithreaded_application"}, {"score": 0.0030470980812086247, "phrase": "target_platform"}, {"score": 0.002971249577042111, "phrase": "sensitivity_scores"}, {"score": 0.002309000874224222, "phrase": "native_os"}, {"score": 0.002289667393538803, "phrase": "real_hardware"}, {"score": 0.002204646157481869, "phrase": "optimal_thread_mapping"}, {"score": 0.002131720106846481, "phrase": "maximum_average_difference"}, {"score": 0.0021049977753042253, "phrase": "experimentally_determined_optimal_performance"}], "paper_keywords": ["multicore", " multithreaded applications", " thread mapping", " resource contention", " memory hierarchy"], "paper_abstract": "To utilize the full potential of modern chip multiprocessors and obtain scalable performance improvements, it is critical to mitigate resource contention created by multithreaded workloads. In this article, we describe ReSense, the first runtime system that uses application characteristics to dynamically map multithreaded applications from dynamic workloads-workloads where multithreaded applications arrive, execute, and terminate continuously in unpredictable ways. ReSense mitigates contention for the shared resources in the memory hierarchy by applying a novel thread-mapping algorithm that dynamically adjusts the mapping of threads from dynamic workloads using a precalculated sensitivity score. The sensitivity score quantifies an application's sensitivity to sharing a particular memory resource and is calculated by an efficient characterization process that involves running the multithreaded application by itself on the target platform. To measure ReSense's effectiveness, sensitivity scores were determined for 21 benchmarks from PARSEC-2.1 and NPB-OMP-3.3 for the shared resources in the memory hierarchy on four different platforms. Using three different-sized dynamic workloads composed of randomly selected two, four, and eight corunning benchmarks with randomly selected start times, ReSense was able to improve the average response time of the three workloads by up to 27.03%, 20.89%, and 29.34% and throughput by up to 19.97%, 46.56%, and 29.86%, respectively, over the native OS on real hardware. By estimating and comparing ReSense's effectiveness with the optimal thread mapping for two different workloads, we found that the maximum average difference with the experimentally determined optimal performance was 1.49% for average response time and 2.08% for throughput.", "paper_title": "ReSense: Mapping Dynamic Workloads of Colocated Multithreaded Applications Using Resource Sensitivity", "paper_id": "WOS:000330509300020"}