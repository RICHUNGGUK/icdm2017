{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "consequence_finding"}, {"score": 0.04211974072531176, "phrase": "default_theory"}, {"score": 0.011414951397740307, "phrase": "generating_defaults"}, {"score": 0.00465944657565638, "phrase": "important_technique"}, {"score": 0.004484332781147261, "phrase": "previous_work"}, {"score": 0.004435514622798228, "phrase": "propositional_or_first-order_clausal_theories"}, {"score": 0.0038893838564184107, "phrase": "first-order_clausal_theory"}, {"score": 0.003784328428527216, "phrase": "normal_defaults"}, {"score": 0.0031932442564773468, "phrase": "conditional_answer_format"}, {"score": 0.002877438939246423, "phrase": "query_answering"}, {"score": 0.0027843339377323878, "phrase": "first-order_consequence-finding_procedure"}, {"score": 0.0026942333853202556, "phrase": "default_theories"}, {"score": 0.002508867228980776, "phrase": "large_number"}, {"score": 0.0024815011359381692, "phrase": "irrational_tableaux"}, {"score": 0.002128220632893247, "phrase": "skip_preference"}, {"score": 0.0021049977753042253, "phrase": "complement_checking"}], "paper_keywords": ["consequence finding", " conditional answers", " default theory"], "paper_abstract": "Consequence finding has been recognized as an important technique in many intelligent systems involving inference. In previous work, propositional or first-order clausal theories have been considered for consequence finding. In this paper, we consider consequence finding from a default theory, which consists of a first-order clausal theory and a set of normal defaults. In an extension of a default theory, consequence finding can be done with the generating defaults for the extension. Alternatively, all extensions can be represented at once with the conditional answer format, which represents how a conclusion depends on which defaults. We also propose a procedure for consequence finding and query answering in a default theory using the first-order consequence-finding procedure SOL. In computing consequences from default theories efficiently, the notion of TCS-freeness is most important to prune a large number of irrational tableaux induced by the generating defaults for an extension. In order to simulate the TCS-freeness, the refined SOL calculus called SOL-S(Gamma) is adopted using skip preference and complement checking.", "paper_title": "Consequence finding and computing answers with defaults", "paper_id": "WOS:000236616100004"}