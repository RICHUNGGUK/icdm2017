{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "version_tree"}, {"score": 0.013043667838473761, "phrase": "version-labeling_scheme"}, {"score": 0.0047113960612140335, "phrase": "common_problem"}, {"score": 0.004643594260262632, "phrase": "xml_query_algorithms"}, {"score": 0.004543708337879809, "phrase": "execution_time"}, {"score": 0.004478308876320956, "phrase": "input_size"}, {"score": 0.004256703909255889, "phrase": "xml_document_increases"}, {"score": 0.0035507457285983268, "phrase": "repetitive_structures"}, {"score": 0.0034995881411519925, "phrase": "xml_documents"}, {"score": 0.003115908199991072, "phrase": "twigversion"}, {"score": 0.0029830992938695033, "phrase": "created_version_tree"}, {"score": 0.002897710777957041, "phrase": "final_answer"}, {"score": 0.0026366753045215558, "phrase": "filtering_process"}, {"score": 0.002579847272930948, "phrase": "theoretical_proof"}, {"score": 0.002542642270762272, "phrase": "experimental_results"}, {"score": 0.0023990982005125763, "phrase": "concise_structure"}, {"score": 0.0021987994275190314, "phrase": "existing_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["XML", " query processing", " twig pattern matching", " version-labeling schema", " version tree"], "paper_abstract": "A common problem of XML query algorithms is that execution time and input size grows rapidly as the size of XML document increases. In this paper, we propose a version-labeling scheme and TwigVersion algorithm to address this problem. The version-labeling scheme is utilized to identify all repetitive structures in XML documents, and the Version Tree is constructed to hold such version information. To process a query, TwigVersion generates a filter through the created Version Tree, and the final answer to the query can be retrieved from the database easily through the filtering process. Both theoretical proof and experimental results reported in this paper demonstrate that the concise structure of Version Tree and the reduced input size make TwigVersion outperform the existing approaches. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "XML twig pattern matching using version tree", "paper_id": "WOS:000254115400004"}