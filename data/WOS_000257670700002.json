{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cryptographic_applications"}, {"score": 0.004253618550301311, "phrase": "cryptographic_algorithms"}, {"score": 0.0035461111918923117, "phrase": "general_architecture"}, {"score": 0.003459191419478298, "phrase": "cryptographic_processor"}, {"score": 0.0032916702592724217, "phrase": "elliptic_curve_cryptosystems"}, {"score": 0.0027437235598539904, "phrase": "rom_instruction"}, {"score": 0.0025257081555100556, "phrase": "hardware_complexity"}, {"score": 0.0024842242921857705, "phrase": "efficient_scheduling"}, {"score": 0.002305799666781492, "phrase": "optimum_resource_requirement"}, {"score": 0.002194011800331242, "phrase": "post_place_and_route_results"}, {"score": 0.0021049977753042253, "phrase": "generated_elliptic_curve_processors"}], "paper_keywords": [""], "paper_abstract": "There has been a lot of research in recent years into the implementation of cryptographic algorithms over GF(2(m)), GF(p(m)), p >= 2 and GF(p), p large prime. A general architecture for a cryptographic processor capable of handling operations for elliptic curve cryptosystems and pairings over any field, and the software developed to generate it, is introduced. The processor implements a ROM instruction set to simplify control of the system and reduce hardware complexity. Efficient scheduling of the data is used to determine the optimum resource requirement for the processor. The post place and route results for a number of generated elliptic curve processors are given.", "paper_title": "Versatile processor for GF(p(m)) arithmetic for use in cryptographic applications", "paper_id": "WOS:000257670700002"}