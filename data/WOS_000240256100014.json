{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "boolean_programs"}, {"score": 0.0046361494357125355, "phrase": "convenient_abstractions"}, {"score": 0.004578030096508602, "phrase": "sequential_imperative_programs"}, {"score": 0.004380265418103948, "phrase": "recursive_state_machines"}, {"score": 0.00408654006336477, "phrase": "special_structure"}, {"score": 0.0038608730929994696, "phrase": "modular_visibly_pushdown_automata"}, {"score": 0.003467940281748612, "phrase": "unique_minimal_modular_vpa"}, {"score": 0.003338992028053874, "phrase": "efficient_approximate_minimization_theorem"}, {"score": 0.003095257144856771, "phrase": "minimal_rsm"}, {"score": 0.002980124909321296, "phrase": "maximum_number"}, {"score": 0.002676587673012276, "phrase": "active_learning_algorithm"}, {"score": 0.002609770322855842, "phrase": "minimally_adequate_teacher"}, {"score": 0.002560751416355291, "phrase": "context_free_languages"}, {"score": 0.0024968185204913935, "phrase": "modular_vpas"}, {"score": 0.0023587312574818208, "phrase": "complete_test_suites"}, {"score": 0.0023290951071300433, "phrase": "boolean_program_specifications"}, {"score": 0.002186395051086251, "phrase": "test_generation"}, {"score": 0.0021049977753042253, "phrase": "black-box_boolean_programs"}], "paper_keywords": [""], "paper_abstract": "Boolean programs with recursion are convenient abstractions of sequential imperative programs, and can be represented as recursive state machines (RSMs) or pushdown automata. Motivated by the special structure of RSMs, we define a notion of modular visibly pushdown automata (modular VPA) and show that for the class of languages accepted by such automata, unique minimal modular VPA exist. This yields an efficient approximate minimization theorem that minimizes RSMs to within a factor of k of the minimal RSM, where k is the maximum number of parameters in any module. Using the congruence defined for minimization, we show an active learning algorithm (with a minimally adequate teacher) for context free languages in terms of modular VPAs. We also present an algorithm that constructs complete test suites for Boolean program specifications. Finally, we apply our results on learning and test generation to perform model checking of black-box Boolean programs.", "paper_title": "Minimization, learning, and conformance testing of Boolean programs", "paper_id": "WOS:000240256100014"}