{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uml_conceptual_schemas"}, {"score": 0.04217768298620094, "phrase": "automated_reasoning"}, {"score": 0.04100640177427722, "phrase": "derived_attributes"}, {"score": 0.004779876533667754, "phrase": "derived_information"}, {"score": 0.004524801966077539, "phrase": "software_system"}, {"score": 0.004475436844227947, "phrase": "initial_stages"}, {"score": 0.004267643450023782, "phrase": "conceptual_schema"}, {"score": 0.004205660924155212, "phrase": "user's_requirements"}, {"score": 0.0041294419262414995, "phrase": "main_goal"}, {"score": 0.003995697901740734, "phrase": "uml_schemas"}, {"score": 0.0039665679106594106, "phrase": "arbitrary_constraints"}, {"score": 0.003937649447496154, "phrase": "derived_roles"}, {"score": 0.003754731210715724, "phrase": "ocl_expressions"}, {"score": 0.0036198068824262464, "phrase": "first_order_logic_formalisation"}, {"score": 0.0035671997165370403, "phrase": "existing_reasoning_procedure"}, {"score": 0.0034139056533151, "phrase": "desirable_properties"}, {"score": 0.003303259489028193, "phrase": "highly_expressive_schemas"}, {"score": 0.0029380187414193653, "phrase": "finite_period"}, {"score": 0.002780958897911242, "phrase": "ocl_constraints"}, {"score": 0.002613056713968863, "phrase": "derivation_rules"}, {"score": 0.0025656298638682008, "phrase": "ocl"}, {"score": 0.0024642796422450755, "phrase": "possible_equivalences"}, {"score": 0.0023496433751182162, "phrase": "finite_reasoning"}, {"score": 0.0022077244919858218, "phrase": "previous_work"}], "paper_keywords": ["Automated reasoning", " Conceptual modelling", " UML", " OCL", " Derived attributes and derived roles", " Queries"], "paper_abstract": "Context: It is critical to ensure the quality of a software system in the initial stages of development, and several approaches have been proposed to ensure that a conceptual schema correctly describes the user's requirements. Objective: The main goal of this paper is to perform automated reasoning on UML schemas containing arbitrary constraints, derived roles, derived attributes and queries, all of which must be specified by OCL expressions. Method: The UML/OCL schema is encoded in a first order logic formalisation, and an existing reasoning procedure is used to check whether the schema satisfies a set of desirable properties. Due to the undecidability of reasoning in highly expressive schemas, such as those considered here, we also provide a set of conditions that, if satisfied by the schema, ensure that all properties can be checked in a finite period of time. Results: This paper extends our previous work on reasoning on UML conceptual schemas with OCL constraints by considering derived attributes and roles that can participate in the definition of other constraints, queries and derivation rules. Queries formalised in OCL can also be validated to check their satisfiability and to detect possible equivalences between them. We also provide a set of conditions that ensure finite reasoning when they are satisfied by the schema under consideration. Conclusion: This approach improves upon previous work by allowing automated reasoning for more expressive UML/OCL conceptual schemas than those considered so far. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Automated reasoning on UML conceptual schemas with derived information and queries", "paper_id": "WOS:000321168700001"}