{"auto_keywords": [{"score": 0.039607689734690914, "phrase": "operating_system"}, {"score": 0.015719716506582538, "phrase": "self-stabilizing_operating_systems"}, {"score": 0.003435092524339692, "phrase": "executable_portion"}, {"score": 0.003093054709625219, "phrase": "operating_system_state"}, {"score": 0.002507511169156787, "phrase": "last_approach"}, {"score": 0.0021049977753042253, "phrase": "intel_pentium_processor"}], "paper_keywords": ["self-stabilizing systems", " operating system fault tolerance"], "paper_abstract": "This work presents several approaches for designing self-stabilizing operating systems. The first approach is based on periodical automatic reinstalling of the operating system and restart. The second reinstalls the executable portion of the operating system and uses predicates on the operating system state ( content of variables) to ensure that the operating system does not diverge from its specifications. The last approach presents an example of a tailored self-stabilizing very tiny operating system. Prototypes using the Intel Pentium processor were composed.", "paper_title": "Towards self-stabilizing operating systems", "paper_id": "WOS:000257936500010"}