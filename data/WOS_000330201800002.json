{"auto_keywords": [{"score": 0.032835566680645245, "phrase": "simulink"}, {"score": 0.00481495049065317, "phrase": "real-time_simulink_models"}, {"score": 0.004673290248999786, "phrase": "future_automobiles"}, {"score": 0.004581162468419365, "phrase": "increasing_number"}, {"score": 0.004446349752828045, "phrase": "active_safety"}, {"score": 0.004251500979153001, "phrase": "model-based_design_flow"}, {"score": 0.0040449598280454645, "phrase": "function_models"}, {"score": 0.003774450628400387, "phrase": "flexray"}, {"score": 0.003716520760680603, "phrase": "final_deployed_system"}, {"score": 0.0036250779580069455, "phrase": "software_tasks"}, {"score": 0.0035891316580885665, "phrase": "communication_messages"}, {"score": 0.0035183010916001664, "phrase": "semantics_properties"}, {"score": 0.003397683082821229, "phrase": "deterministic_communication"}, {"score": 0.003281186608301359, "phrase": "distributed_implementations"}, {"score": 0.0029403531729828574, "phrase": "communication_flows"}, {"score": 0.002687922713487696, "phrase": "communication_delays"}, {"score": 0.0025827837420330816, "phrase": "flexray_scheduling_problem"}, {"score": 0.0025317627242523104, "phrase": "optimal_solution"}, {"score": 0.002444883254621769, "phrase": "additional_delays"}, {"score": 0.002408565679880478, "phrase": "flow-preserving_implementation"}, {"score": 0.002337537183727731, "phrase": "aforementioned_scheduling_options"}, {"score": 0.0022799458141165587, "phrase": "x-by-wire_system"}, {"score": 0.0022127018991294047, "phrase": "active-safety_functions"}, {"score": 0.002136747803494932, "phrase": "additional_functional_delays"}], "paper_keywords": ["Design optimization", " Model-based design", " Real-time systems", " Time-triggered networks", " FlexRay"], "paper_abstract": "Future automobiles will support an increasing number of complex, distributed functions such as active safety and X-by-wire. In a model-based design flow, system properties can be verified in advance on function models, by simulation or model checking. To ensure that the properties still hold for the final deployed system, the implementation into software tasks and communication messages should preserve the semantics properties of the model. FlexRay offers deterministic communication and can be used to provide distributed implementations that are provably equivalent to models like those created from Simulink, by designing the schedule to ensure the preservation of communication flows. In some cases, such a schedule is not feasible and the model should be modified by adding communication delays. We provide a formulation of the FlexRay scheduling problem that computes the optimal solution with respect to the number of additional delays when a flow-preserving implementation is not possible. The aforementioned scheduling options are applied to an X-by-wire system and a case study with active-safety functions to highlight tradeoffs between schedulability and additional functional delays. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Optimizing the implementation of real-time Simulink models onto distributed automotive architectures", "paper_id": "WOS:000330201800002"}