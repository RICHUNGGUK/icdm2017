{"auto_keywords": [{"score": 0.05003965534696681, "phrase": "restricted_graph_classes"}, {"score": 0.045672906527448875, "phrase": "np"}, {"score": 0.004738325072560588, "phrase": "graph_isomorphism"}, {"score": 0.0037847308929559163, "phrase": "p._nevertheless"}, {"score": 0.0036067594695368436, "phrase": "gi"}, {"score": 0.0033283624928018177, "phrase": "graph_class"}, {"score": 0.0030962064913500164, "phrase": "gi_use_tools"}, {"score": 0.002615381301695394, "phrase": "isomorphism_testing"}, {"score": 0.0025736694380861604, "phrase": "related_algorithmic_problems"}, {"score": 0.0023369711258107244, "phrase": "new_complexity_bounds"}, {"score": 0.002244876254113051, "phrase": "easier_proofs"}, {"score": 0.002191366809047192, "phrase": "known_results"}, {"score": 0.0021049977753042253, "phrase": "open_questions"}], "paper_keywords": [""], "paper_abstract": "Graph isomorphism (GI) is one of the few remaining problems in NP whose complexity status couldn't be solved by classifying it as being either NP-complete or solvable in P. Nevertheless, efficient (polynomial-time or even NC) algorithms for restricted versions of GI have been found over the last four decades. Depending on the graph class, the design and analysis of algorithms for GI use tools from various fields, such as combinatorics, algebra and logic. In this paper, we collect several complexity results on graph isomorphism testing and related algorithmic problems for restricted graph classes from the literature. Further, we provide some new complexity bounds (as well as easier proofs of some known results) and highlight some open questions.", "paper_title": "On graph isomorphism for restricted graph classes", "paper_id": "WOS:000239424100026"}