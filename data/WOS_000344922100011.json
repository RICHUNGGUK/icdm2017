{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "logical_delays"}, {"score": 0.004739773204474094, "phrase": "dna_computing_systems"}, {"score": 0.004665764181113345, "phrase": "dna_computing"}, {"score": 0.004450568197899267, "phrase": "powerful_devices"}, {"score": 0.004178935413340453, "phrase": "well-mixed_systems"}, {"score": 0.0036553070575015344, "phrase": "generic_delay_gate"}, {"score": 0.00348655247465418, "phrase": "virtually_any_dna_system"}, {"score": 0.0028630535573013686, "phrase": "increasingly_complex_systems"}, {"score": 0.0025638362414466278, "phrase": "vitro_implementations"}, {"score": 0.002445347925313158, "phrase": "theoretical_proof"}, {"score": 0.002242127152093798, "phrase": "existing_dna_module_library"}, {"score": 0.0021049977753042253, "phrase": "new_systems"}], "paper_keywords": ["DNA computing", " Delay mechanism", " Sequentiality", " Concurrency", " DNA toolbox"], "paper_abstract": "DNA computing has the potential to create powerful devices, but, in the context of well-mixed systems, sequentiality of operations is hard to achieve. To enforce such sequentiality, we propose a generic delay gate that can be interfaced with virtually any DNA system. Since it is system-independent, our delay gate can be used as an off-the-shelf library to accelerate the design of increasingly complex systems. Additionally, we checked the feasibility of our design by testing various in vitro implementations. We also present a theoretical proof of concept of its applicability by using it to complement an existing DNA module library, the DNA toolbox, to design new systems.", "paper_title": "Enforcing logical delays in DNA computing systems", "paper_id": "WOS:000344922100011"}