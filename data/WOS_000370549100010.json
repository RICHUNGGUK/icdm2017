{"auto_keywords": [{"score": 0.04953289560992989, "phrase": "extensible_effects"}, {"score": 0.03951821898402551, "phrase": "freer_monads"}, {"score": 0.00481495049065317, "phrase": "rational_reconstruction"}, {"score": 0.004678785623021003, "phrase": "recently_proposed_alternative"}, {"score": 0.00436742595270452, "phrase": "effectful_computations"}, {"score": 0.0042928648367867835, "phrase": "free_monads"}, {"score": 0.004123781267600542, "phrase": "straightforward_term_representation"}, {"score": 0.004053362743156545, "phrase": "effectful_computation"}, {"score": 0.0038492126993451337, "phrase": "generalization_process"}, {"score": 0.0036553070575015344, "phrase": "functor_constraint"}, {"score": 0.0033922781038328844, "phrase": "efficient_type-aligned_data_structure"}, {"score": 0.0032585499655442404, "phrase": "algorithmically_efficient_extensible_effects_library"}, {"score": 0.0030414140732789186, "phrase": "earlier_implementations"}, {"score": 0.0029214769181390653, "phrase": "new_library"}, {"score": 0.002758273619951683, "phrase": "committed_choice"}, {"score": 0.002664749302333897, "phrase": "io_exceptions"}, {"score": 0.002530359917257626, "phrase": "semi-automatic_management"}, {"score": 0.0024305268807926056, "phrase": "monadic_regions"}, {"score": 0.002321234686549485, "phrase": "new_sort"}, {"score": 0.0022168460543913787, "phrase": "left_kan_extension"}], "paper_keywords": ["free monad", " Kan extension", " effect handler", " open union", " type and effect system", " effect interaction", " coroutine"], "paper_abstract": "We present a rational reconstruction of extensible effects, the recently proposed alternative to monad transformers, as the confluence of efforts to make effectful computations compose. Free monads and then extensible effects emerge from the straightforward term representation of an effectful computation, as more and more boilerplate is abstracted away. The generalization process further leads to freer monads, constructed without the Functor constraint. The continuation exposed in freer monads can then be represented as an efficient type-aligned data structure. The end result is the algorithmically efficient extensible effects library, which is not only more comprehensible but also faster than earlier implementations. As an illustration of the new library, we show three surprisingly simple applications: non-determinism with committed choice (LogicT), catching IO exceptions in the presence of other effects, and the semi-automatic management of file handles and other resources through monadic regions. We extensively use and promote the new sort of 'laziness', which underlies the left Kan extension: instead of performing an operation, keep its operands and pretend it is done.", "paper_title": "Freer Monads, More Extensible Effects", "paper_id": "WOS:000370549100010"}