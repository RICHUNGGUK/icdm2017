{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mathematics_software"}, {"score": 0.04465784623726635, "phrase": "computational_tools"}, {"score": 0.03666309084995488, "phrase": "current_mathematics_software"}, {"score": 0.004777917315737992, "phrase": "expert_problem_solving"}, {"score": 0.004741167616693272, "phrase": "computer_algebra_systems"}, {"score": 0.004704699244406775, "phrase": "matrix-based_mathematics_packages"}, {"score": 0.004579244735256393, "phrase": "mathematical_problem"}, {"score": 0.004405779372462873, "phrase": "humancomputer_interaction_community"}, {"score": 0.0042388570312522, "phrase": "expert_problem"}, {"score": 0.004046843083499649, "phrase": "qualitative_study"}, {"score": 0.0039694170761766226, "phrase": "work_practices"}, {"score": 0.00393886140366453, "phrase": "software_use"}, {"score": 0.003702702337768558, "phrase": "new_mathematical_formulations"}, {"score": 0.0033357416981328577, "phrase": "five_primary_factors"}, {"score": 0.003246672441842787, "phrase": "expert_work_practices"}, {"score": 0.003111472132927442, "phrase": "current_software"}, {"score": 0.002993439939273828, "phrase": "clearly_defined_operational_boundaries"}, {"score": 0.0028798723050615788, "phrase": "user's_input"}, {"score": 0.002728059572916527, "phrase": "free-form_two-dimensional_input"}, {"score": 0.0025054621733192283, "phrase": "transcription_problems"}, {"score": 0.0024669814850296146, "phrase": "physical_and_computational_media"}, {"score": 0.002382541887825168, "phrase": "early_stages"}, {"score": 0.002283243905993669, "phrase": "concrete_direction"}, {"score": 0.002265638487492082, "phrase": "future_improvement"}, {"score": 0.0021378442381693847, "phrase": "computational_systems"}, {"score": 0.0021049977753042253, "phrase": "complex_problem"}], "paper_keywords": [""], "paper_abstract": "Computer Algebra Systems and matrix-based mathematics packages provide sophisticated functionality to assist with mathematical problem solving. However, despite their widespread adoption, little work in the humancomputer interaction community has examined the extent to which these computational tools support expert problem solving. In this article, we report findings from a qualitative study comparing and contrasting the work practices and software use of practicing researchers in mathematics and engineering who share the goal of developing and defending new mathematical formulations. Our findings indicate that although computational tools are used by both groups to support their work, current mathematics software plays a relatively minor, somewhat untrusted role in the process. Our data suggest that five primary factors limit the applicability of current mathematics software to expert work practices: (a) a lack of transparency in how current software derives its computed results; (b) the lack of clearly defined operational boundaries indicating whether the system can meaningfully operate on the user's input (whether expressions or data); (c) the need for free-form two-dimensional input to support annotations, diagrams, and in-place manipulation of objects of interest; (d) the potential for transcription problems when switching between physical and computational media; and (e) the need for collaboration, particularly in early stages of problem solving. Each of these issues suggests a concrete direction for future improvement of mathematics software for experts. These findings also have more general implications for the design of computational systems intended to support complex problem solving.", "paper_title": "Challenges and Opportunities for Mathematics Software in Expert Problem Solving", "paper_id": "WOS:000316104700002"}