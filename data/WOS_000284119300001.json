{"auto_keywords": [{"score": 0.04489390169222231, "phrase": "well-defined_semantics"}, {"score": 0.00481495049065317, "phrase": "procedural_modeling"}, {"score": 0.004442032546224076, "phrase": "general_purpose_programming_languages"}, {"score": 0.0043533862892678864, "phrase": "high_descriptive_power"}, {"score": 0.004209539728590977, "phrase": "simple_syntax"}, {"score": 0.003487222504700868, "phrase": "previous_architectural_modeling_languages"}, {"score": 0.0033946556965877873, "phrase": "multiple_types"}, {"score": 0.0033492947290751996, "phrase": "non-terminal_objects"}, {"score": 0.0033045378860812403, "phrase": "domain-specific_operators"}, {"score": 0.0030688220103201836, "phrase": "non-terminal_symbols"}, {"score": 0.0029873281676201565, "phrase": "modeling_rules"}, {"score": 0.0028498718992429825, "phrase": "abstract_structure_templates"}, {"score": 0.002811770047652563, "phrase": "flexible_re-use"}, {"score": 0.0026111116934081284, "phrase": "well-established_programming_language"}, {"score": 0.0025937315311158064, "phrase": "python"}, {"score": 0.0021049977753042253, "phrase": "complex_examples"}], "paper_keywords": ["procedural modeling", " L-Systems", " formal grammars", " architecture", " plants"], "paper_abstract": "We present the new procedural modeling language G(2), which adapts various concepts from general purpose programming languages to provide high descriptive power with well-defined semantics and a simple syntax which is easily readable even by non-programmers. The term 'Generalized' reflects two kinds of generalization. On the one hand, we extend the scope of previous architectural modeling languages by allowing for multiple types of non-terminal objects with domain-specific operators and attributes. On the other hand, the language accepts non-terminal symbols as parameters in modeling rules and thus enables the definition of abstract structure templates for flexible re-use within the grammar. By deriving G(2) from the well-established programming language Python, we can make sure that our modeling language has a well-defined semantics. For illustration, we apply G(2) to architectural as well as plant modeling to demonstrate its descriptive power with some complex examples.", "paper_title": "Generalized Use of Non-Terminal Symbols for Procedural Modeling", "paper_id": "WOS:000284119300001"}