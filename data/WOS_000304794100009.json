{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "procedural_high-level_primitives"}, {"score": 0.0047152877145889656, "phrase": "promising_approach"}, {"score": 0.004522080178250592, "phrase": "split_grammars"}, {"score": 0.004459445258869177, "phrase": "construction_rules"}, {"score": 0.004306610946695577, "phrase": "hierarchical_build-up"}, {"score": 0.004016413965935386, "phrase": "recent_approaches"}, {"score": 0.003919515745050147, "phrase": "basic_split_operations"}, {"score": 0.0037719307016238998, "phrase": "deep_understanding"}, {"score": 0.0036425727071563965, "phrase": "box_splitting"}, {"score": 0.0033265580369717996, "phrase": "trial-and-error_process"}, {"score": 0.0031789521764305287, "phrase": "intuitive_and_interactive_handling"}, {"score": 0.0031568304678554243, "phrase": "complex_procedural_grammars"}, {"score": 0.0031348622158167195, "phrase": "even_amateurs"}, {"score": 0.003048502724695561, "phrase": "existing_procedural_models"}, {"score": 0.002823050755743821, "phrase": "visual_representation"}, {"score": 0.002803398730609738, "phrase": "adjustable_parameters"}, {"score": 0.0027741761880779535, "phrase": "model_space"}, {"score": 0.002641770514171764, "phrase": "procedural_grammar"}, {"score": 0.00256895975568914, "phrase": "camera_views"}, {"score": 0.0025333084852052147, "phrase": "user's_attention"}, {"score": 0.002506894277338543, "phrase": "specific_subset"}, {"score": 0.0024894376091589244, "phrase": "relevant_parameters"}, {"score": 0.002378887754874809, "phrase": "efficient_creation"}, {"score": 0.0021875036343988806, "phrase": "untrained_students"}, {"score": 0.0021646872269755067, "phrase": "modeling_task"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Procedural modeling", " Interactive shape editing", " Shape grammars"], "paper_abstract": "Procedural modeling is a promising approach to create complex and detailed 3D objects and scenes. Based on the concept of split grammars, e.g., construction rules can be defined textually in order to describe a hierarchical build-up of a scene. Unfortunately, creating or even just reading such grammars can become very challenging for non-programmers. Recent approaches have demonstrated ideas to interactively control basic split operations for boxes, however, designers need to have a deep understanding of how to express a certain object by just using box splitting. Moreover, the degrees of freedom of a certain model are typically very high and thus the adjustment of parameters remains more or less a trial-and-error process. In our paper, we therefore present novel concepts for the intuitive and interactive handling of complex procedural grammars allowing even amateurs and non-programmers to easily modify and combine existing procedural models that are not limited to the subdivision of boxes. In our grammar 3D manipulators can be defined in order to spawn a visual representation of adjustable parameters directly in model space to reveal the influence of a parameter. Additionally, modules of the procedural grammar can be associated with a set of camera views which draw the user's attention to a specific subset of relevant parameters and manipulators. All these concepts are encapsulated into procedural high-level primitives that effectively support the efficient creation of complex procedural 3D scenes. Since our target group are mainly users without any experience in 3D modeling, we prove the usability of our system by letting some untrained students perform a modeling task from scratch. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Interactive modeling by procedural high-level primitives", "paper_id": "WOS:000304794100009"}