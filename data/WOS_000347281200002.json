{"auto_keywords": [{"score": 0.049604883316905636, "phrase": "floating-point_computations"}, {"score": 0.04913548507380236, "phrase": "floating-point_arithmetic"}, {"score": 0.00481495049065317, "phrase": "verified_compilation"}, {"score": 0.004167653403322565, "phrase": "formal_reasoning"}, {"score": 0.003848413823574867, "phrase": "final_result"}, {"score": 0.003661382948704217, "phrase": "programming_language"}, {"score": 0.0035183010916001664, "phrase": "compcert_formally-verified_compiler"}, {"score": 0.0032975819773787985, "phrase": "mathematical_specification"}, {"score": 0.0026086775334428617, "phrase": "compcert's_compilation"}, {"score": 0.0025444240825187327, "phrase": "compcert"}, {"score": 0.002481747081849503, "phrase": "coq_proof_assistant"}, {"score": 0.002408565679880478, "phrase": "suitable_coq_formalization"}, {"score": 0.0023143284925318916, "phrase": "flocq_library"}, {"score": 0.0021798257311714665, "phrase": "first_formally_verified_compiler"}, {"score": 0.0021049977753042253, "phrase": "floating-point_programs"}], "paper_keywords": ["Floating-point arithmetic", " Compiler verification", " Semantic preservation", " CompCert", " Coq"], "paper_abstract": "Floating-point arithmetic is known to be tricky: roundings, formats, exceptional values. The IEEE-754 standard was a push towards straightening the field and made formal reasoning about floating-point computations easier and flourishing. Unfortunately, this is not sufficient to guarantee the final result of a program, as several other actors are involved: programming language, compiler, and architecture. The CompCert formally-verified compiler provides a solution to this problem: this compiler comes with a mathematical specification of the semantics of its source language (a large subset of ISO C99) and target platforms (ARM, PowerPC, x86-SSE2), and with a proof that compilation preserves semantics. In this paper, we report on our recent success in formally specifying and proving correct CompCert's compilation of floating-point arithmetic. Since CompCert is verified using the Coq proof assistant, this effort required a suitable Coq formalization of the IEEE-754 standard; we extended the Flocq library for this purpose. As a result, we obtain the first formally verified compiler that provably preserves the semantics of floating-point programs.", "paper_title": "Verified Compilation of Floating-Point Computations", "paper_id": "WOS:000347281200002"}