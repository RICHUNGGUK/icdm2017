{"auto_keywords": [{"score": 0.03765202932216611, "phrase": "reference_points"}, {"score": 0.02588549005184425, "phrase": "tuning_framework"}, {"score": 0.00481495049065317, "phrase": "continuous_online_index_tuning"}, {"score": 0.004776484866276242, "phrase": "object_databases"}, {"score": 0.0047256726869051805, "phrase": "moving_object_database"}, {"score": 0.004431902136795808, "phrase": "traditional_static_indexes"}, {"score": 0.004134137523409649, "phrase": "novel_indexes"}, {"score": 0.003704555230221382, "phrase": "data_space"}, {"score": 0.003645535978986105, "phrase": "different_density"}, {"score": 0.003418681280929931, "phrase": "appropriate_granularity"}, {"score": 0.0033732206350186086, "phrase": "dense_region"}, {"score": 0.0033283624928018146, "phrase": "fine_granularity"}, {"score": 0.003292904448034129, "phrase": "sparse_region"}, {"score": 0.0032491108935498794, "phrase": "coarse_granularity"}, {"score": 0.003154797861869504, "phrase": "workload_diversity"}, {"score": 0.0031045097974912138, "phrase": "online_tuning"}, {"score": 0.003055020877549054, "phrase": "\"multitree\"_indexing_technique"}, {"score": 0.002715349745905368, "phrase": "appropriate_setting"}, {"score": 0.00264356311704594, "phrase": "grid_granularity"}, {"score": 0.0025056190491986943, "phrase": "eager_update_technique"}, {"score": 0.00234324312505334, "phrase": "human_intervention"}, {"score": 0.002299689297293321, "phrase": "regular_functions"}, {"score": 0.002281271842602243, "phrase": "mod."}, {"score": 0.0022090603669919187, "phrase": "extensive_performance_evaluations"}, {"score": 0.0021679951725168565, "phrase": "self-tuning_mechanism"}, {"score": 0.0021219954544970878, "phrase": "workload_changes"}, {"score": 0.0021049977753042253, "phrase": "noticeable_overhead"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Performance", " Data distribution", " index tuning", " location-based services", " moving object indexing", " self-tuning"], "paper_abstract": "In a Moving Object Database (MOD), the dataset, for example, the location of objects and their distribution, and the workload change frequently. Traditional static indexes are not able to cope well with such changes, that is, their effectiveness and efficiency are seriously affected. This calls for the development of novel indexes that can be reconfigured automatically based on the state of the system. In this article, we design and present the ST(2)B-tree, a Self-Tunable Spatio-Temporal B(+)-tree index for MODs. In ST(2)B-tree, the data space is partitioned into regions of different density with respect to a set of reference points. Based on the density, objects in a region are managed using a grid of appropriate granularity; intuitively, a dense region employs a grid with fine granularity, while a sparse region uses a grid with coarse granularity. In this way, the ST(2)B-tree adapts itself to workload diversity in space. To enable online tuning, the ST(2)B-tree employs a \"multitree\" indexing technique. The underlying B(+)-tree is logically divided into two subtrees. Objects are dispatched to either subtree depending on their last update time. The two subtrees are rebuilt periodically and alternately. Whenever a subtree is rebuilt, it is tuned to optimize performance by picking an appropriate setting (e. g., the set of reference points and grid granularity) based on the most recent data and workload. To cut down the overhead of rebuilding, we propose an eager update technique to construct the subtree. Finally, we present a tuning framework for the ST(2)B-tree, where the tuning is conducted online and automatically without human intervention, and without interfering with the regular functions of the MOD. We have implemented the tuning framework and the ST(2)B-tree, and conducted extensive performance evaluations. The results show that the self-tuning mechanism minimizes the degradation of performance caused by workload changes without any noticeable overhead.", "paper_title": "Continuous Online Index Tuning in Moving Object Databases", "paper_id": "WOS:000280544600002"}