{"auto_keywords": [{"score": 0.04336705121455173, "phrase": "querying_problem"}, {"score": 0.00481495049065317, "phrase": "compressed_texts"}, {"score": 0.004637478829869904, "phrase": "computational_complexity"}, {"score": 0.004410938507689426, "phrase": "compressed_input_strings"}, {"score": 0.0031845067058084613, "phrase": "first_input_string"}, {"score": 0.0029909851863915283, "phrase": "second_input_string"}, {"score": 0.0028446460307503343, "phrase": "straight-line_programs"}, {"score": 0.0027054473441439422, "phrase": "text_compression"}, {"score": 0.0023566987138026285, "phrase": "compressed_strings"}, {"score": 0.0022413233627905696, "phrase": "embedding_problem"}], "paper_keywords": [""], "paper_abstract": "The computational complexity of two simple string problems on compressed input strings is considered: the querying problem (What is the symbol at a given position in a given input string?) and the embedding problem (Can the first input string be embedded into the second input string?). Straight-line programs are used for text compression. It is shown that the querying problem becomes P-complete for compressed strings, while the embedding problem becomes hard for the complexity class theta(p)(2).", "paper_title": "Querying and embedding compressed texts", "paper_id": "WOS:000240271700059"}