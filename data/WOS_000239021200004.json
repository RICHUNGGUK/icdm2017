{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "subjective_evaluation"}, {"score": 0.04968898347890439, "phrase": "software_evolvability"}, {"score": 0.04853750751694915, "phrase": "empirical_study"}, {"score": 0.038948090958912586, "phrase": "automatic_program_analysis"}, {"score": 0.027563021111576713, "phrase": "subjective_evaluations"}, {"score": 0.004329124434198367, "phrase": "poorly_evolvable_structures"}, {"score": 0.0041725881174377345, "phrase": "term_software_evolvability"}, {"score": 0.003924121879214595, "phrase": "research_area"}, {"score": 0.003736004578001584, "phrase": "human_evaluations"}, {"score": 0.0036602993802452863, "phrase": "software_evolvability_metrics"}, {"score": 0.0036156119373414067, "phrase": "empirical_component"}, {"score": 0.0035423376631308567, "phrase": "case_study"}, {"score": 0.0034990853199511982, "phrase": "finnish_software_product_company"}, {"score": 0.003145609726536791, "phrase": "code_modules"}, {"score": 0.0030193416820392554, "phrase": "code_evaluation_purposes"}, {"score": 0.0029460197288680864, "phrase": "conflicting_perceptions"}, {"score": 0.002921975748248106, "phrase": "different_evaluators"}, {"score": 0.0027030963394733916, "phrase": "source_code_metrics"}, {"score": 0.002500571634075998, "phrase": "human-based_smell_evaluations"}, {"score": 0.002322689143237591, "phrase": "software_evolvability_improvement"}, {"score": 0.0022477377970612847, "phrase": "code_metrics"}], "paper_keywords": ["code smells", " subjective evaluation", " perceived evaluation", " maintainability", " evolvability", " code metrics", " software metrics", " human factors"], "paper_abstract": "This paper presents the results of an empirical study on the subjective evaluation of code smells that identify poorly evolvable structures in software. We propose use of the term software evolvability to describe the ease of further developing a piece of software and outline the research area based on four different viewpoints. Furthermore, we describe the differences between human evaluations and automatic program analysis based on software evolvability metrics. The empirical component is based on a case study in a Finnish software product company, in which we studied two topics. First, we looked at the effect of the evaluator when subjectively evaluating the existence of smells in code modules. We found that the use of smells for code evaluation purposes can be difficult due to conflicting perceptions of different evaluators. However, the demographics of the evaluators partly explain the variation. Second, we applied selected source code metrics for identifying four smells and compared these results to the subjective evaluations. The metrics based on automatic program analysis and the human-based smell evaluations did not fully correlate. Based upon our results, we suggest that organizations should make decisions regarding software evolvability improvement based on a combination of subjective evaluations and code metrics. Due to the limitations of the study we also recognize the need for conducting more refined studies and experiments in the area of software evolvability.", "paper_title": "Subjective evaluation of software evolvability using code smells: An empirical study", "paper_id": "WOS:000239021200004"}