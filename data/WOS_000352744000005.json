{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multilevel_paramils"}, {"score": 0.049378038061471535, "phrase": "transportation_planning_problems"}, {"score": 0.04891621500316524, "phrase": "underlying_weighted_networks"}, {"score": 0.04409969247376604, "phrase": "parameter_combinations"}, {"score": 0.04011643449782753, "phrase": "graph_coarsening_method"}, {"score": 0.026090711756349416, "phrase": "computing_time"}, {"score": 0.02522607067724401, "phrase": "mparamils"}, {"score": 0.00462919213721188, "phrase": "parameter_settings"}, {"score": 0.004583878086896926, "phrase": "ant_colony_optimisation"}, {"score": 0.004539056156395479, "phrase": "aco"}, {"score": 0.004494570360108983, "phrase": "based_algorithms"}, {"score": 0.004428728205625129, "phrase": "challenging_and_time_consuming_task"}, {"score": 0.004257806363128601, "phrase": "large_number"}, {"score": 0.00376488621224566, "phrase": "paramils_framework"}, {"score": 0.0036373553416391823, "phrase": "aco_algorithms"}, {"score": 0.003496868378204657, "phrase": "essential_idea"}, {"score": 0.0032800186243040663, "phrase": "increasingly_coarser_level_problems"}, {"score": 0.0032319109979344184, "phrase": "original_problem"}, {"score": 0.003091767402370757, "phrase": "coarser_level_problems"}, {"score": 0.0030464123943266673, "phrase": "high-quality_settings"}, {"score": 0.0030017207229983385, "phrase": "parameter_combination_domain"}, {"score": 0.002943147037670826, "phrase": "coarsest_level"}, {"score": 0.0027605398374811667, "phrase": "low-quality_settings"}, {"score": 0.0027200309544242653, "phrase": "paramils."}, {"score": 0.0026538282523433684, "phrase": "combination_domain"}, {"score": 0.0025014259919355453, "phrase": "finer_level_problems"}, {"score": 0.002323142666222693, "phrase": "paramils._experimental_results"}, {"score": 0.0022443390559699974, "phrase": "solution_quality"}, {"score": 0.0022223176391038785, "phrase": "significant_reduction"}, {"score": 0.0021682027434117095, "phrase": "test_cases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["ACO Metaheuristics", " Graph coarsening", " Multilevel technique", " Automatic configuration", " Online tuning"], "paper_abstract": "Configuring parameter settings for ant colony optimisation (ACO) based algorithms is a challenging and time consuming task, because it usually requires evaluating a large number of parameter combinations to find the most appropriate setting. In this study, a multilevel ParamILS (MParamILS) technique, that combines a graph coarsening method and the ParamILS framework, has been developed for configuring ACO algorithms to solve transportation planning problems with underlying weighted networks. The essential idea is to first use the graph coarsening method to recursively produce a set of increasingly coarser level problems from the original problem, and then apply ParamILS sequentially to the coarser level problems to select high-quality settings from a parameter combination domain. From the coarsest level to the finest (original) level problem, the parameter domain is refined by removing the low-quality settings identified by ParamILS. The size of the combination domain continues to decrease, resulting in fewer number of parameter combinations evaluated at finer level problems, hence the computing time is reduced. The performance of MParamILS was compared with ParamILS. Experimental results showed that MParamILS matches ParamILS in solution quality with significant reduction in computing time for all test cases. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Automatically configuring ACO using multilevel ParamILS to solve transportation planning problems with underlying weighted networks", "paper_id": "WOS:000352744000005"}