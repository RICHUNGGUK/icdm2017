{"auto_keywords": [{"score": 0.04632404183188945, "phrase": "lagrangian"}, {"score": 0.015262486165395377, "phrase": "mathematica"}, {"score": 0.014301847900976125, "phrase": "feynman_rules"}, {"score": 0.008536860153795777, "phrase": "feynrules"}, {"score": 0.007256767675184676, "phrase": "sherpa"}, {"score": 0.00712682807674054, "phrase": "new_model"}, {"score": 0.005921468178741573, "phrase": "distributed_program"}, {"score": 0.00588144038031875, "phrase": "test_data"}, {"score": 0.00481495049065317, "phrase": "feynrules_-_feynman_rules"}, {"score": 0.0046018264570209765, "phrase": "new_particle_physics_models"}, {"score": 0.004529473241633146, "phrase": "basic_model_information"}, {"score": 0.004319138558590907, "phrase": "generic_form"}, {"score": 0.004260849402060646, "phrase": "feynman_diagram_calculation_program"}, {"score": 0.00412786960717194, "phrase": "particular_feynman_diagram_calculator"}, {"score": 0.004109212945115815, "phrase": "feynrules_translation_interfaces"}, {"score": 0.0037109446302945903, "phrase": "feymman_rules"}, {"score": 0.003677461652193148, "phrase": "generic_translation_interface"}, {"score": 0.003636030901063731, "phrase": "new_translation_interface"}, {"score": 0.0035626240654214932, "phrase": "feynrules_code"}, {"score": 0.0035309695411048364, "phrase": "program"}, {"score": 0.0035065523764817143, "phrase": "feynrules_catalogue"}, {"score": 0.0034124679487298015, "phrase": "cpc_program_library"}, {"score": 0.0033970336459232834, "phrase": "queen's_university"}, {"score": 0.0033816690399811307, "phrase": "belfast"}, {"score": 0.003366373442347012, "phrase": "n._ireland"}, {"score": 0.003335989038630716, "phrase": "standard_cpc"}, {"score": 0.0030467824582741557, "phrase": "mathematica_computer"}, {"score": 0.0029920129598858545, "phrase": "operating_system"}, {"score": 0.002938225105993372, "phrase": "available_classification"}, {"score": 0.0028015750912786393, "phrase": "new_models"}, {"score": 0.0027888960728486415, "phrase": "monte_carlo_event_generators"}, {"score": 0.002647136220577337, "phrase": "canonical_commutation_relations"}, {"score": 0.0026232264620319476, "phrase": "creation_operators"}, {"score": 0.0025819015229390663, "phrase": "new_physics_model"}, {"score": 0.0025412259366265925, "phrase": "monte_carlo"}, {"score": 0.0024785947526160296, "phrase": "basic_qft_requirements"}, {"score": 0.002456425584064439, "phrase": "lorentz"}, {"score": 0.002445083752403236, "phrase": "gauge_invariance"}, {"score": 0.0023632704094952678, "phrase": "unusual_features"}, {"score": 0.002315499273261681, "phrase": "maclgraph"}, {"score": 0.0022686915865954677, "phrase": "running_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model building", " Model implementation", " Feynman rules", " Feynman diagram calculators", " Monte Carlo programs"], "paper_abstract": "In this paper we present FeynRules, a new Mathematica package that facilitates the implementation of new particle physics models. After the user implements the basic model information (e.g., particle content, parameters and Lagrangian), FeynRules derives the Feynman rules and stores them in a generic form suitable for translation to any Feynman diagram calculation program. The model can then be translated to the format specific to a particular Feynman diagram calculator via FeynRules translation interfaces. Such interfaces have been written for CalcHEP/CompHER FeynArts/FormCalc. MadGraph/MadEvent and Sherpa, making it possible to write a new model once and have it work in all of these programs. In this paper, we describe how to implement a new model, generate the Feymman rules, use a generic translation interface, and write a new translation interface. We also discuss the details of the FeynRules code. Program summary Program title: FeynRules Catalogue identifier: AEDI_v1_0 Program summary URL:: http://cpc.cs.qub.ac.uk/summaries/AEDI-v1-0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 15980 No. of bytes in distributed program, including test data, etc.: 137 383 Distribution format: tar.gz Programming language: Mathematica Computer: Platforms on which Mathematica is available Operating system: Operating systems on which Mathematica is available Classification: 11.1. 11.2, 11.6 Nature of problem: Automatic derivation of Feynman rules from a Lagrangian. Implementation of new models into Monte Carlo event generators and FeynArts. Solution method: FeynRules works in two steps: 1. derivation of the Feynman rules directly form the Lagrangian using canonical commutation relations among fields and creation operators. 2. implementation of the new physics model into FeynArts as well as various Monte Carlo programs via interfaces. Restrictions: The Lagrangian must fulfill basic QFT requirements, such as Lorentz and gauge invariance. Only fields with spin 0, 1/2, 1 and 2 are implemented. Unusual features: Translation interfaces to FeynArts, CalcHEP/CompHEP, MaclGraph and Sherpa exist. Running time: The running time depends on the complexity of the Lagrangian, and varies from seconds (Standard Model) to minutes (more complicated models. like the 3-Site Model). (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "FeynRules - Feynman rules made easy", "paper_id": "WOS:000270320400022"}