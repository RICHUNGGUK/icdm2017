{"auto_keywords": [{"score": 0.04140047268967764, "phrase": "javascript"}, {"score": 0.00481495049065317, "phrase": "mobile_offloading_system"}, {"score": 0.0047761092701293474, "phrase": "web-centric_devices"}, {"score": 0.00453113241842654, "phrase": "personal_computing_environment"}, {"score": 0.00436890075128947, "phrase": "mobile_applications_increases"}, {"score": 0.0043161190928529755, "phrase": "target_mobile_platform"}, {"score": 0.004263972370406983, "phrase": "primary_concern"}, {"score": 0.004229556887896042, "phrase": "mobile_application_developers"}, {"score": 0.004161553532799662, "phrase": "design_complexity"}, {"score": 0.00412796126884884, "phrase": "different_platforms"}, {"score": 0.0038375280115736958, "phrase": "main_target_framework"}, {"score": 0.003806541299696042, "phrase": "smartphone_applications"}, {"score": 0.003685067218455088, "phrase": "power_supply"}, {"score": 0.0036553070575015344, "phrase": "low-end_hardware_resources"}, {"score": 0.0035965032173588753, "phrase": "high-end_servers"}, {"score": 0.0035530197642369464, "phrase": "-intensive_and_rich_graphics-based_applications"}, {"score": 0.003384262486955773, "phrase": "large_amount"}, {"score": 0.0033433365160336842, "phrase": "battery_power"}, {"score": 0.003210446135114967, "phrase": "platform-independent_mobile_offloading_system"}, {"score": 0.0031459887611258765, "phrase": "delegated_system"}, {"score": 0.003107935254560724, "phrase": "web_centric_devices_environment"}, {"score": 0.0030455297429878873, "phrase": "built-in_proxy_system"}, {"score": 0.0029965060407413898, "phrase": "original_javascript-based_application_codes"}, {"score": 0.0028541057064952876, "phrase": "mobile_client"}, {"score": 0.0028195727965553367, "phrase": "computationally_heavy_code"}, {"score": 0.002762941385784905, "phrase": "server_system"}, {"score": 0.002685558057339722, "phrase": "web_applications"}, {"score": 0.0026530590435527527, "phrase": "combinatory_search"}, {"score": 0.002547535564922075, "phrase": "response_time"}, {"score": 0.0024761702541879213, "phrase": "web_browser"}, {"score": 0.002436289099444074, "phrase": "high_workload_application"}, {"score": 0.0023970487263732737, "phrase": "relatively_low-end"}, {"score": 0.0023016843709107297, "phrase": "power_consumption"}, {"score": 0.0022281257694320455, "phrase": "web-based_offloading_architecture"}, {"score": 0.0022011501095573747, "phrase": "new_mobile_computing_environment"}, {"score": 0.0021569129153653777, "phrase": "mobile_clients"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Offloading", " Mobile device", " JavaScript", " Power saving", " Platform-independent"], "paper_abstract": "Increasingly, smartphones are becoming one of the most popular mobile devices in the personal computing environment. As the need for a variety of mobile applications increases, the target mobile platform is a primary concern for mobile application developers. To reduce design complexity for different platforms and enhance the compatibility of applications on various mobile OSes, a JavaScript-based web environment became a main target framework for smartphone applications. Two particular characteristics of a smartphone are restricted power supply and low-end hardware resources, compared to high-end servers. Computing-intensive and rich graphics-based applications in a smartphone may fully utilize the CPU and consume a large amount of the battery power accordingly. In this paper, we propose a platform-independent mobile offloading system, which is a delegated system for a web centric devices environment. Our offloading architecture uses a built-in proxy system that splits the original JavaScript-based application codes into the following two parts: a lightweight code for the mobile client and a computationally heavy code that runs on the server system. We adopt one of the web applications utilizing a combinatory search for our case study. Our evaluation shows that our mobile offloading system reduces the response time of the application running in the web browser and enables a high workload application to run on relatively low-end mobile devices. In addition, this method reduces power consumption of the device. Therefore, this web-based offloading architecture creates a new mobile computing environment and supports various OS platforms of mobile clients. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Design and evaluation of mobile offloading system for web-centric devices", "paper_id": "WOS:000334002900010"}