{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "error_correction_code"}, {"score": 0.01190375593313178, "phrase": "parity_chain"}, {"score": 0.004283576270012874, "phrase": "instruction_level"}, {"score": 0.004024485331377682, "phrase": "real_time"}, {"score": 0.003443031148055198, "phrase": "run_time"}, {"score": 0.0031351720217878917, "phrase": "digital_communication_system"}, {"score": 0.0030387767523076528, "phrase": "integrity_checker"}, {"score": 0.0028996963188373144, "phrase": "error-detector_module"}, {"score": 0.002619748321217153, "phrase": "general_processor"}, {"score": 0.0024418934977061876, "phrase": "processor_core"}, {"score": 0.002385326947545194, "phrase": "instruction_memory"}, {"score": 0.002171836484200008, "phrase": "faster_check_speed"}, {"score": 0.0021049977753042253, "phrase": "smaller_area"}], "paper_keywords": ["secure processor", " security", " instruction", " correlation", " chain"], "paper_abstract": "In this paper, we present a processor that detects security-attacks at the instruction level by checking the integrity of instructions in real time. To confirm the integrity of the instructions, we generate a parity chain of instructions and check them at run time. The parity chain is generated using an error correction code used in a digital communication system, and the integrity checker has the same function as the error-detector module of the error correction code. This architecture can readily be applied to a general processor, because the checker is located between the processor core and the instruction memory. Compared with other cipher modules with the same key space, our instruction integrity checker achieves a faster check speed and occupies a smaller area.", "paper_title": "Instruction-level Real-time Secure Processor Using an Error Correction Code", "paper_id": "WOS:000360171500002"}