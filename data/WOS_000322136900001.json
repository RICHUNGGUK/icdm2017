{"auto_keywords": [{"score": 0.04934325842114906, "phrase": "subject_matter_experts"}, {"score": 0.00481495049065317, "phrase": "process_models"}, {"score": 0.004410248125081398, "phrase": "knowledge_engineers"}, {"score": 0.004102528738941734, "phrase": "underlying_knowledge_representation"}, {"score": 0.003816197777388722, "phrase": "sme-authored_models"}, {"score": 0.0035866734383189396, "phrase": "complex_knowledge_types"}, {"score": 0.003459191419478298, "phrase": "frame_management"}, {"score": 0.0031354779851351287, "phrase": "sme-authored_process_models"}, {"score": 0.0030396665931462, "phrase": "operational_semantics"}, {"score": 0.0029620573986902416, "phrase": "knowledge_representation_language"}, {"score": 0.0028864239961184364, "phrase": "process-related_reasoning"}, {"score": 0.002841971477743441, "phrase": "main_results"}, {"score": 0.002726740692380339, "phrase": "process_representation"}, {"score": 0.0026297428083782875, "phrase": "process_diagrams"}, {"score": 0.0026026666736474404, "phrase": "executable_code"}, {"score": 0.0022399174232611853, "phrase": "code_generation_mechanism"}, {"score": 0.0022053994402287925, "phrase": "performance_improvement"}, {"score": 0.0021826828321952615, "phrase": "reasoning_time"}, {"score": 0.0021049977753042253, "phrase": "base_case"}], "paper_keywords": ["Process knowledge representation", " reasoning", " subject matter experts"], "paper_abstract": "Enabling Subject Matter Experts (SMEs) to formulate knowledge without the intervention of Knowledge Engineers (KEs) requires providing SMEs with methods and tools that abstract the underlying knowledge representation and allow them to focus on modeling activities. Bridging the gap between SME-authored models and their representation is challenging, especially in the case of complex knowledge types like processes, where aspects like frame management, data, and control flow need to be addressed. In this paper, we describe how SME-authored process models can be provided with an operational semantics and grounded in a knowledge representation language like F-logic to support process-related reasoning. The main results of this work include a formalism for process representation and a mechanism for automatically translating process diagrams into executable code following such formalism. From all the process models authored by SMEs during evaluation 82 percent were well formed, all of which executed correctly. Additionally, the two optimizations applied to the code generation mechanism produced a performance improvement at reasoning time of 25 and 30 percent with respect to the base case, respectively.", "paper_title": "A Formalism and Method for Representing and Reasoning with Process Models Authored by Subject Matter Experts", "paper_id": "WOS:000322136900001"}