{"auto_keywords": [{"score": 0.02379615631833569, "phrase": "charm"}, {"score": 0.00481495049065317, "phrase": "dbv-miner"}, {"score": 0.004659108142668152, "phrase": "fast_mining_frequent_closed_itemsets"}, {"score": 0.004547627035954608, "phrase": "fci"}, {"score": 0.00449183202322304, "phrase": "important_role"}, {"score": 0.004442824994700736, "phrase": "redundant_rules"}, {"score": 0.0041445748748895365, "phrase": "vertical_data_formats"}, {"score": 0.004025040955430234, "phrase": "scan_databases"}, {"score": 0.0035802796531956413, "phrase": "fixed_size"}, {"score": 0.0035584349194277246, "phrase": "bit-vector"}, {"score": 0.003291188255149539, "phrase": "storage_bit-vectors"}, {"score": 0.003188331795385573, "phrase": "bit-vectors"}, {"score": 0.0030925761790620027, "phrase": "mining_frequent_itemsets"}, {"score": 0.002905914725757534, "phrase": "new_method"}, {"score": 0.002853183476661506, "phrase": "transaction_databases"}, {"score": 0.0026419338604879404, "phrase": "lookup_table"}, {"score": 0.0026035011274172753, "phrase": "fast_computing"}, {"score": 0.0024462867877027435, "phrase": "memory_and_computing_time_saving"}, {"score": 0.0023324855762635616, "phrase": "subsumption_concept"}, {"score": 0.002306982970571251, "phrase": "frequent_closed_itemsets"}, {"score": 0.0021835829960683666, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "memory_usage"}], "paper_keywords": ["BitTable", " Data mining", " Dynamic Bit-Vector", " Frequent closed itemsets", " Vertical data format"], "paper_abstract": "Frequent closed itemsets (FCI) play an important role in pruning redundant rules fast. Therefore, a lot of algorithms for mining FCI have been developed. Algorithms based on vertical data formats have some advantages in that they require scan databases once and compute the support of itemsets fast. Recent years, BitTable (Dong & Han, 2007) and IndexBitTable (Song, Yang, & Xu, 2008) approaches have been applied for mining frequent itemsets and results are significant. However, they always use a fixed size of Bit-Vector for each item (equal to number of transactions in a database). It leads to consume more memory for storage Bit-Vectors and the time for computing the intersection among Bit-Vectors. Besides, they only apply for mining frequent itemsets, algorithm for mining FCI based on BitTable is not proposed. This paper introduces a new method for mining FCI from transaction databases. Firstly, Dynamic Bit-Vector (DBV) approach will be presented and algorithms for fast computing the intersection between two DBVs are also proposed. Lookup table is used for fast computing the support (number of bits 1 in a DBV) of itemsets. Next, subsumption concept for memory and computing time saving will be discussed. Finally, an algorithm based on DBV and subsumption concept for mining frequent closed itemsets fast is proposed. We compare our method with CHARM, and recognize that the proposed algorithm is more efficient than CHARM in both the mining time and the memory usage. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "DBV-Miner: A Dynamic Bit-Vector approach for fast mining frequent closed itemsets", "paper_id": "WOS:000302032600055"}