{"auto_keywords": [{"score": 0.0448395938122121, "phrase": "variable_alignment"}, {"score": 0.043613810062513775, "phrase": "page_accesses"}, {"score": 0.035390175177212886, "phrase": "burst_accesses"}, {"score": 0.00481495049065317, "phrase": "embedded_system_design"}, {"score": 0.004661116930794176, "phrase": "dram_storage_assignment_problems"}, {"score": 0.0037398806676032068, "phrase": "temporal_locality"}, {"score": 0.003712964709503484, "phrase": "variables'_accesses"}, {"score": 0.0032601856292942106, "phrase": "ilp_formulation"}, {"score": 0.0029041492019217033, "phrase": "existing_techniques"}, {"score": 0.002811191663575046, "phrase": "almost_the_same_or_slightly_improved_results"}, {"score": 0.002158979137177815, "phrase": "experimental_data"}, {"score": 0.0021049977753042253, "phrase": "proposed_techniques"}], "paper_keywords": ["embedded system design", " memory access", " design optimization"], "paper_abstract": "In this paper, we address the DRAM storage assignment problems of variables with an objective of maximizing the number of page/burst mode accesses. Specifically, (1) we solve the problem of variable alignment to memory for maximizing the use of page accesses by proposing a technique, called zone-alignment, which is based on the combination of an efficient 0-1 ILP (integer linear programming) formulation and the utilization of temporal locality of variables' accesses in code and (2) the approach used in (1) is then applied to solve the problem of variable alignment for maximizing the use of burst accesses. Surprisingly, the execution of the ILP formulation used in (2) is relatively much faster than that used in (1) and nevertheless, the (optimal) formulation in (2) produces much better results than that by the existing techniques whereas the (optimal) formulation in (1) produces almost the same or slightly improved results, indicating that the problem with page accesses and the problem with burst accesses must be treated completely separately. (3) Finally, by utilizing the techniques in (1) and (2), we propose solutions to two extended DRAM architectures: (a) DRAMs with the capability of both of page and burst access modes and (b) DRAMs with. multiple banks. We provide a set of experimental data to show the effectiveness of the proposed techniques.", "paper_title": "Memory access driven storage assignment for variables in embedded system design", "paper_id": "WOS:000240112800001"}