{"auto_keywords": [{"score": 0.04237837559550074, "phrase": "sb"}, {"score": 0.014456349399901867, "phrase": "gang_scheduling"}, {"score": 0.010179823595587726, "phrase": "blocking-based_coscheduling_techniques"}, {"score": 0.009835466466735368, "phrase": "hybrid"}, {"score": 0.00481495049065317, "phrase": "in-depth_evaluation"}, {"score": 0.004743594110762319, "phrase": "broad_spectrum"}, {"score": 0.004696608876994947, "phrase": "scheduling_alternatives"}, {"score": 0.0045357787854931894, "phrase": "widely_used_batch_scheduling"}, {"score": 0.0040854526743211396, "phrase": "spin_block"}, {"score": 0.003448865817533186, "phrase": "llnl"}, {"score": 0.0034146623738332666, "phrase": "anl"}, {"score": 0.003347259612209552, "phrase": "linux_cluster"}, {"score": 0.0032324864013225166, "phrase": "batch_scheduling"}, {"score": 0.003029752974528883, "phrase": "cc"}, {"score": 0.0028536871476905847, "phrase": "dedicated_cluster_platform"}, {"score": 0.0027148677103585985, "phrase": "prior_studies"}, {"score": 0.0026480044868438875, "phrase": "blocking-based_schemes"}, {"score": 0.0025571463140118805, "phrase": "better_performance"}, {"score": 0.0025317627242523104, "phrase": "spin-based_techniques"}, {"score": 0.0025068266635028605, "phrase": "pb"}, {"score": 0.0024693979425773993, "phrase": "linux_platform"}, {"score": 0.002408565679880478, "phrase": "proposed_hybrid_scheduling"}, {"score": 0.0023727863021828547, "phrase": "best_performance-energy_behavior"}, {"score": 0.0021049977753042253, "phrase": "significant_performance-energy_benefits"}], "paper_keywords": ["coscheduling", " Linux cluster", " Myrinet", " batch scheduling", " gang scheduling", " energy consumption"], "paper_abstract": "In this paper, we conduct an in-depth evaluation of a broad spectrum of scheduling alternatives for clusters. These include the widely used batch scheduling, local scheduling, gang scheduling, most prior communication-driven coscheduling algorithms-Dynamic Coscheduling (DCS), Spin Block (SB), Periodic Boost (PB), and Co-ordinated Coscheduling (CC)-and a newly proposed HYBRID coscheduling algorithm on a 16-node, Myrinet-connected Linux cluster. Performance and energy measurements using several NAS, LLNL and ANL benchmarks on the Linux cluster provide several conclusions. First, although batch scheduling is currently used in most clusters, the blocking-based coscheduling techniques such as SB, CC and HYBRID and the gang scheduling can provide much better performance even in a dedicated cluster platform. Second, in contrast to some of the prior studies, we observe that blocking-based schemes like SB and HYBRID can provide better performance than spin-based techniques like PB on a Linux platform. Third, the proposed HYBRID scheduling provides the best performance-energy behavior and can be implemented on any cluster with little effort. All these results suggest that blocking-based coscheduling techniques are viable candidates to be used in clusters for significant performance-energy benefits.", "paper_title": "A comprehensive performance and energy consumption analysis of scheduling alternatives in clusters", "paper_id": "WOS:000245559800003"}