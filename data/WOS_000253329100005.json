{"auto_keywords": [{"score": 0.0469881015287906, "phrase": "logic_programming"}, {"score": 0.00481495049065317, "phrase": "prolog_interface"}, {"score": 0.004626255242038005, "phrase": "minisat_satisfiability_solver"}, {"score": 0.00378767277402891, "phrase": "encoding_search_problems"}, {"score": 0.003449972561293443, "phrase": "efficient_sat"}, {"score": 0.002900426826591769, "phrase": "programming_paradigm"}, {"score": 0.002641621667026613, "phrase": "logic_programming_pearl"}, {"score": 0.002250415129116109, "phrase": "example_prolog_program"}, {"score": 0.0021049977753042253, "phrase": "partial_maxsat."}], "paper_keywords": ["propositional logic", " Boolean satisfiability", " SAT solvers"], "paper_abstract": "This paper presents a Prolog interface to the MiniSat satisfiability solver. Logic programming with satisfiability combines the strengths of the two paradigms: logic programming for encoding search problems into satisfiability on the one hand and efficient SAT solving on the other. This synergy between these two exposes a programming paradigm that we propose here as a logic programming pearl. To illustrate logic programming with SAT solving, we give an example Prolog program that solves instances of Partial MAXSAT.", "paper_title": "Logic programming with satisfiability", "paper_id": "WOS:000253329100005"}