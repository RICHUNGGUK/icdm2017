{"auto_keywords": [{"score": 0.049781331549484456, "phrase": "environmental_simulation_models"}, {"score": 0.03801627128563982, "phrase": "parameter_bounds"}, {"score": 0.031231446495867378, "phrase": "selected_optimizers"}, {"score": 0.00481495049065317, "phrase": "improved_parameter_estimation"}, {"score": 0.004594951819987416, "phrase": "simulated_output"}, {"score": 0.004566384853664753, "phrase": "observed_data"}, {"score": 0.004537994679433309, "phrase": "heuristic_global_search_algorithms"}, {"score": 0.004495738533629062, "phrase": "popular_choice"}, {"score": 0.004398657974555281, "phrase": "lackluster_results"}, {"score": 0.004371306014298804, "phrase": "computational_budgets"}, {"score": 0.004119762981892093, "phrase": "search_domain"}, {"score": 0.004081385289516914, "phrase": "upper_and_lower_parameter_bounds"}, {"score": 0.0038826383289526857, "phrase": "contracting_parameter_bounds"}, {"score": 0.003834476721674575, "phrase": "numerical_experiments"}, {"score": 0.003557752688779838, "phrase": "remaining_computational_budget"}, {"score": 0.0034700069041302003, "phrase": "linear_scaling"}, {"score": 0.003179538613508042, "phrase": "selected_telescoping_strategies"}, {"score": 0.0031400710087822487, "phrase": "numerous_optimization_test_functions"}, {"score": 0.0031010917912277845, "phrase": "calibration_problems"}, {"score": 0.0030530454211138594, "phrase": "test_suite"}, {"score": 0.0029777101656842803, "phrase": "robust_comparisons"}, {"score": 0.0029042284259394044, "phrase": "restrictive_computational_budgets"}, {"score": 0.0028771413440398614, "phrase": "telescoping_strategies"}, {"score": 0.0027799596509593166, "phrase": "baseline_experiments"}, {"score": 0.0027198282355114646, "phrase": "performance_improvements"}, {"score": 0.0026361695237709874, "phrase": "real-coded_genetic_algorithm"}, {"score": 0.0025710943379540175, "phrase": "complex_evolution"}, {"score": 0.0025154693498317757, "phrase": "simulated_annealing"}, {"score": 0.002461044825190643, "phrase": "particle_swarm_optimization"}, {"score": 0.0024002822777025906, "phrase": "dynamically_dimensioned_search"}, {"score": 0.0023630680726174627, "phrase": "interalgorithm_comparisons"}, {"score": 0.0023337115873889396, "phrase": "sce_and_dds_algorithms"}, {"score": 0.002311933249234786, "phrase": "best_overall_performance"}, {"score": 0.00229753738656258, "phrase": "sce"}, {"score": 0.002247807356218318, "phrase": "low-dimensional_problems"}, {"score": 0.0022268288922192704, "phrase": "moderate_computational_budget"}, {"score": 0.0022062546692220245, "phrase": "dos"}, {"score": 0.002165058408875865, "phrase": "high-dimensional_problems"}, {"score": 0.0021448505687807796, "phrase": "restricted_computational_budget"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Shuffled complex evolution", " Calibration", " Groundwater", " Heuristic optimization", " Range reduction", " Bounds contraction"], "paper_abstract": "The parameters of environmental simulation models are often inferred by minimizing differences between simulated output and observed data. Heuristic global search algorithms are a popular choice for performing minimization but many algorithms yield lackluster results when computational budgets are restricted, as is often required in practice. One way for improving performance is to limit the search domain by reducing upper and lower parameter bounds. While such range reduction is typically done prior to optimization, this study examined strategies for contracting parameter bounds during optimization. Numerical experiments evaluated a set of novel \"telescoping\" strategies that work in conjunction with a given optimizer to scale parameter bounds in accordance with the remaining computational budget. Various telescoping functions were considered, including a linear scaling of the bounds, and four nonlinear scaling functions that more aggressively reduce parameter bounds either early or late in the optimization. Several heuristic optimizers were integrated with the selected telescoping strategies and applied to numerous optimization test functions as well as calibration problems involving four environmental simulation models. The test suite ranged from simple 2-parameter surfaces to complex 100-parameter landscapes, facilitating robust comparisons of the selected optimizers across a variety of restrictive computational budgets. All telescoping strategies generally improved the performance of the selected optimizers, relative to baseline experiments that used no bounds reduction. Performance improvements varied but were as high as 38% for a real-coded genetic algorithm (RGA), 21% for shuffled complex evolution (SCE), 16% for simulated annealing (SA), 8% for particle swarm optimization (PSO), and 7% for dynamically dimensioned search (DDS). Interalgorithm comparisons suggest that the SCE and DDS algorithms delivered the best overall performance. SCE appears well-suited for solving low-dimensional problems using a moderate computational budget, while DOS appears better suited for solving high-dimensional problems using a restricted computational budget. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Telescoping strategies for improved parameter estimation of environmental simulation models", "paper_id": "WOS:000325040900018"}