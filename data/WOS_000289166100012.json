{"auto_keywords": [{"score": 0.0442075585108751, "phrase": "redundant_computations"}, {"score": 0.035761459630628156, "phrase": "new_transform"}, {"score": 0.00481495049065317, "phrase": "fast_block_convolution"}, {"score": 0.004737201825299411, "phrase": "fft._convolution"}, {"score": 0.004641770842098217, "phrase": "long-tap_filter"}, {"score": 0.004474807906456693, "phrase": "osa"}, {"score": 0.004404453042744467, "phrase": "fourier"}, {"score": 0.004175533280178052, "phrase": "traditional_osa"}, {"score": 0.004124968334156378, "phrase": "fft"}, {"score": 0.004041686156098498, "phrase": "overlapped_data"}, {"score": 0.003976373766630594, "phrase": "previous_block"}, {"score": 0.0039280803011236395, "phrase": "current_block"}, {"score": 0.0038645966233348933, "phrase": "dft_computations"}, {"score": 0.0035332741328861776, "phrase": "previous_and_current_block"}, {"score": 0.0032967724149749853, "phrase": "current_data"}, {"score": 0.0032302647179383915, "phrase": "overall_overlapped_data"}, {"score": 0.003076052206618737, "phrase": "traditional_osa."}, {"score": 0.0029780321984558024, "phrase": "dft"}, {"score": 0.002870066750788841, "phrase": "new_butterfly_structure"}, {"score": 0.002755384932325921, "phrase": "twiddle_factor"}, {"score": 0.002613103872300205, "phrase": "fft_libraries"}, {"score": 0.002570819251741548, "phrase": "dsp."}, {"score": 0.0025499307228648883, "phrase": "computational_complexity"}, {"score": 0.0024480094603893175, "phrase": "existing_methods"}, {"score": 0.002379092507901856, "phrase": "proposed_method"}, {"score": 0.002265422518417868, "phrase": "cpu_time"}, {"score": 0.0021926693625590006, "phrase": "arithmetic_analysis"}, {"score": 0.0021396386320044172, "phrase": "reduced_transform_size"}, {"score": 0.0021222476760114914, "phrase": "additional_advantage"}, {"score": 0.0021049977753042253, "phrase": "data_manipulation"}], "paper_keywords": ["Overlap save algorithm", " QDFT", " Block convolution"], "paper_abstract": "Convolution of data with a long-tap filter is often implemented by overlap save algorithm (OSA) using fast Fourier transform (FFT). But there are some redundant computations in the traditional OSA because the FFT is applied to the overlapped data (concatenation of previous block and the current block) while the DFT computations are recursive. In this paper, we first analyze the redundancy by decomposing the OSA into two processes related to the previous and current block. Then we eliminate the redundant computations by introducing a new transform which is applied only to the current data, not to the overall overlapped data. Hence the size of transform is reduced by half compared to the traditional OSA. The new transform is in the form of DFT and it can be implemented by defining a new butterfly structure. However we implement it by a cascade of twiddle factor and conventional FFT in this paper, in order to use the FFT libraries in PC and DSP. The computational complexity in this case is analyzed and compared with the existing methods. In the experiment, the proposed method is applied to several block convolutions and partitioned-block convolutions. The CPU time is reduced more than expected from the arithmetic analysis, which implies that the reduced transform size gives additional advantage in data manipulation.", "paper_title": "A New Overlap Save Algorithm for Fast Block Convolution and Its Implementation Using FFT", "paper_id": "WOS:000289166100012"}