{"auto_keywords": [{"score": 0.04933866662045337, "phrase": "database_transformations"}, {"score": 0.00481495049065317, "phrase": "er_models"}, {"score": 0.004667149874736771, "phrase": "data_sets"}, {"score": 0.004618893461411858, "phrase": "data_mining"}, {"score": 0.004523865550323285, "phrase": "data_mining_project"}, {"score": 0.004430784015995566, "phrase": "relational_database"}, {"score": 0.004362226376603478, "phrase": "significant_effort"}, {"score": 0.00422826362023938, "phrase": "data_set"}, {"score": 0.004119762981892093, "phrase": "main_reason"}, {"score": 0.003850464100878052, "phrase": "normalized_tables"}, {"score": 0.003580032420161922, "phrase": "required_data_set"}, {"score": 0.0032769720645483102, "phrase": "disorganized_manner"}, {"score": 0.002968424524565369, "phrase": "er_model"}, {"score": 0.0029376803941247084, "phrase": "similar_sql_queries"}, {"score": 0.002803213985198645, "phrase": "database_evolution"}, {"score": 0.0027741761880779535, "phrase": "software_maintenance"}, {"score": 0.0026609940110902666, "phrase": "potential_database_transformations"}, {"score": 0.002592606058287124, "phrase": "er_diagram"}, {"score": 0.0023361440016375972, "phrase": "case_study"}, {"score": 0.002299921909935613, "phrase": "public_database"}, {"score": 0.002171836484200008, "phrase": "typical_data_mining_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["ER model", " Data mining", " Transformation", " Denormalization", " Aggregation"], "paper_abstract": "In a data mining project developed on a relational database, a significant effort is required to build a data set for analysis. The main reason is that, in general, the database has a collection of normalized tables that must be joined, aggregated and transformed in order to build the required data set. Such scenario results in many complex SQL queries that are written independently from each other, in a disorganized manner. Therefore, the database grows with many tables and views that are not present as entities in the ER model and similar SQL queries are written multiple times, creating problems in database evolution and software maintenance. In this paper, we classify potential database transformations, we extend an ER diagram with entities capturing database transformations and we introduce an algorithm which automates the creation of such extended ER model. We present a case study with a public database illustrating database transformations to build a data set to compute a typical data mining model. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Extending ER models to capture database transformations to build data sets for data mining", "paper_id": "WOS:000332140200003"}