{"auto_keywords": [{"score": 0.04383763210701565, "phrase": "player's_behavior"}, {"score": 0.01456334267053235, "phrase": "player_behavior"}, {"score": 0.011311058626999607, "phrase": "game_environment"}, {"score": 0.00481495049065317, "phrase": "computer_games"}, {"score": 0.004777917315737992, "phrase": "player_modelling"}, {"score": 0.004650519511749445, "phrase": "game_community"}, {"score": 0.004596960835906736, "phrase": "recent_years"}, {"score": 0.004491678520807451, "phrase": "accurate_models"}, {"score": 0.003923671536980019, "phrase": "artificial_intelligence"}, {"score": 0.003789561910103601, "phrase": "new_behavior"}, {"score": 0.0035899674590142653, "phrase": "machine_learning_techniques"}, {"score": 0.0035212516951180946, "phrase": "previously_recorded_game_metrics"}, {"score": 0.0034941337957136013, "phrase": "player's_interactions"}, {"score": 0.003284550970221379, "phrase": "constructed_models"}, {"score": 0.0030401074516310184, "phrase": "incremental_learning_technique"}, {"score": 0.0027175263159330523, "phrase": "change_detection_technique"}, {"score": 0.002665465323614577, "phrase": "data_stream_mining"}, {"score": 0.0026143990748127253, "phrase": "incremental_clustering"}, {"score": 0.0025942468561537682, "phrase": "novelty_detection"}, {"score": 0.0025151755329660837, "phrase": "original_technique"}, {"score": 0.0024574537875026634, "phrase": "change_detection"}, {"score": 0.002429090371567499, "phrase": "detection_rate"}, {"score": 0.002401053532270901, "phrase": "detection_delay"}, {"score": 0.0022308329460335985, "phrase": "online_tracking"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Online player modeling", " Behavior change detection", " Data Stream Mining"], "paper_abstract": "Player Modelling has been receiving much attention from the game community in the recent years. The ability to build accurate models of player behavior can be useful in many aspects of a game. One important aspect is the tracking of a player's behavior along time, informing every time a change is perceived. This way, the game Artificial Intelligence can adapt itself to better respond to this new behavior. In order to build models of player behavior, researchers frequently resort to Machine Learning techniques. Such methods work on previously recorded game metrics representing player's interactions with the game environment. However, if the player changes styles over time, the constructed models get out of date. In order to address this drawback, this work proposes the use of and incremental learning technique to track a player's behavior during his/her interaction with the game environment. Our approach attempts to automatically detect the moments in time when the player changes behavior. We apply a change detection technique from the area of Data Stream Mining that is based on incremental clustering and novelty detection. We also propose three modifications to the original technique, in order to formalize change detection, improve detection rate and reduce detection delay. Simulations were performed considering data produced by the Unreal Tournament game, showing the applicability of the method to online tracking of a player's behavior and informing whenever behavior changes occur. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Online behavior change detection in computer games", "paper_id": "WOS:000322857200005"}