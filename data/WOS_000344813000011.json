{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "c."}, {"score": 0.00481495049065317, "phrase": "run-time_adaptations"}, {"score": 0.004550469496119256, "phrase": "vehicle_stereo_navigation"}, {"score": 0.004455061431809975, "phrase": "traditional_approach"}, {"score": 0.004361644989356558, "phrase": "adaptive_behavior"}, {"score": 0.004300453431933622, "phrase": "embedded_applications"}, {"score": 0.004121960535174029, "phrase": "error-prone_programming_tasks"}, {"score": 0.003978866233891427, "phrase": "long_design_cycles"}, {"score": 0.0038679618585498597, "phrase": "inherent_inability"}, {"score": 0.0037073529462522403, "phrase": "wide_variety"}, {"score": 0.0036553070575015344, "phrase": "alternative_adaptation_behaviors"}, {"score": 0.003478813491904962, "phrase": "dynamic_operational_and_situational_environments"}, {"score": 0.003264316172836322, "phrase": "domain-specific_language"}, {"score": 0.0030847461428168614, "phrase": "run-time_adaptable_application_behavior"}, {"score": 0.0029150253706493852, "phrase": "real-life_stereo_navigation_application"}, {"score": 0.0027733492498103964, "phrase": "dsl"}, {"score": 0.002640114583897493, "phrase": "algorithm_parameters"}, {"score": 0.0023742031943872464, "phrase": "higher_level"}, {"score": 0.0022276618873985445, "phrase": "lower_programming_effort"}, {"score": 0.0021501863832966966, "phrase": "general-purpose_language"}], "paper_keywords": ["Embedded systems", " Domain-specific languages", " Run-time adaptations", " Adaptable behavior", " Stereo navigation"], "paper_abstract": "The traditional approach for specifying adaptive behavior in embedded applications requires developers to engage in error-prone programming tasks. This results in long design cycles and in the inherent inability to explore and evaluate a wide variety of alternative adaptation behaviors, critical for systems exposed to dynamic operational and situational environments. In this paper, we introduce a domain-specific language (DSL) for specifying and implementing run-time adaptable application behavior. We illustrate our approach using a real-life stereo navigation application as a case study, highlighting the impact and benefits of dynamically adapting algorithm parameters. The experiments reveal our approach effective, as such run-time adaptations are easily specified in a higher level by the DSL, and thus at a lower programming effort than when using a general-purpose language such as C.", "paper_title": "A DSL for specifying run-time adaptations for embedded systems: an application to vehicle stereo navigation", "paper_id": "WOS:000344813000011"}