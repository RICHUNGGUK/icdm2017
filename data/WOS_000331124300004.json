{"auto_keywords": [{"score": 0.03377021264206655, "phrase": "strong_simulation"}, {"score": 0.015719716506582538, "phrase": "graph_pattern_matching"}, {"score": 0.013734606502418237, "phrase": "graph_simulation"}, {"score": 0.007337601163131799, "phrase": "graph_pattern"}, {"score": 0.006827713221260157, "phrase": "data_graphs"}, {"score": 0.004644247838681628, "phrase": "data_graph"}, {"score": 0.00444377150105556, "phrase": "subgraph_isomorphism"}, {"score": 0.004391054236556533, "phrase": "np"}, {"score": 0.003955593400628455, "phrase": "cubic_time"}, {"score": 0.0035778632599436024, "phrase": "pattern_graphs"}, {"score": 0.0027446057983474994, "phrase": "bounded_number"}, {"score": 0.0025840347813610815, "phrase": "earlier_extensions"}, {"score": 0.0025224615049571427, "phrase": "cubic-time_algorithm"}, {"score": 0.0024133533748653033, "phrase": "locality_property"}, {"score": 0.002327594516681507, "phrase": "effective_distributed_algorithm"}, {"score": 0.0022721178679337025, "phrase": "distributed_graphs"}, {"score": 0.0021049977753042253, "phrase": "synthetic_data"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " Theory", " Strong simulation", " dual simulation", " graph simulation", " subgraph isomorphism", " data locality"], "paper_abstract": "Graph pattern matching is finding all matches in a data graph for a given pattern graph and is often defined in terms of subgraph isomorphism, an NP-complete problem. To lower its complexity, various extensions of graph simulation have been considered instead. These extensions allow graph pattern matching to be conducted in cubic time. However, they fall short of capturing the topology of data graphs, that is, graphs may have a structure drastically different from pattern graphs they match, and the matches found are often too large to understand and analyze. To rectify these problems, this article proposes a notion of strong simulation, a revision of graph simulation for graph pattern matching. (1) We identify a set of criteria for preserving the topology of graphs matched. We show that strong simulation preserves the topology of data graphs and finds a bounded number of matches. (2) We show that strong simulation retains the same complexity as earlier extensions of graph simulation by providing a cubic-time algorithm for computing strong simulation. (3) We present the locality property of strong simulation which allows us to develop an effective distributed algorithm to conduct graph pattern matching on distributed graphs. (4) We experimentally verify the effectiveness and efficiency of these algorithms using both real-life and synthetic data.", "paper_title": "Strong Simulation: Capturing Topology in Graph Pattern Matching", "paper_id": "WOS:000331124300004"}