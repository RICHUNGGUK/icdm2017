{"auto_keywords": [{"score": 0.04038597581803138, "phrase": "database_queries"}, {"score": 0.00481495049065317, "phrase": "data_access_services"}, {"score": 0.004755353864362941, "phrase": "modern_service-oriented_architectures"}, {"score": 0.004599994523941615, "phrase": "special_type"}, {"score": 0.004505471345843642, "phrase": "so-called_data_access_services"}, {"score": 0.0043401761815767, "phrase": "data-intensive_applications"}, {"score": 0.0039446780026489905, "phrase": "data_access_objects"}, {"score": 0.0034967818541774844, "phrase": "desired_das"}, {"score": 0.003439117493141663, "phrase": "associated_documentation"}, {"score": 0.0033824008297657494, "phrase": "impossible_task"}, {"score": 0.002936451109357539, "phrase": "queryable_manner"}, {"score": 0.00288800021194675, "phrase": "tailored_views"}, {"score": 0.00286407451582299, "phrase": "different_stakeholders"}, {"score": 0.0027703320456201074, "phrase": "das_implementations"}, {"score": 0.0025704485156071463, "phrase": "das_documentation"}, {"score": 0.002496659907186784, "phrase": "wide_range"}, {"score": 0.0024350966556966757, "phrase": "das_usage"}, {"score": 0.002404885278896803, "phrase": "performance_optimization"}, {"score": 0.002345579707333727, "phrase": "tool_support"}, {"score": 0.002259346051668556, "phrase": "large-scale_case_study"}, {"score": 0.002158233639156017, "phrase": "acceptable_response_times"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Data Access Service", " DAS", " SOA", " Service", " DAO", " Data Access Object", " Repository", " Model-driven", " MDD", " Data model", " Data", " Database", " RDBMS", " Tooling", " Architecture", " Ecore", " ORM", " View-based", " View", " EMF", " GIS", " WFS", " Web Feature Services", " Geographic", " Spatial", " Non-spatial", " Features", " Data access", " Data", " Model-driven architecture", " Views"], "paper_abstract": "In modern service-oriented architectures, database access is done by a special type of services, the so-called data access services (DAS). Though, particularly in data-intensive applications, using and developing DAS are very common today, the link between the DAS and their implementation, e.g. a layer of data access objects (DAOs) encapsulating the database queries, still is not sufficiently elaborated, yet. As a result, as the number of DAS grows, finding the desired DAS for reuse and/or associated documentation can become an impossible task. In this paper we focus on bridging this gap between the DAS and their implementation by presenting a view-based, model-driven data access architecture (VMDA) managing models of the DAS, DAOs and database queries in a queryable manner. Our models support tailored views of different stakeholders and are scalable with all types of DAS implementations. In this paper we show that our view-based and model driven architecture approach can enhance software development productivity and maintainability by improving DAS documentation. Moreover, our VMDA opens a wide range of applications such as evaluating DAS usage for DAS performance optimization. Furthermore, we provide tool support and illustrate the applicability of our VMDA in a large-scale case study. Finally, we quantitatively prove that our approach performs with acceptable response times. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "View-based model-driven architecture for enhancing maintainability of data access services", "paper_id": "WOS:000293810600003"}