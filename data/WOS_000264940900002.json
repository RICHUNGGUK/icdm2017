{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "state_machines"}, {"score": 0.004466519142879166, "phrase": "error_correction"}, {"score": 0.004176102823067887, "phrase": "requirements_elicitation"}, {"score": 0.003753022329975749, "phrase": "requirements_changes"}, {"score": 0.0036940852452587093, "phrase": "atomic_changes"}, {"score": 0.003607404191062938, "phrase": "rigorous_specification_method"}, {"score": 0.0033860360186761533, "phrase": "possible_atomic_requirements_changes"}, {"score": 0.0032675209435107273, "phrase": "axiom_system"}, {"score": 0.003241750934419473, "phrase": "sequence-based_specification"}, {"score": 0.0030791137853734152, "phrase": "prototype_tool"}, {"score": 0.0028786467218197245, "phrase": "old_specifications"}, {"score": 0.0027999339042953076, "phrase": "new_specifications"}, {"score": 0.0027668603377225564, "phrase": "least_amount"}, {"score": 0.0027450280220853137, "phrase": "human_interaction"}, {"score": 0.002576442680766742, "phrase": "strong_evidence"}, {"score": 0.0024960634897058394, "phrase": "proposed_theory"}, {"score": 0.0023613726075968986, "phrase": "embedded_systems"}, {"score": 0.0023427323356117365, "phrase": "safety-critical_systems"}, {"score": 0.002164216680934624, "phrase": "incremental_development"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["requirements management", " change management", " requirements elicitation and tracking", " sequence-based software specification", " changing state diagrams", " Mealy machine", " automaton"], "paper_abstract": "Requirements change both during and after a phase of development for a variety of reasons, including error correction and feature changes. Requirements change management is one of the most complex and difficult problems to deal with in requirements elicitation and tracking. It is generally not understood how a specific change propagates through the specification and into the code. In this paper we capture requirements changes as series of atomic changes in specifications. Using a rigorous specification method called sequence-based specification, we propose a set of algorithms for managing all possible atomic requirements changes. The algorithms have been formulated within an axiom system for sequence-based specification and proven for correctness. They have also been implemented in a prototype tool with which users are able to push requirements changes through to changes in specifications, maintain old specifications over time and evolve them into new specifications with the least amount of human interaction and rework. The approach of utilizing state machines to model and manage requirements changes guarantees strong evidence about the correctness and completeness of the proposed theory that will lead to more reliable software in the presence of change, especially with embedded systems and safety-critical systems. The solution described is general enough for adoption by software and system developers, and well suited for incremental development. Copyright (C) 2008 John Wiley & Sons., Ltd.", "paper_title": "The impact of requirements changes on specifications and state machines", "paper_id": "WOS:000264940900002"}