{"auto_keywords": [{"score": 0.04264079081511656, "phrase": "morsa"}, {"score": 0.008713768692145013, "phrase": "large_models"}, {"score": 0.004718019768447783, "phrase": "model-driven_engineering"}, {"score": 0.004694096618422214, "phrase": "mde"}, {"score": 0.004623031313100715, "phrase": "new_area"}, {"score": 0.004599583143434576, "phrase": "software_engineering"}, {"score": 0.004416210202299748, "phrase": "industrial_standards"}, {"score": 0.0042725930865046636, "phrase": "model_persistence"}, {"score": 0.00404006571186961, "phrase": "model_repository"}, {"score": 0.003999162770142387, "phrase": "no-sql_database_backend"}, {"score": 0.0038789122930433305, "phrase": "scalable_access"}, {"score": 0.003839634630996529, "phrase": "transparent_integration"}, {"score": 0.0037336520904376687, "phrase": "query_language"}, {"score": 0.0036770770719241593, "phrase": "existing_model"}, {"score": 0.0032624698808386694, "phrase": "querying_approaches"}, {"score": 0.0031885633382582484, "phrase": "representative_set"}, {"score": 0.003030247482854539, "phrase": "dedicated_model"}, {"score": 0.0029540533167966335, "phrase": "studied_ones"}, {"score": 0.002894478203196126, "phrase": "mdt"}, {"score": 0.002821685815956478, "phrase": "test_case"}, {"score": 0.0027577369726266834, "phrase": "different_approaches"}, {"score": 0.002667909612255471, "phrase": "morsa_query_language"}, {"score": 0.0026140878612307536, "phrase": "querying_capabilities"}, {"score": 0.0025875844752587815, "phrase": "existing_querying_approaches"}, {"score": 0.0024842242921857705, "phrase": "current_model_persistence"}, {"score": 0.0023971684937004207, "phrase": "different_querying_approaches"}, {"score": 0.0022722584151582616, "phrase": "best_choice"}, {"score": 0.002192614305694006, "phrase": "mde_developers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model-Driven Engineering", " Model persistence", " Model repositories", " Eclipse Modeling Framework", " Model querying", " Efficiency"], "paper_abstract": "Context: The paradigm of Model-Driven Engineering (MDE) has emerged as a new area of software engineering that uses models to improve the productivity and reusability of software in order to achieve industrial standards. As models grow in size and complexity, the need of model persistence and model querying solutions arises to efficiently store large models and obtain information from them in an efficient, usable and safe way. Morsa is a model repository that uses a No-SQL database backend; it has been recently presented [1] and achieves scalable access to models and transparent integration with tools. Objective: Our goal was to develop a query language for Morsa, as the existing model querying approaches cannot take advantage of the design of the our repository. Method: The method followed in this paper comprises the following steps: (i) analyze the problem of model querying and identify a set of dimensions that can be used to characterize querying approaches; (ii) study and evaluate a representative set of model querying approaches and (iii) use the experience gained to design, develop and evaluate a dedicated model querying approach for Morsa that performs better than the studied ones (plain EMF, EMF Query, MDT OCL, IncQuery and CDO OCL). A test case has been defined to evaluate and compare the different approaches. Results: The contributions of this work are: first, an efficient, usable querying approach called Morsa Query Language (MorsaQL) that extends Morsa with querying capabilities, as the existing querying approaches cannot take advantage of our repository, and second, a comparative study of the current model persistence and querying approaches. Conclusion: The experience of analyzing and evaluating the different querying approaches has been very useful, as it has helped us developing our own one, which has been proven to be the best choice for Morsa. Moreover, the results of this paper can guide the MDE developers on which querying approach to use, depending on their needs. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Querying large models efficiently", "paper_id": "WOS:000335486300004"}