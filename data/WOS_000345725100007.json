{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "language-centric_view"}, {"score": 0.004602773636967002, "phrase": "software_development_process"}, {"score": 0.004081385289516914, "phrase": "domain-specific_language"}, {"score": 0.003356675879109443, "phrase": "dsl's_implementation_infrastructure"}, {"score": 0.0031606404966938568, "phrase": "logic_programming"}, {"score": 0.003021141590548526, "phrase": "rapid_way"}, {"score": 0.002844646030750337, "phrase": "implementation_infrastructure"}, {"score": 0.0024842242921857705, "phrase": "software_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Domain specific languages", " Software engineering"], "paper_abstract": "We present a language-centric view of the software development process. We argue that success of the domain-specific language (DSL) methodology depends on being able to rapidly craft a DSL's implementation infrastructure. We present logic programming as a rapid way of developing this implementation infrastructure. We also present a language-centric view of a software system as a processor of its input language. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Language-based software engineering", "paper_id": "WOS:000345725100007"}