{"auto_keywords": [{"score": 0.03983296937316375, "phrase": "lsbf"}, {"score": 0.008713768692145006, "phrase": "approximate_membership_query"}, {"score": 0.006047196000508982, "phrase": "bit_vector"}, {"score": 0.005390969783377328, "phrase": "fn"}, {"score": 0.0047135086583390585, "phrase": "bloom_filters"}, {"score": 0.0046141941030386525, "phrase": "exact-matching_membership_query"}, {"score": 0.004459605573798577, "phrase": "false_answers"}, {"score": 0.004291848822287492, "phrase": "standard_bloom_filter"}, {"score": 0.004255431326383001, "phrase": "locality-sensitive_bloom_filter"}, {"score": 0.003958049372486465, "phrase": "uniform_and_independent_hash_functions"}, {"score": 0.0039244530915794025, "phrase": "locality-sensitive_hash_functions"}, {"score": 0.003512702405367876, "phrase": "bloom_filter_design"}, {"score": 0.003409399407390298, "phrase": "lsbf_structure"}, {"score": 0.0032950412841674026, "phrase": "false_positives"}, {"score": 0.00317095235382607, "phrase": "multiple_attributes"}, {"score": 0.0030515222178491923, "phrase": "active_overflowed_scheme"}, {"score": 0.0029998918671747168, "phrase": "false_negatives"}, {"score": 0.002936577024096783, "phrase": "rigorous_theoretical_analysis"}, {"score": 0.0029116257477000617, "phrase": "e._g."}, {"score": 0.0028746324857086758, "phrase": "fp"}, {"score": 0.0028139168128067343, "phrase": "space_overhead"}, {"score": 0.0027078974645805736, "phrase": "space_compact"}, {"score": 0.0026620655619396263, "phrase": "accurate_response"}, {"score": 0.0026282000779095987, "phrase": "membership_queries"}, {"score": 0.002539978170928796, "phrase": "real_distributed_system"}, {"score": 0.0025076619172878945, "phrase": "extensive_experiments"}, {"score": 0.0024863459251358217, "phrase": "real-world_traces"}, {"score": 0.002372298201966367, "phrase": "baseline_approach"}, {"score": 0.0022346638243276717, "phrase": "smartstore"}, {"score": 0.002215679916242466, "phrase": "lsb"}, {"score": 0.002132135985573126, "phrase": "amq"}], "paper_keywords": ["Approximate membership query", " bloom filters", " locality sensitive hashing"], "paper_abstract": "In many network applications, Bloom filters are used to support exact-matching membership query for their randomized space-efficient data structure with a small probability of false answers. In this paper, we extend the standard Bloom filter to Locality-Sensitive Bloom Filter (LSBF) to provide Approximate Membership Query (AMQ) service. We achieve this by replacing uniform and independent hash functions with locality-sensitive hash functions. Such replacement makes the storage in LSBF to be locality sensitive. Meanwhile, LSBF is space efficient and query responsive by employing the Bloom filter design. In the design of the LSBF structure, we propose a bit vector to reduce False Positives (FP). The bit vector can verify multiple attributes belonging to one member. We also use an active overflowed scheme to significantly decrease False Negatives (FN). Rigorous theoretical analysis (e. g., on FP, FN, and space overhead) shows that the design of LSBF is space compact and can provide accurate response to approximate membership queries. We have implemented LSBF in a real distributed system to perform extensive experiments using real-world traces. Experimental results show that LSBF, compared with a baseline approach and other state-of-the-art work in the literature (SmartStore and LSB-tree), takes less time to respond AMQ and consumes much less storage space.", "paper_title": "Locality-Sensitive Bloom Filter for Approximate Membership Query", "paper_id": "WOS:000303165900006"}