{"auto_keywords": [{"score": 0.03498048027388702, "phrase": "incentive_compatibility"}, {"score": 0.015307431265596982, "phrase": "computing_resources"}, {"score": 0.00481495049065317, "phrase": "grid_computing"}, {"score": 0.004624751696958501, "phrase": "cpu_cycles"}, {"score": 0.004563028873351776, "phrase": "network_bandwidth"}, {"score": 0.004517275498868226, "phrase": "even_applications"}, {"score": 0.004456980650437417, "phrase": "distributed_and_heterogeneous_set"}, {"score": 0.0042521895049768875, "phrase": "seamless_temporary_processing-capacity_expansion"}, {"score": 0.004209539728590977, "phrase": "peak-period_demand"}, {"score": 0.00418134346679498, "phrase": "e-commerce_servers"}, {"score": 0.0040978781692373005, "phrase": "content_storage"}, {"score": 0.004002596930301241, "phrase": "market-based_resource-allocation_model"}, {"score": 0.0038964032225585117, "phrase": "current_approach"}, {"score": 0.0038573081851680656, "phrase": "resource_allocation"}, {"score": 0.0038314621564116192, "phrase": "primarily_a_scheduling_issue"}, {"score": 0.003767599364361092, "phrase": "value-elicitation_and_allocation_scheme"}, {"score": 0.003498968822873231, "phrase": "combinatorial_call_auction"}, {"score": 0.0033832583769880576, "phrase": "economic_properties"}, {"score": 0.00333804919565419, "phrase": "allocative_efficiency"}, {"score": 0.003227643104496149, "phrase": "computational_efficiency"}, {"score": 0.0031419449938286663, "phrase": "efficient_solution"}, {"score": 0.003110396267535251, "phrase": "social_welfare"}, {"score": 0.003079163348079199, "phrase": "incentive-compatible_vickrey-clarke-groves_prices"}, {"score": 0.0030278017562213265, "phrase": "multiple_instances"}, {"score": 0.0029973957125353306, "phrase": "np-hard_problem"}, {"score": 0.002927626967420519, "phrase": "commodity_price"}, {"score": 0.002830757050018908, "phrase": "fairness_constraints"}, {"score": 0.0028023242231187363, "phrase": "efficient_model"}, {"score": 0.002755567647101251, "phrase": "computational_burden"}, {"score": 0.002646501671714952, "phrase": "real-time_fast_solution_techniques"}, {"score": 0.002524688179363081, "phrase": "welfare-maximizing_fair_solution"}, {"score": 0.0022898630573629144, "phrase": "commodity_prices"}, {"score": 0.002214048743052355, "phrase": "tsfgrid"}, {"score": 0.0021697677572213086, "phrase": "efficient_solution_technique"}, {"score": 0.0021263705039915198, "phrase": "significant_differences"}, {"score": 0.0021049977753042253, "phrase": "expected-revenue_and_operational-allocative_characteristics"}], "paper_keywords": ["grid computing", " combinatorial call auction", " fair versus efficient allocation", " social welfare", " market design"], "paper_abstract": "Grid computing uses software to integrate computing resources, such as CPU cycles, storage, network bandwidth, and even applications, across a distributed and heterogeneous set of networked computers. It is now widely deployed by organizations and provides seamless temporary processing-capacity expansion to handle peak-period demand on e-commerce servers, distributed gaming, and content storage and distribution. We develop a market-based resource-allocation model that adds an economic layer to the current approach of treating resource allocation as primarily a scheduling issue. We design a value-elicitation and allocation scheme that provides the economic incentives for buyers and sellers of computing resources to exchange assets. We formulate the problem as a combinatorial call auction and present a portfolio of three solution approaches that trade off economic properties, such as allocative efficiency, incentive compatibility, and fairness in allocation, with computational efficiency. The first of these is an efficient solution that maximizes social welfare and yields incentive-compatible Vickrey-Clarke-Groves prices, but requires solving multiple instances of an NP-hard problem. For markets where having a commodity price is critical, we show how the addition of fairness constraints to the efficient model can somewhat reduce the computational burden and yet preserve incentive compatibility. Finally, for markets that require real-time fast solution techniques, we propose a time-sensitive fair Grid (tsfGRID) heuristic that relaxes the maximal allocation requirement of the welfare-maximizing fair solution. Its solution is not guaranteed to be incentive-compatible, but the heuristic is designed to be fast, maintain fairness in allocations, and yield commodity prices. Notably, while incentive compatibility is not guaranteed by tsfGRID, computational results comparing it with the efficient solution technique indicate that there are no significant differences in the expected-revenue and operational-allocative characteristics.", "paper_title": "A market design for grid computing", "paper_id": "WOS:000254140400010"}