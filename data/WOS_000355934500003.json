{"auto_keywords": [{"score": 0.046211774964878174, "phrase": "sgs"}, {"score": 0.013434729088284513, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "new_parallel_optimization_algorithm"}, {"score": 0.004595356579614969, "phrase": "systolic_computing"}, {"score": 0.004468415400599571, "phrase": "systolic_genetic_search"}, {"score": 0.0042446888127531945, "phrase": "high_degree"}, {"score": 0.004146716743362567, "phrase": "modern_graphics_processing_unit"}, {"score": 0.003848088904418221, "phrase": "processing_cells"}, {"score": 0.0037768417338850274, "phrase": "adapted_evolutionary_operators"}, {"score": 0.0032674478600540477, "phrase": "real-world_application"}, {"score": 0.0032219438233946312, "phrase": "extensive_experimental_analysis"}, {"score": 0.0030178044717552605, "phrase": "sgs_variants"}, {"score": 0.0028799352389969443, "phrase": "optimal_solution"}, {"score": 0.002853124436286834, "phrase": "almost_every_execution"}, {"score": 0.0026722904884984348, "phrase": "random_search"}, {"score": 0.002538263784314365, "phrase": "parallel_implementation"}, {"score": 0.002479579797152119, "phrase": "proposed_algorithm"}, {"score": 0.0023996890513009726, "phrase": "runtime_reductions"}, {"score": 0.0023662411481713682, "phrase": "sequential_implementation"}, {"score": 0.0021347607855562102, "phrase": "good_scalability_behavior"}, {"score": 0.0021049977753042253, "phrase": "highly_dimensional_problem_instances"}], "paper_keywords": ["Systolic genetic search", " Evolutionary algorithms", " Systolic computing", " Parallel computing", " Graphics processing units", " CUDA", " GPGPU"], "paper_abstract": "In this paper, we propose a new parallel optimization algorithm that combines ideas from the fields of metaheuristics and Systolic Computing. The algorithm, called Systolic Genetic Search (SGS), is designed to explicitly exploit the high degree of parallelism available in modern Graphics Processing Unit (GPU) architectures. In SGS, solutions circulate synchronously through a grid of processing cells, which apply adapted evolutionary operators on their inputs to compute their outputs that are then ejected from the cells and continue moving through the grid. Four different variants of SGS are experimentally studied for solving two classical benchmarking problems and a real-world application. An extensive experimental analysis, which considered several instances for each problem, shows that three of the SGS variants designed are highly effective since they can obtain the optimal solution in almost every execution for the instances and problems studied, as well as they outperform a Random Search (sanity check) and two Genetic Algorithms. The parallel implementation on GPU of the proposed algorithm has achieved a high performance obtaining runtime reductions from the sequential implementation that, depending on the instance considered, can arrive to around a hundred times, and have also exhibited a good scalability behavior when solving highly dimensional problem instances.", "paper_title": "Systolic genetic search, a systolic computing-based metaheuristic", "paper_id": "WOS:000355934500003"}