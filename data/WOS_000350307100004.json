{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "variability_analysis_tools"}, {"score": 0.004775746853222177, "phrase": "variability"}, {"score": 0.004666756595735701, "phrase": "software_applications"}, {"score": 0.004502943680955863, "phrase": "common_need"}, {"score": 0.004403480614319231, "phrase": "variability-intensive_systems"}, {"score": 0.004344855841195913, "phrase": "automated_analysis"}, {"score": 0.00419229472352669, "phrase": "contradictory_configuration_options"}, {"score": 0.004136469845987887, "phrase": "analysis_operations"}, {"score": 0.004045068727683462, "phrase": "variability_models"}, {"score": 0.0038338299812503, "phrase": "corresponding_analysis_tools"}, {"score": 0.0035216195857272403, "phrase": "well-known_oracle_problem"}, {"score": 0.0033376244286643176, "phrase": "generic_approach"}, {"score": 0.003293142761521425, "phrase": "automated_detection"}, {"score": 0.0031916366459252992, "phrase": "oracle_problem"}, {"score": 0.0030932495918679285, "phrase": "random_variability_models"}, {"score": 0.00303839203670705, "phrase": "exact_set"}, {"score": 0.0030113280682863234, "phrase": "valid_configurations"}, {"score": 0.002918483026678636, "phrase": "test_data"}, {"score": 0.0028411768240129585, "phrase": "stepwise_transformations"}, {"score": 0.002741269087816162, "phrase": "metamorphic_relations"}, {"score": 0.002333474735068123, "phrase": "boolean"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["metamorphic testing", " automated testing", " software testing", " software variability"], "paper_abstract": "Variability determines the capability of software applications to be configured and customized. A common need during the development of variability-intensive systems is the automated analysis of their underlying variability models, for example, detecting contradictory configuration options. The analysis operations that are performed on variability models are often very complex, which hinders the testing of the corresponding analysis tools and makes difficult, often infeasible, to determine the correctness of their outputs, that is, the well-known oracle problem in software testing. In this article, we present a generic approach for the automated detection of faults in variability analysis tools overcoming the oracle problem. Our work enables the generation of random variability models together with the exact set of valid configurations represented by these models. These test data are generated from scratch using stepwise transformations and assuring that certain constraints (a.k.a. metamorphic relations) hold at each step. To show the feasibility and generalizability of our approach, it has been used to automatically test several analysis tools in three variability domains: feature models, common upgradeability description format documents and Boolean formulas. Among other results, we detected 19 real bugs in 7 out of the 15 tools under test. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Automated metamorphic testing of variability analysis tools", "paper_id": "WOS:000350307100004"}