{"auto_keywords": [{"score": 0.02552629540238989, "phrase": "cra"}, {"score": 0.00481495049065317, "phrase": "automatic_generation_of_modular_multipliers"}, {"score": 0.0047527118741586055, "phrase": "fpga_applications"}, {"score": 0.00466085208934021, "phrase": "redundant_number_systems"}, {"score": 0.004570759604335229, "phrase": "constant_time_addition"}, {"score": 0.004310752197635499, "phrase": "modular_multipliers"}, {"score": 0.004227398267369744, "phrase": "public-key_cryptography"}, {"score": 0.003960972732123083, "phrase": "large_operands"}, {"score": 0.0034099718632933027, "phrase": "number_systems"}, {"score": 0.0031535341431377837, "phrase": "modern_field-programmable_gate_arrays"}, {"score": 0.002878556952876824, "phrase": "modular_multiplication"}, {"score": 0.0028228178454284825, "phrase": "high-radix_carry-save_number_system"}, {"score": 0.002679386232765167, "phrase": "carry-save_representation"}, {"score": 0.0025934566395017424, "phrase": "sum_word"}, {"score": 0.0024297565926197505, "phrase": "small_carry-ripple_adder"}, {"score": 0.0022177498761722773, "phrase": "best_high-radix_carry-save_representation"}, {"score": 0.0021049977753042253, "phrase": "synthesizable_vhdl_description"}], "paper_keywords": ["Modular multiplication", " high-radix carry-save number system", " FPGA"], "paper_abstract": "Since redundant number systems allow for constant time addition, they are often at the heart of modular multipliers designed for public-key cryptography (PKC) applications. Indeed, PKC involves large operands (160 to 1,024 bits), and several researchers proposed carry-save or borrow-save algorithms. However, these number systems do not take advantage of the dedicated carry logic available in modern Field-Programmable Gate Arrays (FPGAs). To overcome this problem, we suggest to perform modular multiplication in a high-radix carry-save number system, where a sum bit of the carry-save representation is replaced by a sum word. Two digits are then added by means of a small Carry-Ripple Adder (CRA). Furthermore, we propose an algorithm that selects the best high-radix carry-save representation for a given modulus and generates a synthesizable VHDL description of the operator.", "paper_title": "Automatic Generation of Modular Multipliers for FPGA Applications", "paper_id": "WOS:000260259300002"}