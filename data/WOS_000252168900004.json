{"auto_keywords": [{"score": 0.049390246951185, "phrase": "problog"}, {"score": 0.01121480077956636, "phrase": "randomly_sampled_program"}, {"score": 0.00481495049065317, "phrase": "probabilistic_prolog_programs"}, {"score": 0.004643594260262632, "phrase": "recently_introduced_probabilistic_extension"}, {"score": 0.004382375915634563, "phrase": "proceedings"}, {"score": 0.0039019217388438134, "phrase": "problog_program"}, {"score": 0.00376293585033711, "phrase": "logic_programs"}, {"score": 0.0030048355421601705, "phrase": "success_probability"}, {"score": 0.002754103864198219, "phrase": "theory_compression_task"}, {"score": 0.0023135183406982414, "phrase": "positive_and_negative_examples"}, {"score": 0.002151388538895855, "phrase": "real_biological_networks"}, {"score": 0.0021049977753042253, "phrase": "practical_applicability"}], "paper_keywords": ["probabilistic logic", " inductive logic programming", " theory revision", " compression", " network mining", " biological applications", " statistical relational learning"], "paper_abstract": "ProbLog is a recently introduced probabilistic extension of Prolog (De Raedt, et al. in Proceedings of the 20th international joint conference on artificial intelligence, pp. 2468-2473, 2007). A ProbLog program defines a distribution over logic programs by specifying for each clause the probability that it belongs to a randomly sampled program, and these probabilities are mutually independent. The semantics of ProbLog is then defined by the success probability of a query in a randomly sampled program. This paper introduces the theory compression task for ProbLog, which consists of selecting that subset of clauses of a given ProbLog program that maximizes the likelihood w.r.t. a set of positive and negative examples. Experiments in the context of discovering links in real biological networks demonstrate the practical applicability of the approach.", "paper_title": "Compressing probabilistic Prolog programs", "paper_id": "WOS:000252168900004"}