{"auto_keywords": [{"score": 0.04095437418951115, "phrase": "empirical_software_engineering"}, {"score": 0.009641568853916468, "phrase": "pharmacological_studies"}, {"score": 0.0054359011910728346, "phrase": "eht"}, {"score": 0.00481495049065317, "phrase": "experimental_software_engineering"}, {"score": 0.004656082803151484, "phrase": "equivalence_hypothesis_testing"}, {"score": 0.004299374036140852, "phrase": "statistical_approach"}, {"score": 0.004174929128880472, "phrase": "product_t"}, {"score": 0.004020185355794902, "phrase": "\"_the_approach"}, {"score": 0.003986581218661184, "phrase": "\"null_hypothesis_significance_test"}, {"score": 0.003485437176235259, "phrase": "software_engineering"}, {"score": 0.00299632091372281, "phrase": "side_effects"}, {"score": 0.0029587924529332695, "phrase": "side-effect_free_code"}, {"score": 0.002873038567884343, "phrase": "traditional_statistical_testing"}, {"score": 0.0026749663832497206, "phrase": "uml"}, {"score": 0.002652567705327762, "phrase": "oml"}, {"score": 0.0025974077149412, "phrase": "last_dataset"}, {"score": 0.002532724486603177, "phrase": "specification_methods"}, {"score": 0.0025221012517852885, "phrase": "uml-b"}, {"score": 0.0024081387633065206, "phrase": "additional_conclusions"}, {"score": 0.0023779596230982234, "phrase": "previous_results"}, {"score": 0.0023284972218506157, "phrase": "important_application"}, {"score": 0.0021678771715091492, "phrase": "statistical_confidence"}], "paper_keywords": ["Equivalence hypothesis testing", " Bioequivalence analysis", " Program comprehension", " Side-effect free programs", " Crossover design", " Experimental software engineering"], "paper_abstract": "This article introduces the application of equivalence hypothesis testing (EHT) into the Empirical Software Engineering field. Equivalence (also known as bioequivalence in pharmacological studies) is a statistical approach that answers the question \"is product T equivalent to some other reference product R within some range ?.\" The approach of \"null hypothesis significance test\" used traditionally in Empirical Software Engineering seeks to assess evidence for differences between T and R, not equivalence. In this paper, we explain how EHT can be applied in Software Engineering, thereby extending it from its current application within pharmacological studies, to Empirical Software Engineering. We illustrate the application of EHT to Empirical Software Engineering, by re-examining the behavior of experts and novices when handling code with side effects compared to side-effect free code; a study previously investigated using traditional statistical testing. We also review two other previous published data of software engineering experiments: a dataset compared the comprehension of UML and OML specifications, and the last dataset studied the differences between the specification methods UML-B and B. The application of EHT allows us to extract additional conclusions to the previous results. EHT has an important application in Empirical Software Engineering, which motivate its wider adoption and use: EHT can be used to assess the statistical confidence with which we can claim that two software engineering methods, algorithms of techniques, are equivalent.", "paper_title": "Equivalence hypothesis testing in experimental software engineering", "paper_id": "WOS:000334917700004"}