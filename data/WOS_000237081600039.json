{"auto_keywords": [{"score": 0.03312311024847862, "phrase": "column_filter"}, {"score": 0.03286842857597753, "phrase": "row_filter"}, {"score": 0.03261563907905492, "phrase": "adaptive_filter"}, {"score": 0.026770429832303252, "phrase": "fa"}, {"score": 0.02615296336769688, "phrase": "buffer_size"}, {"score": 0.00481495049065317, "phrase": "data_broadness"}, {"score": 0.004776853267973129, "phrase": "generalized_nearest_neighbors"}, {"score": 0.004720269202737973, "phrase": "data_object"}, {"score": 0.004554488671294504, "phrase": "k-nearest_neighbors"}, {"score": 0.004123781267600542, "phrase": "large_datasets"}, {"score": 0.004091130285858113, "phrase": "multidimensional_objects"}, {"score": 0.002694375425481759, "phrase": "data_point"}, {"score": 0.0026412824985309323, "phrase": "search_space"}, {"score": 0.0025687008721685454, "phrase": "unpromising_objects"}, {"score": 0.0024198379611956584, "phrase": "fo"}, {"score": 0.002138799283553239, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "gnn_problem"}], "paper_keywords": [""], "paper_abstract": "A data object is broad if it is one of the k-Nearest Neighbors (k-NN) of many data objects. We introduce a new database primitive called Generalized Nearest Neighbor (GNN) to express data broadness. We also develop three strategies to answer GNN queries efficiently for large datasets of multidimensional objects. The R*-Tree based search algorithm generates candidate pages and ranks them based on their distances. Our first algorithm, Fetch All (FA), fetches as many candidate pages as possible. Our second algorithm, Fetch One (FO), fetches one candidate page at a time. Our third algorithm, Fetch Dynamic (FD), dynamically decides on the number of pages that needs to be fetched. We also propose three optimizations, Column Filter, Row Filter and Adaptive Filter, to eliminate pages from each dataset. Column Filter prunes the pages that are guaranteed to be non-broad. Row Filter prunes the pages whose removal do not change the broadness of any data point. Adaptive Filter prunes the search space dynamically along each dimension to eliminate unpromising objects. Our experiments show that FA is the fastest when the buffer size is large and FO is the fastest when the buffer size is small. FD is always either fastest or very close to the faster of FA and FO. FD is significantly faster than the existing methods adapted to the GNN problem.", "paper_title": "Finding data broadness via generalized nearest neighbors", "paper_id": "WOS:000237081600039"}