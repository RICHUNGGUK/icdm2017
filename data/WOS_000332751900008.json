{"auto_keywords": [{"score": 0.04344210300251, "phrase": "fault_tolerance"}, {"score": 0.037650280669234266, "phrase": "apgas_model"}, {"score": 0.015719716506582538, "phrase": "apgas_language"}, {"score": 0.004651057147690674, "phrase": "global_address_space"}, {"score": 0.0045599093158915326, "phrase": "programming_model"}, {"score": 0.004492717291734985, "phrase": "unifying_programming"}, {"score": 0.004339744430169516, "phrase": "good_productivity"}, {"score": 0.004009288598277725, "phrase": "single_transient_failure"}, {"score": 0.003507504253087326, "phrase": "first_attempt"}, {"score": 0.003455765987713262, "phrase": "fault_tolerance_support"}, {"score": 0.003176626803985225, "phrase": "fault-tolerance_framework"}, {"score": 0.0030988889679192965, "phrase": "renowned_techniques"}, {"score": 0.003068327486877065, "phrase": "distributed_systems"}, {"score": 0.003038066486989815, "phrase": "distributed_file_systems"}, {"score": 0.0030081072840059306, "phrase": "paxos"}, {"score": 0.0029344771385297137, "phrase": "specific_solutions"}, {"score": 0.0026443691099806003, "phrase": "machine_failures"}, {"score": 0.002618278365749875, "phrase": "different_granularities"}, {"score": 0.002418587525752333, "phrase": "execution_points"}, {"score": 0.002394719113232821, "phrase": "checkpoint_program_states"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Asynchronous partitioned global address space (APGAS)", " Fault tolerance", " X10"], "paper_abstract": "The asynchronous partitioned global address space (APGAS) model is a programming model aiming at unifying programming on multicore and clusters, with good productivity. However, it currently lacks support for fault tolerance (FT) such that a single transient failure may render hours to months of computation useless. In this paper, we thoroughly analyze the feasibility of providing fault tolerance for APGAS model and make the first attempt to add fault tolerance support to an APGAS language called X10. Based on the analysis, we design and implement a fault-tolerance framework called X10-FT that leverages renowned techniques in distributed systems like distributed file systems and Paxos, as well as specific solutions based on the characteristics of the APGAS model to make checkpoints and consensus. This allows the system to transparently handle machine failures at different granularities. Using the features of the APGAS model, we extend the X10 compiler to automatically locate execution points to checkpoint program states without any intervention from programmers. Evaluation using a set of benchmarks shows that the cost for fault tolerance is modest. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "X10-FT: Transparent fault tolerance for APGAS language and runtime", "paper_id": "WOS:000332751900008"}