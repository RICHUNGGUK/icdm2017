{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hash_tables"}, {"score": 0.004735254735115024, "phrase": "finite_buckets"}, {"score": 0.004143196873246147, "phrase": "memory_buckets"}, {"score": 0.0034476484413811987, "phrase": "previous_results"}, {"score": 0.0028926147550022607, "phrase": "dynamic_hash_tables"}, {"score": 0.002728166176898539, "phrase": "tight_upper_and_lower_bounds"}, {"score": 0.002660574167091781, "phrase": "achievable_overflow_fractions"}, {"score": 0.0024065032567542107, "phrase": "content-addressable_memory"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["High-Speed networks", " Queuing theory and analysis", " Dynamic hash tables"], "paper_abstract": "We show that when memory is bounded, i.e. memory buckets are finite, dynamic hash tables that allow insertions and deletions behave significantly worse than their static counterparts that only allow insertions. This behavior differs from previous results in which, when memory is unbounded, the two models behave similarly. We show the decrease in performance in dynamic hash tables using several hash-table schemes. We also provide tight upper and lower bounds on the achievable overflow fractions in these schemes. Finally, we propose an architecture with content-addressable memory (CAM), which mitigates this decrease in performance. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Hash tables with finite buckets are less resistant to deletions", "paper_id": "WOS:000302760600015"}