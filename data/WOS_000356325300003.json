{"auto_keywords": [{"score": 0.044153285887083546, "phrase": "gedf"}, {"score": 0.013436609990598793, "phrase": "parallel_tasks"}, {"score": 0.007720870500978718, "phrase": "global_earliest_deadline"}, {"score": 0.005102866876117937, "phrase": "pgedf"}, {"score": 0.00481495049065317, "phrase": "parallel_real-time_tasks"}, {"score": 0.004592905436175987, "phrase": "real-time_programs"}, {"score": 0.0045160988337296605, "phrase": "intra-task_parallelism"}, {"score": 0.004440570928903645, "phrase": "computation-intensive_applications"}, {"score": 0.004150829420202823, "phrase": "task_sets"}, {"score": 0.003986103192038901, "phrase": "directed_acyclic_graph"}, {"score": 0.0038930368103015467, "phrase": "computational_work"}, {"score": 0.0036635429301869527, "phrase": "capacity_augmentation"}, {"score": 0.0036022217019257598, "phrase": "resource_augmentation"}, {"score": 0.0034708912871162464, "phrase": "linear-time_schedulability_test"}, {"score": 0.0033669963955215427, "phrase": "total_utilization"}, {"score": 0.003299460925313939, "phrase": "task's_critical-path_length"}, {"score": 0.0031791333962016507, "phrase": "gedf."}, {"score": 0.003104849179057156, "phrase": "pseudo-polynomial_time_fixed-point_schedulability_test"}, {"score": 0.0030220695120265974, "phrase": "carry-in_work_calculation"}, {"score": 0.002648974977491828, "phrase": "gnu_openmp_runtime_system"}, {"score": 0.0026222551419772867, "phrase": "operating_system"}, {"score": 0.002552309172078995, "phrase": "parallel_openmp_tasks"}, {"score": 0.002526561920777972, "phrase": "real-time_parameters"}, {"score": 0.0023139986108451946, "phrase": "numerical_simulations"}, {"score": 0.0022984065518052476, "phrase": "dag_tasks"}, {"score": 0.0022446552199168472, "phrase": "randomly_generated_tasks"}, {"score": 0.002229529362571334, "phrase": "pgedf."}, {"score": 0.002126458181856629, "phrase": "existing_scheduling_techniques"}, {"score": 0.0021049977753042253, "phrase": "task_decomposition"}], "paper_keywords": ["Real-time scheduling", " Parallel scheduling", " Global EDF", " Resource augmentation bound", " Capacity augmentation bound"], "paper_abstract": "As multicore processors become ever more prevalent, it is important for real-time programs to take advantage of intra-task parallelism in order to support computation-intensive applications with tight deadlines. In this paper, we consider the global earliest deadline first (GEDF) scheduling policy for task sets consisting of parallel tasks. Each task can be represented by a directed acyclic graph (DAG) where nodes represent computational work and edges represent dependences between nodes. In this model, we prove that GEDF provides a capacity augmentation bound of and a resource augmentation bound of . The capacity augmentation bound acts as a linear-time schedulability test since it guarantees that any task set with total utilization of at most where each task's critical-path length is at most of its deadline is schedulable on cores under GEDF. In addition, we present a pseudo-polynomial time fixed-point schedulability test for GEDF; this test uses a carry-in work calculation based on the proof for the capacity bound. Finally, we present and evaluate a prototype platform-called PGEDF-for scheduling parallel tasks using global earliest deadline first (GEDF). PGEDF is built by combining the GNU OpenMP runtime system and the operating system. This platform allows programmers to write parallel OpenMP tasks and specify real-time parameters such as deadlines for tasks. We perform two kinds of experiments to evaluate the performance of GEDF for parallel tasks. (1) We run numerical simulations for DAG tasks. (2) We execute randomly generated tasks using PGEDF. Both sets of experiments indicate that GEDF performs surprisingly well and outperforms an existing scheduling techniques that involves task decomposition.", "paper_title": "Global EDF scheduling for parallel real-time tasks", "paper_id": "WOS:000356325300003"}