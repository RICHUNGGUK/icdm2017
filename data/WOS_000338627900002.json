{"auto_keywords": [{"score": 0.04922237591220714, "phrase": "local_reconfiguration"}, {"score": 0.010365377380249629, "phrase": "communication_cost"}, {"score": 0.00481495049065317, "phrase": "multi-application_network-on-chip_design"}, {"score": 0.004771672073078768, "phrase": "global_mapping"}, {"score": 0.004243064277617193, "phrase": "neighboring_routers"}, {"score": 0.00414830454375092, "phrase": "currently_executing_application"}, {"score": 0.0034623203126093833, "phrase": "two-phase_procedure"}, {"score": 0.003400274964240732, "phrase": "first_phase"}, {"score": 0.003309278541665552, "phrase": "combined_application"}, {"score": 0.003220709449062307, "phrase": "individual_routers"}, {"score": 0.0031062822219953524, "phrase": "second_phase"}, {"score": 0.0029959082125682918, "phrase": "individual_cores"}, {"score": 0.0027741761880779535, "phrase": "integer_linear_programming"}, {"score": 0.0026514845055487573, "phrase": "ilp"}, {"score": 0.002627587221594597, "phrase": "large_amount"}, {"score": 0.002603918128553617, "phrase": "cpu_time"}, {"score": 0.002522738549524317, "phrase": "particle_swarm_optimization"}, {"score": 0.0024220634963019114, "phrase": "heuristic_approach"}, {"score": 0.0022631003204259224, "phrase": "network_energy"}, {"score": 0.0021049977753042253, "phrase": "significant_improvement"}], "paper_keywords": ["Combined core graph", " reconfiguration", " integer linear programming", " particle swarm optimization"], "paper_abstract": "This article proposes a reconfigurable Network-on-Chip (NoC) architecture based on mesh topology. It provides a local reconfiguration of cores to connect to any of the neighboring routers, depending upon the currently executing application. The area overhead for this local reconfiguration has been shown to be very small. We have also presented the strategy to map the cores of an application set onto this architecture. This has been achieved via a two-phase procedure. In the first phase, the cores of the combined application set are mapped tentatively to individual routers, minimizing the communication cost. In the second phase, for each application, positions of individual cores are finalized. A core gets attached to any neighbor of its tentative allocation. We have proposed Integer Linear Programming (ILP) formulation of both the phases. Since ILP takes large amount of CPU time, we have also formulated a Particle Swarm Optimization (PSO)-based solution for the two phases. A heuristic approach has also been developed for the reconfiguration. Comparison of communication cost, latency and network energy have been carried out for the applications, before and after reconfiguration. It shows significant improvement in performance via reconfiguration.", "paper_title": "Multi-Application Network-on-Chip Design using Global Mapping and Local Reconfiguration", "paper_id": "WOS:000338627900002"}