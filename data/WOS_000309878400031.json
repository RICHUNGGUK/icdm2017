{"auto_keywords": [{"score": 0.026455065021608513, "phrase": "proposed_algorithm"}, {"score": 0.015719716506582538, "phrase": "robotic_arms"}, {"score": 0.00950643157445424, "phrase": "least_example"}, {"score": 0.0047650691627251825, "phrase": "major_contributions"}, {"score": 0.004523272849033429, "phrase": "collisions_detector_algorithm"}, {"score": 0.004476399615305783, "phrase": "modified_gilbert-johnson-keerthi_algorithm"}, {"score": 0.004399349717218995, "phrase": "proposed_gjk_algorithm"}, {"score": 0.00435375504298636, "phrase": "different_distance"}, {"score": 0.0042936938318884335, "phrase": "gjk"}, {"score": 0.004190563478825626, "phrase": "last_example"}, {"score": 0.004147123642915346, "phrase": "gjk_distance_algorithm"}, {"score": 0.003240349178289032, "phrase": "transelevator_robotic_arm"}, {"score": 0.002630085891013006, "phrase": "new_trajectory_planning_algorithm"}, {"score": 0.002575756583567029, "phrase": "n_periods"}, {"score": 0.0022567398334877847, "phrase": "better_trajectory"}, {"score": 0.002225542510652775, "phrase": "previous_algorithms"}, {"score": 0.002171979107594173, "phrase": "planning_algorithm"}, {"score": 0.0021049977753042253, "phrase": "proposed_trajectory_planning_algorithm"}], "paper_keywords": ["Collisions detector algorithm", " Distance algorithm", " Cycle of work algorithm", " Trajectory planning algorithm"], "paper_abstract": "The major contributions of this paper are as follows: (1) the Gilbert-Johnson-Keerthi (GJK) algorithm is a collisions detector algorithm, a modified Gilbert-Johnson-Keerthi algorithm is presented, the proposed GJK algorithm uses a different distance, (2) some examples of GJK algorithm are presented, in the last example, the GJK distance algorithm is used to detect the collisions of a camera with its environment inside of a warehouse, the camera cannot cross any part of the structure of the warehouse, the camera needs to go around the structure, when the camera touches the structure, the camera goes to the right or to the left, (3) the time used in a cycle of work of the transelevator robotic arm is presented, it can be extended to other kind of robotic arms, (4) some examples of the time used in a cycle of work are presented, in the least example, the algorithm is used to control the time needed for the transelevator to go from one place to other one, (5) this paper presents a new trajectory planning algorithm which divides the trajectory in n periods, when n is equal to 2, the proposed algorithm is the same as other algorithms, but for n higher than 2, the proposed algorithm gives other optional trajectories, so the proposed algorithm lets the designer to take a better trajectory than with the previous algorithms, (6) some examples of the proposed trajectories planning algorithm are presented, in the least example, the proposed trajectory planning algorithm is used to control the movements of a transelevator inside of a warehouse.", "paper_title": "Trajectory planning and collisions detector for robotic arms", "paper_id": "WOS:000309878400031"}