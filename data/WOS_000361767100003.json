{"auto_keywords": [{"score": 0.04958098637053369, "phrase": "end-user_programmers"}, {"score": 0.04811643643051334, "phrase": "devs"}, {"score": 0.0350324069452637, "phrase": "visual_interfaces"}, {"score": 0.00481495049065317, "phrase": "devs_visual_interfaces"}, {"score": 0.004666228956744244, "phrase": "discrete_event_system_specification"}, {"score": 0.004522080178250592, "phrase": "recent_decades"}, {"score": 0.004475022550508119, "phrase": "systems_engineers"}, {"score": 0.004405348628112645, "phrase": "scalable_approach"}, {"score": 0.00386519448487341, "phrase": "devs_theory"}, {"score": 0.0037653554368382814, "phrase": "learning_barriers"}, {"score": 0.0034088473318056537, "phrase": "human-computer_interaction"}, {"score": 0.0031348622158167195, "phrase": "first_step"}, {"score": 0.002693018258362651, "phrase": "devs_models"}, {"score": 0.0026649432435828842, "phrase": "simulation_runs"}, {"score": 0.0026096659285441384, "phrase": "interface_designs"}, {"score": 0.0024377918036784336, "phrase": "information_artifacts"}, {"score": 0.0023133055945761235, "phrase": "generally_applicable_design_process"}, {"score": 0.002253461585851626, "phrase": "interactive_formalism-based_simulation_environments"}, {"score": 0.0021049977753042253, "phrase": "simulation_formalisms"}], "paper_keywords": ["Discrete-event simulation", " end-user programming", " visual programming", " cognitive dimensions"], "paper_abstract": "Although the Discrete Event System specification (DEVS) has over recent decades provided systems engineers with a scalable approach to modeling and simulation, the formalism has seen little uptake in many other disciplines where it could be equally useful. Our observations of end-user programmers confronted with DEVS theory or software suggest that learning barriers are largely responsible for this lack of utilization. To address these barriers, we apply ideas from human-computer interaction to the design of visual interfaces intended to promote their users' effective knowledge of essential DEVS concepts. The first step is to propose a set of names that make these concepts easier to learn. We then design and provide rationale for visual interfaces for interacting with various elements of DEVS models and simulation runs. Both the names and interface designs are evaluated using the Cognitive Dimensions of Notations framework, which emphasizes trade-offs between 14 aspects of information artifacts. As a whole, this work illustrates a generally applicable design process for the development of interactive formalism-based simulation environments that are learnable and usable to those who are not experts in simulation formalisms.", "paper_title": "Designing DEVS visual interfaces for end-user programmers", "paper_id": "WOS:000361767100003"}