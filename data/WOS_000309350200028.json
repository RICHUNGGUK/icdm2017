{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "breadth-first_search"}, {"score": 0.0038810583785936505, "phrase": "computation_resources"}, {"score": 0.003677280504320636, "phrase": "available_parallelism"}, {"score": 0.002262209824105154, "phrase": "tbb_based_multi-threading_cpu_version"}, {"score": 0.0022019274077124795, "phrase": "previous_most_effective_gpu_version"}, {"score": 0.0021049977753042253, "phrase": "input_graphs"}], "paper_keywords": ["Algorithms", " Performance", " Graph algorithms", " Breadth-first Search", " CUDA", " GPGPU"], "paper_abstract": "In this paper, we present FlexBFS, a parallelism-aware implementation for breadth-first search on GPU. Our implementation can adjust the computation resources according to the feedback of available parallelism dynamically. We also optimized our program in three ways: (1) a simplified two-level queue management,(2) a combined kernel strategy and (3) a high-degree vertices specialization approach. Our experimental results show that it can achieve 3 similar to 20 times speedup against the fastest serial version, and can outperform the TBB based multi-threading CPU version and the previous most effective GPU version on all types of input graphs.", "paper_title": "FlexBFS: A Parallelism-aware Implementation of Breadth-First Search on GPU", "paper_id": "WOS:000309350200028"}