{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stateflow_charts"}, {"score": 0.004753194996637899, "phrase": "simulink_block_diagrams"}, {"score": 0.004513957235071457, "phrase": "control_systems"}, {"score": 0.004398872331144531, "phrase": "particular_interest"}, {"score": 0.004286708921931472, "phrase": "stateflow_blocks"}, {"score": 0.00409723267214392, "phrase": "separate_charts"}, {"score": 0.003992729692096799, "phrase": "formal_reasoning"}, {"score": 0.003623949225126944, "phrase": "formal_verification"}, {"score": 0.0035087260813209593, "phrase": "refinement-based_semantics"}, {"score": 0.0033971539563683174, "phrase": "extensive_subset"}, {"score": 0.0026743419827100225, "phrase": "informal_description"}, {"score": 0.002260301305523054, "phrase": "solid_foundation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Simulink", " Circus", " Formal semantics", " Verification", " Tools"], "paper_abstract": "Simulink block diagrams are widely used in industry for specifying control systems, and of particular interest and complexity are Stateflow blocks, which are themselves defined by separate charts. To make formal reasoning about diagrams and charts possible, we need to formalise their semantics; for the formal verification of their implementations, a refinement-based semantics is appropriate. An extensive subset of Simulink has been formalised in a language for refinement, namely, Circus, and here, we propose an approach to cover Stateflow charts. Our models are distinctive in their operational nature, which closely reflects the informal description of the Stateflow (simulation) semantics. We describe, formalise, and automate a strategy to generate our Circus models. The result is a solid foundation for reasoning based on refinement. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Refinement-oriented models of Stateflow charts", "paper_id": "WOS:000306889800007"}