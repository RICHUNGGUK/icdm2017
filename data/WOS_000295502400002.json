{"auto_keywords": [{"score": 0.04080705021857226, "phrase": "proposed_algorithm"}, {"score": 0.015719716506582538, "phrase": "modular_multiplication"}, {"score": 0.004620093797504386, "phrase": "new_modular_multiplication_algorithm"}, {"score": 0.00443308765153716, "phrase": "modular_multiplications"}, {"score": 0.004253618550301311, "phrase": "systematic_approach"}, {"score": 0.0036052633308076933, "phrase": "barrett_reduction"}, {"score": 0.003459191419478298, "phrase": "montgomery_reduction"}, {"score": 0.0033883824438527316, "phrase": "karatsuba_multiplication_algorithms"}, {"score": 0.0032510690712452147, "phrase": "computational_complexity"}, {"score": 0.0031193028729331667, "phrase": "parallel_processing"}, {"score": 0.0029518598926717332, "phrase": "hardware_implementations"}, {"score": 0.0029114187110123105, "phrase": "software_implementations"}, {"score": 0.002851790448644913, "phrase": "multiprocessor_environment"}, {"score": 0.002518746501941657, "phrase": "performance_results"}, {"score": 0.00241658945942583, "phrase": "modular_multiplier"}, {"score": 0.002318566141177149, "phrase": "higher_speed"}, {"score": 0.002255431275670053, "phrase": "modular_multipliers"}, {"score": 0.002194011800331242, "phrase": "previously_proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Modular multiplication", " Barrett reduction", " Karatsuba multiplication", " Montgomery reduction", " Public-key cryptography"], "paper_abstract": "This paper presents a new modular multiplication algorithm that allows one to implement modular multiplications efficiently. It proposes a systematic approach for maximizing a level of parallelism when performing a modular multiplication. The proposed algorithm effectively integrates three different existing algorithms, a classical modular multiplication based on Barrett reduction, the modular multiplication with Montgomery reduction and the Karatsuba multiplication algorithms in order to reduce the computational complexity and increase the potential of parallel processing. The algorithm is suitable for both hardware implementations and software implementations in a multiprocessor environment. To show the effectiveness of the proposed algorithm, we implement several hardware modular multipliers and compare the area and performance results. We show that a modular multiplier using the proposed algorithm achieves a higher speed comparing to the modular multipliers based on the previously proposed algorithms. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Tripartite modular multiplication", "paper_id": "WOS:000295502400002"}