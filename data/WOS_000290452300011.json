{"auto_keywords": [{"score": 0.0344525139183746, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "memory_access_optimized_implementation"}, {"score": 0.004533685795068016, "phrase": "gpgpu._software"}, {"score": 0.004508942069742167, "phrase": "based_decoding"}, {"score": 0.004459857205489101, "phrase": "low-density_parity-check"}, {"score": 0.003975515793563275, "phrase": "massively_parallel_processing"}, {"score": 0.0037226570791514184, "phrase": "ldpc_decoding"}, {"score": 0.003661987063211563, "phrase": "parity-check_matrix_h"}, {"score": 0.003524227590204673, "phrase": "node_updating_process"}, {"score": 0.0031240075437664314, "phrase": "code_length"}, {"score": 0.0028932554846476718, "phrase": "parity-check_matrix"}, {"score": 0.0027691111795848183, "phrase": "ldpc_codes"}, {"score": 0.002664850766529523, "phrase": "periodic_property"}, {"score": 0.002564505790176378, "phrase": "vacant_elements"}, {"score": 0.0024951467586005094, "phrase": "sparse_message_arrays"}, {"score": 0.0024410093024417527, "phrase": "coalesced_access"}, {"score": 0.0024143815950383647, "phrase": "global_memory"}, {"score": 0.002349073225500705, "phrase": "regular_projective_geometry"}, {"score": 0.002285527382381719, "phrase": "irregular_qc_ldpc_codes"}, {"score": 0.0022359278646792153, "phrase": "sum-product_algorithm"}, {"score": 0.0021049977753042253, "phrase": "considerable_speed-up_results"}], "paper_keywords": ["Low-density parity-check (LDPC) codes", " Compute Unified Device Architecture (CUDA)", " General Purpose Graphics Processing Unit (GPGPU)", " Memory access optimization"], "paper_abstract": "Software based decoding of low-density parity-check (LDPC) codes frequently takes very long time, thus the general purpose graphics processing units (GPGPUs) that support massively parallel processing can be very useful for speeding up the simulation. In LDPC decoding, the parity-check matrix H needs to be accessed at every node updating process, and the size of the matrix is often larger than that of GPU on-chip memory especially when the code length is long or the weight is high. In this work, the parity-check matrix of cyclic or quasi-cyclic (QC) LDPC codes is greatly compressed by exploiting the periodic property of the matrix. Also, vacant elements are eliminated from the sparse message arrays to utilize the coalesced access of global memory supported by GPGPUs. Regular projective geometry (PG) and irregular QC LDPC codes are used for sum-product algorithm based decoding with the GTX-285 NVIDIA graphics processing unit (GPU), and considerable speed-up results are obtained.", "paper_title": "Memory Access Optimized Implementation of Cyclic and Quasi-Cyclic LDPC Codes on a GPGPU", "paper_id": "WOS:000290452300011"}