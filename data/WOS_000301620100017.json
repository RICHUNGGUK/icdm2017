{"auto_keywords": [{"score": 0.04890702046127256, "phrase": "temporal_logics"}, {"score": 0.00481495049065317, "phrase": "expressive_power"}, {"score": 0.00418387341007444, "phrase": "past-time_operators"}, {"score": 0.0038518661517315533, "phrase": "branching-time_model"}, {"score": 0.0036653985479652854, "phrase": "first_view"}, {"score": 0.0031582637043009562, "phrase": "second_view"}, {"score": 0.002789528662623221, "phrase": "unique_past"}, {"score": 0.00240328454980006, "phrase": "specification_languages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Temporal logic", " Past-time operators", " Expressive power", " Decision procedures", " Alternating automata"], "paper_abstract": "It has long been known that past-time operators add no expressive power to linear temporal logics. In this paper, we consider the extension of branching temporal logics with past-time operators. Two possible views regarding the nature of past in a branching-time model induce two different such extensions. In the first view, past is branching and each moment in time may have several possible futures and several possible pasts. In the second view, past is linear and each moment in time may have several possible futures and a unique past. Both views assume that past is finite. We discuss the practice of these extensions as specification languages, characterize their expressive power, and examine the complexity of their model-checking and satisfiability problems. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Once and for all", "paper_id": "WOS:000301620100017"}