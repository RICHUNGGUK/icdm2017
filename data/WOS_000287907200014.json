{"auto_keywords": [{"score": 0.046800023565389516, "phrase": "temporal_violations"}, {"score": 0.032501446262619214, "phrase": "fine-grained_temporal_violations"}, {"score": 0.026541441275547792, "phrase": "example_framework"}, {"score": 0.00481495049065317, "phrase": "automatic_and_cost-effective_handling"}, {"score": 0.004680473391946691, "phrase": "scientific_workflow_systems"}, {"score": 0.004571269461883144, "phrase": "complex_nature"}, {"score": 0.004528301408585875, "phrase": "scientific_workflow_environments"}, {"score": 0.004238576355081601, "phrase": "execution's_results"}, {"score": 0.004100712177044264, "phrase": "automatic_and_cost-effective_fashion"}, {"score": 0.0038930368103015467, "phrase": "fine-grained_recoverable_temporal_violations"}, {"score": 0.003802135020791801, "phrase": "light-weight_effective_exception"}, {"score": 0.0035085965086415474, "phrase": "comprehensive_framework"}, {"score": 0.0032223742018434856, "phrase": "recoverable_temporal_violations"}, {"score": 0.0031769866037536045, "phrase": "novel_general_automatic_and_cost-effective_exception_handling_framework"}, {"score": 0.002987557906013826, "phrase": "empirical_function"}, {"score": 0.002931569771634119, "phrase": "lower_bounds"}, {"score": 0.002782938683493689, "phrase": "representative_case_study"}, {"score": 0.0027437235598539904, "phrase": "concrete_example_exception_handling_framework"}, {"score": 0.002449208093757498, "phrase": "large_scale_simulation_experiments"}, {"score": 0.00240328454980006, "phrase": "swindew-g_scientific_grid_workflow_system"}, {"score": 0.002259883463607508, "phrase": "overall_average_violation_rates"}, {"score": 0.0022385926290967263, "phrase": "local_temporal_constraints"}, {"score": 0.0022175019341824603, "phrase": "global_temporal_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Temporal violation", " Exception handling", " Scientific workflow", " Workflow rescheduling", " Workflow QoS", " Temporal verification"], "paper_abstract": "Due to the complex nature of scientific workflow environments, temporal violations often take place and may severely reduce the timeliness of the execution's results. To handle temporal violations in an automatic and cost-effective fashion, two interdependent fundamental issues viz, the definition of fine-grained recoverable temporal violations and the design of light-weight effective exception handling strategies need to be resolved. However, most existing works study them separately without defining a comprehensive framework. To address such a problem, with the probability based temporal consistency model which defines the range of recoverable temporal violations, a novel general automatic and cost-effective exception handling framework is proposed in this paper where fine-grained temporal violations are defined based on the empirical function for the capability lower bounds of the exception handling strategies. To serve as a representative case study, a concrete example exception handling framework which consists of three levels of fine-grained temporal violations and their corresponding exception handling strategies is presented. The effectiveness of the example framework is evaluated by large scale simulation experiments conducted in the SwinDeW-G scientific grid workflow system. The experimental results demonstrate that the example framework can significantly reduce the overall average violation rates of local temporal constraints and global temporal constraints to 0.127% and 0.167% respectively. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A novel general framework for automatic and cost-effective handling of recoverable temporal violations in scientific workflow systems", "paper_id": "WOS:000287907200014"}