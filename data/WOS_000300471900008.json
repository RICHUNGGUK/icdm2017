{"auto_keywords": [{"score": 0.04327082016500875, "phrase": "local_memories"}, {"score": 0.03512271130246494, "phrase": "data_sharing"}, {"score": 0.00481495049065317, "phrase": "memory-access-driven_context"}, {"score": 0.004724020632103649, "phrase": "window-based_image_processing"}, {"score": 0.00454725669814484, "phrase": "accelerator_cores"}, {"score": 0.004489810932879285, "phrase": "low-power_heterogeneous_processors"}, {"score": 0.00443308765153716, "phrase": "on-chip_local_memories"}, {"score": 0.004213240903095234, "phrase": "memory_capacities"}, {"score": 0.00378145978325955, "phrase": "global_memory"}, {"score": 0.003593812067062062, "phrase": "data_transfers"}, {"score": 0.0034154440860550564, "phrase": "memory_allocation_technique"}, {"score": 0.0032666255024083983, "phrase": "good_solution"}, {"score": 0.0030847461428168614, "phrase": "reconfigurable_cores"}, {"score": 0.002931569771634119, "phrase": "multiple_contexts"}, {"score": 0.002857849698346116, "phrase": "conventional_context"}, {"score": 0.0027159094186967247, "phrase": "limited_hardware_resources"}, {"score": 0.0026815368507715, "phrase": "different_time_slots"}, {"score": 0.0023309080951251335, "phrase": "local_memory_data"}, {"score": 0.0022578275190855124, "phrase": "experimental_results"}, {"score": 0.002215081186105616, "phrase": "proposed_method"}, {"score": 0.0021731423856364003, "phrase": "processing_time"}, {"score": 0.0021049977753042253, "phrase": "conventional_context_partitioning_techniques"}], "paper_keywords": ["memory allocation", " partitioning", " reconfigurable processors"], "paper_abstract": "Accelerator cores in low-power heterogeneous processors have on-chip local memories to enable parallel data access. The memory capacities of the local memories are very small. Therefore, the data should be transferred from the global memory to the local memories many times. These data transfers greatly increase the total processing time. Memory allocation technique to increase the data sharing is a good solution to this problem. However, when using reconfigurable cores, the data must be shared among multiple contexts. However, conventional context partitioning methods only consider how to reuse limited hardware resources in different time slots. They do not consider the data sharing. This paper proposes a context partitioning method to share both the hardware resources and the local memory data. According to the experimental results, the proposed method reduces the processing time by more than 87% compared to conventional context partitioning techniques.", "paper_title": "Memory-Access-Driven Context Partitioning for Window-Based Image Processing on Heterogeneous Multicore Processors", "paper_id": "WOS:000300471900008"}