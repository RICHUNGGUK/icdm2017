{"auto_keywords": [{"score": 0.03864160324244302, "phrase": "fc"}, {"score": 0.00481495049065317, "phrase": "constrained_memory_resources"}, {"score": 0.004736820055728928, "phrase": "test-pattern_generators"}, {"score": 0.00447316895126645, "phrase": "arithmetic_operations"}, {"score": 0.004329124434198367, "phrase": "cost-effective_built-in_self-test_solutions"}, {"score": 0.004021689117050817, "phrase": "pseudorandom_tpgs"}, {"score": 0.003956379470617348, "phrase": "arithmetic_tpgs"}, {"score": 0.003797690272118125, "phrase": "high_levels"}, {"score": 0.003736004578001584, "phrase": "fault_coverage"}, {"score": 0.003250403288147613, "phrase": "effective_reseeding_strategy"}, {"score": 0.003145609726536791, "phrase": "specified_fc_level"}, {"score": 0.003069230909006614, "phrase": "proposed_methodology"}, {"score": 0.002994701080666466, "phrase": "total_test_time"}, {"score": 0.002500571634075998, "phrase": "binary_search"}, {"score": 0.0024001337476063094, "phrase": "seed_selection"}, {"score": 0.002322689143237591, "phrase": "benchmark_circuits"}, {"score": 0.0022477377970612847, "phrase": "average_reduction"}, {"score": 0.0021751997984619585, "phrase": "test_time"}], "paper_keywords": ["Index Terms-Arithmetic built-in self-test (BIST)", " arithmetic", " logic unit (ALU)", " datapath", " embedded processor", " system on chip", " test-pattern generator (TPG)."], "paper_abstract": "Test-pattern generators (TPGs), based on arithmetic operations, are becoming cost-effective built-in self-test solutions for circuits with embedded processors. Similar to pseudorandom TPGs, arithmetic TPGs use reseeding to reach high levels of fault coverage (FC). In this paper, we propose a method of searching for an effective reseeding strategy, guaranteeing a specified FC level. The proposed methodology minimizes the total test time under the constraint of. the total memory resource allocated to store the seeds. The minimization is performed by a binary search that speeds up the seed selection. Experiments with benchmark circuits have shown an average reduction of 43.47% in test time compared with the three previous methodologies.", "paper_title": "Minimizing test time in arithmetic, test-pattern generators with constrained memory resources", "paper_id": "WOS:000250415500012"}