{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_and_adaptive_scientific_computing"}, {"score": 0.004265354774450696, "phrase": "mathematically_rigorous_definition"}, {"score": 0.003948613642680196, "phrase": "partial_differential_equations"}, {"score": 0.003820144626025562, "phrase": "previous_approaches"}, {"score": 0.0031669873302916, "phrase": "hierarchical_structure"}, {"score": 0.002931569771634119, "phrase": "geometric_multigrid_algorithms"}, {"score": 0.0028675712105299496, "phrase": "hierarchical_local_grid_refinement"}, {"score": 0.0025678829712650437, "phrase": "geometrically_non-conforming_grids"}, {"score": 0.0021520139248317333, "phrase": "abstract_grid_interface"}], "paper_keywords": ["DUNE", " hierarchical grids", " interface", " finite elements", " finite volumes", " entity complex", " geometric realization", " father relation", " index maps", " parallelization"], "paper_abstract": "We give a mathematically rigorous definition of a grid for algorithms solving partial differential equations. Unlike previous approaches (Benger 2005, PhD thesis; Berti 2000, PhD thesis), our grids have a hierarchical structure. This makes them suitable for geometric multigrid algorithms and hierarchical local grid refinement. The description is also general enough to include geometrically non-conforming grids. The definitions in this article serve as the basis for an implementation of an abstract grid interface as C++ classes in the framework (Bastian et al. 2008, this issue).", "paper_title": "A generic grid interface for parallel and adaptive scientific computing. Part I: abstract framework", "paper_id": "WOS:000257750700001"}