{"auto_keywords": [{"score": 0.03896379046637174, "phrase": "energy_consumption"}, {"score": 0.028080211011774155, "phrase": "avs_memories"}, {"score": 0.00481495049065317, "phrase": "unified_data_cache"}, {"score": 0.004734448316824488, "phrase": "architecturally_visible_storage"}, {"score": 0.004655285779819366, "phrase": "instruction_set_extensions"}, {"score": 0.004425616928975799, "phrase": "simple_architectural_modification"}, {"score": 0.004315048553208003, "phrase": "cache-based_processor"}, {"score": 0.004171891198117434, "phrase": "data_bandwidth"}, {"score": 0.0040334640350288, "phrase": "application-specific_instruction_set_extensions"}, {"score": 0.0035539019235553897, "phrase": "higher_bandwidth"}, {"score": 0.003378385493203297, "phrase": "processor's_register_file"}, {"score": 0.0031577303835881964, "phrase": "separate_memories"}, {"score": 0.00257831812581194, "phrase": "processor's_data_cache"}, {"score": 0.002450864311898833, "phrase": "way_stealing"}, {"score": 0.0021049977753042253, "phrase": "data_cache"}], "paper_keywords": ["Architecturally visible storage (AVS)", " customizable processor", " data cache", " instruction set extension (ISE)", " Way Stealing"], "paper_abstract": "Way Stealing is a simple architectural modification to a cache-based processor that increases the data bandwidth to and from application-specific instruction set extensions (ISEs), which increase performance and reduce energy consumption. Way Stealing offers higher bandwidth than interfacing the ISEs the processor's register file, and eliminates the need to allocate separate memories called architecturally visible storage (AVS) that are dedicated to the ISEs, and to ensure coherence between the AVS memories and the processor's data cache. Our results show that Way Stealing is competitive in terms of performance and energy consumption with other techniques that use AVS memories in conjunction with a data cache.", "paper_title": "Way Stealing: A Unified Data Cache and Architecturally Visible Storage for Instruction Set Extensions", "paper_id": "WOS:000329067400006"}