{"auto_keywords": [{"score": 0.04926889079413175, "phrase": "embedding_constraint"}, {"score": 0.03714965378696057, "phrase": "mathematical_model"}, {"score": 0.0363002347977913, "phrase": "worst_case_complexity"}, {"score": 0.004685224205630963, "phrase": "increasing_need"}, {"score": 0.004512512374933493, "phrase": "data_objects"}, {"score": 0.004346139434813299, "phrase": "structure_comparison_among_semi-structured_data_objects"}, {"score": 0.004214569581360156, "phrase": "tree_mining"}, {"score": 0.004157374465795314, "phrase": "considerable_amount"}, {"score": 0.0040591367766929344, "phrase": "xml_mining"}, {"score": 0.0037267877774290374, "phrase": "labeled_trees"}, {"score": 0.00365114510725007, "phrase": "efficient_tree_model_guided"}, {"score": 0.003626296096657491, "phrase": "tmg"}, {"score": 0.0036015684625793775, "phrase": "candidate_enumeration_approach"}, {"score": 0.0034215569542785907, "phrase": "embedded_subtree_mining"}, {"score": 0.0033635683594830158, "phrase": "computationally_impractical_situations"}, {"score": 0.0032616462517547477, "phrase": "mining_process"}, {"score": 0.003056475095474338, "phrase": "mining_embedded_subtrees"}, {"score": 0.002873986510042009, "phrase": "frequent_embedded_subtrees"}, {"score": 0.002620424858132324, "phrase": "alternative_implementations"}, {"score": 0.0025236349164549877, "phrase": "better_efficiency"}, {"score": 0.002364777610365689, "phrase": "induced_subtree_mining"}, {"score": 0.002308800317961002, "phrase": "theoretical_analysis"}, {"score": 0.002293051006249274, "phrase": "induced-embedded_subtree_relationships"}, {"score": 0.002246443296542436, "phrase": "frequent_subtree_mining"}, {"score": 0.0022234951091677085, "phrase": "synthetic_and_real_world_data"}, {"score": 0.002170854875902186, "phrase": "time_efficiency"}], "paper_keywords": ["Algorithms", " Performance", " Experimentation", " Tree Mining", " TreeMiner", " FREQT", " TMG", " Tree Model Guided"], "paper_abstract": "The increasing need for representing information through more complex structures where semantics and relationships among data objects can be more easily expressed has resulted in many semi-structured data sources. Structure comparison among semi-structured data objects can often reveal valuable information, and hence tree mining has gained a considerable amount of interest in areas such as XML mining, Bioinformatics, Web mining etc. We are primarily concerned with the task of mining frequent ordered induced and embedded subtrees from a database of rooted ordered labeled trees. Our previous contributions consist of the efficient Tree Model Guided (TMG) candidate enumeration approach for which we developed a mathematical model that provides an estimate of the worst case complexity for embedded subtree mining. This potentially reveals computationally impractical situations where one would be forced to constrain the mining process in some way so that at least some patterns can be discovered. This motivated our strategy of tackling the complexity of mining embedded subtrees by introducing the Level of Embedding constraint. Thus, when it is too costly to mine all frequent embedded subtrees, one can decrease the level of embedding constraint gradually down to 1, from which all the obtained frequent subtrees are induced subtrees. In this paper we develop alternative implementations and propose two algorithms MB3-(R) and iMB3-(R), which achieve better efficiency in terms of time and space. Furthermore, we develop a mathematical model for estimating the worst case complexity for induced subtree mining. It is accompanied with a theoretical analysis of induced-embedded subtree relationships in terms of complexity for frequent subtree mining. Using synthetic and real world data we practically demonstrate the space and time efficiency of our new approach and provide some comparisons to the two well know algorithms for mining induced and embedded subtrees.", "paper_title": "Mining Induced/Embedded Subtrees using the Level of Embedding Constraint", "paper_id": "WOS:000306523400004"}