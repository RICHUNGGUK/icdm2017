{"auto_keywords": [{"score": 0.040297439457126535, "phrase": "web_services"}, {"score": 0.00481495049065317, "phrase": "white-box_testing"}, {"score": 0.0047747348769918, "phrase": "service_oriented_architectures"}, {"score": 0.00471503739362446, "phrase": "service_oriented_approach"}, {"score": 0.004656082803151484, "phrase": "attractive_feature"}, {"score": 0.004617187934074393, "phrase": "service_oriented_architecture"}, {"score": 0.0043721365634105565, "phrase": "independent_organizations"}, {"score": 0.0042455945330942746, "phrase": "richer_functionality"}, {"score": 0.004140036888016244, "phrase": "flexible_compositions"}, {"score": 0.00396988421137599, "phrase": "traditional_testing_approaches"}, {"score": 0.003920209964956682, "phrase": "soa_validation"}, {"score": 0.0034708317974593136, "phrase": "adequate_understanding"}, {"score": 0.003427380591229386, "phrase": "integration_quality"}, {"score": 0.0033420978105332686, "phrase": "independent_web_services"}, {"score": 0.0030470980812086247, "phrase": "intermediary_service"}, {"score": 0.0030089355635315005, "phrase": "coverage_information"}, {"score": 0.0029340342068081247, "phrase": "service_oriented_coverage_testing"}, {"score": 0.0027203027216256013, "phrase": "service_internals"}, {"score": 0.0026862220320327613, "phrase": "soct"}, {"score": 0.002543392353000551, "phrase": "soa_founding_principles"}, {"score": 0.0025221012517852907, "phrase": "loose_coupling"}, {"score": 0.002500987934534128, "phrase": "implementation_neutrality"}, {"score": 0.0023980368333253147, "phrase": "soct_approach"}, {"score": 0.0021953959824690316, "phrase": "preliminary_evaluation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["White-box testing", " Coverage adequacy criteria", " Testing web services", " Service-Oriented Architecture"], "paper_abstract": "The attractive feature of Service Oriented Architecture (SOA) is that pieces of software conceived and developed by independent organizations can be dynamically composed to provide richer functionality. The same reasons that enable flexible compositions, however, also prevent the application of some traditional testing approaches, making SOA validation challenging and costly. Web services usually expose just an interface, enough to invoke them and develop some general (black-box) tests, but insufficient for a tester to develop an adequate understanding of the integration quality between the application and the independent web services. To address this lack we propose an approach that makes web services more transparent to testers through the addition of an intermediary service that provides coverage information. The approach, named Service Oriented Coverage Testing (SOCT), provides testers with feedback about how much a service is exercised by their tests without revealing the service internals. In SOCT, testing feedback is offered itself as a service, thus preserving SOA founding principles of loose coupling and implementation neutrality. In this paper we motivate and define the SOCT approach, and implement an instance of it. We also perform a study to asses SOCT feasibility and provide a preliminary evaluation of its viability and value. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Bringing white-box testing to Service Oriented Architectures through a Service Oriented Approach", "paper_id": "WOS:000288142500010"}