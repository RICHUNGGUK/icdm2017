{"auto_keywords": [{"score": 0.04945866963669641, "phrase": "weighted_max-sat"}, {"score": 0.03997447142565907, "phrase": "lower_bounds"}, {"score": 0.00481495049065317, "phrase": "efficient_max-sat"}, {"score": 0.004690952711665194, "phrase": "optimization_version"}, {"score": 0.004375613460102574, "phrase": "important_problem"}, {"score": 0.004244375827831527, "phrase": "practical_point"}, {"score": 0.004063664475797303, "phrase": "considerable_interest"}, {"score": 0.004010960493946656, "phrase": "efficient_solving_techniques"}, {"score": 0.0038234714417849495, "phrase": "good_quality"}, {"score": 0.003660614912817745, "phrase": "dpll-like_algorithm"}, {"score": 0.0034894451015047875, "phrase": "procedural_way"}, {"score": 0.0031568884810273226, "phrase": "original_framework"}, {"score": 0.00312951228759749, "phrase": "max-sat"}, {"score": 0.0030487828775502563, "phrase": "classical_sat."}, {"score": 0.002818850283787242, "phrase": "state-of-the-art_max-sat"}, {"score": 0.0026986685585382347, "phrase": "unified_manner"}, {"score": 0.002594880866651459, "phrase": "original_search_algorithm"}, {"score": 0.0025500402081330394, "phrase": "restricted_amount"}, {"score": 0.0025279105573394727, "phrase": "weighted_resolution"}, {"score": 0.0024950747439601863, "phrase": "visited_node"}, {"score": 0.0021797112385590913, "phrase": "practical_usability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Max-SAT", " search", " inference"], "paper_abstract": "Weighted Max-SAT is the optimization version of SAT and many important problems can be naturally encoded as such. Solving weighted Max-SAT is an important problem from both a theoretical and a practical point of view. In recent years, there has been considerable interest in finding efficient solving techniques. Most of this work focuses on the computation of good quality lower bounds to be used within a branch and bound DPLL-like algorithm. Most often, these lower bounds are described in a procedural way. Because of that, it is difficult to realize the logic that is behind. In this paper we introduce an original framework for Max-SAT that stresses the parallelism with classical SAT. Then, we extend the two basic SAT solving techniques: search and inference. We show that many algorithmic tricks used in state-of-the-art Max-SAT solvers are easily expressible in logical terms in a unified manner, using our framework. We also introduce an original search algorithm that performs a restricted amount of weighted resolution at each visited node. We empirically compare our algorithm with a variety of solving alternatives on several benchmarks. Our experiments, which constitute to the best of our knowledge the most comprehensive Max-SAT evaluation ever reported, demonstrate the practical usability of our approach. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "A logical approach to efficient Max-SAT solving", "paper_id": "WOS:000252652000005"}