{"auto_keywords": [{"score": 0.03980335877573019, "phrase": "discrete_frechet_distance"}, {"score": 0.009563052728448134, "phrase": "minimum_length"}, {"score": 0.00481495049065317, "phrase": "subquadratic_time."}, {"score": 0.004779085953614184, "phrase": "frechet_distance"}, {"score": 0.0035298229915690974, "phrase": "specific_stones"}, {"score": 0.0033121909731471787, "phrase": "respective_curves"}, {"score": 0.00286213454317036, "phrase": "starting_points"}, {"score": 0.0028301536956600137, "phrase": "terminal_points"}, {"score": 0.002675516297446243, "phrase": "straightforward_dynamic_programming_algorithm"}, {"score": 0.002625866440129899, "phrase": "first_subquadratic_algorithm"}, {"score": 0.0023291617361832157, "phrase": "ram_model"}, {"score": 0.002193600680263771, "phrase": "subtle_way"}, {"score": 0.00216907363015155, "phrase": "legal_positions"}, {"score": 0.0021049977753042253, "phrase": "finite_automaton"}], "paper_keywords": ["Frechet distance", " similarity of curves", " dynamic programming acceleration"], "paper_abstract": "The Frechet distance measures similarity between two curves f and g that takes into account the ordering of the points along the two curves: Informally, it is the minimum length of a leash required to connect a dog, walking along f, and its owner, walking along g, as they walk without backtracking along their respective curves from one endpoint to the other. The discrete Frechet distance replaces the dog and its owner by a pair of frogs that can only reside on m and n specific stones, respectively. The stones are in fact sequences of points, typically sampled from the respective curves f and g. These frogs hop from one stone to the next without backtracking, and the discrete Frechet distance is the minimum length of a \"leash\" that connects the frogs and allows them to execute such a sequence of hops from the starting points to the terminal points of their sequences. The discrete Frechet distance can be computed in O(mn) time by a straightforward dynamic programming algorithm. We present the first subquadratic algorithm for computing the discrete Frechet distance between two sequences of points in the plane. Assuming m <= n, the algorithm runs in O(mn log log n/log n) time, in the word RAM model, using O(n) storage. Our approach uses the geometry of the problem in a subtle way to encode legal positions of the frogs as states of a finite automaton.", "paper_title": "COMPUTING THE DISCRETE FRECHET DISTANCE IN SUBQUADRATIC TIME", "paper_id": "WOS:000335820900004"}