{"auto_keywords": [{"score": 0.03370549904505103, "phrase": "asynchronous_designs"}, {"score": 0.00481495049065317, "phrase": "asynchronous_logic"}, {"score": 0.0046987973264610685, "phrase": "clock_rates"}, {"score": 0.004548253531664032, "phrase": "systemwide_synchronous_clock"}, {"score": 0.004384623928442369, "phrase": "asynchronous_design_styles"}, {"score": 0.004244102948402086, "phrase": "traditional_synchronous_design_style"}, {"score": 0.00407474190126995, "phrase": "rich_field_experience"}, {"score": 0.003912112659326054, "phrase": "asynchronous_circuits"}, {"score": 0.0038803710796509227, "phrase": "practical_application"}, {"score": 0.0037866774001097596, "phrase": "increased_transient_fault_rates"}, {"score": 0.003710323357333052, "phrase": "crucial_property"}, {"score": 0.0036355032885145894, "phrase": "conceptual_view"}, {"score": 0.0035913348026306306, "phrase": "so-called_\"delay-insensitive\"_asynchronous_design_approaches"}, {"score": 0.0033646448121751574, "phrase": "tight_timing_margins"}, {"score": 0.003217124533918232, "phrase": "practical_assessment"}, {"score": 0.0029291801502381513, "phrase": "adequate_methods"}, {"score": 0.002870066750788841, "phrase": "particular_domain"}, {"score": 0.002699769374493867, "phrase": "common_approach"}, {"score": 0.002677837900473396, "phrase": "efficient_and_accurate_fi"}, {"score": 0.0024984517279573906, "phrase": "synchronous_and_asynchronous_designs"}, {"score": 0.002274684393868218, "phrase": "delay_faults"}, {"score": 0.0021571717917276724, "phrase": "detailed_discussion"}, {"score": 0.0021309254505358253, "phrase": "specific_properties"}, {"score": 0.0021049977753042253, "phrase": "chosen_asynchronous_design_style"}], "paper_keywords": ["FIDYCO", " asynchronous circuit", " robustness", " FPGA fault injection", " delay fault"], "paper_abstract": "With clock rates beyond 1 GHz, the model of a systemwide synchronous clock is becoming difficult to maintain; therefore, asynchronous design styles are increasingly receiving attention. While the traditional synchronous design style is well-proven and backed up by a rich field experience, comparatively little is known about the properties of asynchronous circuits in practical application. In the face of increased transient fault rates, robustness is a crucial property, and from a conceptual view, the so-called \"delay-insensitive\" asynchronous design approaches promise to be more robust than synchronous ones, since their operation does not depend on tight timing margins, and data are two-rail coded. A practical assessment of asynchronous designs in fault-injection (FI) studies, however, can rarely be found, and there is a lack of adequate methods and tools in this particular domain. Therefore, the objective of this work is 1) to provide a common approach for efficient and accurate FI in synchronous and in asynchronous designs, and 2) to experimentally compare the robustness of both synchronous and asynchronous designs. To this end, a synchronous 16-bit processor as well as its asynchronous (delay insensitive) equivalent are subjected to signal flips and delay faults. The results of over 489 million experiments are summarized and discussed, and a detailed discussion on the specific properties of the chosen asynchronous design style is given.", "paper_title": "Is Asynchronous Logic More Robust Than Synchronous Logic?", "paper_id": "WOS:000271441900004"}