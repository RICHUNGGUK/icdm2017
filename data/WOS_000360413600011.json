{"auto_keywords": [{"score": 0.03286426740466337, "phrase": "large_block_flash_memory"}, {"score": 0.006927754386212734, "phrase": "flash_memory"}, {"score": 0.005423211872575162, "phrase": "ftl_algorithms"}, {"score": 0.005169326119165615, "phrase": "physical_page"}, {"score": 0.00481495049065317, "phrase": "efficient_flash_translation_layer"}, {"score": 0.004763895422211728, "phrase": "large_block_nand_flash_devices"}, {"score": 0.00451659023910662, "phrase": "non-volatile_storage"}, {"score": 0.004374385639298755, "phrase": "smart_phones"}, {"score": 0.0042820680211904235, "phrase": "digital_cameras"}, {"score": 0.004147216579100177, "phrase": "software_layer"}, {"score": 0.004016596158355383, "phrase": "ftl"}, {"score": 0.0038283058265876713, "phrase": "key_factor"}, {"score": 0.003774087385922094, "phrase": "lstaff"}, {"score": 0.003767517649628532, "phrase": "overall_flash_memory_system_performance"}, {"score": 0.0036100762867678415, "phrase": "small_block_flash_memory"}, {"score": 0.0032969458013463807, "phrase": "data_sector"}, {"score": 0.003244567402785763, "phrase": "file_system"}, {"score": 0.0031760175583084274, "phrase": "major_flash_vendors"}, {"score": 0.0029159568444629053, "phrase": "file_system's_data_sector_size"}, {"score": 0.0026914710445743693, "phrase": "challenging_issue"}, {"score": 0.00256514094268541, "phrase": "efficient_ftl"}, {"score": 0.002393034183276193, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "existing_algorithms"}], "paper_keywords": ["Flash memory", " operating system", " embedded system", " file system", " flash translation layer"], "paper_abstract": "Recently, flash memory is widely used as a non-volatile storage for embedded applications such as smart phones, MP3 players, digital cameras and so on. The software layer called flash translation layer (FTL) becomes more important since it is a key factor in the overall flash memory system performance. Many researchers have proposed FTL algorithms for small block flash memory in which the size of a physical page of flash memory is equivalent to the size of a data sector of the file system. However, major flash vendors have now produced large block flash memory in which the size of a physical page is larger than the file system's data sector size. Since large block flash memory has new features, designing FTL algorithms specialized to large block flash memory is a challenging issue. In this paper, we provide an efficient FTL named LSTAFF* for large block flash memory. LSTAFF* is designed to achieve better performance by using characteristics of large block flash memory and to provide safety by abiding by restrictions of large block flash memory. Experimental results show that LSTAFF* outperforms existing algorithms on a large block flash memory.", "paper_title": "An Efficient Flash Translation Layer for Large Block NAND Flash Devices", "paper_id": "WOS:000360413600011"}