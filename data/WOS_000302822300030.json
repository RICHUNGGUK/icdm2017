{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "regular_tree_languages"}, {"score": 0.004522796947899013, "phrase": "state_complexity"}, {"score": 0.004410938507689426, "phrase": "basic_concatenation_operations"}, {"score": 0.003701401653850141, "phrase": "deterministic_bottom-up_automata"}, {"score": 0.0027741761880779535, "phrase": "state_complexity_lower_bounds"}, {"score": 0.0026055251533586804, "phrase": "sequential_concatenation"}, {"score": 0.0025409639091476363, "phrase": "tree_languages"}, {"score": 0.0021857667493036786, "phrase": "regular_string_languages"}], "paper_keywords": ["Tree automata", " State complexity", " Lower bounds", " Sequential and parallel concatenation"], "paper_abstract": "We consider the state complexity of basic concatenation operations for regular tree languages. We show that the sequential (respectively, parallel) concatenation of tree languages recognized by deterministic bottom-up automata with m and n states can be recognized by an automaton with (n+1).(m.2(n)+2(n-1))-1(respectively, m.2(n)+2(n-1)-1) states, and establish matching state complexity lower bounds. The bound for sequential concatenation of tree languages differs by an order of magnitude from the corresponding bound for regular string languages. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "State complexity of the concatenation of regular tree languages", "paper_id": "WOS:000302822300030"}