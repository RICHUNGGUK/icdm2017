{"auto_keywords": [{"score": 0.049561472167574526, "phrase": "active_learning_method"}, {"score": 0.00481495049065317, "phrase": "optimal_hardware_implementation"}, {"score": 0.004685855684376706, "phrase": "memristor_crossbar_structures"}, {"score": 0.004535481695403089, "phrase": "new_inference_algorithm"}, {"score": 0.004366131469013888, "phrase": "alm"}, {"score": 0.004295459433506106, "phrase": "pattern-based_algorithm"}, {"score": 0.004112582094962078, "phrase": "ink_drop"}, {"score": 0.003980531478122155, "phrase": "feature_extraction"}, {"score": 0.003831801113154043, "phrase": "fuzzy_number"}, {"score": 0.003728966994353039, "phrase": "ids_plane"}, {"score": 0.0036288825833675127, "phrase": "narrow_path"}, {"score": 0.00349324530379071, "phrase": "previous_approaches"}, {"score": 0.0033810134162565843, "phrase": "significant_reduction"}, {"score": 0.003236941658990869, "phrase": "inference_part"}, {"score": 0.0031500213134140953, "phrase": "real-time_computation"}, {"score": 0.0030989899982042236, "phrase": "implemented_hardware"}, {"score": 0.0030487828775502563, "phrase": "modified_version"}, {"score": 0.002999386721353559, "phrase": "memristor_crossbar_structure"}, {"score": 0.0028715299874549245, "phrase": "varying_shapes"}, {"score": 0.0027341763737751467, "phrase": "previous_studies"}, {"score": 0.0025611773887867255, "phrase": "proposed_hardware"}, {"score": 0.0022718774783143203, "phrase": "simulation_results"}, {"score": 0.0022228943786652914, "phrase": "proposed_algorithm"}, {"score": 0.002151388538895855, "phrase": "previous_one"}, {"score": 0.0021049977753042253, "phrase": "reduced_hardware_complexity"}], "paper_keywords": ["Active learning method (ALM)", " fuzzy inference algorithm", " ink drop spread (IDS)", " memristor crossbar"], "paper_abstract": "This paper presents a new inference algorithm for active learning method (ALM). ALM is a pattern-based algorithm for soft computing, which uses the ink drop spread (IDS) algorithm as its main engine for feature extraction. In this paper, a fuzzy number is extracted from each IDS plane rather than from the narrow path and the spread, as in previous approaches. This leads to a significant reduction in the hardware required to implement the inference part of the algorithm and real-time computation of the implemented hardware. A modified version of the memristor crossbar structure is used to solve the problem of varying shapes of the ink drops, as reported in previous studies. In order to compare performance of the algorithm and the proposed hardware with the one proposed in our previous work, two functions that are widely used in literature are modeled as the benchmark. Simulation results show that the proposed algorithm is as effective as the previous one in modeling with reduced hardware complexity.", "paper_title": "An Optimal Hardware Implementation for Active Learning Method Based on Memristor Crossbar Structures", "paper_id": "WOS:000345620800018"}