{"auto_keywords": [{"score": 0.04496930556292013, "phrase": "strict_improvement"}, {"score": 0.00481495049065317, "phrase": "theoretical_framework"}, {"score": 0.0047448515702010734, "phrase": "extended_experimental_analysis"}, {"score": 0.004540591176992658, "phrase": "general_framework"}, {"score": 0.0043877939717652855, "phrase": "primal_simplex"}, {"score": 0.004017989546119125, "phrase": "compatible_variables"}, {"score": 0.003940122359770492, "phrase": "nondegenerate_iteration"}, {"score": 0.003661275004971829, "phrase": "objective_function"}, {"score": 0.0034355662264234864, "phrase": "compatible_and_incompatible_variables"}, {"score": 0.003319830633865628, "phrase": "improved_primal_simplex"}, {"score": 0.0032237268289353983, "phrase": "particular_implementation"}, {"score": 0.0031767199435197243, "phrase": "generic_theoretical_framework"}, {"score": 0.003130396338031522, "phrase": "resulting_new_description"}, {"score": 0.0029807934480637855, "phrase": "necessary_adaptations"}, {"score": 0.0029086869572567072, "phrase": "specific_implementation_choices"}, {"score": 0.002852256089630964, "phrase": "original_insight"}, {"score": 0.0028245089615712305, "phrase": "ips"}, {"score": 0.0027026375053777543, "phrase": "potential_alternative_choices"}, {"score": 0.0025608471909800076, "phrase": "wider_set"}, {"score": 0.002486659929589854, "phrase": "experimental_tests"}, {"score": 0.0024503741901918527, "phrase": "extended_collection"}, {"score": 0.0024264776194357993, "phrase": "data_sets"}, {"score": 0.002379379676378223, "phrase": "mittelmann's_benchmark"}, {"score": 0.002356173823922118, "phrase": "linear_programming"}, {"score": 0.002287902310873394, "phrase": "excellent_potential"}, {"score": 0.0021361800485636823, "phrase": "improved_implementation"}, {"score": 0.0021049977753042253, "phrase": "generic_algorithm"}], "paper_keywords": ["linear programming", " simplex", " degeneracy", " decomposition", " primal algorithms"], "paper_abstract": "In this article, we propose a general framework for an algorithm derived from the primal simplex that guarantees a strict improvement in the objective after each iteration. Our approach relies on the identification of compatible variables that ensure a nondegenerate iteration if pivoted into the basis. The problem of finding a strict improvement in the objective function is proved to be equivalent to two smaller problems, respectively, focusing on compatible and incompatible variables. We then show that the improved primal simplex (IPS) is a particular implementation of this generic theoretical framework. The resulting new description of IPS naturally emphasizes what should be considered as necessary adaptations of the framework versus specific implementation choices. This provides original insight into IPS that allows for the identification of weaknesses and potential alternative choices that would extend the efficiency of the method to a wider set of problems. We perform experimental tests on an extended collection of data sets including instances of Mittelmann's benchmark for linear programming. The results confirm the excellent potential of IPS and highlight some of its limits while showing a path toward an improved implementation of the generic algorithm.", "paper_title": "Improved Primal Simplex: A More General Theoretical Framework and an Extended Experimental Analysis", "paper_id": "WOS:000366057400012"}