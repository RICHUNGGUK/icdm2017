{"auto_keywords": [{"score": 0.03750146860836395, "phrase": "matrix_multiplication"}, {"score": 0.00481495049065317, "phrase": "improving_monocular_slam_inverse"}, {"score": 0.00478867907727921, "phrase": "depth_parameterization_computation_time_via_software"}, {"score": 0.004762550320451225, "phrase": "profiling_and_parallel_matrix_multiplication._inverse_depth_representation"}, {"score": 0.004608730887154718, "phrase": "feature_locations"}, {"score": 0.004459857205489101, "phrase": "standard_tracking"}, {"score": 0.004387225575447685, "phrase": "monocular_slam."}, {"score": 0.004268780663872836, "phrase": "software_profiling"}, {"score": 0.004063547375196532, "phrase": "high_processing_computation"}, {"score": 0.003661987063211563, "phrase": "inverse_depth_calculation"}, {"score": 0.003524227590204673, "phrase": "inverse_depth_parameterization_computation"}, {"score": 0.003466780226380516, "phrase": "great_number"}, {"score": 0.003429001377800258, "phrase": "matrix_multiplications"}, {"score": 0.003264010423431402, "phrase": "feature_covariance"}, {"score": 0.003228434077467506, "phrase": "covariance_prediction_computations"}, {"score": 0.002989991779830814, "phrase": "depth_estimation_calculation"}, {"score": 0.0027843339377323878, "phrase": "fast_matrix_multiplication"}, {"score": 0.0027239390917424898, "phrase": "processing_speed"}, {"score": 0.0026943175915551307, "phrase": "fpga"}, {"score": 0.002388043660169452, "phrase": "parallel_matrix_multiplication"}, {"score": 0.002361992359512022, "phrase": "fpga_technology"}, {"score": 0.002223696715077018, "phrase": "classical_matrix_multiplication_algorithm"}, {"score": 0.0021874023741762496, "phrase": "parallel_architecture"}, {"score": 0.0021049977753042253, "phrase": "execution_time"}], "paper_keywords": ["Matrix multiplication", " Depth parameterization", " Simultaneous localization and mapping (SLAM)", " FPGA"], "paper_abstract": "Inverse depth representation is a parameterization method for feature locations which can handle initialization and standard tracking of a monocular SLAM. In this paper, software profiling is utilized to determine which section of program demands high processing computation. With the study conducted, it can be observed that one of the most time consuming process in inverse depth calculation is the computation of matrix multiplication. Inverse depth parameterization computation involves a great number of matrix multiplications. For instance, matrix multiplication is used for feature covariance and covariance prediction computations. The computation takes more processing time when the number of features applied to the depth estimation calculation is increased. Therefore, there is a need to design a fast matrix multiplication to accelerate the processing speed. FPGA has long been used to speed up many designs and applications due to their parallelism capability. For that reason, a design of parallel matrix multiplication using FPGA technology is introduced in this paper. The design will manipulate classical matrix multiplication algorithm into a parallel architecture with the aim of accelerating the execution time.", "paper_title": "IMPROVING MONOCULAR SLAM INVERSE DEPTH PARAMETERIZATION COMPUTATION TIME VIA SOFTWARE PROFILING AND PARALLEL MATRIX MULTIPLICATION", "paper_id": "WOS:000296939300012"}