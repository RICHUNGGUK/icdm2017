{"auto_keywords": [{"score": 0.04034190794741309, "phrase": "worst-case_cost"}, {"score": 0.00481495049065317, "phrase": "data_structure"}, {"score": 0.004695900553353526, "phrase": "efficient_heap_operations"}, {"score": 0.004429388453288922, "phrase": "element_comparisons"}, {"score": 0.0031712256091350316, "phrase": "smaller_element"}, {"score": 0.0023864566654035924, "phrase": "comparison_complexity"}, {"score": 0.002346861891137455, "phrase": "heap_operations"}, {"score": 0.0022886952510350416, "phrase": "run-relaxed_heaps"}], "paper_keywords": [""], "paper_abstract": "We introduce a data structure which provides efficient heap operations with respect to the number of element comparisons performed. Let n denote the size of the heap being manipulated. Our data structure guarantees the worst-case cost of O(1) for finding the minimum, inserting an element, extracting an (unspecified) element, and replacing an element with a smaller element; and the worst-case cost of O(lg n) with at most lg n + 3 lg lg n + O(1) element comparisons for deleting an element. We thereby improve the comparison complexity of heap operations known for run-relaxed heaps and other worst-case efficient heaps. Furthermore, our data structure supports melding of two heaps of size m and n at the worst-case cost of O(min {lg m, lg n}).", "paper_title": "Two-tier relaxed heaps", "paper_id": "WOS:000254803200003"}