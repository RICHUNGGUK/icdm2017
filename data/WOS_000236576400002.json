{"auto_keywords": [{"score": 0.04921457158686006, "phrase": "traversal_patterns"}, {"score": 0.00481495049065317, "phrase": "hashing_schemes"}, {"score": 0.004289966839994858, "phrase": "sequential_patterns"}, {"score": 0.004238134740341528, "phrase": "traversal_patters"}, {"score": 0.0041112665381266315, "phrase": "collision_problem"}, {"score": 0.004061584718427419, "phrase": "hash_schemes"}, {"score": 0.003964007795174772, "phrase": "severe_performance_degradation"}, {"score": 0.003775803846431323, "phrase": "perfect_hashing_schemes"}, {"score": 0.003574695610710444, "phrase": "hash_table"}, {"score": 0.0035100601949451028, "phrase": "main_idea"}, {"score": 0.0034049123167891955, "phrase": "large_itemsets"}, {"score": 0.0032828706086018133, "phrase": "delicate_encoding_scheme"}, {"score": 0.003223494720348768, "phrase": "perfect_hash_schemes"}, {"score": 0.0030147970456037274, "phrase": "varied_lengths"}, {"score": 0.0029066973917258655, "phrase": "experimental_results"}, {"score": 0.0027184540871935284, "phrase": "fs_algorithm"}, {"score": 0.0025578967205807843, "phrase": "database_sizes"}, {"score": 0.0024511688853030168, "phrase": "partial_hash"}, {"score": 0.0023346234464901978, "phrase": "enormous_memory_space"}, {"score": 0.0022923586577645143, "phrase": "typical_perfect_hash_functions"}, {"score": 0.0021438155673297377, "phrase": "different_perfect_hash_variants"}], "paper_keywords": ["data mining", " traversal patterns", " perfect hashing", " performance analysis"], "paper_abstract": "Hashing schemes area common technique to improve the performance in mining not only association rules but also sequential patterns or traversal patters. However, the collision problem in hash schemes may result in severe performance degradation. In this paper, we propose perfect hashing schemes for mining traversal patterns to avoid collisions in the hash table. The main idea is to transform each large itemsets into one large 2-itemset by employing a delicate encoding scheme. Then perfect hash schemes designed only for itemsets of length two, rather than varied lengths, are applied. The experimental results show that our method is more than twice as faster than FS algorithm. The results also show our method is scalable to database sizes. One variant of our perfect hash scheme, called partial hash, is proposed to cope with the enormous memory space required by typical perfect hash functions. We also give a comparison of the performances of different perfect hash variants and investigate their properties.", "paper_title": "Perfect hashing schemes for mining traversal patterns", "paper_id": "WOS:000236576400002"}