{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uncertain_data"}, {"score": 0.015351724186734288, "phrase": "outlier_detection"}, {"score": 0.004562362497952548, "phrase": "anomaly_detection"}, {"score": 0.004454377387615279, "phrase": "common_data_mining_task"}, {"score": 0.004375061788023814, "phrase": "data_points"}, {"score": 0.004120694410890683, "phrase": "useful_applications"}, {"score": 0.004047296286849109, "phrase": "network_intrusion"}, {"score": 0.003999089046152065, "phrase": "system_faults"}, {"score": 0.003927848423072668, "phrase": "fraudulent_activity"}, {"score": 0.0038119123317396954, "phrase": "real_world_data"}, {"score": 0.0033812801309408514, "phrase": "improved_parallel_algorithm"}, {"score": 0.0032618078775887077, "phrase": "density_sampling"}, {"score": 0.003071965703296204, "phrase": "multi-core_cpus"}, {"score": 0.0029991500396912923, "phrase": "opencl_framework"}, {"score": 0.0027741761880779535, "phrase": "massively_parallel_floating_point_processor"}, {"score": 0.002597012212823168, "phrase": "key_features"}, {"score": 0.002445767214680791, "phrase": "traditional_cpu_implementation"}, {"score": 0.0023592715993204796, "phrase": "improved_uncertain_outlier_detection_algorithm"}, {"score": 0.0022085455097790537, "phrase": "detection_quality_comparisons"}, {"score": 0.0021304214257321, "phrase": "improved_algorithm"}, {"score": 0.0021049977753042253, "phrase": "parallel_implementation"}], "paper_keywords": ["GPU", " Outlier detection", " Parallel processing", " Uncertain data"], "paper_abstract": "Outlier detection, also known as anomaly detection, is a common data mining task in identifying data points that are outside expected patterns in a given dataset. It has useful applications such as network intrusion, system faults, and fraudulent activity. In addition, real world data are uncertain in nature and they may be represented as uncertain data. In this paper, we propose an improved parallel algorithm for outlier detection on uncertain data using density sampling and develop an implementation running on both GPUs and multi-core CPUs, using the OpenCL framework. Our main focus is on GPUs, as they are a cost effective massively parallel floating point processor that is suitable for many data mining applications. Our implementation exploits some key features in GPUs, and is significantly different from a traditional CPU implementation. We first present an improved uncertain outlier detection algorithm. Then, we demonstrate two parallel micro-clustering implementations. The performance and detection quality comparisons demonstrate the benefits of the improved algorithm and parallel implementation on GPUs.", "paper_title": "Parallel outlier detection on uncertain data for GPUs", "paper_id": "WOS:000360554400006"}