{"auto_keywords": [{"score": 0.038323814569956004, "phrase": "transistor_level"}, {"score": 0.02670857818561516, "phrase": "approximate_adders"}, {"score": 0.00481495049065317, "phrase": "digital_signal_processing_using_approximate_adders"}, {"score": 0.004770461993586338, "phrase": "low_power"}, {"score": 0.004704495156558224, "phrase": "imperative_requirement"}, {"score": 0.00466102244911872, "phrase": "portable_multimedia_devices"}, {"score": 0.0044702911400353535, "phrase": "human_beings"}, {"score": 0.004408456735066782, "phrase": "useful_information"}, {"score": 0.004367707617503722, "phrase": "slightly_erroneous_outputs"}, {"score": 0.004169519409162853, "phrase": "exactly_correct_numerical_outputs"}, {"score": 0.004017437417375057, "phrase": "error_resiliency"}, {"score": 0.003961842092184655, "phrase": "voltage_overscaling"}, {"score": 0.003907013105134715, "phrase": "algorithmic_and_architectural_techniques"}, {"score": 0.00383508177668219, "phrase": "resulting_errors"}, {"score": 0.0036951530348821116, "phrase": "logic_complexity_reduction"}, {"score": 0.003593555152077465, "phrase": "alternative_approach"}, {"score": 0.0034624082435775676, "phrase": "numerical_accuracy"}, {"score": 0.003140401552000472, "phrase": "approximate_multi-bit_adders"}, {"score": 0.003054009753601139, "phrase": "inherent_reduction"}, {"score": 0.0030257422786589723, "phrase": "switched_capacitance"}, {"score": 0.002956209594959227, "phrase": "significantly_shorter_critical_paths"}, {"score": 0.0029152570900178956, "phrase": "voltage_scaling"}, {"score": 0.0028087949095629955, "phrase": "image_compression_algorithms"}, {"score": 0.0027698788736535865, "phrase": "proposed_approximate_arithmetic_units"}, {"score": 0.0025952620596908773, "phrase": "simple_mathematical_models"}, {"score": 0.0025474193855847074, "phrase": "power_consumption"}, {"score": 0.0022467024793003812, "phrase": "specific_quality_constraints"}, {"score": 0.0022258906408344973, "phrase": "simulation_results"}, {"score": 0.0021746987512551693, "phrase": "proposed_approximate_adders"}, {"score": 0.0021246816854197732, "phrase": "existing_implementations"}, {"score": 0.0021049977753042253, "phrase": "accurate_adders"}], "paper_keywords": ["Approximate computing", " low power", " mirror adder"], "paper_abstract": "Low power is an imperative requirement for portable multimedia devices employing various signal processing algorithms and architectures. In most multimedia applications, human beings can gather useful information from slightly erroneous outputs. Therefore, we do not need to produce exactly correct numerical outputs. Previous research in this context exploits error resiliency primarily through voltage overscaling, utilizing algorithmic and architectural techniques to mitigate the resulting errors. In this paper, we propose logic complexity reduction at the transistor level as an alternative approach to take advantage of the relaxation of numerical accuracy. We demonstrate this concept by proposing various imprecise or approximate full adder cells with reduced complexity at the transistor level, and utilize them to design approximate multi-bit adders. In addition to the inherent reduction in switched capacitance, our techniques result in significantly shorter critical paths, enabling voltage scaling. We design architectures for video and image compression algorithms using the proposed approximate arithmetic units and evaluate them to demonstrate the efficacy of our approach. We also derive simple mathematical models for error and power consumption of these approximate adders. Furthermore, we demonstrate the utility of these approximate adders in two digital signal processing architectures (discrete cosine transform and finite impulse response filter) with specific quality constraints. Simulation results indicate up to 69% power savings using the proposed approximate adders, when compared to existing implementations using accurate adders.", "paper_title": "Low-Power Digital Signal Processing Using Approximate Adders", "paper_id": "WOS:000314676500011"}