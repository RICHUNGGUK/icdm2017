{"auto_keywords": [{"score": 0.023534278515230784, "phrase": "maude"}, {"score": 0.00481495049065317, "phrase": "n-protocol_compatibility"}, {"score": 0.0047026237903774895, "phrase": "service-oriented_computing"}, {"score": 0.004521179256835894, "phrase": "new_systems"}, {"score": 0.004450568197899267, "phrase": "existing_services"}, {"score": 0.003802135020791801, "phrase": "interoperability_issues"}, {"score": 0.003541923233726252, "phrase": "new_framework"}, {"score": 0.0033518704336033905, "phrase": "service_interfaces"}, {"score": 0.0029781530607129653, "phrase": "different_application_areas"}, {"score": 0.0028630535573013686, "phrase": "new_further_notions"}, {"score": 0.00266693888510356, "phrase": "service_interface_model"}, {"score": 0.0026045914281028473, "phrase": "behavioural_descriptions"}, {"score": 0.0025237171554924128, "phrase": "non-observable_actions"}, {"score": 0.0023139986108451946, "phrase": "prototype_tool"}, {"score": 0.002224510044064184, "phrase": "rewriting_logic-based_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["SOC", " Transition systems", " Non-observable actions", " Compatibility", " Maude"], "paper_abstract": "Service-Oriented Computing promotes the development of new systems from existing services which are usually accessed through their public interfaces. In this context, interfaces must be compatible in order to avoid interoperability issues. In this article, we propose a new framework for checking the compatibility of n service interfaces. Our framework is generic, in the sense that it implements several compatibility notions useful for different application areas, and extensible since new further notions can easily be incorporated. We consider a service interface model which takes behavioural descriptions with value-passing and non-observable actions into account. Our compatibility checking framework has been fully implemented into a prototype tool which relies on the rewriting logic-based system Maude. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A generic framework for n-protocol compatibility checking", "paper_id": "WOS:000304179400006"}