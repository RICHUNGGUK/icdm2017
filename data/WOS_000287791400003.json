{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computability_logic"}, {"score": 0.014866445370501769, "phrase": "formal_theory"}, {"score": 0.004688823162073856, "phrase": "recently_introduced_semantical_platform"}, {"score": 0.004258563634666145, "phrase": "col_stand"}, {"score": 0.004230382915464495, "phrase": "interactive_computational_problems"}, {"score": 0.004078675940346967, "phrase": "logical_operators"}, {"score": 0.003880498041409292, "phrase": "effective_solution"}, {"score": 0.003803939387792038, "phrase": "algorithmic_winning_strategy"}, {"score": 0.0035358770665604657, "phrase": "subject_advance"}, {"score": 0.0035124618008923504, "phrase": "propositional_connectives"}, {"score": 0.003397683082821229, "phrase": "indispensable_versions"}, {"score": 0.003308557560574077, "phrase": "disjunction_-_parallel"}, {"score": 0.0031476805104529377, "phrase": "third_sorts"}, {"score": 0.003075296862372287, "phrase": "additive_operators"}, {"score": 0.003054922297665861, "phrase": "linear_logic"}, {"score": 0.003004572722189157, "phrase": "present_paper"}, {"score": 0.0028966970007550824, "phrase": "toggling_operations"}, {"score": 0.002848947756758754, "phrase": "lenient_versions"}, {"score": 0.002830068550982961, "phrase": "choice_operations"}, {"score": 0.0027193846595965593, "phrase": "finite_number"}, {"score": 0.0026392143749243914, "phrase": "trial-and-error_style_decision_steps"}, {"score": 0.002587081502365341, "phrase": "main_technical_result"}, {"score": 0.002527556628744957, "phrase": "sound_and_complete_axiomatization"}, {"score": 0.0025024660249697408, "phrase": "propositional_fragment"}, {"score": 0.0022200746395981876, "phrase": "toggling_versions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Computability logic", " Game semantics", " Interactive computation", " Constructive logics", " Resource logics"], "paper_abstract": "Computability logic (CoL) is a recently introduced semantical platform and research program for redeveloping logic as a formal theory of computability, as opposed to the formal theory of truth that logic has more traditionally been. Formulas in CoL stand for interactive computational problems, seen as games between a machine and its environment; logical operators represent operations on such entities; and \"truth\" is understood as existence of an effective solution, i.e., of an algorithmic winning strategy. The formalism of CoL is open-ended, and may undergo series of extensions as the studies of the subject advance. Propositional connectives and quantifiers in it come in a variety of indispensable versions. So far three sorts of conjunction and disjunction - parallel, sequential and choice - have been studied, with the first and the third sorts being reminiscent of the multiplicative and additive operators of linear logic, respectively. The present paper adds one more natural kind to this collection, termed toggling. The toggling operations can be characterized as lenient versions of choice operations where choices are retractable, being allowed to be reconsidered any finite number of times. This way, they model trial-and-error style decision steps in interactive computation. The main technical result of this paper is constructing a sound and complete axiomatization for the propositional fragment of computability logic whose vocabulary includes all four kinds of conjunction and disjunction: parallel, toggling, sequential and choice, together with negation. Along with toggling conjunction and disjunction, the paper also introduces the toggling versions of quantifiers and recurrence (\"exponential\") operations. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Toggling operators in computability logic", "paper_id": "WOS:000287791400003"}