{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "directory_lookups"}, {"score": 0.01445079566814102, "phrase": "shared_cache"}, {"score": 0.004737579882204798, "phrase": "coherence_protocols"}, {"score": 0.0046803650677267146, "phrase": "important_fraction"}, {"score": 0.004386637056030611, "phrase": "directory-based_coherence_protocol"}, {"score": 0.004281284532043714, "phrase": "local_caches_tags"}, {"score": 0.004161553532799662, "phrase": "big_fraction"}, {"score": 0.003884479830773329, "phrase": "local_cache"}, {"score": 0.0035530197642369464, "phrase": "directory_access"}, {"score": 0.003210446135114967, "phrase": "second_one"}, {"score": 0.0031845067058084583, "phrase": "filtering_information"}, {"score": 0.003120568497402472, "phrase": "shared_cache_organization"}, {"score": 0.003070340620983981, "phrase": "filter_size"}, {"score": 0.0029965060407413898, "phrase": "shared_cache_size"}, {"score": 0.002707444334463544, "phrase": "local_caches"}, {"score": 0.002568299907890696, "phrase": "proposed_filters"}, {"score": 0.002466139325703204, "phrase": "power_consumption"}, {"score": 0.002246292543825748, "phrase": "directory_power_consumption"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Chip multiprocessor (CMP)", " Coherence directory", " Coherence actions filtering"], "paper_abstract": "Coherence protocols consume an important fraction of power to determine which coherence action to perform. Specifically, on CMPs with shared cache and directory-based coherence protocol implemented as a duplicate of local caches tags, we have observed that a big fraction of directory lookups cause a miss, because the block looked up is not allocated in any local cache. To reduce the number of directory lookups and therefore the power consumption, we propose to add a filter before the directory access. We introduce two filter implementations. In the first one, filtering information is explicitly kept in the shared cache for every block. In the second one, filtering information is decoupled from the shared cache organization, so the filter size does not depend on the shared cache size. We evaluate our filters in a CMP with 8 in-order processors with 4 threads each and a memory hierarchy with write-through local caches and a shared cache. We show that, for SPLASH2 benchmarks, the proposed filters reduce the number of directory lookups performed by 60% while power consumption is reduced by similar to 28%. For Specweb2005, the number of directory lookups performed is reduced by 68% (44%), while directory power consumption is reduced by 19% (9%) using the first (second) filter implementation. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Filtering directory lookups in CMPs", "paper_id": "WOS:000298456500005"}