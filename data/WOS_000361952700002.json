{"auto_keywords": [{"score": 0.04959024199151092, "phrase": "cache"}, {"score": 0.00481495049065317, "phrase": "k-d_tree"}, {"score": 0.004574085781766281, "phrase": "key_part"}, {"score": 0.004527371799277529, "phrase": "service_oriented_architecture"}, {"score": 0.00421340730888561, "phrase": "quality_of_service"}, {"score": 0.004085579055228594, "phrase": "important_factor"}, {"score": 0.0038810583785936505, "phrase": "current_service_selection_approaches"}, {"score": 0.0035201528214608914, "phrase": "\"best\"_qos"}, {"score": 0.0031116963435584982, "phrase": "similar_constraints"}, {"score": 0.002955782731675529, "phrase": "satisfactory_qos"}, {"score": 0.002851301751761804, "phrase": "key_points"}, {"score": 0.0026945086500597304, "phrase": "previous_search_results"}, {"score": 0.0025726416100664853, "phrase": "k-d"}, {"score": 0.0025202582748972122, "phrase": "satisfactory_service"}, {"score": 0.0023331227492950422, "phrase": "service_request"}, {"score": 0.0022856052476424344, "phrase": "distribution_policy"}, {"score": 0.0021049977753042253, "phrase": "conventional_approach"}], "paper_keywords": ["Service selection", " Service Oriented Architecture", " QoS"], "paper_abstract": "The selection of services is a key part of Service Oriented Architecture (SOA). Services are primarily selected based on function, but Quality of Service (QoS) is an important factor when choosing among several services with the same function. But current service selection approaches often takes time to unnecessarily recompute requests. Furthermore, if the same service is chosen as having the \"best\" QoS for multiple selections, this may result in that service having too much load. We thus propose the FASICA (FAst service selection for SImilar constraints with CAche) Framework which chooses a service with satisfactory QoS as quickly as possible. The key points are (1) to use a cache which stores previous search results, (2) to use K-Nearest Neighbor (K-NN) algorithm with K-d tree when a satisfactory service does not exist in the cache, and (3) to distribute the service request according to a distribution policy. Results of simulations show that our framework can rapidly select a service compared to a conventional approach.", "paper_title": "FASICA Framework: Service Selection Using K-d Tree and Cache", "paper_id": "WOS:000361952700002"}