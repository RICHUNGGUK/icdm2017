{"auto_keywords": [{"score": 0.03210119880561028, "phrase": "lattice_size"}, {"score": 0.00481495049065317, "phrase": "boolean_functions"}, {"score": 0.004718314112245913, "phrase": "four-terminal_switches"}, {"score": 0.004531099487959303, "phrase": "boolean"}, {"score": 0.004263336444795021, "phrase": "corresponding_switch"}, {"score": 0.003991305899593133, "phrase": "boolean_function"}, {"score": 0.003642962673467835, "phrase": "connected_path"}, {"score": 0.0028551716387011637, "phrase": "efficient_algorithm"}, {"score": 0.002618995204424126, "phrase": "boolean_function_duality"}, {"score": 0.0023780209525032688, "phrase": "target_boolean_function"}, {"score": 0.0023539789234610763, "phrase": "isop_form"}, {"score": 0.002237357942660354, "phrase": "synthesis_trials"}, {"score": 0.0021923400552366756, "phrase": "standard_benchmark_circuits"}, {"score": 0.0021591707887653865, "phrase": "synthesis_results"}, {"score": 0.0021049977753042253, "phrase": "lower-bound_calculation"}], "paper_keywords": ["Boolean functions", " switching circuits", " lattices", " nanowire crossbar arrays"], "paper_abstract": "This paper studies the implementation of Boolean functions by lattices of four-terminal switches. Each switch is controlled by a Boolean literal. If the literal takes the value 1, the corresponding switch is connected to its four neighbors; else it is not connected. A Boolean function is implemented in terms of connectivity across the lattice: it evaluates to 1 iff there exists a connected path between two opposing edges of the lattice. The paper addresses the following synthesis problem: how should one assign literals to switches in a lattice in order to implement a given target Boolean function? The goal is to minimize the lattice size, measured in terms of the number of switches. An efficient algorithm for this task is presented-one that does not exhaustively enumerate paths but rather exploits the concept of Boolean function duality. The algorithm produces lattices with a size that grows linearly with the number of products of the target Boolean function in ISOP form. It runs in time that grows polynomially. Synthesis trials are performed on standard benchmark circuits. The synthesis results are compared to a lower-bound calculation on the lattice size.", "paper_title": "Logic Synthesis for Switching Lattices", "paper_id": "WOS:000309113200006"}