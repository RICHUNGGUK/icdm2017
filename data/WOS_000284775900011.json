{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "virtual_machines"}, {"score": 0.010366222227371193, "phrase": "virtual_machine"}, {"score": 0.009163676426777208, "phrase": "xhive"}, {"score": 0.00759194865429993, "phrase": "machine_memory"}, {"score": 0.004565876339189493, "phrase": "redundant_disk_operations"}, {"score": 0.00438105507792004, "phrase": "large_amounts"}, {"score": 0.004278807087784626, "phrase": "shared_storage"}, {"score": 0.00387011040370557, "phrase": "virtualization_layer"}, {"score": 0.003802135020791801, "phrase": "consolidated_environments"}, {"score": 0.0036914757355166966, "phrase": "buffer_caches"}, {"score": 0.0036481158025940047, "phrase": "consolidated_virtual_machines"}, {"score": 0.0028293966058473476, "phrase": "guest_operating_system"}, {"score": 0.0027796495180095657, "phrase": "efficient_use"}, {"score": 0.0027469703311742647, "phrase": "limited_memory"}, {"score": 0.0025587867729949037, "phrase": "idle_memory"}, {"score": 0.0023834640793589435, "phrase": "shared_working_sets"}, {"score": 0.0023277282036119106, "phrase": "high_read_performance"}, {"score": 0.002273292707863821, "phrase": "improved_scalability"}, {"score": 0.002233301265743633, "phrase": "high_degree"}, {"score": 0.0022070310530794097, "phrase": "workload_consolidation"}, {"score": 0.0021049977753042253, "phrase": "working_sets"}], "paper_keywords": ["Virtualization", " cooperative caching", " secondary cache", " virtual machine", " Xen"], "paper_abstract": "Since a virtual machine independently uses its own caching policy, redundant disk operations exacerbate the I/O virtualization overhead when virtual machines access large amounts of data on shared storage. This paper presents XHive, an efficient cooperative caching system that is implemented at the virtualization layer, for consolidated environments. Our proposed scheme globally manages buffer caches of consolidated virtual machines in order to accommodate a shared working set in machine memory. A singlet, which is a block cached solely by a virtual machine, is preferentially given more chances to be cached in machine memory by XHive, when it is evicted by a guest operating system. For efficient use of limited memory, singlets are cached in memory that is collaboratively donated from idle memory of virtual machines. Our evaluation shows that XHive significantly reduces disk I/O operations for shared working sets, thereby achieving high read performance and scalability. Improved scalability enables a high degree of workload consolidation with respect to virtual machines that have shared working sets.", "paper_title": "XHive: Efficient Cooperative Caching for Virtual Machines", "paper_id": "WOS:000284775900011"}