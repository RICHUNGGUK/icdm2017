{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "structural_decompositions"}, {"score": 0.004780183091824403, "phrase": "graph-based_representations"}, {"score": 0.004677372885331908, "phrase": "constraint_satisfaction_problem"}, {"score": 0.004576763709613412, "phrase": "central_issue"}, {"score": 0.004287680323820891, "phrase": "tractable_classes"}, {"score": 0.004256703909255889, "phrase": "csp_instances"}, {"score": 0.004180234323211199, "phrase": "deep_and_useful_results"}, {"score": 0.003987755561492638, "phrase": "structural_decomposition_methods"}, {"score": 0.0038596974575361574, "phrase": "near-acyclicity_properties"}, {"score": 0.0036953036453370087, "phrase": "constraints_interactions"}, {"score": 0.0036288825833675127, "phrase": "constraint_scopes"}, {"score": 0.003589602322126282, "phrase": "arbitrary_number"}, {"score": 0.003338344648070587, "phrase": "decomposition_methods"}, {"score": 0.003290237137651949, "phrase": "suitable_graph_representations"}, {"score": 0.0031500213134140953, "phrase": "great_interest"}, {"score": 0.0030933709720820605, "phrase": "formal_analysis"}, {"score": 0.002704554429386671, "phrase": "binary_structural_methods"}, {"score": 0.002646267286675984, "phrase": "clear_picture"}, {"score": 0.0026175952455594277, "phrase": "tractable_fragments"}, {"score": 0.0024253827365474734, "phrase": "binary_representations"}, {"score": 0.002407827985570249, "phrase": "non-binary_csp_instances"}, {"score": 0.0023051296931856265, "phrase": "graph_encodings"}, {"score": 0.0021987994275190314, "phrase": "binary_encodings"}, {"score": 0.002151388538895855, "phrase": "non-binary_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Constraint satisfaction", " Decomposition methods", " Hypergraphs", " Dual graphs", " Incidence graphs", " Primal graphs", " Treewidth"], "paper_abstract": "The Constraint Satisfaction Problem (CSP) is a central issue of research in intelligence. Due to its intractability, many efforts have been made in order to identify tractable classes of CSP instances, and in fact deep and useful results have already been achieved. In particular, this paper focuses on structural decomposition methods, which are essentially meant to look for near-acyclicity properties of the graphs or hypergraphs that encode the structure of the constraints interactions. In general, constraint scopes comprise an arbitrary number of variables, and thus this structure may be naturally encoded via hypergraphs. However, in many practical applications, decomposition methods are applied over suitable graph representations of the (possibly non-binary) CSP instances at hand. Despite the great interest in such binary approaches, a formal analysis of their power, in terms of their ability of identifying islands of tractability, was missing in the literature. The aim of this paper is precisely to fill this gap, by studying the relationships among binary structural methods, and by providing a clear picture of the tractable fragments of CSP that can be specified with respect to each of these decomposition approaches, when they are applied to binary representations of non-binary CSP instances. In particular, various long-standing questions about primal, dual and incidence graph encodings are answered. The picture is then completed by comparing methods on binary encodings with methods specifically conceived for non-binary constraints. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "On the power of structural decompositions of graph-based representations of constraint problems", "paper_id": "WOS:000275837700002"}