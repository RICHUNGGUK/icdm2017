{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "measurement_program"}, {"score": 0.040915497410734795, "phrase": "mql"}, {"score": 0.004775335634705251, "phrase": "software_quality"}, {"score": 0.0046970764288494764, "phrase": "measurement_programs"}, {"score": 0.004031082737449308, "phrase": "empirical_study"}, {"score": 0.0038518661517315533, "phrase": "mise_en_quake_du_logiciel"}, {"score": 0.003804443517531157, "phrase": "french"}, {"score": 0.003757480190200645, "phrase": "quality_software_development"}, {"score": 0.0036653985479652854, "phrase": "industrial_context"}, {"score": 0.003502382624110703, "phrase": "different_sizes"}, {"score": 0.0033327768024847397, "phrase": "ad-hoc_approaches"}, {"score": 0.0031582637043009562, "phrase": "\"ad-hoc_systems"}, {"score": 0.0029805015010906013, "phrase": "nine_variables"}, {"score": 0.0029559346879594254, "phrase": "six_quality_factors"}, {"score": 0.002515272856011004, "phrase": "clear_positive_impact"}, {"score": 0.002393353846080347, "phrase": "corrective-maintenance_effort"}, {"score": 0.0023346234464901978, "phrase": "concrete_evidence"}, {"score": 0.0022214412809055013, "phrase": "software_systems"}, {"score": 0.002184943946549964, "phrase": "appropriate_decision_making_procedures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Measurement program", " Software quality", " Empirical study"], "paper_abstract": "Context: Measurement programs have been around for several decades but have been often misused or misunderstood by managers and developers. This misunderstanding prevented their adoption despite their many advantages. Objective: In this paper, we present the results of an empirical study on the impact of a measurement program, MQL (\"Mise en Quake du Logiciel\", French for \"Quality Software Development\"), in an industrial context. Method: We analyzed data collected on 44 industrial systems of different sizes: 22 systems were developed using MQL while the other 22 used ad-hoc approaches to assess and control quality (control group, referred to as \"ad-hoc systems\"). We studied the impact of MQL on a set of nine variables: six quality factors (maintainability, evolvability, reusability, robustness, testability, and architecture quality), corrective-maintenance effort, code complexity, and the presence of comments. Results: Our results show that MQL had a clear positive impact on all the studied indicators. This impact is statistically significant for all the indicators but corrective-maintenance effort. Conclusion: We bring concrete evidence that a measurement program can have a significant, positive impact on the quality of software systems if combined with appropriate decision making procedures and corrective actions. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Investigating the impact of a measurement program on software quality", "paper_id": "WOS:000280214700004"}