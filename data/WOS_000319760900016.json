{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "tls_algorithm"}, {"score": 0.005558253875394413, "phrase": "special_cases"}, {"score": 0.004685224205630963, "phrase": "online-list_scheduling_problem"}, {"score": 0.004405919996432158, "phrase": "multipurpose_machines"}, {"score": 0.003976775340098895, "phrase": "online_scheduling_problem"}, {"score": 0.003540539868937462, "phrase": "job_type"}, {"score": 0.003375087185182269, "phrase": "unique_subset"}, {"score": 0.0029436264166293317, "phrase": "processing_times"}, {"score": 0.0025848074189353397, "phrase": "job_processing_times"}, {"score": 0.0021782980803068505, "phrase": "lower_bound"}, {"score": 0.0021340178074057245, "phrase": "processing_set"}, {"score": 0.0021049977753042253, "phrase": "processing_time_parameters"}], "paper_keywords": ["Online scheduling", " Multipurpose machines", " Competitive analysis", " Makespan", " Algorithm TLS"], "paper_abstract": "In this paper we study the optimality of the TLS algorithm for solving the online scheduling problem of minimizing the makespan on a set of m multipurpose machines, where there are two different job types and each job type can only be processed on a unique subset of machines. The literature shows that the TLS algorithm is optimal for the special cases where either m=2 or where all processing times are restricted to unity. We show that the TLS algorithm is optimal also for the special cases where the job processing times are either job type or machine set dependent. For both cases, the optimality of the TLS algorithm is proven by showing that its competitive ratio matches the lower bound for any processing set and processing time parameters.", "paper_title": "On the optimality of the TLS algorithm for solving the online-list scheduling problem with two job types on a set of multipurpose machines", "paper_id": "WOS:000319760900016"}