{"auto_keywords": [{"score": 0.04959718565226427, "phrase": "graph_level"}, {"score": 0.03260816028030378, "phrase": "provenance_graph"}, {"score": 0.03134965278748632, "phrase": "opql_queries"}, {"score": 0.010845556935499288, "phrase": "opql"}, {"score": 0.008264015148043913, "phrase": "web_service"}, {"score": 0.00481495049065317, "phrase": "scientific_workflow_provenance"}, {"score": 0.004639612079116459, "phrase": "scientific_workflows"}, {"score": 0.0044706300051082035, "phrase": "scientific_data_analysis"}, {"score": 0.00438105507792004, "phrase": "provenance_data"}, {"score": 0.004351595642056769, "phrase": "provenance_stores"}, {"score": 0.004322333439660409, "phrase": "proprietary_provenance_data_models"}, {"score": 0.004278807087784626, "phrase": "query_processing"}, {"score": 0.004235717186207754, "phrase": "physical_provenance_storages"}, {"score": 0.004207230913063179, "phrase": "query_languages"}, {"score": 0.004150875068956933, "phrase": "sql"}, {"score": 0.004122924849612929, "phrase": "sparql"}, {"score": 0.004081392872350462, "phrase": "xquery"}, {"score": 0.003972673543700013, "phrase": "underlying_storage_strategies"}, {"score": 0.0038930368103015467, "phrase": "low_level"}, {"score": 0.0038538167879752137, "phrase": "poor_usability"}, {"score": 0.0037133478610481994, "phrase": "underlying_schema"}, {"score": 0.003115354317501177, "phrase": "opql_query"}, {"score": 0.002892219926795975, "phrase": "underlying_provenance_storage_strategies"}, {"score": 0.002767934112798688, "phrase": "six_types"}, {"score": 0.0027492917990724467, "phrase": "graph_patterns"}, {"score": 0.002721562843196732, "phrase": "provenance_graph_algebra"}, {"score": 0.002694112801983161, "phrase": "opql_syntax"}, {"score": 0.002385479082527538, "phrase": "provenance_browser"}, {"score": 0.002267536195741775, "phrase": "opmpkovis"}, {"score": 0.0022446552199168472, "phrase": "experimental_study"}, {"score": 0.002155412043665635, "phrase": "opql_provenance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["OPQL", " Provenance query language", " Scientific workflow provenance"], "paper_abstract": "Provenance has become increasingly important in scientific workflows to understand, verify, and reproduce the result of scientific data analysis. Most existing systems store provenance data in provenance stores with proprietary provenance data models and conduct query processing over the physical provenance storages using query languages, such as SQL, SPARQL, and XQuery, which are closely coupled to the underlying storage strategies. Querying provenance at such low level leads to poor usability of the system: a user needs to know the underlying schema to formulate queries; if the schema changes, queries need to be reformulated; and queries formulated for one system will not run in another system. In this paper, we present OPQL, a provenance query language that enables the querying of provenance directly at the graph level. An OPQL query takes a provenance graph as input and produces another provenance graph as output. Therefore, OPQL queries are not tightly coupled to the underlying provenance storage strategies. Our main contributions are: (i) we design OPQL, including six types of graph patterns, a provenance graph algebra, and OPQL syntax and semantics, that supports querying provenance at the graph level; (ii) we implement OPQL using a Web service via our OPMPKov system; therefore, users can invoke the Web service to execute OPQL queries in a provenance browser, called OPMPKoVis. The result of OPQL queries is displayed as a provenance graph in OPMPKoVis. An experimental study is conducted to evaluate the feasibility and performance of OPMPKov on OPQL provenance querying. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "OPQL: Querying scientific workflow provenance at the graph level", "paper_id": "WOS:000329382100003"}