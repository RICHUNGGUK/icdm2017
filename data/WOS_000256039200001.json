{"auto_keywords": [{"score": 0.04187714396259639, "phrase": "computer_system"}, {"score": 0.027687656679208156, "phrase": "monitoring_tool"}, {"score": 0.00481495049065317, "phrase": "time-shared_systems"}, {"score": 0.004709193603747991, "phrase": "different_computing_models"}, {"score": 0.004667541072056214, "phrase": "performance_analysis"}, {"score": 0.004605748839642513, "phrase": "load_balancing_algorithms"}, {"score": 0.004524624065803229, "phrase": "processor_availability_information"}, {"score": 0.004425215632459868, "phrase": "strong_relationship"}, {"score": 0.00436661740263741, "phrase": "process_response_time"}, {"score": 0.004308791766002289, "phrase": "processor_time"}, {"score": 0.004139850082354509, "phrase": "processor_availability"}, {"score": 0.00408501512749186, "phrase": "new_process"}, {"score": 0.003942299471749811, "phrase": "basic_problem"}, {"score": 0.0036715973701254823, "phrase": "dynamic_nature"}, {"score": 0.0036390887584943723, "phrase": "current_computer_systems"}, {"score": 0.0034807976670686628, "phrase": "short_interval"}, {"score": 0.0031703706626348507, "phrase": "new_task"}, {"score": 0.002761856557698856, "phrase": "spap_model"}, {"score": 0.0026534064006291853, "phrase": "real-time_measurements"}, {"score": 0.002470987929071079, "phrase": "run_queue"}, {"score": 0.0023633857274905977, "phrase": "linux_workstations"}, {"score": 0.002250415129116109, "phrase": "exhaustive_set"}], "paper_keywords": ["modeling and prediction", " monitors", " performance measurements"], "paper_abstract": "The success of different computing models, performance analysis, and load balancing algorithms depends on the processor availability information because there is a strong relationship between a process response time and the processor time available for its execution. Therefore, predicting the processor availability for a new process or task in a computer system is a basic problem that arises in many important contexts. Unfortunately, making such predictions is not easy because of the dynamic nature of current computer systems and their workload, which can vary drastically in a short interval of time. This paper presents two new availability prediction models. The first, called the SPAP (Static Process Assignment Prediction) model, is capable of predicting the CPU availability for a new task on a computer system having information about the tasks in its run queue. The second, called the DYPAP (DYnamic Process Assignment Prediction) model, is an improvement of the SPAP model and is capable of making these predictions from real-time measurements provided by a monitoring tool, without any kind of information about the tasks in the run queue. Furthermore, the implementation of this monitoring tool for Linux workstations is presented. In addition, the results of an exhaustive set of experiments are reported to validate these two models and to evaluate the accuracy of their predictions.", "paper_title": "A new CPU availability prediction model for time-shared systems", "paper_id": "WOS:000256039200001"}