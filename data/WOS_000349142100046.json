{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "extracting_logical_structure"}, {"score": 0.004594137808658537, "phrase": "parallel_execution_traces"}, {"score": 0.004383406949799696, "phrase": "new_approach"}, {"score": 0.004182301599359094, "phrase": "idealized_logical_structure"}, {"score": 0.004066076430818046, "phrase": "parallel_execution_trace"}, {"score": 0.003771631577951067, "phrase": "intuitive_metrics"}, {"score": 0.003401148484767927, "phrase": "parallel_execution"}, {"score": 0.003095923814666088, "phrase": "logical_steps"}, {"score": 0.002953711377604328, "phrase": "developer's_understanding"}, {"score": 0.0027139447110929586, "phrase": "parallel_program"}, {"score": 0.002564985233317994, "phrase": "dependency_chains"}, {"score": 0.002493592357827492, "phrase": "communication_patterns"}, {"score": 0.0021049977753042253, "phrase": "traditional_trace_visualization"}], "paper_keywords": ["parallel execution trace", " logical structure", " visualization"], "paper_abstract": "We introduce a new approach to automatically extract an idealized logical structure from a parallel execution trace. We use this structure to define intuitive metrics such as the lateness of a process involved in a parallel execution. By analyzing and illustrating traces in terms of logical steps, we leverage a developer's understanding of the happened-before relations in a parallel program. This technique can uncover dependency chains, elucidate communication patterns, and highlight sources and propagation of delays, all of which may be obscured in a traditional trace visualization.", "paper_title": "Extracting Logical Structure and Identifying Stragglers in Parallel Execution Traces", "paper_id": "WOS:000349142100046"}