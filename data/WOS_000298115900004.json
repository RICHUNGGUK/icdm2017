{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "asynchronous_clos_networks"}, {"score": 0.00897225324329685, "phrase": "asynchronous_clos_scheduler"}, {"score": 0.004747429622531595, "phrase": "clos_networks"}, {"score": 0.004680851157467745, "phrase": "theoretically_optimal_solution"}, {"score": 0.004582722012454012, "phrase": "high-radix_switches"}, {"score": 0.0044237033788643715, "phrase": "three-stage_clos_network"}, {"score": 0.004270178957872099, "phrase": "asynchronous_circuits"}, {"score": 0.004180622964109706, "phrase": "synchronous_circuits"}, {"score": 0.004007083686875716, "phrase": "novel_asynchronous"}, {"score": 0.0038679618585498597, "phrase": "general_three-stage_clos_networks"}, {"score": 0.003603991318641505, "phrase": "clos"}, {"score": 0.0033579708256295847, "phrase": "central_modules"}, {"score": 0.003287482882222731, "phrase": "state_feedback_scheme"}, {"score": 0.003150900886669123, "phrase": "crrd"}, {"score": 0.00310664242361199, "phrase": "behavioural_simulations"}, {"score": 0.002998688867384969, "phrase": "ad_algorithm"}, {"score": 0.002853808773854451, "phrase": "synchronous_clos_network"}, {"score": 0.002793874145713024, "phrase": "crrd_algorithm"}, {"score": 0.0026214978443388653, "phrase": "synchronous_clos_networks"}, {"score": 0.0025846562485378247, "phrase": "higher_throughput"}, {"score": 0.0024251568696803177, "phrase": "arbitration_latency"}, {"score": 0.002275477757478827, "phrase": "significantly_lower_power"}, {"score": 0.0022276618873985445, "phrase": "synchronous_scheduler"}, {"score": 0.002180848602315088, "phrase": "asynchronous_clos_network"}, {"score": 0.0021501863832966966, "phrase": "bundled-data_data_switches"}, {"score": 0.0021049977753042253, "phrase": "best_power_efficiency"}], "paper_keywords": [""], "paper_abstract": "Clos networks provide theoretically optimal solution to build high-radix switches. Dynamically reconfiguring a three-stage Clos network is more difficult in asynchronous circuits than in synchronous circuits. This study proposes a novel asynchronous dispatching (AD) algorithm for general three-stage Clos networks. It is compared with the classic synchronous concurrent round-robin dispatching (CRRD) algorithm in unbuffered Clos networks. The AD algorithm avoids the contention in central modules using a state feedback scheme and outperforms the throughput of CRRD in behavioural simulations. Two asynchronous Clos networks using the AD algorithm are implemented and compared with a synchronous Clos network using the CRRD algorithm. The asynchronous Clos scheduler is smaller than its synchronous counterpart. Synchronous Clos networks achieve higher throughput than asynchronous Clos networks because asynchronous Clos networks cannot hide the arbitration latency and their data paths are slow. The asynchronous Clos scheduler consumes significantly lower power than the synchronous scheduler and the asynchronous Clos network using bundled-data data switches shows the best power efficiency in all implementations.", "paper_title": "Routing of asynchronous Clos networks", "paper_id": "WOS:000298115900004"}