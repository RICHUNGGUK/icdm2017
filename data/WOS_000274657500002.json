{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "global_multiprocessor_scheduling"}, {"score": 0.004521566043596533, "phrase": "deadline_tardiness"}, {"score": 0.004441059405327222, "phrase": "global_multiprocessor_scheduling_algorithms"}, {"score": 0.0042459818200777846, "phrase": "general_tardiness-bound_derivation"}, {"score": 0.004023120753104693, "phrase": "wide_variety"}, {"score": 0.0033914308417007316, "phrase": "job_priorities"}, {"score": 0.0031559919178954644, "phrase": "capacity_restrictions"}, {"score": 0.0028076592725295646, "phrase": "preemptive_regions"}, {"score": 0.0025202582748972122, "phrase": "static-priority_algorithms"}, {"score": 0.0024311346712789553, "phrase": "previously_have_bounded_tardiness"}, {"score": 0.002262209824105154, "phrase": "simple_means"}, {"score": 0.0021049977753042253, "phrase": "newly-developed_algorithms"}], "paper_keywords": ["Scheduling", " Soft real-time", " Multiprocessors"], "paper_abstract": "We consider the issue of deadline tardiness under global multiprocessor scheduling algorithms. We present a general tardiness-bound derivation that is applicable to a wide variety of such algorithms (including some whose tardiness behavior has not been analyzed before). Our derivation is very general: job priorities may change rather arbitrarily at runtime, capacity restrictions may exist on certain processors, and, under certain conditions, non-preemptive regions are allowed. Our results show that, with the exception of static-priority algorithms, most global algorithms considered previously have bounded tardiness. In addition, our results provide a simple means for checking whether tardiness is bounded under newly-developed algorithms.", "paper_title": "Generalized tardiness bounds for global multiprocessor scheduling", "paper_id": "WOS:000274657500002"}