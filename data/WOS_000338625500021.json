{"auto_keywords": [{"score": 0.03666655951729527, "phrase": "formal_methods"}, {"score": 0.00481495049065317, "phrase": "generative_framework_for_automated_omg_dds_performance_testing"}, {"score": 0.004593591780245872, "phrase": "data_distribution_service"}, {"score": 0.004405348628112645, "phrase": "end-to-end_quality"}, {"score": 0.004072851768196397, "phrase": "system's_performance"}, {"score": 0.0038249462699142733, "phrase": "diverse_combinations"}, {"score": 0.003785115566529808, "phrase": "qos_configurations"}, {"score": 0.0036680857629458816, "phrase": "different_ways"}, {"score": 0.0033910448175165004, "phrase": "mixed_success"}, {"score": 0.003303412571939192, "phrase": "sufficient_accuracy"}, {"score": 0.003234934827553253, "phrase": "tool_support"}, {"score": 0.003102195256794215, "phrase": "wider_adoption"}, {"score": 0.0030538300202383106, "phrase": "formal_techniques"}, {"score": 0.0030062165552187086, "phrase": "promising_approach"}, {"score": 0.0028828348726682965, "phrase": "system_behavior"}, {"score": 0.0027936239349923464, "phrase": "qos_parameters"}, {"score": 0.002412371116984224, "phrase": "model-based_automatic_performance_testing_framework"}, {"score": 0.002337684811187166, "phrase": "manual_efforts"}, {"score": 0.002289180040240783, "phrase": "large_number"}, {"score": 0.0022653055209664284, "phrase": "relevant_qos_configurations"}, {"score": 0.0021609076467365247, "phrase": "cloud_platform"}], "paper_keywords": ["Model-driven Engineering", " Generative Programming", " Publish/Subscribe", " Performance Testing"], "paper_abstract": "The Object Management Group's (OMG) Data Distribution Service (DDS) provides many configurable policies which determine end-to-end quality of service (QoS) of applications. It is challenging to predict the system's performance in terms of latencies, throughput, and resource usage because diverse combinations of QoS configurations influence QoS of applications in different ways. To overcome this problem, design-time formal methods have been applied with mixed success, but lack of sufficient accuracy in prediction, tool support, and understanding of formalism has prevented wider adoption of the formal techniques. A promising approach to address this challenge is to emulate system behavior and gather data on the QoS parameters of interest by experimentation. To realize this approach, which is preferred over formal methods due to their limitations in accurately predicting QoS, we have developed a model-based automatic performance testing framework with generative capabilities to reduce manual efforts in generating a large number of relevant QoS configurations that can be deployed and tested on a cloud platform. This paper describes our initial efforts in developing and using this technology.", "paper_title": "Model-driven Generative Framework for Automated OMG DDS Performance Testing in the Cloud", "paper_id": "WOS:000338625500021"}