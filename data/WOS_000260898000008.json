{"auto_keywords": [{"score": 0.04950097558699653, "phrase": "reconfigurable_hardware"}, {"score": 0.00481495049065317, "phrase": "memory_policy_specifications"}, {"score": 0.004670896353428476, "phrase": "general-purpose_processor_based_systems"}, {"score": 0.00453113241842654, "phrase": "memory_protection"}, {"score": 0.004422325007817267, "phrase": "unintended_sharing"}, {"score": 0.004263972370406983, "phrase": "current_systems"}, {"score": 0.0038923605771735838, "phrase": "single_chip"}, {"score": 0.0037988336463795963, "phrase": "external_resources"}, {"score": 0.003618443379266972, "phrase": "small_form_factor"}, {"score": 0.003574695610710444, "phrase": "low_cost_designs"}, {"score": 0.0029965060407413898, "phrase": "fpga_memory_protection_mechanism"}, {"score": 0.0029244418026475832, "phrase": "access_control_policies"}, {"score": 0.0028195727965553367, "phrase": "formal_policy_descriptions"}, {"score": 0.0027854565462509095, "phrase": "fpga_enforcement_mechanisms"}, {"score": 0.0025735173163957993, "phrase": "cycle_time"}, {"score": 0.0024963543716522087, "phrase": "security_scenarios"}, {"score": 0.0023346234464901978, "phrase": "internal_state"}, {"score": 0.0022923586577645143, "phrase": "reference_monitor"}, {"score": 0.0021966859554037174, "phrase": "covert_storage_channel"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Reconfigurable hardware", " Protection mechanisms", " Security and privacy protection", " Access controls", " Covert channels"], "paper_abstract": "While general-purpose processor based systems are built to enforce memory protection to prevent the unintended sharing of data between processes, current systems built around reconfigurable hardware typically offer no such protection. Several reconfigurable cores are often integrated onto a single chip where they share external resources such as memory. While this enables small form factor and low cost designs, it opens up the opportunity for modules to intercept or even interfere with the operation of one another. We investigate the design and synthesis of an FPGA memory protection mechanism capable of enforcing access control policies and a methodology for translating formal policy descriptions into FPGA enforcement mechanisms. The efficiency of our access language design flow is evaluated in terms of area and cycle time across a variety of security scenarios. We also describe a technique for ensuring that the internal state of the reference monitor cannot be used as a covert storage channel. (c) Published by Elsevier Ltd.", "paper_title": "Enforcing memory policy specifications in reconfigurable hardware", "paper_id": "WOS:000260898000008"}