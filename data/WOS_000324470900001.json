{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "spire"}, {"score": 0.012774044068031731, "phrase": "address_translation"}, {"score": 0.005831509755381203, "phrase": "performance_overhead"}, {"score": 0.0048519683070689665, "phrase": "spc_address"}, {"score": 0.0047631192993526465, "phrase": "dynamic_binary_translation"}, {"score": 0.004728874038094706, "phrase": "spc-indexed_indirect_branch_redirecting"}, {"score": 0.004694873827535293, "phrase": "dynamic_binary_translation_system"}, {"score": 0.004544859094594241, "phrase": "indirect_branch_instructions"}, {"score": 0.004447509888681154, "phrase": "source_binary_program_counter"}, {"score": 0.004352236750212992, "phrase": "translated_program_counter"}, {"score": 0.004182816319761868, "phrase": "major_source"}, {"score": 0.004063741692442559, "phrase": "novel_mechanism"}, {"score": 0.003849502288990788, "phrase": "indirect_branch_handling_overhead"}, {"score": 0.003753411452669234, "phrase": "hash_lookup"}, {"score": 0.003726398477619122, "phrase": "address_mapping_table"}, {"score": 0.0036202697222281373, "phrase": "source_binary_code_space"}, {"score": 0.0035683401689358993, "phrase": "spc-indexed_redirecting_table"}, {"score": 0.0033557940171476683, "phrase": "indirect_branch"}, {"score": 0.0032957163929772716, "phrase": "originally_spc_address"}, {"score": 0.003110579040263398, "phrase": "related_code_cache"}, {"score": 0.003011033940247791, "phrase": "indirect_branch_execution"}, {"score": 0.0029464414592923196, "phrase": "source_binary"}, {"score": 0.0028832306043717637, "phrase": "shadow_page_mechanism"}, {"score": 0.002801047964786189, "phrase": "corrupt_source_binary_code_page"}, {"score": 0.0027113815712365924, "phrase": "memory_overhead"}, {"score": 0.002549749054599413, "phrase": "implementation_issues"}, {"score": 0.0025313767218525965, "phrase": "different_guest_and_host_architectures"}, {"score": 0.0024503217593801587, "phrase": "hash_lookup_mechanism"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Dynamic Binary Translation", " Indirect Branch", " Redirecting"], "paper_abstract": "Dynamic binary translation system must perform an address translation for every execution of indirect branch instructions. The procedure to convert Source binary Program Counter (SPC) address to Translated Program Counter (TPC) address always takes more than 10 instructions, becoming a major source of performance overhead. This paper proposes a novel mechanism called SPc-Indexed REdirecting (SPIRE), which can significantly reduce the indirect branch handling overhead. SPIRE doesn't rely on hash lookup and address mapping table to perform address translation. It reuses the source binary code space to build a SPC-indexed redirecting table. This table can be indexed directly by SPC address without hashing. With SPIRE, the indirect branch can jump to the originally SPC address without address translation. The trampoline residing in the SPC address will redirect the control flow to related code cache. Only 2-6 instructions are needed to handle an indirect branch execution. As part of the source binary would be overwritten, a shadow page mechanism is explored to keep transparency of the corrupt source binary code page. Online profiling is adopted to reduce the memory overhead. We have implemented SPIRE on an x86 to x86 DBT system, and discussed the implementation issues on different guest and host architectures. The experiments show that, compared with hash lookup mechanism, SPIRE can reduce the performance overhead by 36.2% on average, up to 51.4%, while only 5.6% extra memory is needed. SPIRE can cooperate with other indirect branch handling mechanisms easily, and we believe the idea of SPIRE can also be applied on other occasions that need address translation.", "paper_title": "SPIRE: Improving Dynamic Binary Translation through SPC-Indexed Indirect Branch Redirecting", "paper_id": "WOS:000324470900001"}