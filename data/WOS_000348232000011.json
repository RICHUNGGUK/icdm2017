{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multibank_memory_access_parallelism"}, {"score": 0.004756805752518494, "phrase": "lattice-based_partitioning"}, {"score": 0.0046993598473345395, "phrase": "emerging_architectures"}, {"score": 0.004586531354697466, "phrase": "reconfigurable_hardware_platforms"}, {"score": 0.004476399615305783, "phrase": "unprecedented_opportunity"}, {"score": 0.00436890075128947, "phrase": "memory_infrastructure"}, {"score": 0.004289966839994858, "phrase": "application_access_patterns"}, {"score": 0.004086350434865782, "phrase": "automated_memory"}, {"score": 0.0038923605771735838, "phrase": "potentially_parallel_data_accesses"}, {"score": 0.0038453138708790385, "phrase": "physically_independent_banks"}, {"score": 0.0037529131348732715, "phrase": "affine_static_control_parts"}, {"score": 0.003531474887552889, "phrase": "z-polyhedral_model"}, {"score": 0.003384262486955773, "phrase": "partitioning_scheme"}, {"score": 0.0033230588808076267, "phrase": "integer_lattices"}, {"score": 0.0031459887611258765, "phrase": "solution_space"}, {"score": 0.003107935254560724, "phrase": "previous_works"}, {"score": 0.003070340620983981, "phrase": "particular_cases"}, {"score": 0.0029422942175866057, "phrase": "total_amount"}, {"score": 0.0028367868542874737, "phrase": "partitioned_banks"}, {"score": 0.002751751956416832, "phrase": "storage_minimization"}, {"score": 0.0026050445177883005, "phrase": "optimal_approach"}, {"score": 0.0025735173163957993, "phrase": "asymptotically_zero_memory_waste"}, {"score": 0.002406799309495983, "phrase": "arbitrarily_small_waste"}, {"score": 0.0023063614119692476, "phrase": "prototype_toolchain"}, {"score": 0.002264607102799332, "phrase": "detailed_step-by-step_case_study"}, {"score": 0.0021307975800397816, "phrase": "extensive_comparisons"}, {"score": 0.0021049977753042253, "phrase": "alternative_approaches"}], "paper_keywords": ["Design", " Languages", " Theory", " Memory partitioning", " polyhedral model", " fine-grained distributed shared memory", " field-programmable gate arrays"], "paper_abstract": "Emerging architectures, such as reconfigurable hardware platforms, provide the unprecedented opportunity of customizing the memory infrastructure based on application access patterns. This work addresses the problem of automated memory partitioning for such architectures, taking into account potentially parallel data accesses to physically independent banks. Targeted at affine static control parts (SCoPs), the technique relies on the Z-polyhedral model for program analysis and adopts a partitioning scheme based on integer lattices. The approach enables the definition of a solution space including previous works as particular cases. The problem of minimizing the total amount of memory required across the partitioned banks, referred to as storage minimization throughout the article, is tackled by an optimal approach yielding asymptotically zero memory waste or, as an alternative, an efficient approach ensuring arbitrarily small waste. The article also presents a prototype toolchain and a detailed step-by-step case study demonstrating the impact of the proposed technique along with extensive comparisons with alternative approaches in the literature.", "paper_title": "Improving Multibank Memory Access Parallelism with Lattice-Based Partitioning", "paper_id": "WOS:000348232000011"}