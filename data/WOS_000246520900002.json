{"auto_keywords": [{"score": 0.04435324935211144, "phrase": "credit_derivatives_market"}, {"score": 0.00481495049065317, "phrase": "financial_cdo"}, {"score": 0.0047415081747150065, "phrase": "constraint_programming"}, {"score": 0.004651271219032404, "phrase": "approximate_and_often_extremely_fast_method"}, {"score": 0.0041446453895708, "phrase": "collateralised_debt_obligations"}, {"score": 0.00400395947713195, "phrase": "pd"}, {"score": 0.003957735532719663, "phrase": "balanced_incomplete_block_design"}, {"score": 0.003927414675063059, "phrase": "bibd"}, {"score": 0.003764713814123286, "phrase": "typical_financial_pds"}, {"score": 0.003636605792981828, "phrase": "largest_bibds"}, {"score": 0.0035673211706948576, "phrase": "constraint_programs"}, {"score": 0.003485913728272778, "phrase": "optimisation_version"}, {"score": 0.003406466599614808, "phrase": "pds"}, {"score": 0.003265175268104804, "phrase": "small_designs"}, {"score": 0.0031906408161077766, "phrase": "constraint_satisfaction_problem"}, {"score": 0.0031418958350109038, "phrase": "original_large_design"}, {"score": 0.0025917270871556475, "phrase": "typical_financial_pd"}, {"score": 0.002465161736207254, "phrase": "high_quality"}, {"score": 0.002282380944889266, "phrase": "currently_best_ones"}, {"score": 0.0021049977753042253, "phrase": "rating-agency_constraints"}], "paper_keywords": ["financial mathematics", " credit derivatives", " collateralised debt obligation (CDO)", " CDO squared", " portfolio design (PD)", " optimal portfolio design (OPD)", " balanced incomplete block design (BIBD)", " constraint programming", " embedding"], "paper_abstract": "We give an approximate and often extremely fast method of building a particular kind of portfolio in finance, here called a portfolio design (PD), with applications in the credit derivatives market, for example when designing collateralised debt obligations squared (CDO(2)) transactions. A PD generalises a balanced incomplete block design (BIBD) and is usually harder to build. Worse, typical financial PDs are an order of magnitude larger than the largest BIBDs built so far by constraint programs, and in practice an optimisation version of the problem of building PDs has to be solved. Our method is based on embedding small designs, whose determination is itself a constraint satisfaction problem, into the original large design. Together with the detection of when a PD might be a BIBD, symmetry breaking, extended reuse of previously built PDs, and admissibility checking during search, the performance of the method becomes good enough for designing (near-)optimal CDO(2) transactions, with sizes common in the credit derivatives market, within minutes. For example, we optimally build a typical financial PD, which has over 10(746) symmetries, in just a few minutes. The high quality of our approximate designs can be assessed by comparison with a lower bound on the optimum. Our designs sufficiently improve the currently best ones so as often to make the difference between having and not having a feasible CDO(2) transaction due to investor and rating-agency constraints.", "paper_title": "Design of financial CDO squared transactions using constraint programming", "paper_id": "WOS:000246520900002"}