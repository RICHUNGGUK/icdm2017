{"auto_keywords": [{"score": 0.004860218511356106, "phrase": "time"}, {"score": 0.004746065479362881, "phrase": "parallel_applications"}, {"score": 0.0047006879240764935, "phrase": "performance-targeted_feedback-controlled_real-time_scheduling"}, {"score": 0.004311241567238011, "phrase": "batch_parallel_applications"}, {"score": 0.004050116768809519, "phrase": "low_utilization"}, {"score": 0.004011366422179016, "phrase": "potentially_long_waiting_times"}, {"score": 0.003916098498242888, "phrase": "self-adaptive_approach"}, {"score": 0.003714368305523811, "phrase": "execution_rate"}, {"score": 0.0034558655164987134, "phrase": "periodic_real-time_scheduler"}, {"score": 0.0033575566897536906, "phrase": "global_feedback-based_control_system"}, {"score": 0.0031845067058084583, "phrase": "online_system"}, {"score": 0.0030203487665054806, "phrase": "target_execution_rate"}, {"score": 0.002864628676257225, "phrase": "applications'_real-time_schedules"}, {"score": 0.0027830917623582903, "phrase": "proportional_cpu_utilization"}, {"score": 0.0027564303939865476, "phrase": "target_rates"}, {"score": 0.002432152706473349, "phrase": "extensive_evaluation"}, {"score": 0.002329009499335603, "phrase": "low_response_times"}, {"score": 0.0022626835039082746, "phrase": "cpu_isolation"}, {"score": 0.0021771713131746636, "phrase": "significant_expense"}, {"score": 0.0021049977753042253, "phrase": "memory_isolation"}], "paper_keywords": ["time-sharing", " parallel computing", " real-time scheduling", " feedback control"], "paper_abstract": "Most parallel machines, such as clusters, are space-shared in order to isolate batch parallel applications from each other and optimize their performance. However, this leads to low utilization or potentially long waiting times. We propose a self-adaptive approach to time-sharing such machines that provides isolation and allows the execution rate of an application to be tightly controlled by the administrator. Our approach combines a periodic real-time scheduler on each node with a global feedback-based control system that governs the local schedulers. We have developed an online system that implements our approach. The system takes as input a target execution rate for each application, and automatically and continuously adjusts the applications' real-time schedules to achieve those rates with proportional CPU utilization. Target rates can be dynamically adjusted. Applications are performance-isolated from each other and from other work that is not using our system. We present an extensive evaluation that shows that the system remains stable with low response times, and that our focus on CPU isolation and control does not come at the significant expense of network I/O, disk I/O, or memory isolation.", "paper_title": "Time-sharing parallel applications through performance-targeted feedback-controlled real-time scheduling", "paper_id": "WOS:000257867000006"}