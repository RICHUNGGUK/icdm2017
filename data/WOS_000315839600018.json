{"auto_keywords": [{"score": 0.035698766494454484, "phrase": "icts"}, {"score": 0.03488725760571378, "phrase": "high-level_phase"}, {"score": 0.00481495049065317, "phrase": "optimal_multi-agent_pathfinding"}, {"score": 0.004683540676363745, "phrase": "optimal_pathfinding"}, {"score": 0.004646654984830476, "phrase": "multiple_agents"}, {"score": 0.004573748810476845, "phrase": "start_state"}, {"score": 0.0045198174374297285, "phrase": "goal_state"}, {"score": 0.0043103495043308755, "phrase": "minimal_paths"}, {"score": 0.00425951071471662, "phrase": "different_agents"}, {"score": 0.004176102823067887, "phrase": "previous_work"}, {"score": 0.004046020290832207, "phrase": "traditional_single-agent_search_variants"}, {"score": 0.0038890781420303916, "phrase": "novel_formalization"}, {"score": 0.0037828412206668206, "phrase": "search_tree"}, {"score": 0.0036795552590041993, "phrase": "ict"}, {"score": 0.0034129490818185595, "phrase": "optimal_solutions"}, {"score": 0.0033460624879847667, "phrase": "two-level_search_algorithm"}, {"score": 0.003241750934419473, "phrase": "increasing_cost_tree"}, {"score": 0.0030187498405804315, "phrase": "icts_searches"}, {"score": 0.0029830992938695033, "phrase": "valid_path"}, {"score": 0.0027559226203857316, "phrase": "new_formalization"}, {"score": 0.0025259082947443343, "phrase": "unique_formalization"}, {"score": 0.002486193594641237, "phrase": "even_further_pruning"}, {"score": 0.002456816881853114, "phrase": "state_space"}, {"score": 0.0024277864377046016, "phrase": "small_sets"}, {"score": 0.0023801608396295396, "phrase": "unsolvable_combinations"}, {"score": 0.0023427323356117365, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heuristic search", " Multi-agent pathfinding"], "paper_abstract": "We address the problem of optimal pathfinding for multiple agents. Given a start state and a goal state for each of the agents, the task is to find minimal paths for the different agents while avoiding collisions. Previous work on solving this problem optimally, used traditional single-agent search variants of the A* algorithm. We present a novel formalization for this problem which includes a search tree called the increasing cost tree (ICT) and a corresponding search algorithm, called the increasing cost free search (ICTS) that finds optimal solutions. ICTS is a two-level search algorithm. The high-level phase of ICTS searches the increasing cost tree for a set of costs (cost per agent). The low-level phase of ICTS searches for a valid path for every agent that is constrained to have the same cost as given by the high-level phase. We analyze this new formalization, compare it to the A* search formalization and provide the pros and cons of each. Following, we show how the unique formalization of ICTS allows even further pruning of the state space by grouping small sets of agents and identifying unsolvable combinations of costs. Experimental results on various domains show the benefits and limitations of our new approach. A speedup of up to 3 orders of magnitude was obtained in some cases. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "The increasing cost tree search for optimal multi-agent pathfinding", "paper_id": "WOS:000315839600018"}