{"auto_keywords": [{"score": 0.04785710122151868, "phrase": "continuous_gossip"}, {"score": 0.013397430018650187, "phrase": "continuous_gossip_protocol"}, {"score": 0.00481495049065317, "phrase": "fault-tolerant_continuous_gossip"}, {"score": 0.004019797503157808, "phrase": "good_\"quality"}, {"score": 0.0036207206487324506, "phrase": "trivial_solution"}, {"score": 0.0031845067058084613, "phrase": "high_per-round_message_complexity"}, {"score": 0.003036595866130994, "phrase": "highly_dynamic_network"}, {"score": 0.0028409576481842457, "phrase": "good_per-round_message_complexity"}, {"score": 0.0025103699913760057, "phrase": "key_challenge"}, {"score": 0.0024397017438101726, "phrase": "ongoing_adaptation"}, {"score": 0.0024051153560799335, "phrase": "ever-changing_set"}, {"score": 0.0023485549678832628, "phrase": "non-crashed_process"}, {"score": 0.002186712881521657, "phrase": "randomized_and_deterministic_protocols"}, {"score": 0.0021352776064254195, "phrase": "lower_bounds"}, {"score": 0.0021049977753042253, "phrase": "per-round_message-complexity"}], "paper_keywords": ["Gossip", " Crashes and restarts", " Dynamic rumor injection", " Random and expander graphs"], "paper_abstract": "In this paper we introduce the problem of Continuous Gossip in which rumors are continually and dynamically injected throughout the network. Each rumor has a deadline, and the goal of a continuous gossip protocol is to ensure good \"Quality of Delivery,\" i.e., to deliver every rumor to every process before the deadline expires. Thus, a trivial solution to the problem of Continuous Gossip is simply for every process to broadcast every rumor as soon as it is injected. Unfortunately, this solution has high per-round message complexity. Complicating matters, we focus our attention on a highly dynamic network in which processes may continually crash and recover. In order to achieve good per-round message complexity in a dynamic network, processes need to continually form and re-form coalitions that cooperate to spread their rumors throughout the network. The key challenge for a Continuous Gossip protocol is the ongoing adaptation to the ever-changing set of active rumors and non-crashed process. In this work we show how to address this challenge; we develop randomized and deterministic protocols for Continuous Gossip and prove lower bounds on the per-round message-complexity, indicating that our protocols are close to optimal.", "paper_title": "Meeting the deadline: on the complexity of fault-tolerant continuous gossip", "paper_id": "WOS:000297518000002"}