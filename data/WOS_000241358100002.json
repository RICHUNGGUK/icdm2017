{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "component_composability"}, {"score": 0.00430907756010007, "phrase": "large_scale_software"}, {"score": 0.0041269626762569095, "phrase": "verification_concern"}, {"score": 0.003952513974962462, "phrase": "current_work"}, {"score": 0.0037159680715717056, "phrase": "component_model"}, {"score": 0.0035369291417564606, "phrase": "associated_formalism"}, {"score": 0.003244050414264445, "phrase": "extended_ltss"}, {"score": 0.0027457584014804574, "phrase": "component_composition"}, {"score": 0.002471973283582411, "phrase": "linked_services"}, {"score": 0.0021576973674470997, "phrase": "lotos_formalism"}, {"score": 0.0021049977753042253, "phrase": "lotos_cadp_toolbox"}], "paper_keywords": ["components", " services", " behavioural interface description", " composability", " behavioural verification"], "paper_abstract": "Component-Based Software Engineering (CBSE) is one of the approaches to master the development of large scale software. In this setting, the verification concern is still a challenge. The current work addresses the composability of components and their services. A component model (Kmelia) is introduced; an associated formalism, simple but expressive. is introduced; it describes the services as extended LTSs and their structuring as components. The composability of components is defined on the basis of the composability of services. To ensure the correctness-of component composition, we check that an assembly is possible via the checking of the composability of the linked services, and their behavioural compatibility. In order to mechanize our approach, the services and the components are translated into the LOTOS formalism. Finally the LOTOS CADP toolbox is used to perform experiments.", "paper_title": "Checking component composability", "paper_id": "WOS:000241358100002"}