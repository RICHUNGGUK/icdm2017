{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "reopened_bugs"}, {"score": 0.02952051642398364, "phrase": "reopenpredictor"}, {"score": 0.026383142543157746, "phrase": "apache_http"}, {"score": 0.007891669993347918, "phrase": "prior_work"}, {"score": 0.007782728077899346, "phrase": "reopened_f-measure"}, {"score": 0.007438869060648044, "phrase": "openoffice"}, {"score": 0.004781520813170433, "phrase": "bug"}, {"score": 0.004601606675066839, "phrase": "costly_activities"}, {"score": 0.004553725265085244, "phrase": "software_development_life_cycle"}, {"score": 0.0043976740574978085, "phrase": "bug_tracking_system"}, {"score": 0.004321656690200878, "phrase": "triage_team"}, {"score": 0.0037587915908689497, "phrase": "future_delivery"}, {"score": 0.0037196472104696157, "phrase": "software_release"}, {"score": 0.003542276457435362, "phrase": "prior_studies"}, {"score": 0.0034931650881768286, "phrase": "high_performance"}, {"score": 0.003280427617955518, "phrase": "textual_data"}, {"score": 0.002892920908794289, "phrase": "textual_features"}, {"score": 0.0028527866590859967, "phrase": "high_accuracy_prediction"}, {"score": 0.002641770514171764, "phrase": "prediction_performance"}, {"score": 0.0021049977753042253, "phrase": "shihab_et_al"}], "paper_keywords": ["Reopened bugs", " Imbalanced feature selection", " Imbalanced learning"], "paper_abstract": "Bug fixing is one of the most time-consuming and costly activities of the software development life cycle. In general, bugs are reported in a bug tracking system, validated by a triage team, assigned for someone to fix, and finally verified and closed. However, in some cases bugs have to be reopened. Reopened bugs increase software maintenance cost, cause rework for already busy developers and in some cases even delay the future delivery of a software release. Therefore, a few recent studies focused on studying reopened bugs. However, these prior studies did not achieve high performance (in terms of precision and recall), required manual intervention, and used very simplistic techniques when dealing with this textual data, which leads us to believe that further improvements are possible. In this paper, we propose ReopenPredictor, which is an automatic, high accuracy predictor of reopened bugs. ReopenPredictor uses a number of features, including textual features, to achieve high accuracy prediction of reopened bugs. As part of ReopenPredictor, we propose two algorithms that are used to automatically estimate various thresholds to maximize the prediction performance. To examine the benefits of ReopenPredictor, we perform experiments on three large open source projects-namely Eclipse, Apache HTTP and OpenOffice. Our results show that ReopenPredictor outperforms prior work, achieving a reopened F-measure of 0.744, 0.770, and 0.860 for Eclipse, Apache HTTP and OpenOffice, respectively. These results correspond to an improvement in the reopened F-measure of the method proposed in the prior work by Shihab et al. by 33.33, 12.57 and 3.12% for Eclipse, Apache HTTP and OpenOffice, respectively.", "paper_title": "Automatic, high accuracy prediction of reopened bugs", "paper_id": "WOS:000351476800004"}