{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "\"j-maps\"_models"}, {"score": 0.004576650486542461, "phrase": "system_developers"}, {"score": 0.004411881183253102, "phrase": "students'_learning"}, {"score": 0.004362381161638656, "phrase": "viable_ventures"}, {"score": 0.004337838898735768, "phrase": "reliable_software_systems"}, {"score": 0.004241036972631408, "phrase": "impetuous_detail-focussed_thinking"}, {"score": 0.003756419766128701, "phrase": "multiple_alternative"}, {"score": 0.003724745306512945, "phrase": "well-situated_strategies"}, {"score": 0.003590535800280948, "phrase": "software_code"}, {"score": 0.0035302288468578615, "phrase": "executable_prototype_models"}, {"score": 0.003510351672687489, "phrase": "essential_roles"}, {"score": 0.0029134070107177915, "phrase": "cybersystemic_modelling"}, {"score": 0.0028483013501083144, "phrase": "canonical_formal_representation"}, {"score": 0.002452136910109981, "phrase": "requisite_control_variety_aspects"}, {"score": 0.0024383151463193793, "phrase": "actual_and_prospective_viable_systems"}, {"score": 0.002363673062954101, "phrase": "carefully_triangulated_observations"}, {"score": 0.0023305026804332947, "phrase": "successive_versions"}, {"score": 0.0022977967191969515, "phrase": "graduate_students"}, {"score": 0.002246417055582878, "phrase": "notational_technology"}, {"score": 0.0022274466028861925, "phrase": "deeper_understanding"}, {"score": 0.0021229275892217583, "phrase": "context_map"}], "paper_keywords": ["Cybernetics", " Computer software", " Modelling", " Systems software", " Systems and control theory"], "paper_abstract": "Purpose - The purpose of this paper is to explain to educators and system developers the novel systemic instructional methodology and tools which the use to improve students' learning about and development of viable ventures and reliable software systems. This methodology is used to counteract impetuous detail-focussed thinking. For example, it has been evident that students often compromise their learning and their design work by failing to take large enough, or systemic enough, long-term perspectives. Rarely, do they grasp the need for finding and discussing multiple alternative and contextually well-situated strategies prior to their attempts at designing systems or plunging into the generation of software code. Design/methodology/approach - Both analytic narratives of intentionality and executable prototype models have essential roles to play in learning about and designing systems, and this paper explains how these can be integrated. This is done by three parallel learning-conversations: about why we are learning this?; about what is really going on here?; and about which learning strategies (meta-cognitive strategies) to use. These conversations are carried on at the same time as cybersystemic modelling which often involves the building of a canonical formal representation of entities, relationships and transformations, making possible the running of simulations. The modelling is done using Jaworski's \"j-Maps (TM)\" notation (from which various specialized views can be generated by the \"CONTEXT +\"(TM) - tools as needed). This is done in order to assess the completeness, correctness and requisite control variety aspects of actual and prospective viable systems and software. Findings - It has been found by carefully triangulated observations over two decades of using successive versions of this methodology that graduate students who work through these activities with this notational technology, develop deeper understanding, produce more reliable software and develop more viable systems. Originality/value - The paper is of value in presenting context map as an advanced, powerful and easy-to-implement method for information representation and transformation and systems development.", "paper_title": "Software and viable systems development with \"j-Maps\" models and learning conversations", "paper_id": "WOS:000270378700021"}