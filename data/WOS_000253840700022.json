{"auto_keywords": [{"score": 0.04274518365190482, "phrase": "srgm"}, {"score": 0.00481495049065317, "phrase": "finite_and_infinite_server"}, {"score": 0.0047026237903774895, "phrase": "soft_ware_reliability"}, {"score": 0.004485735417293941, "phrase": "failure-free_software_operation"}, {"score": 0.004253618550301311, "phrase": "specified_environment"}, {"score": 0.0038930368103015467, "phrase": "reliability_growth"}, {"score": 0.003735349093835257, "phrase": "effective_debugging"}, {"score": 0.003459191419478298, "phrase": "software_engineers"}, {"score": 0.0032800186243040663, "phrase": "collected_failure_data"}, {"score": 0.0030374213037172803, "phrase": "software_debugging_process"}, {"score": 0.002897109710213723, "phrase": "queueing_system"}, {"score": 0.0025892330566358503, "phrase": "software_reliability"}, {"score": 0.002455009746748708, "phrase": "imperfect_debugging"}, {"score": 0.0023415390666563177, "phrase": "numerical_examples"}, {"score": 0.002273292707863821, "phrase": "real_failure_data"}, {"score": 0.002155412043665635, "phrase": "experimental_results"}], "paper_keywords": ["fault correction", " non-homogeneous Poisson process (NHPP)", " queueing theory", " software reliability growth model (SRGM)", " software testing"], "paper_abstract": "Soft ware reliability is often defined as the probability of failure-free software operation for a specified period of time in a specified environment. During the past 30 years, many software reliability growth models (SRGM) have been proposed for estimating the reliability growth of software. In practice, effective debugging is not easy because the fault may not be immediately obvious. Software engineers need time to read, and analyze the collected failure data. The time delayed by the fault detection & correction processes should not be negligible. Experience shows that the software debugging process can be described, and modeled using queueing system. In this paper, we will use both finite, and infinite server queueing models to predict software reliability. We will also investigate the problem of imperfect debugging, where fixing one bug creates another. Numerical examples based on two sets of real failure data are presented, and discussed in detail. Experimental results show that the proposed framework incorporating both fault detection, and correction processes for SRGM has a fairly accurate prediction capability.", "paper_title": "Software reliability analysis and measurement using finite and infinite server queueing models", "paper_id": "WOS:000253840700022"}