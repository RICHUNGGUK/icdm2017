{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_embedded_systems"}, {"score": 0.004472234553892357, "phrase": "new_functionality"}, {"score": 0.0043481611772332495, "phrase": "multiple_applications"}, {"score": 0.004257360656055417, "phrase": "dynamic_nature"}, {"score": 0.004227515355865597, "phrase": "today's_applications"}, {"score": 0.0040102178375662914, "phrase": "energy_consumption"}, {"score": 0.003982098149664708, "phrase": "state-of-theart_design_methodologies"}, {"score": 0.0038989120088094185, "phrase": "novel_issues"}, {"score": 0.003737697279708501, "phrase": "newly_introduced_complexity"}, {"score": 0.0035705347414368696, "phrase": "modern_embedded_systems"}, {"score": 0.003483631502938922, "phrase": "existing_design_methodologies"}, {"score": 0.0033395304916220086, "phrase": "system_scenarios"}, {"score": 0.0033044432971036652, "phrase": "group_system_behaviors"}, {"score": 0.003235367401211807, "phrase": "multidimensional_cost_perspective"}, {"score": 0.0031901183059524804, "phrase": "resource_requirements"}, {"score": 0.002983652306921617, "phrase": "cost_similarity"}, {"score": 0.0028301085867789076, "phrase": "current_scenario"}, {"score": 0.0026844452074327265, "phrase": "design_trajectory"}, {"score": 0.0026375718041787, "phrase": "run-time_calibration_mechanism"}, {"score": 0.002449454693767392, "phrase": "current_input_stimuli"}, {"score": 0.0023646398663605493, "phrase": "scenario_definitions"}, {"score": 0.0021049977753042253, "phrase": "substantial_energy_reductions"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Design methodology", " dynamic nature", " embedded systems", " energy reduction", " real-time systems", " system scenarios"], "paper_abstract": "In the past decade, real-time embedded systems have become much more complex due to the introduction of a lot of new functionality in one application, and due to running multiple applications concurrently. This increases the dynamic nature of today's applications and systems, and tightens the requirements for their constraints in terms of deadlines and energy consumption. State-of-theart design methodologies try to cope with these novel issues by identifying several most used cases and dealing with them separately, reducing the newly introduced complexity. This article presents a generic and systematic design-time/run-time methodology for handling the dynamic nature of modern embedded systems, which can be utilized by existing design methodologies to increase their efficiency. It is based on the concept of system scenarios, which group system behaviors that are similar from a multidimensional cost perspective-such as resource requirements, delay, and energy consumption-in such a way that the system can be configured to exploit this cost similarity. At design-time, these scenarios are individually optimized. Mechanisms for predicting the current scenario at run-time, and for switching between scenarios, are also derived. This design trajectory is augmented with a run-time calibration mechanism, which allows the system to learn on-the-fly during its execution, and to adapt itself to the current input stimuli, by extending the scenario set, changing the scenario definitions, and both the prediction and switching mechanisms. To show the generality of our methodology, we show how it has been applied on four very different real-life design problems. In all presented case studies, substantial energy reductions were obtained by exploiting scenarios.", "paper_title": "System-Scenario-Based Design of Dynamic Embedded Systems", "paper_id": "WOS:000264681900003"}