{"auto_keywords": [{"score": 0.03880550409822826, "phrase": "rnc_algorithm"}, {"score": 0.00481495049065317, "phrase": "efficient_parallel_matching"}, {"score": 0.004093453936415085, "phrase": "perfect_matchings"}, {"score": 0.003584025547693836, "phrase": "almost_optimal_work"}, {"score": 0.003378385493203297, "phrase": "sequential_algorithms"}, {"score": 0.002706659627293686, "phrase": "matrix_multiplication_exponent"}, {"score": 0.002233301265743633, "phrase": "degree_one_polynomial_matrix"}, {"score": 0.0021049977753042253, "phrase": "independent_interest"}], "paper_keywords": ["parallel algorithms", " maximum matching", " fast matrix multiplication", " RNC algorithm"], "paper_abstract": "In this paper we consider the problem of finding perfect matchings in parallel. We present a RNC algorithm with almost optimal work with respect to sequential algorithms, i.e., it uses O(n(omega)) processors, where omega is the matrix multiplication exponent. Our algorithm is based on an RNC algorithm for computing determinant of a degree one polynomial matrix which is of independent interest.", "paper_title": "Processor efficient parallel matching", "paper_id": "WOS:000251645400005"}