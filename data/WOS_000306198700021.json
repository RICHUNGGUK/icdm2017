{"auto_keywords": [{"score": 0.037729709002419384, "phrase": "provenance_graph"}, {"score": 0.015719716506582538, "phrase": "distributed_processes"}, {"score": 0.008638874154472294, "phrase": "untrusted_environment"}, {"score": 0.005837755196959936, "phrase": "integrity_mechanism"}, {"score": 0.005216238724801427, "phrase": "tcs"}, {"score": 0.004377077848734575, "phrase": "distributed_system"}, {"score": 0.004252389342697521, "phrase": "medical_records"}, {"score": 0.004167218012926657, "phrase": "computer_systems"}, {"score": 0.003990385737207714, "phrase": "human-executed_processes"}, {"score": 0.0038654774211631564, "phrase": "directed_acyclic_graph"}, {"score": 0.0036694287631595995, "phrase": "causal_relationship"}, {"score": 0.0036167509502276294, "phrase": "sufficient_security_mechanisms"}, {"score": 0.0035340293330075453, "phrase": "confidentiality_problems"}, {"score": 0.003443219062200627, "phrase": "correct_nodes"}, {"score": 0.0034036089823450385, "phrase": "fake_nodes"}, {"score": 0.0033547343924455455, "phrase": "unauthorized_accesses"}, {"score": 0.0033257460346754687, "phrase": "sensitive_nodes"}, {"score": 0.0031753062090452864, "phrase": "digital_signature"}, {"score": 0.003066945490483524, "phrase": "nodes'_creation"}, {"score": 0.0029708567739251254, "phrase": "provenance_store"}, {"score": 0.002787591531872224, "phrase": "provenance_owner"}, {"score": 0.0027080590887226517, "phrase": "integrity_problem"}, {"score": 0.0023841543436866875, "phrase": "provenance_owners"}, {"score": 0.002316105585203396, "phrase": "efficient_access_control_administration"}, {"score": 0.0021049977753042253, "phrase": "provenance_data"}], "paper_keywords": ["provenance security", " access control model", " database encryption"], "paper_abstract": "Recently, there is much concern about the provenance of distributed processes, that is about the documentation of the origin and the processes to produce an object in a distributed system. The provenance has many applications in the forms of medical records, documentation of processes in the computer systems, recording the origin of data in the cloud, and also documentation of human-executed processes. The provenance of distributed processes can be modeled by a directed acyclic graph (DAG) where each node represents an entity, and an edge represents the origin and causal relationship between entities. Without sufficient security mechanisms, the provenance graph suffers from integrity and confidentiality problems, for example changes or deletions of the correct nodes, additions of fake nodes and edges, and unauthorized accesses to the sensitive nodes and edges. In this paper, we propose an integrity mechanism for provenance graph using the digital signature involving three parties: the process executors who are responsible in the nodes' creation, a provenance owner that records the nodes to the provenance store, and a trusted party that we call the Trusted Counter Server (TCS) that records the number of nodes stored by the provenance owner. We show that the mechanism can detect the integrity problem in the provenance graph, namely unauthorized and malicious \"authorized\" updates even if all the parties, except the TCS, collude to update the provenance. In this scheme, the TCS only needs a very minimal storage (linear with the number of the provenance owners). To protect the confidentiality and for an efficient access control administration, we propose a method to encrypt the provenance graph that allows access by paths and compartments in the provenance graph. We argue that encryption is important as a mechanism to protect the provenance data stored in an untrusted environment. We analyze the security of the integrity mechanism, and perform experiments to measure the performance of both mechanisms.", "paper_title": "Securing Provenance of Distributed Processes in an Untrusted Environment", "paper_id": "WOS:000306198700021"}