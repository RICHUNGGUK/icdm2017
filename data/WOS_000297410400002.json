{"auto_keywords": [{"score": 0.04804050199975018, "phrase": "hypergraph"}, {"score": 0.00481495049065317, "phrase": "partition_function"}, {"score": 0.0045108906244892165, "phrase": "non-negative_weights"}, {"score": 0.004350308086118336, "phrase": "k-subsets_s"}, {"score": 0.004256703909255889, "phrase": "km-element_set_v"}, {"score": 0.002961519813246521, "phrase": "constant_factor"}, {"score": 0.0027143926774929957, "phrase": "simple_polynomial-time_algorithm"}, {"score": 0.0023990982005125763, "phrase": "higher-dimensional_versions"}, {"score": 0.002347378595930709, "phrase": "van_der"}, {"score": 0.0022967713922705, "phrase": "bregman_minc"}, {"score": 0.0021049977753042253, "phrase": "perfect_and_nearly_perfect_matchings"}], "paper_keywords": [""], "paper_abstract": "Given non-negative weights w(S) on the k-subsets S of a km-element set V, we consider the sum of the products w(S1)center dot center dot center dot w(Sm) over all partitions V = S(1) boolean OR center dot center dot center dot boolean OR S(m) into pairwise disjoint k-subsets S(i). When the weights w(S) are positive and within a constant factor of each other, fixed in advance, we present a simple polynomial-time algorithm to approximate the sum within a polynomial in m factor. In the process, we obtain higher-dimensional versions of the van der Waerden and Bregman Minc bounds for permanents. We also discuss applications to counting of perfect and nearly perfect matchings in hypergraphs.", "paper_title": "Computing the Partition Function for Perfect Matchings in a Hypergraph", "paper_id": "WOS:000297410400002"}