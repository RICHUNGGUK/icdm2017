{"auto_keywords": [{"score": 0.04637570254730582, "phrase": "recursive_procedures"}, {"score": 0.004817182060377787, "phrase": "inference"}, {"score": 0.004243862930012258, "phrase": "hoare's_rule"}, {"score": 0.0037402558657576124, "phrase": "recursive_programs"}, {"score": 0.003613556291453534, "phrase": "first_rule"}, {"score": 0.003372844338742438, "phrase": "partial_equivalence"}, {"score": 0.0028715299874549245, "phrase": "third_rule"}, {"score": 0.0025892330566358503, "phrase": "reactive_programs"}, {"score": 0.0021049977753042253, "phrase": "backward_compatibility"}], "paper_keywords": [""], "paper_abstract": "Inspired by Hoare's rule for recursive procedures, we present three proof rules for the equivalence between recursive programs. The first rule can be used for proving partial equivalence of programs; the second can be used for proving their mutual termination; the third rule can be used for proving the equivalence of reactive programs. There are various applications to such rules, such as proving equivalence of programs after refactoring and proving backward compatibility.", "paper_title": "Inference rules for proving the equivalence of recursive procedures", "paper_id": "WOS:000257775700001"}