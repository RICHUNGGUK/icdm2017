{"auto_keywords": [{"score": 0.03625538332644932, "phrase": "bumper"}, {"score": 0.013993043657699107, "phrase": "serializable_transactions"}, {"score": 0.00481495049065317, "phrase": "distributed_transactions"}, {"score": 0.00475070135279933, "phrase": "large_scale_cloud_applications"}, {"score": 0.0045324756541157574, "phrase": "consistent_manner"}, {"score": 0.004237925318473508, "phrase": "high_availability"}, {"score": 0.00418134346679498, "phrase": "read-dominated_workloads"}, {"score": 0.004111672925576111, "phrase": "inherently_optimistic_nature"}, {"score": 0.004084129504819342, "phrase": "dur_protocols"}, {"score": 0.00398916666053909, "phrase": "conflict-intensive_scenarios"}, {"score": 0.0039624406239057944, "phrase": "existing_dur_schemes"}, {"score": 0.0038443635340052523, "phrase": "transaction_execution"}, {"score": 0.003717273538121102, "phrase": "update_transaction"}, {"score": 0.0033832583769880576, "phrase": "innovative_techniques"}, {"score": 0.0033045378860812403, "phrase": "high-contention_scenarios"}, {"score": 0.003152531962718477, "phrase": "update_transactions"}, {"score": 0.003131393466870228, "phrase": "spurious_aborts"}, {"score": 0.0027929100418926725, "phrase": "distributed_time-warping"}, {"score": 0.002664375650349975, "phrase": "hot_spots"}, {"score": 0.002593599898110531, "phrase": "dtw"}, {"score": 0.002558909812664716, "phrase": "programming_abstraction"}, {"score": 0.002524688179363081, "phrase": "delayed_actions"}, {"score": 0.00243291444168046, "phrase": "abort-free_fashion"}, {"score": 0.0023923066544220277, "phrase": "conflict-prone_data_manipulations"}, {"score": 0.002344468886431959, "phrase": "extensive_evaluation"}, {"score": 0.0023131084326717755, "phrase": "distributed_system"}, {"score": 0.002199189123395672, "phrase": "conflict-intensive_workloads"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed transactions", " Spurious aborts", " 1-copy serializability", " High scalability"], "paper_abstract": "Large scale cloud applications are difficult to program due to the need to access data in a consistent manner. To lift this burden from programmers, Deferred Update Replication (DUR) protocols provide serializable transactions with both high availability and performance in read-dominated workloads. However, the inherently optimistic nature of DUR protocols makes them prone to thrashing in conflict-intensive scenarios: existing DUR schemes, in fact, avoid any synchronization during transaction execution; thus, these schemes end up aborting any update transaction whose reads are no longer up to date by the time it attempts to commit. To tackle this problem, we introduce Bumper, a set of innovative techniques to reduce aborts of transactions in high-contention scenarios. At its core, Bumper relies on two key ideas. First, we spare update transactions from spurious aborts (i.e., unnecessary aborts of serializable transactions), by attempting to serialize the transactions in the past. For this, we use a novel distributed concurrency control scheme that we call Distributed Time-Warping (DTW). And second, we avoid aborts due to contention hot spots (that cannot be tackled by DTW) via a programming abstraction that we call Delayed Actions. These, allow for efficiently serializing, in an abort-free fashion, the execution of conflict-prone data manipulations. By means of an extensive evaluation, on a distributed system of 160 nodes, we show that Bumper can boost performance up to 3x in conflict-intensive workloads, while imposing negligible (about 2.5%) overheads in uncontended scenarios. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Bumper: Sheltering distributed transactions from conflicts", "paper_id": "WOS:000357544500003"}