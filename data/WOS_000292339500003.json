{"auto_keywords": [{"score": 0.023877351602378805, "phrase": "dioa"}, {"score": 0.0044026610128451256, "phrase": "input_actions"}, {"score": 0.0035804980565263024, "phrase": "automata_action_signatures"}, {"score": 0.0031193028729331667, "phrase": "dioa_model"}, {"score": 0.0025537472239953807, "phrase": "expected_properties"}, {"score": 0.0022710523337245337, "phrase": "restriction_operator"}, {"score": 0.002163930783583212, "phrase": "closed_model"}, {"score": 0.0021049977753042253, "phrase": "expected_system_properties"}], "paper_keywords": ["formal methods", " distributed systems", " dynamic input/output automata", " verification"], "paper_abstract": "By definition, an input/output (or I/O) automaton is closed if there are no input actions in its action signature, and open otherwise. The dynamic I/O automata (DIOA) model is a special kind of the I/O automata one in which automata can be created and destroyed dynamically, and automata action signatures can change from state to state. In this paper, we draw attention to the possibility that a DIOA model of a system is open in the sense of the above definition although it seems to the specifier to be closed. This can be the reason why some expected properties cannot be proved to hold for the system. We, therefore, introduce a restriction operator for DIOA to help obtain a closed model in which the expected system properties could be verified.", "paper_title": "Closing a System in the Dynamic Input/Output Automata Model", "paper_id": "WOS:000292339500003"}