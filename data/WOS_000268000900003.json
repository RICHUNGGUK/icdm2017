{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "metamodel-based_languages"}, {"score": 0.004689321062844586, "phrase": "model-based_development_context"}, {"score": 0.004360412703519539, "phrase": "general_purposes"}, {"score": 0.004274766964161756, "phrase": "specific_domains"}, {"score": 0.00400120581845038, "phrase": "mof"}, {"score": 0.003948613642680196, "phrase": "meta_object"}, {"score": 0.003459191419478298, "phrase": "structural_and_static_semantics"}, {"score": 0.003368816076401138, "phrase": "built-in_support"}, {"score": 0.0033025823350563087, "phrase": "behavioral_semantics"}, {"score": 0.0031739835218110015, "phrase": "formal_semantic_framework"}, {"score": 0.002951045605925464, "phrase": "metamodelling_principles"}, {"score": 0.002761954897932813, "phrase": "translational_approach"}, {"score": 0.0026543514413663893, "phrase": "weaving_approach"}, {"score": 0.0025509294021449254, "phrase": "formal_method"}, {"score": 0.0024678216843278806, "phrase": "current_metamodel_engineering_environments"}, {"score": 0.0024192592458651204, "phrase": "language_metamodels"}, {"score": 0.002387415084371473, "phrase": "precise_and_executable_semantics"}, {"score": 0.0022196020509093694, "phrase": "proposed_techniques"}, {"score": 0.002175913488493802, "phrase": "omg_metamodelling_framework"}, {"score": 0.0021330830123432614, "phrase": "behaviour_specification"}], "paper_keywords": ["Metamodelling", " Model-based development", " Model driven engineering", " Formal methods", " Abstract state machines", " Language semantics", " Semantic (meta-)hooking", " Weaving behaviour"], "paper_abstract": "In the model-based development context, metamodel-based languages are increasingly being defined and adopted either for general purposes or for specific domains of interest. However, meta-languages such as the MOF (Meta Object Facility)-combined with the OCL (Object Constraint Language) for expressing constraints-used to specify metamodels focus on structural and static semantics but have no built-in support for specifying behavioral semantics. This paper introduces a formal semantic framework for the definition of the semantics of metamodel-based languages. Using metamodelling principles, we propose several techniques, some based on the translational approach while others based on the weaving approach, all showing how the Abstract State Machine formal method can be integrated with current metamodel engineering environments to endow language metamodels with precise and executable semantics. We exemplify the use of our semantic framework by applying the proposed techniques to the OMG metamodelling framework for the behaviour specification of the Finite State Machines provided in terms of a metamodel.", "paper_title": "A semantic framework for metamodel-based languages", "paper_id": "WOS:000268000900003"}