{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "virtual_machines"}, {"score": 0.00860818090748592, "phrase": "xen"}, {"score": 0.008130423715916537, "phrase": "tsac"}, {"score": 0.004656647251517823, "phrase": "vital_role"}, {"score": 0.004192078165260057, "phrase": "practical_measurements"}, {"score": 0.0040735909648053105, "phrase": "isolation_problems"}, {"score": 0.004034841146538891, "phrase": "current_virtualized_systems"}, {"score": 0.003958439439112026, "phrase": "cache_interference"}, {"score": 0.003902085339580381, "phrase": "multi-core_processor"}, {"score": 0.0036669760226536977, "phrase": "load_information"}, {"score": 0.0036147562669032957, "phrase": "virtual_machine"}, {"score": 0.003413183361838603, "phrase": "time-sensitive_contention_management_approach"}, {"score": 0.003253791343615811, "phrase": "virtual_machine_monitor"}, {"score": 0.0031018195951638882, "phrase": "physical_resources"}, {"score": 0.002942811795757911, "phrase": "dynamical_manner"}, {"score": 0.002739001004969201, "phrase": "virtualized_system"}, {"score": 0.002661474607275484, "phrase": "working_prototype"}, {"score": 0.0025737890313763407, "phrase": "implemented_prototype"}, {"score": 0.002512926336312949, "phrase": "experimental_results"}, {"score": 0.0022188370388602813, "phrase": "victim_virtual_machine"}], "paper_keywords": ["Cloud", " virtual machine", " isolation", " performance", " access control", " scheduling"], "paper_abstract": "Virtualization plays a vital role in building the infrastructure of clouds, and isolation is considered as one of its important features. However, we demonstrate with practical measurements that there exist two kinds of isolation problems in current virtualized systems, due to cache interference in a multi-core processor. That is, one virtual machine could degrade the performance or obtain the load information of another virtual machine, which running on a same physical machine. Then we present a time-sensitive contention management approach (TSAC) for allocating resources dynamically in the virtual machine monitor, in which virtual machines are controlled to share some physical resources (e.g., CPU or page color) in a dynamical manner, in order to enforce isolation between the virtual machines without sacrificing performance of the virtualized system. We have implemented a working prototype based on Xen, evaluated the implemented prototype with experiments, and experimental results show that TSAC could significantly improve isolation of virtualization. Specifically, compared to the default Xen, TSAC could improve the performance of the victim virtual machine by up to about 78 percent, and perform well in blocking its cache-based load information leakage.", "paper_title": "TSAC: Enforcing Isolation of Virtual Machines in Clouds", "paper_id": "WOS:000352491300020"}