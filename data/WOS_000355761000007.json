{"auto_keywords": [{"score": 0.04987711504144141, "phrase": "particle_swarm_optimization"}, {"score": 0.04968368127981901, "phrase": "digital_pheromones"}, {"score": 0.04834942667192491, "phrase": "scientific_computations"}, {"score": 0.037198643942021645, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "graphics_hardware"}, {"score": 0.004756521061849989, "phrase": "programmable_graphics_processing_units"}, {"score": 0.00462291551375938, "phrase": "modern_gpus"}, {"score": 0.004548253531664032, "phrase": "floating_point_operations"}, {"score": 0.004511373893354558, "phrase": "traditional_central_processing_units"}, {"score": 0.004465692700016767, "phrase": "inherent_data"}, {"score": 0.004456611869693865, "phrase": "parallel_architecture"}, {"score": 0.0044385053213394175, "phrase": "higher_bandwidth_capabilities"}, {"score": 0.004357927940322685, "phrase": "noticeable_degradation"}, {"score": 0.004261419841494814, "phrase": "traditional_cpus"}, {"score": 0.004244102948402086, "phrase": "substantially_reduced_costs"}, {"score": 0.004201116661547646, "phrase": "expensive_computer_clusters"}, {"score": 0.004167040009209753, "phrase": "gpu_programmability"}, {"score": 0.00407474190126995, "phrase": "programming_languages"}, {"score": 0.004017069736114744, "phrase": "computing_language"}, {"score": 0.003912112659326054, "phrase": "gpu_languages"}, {"score": 0.003763608275199354, "phrase": "nvidia_cuda"}, {"score": 0.003680255112248214, "phrase": "microsoft"}, {"score": 0.0036281044670998987, "phrase": "platform_agnostic_lending"}, {"score": 0.003555111941328299, "phrase": "cpu"}, {"score": 0.003504596029432365, "phrase": "glsl"}, {"score": 0.0034060348526709634, "phrase": "formal_optimization"}, {"score": 0.003263349695567434, "phrase": "cpu_based_computing"}, {"score": 0.0031780228058373235, "phrase": "based_optimization_routines"}, {"score": 0.0031330024955943227, "phrase": "large_number"}, {"score": 0.0031202567197307, "phrase": "research_publications"}, {"score": 0.0030017207229983385, "phrase": "specific_gpu_hardware"}, {"score": 0.0029834193751732806, "phrase": "specific_problems"}, {"score": 0.002953164020173741, "phrase": "current_gpu_hardware_and_software_apis"}, {"score": 0.0028409576481842457, "phrase": "based_computing"}, {"score": 0.0028236336891860592, "phrase": "promising_computing_avenues"}, {"score": 0.002683304054823427, "phrase": "gpu_apis"}, {"score": 0.0025971657306501196, "phrase": "context_apis"}, {"score": 0.0024630345285372958, "phrase": "n-dimensional_design_spaces"}, {"score": 0.0024182330686905256, "phrase": "serial_and_parallel_cpu_computing_environments"}, {"score": 0.002350152413458658, "phrase": "digital_pheromone_variant"}, {"score": 0.0023406247443039504, "phrase": "pso"}, {"score": 0.002265422518417868, "phrase": "simplistic_sense_-_delegate_unconstrained_explicit_objective_function_evaluations"}, {"score": 0.0021748483128942687, "phrase": "different_gpu_apis"}, {"score": 0.0021222476760114914, "phrase": "optimization_companies"}, {"score": 0.0021049977753042253, "phrase": "informed_decisions"}], "paper_keywords": ["Optimization on graphics hardware", " Programmable hardware accelerated optimization", " Particle swarm optimization", " GLSL opencl cuda particle swarm optimization", " GPU Optimization", " Optimization using GPUs"], "paper_abstract": "Programmable Graphics Processing Units (GPUs) have lately become a promising means to perform scientific computations. Modern GPUs have proven to outperform the number of floating point operations when compared to traditional Central Processing Units (CPUs) through inherent data parallel architecture and higher bandwidth capabilities. They allow scientific computations to be performed without noticeable degradation in accuracy in a fraction of the time compared to traditional CPUs at substantially reduced costs, making them viable alternatives to expensive computer clusters or workstations. GPU programmability however, has fostered the development of a variety of programming languages making it challenging to select a computing language and use it consistently without the pitfall of being obsolete. Some GPU languages are hardware specific and are designed to rake in performance boosts when used with their host GPUs (e.g., Nvidia Cuda). Others are operating system specific (e.g., Microsoft HLSL). A few are platform agnostic lending themselves to be used on a workstation with any CPU and a GPU (e.g., GLSL, OpenCL). Of a number of companies and organizations that implement formal optimization into their processes, only a few utilize GPUs. It is either because the others are either vested much into CPU based computing or they are not fully aware of the benefits of implementing population based optimization routines in GPUs. Literature shows a large number of research publications specifically in the field of optimization utilizing GPUs. However, most of them are limited to a specific GPU hardware or addressed specific problems. The diversity in current GPU hardware and software APIs present overwhelming number of choices making it challenging to decide where and how to begin transitioning to GPU based computing, impeding promising computing avenues that relatively is very cost effective. In this paper, the authors precisely intend to address some of these issues by broadly classifying GPU APIs into three categories: 1) Hardware vendor dependent GPU APIs, 2) Graphical in context APIs, and 3) Platform agnostic APIs. Prior work by the authors demonstrated the capability of digital pheromones within Particle Swarm Optimization (PSO) for searching n-dimensional design spaces with improved accuracy, efficiency and reliability in serial and parallel CPU computing environments. To study the impact of GPUs, the authors have taken this digital pheromone variant of PSO and implemented it on three GPU APIs, each representing a category listed above, in a simplistic sense - delegate unconstrained explicit objective function evaluations to GPUs. While this approach itself cannot be considered novel, the takeaways from implementing it on different GPU APIs provided a wealth of information that the authors believe can help optimization companies and organizations make informed decisions in implementing GPUs in their processes.", "paper_title": "A study of graphics hardware accelerated particle swarm optimization with digital pheromones", "paper_id": "WOS:000355761000007"}