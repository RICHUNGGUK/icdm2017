{"auto_keywords": [{"score": 0.04430256680288919, "phrase": "state_complexities"}, {"score": 0.014418996088797043, "phrase": "combined_operations"}, {"score": 0.014253780177071377, "phrase": "regular_languages"}, {"score": 0.00481495049065317, "phrase": "square_and_reversal"}, {"score": 0.00475924837336259, "phrase": "k_regular_languages"}, {"score": 0.004464156619275582, "phrase": "state_complexity"}, {"score": 0.003111133215976132, "phrase": "exact_bounds"}, {"score": 0.002642615537454746, "phrase": "mathematical_compositions"}, {"score": 0.002551762519273805, "phrase": "individual_operations"}, {"score": 0.0021799789348982534, "phrase": "corresponding_mathematical_compositions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["State complexity", " Combined operations", " Regular languages", " Finite automata"], "paper_abstract": "In this paper, we continue our study on the state complexity of combined operations on regular languages. We study the state complexities of boolean OR(k)(i=1) L-i(2), boolean AND(k)(i=1) L-i(2), boolean OR(k)(i=1) L-i(R), and boolean AND(k)(i=1) L-i(R), for regular languages L-i, 1 <= i <= k, k >= 2. We obtain the exact bounds for these combined operations and show that the state complexities of boolean OR(k)(i=1) L-i(2) and boolean AND(k)(i=1) L-i(2) are the same as the mathematical compositions of the state complexities of their component individual operations, while, on the other hand, the state complexities of boolean OR(k)(i=1) L-i(R) and boolean AND(k)(i=1) L-i(R) are lower than the corresponding mathematical compositions. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "State complexity of union and intersection of square and reversal on k regular languages", "paper_id": "WOS:000308452100016"}