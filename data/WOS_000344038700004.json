{"auto_keywords": [{"score": 0.039624636080800406, "phrase": "qos_contracts"}, {"score": 0.00481495049065317, "phrase": "dynamic_reconfiguration"}, {"score": 0.004665764181113345, "phrase": "increasing_pervasiveness"}, {"score": 0.00462919213721188, "phrase": "computing_services"}, {"score": 0.004592905436175987, "phrase": "everyday_life"}, {"score": 0.004503422625191897, "phrase": "dynamic_nature"}, {"score": 0.004398331355940011, "phrase": "major_challenge"}, {"score": 0.004329630571352367, "phrase": "expected_quality"}, {"score": 0.004228577663320847, "phrase": "quality_of_service"}, {"score": 0.004065348865695599, "phrase": "expected_quality_levels"}, {"score": 0.003970439654470374, "phrase": "different_context_conditions"}, {"score": 0.003923815926819606, "phrase": "different_enforcing_mechanisms"}, {"score": 0.003728000957725218, "phrase": "high-level_policy"}, {"score": 0.003640938643675543, "phrase": "software_systems"}, {"score": 0.003500313767208306, "phrase": "context_changes"}, {"score": 0.003432044343307207, "phrase": "contract_definition"}, {"score": 0.003299460925313939, "phrase": "software_framework"}, {"score": 0.0032223742018434856, "phrase": "software_applications"}, {"score": 0.002931569771634119, "phrase": "graph_transformation_systems"}, {"score": 0.00290855128461017, "phrase": "finite-state_machines"}, {"score": 0.002645992747675361, "phrase": "design_patterns"}, {"score": 0.0025537472239953807, "phrase": "managed_software_application"}, {"score": 0.002494039334114861, "phrase": "self-adaptive_properties"}, {"score": 0.00241658945942583, "phrase": "contract_satisfaction"}, {"score": 0.002259916103925068, "phrase": "frascati"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Quality-of-Service (QoS) software contracts", " Reliable dynamic software reconfiguration", " Self-adaptive software properties", " QoS contract semantics", " Design patterns at runtime"], "paper_abstract": "The increasing pervasiveness of computing services in everyday life, combined with the dynamic nature of their execution contexts, constitutes a major challenge in guaranteeing the expected quality of such services at runtime. Quality of Service (QoS) contracts have been proposed to specify expected quality levels (QoS levels) on different context conditions, with different enforcing mechanisms. In this paper we present a definition for QoS contracts as a high-level policy for governing the behavior of software systems that self-adapt at runtime in response to context changes. To realize this contract definition, we specify its formal semantics and implement it in a software framework able to execute and reconfigure software applications, in order to maintain fulfilled their associated QoS contracts. The contribution of this paper is threefold. First, we extend typed-attributed graph transformation systems and finite-state machines, and use them as denotations to specify the semantics of QoS contracts. Second, this semantics makes it possible to systematically exploit design patterns at runtime by dynamically deploying them in the managed software application. Third, our semantics guarantees self-adaptive properties such as reliability and robustness in the contract satisfaction. Finally, we evaluate the applicability of our semantics implementation by integrating and executing it in FRASCATI, a multi-scale component-based middleware, in three case studies. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "QoS contract preservation through dynamic reconfiguration: A formal semantics approach", "paper_id": "WOS:000344038700004"}