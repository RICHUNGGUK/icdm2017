{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mixed-timing_systems"}, {"score": 0.004748556604045108, "phrase": "system-on-chip_designs"}, {"score": 0.004523272849033429, "phrase": "different_clock_frequencies"}, {"score": 0.004249188865832993, "phrase": "data_events"}, {"score": 0.0035965032173588753, "phrase": "formal_framework"}, {"score": 0.0035222812668916736, "phrase": "latency_insensitive_interconnect"}, {"score": 0.003107935254560724, "phrase": "correct_order"}, {"score": 0.0023043558058824572, "phrase": "tagged-signal_framework"}, {"score": 0.0021947755130109696, "phrase": "mixed-timing_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal framework", " Latency insensitive", " Patient process", " Multiple clock modules", " Interconnect", " System-on-Chip", " Formal methods"], "paper_abstract": "System-on-chip designs are composed of modules working at different clock frequencies. These modules will communicate using control and data events. However, they cannot be directly connected as their events will not be synchronised. In this paper, we give a formal framework for a latency insensitive interconnect which can be used for assembling such modules. The interface guarantees that the events are sent in correct order and there is no loss of information. Also, any change in the latency of event transmission by the sender or un-availability of the receiver to receive an event is handled correctly. We prove properties of the interface using the tagged-signal framework and illustrate the construction of a mixed-timing system. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A formal framework for interfacing mixed-timing systems", "paper_id": "WOS:000320211800006"}