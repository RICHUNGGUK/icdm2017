{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "program_behavior"}, {"score": 0.049352273134126434, "phrase": "active_automata_learning"}, {"score": 0.004529093447865156, "phrase": "rers_challenge"}, {"score": 0.004163508168242745, "phrase": "ltl"}, {"score": 0.0041001740903338834, "phrase": "reachability_properties"}, {"score": 0.003946195919158241, "phrase": "reactive_programs"}, {"score": 0.00346449481422526, "phrase": "available_information"}, {"score": 0.0030648097361278856, "phrase": "mixed_form"}, {"score": 0.002690406375639144, "phrase": "challenge_problems"}, {"score": 0.002472822097373027, "phrase": "automata_learning_algorithms"}, {"score": 0.0022382002476510573, "phrase": "problem-specific_obstacles"}, {"score": 0.0021705796895687864, "phrase": "general_optimizations"}, {"score": 0.0021049977753042253, "phrase": "achieved_results"}], "paper_keywords": ["Program analysis", " Model construction", " Active automata learning", " Verification"], "paper_abstract": "The objective of the RERS Challenge 2013 was to analyze program behavior with respect to given sets of LTL and reachability properties for a set of reactive programs. The programs in various sizes and complexities could be divided into three different categories, depending on the available information: from black-box (binary-only) to white-box (full source code) over a mixed form thereof (grey-box). In this paper we present our approach to tackling the challenge problems, which is based on active automata learning. This required extending automata learning algorithms to exploit the given information, and adapting them in order to overcome problem-specific obstacles. We describe general optimizations and discuss the achieved results.", "paper_title": "Analyzing program behavior through active automata learning", "paper_id": "WOS:000209673300007"}