{"auto_keywords": [{"score": 0.035869125830816424, "phrase": "feature_selection"}, {"score": 0.015719716506582538, "phrase": "high-risk_program_modules"}, {"score": 0.008183400549848263, "phrase": "data_sampling"}, {"score": 0.004727837281331949, "phrase": "right_software_measurements"}, {"score": 0.004663533386096864, "phrase": "timely_detection"}, {"score": 0.004579147045265106, "phrase": "high-assurance_software"}, {"score": 0.004455409162867219, "phrase": "high_consequences"}, {"score": 0.004414907432703781, "phrase": "operational_failures"}, {"score": 0.004354841111644036, "phrase": "software_risk"}, {"score": 0.004276016541197123, "phrase": "external_sources"}, {"score": 0.004122604238556912, "phrase": "software_quality"}, {"score": 0.004029517895918228, "phrase": "internal_software_risks"}, {"score": 0.003920573616298175, "phrase": "improper_practice"}, {"score": 0.0038849148160362257, "phrase": "standard_software_processes"}, {"score": 0.0037971749182744334, "phrase": "defined_software_quality_infrastructure"}, {"score": 0.0036441884295335502, "phrase": "high-risk_or_low-quality_program_modules"}, {"score": 0.003465521267039616, "phrase": "software_measurements"}, {"score": 0.003325852346387272, "phrase": "software_quality_prediction"}, {"score": 0.00325069754015951, "phrase": "wrapper-based_feature"}, {"score": 0.0031627430133087616, "phrase": "optimal_set"}, {"score": 0.0031339552246625463, "phrase": "software_metrics"}, {"score": 0.003091262582401731, "phrase": "defect_prediction_models"}, {"score": 0.0030076088903023034, "phrase": "adverse_effects"}, {"score": 0.0029802289354540507, "phrase": "class_imbalance"}, {"score": 0.0028470123663391126, "phrase": "high-quality_modules"}, {"score": 0.0027954035431845344, "phrase": "practical_problem"}, {"score": 0.0027573101010593863, "phrase": "high-assurance_systems"}, {"score": 0.0027073229284666294, "phrase": "data_sampling_technique"}, {"score": 0.002634031703695684, "phrase": "relatively_unique_contribution"}, {"score": 0.002551022760887132, "phrase": "comprehensive_investigation"}, {"score": 0.0024147474002390763, "phrase": "defect_predictors"}, {"score": 0.0023818288346547692, "phrase": "imbalanced_data"}, {"score": 0.0023386327847292805, "phrase": "study_data"}, {"score": 0.0021049977753042253, "phrase": "prediction_performance"}], "paper_keywords": ["Feature selection", " Imbalanced data", " Data sampling", " Wrapper-based feature ranking", " Performance metrics", " Software quality classification"], "paper_abstract": "A timely detection of high-risk program modules in high-assurance software is critical for avoiding the high consequences of operational failures. While software risk can initiate from external sources, such as management or outsourcing, software quality is adversely affected when internal software risks are realized, such as improper practice of standard software processes or lack of a defined software quality infrastructure. Practitioners employ various techniques to identify and rectify high-risk or low-quality program modules. Effectiveness of detecting such modules is affected by the software measurements used, making feature selection an important step during software quality prediction. We use a wrapper-based feature ranking technique to select the optimal set of software metrics to build defect prediction models. We also address the adverse effects of class imbalance (very few low-quality modules compared to high-quality modules), a practical problem observed in high-assurance systems. Applying a data sampling technique followed by feature selection is a relatively unique contribution of our work. We present a comprehensive investigation on the impact of data sampling followed by attribute selection on the defect predictors built with imbalanced data. The case study data are obtained from several real-world high-assurance software projects. The key results are that attribute selection is more efficient when applied after data sampling, and defect prediction performance generally improves after applying data sampling and feature selection.", "paper_title": "Predicting high-risk program modules by selecting the right software measurements", "paper_id": "WOS:000298864600001"}