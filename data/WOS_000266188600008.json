{"auto_keywords": [{"score": 0.031488004489243424, "phrase": "founded_repairs"}, {"score": 0.022638699662255245, "phrase": "active_integrity_constraints"}, {"score": 0.008708440537460067, "phrase": "update_actions"}, {"score": 0.00481495049065317, "phrase": "database_consistency_maintenance"}, {"score": 0.004498490110526062, "phrase": "integrity_constraints"}, {"score": 0.004451676867747938, "phrase": "consistent_database_maintenance"}, {"score": 0.004382364826200616, "phrase": "active_integrity_constraint"}, {"score": 0.004314127287770832, "phrase": "special_constraint"}, {"score": 0.0033381913087533457, "phrase": "domino-like_manner"}, {"score": 0.0029131986574478046, "phrase": "minimal_sets"}, {"score": 0.002823050755743821, "phrase": "database_consistent"}, {"score": 0.0023499703712897293, "phrase": "disjunctive_logic_rules"}, {"score": 0.0022299587520401747, "phrase": "answer_sets"}, {"score": 0.0021951623041245897, "phrase": "derived_logic_program"}, {"score": 0.0021049977753042253, "phrase": "computational_complexity"}], "paper_keywords": ["Database semantics", " inconsistent databases", " database repairs", " consistent query answering"], "paper_abstract": "This paper introduces active integrity constraints (AICs), an extension of integrity constraints for consistent database maintenance. An active integrity constraint is a special constraint whose body contains a conjunction of literals which must be false and whose head contains a disjunction of update actions representing actions (insertions and deletions of tuples) to be performed if the constraint is not satisfied (that is its body is true). The AICs work in a domino-like manner as the satisfaction of one AIC may trigger the violation and therefore the activation of another one. The paper also introduces founded repairs, which are minimal sets of update actions that make the database consistent, and are specified and \"supported\" by active integrity constraints. The paper presents: 1) a formal declarative semantics allowing the computation of founded repairs and 2) a characterization of this semantics obtained by rewriting active integrity constraints into disjunctive logic rules, so that founded repairs can be derived from the answer sets of the derived logic program. Finally, the paper studies the computational complexity of computing founded repairs.", "paper_title": "Active Integrity Constraints for Database Consistency Maintenance", "paper_id": "WOS:000266188600008"}