{"auto_keywords": [{"score": 0.02531198041242304, "phrase": "gss_inspections"}, {"score": 0.00481495049065317, "phrase": "repeatable_collaboration_process"}, {"score": 0.004631335513513859, "phrase": "software_products"}, {"score": 0.004586531354697466, "phrase": "today's_world"}, {"score": 0.00436890075128947, "phrase": "software_development"}, {"score": 0.004263972370406983, "phrase": "continuous_need"}, {"score": 0.004101281992566145, "phrase": "software_quality"}, {"score": 0.004061584718427419, "phrase": "software_code_inspection"}, {"score": 0.003831310632470526, "phrase": "collaborative_code_inspection_process"}, {"score": 0.003721098220825489, "phrase": "action_research_study"}, {"score": 0.003685067218455088, "phrase": "collaboration_engineering_principles"}, {"score": 0.00342568771304873, "phrase": "facilitation_skill"}, {"score": 0.003359647377874098, "phrase": "subsequently_field"}, {"score": 0.003294875957676514, "phrase": "traditional_paper-based_and_group_support_system"}, {"score": 0.003107935254560724, "phrase": "software_code"}, {"score": 0.0026209522797963447, "phrase": "collaborative_inspection_process"}, {"score": 0.0025085435314540837, "phrase": "css_inspections"}, {"score": 0.002400944221804575, "phrase": "major_defects"}, {"score": 0.0022101055924375725, "phrase": "paper_inspections"}, {"score": 0.0021780349459687622, "phrase": "practical_perspective"}, {"score": 0.002135995282374723, "phrase": "managing_defects"}, {"score": 0.0021050131362964773, "phrase": "gss"}], "paper_keywords": ["collaboration", " thinkLets", " Collaboration Engineering", " Group Support Systems", " action research", " code inspection", " Fagan inspection"], "paper_abstract": "The use of software products in today's world has increased dramatically making quality an important aspect of software development. There is a continuous need to develop processes to control and increase software quality. Software code inspection is one way to pursue this goal. This paper presents a collaborative code inspection process that was designed during an action research study using Collaboration Engineering principles and techniques. Our inspection process was implemented as a sequence of thinkLets, chunks of facilitation skill, that were subsequently field tested in a traditional paper-based and Group Support System (GSS)-based environment. Four inspections were performed on four different pieces of software code in two different organizations. Results show that regardless of the implementation, the process was found to be successful in uncovering many major, minor, and false-positive defects in inspected pieces of code. Overall observations and feedback suggest that the collaborative inspection process was considered to be productive and satisfactory. CSS inspections were more effective, especially in terms of major defects. GSS inspections were also found to be more efficient. Finally, the GSS inspections outperformed the paper inspections from a practical perspective: logging and managing defects in a GSS was far superior.", "paper_title": "A collaborative software code inspection: The design and evaluation of a repeatable collaboration process in the field", "paper_id": "WOS:000237855600004"}