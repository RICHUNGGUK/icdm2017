{"auto_keywords": [{"score": 0.036813971989149166, "phrase": "new_design"}, {"score": 0.00481495049065317, "phrase": "extreme_programming_engineering_activities"}, {"score": 0.004639076496728685, "phrase": "xp"}, {"score": 0.004502943680955863, "phrase": "agile_software_process"}, {"score": 0.004403480614319231, "phrase": "early_and_quick_production"}, {"score": 0.0030794433253250476, "phrase": "refactoring_and_error_fix_efforts"}, {"score": 0.0027949428646076627, "phrase": "error_fix_effort"}, {"score": 0.002389696110283506, "phrase": "refactoring_effort"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["extreme programming", " design evolution", " extreme programming engineering activities", " empirical study"], "paper_abstract": "Extreme programming (XP) is an agile software process that promotes early and quick production of working code. In this paper, we investigated the relationship among three XP engineering activities: new design, refactoring, and error fix. We found that the more the new design performed to the system the less refactoring and error fix were performed. However, the refactoring and error fix efforts did not seem to be related. We also found that the error fix effort is related to number of days spent on each story, while new design is not. The relationship between the refactoring effort and number of days spent on each story was not conclusive. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "An empirical study of relationships among extreme programming engineering activities", "paper_id": "WOS:000241716400007"}