{"auto_keywords": [{"score": 0.00481503701860275, "phrase": "api"}, {"score": 0.004760017604908536, "phrase": "symmetric_key_management"}, {"score": 0.0047057084749407485, "phrase": "cryptographic_devices"}, {"score": 0.0045726187330434025, "phrase": "new_symmetric_key_management_api"}, {"score": 0.004392565073466714, "phrase": "security_protocols"}, {"score": 0.004342430078306461, "phrase": "distributed_systems"}, {"score": 0.004219571240696568, "phrase": "formal_security_policy"}, {"score": 0.004053362743156545, "phrase": "symbolic_model"}, {"score": 0.0038271712887391015, "phrase": "previous_apis"}, {"score": 0.0035518193979811367, "phrase": "clear_security_policy"}, {"score": 0.0032028587883593702, "phrase": "security_policy"}, {"score": 0.003058944053868522, "phrase": "creation_time"}, {"score": 0.002758273619951683, "phrase": "novel_features"}, {"score": 0.0026191799769765085, "phrase": "freshness_check"}, {"score": 0.0025596276616952516, "phrase": "encrypted_key"}, {"score": 0.002294686545883412, "phrase": "api_commands"}, {"score": 0.0021789194955896124, "phrase": "clark-jacob_protocols_suite"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Security APIs", " Key management", " PKCS#11", " Cryptographic devices"], "paper_abstract": "We present a new symmetric key management API for cryptographic devices intended to implement security protocols in distributed systems. Our API has a formal security policy and proofs of security in the symbolic model, under various threat scenarios. This sets it apart from previous APIs such as RSA PKCS#11, which are under-specified, lack a clear security policy and are often subject to attacks. Our design is based on the principle of explicitness: the security policy for a key must be given at creation time, and this policy is then included in any ciphertext containing the key. Our API also contains novel features such as the possibility of insisting on a freshness check before accepting an encrypted key for import. To show the applicability of our design, we give an algorithm for automatically instantiating the API commands for a given key management protocol and apply it on the Clark-Jacob protocols suite. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A generic security API for symmetric key management on cryptographic devices", "paper_id": "WOS:000343991900009"}