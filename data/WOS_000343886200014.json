{"auto_keywords": [{"score": 0.03895000187878607, "phrase": "read-write_asymmetry"}, {"score": 0.015719716506582538, "phrase": "flash_memory_devices"}, {"score": 0.009543629985088224, "phrase": "runtime_workload"}, {"score": 0.0041703614123283165, "phrase": "memory's_unique_hardware_features"}, {"score": 0.004064653055162238, "phrase": "inherent_read-write_asymmetry"}, {"score": 0.003982011128052839, "phrase": "expensive_erase_operations"}, {"score": 0.0036303546926971966, "phrase": "buffer_management"}, {"score": 0.003292685392413911, "phrase": "traditional_miss_rate"}, {"score": 0.003143849342926373, "phrase": "buffer_management_algorithms"}, {"score": 0.0028807718824400697, "phrase": "different_degrees"}, {"score": 0.0027223626424366207, "phrase": "new_replacement_algorithm"}, {"score": 0.0026532596852754525, "phrase": "clean_and_dirty_pages"}, {"score": 0.0025726416100664853, "phrase": "size_ratio"}, {"score": 0.0023211517663846346, "phrase": "trace-driven_experiments"}, {"score": 0.0022973933270056743, "phrase": "real_flash_memory_devices"}, {"score": 0.0021487685525986094, "phrase": "flash_memory"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_flash-aware_replacement_policies"}], "paper_keywords": ["Flash memory", " buffer management", " solid-state drives", " read-write asymmetry"], "paper_abstract": "In this paper, we present a design and implementation of FD-Buffer, a cost-based adaptive buffer manager for flash memory devices. Due to flash memory's unique hardware features, it has an inherent read-write asymmetry: writes involve expensive erase operations, which usually makes them much slower than reads. To address this read-write asymmetry, we revisit buffer management and consider the average I/O cost per page access as the main cost metric, as opposed to the traditional miss rate. While there have been a number of buffer management algorithms that take the read-write asymmetry into consideration, most algorithms fail to effectively adapt to the runtime workload or different degrees of asymmetry. In this paper, we develop a new replacement algorithm in which we separate clean and dirty pages into two pools. The size ratio of the two pools is automatically adapted based on the read-write asymmetry and the runtime workload. We evaluate the FD-Buffer with trace-driven experiments on real flash memory devices. Our trace-driven evaluation results show that our algorithm achieves 4.0-33.4 percent improvement of I/O performance on flash memory, compared to state-of-the-art flash-aware replacement policies.", "paper_title": "FD-Buffer: A Cost-Based Adaptive Buffer Replacement Algorithm for Flash Memory Devices", "paper_id": "WOS:000343886200014"}