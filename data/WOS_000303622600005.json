{"auto_keywords": [{"score": 0.046472264908892405, "phrase": "transient_visualizations"}, {"score": 0.0102062504299666, "phrase": "source_code"}, {"score": 0.00481495049065317, "phrase": "source_code_interfaces"}, {"score": 0.004761494044422926, "phrase": "transient_use"}, {"score": 0.00470862827326028, "phrase": "information_visualization"}, {"score": 0.004630423009638876, "phrase": "specific_tasks"}, {"score": 0.004502943680955863, "phrase": "user_interface"}, {"score": 0.004403480614319231, "phrase": "immediate_and_transient_use"}, {"score": 0.004118026552723285, "phrase": "user's_focus"}, {"score": 0.0035216195857272403, "phrase": "fisheye_view"}, {"score": 0.0032383707002544755, "phrase": "linear_view"}, {"score": 0.003011328068286321, "phrase": "widespread_programming_environment"}, {"score": 0.002977835845437357, "phrase": "fourteen_participants"}, {"score": 0.0029447150254434842, "phrase": "varied_tasks"}, {"score": 0.002677616534005393, "phrase": "time_and_accuracy_measures"}, {"score": 0.002603758927691463, "phrase": "subjective_data"}, {"score": 0.0025178072071268534, "phrase": "permanent_fisheye_view"}, {"score": 0.0024620842899061614, "phrase": "interaction_data"}, {"score": 0.0022893422054387235, "phrase": "transient_interface"}, {"score": 0.002176887956041267, "phrase": "seamless_integration"}, {"score": 0.0021526564019119466, "phrase": "fisheye_views"}, {"score": 0.002128694000627911, "phrase": "existing_user_interfaces"}, {"score": 0.0021049977753042253, "phrase": "future_work"}], "paper_keywords": ["information visualization", " fisheye view", " transient visualizations", " user study", " programming"], "paper_abstract": "Transient use of information visualization may support specific tasks without permanently changing the user interface. Transient visualizations provide immediate and transient use of information visualization close to and in the context of the user's focus of attention. Little is known, however, about the benefits and limitations of transient visualizations. We describe an experiment that compares the usability of a fisheye view that participants could call up temporarily, a permanent fisheye view, and a linear view: all interfaces gave access to source code in the editor of a widespread programming environment. Fourteen participants performed varied tasks involving navigation and understanding of source code. Participants used the three interfaces for between four and six hours in all. Time and accuracy measures were inconclusive, but subjective data showed a preference for the permanent fisheye view. We analyse interaction data to compare how participants used the interfaces and to understand why the transient interface was not preferred. We conclude by discussing seamless integration of fisheye views in existing user interfaces and future work on transient visualizations.", "paper_title": "Transient or permanent fisheye views: A comparative evaluation of source code interfaces", "paper_id": "WOS:000303622600005"}