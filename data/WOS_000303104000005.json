{"auto_keywords": [{"score": 0.040448007601905894, "phrase": "fourier"}, {"score": 0.00481495049065317, "phrase": "computer_generation_of_hardware"}, {"score": 0.004773904938276846, "phrase": "linear_digital_signal_processing_transforms"}, {"score": 0.00473320761888448, "phrase": "linear_signal"}, {"score": 0.004632968695963776, "phrase": "discrete_fourier_transform"}, {"score": 0.00445783412174435, "phrase": "digital_signal_processing"}, {"score": 0.004344755264641137, "phrase": "high_performance"}, {"score": 0.003988055287053139, "phrase": "large_number"}, {"score": 0.003954030683259778, "phrase": "algorithmic_options"}, {"score": 0.0036448787596988423, "phrase": "fixed_algorithm"}, {"score": 0.0035523480068927614, "phrase": "sequential_datapath"}, {"score": 0.003359816816853762, "phrase": "best_choices"}, {"score": 0.003288567185099276, "phrase": "resource_budget"}, {"score": 0.00319134078848996, "phrase": "target_application"}, {"score": 0.002862797538547919, "phrase": "ip"}, {"score": 0.0028181504086563967, "phrase": "spiral_hardware_generation_framework"}, {"score": 0.0027702126237754625, "phrase": "linear_transforms"}, {"score": 0.0026998264237910884, "phrase": "problem_specification"}, {"score": 0.002634578602622454, "phrase": "fpga"}, {"score": 0.002564360070426064, "phrase": "desired_datapath"}, {"score": 0.0025207284405252914, "phrase": "mathematical_language"}, {"score": 0.0024356742694508662, "phrase": "datapath_characteristics"}, {"score": 0.002254624822004988, "phrase": "synthesizable_register_transfer_level_verilog_description"}, {"score": 0.0022067604433257814, "phrase": "asic_implementation"}, {"score": 0.002150659690967412, "phrase": "generated_designs_rivals"}], "paper_keywords": ["Algorithms", " Design", " Digital signal processing transform", " discrete Fourier transform", " fast Fourier transform", " hardware generation", " high-level synthesis", " linear transform"], "paper_abstract": "Linear signal transforms such as the discrete Fourier transform (DFT) are very widely used in digital signal processing and other domains. Due to high performance or efficiency requirements, these transforms are often implemented in hardware. This implementation is challenging due to the large number of algorithmic options (e. g., fast Fourier transform algorithms or FFTs), the variety of ways that a fixed algorithm can be mapped to a sequential datapath, and the design of the components of this datapath. The best choices depend heavily on the resource budget and the performance goals of the target application. Thus, it is difficult for a designer to determine which set of options will best meet a given set of requirements. In this article we introduce the Spiral hardware generation framework and system for linear transforms. The system takes a problem specification as input as well as directives that define characteristics of the desired datapath. Using a mathematical language to represent and explore transform algorithms and datapath characteristics, the system automatically generates an algorithm, maps it to a datapath, and outputs a synthesizable register transfer level Verilog description suitable for FPGA or ASIC implementation. The quality of the generated designs rivals the best available handwritten IP cores.", "paper_title": "Computer Generation of Hardware for Linear Digital Signal Processing Transforms", "paper_id": "WOS:000303104000005"}