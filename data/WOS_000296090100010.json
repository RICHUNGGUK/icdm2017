{"auto_keywords": [{"score": 0.04960770684597511, "phrase": "complex_queries"}, {"score": 0.00481495049065317, "phrase": "lightweight_multidimensional_index"}, {"score": 0.004448471107649881, "phrase": "multidimensional_data"}, {"score": 0.004339744430169516, "phrase": "distributed_hash_tables"}, {"score": 0.004171259063201874, "phrase": "indexing_approach"}, {"score": 0.004089475312474684, "phrase": "multidimensional_index_tree"}, {"score": 0.003989487818395848, "phrase": "dht-a_paradigm"}, {"score": 0.0037222908218253054, "phrase": "dht_substrate"}, {"score": 0.003507504253087326, "phrase": "novel_indexing_scheme"}, {"score": 0.003455765987713262, "phrase": "lightweight_hash_tree"}, {"score": 0.0032724821705972357, "phrase": "data_locality"}, {"score": 0.003192406091820197, "phrase": "clever_naming_mechanism"}, {"score": 0.003114283314285167, "phrase": "tree-based_index"}, {"score": 0.003068342551915923, "phrase": "dht"}, {"score": 0.0030081030319492343, "phrase": "high_efficiency"}, {"score": 0.0029637093924781825, "phrase": "index_maintenance"}, {"score": 0.0029344771385297163, "phrase": "query_processing"}, {"score": 0.002834409847642238, "phrase": "load_balancing_issue"}, {"score": 0.002737745536992088, "phrase": "new_data-aware_splitting_strategy"}, {"score": 0.00263129148531588, "phrase": "fixed_index_size"}, {"score": 0.002579622880371082, "phrase": "detailed_algorithms"}, {"score": 0.002504011301105577, "phrase": "m-light_index"}, {"score": 0.0024306105794630246, "phrase": "extensive_performance_evaluation"}, {"score": 0.002223039450439376, "phrase": "index_maintenance_overhead"}, {"score": 0.0021259846592569386, "phrase": "bandwidth_consumption"}, {"score": 0.0021049977753042253, "phrase": "response_latency"}], "paper_keywords": ["P2P systems", " distributed hash tables", " multi-dimensional indexing", " range queries", " k-NN queries"], "paper_abstract": "In this paper, we study the problem of indexing multidimensional data in P2P networks based on distributed hash tables (DHTs). We advocate the indexing approach that superimposes a multidimensional index tree on top of a DHT-a paradigm that keeps the underlying DHT intact while being able to adapt to any DHT substrate. In this context, we identify several index design issues and propose a novel indexing scheme called multidimensional Lightweight Hash Tree (m-LIGHT). First, to preserve data locality, m-LIGHT employs a clever naming mechanism that gracefully maps a tree-based index into the DHT and contributes to high efficiency in both index maintenance and query processing. Second, to tackle the load balancing issue, m-LIGHT leverages a new data-aware splitting strategy that achieves optimal load balance under a fixed index size. We present detailed algorithms for processing complex queries over the m-LIGHT index. We also conduct an extensive performance evaluation of m-LIGHT in comparison with several state-of-the-art indexing schemes. The experimental results show that m-LIGHT substantially reduces index maintenance overhead and improves query performance in terms of both bandwidth consumption and response latency.", "paper_title": "A Lightweight Multidimensional Index for Complex Queries over DHTs", "paper_id": "WOS:000296090100010"}