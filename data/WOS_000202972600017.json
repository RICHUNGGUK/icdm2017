{"auto_keywords": [{"score": 0.033148814747548876, "phrase": "tlb"}, {"score": 0.00481495049065317, "phrase": "accurate_cpi_components"}, {"score": 0.004742730438544081, "phrase": "common_way"}, {"score": 0.004671588539217021, "phrase": "processor_performance"}, {"score": 0.004288059466938456, "phrase": "baseline_cpi"}, {"score": 0.00418134346679498, "phrase": "individual_miss_event_cpi_components"}, {"score": 0.00363080961099728, "phrase": "software_application_developers"}, {"score": 0.003594369823549604, "phrase": "computer_architects"}, {"score": 0.0035048567587934254, "phrase": "cpi_stacks"}, {"score": 0.0033832583769880576, "phrase": "order_processors"}, {"score": 0.002952356518921907, "phrase": "meaningful_and_accurate_cpi_stacks"}, {"score": 0.002878785759716458, "phrase": "superscalar_out-of-order_processors"}, {"score": 0.0026688629249775925, "phrase": "order_processor_performance"}, {"score": 0.0025761937402886954, "phrase": "performance_impact"}, {"score": 0.0024125253170522816, "phrase": "novel_way"}, {"score": 0.0023762535034673017, "phrase": "hardware_performance"}, {"score": 0.0023287359930308864, "phrase": "accurate_cpi_stacks"}, {"score": 0.0022937210378944457, "phrase": "additional_hardware"}, {"score": 0.0021807544600219216, "phrase": "existing_hardware_performance_counter_architectures"}, {"score": 0.0021049977753042253, "phrase": "previous_approaches"}], "paper_keywords": ["hardware performance counter architecture", " super-scalar processor performance modeling"], "paper_abstract": "A common way of representing processor performance is to use Cycles per Instruction (CPI) `stacks' which break performance into a baseline CPI plus a number of individual miss event CPI components. CPI stacks can be very helpful in gaining insight into the behavior of an application on a given microprocessor; consequently, they are widely used by software application developers and computer architects. However, computing CPI stacks on superscalar out-of-order processors is challenging because of various overlaps among execution and miss events ( cache misses, TLB misses, and branch mispredictions). This paper shows that meaningful and accurate CPI stacks can be computed for superscalar out-of-order processors. Using interval analysis, a novel method for analyzing out-of-order processor performance, we gain understanding into the performance impact of the various miss events. Based on this understanding, we propose a novel way of architecting hardware performance counters for building accurate CPI stacks. The additional hardware for implementing these counters is limited and comparable to existing hardware performance counter architectures while being significantly more accurate than previous approaches.", "paper_title": "A performance counter architecture for computing accurate CPI components", "paper_id": "WOS:000202972600017"}