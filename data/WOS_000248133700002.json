{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "total_flow_time"}, {"score": 0.009460821592826957, "phrase": "np"}, {"score": 0.004776669953449352, "phrase": "parallel_machines"}, {"score": 0.004375061788023814, "phrase": "multiprocessor_setting"}, {"score": 0.003943569631183138, "phrase": "good_measurement"}, {"score": 0.0038965930422333035, "phrase": "overall_quality"}, {"score": 0.0038195342195623764, "phrase": "approximation_algorithms"}, {"score": 0.00374399358035391, "phrase": "basic_scheduling_problem"}, {"score": 0.003512123587588346, "phrase": "shortest_remaining_processing_time"}, {"score": 0.00334766260508788, "phrase": "approximation_algorithm"}, {"score": 0.0029693204265884327, "phrase": "minimum_processing_time"}, {"score": 0.002708399936381754, "phrase": "on-line_problem"}, {"score": 0.002530359917257626, "phrase": "constant_factor"}, {"score": 0.0025202591503224537, "phrase": "srpt"}, {"score": 0.0024901940672239784, "phrase": "optimal_on-line_algorithm"}, {"score": 0.0024408799645640323, "phrase": "non-preemptive_case"}, {"score": 0.0023925401023682717, "phrase": "general_technique"}, {"score": 0.0023357913211723884, "phrase": "preemptive_solution"}, {"score": 0.0023079225317714815, "phrase": "non-preemptive_solution"}, {"score": 0.0022085455097790537, "phrase": "approximation_ratio"}], "paper_keywords": ["parallel machine scheduling", " flow-time optimization", " on-line algorithms", " competitive analysis", " approximation algorithms"], "paper_abstract": "We consider the problem of optimizing the total flow time of a stream of jobs that are released over time in a multiprocessor setting. This problem is NP-hard even when there are only two machines and preemption is allowed. Although the total (or average) flow time is widely accepted as a good measurement of the overall quality of service, no approximation algorithms were known for this basic scheduling problem. This paper contains two main results. We first prove that when preemption is allowed, Shortest Remaining Processing Time (SRPT) is an O(log(min{n/m, P})) approximation algorithm for the total flow time, where it is the number of jobs, In is the number of machines, and P is the ratio between the maximum and the minimum processing time of a job. We also provide an R(log( + P)) lower bound on the (worst case) competitive ratio of any randomized algorithm for the on-line problem in which jobs are known at their release times. Thus, we show that up to a constant factor SRPT is an optimal on-line algorithm. Our second main result addresses the non-preemptive case. We present a general technique that allows to transform any preemptive solution into a non-preemptive solution at the expense of an O(root n/m) factor in the approximation ratio of the total flow time. Combining this technique with our previous result yields an O(root n/m log n/m) approximation algorithm for this case. We also show an Omega (n(1/3-is an element of)) lower bound on the approximabiiity of this problem (assuming P not equal NP). (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Approximating total flow time on parallel machines", "paper_id": "WOS:000248133700002"}