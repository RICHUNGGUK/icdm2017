{"auto_keywords": [{"score": 0.0440441070455765, "phrase": "tightly-coupled_parallel_applications"}, {"score": 0.011202557058920289, "phrase": "performance_degradation"}, {"score": 0.00481495049065317, "phrase": "virtual_clusters"}, {"score": 0.00469159356595623, "phrase": "high_flexibility"}, {"score": 0.004611108249179507, "phrase": "cloud_computing"}, {"score": 0.004435006247087171, "phrase": "local_clusters"}, {"score": 0.004396790930873782, "phrase": "academic_and_commercial_users"}, {"score": 0.003997458586709491, "phrase": "significant_performance_degradation"}, {"score": 0.0037138072936226, "phrase": "executable_virtual_cpus"}, {"score": 0.0035564156572789473, "phrase": "available_physical_cpus"}, {"score": 0.0032896745636186824, "phrase": "current_virtual_machine"}, {"score": 0.003163878786694538, "phrase": "synchronization_requirements"}, {"score": 0.0030693625816617044, "phrase": "parallel_applications"}, {"score": 0.002863762666256937, "phrase": "autonomous_synchronization-aware_vm_scheduling"}, {"score": 0.0026488343783448273, "phrase": "overcommitted_situation"}, {"score": 0.0025585490847951703, "phrase": "svs_algorithm"}, {"score": 0.0025364615261136655, "phrase": "xen_vmm_scheduler"}, {"score": 0.0023974563359295043, "phrase": "real_cluster_environment"}, {"score": 0.0023767561522363367, "phrase": "npb_benchmark"}, {"score": 0.0023562342764987254, "phrase": "real-world_trace"}, {"score": 0.0022857899334246946, "phrase": "better_performance"}, {"score": 0.0021604924928015283, "phrase": "xen's_credit_scheduler"}, {"score": 0.0021049977753042253, "phrase": "hybrid_scheduling"}], "paper_keywords": ["Virtualization", " virtual cluster", " synchronization", " scheduling", " cloud computing"], "paper_abstract": "Due to high flexibility and cost-effectiveness, cloud computing is increasingly being explored as an alternative to local clusters by academic and commercial users. Recent research already confirmed the feasibility of running tightly-coupled parallel applications with virtual clusters. However, such types of applications suffer from significant performance degradation, especially as the overcommitment is common in cloud. That is, the number of executable Virtual CPUs (VCPUs) is often larger than that of available Physical CPUs (PCPUs) in the system. The performance degradation is mainly due to the fact that the current virtual machine monitors (VMMs) are unaware of the synchronization requirements of the VMs which are running parallel applications. In this paper, There are two key contributions. (1) We propose an autonomous synchronization-aware VM scheduling (SVS) algorithm, which can effectively mitigate the performance degradation of tightly-coupled parallel applications running atop them in overcommitted situation. (2) We integrate the SVS algorithm into Xen VMM scheduler, and rigorously implement a prototype. We evaluate our design on a real cluster environment with NPB benchmark and real-world trace. Experiments show that our solution attains better performance for tightly-coupled parallel applications than the state-of-the-art approaches like Xen's Credit scheduler, balance scheduling, and hybrid scheduling.", "paper_title": "Synchronization-Aware Scheduling for Virtual Clusters in Cloud", "paper_id": "WOS:000362791400021"}