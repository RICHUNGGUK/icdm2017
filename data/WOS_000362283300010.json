{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mega-kv"}, {"score": 0.019656394582592333, "phrase": "high_memory_bandwidth"}, {"score": 0.009808336363053631, "phrase": "key-value_stores"}, {"score": 0.009518157347240479, "phrase": "high_throughput"}, {"score": 0.00937627260513456, "phrase": "in-memory_key-value_stores"}, {"score": 0.008895978430385544, "phrase": "fast_data_accesses"}, {"score": 0.004398094237005956, "phrase": "critical_role"}, {"score": 0.004365022891478405, "phrase": "data_processing"}, {"score": 0.004283423748543866, "phrase": "low_latency_data_accesses"}, {"score": 0.00409372989087314, "phrase": "data_intensive_operations"}, {"score": 0.0036691380448651443, "phrase": "data_volume"}, {"score": 0.0035599338383885447, "phrase": "conventional_and_general-purpose_multicore_systems"}, {"score": 0.003480161521018509, "phrase": "special_properties"}, {"score": 0.0033765627434550432, "phrase": "massive_data_parallelism"}, {"score": 0.0032760377953971248, "phrase": "limited_number"}, {"score": 0.003251376167695528, "phrase": "computing_cores"}, {"score": 0.003154566400499823, "phrase": "unique_data_processing_task"}, {"score": 0.0031072444973406586, "phrase": "cache_hierarchy"}, {"score": 0.003026127736667187, "phrase": "large_working_set"}, {"score": 0.0029249294679606656, "phrase": "strong_case"}, {"score": 0.002859345731792013, "phrase": "special-purpose_devices"}, {"score": 0.002641205561406675, "phrase": "gpu"}, {"score": 0.0025239898026543964, "phrase": "high_performance"}, {"score": 0.0024395426929046415, "phrase": "latency_hiding_capability"}, {"score": 0.0023490143960001675, "phrase": "overall_performance"}, {"score": 0.002305014991156598, "phrase": "commodity_pc"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_key-value_store_system"}], "paper_keywords": [""], "paper_abstract": "In-memory key-value stores play a critical role in data processing to provide high throughput and low latency data accesses. In-memory key-value stores have several unique properties that include (1) data intensive operations demanding high memory bandwidth for fast data accesses, (2) high data parallelism and simple computing operations demanding many slim parallel computing units, and (3) a large working set. As data volume continues to increase, our experiments show that conventional and general-purpose multicore systems are increasingly mismatched to the special properties of key-value stores because they do not provide massive data parallelism and high memory bandwidth; the powerful but the limited number of computing cores do not satisfy the demand of the unique data processing task; and the cache hierarchy may not well benefit to the large working set. In this paper, we make a strong case for GPUs to serve as special-purpose devices to greatly accelerate the operations of in-memory key-value stores. Specifically, we present the design and implementation of Mega-KV, a GPU-based in-memory key-value store system that achieves high performance and high throughput. Effectively utilizing the high memory bandwidth and latency hiding capability of GPUs, Mega-KV provides fast data accesses and significantly boosts overall performance. Running on a commodity PC installed with two CPUs and two GPUs, Mega-KV can process up to 160+ million key-value operations per second, which is 1.4-2.8 times as fast as the state-of-the-art key-value store system on a conventional CPU-based platform.", "paper_title": "Mega-KV: A Case for GPUs to Maximize the Throughput of In-Memory Key-Value Stores", "paper_id": "WOS:000362283300010"}