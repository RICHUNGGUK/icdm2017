{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "lts_operators"}, {"score": 0.005853174968130602, "phrase": "infinite_traces"}, {"score": 0.004688321299229397, "phrase": "lts_operator"}, {"score": 0.00421410521089045, "phrase": "lts_expression"}, {"score": 0.002431699464104896, "phrase": "parallel_composition"}, {"score": 0.0021049977753042253, "phrase": "unconstructibility_results"}], "paper_keywords": [""], "paper_abstract": "An LTS operator can be constructed from a set of LTS operators up to an equivalence if and only if there is an LTS expression that only contains operators from the set and whose result is equivalent to the result of the operator. In this publication this idea is made precise in the context where each LTS has an alphabet of its own and the operators may depend on the alphabets. Then the extent to which LTS operators are constructible is studied. Most, if not all, established LTS operators have the property that each trace of the result arises from the execution of no more than one trace of each of its argument LTSs, and similarly for infinite traces. All LTS operators that have this property and satisfy some other rather weak regularity properties can be constructed from parallel composition and hiding up to the equivalence that compares the alphabets, traces, and infinite traces of the LTSs. Furthermore, a collection of other miscellaneous constructibility and unconstructibility results is presented.", "paper_title": "On constructibility and unconstructibility of LTS operators from other LTS operators", "paper_id": "WOS:000351160200006"}