{"auto_keywords": [{"score": 0.040801524583702814, "phrase": "dag"}, {"score": 0.012867123517651053, "phrase": "dmi"}, {"score": 0.00481495049065317, "phrase": "data_mining"}, {"score": 0.004400804926266097, "phrase": "generic_way"}, {"score": 0.004278807087784626, "phrase": "parallel_pipeline"}, {"score": 0.0041136473765874815, "phrase": "dmi_task"}, {"score": 0.004044822781630218, "phrase": "streaming_data-flow_graph"}, {"score": 0.003823584649521733, "phrase": "processing_elements"}, {"score": 0.0036966717141736355, "phrase": "composition_mechanism_links"}, {"score": 0.0036347979916389467, "phrase": "data_streams"}, {"score": 0.0033974527047473044, "phrase": "inter-computer_data-flows"}, {"score": 0.003247868216333148, "phrase": "arbitrary_dags"}, {"score": 0.0031223774204093713, "phrase": "task_parallelisms"}, {"score": 0.003018668521745676, "phrase": "performance_enhancement"}, {"score": 0.0028695095228791724, "phrase": "real_dmi_case"}, {"score": 0.0028214413724451442, "phrase": "life_sciences"}, {"score": 0.002651960559564796, "phrase": "modelled_dmi_task"}, {"score": 0.002450864311898833, "phrase": "performance_evaluation_model"}, {"score": 0.0024097920845706795, "phrase": "experimental_evaluation_results"}, {"score": 0.0023560952790080943, "phrase": "linear_speedup"}, {"score": 0.0022145052062614514, "phrase": "distributed_computing_nodes"}, {"score": 0.0021773853011112882, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Pipeline streaming", " Parallelism", " Data mining and data integration (DMI)", " Workflow", " Life sciences", " OGSA-DAI"], "paper_abstract": "To facilitate data mining and integration (DMI) processes in a generic way, we investigate a parallel pipeline streaming model. We model a DMI task as a streaming data-flow graph: a directed acyclic graph (DAG) of Processing Elements (PEs). The composition mechanism links PEs via data streams, which may be in memory, buffered via disks or inter-computer data-flows. This makes it possible to build arbitrary DAGs with pipelining and both data and task parallelisms, which provide room for performance enhancement. We have applied this approach to a real DMI case in the life sciences and implemented a prototype. To demonstrate feasibility of the modelled DMI task and assess the efficiency of the prototype, we have also built a performance evaluation model. The experimental evaluation results show that a linear speedup has been achieved with the increase of the number of distributed computing nodes in this case study. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A generic parallel processing model for facilitating data mining and integration", "paper_id": "WOS:000290061600002"}