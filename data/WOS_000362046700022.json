{"auto_keywords": [{"score": 0.048734215142491696, "phrase": "secondary_indexes"}, {"score": 0.00481495049065317, "phrase": "small_analytics"}, {"score": 0.004775918707955445, "phrase": "big_data"}, {"score": 0.00462291551375938, "phrase": "hadoop_ecosystem"}, {"score": 0.004548253531664032, "phrase": "recent_years"}, {"score": 0.004124831019063503, "phrase": "relational_dbmss"}, {"score": 0.003802135020791801, "phrase": "cloud_computing"}, {"score": 0.003490343299449249, "phrase": "fixed_costs"}, {"score": 0.0032303415995003867, "phrase": "mapreduce"}, {"score": 0.002613103872300205, "phrase": "olap_queries"}, {"score": 0.0025919127870238593, "phrase": "hadoop"}, {"score": 0.002560361171910992, "phrase": "apache"}, {"score": 0.002438046845271428, "phrase": "hbase"}, {"score": 0.0023694065215394593, "phrase": "different_access_plans"}, {"score": 0.0022287497627555895, "phrase": "consumed_resources"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Big Data", " OLAP", " Multidimensional model", " Indexes", " Partitioning", " Cost estimation"], "paper_abstract": "In the recent years the problems of using generic storage (i.e., relational) techniques for very specific applications have been detected and outlined and, as a consequence, some alternatives to Relational DBMSs (e.g., HBase) have bloomed. Most of these alternatives sit on the cloud and benefit from cloud computing, which is nowadays a reality that helps us to save money by eliminating the hardware as well as software fixed costs and just pay per use. On top of this, specific querying frameworks to exploit the brute force in the cloud (e.g., MapReduce) have also been devised. The question arising next tries to clear out if this (rather naive) exploitation of the cloud is an alternative to tuning DBMSs or it still makes sense to consider other options when retrieving data from these settings. In this paper, we study the feasibility of solving OLAP queries with Hadoop (the Apache project implementing MapReduce) while benefiting from secondary indexes and partitioning in HBase. Our main contribution is the comparison of different access plans and the definition of criteria (i.e., cost estimation) to choose among them in terms of consumed resources (namely CPU, bandwidth and I/O). (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Tuning small analytics on Big Data: Data partitioning and secondary indexes in the Hadoop ecosystem", "paper_id": "WOS:000362046700022"}