{"auto_keywords": [{"score": 0.032761942053579525, "phrase": "transform_approach"}, {"score": 0.030453048702382857, "phrase": "pbna"}, {"score": 0.016522485828772554, "phrase": "time-varying_lecs"}, {"score": 0.008713767080725647, "phrase": "acyclic_networks"}, {"score": 0.008404639920781195, "phrase": "integer_delay"}, {"score": 0.007859117813678582, "phrase": "output_symbols"}, {"score": 0.00779847817491777, "phrase": "sink_nodes"}, {"score": 0.007580078108844955, "phrase": "input_symbols"}, {"score": 0.007161324664525011, "phrase": "positive_integer"}, {"score": 0.005975859467155914, "phrase": "network_code"}, {"score": 0.00475300265048496, "phrase": "algebraic_formulation"}, {"score": 0.004728446189704709, "phrase": "linear_network_coding"}, {"score": 0.004443436195282021, "phrase": "arbitrary_acyclic_network"}, {"score": 0.0041647266497945225, "phrase": "different_generations"}, {"score": 0.003863591803913424, "phrase": "fourier"}, {"score": 0.0035555949530956415, "phrase": "intermediate_nodes"}, {"score": 0.0034825937263286495, "phrase": "acyclic_network"}, {"score": 0.0034466551560285246, "phrase": "n-instantaneous_networks"}, {"score": 0.003066945490483524, "phrase": "zero-interference_conditions"}, {"score": 0.002965229277927781, "phrase": "three-source_three-destination_multiple_unicast_network"}, {"score": 0.0028446460307503343, "phrase": "time-invariant_local_encoding_coefficients"}, {"score": 0.00269377035953549, "phrase": "necessary_and_sufficient_conditions"}, {"score": 0.0024984517279573906, "phrase": "time-invariant_lecs"}, {"score": 0.0023414522240150287, "phrase": "sufficient_condition"}, {"score": 0.0023172622617843018, "phrase": "throughput_demand"}, {"score": 0.0021049977753042253, "phrase": "positive_integer_n."}], "paper_keywords": ["Acyclic network", " delays", " interference", " linear network coding", " network alignment", " transform approach"], "paper_abstract": "The algebraic formulation for linear network coding in acyclic networks with the links having integer delay is well known. Based on this formulation, for a given set of connections over an arbitrary acyclic network with integer delay assumed for the links, the output symbols at the sink nodes, at any given time instant, is a F(p)m-linear combination of the input symbols across different generations, where F(p)m denotes the field over which the network operates (p is prime and m is a positive integer). We use finite-field discrete Fourier transform to convert the output symbols at the sink nodes, at any given time instant, into a F(p)m-linear combination of the input symbols generated during the same generation without making use of memory at the intermediate nodes. We call this as transforming the acyclic network with delay into n-instantaneous networks (n is sufficiently large). We show that under certain conditions, there exists a network code satisfying sink demands in the usual (nontransform) approach if and only if there exists a network code satisfying sink demands in the transform approach. When the zero-interference conditions are not satisfied, we propose three precoding-based network alignment (PBNA) schemes for three-source three-destination multiple unicast network with delays (3-S 3-D MUN-D) termed as PBNA using transform approach and time-invariant local encoding coefficients (LECs), PBNA using time-varying LECs, and PBNA using transform approach and block time-varying LECs. We derive sets of necessary and sufficient conditions under which throughputs close to n' + 1/2n' + 1, n'/2n' + 1, and n'/2n' + 1 are achieved for the three source-destination pairs in a 3-S 3-D MUN-D employing PBNA using transform approach and time-invariant LECs, and PBNA using transform approach and block time-varying LECs, where n' is a positive integer. For PBNA using time-varying LECs, we obtain a sufficient condition under which a throughput demand of n(1)/n, n(2)/n, and n(3)/n can be met for the three source-destination pairs in a 3-S 3-D MUN-D, where n(1), n(2), and n(3) are positive integers less than or equal to the positive integer n. This condition is also necessary when n(1) + n(3) = n(1) + n(2) = n where n(1) >= n(2) >= n(3).", "paper_title": "Precoding-Based Network Alignment Using Transform Approach for Acyclic Networks With Delay", "paper_id": "WOS:000342416900029"}