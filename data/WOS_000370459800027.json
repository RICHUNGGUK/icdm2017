{"auto_keywords": [{"score": 0.0495037775396638, "phrase": "power_efficiency"}, {"score": 0.049124089120586543, "phrase": "main_memory"}, {"score": 0.00481495049065317, "phrase": "periodically_active_rank"}, {"score": 0.0046621835537196754, "phrase": "growing_gap"}, {"score": 0.004624751696958501, "phrase": "microprocessor_speed"}, {"score": 0.0045876189888390895, "phrase": "dram_speed"}, {"score": 0.0045324756541157574, "phrase": "major_problem"}, {"score": 0.004496080495247288, "phrase": "computer_designers"}, {"score": 0.004064958518350867, "phrase": "major_shared_resource"}, {"score": 0.00398380712846857, "phrase": "multi-core_system"}, {"score": 0.0038885527668812807, "phrase": "increasing_power_consumption"}, {"score": 0.003810909603178837, "phrase": "dominant_consuming_fraction"}, {"score": 0.00363080961099728, "phrase": "power_issue"}, {"score": 0.0035296940954990964, "phrase": "main_memory_subsystem"}, {"score": 0.003403801095792972, "phrase": "periodically_active_rank_scheduling"}, {"score": 0.003269162006886173, "phrase": "smart_phones"}, {"score": 0.0032038465090068646, "phrase": "three-step_design"}, {"score": 0.0029792984108210525, "phrase": "page_allocation_policy"}, {"score": 0.002838387600282891, "phrase": "different_banks"}, {"score": 0.002628747284714371, "phrase": "low_power_status"}, {"score": 0.0024842242921857705, "phrase": "memory_power_efficiency"}, {"score": 0.0023666732429695908, "phrase": "single-threaded_and_multi-threaded_benchmark"}, {"score": 0.002182958452794581, "phrase": "default_system"}, {"score": 0.0021566565951738658, "phrase": "negligible_fairness"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Power efficiency", " Main memory", " Scheduling", " Page allocation", " Group"], "paper_abstract": "The growing gap between microprocessor speed and DRAM speed is a major problem that computer designers are facing. In order to narrow the gap, main memory is expected to grow significantly in both speed and capacity for it is a major shared resource among cores in a multi-core system, which will lead to increasing power consumption, perhaps replacing the dominant consuming fraction of processor. Therefore, it is critical to address the power issue without seriously decreasing performance in the main memory subsystem. In this paper, we propose a periodically active rank scheduling (PARS) to optimize power efficiency for DRAM in smart phones. Our scheduling features a three-step design. First, we partition all threads in the system into groups. Second, we modify page allocation policy to achieve threads in the same group which occupies the same rank but different banks of DRAM. Finally, we sequentially schedule threads in one group after another while only active running group's ranks to retain other ranks low power status. As a result, our scheduling periodically activates one rank after another to optimize memory power efficiency. We implement PARS in Linux 2.6.39 kernel running randomly generated workloads containing single-threaded and multi-threaded benchmark. Experimental results show that PARS can improve both the memory power efficiency by 26.8% and performance by 4.2% average relative to default system while reducing negligible fairness. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "PARS: A scheduling of periodically active rank to optimize power efficiency for main memory", "paper_id": "WOS:000370459800027"}