{"auto_keywords": [{"score": 0.05007831663443002, "phrase": "relational_streams"}, {"score": 0.027450822753197938, "phrase": "cads"}, {"score": 0.0047135086583390585, "phrase": "database_outsourcing_model"}, {"score": 0.004516962628112147, "phrase": "third-party_service_provider"}, {"score": 0.004347057700479576, "phrase": "authenticated_query_processing"}, {"score": 0.0041835168653521, "phrase": "query_results"}, {"score": 0.004043298628655316, "phrase": "authenticated_processing"}, {"score": 0.004008981656795115, "phrase": "conventional_databases"}, {"score": 0.003941215575554871, "phrase": "limited_work"}, {"score": 0.0039077616208517026, "phrase": "outsourced_data_streams"}, {"score": 0.00387459052649752, "phrase": "stream_environments"}, {"score": 0.003841699919521703, "phrase": "new_challenges"}, {"score": 0.0037446875860947916, "phrase": "fast_structure_updating"}, {"score": 0.0034828730516958807, "phrase": "individual_results"}, {"score": 0.0032950412841674026, "phrase": "missing_results"}, {"score": 0.0032531496610470377, "phrase": "data_updates"}, {"score": 0.00317095235382607, "phrase": "comprehensive_set"}, {"score": 0.0029491324941225356, "phrase": "temporal_completeness"}, {"score": 0.0029116257477000617, "phrase": "false_transmissions"}, {"score": 0.0027311076665349657, "phrase": "data_update"}, {"score": 0.0025291601927956765, "phrase": "processing_and_transmission_overhead"}, {"score": 0.0024969812322112174, "phrase": "elaborate_indexing_scheme"}, {"score": 0.002465210678474529, "phrase": "virtual_caching_mechanism"}, {"score": 0.0023824468367751365, "phrase": "analytical_study"}, {"score": 0.002342110338541984, "phrase": "optimal_indexing_granularity"}, {"score": 0.0021049977753042253, "phrase": "extensive_experiments"}], "paper_keywords": ["Database outsourcing", " Authentication", " Continuous monitoring", " Data streams"], "paper_abstract": "According to the database outsourcing model, a data owner delegates database functionality to a third-party service provider, which answers queries received from clients. Authenticated query processing enables the clients to verify the correctness of query results. Despite the abundance of methods for authenticated processing in conventional databases, there is limited work on outsourced data streams. Stream environments pose new challenges such as the need for fast structure updating, support for continuous query processing and authentication, and provision for temporal completeness. Specifically, in addition to the correctness of individual results, the client must be able to verify that there are no missing results in between data updates. This paper presents a comprehensive set of methods covering relational streams. We first describe REF, a technique that achieves correctness and temporal completeness but incurs false transmissions, i.e., the provider has to inform the clients whenever there is a data update, even if their results are not affected. Then, we propose CADS, which minimizes the processing and transmission overhead through an elaborate indexing scheme and a virtual caching mechanism. In addition, we present an analytical study to determine the optimal indexing granularity, and extend CADS for the case that the data distribution changes over time. Finally, we evaluate the effectiveness of our techniques through extensive experiments.", "paper_title": "Continuous authentication on relational streams", "paper_id": "WOS:000276437900002"}