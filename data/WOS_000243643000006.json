{"auto_keywords": [{"score": 0.03285425557766291, "phrase": "cst."}, {"score": 0.00481495049065317, "phrase": "foundation_of_specification._journal"}, {"score": 0.0040027552011993005, "phrase": "core_specification_theory"}, {"score": 0.0036671822784770463, "phrase": "logical_framework"}, {"score": 0.00342568771304873, "phrase": "specification_languages"}, {"score": 0.002659527314613792, "phrase": "cstus"}, {"score": 0.0024842242921857705, "phrase": "data_items"}, {"score": 0.0021049977753042253, "phrase": "first-order_arithmetic"}], "paper_keywords": ["data", " types", " specification", " Sigma-definable", " conservative extensions", " polymorphism"], "paper_abstract": "In reference (Foundation of specification. Journal of Logic and Computation, 15, 951-974, 2005), the author introduces a core specification theory (CST) in order to provide a logical framework for the design and exploration of specification languages. In this article, we formulate two highly expressive extensions of CST. The first (CSTu) is CST + a universe of types and the second (CSTUS) permits specifications themselves to be data items. Finally, we shall explore their metamathematical properties and, in particular, provide an interpretation into first-order arithmetic.", "paper_title": "Computability in specification", "paper_id": "WOS:000243643000006"}