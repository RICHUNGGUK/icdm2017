{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "throughput-driven_assessment"}, {"score": 0.04080884345935393, "phrase": "outlier_threshold"}, {"score": 0.004736563452994885, "phrase": "evolvable_hardware_paradigm"}, {"score": 0.004685012337701536, "phrase": "autonomic_regeneration"}, {"score": 0.0046340196745259694, "phrase": "competitive_runtime_reconfiguration"}, {"score": 0.004435514622798228, "phrase": "individual's_performance"}, {"score": 0.004315771670213371, "phrase": "dynamic_properties"}, {"score": 0.004153520149706423, "phrase": "static_fitness_function"}, {"score": 0.004108296419851765, "phrase": "crr"}, {"score": 0.004041359131062721, "phrase": "sliding_evaluation_window"}, {"score": 0.003997343989408636, "phrase": "recent_throughput_data"}, {"score": 0.00380511089035825, "phrase": "extensive_downtime"}, {"score": 0.003602302241898501, "phrase": "graceful_degradation"}, {"score": 0.003524227590204673, "phrase": "behavioral_diversity"}, {"score": 0.0031240075437664314, "phrase": "genetic_operators"}, {"score": 0.0030229485340586473, "phrase": "fpga-based_logic_circuits"}, {"score": 0.002592784882557155, "phrase": "hundred_repair_iterations"}, {"score": 0.002550481822137976, "phrase": "viable_throughput"}, {"score": 0.002508867228980776, "phrase": "crr_system"}, {"score": 0.0024679299547216956, "phrase": "repair_process"}, {"score": 0.0023749823753904204, "phrase": "fault-free_throughput_rate"}, {"score": 0.0023107372754933887, "phrase": "circuit_scenarios"}, {"score": 0.002285527382381719, "phrase": "crr_results"}, {"score": 0.002223696715077018, "phrase": "alternative_soft_computing_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Evolvable hardware", " Genetic Algorithms", " Populational fault tolerance", " Reconfigurable computing", " Evolutionary algorithms", " Competitive Runtime Reconfiguration"], "paper_abstract": "An evolvable hardware paradigm for autonomic regeneration called Competitive Runtime Reconfiguration (CRR) is developed whereby an individual's performance is assessed using the dynamic properties of the population rather than a static fitness function. CRR employs a Sliding Evaluation Window of recent throughput data and a periodically updated Outlier Threshold which avoids the extensive downtime associated with exhaustive Genetic Algorithm (GA) based evaluation. The relative fitness measure favors graceful degradation by leveraging the behavioral diversity among the individuals in the population. Throughput-driven assessment identifies configurations whose discrepancy values violate the Outlier Threshold and are thus selected for modification using Genetic Operators. Application of CRR to FPGA-based logic circuits demonstrates the identification of configurations impacted by a set of randomly injected stuck-at faults. Furthermore, regeneration of functionality can be observed within a few hundred repair iterations. The viable throughput of the CRR system during the repair process was maintained at greater than 91.7% of the fault-free throughput rate under a number of circuit scenarios. CRR results are also compared with alternative soft computing approaches for autonomous refurbishment using the MCNC-91 benchmarks. Published by Elsevier B.V.", "paper_title": "Autonomic fault-handling and refurbishment using throughput-driven assessment", "paper_id": "WOS:000286373200011"}