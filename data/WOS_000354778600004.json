{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ripley's_k_function"}, {"score": 0.0047057084749407485, "phrase": "graphics_processing_units"}, {"score": 0.004494570360108983, "phrase": "massively_parallel_spatial_computing_approach"}, {"score": 0.004392565073466714, "phrase": "general-purpose_graphics_processing_units"}, {"score": 0.0041316803676012155, "phrase": "univariate_spatial_point_pattern_analysis"}, {"score": 0.003976523732243618, "phrase": "representative_spatial_point_pattern_analysis_approach"}, {"score": 0.003769006950727621, "phrase": "spatial_dispersion_characteristics"}, {"score": 0.003711723285313348, "phrase": "point_patterns"}, {"score": 0.0035997452281985465, "phrase": "considerable_computation"}, {"score": 0.003438058620195309, "phrase": "large_spatial_data"}, {"score": 0.003160200215473349, "phrase": "massively_parallel_approach"}, {"score": 0.0030414140732789186, "phrase": "spatial_point_pattern_analysis"}, {"score": 0.00290473242917264, "phrase": "massively_parallel_platform"}, {"score": 0.0027955219242123013, "phrase": "many-core_architecture"}, {"score": 0.0026698611202305715, "phrase": "variable-grained_domain_decomposition"}, {"score": 0.002629238854352447, "phrase": "thread-level_synchronization"}, {"score": 0.0025694584194998335, "phrase": "shared_memory"}, {"score": 0.002530359917257626, "phrase": "parallel_strategies"}, {"score": 0.0023981301755351607, "phrase": "spatial_algorithm"}, {"score": 0.002272794656458419, "phrase": "experimental_results"}, {"score": 0.0022211005680689666, "phrase": "substantial_acceleration"}, {"score": 0.0021049977753042253, "phrase": "gpu_environments"}], "paper_keywords": ["spatial point pattern analysis", " graphics processing units", " parallel computing", " Ripley's K function"], "paper_abstract": "This study presents a massively parallel spatial computing approach that uses general-purpose graphics processing units (GPUs) to accelerate Ripley's K function for univariate spatial point pattern analysis. Ripley's K function is a representative spatial point pattern analysis approach that allows for quantitatively evaluating the spatial dispersion characteristics of point patterns. However, considerable computation is often required when analyzing large spatial data using Ripley's K function. In this study, we developed a massively parallel approach of Ripley's K function for accelerating spatial point pattern analysis. GPUs serve as a massively parallel platform that is built on many-core architecture for speeding up Ripley's K function. Variable-grained domain decomposition and thread-level synchronization based on shared memory are parallel strategies designed to exploit concurrency in the spatial algorithm of Ripley's K function for efficient parallelization. Experimental results demonstrate that substantial acceleration is obtained for Ripley's K function parallelized within GPU environments.", "paper_title": "Massively parallel spatial point pattern analysis: Ripley's K function accelerated using graphics processing units", "paper_id": "WOS:000354778600004"}