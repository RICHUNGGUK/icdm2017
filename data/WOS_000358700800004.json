{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "binary_cube_dimensions"}, {"score": 0.004737579882204798, "phrase": "relaxed_group_by_aggregations"}, {"score": 0.004661446705304497, "phrase": "cube_aggregations"}, {"score": 0.004611369021812453, "phrase": "large_data_sets"}, {"score": 0.004561826854638056, "phrase": "high_dimensionality"}, {"score": 0.004488505301335364, "phrase": "crucial_and_costly_task"}, {"score": 0.004392565073466714, "phrase": "multiple_passes"}, {"score": 0.004321952227344232, "phrase": "input_table"}, {"score": 0.004094639048362357, "phrase": "result_groups"}, {"score": 0.003985487777785535, "phrase": "large_number"}, {"score": 0.003900257249255497, "phrase": "dimension_values"}, {"score": 0.0033888405252810927, "phrase": "similar_records"}, {"score": 0.003334309053314909, "phrase": "efficient_binary_clustering"}, {"score": 0.0032806521851034766, "phrase": "fact_table"}, {"score": 0.003107935254560724, "phrase": "traditional_olap_cubes"}, {"score": 0.0030250067691601967, "phrase": "efficient_window-based_incremental_k-means_algorithm"}, {"score": 0.0029126002350975634, "phrase": "user-defined_function"}, {"score": 0.002865710140187219, "phrase": "significant_speedup"}, {"score": 0.0028043588777213533, "phrase": "sufficient_statistics"}, {"score": 0.0025578967205807843, "phrase": "multiple_variants"}, {"score": 0.0025167026017217926, "phrase": "k-means_algorithm"}, {"score": 0.002436289099444074, "phrase": "similar_or_better_results"}, {"score": 0.0023712394008737958, "phrase": "traditional_k-means_algorithm"}, {"score": 0.002295463032589125, "phrase": "interesting_aggregations"}, {"score": 0.0022101055924375725, "phrase": "cluster_identifier"}, {"score": 0.0021745003291048356, "phrase": "new_cube_dimension"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["OLAP", " Clustering", " Binary streams"], "paper_abstract": "Computing cube aggregations on large data sets with high dimensionality is a crucial and costly task that normally requires multiple passes on the input table. This task gets harder when the number of result groups increases due to a large number of combinations of dimension values. In this research, we focus on reducing the number of aggregations and providing a more succinct result by deriving aggregations on top of groups with similar records exploiting an efficient binary clustering of the fact table, which can be viewed as a relaxation of traditional OLAP cubes. We present an efficient window-based Incremental K-Means algorithm implemented in a DBMS as a user-defined function. A significant speedup is achieved through sufficient statistics, multithreading, efficient distance computation and sparse matrix operations. Our algorithm performance is experimentally compared against multiple variants of the K-Means algorithm. We show our incremental K-Means algorithm achieves similar or better results much faster than the traditional K-Means algorithm. Moreover, we show interesting aggregations can be efficiently obtained using the cluster identifier as a new cube dimension. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Clustering binary cube dimensions to compute relaxed GROUP BY aggregations", "paper_id": "WOS:000358700800004"}