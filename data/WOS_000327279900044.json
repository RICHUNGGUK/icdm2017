{"auto_keywords": [{"score": 0.03805804929852099, "phrase": "data_streams"}, {"score": 0.01554066751147964, "phrase": "maximal_frequent_pattern_mining"}, {"score": 0.012306336061711744, "phrase": "sliding_window_model"}, {"score": 0.01047554291795738, "phrase": "generated_patterns"}, {"score": 0.00481495049065317, "phrase": "sliding_window"}, {"score": 0.004491678520807451, "phrase": "corresponding_databases"}, {"score": 0.004338239182984759, "phrase": "general_frequent_pattern_mining_methods"}, {"score": 0.004125773078637226, "phrase": "massive_data"}, {"score": 0.004015693806064219, "phrase": "data_mining_researchers"}, {"score": 0.0036884198249734863, "phrase": "mining_operations"}, {"score": 0.0036459007842756983, "phrase": "recently_accumulated_parts"}, {"score": 0.0034941337957136013, "phrase": "mining_approaches"}, {"score": 0.0032592499906265882, "phrase": "frequent_patterns"}, {"score": 0.0032216622984027558, "phrase": "data_stream_environment"}, {"score": 0.0027813397260607487, "phrase": "weight_constraints"}, {"score": 0.0027599042621376624, "phrase": "items'_importance"}, {"score": 0.002707033618304716, "phrase": "important_factors"}, {"score": 0.002675797331220082, "phrase": "pattern_mining"}, {"score": 0.0025942468561537682, "phrase": "mining_process"}, {"score": 0.0024957862318504753, "phrase": "novel_algorithm"}, {"score": 0.0023368833197343953, "phrase": "weighted_maximal_frequent_patterns"}, {"score": 0.0022744242010653997, "phrase": "performance_experiments"}, {"score": 0.0022308329460335985, "phrase": "previous_algorithms"}, {"score": 0.0021796224306652326, "phrase": "memory_usage"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data mining", " Data stream", " Sliding window", " Weighted maximal frequent pattern mining"], "paper_abstract": "As data have been accumulated more quickly in recent years, corresponding databases have also become huger, and thus, general frequent pattern mining methods have been faced with limitations that do not appropriately respond to the massive data. To overcome this problem, data mining researchers have studied methods which can conduct more efficient and immediate mining tasks by scanning databases only once. Thereafter, the sliding window model, which can perform mining operations focusing on recently accumulated parts over data streams, was proposed, and a variety of mining approaches related to this have been suggested. However, it is hard to mine all of the frequent patterns in the data stream environment since generated patterns are remarkably increased as data streams are continuously extended. Thus, methods for efficiently compressing generated patterns are needed in order to solve that problem. In addition, since not only support conditions but also weight constraints expressing items' importance are one of the important factors in the pattern mining, we need to consider them in mining process. Motivated by these issues, we propose a novel algorithm, weighted maximal frequent pattern mining over data streams based on sliding window model (WMFP-SW) to obtain weighted maximal frequent patterns reflecting recent information over data streams. Performance experiments report that MWFP-SW outperforms previous algorithms in terms of runtime, memory usage, and scalability. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Sliding window based weighted maximal frequent pattern mining over data streams", "paper_id": "WOS:000327279900044"}