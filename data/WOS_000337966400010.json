{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fixed-priority_real-time_systems"}, {"score": 0.004624751696958501, "phrase": "new_semipartitioned_approach"}, {"score": 0.0045324756541157574, "phrase": "sporadic_tasks"}, {"score": 0.004471978831302331, "phrase": "multicore_platforms"}, {"score": 0.0043533862892678864, "phrase": "rate_monotonic_scheduling_policy"}, {"score": 0.003780286517897356, "phrase": "task_periods"}, {"score": 0.00363080961099728, "phrase": "single_processor_platforms"}, {"score": 0.003152531962718477, "phrase": "appropriate_tasks"}, {"score": 0.003110396267535254, "phrase": "different_processors"}, {"score": 0.0030482430937467013, "phrase": "semipartitioned_approach"}, {"score": 0.002869115451202179, "phrase": "real-time_tasks"}, {"score": 0.0025935941070969575, "phrase": "system_utilization"}, {"score": 0.0024742098091226203, "phrase": "n_tasks"}, {"score": 0.0022365262201954643, "phrase": "proposed_algorithm"}, {"score": 0.0021624739899833868, "phrase": "scheduling_performance"}, {"score": 0.0021049977753042253, "phrase": "previous_work"}], "paper_keywords": ["Harmonic", " real-time semipartitioned scheduling", " fixed-priority", " rate monotonic scheduling (RMS)"], "paper_abstract": "This paper presents a new semipartitioned approach to schedule sporadic tasks on multicore platforms based on the Rate Monotonic Scheduling policy. To improve the schedulability, our approach exploits the fact that the utilization bound of a task set increases as task periods become closer to harmonic on single processor platforms. The challenge for our approach, however, is how to take advantage of this fact to assign and split appropriate tasks on different processors in the semipartitioned approach, and how to guarantee the schedulability of real-time tasks. We formally prove that our scheduling approach can successfully schedule any task set with a system utilization bounded by Liu&Layland's bound for N tasks, that is, N(2(1/N) - 1). Our extensive experimental results demonstrate that the proposed algorithm can significantly improve the scheduling performance compared with the previous work.", "paper_title": "Harmonic-Aware Multi-Core Scheduling for Fixed-Priority Real-Time Systems", "paper_id": "WOS:000337966400010"}