{"auto_keywords": [{"score": 0.03269446651526027, "phrase": "explicit_route"}, {"score": 0.00481495049065317, "phrase": "languages-based_security_promises"}, {"score": 0.004713379149462482, "phrase": "powerful_tool"}, {"score": 0.00458940888106061, "phrase": "routing_applications"}, {"score": 0.004327981760540394, "phrase": "strong_policy"}, {"score": 0.004169394481182493, "phrase": "high-security_data"}, {"score": 0.004038076978795421, "phrase": "low-security_channels"}, {"score": 0.0036100762867678415, "phrase": "divers_security_services"}, {"score": 0.003422462630994095, "phrase": "run-time_compiler"}, {"score": 0.0031930184711888867, "phrase": "security_services"}, {"score": 0.0031255543155487234, "phrase": "routing_requirements"}, {"score": 0.002578880352208335, "phrase": "security_implications"}, {"score": 0.0023675986784123656, "phrase": "modified_form"}, {"score": 0.0021049977753042253, "phrase": "secure_information_routing"}], "paper_keywords": ["Security policy", " routing", " condition statements"], "paper_abstract": "Languages-based security promises to be a powerful tool with which provably secure routing applications may be developed Programs written in these languages enforce a strong policy of non-interference, which ensures that high-security data will not be observable on low-security channels. The information routing security proposed aim to fill the gap between representation and enforcement by implementing and integrating the divers security services needed by policy. Policy is enforced by the run-time compiler and executions based mechanism to information violating routing policy and regulation of security services. Checking the routing requirements of explicit route achieves this result for statements involving explicit route. Unfortunately, such classification is often expressed as an operation within a given program, rather than as part of a policy, making reasoning about the security implications of a policy more difficult. We formalize our approach for a C++ like language and prove a modified form of our non-interference method We have implemented our approach as an extension to C and provide some of our experience using it to build a secure information routing.", "paper_title": "Language Based Information Routing Security: Policy Enforcement", "paper_id": "WOS:000263196900015"}