{"auto_keywords": [{"score": 0.049378038061471535, "phrase": "checklist"}, {"score": 0.00481495049065317, "phrase": "software_product_line_artefacts"}, {"score": 0.004674952036988355, "phrase": "feature_model_inspections"}, {"score": 0.00462919213721188, "phrase": "software_product_line_engineering"}, {"score": 0.004299910946753963, "phrase": "related_domain"}, {"score": 0.004133940019630129, "phrase": "derived_products"}, {"score": 0.004093453936415085, "phrase": "software_inspection_techniques"}, {"score": 0.003954837422946628, "phrase": "software_artefacts"}, {"score": 0.0038397509389856625, "phrase": "software_development_process"}, {"score": 0.0036914757355166966, "phrase": "quasi-systematic_review"}, {"score": 0.0036373553416391823, "phrase": "technical_literature"}, {"score": 0.0033617891884360606, "phrase": "spl_artefacts"}, {"score": 0.0032160319265621285, "phrase": "feature_models"}, {"score": 0.00307657476125683, "phrase": "domain_modelling"}, {"score": 0.0030017207229983385, "phrase": "checklist-based_inspection_technique"}, {"score": 0.0026538282523433684, "phrase": "original_feature_model_notation"}, {"score": 0.0025137856138000014, "phrase": "odyssey-fex_notation"}, {"score": 0.0024768883044869023, "phrase": "inspection_technique"}, {"score": 0.0021363670305843403, "phrase": "ad-hoc_techniques"}], "paper_keywords": ["Feature Model", " Software Inspection", " Domain Engineering", " Software Reuse", " Software Product Line", " Experimental Software Engineering"], "paper_abstract": "Software Product Line Engineering (SPL) should ensure the correctness, completeness and consistency of its artefacts and related domain to prevent the propagation of defects in derived products. Software inspection techniques are effective in detecting defects in software artefacts and avoiding their propagation throughout the software development process. However, the results of a quasi-systematic review of the technical literature reported in this paper pointed to a lack of such techniques to support the inspection of SPL artefacts, including techniques to support the inspection of feature models (FMs) that are largely used in domain modelling. Therefore, a checklist-based inspection technique (FMCheck) has been developed to support the detection of defects on FMs. FMCheck is configurable and can be applied to the original feature model notation (the FODA approach) and its extensions, including the Odyssey-FEX notation. The inspection technique was empirically evaluated, having indicated its feasibility and effectiveness. It is possible to see that inspectors applying FMCheck to inspect FMs can be more effective than those applying ad-hoc techniques, regarding four distinct domains.", "paper_title": "Verification of Software Product Line Artefacts: A Checklist to Support Feature Model Inspections", "paper_id": "WOS:000339391100007"}