{"auto_keywords": [{"score": 0.049521347818116, "phrase": "multi-physics_integration_tool"}, {"score": 0.00481495049065317, "phrase": "mupif_-_a"}, {"score": 0.0044356867986444426, "phrase": "object-oriented_architecture"}, {"score": 0.004282391936827106, "phrase": "multi-physics_and_multi-level_simulations"}, {"score": 0.003968112038249246, "phrase": "high-level_support"}, {"score": 0.0039218440805789965, "phrase": "mutual_data_exchange"}, {"score": 0.00376409764683147, "phrase": "different_discretization_techniques"}, {"score": 0.0037201996003549246, "phrase": "specific_field_transfer_operators"}, {"score": 0.003591542373891629, "phrase": "underlying_physical_phenomena"}, {"score": 0.003175175896313016, "phrase": "application_and_data_interfaces"}, {"score": 0.003101503914610488, "phrase": "abstract_access"}, {"score": 0.0030653094605910727, "phrase": "solution_domains"}, {"score": 0.0029075757820516634, "phrase": "individual_applications"}, {"score": 0.0028568174308720167, "phrase": "python_scripting_language"}, {"score": 0.002725740264152553, "phrase": "existing_codes"}, {"score": 0.0026781477395106993, "phrase": "high-level_language"}, {"score": 0.0024379730432321656, "phrase": "specialized_application"}, {"score": 0.002258745901862197, "phrase": "staggered_thermo-mechanical_analysis"}, {"score": 0.002129877319760485, "phrase": "civil-comp_ltd"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multi-physics simulations", " Software integration", " System integration", " Distributed computing", " Interactive computing", " Object-oriented design"], "paper_abstract": "This paper presents the design of a multi-physics integration tool with an object-oriented architecture that facilitates the implementation of multi-physics and multi-level simulations assembled from independently developed applications (components). The tool provides high-level support for mutual data exchange between codes, including support for different discretization techniques and specific field transfer operators, being aware of the underlying physical phenomena. Parallel and distributed applications and aspects of the applications are also addressed. Each application is required to implement application and data interfaces, which allow abstract access to solution domains and fields, and provide services for steering individual applications. The Python scripting language is extended by modules representing interfaces to existing codes. The high-level language serves as a glue to tie the modules or components together and to create a specialized application. The capabilities of the tool are demonstrated on two examples that illustrate staggered thermo-mechanical analysis and distributed field mapping. (C) 2012 Civil-Comp Ltd and Elsevier Ltd. All rights reserved.", "paper_title": "MuPIF - A distributed multi-physics integration tool", "paper_id": "WOS:000320744000011"}