{"auto_keywords": [{"score": 0.031071491193311245, "phrase": "service_discovery_time"}, {"score": 0.00481495049065317, "phrase": "ubiquitous_access"}, {"score": 0.0047689174754929195, "phrase": "wired_and_wireless_networks"}, {"score": 0.0047006879240764935, "phrase": "information_access"}, {"score": 0.004168618849008299, "phrase": "portable_devices"}, {"score": 0.004069631519385246, "phrase": "service_availability"}, {"score": 0.003750260412839128, "phrase": "complex_configurations"}, {"score": 0.0034558655164987134, "phrase": "configuration_burden"}, {"score": 0.003199864072042816, "phrase": "zeroconf"}, {"score": 0.003154012977072806, "phrase": "avahi"}, {"score": 0.0031238600568710253, "phrase": "mono"}, {"score": 0.003049555059533735, "phrase": "linux_and_windows_xp_operating_systems"}, {"score": 0.0028923335491735564, "phrase": "performance_metric"}, {"score": 0.0028235667474151714, "phrase": "linux_avahi"}, {"score": 0.0027431953780099826, "phrase": "windows_mono"}, {"score": 0.0026523079380037706, "phrase": "security_solutions"}, {"score": 0.002527654365712841, "phrase": "zeroconf_networks"}, {"score": 0.0022956075241520064, "phrase": "windows_xp_platform"}, {"score": 0.002262686536231683, "phrase": "ipsec"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "The ubiquitous access to wired and wireless networks is making information access possible from anywhere, anytime, and any device. Today, end-users are also highly mobile, often equipped with a range of portable devices, and they expect service availability when they require it. In addition, they do not want to be burdened by complex configurations before they can discover and use services. The Zero Configuration (Zeroconf) Networking technology promises to alleviate this configuration burden by allowing users to discover services and devices with little end-user intervention. We compare two popular implementations of Zeroconf namely, Avahi and Mono.Zeroconf running on Linux and Windows XP operating systems, respectively. We evaluate their performance using service discovery time as the performance metric. Our empirical results show that Linux Avahi yields almost 99% improvements in service discovery time over Windows Mono.Zeroconf. We also discuss security solutions that can be deployed to enhance the security of Zeroconf networks. We further investigate the performance of the IP Security (IPSec) protocol when used by our Mono.Zeroconf implementation running on the Windows XP platform. With IPSec, service discovery time increases by almost 45% with our prototype implementation. (c) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Zero Configuration Networking: Implementation, performance, and security", "paper_id": "WOS:000309693900009"}