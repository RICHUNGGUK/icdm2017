{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "vliw_processors"}, {"score": 0.03793973691753814, "phrase": "execution_traces"}, {"score": 0.004766388573192505, "phrase": "dynamically_profiled_execution_traces"}, {"score": 0.00469445816161498, "phrase": "design_philosophy"}, {"score": 0.004553822674247401, "phrase": "instruction_level_parallelism"}, {"score": 0.00437281181878921, "phrase": "machine_code_level"}, {"score": 0.004220314322073171, "phrase": "memory_and_computational_blocks"}, {"score": 0.00409382470158851, "phrase": "vliw_tailoring"}, {"score": 0.004011603024990615, "phrase": "important_research_area"}, {"score": 0.00395101799538683, "phrase": "non-tailored_vliws"}, {"score": 0.0038325685550319863, "phrase": "available_vliw_hardware_resources"}, {"score": 0.0036614948691735105, "phrase": "vliw_customization"}, {"score": 0.003551694229680741, "phrase": "dynamic_profiling"}, {"score": 0.003445174898115646, "phrase": "non-memory_instructions"}, {"score": 0.003341839487905525, "phrase": "vliw_multi-port_memory"}, {"score": 0.003258090521354736, "phrase": "better_memory_utilization"}, {"score": 0.0032251796659158696, "phrase": "higher_performance"}, {"score": 0.0031125795874844438, "phrase": "multi-port_memory_configuration"}, {"score": 0.0030500051941781034, "phrase": "data_path_exploration"}, {"score": 0.003019189898170698, "phrase": "namely_the_number"}, {"score": 0.002943502888225748, "phrase": "execution_units"}, {"score": 0.0029137604783116065, "phrase": "efficient_extraction"}, {"score": 0.002884319445912462, "phrase": "ilp."}, {"score": 0.0028120022457134267, "phrase": "genetic_algorithm"}, {"score": 0.002727606388863445, "phrase": "large_design_space"}, {"score": 0.002501955525421155, "phrase": "state-of-the-art_vliw_customization_algorithms"}, {"score": 0.0024023079401125492, "phrase": "execution_performance"}, {"score": 0.002271725588755076, "phrase": "product_results"}, {"score": 0.002214734873559146, "phrase": "risc_processor_model"}, {"score": 0.0021923400552366756, "phrase": "evaluated_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["VLIW", " Dynamic profiling", " Genetic algorithm", " Mathematical model", " FPGA", " ASIC"], "paper_abstract": "The design philosophy of VLIW processors is to maximize instruction level parallelism (ILP) starting from compiler and machine code level to all the way down to memory and computational blocks. For this purpose, VLIW tailoring has been an important research area, because non-tailored VLIWs cannot fully utilize the available VLIW hardware resources. This paper introduces a method which achieves VLIW customization by processing execution traces obtained by dynamic profiling. Our method differentiates memory and non-memory instructions while processing execution traces. Customizing VLIW multi-port memory from memory operations provides better memory utilization and higher performance. Moreover, exploration of the multi-port memory configuration is coupled with data path exploration, namely the number and the composition of execution units for efficient extraction of ILP. We have designed a genetic algorithm for the exploration of the large design space formed by the execution traces. Our experiments show that our method has improved and found more compact memory topologies than state-of-the-art VLIW customization algorithms. In addition, we compare the execution performance, power consumption, average parallelism and area-delay product results of our VLIW model with a RISC processor model on evaluated benchmarks using our simulator framework. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Customizing VLIW processors from dynamically profiled execution traces", "paper_id": "WOS:000366879500006"}