{"auto_keywords": [{"score": 0.0046986841646790315, "phrase": "future_models"}, {"score": 0.004652963867892925, "phrase": "complex_software"}, {"score": 0.004518442937844318, "phrase": "crucial_traits"}, {"score": 0.003978866233891427, "phrase": "far_more_powerful_synergy"}, {"score": 0.003770373393393271, "phrase": "cognitive_processes"}, {"score": 0.0036434002236454305, "phrase": "system_behavior"}, {"score": 0.0034524248924699985, "phrase": "almost_anyone"}, {"score": 0.003130396338031522, "phrase": "already-specified_behaviors"}, {"score": 0.002937318465594425, "phrase": "powerful_ways"}, {"score": 0.002598764579760562, "phrase": "single_artifact"}, {"score": 0.002523481637809674, "phrase": "natural-language_requirements"}, {"score": 0.0023677483882740317, "phrase": "major_advance"}, {"score": 0.0021784745589727246, "phrase": "term_runware"}, {"score": 0.0021049977753042253, "phrase": "higher_level_artifact"}], "paper_keywords": ["Executable specifications", " Model-driven engineering", " Behavioral programming", " Computational methods"], "paper_abstract": "We believe that future models of complex software and systems will combine the crucial traits of intuitiveness, compositionality, and executability. The importance of each of these to modeling is already well recognized, but our vision suggests a far more powerful synergy between them. First, models will be aligned with cognitive processes used by humans to think about system behavior and will be understood, and perhaps creatable, by almost anyone. Second, one will be able to build models incrementally, adding to, refining or sculpting away already-specified behaviors without changing most existing parts of the model. Third, there will be powerful ways to execute such intuitive and compositional models, in whole or in part, at any stage of the development. The presence of these three traits in a single artifact will blur the boundaries between natural-language requirements, formal models, and actual software, bringing in its wake a major advance in the way systems are built, and in their cost and quality. We propose the term runware to refer to this kind of higher level artifact.", "paper_title": "The quest for runware: on compositional, executable and intuitive models", "paper_id": "WOS:000310087500012"}