{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "frequent_patterns"}, {"score": 0.015522323374647252, "phrase": "varying-size_sliding_window"}, {"score": 0.010613647780619757, "phrase": "sliding_window"}, {"score": 0.0047135086583390585, "phrase": "online_transactional_data_streams"}, {"score": 0.004633888966463624, "phrase": "data_stream_applications"}, {"score": 0.0043656173407379895, "phrase": "particular_interest"}, {"score": 0.00397495478332679, "phrase": "recent_frequent_patterns"}, {"score": 0.0039244530915794025, "phrase": "data_stream"}, {"score": 0.00387459052649752, "phrase": "time_decay_model"}, {"score": 0.0037446875860947916, "phrase": "recently_generated_transactions"}, {"score": 0.0037128955884188773, "phrase": "historical_transactions"}, {"score": 0.0036657110980445416, "phrase": "derived_concrete_bounds"}, {"score": 0.0036191240628152205, "phrase": "decay_factor"}, {"score": 0.0034977560416755726, "phrase": "summary_data_structure"}, {"score": 0.0030645676308053444, "phrase": "online_processing"}, {"score": 0.003038532168038562, "phrase": "new_transactions"}, {"score": 0.0028623555849897632, "phrase": "incrementally_way"}, {"score": 0.002801935384649699, "phrase": "mining_operation"}, {"score": 0.00268488398249084, "phrase": "insignificant_patterns"}, {"score": 0.002617007341172262, "phrase": "obsolete_pattern"}, {"score": 0.002572709810193776, "phrase": "infrequent_pattern"}, {"score": 0.002444254652283002, "phrase": "window_size"}, {"score": 0.002362192695471035, "phrase": "proposed_technique"}, {"score": 0.0023221983158528163, "phrase": "simulation_experiments"}, {"score": 0.002253826965566618, "phrase": "proposed_method"}, {"score": 0.0021504218042734677, "phrase": "comparable_algorithms"}], "paper_keywords": ["Transactional data stream", " Data stream mining", " Frequent pattern", " Varying-size sliding window", " Time decay model"], "paper_abstract": "In some data stream applications, the information embedded in the data arriving in the most recent time period is of particular interest. This paper proposes a method for efficiently mining the frequent patterns in a varying-size sliding window of online data streams. To highlight recent frequent patterns in the data stream, a time decay model is used to differentiate the patterns of recently generated transactions from historical transactions. The derived concrete bounds of the decay factor can achieve either 100% recall or 100% precision. A summary data structure, named SWP-tree, is proposed for capturing the content of the transactions in the sliding window by scanning the stream only once. In order to speed up online processing of new transactions, the information of frequent patterns recorded in the SWP-tree is updated in an incrementally way. To make the mining operation efficient, the SWP-tree is periodically pruned by identifying insignificant patterns, which include two kinds of obsolete pattern and two kinds of infrequent pattern. Since the sliding window can change its size, the effect of window size is examined. The performance of the proposed technique is evaluated via simulation experiments. The results show that the proposed method is both efficient and scalable, and that it outperforms comparable algorithms. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Mining frequent patterns in a varying-size sliding window of online transactional data streams", "paper_id": "WOS:000308390600002"}