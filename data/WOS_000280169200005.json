{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large-scale_distributed_systems"}, {"score": 0.04586846484671967, "phrase": "large_number"}, {"score": 0.004598933498016774, "phrase": "peer-to-peer_systems"}, {"score": 0.004479855062309818, "phrase": "fully_connected_logical_topology"}, {"score": 0.004278807087784626, "phrase": "existing_snapshot_algorithms"}, {"score": 0.004167982855788402, "phrase": "high_response_time"}, {"score": 0.0031223774204093713, "phrase": "small_number"}, {"score": 0.0026670492291247867, "phrase": "hypercube"}, {"score": 0.0022480304016499605, "phrase": "process_symmetry"}, {"score": 0.002218668420806254, "phrase": "greater_potential"}, {"score": 0.0021896891011033105, "phrase": "balanced_workload"}, {"score": 0.0021049977753042253, "phrase": "non-fifo_channels"}], "paper_keywords": ["Distributed system", " global state", " message passing", " distributed snapshot", " checkpoint", " hypercube", " supercomputer", " cluster", " overlay"], "paper_abstract": "Large-scale distributed systems such as supercomputers and peer-to-peer systems typically have a fully connected logical topology over a large number of processors. Existing snapshot algorithms in such systems have high response time and/or require a large number of messages, typically O(n(2)), where n is the number of processes. In this paper, we present a suite of two algorithms: simple_tree, and hypercube, that are both fast and require a small number of messages. This makes the algorithms highly scalable. Simple_tree requires O(n) messages and has O(log n) response time. Hypercube requires O(n log n) messages and has O(log n) response time, in addition to having the property that the roles of all the processes are symmetrical. Process symmetry implies greater potential for balanced workload and congestion-freedom. All the algorithms assume non-FIFO channels.", "paper_title": "Fast and Message-Efficient Global Snapshot Algorithms for Large-Scale Distributed Systems", "paper_id": "WOS:000280169200005"}