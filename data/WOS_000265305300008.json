{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "shortest_cycles"}, {"score": 0.0047310525657970615, "phrase": "undirected_graphs"}, {"score": 0.004527619017250708, "phrase": "simple_combinatorial_approximation_algorithm"}, {"score": 0.004074212307838049, "phrase": "adjacency-list_representation"}, {"score": 0.003968112038249246, "phrase": "undirected_graph_g"}, {"score": 0.0038989120088094185, "phrase": "n_vertices"}, {"score": 0.0038309141193444015, "phrase": "unknown_girth"}, {"score": 0.002600661525224505, "phrase": "minimum_weight"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithm", " Approximation algorithm", " Shortest cycle", " Undirected graph", " Time complexity"], "paper_abstract": "We describe a simple combinatorial approximation algorithm for finding a shortest (simple) cycle in an undirected graph. Given an adjacency-list representation of an undirected graph G with n vertices and unknown girth k, our algorithm returns with high probability a cycle of length at most 2k for even k and 2k + 2 for odd k, in time O(n(3/2) root log n). Thus, in general, it yields a 2 2/3 approximation. For a weighted, undirected graph, with non-negative edge weights in the range {1,2,...,M}, we present a simple combinatorial 2-approximation algorithm for a minimum weight (simple) cycle that runs in time O(n(2) log n(log n + log M)). (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Efficient approximation algorithms for shortest cycles in undirected graphs", "paper_id": "WOS:000265305300008"}