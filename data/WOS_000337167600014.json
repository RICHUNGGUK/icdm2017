{"auto_keywords": [{"score": 0.044099692473766064, "phrase": "primitive_quantum_operations"}, {"score": 0.013000215835100954, "phrase": "different_pmds"}, {"score": 0.011631205244023203, "phrase": "pmd."}, {"score": 0.010133655383556706, "phrase": "ftqls"}, {"score": 0.009388923162790887, "phrase": "technology_mapping"}, {"score": 0.008724042766593044, "phrase": "primitive_operations"}, {"score": 0.00481495049065317, "phrase": "quantum_computation"}, {"score": 0.004716520738331953, "phrase": "classical_computation"}, {"score": 0.004661176995136095, "phrase": "quantum_computations"}, {"score": 0.004565876339189493, "phrase": "conventional_digital_computations"}, {"score": 0.004394005938106429, "phrase": "quantum_circuits"}, {"score": 0.004316868627944404, "phrase": "quantum_gates"}, {"score": 0.004142084961822865, "phrase": "quantum_physical_machine_description"}, {"score": 0.004069352078974872, "phrase": "different_quantum_systems"}, {"score": 0.004021571540928605, "phrase": "different_hamiltonians"}, {"score": 0.0039045506947164225, "phrase": "quantum_cost"}, {"score": 0.003858697684681798, "phrase": "quantum_operation"}, {"score": 0.003735349093835257, "phrase": "quantum_logic_circuit"}, {"score": 0.003489987735217367, "phrase": "ft_quantum_logic_synthesis"}, {"score": 0.0033883824438527316, "phrase": "six_different_pmds"}, {"score": 0.0032510690712452147, "phrase": "multiple_pmds"}, {"score": 0.003064474252419265, "phrase": "unoptimized_quantum_circuit"}, {"score": 0.003010606455208659, "phrase": "commonly_used_gates"}, {"score": 0.002966438503447793, "phrase": "optimized_ft_quantum_circuit"}, {"score": 0.0028800314406625996, "phrase": "pmd._ftqls"}, {"score": 0.0028127163745564777, "phrase": "non-ft_circuits"}, {"score": 0.002722712628307598, "phrase": "optimized_quantum_gate_library"}, {"score": 0.002643386043540555, "phrase": "efficient_conversion"}, {"score": 0.0026277995163948263, "phrase": "ft_circuits"}, {"score": 0.002566364701535499, "phrase": "ft_cache_table"}, {"score": 0.002551231163230566, "phrase": "ftqls."}, {"score": 0.0025212306068464452, "phrase": "synthesis_results"}, {"score": 0.002498961351132696, "phrase": "ft_set"}, {"score": 0.0024333299501171795, "phrase": "pmd"}, {"score": 0.002404706573379854, "phrase": "quantum_circuit_optimization"}, {"score": 0.0023694065215394593, "phrase": "quantum_identity_rules"}, {"score": 0.0022135695577201594, "phrase": "critical_path"}, {"score": 0.002174626466808561, "phrase": "experiment_results"}], "paper_keywords": ["Fault-tolerant circuit", " physical machine description", " quantum compilation", " quantum computing", " quantum logic synthesis"], "paper_abstract": "Quantum computation can solve certain problems much faster than classical computation. However, quantum computations are more susceptible to errors than conventional digital computations. Thus, a fault-tolerant (FT) quantum circuit design is required for a practical implementation. Quantum circuits consist of a cascade of quantum gates. These gates are themselves realized using primitive quantum operations that are supported by the quantum physical machine description (PMD). As different quantum systems are associated with different Hamiltonians, they have different PMDs. In addition, the quantum cost for implementing a quantum operation may differ from one PMD to another. Thus, a quantum logic circuit needs to be realized with and optimized for the set of primitive quantum operations supported by the given PMD. In this paper, an FT quantum logic synthesis (FTQLS) methodology and tool is described for six different PMDs. A methodology, such as this, which can be targeted at multiple PMDs, has not been attempted before, to the best of our knowledge. The input to FTQLS is an unoptimized quantum circuit realized using a set of commonly used gates and its output is an optimized FT quantum circuit that only comprises of primitive quantum operations supported by the given PMD. FTQLS does technology mapping for different PMDs and then converts non-FT circuits to FT circuits. For technology mapping, it utilizes an optimized quantum gate library targeted at various PMDs that decomposes gates into primitive operations. Efficient conversion to FT circuits is done by integrating two quantum compilers and an FT cache table into FTQLS. For improving the synthesis results, an FT set of gates that is directly supported by each PMD is proposed. Quantum circuit optimization is done by utilizing quantum identity rules. The performance of FTQLS is evaluated using two cost metrics: number of primitive operations (# ops) and execution cycles on the critical path (# cycles). Experiment results show that the decrease in # ops varies between 58.1% and 87.0% and in # cycles between 42.8% and 76.4%, on an average, depending on the PMD.", "paper_title": "FTQLS: Fault-Tolerant Quantum Logic Synthesis", "paper_id": "WOS:000337167600014"}