{"auto_keywords": [{"score": 0.04968705263604004, "phrase": "flash_memories"}, {"score": 0.009834793452640466, "phrase": "joint_storage"}, {"score": 0.00481495049065317, "phrase": "joint_information_storage"}, {"score": 0.004489952932659799, "phrase": "data_storage_technology"}, {"score": 0.004238775572746022, "phrase": "flash_memory_cell"}, {"score": 0.0039362878637371574, "phrase": "lower_state"}, {"score": 0.00388800655625083, "phrase": "higher_state"}, {"score": 0.0038403151693333017, "phrase": "expensive_erasure_operation"}, {"score": 0.0034364867143322274, "phrase": "higher_states"}, {"score": 0.00338037259057507, "phrase": "considered_state_transitions"}, {"score": 0.002843581231499026, "phrase": "first_code"}, {"score": 0.0027176309244222, "phrase": "multiple_variables"}, {"score": 0.002618730478351454, "phrase": "second_code"}, {"score": 0.0024821782596371536, "phrase": "data_stream"}, {"score": 0.0022577559526646904, "phrase": "general_codes"}, {"score": 0.0021576973674470997, "phrase": "flash_memory's_rewriting_capabilities"}, {"score": 0.0021049977753042253, "phrase": "high_degree"}], "paper_keywords": ["Coding theory", " data storage", " flash memory"], "paper_abstract": "Memories whose storage cells transit irreversibly between states have been common since the start of the data storage technology. In recent years, flash memories have become a very important family of such memories. A flash memory cell has q states-state 0, 1, ... , q - 1-and can only transit from a lower state to a higher state before the expensive erasure operation takes place. We study rewriting codes that enable the data stored in a group of cells to be rewritten by only shifting the cells to higher states. Since the considered state transitions are irreversible, the number of rewrites is bounded. Our objective is to maximize the number of times the data can be rewritten. We focus on the joint storage of data in flash memories, and study two rewriting codes for two different scenarios. The first code, called floating code, is for the joint storage of multiple variables, where every rewrite changes one variable. The second code, called buffer code, is for remembering the most recent data in a data stream. Many of the codes presented here are either optimal or asymptotically optimal. We also present bounds to the performance of general codes. The results show that rewriting codes can integrate a flash memory's rewriting capabilities for different variables to a high degree.", "paper_title": "Rewriting Codes for Joint Information Storage in Flash Memories", "paper_id": "WOS:000283260900036"}