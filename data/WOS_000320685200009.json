{"auto_keywords": [{"score": 0.04747483309421114, "phrase": "failure-prone_files"}, {"score": 0.01998581822670534, "phrase": "product_line"}, {"score": 0.008372835283981007, "phrase": "prominent_predictors"}, {"score": 0.00481495049065317, "phrase": "evolving_software_product_line"}, {"score": 0.004758657162039561, "phrase": "previous_work"}, {"score": 0.004675442997905995, "phrase": "early_data"}, {"score": 0.004634380652505945, "phrase": "eclipse_product"}, {"score": 0.004331268265601626, "phrase": "product_line_software"}, {"score": 0.004205715668397308, "phrase": "classification-based_prediction"}, {"score": 0.0039421123723827655, "phrase": "previous_study"}, {"score": 0.0037607992433574835, "phrase": "previous_results"}, {"score": 0.003483718784873684, "phrase": "alternative_data_collection"}, {"score": 0.003463267330414914, "phrase": "prediction_periods"}, {"score": 0.0031241294019967226, "phrase": "new_results"}, {"score": 0.0030245409514492124, "phrase": "data_collection_period"}, {"score": 0.0030067770042809354, "phrase": "prediction_period"}, {"score": 0.002776901769295673, "phrase": "product_line_perspective"}, {"score": 0.002688352108538072, "phrase": "eclipse_product_line"}, {"score": 0.0026725573963372533, "phrase": "statistically_significant_improvement"}, {"score": 0.0025345056783823206, "phrase": "learner_performance"}, {"score": 0.0024320693637722335, "phrase": "post-release_failure-prone_files"}, {"score": 0.002320047233050843, "phrase": "evolving_product_line"}, {"score": 0.0022328311088272877, "phrase": "continuous_change"}, {"score": 0.002193688457453366, "phrase": "high-reuse_variation_components"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software product lines", " Change metrics", " Reuse", " Prediction", " Post-release defects", " Failure-prone files"], "paper_abstract": "Context: Previous work by researchers on 3 years of early data for an Eclipse product has identified some predictors of failure-prone files that work well. Eclipse has also been used previously by researchers to study characteristics of product line software. Objective: The work reported here investigates whether classification-based prediction of failure-prone files improves as the product line evolves. Method: This investigation first repeats, to the extent possible, the previous study and then extends it by including four more recent years of data, comparing the prominent predictors with the previous results. The research then looks at the data for three additional Eclipse products as they evolve over time. The analysis compares results from three different types of datasets with alternative data collection and prediction periods. Results: Our experiments with a variety of learners show that the difference between the performance of J48, used in this work, and the other top learners is not statistically significant. Furthermore, new results show that the effectiveness of classification significantly depends on the data collection period and prediction period. The study identifies change metrics that are prominent predictors across all four releases of all four products in the product line for the three different types of datasets. From the product line perspective, prediction of failure-prone files for the four products studied in the Eclipse product line shows statistically significant improvement in accuracy but not in recall across releases. Conclusion: As the product line matures, the learner performance improves significantly for two of the three datasets, but not for prediction of post-release failure-prone files using only pre-release change data. This suggests that it may be difficult to detect failure-prone files in the evolving product line. At least in part, this may be due to the continuous change, even for commonalities and high-reuse variation components, which we previously have shown to exist. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Predicting failure-proneness in an evolving software product line", "paper_id": "WOS:000320685200009"}