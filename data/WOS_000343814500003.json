{"auto_keywords": [{"score": 0.04160459156324093, "phrase": "large_problem_instances"}, {"score": 0.03723034616410361, "phrase": "bounding_operation"}, {"score": 0.03062284688869159, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "unit-accelerated_bounding"}, {"score": 0.004621043537046209, "phrase": "permutation_problem"}, {"score": 0.004564401713056939, "phrase": "access_optimization"}, {"score": 0.004362564831572539, "phrase": "attractive_methods"}, {"score": 0.004273782634394231, "phrase": "combinatorial_optimization_problems"}, {"score": 0.004221379262804442, "phrase": "implicit_enumeration"}, {"score": 0.0041696157492057, "phrase": "dynamically_built_tree-based_search_space"}, {"score": 0.00388800655625083, "phrase": "tree_nodes"}, {"score": 0.003746673633703251, "phrase": "powerful_mechanism"}, {"score": 0.0036402965997795536, "phrase": "explored_search_space"}, {"score": 0.0034364867143322304, "phrase": "lower_bound_function"}, {"score": 0.0033388871136347704, "phrase": "exploration_process"}, {"score": 0.0033115124244647736, "phrase": "preliminary_experiments"}, {"score": 0.003257432325797907, "phrase": "flow-shop_scheduling_problem"}, {"score": 0.0030876784650745973, "phrase": "execution_time"}, {"score": 0.0029147175927233546, "phrase": "graphics_processing_unit"}, {"score": 0.002831894638104635, "phrase": "major_complementary_way"}, {"score": 0.0026622351303038885, "phrase": "parallel_bounding_model"}, {"score": 0.0026403934420630155, "phrase": "gpu_accelerators"}, {"score": 0.002607965563121546, "phrase": "proposed_approach"}, {"score": 0.0025865679621853667, "phrase": "data_access_optimization"}, {"score": 0.002565345470805401, "phrase": "extensive_experiments"}, {"score": 0.0025027144548626975, "phrase": "well-known_fsp_benchmarks"}, {"score": 0.0024215727801940434, "phrase": "cpu-based_single_core_execution"}, {"score": 0.0022300169122921906, "phrase": "equivalent_peak_performance"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["massively parallel computing", " GPU computing", " branch-and-bound algorithms", " lower bounding", " flow-shop scheduling"], "paper_abstract": "Branch-and-bound (B&B) algorithms are attractive methods for solving to optimality combinatorial optimization problems using an implicit enumeration of a dynamically built tree-based search space. Nevertheless, they are time-consuming when dealing with large problem instances. Therefore, pruning tree nodes (subproblems) is traditionally used as a powerful mechanism to reduce the size of the explored search space. Pruning requires to perform the bounding operation, which consists of applying a lower bound function to the subproblems generated during the exploration process. Preliminary experiments performed on the Flow-Shop scheduling problem (FSP) have shown that the bounding operation consumes over 98% of the execution time of the B&B algorithm. In this paper, we investigate the use of graphics processing unit (GPU) computing as a major complementary way to speed up the search. We revisit the design and implementation of the parallel bounding model on GPU accelerators. The proposed approach enables data access optimization. Extensive experiments have been carried out on well-known FSP benchmarks using an Nvidia Tesla C2050 GPU card. Compared to a CPU-based single core execution using an Intel Core i7-970 processor without GPU, speedups higher than 100 times faster are achieved for large problem instances. At an equivalent peak performance, GPU-accelerated B&B is twice faster than its multi-core counterpart. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Graphics processing unit-accelerated bounding for branch-and-bound applied to a permutation problem using data access optimization", "paper_id": "WOS:000343814500003"}