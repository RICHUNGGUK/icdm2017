{"auto_keywords": [{"score": 0.0426766154078814, "phrase": "unique_documents"}, {"score": 0.03545648497344867, "phrase": "query_cost"}, {"score": 0.004429388453288922, "phrase": "n_characters"}, {"score": 0.004337900700685262, "phrase": "two-pattern_matching_problems"}, {"score": 0.003701401653850141, "phrase": "input_patterns"}, {"score": 0.003670608022642996, "phrase": "length_pi"}, {"score": 0.003279039724748895, "phrase": "reporting_version"}, {"score": 0.003197843245296877, "phrase": "output_size"}, {"score": 0.0031448288291084, "phrase": "counting_version"}, {"score": 0.00300351371036355, "phrase": "simple_linear-space_index"}, {"score": 0.002627407106087633, "phrase": "best_possible_bounds"}, {"score": 0.002498812056838983, "phrase": "strong_connection"}, {"score": 0.00246765655376112, "phrase": "string_indexing_problems"}, {"score": 0.002436888552432559, "phrase": "boolean_matrix_multiplication_problem"}, {"score": 0.0022696277881969896, "phrase": "purely_combinatorial_techniques"}, {"score": 0.00216755493625594, "phrase": "related_problem"}, {"score": 0.0021405207258001118, "phrase": "common_colors_query_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Document retrieval", " Data structures", " String searching", " Lower bounds", " Boolean matrix multiplication"], "paper_abstract": "Let D = {d(1) d(2), d(D)} be a collection of D string documents of n characters in total. The two-pattern matching problems ask to index D for answering the following queries efficiently. center dot Report/count the unique documents containing P-1 and P-2. center dot Report/count the unique documents containing P-1, but not P-2. Here P-1 and P-2 represent input patterns of length pi and p(2) respectively. Linear space data structures with O (p(1) + p(2) +,root nk log(0(1))) n) query cost are already known for the reporting version, where k represents the output size. For the counting version (i.e., report the value k), a simple linear-space index with )(p(1) + p(2) root n,) query cost can be constructed in O(n(3/2)) time. However, it is still not known if these are the best possible bounds for these problems. In this paper, we show a strong connection between these string indexing problems and the boolean matrix multiplication problem. Based on this, we argue that these results cannot be improved significantly using purely combinatorial techniques. We also provide an improved upper bound for a related problem known as common colors query problem. Published by Elsevier B.V.", "paper_title": "On hardness of several string indexing problems", "paper_id": "WOS:000355042600008"}