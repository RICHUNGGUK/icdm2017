{"auto_keywords": [{"score": 0.04712665802421912, "phrase": "shared_memory"}, {"score": 0.03378755630941467, "phrase": "shared_memory_threading"}, {"score": 0.0047283116134926645, "phrase": "multi-core_clusters"}, {"score": 0.004357245559948974, "phrase": "programming_models"}, {"score": 0.004240116703465252, "phrase": "single_application"}, {"score": 0.003871869188502677, "phrase": "scientific_application_performance"}, {"score": 0.0036663981146086103, "phrase": "multi-core_systems"}, {"score": 0.003503497128638099, "phrase": "large_scale_molecular_dynamics_application"}, {"score": 0.0034717929086014636, "phrase": "programmed_using_message_passing_programming"}, {"score": 0.002947611960613497, "phrase": "lower_processor_numbers"}, {"score": 0.0028682668647074397, "phrase": "extra_overheads"}, {"score": 0.0027407299369891502, "phrase": "hybrid_code"}, {"score": 0.0026913130726432645, "phrase": "performance_benefits"}, {"score": 0.0025951294037626174, "phrase": "pure_mpi_code"}, {"score": 0.0024349853033241663, "phrase": "hybrid_model"}, {"score": 0.0023479408542211875, "phrase": "pure_mpi"}, {"score": 0.0022847009758393405, "phrase": "reduced_communication_time"}, {"score": 0.0022231606165229235, "phrase": "overall_runtime"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multi-core", " Hybrid programming", " Message passing", " Shared memory"], "paper_abstract": "The mixing of shared memory and message passing programming models within a single application has often been suggested as a method for improving scientific application performance on clusters of shared memory or multi-core systems. DL_POLY, a large scale molecular dynamics application programmed using message passing programming has been modified to add a layer of shared memory threading and the performance analysed on two multi-core clusters. At lower processor numbers, the extra overheads from shared memory threading in the hybrid code outweigh performance benefits gained over the pure MPI code. On larger core counts the hybrid model performs better than pure MPI, with reduced communication time decreasing the overall runtime. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Performance analysis of a hybrid MPI/OpenMP application on multi-core clusters", "paper_id": "WOS:000208807900006"}