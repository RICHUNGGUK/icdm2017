{"auto_keywords": [{"score": 0.041996689288621714, "phrase": "fmm"}, {"score": 0.004815316570708721, "phrase": "gpu"}, {"score": 0.004656871909510407, "phrase": "voxel_model_analyses"}, {"score": 0.004618166136069052, "phrase": "fast_multipole_method"}, {"score": 0.0045607070754363245, "phrase": "graphics_processing_units"}, {"score": 0.004337900700685262, "phrase": "three-dimensional_electrostatic_field"}, {"score": 0.004283955699848954, "phrase": "bem"}, {"score": 0.004195418010131832, "phrase": "cubic_voxel_models"}, {"score": 0.0040916230716372265, "phrase": "square_voxel_walls"}, {"score": 0.004057596233938867, "phrase": "boundary_surface_elements"}, {"score": 0.00390792986752692, "phrase": "surface_charge_elements"}, {"score": 0.0037324526526073404, "phrase": "individual_element"}, {"score": 0.003685972800046028, "phrase": "cpu_code"}, {"score": 0.0036097844103129043, "phrase": "field_analysis"}, {"score": 0.003579750245670577, "phrase": "human_voxel_models"}, {"score": 0.003535165233011893, "phrase": "anatomical_images"}, {"score": 0.003505749731180509, "phrase": "fmm_processes"}, {"score": 0.003376369479008885, "phrase": "double-precision_floating-point_arithmetic"}, {"score": 0.003292770855568091, "phrase": "shared_pseudocode_template"}, {"score": 0.0032517484445814334, "phrase": "electric_field"}, {"score": 0.0032112354575523317, "phrase": "dc-current_application"}, {"score": 0.0029291198314113608, "phrase": "four-gpu_configuration"}, {"score": 0.002892637998887887, "phrase": "nvidia"}, {"score": 0.002671722386856879, "phrase": "linear_system_solver"}, {"score": 0.0024573577356299765, "phrase": "fmm_range"}, {"score": 0.00227914162528171, "phrase": "calculation_speed"}, {"score": 0.00223196703759329, "phrase": "bem_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Boundary element method", " Fast multipole method", " Graphics processing unit", " Voxel model", " Laplace equation"], "paper_abstract": "using graphics processing units (CPUs) to reduce the time required to calculate a three-dimensional electrostatic field. The BEM is designed to handle cubic voxel models and is specialized to consider square voxel walls as boundary surface elements. The FMM handles the interactions among the surface charge elements and directly outputs surface integrals of the fields over each individual element. The CPU code was originally developed for field analysis in human voxel models derived from anatomical images. FMM processes are programmed using the NVIDIA Compute Unified Device Architecture (CUDA) with double-precision floating-point arithmetic on the basis of a shared pseudocode template. The electric field induced by DC-current application between two electrodes is calculated for two models with 499,629 (model 1) and 1,458,813 (model 2) surface elements. The calculation times were measured with a four-GPU configuration (two NVIDIA GTX295 cards) with four CPU cores (an Intel Core i7-975 processor). The times required by a linear system solver are 31 s and 186 s for models 1 and 2, respectively. The speed-up ratios of the FMM range from 5.9 to 8.2 for model 1 and from 5.0 to 5.6 for model 2. The calculation speed for element-interaction in this BEM analysis was comparable to that of particle-interaction using FMM on a CPU. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "GPU-accelerated indirect boundary element method for voxel model analyses with fast multipole method", "paper_id": "WOS:000288926100008"}