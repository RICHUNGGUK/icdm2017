{"auto_keywords": [{"score": 0.04034190794741309, "phrase": "dense_subgraphs"}, {"score": 0.009050526814151916, "phrase": "node_orderings"}, {"score": 0.008235807916326799, "phrase": "web_graphs"}, {"score": 0.0060632843322129025, "phrase": "compact_data_structure"}, {"score": 0.00481495049065317, "phrase": "social_graphs"}, {"score": 0.004783607451937166, "phrase": "compressed_representations"}, {"score": 0.0046602528492463045, "phrase": "large_web_and_social_graphs"}, {"score": 0.004394159734054881, "phrase": "basic_navigation_support"}, {"score": 0.004280804599325052, "phrase": "unprecedented_results"}, {"score": 0.004225223692701494, "phrase": "dense_subgraph"}, {"score": 0.004211441113293312, "phrase": "\"_patterns"}, {"score": 0.0040760539694352236, "phrase": "compact_data_structures"}, {"score": 0.003756252137445817, "phrase": "compression_scheme"}, {"score": 0.003635444740897197, "phrase": "\"virtual_nodes"}, {"score": 0.003405321679000047, "phrase": "best_current_compression_ratios"}, {"score": 0.0033720784894045544, "phrase": "out-neighbor_queries"}, {"score": 0.003168921495806216, "phrase": "large_web_graphs"}, {"score": 0.0029682413050825677, "phrase": "in-neighbor_queries"}, {"score": 0.0028915634293105014, "phrase": "best_time"}, {"score": 0.002717277008333612, "phrase": "bidirectional_navigation"}, {"score": 0.002407378648209689, "phrase": "virtual_nodes"}, {"score": 0.0022109570100232352, "phrase": "social_networks"}, {"score": 0.0021049977753042253, "phrase": "existing_representations"}], "paper_keywords": ["Compressed data structures", " Graph mining", " Web graphs", " Social networks"], "paper_abstract": "Compressed representations have become effective to store and access large Web and social graphs, in order to support various graph querying and mining tasks. The existing representations exploit various typical patterns in those networks and provide basic navigation support. In this paper, we obtain unprecedented results by finding \"dense subgraph\" patterns and combining them with techniques such as node orderings and compact data structures. On those representations, we support out-neighbor and out/in-neighbor queries, as well as mining queries based on the dense subgraphs. First, we propose a compression scheme for Web graphs that reduces edges by representing dense subgraphs with \"virtual nodes\"; over this scheme, we apply node orderings and other compression techniques. With this approach, we match the best current compression ratios that support out-neighbor queries (i.e., nodes pointed from a given node), using 1.0-1.8 bits per edge (bpe) on large Web graphs, and retrieving each neighbor of a node in 0.6-1.0 microseconds (s). When supporting both out- and in-neighbor queries, instead, our technique generally offers the best time when using little space. If the reduced graph, instead, is represented with a compact data structure that supports bidirectional navigation, we obtain the most compact Web graph representations (0.9-1.5 bpe) that support out/in-neighbor navigation; yet, the time per neighbor extracted raises to around 5-20 s. We also propose a compact data structure that represents dense subgraphs without using virtual nodes. It allows us to recover out/in-neighbors and answer other more complex queries on the dense subgraphs identified. This structure is not competitive on Web graphs, but on social networks, it achieves 4-13 bpe and 8-12 s per out/in-neighbor retrieved, which improves upon all existing representations.", "paper_title": "Compressed representations for web and social graphs", "paper_id": "WOS:000339883200002"}