{"auto_keywords": [{"score": 0.03435193159377417, "phrase": "data_structure"}, {"score": 0.009962443710714461, "phrase": "query_point"}, {"score": 0.00959155685724795, "phrase": "approximate_nearest_neighbor"}, {"score": 0.00481495049065317, "phrase": "approximate_nearest_neighbor_searching"}, {"score": 0.004646598460957092, "phrase": "point_points"}, {"score": 0.004416210202299748, "phrase": "closest_point"}, {"score": 0.004207886133277163, "phrase": "multiplicative_error"}, {"score": 0.004091780775570931, "phrase": "dimension_d"}, {"score": 0.003989001644825002, "phrase": "asymptotic_quantities"}, {"score": 0.003968756472790668, "phrase": "numerous_solutions"}, {"score": 0.003898700951496652, "phrase": "low-space_solutions"}, {"score": 0.003771849705803939, "phrase": "high-space_solutions"}, {"score": 0.0035664766824557584, "phrase": "single_approach"}, {"score": 0.0035393484786968195, "phrase": "fundamental_problem"}, {"score": 0.0034857073889812576, "phrase": "existing_results"}, {"score": 0.0034328764635642313, "phrase": "space-time_tradeoffs"}, {"score": 0.0033980999294855574, "phrase": "tradeoff_parameter_gamma"}, {"score": 0.002554831828129005, "phrase": "hierarchical_quadtree-based_subdivision"}, {"score": 0.002509671673209923, "phrase": "cell_stores"}, {"score": 0.0023249757987087055, "phrase": "new_algorithms"}, {"score": 0.0022492129111567824, "phrase": "lower_bounds"}, {"score": 0.0022320819551651223, "phrase": "space_complexity"}], "paper_keywords": ["Algorithms", " Theory", " Nearest neighbor searching", " space-time tradeoffs"], "paper_abstract": "Nearest neighbor searching is the problem of preprocessing a set of n point points in d-dimensional space so that, given any query point q, it is possible to report the closest point to q rapidly. In approximate nearest neighbor searching, a parameter epsilon > 0 is given, and a multiplicative error of (1 + epsilon) is allowed. We assume that the dimension d is a constant and treat n and epsilon as asymptotic quantities. Numerous solutions have been proposed, ranging from low-space solutions having space O(n) and query time O(log n+1/epsilon(d-1)) to high-space solutions having space roughly O((n log n)/epsilon(d)) and query time O(log(n/epsilon)). We show that there is a single approach to this fundamental problem, which both improves upon existing results and spans the spectrum of space-time tradeoffs. Given a tradeoff parameter gamma, where 2 <= gamma <= 1/epsilon, we show that there exists a data structure of space O(n gamma(d-1) log(1/epsilon)) that can answer queries in time O(log(n gamma) + 1/(epsilon gamma)((d-1)/2)). When gamma = 2, this yields a data structure of space O(n log(1/epsilon)) that can answer queries in time O(log n + 1/epsilon((d-1)/2)). When gamma = 1/epsilon, it provides a data structure of space O((n/epsilon(d-1)) log(1/epsilon)) that can answer queries in time O(log(n/epsilon)). Our results are based on a data structure called a (t, epsilon)-AVD, which is a hierarchical quadtree-based subdivision of space into cells. Each cell stores up to t representative points of the set, such that for any query point q in the cell at least one of these points is an approximate nearest neighbor of q. We provide new algorithms for constructing AVDs and tools for analyzing their total space requirements. We also establish lower bounds on the space complexity of AVDs, and show that, up to a factor of O(log(1/epsilon)), our space bounds are asymptotically tight in the two extremes, gamma = 2 and gamma = 1/epsilon.", "paper_title": "Space-Time Tradeoffs for Approximate Nearest Neighbor Searching", "paper_id": "WOS:000273339000001"}