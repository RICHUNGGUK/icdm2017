{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "blocked_communicating_processes"}, {"score": 0.00438105507792004, "phrase": "locked_processes"}, {"score": 0.004278807087784626, "phrase": "code_refactoring"}, {"score": 0.0031845067058084613, "phrase": "potential_locks"}, {"score": 0.00266693888510356, "phrase": "simple_setting"}, {"score": 0.002573965014439041, "phrase": "finite_linear_ccs_variant"}, {"score": 0.0023415390666563177, "phrase": "main_concepts"}], "paper_keywords": [""], "paper_abstract": "We study the problem of disentangling locked processes via code refactoring. We identify and characterise a class of processes that is not lock-free; then we formalise an algorithm that statically detects potential locks and propose refactoring procedures that disentangle detected locks. Our development is cast within a simple setting of a finite linear CCS variant - although it suffices to illustrate the main concepts, we also discuss how our work extends to other language extensions.", "paper_title": "Unlocking Blocked Communicating Processes", "paper_id": "WOS:000367338600004"}