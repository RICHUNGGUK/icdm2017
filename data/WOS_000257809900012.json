{"auto_keywords": [{"score": 0.04923786745654407, "phrase": "stride_prefetching"}, {"score": 0.044468583159911874, "phrase": "prefetch_instructions"}, {"score": 0.03404669479787196, "phrase": "prefetch_controller"}, {"score": 0.00481495049065317, "phrase": "dynamic_profile"}, {"score": 0.004647206916983993, "phrase": "important_technique"}, {"score": 0.004598027492787762, "phrase": "memory_access_performance"}, {"score": 0.004549366134876482, "phrase": "prior_work"}, {"score": 0.0044535760439663235, "phrase": "program_behavior_offline"}, {"score": 0.004375286710337962, "phrase": "identified_stride_patterns"}, {"score": 0.004313643010028869, "phrase": "compilation_process"}, {"score": 0.004222795179790998, "phrase": "appropriate_places"}, {"score": 0.004061160863655662, "phrase": "runtime_systems"}, {"score": 0.004032441847334232, "phrase": "online_profiling"}, {"score": 0.0039195744361570075, "phrase": "cross-procedural_prefetch_opportunity"}, {"score": 0.003864326375679274, "phrase": "special_supports"}, {"score": 0.003836993936866082, "phrase": "hardware_or_garbage_collection"}, {"score": 0.0037163618245226755, "phrase": "prefetch_engine"}, {"score": 0.003690078099887221, "phrase": "jvm"}, {"score": 0.0036639675955591065, "phrase": "java_virtual_machine"}, {"score": 0.0035740424892197155, "phrase": "candidate_load_operations"}, {"score": 0.0033408932140621948, "phrase": "runtime_profile"}, {"score": 0.0032820992275066274, "phrase": "trace_buffer"}, {"score": 0.0031901665168365357, "phrase": "protection_fault"}, {"score": 0.0030788521585190833, "phrase": "stride_patterns"}, {"score": 0.0030246556499243806, "phrase": "compiled_code"}, {"score": 0.0028779128559032956, "phrase": "major_advantages"}, {"score": 0.002738269813657276, "phrase": "virtual_code_places"}, {"score": 0.0027092368768921542, "phrase": "regular_and_irregular_code"}, {"score": 0.00265208877121581, "phrase": "plain_loop"}, {"score": 0.0025686131021181134, "phrase": "cross-procedural_patterns"}, {"score": 0.0025055037815033725, "phrase": "representative_java_benchmarks"}, {"score": 0.0024789326485851666, "phrase": "major_advantage"}, {"score": 0.002260112998123604, "phrase": "apache_harmony_jvm"}, {"score": 0.0021049977753042253, "phrase": "runtime_overhead"}], "paper_keywords": ["stride prefetching", " dynamic profiling", " runtime system"], "paper_abstract": "Stride prefetching is recognized as an important technique to improve memory access performance. The prior work usually profiles and/or analyzes the program behavior offline, and uses the identified stride patterns to guide the compilation process by injecting the prefetch instructions at appropriate places. There are some researches trying to enable stride prefetching in runtime systems with online profiling, but they either cannot discover cross-procedural prefetch opportunity, or require special supports in hardware or garbage collection. In this paper, we present a prefetch engine for JVM (Java Virtual Machine). It firstly identifies the candidate load operations during just-in-time (JIT) compilation, and then instruments the compiled code to profile the addresses of those loads. The runtime profile is collected in a trace buffer, which triggers a prefetch controller upon a protection fault. The prefetch controller analyzes the trace to discover any stride patterns, then modifies the compiled code to inject the prefetch instructions in place of the instrumentations. One of the major advantages of this engine is that, it can detect striding loads in any virtual code places for both regular and irregular code, not being limited with plain loop or procedure scopes. Actually we found the cross-procedural patterns take about 30% of all the prefetchings in the representative Java benchmarks. Another major advantage of the engine is that it has runtime overhead much smaller (the maximal is less than 4.0%) than the benefits it brings. Our evaluation with Apache Harmony JVM shows that the engine can achieve an average 6.2% speed-up with SPECJVM98 and DaCapo on Intel Pentium 4 platform, in spite of the runtime overhead.", "paper_title": "Runtime engine for dynamic profile guided stride prefetching", "paper_id": "WOS:000257809900012"}