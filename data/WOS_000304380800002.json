{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "caching_mechanism"}, {"score": 0.0047310525657970615, "phrase": "qos-aware_service_composition._web_service_composition"}, {"score": 0.004448705308279165, "phrase": "business_applications"}, {"score": 0.004183137595671171, "phrase": "growing_number"}, {"score": 0.0041102032028337366, "phrase": "web_services"}, {"score": 0.0038309141193444015, "phrase": "quality_parameters"}, {"score": 0.0037311260623089436, "phrase": "qos-aware_service_composition"}, {"score": 0.0035082436540296406, "phrase": "component_services"}, {"score": 0.003212663446866794, "phrase": "composite_service"}, {"score": 0.003101503914610488, "phrase": "user_preference"}, {"score": 0.0025328377393370642, "phrase": "current_approaches"}, {"score": 0.0022787359717772976, "phrase": "real_qos_dataset"}, {"score": 0.0021805201234139475, "phrase": "significant_impact"}, {"score": 0.0021049977753042253, "phrase": "computing_time"}], "paper_keywords": ["Service Composition", " QoS", " Caching Mechanism", " Hit Ratio", " Genetic Algorithm"], "paper_abstract": "Web service composition enables seamless and dynamic integration of business applications on the web. With the growing number of web services that provide the same functionality but differ in quality parameters, the QoS-aware service composition becomes a decision problem on which component services should be selected such that the quality of the composite service is optimized and user preference is satisfied. In this paper, we presented a caching mechanism for this problem, which can be complementary to most of current approaches to enhance the efficiency. We evaluate our approach experimentally using a real QoS dataset and it shows a significant impact in reducing the computing time.", "paper_title": "A CACHING MECHANISM FOR QOS-AWARE SERVICE COMPOSITION", "paper_id": "WOS:000304380800002"}