{"auto_keywords": [{"score": 0.03172121396748981, "phrase": "varuna"}, {"score": 0.012553036501426666, "phrase": "besteffort-repair"}, {"score": 0.011514778673815363, "phrase": "new_code"}, {"score": 0.00481495049065317, "phrase": "efficient_stabilizing_code_dissemination"}, {"score": 0.004768649568826951, "phrase": "wireless_sensor_networks"}, {"score": 0.004677372885331908, "phrase": "network_reprogramming"}, {"score": 0.004632388761885302, "phrase": "code_dissemination"}, {"score": 0.004478308876320956, "phrase": "updated_program_code"}, {"score": 0.0043713857434347254, "phrase": "relevant_nodes"}, {"score": 0.004046020290832207, "phrase": "old_code"}, {"score": 0.0037087324991876727, "phrase": "fault-intolerant_cd_protocols"}, {"score": 0.0036730297909962142, "phrase": "non-masking_fault-tolerant_protocols"}, {"score": 0.0033830587647810132, "phrase": "telosb-like_motes"}, {"score": 0.003334309053314909, "phrase": "tossim_simulations"}, {"score": 0.003146212656743413, "phrase": "case_study"}, {"score": 0.0030414140732789186, "phrase": "state-of-the-art_cd_protocol"}, {"score": 0.0026817365934071486, "phrase": "stabilizing_cd_protocol"}, {"score": 0.002592369213499121, "phrase": "low_overhead"}, {"score": 0.0023759728305710365, "phrase": "fast_recovery"}, {"score": 0.0023417010799384524, "phrase": "consistent-repair_attempts"}, {"score": 0.002274630121183437, "phrase": "erroneous_downloads"}, {"score": 0.0021881743793875767, "phrase": "first_corrector_protocols"}, {"score": 0.0021049977753042253, "phrase": "transient_faults"}], "paper_keywords": ["code dissemination", " transient faults", " non-masking fault tolerance", " wireless sensor networks", " error detection"], "paper_abstract": "One important component of network reprogramming is code dissemination (CD), when the updated program code is distributed to the relevant nodes. Very few CD protocols tolerate transient faults that corrupt the state and these faults can cause the old code to disseminate in the network. We propose two protocols called BestEffort-Repair and Consistent-Repair that transform fault-intolerant CD protocols into non-masking fault-tolerant protocols where, eventually, all nodes obtain the new code. We conduct experiments with both protocols on TelosB-like motes and over TOSSIM simulations to show their correctness and also their performance. We conduct a case study whereby both protocols are added to a state-of-the-art CD protocol, namely Varuna to evaluate their impact on Varuna. Our results show that (i) Varuna, which is fault-intolerant, is transformed into a stabilizing CD protocol; (ii) they induce low overhead on Varuna, and cause all nodes to eventually receive the new code. BestEffort-Repair is biased towards fast recovery, whereas Consistent-Repair attempts to reduce the number of erroneous downloads in the network. Our main contribution is the first corrector protocols that correct CD in the presence of transient faults.", "paper_title": "Towards Efficient Stabilizing Code Dissemination in Wireless Sensor Networks", "paper_id": "WOS:000346332800003"}