{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dolphin"}, {"score": 0.004982218339006495, "phrase": "main_memory"}, {"score": 0.004681226806682058, "phrase": "mining_distance-based_outliers"}, {"score": 0.004466519142879166, "phrase": "novel_distance-based_outlier_detection_algorithm"}, {"score": 0.00432208488976429, "phrase": "disk-resident_datasets"}, {"score": 0.004066076430818046, "phrase": "input_dataset_file"}, {"score": 0.003789395499639015, "phrase": "main_memory_usage"}, {"score": 0.003684048704119722, "phrase": "small_fraction"}, {"score": 0.003548111729206587, "phrase": "linear_time_performance"}, {"score": 0.0034657012607680173, "phrase": "dataset_size"}, {"score": 0.003291051334991867, "phrase": "unified_schema"}, {"score": 0.0031995142224983094, "phrase": "selection_policy"}, {"score": 0.0029816229984366374, "phrase": "similarity_search_techniques"}, {"score": 0.0029260602766930065, "phrase": "similarity_search"}, {"score": 0.002752513434446804, "phrase": "whole_dataset"}, {"score": 0.0023566987138026285, "phrase": "basic_method"}, {"score": 0.0022378101636842296, "phrase": "available_buffer"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_distance-based_outlier_detection_algorithms"}], "paper_keywords": ["Data mining", " outlier detection", " distance-based outliers"], "paper_abstract": "In this work a novel distance-based outlier detection algorithm, named DOLPHIN, working on disk-resident datasets and whose I/O cost corresponds to the cost of sequentially reading the input dataset file twice, is presented. It is both theoretically and empirically shown that the main memory usage of DOLPHIN amounts to a small fraction of the dataset and that DOLPHIN has linear time performance with respect to the dataset size. DOLPHIN gains efficiency by naturally merging together in a unified schema three strategies, namely the selection policy of objects to be maintained in main memory, usage of pruning rules, and similarity search techniques. Importantly, similarity search is accomplished by the algorithm without the need of preliminarily indexing the whole dataset, as other methods do. The algorithm is simple to implement and it can be used with any type of data, belonging to either metric or nonmetric spaces. Moreover, a modification to the basic method allows DOLPHIN to deal with the scenario in which the available buffer of main memory is smaller than its standard requirements. DOLPHIN has been compared with state-of-the-art distance-based outlier detection algorithms, showing that it is much more efficient.", "paper_title": "DOLPHIN: An Efficient Algorithm for Mining Distance-Based Outliers in Very Large Datasets", "paper_id": "WOS:000208167600004"}