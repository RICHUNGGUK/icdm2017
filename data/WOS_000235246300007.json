{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "association_rules"}, {"score": 0.030672382345965806, "phrase": "search_space"}, {"score": 0.030215809679591407, "phrase": "constraint_checking"}, {"score": 0.004765788394931875, "phrase": "multi-dimensional_constraints"}, {"score": 0.004550669123303854, "phrase": "mining_tasks"}, {"score": 0.004504193207111593, "phrase": "constraint-based_mining"}, {"score": 0.004256895619944631, "phrase": "complete_set"}, {"score": 0.0041703614123283165, "phrase": "previously_proposed_methods"}, {"score": 0.004023120753104693, "phrase": "single_constraint"}, {"score": 0.003802135020791801, "phrase": "single_attribute_value"}, {"score": 0.0035201528214608914, "phrase": "multiple_constraints"}, {"score": 0.0034663083890589235, "phrase": "multi-dimensional_attribute_values"}, {"score": 0.003209152260950748, "phrase": "frequent_items"}, {"score": 0.003160049822855747, "phrase": "infrequent_items"}, {"score": 0.0030957429853133147, "phrase": "apriori_property"}, {"score": 0.0028076592725295646, "phrase": "conditional_databases"}, {"score": 0.00250732953434891, "phrase": "conditional_database"}, {"score": 0.0022047613106966745, "phrase": "revised_fp-growth"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["data mining", " association rule", " constraint-based mining"], "paper_abstract": "To improve the effectiveness and efficiency of mining tasks, constraint-based mining enables users to concentrate on mining their interested association rules instead of the complete set of association rules. Previously proposed methods are mainly contributed to handling a single constraint and only consider the constraints which are characterized by a single attribute value. In this paper, we propose an approach to mine association rules with multiple constraints constructed by multi-dimensional attribute values. Our proposed approach basically consists of three phases. First, we collect the frequent items and prune infrequent items according to the Apriori property. Second, we exploit the properties of the given constraints to prune search space or save constraint checking in the conditional databases. Third, for each itemset possible to satisfy the constraint, we generate its conditional database and perform the three phases in the conditional database recursively. Our proposed algorithms can exploit the properties of constraints to prune search space or save constraint checking. Therefore, our proposed algorithm is more efficient than the revised FP-growth and FIC algorithms. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Mining association rules with multi-dimensional constraints", "paper_id": "WOS:000235246300007"}