{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_logic_programs"}, {"score": 0.004709567162738894, "phrase": "distributed_logic_programming_languages"}, {"score": 0.004310501708408856, "phrase": "different_nodes"}, {"score": 0.003802135020791801, "phrase": "distributed_systems"}, {"score": 0.0036914757355166966, "phrase": "network_protocols"}, {"score": 0.0036373553416391823, "phrase": "multi-agent_systems"}, {"score": 0.0035054881943660096, "phrase": "distributed_nature"}, {"score": 0.003428665921276366, "phrase": "underlying_systems"}, {"score": 0.003378385493203297, "phrase": "serious_challenges"}, {"score": 0.003304339421246321, "phrase": "efficient_and_correct_algorithms"}, {"score": 0.003069006373093756, "phrase": "efficient_asynchronous_algorithm"}, {"score": 0.002726740692380339, "phrase": "base_facts"}, {"score": 0.0022665781920241245, "phrase": "first_formal_proof"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Declarative Networking", " Correctness", " Logic Programming", " Distributed Datalog"], "paper_abstract": "Distributed logic programming languages, which allow both facts and programs to be distributed among different nodes in a network, have been recently proposed and used to declaratively program a wide-range of distributed systems, such as network protocols and multi-agent systems. However, the distributed nature of the underlying systems poses serious challenges to developing efficient and correct algorithms for evaluating these programs. This paper proposes an efficient asynchronous algorithm to compute incrementally the changes to the states in response to insertions and deletions of base facts. Our algorithm is formally proven to be correct in the presence of message reordering in the system. To our knowledge, this is the first formal proof of correctness for such an algorithm. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Maintaining distributed logic programs incrementally", "paper_id": "WOS:000308053800002"}