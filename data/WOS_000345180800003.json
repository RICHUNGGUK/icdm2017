{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "smalltalk"}, {"score": 0.02301786533757567, "phrase": "java"}, {"score": 0.008781617797382457, "phrase": "java_code"}, {"score": 0.00743446934847882, "phrase": "smalltalk_environment"}, {"score": 0.004617949594931096, "phrase": "programming_languages"}, {"score": 0.004575272950516775, "phrase": "programming_environments"}, {"score": 0.004367707617503722, "phrase": "advanced_features"}, {"score": 0.003852939975815287, "phrase": "traditional_approach"}, {"score": 0.0037820003983334476, "phrase": "java_and_smalltalk_languages"}, {"score": 0.00372965096877929, "phrase": "low-level_communication"}, {"score": 0.0036951530348821116, "phrase": "separate_java_and_smalltalk_virtual_machines"}, {"score": 0.0034303736977646135, "phrase": "java_language"}, {"score": 0.003320561182494713, "phrase": "direct_integration"}, {"score": 0.003140401552000472, "phrase": "single_environment"}, {"score": 0.003068242064611088, "phrase": "language_interoperability"}, {"score": 0.0030398432591176357, "phrase": "challenging_issues"}, {"score": 0.002431626477893495, "phrase": "standard_smalltalk_idioms"}, {"score": 0.0022467024793003812, "phrase": "java_virtual_machine"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Language interoperability", " Smalltalk", " Java"], "paper_abstract": "After decades of development in programming languages and programming environments, Smalltalk is still one of few environments that provide advanced features and is used in the industry. However, as Java became prevalent, the ability to call a Java code from Smalltalk became important. A traditional approach to integrate the Java and Smalltalk languages is through low-level communication between separate Java and Smalltalk virtual machines. To our best knowledge there is no other project attempting to execute and integrate the Java language directly in the Smalltalk environment. A direct integration allows for a very tight integration of the languages and their objects within a single environment. Yet integration and language interoperability impose challenging issues related to method naming conventions, method overloading, exception handling and thread-locking mechanisms. In this paper we describe ways to overcome these challenges and to integrate Java into the Smalltalk environment. We focus on a possibility to call a Java code from Smalltalk using standard Smalltalk idioms while the semantics of both languages remains preserved. We present STX:LIBJAVA an implementation of a Java virtual machine within Smalltalk/X - as a validation of our approach. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "On the integration of Smalltalk and Java", "paper_id": "WOS:000345180800003"}