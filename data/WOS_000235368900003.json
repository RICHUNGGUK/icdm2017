{"auto_keywords": [{"score": 0.004498812433096501, "phrase": "active_processes"}, {"score": 0.004251210982670317, "phrase": "distributed_systems"}, {"score": 0.004109212945115815, "phrase": "highly-variable_number"}, {"score": 0.0036691380448651443, "phrase": "adaptive_mechanism"}, {"score": 0.003546513036085932, "phrase": "up-to-date_information"}, {"score": 0.0031665087019813244, "phrase": "known_collect_algorithms"}, {"score": 0.0030606302942851027, "phrase": "non-linear_step_complexity"}, {"score": 0.002827105825163379, "phrase": "unrealistic_memory_overhead"}, {"score": 0.002671263324230699, "phrase": "new_randomized_collect_algorithms"}, {"score": 0.002552781867125423, "phrase": "step_complexity"}, {"score": 0.002495521662819317, "phrase": "linear_memory"}, {"score": 0.002253299769886694, "phrase": "new_deterministic_collect_algorithm"}, {"score": 0.002153316680437517, "phrase": "best_step_complexity"}, {"score": 0.0021049977753042253, "phrase": "previous_polynomial-memory_algorithms"}], "paper_keywords": ["adaptive algorithms", " total contention", " randomization"], "paper_abstract": "An adaptive algorithm, whose step complexity adjusts to the number of active processes, is attractive for distributed systems with a highly-variable number of processes. The cornerstone of many adaptive algorithms is an adaptive mechanism to collect up-to-date information from all participating processes. To date, all known collect algorithms either have non-linear step complexity or they are impractical because of unrealistic memory overhead. This paper presents new randomized collect algorithms with asymptotically optimal O(k) step complexity and linear memory overhead only. In addition we present a new deterministic collect algorithm that beats the best step complexity for previous polynomial-memory algorithms.", "paper_title": "Efficient adaptive collect using randomization", "paper_id": "WOS:000235368900003"}