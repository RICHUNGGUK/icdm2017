{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "correlated_parallel_computations"}, {"score": 0.004757917303420435, "phrase": "performance_analysis_methodology"}, {"score": 0.004664352260912174, "phrase": "statistical_theory"}, {"score": 0.004189863767755212, "phrase": "available_computing_resources"}, {"score": 0.004091130285858113, "phrase": "run-time-dependent_behaviors"}, {"score": 0.003994714109598034, "phrase": "universal_distribution_function"}, {"score": 0.0039005612858880115, "phrase": "parallel_execution_time"}, {"score": 0.0037784540167266497, "phrase": "probabilistic_and_statistical_models"}, {"score": 0.0037568062644928023, "phrase": "correlation"}, {"score": 0.003674738405118697, "phrase": "execution_times"}, {"score": 0.003588100032858716, "phrase": "significant_factor"}, {"score": 0.003531474887552889, "phrase": "analysis_accuracy"}, {"score": 0.0034482025128821548, "phrase": "known_analysis_methodologies"}, {"score": 0.0033402088717816446, "phrase": "task's_or_a_processor's_execution_time"}, {"score": 0.0032099453192629976, "phrase": "expected_value"}, {"score": 0.0031217859267564344, "phrase": "task's_execution_time"}, {"score": 0.003036040409062437, "phrase": "normal_distribution"}, {"score": 0.002814956065949522, "phrase": "different_communication_and_synchronization_patterns"}, {"score": 0.0026836723685046407, "phrase": "wider_application_scope"}, {"score": 0.0026307897899760383, "phrase": "previously_known_approaches"}, {"score": 0.0025382066972107777, "phrase": "extended_application"}, {"score": 0.002508073621696602, "phrase": "analysis_method"}, {"score": 0.002478297391121455, "phrase": "large_scope"}, {"score": 0.0023439376937579204, "phrase": "novel_static_task_allocation_technique"}, {"score": 0.002270449532546444, "phrase": "experimental_results"}, {"score": 0.0022345720876241044, "phrase": "parallel_tree_search_algorithm"}, {"score": 0.0021559025985688255, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["performance modeling", " performance analysis", " statistical models", " parallel processing", " divide-and-conquer"], "paper_abstract": "A performance analysis methodology for correlated parallel computations based on statistical theory is proposed. Divide-and-conquer strategy is widely used in solving problems in parallel by partitioning and allocating a number of given tasks to available computing resources. When the tasks exhibit run-time-dependent behaviors during execution and share a universal distribution function in their execution times, analysis of parallel execution time can be performed with the assistance of probabilistic and statistical models. Correlation (dependence) in execution times among tasks has posed a significant factor in influencing the analysis accuracy which is unmanageable by any known analysis methodologies. We establish a relation between a task's or a processor's execution time and the parallel execution time, in terms of expected value as well as variance when each task's execution time can be closely modeled by a normal distribution, for either uncorrelated or correlated tasks. This relation is then applied to the modeling and analysis of various parallel computation paradigms in which different communication and synchronization patterns along the processing are present. The method proposed has a wider application scope and gives more accurate prediction results than previously known approaches. We also show that, as an extended application of the analysis method to a large scope of problems, load balance among processors can be vastly improved with some novel static task allocation technique in manipulating the correlation among tasks. Experimental results in analyzing a parallel tree search algorithm and two parallel sorting algorithms show very accurate analysis and prediction with the proposed method. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Performance modeling and analysis of correlated parallel computations", "paper_id": "WOS:000259714600004"}