{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "logic_programs"}, {"score": 0.00471465954562773, "phrase": "type-based_norms"}, {"score": 0.004472935829694716, "phrase": "semantics-based_termination_analysis"}, {"score": 0.004265953661191515, "phrase": "novel_notion"}, {"score": 0.0042212686864468805, "phrase": "type-based_norm"}, {"score": 0.004068510313497539, "phrase": "corresponding_norm"}, {"score": 0.0036424917384748024, "phrase": "candidate_norms"}, {"score": 0.003312901888725435, "phrase": "termination_proofs"}, {"score": 0.0031262984171100856, "phrase": "different_norms"}, {"score": 0.0029814443878969973, "phrase": "different_parts"}, {"score": 0.0027258422018680453, "phrase": "type-based_candidate_norms"}, {"score": 0.0025858215477025117, "phrase": "powerful_and_practical_technique"}, {"score": 0.0024659480471085405, "phrase": "working_termination_analyzer"}, {"score": 0.002266364679369248, "phrase": "fully_automatic_analysis_tool"}, {"score": 0.0021049977753042253, "phrase": "combined_norms"}], "paper_keywords": ["languages", " theory", " verification", " abstract interpretation", " dataflow analysis", " global analysis", " groundness analysis", " program analysis", " termination analysis"], "paper_abstract": "This article makes two contributions to the work on semantics-based termination analysis for logic programs. The first involves a novel notion of type-based norm where for a given type, a corresponding norm is defined to count in a term the number of subterms of that type. This provides a collection of candidate norms, one for each type defined in the program. The second enables an analyzer to base termination proofs on the combination of several different norms. This is useful when different norms are better suited to justify the termination of different parts of the program. Application of the two contributions together consists in considering the combination of the type-based candidate norms for a given program. This results in a powerful and practical technique. Both contributions have been introduced into a working termination analyzer. Experimentation indicates that they yield state-of-the-art results in a fully automatic analysis tool, improving with respect to methods that do not use both types and combined norms.", "paper_title": "Termination analysis of logic programs through combination of type-based norms", "paper_id": "WOS:000246013700004"}