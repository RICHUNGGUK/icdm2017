{"auto_keywords": [{"score": 0.004761732436126133, "phrase": "user_interaction_data"}, {"score": 0.00452101969521343, "phrase": "user_activity_profiles"}, {"score": 0.0043404186974790706, "phrase": "similar_behaviors"}, {"score": 0.004276541976450121, "phrase": "common_models"}, {"score": 0.0038122196479548425, "phrase": "potentially_large_number"}, {"score": 0.0036734281414482735, "phrase": "profile_clusters"}, {"score": 0.0036327808996444904, "phrase": "high_processing_and_memory_resource_requirements"}, {"score": 0.0035135084960705816, "phrase": "distributed_stream_processing"}, {"score": 0.003410768840300913, "phrase": "distributed_state"}, {"score": 0.0033480826365657303, "phrase": "major_challenge"}, {"score": 0.0032381271420557052, "phrase": "memory_and_computation_balance"}, {"score": 0.0031551009669284545, "phrase": "clustering_accuracy"}, {"score": 0.0030401601744013767, "phrase": "potentially_changing_user_interaction_patterns"}, {"score": 0.0027502501046865525, "phrase": "online_processing"}, {"score": 0.00267969955652659, "phrase": "re-partitioning_technique"}, {"score": 0.002572463625403536, "phrase": "micro-cluster_summaries"}, {"score": 0.002469508424323385, "phrase": "central_node"}, {"score": 0.002379484250348599, "phrase": "greedy_algorithm"}, {"score": 0.002361876178411006, "phrase": "novel_affinity_heuristics"}, {"score": 0.0022927343007881846, "phrase": "routing_tables"}, {"score": 0.002258924405138231, "phrase": "lengthy_pause"}, {"score": 0.002128587147609537, "phrase": "telecommunications_company"}], "paper_keywords": ["aggregate profile clustering", " data streaming", " distributed clustering"], "paper_abstract": "Many analytic applications require analyzing user interaction data. In particular, such data can be aggregated over a window to build user activity profiles. Clustering such aggregate profiles is useful for grouping together users with similar behaviors, so that common models could be built for them. In this paper, we present an approach for clustering profiles that are incrementally maintained over a stream of updates. Owing to the potentially large number of users and high rate of interactions, maintaining profile clusters can have high processing and memory resource requirements. To tackle this problem, we apply distributed stream processing. However, in the presence of distributed state, it is a major challenge to partition the profiles over nodes such that memory and computation balance is maintained, while keeping the clustering accuracy high. Furthermore, in order to adapt to potentially changing user interaction patterns, the partitioning of profiles to nodes should be continuously revised, yet one should minimize the migration of profiles so as not to disturb the online processing of updates. We develop a re-partitioning technique that achieves all these goals. To achieve this, we keep micro-cluster summaries at each node and periodically collect these summaries at a central node to perform re-partitioning. We use a greedy algorithm with novel affinity heuristics to revise the partitioning and update the routing tables without introducing a lengthy pause. We showcase the effectiveness of our approach using an application that clusters customers of a telecommunications company based on their aggregate calling profiles.", "paper_title": "Aggregate Profile Clustering for Streaming Analytics", "paper_id": "WOS:000361469800016"}