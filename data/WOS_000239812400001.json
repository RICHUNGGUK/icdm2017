{"auto_keywords": [{"score": 0.032582056892488574, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "real-time_jobs"}, {"score": 0.004769958800452922, "phrase": "multiple_feasible_intervals"}, {"score": 0.004725385523804256, "phrase": "time-critical_jobs"}, {"score": 0.004009175817816061, "phrase": "last_feasible_interval"}, {"score": 0.0039716833701918365, "phrase": "earlier_works"}, {"score": 0.003916098498242888, "phrase": "optimal_off-line_algorithm"}, {"score": 0.003581620064675766, "phrase": "best_effort_manner"}, {"score": 0.003110515172439764, "phrase": "maximization_problem"}, {"score": 0.0028715299874549245, "phrase": "non-preemptible_and_preemptible_jobs"}, {"score": 0.002752513434446804, "phrase": "algorithm_least_earliest_completion_time_first"}, {"score": 0.002552946390854313, "phrase": "algorithm_least_execution_time_first"}, {"score": 0.0022696277881969896, "phrase": "extensive_simulations"}, {"score": 0.002248366278757655, "phrase": "simulation_results"}, {"score": 0.0022168460543913787, "phrase": "algorithms_lecf"}, {"score": 0.002201816192516379, "phrase": "lef"}, {"score": 0.0021450029487459403, "phrase": "approximation_factors"}], "paper_keywords": [""], "paper_abstract": "Time-critical jobs in many real-time applications have multiple feasible intervals. Such a job is constrained to execute from start to completion in one of its feasible intervals. A job fails if the job remains incomplete at the end of the last feasible interval. Earlier works developed an optimal off-line algorithm to schedule all the jobs in a given job set and on-line heuristics to schedule the jobs in a best effort manner. This paper is concerned with how to find a schedule in which the number of jobs completed in one of their feasible intervals is maximized. We show that the maximization problem is NP-hard for both non-preemptible and preemptible jobs. This paper develops two approximation algorithms for non-preemptible and preemptible jobs. When jobs are non-preemptible, Algorithm Least Earliest Completion Time First (LECF) is shown to have a 2-approximation factor; when jobs are preemptible, Algorithm Least Execution Time First (LEF) is proved being a 3-approximation algorithm. We show that our analysis for the two algorithms are tight. We also evaluate our algorithms by extensive simulations. Simulation results show that Algorithms LECF and LEF not only guarantee the approximation factors but also outperform other multiple feasible interval scheduling algorithms in average.", "paper_title": "Approximation algorithms for scheduling real-time jobs with multiple feasible intervals", "paper_id": "WOS:000239812400001"}