{"auto_keywords": [{"score": 0.037799471498052045, "phrase": "rdf"}, {"score": 0.030523838272194813, "phrase": "structured"}, {"score": 0.005667167972909487, "phrase": "rdf."}, {"score": 0.0047527118741586055, "phrase": "semistructured"}, {"score": 0.004367228576339114, "phrase": "structure_index"}, {"score": 0.004118751115632515, "phrase": "rdf_data"}, {"score": 0.003639471039860495, "phrase": "structure-oriented_approach"}, {"score": 0.0030326180561817497, "phrase": "\"structure-level\"_processing"}, {"score": 0.0028412769256691, "phrase": "query_structure"}, {"score": 0.002804478352027886, "phrase": "structure-level_processing"}, {"score": 0.0027145478956494356, "phrase": "standard_\"data-level\"_operations"}, {"score": 0.0021049977753042253, "phrase": "full-fledged_rdf_stores"}], "paper_keywords": ["RDF", " structure index", " RDF data management", " data partitioning", " query processing"], "paper_abstract": "We propose the use of a structure index for RDF. It can be used for querying RDF data for which the schema is incomplete or not available. More importantly, we leverage it for a structure-oriented approach to RDF data partitioning and query processing. Based on information captured by the structure index, similarly structured data elements are physically grouped and stored contiguously on disk. At querying time, the index is used for \"structure-level\" processing to identify the groups of data that match the query structure. Structure-level processing is then combined with standard \"data-level\" operations that involve retrieval and join procedures executed against the data. In the experiment, our solution provides several times faster performance than a state-of-the-art technique for data partitioning and query processing, and compares favorably with full-fledged RDF stores.", "paper_title": "Managing Structured and Semistructured RDF Data Using Structure Indexes", "paper_id": "WOS:000322136900011"}