{"auto_keywords": [{"score": 0.04380051874929336, "phrase": "security_solutions"}, {"score": 0.039623451612228036, "phrase": "gimple_weaving"}, {"score": 0.015719716506582538, "phrase": "mainstream_languages"}, {"score": 0.011913914471107321, "phrase": "common_aspect-oriented_language"}, {"score": 0.004615587054831451, "phrase": "novel_aspect-oriented_approach"}, {"score": 0.004570759943853384, "phrase": "gimple"}, {"score": 0.004353040792349733, "phrase": "gnu_compiler_collection"}, {"score": 0.004324813032259506, "phrase": "gcc"}, {"score": 0.004227398267369744, "phrase": "application_security_hardening"}, {"score": 0.004132178452877669, "phrase": "gimple_representations"}, {"score": 0.004092026656771699, "phrase": "systematic_way"}, {"score": 0.004012885020428863, "phrase": "manual_hardening"}, {"score": 0.003948099515006211, "phrase": "considerable_number"}, {"score": 0.0037968334163829944, "phrase": "formal_specification"}, {"score": 0.003735522846193052, "phrase": "implementation_strategies"}, {"score": 0.003699210979926274, "phrase": "proposed_weaving_semantics"}, {"score": 0.003477264432055326, "phrase": "core_set"}, {"score": 0.003454687811707182, "phrase": "gimple_constructs"}, {"score": 0.0033878306639271963, "phrase": "weaving_semantics"}, {"score": 0.0032685906228558706, "phrase": "security_experts"}, {"score": 0.0032157824854214313, "phrase": "common_language"}, {"score": 0.0031127040190005216, "phrase": "main_functionality"}, {"score": 0.003012919635505122, "phrase": "security_issues"}, {"score": 0.0029163246959273605, "phrase": "weaving_processes"}, {"score": 0.0028228178454284825, "phrase": "new_security_features"}, {"score": 0.002804478352027886, "phrase": "aop_languages"}, {"score": 0.0026619761089539595, "phrase": "first_approach"}, {"score": 0.0025102759256260703, "phrase": "second_approach"}, {"score": 0.002477753633057247, "phrase": "kniesel's_discipline"}, {"score": 0.0023213398100616132, "phrase": "consideration_weaving_interactions"}, {"score": 0.002189009136006588, "phrase": "defined_approach"}, {"score": 0.0021747784376752776, "phrase": "systematic_security"}, {"score": 0.00214659338413584, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Application security hardening", " Aspect-oriented programming (AOP)", " GIMPLE"], "paper_abstract": "In this paper, we propose a novel aspect-oriented approach based on GIMPLE, a language-independent and a tree-based representation generated by the GNU Compiler Collection (GCC), for the systemization of application security hardening. The security solutions are woven into GIMPLE representations in a systematic way, eliminating the need for manual hardening that might generate a considerable number of errors. To achieve this goal, we present a formal specification for GIMPLE weaving and the implementation strategies of the proposed weaving semantics. Syntax for a common aspect-oriented language that is abstract and multi-language support together with syntax for a core set for GIMPLE constructs are presented to express the weaving semantics. GIMPLE weaving accompanied by a common aspect-oriented language (1) allows security experts providing security solutions using this common language, (2) lets developers focus on the main functionality of programs by relieving them from the burden of security issues, (3) unifies the matching and the weaving processes for mainstream languages, and (4) facilitates introducing new security features in AOP languages. We handle the correctness and the completeness of GIMPLE weaving in two different ways. In the first approach, we prove them according to the rules and algorithms provided in this paper. In the second approach, we accommodate Kniesel's discipline that ensures that security solutions specified by our approach are applied at all and only the required points in source code, taking into consideration weaving interactions and interferences. Finally, we explore the viability and the relevance of our propositions by applying the defined approach for systematic security hardening to develop case studies. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Common weaving approach in mainstream languages for software security hardening", "paper_id": "WOS:000324564100014"}