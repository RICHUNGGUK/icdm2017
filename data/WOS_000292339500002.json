{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_component_architecture"}, {"score": 0.004688321299229397, "phrase": "component_model"}, {"score": 0.004565007074039171, "phrase": "large_enterprise_applications"}, {"score": 0.004484596684703308, "phrase": "reusable_software_components"}, {"score": 0.004327981760540394, "phrase": "major_software_development_technique"}, {"score": 0.004103212598803194, "phrase": "black_boxes"}, {"score": 0.0035590664550919854, "phrase": "rapid_development"}, {"score": 0.0034963129868796033, "phrase": "clean_and_explicit_architectures"}, {"score": 0.0021049977753042253, "phrase": "in-depth_comparison"}], "paper_keywords": ["components", " services", " software architecture"], "paper_abstract": "Composing large enterprise applications from reusable software components has become a major software development technique. Components are considered as black boxes and are composed together by their provided and required services. In comparison to other software development approaches, this allows for rapid development, clean and explicit architectures, and easy component reuse. Currently, there are several systems that support development and composition of components: service component architecture and Fractal are two well-known ones. At first sight, both have the same goals and provide very similar means to developers. In this paper, we briefly present both systems and then we focus on an in-depth comparison and evaluation of them.", "paper_title": "Comparing the Service Component Architecture and Fractal Component Model", "paper_id": "WOS:000292339500002"}