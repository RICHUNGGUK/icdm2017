{"auto_keywords": [{"score": 0.02881858386788793, "phrase": "adlt_algorithm"}, {"score": 0.015137772210423592, "phrase": "sensor_networks"}, {"score": 0.014155129268972697, "phrase": "collection_tree_scheme"}, {"score": 0.00481495049065317, "phrase": "distributed_lt_codes"}, {"score": 0.004774324145784758, "phrase": "y-networks"}, {"score": 0.00467424463996457, "phrase": "collection_tree"}, {"score": 0.004576253356889219, "phrase": "conventional_approach"}, {"score": 0.0043863636475983845, "phrase": "automatic_repeatrequest_techniques"}, {"score": 0.00416882434439484, "phrase": "sink_node"}, {"score": 0.004116139569480336, "phrase": "high_number"}, {"score": 0.003995772867224968, "phrase": "main_drawback"}, {"score": 0.0039119492240482, "phrase": "erasure-correcting_codes"}, {"score": 0.0038624981944755813, "phrase": "particular_fountain_codes"}, {"score": 0.003548368289666932, "phrase": "multiple_routes"}, {"score": 0.00337224813954299, "phrase": "optimal_network_throughput"}, {"score": 0.003259702394241964, "phrase": "fountain_codes"}, {"score": 0.002944039482467119, "phrase": "new_algorithm"}, {"score": 0.0028944757265206332, "phrase": "adaptive_distributed_lt"}, {"score": 0.0027978304423349246, "phrase": "lt_codes"}, {"score": 0.0027742880538911756, "phrase": "nc"}, {"score": 0.0026252106881752067, "phrase": "novel_technique"}, {"score": 0.0025375331660958665, "phrase": "robust_soliton_degree_distribution"}, {"score": 0.0024842242921857705, "phrase": "previously_proposed_algorithms"}, {"score": 0.002311192286067765, "phrase": "different_block_sizes"}, {"score": 0.00229164285862567, "phrase": "transmission_rates"}, {"score": 0.0022434880661725493, "phrase": "standard_lt_coding"}, {"score": 0.002224510044064184, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "standard_lt_code"}], "paper_keywords": ["Sensor networks", " distributed LT codes", " network coding", " Y-networks", " Fountain codes"], "paper_abstract": "The conventional approach for collecting data in sensor networks is the combination of automatic repeatrequest techniques with a collection tree scheme in which all routes end up in the sink node. A high number of acknowledgments and retransmissions is the main drawback of this scheme. Erasure-correcting codes, in particular Fountain codes, can be employed to reduce the number of retransmissions. In the collection tree scheme, it is common for multiple routes to share a bottleneck. In such scenarios, to reach the optimal network throughput, it is necessary to combine the Fountain codes and Network Coding (NC) technique. Y-networks can be considered as an abstraction to this scenario. This article proposes a new algorithm, namely, Adaptive Distributed LT code (ADLT), for combining LT codes with NC in Y-networks. The ADLT algorithm enables belief propagation decoding by employing a novel technique called degree distribution updating, to preserve Robust Soliton degree distribution at destination. Unlike previously proposed algorithms in the literature, the ADLT algorithm has the flexibility to handle any number of sources with different block sizes and transmission rates, where sources perform standard LT coding. Simulation results confirm that the performance of the ADLT algorithm is close to that of standard LT code.", "paper_title": "Adapting Distributed LT codes to Y-Networks: An Abstraction of Collection Tree in Sensor Networks", "paper_id": "WOS:000368188500002"}