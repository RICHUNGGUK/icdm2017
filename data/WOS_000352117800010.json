{"auto_keywords": [{"score": 0.03487111366993441, "phrase": "centrality_computations"}, {"score": 0.02837512590038219, "phrase": "intel_xeon_phi"}, {"score": 0.02416427963872751, "phrase": "cpu_architectures"}, {"score": 0.00481495049065317, "phrase": "graph_centrality_computations"}, {"score": 0.004764220976404241, "phrase": "centrality_metrics"}, {"score": 0.004494570360108983, "phrase": "important_nodes"}, {"score": 0.004173244935967375, "phrase": "high-end_workstation"}, {"score": 0.004042635935882651, "phrase": "today's_networks"}, {"score": 0.003978866233891427, "phrase": "main_reasons"}, {"score": 0.00385431710959668, "phrase": "irregular_structure"}, {"score": 0.0037336520904376687, "phrase": "today's_computing_units"}, {"score": 0.0036553070575015344, "phrase": "dense_and_regular_data"}, {"score": 0.0032014433546265694, "phrase": "higher_performance"}, {"score": 0.003150900886669123, "phrase": "betweenness_centrality"}, {"score": 0.0030521898646210413, "phrase": "traditional_fine-grain_approach"}, {"score": 0.0029409171055888804, "phrase": "multiple_bfss"}, {"score": 0.0028037753646260937, "phrase": "hardware_and_software_vectorization"}, {"score": 0.0027594936602962075, "phrase": "closeness_centrality_values"}, {"score": 0.0024947959375982614, "phrase": "additional_hardware"}, {"score": 0.0024553821147953463, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Betweenness centrality", " Closeness centrality", " BFS", " CPU", " GPU", " Intel Xeon Phi", " Vectorization"], "paper_abstract": "Centrality metrics such as betweenness and closeness have been used to identify important nodes in a network. However, it takes days to months on a high-end workstation to compute the centrality of today's networks. The main reasons are the size and the irregular structure of these networks. While today's computing units excel at processing dense and regular data, their performance is questionable when the data is sparse. In this work, we show how centrality computations can be regularized to reach higher performance. For betweenness centrality, we deviate from the traditional fine-grain approach by allowing a CPU to execute multiple BFSs at the same time. Furthermore, we exploit hardware and software vectorization to compute closeness centrality values on CPUs, CPUs and Intel Xeon Phi. Experiments show that only by reengineering the algorithms and without using additional hardware, the proposed techniques can speed up the centrality computations significantly: an improvement of a factor 5.9 on CPU architectures, 70.4 on CPU architectures and 21.0 on Intel Xeon Phi. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Regularizing graph centrality computations", "paper_id": "WOS:000352117800010"}