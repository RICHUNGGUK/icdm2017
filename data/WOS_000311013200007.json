{"auto_keywords": [{"score": 0.04674843814603258, "phrase": "austin"}, {"score": 0.013929591516724979, "phrase": "pointer_inputs"}, {"score": 0.005435835937189736, "phrase": "decision_procedure"}, {"score": 0.005102419221732272, "phrase": "random_memory_graphs"}, {"score": 0.00481495049065317, "phrase": "search_based_software_testing"}, {"score": 0.004691805714620268, "phrase": "large_number"}, {"score": 0.004638085752617182, "phrase": "search-based_software_testing"}, {"score": 0.004241995931481941, "phrase": "previous_work"}, {"score": 0.004145367312413832, "phrase": "new_hill_climb_algorithm"}, {"score": 0.003992999293962473, "phrase": "different_pointer"}, {"score": 0.003935892934907777, "phrase": "austin's_test_data_generation_algorithms"}, {"score": 0.0038573081851680656, "phrase": "different_search_algorithms"}, {"score": 0.003802135020791801, "phrase": "open_source_systems"}, {"score": 0.003704797078215222, "phrase": "branch_coverage"}, {"score": 0.0034671773098114192, "phrase": "open_source_benchmarks"}, {"score": 0.0034274307414457477, "phrase": "common_data_structure_implementations"}, {"score": 0.0031983089354509667, "phrase": "simpler_alternative"}, {"score": 0.0031434552452869156, "phrase": "second_empirical_study"}, {"score": 0.0030278017562213265, "phrase": "etf."}, {"score": 0.0029672941061574375, "phrase": "paired_wilcoxon_test"}, {"score": 0.002907992115184249, "phrase": "first_study"}, {"score": 0.0028829401200643687, "phrase": "practical_problems"}, {"score": 0.002721338551347818, "phrase": "insufficient_guard_statements"}, {"score": 0.00264395802739923, "phrase": "constraint_solver"}, {"score": 0.0025029300115295317, "phrase": "second_study"}, {"score": 0.0022887635344770265, "phrase": "etf"}, {"score": 0.002262493690015901, "phrase": "equal_or_higher_branch_coverage"}, {"score": 0.0021791815390109744, "phrase": "austin's_branch_coverage"}], "paper_keywords": ["Software testing", " SBSE", " SBST"], "paper_abstract": "Context: Despite the large number of publications on Search-Based Software Testing (SBST), there remain few publicly available tools. This paper introduces AUSTIN, a publicly available open source SBST tool for the C language.(1) The paper is an extension of previous work [1]. It includes a new hill climb algorithm implemented in AUSTIN and an investigation into the effectiveness and efficiency of different pointer handling techniques implemented by AUSTIN's test data generation algorithms. Objective: To evaluate the different search algorithms implemented within AUSTIN on open source systems with respect to effectiveness and efficiency in achieving branch coverage. Further, to compare AUSTIN against a non-publicly available, state-of-the-art Evolutionary Testing Framework (ETF). Method: First, we use example functions from open source benchmarks as well as common data structure implementations to check if the decision procedure for pointer inputs, introduced in this paper, differs in terms of effectiveness and efficiency compared to a simpler alternative that generates random memory graphs. A second empirical study formulates two alternate hypotheses regarding the effectiveness and efficiency of AUSTIN compared to the ETF. These hypotheses are tested using a paired Wilcoxon test. Results and Conclusion: The first study highlights some practical problems with the decision procedure for pointer inputs described in this paper. In particular, if the code under test contains insufficient guard statements to enforce constraints over pointers, then using a constraint solver for pointer inputs may be suboptimal compared to a method that generates random memory graphs. The programs used in the second study do not require any constraint solving for pointer inputs and consist of eight non-trivial, real-world C functions drawn from three embedded automotive software modules. For these functions, AUSTIN is competitive compared to the ETF, achieving an equal or higher branch coverage for six of the functions. In addition, for functions where AUSTIN's branch coverage is equal or higher, AUSTIN is more efficient than the ETF. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "AUSTIN: An open source tool for search based software testing of C programs", "paper_id": "WOS:000311013200007"}