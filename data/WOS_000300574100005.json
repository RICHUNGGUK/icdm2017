{"auto_keywords": [{"score": 0.04374510709170656, "phrase": "sem"}, {"score": 0.01833128874376184, "phrase": "soft_errors"}, {"score": 0.006640417313343704, "phrase": "stem"}, {"score": 0.00481495049065317, "phrase": "soft_error"}, {"score": 0.004764859786310636, "phrase": "system_failure"}, {"score": 0.0047152877145889656, "phrase": "computing_systems"}, {"score": 0.004498490110526062, "phrase": "ultradeep_submicron_process_technologies"}, {"score": 0.004224786847720058, "phrase": "soft_error_mitigation"}, {"score": 0.004115697805448384, "phrase": "soft_and_timing_error_mitigation"}, {"score": 0.003926359151817743, "phrase": "multiple_clocking"}, {"score": 0.0038249462699142733, "phrase": "combinational_logic_blocks"}, {"score": 0.003629882559085245, "phrase": "distributed_and_temporal_voting"}, {"score": 0.0034992667091713813, "phrase": "soft_error_detection_overhead"}, {"score": 0.003444732262403694, "phrase": "critical_path"}, {"score": 0.003251920460276645, "phrase": "false_errors"}, {"score": 0.003102195256794215, "phrase": "fast_recovery"}, {"score": 0.002897977113538355, "phrase": "timing_error_detection_capability"}, {"score": 0.0028527866590859967, "phrase": "reliable_execution"}, {"score": 0.002823050755743821, "phrase": "aggressively_clocked_designs"}, {"score": 0.0027790254309734428, "phrase": "system_performance"}, {"score": 0.002721388234661538, "phrase": "worst-case_clock_frequency"}, {"score": 0.002637160140011997, "phrase": "specialized_low_overhead_clock_phase_management_scheme"}, {"score": 0.0025288869172313674, "phrase": "timing-annotated_gate-level_simulations"}, {"score": 0.002412371116984224, "phrase": "pipelined_adder-multiplier"}, {"score": 0.002387214876538434, "phrase": "dlx"}, {"score": 0.0022653055209664284, "phrase": "dlx_processor"}, {"score": 0.002218299213266519, "phrase": "severe_fault_injection_campaigns"}, {"score": 0.0021609076467365247, "phrase": "average_performance_improvement"}, {"score": 0.0021049977753042253, "phrase": "conventional_triple_modular_redundancy_voter-based_soft_error_mitigation_scheme"}], "paper_keywords": ["Soft errors", " adaptive systems", " overclocking", " error detection", " reliability", " performance"], "paper_abstract": "The threat of soft error induced system failure in computing systems has become more prominent, as we adopt ultradeep submicron process technologies. In this paper, we propose two efficient soft error mitigation schemes, namely, Soft Error Mitigation (SEM) and Soft and Timing Error Mitigation (STEM), using the approach of multiple clocking of data for protecting combinational logic blocks from soft errors. Our first technique, SEM, based on distributed and temporal voting of three registers, unloads the soft error detection overhead from the critical path of the systems. SEM is also capable of ignoring false errors and recovers from soft errors using in-situ fast recovery avoiding recomputation. Our second technique, STEM, while tolerating soft errors, adds timing error detection capability to guarantee reliable execution in aggressively clocked designs that enhance system performance by operating beyond worst-case clock frequency. We also present a specialized low overhead clock phase management scheme that ably supports our proposed techniques. Timing-annotated gate-level simulations, using 45 nm libraries, of a pipelined adder-multiplier and DLX processor show that both our techniques achieve near 100 percent fault coverage. For DLX processor, even under severe fault injection campaigns, SEM achieves an average performance improvement of 26.58 percent over a conventional triple modular redundancy voter-based soft error mitigation scheme, while STEM outperforms SEM by 27.42 percent.", "paper_title": "Low Overhead Soft Error Mitigation Techniques for High-Performance and Aggressive Designs", "paper_id": "WOS:000300574100005"}