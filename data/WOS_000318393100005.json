{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "binary_search_trees"}, {"score": 0.0046184900568047565, "phrase": "new_method"}, {"score": 0.003129623571496151, "phrase": "appropriate_subtree"}, {"score": 0.0030226700832113942, "phrase": "single_or_double_rotation"}, {"score": 0.002648448458159033, "phrase": "constant_time"}, {"score": 0.0024876840172100567, "phrase": "worst-case_height"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": [""], "paper_abstract": "This paper presents a new method to balance binary search trees, which has the following properties. (i) The only information stored for the balance is the size of every subtree. (ii) Inserting or deleting an element can be done in the most traditional way: first, the element is recursively inserted (deleted) in (from) the appropriate subtree; afterwards, a single or double rotation takes place if necessary. (iii) Checking whether or not those rotations are required is computable in constant time per visited node. (iv) The worst-case height of these trees is never worse than approximately 1.44042 log(2) n, where n is the number of elements. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Fibonacci BSTs: A new balancing method for binary search trees", "paper_id": "WOS:000318393100005"}