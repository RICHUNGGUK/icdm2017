{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "-fly_structure_splitting"}, {"score": 0.004748556604045108, "phrase": "heap_objects"}, {"score": 0.0045547927862194856, "phrase": "multicore_systems"}, {"score": 0.004399349717218995, "phrase": "processor_speed"}, {"score": 0.004338661611644755, "phrase": "memory_latency"}, {"score": 0.004104132253183181, "phrase": "sophisticated_techniques"}, {"score": 0.003855347387268162, "phrase": "application's_spatial_and_temporal_locality"}, {"score": 0.003571591012750155, "phrase": "heap_data_layout"}, {"score": 0.003401954670986958, "phrase": "runtime_address_checking"}, {"score": 0.003285725064532174, "phrase": "existing_page_protection_mechanism"}, {"score": 0.0030017207229983385, "phrase": "safety_concerns"}, {"score": 0.0028195727965553367, "phrase": "sequential_and_parallel_programs"}, {"score": 0.0025578967205807843, "phrase": "sequential_programs"}, {"score": 0.0023043558058824572, "phrase": "experimental_results"}], "paper_keywords": ["Performance", " Data layout", " runtime", " structure splitting", " safety"], "paper_abstract": "With the advent of multicore systems, the gap between processor speed and memory latency has grown worse because of their complex interconnect. Sophisticated techniques are needed more than ever to improve an application's spatial and temporal locality. This paper describes an optimization that aims to improve heap data layout by structure-splitting. It also provides runtime address checking by piggybacking on the existing page protection mechanism to guarantee the correctness of such optimization that has eluded many previous attempts due to safety concerns. The technique can be applied to both sequential and parallel programs at either compile time or runtime. However, we focus primarily on sequential programs (i.e., single-threaded programs) at runtime in this paper. Experimental results show that some benchmarks in SPEC 2000 and 2006 can achieve a speedup of up to 142.8%.", "paper_title": "On-the-Fly Structure Splitting for Heap Objects", "paper_id": "WOS:000299995000009"}