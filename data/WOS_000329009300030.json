{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "range_query_processing"}, {"score": 0.004756805752518494, "phrase": "r-tree_using"}, {"score": 0.0043161190928529755, "phrase": "multi-dimensional_query_processing"}, {"score": 0.004238134740341528, "phrase": "graphics_processing_units"}, {"score": 0.004061584718427419, "phrase": "well-known_multidimensional_access_methods"}, {"score": 0.0034887749053459584, "phrase": "hierarchical_index_structure"}, {"score": 0.0033637374697995616, "phrase": "hierarchical_structure"}, {"score": 0.0032828706086018133, "phrase": "frequent_transfers"}, {"score": 0.0032431667821391044, "phrase": "small_volumes"}, {"score": 0.0031269043024513567, "phrase": "limited_opportunity"}, {"score": 0.003051713660488494, "phrase": "advanced_data_parallelism"}, {"score": 0.002685558057339722, "phrase": "main_idea"}, {"score": 0.002636956926079255, "phrase": "object_entries"}, {"score": 0.0026050445177883005, "phrase": "recently_visited_leaf_nodes"}, {"score": 0.002526938673434697, "phrase": "global_memory"}, {"score": 0.002436289099444074, "phrase": "massive_parallel_threads"}, {"score": 0.002348883765159185, "phrase": "extensive_performance_studies"}, {"score": 0.002264607102799332, "phrase": "proposed_approach"}, {"score": 0.0022371907579775796, "phrase": "query_performance"}, {"score": 0.0021049977753042253, "phrase": "original_r-tree"}], "paper_keywords": ["database", " multi-dimensional index structure", " GPUs"], "paper_abstract": "Recently, various research efforts have been conducted to develop strategies for accelerating multi-dimensional query processing using the graphics processing units (GPUs). However, well-known multidimensional access methods such as the R-tree, B-tree, and their variants are hardly applicable to GPUs in practice, mainly due to the characteristics of a hierarchical index structure. More specifically, the hierarchical structure not only causes frequent transfers of small volumes of data but also provides limited opportunity to exploit the advanced data parallelism of GPUs. To address these problems, we propose an approach that uses GPUs as a buffer. The main idea is that object entries in recently visited leaf nodes are buffered in the global memory of GPUs and processed by massive parallel threads of the GPUs. Through extensive performance studies, we observed that the proposed approach achieved query performance up to five times higher than that of the original R-tree.", "paper_title": "Accelerating Range Query Processing on R-Tree Using Graphics Processing Units", "paper_id": "WOS:000329009300030"}