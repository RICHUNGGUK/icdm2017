{"auto_keywords": [{"score": 0.049014830901543946, "phrase": "template_metaprogramming"}, {"score": 0.03373087714809986, "phrase": "edsl_program"}, {"score": 0.03246594998112075, "phrase": "libdsl"}, {"score": 0.00481495049065317, "phrase": "embedded_domain_specific_languages"}, {"score": 0.004327196832280818, "phrase": "embedded_domain"}, {"score": 0.0043029342321223825, "phrase": "specific_language"}, {"score": 0.004044822781630218, "phrase": "libdsl_library"}, {"score": 0.003802137281928932, "phrase": "edsl"}, {"score": 0.0035141291835319682, "phrase": "edsl_source_program"}, {"score": 0.003303177222901723, "phrase": "front-end_code"}, {"score": 0.003247868216333148, "phrase": "lalr_parser"}, {"score": 0.0031577303835881964, "phrase": "back-end_code"}, {"score": 0.003104849179057156, "phrase": "execution_engine"}, {"score": 0.002951444412262927, "phrase": "execution_engines"}, {"score": 0.0025208755851561368, "phrase": "compile_time"}, {"score": 0.0024097920845706795, "phrase": "libdsl_system"}, {"score": 0.0023035922232490106, "phrase": "compile-time_function_execution"}, {"score": 0.0022396019251440724, "phrase": "edsl_programs"}, {"score": 0.0021408862709571615, "phrase": "nice_integrativeness"}, {"score": 0.0021049977753042253, "phrase": "host_language"}], "paper_keywords": ["Languages", " Embedded domain specific languages", " Metaprogramming", " D language", " Library"], "paper_abstract": "This paper presents a library called LibDSL that helps the implementer of an embedded domain specific language (EDSL) effectively develop it in D language. The LibDSL library accepts as input some kinds of \"specifications\" of the EDSL that the implementer is going to develop and a D program within which an EDSL source program written by the user is embedded. It produces the front-end code of an LALR parser for the EDSL program and back-end code of the execution engine. LibDSL is able to produce two kinds of execution engines, namely compiler-based and interpreter-based engines, either of which the user can properly choose depending on whether an EDSL program is known at compile time or not. We have implemented the LibDSL system by using template metaprogramming and other advanced facilities such as compile-time function execution of D language. EDSL programs developed by means of LibDSL have a nice integrativeness with the host language.", "paper_title": "LibDSL: A Library for Developing Embedded Domain Specific Languages in D via Template Metaprogramming", "paper_id": "WOS:000357124200009"}