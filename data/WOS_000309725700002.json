{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "abstract_grammar_model"}, {"score": 0.004724571550328985, "phrase": "finally_tagless"}, {"score": 0.004618342952383313, "phrase": "typed_grammar_language"}, {"score": 0.0044634416051962545, "phrase": "traditional_parser_combinator_libraries"}, {"score": 0.004168986485488861, "phrase": "object-language_recursion"}, {"score": 0.0040290957541568775, "phrase": "existing_proposals"}, {"score": 0.0039986494357811715, "phrase": "recursive_constructs"}, {"score": 0.003879138659123195, "phrase": "new_finally_tagless_primitive_recursive_constructs"}, {"score": 0.003720600007408015, "phrase": "well-typed_way"}, {"score": 0.0036645642553325215, "phrase": "considerable_infrastructure"}, {"score": 0.0035415392642831616, "phrase": "multirec_generic_programming_library"}, {"score": 0.0034618177773967015, "phrase": "precise_model"}, {"score": 0.0034226302212225206, "phrase": "complex_interaction"}, {"score": 0.0033455764382772754, "phrase": "parsing_algorithm"}, {"score": 0.0032826873794020253, "phrase": "semantic_actions"}, {"score": 0.0032332256013507072, "phrase": "flip_side"}, {"score": 0.0031724417545242315, "phrase": "grammar_author"}, {"score": 0.0031246358910995316, "phrase": "type-and_value-level_encoding"}, {"score": 0.0029182434479165884, "phrase": "five_meta-language_grammar_algorithms"}, {"score": 0.002798865807872575, "phrase": "reachability_analysis"}, {"score": 0.002746225320405654, "phrase": "quantified_recursive_constructs"}, {"score": 0.002643888053328987, "phrase": "left-corner_grammar_transform"}, {"score": 0.0025357050267224715, "phrase": "grammar-combinators_parsing_library"}, {"score": 0.002413531395475291, "phrase": "abstract_context-free_grammars"}, {"score": 0.002314752262613559, "phrase": "grammar_manipulation_primitives"}, {"score": 0.0021948455916770233, "phrase": "well-studied_problem"}, {"score": 0.002137236968970666, "phrase": "domain-specific_languages"}, {"score": 0.0021049977753042253, "phrase": "finally_tagless_domain-specific_languages"}], "paper_keywords": [""], "paper_abstract": "We define a finally tagless, shallow embedding of a typed grammar language. In order to avoid the limitations of traditional parser combinator libraries (no bottom-up parsing, no full grammar analysis or transformation), we require object-language recursion to be observable in the meta-language. Since existing proposals for recursive constructs are not fully satisfactory, we propose new finally tagless primitive recursive constructs to solve the problem. To do this in a well-typed way, we require considerable infrastructure, for which we reuse techniques from the multirec generic programming library. Our infrastructure allows a precise model of the complex interaction between a grammar, a parsing algorithm and a set of semantic actions. On the flip side, our approach requires the grammar author to provide a type-and value-level encoding of the grammar's domain and we can provide only a limited form of constructs like many. We demonstrate five meta-language grammar algorithms exploiting our model, including a grammar pretty-printer, a reachability analysis, a translation of quantified recursive constructs to the standard one and an implementation of the left-corner grammar transform. The work we present forms the basis of the grammar-combinators parsing library, 1 which is the first to work with a precise, shallow model of abstract context-free grammars in a classical (not dependently typed) functional language and which supports a wide range of grammar manipulation primitives. From a more general point of view, our work shows a solution to the well-studied problem of observable sharing in shallowly embedded domain-specific languages and specifically in finally tagless domain-specific languages.", "paper_title": "Finally tagless observable recursion for an abstract grammar model", "paper_id": "WOS:000309725700002"}