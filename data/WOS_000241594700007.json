{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "line_repetition_detection"}, {"score": 0.004487989502479992, "phrase": "q_copies"}, {"score": 0.004371160978838441, "phrase": "primitive_string"}, {"score": 0.0040385352882334235, "phrase": "string_s_character"}, {"score": 0.0038647641000798135, "phrase": "on-line_repetition_detection_problem"}, {"score": 0.0035082436540296406, "phrase": "on-line_manner"}, {"score": 0.0028652153774536967, "phrase": "ending_position"}, {"score": 0.002623669616798891, "phrase": "distinct_characters"}, {"score": 0.002555247330102505, "phrase": "m-th_prefix"}, {"score": 0.002339771435910601, "phrase": "on-line_algorithm"}], "paper_keywords": [""], "paper_abstract": "A q-repetition is the concatenation of q copies of a primitive string, where q >= 2. Given a string S character by character, the on-line repetition detection problem is to determine whether S contains a q-repetition in an on-line manner. For q = 2, the problem can be solved in O(m log beta) time, where m is the ending position of the first 2-repetition and beta is the number of distinct characters in the m-th prefix of S. In this paper, we present an on-line algorithm that can detect a q-repetition for q >= 3 with the same time complexity.", "paper_title": "On-line repetition detection", "paper_id": "WOS:000241594700007"}