{"auto_keywords": [{"score": 0.049378038061471535, "phrase": "process_discovery"}, {"score": 0.00481495049065317, "phrase": "artificial_negative_events"}, {"score": 0.004640590144749795, "phrase": "automated_construction"}, {"score": 0.0045726187330434025, "phrase": "structured_process_models"}, {"score": 0.004505638402009237, "phrase": "information_system_event_logs"}, {"score": 0.004342430078306461, "phrase": "positive_examples"}, {"score": 0.004216112320418982, "phrase": "negative_examples"}, {"score": 0.003945117054416623, "phrase": "right_balance"}, {"score": 0.003479692058963528, "phrase": "incomplete_event_logs"}, {"score": 0.0033288399506044763, "phrase": "prior_knowledge"}, {"score": 0.0031146967095233586, "phrase": "configurable_technique"}, {"score": 0.0028715299874549245, "phrase": "multi-relational_classification_problem"}, {"score": 0.0027469703311742647, "phrase": "artificially_generated_negative_events"}, {"score": 0.0026277995163948263, "phrase": "problem_formulation"}, {"score": 0.002570162055835289, "phrase": "learning_algorithms"}, {"score": 0.0025324393547676623, "phrase": "evaluation_techniques"}, {"score": 0.0021842976754894846, "phrase": "declarative_control"}, {"score": 0.0021363670305843403, "phrase": "inductive_bias"}, {"score": 0.0021049977753042253, "phrase": "language_bias"}], "paper_keywords": ["graph pattern discovery", " inductive logic programming", " Petri net", " process discovery", " positive data only"], "paper_abstract": "Process discovery is the automated construction of structured process models from information system event logs. Such event logs often contain positive examples only. Without negative examples, it is a challenge to strike the right balance between recall and specificity, and to deal with problems such as expressiveness, noise, incomplete event logs, or the inclusion of prior knowledge. In this paper, we present a configurable technique that deals with these challenges by representing process discovery as a multi-relational classification problem on event logs supplemented with Artificially Generated Negative Events (AGNEs). This problem formulation allows using learning algorithms and evaluation techniques that are well-know in the machine learning community. Moreover, it allows users to have a declarative control over the inductive bias and language bias.", "paper_title": "Robust Process Discovery with Artificial Negative Events", "paper_id": "WOS:000270824900004"}