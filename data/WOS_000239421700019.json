{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "rapidly_growing_need"}, {"score": 0.004664352260912174, "phrase": "digitized_images"}, {"score": 0.004590820632326585, "phrase": "multimedia_systems"}, {"score": 0.004342430078306461, "phrase": "interesting_problems"}, {"score": 0.004273951631010383, "phrase": "multidimensional_pattern_matching"}, {"score": 0.003978866233891427, "phrase": "scaled_matching"}, {"score": 0.003559675269411366, "phrase": "arbitrary_real-sized_scale"}, {"score": 0.0033668870709083884, "phrase": "best_known_algorithm"}, {"score": 0.0031845067058084583, "phrase": "dictionary_matching"}, {"score": 0.0025892330566358503, "phrase": "two-dimensional_n_x_n_array"}, {"score": 0.002468450551616404, "phrase": "two-dimensional_m_x_m_array"}, {"score": 0.002279508335630797, "phrase": "scaled_matching_problem"}, {"score": 0.0021905197289213973, "phrase": "space_requirements"}], "paper_keywords": [""], "paper_abstract": "The rapidly growing need for analysis of digitized images in multimedia systems has lead to a variety of interesting problems in multidimensional pattern matching. One of the problems is that of scaled matching, finding all appearances of a pattern, proportionally enlarged according to an arbitrary real-sized scale, in a given text. The best known algorithm for this problem uses techniques from dictionary matching to solve the problem in O(nm(3) + n(2) m log m) time using O(nm(3) + n(2)) space, where the text is a two-dimensional n x n array and the pattern is a two-dimensional m x m array. We present a new approach for solving the scaled matching problem improving both the running times and the space requirements. Our algorithm runs in O(n(2)m) time and uses O(n(2)) space. This time includes the preprocessing (O(m(3)) time and O(m(2)) space), since the problem is only defined for m <= n.", "paper_title": "Faster two dimensional scaled matching", "paper_id": "WOS:000239421700019"}