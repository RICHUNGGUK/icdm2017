{"auto_keywords": [{"score": 0.04814050608144561, "phrase": "distributed_algorithm"}, {"score": 0.04232260104958791, "phrase": "asynchronous_executions"}, {"score": 0.03774156611827689, "phrase": "partially_ordered_executions"}, {"score": 0.00481495049065317, "phrase": "distributed_computations"}, {"score": 0.004765482708043842, "phrase": "asynchronous_point-to-point_networks"}, {"score": 0.003816197777388722, "phrase": "application-specific_sense"}, {"score": 0.0034236045013591437, "phrase": "restricted_orders"}, {"score": 0.003267925215811654, "phrase": "so-called_event-"}, {"score": 0.003234299589505403, "phrase": "pulse-driven_computations"}, {"score": 0.0029164434911787187, "phrase": "important_classes"}, {"score": 0.0028127163745564777, "phrase": "asynchronous_algorithm"}, {"score": 0.0024842242921857705, "phrase": "restricted_nondeterminism"}, {"score": 0.0024586427394152196, "phrase": "backtrack_search"}, {"score": 0.002408265305704217, "phrase": "event-driven_case"}, {"score": 0.002310578855290687, "phrase": "linear_equations"}, {"score": 0.00226322835801988, "phrase": "pulse-driven_case"}, {"score": 0.0022053994402287925, "phrase": "experimental_evidence"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Synchronous distributed algorithms", " Asynchronous distributed algorithms", " Partially synchronous distributed algorithms", " Distributed backtrack search", " Systems of linear equations", " Partial orders"], "paper_abstract": "Asynchronous executions of a distributed algorithm differ from each other due to the nondeterminism in the order in which the messages exchanged are handled. In many situations of interest, the asynchronous executions induced by restricting nondeterminism are more efficient, in an application-specific sense, than the others. In this work, we define partially ordered executions of a distributed algorithm as the executions satisfying some restricted orders of their actions in two different frameworks, those of the so-called event- and pulse-driven computations. The aim of these restrictions is to characterize asynchronous executions that are likely to be more efficient for some important classes of applications. Also, an asynchronous algorithm that ensures the occurrence of partially ordered executions is given for each case. Two of the applications that we believe may benefit from the restricted nondeterminism are backtrack search, in the event-driven case. and iterative algorithms for systems of linear equations. in the pulse-driven case. We provide some experimental evidence in these two cases. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Partially ordered distributed computations on asynchronous point-to-point networks", "paper_id": "WOS:000263480200002"}