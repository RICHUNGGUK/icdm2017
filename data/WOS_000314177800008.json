{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "diplodocus"}, {"score": 0.0047395356621991935, "phrase": "uml_profile"}, {"score": 0.004568108391981922, "phrase": "formal_verification"}, {"score": 0.004472935829694716, "phrase": "embedded_applications"}, {"score": 0.0043797373807446015, "phrase": "complex_systems"}, {"score": 0.004177049813981273, "phrase": "y-chart_approach"}, {"score": 0.0036043137580229873, "phrase": "mapping_stage"}, {"score": 0.0035665344993417603, "phrase": "abstract_tasks"}, {"score": 0.003529149828147388, "phrase": "communication_primitives"}, {"score": 0.003437387719239532, "phrase": "platform_elements"}, {"score": 0.003226744277130179, "phrase": "formal_semantics"}, {"score": 0.0031098631445657158, "phrase": "formal_proofs"}, {"score": 0.0028432828877281388, "phrase": "open-source_toolkit"}, {"score": 0.002813488551165728, "phrase": "uml"}, {"score": 0.002740253546178098, "phrase": "pre-mapping_or_post-mapping_uml_models"}, {"score": 0.002640947693258573, "phrase": "lotos-based_representation"}, {"score": 0.002518525107994039, "phrase": "model-checking_techniques"}, {"score": 0.002266364679369248, "phrase": "smart_card_system"}, {"score": 0.0022307779508260205, "phrase": "case_study"}, {"score": 0.00218419478369074, "phrase": "formal_verification_capabilities"}, {"score": 0.0021612684684351974, "phrase": "diplodocus._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["design space exploration", " systems-on-chip", " UML", " formal specification", " model checking", " TTool"], "paper_abstract": "DIPLODOCUS is a UML profile intended for the modeling and the formal verification of real-time and embedded applications commonly executed on complex Systems-on-Chip. DIPLODOCUS implements the Y-chart approach, that is, application and HW architecture (e.g., CPUs, bus, memories) are first described independently and are subsequently related to each other in a mapping stage. Abstract tasks and communication primitives are therefore mapped onto platform elements like buses and CPUs. DIPLODOCUS endows all models with a formal semantics, thereby paving the way for formal proofs both before and after mapping. More concretely, application, architecture, and mapping models can be edited in TTool an open-source toolkit using UML diagrams. Then, pre-mapping or post-mapping UML models may be automatically transformed into a LOTOS-based representation. This specification is in turn amenable to model-checking techniques to evaluate properties of the system, for example, safety, schedulability, and performance properties. A smart card system serves as case study to illustrate the formal verification capabilities of DIPLODOCUS. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Formal system-level design space exploration", "paper_id": "WOS:000314177800008"}