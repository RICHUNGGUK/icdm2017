{"auto_keywords": [{"score": 0.049445419527232116, "phrase": "minimum_k-way_cut_problem"}, {"score": 0.033930345576575704, "phrase": "approximation_ratio"}, {"score": 0.03032566332135465, "phrase": "general_algorithm"}, {"score": 0.00481495049065317, "phrase": "general_greedy_splitting_algorithm"}, {"score": 0.004667541072056214, "phrase": "edge-weighted_connected_undirected_graph"}, {"score": 0.004425215632459868, "phrase": "minimum_total_weight"}, {"score": 0.004289686492089576, "phrase": "k_connected_components"}, {"score": 0.004197126603915709, "phrase": "np"}, {"score": 0.003821503621554738, "phrase": "simple_algorithm"}, {"score": 0.003754140294151593, "phrase": "minimum_k-way"}], "paper_keywords": ["k-way cut", " Approximation algorithm"], "paper_abstract": "For an edge-weighted connected undirected graph, the minimum k-way cut problem is to find a subset of edges of minimum total weight whose removal separates the graph into k connected components. The problem is NP-hard when k is part of the input and W[1]-hard when k is taken as a parameter. A simple algorithm for approximating a minimum k-way cut is to iteratively increase the number of components of the graph by h - 1, where 2 <= h <= k, until the graph has k components. The approximation ratio of this algorithm is known for h <= 3 but is open for h >= 4. In this paper, we consider a general algorithm that successively increases the number of components of the graph by h(i) - 1, where 2 <= h(1) <= h(2) <= ... <= h(q) and Sigma(q)(i=1) (h(i) - 1) = k - 1. We prove that the approximation ratio of this general algorithm is 2 - (Sigma(q)(i=1) ((hi)(2)))/((k)(2)), which is tight. Our result implies that the approximation", "paper_title": "Tight Approximation Ratio of a General Greedy Splitting Algorithm for the Minimum k-Way Cut Problem", "paper_id": "WOS:000287319100004"}