{"auto_keywords": [{"score": 0.01229258307644079, "phrase": "training_data"}, {"score": 0.00481495049065317, "phrase": "svm_training"}, {"score": 0.004647206916983993, "phrase": "time_complexity"}, {"score": 0.004375286710337962, "phrase": "previous_studies"}, {"score": 0.004222795179790998, "phrase": "informative_patterns"}, {"score": 0.004119211418949265, "phrase": "two-stage_informative_pattern_extraction_approach"}, {"score": 0.0039195744361570075, "phrase": "bootstrap_sampling"}, {"score": 0.0038506359988314787, "phrase": "weak_svm_classifiers"}, {"score": 0.00378290546281883, "phrase": "sampled_datasets"}, {"score": 0.0036251554804124066, "phrase": "useful_information"}, {"score": 0.003449379912099073, "phrase": "second_stage"}, {"score": 0.0033172506969692626, "phrase": "final_svm_training_time"}, {"score": 0.0031118336364156516, "phrase": "parallelized_bootstrap_sampling_based_method"}, {"score": 0.003046219174166032, "phrase": "initial_training_data"}, {"score": 0.00297141030969672, "phrase": "large_number"}, {"score": 0.0027092368768921542, "phrase": "maximum_information"}, {"score": 0.00266152927283908, "phrase": "empirical_misclassification_probability"}, {"score": 0.0025961429982767257, "phrase": "first_stage"}, {"score": 0.002559501330352064, "phrase": "training_time"}, {"score": 0.0025055037815033725, "phrase": "training_data_further_reduction"}, {"score": 0.0024439412207268355, "phrase": "empirical_studies"}, {"score": 0.0023502347146791285, "phrase": "training_data_size"}, {"score": 0.002325306388085057, "phrase": "computational_cost"}, {"score": 0.002212417770466096, "phrase": "pegasos"}, {"score": 0.0021967433763351884, "phrase": "liblinear_svm"}, {"score": 0.0021811799507898792, "phrase": "rsvm."}, {"score": 0.0021503823972534096, "phrase": "generalization_performance"}, {"score": 0.0021049977753042253, "phrase": "baseline_methods"}], "paper_keywords": ["Data cleaning", " Pattern extraction", " Bootstrap", " Entropy maximization"], "paper_abstract": "Traditional Support Vector Machine (SVM) solution suffers from O(n (2)) time complexity, which makes it impractical to very large datasets. To reduce its high computational complexity, several data reduction methods are proposed in previous studies. However, such methods are not effective to extract informative patterns. In this paper, a two-stage informative pattern extraction approach is proposed. The first stage of our approach is data cleaning based on bootstrap sampling. A bundle of weak SVM classifiers are constructed on the sampled datasets. Training data correctly classified by all the weak classifiers are cleaned due to lacking useful information for training. To further extract more informative training data, two informative pattern extraction algorithms are proposed in the second stage. As most training data are eliminated and only the more informative samples remain, the final SVM training time is reduced significantly. Contributions of this paper are three-fold. (1) First, a parallelized bootstrap sampling based method is proposed to clean the initial training data. By doing that, a large number of training data with little information are eliminated. (2) Then, we present two algorithms to effectively extract more informative training data. Both algorithms are based on maximum information entropy according to the empirical misclassification probability of each sample estimated in the first stage. Therefore, training time can be further reduced for training data further reduction. (3) Finally, empirical studies on four large datasets show the effectiveness of our approach in reducing the training data size and the computational cost, compared with the state-of-the-art algorithms, including PEGASOS, LIBLINEAR SVM and RSVM. Meanwhile, the generalization performance of our approach is comparable with baseline methods.", "paper_title": "Training data reduction to speed up SVM training", "paper_id": "WOS:000341094000005"}