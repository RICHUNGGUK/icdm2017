{"auto_keywords": [{"score": 0.04775244230872765, "phrase": "critical_section"}, {"score": 0.012654219549180968, "phrase": "local_problem"}, {"score": 0.00481495049065317, "phrase": "asynchronous_message-passing_distributed_systems"}, {"score": 0.004720043307726269, "phrase": "mutual_inclusion_problem"}, {"score": 0.004167653403322565, "phrase": "generalized_problem"}, {"score": 0.003945467978172845, "phrase": "asynchronous_message-passing_model"}, {"score": 0.0037350832473790007, "phrase": "process_p"}, {"score": 0.0032975819773787985, "phrase": "message_complexity"}, {"score": 0.00324928224142775, "phrase": "delta"}, {"score": 0.0032004205378150354, "phrase": "maximum_degree"}, {"score": 0.0031372369299648203, "phrase": "neighboring_processes"}, {"score": 0.003014576010931602, "phrase": "global_setting"}, {"score": 0.002687922713487696, "phrase": "global_problem"}, {"score": 0.002457110101089137, "phrase": "maximum_size"}, {"score": 0.0022913497040895586, "phrase": "typically_vertical_bar_q_vertical_bar"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Distributed algorithm", " Mutual exclusion mutual inclusion", " Process synchronization"], "paper_abstract": "In the mutual inclusion problem, at least one process is in the critical section. However, only a solution for two processes with semaphores has been reported previously. In this study, a generalized problem setting is formalized and two distributed solutions are proposed based on an asynchronous message-passing model. In the local problem setting (the local mutual inclusion problem), for each process P, at least one of P and its neighbors must be in the critical section. For the local problem setting, a solution is proposed with O(Delta) message complexity, where Delta is the maximum degree (number of neighboring processes) of a network. In a global setting (the global mutual inclusion problem), at least one of the processes must be in the critical section. For the global problem setting, a solution is proposed with O(vertical bar Q vertical bar) message complexity, where vertical bar Q vertical bar is the maximum size for the quorum of a coterie used by the algorithm, which is typically vertical bar Q vertical bar = root n, where n is the number of processes in a network. 2015 Elsevier Inc. (C) All rights reserved.", "paper_title": "Mutual inclusion in asynchronous message-passing distributed systems", "paper_id": "WOS:000351482400008"}