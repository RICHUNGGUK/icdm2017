{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_resource_allocation"}, {"score": 0.004764220976404241, "phrase": "different_crossover_operators"}, {"score": 0.004714023408114857, "phrase": "different_problems"}, {"score": 0.0044237033788643715, "phrase": "ideal_crossover_operator"}, {"score": 0.004353948887538618, "phrase": "evolutionary_optimization_scheme"}, {"score": 0.004285289574869884, "phrase": "multiple_crossover_operators"}, {"score": 0.004195418010131832, "phrase": "effective_way"}, {"score": 0.0037139103792217143, "phrase": "decomposition-based_multi-objective_evolutionary_algorithm"}, {"score": 0.0033937776228549557, "phrase": "better_offspring"}, {"score": 0.0032527939106509946, "phrase": "overall_algorithm"}, {"score": 0.0030847461428168614, "phrase": "crossover_operators"}, {"score": 0.003036040409062437, "phrase": "optimization_process"}, {"score": 0.0029253546782349875, "phrase": "simplex_crossover_operator"}, {"score": 0.002894477018710154, "phrase": "spx"}, {"score": 0.002803776616437838, "phrase": "cmx"}, {"score": 0.0027303606813078255, "phrase": "experimental_results"}, {"score": 0.002658863179011018, "phrase": "innovative_use"}, {"score": 0.0025892330566358503, "phrase": "algorithm_performance"}, {"score": 0.002561892963059385, "phrase": "standard_test_problems"}, {"score": 0.0024553821147953463, "phrase": "suggested_algorithm"}, {"score": 0.002429451930463481, "phrase": "key_parameters"}, {"score": 0.002391067964886602, "phrase": "population_size"}, {"score": 0.002365815362517737, "phrase": "neighborhood_size"}, {"score": 0.0023408288327263316, "phrase": "maximum_number"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multi-objective optimization", " Pareto optimality", " Decomposition", " Crossover", " Resource allocation"], "paper_abstract": "Different crossover operators suit different problems. It is, therefore, potentially problematic to chose the ideal crossover operator in an evolutionary optimization scheme. Using multiple crossover operators could be an effective way to address this issue. This paper reports on the implementation of this idea, i.e. the use of two crossover operators in a decomposition-based multi-objective evolutionary algorithm, but not simultaneously. After each cycle, the operator which has helped produce the better offspring is rewarded. This means that the overall algorithm uses a dynamic resource allocation to reward the better of the crossover operators in the optimization process. The operators used are the Simplex Crossover operator (SPX) and the Center of Mass Crossover operator (CMX). We report experimental results that show that this innovative use of two crossover operators improves the algorithm performance on standard test problems. Results on the sensitivity of the suggested algorithm to key parameters such as population size, neighborhood size and maximum number of solutions to be altered for a given subproblem in the the decomposition process are also included. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A decomposition-based hybrid multiobjective evolutionary algorithm with dynamic resource allocation", "paper_id": "WOS:000306107900006"}