{"auto_keywords": [{"score": 0.049488021144002525, "phrase": "transactional_memory"}, {"score": 0.015719716506582538, "phrase": "concurrent_data_structures"}, {"score": 0.010795928399614027, "phrase": "data_structures"}, {"score": 0.0046676969718111765, "phrase": "promising_technique"}, {"score": 0.004581505405526037, "phrase": "disciplined_access"}, {"score": 0.0045249263666466005, "phrase": "shared_data"}, {"score": 0.004441359373498799, "phrase": "multiprocessor_system"}, {"score": 0.003528730431045574, "phrase": "hardware_support"}, {"score": 0.0031549249117721946, "phrase": "atomic_operations"}, {"score": 0.0030965805992969027, "phrase": "stock_hardware"}, {"score": 0.003039311963787733, "phrase": "real-time_guarantees"}, {"score": 0.0027342190990423637, "phrase": "fpga"}, {"score": 0.00265038878247831, "phrase": "java_virtual_machine"}, {"score": 0.002585206414738808, "phrase": "real-time_java"}, {"score": 0.002384206251320424, "phrase": "atomic_instructions"}, {"score": 0.002226357953581725, "phrase": "interesting_alternative"}, {"score": 0.0021987994275190314, "phrase": "traditional_concurrency_control_mechanisms"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["transactional memory", " real-time systems", " lock-free queues"], "paper_abstract": "Transactional memory is a promising technique for enforcing disciplined access to shared data in a multiprocessor system. Transactional memory simplifies the implementation of a variety of concurrent data structures. In this paper, we study the benefits of a modest, real-time aware, hardware implementation of transactional memory that we call micro-transactions. In particular, we argue that hardware support for micro-transactions allows us to efficiently implement certain data structures. Those data structures are difficult to realize with the atomic operations provided by stock hardware and provide real-time guarantees for those operations. Our main implementation platform is the Java Optimized Processor system, a field-programmable gate array (FPGA) implementation of the Java virtual machine, optimized for real-time Java. We report on the performance of data structures implemented with locks, atomic instructions, and micro-transactions. Our results suggest that transactional memory is an interesting alternative to traditional concurrency control mechanisms. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Micro-transactions for concurrent data structures", "paper_id": "WOS:000326023300003"}