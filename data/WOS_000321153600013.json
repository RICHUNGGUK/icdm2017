{"auto_keywords": [{"score": 0.04953289560992991, "phrase": "partial_pivoting"}, {"score": 0.015719716506582538, "phrase": "lu_factorization"}, {"score": 0.004678785623021003, "phrase": "multicore_system"}, {"score": 0.004443276312972159, "phrase": "canonical_numerical_procedure"}, {"score": 0.00436742595270452, "phrase": "main_component"}, {"score": 0.0042928648367867835, "phrase": "high_performance_linpack_benchmark"}, {"score": 0.0038492126993451337, "phrase": "standard_cpu_cores"}, {"score": 0.0038052556098065694, "phrase": "gpu_accelerators"}, {"score": 0.003471135453226184, "phrase": "computational_power"}, {"score": 0.003221316290858497, "phrase": "meager_bandwidth"}, {"score": 0.003166259444961177, "phrase": "communication_link"}, {"score": 0.00307657476125683, "phrase": "additional_challenge"}, {"score": 0.0029552551661591988, "phrase": "memory-bound_and_synchronization-rich_nature"}, {"score": 0.002822434555587263, "phrase": "block_lu_algorithm"}, {"score": 0.0025449518236394103, "phrase": "data_layout"}, {"score": 0.0025014259919355453, "phrase": "complex_memory_hierarchies"}, {"score": 0.002444544487772349, "phrase": "gpu_kernels"}, {"score": 0.0023480892503414596, "phrase": "memory-bound_cpu_operations"}, {"score": 0.002255431275670053, "phrase": "different_devices"}], "paper_keywords": ["Gaussian elimination", " LU factorization", " partial pivoting", " multicore", " manycore", " GPU", " accelerator"], "paper_abstract": "LU factorization with partial pivoting is a canonical numerical procedure and the main component of the high performance LINPACK benchmark. This paper presents an implementation of the algorithm for a hybrid, shared memory, system with standard CPU cores and GPU accelerators. The difficulty of implementing the algorithm for such a system lies in the disproportion between the computational power of the CPUs, compared to the GPUs, and in the meager bandwidth of the communication link between their memory systems. An additional challenge comes from the complexity of the memory-bound and synchronization-rich nature of the panel factorization component of the block LU algorithm, imposed by the use of partial pivoting. The challenges are tackled with the use of a data layout geared toward complex memory hierarchies, autotuning of GPU kernels, fine-grain parallelization of memory-bound CPU operations and dynamic scheduling of tasks to different devices. Performance in excess of one TeraFLOPS is achieved using four AMD Magny Cours CPUs and four NVIDIA Fermi GPUs.", "paper_title": "LU Factorization with Partial Pivoting for a Multicore System with Accelerators", "paper_id": "WOS:000321153600013"}