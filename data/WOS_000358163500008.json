{"auto_keywords": [{"score": 0.030847202748534683, "phrase": "execution_traces"}, {"score": 0.00481495049065317, "phrase": "repackaged_mobile_applications"}, {"score": 0.004756805752518494, "phrase": "collaborative_approach"}, {"score": 0.004718431349852634, "phrase": "repackaged_applications"}, {"score": 0.004642604455537883, "phrase": "genuine_applications"}, {"score": 0.004422325007817267, "phrase": "trojanized_applications"}, {"score": 0.004263972370406983, "phrase": "malware_code"}, {"score": 0.00412796126884884, "phrase": "private_data"}, {"score": 0.004061584718427419, "phrase": "user_credit"}, {"score": 0.003916098498242888, "phrase": "contract-based_approach"}, {"score": 0.0037301606780397456, "phrase": "legal_actions"}, {"score": 0.0035965032173588753, "phrase": "current_methods"}, {"score": 0.003495855671790616, "phrase": "real_usage_scenarios"}, {"score": 0.00303319936111073, "phrase": "proposed_framework"}, {"score": 0.0030086877092638945, "phrase": "application_contracts"}, {"score": 0.002936331371903168, "phrase": "central_server"}, {"score": 0.0028425481299483254, "phrase": "collaborative_users"}, {"score": 0.002751751956416832, "phrase": "quantitative_information"}, {"score": 0.0026209522797963447, "phrase": "expected_application_behavior"}, {"score": 0.002547535564922075, "phrase": "cooperating_users"}, {"score": 0.002456148932305311, "phrase": "received_contract"}, {"score": 0.002406799309495983, "phrase": "related_application"}, {"score": 0.0022923586577645143, "phrase": "enforcement_mechanism"}, {"score": 0.002255431275670053, "phrase": "application_execution"}, {"score": 0.002165688807780663, "phrase": "statistical_tests"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["probabilistic contract", " Android", " malware", " app repackaging"], "paper_abstract": "Repackaged applications are based on genuine applications, but they subtlety include some modifications. In particular, trojanized applications are one of the most dangerous threats for smartphones. Malware code may be hidden inside applications to access private data or to leak user credit. In this paper, we propose a contract-based approach to detect such repackaged applications, where a contract specifies the set of legal actions that can be performed by an application. Current methods to generate contracts lack information from real usage scenarios, thus being inaccurate and too coarse-grained. This may result either in generating too many false positives or in missing misbehaviors when verifying the compliance between the application and the contract. In the proposed framework, application contracts are generated dynamically by a central server merging execution traces collected and shared continuously by collaborative users executing the application. More precisely, quantitative information extracted from execution traces is used to define a contract describing the expected application behavior, which is deployed to the cooperating users. Then, every user can use the received contract to check whether the related application is either genuine or repackaged. Such a verification is based on an enforcement mechanism that monitors the application execution at run-time and compares it against the contract through statistical tests. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Detection of repackaged mobile applications through a collaborative approach", "paper_id": "WOS:000358163500008"}