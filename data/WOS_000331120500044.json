{"auto_keywords": [{"score": 0.007688761018299541, "phrase": "existing_approaches"}, {"score": 0.00481495049065317, "phrase": "general_linear_loops"}, {"score": 0.004736820055728928, "phrase": "abstract_acceleration_techniques"}, {"score": 0.004698229304089357, "phrase": "computing_loop_invariants"}, {"score": 0.004659951478263083, "phrase": "numerical_programs"}, {"score": 0.004621984064678252, "phrase": "linear_assignments"}, {"score": 0.0045284072672385975, "phrase": "abstract_interpretation_techniques"}, {"score": 0.004382591802405206, "phrase": "reachable_states"}, {"score": 0.004329124434198367, "phrase": "abstract_acceleration"}, {"score": 0.004038183610525504, "phrase": "loop_head"}, {"score": 0.003956379470617348, "phrase": "previous_acceleration_techniques"}, {"score": 0.0038603905208013482, "phrase": "linear_loop"}, {"score": 0.0036903962975894634, "phrase": "jordan_normal_form_decomposition"}, {"score": 0.0036453427552753533, "phrase": "loop_body"}, {"score": 0.0036008372531664726, "phrase": "symbolic_expressions"}, {"score": 0.0031327496009959464, "phrase": "abstract_domain"}, {"score": 0.003056682083784002, "phrase": "linear_inequality_relations"}, {"score": 0.0030193416820392554, "phrase": "complex_expressions"}, {"score": 0.0029460197288680864, "phrase": "abstract_matrix"}, {"score": 0.002898127432512101, "phrase": "fixpoint_semantics"}, {"score": 0.0027931892160452513, "phrase": "standard_abstract_interpreters"}, {"score": 0.0027253441561528495, "phrase": "nested_loops"}, {"score": 0.0026810296502682916, "phrase": "conditional_branches"}, {"score": 0.0026159017392986595, "phrase": "small_but_complex_loops"}, {"score": 0.0025523518748506347, "phrase": "control_software"}, {"score": 0.0024700078414481297, "phrase": "linear_loop_invariants"}, {"score": 0.002303720729387236, "phrase": "non-trivial_invariants"}, {"score": 0.002275557501858879, "phrase": "useful_bounds"}, {"score": 0.0021049977753042253, "phrase": "good_performance"}], "paper_keywords": [""], "paper_abstract": "We present abstract acceleration techniques for computing loop invariants for numerical programs with linear assignments and conditionals. Whereas abstract interpretation techniques typically over-approximate the set of reachable states iteratively, abstract acceleration captures the effect of the loop with a single, non-iterative transfer function applied to the initial states at the loop head. In contrast to previous acceleration techniques, our approach applies to any linear loop without restrictions. Its novelty lies in the use of the Jordan normal form decomposition of the loop body to derive symbolic expressions for the entries of the matrix modeling the effect of n >= 0 iterations of the loop. The entries of such a matrix depend on n through complex polynomial, exponential and trigonometric functions. Therefore, we introduces an abstract domain for matrices that captures the linear inequality relations between these complex expressions. This results in an abstract matrix for describing the fixpoint semantics of the loop. Our approach integrates smoothly into standard abstract interpreters and can handle programs with nested loops and loops containing conditional branches. We evaluate it over small but complex loops that are commonly found in control software, comparing it with other tools for computing linear loop invariants. The loops in our benchmarks typically exhibit polynomial, exponential and oscillatory behaviors that present challenges to existing approaches. Our approach finds non-trivial invariants to prove useful bounds on the values of variables for such loops, clearly outperforming the existing approaches in terms of precision while exhibiting good performance.", "paper_title": "Abstract Acceleration of General Linear Loops", "paper_id": "WOS:000331120500044"}