{"auto_keywords": [{"score": 0.024383178676484252, "phrase": "fpga"}, {"score": 0.004780183091824403, "phrase": "available_programmable_logic"}, {"score": 0.004694353795114243, "phrase": "great_promise"}, {"score": 0.004643594260262632, "phrase": "system_performance"}, {"score": 0.0043345662747335065, "phrase": "large_scale_manufacturing"}, {"score": 0.004195418010131832, "phrase": "single_defective_die"}, {"score": 0.004135010810625326, "phrase": "entire_stack"}, {"score": 0.0038596974575361574, "phrase": "defective_die"}, {"score": 0.003804105622385469, "phrase": "field_programmable_gate_array"}, {"score": 0.0035766032751309677, "phrase": "performance_enhancement"}, {"score": 0.0034742854447532678, "phrase": "defective_portion"}, {"score": 0.0034366728236876047, "phrase": "nonprogrammable_die"}, {"score": 0.003387153161968927, "phrase": "defective_functionality"}, {"score": 0.0033262727292037277, "phrase": "fpga."}, {"score": 0.003172969962401266, "phrase": "application-specific_integrated_circuit"}, {"score": 0.0030048355421601705, "phrase": "detailed_simulation"}, {"score": 0.0027842669893795766, "phrase": "different_frequencies"}, {"score": 0.002598652897946253, "phrase": "order_processor"}, {"score": 0.0025704954243348276, "phrase": "different_functional_units"}, {"score": 0.0023388674614404324, "phrase": "multiple_copies"}, {"score": 0.0023135183406982414, "phrase": "defective_partition"}, {"score": 0.0021049977753042253, "phrase": "original_defective_copy"}], "paper_keywords": ["3-D", " built-in-self-repair (BISR)", " defects", " fault tolerance", " field programmable gate array (FPGA)", " programmable logic"], "paper_abstract": "3-D die-stacks hold great promise for increasing system performance, but difficulties in testing dies and assembling a 3-D stack are leading to yield issues and slowing the large scale manufacturing of these devices. In many cases, a single defective die will kill the entire stack. To help mitigate this issue, we explore the possibility of repairing a stack that contains a defective die by utilizing an field programmable gate array (FPGA) that has already been included in the stack for other purposes, such as performance enhancement. Specifically, we propose bypassing the defective portion of a nonprogrammable die by replacing the defective functionality with functionality on the FPGA. In this paper, we discuss what additional logic must be added to an Application-Specific Integrated Circuit (ASIC) die to allow such a bypass to occur. We then show through detailed simulation of a 2.5-D Xilinx FPGA how bypassing of logic can be achieved and throughput maintained even when the two different dies involved operate at different frequencies. Finally, we explore the performance of this technique in a superscalar, out-of-order processor, where different functional units are marked for replacement. Our simulation results show that not only can we salvage a device that would otherwise have to be discarded, but creating multiple copies of the defective partition in the FPGA can allow us to regain performance even when the latency of the units in the FPGA is longer than that of the original defective copy.", "paper_title": "Repairing a 3-D Die-Stack Using Available Programmable Logic", "paper_id": "WOS:000353509300013"}