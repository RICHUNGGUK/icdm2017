{"auto_keywords": [{"score": 0.04603418765396699, "phrase": "flash_memory"}, {"score": 0.00481495049065317, "phrase": "flash-memory_storage_systems"}, {"score": 0.00468627326602559, "phrase": "significant_growth"}, {"score": 0.0045302298105691615, "phrase": "consumer_electronics"}, {"score": 0.0042912493195237725, "phrase": "economic_solution"}, {"score": 0.004233492114255375, "phrase": "storage_systems_design"}, {"score": 0.00414830454375092, "phrase": "index_structures"}, {"score": 0.003772793879444995, "phrase": "significant_number"}, {"score": 0.0037219886365287085, "phrase": "redundant_writes"}, {"score": 0.0035016702571862165, "phrase": "overall_performance"}, {"score": 0.0029355502535757696, "phrase": "b-tree_index_access"}, {"score": 0.0024607296642187824, "phrase": "proposed_methodology"}, {"score": 0.00237861522566195, "phrase": "system_performance"}, {"score": 0.00222249726328354, "phrase": "flash-memory_management"}, {"score": 0.0021776870246727233, "phrase": "energy_dissipation"}, {"score": 0.0021337783230121286, "phrase": "average_response_time"}, {"score": 0.0021049977753042253, "phrase": "record_insertions"}], "paper_keywords": ["design", " performance", " algorithm", " flash memory", " B-tree", " storage systems", " embedded systems", " database systems"], "paper_abstract": "With the significant growth of the markets for consumer electronics and various embedded systems, flash memory is now an economic solution for storage systems design. Because index structures require intensively fine-grained updates/modifications, block-oriented access over flash memory could introduce a significant number of redundant writes. This might not only severely degrade the overall performance, but also damage the reliability of flash memory. In this paper, we propose a very different approach, which can efficiently handle fine-grained updates/modifications caused by B-tree index access over flash memory. The implementation is done directly over the flash translation layer (FTL); hence, no modifications to existing application systems are needed. We demonstrate that when index structures are adopted over flash memory, the proposed methodology can significantly improve the system performance and, at the same time, reduce both the overhead of flash-memory management and the energy dissipation. The average response time of record insertions and deletions was also significantly reduced.", "paper_title": "An efficient B-tree layer implementation for flash-memory storage systems", "paper_id": "WOS:000256880500005"}