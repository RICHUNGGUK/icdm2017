{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "astr"}, {"score": 0.004574085781766281, "phrase": "first_static_analyzer"}, {"score": 0.004435363840720883, "phrase": "total_absence"}, {"score": 0.004390060342250211, "phrase": "runtime_errors"}, {"score": 0.0043452175611323335, "phrase": "actual_industrial_programs"}, {"score": 0.003982011128052839, "phrase": "required_precision"}, {"score": 0.003802135020791801, "phrase": "specific_class"}, {"score": 0.00368673793612343, "phrase": "reactive_control-command_software"}, {"score": 0.0035201528214608914, "phrase": "important_choice"}, {"score": 0.0030798711656591948, "phrase": "semantic_decisions"}, {"score": 0.002940626369102927, "phrase": "abstract_interpretation_framework"}, {"score": 0.0023694065215394593, "phrase": "development_process"}, {"score": 0.0022856052476424344, "phrase": "particular_usage"}], "paper_keywords": ["Abstract Interpretation", " Embedded critical software", " Formal methods", " Safety", " Scalability", " Static analysis tool", " Verification"], "paper_abstract": "Astr,e was the first static analyzer able to prove automatically the total absence of runtime errors of actual industrial programs of hundreds of thousand lines. What makes Astr,e such an innovative tool is its scalability, while retaining the required precision, when it is used to analyze a specific class of programs: that of reactive control-command software. In this paper, we discuss the important choice of algorithms and data-structures we made to achieve this goal. However, what really made this task possible was the ability to also take semantic decisions, without compromising soundness, thanks to the abstract interpretation framework. We discuss the way the precision of the semantics was tuned in Astr,e in order to scale up, the differences with some more academic approaches and some of the dead-ends we explored. In particular, we show a development process which was not specific to the particular usage Astr,e was built for, hoping that it might prove helpful in building other scalable static analyzers.", "paper_title": "Why does Astr,e scale up?", "paper_id": "WOS:000273555800002"}