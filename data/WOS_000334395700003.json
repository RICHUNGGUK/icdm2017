{"auto_keywords": [{"score": 0.03509726101704659, "phrase": "vm"}, {"score": 0.00481495049065317, "phrase": "coordinated_learning-based_resource_provisioning"}, {"score": 0.0046993598473345395, "phrase": "multiple_internet_applications"}, {"score": 0.004520132822496416, "phrase": "underlying_virtualized_server_resources"}, {"score": 0.00436890075128947, "phrase": "differentiated_treatment"}, {"score": 0.004326624385772596, "phrase": "co-hosted_applications"}, {"score": 0.004243289764306128, "phrase": "overall_system_performance"}, {"score": 0.004202223763361474, "phrase": "efficient_use"}, {"score": 0.004161553532799662, "phrase": "shared_resources"}, {"score": 0.004041879818641576, "phrase": "multi-tier_service_architecture"}, {"score": 0.0037392451233558234, "phrase": "coordinated_admission_control"}, {"score": 0.0037030390595465673, "phrase": "adaptive_resource_provisioning_approach"}, {"score": 0.0036671822784770463, "phrase": "multi-tier_service_differentiation"}, {"score": 0.0035616743422949766, "phrase": "shared_virtualized_platform"}, {"score": 0.003392507399258166, "phrase": "based_techniques"}, {"score": 0.003359647377874098, "phrase": "virtual_machine"}, {"score": 0.0032471155306148156, "phrase": "based_admission_control"}, {"score": 0.003215659239270654, "phrase": "adaptive_vm_auto-configuration"}, {"score": 0.0031845067058084583, "phrase": "proportional_service_differentiation"}, {"score": 0.0030628762739398855, "phrase": "application_response_time"}, {"score": 0.003018468582368033, "phrase": "admission_control"}, {"score": 0.002989220655735981, "phrase": "session_throughput"}, {"score": 0.0029031614127920232, "phrase": "resource_wastage"}, {"score": 0.002861062731782219, "phrase": "aborted_sessions"}, {"score": 0.0026986685585382347, "phrase": "system_agility"}, {"score": 0.002608218347502229, "phrase": "reinforcement_learning_approach"}, {"score": 0.0025829353063908256, "phrase": "cascade_neural_networks"}, {"score": 0.0025085435314540837, "phrase": "integrated_approach"}, {"score": 0.00247215300812495, "phrase": "virtualized_blade_server_system"}, {"score": 0.0024481856932959227, "phrase": "rubis_benchmark_applications"}, {"score": 0.002424450174817922, "phrase": "experimental_results"}, {"score": 0.0023776656246300063, "phrase": "new_approach"}, {"score": 0.0023546121947302877, "phrase": "differentiation_targets"}, {"score": 0.0023091721866305426, "phrase": "performance_improvement"}, {"score": 0.002199363362666037, "phrase": "dynamic_and_bursty_workloads"}, {"score": 0.0021674482571326283, "phrase": "agile_and_scalable_manner"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Scalable Internet services", " Performance differentiation", " Virtualized servers", " Reinforcement learning", " Cascade neural networks"], "paper_abstract": "Multiple Internet applications are often hosted in one datacenter, sharing underlying virtualized server resources. It is important to provide differentiated treatment to co-hosted applications and to improve overall system performance by efficient use of shared resources. Challenges arise due to multi-tier service architecture, virtualized server infrastructure, and highly dynamic and bursty workloads. We propose a coordinated admission control and adaptive resource provisioning approach for multi-tier service differentiation and performance improvement in a shared virtualized platform. We develop new model-independent reinforcement learning based techniques for virtual machine (VM) auto-configuration and session based admission control. Adaptive VM auto-configuration provides proportional service differentiation between co-located applications and improves application response time simultaneously. Admission control improves session throughput of the applications and minimizes resource wastage due to aborted sessions. A shared reward actualizes coordination between the two learning modules. For system agility and scalability, we integrate the reinforcement learning approach with cascade neural networks. We have implemented the integrated approach in a virtualized blade server system hosting RUBiS benchmark applications. Experimental results demonstrate that the new approach meets differentiation targets accurately and achieves performance improvement of applications at the same time. It reacts to dynamic and bursty workloads in an agile and scalable manner. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Multi-tier service differentiation by coordinated learning-based resource provisioning and admission control", "paper_id": "WOS:000334395700003"}