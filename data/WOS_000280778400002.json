{"auto_keywords": [{"score": 0.04927872927155836, "phrase": "abductive_event_calculus"}, {"score": 0.014461444217164127, "phrase": "web_service_composition"}, {"score": 0.00481495049065317, "phrase": "web_services"}, {"score": 0.004376131419366239, "phrase": "execution_problem"}, {"score": 0.004278807087784626, "phrase": "different_approaches"}, {"score": 0.004090577229368418, "phrase": "different_application_scenarios"}, {"score": 0.00357395617690842, "phrase": "interleaved_approach"}, {"score": 0.003378385493203297, "phrase": "owl-s_web_service_descriptions"}, {"score": 0.003104849179057156, "phrase": "domain_ontology"}, {"score": 0.002951444412262927, "phrase": "web_service_compositions"}, {"score": 0.002918394200972564, "phrase": "return_values"}, {"score": 0.002805597755796506, "phrase": "necessary_web_services"}, {"score": 0.0027123819773059127, "phrase": "template-based_approach"}, {"score": 0.002607527117561699, "phrase": "generic_web_service_compositions"}, {"score": 0.0023694065215394593, "phrase": "event_calculus"}, {"score": 0.0023296961971785357, "phrase": "abductive_theorem_prover"}, {"score": 0.0022396019251440724, "phrase": "actual_web_service_compositions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Web services", " Automated web service composition", " Planning", " Abductive event calculus"], "paper_abstract": "This paper proposes the application of the abductive event calculus to the web service composition and execution problem. There are different approaches to web service composition, which are suitable for different application scenarios. In this paper, we are concerned with the formalization of both the interleaved and template-based approaches using the event calculus framework. First, in the interleaved approach, it is shown that given a set of OWL-S web service descriptions in a service repository and a set of user specified inputs and outputs from domain ontology, the abductive event calculus can be used to generate web service compositions and return values for the outputs by executing the necessary web services. Next, in the template-based approach, it is shown that if generic web service compositions are given as templates using OWL-S, they can be translated into the axioms of the event calculus and the abductive theorem prover can be used to generate the actual web service compositions which can be executed afterwards. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Automated composition of web services with the abductive event calculus", "paper_id": "WOS:000280778400002"}