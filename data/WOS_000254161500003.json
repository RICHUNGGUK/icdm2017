{"auto_keywords": [{"score": 0.03662858525081541, "phrase": "program_design-related_tasks"}, {"score": 0.010135997330685802, "phrase": "programming_instructions"}, {"score": 0.00481495049065317, "phrase": "program_design_tasks"}, {"score": 0.0047527118741586055, "phrase": "pair_programming"}, {"score": 0.004227398267369744, "phrase": "algorithm_design"}, {"score": 0.003735522846193052, "phrase": "pair_programming_experiments"}, {"score": 0.0033222630615013737, "phrase": "programmer_skills"}, {"score": 0.003257960296952439, "phrase": "particular_language"}, {"score": 0.003194898129853895, "phrase": "integrated_development_environment"}, {"score": 0.002679386232765167, "phrase": "programming_performance"}, {"score": 0.0023982749733789882, "phrase": "specific_computer_language"}, {"score": 0.0022912596877648723, "phrase": "full-time_professional_programmers"}, {"score": 0.002189009136006588, "phrase": "increasingly_complex_programming_aptitude_tasks"}, {"score": 0.0021049977753042253, "phrase": "algorithmic_design"}], "paper_keywords": ["pair programming", " software design", " programming aptitude test", " programming experiment", " group dynamics"], "paper_abstract": "Pair programming involves two developers simultaneously collaborating with each other on the same programming task to design and code a solution. Algorithm design and its implementation are normally interwoven in that implementation often provides feedback to enhance the design. Previous controlled pair programming experiments did not explore the efficacy of pairs versus individuals in program design-related tasks separately from coding. Variations in programmer skills in a particular language or an integrated development environment and the understanding of programming instructions can mask the skill of subjects in program design-related tasks. Programming aptitude tests ( PATs) have been shown to correlate with programming performance. PATs do not require understanding of programming instructions and do not require a skill in any specific computer language. Two controlled experiments were conducted, with full-time professional programmers being the subjects who worked on increasingly complex programming aptitude tasks related to problem solving and algorithmic design. In both experiments, pairs significantly outperformed individuals, providing evidence of the value of pairs in program design-related tasks.", "paper_title": "The effect of pairs in program design tasks", "paper_id": "WOS:000254161500003"}