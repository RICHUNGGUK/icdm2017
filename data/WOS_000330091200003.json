{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_dovetailing"}, {"score": 0.004293840838533456, "phrase": "shared-memory_environments"}, {"score": 0.0041725881174377345, "phrase": "distributed-memory_environments"}, {"score": 0.004021689117050817, "phrase": "simple_yet_empirically_effective_parallel_df-pn_methods"}, {"score": 0.0036304470230058413, "phrase": "almost_no_communication"}, {"score": 0.003556873173040169, "phrase": "df-pn_search"}, {"score": 0.0034990853199511982, "phrase": "different_part"}, {"score": 0.003456359260921982, "phrase": "search_space"}, {"score": 0.003414153126809511, "phrase": "processing_node"}, {"score": 0.003263744807888499, "phrase": "enhanced_df-pn_variant"}, {"score": 0.0030944828434567966, "phrase": "non-deterministic_behaviors"}, {"score": 0.003056682083784002, "phrase": "shared-memory_parallel_df-pn_search_algorithm"}, {"score": 0.002921975748248106, "phrase": "randomly_initializing_proof"}, {"score": 0.002898127432512101, "phrase": "disproof_numbers"}, {"score": 0.002839352319679885, "phrase": "experimental_results"}, {"score": 0.0026920404458807444, "phrase": "reasonable_speedups"}, {"score": 0.0026374528387214245, "phrase": "japanese"}, {"score": 0.0024298350266697905, "phrase": "completely_different_characteristics"}, {"score": 0.0023610946923597405, "phrase": "superlinear_speedups"}, {"score": 0.0023322317017275803, "phrase": "reasonably_small_number"}, {"score": 0.0023131855385489764, "phrase": "base_solvers"}, {"score": 0.002266246304762945, "phrase": "additional_instances"}, {"score": 0.0022385401780982204, "phrase": "original_solver"}, {"score": 0.0021049977753042253, "phrase": "high-performance_tsume-shogi_solver"}], "paper_keywords": [""], "paper_abstract": "Depth-first proof-number (df-pn) search is an effective sequential AND/OR tree search algorithm using the notion of proof and disproof numbers. Although df-pn has been parallelized in shared-memory environments thus far, parallelizing df-pn in distributed-memory environments still remains a challenge. This paper presents simple yet empirically effective parallel df-pn methods for distributed computing environments. Our methods are based on parallel dovetailing that has been successfully applied to a number of algorithms and they incur almost no communication overhead by independently performing df-pn search that exploits a different part of the search space in each processing node. More specifically, we present two methods of parallelizing an enhanced df-pn variant called df-pn(+) : the first is based on leveraging non-deterministic behaviors of a shared-memory parallel df-pn search algorithm (SPDDFPN+), and the second is based on randomly initializing proof and disproof numbers (RPDDFPN+). Experimental results using state-of-the-art solvers indicated that RPDDFPN+ achieves reasonable speedups in both tsume-shogi (checkmate problems in Japanese chess) and tsume-Go (life-and-death problems in Go), which have completely different characteristics. Moreover, parallel dovetailing occasionally yields superlinear speedups with a reasonably small number of base solvers and can even solve additional instances that the original solver is unable to solve. Our results also revealed that SPDDFPN(+)improves the efficiency of a high-performance tsume-shogi solver.", "paper_title": "PARALLEL DOVETAILING AND ITS APPLICATION TO DEPTH-FIRST PROOF-NUMBER SEARCH", "paper_id": "WOS:000330091200003"}