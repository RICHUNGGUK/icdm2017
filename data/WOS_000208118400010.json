{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "jpeg"}, {"score": 0.029748212854406823, "phrase": "jpeg_coder"}, {"score": 0.004653339900995785, "phrase": "smart_camera"}, {"score": 0.004558977045730675, "phrase": "compression_standard"}, {"score": 0.004346139434813299, "phrase": "still_images"}, {"score": 0.004143196873246147, "phrase": "machine_vision_algorithms"}, {"score": 0.004031495920060339, "phrase": "raw_images"}, {"score": 0.0036386875640595944, "phrase": "archive_images"}, {"score": 0.003516417950483685, "phrase": "automated_visual_inspection"}, {"score": 0.0034215569542785907, "phrase": "highspeed_image_sequences"}, {"score": 0.003375087185182269, "phrase": "memory_space"}, {"score": 0.003239418275717787, "phrase": "embedded_systems"}, {"score": 0.003195414285736136, "phrase": "software_implementation"}, {"score": 0.003152006152091526, "phrase": "compression_algorithms"}, {"score": 0.003025277245730244, "phrase": "real-time_requirements"}, {"score": 0.0028641729745364952, "phrase": "fast_implementation"}, {"score": 0.002748984715897838, "phrase": "field_programmable_gate_array"}, {"score": 0.0025848074189353397, "phrase": "architecture-specific_function_blocks"}, {"score": 0.002532284627202572, "phrase": "low-cost_fpga"}, {"score": 0.0024305463151248516, "phrase": "ram"}, {"score": 0.0023167153974120083, "phrase": "hardly_any_limitation"}, {"score": 0.0021634370496463793, "phrase": "building_blocks"}, {"score": 0.0021340178074057245, "phrase": "manufacturer-independent_elements"}, {"score": 0.0021049977753042253, "phrase": "up-to-date_fpga_architectures"}], "paper_keywords": ["JPEG", " FPGA", " 2D-DCT", " Variable length encoder", " Huffman code"], "paper_abstract": "The compression standard of the Joint Photographic Experts Group (JPEG) for still images is used in many imaging applications. Although machine vision algorithms are based on raw images, massive data reduction of images in many applications is required additionally, e.g. to archive images in the context of automated visual inspection or to store highspeed image sequences when memory space is limited. Especially in embedded systems the software implementation of compression algorithms is too slow to meet real-time requirements. In this paper we present a fast implementation of a JPEG coder in a field programmable gate array (FPGA). This JPEG coder uses the architecture-specific function blocks of a low-cost FPGA (dedicated multipliers, block RAM). Nevertheless, there is hardly any limitation to the generality of the approach, as these building blocks are manufacturer-independent elements of up-to-date FPGA architectures.", "paper_title": "High-speed JPEG coder implementation for a smart camera", "paper_id": "WOS:000208118400010"}