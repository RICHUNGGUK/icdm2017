{"auto_keywords": [{"score": 0.03013731577351118, "phrase": "software_process"}, {"score": 0.0048151907479142796, "phrase": "flash"}, {"score": 0.004639822587124109, "phrase": "high-performance_computing"}, {"score": 0.004588531238691602, "phrase": "flash_code"}, {"score": 0.00450429688285697, "phrase": "modular_and_extensible_scientific_simulation_software_system"}, {"score": 0.00403026082093352, "phrase": "basic_physics"}, {"score": 0.0037145284903339327, "phrase": "high-energy_density_physics"}, {"score": 0.003500499265190562, "phrase": "fluid-structure_interactions"}, {"score": 0.0033730181385496186, "phrase": "already_existing_software_packages"}, {"score": 0.0030970990565391183, "phrase": "incremental_and_deep_infrastructural_changes"}, {"score": 0.0029185415814209055, "phrase": "significant_architectural_advancement"}, {"score": 0.002770745509774383, "phrase": "code_verification"}, {"score": 0.002689666606553487, "phrase": "expanding_user_base"}, {"score": 0.0025157865918985704, "phrase": "multiple_research_projects"}, {"score": 0.002388337333984138, "phrase": "code_evolution"}, {"score": 0.002344398099179438, "phrase": "design_decisions"}, {"score": 0.0023270490574896804, "phrase": "software_management_policies"}, {"score": 0.0021604504765314497, "phrase": "symbiotic_relationship"}, {"score": 0.0021444597601392146, "phrase": "scientific_research"}, {"score": 0.002128587147609539, "phrase": "good_software_engineering"}, {"score": 0.0021049977753042253, "phrase": "simulation_software"}], "paper_keywords": ["FLASH", " scientific application code", " multi-physics", " multi-scale", " community code", " software evolution"], "paper_abstract": "The FLASH code has evolved into a modular and extensible scientific simulation software system over the decade of its existence. During this time it has been cumulatively used by over a thousand researchers to investigate problems in astrophysics, cosmology, and in some areas of basic physics, such as turbulence. Recently, many new capabilities have been added to the code to enable it to simulate problems in high-energy density physics. Enhancements to these capabilities continue, along with enhancements enabling simulations of problems in fluid-structure interactions. The code started its life as an amalgamation of already existing software packages and sections of codes developed independently by various participating members of the team for other purposes. The code has evolved through a mixture of incremental and deep infrastructural changes. In the process, it has undergone four major revisions, three of which involved a significant architectural advancement. Along the way, a software process evolved that addresses the issues of code verification, maintainability, and support for the expanding user base. The software process also resolves the conflicts arising out of being in development and production simultaneously with multiple research projects, and between performance and portability. This paper describes the process of code evolution with emphasis on the design decisions and software management policies that have been instrumental in the success of the code. The paper also makes the case for a symbiotic relationship between scientific research and good software engineering of the simulation software.", "paper_title": "Evolution of FLASH, a multi-physics scientific simulation code for high-performance computing", "paper_id": "WOS:000336222700006"}