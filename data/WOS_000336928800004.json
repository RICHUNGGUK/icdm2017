{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "evolutionary_processors"}, {"score": 0.0047588556219929756, "phrase": "subregular_filters"}, {"score": 0.004621447740470602, "phrase": "new_variant"}, {"score": 0.004567596860086148, "phrase": "accepting_networks_of_evolutionary_processors"}, {"score": 0.004332894955218135, "phrase": "arbitrary_positions"}, {"score": 0.004257360656055417, "phrase": "processed_words"}, {"score": 0.0037862398004482253, "phrase": "regular_sets"}, {"score": 0.0030833537429977797, "phrase": "arbitrary_regular_languages"}, {"score": 0.00304737045343781, "phrase": "yields_networks"}, {"score": 0.002725740264152553, "phrase": "nilpotent_languages"}, {"score": 0.002693919110230191, "phrase": "commutative_regular_languages"}, {"score": 0.002646880721119838, "phrase": "circular_regular_languages"}, {"score": 0.002540285736232122, "phrase": "recursively_enumerable_languages"}, {"score": 0.0023953929817357882, "phrase": "upper_and_lower_bounds"}, {"score": 0.002206290313627494, "phrase": "accepting_network"}, {"score": 0.0021049977753042253, "phrase": "complete_computational_model"}], "paper_keywords": ["Evolutionary processors", " Network of evolutionary processors", " Subregular control", " Computational power"], "paper_abstract": "We propose a new variant of Accepting Networks of Evolutionary Processors, in which the operations are applied at arbitrary positions to the processed words (rather than at the ends of words only) and where the filters are languages from several special classes of regular sets. More precisely, we show that the use of filters from the class of non-counting, ordered, power-separating, suffix-closed regular, union-free, definite and combinational languages is as powerful as the use of arbitrary regular languages and yields networks that can accept all the recursively enumerable languages. On the other hand, by using filters that are only finite languages, monoids, nilpotent languages, commutative regular languages, or circular regular languages, one cannot generate all recursively enumerable languages. These results seem interesting as they provide both upper and lower bounds on the classes of languages that one can use as filters in an accepting network of evolutionary processors in order to obtain a complete computational model.", "paper_title": "Accepting Networks of Evolutionary Processors with Subregular Filters", "paper_id": "WOS:000336928800004"}