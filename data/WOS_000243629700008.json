{"auto_keywords": [{"score": 0.04233053722268817, "phrase": "identical_candidate_architecture"}, {"score": 0.00481495049065317, "phrase": "multimedia_distribution_architecture"}, {"score": 0.004667149874736771, "phrase": "anycast-based_multimedia_distribution_architectures"}, {"score": 0.004630910803911567, "phrase": "application-level_context-aware_capability"}, {"score": 0.004135859558144883, "phrase": "different_application_purposes"}, {"score": 0.003977672712305348, "phrase": "multiple_servers"}, {"score": 0.003781005930058317, "phrase": "real-time_streaming_applications"}, {"score": 0.003693533648584145, "phrase": "heterogeneous_candidate_architecture"}, {"score": 0.0036363418376496484, "phrase": "different_servers"}, {"score": 0.003580032420161922, "phrase": "different_contents"}, {"score": 0.0035383712891119937, "phrase": "better_service_diversity"}, {"score": 0.0034162643819889054, "phrase": "non-sequential_content_service"}, {"score": 0.0033372020049592726, "phrase": "semi-heterogeneous_candidate_architecture"}, {"score": 0.0032727116186194584, "phrase": "multiple_proxy_servers"}, {"score": 0.0032094634756436595, "phrase": "main_server"}, {"score": 0.0031721009574803127, "phrase": "completed_contents"}, {"score": 0.0031474338010045386, "phrase": "proxy_servers"}, {"score": 0.0030865992688177005, "phrase": "information_sessions"}, {"score": 0.0030387767523076528, "phrase": "best_system_performance"}, {"score": 0.002968424524565369, "phrase": "high_network_traffic_loads"}, {"score": 0.0029224275921964724, "phrase": "quick_and_smooth_multimedia_distribution"}, {"score": 0.002888396879326153, "phrase": "server_selection_criteria"}, {"score": 0.0027240799841720957, "phrase": "requested_content"}, {"score": 0.002619748321217153, "phrase": "proposed_architectures"}, {"score": 0.0024134449026937586, "phrase": "system_performance"}, {"score": 0.0022760856906838814, "phrase": "non-anycast_architecture"}, {"score": 0.002206045784326466, "phrase": "semi-heterogeneous_architecture"}, {"score": 0.002154930852763048, "phrase": "changing_conditions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["multimedia distribution", " context-aware", " anycast", " proxy"], "paper_abstract": "This study proposes the anycast-based multimedia distribution architectures with application-level context-aware capability to specify the most suitable server for various application domains. The following three architectures, namely the identical, heterogeneous, and semi-heterogeneous candidate architectures, are specified for different application purposes. (i) The identical candidate architecture, in which multiple servers provide clients with the same contents, is highly reliable and suitable for real-time streaming applications. (ii) The heterogeneous candidate architecture, in which different servers provide clients with different contents, provides better service diversity than the identical candidate architecture, and is suitable for non-sequential content service. (iii) The semi-heterogeneous candidate architecture, comprising one main server and multiple proxy servers, in which the main server stores the completed contents and proxy servers store some portions of information sessions, has the best system performance, and works well under high network traffic loads. To obtain quick and smooth multimedia distribution, the server selection criteria should consider not only the nearest server, but also the network traffic loads and the popularity of requested content, i.e., context-aware considerations. The proposed architectures based on the characteristics of IPv6 anycast and context-aware operations attempt to find the most suitable server/proxy. Finally, the system performance of each of the three proposed architectures is analyzed and evaluated, and compared with the non-anycast architecture. Simulation results also indicate that the semi-heterogeneous architecture is adaptive in face of changing conditions. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Efficient multimedia distribution architecture using anycast", "paper_id": "WOS:000243629700008"}