{"auto_keywords": [{"score": 0.023169569365395007, "phrase": "treewidth"}, {"score": 0.00481495049065317, "phrase": "graphs_g"}, {"score": 0.004608539830653038, "phrase": "probe_graph"}, {"score": 0.003940706575253453, "phrase": "independent_set"}, {"score": 0.0028091907694771613, "phrase": "recognition_algorithm"}, {"score": 0.0027741761880779535, "phrase": "partitioned_probe_permutation_graphs"}, {"score": 0.0025409639091476363, "phrase": "input_graph"}, {"score": 0.0023127544795063263, "phrase": "probe_permutation_graph"}, {"score": 0.0021995257343837547, "phrase": "polynomial-time_algorithms"}, {"score": 0.0021450029487459403, "phrase": "minimum_fill-in"}, {"score": 0.0021049977753042253, "phrase": "probe_permutation_graphs"}], "paper_keywords": [""], "paper_abstract": "Given a class of graphs G, a graph G is a probe graph of G if its vertices can be partitioned into two sets P, the probes, and N, the nonprobes, where N is an independent set, such that G can be embedded into a graph of G by adding edges between certain vertices of N. If the partition of the vertices into probes and nonprobes is part of the input, then we call the graph a partitioned probe graph of G. In this paper, we provide a recognition algorithm for partitioned probe permutation graphs with time complexity O(n(2)) where n is the number of vertices in the input graph. We show that there are at most O(n(4)) minimal separators for a probe permutation graph. As a consequence, there exist polynomial-time algorithms solving TREEWIDTH and MINIMUM FILL-IN problems for probe permutation graphs.", "paper_title": "On probe permutation graphs", "paper_id": "WOS:000238091800047"}