{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "maximum_consecutive_subsums"}, {"score": 0.04223218903917887, "phrase": "parikh_vectors"}, {"score": 0.03837388681621588, "phrase": "binary_string"}, {"score": 0.0046176782475198085, "phrase": "novel_approach"}, {"score": 0.004405348628112645, "phrase": "positive_integers"}, {"score": 0.004359500411441827, "phrase": "near-linear_time"}, {"score": 0.004202741104973709, "phrase": "binary_sequences"}, {"score": 0.00396767023935381, "phrase": "bit_string"}, {"score": 0.003610929883213109, "phrase": "subquadratic_time"}, {"score": 0.003303412571939192, "phrase": "polylogarithmic_factor"}, {"score": 0.003022023336096348, "phrase": "parikh"}, {"score": 0.00256895975568914, "phrase": "small_chance"}, {"score": 0.002542174767860791, "phrase": "false_positives"}, {"score": 0.0025025186963415, "phrase": "false_negatives"}, {"score": 0.002172266188075892, "phrase": "strong_subquadratic_running_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parikh vectors", " Permutation pattern matching", " Approximate pattern matching", " Maximum subsequence sum"], "paper_abstract": "We present a novel approach for computing all maximum consecutive subsums in a sequence of positive integers in near-linear time. Solutions for this problem over binary sequences can be used for reporting existence of Parikh vectors in a bit string. Recently, several attempts have been made to build indexes for all Parikh vectors of a binary string in subquadratic time. However, no algorithm is known to date which can beat by more than a polylogarithmic factor the naive Theta(n(2)) procedure. We show how to construct a (1 + epsilon)-approximate index for all Parikh vectors of a binary string in O(nlog(2) n/log(1+epsilon)) time, for any constant epsilon > 0. Such index is approximate, in the sense that it leaves a small chance for false positives (no false negatives are possible). However, we can tune the parameters of the algorithm so that we can strictly control such a chance of error while still guaranteeing strong subquadratic running time. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Approximating the maximum consecutive subsums of a sequence", "paper_id": "WOS:000334007300014"}