{"auto_keywords": [{"score": 0.04214093292555752, "phrase": "small_graph_h"}, {"score": 0.032412511461532886, "phrase": "secure_path"}, {"score": 0.00481495049065317, "phrase": "threshold_functions"}, {"score": 0.004791260660826503, "phrase": "embedding_secure_paths"}, {"score": 0.004767686827919968, "phrase": "random_key_pre-distribution_based_wireless_sensor_networks"}, {"score": 0.004674540255612302, "phrase": "based_schemes"}, {"score": 0.004482574869071422, "phrase": "specific_properties"}, {"score": 0.004438559261607655, "phrase": "disjoint_secure_paths"}, {"score": 0.004416713079266374, "phrase": "disjoint_secure_cliques"}, {"score": 0.004362564831572539, "phrase": "secure_cooperation"}, {"score": 0.004298458717415423, "phrase": "large-scale_sensor_networks"}, {"score": 0.004142267494053487, "phrase": "szemeredi's_regularity_lemma"}, {"score": 0.00399172897051766, "phrase": "underlying_graph"}, {"score": 0.00386567760049143, "phrase": "perfect_h-packing"}, {"score": 0.003808845109556467, "phrase": "disjoint_copies"}, {"score": 0.003697665207435757, "phrase": "disjoint_edges"}, {"score": 0.003643293770051351, "phrase": "combinatorial_problem"}, {"score": 0.003607489425637024, "phrase": "classical_wireless_network_models"}, {"score": 0.0035808664384880213, "phrase": "percolation_theories"}, {"score": 0.003563226632528754, "phrase": "random_geometric_graphs"}, {"score": 0.0035021664178919005, "phrase": "geometric_setting_models"}, {"score": 0.0034763179943851025, "phrase": "stochastic_geometric_and_combinatorial_techniques"}, {"score": 0.003341636956320925, "phrase": "approximate_quasi-random_graph"}, {"score": 0.0031649018957020337, "phrase": "threshold_probability_function"}, {"score": 0.0030197848438434636, "phrase": "security_parameter_p"}, {"score": 0.002668822707001489, "phrase": "epsilon-regular_partition"}, {"score": 0.0026491085885532706, "phrase": "sensor_network"}, {"score": 0.002623048843129408, "phrase": "szemeredi_regularity"}, {"score": 0.0024537096793313313, "phrase": "almost_pair"}, {"score": 0.002376110230483223, "phrase": "remaining_irregular_pairs"}, {"score": 0.0023585532136682938, "phrase": "appropriate_control"}, {"score": 0.002341125620761162, "phrase": "irregular_nodes"}, {"score": 0.002318088516037056, "phrase": "main_difference"}, {"score": 0.002289609924110386, "phrase": "random_graph"}, {"score": 0.002228179779872114, "phrase": "epsilon-regular_graphs"}, {"score": 0.0021630391966415592, "phrase": "almost_all_security"}, {"score": 0.0021364613650251786, "phrase": "secure_paths"}, {"score": 0.002125921702170045, "phrase": "length_l"}], "paper_keywords": ["Sensor networks", " Security", " Random key pre-distribution", " Threshold", " Szemeredi's regularity lemma"], "paper_abstract": "Many random key pre-distribution based schemes have been developed to enhance security Most of these schemes need to guarantee the existence of specific properties, such as disjoint secure paths or disjoint secure cliques, to achieve a secure cooperation among nodes Which conditions ensure that large-scale sensor networks have a certain structure? The most well-known solutions of this kind of problems are probably Szemeredi's regularity lemma for embedding and perfect matching The Szemeredi's Embedding lemma allows one to embed a small graph H into an underlying graph, when a network is sufficiently large Perfect matching is generalized by perfect H-packing, which covers G by disjoint copies of a small graph H instead of covering all vertices of G with disjoint edges However, analyzing such a structure or combinatorial problem is complicated in classical wireless network models such as percolation theories or random geometric graphs Particularly, proof of results in geometric setting models often blend stochastic geometric and combinatorial techniques and is more technically challenging To overcome this problem, our objective is to use an approximate quasi-random graph in order to eliminate some properties that are difficult to handle In this work, we analyzes the question of the threshold probability function for the property that \"every pair of vertices lies in a secure path\" with respect to a security parameter p In other words, the goal is to obtain a threshold function p(0)(n), such that if given p << p(0)(n) then the probability that a security subgraph has above property is close to 1 and if p is slightly small then P-0, then this probability is close to 0 To be more precise, we first obtain a epsilon-regular partition of the sensor network by using the Szemeredi regularity lemma Then, cover each pair of nodes that is regular by a secure path P-l of length l Finally, a threshold can be obtained for almost pair of nodes (regularity nodes), and then one can match remaining irregular pairs using an appropriate control for those irregular nodes Nevertheless, the main difference is that in a random graph the dependence/disjointness of certain events comes naturally, whereas in an epsilon-regular graphs, one needs to work on it We show that in almost all security graphs the number of secure paths of length l is close to its expectation provided e is sufficiently small, p >> n((l 1)/l+o(1)) and n is sufficiently large", "paper_title": "Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks", "paper_id": "WOS:000284971800003"}