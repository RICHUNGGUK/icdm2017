{"auto_keywords": [{"score": 0.03313215736544741, "phrase": "hardware_implementation"}, {"score": 0.00481495049065317, "phrase": "service_support"}, {"score": 0.004750873844061641, "phrase": "high-speed_internet"}, {"score": 0.004687645903373103, "phrase": "increasing_amount"}, {"score": 0.004645959941491617, "phrase": "real-time_traffic"}, {"score": 0.004173603566828364, "phrase": "available_bandwidth_resources"}, {"score": 0.004136469845987887, "phrase": "packet_flows"}, {"score": 0.0039380388343479384, "phrase": "low_end-to-end_delay"}, {"score": 0.0037490909410974166, "phrase": "higher_implementation_complexity"}, {"score": 0.0035532533960012298, "phrase": "system_state"}, {"score": 0.0032638170723261538, "phrase": "outgoing_interface"}, {"score": 0.0032347516831068715, "phrase": "qos_scheduling"}, {"score": 0.0031916366459252992, "phrase": "data_plane_functionality"}, {"score": 0.0031071175640144943, "phrase": "high_speed_router_interfaces"}, {"score": 0.0030656984915295275, "phrase": "previous_works"}, {"score": 0.0030113280682863234, "phrase": "pfq_schedulers"}, {"score": 0.0028284924551705516, "phrase": "real_hardware_platforms"}, {"score": 0.002716844480081738, "phrase": "general_hardware_design_framework"}, {"score": 0.0026926381094492607, "phrase": "pfq"}, {"score": 0.0024842242921857705, "phrase": "entire_implementation"}, {"score": 0.0024184686529068037, "phrase": "fpga"}, {"score": 0.0022311596751824416, "phrase": "second_pfq_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Quality of service", " Packet fair queuing", " FPGA"], "paper_abstract": "The increasing amount of real-time traffic carried over the Internet requires end-to-end quality of service (QoS) support. To this end, the QoS Schedulers, that are implemented in routers, assign the available bandwidth resources to packet flows according to their respective allocated rates. Packet Fair Queuing (PFQ) schedulers can provide fair service and low end-to-end delay bound to the traffic flows. However, they have higher implementation complexity compared to other algorithms, because of the requirements of tracking the system state, and searching for the packet to get service among all flows, that are queued at the outgoing interface. QoS scheduling is a data plane functionality, which requires hardware implementation for high speed router interfaces. The previous works on hardware implementation of PFQ schedulers are specific to certain algorithms, and they do not provide any results on real hardware platforms. In this paper, we present a general hardware design framework for PFQ schedulers, and apply this framework to the WF(2)Q+ PFQ algorithm to demonstrate its properties. We carry out the entire implementation of the WF(2)Q+ algorithm on an FPGA, and evaluate its performance with real traffic flows. In addition, we implement WFQ as a second PFQ algorithm to demonstrate the generality of the framework. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Hardware design and implementation of packet fair queuing algorithms for the quality of service support in the high-speed internet", "paper_id": "WOS:000307924300006"}