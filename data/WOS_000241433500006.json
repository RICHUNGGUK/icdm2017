{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "nested_views"}, {"score": 0.02770259659025327, "phrase": "relational_data"}, {"score": 0.0046432244185370605, "phrase": "current_systems"}, {"score": 0.0038368442918503072, "phrase": "user-initiated_queries"}, {"score": 0.0034403745992576808, "phrase": "active_system"}, {"score": 0.0028682668647074397, "phrase": "scalable_and_efficient_techniques"}, {"score": 0.00266693888510356, "phrase": "existing_support"}, {"score": 0.002618863442480951, "phrase": "sql"}, {"score": 0.002548331088496964, "phrase": "flat_relations"}, {"score": 0.002502374576203785, "phrase": "commercial_relational_databases"}, {"score": 0.0022640009579466924, "phrase": "quark_xml_middleware_system"}, {"score": 0.0021049977753042253, "phrase": "feasible_approach"}], "paper_keywords": ["algorithms", " experimentation", " XML", " triggers", " nested views", " relational databases"], "paper_abstract": "Current systems that publish relational data as nested (XML) views are passive in the sense that they can only respond to user-initiated queries over the nested views. In this article, we propose an active system whereby users can place triggers on (unmaterialized) nested views of relational data. In this architecture, we present scalable and efficient techniques for processing triggers over nested views by leveraging existing support for SQL triggers over flat relations in commercial relational databases. We have implemented our proposed techniques in the context of the Quark XML middleware system. Our performance results indicate that our proposed techniques are a feasible approach to supporting triggers over nested views of relational data.", "paper_title": "Triggers over nested views of relational data", "paper_id": "WOS:000241433500006"}