{"auto_keywords": [{"score": 0.03631679019417626, "phrase": "key_pool_scheme"}, {"score": 0.0360445530776084, "phrase": "key_chain_scheme"}, {"score": 0.014444801610990618, "phrase": "sensor_node"}, {"score": 0.014078978650200552, "phrase": "bogus_message"}, {"score": 0.00481495049065317, "phrase": "wireless_sensor_networks"}, {"score": 0.004728446189704709, "phrase": "wireless_sensor_network"}, {"score": 0.0046797114400479135, "phrase": "broadcast_authentication"}, {"score": 0.004560050780357455, "phrase": "higher_tolerance"}, {"score": 0.004524750101015184, "phrase": "capture_attack"}, {"score": 0.00448972146195929, "phrase": "symmetric_key-based_approaches"}, {"score": 0.0044549627857558925, "phrase": "pkc's_security_strength"}, {"score": 0.004274058118188789, "phrase": "first_hop"}, {"score": 0.004219039749566144, "phrase": "forged_traffic"}, {"score": 0.004175533280178052, "phrase": "sensor_nodes'_energy"}, {"score": 0.004143196873246147, "phrase": "pkc_operations"}, {"score": 0.004111109853964732, "phrase": "limited_computing-power_sensor_nodes"}, {"score": 0.004068711803266216, "phrase": "undesirably_long_message_propagation_time"}, {"score": 0.0038531644281313056, "phrase": "propagation_time"}, {"score": 0.0037936958151903485, "phrase": "forged_messages"}, {"score": 0.003706202988938344, "phrase": "swift_and_energy_efficient_broadcast_operation"}, {"score": 0.0033323878473928317, "phrase": "periodic_key_redistribution"}, {"score": 0.0032809302753757257, "phrase": "bloom_filter"}, {"score": 0.003238654492764602, "phrase": "secret_keys"}, {"score": 0.0032218966066768022, "phrase": "sensor_nodes"}, {"score": 0.003051073364818384, "phrase": "broadcast_delays"}, {"score": 0.002965229277927781, "phrase": "forwarding-first_scheme"}, {"score": 0.002942238084470189, "phrase": "key_pool"}, {"score": 0.0028006988338192375, "phrase": "authentication-first_scheme"}, {"score": 0.002743153988733465, "phrase": "forged_message_propagation"}, {"score": 0.0025976472770944804, "phrase": "smaller_transmission_overhead"}, {"score": 0.0025310898078179057, "phrase": "node_capturing"}, {"score": 0.002447101794397243, "phrase": "marking_limit"}, {"score": 0.0024281181691350085, "phrase": "bloom_filter_vector"}, {"score": 0.0022637425880437803, "phrase": "spanning_tree"}, {"score": 0.002211456269031809, "phrase": "bogus_messages"}, {"score": 0.002154772490492128, "phrase": "compromised_nodes"}, {"score": 0.0021380517771409763, "phrase": "first_improvement"}, {"score": 0.0021049977753042253, "phrase": "bfv_scheme"}], "paper_keywords": ["wireless sensor network", " broadcast authentication", " bloom filter", " public key cryptography"], "paper_abstract": "Public Key-based (PKC) approaches have gained popularity in Wireless Sensor Network (WSN) broadcast authentication due to their simpler protocol operations, e.g., no synchronization and higher tolerance to node capture attack compared to symmetric key-based approaches. With PKC's security strength, a sensor node that authenticates messages before forwarding them can detect a bogus message within the first hop. While this prevents forged traffic from wasting the sensor nodes' energy, performing PKC operations in the limited computing-power sensor nodes can result in undesirably long message propagation time. At the other extreme, the sensor node can forward messages to other nodes prior to authenticating them. This approach diminishes propagation time with the trade-off of allowing forged messages to propagate through the network. To achieve swift and energy efficient broadcast operation, sensor nodes need to decide wisely when to forward first and when to authenticate first. In this paper, we present two new broadcast authentication schemes, called the key pool scheme and the key chain scheme, to solve this dilemma without any synchronization or periodic key redistribution. Both schemes utilize a Bloom filter and the distribution of secret keys among sensor nodes to create fast and capture-resistant PKC-based broadcast authentication protocols. Our NS-2 simulation results for a 3,000-node WSN confirm that broadcast delays of our protocol are only 46.7% and 39.4% slower than the forwarding-first scheme for the key pool and the key chain scheme respectively. At the same time, both protocols are an order of magnitude faster than the authentication-first scheme. The key pool scheme is able to keep forged message propagation to the minimal even when the majority of the nodes have been captured by the attacker. The key chain scheme has smaller transmission overhead than the key pool scheme at the expense of less resistance to node capturing. Two generic improvements to these schemes are also described. One reduces the marking limit on the Bloom filter vector (BFV), which makes it more difficult for an attacker to forge a BFV for a bogus message. The other limits broadcast forwarding to a spanning tree, which reduces the number of nodes forwarding bogus messages by one to two orders of magnitude depending on the percentage of compromised nodes. The first improvement can be applied to any BFV scheme, while the second is even more generally applicable.", "paper_title": "Fast Response PKC-Based Broadcast Authentication in Wireless Sensor Networks", "paper_id": "WOS:000306175200008"}