{"auto_keywords": [{"score": 0.028930494932271376, "phrase": "amd"}, {"score": 0.008297210618387481, "phrase": "nvidia"}, {"score": 0.00481495049065317, "phrase": "parallel_reduction"}, {"score": 0.004692227830462433, "phrase": "many-core_architectures"}, {"score": 0.004044645056447888, "phrase": "floating-point_operations"}, {"score": 0.003816197777388722, "phrase": "correctly_rounded_sums"}, {"score": 0.003767203575060969, "phrase": "large_floating-point_vectors"}, {"score": 0.003623949225126944, "phrase": "deterministic_results"}, {"score": 0.0032468685934998335, "phrase": "fast_vectorized_floating-point_expansion"}, {"score": 0.003004494701922268, "phrase": "high-radix_carry-save_representation"}, {"score": 0.0028901595183546576, "phrase": "recent_intel_desktop_and_server_processors"}, {"score": 0.0028530201960995896, "phrase": "intel_xeon_phi"}, {"score": 0.0025892330566358503, "phrase": "numerical_reproducibility"}, {"score": 0.002555950807368337, "phrase": "bit-perfect_accuracy"}, {"score": 0.0024586427394152196, "phrase": "additional_cost"}, {"score": 0.002427035025924384, "phrase": "large_sums"}, {"score": 0.002380381895973937, "phrase": "dynamic_ranges"}, {"score": 0.0022749744354271816, "phrase": "arithmetic_units"}, {"score": 0.0021883400011393564, "phrase": "standard_reduction_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Parallel floating-point summation", " Reproducibility", " Accuracy", " Long accumulator", " Error-free transformations", " Multi- and many-core architectures"], "paper_abstract": "On modern multi-core, many-core, and heterogeneous architectures, floating-point computations, especially reductions, may become non-deterministic and, therefore, non-reproducible mainly due to the non-associativity of floating-point operations. We introduce an approach to compute the correctly rounded sums of large floating-point vectors accurately and efficiently, achieving deterministic results by construction. Our multi-level algorithm consists of two main stages: first, a filtering stage that relies on fast vectorized floating-point expansion; second, an accumulation stage based on superaccumulators in a high-radix carry-save representation. We present implementations on recent Intel desktop and server processors, Intel Xeon Phi co-processors, and both AMD and NVIDIA GPUs. We show that numerical reproducibility and bit-perfect accuracy can be achieved at no additional cost for large sums that have dynamic ranges of up to 90 orders of magnitude by leveraging arithmetic units that are left underused by standard reduction algorithms. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Numerical reproducibility for the parallel reduction on multi- and many-core architectures", "paper_id": "WOS:000364892500006"}