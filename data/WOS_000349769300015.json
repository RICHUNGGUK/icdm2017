{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tcp_incast_problem"}, {"score": 0.006548133617460146, "phrase": "data_blocks"}, {"score": 0.004769182299692333, "phrase": "data_center_networks"}, {"score": 0.00459039896577789, "phrase": "catastrophic_goodput_drop"}, {"score": 0.004439445472040688, "phrase": "goodput_model"}, {"score": 0.004427521811652041, "phrase": "prin"}, {"score": 0.004252602474733162, "phrase": "goodput_collapse"}, {"score": 0.004034841146538891, "phrase": "theoretical_analysis"}, {"score": 0.0038834787946979863, "phrase": "tcp_incast_goodput_deterioration"}, {"score": 0.00305762327908599, "phrase": "proposed_model"}, {"score": 0.00290087451159631, "phrase": "incast_communication_pattern"}, {"score": 0.002873247913129334, "phrase": "block_size"}, {"score": 0.00283229915062791, "phrase": "buffer_size"}, {"score": 0.002739001004969201, "phrase": "simulation_results"}, {"score": 0.002500927169609655, "phrase": "priority-based_solution"}, {"score": 0.002272611604729208, "phrase": "tcp"}, {"score": 0.0021354538918029286, "phrase": "priority_technology"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Data center network", " TCP incast", " modeling", " goodput", " experiment"], "paper_abstract": "TCP Incast problem attracts much attention due to the catastrophic goodput drop. In this paper, a goodput model of the problem is built to understand why goodput collapse occurs and a solution to the problem based on the theoretical analysis is proposed. We found that the TCP Incast goodput deterioration is mainly caused by two types of timeouts, one happens at the tail of data blocks and dominates the goodput when the number of senders is small, while the other one at the head of data blocks and governs the goodput when the number of senders is large. The proposed model describes the relationship between these two types of timeouts and the Incast communication pattern, block size, bottleneck buffer size, and so on. The simulation results indicate that the model well characterizes the features of the TCP Incast problem. Enlightened by the analysis, a PRiority-based solution to the TCP INcast problem (PRIN) is proposed, which avoids timeouts at the head of blocks by reducing TCP send window and prevents timeouts at the tail of blocks by leveraging priority technology. The experimental results show that PRIN solves the TCP Incast problem.", "paper_title": "Modeling and Solving TCP Incast Problem in Data Center Networks", "paper_id": "WOS:000349769300015"}