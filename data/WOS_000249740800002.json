{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "critical_interconnect"}, {"score": 0.004631637679516574, "phrase": "signal_net_routing"}, {"score": 0.0044800522651664695, "phrase": "steiner_trees"}, {"score": 0.004238307626560739, "phrase": "redundant_paths"}, {"score": 0.0039433581938239926, "phrase": "timing_performance"}, {"score": 0.0035684266744407485, "phrase": "critical_net_routings"}, {"score": 0.0035095069239523677, "phrase": "vlsi"}, {"score": 0.003451517638449501, "phrase": "interconnect_delay"}, {"score": 0.0033945024593626675, "phrase": "performance_bottleneck"}, {"score": 0.0033570147767493746, "phrase": "variation_effects"}, {"score": 0.0032290277960438855, "phrase": "steiner_network_construction_heuristics"}, {"score": 0.003088702479841264, "phrase": "different_slack-wirelength_tradeoff"}, {"score": 0.003004103583782076, "phrase": "long_path"}, {"score": 0.002970914475538276, "phrase": "short_path_constraints"}, {"score": 0.002857605453835429, "phrase": "simultaneous_steiner_network_construction"}, {"score": 0.002718231974492536, "phrase": "slack_and_resistance"}, {"score": 0.00262910358108176, "phrase": "incremental_non-tree_delay_update_techniques"}, {"score": 0.0025570607111118793, "phrase": "fast_steiner_network_evaluations"}, {"score": 0.002486987042061596, "phrase": "different_scenarios"}, {"score": 0.0023394947463129642, "phrase": "pico_seconds"}, {"score": 0.00230080652063411, "phrase": "traditional_approaches"}, {"score": 0.002262756631083292, "phrase": "process_variations"}, {"score": 0.002164331818029166, "phrase": "timing_yield"}, {"score": 0.0021285340816566906, "phrase": "nominal_slack_improvement"}, {"score": 0.0021049977753042253, "phrase": "delay_variability_reduction"}], "paper_keywords": ["non-tree", " redundancy", " routing", " Steiner network", " variation"], "paper_abstract": "Conventionally, the topology of signal net routing is almost always restricted to Steiner trees, either unbuffered or buffered. However, introducing redundant paths into the topology (which leads to non-tree) may significantly improve timing performance as well as tolerance to open faults and variations. These advantages are particularly appealing for timing critical net routings in nanoscale VLSI designs where interconnect delay is a performance bottleneck and variation effects are increasingly remarkable. We propose Steiner network construction heuristics which can generate either tree or non-tree with different slack-wirelength tradeoff, and handle both long path and short path constraints. We also propose heuristics for simultaneous Steiner network construction and buffering, which may provide further improvement in slack and resistance to variations. Furthermore, incremental non-tree delay update techniques are developed to facilitate fast Steiner network evaluations. Extensive experiments in different scenarios show that our heuristics usually improve timing slack by hundreds of pico seconds compared to traditional approaches. When process variations are considered, our heuristics can significantly improve timing yield because of nominal slack improvement and delay variability reduction.", "paper_title": "Utilizing redundancy for timing critical interconnect", "paper_id": "WOS:000249740800002"}