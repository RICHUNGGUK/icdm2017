{"auto_keywords": [{"score": 0.046273829908275756, "phrase": "energy_usage"}, {"score": 0.00481495049065317, "phrase": "improving_data_access_efficiency"}, {"score": 0.004736045157669388, "phrase": "context-aware_loads"}, {"score": 0.0046328364646343375, "phrase": "memory_operations"}, {"score": 0.004556901872357751, "phrase": "significant_impact"}, {"score": 0.004241914481080374, "phrase": "level-one_data_cache"}, {"score": 0.004103942174451674, "phrase": "load_instructions"}, {"score": 0.003421245054271364, "phrase": "impact_energy_usage"}, {"score": 0.003328184259386487, "phrase": "significantly_more_energy"}, {"score": 0.00327356326590461, "phrase": "register_file_access"}, {"score": 0.0029641011108505785, "phrase": "general_fashion"}, {"score": 0.00282048824450047, "phrase": "load_or_store_operation"}, {"score": 0.0025820967615278073, "phrase": "store_instructions"}], "paper_keywords": ["Algorithms", " Measurements", " Performance", " Energy", " Data Caches", " Compiler Optimizations"], "paper_abstract": "Memory operations have a significant impact on both performance and energy usage even when an access hits in the level-one data cache (L1 DC). Load instructions in particular affect performance as they frequently result in stalls since the register to be loaded is often referenced before the data is available in the pipeline. L1 DC accesses also impact energy usage as they typically require significantly more energy than a register file access. Despite their impact on performance and energy usage, L1 DC accesses on most processors are performed in a general fashion without regard to the context in which the load or store operation is performed. We describe a set of techniques where the compiler enhances load and store instructions so that they can be executed with fewer stalls and/or enable the L1 DC to be accessed in a more energy-efficient manner. We show that using these techniques can simultaneously achieve a 6% gain in performance and a 43% reduction in L1 DC energy usage.", "paper_title": "Improving Data Access Efficiency by Using Context-Aware Loads and Stores", "paper_id": "WOS:000370875500003"}