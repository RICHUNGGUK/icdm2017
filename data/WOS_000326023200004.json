{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "usa."}, {"score": 0.00481495049065317, "phrase": "checkpoint-on-failure_protocol"}, {"score": 0.004721602309430702, "phrase": "standard_mpi._most_predictions"}, {"score": 0.004348813532606792, "phrase": "extremely_optimistic_advances"}, {"score": 0.0043148760739240575, "phrase": "hardware_reliability"}, {"score": 0.004281202319048493, "phrase": "probabilistic_amplification"}, {"score": 0.0041167185402778425, "phrase": "software_fault_tolerance"}, {"score": 0.004036852178449883, "phrase": "future_scientific_productivity"}, {"score": 0.003974071684351861, "phrase": "ubiquitous_adoption"}, {"score": 0.003943047070755799, "phrase": "fault_tolerance_techniques"}, {"score": 0.0038665369393234713, "phrase": "traditional_checkpoint-based_approaches"}, {"score": 0.003776674472150248, "phrase": "failure_free_operations"}, {"score": 0.0036315039559860654, "phrase": "parallel_applications"}, {"score": 0.0034646205853140558, "phrase": "extremely_limited_support"}, {"score": 0.003397362086358944, "phrase": "fault_tolerance"}, {"score": 0.0031534367609709233, "phrase": "high_quality_implementation"}, {"score": 0.0030800962618484844, "phrase": "current_mpi_standard"}, {"score": 0.0030321497870310077, "phrase": "advanced_forward_recovery_techniques"}, {"score": 0.0029500270981001058, "phrase": "customary_periodic_checkpointing"}, {"score": 0.0026535183547537655, "phrase": "failure_occurrence"}, {"score": 0.002541417196444962, "phrase": "new_mpi_application"}, {"score": 0.0024920359789965783, "phrase": "sane_environment"}, {"score": 0.002424506147893058, "phrase": "failure-damaged_dataset"}, {"score": 0.002312960805824996, "phrase": "large-scale_systems"}, {"score": 0.0022769287097263564, "phrase": "qr_factorization"}, {"score": 0.002129936623155594, "phrase": "public_domain"}], "paper_keywords": ["fault tolerance", " message passing interface", " ABFT", " Checkpoint-on-Failure"], "paper_abstract": "Most predictions of exascale machines picture billion ways parallelism, encompassing not only millions of cores but also tens of thousands of nodes. Even considering extremely optimistic advances in hardware reliability, probabilistic amplification entails that failures will be unavoidable. Consequently, software fault tolerance is paramount to maintain future scientific productivity. Two major problems hinder ubiquitous adoption of fault tolerance techniques: (i) traditional checkpoint-based approaches incur a steep overhead on failure free operations and (ii) the dominant programming paradigm for parallel applications (the message passing interface (MPI) Standard) offers extremely limited support of software-level fault tolerance approaches. In this paper, we present an approach that relies exclusively on the features of a high quality implementation, as defined by the current MPI Standard, to enable advanced forward recovery techniques, without incurring the overhead of customary periodic checkpointing. With our approach, when failure strikes, applications regain control to make a checkpoint before quitting execution. This checkpoint is in reaction to the failure occurrence rather than periodic. This checkpoint is reloaded in a new MPI application, which restores a sane environment for the forward, application-based recovery technique to repair the failure-damaged dataset. The validity and performance of this approach are evaluated on large-scale systems, using the QR factorization as an example. Published 2013. This article is a US Government work and is in the public domain in the USA.", "paper_title": "Extending the scope of the Checkpoint-on-Failure protocol for forward recovery in standard MPI", "paper_id": "WOS:000326023200004"}