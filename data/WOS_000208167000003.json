{"auto_keywords": [{"score": 0.04962656673317322, "phrase": "field-programmable_gate_arrays"}, {"score": 0.00481495049065317, "phrase": "arithmetic_component_generation"}, {"score": 0.004296264970612285, "phrase": "heterogeneous_mixture"}, {"score": 0.004255639740735269, "phrase": "different_component_types"}, {"score": 0.004175533280178052, "phrase": "traditional_homogeneous_configurable_platforms"}, {"score": 0.004058180509184539, "phrase": "density_advantages"}, {"score": 0.00388828234270598, "phrase": "inefficient_programmable_logic"}, {"score": 0.003815064377019477, "phrase": "specialized_logic"}, {"score": 0.0037789720824759503, "phrase": "fixed_interconnect"}, {"score": 0.0035189057079817285, "phrase": "increasing_complexity"}, {"score": 0.0032302647179383915, "phrase": "different_types"}, {"score": 0.003199687131875466, "phrase": "fused_arithmetic_units"}, {"score": 0.0030949200330108156, "phrase": "common_subgraph_extraction_techniques"}, {"score": 0.0029652292779277782, "phrase": "different_subcircuits"}, {"score": 0.0028140548269469934, "phrase": "quantitative_analysis"}, {"score": 0.0025954008219792337, "phrase": "asic_process"}, {"score": 0.002486589906779091, "phrase": "area_benefits"}, {"score": 0.002304263635960015, "phrase": "heterogeneous_fpgas"}, {"score": 0.0022608057001451414, "phrase": "coarse-grain_components"}, {"score": 0.0022181655497912796, "phrase": "specific_needs"}, {"score": 0.0021251363422701446, "phrase": "significant_improvements"}, {"score": 0.0021049977753042253, "phrase": "circuit_speed"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Performance", " FPGA", " common subgraph", " reconfigurable logic"], "paper_abstract": "State-of-the-art configurable logic platforms, such as Field-Programmable Gate Arrays (FPGAs), consist of a heterogeneous mixture of different component types. Compared to traditional homogeneous configurable platforms, heterogeneity provides speed and density advantages. This is due to the replacement of inefficient programmable logic and routing with specialized logic and fixed interconnect in components such as memories, embedded processor units, and fused arithmetic units. Given the increasing complexity of these components, this article introduces a method to automatically propose and explore the benefits of different types of fused arithmetic units. The methods are based on common subgraph extraction techniques, meaning that it is possible to explore different subcircuits that occur frequently across a set of benchmarks. A quantitative analysis is performed of the various fused arithmetic circuits identified by our tool, which are then automatically synthesized to an ASIC process, providing a study of the speed and area benefits of the components. The results of this study provide bounds on the performance of heterogeneous FPGAs: by incorporating coarse-grain components which match the specific needs of a set of benchmarks we show that significant improvements in circuit speed and area can be made.", "paper_title": "An Automated Flow for Arithmetic Component Generation in Field-Programmable Gate Arrays", "paper_id": "WOS:000208167000003"}