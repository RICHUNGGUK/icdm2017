{"auto_keywords": [{"score": 0.0376701596116624, "phrase": "algorithm_design_space"}, {"score": 0.00481495049065317, "phrase": "stochastic_local_search_heuristics"}, {"score": 0.004760394308239882, "phrase": "automatic_algorithm_configuration_tools"}, {"score": 0.004395347855760052, "phrase": "hard_optimization_problems"}, {"score": 0.004247560712327667, "phrase": "algorithmic_building_blocks"}, {"score": 0.003899385109646589, "phrase": "best_heuristic"}, {"score": 0.003683213029483699, "phrase": "evolutionary_algorithm"}, {"score": 0.00332375606483146, "phrase": "novel_representation"}, {"score": 0.0031215289677725693, "phrase": "real-valued_parameters"}, {"score": 0.002982203248352076, "phrase": "automatic_algorithm_configuration"}, {"score": 0.002898291237210567, "phrase": "best_algorithm"}, {"score": 0.0027374647587075935, "phrase": "one-dimensional_bin"}, {"score": 0.0026604207233593973, "phrase": "permutation_flowshop_problem"}, {"score": 0.0026302120935562568, "phrase": "weighted_tardiness_objective"}, {"score": 0.002570817338292482, "phrase": "proposed_approach"}, {"score": 0.0025416235470290286, "phrase": "better_algorithms"}, {"score": 0.0025127604406208668, "phrase": "grammatical_evolution"}, {"score": 0.0024700776739384977, "phrase": "well-established_variant"}, {"score": 0.002442025065383455, "phrase": "grammar-based_genetic_programming"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Heuristics", " Grammatical evolution", " Automatic algorithm configuration", " Bin packing", " Flowshop scheduling"], "paper_abstract": "Several grammar-based genetic programming algorithms have been proposed in the literature to automatically generate heuristics for hard optimization problems. These approaches specify the algorithmic building blocks and the way in which they can be combined in a grammar; the best heuristic for the problem being tackled is found by an evolutionary algorithm that searches in the algorithm design space defined by the grammar. In this work, we propose a novel representation of the grammar by a sequence of categorical, integer, and real-valued parameters. We then use a tool for automatic algorithm configuration to search for the best algorithm for the problem at hand. Our experimental evaluation on the one-dimensional bin packing problem and the permutation flowshop problem with weighted tardiness objective shows that the proposed approach produces better algorithms than grammatical evolution, a well-established variant of grammar-based genetic programming. The reasons behind such improvement lie both in the representation proposed and in the method used to search the algorithm design space. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Grammar-based generation of stochastic local search heuristics through automatic algorithm configuration tools", "paper_id": "WOS:000341473200017"}