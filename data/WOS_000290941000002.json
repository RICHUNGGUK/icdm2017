{"auto_keywords": [{"score": 0.04497268099057208, "phrase": "vm"}, {"score": 0.01778903704801305, "phrase": "vmstore"}, {"score": 0.010612306914030964, "phrase": "multiple_virtual_machines"}, {"score": 0.008944434641914866, "phrase": "distributed_storage_system"}, {"score": 0.0047517225918491226, "phrase": "desktop_virtualization"}, {"score": 0.004566954456805558, "phrase": "industry_and_academic_communities"}, {"score": 0.004477270137801732, "phrase": "virtualized_desktop_system"}, {"score": 0.003948613642680196, "phrase": "vm_images"}, {"score": 0.0033025823350563087, "phrase": "multiple_images"}, {"score": 0.0032591491777773035, "phrase": "redundancy_removal"}, {"score": 0.003216285378512588, "phrase": "images_data"}, {"score": 0.0031115683920520773, "phrase": "direct_index_structure"}, {"score": 0.003030247482854539, "phrase": "vm_snapshots"}, {"score": 0.0028173769301594745, "phrase": "distribute_storage_structure"}, {"score": 0.0027803070408286158, "phrase": "good_bandwidth"}, {"score": 0.002636828502928141, "phrase": "storage_nodes"}, {"score": 0.0025509294021449254, "phrase": "data_preprocessing_strategy"}, {"score": 0.0025173564697303836, "phrase": "intelligent_object_partitioning_techniques"}, {"score": 0.0023716501597131024, "phrase": "performance_analysis"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["virtualization", " virtualized desktop", " distributed storage"], "paper_abstract": "Desktop virtualization is a very hot concept in both industry and academic communities. Since virtualized desktop system is based on multiple virtual machines (VM), it is necessary to design a distributed storage system to manage the VM images. In this paper, we design a distributed storage system, VMStore, by taking into account three important characteristics: high performance VM snapshot, booting optimization from multiple images and redundancy removal of images data. We adopt a direct index structure of blocks for VM snapshots to speed up VM booting performance significantly; provide a distribute storage structure with good bandwidth scalability by dynamically changing the number of storage nodes; and propose a data preprocessing strategy with intelligent object partitioning techniques, which would eliminate duplication more effectively. Performance analysis for VMStore focuses on two metrics: the speedup of VM booting and the overhead of de-duplication. Experimental results show the efficiency and effectiveness of VMStore.", "paper_title": "VMStore: Distributed storage system for multiple virtual machines", "paper_id": "WOS:000290941000002"}