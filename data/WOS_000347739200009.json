{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_requirements"}, {"score": 0.011477156303798969, "phrase": "pus_standard"}, {"score": 0.004736563452994885, "phrase": "space_applications"}, {"score": 0.004685012337701536, "phrase": "poorly_written_requirements"}, {"score": 0.004608730887154718, "phrase": "common_source"}, {"score": 0.004558564684763264, "phrase": "software_defects"}, {"score": 0.004459857205489101, "phrase": "application_areas"}, {"score": 0.00441130431691048, "phrase": "space_systems"}, {"score": 0.004292212137716459, "phrase": "malfunctioning_software"}, {"score": 0.004063547375196532, "phrase": "benchmarking_procedure"}, {"score": 0.0034478392374444177, "phrase": "faulty_behaviour"}, {"score": 0.0028460640294160383, "phrase": "benchmark_validation_approach"}, {"score": 0.002650279521276126, "phrase": "fault_injection"}, {"score": 0.0026070408483940535, "phrase": "known_errors"}, {"score": 0.002564505790176378, "phrase": "specification_documents"}, {"score": 0.002522662955545598, "phrase": "benchmark_validation"}, {"score": 0.0024143815950383647, "phrase": "different_countries"}, {"score": 0.0023107372754933887, "phrase": "simple_and_effective_way"}, {"score": 0.002175436093794315, "phrase": "requirements_documents"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Benchmarking", " ECSS standards", " Software requirements quality"], "paper_abstract": "Poorly written requirements are a common source of software defects and, in application areas like space systems, the cost of malfunctioning software can be very high. This work proposes a benchmarking procedure for assessing the quality of software requirements that adopt the Packet Utilization Standard (PUS) defined by the European Cooperation for Space Standardization (ECSS) standards. The benchmark uses three checklists that aim at guaranteeing that the specifications comply with the PUS standard, consider faulty behaviour, and do not include errors typically found in this type of documents. The benchmark is defined for two services of the PUS standard: the telecommand verification and on board operating scheduling. A benchmark validation approach is also proposed in the paper. It uses the concept of fault injection to insert known errors in software requirements specification documents. The benchmark validation is performed through its application to three projects from different countries. Results show that our proposal provides a simple and effective way for identifying weaknesses and compare the degree of maturity of requirements documents. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A benchmarking process to assess software requirements documentation for space applications", "paper_id": "WOS:000347739200009"}