{"auto_keywords": [{"score": 0.012985978970262473, "phrase": "traffic_rates"}, {"score": 0.00481495049065317, "phrase": "fluid_schedules"}, {"score": 0.004780030485538593, "phrase": "crossbar_packet-switches"}, {"score": 0.004745364641644456, "phrase": "banyan"}, {"score": 0.004396120480895021, "phrase": "input_queued_switches"}, {"score": 0.004364224683011796, "phrase": "switch_networks"}, {"score": 0.004238929161010395, "phrase": "online_traffic_scheduling_problem"}, {"score": 0.004057670872363875, "phrase": "desired_traffic_rates"}, {"score": 0.0040135756033094225, "phrase": "switch_network"}, {"score": 0.003800156761779008, "phrase": "small_fractions"}, {"score": 0.0035980453088879393, "phrase": "traffic_scheduling_problem"}, {"score": 0.003320833167729157, "phrase": "worst-case_bounds"}, {"score": 0.003284718806701356, "phrase": "additional_buffer_use"}, {"score": 0.0029768089698126547, "phrase": "online_packet-scheduling_algorithm"}, {"score": 0.0027978827655799495, "phrase": "upper_bounds"}, {"score": 0.0027775505385261553, "phrase": "worst-case_backlog"}, {"score": 0.0026976845075643314, "phrase": "constant_fluid_schedules"}, {"score": 0.0026010855333099513, "phrase": "chang"}, {"score": 0.0025822635015192654, "phrase": "chen"}, {"score": 0.0025540919622566095, "phrase": "huang"}, {"score": 0.0025354945903293905, "phrase": "infocom"}, {"score": 0.0024625698287060586, "phrase": "crossbar_switch"}, {"score": 0.0023830293456003765, "phrase": "bound_backlog"}, {"score": 0.0023485057246680854, "phrase": "switch_size"}, {"score": 0.002256117165288155, "phrase": "banyan_networks"}, {"score": 0.0022315557620621205, "phrase": "exact_characterization"}, {"score": 0.0021752783872387173, "phrase": "bounded_backlog"}, {"score": 0.0021049977753042253, "phrase": "network_topology"}], "paper_keywords": ["combinatorics", " graph theory", " network calculus", " packet-switching", " scheduling"], "paper_abstract": "We consider a problem motivated by the desire to provide flexible, rate-based, quality of service guarantees for packets sent over input queued switches and switch networks. Our focus is solving a type of online traffic scheduling problem, whose input at each time step is a set of desired traffic rates through the switch network. These traffic rates in general cannot be exactly achieved since they assume arbitrarily small fractions of packets can be transmitted at each time step. The goal of the traffic scheduling problem is to closely approximate the given sequence of traffic rates by a sequence of transmissions in which only whole packets are sent. We prove worst-case bounds on the additional buffer use, which we call backlog, that results from using such an approximation. We first consider the N x N, input queued, crossbar switch. Our main result is an online packet-scheduling algorithm using no speedup that guarantees backlog at most (N + 1)(2)/4 packets at each input port and each output port. Upper bounds on worst-case backlog have been proved for the case of constant fluid schedules, such as the N-2 - 2N + 2 bound of Chang, Chen, and Huang (INFOCOM, 2000). Our main result for the crossbar switch is the first, to our knowledge, to bound backlog in terms of switch size N for arbitrary, time-varying fluid schedules, without using speedup. Our main result for Banyan networks is an exact characterization of the speedup required to maintain bounded backlog, in terms of polytopes derived from the network topology.", "paper_title": "Approximating fluid schedules in crossbar packet-switches and Banyan networks", "paper_id": "WOS:000243041200019"}