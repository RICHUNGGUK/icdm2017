{"auto_keywords": [{"score": 0.049217710328296, "phrase": "data_exchange"}, {"score": 0.00481495049065317, "phrase": "core_computation"}, {"score": 0.004240116703465252, "phrase": "source_database"}, {"score": 0.004126123386192962, "phrase": "target_database"}, {"score": 0.003978866233891427, "phrase": "source_instance"}, {"score": 0.003440377157682362, "phrase": "gottlob"}, {"score": 0.003378530197404632, "phrase": "nash"}, {"score": 0.0032282396745967504, "phrase": "core_computation_algorithm"}, {"score": 0.0031129269142224168, "phrase": "polynomial_time"}, {"score": 0.002816556934231128, "phrase": "enhanced_version"}, {"score": 0.002525248554951453, "phrase": "proof-of-concept_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Data exchange", " Data integration", " Core", " Universal solutions", " Dependencies", " Chase", " Tractability", " Query evaluation"], "paper_abstract": "Data exchange is concerned with the transfer of data from some source database to some target database. Given a source instance, there may be many solutions, i.e., target instances. The most compact solution is called the core. Gottlob and Nash have recently presented a core computation algorithm which works in polynomial time under very general conditions. In this paper, we present an enhanced version of this algorithm. Moreover, we also report on a proof-of-concept implementation of the enhanced algorithm and on the experience gained from experiments with this implementation. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Towards practical feasibility of core computation in data exchange", "paper_id": "WOS:000274886700001"}