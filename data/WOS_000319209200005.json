{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "large_text_collections"}, {"score": 0.04835764792705376, "phrase": "fuzzy_full-text_search"}, {"score": 0.038568237038719436, "phrase": "interactive_query_times"}, {"score": 0.030696647772077066, "phrase": "query_terms"}, {"score": 0.0038651944848734133, "phrase": "standard_inverted-index_techniques"}, {"score": 0.0037653554368382814, "phrase": "ordinary_full-text_search"}, {"score": 0.0034992667091713813, "phrase": "moderately-sized_text_collections"}, {"score": 0.003303412571939192, "phrase": "new_preprocessing_techniques"}, {"score": 0.0030538300202383106, "phrase": "single_machine"}, {"score": 0.002867771524071872, "phrase": "similar_terms"}, {"score": 0.002542174767860791, "phrase": "similar_prefix"}, {"score": 0.0021049977753042253, "phrase": "completesearch_engine"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Performance", " Theory", " Approximate dictionary search", " approximate text search", " error tolerant autocomplete", " fuzzy search", " HYB index", " inverted index"], "paper_abstract": "We consider the problem of fuzzy full-text search in large text collections, that is, full-text search which is robust against errors both on the side of the query as well as on the side of the documents. Standard inverted-index techniques work extremely well for ordinary full-text search but fail to achieve interactive query times (below 100 milliseconds) for fuzzy full-text search even on moderately-sized text collections (above 10 GBs of text). We present new preprocessing techniques that achieve interactive query times on large text collections (100 GB of text, served by a single machine). We consider two similarity measures, one where the query terms match similar terms in the collection (e.g., algorithm matches algoritm or vice versa) and one where the query terms match terms with a similar prefix in the collection (e.g., alori matches algorithm). The latter is important when we want to display results instantly after each keystroke (search as you type). All algorithms have been fully integrated into the CompleteSearch engine.", "paper_title": "Efficient Fuzzy Search in Large Text Collections", "paper_id": "WOS:000319209200005"}