{"auto_keywords": [{"score": 0.04876985276069079, "phrase": "declassification_policies"}, {"score": 0.00481495049065317, "phrase": "different_paradigms"}, {"score": 0.004735519962945449, "phrase": "information_flow"}, {"score": 0.0044800522651664695, "phrase": "static_analyzers"}, {"score": 0.004430629452265786, "phrase": "runtime_enforcers"}, {"score": 0.004076858589744185, "phrase": "different_set"}, {"score": 0.0038354405231002323, "phrase": "hybrid_static-runtime_enforcement_mechanism"}, {"score": 0.003751228706861377, "phrase": "unannotated_program_code"}, {"score": 0.0036892809673917592, "phrase": "information-flow_control"}, {"score": 0.0034707339811048403, "phrase": "realistic_policies"}, {"score": 0.0032290277960438855, "phrase": "mobile_device_application"}, {"score": 0.0030715948036518603, "phrase": "static_or_runtime_approaches"}, {"score": 0.0029380909574836587, "phrase": "current_access_control_models"}, {"score": 0.0028418130333727233, "phrase": "android"}, {"score": 0.0027031706928674092, "phrase": "intermediate_step"}, {"score": 0.0025008468316682036, "phrase": "security_labels"}, {"score": 0.0021049977753042253, "phrase": "current_mobile_systems"}], "paper_keywords": ["Data security", " information security"], "paper_abstract": "There are different paradigms for enforcing information flow and declassification policies. These approaches can be divided into static analyzers and runtime enforcers. Each class has its own strengths and weaknesses, each being able to enforce a different set of policies. In this paper, we introduce a hybrid static-runtime enforcement mechanism that works on unannotated program code and supports information-flow control, as well as declassification policies. Our approach manages to enforce realistic policies, as shown by our three running examples, all within the context of a mobile device application, which cannot be handled separately by static or runtime approaches, and are also not covered by current access control models of mobile platforms such as Android or iOS. We also show that including an intermediate step (called preload check) makes both the static analysis system independent (in terms of security labels) and the runtime enforcer lightweight. Finally, we implement our runtime enforcer and run experiments that show that its overhead is so low that the approach can be rolled out on current mobile systems.", "paper_title": "Hybrid Static-Runtime Information Flow and Declassification Enforcement", "paper_id": "WOS:000322026900004"}