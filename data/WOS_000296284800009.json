{"auto_keywords": [{"score": 0.004748740786945996, "phrase": "n_points"}, {"score": 0.004431041346291019, "phrase": "bottleneck_steiner_tree_problem"}, {"score": 0.004349955692802962, "phrase": "k_steiner_points"}, {"score": 0.004231089088705995, "phrase": "spanning_tree"}, {"score": 0.003966162568548304, "phrase": "underlying_distance_function"}, {"score": 0.003823239289038625, "phrase": "euclidean"}, {"score": 0.0036009039595085186, "phrase": "np"}, {"score": 0.0032665093519968083, "phrase": "thousand_currency"}, {"score": 0.0032066653632708965, "phrase": "thousand_currency_signa"}, {"score": 0.0031045562469735307, "phrase": "exact_algorithm"}, {"score": 0.0030336118627011786, "phrase": "small_fixed_k."}, {"score": 0.0029780219173522115, "phrase": "first_fixed-parameter_tractable_algorithm"}, {"score": 0.00249805321224923, "phrase": "fixed_rational_p"}, {"score": 0.0022355167967736326, "phrase": "k._note"}, {"score": 0.0021443262599352996, "phrase": "known_exact_algorithm"}], "paper_keywords": ["Steiner point", " Bottleneck Steiner tree", " Exact algorithm", " Fixed-parameter tractability", " Computational geometry", " Optimization"], "paper_abstract": "Given n points, called terminals, in the plane a\"e(2) and a positive integer k, the bottleneck Steiner tree problem is to find k Steiner points from a\"e(2) and a spanning tree on the n+k points that minimizes its longest edge length. Edge length is measured by an underlying distance function on a\"e(2), usually, the Euclidean or the L (1) metric. This problem is known to be NP-hard. In this paper, we study this problem in the L (p) metric for any 1a parts per thousand currency signpa parts per thousand currency signa, and aim to find an exact algorithm which is efficient for small fixed k. We present the first fixed-parameter tractable algorithm running in f(k)a <...nlog (2) n time for the L (1) and the L (a) metrics, and the first exact algorithm for the L (p) metric for any fixed rational p with 1 < p < a whose time complexity is f(k)a <...(n (k) +nlog n), where f(k) is a function dependent only on k. Note that prior to this paper there was no known exact algorithm even for the L (2) metric.", "paper_title": "Exact Algorithms for the Bottleneck Steiner Tree Problem", "paper_id": "WOS:000296284800009"}