{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mobile_systems"}, {"score": 0.004682708592184678, "phrase": "execution_context"}, {"score": 0.004617949594931096, "phrase": "pervasive_systems"}, {"score": 0.004575272950516775, "phrase": "mobile_computing"}, {"score": 0.004228016636379321, "phrase": "continual_context_changes"}, {"score": 0.004092774981286263, "phrase": "self-adaptive_systems"}, {"score": 0.004036141321779216, "phrase": "reconfiguration_service"}, {"score": 0.0038708810091769856, "phrase": "possible_configurations"}, {"score": 0.003610292749660581, "phrase": "alternative_approach"}, {"score": 0.0035603115570447467, "phrase": "automatic_generation"}, {"score": 0.0035273744062641636, "phrase": "application_configurations"}, {"score": 0.0034785371344994197, "phrase": "reconfiguration_plans"}, {"score": 0.0033515736929172644, "phrase": "generated_configurations"}, {"score": 0.0032745778756077693, "phrase": "different_criteria"}, {"score": 0.0029288446848334576, "phrase": "architectural_variability"}, {"score": 0.0028615323526689582, "phrase": "common_variability_language"}, {"score": 0.0027188259793109264, "phrase": "genetic_algorithm"}, {"score": 0.0026811531172346676, "phrase": "nearly-optimal_configurations"}, {"score": 0.0025712297362596574, "phrase": "variability_model"}, {"score": 0.002500456462028735, "phrase": "case_study"}, {"score": 0.0022889103976458437, "phrase": "scarce_resources"}, {"score": 0.0021746987512551693, "phrase": "elsevier_b.v."}, {"score": 0.002134592410214824, "phrase": "open_access_article"}, {"score": 0.0021049977753042253, "phrase": "cc_by-nc-nd_license"}], "paper_keywords": ["Architectural variability", " CVL", " Dynamic reconfiguration", " Genetic algorithm", " Context", " Pervasive systems"], "paper_abstract": "The execution context in which pervasive systems or mobile computing run changes continually. Hence, applications for these systems require support for self-adaptation to the continual context changes. Most of the approaches for self-adaptive systems implement a reconfiguration service that receives as input the list of all possible configurations and the plans to switch between them. In this paper we present an alternative approach for the automatic generation of application configurations and the reconfiguration plans at runtime. With our approach, the generated configurations are optimal as regards different criteria, such as functionality or resource consumption (e.g. battery or memory). This is achieved by: (1) modelling architectural variability at design-time using the Common Variability Language (CVL), and (2) using a genetic algorithm that finds nearly-optimal configurations at run-time using the information provided by the variability model. We also specify a case study and we use it to evaluate our approach, showing that it is efficient and suitable for devices with scarce resources. (C) 2014 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).", "paper_title": "Self-adaptation of mobile systems driven by the Common Variability Language", "paper_id": "WOS:000352174300010"}