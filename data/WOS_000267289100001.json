{"auto_keywords": [{"score": 0.038115196221187, "phrase": "yannakakis_algorithm"}, {"score": 0.03162903887570056, "phrase": "mso_evaluation_problem"}, {"score": 0.00481495049065317, "phrase": "logic_evaluation_problem"}, {"score": 0.004773040022691547, "phrase": "finite_colored_trees"}, {"score": 0.0044118153390803405, "phrase": "purely_database_theoretic_framework"}, {"score": 0.004316396683332752, "phrase": "well-known_mso-automata_connection"}, {"score": 0.004167982855788402, "phrase": "acyclic_conjunctive_query_evaluation_problem"}, {"score": 0.004024651422626329, "phrase": "monadic_datalog_evaluation_problem"}, {"score": 0.003802135020791801, "phrase": "mso_problem"}, {"score": 0.003769006950727621, "phrase": "optimized_evaluation_methods"}, {"score": 0.0037361664435836845, "phrase": "relational_algebra_expressions"}, {"score": 0.003687439449869248, "phrase": "datalog_programs"}, {"score": 0.003529543381704363, "phrase": "rewriting_method"}, {"score": 0.003498782065781398, "phrase": "resolution-based_filtering"}, {"score": 0.0031223774204093713, "phrase": "first_time"}, {"score": 0.002949598537993663, "phrase": "relational_algebra"}, {"score": 0.0027620516806198354, "phrase": "automata-based_algorithm"}, {"score": 0.00266693888510356, "phrase": "particular_\"instance"}, {"score": 0.0025863988422430797, "phrase": "optimized_database_methods"}, {"score": 0.002443206010337041, "phrase": "-definable_queries"}, {"score": 0.0024218895273910943, "phrase": "colored_trees"}, {"score": 0.0023180581939456686, "phrase": "corresponding_result"}, {"score": 0.0022382002476510573, "phrase": "unary_mso_queries"}, {"score": 0.0021328586481696157, "phrase": "well-known_result"}, {"score": 0.0021049977753042253, "phrase": "mso-definable_class"}], "paper_keywords": ["Monadic second-order logic (MSO) evaluation problem", " MSO queries", " tree automata", " datalog queries", " acyclic conjunctive queries", " Yannakakis algorithm", " datalog rewriting algorithms", " definability"], "paper_abstract": "We model the monadic second-order logic (MSO) evaluation problem on finite colored trees in a purely database theoretic framework, based on the well-known MSO-automata connection: we reduce the problem to an acyclic conjunctive query evaluation problem on the one hand and to a monadic datalog evaluation problem on the other hand. This approach offers the possibility to solve the MSO problem using optimized evaluation methods for relational algebra expressions and for datalog programs (such as Yannakakis algorithm [27] and the rewriting method using resolution-based filtering referred to as \"magic sets\" method in [3]): we use these methods for evaluating our queries and giving estimates of their complexity. This is the first time, to our knowledge, that a solution to the MSO evaluation problem related to relational algebra is given; furthermore, thanks to this reduction, we prove that the automata-based algorithm given in [8] constitutes a particular \"instance\" of Yannakakis algorithm. Besides the optimized database methods that we propose for solving the MSO evaluation problem, our results prove that MSO-definable queries over colored trees are datalog-definable; this result subsumes the corresponding result in [12] which states that unary MSO queries are monadic datalog-definable and it also subsumes the well-known result that any MSO-definable class of trees is monadic datalog-definable.", "paper_title": "The Monadic Second-order Logic Evaluation Problem on Finite Colored Trees: a Database-theoretic Approach", "paper_id": "WOS:000267289100001"}