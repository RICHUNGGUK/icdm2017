{"auto_keywords": [{"score": 0.036473241543419986, "phrase": "c-lock"}, {"score": 0.010001742824616702, "phrase": "tm"}, {"score": 0.0077468724025098, "phrase": "lock-based_methods"}, {"score": 0.00481495049065317, "phrase": "embedded_multicore_systems"}, {"score": 0.004775918707955445, "phrase": "data_synchronization"}, {"score": 0.004737201825299411, "phrase": "multiple_cores"}, {"score": 0.00462291551375938, "phrase": "critical_issues"}, {"score": 0.0044025116437190785, "phrase": "multicore_architectures"}, {"score": 0.004366808573435364, "phrase": "data_synchronization_schemes"}, {"score": 0.004209948103368491, "phrase": "shared_data"}, {"score": 0.004158563941891469, "phrase": "lock-free_methods"}, {"score": 0.0038803710796509227, "phrase": "embedded_systems"}, {"score": 0.003710323357333052, "phrase": "high_performance"}, {"score": 0.003635503288514593, "phrase": "low_power_consumption"}, {"score": 0.0032833625797814474, "phrase": "multicore_embedded_systems"}, {"score": 0.0032302647179383915, "phrase": "balanced_energy"}, {"score": 0.0028935680100446583, "phrase": "true_conflicts"}, {"score": 0.002777949746964955, "phrase": "roll-back_operations"}, {"score": 0.0027330029055210926, "phrase": "huge_overhead"}, {"score": 0.0021926693625590006, "phrase": "transactional_memory_systems"}, {"score": 0.0021222476760114914, "phrase": "energy-delay_product"}], "paper_keywords": ["Data synchronization", " multicore", " clock", " energy", " performance"], "paper_abstract": "Data synchronization among multiple cores has been one of the critical issues which must be resolved in order to optimize the parallelism of multicore architectures. Data synchronization schemes can be classified as lock-based methods (\"pessimistic\") and lock-free methods (\"optimistic\"). However, none of these methods consider the nature of embedded systems which have demanding and sometimes conflicting requirements not only for high performance, but also for low power consumption. As an answer to these problems, we propose, C-Lock, an energy-and performance-efficient data synchronization method for multicore embedded systems. C-Lock achieves balanced energy-and performance-efficiency by combining the advantages of lock-based methods and transactional memory (TM) approaches; in C-Lock, the core is blocked only when true conflicts exist (advantage of TM), while avoiding roll-back operations which can cause huge overhead with regard to both performance and energy (this is an advantage of locks). Also, in order to save more energy, C-Lock disables the clocks of the cores which are blocked for the access to the shared data until the shared data become available. We compared our C-Lock approach against traditional locks and transactional memory systems and found that C-Lock can reduce the energy-delay product by up to 1.94 times and 13.78 times compared to the baseline and TM, respectively.", "paper_title": "C-Lock: Energy Efficient Synchronization for Embedded Multicore Systems", "paper_id": "WOS:000341523800011"}