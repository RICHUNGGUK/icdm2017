{"auto_keywords": [{"score": 0.04671359185365177, "phrase": "subgame-perfect_nash_equilibrium"}, {"score": 0.0448884418599259, "phrase": "optimal_paths"}, {"score": 0.00481495049065317, "phrase": "computing_subgame-perfect_nash_equilibria._consider_games"}, {"score": 0.004141238989360548, "phrase": "well-known_state-labeling_algorithm"}, {"score": 0.003870541730075597, "phrase": "kripke_structure"}, {"score": 0.0037321585095070483, "phrase": "minimum_number"}, {"score": 0.003542976343910816, "phrase": "common_generalization"}, {"score": 0.0035063024767122684, "phrase": "extensive_games"}, {"score": 0.0034700069041302003, "phrase": "kripke_structures"}, {"score": 0.00339853518227171, "phrase": "\"graph_games"}, {"score": 0.0032940691998512963, "phrase": "bellman-ford_algorithm"}, {"score": 0.0032430426853131346, "phrase": "shortest_paths"}, {"score": 0.0031597433845085092, "phrase": "model-checking_algorithm"}, {"score": 0.0029994894380575604, "phrase": "appropriate_logic"}, {"score": 0.002633425544817301, "phrase": "nash_equilibrium"}, {"score": 0.0025259712348798323, "phrase": "symbolic_version"}, {"score": 0.002435542816459651, "phrase": "larger_graph_games"}, {"score": 0.00234834406550549, "phrase": "critical-path_method"}, {"score": 0.0022760856906838814, "phrase": "perfect_information"}, {"score": 0.0021831803612759855, "phrase": "execution_time"}], "paper_keywords": ["shortest path", " Bellman-Ford", " Nash equilibrium", " BDD", " model checking"], "paper_abstract": "Consider games where players wish to minimize the cost to reach some state. A subgame-perfect Nash equilibrium can be regarded as a collection of optimal paths on such games. Similarly, the well-known state-labeling algorithm used in model checking can be viewed as computing optimal paths on a Kripke structure, where each path has a minimum number of transitions. We exploit these similarities in a common generalization of extensive games and Kripke structures that we name \"graph games\". By extending the Bellman-Ford algorithm for computing shortest paths, we obtain a model-checking algorithm for graph games with respect to formulas in an appropriate logic. Hence, when given a certain formula, our model-checking algorithm computes the subgame-perfect Nash equilibrium (as opposed to simply determining whether or not a given collection of paths is a Nash equilibrium). Next, we develop a symbolic version of our model checker allowing us to handle larger graph games. We illustrate our formalism on the critical-path method as well as games with perfect information. Finally, we report on the execution time of benchmarks of an implementation of our algorithms.", "paper_title": "A SYMBOLIC SHORTEST PATH ALGORITHM FOR COMPUTING SUBGAME-PERFECT NASH EQUILIBRIA", "paper_id": "WOS:000362229500011"}