{"auto_keywords": [{"score": 0.04364011428330573, "phrase": "network_functions"}, {"score": 0.00795445988634047, "phrase": "mapping_cost"}, {"score": 0.007775247982338038, "phrase": "network_function_decompositions"}, {"score": 0.00481495049065317, "phrase": "optimized_network_function"}, {"score": 0.004768012159430855, "phrase": "service_decompositions"}, {"score": 0.00469079145638866, "phrase": "software-defined_networking"}, {"score": 0.004481132747216135, "phrase": "service_providers"}, {"score": 0.00433711346313652, "phrase": "novel_network_services"}, {"score": 0.004239058745214085, "phrase": "nfv"}, {"score": 0.004197703302809062, "phrase": "flexible_composition"}, {"score": 0.004062755992847139, "phrase": "network_service"}, {"score": 0.004023133012060499, "phrase": "nsc"}, {"score": 0.0038431888954930083, "phrase": "network_service_chains"}, {"score": 0.0037195959056754444, "phrase": "multiple_options"}, {"score": 0.0036712747276274617, "phrase": "abstract_network_service"}, {"score": 0.0034276650497743603, "phrase": "underlying_algorithmic_problem"}, {"score": 0.003361069456060196, "phrase": "novel_generalization"}, {"score": 0.0032529303004879325, "phrase": "multiple_realization_options"}, {"score": 0.003221169966797793, "phrase": "joint_optimization"}, {"score": 0.002958546790146313, "phrase": "network_services"}, {"score": 0.0028353540399641336, "phrase": "network_infrastructure"}, {"score": 0.0028076592725295646, "phrase": "possible_decompositions"}, {"score": 0.002762099499401202, "phrase": "first_algorithm"}, {"score": 0.0027261830963078706, "phrase": "integer_linear_programming"}, {"score": 0.0026041043995937404, "phrase": "nscs_requirements"}, {"score": 0.002587115505155995, "phrase": "infrastructure_capabilities"}, {"score": 0.0025618392173552052, "phrase": "second_one"}, {"score": 0.0025368092524479615, "phrase": "heuristic_algorithm"}, {"score": 0.0025038150103055823, "phrase": "scalability_issue"}, {"score": 0.00247935055073462, "phrase": "ilp_formulation"}, {"score": 0.002391670093694849, "phrase": "reasonable_selection"}, {"score": 0.0023451553255837317, "phrase": "experimental_results"}, {"score": 0.0022401007567642347, "phrase": "embedding_performance"}, {"score": 0.0022109570100232352, "phrase": "acceptance_ratio"}, {"score": 0.002160862869106241, "phrase": "long_run"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Network service chaining (NSC)", " Network Function Virtualization (NFV)", " Software-Defined Networking (SDN)", " Network function decomposition", " Embedding"], "paper_abstract": "The rise of Software-Defined Networking (SDN) and Network Function Virtualization (NFV) introduce opportunities for service providers to reduce CAPEX/OPEX and to offer and quickly deploy novel network services. In particular, SDN and NFV enable the flexible composition of network functions, a generic service concept known as network service chaining (NSC). However, the control of resources, management and configuration of network service chains is challenging. In particular, there typically exist multiple options on how an abstract network service can be decomposed into more refined, inter-connected network functions. Moreover, efficient algorithms have to be devised to allocate the network functions. The underlying algorithmic problem can be seen as a novel generalization of the Virtual Network Embedding Problem (VNEP), where there exist multiple realization options. The joint optimization of decomposition and embedding has not been studied in the literature before. This paper studies the problem of how to optimally decompose and embed network services. In particular, we propose two novel algorithms to map NSCs to the network infrastructure while allowing possible decompositions of network functions. The first algorithm is based on Integer Linear Programming (ILP) which minimizes the cost of the mapping based on the NSCs requirements and infrastructure capabilities. The second one is a heuristic algorithm to solve the scalability issue of the ILP formulation. It targets to minimize the mapping cost by making a reasonable selection of the network function decompositions. The experimental results indicate that considering network function decompositions at the time of the embedding significantly improves the embedding performance in terms of acceptance ratio while decreasing the mapping cost in the long run in both optimal and heuristic solutions. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Network service chaining with optimized network function embedding supporting service decompositions", "paper_id": "WOS:000367123300008"}