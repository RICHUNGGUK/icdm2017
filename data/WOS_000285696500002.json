{"auto_keywords": [{"score": 0.004707188147442449, "phrase": "distributed_logic"}, {"score": 0.004575854901681043, "phrase": "multicore_processors"}, {"score": 0.004524348699657099, "phrase": "cloud_computing"}, {"score": 0.004448169552315403, "phrase": "enormous_pressure"}, {"score": 0.004373267443572639, "phrase": "software_community"}, {"score": 0.00417961150804265, "phrase": "parallel_and_distributed_programming"}, {"score": 0.00399449659126893, "phrase": "more-and_more_varied-interest"}, {"score": 0.0037320255482878365, "phrase": "computing_history"}, {"score": 0.0033511469200347907, "phrase": "declarative_database_query_languages"}, {"score": 0.0032208091960514128, "phrase": "next_generation"}, {"score": 0.0031308163228919773, "phrase": "programming_languages"}, {"score": 0.0029249294679606656, "phrase": "datalog_extensions"}, {"score": 0.0028756028995504035, "phrase": "networking_protocols"}, {"score": 0.002843180211561427, "phrase": "distributed_systems"}, {"score": 0.002656158309155626, "phrase": "theoretical_conjectures"}, {"score": 0.0025673005153462707, "phrase": "database_community"}, {"score": 0.0025097154697345096, "phrase": "important_practical_issues"}, {"score": 0.0024814079299143536, "phrase": "distributed_computing"}, {"score": 0.0023445770108033288, "phrase": "database_researchers"}, {"score": 0.0022919762167777427, "phrase": "leadership_role"}, {"score": 0.0022405528759521856, "phrase": "impending_programming_crisis"}, {"score": 0.0021778895748464024, "phrase": "extended_version"}, {"score": 0.002141134176057931, "phrase": "invited_lecture"}], "paper_keywords": [""], "paper_abstract": "The rise of multicore processors and cloud computing is putting enormous pressure on the software community to find solutions to the difficulty of parallel and distributed programming. At the same time, there is more-and more varied-interest in data-centric programming languages than at any time in computing history, in part because these languages parallelize naturally. This juxtaposition raises the possibility that the theory of declarative database query languages can provide a foundation for the next generation of parallel and distributed programming languages. In this paper I reflect on my group's experience over seven years using Datalog extensions to build networking protocols and distributed systems. Based on that experience, I present a number of theoretical conjectures that may both interest the database community, and clarify important practical issues in distributed computing. Most importantly, I make a case for database researchers to take a leadership role in addressing the impending programming crisis. This is an extended version of an invited lecture at the ACM PODS 2010 conference [32].", "paper_title": "The Declarative Imperative Experiences and Conjectures in Distributed Logic", "paper_id": "WOS:000285696500002"}