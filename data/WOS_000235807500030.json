{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bio"}, {"score": 0.004521566043596533, "phrase": "distributed_systems"}, {"score": 0.004284302478991387, "phrase": "middleware_system"}, {"score": 0.004096082254543022, "phrase": "distributed_system"}, {"score": 0.003987126862293129, "phrase": "general_test-bed"}, {"score": 0.003916098498242888, "phrase": "bio-inspired_approaches"}, {"score": 0.0035794251590584563, "phrase": "distributed_object_systems"}, {"score": 0.0033011569787033297, "phrase": "dynamic_federation"}, {"score": 0.0032423089921154503, "phrase": "multiple_agents"}, {"score": 0.0031845067058084583, "phrase": "different_computers"}, {"score": 0.0025660347613972573, "phrase": "prototype_implementation"}, {"score": 0.0024093494406195386, "phrase": "java-based_mobile_agent_system"}, {"score": 0.0021049977753042253, "phrase": "real_distributed_systems"}], "paper_keywords": [""], "paper_abstract": "This paper presents a middleware system for multi-agents on a distributed system as a general test-bed for bio-inspired approaches. The middleware is unique to other approaches, including distributed object systems, because it can maintain and migrate a dynamic federation of multiple agents on different computers. It enables each agent to explicitly define its own deployment policy as a relocation between the agent and another agent. This paper describes a prototype implementation of the middleware built on a Java-based mobile agent system and its practical applications that illustrates the utility and effectiveness of the approach in real distributed systems.", "paper_title": "Bio-inspired organization for multi-agents on distributed systems", "paper_id": "WOS:000235807500030"}