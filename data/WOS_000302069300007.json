{"auto_keywords": [{"score": 0.049666636555871356, "phrase": "model_checking"}, {"score": 0.045155224306954254, "phrase": "distributed_controller"}, {"score": 0.03743399683518872, "phrase": "global_constraint"}, {"score": 0.0242524688704516, "phrase": "priority_order"}, {"score": 0.00481495049065317, "phrase": "distributed_control"}, {"score": 0.004651177631663439, "phrase": "knowledge_properties"}, {"score": 0.004551647527068771, "phrase": "distributed_controllers"}, {"score": 0.004492950096237056, "phrase": "global_constraints"}, {"score": 0.004454237726525018, "phrase": "concurrent_systems"}, {"score": 0.004228839109569368, "phrase": "general_case"}, {"score": 0.004049709080817396, "phrase": "synthesis_problem"}, {"score": 0.003980191398041843, "phrase": "temporary_synchronizations"}, {"score": 0.003465189575252443, "phrase": "local_knowledge"}, {"score": 0.003205268682789165, "phrase": "new_deadlocks"}, {"score": 0.003163878786694538, "phrase": "individual_processes"}, {"score": 0.0029392020223716966, "phrase": "joint_knowledge"}, {"score": 0.0028762004595878714, "phrase": "joint_decisions"}, {"score": 0.0028390477456009568, "phrase": "fixed_coordination"}, {"score": 0.002637377202509382, "phrase": "temporary_coordinations"}, {"score": 0.002558549084795168, "phrase": "distributed_platform"}, {"score": 0.0025364615261136655, "phrase": "communication_overhead"}, {"score": 0.0021982976170703884, "phrase": "general_undecidability"}, {"score": 0.002179313258573377, "phrase": "distributed_synthesis"}, {"score": 0.0021049977753042253, "phrase": "particular_problem"}], "paper_keywords": ["Distributed control", " Knowledge", " Model checking", " Disjunctive control", " Prioritized systems"], "paper_abstract": "We apply model checking of knowledge properties to the design of distributed controllers that enforce global constraints on concurrent systems. The problem of synthesizing a distributed controller is undecidable in the general case. We thus look at a variant of the synthesis problem that allows adding temporary synchronizations between processes. We calculate when processes can decide autonomously, based on their knowledge, whether to take or block an action so that the global constraint is not violated. The local knowledge of processes may not suffice to control the processes so as to achieve the global constraint without introducing new deadlocks. When individual processes cannot take a decision alone based on their knowledge, one may coordinate several processes to achieve joint knowledge in order to take joint decisions. A fixed coordination among sets of processes may severely degrade concurrency. Therefore, we propose the use of temporary coordinations. Since realizing such coordinations on a distributed platform induces communication overhead, we strive to minimize their number. We show how this framework is applied to the case of synthesizing a distributed controller for enforcing a priority order. Finally, we show that the general undecidability of distributed synthesis without adding synchronization holds even for the particular problem of enforcing a priority order.", "paper_title": "Achieving distributed control through model checking", "paper_id": "WOS:000302069300007"}