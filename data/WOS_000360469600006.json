{"auto_keywords": [{"score": 0.05007840182816712, "phrase": "language_lucid"}, {"score": 0.025636180512917443, "phrase": "lucid"}, {"score": 0.004523455475492876, "phrase": "infinite_data_structures"}, {"score": 0.004208881856146758, "phrase": "demand-driven_computation_model"}, {"score": 0.004011366422179016, "phrase": "particular_values"}, {"score": 0.0039729853486821995, "phrase": "particular_index_points"}, {"score": 0.0038230844545071303, "phrase": "multiple_dimensions"}, {"score": 0.0033900126423990823, "phrase": "loop_variables"}, {"score": 0.00334144503360907, "phrase": "infinite_vector"}, {"score": 0.003034916887102753, "phrase": "first_time"}, {"score": 0.0028923335491735564, "phrase": "implementation's_cache"}, {"score": 0.002432152706473349, "phrase": "demand-driven_evaluation_model"}, {"score": 0.0021049980887989516, "phrase": "translucid"}], "paper_keywords": [""], "paper_abstract": "Although the language Lucid was not originally intended to support computing with infinite data structures, the notion of (infinite) sequence quickly came to the fore, together with a demand-driven computation model in which demands are propagated for the values of particular values at particular index points. This naturally generalized to sequences of multiple dimensions so that a programmer could, for example, write a program that could be understood as a (nonterminating) loop in which one of the loop variables is an infinite vector. Programmers inevitably found use for more and more dimensions, which led to a problem which is fully solved for the first time in this paper. The problem is that the implementation's cache requires some estimate of the dimensions actually used to compute a value being fetched. This estimate can be difficult or (if dimensions are passed as parameters) impossible to obtain, and the demand-driven evaluation model for Lucid breaks down. We outline the evolution of Lucid which gave rise to this problem, and outline the solution, as used for the implementation of TransLucid, the latest descendant of Lucid.", "paper_title": "Multidimensional infinite data in the language Lucid", "paper_id": "WOS:000360469600006"}