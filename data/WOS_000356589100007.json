{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_synchronization"}, {"score": 0.004694092086199672, "phrase": "message-passing_based_embedded_multiprocessors"}, {"score": 0.004349337717774093, "phrase": "synchronization_mechanism"}, {"score": 0.00378145978325955, "phrase": "decentralized_manner"}, {"score": 0.0034154440860550564, "phrase": "proposed_solution"}, {"score": 0.003287482882222731, "phrase": "simple_and_efficient_synchronization_control_mechanism"}, {"score": 0.0030847461428168614, "phrase": "queued_synchronization"}, {"score": 0.002391067964886602, "phrase": "proposed_mechanism_feature_ultra-low_overhead"}, {"score": 0.002215081186105616, "phrase": "proposed_synchronization"}, {"score": 0.0021593396036472777, "phrase": "ultra-low_latency"}, {"score": 0.0021049977753042253, "phrase": "almost_ideal_scalability"}], "paper_keywords": ["embedded multiprocessors", " synchronization", " message-passing", " application-specific instruction-set processor"], "paper_abstract": "This paper presents a synchronization mechanism to effectively implement the lock and barrier protocols in a decentralized manner through explicit message passing. In the proposed solution, a simple and efficient synchronization control mechanism is proposed to support queued synchronization without contention. By using state-of-theart Application-Specific Instruction-set Processor (ASIP) technology, we embed the synchronization functionality into a baseline processor, making the proposed mechanism feature ultra-low overhead. Experimental results show the proposed synchronization achieves ultra-low latency and almost ideal scalability when the number of processors increases.", "paper_title": "Distributed Synchronization for Message-Passing Based Embedded Multiprocessors", "paper_id": "WOS:000356589100007"}