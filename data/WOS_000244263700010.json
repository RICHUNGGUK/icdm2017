{"auto_keywords": [{"score": 0.04203576937954651, "phrase": "software_failures"}, {"score": 0.00481495049065317, "phrase": "deterministic_behavior"}, {"score": 0.0047732596509542135, "phrase": "software-reliability_models"}, {"score": 0.004491313367627919, "phrase": "software_systems"}, {"score": 0.004337710093279712, "phrase": "stochastic_processes"}, {"score": 0.004262881313926916, "phrase": "nonhomogeneous_poisson_process"}, {"score": 0.0041170581247889654, "phrase": "underlying_assumption"}, {"score": 0.0035974243349266894, "phrase": "random_processes"}, {"score": 0.0035662378173267647, "phrase": "nonlinear_deterministic_processes"}, {"score": 0.003399466007862412, "phrase": "real-world_software-reliability_data"}, {"score": 0.0033262524445013303, "phrase": "chaotic_time-series_analysis"}, {"score": 0.0031568884810273226, "phrase": "deterministic_process"}, {"score": 0.0030888830649190282, "phrase": "stochastic_process"}, {"score": 0.0029701328654852246, "phrase": "chaotic_dynamics"}, {"score": 0.002831158147480665, "phrase": "k-steps-ahead_forecasting_experiments"}, {"score": 0.002722288966917744, "phrase": "well-known_stochastic_srms"}, {"score": 0.0026986685585382347, "phrase": "radial_basis_function_networks"}, {"score": 0.0025611773887867255, "phrase": "out-of-sample_prediction_results"}, {"score": 0.0024095777415804346, "phrase": "stochastic_models"}, {"score": 0.002286781334850213, "phrase": "causal_model"}, {"score": 0.002132711053003407, "phrase": "fractal_subset"}, {"score": 0.0021049977753042253, "phrase": "program's_input_space"}], "paper_keywords": ["chaos theory", " fractal sets", " soft computing", " software quality", " software reliability", " time-series analysis"], "paper_abstract": "Software-reliability models (SRMs) are used for the assessment and improvement of reliability in software systems. These models are normally based on stochastic processes, with the nonhomogeneous Poisson process being one of the most prominent model forms. An underlying assumption of these models is that software failures occur randomly in time. This assumption has never been quantitatively tested. Our contribution in this paper is to conduct an experimental, investigation that contrasts random processes with nonlinear deterministic processes as a model for software failures. We study two sets of real-world software-reliability data using the techniques of chaotic time-series analysis. We have found that both appear to arise from a deterministic process, rather than a stochastic process, and that both show some evidence of chaotic dynamics. In addition, we have conducted a series of k-steps-ahead forecasting experiments in the datasets, pitting a number of well-known stochastic SRMs against radial basis function networks (RBFNs), which are deterministic in nature. The out-of-sample prediction results from the RBFNs showed an improvement of roughly 25% over the best of the stochastic models, for both of our datasets. Finally, we propose a causal model to explain these results, which hypothesizes that faults in a program are distributed over a fractal subset of the program's input space.", "paper_title": "Software-reliability modeling: The case for deterministic behavior", "paper_id": "WOS:000244263700010"}