{"auto_keywords": [{"score": 0.042959100537539416, "phrase": "limited_period"}, {"score": 0.027190063446901433, "phrase": "evolutionary_algorithms"}, {"score": 0.00481495049065317, "phrase": "robust_volunteer-based_evolutionary_algorithms"}, {"score": 0.004611108249179507, "phrase": "fault-tolerant_evolutionary_algorithms"}, {"score": 0.004435006247087171, "phrase": "computational_resources"}, {"score": 0.003997458586709491, "phrase": "volunteer-based_evolutionary_algorithm"}, {"score": 0.0038781372962808894, "phrase": "large_amount"}, {"score": 0.0038447018470115146, "phrase": "computational_power"}, {"score": 0.0035873530542209686, "phrase": "massively_parallel_evolutionary_algorithms"}, {"score": 0.003405671497507337, "phrase": "efficient_policies"}, {"score": 0.0033471722682967046, "phrase": "algorithmic_loss"}, {"score": 0.0032471982781283374, "phrase": "high_rates"}, {"score": 0.0032191849045822415, "phrase": "transient_failures"}, {"score": 0.00319141242685261, "phrase": "i.e._computers"}, {"score": 0.0029519664912853938, "phrase": "empirical_evidence"}, {"score": 0.0028390477456009568, "phrase": "large_population_sizes"}, {"score": 0.002718627370925435, "phrase": "genetic_algorithm"}, {"score": 0.0026603411931700556, "phrase": "genetic_programming"}, {"score": 0.002525489173110693, "phrase": "graceful_degradation"}, {"score": 0.0024606422183102382, "phrase": "computing_nodes"}, {"score": 0.0024183363693242943, "phrase": "new_available_nodes"}, {"score": 0.0023460397258997525, "phrase": "search_process"}, {"score": 0.0022758994740331258, "phrase": "initial_computing_resources"}, {"score": 0.0021049977753042253, "phrase": "failure-free_run"}], "paper_keywords": ["Evolutionary computation", " Distributed algorithms", " Fault tolerance", " Genetic programming", " Genetic algorithms", " Volunteer computing", " Peer-to-peer", " Desktop grid"], "paper_abstract": "This paper tackles the design of scalable and fault-tolerant evolutionary algorithms computed on volunteer platforms. These platforms aggregate computational resources from contributors all around the world. Given that resources may join the system only for a limited period of time, the challenge of a volunteer-based evolutionary algorithm is to take advantage of a large amount of computational power that in turn is volatile. The paper analyzes first the speed of convergence of massively parallel evolutionary algorithms. Then, it provides some guidance about how to design efficient policies to overcome the algorithmic loss of quality when the system undergoes high rates of transient failures, i.e. computers fail only for a limited period of time and then become available again. In order to provide empirical evidence, experiments were conducted for two well-known problems which require large population sizes to be solved, the first based on a genetic algorithm and the second on genetic programming. Results show that, in general, evolutionary algorithms undergo a graceful degradation under the stress of losing computing nodes. Additionally, new available nodes can also contribute to improving the search process. Despite losing up to 90 % of the initial computing resources, volunteer-based evolutionary algorithms can find the same solutions in a failure-prone as in a failure-free run.", "paper_title": "Designing robust volunteer-based evolutionary algorithms", "paper_id": "WOS:000339383900001"}