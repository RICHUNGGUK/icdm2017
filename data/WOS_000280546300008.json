{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "lambda_mu-calculus"}, {"score": 0.0046079260641779755, "phrase": "bohm-complete_extension"}, {"score": 0.004527619017250708, "phrase": "parigot's_lambda_mu-calculus"}, {"score": 0.004257360656055417, "phrase": "functional_programming"}, {"score": 0.0039333604469462356, "phrase": "meta-_theory"}, {"score": 0.0038647641000798135, "phrase": "untyped_lambda_mu-calculus"}, {"score": 0.003539252646181146, "phrase": "basic_observables"}, {"score": 0.003447035529485425, "phrase": "separation_theorem"}, {"score": 0.0031289290660162145, "phrase": "new_type_system"}, {"score": 0.002967931416941965, "phrase": "special_type_construction"}, {"score": 0.002555247330102505, "phrase": "new_typing_discipline"}, {"score": 0.0024451427672857458, "phrase": "new_computational_behaviors"}, {"score": 0.002258745901862197, "phrase": "previous_type_systems"}, {"score": 0.0022192891418394514, "phrase": "lambda_mu-calculi"}, {"score": 0.0021613897794439227, "phrase": "new_typed_computational_behaviors"}, {"score": 0.0021049977753042253, "phrase": "stream_interpretation"}], "paper_keywords": ["Languages", " Theory", " Bohm theorem", " classical lambda-calculus", " confluence", " delimited control", " lambda mu-calculus", " streams", " type system"], "paper_abstract": "Lambda mu-calculus is a Bohm-complete extension of Parigot's lambda mu-calculus closely related with delimited control in functional programming. In this article, we investigate the meta- theory of untyped Lambda mu-calculus by proving confluence of the calculus and characterizing the basic observables for the Separation theorem, canonical normal forms. Then, we define Lambda(S), a new type system for Lambda mu-calculus that contains a special type construction for streams, and prove that strong normalization and type preservation hold. Thanks to the new typing discipline of Lambda(S), new computational behaviors can be observed, which were forbidden in previous type systems for lambda mu-calculi. Those new typed computational behaviors witness the stream interpretation of Lambda mu-calculus.", "paper_title": "Typing Streams in the Lambda mu-Calculus", "paper_id": "WOS:000280546300008"}