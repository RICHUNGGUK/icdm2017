{"auto_keywords": [{"score": 0.048839643896770965, "phrase": "energy-aware_disk_scheduling_algorithm"}, {"score": 0.009010637910673342, "phrase": "energy_consumption"}, {"score": 0.004583878086896926, "phrase": "major_factors"}, {"score": 0.004494570360108983, "phrase": "hard_disk"}, {"score": 0.004465187726543722, "phrase": "mobile_environment"}, {"score": 0.004392565073466714, "phrase": "large_scale_storage_system"}, {"score": 0.004321118442104989, "phrase": "energy-aware_scheduling_technique"}, {"score": 0.0042508289538799905, "phrase": "storage_density"}, {"score": 0.004209202947762995, "phrase": "basic_idea"}, {"score": 0.003993958025223994, "phrase": "standby_mode"}, {"score": 0.003877737556673229, "phrase": "soft_real-time_requirement"}, {"score": 0.003814632693659797, "phrase": "elaborate_model"}, {"score": 0.00376488621224566, "phrase": "energy_consumption_characteristics"}, {"score": 0.0037157860530065336, "phrase": "mode_transition"}, {"score": 0.003631390978147703, "phrase": "respective_disk_operating_schedule"}, {"score": 0.003445591238183763, "phrase": "related_concerns"}, {"score": 0.0032908057622663732, "phrase": "disk_scheduling_framework"}, {"score": 0.0032054891061528896, "phrase": "outstanding_issues"}, {"score": 0.003091767402370757, "phrase": "hard_disk_firmware_level_prefetch_policy"}, {"score": 0.0029334961578930054, "phrase": "disk_bandwidth"}, {"score": 0.0027924625350414655, "phrase": "lock_granularity"}, {"score": 0.002765077844399801, "phrase": "buffer_management"}, {"score": 0.00270221723573854, "phrase": "prototype_software"}, {"score": 0.00268452026617243, "phrase": "energy-aware_scheduling_algorithm"}, {"score": 0.0026321198895843173, "phrase": "proposed_algorithm"}, {"score": 0.0024891269874339553, "phrase": "disk_scheduling_algorithm"}, {"score": 0.002472822097373027, "phrase": "buffer_requirement"}, {"score": 0.002346160830406661, "phrase": "buffer_overhead"}, {"score": 0.002285278663862646, "phrase": "dram_chip"}, {"score": 0.002255431275670053, "phrase": "energy_management"}, {"score": 0.0022406537579986842, "phrase": "modern_mobile_devices"}, {"score": 0.0021682027434117095, "phrase": "energy_efficient_scheduling_algorithm"}, {"score": 0.0021328586481696157, "phrase": "important_guideline"}, {"score": 0.0021188825171510094, "phrase": "capacity_planning"}, {"score": 0.0021049977753042253, "phrase": "future_energy_efficient_mobile_devices"}], "paper_keywords": ["disk scheduling", " energy management", " multimedia", " soft real-time", " mobile device"], "paper_abstract": "In this work, we develop energy-aware disk scheduling algorithm for soft real-time I/O. Energy consumption is one of the major factors which bar the adoption of hard disk in mobile environment. Heat dissipation of large scale storage system also calls for an energy-aware scheduling technique to further increase the storage density. The basic idea in this work is to properly determine the I/O burst size so that device can be in standby mode between consecutive I/O bursts and that it can satisfy the soft real-time requirement. We develop an elaborate model which incorporates the energy consumption characteristics, overhead of mode transition in determining the appropriate I/O burst size and the respective disk operating schedule. Efficacy of energy-aware disk scheduling algorithm greatly relies on not only disk scheduling algorithm itself but also various operating system and device firmware related concerns. It is crucial that the various operating system level and device level features need to be properly addressed within disk scheduling framework. Our energy-aware disk scheduling algorithm successfully addresses a number of outstanding issues. First, we examine the effect of OS and hard disk firmware level prefetch policy and incorporate its effect in our disk scheduling framework. Second, our energy aware scheduling framework can allocate a certain fraction of disk bandwidth to handle sporadically arriving non real-time I/O's. Third, we examine the relationship between lock granularity of the buffer management and energy consumption. We develop a prototype software with energy-aware scheduling algorithm. In our experiment, proposed algorithm can reduce the energy consumption to one fourth if we use energy-aware disk scheduling algorithm. However, energy-aware disk scheduling algorithm increases buffer requirement significantly, e.g., from 4 to 140 KByte. We carefully argue that the buffer overhead is still justifiable given the cost of DRAM chip and importance of energy management in modern mobile devices. The result of our work not only provides the energy efficient scheduling algorithm but also provides an important guideline in capacity planning of future energy efficient mobile devices.", "paper_title": "Energy-aware disk scheduling for soft real-time I/O requests", "paper_id": "WOS:000252807100008"}