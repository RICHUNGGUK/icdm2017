{"auto_keywords": [{"score": 0.04274518365190484, "phrase": "motion_vectors"}, {"score": 0.015719716506582538, "phrase": "prediction_vectors"}, {"score": 0.004566954456805558, "phrase": "new_fast_motion_estimation_technique"}, {"score": 0.004506968388996092, "phrase": "spatial_and_temporal_correlation"}, {"score": 0.004331675965350876, "phrase": "motion_vector"}, {"score": 0.0039748192550806815, "phrase": "statistical_analyses"}, {"score": 0.003820144626025562, "phrase": "different_neighbouring_blocks"}, {"score": 0.0037450707321601963, "phrase": "prediction_process"}, {"score": 0.0035993041437026225, "phrase": "dynamic_sorting"}, {"score": 0.0034363735647539267, "phrase": "suggested_algorithm"}, {"score": 0.0033245147666408157, "phrase": "neighbouring_blocks"}, {"score": 0.003153041030690117, "phrase": "search_procedure"}, {"score": 0.003010250522930773, "phrase": "search_centre"}, {"score": 0.0028739078688746374, "phrase": "search_window"}, {"score": 0.0027256122357680393, "phrase": "search_area"}, {"score": 0.002294369814584028, "phrase": "simulation_results"}, {"score": 0.002234358539133758, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "compatible_or_superior_performance"}], "paper_keywords": ["motion estimation", " prediction vectors", " video compression"], "paper_abstract": "In this paper we present a new fast motion estimation technique using spatial and temporal correlation among motion vectors. The motion vector of a block can be predicted from the motion vectors of its neighbouring blocks. Statistical analyses show that the role of different neighbouring blocks in the prediction process changes with time. A dynamic sorting routine is offered to let the suggested algorithm use the motion vectors of neighbouring blocks that are more likely to help the search procedure. By using these motion vectors a search centre is located, around which a search window is placed. The size of the search area is dependent on the number of prediction vectors that are used. We try to design an algorithm that can easily be implemented in hardware. Simulation results show that the proposed algorithm, while being simpler than many fast motion estimation algorithms, has compatible or superior performance.", "paper_title": "Fast block motion estimation based on sorting of prediction vectors", "paper_id": "WOS:000290915700004"}