{"auto_keywords": [{"score": 0.04469045542220274, "phrase": "condor_pools"}, {"score": 0.009271008932649158, "phrase": "nearby_resources"}, {"score": 0.00481495049065317, "phrase": "condors"}, {"score": 0.004755058979906079, "phrase": "condor"}, {"score": 0.004695900553353526, "phrase": "high_throughput_computing"}, {"score": 0.004637478829869904, "phrase": "off-the-shelf_cost-effective_components"}, {"score": 0.0040916230716372265, "phrase": "wide_area"}, {"score": 0.0038191874409949423, "phrase": "current_flocking_mechanism"}, {"score": 0.0037480753312398754, "phrase": "static_configurations"}, {"score": 0.003369322866499541, "phrase": "resource_discovery"}, {"score": 0.003327349929456035, "phrase": "distributed_condor_pools"}, {"score": 0.0032858981413454802, "phrase": "peer-to-peer_mechanisms"}, {"score": 0.0028625406368744995, "phrase": "long_distances"}, {"score": 0.0027054473441439422, "phrase": "synthetic_job_trace"}, {"score": 0.002655017467085696, "phrase": "self-organized_flocking"}, {"score": 0.0026055251533586804, "phrase": "maximum_job_wait_time"}, {"score": 0.002525074485615743, "phrase": "heavily_loaded_pool"}, {"score": 0.0021049977753042253, "phrase": "physical_network"}], "paper_keywords": ["distributed resource discovery", " Condor", " flocking", " peer-to-peer"], "paper_abstract": "Condor enables high throughput computing using off-the-shelf cost-effective components. It also supports flocking, a mechanism for sharing resources among Condor pools. Since Condor pools distributed over a wide area can have dynamically changing availability and sharing preferences, the current flocking mechanism based on static configurations can limit the potential of sharing resources across Condor pools. This paper presents a technique for resource discovery in distributed Condor pools using peer-to-peer mechanisms that are self-organizing, fault-tolerant, scalable, and locality-aware. Locality-awareness guarantees that applications are not shipped across long distances when nearby resources are available. Measurements using a synthetic job trace show that self-organized flocking reduces the maximum job wait time in queue for a heavily loaded pool by a factor of 10 compared to without flocking. Simulations of 1000 Condor pools are also presented and the results confirm that our technique discovers and utilizes nearby resources in the physical network. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "A self-organizing flock of Condors", "paper_id": "WOS:000234656800010"}