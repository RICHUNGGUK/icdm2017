{"auto_keywords": [{"score": 0.04964156968469261, "phrase": "root_framework"}, {"score": 0.044021069003900376, "phrase": "neural_network"}, {"score": 0.04101817306248832, "phrase": "uncertainty_estimation"}, {"score": 0.03485917626028694, "phrase": "distributed_program"}, {"score": 0.03455018268948868, "phrase": "test_data"}, {"score": 0.004698514007994158, "phrase": "bayesian_neural_network_algorithm"}, {"score": 0.004641351004344458, "phrase": "tmva_package"}, {"score": 0.004406046514470312, "phrase": "brun"}, {"score": 0.004234129588974058, "phrase": "conventional_utilization"}, {"score": 0.004144350280534405, "phrase": "new_implementation"}, {"score": 0.004081385289516914, "phrase": "non-parametric_regression_tool"}, {"score": 0.004031699976413366, "phrase": "fitting_probabilities"}, {"score": 0.003958299299658418, "phrase": "cost_function_selection"}, {"score": 0.0039341294012600085, "phrase": "complexity_control"}, {"score": 0.0038271712887391015, "phrase": "high_energy_physics"}, {"score": 0.0037231102027070724, "phrase": "root_release"}, {"score": 0.0036461711795705704, "phrase": "program"}, {"score": 0.0036107898615445797, "phrase": "tmva-bnn_catalogue"}, {"score": 0.0034804536625952596, "phrase": "cpc_program_library"}, {"score": 0.003459191419478298, "phrase": "queen's_university"}, {"score": 0.0034380591315377167, "phrase": "belfast"}, {"score": 0.003417054482155433, "phrase": "n._ireland"}, {"score": 0.0033754361115329295, "phrase": "bsd"}, {"score": 0.003050750896241337, "phrase": "tar.gz_programming_language"}, {"score": 0.002949598537993663, "phrase": "unix-like_operating_system_operating_system"}, {"score": 0.002886977102894829, "phrase": "application_programs"}, {"score": 0.0028430608076324727, "phrase": "fedora_and_scientific"}, {"score": 0.0028344219245663316, "phrase": "linux"}, {"score": 0.0027912746078729636, "phrase": "external"}, {"score": 0.002766502826168214, "phrase": "root"}, {"score": 0.0026171728120512037, "phrase": "multivariate_distributions_solution_method"}, {"score": 0.0025537472239953807, "phrase": "bayesian_statistical_interpretation"}, {"score": 0.002499508839669243, "phrase": "bayesian_marginalizations"}, {"score": 0.002453934333239467, "phrase": "automatic_complexity_control"}, {"score": 0.0024018107447434022, "phrase": "time_consumption"}, {"score": 0.002329258721870127, "phrase": "input_sample"}, {"score": 0.002265833357217618, "phrase": "training_iterations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bayesian Neural Network", " TMVA", " ROOT", " Regression"], "paper_abstract": "We present a Bayesian Neural Network algorithm implemented in the TMVA package (Hecker et al., 2007 [1]), within the ROOT framework (Brun and Rademakers, 1997 [2]). Comparing to the conventional utilization of Neural Network as discriminator. this new implementation has more advantages as a non-parametric regression tool, particularly for fitting probabilities. It provides functionalities including cost function selection, complexity control and uncertainty estimation. An example of such application in High Energy Physics is shown. The algorithm is available with ROOT release later than 5.29. Program summary Program title: TMVA-BNN Catalogue identifier: AEJX_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEJX_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: BSD license No. of lines in distributed program, including test data, etc.: 5094 No. of bytes in distributed program, including test data, etc.: 1.320,987 Distribution format: tar.gz Programming language: C++ Computer: Any computer system or cluster with C++ compiler and UNIX-like operating system Operating system: Most UNIX/Linux systems. The application programs were thoroughly tested under Fedora and Scientific Linux CERN. Classification: 11.9 External routines: ROOT package version 5.29 or higher (http://root.cern.ch) Nature of problem: Non-parametric fitting of multivariate distributions Solution method: An implementation of Neural Network following the Bayesian statistical interpretation. Uses Laplace approximation for the Bayesian marginalizations. Provides the functionalities of automatic complexity control and uncertainty estimation. Running time: Time consumption for the training depends substantially on the size of input sample, the NN topology, the number of training iterations. etc. For the example in this manuscript, about 7 min was used on a PC/Linux with 2.0 CHz processors. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A program for the Bayesian Neural Network in the ROOT framework", "paper_id": "WOS:000295769700020"}