{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "two-colored_pixels"}, {"score": 0.004746065479362881, "phrase": "generic_tool"}, {"score": 0.0047006879240764935, "phrase": "image_processing"}, {"score": 0.004545240514015278, "phrase": "basic_operator"}, {"score": 0.004437349839203418, "phrase": "supporting_data_structure"}, {"score": 0.004208881856146758, "phrase": "regular_grid"}, {"score": 0.004168618849008299, "phrase": "square_pixels"}, {"score": 0.004030695216899165, "phrase": "two-colored_pixel_representation"}, {"score": 0.003934970057482768, "phrase": "image_resolution"}, {"score": 0.0038415095105632157, "phrase": "n_x_n_pixels"}, {"score": 0.0035741900278634616, "phrase": "constant_colors"}, {"score": 0.0034392837410790293, "phrase": "standard_mono-colored_pixel_images"}, {"score": 0.0034063576796640603, "phrase": "two-colored_pixel_images"}, {"score": 0.0032777653153451265, "phrase": "hierarchical_algorithm"}, {"score": 0.003215295260684715, "phrase": "cuda-based_implementation"}, {"score": 0.0030790429005600898, "phrase": "classical_pixel_representations"}, {"score": 0.0029914213495838998, "phrase": "minimal_geometric_information"}, {"score": 0.002948547333717581, "phrase": "underlying_image_region"}, {"score": 0.002677964894127131, "phrase": "interactive_brush_tool"}, {"score": 0.0026395715432958665, "phrase": "realtime_performance"}, {"score": 0.0026142814606853037, "phrase": "image_abstraction"}, {"score": 0.0025892330566358503, "phrase": "non-photorealistic_filtering"}, {"score": 0.0025034338848015166, "phrase": "realtime_solution"}, {"score": 0.0024088451312725924, "phrase": "linear_minimization_problem"}, {"score": 0.0023743009016047424, "phrase": "regular_or_even_adaptive_two-colored_pixel_image"}, {"score": 0.002208853811052348, "phrase": "video_volume"}, {"score": 0.0021049977753042253, "phrase": "video_retargeting"}], "paper_keywords": [""], "paper_abstract": "In this paper we show how to use two-colored pixels as a generic tool for image processing. We apply two-colored pixels as a basic operator as well as a supporting data structure for several image processing applications. Traditionally, images are represented by a regular grid of square pixels with one constant color each. In the two-colored pixel representation, we reduce the image resolution and replace blocks of N x N pixels by one square that is split by a (feature) line into two regions with constant colors. We show how the conversion of standard mono-colored pixel images into two-colored pixel images can be computed efficiently by applying a hierarchical algorithm along with a CUDA-based implementation. Two-colored pixels overcome some of the limitations that classical pixel representations have, and their feature lines provide minimal geometric information about the underlying image region that can be effectively exploited for a number of applications. We show how to use two-colored pixels as an interactive brush tool, achieving realtime performance for image abstraction and non-photorealistic filtering. Additionally, we propose a realtime solution for image retargeting, defined as a linear minimization problem on a regular or even adaptive two-colored pixel image. The concept of two-colored pixels can be easily extended to a video volume, and we demonstrate this for the example of video retargeting.", "paper_title": "Two-Colored Pixels", "paper_id": "WOS:000278182500051"}