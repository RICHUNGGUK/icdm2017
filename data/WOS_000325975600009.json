{"auto_keywords": [{"score": 0.04675404263653011, "phrase": "many-core_soc."}, {"score": 0.042646835916719104, "phrase": "energy_consumption"}, {"score": 0.034429992434369436, "phrase": "shared_memory"}, {"score": 0.00481495049065317, "phrase": "many-core_soc"}, {"score": 0.004757643419056999, "phrase": "local_memory_constraint"}, {"score": 0.004617328272121826, "phrase": "extensive_research"}, {"score": 0.004562362497952548, "phrase": "mapping_and_scheduling_tasks"}, {"score": 0.004271490815763164, "phrase": "communication_types"}, {"score": 0.003999089046152065, "phrase": "local_memory_usage"}, {"score": 0.0037664981403399064, "phrase": "automatic_mapping"}, {"score": 0.0033011569787033297, "phrase": "message_passing"}, {"score": 0.0030353401945270755, "phrase": "proper_type"}, {"score": 0.002790867657645595, "phrase": "energy-delay_product"}, {"score": 0.002708399936381754, "phrase": "optimization_problem"}, {"score": 0.0026126405272417783, "phrase": "probabilistic_algorithm"}, {"score": 0.002373472641477602, "phrase": "pipelined_scheduling"}, {"score": 0.0022895278869126848, "phrase": "modified_iterative_modulo_scheduling_technique"}], "paper_keywords": ["Many-core", " mapping", " memory constraint", " network-on-chip", " scheduling"], "paper_abstract": "There has been extensive research on mapping and scheduling tasks on a many-core SoC. However, none considers the optimization of communication types, which can significantly affect performance, energy consumption, and local memory usage of the SoC. This paper presents an approach to automatic mapping and scheduling of tasks and communications on a many-core SoC. The key idea is to decide the type of each communication between message passing and shared memory when we do the mapping and scheduling. By assigning a proper type to each communication, we can optimize the energy consumption, performance, or energy-delay product. To solve the optimization problem, the approach adopts a probabilistic algorithm coupled with some heuristics. To enhance throughput of the system, it performs software pipelined scheduling of the tasks using a modified iterative modulo scheduling technique. Experiments show that our algorithm achieves on average 50.1% lower energy consumption, 21.0% higher throughput, and 64.9% lower energy- delay product, compared to shared memory only communication.", "paper_title": "Mapping and Scheduling of Tasks and Communications on Many-Core SoC Under Local Memory Constraint", "paper_id": "WOS:000325975600009"}