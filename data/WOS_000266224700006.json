{"auto_keywords": [{"score": 0.043891862951523725, "phrase": "clone_detection_techniques"}, {"score": 0.024886788525675715, "phrase": "current_clone_detectors"}, {"score": 0.00481495049065317, "phrase": "code_clone_detection_techniques"}, {"score": 0.004570491683870396, "phrase": "software_clone_detection"}, {"score": 0.004370814742381778, "phrase": "qualitative_comparison"}, {"score": 0.004087469540575263, "phrase": "large_amount"}, {"score": 0.004012061349250865, "phrase": "coherent_conceptual_framework"}, {"score": 0.0039380388343479384, "phrase": "background_concepts"}, {"score": 0.0037658881407605445, "phrase": "current_techniques"}, {"score": 0.0031257046538823354, "phrase": "classified_techniques"}, {"score": 0.0030225753906647935, "phrase": "editing_scenarios"}, {"score": 0.0025844090835070986, "phrase": "particular_set"}, {"score": 0.0025178072071268534, "phrase": "primary_contributions"}, {"score": 0.0022261705957258484, "phrase": "different_clone_types"}, {"score": 0.0022013916728990564, "phrase": "qualitative_evaluation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software clone", " Clone detection", " Comparison", " Scenario-based evaluation"], "paper_abstract": "Over the last decade many techniques and tools for software clone detection have been proposed. In this paper, we provide a qualitative comparison and evaluation of the current state-of-the-art in clone detection techniques and tools, and organize the large amount of information into a coherent conceptual framework. We begin with background concepts, a generic clone detection process and an overall taxonomy of current techniques and tools. We then classify, compare and evaluate the techniques and tools in two different dimensions. First, we classify and compare approaches based on a number of facets, each of which has a set of (possibly overlapping) attributes. Second, we qualitatively evaluate the classified techniques and tools with respect to a taxonomy of editing scenarios designed to model the creation of Type-1, Type-2, Type-3 and Type-4 clones. Finally, we provide examples of how one might use the results of this study to choose the most appropriate clone detection tool or technique in the context of a particular set of goals and constraints. The primary contributions of this paper are: ( 1) a schema for classifying clone detection techniques and tools and a classification of current clone detectors based on this schema, and (2) a taxonomy of editing scenarios that produce different clone types and a qualitative evaluation of current clone detectors based on this taxonomy. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Comparison and evaluation of code clone detection techniques and tools: A qualitative approach", "paper_id": "WOS:000266224700006"}