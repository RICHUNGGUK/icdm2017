{"auto_keywords": [{"score": 0.044698494795874434, "phrase": "hardware_resources"}, {"score": 0.015415012996094952, "phrase": "reduced_complexity_min-sum_algorithm"}, {"score": 0.004815076694797895, "phrase": "ldpc"}, {"score": 0.004605258779434384, "phrase": "low-density_parity-check"}, {"score": 0.004470539706227421, "phrase": "conventional_algorithms"}, {"score": 0.004404665295368511, "phrase": "sum-product"}, {"score": 0.004361278921363586, "phrase": "min-sum"}, {"score": 0.0043183186953102805, "phrase": "large_amount"}, {"score": 0.004212759658511567, "phrase": "rather_simplistic_way"}, {"score": 0.0040491842732233154, "phrase": "intrinsic_message_quantization"}, {"score": 0.003911253966141701, "phrase": "bit_error_rate"}, {"score": 0.003685604033479918, "phrase": "resource_efficient_ldpc_decoder"}, {"score": 0.0034901729647741353, "phrase": "inter-connect_complexity"}, {"score": 0.003421697038352743, "phrase": "extrinsic_message_length"}, {"score": 0.0033050703534275717, "phrase": "check_node_operation"}, {"score": 0.0032241994368246065, "phrase": "algorithmic_level"}, {"score": 0.0031609252620168446, "phrase": "proposed_decoder"}, {"score": 0.0031297538950335233, "phrase": "ber_performance"}, {"score": 0.0029199689963238726, "phrase": "massive_ber_performance_degradation"}, {"score": 0.002806449337145999, "phrase": "algorithmic_complexity"}, {"score": 0.002737745536992088, "phrase": "variable_node"}, {"score": 0.0026973310437053573, "phrase": "significant_savings"}, {"score": 0.0025924443774713473, "phrase": "ldpc_decoder"}, {"score": 0.0025541693207036167, "phrase": "code_length"}, {"score": 0.002454835845644037, "phrase": "xilinx_fpga"}, {"score": 0.002418587525752333, "phrase": "proposed_algorithmic"}, {"score": 0.0023947191132328233, "phrase": "hardware_enhancements"}, {"score": 0.002212040873849046, "phrase": "fpga_slices"}, {"score": 0.002168586864007222, "phrase": "higher_throughput"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Digital communication", " Error correction coding", " Iterative decoding", " Field programmable gate array", " Logic design"], "paper_abstract": "Hardware implementation of Low-Density Parity-Check (LDPC) decoders using conventional algorithms such as Sum-Product or Min-Sum requires large amount of hardware resources. A rather simplistic way to reduce hardware resources is to reduce the intrinsic message quantization. However this adversely affects the bit error rate (BER) performance significantly. In this paper, a resource efficient LDPC decoder based on a reduced complexity Min-Sum algorithm is presented. It reduces the inter-connect complexity by restricting the extrinsic message length to 2 bits and also simplifies the check node operation. Simulation at the algorithmic level shows that the proposed decoder achieves BER performance better than that of a 3-bit Min-Sum decoder, and therefore addresses the problem of massive BER performance degradation of a 2-bit Min-Sum decoder. The reduction in algorithmic complexity and further hardware optimization of the variable node leads to significant savings in hardware resources compared to 3-bit Min-Sum. An LDPC decoder with a code length of 1152 bits has been implemented on a Xilinx FPGA using the proposed algorithmic and hardware enhancements. With a 0.1 dB BER performance gain to that of 3-bit Min-Sum decoder, the proposed decoder saves about 18% of FPGA slices and provides a higher throughput. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "An area efficient LDPC decoder using a reduced complexity min-sum algorithm", "paper_id": "WOS:000301767100004"}