{"auto_keywords": [{"score": 0.04366909172920831, "phrase": "crowdflower"}, {"score": 0.00481495049065317, "phrase": "integrating_custom_crowdsourcing_processes"}, {"score": 0.004429566229017728, "phrase": "open_call"}, {"score": 0.004273951631010383, "phrase": "online_cs_platforms"}, {"score": 0.004206548500039536, "phrase": "amazon_mechanical_turk"}, {"score": 0.00405873677211836, "phrase": "tremendous_growth"}, {"score": 0.0038390240716280302, "phrase": "data_collection"}, {"score": 0.0037784540167266497, "phrase": "human_computation"}, {"score": 0.0036311617742547167, "phrase": "inherent_limitations"}, {"score": 0.0031592690527974285, "phrase": "multiple_tasks"}, {"score": 0.0030481444896915504, "phrase": "crowdsourced_tasks"}, {"score": 0.0028715299874549245, "phrase": "flexible_cs_platform"}, {"score": 0.002694375425481759, "phrase": "custom_cs_logics"}, {"score": 0.00267301171407926, "phrase": "individual_and_structured_tasks"}, {"score": 0.002599560451267203, "phrase": "bpmn-based_modeling_language"}, {"score": 0.002429451930463481, "phrase": "dedicated_visual_editor"}, {"score": 0.0023253461255420436, "phrase": "standard_bpm_technology"}, {"score": 0.0022614266476954467, "phrase": "existing_software"}, {"score": 0.002147333949483224, "phrase": "case_study"}, {"score": 0.0021218313648947926, "phrase": "crowd-based_mining"}, {"score": 0.0021049977753042253, "phrase": "mashup_model_patterns"}], "paper_keywords": ["Design", " Languages", " Human Factors", " Crowdsourcing", " processes", " tactics", " Crowd Computer", " BPMN4Crowd"], "paper_abstract": "Crowdsourcing (CS) is the outsourcing of a unit of work to a crowd of people via an open call for contributions. Thanks to the availability of online CS platforms, such as Amazon Mechanical Turk or CrowdFlower, the practice has experienced a tremendous growth over the past few years and demonstrated its viability in a variety of fields, such as data collection and analysis or human computation. Yet it is also increasingly struggling with the inherent limitations of these platforms: each platform has its own logic of how to crowdsource work (e.g., marketplace or contest), there is only very little support for structured work (work that requires the coordination of multiple tasks), and it is hard to integrate crowdsourced tasks into state-of-the-art business process management (BPM) or information systems. We attack these three shortcomings by (1) developing a flexible CS platform (we call it Crowd Computer, or CC) that allows one to program custom CS logics for individual and structured tasks, (2) devising a BPMN-based modeling language that allows one to program CC intuitively, (3) equipping the language with a dedicated visual editor, and (4) implementing CC on top of standard BPM technology that can easily be integrated into existing software and processes. We demonstrate the effectiveness of the approach with a case study on the crowd-based mining of mashup model patterns.", "paper_title": "Modeling, Enacting, and Integrating Custom Crowdsourcing Processes", "paper_id": "WOS:000355668700002"}