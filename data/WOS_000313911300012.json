{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "coq"}, {"score": 0.01731797115500252, "phrase": "haskell"}, {"score": 0.0043258453436258405, "phrase": "window_manager"}, {"score": 0.0041316803676012155, "phrase": "proof_assistant"}, {"score": 0.0034911335714333507, "phrase": "core_functionality"}, {"score": 0.0028170314398963704, "phrase": "coq_proof_assistant"}, {"score": 0.0023435920614377306, "phrase": "technical_challenges"}, {"score": 0.0022041312401435346, "phrase": "coq_code"}, {"score": 0.0021049977753042253, "phrase": "haskell_project"}], "paper_keywords": ["Coq", " dependent types", " formal verification", " functional programming", " Haskell", " program extraction", " interactive proof assistants", " xmonad"], "paper_abstract": "This report documents the insights gained from implementing the core functionality of xmonad, a popular window manager written in Haskell, in the Coq proof assistant. Rather than focus on verification, this report outlines the technical challenges involved with incorporating Coq code in a Haskell project.", "paper_title": "xmonad in Coq (Experience Report) Programming a Window Manager with a Proof Assistant", "paper_id": "WOS:000313911300012"}