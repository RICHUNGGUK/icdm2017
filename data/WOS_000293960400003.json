{"auto_keywords": [{"score": 0.015554487125530585, "phrase": "access_control_rules"}, {"score": 0.01365203059966879, "phrase": "expressing_rules"}, {"score": 0.00481495049065317, "phrase": "access_control_models"}, {"score": 0.004131135118662576, "phrase": "specific_subjects"}, {"score": 0.004043744293248725, "phrase": "role-based_access_control"}, {"score": 0.004015030491977356, "phrase": "rbac"}, {"score": 0.003633652174971415, "phrase": "specifying_rules"}, {"score": 0.003607834976869384, "phrase": "abstract_subjects"}, {"score": 0.0035822005511799036, "phrase": "abstract_actions"}, {"score": 0.0035567476133074533, "phrase": "abstract_objects"}, {"score": 0.003383552654319383, "phrase": "abstract_or_concrete_subjects"}, {"score": 0.003150612723641925, "phrase": "concrete-_and_abstract-based_access_control_model"}, {"score": 0.0029971349193857093, "phrase": "first_order_predicate_logic"}, {"score": 0.0021582723621960676, "phrase": "different_types"}, {"score": 0.0021049977753042253, "phrase": "cardinality_constraints"}], "paper_keywords": ["Computer and data security", " Access control models", " Access control policies", " Access control rules", " Access privileges", " Role based access control", " Organization based access control"], "paper_abstract": "Access control models allow expressing access control rules (also called policies) stating that certain subjects (or users) have or do not have the right (or privilege) to access certain objects in order to execute certain actions under certain conditions. Several existing models allow expressing rules only for specific subjects, objects and actions. Role-based access control (RBAC) introduced the notion of role, which is an abstraction over subjects. Organization-based access control (OrBAC) generalized further, by allowing specifying rules involving abstract subjects, abstract actions and abstract objects. We propose here a model that allows expressing rules involving any combinations of abstract or concrete subjects, actions and objects, as well as conditions over them. For this reason, our model is called concrete- and abstract-based access control model (CABAC). The semantics of our model is expressed in terms of first order predicate logic. Temporal, spatial, knowledge and historical contexts can be specified and combined. We show how in this model it is possible to express hierarchies of subjects, objects and actions as well as propagation of policies over hierarchies. Further, while in most models subjects, objects and actions, whether concrete or abstract, must be specified statically, it is possible in our model to specify subjects, actions and objects dynamically, i.e., according to conditions that can vary over time. Access control rules can also be explicitly revoked and subjected to different types of constraints, among which are cardinality constraints and separation of duties.", "paper_title": "Concrete- and abstract-based access control", "paper_id": "WOS:000293960400003"}