{"auto_keywords": [{"score": 0.04006150269648473, "phrase": "multi-way_combinations"}, {"score": 0.015067414594741625, "phrase": "multi-way_testing"}, {"score": 0.014010645057457399, "phrase": "first_strategy"}, {"score": 0.00481495049065317, "phrase": "multi-way_combinatorial_testing"}, {"score": 0.004208282550386197, "phrase": "existing_strategy"}, {"score": 0.004007083686875716, "phrase": "pairwise_testing"}, {"score": 0.003459191419478298, "phrase": "explicit_enumeration"}, {"score": 0.002949598537993663, "phrase": "second_strategy"}, {"score": 0.0028430608076324727, "phrase": "recursive_construction_procedure"}, {"score": 0.002336414425972225, "phrase": "multi-way_testing_tool"}, {"score": 0.0023079225317714815, "phrase": "fireeye"}, {"score": 0.0022382002476510573, "phrase": "analytic_and_experimental_evaluation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["combinatorial testing", " interaction testing", " multi-way testing", " software testing"], "paper_abstract": "This paper presents two strategies for multi-way testing (i.e. t-way testing with t>2). The first strategy generalizes an existing strategy, called in-parameter-order, from pairwise testing to multi-way testing. This strategy requires all multi-way combinations to be explicitly enumerated. When the number of multi-way combinations is large, however, explicit enumeration can be prohibitive in terms of both the space for storing these combinations and the time needed to enumerate them. To alleviate this problem, the second strategy combines the first strategy with a recursive construction procedure to reduce the number of multi-way combinations that have to be enumerated. Both strategies are deterministic, i.e. they always produce the same test set for the same system configuration. This paper reports a multi-way testing tool called FireEye, and provides an analytic and experimental evaluation of the two strategies. Copyright (C) 2007 John Wiley & Sons, Ltd.", "paper_title": "IPOG/IPOG-D: efficient test generation for multi-way combinatorial testing", "paper_id": "WOS:000259309100002"}