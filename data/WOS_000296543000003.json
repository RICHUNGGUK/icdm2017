{"auto_keywords": [{"score": 0.040558346923894165, "phrase": "mapreduce"}, {"score": 0.00481495049065317, "phrase": "optimal_scheduling"}, {"score": 0.004775918707955445, "phrase": "processing_networks"}, {"score": 0.004641770842098217, "phrase": "utility_optimal_scheduling"}, {"score": 0.004604136423327813, "phrase": "general_processing_networks"}, {"score": 0.004566805735863274, "phrase": "random_arrivals"}, {"score": 0.004529776351030488, "phrase": "network_conditions"}, {"score": 0.004420472010542188, "phrase": "traditional_data_networks"}, {"score": 0.004244102948402086, "phrase": "new_commodities"}, {"score": 0.00399260264462941, "phrase": "model_problems"}, {"score": 0.003944112858235306, "phrase": "in-network_data_fusion"}, {"score": 0.003755949722774176, "phrase": "scheduling_actions"}, {"score": 0.003680212979775528, "phrase": "underflow_problem"}, {"score": 0.0035767311154996464, "phrase": "required_components"}, {"score": 0.003419943984098415, "phrase": "novel_methodology"}, {"score": 0.00335095982979018, "phrase": "online_algorithms"}, {"score": 0.0032302647179383915, "phrase": "perturbed_max-weight_algorithm"}, {"score": 0.003229631799806354, "phrase": "pmw"}, {"score": 0.0031522185379771056, "phrase": "optimal_utility"}, {"score": 0.0029773436815290215, "phrase": "usual_max-weight_algorithm"}, {"score": 0.0029172611440429963, "phrase": "queue_levels"}, {"score": 0.0028935680100446583, "phrase": "non-zero_values"}, {"score": 0.002755384932325921, "phrase": "novel_combination"}, {"score": 0.0027330029055210926, "phrase": "lyapunov_drift_analysis"}, {"score": 0.0024480094603893175, "phrase": "optimal_value"}, {"score": 0.002350152413458658, "phrase": "average_network_backlog"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Processing network", " Queueing theory", " Lyapunov drift", " Dynamic control", " Perturbation"], "paper_abstract": "We consider the problem of utility optimal scheduling in general processing networks with random arrivals and network conditions. These are generalizations of traditional data networks where commodities in one or more queues can be combined to produce new commodities that are delivered to other parts of the network, and can be used to model problems such as in-network data fusion, stream processing, MapReduce scheduling, and grid computing. Scheduling actions are complicated by the underflow problem that arises when some queues with required components go empty. In this paper, we develop a novel methodology for constructing and analyzing online algorithms for such processing networks. Specifically, we develop the Perturbed Max-Weight algorithm (PMW) to achieve optimal utility. The idea of PMW is to perturb the weights used by the usual Max-Weight algorithm to \"push\" queue levels toward non-zero values (avoiding underflows). We then show, using a novel combination of Lyapunov drift analysis and duality theory, that when the perturbations are carefully chosen, PMW is able to achieve a utility that is within O(1/V) of the optimal value for any V >= 1, while ensuring an average network backlog of O(V). The methodology developed here is very general and can also be applied to other problems that involve such underflow constraints. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Utility optimal scheduling in processing networks", "paper_id": "WOS:000296543000003"}