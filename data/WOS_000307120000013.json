{"auto_keywords": [{"score": 0.04009043398040589, "phrase": "test_cases"}, {"score": 0.0075134749104059555, "phrase": "existing_approaches"}, {"score": 0.00481495049065317, "phrase": "multicriteria_optimization"}, {"score": 0.004646258518859209, "phrase": "modified_software_system"}, {"score": 0.004404188306112211, "phrase": "existing_test_cases"}, {"score": 0.004224627834741731, "phrase": "potentially_costly_task"}, {"score": 0.004028326293950714, "phrase": "testing_effort"}, {"score": 0.0036625643243684827, "phrase": "better_chance"}, {"score": 0.0034715658596258018, "phrase": "novel_approach"}, {"score": 0.0033497809969621267, "phrase": "predetermined_number"}, {"score": 0.003251552926963083, "phrase": "existing_test_suite"}, {"score": 0.0031561961485589633, "phrase": "integer_linear_programming_problem"}, {"score": 0.002801849371896573, "phrase": "final_solution"}, {"score": 0.0027522340188241446, "phrase": "voting_mechanism"}, {"score": 0.0027034948760997564, "phrase": "selected_subset"}, {"score": 0.0025776913268808124, "phrase": "greedy_algorithm"}, {"score": 0.002532035301903554, "phrase": "minimum_coverage"}, {"score": 0.00248718591918233, "phrase": "iterative_manner"}, {"score": 0.0024431289979171505, "phrase": "proposed_approach"}, {"score": 0.002315574871863272, "phrase": "significant_improvements"}, {"score": 0.0022209780222461587, "phrase": "comparable_results"}], "paper_keywords": ["Software regression testing", " test case selection", " integer programming", " Pareto optimality"], "paper_abstract": "To ensure that a modified software system has not regressed, one approach is to rerun existing test cases. However, this is a potentially costly task. To mitigate the costs, the testing effort can be optimized by executing only a selected subset of the test cases that are believed to have a better chance of revealing faults. This paper proposes a novel approach for selecting and ordering a predetermined number of test cases from an existing test suite. Our approach forms an Integer Linear Programming problem using two different coverage-based criteria, and uses constraint relaxation to find many close-to-optimal solution points. These points are then combined to obtain a final solution using a voting mechanism. The selected subset of test cases is then prioritized using a greedy algorithm that maximizes minimum coverage in an iterative manner. The proposed approach has been empirically evaluated and the results show significant improvements over existing approaches for some cases and comparable results for the rest. Moreover, our approach provides more consistency compared to existing approaches.", "paper_title": "Size-Constrained Regression Test Case Selection Using Multicriteria Optimization", "paper_id": "WOS:000307120000013"}