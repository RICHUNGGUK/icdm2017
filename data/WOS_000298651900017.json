{"auto_keywords": [{"score": 0.04435405953537264, "phrase": "tracing_procedure"}, {"score": 0.04383441248529014, "phrase": "locating_procedure"}, {"score": 0.00481495049065317, "phrase": "program_debugging"}, {"score": 0.004659951478263083, "phrase": "semantic_framework"}, {"score": 0.004621984064678252, "phrase": "automated_debugging"}, {"score": 0.004565609517511076, "phrase": "debugging_process"}, {"score": 0.004329124434198367, "phrase": "first_two_processes"}, {"score": 0.0040052617265655035, "phrase": "failed_test_case"}, {"score": 0.003972607172518598, "phrase": "well-designed_data_structures"}, {"score": 0.0036453427552753533, "phrase": "ill-designed_statements"}, {"score": 0.003372460634140967, "phrase": "structural_operational_semantics"}, {"score": 0.003069230909006614, "phrase": "main_task"}, {"score": 0.0024298350266697905, "phrase": "structural_design_error"}, {"score": 0.0022385401780982204, "phrase": "new_bug"}, {"score": 0.00219311232069446, "phrase": "old_bug"}, {"score": 0.0021049977753042253, "phrase": "logical_design_error"}], "paper_keywords": ["debugging", " operational semantics", " failed test case", " fix-equations"], "paper_abstract": "This work aims to build a semantic framework for automated debugging. A debugging process consists of tracing, locating, and fixing processes consecutively. The first two processes are accomplished by a tracing procedure and a locating procedure, respectively. The tracing procedure reproduces the execution of the failed test case with well-designed data structures and saves necessary information for locating bugs. The locating procedure will use the information obtained from the tracing procedure to locate ill-designed statements and to generate a system of fix-equations, whose solution will be used to fix the bugs. A structural operational semantics is given to define the functions of the tracing and locating procedures. Both of them are proved to terminate. The main task of fixing process is to solve the fix-equations. It turns out that for a given failed test case, there exist four types of fix-equations and three different solutions: 1) The bug is solvable, i.e., there exists a solution of the system of fix-equations, and the program can be repaired. 2) There exists a structural design error in the program, i.e., the system of fix-equations generated at each round of the locating procedure is solvable, but a new bug will arise when the old bug is being fixed. 3) There exists a logical design error, and the system of fix-equations is not solvable.", "paper_title": "A formal semantics for program debugging", "paper_id": "WOS:000298651900017"}