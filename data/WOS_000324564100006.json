{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "qos_optimization"}, {"score": 0.004651057147690674, "phrase": "design_decisions"}, {"score": 0.004029187256595917, "phrase": "good_solution"}, {"score": 0.00393066798511457, "phrase": "single_quality_attribute"}, {"score": 0.003853583126988071, "phrase": "unacceptable_results"}, {"score": 0.0037039021744127783, "phrase": "promising_way"}, {"score": 0.0035424245257172234, "phrase": "multi-objective_optimization"}, {"score": 0.003455765987713262, "phrase": "different_quality_attributes"}, {"score": 0.0031297538950335233, "phrase": "optimal_trade-off"}, {"score": 0.00308357048262018, "phrase": "conflicting_qualities"}, {"score": 0.0030081030319492343, "phrase": "combined_use"}, {"score": 0.0029784342137867776, "phrase": "analytical_optimization_techniques"}, {"score": 0.0029490571526071016, "phrase": "evolutionary_algorithms"}, {"score": 0.0028768722873689432, "phrase": "optimal_set"}, {"score": 0.0028484940955893134, "phrase": "design_alternatives"}, {"score": 0.002618278365749875, "phrase": "analytical_algorithms"}, {"score": 0.002592444377471345, "phrase": "availability-cost_optimization"}, {"score": 0.0025668646315794947, "phrase": "three-dimensional_availability-performance-cost_optimization"}, {"score": 0.0024306105794630246, "phrase": "case_study"}, {"score": 0.0023710856920150574, "phrase": "analytical_step"}, {"score": 0.002336071138145897, "phrase": "better-than-random_starting_population"}, {"score": 0.002168586864007222, "phrase": "availability-cost_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software architecture optimization", " Quality of service", " Availability"], "paper_abstract": "Design decisions for complex, component-based systems impact multiple quality of service (QoS) properties. Often, means to improve one quality property deteriorate another one. In this scenario, selecting a good solution with respect to a single quality attribute can lead to unacceptable results with respect to the other quality attributes. A promising way to deal with this problem is to exploit multi-objective optimization where the objectives represent different quality attributes. The aim of these techniques is to devise a set of solutions, each of which assures an optimal trade-off between the conflicting qualities. Our previous work proposed a combined use of analytical optimization techniques and evolutionary algorithms to efficiently identify an optimal set of design alternatives with respect to performance and costs. This paper extends this approach to more QoS properties by providing analytical algorithms for availability-cost optimization and three-dimensional availability-performance-cost optimization. We demonstrate the use of this approach on a case study, showing that the analytical step provides a better-than-random starting population for the evolutionary optimization, which lead to a speed-up of 28% in the availability-cost case. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Hybrid multi-attribute QoS optimization in component based software systems", "paper_id": "WOS:000324564100006"}