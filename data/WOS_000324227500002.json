{"auto_keywords": [{"score": 0.028896083757596298, "phrase": "matching_pursuit_algorithm"}, {"score": 0.015221958462384989, "phrase": "adaptation_data"}, {"score": 0.00481495049065317, "phrase": "speaker-space-based_speaker_adaptation_methods"}, {"score": 0.004482400730101345, "phrase": "optimal_dimension"}, {"score": 0.004353040792349733, "phrase": "particular_unknown_speaker"}, {"score": 0.004324802749898957, "phrase": "conventional_methods"}, {"score": 0.004241846140860365, "phrase": "ev"}, {"score": 0.00419997182602686, "phrase": "reference_speaker"}, {"score": 0.004065474891313382, "phrase": "sub-optimal_speaker"}, {"score": 0.003935267970727093, "phrase": "new_speaker-space-based_speaker_adaptation_framework"}, {"score": 0.0038092152998069786, "phrase": "mixture_components"}, {"score": 0.003663250792230243, "phrase": "speaker_adaptation_problem"}, {"score": 0.0035923719610602245, "phrase": "speaker-dependent_supervector"}, {"score": 0.003569050665799723, "phrase": "limited_speech_signal_observations"}, {"score": 0.0035343512834706417, "phrase": "redundant_speaker_dictionary"}, {"score": 0.003376813851525222, "phrase": "ev_method"}, {"score": 0.0033006894756949776, "phrase": "best_subspace"}, {"score": 0.0032685906228558706, "phrase": "particular_speaker"}, {"score": 0.003194898129853895, "phrase": "posterior_manner"}, {"score": 0.0031535341431377837, "phrase": "proper_set"}, {"score": 0.0028879529188983524, "phrase": "efficient_redundant_basis_vector_removal_mechanism"}, {"score": 0.0027862576750944277, "phrase": "matching_pursuit_based_speaker_adaptation_method"}, {"score": 0.002543224008253855, "phrase": "projected_gradient_optimization_algorithm"}, {"score": 0.0024456516553345966, "phrase": "good_initial_value"}, {"score": 0.0024297565926197505, "phrase": "experimental_results"}, {"score": 0.0023826870912207303, "phrase": "conventional_testing_methods"}, {"score": 0.0023594945794976493, "phrase": "testing_conditions"}, {"score": 0.0023441581629788347, "phrase": "better_performance"}, {"score": 0.0022249936992104822, "phrase": "proper_mixed_set"}, {"score": 0.002189009136006588, "phrase": "reference_speaker_supervectors"}, {"score": 0.00214659338413584, "phrase": "unknown_speaker_models"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Speaker adaptation", " Speaker subspace", " Compressive sensing", " Matching pursuit", " l(1) regularization"], "paper_abstract": "Speaker-space-based speaker adaptation methods can obtain good performance even if the amount of adaptation data is limited. However, it is difficult to determine the optimal dimension and basis vectors of the subspace for a particular unknown speaker. Conventional methods, such as eigenvoice (EV) and reference speaker weighting (RSW), can only obtain a sub-optimal speaker subspace. In this paper, we present a new speaker-space-based speaker adaptation framework using compressive sensing. The mean vectors of all mixture components of a conventional Gaussian-Mixture-Model-Hidden-Markov-Model (GMM-HMM)-based speech recognition system are concatenated to form a supervector. The speaker adaptation problem is viewed as recovering the speaker-dependent supervector from limited speech signal observations. A redundant speaker dictionary is constructed by a combination of all the training speaker supervectors and the supervectors derived from the EV method. Given the adaptation data, the best subspace for a particular speaker is constructed in a maximum a posterior manner by selecting a proper set of items from this dictionary. Two algorithms, i.e. matching pursuit and l(1) regularized optimization, are adapted to solve this problem. With an efficient redundant basis vector removal mechanism and an iterative updating of the speaker coordinate, the matching pursuit based speaker adaptation method is fast and efficient. The matching pursuit algorithm is greedy and sub-optimal, while direct optimization of the likelihood of the adaptation data with an explicit l(1) regularization term can obtain better approximation of the unknown speaker model. The projected gradient optimization algorithm is adopted and a few iterations of the matching pursuit algorithm can provide a good initial value. Experimental results show that matching pursuit algorithm outperforms the conventional testing methods under all testing conditions. Better performance is obtained when direct l(1) regularized optimization is applied. Both methods can select a proper mixed set of the eigenvoice and reference speaker supervectors automatically for estimation of the unknown speaker models. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Rapid speaker adaptation using compressive sensing", "paper_id": "WOS:000324227500002"}