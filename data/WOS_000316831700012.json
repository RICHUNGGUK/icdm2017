{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "configuration_knowledge-based_software_product_lines"}, {"score": 0.004506968388996092, "phrase": "software_product_line"}, {"score": 0.00433645229352341, "phrase": "ill-formed_products"}, {"score": 0.004265354774450696, "phrase": "safe_composition_problem"}, {"score": 0.0036352070472201086, "phrase": "language_independent_approach"}, {"score": 0.0035755653799043, "phrase": "safe_composition"}, {"score": 0.0034975571855450373, "phrase": "dedicated_configuration_knowledge_models"}, {"score": 0.0034212450542713607, "phrase": "feature_model"}, {"score": 0.0033837135367113004, "phrase": "configuration_knowledge"}, {"score": 0.0033465923623290034, "phrase": "propositional_logic"}, {"score": 0.00327356326590461, "phrase": "alloy_analyzer"}, {"score": 0.002931569771634119, "phrase": "different_compositional_settings"}, {"score": 0.002851790448644913, "phrase": "different_kinds"}, {"score": 0.002758907973783665, "phrase": "case_scenarios"}, {"score": 0.0027286224888843956, "phrase": "eclipse_rcp_components"}, {"score": 0.0025678829712650437, "phrase": "larger_scale_spl"}, {"score": 0.0023249757987087055, "phrase": "analysis_time"}, {"score": 0.002175913488493802, "phrase": "analyzed_spls"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software Product Lines", " Configuration Knowledge", " Safe composition"], "paper_abstract": "Mistakes made when implementing or specifying the models of a Software Product Line (SPL) can result in ill-formed products - the safe composition problem. Such problem can hinder productivity and it might be hard to detect, since SPLs can have thousands of products. In this article, we propose a language independent approach for verifying safe composition of SPLs with dedicated Configuration Knowledge models. We translate feature model and Configuration Knowledge into propositional logic and use the Alloy Analyzer to perform the verification. To provide evidence for the generality of our approach, we instantiate this approach in different compositional settings. We deal with different kinds of assets such as use case scenarios and Eclipse RCP components. We analyze both the code and the requirements for a larger scale SPL, finding problems that affect thousands of products in minutes. Moreover, our evaluation suggests that the analysis time grows linearly with respect to the number of products in the analyzed SPLs. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Safe composition of configuration knowledge-based software product lines", "paper_id": "WOS:000316831700012"}