{"auto_keywords": [{"score": 0.0353919181770561, "phrase": "streamcloud"}, {"score": 0.00481495049065317, "phrase": "scalable_data_streaming_system"}, {"score": 0.004569293780076254, "phrase": "network_security"}, {"score": 0.00451642066363115, "phrase": "large-scale_sensor_networks"}, {"score": 0.004361428012479218, "phrase": "continuous_data_flows"}, {"score": 0.004138813595009761, "phrase": "processing_capacity"}, {"score": 0.004043541331944951, "phrase": "current_stream_processing_engines"}, {"score": 0.003904713104101532, "phrase": "input_load"}, {"score": 0.003837089839193524, "phrase": "single-node_bottlenecks"}, {"score": 0.003662410853488772, "phrase": "static_configurations"}, {"score": 0.0031476068430779367, "phrase": "large_data_stream_volumes"}, {"score": 0.0030572112793962004, "phrase": "novel_parallelization_technique"}, {"score": 0.002884111441153185, "phrase": "independent_sets"}, {"score": 0.002736694413701639, "phrase": "distribution_overhead"}, {"score": 0.0026736111900632934, "phrase": "low_intrusiveness"}, {"score": 0.0026272523687965615, "phrase": "effective_adjustment"}, {"score": 0.002551762519273805, "phrase": "incoming_load"}, {"score": 0.0024640253074497114, "phrase": "dynamic_load"}, {"score": 0.0023932142697579506, "phrase": "computational_resources"}, {"score": 0.0022974765563692776, "phrase": "system_design"}, {"score": 0.0021049977753042253, "phrase": "fully_implemented_system"}], "paper_keywords": ["Data streaming", " scalability", " elasticity"], "paper_abstract": "Many applications in several domains such as telecommunications, network security, large-scale sensor networks, require online processing of continuous data flows. They produce very high loads that requires aggregating the processing capacity of many nodes. Current Stream Processing Engines do not scale with the input load due to single-node bottlenecks. Additionally, they are based on static configurations that lead to either under or overprovisioning. In this paper, we present StreamCloud, a scalable and elastic stream processing engine for processing large data stream volumes. StreamCloud uses a novel parallelization technique that splits queries into subqueries that are allocated to independent sets of nodes in a way that minimizes the distribution overhead. Its elastic protocols exhibit low intrusiveness, enabling effective adjustment of resources to the incoming load. Elasticity is combined with dynamic load balancing to minimize the computational resources used. The paper presents the system design, implementation, and a thorough evaluation of the scalability and elasticity of the fully implemented system.", "paper_title": "StreamCloud: An Elastic and Scalable Data Streaming System", "paper_id": "WOS:000310382800015"}