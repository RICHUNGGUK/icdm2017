{"auto_keywords": [{"score": 0.028725159802424214, "phrase": "oaei"}, {"score": 0.0242524688704516, "phrase": "vmi"}, {"score": 0.00481495049065317, "phrase": "multiple_indexes"}, {"score": 0.004773476989344654, "phrase": "candidate_selection"}, {"score": 0.0047323590206695305, "phrase": "instance_matching"}, {"score": 0.004591202593942391, "phrase": "different_descriptions"}, {"score": 0.004551647527068771, "phrase": "real_objects"}, {"score": 0.0045124316982387315, "phrase": "heterogeneous_data_sources"}, {"score": 0.004435006247087171, "phrase": "rapid_development"}, {"score": 0.004396790930873782, "phrase": "semantic_web"}, {"score": 0.004302680891412643, "phrase": "linked_data"}, {"score": 0.0042656009036320585, "phrase": "automatically_instance_matching"}, {"score": 0.004174287115855492, "phrase": "fundamental_issue"}, {"score": 0.004138309011478741, "phrase": "ontological_data_sharing"}, {"score": 0.003945879572348638, "phrase": "large_scale"}, {"score": 0.00374610869916551, "phrase": "previous_schema_level_ontology_matching_methods"}, {"score": 0.0034204548167213545, "phrase": "scalable_and_efficient_instance_matching_approach"}, {"score": 0.0033909518548844047, "phrase": "vmi."}, {"score": 0.0033471722682967046, "phrase": "multiple_vectors"}, {"score": 0.0033182992967343916, "phrase": "different_kinds"}, {"score": 0.0032471982781283344, "phrase": "ontology_instances"}, {"score": 0.003177615880037735, "phrase": "set_of_inverted_indexes_based_rules"}, {"score": 0.0031230216871739776, "phrase": "primary_matching_candidates"}, {"score": 0.0030560920414081645, "phrase": "user_customized_property_values"}, {"score": 0.002990592465417758, "phrase": "incorrect_matchings"}, {"score": 0.002913837945508097, "phrase": "matching_candidates"}, {"score": 0.0028513785049061767, "phrase": "integrated_vector_distances"}, {"score": 0.0028145455182562807, "phrase": "matching_results"}, {"score": 0.0026259694526633037, "phrase": "proposed_method"}, {"score": 0.0026033013834547507, "phrase": "better_effectiveness"}, {"score": 0.0024288443150616056, "phrase": "top_performer_rimom"}, {"score": 0.0023257824499250653, "phrase": "linked_mdb"}, {"score": 0.0022464835515931592, "phrase": "comparable_results"}, {"score": 0.0022174469839432013, "phrase": "silk_system"}, {"score": 0.002169882514603539, "phrase": "good_quality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heterogeneous data", " Semantic web", " Instance matching", " Ontology matching", " Linked data"], "paper_abstract": "Instance matching aims to discover the linkage between different descriptions of real objects across heterogeneous data sources. With the rapid development of Semantic Web, especially of the linked data, automatically instance matching has been become the fundamental issue for ontological data sharing and integration. Instances in the ontologies are often in large scale, which contains millions of, or even hundreds of millions objects. Directly applying previous schema level ontology matching methods is infeasible. In this paper, we systematically investigate the characteristics of instance matching, and then propose a scalable and efficient instance matching approach named VMI. VMI generates multiple vectors for different kinds of intained in the ontology instances, and uses a set of inverted indexes based rules to get the primary matching candidates. Then it employs user customized property values to further eliminate the incorrect matchings. Finally the similarities of matching candidates are computed as the integrated vector distances and the matching results are extracted. Experiments on instance track from OAEI 2009 and OAEI 2010 show that the proposed method achieves better effectiveness and efficiency (a speedup of more than 100 times and a bit better performance (+3.0% to 5.0% in terms of F1-score) than top performer RiMOM on most of the datasets). Experiments on Linked MDB and DBpedia show that VMI can obtain comparable results with the SILK system (about 26,000 results with good quality). (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Large scale instance matching via multiple indexes and candidate selection", "paper_id": "WOS:000323875500008"}