{"auto_keywords": [{"score": 0.048087910149777265, "phrase": "spatial_queries"}, {"score": 0.04690049489126143, "phrase": "cvnn"}, {"score": 0.00481495049065317, "phrase": "spatial_databases"}, {"score": 0.004645057834614705, "phrase": "new_type"}, {"score": 0.004408537640504066, "phrase": "data_set_p"}, {"score": 0.004197703302809062, "phrase": "two-dimensional_space"}, {"score": 0.004156757045329242, "phrase": "cvnn_query"}, {"score": 0.003919299546627271, "phrase": "nearest_neighbor"}, {"score": 0.003830647710561999, "phrase": "interval_r_subset"}, {"score": 0.003635569066882223, "phrase": "null"}, {"score": 0.0033721818035946263, "phrase": "o."}, {"score": 0.0033282568196683886, "phrase": "existing_continuous_nearest_neighbor_query"}, {"score": 0.0029975152932436144, "phrase": "efficient_algorithms"}, {"score": 0.0029779674919563734, "phrase": "exact_cvnn_query_processing"}, {"score": 0.002901039092967117, "phrase": "conventional_data-partitioning_indices"}, {"score": 0.002717277008333612, "phrase": "cvnn_search"}, {"score": 0.002681941877978841, "phrase": "single_query"}, {"score": 0.0026557415971295633, "phrase": "entire_query_line_segment"}, {"score": 0.002578662558305782, "phrase": "data_points"}, {"score": 0.0025285202557857323, "phrase": "final_query_result"}, {"score": 0.00247935055073462, "phrase": "effective_pruning_heuristics"}, {"score": 0.00242319012632962, "phrase": "cvnn_queries"}, {"score": 0.0022696277881969896, "phrase": "proposed_algorithms"}, {"score": 0.002247446386787241, "phrase": "comprehensive_experimental_evaluation"}, {"score": 0.002225481283887324, "phrase": "real_and_synthetic_data_sets"}], "paper_keywords": ["Query processing", " Nearest neighbor", " Visible", " Spatial database", " Algorithm"], "paper_abstract": "In this paper, we identify and solve a new type of spatial queries, called continuous visible nearest neighbor (CVNN) search. Given a data set P, an obstacle set O, and a query line segment q in a two-dimensional space, a CVNN query returns a set of < p, R > tuples such that p is an element of P is the nearest neighbor to every point r along the interval R subset of q as well as p is visible to r. Note that p may be NULL, meaning that all points in P are invisible to all points in R due to the obstruction of some obstacles in O. In contrast to existing continuous nearest neighbor query, CVNN retrieval considers the impact of obstacles on visibility between objects, which is ignored by most of spatial queries. We formulate the problem, analyze its unique characteristics, and develop efficient algorithms for exact CVNN query processing. Our methods (1) utilize conventional data-partitioning indices (e. g., R-trees) on both P and O, (2) tackle the CVNN search by performing a single query for the entire query line segment, and (3) only access the data points and obstacles relevant to the final query result by employing a suite of effective pruning heuristics. In addition, several interesting variations of CVNN queries have been introduced, and they can be supported by our techniques, which further demonstrates the flexibility of the proposed algorithms. A comprehensive experimental evaluation using both real and synthetic data sets has been conducted to verify the effectiveness of our proposed pruning heuristics and the performance of our proposed algorithms.", "paper_title": "Continuous visible nearest neighbor query processing in spatial databases", "paper_id": "WOS:000290802400004"}