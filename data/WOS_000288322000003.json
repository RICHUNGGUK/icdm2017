{"auto_keywords": [{"score": 0.0393378573740974, "phrase": "banded_preconditioners"}, {"score": 0.015719716506582538, "phrase": "performance_models"}, {"score": 0.0047720206849762034, "phrase": "spike"}, {"score": 0.004743423032820112, "phrase": "linear_system_solver"}, {"score": 0.004672953146379813, "phrase": "large-scale_parallel_platforms"}, {"score": 0.004521566043596533, "phrase": "significant_impetus"}, {"score": 0.004454377387615279, "phrase": "scalable_parallel_sparse_linear_system"}, {"score": 0.004375061788023814, "phrase": "integral_part"}, {"score": 0.004335932873514455, "phrase": "design_process"}, {"score": 0.004182871028054003, "phrase": "accurate_cost_models"}, {"score": 0.003939633463129123, "phrase": "iterative_solvers"}, {"score": 0.0037216229812089686, "phrase": "recent_work"}, {"score": 0.003677280504320636, "phrase": "superior_convergence_properties"}, {"score": 0.0035901685646972585, "phrase": "state-of-the-art_ilu_family"}, {"score": 0.003526186748088922, "phrase": "algebraic_multigrid_preconditioners"}, {"score": 0.003432338275868245, "phrase": "efficient_banded_solvers"}, {"score": 0.003371159698962328, "phrase": "significantly_faster_time"}, {"score": 0.0032618078775887077, "phrase": "truncated_spike_algorithm"}, {"score": 0.0032132782979796895, "phrase": "parallel_performance"}, {"score": 0.003174973355583627, "phrase": "deep_memory_hierarchies"}, {"score": 0.0030997236644076196, "phrase": "accurate_performance_characterization"}, {"score": 0.0029280552768499056, "phrase": "parallel_formulations"}, {"score": 0.0029018301277718415, "phrase": "truncated_spike_solver"}, {"score": 0.002833035775182696, "phrase": "highly_accurate_pseudo-analytical_parallel_performance_model"}, {"score": 0.00274932545791351, "phrase": "excellent_predication_capabilities"}, {"score": 0.0026600905156986317, "phrase": "high_scalability"}, {"score": 0.002597012212823168, "phrase": "analytical_performance_characterization"}, {"score": 0.0025354258731826148, "phrase": "analytical_models"}, {"score": 0.00249767641333441, "phrase": "actual_runtime_information"}, {"score": 0.002482734080358268, "phrase": "target_platforms"}, {"score": 0.0024604876113911173, "phrase": "important_consequence"}, {"score": 0.0024093494406195386, "phrase": "underlying_performance_bottlenecks"}, {"score": 0.0023381288193776778, "phrase": "diverse_heterogeneous_multi-clusters_-_platforms"}, {"score": 0.002215183459020093, "phrase": "spike_algorithm"}], "paper_keywords": ["Parallel", " scalability", " performance", " prediction", " model", " banded"], "paper_abstract": "With availability of large-scale parallel platforms comprised of tens-of-thousands of processors and beyond, there is significant impetus for the development of scalable parallel sparse linear system solvers and preconditioners. An integral part of this design process is the development of performance models capable of predicting performance and providing accurate cost models for the solvers and preconditioners. There has been some work in the past on characterizing performance of the iterative solvers themselves. In this paper, we investigate the problem of characterizing performance and scalability of banded preconditioners. Recent work has demonstrated the superior convergence properties and robustness of banded preconditioners, compared to state-of-the-art ILU family of preconditioners as well as algebraic multigrid preconditioners. Furthermore, when used in conjunction with efficient banded solvers, banded preconditioners are capable of significantly faster time-to-solution. Our banded solver, the Truncated Spike algorithm is specifically designed for parallel performance and tolerance to deep memory hierarchies. Its regular structure is also highly amenable to accurate performance characterization. Using these characteristics, we derive the following results in this paper: (i) we develop parallel formulations of the Truncated Spike solver, (ii) we develop a highly accurate pseudo-analytical parallel performance model for our solver, (iii) we show excellent predication capabilities of our model - based on which we argue the high scalability of our solver. Our pseudo-analytical performance model is based on analytical performance characterization of each phase of our solver. These analytical models are then parameterized using actual runtime information on target platforms. An important consequence of our performance models is that they reveal underlying performance bottlenecks in both serial and parallel formulations. All of our results are validated on diverse heterogeneous multi-clusters - platforms for which performance prediction is particularly challenging. Finally, we provide predict the scalability of the Spike algorithm using up to 65,536 cores with our model. In this paper we extend the results presented in the Ninth International Symposium on Parallel and Distributed Computing.", "paper_title": "Performance models for the Spike banded linear system solver", "paper_id": "WOS:000288322000003"}