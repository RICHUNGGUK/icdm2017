{"auto_keywords": [{"score": 0.03270043864351029, "phrase": "modelling_tool"}, {"score": 0.00481495049065317, "phrase": "proper_process_models"}, {"score": 0.00475162193118036, "phrase": "process_models"}, {"score": 0.004714023408114857, "phrase": "process_systems_engineering_activity"}, {"score": 0.004676720995756667, "phrase": "major_bottleneck"}, {"score": 0.004652016085325825, "phrase": "today's_work_flow"}, {"score": 0.004353948887538618, "phrase": "underlying_concepts"}, {"score": 0.004184316847647772, "phrase": "standard_model_simplification"}, {"score": 0.004085713541752114, "phrase": "simplified_models"}, {"score": 0.004053362743156545, "phrase": "generating_code"}, {"score": 0.003968335788430238, "phrase": "transcript_errors"}, {"score": 0.003916098498242888, "phrase": "significant_cost_savings"}, {"score": 0.0037935066882208235, "phrase": "physical-chemical-biological_systems"}, {"score": 0.0036359780843400625, "phrase": "extensive_quantities"}, {"score": 0.0035127984203919033, "phrase": "information_processing_systems"}, {"score": 0.0034573575145364207, "phrase": "key_ideas"}, {"score": 0.0033402088717816446, "phrase": "coded_model"}, {"score": 0.0032527939106509946, "phrase": "new_modelling_software_environment"}, {"score": 0.0030521898646210413, "phrase": "component_factories"}, {"score": 0.002988101395789399, "phrase": "common_user"}, {"score": 0.0028112242342507167, "phrase": "multi-graph_definition"}, {"score": 0.0027015344365793016, "phrase": "arc_descriptions"}, {"score": 0.0026307897899760383, "phrase": "specialised_component_factories"}, {"score": 0.002575526825728026, "phrase": "behaviour_description"}, {"score": 0.0025147388732358507, "phrase": "second_one"}, {"score": 0.0024947959375982614, "phrase": "graphical_objects"}, {"score": 0.0024423826953133844, "phrase": "coded_paradigm"}, {"score": 0.002429451930463481, "phrase": "interface_control"}, {"score": 0.0023974230190923563, "phrase": "stand-alone_thermodynamic_models"}, {"score": 0.002316105585203396, "phrase": "basic_theoretical_representation"}, {"score": 0.0022977342663599042, "phrase": "thermodynamic_functions"}, {"score": 0.0022855675625223027, "phrase": "special_attention"}, {"score": 0.002255431275670053, "phrase": "indexing_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Computer-aided modelling", " Process systems engineering"], "paper_abstract": "Constructing and maintaining process models for any process systems engineering activity represents a major bottleneck in today's work flow. Industry has a need for a multitude of models often for the same plant. These models must be proper with respect to the underlying concepts, in our case mainly physics. They must be internally consistent and closed. Standard model simplification should be readily available so as to derive simplified models automatically. Generating code should be automated so as to eliminate transcript errors, which leads to significant cost savings. The approach is based on network modelling here constraint to physical-chemical-biological systems in which the nodes in the network represent capacities and the arcs the transport of extensive quantities. The network is extended by adding control, the nodes representing information processing systems. The framework and the key ideas are being discussed. An analysis of the process of generating a coded model serves as the backbone on which we shape the new modelling software environment, that we call ProcessModeller. It consists of a part for the user using it as a modelling tool and a set of component factories. The modelling tool, to which the common user is being exposed, consists of three main components: a multi-graph editor, a semantic plug-in module for the multi-graph definition, a semantic plug-in module for the selection of the node and arc descriptions. There are four factories: the first of the specialised component factories generates an ontology, which captures the behaviour description of the nodes and the arcs. The second one generates the graphical objects and their properties. The third constructs the coded paradigm for interface control. The fourth generates stand-alone thermodynamic models, which are structured such as to enable the ontologies to use basic theoretical representation of the thermodynamic functions. Special attention is paid to the indexing problem. The framework demonstrates the power of constructing ontologies that can be coupled and integrated with a set of paradigms. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Constructing and maintaining proper process models", "paper_id": "WOS:000280625200025"}