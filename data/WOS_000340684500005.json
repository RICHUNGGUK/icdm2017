{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pipelined_query_processing"}, {"score": 0.008327297213497276, "phrase": "document-wise_partitioning"}, {"score": 0.0045411156682300695, "phrase": "web_search_engines"}, {"score": 0.004424441580112395, "phrase": "high_throughput"}, {"score": 0.004367228576339114, "phrase": "short_query_latency"}, {"score": 0.004310752197635499, "phrase": "recent_results"}, {"score": 0.004145649381700967, "phrase": "term-wise_partitioned_inverted_index"}, {"score": 0.0038092152998069786, "phrase": "collections_size"}, {"score": 0.003735522846193052, "phrase": "main_challenges"}, {"score": 0.0033878306639271963, "phrase": "inverted_index"}, {"score": 0.0031127040190005216, "phrase": "novel_idea"}, {"score": 0.0030524448705134283, "phrase": "max-score_pruning"}, {"score": 0.0029545864975783023, "phrase": "new_term_assignment_heuristic"}, {"score": 0.002878556952876824, "phrase": "max-score"}, {"score": 0.0027862576750944277, "phrase": "significant_improvement"}, {"score": 0.0025102759256260703, "phrase": "dynamic_load_balancing"}, {"score": 0.002477753633057247, "phrase": "intra-query_concurrent_processing"}, {"score": 0.002160640052461594, "phrase": "term-wise_partitioning"}, {"score": 0.0021049977753042253, "phrase": "industry_standard_document-wise_partitioning"}], "paper_keywords": ["Information retrieval", " Text search engines", " Distributed index organization", " Pipelined query processing", " Skipping"], "paper_abstract": "Web search engines need to provide high throughput and short query latency. Recent results show that pipelined query processing over a term-wise partitioned inverted index may have superior throughput. However, the query processing latency and scalability with respect to the collections size are the main challenges associated with this method. In this paper, we evaluate the effect of inverted index skipping on the performance of pipelined query processing. Further, we introduce a novel idea of using Max-Score pruning within pipelined query processing and a new term assignment heuristic, partitioning by Max-Score. Our current results indicate a significant improvement over the state-of-the-art approach and lead to several further optimizations which include dynamic load balancing, intra-query concurrent processing and a hybrid combination between pipelined and non-pipelined execution. Lastly, we show how the state of term-wise partitioning relates to the industry standard document-wise partitioning. Even though there are situations pipelined query processing is advantegous, document-wise partitioning is still the road to follow.", "paper_title": "Improving the performance of pipelined query processing with skipping-and its comparison to document-wise partitioning", "paper_id": "WOS:000340684500005"}