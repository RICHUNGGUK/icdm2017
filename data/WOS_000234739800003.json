{"auto_keywords": [{"score": 0.048734215142491696, "phrase": "chasm"}, {"score": 0.009747770811907133, "phrase": "fortran"}, {"score": 0.00481495049065317, "phrase": "language_gap"}, {"score": 0.004760394308239882, "phrase": "scientific_computing"}, {"score": 0.00447115003744675, "phrase": "seamless_language_interoperability"}, {"score": 0.004247560712327667, "phrase": "scientific_programmers"}, {"score": 0.004199406257273994, "phrase": "scientific_applications"}, {"score": 0.00401216440036853, "phrase": "software_tools"}, {"score": 0.0036622637391432143, "phrase": "common-denominator_type_systems"}, {"score": 0.0033619033669956317, "phrase": "intermediate_representation"}, {"score": 0.0032860401904845522, "phrase": "compiler_front-end"}, {"score": 0.0032302647179383915, "phrase": "supported_language"}, {"score": 0.0031573626285069157, "phrase": "interface_information"}, {"score": 0.0030337085953063125, "phrase": "bridging_code"}, {"score": 0.0028006988338192375, "phrase": "common_intermediate_data_representation"}, {"score": 0.002442025065383455, "phrase": "minimal_user_intervention"}, {"score": 0.002359759876402679, "phrase": "bridging_code_generation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Fortran 95", " C", " C plus", " language interoperability", " XML", " compilers"], "paper_abstract": "Chasm is a toolkit providing seamless language interoperability between Fortran 95 and C++. Language interoperability is important to scientific programmers because scientific applications are predominantly written in Fortran, while software tools are mostly written in C++. Two design features differentiate Chasm from other related tools. First, we avoid the common-denominator type systems and programming models found in most Interface Definition Language (IDL)-based interoperability systems. Chasm uses the intermediate representation generated by a compiler front-end for each supported language as its source of interface information instead of an IDL. Second, bridging code is generated for each pairwise language binding, removing the need for a common intermediate data representation and multiple levels of indirection between the caller and callee. These features make Chasm a simple system that performs well, requires minimal user intervention and, in most instances, bridging code generation can be performed automatically. Chasm is also easily extensible and highly portable. Copyright (c) 2005 John Wiley & Sons,Ltd.", "paper_title": "Bridging the language gap in scientific computing: the Chasm approach", "paper_id": "WOS:000234739800003"}