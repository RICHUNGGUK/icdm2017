{"auto_keywords": [{"score": 0.046339294991504736, "phrase": "implementation_costs"}, {"score": 0.028109123018613475, "phrase": "code_inspection"}, {"score": 0.027114209972221377, "phrase": "test-driven_development"}, {"score": 0.004606479650820579, "phrase": "quasi_experiment"}, {"score": 0.004505638402009237, "phrase": "software_defect_rates"}, {"score": 0.004310501708408856, "phrase": "software_defect_reduction"}, {"score": 0.003830312347175889, "phrase": "junior_and_senior_computer_science_students"}, {"score": 0.003304339421246321, "phrase": "factorial_design"}, {"score": 0.0028293966058473476, "phrase": "resulting_defect_counts"}, {"score": 0.0021049977753042253, "phrase": "traditional_programming_methods"}], "paper_keywords": ["Agile programming", " code inspections and walk throughs", " reliability", " test-driven development", " testing strategies", " empirical study"], "paper_abstract": "This study is a quasi experiment comparing the software defect rates and implementation costs of two methods of software defect reduction: code inspection and test-driven development. We divided participants, consisting of junior and senior computer science students at a large Southwestern university, into four groups using a two-by-two, between-subjects, factorial design and asked them to complete the same programming assignment using either test-driven development, code inspection, both, or neither. We compared resulting defect counts and implementation costs across groups. We found that code inspection is more effective than test-driven development at reducing defects, but that code inspection is also more expensive. We also found that test-driven development was no more effective at reducing defects than traditional programming methods.", "paper_title": "Comparing the Defect Reduction Benefits of Code Inspection and Test-Driven Development", "paper_id": "WOS:000304414400004"}