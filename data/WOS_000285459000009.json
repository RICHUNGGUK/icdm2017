{"auto_keywords": [{"score": 0.049178471674397164, "phrase": "big-step_operational_semantics"}, {"score": 0.04490388164168672, "phrase": "typical_type_soundness_property"}, {"score": 0.00481495049065317, "phrase": "novel_approach"}, {"score": 0.0037610536973798113, "phrase": "small-step_operational_semantics"}, {"score": 0.0030221868556641208, "phrase": "simple_language"}, {"score": 0.0027741761880779535, "phrase": "big-step_semantics"}, {"score": 0.0026705669656375197, "phrase": "new_approach"}, {"score": 0.0024984517279573906, "phrase": "stronger_type_soundness_property"}, {"score": 0.002337443856585562, "phrase": "lm"}, {"score": 0.0021049977753042253, "phrase": "typing_rules"}], "paper_keywords": [""], "paper_abstract": "In this paper we present a novel approach to big-step operational semantics. This approach stems from the observation that the typical type soundness property formulated via a big-step operational semantics is weak, while the option of using a small-step operational semantics is not always an option, because it is less intuitive to build and understand. We support our claim by using a simple language called LM, for which we present a big-step semantics expressed with the new approach, allowing one to formulate a stronger type soundness property. We prove this property for LM and we present an example of an error in the typing rules which does not violate the typical type soundness property, but does violate ours.", "paper_title": "Big-step Operational Semantics Revisited", "paper_id": "WOS:000285459000009"}