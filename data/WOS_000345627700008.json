{"auto_keywords": [{"score": 0.04882655221850921, "phrase": "rt"}, {"score": 0.044106887335208816, "phrase": "test_case_selection"}, {"score": 0.03342126117386305, "phrase": "rpt"}, {"score": 0.004815340868055127, "phrase": "adaptive"}, {"score": 0.004772593750252861, "phrase": "random_partition_software_testing"}, {"score": 0.0047306078475683865, "phrase": "random_testing"}, {"score": 0.004627244470096107, "phrase": "subdomain_testing"}, {"score": 0.003894512634265439, "phrase": "feedback-based_software_testing_strategy"}, {"score": 0.0036932254391253134, "phrase": "partition_testing"}, {"score": 0.003661467226825219, "phrase": "pt"}, {"score": 0.0035648266669315943, "phrase": "major_concern"}, {"score": 0.00342568771304873, "phrase": "computational_cost"}, {"score": 0.0032629585038738856, "phrase": "hybrid_approach"}, {"score": 0.003191560305761507, "phrase": "random_partition_testing"}, {"score": 0.003107935254560724, "phrase": "alternating_manner"}, {"score": 0.00289546142998427, "phrase": "underlying_computational_complexity"}, {"score": 0.0027700855441353165, "phrase": "testing_process"}, {"score": 0.002721464488351771, "phrase": "defect_detection_effectiveness"}, {"score": 0.002685558057339722, "phrase": "case_study"}, {"score": 0.002661883310629088, "phrase": "seven_real-life_subject_programs"}, {"score": 0.0026036031415940563, "phrase": "experimental_results"}, {"score": 0.0025578967205807843, "phrase": "novel_strategy"}, {"score": 0.002512990657100351, "phrase": "computational_overhead"}, {"score": 0.0024798279465139688, "phrase": "original_at_strategy"}, {"score": 0.002425524064992056, "phrase": "pure_rt_strategy"}, {"score": 0.002404136142279618, "phrase": "pt_strategy"}, {"score": 0.0023307492812556204, "phrase": "test_cases"}, {"score": 0.0021809311689473493, "phrase": "sensitivity_analysis"}], "paper_keywords": ["Adaptive testing", " random partition testing", " random testing", " software testing"], "paper_abstract": "Random testing (RT) and subdomain testing are two major software testing strategies. Their simplicity makes them likely the most efficient testing strategies with respect to the time required for test case selection. However, the disadvantage of RT is its defect detection effectiveness. Adaptive testing (AT) is a feedback-based software testing strategy that has been shown to be more effective than RT and partition testing (PT). However, a major concern in the application of AT is its complexity and computational cost for test case selection. In this paper, we propose a hybrid approach that uses AT and random partition testing (RPT) in an alternating manner. The motivation for this approach is that both strategies are employed such that the underlying computational complexity of AT is reduced by introducing RPT into the testing process without affecting the defect detection effectiveness. A case study with seven real-life subject programs is presented. The experimental results demonstrate that this novel strategy considerably reduces the computational overhead of the original AT strategy but still outperforms the pure RT strategy and PT strategy in terms of the number of test cases used to detect and remove a given number of defects. In addition, a sensitivity analysis is conducted to validate the robustness of our strategy.", "paper_title": "Adaptive and Random Partition Software Testing", "paper_id": "WOS:000345627700008"}