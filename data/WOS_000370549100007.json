{"auto_keywords": [{"score": 0.04463678775116184, "phrase": "haskell"}, {"score": 0.043366308265697144, "phrase": "remote_monad_design_pattern"}, {"score": 0.00481495049065317, "phrase": "remote_procedure_calls"}, {"score": 0.004334280585565239, "phrase": "remote_procedures"}, {"score": 0.0039308449157320815, "phrase": "remote_calls"}, {"score": 0.003673675864705682, "phrase": "remote_capabilities"}, {"score": 0.0034332736827447654, "phrase": "surprisingly_inexpensive_cost"}, {"score": 0.0031845067058084583, "phrase": "remote_execution_patterns"}, {"score": 0.0030901063954739375, "phrase": "simulated_internet"}, {"score": 0.003043957650600757, "phrase": "things_toaster"}, {"score": 0.002976019715894587, "phrase": "running_example"}, {"score": 0.0027395968397212053, "phrase": "remote_execution_model"}, {"score": 0.0024842242921857705, "phrase": "full-scale_case_study"}, {"score": 0.0023390219342052623, "phrase": "foreign_function_interface"}, {"score": 0.002286781334850213, "phrase": "javascript_canvas_api."}, {"score": 0.0022022878843247257, "phrase": "existing_instances"}, {"score": 0.0021049977753042253, "phrase": "haskell_libraries"}], "paper_keywords": ["Monads", " Remote Procedure Call", " FFI", " Design Pattern"], "paper_abstract": "Remote Procedure Calls are expensive. This paper demonstrates how to reduce the cost of calling remote procedures from Haskell by using the remote monad design pattern, which amortizes the cost of remote calls. This gives the Haskell community access to remote capabilities that are not directly supported, at a surprisingly inexpensive cost. We explore the remote monad design pattern through six models of remote execution patterns, using a simulated Internet of Things toaster as a running example. We consider the expressiveness and optimizations enabled by each remote execution model, and assess the feasibility of our approach. We then present a full-scale case study: a Haskell library that provides a Foreign Function Interface to the JavaScript Canvas API. Finally, we discuss existing instances of the remote monad design pattern found in Haskell libraries.", "paper_title": "The Remote Monad Design Pattern", "paper_id": "WOS:000370549100007"}