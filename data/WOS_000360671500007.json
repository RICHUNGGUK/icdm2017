{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "rapid_releases"}, {"score": 0.0047804843375940835, "phrase": "software_testing"}, {"score": 0.00472122188333192, "phrase": "mozilla_firefox"}, {"score": 0.004562362497952548, "phrase": "large_open_and_closed_source_organizations"}, {"score": 0.0045297187575891835, "phrase": "google"}, {"score": 0.004497283848505269, "phrase": "facebook"}, {"score": 0.004465061205205809, "phrase": "mozilla"}, {"score": 0.0042004472903194616, "phrase": "user_feedback"}, {"score": 0.004066740842661956, "phrase": "bug_fixing"}, {"score": 0.004023120753104693, "phrase": "initial_research_results"}, {"score": 0.003937273640906994, "phrase": "proportionally_less_reported_bugs"}, {"score": 0.0037845987749316632, "phrase": "software_testing_effort"}, {"score": 0.0036509280916606937, "phrase": "case_study"}, {"score": 0.0035601676907962626, "phrase": "semi-systematic_literature_review"}, {"score": 0.003161674440750158, "phrase": "mozilla_qa_engineer"}, {"score": 0.003071965703296204, "phrase": "narrower_test_scope"}, {"score": 0.003028067500715357, "phrase": "deeper_investigation"}, {"score": 0.002942138511829811, "phrase": "highest_risk"}, {"score": 0.0028279422436488116, "phrase": "proportionally_smaller_spikes"}, {"score": 0.002797572252783356, "phrase": "main_release"}, {"score": 0.00267931029131157, "phrase": "large_testing_community"}, {"score": 0.0026315183701883437, "phrase": "test_suite_diversity"}, {"score": 0.0024050158199950024, "phrase": "systematic_search_queries"}, {"score": 0.0023791769068748194, "phrase": "similar_amount"}, {"score": 0.0023116191163488824, "phrase": "literature_review"}, {"score": 0.002262209824105154, "phrase": "prevalent_industrial_practice"}, {"score": 0.0022058958906038466, "phrase": "highly_critical_domains"}, {"score": 0.002190064650401852, "phrase": "software_engineering"}], "paper_keywords": ["Software testing", " Release model", " Builds", " Bugs", " Open-source", " Agile releases", " Mozilla"], "paper_abstract": "Large open and closed source organizations like Google, Facebook and Mozilla are migrating their products towards rapid releases. While this allows faster time-to-market and user feedback, it also implies less time for testing and bug fixing. Since initial research results indeed show that rapid releases fix proportionally less reported bugs than traditional releases, this paper investigates the changes in software testing effort after moving to rapid releases in the context of a case study on Mozilla Firefox, and performs a semi-systematic literature review. The case study analyzes the results of 312,502 execution runs of the 1,547 mostly manual system-level test cases of Mozilla Firefox from 2006 to 2012 (5 major traditional and 9 major rapid releases), and triangulates our findings with a Mozilla QA engineer. We find that rapid releases have a narrower test scope that enables a deeper investigation of the features and regressions with the highest risk. Furthermore, rapid releases make testing more continuous and have proportionally smaller spikes before the main release. However, rapid releases make it more difficult to build a large testing community , and they decrease test suite diversity and make testing more deadline oriented. In addition, our semi-systematic literature review presents the benefits, problems and enablers of rapid releases from 24 papers found using systematic search queries and a similar amount of papers found through other means. The literature review shows that rapid releases are a prevalent industrial practice that are utilized even in some highly critical domains of software engineering, and that rapid releases originated from several software development methodologies such as agile, open source, lean and internet-speed software development. However, empirical studies proving evidence of the claimed advantages and disadvantages of rapid releases are scarce.", "paper_title": "On rapid releases and software testing: a case study and a semi-systematic literature review", "paper_id": "WOS:000360671500007"}