{"auto_keywords": [{"score": 0.04922082634695279, "phrase": "parallel_tasks"}, {"score": 0.04865678212430773, "phrase": "multi-cluster_grid"}, {"score": 0.03576969470893446, "phrase": "approximation_algorithm"}, {"score": 0.025290005605527396, "phrase": "greedy_heuristics"}, {"score": 0.00481495049065317, "phrase": "utility-oriented_algorithms"}, {"score": 0.004140924670517666, "phrase": "allocated_cluster"}, {"score": 0.00399367108161192, "phrase": "rigid_and_moldable_parallel_tasks"}, {"score": 0.0038284549148537373, "phrase": "theoretical_model"}, {"score": 0.0037825134619339537, "phrase": "utility-oriented_parallel_task_scheduling"}, {"score": 0.003626000977962191, "phrase": "advance_reservations"}, {"score": 0.0027463775689957255, "phrase": "utility_optimality"}, {"score": 0.0027133856739937133, "phrase": "timing_results"}, {"score": 0.002680789041160613, "phrase": "simulation_results"}, {"score": 0.0025542617599268323, "phrase": "best_trade-off"}, {"score": 0.002448446849997207, "phrase": "genetic_algorithm"}, {"score": 0.002404447017429959, "phrase": "better_utility"}, {"score": 0.0023470051993423483, "phrase": "approximate_algorithm"}, {"score": 0.002318799760022913, "phrase": "expensive_time_cost"}, {"score": 0.002169607777109061, "phrase": "different_utility_functions"}], "paper_keywords": ["Parallel task", " Multi-cluster", " Approximate algorithm", " Genetic algorithm", " Local ratio"], "paper_abstract": "Scheduling parallel tasks in multi-cluster grid can be seen as two interdependent problems: cluster allocation and scheduling parallel task on the allocated cluster. In this paper both rigid and moldable parallel tasks are considered. We propose a theoretical model of utility-oriented parallel task scheduling in multi-cluster grid with advance reservations. On the basis of the model we present an approximation algorithm, a repair strategy based genetic algorithm and greedy heuristics MaxMax, T-Sufferage and R-Sufferage to solve the two interdependent problems. We compare the performance of these algorithms in aspect of utility optimality and timing results. Simulation results show on average the (1+alpha)-approximation algorithm achieves the best trade-off between utility optimality and timing. Genetic algorithm could achieve better utility than greedy heuristics and approximate algorithm at expensive time cost. Greedy heuristics do not perform equally well when adapted to different utility functions while the approximation algorithm shows its intrinsic stable performance.", "paper_title": "A comparison of utility-oriented algorithms for scheduling parallel tasks in multi-cluster grid", "paper_id": "WOS:000271723100006"}