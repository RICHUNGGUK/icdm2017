{"auto_keywords": [{"score": 0.05007800426347441, "phrase": "mixed-mode_parallelism"}, {"score": 0.02905714295194856, "phrase": "simd"}, {"score": 0.02878734086944585, "phrase": "mimd"}, {"score": 0.004678940805063634, "phrase": "hera_architecture"}, {"score": 0.00459039896577789, "phrase": "recent_advances"}, {"score": 0.004546755482549647, "phrase": "multi-million-gate_platform_field-programmable_gate_arrays"}, {"score": 0.004293434614435972, "phrase": "complex_parallel_systems"}, {"score": 0.004232331639807526, "phrase": "programmable_chip"}, {"score": 0.0041522059428827345, "phrase": "hardware_floating-point_units"}, {"score": 0.003958439439112026, "phrase": "resource_reconfiguration"}, {"score": 0.003791763445590174, "phrase": "fpga_community"}, {"score": 0.0037199473428123175, "phrase": "reconfigurable_logic"}, {"score": 0.0036669760226536977, "phrase": "algorithm-specific_circuitry"}, {"score": 0.002985440157608039, "phrase": "pe"}, {"score": 0.0028187792953857957, "phrase": "tightly-coupled_local_memory"}, {"score": 0.00276534038425712, "phrase": "dynamic_switching"}, {"score": 0.0024417832296664698, "phrase": "sustained_high_performance"}, {"score": 0.0024185182010749273, "phrase": "hera's_performance"}, {"score": 0.0022617389804167943, "phrase": "lu_factorisation"}, {"score": 0.0022401855403251653, "phrase": "sparse_doubly-bordered-block-diagonal"}, {"score": 0.002145703330831668, "phrase": "electrical_power_network_matrices"}, {"score": 0.0021049977753042253, "phrase": "mixed-mode_scheduling"}], "paper_keywords": [""], "paper_abstract": "Recent advances in multi-million-gate platform field-programmable gate arrays (FPGAs) have made it possible to design and implement complex parallel systems on a programmable chip that also incorporate hardware floating-point units (FPUs). These options take advantage of resource reconfiguration. In contrast to the majority of the FPGA community that still employs reconfigurable logic to develop algorithm-specific circuitry, our FPGA-based mixed-mode reconfigurable computing machine can implement simultaneously a variety of parallel execution modes and is also user programmable. Our heterogeneous reconfigurable architecture (HERA) machine can implement the single-instruction, multiple-data (SIMD), multiple-instruction, multiple-data (MIMD) and multiple-SIMD (M-SIMD) execution modes. Each processing element (PE) is centred on a single-precision IEEE 754 FPU with tightly-coupled local memory, and supports dynamic switching between SIMD and MIMD at runtime. Mixed-mode parallelism has the potential to best match the characteristics of all subtasks in applications, thus resulting in sustained high performance. HERA's performance is evaluated by two common computation-intensive testbenches: matrix-matrix multiplication (MMM) and LU factorisation of sparse doubly-bordered-block-diagonal (DBBD) matrices. Experimental results with electrical power network matrices show that the mixed-mode scheduling for LU factorisation can result in speedups of about 19% and 15.5% compared to the SIMD and MIMD implementations, respectively.", "paper_title": "Exploiting mixed-mode parallelism for matrix operations on the HERA architecture through reconfiguration", "paper_id": "WOS:000239333200006"}