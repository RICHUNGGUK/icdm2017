{"auto_keywords": [{"score": 0.049474472243262034, "phrase": "task_scheduling"}, {"score": 0.00481495049065317, "phrase": "grid_task_scheduling"}, {"score": 0.004664352260912174, "phrase": "key_technology"}, {"score": 0.004605434064238641, "phrase": "grid_computing"}, {"score": 0.00454725669814484, "phrase": "hierarchical_organization"}, {"score": 0.004404994123834589, "phrase": "computational_grid"}, {"score": 0.004214557316505672, "phrase": "grid"}, {"score": 0.004055511503825102, "phrase": "grid_systems"}, {"score": 0.003709974534103202, "phrase": "hierarchical_architecture"}, {"score": 0.003503497128638099, "phrase": "effective_method"}, {"score": 0.0033508547759861186, "phrase": "historical_grid_trade_data"}, {"score": 0.0032253056091816465, "phrase": "grid_market"}, {"score": 0.0030651710672229926, "phrase": "hierarchical_grid_market"}, {"score": 0.0030071857666598193, "phrase": "main_idea"}, {"score": 0.0029502941554043964, "phrase": "proposed_method"}, {"score": 0.0028397103530211415, "phrase": "off-line_static_strategy"}, {"score": 0.0027159094186967247, "phrase": "on-line_dynamic_adjustment"}, {"score": 0.0025646139644088803, "phrase": "new_scheduling_algorithm"}, {"score": 0.0024842242921857705, "phrase": "inquiry_efficiency"}, {"score": 0.0024527767211457046, "phrase": "resource_consumers"}, {"score": 0.0024063484128685367, "phrase": "better_load_balancing"}, {"score": 0.002360796860462937, "phrase": "whole_hierarchical_grid_market"}, {"score": 0.0023013968622710825, "phrase": "higher_success_rate"}, {"score": 0.0022578275190855124, "phrase": "grid_service_request"}, {"score": 0.0021870332034407817, "phrase": "simulation_experiments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grid computing", " Task scheduling", " Static strategy", " Dynamic adjustment", " Hierarchical market"], "paper_abstract": "Task scheduling is the key technology in Grid computing. Hierarchical organization is suitable for the computational Grid because of the dynamic, heterogeneous and autonomous nature of the Grid. Although a number of Grid systems adopt this organization. few of them has dealt with task scheduling for the hierarchical architecture. In this paper, we present an effective method, fully taking into account both historical Grid trade data and dynamic variation of the Grid market to improve the task scheduling for a hierarchical Grid market. The main idea of the proposed method is a combination of an off-line static strategy using time series prediction and an on-line dynamic adjustment using reinforcement learning. The superiority of this new scheduling algorithm, in improving the inquiry efficiency for resource consumers, getting better load balancing of the whole hierarchical Grid market, and achieving higher success rate of the Grid service request, is demonstrated by simulation experiments. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Static strategy and dynamic adjustment: An effective method for Grid task scheduling", "paper_id": "WOS:000267736000007"}