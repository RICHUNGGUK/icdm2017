{"auto_keywords": [{"score": 0.043704949447414855, "phrase": "mercury"}, {"score": 0.009887990113790003, "phrase": "efficient_data_placement"}, {"score": 0.00850768350546775, "phrase": "data_similarity"}, {"score": 0.00481495049065317, "phrase": "efficient_cloud_services"}, {"score": 0.004646852519870358, "phrase": "massive_data"}, {"score": 0.004585332915477379, "phrase": "data_migration"}, {"score": 0.004524624065803229, "phrase": "computation_infrastructure"}, {"score": 0.004444921827311577, "phrase": "proper_management"}, {"score": 0.004405596416783185, "phrase": "cached_data"}, {"score": 0.004232875294230749, "phrase": "efficient_and_cost-effective_multilevel_caching_scheme"}, {"score": 0.0035908627899097407, "phrase": "low-complexity_locality-sensitive_hashing"}, {"score": 0.003374094774912924, "phrase": "space_inefficiency"}, {"score": 0.0032852337992126564, "phrase": "conventional_lsh_scheme"}, {"score": 0.0031845067058084583, "phrase": "homogeneous_data_placement"}, {"score": 0.002824005136794786, "phrase": "differentiated_similarity"}, {"score": 0.0024600113832396187, "phrase": "cache_utilization"}, {"score": 0.0023845255359681143, "phrase": "last-level_cache"}, {"score": 0.002352886041381761, "phrase": "extensive_evaluation"}, {"score": 0.0022304616068189575, "phrase": "experimental_results"}, {"score": 0.002200861826643147, "phrase": "real-world_applications"}], "paper_keywords": ["Cloud computing", " multicore processor", " cache management", " data similarity"], "paper_abstract": "The cloud is emerging for scalable and efficient cloud services. To meet the needs of handling massive data and decreasing data migration, the computation infrastructure requires efficient data placement and proper management for cached data. In this paper, we propose an efficient and cost-effective multilevel caching scheme, called MERCURY, as computation infrastructure of the cloud. The idea behind MERCURY is to explore and exploit data similarity and support efficient data placement. To accurately and efficiently capture the data similarity, we leverage a low-complexity locality-sensitive hashing (LSH). In our design, in addition to the problem of space inefficiency, we identify that a conventional LSH scheme also suffers from the problem of homogeneous data placement. To address these two problems, we design a novel multicore-enabled locality-sensitive hashing (MC-LSH) that accurately captures the differentiated similarity across data. The similarity-aware MERCURY, hence, partitions data into the L1 cache, L2 cache, and main memory based on their distinct localities, which help optimize cache utilization and minimize the pollution in the last-level cache. Besides extensive evaluation through simulations, we also implemented MERCURY in a system. Experimental results based on real-world applications and data sets demonstrate the efficiency and efficacy of our proposed schemes.", "paper_title": "Data Similarity-Aware Computation Infrastructure for the Cloud", "paper_id": "WOS:000328643100002"}