{"auto_keywords": [{"score": 0.030283291064587183, "phrase": "task_library"}, {"score": 0.015011360432235527, "phrase": "business_process"}, {"score": 0.00481495049065317, "phrase": "automatic_generation"}, {"score": 0.00467424463996457, "phrase": "workflow_technology"}, {"score": 0.004499334809770281, "phrase": "information_systems"}, {"score": 0.004330941610682453, "phrase": "application's_control_structure"}, {"score": 0.004151188559520802, "phrase": "application_development"}, {"score": 0.0040298010803060495, "phrase": "run-time_system"}, {"score": 0.003624429617337833, "phrase": "business_enterprises"}, {"score": 0.003548368289666932, "phrase": "new_business_requirements"}, {"score": 0.0030847461428168614, "phrase": "time-consuming_and_error-prone_procedure"}, {"score": 0.002994449398035894, "phrase": "task_programs"}, {"score": 0.0029565620771207003, "phrase": "recent_approach"}, {"score": 0.002785978280998868, "phrase": "desired_outcome"}, {"score": 0.002658863179011018, "phrase": "positive_and_negative_dependency_graphs"}, {"score": 0.002421726275597666, "phrase": "sufficient_conditions"}, {"score": 0.00229164285862567, "phrase": "workflow_postcondition"}, {"score": 0.002177762848946681, "phrase": "sufficient_and_necessary_condition"}, {"score": 0.0021049977753042253, "phrase": "task_libraries"}], "paper_keywords": ["completeness", " workflow", " semantic correctness", " concurrency"], "paper_abstract": "In recent years, workflow technology has greatly facilitated business process modeling and reengineering in information systems. On one hand, the separation of an application's control structure from the implementation of its task programs simplifies and speeds up application development. On the other hand, the run-time system assists users in coordinating and scheduling tasks of a business process. As a result, the cost of doing business is reduced, and business enterprises become more responsive to new business requirements and opportunities, hence, become more competitive in the market. Several formal methods have been proposed for specifying and modeling workflows. However, most workflows are designed manually, which becomes a time-consuming and error-prone procedure when a workflow involves hundreds or thousands of task programs. A recent approach is to generate workflow automatically from a task library and a specification of the desired outcome. In this paper, we define the notions of positive and negative dependency graphs for a task library to represent the dependencies among tasks in the library. Based on these dependencies, we identified sufficient conditions for a task library to be complete, and the conditions for a workflow postcondition to be realizable from a task library. We also identified a sufficient and necessary condition for the completeness of a class of task libraries, called S-task libraries.", "paper_title": "Completeness and realizability: Conditions for automatic generation of workflows", "paper_id": "WOS:000235344700013"}