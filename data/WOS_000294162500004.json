{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_frequent_item_set_mining"}, {"score": 0.00476323161560059, "phrase": "selective_item_replication"}, {"score": 0.004636340567075841, "phrase": "transaction_database_distribution_scheme"}, {"score": 0.004464326432401002, "phrase": "mining_task"}, {"score": 0.004392565073466714, "phrase": "top-down_fashion"}, {"score": 0.004116823963855969, "phrase": "frequent_items"}, {"score": 0.004007083686875716, "phrase": "frequent_item_sets"}, {"score": 0.0037352048741373816, "phrase": "vertex_separator"}, {"score": 0.003407214479510987, "phrase": "item_distribution"}, {"score": 0.003193129886123359, "phrase": "data_replication"}, {"score": 0.003057910095857785, "phrase": "appropriate_weights"}, {"score": 0.0029763124376934813, "phrase": "data_distribution_scheme"}, {"score": 0.0026280534600940137, "phrase": "noclique"}, {"score": 0.0024231382864800173, "phrase": "computational_load_balancing"}, {"score": 0.0023712394008737958, "phrase": "redundant_or_collective_work"}, {"score": 0.002295463032589125, "phrase": "appropriate_load_estimates"}, {"score": 0.0022101055924375725, "phrase": "favorable_speedups"}, {"score": 0.0021510820434023207, "phrase": "small-to-medium_number"}, {"score": 0.0021049977753042253, "phrase": "synthetic_and_real-world_databases"}], "paper_keywords": ["Parallel data mining", " frequent item set mining", " mining methods and algorithms", " selective data replication", " graph partitioning by vertex separator"], "paper_abstract": "We introduce a transaction database distribution scheme that divides the frequent item set mining task in a top-down fashion. Our method operates on a graph where vertices correspond to frequent items and edges correspond to frequent item sets of size two. We show that partitioning this graph by a vertex separator is sufficient to decide a distribution of the items such that the subdatabases determined by the item distribution can be mined independently. This distribution entails an amount of data replication, which may be reduced by setting appropriate weights to vertices. The data distribution scheme is used in the design of two new parallel frequent item set mining algorithms. Both algorithms replicate the items that correspond to the separator. NoClique replicates the work induced by the separator and NoClique2 computes the same work collectively. Computational load balancing and minimization of redundant or collective work may be achieved by assigning appropriate load estimates to vertices. The experiments show favorable speedups on a system with small-to-medium number of processors for synthetic and real-world databases.", "paper_title": "Parallel Frequent Item Set Mining with Selective Item Replication", "paper_id": "WOS:000294162500004"}