{"auto_keywords": [{"score": 0.030970150623559557, "phrase": "elblocker"}, {"score": 0.015571489284034037, "phrase": "blocking_bugs"}, {"score": 0.01251803486951477, "phrase": "openoffice"}, {"score": 0.011993801377444404, "phrase": "class_imbalance_phenomenon"}, {"score": 0.011518630821196352, "phrase": "training_data"}, {"score": 0.008231963631236187, "phrase": "garcia"}, {"score": 0.008192685010107592, "phrase": "shihab"}, {"score": 0.00481495049065317, "phrase": "ensemble_imbalance_learning"}, {"score": 0.004656196014581207, "phrase": "previous_studies"}, {"score": 0.003965684670332574, "phrase": "unequal_distribution"}, {"score": 0.0038441732698853304, "phrase": "eclipse"}, {"score": 0.0034426417353349567, "phrase": "multiple_disjoint_sets"}, {"score": 0.0034016119212097826, "phrase": "disjoint_set"}, {"score": 0.0033051178166240325, "phrase": "multiple_classifiers"}, {"score": 0.003257898772445248, "phrase": "appropriate_imbalance_decision_boundary"}, {"score": 0.0031578849600618695, "phrase": "imbalance_decision_boundary"}, {"score": 0.0031352429671597922, "phrase": "bug_report"}, {"score": 0.0030830390264125923, "phrase": "blocking_bug"}, {"score": 0.003031701673462053, "phrase": "decision_boundary"}, {"score": 0.0028689475587958917, "phrase": "freedesktop"}, {"score": 0.002855243832693559, "phrase": "chromium"}, {"score": 0.002841547657331153, "phrase": "mozilla"}, {"score": 0.0028279430853623924, "phrase": "netbeans"}, {"score": 0.002448704249007665, "phrase": "statistical_tests"}, {"score": 0.002396371892825691, "phrase": "effect_sizes"}, {"score": 0.002262209824105154, "phrase": "substantial_and_statistically_significant_improvement"}, {"score": 0.0021613348951688266, "phrase": "smote"}, {"score": 0.0021355455097339746, "phrase": "bagging"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Blocking bug", " Ensemble learning", " Imbalance learning"], "paper_abstract": "Context: Blocking bugs are bugs that prevent other bugs from being fixed. Previous studies show that blocking bugs take approximately two to three times longer to be fixed compared to non-blocking bugs. Objective: Thus, automatically predicting blocking bugs early on so that developers are aware of them, can help reduce the impact of or avoid blocking bugs. However, a major challenge when predicting blocking bugs is that only a small proportion of bugs are blocking bugs, i.e., there is an unequal distribution between blocking and non-blocking bugs. For example, in Eclipse and OpenOffice, only 2.8% and 3.0% bugs are blocking bugs, respectively. We refer to this as the class imbalance phenomenon. Method: In this paper, we propose ELBlocker to identify blocking bugs given a training data. ELBlocker first randomly divides the training data into multiple disjoint sets, and for each disjoint set, it builds a classifier. Next, it combines these multiple classifiers, and automatically determines an appropriate imbalance decision boundary to differentiate blocking bugs from non-blocking bugs. With the imbalance decision boundary, a bug report will be classified to be a blocking bug when its likelihood score is larger than the decision boundary, even if its likelihood score is low. Results: To examine the benefits of ELBlocker, we perform experiments on 6 large open source projects namely Freedesktop, Chromium, Mozilla, Netbeans, OpenOffice, and Eclipse containing a total of 402,962 bugs. We find that ELBlocker achieves F1 and EffectivenessRatio@20% scores of up to 0.482 and 0.831, respectively. On average across the 6 projects, ELBlocker improves the F1 and EffectivenessRatio@20% scores over the state-of-the-art method proposed by Garcia and Shihab by 14.69% and 8.99%, respectively. Statistical tests show that the improvements are significant and the effect sizes are large. Conclusion: ELBlocker can help deal with the class imbalance phenomenon and improve the prediction of blocking bugs. ELBlocker achieves a substantial and statistically significant improvement over the state-of-the-art methods, i.e., Garcia and Shihab's method, SMOTE, OSS, and Bagging. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "ELBlocker: Predicting blocking bugs with ensemble imbalance learning", "paper_id": "WOS:000352748400006"}