{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "software_readiness"}, {"score": 0.008312307975952516, "phrase": "presentation_logic_tier"}, {"score": 0.007956112747672918, "phrase": "data_access_tier"}, {"score": 0.004786821283037044, "phrase": "predictive_models"}, {"score": 0.00470341117804131, "phrase": "defect_tracking"}, {"score": 0.004635008910530911, "phrase": "proxy_method"}, {"score": 0.004527619017250708, "phrase": "remaining_defects"}, {"score": 0.0041586840496756474, "phrase": "predicted_number"}, {"score": 0.0040267122285238, "phrase": "software_manager"}, {"score": 0.0038421645028127636, "phrase": "predictive_model"}, {"score": 0.0035600768845860937, "phrase": "estimated_number"}, {"score": 0.003539252646181146, "phrase": "code_changes"}, {"score": 0.0034268702387746106, "phrase": "estimated_amount"}, {"score": 0.003298631258267805, "phrase": "respective_classes"}, {"score": 0.0032221040639939668, "phrase": "product_metrics"}, {"score": 0.003203250401424656, "phrase": "independent_variables"}, {"score": 0.00307431840409833, "phrase": "source_code"}, {"score": 0.003038440237182784, "phrase": "architecture_layers"}, {"score": 0.0029854041893236714, "phrase": "contribution_factors"}, {"score": 0.0029161225023394363, "phrase": "neural_network_model"}, {"score": 0.0028990540380955596, "phrase": "genetic_training_strategy"}, {"score": 0.0028568174308720167, "phrase": "prediction_results"}, {"score": 0.0027579362569638945, "phrase": "genetic_algorithm"}, {"score": 0.002733753950560054, "phrase": "statistical_estimator"}, {"score": 0.0024813081174066653, "phrase": "business_tier"}, {"score": 0.002409503258044183, "phrase": "existing_object-oriented_metrics"}, {"score": 0.0023466530426848064, "phrase": "business_tier_prediction_model"}, {"score": 0.002193367454830741, "phrase": "real_world_applications"}, {"score": 0.0021741246430344607, "phrase": "trained_models"}, {"score": 0.0021236300589450143, "phrase": "software_mangers"}, {"score": 0.0021049977753042253, "phrase": "software_release_decisions"}], "paper_keywords": ["Defect tracking", " Software readiness", " Software metrics", " Prediction", " Neural network", " Genetic net", " Presentation logic tier", " Business tier", " Data access tier"], "paper_abstract": "In this study, defect tracking is used as a proxy method to predict software readiness. The number of remaining defects in an application under development is one of the most important factors that allow one to decide if a piece of software is ready to be released. By comparing predicted number of faults and number of faults discovered in testing, software manager can decide whether the software is likely ready to be released or not. The predictive model developed in this research can predict: (i) the number of faults (defects) likely to exist, (ii) the estimated number of code changes required to correct a fault and (iii) the estimated amount of time (in minutes) needed to make the changes in respective classes of the application. The model uses product metrics as independent variables to do predictions. These metrics are selected depending on the nature of source code with regards to architecture layers, types of faults and contribution factors of these metrics. The use of neural network model with genetic training strategy is introduced to improve prediction results for estimating software readiness in this study. This genetic-net combines a genetic algorithm with a statistical estimator to produce a model which also shows the usefulness of inputs. The model is divided into three parts: (1) prediction model for presentation logic tier (2) prediction model for business tier and (3) prediction model for data access tier. Existing object-oriented metrics and complexity software metrics are used in the business tier prediction model. New sets of metrics have been proposed for the presentation logic tier and data access tier. These metrics are validated using data extracted from real world applications. The trained models can be used as tools to assist software mangers in making software release decisions. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Estimating software readiness using predictive models", "paper_id": "WOS:000262794200008"}