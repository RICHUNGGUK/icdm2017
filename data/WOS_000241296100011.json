{"auto_keywords": [{"score": 0.0408040079264659, "phrase": "physical_register"}, {"score": 0.026467179991005327, "phrase": "physical_register_file"}, {"score": 0.00481495049065317, "phrase": "value_similarity_detection"}, {"score": 0.004726382602809228, "phrase": "modem_processors"}, {"score": 0.0046394362688524475, "phrase": "large_instruction_windows"}, {"score": 0.00411182818527434, "phrase": "active_instruction"}, {"score": 0.00399881984083004, "phrase": "valid_destination"}, {"score": 0.003747020072136732, "phrase": "instruction_windows"}, {"score": 0.003543804852018315, "phrase": "bigger_physical_register_files"}, {"score": 0.0031697368057340895, "phrase": "physical_register_sharing_technique"}, {"score": 0.0029699874949715367, "phrase": "multiple_instructions"}, {"score": 0.0028615323526689582, "phrase": "value_similarity"}, {"score": 0.002656327554326748, "phrase": "performance_improvement"}, {"score": 0.0023537101705489957, "phrase": "proposed_technique"}, {"score": 0.0021049977753042253, "phrase": "area_overhead"}], "paper_keywords": ["register renaming", " physical register file", " register sharing", " value similarity detection"], "paper_abstract": "Modem processors have large instruction windows to improve performance. They usually adopt register renaming, where every active instruction with a valid destination needs a physical register. As the instruction windows get larger, however, bigger physical register files are required. To solve this problem, we proposed a physical register sharing technique. It shares a physical register among multiple instructions based on a value similarity. As a result, we achieved performance improvement without increasing the size of the physical register file. In addition, the proposed technique can also be used to reduce the timing, complexity and area overhead of the physical register file.", "paper_title": "Physical register sharing through value similarity detection", "paper_id": "WOS:000241296100011"}