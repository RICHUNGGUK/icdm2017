{"auto_keywords": [{"score": 0.04323039047337742, "phrase": "cyclic_reduction_method"}, {"score": 0.01431179801412943, "phrase": "cyclic_reduction"}, {"score": 0.013145484900687638, "phrase": "hybrid_algorithm"}, {"score": 0.008699279307710757, "phrase": "hybrid_parallel_algorithm"}, {"score": 0.00481495049065317, "phrase": "tridiagonal_systems"}, {"score": 0.004728780808284175, "phrase": "multi-core_architectures"}, {"score": 0.004665162327051461, "phrase": "optimized_parallel_algorithm"}, {"score": 0.00441909542037375, "phrase": "complicated_backward_substitution"}, {"score": 0.004320421465896323, "phrase": "tridiagonal_linear_systems"}, {"score": 0.004243064277617193, "phrase": "hybrid_parallel_model"}, {"score": 0.004074016501033133, "phrase": "partition_method"}, {"score": 0.003983016985197904, "phrase": "simple_backward_substitution"}, {"score": 0.003947186611084043, "phrase": "parallel_computers"}, {"score": 0.003755782496223915, "phrase": "operation_count"}, {"score": 0.0037219886365287085, "phrase": "execution_time"}, {"score": 0.003415681637907093, "phrase": "measured_parameters"}, {"score": 0.0033242742850902295, "phrase": "hybrid_approach"}, {"score": 0.0032794890195334513, "phrase": "multi-threading_implementation"}, {"score": 0.0028634235895823594, "phrase": "least_scalar_operation_count"}, {"score": 0.0028248293967214947, "phrase": "shortest_execution_time"}, {"score": 0.0027867539356701302, "phrase": "multi-core_computer"}, {"score": 0.002687702958515561, "phrase": "dimension_threshold"}, {"score": 0.0025572160146590623, "phrase": "partition_methods"}, {"score": 0.00237861522566195, "phrase": "multi-iteration_hybrid_parallel_algorithms"}, {"score": 0.0023044434462692483, "phrase": "iteration_steps"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["hybrid parallel algorithm", " multi-core architecture", " multi-threading", " tridiagonal system of equations"], "paper_abstract": "An optimized parallel algorithm is proposed to solve the problem occurred in the process of complicated backward substitution of cyclic reduction during solving tridiagonal linear systems. Adopting a hybrid parallel model, this algorithm combines the cyclic reduction method and the partition method. This hybrid algorithm has simple backward substitution on parallel computers comparing with the cyclic reduction method. In this paper, the operation count and execution time are obtained to evaluate and make comparison for these methods. On the basis of results of these measured parameters, the hybrid algorithm using the hybrid approach with a multi-threading implementation achieves better efficiency than the other parallel methods, that is, the cyclic reduction and the partition methods. In particular, the approach involved in this paper has the least scalar operation count and the shortest execution time on a multi-core computer when the size of equations meets some dimension threshold. The hybrid parallel algorithm improves the performance of the cyclic reduction and partition methods by 19.2% and 13.2%, respectively. In addition, by comparing the single-iteration and multi-iteration hybrid parallel algorithms, it is found that increasing iteration steps of the cyclic reduction method does not affect the performance of the hybrid parallel algorithm very much. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "An iteration-based hybrid parallel algorithm for tridiagonal systems of equations on multi-core architectures", "paper_id": "WOS:000363766600029"}