{"auto_keywords": [{"score": 0.004392565073466714, "phrase": "usable_formal_model"}, {"score": 0.0037868092509097404, "phrase": "possible_method"}, {"score": 0.003241312187060814, "phrase": "expensive_task"}, {"score": 0.0029565620771207003, "phrase": "checked_property"}, {"score": 0.0028944757265206332, "phrase": "inaccurate_model"}, {"score": 0.002530359917257626, "phrase": "system_components"}, {"score": 0.002275477757478827, "phrase": "grey_box_system"}, {"score": 0.002180848602315088, "phrase": "lower_bounds"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "There are many cases where we want to verify a system that does not have a usable formal model: the model may be missing, out of date, or simply too big to be used. A possible method is to analyze the system while learning the model (black box checking). However, learning may be an expensive task, thus it needs to be guided, e.g., using the checked property or an inaccurate model (adaptive model checking). In this paper, we consider the case where some of the system components are completely specified (white boxes), while others are unknown (black boxes), giving rise to a grey box system. We provide algorithms and lower bounds, as well as experimental results for this model.", "paper_title": "Grey-box checking", "paper_id": "WOS:000241691900030"}