{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mesh_adaptation"}, {"score": 0.049474472243262034, "phrase": "massively_parallel_computers"}, {"score": 0.03804712672731131, "phrase": "computing_cores"}, {"score": 0.004664352260912174, "phrase": "scalable_execution"}, {"score": 0.004605434064238641, "phrase": "parallel_adaptive_analyses"}, {"score": 0.004461359547152617, "phrase": "dynamic_load_balancing"}, {"score": 0.004159997145421619, "phrase": "balanced_work_load"}, {"score": 0.0041074234667687875, "phrase": "minimal_communication"}, {"score": 0.0040042529959108605, "phrase": "adaptive_meshes"}, {"score": 0.0029502941554043964, "phrase": "multiple_parts"}, {"score": 0.002564613964408878, "phrase": "larger_number"}, {"score": 0.002360796860462937, "phrase": "predictive_load_balancing_method"}, {"score": 0.002316105585203396, "phrase": "entity_weights"}, {"score": 0.002286781334850213, "phrase": "dynamic_load_balancing_steps"}, {"score": 0.0021456243019466843, "phrase": "mesh_adaptation_step"}, {"score": 0.0021049977753042253, "phrase": "excessive_memory_spikes"}], "paper_keywords": ["Mesh adaptation", " Parallel computation", " Dynamic load balancing"], "paper_abstract": "The scalable execution of parallel adaptive analyses requires the application of dynamic load balancing to repartition the mesh into a set of parts with balanced work load and minimal communication. As the adaptive meshes being generated reach billions of elements and the analyses are performed on massively parallel computers with 100,000's of computing cores, a number of complexities arise that need to be addressed. This paper presents procedures developed to deal with two of them. The first is a procedure to support multiple parts per processor which is used as the mesh increases in size and it is desirable to partition the mesh to a larger number of computing cores than are currently being used. The second is a predictive load balancing method that sets entity weights before dynamic load balancing steps so that the mesh is well balanced after the mesh adaptation step thus avoiding excessive memory spikes that would otherwise occur during mesh adaptation.", "paper_title": "Tools to support mesh adaptation on massively parallel computers", "paper_id": "WOS:000306587300007"}