{"auto_keywords": [{"score": 0.04056003981914696, "phrase": "overall_performance"}, {"score": 0.00481495049065317, "phrase": "application_behavior"}, {"score": 0.004772818068176176, "phrase": "heterogeneous_manycore_systems"}, {"score": 0.0047310525657970615, "phrase": "kernel_mapping"}, {"score": 0.004689650818647484, "phrase": "many-core_accelerators"}, {"score": 0.004507760907425495, "phrase": "system_processing_capabilities"}, {"score": 0.00440976345264104, "phrase": "application_mapping"}, {"score": 0.004238682850598745, "phrase": "underlying_architecture"}, {"score": 0.004146510711518748, "phrase": "graphics_processing_units"}, {"score": 0.00395069818358908, "phrase": "multi-kernel_applications"}, {"score": 0.0038989120088094185, "phrase": "great_impact"}, {"score": 0.00376409764683147, "phrase": "different_characteristics"}, {"score": 0.0037311260623089436, "phrase": "different_cpus"}, {"score": 0.0034018288705284427, "phrase": "heterogeneous_execution"}, {"score": 0.0033572130837348623, "phrase": "better_performance"}, {"score": 0.002802825862847951, "phrase": "proper_device"}, {"score": 0.0026352496813713292, "phrase": "optimal_mapping"}, {"score": 0.0025328377393370642, "phrase": "different_devices"}, {"score": 0.0023090525096074264, "phrase": "initial_experiments"}, {"score": 0.0021613897794439227, "phrase": "cpu-only_and_gpu-only_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Mixed Integer Programming", " Kernel mapping", " Heterogeneous system"], "paper_abstract": "Many-core accelerators are being more frequently deployed to improve the system processing capabilities. In such systems, application mapping must be enhanced to maximize utilization of the underlying architecture. Especially, in graphics processing units (GPUs), mapping kernels that are part of multi-kernel applications has a great impact on overall performance, since kernels may exhibit different characteristics on different CPUs and GPUs. While some kernels run faster on GPUs, others may perform better in CPUs. Thus, heterogeneous execution may yield better performance than executing the application only on a CPU or only on a GPU. In this paper, we investigate on two approaches: a novel profiling-based adaptive kernel mapping algorithm to assign each kernel of an application to the proper device, and a Mixed-Integer Programming (MIP) implementation to determine optimal mapping. We utilize profiling information for kernels on different devices and generate a map that identifies which kernel should run where in order to improve the overall performance of an application. Initial experiments show that our approach can efficiently map kernels on CPUs and GPUs, and outperforms CPU-only and GPU-only approaches. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Improving application behavior on heterogeneous manycore systems through kernel mapping", "paper_id": "WOS:000329269000009"}