{"auto_keywords": [{"score": 0.004815007698069039, "phrase": "mapreduce"}, {"score": 0.004601508848655033, "phrase": "new_randomized_algorithm"}, {"score": 0.0043533862892678864, "phrase": "mild_conditions"}, {"score": 0.004118587636081584, "phrase": "true_number"}, {"score": 0.003762015811144233, "phrase": "delta"}, {"score": 0.003704797078215222, "phrase": "maximum_number"}, {"score": 0.0032494292163722065, "phrase": "monochromatic_triangles"}, {"score": 0.0021917966722180132, "phrase": "simple_mapreduce_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithms", " Randomized algorithms", " Concentration of measure", " Parallel algorithms"], "paper_abstract": "In this note we introduce a new randomized algorithm for counting triangles in graphs. We show that under mild conditions, the estimate of our algorithm is strongly concentrated around the true number of triangles. Specifically, let G be a graph with it vertices, triangles and let Delta be the maximum number of triangles an edge of G is contained in. Our randomized algorithm colors the vertices of G with N = 1/p colors uniformly at random, counts monochromatic triangles, i.e., triangles whose vertices have the same color, and scales that count appropriately. We show that if p >= max(Delta logn/t . root log n/t) then for any constant epsilon > 0 our unbiased estimate T is concentrated around its expectation, i.e., Pr{[T - E vertical bar T vertical bar] >= epsilon E vertical bar T vertical bar} = o(1). Finally, our algorithm is amenable to being parallelized. We present a simple MAPREDUCE implementation of our algorithm. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Colorful triangle counting and a MAPREDUCE implementation", "paper_id": "WOS:000301215100005"}