{"auto_keywords": [{"score": 0.03257229159460285, "phrase": "behavioural_interfaces"}, {"score": 0.00481495049065317, "phrase": "computational_logic_application_framework_for_service_discovery"}, {"score": 0.004671932143798307, "phrase": "semantic_web_technologies"}, {"score": 0.003969640975997097, "phrase": "fruitful_interaction"}, {"score": 0.00360417515510547, "phrase": "application_framework"}, {"score": 0.0034550163444256386, "phrase": "contracting_steps"}, {"score": 0.0033929894721242367, "phrase": "unified_search_process"}, {"score": 0.003232956879952914, "phrase": "service_discovery"}, {"score": 0.0031941384895530426, "phrase": "ontology-based_reasoning"}, {"score": 0.0029887957779347394, "phrase": "formal_language"}, {"score": 0.002813566267090177, "phrase": "formal_approach"}, {"score": 0.0027630232270330402, "phrase": "computational_logic"}, {"score": 0.0025542617599268323, "phrase": "sciff_reasoning_engine"}, {"score": 0.0021049977753042253, "phrase": "runtime_verification"}], "paper_keywords": ["Abductive Logic Programming", " Analysis", " Contracting", " Interoperability", " Proof Procedure", " Rules", " Semantic Discovery", " Web Services"], "paper_abstract": "In Semantic Web technologies, searching for a service means identifying components that can potentially satisfy user needs in terms of inputs and outputs (discovery) and devise a fruitful interaction with the customer (contracting). In this paper, the authors present an application framework that encompasses both the discovery and the contracting steps in a unified search process. In particular, the authors accommodate service discovery by ontology-based reasoning and contracting by reasoning about behavioural interfaces, published in a formal language. To this purpose, the authors consider a formal approach grounded on Computational Logic. They define, illustrate, and evaluate a framework, called SCIFF Reasoning Engine (SRE), which can establish if a Semantic Web Service and a requester can fruitfully inter-operate, by computing a possible interaction plan based on the behavioural interfaces of both. The same operational machinery used for contracting can be used for runtime verification.", "paper_title": "A Computational Logic Application Framework for Service Discovery and Contracting", "paper_id": "WOS:000295797600001"}