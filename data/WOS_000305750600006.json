{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "prolog"}, {"score": 0.00481495049065317, "phrase": "modeling_modeling"}, {"score": 0.004743806810821005, "phrase": "model-driven_engineering"}, {"score": 0.004673709383305897, "phrase": "model-based_approaches"}, {"score": 0.0044695432851061525, "phrase": "software_engineering"}, {"score": 0.004027031316965272, "phrase": "molisre's_monsieur_jourdain"}, {"score": 0.002836942411239067, "phrase": "canonical_set"}, {"score": 0.002613487968156893, "phrase": "representation_relations"}, {"score": 0.0025178072071268534, "phrase": "graphical_concrete_syntax"}, {"score": 0.0023368018449680295, "phrase": "structural_definition"}, {"score": 0.002136651746284283, "phrase": "formal_interpretation"}], "paper_keywords": ["Model", " Metamodel", " Notation", " Representation"], "paper_abstract": "Model-driven engineering and model-based approaches have permeated all branches of software engineering to the point that it seems that we are using models, as MoliSre's Monsieur Jourdain was using prose, without knowing it. At the heart of modeling, there is a relation that we establish to represent something by something else. In this paper we review various definitions of models and relations between them. Then, we define a canonical set of relations that can be used to express various kinds of representation relations and we propose a graphical concrete syntax to represent these relations. We also define a structural definition for this language in the form of a metamodel and a formal interpretation using Prolog. Hence, this paper is a contribution towards a theory of modeling.", "paper_title": "Modeling modeling modeling", "paper_id": "WOS:000305750600006"}