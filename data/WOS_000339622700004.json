{"auto_keywords": [{"score": 0.05007766350605604, "phrase": "genome-wide_association_studies"}, {"score": 0.04136150871537957, "phrase": "gwas"}, {"score": 0.004326987090971404, "phrase": "intermediate_results"}, {"score": 0.0042354707960660706, "phrase": "characteristic_example"}, {"score": 0.004000741805312148, "phrase": "widely_spread_tool"}, {"score": 0.0039723268236794935, "phrase": "computational_biology"}, {"score": 0.0037924666577694222, "phrase": "correlated_generalized_least-squares_problems"}, {"score": 0.0032766780632972393, "phrase": "multicore_architectures"}, {"score": 0.003072918736387408, "phrase": "successive_problems"}, {"score": 0.003018595266561849, "phrase": "overall_computational_complexity"}, {"score": 0.002923214590192792, "phrase": "required_data_transfers"}, {"score": 0.0026452734009203764, "phrase": "available_cores"}, {"score": 0.0026077803487003, "phrase": "high_performance"}, {"score": 0.002368198542691635, "phrase": "single_multicore_node"}, {"score": 0.0022447206386952126, "phrase": "specific_application"}, {"score": 0.0021893168527276105, "phrase": "valuable_guidelines"}, {"score": 0.002173739308244513, "phrase": "general_applicability"}, {"score": 0.0021582723621960693, "phrase": "computational_scientists"}, {"score": 0.0021049977753042253, "phrase": "numerical_algorithms"}], "paper_keywords": ["Algorithms", " Performance", " Numerical linear algebra", " multiple instances of problems", " shared-memory", " out-of-core", " genome-wide association studies"], "paper_abstract": "In many scientific and engineering applications, one has to solve not one but multiple instances of the same problem. Often times, these problems are linked in a way that allows intermediate results to be reused. A characteristic example for this class of applications is given by the Genome-Wide Association Studies (GWAS), a widely spread tool in computational biology. GWAS entails the solution of up to trillions (10(12)) of correlated generalized least-squares problems, posing a daunting challenge: the performance of petaflops (10(15) floating-point operations) over terabytes (10(12) bytes) of data. In this article, we design an algorithm for performing GWAS on multicore architectures. This is accomplished in three steps. First, we show how to exploit the relation among successive problems, thus reducing the overall computational complexity. Then, through an analysis of the required data transfers, we identify how to eliminate any overhead due to input/output operations. Finally, we study how to decompose computation into tasks to be distributed among the available cores, to attain high performance and scalability. With our algorithm, a GWAS that currently requires the use of a supercomputer may now be performed in matter of hours on a single multicore node. The discussion centers around the methodology to develop the algorithm rather than the specific application. We believe this article contributes valuable guidelines of general applicability for computational scientists on how to develop and optimize numerical algorithms.", "paper_title": "Computing Petaflops over Terabytes of Data: The Case of Genome-Wide Association Studies", "paper_id": "WOS:000339622700004"}