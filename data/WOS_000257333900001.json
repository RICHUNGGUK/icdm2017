{"auto_keywords": [{"score": 0.04648586522455986, "phrase": "user_behavior"}, {"score": 0.012559019410212022, "phrase": "internet_services"}, {"score": 0.0053979333069309535, "phrase": "new_strategies"}, {"score": 0.004906831634456125, "phrase": "user_satisfaction"}, {"score": 0.00481495049065317, "phrase": "web_systems'_quality"}, {"score": 0.004719186515036907, "phrase": "internet_services_workloads"}, {"score": 0.004683765794332412, "phrase": "crucial_step"}, {"score": 0.0045447095497782985, "phrase": "web_users"}, {"score": 0.004332894955218135, "phrase": "web_servers"}, {"score": 0.004193661469720909, "phrase": "workload_generators"}, {"score": 0.004089598384268605, "phrase": "current_workload_generators"}, {"score": 0.00397809711528985, "phrase": "actual_user_interaction"}, {"score": 0.0038309141193444015, "phrase": "hierarchical_characterization"}, {"score": 0.0038117040432926377, "phrase": "simulation_model"}, {"score": 0.0037452213615708522, "phrase": "usar."}, {"score": 0.0036891564805219194, "phrase": "strong_evidence"}, {"score": 0.003661438398237136, "phrase": "significant_part"}, {"score": 0.003588533760251239, "phrase": "users_reactions"}, {"score": 0.003499433771969699, "phrase": "successive_interactions"}, {"score": 0.003447035529485425, "phrase": "system_behavior"}, {"score": 0.003361436959785992, "phrase": "interactive_process"}, {"score": 0.0033027816738734907, "phrase": "user_requirements"}, {"score": 0.0031565959573536194, "phrase": "variable_server_response_time"}, {"score": 0.003109315127546487, "phrase": "performance_evaluation"}, {"score": 0.0030244597238450795, "phrase": "reactive_interaction"}, {"score": 0.0029493237190470352, "phrase": "system's_performance"}, {"score": 0.0029345213456072996, "phrase": "web_applications"}, {"score": 0.002769591751770249, "phrase": "qos"}, {"score": 0.0027417911324611917, "phrase": "special_topic"}, {"score": 0.0025424177449894906, "phrase": "new_admission_control"}, {"score": 0.002529652412291183, "phrase": "scheduling_mechanisms"}, {"score": 0.0024854751276881535, "phrase": "usar-qos_simulator"}, {"score": 0.0024236964502593254, "phrase": "dynamic_interaction"}, {"score": 0.002333888942472883, "phrase": "tpc-w-based_workload"}, {"score": 0.002281606068667498, "phrase": "reactive_policies"}, {"score": 0.0022530666572386305, "phrase": "better_qos"}, {"score": 0.0021860169025888004, "phrase": "hybrid_admission_control"}, {"score": 0.002175037135861406, "phrase": "scheduling_mechanism"}, {"score": 0.00215324241410545, "phrase": "reactive_approaches"}, {"score": 0.0021049977753042253, "phrase": "response_time"}], "paper_keywords": ["web systems", " QoS", " characterization", " performance", " user behavior", " workload generation", " reactivity"], "paper_abstract": "Understanding the characteristics of Internet services workloads is a crucial step to improve the Quality of Service (QoS) offered to Web users. Moreover, studying and modeling the user behavior is important to analyze the performance and the scalability of web servers. This knowledge may be used, for instance, to build workload generators that help evaluating the performance of those servers. Current workload generators are typically memory-less, being unable to mimic actual user interaction with the system. As the basis of this work, we propose a hierarchical characterization and simulation model focused on the user behavior, named USAR. In fact, there is strong evidence that a significant part of the user behavior depends on its satisfaction. Users reactions may affect the load of a server, establishing successive interactions where the user behavior affects the system behavior and vice-versa. It is important to understand this interactive process to design systems more suited to user requirements. In fact, the user reactivity., that is, how the users react to variable server response time, is usually neglected during performance evaluation. In this work we study and explain how this reactive interaction is performed by users and how it affects the system's performance. Web applications demand requirements, such as performance and scalability, in order to guarantee QoS to users. Due to these requirements, QoS has become a special topic of interest and many mechanisms to provide it have been proposed. In this work, we address the use of reactivity to improve Internet services. We propose and evaluate new admission control and scheduling mechanisms. We designed and implemented the USAR-QoS simulator that allows the evaluation of the new strategies considering the dynamic interaction between client and server sides in Internet services. We simulate the new strategies using a TPC-W-based workload. The experiments show the benefits of the reactive policies which can result in better QoS for Internet Services, improving the user satisfaction. We also propose a hybrid admission control and scheduling mechanism that combines both reactive approaches. The results show benefits in terms of response time and user satisfaction.", "paper_title": "Reactivity-based approaches to improve web systems' Quality of Service", "paper_id": "WOS:000257333900001"}