{"auto_keywords": [{"score": 0.0304334424465417, "phrase": "distributed_program"}, {"score": 0.03021354117365901, "phrase": "test_data"}, {"score": 0.004814951205791253, "phrase": "nektar"}, {"score": 0.0046390482426405324, "phrase": "open-source_software_framework"}, {"score": 0.0045591640444711465, "phrase": "high-performance_scalable"}, {"score": 0.004525348532095125, "phrase": "partial_differential_equations"}, {"score": 0.0044695432851061525, "phrase": "high-order_methods"}, {"score": 0.004359979820520376, "phrase": "low-order_techniques"}, {"score": 0.004338390136272005, "phrase": "reduced_computational_cost"}, {"score": 0.0039380388343479384, "phrase": "mathematical_complexities"}, {"score": 0.0039088121438737924, "phrase": "underlying_method"}, {"score": 0.0037940502405699765, "phrase": "broader_scientific_and_industrial_communities"}, {"score": 0.003719413340279216, "phrase": "discretisation_techniques"}, {"score": 0.0037009838130157547, "phrase": "implementation_strategies"}, {"score": 0.0036735099701128604, "phrase": "methods_research"}, {"score": 0.0036371940143656973, "phrase": "application-focused_computation"}, {"score": 0.003601235776892337, "phrase": "multi-layered_structure"}, {"score": 0.003384386136643813, "phrase": "mathematical_constructs"}, {"score": 0.003334309053314909, "phrase": "associated_collection"}, {"score": 0.0033177813460815346, "phrase": "pre-written_pde_solvers"}, {"score": 0.0032524830614231513, "phrase": "application-level_functionality"}, {"score": 0.003104229536414091, "phrase": "program"}, {"score": 0.0029889584492584073, "phrase": "cpc_program_library"}, {"score": 0.002974137488715791, "phrase": "queen's_university"}, {"score": 0.0029593902411692405, "phrase": "belfast"}, {"score": 0.0029447150254434842, "phrase": "n._ireland"}, {"score": 0.002915746758163754, "phrase": "mit"}, {"score": 0.00269263690712392, "phrase": "tar.gz_programming_language"}, {"score": 0.002568423260493933, "phrase": "microsoft"}, {"score": 0.0025622011698529777, "phrase": "windows"}, {"score": 0.0025494476549536476, "phrase": "ram"}, {"score": 0.002499094513009327, "phrase": "external_routines"}, {"score": 0.0024743598785371772, "phrase": "pftw"}, {"score": 0.0024621693210992376, "phrase": "mpi"}, {"score": 0.002449880029410025, "phrase": "blas"}, {"score": 0.0024377205105079575, "phrase": "lapack"}, {"score": 0.002425629863299805, "phrase": "metis"}, {"score": 0.0023136697664950037, "phrase": "time-independent_or_time-dependent_partial_differential_equations"}, {"score": 0.0021741821763405045, "phrase": "mesh_size"}, {"score": 0.002163392574631535, "phrase": "total_integration_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["High-order finite elements", " Spectral/hp elements", " Continuous Galerkin method", " Discontinuous Galerkin method", " FEM"], "paper_abstract": "Nektar++ is an open-source software framework designed to support the development of high-performance scalable solvers for partial differential equations using the spectral/hp element method. High-order methods are gaining prominence in several engineering and biomedical applications due to their improved accuracy over low-order techniques at reduced computational cost for a given number of degrees of freedom. However, their proliferation is often limited by their complexity, which makes these methods challenging to implement and use. Nektar++ is an initiative to overcome this limitation by encapsulating the mathematical complexities of the underlying method within an efficient C++ framework, making the techniques more accessible to the broader scientific and industrial communities. The software supports a variety of discretisation techniques and implementation strategies, supporting methods research as well as application-focused computation, and the multi-layered structure of the framework allows the user to embrace as much or as little of the complexity as they need. The libraries capture the mathematical constructs of spectral/hp element methods, while the associated collection of pre-written PDE solvers provides out-of-the-box application-level functionality and a template for users who wish to develop solutions for addressing questions in their own scientific domains. Program summary Program title: Nektar++ Catalogue identifier: AEVV_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEVV_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: MIT No. of lines in distributed program, including test data, etc.: 1052456 No. of bytes in distributed program, including test data, etc.: 42851367 Distribution format: tar.gz Programming language: C++. Computer: Any PC workstation or cluster. Operating system: Linux/UNIX, OS X, Microsoft Windows. RAM: 512 MB Classification: 12. External routines: Boost, PFTW, MPI, BLAS, LAPACK and METIS (www.cs.umn.edu) Nature of problem: The Nektar++ framework is designed to enable the discretisation and solution of time-independent or time-dependent partial differential equations. Solution method: Spectral/hp element method Running time: The tests provided take a few minutes to run. Runtime in general depends on mesh size and total integration time. (C) 2015 The Authors. Published by Elsevier B.V.", "paper_title": "Nektar plus plus : An open-source spectral/hp element framework", "paper_id": "WOS:000354141100020"}