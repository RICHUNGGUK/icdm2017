{"auto_keywords": [{"score": 0.04740923095220252, "phrase": "search_tree"}, {"score": 0.0448795777376165, "phrase": "csp"}, {"score": 0.015097113738764332, "phrase": "mac"}, {"score": 0.00814019868828792, "phrase": "fc-rkp"}, {"score": 0.00481495049065317, "phrase": "responsibility_sets"}, {"score": 0.004717485406306594, "phrase": "csp_search_algorithm"}, {"score": 0.004660032113368461, "phrase": "fc"}, {"score": 0.004224130367280183, "phrase": "refined_domains"}, {"score": 0.004189698902282913, "phrase": "unassigned_variables"}, {"score": 0.0036602993802452863, "phrase": "current_node"}, {"score": 0.0033176589215021353, "phrase": "dead-end_node"}, {"score": 0.0030193416820392554, "phrase": "dead-end_nodes"}, {"score": 0.002759058732719621, "phrase": "rkp"}, {"score": 0.0026598027217023534, "phrase": "kernel"}, {"score": 0.0026390281628198894, "phrase": "propagation"}, {"score": 0.002583931950389087, "phrase": "pruning_method"}, {"score": 0.0025628355581338563, "phrase": "algorithms_fc"}, {"score": 0.0025419151297016458, "phrase": "mac."}, {"score": 0.0024001337476063094, "phrase": "experimental_evaluation"}, {"score": 0.0023322317017275803, "phrase": "random_csps"}, {"score": 0.002303720729387236, "phrase": "random_graph_coloring_problems"}, {"score": 0.0022477377970612847, "phrase": "theoretical_interest"}, {"score": 0.0021662983565317283, "phrase": "fc-cbj."}, {"score": 0.0021049977753042253, "phrase": "intelligent_backtracking"}], "paper_keywords": ["CSP search algorithm", " FC-RKP", " MAC-RKP", " kernel"], "paper_abstract": "A CSP search algorithm, like FC or MAC, explores a search tree during its run. Every node of the search tree can be associated with a CSP created by the refined domains of unassigned variables. If the algorithm detects that the CSP associated with a node is insoluble, the node becomes a dead-end. A strategy of pruning \"by analogy\" states that the current node of the search tree can be discarded if the CSP associated with it is \"more constrained\" than a CSP associated with some dead-end node. In this paper we present a method of pruning based on the above strategy. The information about the CSPs associated with dead-end nodes is kept in the structures called responsibility sets and kernels. We term the method that uses these structures for pruning RKP, which is abbreviation of Responsibility set, Kernel, Propagation. We combine the pruning method with algorithms FC and MAC. We call the resulting solvers FC-RKP and MAC-RKP, respectively. Experimental evaluation shows that MAC-RKP outperforms MAC-CBJ on random CSPs and on random graph coloring problems. The RKP-method also has theoretical interest. We show that under certain restrictions FC-RKP simulates FC-CBJ. It follows from the fact that intelligent backtracking implicitly uses the strategy of pruning \"by analogy.\"", "paper_title": "A CSP search algorithm with responsibility sets and kernels", "paper_id": "WOS:000246520900001"}