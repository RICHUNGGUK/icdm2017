{"auto_keywords": [{"score": 0.049827899396674, "phrase": "automatic_tdd_behavior_assessment"}, {"score": 0.04609922691405817, "phrase": "rigorous_definition"}, {"score": 0.0449541258620854, "phrase": "tdd_practices"}, {"score": 0.03982529689104567, "phrase": "code_information"}, {"score": 0.027455175023267085, "phrase": "tdd"}, {"score": 0.00481495049065317, "phrase": "compliance_rules"}, {"score": 0.004690305164360866, "phrase": "test-driven_design"}, {"score": 0.004580872896983597, "phrase": "quantitative_assessment_studies"}, {"score": 0.004533055713299744, "phrase": "great_extent"}, {"score": 0.004392565073466714, "phrase": "tdd._an_emerging_approach"}, {"score": 0.0042452552248398445, "phrase": "automated_systems"}, {"score": 0.004200926582376575, "phrase": "operational_definition"}, {"score": 0.00414616342377235, "phrase": "specific_tdd_process"}, {"score": 0.004102865227227448, "phrase": "validation_tests"}, {"score": 0.004007083686875716, "phrase": "empirical_construction"}, {"score": 0.003986103192038901, "phrase": "tdd_understanding"}, {"score": 0.003965232110619725, "phrase": "consensus_building"}, {"score": 0.003903269701018361, "phrase": "different_definitions"}, {"score": 0.003832198214757852, "phrase": "practitioners'_perception"}, {"score": 0.003752550907120244, "phrase": "automatic_assessment"}, {"score": 0.003684213587410217, "phrase": "besouro"}, {"score": 0.0035512365087537476, "phrase": "main_rationale"}, {"score": 0.0035326342965847583, "phrase": "besouro's_design"}, {"score": 0.00347740824437241, "phrase": "distinct_operational_definitions"}, {"score": 0.0034140643485473087, "phrase": "users'_perception"}, {"score": 0.0033430782507921594, "phrase": "conformance_assessment"}, {"score": 0.0032564108181093038, "phrase": "clear_separation"}, {"score": 0.0030254743224136273, "phrase": "atomic_events"}, {"score": 0.0028630535573013686, "phrase": "operational_definitions"}, {"score": 0.0027887956749296995, "phrase": "on-line_user_assessment_awareness"}, {"score": 0.0027451660965981763, "phrase": "event-related_information"}, {"score": 0.002723607240517261, "phrase": "respective_code"}, {"score": 0.00270221723573854, "phrase": "code_version_system"}, {"score": 0.002639047226967183, "phrase": "besouro's_features"}, {"score": 0.00251048377083841, "phrase": "user_feedback"}, {"score": 0.002407078478216306, "phrase": "users'_feedback"}, {"score": 0.0023818980286716826, "phrase": "source_code"}, {"score": 0.00235698036946969, "phrase": "automatic_classification"}, {"score": 0.0022837769780376846, "phrase": "successful_tdd_application"}, {"score": 0.002253949158637255, "phrase": "tdd_benefits"}, {"score": 0.002183938718432764, "phrase": "proposed_approach"}, {"score": 0.0021384748235753425, "phrase": "empirical_validation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["TDD", " Conformance assessment", " Framework"], "paper_abstract": "Context: The improvements promoted by Test-Driven Design (TDD) have not been confirmed by quantitative assessment studies. To a great extent, the problem lies in the lack of a rigorous definition for TDD. An emerging approach has been to measure the conformance of TDD practices with the support of automated systems that embed an operational definition, which represent the specific TDD process assumed and the validation tests used to determine its presence and quantity. The empirical construction of TDD understanding and consensus building requires the ability of comparing different definitions, evaluating them with regard to practitioners' perception, and exploring code information for improvement of automatic assessment. Objective: This paper describes Besouro, a framework targeted at the development of systems for automatic TDD behavior assessment. The main rationale of Besouro's design is the ability to compare distinct operational definitions, evaluate them with regard to users' perception, and explore code information for further analysis and conformance assessment improvement. Method: We developed an architecture with clear separation of concerns, which enables to vary: (a) the atomic events and respective metrics to be collected from developing and testing environments; (b) the organization of atomic events in streams of actions or processes; and (c) the classification and assessment components for each set of operational definitions adopted. The architecture also includes a mechanism for on-line user assessment awareness and feedback, and integrates event-related information with the respective code in a code version system. Results: We illustrate the usefulness of Besouro's features for understanding the actions and processes underlying TDD through a prototype developed to support an experiment based on user feedback. We show how it was possible to compare variations of a same operational definition by exploring users' feedback, and use source code to improve the automatic classification of TDD practices. Conclusion: Understanding the actions and processes underlying successful TDD application is key for leveraging TDD benefits. In the absence of a rigorous definition for TDD, the proposed approach aims at building consensus from experimentation and empirical validation. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Besouro: A framework for exploring compliance rules in automatic TDD behavior assessment", "paper_id": "WOS:000345947500028"}