{"auto_keywords": [{"score": 0.049124089120586564, "phrase": "traceability_links"}, {"score": 0.02232609969448717, "phrase": "software_artefacts"}, {"score": 0.00481495049065317, "phrase": "semantic_recovery"}, {"score": 0.0043533862892678864, "phrase": "software_engineers"}, {"score": 0.004266501496765747, "phrase": "understanding_relations"}, {"score": 0.003935892934907777, "phrase": "software_development_process"}, {"score": 0.003522579870903474, "phrase": "existing_source_code"}, {"score": 0.0033492947290751996, "phrase": "software_maintenance"}, {"score": 0.0031845067058084583, "phrase": "novel_approach"}, {"score": 0.0029672941061574375, "phrase": "formal_ontological_representations"}, {"score": 0.002821247621250663, "phrase": "source_code_artefacts"}, {"score": 0.002628747284714371, "phrase": "semantic_level"}, {"score": 0.0023287359930308864, "phrase": "linked_ontologies"}, {"score": 0.0022365262201954643, "phrase": "ontology_reasoners"}, {"score": 0.0021049977753042253, "phrase": "implicit_relations"}], "paper_keywords": [""], "paper_abstract": "Traceability links provide support for software engineers in understanding relations and dependencies among software artefacts created during the software development process. The authors focus on re-establishing traceability links between existing source code and documentation to support software maintenance. They present a novel approach that addresses this issue by creating formal ontological representations for both documentation and source code artefacts. Their approach recovers traceability links at the semantic level, utilising structural and semantic information found in various software artefacts. These linked ontologies are supported by ontology reasoners to allow the inference of implicit relations among these software artefacts.", "paper_title": "Ontological approach for the semantic recovery of traceability links between software artefacts", "paper_id": "WOS:000257319600003"}