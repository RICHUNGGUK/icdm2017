{"auto_keywords": [{"score": 0.02969983125784511, "phrase": "buffering_requirements"}, {"score": 0.00481495049065317, "phrase": "buffer_minimization"}, {"score": 0.00475924837336259, "phrase": "earliest-deadline_first_scheduling_of_dataflow_graphs"}, {"score": 0.004704187604192605, "phrase": "symbolic_schedulability_analysis"}, {"score": 0.00464976086880886, "phrase": "dataflow_graphs"}, {"score": 0.004464156619275582, "phrase": "timing_parameters"}, {"score": 0.004090901264701185, "phrase": "task_system"}, {"score": 0.003950453462399077, "phrase": "high_throughput"}, {"score": 0.003859500298805362, "phrase": "specific_scheduling_policy"}, {"score": 0.0037487368769596814, "phrase": "resulted_schedule"}, {"score": 0.003662410853488772, "phrase": "communication_buffers"}, {"score": 0.0030042210975126616, "phrase": "abstract_affine_schedule"}, {"score": 0.002867348342846275, "phrase": "underflow_exceptions"}, {"score": 0.00249293148301837, "phrase": "lock-based_synchronizations"}, {"score": 0.0023654615987859402, "phrase": "affine_schedule"}], "paper_keywords": ["Theory", " Algorithms", " Design", " Dataflow graphs", " Symbolic schedulability analysis", " Buffer minimization", " Affine relation", " Earliest-deadline first scheduling"], "paper_abstract": "Symbolic schedulability analysis of dataflow graphs is the process of synthesizing the timing parameters (i.e. periods, phases, and deadlines) of actors so that the task system is schedulable and achieves a high throughput when using a specific scheduling policy. Furthermore, the resulted schedule must ensure that communication buffers are underflow- and overflow-free. This paper describes a (partitioned) earliest-deadline first symbolic schedulability analysis of dataflow graphs that minimizes the buffering requirements. Our scheduling analysis consists of three major steps. (1) The construction of an abstract affine schedule of the graph that excludes overflow and underflow exceptions and minimizes the buffering requirements assuming some precedences between jobs. (2) Symbolic deadlines adjustment that guarantees precedences without the need for lock-based synchronizations. (3) The concretization of the affine schedule using a symbolic, fast-converging, processor-demand analysis for both uniprocessor and multiprocessor systems. Experimental results show that our technique improves the buffering requirements in many cases.", "paper_title": "Buffer Minimization in Earliest-Deadline First Scheduling of Dataflow Graphs", "paper_id": "WOS:000321865100015"}