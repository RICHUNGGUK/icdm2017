{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "specification_properties"}, {"score": 0.04960770684597511, "phrase": "task_models"}, {"score": 0.04890933270671448, "phrase": "formal_verification"}, {"score": 0.04844894171082025, "phrase": "human-automation_interaction"}, {"score": 0.04201891621603315, "phrase": "model_checking"}, {"score": 0.004361276005140776, "phrase": "complex_systems"}, {"score": 0.004212759658511567, "phrase": "system_interactions"}, {"score": 0.003911253966141701, "phrase": "formal_verification_analysis"}, {"score": 0.003685604033479918, "phrase": "task_analytic_models"}, {"score": 0.0035954555250614197, "phrase": "formal_system_models"}, {"score": 0.0033879628186273625, "phrase": "previous_work"}, {"score": 0.003068327486877065, "phrase": "analyst_error"}, {"score": 0.0029637093924781825, "phrase": "unexpected_dangerous_hai_conditions"}, {"score": 0.0025541693207036167, "phrase": "hai_problems"}, {"score": 0.0022452005651385095, "phrase": "landing_checklist"}, {"score": 0.0021049977753042253, "phrase": "future_research_directions"}], "paper_keywords": ["Formal methods", " human-automation interaction (HAI)", " model checking", " system safety", " task analysis"], "paper_abstract": "Human-automation interaction (HAI) is often a contributor to failures in complex systems. This is frequently due to system interactions that were not anticipated by designers and analysts. Model checking is a method of formal verification analysis that automatically proves whether or not a formal system model adheres to desirable specification properties. Task analytic models can be included in formal system models to allow HAI to be evaluated with model checking. However, previous work in this area has required analysts to manually formulate the properties to check. Such a practice can be prone to analyst error and oversight which can result in unexpected dangerous HAI conditions not being discovered. To address this, this paper presents a method for automatically generating specification properties from task models that enables analysts to use formal verification to check for system HAI problems they may not have anticipated. This paper describes the design and implementation of the method. An example (a pilot performing a before landing checklist) is presented to illustrate its utility. Limitations of this approach and future research directions are discussed.", "paper_title": "Automatically Generating Specification Properties From Task Models for the Formal Verification of Human-Automation Interaction", "paper_id": "WOS:000342229500001"}