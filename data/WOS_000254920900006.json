{"auto_keywords": [{"score": 0.04165826455732129, "phrase": "hierarchical_hmscs"}, {"score": 0.008325647658968635, "phrase": "hierarchical_mscs"}, {"score": 0.00481495049065317, "phrase": "hierarchical_message_sequence_charts"}, {"score": 0.004622783000449884, "phrase": "software_development_use_hierarchy"}, {"score": 0.004386887374401584, "phrase": "uml._message_sequence_charts"}, {"score": 0.004236321075918639, "phrase": "standardized_notation"}, {"score": 0.0027049694095434905, "phrase": "basic_algorithms"}, {"score": 0.002566685388128598, "phrase": "costly_unfolding"}, {"score": 0.0022576249214220187, "phrase": "membership_problem"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time_algorithm"}], "paper_keywords": ["hierarchical specifications", " MSC", " complexity"], "paper_abstract": "Several formalisms and tools for software development use hierarchy in system design, for instance statecharts and diagrams in UML. Message sequence charts (MSCs) are a standardized notation for asynchronously communicating processes. The norm Z.120 also includes hierarchical HMSCs. Algorithms on MSCs rarely take into account all possibilities covered by the norm. In particular, hierarchy is not taken into account since the models that are usually considered are (flat) MSC-graphs, that correspond to the unfolding of hierarchical HMSCs. However, complexity can increase exponentially by unfolding. The aim of this paper is to show that basic algorithms can be designed such that they avoid the costly unfolding of hierarchical MSCs and HMSCs. We show this for the membership and the pattern matching problem. We prove that the membership problem for hierarchical HMSCs is PSPACE-complete. Then we describe a polynomial time algorithm for the pattern matching problem on hierarchical MSCs.", "paper_title": "Pattern matching and membership for hierarchical message sequence charts", "paper_id": "WOS:000254920900006"}