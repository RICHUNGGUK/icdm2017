{"auto_keywords": [{"score": 0.049517389162701646, "phrase": "web_services"}, {"score": 0.00481495049065317, "phrase": "functional_feature_interactions"}, {"score": 0.004592905436175987, "phrase": "business_applications"}, {"score": 0.004178935413340453, "phrase": "higher-level_services"}, {"score": 0.0039626308903511764, "phrase": "poor_service_quality"}, {"score": 0.0036697319652557363, "phrase": "unexpected_and_undesirable_ways"}, {"score": 0.003479692058963528, "phrase": "feature_interaction_problem"}, {"score": 0.0032800186243040663, "phrase": "functional_and_non-functional_feature_interactions"}, {"score": 0.0031100973266506163, "phrase": "service_functionality"}, {"score": 0.002846175473457555, "phrase": "feature_interactions"}, {"score": 0.0028127163745564777, "phrase": "functional_features"}, {"score": 0.002573965014439041, "phrase": "labeled_transition_systems"}, {"score": 0.0024118292918742967, "phrase": "use_case_maps"}, {"score": 0.0023139986108451967, "phrase": "high-level_behavior"}, {"score": 0.002273292707863821, "phrase": "composite_service"}, {"score": 0.0021049977753042253, "phrase": "generic_templates"}], "paper_keywords": ["feature interactions", " web services", " Labeled Transition Systems", " Use Case Maps"], "paper_abstract": "Web services expose features of business applications, and make them accessible to other businesses. Services can be combined and recombined into higher-level services. However, as services evolve, undesirable results and poor service quality can be the outcome: web services may interact with each other in unexpected and undesirable ways. This problem is also known as the feature interaction problem. In our earlier work, we have provided examples of functional and non-functional feature interactions of web services, i.e. interactions related to service functionality and service properties. In this paper, we describe a method for detecting feature interactions between functional features. This method is based on the verification of safety and progress properties in Labeled Transition Systems (LTSs). We also discuss the use of Use Case Maps (UCMs) to describe the high-level behavior of a composite service, which provides input to our analysis method, and present our initial work towards extracting generic templates for defining properties.", "paper_title": "Method for detecting functional feature interactions of web services", "paper_id": "WOS:000241341900007"}