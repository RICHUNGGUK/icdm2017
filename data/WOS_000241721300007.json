{"auto_keywords": [{"score": 0.049447946898790056, "phrase": "data_caches"}, {"score": 0.015616881986156449, "phrase": "soft_errors"}, {"score": 0.011577620427394521, "phrase": "ecc"}, {"score": 0.0077385332690702935, "phrase": "selective_refetch"}, {"score": 0.00481495049065317, "phrase": "data_cache_susceptibility"}, {"score": 0.004704407458864224, "phrase": "fundamental_component"}, {"score": 0.004565984572487962, "phrase": "data_memory"}, {"score": 0.0044759626695474106, "phrase": "data_cache"}, {"score": 0.004315487055548749, "phrase": "memory_hierarchy"}, {"score": 0.004244449986839909, "phrase": "main_threats"}, {"score": 0.004216362268148017, "phrase": "data_cache_reliability"}, {"score": 0.0038420287603415566, "phrase": "single_event"}, {"score": 0.003728885511755734, "phrase": "energetic_particles"}, {"score": 0.003667468902144262, "phrase": "alpha_particles"}, {"score": 0.0034203358208034973, "phrase": "protection_techniques"}, {"score": 0.003386412845243943, "phrase": "single_bit_errors"}, {"score": 0.0032324864013225166, "phrase": "proper_design_decisions"}, {"score": 0.003034682308336483, "phrase": "storage_capacity"}, {"score": 0.003004572722189157, "phrase": "important_goal"}, {"score": 0.002955050521440921, "phrase": "failure_rate"}, {"score": 0.00286795254228461, "phrase": "normal_system_operation"}, {"score": 0.0027193846595965593, "phrase": "architectural_simulators"}, {"score": 0.0026656724016739905, "phrase": "new_technique"}, {"score": 0.0025528981558942372, "phrase": "cache_lines"}, {"score": 0.00234142781099973, "phrase": "experimental_results"}, {"score": 0.0022053535889915914, "phrase": "slight_decrease"}, {"score": 0.0021049977753042253, "phrase": "error_rate"}], "paper_keywords": ["fault tolerance", " reliability", " soft errors", " error modeling", " cache memories", " refresh", " refetch"], "paper_abstract": "Data caches are a fundamental component of most modern microprocessors. They provide for efficient read/write access to data memory. Errors occurring in the data cache can corrupt data values or state, and can easily propagate throughout the memory hierarchy. One of the main threats to data cache reliability is soft (transient, nonreproducible) errors. These errors can occur more often than hard (permanent) errors, and most often arise from Single Event Upsets (SEUs) caused by strikes from energetic particles such as neutrons and alpha particles. Many protection techniques exist for data caches; the most common are ECC (Error Correcting Codes) and parity. These protection techniques detect all single bit errors and, in the case of ECC, correct them. To make proper design decisions about which protection technique to use, accurate design-time modeling of cache reliability is crucial. In addition, as caches increase in storage capacity, another important goal is to reduce the failure rate of a cache, to limit disruption to normal system operation. In this paper, we present our modeling approach for assessing the impact of soft errors using architectural simulators. We also describe a new technique for reducing the vulnerability of data caches: refetching. By selectively refetching cache lines from the ECC-protected L2 cache, we can significantly reduce the vulnerability of the L1 data cache. We discuss and present results for two different algorithms that perform selective refetch. Experimental results show that we can obtain an 85 percent decrease in vulnerability when running the SPEC2K benchmark suite while only experiencing a slight decrease in performance. Our results demonstrate that selective refetch can cost-effectively decrease the error rate of an L1 data cache.", "paper_title": "Reducing data cache susceptibility to soft errors", "paper_id": "WOS:000241721300007"}