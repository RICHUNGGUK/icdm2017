{"auto_keywords": [{"score": 0.013964892713548312, "phrase": "traditional_page_rank_algorithms"}, {"score": 0.010605964449600542, "phrase": "page_rank"}, {"score": 0.00481495049065317, "phrase": "page_rank_approximations"}, {"score": 0.004762893197005439, "phrase": "graph_engines"}, {"score": 0.004660453459210931, "phrase": "frogwild"}, {"score": 0.0045108906244892165, "phrase": "fast_approximation"}, {"score": 0.004462105963334103, "phrase": "high_page_rank_vertices"}, {"score": 0.004342430078306461, "phrase": "network_costs"}, {"score": 0.004090274535243564, "phrase": "quantized_version"}, {"score": 0.004046020290832207, "phrase": "power_iteration"}, {"score": 0.0038527044625533574, "phrase": "directed_graph"}, {"score": 0.0036288825833675127, "phrase": "graph_lab_framework"}, {"score": 0.0034366728236876047, "phrase": "network_traffic"}, {"score": 0.003272375502853897, "phrase": "per-iteration_cost"}, {"score": 0.003115908199991072, "phrase": "partial_synchronization"}, {"score": 0.0030157628075954588, "phrase": "random_walks"}, {"score": 0.0027641218567092665, "phrase": "partial_synchronization_process"}, {"score": 0.002719325177422626, "phrase": "bound_establishing"}, {"score": 0.0026175952455594277, "phrase": "true_page_rank_vector"}, {"score": 0.0025334249463305875, "phrase": "graph_lab"}, {"score": 0.0024519545383399773, "phrase": "default_page_rank_implementation"}, {"score": 0.002235040467016128, "phrase": "twitter_graph"}, {"score": 0.0021049977753042253, "phrase": "standard_graph_lab_page_rank_implementation"}], "paper_keywords": [""], "paper_abstract": "We propose FROGWILD, a novel algorithm for fast approximation of high Page Rank vertices, geared towards reducing network costs of running traditional Page Rank algorithms. Our algorithm can be seen as a quantized version of power iteration that performs multiple parallel random walks over a directed graph. One important innovation is that we introduce a modification to the Graph Lab framework that only partially synchronizes mirror vertices. This partial synchronization vastly reduces the network traffic generated by traditional Page Rank algorithms, thus greatly reducing the per-iteration cost of Page Rank. On the other hand, this partial synchronization also creates dependencies between the random walks used to estimate Page Rank. Our main theoretical innovation is the analysis of the correlations introduced by this partial synchronization process and a bound establishing that our approximation is close to the true Page Rank vector. We implement our algorithm in Graph Lab and compare it against the default Page Rank implementation. We show that our algorithm is very fast, performing each iteration in less than one second on the Twitter graph and can be up to 7x faster compared to the standard Graph Lab Page Rank implementation.", "paper_title": "FrogWild! - Fast Page Rank Approximations on Graph Engines", "paper_id": "WOS:000362281800006"}