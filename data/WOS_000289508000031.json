{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "graph_structures"}, {"score": 0.0496213341565463, "phrase": "multi-start_nodes"}, {"score": 0.04916809664432026, "phrase": "automatic_program_generation"}, {"score": 0.04203986116571504, "phrase": "extended_algorithm"}, {"score": 0.030070332590530862, "phrase": "plural_programs"}, {"score": 0.004611224230543916, "phrase": "applicable_fields"}, {"score": 0.004567129988306349, "phrase": "evolutionary_computation"}, {"score": 0.004501774379030109, "phrase": "genetic_programming"}, {"score": 0.0043738432231020885, "phrase": "typical_method"}, {"score": 0.004188702178897384, "phrase": "genetic_network_programming"}, {"score": 0.003973194389024911, "phrase": "gp"}, {"score": 0.0038973170902076707, "phrase": "gene_structures"}, {"score": 0.0038047474331318974, "phrase": "graph-based_evolutionary_algorithm"}, {"score": 0.0031540120386134058, "phrase": "complicated_programs"}, {"score": 0.003123808471618783, "phrase": "compact_structures"}, {"score": 0.0025521085778978042, "phrase": "also_its_standard_deviation"}, {"score": 0.0023972750359328235, "phrase": "even-n-parity_problem"}, {"score": 0.0023743009016047424, "phrase": "mirror_symmetry"}, {"score": 0.0023066880707738736, "phrase": "performance_evaluation"}, {"score": 0.002219516542316085, "phrase": "proposed_method"}, {"score": 0.0021876814398268775, "phrase": "standard_gnp"}, {"score": 0.002166711569953301, "phrase": "single_start_node"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Evolutionary computation", " Program generation", " Graph structure", " Even-n-Parity problem", " Mirror Symmetry problem"], "paper_abstract": "Automatic program generation is one of the applicable fields of evolutionary computation, and Genetic Programming (GP) is the typical method for this field. On the other hand, Genetic Network Programming (GNP) has been proposed as an extended algorithm of GP in terms of gene structures. GNP is a graph-based evolutionary algorithm and applied to automatic program generation in this paper. GNP has directed graph structures which have some features inherently, for example, re-usability of nodes and the small number of nodes. These features contribute to creating complicated programs with compact structures and never cause bloat. In this paper, the extended algorithm of GNP is proposed, which can create plural programs simultaneously in one individual by using multi-start nodes. In addition, GNP can evolve the programs in one individual considering the fitness and also its standard deviation in order to evolve the plural programs efficiently. In the simulations, Even-n-Parity problem and Mirror Symmetry problem are used for the performance evaluation, and the results show that the proposed method outperforms the standard GNP with single start node. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Efficient program generation by evolving graph structures with multi-start nodes", "paper_id": "WOS:000289508000031"}