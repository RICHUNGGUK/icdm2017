{"auto_keywords": [{"score": 0.0496213341565463, "phrase": "cuda"}, {"score": 0.00481495049065317, "phrase": "grover_algorithm_simulation"}, {"score": 0.004723323168738631, "phrase": "gpgpu."}, {"score": 0.0046781613377273774, "phrase": "grover_quantum_search_algorithm"}, {"score": 0.004416079619543104, "phrase": "search_heuristics"}, {"score": 0.004050116768809519, "phrase": "search_algorithm"}, {"score": 0.0038600230206554792, "phrase": "simulation_workflow"}, {"score": 0.0038047474331318974, "phrase": "compute_unified_device_architecture"}, {"score": 0.0035229930971258316, "phrase": "grover_algorithm"}, {"score": 0.0034392837410790293, "phrase": "general-purpose_computing"}, {"score": 0.0034063576796640603, "phrase": "graphics_processing_units"}, {"score": 0.0032308006242867224, "phrase": "memory_space"}, {"score": 0.0027564303939865476, "phrase": "grover_algorithm_simulations"}, {"score": 0.002703869368554536, "phrase": "storage_costs"}, {"score": 0.0025521085778978042, "phrase": "experimental_results"}, {"score": 0.0024914105981393127, "phrase": "distinguished_program"}, {"score": 0.002432152706473349, "phrase": "serial_program"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grover's algorithm", " CUDA", " GPGPU", " Simulation"], "paper_abstract": "The Grover quantum search algorithm, one of only a few representative quantum algorithms, can speed up many classical algorithms that use search heuristics. No true quantum computer has yet been developed. For the present, simulation is one effective means of verifying the search algorithm. In this work, we focus on the simulation workflow using a compute unified device architecture (CUDA). Two simulation workflow schemes are proposed. These schemes combine the characteristics of the Grover algorithm and the parallelism of general-purpose computing on graphics processing units (GPGPU). We also analyzed the optimization of memory space and memory access from this perspective. We implemented four programs on CUDA to evaluate the performance of schemes and optimization. Through experimentation, we analyzed the organization of threads suited to Grover algorithm simulations, compared the storage costs of the four programs, and validated the effectiveness of optimization. Experimental results also showed that the distinguished program on CUDA outperformed the serial program of libquantum on a CPU with a speedup of up to 23 times (12 times on average), depending on the scale of the simulation. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Workflow of the Grover algorithm simulation incorporating CUDA and GPGPU", "paper_id": "WOS:000321602500001"}