{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "redundancy_schemes"}, {"score": 0.004466519142879166, "phrase": "high_data_availability"}, {"score": 0.0036324746826127997, "phrase": "previous_comparison"}, {"score": 0.0034657012607680173, "phrase": "download_behavior"}, {"score": 0.0031845067058084583, "phrase": "hybrid_redundancy_scheme"}, {"score": 0.003066945490483524, "phrase": "user_downloaded_files"}, {"score": 0.0030097975788892896, "phrase": "subsequent_accesses"}, {"score": 0.002818013056816282, "phrase": "file_availability"}, {"score": 0.002765490759189057, "phrase": "comparison_experiments"}, {"score": 0.0025409639091476363, "phrase": "erasure_coding"}, {"score": 0.0023566987138026285, "phrase": "average_node_availability"}, {"score": 0.0021049977753042253, "phrase": "acceptable_redundancy_factor"}], "paper_keywords": ["peer-to-peer", " distributed hash table", " redundancy", " replication", " erasure coding"], "paper_abstract": "In order to provide high data availability in peer-to-peer (P2P) DHTs, proper data redundancy schemes are required. This paper compares two popular schemes: replication and erasure coding. Unlike previous comparison, we take user download behavior into account. Furthermore, we propose a hybrid redundancy scheme, which shares user downloaded files for subsequent accesses and utilizes erasure coding to adjust file availability. Comparison experiments of three schemes show that replication saves more bandwidth than erasure coding, although it requires more storage space, when average node availability is higher than 47%; moreover, our hybrid scheme saves more maintenance bandwidth with acceptable redundancy factor.", "paper_title": "Insight into redundancy schemes in DHTs", "paper_id": "WOS:000252224700006"}