{"auto_keywords": [{"score": 0.036027526259979556, "phrase": "bandwidth_bottleneck"}, {"score": 0.03573249625593098, "phrase": "heterogeneous_peers"}, {"score": 0.008813351198315531, "phrase": "higher_quality_cluster"}, {"score": 0.00481495049065317, "phrase": "smart_qos"}, {"score": 0.0045888223900501695, "phrase": "medium_scale_content_distribution_systems"}, {"score": 0.004498812433096501, "phrase": "file_sharing"}, {"score": 0.004263262404800517, "phrase": "real_time_video_broadcasting"}, {"score": 0.0042391934825554076, "phrase": "rtvb"}, {"score": 0.004039995317682942, "phrase": "startup_time"}, {"score": 0.003893981879985013, "phrase": "smartpeercast"}, {"score": 0.003850121210842558, "phrase": "media_transrating_service"}, {"score": 0.0036691380448651443, "phrase": "network_awareness"}, {"score": 0.003648411055689428, "phrase": "codec_awareness"}, {"score": 0.003617539106699534, "phrase": "high_performance_rtvb_service"}, {"score": 0.0035165002796966895, "phrase": "newly_joined_peers"}, {"score": 0.0034966325163550177, "phrase": "different_quality_clusters"}, {"score": 0.003447451122274614, "phrase": "clustering_mechanism"}, {"score": 0.0032026066791743866, "phrase": "streaming_quality"}, {"score": 0.003121956071019313, "phrase": "receiving_peers"}, {"score": 0.0030955250132409964, "phrase": "smart_qos_algorithm"}, {"score": 0.0030519680616994008, "phrase": "network_jitters"}, {"score": 0.003009022147559257, "phrase": "peer's_playback_jitter"}, {"score": 0.0029249294679606656, "phrase": "data_forwarding_qos"}, {"score": 0.00290016162105678, "phrase": "sending_peer"}, {"score": 0.0028674628275126824, "phrase": "best_suitable_parent_node"}, {"score": 0.0028111220617485985, "phrase": "smart_qos_framework"}, {"score": 0.0027794243746094905, "phrase": "incentive_mechanism"}, {"score": 0.0027325449069867222, "phrase": "high_uploading_contributions"}, {"score": 0.0026411384812121503, "phrase": "transrating_engine"}, {"score": 0.002603958475519519, "phrase": "leaf_nodes"}, {"score": 0.0025819015229390663, "phrase": "high_quality_cluster"}, {"score": 0.0025383451160985488, "phrase": "suitable_bits"}, {"score": 0.0024884548152669496, "phrase": "low_quality_cluster"}, {"score": 0.0024120247307686084, "phrase": "uploading_bandwidth"}, {"score": 0.002324712040137157, "phrase": "stream_forwarding"}, {"score": 0.0021965026903942486, "phrase": "content_bottleneck"}, {"score": 0.0021594338450797485, "phrase": "smaller_startup_time"}, {"score": 0.0021472168069854056, "phrase": "packet_loss"}, {"score": 0.0021169751090290585, "phrase": "high_performance"}], "paper_keywords": ["P2P", " Broadcasting", " Live streaming", " QoS", " Transrating"], "paper_abstract": "The P2P swarm technologies have been shown to be very efficient for medium scale content distribution systems in the last few years, such as the file sharing and video-on-demand (VOD) applications. However it is still an open topic about how to deploy the P2P paradigm for the real time video broadcasting (RTVB) applications. The P2P RTVB application is different from the cache based P2P system because it has more stringent restrictions for startup time and packet loss ratio. In this paper, an adaptive media broadcasting P2P framework named SmartPeerCast which employs the media transrating service to control the quality of service (QoS), is proposed. SmartPeerCast achieves a network awareness, codec awareness, and high performance RTVB service with four key designs: (1) It groups the newly joined peers into different quality clusters by their uploading capability. This clustering mechanism avoids the bandwidth bottleneck between the heterogeneous peers of the overall P2P overlay by only forwarding the same quality stream over the peers in the same cluster. (2) The streaming quality is adjusted adaptively between the sending and the receiving peers by a Smart QoS algorithm to compensate for the network jitters to reduce the receiving peer's playback jitter. (3) The receiving peer monitors the data forwarding QoS of the sending peer to select the best suitable parent node dynamically. The SmartPeerCast uses this Smart QoS framework to implement an incentive mechanism to award the peers with high uploading contributions by migrating them to a higher quality cluster. (4) A transrating engine is used at the leaf nodes of the high quality cluster to forward the stream with suitable bits rate to the nodes of the low quality cluster; this transrating service not only can fully utilize the uploading bandwidth of the peers in the higher quality cluster but also avoids the bandwidth bottleneck of stream forwarding between the heterogeneous peers. Our experiment results and the real deployment show that SmartPeerCast can eliminate the bandwidth bottleneck and content bottleneck between the heterogeneous peers with a smaller startup time and packet loss and it is a high performance and medium scale P2P RTVB framework.", "paper_title": "SmartPeerCast: a Smart QoS driven P2P live streaming framework", "paper_id": "WOS:000291953700012"}