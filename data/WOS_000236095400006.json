{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-agent_programs"}, {"score": 0.0037402558657576124, "phrase": "multi-agent_systems"}, {"score": 0.0035722806911457545, "phrase": "logic-based_agent-oriented_programming_language_agentspeak"}, {"score": 0.003451255599055595, "phrase": "promela"}, {"score": 0.003373030435597218, "phrase": "java"}, {"score": 0.0031481164109237636, "phrase": "associated_spin"}, {"score": 0.00307657476125683, "phrase": "jpf_model_checkers"}, {"score": 0.002938317647182056, "phrase": "resulting_systems"}, {"score": 0.0027424619603260837, "phrase": "simplified_bdi_logical_language"}, {"score": 0.0021049977753042253, "phrase": "simple_case_study"}], "paper_keywords": ["agent-oriented programming", " AgentSpeak", " model checking", " spin", " JPF"], "paper_abstract": "This paper gives an overview of our recent work on an approach to verifying multi-agent programs. We automatically translate multi-agent systems programmed in the logic-based agent-oriented programming language AgentSpeak into either Promela or Java, and then use the associated Spin and JPF model checkers to verify the resulting systems. We also describe the simplified BDI logical language that is used to write the properties we want the systems to satisfy. The approach is illustrated by means of a simple case study.", "paper_title": "Verifying multi-agent programs by model checking", "paper_id": "WOS:000236095400006"}