{"auto_keywords": [{"score": 0.04246301635594336, "phrase": "dmtl"}, {"score": 0.00481495049065317, "phrase": "frequent_pattern_mining"}, {"score": 0.004778266009063913, "phrase": "fpm"}, {"score": 0.0047057084749407485, "phrase": "important_data_mining_paradigm"}, {"score": 0.004652016085325825, "phrase": "informative_patterns"}, {"score": 0.004409404470207072, "phrase": "practical_framework"}, {"score": 0.004342430078306461, "phrase": "fpm_tasks"}, {"score": 0.004007083686875716, "phrase": "fpm._dmtl"}, {"score": 0.003961330917648707, "phrase": "generic_data_mining_approach"}, {"score": 0.003697538418750941, "phrase": "novel_pattern_property_hierarchy"}, {"score": 0.0036274201504044685, "phrase": "different_pattern_types"}, {"score": 0.003585986761045987, "phrase": "property_hierarchy"}, {"score": 0.0034911335714333507, "phrase": "systematic_characterization"}, {"score": 0.0034512514926836667, "phrase": "pattern_space"}, {"score": 0.003334309053314909, "phrase": "new_pattern_types"}, {"score": 0.00307657476125683, "phrase": "different_mining_properties"}, {"score": 0.002983700956478823, "phrase": "mining_approach"}, {"score": 0.00290473242917264, "phrase": "data_types"}, {"score": 0.0027955219242123013, "phrase": "back-end_storage_manager"}, {"score": 0.0026393362602995254, "phrase": "tremendous_flexibility"}, {"score": 0.0024258721867522707, "phrase": "new_pattern"}, {"score": 0.002361632539339945, "phrase": "synthetic_and_public_dataset"}, {"score": 0.002272794656458419, "phrase": "persistent_back-end"}, {"score": 0.0021872912745910127, "phrase": "open-source_software"}, {"score": 0.0021049977753042253, "phrase": "numerous_researchers"}], "paper_keywords": ["Frequent pattern mining", " Itemset mining", " Sequence mining", " Tree mining", " Graph mining", " Generic programming"], "paper_abstract": "Frequent pattern mining (FPM) is an important data mining paradigm to extract informative patterns like itemsets, sequences, trees, and graphs. However, no practical framework for integrating the FPM tasks has been attempted. In this paper, we describe the design and implementation of the Data Mining Template Library (DMTL) for FPM. DMTL utilizes a generic data mining approach, where all aspects of mining are controlled via a set of properties. It uses a novel pattern property hierarchy to define and mine different pattern types. This property hierarchy can be thought of as a systematic characterization of the pattern space, i.e., a meta-pattern specification that allows the analyst to specify new pattern types, by extending this hierarchy. Furthermore, in DMTL all aspects of mining are controlled by a set of different mining properties. For example, the kind of mining approach to use, the kind of data types and formats to mine over, the kind of back-end storage manager to use, are all specified as a list of properties. This provides tremendous flexibility to customize the toolkit for various applications. Flexibility of the toolkit is exemplified by the ease with which support for a new pattern can be added. Experiments on synthetic and public dataset are conducted to demonstrate the scalability provided by the persistent back-end in the library. DMTL been publicly released as open-source software (http://dmtl.sourceforge.net/), and has been downloaded by numerous researchers from all over the world.", "paper_title": "An integrated, generic approach to pattern mining: data mining template library", "paper_id": "WOS:000260065200005"}