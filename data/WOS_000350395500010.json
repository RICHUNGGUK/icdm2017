{"auto_keywords": [{"score": 0.0390829115805425, "phrase": "public_slas"}, {"score": 0.013956469866559696, "phrase": "proposed_framework"}, {"score": 0.007888807132257477, "phrase": "new_sla"}, {"score": 0.00481495049065317, "phrase": "inconstant_user_requirements"}, {"score": 0.004776853267973129, "phrase": "cloud_slas_management"}, {"score": 0.004701556483912018, "phrase": "service_level_agreements"}, {"score": 0.004590820632326585, "phrase": "non-trivial_issue"}, {"score": 0.0044826811976193485, "phrase": "cloud_computing"}, {"score": 0.00435971969507033, "phrase": "significant_components"}, {"score": 0.0043080553835735825, "phrase": "rapidly_emerging_active_media"}, {"score": 0.004257000695796238, "phrase": "current_era"}, {"score": 0.003978866233891427, "phrase": "current_cloud_sla_management_methods"}, {"score": 0.003885085477351673, "phrase": "sla_contents"}, {"score": 0.003823791479971016, "phrase": "technology_innovation"}, {"score": 0.0037935066882208235, "phrase": "user_requirement_change"}, {"score": 0.0033402088717816416, "phrase": "consumer's_sla"}, {"score": 0.0033005860945173136, "phrase": "cumbersome_process"}, {"score": 0.0031467250930224152, "phrase": "cloud_computing_sla_management_mechanism"}, {"score": 0.003097043800165555, "phrase": "real_options_analysis_concept"}, {"score": 0.0030602966787192745, "phrase": "cloud_slas"}, {"score": 0.0030239842475439814, "phrase": "dynamic_manner"}, {"score": 0.002837451022172113, "phrase": "new_user's_requirements"}, {"score": 0.0025892330566358503, "phrase": "future_analysis"}, {"score": 0.002419798694301991, "phrase": "uncertainty_parameters"}, {"score": 0.0024006068621542642, "phrase": "dynamic_change"}, {"score": 0.002381566880282456, "phrase": "cloud_sla_management"}, {"score": 0.002316105585203396, "phrase": "web_sla"}, {"score": 0.0022977765703733498, "phrase": "java"}, {"score": 0.0022614266476954467, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "efficient_and_scalable_cloud_sla_management_mechanism"}], "paper_keywords": ["Cloud computing", " Service level agreement (SLA)", " Real options analysis", " SLA mapping"], "paper_abstract": "Dynamically managing service level agreements (SLAs) is a non-trivial issue for both active media technology users and providers. Cloud computing is considered as one of the significant components of the rapidly emerging active media in the current era. As the technology grows rapidly, cloud computing requirements and techniques also change over time, while the current cloud SLA management methods are rigorous in terms of SLA contents updates with the technology innovation and user requirement change. In other words, public SLAs are used as templates, and when issuing a new SLA, it is necessary to map its requirements to all public SLAs. In addition, updating any consumer's SLA requires a cumbersome process of remapping their changed requirements to all public SLAs. This paper proposes a cloud computing SLA management mechanism based on the real options analysis concept to manage cloud SLAs in a dynamic manner. At the beginning, or when issuing a new SLA, the proposed framework receives a new user's requirements and maps these to all public SLAs, while executes only the most appropriate SLA based on options analysis and records/marks the other related solutions (SLAs) for future analysis to address any further change due to internal/external factor. This also provides a mechanism to effectively counter uncertainty parameters triggering dynamic change in cloud SLA management. The framework was deployed using Web SLA and Java followed by an experimental study to evaluate the efficacy and scalability of the proposed framework. The results show that the proposed framework provides efficient and scalable cloud SLA management mechanism.", "paper_title": "A framework to address inconstant user requirements in cloud SLAs management", "paper_id": "WOS:000350395500010"}