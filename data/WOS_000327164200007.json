{"auto_keywords": [{"score": 0.04034190794741309, "phrase": "loop_fusion"}, {"score": 0.00481495049065317, "phrase": "memory_and_performance_impacts"}, {"score": 0.004551199992546761, "phrase": "modern_processors"}, {"score": 0.004466519142879166, "phrase": "data_transfer"}, {"score": 0.004383406949799696, "phrase": "floating-point_operations"}, {"score": 0.004261617028111862, "phrase": "predominant_cost"}, {"score": 0.003916098498242888, "phrase": "memory_accesses"}, {"score": 0.003701401653850141, "phrase": "optimum_amount"}, {"score": 0.003125175084962886, "phrase": "memory_traffic"}, {"score": 0.002765490759189057, "phrase": "fusion_choices"}, {"score": 0.0027139447110929586, "phrase": "data_movement"}, {"score": 0.0026384167183586015, "phrase": "memory_hierarchy"}, {"score": 0.002447101794397243, "phrase": "model's_memory_traffic_predictions"}, {"score": 0.0022273034991008326, "phrase": "loop_fusion_variants"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Performance tuning", " Memory-bound computation", " Linear algebra", " Memory modeling"], "paper_abstract": "On modern processors, data transfer exceeds floating-point operations as the predominant cost in many linear algebra computations. One tuning technique that focuses on reducing memory accesses is loop fusion. Determining the optimum amount of loop fusion to apply to a routine is difficult as fusion can both positively and negatively impact memory traffic. We present a model that accurately and efficiently evaluates how loop fusion choices affect data movement through the memory hierarchy. We show how to convert the model's memory traffic predictions to runtime estimates that can be used to compare loop fusion variants. (c) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Modeling the memory and performance impacts of loop fusion", "paper_id": "WOS:000327164200007"}