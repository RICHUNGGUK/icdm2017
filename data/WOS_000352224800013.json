{"auto_keywords": [{"score": 0.03164044153479802, "phrase": "cache_lines"}, {"score": 0.00481495049065317, "phrase": "flexible_fault-tolerant_cache"}, {"score": 0.004703878334423852, "phrase": "ultra_low_voltage_operation"}, {"score": 0.00453144352814823, "phrase": "large_part"}, {"score": 0.004489327204473076, "phrase": "total_microprocessor_power"}, {"score": 0.004406260054779782, "phrase": "voltage_scaling"}, {"score": 0.004264558080356621, "phrase": "dynamic_and_leakage_power"}, {"score": 0.004146716743362567, "phrase": "aggressive_voltage_reduction"}, {"score": 0.004108161406159407, "phrase": "process-variation-induced_failures"}, {"score": 0.003957477564354679, "phrase": "cache_reliability"}, {"score": 0.0036213041338584756, "phrase": "flexible_defect_map"}, {"score": 0.0035211747962710246, "phrase": "significant_reduction"}, {"score": 0.0034884152484429207, "phrase": "energy_consumption"}, {"score": 0.0034559594248079807, "phrase": "aggressive_voltage"}, {"score": 0.0033919477901198716, "phrase": "high_error_reliability"}, {"score": 0.0032827577713351336, "phrase": "faulty_cache_blocks"}, {"score": 0.003206916619690171, "phrase": "block-level_or_line-level_replication"}, {"score": 0.0028133741785871867, "phrase": "redundancy_replacement"}, {"score": 0.002787181295054319, "phrase": "fft-cache"}, {"score": 0.002735522834514124, "phrase": "minimal_number"}, {"score": 0.0026105159490849364, "phrase": "maximum_amount"}, {"score": 0.002456486927713543, "phrase": "operational_voltage"}, {"score": 0.0022793032191981404, "phrase": "dynamic_power"}, {"score": 0.0022161977759646693, "phrase": "leakage_power"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Aggressive voltage scaling", " fault-tolerant cache", " low voltage operation", " remapping"], "paper_abstract": "Caches are known to consume a large part of total microprocessor power. Traditionally, voltage scaling has been used to reduce both dynamic and leakage power in caches. However, aggressive voltage reduction causes process-variation-induced failures in cache SRAM arrays, which compromise cache reliability. In this article, we propose FFT-Cache, a flexible fault-tolerant cache that uses a flexible defect map to configure its architecture to achieve significant reduction in energy consumption through aggressive voltage scaling while maintaining high error reliability. FFT-Cache uses a portion of faulty cache blocks as redundancy-using block-level or line-level replication within or between sets-to tolerate other faulty caches lines and blocks. Our configuration algorithm categorizes the cache lines based on degree of conflict between their blocks to reduce the granularity of redundancy replacement. FFT-Cache thereby sacrifices a minimal number of cache lines to avoid impacting performance while tolerating the maximum amount of defects. Our experimental results on a processor executing SPEC2K benchmarks demonstrate that the operational voltage of both L1/L2 caches can be reduced down to 375 mV, which achieves up to 80% reduction in the dynamic power and up to 48% reduction in the leakage power. This comes with only a small performance loss (<%5) and 13% area overhead.", "paper_title": "Using a Flexible Fault-Tolerant Cache to Improve Reliability for Ultra Low Voltage Operation", "paper_id": "WOS:000352224800013"}