{"auto_keywords": [{"score": 0.03808744219400253, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "dynamic_flexibility"}, {"score": 0.004713162564945179, "phrase": "major_challenge"}, {"score": 0.004646496622257368, "phrase": "modern_system_design"}, {"score": 0.004420472010542188, "phrase": "requirements_evolutions"}, {"score": 0.004357927940322685, "phrase": "adapting_behaviors"}, {"score": 0.004265760046406154, "phrase": "substantial_code_modification"}, {"score": 0.004175533280178052, "phrase": "whole_system"}, {"score": 0.0039723268236794935, "phrase": "service_interruption"}, {"score": 0.00388828234270598, "phrase": "state_loss"}, {"score": 0.00332375606483146, "phrase": "dynamic_aspect_weaving_techniques"}, {"score": 0.0032533888943254144, "phrase": "component_architecture"}, {"score": 0.002861302930564756, "phrase": "unmodified_code_execution"}, {"score": 0.002780783274864117, "phrase": "similar_performance"}, {"score": 0.002683304054823427, "phrase": "monolithic_jvm_kaffe"}, {"score": 0.0026077803487003, "phrase": "different_extension_scenarios"}, {"score": 0.0024966173564939264, "phrase": "jvm"}, {"score": 0.002480680078868508, "phrase": "jvms_behavior"}, {"score": 0.002212892265364764, "phrase": "applications_behavior"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["dynamic adaptation", " aspect weaving", " Java virtual machine"], "paper_abstract": "Dynamic flexibility is a major challenge in modern system design to react to context or applicative requirements evolutions. Adapting behaviors may impose substantial code modification across the whole system, in the field, without service interruption and without state loss. This paper presents the JnJVM, a full Java virtual machine (JVM) that satisfies these needs by using dynamic aspect weaving techniques and a component architecture. It supports adding or replacing its own code, while it is running, with no overhead on unmodified code execution. Our measurements reveal similar performance when compared with the monolithic JVM Kaffe. Three illustrative examples show different extension scenarios: (i) modifying the JVMs behavior; (ii) adding capabilities to the JVM; and (iii) modifying applications behavior. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Designing highly flexible virtual machines: the JnJVM experience", "paper_id": "WOS:000261811000004"}