{"auto_keywords": [{"score": 0.04475067331481927, "phrase": "datapath_circuits"}, {"score": 0.008764137883762077, "phrase": "multiple-bit-wide_signals"}, {"score": 0.007935257655222988, "phrase": "area_efficiency"}, {"score": 0.00481495049065317, "phrase": "multi-bit_correlation"}, {"score": 0.004729977262447766, "phrase": "field-programmable_gate_array_routing_resources"}, {"score": 0.004613516457919661, "phrase": "field-programmable_gate_arrays"}, {"score": 0.0044047527104545525, "phrase": "large_arithmetic-intensive_applications"}, {"score": 0.004373480870285314, "phrase": "large_arithmetic_intensive_applications"}, {"score": 0.004311598785718415, "phrase": "large_proportion"}, {"score": 0.004160681347769684, "phrase": "multiple-bit-wide_data"}, {"score": 0.004000741805312148, "phrase": "large_amount"}, {"score": 0.003846926701870193, "phrase": "logic_block"}, {"score": 0.0038060092376105414, "phrase": "dsp_block"}, {"score": 0.003752126270661821, "phrase": "multi-bit_addressable_memory_cell"}, {"score": 0.003569451476205552, "phrase": "fpga_routing_resources"}, {"score": 0.003395640013786862, "phrase": "switch_patterns"}, {"score": 0.0033475472608077823, "phrase": "conventional_routing_architecture"}, {"score": 0.0032883848851259123, "phrase": "routing_switches"}, {"score": 0.0032533888943254144, "phrase": "routing_tracks"}, {"score": 0.0031731685183735508, "phrase": "computing_elements"}, {"score": 0.003061976628792769, "phrase": "densely_populated_single-bit_region"}, {"score": 0.003029382820031577, "phrase": "sparsely_populated_multi-bit_region"}, {"score": 0.0029336622847544857, "phrase": "routing_area"}, {"score": 0.002881793492919646, "phrase": "arithmetic_intensive_applications"}, {"score": 0.0027610089418453614, "phrase": "configuration_memory"}, {"score": 0.0027025233739857374, "phrase": "multi-bit_aware_patterns"}, {"score": 0.0025800088089364737, "phrase": "multi-bit_and_single-bit_signals"}, {"score": 0.0024368006923629476, "phrase": "multi-bit_signals"}, {"score": 0.002359759876402679, "phrase": "single-bit_signals"}, {"score": 0.0023180144105895257, "phrase": "configuration_memory_sharing"}, {"score": 0.0022527488455744674, "phrase": "enhanced_multi-bit_aware_patterns"}, {"score": 0.0022050057829960694, "phrase": "multi-bit_aware_and_single-bit_oriented_switches"}, {"score": 0.0021049977753042253, "phrase": "single-bit_and_multi-bit_signals"}], "paper_keywords": ["Area efficiency", " datapath-oriented FPGA", " field-programmable gate arrays (FPGAs)", " routing resources"], "paper_abstract": "As the logic capacity of field-programmable gate arrays (FPGAs) increases, they are being increasingly used to implement large arithmetic-intensive applications. Large arithmetic intensive applications often contain a large proportion of datapath circuits. Since datapath circuits are designed to process multiple-bit-wide data, FPGAs implementing these circuits often have to transport a large amount of multiple-bit-wide signals from one computing element (such as a logic block, a DSP block, or a multi-bit addressable memory cell) to another. In this work, we investigate the area efficiency of FPGA routing resources for transporting multiple-bit-wide signals. It is shown that, for datapath circuits, the switch patterns used by the conventional routing architecture, which uniformly distribute routing switches across the routing tracks, are inefficient for connecting the computing elements to their tracks. The more efficient multi-bit aware patterns, which contain a densely populated single-bit region and a sparsely populated multi-bit region, can be effectively used to reduce the routing area of FPGAs for implementing arithmetic intensive applications by 6%-10%. It is also shown that the further sharing of configuration memory among the switches within the multi-bit aware patterns does not significantly increase their area efficiency since datapath circuits typically contain a mixture of multi-bit and single-bit signals-while configuration memory sharing can substantially increase the area efficiency of routing resources for transporting multi-bit signals, it also significantly reduces their ability for transporting single-bit signals. More importantly, configuration memory sharing can significantly reduce the effectiveness of the enhanced multi-bit aware patterns-patterns that incorporate both multi-bit aware and single-bit oriented switches within a single region in order to increase its ability for transporting both single-bit and multi-bit signals.", "paper_title": "The Effect of Multi-Bit Correlation on the Design of Field-Programmable Gate Array Routing Resources", "paper_id": "WOS:000286515100012"}