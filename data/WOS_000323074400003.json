{"auto_keywords": [{"score": 0.03363896917055259, "phrase": "aggregate_results"}, {"score": 0.01531500866771543, "phrase": "software_effort_estimation"}, {"score": 0.01020986781927522, "phrase": "sanity_check"}, {"score": 0.00481495049065317, "phrase": "conclusion_stability"}, {"score": 0.0047310525657970615, "phrase": "best_effort_predictor"}, {"score": 0.00440976345264104, "phrase": "inconsistent_results"}, {"score": 0.004257360656055417, "phrase": "different_datasets"}, {"score": 0.0041102032028337366, "phrase": "\"ranking_instability\"_problem"}, {"score": 0.003968112038249246, "phrase": "evaluation_criteria"}, {"score": 0.0037311260623089436, "phrase": "stable_rankings"}, {"score": 0.003698442219929622, "phrase": "different_predictors"}, {"score": 0.0034168317227203206, "phrase": "wilcoxon_rank_test"}, {"score": 0.00303398491761013, "phrase": "single_error_measure"}, {"score": 0.0030073932473455942, "phrase": "mre"}, {"score": 0.002941913249957503, "phrase": "newly_developed_evaluation_algorithm"}, {"score": 0.0029161225023394363, "phrase": "cluster."}, {"score": 0.002600661525224505, "phrase": "stable_conclusions"}, {"score": 0.0025665261770229757, "phrase": "relative_performance"}, {"score": 0.002544017922741882, "phrase": "see_predictors"}, {"score": 0.002488604965680912, "phrase": "regression_trees"}, {"score": 0.0024667783849055634, "phrase": "analogy-based_methods"}, {"score": 0.002434396049547248, "phrase": "best_performers"}, {"score": 0.002339771435910601, "phrase": "specific_results"}, {"score": 0.0021998194157393353, "phrase": "conclusion_instability_issue"}, {"score": 0.0021805201234139475, "phrase": "see"}, {"score": 0.0021049977753042253, "phrase": "empirical_software_engineering"}], "paper_keywords": ["Effort estimation", " Data mining", " Stability", " Linear regression", " Regression trees", " Neural nets", " Analogy", " MMRE", " Evaluation criteria"], "paper_abstract": "Background: Conclusion Instability in software effort estimation (SEE) refers to the inconsistent results produced by a diversity of predictors using different datasets. This is largely due to the \"ranking instability\" problem, which is highly related to the evaluation criteria and the subset of the data being used. Aim: To determine stable rankings of different predictors. Method: 90 predictors are used with 20 datasets and evaluated using 7 performance measures, whose results are subject to Wilcoxon rank test (95 %). These results are called the \"aggregate results\". The aggregate results are challenged by a sanity check, which focuses on a single error measure (MRE) and uses a newly developed evaluation algorithm called CLUSTER. These results are called the \"specific results.\" Results: Aggregate results show that: (1) It is now possible to draw stable conclusions about the relative performance of SEE predictors; (2) Regression trees or analogy-based methods are the best performers. The aggregate results are also confirmed by the specific results of the sanity check. Conclusion: This study offers means to address the conclusion instability issue in SEE, which is an important finding for empirical software engineering.", "paper_title": "Finding conclusion stability for selecting the best effort predictor in software effort estimation", "paper_id": "WOS:000323074400003"}