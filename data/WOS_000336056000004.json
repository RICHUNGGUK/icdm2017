{"auto_keywords": [{"score": 0.04829600554967144, "phrase": "utdd"}, {"score": 0.04752324951388923, "phrase": "software_development_practice"}, {"score": 0.015395394349675804, "phrase": "unit_test-driven_development"}, {"score": 0.00481495049065317, "phrase": "developer_experience"}, {"score": 0.004519908617935935, "phrase": "unit_test_cases"}, {"score": 0.004388450908826472, "phrase": "production_code"}, {"score": 0.0038343546245999285, "phrase": "code_quality"}, {"score": 0.003660452313567116, "phrase": "developers'_experience_level"}, {"score": 0.0035389348527719404, "phrase": "utdd."}, {"score": 0.003378385493203297, "phrase": "process_conformance"}, {"score": 0.003349984456443527, "phrase": "development_time"}, {"score": 0.0032938942910948096, "phrase": "research_point"}, {"score": 0.0030657684627749364, "phrase": "prior_experience"}, {"score": 0.0029764767329116875, "phrase": "industrial_point"}, {"score": 0.002770273247998903, "phrase": "effective_solution"}, {"score": 0.0027009493171069763, "phrase": "real_projects"}, {"score": 0.0026445028886931837, "phrase": "skilled_developers"}, {"score": 0.0025674490885184173, "phrase": "utdd_concepts"}, {"score": 0.002482126086922683, "phrase": "short_while"}, {"score": 0.0024097920845706795, "phrase": "small_programming_tasks"}, {"score": 0.002261794227418188, "phrase": "best_design"}, {"score": 0.002195866991284673, "phrase": "performance_penalty"}, {"score": 0.0021049977753042253, "phrase": "senior_programmers"}], "paper_keywords": ["Test-driven development", " test-first design", " software engineering process", " software quality/SQA", " software construction", " process conformance", " programmer productivity"], "paper_abstract": "Unit test-driven development (UTDD) is a software development practice where unit test cases are specified iteratively and incrementally before production code. In the last years, researchers have conducted several studies within academia and industry on the effectiveness of this software development practice. They have investigated its utility as compared to other development techniques, focusing mainly on code quality and productivity. This quasi-experiment analyzes the influence of the developers' experience level on the ability to learn and apply UTDD. The ability to apply UTDD is measured in terms of process conformance and development time. From the research point of view, our goal is to evaluate how difficult is learning UTDD by professionals without any prior experience in this technique. From the industrial point of view, the goal is to evaluate the possibility of using this software development practice as an effective solution to take into account in real projects. Our results suggest that skilled developers are able to quickly learn the UTDD concepts and, after practicing them for a short while, become as effective in performing small programming tasks as compared to more traditional test-last development techniques. Junior programmers differ only in their ability to discover the best design, and this translates into a performance penalty since they need to revise their design choices more frequently than senior programmers.", "paper_title": "Effects of Developer Experience on Learning and Applying Unit Test-Driven Development", "paper_id": "WOS:000336056000004"}