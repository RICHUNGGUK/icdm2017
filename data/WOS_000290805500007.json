{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "batch_jobs"}, {"score": 0.004539005582217309, "phrase": "two-level_scheduler"}, {"score": 0.004374593906165761, "phrase": "continuous_stream"}, {"score": 0.004310501708408856, "phrase": "sequential_and_multi-threaded_batch_jobs"}, {"score": 0.004093453936415085, "phrase": "interconnected_clusters"}, {"score": 0.0040334640350288, "phrase": "heterogeneous_single-processor"}, {"score": 0.003974349782102708, "phrase": "symmetric_multiprocessor_machines"}, {"score": 0.003774164192882704, "phrase": "arriving_jobs"}, {"score": 0.003584025547693836, "phrase": "hardware_and_software_resource_usage"}, {"score": 0.003353521531649663, "phrase": "lightweight_meta-scheduler"}, {"score": 0.0032319109979344184, "phrase": "incoming_jobs"}, {"score": 0.0030017207229983385, "phrase": "underlying_resources"}, {"score": 0.0028715299874549245, "phrase": "cluster_level"}, {"score": 0.0028293966058473476, "phrase": "flexible_backfilling_algorithm"}, {"score": 0.0027469703311742647, "phrase": "job_machine_associations"}, {"score": 0.0026867260506696455, "phrase": "dynamic_information"}, {"score": 0.0025892330566358503, "phrase": "scheduling_decisions"}, {"score": 0.0024586427394152196, "phrase": "job_priorities"}, {"score": 0.0023869914500743083, "phrase": "different_sets"}, {"score": 0.0023003498123420237, "phrase": "different_proposals"}, {"score": 0.0021842976754894846, "phrase": "performance_figures"}], "paper_keywords": ["Multi-criteria job scheduling", " Meta-scheduler", " Workload balancing", " Grid"], "paper_abstract": "This paper proposes a two-level scheduler for dynamically scheduling a continuous stream of sequential and multi-threaded batch jobs on grids, made up of interconnected clusters of heterogeneous single-processor and/or symmetric multiprocessor machines. The scheduler aims to schedule arriving jobs respecting their computational and deadline requirements, and optimizing the hardware and software resource usage. At the top of the hierarchy a lightweight meta-scheduler (MS) classifies incoming jobs according to their requirements, and schedules them among the underlying resources balancing the workload. At cluster level a Flexible Backfilling algorithm carries out the job machine associations by exploiting dynamic information about the environment. Scheduling decisions at both levels are based on job priorities computed by using different sets of heuristics. The different proposals have been compared through simulations. Performance figures show the feasibility of our approach.", "paper_title": "A multi-level scheduler for batch jobs on grids", "paper_id": "WOS:000290805500007"}