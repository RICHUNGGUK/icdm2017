{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "knowledge_graphs"}, {"score": 0.015562892822886155, "phrase": "example_entity_tuples"}, {"score": 0.004647105813224402, "phrase": "unprecedented_proliferation"}, {"score": 0.0038131738052230254, "phrase": "limited_database_knowledge"}, {"score": 0.0037746771370555546, "phrase": "non-professional_users"}, {"score": 0.0036988415150699945, "phrase": "structured_queries"}, {"score": 0.0036614948691735105, "phrase": "\"simple\"_tables"}, {"score": 0.003587924960158317, "phrase": "complex_graphs"}, {"score": 0.0034277338119963886, "phrase": "initial_step"}, {"score": 0.0030811340338342454, "phrase": "complex_graph_queries"}, {"score": 0.0030038988468808845, "phrase": "graph_query"}, {"score": 0.0028551716387011637, "phrase": "weighted_hidden_maximum_query_graph"}, {"score": 0.0028120022457134267, "phrase": "input_query_tuples"}, {"score": 0.0027414948679658816, "phrase": "user's_query_intent"}, {"score": 0.002618995204424126, "phrase": "top_approximate"}, {"score": 0.002592523232809191, "phrase": "answer_graphs"}, {"score": 0.0024766636161181544, "phrase": "user_studies"}, {"score": 0.0024392031587145728, "phrase": "large_freebase"}, {"score": 0.002414544068560716, "phrase": "dbpedia_datasets"}, {"score": 0.0023780209525032688, "phrase": "appealing_accuracy"}, {"score": 0.002294929467537814, "phrase": "complementary_approach"}, {"score": 0.002260211578368138, "phrase": "existing_keyword-based_methods"}, {"score": 0.002226017732566121, "phrase": "user-friendly_graph_querying"}], "paper_keywords": ["Knowledge graphs", " entity graphs", " query by example", " graph query processing"], "paper_abstract": "We witness an unprecedented proliferation of knowledge graphs that record millions of entities and their relationships. While knowledge graphs are structure-flexible and content-rich, they are difficult to use. The challenge lies in the gap between their overwhelming complexity and the limited database knowledge of non-professional users. If writing structured queries over \"simple\" tables is difficult, complex graphs are only harder to query. As an initial step toward improving the usability of knowledge graphs, we propose to query such data by example entity tuples, without requiring users to form complex graph queries. Our system, Graph Query By Example (GQBE), automatically discovers a weighted hidden maximum query graph based on input query tuples, to capture a user's query intent. It then efficiently finds and ranks the top approximate matching answer graphs and answer tuples. We conducted experiments and user studies on the large Freebase and DBpedia datasets and observed appealing accuracy and efficiency. Our system provides a complementary approach to the existing keyword-based methods, facilitating user-friendly graph querying. To the best of our knowledge, there was no such proposal in the past in the context of graphs.", "paper_title": "Querying Knowledge Graphs by Example Entity Tuples", "paper_id": "WOS:000361245300016"}