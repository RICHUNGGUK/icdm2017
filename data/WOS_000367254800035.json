{"auto_keywords": [{"score": 0.04867447329166622, "phrase": "hybrid_coloring_model"}, {"score": 0.00481495049065317, "phrase": "asynchronous_graph_processing"}, {"score": 0.0046046429665581555, "phrase": "modern_gpus"}, {"score": 0.004338390136272005, "phrase": "graph_processing"}, {"score": 0.004274257668843717, "phrase": "complicated_computational_problems"}, {"score": 0.004211069233133584, "phrase": "graph_theory"}, {"score": 0.0040571383470418085, "phrase": "asynchronous_computing_model"}, {"score": 0.0039380388343479384, "phrase": "iterative_convergence"}, {"score": 0.0037940502405699765, "phrase": "consistent_asynchronous_computing"}, {"score": 0.0036553070575015344, "phrase": "atomic_operations"}, {"score": 0.003293142761521425, "phrase": "coloring_algorithm"}, {"score": 0.003102488033561956, "phrase": "potential_updating_conflicts"}, {"score": 0.002944715025443487, "phrase": "parallel_processing"}, {"score": 0.002836942411239067, "phrase": "light-weight_asynchronous_processing_framework"}, {"score": 0.0027949532635192192, "phrase": "frog"}, {"score": 0.0021687806803474367, "phrase": "sequential_consistency"}], "paper_keywords": ["Graph Processing", " Asynchronous Computing", " GPGPU"], "paper_abstract": "Modern GPUs have been widely used to accelerate the graph processing for complicated computational problems regarding graph theory. Many parallel graph algorithms adopt the asynchronous computing model to accelerate the iterative convergence. Unfortunately, the consistent asynchronous computing requires locking or the atomic operations, leading to significant penalties/overheads when implemented on GPUs. To this end, coloring algorithm is adopted to separate the vertices with potential updating conflicts, guaranteeing the consistency/correctness of the parallel processing. We propose a light-weight asynchronous processing framework called Frog with a hybrid coloring model. We find that majority of vertices (about 80%) are colored with only a few colors, such that they can be read and updated in a very high degree of parallelism without violating the sequential consistency. Accordingly, our solution will separate the processing of the vertices based on the distribution of colors.", "paper_title": "Optimization of Asynchronous Graph Processing on GPU with Hybrid Coloring Model", "paper_id": "WOS:000367254800035"}