{"auto_keywords": [{"score": 0.036783301905052475, "phrase": "agv_control_software"}, {"score": 0.033085857726888185, "phrase": "simulated_warehouse_environment"}, {"score": 0.012746462995565366, "phrase": "warehouse_environment"}, {"score": 0.00481495049065317, "phrase": "dynamic_warehouse_environments"}, {"score": 0.004749646583168342, "phrase": "automatic_guided_vehicles"}, {"score": 0.004590217765551337, "phrase": "unmanned_vehicles"}, {"score": 0.004200197763119297, "phrase": "on-board_agv_control_software"}, {"score": 0.003976775340098895, "phrase": "decentralized_manner"}, {"score": 0.0033982429092938764, "phrase": "potential_conflicts"}, {"score": 0.00332924643541238, "phrase": "appropriate_way"}, {"score": 0.002463906556781983, "phrase": "explicit_manner"}, {"score": 0.0022696277881969896, "phrase": "automated_way"}, {"score": 0.0021049977753042253, "phrase": "collision_avoidance"}], "paper_keywords": [""], "paper_abstract": "Automatic Guided Vehicles (AGVs) are unmanned vehicles that can transport loads in a warehouse. AGVs are instructed by on-board AGV control software. As multiple AGVs operate in a decentralized manner in the warehouse environment, conflicts may arise. Consequently, it is crucial to test thoroughly whether the AGV control software actually handles the potential conflicts in the appropriate way. In this paper, we employ a simulated warehouse environment to test the AGV control software. The AGV control software is embedded and activated in the simulated warehouse environment. The simulated warehouse environment provides support for testing by means of (1) representing dynamism in the warehouse environment in an explicit manner, and (2) detecting conflicts of dynamism in an automated way. The approach is illustrated for the case of testing collision avoidance.", "paper_title": "Testing AGVs in dynamic warehouse environments", "paper_id": "WOS:000237040700016"}