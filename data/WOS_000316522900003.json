{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "workspan_criterion"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_scheduling"}, {"score": 0.004529093447865156, "phrase": "multiprocessor_scheduling_problems"}, {"score": 0.004157058883925715, "phrase": "specified_number"}, {"score": 0.0030414140732789186, "phrase": "maximum_job_completion_time"}, {"score": 0.002895841197640062, "phrase": "used_processors"}, {"score": 0.0028084079003212947, "phrase": "job_processing_times"}, {"score": 0.0026576091519087065, "phrase": "non-decreasing_functions"}, {"score": 0.00259320616168125, "phrase": "start_times"}, {"score": 0.0022519745140925475, "phrase": "polynomial_time_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multiprocessors", " Scheduling", " Learning", " Deteriorating", " Makespan", " Workspan"], "paper_abstract": "In this paper, we consider multiprocessor scheduling problems, where each job (task) must be executed simultaneously by the specified number of processors, but the indices of the processors allotted to each job do not have to be contiguous (i.e., jobs can be fragmentable). Unlike other research in this domain, we analyse the problem under the workspan criterion, which is defined as the product of the maximum job completion time (makespan) and the number of used processors. Moreover, the job processing times can be described by non-increasing or non-decreasing functions dependent on the start times of jobs that model improvement (learning) or degradation (deteriorating), respectively. To solve the problems, we construct some polynomial time algorithms and analyse numerically their efficiency. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "The solution algorithms for the multiprocessor scheduling with workspan criterion", "paper_id": "WOS:000316522900003"}