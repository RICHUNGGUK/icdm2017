{"auto_keywords": [{"score": 0.04827337430415872, "phrase": "gossip_algorithms"}, {"score": 0.034081045452314336, "phrase": "gossip_algorithm"}, {"score": 0.033576268938320386, "phrase": "second_largest_eigenvalue"}, {"score": 0.004458722048888919, "phrase": "arbitrarily_connected_network"}, {"score": 0.00427410962921379, "phrase": "new_nodes"}, {"score": 0.0042250952759280225, "phrase": "old_nodes"}, {"score": 0.0038973170902076707, "phrase": "sensor_networks"}, {"score": 0.003608732492631878, "phrase": "computational_burden"}, {"score": 0.003485913728272778, "phrase": "randomly_chosen_neighbor"}, {"score": 0.0034194902384248006, "phrase": "averaging_problem"}, {"score": 0.0033802431627410223, "phrase": "gossip_constraint"}, {"score": 0.00334144503360907, "phrase": "arbitrary_network_graph"}, {"score": 0.003265175268104804, "phrase": "averaging_time"}, {"score": 0.0031418958350109038, "phrase": "doubly_stochastic_matrix"}, {"score": 0.0030583717270715556, "phrase": "fastest_gossip_algorithm"}, {"score": 0.0029428772818833166, "phrase": "semidefinite_program"}, {"score": 0.002920423336315989, "phrase": "sdp"}, {"score": 0.0027777389949155975, "phrase": "distributed_fashion"}, {"score": 0.0027247727563746694, "phrase": "problem_structure"}, {"score": 0.0026728137770370176, "phrase": "distributed_subgradient_method"}, {"score": 0.002631959004685823, "phrase": "optimization_problem"}, {"score": 0.0024556852466581527, "phrase": "mixing_time"}, {"score": 0.002427473263013356, "phrase": "random_walk"}, {"score": 0.0024088451312725924, "phrase": "transition_probabilities"}, {"score": 0.002221655243524476, "phrase": "wireless_sensor_networks"}, {"score": 0.0021708894366462153, "phrase": "geometric_random_graphs"}, {"score": 0.0021049977753042253, "phrase": "so-called_preferential_connectivity"}], "paper_keywords": ["distributed averaging", " gossip", " random walk", " scaling laws", " sensor networks", " semidefinite programming"], "paper_abstract": "Motivated by applications to sensor, peer-to-peer, and ad hoc networks, we study distributed algorithms, also known as gossip algorithms, for exchanging information and for computing in an arbitrarily connected network of nodes. The topology of such networks changes continuously as new nodes join and old nodes leave the network. Algorithms for such networks need to be robust against changes in topology. Additionally, nodes in sensor networks operate under limited computational, communication, and energy resources. These constraints have motivated the design of \"gossip\" algorithms: schemes which distribute the computational burden and in which a node communicates with a randomly chosen neighbor. We analyze the averaging problem under the gossip constraint for an arbitrary network graph, and find that the averaging time of a gossip algorithm depends on the second largest eigenvalue of a doubly stochastic matrix characterizing the algorithm. Designing the fastest gossip algorithm corresponds to minimizing this eigenvalue, which is a semidefinite program (SDP). In general, SDPs cannot be solved in a distributed fashion; however, exploiting problem structure, we propose a distributed subgradient method that solves the optimization problem over the network. The relation of averaging time to the second largest eigenvalue naturally relates it to the mixing time of a random walk with transition probabilities derived from the gossip algorithm. We use this connection to study the performance and scaling of gossip algorithms on two popular networks: Wireless Sensor Networks, which are modeled as Geometric Random Graphs, and the Internet graph under the so-called Preferential Connectivity (PC) model.", "paper_title": "Randomized gossip algorithms", "paper_id": "WOS:000238319400016"}