{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "test-driven_development"}, {"score": 0.006768681340849994, "phrase": "test-last_development"}, {"score": 0.005236422504034491, "phrase": "mutation_score_indicator"}, {"score": 0.004578114043777996, "phrase": "software_development"}, {"score": 0.004545240514015278, "phrase": "automated_tests"}, {"score": 0.004501774379030109, "phrase": "production_code"}, {"score": 0.004480196733208298, "phrase": "highly_iterative_cycles"}, {"score": 0.0043738432231020885, "phrase": "professional_environment"}, {"score": 0.004342430078306461, "phrase": "empirical_evidence"}, {"score": 0.004069631519385246, "phrase": "supposed_benefits"}, {"score": 0.004040394370661677, "phrase": "writing_tests"}, {"score": 0.0038879600592913403, "phrase": "controlled_experiments"}, {"score": 0.003850755182568433, "phrase": "micro_iterative_test-last_development"}, {"score": 0.0035570425396761122, "phrase": "test-driven_and_test-last_groups"}, {"score": 0.003464186255596512, "phrase": "academic_environment"}, {"score": 0.0034392837410790293, "phrase": "different_developer_contexts"}, {"score": 0.00334144503360907, "phrase": "successfully_implemented_stories"}, {"score": 0.0033094525227603012, "phrase": "successful_acceptance_tests"}, {"score": 0.003293570937654716, "phrase": "mccabe's_code_complexity"}, {"score": 0.0025767987652419054, "phrase": "acceptance_tests"}, {"score": 0.0025521085778978042, "phrase": "mann-whitney_u"}, {"score": 0.0022845800828325577, "phrase": "iterative_test-last_development"}, {"score": 0.002166711569953301, "phrase": "better_branch_coverage"}, {"score": 0.0021511158983218703, "phrase": "effect_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Empirical software engineering", " Controlled experiment", " Test-driven development", " Iterative test-last development"], "paper_abstract": "Context: Test-driven development is an approach to software development, where automated tests are written before production code in highly iterative cycles. Test-driven development attracts attention as well as followers in professional environment; however empirical evidence of its superiority regarding its effect on productivity, code and tests compared to test-last development is still fairly limited. Moreover, it is not clear if the supposed benefits come from writing tests before code or maybe from high iterativity/short development cycles. Objective: This paper describes a family of controlled experiments comparing test-driven development to micro iterative test-last development with emphasis on productivity, code properties (external quality and complexity) and tests (code coverage and fault-finding capabilities). Method: Subjects were randomly assigned to test-driven and test-last groups. Controlled experiments were conducted for two years, in an academic environment and in different developer contexts (pair programming and individual programming contexts). Number of successfully implemented stories, percentage of successful acceptance tests, McCabe's code complexity, code coverage and mutation score indicator were measured. Results: Experimental results and their selective meta-analysis show no statistically significant differences between test-driven development and iterative test-last development regarding productivity (chi(2)(6) = 4.799, p = 1.0, r = .107, 95% Cl (confidence interval): -.149 to .349), code complexity (chi(2)(6) = 8.094, p = .46, r = .048, 95% Cl: -.254 to .341), branch coverage (chi(2)(6) = 13.996, p = .059, r = .182, 95% Cl: -.081 to .421), percentage of acceptance tests passed (one experiment, Mann-Whitney U = 125.0, p = .98, r = .066) and mutation score indicator (chi(2)(4) = 3.807, p = .87, r = .128, 95% Cl: -.162 to .398). Conclusion: According to our findings, the benefits of test-driven development compared to iterative test-last development are small and thus in practice relatively unimportant, although effects are positive. There is an indication of test-driven development endorsing better branch coverage, but effect size is considered small. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Impact of test-driven development on productivity, code and tests: A controlled experiment", "paper_id": "WOS:000290460900001"}