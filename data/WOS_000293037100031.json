{"auto_keywords": [{"score": 0.04882985100763265, "phrase": "scalar_processors"}, {"score": 0.015515524343026846, "phrase": "modern_vector"}, {"score": 0.014821229117209202, "phrase": "bcm"}, {"score": 0.00481495049065317, "phrase": "sor_methods"}, {"score": 0.004597244847332915, "phrase": "building-cube_method"}, {"score": 0.004418456827500267, "phrase": "new_generation_algorithm"}, {"score": 0.004360412703519539, "phrase": "cfd_simulations"}, {"score": 0.004274766964161756, "phrase": "basic_idea"}, {"score": 0.003948613642680196, "phrase": "flow_computation"}, {"score": 0.003871024872459116, "phrase": "large-scale_simulations"}, {"score": 0.0037450707321601963, "phrase": "pressure_field"}, {"score": 0.0035519826240477444, "phrase": "total_execution_time"}, {"score": 0.0034821605165058574, "phrase": "bcm."}, {"score": 0.003368816076401138, "phrase": "effective_implementations"}, {"score": 0.003153041030690117, "phrase": "intel_nehalem-ex"}, {"score": 0.003091036449708673, "phrase": "latest_vector"}, {"score": 0.002707620139970122, "phrase": "performance_improvement"}, {"score": 0.0025849489224175548, "phrase": "so-called_memory_wall_problem"}, {"score": 0.002451527111936163, "phrase": "optimization_techniques"}, {"score": 0.0023716501597131024, "phrase": "sor_method"}, {"score": 0.0023249757987087055, "phrase": "architectural_characteristics"}, {"score": 0.002279217896185919, "phrase": "modern_processors"}, {"score": 0.002175913488493802, "phrase": "sustained_performances"}], "paper_keywords": ["Vector and scalar processing", " SOR method", " Building-cube method"], "paper_abstract": "The building-cube method (BCM) is a new generation algorithm for CFD simulations. The basic idea of BCM is to simplify the algorithm in all stages of flow computation to achieve large-scale simulations. Calculation of a pressure field using the Successive Over Relaxation (SOR) method consumes most of the total execution time required for BCM. In this paper, effective implementations on modern vector and scalar processors are investigated. NEC SX-9 and Intel Nehalem-EX are the latest vector and scalar processors. Those processors have much higher peak performances than their previous-generation processors. However, their memory bandwidth improvement cannot catch up with the performance improvement of processors. This is the so-called memory wall problem. In our paper, we discuss optimization techniques for implementation of the SOR method based on architectural characteristics of these modern processors, and evaluate their effects on the sustained performances of these processors for BCM. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Performance of SOR methods on modern vector and scalar processors", "paper_id": "WOS:000293037100031"}