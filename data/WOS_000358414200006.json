{"auto_keywords": [{"score": 0.03636886875497387, "phrase": "gpu_systems"}, {"score": 0.009999368128198445, "phrase": "openacc"}, {"score": 0.009083126016579639, "phrase": "single_node"}, {"score": 0.0046875099587735825, "phrase": "case_study"}, {"score": 0.004637478829869904, "phrase": "porting_nekbone"}, {"score": 0.004371660146981191, "phrase": "parallel_gpu-accelerated_system"}, {"score": 0.004255902303152008, "phrase": "computational_fluid_dynamics_code"}, {"score": 0.004165497627464024, "phrase": "spectral_element_method"}, {"score": 0.0040334640350288, "phrase": "incompressible_flow"}, {"score": 0.003969018740062018, "phrase": "original_nekbone_fortran_source_code"}, {"score": 0.0037615180375561805, "phrase": "openacc_directives"}, {"score": 0.00366185681714204, "phrase": "nekbone"}, {"score": 0.003378385493203297, "phrase": "possible_kernel_optimizations"}, {"score": 0.0031845067058084583, "phrase": "small_number"}, {"score": 0.003150466780962537, "phrase": "additional_lines"}, {"score": 0.0029064676523923886, "phrase": "naive_implementation"}, {"score": 0.0025409639091476363, "phrase": "naive_openacc_implementation"}, {"score": 0.0025003054002226965, "phrase": "optimized_nekbone_version"}, {"score": 0.002209406458446019, "phrase": "parallel_efficiency"}], "paper_keywords": ["OpenACC", " Nek5000", " porting NekBone to GPU", " optimization of NekBone with OpenACC"], "paper_abstract": "We present a case study of porting NekBone, a skeleton version of the Nek5000 code, to a parallel GPU-accelerated system. Nek5000 is a computational fluid dynamics code based on the spectral element method used for the simulation of incompressible flow. The original NekBone Fortran source code has been used as the base and enhanced by OpenACC directives. The profiling of NekBone provided an assessment of the suitability of the code for GPU systems, and indicated possible kernel optimizations. To port NekBone to GPU systems required little effort and a small number of additional lines of code (approximately one OpenACC directive per 1000 lines of code). The naive implementation using OpenACC leads to little performance improvement: on a single node, from 16 Gflops obtained with the version without OpenACC, we reached 20 Gflops with the naive OpenACC implementation. An optimized NekBone version leads to a 43 Gflop performance on a single node. In addition, we ported and optimized NekBone to parallel GPU systems, reaching a parallel efficiency of 79.9% on 1024 GPUs of the Titan XK7 supercomputer at the Oak Ridge National Laboratory.", "paper_title": "OpenACC acceleration of the Nek5000 spectral element code", "paper_id": "WOS:000358414200006"}