{"auto_keywords": [{"score": 0.03300234893136706, "phrase": "query_points"}, {"score": 0.00481495049065317, "phrase": "efficient_aggregate_nearest_neighbor_query_processing"}, {"score": 0.004207230913063179, "phrase": "aggregate_function"}, {"score": 0.004160177106153782, "phrase": "multiple_query_points"}, {"score": 0.003954837422946628, "phrase": "efficient_approach"}, {"score": 0.003888659470009222, "phrase": "ann_queries"}, {"score": 0.003845154818609644, "phrase": "road_networks"}, {"score": 0.0034166271604770576, "phrase": "nearest_neighbors"}, {"score": 0.003303177222901723, "phrase": "query_point"}, {"score": 0.003247868216333148, "phrase": "specific_order"}, {"score": 0.003175556211659149, "phrase": "candidate_pois"}, {"score": 0.0029681091946289757, "phrase": "unqualified_pois"}, {"score": 0.0029020077365708966, "phrase": "pruning_strategy"}, {"score": 0.002805597755796506, "phrase": "two-phase_process"}, {"score": 0.0025638362414466278, "phrase": "final_result"}, {"score": 0.002450864311898833, "phrase": "partition_strategies"}, {"score": 0.0023827927890399357, "phrase": "approximate_ann_query"}, {"score": 0.0022270182923887012, "phrase": "extensive_experiments"}, {"score": 0.0022020622730208514, "phrase": "real_datasets"}], "paper_keywords": ["ANN query", " spatial database", " road network"], "paper_abstract": "An aggregate nearest neighbor (ANN) query returns a point of interest (POI) that minimizes an aggregate function for multiple query points. In this paper, we propose an efficient approach to tackle ANN queries in road networks. Our approach consists of two phases: searching phase and pruning phase. In particular, we first continuously compute the nearest neighbors (NNs) for each query point in some specific order to obtain the candidate POIs until all query points find a common POI. Second, we filter out the unqualified POIs based on the pruning strategy for a given aggregate function. The two-phase process is repeated until there remains only one candidate POI, and the remained one is returned as the final result. In addition, we discuss the partition strategies for query points and the approximate ANN query for the case where the number of query points is huge. Extensive experiments using real datasets demonstrate that our proposed approach outperforms its competitors significantly in most cases.", "paper_title": "On Efficient Aggregate Nearest Neighbor Query Processing in Road Networks", "paper_id": "WOS:000357679400009"}