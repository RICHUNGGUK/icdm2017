{"auto_keywords": [{"score": 0.04677974552603265, "phrase": "information_outflow"}, {"score": 0.045380871007235306, "phrase": "confidential_data"}, {"score": 0.04017422505874752, "phrase": "proposed_method"}, {"score": 0.03856948192601831, "phrase": "bi-party_communication"}, {"score": 0.0316707562270099, "phrase": "grey_system_theory"}, {"score": 0.02384800716238787, "phrase": "ecc_public_key_system"}, {"score": 0.00481495049065317, "phrase": "current_environment"}, {"score": 0.004714342482386552, "phrase": "general_users"}, {"score": 0.004555298069759361, "phrase": "self-acclaimed_independent_third-parties"}, {"score": 0.004436600597150948, "phrase": "current_public_key_encryption_systems"}, {"score": 0.004230652134869403, "phrase": "hardware_difficulties"}, {"score": 0.004208364878091134, "phrase": "information_protection"}, {"score": 0.004175153021444913, "phrase": "internet_and_commercial_applications"}, {"score": 0.003908347021394284, "phrase": "others'_deficiencies"}, {"score": 0.0036974027232000335, "phrase": "third_parties"}, {"score": 0.0035819965356555434, "phrase": "network_environment_difficulties"}, {"score": 0.003525646552423009, "phrase": "third_party"}, {"score": 0.0034885715165515153, "phrase": "trusted_controller"}, {"score": 0.0033886063545402216, "phrase": "current_systems"}, {"score": 0.0033352884949505537, "phrase": "trusted_third-party_administrators"}, {"score": 0.0033002085989689875, "phrase": "common_security_mechanism"}, {"score": 0.003265496457422804, "phrase": "public_key_and_confidential_data"}, {"score": 0.003138536320618019, "phrase": "system_security"}, {"score": 0.003040520667605164, "phrase": "environment_needs"}, {"score": 0.002969016991883905, "phrase": "ecc_method"}, {"score": 0.002899189972263455, "phrase": "senders'_identity"}, {"score": 0.0028762801072447232, "phrase": "legitimate_third_party"}, {"score": 0.00281606583659932, "phrase": "malicious_third-party_intrusions"}, {"score": 0.0027065317891503187, "phrase": "diffie-hellman_key_agreement_mechanism"}, {"score": 0.0026639173116251424, "phrase": "common_conference_key"}, {"score": 0.0026428616811800913, "phrase": "mutual_communication"}, {"score": 0.002526643766431107, "phrase": "third-party_intermediary"}, {"score": 0.0023400348959610024, "phrase": "malicious_users"}, {"score": 0.002219414100246277, "phrase": "ecc's_short_and_low_computational_properties"}, {"score": 0.0021729212034657477, "phrase": "encryption_and_decryption_operation_efficiency"}, {"score": 0.0021049977753042253, "phrase": "secure_and_efficient_conference_key_system"}], "paper_keywords": ["Conference key", " Elliptic curve cryptosystem", " Digital signature algorithm", " Grey system"], "paper_abstract": "In the current environment, there are only a limited number of third-parties that general users can trust in terms of authentication and verification. Often, the self-acclaimed independent third-parties are the parties from where information outflow occurs. While current public key encryption systems have numerous algorithms that have been protecting confidential data for several years, these systems are often met with hardware difficulties for information protection on the Internet and commercial applications. In order to meet the various needs of the environment, often several cryptography modules are combined or merged to achieve the effect of covering each others' deficiencies. This is a very common practice. The proposed method in this article is applicable for preventing information outflow with the introduction of third parties during a bi-party communication, in circumstances where bi-party communication is met with network environment difficulties, and also when the third party is not a trusted controller, or there are no controllers at all. While current systems operate on the back of trusted third-party administrators as is a common security mechanism for managing the public key and confidential data, often even with management, there are still probabilities of insecurity that threaten system security on the whole. To prevent this and also adapt to environment needs, the proposed method combines the grey system theory with the ECC method. This method can verify the credibility of senders' identity when the legitimate third party is no longer trusted, thus preventing malicious third-party intrusions. The concept of this method is based on the well-known Digital Signature Algorithm (DSA) concept from which the Diffie-Hellman Key Agreement mechanism is derived to manage a common conference key in a mutual communication, agreement. When the user can communicate mutually between themselves without the need for a third-party intermediary, the solution to intervention and theft of confidential data by third-parties becomes plausible. With flexibility in calculation, one can set his/her access protocol for the modules to confuse malicious users and increase the difficulty of acquiring the keys illegally. In addition, by combining the ECC public key system, with ECC's short and low computational properties, the proposed method improves on the encryption and decryption operation efficiency. This method is thus a system set to establish a secure and efficient conference key system by combining the properties of the ECC public key system with the grey system theory.", "paper_title": "A SECURE CONFERENCE KEY PROTOCOL OVER ECC-BASED GREY SYSTEMS", "paper_id": "WOS:000295904300007"}