{"auto_keywords": [{"score": 0.04346898089428129, "phrase": "correct_process"}, {"score": 0.03919395258869649, "phrase": "class_omega"}, {"score": 0.035094572188068524, "phrase": "failure_detector"}, {"score": 0.00481495049065317, "phrase": "lozenge_w"}, {"score": 0.004655924035639928, "phrase": "simple_bounded_quiescent_reliable_broadcast-based_transformation"}, {"score": 0.00432423070113186, "phrase": "crashed_process"}, {"score": 0.003805788648230075, "phrase": "failure_detectors"}, {"score": 0.003260377175139591, "phrase": "class_ow"}, {"score": 0.0027929100418926725, "phrase": "underlying_reliable_broadcast_facility"}, {"score": 0.0024909230668523847, "phrase": "control_information"}, {"score": 0.0023762535034673017, "phrase": "reliable_broadcast_mechanism"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["asynchronous system", " distributed algorithm", " eventual leader", " failure detector", " fault-tolerance", " layer abstraction", " process crash", " reliable broadcast"], "paper_abstract": "Failure detectors in the class oW ensure that every crashed process is eventually suspected by a correct process, and eventually there is a correct process that is never suspected. Failure detectors in the class Omega ensure that eventually all the processes trust the same correct process. This paper presents a very simple and efficient algorithm that transforms any failure detector of the class oW into a failure detector of the class Omega. The simplicity of the transformation is due to its modular design-it is based on an underlying reliable broadcast facility. It is quiescent and requires each message to carry only one process identity, in addition to the control information appended to a message by the reliable broadcast mechanism (namely, a sequence number and the identity of its sender). (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "From lozenge W to Omega: A simple bounded quiescent reliable broadcast-based transformation", "paper_id": "WOS:000243614700009"}