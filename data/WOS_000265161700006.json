{"auto_keywords": [{"score": 0.049465088868450476, "phrase": "processor_cores"}, {"score": 0.00481495049065317, "phrase": "functional_testing"}, {"score": 0.004692227830462433, "phrase": "fpga-based_applications._embedded_processor_cores"}, {"score": 0.004484908028307205, "phrase": "sram-based_fpga_applications"}, {"score": 0.00409723267214392, "phrase": "system_exploitation"}, {"score": 0.003992729692096799, "phrase": "processor_core"}, {"score": 0.003941478054422721, "phrase": "a._difficult_task"}, {"score": 0.0037188360359702182, "phrase": "user_knowledge"}, {"score": 0.003647442345566347, "phrase": "core-implementation_details"}, {"score": 0.003577414339646767, "phrase": "user_applications"}, {"score": 0.003331915219811852, "phrase": "functional_test"}, {"score": 0.0032468685934998335, "phrase": "individual_processor's_instructions"}, {"score": 0.0031032109441552287, "phrase": "deterministic_test_patterns"}, {"score": 0.0029089095588612007, "phrase": "stored_reference_values"}, {"score": 0.0028530201960995896, "phrase": "practical_reasons"}, {"score": 0.0027801631944598206, "phrase": "test_patterns"}, {"score": 0.0027444334639134217, "phrase": "corresponding_results"}, {"score": 0.0025892330566358503, "phrase": "low_fault_coverage"}, {"score": 0.0023958326775913165, "phrase": "whole_instruction-set_test"}, {"score": 0.0023497779149212737, "phrase": "compact_test_sequence"}, {"score": 0.0022312377180023282, "phrase": "different_input_test_patterns"}, {"score": 0.0021601997088758957, "phrase": "fault_coverage"}, {"score": 0.0021049977753042253, "phrase": "additional_memory_requirements"}], "paper_keywords": ["Built-in self-test", " embedded processor core test", " fault injection", " fault modelling", " functional test", " single-event upset"], "paper_abstract": "Embedded processor cores, which are widely used in SRAM-based FPGA applications, are candidates for SEU (Single Event Upset)-induced faults and need to be tested occasionally during system exploitation. Verifying a processor core is a. difficult task, due to its complexity and the lack of user knowledge about the core-implementation details. In user applications, processor cores are normally tested by executing some kind of functional test in which the individual processor's instructions are tested with a, set of deterministic test patterns, and the results are then compared with the stored reference values. For practical reasons the number of test patterns and corresponding results is usually small, which inherently leads to low fault coverage. In this paper we develop a. concept that combines the whole instruction-set test into a compact test sequence, which Call then be repeated with different input test patterns. This improves the fault coverage considerably with no additional memory requirements", "paper_title": "FUNCTIONAL TESTING OF PROCESSOR CORES IN FPGA-BASED APPLICATIONS", "paper_id": "WOS:000265161700006"}