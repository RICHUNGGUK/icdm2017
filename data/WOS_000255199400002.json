{"auto_keywords": [{"score": 0.03891934872280937, "phrase": "rimac"}, {"score": 0.007534695877541785, "phrase": "energy_efficiency"}, {"score": 0.00481495049065317, "phrase": "storage_systems"}, {"score": 0.004777917315737992, "phrase": "today's_storage_systems"}, {"score": 0.004722898398399427, "phrase": "imperative_demand"}, {"score": 0.004632597963417253, "phrase": "storage_system"}, {"score": 0.004579244735256393, "phrase": "single-rotation-rate_disks"}, {"score": 0.0042388570312522, "phrase": "major_obstacle"}, {"score": 0.004141742095830515, "phrase": "high_spin-up_cost"}, {"score": 0.004031238480458909, "phrase": "standby_disk"}, {"score": 0.0040002088320302935, "phrase": "service_requests"}, {"score": 0.0033877275374263314, "phrase": "parity-based_redundant_disk_arrays"}, {"score": 0.0030994630902300133, "phrase": "passive_spin-ups"}, {"score": 0.0028687545730861665, "phrase": "transformable_read_in"}, {"score": 0.0028356582638398814, "phrase": "trc"}, {"score": 0.00268616928039386, "phrase": "power-aware_write_request_transformation_policy"}, {"score": 0.002486147565139633, "phrase": "validated_storage_system_simulator"}, {"score": 0.002466981558483935, "phrase": "disksim"}, {"score": 0.0024010635411310195, "phrase": "hp"}, {"score": 0.0023641728374423554, "phrase": "uiuc"}, {"score": 0.002345945426017461, "phrase": "oltp"}, {"score": 0.0023188652648490874, "phrase": "spc's_search_engine"}, {"score": 0.0022222152430170254, "phrase": "energy_consumption"}, {"score": 0.0021628142746829187, "phrase": "average_response_time"}, {"score": 0.0021213575697367148, "phrase": "threshold-based_power_management_schemes"}, {"score": 0.0021049977753042253, "phrase": "single-rotation-rate_disk-based_raids"}], "paper_keywords": ["disk storage", " RAID", " cache management", " power management"], "paper_abstract": "Today's storage systems place an imperative demand on energy efficiency. A storage system often places single-rotation-rate disks into standby mode by stopping them from spinning to conserve energy when the workload is not heavy. The major obstacle of this method is a high spin-up cost introduced by passively waking up the standby disk to service requests. In this paper, we propose a redundancy-based hierarchical I/O cache architecture called RIMAC to solve the problem. The idea of RIMAC is to enable data on the standby disk(s) to be recovered by accessing a two-level I/O cache and/or active disks if needed. In parity-based redundant disk arrays, RIMAC exploits parity redundancy to dynamically XOR-reconstruct the data being accessed toward standby disk(s) at both the cache and disk levels. By avoiding passive spin-ups, RIMAC can significantly improve both energy efficiency and performance. In RIMAC, we developed 1) two power-aware read request transformation schemes called Transformable Read in Cache (TRC) and Transformable Read on Disk (TRD), 2) a power-aware write request transformation policy for parity update, and 3) a second-chance parity cache replacement algorithm to favor the request transformation rate. We evaluated RIMAC by augmenting a validated storage system simulator, DiskSim, and tested three real-life server traces, including HP's cello99, UIUC's OLTP, and SPC's search engine. Comprehensive results indicate that RIMAC is able to reduce energy consumption by up to 18 percent and simultaneously improve the average response time by up to 34 percent compared with threshold-based power management schemes for single-rotation-rate disk-based RAIDs.", "paper_title": "Exploiting in-memory and on-disk redundancy to conserve energy in storage systems", "paper_id": "WOS:000255199400002"}