{"auto_keywords": [{"score": 0.03363896917055258, "phrase": "planit"}, {"score": 0.020368007012360394, "phrase": "software_system"}, {"score": 0.014674054064733053, "phrase": "temporal_planner"}, {"score": 0.00481495049065317, "phrase": "distributed_software_systems"}, {"score": 0.004718431349852634, "phrase": "software_systems"}, {"score": 0.004567990533989851, "phrase": "optimal_configurations"}, {"score": 0.004298666679374568, "phrase": "initial_deployment"}, {"score": 0.004263972370406983, "phrase": "subsequent_dynamic_reconfiguration"}, {"score": 0.003964007795174772, "phrase": "application_state"}, {"score": 0.003916098498242888, "phrase": "system_resources"}, {"score": 0.003791141540467091, "phrase": "software_systems_increases"}, {"score": 0.0036257863613963245, "phrase": "static_software_architecture"}, {"score": 0.0034676182423067307, "phrase": "novel_technique"}, {"score": 0.003398015125667192, "phrase": "deployment_and_reconfiguration_planning_processes"}, {"score": 0.0032762198196613084, "phrase": "temporal_planning"}, {"score": 0.0026316112429083235, "phrase": "possible_deployments"}, {"score": 0.002436289099444074, "phrase": "revised_goal"}, {"score": 0.002348883765159185, "phrase": "possible_reconfigurations"}, {"score": 0.002246292543825748, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "application-level_overlay_network"}], "paper_keywords": [""], "paper_abstract": "The quality of software systems are determined in part by their optimal configurations. Optimal configurations are desired when the software is being deployed and during its lifetime. However, initial deployment and subsequent dynamic reconfiguration of a software system is difficult because of the interplay of many interdependent factors, including cost, time, application state, and system resources. As the size and complexity of software systems increases, procedures (manual or automated) that assume a static software architecture and environment are becoming untenable. We have developed a novel technique for carrying out the deployment and reconfiguration planning processes that leverages recent advances in the field of temporal planning. We describe a tool called Planit, which manages the deployment and reconfiguration of a software system utilizing a temporal planner. Given a model of the structure of a software system, the network upon which the system should be hosted, and a goal configuration, Planit will use the temporal planner to devise possible deployments of the system. Given information about changes in the state of the system, network and a revised goal, Planit will use the temporal planner to devise possible reconfigurations of the system. We present the results of a case study in which Planit is applied to a system consisting of various components that communicate across an application-level overlay network.", "paper_title": "Deployment and dynamic reconfiguration planning for distributed software systems", "paper_id": "WOS:000248983500004"}