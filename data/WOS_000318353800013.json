{"auto_keywords": [{"score": 0.048636009815037975, "phrase": "lipschitz"}, {"score": 0.00481495049065317, "phrase": "lipschitz_functions"}, {"score": 0.00476167303775568, "phrase": "data_privacy."}, {"score": 0.0042958526904083374, "phrase": "distance_metrics"}, {"score": 0.004085932261574055, "phrase": "local_reconstruction"}, {"score": 0.004051952557353597, "phrase": "lipschitz_property"}, {"score": 0.003995944005801644, "phrase": "property_tester"}, {"score": 0.003685972800046028, "phrase": "local_filter"}, {"score": 0.0036553070575015344, "phrase": "desired_property"}, {"score": 0.0035155276979913466, "phrase": "arbitrary_function"}, {"score": 0.0033810753784043524, "phrase": "resulting_function_g"}, {"score": 0.0031536033289228252, "phrase": "efficient_testers"}, {"score": 0.0031360786664165093, "phrase": "local_reconstructors"}, {"score": 0.0029332042000783745, "phrase": "corresponding_impossibility_results"}, {"score": 0.0028367287190243355, "phrase": "data_privacy"}, {"score": 0.0027357813217926286, "phrase": "function_f"}, {"score": 0.002682917193736698, "phrase": "sensitive_information"}, {"score": 0.0026018958738764906, "phrase": "lipschitz_constant"}, {"score": 0.0024200160019954807, "phrase": "comput"}, {"score": 0.0023599867869259663, "phrase": "t._rabin"}, {"score": 0.0023273431853622203, "phrase": "springer"}, {"score": 0.002314382703503524, "phrase": "berlin"}, {"score": 0.002225751147807371, "phrase": "differentially_private_mechanism"}, {"score": 0.0022010598350982458, "phrase": "local_filters"}, {"score": 0.002146499103321978, "phrase": "purported_lipschitz_constant"}, {"score": 0.0021049977753042253, "phrase": "distrusted_client"}], "paper_keywords": ["property testing", " Lipschitz constant", " data privacy", " reconstruction"], "paper_abstract": "A function f : D -> R is Lipschitz if d(R)(f(x), f(y)) <= d(D)(x, y) for all x, y in D, where d(R) and d(D) denote the distance metrics on the range and domain of f, respectively. We initiate the study of testing and local reconstruction of the Lipschitz property of functions. A property tester has to distinguish functions with the property (in this case, Lipschitz) from functions that differ from every function with the property on many values. A local filter reconstructs a desired property (in this case, Lipschitz) in the following sense: given an arbitrary function f and a query x, it returns g(x), where the resulting function g satisfies the property, changing f only when necessary. If f has the property, g must be equal to f. We design efficient testers and local reconstructors for functions over domains of the form {1, ... , n}(d), equipped with l(1) distance, and give corresponding impossibility results. The algorithms we design have applications to program analysis and data privacy. The application to privacy is based on the fact that a function f of entries in a database of sensitive information can be released with noise of magnitude proportional to a Lipschitz constant of f, while preserving the privacy of individuals whose data is stored in the database [Dwork et al., Theory of Cryptography, Lecture Notes in Comput. Sci. 3878, S. Halevi and T. Rabin, eds., Springer, Berlin, 2006, pp. 265-284]. We give a differentially private mechanism, based on local filters, for releasing a function f when a purported Lipschitz constant of f is provided by a distrusted client.", "paper_title": "TESTING AND RECONSTRUCTION OF LIPSCHITZ FUNCTIONS WITH APPLICATIONS TO DATA PRIVACY", "paper_id": "WOS:000318353800013"}