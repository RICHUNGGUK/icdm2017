{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "low-complex_algorithm"}, {"score": 0.004149429072483132, "phrase": "proposed_algorithm"}, {"score": 0.004014452814186653, "phrase": "dynamic_programming_principles"}, {"score": 0.003757480190200645, "phrase": "communication_delays"}, {"score": 0.0033465923623290034, "phrase": "time_complexity"}, {"score": 0.0031845067058084583, "phrase": "latest_algorithm"}, {"score": 0.0025257081555100556, "phrase": "space_complexity"}, {"score": 0.002363806685815014, "phrase": "code_fragments"}, {"score": 0.002286781334850213, "phrase": "hardware_area_a."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["dynamic programming", " algorithms", " complexity", " hardware/software partitioning"], "paper_abstract": "A low-complex algorithm is proposed for the hardware/software partitioning. The proposed algorithm employs dynamic programming principles while accounting for communication delays. It is shown that the time complexity of the latest algorithm has been reduced from O(n(2.)A) to O(n(.)A), without increase in space complexity, for n code fragments and hardware area A. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Low-complex dynamic programming algorithm for hardware/software partitioning", "paper_id": "WOS:000235849700001"}