{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed"}, {"score": 0.004737579882204798, "phrase": "large_near-cliques"}, {"score": 0.004636340567075841, "phrase": "undirected_graph"}, {"score": 0.003695040819303525, "phrase": "fast_synchronous_network_algorithm"}, {"score": 0.003635600104609725, "phrase": "small_messages"}, {"score": 0.00342568771304873, "phrase": "constant-time_algorithm"}, {"score": 0.003334309053314909, "phrase": "constant_probability"}, {"score": 0.003245359940011418, "phrase": "linear_size_epsilon-near_clique"}, {"score": 0.003124790943886441, "phrase": "linear_size"}, {"score": 0.002865710140187219, "phrase": "failure_probability"}, {"score": 0.0027001292153471202, "phrase": "time_complexity"}, {"score": 0.002656650588033728, "phrase": "logarithmic_factor"}, {"score": 0.002198173002125907, "phrase": "new_idea"}, {"score": 0.0021049977753042253, "phrase": "distributed_setting"}], "paper_keywords": [""], "paper_abstract": "Given an undirected graph and 0 <= epsilon <= 1, a set of nodes is called an epsilon-near clique if all but an epsilon fraction of the pairs of nodes in the set have a link between them. In this paper we present a fast synchronous network algorithm that uses small messages and finds a near-clique. Specifically, we present a constant-time algorithm that finds, with constant probability of success, a linear size epsilon-near clique if there exists an epsilon(3)-near clique of linear size in the graph. The algorithm uses messages of O(log n) bits. The failure probability can be reduced to n(-Omega(1)) by increasing the time complexity by a logarithmic factor, and the algorithm also works if the graph contains a clique of size Omega(n/(log log n)(alpha)) for some alpha is an element of (0, 1). Our approach is based on a new idea of adapting property testing algorithms to the distributed setting.", "paper_title": "Distributed discovery of large near-cliques", "paper_id": "WOS:000296516900002"}