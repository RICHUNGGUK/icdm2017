{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "two-stage_hybrid_cross_docking_scheduling_problem"}, {"score": 0.004201774694043468, "phrase": "second_stage"}, {"score": 0.003871869188502677, "phrase": "first_stage"}, {"score": 0.0031990183472675377, "phrase": "mixed_integer_programming"}, {"score": 0.0030291543325034666, "phrase": "cplex"}, {"score": 0.00297454367746853, "phrase": "small_scale_instances"}, {"score": 0.00266693888510356, "phrase": "moderate_and_large_scale_instances"}, {"score": 0.002326669201839705, "phrase": "computational_experiments"}, {"score": 0.0021049977753042253, "phrase": "computational_results"}], "paper_keywords": ["Machine scheduling", " Logistics", " Cross docking"], "paper_abstract": "This paper studies the two-stage hybrid cross docking scheduling problem. In which, the job in the second stage cannot be processed until its precedent subset jobs in the first stage have all been completed and at least one stage contains more than one machine. The objective is to minimize the makespan. Firstly, a mixed integer programming is presented and solved by CPLEX for small scale instances. Secondly, four heuristics are proposed to investigate the performance for moderate and large scale instances. Furthermore, one lower bound is given to compare with the four heuristics. Finally, computational experiments are carefully designed to illustrate and compare these approaches and computational results are reported in detail. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Minimizing makespan in two-stage hybrid cross docking scheduling problem", "paper_id": "WOS:000262120300033"}