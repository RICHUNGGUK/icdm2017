{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "malicious_nodes"}, {"score": 0.004422094335127632, "phrase": "great_success"}, {"score": 0.0043289723873340255, "phrase": "aggregating_resources"}, {"score": 0.0041780882724537, "phrase": "entire_system"}, {"score": 0.004032441847334232, "phrase": "malicious_peers"}, {"score": 0.003989742144066683, "phrase": "bogus_data"}, {"score": 0.0038098540814166695, "phrase": "statistical_inference_technique"}, {"score": 0.003716445985103603, "phrase": "bp"}, {"score": 0.0035487559182107112, "phrase": "detection_algorithm"}, {"score": 0.00346164863873186, "phrase": "trusted_monitor_nodes"}, {"score": 0.003424972304865554, "phrase": "notification_messages"}, {"score": 0.0031788569040714434, "phrase": "chunk_uploaders"}, {"score": 0.0029608739165086257, "phrase": "received_chunk"}, {"score": 0.002877912855903293, "phrase": "multiparty_download"}, {"score": 0.0027382698136572785, "phrase": "bogus_blocks"}, {"score": 0.0027092368768921542, "phrase": "problem_definition"}, {"score": 0.00265208877121581, "phrase": "factor_graph"}, {"score": 0.00257775722777195, "phrase": "incremental_version"}, {"score": 0.0025504217985882725, "phrase": "belief_propagation_algorithm"}, {"score": 0.0025055037815033725, "phrase": "monitor_nodes"}, {"score": 0.0022762383517229957, "phrase": "real_peer-to-peer_application"}, {"score": 0.002260115129552444, "phrase": "planetlab"}, {"score": 0.0022124176057373365, "phrase": "proposed_approach"}, {"score": 0.002135146725817984, "phrase": "different_pollution_intensity"}, {"score": 0.0021049977753042253, "phrase": "fake_checks"}], "paper_keywords": ["Peer-to-peer", " pollution attack", " malicious node identification", " streaming", " belief propagation", " statistical inference", " PlanetLab"], "paper_abstract": "Peer-to-peer streaming has witnessed a great success thanks to the possibility of aggregating resources from all participants. Nevertheless, performance of the entire system may be highly degraded due to the presence of malicious peers that share bogus data on purpose. In this paper, we propose to use a statistical inference technique, namely, belief propagation (BP), to estimate the probability of peers being malicious. The detection algorithm is run by a set of trusted monitor nodes that receives notification messages (checks) from peers whenever they obtain a chunk of data; these checks contain the list of the chunk uploaders and a flag to mark the chunk as polluted or clean. Peers are able to detect if the received chunk is polluted or not but, since multiparty download is employed, they are not capable to identify the source(s) of bogus blocks. This problem definition allows us to define a factor graph of peers and checks on which an incremental version of the belief propagation algorithm is run by the monitor nodes to infer the probability of each peer being a malicious one. We evaluate the accuracy, robustness, and complexity of our technique by running a real peer-to-peer application on PlanetLab. We show that the proposed approach is very accurate and robust against malicious nodes misbehaving (different pollution intensity, presence of fake checks, churning, and total uncooperation from malicious nodes), increasing number and colluding behavior of malicious nodes.", "paper_title": "Identification of Malicious Nodes in Peer-to-Peer Streaming: A Belief Propagation-Based Technique", "paper_id": "WOS:000323503500008"}