{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "activity_diagrams"}, {"score": 0.049795191973436195, "phrase": "new_use_cases"}, {"score": 0.035635373767437556, "phrase": "proposed_approach"}, {"score": 0.014562541682696434, "phrase": "development_costs"}, {"score": 0.01426560367470357, "phrase": "model_reuse"}, {"score": 0.01329213373833653, "phrase": "semi-automatic_approach"}, {"score": 0.008260619574023978, "phrase": "model_repository"}, {"score": 0.004729856080441582, "phrase": "web_engineering_methodologies"}, {"score": 0.0046739596755881185, "phrase": "crucial_role"}, {"score": 0.004550585106483935, "phrase": "model_reuse_approach"}, {"score": 0.004391114318381004, "phrase": "current_works"}, {"score": 0.004275173711009189, "phrase": "promising_reusable_assets"}, {"score": 0.004137600338433322, "phrase": "retrieved_assets"}, {"score": 0.0040163635646888645, "phrase": "uml_activity_diagrams"}, {"score": 0.0037731618765688584, "phrase": "functional_requirements"}, {"score": 0.0037174533606734897, "phrase": "similar_functionalities"}, {"score": 0.0035446342985010434, "phrase": "use_case_diagram"}, {"score": 0.0034612507694547013, "phrase": "corresponding_activity_diagrams"}, {"score": 0.0034304883989739804, "phrase": "existing_activity_diagrams"}, {"score": 0.0033597650090676032, "phrase": "five_main_components"}, {"score": 0.0031750418391373035, "phrase": "domain_knowledge"}, {"score": 0.0031003255054939524, "phrase": "annotating_activity_diagrams"}, {"score": 0.003000444353938951, "phrase": "similar_use_cases"}, {"score": 0.002903771635043968, "phrase": "activity_diagram"}, {"score": 0.0028779496327516634, "phrase": "new_use_case"}, {"score": 0.002852356597632014, "phrase": "existing_activity_diagram"}, {"score": 0.002810204880249441, "phrase": "semantic_web_data_model"}, {"score": 0.0027852126030055305, "phrase": "underlying_representation_format"}, {"score": 0.0027440503994044787, "phrase": "initial_experiments"}, {"score": 0.002655616553414394, "phrase": "average_reuse_percent"}, {"score": 0.002593091742792519, "phrase": "still_some_weaknesses"}, {"score": 0.0024946054043656113, "phrase": "low_tolerance"}, {"score": 0.002385595105638277, "phrase": "early_stages"}, {"score": 0.00236437009958525, "phrase": "model_based_development_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model reuse", " Semantic web", " Activity diagram", " Use case", " Adaptation"], "paper_abstract": "Context: Web engineering methodologies generally assign a crucial role to design models. Therefore, providing a model reuse approach is very interesting since it reduces development costs and improves quality. Current works on model reuse mainly focus on retrieval of the promising reusable assets, and much less is done regarding adaptation of the retrieved assets. This research proposes a semi-automatic approach for adaptation of UML activity diagrams to new use cases. Objective: UML use case diagrams and activity diagrams are traditionally used for the brief and the detailed specification of the functional requirements. Since many web applications have similar functionalities, and hence similar functional requirements, this research proposes an approach to take a use case diagram as input and semi-automatically create corresponding activity diagrams by adapting existing activity diagrams. Method: The proposed approach includes five main components: (1) a model repository, (2) an ontology repository as a source of domain knowledge, (3) an algorithm for annotating activity diagrams, (4) a similarity metric for retrieval of similar use cases, and (5) an adaptation algorithm for creating activity diagram of a new use case from an existing activity diagram The proposed approach uses the semantic web data model as the underlying representation format. Results: The initial experiments show that the proposed approach is promising and it provides an average reuse percent of 76%. However, it has still some weaknesses like being much dependent on the quality of the model repository and having low tolerance in case of inconsistency in the model repository. Conclusion: Enabling model reuse in the early stages of a model based development approach is very important in reducing development costs. This paper proposes a semi-automatic approach to reuse activity diagrams through their adaptation for new use cases. The approach is demonstrated to be promising although it has still some limitations. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A semi-automated approach to adapt activity diagrams for new use cases", "paper_id": "WOS:000345947500031"}