{"auto_keywords": [{"score": 0.04712665802421912, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "concolic_unit_testing_engine"}, {"score": 0.00385431710959668, "phrase": "sequential_c_programs"}, {"score": 0.003287482882222731, "phrase": "cute"}, {"score": 0.0031845067058084583, "phrase": "concrete_and_symbolic_execution"}, {"score": 0.0028944757265206332, "phrase": "redundant_test_cases"}, {"score": 0.0027159094186967247, "phrase": "false_warnings"}, {"score": 0.002429451930463481, "phrase": "race-flipping_technique"}, {"score": 0.0021731423856364003, "phrase": "concurrent_programs"}, {"score": 0.0021049977753042253, "phrase": "data_inputs"}], "paper_keywords": [""], "paper_abstract": "CUTE, a Concolic Unit Testing Engine for C and Java, is a tool to systematically and automatically test sequential C programs (including pointers) and concurrent Java programs. CUTE combines concrete and symbolic execution in a way that avoids redundant test cases as well as false warnings. The tool also introduces a race-flipping technique to efficiently test and model check concurrent programs with data inputs.", "paper_title": "CUTE and jCUTE: Concolic unit testing and explicit path model-checking tools", "paper_id": "WOS:000240257000036"}