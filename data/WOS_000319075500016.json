{"auto_keywords": [{"score": 0.03013623313662665, "phrase": "kba"}, {"score": 0.025356971883136976, "phrase": "isca"}, {"score": 0.013249530217260616, "phrase": "client_demands"}, {"score": 0.012982248350383212, "phrase": "qos-aware_placement_problem"}, {"score": 0.00481495049065317, "phrase": "stream_processing_service"}, {"score": 0.004256243266481051, "phrase": "qos-aware_placement_problems"}, {"score": 0.004152502093643003, "phrase": "different_contexts"}, {"score": 0.003700709435644458, "phrase": "set_cover_problem"}, {"score": 0.0035808664384880213, "phrase": "greedy_algorithm"}, {"score": 0.0035515148917169173, "phrase": "approximation_factor"}, {"score": 0.0033251716926666437, "phrase": "cpu_capacity_constraints"}, {"score": 0.0029195860184916956, "phrase": "algorithm"}, {"score": 0.0027064605585684696, "phrase": "placement_problem"}, {"score": 0.002492425259337031, "phrase": "demand_increment-blind_and_increment-aware_models"}, {"score": 0.0023624435546097658, "phrase": "kba."}, {"score": 0.0023430556582539805, "phrase": "experimental_results"}, {"score": 0.002276439636865258, "phrase": "distinct_effects"}, {"score": 0.0022577559526646904, "phrase": "different_demand_sizes"}, {"score": 0.0021049977753042253, "phrase": "larger_demands"}], "paper_keywords": ["Stream processing service", " Service placement", " QoS-aware"], "paper_abstract": "Many emerging online stream processing services require the consideration of quality of service (QoS), which is highly dependent on the placement of services at various hosts. This paper investigates the QoS-aware placement problems of stream processing services under different contexts. On condition that the client demands are stable, the QoS-aware placement problem aiming to minimize the cost when servers are CPU-uncapacitated, is equivalent to the set cover problem, and can be solved by a greedy algorithm with approximation factor O(log n), where n is the number of clients. However, when CPU capacity constraints on servers are taken into account, the QoS-aware placement problem cannot be approximated unless P=NP. Therefore, we propose two heuristic algorithms: (1) ISCA (Iterated Set Cover-based Algorithm) and (2) KBA (Knapsack-Based Algorithm). We also consider the placement problem of client demands increasing over time. Two objectives, called extension factor and system lifetime, are proposed for demand increment-blind and increment-aware models respectively. Both of them can be solved by extending ISCA and KBA. The experimental results show that ISCA and KBA have distinct effects on different demand sizes. ISCA is more efficient when client demands are relatively small, while KBA performs better for larger demands.", "paper_title": "QoS-aware placement of stream processing service", "paper_id": "WOS:000319075500016"}