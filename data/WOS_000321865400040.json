{"auto_keywords": [{"score": 0.039699919391175904, "phrase": "selective_combination"}, {"score": 0.00481495049065317, "phrase": "points-to_analysis"}, {"score": 0.004758457292840376, "phrase": "context-sensitive_points"}, {"score": 0.004539005582217309, "phrase": "high_precision"}, {"score": 0.004485735417293941, "phrase": "good_performance"}, {"score": 0.004406994912939125, "phrase": "standard_flavors"}, {"score": 0.0040334640350288, "phrase": "context-sensitivity_increases"}, {"score": 0.003916098498242888, "phrase": "infeasibly_high_cost"}, {"score": 0.003626626504149897, "phrase": "java_points"}, {"score": 0.0033584796908285894, "phrase": "combined_context"}, {"score": 0.003260690513595527, "phrase": "language_features"}, {"score": 0.002651213849567608, "phrase": "non-selective_combinations"}, {"score": 0.0025436978068459565, "phrase": "mere_object-sensitive_analysis"}, {"score": 0.0024405312482831646, "phrase": "large_array"}, {"score": 0.002233301265743633, "phrase": "context-sensitive_heap"}, {"score": 0.002130056082139311, "phrase": "new_set"}], "paper_keywords": ["Algorithms", " Languages", " Performance", " points-to analysis", " context-sensitivity", " object-sensitivity", " type-sensitivity"], "paper_abstract": "Context-sensitive points-to analysis is valuable for achieving high precision with good performance. The standard flavors of context-sensitivity are call-site-sensitivity (kCFA) and object-sensitivity. Combining both flavors of context-sensitivity increases precision but at an infeasibly high cost. We show that a selective combination of call-site-and object-sensitivity for Java points-to analysis is highly profitable. Namely, by keeping a combined context only when analyzing selected language features, we can closely approximate the precision of an analysis that keeps both contexts at all times. In terms of speed, the selective combination of both kinds of context not only vastly outperforms non-selective combinations but is also faster than a mere object-sensitive analysis. This result holds for a large array of analyses (e.g., 1-object-sensitive, 2-object-sensitive with a context-sensitive heap, type-sensitive) establishing a new set of performance/precision sweet spots.", "paper_title": "Hybrid Context-Sensitivity for Points-To Analysis", "paper_id": "WOS:000321865400040"}