{"auto_keywords": [{"score": 0.03606242426841462, "phrase": "subquadratic_work"}, {"score": 0.00481495049065317, "phrase": "shared-memory_do-all_algorithms"}, {"score": 0.004605258779434384, "phrase": "fundamental_problem"}, {"score": 0.0045599093158915326, "phrase": "distributed_computing"}, {"score": 0.004069280130346136, "phrase": "p_failure-prone_processors"}, {"score": 0.0038919354605673104, "phrase": "shared-memory_task-performing_algorithms"}, {"score": 0.0037407704200033607, "phrase": "quantifiable_message_latency"}, {"score": 0.0033879628186273625, "phrase": "message_complexity"}, {"score": 0.0033379819706003885, "phrase": "prior_solutions"}, {"score": 0.0032724821705972357, "phrase": "constant_delays"}, {"score": 0.0031609252620168446, "phrase": "subquadratic_efficiency"}, {"score": 0.0031297538950335233, "phrase": "asynchronous_processors"}, {"score": 0.0029344771385297163, "phrase": "shared_objects"}, {"score": 0.0028911669203979156, "phrase": "quorum_system"}, {"score": 0.0025958775880863417, "phrase": "k"}, {"score": 0.0025541693207036167, "phrase": "object_replicas"}, {"score": 0.0021902063413831545, "phrase": "provided_message_delays"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Distributed algorithm", " Fault-tolerance", " Work", " Communication", " Quorums"], "paper_abstract": "A fundamental problem in distributed computing is performing a set of tasks despite failures and delays. Stated abstractly, the problem is to perform N tasks using P failure-prone processors. This paper studies the efficiency of emulating shared-memory task-performing algorithms on asynchronous message-passing processors with quantifiable message latency. Efficiency is measured in terms of work and communication, and the challenge is to obtain subquadratic work and message complexity. While prior solutions assumed synchrony and constant delays, the solutions given here yield subquadratic efficiency with asynchronous processors when the delays and failures are suitably constrained. The solutions replicate shared objects using a quorum system, provided it is not disabled. One algorithm has subquadratic work and communication when the delays and the number of processors, K, owning object replicas, are O(P-0.41). It tolerates [k-1/2] crashes. It is also shown that there exists an algorithm that has subquadratic work and communication and that tolerates o(P) failures, provided message delays are sublinear. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Emulating shared-memory Do-All algorithms in asynchronous message-passing systems", "paper_id": "WOS:000277665100007"}