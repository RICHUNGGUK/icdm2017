{"auto_keywords": [{"score": 0.05007817464644759, "phrase": "time-division_multiplexing"}, {"score": 0.04683922641836831, "phrase": "socs"}, {"score": 0.045294909281544476, "phrase": "test_time"}, {"score": 0.043799482001376976, "phrase": "multiple_voltage_settings"}, {"score": 0.033853554097995446, "phrase": "test_data"}, {"score": 0.03189909393552338, "phrase": "tdm"}, {"score": 0.004773040022691547, "phrase": "testing_dvfs-based_socs"}, {"score": 0.004731492618963217, "phrase": "dynamic_voltage-frequency_scaling"}, {"score": 0.0046903142215551155, "phrase": "dvfs"}, {"score": 0.004431149592844886, "phrase": "power_management"}, {"score": 0.00406001734835979, "phrase": "lower_power_supply_voltage_settings"}, {"score": 0.0038862297330905836, "phrase": "corresponding_reduction"}, {"score": 0.003752550907120244, "phrase": "scan_shift_operations"}, {"score": 0.0037198532511087566, "phrase": "existing_test_scheduling_techniques"}, {"score": 0.0036553070575015344, "phrase": "test_applications"}, {"score": 0.003453140302583322, "phrase": "dvfs-based_socs"}, {"score": 0.003247868216333148, "phrase": "highest_available_frequency"}, {"score": 0.003068166587650604, "phrase": "multiple_cores"}, {"score": 0.0030414140732789186, "phrase": "lower_shift_frequencies"}, {"score": 0.0028857130140890787, "phrase": "different_scenarios"}, {"score": 0.002725994306480105, "phrase": "optimal_results"}, {"score": 0.0026786469998321084, "phrase": "moderate_size"}, {"score": 0.0025750928944698673, "phrase": "good_results"}, {"score": 0.002287783663138828, "phrase": "run_time"}, {"score": 0.0022678201262721323, "phrase": "test-time_reduction"}, {"score": 0.002218668420806254, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "associated_scheduling_methods"}], "paper_keywords": ["Dynamic voltage-frequency scaling (DVFS)", " system-on-chip (SoC) testing", " test scheduling", " voltage islands"], "paper_abstract": "Dynamic voltage-frequency scaling (DVFS) is used in system-on-chips (SoCs) for power management, but it increases test time because every core must be tested at multiple voltage settings. In addition, testing at lower power supply voltage settings increases the length of each test due to the corresponding reduction in frequencies that can be used for scan shift operations. Existing test scheduling techniques do not consider test applications at multiple voltage settings, therefore they are not effective for reducing test time for DVFS-based SoCs. We propose a time-division multiplexing (TDM) architecture, which uses the highest available frequency for shifting test data into the SoC and then distributes the test data into multiple cores using lower shift frequencies. TDM is accompanied by three test scheduling methods, which are suitable for different scenarios: 1) an integer linear programming-based formulation that offers optimal results for SOCs of moderate size; 2) a greedy approach that provides good results with very short run time even for very large SoCs; and 3) a rectangle-packing approach combined with simulated-annealing that offers a trade-off between run time and test-time reduction for all SoCs. Experimental results on two industrial SoCs highlight the effectiveness of TDM and the associated scheduling methods.", "paper_title": "Time-Division Multiplexing for Testing DVFS-Based SoCs", "paper_id": "WOS:000351765000015"}