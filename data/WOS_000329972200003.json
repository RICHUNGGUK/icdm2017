{"auto_keywords": [{"score": 0.04308132877909894, "phrase": "live_objects"}, {"score": 0.00481495049065317, "phrase": "adaptive_scanning_reduces"}, {"score": 0.00478701880312723, "phrase": "sweep_time"}, {"score": 0.00464976086880886, "phrase": "mark-compact_garbage_collection"}, {"score": 0.0045959609346817535, "phrase": "long-running_programs"}, {"score": 0.004386887374401584, "phrase": "classic_but_still_widely-used_compaction_algorithm"}, {"score": 0.0035989687070420977, "phrase": "long_time"}, {"score": 0.0034551632687788857, "phrase": "separate_bitmap"}, {"score": 0.0033952989364738353, "phrase": "mark_bits"}, {"score": 0.0032406665327678616, "phrase": "scanning_time"}, {"score": 0.002817639725689939, "phrase": "new_scanning_method"}, {"score": 0.0026119782818898193, "phrase": "heap_usage"}, {"score": 0.002310915790114425, "phrase": "remaining_parts"}, {"score": 0.002244494905883452, "phrase": "scanning_method"}, {"score": 0.0021799789348982516, "phrase": "jikes_rvm."}, {"score": 0.002154693685426657, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "adaptive_scanner"}], "paper_keywords": ["Garbage Collection", " Java", " Jikes RVM", " Lisp2 Algorithm", " Compactor"], "paper_abstract": "Mark-compact garbage collection helps long-running programs avoid fragmentation. The Lisp2 mark-compact collector is a classic but still widely-used compaction algorithm. It sequentially scans the entire heap to compact all live objects at one end of the heap while preserving their order of addresses. Since the heap is generally large, this scanning takes a long time. Although some collectors adopt a separate bitmap into which mark bits of objects are stored to reduce the scanning time, we observed that scanning the bitmap can take longer than scanning the heap if objects are densely located. We propose a new scanning method from this observation, which adaptively alternates methods of scanning depending on heap usage; it scans those parts of the heap where live objects are densely located whereas it scans the bitmap for the remaining parts. We implemented this scanning method in the Lisp2 collector of Jikes RVM. The experimental results revealed that the adaptive scanner scanned faster than the method that only scanned the heap and the method that only scanned the bitmap.", "paper_title": "Adaptive Scanning Reduces Sweep Time for the Lisp2 Mark-Compact Garbage Collector", "paper_id": "WOS:000329972200003"}