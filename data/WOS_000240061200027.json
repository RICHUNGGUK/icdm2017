{"auto_keywords": [{"score": 0.04008163298641715, "phrase": "xcellog"}, {"score": 0.012934818059857566, "phrase": "rule-based_computing"}, {"score": 0.010637958777964127, "phrase": "spreadsheet_metaphor"}, {"score": 0.00481495049065317, "phrase": "tabled_logic_programming"}, {"score": 0.004781215097314411, "phrase": "rule-based_specifications"}, {"score": 0.0047477346846452806, "phrase": "datalog"}, {"score": 0.00463229351153731, "phrase": "application_areas"}, {"score": 0.004567596860086148, "phrase": "configuration_management"}, {"score": 0.0045355866228818514, "phrase": "access_control"}, {"score": 0.0045037997020733415, "phrase": "trust_management"}, {"score": 0.004472234553892357, "phrase": "decision_making"}, {"score": 0.004378854464130883, "phrase": "rules_sets"}, {"score": 0.004197878397604354, "phrase": "subtle_ways"}, {"score": 0.003982098149664708, "phrase": "wide-spread_adoption"}, {"score": 0.0035957586558176932, "phrase": "datalog_rules"}, {"score": 0.0035579889785989738, "phrase": "popular_and_easy-to-use_spreadsheet_interface"}, {"score": 0.0033868916699805224, "phrase": "fundamental_data_type"}, {"score": 0.003178904945309528, "phrase": "materialized_sets"}, {"score": 0.0031455000569352454, "phrase": "fundamental_feature"}, {"score": 0.002900756392266265, "phrase": "basic_facts"}, {"score": 0.0026375718041787, "phrase": "also_experiment"}, {"score": 0.0024667840770803617, "phrase": "excel"}, {"score": 0.002449456517104582, "phrase": "xsb"}, {"score": 0.002415170557932468, "phrase": "rule_engine"}, {"score": 0.0023897719795915, "phrase": "datalog_specifications"}, {"score": 0.0023729878025466836, "phrase": "preliminary_experience"}, {"score": 0.002157583854640276, "phrase": "end_users"}, {"score": 0.0021198904828154657, "phrase": "rule_bases"}], "paper_keywords": [""], "paper_abstract": "Rule-based specifications in Datalog are used in a number of application areas, such as configuration management, access control and trust management, decision making, etc. However, rules sets are typically hard to maintain; the rules often interact in subtle ways, making them difficult to understand and reason about. This has impeded the wide-spread adoption of rule-based computing. This paper describes the design and implementation of XcelLog, a deductive spreadsheet system (DSS), that permits users to specify and maintain Datalog rules using the popular and easy-to-use spreadsheet interface. The driving idea underlying the system is to treat sets as the fundamental data type and rules as specifying relationships among sets, and use the spreadsheet metaphor to create and view the materialized sets. The fundamental feature that makes XcelLog suitable even for non-programmers is that the user mainly sees the effect of the rules; when rules or basic facts change, the user sees the impact of the change immediately. This enables the user to gain confidence in the rules and their modification, and also experiment with what-if scenarios without any programming. XcelLog is implemented as an add-in to Excel with XSB serving as the rule engine for evaluating Datalog specifications. Preliminary experience with using XcelLog indicates that it is indeed feasible to combine the power of rule-based computing and the elegance and simplicity of the spreadsheet metaphor, so that end users can encode and maintain rule bases with little or no programming.", "paper_title": "Deductive spreadsheets using tabled logic programming", "paper_id": "WOS:000240061200027"}