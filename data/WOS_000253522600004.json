{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "non-trivial_repeating_patterns"}, {"score": 0.011522410275849524, "phrase": "repeating_patterns"}, {"score": 0.004548253531664032, "phrase": "database_types"}, {"score": 0.0042354707960660706, "phrase": "significant_information"}, {"score": 0.004116440453049531, "phrase": "shortest_time"}, {"score": 0.004000741805312148, "phrase": "music_databases"}, {"score": 0.003944112858235306, "phrase": "repeating_pattern"}, {"score": 0.00388828234270598, "phrase": "important_feature"}, {"score": 0.0038515000499988673, "phrase": "music_objects"}, {"score": 0.00370780481244907, "phrase": "repeated_part"}, {"score": 0.0036727235025069828, "phrase": "music_data"}, {"score": 0.003485605409687907, "phrase": "key_melodies"}, {"score": 0.0030802351224657673, "phrase": "query_execution"}, {"score": 0.003051073364818384, "phrase": "music_retrievals"}, {"score": 0.002657890175649468, "phrase": "index_space"}, {"score": 0.0025954008219792337, "phrase": "existing_algorithms"}, {"score": 0.0023485549678832628, "phrase": "true_suffix_tree_approach"}, {"score": 0.0021971473452127126, "phrase": "cost_problems"}, {"score": 0.0021763278640166707, "phrase": "processing_time"}, {"score": 0.0021557052355026048, "phrase": "memory_space"}, {"score": 0.0021251363422701446, "phrase": "general_case"}], "paper_keywords": ["context-based retrieval", " music databases", " multimedia databases", " non-trivial repeating pattern", " suffix tree"], "paper_abstract": "As the growing in Internet, database types and sizes are getting various and larger. The topic of finding out the significant information from a database at the shortest time is important. In the music databases, a repeating pattern is an important feature of music objects, which commonly used in analyzing the repeated part of music data and looking for themes. Most of the repeating patterns are key melodies or easy to familiarize and remember for people. Therefore, we can use the themes or the repeating patterns to construct indices that can speedup query execution for music retrievals. Nevertheless, non-trivial repeating patterns exclude those patterns, which are all contained in other longer patterns, such that they can reduce the redundancy of the repeating patterns and save the index space needed. Most of existing algorithms are time consuming for finding non-trivial repeating patterns in a music object. In this research, we aim to apply the true suffix tree approach to discover non-trivial repeating patterns for a music object, which can efficiently address the cost problems in processing time and memory space. In general case, our proposed scheme can extract non-trivial repeating patterns in a linear time.", "paper_title": "True suffix tree approach for discovering non-trivial repeating patterns in a music object", "paper_id": "WOS:000253522600004"}