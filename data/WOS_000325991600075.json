{"auto_keywords": [{"score": 0.04974633013174414, "phrase": "integral_histograms"}, {"score": 0.038309312606227434, "phrase": "waveletsat"}, {"score": 0.03369594687840481, "phrase": "grid_point"}, {"score": 0.00481495049065317, "phrase": "efficient_local_statistical_analysis"}, {"score": 0.00474827840031692, "phrase": "discrete_wavelet_transform"}, {"score": 0.004666228956744244, "phrase": "local_regions"}, {"score": 0.004382364826200616, "phrase": "arbitrary_locations"}, {"score": 0.004306610946695577, "phrase": "important_role"}, {"score": 0.0042766757473077024, "phrase": "feature_identification"}, {"score": 0.004217425501814589, "phrase": "computing_histograms"}, {"score": 0.0041589926969138585, "phrase": "arbitrary_location"}, {"score": 0.004002426645789667, "phrase": "large_data_sets"}, {"score": 0.0038922607214377557, "phrase": "data_elements"}, {"score": 0.0037326500020622715, "phrase": "local_histograms"}, {"score": 0.0036680857629458816, "phrase": "new_algorithm"}, {"score": 0.0035176353680157367, "phrase": "summed_area_tables"}, {"score": 0.0033382623057432136, "phrase": "sat"}, {"score": 0.003303412571939192, "phrase": "integral_histogram"}, {"score": 0.0031568304678554243, "phrase": "grid_origin"}, {"score": 0.0030378759123133644, "phrase": "fast_query"}, {"score": 0.002964515198409409, "phrase": "multiple_bins"}, {"score": 0.0027936239349923464, "phrase": "storage_cost"}, {"score": 0.0027741761880779535, "phrase": "large_integral_histograms"}, {"score": 0.002697726021470387, "phrase": "grid_points"}, {"score": 0.002678944072162297, "phrase": "multiple_sats"}, {"score": 0.002586972610351776, "phrase": "sparse_representation"}, {"score": 0.0025689754341790797, "phrase": "dwt"}, {"score": 0.0025156683465194967, "phrase": "axis-aligned_region_histograms"}, {"score": 0.0024634797027967203, "phrase": "limited_number"}, {"score": 0.00244632460902489, "phrase": "wavelet_coefficients"}, {"score": 0.002387214876538434, "phrase": "efficient_wavelet_transform_algorithm"}, {"score": 0.002297193869719679, "phrase": "logarithmic_time_complexity"}, {"score": 0.002241679436497571, "phrase": "parallel_gpu-based_implementation"}, {"score": 0.002218299213266519, "phrase": "theoretical_and_empirical_demonstration"}, {"score": 0.0021571346514418226, "phrase": "fast_preprocessing"}, {"score": 0.0021421082915443887, "phrase": "smaller_storage_overhead"}, {"score": 0.002119764367112061, "phrase": "conventional_integral_histogram_approach"}, {"score": 0.0021049977753042253, "phrase": "close_query_performance"}], "paper_keywords": ["WaveletSAT", " integral histograms", " discrete wavelet transform"], "paper_abstract": "Histograms computed from local regions are commonly used in many visualization applications, and allowing the user to query histograms interactively in regions of arbitrary locations and sizes plays an important role in feature identification and tracking. Computing histograms in regions with arbitrary location and size, nevertheless, can be time consuming for large data sets since it involves expensive I/O and scan of data elements. To achieve both performance- and storage-efficient query of local histograms, we present a new algorithm called WaveletSAT, which utilizes integral histograms, an extension of the summed area tables (SAT), and discrete wavelet transform (DWT). Similar to SAT, an integral histogram is the histogram computed from the area between each grid point and the grid origin, which can be be pre-computed to support fast query. Nevertheless, because one histogram contains multiple bins, it will be very expensive to store one integral histogram at each grid point. To reduce the storage cost for large integral histograms, WaveletSAT treats the integral histograms of all grid points as multiple SATs, each of which can be converted into a sparse representation via DWT, allowing the reconstruction of axis-aligned region histograms of arbitrary sizes from a limited number of wavelet coefficients. Besides, we present an efficient wavelet transform algorithm for SATs that can operate on each grid point separately in logarithmic time complexity, which can be extended to parallel GPU-based implementation. With theoretical and empirical demonstration, we show that WaveletSAT can achieve fast preprocessing and smaller storage overhead than the conventional integral histogram approach with close query performance.", "paper_title": "Efficient Local Statistical Analysis via Integral Histograms with Discrete Wavelet Transform", "paper_id": "WOS:000325991600075"}