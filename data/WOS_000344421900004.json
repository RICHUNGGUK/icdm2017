{"auto_keywords": [{"score": 0.04788754544853483, "phrase": "test_cases"}, {"score": 0.010612387000973441, "phrase": "weighted_attribute-based_strategy"}, {"score": 0.004506968388996092, "phrase": "test_oracle"}, {"score": 0.004445316841017889, "phrase": "execution_results"}, {"score": 0.00428892403807229, "phrase": "today's_software"}, {"score": 0.003894570038675774, "phrase": "small_number"}, {"score": 0.0038731594700154213, "phrase": "selected_test_cases"}, {"score": 0.003809628721278519, "phrase": "similar_execution_profiles"}, {"score": 0.0036856648774311203, "phrase": "well-known_cts-based_strategies"}, {"score": 0.003516898780234098, "phrase": "adaptive_sampling"}, {"score": 0.0034879261743468574, "phrase": "execution-spectra-based_sampling"}, {"score": 0.0034306925765832633, "phrase": "ultimate_goal"}, {"score": 0.003393057771300821, "phrase": "testing_cost"}, {"score": 0.002851790448644913, "phrase": "aforementioned_cts-based_strategies"}, {"score": 0.00278184186397901, "phrase": "weighted_execution_profiles"}, {"score": 0.002546708483171714, "phrase": "seven_programs"}, {"score": 0.0023768935613577985, "phrase": "esbs"}, {"score": 0.0022492129111567824, "phrase": "proposed_was_strategy"}, {"score": 0.002175913488493802, "phrase": "output_verification"}, {"score": 0.0021401625519713577, "phrase": "failed_executions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Weighted execution profile", " Cluster test selection", " Software fault localization"], "paper_abstract": "In past decades, many techniques have been proposed to generate and execute test cases automatically. However, when a test oracle does not exist, execution results have to be examined manually. With increasing functionality and complexity of today's software, this process can be extremely time-consuming and mistake-prone. A CTS-based (cluster test selection) strategy provides a feasible solution to mitigate such deficiency by examining the execution results only with respect to a small number of selected test cases. It groups test cases with similar execution profiles into the same cluster and selects them from each cluster. Some well-known CTS-based strategies are one per cluster, n (a predefined value which is greater than I) per cluster, adaptive sampling, and execution-spectra-based sampling (ESBS). The ultimate goal is to reduce testing cost by quickly identifying the executions that are likely to fail. However, improperly grouping the test cases will significantly diminish the effectiveness of these strategies (by examining results of more successful executions and fewer failed executions). To overcome this problem, we propose a weighted attribute-based strategy (WAS). Instead of clustering test cases based on the similarity of their execution profiles only once like the aforementioned CTS-based strategies, WAS will conduct more than one iteration of clustering using weighted execution profiles by also considering the suspiciousness of each program element (statement, basic block, decision, etc.), where the suspiciousness in terms of the likelihood of containing bugs can be computed by using various software fault localization techniques. Case studies using seven programs (make, ant, sed, flex, grep, gzip, and space) and four CTS-based strategies (one per cluster sampling, n per cluster sampling, adaptive sampling, and ESBS) were conducted to evaluate the effectiveness of WAS on 184 faulty versions containing either single or multiple bugs. Experimental results suggest that the proposed WAS strategy outperforms other four CTS-based strategies with respect to both recall and precision such that output verification is focused more strongly on failed executions. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "WAS: A weighted attribute-based strategy for cluster test selection", "paper_id": "WOS:000344421900004"}