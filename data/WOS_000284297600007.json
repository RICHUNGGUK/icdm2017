{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reconfigurable_diagnosis_framework"}, {"score": 0.004681525814235883, "phrase": "multiple_faults"}, {"score": 0.004603244077348199, "phrase": "computationally_expensive_task"}, {"score": 0.004160177106153782, "phrase": "test_results"}, {"score": 0.003932654396285872, "phrase": "computational_burden"}, {"score": 0.003845154818609644, "phrase": "isolation_performance"}, {"score": 0.0035539019235553897, "phrase": "new_conflicts"}, {"score": 0.00345530020388352, "phrase": "thresholded_residuals"}, {"score": 0.0033218213825698417, "phrase": "monitored_system"}, {"score": 0.003303177222901723, "phrase": "special_attention"}, {"score": 0.0030017207229983385, "phrase": "dynamically_tests"}, {"score": 0.002918394200972564, "phrase": "historic_data"}, {"score": 0.0028857130140890787, "phrase": "synchronous_and_asynchronous_processing"}, {"score": 0.0027741761880779535, "phrase": "flexdx"}, {"score": 0.0026971491199975083, "phrase": "dyknow"}, {"score": 0.002464709648714996, "phrase": "flexdx_framework"}, {"score": 0.0024097920845706795, "phrase": "complete_approach"}, {"score": 0.0023428586429492713, "phrase": "dynamic_system"}, {"score": 0.0022020622730208514, "phrase": "computational_gain"}, {"score": 0.0021651504858015364, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd"}], "paper_keywords": ["Reconfigurable diagnosis framework", " Diagnosing dynamical systems", " Test reconfiguration", " Test selection", " Test initialization"], "paper_abstract": "Detecting and isolating multiple faults is a computationally expensive task It typically consists of computing a set of tests and then computing the diagnoses based on the test results This paper describes FlexDx a reconfigurable diagnosis framework which reduces the computational burden while retaining the isolation performance by only running a subset of all tests that is sufficient to find new conflicts Tests in FlexDx are thresholded residuals used to indicate conflicts in the monitored system Special attention is given to the issues introduced by a reconfigurable diagnosis framework For example tests are added and removed dynamically tests are partially performed on historic data and synchronous and asynchronous processing are combined To handle these issues FlexDx has been implemented using DyKnow a stream-based knowledge processing middleware framework Concrete methods for each component in the FlexDx framework are presented The complete approach is exemplified on a dynamic system which clearly illustrates the complexity of the problem and the computational gain of the proposed approach (C) 2010 Elsevier Ltd All rights reserved", "paper_title": "FlexDx A reconfigurable diagnosis framework", "paper_id": "WOS:000284297600007"}