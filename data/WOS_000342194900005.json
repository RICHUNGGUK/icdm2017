{"auto_keywords": [{"score": 0.05006268142691776, "phrase": "linear-space_data_structures"}, {"score": 0.035447375864783325, "phrase": "query_time"}, {"score": 0.0338978731383349, "phrase": "range_mode_queries"}, {"score": 0.004722021820598296, "phrase": "arrays"}, {"score": 0.00462846651646366, "phrase": "multiset_s"}, {"score": 0.00458297991625839, "phrase": "element_aas"}, {"score": 0.004552902997092495, "phrase": "maximum_multiplicity"}, {"score": 0.004248718518635191, "phrase": "n_elements"}, {"score": 0.004179328666330398, "phrase": "basic_problem"}, {"score": 0.004124630249202334, "phrase": "static_data_structure"}, {"score": 0.004057258742593542, "phrase": "mode_queries"}, {"score": 0.003951736710391294, "phrase": "input_pair"}, {"score": 0.0036392821787269727, "phrase": "linear_space"}, {"score": 0.003509783120521071, "phrase": "isaac"}, {"score": 0.0033294278310493524, "phrase": "worst_case"}, {"score": 0.0031897603004360908, "phrase": "worst-case_time"}, {"score": 0.003147972261878234, "phrase": "external_memory_model"}, {"score": 0.00309650383642243, "phrase": "linear-space_data_structure"}, {"score": 0.0029862071871499295, "phrase": "block_size"}, {"score": 0.002927705457700311, "phrase": "strong_evidence"}, {"score": 0.0028234043335210895, "phrase": "purely_combinatorial_techniques"}, {"score": 0.002777227714581881, "phrase": "boolean_matrix_multiplication"}, {"score": 0.002450039362463466, "phrase": "orthogonal_range_mode"}, {"score": 0.002324055400492893, "phrase": "half-space_range_mode"}, {"score": 0.002175626278359828, "phrase": "multiphase_problem"}], "paper_keywords": ["Mode", " Range query", " Data structure", " Linear space", " Array"], "paper_abstract": "A mode of a multiset S is an element aaS of maximum multiplicity; that is, a occurs at least as frequently as any other element in S. Given an array A[1:n] of n elements, we consider a basic problem: constructing a static data structure that efficiently answers range mode queries on A. Each query consists of an input pair of indices (i,j) for which a mode of A[i:j] must be returned. The best previous data structure with linear space, by Krizanc, Morin, and Smid (Proceedings of the International Symposium on Algorithms and Computation (ISAAC), pp. 517-526, 2003), requires query time in the worst case. We improve their result and present an O(n)-space data structure that supports range mode queries in worst-case time. In the external memory model, we give a linear-space data structure that requires I/Os per query, where B denotes the block size. Furthermore, we present strong evidence that a query time significantly below cannot be achieved by purely combinatorial techniques; we show that boolean matrix multiplication of two matrices reduces to n range mode queries in an array of size O(n). Additionally, we give linear-space data structures for the dynamic problem (queries and updates in near O(n (3/4)) time), for orthogonal range mode in d dimensions (queries in near O(n (1-1/2d) ) time) and for half-space range mode in d dimensions (queries in time). Finally, we complement our dynamic data structure with a reduction from the multiphase problem, again supporting that we cannot hope for much more efficient data structures.", "paper_title": "Linear-Space Data Structures for Range Mode Query in Arrays", "paper_id": "WOS:000342194900005"}