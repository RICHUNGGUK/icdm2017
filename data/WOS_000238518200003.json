{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "fine-grained_transitions"}, {"score": 0.004388035083357706, "phrase": "automated_verification"}, {"score": 0.004073809704022463, "phrase": "state_space"}, {"score": 0.003747020072136732, "phrase": "common_synchronization_disciplines"}, {"score": 0.0035110198699787013, "phrase": "mutual_exclusion"}, {"score": 0.0033828748627992193, "phrase": "shared_data_structures"}, {"score": 0.0032292292848296617, "phrase": "traditional_reduction_theorems"}, {"score": 0.002331909406363425, "phrase": "reduced_system"}, {"score": 0.0021049977753042253, "phrase": "reachable_state_space"}], "paper_keywords": ["partial-order methods", " reduction", " model checking", " omega algebra"], "paper_abstract": "Reductions that aggregate fine-grained transitions into coarser transitions can significantly reduce the cost of automated verification, by reducing the size of the state space. We propose a reduction that can exploit common synchronization disciplines, such as the use of mutual exclusion for accesses to shared data structures. Exploiting them using traditional reduction theorems requires checking that the discipline is followed in the original (i.e., unreduced) system. That check can be prohibitively expensive. This paper presents a reduction that instead requires checking whether the discipline is followed in the reduced system. This check may be much cheaper, because the reachable state space is smaller.", "paper_title": "Optimistic synchronization-based state-space reduction", "paper_id": "WOS:000238518200003"}