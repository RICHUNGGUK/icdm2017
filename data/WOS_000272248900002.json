{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "monotonic_abstraction"}, {"score": 0.04829779156277875, "phrase": "parameterized_systems"}, {"score": 0.004429727701202369, "phrase": "simple_and_efficient_method"}, {"score": 0.004232702713825967, "phrase": "safety_properties"}, {"score": 0.004106225442735525, "phrase": "linear_topologies"}, {"score": 0.0038352452380298464, "phrase": "finite-state_automaton"}, {"score": 0.0035820833812158035, "phrase": "local_and_global_conditions"}, {"score": 0.003245520963944678, "phrase": "finite_domains"}, {"score": 0.002985484575498061, "phrase": "induced_transition_system"}, {"score": 0.0028309318332306703, "phrase": "simple_class"}, {"score": 0.002788257824525862, "phrase": "regular_expressions"}, {"score": 0.0027254466299651936, "phrase": "symbolic_representation"}, {"score": 0.002643888053328987, "phrase": "traditional_regular_model_checking_methods"}, {"score": 0.0021049977753042253, "phrase": "cache_coherence_protocols"}], "paper_keywords": [""], "paper_abstract": "We introduce the simple and efficient method of monotonic abstraction to prove safety properties for parameterized systems with linear topologies. A process in the system is a finite-state automaton, where the transitions are guarded by both local and global conditions. Processes may communicate via broadcast, rendez-vous and shared variables over finite domains. The method of monotonic abstraction derives an over-approximation of the induced transition system that allows the use of a simple class of regular expressions as a symbolic representation. Compared to traditional regular model checking methods, the analysis does not require the manipulation of transducers, and hence its simplicity and efficiency. We have implemented a prototype that works well on several mutual exclusion algorithms and cache coherence protocols.", "paper_title": "MONOTONIC ABSTRACTION (ON EFFICIENT VERIFICATION OF PARAMETERIZED SYSTEMS)", "paper_id": "WOS:000272248900002"}