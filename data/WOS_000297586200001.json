{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "entire_previous_search_history"}, {"score": 0.027909973024141697, "phrase": "hdea"}, {"score": 0.004586531354697466, "phrase": "novel_evolutionary_algorithm"}, {"score": 0.004345363360869553, "phrase": "proposed_algorithm"}, {"score": 0.004229556887896042, "phrase": "evolutionary_algorithm"}, {"score": 0.004072573194988867, "phrase": "binary_space"}, {"score": 0.004028796143006953, "phrase": "tree_structure"}, {"score": 0.003879234831701853, "phrase": "fitness_values"}, {"score": 0.0038168424095396205, "phrase": "evaluated_solutions"}, {"score": 0.0037150687722055727, "phrase": "space_partitioning_scheme"}, {"score": 0.0036553070575015344, "phrase": "fast_fitness_function_approximation"}, {"score": 0.0033888405252810927, "phrase": "mutation_strategy"}, {"score": 0.0033163269450817716, "phrase": "resultant_mutation_operator"}, {"score": 0.003074495313651187, "phrase": "mutation_operator"}, {"score": 0.0029763124376934813, "phrase": "out-of-bound_solutions"}, {"score": 0.002656650588033728, "phrase": "performance_comparison"}, {"score": 0.002599763359352916, "phrase": "eight_benchmark_evolutionary_algorithms"}, {"score": 0.0025440911575156755, "phrase": "real_coded_genetic_algorithm"}, {"score": 0.0024495111090152857, "phrase": "differential_evolution"}, {"score": 0.002320449502337321, "phrase": "particle_swarm_optimization"}, {"score": 0.002246292543825748, "phrase": "distribution_algorithm"}, {"score": 0.0021863046959469863, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "multimodal_function_optimization"}], "paper_keywords": ["Benchmarking with other evolutionary algorithms", " evolutionary algorithm using search history", " fitness function approximation", " parameter-less anisotropic adaptive mutation"], "paper_abstract": "In this paper, we report a novel evolutionary algorithm that enhances its performance by utilizing the entire previous search history. The proposed algorithm, namely history driven evolutionary algorithm (HdEA), employs a binary space partitioning tree structure to memorize the positions and the fitness values of the evaluated solutions. Benefiting from the space partitioning scheme, a fast fitness function approximation using the archive is obtained. The approximation is used to improve the mutation strategy in HdEA. The resultant mutation operator is parameter-less, anisotropic, and adaptive. Moreover, the mutation operator naturally avoids the generation of out-of-bound solutions. The performance of HdEA is tested on 34 benchmark functions with dimensions ranging from 2 to 40. We also provide a performance comparison of HdEA with eight benchmark evolutionary algorithms, including a real coded genetic algorithm, differential evolution, two improved differential evolution, covariance matrix adaptation evolution strategy, two improved particle swarm optimization, and an estimation of distribution algorithm. Seen from the experimental results, HdEA outperforms the other algorithms for multimodal function optimization.", "paper_title": "An Evolutionary Algorithm That Makes Decision Based on the Entire Previous Search History", "paper_id": "WOS:000297586200001"}