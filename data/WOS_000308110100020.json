{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "interpretation_overhead"}, {"score": 0.04954397446159369, "phrase": "dynamic_binary_translation"}, {"score": 0.025087580594583204, "phrase": "dicache"}, {"score": 0.004450568197899267, "phrase": "binary_code"}, {"score": 0.00397714507836836, "phrase": "two-stage_strategy"}, {"score": 0.0038886652509779883, "phrase": "dbt"}, {"score": 0.003802135020791801, "phrase": "hot_code"}, {"score": 0.0037595947142663997, "phrase": "cold_code"}, {"score": 0.00357395617690842, "phrase": "execution_efficiency"}, {"score": 0.003474799999519295, "phrase": "excessively_high_overhead"}, {"score": 0.0031577303835881964, "phrase": "large_number"}, {"score": 0.0031223774204093713, "phrase": "redundant_redecoding_operations"}, {"score": 0.0029681091946289757, "phrase": "decoded_instruction_cache"}, {"score": 0.0027898428590137515, "phrase": "interpreted_instructions"}, {"score": 0.0025208755851561368, "phrase": "performance_benchmark"}, {"score": 0.0023827927890399357, "phrase": "hardware_implementations"}, {"score": 0.0023166075278110237, "phrase": "experimental_results"}, {"score": 0.0021896891011033105, "phrase": "redecoding_operations"}, {"score": 0.0021049977753042253, "phrase": "dramatic_decline"}], "paper_keywords": ["Dynamic Binary Translation", " Interpretation", " Cache", " Performance", " Virtualization"], "paper_abstract": "Dynamic Binary Translation (DBT) has been widely utilized to convert binary code for one Instruction Set Architecture (ISA) to another at run-time and optimize the code when necessary. A two-stage strategy often applies to DBT, which handles hot code and cold code separately using translation and interpretation respectively to ensure execution efficiency. However, an excessively high overhead of interpretation remains to be tackled. It has been observed that interpretation usually involves a large number of redundant redecoding operations. This paper introduces an approach, namely Decoded Instruction Cache (DICache), which caches the information of the interpreted instructions in the history and attempts to reuse the information as much as possible in the future. Performance benchmark has been carried out with the software and the hardware implementations of DICache. The experimental results indicate that DICache can significantly remove the redundancy of redecoding operations, and this results in a dramatic decline of interpretation overhead.", "paper_title": "An approach to minimizing the interpretation overhead in Dynamic Binary Translation", "paper_id": "WOS:000308110100020"}