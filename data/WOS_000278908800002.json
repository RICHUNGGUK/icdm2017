{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "two-sided_transformations"}, {"score": 0.048992899974696226, "phrase": "multicore_architectures"}, {"score": 0.004234129588974058, "phrase": "two-sided_linear_algebra_transformations"}, {"score": 0.004138010495069077, "phrase": "hessenberg_and_bidiagonal_reductions"}, {"score": 0.004062682236016889, "phrase": "first_steps"}, {"score": 0.004007083686875716, "phrase": "standard_eigenvalue_problems"}, {"score": 0.0039522429946090174, "phrase": "singular_value"}, {"score": 0.0038802832668554457, "phrase": "state-of-the-art_dense_linear_algebra_softwares"}, {"score": 0.0037921747144972887, "phrase": "lapack"}, {"score": 0.0037574852182237486, "phrase": "scalapack"}, {"score": 0.003689053436223376, "phrase": "performance_losses"}, {"score": 0.0036553070575015344, "phrase": "multicore_processors"}, {"score": 0.0035395987202335223, "phrase": "thread-level_parallelism"}, {"score": 0.0034433297275344877, "phrase": "fine-grain_dataflow_model"}, {"score": 0.003334309053314909, "phrase": "programming_multicore_architectures"}, {"score": 0.0033037970113095577, "phrase": "buttari_et_al"}, {"score": 0.002985988377995789, "phrase": "tile_algorithms"}, {"score": 0.00286493504971388, "phrase": "basic_linear_algebra_subprograms"}, {"score": 0.0026986685585382347, "phrase": "efficient_scheduling_mechanisms"}, {"score": 0.002673957615079041, "phrase": "data-driven_execution"}, {"score": 0.0026373136897864763, "phrase": "tile_two-sided_reductions"}, {"score": 0.0025071862539276283, "phrase": "dgemm_peak"}, {"score": 0.0023725232579531273, "phrase": "tile_algorithms_approach"}, {"score": 0.0023079225317714815, "phrase": "full_reduction"}, {"score": 0.0021342613107011624, "phrase": "band_matrices"}, {"score": 0.0021049977753042253, "phrase": "required_forms"}], "paper_keywords": ["Scheduling", " multicore", " linear algebra", " matrix factorization", " two-sided transformations"], "paper_abstract": "The objective of this paper is to describe, in the context of multicore architectures, three different scheduler implementations for the two-sided linear algebra transformations, in particular the Hessenberg and Bidiagonal reductions which are the first steps for the standard eigenvalue problems and the singular value decompositions respectively. State-of-the-art dense linear algebra softwares, such as the LAPACK and ScaLAPACK libraries, suffer performance losses on multicore processors due to their inability to fully exploit thread-level parallelism. At the same time the fine-grain dataflow model gains popularity as a paradigm for programming multicore architectures. Buttari et al. (Parellel Comput. Syst. Appl. 35 (2009), 38-53) introduced the concept of tile algorithms in which parallelism is no longer hidden inside Basic Linear Algebra Subprograms but is brought to the fore to yield much better performance. Along with efficient scheduling mechanisms for data-driven execution, these tile two-sided reductions achieve high performance computing by reaching up to 75% of the DGEMM peak on a 12000 x 12000 matrix with 16 Intel Tigerton 2.4 GHz processors. The main drawback of the tile algorithms approach for two-sided transformations is that the full reduction cannot be obtained in one stage. Other methods have to be considered to further reduce the band matrices to the required forms.", "paper_title": "Scheduling two-sided transformations using tile algorithms on multicore architectures", "paper_id": "WOS:000278908800002"}