{"auto_keywords": [{"score": 0.03652446068505374, "phrase": "open_user_schema"}, {"score": 0.008567917901378893, "phrase": "possible_long-chain_joins"}, {"score": 0.007525532524498799, "phrase": "flat_tables"}, {"score": 0.00481495049065317, "phrase": "rdf_queries"}, {"score": 0.004398094237005956, "phrase": "resource_description_framework"}, {"score": 0.004203343568960231, "phrase": "real-world_applications"}, {"score": 0.004109212945115815, "phrase": "vertical_nor_flat_structures"}, {"score": 0.003971938976270902, "phrase": "frequent_schema_updates"}, {"score": 0.0037745459666402915, "phrase": "clear_winner"}, {"score": 0.003526476304712492, "phrase": "alternative_open_user_schema"}, {"score": 0.003332210257373994, "phrase": "rdf_query_streams"}, {"score": 0.0029920129598858545, "phrase": "vertical_table"}, {"score": 0.0029249294679606656, "phrase": "backend_storage"}, {"score": 0.0026864540069792275, "phrase": "efficient_isomorphic_decision_algorithm"}, {"score": 0.0025673005153462707, "phrase": "related_flat_tables"}, {"score": 0.0024257447861185813, "phrase": "existing_methods"}, {"score": 0.0023445770108033288, "phrase": "schema_updates"}, {"score": 0.0022278779300543548, "phrase": "empirical_evaluations"}, {"score": 0.0021049977753042253, "phrase": "complex_rdf_queries"}], "paper_keywords": ["divide and conquer architecture", " open user schema", " RDF query streams"], "paper_abstract": "Performance and scalability are two issues that are becoming increasingly pressing as the resource description framework (RDF) datamodel is applied to real-world applications. Because neither vertical nor flat structures of RDF storage can handle frequent schema updates and meanwhile avoid possible long-chain joins, there is no clear winner between the two typical structures. In this paper, we propose an alternative open user schema. The open user schema consists of flat tables automatically extracted from RDF query streams. A query is divided into two parts and conquered on the flat tables in the open user schema and on the vertical table stored in a backend storage. At the core of this divide and conquer architecture with open user schema, an efficient isomorphic decision algorithm is introduced to guide a query to related flat tables in the open user schema. Our proposal in essence departs from existing methods in that it can accommodate schema updates without possible long-chain joins. We implement our approach and provide empirical evaluations to demonstrate both the efficiency and effectiveness of our approach in evaluating complex RDF queries.", "paper_title": "Evaluation of RDF queries via equivalence", "paper_id": "WOS:000316261500002"}