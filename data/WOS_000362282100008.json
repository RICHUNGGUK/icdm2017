{"auto_keywords": [{"score": 0.03499168655962707, "phrase": "gpu"}, {"score": 0.004815032722878661, "phrase": "gpu."}, {"score": 0.004750178261675602, "phrase": "skyline_operator"}, {"score": 0.004499647408293102, "phrase": "optimal_trade-offs"}, {"score": 0.004349791059765796, "phrase": "state-of-the-art_skyline_computation"}, {"score": 0.004092463367307375, "phrase": "conditional_branching"}, {"score": 0.003929391999210588, "phrase": "point-to-point_comparisons"}, {"score": 0.0038243075774710387, "phrase": "gpgpu"}, {"score": 0.0036470559917231218, "phrase": "skyline_computation"}, {"score": 0.00338493754743055, "phrase": "skyline_algorithms"}, {"score": 0.003141598480804135, "phrase": "sequential_algorithms"}, {"score": 0.002955533639862811, "phrase": "new_skyline_algorithm"}, {"score": 0.002598034157587518, "phrase": "controlled_branching"}, {"score": 0.0025456716198597627, "phrase": "transitive_relationships"}, {"score": 0.0023948164534491273, "phrase": "non-traditional_gpu_algorithm"}, {"score": 0.0023625233416109917, "phrase": "sky_align"}, {"score": 0.0022682274656069643, "phrase": "respectable_throughput"}, {"score": 0.0022074592164608134, "phrase": "maximal_throughput"}, {"score": 0.0021049977753042253, "phrase": "faster_performance"}], "paper_keywords": [""], "paper_abstract": "The skyline operator returns records in a dataset that provide optimal trade-offs of multiple dimensions. State-of-the-art skyline computation involves complex tree traversals, data-ordering, and conditional branching to minimize the number of point-to-point comparisons. Meanwhile, GPGPU computing offers the potential for parallelizing skyline computation across thousands of cores. However, attempts to port skyline algorithms to the GPU have prioritized throughput and failed to outperform sequential algorithms. In this paper, we introduce a new skyline algorithm, designed for the GPU, that uses a global, static partitioning scheme. With the partitioning, we can permit controlled branching to exploit transitive relationships and avoid most point-to-point comparisons. The result is a non-traditional GPU algorithm, Sky Align, that prioritizes work-efficiency and respectable throughput, rather than maximal throughput, to achieve orders of magnitude faster performance.", "paper_title": "Work-Efficient Parallel Skyline Computation for the GPU", "paper_id": "WOS:000362282100008"}