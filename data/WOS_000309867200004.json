{"auto_keywords": [{"score": 0.04672266571747965, "phrase": "logic_programs"}, {"score": 0.041439091134021215, "phrase": "lppods_framework"}, {"score": 0.00481495049065317, "phrase": "explicit_preferences"}, {"score": 0.004442032546224076, "phrase": "ordered_disjunction"}, {"score": 0.004147756103284082, "phrase": "single_framework"}, {"score": 0.0038885527668812807, "phrase": "unified_way"}, {"score": 0.0038417798012011155, "phrase": "common-sense_reasoning"}, {"score": 0.003601628511550962, "phrase": "well_established_formalism"}, {"score": 0.003459191419478298, "phrase": "distinctive_feature"}, {"score": 0.003417565253539315, "phrase": "context-dependent_qualitative_preferences"}, {"score": 0.003269162006886173, "phrase": "logic_program"}, {"score": 0.003178091200568487, "phrase": "pasp"}, {"score": 0.0031398318568608505, "phrase": "qualitative_certainty_statements"}, {"score": 0.003040050100579337, "phrase": "necessity_values"}, {"score": 0.003003452468800793, "phrase": "possibilistic_logic"}, {"score": 0.0027041233221381756, "phrase": "lppods_syntax"}, {"score": 0.0024742098091226203, "phrase": "program_rules"}, {"score": 0.0023287359930308864, "phrase": "preferred_uncertain_default_rules"}, {"score": 0.0021479597698614373, "phrase": "asp-based_solver"}, {"score": 0.0021049977753042253, "phrase": "lppods_semantics"}], "paper_keywords": ["Possibilistic answer set programming", " Uncertain nonmonotonic reasoning", " Explicit preferences"], "paper_abstract": "In this paper, we show how the formalism of Logic Programs with Ordered Disjunction (LPODs) and Possibilistic Answer Set Programming (PASP) can be merged into the single framework of Logic Programs with Possibilistic Ordered Disjunction (LPPODs). The LPPODs framework embeds in a unified way several aspects of common-sense reasoning, nonmonotonocity, preferences, and uncertainty, where each part is underpinned by a well established formalism. On one hand, from LPODs it inherits the distinctive feature of expressing context-dependent qualitative preferences among different alternatives (modeled as the atoms of a logic program). On the other hand, PASP allows for qualitative certainty statements about the rules themselves (modeled as necessity values according to possibilistic logic) to be captured. In this way, the LPPODs framework supports a reasoning which is nonmonotonic, preference- and uncertainty-aware. The LPPODs syntax allows for the specification of (1) preferences among the exceptions to default rules, and (2) necessity values about the certainty of program rules. As a result, preferences and uncertainty can be used to select the preferred uncertain default rules of an LPPOD and, consequently, to order its possibilistic answer sets. Furthermore, we describe the implementation of an ASP-based solver able to compute the LPPODs semantics.", "paper_title": "Dealing with explicit preferences and uncertainty in answer set programming", "paper_id": "WOS:000309867200004"}