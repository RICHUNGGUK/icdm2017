{"auto_keywords": [{"score": 0.04668260212856778, "phrase": "assembly_time"}, {"score": 0.0407168878407689, "phrase": "interference_detection_method"}, {"score": 0.008248501783718536, "phrase": "complexity_connectivity_method"}, {"score": 0.006713000222172514, "phrase": "graph_generation_methods"}, {"score": 0.005098568239083642, "phrase": "assembly_mate_method"}, {"score": 0.00481495049065317, "phrase": "graph_generation_methods_for_structural_complexity_based_assembly_time_estimation"}, {"score": 0.004662705558154439, "phrase": "graph_generation"}, {"score": 0.004312622975366672, "phrase": "predictive_models"}, {"score": 0.004138010495069077, "phrase": "product_graphs"}, {"score": 0.0039341294012600085, "phrase": "recently_the_assembly_mate_method"}, {"score": 0.0038271712887391015, "phrase": "new_automated_tools"}, {"score": 0.0035395987202335223, "phrase": "multiple_products"}, {"score": 0.0034433297275344877, "phrase": "eleven_consumers_products"}, {"score": 0.003349670229755675, "phrase": "artificial_neural_network"}, {"score": 0.003083655376444887, "phrase": "connectivity_graphs"}, {"score": 0.0029181203386806683, "phrase": "target_time"}, {"score": 0.0027741761880779535, "phrase": "time_estimations"}, {"score": 0.002518746501941657, "phrase": "different_file_formats"}, {"score": 0.0024956789310376635, "phrase": "iges"}, {"score": 0.002473276914342393, "phrase": "step"}, {"score": 0.0024389277933858054, "phrase": "parasolid"}, {"score": 0.002329258721870127, "phrase": "suitable_automated_tool"}, {"score": 0.002286781334850213, "phrase": "connectivity_graph"}, {"score": 0.0021049977753042253, "phrase": "file_types"}], "paper_keywords": ["Design for assembly", " information subjectivity", " DFA", " assembly time", " DFM", " DFMA"], "paper_abstract": "This paper compares two different methods of graph generation for input into the complexity connectivity method to estimate the assembly time of a product. The complexity connectivity method builds predictive models for assembly time based on 29 complexity metrics applied to the product graphs. Previously, the part connection graph was manually created, but recently the assembly mate method and the interference detection method have introduced new automated tools for creating the part connectivity graphs. These graph generation methods are compared on their ability to predict the assembly time of multiple products. For this research, eleven consumers products are used to train an artificial neural network and three products are reserved for testing. The results indicate that both the assembly mate method and the interference detection method can create connectivity graphs that predict the assembly time of a product to within 45% of the target time. The interference detection method showed less variability than the assembly mate method in the time estimations. The assembly mate method is limited to only solid-works assembly files, while the interference detection method is more flexible and can operate on different file formats including IGES, STEP, and Parasolid. Overall, both of the graph generation methods provide a suitable automated tool to form the connectivity graph, but the interference detection method provides less variance in predicting the assembly time and is more flexible in terms of file types that can be used.", "paper_title": "Comparison of Graph Generation Methods for Structural Complexity Based Assembly Time Estimation", "paper_id": "WOS:000335951700003"}