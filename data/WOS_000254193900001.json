{"auto_keywords": [{"score": 0.033422023259301756, "phrase": "parallel_scalability"}, {"score": 0.00481495049065317, "phrase": "secondary_bottlenecks"}, {"score": 0.004751216062917875, "phrase": "parallel_quantum_chemistry_applications"}, {"score": 0.004688321299229397, "phrase": "mpi._profiling_tools"}, {"score": 0.004356926418550194, "phrase": "run-time_performance"}, {"score": 0.004270665568018583, "phrase": "scientific_application"}, {"score": 0.003995226376780718, "phrase": "parallel_mode"}, {"score": 0.003942435422006133, "phrase": "mpi"}, {"score": 0.0038642157757169315, "phrase": "communication_interface"}, {"score": 0.003712640297460159, "phrase": "quantum_chemistry_program"}, {"score": 0.003663443192307343, "phrase": "hartree_fock_theory"}, {"score": 0.003614895644619489, "phrase": "pulays_diis_method"}, {"score": 0.003543273649210823, "phrase": "extensive_set"}, {"score": 0.0034963129868796033, "phrase": "test_cases"}, {"score": 0.0032925489316383955, "phrase": "uniform_conclusions"}, {"score": 0.0032272929113113203, "phrase": "known_problem"}, {"score": 0.0029988599391845517, "phrase": "single_subroutine"}, {"score": 0.002881130228859848, "phrase": "speed_up"}, {"score": 0.002824005136794786, "phrase": "critical_module"}, {"score": 0.0027312956497456374, "phrase": "typical_pitfall"}, {"score": 0.0026950674053179404, "phrase": "triple_matrix_multiplications"}, {"score": 0.002572001496778222, "phrase": "critical_subroutine"}, {"score": 0.002470987929071079, "phrase": "run-time_behavior"}, {"score": 0.0021333110194180997, "phrase": "similar_fields"}, {"score": 0.0021049977753042253, "phrase": "similar_problems"}], "paper_keywords": ["MPI", " quantum chemistry", " performance analysis", " profiling tools", " bottlenecks"], "paper_abstract": "Profiling tools such as gprof and ssrun are used to analyze the run-time performance of a scientific application. The profiling is done in serial and in parallel mode using MPI as the communication interface. The application is a quantum chemistry program using Hartree Fock theory and Pulays DIIS method. An extensive set of test cases is taken into account in order to reach uniform conclusions. A known problem with decreased parallel scalability can thus be narrowed down to a single subroutine responsible for the reduction in Speed Up. The critical module is analyzed and a typical pitfall with triple matrix multiplications is identified. After overhauling the critical subroutine re-examination of the run-time behavior shows significantly improved performance and markedly improved parallel scalability. The lessons learned here might be of interest to other people working in similar fields with similar problems.", "paper_title": "Detecting secondary bottlenecks in parallel quantum chemistry applications using MPI", "paper_id": "WOS:000254193900001"}