{"auto_keywords": [{"score": 0.029561758661908195, "phrase": "nz"}, {"score": 0.00481495049065317, "phrase": "nondeterministic_schemas"}, {"score": 0.004505638402009237, "phrase": "z-based_formalism"}, {"score": 0.003557653536102669, "phrase": "nz_notation"}, {"score": 0.0034034331737042363, "phrase": "new_notion"}, {"score": 0.003353521531649663, "phrase": "operation_schemas"}, {"score": 0.003069006373093756, "phrase": "z_schema_calculus"}, {"score": 0.002726740692380339, "phrase": "new_set"}, {"score": 0.0026867260506696455, "phrase": "schema_calculus_operations"}, {"score": 0.002495268931035983, "phrase": "ordinary_operation_schemas"}, {"score": 0.0023519508354777215, "phrase": "resulting_formalism"}, {"score": 0.0021842976754894846, "phrase": "model_game-like_situations"}], "paper_keywords": ["Formal specification", " formal program development", " Z notation", " type theory", " modalities of nondeterminism", " schema calculus operations", " concurrent systems"], "paper_abstract": "In our previous work, we presented a Z-based formalism, called NZ, by which one can explicitly specify bounded, unbounded, erratic, angelic, demonic, loose, strict, singular, and plural nondeterminism. The NZ notation is mainly based on a new notion of operation schemas, called multi-schema. Since the operations of the Z schema calculus do not work on multi-schemas anymore, in this paper we augment NZ with a new set of schema calculus operations that can be applied on multi-schemas as well as ordinary operation schemas. To demonstrate the usability of the resulting formalism, we show how this formalism can assist to model game-like situations and concurrent systems as two well-known classes of nondeterministic systems.", "paper_title": "TOWARDS A CALCULUS FOR NONDETERMINISTIC SCHEMAS IN Z", "paper_id": "WOS:000310802200007"}