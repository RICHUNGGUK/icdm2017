{"auto_keywords": [{"score": 0.029353446513941388, "phrase": "clighttso"}, {"score": 0.00481495049065317, "phrase": "relaxed-memory_concurrency"}, {"score": 0.004426882270402403, "phrase": "semantic_design"}, {"score": 0.0042446888127531945, "phrase": "c-like_programming_language"}, {"score": 0.004185632403886255, "phrase": "concurrent_shared-memory_computation"}, {"score": 0.003715579364728729, "phrase": "relaxed-memory_behaviour"}, {"score": 0.0035129562812850784, "phrase": "compiler_optimisation"}, {"score": 0.0034640450599342488, "phrase": "concurrent_code"}, {"score": 0.0033213460816510685, "phrase": "high-performance_concurrent_algorithms"}, {"score": 0.003162252895465901, "phrase": "reasonably_simple_programming_model"}, {"score": 0.0028068030356445894, "phrase": "concurrent_relaxed-memory_semantics"}, {"score": 0.0026722904884984348, "phrase": "compcert's_clight"}, {"score": 0.002598333022293788, "phrase": "processor's_memory_model"}, {"score": 0.0025264171945423254, "phrase": "high-performance_code"}, {"score": 0.002226592967032469, "phrase": "correctness_proofs"}, {"score": 0.0021649446755503264, "phrase": "compcert"}], "paper_keywords": ["Reliability", " Theory", " Verification", " Relaxed Memory Models", " Verifying Compilation", " Semantics"], "paper_abstract": "In this paper, we consider the semantic design and verified compilation of a C-like programming language for concurrent shared-memory computation above x86 multiprocessors. The design of such a language is made surprisingly subtle by several factors: the relaxed-memory behaviour of the hardware, the effects of compiler optimisation on concurrent code, the need to support high-performance concurrent algorithms, and the desire for a reasonably simple programming model. In turn, this complexity makes verified (or verifying) compilation both essential and challenging. We define a concurrent relaxed-memory semantics for ClightTSO, an extension of CompCert's Clight in which the processor's memory model is exposed for high-performance code. We discuss a strategy for verifying compilation from ClightTSO to x86, which we validate with correctness proofs (building on CompCert) for the most interesting compiler phases.", "paper_title": "Relaxed-Memory Concurrency and Verified Compilation", "paper_id": "WOS:000286472700005"}