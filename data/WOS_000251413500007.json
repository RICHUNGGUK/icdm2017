{"auto_keywords": [{"score": 0.04923607408107278, "phrase": "continuous-valued_cellular_automata"}, {"score": 0.00481495049065317, "phrase": "linear_dynamical_systems"}, {"score": 0.004289686492089576, "phrase": "linear_systems"}, {"score": 0.003527550673371394, "phrase": "real_values"}, {"score": 0.0033442114331500407, "phrase": "numerical_calculations"}, {"score": 0.0032272929113113203, "phrase": "desired_problem"}, {"score": 0.0027010719929751, "phrase": "evolution_space"}, {"score": 0.00260657976055413, "phrase": "correct_calculations"}, {"score": 0.002470987929071079, "phrase": "euler's_integration_method"}, {"score": 0.0023633857274905977, "phrase": "configuration_space"}, {"score": 0.0022404162042797262, "phrase": "approximated_solution"}, {"score": 0.0021813467128927347, "phrase": "dynamical_system"}, {"score": 0.0021049977753042253, "phrase": "linear_behaviors"}], "paper_keywords": ["cellular automata", " block diagrams", " differential equations"], "paper_abstract": "This paper exposes a procedure for modeling and solving linear systems using continuous-valued cellular automata. The original part of this work consists on showing how the cells in the automaton may contain both real values and operators for carrying out numerical calculations and solve a desired problem. In this sense the automaton acts as a program, where data and operators are mixed in the evolution space for obtaining the correct calculations. As an example, Euler's integration method is implemented in the configuration space in order to achieve an approximated solution for a dynamical system. Three examples showing linear behaviors are presented.", "paper_title": "Modeling linear dynamical systems by continuous-valued cellular automata", "paper_id": "WOS:000251413500007"}