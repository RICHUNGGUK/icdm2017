{"auto_keywords": [{"score": 0.03843856552198327, "phrase": "value_locality"}, {"score": 0.00481495049065317, "phrase": "processors_increases"}, {"score": 0.004734448316824488, "phrase": "on-chip_memory_hierarchy"}, {"score": 0.0043029342321223825, "phrase": "on-chip_caches_yields"}, {"score": 0.004207230913063179, "phrase": "memory-bound_applications"}, {"score": 0.004090577229368418, "phrase": "limited_off-chip_bandwidth"}, {"score": 0.003954837422946628, "phrase": "memory-link_compression_schemes"}, {"score": 0.0035941231858949035, "phrase": "published_schemes"}, {"score": 0.003266201217790818, "phrase": "compression_scheme"}, {"score": 0.002984867789900281, "phrase": "commercial_applications"}, {"score": 0.002951444412262927, "phrase": "small_integers"}, {"score": 0.0027898428590137515, "phrase": "small-value_locality"}, {"score": 0.002607527117561699, "phrase": "significant_chunk"}, {"score": 0.002506715532901322, "phrase": "value_space"}, {"score": 0.0024370965602952496, "phrase": "fairly_small_group"}, {"score": 0.0024097920845706795, "phrase": "frequent_isolated_values"}, {"score": 0.0021408862709571615, "phrase": "new_compression_scheme"}, {"score": 0.0021049977753042253, "phrase": "multiple_value-locality_categories"}], "paper_keywords": ["computer architecture", " memory compression"], "paper_abstract": "As the speed of processors increases, the on-chip memory hierarchy will continue to be crucial for performance. Unfortunately, simply increasing the size of the on-chip caches yields diminishing returns and memory-bound applications may suffer from the limited off-chip bandwidth. This paper focuses on memory-link compression schemes. The first contribution is a framework for identifying the nature of the value locality exploited by published schemes. This framework is then used to quantitatively establish what type of value locality is exploited by each compression scheme. We find that as much as 40 percent of the values transferred in integer, media, and commercial applications are small integers and can be coded using less than 8 bits. By leveraging small-value locality, 35 percent of the bandwidth can be freed up. Another significant chunk of the values either forms clusters in the value space or belongs to a fairly small group of frequent isolated values. By leveraging this category, one can free up 70 percent of the bandwidth. Finally, we contribute a new compression scheme that exploits multiple value-locality categories and is shown to free up 75 percent of the bandwidth.", "paper_title": "Memory-link compression schemes: A value locality perspective", "paper_id": "WOS:000256039200005"}