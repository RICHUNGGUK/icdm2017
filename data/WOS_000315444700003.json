{"auto_keywords": [{"score": 0.027278675954645004, "phrase": "mb"}, {"score": 0.00481495049065317, "phrase": "low-cost_bit-serial_architectures"}, {"score": 0.00459990650330792, "phrase": "major_part"}, {"score": 0.004394424341776717, "phrase": "bit-parallel_hardware_architectures"}, {"score": 0.0038752755502006442, "phrase": "area-constrained_electronic_consumer_designs"}, {"score": 0.003831224748279043, "phrase": "small_portable_multimedia_devices"}, {"score": 0.0035772012773052065, "phrase": "small_pin_numbers"}, {"score": 0.0034303002275695446, "phrase": "different_ways"}, {"score": 0.003378385493203297, "phrase": "absolute_differences"}, {"score": 0.0032894118890753805, "phrase": "reference_pixels"}, {"score": 0.0032272929113113203, "phrase": "considerable_reduction"}, {"score": 0.0032027739752274, "phrase": "memory_bandwidth"}, {"score": 0.0031663432942179853, "phrase": "first_architecture"}, {"score": 0.003130325700934738, "phrase": "partial_sad"}, {"score": 0.003047865053078826, "phrase": "reference_pixel_rows"}, {"score": 0.003013191092393344, "phrase": "second_design"}, {"score": 0.002956272941199248, "phrase": "small_blocks"}, {"score": 0.0029115112555515277, "phrase": "reconfigurable_reference_buffer"}, {"score": 0.002867425368894356, "phrase": "better_memory_bandwidth"}, {"score": 0.0028347983387988847, "phrase": "hardware_parallelism"}, {"score": 0.0028025415122856973, "phrase": "proposed_designs"}, {"score": 0.002739121808942775, "phrase": "efficient_serial_absolute_difference_architecture"}, {"score": 0.0024522007854499554, "phrase": "silicon_area"}, {"score": 0.002387560868354908, "phrase": "power_consumption"}, {"score": 0.002360381056508368, "phrase": "first_and_second_designs"}, {"score": 0.0023335099338323974, "phrase": "full_search_vbsme"}, {"score": 0.0021537671245615286, "phrase": "clock_frequency"}], "paper_keywords": ["H.264", " Motion estimation", " Low cost architecture", " Bit-serial"], "paper_abstract": "Variable block-size motion estimation (VBSME) process occupies a major part of computation of an H.264 encoder, which is usually accelerated by bit-parallel hardware architectures with large I/O bit width to meet real-time constrains. However, such kind of architectures increase the area overhead and pin count, and therefore will not be suitable for area-constrained electronic consumer designs such as small portable multimedia devices. This paper addresses this problem by proposing two area efficient least significant bit (LSB) bit-serial architectures with small pin numbers. Both designs take advantage of data reusing technique in different ways for sum of absolute differences (SAD) computation and reading reference pixels, leading to a considerable reduction of memory bandwidth. The first architecture propagates the partial SAD and sum results and broadcasts the reference pixel rows whereas the second design reuse the SAD of small blocks and has a reconfigurable reference buffer leading to a better memory bandwidth when using hardware parallelism. The proposed designs benefit from several optimization techniques including an efficient serial absolute difference architecture, word length reduction by parallelism, bit truncation, mode filtering, and macroblock (MB) level subsampling, which significantly enhance their performances in terms of silicon area, throughput, latency, and power consumption. The first and second designs can support full search VBSME of 720 x 480 video with 30 frames per second (fps), two reference frames, and [-16, 15] search range at a clock frequency of 414 MHz with 29.28 k and 31.5 k gates, respectively.", "paper_title": "Analysis and Design of Low-Cost Bit-Serial Architectures for Motion Estimation in H.264/AVC", "paper_id": "WOS:000315444700003"}