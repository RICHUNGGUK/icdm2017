{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "embedded_multi-core_soc"}, {"score": 0.004647442352794694, "phrase": "embedded_devices"}, {"score": 0.004459334186889869, "phrase": "computing_performance"}, {"score": 0.0037797419108291227, "phrase": "new_queueing_network_model"}, {"score": 0.003735349093835257, "phrase": "performance_analysis_method"}, {"score": 0.0034388111429203222, "phrase": "blocking_probability"}, {"score": 0.0033984088755183287, "phrase": "queueing_situation"}, {"score": 0.0032800186243040663, "phrase": "executing_core"}, {"score": 0.0032414759269196493, "phrase": "finite_capacity_holding_nodes"}, {"score": 0.00314708280192844, "phrase": "queueing_model"}, {"score": 0.0030735451757603555, "phrase": "equivalent_queueing_network_model"}, {"score": 0.002984027623988469, "phrase": "adaptive_load_scheduling_algorithm"}, {"score": 0.0028800314406626022, "phrase": "main_scheduler"}, {"score": 0.002846175473457555, "phrase": "real-time_scheduling"}, {"score": 0.00266693888510356, "phrase": "common_priority_fifo_buffer"}, {"score": 0.0026045914281028473, "phrase": "semi-global_fifo_buffer_queue"}, {"score": 0.0024695739265437823, "phrase": "approximate_iterative_algorithm"}, {"score": 0.0023976048394496446, "phrase": "system_performance"}, {"score": 0.0023554316787703137, "phrase": "experimental_results"}, {"score": 0.0023003498123420237, "phrase": "adaptive_scheduling_algorithm"}, {"score": 0.0022201273900989416, "phrase": "task_assignment"}, {"score": 0.0021940118003312397, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "Embedded devices have gradually increased the demand for computing performance. In recent years, researches have focused on ways to maximize the performance of embedded multi-core SoC when the hardware consumption is very limited. This paper presents a new queueing network model and performance analysis method for embedded multi-core SoC based on task handling mechanism with priority. To calculate the blocking probability and queueing situation of the implementation for every executing core, finite capacity holding nodes are added to the queueing model, and an equivalent queueing network model is obtained. An adaptive load scheduling algorithm is designed, and the main scheduler is real-time scheduling by blocking and queueing the situation of each core. Common priority FIFO buffer, high-priority FIFO buffer queue, and semi-global FIFO buffer queue are a reasonable distribution. Finally, the approximate iterative algorithm is proposed for evaluating system performance. The experimental results indicate that the adaptive scheduling algorithm significantly improves the balance of task assignment. Crown Copyright (C) 2012 Published by Elsevier Ltd. All rights reserved.", "paper_title": "Queueing model analysis and scheduling strategy for embedded multi-core SoC based on task priority", "paper_id": "WOS:000316514900004"}