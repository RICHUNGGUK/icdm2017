{"auto_keywords": [{"score": 0.03799635259867218, "phrase": "x_ps"}, {"score": 0.015719716506582538, "phrase": "static_timing_analysis"}, {"score": 0.004284314575412372, "phrase": "vlsi"}, {"score": 0.0038810583785936505, "phrase": "timing_constraint"}, {"score": 0.003677280504320636, "phrase": "positive_slack"}, {"score": 0.0033914308417007316, "phrase": "extra_delay"}, {"score": 0.0032132782979796895, "phrase": "smaller_delay"}, {"score": 0.0030997236644076196, "phrase": "early_mode"}, {"score": 0.002708399936381754, "phrase": "standard_static_timing_analysis_model"}, {"score": 0.0022419349154472806, "phrase": "intended_properties"}, {"score": 0.0021821915946356168, "phrase": "proposed_idea"}, {"score": 0.0021049977753042253, "phrase": "enhanced_slew_propagation"}], "paper_keywords": ["delay budgeting", " physical design", " slack", " slack distribution", " static timing analysis", " VLSI design"], "paper_abstract": "The notion of slack is central in static timing analysis and very large scale integration (VLSI) design in general. Negative slack means that a timing constraint is violated, while a positive slack of x ps is intended to mean that an extra delay of x ps (or a smaller delay by x ps in early mode) could be tolerated. However, this property does not hold with the standard static timing analysis model. The paper defines slack properly, shows how to compute it efficiently, and proves that it has the intended properties. The proposed idea is based on enhanced slew propagation.", "paper_title": "Slack in static timing analysis", "paper_id": "WOS:000240078200025"}