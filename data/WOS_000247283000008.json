{"auto_keywords": [{"score": 0.049435104149514145, "phrase": "fuzzy_spatial_databases"}, {"score": 0.04573629565804587, "phrase": "spatial_data"}, {"score": 0.00481495049065317, "phrase": "index_structures"}, {"score": 0.004623224002010226, "phrase": "database_management_systems"}, {"score": 0.0044692705329574, "phrase": "spatially_referenced_data"}, {"score": 0.00414830454375092, "phrase": "unique_constraints"}, {"score": 0.003850299959557491, "phrase": "spatial_database_systems"}, {"score": 0.003525493807130663, "phrase": "physical_level"}, {"score": 0.003294350220187021, "phrase": "effective_spatial_and_aspatial_indexing_technique"}, {"score": 0.0029355502535757696, "phrase": "indexing_approach"}, {"score": 0.002687702958515561, "phrase": "spatial_index_structures"}, {"score": 0.0026157259734105, "phrase": "multilevel_grid_file"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": [""], "paper_abstract": "Over the years database management systems have evolved to include spatially referenced data. Because spatial data are complex and have a number of unique constraints (i.e., spatial components and uncertain properties), spatial database systems can be effective only if the spatial data are properly handled at the physical level. Therefore, it is important to develop an effective spatial and aspatial indexing technique to facilitate flexible spatial and/or aspatial querying for such databases. For this purpose we introduce an indexing approach to use (fuzzy) spatial and (fuzzy) aspatial data. We use a number of spatial index structures, such as Multilevel Grid File (MLGF), G-tree, R-tree, and R*-tree, for fuzzy spatial databases and compare the performances of these structures for various flexible queries. (c) 2007 Wiley Periodicals, Inc.", "paper_title": "Design and implementation of index structures for fuzzy spatial databases", "paper_id": "WOS:000247283000008"}