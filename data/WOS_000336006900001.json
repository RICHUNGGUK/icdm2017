{"auto_keywords": [{"score": 0.02935510308934082, "phrase": "transpose_traffic"}, {"score": 0.011871065766175814, "phrase": "regular_link_addition"}, {"score": 0.008986602823557668, "phrase": "uniform_traffic"}, {"score": 0.00481495049065317, "phrase": "link_addition_method"}, {"score": 0.00478218760286811, "phrase": "noc_transient_error_mitigation"}, {"score": 0.004497129150551236, "phrase": "network_blockage"}, {"score": 0.004466519142879166, "phrase": "packets_loss"}, {"score": 0.004436116555817464, "phrase": "incorrect_delivery"}, {"score": 0.004346139434813303, "phrase": "network_throughput"}, {"score": 0.004287166497171827, "phrase": "successful_delivery_rate"}, {"score": 0.00422899036681456, "phrase": "tolerant_mechanisms"}, {"score": 0.00404530215600463, "phrase": "noc"}, {"score": 0.003949693102823493, "phrase": "transient_errors"}, {"score": 0.0038960785110831162, "phrase": "communication_quality"}, {"score": 0.0038300786263543835, "phrase": "existing_methods"}, {"score": 0.003688773272422118, "phrase": "link_addition_strategy"}, {"score": 0.003663645143713398, "phrase": "transient_error_alleviation"}, {"score": 0.0035648266669315943, "phrase": "customized_link_addition"}, {"score": 0.0034686643139273934, "phrase": "noc_transient_errors"}, {"score": 0.0034332736827447654, "phrase": "regular_design"}, {"score": 0.003375087185182269, "phrase": "general_purpose_case"}, {"score": 0.0033406481167452436, "phrase": "partially_customized_design"}, {"score": 0.003306559295382181, "phrase": "inherent_communication_characteristics"}, {"score": 0.0032728171827367068, "phrase": "reliability_requirement"}, {"score": 0.0032173412933955117, "phrase": "specified_cases"}, {"score": 0.0031845067058084583, "phrase": "experimental_results"}, {"score": 0.0031628027642565527, "phrase": "typical_network_benchmarks"}, {"score": 0.0031198362555601377, "phrase": "proposed_link_addition_methods"}, {"score": 0.003066945490483524, "phrase": "noc_performance"}, {"score": 0.002702363975375762, "phrase": "reliability_metrics"}, {"score": 0.0026845927141361434, "phrase": "torus"}, {"score": 0.002497862210672172, "phrase": "novel_customized_reliability-aware_link_addition_mechanism"}, {"score": 0.002397370428991875, "phrase": "reliability_metric"}, {"score": 0.002340623433237658, "phrase": "standard_mesh"}, {"score": 0.002293051006249274, "phrase": "hotspot_traffic"}, {"score": 0.002238767763626708, "phrase": "area_overhead_and_power_consumption"}, {"score": 0.002223496599128375, "phrase": "nocs"}, {"score": 0.0021709330950231863, "phrase": "orion"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["NoC", " Reliability", " Transient errors", " Link addition"], "paper_abstract": "Transient errors in a Network on Chip (NoC) result in some problems such as network blockage, packets loss or incorrect delivery, which would decrease the network throughput and degrade the successful delivery rate. Many fault tolerant mechanisms, such as error correcting code, retransmission and redundancy for the NoC, have been proposed to mitigate transient errors and guarantee the communication quality. Different from these existing methods, the paper aims at exploiting the potentials of the link addition strategy for transient error alleviation. The regular link addition as well as the customized link addition based on Mesh is designed for alleviating NoC transient errors. The regular design is suitable for the general purpose case while the partially customized design exploits the inherent communication characteristics and the reliability requirement of applications for some specified cases. The experimental results for typical network benchmarks confirm that the proposed link addition methods are effective to improve NoC performance and reliability. (1) In the case of the regular link addition, 4 x 4 Torus brings the throughput to increase by 45.76% and 87.34% over Mesh for the transpose traffic and the uniform traffic respectively. The reliability metrics of Torus over Mesh are up to 56.65% and 12.71% for the transpose traffic and the uniform traffic respectively. (2) The novel customized reliability-aware link addition mechanism makes the throughput improvement up to 17.4%, 53.5% and the reliability metric up to 16.34%, 57.76% over standard Mesh for the transpose traffic and the hotspot traffic respectively. In addition, the area overhead and power consumption of NoCs are also evaluated by the tool Orion in the paper. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Exploiting and evaluating the potentials of the link addition method for NoC transient error mitigation", "paper_id": "WOS:000336006900001"}