{"auto_keywords": [{"score": 0.043236008352619086, "phrase": "kernel_k-means"}, {"score": 0.00481495049065317, "phrase": "trimmed_kernel_k-means_clustering"}, {"score": 0.0046741260449047976, "phrase": "unsupervised_learning_task"}, {"score": 0.004339744430169516, "phrase": "closely_related_data_samples"}, {"score": 0.004171259063201874, "phrase": "unlabeled_data"}, {"score": 0.004009288598277725, "phrase": "art_clustering_algorithm"}, {"score": 0.0035600143547053287, "phrase": "global_clustering_algorithm"}, {"score": 0.003421697038352743, "phrase": "kernel_matrix"}, {"score": 0.0029784342137867776, "phrase": "single_computer"}, {"score": 0.002862648127577722, "phrase": "distributed_approach"}, {"score": 0.002710735995572145, "phrase": "clustering_algorithm"}, {"score": 0.002592444377471345, "phrase": "large_number"}, {"score": 0.0024793019587009035, "phrase": "high_performance_clustering_results"}, {"score": 0.002394719113232821, "phrase": "mapreduce_programming_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data clustering", " Face clustering", " Kernel k-Means", " Distributed computing"], "paper_abstract": "Data clustering is an unsupervised learning task that has found many applications in various scientific fields. The goal is to find subgroups of closely related data samples (clusters) in a set of unlabeled data. Kernel k-Means is a state of the art clustering algorithm. However, in contrast to clustering algorithms that can work using only a limited percentage of the data at a time, Kernel k-Means is a global clustering algorithm. It requires the computation of the kernel matrix, which takes O(n(2)d) time and O(n(2)) space in memory. As datasets grow larger, the application of Kernel k-Means becomes infeasible on a single computer, a fact that strongly suggests a distributed approach. In this paper, we present such an approach to the Kernel k-Means clustering algorithm, in order to make its application to a large number of samples feasible and, thus, achieve high performance clustering results on very big datasets. Our distributed approach follows the MapReduce programming model and consists of 3 stages, the kernel matrix computation, a novel kernel matrix trimming method and the Kernel k-Means clustering algorithm. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A distributed framework for trimmed Kernel k-Means clustering", "paper_id": "WOS:000354582700028"}