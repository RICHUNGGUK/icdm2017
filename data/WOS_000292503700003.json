{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "locality_theorem"}, {"score": 0.004641351004344458, "phrase": "object-oriented_programming"}, {"score": 0.004501453956464956, "phrase": "sensitive_object_references"}, {"score": 0.004339108074589307, "phrase": "confinement_schemes"}, {"score": 0.0041825926310470616, "phrase": "object_encapsulation"}, {"score": 0.00410645614623058, "phrase": "static_type_systems"}, {"score": 0.003958299299658418, "phrase": "strong_restrictions"}, {"score": 0.003417054482155433, "phrase": "semantic_model"}, {"score": 0.003334309053314909, "phrase": "mu_java"}, {"score": 0.0032336801561165113, "phrase": "sequential_java"}, {"score": 0.002949598537993663, "phrase": "semantic_view"}, {"score": 0.002690406375639144, "phrase": "object_pool"}, {"score": 0.0026576091519087065, "phrase": "confinement_constraint"}, {"score": 0.0025148871904409095, "phrase": "main_locality_theorem"}, {"score": 0.002469032978674379, "phrase": "well_confinement"}, {"score": 0.002265833357217618, "phrase": "security_breach_problem"}, {"score": 0.0022382002476510573, "phrase": "java_jdk"}], "paper_keywords": ["operational semantics", " confinement", " well confined program", " Locality theorem", " confined type", " ownership"], "paper_abstract": "Confinement is required in object-oriented programming in order to protect sensitive object references. Recently a range of confinement schemes have been proposed to achieve object encapsulation by defining static type systems, but unavoidably, with strong restrictions. On the other hand, no similarity in concepts makes assessing of these schemes a difficulty. We build in this paper a semantic model for confinement in mu Java, a subset of sequential Java that offers most object-oriented features. This model has limited restriction for programs. From a semantic view, confinement is defined with respect to a given context that specifies partition of the object pool and confinement constraint among them. Moreover, we present the main Locality theorem for checking well confinement of programs locally. By applying this theorem, we have solved a security breach problem from Java JDK 1.1.1, and furthermore, proved the soundness of two widely used confinement schemes: confined types and ownership types.", "paper_title": "A semantic model of confinement and Locality theorem", "paper_id": "WOS:000292503700003"}