{"auto_keywords": [{"score": 0.032329774677387874, "phrase": "kolmogorov"}, {"score": 0.00481495049065317, "phrase": "low-depth_witnesses"}, {"score": 0.004559661374976129, "phrase": "kolmogorov_complexity"}, {"score": 0.004015182362035361, "phrase": "smallest_program"}, {"score": 0.0036791898021541823, "phrase": "melkebeek"}, {"score": 0.0035503385126549655, "phrase": "vinodchandran"}, {"score": 0.003378385493203297, "phrase": "useful_information"}, {"score": 0.0033175095965171674, "phrase": "computational_depth"}, {"score": 0.003141364320497748, "phrase": "polynomial-time-bounded_kolmogorov_complexity"}, {"score": 0.0026387443519580458, "phrase": "bpp"}, {"score": 0.0024129269611844794, "phrase": "standard_hardness_assumption"}, {"score": 0.0021049977753042253, "phrase": "good_pseudorandom_generators"}], "paper_keywords": ["Computational depth", " SAT formulas", " Kolmogorov complexity", " Pseudorandom generators"], "paper_abstract": "Kolmogorov Complexity measures the amount of information in a string by the size of the smallest program that generates that string. Antunes, Fortnow, van Melkebeek, and Vinodchandran captured the notion of useful information by computational depth, the difference between the polynomial-time-bounded Kolmogorov complexity and traditional Kolmogorov complexity. We show unconditionally how to probabilistically find satisfying assignments for formulas that have at least one assignment of logarithmic depth. The converse holds under a standard hardness assumption though fails if BPP = FewP = EXP. We also prove that assuming the existence of good pseudorandom generators one cannot increase the depth of a string efficiently.", "paper_title": "Low-Depth Witnesses are Easy to Find", "paper_id": "WOS:000307295300004"}