{"auto_keywords": [{"score": 0.04955461236891121, "phrase": "generic_process_algebra"}, {"score": 0.00481495049065317, "phrase": "finite-state_processes"}, {"score": 0.004607414079126163, "phrase": "acp"}, {"score": 0.004590496414177077, "phrase": "present_several_differences"}, {"score": 0.0037505809981715024, "phrase": "different_usage"}, {"score": 0.0034464962568390265, "phrase": "basic_mechanisms"}, {"score": 0.0033712944392793195, "phrase": "minimal_fixpoint_based_unguarded_recursion"}, {"score": 0.003190367939051776, "phrase": "underlying_common_language"}, {"score": 0.002953217535105884, "phrase": "complete_axiomatisation"}, {"score": 0.002931569771634119, "phrase": "milner's_observational_congruence"}, {"score": 0.002763988044737562, "phrase": "syntactical_characterisation"}, {"score": 0.0026252106881752067, "phrase": "recursion_operators"}, {"score": 0.00257735013358606, "phrase": "transition_systems"}, {"score": 0.002539689093411356, "phrase": "operational_semantics"}, {"score": 0.0021679225271212413, "phrase": "milner"}, {"score": 0.0021520139248317333, "phrase": "weakly_unguarded_recursion"}, {"score": 0.0021049977753042253, "phrase": "single_axiom"}], "paper_keywords": [""], "paper_abstract": "The three classical process algebras CCS, CSP and ACP present several differences in their respective technical machinery. This is due, not only to the difference in their operators, but also to the terminology and 'way of thinking' of the community that has been (and still is) working with them. In this paper we will first discuss these differences and try to clarify the different usage of terminology and concepts. Then, as a result of this discussion, we define a generic process algebra where each of the basic mechanisms of the three process algebras (including minimal fixpoint based unguarded recursion) is expressed by an operator, and which can be used as an underlying common language. We show an example of the advantages of adopting such a language instead of one of the three more specialised algebras: producing a complete axiomatisation for Milner's observational congruence in the presence of (unguarded) recursion and static operators. More precisely, we provide a syntactical characterisation (allowing as many terms as possible) for the equations involved in recursion operators, which guarantees that transition systems generated by the operational semantics are finite state. Conversely, we show that every process admits a specification in terms of such a restricted form of recursion. We then present an axiomatisation that is ground complete over such a restricted signature. Notably, we also show that the two standard axioms of Milner for weakly unguarded recursion can be expressed using a single axiom only.", "paper_title": "A ground-complete axiomatisation of finite-state processes in a generic process algebra", "paper_id": "WOS:000261849500003"}