{"auto_keywords": [{"score": 0.040705321184753146, "phrase": "kernel_matrix"}, {"score": 0.032542525398234025, "phrase": "svm_problems"}, {"score": 0.00986178120154326, "phrase": "aho"}, {"score": 0.00481495049065317, "phrase": "second-order_cone_programming_approaches"}, {"score": 0.004778594263962987, "phrase": "support_vector_machine_learning_problems"}, {"score": 0.004671156704912419, "phrase": "support_vector_machine"}, {"score": 0.004636026103495026, "phrase": "svm"}, {"score": 0.004548848077202625, "phrase": "quadratic_programming_problem"}, {"score": 0.004497410940849537, "phrase": "linear_constraint"}, {"score": 0.004297388539539564, "phrase": "second_order_cone_programming"}, {"score": 0.004264934609240295, "phrase": "socp"}, {"score": 0.004153215258803912, "phrase": "ipm"}, {"score": 0.0040444053843446326, "phrase": "socp_problems"}, {"score": 0.003983512316698646, "phrase": "storage_requirements"}, {"score": 0.003923532450854754, "phrase": "computational_complexity"}, {"score": 0.00373474182086791, "phrase": "low-rank_matrix"}, {"score": 0.00362308996613223, "phrase": "low-rank_positive_semi-definite_matrix"}, {"score": 0.0033582976109650608, "phrase": "svm_classification"}, {"score": 0.0033329032920236994, "phrase": "regression_problem"}, {"score": 0.0031604223680801774, "phrase": "better_search_direction"}, {"score": 0.0031127970604842375, "phrase": "socp_formulations"}, {"score": 0.00286336417751658, "phrase": "computational_costs"}, {"score": 0.0027988680988458433, "phrase": "hkm"}, {"score": 0.0027566738323014, "phrase": "direction_methods"}, {"score": 0.002613935123129054, "phrase": "training_time"}, {"score": 0.002555040841339798, "phrase": "ipm_iterations"}, {"score": 0.002497470177389344, "phrase": "hkm_method"}, {"score": 0.0024504843466435487, "phrase": "aho_method"}, {"score": 0.002350234533834199, "phrase": "fine"}, {"score": 0.00233240715947344, "phrase": "scheinberg"}, {"score": 0.0022115879730677, "phrase": "state-of-the-art_svm_optimization"}, {"score": 0.0021948455916770233, "phrase": "svmtorch"}, {"score": 0.0021782296784218923, "phrase": "svmlight"}, {"score": 0.0021049977753042253, "phrase": "joachims_'linear_svm'_method"}], "paper_keywords": ["support vector machine", " kernel matrix", " second-order cone programming", " HKM search direction", " AHO search direction"], "paper_abstract": "The core of the support vector machine (SVM) problem is a quadratic programming problem with a linear constraint and bounded variables. This problem can be transformed into the second order cone programming (SOCP) problems. An interior-point-method (IPM) can be designed for the SOCP problems in terms of storage requirements as well as computational complexity if the kernel matrix has low-rank. If the kernel matrix is not a low-rank matrix, it can be approximated by a low-rank positive semi-definite matrix, which in turn will be fed into the optimizer. In this paper we present two SOCP formulations for each SVM classification and regression problem. There are several search direction methods for implementing SOCPs. Our main goal is to find a better search direction for implementing the SOCP formulations of the SVM problems. Two popular search direction methods: HKM and AHO are tested analytically for the SVM problems, and efficiently implemented. The computational costs of each iteration of the HKM and AHO search direction methods are shown to be the same for the SVM problems. Thus, the training time depends on the number of IPM iterations. Our experimental results show that the HKM method converges faster than the AHO method. We also compare our results with the method proposed in Fine and Scheinberg (2001) that also exploits the low-rank of the kernel matrix, the state-of-the-art SVM optimization softwares SVMTorch and SVMlight. The proposed methods are also compared with Joachims 'Linear SVM' method on linear kernel.", "paper_title": "Implementation Issues of Second-Order Cone Programming Approaches for Support Vector Machine Learning Problems", "paper_id": "WOS:000265701700035"}