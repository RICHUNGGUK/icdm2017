{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dvs"}, {"score": 0.03133736893592538, "phrase": "transition_time"}, {"score": 0.0047515546458205046, "phrase": "real-time_systems"}, {"score": 0.00470975295439431, "phrase": "tree_structure_analysis"}, {"score": 0.0046683172874085015, "phrase": "dynamic_voltage_scaling"}, {"score": 0.004546174820239776, "phrase": "key_technique"}, {"score": 0.004506171772318298, "phrase": "embedded_real-time_systems"}, {"score": 0.0043496334756644535, "phrase": "supply_voltage"}, {"score": 0.004161553532799662, "phrase": "canonical_schedules"}, {"score": 0.004052616113326177, "phrase": "slack_time"}, {"score": 0.003946519058822334, "phrase": "voltage_scaling_decisions"}, {"score": 0.003742554019950264, "phrase": "exponential_time_complexities"}, {"score": 0.003350740737336966, "phrase": "tree_structure"}, {"score": 0.0032342101452939977, "phrase": "data_structure"}, {"score": 0.003191560305761507, "phrase": "early-completion_point"}, {"score": 0.0030399188412691914, "phrase": "line_algorithms"}, {"score": 0.002289821830549779, "phrase": "experimental_results"}, {"score": 0.0022496114364599328, "phrase": "proposed_approach"}, {"score": 0.002200337772403981, "phrase": "computational_complexity"}, {"score": 0.002161695357601592, "phrase": "energy_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Dynamic voltage scaling", " Real-time scheduling", " Distance-constraint tasks scheduling"], "paper_abstract": "Dynamic voltage scaling (DVS) is a key technique for embedded real-time systems to reduce energy consumption by lowering the supply voltage and operating frequency. Many existing DVS algorithms have to generate the canonical schedules or estimate the lengths of slack time in advance for generating the voltage scaling decisions. Therefore, these methods have to compute the schedules with exponential time complexities in general. In this paper, we consider a set of jitter-controlled, independent, periodic, hard real-time tasks scheduled according to preemptive pinwheel model. Our approach constructs a tree structure corresponding to a schedule and maintains the data structure at each early-completion point. Our approach consists of off-line and on-line algorithms which consider the effects of transition time and energy. The off-line and on-line algorithm takes O(k + n log n) and O(k + (p(max)/p(min))) time complexity, respectively, where n, k, p(max) and p(min) denotes the number of tasks, jobs, longest and shortest task period. respectively. Experimental results show that the proposed approach is effective in reducing computational complexity, transition time and energy overhead. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Transition-aware DVS algorithm for real-time systems using tree structure analysis", "paper_id": "WOS:000281222300006"}