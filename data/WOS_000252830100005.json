{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "modern_xml_databases"}, {"score": 0.004770211811866158, "phrase": "xml_path_summaries"}, {"score": 0.004725886853744007, "phrase": "compact_structures"}, {"score": 0.00428451995524549, "phrase": "document's_content"}, {"score": 0.004224911726496726, "phrase": "persistent_store"}, {"score": 0.004108161406159407, "phrase": "path_indices"}, {"score": 0.004069963083642548, "phrase": "path_tables"}, {"score": 0.003939033374807842, "phrase": "path_summaries"}, {"score": 0.0039024014688338964, "phrase": "path-driven_storage_model"}, {"score": 0.003812299519486331, "phrase": "current-day_xml_databases"}, {"score": 0.003689628075766217, "phrase": "complex_queries"}, {"score": 0.003587616378156851, "phrase": "xquery_subset"}, {"score": 0.003472149546470424, "phrase": "efficient_encoding_techniques"}, {"score": 0.0034238045290210534, "phrase": "structural_node_identifiers"}, {"score": 0.0033447157263095223, "phrase": "path_summary's_many_uses"}, {"score": 0.003206916619690171, "phrase": "common_basis"}, {"score": 0.0031770714776989282, "phrase": "namely_relevant_paths"}, {"score": 0.0031182092708983184, "phrase": "summary-based_tree_pattern_minimization"}, {"score": 0.0030604342671868836, "phrase": "efficient_summary-based_minimization_heuristics"}, {"score": 0.003003726508522467, "phrase": "relevant_path_computation"}, {"score": 0.0029206231857112305, "phrase": "memory-efficient_computation_algorithm"}, {"score": 0.0027483472371835865, "phrase": "structural_identifiers"}, {"score": 0.0027100527874262446, "phrase": "simple_path-partitioned_storage_model"}, {"score": 0.0026474076254702525, "phrase": "selective_data_access"}, {"score": 0.0026105159490849364, "phrase": "query_plans"}, {"score": 0.002514625755809045, "phrase": "twig_query_processing"}, {"score": 0.0024336086025284836, "phrase": "similar_tag-partitioned_indexing_model"}, {"score": 0.0023662411481713704, "phrase": "path-partitioned_storage_model"}, {"score": 0.002300734266971646, "phrase": "xquec_compressed_database_prototype"}, {"score": 0.0022161977759646693, "phrase": "experimental_evaluation"}, {"score": 0.002185301851004467, "phrase": "path_summary's_practical_feasibility"}, {"score": 0.0021049977753042253, "phrase": "path-partitioned_store"}], "paper_keywords": ["path summaries", " path partitioning", " XML databases"], "paper_abstract": "XML path summaries are compact structures representing all the simple parent-child paths of an XML document. Such paths have also been used in many works as a basis for partitioning the document's content in a persistent store, under the form of path indices or path tables. We revisit the notions of path summaries and path-driven storage model in the context of current-day XML databases. This context is characterized by complex queries, typically expressed in an XQuery subset, and by the presence of efficient encoding techniques such as structural node identifiers. We review a path summary's many uses for query optimization, and given them a common basis, namely relevant paths. We discuss summary-based tree pattern minimization and present some efficient summary-based minimization heuristics. We consider relevant path computation and provide a time- and memory-efficient computation algorithm. We combine the principle of path partitioning with the presence of structural identifiers in a simple path-partitioned storage model, which allows for selective data access and efficient query plans. This model improves the efficiency of twig query processing up to two orders of magnitude over the similar tag-partitioned indexing model. We have implemented the path-partitioned storage model and path summaries in the XQueC compressed database prototype [8]. We present an experimental evaluation of a path summary's practical feasibility and of tree pattern matching in a path-partitioned store.", "paper_title": "Path summaries and path partitioning in modern XML databases", "paper_id": "WOS:000252830100005"}