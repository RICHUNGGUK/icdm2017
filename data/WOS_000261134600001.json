{"auto_keywords": [{"score": 0.048679801278110287, "phrase": "sgas"}, {"score": 0.004576253356889219, "phrase": "collaborative_grid_environments"}, {"score": 0.004480307124735185, "phrase": "grid-wide_usage_limits"}, {"score": 0.0043678116213858, "phrase": "usage_guarantees"}, {"score": 0.00422218060227958, "phrase": "credit-based_allocation_model"}, {"score": 0.004186861725288123, "phrase": "grid"}, {"score": 0.004064117897000019, "phrase": "grid-wide_quota_allowances"}, {"score": 0.003945266418163835, "phrase": "grid_resources"}, {"score": 0.0036864465771943933, "phrase": "service-oriented_principles"}, {"score": 0.003639835714755229, "phrase": "strong_focus"}, {"score": 0.0034445472801689046, "phrase": "sgas_design"}, {"score": 0.0033295966773779174, "phrase": "inherent_grid_challenges"}, {"score": 0.0030847461428168614, "phrase": "customizable_system"}, {"score": 0.0030586736004285216, "phrase": "lightweight_integration"}, {"score": 0.003032820755030689, "phrase": "different_middleware"}, {"score": 0.0030071857666598193, "phrase": "scheduling_system_combinations"}, {"score": 0.0029067881142952664, "phrase": "system_design"}, {"score": 0.002870006736445581, "phrase": "flexible_allocation_model"}, {"score": 0.0028457440091791252, "phrase": "middleware_integration_experiences"}, {"score": 0.002821685815956478, "phrase": "scalability_improvements"}, {"score": 0.002785978280998868, "phrase": "distributed_virtual_banking_system"}, {"score": 0.0026815368507715, "phrase": "testhed_experiments"}, {"score": 0.002548331088496964, "phrase": "response_times"}, {"score": 0.002526780881314497, "phrase": "request_throughput"}, {"score": 0.002505412457777352, "phrase": "overall_system_scalability"}, {"score": 0.0023408288327263316, "phrase": "practical_purposes"}, {"score": 0.002311192286067765, "phrase": "quota_enforcement_overhead"}, {"score": 0.0022626276288355432, "phrase": "job_submissions"}, {"score": 0.002224510044064184, "phrase": "limiting_factor"}, {"score": 0.002196342933346204, "phrase": "job-handling_capacity"}, {"score": 0.002168531704054597, "phrase": "job_submission_software"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Grid accounting", " Grid capacity allocation", " quota enforcement", " service virtualization", " service-oriented architecture (SOA)", " Web services", " Globus Toolkit"], "paper_abstract": "The SweGrid Accounting System (SGAS) allocates capacity in collaborative Grid environments by coordinating enforcement of Grid-wide usage limits as a means to offer usage guarantees and prevent overuse. SGAS employs a credit-based allocation model where Grid capacity is granted to projects via Grid-wide quota allowances that can be spent across the Grid resources. The resources Collectively enforce these allowances in a soft, real-time manner. SGAS is built on service-oriented principles with a strong focus on interoperability, and Web services standards. This article covers the SGAS design and implementation, which, besides addressing inherent Grid challenges (scale, security, heterogeneity, decentralization), emphasizes generality and flexibility to produce a customizable system with lightweight integration into different middleware and scheduling system combinations. We focus the discussion around the system design, a flexible allocation model, middleware integration experiences and scalability improvements via a distributed virtual banking system, and finally, an extensive set of testhed experiments. The experiments evaluate the performance of SGAS in terms of response times, request throughput, overall system scalability, and its performance impact on the Globus Toolkit 4 job submission software. We conclude that, for all practical purposes, the quota enforcement overhead incurred by SGAS on job submissions is not a limiting factor for the job-handling capacity of the job submission software. Copyright (C) 2008 John Wiley, & Sons, Ltd.", "paper_title": "Scalable Grid-wide capacity allocation with the SweGrid Accounting System (SGAS)", "paper_id": "WOS:000261134600001"}