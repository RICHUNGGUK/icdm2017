{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uml_models"}, {"score": 0.03992659287798476, "phrase": "service_properties"}, {"score": 0.004724878518219719, "phrase": "service-oriented_architectures"}, {"score": 0.004422632150619634, "phrase": "software_applications"}, {"score": 0.004299064805926241, "phrase": "available_network_infrastructures"}, {"score": 0.004258644418211771, "phrase": "current_software_engineering_technologies"}, {"score": 0.004081385289516914, "phrase": "descriptive_level"}, {"score": 0.004023947242621452, "phrase": "rigorous_foundations"}, {"score": 0.003986103192038901, "phrase": "formal_analysis"}, {"score": 0.003948613642680196, "phrase": "service-oriented_models"}, {"score": 0.0038382392088338784, "phrase": "automated_verification"}, {"score": 0.0037309384824565695, "phrase": "mathematically_founded_techniques"}, {"score": 0.003626626504149897, "phrase": "software_tool"}, {"score": 0.003378385493203297, "phrase": "input_service_models"}, {"score": 0.0031769866037536045, "phrase": "process_calculus"}, {"score": 0.0031174595932694036, "phrase": "temporal_logic"}, {"score": 0.0030735451757603555, "phrase": "key_feature"}, {"score": 0.0030447248438984745, "phrase": "venus"}, {"score": 0.0029454679553901613, "phrase": "verification_functionalities"}, {"score": 0.0028360962841331634, "phrase": "formal_methods"}, {"score": 0.00266693888510356, "phrase": "natural_language_statements"}, {"score": 0.0025800641141334986, "phrase": "cows"}, {"score": 0.0025436978068459565, "phrase": "socl"}, {"score": 0.00247249708860822, "phrase": "automatically_model"}, {"score": 0.00240328454980006, "phrase": "cows_terms"}, {"score": 0.00218623706110975, "phrase": "classical_'travel_agency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Service-oriented architectures", " CASE tools", " UML", " Formal methods", " Model checking", " Process calculi"], "paper_abstract": "Service-Oriented Architectures (SOAs) provide methods and technologies for modelling, programming and deploying software applications that can run over globally available network infrastructures. Current software engineering technologies for SOAs, however, remain at the descriptive level and lack rigorous foundations enabling formal analysis of service-oriented models and software. To support automated verification of service properties by relying on mathematically founded techniques, we have developed a software tool that we called Venus (Verification ENvironment for UML models of Services). Our tool takes as an input service models specified by UML 2.0 activity diagrams according to the UML4SOA profile, while its theoretical bases are the process calculus COWS and the temporal logic SocL. A key feature of Venus is that it provides access to verification functionalities also to those users not familiar with formal methods. Indeed, the tool works by first automatically translating UML4SOA models and natural language statements of service properties into, respectively, COWS terms and SocL formulae, and then by automatically model checking the formulae over the COWS terms. In this paper we present the tool, its architecture and its enabling technologies by also illustrating the verification of a classical 'travel agency' scenario. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "An accessible verification environment for UML models of services", "paper_id": "WOS:000285226400003"}