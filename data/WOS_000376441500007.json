{"auto_keywords": [{"score": 0.026224268119079675, "phrase": "cassandra"}, {"score": 0.00481495049065317, "phrase": "distributed_recommendation_platform"}, {"score": 0.004754600386388821, "phrase": "big_data"}, {"score": 0.004665483918844599, "phrase": "vast_amount"}, {"score": 0.004191007935893067, "phrase": "critical_factor"}, {"score": 0.003959594975607075, "phrase": "scalable_architecture"}, {"score": 0.0038608730929994696, "phrase": "collaborative_filtering_recommendations"}, {"score": 0.003788444178071508, "phrase": "big_data_scenario"}, {"score": 0.0036246643358397272, "phrase": "highly_scalable_and_fault-tolerant_platform"}, {"score": 0.0034244153725855, "phrase": "single_point"}, {"score": 0.003235193484261443, "phrase": "data_replication"}, {"score": 0.003194580334752371, "phrase": "data_distribution"}, {"score": 0.00305639530600272, "phrase": "different_caching_techniques"}, {"score": 0.0028692628457408025, "phrase": "particular_technologies"}, {"score": 0.00264296841319955, "phrase": "response_times"}, {"score": 0.0024968185204913935, "phrase": "mysql_cluster"}, {"score": 0.0024038923350585962, "phrase": "latter_technology"}, {"score": 0.0021049977753042253, "phrase": "memory_caching_system"}], "paper_keywords": ["Recommender systems", " big data", " scalability", " architecture", " NoSQL", " cache"], "paper_abstract": "The vast amount of information that recommenders manage these days has reached a point where scalability has become a critical factor. In this work, we propose a scalable architecture designed for computing Collaborative Filtering recommendations in a Big Data scenario. In order to build a highly scalable and fault-tolerant platform, we employ fully distributed systems without any single point of failure. We study the use of data replication and data distribution technologies. Additionally, we consider different caching techniques. Taking into account these requirements, we propose particular technologies for each component of the platform. Next, we evaluate the response times of storing, generating and serving recommendations using MySQL Cluster and Cassandra showing that the latter technology is much more adequate for that purpose. Finally, we conduct a simulation for evaluating the impact of a memory caching system.", "paper_title": "A Distributed Recommendation Platform for Big Data", "paper_id": "WOS:000376441500007"}