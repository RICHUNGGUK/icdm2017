{"auto_keywords": [{"score": 0.0494698167146389, "phrase": "boolean_expressions"}, {"score": 0.00481495049065317, "phrase": "test_generation"}, {"score": 0.004574449773348889, "phrase": "automatic_test_generation"}, {"score": 0.004430248457624686, "phrase": "propositional_satisfiability"}, {"score": 0.004373905174000246, "phrase": "sat"}, {"score": 0.004024242000713225, "phrase": "attractive_alternative"}, {"score": 0.0039729853486821995, "phrase": "traditional_algorithmic_test_generation_methods"}, {"score": 0.0037743802306714545, "phrase": "main_advantages"}, {"score": 0.0034282732966589478, "phrase": "compact_test_suites"}, {"score": 0.0033200826267264383, "phrase": "fault-detecting_test_generation_methods"}, {"score": 0.0030938932434437178, "phrase": "greater_amount"}, {"score": 0.003015508235745547, "phrase": "classical_test_generation_algorithms"}, {"score": 0.0024714996534331668, "phrase": "propositional_transformation_rules"}, {"score": 0.0023029886389559122, "phrase": "standard_methods"}], "paper_keywords": ["Boolean expression testing", " test case generation", " SAT solvers", " SMT solvers"], "paper_abstract": "In the context of automatic test generation, the use of propositional satisfiability (SAT) and Satisfiability Modulo Theories (SMT) solvers is becoming an attractive alternative to traditional algorithmic test generation methods, especially when testing Boolean expressions. The main advantages are the capability to deal with constraints over the inputs, the generation of compact test suites and the support for fault-detecting test generation methods. However, these solvers normally require more time and a greater amount of memory than classical test generation algorithms, making their applicability not always feasible in practice. In this paper, we propose several ways to optimize the SAT/SMT-based process of test generation for Boolean expressions and we compare several solving tools and propositional transformation rules. These optimizations promise to make SAT/SMT-based techniques as efficient as standard methods for testing purposes, especially when dealing with Boolean expressions, as proved by our experiments.", "paper_title": "How to Optimize the Use of SAT and SMT Solvers for Test Generation of Boolean Expressions", "paper_id": "WOS:000365157000009"}