{"auto_keywords": [{"score": 0.0483419245374287, "phrase": "xml_data"}, {"score": 0.015719716506582538, "phrase": "unordered_xml_data"}, {"score": 0.004766683200410046, "phrase": "relational_model"}, {"score": 0.004718897469501381, "phrase": "dramatic_increase"}, {"score": 0.0045324756541157574, "phrase": "change_detection_system"}, {"score": 0.004456980650437417, "phrase": "important_changes"}, {"score": 0.004280861452668641, "phrase": "novel_approach"}, {"score": 0.004125513927068713, "phrase": "traditional_relational_database"}, {"score": 0.004002596930301241, "phrase": "existing_work"}, {"score": 0.003935892934907777, "phrase": "xml_change_detection"}, {"score": 0.0036186222999811802, "phrase": "longest_common_sequence"}, {"score": 0.0035944032285663017, "phrase": "lcs"}, {"score": 0.003558294449586273, "phrase": "minimum_edit_distances"}, {"score": 0.003522579870903474, "phrase": "basic_tree_comparison_approach"}, {"score": 0.003452218803245602, "phrase": "large_xml_files"}, {"score": 0.00333804919565419, "phrase": "equivalent_xml_dom_tree"}, {"score": 0.0032494292163722065, "phrase": "original_document"}, {"score": 0.003152531962718477, "phrase": "memory_resident"}, {"score": 0.0031208772639433145, "phrase": "comparison_process"}, {"score": 0.0030380052848799155, "phrase": "available_main_memory"}, {"score": 0.0029873281676201565, "phrase": "existing_approaches"}, {"score": 0.002878785759716458, "phrase": "relational_databases"}, {"score": 0.0028594775336675897, "phrase": "reverse_mapping"}, {"score": 0.002764856305713066, "phrase": "efficient_algorithm"}, {"score": 0.002709589081384597, "phrase": "unordered_changes"}, {"score": 0.0026643758486400663, "phrase": "xrel"}, {"score": 0.002637609579129844, "phrase": "underlying_relational_data_model"}, {"score": 0.0026111116934081284, "phrase": "structured_query_language"}, {"score": 0.0024909230668523847, "phrase": "existing_xml_change_detection_tools"}, {"score": 0.0024247382451294255, "phrase": "xandy."}, {"score": 0.0023923066544220277, "phrase": "experimental_evaluation"}, {"score": 0.0023365892290481472, "phrase": "benchmark_datasets"}, {"score": 0.002297585503415527, "phrase": "synthetic_datasets"}, {"score": 0.0021844290159501313, "phrase": "delta_quality"}, {"score": 0.0021624739899833868, "phrase": "aforementioned_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["XML", " Change detection", " Edit distance", " Tree comparison", " SQL"], "paper_abstract": "The dramatic increase in the evolution of XML data available on the Internet requires a change detection system to keep track of important changes occurring during their life time. In this paper, we introduce a novel approach of detecting changes between two versions of unordered XML data stored in a traditional relational database using approaches like XRel. Most of the existing work in the area of XML change detection is mainly focused on detecting changes between two versions of XML data by constructing their Document Object Model (DOM) trees and then comparing these two tree structures based on Longest Common Sequence (LCS) using minimum edit distances. The basic tree comparison approach is not efficient in handling large XML files due to the fact that (1) an equivalent XML DOM tree will be twice as large as the original document and (2) the entire trees of both versions have to be memory resident during the comparison process. These two issues are constrained by the available main memory. In addition, existing approaches fail to detect changes among versions of XML data stored in relational databases as reverse mapping is not loss-less. We propose an efficient algorithm (XRel_Change_SQL) for detecting unordered changes between two XML data files stored in XRel as the underlying relational data model, using Structured Query Language (SQL). We compare the efficiency and quality of our change detection algorithm with existing XML change detection tools like X-Diff, DeltaXML and XANDY. We provide an experimental evaluation of the results obtained from the benchmark datasets as well as some synthetic datasets to show that our approach is highly scalable, and results in a much better efficiency and delta quality than the aforementioned approaches and tools. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A change detection system for unordered XML data using a relational model", "paper_id": "WOS:000300072600012"}