{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "time-critical_rendering"}, {"score": 0.004335000368745273, "phrase": "demanding_resource_requirement"}, {"score": 0.004256533389293113, "phrase": "previous_research"}, {"score": 0.004103817210338686, "phrase": "losslessly_compressed_irregular-grid_dataset"}, {"score": 0.0039928721865882, "phrase": "one-pass_computation"}, {"score": 0.0036944890904337833, "phrase": "losslessly_compressed_irregular_volume_dataset"}, {"score": 0.0031483163191080425, "phrase": "rendering_pipeline"}, {"score": 0.003091262582401731, "phrase": "multi-resolution_representation"}, {"score": 0.0025627194819793347, "phrase": "existing_tetrahedral_mesh_simplification_algorithm"}, {"score": 0.0024481198073210567, "phrase": "performance_measurements"}, {"score": 0.0024147474002390763, "phrase": "prototype_system"}, {"score": 0.002327956449278255, "phrase": "performance_overhead"}, {"score": 0.002244277924422011, "phrase": "multi-resolution_pre-simplification"}, {"score": 0.0022238315004700607, "phrase": "end-to-end_rendering_delay"}, {"score": 0.0021735249249471614, "phrase": "approximately_linear_fashion"}, {"score": 0.0021243539405631866, "phrase": "simplification_ratio"}], "paper_keywords": ["irregular grids", " tetrahedral mesh compression", " volume simplification", " volume rendering", " time-critical rendering"], "paper_abstract": "Very large irregular-grid volume datasets are typically represented as tetrahedral meshes and require substantial disk I/O and rendering computation. One effective way to reduce this demanding resource requirement is compression. Previous research showed how rendering and decompression of a losslessly compressed irregular-grid dataset can be integrated into a one-pass computation. This work advances the state of the art one step further by showing that a losslessly compressed irregular volume dataset can be simplified while it is being decompressed and that simplification, decompression, and rendering can again be integrated into a pipeline that requires only a single pass through the datasets. In particular, this rendering pipeline can exploit a multi-resolution representation to maintain interactivity on a given hardware/software platform by automatically adjusting the amount of rendering computation that could be afforded, or performing so called time-critical rendering. As a proof of the feasibility of our proposed framework, we modify an existing tetrahedral mesh simplification algorithm and integrate it with our previous volume decompression and rendering pipeline. Performance measurements on this prototype system show that simplification only adds less than 5% of performance overhead on an average; furthermore, with multi-resolution pre-simplification the end-to-end rendering delay indeed decreases in an approximately linear fashion with respect to the simplification ratio, thus a time-critical rendering of large tetrahedral mesh could be achieved.", "paper_title": "Time-critical rendering of tetrahedral meshes", "paper_id": "WOS:000249934900010"}