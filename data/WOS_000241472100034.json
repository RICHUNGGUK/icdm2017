{"auto_keywords": [{"score": 0.04383441248529014, "phrase": "rnn"}, {"score": 0.00481495049065317, "phrase": "random_neural_networks"}, {"score": 0.004736820055728928, "phrase": "reinforcement_learning"}, {"score": 0.0044005599565517875, "phrase": "hardware_implementation"}, {"score": 0.004054746081529349, "phrase": "gelenbe"}, {"score": 0.003924121879214595, "phrase": "spiked_neural_network_model"}, {"score": 0.003386301445203068, "phrase": "learning_algorithm"}, {"score": 0.0031714880645482496, "phrase": "implementation_details"}, {"score": 0.002994701080666466, "phrase": "reinforcement_learning_algorithm"}, {"score": 0.0027817658627604653, "phrase": "circuit_implementation"}, {"score": 0.0026700637696697414, "phrase": "building_block"}, {"score": 0.002605201547405916, "phrase": "recently_proposed_novel_network_routing_protocol"}, {"score": 0.0024199012885266825, "phrase": "cpn"}, {"score": 0.002322689143237591, "phrase": "routing_table"}, {"score": 0.002157433262687853, "phrase": "reinforcement_algorithm"}, {"score": 0.0021049977753042253, "phrase": "probing_packets"}], "paper_keywords": [""], "paper_abstract": "In this paper, we present a hardware implementation of a random neural network (RNN) model. The RNN, introduced by Gelenbe, is a spiked neural network model that possesses several mathematical properties such as the existence and uniqueness of the solution, and convergence of the learning algorithm. In particular, we discuss the implementation details for an RNN which uses a reinforcement learning algorithm. We also illustrate an example where this circuit implementation is used as a building block in a recently proposed novel network routing protocol called cognitive packet networks (CPN). CPN does not employ a routing table instead it relies on the RNN with a reinforcement algorithm to route probing packets.", "paper_title": "Hardware implementation of random neural networks with reinforcement learning", "paper_id": "WOS:000241472100034"}