{"auto_keywords": [{"score": 0.049655608595442415, "phrase": "sql"}, {"score": 0.04923400633348854, "phrase": "xql"}, {"score": 0.04259752443818381, "phrase": "xml_documents"}, {"score": 0.035270516590341604, "phrase": "rdb"}, {"score": 0.0300629906909116, "phrase": "xmldb."}, {"score": 0.00481495049065317, "phrase": "-based_query_translation"}, {"score": 0.004688321299229397, "phrase": "location_counter"}, {"score": 0.004405596416783185, "phrase": "extensible_markup_language"}, {"score": 0.004103212598803194, "phrase": "relational_data"}, {"score": 0.0040309035566691645, "phrase": "vice_versa"}, {"score": 0.0038900709793274484, "phrase": "integrated_method"}, {"score": 0.003770869401884267, "phrase": "unifying_technology"}, {"score": 0.0034807976670686628, "phrase": "database_gateways"}, {"score": 0.003374094774912924, "phrase": "relational_database"}, {"score": 0.0030595112110658675, "phrase": "query_language"}, {"score": 0.002811464848641341, "phrase": "translation_process"}, {"score": 0.0027865506182608263, "phrase": "query_graph_translation"}, {"score": 0.0026652435674846095, "phrase": "stepwise_procedure"}, {"score": 0.002641621667026613, "phrase": "query_translation"}, {"score": 0.0024930878032164757, "phrase": "xml_interface"}, {"score": 0.002405853977978678, "phrase": "relational_interface"}, {"score": 0.0023633857274905977, "phrase": "location_counter_sequence_number"}, {"score": 0.002200861826643147, "phrase": "corresponding_positioning_element_instances"}, {"score": 0.0021049977753042253, "phrase": "xmldb"}], "paper_keywords": [""], "paper_abstract": "The need for interoperation and data exchange through the Internet has made Extensible Markup Language (XML) a dominant standard language. Much work has already been done on translating relational data into XML documents and vice versa. However, there is not an integrated method to combine them together as a unifying technology for database interoperability on the Internet. Users may not be familiar with various query language syntax. We propose database gateways built on the top of a Relational Database (RDB) and an XML Database (XMLDB). Users can access both databases at the same time through the query language SQL or XQL (an XML query language) to access data stored in either RDB or XMLDB. The translation process adopts query graph translation between a RDB and an XMLDB. Thus, a stepwise procedure of query translation is devised and amenable to implementation. The procedure also provides an XML interface to a RDB as well as a relational interface to XMLDB. A location counter sequence number is used to position tuples in a RDB for subsequent transforming the tuples into the corresponding positioning element instances in the XML documents. As a result, both XMLDB and RDB can co-exist, and be accessible by the users.", "paper_title": "Positioning-based query translation between SQL and XQL with location counter", "paper_id": "WOS:000235659100002"}