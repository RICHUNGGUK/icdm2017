{"auto_keywords": [{"score": 0.025074635190281257, "phrase": "dedal"}, {"score": 0.00481495049065317, "phrase": "component-based_development"}, {"score": 0.004692227830462433, "phrase": "software_development_process"}, {"score": 0.004533427352547707, "phrase": "component_reuse"}, {"score": 0.004305203085016233, "phrase": "desired_component"}, {"score": 0.003916098498242888, "phrase": "existing_component"}, {"score": 0.0037834649508375544, "phrase": "required_functionalities"}, {"score": 0.003592859432554987, "phrase": "system_personalization"}, {"score": 0.002703327151461985, "phrase": "architecture_description_language"}, {"score": 0.002416589459425828, "phrase": "three-level_adl"}, {"score": 0.002255431275670053, "phrase": "explicit_and_separate_definitions"}, {"score": 0.0021601997088758957, "phrase": "component_classes"}, {"score": 0.0021049977753042253, "phrase": "component_instances"}], "paper_keywords": ["Design", " Languages", " Component-based development", " Software architecture", " Architecture description language"], "paper_abstract": "Component-based development promotes a software development process that focuses on component reuse. How to describe a desired component before searching in the repository? How to find an existing component that fulfills the required functionalities? How to capture the system personalization based on its constitutive components' customization? To answer these questions, this paper claims that components should be described using three different forms at three development stages: architecture specification, configuration and assembly. However, no architecture description language proposes such a detailed description for components that supports such a three step component-based development. This paper proposes a three-level ADL, named Dedal, that enables the explicit and separate definitions of component roles, component classes, and component instances.", "paper_title": "A Three-level Component Model in Component Based Software Development", "paper_id": "WOS:000318631100008"}