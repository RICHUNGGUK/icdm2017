{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "self-suspending_process_sets"}, {"score": 0.004450568197899267, "phrase": "excellent_protocols"}, {"score": 0.004363846362238565, "phrase": "resource_synchronization"}, {"score": 0.003445591238183763, "phrase": "multiple_priority_inversions"}, {"score": 0.0032800186243040663, "phrase": "research_results"}, {"score": 0.003091767402370757, "phrase": "priority_ceilings"}, {"score": 0.002914288956035066, "phrase": "different_priority-inversion_requirements"}, {"score": 0.0026933542552712033, "phrase": "practical_considerations"}, {"score": 0.002146926767291475, "phrase": "proposed_scheduling_protocols"}, {"score": 0.0021049977753042253, "phrase": "deadlock_prevention"}], "paper_keywords": ["Real-time systems", " Resource synchronization protocol", " Priority ceiling", " Deadlock prevention"], "paper_abstract": "While several of researchers have proposed excellent protocols on resource synchronization, little work has been done for processes that might suspend themselves for I/O access, especially when they tend to be more tolerant to multiple priority inversions. This paper presents research results extended from the concept of priority ceilings with the objective of satisfying different priority-inversion requirements for different processes. We aim at practical considerations in which processes might voluntarily give up CPU and be willing to receive more blocking time than those in more traditional approaches. Extensions on the proposed scheduling protocols for deadlock prevention are also considered.", "paper_title": "A real-time configurable synchronization protocol for self-suspending process sets", "paper_id": "WOS:000268234800002"}