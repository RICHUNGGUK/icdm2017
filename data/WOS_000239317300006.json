{"auto_keywords": [{"score": 0.046435727262902265, "phrase": "arithmetic_intensity"}, {"score": 0.00481495049065317, "phrase": "vertex-transformation"}, {"score": 0.004727995968069753, "phrase": "recent_trends"}, {"score": 0.004670896353428476, "phrase": "parallel_computer_architecture"}, {"score": 0.0043161190928529755, "phrase": "bandwidth_ratio"}, {"score": 0.004238134740341528, "phrase": "greater_performance"}, {"score": 0.004186926251483987, "phrase": "time-critical_applications"}, {"score": 0.0038923605771735838, "phrase": "stream_programming_abstraction"}, {"score": 0.003845313870879042, "phrase": "graphics_processors"}, {"score": 0.003640516896245813, "phrase": "parallel_algorithm_design_methods"}, {"score": 0.0035967769960291948, "phrase": "gpu"}, {"score": 0.0033029038236817372, "phrase": "multiple_data_streams"}, {"score": 0.00316518932828897, "phrase": "input_geometry_bandwidth_bottleneck"}, {"score": 0.0029783256772952073, "phrase": "vertex_and_transformation_streams"}, {"score": 0.0029244418026475832, "phrase": "large_point_datasets"}, {"score": 0.002685558057339722, "phrase": "source_vertices"}, {"score": 0.0026530590435527527, "phrase": "transformation_streams"}, {"score": 0.002406799309495983, "phrase": "cross-power_spectrum"}, {"score": 0.002320449502337321, "phrase": "fourier_domain"}, {"score": 0.00218334762335187, "phrase": "view-dependent_point_rendering_system"}, {"score": 0.0021049977753042253, "phrase": "input_geometry_bandwidth_requirements"}], "paper_keywords": ["stream programming", " arithmetic intensity", " geometry instancing", " transformation encoding", " streaming algorithms"], "paper_abstract": "Recent trends in parallel computer architecture strongly suggest the need to improve the arithmetic intensity (the compute to bandwidth ratio) for greater performance in time-critical applications, such as interactive 3D graphics. At the same time, advances in stream programming abstraction for graphics processors (GPUs) have enabled us to use parallel algorithm design methods for GPU programming. Inspired by these developments, this paper explores the interactions between multiple data streams to improve arithmetic intensity and address the input geometry bandwidth bottleneck for interactive 3D graphics applications. We introduce the idea of creating vertex and transformation streams that represent large point datasets via their interaction. We discuss how to factor such point datasets into a set of source vertices and transformation streams by identifying the most common translations amongst vertices. We accomplish this by identifying peaks in the cross-power spectrum of the dataset in the Fourier domain. We validate our approach by integrating it with a view-dependent point rendering system and show significant improvements in input geometry bandwidth requirements as well as rendering frame rates. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Vertex-transformation streams", "paper_id": "WOS:000239317300006"}