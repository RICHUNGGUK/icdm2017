{"auto_keywords": [{"score": 0.043891862951523725, "phrase": "c_compiler"}, {"score": 0.0340699507525149, "phrase": "simulator_generation"}, {"score": 0.00481495049065317, "phrase": "adl_processor_descriptions"}, {"score": 0.004752221133109136, "phrase": "c_compiler_retargeting"}, {"score": 0.004568871736067739, "phrase": "architecture_description_language"}, {"score": 0.004306968571854912, "phrase": "software_tools"}, {"score": 0.004007083686875716, "phrase": "instruction-set_simulator"}, {"score": 0.003400640983719424, "phrase": "c_compilers"}, {"score": 0.003356275163203055, "phrase": "high-level_architecture_information"}, {"score": 0.0032908057622663732, "phrase": "low-level_details"}, {"score": 0.0030414140732789186, "phrase": "different_aspects"}, {"score": 0.0027379609683723938, "phrase": "modeling_style"}, {"score": 0.0025807396931129926, "phrase": "low-level_architectural_information"}, {"score": 0.0022928018832993387, "phrase": "modeling_flexibility"}, {"score": 0.0022480304016499605, "phrase": "proposed_approach"}], "paper_keywords": ["architecture description language", " processor model", " C compiler retargeting", " embedded processor design", " electronic system level"], "paper_abstract": "Today's Application Specific Instruction-set Processor (ASIP) design methodology often employs centralized Architecture Description Language (ADL) processor models, from which software tools, such as C compiler, assembler, linker, and instruction-set simulator, can be automatically generated. Among these tools, the C compiler is becoming more and more important. However, the generation of C compilers requires high-level architecture information rather than low-level details needed by simulator generation. This makes it particularly difficult to include different aspects of the target architectureinto one single model, and meanwhile keeping consistency. This paper presents a modeling style, which is able to capture high- and low-level architectural information at the same time and make it possible to drive both the C compiler and the simulator generation without sacrificing the modeling flexibility. The proposed approach has been successfully applied to model a number of contemporary, real-world processor architectures.", "paper_title": "Modeling instruction semantics in ADL processor descriptions for C compiler retargeting", "paper_id": "WOS:000237975100010"}