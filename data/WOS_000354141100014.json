{"auto_keywords": [{"score": 0.03678902168567898, "phrase": "parallel_algorithm"}, {"score": 0.00481495049065317, "phrase": "off-lattice_individual-based_model"}, {"score": 0.004676575291629554, "phrase": "computational_models"}, {"score": 0.004631335513513859, "phrase": "multicellular_populations"}, {"score": 0.004586531354697466, "phrase": "ever_more_detailed_descriptions"}, {"score": 0.004542158659382197, "phrase": "biophysical_and_biochemical_processes"}, {"score": 0.004476399615305783, "phrase": "computational_cost"}, {"score": 0.004305639197085793, "phrase": "novel_scientific_hypotheses"}, {"score": 0.004263972370406983, "phrase": "testable_predictions"}, {"score": 0.004161553532799662, "phrase": "microchip_technology"}, {"score": 0.0040222701316738295, "phrase": "individual_processors"}, {"score": 0.003983334573043943, "phrase": "parallel_computing"}, {"score": 0.003925633992809873, "phrase": "immediate_increase"}, {"score": 0.0038876302202924644, "phrase": "available_processing_power"}, {"score": 0.0038127186374325582, "phrase": "full_use"}, {"score": 0.003775803846431323, "phrase": "parallel_computing_technology"}, {"score": 0.0036493838225192883, "phrase": "specialised_algorithms"}, {"score": 0.003409057326528229, "phrase": "off-lattice_individual-based_models"}, {"score": 0.0032629585038738856, "phrase": "spatial_domain"}, {"score": 0.00323134923196813, "phrase": "computing_processes"}, {"score": 0.0031845067058084583, "phrase": "communication_routines"}, {"score": 0.003048001809453513, "phrase": "multiple_processors"}, {"score": 0.002861062731782219, "phrase": "deterministic_simulation"}, {"score": 0.0028058765785670546, "phrase": "pm-existing_serial_implementation"}, {"score": 0.002711842889248926, "phrase": "computation_time"}, {"score": 0.002685558057339722, "phrase": "memory_use"}, {"score": 0.002545468362709126, "phrase": "cell_population"}, {"score": 0.0025207920578878894, "phrase": "fixed_size"}, {"score": 0.00247215300812495, "phrase": "approximate_linear_scaling"}, {"score": 0.002436289099444074, "phrase": "speed-up_and_memory_consumption"}, {"score": 0.0023546121947302877, "phrase": "dynamic_load_balancing"}, {"score": 0.0022536005664642294, "phrase": "non-regular_spatial_distributions"}, {"score": 0.0021674482571326283, "phrase": "growing_population"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Computational biology", " Individual-based models", " Off-lattice", " Parallelisation", " Scaling analysis"], "paper_abstract": "As computational models of multicellular populations include ever more detailed descriptions of biophysical and biochemical processes, the computational cost of simulating such models limits their ability to generate novel scientific hypotheses and testable predictions. While developments in microchip technology continue to increase the power of individual processors, parallel computing offers an immediate increase in available processing power. To make full use of parallel computing technology, it is necessary to develop specialised algorithms. To this end, we present a parallel algorithm for a class of off-lattice individual-based models of multicellular populations. The algorithm divides the spatial domain between computing processes and comprises communication routines that ensure the model is correctly simulated on multiple processors. The parallel algorithm is shown to accurately reproduce the results of a deterministic simulation performed using a pm-existing serial implementation. We test the scaling of computation time, memory use and load balancing as more processes are used to simulate a cell population of fixed size. We find approximate linear scaling of both speed-up and memory consumption on up to 32 processor cores. Dynamic load balancing is shown to provide speed-up for non-regular spatial distributions of cells in the case of a growing population. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A parallel implementation of an off-lattice individual-based model of multicellular populations", "paper_id": "WOS:000354141100014"}