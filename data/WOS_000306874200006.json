{"auto_keywords": [{"score": 0.04950097558699653, "phrase": "explicit_feedback"}, {"score": 0.035401702725616935, "phrase": "downstream_server"}, {"score": 0.013606756916570652, "phrase": "sip_servers"}, {"score": 0.00481495049065317, "phrase": "sip_networks"}, {"score": 0.004605147081797856, "phrase": "session_initiation_protocol"}, {"score": 0.004568008177928223, "phrase": "sip"}, {"score": 0.004298666679374568, "phrase": "next_generation_telecommunications_networks"}, {"score": 0.004246729915110547, "phrase": "core_signaling_protocol"}, {"score": 0.004212453011596424, "phrase": "sip_operation"}, {"score": 0.004061584718427419, "phrase": "sip_messages"}, {"score": 0.003822003373331997, "phrase": "overload_periods"}, {"score": 0.0036405185202745952, "phrase": "sip."}, {"score": 0.0035386420095120706, "phrase": "distributed_and_end-to-end_adaptive_window"}, {"score": 0.003329804436286295, "phrase": "upstream_servers"}, {"score": 0.0033029038236817372, "phrase": "call_establishment_delay"}, {"score": 0.0030953529970646626, "phrase": "proposed_algorithm"}, {"score": 0.003057910095857785, "phrase": "additional_complexity"}, {"score": 0.0027741761880779535, "phrase": "higher_throughput"}, {"score": 0.002740607717745287, "phrase": "commonly_used_overload_control_algorithm"}, {"score": 0.002674681176379472, "phrase": "different_upstream_servers"}, {"score": 0.0026530590435527527, "phrase": "different_network_latencies"}, {"score": 0.0024862418814045723, "phrase": "sip_overload_control"}, {"score": 0.0023298892270500983, "phrase": "network_latency"}, {"score": 0.0023016843709107297, "phrase": "proposed_overload_control_algorithm"}, {"score": 0.002246292543825748, "phrase": "opensips_open_source"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["SIP", " Overload control", " Window based", " Fairness"], "paper_abstract": "The Session Initiation Protocol (SIP) has gained momentum and is being widely used both in the Internet and Next Generation Telecommunications networks as the core signaling protocol. SIP operation relies on SIP servers which are responsible for routing SIP messages. It has been shown that the performance of SIP servers is largely degraded during overload periods due to the built in message re-transmission mechanism of SIP. In this paper we propose a distributed and end-to-end adaptive window based overload control algorithm, which does not use explicit feedback from the downstream server. Upstream servers use call establishment delay as a measure of the amount of load on the downstream server. Therefore, the proposed algorithm imposes no additional complexity or processing on the downstream server which is overloaded, making it a very robust approach. Using simulations we show that our proposed method achieves higher throughput than a commonly used overload control algorithm and is also fair among different upstream servers under different network latencies. To the best of our knowledge, fairness under different network latencies has not been previously addressed in the context of SIP overload control. In addition, compared with approaches using explicit feedback, our scheme is less sensitive to network latency. The proposed overload control algorithm is also implemented in the OpenSIPS open source SIP proxy and shown to perform as expected under various conditions. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Overload control in SIP networks using no explicit feedback: A window based approach", "paper_id": "WOS:000306874200006"}