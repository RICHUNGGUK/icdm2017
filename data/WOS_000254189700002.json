{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "automatic_functions"}, {"score": 0.004712726613162057, "phrase": "real_functions"}, {"score": 0.004055176557424983, "phrase": "digital_images"}, {"score": 0.0038846843242954935, "phrase": "different_well-known_types"}, {"score": 0.003378385493203297, "phrase": "finite_automata"}, {"score": 0.00266693888510356, "phrase": "different_types"}, {"score": 0.0023950275815082297, "phrase": "seldomly-used_full_cartesian_product"}, {"score": 0.0021507795710951384, "phrase": "functional_composition"}, {"score": 0.0021049977753042253, "phrase": "simple_examples"}], "paper_keywords": ["automatic functions", " weighted finite automata", " full Cartesian product"], "paper_abstract": "Real functions on the domain [0, 1)(n) - often used to describe digital images - allow for different well-known types of binary operations. In this note, we recapitulate how weighted finite automata can be used in order to represent those functions and how certain binary operations are reflected in the theory of these automata. Different types of products of automata are employed, including the seldomly-used full Cartesian product. We show, however, the infeasibility of functional composition; simple examples yield that the class of automatic functions (i.e., functions computable by automata) is not closed under this operation.", "paper_title": "Binary operations on automatic functions", "paper_id": "WOS:000254189700002"}