{"auto_keywords": [{"score": 0.03567043071500334, "phrase": "formal_model"}, {"score": 0.00481495049065317, "phrase": "service-oriented_software_systems"}, {"score": 0.004695183699894267, "phrase": "application_domains"}, {"score": 0.0044870272550540415, "phrase": "rather_structural_entities"}, {"score": 0.004331501320993783, "phrase": "basic_building_block"}, {"score": 0.004288059466938456, "phrase": "system_composition"}, {"score": 0.004016072233242585, "phrase": "specific_tasks"}, {"score": 0.003799397093447221, "phrase": "service_orientation"}, {"score": 0.003704797078215222, "phrase": "focus_theory"}, {"score": 0.0036676174658755683, "phrase": "distributed_systems"}, {"score": 0.0036125444752575, "phrase": "broy"}, {"score": 0.003300702689535089, "phrase": "focus"}, {"score": 0.0032006150973842846, "phrase": "interacting_components"}, {"score": 0.003105168935158648, "phrase": "total_behavior"}, {"score": 0.0028498718992429825, "phrase": "partial_behavior"}, {"score": 0.002709589081384597, "phrase": "foundational_specification_techniques"}, {"score": 0.0026688629249775925, "phrase": "methodological_development_steps"}, {"score": 0.002524688179363081, "phrase": "software_architectures"}, {"score": 0.0023523750536537102, "phrase": "theoretical_foundation"}, {"score": 0.002137137933768807, "phrase": "running_example"}, {"score": 0.0021049977753042253, "phrase": "automotive_domain"}], "paper_keywords": ["design", " languages", " reliability", " theory", " components", " services", " service engineering", " assumption/commitment specifications", " software architecture"], "paper_abstract": "Service-oriented software systems rapidly gain importance across application domains: They emphasize functionality (services), rather structural entities (components), as the basic building block for system composition. More specifically, services coordinate the interplay of components to accomplish specific tasks. In this article, we establish a foundation of service orientation: Based on the FOCUS theory of distributed systems (see Broy and Stolen [2001]), we introduce a theory and formal model of services. In FOCUS, systems are composed of interacting components. A component is a total behavior. We introduce a formal model of services where, in contrast, a service is a partial behavior. For services and components, we work out foundational specification techniques and outline methodological development steps. We show how services can be structured and how software architectures can be composed of services and components. Although our emphasis is on a theoretical foundation of the notion of services, we demonstrate utility of the concepts we introduce by means of a running example from the automotive domain.", "paper_title": "A formal model of services", "paper_id": "WOS:000244863600005"}