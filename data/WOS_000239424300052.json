{"auto_keywords": [{"score": 0.03392120331127421, "phrase": "adaptive"}, {"score": 0.00481495049065317, "phrase": "adaptive_services"}, {"score": 0.004692227830462433, "phrase": "common_trend"}, {"score": 0.004612147352416241, "phrase": "modern_applications"}, {"score": 0.003816197777388722, "phrase": "open_interaction_frameworks"}, {"score": 0.003382547312072468, "phrase": "reconfigurable_application"}, {"score": 0.003130077012135034, "phrase": "ubiquitious_computing"}, {"score": 0.0025892330566358503, "phrase": "full_account"}, {"score": 0.0025230952890994236, "phrase": "expressive_quality"}, {"score": 0.002236055625099805, "phrase": "context-informed_adaptive_applications"}, {"score": 0.0021049977753042253, "phrase": "rich_content"}], "paper_keywords": [""], "paper_abstract": "A common trend in modern applications is the move towards more mobile, adaptive, customisable software. The evolution of software from static, invariant tools for narrow portions of a task to adaptive, open interaction frameworks is embodied in the use of a variety of technologies for creating a reconfigurable application. Perhaps the two most important techniques are Adaptive architectures and Ubiquitious Computing. However, many techniques employed merging these two technologies to form the vision of a truly ubiquitous, adaptive environment have so far failed to take full account of the expressive quality of both context and adaptivity. This paper presents a new, semantic interopration-based approach to creating context-informed adaptive applications that make maximum use of the rich content that can be found in both technologies.", "paper_title": "Informing context to support adaptive services", "paper_id": "WOS:000239424300052"}