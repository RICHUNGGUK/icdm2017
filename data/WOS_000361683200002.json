{"auto_keywords": [{"score": 0.029628979287270645, "phrase": "qms"}, {"score": 0.015719695724103148, "phrase": "quantitative_masking_strength"}, {"score": 0.010955375860946743, "phrase": "countermeasure_implementation"}, {"score": 0.0047113960612140335, "phrase": "power_side-channel_resistance"}, {"score": 0.0045108906244892165, "phrase": "embedded_space"}, {"score": 0.004389912080394437, "phrase": "power_analysis-based_side-channel_attacks"}, {"score": 0.004203030435498069, "phrase": "commonly_used_technique"}, {"score": 0.004112582094962078, "phrase": "statistical_dependency"}, {"score": 0.004046020290832207, "phrase": "sensitive_data"}, {"score": 0.003980531478122155, "phrase": "side-channel_information"}, {"score": 0.0034742854447532678, "phrase": "formal_methods"}, {"score": 0.003399466007862412, "phrase": "actual_strength"}, {"score": 0.003308195943172624, "phrase": "security_design_errors"}, {"score": 0.0031845067058084583, "phrase": "side-channel_leakage"}, {"score": 0.0030157628075954588, "phrase": "better_solution"}, {"score": 0.002966900048034132, "phrase": "static_analysis"}, {"score": 0.002934764205541183, "phrase": "c_source_code"}, {"score": 0.002855934865505357, "phrase": "new_notion"}, {"score": 0.0026898636962522505, "phrase": "information_leakage"}, {"score": 0.002631892325004253, "phrase": "side_channels"}, {"score": 0.00251966141432339, "phrase": "sensitive_variables"}, {"score": 0.002386062690026682, "phrase": "source_code"}, {"score": 0.0022472527731744974, "phrase": "real_devices"}, {"score": 0.0021396960731214203, "phrase": "side-channel_resistance"}, {"score": 0.0021049977753042253, "phrase": "software_implementation"}], "paper_keywords": ["Countermeasure", " differential power analysis (DPA)", " quantitative masking strength (QMS)", " satisfiability modulo theory (SMT) solver", " security", " verification"], "paper_abstract": "Many commercial systems in the embedded space have shown weakness against power analysis-based side-channel attacks in recent years. Random masking is a commonly used technique for removing the statistical dependency between the sensitive data and the side-channel information. However, the process of designing masking countermeasures is both labor intensive and error prone. Furthermore, there is a lack of formal methods for quantifying the actual strength of a countermeasure implementation. Security design errors may therefore go undetected until the side-channel leakage is physically measured and evaluated. We show a better solution based on static analysis of C source code. We introduce the new notion of quantitative masking strength (QMS) to estimate the amount of information leakage from software through side channels. Once the user has identified the sensitive variables, the QMS can be automatically computed from the source code of a countermeasure implementation. Our experiments, based on measurement on real devices, show that the QMS accurately reflects the side-channel resistance of the software implementation.", "paper_title": "Quantitative Masking Strength: Quantifying the Power Side-Channel Resistance of Software Code", "paper_id": "WOS:000361683200002"}