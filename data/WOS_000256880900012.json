{"auto_keywords": [{"score": 0.04082237978577469, "phrase": "integer_operands"}, {"score": 0.030792162001355854, "phrase": "stochastic_bit-width_estimation"}, {"score": 0.004815631067839044, "phrase": "stochastic"}, {"score": 0.004691465925553365, "phrase": "compact_and_low-power_custom_processors"}, {"score": 0.004407813106104401, "phrase": "custom_hardware"}, {"score": 0.004339609346924681, "phrase": "embedded_systems"}, {"score": 0.004206338218873218, "phrase": "power_consumption"}, {"score": 0.004162826481635768, "phrase": "application-specific_functional_units"}, {"score": 0.004055998173160551, "phrase": "memory_blocks"}, {"score": 0.003771185758226876, "phrase": "actual_bit-width"}, {"score": 0.003598705020845104, "phrase": "integer_variable"}, {"score": 0.0033285306462537884, "phrase": "built-in_c_data_types"}, {"score": 0.0031597433845085092, "phrase": "built-in_data_type_sizes"}, {"score": 0.002847339938387273, "phrase": "simulation-based_probabilistic_approach"}, {"score": 0.002759769970554556, "phrase": "integer_variables"}, {"score": 0.0027311809666295565, "phrase": "extreme_value_theory"}, {"score": 0.0026888503045081505, "phrase": "estimation_technique"}, {"score": 0.002499798127196099, "phrase": "stochastic_bit-width_estimation_technique"}, {"score": 0.002461044825190643, "phrase": "integer_bit-widths"}, {"score": 0.00234834406550549, "phrase": "compile-time_integer_bit-width_analysis_techniques"}, {"score": 0.0022642601698943687, "phrase": "custom_hardware_area"}, {"score": 0.0022175679453857473, "phrase": "logic_power_consumption"}, {"score": 0.0021049977753042253, "phrase": "fpga_chip"}], "paper_keywords": ["design and experimentation", " bit-width analysis", " custom hardware", " extreme value theory", " FPGA", " statistical estimation"], "paper_abstract": "There is an increasing trend toward compiling from C to custom hardware for designing embedded systems in which the area and power consumption of application-specific functional units, registers, and memory blocks are heavily dependent on the bit-widths of integer operands used in computations. The actual bit-width required to store the values assigned to an integer variable during the execution of a program will not, in general, match the built-in C data types. Thus, precious area is wasted if the built-in data type sizes are used to declare the size of integer operands. In this paper, we introduce stochastic bit-width estimation that follows a simulation-based probabilistic approach to estimate the bit-widths of integer variables using extreme value theory. The estimation technique is also empirically compared to two compile-time integer bit-width analysis techniques. Our experimental results show that the stochastic bit-width estimation technique dramatically reduces integer bit-widths and, therefore, enables more compact and power-efficient custom hardware designs than the compile-time integer bit-width analysis techniques. Up to 37% reduction in custom hardware area and 30% reduction in logic power consumption using stochastic bit-width estimation can be attained over ten integer applications implemented on an FPGA chip.", "paper_title": "A Stochastic bitwidth estimation technique for compact and low-power custom processors", "paper_id": "WOS:000256880900012"}