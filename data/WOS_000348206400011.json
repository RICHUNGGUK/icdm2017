{"auto_keywords": [{"score": 0.049198528177459636, "phrase": "solid_grid_graphs"}, {"score": 0.047905977291456965, "phrase": "bisection_problem"}, {"score": 0.027948039816812847, "phrase": "time_algorithm"}, {"score": 0.00481495049065317, "phrase": "bisection_width"}, {"score": 0.003446353878654566, "phrase": "grid_graph"}, {"score": 0.0033515736929172644, "phrase": "finite_connected_subgraph"}, {"score": 0.0032593915869553714, "phrase": "infinite_two-dimensional_grid"}, {"score": 0.002375714262344562, "phrase": "novel_approach"}, {"score": 0.0023103100997344072, "phrase": "structural_properties"}, {"score": 0.002267708463966758, "phrase": "optimal_cuts"}, {"score": 0.0022052711621931144, "phrase": "dynamic_program"}], "paper_keywords": ["Bisection", " Solid grid graphs", " Planar graphs"], "paper_abstract": "The bisection problem asks for a partition of the vertices of a graph into two sets of size at most , so that the number of edges connecting the sets is minimised. A grid graph is a finite connected subgraph of the infinite two-dimensional grid. It is called solid if it has no holes. Papadimitriou and Sideri (Theory Comput Syst 29:97-110, 1996) gave an time algorithm to solve the bisection problem on solid grid graphs. We propose a novel approach that exploits structural properties of optimal cuts within a dynamic program. We show that our new technique leads to an time algorithm.", "paper_title": "An O(n(4)) Time Algorithm to Compute the Bisection Width of Solid Grid Graphs", "paper_id": "WOS:000348206400011"}