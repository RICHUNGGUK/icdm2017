{"auto_keywords": [{"score": 0.04916809664432026, "phrase": "tree_simplification"}, {"score": 0.04484681558552234, "phrase": "merging_process"}, {"score": 0.03958442446658402, "phrase": "change_histories"}, {"score": 0.00481495049065317, "phrase": "region_evolution"}, {"score": 0.0046781613377273774, "phrase": "pyramid_image_representations"}, {"score": 0.004633429997452688, "phrase": "tree_structures"}, {"score": 0.004523455475492876, "phrase": "region-based_image_analysis"}, {"score": 0.0042495320879288615, "phrase": "small_details"}, {"score": 0.004168618849008299, "phrase": "bottom_levels"}, {"score": 0.0038415095105632157, "phrase": "tree_structure"}, {"score": 0.003714368305523811, "phrase": "image_property"}, {"score": 0.003608732492631878, "phrase": "root_node"}, {"score": 0.003422781254306241, "phrase": "evolvement_functions"}, {"score": 0.003293570937654716, "phrase": "knee_function"}, {"score": 0.003262035294895737, "phrase": "knee_values"}, {"score": 0.0030058503645435455, "phrase": "novel_framework"}, {"score": 0.002977061391551628, "phrase": "binary_partition_tree_analysis"}, {"score": 0.002837188425640173, "phrase": "evolvement_function"}, {"score": 0.0027830917623582903, "phrase": "upward_path"}, {"score": 0.002703869368554536, "phrase": "tree_node"}, {"score": 0.0026523079380037706, "phrase": "first_reluctant_merge"}, {"score": 0.0025892330566358503, "phrase": "pruning_candidate"}, {"score": 0.0025155150482635688, "phrase": "simplified_version"}, {"score": 0.00247944491239733, "phrase": "reduced_solution_space"}, {"score": 0.0023743009016047424, "phrase": "binary_tree"}, {"score": 0.0023066880707738736, "phrase": "image_details"}, {"score": 0.002156301969685775, "phrase": "filtering_tool"}, {"score": 0.0021049977753042253, "phrase": "object_boundaries"}], "paper_keywords": ["binary partition tree (BPT)", " image segmentation", " region-based analysis"], "paper_abstract": "Pyramid image representations via tree structures are recognized methods for region-based image analysis. Binary partition trees can be applied which document the merging process with small details found at the bottom levels and larger ones close to the root. Hindsight of the merging process is stored within the tree structure and provides the change histories of an image property from the leaf to the root node. In this work, the change histories are modelled by evolvement functions and their second order statistics are analyzed by using a knee function. Knee values show the reluctancy of each merge. We have systematically formulated these findings to provide a novel framework for binary partition tree analysis, where tree simplification is demonstrated. Based on an evolvement function, for each upward path in a tree, the tree node associated with the first reluctant merge is considered as a pruning candidate. The result is a simplified version providing a reduced solution space and still complying with the definition of a binary tree. The experiments show that image details are preserved whilst the number of nodes is dramatically reduced. An image filtering tool also results which preserves object boundaries and has applications for segmentation.", "paper_title": "Binary partition tree analysis based on region evolution and its application to tree simplification", "paper_id": "WOS:000245156500020"}