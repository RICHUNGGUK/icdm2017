{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_engineering_processes"}, {"score": 0.004683678340162048, "phrase": "software_engineering_organizations"}, {"score": 0.004514173914270395, "phrase": "project_execution"}, {"score": 0.004431725879033857, "phrase": "process-centric_approach"}, {"score": 0.004053881856507032, "phrase": "critical_question"}, {"score": 0.0038474874533431977, "phrase": "experienced_practitioners"}, {"score": 0.0035958527554878655, "phrase": "undertaking_software_process_improvement_activities"}, {"score": 0.003412697981624197, "phrase": "industry_sectors"}, {"score": 0.003319528548591761, "phrase": "multiple_peer-reviewed_software_journals"}, {"score": 0.00328903890761552, "phrase": "qualitative_grounded_theory-based_methodology"}, {"score": 0.003218977531454772, "phrase": "collected_data"}, {"score": 0.0030927866759789045, "phrase": "synthesized_model"}, {"score": 0.0030362200439452585, "phrase": "overall_quality"}, {"score": 0.0030083247178199434, "phrase": "software_engineering_process"}, {"score": 0.0028287747612440912, "phrase": "key_properties"}, {"score": 0.0027941681020938547, "phrase": "semantic_content"}, {"score": 0.002635465406070238, "phrase": "particular_organizational_perspectives"}, {"score": 0.0026032174806986256, "phrase": "differing_views"}, {"score": 0.0025792900811616474, "phrase": "role-based_conflicts"}, {"score": 0.0025398975698084484, "phrase": "process_quality"}, {"score": 0.002462903804873404, "phrase": "software_engineering_process_quality_most_influence_project_outcomes"}, {"score": 0.0024103977660677677, "phrase": "terminological_framework"}, {"score": 0.0023808972257735018, "phrase": "precise_discussion"}, {"score": 0.002366282306226484, "phrase": "software_engineering_process_issues"}, {"score": 0.002287485527155396, "phrase": "software_process_definition"}, {"score": 0.0021641529087429797, "phrase": "process_properties"}, {"score": 0.002144252482711611, "phrase": "organizational_needs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software engineering processes", " Quality attributes", " Quality properties", " Grounded Theory"], "paper_abstract": "Context: Software engineering organizations routinely define and implement processes to support, guide and control project execution. An assumption underlying this process-centric approach to business improvement is that the quality of the process will influence the quality, cost and time-to-release of the software produced. A critical question thus arises of what constitutes quality for software engineering processes. Objective: To identify criteria used by experienced practitioners to judge the quality of software engineering processes and to understand how knowledge of these criteria and their relationships may be useful for those undertaking software process improvement activities. Method: Interviews were conducted with 17 experienced software engineering practitioners from a range of geographies, roles and industry sectors. Published reports from 30 software process improvement case-studies were selected from multiple peer-reviewed software journals. A qualitative Grounded Theory-based methodology was employed to systematically analyze the collected data to synthesize a model of quality for software engineering processes. Results: The synthesized model suggests that practitioners perceive the overall quality of a software engineering process based on four quality attributes: suitability, usability, manageability and evolvability. Furthermore, these judgments are influenced by key properties related to the semantic content, structure, representation and enactment of that process. The model indicates that these attributes correspond to particular organizational perspectives and that these differing views may explain role-based conflicts in the judgement of process quality. Conclusion: Consensus exists amongst practitioners about which characteristics of software engineering process quality most influence project outcomes. The model presented provides a terminological framework that can facilitate precise discussion of software engineering process issues and a set of criteria that can support activities for software process definition, evaluation and improvement. The potential exists for further development of this model to facilitate optimization of process properties to match organizational needs. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Understanding the characteristics of quality for software engineering processes: A Grounded Theory investigation", "paper_id": "WOS:000329418000009"}