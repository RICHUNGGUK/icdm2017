{"auto_keywords": [{"score": 0.045210262209428614, "phrase": "query_words"}, {"score": 0.04415257445690235, "phrase": "document-based_approach"}, {"score": 0.00481495049065317, "phrase": "ranked_result_lists"}, {"score": 0.004775531918452571, "phrase": "query-dependent_snippets"}, {"score": 0.004621043537046209, "phrase": "text_search"}, {"score": 0.004434910775034831, "phrase": "query_time"}, {"score": 0.004273782634394231, "phrase": "top-ranked_documents"}, {"score": 0.0036855132234738736, "phrase": "corresponding_snippets"}, {"score": 0.0035369291417564606, "phrase": "proximity_search"}, {"score": 0.003394314924677555, "phrase": "index_side"}, {"score": 0.0033115124244647736, "phrase": "correct_result_set"}, {"score": 0.003244050414264445, "phrase": "snippet-generation_side"}, {"score": 0.0031910685060552485, "phrase": "appropriate_snippets"}, {"score": 0.0030876784650745973, "phrase": "worst_case"}, {"score": 0.0030497740719977835, "phrase": "whole_document"}, {"score": 0.002797121441432477, "phrase": "new_index-based_method"}, {"score": 0.002607965563121546, "phrase": "previous_index-based_methods"}, {"score": 0.0025130460190930554, "phrase": "essentially_no_extra_cost"}, {"score": 0.002492425259337031, "phrase": "query_processing_time"}, {"score": 0.002304754792740636, "phrase": "individual_segments"}, {"score": 0.002276439636865258, "phrase": "complete_documents"}, {"score": 0.0022300169122921906, "phrase": "significantly_larger_cache_hit-ratio"}, {"score": 0.0021049977753042253, "phrase": "completesearch_engine"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Performance", " Theory", " Snippets", " document summarization", " advanced search", " caching", " efficiency"], "paper_abstract": "Ranked result lists with query-dependent snippets have become state of the art in text search. They are typically implemented by searching, at query time, for occurrences of the query words in the top-ranked documents. This document-based approach has three inherent problems: (i) when a document is indexed by terms which it does not contain literally (e.g., related words or spelling variants), localization of the corresponding snippets becomes problematic; (ii) each query operator (e.g., phrase or proximity search) has to be implemented twice, on the index side in order to compute the correct result set, and on the snippet-generation side to generate the appropriate snippets; and (iii) in a worst case, the whole document needs to be scanned for occurrences of the query words, which could be problematic for very long documents. We present a new index-based method that localizes snippets by information solely computed from the index and that overcomes all three problems. Unlike previous index-based methods, we show how to achieve this at essentially no extra cost in query processing time, by a technique we call operator inversion. We also show how our index-based method allows the caching of individual segments instead of complete documents, which enables a significantly larger cache hit-ratio as compared to the document-based approach. We have fully integrated our implementation with the CompleteSearch engine.", "paper_title": "Efficient Index-Based Snippet Generation", "paper_id": "WOS:000335573900001"}