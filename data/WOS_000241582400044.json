{"auto_keywords": [{"score": 0.03572270209581423, "phrase": "blocksolve"}, {"score": 0.00481495049065317, "phrase": "quantified_csps"}, {"score": 0.004253618550301311, "phrase": "model_problems"}, {"score": 0.004025531820226182, "phrase": "standard_csp_formalism"}, {"score": 0.003809628721278519, "phrase": "constraint_community"}, {"score": 0.0037060500081492745, "phrase": "qcsp"}, {"score": 0.0030554300179552415, "phrase": "search_tree"}, {"score": 0.0028127163745564777, "phrase": "quantification_sequence"}, {"score": 0.002643386043540555, "phrase": "existential_variables"}, {"score": 0.002286781334850213, "phrase": "experimental_study"}, {"score": 0.0022399174232611853, "phrase": "good_performance"}, {"score": 0.0021049977753042253, "phrase": "art_qcsp_solver"}], "paper_keywords": [""], "paper_abstract": "Thanks to its extended expressiveness, the quantified constraint satisfaction problem (QCSP) can be used to model problems that are difficult to express in the standard CSP formalism. This is only recently that the constraint community got interested in QCSP and proposed algorithms to solve it. In this paper we propose BlockSolve, an algorithm for solving QCSPs that factorizes computations made in branches of the search tree. Instead of following the order of the variables in the quantification sequence, our technique searches for combinations of values for existential variables at the bottom of the tree that will work for (several) values of universal variables earlier in the sequence. An experimental study shows the good performance of BlockSolve compared to a state of the art QCSP solver.", "paper_title": "BlockSolve: A bottom-up approach for solving quantified CSPs", "paper_id": "WOS:000241582400044"}