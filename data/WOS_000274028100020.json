{"auto_keywords": [{"score": 0.048734215142491696, "phrase": "heap-manipulating_programs"}, {"score": 0.00481495049065317, "phrase": "automatic_numeric_abstractions"}, {"score": 0.0038332390893263844, "phrase": "numeric_abstractions"}, {"score": 0.0036207206487324506, "phrase": "simple_imperative_programs"}, {"score": 0.0035189057079817285, "phrase": "integer_variables"}, {"score": 0.003007846011394511, "phrase": "numeric_program"}, {"score": 0.0024984517279573906, "phrase": "automated_version"}, {"score": 0.0023936956017015696, "phrase": "abstraction_process"}, {"score": 0.002326304140277375, "phrase": "present_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "data_structures"}], "paper_keywords": ["Languages", " Reliability", " Theory", " Verification", " shape analysis", " separation logic", " termination", " program verification", " abstraction"], "paper_abstract": "We present a logic for relating heap-manipulating programs to numeric abstractions. These numeric abstractions are expressed as simple imperative programs over integer variables and have the property that termination and safety of the numeric program ensures termination and safety of the original, heap-manipulating program. We have implemented an automated version of this abstraction process and present experimental results for programs involving a variety of data structures.", "paper_title": "Automatic Numeric Abstractions for Heap-Manipulating Programs", "paper_id": "WOS:000274028100020"}