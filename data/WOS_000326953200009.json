{"auto_keywords": [{"score": 0.04103199698845451, "phrase": "noc"}, {"score": 0.028052230370784345, "phrase": "revive_path"}, {"score": 0.00481495049065317, "phrase": "data_path_salvaging"}, {"score": 0.004528301408585875, "phrase": "excellent_scalability"}, {"score": 0.004485735417293941, "phrase": "high_bandwidth"}, {"score": 0.004299064805926241, "phrase": "complex_integration_systems"}, {"score": 0.004218602458288531, "phrase": "noc_reliability"}, {"score": 0.004081385289516914, "phrase": "shrinking_semiconductor_feature_size"}, {"score": 0.004043003243656031, "phrase": "increasing_integration_density"}, {"score": 0.003948613642680196, "phrase": "single_node_failure"}, {"score": 0.0038382392088338784, "phrase": "network_connectivity"}, {"score": 0.003802135020791801, "phrase": "corrupt_the_entire_system"}, {"score": 0.0036958398682001015, "phrase": "efficient_method"}, {"score": 0.003626626504149897, "phrase": "resilient_communication_path"}, {"score": 0.0035587046945919788, "phrase": "prior_work"}, {"score": 0.0034428776029411974, "phrase": "limited_reliability"}, {"score": 0.003410479630045025, "phrase": "coarse_grain_protection"}, {"score": 0.0033624514778823763, "phrase": "even_larger_hardware_overhead"}, {"score": 0.0031769866037536045, "phrase": "data_path"}, {"score": 0.00297346171320082, "phrase": "multiple_identical_parallel_slices"}, {"score": 0.0028766278519176355, "phrase": "inherent_redundancy"}, {"score": 0.002679585860537941, "phrase": "proposed_salvaging_scheme"}, {"score": 0.0025436978068459565, "phrase": "overall_data_path"}, {"score": 0.002437645786158106, "phrase": "direct_redundancy"}, {"score": 0.002391938519840648, "phrase": "control_path"}, {"score": 0.002358220053411644, "phrase": "switch_arbiter"}, {"score": 0.0022706045233150795, "phrase": "full_fault-tolerant_scheme"}, {"score": 0.0022070310530794097, "phrase": "experimental_results"}, {"score": 0.002155412043665635, "phrase": "quite_high_reliability"}, {"score": 0.0021351033500114735, "phrase": "graceful_performance_degradation"}, {"score": 0.0021049977753042253, "phrase": "high_fault_rate"}], "paper_keywords": ["Network-on-Chip", " fault-tolerant", " on-chip router"], "paper_abstract": "Network-on-Chip (NoC) with excellent scalability and high bandwidth has been considered to be the most promising communication architecture for complex integration systems. However, NoC reliability is getting continuously challenging for the shrinking semiconductor feature size and increasing integration density. Moreover, a single node failure in NoC might destroy the network connectivity and corrupt the entire system. Introducing redundancies is an efficient method to construct a resilient communication path. However, prior work based on redundancies, either results in limited reliability with coarse grain protection or involves even larger hardware overhead with fine grain. In this paper, we notice that data path such as links, buffers and crossbars in NoC can be divided into multiple identical parallel slices, which can be utilized as inherent redundancy to enhance reliability. As long as there is one fault-free slice left available, the proposed salvaging scheme named as Revive Path, can be employed to make the overall data path still functional. Furthermore, Revive Path uses the direct redundancy to protect the control path such as switch arbiter, routing computation, to provide a full fault-tolerant scheme to the whole router. Experimental results show that it achieves quite high reliability with graceful performance degradation even under high fault rate.", "paper_title": "Revive Path: Resilient Network-on-Chip Design Through Data Path Salvaging of Router", "paper_id": "WOS:000326953200009"}