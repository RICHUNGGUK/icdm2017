{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "ever_increasing_hardware_capabilities"}, {"score": 0.004682708592184678, "phrase": "modern_microcontrollers"}, {"score": 0.00415019999222481, "phrase": "relatively_low-end_ones"}, {"score": 0.003888905257972882, "phrase": "new_requirements"}, {"score": 0.003543804852018315, "phrase": "international_and_industrial_standards"}, {"score": 0.0033515736929172644, "phrase": "fast_time"}, {"score": 0.003140401552000472, "phrase": "diverse_software_components"}, {"score": 0.0028615323526689582, "phrase": "case_study"}, {"score": 0.0027062100658653485, "phrase": "full-fledged_networked_embedded_system"}, {"score": 0.0025592969422491476, "phrase": "small-scale_real-time_operating_system"}, {"score": 0.002375714262344562, "phrase": "different_components"}, {"score": 0.002331909406363425, "phrase": "key_design_issues"}, {"score": 0.002267708463966758, "phrase": "inter-task_synchronization"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Open-source software", " Embedded systems", " Distributed systems"], "paper_abstract": "The ever increasing hardware capabilities typical of modern microcontrollers make it easier to add more and more functions to embedded systems, even for relatively low-end ones. In turn, this raises new requirements on their firmware, focusing on aspects like adherence to international and industrial standards, modularity, portability, fast time to market, and integration of diverse software components. This paper shows, by means of a case study, how to design a full-fledged networked embedded system using only open-source components, including a small-scale real-time operating system. In addition, it highlights how different components addressed key design issues, like inter-task synchronization and communication. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Modular design of an open-source, networked embedded system", "paper_id": "WOS:000343633400005"}