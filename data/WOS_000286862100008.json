{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "tree_edit_distance"}, {"score": 0.0047057084749407485, "phrase": "unordered_trees"}, {"score": 0.004392565073466714, "phrase": "fixed-parameter_algorithm"}, {"score": 0.004243862930012258, "phrase": "tree_edit_distance_problem"}, {"score": 0.003961330917648707, "phrase": "unit_cost_model"}, {"score": 0.003296212583539166, "phrase": "parameter_k"}, {"score": 0.0031845067058084583, "phrase": "maximum_bound"}, {"score": 0.00307657476125683, "phrase": "edit_distance"}, {"score": 0.00290473242917264, "phrase": "maximum_size"}, {"score": 0.00283870598459543, "phrase": "input_trees"}, {"score": 0.0026494723416072316, "phrase": "polynomial-time_algorithms"}, {"score": 0.002472822097373027, "phrase": "maximum_degree"}, {"score": 0.0023889533502525527, "phrase": "largest_common_subtree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tree edit distance", " Fixed-parameter algorithms", " Dynamic programming", " Unordered trees"], "paper_abstract": "This paper presents a fixed-parameter algorithm for the tree edit distance problem for unordered trees under the unit cost model that works in O(2.62(k) . poly(n)) time and O(n(2)) space, where the parameter k is the maximum bound of the edit distance and n is the maximum size of input trees. This paper also presents polynomial-time algorithms for the case where the maximum degree of the largest common subtree is bounded by a constant. (c) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Exact algorithms for computing the tree edit distance between unordered trees", "paper_id": "WOS:000286862100008"}