{"auto_keywords": [{"score": 0.004312622975366676, "phrase": "massive_graphs"}, {"score": 0.004260134699483774, "phrase": "natural_fundamental_problems"}, {"score": 0.003982617095636925, "phrase": "complex_network_analysis"}, {"score": 0.0038389110156920926, "phrase": "detailed_survey"}, {"score": 0.0037921662574137535, "phrase": "proposed_main-memory_solutions"}, {"score": 0.0036329805216306576, "phrase": "unified_way"}, {"score": 0.0035233696341819437, "phrase": "previous_authors"}, {"score": 0.003459191419478298, "phrase": "surprisingly_little_attention"}, {"score": 0.003417054482155433, "phrase": "space_complexity"}, {"score": 0.003375429082739004, "phrase": "main-memory_solutions"}, {"score": 0.003213920601037463, "phrase": "space_complexities"}, {"score": 0.0031747618267940155, "phrase": "known_algorithms"}, {"score": 0.003022825806274343, "phrase": "new_algorithms"}, {"score": 0.002913650880082273, "phrase": "triangle_listing"}, {"score": 0.002860546817196148, "phrase": "previous_algorithms"}, {"score": 0.002825681384008326, "phrase": "space_needs"}, {"score": 0.0027403605798830984, "phrase": "additional_advantage"}, {"score": 0.0026576091519087065, "phrase": "power-law_graphs"}, {"score": 0.002469032978674379, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graphs", " Algorithms", " Triangles", " Complex networks"], "paper_abstract": "Finding, counting and/or listing triangles (three vertices with three edges) in massive graphs are natural fundamental problems, which have recently received much attention because of their importance in complex network analysis. Here we provide a detailed survey of proposed main-memory solutions to these problems, in a unified way. We note that previous authors have paid surprisingly little attention to space complexity of main-memory solutions, despite its both fundamental and practical interest. We therefore detail space complexities of known algorithms and discuss their implications. We also present new algorithms which are time optimal for triangle listing and beats previous algorithms concerning space needs. They have the additional advantage of performing better on power-law graphs, which we also detail. We finally show with an experimental study that these two algorithms perform very well in practice, allowing us to handle cases which were previously out of reach. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Main-memory triangle computations for very large (sparse (power-law)) graphs", "paper_id": "WOS:000260975400033"}