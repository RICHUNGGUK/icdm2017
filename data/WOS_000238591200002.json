{"auto_keywords": [{"score": 0.033380458025052365, "phrase": "change-table_technique"}, {"score": 0.00481495049065317, "phrase": "aggregate_and_outerjoin_expressions"}, {"score": 0.004590820632326585, "phrase": "data_warehouse"}, {"score": 0.004074901471704325, "phrase": "incremental_maintenance_algorithms"}, {"score": 0.0036167509502276294, "phrase": "proposed_algorithms"}, {"score": 0.003531474887552889, "phrase": "general_case"}, {"score": 0.00347574024760684, "phrase": "relational_expressions"}, {"score": 0.0034208822062692127, "phrase": "aggregate_and_outerjoin_operators"}, {"score": 0.0030602966787192745, "phrase": "general_view_expressions"}, {"score": 0.0030119758165837625, "phrase": "relational_and_aggregate_operators"}, {"score": 0.0028037753646260937, "phrase": "previously_proposed_techniques"}, {"score": 0.0026518169452004465, "phrase": "developed_framework"}, {"score": 0.00252812242767189, "phrase": "view_expressions"}, {"score": 0.002488183412451029, "phrase": "outerjoin_operators"}, {"score": 0.002372103459168231, "phrase": "developed_change-table_technique"}, {"score": 0.002316105585203396, "phrase": "optimal_incremental_maintenance_scheme"}, {"score": 0.002208035721125305, "phrase": "reasonable_assumptions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["view maintenance", " aggregate views", " outerjoin views", " incremental maintenance"], "paper_abstract": "Views stored in a data warehouse need to be kept current. As recomputing the views is very expensive, incremental maintenance algorithms are required. Over recent years, several incremental maintenance algorithms have been proposed. None of the proposed algorithms handle the general case of relational expressions involving aggregate and outerjoin operators efficiently. In this article, we develop the change-table technique for incrementally maintaining general view expressions involving relational and aggregate operators. We show that the change-table technique outperforms the previously proposed techniques by orders of magnitude. The developed framework easily extends to efficiently maintaining view expressions containing outerjoin operators. We prove that the developed change-table technique is an optimal incremental maintenance scheme for a given view expression tree under some reasonable assumptions. (C) 2004 Elsevier B.V. All rights reserved.", "paper_title": "Incremental maintenance of aggregate and outerjoin expressions", "paper_id": "WOS:000238591200002"}