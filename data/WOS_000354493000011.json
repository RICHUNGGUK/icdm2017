{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mesh_segmentation"}, {"score": 0.00433200902751133, "phrase": "efficient_algorithm"}, {"score": 0.003750260412839128, "phrase": "discrete_curvatures"}, {"score": 0.003643607569483598, "phrase": "accurate_partitioning_criterion"}, {"score": 0.0035060903664150115, "phrase": "fast_clustering_scheme"}, {"score": 0.0033737457695128233, "phrase": "quick_shift_algorithm"}, {"score": 0.0031542522399061403, "phrase": "gpu"}, {"score": 0.0030938932434437178, "phrase": "graphics_processing_unit"}, {"score": 0.0028923335491735564, "phrase": "object_geometry"}, {"score": 0.0027830917623582903, "phrase": "graphic_memory"}, {"score": 0.0025521085778978042, "phrase": "graphic_device"}, {"score": 0.0023857603808363527, "phrase": "fast_estimation"}, {"score": 0.0022956075241520064, "phrase": "high_quality"}, {"score": 0.0021049977753042253, "phrase": "npr_drawing"}], "paper_keywords": ["Mesh segmentation", " Discrete curvatures", " Quick shift", " GP-GPU programming", " CUDA"], "paper_abstract": "This paper proposes an efficient algorithm for decomposition of a 3D arbitrary triangular mesh into surface patches. Our method is based on the discrete curvatures for an accurate partitioning criterion and presents a fast clustering scheme of vertices using quick shift algorithm. It was implemented on the GPU (Graphics Processing Unit) because it is common for object geometry to exist in graphic memory so that more computational work is done directly on the graphic device. The proposed method results in fast estimation of curvatures and high quality of mesh segmentation. Also we applied it to NPR drawing of 3D meshes.", "paper_title": "Mesh segmentation based on curvatures using the GPU", "paper_id": "WOS:000354493000011"}