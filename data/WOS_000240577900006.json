{"auto_keywords": [{"score": 0.03520641750999769, "phrase": "large_taxa_sets"}, {"score": 0.00481495049065317, "phrase": "neighbor-joining_tree"}, {"score": 0.004594137808658537, "phrase": "clustalw._neighbor-joining"}, {"score": 0.004342430078306461, "phrase": "distance-based_method"}, {"score": 0.003953068310598579, "phrase": "polynomial_time_complexity"}, {"score": 0.003701401653850141, "phrase": "fundamental_problem"}, {"score": 0.003598492288058048, "phrase": "previous_implementations"}, {"score": 0.0032449610741097992, "phrase": "reasonable_time"}, {"score": 0.0028986672783671147, "phrase": "parallel_implementation"}, {"score": 0.002765490759189057, "phrase": "fast_construction"}, {"score": 0.0025409639091476363, "phrase": "near-linear_speedup"}, {"score": 0.0022273034991008326, "phrase": "parallelized_clustalw_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["neighbor-joining", " Multiple Instruction Multiple Data Architecture (MIMD)", " phylogenetic tree", " multiple sequence alignment"], "paper_abstract": "Neighbor-joining (NJ) is a distance-based method for tree construction. It is the most widely used method with polynomial time complexity at present. However, a fundamental problem with the previous implementations of this method is its limitation to handle large taxa sets within a reasonable time and memory resources. In this paper, we present a parallel implementation, pNJTree, for fast construction of very large phylogenetic trees. In comparison, pNJTree gets near-linear speedup for large taxa sets. It can be used to improve the speedup of the parallelized ClustalW methods. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "pNJTree: A parallel program for reconstruction of neighbor-joining tree and its application in ClustalW", "paper_id": "WOS:000240577900006"}