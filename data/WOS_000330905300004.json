{"auto_keywords": [{"score": 0.03456583030179557, "phrase": "eulerian_graph"}, {"score": 0.032514089580573335, "phrase": "euler_tour"}, {"score": 0.004714869813251479, "phrase": "evolutionary_development_methodologies"}, {"score": 0.0045208777171271254, "phrase": "incremental_testing_methods"}, {"score": 0.004156411748278609, "phrase": "test_sequences"}, {"score": 0.004069963083642548, "phrase": "even_if_minimal_changes"}, {"score": 0.00379452936798156, "phrase": "current_paper"}, {"score": 0.003587616378156851, "phrase": "tour_test_sequence"}, {"score": 0.0034640450599342488, "phrase": "deterministic_finite_state_machine_model"}, {"score": 0.0033447157263095223, "phrase": "existing_information"}, {"score": 0.003206916619690171, "phrase": "previous_version"}, {"score": 0.0029274600162609654, "phrase": "test_cases"}, {"score": 0.002729133029776093, "phrase": "first_algorithm"}, {"score": 0.002544207840990836, "phrase": "second_algorithm"}, {"score": 0.002439308179084911, "phrase": "augmented_graph"}, {"score": 0.002371783323468861, "phrase": "practical_analyses"}], "paper_keywords": ["finite state machine", " test generation algorithms", " incremental algorithms", " incremental test generation"], "paper_abstract": "While evolutionary development methodologies have become increasingly prevalent, incremental testing methods are lagging behind. Most traditional test generation algorithms-including the Transition Tour method-rebuild test sequences from scratch even if minimal changes to the system have been made. In the current paper we propose two incremental algorithms to update a Transition Tour test sequence after changes in a deterministic finite state machine model. Our solution uses existing information-the Eulerian graph of a previous version of the system and an Euler tour in it-to update the test cases of the system in response to modification. The first algorithm keeps an Eulerian graph up to date, while the second algorithm maintains an Euler tour in the augmented graph. Analytical and practical analyses show that our algorithms are very efficient in the case of changing specifications. We also demonstrate our methods through an example.", "paper_title": "The Incremental Maintenance of Transition Tour", "paper_id": "WOS:000330905300004"}