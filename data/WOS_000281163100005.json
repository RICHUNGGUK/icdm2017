{"auto_keywords": [{"score": 0.04685574222273184, "phrase": "hpc"}, {"score": 0.004855263123236406, "phrase": "mpi."}, {"score": 0.004650330504968421, "phrase": "current_prevalence"}, {"score": 0.00457013354092966, "phrase": "multi-core_processors"}, {"score": 0.004413846562278824, "phrase": "mixed-mode_programming"}, {"score": 0.003907586297783078, "phrase": "important_technique"}, {"score": 0.003806866174028117, "phrase": "high_levels"}, {"score": 0.0032263862712733934, "phrase": "likely_performance"}, {"score": 0.0027341763737751467, "phrase": "popular_hpc_architectures"}, {"score": 0.002640507929183363, "phrase": "synthetic_benchmark_suite"}, {"score": 0.0025059724686541263, "phrase": "performance_characteristics"}, {"score": 0.0022967713922705, "phrase": "possible_areas"}, {"score": 0.0021797112385590913, "phrase": "multiple_openmp_threads"}], "paper_keywords": ["Mixed-mode", " MPI", " OpenMP", " Performance"], "paper_abstract": "With the current prevalence of multi-core processors in HPC architectures mixed-mode programming, using both MPI and OpenMP in the same application, is seen as an important technique for achieving high levels of scalability. As there are few standard benchmarks written in this paradigm, it is difficult to assess the likely performance of such programs. To help address this, we examine the performance of mixed-mode OpenMP/MPI on a number of popular HPC architectures, using a synthetic benchmark suite and two large-scale applications. We find performance characteristics which differ significantly between implementations, and which highlight possible areas for improvement, especially when multiple OpenMP threads communicate simultaneously via MPI.", "paper_title": "Performance Evaluation of Mixed-Mode OpenMP/MPI Implementations", "paper_id": "WOS:000281163100005"}