{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "ordinary_differential_equations"}, {"score": 0.0045846424310611745, "phrase": "ordinary_differential_boundary_value_problems"}, {"score": 0.004334832612029898, "phrase": "five_different_criteria"}, {"score": 0.004185632403886255, "phrase": "interval_subdivision"}, {"score": 0.003741712498615481, "phrase": "criterion_values"}, {"score": 0.0034640450599342488, "phrase": "main_comparison"}, {"score": 0.0030319482153908037, "phrase": "unique_solution"}, {"score": 0.0029688173975648173, "phrase": "main_results"}, {"score": 0.0029069972482610403, "phrase": "interval_size_times"}, {"score": 0.002473786357109046, "phrase": "global_error_estimate"}, {"score": 0.002149799391146313, "phrase": "de_boor"}, {"score": 0.0021049977753042253, "phrase": "last_chebyshev_series_coefficient"}], "paper_keywords": ["ordinary differential boundary value problems", " piecewise polynomial collocation", " adaptive algorithms"], "paper_abstract": "Various adaptive methods for the solution of ordinary differential boundary value problems using piecewise polynomial collocation are considered. Five different criteria are compared using both interval subdivision and mesh redistribution. The methods are all based on choosing sub-intervals so that the criterion values have (approximately) equal values in each sub-interval. In addition to the main comparison it is shown by example that at least when accuracy is low then equidistribution may not give a unique solution. The main results that using interval size times maximum residual as criterion gives very much better results than using maximum residual itself. It is also shown that a criterion based on a global error estimate while giving very good results in some cases, is unsatisfactory in other cases. The other criteria considered are that given by De Boor and the last Chebyshev series coefficient.", "paper_title": "Adaptive methods for piecewise polynomial collocation for ordinary differential equations", "paper_id": "WOS:000244887900011"}