{"auto_keywords": [{"score": 0.049285156489238265, "phrase": "structural_coverage_criteria"}, {"score": 0.03835583735523021, "phrase": "test_suites"}, {"score": 0.032510505971468866, "phrase": "random_test_suites"}, {"score": 0.010010389289031498, "phrase": "equal_size"}, {"score": 0.009211099289719984, "phrase": "test_generation"}, {"score": 0.00806178026784613, "phrase": "test_oracle"}, {"score": 0.00481495049065317, "phrase": "coverage-directed_test_case_generation"}, {"score": 0.0045946617913925755, "phrase": "testing_efforts"}, {"score": 0.004282900153232246, "phrase": "powerful_automated_test_generation_tools"}, {"score": 0.004169754607580288, "phrase": "test_inputs"}, {"score": 0.00400559360117678, "phrase": "coverage-providing_tests"}, {"score": 0.0038478705530517296, "phrase": "fault_detection_ability"}, {"score": 0.0035746075891407224, "phrase": "counterexample-based_test_generation"}, {"score": 0.0035388743851813512, "phrase": "random_generation_approach"}, {"score": 0.003376769321692139, "phrase": "purely_random_test_suites"}, {"score": 0.0032546105164772995, "phrase": "coverage_criteria"}, {"score": 0.00318984544993994, "phrase": "poor_indication"}, {"score": 0.003168543855125077, "phrase": "fault_finding_effectiveness"}, {"score": 0.003136857047565403, "phrase": "inconsistent_results"}, {"score": 0.0031054861345720854, "phrase": "seven_case_examples"}, {"score": 0.0030233510365494406, "phrase": "similar-or_even_higher-levels"}, {"score": 0.0029139401928060123, "phrase": "structural_coverage"}, {"score": 0.0027710786693798534, "phrase": "positive_impact"}, {"score": 0.0027068216332674895, "phrase": "coverage-providing_subset"}, {"score": 0.0025059724686541263, "phrase": "program_structure"}, {"score": 0.0023830645437709604, "phrase": "traditional_structural_coverage_criteria"}, {"score": 0.0023122257999320527, "phrase": "higher_levels"}, {"score": 0.0022967713922705, "phrase": "fault_detection"}, {"score": 0.0021767893059191795, "phrase": "test_automation"}, {"score": 0.0021622381640810442, "phrase": "critical_systems"}], "paper_keywords": ["Software testing", " system testing"], "paper_abstract": "A number of structural coverage criteria have been proposed to measure the adequacy of testing efforts. In the avionics and other critical systems domains, test suites satisfying structural coverage criteria are mandated by standards. With the advent of powerful automated test generation tools, it is tempting to simply generate test inputs to satisfy these structural coverage criteria. However, while techniques to produce coverage-providing tests are well established, the effectiveness of such approaches in terms of fault detection ability has not been adequately studied. In this work, we evaluate the effectiveness of test suites generated to satisfy four coverage criteria through counterexample-based test generation and a random generation approach-where tests are randomly generated until coverage is achieved-contrasted against purely random test suites of equal size. Our results yield three key conclusions. First, coverage criteria satisfaction alone can be a poor indication of fault finding effectiveness, with inconsistent results between the seven case examples (and random test suites of equal size often providing similar-or even higher-levels of fault finding). Second, the use of structural coverage as a supplement-rather than a target-for test generation can have a positive impact, with random test suites reduced to a coverage-providing subset detecting up to 13.5 percent more faults than test suites generated specifically to achieve coverage. Finally, Observable MC/DC, a criterion designed to account for program structure and the selection of the test oracle, can-in part-address the failings of traditional structural coverage criteria, allowing for the generation of test suites achieving higher levels of fault detection than random test suites of equal size. These observations point to risks inherent in the increase in test automation in critical systems, and the need for more research in how coverage criteria, test generation approaches, the test oracle used, and system structure jointly influence test effectiveness.", "paper_title": "The Risks of Coverage-Directed Test Case Generation", "paper_id": "WOS:000359563800005"}