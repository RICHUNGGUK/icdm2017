{"auto_keywords": [{"score": 0.04214841840564693, "phrase": "feedback_scheduling"}, {"score": 0.00481495049065317, "phrase": "embedded_computing_systems"}, {"score": 0.004707913053935566, "phrase": "resource_constraints"}, {"score": 0.004655285779819366, "phrase": "workload_variability"}, {"score": 0.004475659507646842, "phrase": "resource_availability"}, {"score": 0.004376131419366239, "phrase": "great_challenges"}, {"score": 0.004327196832280818, "phrase": "software_design"}, {"score": 0.004230956171850591, "phrase": "multitasking_environments"}, {"score": 0.004067635935640407, "phrase": "emerging_methodology"}, {"score": 0.003802135020791801, "phrase": "closed-loop_approach"}, {"score": 0.0035539019235553897, "phrase": "resource_efficiency"}, {"score": 0.0034359094594153304, "phrase": "available_resources"}, {"score": 0.0033974527047473044, "phrase": "concurrent_tasks"}, {"score": 0.0033405704229694656, "phrase": "feedback_information"}, {"score": 0.003284637361174143, "phrase": "actual_usage"}, {"score": 0.0031223774204093713, "phrase": "behavioral_design"}, {"score": 0.003087419032091453, "phrase": "feedback_schedulers"}, {"score": 0.0030017207229983385, "phrase": "general_framework"}, {"score": 0.0028857130140890787, "phrase": "real-time_control_applications"}, {"score": 0.0028373742057129126, "phrase": "simple_yet_illustrative_feedback_scheduling_algorithm"}, {"score": 0.002743105561254975, "phrase": "programming_perspective"}, {"score": 0.0025928815987676535, "phrase": "control_tasks"}, {"score": 0.002464709648714996, "phrase": "event-driven_paradigm"}, {"score": 0.0023694065215394593, "phrase": "event-triggered_approaches"}, {"score": 0.0022777800735119405, "phrase": "feedback_scheduler"}, {"score": 0.0022522565004588113, "phrase": "simulation_results"}, {"score": 0.0021288561076024844, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "time-triggered_paradigm"}], "paper_keywords": ["feedback scheduling", " programming", " overhead", " event-driven", " resource efficiency", " flexibility"], "paper_abstract": "Embedded computing systems today increasingly feature resource constraints and workload variability, which lead to uncertainty in resource availability. This raises great challenges to software design and programming in multitasking environments. In this paper, the emerging methodology of feedback scheduling is introduced to address these challenges. As a closed-loop approach to resource management, feedback scheduling promises to enhance the flexibility and resource efficiency of various software programs through dynamically distributing available resources among concurrent tasks based on feedback information about the actual usage of the resources. With emphasis on the behavioral design of feedback schedulers, we describe a general framework of feedback scheduling in the context of real-time control applications. A simple yet illustrative feedback scheduling algorithm is given. From a programming perspective, we describe how to modify the implementation of control tasks to facilitate the application of feedback scheduling. An event-driven paradigm that combines time-triggered and event-triggered approaches is proposed for programming of the feedback scheduler. Simulation results argue that the proposed event-driven paradigm yields better performance than time-triggered paradigm in dynamic environments where the workload varies irregularly and unpredictably.", "paper_title": "Feedback scheduling: An event-driven paradigm", "paper_id": "WOS:000253410500001"}