{"auto_keywords": [{"score": 0.03075631137653188, "phrase": "bilevel_program"}, {"score": 0.027229790466491315, "phrase": "separation_problem"}, {"score": 0.00481495049065317, "phrase": "branch-and-cut_algorithms"}, {"score": 0.0045370785151713396, "phrase": "generic_mixed_integer_linear_programs"}, {"score": 0.0041995784967999985, "phrase": "convex_hull"}, {"score": 0.004028326293950714, "phrase": "critical_element"}, {"score": 0.003706410380455668, "phrase": "so-called_separation_problem"}, {"score": 0.0035341028694769036, "phrase": "valid_inequality"}, {"score": 0.003213070385558666, "phrase": "original_problem"}, {"score": 0.0030273620861817055, "phrase": "maximally_violated_valid_inequality"}, {"score": 0.0029561107046138136, "phrase": "natural_interpretation"}, {"score": 0.0026714812866037584, "phrase": "simple_single-level_mathematical_program"}, {"score": 0.002608583927848071, "phrase": "standard_mathematical_programming_formulation"}, {"score": 0.0022476051902301187, "phrase": "computational_complexity_theory"}], "paper_keywords": ["Bilevel programming", " Cutting planes", " Separation", " Computational complexity"], "paper_abstract": "In recent years, branch-and-cut algorithms have become firmly established as the most effective method for solving generic mixed integer linear programs (MILPs). Methods for automatically generating inequalities valid for the convex hull of solutions to such MILPs are a critical element of branch-and-cut. This paper examines the nature of the so-called separation problem, which is that of generating a valid inequality violated by a given real vector, usually arising as the solution to a relaxation of the original problem. We show that the problem of generating a maximally violated valid inequality often has a natural interpretation as a bilevel program. In some cases, this bilevel program can be easily reformulated as a simple single-level mathematical program, yielding a standard mathematical programming formulation for the separation problem. In other cases, no such polynomial-size single-level reformulation exists unless the polynomial hierarchy collapses to its first level (an event considered extremely unlikely in computational complexity theory). We illustrate our insights by considering the separation problem for two well-known classes of valid inequalities.", "paper_title": "Bilevel programming and the separation problem", "paper_id": "WOS:000339884700016"}