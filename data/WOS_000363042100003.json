{"auto_keywords": [{"score": 0.04548388910823855, "phrase": "embedded_sensor_networks"}, {"score": 0.00481495049065317, "phrase": "sensor_networks"}, {"score": 0.004645057834614705, "phrase": "formal_framework"}, {"score": 0.004513450434595191, "phrase": "security_concerns"}, {"score": 0.0041703614123283165, "phrase": "agent-based_programming_model"}, {"score": 0.0039942998891989955, "phrase": "logical_framework"}, {"score": 0.003313053707792957, "phrase": "mission-critical_environments"}, {"score": 0.0032423089921154503, "phrase": "functional_and_nonfunctional_requirements"}, {"score": 0.003105305189036267, "phrase": "unforeseen_manner"}, {"score": 0.0026126405272417783, "phrase": "counterfactual_logic"}, {"score": 0.002197966048531954, "phrase": "applied.double_dagger"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["sensor networks", " distributed systems", " security models", " safety", " formal verification"], "paper_abstract": "We present a formal framework for reasoning about security concerns in the context of embedded sensor networks. We first provide an agent-based programming model for sensor networks. A logical framework enables reasoning about security, safety, and integrity with respect to usage of resources in this model. Embedded sensor networks often operate in rapidly changing mission-critical environments where both functional and nonfunctional requirements can alter dynamically in an unforeseen manner. The network may need to be reconfigured and reprogrammed in response to changes in its operating conditions. We provide a framework based on counterfactual logic to formally represent changes to the system and perform what-if reasoning about their impact on security and safety even before they have been applied.double dagger Copyright (C) 2015 John Wiley & Sons, Ltd.", "paper_title": "Reasoning about security in sensor networks", "paper_id": "WOS:000363042100003"}