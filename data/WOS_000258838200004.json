{"auto_keywords": [{"score": 0.049782445699425075, "phrase": "structured_abstracts"}, {"score": 0.005410412171311644, "phrase": "software_engineering_experiments"}, {"score": 0.00481495049065317, "phrase": "software_engineering_results"}, {"score": 0.00474075475474847, "phrase": "randomised_experiment"}, {"score": 0.0046676969718111765, "phrase": "systematic_literature_review"}, {"score": 0.004553128404612054, "phrase": "primary_studies"}, {"score": 0.003849711329589429, "phrase": "formal_experiment"}, {"score": 0.0036972190829870906, "phrase": "non-structured_abstracts"}, {"score": 0.0035951877427580006, "phrase": "structured_versions"}, {"score": 0.003528730431045574, "phrase": "random_selection"}, {"score": 0.0033262524445013303, "phrase": "structured_form"}, {"score": 0.00281184118901173, "phrase": "completeness_score"}, {"score": 0.0023546984428119864, "phrase": "important_information"}, {"score": 0.0022402661832994094, "phrase": "information_content"}, {"score": 0.0021648294450401133, "phrase": "appropriate_structures"}, {"score": 0.002151388538895855, "phrase": "different_types"}, {"score": 0.0021049977753042253, "phrase": "software_engineering_journals"}], "paper_keywords": ["structured abstract", " randomised controlled laboratory experiment"], "paper_abstract": "When conducting a systematic literature review, researchers usually determine the relevance of primary studies on the basis of the title and abstract. However, experience indicates that the abstracts for many software engineering papers are of too poor a quality to be used for this purpose. A solution adopted in other domains is to employ structured abstracts to improve the quality of information provided. This study consists of a formal experiment to investigate whether structured abstracts are more complete and easier to understand than non-structured abstracts for papers that describe software engineering experiments. We constructed structured versions of the abstracts for a random selection of 25 papers describing software engineering experiments. The 64 participants were each presented with one abstract in its original unstructured form and one in a structured form, and for each one were asked to assess its clarity (measured on a scale of 1 to 10) and completeness (measured with a questionnaire that used 18 items). Based on a regression analysis that adjusted for participant, abstract, type of abstract seen first, knowledge of structured abstracts, software engineering role, and preference for conventional or structured abstracts, the use of structured abstracts increased the completeness score by 6.65 (SE 0.37, p < 0.001) and the clarity score by 2.98 (SE 0.23, p < 0.001). 57 participants reported their preferences regarding structured abstracts: 13 (23%) had no preference; 40 (70%) preferred structured abstracts; four preferred conventional abstracts. Many conventional software engineering abstracts omit important information. Our study is consistent with studies from other disciplines and confirms that structured abstracts can improve both information content and readability. Although care must be taken to develop appropriate structures for different types of article, we recommend that Software Engineering journals and conferences adopt structured abstracts.", "paper_title": "Presenting software engineering results using structured abstracts: a randomised experiment", "paper_id": "WOS:000258838200004"}