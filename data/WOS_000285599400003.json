{"auto_keywords": [{"score": 0.02839829974363596, "phrase": "formal_proof"}, {"score": 0.004814951920928826, "phrase": "fma."}, {"score": 0.0047113960612140335, "phrase": "fused_multiply_accumulate-add"}, {"score": 0.004180234323211199, "phrase": "floating-point_arithmetic"}, {"score": 0.003668591097652231, "phrase": "current_processors"}, {"score": 0.0034366728236876047, "phrase": "itanium"}, {"score": 0.003219368413618912, "phrase": "earlier_work"}, {"score": 0.0030157628075954588, "phrase": "exact_error"}, {"score": 0.0024519545383399773, "phrase": "new_algorithm"}, {"score": 0.0021988033567123372, "phrase": "fma"}, {"score": 0.0021049977753042253, "phrase": "error_bounds"}], "paper_keywords": ["Floating-point arithmetic", " FMA", " fused multiply-add", " computer arithmetic", " error-free transforms", " error compensation", " error of an FMA"], "paper_abstract": "The fused multiply accumulate-add (FMA) instruction, specified by the IEEE 754-2008 Standard for Floating-Point Arithmetic, eases some calculations, and is already available on some current processors such as the Power PC or the Itanium. We first extend an earlier work on the computation of the exact error of an FMA (by giving more general conditions and providing a formal proof). Then, we present a new algorithm that computes an approximation to the error of an FMA, and provide error bounds and a formal proof for that algorithm.", "paper_title": "Exact and Approximated Error of the FMA", "paper_id": "WOS:000285599400003"}