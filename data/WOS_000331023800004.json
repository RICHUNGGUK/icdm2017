{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_jobs"}, {"score": 0.004613516457919661, "phrase": "adaptive_scheduling"}, {"score": 0.004569905085027681, "phrase": "multiple_sets"}, {"score": 0.004337276328199398, "phrase": "time-varying_parallelism"}, {"score": 0.004275904315753662, "phrase": "two-level_scheduling_scenario"}, {"score": 0.004195418010131832, "phrase": "multiple_parallel_applications"}, {"score": 0.004116440453049531, "phrase": "different_users"}, {"score": 0.004077508669922702, "phrase": "user_groups"}, {"score": 0.004038943596016986, "phrase": "large_parallel_systems"}, {"score": 0.003962899903266524, "phrase": "user-level_fairness_and_system-wide_efficiency"}, {"score": 0.003725470458263889, "phrase": "well-known_equi-partitioning_algorithm"}, {"score": 0.0035864603175592854, "phrase": "active_job_sets"}, {"score": 0.003419943984098415, "phrase": "feedback-driven_adaptive_scheduler"}, {"score": 0.0033395980635636644, "phrase": "processor_allocations"}, {"score": 0.0032149396890830575, "phrase": "jobs'_execution_history"}, {"score": 0.0031096747349602344, "phrase": "asymptotically_competitive_performance"}, {"score": 0.003036595866130997, "phrase": "set_response_time"}, {"score": 0.0028274743316389437, "phrase": "special_cases"}, {"score": 0.002787406053363446, "phrase": "theoretical_analysis_and_simulation_results"}, {"score": 0.002683304054823427, "phrase": "existing_scheduler"}, {"score": 0.002522344964242888, "phrase": "generalized_framework"}, {"score": 0.0024051153560799335, "phrase": "feedback-driven_policies"}, {"score": 0.0022933216359142736, "phrase": "extended_multi-level_hierarchical_scheduling_model"}, {"score": 0.0022500695985527668, "phrase": "fair_and_efficient_solution"}, {"score": 0.0021659920594094407, "phrase": "two-level_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Adaptive scheduling", " Parallel jobs", " Set response time", " Multiprocessors", " Online algorithm", " Competitive analysis", " Hierarchical scheduling", " Fairness", " Efficiency"], "paper_abstract": "We study online adaptive scheduling for multiple sets of parallel jobs, where each set may contain one or more jobs with time-varying parallelism. This two-level scheduling scenario arises naturally when multiple parallel applications are submitted by different users or user groups in large parallel systems, where both user-level fairness and system-wide efficiency are of important concerns. To achieve fairness, we use the well-known equi-partitioning algorithm to distribute the available processors among the active job sets at anytime. For efficiency, we apply a feedback-driven adaptive scheduler that periodically adjusts the processor allocations within each set by consciously exploiting the jobs' execution history. We show that our algorithm achieves asymptotically competitive performance with respect to the set response time, which incorporates two widely used performance metrics, namely, total response time and makespan, as special cases. Both theoretical analysis and simulation results demonstrate that our algorithm improves upon an existing scheduler that provides only fairness but lacks efficiency. Furthermore, we provide a generalized framework for analyzing a family of scheduling algorithms based on feedback-driven policies with provable efficiency. Finally, we consider an extended multi-level hierarchical scheduling model and present a fair and efficient solution that effectively reduces the problem to the two-level model. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Competitive online adaptive scheduling for sets of parallel jobs with fairness and efficiency", "paper_id": "WOS:000331023800004"}