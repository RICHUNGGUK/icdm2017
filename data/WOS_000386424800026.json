{"auto_keywords": [{"score": 0.03300895443701465, "phrase": "permutation_methods"}, {"score": 0.00481495049065317, "phrase": "permutation_search_methods"}, {"score": 0.00471193241675062, "phrase": "faster_search"}, {"score": 0.004591202593942391, "phrase": "permutation-based_methods"}, {"score": 0.004551647527068771, "phrase": "approximate_k-nearest_neighbor_search"}, {"score": 0.004415857432588371, "phrase": "data_point"}, {"score": 0.0043213410601860985, "phrase": "ranked_list"}, {"score": 0.004014800383343256, "phrase": "underpinning_assumption"}, {"score": 0.003911862375084159, "phrase": "metric_and_non-metric_spaces"}, {"score": 0.0037786899855446, "phrase": "good_proxy"}, {"score": 0.003697760799674494, "phrase": "original_points"}, {"score": 0.0031502008922533894, "phrase": "extensive_experimental_evaluation"}, {"score": 0.003003579442221871, "phrase": "art_benchmarks"}, {"score": 0.0029265104401822203, "phrase": "lsh"}, {"score": 0.0027068691342344545, "phrase": "realistically_large_data"}, {"score": 0.002637377202509382, "phrase": "textual_domain"}, {"score": 0.0025585490847951703, "phrase": "high_accuracy_retrieval_methods"}, {"score": 0.0023767561522363367, "phrase": "main_memory"}, {"score": 0.0021049977753042253, "phrase": "data_sets"}], "paper_keywords": [""], "paper_abstract": "We survey permutation-based methods for approximate k-nearest neighbor search. In these methods, every data point is represented by a ranked list of pivots sorted by the distance to this point. Such ranked lists are called permutations. The underpinning assumption is that, for both metric and non-metric spaces, the distance between permutations is a good proxy for the distance between original points. Thus, it should be possible to efficiently retrieve most true nearest neighbors by examining only a tiny subset of data points whose permutations are similar to the permutation of a query. We further test this assumption by carrying out an extensive experimental evaluation where permutation methods are pitted against state-of-the art benchmarks (the multi-probe LSH, the VP-tree, and proximity-graph based retrieval) on a variety of realistically large data set from the image and textual domain. The focus is on the high accuracy retrieval methods for generic spaces. Additionally, we assume that both data and indices are stored in main memory. We find permutation methods to be reasonably efficient and describe a setup where these methods are most useful. To ease reproducibility, we make our software and data sets publicly available.", "paper_title": "Permutation Search Methods are Efficient, Yet Faster Search is Possible", "paper_id": "WOS:000386424800026"}