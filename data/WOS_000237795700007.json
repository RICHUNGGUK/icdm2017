{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "nearest_neighbor"}, {"score": 0.004639612079116459, "phrase": "optimal_algorithms"}, {"score": 0.004546666837896004, "phrase": "nearest_neighbor_embracing_graph"}, {"score": 0.004322333439660409, "phrase": "-dimensional_space"}, {"score": 0.004026664041845776, "phrase": "communication_network"}, {"score": 0.003972673543700013, "phrase": "lower_expected_degree"}, {"score": 0.0039061983019451903, "phrase": "shorter_total_length"}, {"score": 0.003802135020791801, "phrase": "delaunay_triangulation"}, {"score": 0.0035779805381654438, "phrase": "point_set"}, {"score": 0.0034944094552943, "phrase": "particular_properties"}, {"score": 0.0032772504899699416, "phrase": "worst_case"}, {"score": 0.00305285084207725, "phrase": "utput_nne-graph"}, {"score": 0.002126458181856629, "phrase": "largest_vertex_degree"}, {"score": 0.0021049977753042253, "phrase": "nne-graph_d"}], "paper_keywords": ["computational geometry", " nearest neighbors", " network connections"], "paper_abstract": "This paper gives optimal algorithms for the construction of the Nearest Neighbor Embracing Graph (NNE-graph) of a given point set V of size n in the k-dimensional space (k-D) for k = 2,3. The NNE-graph provides another way of connecting points in a communication network, which has lower expected degree at each point and shorter total length of connections with respect to those using Delaunay triangulation. In fact, the NNE-graph can also be used as a tool to test whether a point set is randomly generated or has some particular properties. We show that in 2-D the NNE-graph can be constructed in optimal Theta(n(2)) time in the worst case. We also present an O(n log n + nd) time algorithm, where d is the Omega(log n)-th largest degree in the utput NNE-graph. The algorithm is optimal when d=O(log n). The algorithm is also sensitive to the structure of the NNE-graph, for instance when d=g.(log n), the number of edges in NNE-graph is bounded by O(gn log n) for any value g with 1 <= g <= n/log n. We finally propose an O(n log n + nd log d*) time algorithm for the problem in 3-D, where d and d* are the Omega(log n/log log n)-th largest vertex degree and the largest vertex degree in the NNE-graph, respectively. The algorithm is optimal when the largest vertex degree of the NNE-graph d* is O(log n/log log n).", "paper_title": "Construction of the nearest neighbor embracing graph of a point set", "paper_id": "WOS:000237795700007"}