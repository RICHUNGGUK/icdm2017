{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_algorithms"}, {"score": 0.004558289038745564, "phrase": "logical_descriptions"}, {"score": 0.004455409162867219, "phrase": "key_features"}, {"score": 0.004237138632255772, "phrase": "fundamental_similarities"}, {"score": 0.004179480763003705, "phrase": "superficially_very_dissimilar_algorithms"}, {"score": 0.003974675770375224, "phrase": "bakery"}, {"score": 0.0039205800273448095, "phrase": "lamport"}, {"score": 0.003867206750827, "phrase": "shared_memory"}, {"score": 0.0037971749182744334, "phrase": "ricart_and_agrawala_version"}, {"score": 0.0037454814403672697, "phrase": "message_passing"}, {"score": 0.0035133644847622383, "phrase": "bakery_algorithm"}, {"score": 0.0033872210664940817, "phrase": "formal_expression"}, {"score": 0.003265591844292821, "phrase": "logical_properties"}, {"score": 0.0032064196784562017, "phrase": "tarskian_event_structures"}, {"score": 0.002993887707344862, "phrase": "low-level_and_high-level_events"}, {"score": 0.0028082176224611542, "phrase": "quantification_language"}, {"score": 0.0027322025124213566, "phrase": "tarskian_system_execution"}, {"score": 0.0025047659706737215, "phrase": "formal_explication"}, {"score": 0.002403724423251419, "phrase": "abstract_proof"}, {"score": 0.002360132221690264, "phrase": "common_properties"}, {"score": 0.002327956449278255, "phrase": "mutual_exclusion"}, {"score": 0.0022857351723674004, "phrase": "informal_arguments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tarski structures", " Classification of algorithms", " Event structures", " Mutual exclusion", " Distributed algorithms", " Models of concurrency", " Many-sorted logics"], "paper_abstract": "We argue that logical descriptions of distributed algorithms can reveal key features of their high-level properties, and can serve to classify and explicate fundamental similarities even among superficially very dissimilar algorithms. As an illustration, we discuss two distinct mutual-exclusion algorithms: the Bakery algorithm of Lamport is for shared memory, and the Ricart and Agrawala version is for message passing. It is universally agreed that they are both instances of \"the Bakery algorithm\" family, but is there a formal expression of this affinity? Here we present logical properties expressed naturally in Tarskian event structures that allow us to capture the similarities precisely. We use the notions of low-level and high-level events to organize the comparison. We find a set of properties expressed in quantification language which are satisfied by every Tarskian system execution that models a run by either one of the protocols, and we suggest these properties as a formal explication for the similarity of the two algorithms. An abstract proof shows that these common properties imply the mutual exclusion, and the informal arguments explain the sense in which they capture the essence of the two Bakery algorithms. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Logical classification of distributed algorithms (Bakery algorithms as an example)", "paper_id": "WOS:000291087100003"}