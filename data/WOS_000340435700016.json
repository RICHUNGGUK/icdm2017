{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "imperialist_competition_algorithm"}, {"score": 0.049618672169140725, "phrase": "independent_task_scheduling"}, {"score": 0.0360038609002821, "phrase": "grid_environment"}, {"score": 0.004722791767189843, "phrase": "grid_computing"}, {"score": 0.004654826737377134, "phrase": "grid_computing_environment"}, {"score": 0.004543708337879809, "phrase": "distributed_computation"}, {"score": 0.004185289462328125, "phrase": "heterogeneous_resources"}, {"score": 0.004125027493339274, "phrase": "grid_system"}, {"score": 0.004085333687668526, "phrase": "location-independent_access"}, {"score": 0.003949377440799037, "phrase": "geographically_distributed_machines"}, {"score": 0.0038924989779389424, "phrase": "essential_ingredient"}, {"score": 0.0038364365168131586, "phrase": "location-independent_computations"}, {"score": 0.0034995881411519925, "phrase": "grid_users"}, {"score": 0.0032546105164772995, "phrase": "decentralized_resources"}, {"score": 0.0031922210879462513, "phrase": "grid_resource_scheduling"}, {"score": 0.002968695624366393, "phrase": "changing_conditions"}, {"score": 0.002855934865505357, "phrase": "infrastructure_communication"}, {"score": 0.002760778494680823, "phrase": "scheduling_tasks"}, {"score": 0.0027209713296448296, "phrase": "computational_grid"}, {"score": 0.0023759728305710365, "phrase": "experimental_results"}, {"score": 0.0023531202929766718, "phrase": "ica"}, {"score": 0.002252701813819903, "phrase": "shorter_makespan_relative"}], "paper_keywords": ["Grid computing", " scheduling", " artificial intelligence algorithm", " imperialist competition algorithm (ICA)", " independent task scheduling"], "paper_abstract": "A grid computing environment provides a type of distributed computation that is unique because it is not centrally managed and it has the capability to connect heterogeneous resources. A grid system provides location-independent access to the resources and services of geographically distributed machines. An essential ingredient for supporting location-independent computations is the ability to discover resources that have been requested by the users. Because the number of grid users can increase and the grid environment is continuously changing, a scheduler that can discover decentralized resources is needed. Grid resource scheduling is considered to be a complicated, NP-hard problem because of the distribution of resources, the changing conditions of resources, and the unreliability of infrastructure communication. Various artificial intelligence algorithms have been proposed for scheduling tasks in a computational grid. This paper uses the imperialist competition algorithm (ICA) to address the problem of independent task scheduling in a grid environment, with the aim of reducing the makespan. Experimental results compare ICA with other algorithms and illustrate that ICA finds a shorter makespan relative to the others. Moreover, it converges quickly, finding its optimum solution in less time than the other algorithms.", "paper_title": "Using imperialist competition algorithm for independent task scheduling in grid computing", "paper_id": "WOS:000340435700016"}