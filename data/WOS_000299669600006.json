{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimisation_algorithms"}, {"score": 0.03250599422606808, "phrase": "planning_model"}, {"score": 0.004766683200410046, "phrase": "pervasive_computing_environments"}, {"score": 0.004624751696958501, "phrase": "model-driven_approach"}, {"score": 0.004555371402128666, "phrase": "pervasive_computing_applications"}, {"score": 0.0044870272550540415, "phrase": "design-time_information"}, {"score": 0.004016072233242585, "phrase": "application_domain"}, {"score": 0.003704797078215222, "phrase": "pervasive_computing_domains"}, {"score": 0.003576286811853861, "phrase": "layered_domain_model"}, {"score": 0.003469676666252421, "phrase": "object-oriented_specifications"}, {"score": 0.0031845067058084583, "phrase": "initial_transformation"}, {"score": 0.0031366648074858555, "phrase": "domain_model"}, {"score": 0.0029374939071038146, "phrase": "application's_states"}, {"score": 0.0028355237433457313, "phrase": "second_transformation"}, {"score": 0.002682370021834353, "phrase": "optimisation_algorithm"}, {"score": 0.0025503112711036994, "phrase": "empirical_evaluation"}, {"score": 0.0024493494346360415, "phrase": "development_effort"}, {"score": 0.002282166507956957, "phrase": "quantitative_evaluation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model-driven engineering", " Planning", " Optimisation", " Sensor Fusion", " State Inference"], "paper_abstract": "This paper presents a model-driven approach to developing pervasive computing applications that exploits design-time information to support the engineering of planning and optimisation algorithms that reflect the presence of uncertainty, dynamism and complexity in the application domain. In particular, the task of generating code to implement planning and optimisation algorithms in pervasive computing domains is addressed. We present a layered domain model that provides a set of object-oriented specifications for modelling physical and sensor/actuator infrastructure and state-space information. Our model-driven engineering approach is implemented in two transformation algorithms. The initial transformation parses the domain model and generates a planning model for the application being developed that encodes an application's states, actions and rewards. The second transformation parses the planning model and selects and seeds a planning or optimisation algorithm for use in the application. We present an empirical evaluation of the impact of our approach on the development effort associated with two pervasive computing applications from the Intelligent Transportation Systems (ITS) domain, and provide a quantitative evaluation of the performance of the algorithms generated by the transformations. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Model-driven engineering of planning and optimisation algorithms for pervasive computing environments", "paper_id": "WOS:000299669600006"}