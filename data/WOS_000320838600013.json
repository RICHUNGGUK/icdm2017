{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "nfa"}, {"score": 0.015310673814363135, "phrase": "signature-based_intrusion_detection"}, {"score": 0.007870353447155854, "phrase": "regular_expression"}, {"score": 0.007397165181754608, "phrase": "regular_expression_matching"}, {"score": 0.006167840397747739, "phrase": "constant_throughput"}, {"score": 0.005770750888399338, "phrase": "large_pattern_sets"}, {"score": 0.004544770921520536, "phrase": "network_traffic"}, {"score": 0.004444921827311577, "phrase": "packet_payloads"}, {"score": 0.004289686492089576, "phrase": "computation_intensive_task"}, {"score": 0.004158290806404304, "phrase": "hardware_accelerator"}, {"score": 0.004013025478863664, "phrase": "active_research_area"}, {"score": 0.003959863717046575, "phrase": "systematic_approach"}, {"score": 0.003838531755488468, "phrase": "finite_automaton"}, {"score": 0.0036715973701254823, "phrase": "deterministic_finite_automaton"}, {"score": 0.003639109049653367, "phrase": "dfa"}, {"score": 0.0035908627899097407, "phrase": "non-deterministic_finite_automaton"}, {"score": 0.003299880298525127, "phrase": "state_explosion_problem"}, {"score": 0.0031562971707460802, "phrase": "embedded_device"}, {"score": 0.003128336741911927, "phrase": "limited_on-chip_memory"}, {"score": 0.0030189426536422577, "phrase": "linear_space"}, {"score": 0.0028492532869274743, "phrase": "hardwired_circuits"}, {"score": 0.0027989800906333784, "phrase": "speed_deficiency"}, {"score": 0.0027495914857929584, "phrase": "massive_parallelism"}, {"score": 0.0027131212233443137, "phrase": "dedicated_hardware_circuitries"}, {"score": 0.0026182085765020548, "phrase": "efficient_dynamic_updates"}, {"score": 0.0025042115651986332, "phrase": "memory-based_architecture"}, {"score": 0.002321665383971456, "phrase": "dynamic_updates"}, {"score": 0.0021910825909008946, "phrase": "existing_dfa-based_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Signature-based intrusion detection", " Regular expression matching", " Non-deterministic finite automaton", " Memory-based architecture"], "paper_abstract": "Signature-based intrusion detection is required to inspect network traffic at wire-speed. Matching packet payloads against patterns specified with regular expression is a computation intensive task. Hence, the design of hardware accelerator to speed up regular expression matching has been an active research area. A systematic approach to detect regular expression is based on finite automaton. The space-time trade-off between deterministic finite automaton (DFA) and non-deterministic finite automaton (NFA) is well-known. DFA can offer constant throughput but it may suffer from the state explosion problem. Hence, implementation of DFA for large pattern sets on embedded device with limited on-chip memory may not be viable. NFA requires linear space but the throughput can be very low. Implementations of NFA with hardwired circuits can overcome the speed deficiency by exploiting the massive parallelism offered by dedicated hardware circuitries, but this approach does not support efficient dynamic updates. In this paper, we shall present a memory-based architecture for the implementation of NFA to speed up regular expression matching for signature-based intrusion detection. The proposed method supports dynamic updates and offers constant throughput so that it can be used to supplement the existing DFA-based methods in handling large pattern sets. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A memory-based NFA regular expression match engine for signature-based intrusion detection", "paper_id": "WOS:000320838600013"}