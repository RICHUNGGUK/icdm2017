{"auto_keywords": [{"score": 0.04881990207677593, "phrase": "session_types"}, {"score": 0.00481495049065317, "phrase": "software_components"}, {"score": 0.003995226376780718, "phrase": "behavioural_information"}, {"score": 0.0038900709793274484, "phrase": "simple_descriptions"}, {"score": 0.003687960013746783, "phrase": "software_component_interfaces"}, {"score": 0.0029394074636168435, "phrase": "powerful_interoperability_tests"}, {"score": 0.002824005136794786, "phrase": "protocol_level"}, {"score": 0.0027495914857929584, "phrase": "namely_compatibility"}, {"score": 0.002438203996977464, "phrase": "decidable_proof_system"}, {"score": 0.0021049977753042253, "phrase": "pragmatic_nature"}], "paper_keywords": [""], "paper_abstract": "This paper proposes the use of session types to extend with behavioural information the simple descriptions usually provided by software component interfaces. We show how session types allow not only high level specifications of complex interactions, but also the definition of powerful interoperability tests at the protocol level, namely compatibility and substitutability of components. We present a decidable proof system to verify these notions, which makes our approach of a pragmatic nature.", "paper_title": "Typing the behavior of software components using session types", "paper_id": "WOS:000242909600007"}