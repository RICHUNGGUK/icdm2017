{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "de-frag"}, {"score": 0.018453627973984636, "phrase": "data_placement"}, {"score": 0.010328415709190464, "phrase": "deduplication_performance"}, {"score": 0.010209027698725637, "phrase": "data_placement_de-linearization"}, {"score": 0.009301832904921392, "phrase": "redundant_data"}, {"score": 0.008311622685235555, "phrase": "data_spatial_locality"}, {"score": 0.005995850223152916, "phrase": "spatial_locality"}, {"score": 0.004471270242168067, "phrase": "large-scale_storage_systems"}, {"score": 0.004402088928254543, "phrase": "data_backup"}, {"score": 0.004367898947304223, "phrase": "archival_systems"}, {"score": 0.004184526032558792, "phrase": "data_deduplication_de-linearizes_data_placement"}, {"score": 0.003977672712305348, "phrase": "multiple_separate_units"}, {"score": 0.0035245918797629804, "phrase": "deduplication_approaches"}, {"score": 0.0032220148724914867, "phrase": "negative_effect"}, {"score": 0.0030865992688177005, "phrase": "effective_approach"}, {"score": 0.002956858061485755, "phrase": "key_idea"}, {"score": 0.002681859084438076, "phrase": "chunk_group"}, {"score": 0.0026609940110902666, "phrase": "spatial_locality_level"}, {"score": 0.0025690867646665835, "phrase": "redundant_chunks"}, {"score": 0.0025292620341476283, "phrase": "spl_value"}, {"score": 0.0024803459795996116, "phrase": "preset_value"}, {"score": 0.0022939396079753463, "phrase": "real_world"}, {"score": 0.0022146817879683204, "phrase": "deduplication_throughput"}, {"score": 0.002197443382039439, "phrase": "deduplication_efficiency"}, {"score": 0.0021049977753042253, "phrase": "slightly_lower_compression_ratios"}], "paper_keywords": ["Data deduplication", " Data placement de-linearization", " Spatial locality"], "paper_abstract": "Data deduplication has become a commodity in large-scale storage systems, especially in data backup and archival systems. However, due to the removal of redundant data, data deduplication de-linearizes data placement and forces the data chunks of the same data object to be divided into multiple separate units. In our preliminary study, we found that the de-linearization of data placement compromises the data spatial locality that is used to improve data read performance, deduplication throughput and deduplication efficiency in some deduplication approaches, which significantly affects deduplication performance and makes some deduplication approaches become less effective. In this paper, we first analyze the negative effect of data placement de-linearization to deduplication performance, and then propose an effective approach called De-Frag to reduce the de-linearization of data placement. The key idea of De-Frag is to choose some redundant data to be written to the disks rather than be removed. It quantifies the spatial locality of each chunk group by spatial locality level (SPL for short) and writes the redundant chunks to disks when SPL value is smaller than a preset value, thus to reduce the de-linearization of data placement and enhance the spatial locality. As shown in our experimental results driven by real world datasets, De-Frag effectively enhances data spatial locality and improves deduplication throughput, deduplication efficiency, and data read performance, at the cost of slightly lower compression ratios.", "paper_title": "De-Frag: an efficient scheme to improve deduplication performance via reducing data placement de-linearization", "paper_id": "WOS:000350395500006"}