{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "safe_delay"}, {"score": 0.004389745162172933, "phrase": "combinatorial_problems"}, {"score": 0.003978866233891427, "phrase": "reformulation_technique"}, {"score": 0.003523822585025555, "phrase": "soundness_proof"}, {"score": 0.003463196032143783, "phrase": "safe-delay_constraints"}, {"score": 0.0031569846310720135, "phrase": "automated_reformulation"}, {"score": 0.0030492472433481764, "phrase": "great_variety"}, {"score": 0.0022565201625076876, "phrase": "proposed_technique"}, {"score": 0.0022305310659333864, "phrase": "six_different_solvers"}, {"score": 0.0021794454466797382, "phrase": "promising_time_savings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["modelling", " reformulation", " second-order logic", " propositional satisfiability", " constraint satisfaction problems"], "paper_abstract": "In this paper we propose a form of reasoning on specifications of combinatorial problems, with the goal of reformulating them so that they are more efficiently solvable. The reformulation technique highlights constraints that can be safely \"delayed\", and solved afterwards. Our main contribution is the characterization (with soundness proof) of safe-delay constraints with respect to a criterion on the specification, thus obtaining a mechanism for the automated reformulation of specifications applicable to a great variety of problems, e.g., graph coloring, bin-packing, and job-shop scheduling. This is an advancement with respect to the forms of reasoning done by state-of-the-art-systems, which typically just detect linearity of specifications. Another contribution is an experimentation on the effectiveness of the proposed technique using six different solvers, which reveals promising time savings. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Automated reformulation of specifications by safe delay of constraints", "paper_id": "WOS:000237752300006"}