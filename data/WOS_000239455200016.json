{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "extreme_programming"}, {"score": 0.038715940575402084, "phrase": "incremental_development_processes"}, {"score": 0.004553510708976456, "phrase": "critical_part"}, {"score": 0.00445293569103488, "phrase": "systems_development"}, {"score": 0.004258372598568333, "phrase": "web-based_systems"}, {"score": 0.0031140747752837826, "phrase": "extreme_programming_practices"}, {"score": 0.0028795712616923462, "phrase": "system_functionality"}, {"score": 0.0024346858809238766, "phrase": "high_quality_security_solutions"}, {"score": 0.002251227801482381, "phrase": "security_requirements"}, {"score": 0.0021049977753042253, "phrase": "planning_game"}], "paper_keywords": [""], "paper_abstract": "Security is a critical part of systems development, particularly for web-based systems. There is little known about how to effectively integrate security into incremental development processes such as Extreme Programming. This paper presents the results of a project that used Extreme Programming practices and deferred consideration of security until system functionality was complete. The findings suggest that refactorings within incremental development processes are capable of delivering high quality security solutions, and provide insights into how security requirements can be incorporated in the planning game.", "paper_title": "Security planning and refactoring in Extreme Programming", "paper_id": "WOS:000239455200016"}