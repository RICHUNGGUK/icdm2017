{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "regression_test_suite_selection"}, {"score": 0.004714023408114857, "phrase": "dependence_analysis"}, {"score": 0.0046544807197808095, "phrase": "extended_finite_state_machine_representation"}, {"score": 0.004116139569480336, "phrase": "particular_types"}, {"score": 0.003813669883040509, "phrase": "changed_parts"}, {"score": 0.0036553070575015344, "phrase": "unchanged_parts"}, {"score": 0.003578600071301459, "phrase": "recent_work"}, {"score": 0.003548368289666932, "phrase": "model-based_regression_testing"}, {"score": 0.0034738975998176323, "phrase": "direct_effects"}, {"score": 0.0034445472801689046, "phrase": "side_effects"}, {"score": 0.00327356326590461, "phrase": "regression_test_suite"}, {"score": 0.003071682293903262, "phrase": "rts_prioritization"}, {"score": 0.003032820755030689, "phrase": "test_cases"}, {"score": 0.0029691377785333872, "phrase": "early_fault_detection"}, {"score": 0.0029067881142952664, "phrase": "rts_generation"}, {"score": 0.002857849698346116, "phrase": "test_suite"}, {"score": 0.002821685815956478, "phrase": "identified_dependencies"}, {"score": 0.0027390682208834013, "phrase": "additional_use"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["regression testing", " extended finite state machine", " control dependence", " data dependence", " regression test suite selection"], "paper_abstract": "Dependence analysis on an Extended Finite State Machine representation of the requirements of a system under test identifies various types of control and data dependencies between transitions caused by a set of modifications on the requirements. These particular types of dependencies capture the effects of the modifications, that is, their direct effects on the changed parts of the system and their side effects on the unchanged parts of the system. Recent work on model-based regression testing shows that dependencies capturing direct effects and side effects of the changes made on the requirements can be used for regression test suite (RTS) reduction (reducing the size of a given test suite by eliminating redundancies), for RTS prioritization (ordering test cases in a given test suite for early fault detection), or for RTS generation (designing a test suite covering the identified dependencies). This paper proposes an additional use of such dependencies, namely, RTS selection, which is the process of selecting a subset of a given test suite to form an RTS by considering the coverage of dependencies related to the effects of the modifications. The dependencies marked during this process as uncovered provide a basis for augmenting an (incomplete) RTS with test cases covering uncovered dependencies. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Regression test suite selection using dependence analysis", "paper_id": "WOS:000326241300002"}