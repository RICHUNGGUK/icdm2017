{"auto_keywords": [{"score": 0.04873421514249172, "phrase": "monotonicity_testing"}, {"score": 0.008713768692145006, "phrase": "graph_products"}, {"score": 0.004511373893354558, "phrase": "central_problems"}, {"score": 0.0044025116437190785, "phrase": "property_testing"}, {"score": 0.004313793774439379, "phrase": "testing_approach"}, {"score": 0.004209679094023478, "phrase": "known_monotonicity_testers"}, {"score": 0.003802135020791801, "phrase": "graph_product"}, {"score": 0.003725470458263889, "phrase": "original_graphs"}, {"score": 0.003605997900398767, "phrase": "special_case"}, {"score": 0.0034761488481944657, "phrase": "limited_type"}, {"score": 0.0032302647179383915, "phrase": "modular_design"}, {"score": 0.002941147710077221, "phrase": "general_range"}, {"score": 0.0028006988338192375, "phrase": "careful_use"}, {"score": 0.0027330029055210926, "phrase": "query_complexity"}, {"score": 0.0027108021939930014, "phrase": "known_testers"}, {"score": 0.0025918745925152423, "phrase": "new_analysis"}, {"score": 0.002560352786969071, "phrase": "known_tester"}, {"score": 0.0024480094603893175, "phrase": "low-dimensional_case"}, {"score": 0.0022933216359142736, "phrase": "best_known_query_complexity"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["property testing", " monotonicity testing", " graph products"], "paper_abstract": "We consider the problem of monotonicity testing over graph products. Monotonicity testing is one of the central problems studied in the field of property testing. We present a testing approach that enables us to use known monotonicity testers for given graphs G(1), G(2), to test monotonicity over their product G(1) x G(2). Such an approach of reducing monotonicity testing over a graph product to monotonicity testing over the original graphs, has been previously used in the special case of monotonicity testing over [n](d) for a limited type of testers; in this article, we show that this approach can be applied to allow modular design of testers in many interesting cases: this approach works whenever the functions are boolean, and also in certain cases for functions with a general range. We demonstrate the usefulness of our results by showing how a careful use of this approach improves the query complexity of known testers. Specifically, based on our results, we provide a new analysis for the known tester for [n](d) which significantly improves its query complexity analysis in the low-dimensional case. For example, when d = 0 (1), we reduce the best known query complexity from O(log(2) n/is an element of) to O(log n/is an element of). (C) 2008 Wiley Periodicals, Inc.", "paper_title": "Testing monotonicity over graph products", "paper_id": "WOS:000257500200003"}