{"auto_keywords": [{"score": 0.0340341835646943, "phrase": "proposed_framework"}, {"score": 0.00481495049065317, "phrase": "clustering_algorithms"}, {"score": 0.004776484866276242, "phrase": "balancing_constraints"}, {"score": 0.004681653551412616, "phrase": "data-mining_problems"}, {"score": 0.004497576466646301, "phrase": "mining_applications"}, {"score": 0.004286171444202565, "phrase": "approximately_the_same_size"}, {"score": 0.004101088357088207, "phrase": "general_framework"}, {"score": 0.003971502222405927, "phrase": "data_clustering_process"}, {"score": 0.0038152404172111815, "phrase": "small_representative_subset"}, {"score": 0.003694652993546994, "phrase": "sampled_data"}, {"score": 0.0036212219870826725, "phrase": "initial_clusters"}, {"score": 0.0035778632599436024, "phrase": "remaining_data"}, {"score": 0.0034232607917050392, "phrase": "simple_uniform_sampling"}, {"score": 0.0033822643082593285, "phrase": "original_data"}, {"score": 0.003301733505307784, "phrase": "representative_subset"}, {"score": 0.0032753168662834516, "phrase": "high_probability"}, {"score": 0.0031845067058084583, "phrase": "large_class"}, {"score": 0.003071429173571846, "phrase": "sampled_set"}, {"score": 0.0029982770062678926, "phrase": "popular_parametric_algorithms"}, {"score": 0.0026577673946415583, "phrase": "stable_marriage_problem"}, {"score": 0.002615381301695394, "phrase": "refinement_algorithm"}, {"score": 0.0025840347813610815, "phrase": "constrained_iterative_relocation_scheme"}, {"score": 0.0025224615049571427, "phrase": "overall_method"}, {"score": 0.0024623517958288228, "phrase": "k_balanced_clusters"}, {"score": 0.002442634456448208, "phrase": "n_data_points"}, {"score": 0.0023653276631862958, "phrase": "balanced_clustering"}, {"score": 0.002308953751676031, "phrase": "balancing_guarantees"}, {"score": 0.0022812715029149216, "phrase": "clustering_performance"}, {"score": 0.002165091261117016, "phrase": "corresponding_unconstrained_solution"}, {"score": 0.002147749117443578, "phrase": "experimental_results"}], "paper_keywords": ["scalable clustering", " balanced clustering", " constrained clustering", " sampling", " stable marriage problem", " text clustering"], "paper_abstract": "Clustering methods for data-mining problems must be extremely scalable. In addition, several data mining applications demand that the clusters obtained be balanced, i.e., of approximately the same size or importance. In this paper, we propose a general framework for scalable, balanced clustering. The data clustering process is broken down into three steps: sampling of a small representative subset of the points, clustering of the sampled data, and populating the initial clusters with the remaining data followed by refinements. First, we show that a simple uniform sampling from the original data is sufficient to get a representative subset with high probability. While the proposed framework allows a large class of algorithms to be used for clustering the sampled set, we focus on some popular parametric algorithms for ease of exposition. We then present algorithms to populate and refine the clusters. The algorithm for populating the clusters is based on a generalization of the stable marriage problem, whereas the refinement algorithm is a constrained iterative relocation scheme. The complexity of the overall method is O(kN log N) for obtaining k balanced clusters from N data points, which compares favorably with other existing techniques for balanced clustering. In addition to providing balancing guarantees, the clustering performance obtained using the proposed framework is comparable to and often better than the corresponding unconstrained solution. Experimental results on several datasets, including high-dimensional (> 20,000) ones, are provided to demonstrate the efficacy of the proposed framework.", "paper_title": "Scalable clustering algorithms with balancing constraints", "paper_id": "WOS:000240806300005"}