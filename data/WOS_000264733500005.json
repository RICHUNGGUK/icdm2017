{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "thousand_tiles"}, {"score": 0.004399905285945236, "phrase": "novel_way"}, {"score": 0.004301834610818624, "phrase": "self-assembling_systems"}, {"score": 0.003701401653850141, "phrase": "cellular_automata"}, {"score": 0.003591733916159209, "phrase": "purely_geometrical_constructions"}, {"score": 0.003485304124598714, "phrase": "smaller_specification"}, {"score": 0.0034332736827447654, "phrase": "easier_analysis"}, {"score": 0.0026583500966092044, "phrase": "desired_shapes"}, {"score": 0.0023745087648471613, "phrase": "optimal_assembly_time"}, {"score": 0.0023214774334744713, "phrase": "small_number"}, {"score": 0.00223570488212345, "phrase": "general_polygons"}, {"score": 0.0022022878843247257, "phrase": "arbitrarily_good_resolution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Self-assembly", " Signals", " Geometry", " Programming"], "paper_abstract": "We present a novel way to design self-assembling systems using a notion of signal (or ray) akin to what is used in analyzing the behaviour of cellular automata. This allows purely geometrical constructions, with a smaller specification and easier analysis. We show how to design a system of signals for a given set of shapes, and how to transform these signals into a set of tiles which self-assemble into the desired shapes. We show how to use this technique on two examples: squares (with optimal assembly time and a small number of tiles) and general polygons with arbitrarily good resolution. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Pictures worth a thousand tiles, a geometrical programming language for self-assembly", "paper_id": "WOS:000264733500005"}