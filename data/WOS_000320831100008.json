{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "personalized_web_accessibility"}, {"score": 0.004723322467153553, "phrase": "client-side_refactoring"}, {"score": 0.003750260412839128, "phrase": "separate_accessible_applications"}, {"score": 0.003215295260684715, "phrase": "common_solution"}, {"score": 0.0030642636185693054, "phrase": "single_application"}, {"score": 0.0029203055813347874, "phrase": "accessible_view"}, {"score": 0.0026523079380037706, "phrase": "requested_page_-_a_solution"}, {"score": 0.0024556852466581527, "phrase": "third_solution"}, {"score": 0.002273605493468005, "phrase": "web_accessibility"}, {"score": 0.0021876814398268775, "phrase": "interface_refactorings"}], "paper_keywords": [""], "paper_abstract": "According to W3C accessibility standards, most Web applications are neither accessible nor usable for people with disabilities. Developers often solve this problem by building separate accessible applications, but these are seldom usable and typically offer less functionality than the original. Another common solution is to maintain a single application, but create an accessible view by applying on-the-fly transformations to each requested page - a solution that rarely suits all audiences. A third solution is described here: let users improve Web accessibility in their client browsers through interface refactorings, which offer many customized, accessible views of a single application.", "paper_title": "Personalized Web Accessibility using Client-Side Refactoring", "paper_id": "WOS:000320831100008"}