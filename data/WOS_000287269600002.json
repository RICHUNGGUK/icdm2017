{"auto_keywords": [{"score": 0.04913548507380238, "phrase": "cold_rolling_scheduling"}, {"score": 0.00481495049065317, "phrase": "salesman_problem"}, {"score": 0.004673290248999786, "phrase": "parallel_computing"}, {"score": 0.0046269981365987915, "phrase": "efficient_solutions"}, {"score": 0.004581162468419365, "phrase": "combinatorial_optimization_problem"}, {"score": 0.004402295697276237, "phrase": "computing_processes"}, {"score": 0.0040854526743211396, "phrase": "substantial_expenditures"}, {"score": 0.003753738096719609, "phrase": "parallel_immune_algorithm"}, {"score": 0.0036980501827538455, "phrase": "graphic_processing_unit"}, {"score": 0.003661661648101646, "phrase": "gpu"}, {"score": 0.0035183010916001664, "phrase": "computer_graphics"}, {"score": 0.0034834098902271626, "phrase": "display_adapter"}, {"score": 0.0034146585649631692, "phrase": "genetic_operators"}, {"score": 0.0033140589981208693, "phrase": "taboo_list"}, {"score": 0.0032164136388931805, "phrase": "internal_memory_utility"}, {"score": 0.0031845067058084583, "phrase": "gpu_structure"}, {"score": 0.00299958349498286, "phrase": "proposed_algorithm"}, {"score": 0.002797329638474873, "phrase": "proposed_techniques"}, {"score": 0.0027557911038816256, "phrase": "simulation_examples"}, {"score": 0.002701361707441567, "phrase": "developed_method"}, {"score": 0.002634830238219976, "phrase": "computing_efficiency"}, {"score": 0.002349228457383314, "phrase": "derived_algorithm"}, {"score": 0.0022913497040895586, "phrase": "practical_application"}, {"score": 0.002268598551466928, "phrase": "steel_industry"}, {"score": 0.002168975681697056, "phrase": "steel_coils"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Parallel immune algorithm", " Graphics processing unit", " Traveling salesman problem", " Cold rolling scheduling"], "paper_abstract": "Parallel computing provides efficient solutions for combinatorial optimization problem. However, since the communications among computing processes are rather cost-consuming, the actual parallel or distributed algorithm comes with substantial expenditures, such as, hardware, management, and maintenance. In this study, a parallel immune algorithm based on graphic processing unit (GPU) that originally comes to process the computer graphics in display adapter is proposed. Genetic operators and a structure of vaccine taboo list are designed, and the internal memory utility of GPU structure is optimized. To verify the effectiveness and efficiency of the proposed algorithm, various middle-scale traveling salesman problems (TSP) are employed to demonstrate the potential of the proposed techniques. The simulation examples demonstrate that the developed method can greatly improve the computing efficiency for solving the TSP, and the results are more remarkable when the scale of TSP becomes higher. Furthermore, the derived algorithm is verified by a practical application in steel industry that arranges the cold rolling scheduling of a batch of steel coils. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A parallel immune algorithm for traveling salesman problem and its application on cold rolling scheduling", "paper_id": "WOS:000287269600002"}