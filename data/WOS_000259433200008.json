{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "matlab"}, {"score": 0.004680851157467745, "phrase": "argyris_element"}, {"score": 0.0044237033788643715, "phrase": "new_algorithm"}, {"score": 0.004300453431933622, "phrase": "basis_functions"}, {"score": 0.0042102651938187114, "phrase": "argyris_finite_element"}, {"score": 0.004064117897000019, "phrase": "main_novelty"}, {"score": 0.003950846696972114, "phrase": "efficient_way"}, {"score": 0.0035283552859817764, "phrase": "argyis_element"}, {"score": 0.0033579708256295847, "phrase": "arbitrary_triangle"}, {"score": 0.0030630037175103032, "phrase": "strong_block_structure"}, {"score": 0.002548331088496964, "phrase": "smooth_function"}, {"score": 0.0023408288327263316, "phrase": "dirichlet_problem"}, {"score": 0.002196342933346204, "phrase": "last_section"}], "paper_keywords": ["algorithms", " documentation", " Argyris element", " finite elements", " Matlab"], "paper_abstract": "In this work we propose a new algorithm to evaluate the basis functions of the Argyris finite element and their derivatives. The main novelty here is an efficient way to calculate the matrix which gives the change of coordinates between the bases of the Argyis element for the reference and for an arbitrary triangle. This matrix is factored as the product of two rectangular matrices with a strong block structure which makes their computation very easy. We show and comment on an implementation of this algorithm in Matlab. Two numerical experiments, an interpolation of a smooth function on a triangle and the finite-element solution of the Dirichlet problem for the biLaplacian, are presented in the last section to check the performance of our implementation.", "paper_title": "A simple Matlab implementation of the Argyris element", "paper_id": "WOS:000259433200008"}