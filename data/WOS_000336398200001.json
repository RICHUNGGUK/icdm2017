{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "embedded_real-time_systems"}, {"score": 0.004695183699894267, "phrase": "runtime_verification_framework"}, {"score": 0.004624751696958501, "phrase": "on-line_monitoring"}, {"score": 0.0043753813457279404, "phrase": "observer_algorithms"}, {"score": 0.004309725894724034, "phrase": "time-bounded_modalities"}, {"score": 0.004118587636081584, "phrase": "highly_parallel_nature"}, {"score": 0.004077272409331917, "phrase": "hardware_designs"}, {"score": 0.003916098498242888, "phrase": "efficient_hardware_blocks"}, {"score": 0.003558294449586273, "phrase": "post-deployment_phase"}, {"score": 0.003452218803245602, "phrase": "formal_correctness_proofs"}, {"score": 0.0034003686971964707, "phrase": "presented_observer_algorithms"}, {"score": 0.0033156708990372047, "phrase": "space_complexity"}, {"score": 0.0029973957125353306, "phrase": "time_complexity"}, {"score": 0.0023170054862555896, "phrase": "field_programmable_gate_array_platform"}, {"score": 0.002282166507956957, "phrase": "extensive_simulation"}, {"score": 0.0022592313766072658, "phrase": "logic_synthesis"}, {"score": 0.0021263705039915198, "phrase": "resource_usage"}, {"score": 0.0021049977753042253, "phrase": "operating_frequency"}], "paper_keywords": ["Runtime verification", " Embedded real-time systems", " Past-time logics", " Online monitoring"], "paper_abstract": "We present a runtime verification framework that allows on-line monitoring of past-time Metric Temporal Logic (ptMTL) specifications in a discrete time setting. We design observer algorithms for the time-bounded modalities of ptMTL, which take advantage of the highly parallel nature of hardware designs. The algorithms can be translated into efficient hardware blocks, which are designed for reconfigurability, thus, facilitate applications of the framework in both a prototyping and a post-deployment phase of embedded real-time systems. We provide formal correctness proofs for all presented observer algorithms and analyze their time and space complexity. For example, for the most general operator considered, the time-bounded Since operator, we obtain a time complexity that is doubly logarithmic both in the point in time the operator is executed and the operator's time bounds. This result is promising with respect to a self-contained, non-interfering monitoring approach that evaluates real-time specifications in parallel to the system-under-test. We implement our framework on a Field Programmable Gate Array platform and use extensive simulation and logic synthesis runs to assess the benefits of the approach in terms of resource usage and operating frequency.", "paper_title": "Runtime verification of embedded real-time systems", "paper_id": "WOS:000336398200001"}