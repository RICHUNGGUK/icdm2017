{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "neural_p_systems"}, {"score": 0.004721162131188487, "phrase": "exhaustive_use"}, {"score": 0.004421471944783611, "phrase": "new_type"}, {"score": 0.004363846362238565, "phrase": "rule_application"}, {"score": 0.003928969293303814, "phrase": "exhaustive_manner"}, {"score": 0.002962543869356265, "phrase": "neighboring_neurons"}, {"score": 0.0025807396931129926, "phrase": "time_units"}, {"score": 0.0025137856138000014, "phrase": "first_two_steps"}, {"score": 0.0022928018832993387, "phrase": "computational_completeness"}, {"score": 0.0022041312401435346, "phrase": "number_generating_devices"}], "paper_keywords": ["membrane computing", " P system", " neural computing", " spiking", " universality", " parallel computing"], "paper_abstract": "We consider spiking neural P systems with a new type of rule application: whenever a rule is enabled in a neuron, it is used in an exhaustive manner, i.e., as many times as possible for the number of spikes from that neuron. Thus, also the number of spikes produced at a time in that neuron can be arbitrarily large; all produced spikes are transmitted to neighboring neurons through synapses. A result is associated with a computation as usual, in the form of the number of time units elapsed between the first two steps when the Output neuron spikes. In this framework, we prove the computational completeness of Our systems, both as number generating devices and as number accepting devices. Several research topics are also pointed out.", "paper_title": "Spiking neural P systems with an exhaustive use of rules", "paper_id": "WOS:000258953900005"}