{"auto_keywords": [{"score": 0.04905770654153594, "phrase": "sctp"}, {"score": 0.04818222453323992, "phrase": "cmt"}, {"score": 0.03847189371335583, "phrase": "tcp"}, {"score": 0.006414187446917117, "phrase": "cmt."}, {"score": 0.005103820978137145, "phrase": "higher_throughput"}, {"score": 0.004875636736052635, "phrase": "tcp-tahoe"}, {"score": 0.00481495049065317, "phrase": "concurrent_multipath_transfer"}, {"score": 0.004776235281195212, "phrase": "prior_work"}, {"score": 0.004737829884207618, "phrase": "cmt_protocol"}, {"score": 0.004525933853024444, "phrase": "application_throughput"}, {"score": 0.0045016334738023495, "phrase": "sctp-based_cmt"}, {"score": 0.004497449020964545, "phrase": "aggregated_performance"}, {"score": 0.004197301239681007, "phrase": "historical_developments"}, {"score": 0.004163531538667519, "phrase": "tcp-friendliness_concept"}, {"score": 0.004107848907565576, "phrase": "original_tcp-friendliness_doctrine"}, {"score": 0.0037992098803009623, "phrase": "single-homed_sctp."}, {"score": 0.0037483813086134376, "phrase": "sctp's_congestion_control_mechanisms"}, {"score": 0.0036096370549115885, "phrase": "newer_protocol"}, {"score": 0.0035902386595439146, "phrase": "sctp_specification"}, {"score": 0.003542195914738294, "phrase": "proposed_tcp_enhancements"}, {"score": 0.003401877633022377, "phrase": "larger_share"}, {"score": 0.00332932058781309, "phrase": "tcp_flavor"}, {"score": 0.003284757805760914, "phrase": "similar_enhancements"}, {"score": 0.003120774673636174, "phrase": "sctp's_better_loss_recovery_mechanisms"}, {"score": 0.0030624392779331627, "phrase": "tcp-reno"}, {"score": 0.002964953627565811, "phrase": "cmt._via_qualnet_simulations"}, {"score": 0.0028551244098497103, "phrase": "smaller_number"}, {"score": 0.0026834288199353066, "phrase": "cmt_flow"}, {"score": 0.0026618065353009, "phrase": "burstier_data_traffic"}, {"score": 0.002647488300841632, "phrase": "independent_sctp_flows"}, {"score": 0.002590979439059358, "phrase": "two-independent_tcp_connections"}, {"score": 0.002528843747727176, "phrase": "tight_link_bandwidth"}, {"score": 0.00250846393144162, "phrase": "better_loss_recovery_mechanisms"}, {"score": 0.0024549151475552187, "phrase": "ack_information"}, {"score": 0.0023575658069040885, "phrase": "cmt's_aimd-based_congestion_control_mechanism"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multihoming", " SCTP", " Concurrent Multipath Transfer", " TCP-friendliness", " TCP-friendly"], "paper_abstract": "In prior work, a CMT protocol using SCTP multihoming (termed SCTP-based CMT) was proposed and investigated for improving application throughput. SCTP-based CMT was studied in (bottleneck-independent) wired networking scenarios with ns-2 simulations. This paper studies the TCP-friendliness of CMT in the Internet. In this paper, we surveyed historical developments of the TCP-friendliness concept and argued that the original TCP-friendliness doctrine should be extended to incorporate multihoming and SCTP-based CMT. Since CMT is based on (single-homed) sap. we first investigated TCP-friendliness of single-homed SCTP. We discovered that although SCTP's congestion control mechanisms were intended to be \"similar\" to TCP's, being a newer protocol. SCTP specification has some of the proposed TCP enhancements already incorporated which results in SCTP performing better than TCP. Therefore, SCTP obtains larger share of the bandwidth when competing with a TCP flavor that does not have similar enhancements. We concluded that SCTP is TCP-friendly, but achieves higher throughput than TCP, due to SCTP's better loss recovery mechanisms just as TCP-SACK and TCP-Reno perform better than TCP-Tahoe. We then investigated the TCP-friendliness of CMT. Via QualNet simulations, we found out that one two-homed CMT association has similar or worse performance (for smaller number of competing TCP flows) than the aggregated performance of two independent, single-homed SCTP associations while sharing the link with other TCP connections, for the reason that a CMT flow creates a burstier data traffic than independent SCTP flows. When compared to the aggregated performance of two-independent TCP connections, one two-homed CMT obtains a higher share of the tight link bandwidth because of better loss recovery mechanisms in CMT. In addition, sharing of ACK information makes CMT more resilient to losses. Although CMT obtains higher throughput than two independent TCP flows, CMT's AIMD-based congestion control mechanism allows other TCP flows to co-exist in the network. Therefore, we concluded that CMT is TCP-friendly, similar to two TCP-Reno flows are TCP-friendly when compared to two TCP-Tahoe flows. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Evaluating TCP-friendliness in light of Concurrent Multipath Transfer", "paper_id": "WOS:000303290000002"}