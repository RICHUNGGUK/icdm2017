{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "web_applications"}, {"score": 0.012495864647723403, "phrase": "maintainability_tasks"}, {"score": 0.004710854091689325, "phrase": "engineering_vs_code-centric"}, {"score": 0.004470071518923524, "phrase": "resulting_applications"}, {"score": 0.004297560964892607, "phrase": "empirical_evidence"}, {"score": 0.0041316803676012155, "phrase": "code-centric_approaches"}, {"score": 0.0038692638652494697, "phrase": "junior_software_maintainers"}, {"score": 0.0034835017385881385, "phrase": "code-centric_approach"}, {"score": 0.003438058620195309, "phrase": "visual_studio"}, {"score": 0.0029886047149545025, "phrase": "different_web_application"}, {"score": 0.0026321198895843173, "phrase": "satisfaction_balance"}, {"score": 0.0025192983141887285, "phrase": "model-driven_development_methods"}, {"score": 0.0021993066642488237, "phrase": "different_populations"}, {"score": 0.002123531043641047, "phrase": "different_domains"}, {"score": 0.0021049977753042253, "phrase": "different_application_sizes"}], "paper_keywords": ["Maintainability", " Satisfaction", " Quasi-experiment", " MDE"], "paper_abstract": "Model-driven Engineering (MDE) approaches are often acknowledged to improve the maintainability of the resulting applications. However, there is a scarcity of empirical evidence that backs their claimed benefits and limitations with respect to code-centric approaches. The purpose of this paper is to compare the performance and satisfaction of junior software maintainers while executing maintainability tasks on Web applications with two different development approaches, one being OOH4RIA, a model-driven approach, and the other being a code-centric approach based on Visual Studio. NET and the Agile Unified Process. We have conducted a quasi-experiment with 27 graduated students from the University of Alicante. They were randomly divided into two groups, and each group was assigned to a different Web application on which they performed a set of maintainability tasks. The results show that maintaining Web applications with OOH4RIA clearly improves the performance of subjects. It also tips the satisfaction balance in favor of OOH4RIA, although not significantly. Model-driven development methods seem to improve both the developers' objective performance and subjective opinions on ease of use of the method. This notwithstanding, further experimentation is needed to be able to generalize the results to different populations, methods, languages and tools, different domains and different application sizes.", "paper_title": "Empirical study on the maintainability of Web applications: Model-driven Engineering vs Code-centric", "paper_id": "WOS:000343910700010"}