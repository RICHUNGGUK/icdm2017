{"auto_keywords": [{"score": 0.049014830901543946, "phrase": "computational_circuits"}, {"score": 0.00481495049065317, "phrase": "rapid_synthesis"}, {"score": 0.00462919213721188, "phrase": "mppa._a_computational_circuit"}, {"score": 0.004577440795549049, "phrase": "custom-designed_hardware"}, {"score": 0.004450568197899267, "phrase": "maximum_speedup"}, {"score": 0.004400804926266097, "phrase": "computationally_intensive_software_algorithms"}, {"score": 0.004278807087784626, "phrase": "practical_needs"}, {"score": 0.004207230913063179, "phrase": "development_cost"}, {"score": 0.003888659470009222, "phrase": "high-level_architectural_design"}, {"score": 0.003474799999519295, "phrase": "rapid_architectural_evolution"}, {"score": 0.0033405704229694656, "phrase": "custom_hardware"}, {"score": 0.00319348234663792, "phrase": "tool_flow"}, {"score": 0.003035711716881469, "phrase": "massively_parallel_processor_array"}, {"score": 0.0029020077365708966, "phrase": "cad_runtime"}, {"score": 0.002805597755796506, "phrase": "fpga_tools"}, {"score": 0.0026971491199975083, "phrase": "fpga_devices"}, {"score": 0.0026370661343466354, "phrase": "fixed_logic_capacity"}, {"score": 0.002506715532901322, "phrase": "simulation_performance"}, {"score": 0.002450864311898833, "phrase": "wide_range"}, {"score": 0.0023827927890399357, "phrase": "processor_cores"}, {"score": 0.0023166075278110237, "phrase": "tool_scalability"}], "paper_keywords": ["Circuit CAD", " Field programmable gate arrays", " Logic CAD", " Software architecture", " Software tools", " FPGA-based design", " Spatial computing"], "paper_abstract": "A computational circuit is custom-designed hardware which promises to offer maximum speedup of computationally intensive software algorithms. However, the practical needs to manage development cost and many low-level physical design details erodes much of the potential speedup by distracting attention away from high-level architectural design. Instead, designers need an inexpensive, processor-like platform where computational circuits can be rapidly synthesized and simulated. This enables rapid architectural evolution and mitigates the risk of producing custom hardware. In this paper we present a tool flow (RVETool) for compiling computational circuits into a massively parallel processor array (MPPA). We demonstrate the CAD runtime is on average 70x faster than FPGA tools, with a circuit speed 5.8x slower than FPGA devices. Unlike the fixed logic capacity of FPGAs, RVETool can trade area for simulation performance by targeting a wide range in the number of processor cores. We also demonstrate tool scalability to very large circuits, synthesizing, placing, and routing a a parts per thousand 1.6 million gate random circuit in 54 min.", "paper_title": "Rapid Synthesis and Simulation of Computational Circuits in an MPPA", "paper_id": "WOS:000300852200005"}