{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "model-based_and_dynamic_event-extraction_based_gui_testing_techniques"}, {"score": 0.004447766706144458, "phrase": "modern_software_systems"}, {"score": 0.0039748192550806815, "phrase": "automated_gui"}, {"score": 0.003794954883650141, "phrase": "static_models"}, {"score": 0.0036714667610391535, "phrase": "dynamic_event-extraction"}, {"score": 0.0033911868693238894, "phrase": "static_model-based_gui_testing_techniques"}, {"score": 0.0032376465741070274, "phrase": "nonexecutable_events"}, {"score": 0.0031739835218110015, "phrase": "dynamic_event-extraction_based_gui_testing_techniques"}, {"score": 0.003050376875258722, "phrase": "duplicate_test_cases"}, {"score": 0.0027803070408286158, "phrase": "gui_testing_framework"}, {"score": 0.0027256122357680393, "phrase": "fair_comparison"}, {"score": 0.002689746491842271, "phrase": "different_gui_testing_techniques"}, {"score": 0.0025849489224175548, "phrase": "controlled_experiment"}, {"score": 0.0025509294021449254, "phrase": "representative_versions"}, {"score": 0.002451527111936163, "phrase": "event-extraction_based_testing_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["GUI testing", " Test case generation", " Model-based testing", " Dynamic event-extraction based testing"], "paper_abstract": "Graphical user interfaces are pervasive in modern software systems, and to ensure their quality it is important to test them. Two primary classes of automated GUI testing approaches, those based on static models and those based on dynamic event-extraction, present tradeoffs in cost and effectiveness. For example, static model-based GUI testing techniques can create test cases that contain nonexecutable events, whereas dynamic event-extraction based GUI testing techniques can create larger numbers of duplicate test cases. To better understand the effects of these tradeoffs, we created a GUI testing framework that facilitates fair comparison of different GUI testing techniques, and we conducted a controlled experiment comparing representative versions of static-model based and dynamic event-extraction based testing techniques on several GUI-based Java applications. Our study reveals several cost and effectiveness tradeoffs between the techniques, with implications for research and practice. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Comparing model-based and dynamic event-extraction based GUI testing techniques: An empirical study", "paper_id": "WOS:000343352500002"}