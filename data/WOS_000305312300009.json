{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "mapreduce"}, {"score": 0.04350442522578208, "phrase": "dynamic_cloud_infrastructures"}, {"score": 0.00481495049065317, "phrase": "dynamic_cloud_environments"}, {"score": 0.004669845451682529, "phrase": "programming_model"}, {"score": 0.00461302961851157, "phrase": "parallel_data_processing"}, {"score": 0.004501453956464956, "phrase": "cloud_computing_environments"}, {"score": 0.004446677711302801, "phrase": "current_mapreduce_implementations"}, {"score": 0.004339108074589304, "phrase": "centralized_master-slave_architectures"}, {"score": 0.0037231102027070724, "phrase": "high_rates"}, {"score": 0.0035887342563437935, "phrase": "adaptive_mapreduce_framework"}, {"score": 0.003334309053314909, "phrase": "peer_model"}, {"score": 0.0031360786664165093, "phrase": "decentralized_but_effective_way"}, {"score": 0.002723607240517261, "phrase": "detailed_description"}, {"score": 0.002641360377825228, "phrase": "prototype_implementation"}, {"score": 0.00257735013358606, "phrase": "extensive_performance_evaluation"}, {"score": 0.0025459275963373496, "phrase": "different_network_scenarios"}, {"score": 0.002499508839669243, "phrase": "performance_results"}, {"score": 0.002453934333239467, "phrase": "good_fault_tolerance_level"}, {"score": 0.002336414425972225, "phrase": "centralized_implementation"}, {"score": 0.002183938718432764, "phrase": "network_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["MapReduce", " Parallel processing", " Cloud computing", " Peer-to-peer computing", " P2P-MapReduce"], "paper_abstract": "MapReduce is a programming model for parallel data processing widely used in Cloud computing environments. Current MapReduce implementations are based on centralized master-slave architectures that do not cope well with dynamic Cloud infrastructures, like a Cloud of clouds, in which nodes may join and leave the network at high rates. We have designed an adaptive MapReduce framework, called P2P-MapReduce, which exploits a peer-to-peer model to manage node churn, master failures, and job recovery in a decentralized but effective way, so as to provide a more reliable MapReduce middleware that can be effectively exploited in dynamic Cloud infrastructures. This paper describes the P2P-MapReduce system providing a detailed description of its basic mechanisms, a prototype implementation, and an extensive performance evaluation in different network scenarios. The performance results confirm the good fault tolerance level provided by the P2P-MapReduce framework compared to a centralized implementation of MapReduce, as well as its limited impact in terms of network overhead. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "P2P-MapReduce: Parallel data processing in dynamic Cloud environments", "paper_id": "WOS:000305312300009"}