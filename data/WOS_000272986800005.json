{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "heterogeneous_platforms"}, {"score": 0.004769958800452922, "phrase": "scheduling_problems"}, {"score": 0.0046593017130868, "phrase": "traditional_parallel_machines"}, {"score": 0.004487541157100498, "phrase": "heterogeneous_clusters"}, {"score": 0.00422177384286051, "phrase": "multiple_applications"}, {"score": 0.004104456271230213, "phrase": "independent_and_identical_tasks"}, {"score": 0.004028054020045027, "phrase": "heterogeneous_master-worker_platform"}, {"score": 0.0034657012607680203, "phrase": "maximum_stretch"}, {"score": 0.003038237581227068, "phrase": "theoretical_side"}, {"score": 0.0029676344710756553, "phrase": "optimal_algorithm"}, {"score": 0.0029260602766930065, "phrase": "offline_version"}, {"score": 0.0027916287357898544, "phrase": "application_characteristics"}, {"score": 0.002626034130205569, "phrase": "general_case"}, {"score": 0.0026014425686078993, "phrase": "online_applications"}, {"score": 0.002552946390854313, "phrase": "practical_side"}, {"score": 0.002493592357827492, "phrase": "extensive_simulations"}, {"score": 0.002470237978694949, "phrase": "mpi_experiments"}, {"score": 0.0022168460543913787, "phrase": "classical_heuristics"}], "paper_keywords": ["Scheduling and task partitioning", " online computation", " parallelism and concurrency", " measurement", " evaluation", " modeling", " simulation of multiple-processor systems"], "paper_abstract": "Scheduling problems are already difficult on traditional parallel machines, and they become extremely challenging on heterogeneous clusters. In this paper, we deal with the problem of scheduling multiple applications, made of collections of independent and identical tasks, on a heterogeneous master-worker platform. The applications are submitted online, which means that there is no a priori (static) knowledge of the workload distribution at the beginning of the execution. The objective is to minimize the maximum stretch, i.e., the maximum ratio between the actual time an application has spent in the system and the time this application would have spent if executed alone. On the theoretical side, we design an optimal algorithm for the offline version of the problem (when all release dates and application characteristics are known beforehand). We also introduce a heuristic for the general case of online applications. On the practical side, we have conducted extensive simulations and MPI experiments, showing that we are able to deal with very large problem instances in a few seconds. Also, the solution that we compute totally outperforms classical heuristics from the literature, thereby fully assessing the usefulness of our approach.", "paper_title": "Scheduling Concurrent Bag-of-Tasks Applications on Heterogeneous Platforms", "paper_id": "WOS:000272986800005"}