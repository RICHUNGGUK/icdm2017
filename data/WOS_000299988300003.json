{"auto_keywords": [{"score": 0.04769371124478992, "phrase": "partial_bitstreams"}, {"score": 0.03503043154013673, "phrase": "reconfigurable_area"}, {"score": 0.00481495049065317, "phrase": "partial_fpga_configurations"}, {"score": 0.004491093879657087, "phrase": "dynamic_reconfiguration"}, {"score": 0.004388061815391823, "phrase": "fpga."}, {"score": 0.004228016636379321, "phrase": "adaptive_embedded_systems"}, {"score": 0.004169519409162853, "phrase": "run-time_reconfiguration"}, {"score": 0.00411182818527434, "phrase": "high_flexibility"}, {"score": 0.004017437417375057, "phrase": "proposed_approach"}, {"score": 0.003943481134959376, "phrase": "coarse-grained_components"}, {"score": 0.0038708810091769856, "phrase": "new_partial_bitstream"}, {"score": 0.0037820003983334476, "phrase": "topological_sorting"}, {"score": 0.0036271080216837286, "phrase": "initial_positions"}, {"score": 0.003593555152077465, "phrase": "individual_components"}, {"score": 0.0034785371344994197, "phrase": "simulated_annealing"}, {"score": 0.003446353878654566, "phrase": "connection_routing"}, {"score": 0.003367188029221534, "phrase": "breadth-first_search"}, {"score": 0.0032593915869553714, "phrase": "simplified_resource_model"}, {"score": 0.00321425262806329, "phrase": "reconfigurable_fabric"}, {"score": 0.0031697368057340895, "phrase": "desired_partial_bitstream"}, {"score": 0.003068242064611088, "phrase": "default_bitstream"}, {"score": 0.0028218877037665484, "phrase": "switch_matrices"}, {"score": 0.0026811531172346676, "phrase": "code_library"}, {"score": 0.0025952620596908747, "phrase": "new_bitstreams"}, {"score": 0.0022889103976458437, "phrase": "bitstream_generation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Reconfigurable computing", " Run-time reconfiguration", " Run-time bitstream generation", " Adaptive embedded systems"], "paper_abstract": "This paper presents and evaluates a method of generating partial bitstreams at run-time for dynamic reconfiguration of sections of an FPGA. The method is intended for use in adaptive embedded systems that employ run-time reconfiguration to achieve high flexibility and performance. The proposed approach combines partial bitstreams of coarse-grained components to produce a new partial bitstream implementing a given circuit netlist. Topological sorting of the netlist is used to determine the initial positions of individual components, whose placement is then improved by simulated annealing. Connection routing is done by a breadth-first search of the reconfigurable area based on a simplified resource model of the reconfigurable fabric. The desired partial bitstream is constructed by merging together the default bitstream of the reconfigurable area, the relocated partial bitstreams of the components, and the configurations of the switch matrices used for routing. The approach is embodied in a code library that applications can use to create new bitstreams at run-time. For the members of a set of 29 benchmarks (both synthetic and application-derived) having between five and 41 components, the complete process of bitstream generation takes between 8 s and 35 s when running on an embedded PowerPC 405 microprocessor clocked at 300 MHz. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Run-time generation of partial FPGA configurations", "paper_id": "WOS:000299988300003"}