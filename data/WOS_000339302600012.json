{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "area-efficient_metadata_cache"}, {"score": 0.004760765880314089, "phrase": "chip_multiprocessor"}, {"score": 0.004707188147442449, "phrase": "brand_new_opportunities"}, {"score": 0.004654210559456924, "phrase": "holistic_on-chip_data"}, {"score": 0.00447341965028879, "phrase": "intelligent_protocol"}, {"score": 0.004324031677173549, "phrase": "fine-grain_accessing_behavior"}, {"score": 0.0040171817997972335, "phrase": "conventional_directory"}, {"score": 0.0036691380448651443, "phrase": "large-scale_systems"}, {"score": 0.0034867406208212146, "phrase": "metadata_cache_framework"}, {"score": 0.0032760377953971248, "phrase": "data_access"}, {"score": 0.003239114833599948, "phrase": "coherence_activities"}, {"score": 0.002843180211561427, "phrase": "compact_structures"}, {"score": 0.0027480831196871093, "phrase": "access_pattern"}, {"score": 0.0027017308406240563, "phrase": "pattern_information"}, {"score": 0.002552781867125423, "phrase": "decoupled_data"}, {"score": 0.0024814079299143536, "phrase": "fast_access"}, {"score": 0.0023713273141757326, "phrase": "building_block"}, {"score": 0.002279011030331704, "phrase": "detailed_execution-driven_simulation"}, {"score": 0.0021778895748464024, "phrase": "average_speedup"}, {"score": 0.0021049977753042253, "phrase": "shared_cache_protocol"}], "paper_keywords": ["cache", " directory", " multiprocessor"], "paper_abstract": "Chip multiprocessor presents brand new opportunities for holistic on-chip data and coherence management solutions. An intelligent protocol should be adaptive to the fine-grain accessing behavior. And in terms of storage of metadata, the size of conventional directory grows as the square of the number of processors, making it very expensive in large-scale systems. In this paper, we propose a metadata cache framework to achieve three goals: 1) reducing the latency of data access and coherence activities, 2) saving the storage of metadata, and 3) providing support for other optimization techniques. The metadata is implemented with compact structures and tracks the dynamically changing access pattern. The pattern information is used to guide the delegation and replication of decoupled data and metadata to allow fast access. We also use our metadata cache as a building block to enhance stream prefetching. Using detailed execution-driven simulation, we demonstrate that our protocol achieves an average speedup of 1.12X compared with a shared cache protocol with 1/5 of the storage of metadata.", "paper_title": "DEAM: Decoupled, Expressive, Area-Efficient Metadata Cache", "paper_id": "WOS:000339302600012"}