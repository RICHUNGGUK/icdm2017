{"auto_keywords": [{"score": 0.04959472855927184, "phrase": "moco"}, {"score": 0.010612384215170072, "phrase": "multi-objective_combinatorial_optimization"}, {"score": 0.008033796278247917, "phrase": "qmaea"}, {"score": 0.007389178828173072, "phrase": "candidate_solution"}, {"score": 0.004718019768447783, "phrase": "essential_concern"}, {"score": 0.004518442937844318, "phrase": "higher_dynamics"}, {"score": 0.004495522848078741, "phrase": "stricter_demands"}, {"score": 0.004472718499554466, "phrase": "real-time_performance"}, {"score": 0.004382646976850872, "phrase": "optimal_decision"}, {"score": 0.004165291228742781, "phrase": "combinatorial_optimization_moco"}, {"score": 0.004133627071344356, "phrase": "large-scale_and_service-oriented_distributed_simulation_systems"}, {"score": 0.003938580445363917, "phrase": "long_decision_time"}, {"score": 0.0036864465771943933, "phrase": "large-scale_sodsss"}, {"score": 0.003557411005005516, "phrase": "quantum_encoding"}, {"score": 0.0035213773396043186, "phrase": "high_intelligent_searching"}, {"score": 0.003459191419478298, "phrase": "quantum_bit"}, {"score": 0.003424149219393151, "phrase": "quantum_agent"}, {"score": 0.003321131121652437, "phrase": "moco_problem"}, {"score": 0.0031966920628129854, "phrase": "objective_function_value"}, {"score": 0.0030148534970485343, "phrase": "annular_grid"}, {"score": 0.0029842990364208235, "phrase": "multi-agent_grid"}, {"score": 0.002931569771634119, "phrase": "mag_system"}, {"score": 0.0025160746665132973, "phrase": "mag."}, {"score": 0.0024905619050479473, "phrase": "predatory_search_strategy"}, {"score": 0.002434099119559121, "phrase": "qmaea._multiple_evolutionary_strategies"}, {"score": 0.0022492129111567824, "phrase": "qmaea."}, {"score": 0.002175913488493802, "phrase": "simulation_and_comparison_results"}, {"score": 0.0021593396036472777, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "sodsss"}], "paper_keywords": ["Quantum bit", " quantum agent (QAgent)", " evolutionary algorithms", " quantum multi-agent evolutionary algorithm (QMAEA)", " multi-objective combinatorial optimization (MOCO)", " service-oriented distributed simulation system (SoDSS)", " service composition optimal-selection (SCOS)"], "paper_abstract": "Multi-objective combinatorial optimization (MOCO) is an essential concern for the implementation of large-scale distributed modeling and simulation (MS) system. It is more complex than general computing systems, with higher dynamics and stricter demands on real-time performance. The quality and speed of the optimal decision directly decides the efficiency of the simulation. However, few works have been carried out for multi-objective combinatorial optimization MOCO especially in large-scale and service-oriented distributed simulation systems (SoDSSs). The existing algorithms for MOCO in SoDSSs are far from enough owing to their low accuracy or long decision time. To overcome this bottleneck, in this paper, a quantum multi-agent evolutionary algorithm (QMAEA), for addressing MOCO in large-scale SoDSSs is proposed. In QMAEA, the concept and characteristics of agent and quantum encoding are introduced for high intelligent searching. Each agent represented by a quantum bit, called a quantum agent (QAgent), is defined as a candidate solution for a MOCO problem, and each QAgent is assigned an energy, which denotes the fitness or objective function value of the candidate solution represented by it. Each QAgent is connected by four other QAgents nearby, and all QAgents are organized by an annular grid, called a multi-agent grid (MAG). In a MAG system, the population of QAgents can reproduce, perish, compete for survival, observe and communicate with the environment, and make all their decisions autonomously. Several operators, i.e. energy-evaluation-operator, competition-operator, crossover-operator, mutation-operator and trimming-operator, are designed to specify the evolvement of the MAG. The theory of predatory search strategy of animals is introduced in the evolution of QMAEA. Multiple evolutionary strategies, such as local-evolution-strategy, local-mutation-strategy and global-mutation-strategy are designed and used to balance the exploration (global search ability) and the exploitation (local search ability) of QMAEA. The framework and procedures of QMAEA are presented in detail. The simulation and comparison results demonstrate the proposed method is very effective and efficient for addressing MOCO in SoDSSs.", "paper_title": "QMAEA: A quantum multi-agent evolutionary algorithm for multi-objective combinatorial optimization", "paper_id": "WOS:000337570300006"}