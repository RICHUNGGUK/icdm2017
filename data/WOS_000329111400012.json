{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computational_tasks"}, {"score": 0.01883572669802238, "phrase": "time_slices"}, {"score": 0.004740476936977635, "phrase": "virtualized_environments"}, {"score": 0.004407813106104401, "phrase": "physical_resources"}, {"score": 0.004317109072311102, "phrase": "traditional_schedulers"}, {"score": 0.00422826362023938, "phrase": "mixed_workloads"}, {"score": 0.004162826481635768, "phrase": "recent_research"}, {"score": 0.0038304902197108643, "phrase": "cache_efficiency"}, {"score": 0.0035245918797629804, "phrase": "multicore_periodical_preemption_scheduling_scheme"}, {"score": 0.003226209534553224, "phrase": "preemption_rate"}, {"score": 0.0031928040608991543, "phrase": "scheduling_latency"}, {"score": 0.0029994894380575604, "phrase": "multicore_environments"}, {"score": 0.0029072537537959374, "phrase": "different_cores"}, {"score": 0.0028622019660721363, "phrase": "round-robin_manner"}, {"score": 0.002619748321217153, "phrase": "dedicated_priority"}, {"score": 0.0025259712348798323, "phrase": "cpu_fairness"}, {"score": 0.002461044825190643, "phrase": "xen-based_prototype"}, {"score": 0.002360607691114015, "phrase": "computation-intensive_workloads"}, {"score": 0.002324007171619245, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": ["Virtualization", " Scheduling", " Multicore", " Virtual machine"], "paper_abstract": "In virtualized environments, the VMM (virtual machine monitor) scheduler is critical to overall performance, as it allocates the physical resources. However, traditional schedulers have poor I/O performance of mixed workloads. Although recent research significantly improves I/O performance, they degrade the performance of computational tasks by shortening time slices and reducing cache efficiency. In order to eliminate these problems while guaranteeing I/O performance, this paper presents a multicore periodical preemption scheduling scheme with three optimization techniques: (1) periodically coalescing and handling I/O events to reduce the preemption rate and scheduling latency, which guarantees I/O performance; (2) taking advantage of multicore environments and centrally handling I/O events on different cores in a Round-Robin manner to lengthen time slices, which improves the performance of computational tasks; (3) using a dedicated priority for I/O event handling to keep the CPU fairness. We implement a Xen-based prototype and evaluate the performance of I/O workloads and computation-intensive workloads. The experimental results demonstrate that our scheduling scheme efficiently lengthens time slices and improves the performance of computational tasks, achieving the same I/O performance as the existing approaches optimized for I/O.", "paper_title": "A multicore periodical preemption virtual machine scheduling scheme to improve the performance of computational tasks", "paper_id": "WOS:000329111400012"}