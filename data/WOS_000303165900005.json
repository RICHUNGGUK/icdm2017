{"auto_keywords": [{"score": 0.03709788182167048, "phrase": "dedicated_rpc_system"}, {"score": 0.00481495049065317, "phrase": "gpu-accelerated_high-performance_computing"}, {"score": 0.0047563776685277314, "phrase": "virtual_machines"}, {"score": 0.004208282550386197, "phrase": "leverage_hardware_acceleration"}, {"score": 0.0038862297330905836, "phrase": "high-performance_computing"}, {"score": 0.0037231102027070724, "phrase": "key_insights"}, {"score": 0.0036329805216306576, "phrase": "api_call_interception"}, {"score": 0.003417054482155433, "phrase": "api_interception"}, {"score": 0.003334309053314909, "phrase": "compute_unified_device_architecture"}, {"score": 0.003213960283311871, "phrase": "vms"}, {"score": 0.0031360786664165093, "phrase": "graphics_hardware_device"}, {"score": 0.0030789331635764122, "phrase": "high_computing_performance"}, {"score": 0.003022825806274343, "phrase": "transparent_way"}, {"score": 0.002949598537993663, "phrase": "current_study"}, {"score": 0.002860546817196148, "phrase": "near-native_performance"}, {"score": 0.0027069560455629917, "phrase": "detailed_analysis"}, {"score": 0.002530359917257626, "phrase": "unmodified_official_examples"}, {"score": 0.002499508839669243, "phrase": "cuda_sdk"}, {"score": 0.002469032978674379, "phrase": "third-party_applications"}, {"score": 0.0023507916951658455, "phrase": "cuda_applications"}, {"score": 0.0023079225317714815, "phrase": "vcuda"}, {"score": 0.002197379785587054, "phrase": "native_environment"}, {"score": 0.0021049977753042253, "phrase": "vcuda_architecture"}], "paper_keywords": ["CUDA", " virtual machine", " GPGPU", " RPC", " virtualization"], "paper_abstract": "This paper describes vCUDA, a general-purpose graphics processing unit (GPGPU) computing solution for virtual machines (VMs). vCUDA allows applications executing within VMs to leverage hardware acceleration, which can be beneficial to the performance of a class of high-performance computing (HPC) applications. The key insights in our design include API call interception and redirection and a dedicated RPC system for VMs. With API interception and redirection, Compute Unified Device Architecture (CUDA) applications in VMs can access a graphics hardware device and achieve high computing performance in a transparent way. In the current study, vCUDA achieved a near-native performance with the dedicated RPC system. We carried out a detailed analysis of the performance of our framework. Using a number of unmodified official examples from CUDA SDK and third-party applications in the evaluation, we observed that CUDA applications running with vCUDA exhibited a very low performance penalty in comparison with the native environment, thereby demonstrating the viability of vCUDA architecture.", "paper_title": "vCUDA: GPU-Accelerated High-Performance Computing in Virtual Machines", "paper_id": "WOS:000303165900005"}