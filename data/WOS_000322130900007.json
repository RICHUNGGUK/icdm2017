{"auto_keywords": [{"score": 0.042809318847257714, "phrase": "best_factorization_method"}, {"score": 0.004815123878153749, "phrase": "tm"}, {"score": 0.004667149874736771, "phrase": "elegant_and_powerful_interface"}, {"score": 0.004577076689777069, "phrase": "high-performance_factorization_methods"}, {"score": 0.004453874101119545, "phrase": "linear_system"}, {"score": 0.0043509032299218955, "phrase": "least-squares_problem"}, {"score": 0.004266907250334316, "phrase": "b_-_ax"}, {"score": 0.004040211152784802, "phrase": "particular_matrix"}, {"score": 0.0037224647319912293, "phrase": "subsequent_systems"}, {"score": 0.0036791522245326514, "phrase": "matlab_users"}, {"score": 0.0035245918797629804, "phrase": "suboptimal_choices"}, {"score": 0.0034971932704828197, "phrase": "even_matlab_experts"}, {"score": 0.003443031148055198, "phrase": "wrong_choice"}, {"score": 0.003389704997952315, "phrase": "naive_matlab_users"}, {"score": 0.00331125524068286, "phrase": "mathematical_expressions"}, {"score": 0.0032855095476183372, "phrase": "linear_algebra"}, {"score": 0.003247347466945507, "phrase": "matlab"}, {"score": 0.0029800360974218836, "phrase": "object-oriented_factorize_method"}, {"score": 0.0025491030873467675, "phrase": "cholesky"}, {"score": 0.002529262222407698, "phrase": "ldlt"}, {"score": 0.002470676601347937, "phrase": "complete_orthogonal_decomposition"}, {"score": 0.0024514505056251316, "phrase": "rank-deficient_matrices"}, {"score": 0.002366763442497185, "phrase": "mathematical_expression"}, {"score": 0.0022939396079753463, "phrase": "matlab_expression"}, {"score": 0.002163367190715979, "phrase": "right_thing"}, {"score": 0.0021049977753042253, "phrase": "corresponding_triangular_systems"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " Linear systems", " least-square problems", " matrix factorization", " object-oriented methods"], "paper_abstract": "The MATLAB (TM) backslash (x=A\\b) is an elegant and powerful interface to a suite of high-performance factorization methods for the direct solution of the linear system Ax = b and the least-squares problem min(x) parallel to b - Ax parallel to. It is a meta-algorithm that selects the best factorization method for a particular matrix, whether sparse or dense. However, the simplicity and elegance of its single-character interface prohibits the reuse of its factorization for subsequent systems. Requiring MATLAB users to find the best factorization method on their own can lead to suboptimal choices; even MATLAB experts can make the wrong choice. Furthermore, naive MATLAB users have a tendency to translate mathematical expressions from linear algebra directly into MATLAB, so that x = A(-1)b becomes the inferior yet all-to-prevalent x=inv(A)*b. To address these issues, an object-oriented FACTORIZE method is presented. Via simple-to-use operator overloading, solving two linear systems can be written as F=factorize(A); x=F\\b; y=F\\c, where A is factorized only once. The selection of the best factorization method (LU, Cholesky, LDLT, QR, or a complete orthogonal decomposition for rank-deficient matrices) is hidden from the user. The mathematical expression x = A(-1)b directly translates into the MATLAB expression x=inverse(A)*b, which does not compute the inverse at all, but does the right thing by factorizing A and solving the corresponding triangular systems.", "paper_title": "Algorithm 930: FACTORIZE: An Object-Oriented Linear System Solver for MATLAB", "paper_id": "WOS:000322130900007"}