{"auto_keywords": [{"score": 0.048929739366992464, "phrase": "fasp"}, {"score": 0.00481495049065317, "phrase": "fuzzy_answer"}, {"score": 0.004737579882204798, "phrase": "fuzzy_answer_set_programming"}, {"score": 0.0046238380150870435, "phrase": "recent_formalism"}, {"score": 0.004586531354697466, "phrase": "knowledge_representation"}, {"score": 0.004094639048362357, "phrase": "current_proposals"}, {"score": 0.003996271202811961, "phrase": "logic_programs"}, {"score": 0.003964007795174772, "phrase": "different_paradigms"}, {"score": 0.003916098498242888, "phrase": "mixed_integer_programs"}, {"score": 0.003884479830773329, "phrase": "bilevel_programs"}, {"score": 0.003524322230452833, "phrase": "fuzzy_answer_sets"}, {"score": 0.00342568771304873, "phrase": "fasp_program"}, {"score": 0.003356923403930231, "phrase": "lower_and_upper_bounds"}, {"score": 0.003223494720348768, "phrase": "answer_sets"}, {"score": 0.0030086877092638945, "phrase": "linear_programming"}, {"score": 0.002984373546099842, "phrase": "fuzzy_unfounded_sets"}, {"score": 0.0029602552900111407, "phrase": "source_pointers"}, {"score": 0.0028541057064952876, "phrase": "prototypical_implementation"}, {"score": 0.0026530590435527527, "phrase": "current_bounds"}, {"score": 0.0023970487263732737, "phrase": "native_fasp_solver"}, {"score": 0.0023298892270500983, "phrase": "relevant_classes"}, {"score": 0.0022923586577645143, "phrase": "unique_answer_sets"}, {"score": 0.002264607102799332, "phrase": "positive_programs"}, {"score": 0.0022281257694320433, "phrase": "stratified_negation"}, {"score": 0.0021049977753042253, "phrase": "external_tool"}], "paper_keywords": ["fuzzy logic", " answer set programming", " search-space pruning operators"], "paper_abstract": "Fuzzy answer set programming (FASP) is a recent formalism for knowledge representation that enriches the declarativity of answer set programming by allowing propositions to be graded. To now, no implementations of FASP solvers are available and all current proposals are based on compilations of logic programs into different paradigms, like mixed integer programs or bilevel programs. These approaches introduce many auxiliary variables which might affect the performance of a solver negatively. To limit this downside, operators for approximating fuzzy answer sets can be introduced: Given a FASP program, these operators compute lower and upper bounds for all atoms in the program such that all answer sets are between these bounds. This paper analyzes several operators of this kind which are based on linear programming, fuzzy unfounded sets and source pointers. Furthermore, the paper reports on a prototypical implementation, also describing strategies for avoiding computations of these operators when they are guaranteed to not improve current bounds. The operators and their implementation can be used to obtain more constrained mixed integer or bilevel programs, or even for providing a basis for implementing a native FASP solver. Interestingly, the semantics of relevant classes of programs with unique answer sets, like positive programs and programs with stratified negation, can be already computed by the prototype without the need for an external tool.", "paper_title": "Fuzzy answer sets approximations", "paper_id": "WOS:000324926400020"}