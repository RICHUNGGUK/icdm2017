{"auto_keywords": [{"score": 0.0339643024614943, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "edge_deletions"}, {"score": 0.0047517225918491226, "phrase": "edge_insertions"}, {"score": 0.004506968388996092, "phrase": "special_case"}, {"score": 0.004360412703519539, "phrase": "covering_tree"}, {"score": 0.0041084684278314305, "phrase": "tree_t"}, {"score": 0.004027751272984522, "phrase": "set_s"}, {"score": 0.0035519826240477444, "phrase": "resulting_tree"}, {"score": 0.0033025823350563087, "phrase": "general_setting"}, {"score": 0.003259171956149966, "phrase": "cst"}, {"score": 0.0028173769301594745, "phrase": "input_trees"}, {"score": 0.0025340874787959195, "phrase": "distinct_stars"}, {"score": 0.002451527111936163, "phrase": "constant_k"}, {"score": 0.0024192718478436696, "phrase": "cts"}, {"score": 0.00234043119560776, "phrase": "polynomial_time"}, {"score": 0.0022641658133181115, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0021049977753042253, "phrase": "vertical_bar"}], "paper_keywords": ["Graph algorithms", " Tree edit distance", " NP-completeness", " Dynamic programming"], "paper_abstract": "We study the tree edit distance (TED) problem with edge deletions and edge insertions as edit operations. We reformulate a special case of this problem as Covering Tree with Stars (CTS): given a tree T and a set S of stars, can we connect the stars in S by adding edges between them such that the resulting tree is isomorphic to T? We prove that in the general setting, CST is NP-complete, which implies that the TED considered here is also NP-hard, even when both input trees have diameters bounded by 10. We also show that, when the number of distinct stars is bounded by a constant k, CTS can be solved in polynomial time, by presenting a dynamic programming algorithm running in O(broken vertical bar V(T)broken vertical bar(2).k. broken vertical bar V(S)broken vertical bar(2k)) time.", "paper_title": "Covering tree with stars", "paper_id": "WOS:000350684400008"}