{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-channel_web_interfaces"}, {"score": 0.004527619017250708, "phrase": "enterprise_applications"}, {"score": 0.004146510711518748, "phrase": "client_devices"}, {"score": 0.0037973594873521596, "phrase": "business_logic_device"}, {"score": 0.0036020923276404403, "phrase": "web_browser"}, {"score": 0.003477505397536663, "phrase": "user_interface"}, {"score": 0.003298631258267805, "phrase": "web-based_front-ends"}, {"score": 0.0031565959573536194, "phrase": "different_devices"}, {"score": 0.0030206579994328975, "phrase": "device-specific_interaction_patterns"}, {"score": 0.0022787359717772976, "phrase": "web_interfaces'_device-specific_dialog_flows"}, {"score": 0.0021049977753042253, "phrase": "enterprise_application_logic"}], "paper_keywords": ["Web engineering", " architecture", " device independence", " dialog control"], "paper_abstract": "When building enterprise applications that need to be accessed through a variety of client devices, developers usually strive to implement most of the business logic device-independently while using a web browser to display the user interface. However, when those web-based front-ends shall be rendered on different devices, their differing I/O capabilities may require device-specific interaction patterns that still need to be specified and implemented efficiently. We present an approach for specifying the dialog flows in multi-channel web interfaces with very low redundancy and introduce a framework that controls web interfaces' device-specific dialog flows according to those specifications, while keeping the enterprise application logic completely device-independent.", "paper_title": "Specifying and controlling multi-channel web interfaces for enterprise applications", "paper_id": "WOS:000247193400002"}