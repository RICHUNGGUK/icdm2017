{"auto_keywords": [{"score": 0.04904947763914552, "phrase": "feasible_version"}, {"score": 0.038010242203870614, "phrase": "maximum_step_size"}, {"score": 0.03753385825085361, "phrase": "predictor_direction"}, {"score": 0.00481495049065317, "phrase": "numerical_example"}, {"score": 0.004670597652149685, "phrase": "mehrotra's_original_predictor-corrector_algorithm"}, {"score": 0.004530552828603269, "phrase": "salahi_et_al"}, {"score": 0.0044718206943536514, "phrase": "m._salahi"}, {"score": 0.00443308765153716, "phrase": "j._peng"}, {"score": 0.004394688617163029, "phrase": "t._terlaky"}, {"score": 0.004337710093279712, "phrase": "mehrotra-type_predictor-corrector_algorithms"}, {"score": 0.004244550529571173, "phrase": "siam"}, {"score": 0.004225950334493496, "phrase": "j._optim"}, {"score": 0.004135010810625326, "phrase": "so-called_safeguard-based_variant"}, {"score": 0.004028452405970376, "phrase": "polynomial_iteration_complexity"}, {"score": 0.0037411604449359794, "phrase": "different_perspective"}, {"score": 0.0032404677650217407, "phrase": "occasional_ill_behaviour"}, {"score": 0.003170667618004276, "phrase": "mehrotra's_original_algorithm"}, {"score": 0.002843519597398796, "phrase": "desirable_step_size"}, {"score": 0.0027461155463816772, "phrase": "second_time"}, {"score": 0.0026175952455594277, "phrase": "step_size"}, {"score": 0.002583597507349819, "phrase": "corrector_direction"}, {"score": 0.002462664392109308, "phrase": "worst_case_iteration_complexity"}, {"score": 0.0024201029474586007, "phrase": "new_algorithm"}, {"score": 0.002357632753637638, "phrase": "newton_system"}, {"score": 0.0023270035715132866, "phrase": "corrector_step"}, {"score": 0.0022768346311104735, "phrase": "iteration_complexity"}, {"score": 0.002132711053003407, "phrase": "illustrative_computational_results"}, {"score": 0.0021049977753042253, "phrase": "mcipm_software_package"}], "paper_keywords": ["linear optimization", " predictor-corrector methods", " interior-point-methods", " Mehrotra-type algorithm", " polynomial complexity"], "paper_abstract": "Motivated by a numerical example that shows that a feasible version of Mehrotra's original predictor-corrector algorithm might be inefficient in practice, Salahi et al. [M. Salahi, J. Peng and T. Terlaky, On Mehrotra-type predictor-corrector algorithms, to apper in SIAM J. Optim.] proposed a so-called safeguard-based variant of the algorithm that enjoys polynomial iteration complexity, although its practical efficiency is preserved. In this paper, we analyse the same Mehrotra's algorithm from a different perspective. We give a condition on the maximum step size in the predictor direction, the violation of which might imply a very small or zero step size in the corrector direction of the algorithm. This might explain the reason for occasional ill behaviour of the feasible version of Mehrotra's original algorithm. We propose to cut the maximum step size in the predictor direction if it is above a certain threshold. If this cut does not give a desirable step size, then we cut it for the second time that allows us to give a lower bound for the step size in the corrector direction. This enables us to prove an O(n(5/2)log(n/epsilon)) worst case iteration complexity bound for the new algorithm. By slightly modifying the Newton system in the corrector step, we reduce the iteration complexity to O (n(3/2)log (n/epsilon)). Finally, we report some illustrative computational results using the McIPM software package.", "paper_title": "Mehrotra-type predictor-corrector algorithm revisited", "paper_id": "WOS:000253659400008"}