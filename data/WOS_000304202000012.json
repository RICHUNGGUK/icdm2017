{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "saturn"}, {"score": 0.016955134238774493, "phrase": "fault_tolerance"}, {"score": 0.00926549564724831, "phrase": "range_queries"}, {"score": 0.004612896435506914, "phrase": "dht_data_systems"}, {"score": 0.004367898947304223, "phrase": "large-scale_data_networks"}, {"score": 0.004317109072311102, "phrase": "distributed_hash_tables"}, {"score": 0.004152018764100109, "phrase": "access_load"}, {"score": 0.004024485331377682, "phrase": "consecutive_data_values"}, {"score": 0.003993216345115755, "phrase": "neighboring_peers"}, {"score": 0.003870541730075597, "phrase": "range_query_processing"}, {"score": 0.0035383712891119937, "phrase": "high_data"}, {"score": 0.0034700069041302003, "phrase": "significant_issues"}, {"score": 0.003298357357267836, "phrase": "novel_multiple_ring"}, {"score": 0.0032727116186194584, "phrase": "order-preserving_architecture"}, {"score": 0.003196960816092101, "phrase": "novel_order-preserving_hash_function"}, {"score": 0.003015143226706584, "phrase": "vertical_and_horizontal_replication"}, {"score": 0.0028771413440398614, "phrase": "query_load"}, {"score": 0.002865929543375884, "phrase": "balancing_and_fault_tolerance"}, {"score": 0.002766963729586353, "phrase": "range_query_processing_efficiency"}, {"score": 0.0026506222660465104, "phrase": "low_replication_overheads"}, {"score": 0.0024134449026937586, "phrase": "load_balancing"}, {"score": 0.0022407927161620855, "phrase": "order-preserving_dht"}, {"score": 0.0021215125099937663, "phrase": "replication_costs"}, {"score": 0.0021049977753042253, "phrase": "fair_load_distribution"}], "paper_keywords": ["Distributed databases", " distributed applications", " fault tolerance", " query processing", " internet applications"], "paper_abstract": "In this paper, we present Saturn, an overlay architecture for large-scale data networks maintained over Distributed Hash Tables (DHTs) that efficiently processes range queries and ensures access load balancing and fault-tolerance. Placing consecutive data values in neighboring peers is desirable in DHTs since it accelerates range query processing; however, such a placement is highly susceptible to load imbalances. At the same time, DHTs may be susceptible to node departures/failures and high data availability and fault tolerance are significant issues. Saturn deals effectively with these problems through the introduction of a novel multiple ring, order-preserving architecture. The use of a novel order-preserving hash function ensures fast range query processing. Replication across and within data rings (termed vertical and horizontal replication) forms the foundation over which our mechanisms are developed, ensuring query load balancing and fault tolerance, respectively. Our detailed experimentation study shows strong gains in range query processing efficiency, access load balancing, and fault tolerance, with low replication overheads. The significance of Saturn is not only that it effectively tackles all three issues together-i.e., supporting range queries, ensuring load balancing, and providing fault tolerance over DHTs-but also that it can be applied on top of any order-preserving DHT enabling it to dynamically handle replication and, thus, to trade off replication costs for fair load distribution and fault tolerance.", "paper_title": "Saturn: Range Queries, Load Balancing and Fault Tolerance in DHT Data Systems", "paper_id": "WOS:000304202000012"}