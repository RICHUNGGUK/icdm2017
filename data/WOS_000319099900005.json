{"auto_keywords": [{"score": 0.0490494776391455, "phrase": "concrete_model"}, {"score": 0.00481495049065317, "phrase": "system_models"}, {"score": 0.004195418010131832, "phrase": "abstract_model"}, {"score": 0.0038179283509963695, "phrase": "top-down_development_process"}, {"score": 0.0035507457285983268, "phrase": "information_flow_security_properties"}, {"score": 0.002814759530655965, "phrase": "security_properties"}, {"score": 0.002416589459425828, "phrase": "scheduler_independent_security_properties"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": [""], "paper_abstract": "Refinement is a relation on system models: a concrete model is a refinement of a more abstract model if it has fewer behaviors. When properties of the abstract model are guaranteed to be preserved in the concrete model, refinement supports a top-down development process. This paper considers preservation of a range of information flow security properties in synchronous systems with schedulers, when these schedulers are refined. Notions of refinement are defined for both an abstract notion of scheduler as well as for their concrete representation as automata. The security properties that are preserved by refinement over schedulers are then characterized. The results are applied to characterize a number of scheduler independent security properties, which state that a system is secure with respect to all schedulers. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Information flow in systems with schedulers, Part II: Refinement", "paper_id": "WOS:000319099900005"}