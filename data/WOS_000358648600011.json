{"auto_keywords": [{"score": 0.04753799882019953, "phrase": "sssp"}, {"score": 0.00481495049065317, "phrase": "comprehensive_evaluation"}, {"score": 0.004749824776508639, "phrase": "new_gpu-based_approach"}, {"score": 0.004278807087784626, "phrase": "gpu_sssp_algorithm_implementation"}, {"score": 0.003942877273973905, "phrase": "cpu-based_version"}, {"score": 0.0038021531096784186, "phrase": "dijkstra"}, {"score": 0.003750942213631188, "phrase": "gpu"}, {"score": 0.0036332251283046997, "phrase": "latest_nvidia_architectures"}, {"score": 0.003535489842686145, "phrase": "input_sets"}, {"score": 0.0034092396400930446, "phrase": "fan-out_degree"}, {"score": 0.0032282396745967504, "phrase": "different_data_classes"}, {"score": 0.003015401937358271, "phrase": "proper_choice"}, {"score": 0.002988101395789399, "phrase": "threadblock_size"}, {"score": 0.002868289913655827, "phrase": "nvidia"}, {"score": 0.002778385486855157, "phrase": "performance_improvements"}, {"score": 0.0026913130726432645, "phrase": "non-optimized_versions"}, {"score": 0.0025833500717948343, "phrase": "platform_comparison"}, {"score": 0.0022847009758393405, "phrase": "optimized_sequential_implementation"}, {"score": 0.0022640009579466924, "phrase": "dijkstra's_algorithm"}, {"score": 0.0022231606165229235, "phrase": "reference_boost_library"}, {"score": 0.0021830553825770097, "phrase": "improvement_ratio"}, {"score": 0.002133937537670314, "phrase": "graph_families"}], "paper_keywords": ["Dijkstra", " GPGPU", " Kernel characterization", " NVIDIA platform comparison", " Optimization techniques", " SSSP", " Boost library"], "paper_abstract": "The single-source shortest path (SSSP) problem arises in many different fields. In this paper, we present a GPU SSSP algorithm implementation. Our work significantly speeds up the computation of the SSSP, not only with respect to a CPU-based version, but also to other state-of-the-art GPU implementations based on Dijkstra. Both GPU implementations have been evaluated using the latest NVIDIA architectures. The graphs chosen as input sets vary in nature, size, and fan-out degree, in order to evaluate the behavior of the algorithms for different data classes. Additionally, we have enhanced our GPU algorithm implementation using two optimization techniques: The use of a proper choice of threadblock size; and the modification of the GPU L1 cache memory state of NVIDIA devices. These optimizations lead to performance improvements of up to 23 % with respect to the non-optimized versions. In addition, we have made a platform comparison of several NVIDIA boards in order to distinguish which one is better for each class of graphs, depending on their features. Finally, we compare our results with an optimized sequential implementation of Dijkstra's algorithm included in the reference Boost library, obtaining an improvement ratio of up to 19 for some graph families, using less memory space.", "paper_title": "Comprehensive Evaluation of a New GPU-based Approach to the Shortest Path Problem", "paper_id": "WOS:000358648600011"}