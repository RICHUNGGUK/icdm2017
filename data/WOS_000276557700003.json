{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "address_bus_protection"}, {"score": 0.004722613498487908, "phrase": "address_sequence"}, {"score": 0.004632039024076267, "phrase": "processor-memory_bus"}, {"score": 0.004543193737836748, "phrase": "abundant_information"}, {"score": 0.004456044928556639, "phrase": "control_flow"}, {"score": 0.00415050117148714, "phrase": "proprietary_algorithms"}, {"score": 0.00409723267214392, "phrase": "critical_information"}, {"score": 0.0040186038781533946, "phrase": "encryption_keys"}, {"score": 0.0038409323908446297, "phrase": "side-channel_attacks"}, {"score": 0.003767203575060969, "phrase": "remote_servers"}, {"score": 0.003694884775158077, "phrase": "sensitive_programs"}, {"score": 0.0035543706594585076, "phrase": "physical_control"}, {"score": 0.003310447652300423, "phrase": "address_patterns"}, {"score": 0.0029467742734417255, "phrase": "great_pressure"}, {"score": 0.0027622407190589326, "phrase": "lightweight_solution"}, {"score": 0.0026570998719084153, "phrase": "equal_security_strength"}, {"score": 0.0024906610581090223, "phrase": "memory_traffic"}, {"score": 0.0023497779149212737, "phrase": "prior_scheme"}, {"score": 0.0022897425998475362, "phrase": "almost_the_same_page_fault_rate"}, {"score": 0.0021883400011393564, "phrase": "security_protection"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Address bus leakage protection", " Secure processor"], "paper_abstract": "The address sequence on the processor-memory bus can reveal abundant information about the control flow of a program. This can lead to leakage of proprietary algorithms or critical information such as encryption keys. Addresses can be observed by side-channel attacks mounted on remote servers that run sensitive programs but are not under the physical control of the client. Two previously proposed hardware techniques tackled this problem through randomizing address patterns on the bus. In this paper, we examine these attempts and show that they impose great pressure on both the memory and the disk. We propose a lightweight solution to alleviating the pressure with equal security strength. The results show that our technique can reduce the memory traffic by a factor of 10 compared with the prior scheme, while keeping almost the same page fault rate as a baseline system with no security protection. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A low-cost memory remapping scheme for address bus protection", "paper_id": "WOS:000276557700003"}