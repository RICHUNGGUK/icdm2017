{"auto_keywords": [{"score": 0.03866648944764258, "phrase": "fsmim"}, {"score": 0.00481495049065317, "phrase": "finite_state_machines"}, {"score": 0.0047563776685277314, "phrase": "input_multiplexing"}, {"score": 0.004234129588974058, "phrase": "previous_works"}, {"score": 0.00410645614623058, "phrase": "efficient_mapping"}, {"score": 0.004031699976413366, "phrase": "rom_memory"}, {"score": 0.0038154673253945003, "phrase": "new_architecture"}, {"score": 0.0036329805216306576, "phrase": "state-based_input_selection"}, {"score": 0.003417054482155433, "phrase": "memory_usage"}, {"score": 0.003097865379563127, "phrase": "tool_fsmim-gen"}, {"score": 0.002860546817196148, "phrase": "free_public_use"}, {"score": 0.0028084079003212947, "phrase": "comparative_study"}, {"score": 0.002673957615079041, "phrase": "fsmim_approaches"}, {"score": 0.002453934333239467, "phrase": "huge_reductions"}, {"score": 0.002409188797323273, "phrase": "look-up_table"}, {"score": 0.0022938068444116827, "phrase": "small_number"}, {"score": 0.00226583335721762, "phrase": "embedded_memory_blocks"}, {"score": 0.002197379785587054, "phrase": "speed_improvements"}, {"score": 0.0021705796895687864, "phrase": "conventional_lut-based_implementations"}], "paper_keywords": ["Embedded memory blocks (EMBs)", " finite state machine (FSM)", " field programmable gate array (FPGA)", " logic synthesis", " ROM"], "paper_abstract": "Finite state machines with input multiplexing (FSMIMs) have been proposed in previous works as a technique for efficient mapping FSMs into ROM memory. In this paper, we propose a new architecture for implementing FSMIMs, called FSMIM with state-based input selection, whose goal is to achieve a further reduction in memory usage. This paper also describes in detail the algorithms for generating FSMIMs used by the tool FSMIM-Gen, which has been developed and made available on the Internet for free public use. A comparative study in terms of speed and area between FSMIM approaches and other field programmable gate array-based techniques is presented. The results show that the FSMIM approaches obtain huge reductions in the look-up table (LUT) usage by using a small number of embedded memory blocks. In addition, speed improvements over conventional LUT-based implementations have been obtained in many cases.", "paper_title": "Finite State Machines With Input Multiplexing: A Performance Study", "paper_id": "WOS:000353509300015"}