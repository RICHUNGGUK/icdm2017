{"auto_keywords": [{"score": 0.028138373616886984, "phrase": "era"}, {"score": 0.00481495049065317, "phrase": "parallelized_model_reduction_library"}, {"score": 0.00470975295439431, "phrase": "new_parallelized_python_library"}, {"score": 0.004466519142879166, "phrase": "large_systems"}, {"score": 0.004254558771304349, "phrase": "wide_range"}, {"score": 0.004161553532799662, "phrase": "data_format"}, {"score": 0.004106725110985659, "phrase": "modred_library"}, {"score": 0.004016938499717623, "phrase": "proper_orthogonal_decomposition"}, {"score": 0.0036445446531633368, "phrase": "dynamic_mode_decomposition"}, {"score": 0.003335948601271999, "phrase": "smaller_and_simpler_datasets"}, {"score": 0.0032919615578986816, "phrase": "minimal_knowledge"}, {"score": 0.003191560305761507, "phrase": "common_matrix-based_formulation"}, {"score": 0.003107935254560724, "phrase": "larger_and_more_complicated_datasets"}, {"score": 0.0029602552900111407, "phrase": "vector_space"}, {"score": 0.0027947199430705077, "phrase": "arbitrary_data_formats"}, {"score": 0.0027578496677536373, "phrase": "distributed_memory_parallelization"}, {"score": 0.002289821830549781, "phrase": "object-oriented_design"}, {"score": 0.0022496114364599328, "phrase": "comprehensive_automated_tests"}, {"score": 0.002219916677664081, "phrase": "almost_all_cases"}, {"score": 0.0021049977753042253, "phrase": "parallelized_classes"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " Model reduction", " system identification", " Python", " Proper Orthogonal Decomposition", " Balanced Proper Orthogonal Decomposition", " Dynamic Mode Decomposition", " Koopman modes", " Observer/Kalman Filter Identification", " Eigensystem Realization Algorithm"], "paper_abstract": "We describe a new parallelized Python library for model reduction, modal analysis, and system identification of large systems and datasets. Our library, called modred, handles a wide range of problems and any data format. The modred library contains implementations of the Proper Orthogonal Decomposition (POD), balanced POD (BPOD) Petrov-Galerkin projection, and a more efficient variant of the Dynamic Mode Decomposition (DMD). The library contains two implementations of these algorithms, each with its own advantages. One is for smaller and simpler datasets, requires minimal knowledge to use, and follows a common matrix-based formulation. The second, for larger and more complicated datasets, preserves the abstraction of vectors as elements of a vector space and, as a result, allows the library to work with arbitrary data formats and eases distributed memory parallelization. We also include implementations of the Eigensystem Realization Algorithm (ERA), and Observer/Kalman Filter Identification (OKID). These methods are typically not computationally demanding and are not parallelized. The library is designed to be easy to use, with an object-oriented design, and includes comprehensive automated tests. In almost all cases, parallelization is done internally so that scripts that use the parallelized classes can be run in serial or in parallel without any modifications.", "paper_title": "Algorithm 945: modred-A Parallelized Model Reduction Library", "paper_id": "WOS:000339622700007"}