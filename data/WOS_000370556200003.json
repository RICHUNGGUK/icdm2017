{"auto_keywords": [{"score": 0.04095310106756124, "phrase": "network_policies"}, {"score": 0.00481495049065317, "phrase": "software_defined_networking"}, {"score": 0.004664352260912174, "phrase": "cloud_automation"}, {"score": 0.004576253356889219, "phrase": "large_number"}, {"score": 0.004518442937844318, "phrase": "diverse_parties"}, {"score": 0.004159997145421619, "phrase": "control_programs"}, {"score": 0.003757480190200645, "phrase": "existing_policy_abstractions"}, {"score": 0.0036167509502276294, "phrase": "natural_expression"}, {"score": 0.003571018150056717, "phrase": "automatic_composition"}, {"score": 0.003525861581971337, "phrase": "high-level_policies"}, {"score": 0.0033508547759861186, "phrase": "open_problem"}, {"score": 0.0032666255024083983, "phrase": "multiple_independently_specified_network_policies"}, {"score": 0.003144222265269426, "phrase": "high-level_policy_graph_abstraction"}, {"score": 0.002821685815956478, "phrase": "graph_structure"}, {"score": 0.002733260122876447, "phrase": "policy_conflicts"}, {"score": 0.0023758843175179702, "phrase": "multiple_service_chain_requirements"}, {"score": 0.0023458049872325214, "phrase": "conflict-free_composed_chains"}, {"score": 0.0022434880661725493, "phrase": "large_enterprise_network_policy_dataset"}], "paper_keywords": ["Policy graphs", " Software-Defined Networks"], "paper_abstract": "Software Defined Networking (SDN) and cloud automation enable a large number of diverse parties (network operators, application admins, tenants/end-users) and control programs (SDN Apps, network services) to generate network policies independently and dynamically. Yet existing policy abstractions and frameworks do not support natural expression and automatic composition of high-level policies from diverse sources. We tackle the open problem of automatic, correct and fast composition of multiple independently specified network policies. We first develop a high-level Policy Graph Abstraction (PGA) that allows network policies to be expressed simply and independently, and leverage the graph structure to detect and resolve policy conflicts efficiently. Besides supporting ACE policies, PGA also models and composes service chaining policies, i.e., the sequence of middleboxes to be traversed, by merging multiple service chain requirements into conflict-free composed chains. Our system validation using a large enterprise network policy dataset demonstrates practical composition times even for very large inputs, with only sub-millisecond runtime latencies.", "paper_title": "PGA: Using Graphs to Express and Automatically Reconcile Network Policies", "paper_id": "WOS:000370556200003"}