{"auto_keywords": [{"score": 0.04969278858326932, "phrase": "sla_violations"}, {"score": 0.012811375745116083, "phrase": "possible_sla_violations"}, {"score": 0.00481495049065317, "phrase": "autonomic_detection"}, {"score": 0.004737579882204798, "phrase": "cloud_infrastructures"}, {"score": 0.0046993598473345395, "phrase": "cloud_computing"}, {"score": 0.0046238380150870435, "phrase": "popular_paradigm"}, {"score": 0.004567990533989851, "phrase": "scalable_computing_infrastructures"}, {"score": 0.00445830200258645, "phrase": "case-by-case_basis"}, {"score": 0.004422325007817267, "phrase": "self-manageable_cloud_infrastructures"}, {"score": 0.004281284532043714, "phrase": "users'_requirements"}, {"score": 0.004229556887896042, "phrase": "service_level_agreements"}, {"score": 0.0041112665381266315, "phrase": "user_interactions"}, {"score": 0.004061584718427419, "phrase": "computing_environment"}, {"score": 0.003996271202811961, "phrase": "adequate_sla_monitoring_strategies"}, {"score": 0.00386876598761639, "phrase": "research_issues"}, {"score": 0.003775803846431323, "phrase": "detecting_sla_violation_infrastructure"}, {"score": 0.003640516896245813, "phrase": "sophisticated_resource_monitoring"}, {"score": 0.003567455727660992, "phrase": "user_requests"}, {"score": 0.0035100601949451028, "phrase": "computing_resources"}, {"score": 0.0034676182423067307, "phrase": "requested_service"}, {"score": 0.003384262486955773, "phrase": "virtualized_environment"}, {"score": 0.003289534854212415, "phrase": "novel_framework"}, {"score": 0.003236596168242036, "phrase": "low-level_resource_metrics"}, {"score": 0.0030953529970646626, "phrase": "user-defined_slas"}, {"score": 0.0029126002350975634, "phrase": "predefined_service_level_objectives"}, {"score": 0.002865710140187219, "phrase": "knowledge_databases"}, {"score": 0.002751751956416832, "phrase": "desvi_architecture"}, {"score": 0.0025578967205807843, "phrase": "transactional_web_applications"}, {"score": 0.0025167026017217926, "phrase": "well-known_tpc-w_benchmark"}, {"score": 0.002466139325703204, "phrase": "heterogeneous_workloads"}, {"score": 0.002436289099444074, "phrase": "optimal_monitoring_interval"}, {"score": 0.00241658945942583, "phrase": "sla_parameters"}, {"score": 0.002387337550919433, "phrase": "achieved_results"}, {"score": 0.002264607102799332, "phrase": "architecture_output"}, {"score": 0.0022011501095573747, "phrase": "appropriate_monitoring_intervals"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Service level agreement", " Resource monitoring", " SLA violation detection", " SLA enactment", " Cloud architecture"], "paper_abstract": "Cloud computing has become a popular paradigm for implementing scalable computing infrastructures provided on-demand on a case-by-case basis. Self-manageable Cloud infrastructures are required in order to comply with users' requirements defined by Service Level Agreements (SLAs) and to minimize user interactions with the computing environment. Thus, adequate SLA monitoring strategies and timely detection of possible SLA violations represent challenging research issues. This paper presents the Detecting SLA Violation infrastructure (DeSVi) architecture, sensing SLA violations through sophisticated resource monitoring. Based on the user requests. DeSkri allocates computing resources for a requested service and arranges its deployment on a virtualized environment. Resources are monitored using a novel framework capable of mapping low-level resource metrics (e.g., host up and down time) to user-defined SLAs (e.g., service availability). The detection of possible SLA violations relies on the predefined service level objectives and utilization of knowledge databases to manage and prevent such violations. We evaluate the DeSVi architecture using two application scenarios: (i) image rendering applications based on ray-tracing, and (ii) transactional web applications based on the well-known TPC-W benchmark. These applications exhibit heterogeneous workloads for investigating optimal monitoring interval of SLA parameters. The achieved results show that our architecture is able to monitor and detect SLA violations. The architecture output also provides a guideline on the appropriate monitoring intervals for applications depending on their resource consumption behavior. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Towards autonomic detection of SLA violations in Cloud infrastructures", "paper_id": "WOS:000304636600006"}