{"auto_keywords": [{"score": 0.04431606976723999, "phrase": "ta"}, {"score": 0.022634561080872022, "phrase": "top-k_queries"}, {"score": 0.016836166888504343, "phrase": "bpa"}, {"score": 0.00481495049065317, "phrase": "efficient_top-k_query_processing"}, {"score": 0.004568326972997448, "phrase": "data_items"}, {"score": 0.004466519142879166, "phrase": "main_algorithm"}, {"score": 0.004269630481719451, "phrase": "threshold_algorithm"}, {"score": 0.0040508247605225214, "phrase": "useless_accesses"}, {"score": 0.0037153426267756452, "phrase": "best_position_algorithm"}, {"score": 0.0036188435232325337, "phrase": "database_instance"}, {"score": 0.0035514484574435574, "phrase": "sorted_lists"}, {"score": 0.0028986672783671147, "phrase": "execution_cost"}, {"score": 0.0027395968397212053, "phrase": "ta._second"}, {"score": 0.0023566990646847817, "phrase": "bpa."}, {"score": 0.002286781334850213, "phrase": "extensive_experimental_tests"}, {"score": 0.0021775526153883355, "phrase": "significant_performance_gains"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Query processing", " Top-k queries", " Threshold algorithm", " Instance optimality"], "paper_abstract": "The general problem of answering top-k queries can be modeled using lists of data items sorted by their local scores. The main algorithm proposed so far for answering top-k queries over sorted lists is the Threshold Algorithm (TA). However, TA may still incur a lot of useless accesses to the lists. In this paper, we propose two algorithms that are much more efficient than TA. First, we propose the best position algorithm (BPA). For any database instance (i.e. set of sorted lists), we prove that BPA stops as early as TA, and that its execution cost is never higher than TA. We show that there are databases over which BPA executes top-k queries O(m) times faster than that of TA, where m is the number of lists. We also show that the execution cost of our algorithm can be (m - 1) times lower than that of TA. Second, we propose the BPA2 algorithm, which is much more efficient than BPA. We show that the number of accesses to the lists done by BPA2 can be about (m - 1) times lower than that of BPA. We evaluated the performance of our algorithms through extensive experimental tests. The results show that over our test databases, BPA and BPA2 achieve significant performance gains in comparison with TA. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Best position algorithms for efficient top-k query processing", "paper_id": "WOS:000291627500004"}