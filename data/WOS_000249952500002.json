{"auto_keywords": [{"score": 0.04179262389200998, "phrase": "decimal_floating-point_arithmetic"}, {"score": 0.00481495049065317, "phrase": "newton-raphson_iteration"}, {"score": 0.004721893473387288, "phrase": "chip_densities"}, {"score": 0.00466085208934021, "phrase": "transistor_counts"}, {"score": 0.004395742407834023, "phrase": "important_application_domains"}, {"score": 0.004338898899247236, "phrase": "future_microprocessors"}, {"score": 0.004172722575842674, "phrase": "rapid_growth"}, {"score": 0.0035923719610602245, "phrase": "draft_revision"}, {"score": 0.003477264432055326, "phrase": "floating-point_arithmetic"}, {"score": 0.003194898129853895, "phrase": "efficient_arithmetic_algorithm"}, {"score": 0.0031535341431377837, "phrase": "hardware_design"}, {"score": 0.0031127040190005216, "phrase": "decimal_floating-point_division"}, {"score": 0.0029933487820771217, "phrase": "efficient_piecewise_linear_approximation"}, {"score": 0.0029163307715069477, "phrase": "newton-raphson"}, {"score": 0.0026274936167233515, "phrase": "synthesis_results"}, {"score": 0.0023826870912207324, "phrase": "current_version"}, {"score": 0.0022912596877648723, "phrase": "estimated_critical_path_delay"}], "paper_keywords": ["decimal", " division", " floating-point", " Newton-Raphson iteration", " initial approximation", " computer arithmetic", " hardware design"], "paper_abstract": "Increasing chip densities and transistor counts provide more room for designers to add functionality for important application domains into future microprocessors. As a result of rapid growth in financial, commercial, and Internet-based applications, hardware support for decimal floating-point arithmetic is now being considered by various computer manufacturers and specifications for decimal floating-point arithmetic have been added to the draft revision of the IEEE-754 Standard for Floating-Point Arithmetic (IEEE P754). In this paper, we presents an efficient arithmetic algorithm and hardware design for decimal floating-point division. The design uses an efficient piecewise linear approximation, a modified Newton-Raphson iteration, a specialized rounding technique, and a simplified decimal incrementer and decrementer. Synthesis results show that a 64-bit (16-digit) implementation of the decimal divider, which is compliant with the current version of IEEE P754, has an estimated critical path delay of 0.69 ns (around 13 FO4 inverter delays) when implemented using LSI Logic's 0.11 micron Gflx-P standard cell library.", "paper_title": "A decimal floating-point divider using newton-raphson iteration", "paper_id": "WOS:000249952500002"}