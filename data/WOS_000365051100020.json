{"auto_keywords": [{"score": 0.040029450721470995, "phrase": "dmpc"}, {"score": 0.015575199201345799, "phrase": "load_balancing"}, {"score": 0.013621539682485211, "phrase": "polygon_complexity"}, {"score": 0.008088903026185357, "phrase": "parallel_rasterization"}, {"score": 0.00481495049065317, "phrase": "parallel_polygon_rasterization"}, {"score": 0.004616859702338596, "phrase": "parallel_computing_technology"}, {"score": 0.00453144352814823, "phrase": "massive_polygon_data"}, {"score": 0.004304574865291508, "phrase": "effective_data_decomposition_method"}, {"score": 0.0040133278382101885, "phrase": "high_parallel_efficiency"}, {"score": 0.0036382660173943393, "phrase": "rasterization_efficiency"}, {"score": 0.0034559594248079807, "phrase": "boundary_number"}, {"score": 0.0034238045290210534, "phrase": "raster_pixel_number"}, {"score": 0.0033761303704612734, "phrase": "minimum_bounding_rectangle"}, {"score": 0.002948066398723126, "phrase": "balanced_loads"}, {"score": 0.002735522834514124, "phrase": "different_polygon_rasterization_algorithms"}, {"score": 0.002684819249720834, "phrase": "different_datasets"}, {"score": 0.0026598200370569433, "phrase": "experimental_results"}, {"score": 0.0025741370320813968, "phrase": "polygon_rasterization_algorithms"}, {"score": 0.002514625755809045, "phrase": "implemented_parallel_algorithms"}, {"score": 0.002456486927713543, "phrase": "good_speedup_ratios"}, {"score": 0.002388487669097511, "phrase": "conventional_decomposition_methods"}, {"score": 0.002344201345813952, "phrase": "parallel_efficiency"}, {"score": 0.0022058510091498666, "phrase": "consistently_better_performance"}, {"score": 0.002185301851004467, "phrase": "different_spatial_distributions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Geo-processing", " Polygon rasterization", " Parallel computing", " Data decomposition", " Load balancing"], "paper_abstract": "It is essential to adopt parallel computing technology to rapidly rasterize massive polygon data. In parallel rasterization, it is difficult to design an effective data decomposition method. Conventional methods ignore load balancing of polygon complexity in parallel rasterization and thus fail to achieve high parallel efficiency. In this paper, a novel data decomposition method based on polygon complexity (DMPC) is proposed. First, four factors that possibly affect the rasterization efficiency were investigated. Then, a metric represented by the boundary number and raster pixel number in the minimum bounding rectangle was developed to calculate the complexity of each polygon. Using this metric, polygons were rationally allocated according to the polygon complexity, and each process could achieve balanced loads of polygon complexity. To validate the efficiency of DMPC, it was used to parallelize different polygon rasterization algorithms and tested on different datasets. Experimental results showed that DMPC could effectively parallelize polygon rasterization algorithms. Furthermore, the implemented parallel algorithms with DMPC could achieve good speedup ratios of at least 15.69 and generally outperformed conventional decomposition methods in terms of parallel efficiency and load balancing. In addition, the results showed that DMPC exhibited consistently better performance for different spatial distributions of polygons. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Data decomposition method for parallel polygon rasterization considering load balancing", "paper_id": "WOS:000365051100020"}