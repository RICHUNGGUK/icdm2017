{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "regular_signal-event_languages"}, {"score": 0.014416798425913214, "phrase": "inverse_substitution"}, {"score": 0.004731492618963217, "phrase": "classical_framework"}, {"score": 0.004690305164360866, "phrase": "formal_languages"}, {"score": 0.00462919213721188, "phrase": "refinement_operation"}, {"score": 0.0041136473765874815, "phrase": "specification_level"}, {"score": 0.004042295865725559, "phrase": "abstract_view"}, {"score": 0.0038862297330905836, "phrase": "timed_systems"}, {"score": 0.003752550907120244, "phrase": "uniform_notion"}, {"score": 0.0035918768194006735, "phrase": "timed_substitutions"}, {"score": 0.003545024951402821, "phrase": "general_framework"}, {"score": 0.0035141291835319682, "phrase": "signal-event_languages"}, {"score": 0.0030547611342112693, "phrase": "crucial_way"}, {"score": 0.0030281251520610604, "phrase": "\"well_known\"_result"}, {"score": 0.0027620564079817284, "phrase": "alur"}, {"score": 0.002737961987128157, "phrase": "dill"}, {"score": 0.002508284945907166, "phrase": "signal-event_automata"}, {"score": 0.0024113009621042677, "phrase": "finite_and_infinite_signal-event_words"}, {"score": 0.0023079225317714815, "phrase": "zero-duration_tau-signals"}, {"score": 0.0022878121059288653, "phrase": "zeno"}, {"score": 0.0021801135036476136, "phrase": "particular_cases"}, {"score": 0.0021328586481696157, "phrase": "first_time"}, {"score": 0.0021049977753042253, "phrase": "general_construction"}], "paper_keywords": ["timed automata", " signal-event word", " substitution", " refinement", " abstraction"], "paper_abstract": "In the classical framework of formal languages, a refinement operation is modeled by a substitution and an abstraction by an inverse substitution. These mechanisms have been widely studied, because they describe a change in the specification level, from an abstract view to a more concrete one, or conversely. For timed systems, there is up to now no uniform notion of substitution. In this paper, we study timed substitutions in the general framework of signal-event languages, where both signals and events are taken into account. We prove that regular signal-event languages are closed under substitution and inverse substitution. To obtain these results, we use in a crucial way a \"well known\" result: regular signal-event languages are closed under intersection. In fact, while this result is indeed easy for languages defined by Alur and Dill's timed automata, it turns out that the construction is much more tricky when considering the most involved model of signal-event automata. We give here a construction working on finite and infinite signal-event words and taking into account signal stuttering, unobservability of zero-duration tau-signals and Zeno runs. Note that if several constructions have been proposed in particular cases, it is the first time that a general construction is provided.", "paper_title": "Timed substitutions for regular signal-event languages", "paper_id": "WOS:000249212000001"}