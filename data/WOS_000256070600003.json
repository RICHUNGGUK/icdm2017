{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "abstract_syntax"}, {"score": 0.010081231650124988, "phrase": "behavior_trees"}, {"score": 0.004765482708043842, "phrase": "visual_languages"}, {"score": 0.004716520738331953, "phrase": "advanced_graph_grammars"}, {"score": 0.004644014990871423, "phrase": "case_study"}, {"score": 0.004525629293824217, "phrase": "diagrammatic_visual_languages"}, {"score": 0.004275650416511604, "phrase": "complex_systems"}, {"score": 0.004123781267600542, "phrase": "visual_models"}, {"score": 0.003531474887552889, "phrase": "typed_graphs"}, {"score": 0.0034951469511975346, "phrase": "graph_grammars"}, {"score": 0.0033883824438527316, "phrase": "suitable_formalism"}, {"score": 0.0032848684681050745, "phrase": "visual_modeling_languages"}, {"score": 0.0028567126120064546, "phrase": "visual_modeling_language"}, {"score": 0.002684740763324991, "phrase": "advanced_graph-transformation_techniques"}, {"score": 0.0024586427394152196, "phrase": "functional_requirements"}, {"score": 0.0023711591828229736, "phrase": "translational_semantics"}, {"score": 0.002298649369775623, "phrase": "translation_scheme"}, {"score": 0.00226322835801988, "phrase": "input_language"}, {"score": 0.0022283519468680475, "phrase": "sal_model_checking_tool"}, {"score": 0.0021714122348552747, "phrase": "graph-transformation_rules"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["visual modeling languages", " advanced graph-transformation techniques", " graph grammars", " abstract syntax definition", " semantics of visual languages", " model checking"], "paper_abstract": "Diagrammatic visual languages can increase the ability of engineers to model and understand complex systems. However, to effectively use visual models, the syntax and semantics of these languages should be defined precisely. Since most diagrammatic visual models that are Currently used to specify systems can be described as (directed) typed graphs, graph grammars have been identified as a suitable formalism to describe the abstract syntax of visual modeling languages. In this article, we investigate how advanced graph-transformation techniques, Such as conditional, structure-generic and type-generic graph-transformation rules, can help to improve and simplify the specification of the abstract syntax of a visual modeling language. To demonstrate the practicability of an approach that unifies these advanced graph-transformation techniques, we define the abstract syntax of behavior trees (BTs), a graphical specification language for functional requirements. Additionally, we provide a translational semantics of BTs by formalizing a translation scheme to the input language of the SAL model checking tool for each of the graph-transformation rules. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Defining the abstract syntax of visual languages with advanced graph grammars - A case study based on behavior trees", "paper_id": "WOS:000256070600003"}