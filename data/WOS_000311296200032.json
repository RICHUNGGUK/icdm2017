{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "matching_logic"}, {"score": 0.004444921827311577, "phrase": "verification_framework"}, {"score": 0.003737485125097945, "phrase": "underlying_proof_system"}, {"score": 0.003359119985242403, "phrase": "eight_proof_rules"}, {"score": 0.0032272929113113203, "phrase": "proof_system"}, {"score": 0.0027131212233443137, "phrase": "programming_language_configuration_model"}, {"score": 0.002438203996977464, "phrase": "generic_framework"}, {"score": 0.0021049977753042253, "phrase": "encouraging_results"}], "paper_keywords": ["Languages", " Verification", " Theory", " Reachability", " Hoare logic", " matching logic"], "paper_abstract": "This paper presents a verification framework that is parametric in a (trusted) operational semantics of some programming language. The underlying proof system is language-independent and consists of eight proof rules. The proof system is proved partially correct and relatively complete (with respect to the programming language configuration model). To show its practicality, the generic framework is instantiated with a fragment of C and evaluated with encouraging results.", "paper_title": "Checking Reachability using Matching Logic", "paper_id": "WOS:000311296200032"}