{"auto_keywords": [{"score": 0.04889532068804289, "phrase": "rmi"}, {"score": 0.04442256612506868, "phrase": "method_invocation"}, {"score": 0.00481495049065317, "phrase": "distributed_applications"}, {"score": 0.004755054742217193, "phrase": "java_rmi._remote_method_invocation"}, {"score": 0.004494570360108983, "phrase": "remote_objects"}, {"score": 0.004438642216475526, "phrase": "java-based_distributed_applications"}, {"score": 0.004040688646993605, "phrase": "wide-area_environment"}, {"score": 0.003965468669507077, "phrase": "poor_application_performance"}, {"score": 0.0036553070575015344, "phrase": "network_communication"}, {"score": 0.0031056437850836326, "phrase": "existing_rmi_applications"}, {"score": 0.003028727936200845, "phrase": "event-based_model"}, {"score": 0.0029722900280316216, "phrase": "different_consistency_policies"}, {"score": 0.002756832447586547, "phrase": "consistency_policy"}, {"score": 0.0026055251533586804, "phrase": "novel_feature"}, {"score": 0.002477998427152547, "phrase": "'reduced_object"}, {"score": 0.0023864566654035924, "phrase": "partial_representation"}, {"score": 0.002341958851390876, "phrase": "rmi_object"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["RMI", " distributed systems", " caching"], "paper_abstract": "Remote Method Invocation (RMI), a mechanism to access remote objects in Java-based distributed applications, uses network communication for each method invocation. Consequently, using RMI in a wide-area environment can cause poor application performance. One solution to improve performance is to cache the objects such that network communication is not necessary:for each method invocation. In this paper, we present mechanisms to transparently add object caching to RMI These mechanisms are compatible with existing RMI applications and use an event-based model to support different consistency policies. The mechanisms also include the ability to adaptively select the consistency policy for an object based on its usage pattern. A novel feature of our mechanisms is the use of a 'reduced object', which is a partial representation of the RMI object. We experimentally evaluate and demonstrate the benefits of our mechanisms. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "Mechanisms for object caching in distributed applications using Java RMI", "paper_id": "WOS:000247837100001"}