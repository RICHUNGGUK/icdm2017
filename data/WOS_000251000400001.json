{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cellular_automata"}, {"score": 0.045742482980849604, "phrase": "biological_retina"}, {"score": 0.004732785510739708, "phrase": "gpu_programming"}, {"score": 0.004456044928556639, "phrase": "architectural_modelization"}, {"score": 0.004305203085016233, "phrase": "real-time_performances"}, {"score": 0.004195418010131832, "phrase": "standard_widespread_computing_systems"}, {"score": 0.003471135453226184, "phrase": "corresponding_pipelined_model"}, {"score": 0.0034118234596993836, "phrase": "artificial_retina"}, {"score": 0.003130077012135034, "phrase": "main_innovation"}, {"score": 0.003050166508545763, "phrase": "computing_method"}, {"score": 0.0028715299874549245, "phrase": "personal_computer_graphical_card"}, {"score": 0.002822434555587263, "phrase": "opengl_shading_language"}, {"score": 0.0027503564589458837, "phrase": "last_section"}, {"score": 0.0025892330566358503, "phrase": "numerical_and_graphical_results"}, {"score": 0.0025014259919355453, "phrase": "particular_emphasis"}, {"score": 0.0023346234464901978, "phrase": "graphical_processor_unit"}, {"score": 0.002294861453858269, "phrase": "gpu"}, {"score": 0.002236055625099805, "phrase": "computation_power"}, {"score": 0.0021049977753042253, "phrase": "conventional_programming"}], "paper_keywords": ["computer vision", " real-time computing", " artificial retina", " Graphical Processor Unit programming", " OpenGL shading language", " cellular automata"], "paper_abstract": "This article shows how the architectural modelization of biological retina allows real-time performances, on standard widespread computing systems. First, we describe the biological retina with regard to its pipeline architecture, detailing its layer behaviours and properties. Then we propose a corresponding pipelined model of artificial retina based on cellular automata. In this work, the main innovation is the computing method based on the programming of a personal computer graphical card using OpenGL shading language. The last section demonstrates the efficiency of our model through numerical and graphical results. We lay particular emphasis on the fact that our direct implementation of the Graphical Processor Unit (GPU) provides computation power about 20 times as fast as conventional programming.", "paper_title": "Retina simulation using cellular automata and GPU programming", "paper_id": "WOS:000251000400001"}