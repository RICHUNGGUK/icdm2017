{"auto_keywords": [{"score": 0.04930986456658361, "phrase": "streaming_applications"}, {"score": 0.00481495049065317, "phrase": "embedded_manycores"}, {"score": 0.004586531354697466, "phrase": "dataflow_specification_models"}, {"score": 0.004298666679374568, "phrase": "distributed-memory_parallel_processors"}, {"score": 0.00412796126884884, "phrase": "current_practice"}, {"score": 0.003964007795174772, "phrase": "rigid_dataflow_models"}, {"score": 0.00374531366198605, "phrase": "platform_oriented_optimizations"}, {"score": 0.003289534854212415, "phrase": "functionally-consistent_structurally-malleabe_streaming_specification"}, {"score": 0.003210446135114967, "phrase": "formless"}, {"score": 0.0030331993611107328, "phrase": "abstraction_level"}, {"score": 0.002984373546099842, "phrase": "fixed-structure_dataflow"}, {"score": 0.0026209522797963447, "phrase": "design_space_exploration_scheme"}, {"score": 0.002537216271965659, "phrase": "application_specification"}, {"score": 0.002436289099444074, "phrase": "target_platform"}, {"score": 0.0022281257694320455, "phrase": "conventional_dataflow_specification_models"}], "paper_keywords": ["Dataflow Graph", " Stream Application", " Embedded Manycore Processor"], "paper_abstract": "Variants of dataflow specification models are widely used to synthesize streaming applications for distributed-memory parallel processors. We argue that current practice of specifying streaming applications using rigid dataflow models, implicitly prohibits a number of platform oriented optimizations and hence limits portability and scalability with respect to number of processors. We motivate Functionally-cOnsistent stRucturally-MalLEabe Streaming Specification, dubbed FORMLESS, which refers to raising the abstraction level beyond fixed-structure dataflow to address its portability and scalability limitations. To demonstrate the potential of the idea, we develop a design space exploration scheme to customize the application specification to better fit the target platform. Experiments with several common streaming case studies demonstrate improved portability and scalability over conventional dataflow specification models, and confirm the effectiveness of our approach.", "paper_title": "FORMLESS: Scalable Utilization of Embedded Manycores in Streaming Applications", "paper_id": "WOS:000307580000008"}