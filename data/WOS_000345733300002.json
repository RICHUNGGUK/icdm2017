{"auto_keywords": [{"score": 0.03198380938380923, "phrase": "ctf"}, {"score": 0.028152152619431006, "phrase": "ccsdt"}, {"score": 0.00481495049065317, "phrase": "coupled-cluster_computations"}, {"score": 0.004707479285061122, "phrase": "molecular_electronic_wavefunctions"}, {"score": 0.004499647408293102, "phrase": "tensor_contractions"}, {"score": 0.004359625030298944, "phrase": "polynomial_computational_scaling"}, {"score": 0.004204904449336037, "phrase": "set_sizes"}, {"score": 0.004055652445791872, "phrase": "matrix_multiplication"}, {"score": 0.0040010534672646775, "phrase": "properly_ordered_and_structured_tensor"}, {"score": 0.003929391999210588, "phrase": "data_transpositions"}, {"score": 0.003688497722149817, "phrase": "optimizing_distributed-memory_kernels"}, {"score": 0.00338493754743055, "phrase": "tensor_indices"}, {"score": 0.003309278541665552, "phrase": "distributed-memory_numerical_library"}, {"score": 0.003134503353065008, "phrase": "tensor_blocking"}, {"score": 0.0030505976034245234, "phrase": "user-specified_contractions"}, {"score": 0.0029689311901364797, "phrase": "distributed-memory_contraction_engine"}, {"score": 0.0029422086272881055, "phrase": "aquarius"}, {"score": 0.0028248293967214947, "phrase": "massively-parallel_quantum_chemical_computations"}, {"score": 0.002712131567923321, "phrase": "related_methods"}, {"score": 0.0026755838121361396, "phrase": "ccsd"}, {"score": 0.0023148964315569866, "phrase": "high_parallel_scalability"}, {"score": 0.002252880693912436, "phrase": "accurate_electronic_structure_calculations"}, {"score": 0.002162951519368368, "phrase": "general_distributed-memory_tensor_primitives"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Coupled-cluster", " Tensor contractions", " Matrix multiplication", " Topology-aware mapping", " Communication-avoiding algorithms"], "paper_abstract": "Precise calculation of molecular electronic wavefunctions by methods such as coupled-cluster requires the computation of tensor contractions, the cost of which has polynomial computational scaling with respect to the system and basis set sizes. Each contraction may be executed via matrix multiplication on a properly ordered and structured tensor. However, data transpositions are often needed to reorder the tensors for each contraction. Writing and optimizing distributed-memory kernels for each transposition and contraction is tedious since the number of contractions scales combinatorially with the number of tensor indices. We present a distributed-memory numerical library (Cyclops Tensor Framework (CTF)) that automatically manages tensor blocking and redistribution to perform any user-specified contractions. CTF serves as the distributed-memory contraction engine in Aquarius, a new program designed for high-accuracy and massively-parallel quantum chemical computations. Aquarius implements a range of coupled-cluster and related methods such as CCSD and CCSDT by writing the equations on top of a C++ templated domain-specific language. This DSL calls CTF directly to manage the data and perform the contractions. Our CCSD and CCSDT implementations achieve high parallel scalability on the BlueGene/Q and Cray XC30 supercomputer architectures showing that accurate electronic structure calculations can be effectively carried out on top of general distributed-memory tensor primitives. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A massively parallel tensor contraction framework for coupled-cluster computations", "paper_id": "WOS:000345733300002"}