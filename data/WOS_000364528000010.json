{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "submodular_maximization"}, {"score": 0.004501578643090429, "phrase": "maximum_matching"}, {"score": 0.004385270183517169, "phrase": "input_stream"}, {"score": 0.00430402915573404, "phrase": "arbitrary_order"}, {"score": 0.0041151131903594445, "phrase": "monotone_submodular_function"}, {"score": 0.0038471420098376147, "phrase": "msm"}, {"score": 0.003775803846431323, "phrase": "natural_generalization"}, {"score": 0.0037476503270386903, "phrase": "maximum_weight_matching"}, {"score": 0.003583067515485425, "phrase": "maximum_cardinality_matching"}, {"score": 0.0034643747383816164, "phrase": "space_usage"}, {"score": 0.003412887952564431, "phrase": "semi-streaming_range"}, {"score": 0.003324614337607016, "phrase": "working_memory"}, {"score": 0.003275197814021, "phrase": "approximation_ratios"}, {"score": 0.003214455466823939, "phrase": "single_pass"}, {"score": 0.0030502854924662837, "phrase": "zelke's_and_mcgregor's_respective_algorithms"}, {"score": 0.0030275292684556806, "phrase": "mwm"}, {"score": 0.002916238693326477, "phrase": "msm_setting"}, {"score": 0.002840774188169279, "phrase": "general_framework"}, {"score": 0.0028195727965553367, "phrase": "mwm_algorithms"}, {"score": 0.0027261023678401696, "phrase": "broader_setting"}, {"score": 0.0027057568941142814, "phrase": "msm."}, {"score": 0.0025771355599741915, "phrase": "general_pattern"}, {"score": 0.00252930673503721, "phrase": "linear_weight_functions"}, {"score": 0.002510424048850241, "phrase": "\"independent_sets"}, {"score": 0.0024000447011533078, "phrase": "submodular_function"}, {"score": 0.002260367486652148, "phrase": "known_weight-maximization_algorithms"}, {"score": 0.0021448202319775634, "phrase": "independent_sets"}, {"score": 0.0021049977753042253, "phrase": "multiple_matroids"}], "paper_keywords": [""], "paper_abstract": "We study the problem of finding a maximum matching in a graph given by an input stream listing its edges in some arbitrary order, where the quantity to be maximized is given by a monotone submodular function on subsets of edges. This problem, which we call maximum submodular-function matching (MSM), is a natural generalization of maximum weight matching (MWM), which is in turn a generalization of maximum cardinality matching. We give two incomparable algorithms for this problem with space usage falling in the semi-streaming range-they store only edges, using working memory-that achieve approximation ratios of 7.75 in a single pass and in passes respectively. The operations of these algorithms mimic those of Zelke's and McGregor's respective algorithms for MWM; the novelty lies in the analysis for the MSM setting. In fact we identify a general framework for MWM algorithms that allows this kind of adaptation to the broader setting of MSM. Our framework is not specific to matchings. Rather, we identify a general pattern for algorithms that maximize linear weight functions over \"independent sets\" and prove that such algorithms can be adapted to maximize a submodular function. The notion of independence here is very general; in particular, appealing to known weight-maximization algorithms, we obtain results for submodular maximization over hypermatchings in hypergraphs as well as independent sets in the intersection of multiple matroids.", "paper_title": "Submodular maximization meets streaming: matchings, matroids, and more", "paper_id": "WOS:000364528000010"}