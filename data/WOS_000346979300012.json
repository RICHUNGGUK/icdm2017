{"auto_keywords": [{"score": 0.037500051242514945, "phrase": "scalegpu"}, {"score": 0.01572060305866294, "phrase": "gpu"}, {"score": 0.00696810043489858, "phrase": "gpu_memory"}, {"score": 0.004730458558634266, "phrase": "memory-unaware_gpu_programming"}, {"score": 0.004674952036988355, "phrase": "programmer-managed_gpu_memory"}, {"score": 0.004485735417293941, "phrase": "gpu_applications"}, {"score": 0.004278807087784626, "phrase": "existing_code"}, {"score": 0.00420368356873615, "phrase": "different_gpu_memory_size"}, {"score": 0.003735349093835257, "phrase": "significant_performance_degradation"}, {"score": 0.0033984088755183287, "phrase": "high-performance_memory-unaware_gpu_programming"}, {"score": 0.0032033846797483475, "phrase": "cpu_memory"}, {"score": 0.003073545175760353, "phrase": "cpu_memory-sized_programming_space"}, {"score": 0.002984027623988469, "phrase": "high_performance"}, {"score": 0.0028800314406625996, "phrase": "cpu-gpu_data_transfers"}, {"score": 0.0027961342030212353, "phrase": "gpu_memory's_high_bandwidth"}, {"score": 0.0026355812883224203, "phrase": "gpu_application"}, {"score": 0.0025892330566358503, "phrase": "gpu_memory_size"}, {"score": 0.0023554316787703137, "phrase": "hotspot_application"}, {"score": 0.0021049977753042253, "phrase": "target_performance"}], "paper_keywords": [""], "paper_abstract": "Programmer-managed GPU memory is a major challenge in writing GPU applications. Programmers must rewrite and optimize an existing code for a different GPU memory size for both portability and performance. Alternatively, they can achieve only portability by disabling GPU memory at the cost of significant performance degradation. In this paper, we propose ScaleGPU, a novel GPU architecture to enable high-performance memory-unaware GPU programming. ScaleGPU uses GPU memory as a cache of CPU memory to provide programmers a view of CPU memory-sized programming space. ScaleGPU also achieves high performance by minimizing the amount of CPU-GPU data transfers and by utilizing the GPU memory's high bandwidth. Our experiments show that ScaleGPU can run a GPU application on any GPU memory size and also improves performance significantly. For example, ScaleGPU improves the performance of the hotspot application by similar to 48% using the same size of GPU memory and reduces its memory size requirement by similar to 75% maintaining the target performance.", "paper_title": "ScaleGPU: GPU Architecture for Memory-Unaware GPU Programming", "paper_id": "WOS:000346979300012"}