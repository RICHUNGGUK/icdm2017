{"auto_keywords": [{"score": 0.03976831816650349, "phrase": "energy_consumption"}, {"score": 0.013760018961554248, "phrase": "aggressive_speculative_execution"}, {"score": 0.010435409021063343, "phrase": "spmt_architecture"}, {"score": 0.00481495049065317, "phrase": "energy_aware_speculation"}, {"score": 0.0047689174754929195, "phrase": "speculative_multithreaded_processors"}, {"score": 0.004723322467153553, "phrase": "unending_quest"}, {"score": 0.0046781613377273774, "phrase": "performance_improvement"}, {"score": 0.004545240514015278, "phrase": "integrated_circuit_technology"}, {"score": 0.004394910907549057, "phrase": "new_architectural_paradigm"}, {"score": 0.004352876088312741, "phrase": "speculative_multithreaded_architecture"}, {"score": 0.004168618849008299, "phrase": "improved_performance"}, {"score": 0.004011366422179016, "phrase": "mixed_flavor"}, {"score": 0.0036611708297251645, "phrase": "useless_computation"}, {"score": 0.0035399770257915466, "phrase": "dynamic_instruction_criticality_information"}, {"score": 0.0030642636185693054, "phrase": "dynamic_instruction_criticality"}, {"score": 0.0029343925814926787, "phrase": "criticality_information"}, {"score": 0.0028784478769295204, "phrase": "non-critical_loads"}, {"score": 0.002837188425640173, "phrase": "criticality_based_thread-prediction"}, {"score": 0.002730023736069673, "phrase": "experimental_results"}, {"score": 0.002677964894127131, "phrase": "critical_instructions"}, {"score": 0.0026268961477241026, "phrase": "proposed_techniques"}, {"score": 0.0025034338848015166, "phrase": "multiscalar_processor"}, {"score": 0.0023743009016047424, "phrase": "dynamic_energy"}, {"score": 0.0023515464194592195, "phrase": "criticality_based_thread_prediction"}, {"score": 0.0023178219772486868, "phrase": "based_delayed_load_scheme"}, {"score": 0.002251813863195168, "phrase": "dynamic_energy_delay_product"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Speculative multithreading", " Instruction criticality", " Execution modeling", " Prediction", " Speculation control", " Energy optimization"], "paper_abstract": "Unending quest for performance improvement coupled with the advancements in integrated circuit technology have led to the development of new architectural paradigm. Speculative multithreaded architecture (SpMT) philosophy relies on aggressive speculative execution for improved performance. However, aggressive speculative execution comes with a mixed flavor of improving performance, when successful, and adversely affecting the energy consumption (and performance) because of useless computation in the event of mis-speculation. Dynamic instruction criticality information can be usefully applied to control and guide such an aggressive speculative execution. In this paper, we present a model of micro-execution for SpMT architecture that we have developed to determine the dynamic instruction criticality. We have also developed two novel techniques utilizing the criticality information namely delaying the non-critical loads and the criticality based thread-prediction for reducing useless computations and energy consumption. Experimental results showing break-up of critical instructions and effectiveness of proposed techniques in reducing energy consumption are presented in the context of multiscalar processor that implements SpMT architecture. Our experiments show 17.7% and 11.6% reduction in dynamic energy for criticality based thread prediction and criticality based delayed load scheme respectively while the improvement in dynamic energy delay product is 13.9% and 5.5%, respectively. (c) 2012 Published by Elsevier B.V.", "paper_title": "Criticality guided energy aware speculation for speculative multithreaded processors", "paper_id": "WOS:000305379600004"}