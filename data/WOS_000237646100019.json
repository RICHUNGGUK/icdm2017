{"auto_keywords": [{"score": 0.04555525338591093, "phrase": "tag_locations"}, {"score": 0.00481495049065317, "phrase": "index_structure"}, {"score": 0.004767546015485477, "phrase": "fixed_intervals"}, {"score": 0.0046741260449047976, "phrase": "rfid_tags"}, {"score": 0.004448471107649881, "phrase": "rfid_systems"}, {"score": 0.004069280130346136, "phrase": "rfid_system"}, {"score": 0.0028911669203979156, "phrase": "long_time"}, {"score": 0.002737745536992088, "phrase": "whole_index"}, {"score": 0.002605329434787829, "phrase": "data_model"}, {"score": 0.0024793019587009035, "phrase": "intentional_fixed_intervals"}, {"score": 0.002442693254693416, "phrase": "new_index_scheme"}, {"score": 0.0023476849595393872, "phrase": "new_insert"}, {"score": 0.0021793698531006197, "phrase": "proposed_index_scheme"}], "paper_keywords": [""], "paper_abstract": "Recently, there has been a demand for RFID systems that can trace tag locations. For tracing tag locations, trajectories should be modeled and indexed in an RFID system. The trajectory of a tag is represented as a line that connects two spatiotemporal locations that are captured when the tag enters and leaves the vicinity of a reader. If a tag enters but does not leave a reader, its trajectory is represented only as the point captured at entry. When we process a query that finds the tag staying in a reader, it takes a long time to find this tag because it leads to searching the whole index. To solve this problem, we propose a data model in which trajectories of these tags are defined as intentional fixed intervals and a new index scheme called the Fixed Interval R-tree. We also propose a new insert and split policy to process queries efficiently. We evaluated the performance of the proposed index scheme and compared it with other schemes on various datasets and queries.", "paper_title": "Design and implementation of an index structure using fixed intervals for tracing of RFID tags", "paper_id": "WOS:000237646100019"}