{"auto_keywords": [{"score": 0.0348500503107606, "phrase": "middleware_architecture"}, {"score": 0.015719716506582538, "phrase": "context-aware_mobile_applications"}, {"score": 0.01206191993286103, "phrase": "context-aware_applications"}, {"score": 0.004670896353428476, "phrase": "powerful_smartphone_devices"}, {"score": 0.004586531354697466, "phrase": "great_opportunity"}, {"score": 0.004289966839994858, "phrase": "conventional_software_development_techniques"}, {"score": 0.004161553532799662, "phrase": "added_complexity"}, {"score": 0.004012500850311087, "phrase": "context_information"}, {"score": 0.00386876598761639, "phrase": "component-based_middleware_architecture"}, {"score": 0.0035530197642369464, "phrase": "main_contribution"}, {"score": 0.0033637374697995616, "phrase": "development_methodology"}, {"score": 0.0032039415997394817, "phrase": "significant_value"}, {"score": 0.0027685531038981847, "phrase": "developmental_cost"}, {"score": 0.002466139325703204, "phrase": "reusable_components"}, {"score": 0.0021438155673297377, "phrase": "resource-aware_manner"}, {"score": 0.0021049977753042253, "phrase": "proposed_methodology"}], "paper_keywords": ["Context-awareness", " Middleware", " Reusability", " Pluggability", " Modularity", " Mobile devices", " Separation-of-concerns"], "paper_abstract": "The proliferation of powerful smartphone devices provides a great opportunity for context-aware mobile applications becoming mainstream. However, we argue that conventional software development techniques suffer because of the added complexity required for collecting and managing context information. This paper presents a component-based middleware architecture which facilitates the development and deployment of context-aware applications via reusable components. The main contribution of this approach is the combination of a development methodology with the middleware architecture, which together bring significant value to developers of context-aware applications. Further contributions include the following: The methodology utilizes separation of concerns, thus decreasing the developmental cost and improving the productivity. The design and implementation of context-aware applications are also eased via the use of reusable components, called context plug-ins. Finally, the middleware architecture facilitates the deployment and management of the context plug-ins in a resource-aware manner. The proposed methodology and middleware architecture are evaluated both quantitatively and qualitatively.", "paper_title": "A pluggable middleware architecture for developing context-aware mobile applications", "paper_id": "WOS:000336404300006"}