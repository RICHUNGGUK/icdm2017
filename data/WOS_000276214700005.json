{"auto_keywords": [{"score": 0.004545793387330536, "phrase": "length_l"}, {"score": 0.004475022550508119, "phrase": "fixed_finite_alphabet"}, {"score": 0.004180809918117248, "phrase": "symmetric_relation"}, {"score": 0.0040942189695983185, "phrase": "constant_length"}, {"score": 0.003303412571939192, "phrase": "n_replacements"}, {"score": 0.0030062165552187086, "phrase": "gap_condition"}, {"score": 0.0029593432468318745, "phrase": "growth_condition"}, {"score": 0.0027356847952125433, "phrase": "inverse_polylogarithmic"}, {"score": 0.0021049977753042253, "phrase": "quantum_computer"}], "paper_keywords": ["PromiseBQP", " PromiseBQP-complete problems"], "paper_abstract": "We consider the following combinatorial problem. We are given three strings s, t, and t' of length L over some fixed finite alphabet and an integer in that is polylogarithmic in L. We have a symmetric relation on substrings of constant length that specifies which substrings are allowed to be replaced with each other. Let Delta(n) denote the difference between the numbers of possibilities to obtain t from s and t' from s after n is an element of N replacements. The problem is to determine the sign of A(m). As promises we have a gap condition and a growth condition. The former states that Delta(m) >= is an element of c(m) where is inverse polylogarithmic in L and c > 0 is a constant. The latter is given by Delta(n) <= c(n) for all n. We show that this problem is PromiseBQP-complete, i.e., it represents the class of problems that can be solved efficiently on a quantum computer.", "paper_title": "A PROMISEBQP-COMPLETE STRING REWRITING PROBLEM", "paper_id": "WOS:000276214700005"}