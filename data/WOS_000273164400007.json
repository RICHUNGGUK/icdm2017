{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "customized"}, {"score": 0.004783730450730986, "phrase": "on-chip_crossbar_schedulers"}, {"score": 0.004367228576339114, "phrase": "customized_crossbar_schedulers"}, {"score": 0.004227398267369744, "phrase": "chip_crossbar_networks"}, {"score": 0.004039094712469991, "phrase": "scalability_problem"}, {"score": 0.003960972732123083, "phrase": "conventional_crossbar_network"}, {"score": 0.003859146369720225, "phrase": "adaptive_schedulers"}, {"score": 0.0038092152998069786, "phrase": "customized_crossbar_ports"}, {"score": 0.003569050665799723, "phrase": "weighted_round_robin_arbitration_scheme"}, {"score": 0.0034322572683276654, "phrase": "bandwidth_requirements"}, {"score": 0.0033878306639271963, "phrase": "specific_applications"}, {"score": 0.003133052778244851, "phrase": "multiple_ports"}, {"score": 0.003012919635505122, "phrase": "implementation_cost"}, {"score": 0.0029545864975783023, "phrase": "proposed_schedulers"}, {"score": 0.0027323009127771525, "phrase": "physical_topologies"}, {"score": 0.0026619761089539595, "phrase": "logical_topologies"}, {"score": 0.002576603426735759, "phrase": "conventional_crossbar_schedulers"}, {"score": 0.002543224008253855, "phrase": "reference_designs"}, {"score": 0.0024939618994290016, "phrase": "comparative_performance_analysis"}, {"score": 0.002413964586947992, "phrase": "hardware_scheduler_modules"}, {"score": 0.0023213398100616132, "phrase": "practical_applications"}, {"score": 0.002160640052461594, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "reference_schedulers"}], "paper_keywords": ["Interconnection architectures", " Schedulers", " Network topology", " Reconfigurable hardware"], "paper_abstract": "In this paper, we present a design and an analysis of customized crossbar schedulers for reconfigurable on-chip crossbar networks. In order to alleviate the scalability problem in a conventional crossbar network, we propose adaptive schedulers on customized crossbar ports. Specifically, we present a scheduler with a weighted round robin arbitration scheme that takes into account the bandwidth requirements of specific applications. In addition, we propose the sharing of schedulers among multiple ports in order to reduce the implementation cost. The proposed schedulers arbitrate on-demand (at design time) interconnects and adhere to the link bandwidth requirements, where physical topologies are identical to logical topologies for given applications. Considering conventional crossbar schedulers as reference designs, a comparative performance analysis is conducted. The hardware scheduler modules are parameterized. Experiments with practical applications show that our custom schedulers occupy up to 83% less area, and maintain better performance compared to the reference schedulers.", "paper_title": "Design Trade-offs in Customized On-chip Crossbar Schedulers", "paper_id": "WOS:000273164400007"}