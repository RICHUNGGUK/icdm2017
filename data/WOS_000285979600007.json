{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "charm"}, {"score": 0.004692227830462433, "phrase": "network_contention"}, {"score": 0.004652016085325825, "phrase": "optimal_network_performance"}, {"score": 0.0045726187330434025, "phrase": "efficient_parallel_scaling"}, {"score": 0.004533427352547707, "phrase": "communication-bound_applications"}, {"score": 0.004417848254181138, "phrase": "-load_latencies"}, {"score": 0.004195418010131832, "phrase": "wormhole_routing"}, {"score": 0.003865826699096508, "phrase": "message_latencies"}, {"score": 0.0037348894128879082, "phrase": "task_mapping_strategies"}, {"score": 0.0035620354052144656, "phrase": "large_machines"}, {"score": 0.003441352119167824, "phrase": "topology_aware_mapping"}, {"score": 0.003324743991757282, "phrase": "three-dimensional_mesh_interconnects"}, {"score": 0.003130077012135034, "phrase": "object-based_decomposition"}, {"score": 0.0028468767420392945, "phrase": "communication_patterns"}, {"score": 0.0027150087516999047, "phrase": "allocated_job_partition"}, {"score": 0.002668582249630492, "phrase": "mapping_strategies"}, {"score": 0.0026342827320931937, "phrase": "production_code"}, {"score": 0.002566997205079849, "phrase": "overall_performance"}, {"score": 0.0025230952890994236, "phrase": "openatom"}, {"score": 0.0025014259919355453, "phrase": "complex_communication_scenarios"}, {"score": 0.0024586427394152196, "phrase": "multiple_groups"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["mapping", " performance optimization", " mesh topology"], "paper_abstract": "Optimal network performance is critical for efficient parallel scaling of communication-bound applications on large machines. No-load latencies do not increase significantly with the number of hops traveled when wormhole routing is deployed. Yet, we and others have recently shown that in the presence of contention, message latencies can grow substantially large. Hence, task mapping strategies should take the topology of the machine into account on large machines. In this paper, we present topology aware mapping as a technique to optimize communication on three-dimensional mesh interconnects and hence improve the performance. Our methodology is facilitated by the idea of object-based decomposition used in Charm++ which separates the processes of decomposition from mapping of computation to processors and allows a more flexible mapping based on communication patterns between objects. Exploiting this and the topology of the allocated job partition, we present mapping strategies for a production code, OpenAtom to improve the overall performance and scaling. OpenAtom presents complex communication scenarios of interaction involving multiple groups of objects and makes the mapping task a challenge. Results are presented for OpenAtom on up to 16 384 processors of Blue Gene/L, 8192 processors of Blue Gene/P and 2048 processors of Cray XT3. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Optimizing communication for Charm plus plus applications by reducing network contention", "paper_id": "WOS:000285979600007"}