{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "system-level_approach"}, {"score": 0.02431777675002257, "phrase": "surveillance_system"}, {"score": 0.004742730438544081, "phrase": "distributed_surveillance_systems"}, {"score": 0.004624751696958501, "phrase": "sensor_networks"}, {"score": 0.004555371402128666, "phrase": "object_location"}, {"score": 0.0044644734709113985, "phrase": "road_traffic_monitoring"}, {"score": 0.003594369823549604, "phrase": "new_system-level_programming_language"}, {"score": 0.003558294449586273, "phrase": "systemj"}, {"score": 0.0034348484776384643, "phrase": "computational_and_communication_parts"}, {"score": 0.003332440548684892, "phrase": "highly_abstract_manner"}, {"score": 0.003282383509542342, "phrase": "designed_system"}, {"score": 0.0030278017562213265, "phrase": "overall_reliability"}, {"score": 0.002907992115184249, "phrase": "additional_tool"}, {"score": 0.0028642924503126154, "phrase": "design_environment"}, {"score": 0.0027929100418926725, "phrase": "surveillance_system_topology"}, {"score": 0.002764856305713066, "phrase": "physical_and_communication_properties"}, {"score": 0.0026554236621262515, "phrase": "computing_resources"}, {"score": 0.002563219920877287, "phrase": "easy_composition"}, {"score": 0.0025374674652885354, "phrase": "multiple_sensors"}, {"score": 0.002388283252319309, "phrase": "underlying_communication"}, {"score": 0.0023523750536537102, "phrase": "automatic_generation"}, {"score": 0.0023170054862555896, "phrase": "formal_description"}, {"score": 0.002158836285985314, "phrase": "executable_code"}, {"score": 0.0021049977753042253, "phrase": "detailed_systemj_application-specific_code"}], "paper_keywords": ["Design", " Experimentation", " Human Factors", " System-level design", " distributed system", " concurrency", " GALS", " SystemJ"], "paper_abstract": "Distributed surveillance systems represent a class of sensor networks used for object location and tracking, road traffic monitoring, security, and other purposes. They are very complex to describe, design, and run. Because of their sensitivity, they need to be carefully designed and validated. We present a system-level approach to modeling and designing such systems using a new system-level programming language, SystemJ, which enables designers to describe computational and communication parts of such applications in a highly abstract manner. The designed system can be modeled and validated even before deployment and in that way contribute to the overall reliability and trustworthiness of such systems. As an additional tool, the design environment for specification of the surveillance system topology, physical and communication properties, selected sensors and their interconnectivity with the computing resources was developed. This tool enables easy composition of multiple sensors and their respective controllers, capturing changes of configuration of the system and underlying communication, and automatic generation of the formal description of the surveillance system. This description is then used for the generation of executable code and/or the templates for detailed SystemJ application-specific code, as well as for generation of the operator GUI in a surveillance system.", "paper_title": "System-Level Approach to the Design of a Smart Distributed Surveillance System Using SystemJ", "paper_id": "WOS:000313395700008"}