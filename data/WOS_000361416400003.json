{"auto_keywords": [{"score": 0.031763843900136826, "phrase": "malicious_applications"}, {"score": 0.00981368589515317, "phrase": "android"}, {"score": 0.00481495049065317, "phrase": "android_malware"}, {"score": 0.004767826806287385, "phrase": "clone_detection"}, {"score": 0.004385367803204002, "phrase": "largest_share"}, {"score": 0.004342430078306461, "phrase": "global_mobile_malware"}, {"score": 0.004299910946753963, "phrase": "significant_public_attention"}, {"score": 0.004174824849669107, "phrase": "security_issues"}, {"score": 0.003896871009090446, "phrase": "clone_detector"}, {"score": 0.0038397509389856625, "phrase": "known_android_malware"}, {"score": 0.003709693561373117, "phrase": "android_applications"}, {"score": 0.003548905904860611, "phrase": "benign_applications"}, {"score": 0.003462599815177726, "phrase": "java_source_code"}, {"score": 0.0034118234596993836, "phrase": "binary_code"}, {"score": 0.003312486229143855, "phrase": "nicad"}, {"score": 0.0030464123943266673, "phrase": "small_subset"}, {"score": 0.002914288956035066, "phrase": "clone_classes"}, {"score": 0.0028293966058473476, "phrase": "similar_source_files"}, {"score": 0.002706659627293686, "phrase": "benign_collection"}, {"score": 0.002640781900605126, "phrase": "control_group"}, {"score": 0.002428530921948425, "phrase": "small_portion"}, {"score": 0.0023694065215394593, "phrase": "training_set"}, {"score": 0.0023117182131967523, "phrase": "previously_known_malware"}], "paper_keywords": ["Android", " malware", " clone detection"], "paper_abstract": "Android is currently one of the most popular smartphone operating systems. However, Android has the largest share of global mobile malware and significant public attention has been brought to the security issues of Android. In this paper, we investigate the use of a clone detector to identify known Android malware. We collect a set of Android applications known to contain malware and a set of benign applications. We extract the Java source code from the binary code of the applications and use NiCad, a near-miss clone detector, to find the classes of clones in a small subset of the malicious applications. We then use these clone classes as a signature to find similar source files in the rest of the malicious applications. The benign collection is used as a control group. In our evaluation, we successfully decompile more than 1 000 malicious apps in 19 malware families. Our results show that using a small portion of malicious applications as a training set can detect 95% of previously known malware with very low false positives and high accuracy at 96.88%. Our method can effectively and reliably pinpoint malicious applications that belong to certain malware families.", "paper_title": "Detecting Android Malware Using Clone Detection", "paper_id": "WOS:000361416400003"}