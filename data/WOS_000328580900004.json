{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "control-flow_construct_feature"}, {"score": 0.004678785623021003, "phrase": "existing_anti-virus_methods"}, {"score": 0.004520438007604407, "phrase": "manual_analysis"}, {"score": 0.004268293864953256, "phrase": "large_number"}, {"score": 0.004053362743156545, "phrase": "unknown_malware_detection"}, {"score": 0.0037834649508375544, "phrase": "software_structure"}, {"score": 0.003613556291453534, "phrase": "control_flow"}, {"score": 0.0034118234596993836, "phrase": "interior_cross-references"}, {"score": 0.003334309053314909, "phrase": "feature-selection_approach"}, {"score": 0.003130077012135034, "phrase": "opcode_sequences"}, {"score": 0.00307657476125683, "phrase": "disassembled_program"}, {"score": 0.002938317647182056, "phrase": "vector_space_model"}, {"score": 0.0028550709503536494, "phrase": "data_mining"}, {"score": 0.002758273619951683, "phrase": "classify_rules"}, {"score": 0.002711109302199029, "phrase": "software_features"}, {"score": 0.002544951823639408, "phrase": "malware_detection"}, {"score": 0.0025158514649823724, "phrase": "experimental_results"}, {"score": 0.0024586427394152196, "phrase": "proposed_method"}, {"score": 0.0022296340517805125, "phrase": "overall_accuracy"}, {"score": 0.0021539955106204354, "phrase": "experimental_data"}, {"score": 0.0021049977753042253, "phrase": "training_data"}], "paper_keywords": ["data mining", " invasive software", " learning (artificial intelligence)", " pattern classification", " random forest classifier", " data mining", " vector space model", " disassembled program", " opcode sequences", " feature-selection approach", " interior cross-references", " software structure", " anti-virus methods", " control-flow construct feature", " malware detection method"], "paper_abstract": "The existing anti-virus methods extract signatures of software by manual analysis. It is inefficient when they deal with a large number of malware. Meanwhile, the limitation of unknown malware detection often is found in them too. By the research on software structure, it has been found that the control flow of software can be divided into many basic blocks by the interior cross-references, and a feature-selection approach based on this phenomenon is proposed. It can extract opcode sequences from the disassembled program, and translate them into features by vector space model. The algorithms of data mining are employed to find the classify rules from the software features, and then the rules can be applied to the malware detection. Experimental results illustrate that the proposed method can achieve the 97.0% malware detection accuracy and 3.2% false positive rate with the Random Forest classifier. Furthermore, as high as 94.5% overall accuracy can be achieved when only 5% experimental data are used as training data.", "paper_title": "Malware detection method based on the control-flow construct feature of software", "paper_id": "WOS:000328580900004"}