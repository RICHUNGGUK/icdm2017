{"auto_keywords": [{"score": 0.049715817986079144, "phrase": "convex_polyhedra"}, {"score": 0.015719716506582538, "phrase": "minkowski_sums"}, {"score": 0.007373804428680623, "phrase": "exact_results"}, {"score": 0.004652754203582873, "phrase": "exact_implementation"}, {"score": 0.00459990650330792, "phrase": "efficient_algorithm"}, {"score": 0.004262539473250432, "phrase": "general_position"}, {"score": 0.004150377643719188, "phrase": "degenerate_input"}, {"score": 0.00394981748347167, "phrase": "minkowski-sum_computation"}, {"score": 0.0039049226745413224, "phrase": "collision_and_proximity_queries"}, {"score": 0.0038605361756636667, "phrase": "relative_placement"}, {"score": 0.0037161794591176033, "phrase": "dual_representation"}, {"score": 0.00356359155432419, "phrase": "arrangement_package"}, {"score": 0.0035365276186675306, "phrase": "cgal"}, {"score": 0.003264422557779251, "phrase": "simple_approach"}, {"score": 0.0032150101448578734, "phrase": "convex_hull"}, {"score": 0.0031784407245606704, "phrase": "pairwise_surns"}, {"score": 0.003047865053078826, "phrase": "nef_polyhedra"}, {"score": 0.002922637921202474, "phrase": "output-sensitive_approach"}, {"score": 0.0028893844749296863, "phrase": "linear_programming"}, {"score": 0.0027495914857929584, "phrase": "broad_family"}, {"score": 0.0026771333996253783, "phrase": "relevant_programs"}, {"score": 0.0026567830878420347, "phrase": "source_code"}, {"score": 0.002636587060621144, "phrase": "data_sets"}, {"score": 0.0024804352736263005, "phrase": "halperin_d._video"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["computational geometry", " collision detection", " 3D Minkowski sum", " 2D arrangement", " Gaussian map"], "paper_abstract": "We present an exact implementation of an efficient algorithm that computes Minkowski sums of convex polyhedra in R-3. Our implementation is complete in the sense that it does not assume general position. Namely, it can handle degenerate input, and it produces exact results. We also present applications of the Minkowski-sum computation to answer collision and proximity queries about the relative placement of two convex polyhedra in R3. The algorithms use a dual representation of convex polyhedra, and their implementation is mainly based on the Arrangement package of CGAL, the Computational Geometry Algorithm Library. We compare our Minkowski-surn construction with the only three other methods that produce exact results we are aware of. One is a simple approach that computes the convex hull of the pairwise surns of vertices of two convex polyhedra. The second is based on Nef polyhedra embedded on the sphere, and the third is an output-sensitive approach based on linear programming. Our method is significantly faster. The results of experimentation with a broad family of convex polyhedra are reported. The relevant programs, source code, data sets, and documentation are available at http://www.cs.tau.ac.il/(-)efif/CD and a short movie [.Fogel E, Halperin D. Video: Exact Minkowski sums of convex polyhedra. In: Proceedings of 21st annual ACM symposium on computational geometry. 2005. p. 382-3] that describes some of the concepts portrayed in this paper can be downloaded from http://www.es.tau.ac.il/(-)efif/CD/Mink3d.avi. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Exact and efficient construction of Minkowski sums of convex polyhedra with applications", "paper_id": "WOS:000250803700001"}