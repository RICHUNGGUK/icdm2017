{"auto_keywords": [{"score": 0.047571590697410286, "phrase": "double_traveling_salesman_problem"}, {"score": 0.004816165478308939, "phrase": "branch"}, {"score": 0.003510754567808717, "phrase": "multiple_stacks"}, {"score": 0.003260377175139591, "phrase": "last-in-first-out_policy"}, {"score": 0.0030895394261534776, "phrase": "shortest_hamiltonian_cycles"}, {"score": 0.002830757050018908, "phrase": "loading_plan"}, {"score": 0.002646501671714952, "phrase": "infeasible_path_constraints"}, {"score": 0.0023923066544220277, "phrase": "branch-and-cut_algorithm"}, {"score": 0.0021624739899833868, "phrase": "existing_exact_algorithms"}], "paper_keywords": ["traveling salesman problem", " pickup and delivery", " last-in-first-out loading", " branch and cut"], "paper_abstract": "The double traveling salesman problem with multiple stacks is a variant of the pickup and delivery traveling 1 salesman problem in which all pickups must be completed before any delivery. In addition, items can be loaded on multiple stacks in the vehicle, and each stack must obey the last-in-first-out policy. The problem consists of finding the shortest Hamiltonian cycles covering all pickup and delivery locations while ensuring the feasibility of the loading plan. We formulate the problem as two traveling salesman problems linked by infeasible path constraints. We also introduce several strengthenings of these constraints, which are used within a branch-and-cut algorithm. Computational results performed on instances from the literature show that the algorithm outperforms existing exact algorithms. Instances with up to 28 requests (58 nodes) have been solved to optimality.", "paper_title": "A Branch-and-Cut Algorithm for the Double Traveling Salesman Problem with Multiple Stacks", "paper_id": "WOS:000315322400005"}