{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "prolog"}, {"score": 0.00481495049065317, "phrase": "different_probabilistic_programming_languages"}, {"score": 0.004541712637353326, "phrase": "traditional_programming_language"}, {"score": 0.0038431888954930083, "phrase": "particular_syntax"}, {"score": 0.0037168948492715386, "phrase": "inference_procedure"}, {"score": 0.0034476484413811987, "phrase": "underlying_programming_concepts"}, {"score": 0.0032517484445814334, "phrase": "different_languages"}, {"score": 0.0031186510842824626, "phrase": "better_understanding"}, {"score": 0.003066945490483524, "phrase": "probabilistic_programming"}, {"score": 0.0028926147550022607, "phrase": "core_programming_concepts"}, {"score": 0.002660574167091781, "phrase": "execution_mechanisms"}, {"score": 0.002426717832834137, "phrase": "state-of-the-art_probabilistic_languages"}, {"score": 0.002194929830604162, "phrase": "probabilistic_extensions"}, {"score": 0.002158505888557746, "phrase": "logic_programming_languages"}], "paper_keywords": ["Probabilistic programming languages", " Probabilistic logic programming", " Statistical relational learning", " Inference in probabilistic languages"], "paper_abstract": "A multitude of different probabilistic programming languages exists today, all extending a traditional programming language with primitives to support modeling of complex, structured probability distributions. Each of these languages employs its own probabilistic primitives, and comes with a particular syntax, semantics and inference procedure. This makes it hard to understand the underlying programming concepts and appreciate the differences between the different languages. To obtain a better understanding of probabilistic programming, we identify a number of core programming concepts underlying the primitives used by various probabilistic languages, discuss the execution mechanisms that they require and use these to position and survey state-of-the-art probabilistic languages and their implementation. While doing so, we focus on probabilistic extensions of logic programming languages such as Prolog, which have been considered for over 20 years.", "paper_title": "Probabilistic (logic) programming concepts", "paper_id": "WOS:000358326000002"}