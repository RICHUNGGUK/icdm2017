{"auto_keywords": [{"score": 0.04540932995392896, "phrase": "processing_elements"}, {"score": 0.015476927634660517, "phrase": "functional_performance_models"}, {"score": 0.00481495049065317, "phrase": "multi-gpu_platforms"}, {"score": 0.004665764181113345, "phrase": "heterogeneous_multiprocessor_systems"}, {"score": 0.0042119653427658025, "phrase": "commodity_multicore_processors"}, {"score": 0.00414616342377235, "phrase": "graphics_processing_units"}, {"score": 0.003742711659195878, "phrase": "scientific_computing_community"}, {"score": 0.003684213587410217, "phrase": "software_applications"}, {"score": 0.003459191419478298, "phrase": "different_types"}, {"score": 0.003247868216333148, "phrase": "computing_power"}, {"score": 0.002931569771634119, "phrase": "optimal_distribution"}, {"score": 0.00281826552772148, "phrase": "data-parallel_scientific_applications"}, {"score": 0.002407078478216306, "phrase": "fpm-based_data"}, {"score": 0.0021724831184390192, "phrase": "parallel_matrix_multiplication"}, {"score": 0.0021384748235753425, "phrase": "numerical_simulation"}, {"score": 0.0021049977753042253, "phrase": "lid-driven_cavity_flow"}], "paper_keywords": ["HPC", " heterogeneous computing", " GPU-accelerated multicore system", " performance modeling", " data partitioning"], "paper_abstract": "Heterogeneous multiprocessor systems, which are composed of a mix of processing elements, such as commodity multicore processors, graphics processing units (GPUs), and others, have been widely used in scientific computing community. Software applications incorporate the code designed and optimized for different types of processing elements in order to exploit the computing power of such heterogeneous computing systems. In this paper, we consider the problem of optimal distribution of the workload of data-parallel scientific applications between processing elements of such heterogeneous computing systems. We present a solution that uses functional performance models (FPMs) of processing elements and FPM-based data partitioning algorithms. Efficiency of this approach is demonstrated by experiments with parallel matrix multiplication and numerical simulation of lid-driven cavity flow on hybrid servers and clusters.", "paper_title": "Data Partitioning on Multicore and Multi-GPU Platforms Using Functional Performance Models", "paper_id": "WOS:000359236500007"}