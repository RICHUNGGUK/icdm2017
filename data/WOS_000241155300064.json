{"auto_keywords": [{"score": 0.0440871124195895, "phrase": "continuous_range_query_processing"}, {"score": 0.04292793064226956, "phrase": "continuous_range_queries"}, {"score": 0.00481495049065317, "phrase": "recent_work"}, {"score": 0.004761850836420121, "phrase": "continuous_queries"}, {"score": 0.004657393640152439, "phrase": "processing_queries"}, {"score": 0.004309434349688514, "phrase": "computing_capacities"}, {"score": 0.004261885692956071, "phrase": "mobile_devices"}, {"score": 0.00396530196547293, "phrase": "mobile_device_side"}, {"score": 0.00370981613076245, "phrase": "minimum_server_load"}, {"score": 0.003588291565092195, "phrase": "previous_work"}, {"score": 0.0034134024569847264, "phrase": "distributed_server_infrastructure"}, {"score": 0.0033384259516301223, "phrase": "entire_service_region"}, {"score": 0.0032470094613727433, "phrase": "service_zones"}, {"score": 0.002873524721802591, "phrase": "time-varying_set"}, {"score": 0.0027333769432036905, "phrase": "novel_query_indexing_structure"}, {"score": 0.002614534850703364, "phrase": "query_distribution"}, {"score": 0.0025713100093065645, "phrase": "grid_model"}, {"score": 0.0023394947463129642, "phrase": "memory_indexing"}, {"score": 0.002275369652100353, "phrase": "mobile_objects"}, {"score": 0.0022502133699402018, "phrase": "constrained_memory_size"}, {"score": 0.0021763973978248005, "phrase": "rigorous_evaluation"}, {"score": 0.0021049977753042253, "phrase": "substantial_improvement"}], "paper_keywords": [""], "paper_abstract": "Recent work on continuous queries has focused on processing queries in very large, mobile environments. In this paper, we propose a system leveraging the computing capacities of mobile devices for continuous range query processing. In our design, continuous range queries are mainly processed on the mobile device side, which is able to achieve real-time updates with minimum server load. Our work distinguish itself from previous work with several important contributions. First, we introduce a distributed server infrastructure to partition the entire service region into a set of service zones and cooperatively handle requests of continuous range queries. This feature improves the robustness and flexibility of the system by adapting to a time-varying set of servers. Second, we propose a novel query indexing structure, which records the difference of the query distribution on a grid model. This approach significantly reduce the size and complexity of the index so that in-memory indexing can be achieved on mobile objects with constrained memory size. We report on the rigorous evaluation of our design, which shows substantial improvement in the efficiency of continuous range query processing in mobile environments.", "paper_title": "Distributed continuous range query processing on moving objects", "paper_id": "WOS:000241155300064"}