{"auto_keywords": [{"score": 0.04952525101149597, "phrase": "higher-order_logic"}, {"score": 0.00481495049065317, "phrase": "fpga_layout_generators"}, {"score": 0.004490212943845175, "phrase": "fpga_circuit_design"}, {"score": 0.004361428012479218, "phrase": "better_results"}, {"score": 0.004211731831120046, "phrase": "automatic_place"}, {"score": 0.004162978902905446, "phrase": "route_algorithms"}, {"score": 0.004067152645111547, "phrase": "explicit_placement"}, {"score": 0.004020066537823032, "phrase": "basic_elements"}, {"score": 0.003973523379376352, "phrase": "parametrized_hardware_descriptions"}, {"score": 0.00357806560856829, "phrase": "parametrized_hardware_libraries"}, {"score": 0.0035366216368204182, "phrase": "layout_information"}, {"score": 0.0033952989364738353, "phrase": "explicit_symbolic_coordinates"}, {"score": 0.0033559647822437298, "phrase": "'neighboring'_placement_directives"}, {"score": 0.0031845067058084583, "phrase": "generated_layouts"}, {"score": 0.0029694040368299624, "phrase": "isabelle_theorem"}, {"score": 0.002850682396853918, "phrase": "extensive_library"}, {"score": 0.0026272523687965615, "phrase": "theorem_prover"}, {"score": 0.002566685388128598, "phrase": "high_level"}, {"score": 0.0024640253074497114, "phrase": "complete_circuit_layouts"}, {"score": 0.002421291757425244, "phrase": "formal_verification"}, {"score": 0.0023932142697579506, "phrase": "circuit_layouts"}, {"score": 0.002351705899181029, "phrase": "minimal_user_effort"}, {"score": 0.002244494905883452, "phrase": "layout_descriptions"}, {"score": 0.0021049977753042253, "phrase": "xilinx_fpgas"}], "paper_keywords": ["FPGA", " layout description", " circuit verification", " theorem proving"], "paper_abstract": "Manual placement of components is often used in FPGA circuit design in order to achieve better results than would be generated by automatic place and route algorithms. However, explicit placement of basic elements in parametrized hardware descriptions is tedious and error-prone. We describe a framework for the description and verification of parametrized hardware libraries with layout information, supporting both placing components with explicit symbolic coordinates and 'neighboring' placement directives such as A beside B. The correctness of generated layouts is established by proof in higher-order logic, automated by using the Isabelle theorem prover. We have developed an extensive library of theorems describing properties of layouts that are combined by our compiler and the theorem prover to achieve a high level of automation in the verification of complete circuit layouts, making formal verification of circuit layouts practical with minimal user effort. Our system has been used to verify layout descriptions for a range of circuits that have been mapped to Xilinx FPGAs.", "paper_title": "Verification of FPGA layout generators in higher-order logic", "paper_id": "WOS:000243607600007"}