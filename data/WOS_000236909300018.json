{"auto_keywords": [{"score": 0.03672998173300791, "phrase": "secure_protocols"}, {"score": 0.00481495049065317, "phrase": "composable_secure_computation"}, {"score": 0.004766683200410046, "phrase": "setup_assumptions"}, {"score": 0.004601508848655033, "phrase": "uc_framework"}, {"score": 0.00448702992166335, "phrase": "prabhakaran"}, {"score": 0.004442041786150651, "phrase": "sahai"}, {"score": 0.004331501320993783, "phrase": "relaxed_framework"}, {"score": 0.004266501496765747, "phrase": "environmental_security"}, {"score": 0.0038186039088445524, "phrase": "monitored_functionalities"}, {"score": 0.00363080961099728, "phrase": "impossibility_results"}, {"score": 0.0034348484776384643, "phrase": "new_non-standard_assumptions"}, {"score": 0.0033492947290751996, "phrase": "hash_functions"}, {"score": 0.0031684791285366315, "phrase": "ges_protocols"}, {"score": 0.0031366648074858555, "phrase": "general_secure_computation"}, {"score": 0.003012560489169148, "phrase": "relativized_discrete_log_assumption"}, {"score": 0.0026688629249775925, "phrase": "standard_discrete_log_assumption"}, {"score": 0.0025892330566358503, "phrase": "previous_work"}, {"score": 0.002400373755068185, "phrase": "positive_results"}, {"score": 0.0023762535034673017, "phrase": "efficient_secure_computation"}, {"score": 0.0023405257495466352, "phrase": "concurrent_environment"}, {"score": 0.0023053339328456234, "phrase": "well_studied_assumptions"}, {"score": 0.0022478501955483007, "phrase": "new_assumption"}, {"score": 0.0021807544600219216, "phrase": "independent_interest"}], "paper_keywords": [""], "paper_abstract": "We address the problem of realizing concurrently composable secure computation without setup assumptions. While provably impossible in the UC framework of [Can01], Prabhakaran and Sahai had recently suggested a relaxed framework called generalized Environmental Security (gES) [PS04], as well as a restriction of it to a \"client-server\" setting based on monitored functionalities [PS05]. In these settings, the impossibility results do not apply, and they provide secure protocols relying on new non-standard assumptions regarding the existence of hash functions with certain properties. In this paper, we first provide gES protocols for general secure computation, based on a new, concrete number theoretic assumption called the relativized discrete log assumption (rDLA). Second, we provide secure protocols for functionalities in the (limited) client-server framework of [PS05], replacing their hash function assumption with the standard discrete log assumption. Both our results (like previous work) also use (standard) super-polynomially strong trapdoor permutations. We believe this is an important step towards obtaining positive results for efficient secure computation in a concurrent environment based on well studied assumptions. Furthermore, the new assumption we put forward is of independent interest, and may prove useful for other cryptographic applications.", "paper_title": "Generalized environmental security from number theoretic assumptions", "paper_id": "WOS:000236909300018"}