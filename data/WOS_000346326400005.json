{"auto_keywords": [{"score": 0.04565922187614431, "phrase": "optimization_problems"}, {"score": 0.00481495049065317, "phrase": "genetic_algorithm"}, {"score": 0.004303178585425281, "phrase": "grid"}, {"score": 0.004143196873246147, "phrase": "earlier_static_pilot-job_frameworks"}, {"score": 0.003969018740062018, "phrase": "elastic_resource"}, {"score": 0.0038846843242954935, "phrase": "unnecessary_occupation"}, {"score": 0.0038431888954930083, "phrase": "grid_resources"}, {"score": 0.0036227329311981195, "phrase": "adaptive_allocation"}, {"score": 0.0035457302646174148, "phrase": "limited_lifetime"}, {"score": 0.0033965836912510385, "phrase": "underlying_grid_environment"}, {"score": 0.0032016639006812826, "phrase": "theoretical_analysis"}, {"score": 0.003167441161387607, "phrase": "possible_speed-up"}, {"score": 0.0030834712590249863, "phrase": "empirical_study"}, {"score": 0.003034158379493625, "phrase": "artificial_problem"}, {"score": 0.002937879003671346, "phrase": "real-world_calibration_problem"}, {"score": 0.0028293966058473476, "phrase": "visegrad_power_plant"}, {"score": 0.0027543636132088332, "phrase": "obtained_results"}, {"score": 0.002695768552609587, "phrase": "wobingo's_adaptive_and_frugal_allocation"}, {"score": 0.0025962029048520324, "phrase": "significant_speed-up"}, {"score": 0.0025003054002226965, "phrase": "computationally_expensive_evaluations"}, {"score": 0.0022941723937662927, "phrase": "limited_job_lifetime_feature"}, {"score": 0.0022574539115388075, "phrase": "queuing_time"}, {"score": 0.002174041708084857, "phrase": "static_pilot-job_infrastructure"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grid computing", " Pilot-job infrastructure", " Dynamic resource provisioning", " Metaheuristics based optimization framework"], "paper_abstract": "In this paper, we present the WoBinGO (Work Binder Genetic algorithm based Optimization) framework for solving optimization problems over a Grid. It overcomes the shortcomings of earlier static pilot-job frameworks, by: (1) providing elastic resource provisioning thus avoiding unnecessary occupation of Grid resources; (2) providing friendliness towards other batching queue users thanks to adaptive allocation of jobs with limited lifetime. It hides the complexity of the underlying Grid environment, allowing the users to concentrate on the optimization problems. Theoretical analysis of possible speed-up is presented. An empirical study using an artificial problem, as well as a real-world calibration problem of a leakage model at the Visegrad power plant were performed. The obtained results show that despite WoBinGO's adaptive and frugal allocation of computing resources, it provides significant speed-up when dealing with problems that have computationally expensive evaluations. Moreover, the benchmarks were performed in order to estimate the influence of the limited job lifetime feature on the queuing time of other batching jobs, compared to a static pilot-job infrastructure. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Elastic grid resource provisioning with WoBinGO: A parallel framework for genetic algorithm based optimization", "paper_id": "WOS:000346326400005"}