{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "lu_decomposition"}, {"score": 0.0047689174754929195, "phrase": "dense_matrices"}, {"score": 0.0047006879240764935, "phrase": "important_linear_algebra_kernel"}, {"score": 0.004545240514015278, "phrase": "scientific_and_engineering_applications"}, {"score": 0.004437349839203418, "phrase": "large_matrix_lu_decomposition"}, {"score": 0.004352876088312741, "phrase": "limited_local_memory"}, {"score": 0.00429057323623293, "phrase": "block_lu_decomposition_algorithm"}, {"score": 0.004188702178897384, "phrase": "arbitrary_matrix_size"}, {"score": 0.0038973170902076707, "phrase": "space-time_mapping"}, {"score": 0.0038415095105632157, "phrase": "sequential_nonblocking_lu_decomposition"}, {"score": 0.0037322713756404295, "phrase": "high_performance"}, {"score": 0.0036788184374592706, "phrase": "efficient_hardware_architecture"}, {"score": 0.0035570425396761122, "phrase": "linear_array"}, {"score": 0.0035229930971258316, "phrase": "processing_elements"}, {"score": 0.003309452522760298, "phrase": "optimum_performance"}, {"score": 0.0030790429005600898, "phrase": "multi-fpga_platform"}, {"score": 0.0030203487665054806, "phrase": "block-cyclic_data_distribution"}, {"score": 0.0029914213495838998, "phrase": "inter-fpga_communication_scheme"}, {"score": 0.0026523079380037706, "phrase": "matrix_size"}, {"score": 0.002479522422270417, "phrase": "fpga"}, {"score": 0.0022409963215568565, "phrase": "previous_work"}, {"score": 0.0021876814398268775, "phrase": "twice_the_number"}, {"score": 0.0021049977753042253, "phrase": "significantly_higher_performance"}], "paper_keywords": ["FPGA", " loop blocking", " space-time mapping", " LU decomposition", " linear array"], "paper_abstract": "LU decomposition for dense matrices is an important linear algebra kernel that is widely used in both scientific and engineering applications. To efficiently perform large matrix LU decomposition on FPGAs with limited local memory, a block LU decomposition algorithm on FPGAs applicable to arbitrary matrix size is proposed. Our algorithm applies a series of transformations, including loop blocking and space-time mapping, onto sequential nonblocking LU decomposition. We also introduce a high performance and memory efficient hardware architecture, which mainly consists of a linear array of processing elements (PEs), to implement our block LU decomposition algorithm. Our design can achieve optimum performance under various hardware resource constraints. Furthermore, our algorithm and design can be easily extended to the multi-FPGA platform by using a block-cyclic data distribution and inter-FPGA communication scheme. A total of 36 PEs can be integrated into a Xilinx Virtex-5 XC5VLX330 FPGA on our self-designed PCI-Express card, reaching a sustained performance of 8.50 GFLOPS at 133 MHz for a matrix size of 16,384, which outperforms several general-purpose processors. For a Xilinx Virtex-6 XC6VLX760, a newer FPGA, we predict that a total of 180 PEs can be integrated, reaching 70.66 GFLOPS at 200 MHz. Compared to the previous work, our design can integrate twice the number of PEs into the same FPGA and has significantly higher performance.", "paper_title": "A High Performance and Memory Efficient LU Decomposer on FPGAs", "paper_id": "WOS:000299344700007"}