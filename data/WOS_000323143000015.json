{"auto_keywords": [{"score": 0.047424185998726213, "phrase": "static"}, {"score": 0.00481495049065317, "phrase": "binary_code_analysis"}, {"score": 0.004296264970612285, "phrase": "dynamic_analysis"}, {"score": 0.004058180509184539, "phrase": "binary_code"}, {"score": 0.003725470458263889, "phrase": "useful_information"}, {"score": 0.0035189057079817285, "phrase": "security_researchers"}, {"score": 0.0031393948330209224, "phrase": "assembly_code"}, {"score": 0.0024984517279573906, "phrase": "separate_tools"}, {"score": 0.0021049977753042253, "phrase": "distinct_analysis"}], "paper_keywords": [""], "paper_abstract": "Static and dynamic analysis of binary code can provide useful information to security researchers without access to assembly code. However, these approaches currently require separate tools, forcing users to perform distinct analysis and then combine the results.", "paper_title": "Binary Code Analysis", "paper_id": "WOS:000323143000015"}