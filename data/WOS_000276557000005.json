{"auto_keywords": [{"score": 0.0495290999002817, "phrase": "local_structure"}, {"score": 0.041480729810386266, "phrase": "cell_states"}, {"score": 0.03207133518769957, "phrase": "local_structures"}, {"score": 0.00481495049065317, "phrase": "cellular_automata"}, {"score": 0.004466519142879166, "phrase": "cellular_automaton"}, {"score": 0.003120668628734929, "phrase": "ca."}, {"score": 0.0023363141951290526, "phrase": "new_classification"}, {"score": 0.0021543421286324945, "phrase": "historical_classification"}, {"score": 0.0021295349501824906, "phrase": "eca"}], "paper_keywords": ["cellular automaton", " local structure", " neighborhood", " permutation", " equivalence", " isomorphism", " similarity", " classification", " ECA"], "paper_abstract": "From the definition of a cellular automaton CA (S,Q, f, v) with S a discrete cellular space, Q a finite set of cell states, f an n-ary local function and v a neighborhood v : (l, ... , n} -> S, we pick up a pair (f, v) and call the local structure of CA. We formulate equivalence of local structures and typically prove that the relationship via a permutation is the only possible way to get equivalence of CA. Next we treat isomorphism of local structures, which is equivalence with re-naming of the cell states. By taking all permutations of the neighborhood, we give a new classification of 256 1-dimensional 2-states nearest neighbors CA (ECA) into 46 isomorphism classes, compared the historical classification of ECA into 88 classes.", "paper_title": "Changing the Neighborhood of Cellular Automata: Local Structure, Equivalence and Isomorphism", "paper_id": "WOS:000276557000005"}