{"auto_keywords": [{"score": 0.04949471319400528, "phrase": "partitioning_methodology"}, {"score": 0.048917921773408916, "phrase": "reconfigurable_hardware_blocks"}, {"score": 0.04853694236529147, "phrase": "different_granularity"}, {"score": 0.04722557618529779, "phrase": "generic_heterogeneous_architecture"}, {"score": 0.046128415421561896, "phrase": "fine-grain_reconfigurable_logic"}, {"score": 0.045232685789015674, "phrase": "fpga_unit"}, {"score": 0.04298071762113959, "phrase": "processing_elements"}, {"score": 0.04264390470078743, "phrase": "critical_parts"}, {"score": 0.042309614485067704, "phrase": "called_kernels"}, {"score": 0.04132170978399465, "phrase": "coarse-grain_reconfigurable_logic"}, {"score": 0.04035590006373858, "phrase": "partitioning_method"}, {"score": 0.038641148635283985, "phrase": "input_code"}, {"score": 0.03773552536881002, "phrase": "coarse-grain_reconfigurable_array"}, {"score": 0.036850747740990404, "phrase": "fpga."}, {"score": 0.036559705395027293, "phrase": "partitioning_flow"}, {"score": 0.03584280074286595, "phrase": "prototype_software_framework"}, {"score": 0.0348618371237721, "phrase": "five_real-world_applications"}, {"score": 0.03363857135856094, "phrase": "all-fpga_solution"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_reconfigurable_functional_units"}, {"score": 0.003237116128682586, "phrase": "execution_time_speedup"}, {"score": 0.0021049977753042253, "phrase": "execution_time_speedup_relative"}], "paper_keywords": ["heterogeneous reconfigurable architectures", " performance improvements", " partitioning", " coarse-grain reconfigurable hardware", " FPGA", " scheduling"], "paper_abstract": "A partitioning methodology between the reconfigurable hardware blocks of different granularity, which are embedded in a generic heterogeneous architecture, is presented. The fine-grain reconfigurable logic is realized by an FPGA unit, while the coarse-grain reconfigurable hardware by a 2-Dimensional Array of Processing Elements. Critical parts, called kernels, are mapped on the coarse-grain reconfigurable logic for improving performance. The partitioning method is mainly composed by three steps: the analysis of the input code, the mapping onto the Coarse-Grain Reconfigurable Array and the mapping onto the FPGA. The partitioning flow is implemented by a prototype software framework. Analytical partitioning experiments, using five real-world applications, show that the execution time speedup relative to an all-FPGA solution ranges from 1.4 to 5.0. A partitioning methodology between the reconfigurable hardware blocks of different granularity, which are embedded in a generic heterogeneous architecture, is presented. The fine-grain reconfigurable logic is realized by an FPGA unit, while the coarse-grain reconfigurable hardware by a 2-Dimensional Array of Processing Elements. Critical parts, called kernels, are mapped on the coarse-grain reconfigurable logic for improving performance. The partitioning method is mainly composed by three steps: the analysis of the input code, the mapping onto the Coarse-Grain Reconfigurable Array and the mapping onto the FPGA. The partitioning flow is implemented by a prototype software framework. Analytical partitioning experiments, using five real-world applications, show that the execution time speedup relative to an all-FPGA solution ranges from 1.4 to 5.0.", "paper_title": "Partitioning methodology for heterogeneous reconfigurable functional units", "paper_id": "WOS:000240616200002"}