{"auto_keywords": [{"score": 0.029841851269327535, "phrase": "tinywifi"}, {"score": 0.011260893383854671, "phrase": "wireless_network"}, {"score": 0.00481495049065317, "phrase": "multi-hop_wireless_networks"}, {"score": 0.004736563452994885, "phrase": "ad_hoc-"}, {"score": 0.004608730887154718, "phrase": "participating_devices"}, {"score": 0.004583579470330216, "phrase": "usage_scenarios"}, {"score": 0.0045212970824266485, "phrase": "strong_characteristics"}, {"score": 0.004447669334871974, "phrase": "node_cooperation"}, {"score": 0.00441130431691048, "phrase": "multi-hop_forwarding_and_dynamic_routing_protocols"}, {"score": 0.004187769037438816, "phrase": "common_core"}, {"score": 0.003997343989408636, "phrase": "additional_network-specific_functionality"}, {"score": 0.003953806321226277, "phrase": "tree_routing_structures"}, {"score": 0.003868142906199082, "phrase": "example_buffer_sizes"}, {"score": 0.0037947054862511724, "phrase": "design_goals"}, {"score": 0.0037328656607036447, "phrase": "sheer_number"}, {"score": 0.0037124763118311734, "phrase": "proposed_protocols"}, {"score": 0.003682100144121148, "phrase": "network_class"}, {"score": 0.0035338939519719784, "phrase": "network-layer_protocols"}, {"score": 0.003309030835969531, "phrase": "different_classes"}, {"score": 0.0031240075437664314, "phrase": "network_protocols"}, {"score": 0.0030312441544072056, "phrase": "protocol_testing"}, {"score": 0.0028305047329728254, "phrase": "detailed_architecture"}, {"score": 0.0027691111795848183, "phrase": "native_sensornet_protocols"}, {"score": 0.0027539714188091866, "phrase": "linux-driven_wireless_devices"}, {"score": 0.0027239390917424898, "phrase": "wireless_mesh"}, {"score": 0.002709045632654716, "phrase": "mobile_ad-hoc_networks"}, {"score": 0.002650279521276126, "phrase": "nesc_code_base"}, {"score": 0.0026213755774064282, "phrase": "tinyos"}, {"score": 0.0025786066704445304, "phrase": "nesc-based_protocols"}, {"score": 0.0025645348016752234, "phrase": "linux"}, {"score": 0.002474706265455793, "phrase": "protocol_execution"}, {"score": 0.002304408912077443, "phrase": "single_implementation"}, {"score": 0.0022359278646792153, "phrase": "presented_evaluation"}, {"score": 0.0021874023741762496, "phrase": "cross-network_evaluation_platform"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multihop wireless networks", " TinyOS", " Sensornets", " Meshnets", " MANETs", " Protocol evaluation"], "paper_abstract": "Multi-hop wireless networks, such as sensor-, ad hoc- and mesh-nets, can be differentiated in terms of participating devices and usage scenarios. However they share strong characteristics and requirements, such as node cooperation to enable multi-hop forwarding and dynamic routing protocols to deliver packets. As a result of these similarities, protocols designed for all these wireless networks revolve around a common core of functionality, for example coping with link and node dynamics. They differ only in additional network-specific functionality, such as tree routing structures in sensornets, and parameterization, for example buffer sizes. This convergence of functionality and design goals, as well as the sheer number of proposed protocols in each network class, motivates the idea of applying protocols to more than just their one original class. However, network-layer protocols are usually developed for and tested in only one class of wireless network due to the lack of a platform that allows testing of protocols across different classes of networks. As a result, we unnecessarily constrain the range of settings and scenarios in which we test network protocols. In this article, we propose a platform for protocol testing and evaluation in multiple, heterogeneous networks and discuss the requirements and challenges of such a solution. As a first step and case study, we present the detailed architecture of TinyWifi, a platform for executing native sensornet protocols on Linux-driven wireless devices as found in wireless mesh and mobile ad-hoc networks (MANETs). TinyWifi builds on nesC code base that abstracts from TinyOS and enables the execution of nesC-based protocols in Linux. Using this abstraction, we expand the applicability and means of protocol execution from one class of wireless network to another without re-implementation. We demonstrate the generality of TinyWifi by evaluating four well-established protocols on IEEE 802.11 and 802.15.4 based testbeds using a single implementation. Based on the experience of building TinyWifi and the presented evaluation, we deduce the feasibility of a cross-network evaluation platform and sketch the requirements for inclusion of further network classes. (c) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Portable wireless-networking protocol evaluation", "paper_id": "WOS:000320750600013"}