{"auto_keywords": [{"score": 0.04928409246925515, "phrase": "automated_measurements"}, {"score": 0.010612387000973441, "phrase": "component_selection"}, {"score": 0.00723125838723351, "phrase": "candidate_components"}, {"score": 0.005366674483375859, "phrase": "case_studies"}, {"score": 0.004761494044422926, "phrase": "controlled_experimentation"}, {"score": 0.004566240539774012, "phrase": "general_problem"}, {"score": 0.004540816204698049, "phrase": "software_component_evaluation"}, {"score": 0.004415792880356964, "phrase": "component-based_software_development"}, {"score": 0.004306205029641728, "phrase": "commercial-off-the-shelf_component_selection"}, {"score": 0.003949054872968775, "phrase": "subjective_judgement"}, {"score": 0.003840261792655689, "phrase": "high_demands"}, {"score": 0.00381886412166831, "phrase": "transparent_selection_processes"}, {"score": 0.00373445463142965, "phrase": "vendor_claims"}, {"score": 0.003651904029696065, "phrase": "continuous_monitoring"}, {"score": 0.0034727526607880883, "phrase": "evidence-based_approach"}, {"score": 0.0030451958332949735, "phrase": "controlled_experiments"}, {"score": 0.0029612292670237505, "phrase": "system-development-oriented_scenarios"}, {"score": 0.002887634989058733, "phrase": "utility_analysis"}, {"score": 0.0028316582436089064, "phrase": "problem_space"}, {"score": 0.0027690086059100495, "phrase": "automated_evaluation"}, {"score": 0.0027458730206408005, "phrase": "empirical_setting"}, {"score": 0.0027153251683182784, "phrase": "tool_support"}, {"score": 0.002618366076489732, "phrase": "decision_criteria"}, {"score": 0.002596485860622193, "phrase": "described_scenario"}, {"score": 0.0025675956623479363, "phrase": "data_collection"}, {"score": 0.0023941575109692336, "phrase": "digital_preservation"}, {"score": 0.0022575359484509187, "phrase": "quantitative_coverage"}, {"score": 0.002195240062575067, "phrase": "analysis_show"}, {"score": 0.002176887956041267, "phrase": "automated_measurement"}, {"score": 0.0021049977753042253, "phrase": "trusted_and_repeatable_decisions"}], "paper_keywords": ["Software evaluation", " Component selection", " COTS", " Trust management", " Software measurement", " Multi-criteria decision making"], "paper_abstract": "Context: A number of approaches have been proposed for the general problem of software component evaluation and selection. Most approaches come from the field of Component-Based Software Development (CBSD), tackle the problem of Commercial-off-the-shelf component selection and use goal-oriented requirements modelling and multi-criteria decision making techniques. Evaluation of the suitability of components is carried out largely manually and partly relies on subjective judgement. However, in dynamic, distributed environments with high demands for transparent selection processes leading to trustworthy, auditable decisions, subjective judgements and vendor claims are not considered sufficient. Furthermore, continuous monitoring and re-evaluation of components after integration is sometimes needed. Objective: This paper describes how an evidence-based approach to component evaluation can improve repeatability and reproducibility of component selection under the following conditions: (1) Functional homogeneity of candidate components and (2) High number of components and selection problem instances. Method: Our evaluation and selection method and tool empirically evaluate candidate components in controlled experiments by applying automated measurements. By analysing the differences to system-development-oriented scenarios, the paper shows how the process of utility analysis can be tailored to fit the problem space, and describes a method geared towards automated evaluation in an empirical setting. We describe tool support and a framework for automated measurements. We further present a taxonomy of decision criteria for the described scenario and discuss the data collection means needed for each category of criteria. Results: To evaluate our approach, we discuss a series of case studies in the area of digital preservation. We analyse the criteria defined in these case studies, classify them according to the taxonomy, and discuss the quantitative coverage of automated measurements. Conclusion: The results of the analysis show that an automated measurement, evaluation and selection framework is necessary and feasible to ensure trusted and repeatable decisions. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Improving component selection and monitoring with controlled experimentation and automated measurements", "paper_id": "WOS:000278150500005"}