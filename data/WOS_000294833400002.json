{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_xml"}, {"score": 0.004720043307726269, "phrase": "distributed_xml_document"}, {"score": 0.004650086856905758, "phrase": "xml_document"}, {"score": 0.004446349752828045, "phrase": "distribution_design"}, {"score": 0.0043804319008535555, "phrase": "document_tree"}, {"score": 0.004230382915464492, "phrase": "xml_kernel-document"}, {"score": 0.0036980501827538455, "phrase": "web_services"}, {"score": 0.0036250779580069455, "phrase": "remote_locations"}, {"score": 0.003553540530701019, "phrase": "top-down_design_problem"}, {"score": 0.0032324864013225166, "phrase": "tree_automaton"}, {"score": 0.0031686717525002935, "phrase": "distributed_document"}, {"score": 0.0030906666356950887, "phrase": "locally_this_type"}, {"score": 0.0028822890425197582, "phrase": "desirable_properties"}, {"score": 0.002797329638474873, "phrase": "bottom-up_design"}, {"score": 0.0026612444314342023, "phrase": "external_resource"}, {"score": 0.0026086775334428617, "phrase": "global_type"}, {"score": 0.0025317627242523104, "phrase": "local_types"}, {"score": 0.002481747081849503, "phrase": "natural_desirable_properties"}, {"score": 0.0023028105026714533, "phrase": "distributed_xml_design"}, {"score": 0.0022460727898764216, "phrase": "typing_issues"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Semistructured data", " XML schemas", " Distributed data", " Database design", " Distributed XML"], "paper_abstract": "A distributed XML document is an XML document that spans several machines. We assume that a distribution design of the document tree is given, consisting of an XML kernel-document T(vertical bar f1, ...,fn vertical bar) where some leaves are \"docking points\" for external resources providing XML subtrees (f(1, ...,)f(n), standing, e.g., for Web services or peers at remote locations). The top-down design problem consists in, given a type (a schema document that may vary from a DTD to a tree automaton) for the distributed document, \"propagating\" locally this type into a collection of types, that we call typing, while preserving desirable properties. We also consider the bottom-up design which consists in, given a type for each external resource, exhibiting a global type that is enforced by the local types, again with natural desirable properties. In the article, we lay out the fundamentals of a theory of distributed XML design, analyze problems concerning typing issues in this setting, and study their complexity. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Distributed XML design", "paper_id": "WOS:000294833400002"}