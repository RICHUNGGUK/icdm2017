{"auto_keywords": [{"score": 0.0390829115805425, "phrase": "openmp"}, {"score": 0.004753194996637899, "phrase": "openmp_applications"}, {"score": 0.004662036750452837, "phrase": "large_quantities"}, {"score": 0.004513957235071457, "phrase": "common_scenario"}, {"score": 0.004456044928556639, "phrase": "parallel_applications"}, {"score": 0.0043705604923728195, "phrase": "distributed_memory_applications"}, {"score": 0.003791621842185417, "phrase": "shared-memory_programming_models"}, {"score": 0.0032468685934998335, "phrase": "interface_specification"}, {"score": 0.0031233388358844188, "phrase": "openuh_compiler"}, {"score": 0.0027982016314450717, "phrase": "different_file_systems"}, {"score": 0.0027622407190589326, "phrase": "multiple_benchmarks"}, {"score": 0.002726740692380339, "phrase": "application_scenarios"}, {"score": 0.0026060359255636444, "phrase": "significant_improvements"}, {"score": 0.0024906610581090223, "phrase": "sequential_version"}, {"score": 0.0021049977753042253, "phrase": "new_interfaces"}], "paper_keywords": ["Shared memory system", " Parallel I/O", " OpenMP"], "paper_abstract": "Processing large quantities of data is a common scenario for parallel applications. While distributed memory applications are able to improve the performance of their I/O operations by using parallel I/O libraries, there is no support for parallel I/O operations for applications using shared-memory programming models such as OpenMP available as of today. This paper presents parallel I/O interfaces for OpenMP. We discuss the rationale of our design decisions, present the interface specification, an implementation within the OpenUH compiler and discuss a number of optimizations performed. We demonstrate the benefits of this approach on different file systems for multiple benchmarks and application scenarios. In most cases, we observe significant improvements in I/O performance as compared to the sequential version. Furthermore, we perform a comparison of the OpenMP I/O functions introduced in this paper to message passing interface I/O, and demonstrate the benefits of the new interfaces.", "paper_title": "Multi-Threaded Parallel I/O for OpenMP Applications", "paper_id": "WOS:000349887300006"}