{"auto_keywords": [{"score": 0.03619647508467271, "phrase": "starting_point"}, {"score": 0.03464034545023033, "phrase": "bottleneck_component"}, {"score": 0.00481495049065317, "phrase": "performance_maintenance"}, {"score": 0.004624751696958501, "phrase": "software_system"}, {"score": 0.004309725894724034, "phrase": "unexpected_combinations"}, {"score": 0.004266501496765747, "phrase": "metric_values"}, {"score": 0.004223708778943785, "phrase": "manual_analysis"}, {"score": 0.0040978781692373005, "phrase": "complex_systems"}, {"score": 0.0038573081851680656, "phrase": "performance_experts"}, {"score": 0.003558294449586273, "phrase": "possible_performance_improvements"}, {"score": 0.0034003686971964707, "phrase": "performance_improvements"}, {"score": 0.003152531962718477, "phrase": "association_rules"}, {"score": 0.0031208772639433145, "phrase": "performance_counters"}, {"score": 0.003058515297281172, "phrase": "rule_coverage_matrix"}, {"score": 0.002937493907103812, "phrase": "bottleneck_detection"}, {"score": 0.0025761937402886954, "phrase": "time_frame"}, {"score": 0.002524688931044784, "phrase": "pio"}, {"score": 0.0024617483174454113, "phrase": "second_one"}, {"score": 0.0022706700510423954, "phrase": "performance_expert"}, {"score": 0.0021697677572213086, "phrase": "high_precision"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Performance maintenance", " Performance analysis"], "paper_abstract": "The goal of performance maintenance is to improve the performance of a software system after delivery. As the performance of a system is often characterized by unexpected combinations of metric values, manual analysis of performance is hard in complex systems. In this paper, we propose an approach that helps performance experts locate and analyze spots - so called performance improvement opportunities (PIOs) - for possible performance improvements. PIOs give performance experts a starting point for performance improvements, e.g., by pinpointing the bottleneck component. The technique uses a combination of association rules and performance counters to generate the rule coverage matrix, a matrix which assists with the bottleneck detection. In this paper, we evaluate our technique in two case studies. In the first one, we show that our technique is accurate in detecting the time frame during which a PIO occurs. In the second one, we show that the starting point given by our approach is indeed useful and assists a performance expert in diagnosing the bottleneck component in a system with high precision. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Performance optimization of deployed software-as-a-service applications", "paper_id": "WOS:000329273400007"}