{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "double_precision"}, {"score": 0.004630423009638876, "phrase": "function_pow"}, {"score": 0.004211069233133584, "phrase": "ziv's_iterative_approximation_process"}, {"score": 0.003703282519292336, "phrase": "floating-point_numbers"}, {"score": 0.0034245614958572012, "phrase": "difficult_problem"}, {"score": 0.0033864888703414903, "phrase": "previous_approaches"}, {"score": 0.003348838095597268, "phrase": "repeated_square_root_extraction"}, {"score": 0.003293142761521425, "phrase": "repeated_square"}, {"score": 0.0031490944606172152, "phrase": "new_rounding-boundary_test"}, {"score": 0.0029282926103224717, "phrase": "precomputed_constants"}, {"score": 0.002815864555488112, "phrase": "worst_cases"}, {"score": 0.0027690086059100495, "phrase": "table_maker's_dilemma"}, {"score": 0.00269263690712392, "phrase": "small_subset"}, {"score": 0.0026478260192958924, "phrase": "input_domain"}, {"score": 0.002574788013427524, "phrase": "novel_use"}, {"score": 0.0024075916292945715, "phrase": "fast-on-average_correctly_rounded_implementation"}, {"score": 0.0022893422054387235, "phrase": "-boundary_cases"}, {"score": 0.0022137465420508785, "phrase": "average_computations"}, {"score": 0.002189105604712615, "phrase": "rounding-boundary_detection"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Floating-point arithmetic", " correct rounding", " power function"], "paper_abstract": "The correct rounding of the function pow: (x, y) vertical bar -> x(y) is currently based on Ziv's iterative approximation process. In order to ensure its termination, cases when x(y) falls on a rounding-boundary must be filtered out. Such rounding-boundaries are floating-point numbers and midpoints between two consecutive floating-point numbers. Detecting rounding-boundaries for pow is a difficult problem. Previous approaches use repeated square root extraction followed by repeated square and multiply. This paper presents a new rounding-boundary test for pow in double precision, which reduces this to a few comparisons with precomputed constants. These constants are deduced from worst cases for the Table Maker's Dilemma, searched over a small subset of the input domain. This is a novel use of such worst-case bounds. The resulting algorithm has been designed for a fast-on-average correctly rounded implementation of pow, considering the scarcity of rounding-boundary cases. It does not stall average computations for rounding-boundary detection. This paper includes its correctness proof and experimental results.", "paper_title": "An Efficient Rounding Boundary Test for pow(x, y) in Double Precision", "paper_id": "WOS:000261846600006"}