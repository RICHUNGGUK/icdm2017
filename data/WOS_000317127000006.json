{"auto_keywords": [{"score": 0.04950097558699653, "phrase": "large-scale_transportation_network"}, {"score": 0.04799155246762869, "phrase": "parallel_computing"}, {"score": 0.03498718165642814, "phrase": "parallel_implementations"}, {"score": 0.00481495049065317, "phrase": "-pairs_shortest_path"}, {"score": 0.004718431349852634, "phrase": "parallel_floyd-warshall"}, {"score": 0.00453113241842654, "phrase": "powerful_approach"}, {"score": 0.004476399615305783, "phrase": "real-time_decisions"}, {"score": 0.004281284532043714, "phrase": "\"shortest_path_problem"}, {"score": 0.004144723510171449, "phrase": "shortest_path"}, {"score": 0.004045157344249484, "phrase": "transportation_network"}, {"score": 0.003980106938194548, "phrase": "large_transportation_networks"}, {"score": 0.003932003833923186, "phrase": "major_metropolitan_areas"}, {"score": 0.003760527969356061, "phrase": "shortest_paths"}, {"score": 0.003289534854212415, "phrase": "commonly_used_shortest-path_algorithms"}, {"score": 0.0031974502006267163, "phrase": "inherent_sequential_nature"}, {"score": 0.003158776195052182, "phrase": "search_process"}, {"score": 0.0030086877092638945, "phrase": "performance_analyses"}, {"score": 0.002936333119662853, "phrase": "floyd-warshall"}, {"score": 0.002912614104362875, "phrase": "dijkstra"}, {"score": 0.0028425481299483254, "phrase": "all-pairs_shortest_path"}, {"score": 0.0027295084882654917, "phrase": "multilevel_parallel_implementation"}, {"score": 0.0026209522797963447, "phrase": "shared_memory_threads"}, {"score": 0.0025682999078906936, "phrase": "open_multiprocessing"}, {"score": 0.0023970487263732737, "phrase": "moderate_number"}, {"score": 0.0023776656246300063, "phrase": "symmetric_multiprocessor"}, {"score": 0.0023584606595370644, "phrase": "smp"}, {"score": 0.002246292543825748, "phrase": "computational_time"}, {"score": 0.0022190974300886467, "phrase": "different_parallel_implementations"}, {"score": 0.0021049977753042253, "phrase": "american_society_of_civil_engineers"}], "paper_keywords": ["Parallel computing", " Graph algorithm", " Transportation", " Computing"], "paper_abstract": "Parallel computing has become a powerful approach for solving real-time decisions about large-scale, computing-intensive transportation problems. A frequently encountered transportation problem is the \"shortest path problem;\" that is, finding the shortest path between any two nodes in a transportation network. For the large transportation networks encountered in major metropolitan areas, this problem can be computationally demanding, especially if shortest paths between all the nodes in the network need to be dynamically updated (e. g., evolving traffic conditions). In such a situation, one may wish to harness parallel computing to solve this problem. However, the parallel implementations of commonly used shortest-path algorithms are computationally demanding because of the inherent sequential nature of the search process used by the algorithms. This paper describes parallel implementations and includes performance analyses of two prominent graph algorithms (i.e., Floyd-Warshall and Dijkstra) used for finding the all-pairs shortest path for a large-scale transportation network. The results indicate that a multilevel parallel implementation that combines message passing interface (MPI) with shared memory threads [e. g., Open Multiprocessing (OpenMP) or POSIX Threads (pthreads)] is effective for solving these problems on a moderate number of symmetric multiprocessor (SMP) nodes. This paper also includes the derivation of the computational time for the different parallel implementations of these two graph algorithms. DOI: 10.1061/(ASCE)CP.1943-5487.0000220. (C) 2013 American Society of Civil Engineers.", "paper_title": "Finding All-Pairs Shortest Path for a Large-Scale Transportation Network Using Parallel Floyd-Warshall and Parallel Dijkstra Algorithms", "paper_id": "WOS:000317127000006"}