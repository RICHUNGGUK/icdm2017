{"auto_keywords": [{"score": 0.03349722987496379, "phrase": "rpo"}, {"score": 0.03293601710642665, "phrase": "polo"}, {"score": 0.00481495049065317, "phrase": "first-order_and_higher-order_terms"}, {"score": 0.003773870856027139, "phrase": "consecutive_disjoint_way"}, {"score": 0.003644714340300824, "phrase": "final_constraints"}, {"score": 0.0035199624440843892, "phrase": "termination_problem"}, {"score": 0.0032830808525570903, "phrase": "simple_ordering"}, {"score": 0.0025059724686541263, "phrase": "rpo-like_treatment"}, {"score": 0.0023782753249846794, "phrase": "polo-like_treatment"}, {"score": 0.0021797112385590935, "phrase": "higher-order_terms"}, {"score": 0.0021049977753042253, "phrase": "new_fully_automatable_use"}], "paper_keywords": ["Program correctness", " term rewriting", " typed lambda-calculus", " termination", " term orderings"], "paper_abstract": "In most termination tools two ingredients, namely recursive path orderings (RPOs) and polynomial interpretation orderings (POLOs), are used in a consecutive disjoint way to solve the final constraints generated from the termination problem. In this article we present a simple ordering that combines both RPO and POLO and defines a family of orderings that includes both, and extend them with the possibility of having, at the same time, an RPO-like treatment for some symbols and a POLO-like treatment for the others. The ordering is extended to higher-order terms, providing a new fully automatable use of polynomial interpretations in combination with beta-reduction.", "paper_title": "The recursive path and polynomial ordering for first-order and higher-order terms", "paper_id": "WOS:000314123100010"}