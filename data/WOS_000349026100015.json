{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "triple_graph_grammars"}, {"score": 0.0323688917290338, "phrase": "propagation_operations"}, {"score": 0.004251210982670317, "phrase": "bidirectional_model_transformations"}, {"score": 0.004156012879026324, "phrase": "corresponding_formal_approach"}, {"score": 0.004109212945115815, "phrase": "model_synchronization"}, {"score": 0.003817548980308163, "phrase": "formal_synchronization_framework"}, {"score": 0.0037745459666402915, "phrase": "bidirectional_update_propagation_operations"}, {"score": 0.003467040410632942, "phrase": "consistently_integrated_source"}, {"score": 0.0034279721355412285, "phrase": "target_models"}, {"score": 0.0032575241721857343, "phrase": "generated_synchronization_framework"}, {"score": 0.002671263324230699, "phrase": "possible_inputs"}, {"score": 0.002279011030331704, "phrase": "running_example"}, {"score": 0.002202742267484358, "phrase": "case_study"}, {"score": 0.0021655683497137234, "phrase": "concrete_visual_syntax"}, {"score": 0.002141134176057931, "phrase": "abstract_syntax_notation"}, {"score": 0.0021049977753042253, "phrase": "typed_attributed_graphs"}], "paper_keywords": ["Model synchronization", " Correctness", " Bidirectional model transformation", " Triple graph grammars"], "paper_abstract": "Triple graph grammars (TGGs) have been used successfully to analyze correctness and completeness of bidirectional model transformations, but a corresponding formal approach to model synchronization has been missing. This paper closes this gap by providing a formal synchronization framework with bidirectional update propagation operations. They are generated from a given TGG, which specifies the language of all consistently integrated source and target models. As our main result, we show that the generated synchronization framework is correct and complete, provided that forward and backward propagation operations are deterministic. Correctness essentially means that the propagation operations preserve and establish consistency while completeness ensures that the operations are defined for all possible inputs. Moreover, we analyze the conditions under which the operations are inverse to each other. All constructions and results are motivated and explained by a running example, which leads to a case study, using concrete visual syntax and abstract syntax notation based on typed attributed graphs.", "paper_title": "Model synchronization based on triple graph grammars: correctness, completeness and invertibility", "paper_id": "WOS:000349026100015"}