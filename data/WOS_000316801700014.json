{"auto_keywords": [{"score": 0.04718561448870172, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "uniform_random_number"}, {"score": 0.004733901576706854, "phrase": "fpga_architectures"}, {"score": 0.004448169552315403, "phrase": "random_number_generators"}, {"score": 0.004203343568960231, "phrase": "software-optimized_rngs"}, {"score": 0.004039995317682942, "phrase": "bitwise_operations"}, {"score": 0.00399449659126893, "phrase": "fpga-specific_features"}, {"score": 0.0037745459666402915, "phrase": "fpga-optimized_rngs"}, {"score": 0.0035869274480340727, "phrase": "real-world_designs"}, {"score": 0.0034279721355412285, "phrase": "fpga_rng"}, {"score": 0.0032026066791743866, "phrase": "bitwise_xor_operations"}, {"score": 0.0030955250132409964, "phrase": "lookup_tables"}, {"score": 0.003009022147559257, "phrase": "shift_registers"}, {"score": 0.002975099633631871, "phrase": "varying_lengths"}, {"score": 0.0028919522313933525, "phrase": "good_resource-quality_balance"}, {"score": 0.002843180211561427, "phrase": "previous_fpga-optimized_generators"}, {"score": 0.0027794243746094905, "phrase": "previous_high-resource_high-period_lut-fifo_rngs"}, {"score": 0.002656158309155626, "phrase": "lut-opt_rngs"}, {"score": 0.002552781867125423, "phrase": "best_software_generators"}, {"score": 0.0025097154697345096, "phrase": "lut-sr_generators"}, {"score": 0.002129020447793464, "phrase": "online_set"}], "paper_keywords": ["Equidistribution", " field-programmable gate array (FPGA)", " uniform random number generator (RNG)"], "paper_abstract": "Field-programmable gate array (FPGA) optimized random number generators (RNGs) are more resource-efficient than software-optimized RNGs because they can take advantage of bitwise operations and FPGA-specific features. However, it is difficult to concisely describe FPGA-optimized RNGs, so they are not commonly used in real-world designs. This paper describes a type of FPGA RNG called a LUT-SR RNG, which takes advantage of bitwise XOR operations and the ability to turn lookup tables (LUTs) into shift registers of varying lengths. This provides a good resource-quality balance compared to previous FPGA-optimized generators, between the previous high-resource high-period LUT-FIFO RNGs and low-resource low-quality LUT-OPT RNGs, with quality comparable to the best software generators. The LUT-SR generators can also be expressed using a simple C++ algorithm contained within this paper, allowing 60 fully-specified LUT-SR RNGs with different characteristics to be embedded in this paper, backed up by an online set of very high speed integrated circuit hardware description language (VHDL) generators and test benches.", "paper_title": "The LUT-SR Family of Uniform Random Number Generators for FPGA Architectures", "paper_id": "WOS:000316801700014"}