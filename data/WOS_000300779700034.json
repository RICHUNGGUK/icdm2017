{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computer_go"}, {"score": 0.008409321427125714, "phrase": "monte-carlo_tree_search"}, {"score": 0.004342430078306461, "phrase": "ancient_oriental_game"}, {"score": 0.003997891221012094, "phrase": "grand_challenge"}, {"score": 0.003916098498242888, "phrase": "artificial_intelligence"}, {"score": 0.0035681790580031998, "phrase": "classical_methods"}, {"score": 0.0034951469511975346, "phrase": "game_tree_search"}, {"score": 0.0030872017736888113, "phrase": "recent_play"}, {"score": 0.002841971477743441, "phrase": "new_paradigm"}, {"score": 0.0027837615811247963, "phrase": "tree_search"}, {"score": 0.0026986685585382347, "phrase": "monte-carlo_methods"}, {"score": 0.0024586427394152196, "phrase": "human-master_levels"}, {"score": 0.002310578855290687, "phrase": "top_professional_players"}, {"score": 0.0021049977753042253, "phrase": "leading_algorithms"}], "paper_keywords": [""], "paper_abstract": "The ancient oriental game of Go has long been considered a grand challenge for artificial intelligence. For decades, computer Go has defied the classical methods in game tree search that worked so successfully for chess and checkers. However, recent play in computer Go has been transformed by a new paradigm for tree search based on Monte-Carlo methods. Programs based on Monte-Carlo tree search now play at human-master levels and are beginning to challenge top professional players. In this paper, we describe the leading algorithms for Monte-Carlo tree search and explain how they have advanced the state of the art in computer Go.", "paper_title": "The Grand Challenge of Computer Go: Monte Carlo Tree Search and Extensions", "paper_id": "WOS:000300779700034"}