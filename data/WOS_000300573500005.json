{"auto_keywords": [{"score": 0.041387118029522024, "phrase": "target_vectors"}, {"score": 0.00481495049065317, "phrase": "gradual_sub-lattice"}, {"score": 0.004610058444728656, "phrase": "factoring_polynomials"}, {"score": 0.004469042910390712, "phrase": "lattice_algorithm"}, {"score": 0.004332322079100859, "phrase": "classical_applications"}, {"score": 0.004278807087784626, "phrase": "lattice_reduction"}, {"score": 0.004122179528285764, "phrase": "lattice_bases"}, {"score": 0.004046020290832207, "phrase": "generalized_knapsack-type_structure"}, {"score": 0.003617616153730564, "phrase": "traditional_lattice_reduction"}, {"score": 0.003399466007862412, "phrase": "input_vectors"}, {"score": 0.0032143649757754595, "phrase": "output_vectors"}, {"score": 0.0027341763737751467, "phrase": "input_entries"}, {"score": 0.0026013505538490223, "phrase": "quadratic_complexity_floating-point_lll_algorithms"}, {"score": 0.0023990982005125763, "phrase": "direct_application"}, {"score": 0.0023694065215394593, "phrase": "factoring_univariate_polynomials"}, {"score": 0.0022683432490549064, "phrase": "first_complexity"}, {"score": 0.0022542611024997474, "phrase": "bound_improvement"}, {"score": 0.0021851480717840484, "phrase": "second_application"}, {"score": 0.0021580985506699105, "phrase": "algebraic_number_reconstruction"}, {"score": 0.0021049977753042253, "phrase": "new_complexity"}], "paper_keywords": ["Lattice reduction", " Algorithmic complexity", " Polynomial factorization", " Algebraic number reconstruction", " Knapsack lattices"], "paper_abstract": "We present a lattice algorithm specifically designed for some classical applications of lattice reduction. The applications are for lattice bases with a generalized knapsack-type structure, where the target vectors have bounded depth. For such applications, the complexity of the algorithm improves traditional lattice reduction by replacing some dependence on the bit-length of the input vectors by some dependence on the bound for the output vectors. If the bit-length of the target vectors is unrelated to the bit-length of the input, then our algorithm is only linear in the bit-length of the input entries, which is an improvement over the quadratic complexity floating-point LLL algorithms. To illustrate the usefulness of this algorithm we show that a direct application to factoring univariate polynomials over the integers leads to the first complexity bound improvement since 1984. A second application is algebraic number reconstruction, where a new complexity bound is obtained as well.", "paper_title": "Gradual Sub-lattice Reduction and a New Complexity for Factoring Polynomials", "paper_id": "WOS:000300573500005"}