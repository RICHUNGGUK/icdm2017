{"auto_keywords": [{"score": 0.03230092770108838, "phrase": "pickpt"}, {"score": 0.00839863386181797, "phrase": "disk_space"}, {"score": 0.00481495049065317, "phrase": "incremental_checkpointing"}, {"score": 0.004036141321779216, "phrase": "cumulative_size"}, {"score": 0.003961842092184655, "phrase": "incremental_checkpoints"}, {"score": 0.003817306032290766, "phrase": "steady_rate"}, {"score": 0.00357689487273538, "phrase": "updated_values"}, {"score": 0.0031113369425402287, "phrase": "comprehensive_overview"}, {"score": 0.002731500545019039, "phrase": "space-efficient_techniques"}, {"score": 0.0021049977753042253, "phrase": "existing_incremental_checkpointing"}], "paper_keywords": ["checkpoint and recovery", " page-level incremental checkpointing", " fault tolerance", " Linux Kernel", " checkpointing overhead"], "paper_abstract": "Incremental checkpointing, which is intended to minimize checkpointing overhead, saves only the modified pages of a process. However, the cumulative size of incremental checkpoints increases at a steady rate over time because a number of updated values may be saved for the same page. In this paper, we present a comprehensive overview of Pickpt, a page-level incremental checkpointing facility. Pickpt provides space-efficient techniques aiming to minimizing the use of disk space. For our experiments, the results showed that the use of disk space using Pickpt was significantly reduced, compared with existing incremental checkpointing.", "paper_title": "Space-efficient page-level incremental checkpointing", "paper_id": "WOS:000236423900002"}