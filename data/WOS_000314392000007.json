{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "testing_programs"}, {"score": 0.004201774694043468, "phrase": "available_source_code"}, {"score": 0.0037336520904376687, "phrase": "open_problem"}, {"score": 0.0034403745992576808, "phrase": "formal_specification-based_testing_approach"}, {"score": 0.0032282396745967504, "phrase": "principal_idea"}, {"score": 0.003056819704624705, "phrase": "informal_requirements"}, {"score": 0.0030017207229983385, "phrase": "formal_operation_specifications"}, {"score": 0.0028944757265206332, "phrase": "interface_scenarios"}, {"score": 0.0025716240685409513, "phrase": "test_case_generation"}, {"score": 0.0024129269611844794, "phrase": "example_and_case_study"}, {"score": 0.0022640009579466924, "phrase": "ic_card_system"}], "paper_keywords": ["Specification-based testing", " Formal specification", " Black-box testing"], "paper_abstract": "A program required to be tested in practice often has no available source code for some reason and how to adequately test such a program is still an open problem. In this paper, we describe a formal specification-based testing approach to tackle this challenge. The principal idea is first to formalize the informal requirements into formal operation specifications that take the interface scenarios of the program into account, and then utilize the specifications for test case generation and test result analysis. An example and case study of applying the approach to an IC card system is presented to illustrate its usage and analyze its performance.", "paper_title": "A Formal Approach to Testing Programs in Practice", "paper_id": "WOS:000314392000007"}