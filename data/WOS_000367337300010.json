{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dedukti"}, {"score": 0.011116035294471256, "phrase": "coq"}, {"score": 0.0043080553835735825, "phrase": "logical_framework"}, {"score": 0.003916098498242888, "phrase": "automated_tools"}, {"score": 0.0037336520904376687, "phrase": "different_developments"}, {"score": 0.0035596795043114264, "phrase": "hol"}, {"score": 0.0028944757265206332, "phrase": "new_results"}, {"score": 0.0025892330566358503, "phrase": "concrete_example"}, {"score": 0.002391067964886602, "phrase": "sorting_algorithm"}, {"score": 0.0021731423856364003, "phrase": "natural_numbers"}, {"score": 0.0021049980887990804, "phrase": "hol."}], "paper_keywords": [""], "paper_abstract": "We use Dedukti as a logical framework for interoperability. We use automated tools to translate different developments made in HOL and in Coq to Dedukti, and we combine them to prove new results. We illustrate our approach with a concrete example where we instantiate a sorting algorithm written in Coq with the natural numbers of HOL.", "paper_title": "Mixing HOL and Coq in Dedukti", "paper_id": "WOS:000367337300010"}