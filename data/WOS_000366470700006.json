{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automated_repair"}, {"score": 0.004766090327062509, "phrase": "c_programs"}, {"score": 0.004646088032529303, "phrase": "automated_software_repair"}, {"score": 0.004529093447865156, "phrase": "common_benchmark_problems"}, {"score": 0.004460309246062286, "phrase": "benchmark_sets"}, {"score": 0.004347972379250724, "phrase": "computer_science"}, {"score": 0.004303830426772906, "phrase": "existing_benchmarks"}, {"score": 0.00411064950774695, "phrase": "automatic_defect_repair"}, {"score": 0.0038271712887391015, "phrase": "benchmark_programs"}, {"score": 0.0037307208089736835, "phrase": "deterministic_method"}, {"score": 0.00342054627009158, "phrase": "new_set"}, {"score": 0.003250238918180901, "phrase": "manybugs"}, {"score": 0.0032172054825137866, "phrase": "introclass"}, {"score": 0.002949598537993663, "phrase": "comparative_evaluation"}, {"score": 0.0029196116767956273, "phrase": "automatic_repair_algorithms"}, {"score": 0.0028459677232555176, "phrase": "experimental_questions"}, {"score": 0.002622528664187849, "phrase": "study_object"}, {"score": 0.002556359086441866, "phrase": "qualitative_evaluation"}, {"score": 0.002392008392892289, "phrase": "baseline_experimental_results"}], "paper_keywords": ["Automated program repair", " benchmark", " subject defect", " reproducibility", " MANYBUGS", " INTROCLASS"], "paper_abstract": "The field of automated software repair lacks a set of common benchmark problems. Although benchmark sets are used widely throughout computer science, existing benchmarks are not easily adapted to the problem of automatic defect repair, which has several special requirements. Most important of these is the need for benchmark programs with reproducible, important defects and a deterministic method for assessing if those defects have been repaired. This article details the need for a new set of benchmarks, outlines requirements, and then presents two datasets, MANYBUGS and INTROCLASS, consisting between them of 1,183 defects in 15 C programs. Each dataset is designed to support the comparative evaluation of automatic repair algorithms asking a variety of experimental questions. The datasets have empirically defined guarantees of reproducibility and benchmark quality, and each study object is categorized to facilitate qualitative evaluation and comparisons by category of bug or program. The article presents baseline experimental results on both datasets for three existing repair methods, GenProg, AE, and TrpAutoRepair, to reduce the burden on researchers who adopt these datasets for their own comparative evaluations.", "paper_title": "The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs", "paper_id": "WOS:000366470700006"}