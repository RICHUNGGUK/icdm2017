{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "continuous_queries"}, {"score": 0.004482063543727601, "phrase": "moving_objects_databases"}, {"score": 0.004054169947971483, "phrase": "moving_objects"}, {"score": 0.003939565240409143, "phrase": "traffic_abnormalities"}, {"score": 0.003632080001489739, "phrase": "corresponding_regions"}, {"score": 0.0031018195951638882, "phrase": "comprehensive_set"}, {"score": 0.002752139271586703, "phrase": "static_techniques"}, {"score": 0.0026235360404084137, "phrase": "trigger_execution"}, {"score": 0.0025861368747446324, "phrase": "dynamic_techniques"}, {"score": 0.002549269480908849, "phrase": "in-memory_shared_reevaluation_algorithm"}, {"score": 0.0024185182010749273, "phrase": "query_reevaluation"}, {"score": 0.002372649454733251, "phrase": "space-filling_curves"}, {"score": 0.0022509365210787993, "phrase": "existing_object-relational_database_management_system"}, {"score": 0.002187194307878705, "phrase": "extensive_experimental_evaluations"}, {"score": 0.002166349705365602, "phrase": "realistic_data_sets"}], "paper_keywords": ["moving object database", " continuous queries", " triggers", " context-aware reevaluation"], "paper_abstract": "We address the problem of optimizing the maintenance of continuous queries in Moving Objects Databases, when a set of pending continuous queries need to be reevaluated as a result of bulk updates to the trajectories of moving objects. Such bulk updates may happen when traffic abnormalities, e. g., accidents or road works, affect a subset of trajectories in the corresponding regions, throughout the duration of these abnormalities. The updates to the trajectories may in turn affect the correctness of the answer sets for the pending continuous queries in much larger geographic areas. We present a comprehensive set of techniques, both static and dynamic, for improving the performance of reevaluating the continuous queries in response to the bulk updates. The static techniques correspond to specifying the values for the various semantic dimensions of trigger execution. The dynamic techniques include an in-memory shared reevaluation algorithm, extending query indexing to queries described by trajectories and query reevaluation ordering based on space-filling curves. We have completely implemented our system prototype on top of an existing Object-Relational Database Management System, Oracle 9i, and conducted extensive experimental evaluations using realistic data sets to demonstrate the validity of our approach.", "paper_title": "Efficient maintenance of continuous queries for trajectories", "paper_id": "WOS:000257204600001"}