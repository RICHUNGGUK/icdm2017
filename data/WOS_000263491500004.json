{"auto_keywords": [{"score": 0.029096246537097897, "phrase": "halin"}, {"score": 0.00481495049065317, "phrase": "recursively_constructed_graphs"}, {"score": 0.004733625412289433, "phrase": "fast_algorithms"}, {"score": 0.003858110309630846, "phrase": "basic_conceptual_notions"}, {"score": 0.0032531496610470377, "phrase": "series-parallel_graphs"}, {"score": 0.0031981188104809994, "phrase": "k-terminal_graphs"}, {"score": 0.0031440159350875057, "phrase": "treewidth-k_graphs"}, {"score": 0.003038532168038562, "phrase": "partial_k-trees"}, {"score": 0.0029871209444889716, "phrase": "k-jackknife_graphs"}, {"score": 0.002936577024096783, "phrase": "pathwidth-k_graphs"}, {"score": 0.002886885861509621, "phrase": "bandwidth-k_graphs"}, {"score": 0.002838033152426417, "phrase": "cutwidth-k_graphs"}, {"score": 0.002790004829699627, "phrase": "branchwidth-k_graphs"}, {"score": 0.0026282000779095987, "phrase": "cliquewidth-k_graphs"}, {"score": 0.002583713580625699, "phrase": "k-nlc_graphs"}, {"score": 0.002539978170928796, "phrase": "k-hb_graphs"}, {"score": 0.002475755804232436, "phrase": "rankwidth-k_graphs"}, {"score": 0.0022731540640627307, "phrase": "typical_algorithms"}], "paper_keywords": ["Algorithms", " Theory", " Bandwidth", " branchwidth", " cliquewidth", " cograph", " cutwidth", " dynamic programming", " Halin graph", " pathwidth", " rankwidth", " series parallel", " tree", " treewidth"], "paper_abstract": "Fast algorithms can be created for many graph problems when instances are confined to classes of graphs that are recursively constructed. This article first describes some basic conceptual notions regarding the design of such fast algorithms, and then the coverage proceeds through several recursive graph classes. Specific classes include trees, series-parallel graphs, k-terminal graphs, treewidth-k graphs, k-trees, partial k-trees, k-jackknife graphs, pathwidth-k graphs, bandwidth-k graphs, cutwidth-k graphs, branchwidth-k graphs, Halin graphs, cographs, cliquewidth-k graphs, k-NLC graphs, k-HB graphs, and rankwidth-k graphs. The definition of each class is provided. Typical algorithms are applied to solve problems on instances of most classes. Relationships between the classes are also discussed.", "paper_title": "Solving Problems on Recursively Constructed Graphs", "paper_id": "WOS:000263491500004"}