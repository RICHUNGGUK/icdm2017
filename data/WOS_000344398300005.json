{"auto_keywords": [{"score": 0.0429016280566267, "phrase": "cpu_processor"}, {"score": 0.008556788875419637, "phrase": "cpu_processors"}, {"score": 0.00481495049065317, "phrase": "mixed_cpu-gpu_jobs."}, {"score": 0.004724365740062236, "phrase": "online_scheduling_problem"}, {"score": 0.004657542074154025, "phrase": "cpu-gpu_cluster"}, {"score": 0.004316886337153193, "phrase": "gpu"}, {"score": 0.0032149396890830575, "phrase": "intermediate_model"}, {"score": 0.0031693980719538317, "phrase": "scheduling_problem"}, {"score": 0.0031393948330209255, "phrase": "identical_machines"}, {"score": 0.003109674734960237, "phrase": "unrelated_machines"}, {"score": 0.002923214590192792, "phrase": "online_algorithm"}, {"score": 0.002881793492919646, "phrase": "competitive_ratio"}, {"score": 0.0023485549678832628, "phrase": "balanced_case"}, {"score": 0.0021352776064254195, "phrase": "one-sided_case"}], "paper_keywords": ["Online scheduling", " competitive ratio", " CPU-CPU cluster", " unrelated machine scheduling"], "paper_abstract": "We consider the online scheduling problem in a CPU-GPU cluster. In this problem there are two sets of processors, the CPU processors and the GPU processors. Each job has two distinct processing times, one for the CPU processor and the other for the CPU processor. Once a job is released, a decision should be made immediately about which processor it should be assigned to. The goal is to minimize the makespan, i.e., the largest completion time among all the processors. Such a problem could be seen as an intermediate model between the scheduling problem on identical machines and unrelated machines. We provide a 3.85-competitive online algorithm for this problem and show that no online algorithm exists with competitive ratio strictly less than 2. We also consider two special cases of this problem, the balanced case where the number of CPU processors equals to that of CPU processors, and the one-sided case where there is only one CPU or CPU processor. For the balanced case, we first provide a simple 3-competitive algorithm, and then a better algorithm with competitive ratio of 2.732 is derived. For the one-sided case, a 3-competitive algorithm is given.", "paper_title": "ONLINE SCHEDULING OF MIXED CPU-GPU JOBS", "paper_id": "WOS:000344398300005"}