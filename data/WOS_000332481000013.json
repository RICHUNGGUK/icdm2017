{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "zero_exemplar_breakpoint_distance_problem"}, {"score": 0.04920178434889582, "phrase": "exemplar_breakpoint_distance_problem"}, {"score": 0.004527024978801684, "phrase": "genome_comparison"}, {"score": 0.003952513974962462, "phrase": "gene_family"}, {"score": 0.003051017529110878, "phrase": "np"}, {"score": 0.0027120400060701034, "phrase": "best_existing_algorithm"}, {"score": 0.0023967582707115354, "phrase": "new_algorithm"}, {"score": 0.002295277579105177, "phrase": "running_time"}, {"score": 0.0021445187782350105, "phrase": "java"}, {"score": 0.0021049977753042253, "phrase": "software_package"}], "paper_keywords": ["Exemplar breakpoint distance", " genome", " gene family", " algorithms", " time complexity"], "paper_abstract": "The exemplar breakpoint distance problem is one of the most important problems in genome comparison and has been extensively studied in the literature. The exemplar breakpoint distance problem cannot be approximated within any factor even if each gene family occurs at most twice in a genome. This is due to the fact that its decision version, the zero exemplar breakpoint distance problem where each gene family occurs at most twice in a genome (ZEBD(2, 2) for short) is NP-hard. Thus, the basic version ZEBD(2, 2) has attracted the attention of many scientists. The best existing algorithm for ZEBD(2, 2) runs in O(n2(n)) time. In this paper, we propose a new algorithm for ZEBD(2, 2) with running time O(n(2)1.86121(n)). We have implemented the algorithm in Java. The software package is available upon request.", "paper_title": "An Exact Algorithm for the Zero Exemplar Breakpoint Distance Problem", "paper_id": "WOS:000332481000013"}