{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "surface_sampling"}, {"score": 0.004749646583168342, "phrase": "gaussian_epsilon-nets"}, {"score": 0.004200197763119297, "phrase": "one-to-many_mapping"}, {"score": 0.0040040425282442125, "phrase": "gaussian_sphere"}, {"score": 0.0036386875640595944, "phrase": "global_information"}, {"score": 0.0027116246112603875, "phrase": "sampling_method"}, {"score": 0.002532284627202572, "phrase": "localized_sampling_methods"}, {"score": 0.0023486473525617816, "phrase": "shape_approximation"}, {"score": 0.0022083264126633085, "phrase": "streaming_implementation"}, {"score": 0.0021049977753042253, "phrase": "small_memory_footprint"}], "paper_keywords": ["Normal quantization", " Surface sampling", " Shape approximation", " Epsilon-nets"], "paper_abstract": "We propose a robust, feature preserving and user-steerable mesh sampling algorithm, based on the one-to-many mapping of a regular sampling of the Gaussian sphere onto a given manifold surface. Most of the operations are local, and no global information is maintained. For this reason, our algorithm is amenable to a parallel or streaming implementation and is most suitable in situations when it is not possible to hold all the input data in memory at the same time. Using epsilon-nets, we analyze the sampling method and propose solutions to avoid shortcomings inherent to all localized sampling methods. Further, as a byproduct of our sampling algorithm, a shape approximation is produced. Finally, we demonstrate a streaming implementation that handles large meshes with a small memory footprint.", "paper_title": "Streaming surface sampling using Gaussian epsilon-nets", "paper_id": "WOS:000265539300005"}