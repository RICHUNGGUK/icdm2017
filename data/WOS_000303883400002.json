{"auto_keywords": [{"score": 0.04840706869974126, "phrase": "temporal_consistency"}, {"score": 0.03277926073744005, "phrase": "real-time_data_objects"}, {"score": 0.015582201258123278, "phrase": "distributed_real-time_systems"}, {"score": 0.014145550763912981, "phrase": "update_jobs"}, {"score": 0.00481495049065317, "phrase": "data_temporal_consistency"}, {"score": 0.004605748839642513, "phrase": "real-time_data"}, {"score": 0.00450456611645112, "phrase": "real-time_database_systems"}, {"score": 0.004425215632459868, "phrase": "transmission_delays"}, {"score": 0.003687960013746783, "phrase": "design_problems"}, {"score": 0.003527555657087185, "phrase": "xiong"}, {"score": 0.0034963129868796033, "phrase": "ramamritham"}, {"score": 0.0034654663851848623, "phrase": "proc"}, {"score": 0.003404244237372396, "phrase": "ieee_real-time_systems_symposium"}, {"score": 0.003359119985242403, "phrase": "ieee_trans"}, {"score": 0.0031703706626348507, "phrase": "efficient_scheme"}, {"score": 0.0030189426536422577, "phrase": "distributed_real-time_system_environment"}, {"score": 0.002900476026036687, "phrase": "jitter"}, {"score": 0.002641621667026613, "phrase": "jitter_problems"}, {"score": 0.002482013330276732, "phrase": "update_task"}, {"score": 0.00241658945942583, "phrase": "deterministic_guarantee"}, {"score": 0.0022705467477443417, "phrase": "statistical_guarantee"}, {"score": 0.002152397315548125, "phrase": "extensive_simulation_experiments"}, {"score": 0.0021049977753042253, "phrase": "effective_approaches"}], "paper_keywords": ["Real-time databases", " Temporal consistency", " Data freshness", " Scheduling and jitters"], "paper_abstract": "Previous works on maintaining temporal consistency of real-time data objects mainly focuses on real-time database systems in which the transmission delays (jitters) of update jobs are simply ignored. However, this assumption does not hold in distributed real-time systems where the jitters of the update jobs can be large and change unpredictably with time. In this paper, we examine the design problems when the More-Less () approach (Xiong and Ramamritham in Proc. of the IEEE real-time systems symposium 1999; IEEE Trans Comput 53:567-583, 2004), known to be an efficient scheme for maintaining temporal consistency of real-time data objects, is applied in a distributed real-time system environment. We propose two new extensions based on , called Jitter-based More-Less () and Statistical Jitter-based More-Less () to address the jitter problems. assumes that in the system the jitter is a constant for each update task, and it provides a deterministic guarantee in temporal consistency of the real-time data objects. further relaxes this restriction and provides a statistical guarantee based on the given requirements of the real-time data objects. We demonstrate through extensive simulation experiments that both and are effective approaches and they significantly outperform in terms of improving schedulability.", "paper_title": "Maintaining data temporal consistency in distributed real-time systems", "paper_id": "WOS:000303883400002"}