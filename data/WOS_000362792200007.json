{"auto_keywords": [{"score": 0.04952782290107846, "phrase": "erasure-coded_data_archival"}, {"score": 0.02545876227828736, "phrase": "archiving_time"}, {"score": 0.00481495049065317, "phrase": "pipelined_encoding_process"}, {"score": 0.004474366340935036, "phrase": "erasure_codes"}, {"score": 0.004304856672196293, "phrase": "traditional_synchronous_encoding_process"}, {"score": 0.004141742095830515, "phrase": "encoding_operations"}, {"score": 0.004094018760244776, "phrase": "decentralized_manner"}, {"score": 0.003954109842050071, "phrase": "pipelined_encoding_processes"}, {"score": 0.0038934666267504596, "phrase": "data_archival_performance"}, {"score": 0.0038634933357842302, "phrase": "storage_clusters"}, {"score": 0.0035761182400032487, "phrase": "chained-declustering_mechanism"}, {"score": 0.0035076666315744525, "phrase": "triplication_redundancy_groups"}, {"score": 0.0032468438743382534, "phrase": "dp"}, {"score": 0.003087500254099842, "phrase": "data_locality-two_or_three_local_blocks"}, {"score": 0.0029361086955646625, "phrase": "decentralized_computation_load-encoding_operations"}, {"score": 0.0028138046006772567, "phrase": "parallel_archival_processing-two_or_three_encoding_pipelines"}, {"score": 0.0025151755329660837, "phrase": "real-world_storage_cluster"}, {"score": 0.0023188652648490874, "phrase": "nine-node_storage_cluster"}, {"score": 0.0022481685132781626, "phrase": "performance_bottleneck"}, {"score": 0.0021461354559957234, "phrase": "network_traffic"}], "paper_keywords": ["Erasure-coded storage cluster", " data archival", " pipelined encoding", " power efficiency"], "paper_abstract": "This paper addresses an issue of erasure-coded data archival, where (k + r,k) erasure codes are employed to archive rarely accessed replicas. The traditional synchronous encoding process neither leverages the existence of replicas, nor handles encoding operations in a decentralized manner. To overcome these drawbacks, we exploit pipelined encoding processes to boost the data archival performance on storage clusters. First, we propose two data layouts called [D + P](cd) and [3X](cd) by applying a chained-declustering mechanism to both Mirrored RAID-5 and triplication redundancy groups. Second, in light of the [D + P](cd) and [3X](cd) layouts, we design two archiving schemes named DP and 3X, which exhibit the following three salient features: (i) exploiting data locality-two or three local blocks are read by each involved node for encoding; (ii) decentralized computation load-encoding operations are distributed among k nodes; and (iii) parallel archival processing-two or three encoding pipelines are simultaneously deployed to generate parity blocks. We implement both the DP and 3X schemes and three existing solutions (i.e., SynE, DE, and RapidRAID) in a real-world storage cluster. Experimental results show that our archival schemes outperform the other three solutions in terms of archiving time by a factor of at least 3.41 in a nine-node storage cluster. The experiments strongly indicate that the performance bottleneck of SynE lies in its block-receiving stage; it is disk I/O rather than network traffic that dominates archiving time for both the DE and RapidRAID schemes.", "paper_title": "Exploiting Pipelined Encoding Process to Boost Erasure-Coded Data Archival", "paper_id": "WOS:000362792200007"}