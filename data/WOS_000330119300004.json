{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "qos-aware_web_service_composition"}, {"score": 0.004595529592539951, "phrase": "service-oriented_systems"}, {"score": 0.004444921827311577, "phrase": "highly_dynamic_and_heterogeneous_environment"}, {"score": 0.004327981760540394, "phrase": "user's_business_requirements"}, {"score": 0.004075946554498088, "phrase": "case-based_reasoning_approach"}, {"score": 0.003968675046544738, "phrase": "system's_fault-tolerant_ability"}, {"score": 0.0032272929113113203, "phrase": "corresponding_fault"}, {"score": 0.0031422859551159506, "phrase": "new_fault"}, {"score": 0.0029394074636168435, "phrase": "case_base"}, {"score": 0.0027680095380207734, "phrase": "solution_templates"}, {"score": 0.0026771333996253783, "phrase": "business_process_structure"}, {"score": 0.00255488432062653, "phrase": "influential_region-based_algorithm"}, {"score": 0.0024875444192203485, "phrase": "handle_cost"}, {"score": 0.0023739321566540682, "phrase": "fault-tolerant_framework"}, {"score": 0.0023113506171584157, "phrase": "comprehensive_experiments"}, {"score": 0.002235433376874495, "phrase": "real_qos_dataset"}, {"score": 0.0021910825909008946, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "fault-tolerant_capability"}], "paper_keywords": ["quality of service", " case-based reasoning", " fault-tolerant", " web service composition"], "paper_abstract": "Service-oriented systems are performed in a highly dynamic and heterogeneous environment to achieve a user's business requirements. In this paper, we introduce a case-based reasoning approach to improve the system's fault-tolerant ability meeting the end-to-end Quality-of-Service (QoS) constraints. We consider and quantify the fault information and QoS information together in a case. In addition, one case also includes one solution to cope with the corresponding fault. When a new fault occurs, its failure symptoms are extracted and matched against the case base to look for the most similar case. Furthermore, solution templates are presented considering the business process structure features. We also develop an influential region-based algorithm to minimise the handle cost. Based on our proposed method, a fault-tolerant framework is implemented. Comprehensive experiments are conducted employing a real QoS dataset and the experimental results show that our approach improves the fault-tolerant capability encouragingly.", "paper_title": "A fault-tolerant framework for QoS-aware web service composition via case-based reasoning", "paper_id": "WOS:000330119300004"}