{"auto_keywords": [{"score": 0.04942981937458461, "phrase": "n-fold_integer_programming"}, {"score": 0.00481495049065317, "phrase": "cubic_time"}, {"score": 0.004466519142879166, "phrase": "natural_applications"}, {"score": 0.004405919996432158, "phrase": "operations_research"}, {"score": 0.0038960785110831162, "phrase": "integer_programming"}, {"score": 0.0038170129089059013, "phrase": "fastest_algorithm"}, {"score": 0.0034924598001567944, "phrase": "binary_length"}, {"score": 0.0034215569542785907, "phrase": "numerical_part"}, {"score": 0.0030879936732269293, "phrase": "bimatrix_a"}, {"score": 0.0028641729745364952, "phrase": "drastic_improvement"}, {"score": 0.0027116246112603875, "phrase": "time_o"}, {"score": 0.002549672862868133, "phrase": "cubic_dependency"}, {"score": 0.002447101794397243, "phrase": "bimatrix_a."}, {"score": 0.0023810183846557486, "phrase": "separable_convex_piecewise_affine_objectives"}, {"score": 0.0021049977753042253, "phrase": "integer_programming_problem"}], "paper_keywords": [""], "paper_abstract": "n-Fold integer programming is a fundamental problem with a variety of natural applications in operations research and statistics. Moreover, it is universal and provides a new, variable-dimension, parametrization of all of integer programming. The fastest algorithm for n-fold integer programming predating the present article runs in time with L the binary length of the numerical part of the input and g(A) the so-called Graver complexity of the bimatrix A defining the system. In this article we provide a drastic improvement and establish an algorithm which runs in time O (n (3) L) having cubic dependency on n regardless of the bimatrix A. Our algorithm works for separable convex piecewise affine objectives as well. Moreover, it can be used to define a hierarchy of approximations for any integer programming problem.", "paper_title": "n-Fold integer programming in cubic time", "paper_id": "WOS:000313797100013"}