{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "lazy_evaluation_and_delimited_control"}, {"score": 0.004563028873351776, "phrase": "lambda_calculus"}, {"score": 0.004471978831302331, "phrase": "equational_framework"}, {"score": 0.00432423070113186, "phrase": "lazy_evaluation"}, {"score": 0.004016072233242585, "phrase": "reasoning_steps"}, {"score": 0.0038573081851680656, "phrase": "standard-order_reduction_relation"}, {"score": 0.003679969180334367, "phrase": "novel_abstract_machine_definition"}, {"score": 0.0033045378860812403, "phrase": "machine_evaluation"}, {"score": 0.003216804708106142, "phrase": "standard-order_evaluation"}, {"score": 0.003152531962718477, "phrase": "traditional_abstract_machines"}, {"score": 0.0030278017562213265, "phrase": "significant_role"}, {"score": 0.0029672941061574375, "phrase": "machine's_behavior"}, {"score": 0.002700485592691974, "phrase": "store-based_effects"}, {"score": 0.0025935941070969575, "phrase": "evaluation_stack"}, {"score": 0.002558909812664716, "phrase": "control-based_effects"}, {"score": 0.0021049977753042253, "phrase": "call-by-value_language"}], "paper_keywords": ["Languages", " Theory", " call-by-need", " reduction semantics", " abstract machines", " delimited continuations", " lambda calculus"], "paper_abstract": "The call-by-need lambda calculus provides an equational framework for reasoning syntactically about lazy evaluation. This paper examines its operational characteristics. By a series of reasoning steps, we systematically unpack the standard-order reduction relation of the calculus and discover a novel abstract machine definition which, like the calculus, goes \"under lambdas.\" We prove that machine evaluation is equivalent to standard-order evaluation. Unlike traditional abstract machines, delimited control plays a significant role in the machine's behavior. In particular, the machine replaces the manipulation of a heap using store-based effects with disciplined management of the evaluation stack using control-based effects. In short, state is replaced with control. To further articulate this observation, we present a simulation of call-by-need in a call-by-value language using delimited control operations.", "paper_title": "Lazy Evaluation and Delimited Control", "paper_id": "WOS:000272013800015"}