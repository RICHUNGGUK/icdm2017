{"auto_keywords": [{"score": 0.026089492782080947, "phrase": "control_flow_graphs"}, {"score": 0.00481495049065317, "phrase": "self-mutating_malware"}, {"score": 0.004738325072560588, "phrase": "control-flow_graph"}, {"score": 0.0046256566852302256, "phrase": "next_generation_malware"}, {"score": 0.00437302709192313, "phrase": "intense_use"}, {"score": 0.004303404058571052, "phrase": "polymorphic_and_metamorphic_techniques"}, {"score": 0.004134137523409649, "phrase": "current_malware_detectors"}, {"score": 0.004003511299646736, "phrase": "pattern_matching"}, {"score": 0.0037544644262310525, "phrase": "new_kind"}, {"score": 0.003635790924434452, "phrase": "novel_techniques"}, {"score": 0.0033822643082593285, "phrase": "malware_detectors"}, {"score": 0.0033283624928018177, "phrase": "recent_papers"}, {"score": 0.0026792166577171476, "phrase": "metamorphic_malicious_code"}, {"score": 0.0022812715029149216, "phrase": "known_malware"}, {"score": 0.002191366809047192, "phrase": "experimental_data"}], "paper_keywords": [""], "paper_abstract": "Next generation malware will by be characterized by the intense use of polymorphic and metamorphic techniques aimed at circumventing the current malware detectors, based on pattern matching. In order to deal with this new kind of threat, novel techniques have to be devised for the realization of malware detectors. Recent papers started to address such an issue and this paper represents a further contribution in such a field. More precisely in this paper we propose a strategy for the detection of metamorphic malicious code inside a program P based on the comparison of the control flow graphs of P against the set of control flow graphs of known malware. We also provide experimental data supporting the validity of our strategy.", "paper_title": "Detecting self-mutating malware using control-flow graph matching", "paper_id": "WOS:000239520700008"}