{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_randomized_algorithm"}, {"score": 0.004741845603430361, "phrase": "leader_election"}, {"score": 0.004669845451682529, "phrase": "large-scale_distributed_systems"}, {"score": 0.004392565073466714, "phrase": "message_complexity"}, {"score": 0.0041001740903338834, "phrase": "total_processes"}, {"score": 0.0035722806911457545, "phrase": "high_probabilistic_guarantees"}, {"score": 0.0034118234596993836, "phrase": "unique_leader"}, {"score": 0.0029951555610569225, "phrase": "main_novelty"}, {"score": 0.00283870598459543, "phrase": "first_phase"}, {"score": 0.002731971103291716, "phrase": "contending_processes"}, {"score": 0.002629238854352447, "phrase": "controlled_manner"}, {"score": 0.0025892330566358503, "phrase": "probabilistic_quorums"}, {"score": 0.00241658945942583, "phrase": "second_phase"}, {"score": 0.002255431275670053, "phrase": "synchronous_version"}, {"score": 0.0021049977753042253, "phrase": "asynchronous_version"}], "paper_keywords": [""], "paper_abstract": "We present an efficient randomized algorithm for leader election in large-scale distributed systems. The proposed algorithm is optimal in message complexity (O(n) for a set of n total processes), has round complexity logarithmic in the number of processes in the system, and provides high probabilistic guarantees on the election of a unique leader. The algorithm relies on a balls and bins abstraction and works in two phases. The main novelty of the work is in the first phase where the number of contending processes is reduced in a controlled manner. Probabilistic quorums are used to determine a winner in the second phase. We discuss, in detail, the synchronous version of the algorithm, provide extensions to an asynchronous version and examine the impact of failures.", "paper_title": "Randomized leader election", "paper_id": "WOS:000245169700004"}