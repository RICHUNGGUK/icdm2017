{"auto_keywords": [{"score": 0.004667149874736771, "phrase": "new_computing_platforms_results"}, {"score": 0.004523865550323285, "phrase": "parallel_jobs"}, {"score": 0.004250302819248558, "phrase": "direct_control"}, {"score": 0.004184526032558792, "phrase": "whole_system"}, {"score": 0.003993216345115755, "phrase": "classical_scheduling"}, {"score": 0.0039519004610213595, "phrase": "locality_constraints"}, {"score": 0.0037908515763223107, "phrase": "distributed_computing_systems"}, {"score": 0.0035245918797629804, "phrase": "execution_times"}, {"score": 0.00339853518227171, "phrase": "global_centralized_mechanism"}, {"score": 0.0033285306462537884, "phrase": "collaborative_solution"}, {"score": 0.0032599633778910516, "phrase": "global_performance"}, {"score": 0.0031597433845085092, "phrase": "organizations'_selfish_objectives"}, {"score": 0.0031107911390188055, "phrase": "proposed_algorithm"}, {"score": 0.003015143226706584, "phrase": "approximation_ratio"}, {"score": 0.0029224275921964724, "phrase": "global_optimal_makespan"}, {"score": 0.002127046102734894, "phrase": "last_algorithm"}, {"score": 0.0021049977753042253, "phrase": "typical_instances"}], "paper_keywords": ["Scheduling", " cooperation", " hierarchical systems"], "paper_abstract": "The distributed nature of new computing platforms results in the problem of scheduling parallel jobs produced by several independent organizations that have each their own rules. They have no direct control over the whole system; thus, it is necessary to revisit classical scheduling with locality constraints. In this work, we consider distributed computing systems in which each organization has its own resources. Each organization aims at minimizing the execution times of its own jobs. We introduce a global centralized mechanism for designing a collaborative solution that improves the global performance of the system while respecting organizations' selfish objectives. The proposed algorithm is proved to have an approximation ratio equal to 3 over the global optimal makespan and this bound is shown to be asymptotically tight (when the number of organizations is large). Several variants of this problem are also studied. Then, we derive another algorithm that improves in practice these solutions by further balancing the schedules. Finally, we provide some experiments based on simulations that demonstrate a very good efficiency of this last algorithm on typical instances.", "paper_title": "Approximation Algorithms for the Multiorganization Scheduling Problem", "paper_id": "WOS:000295163500014"}