{"auto_keywords": [{"score": 0.03495374533668367, "phrase": "reusable_assets"}, {"score": 0.00481495049065317, "phrase": "software_product_line_configuration"}, {"score": 0.004562362497952548, "phrase": "software_product_lines"}, {"score": 0.004322967486451877, "phrase": "product's_intended_functionalities"}, {"score": 0.004052148727852149, "phrase": "appropriate_set"}, {"score": 0.003521961918342562, "phrase": "modeling_tools"}, {"score": 0.0034220655476652683, "phrase": "definition_process"}, {"score": 0.00333697550984782, "phrase": "selection_process"}, {"score": 0.003230665474330377, "phrase": "model-driven_strategy"}, {"score": 0.003161674440750158, "phrase": "critical_points"}, {"score": 0.0030830390264125923, "phrase": "spl_architecture"}, {"score": 0.002952745241052452, "phrase": "product's_functional_and_quality_requirements"}, {"score": 0.0028689475587958917, "phrase": "different_real_configuration_and_derivation_scenarios"}, {"score": 0.0025476254812544135, "phrase": "unassisted_analysis_selection"}, {"score": 0.002370625627299064, "phrase": "learning_curve"}, {"score": 0.0023451553255837317, "phrase": "proposed_tools"}, {"score": 0.002245975340642921, "phrase": "software_architect's_decision"}, {"score": 0.002190064650401852, "phrase": "reusable_components"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Software architecture", " Model driven", " software product lines", " Variability management", " Quality evaluation", " Sensitivity points", " Domain specific modeling"], "paper_abstract": "Context: During the definition of software product lines (SPLs) it is necessary to choose the components that appropriately fulfil a product's intended functionalities, including its quality requirements (i.e., security, performance, scalability). The selection of the appropriate set of assets from many possible combinations is usually done manually, turning this process into a complex, time-consuming, and error-prone task. Objective: Our main objective is to determine whether, with the use of modeling tools, we can simplify and automate the definition process of a SPL, improving the selection process of reusable assets. Method: We developed a model-driven strategy based on the identification of critical points (sensitivity points) inside the SPL architecture. This strategy automatically selects the components that appropriately match the product's functional and quality requirements. We validated our approach experimenting with different real configuration and derivation scenarios in a mobile healthcare SPL where we have worked during the last three years. Results: Through our SPL experiment, we established that our approach improved in nearly 98% the selection of reusable assets when compared with the unassisted analysis selection. However, using our approach there is an increment in the time required for the configuration corresponding to the learning curve of the proposed tools. Conclusion: We can conclude that our domain-specific modeling approach significantly improves the software architect's decision making when selecting the most suitable combinations of reusable components in the context of a SPL. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Improving software product line configuration: A quality attribute-driven approach", "paper_id": "WOS:000315369200005"}