{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "big_data_stream_computing_environments"}, {"score": 0.03886698645129167, "phrase": "data_stream_graph"}, {"score": 0.019172329681749797, "phrase": "response_time"}, {"score": 0.012646090212320021, "phrase": "energy_efficiency"}, {"score": 0.010452184716679124, "phrase": "high_energy_efficiency"}, {"score": 0.010372983229429906, "phrase": "low_response_time"}, {"score": 0.008806838009141803, "phrase": "energy_consumption"}, {"score": 0.00782543222650707, "phrase": "critical_path"}, {"score": 0.004529093447865156, "phrase": "energy-efficient_resource_scheduling"}, {"score": 0.0043258453436258405, "phrase": "real-time_and_energy-efficient_resource_scheduling"}, {"score": 0.00402245126752142, "phrase": "mathematical_relationship"}, {"score": 0.003916098498242888, "phrase": "resource_utilization"}, {"score": 0.003613556291453534, "phrase": "distributed_stream_computing_theories"}, {"score": 0.003347105144425849, "phrase": "resource_allocation_scheme"}, {"score": 0.0031360786664165093, "phrase": "energy-efficient_heuristic"}, {"score": 0.0031002400518251936, "phrase": "critical_path_scheduling_mechanism"}, {"score": 0.0030530895634491343, "phrase": "architectural_requirements"}, {"score": 0.002960922610176301, "phrase": "scheduling_mechanism"}, {"score": 0.00290473242917264, "phrase": "critical_vertices"}, {"score": 0.002680114113899346, "phrase": "non-critical_vertices"}, {"score": 0.002649472341607234, "phrase": "non-critical_path"}, {"score": 0.002325689073229477, "phrase": "big_data_stream_computing_system"}, {"score": 0.0022815262950738814, "phrase": "average_response_time"}, {"score": 0.0022296340517805125, "phrase": "elegant_trade-off"}, {"score": 0.0022125996721544514, "phrase": "increased_energy_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Big data", " Critical path", " Directed acyclic graph", " Energy efficiency", " Real time", " Stream computing"], "paper_abstract": "To achieve high energy efficiency and low response time in big data stream computing environments, it is required to model an energy-efficient resource scheduling and optimization framework. In this paper, we propose a real-time and energy-efficient resource scheduling and optimization framework, termed the Re-Stream. Firstly, the Re-Stream profiles a mathematical relationship among energy consumption, response time, and resource utilization, and obtains the conditions to meet high energy efficiency and low response time. Secondly, a data stream graph is modeled by using the distributed stream computing theories, which identifies the critical path within the data stream graph. Such a methodology aids in calculating the energy consumption of a resource allocation scheme for a data stream graph at a given data stream speed. Thirdly, the Re-Stream allocates tasks by utilizing an energy-efficient heuristic and a critical path scheduling mechanism subject to the architectural requirements. This is done to optimize the scheduling mechanism online by reallocating the critical vertices on the critical path of a data stream graph to minimize the response time and system fluctuations. Moreover, the Re-Stream consolidates the non-critical vertices on the non-critical path so as to improve energy efficiency. We evaluate the Re-Stream to measure energy efficiency and response time for big data stream computing environments. The experimental results demonstrate that the Re-Stream has the ability to improve energy efficiency of a big data stream computing system, and to reduce average response time. The Re-Stream provides an elegant trade-off between increased energy efficiency and decreased response time effectively within big data stream computing environments. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Re-Stream: Real-time and energy-efficient resource scheduling in big data stream computing environments", "paper_id": "WOS:000357707700007"}