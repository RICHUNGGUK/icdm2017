{"auto_keywords": [{"score": 0.04041381287839922, "phrase": "sma"}, {"score": 0.00481495049065317, "phrase": "sma_-_the_smyle"}, {"score": 0.004592016716046632, "phrase": "model-based_software_development_life-cycle_model"}, {"score": 0.004320421465896323, "phrase": "smyle_smyle"}, {"score": 0.004233492114255375, "phrase": "dedicated_can_lung_procedure"}, {"score": 0.0040373708328770306, "phrase": "design_models"}, {"score": 0.0036470559917231218, "phrase": "so-called_scenario_patterns"}, {"score": 0.0035016702571862165, "phrase": "clearly_desired_or_unwanted_behavior"}, {"score": 0.003249966782844541, "phrase": "interesting_scenarios"}, {"score": 0.0031845067058084583, "phrase": "design_effort"}, {"score": 0.0030783143919343972, "phrase": "learning_phase"}, {"score": 0.002955533639862811, "phrase": "effective_analysis_phase"}, {"score": 0.0028569549040495163, "phrase": "design_flaws"}, {"score": 0.002799388549023265, "phrase": "early_design_stage"}, {"score": 0.0027616550517346066, "phrase": "learning_techniques"}, {"score": 0.0025284524249379265, "phrase": "evolving_requirements"}, {"score": 0.002427549902743566, "phrase": "rather_inexpensive_redesign"}, {"score": 0.00237861522566195, "phrase": "anomalous_system_behavior"}, {"score": 0.0021049977753042253, "phrase": "first_practical_experiences"}], "paper_keywords": ["Requirements elicitation design model", " learning", " software engineering lifecycle", " Message Sequence Charts", " UML"], "paper_abstract": "This paper introduces the model-based software development life-cycle model SMA - the Smyle Modeling Approach - which is centered mound Smyle Smyle is a dedicated can lung procedure to support engineers to interactively obtain design models from requirements, characterized as either being desired (positive) or unwanted (negative) system behavior Within SMA, the beaming approach is complemented by so-called scenario patterns where the engineer can specify clearly desired or unwanted behavior This way, use! interaction is reduced to the interesting scenarios limiting the design effort considerably In SMA the learning phase is further complemented by an effective analysis phase that allows for detecting design flaws at an early design stage Using learning techniques allows us to gradually develop and refine requirements. maul ally supporting evolving requirements, and allows lot a rather inexpensive redesign in case anomalous system behavior is detected during analysis, testing, or maintenance This paper describes the approach and reports on first practical experiences", "paper_title": "SMA - THE SMYLE MODELING APPROACH", "paper_id": "WOS:000276828100004"}