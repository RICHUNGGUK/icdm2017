{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "heterogeneous_applications"}, {"score": 0.004543708337879809, "phrase": "minimalistic_specification_language"}, {"score": 0.004445961412092278, "phrase": "heterogeneous_software_applications"}, {"score": 0.0033262524445013303, "phrase": "different_levels"}, {"score": 0.003048782877550259, "phrase": "network_distribution"}, {"score": 0.0030048355421601705, "phrase": "real_time"}, {"score": 0.002897710777957041, "phrase": "h_specification"}, {"score": 0.0027741761880779535, "phrase": "heterogeneous_application"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Component-Based Software Engineering", " Software architectures", " Heterogeneous software applications"], "paper_abstract": "This paper presents H, a minimalistic specification language for designing heterogeneous software applications, particularly in the realms of robotics and industria, which takes advantage of a Component-Based Software Engineering (CBSE) approach. H copes with some of the most outstanding characteristics of these systems, like diversity at different levels (hardware platforms, programming languages, programmer skills), network distribution, real time and fault-tolerance. The H specification covers the life-cycle of any heterogeneous application. Its development system offers to the designer and/or builder a set of tools for specifying modules, generating code semiautomatically, debugging, maintenance, and a real time analysis of the system. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "H: A component-based specification language for heterogeneous applications", "paper_id": "WOS:000311525100003"}