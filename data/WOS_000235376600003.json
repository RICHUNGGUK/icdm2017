{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "component-based_application_frameworks"}, {"score": 0.004710489616113198, "phrase": "widely_used_architecture"}, {"score": 0.004541377162789232, "phrase": "software_systems"}, {"score": 0.004442824994700736, "phrase": "component-based_application_framework"}, {"score": 0.004099340908974491, "phrase": "component_integration"}, {"score": 0.0034642599795044445, "phrase": "integrated_components"}, {"score": 0.0033890026927890058, "phrase": "specific_needs"}, {"score": 0.0030587884803931964, "phrase": "architectural_pattern"}, {"score": 0.002905914725757534, "phrase": "appropriate_mix"}, {"score": 0.002863652837038965, "phrase": "fixed_and_flexible_elements"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["framework", " architectural pattern", " component backbone", " electronic design automation", " simulation", " visualization", " industrial control"], "paper_abstract": "A widely used architecture for the development of software systems is the component-based application framework. Such frameworks offer two mechanisms. First, they provide component integration and interoperability services which make it possible to extend the framework with various third-party components. Second, they provide mechanisms to customize the integrated components to the specific needs of applications to be built using the framework. This paper describes an architectural pattern for designing such frameworks so that the appropriate mix of fixed and flexible elements can be integrated into architectures that maximize scalability and extensibility. The pattern is illustrated by frameworks developed for three different application domains: electronic design automation, scientific visualization and numerical simulation, and industrial control systems. Copyright (c) 2005 John Wiley & Sons, Ltd.", "paper_title": "An architectural pattern for designing component-based application frameworks", "paper_id": "WOS:000235376600003"}