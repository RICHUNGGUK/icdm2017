{"auto_keywords": [{"score": 0.04205516846635205, "phrase": "android"}, {"score": 0.00481495049065317, "phrase": "static_analysis_for_extracting_permission_checks"}, {"score": 0.004721893473387288, "phrase": "large_scale_framework"}, {"score": 0.004511663118269957, "phrase": "analyzing_android"}, {"score": 0.004424441580112395, "phrase": "common_security_architecture"}, {"score": 0.004172722575842674, "phrase": "permission_checks"}, {"score": 0.0033439771810057717, "phrase": "malicious_usage"}, {"score": 0.0032157824854214313, "phrase": "code_injection"}, {"score": 0.0030924870122337905, "phrase": "permission-based_framework"}, {"score": 0.0030326180561817497, "phrase": "precise_mapping"}, {"score": 0.0029933487820771217, "phrase": "api_methods"}, {"score": 0.002679386232765167, "phrase": "naive_static_analysis"}, {"score": 0.002576603426735759, "phrase": "off-the-shelf_components"}, {"score": 0.002413964586947992, "phrase": "advanced_class-hierarchy"}, {"score": 0.0023826870912207303, "phrase": "field-sensitive_set"}, {"score": 0.0022468671200629024, "phrase": "static_analyses"}, {"score": 0.002160640052461594, "phrase": "android_framework"}, {"score": 0.0021049977753042253, "phrase": "novel_domain_specific_optimizations"}], "paper_keywords": ["Large scale framework", " permissions", " call-graph", " Android", " security", " Soot", " Java", " static analysis"], "paper_abstract": "A common security architecture is based on the protection of certain resources by permission checks (used e.g., in Android and Blackberry). It has some limitations, for instance, when applications are granted more permissions than they actually need, which facilitates all kinds of malicious usage (e. g., through code injection). The analysis of permission-based framework requires a precise mapping between API methods of the framework and the permissions they require. In this paper, we show that naive static analysis fails miserably when applied with off-the-shelf components on the Android framework. We then present an advanced class-hierarchy and field-sensitive set of analyses to extract this mapping. Those static analyses are capable of analyzing the Android framework. They use novel domain specific optimizations dedicated to Android.", "paper_title": "Static Analysis for Extracting Permission Checks of a Large Scale Framework: The Challenges and Solutions for Analyzing Android", "paper_id": "WOS:000338030200005"}