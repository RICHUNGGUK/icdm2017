{"auto_keywords": [{"score": 0.03773458804053226, "phrase": "android"}, {"score": 0.004760017604908536, "phrase": "security_model"}, {"score": 0.0047057084749407485, "phrase": "android_os"}, {"score": 0.004616560363089716, "phrase": "effective_combination"}, {"score": 0.004529093447865156, "phrase": "well-known_security_mechanisms"}, {"score": 0.004195512777421314, "phrase": "linux"}, {"score": 0.004053362743156545, "phrase": "security_mechanism"}, {"score": 0.003797978200741566, "phrase": "unexpected_security_flaws"}, {"score": 0.003613556291453534, "phrase": "severe_vulnerability"}, {"score": 0.003531474887552889, "phrase": "application_launching_flow"}, {"score": 0.003424916005912503, "phrase": "security_flaw"}, {"score": 0.0033857878144822906, "phrase": "kernel-level_socket"}, {"score": 0.0031360786664165093, "phrase": "malicious_application"}, {"score": 0.0030414140732789186, "phrase": "-service_attack"}, {"score": 0.0029951555610569225, "phrase": "android_devices"}, {"score": 0.002629238854352447, "phrase": "official_release"}, {"score": 0.002370704665003412, "phrase": "end_user"}, {"score": 0.002290291401956985, "phrase": "whole_set"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Android OS", " Android security", " Android security framework", " Zygote vulnerability", " Denial-of-Service"], "paper_abstract": "The security model of the Android OS is based on the effective combination of a number of well-known security mechanisms (e.g. statically defined permissions for applications, the isolation offered by the Dalvik Virtual Machine, and the well-known Linux discretionary access control model). Although each security mechanism has been extensively tested and proved to be effective in isolation, their combination may suffer from unexpected security flaws. We show that this is actually the case by presenting a severe vulnerability in Android related to the application launching flow. This vulnerability is based on a security flaw affecting a kernel-level socket (namely, the Zygote socket). We also present an exploit of the vulnerability that allows a malicious application to mount a severe Denial-of-Service attack that makes the Android devices become totally unresponsive. Besides explaining the vulnerability (which affects all versions of Android up to version 4.0.3) we propose two fixes. One of the two fixes has been adopted in the official release of Android, starting with version 4.1. We empirically assess the impact of the vulnerability as well as the efficacy of the countermeasures on the end user. We conclude by extending our security analysis to the whole set of sockets, showing that other sockets do not suffer from the same vulnerability as the Zygote one. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Breaking and fixing the Android Launching Flow", "paper_id": "WOS:000329078900008"}