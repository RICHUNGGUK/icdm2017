{"auto_keywords": [{"score": 0.004695900553353526, "phrase": "lalr_parsing_method"}, {"score": 0.004618166136069052, "phrase": "deremer"}, {"score": 0.004283913685201902, "phrase": "lalr_parser_generators"}, {"score": 0.004074574278425223, "phrase": "old_fashion"}, {"score": 0.004007083686875716, "phrase": "primitive_manner"}, {"score": 0.0037795163893761027, "phrase": "huge_amount"}, {"score": 0.0037168948492715386, "phrase": "textual_and_low-level_data"}, {"score": 0.0035947360742084253, "phrase": "single_log_file"}, {"score": 0.0032246835734680377, "phrase": "lalr_conflict_removal"}, {"score": 0.003066945490483524, "phrase": "laborious_task"}, {"score": 0.002194929830604162, "phrase": "virtually_any_syntax_specification"}, {"score": 0.0021049977753042253, "phrase": "specification_language"}], "paper_keywords": ["lalr parsing", " conflicts", " methodology"], "paper_abstract": "Despite all the advances brought by LALR parsing method by DeRemer in the late 60's, conflicts reported by LALR parser generators are still removed in an old fashion and primitive manner, based on analysis of a huge amount of textual and low-level data stored on a single log file. For the purpose of minimizing the effort and time consumed in LALR conflict removal, which is definitely a laborious task, a methodology is proposed, along with the set of operations necessary to its realization. We also present a tool and the ideas behind it to support the methodology, plus its plugin facility, which permits the interpretation of virtually any syntax specification, regardless of the specification language used.", "paper_title": "A methodology for removing LALR(k) conflicts", "paper_id": "WOS:000249304700005"}