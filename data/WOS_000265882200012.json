{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "facility_location_problem"}, {"score": 0.004769958800452922, "phrase": "service_capacities"}, {"score": 0.0046593017130868, "phrase": "first_constant-factor_approximation_algorithms"}, {"score": 0.004487541157100498, "phrase": "metric_space"}, {"score": 0.0039716833701918365, "phrase": "facility_opening_cost"}, {"score": 0.003807242767474929, "phrase": "capacity_u"}, {"score": 0.003649585593445665, "phrase": "partition_d"}, {"score": 0.0033852759378055013, "phrase": "steiner"}, {"score": 0.0027395968397212053, "phrase": "vlsi_design"}, {"score": 0.002675914969626753, "phrase": "bin-packing_problem"}, {"score": 0.0026384167183586015, "phrase": "steiner_tree_problem"}, {"score": 0.0025409639091476363, "phrase": "location_problems"}, {"score": 0.0024818877663889813, "phrase": "additional_feature"}, {"score": 0.0024586427394152196, "phrase": "upper_bounds"}, {"score": 0.0024241817763927163, "phrase": "service_cost"}, {"score": 0.0022589720760078274, "phrase": "polynomial_time"}, {"score": 0.0022064376000055764, "phrase": "cubic_time"}, {"score": 0.0021049977753042253, "phrase": "minimum_spanning_tree"}], "paper_keywords": ["Approximation algorithm", " facility location", " network design", " VLSI design"], "paper_abstract": "We present the first constant-factor approximation algorithms for the following problem. Given a metric space (V, c), a finite set D subset of V of terminals/customers with demands d : D -> R+, a facility opening cost f is an element of R+ and a capacity u is an element of R+, find a partition D = D-1(boolean OR) over dot ... (boolean OR) over dotD(k) and Steiner trees T-i for D-i (i = 1,..., k) with c(E(T-i))+ d(D-i) <= u for i = 1,..., k such that Sigma(k)(i=1) c(E(T-i))+ kf is minimum. This problem arises in VLSI design. It generalizes the bin-packing problem and the Steiner tree problem. In contrast to other network design and facility location problems, it has the additional feature of upper bounds on the service cost that each facility can handle. Among other results, we obtain a 4.5-approximation in polynomial time, a 4.5-approximation in cubic time, and a 5-approximation as fast as computing a minimum spanning tree on (D, c).", "paper_title": "Approximation Algorithms for a Facility Location Problem with Service Capacities", "paper_id": "WOS:000265882200012"}