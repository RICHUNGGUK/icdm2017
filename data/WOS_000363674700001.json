{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_availability"}, {"score": 0.04885877600670675, "phrase": "decentralized_storage_system"}, {"score": 0.03363896917055258, "phrase": "highly_available_agents"}, {"score": 0.004773692073488661, "phrase": "decentralized_storage_systems"}, {"score": 0.004592340708764929, "phrase": "other's_data"}, {"score": 0.004456044928556639, "phrase": "organizationally_centralized_solutions"}, {"score": 0.004379977556546879, "phrase": "cloud_storage"}, {"score": 0.004141575435071002, "phrase": "smaller_monetary_costs"}, {"score": 0.004035946043145475, "phrase": "reciprocal_storage_contracts"}, {"score": 0.003799796252156605, "phrase": "inefficient_contracts"}, {"score": 0.003751011827704279, "phrase": "new_contracts"}, {"score": 0.003501175642882274, "phrase": "participating_agents'_availability"}, {"score": 0.003426556090707852, "phrase": "straightforward_system"}, {"score": 0.003382547312072468, "phrase": "agents'_matching"}, {"score": 0.00295950473406239, "phrase": "weakly_available_newcomers"}, {"score": 0.0026116610153271943, "phrase": "mixed_solution"}, {"score": 0.0024799423362011582, "phrase": "replication_space"}, {"score": 0.002375253757224999, "phrase": "worst-off_agents"}, {"score": 0.0021232402128269906, "phrase": "acceptable_data_availability"}, {"score": 0.0021049977753042253, "phrase": "weakly-available_agents"}], "paper_keywords": ["Algorithms", " Reliability", " Theory", " Game theory", " mechanism design", " distributed storage"], "paper_abstract": "In a decentralized storage system, agents replicate each other's data to increase availability. Compared to organizationally centralized solutions, such as cloud storage, a decentralized storage system requires less trust in the provider and may result in smaller monetary costs. Our system is based on reciprocal storage contracts that allow the agents to adopt to changes in their replication partners' availability (by dropping inefficient contracts and forming new contracts with other partners). The data availability provided by the system is a function of the participating agents' availability. However, a straightforward system in which agents' matching is decentralized uses the given agent availability inefficiently. As agents are autonomous, the highly available agents form cliques replicating data between each other, which makes the system too hostile for the weakly available newcomers. In contrast, a centralized, equitable matching is not incentive compatible: it does not reward users for keeping their software running. We solve this dilemma by a mixed solution: an \"adoption\" mechanism in which highly available agents donate some replication space, which in turn is used to help the worst-off agents. We show that the adoption motivates agents to increase their availability (is incentive-compatible), but also that it is sufficient for acceptable data availability for weakly-available agents.", "paper_title": "Game-Theoretic Mechanisms to Increase Data Availability in Decentralized Storage Systems", "paper_id": "WOS:000363674700001"}