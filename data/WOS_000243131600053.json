{"auto_keywords": [{"score": 0.03613688056496375, "phrase": "complex_mappings"}, {"score": 0.02784084098214266, "phrase": "correspondence_models"}, {"score": 0.015719716506582538, "phrase": "bug_tracking"}, {"score": 0.012933623389663388, "phrase": "semantic_heterogeneities"}, {"score": 0.010018112324212382, "phrase": "executable_transformations"}, {"score": 0.008790683461472593, "phrase": "different_kinds"}, {"score": 0.00471071771178029, "phrase": "heterogeneous_data_sources"}, {"score": 0.004558564684763264, "phrase": "data_integration_applications"}, {"score": 0.004435514622798228, "phrase": "increasing_number"}, {"score": 0.004130842663662047, "phrase": "version_control"}, {"score": 0.0037226570791514184, "phrase": "tools_metadata"}, {"score": 0.0030229485340586473, "phrase": "arithmetic_expressions"}, {"score": 0.0027239390917424898, "phrase": "novel_approach"}, {"score": 0.0025786066704445304, "phrase": "main_advantage"}, {"score": 0.002522662955545598, "phrase": "high_level_specifications"}, {"score": 0.002128220632893247, "phrase": "real_world_scenario"}, {"score": 0.0021049977753042253, "phrase": "bug_tracking_tools"}], "paper_keywords": ["complex mappings", " semantic heterogeneities", " tool interoperability", " MDE (Model Driven Engineering)"], "paper_abstract": "Interoperability of heterogeneous data sources has been extensively studied in data integration applications. However, the increasing number of tools that produce data with very different formats, such as bug tracking, version control, etc., produces many different kinds of semantic heterogeneities. These semantic heterogeneities can be expressed as mappings between the tools metadata which describe the data manipulated by the tools. However, the semantics of complex mappings (n:1, 1:m and n:m relationships) is hard to support. These mappings are usually directly coded in executable transformations using arithmetic expressions. And there is no mechanism to create and reuse complex mappings. In this paper we propose a novel approach to capture different kinds of complex mappings using correspondence models. The main advantage is to use high level specifications for the correspondence models that enable representing different kinds of mappings. The correspondence models may be used to automatically produce executable transformations. To validate our approach, we provide an experimentation with a real world scenario using bug tracking tools.", "paper_title": "Model-driven tool interoperability: An application in bug tracking", "paper_id": "WOS:000243131600053"}