{"auto_keywords": [{"score": 0.049100450513748305, "phrase": "load_balancing"}, {"score": 0.015719716506582538, "phrase": "sequential_tasks"}, {"score": 0.01555996713314101, "phrase": "grid_computing_environments"}, {"score": 0.004644014990871423, "phrase": "paramount_importance"}, {"score": 0.004596295252559861, "phrase": "grid_computing"}, {"score": 0.004123781267600542, "phrase": "corresponding_decisions"}, {"score": 0.004039423410198574, "phrase": "namely_averages-based_and_instantaneous_measures-based_classes"}, {"score": 0.003816197777388722, "phrase": "limited_performance_improvement"}, {"score": 0.003353521531649663, "phrase": "strong_points"}, {"score": 0.003168079471049896, "phrase": "load_balancing_problem"}, {"score": 0.0031032109441552287, "phrase": "hybrid_approach"}, {"score": 0.0028864239961184364, "phrase": "task_assignments"}, {"score": 0.002769395841379498, "phrase": "maximum_node_utilisation"}, {"score": 0.0027267406923803367, "phrase": "well-balanced_load"}, {"score": 0.0024842242921857705, "phrase": "carefully_designed_genetic_algorithm"}, {"score": 0.002286781334850213, "phrase": "simulation_results"}, {"score": 0.0022053994402287925, "phrase": "better_load"}], "paper_keywords": ["Load balancing", " Scheduling", " Grid computing", " Genetic algorithm"], "paper_abstract": "Load balancing is of paramount importance in grid Computing, Generally, load balancing can be categorised into two classes of activity based on the type of information on which the corresponding decisions are made, namely averages-based and instantaneous measures-based classes. Either class has certain flaws which confine themselves to limited performance improvement when being employed separately. It is therefore advantageous to combine both to form a hybrid one in order to make most of the strong points of each. in this paper, we address the load balancing problem by presenting a hybrid approach to the load balancing of sequential tasks under grid computing environments. Our main objective is to arrive at task assignments that could achieve minimum execution time, maximum node utilisation and a well-balanced load across all the nodes involved in a grid. A first-come-first-served and a carefully designed genetic algorithm are selected as representatives of both classes to work together to accomplish our goal. The simulation results show that Our algorithm can achieve a better load balancing performance as compared to its 'pure' counterparts. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A hybrid load balancing strategy of sequential tasks for grid computing environments", "paper_id": "WOS:000267736000001"}