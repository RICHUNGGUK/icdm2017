{"auto_keywords": [{"score": 0.029259508445911967, "phrase": "clr"}, {"score": 0.00481495049065317, "phrase": "aspect-oriented_programming"}, {"score": 0.004207230913063179, "phrase": ".net_platform"}, {"score": 0.0038668462001710314, "phrase": "robust_and_user-friendly_aop_tool"}, {"score": 0.003738502710504415, "phrase": "java-based_aspectj."}, {"score": 0.0036347979916389467, "phrase": "basic_infrastructure"}, {"score": 0.003266201217790818, "phrase": "classification_schema"}, {"score": 0.00293487292076612, "phrase": "different_classes"}, {"score": 0.0024926348205500715, "phrase": "typical_use_cases"}, {"score": 0.002450864311898833, "phrase": "resulting_aop_tools"}, {"score": 0.0023560952790080943, "phrase": "corresponding_weaver"}], "paper_keywords": [""], "paper_abstract": "Aspect-oriented programming (AOP), now practically a consolidated academic discipline, has yet to build more solid industrial foundations, especially in the realms of the .NET platform. It's believed that this situation is caused by the lack of a robust and user-friendly AOP tool for .NET comparable with the Java-based AspectJ. This work investigates the basic infrastructure required for building such a tool: aspect-oriented weaving with the common language runtime (CLR) environment. In this regard, a classification schema is built, analysing the attributes a hypothetical aspect weaver for .NET might have. It assesses the different classes of weavers that can be built on top of the CLR today and investigates what extensions to the platform would be needed in order to enable more sophisticated weaving technologies. Some typical use cases for the resulting AOP tools, and classify what attributes a corresponding weaver would need to have in order to fulfil these requirements. Finally, two existing aspect weaver implementations in terms of these very same attributes are analysed.", "paper_title": "Aspect-oriented weaving and the .NET common language runtime", "paper_id": "WOS:000252797300004"}