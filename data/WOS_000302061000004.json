{"auto_keywords": [{"score": 0.0255714228958112, "phrase": "slp"}, {"score": 0.00481495049065317, "phrase": "finding_characteristic_substrings"}, {"score": 0.004748556604045108, "phrase": "compressed_texts._text_mining"}, {"score": 0.004683073921949839, "phrase": "large_scaled_data"}, {"score": 0.004586531354697466, "phrase": "great_importance"}, {"score": 0.004523272849033429, "phrase": "computer_science"}, {"score": 0.004278807087784626, "phrase": "fundamental_problems"}, {"score": 0.004219774794569897, "phrase": "text_mining"}, {"score": 0.004161553532799662, "phrase": "compressed_strings"}, {"score": 0.003991646181215783, "phrase": "longest_repeating_substring"}, {"score": 0.0031734538599865973, "phrase": "compressed_text"}, {"score": 0.003129623571496151, "phrase": "compressed_pattern"}, {"score": 0.002980916123365584, "phrase": "equivalence_class"}, {"score": 0.0029193609786176632, "phrase": "pattern_w.r.t"}, {"score": 0.0025578967205807843, "phrase": "input_compressed_strings"}, {"score": 0.002505054869094183, "phrase": "compression_scheme"}, {"score": 0.002436289099444074, "phrase": "straight_line_program"}, {"score": 0.002336655334451464, "phrase": "exponential_compression"}, {"score": 0.0021795515361987144, "phrase": "existing_algorithms"}], "paper_keywords": ["Text compression", " straight line programs", " string data mining", " polynomial-time algorithms"], "paper_abstract": "Text mining from large scaled data is of great importance in computer science. In this paper, we consider fundamental problems on text mining from compressed strings, i.e., computing a longest repeating substring, longest non-overlapping repeating substring, most frequent substring, and most frequent non-overlapping substring from a given compressed string. Also, we tackle the following novel problem: given a compressed text and compressed pattern, compute the representative of the equivalence class of the pattern w.r.t. the text. We present algorithms that solve the above problems in time polynomial in the size of input compressed strings. The compression scheme we consider is straight line program (SLP) which has exponential compression, and therefore our algorithms are more efficient than any existing algorithms that require decompression of given SLPs.", "paper_title": "FINDING CHARACTERISTIC SUBSTRINGS FROM COMPRESSED TEXTS", "paper_id": "WOS:000302061000004"}