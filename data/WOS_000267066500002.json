{"auto_keywords": [{"score": 0.03865446117957757, "phrase": "singular_values"}, {"score": 0.00481495049065317, "phrase": "singular_value_decomposition"}, {"score": 0.00426291045415427, "phrase": "conquer"}, {"score": 0.004153041453795458, "phrase": "twisted_factorization"}, {"score": 0.004010960493946656, "phrase": "bidiagonal_svd."}, {"score": 0.0035199624440843892, "phrase": "strong_clusters"}, {"score": 0.003399466007862412, "phrase": "singular_vector_computation"}, {"score": 0.0024842242921857705, "phrase": "largest_cluster"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Singular value decomposition", " Eigenvalue decomposition", " Divide and Conquer", " Twisted factorization", " High performance computing"], "paper_abstract": "An algorithm mainly consisting of a part of Divide and Conquer and the twisted factorization is proposed for bidiagonal SVD. The algorithm costs O(n(2))flops and is highly parallelizable when singular values are isolated. If strong clusters exist, the singular vector computation needs reorthgonalization. In such case, the cost of the algorithm increases to O(n(2) + nk(2)) flops and the parallelism may worsen depending on the distribution of singular values. Here k is the size of the largest cluster. The algorithm needs only O(n) working memory for every type of matrices. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A new algorithm for singular value decomposition and its parallelization", "paper_id": "WOS:000267066500002"}