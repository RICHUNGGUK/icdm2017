{"auto_keywords": [{"score": 0.03644451033122438, "phrase": "configuration_context"}, {"score": 0.030529977007677515, "phrase": "proposed_method"}, {"score": 0.008928849853190889, "phrase": "cgra"}, {"score": 0.00481495049065317, "phrase": "configuration_context_reduction_for_coarse-grained_reconfigurable_architecture"}, {"score": 0.004760394308239882, "phrase": "coarse-grained_reconfigurable_architecture"}, {"score": 0.004548253531664032, "phrase": "application-specific_integrated_circuits"}, {"score": 0.004345525254560329, "phrase": "general-purpose_processors"}, {"score": 0.0041517954514423625, "phrase": "promising_solution"}, {"score": 0.004104722208522451, "phrase": "embedded_systems"}, {"score": 0.00401216440036853, "phrase": "increasing_complexity"}, {"score": 0.003966667994579941, "phrase": "reconfigurable_resources"}, {"score": 0.0037682108720193956, "phrase": "reconfiguration_cost"}, {"score": 0.003683213029483699, "phrase": "performance_bottleneck"}, {"score": 0.0036207206487324506, "phrase": "major_reconfiguration_cost"}, {"score": 0.003419943984098415, "phrase": "main_memory"}, {"score": 0.0033811403330431897, "phrase": "context_buffer"}, {"score": 0.0032860401904845522, "phrase": "overall_performance"}, {"score": 0.0029483516334882862, "phrase": "configuration_context_reduction_method"}, {"score": 0.0029148831519944358, "phrase": "cgra."}, {"score": 0.0028328599839713866, "phrase": "structure_correlation"}, {"score": 0.0028006988338192375, "phrase": "computation_tasks"}, {"score": 0.0026003455833291124, "phrase": "experimental_results"}, {"score": 0.0024700776739384977, "phrase": "configuration_context_size"}, {"score": 0.002216054733102974, "phrase": "architectural_feature"}, {"score": 0.0021049977753042253, "phrase": "arbitrary_architecture"}], "paper_keywords": ["reconfigurable computing", " coarse-grained reconfigurable architecture (CGRA)", " configuration context", " structure-correlation elimination"], "paper_abstract": "Coarse-grained reconfigurable architecture (CGRA) combines the performance of application-specific integrated circuits (ASICs) and the flexibility of general-purpose processors (GPPs), which is a promising solution for embedded systems. With the increasing complexity of reconfigurable resources (processing elements, routing cells, I/O blocks, etc.), the reconfiguration cost is becoming the performance bottleneck. The major reconfiguration cost comes from the frequent memory-read/write operations for transferring the configuration context from main memory to context buffer. To improve the overall performance, it is critical to reduce the amount of configuration context. In this paper, we propose a configuration context reduction method for CGRA. The proposed method exploits the structure correlation of computation tasks that are mapped onto CGRA and reduce the redundancies in configuration context. Experimental results show that the proposed method can averagely reduce the configuration context size up 10 71% and speed up the execution up to 68%. The proposed method does not depend on any architectural feature and can be applied to CGRA with an arbitrary architecture.", "paper_title": "Configuration Context Reduction for Coarse-Grained Reconfigurable Architecture", "paper_id": "WOS:000300471900006"}