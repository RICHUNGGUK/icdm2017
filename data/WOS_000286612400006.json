{"auto_keywords": [{"score": 0.0352477219827226, "phrase": "marmot"}, {"score": 0.011226209179237709, "phrase": "design_verification_approach"}, {"score": 0.00481495049065317, "phrase": "model-based_mu-controller_development"}, {"score": 0.004670722261414736, "phrase": "component-based_software_development"}, {"score": 0.004395040468458808, "phrase": "software_systems"}, {"score": 0.004306795240631196, "phrase": "recent_advances"}, {"score": 0.004263336444795021, "phrase": "quality_control_techniques"}, {"score": 0.004073113268289532, "phrase": "growing_complexity"}, {"score": 0.004032002950217453, "phrase": "embedded_software"}, {"score": 0.0038325685550319863, "phrase": "complex_interaction_behavior"}, {"score": 0.003793876828939456, "phrase": "unanticipated_quality_defects"}, {"score": 0.0036614948691735105, "phrase": "major_source"}, {"score": 0.0036245239349157236, "phrase": "system_failure"}, {"score": 0.0032251796659158696, "phrase": "-the_basic_building_blocks"}, {"score": 0.003019189898170698, "phrase": "high-level_reuse"}, {"score": 0.0029584874121320165, "phrase": "verification_complexity"}, {"score": 0.0029137604783116065, "phrase": "verification_problems"}, {"score": 0.002884317729022721, "phrase": "abstract_components"}, {"score": 0.002713788077665689, "phrase": "unanticipated_design_errors"}, {"score": 0.002672750634553146, "phrase": "early_stages"}, {"score": 0.0025663181430010686, "phrase": "marmot_methodology"}, {"score": 0.0023659694724243764, "phrase": "mu-controller-based_abstraction"}, {"score": 0.0023301793939902015, "phrase": "car_mirror_control_system"}, {"score": 0.0021049977753042253, "phrase": "development_process"}], "paper_keywords": ["Abstract component", " Model-driven development", " Design verification", " Embedded systems"], "paper_abstract": "Component-based software development is a promising approach for controlling the complexity and quality of software systems. Nevertheless, recent advances in quality control techniques do not seem to keep up with the growing complexity of embedded software; embedded systems often consist of dozens to hundreds of software/hardware components that exhibit complex interaction behavior. Unanticipated quality defects in a component can be a major source of system failure. To address this issue, this paper suggests a design verification approach integrated into the model-driven, component-based development methodology Marmot. The notion of abstract components-the basic building blocks of Marmot-helps to lift the level of abstraction, facilitates high-level reuse, and reduces verification complexity by localizing verification problems between abstract components before refinement and after refinement. This enables the identification of unanticipated design errors in the early stages of development. This work introduces the Marmot methodology, presents a design verification approach in Marmot, and demonstrates its application on the development of a mu-controller-based abstraction of a car mirror control system. An application on TinyOS shows that the approach helps to reuse models as well as their verification results in the development process.", "paper_title": "Design verification in model-based mu-controller development using an abstract component", "paper_id": "WOS:000286612400006"}