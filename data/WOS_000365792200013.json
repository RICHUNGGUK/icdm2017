{"auto_keywords": [{"score": 0.039688023443322194, "phrase": "xml_schema"}, {"score": 0.013396481765774364, "phrase": "xml_schemas"}, {"score": 0.003640183972131238, "phrase": "streaming_procedure"}, {"score": 0.003528730431045574, "phrase": "input_document"}, {"score": 0.0027512482368183596, "phrase": "repair_procedure"}, {"score": 0.0025059724686541263, "phrase": "decision_procedure"}, {"score": 0.0023546984428119864, "phrase": "automaton_model"}, {"score": 0.0021715812867126884, "phrase": "novel_notion"}, {"score": 0.0021049977753042253, "phrase": "pushdown_systems"}], "paper_keywords": ["Bounded repair", " Streaming repair", " DTD", " XML schema", " Top-down deterministic tree automaton"], "paper_abstract": "In this paper we consider the problem of repairing, that is, restoring validity of, documents with respect to XML schemas. We formalize this as the problem of determining, given an XML schema, whether or not a streaming procedure exists that transforms an input document so as to satisfy the XML schema, using a number of edits independent of the document. We show that this problem is decidable. In fact, we show the decidability of a more general problem, which allows the repair procedure to work on documents that are already known to satisfy another XML schema. The decision procedure relies on the analysis of the structure of an automaton model specifying the restriction and target XML schemas and reduces te problem to a novel notion of game played on pushdown systems associated with the schemas.", "paper_title": "Which XML Schemas are Streaming Bounded Repairable?", "paper_id": "WOS:000365792200013"}