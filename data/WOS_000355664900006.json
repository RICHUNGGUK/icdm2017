{"auto_keywords": [{"score": 0.04404291878285864, "phrase": "madhusudan"}, {"score": 0.04248119975231988, "phrase": "boolean_variables"}, {"score": 0.00481495049065317, "phrase": "structured_reactive_programs"}, {"score": 0.004763565662615503, "phrase": "deterministic_tree_automata"}, {"score": 0.004712726613162057, "phrase": "existing_approaches"}, {"score": 0.004539005582217309, "phrase": "reactive_systems"}, {"score": 0.004395185177346749, "phrase": "transition_systems"}, {"score": 0.004324985524216987, "phrase": "mealy_automata"}, {"score": 0.004165497627464024, "phrase": "structured_programs"}, {"score": 0.00409895142748329, "phrase": "finite_set"}, {"score": 0.003603327452846714, "phrase": "transition_system"}, {"score": 0.0033965836912510385, "phrase": "finite_trees"}, {"score": 0.0032888418378433037, "phrase": "\"correct\"_programs"}, {"score": 0.003034158379493625, "phrase": "wider_class"}, {"score": 0.002969628818856786, "phrase": "bounded_delay"}, {"score": 0.0028293966058473476, "phrase": "output_symbol"}, {"score": 0.0025409639091476363, "phrase": "tree_automata"}, {"score": 0.0022941723937662927, "phrase": "structured_program"}, {"score": 0.0021857667493036786, "phrase": "known_upper"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "Existing approaches to the synthesis of controllers in reactive systems typically involve the construction of transition systems such as Mealy automata. In 2011, Madhusudan proposed structured programs over a finite set of Boolean variables as a more succinct formalism to represent the controller. He provided an algorithm to construct such a program from a given omega-regular specification without synthesizing a transition system first. His procedure is based on two-way alternating omega-automata on finite trees that recognize the set of \"correct\" programs. We present a more elementary and direct approach using only deterministic bottom-up tree automata and extend Madhusudan's results to the wider class of programs with bounded delay, which may read several input symbols before producing an output symbol (or vice versa). In addition, we show a lower bound for the size of these tree automata. Finally, we prove a lower bound for the number of Boolean variables that are required for a structured program to satisfy a given LTL specification, almost matching the known upper bound. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Synthesizing structured reactive programs via deterministic tree automata", "paper_id": "WOS:000355664900006"}