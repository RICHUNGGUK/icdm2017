{"auto_keywords": [{"score": 0.027873010773457767, "phrase": "local_models"}, {"score": 0.00648682516764171, "phrase": "global_models"}, {"score": 0.0064332772941671805, "phrase": "service_interactions"}, {"score": 0.00481495049065317, "phrase": "global_and_local_models"}, {"score": 0.00477513738640734, "phrase": "service-oriented_systems"}, {"score": 0.004716031208088975, "phrase": "service-oriented_system"}, {"score": 0.004619134710069517, "phrase": "independent_services"}, {"score": 0.004486800020569973, "phrase": "message_exchanges"}, {"score": 0.004358242825323339, "phrase": "wsdl"}, {"score": 0.004010785080336424, "phrase": "individual_service"}, {"score": 0.003831591603702392, "phrase": "behavioral_perspective"}, {"score": 0.0037527984559873745, "phrase": "large_service-oriented_systems"}, {"score": 0.003660374693346876, "phrase": "global_picture"}, {"score": 0.003482276061796395, "phrase": "multiple_small_pictures"}, {"score": 0.003439117493141663, "phrase": "individual_services"}, {"score": 0.00286407451582299, "phrase": "behavioral_constraints"}, {"score": 0.002517524071220657, "phrase": "original_global_model"}, {"score": 0.0024656866249273125, "phrase": "previously_proposed_language"}, {"score": 0.0024452510143564057, "phrase": "global_modeling"}, {"score": 0.002316476356455291, "phrase": "global_model"}, {"score": 0.002212812864395738, "phrase": "global_ones"}, {"score": 0.0021049977753042253, "phrase": "bpel_process_definitions"}], "paper_keywords": ["choreography", " orchestration", " service-oriented architecture", " web service"], "paper_abstract": "A service-oriented system is a collection of independent services that interact with one another through message exchanges. Languages such as the Web Services Description Language (WSDL) and the Business Process Execution Language (BPEL) allow developers to capture the interactions in which an individual service can engage, both from a structural and from a behavioral perspective. However, in large service-oriented systems, stakeholders may require a global picture of the way services interact with each other, rather than multiple small pictures focusing on individual services. Such global models are especially useful when a set of services interact in such a way that none of them sees all messages being exchanged, yet interactions between some services may affect the way other services interact. Unfortunately, global models of service interactions may sometimes capture behavioral constraints that cannot be enforced locally. In other words, some global models may not be translatable into a set of local models such that the sum of the local models equals the original global model. Starting from a previously proposed language for global modeling of service interactions, this paper defines an algorithm for determining if a global model is locally enforceable and an algorithm for generating local models from global ones. It also shows how local models are mapped into templates of BPEL process definitions.", "paper_title": "Bridging global and local models of service-oriented systems", "paper_id": "WOS:000255354900004"}