{"auto_keywords": [{"score": 0.049146612112995945, "phrase": "execution_phases"}, {"score": 0.04023075432393371, "phrase": "random_sampling"}, {"score": 0.015719716506582538, "phrase": "stratified_sampling"}, {"score": 0.011551945650799391, "phrase": "original_trace"}, {"score": 0.004556901872357751, "phrase": "behavioral_aspects"}, {"score": 0.004503422625191897, "phrase": "software_system"}, {"score": 0.004450568197899267, "phrase": "important_enabler"}, {"score": 0.004195418010131832, "phrase": "execution_traces"}, {"score": 0.003405109584265324, "phrase": "trace_sampling_technique"}, {"score": 0.003073545175760353, "phrase": "desired_characteristics"}, {"score": 0.0027961342030212353, "phrase": "sample_trace"}, {"score": 0.0027307746993761035, "phrase": "original_execution_trace"}, {"score": 0.0025038930574283174, "phrase": "execution_phase"}, {"score": 0.002407078478216306, "phrase": "specific_task"}, {"score": 0.0023787690061742566, "phrase": "traced_system"}, {"score": 0.0022958180852458215, "phrase": "automatic_detection"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Trace analysis", " Program comprehension", " Sampling techniques", " Stratified sampling", " Execution phases"], "paper_abstract": "The understanding of the behavioral aspects of a software system is an important enabler for many reverse engineering activities. The behavior of software is typically represented in the form of execution traces. Traces, however, can be overwhelmingly large. To reduce their size, sampling techniques, especially the ones based on random sampling, have been extensively used. Random sampling, however, may result in samples that are not representative of the original trace. In this paper, we propose a trace sampling technique that not only reduces the size of a trace but also results in a sample that is representative of the original trace by ensuring that the desired characteristics of an execution are distributed similarly in both the sampled and the original trace. Hence, the insights gained from analyzing the sample trace could be extrapolated to the original execution trace. Our approach is based on stratified sampling instead of random sampling and uses the concept of execution phases as strata. We define an execution phase as a part of a trace that represents a specific task of the traced system. We also present an approach for the automatic detection of execution phases from a trace. Finally, we show the effectiveness of our sampling technique through two case studies. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Stratified sampling of execution traces: Execution phases serving as strata", "paper_id": "WOS:000320742200008"}