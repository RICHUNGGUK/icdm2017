{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cyclic_dependencies"}, {"score": 0.04945540937697203, "phrase": "boolean_satisfiability"}, {"score": 0.03494794829412794, "phrase": "cyclic_circuits"}, {"score": 0.00465964893087681, "phrase": "accepted_wisdom"}, {"score": 0.004568871736067739, "phrase": "combinational_circuits"}, {"score": 0.004167982855788402, "phrase": "simple_examples"}, {"score": 0.003703611021999795, "phrase": "combinational_designs"}, {"score": 0.003607630811220324, "phrase": "significant_savings"}, {"score": 0.003269266730193333, "phrase": "sum-of-product"}, {"score": 0.0032266222697084675, "phrase": "sop"}, {"score": 0.0031636612155559267, "phrase": "binary-decision_diagram"}, {"score": 0.00266693888510356, "phrase": "sat-based_methodology"}, {"score": 0.002497319603143104, "phrase": "cyclic_functional_dependencies"}, {"score": 0.002416595215998098, "phrase": "craig"}, {"score": 0.0023079225317714815, "phrase": "different_functional_dependencies"}, {"score": 0.0022628564592874147, "phrase": "branch-and-bound_search"}, {"score": 0.0021049977753042253, "phrase": "benchmark_circuits"}], "paper_keywords": ["Algorithms", " Theory", " Verification", " Boolean satisfiability", " circuit verification", " cyclic circuits", " logic design", " logic synthesis"], "paper_abstract": "The accepted wisdom is that combinational circuits must have acyclic (i.e., feed-forward) topologies. Yet simple examples suggest that this is incorrect. In fact, introducing cycles (i.e., feedback) into combinational designs can lead to significant savings in area and in delay. Prior work described methodologies for synthesizing cyclic circuits with Sum-Of-Product (SOP) and Binary-Decision Diagram (BDD)-based formulations. Recently, techniques for analyzing and mapping cyclic circuits based on Boolean satisfiability (SAT) were proposed. This article presents a SAT-based methodology for synthesizing cyclic dependencies. The strategy is to generate cyclic functional dependencies through a technique called Craig interpolation. Given a choice of different functional dependencies, a branch-and-bound search is performed to pick the best one. Experiments on benchmark circuits demonstrate the effectiveness of the approach.", "paper_title": "The Synthesis of Cyclic Dependencies with Boolean Satisfiability", "paper_id": "WOS:000310163000009"}