{"auto_keywords": [{"score": 0.03675012568131336, "phrase": "linear_time"}, {"score": 0.03347678520709377, "phrase": "preference_lists"}, {"score": 0.004767261858417823, "phrase": "stable_marriage_problem"}, {"score": 0.004596390584582711, "phrase": "large_stable_matching"}, {"score": 0.004550856732700044, "phrase": "bipartite_graph"}, {"score": 0.004286931271697226, "phrase": "matched_partner"}, {"score": 0.0041195049121633956, "phrase": "matching_m"}, {"score": 0.0035831752332801674, "phrase": "stable_matching"}, {"score": 0.0034545974376846687, "phrase": "gale-shapley_algorithm"}, {"score": 0.0033639840192975835, "phrase": "maximum_size"}, {"score": 0.0028966970007550824, "phrase": "current_best_approximation_ratio"}, {"score": 0.0027193846595965593, "phrase": "simple_linear_time_algorithm"}, {"score": 0.002656823796937945, "phrase": "half-integral_stable_matching"}, {"score": 0.002587081502365341, "phrase": "integral_stable_matching_m."}, {"score": 0.002527556628744957, "phrase": "payment_scheme"}, {"score": 0.0022951636331743066, "phrase": "two-sided_ties"}, {"score": 0.0022648286660146314, "phrase": "tie_length"}], "paper_keywords": ["Stable matching", " Approximation algorithms"], "paper_abstract": "We consider the problem of computing a large stable matching in a bipartite graph where each vertex ranks its neighbors in an order of preference, perhaps involving ties. Let the matched partner of u in a matching M be M(u). A matching M is said to be stable if there is no edge (a, b) such that a is unmatched or prefers b to M(a) and similarly, b is unmatched or prefers a to M(b). While a stable matching in G can be easily computed in linear time by the Gale-Shapley algorithm, it is known that computing a maximum size stable matching is APX-hard. In this paper we first consider the case when the preference lists of vertices in A are strict while the preference lists of vertices in B may include ties. This case is also APX-hard and the current best approximation ratio known here is 25/17 which relies on solving an LP. We improve this ratio to 22/15 by a simple linear time algorithm. Here we first compute a half-integral stable matching in and then round it to an integral stable matching M. The ratio is bounded via a payment scheme that charges other components in to cover the costs of length-5 augmenting paths. There will be no length-3 augmenting paths here. We next consider the following special case of two-sided ties, where every tie length is 2. This case is known to be UGC-hard to approximate to within 4/3. We show a 10/7 approximation algorithm here that runs in linear time.", "paper_title": "Improved approximation algorithms for two variants of the stable marriage problem with ties", "paper_id": "WOS:000364528000015"}