{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "action_models"}, {"score": 0.005305069766187951, "phrase": "human_editors"}, {"score": 0.004763895422211728, "phrase": "al_planning"}, {"score": 0.004638602678192715, "phrase": "action_model_learning_system"}, {"score": 0.004327981760540394, "phrase": "successfully_observed_plans"}, {"score": 0.004147216579100177, "phrase": "impressive_performance"}, {"score": 0.004059673618719782, "phrase": "artificial_domains"}, {"score": 0.0038487848937121204, "phrase": "action_model"}, {"score": 0.0036488111139918135, "phrase": "observed_example_plans"}, {"score": 0.003571751184289622, "phrase": "example_plan"}, {"score": 0.0034777028461723198, "phrase": "action_traces"}, {"score": 0.00269153816187088, "phrase": "arms"}, {"score": 0.0026205405415623525, "phrase": "statistical_distribution"}, {"score": 0.002592693161475495, "phrase": "frequent_sets"}, {"score": 0.002431699464104896, "phrase": "weighted_propositional_satisfiability"}, {"score": 0.0022928991183989115, "phrase": "weighted_maxsat_solver"}, {"score": 0.002220551141101661, "phrase": "empirical_evidence"}, {"score": 0.0021390191069313945, "phrase": "good_approximation"}, {"score": 0.0021049977753042253, "phrase": "finally_action_models"}], "paper_keywords": [""], "paper_abstract": "We present an action model learning system known as ARMS (Action-Relation Modelling System) for automatically discovering action models from a set of successfully observed plans. Current artificial intelligence (Al) planners show impressive performance in many real world and artificial domains, but they all require the definition of an action model. ARMS is aimed at automatically learning action models from observed example plans, where each example plan is a sequence of action traces. These action models can then be used by the human editors to refine. The expectation is that this system will lessen the burden of the human editors in designing action models from scratch. In this paper, we describe the ARMS in detail. To learn action models, ARMS gathers knowledge on the statistical distribution of frequent sets of actions in the example plans. It then builds a weighted propositional satisfiability (weighted SAT) problem and solves it using a weighted MAXSAT solver. Furthermore, we show empirical evidence that ARMS can indeed learn a good approximation of the finally action models effectively.", "paper_title": "ARMS: an automatic knowledge engineering tool for learning action models for Al planning", "paper_id": "WOS:000248568900003"}