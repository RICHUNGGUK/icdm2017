{"auto_keywords": [{"score": 0.049188612914091503, "phrase": "software_birthmark"}, {"score": 0.04034190794741309, "phrase": "source_code"}, {"score": 0.00481495049065317, "phrase": "dynamic_key_instruction_sequences"}, {"score": 0.004637478829869904, "phrase": "unique_characteristic"}, {"score": 0.004248294537944227, "phrase": "defendant_programs"}, {"score": 0.004169226023596022, "phrase": "effective_approach"}, {"score": 0.004117329555194574, "phrase": "software_plagiarism_detection"}, {"score": 0.004015458740397976, "phrase": "software_birthmark_generation"}, {"score": 0.0033905067962602515, "phrase": "new_type"}, {"score": 0.0028986672783671147, "phrase": "plagiarism_detection_algorithm"}, {"score": 0.002756832447586547, "phrase": "weak_obfuscation_techniques"}, {"score": 0.0027054473441439422, "phrase": "compiler_optimizations"}, {"score": 0.002671722386856879, "phrase": "strong_obfuscation_techniques"}, {"score": 0.0025730425700096365, "phrase": "sandmark"}, {"score": 0.0025409639091476363, "phrase": "allatori"}, {"score": 0.002509284173541882, "phrase": "upx"}, {"score": 0.0023864566654035924, "phrase": "dykis-pd"}, {"score": 0.0023566987138026285, "phrase": "dykis_plagiarism_detection"}, {"score": 0.002283913454238574, "phrase": "extensive_experiments"}, {"score": 0.002255431275670053, "phrase": "large_number"}, {"score": 0.0022273034991008326, "phrase": "binary_programs"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["Software plagiarism detection", " software birthmark"], "paper_abstract": "A software birthmark is a unique characteristic of a program. Thus, comparing the birthmarks between the plaintiff and defendant programs provides an effective approach for software plagiarism detection. However, software birthmark generation faces two main challenges: the absence of source code and various code obfuscation techniques that attempt to hide the characteristics of a program. In this paper, we propose a new type of software birthmark called DYnamic Key Instruction Sequence (DYKIS) that can be extracted from an executable without the need for source code. The plagiarism detection algorithm based on our new birthmarks is resilient to both weak obfuscation techniques such as compiler optimizations and strong obfuscation techniques implemented in tools such as SandMark, Allatori and Upx. We have developed a tool called DYKIS-PD (DYKIS Plagiarism Detection tool) and conducted extensive experiments on large number of binary programs. The tool, the benchmarks and the experimental results are all publicly available.", "paper_title": "Software Plagiarism Detection with Birthmarks Based on Dynamic Key Instruction Sequences", "paper_id": "WOS:000366470700005"}