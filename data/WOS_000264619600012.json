{"auto_keywords": [{"score": 0.04838919478929022, "phrase": "tm"}, {"score": 0.02295446430290215, "phrase": "transactional_memory"}, {"score": 0.00481495049065317, "phrase": "concurrent_programs"}, {"score": 0.004535124351828787, "phrase": "new_promising_concurrency-control_mechanism"}, {"score": 0.004271490815763164, "phrase": "traditional_lock-based_techniques"}, {"score": 0.00414545383888272, "phrase": "data_races"}, {"score": 0.003633464433320317, "phrase": "programming_model"}, {"score": 0.0034841647157189985, "phrase": "multi-threaded_programs"}, {"score": 0.0032423089921154503, "phrase": "tm_systems"}, {"score": 0.0031654684543975077, "phrase": "better_performance"}, {"score": 0.0024901940672239784, "phrase": "proof-carrying_code"}, {"score": 0.0024604928614921835, "phrase": "pcc"}, {"score": 0.002345158118863794, "phrase": "tm."}, {"score": 0.0022352169832099153, "phrase": "tm_semantics"}], "paper_keywords": ["program verification", " transactional memory", " proof-carrying code", " concurrent program safety"], "paper_abstract": "Transactional memory (TM) is a new promising concurrency-control mechanism that can avoid many of the pitfalls of the traditional lock-based techniques. TM systems handle data races between threads automatically so that programmers do not have to reason about the interaction of threads manually. TM provides a programming model that may make the development of multi-threaded programs easier. Much work has been done to explore the various implementation strategies of TM systems and to achieve better performance, but little has been done on how to formally reason about programs using TM and how to make sure that such reasoning is sound. In this paper, we focus on the semantics of transactional memory and present a proof-carrying code (PCC) system for reasoning about programs using TM. We formalize our reasoning with respect to the TM semantics, prove its soundness, and use examples to demonstrate its effectiveness.", "paper_title": "Certifying Concurrent Programs Using Transactional Memory", "paper_id": "WOS:000264619600012"}