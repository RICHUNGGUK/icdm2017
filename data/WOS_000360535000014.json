{"auto_keywords": [{"score": 0.03462264861657316, "phrase": "causality_analysis"}, {"score": 0.03166862986068805, "phrase": "performance_analysts"}, {"score": 0.029265799224714863, "phrase": "device_drivers"}, {"score": 0.00481495049065317, "phrase": "real-world_execution_traces"}, {"score": 0.004737579882204798, "phrase": "device-driver_case"}, {"score": 0.004686688155058031, "phrase": "real-world_execution"}, {"score": 0.004636340567075841, "phrase": "record_performance_problems"}, {"score": 0.004488505301335364, "phrase": "deployment_sites"}, {"score": 0.0041840994704406866, "phrase": "system_layers"}, {"score": 0.003796267885124202, "phrase": "deeply_rooted_problems"}, {"score": 0.003695040819303525, "phrase": "new_trace-based_approach"}, {"score": 0.0034442607586033657, "phrase": "impact_analysis"}, {"score": 0.003407214479510987, "phrase": "performance_impacts"}, {"score": 0.003352388337911934, "phrase": "component_basis"}, {"score": 0.003210446135114967, "phrase": "runtime_behaviors"}, {"score": 0.0030911702059432224, "phrase": "measured_impacts"}, {"score": 0.0030414140732789186, "phrase": "discovered_patterns"}, {"score": 0.002944284514509205, "phrase": "root_causes"}, {"score": 0.0029126002350975634, "phrase": "perceived_performance_problems"}, {"score": 0.0025857324180891526, "phrase": "non-trivial_part"}, {"score": 0.0024761702541879213, "phrase": "overall_system_performance"}, {"score": 0.0024231382864800173, "phrase": "big_part"}, {"score": 0.0022101055924375725, "phrase": "highly_suspicious_and_high-impact_behavioral_patterns"}], "paper_keywords": ["Device Drivers", " Execution Traces", " Performance Analysis", " Bottlenecks", " Contrast Data Mining"], "paper_abstract": "Real-world execution traces record performance problems that are likely perceived at deployment sites. However, those problems can be rooted subtly and deeply into system layers or other components far from the place where delays are initially observed. To tackle challenges of identifying deeply rooted problems, we propose a new trace-based approach consisting of two steps: impact analysis and causality analysis. The impact analysis measures performance impacts on a component basis, and the causality analysis discovers patterns of runtime behaviors that are likely to cause the measured impacts. The discovered patterns can help performance analysts quickly identify root causes of perceived performance problems. We instantiate our approach to study the performance of device drivers on over 19,500 real-world execution traces. The impact analysis shows that device drivers constitute a non-trivial part (approximate to 38 %) in the overall system performance, and a big part (approximate to 26 %) is due to interactions between drivers. The causality analysis effectively discovers highly suspicious and high-impact behavioral patterns in device drivers, examined and confirmed by our automated evaluation, developers, and performance analysts.", "paper_title": "Comprehending Performance from Real-World Execution Traces: A Device-Driver Case", "paper_id": "WOS:000360535000014"}