{"auto_keywords": [{"score": 0.03730575590231706, "phrase": "master_problem"}, {"score": 0.012039057897641158, "phrase": "packing_problem"}, {"score": 0.00481495049065317, "phrase": "combinatorial_benders'"}, {"score": 0.004726382602809228, "phrase": "lock_scheduling_problem"}, {"score": 0.004554082077300675, "phrase": "combinatorial_optimization_problem"}, {"score": 0.0044702911400353535, "phrase": "real_challenge"}, {"score": 0.004388035083357706, "phrase": "waterway_operators"}, {"score": 0.0043275193159585945, "phrase": "lsp"}, {"score": 0.003593555152077465, "phrase": "first_two_problems"}, {"score": 0.0032292292848296617, "phrase": "combinatorial_benders'_approach"}, {"score": 0.002874870266177579, "phrase": "packing_subproblem"}, {"score": 0.002731500545019039, "phrase": "combinatorial_inequalities"}, {"score": 0.0025832180231667853, "phrase": "exact_approach"}, {"score": 0.0025474193855847074, "phrase": "lsp._experiments"}, {"score": 0.0023867931451842087, "phrase": "real_world_data"}, {"score": 0.0023103100997344072, "phrase": "decomposition_approach"}, {"score": 0.0021848422732893926, "phrase": "solution_quality"}, {"score": 0.0021646022201798247, "phrase": "computation_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Lock Scheduling Problem", " Combinatorial Benders' decomposition"], "paper_abstract": "The Lock Scheduling Problem (LSP) is a combinatorial optimization problem that represents a real challenge for many harbours and waterway operators. The LSP consists of three strongly interconnected subproblems: scheduling lockages, assigning ships to chambers, and positioning the ships inside the chambers. These should be interpreted respectively as a scheduling, an assignment, and a packing problem. By combining the first two problems into a master problem and using the packing problem as a subproblem, a decomposition is achieved that can be solved efficiently by a Combinatorial Benders' approach. The master problem is solved first, thereby sequencing the ships into a number of lockages. Next, for each lockage, a packing subproblem is checked for feasibility, possibly returning a number of combinatorial inequalities (cuts) to the master problem. The result is an exact approach to the LSP. Experiments are conducted on a set of instances that were generated in correspondence with real world data. The results indicate that the decomposition approach significantly outperforms other exact approaches presented in the literature, in terms of solution quality and computation time. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "A Combinatorial Benders' decomposition for the lock scheduling problem", "paper_id": "WOS:000347022900010"}