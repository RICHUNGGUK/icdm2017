{"auto_keywords": [{"score": 0.049226991195811136, "phrase": "nurbs_surfaces"}, {"score": 0.00481495049065317, "phrase": "hausdorff_distance"}, {"score": 0.004645057834614705, "phrase": "numerical_iteration"}, {"score": 0.004521643292957175, "phrase": "gpu."}, {"score": 0.0043619799095455415, "phrase": "gpu_algorithm"}, {"score": 0.004208002469225673, "phrase": "directed_hausdorff_distance"}, {"score": 0.003677280504320636, "phrase": "numerical_iterations"}, {"score": 0.0034529760173586583, "phrase": "minimal_distance"}, {"score": 0.0031845067058084583, "phrase": "error_analysis"}, {"score": 0.0030997236644076196, "phrase": "hausdorff_distance_computations"}, {"score": 0.0027328817607818207, "phrase": "cuda_implementation"}, {"score": 0.0026362590493392785, "phrase": "existing_methods"}, {"score": 0.0025202582748972122, "phrase": "new_method"}, {"score": 0.0024311346712789553, "phrase": "previous_hierarchical_culling_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Numerical iterations", " Hausdorff distance", " NURBS", " GPU", " Geometric algorithms"], "paper_abstract": "We present a GPU algorithm for computing the directed Hausdorff distance between two NURBS surfaces. The algorithm is based on sampling of one surface, and performing numerical iterations on the CPU to compute the minimal distance from each sample to the other surface. An error analysis for the Hausdorff distance computations is performed, based on bounds on the NURBS surfaces. We compare a CUDA implementation of our algorithm to existing methods, demonstrating that the new method addresses limitations of previous hierarchical culling methods such as the sensitivity to the position of the inputs. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Computing the Hausdorff distance between NURBS surfaces using numerical iteration on the GPU", "paper_id": "WOS:000310038500023"}