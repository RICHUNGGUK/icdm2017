{"auto_keywords": [{"score": 0.043743228649701246, "phrase": "dominating_clique"}, {"score": 0.011238002844435484, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "clique_problem"}, {"score": 0.004035500442527029, "phrase": "dominating_set"}, {"score": 0.0038407203087210775, "phrase": "existence_problem"}, {"score": 0.003241312187060814, "phrase": "maximum_dominating_clique_problem"}, {"score": 0.0028740705307540343, "phrase": "input_graph"}, {"score": 0.002833689453299307, "phrase": "n_vertices"}, {"score": 0.0027546167254869493, "phrase": "minimum_dominating_clique"}, {"score": 0.002275477757478827, "phrase": "lower_bound"}, {"score": 0.0021654633404434623, "phrase": "worst_case"}], "paper_keywords": [""], "paper_abstract": "A subset of vertices D subset of V of a graph G = (V, E) is a dominating clique if D is a dominating set and a clique of G. The existence problem 'Given a graph G, is there a dominating clique in G?' is NP-complete, and thus both the Minimum and the Maximum Dominating Clique problem are NP-hard. We present an O(1.3390(n)) time algorithm that for an input graph on n vertices either computes a minimum dominating clique or reports that the graph has no dominating clique. The algorithm uses the Branch & Reduce paradigm and its time analysis is based on the Measure & Conquer approach. We also establish a lower bound of Omega(1.2599(n)) for the worst case running time of our algorithm.", "paper_title": "An exact algorithm for the minimum dominating clique problem", "paper_id": "WOS:000241482800012"}