{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_process"}, {"score": 0.004707913053935566, "phrase": "stochastic_workflow_analysis"}, {"score": 0.00462919213721188, "phrase": "fundamental_feature"}, {"score": 0.004400804926266097, "phrase": "convenient_approach"}, {"score": 0.0043029342321223825, "phrase": "stochastic_dynamics"}, {"score": 0.004183638135671596, "phrase": "log_data"}, {"score": 0.00397714507836836, "phrase": "markov_model"}, {"score": 0.0035339597999254064, "phrase": "markov_models"}, {"score": 0.0034944094552943, "phrase": "different_orders"}, {"score": 0.0033405704229694656, "phrase": "corresponding_transition_matrices"}, {"score": 0.0031223774204093713, "phrase": "full_bayesian_approach"}, {"score": 0.003070086433952691, "phrase": "learning_process"}, {"score": 0.002984867789900281, "phrase": "statistical_noise"}, {"score": 0.002805597755796506, "phrase": "transition_matrix"}, {"score": 0.002607527117561699, "phrase": "specific_model-model_similarity_definition"}, {"score": 0.0023827927890399357, "phrase": "sequence-to-sequence_conformance_assessment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["software process", " workflow management", " stochastic dynamics", " Markov chains", " machine learning", " Bayesian methods", " time-sequence analysis", " similarity measures"], "paper_abstract": "A fundamental feature of the software process consists in its own stochastic nature. A convenient approach for extracting the stochastic dynamics of a process from log data is that of modelling the process as a Markov model: in this way the discovery of the short/medium range dynamics of the process is cast in terms of the learning of Markov models of different orders, i.e. in terms of learning the corresponding transition matrices. In this paper we show that the use of a full Bayesian approach in the learning process helps providing robustness against statistical noise and over-fitting, as the size of a transition matrix grows exponentially with the order of the model. We give a specific model-model similarity definition and the corresponding calculation procedure to be used in model-to-sequence or sequence-to-sequence conformance assessment, this similarity definition could also be applied to other inferential tasks, such as unsupervised process learning. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Discovering the software process by means of stochastic workflow analysis", "paper_id": "WOS:000242133700009"}