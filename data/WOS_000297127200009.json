{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "local_search_chains"}, {"score": 0.019668476361492715, "phrase": "memetic_algorithms"}, {"score": 0.017134007162584553, "phrase": "ma-cma-chains"}, {"score": 0.004783730450730986, "phrase": "large_scale_continuous_optimisation_problems"}, {"score": 0.004630626571109149, "phrase": "large_scale_optimisation_problems"}, {"score": 0.00419997182602686, "phrase": "essential_requirement"}, {"score": 0.004172722575842674, "phrase": "modern_optimisation_algorithms"}, {"score": 0.004118751115632515, "phrase": "previous_work"}, {"score": 0.003999843765164458, "phrase": "local_search_chain"}, {"score": 0.0038717306726380233, "phrase": "local_search_operator"}, {"score": 0.0037844916274672544, "phrase": "previous_invocation"}, {"score": 0.0037233796053514918, "phrase": "final_configuration"}, {"score": 0.0035574466515880337, "phrase": "memetic_algorithm"}, {"score": 0.003488607816047529, "phrase": "cma-es_algorithm"}, {"score": 0.0033878306639271963, "phrase": "continuous_optimisation_problems"}, {"score": 0.0032157824854214313, "phrase": "cma-es_scalability"}, {"score": 0.00307240091019322, "phrase": "large_scale_problems"}, {"score": 0.0028973794653974327, "phrase": "different_local_search_methods"}, {"score": 0.002813633198636833, "phrase": "processing_cost"}, {"score": 0.0027412207934201013, "phrase": "solis_wets_method"}, {"score": 0.0026969099161088398, "phrase": "subgrouping_solis_wets_algorithm"}, {"score": 0.002670667021775741, "phrase": "local_search_method"}, {"score": 0.0024297565926197505, "phrase": "new_memetic_algorithm"}, {"score": 0.002390468357001542, "phrase": "high_dimensionality"}, {"score": 0.002239552244442444, "phrase": "different_reference_algorithms"}, {"score": 0.0021049977753042253, "phrase": "high-dimensional_problems"}], "paper_keywords": ["Memetic algorithms", " Continuous optimisation", " Large scale problems", " Local search chains"], "paper_abstract": "Nowadays, large scale optimisation problems arise as a very interesting field of research, because they appear in many real-world problems (bio-computing, data mining, etc.). Thus, scalability becomes an essential requirement for modern optimisation algorithms. In a previous work, we presented memetic algorithms based on local search chains. Local search chain concerns the idea that, at one stage, the local search operator may continue the operation of a previous invocation, starting from the final configuration reached by this one. Using this technique, it was presented a memetic algorithm, MA-CMA-Chains, using the CMA-ES algorithm as its local search component. This proposal obtained very good results for continuous optimisation problems, in particular with medium-size (with up to dimension 50). Unfortunately, CMA-ES scalability is restricted by several costly operations, thus MA-CMA-Chains could not be successfully applied to large scale problems. In this article we study the scalability of memetic algorithms based on local search chains, creating memetic algorithms with different local search methods and comparing them, considering both the error values and the processing cost. We also propose a variation of Solis Wets method, that we call Subgrouping Solis Wets algorithm. This local search method explores, at each step of the algorithm, only a random subset of the variables. This subset changes after a certain number of evaluations. Finally, we propose a new memetic algorithm based on local search chains for high dimensionality, MA-SSW-Chains, using the Subgrouping Solis Wets' algorithm as its local search method. This algorithm is compared with MA-CMA-Chains and different reference algorithms, and it is shown that the proposal is fairly scalable and it is statistically very competitive for high-dimensional problems.", "paper_title": "Memetic algorithms based on local search chains for large scale continuous optimisation problems: MA-SSW-Chains", "paper_id": "WOS:000297127200009"}