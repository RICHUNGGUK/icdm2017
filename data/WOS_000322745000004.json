{"auto_keywords": [{"score": 0.042396670476865794, "phrase": "partial_dsops"}, {"score": 0.007909582610477296, "phrase": "dsop"}, {"score": 0.00481495049065317, "phrase": "boolean_function"}, {"score": 0.004764004403553372, "phrase": "n_variables"}, {"score": 0.004119211418949265, "phrase": "f._dsop_forms"}, {"score": 0.004075596668736259, "phrase": "special_instance"}, {"score": 0.004018158280364063, "phrase": "i.e._the_general_case"}, {"score": 0.0035487559182107112, "phrase": "minimal_number"}, {"score": 0.003412833120814178, "phrase": "boolean_functions"}, {"score": 0.0033172506969692626, "phrase": "digital_circuits"}, {"score": 0.0032704647689720326, "phrase": "absolute_minimum"}, {"score": 0.0031340167205149813, "phrase": "absolute_minimization"}, {"score": 0.00297141030969672, "phrase": "polynomial_time_heuristic"}, {"score": 0.0029087480993530796, "phrase": "known_minimization_tools"}, {"score": 0.0025055037815033725, "phrase": "cube_weights"}, {"score": 0.002426630714074822, "phrase": "minimization_heuristics"}, {"score": 0.002308834230545883, "phrase": "major_benchmark_functions"}, {"score": 0.002204566591599102, "phrase": "better_results"}, {"score": 0.0021657265492371976, "phrase": "previous_heuristics"}, {"score": 0.0021049977753042253, "phrase": "bdd_representation"}], "paper_keywords": ["Sum-of-products", " Disjoint sum-of-products", " Product weight", " Minimal form", " Heuristics", " Computational complexity"], "paper_abstract": "Given a Boolean function f on n variables, a Disjoint Sum-of-Products (DSOP) of f is a set of products (ANDs) of subsets of literals whose sum (OR) equals f, such that no two products cover the same minterm of f. DSOP forms are a special instance of partial DSOPs, i.e. the general case where a subset of minterms must be covered exactly once and the other minterms (typically corresponding to don't care conditions of f) can be covered any number of times. We discuss finding DSOPs and partial DSOPs with a minimal number of products, a problem theoretically connected with various properties of Boolean functions and practically relevant in the synthesis of digital circuits. Finding an absolute minimum is hard, in fact we prove that the problem of absolute minimization of partial DSOPs is NP-hard. Therefore it is crucial to devise a polynomial time heuristic that compares favorably with the known minimization tools. To this end we develop a further piece of theory starting from the definition of the weight of a cube c as a functions of the number of fragments induced on other cubes by the selection of c, and show how cube weights can be exploited for building a class of minimization heuristics for DSOP and partial DSOP synthesis. A set of experiments conducted on major benchmark functions show that our method, with a family of variants, always generates better results than the ones of previous heuristics, including the method based on a BDD representation of f.", "paper_title": "Compact DSOP and Partial DSOP Forms", "paper_id": "WOS:000322745000004"}