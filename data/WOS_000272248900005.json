{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "handling_non_left-linear"}, {"score": 0.004178935413340453, "phrase": "tree_regular_model-checking"}, {"score": 0.0032223742018434856, "phrase": "reflexive_and_transitive_closure"}, {"score": 0.0031100973266506163, "phrase": "successor_relation"}, {"score": 0.002897109710213723, "phrase": "system_r"}, {"score": 0.0026355812883224203, "phrase": "regular_tree_languages"}, {"score": 0.0024842242921857705, "phrase": "automatic_approximation-based_technique"}, {"score": 0.002155412043665635, "phrase": "term_rewriting_system_rules"}, {"score": 0.0021049977753042253, "phrase": "non_left-linear"}], "paper_keywords": ["Rewriting techniques", " tree automata", " left-linearity", " security"], "paper_abstract": "This paper addresses the following problem of tree regular model-checking: decide whether R* (L) boolean AND L-p = empty set where R* is the reflexive and transitive closure of a successor relation induced by a term rewriting system R, and L and L-p are both regular tree languages. We develop an automatic approximation-based technique to handle this - undecidable in general-problem in the case when term rewriting system rules are non left-linear.", "paper_title": "HANDLING NON LEFT-LINEAR RULES WHEN COMPLETING TREE AUTOMATA", "paper_id": "WOS:000272248900005"}