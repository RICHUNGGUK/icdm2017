{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "loop_subdivision_surfaces"}, {"score": 0.0047588556219929756, "phrase": "modern_gpus"}, {"score": 0.004621447740470602, "phrase": "novel_approach"}, {"score": 0.00440976345264104, "phrase": "modern_graphics_hardware"}, {"score": 0.00408617426304956, "phrase": "true_loop_subdivision_surface"}, {"score": 0.004014923642015515, "phrase": "core_idea"}, {"score": 0.0038989120088094185, "phrase": "irregular_patches"}, {"score": 0.0038309141193444015, "phrase": "gpu_compute_kernel"}, {"score": 0.003742084495435749, "phrase": "regular_patches"}, {"score": 0.0035496495489801667, "phrase": "hardware_tessellation_unit"}, {"score": 0.0034673190692473903, "phrase": "triangular_control"}, {"score": 0.0034068225125064586, "phrase": "arbitrary_topologies"}, {"score": 0.0033473779327638322, "phrase": "common_subdivision_surface_features"}, {"score": 0.0032505921489759224, "phrase": "sharp_creases"}, {"score": 0.003212663446866794, "phrase": "hierarchical_edits"}, {"score": 0.003101503914610488, "phrase": "accurate_up_to_machine_precision"}, {"score": 0.002994178996584381, "phrase": "consistent_bitwise_evaluation"}, {"score": 0.002890557197908352, "phrase": "patch_boundaries"}, {"score": 0.002725740264152553, "phrase": "displacement_mapping"}, {"score": 0.002646880721119838, "phrase": "surface_normals"}, {"score": 0.002555247330102505, "phrase": "efficient_level-of-detail_rendering"}, {"score": 0.0022854384756395116, "phrase": "high-quality_results"}, {"score": 0.002258745901862197, "phrase": "real-time_frame_rates"}, {"score": 0.0021677478798910565, "phrase": "interactive_rendering_applications"}, {"score": 0.002129877319760485, "phrase": "video_games"}, {"score": 0.0021049977753042253, "phrase": "authoring_tools"}], "paper_keywords": ["real-time rendering", " Loop subdivision surface", " hardware tessellation"], "paper_abstract": "We present a novel approach for real-time rendering Loop subdivision surfaces on modern graphics hardware. Our algorithm evaluates both positions and normals accurately, thus providing the true Loop subdivision surface. The core idea is to recursively refine irregular patches using a GPU compute kernel. All generated regular patches are then directly evaluated and rendered using the hardware tessellation unit. Our approach handles triangular control meshes of arbitrary topologies and incorporates common subdivision surface features such as semi-sharp creases and hierarchical edits. While surface rendering is accurate up to machine precision, we also enforce a consistent bitwise evaluation of positions and normals at patch boundaries. This is particularly useful in the context of displacement mapping which strictly requires matching surface normals. Furthermore, we incorporate efficient level-of-detail rendering where subdivision depth and tessellation density can be adjusted on-the-fly. Overall, our algorithm provides high-quality results at real-time frame rates, thus being ideally suited to interactive rendering applications such as video games or authoring tools.", "paper_title": "Feature-Adaptive Rendering of Loop Subdivision Surfaces on Modern GPUs", "paper_id": "WOS:000345382500007"}