{"auto_keywords": [{"score": 0.03826223793623789, "phrase": "proceedings"}, {"score": 0.020941303567096038, "phrase": "new_york"}, {"score": 0.012120346066794827, "phrase": "n._zeh"}, {"score": 0.008574980669203237, "phrase": "planar_graphs"}, {"score": 0.006976025282878058, "phrase": "l._toma"}, {"score": 0.00662491536319207, "phrase": "planar_digraphs"}, {"score": 0.0064617973604431545, "phrase": "acm"}, {"score": 0.006060297388323607, "phrase": "l._arge"}, {"score": 0.005744759894140242, "phrase": "piscataway"}, {"score": 0.0050797739632675466, "phrase": "comput"}, {"score": 0.005025591074913198, "phrase": "springer-verlag"}, {"score": 0.005007713836164089, "phrase": "berlin"}, {"score": 0.00481495049065317, "phrase": "-efficient_planar_separators"}, {"score": 0.004755183304300542, "phrase": "optimal_separator_partitions"}, {"score": 0.004671080228680307, "phrase": "planar_graph"}, {"score": 0.004646139214596319, "phrase": "n_vertices"}, {"score": 0.004137148592885393, "phrase": "school_of_computer_science"}, {"score": 0.004122400898108875, "phrase": "carleton_university"}, {"score": 0.004107705862834221, "phrase": "ottawa"}, {"score": 0.004078504537477945, "phrase": "canada"}, {"score": 0.003942413028810394, "phrase": "breadth-first_search"}, {"score": 0.003838200035806103, "phrase": "j._algorithms"}, {"score": 0.00342965064790056, "phrase": "j._graph_algorithms_appl"}, {"score": 0.0032564477677338916, "phrase": "directed_planar_graphs"}, {"score": 0.0031987670473907644, "phrase": "computer_science"}, {"score": 0.0028683232155543533, "phrase": "planar_dags"}, {"score": 0.002827590544477838, "phrase": "algorithm_theory"}, {"score": 0.0024726992488779743, "phrase": "general_separator_algorithm"}, {"score": 0.002368801150784347, "phrase": "workshop_on_algorithm_engineering"}, {"score": 0.0021049977753042253, "phrase": "memory_size"}], "paper_keywords": ["I/O-efficient algorithms", " memory hierarchies", " graph algorithms", " planar graphs", " graph separators"], "paper_abstract": "We present I/O-efficient algorithms for computing optimal separator partitions of planar graphs. Our main result shows that, given a planar graph G with N vertices and an integer r > 0, a vertex separator of size O(N/root r) that partitions G into O(N/r) subgraphs of size at most r and boundary size O(v r) can be computed in O(sort(N)) I/Os. This bound holds provided that M >= 56r log(2) B. Together with an I/O-efficient planar embedding algorithm presented in [N. Zeh, I/O-Efficient Algorithms for Shortest Path Related Problems, Ph. D. thesis, School of Computer Science, Carleton University, Ottawa, ON, Canada, 2002], this result is the basis for I/O-efficient solutions to many other fundamental problems on planar graphs, including breadth-first search and shortest paths [L. Arge, G. S. Brodal, and L. Toma, J. Algorithms, 53 (2004), pp. 186 - 206; L. Arge, L. Toma, and N. Zeh, I/O-efficient algorithms for planar digraphs, in Proceedings of the 15th ACM Symposium on Parallelism in Algorithms and Architectures, ACM, New York, 2003, pp. 85 - 93], depth-first search [L. Arge et al., J. Graph Algorithms Appl., 7 (2003), pp. 105 - 129; L. Arge and N. Zeh, I/O-efficient strong connectivity and depth-first search for directed planar graphs, in Proceedings of the 44th IEEE Symposium on Foundations of Computer Science, IEEE Press, Piscataway, NJ, 2003, pp. 261 - 270], strong connectivity [L. Arge and N. Zeh, I/O-efficient strong connectivity and depth-first search for directed planar graphs, in Proceedings of the 44th IEEE Symposium on Foundations of Computer Science, IEEE Press, Piscataway, NJ, 2003, pp. 261 - 270], and topological sorting [L. Arge and L. Toma, Simplified external memory algorithms for planar DAGs, in Proceedings of the 9th Scandinavian Workshop on Algorithm Theory, Lecture Notes in Comput. Sci. 3111, Springer-Verlag, Berlin, New York, 2004, pp. 493 - 503; L. Arge, L. Toma, and N. Zeh, I/O-efficient algorithms for planar digraphs, in Proceedings of the 15th ACM Symposium on Parallelism in Algorithms and Architectures, ACM, New York, 2003, pp. 85 - 93]. Our second result shows that, given I/O-efficient solutions to these problems, a general separator algorithm for graphs with costs and weights on their vertices [L. Aleksandrov et al., Partitioning planar graphs with costs and weights, in Proceedings of the 4th Workshop on Algorithm Engineering and Experiments, Lecture Notes in Comput. Sci. 2409, Springer-Verlag, Berlin, New York, 2002, pp. 98 - 107] can be made I/O-efficient. Many classical separator theorems are special cases of this result. In particular, our I/O-efficient version allows the computation of a separator as produced by our first separator algorithm, but without placing any constraints on r in relation to the memory size.", "paper_title": "I/O-efficient planar separators", "paper_id": "WOS:000258895100002"}