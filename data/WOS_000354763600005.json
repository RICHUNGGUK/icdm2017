{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "formal_concept_analysis"}, {"score": 0.004761132425263795, "phrase": "software_product_line_engineering"}, {"score": 0.00470791655050857, "phrase": "sple"}, {"score": 0.004603244077348199, "phrase": "systematic_reuse_approach"}, {"score": 0.004500891637057374, "phrase": "short_time"}, {"score": 0.004351595642056769, "phrase": "quality_products"}, {"score": 0.004278807087784626, "phrase": "software_product_line"}, {"score": 0.0035941231858949035, "phrase": "existing_similar_systems"}, {"score": 0.0035141291835319682, "phrase": "ad-hoc_reuse_techniques"}, {"score": 0.003266201217790818, "phrase": "new_products"}, {"score": 0.003175556684083985, "phrase": "sple."}, {"score": 0.003140004304719746, "phrase": "code_element"}, {"score": 0.002758597251689795, "phrase": "feature-level_change_impact_analysis"}, {"score": 0.002727713622085776, "phrase": "cia"}, {"score": 0.0026370661343466354, "phrase": "affected_features"}, {"score": 0.002607527117561699, "phrase": "change_management_purpose"}, {"score": 0.0024786330057813204, "phrase": "feature-level_cia_approach"}, {"score": 0.0024234211146482547, "phrase": "fca"}, {"score": 0.0023694065215394593, "phrase": "spl_evolution"}, {"score": 0.0022777800735119405, "phrase": "different_domains"}], "paper_keywords": ["Impact analysis", " change", " feature", " source code", " formal concept analysis", " software product line", " product variants"], "paper_abstract": "Software Product Line Engineering (SPLE) is a systematic reuse approach to develop a short time-to-market and quality products, called Software Product Line (SPL). Usually, a SPL is not developed from scratch but it is developed by reusing features (resp. their implementing source code elements) of existing similar systems previously developed by ad-hoc reuse techniques. The features implementations that are reused may be changed for developing new products (SPL) using SPLE. Any code element can be a part of (shared by) different features implementations; modifying one feature's implementation can thus impact others. Therefore, feature-level Change Impact Analysis (CIA) is important to predict affected features for change management purpose. In this paper, we propose a feature-level CIA approach using Formal Concept Analysis (FCA) applied to SPL evolution. In our experimental evaluation using three case studies of different domains and sizes, we show the effectiveness of our technique in terms of the most commonly used metrics on the subject.", "paper_title": "Feature-Level Change Impact Analysis Using Formal Concept Analysis", "paper_id": "WOS:000354763600005"}