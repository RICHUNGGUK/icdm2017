{"auto_keywords": [{"score": 0.03469246557285302, "phrase": "programming_language"}, {"score": 0.00481495049065317, "phrase": "normative_multi-agent_programs"}, {"score": 0.004664371661233636, "phrase": "multi-agent"}, {"score": 0.004173244935967375, "phrase": "individual_agents"}, {"score": 0.0037935066882208235, "phrase": "organization-oriented_normative_artefact"}, {"score": 0.0034482025128821548, "phrase": "simplified_version"}, {"score": 0.002988101395789399, "phrase": "normative_artefacts"}, {"score": 0.0021049977753042253, "phrase": "operational_semantics"}], "paper_keywords": ["Multi-agent systems", " normative systems", " logic", " Programming", " semantics", " counts-as rules"], "paper_abstract": "Multi-agent systems are viewed as consisting of individual agents whose behaviours are regulated by an organization-oriented normative artefact. This article presents a simplified version of a programming language that is designed to implement normative artefacts. Such artefacts are specified in terms of norms being enforced by monitoring, regimenting and sanctioning mechanisms. The syntax and operational semantics of the programming language are introduced and discussed. A logic is presented that can be used to specify and verify properties of programs developed in this language.", "paper_title": "A logic for normative multi-agent programs", "paper_id": "WOS:000316964800003"}