{"auto_keywords": [{"score": 0.04564244721554724, "phrase": "loop_formulas"}, {"score": 0.038023285863002174, "phrase": "disjunctive_logic_programs"}, {"score": 0.033228366210635185, "phrase": "normal_logic_programs"}, {"score": 0.011490848049932357, "phrase": "external_support"}, {"score": 0.011252776551282394, "phrase": "polynomial_time"}, {"score": 0.004694700982410345, "phrase": "logic_program"}, {"score": 0.004635701867952543, "phrase": "set_semantics"}, {"score": 0.004481954307639453, "phrase": "answer_sets"}, {"score": 0.0037070855410818986, "phrase": "binary_clauses"}, {"score": 0.0033641551050434663, "phrase": "iterative_procedure"}, {"score": 0.003335873298309004, "phrase": "unit_propagation"}, {"score": 0.0032524418285459324, "phrase": "program_completion"}, {"score": 0.0032115093493071366, "phrase": "well-founded_models"}, {"score": 0.0030399874838260886, "phrase": "simplification_operator"}, {"score": 0.003001724296107667, "phrase": "dlv"}, {"score": 0.0027359500390496125, "phrase": "np"}, {"score": 0.002689564715486338, "phrase": "disjunctive_programs"}, {"score": 0.002389514188569084, "phrase": "polynomial_approximation_algorithm"}, {"score": 0.0021682027434117095, "phrase": "current_asp"}, {"score": 0.00210499793205176, "phrase": "dlv."}], "paper_keywords": ["Algorithms", " Experimentation", " Answer set semantics", " normal logic programs", " disjunctive logic programs", " loop formulas", " well-founded semantics", " answer set solvers"], "paper_abstract": "A consequence of a logic program under answer set semantics is one that is true for all answer sets. This article considers using loop formulas to compute some of these consequences in order to increase the efficiency of answer set solvers. Since computing loop formulas are in general intractable, we consider only loops with either no external support or at most one external support, as their loop formulas are either unit or binary clauses. We show that for disjunctive logic programs, loop formulas of loops with no external support can be computed in polynomial time, and that an iterative procedure using unit propagation on these formulas and the program completion computes the well-founded models in the case of normal logic programs and the least fixed point of a simplification operator used by DLV for disjunctive logic programs. For loops with at most one external support, their loop formulas can be computed in polynomial time for normal logic programs, but are NP-hard for disjunctive programs. So for normal logic programs, we have a procedure similar to the iterative one for loops without any external support, but for disjunctive logic programs, we present a polynomial approximation algorithm. All these algorithms have been implemented, and our experiments show that for certain logic programs, the consequences computed by our algorithms can significantly speed up current ASP solvers cmodels, clasp, and DLV.", "paper_title": "Computing Loops with at Most One External Support Rule", "paper_id": "WOS:000315457400003"}