{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "twin_functional_pearls"}, {"score": 0.004498812433096501, "phrase": "first-class_control_operators"}, {"score": 0.004299621153829837, "phrase": "rollback_logs"}, {"score": 0.004203343568960231, "phrase": "reversible_effects"}, {"score": 0.003971938976270902, "phrase": "complete_separation"}, {"score": 0.0038610400240820307, "phrase": "effectful_operations"}, {"score": 0.003370190834214415, "phrase": "checkpoint_mechanism"}, {"score": 0.0032208091960514128, "phrase": "effect_library"}, {"score": 0.002795228413298423, "phrase": "client_code"}, {"score": 0.0023579143175099324, "phrase": "core_parsing_task"}, {"score": 0.0022919762167777427, "phrase": "parser_code"}, {"score": 0.002215274527909304, "phrase": "error-correction_code"}, {"score": 0.0021049977753042253, "phrase": "run_time"}], "paper_keywords": ["Algorithms", " Design", " Languages", " checkpoint", " delimited control", " error repair"], "paper_abstract": "We present a technique, based on the use of first-class control operators, enabling programs to maintain and invoke rollback logs for sequences of reversible effects. Our technique is modular, in that it provides complete separation between some library of effectful operations, and a client, \"driver\" program which invokes and rolls back sequences of these operations. In particular, the checkpoint mechanism, which is entirely encapsulated within the effect library, logs not only the library's effects, but also the client's control state. Thus, logging and rollback can be almost completely transparent to the client code. This separation of concerns manifests itself nicely when we must implement software with sophisticated error handling. We illustrate with two examples that exploit the architecture to disentangle some core parsing task from its error management. The parser code is completely separate from the error-correction code, although the two components are deeply intertwined at run time.", "paper_title": "Modular Rollback through Control Logging A Pair of Twin Functional Pearls", "paper_id": "WOS:000297632700007"}