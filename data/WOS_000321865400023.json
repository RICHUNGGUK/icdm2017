{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "natural_proofs"}, {"score": 0.004624751696958501, "phrase": "completely_automated_reasoning"}, {"score": 0.004514241562580097, "phrase": "incomplete_procedures"}, {"score": 0.004424160689087029, "phrase": "common_reasoning_tactics"}, {"score": 0.004388631450145507, "phrase": "program_verification"}, {"score": 0.004266501496765747, "phrase": "separation_logic"}, {"score": 0.004181344088222025, "phrase": "dryad"}, {"score": 0.004131063310728304, "phrase": "recursive_definitions"}, {"score": 0.004081385289516914, "phrase": "explicit_quantification"}, {"score": 0.003920049436883885, "phrase": "classical_logic"}, {"score": 0.003719773848735395, "phrase": "proof_tactics"}, {"score": 0.003689880384710599, "phrase": "disciplined_unfoldings"}, {"score": 0.003660226272906374, "phrase": "formula_abstractions"}, {"score": 0.0035726811019151984, "phrase": "decidable_theories"}, {"score": 0.0035439655241057207, "phrase": "first-order_logic"}, {"score": 0.0034452601929727752, "phrase": "smt_solvers"}, {"score": 0.0032956583072431423, "phrase": "large_class"}, {"score": 0.0031780859997873803, "phrase": "full_functional_correctness"}, {"score": 0.0031398318568608505, "phrase": "proposed_natural_proof_method"}, {"score": 0.0029913511336659327, "phrase": "standard_data-structures"}, {"score": 0.0029553380263320195, "phrase": "schorr-waite_algorithm"}, {"score": 0.002931569771634119, "phrase": "garbage_collection"}, {"score": 0.002896274285996145, "phrase": "large_number"}, {"score": 0.002872979681637667, "phrase": "low-level_c_routines"}, {"score": 0.0028042108531816943, "phrase": "openbsd_library"}, {"score": 0.0027704444816096484, "phrase": "linux_kernel"}, {"score": 0.0027041233221381756, "phrase": "secure_verified_os-browser_project"}, {"score": 0.002534906456854208, "phrase": "full_functional_verification_properties"}, {"score": 0.0024543014947630876, "phrase": "loop_invariant_annotations"}, {"score": 0.002347628167175859, "phrase": "deductive_verification_technology"}, {"score": 0.002174155795026218, "phrase": "underlying_logic"}, {"score": 0.0021049977753042253, "phrase": "reliable_systems"}], "paper_keywords": ["heap analysis", " data structures", " natural proofs", " separation logic", " SMT solvers"], "paper_abstract": "We propose natura l proofs for reasoning with programs that manipulate data-structures against specifications that describe the structure of the heap, the data stored within it, and separation and framing of sub-structures. Natural proofs are a subclass of proofs that are amenable to completely automated reasoning, that provide sound but incomplete procedures, and that capture common reasoning tactics in program verification. We develop a dialect of separation logic over heaps, called Dryad, with recursive definitions that avoids explicit quantification. We develop ways to reason with heaplets using classical logic over the theory of sets, and develop natural proofs for reasoning using proof tactics involving disciplined unfoldings and formula abstractions. Natural proofs are encoded into decidable theories of first-order logic so as to be discharged using SMT solvers. We also implement the technique and show that a large class of more than 100 correct programs that manipulate data-structures are amenable to full functional correctness using the proposed natural proof method. These programs are drawn from a variety of sources including standard data-structures, the Schorr-Waite algorithm for garbage collection, a large number of low-level C routines from the Glib library and OpenBSD library, the Linux kernel, and routines from a secure verified OS-browser project. Our work is the first that we know of that can handle such a wide range of full functional verification properties of heaps automatically, given pre/post and loop invariant annotations. We believe that this work paves the way for deductive verification technology to be used by programmers who do not (and need not) understand the internals of the underlying logic solvers, significantly increasing their applicability in building reliable systems.", "paper_title": "Natural Proofs for Structure, Data, and Separation", "paper_id": "WOS:000321865400023"}