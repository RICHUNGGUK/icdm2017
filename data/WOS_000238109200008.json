{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "asynchronous_automata"}, {"score": 0.004721162131188487, "phrase": "zielonka's_theorem"}, {"score": 0.004278807087784626, "phrase": "synchronized_processes"}, {"score": 0.0041136473765874815, "phrase": "distributed_control_structure"}, {"score": 0.003728000957725218, "phrase": "new_algorithm"}, {"score": 0.0035141291835319682, "phrase": "non-deterministic_asynchronous_automaton"}, {"score": 0.0034118234596993836, "phrase": "regular_mazurkiewicz_trace_language"}, {"score": 0.0031532895341013297, "phrase": "unfolding_procedure"}, {"score": 0.0029722900280316216, "phrase": "zielonka's_and_pighizzini's_techniques"}, {"score": 0.002255431275670053, "phrase": "metivier's_work"}, {"score": 0.0021049977753042253, "phrase": "acyclic_dependence_alphabets"}], "paper_keywords": [""], "paper_abstract": "Zielonka's theorem shows that each regular set of Mazurkiewicz traces can be implemented as a system of synchronized processes provided with some distributed control structure called an asynchronous automaton. This paper gives a new algorithm for the synthesis of a non-deterministic asynchronous automaton from a regular Mazurkiewicz trace language. Our approach is based on an unfolding procedure that improves the complexity of Zielonka's and Pighizzini's techniques: Our construction is polynomial in terms of the number of states but still double-exponential in the size of the alphabet. As opposed to Metivier's work, our algorithm does not restrict to acyclic dependence alphabets.", "paper_title": "Unfolding synthesis of asynchronous automata", "paper_id": "WOS:000238109200008"}