{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "polynomial_approximations"}, {"score": 0.004645057834614705, "phrase": "hardware_implementation_trade-offs"}, {"score": 0.004541918674719973, "phrase": "piecewise_polynomial_approximations"}, {"score": 0.0042459818200777846, "phrase": "stored_coefficients"}, {"score": 0.004208002469225673, "phrase": "polynomial_interpolations"}, {"score": 0.003916098498242888, "phrase": "stored_function_values"}, {"score": 0.003611751858608048, "phrase": "additional_computations"}, {"score": 0.0034220655476652683, "phrase": "power_consumption"}, {"score": 0.0031559919178954644, "phrase": "optimized_approximations"}, {"score": 0.003099723664407622, "phrase": "different_functions"}, {"score": 0.003071965703296204, "phrase": "target_precisions"}, {"score": 0.003044455555031339, "phrase": "hardware_architectures"}, {"score": 0.002820319063320601, "phrase": "memory_savings"}, {"score": 0.0026009105281485888, "phrase": "field-programmable_gate_array"}, {"score": 0.0025089420019955232, "phrase": "high_output_precision"}, {"score": 0.0024641814990854463, "phrase": "considerable_area"}, {"score": 0.0023770362063833903, "phrase": "similar_savings"}, {"score": 0.0022218413146898887, "phrase": "interpolation-based_and_approximation-based_designs"}, {"score": 0.00216263228969761, "phrase": "design_trade-offs"}], "paper_keywords": ["algorithms implemented in hardware", " interpolation", " approximation", " VLSI systems"], "paper_abstract": "This paper examines the hardware implementation trade-offs when evaluating functions via piecewise polynomial approximations and interpolations for precisions of up to 24 bits. In polynomial approximations, polynomials are evaluated using stored coefficients. Polynomial interpolations, however, require the coefficients to be computed on-the-fly by using stored function values. Although it is known that interpolations require less memory than approximations, but at the expense of additional computations, the trade-offs in memory, area, delay, and power consumption between the two approaches have not been examined in detail. This work quantitatively analyzes these trade-offs for optimized approximations and interpolations across different functions and target precisions. Hardware architectures for degree-1 and degree-2 approximations and interpolations are described. The results show that the extent of memory savings realized by using interpolation is significantly lower than what is commonly believed. Furthermore, experimental results on a field-programmable gate array (FPGA) show that, for high output precision, degree-1 interpolations offer considerable area and power savings over degree-1 approximations, but similar savings are not realized when degree-2 interpolations and approximations are compared. The availability of both interpolation-based and approximation-based designs offers a richer set of design trade-offs than what is available using either interpolation or approximation alone.", "paper_title": "Hardware implementation trade-offs of polynomial approximations and interpolations", "paper_id": "WOS:000254054500009"}