{"auto_keywords": [{"score": 0.04005075526095261, "phrase": "automated_analysis"}, {"score": 0.03438275554507546, "phrase": "operational_semantics"}, {"score": 0.015487882988172847, "phrase": "potential_and_mandatory_choice"}, {"score": 0.004672444473700524, "phrase": "uml_sequence_diagrams"}, {"score": 0.004568326972997448, "phrase": "specification_language"}, {"score": 0.004301834610818624, "phrase": "great_value"}, {"score": 0.004237666411136617, "phrase": "system_development"}, {"score": 0.0036461569988218267, "phrase": "formal_semantics"}, {"score": 0.0028877818105020434, "phrase": "solid_starting_point"}, {"score": 0.002465593351432208, "phrase": "denotational_semantics"}, {"score": 0.0023390219342052623, "phrase": "negative_behavior"}, {"score": 0.0021049977753042253, "phrase": "sequence_diagrams"}], "paper_keywords": [""], "paper_abstract": "UML sequence diagrams is a specification language that has proved itself to be of great value in system development. When put to applications such as simulation, testing and other kinds of automated analysis there is a need for formal semantics. Such methods of automated analysis are by nature operational, and this motivates formalizing an operational semantics. In this paper we present an operational semantics for UML 2.0 sequence diagrams that we believe gives a solid starting point for developing methods for automated analysis. The operational semantics has been proved to be sound and complete with respect to a denotational semantics for the same language. It handles negative behavior as well as potential and mandatory choice. We are not aware of any other operational semantics for sequence diagrams of this strength.", "paper_title": "A fully general operational semantics for UML 2.0 sequence diagrams with potential and mandatory choice", "paper_id": "WOS:000240312100026"}