{"auto_keywords": [{"score": 0.03905783138344689, "phrase": "k_elements"}, {"score": 0.00481495049065317, "phrase": "top-k_queries"}, {"score": 0.004375286710337962, "phrase": "n_elements"}, {"score": 0.0038234000205958547, "phrase": "top-k_query"}, {"score": 0.0036639675955591065, "phrase": "maximum_probability"}, {"score": 0.0035487559182107112, "phrase": "highest_scores"}, {"score": 0.003511159930253876, "phrase": "random_instance"}, {"score": 0.003449379912099073, "phrase": "top-k_answer"}, {"score": 0.003412833120814178, "phrase": "fixed_s"}, {"score": 0.003247319029344241, "phrase": "dynamic_problem"}, {"score": 0.0031451673059794236, "phrase": "top-k_query_answer"}, {"score": 0.0030788521585190802, "phrase": "element_insertions"}, {"score": 0.002950374774004939, "phrase": "probability_function_p"}, {"score": 0.0029087480993530796, "phrase": "score_function"}, {"score": 0.00285753732066807, "phrase": "fully_dynamic_data_structure"}, {"score": 0.0027092368768921542, "phrase": "top-j_query"}, {"score": 0.0024094425220967273, "phrase": "building_block"}, {"score": 0.002325306388085057, "phrase": "all-top-k_problem"}, {"score": 0.002268161377269513, "phrase": "top-j_answers"}, {"score": 0.0021503823972534096, "phrase": "independent_interest"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Uncertain data", " Dynamic data structures"], "paper_abstract": "In an uncertain data set s = (S, p,f) where S is the ground set consisting of n elements, p : S -> [0, 1] a probability function, and f : S -> R a score function, each element i epsilon S with score f(i) appears independently with probability p(i). The top-k query on s asks for the set of k elements that has the maximum probability of appearing to be the k elements with the highest scores in a random instance of s. Computing the top-k answer on a fixed S is known to be easy. In this paper, we consider the dynamic problem, that is, how to maintain the top-k query answer when 8 changes, including element insertions and deletions in the ground set S, changes in the probability function p and in the score function f. We present a fully dynamic data structure that handles an update in O(k log n) time, and answers a top-j query in O(log n + j) time for any j <= k. The structure has O(n) size and can be constructed in O(n log k) time. As a building block of our dynamic structure, we present an algorithm for the all-top-k problem, that is, computing the top-j answers for all j = 1, ..., k, which may be of independent interest. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "A dynamic data structure for top-k queries on uncertain data", "paper_id": "WOS:000260975400022"}