{"auto_keywords": [{"score": 0.048661882068602086, "phrase": "high-speed_ip_address_lookup"}, {"score": 0.031346535008429696, "phrase": "cmpt"}, {"score": 0.02942033368394877, "phrase": "leaf_nodes"}, {"score": 0.00481495049065317, "phrase": "dynamic_and_scalable_high-speed_ip_address_lookup_based"}, {"score": 0.004466519142879166, "phrase": "wire-speed_packet_forwarding_routers"}, {"score": 0.0043560464825349275, "phrase": "optical_fiber"}, {"score": 0.004248294537944227, "phrase": "ip_address_lookup"}, {"score": 0.004184921610672245, "phrase": "major_bottleneck"}, {"score": 0.004143196873246147, "phrase": "high_performance_networks"}, {"score": 0.00396050388346298, "phrase": "novel_structure"}, {"score": 0.00392100783796804, "phrase": "compressed_multi-way"}, {"score": 0.0037106898330901534, "phrase": "dynamic_and_scalable_high-speed_ip_address_lookup"}, {"score": 0.0035648266669315943, "phrase": "practical_structure"}, {"score": 0.0033231814056233103, "phrase": "efficient_algorithms"}, {"score": 0.0032900200522703923, "phrase": "dynamic_prefix_insertion"}, {"score": 0.003066945490483524, "phrase": "independent_prefixes"}, {"score": 0.003021141590548526, "phrase": "search_indexes"}, {"score": 0.0029909851863915283, "phrase": "internal_nodes"}, {"score": 0.002873331232538783, "phrase": "nested_prefix_compression_technique"}, {"score": 0.002719055901632759, "phrase": "ip_address"}, {"score": 0.002678433668156676, "phrase": "longest_prefix_matching"}, {"score": 0.002534596206835737, "phrase": "forwarding_table"}, {"score": 0.002509284173541882, "phrase": "u_independent_prefixes"}, {"score": 0.002246955931290095, "phrase": "performance_evaluations"}, {"score": 0.002224510044064184, "phrase": "real_life"}, {"score": 0.0021912600076114033, "phrase": "promising_gains"}, {"score": 0.0021476967767071233, "phrase": "dynamic_update_speeds"}, {"score": 0.0021049977753042253, "phrase": "existing_b-tree_structures"}], "paper_keywords": ["IP address lookup", " forwarding table", " longest prefix matching", " dynamic update", " B plus tree"], "paper_abstract": "High-speed IP address lookup with fast prefix update is essential for designing wire-speed packet forwarding routers. The developments of optical fiber and 100 Gbps interface technologies have placed IP address lookup as the major bottleneck of high performance networks. In this paper, we propose a novel structure named Compressed Multi-way Prefix Tree (CMPT) based on B+ tree to perform dynamic and scalable high-speed IP address lookup. Our contributions are to design a practical structure for high-speed IP address lookup suitable for both IPv4 and IPv6 addresses, and to develop efficient algorithms for dynamic prefix insertion and deletion. By investigating the relationships among routing prefixes, we arrange independent prefixes as the search indexes on internal nodes of CMPT, and by leveraging a nested prefix compression technique, we encode all the routing prefixes on the leaf nodes. For any IP address, the longest prefix matching can be made at leaf nodes without backtracking. For a forwarding table with u independent prefixes. CMPT requires O(log(m) u) search time and O(m log(m) u) dynamic insert and delete time. Performance evaluations using real life IPv4 forwarding tables show promising gains in lookup and dynamic update speeds compared with the existing B-tree structures.", "paper_title": "Towards Dynamic and Scalable High-Speed IP Address Lookup Based on B plus Tree", "paper_id": "WOS:000309043000014"}