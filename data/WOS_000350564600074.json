{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "monitoring_and_control_for_commodity_networks"}, {"score": 0.004772818068176176, "phrase": "software-defined_networking"}, {"score": 0.004648609688625397, "phrase": "self-tuning_networks"}, {"score": 0.004567596860086148, "phrase": "network_conditions"}, {"score": 0.004468304427278713, "phrase": "important_events"}, {"score": 0.004128317208406523, "phrase": "global_network_state"}, {"score": 0.004074212307838049, "phrase": "link_utilization"}, {"score": 0.0038141000450978746, "phrase": "persistent_issues"}, {"score": 0.003747575730190958, "phrase": "link_failures"}, {"score": 0.003714748329627737, "phrase": "long-lasting_congestion"}, {"score": 0.003586278948128509, "phrase": "transient_problems"}, {"score": 0.003477505397536663, "phrase": "bursty_workloads"}, {"score": 0.0033144104794071484, "phrase": "planck"}, {"score": 0.0031845067058084613, "phrase": "oversubscribed_port"}, {"score": 0.0031289290660162145, "phrase": "network_information"}, {"score": 0.002903311792572216, "phrase": "recent_approaches"}, {"score": 0.0027905114793984084, "phrase": "switch_firmware"}, {"score": 0.002600661525224505, "phrase": "planck's_speed"}, {"score": 0.002488604965680912, "phrase": "traffic_engineering_application"}, {"score": 0.0024451427672857458, "phrase": "congested_flows"}, {"score": 0.0023604768913655463, "phrase": "planck-driven_traffic_engineering"}, {"score": 0.0021049977753042253, "phrase": "previous_schemes"}], "paper_keywords": ["Networking Measurement", " Software-Defined Networking", " Traffic Engineering"], "paper_abstract": "Software-defined networking introduces the possibility of building self-tuning networks that constantly monitor network conditions and react rapidly to important events such as congestion. Unfortunately, state-of-the-art monitoring mechanisms for conventional networks require hundreds of milliseconds to seconds to extract global network state, like link utilization or the identity of \"elephant\" flows. Such latencies are adequate for responding to persistent issues, e.g., link failures or long-lasting congestion, but are inadequate for responding to transient problems, e.g., congestion induced by bursty workloads sharing a link. In this paper, we present Planck, a novel network measurement architecture that employs oversubscribed port mirroring to extract network information at 280 mu s-7 ms timescales on a 1 Gbps commodity switch and 275 mu s timescales on a 10 Gbps commodity switch, over 11x and 18x faster than recent approaches, respectively (and up to 291x if switch firmware allowed buffering to be disabled on some ports). To demonstrate the value of Planck's speed and accuracy, we use it to drive a traffic engineering application that can reroute congested flows in milliseconds. On a 10 Gbps commodity switch, Planck-driven traffic engineering achieves aggregate throughput within 1-4% of optimal for most workloads we evaluated, even with flows as small as 50 MiB, an improvement of up to 53% over previous schemes.", "paper_title": "Planck: Millisecond-scale Monitoring and Control for Commodity Networks", "paper_id": "WOS:000350564600074"}