{"auto_keywords": [{"score": 0.048278809602004064, "phrase": "sequential_patterns"}, {"score": 0.03172763314666614, "phrase": "pisa"}, {"score": 0.02322715664816485, "phrase": "sequential_pattern_mining"}, {"score": 0.022190270055117065, "phrase": "static_database"}, {"score": 0.015045985123124992, "phrase": "poi"}, {"score": 0.010526117810407506, "phrase": "progressive_database"}, {"score": 0.009543839192393504, "phrase": "old_data"}, {"score": 0.005425167046344431, "phrase": "incremental_database"}, {"score": 0.0045212970824266485, "phrase": "increasing_data"}, {"score": 0.004164905340575487, "phrase": "newly_arriving_patterns"}, {"score": 0.00409705742220184, "phrase": "frequent_sequential_patterns"}, {"score": 0.003942995906058182, "phrase": "obsolete_sequential_patterns"}, {"score": 0.003836497950356168, "phrase": "reported_results"}, {"score": 0.0037124763118311734, "phrase": "recent_data"}, {"score": 0.003682100144121148, "phrase": "old_ones"}, {"score": 0.0036320225018459263, "phrase": "dynamic_nature"}, {"score": 0.0036121819729961384, "phrase": "data_addition"}, {"score": 0.0035435867326548665, "phrase": "general_model"}, {"score": 0.0032909488752766503, "phrase": "progressive_algorithm"}, {"score": 0.0032372917632693403, "phrase": "progressive_mining_of"}, {"score": 0.0031671030360367843, "phrase": "defined_time_period"}, {"score": 0.0030730639262332698, "phrase": "sliding_window"}, {"score": 0.0029736479837154843, "phrase": "progressive_sequential_tree"}, {"score": 0.002933177132609548, "phrase": "latest_data_sequences"}, {"score": 0.0029011962350829956, "phrase": "complete_set"}, {"score": 0.0028853364056356584, "phrase": "up-to-date_sequential_patterns"}, {"score": 0.002776712155766836, "phrase": "sequential_pattern_tree"}, {"score": 0.002672166323548487, "phrase": "memory_space"}, {"score": 0.002571546590108763, "phrase": "alternative_method"}, {"score": 0.002557484218266225, "phrase": "direct_appending"}, {"score": 0.0024410093024417527, "phrase": "special_cases"}, {"score": 0.0024210112323786374, "phrase": "progressive_sequential_pattern_mining"}, {"score": 0.00239460114991662, "phrase": "start_time"}, {"score": 0.0023815040848961435, "phrase": "end_time"}, {"score": 0.0022176061978080837, "phrase": "experimental_results"}, {"score": 0.002163535133532765, "phrase": "prior_methods"}, {"score": 0.0021516991383785985, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "graceful_scalability"}], "paper_keywords": ["progressive sequential pattern"], "paper_abstract": "Although there have been many recent studies on the mining of sequential patterns in a static database and in a database with increasing data, these works, in general, do not fully explore the effect of deleting old data from the sequences in the database. When sequential patterns are generated, the newly arriving patterns may not be identified as frequent sequential patterns due to the existence of old data and sequences. Even worse, the obsolete sequential patterns that are not frequent recently may stay in the reported results. In practice, users are usually more interested in the recent data than the old ones. To capture the dynamic nature of data addition and deletion, we propose a general model of sequential pattern mining with a progressive database while the data in the database may be static, inserted, or deleted. In addition, we present a progressive algorithm Pisa, which stands for Progressive mIning of Sequential pAtterns, to progressively discover sequential patterns in defined time period of interest (POI). The POI is a sliding window continuously advancing as the time goes by. Pisa utilizes a progressive sequential tree to efficiently maintain the latest data sequences, discover the complete set of up-to-date sequential patterns, and delete obsolete data and patterns accordingly. The height of the sequential pattern tree proposed is bounded by the length of POI, thereby effectively limiting the memory space required by Pisa that is significantly smaller than the memory needed by the alternative method, Direct Appending (DirApp). Note that the sequential pattern mining with a static database and with an incremental database are special cases of the progressive sequential pattern mining. By changing Start time and End time of the POI, Pisa can easily deal with a static database or an incremental database as well. Complexity of algorithms proposed is analyzed. The experimental results show that Pisa not only significantly outperforms the prior methods in execution time by orders of magnitude but also possesses graceful scalability.", "paper_title": "A general model for sequential pattern mining with a progressive database", "paper_id": "WOS:000257760700001"}