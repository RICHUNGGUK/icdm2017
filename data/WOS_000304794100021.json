{"auto_keywords": [{"score": 0.04841960597199349, "phrase": "hybrid_algorithm"}, {"score": 0.04749520186100097, "phrase": "convex_hull"}, {"score": 0.01556384438336407, "phrase": "convex_hull_computation"}, {"score": 0.004815133528682739, "phrase": "gpu"}, {"score": 0.004331501320993783, "phrase": "gpu-based_interior_point_filter"}, {"score": 0.003935892934907777, "phrase": "remaining_points"}, {"score": 0.0038379217092877295, "phrase": "cpu."}, {"score": 0.0036676174658755683, "phrase": "incremental_manner"}, {"score": 0.0034348484776384643, "phrase": "original_points"}, {"score": 0.0033832583769880576, "phrase": "pseudo-hull_computation"}, {"score": 0.0032658649336454923, "phrase": "cpu_architectures"}, {"score": 0.0031845067058084583, "phrase": "underlying_approach"}, {"score": 0.0031366648074858555, "phrase": "high_dimensional_point_sets"}, {"score": 0.002922705896608178, "phrase": "candidate_points"}, {"score": 0.002750934994181092, "phrase": "commodity_cpus"}, {"score": 0.0025892330566358503, "phrase": "cpu-based_filtering_algorithm"}, {"score": 0.0024617483174454113, "phrase": "nvidia_geforce_gtx"}, {"score": 0.0023762535034673017, "phrase": "overall_performance"}, {"score": 0.002282166507956957, "phrase": "static_point_sets"}, {"score": 0.0021807544600219216, "phrase": "deforming_point_sets"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Convex hull computation", " GPU", " Interior point culling filter"], "paper_abstract": "We present a hybrid algorithm to compute the convex hull of points in three or higher dimensional spaces. Our formulation uses a GPU-based interior point filter to cull away many of the points that do not lie on the boundary. The convex hull of remaining points is computed on a CPU. The CPU-based filter proceeds in an incremental manner and computes a pseudo-hull that is contained inside the convex hull of the original points. The pseudo-hull computation involves only localized operations and maps well to CPU architectures. Furthermore, the underlying approach extends to high dimensional point sets and deforming points. In practice, our culling filter can reduce the number of candidate points by two orders of magnitude. We have implemented the hybrid algorithm on commodity CPUs, and evaluated its performance on several large point sets. In practice, the CPU-based filtering algorithm can cull up to 85 M interior points per second on an NVIDIA GeForce GTX 580 and the hybrid algorithm improves the overall performance of convex hull computation by 10-27 times (for static point sets) and 22-46 times (for deforming point sets). (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "GPU accelerated convex hull computation", "paper_id": "WOS:000304794100021"}