{"auto_keywords": [{"score": 0.04813254873980984, "phrase": "software_systems"}, {"score": 0.00481495049065317, "phrase": "software_model_inference_techniques"}, {"score": 0.004732444672509326, "phrase": "crucial_role"}, {"score": 0.004493275458211613, "phrase": "development_process"}, {"score": 0.004431554974667461, "phrase": "considerable_manual_effort"}, {"score": 0.00425141240073214, "phrase": "numerous_techniques"}, {"score": 0.0041211075804202905, "phrase": "model_generation_task"}, {"score": 0.004050442607427367, "phrase": "increasingly_accurate_algorithms"}, {"score": 0.003980984488865867, "phrase": "machine_learning"}, {"score": 0.003926273177600597, "phrase": "empirical_perspective"}, {"score": 0.0035637052288771706, "phrase": "subject_systems"}, {"score": 0.0030814613175385672, "phrase": "numerous_submissions"}, {"score": 0.002895246938820814, "phrase": "extensive_empirical_evaluations"}, {"score": 0.002451730979693715, "phrase": "best_techniques"}, {"score": 0.0023275553629639395, "phrase": "useful_basis"}, {"score": 0.0023114798074455453, "phrase": "empirical_software_engineering"}, {"score": 0.0022404996930993413, "phrase": "new_techniques"}, {"score": 0.0021049977753042253, "phrase": "active_participation"}], "paper_keywords": ["Model inference", " Software specification", " Competition", " State machines"], "paper_abstract": "Models play a crucial role in the development and maintenance of software systems, but are often neglected during the development process due to the considerable manual effort required to produce them. In response to this problem, numerous techniques have been developed that seek to automate the model generation task with the aid of increasingly accurate algorithms from the domain of Machine Learning. From an empirical perspective, these are extremely challenging to compare; there are many factors that are difficult to control (e.g. the richness of the input and the complexity of subject systems), and numerous practical issues that are just as troublesome (e.g. tool availability). This paper describes the StaMinA (State Machine Inference Approaches) competiton, that was designed to address these problems. The competition attracted numerous submissions, many of which were improved or adapted versions of techniques that had not been subjected to extensive empirical evaluations, and had not been evaluated with respect to their ability to infer models of software systems. This paper shows how many of these techniques substantially improve on the state of the art, providing insights into some of the factors that could underpin the success of the best techniques. In a more general sense it demonstrates the potential for competitions to act as a useful basis for empirical software engineering by (a) spurring the development of new techniques and (b) facilitating their comparative evaluation to an extent that would usually be prohibitively challenging without the active participation of the developers.", "paper_title": "STAMINA: a competition to encourage the development and assessment of software model inference techniques", "paper_id": "WOS:000321126100005"}