{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "process_virtualization"}, {"score": 0.004757643419056999, "phrase": "virtual_execution_environment"}, {"score": 0.004682288586254123, "phrase": "unmodified_application"}, {"score": 0.004481132747216135, "phrase": "provided_layer"}, {"score": 0.004187049198138107, "phrase": "additional_operations"}, {"score": 0.004039221742250308, "phrase": "regular_program_execution"}, {"score": 0.004007083686875716, "phrase": "software_dynamic_instrumentation"}, {"score": 0.0037740295668681014, "phrase": "application's_code"}, {"score": 0.003729065012001506, "phrase": "inserted_code"}, {"score": 0.003611751858608048, "phrase": "process_virtualization_system"}, {"score": 0.0035687137873965684, "phrase": "software_code_cache_techniques"}, {"score": 0.0034841647157189985, "phrase": "customized_dynamic_instrumentation_tools"}, {"score": 0.0032423089921154503, "phrase": "arbitrary_applications"}, {"score": 0.0030171910207671205, "phrase": "virtual_environment"}, {"score": 0.0029931603112397084, "phrase": "native_execution"}, {"score": 0.002922207118572208, "phrase": "desired_extra_operations"}, {"score": 0.00288736193515505, "phrase": "particular_tool"}, {"score": 0.002686821995335494, "phrase": "ad-hoc_basis"}, {"score": 0.002623111480310373, "phrase": "observed_problems"}, {"score": 0.0026022112631368223, "phrase": "target_applications"}, {"score": 0.0025405019456703325, "phrase": "necessary_set"}, {"score": 0.0025202582748972122, "phrase": "transparency_requirements"}, {"score": 0.0024901940672239784, "phrase": "mainstream_windows_and_linux_applications"}, {"score": 0.0024506642262508735, "phrase": "possible_solutions"}, {"score": 0.002421428191952395, "phrase": "transparency_issue"}, {"score": 0.002373472641477602, "phrase": "different_choices"}, {"score": 0.0021821915946356168, "phrase": "better_design"}, {"score": 0.002147540520631409, "phrase": "transparent_dynamic_instrumentation"}], "paper_keywords": ["Process Virtualization", " Dynamic Instrumentation", " Transparency", " Runtime System"], "paper_abstract": "Process virtualization provides a virtual execution environment within which an unmodified application can be monitored and controlled while it executes. The provided layer of control can be used for purposes ranging from sandboxing to compatibility to profiling. The additional operations required for this layer are performed clandestinely alongside regular program execution. Software dynamic instrumentation is one method for implementing process virtualization which dynamically instruments an application such that the application's code and the inserted code are interleaved together. DynamoRIO is a process virtualization system implemented using software code cache techniques that allows users to build customized dynamic instrumentation tools. There are many challenges to building such a runtime system. One major obstacle is transparency. In order to support executing arbitrary applications, DynamoRIO must be fully transparent so that an application cannot distinguish between running inside the virtual environment and native execution. In addition, any desired extra operations for a particular tool must avoid interfering with the behavior of the application. Transparency has historically been provided on an ad-hoc basis, as a reaction to observed problems in target applications. This paper identifies a necessary set of transparency requirements for running mainstream Windows and Linux applications. We discuss possible solutions to each transparency issue, evaluate tradeoffs between different choices, and identify cases where maintaining transparency is not practically solvable. We believe this will provide a guideline for better design and implementation of transparent dynamic instrumentation, as well as other similar process virtualization systems using software code caches.", "paper_title": "Transparent Dynamic Instrumentation", "paper_id": "WOS:000308657200013"}