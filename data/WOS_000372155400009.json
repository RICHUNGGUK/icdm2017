{"auto_keywords": [{"score": 0.048886391350397976, "phrase": "integer_signedness_errors"}, {"score": 0.00481495049065317, "phrase": "integer_signedness_error_detection"}, {"score": 0.004754600386388821, "phrase": "data_flow_analysis"}, {"score": 0.004463958296056236, "phrase": "severe_damages"}, {"score": 0.0044079880067019765, "phrase": "computer_systems"}, {"score": 0.004298134888203576, "phrase": "significant_advances"}, {"score": 0.004035282762331904, "phrase": "exploitable_and_harmful_signedness_errors"}, {"score": 0.0038853212888610234, "phrase": "important_challenge"}, {"score": 0.003579179502431823, "phrase": "signflow"}, {"score": 0.0035120164504478437, "phrase": "instrumentation-based_integer_signedness_error_detector"}, {"score": 0.0033814348757887232, "phrase": "unharmful_signedness_errors"}, {"score": 0.0032763212574036748, "phrase": "static_data_flow_analysis"}, {"score": 0.0032148229832850215, "phrase": "unharmful_integer_sign_conversions"}, {"score": 0.003075765038696993, "phrase": "source_operands"}, {"score": 0.002980124909321296, "phrase": "conversion_results"}, {"score": 0.002905752244360772, "phrase": "security-related_program_points"}, {"score": 0.002815383690003621, "phrase": "security_checks"}, {"score": 0.0027625134766418266, "phrase": "remaining_conversions"}, {"score": 0.002676587673012276, "phrase": "runtime_protection"}, {"score": 0.002299830460180699, "phrase": "harmful_integer_signedness_bugs"}, {"score": 0.0021049977753042253, "phrase": "false_positives"}], "paper_keywords": ["Integer signedness error", " data flow analysis", " instrumentation", " sanitization"], "paper_abstract": "Integer signedness errors can be exploited by adversaries to cause severe damages to computer systems. Despite the significant advances in automating the detection of integer signedness errors, accurately differentiating exploitable and harmful signedness errors from unharmful ones is an important challenge. In this paper, we present the design and implementation of SignFlow, an instrumentation-based integer signedness error detector to reduce the reports for unharmful signedness errors. SignFlow first utilizes static data flow analysis to identify unharmful integer sign conversions from the view of where the source operands originate and whether the conversion results can propagate to security-related program points, and then inserts security checks for the remaining conversions so as to accomplish runtime protection. We evaluated SignFlow on 8 real-world harmful integer signedness bugs, SPECint 2006 benchmarks together with 5 real-world applications. The experimental results show that SignFlow correctly detected all harmful integer signedness bugs (i.e. no false negatives) and achieved a reduction of 41% in false positives over IntFlow, the state of the art.", "paper_title": "Improving the Accuracy of Integer Signedness Error Detection Using Data Flow Analysis", "paper_id": "WOS:000372155400009"}