{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "post-silicon_validation"}, {"score": 0.004303404058571052, "phrase": "silicon_respin"}, {"score": 0.003845994935767022, "phrase": "pre-silicon_verification"}, {"score": 0.0032491108935498794, "phrase": "implementation_costs"}, {"score": 0.002615381301695394, "phrase": "process_data"}, {"score": 0.0025326211341475903, "phrase": "erroneous_module"}, {"score": 0.002244876254113051, "phrase": "debug_architecture"}, {"score": 0.0021738146596180404, "phrase": "blocking_bugs"}, {"score": 0.0021049977753042253, "phrase": "deterministic_debug_experiments"}], "paper_keywords": ["Blocking bugs", " post-silicon validation"], "paper_abstract": "Once a bug is found during post-silicon validation, before committing to a silicon respin of the design it is expected that any other bugs, which have escaped pre-silicon verification, to be also identified. This will minimize the number of respins, which in turn will reduce the implementation costs. However, this is hindered by the presence of blocking bugs in one erroneous module that inhibit the search for bugs in other parts of the chip that process data received from this erroneous module. To address this problem, in this paper we propose a novel embedded debug architecture for bypassing the blocking bugs when dealing with deterministic debug experiments.", "paper_title": "Embedded Debug Architecture for Bypassing Blocking Bugs During Post-Silicon Validation", "paper_id": "WOS:000288681400004"}