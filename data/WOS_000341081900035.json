{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java"}, {"score": 0.014449350497699515, "phrase": "hpc"}, {"score": 0.004466519142879166, "phrase": "high_performance_computing"}, {"score": 0.004312622975366672, "phrase": "current_multi-core_era"}, {"score": 0.004227064760262924, "phrase": "significant_benefits"}, {"score": 0.00396050388346298, "phrase": "parallel_programming"}, {"score": 0.0038048583022763796, "phrase": "hpc_community"}, {"score": 0.0037106898330901534, "phrase": "fastmpj"}, {"score": 0.0032900200522703923, "phrase": "memory_communications"}, {"score": 0.0032571885279065126, "phrase": "java_threads"}, {"score": 0.0031606404966938568, "phrase": "full_advantage"}, {"score": 0.003129096013910623, "phrase": "high-speed_cluster_networks"}, {"score": 0.0030060256866508606, "phrase": "low-latency_and_high_bandwidth_communications"}, {"score": 0.002902304851882577, "phrase": "scalable_collective_library"}, {"score": 0.002873331232538783, "phrase": "topology_aware_primitives"}, {"score": 0.002719055901632759, "phrase": "java_data"}, {"score": 0.002665027876903161, "phrase": "zero-copy_protocols"}, {"score": 0.002459414063407306, "phrase": "comprehensive_performance_evaluation"}, {"score": 0.0024348510123716424, "phrase": "representative_testbeds"}, {"score": 0.002410534841778012, "phrase": "infiniband"}, {"score": 0.0023745087648471613, "phrase": "gigabit_ethernet"}, {"score": 0.0023040642263522505, "phrase": "memory_systems"}, {"score": 0.0022133711375320266, "phrase": "rival_native_mpi_implementations"}, {"score": 0.002115592443589729, "phrase": "java_hpc"}, {"score": 0.0021049977753042253, "phrase": "parallel_applications"}], "paper_keywords": ["High performance computing (HPC)", " Parallel computing", " Message-Passing in Java (MPJ)", " Communication middleware", " High-speed networks", " Performance evaluation"], "paper_abstract": "The performance and scalability of communications are key for high performance computing (HPC) applications in the current multi-core era. Despite the significant benefits (e.g., productivity, portability, multithreading) of Java for parallel programming, its poor communications support has hindered its adoption in the HPC community. This paper presents FastMPJ, an efficient message-passing in Java (MPJ) library, boosting Java for HPC by: (1) providing high-performance shared memory communications using Java threads; (2) taking full advantage of high-speed cluster networks (e.g., InfiniBand) to provide low-latency and high bandwidth communications; (3) including a scalable collective library with topology aware primitives, automatically selected at runtime; (4) avoiding Java data buffering overheads through zero-copy protocols; and (5) implementing the most widely extended MPI-like Java bindings for a highly productive development. The comprehensive performance evaluation on representative testbeds (InfiniBand, 10 Gigabit Ethernet, Myrinet, and shared memory systems) has shown that FastMPJ communication primitives rival native MPI implementations, significantly improving the efficiency and scalability of Java HPC parallel applications.", "paper_title": "FastMPJ: a scalable and efficient Java message-passing library", "paper_id": "WOS:000341081900035"}