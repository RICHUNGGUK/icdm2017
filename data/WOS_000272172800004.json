{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parse_trees"}, {"score": 0.004769182299692333, "phrase": "metrics-guided_grammar_refactoring"}, {"score": 0.004418287966422041, "phrase": "particular_development_language"}, {"score": 0.003977403701783668, "phrase": "software_development_tools"}, {"score": 0.003773680962197766, "phrase": "development_language"}, {"score": 0.0031466527290980686, "phrase": "grammar_recovery"}, {"score": 0.0031018195951638882, "phrase": "hard-coded_parser"}, {"score": 0.0029996699429582835, "phrase": "manual_instrumentation"}, {"score": 0.002887028262617443, "phrase": "automatic_grammar_recovery"}, {"score": 0.002699960312990493, "phrase": "iterative_grammar"}, {"score": 0.002648768009464535, "phrase": "recursive_grammar"}, {"score": 0.002549269480908849, "phrase": "case_study"}, {"score": 0.002327648608736437, "phrase": "recovered_grammar"}], "paper_keywords": ["Grammar", " grammar recovery", " grammar refactoring", " grammar metrics", " parse tree"], "paper_abstract": "Many software development tools that assist with tasks such as testing and maintenance are specific to a particular development language and require a parser for that language. Because a grammar is required to develop a parser, construction of these software development tools is dependent upon the availability of a grammar for the development language. However, a grammar is not always available for a language and, in these cases, acquiring a grammar is the most difficult, costly, and time-consuming phase of tool construction. In this paper, we describe a methodology for grammar recovery from a hard-coded parser. Our methodology is comprised of manual instrumentation of the parser, a technique for automatic grammar recovery from parse trees, and a semiautomatic metrics-guided approach to refactoring an iterative grammar to obtain a recursive grammar. We present the results of a case study in which we recover and refactor a grammar from version 4.0.0 of the GNU C++ parser and then refactor the recovered grammar using our metrics-guided approach. Additionally, we present an evaluation of the recovered and refactored grammar by comparing it to the ISO C++98 grammar.", "paper_title": "Grammar Recovery from Parse Trees and Metrics-Guided Grammar Refactoring", "paper_id": "WOS:000272172800004"}