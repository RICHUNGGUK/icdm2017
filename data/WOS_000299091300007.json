{"auto_keywords": [{"score": 0.04409251033766783, "phrase": "np"}, {"score": 0.034395935681768686, "phrase": "shortest_path"}, {"score": 0.00481495049065317, "phrase": "simple_wriggling"}, {"score": 0.0045052562941109734, "phrase": "fat_hippo"}, {"score": 0.0038698476651328898, "phrase": "polygonal_domain"}, {"score": 0.0031693980719538287, "phrase": "long_snake"}, {"score": 0.0031096747349602344, "phrase": "polygonal_obstacles"}, {"score": 0.002881793492919646, "phrase": "positive_side"}, {"score": 0.0027479040199262393, "phrase": "snake's_problem"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time"}], "paper_keywords": ["Computational geometry", " Shortest paths", " Motion planning", " VLSI"], "paper_abstract": "We prove that it is NP-hard to decide whether two points in a polygonal domain with holes can be connected by a wire. This implies that finding any approximation to the shortest path for a long snake amidst polygonal obstacles is NP-hard. On the positive side, we show that snake's problem is \"length-tractable\": if the snake is \"fat\", i.e., its length/width ratio is small, the shortest path can be computed in polynomial time.", "paper_title": "Simple Wriggling is Hard Unless You Are a Fat Hippo", "paper_id": "WOS:000299091300007"}