{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_activities"}, {"score": 0.004724020632103649, "phrase": "shared_memory_machine"}, {"score": 0.004634799977448855, "phrase": "crucial_issue"}, {"score": 0.004576253356889219, "phrase": "modern_software"}, {"score": 0.004349337717774093, "phrase": "multi-core_processors"}, {"score": 0.004213240903095234, "phrase": "concurrency_abstractions"}, {"score": 0.004055511503825102, "phrase": "application_logic"}, {"score": 0.003978866233891427, "phrase": "synchronization_concern"}, {"score": 0.0036864465771943933, "phrase": "fine-grained_and_expressive_strategies"}, {"score": 0.003503497128638099, "phrase": "new_concurrency_abstraction"}, {"score": 0.0033084729942065142, "phrase": "expressive_means"}, {"score": 0.0030847461428168614, "phrase": "clean_separation"}, {"score": 0.003026391655379905, "phrase": "coordination_concern"}, {"score": 0.002988101395789399, "phrase": "application_code"}, {"score": 0.0029502941554043964, "phrase": "expressive_and_reusable_strategies"}, {"score": 0.002750721367040336, "phrase": "full_access"}, {"score": 0.0026307897899760383, "phrase": "parallel_execution"}, {"score": 0.0025974916908139472, "phrase": "dispatched_requests"}, {"score": 0.0024063484128685367, "phrase": "small_domain-specific_aspect_language"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["synchronization", " concurrent activities", " parallel execution", " scheduler"], "paper_abstract": "Coordination of parallel activities on a shared memory machine is a crucial issue for modern software, even more with the advent of multi-core processors. Unfortunately, traditional concurrency abstractions force programmers to tangle the application logic with the synchronization concern, thereby compromising understandability and reuse, and fall short when fine-grained and expressive strategies are needed. This paper presents a new concurrency abstraction called POM, parallel object monitor, supporting expressive means for coordination of parallel activities over one or more objects, while allowing a clean separation of the coordination concern from application code. Expressive and reusable strategies for concurrency control can be designed, thanks to a full access to the queue of pending requests, parallel execution of dispatched requests together with after-actions, and complete control over reentrancy. A small domain-specific aspect language is provided to adequately configure pre-packaged, off-the-shelf synchronizations. Copyright (C) 2007 John Wiley & Sons, Ltd.", "paper_title": "Parallel object monitors", "paper_id": "WOS:000258545100002"}