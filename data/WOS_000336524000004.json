{"auto_keywords": [{"score": 0.0382906149558718, "phrase": "pairwise_dependencies"}, {"score": 0.03530717122973143, "phrase": "udgp"}, {"score": 0.00481495049065317, "phrase": "tree_based_linkage_learner"}, {"score": 0.004719816332271661, "phrase": "evolutionary_algorithms"}, {"score": 0.004392565073466714, "phrase": "optimum_solution"}, {"score": 0.004254467919664946, "phrase": "necessary_process"}, {"score": 0.004187049198138107, "phrase": "hard_problems"}, {"score": 0.00405538690701843, "phrase": "common_recombination_operators"}, {"score": 0.004023120753104693, "phrase": "simple_genetic_algorithm"}, {"score": 0.0038965930422333035, "phrase": "effective_linkage_learner"}, {"score": 0.0038195342195623764, "phrase": "graph_theory"}, {"score": 0.003090500352315642, "phrase": "mst"}, {"score": 0.0030292784088033838, "phrase": "dependency_graph"}, {"score": 0.002981216610222911, "phrase": "sufficient_population"}, {"score": 0.00287583918696114, "phrase": "mutual_information"}, {"score": 0.002752075650871066, "phrase": "linkage_information"}, {"score": 0.0027192536281209463, "phrase": "proposed_approach"}, {"score": 0.00255068452076921, "phrase": "costly_fit-to-data_evaluations"}, {"score": 0.0024408799645640345, "phrase": "algorithm_description"}, {"score": 0.002382987346529592, "phrase": "proposed_technique"}, {"score": 0.002244178699939059, "phrase": "similar_approaches"}, {"score": 0.002199725773957207, "phrase": "experimental_results"}, {"score": 0.002147540520631409, "phrase": "linkage_groups"}, {"score": 0.002121913011761504, "phrase": "polynomial_number"}, {"score": 0.0021049977753042253, "phrase": "fitness_evaluations"}], "paper_keywords": ["Linkage learning", " graph theory", " maximum spanning tree", " estimation of distribution algorithms", " optimization problems", " decomposable functions", " mutual information", " AI"], "paper_abstract": "Linkage learning in evolutionary algorithms is identifying the structure of the dependencies between variables of a problem in order to find the optimum solution of the problem. It is a necessary process for optimizing the hard problems that can not be optimized randomly via common recombination operators of simple genetic algorithm. This paper presents a simple yet effective linkage learner that works based on graph theory. A graph is used as the structure to keep the pairwise dependencies between variables of the problem. We call this graph 'the underlying dependency graph of the problem' (UDGP). Maximum spanning tree (MST) of the UDGP is then found. It is shown that MST contains all the necessary linkages if the dependency graph is built upon sufficient population. In this approach, pairwise dependencies that are mutual information between each pair of variables, are used to find linkage information. The proposed approach has the advantage of being capable of learning the linkage without the need for the costly fit-to-data evaluations of model search. It is parameter free and the algorithm description is straight forward. The proposed technique is tested on several benchmark problems and it is shown to be able to compete with similar approaches. Based on the experimental results it can successfully find the linkage groups in a polynomial number of fitness evaluations.", "paper_title": "Maximum spanning tree based linkage learner", "paper_id": "WOS:000336524000004"}