{"auto_keywords": [{"score": 0.04885877600670671, "phrase": "frequent_patterns"}, {"score": 0.00481495049065317, "phrase": "huge_databases"}, {"score": 0.004753194996637899, "phrase": "tremendously_large_numbers"}, {"score": 0.0040708542958968605, "phrase": "existing_patterns"}, {"score": 0.003865826699096508, "phrase": "search_space"}, {"score": 0.0028530201960995896, "phrase": "i.e._mining"}, {"score": 0.0025394700487126414, "phrase": "significantly_large_datasets"}, {"score": 0.0021883400011393564, "phrase": "billion_transactions"}], "paper_keywords": ["parallel data mining", " frequent pattern mining", " constraint-based mining", " share-nothing memory"], "paper_abstract": "When computationally feasible, mining huge databases produces tremendously large numbers of frequent patterns. In many cases, it is impractical to mine those datasets due to their sheer size; not only the extent of the existing patterns, but mainly the magnitude of the search space. Many approaches have suggested the use of constraints to apply to the patterns or searching for frequent patterns in parallel. So far, those approaches are still not genuinely effective to mine extremely large datasets. We propose a method that combines both strategies efficiently, i.e. mining in parallel for the set of patterns while pushing constraints. Using this approach we could mine significantly large datasets; with sizes never reported in the literature before. We are able to effectively discover frequent patterns in a database made of billion transactions using a 32 processors cluster in less than an hour and a half.", "paper_title": "Parallel Bifold: Large-scale parallel pattern mining with constraints", "paper_id": "WOS:000241897400003"}