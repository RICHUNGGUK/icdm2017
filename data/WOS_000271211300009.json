{"auto_keywords": [{"score": 0.04788181103940386, "phrase": "moore's_law"}, {"score": 0.044356039019745455, "phrase": "dynamic_analysis"}, {"score": 0.00481495049065317, "phrase": "concurrent_dynamic_analysis_framework"}, {"score": 0.004769958800452922, "phrase": "multicore_hardware"}, {"score": 0.004529881123652277, "phrase": "harder_problems"}, {"score": 0.004383406949799696, "phrase": "high-level_languages"}, {"score": 0.004342430078306461, "phrase": "virtual_machine_technology"}, {"score": 0.004301834610818624, "phrase": "binary_rewriting"}, {"score": 0.003807242767474929, "phrase": "multiple_cores"}, {"score": 0.00375395061615019, "phrase": "faster_processors"}, {"score": 0.0037188360359702182, "phrase": "future_systems"}, {"score": 0.0036324746826127997, "phrase": "relatively_higher_cost"}, {"score": 0.0034657012607680173, "phrase": "abstraction_costs"}, {"score": 0.003095923814666088, "phrase": "cache-friendly_asymmetric_buffering"}, {"score": 0.0030669532478212625, "phrase": "cab"}, {"score": 0.0028986672783671147, "phrase": "efficient_communication"}, {"score": 0.002650857539177183, "phrase": "dynamic_analysis_overheads"}, {"score": 0.0025892330566358503, "phrase": "exhaustive_and_sampling_event_processing"}, {"score": 0.002447101794397243, "phrase": "five_popular_and_diverse_analyses"}, {"score": 0.0024014759148123736, "phrase": "performance_improvements"}, {"score": 0.0023456351719724957, "phrase": "efficient_inter-core_communication"}, {"score": 0.002301896758256577, "phrase": "high_performance_parallel_systems"}, {"score": 0.002248366278757655, "phrase": "cab_design"}], "paper_keywords": ["Experimentation", " Performance", " Measurement", " Dynamic Analysis", " Profiling", " Multicore", " Instrumentation"], "paper_abstract": "Software has spent the bounty of Moore's law by solving harder problems and exploiting abstractions, such as high-level languages, virtual machine technology, binary rewriting, and dynamic analysis. Abstractions make programmers more productive and programs more portable, but usually slow them down. Since Moore's law is now delivering multiple cores instead of faster processors, future systems must either bear a relatively higher cost for abstractions or use some cores to help tolerate abstraction costs. This paper presents the design, implementation, and evaluation of a novel concurrent, configurable dynamic analysis framework that efficiently utilizes multicore cache architectures. It introduces Cache-friendly Asymmetric Buffering (CAB), a lock-free ring-buffer that implements efficient communication between application and analysis threads. We guide the design and implementation of our framework with a model of dynamic analysis overheads. The framework implements exhaustive and sampling event processing and is analysis-neutral. We evaluate the framework with five popular and diverse analyses, and show performance improvements even for lightweight, low-overhead analyses. Efficient inter-core communication is central to high performance parallel systems and we believe the CAB design gives insight into the subtleties and difficulties of attaining it for dynamic analysis and other parallel software.", "paper_title": "A Concurrent Dynamic Analysis Framework for Multicore Hardware", "paper_id": "WOS:000271211300009"}