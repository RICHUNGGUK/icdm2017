{"auto_keywords": [{"score": 0.03348243005934554, "phrase": "library_developer"}, {"score": 0.00481495049065317, "phrase": "dense_linear_algebra_algorithms"}, {"score": 0.0047689174754929195, "phrase": "high-performance_multi-accelerator_implementations"}, {"score": 0.004611224230543916, "phrase": "increasingly_important_role"}, {"score": 0.004567129988306349, "phrase": "scientific_computing"}, {"score": 0.004229158339021651, "phrase": "traditional_general-purpose_cpus"}, {"score": 0.004108942392772092, "phrase": "dense_linear_algebra"}, {"score": 0.0038047474331318974, "phrase": "libflame_library"}, {"score": 0.0034392837410790293, "phrase": "multiple_accelerators"}, {"score": 0.0033575566897536906, "phrase": "platform_specific_complexity"}, {"score": 0.0033094525227603012, "phrase": "library_code_base"}, {"score": 0.003034916887102753, "phrase": "new_operation"}, {"score": 0.0029627701619228527, "phrase": "generalized_hermitian_positive_definite_eigenvalue_problem"}, {"score": 0.002906727412680496, "phrase": "hermitian"}, {"score": 0.0027697290872182477, "phrase": "multi-gpu_platform"}, {"score": 0.0025034338848015166, "phrase": "multi-accelerator_platform"}, {"score": 0.0023178219772486868, "phrase": "first_library"}, {"score": 0.002251813863195168, "phrase": "multi-gpu_functionality"}, {"score": 0.0022302306304023602, "phrase": "dense_matrix_computations"}, {"score": 0.0021876814398268775, "phrase": "new_standard"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Dense linear algebra libraries", " Graphics processors", " Runtime systems", " High performance computing"], "paper_abstract": "Parallel accelerators are playing an increasingly important role in scientific computing. However, it is perceived that their weakness nowadays is their reduced \"programmability\" in comparison with traditional general-purpose CPUs. For the domain of dense linear algebra, we demonstrate that this is not necessarily the case. We show how the libflame library carefully layers routines and abstracts details related to storage and computation, so that extending it to take advantage of multiple accelerators is achievable without introducing platform specific complexity into the library code base. We focus on the experience of the library developer as he develops a library routine for a new operation, reduction of a generalized Hermitian positive definite eigenvalue problem to a standard Hermitian form, and configures the library to target a multi-GPU platform. It becomes obvious that the library developer does not need to know about the parallelization or the details of the multi-accelerator platform. Excellent performance on a system with four NVIDIA Tesla C2050 GPUs is reported. This makes libflame the first library to be released that incorporates multi-GPU functionality for dense matrix computations, setting a new standard for performance. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "The FLAME approach: From dense linear algebra algorithms to high-performance multi-accelerator implementations", "paper_id": "WOS:000307156000010"}