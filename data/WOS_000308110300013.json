{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high_dimensional_model_representation"}, {"score": 0.03483220185213116, "phrase": "increasing_dimension_number"}, {"score": 0.029249049511225127, "phrase": "dimension_number"}, {"score": 0.004678713405582845, "phrase": "mpi"}, {"score": 0.004645081295104307, "phrase": "cuda."}, {"score": 0.004449045430179066, "phrase": "vertical_bar"}, {"score": 0.004096082254543022, "phrase": "continuous_functions"}, {"score": 0.0038119123317396954, "phrase": "divide-and-conquer_algorithm"}, {"score": 0.0036640806940633373, "phrase": "low-variate_data"}, {"score": 0.003373181367365139, "phrase": "huge_volumes"}, {"score": 0.003230665474330377, "phrase": "corresponding_nodes"}, {"score": 0.003028067500715357, "phrase": "individual_pc"}, {"score": 0.003006353490112716, "phrase": "huge_volume"}, {"score": 0.0028076592725295646, "phrase": "hdmr_terms"}, {"score": 0.002538470301402269, "phrase": "first_step"}, {"score": 0.002362105010110277, "phrase": "newly_obtained_equalities"}, {"score": 0.0022379017425216917, "phrase": "ram_problem"}, {"score": 0.0021979660485319523, "phrase": "high_volume"}, {"score": 0.0021049977753042253, "phrase": "parallelized_method"}], "paper_keywords": ["Parallel algorithms", " Data partitioning", " Multivariate interpolation", " MPI programming", " CUDA programming"], "paper_abstract": "If the values of a multivariate function f(x (1),x (2),aEuro broken vertical bar,x (N) ) are given at only a finite number of points in the space of its arguments and an interpolation which employs continuous functions is considered standard multivariate routines may become cumbersome as the dimensionality grows. This urges us to develop a divide-and-conquer algorithm which approximates the function. The given multivariate data are partitioned into low-variate data. This approach is called High Dimensional Model Representation (HDMR). However, the method in its current form is not applicable to problems having huge volumes of data. With the increasing dimension number and the number of the corresponding nodes, the volume of data in question reaches such a high level that it is beyond the capacity of any individual PC because huge volume of data requires much higher RAM capacity. Another aspect is that the structure of equalities used in the calculation of HDMR terms varies according to the dimension number of the problem. The number of loops in the algorithm increases with the increasing dimension number. In this work, as a first step, the equations used are modified in such a way that their structure does not depend on the dimension number. With the newly obtained equalities, the method becomes appropriate for parallelization. Due to the parallelization, the RAM problem arising from problems with high volume of data is solved. Finally, the performance of the parallelized method is analyzed.", "paper_title": "A modified method of calculating High Dimensional Model Representation (HDMR) Terms for parallelization with MPI and CUDA", "paper_id": "WOS:000308110300013"}