{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "insertion_time"}, {"score": 0.004446349752828045, "phrase": "efficient_technique"}, {"score": 0.004315487055548749, "phrase": "large_hash_tables"}, {"score": 0.004230382915464492, "phrase": "high_space_utilization"}, {"score": 0.0041469500929423595, "phrase": "guaranteed_constant_access_times"}, {"score": 0.0034660938095219846, "phrase": "k_different_hash_functions"}, {"score": 0.0032004205378150354, "phrase": "random-walk_heuristic"}, {"score": 0.003044785536429499, "phrase": "online_fashion_new_items"}, {"score": 0.002955050521440921, "phrase": "hash_table"}, {"score": 0.0023028105026714533, "phrase": "theoretically_achievable_load_threshold"}, {"score": 0.0021049977753042253, "phrase": "maximum_insertion_time"}], "paper_keywords": ["information retrieval", " hashing", " random graphs and hypergraphs"], "paper_abstract": "Cuckoo hashing is an efficient technique for creating large hash tables with high space utilization and guaranteed constant access times. There, each item can be placed in a location given by any one out of k different hash functions. In this paper we investigate the random-walk heuristic for inserting in an online fashion new items into the hash table. Provided that k >= 3 and that the number of items in the table is below (but arbitrarily close to) the theoretically achievable load threshold, we show a polylogarithmic bound for the maximum insertion time that holds with probability 1 - o(1) as the size of the table grows large.", "paper_title": "ON THE INSERTION TIME OF CUCKOO HASHING", "paper_id": "WOS:000328889400005"}