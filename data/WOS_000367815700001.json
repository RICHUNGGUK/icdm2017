{"auto_keywords": [{"score": 0.047424145546337115, "phrase": "dtd_graphs"}, {"score": 0.04678174467471837, "phrase": "xsd_graphs"}, {"score": 0.0416461944039994, "phrase": "xsd"}, {"score": 0.004713162564945179, "phrase": "high-level_conceptual_design"}, {"score": 0.004326987090971404, "phrase": "conceptual_modeling"}, {"score": 0.004265760046406154, "phrase": "xml_applications"}, {"score": 0.004058205843096226, "phrase": "dtd"}, {"score": 0.0031170894906119998, "phrase": "isa"}, {"score": 0.002923214590192792, "phrase": "n-ary_relationship"}, {"score": 0.0027610089418453614, "phrase": "transformation_rules"}, {"score": 0.002664221051021009, "phrase": "large_class"}, {"score": 0.0026264601495742295, "phrase": "xml_schemas"}, {"score": 0.002516350372379076, "phrase": "users'_requirements"}, {"score": 0.002445514186654732, "phrase": "dtd_graph"}, {"score": 0.0023766673143502384, "phrase": "minimum_number"}, {"score": 0.002342972434255588, "phrase": "redundancy-free_fragments"}, {"score": 0.0022287497627555895, "phrase": "good_properties"}, {"score": 0.0021049977753042253, "phrase": "query_processing"}], "paper_keywords": ["DTD graphs", " XSD graphs", " DTDs", " XSDs"], "paper_abstract": "XML has too many low-level details that hinder high-level conceptual design. We therefore propose DTD graphs and XSD graphs as a mean for conceptual modeling of XML applications. Similar to document type definitions (DTDs) and XML schema definitions (XSDs), DTD graphs and XSD graphs are trees, and as such they can easily be mapped to DTDs and XSDs for implementation. Unlike DTDs and XSDs, DTD graphs and XSD graphs capture various high-level data semantics such as cardinality, ISA, participation, aggregation, categorization, and n-ary relationship. Furthermore, this paper also presents transformation rules between DTDs and a large class of XML Schemas and an algorithm that inputs users' requirements and outputs a DTD graph that has a minimum number of redundancy-free fragments. As a result of these good properties, the resulting DTD or XSD facilitates query processing and update.", "paper_title": "Designing Redundancy-Free XML Schema: A Smallest Closure Approach", "paper_id": "WOS:000367815700001"}