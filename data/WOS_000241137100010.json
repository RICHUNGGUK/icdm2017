{"auto_keywords": [{"score": 0.04777539582166082, "phrase": "process_models"}, {"score": 0.04315213743226446, "phrase": "process_model"}, {"score": 0.004760518730536645, "phrase": "observed_behavior"}, {"score": 0.0044634416051962545, "phrase": "organization-specific_process_model"}, {"score": 0.004313713204732449, "phrase": "web_service"}, {"score": 0.004264923517966271, "phrase": "desired_service_description"}, {"score": 0.004168986485488861, "phrase": "normative_process_model"}, {"score": 0.004075198669927074, "phrase": "process_mining_techniques"}, {"score": 0.0039684322717435045, "phrase": "different_notions"}, {"score": 0.0036645642553325215, "phrase": "existing_notions"}, {"score": 0.003435643372146385, "phrase": "binary_answer"}, {"score": 0.0031845067058084583, "phrase": "real-life_applications"}, {"score": 0.0031010029460927864, "phrase": "slightly_different_models"}, {"score": 0.0030775481952377017, "phrase": "completely_different_models"}, {"score": 0.002574523719093119, "phrase": "completely_new_way"}, {"score": 0.0023952639120005193, "phrase": "typical_behavior"}, {"score": 0.0022115879730677, "phrase": "petri_nets"}, {"score": 0.0021049977753042253, "phrase": "executable_semantics"}], "paper_keywords": ["process equivalence", " Petri nets", " process mining"], "paper_abstract": "In various application domains there is a desire to compare process models, e.g., to relate an organization-specific process model to a reference model, to find a web service matching some desired service description, or to compare some normative process model with a process model discovered using process mining techniques. Although many researchers have worked on different notions of equivalence (e.g., trace equivalence, bisimulation, branching bisimulation, etc.), most of the existing notions are not very useful in this context. First of all, most equivalence notions result in a binary answer (i.e., two processes are equivalent or not). This is not very helpful, because, in real-life applications, one needs to differentiate between slightly different models and completely different models. Second, not all parts of a process model are equally important. There may be parts of the process model that are rarely activated while other parts are executed for most process instances. Clearly, these should be considered differently. To address these problems, this paper proposes a completely new way of comparing process models. Rather than directly comparing two models, the process models are compared with respect to some typical behavior. This way we are able to avoid the two problems. Although the results are presented in the context of Petri nets, the approach can be applied to any process modeling language with executable semantics.", "paper_title": "Process equivalence: Comparing two process models based on observed behavior", "paper_id": "WOS:000241137100010"}