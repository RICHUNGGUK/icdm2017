{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pegasus"}, {"score": 0.004582528208024817, "phrase": "coordinated_use"}, {"score": 0.004537401559396022, "phrase": "computational_resources"}, {"score": 0.004492717291734985, "phrase": "workflow_definition_languages"}, {"score": 0.0038919354605673104, "phrase": "physical_resources"}, {"score": 0.0037039021744127783, "phrase": "workflow_management_system"}, {"score": 0.003455765987713262, "phrase": "available_resources"}, {"score": 0.0034047882921717913, "phrase": "pegasus_workflow_management_system"}, {"score": 0.0033214855341753544, "phrase": "concrete_execution_plans"}, {"score": 0.003192406091820197, "phrase": "large-scale_e-science_applications"}, {"score": 0.003038066486989815, "phrase": "resource_allocation_decisions"}, {"score": 0.0029784342137867776, "phrase": "workflow_evaluation"}, {"score": 0.002579622880371082, "phrase": "adaptive_processing"}, {"score": 0.002504011301105577, "phrase": "existing_workflow_management_system"}, {"score": 0.0023476849595393872, "phrase": "runtime_performance"}, {"score": 0.002223039450439376, "phrase": "resulting_infrastructure"}, {"score": 0.0022010965931147735, "phrase": "grid_middleware"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["adaptive", " rescheduling", " workflows"], "paper_abstract": "Workflows are widely used in applications that require coordinated use of computational resources. Workflow definition languages typically abstract over some aspects of the way in which a workflow is to be executed, such as the level of parallelism to be used or the physical resources to be deployed. As a result, a workflow management system has the responsibility of establishing how best to execute a workflow given the available resources. The Pegasus workflow management system compiles abstract workflows into concrete execution plans, and has been widely used in large-scale e-Science applications. This paper describes an extension to Pegasus whereby resource allocation decisions are revised during workflow evaluation, in the light of feedback on the performance of jobs at runtime. The contributions of this paper include: (i) a description of how adaptive processing has been retrofitted to an existing workflow management system; (ii) a scheduling algorithm that allocates resources based on runtime performance; and (iii) an experimental evaluation of the resulting infrastructure using grid middleware over clusters. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "Adaptive workflow processing and execution in Pegasus", "paper_id": "WOS:000271401300002"}