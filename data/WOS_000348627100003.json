{"auto_keywords": [{"score": 0.041048078735704104, "phrase": "cbs"}, {"score": 0.00675749084704409, "phrase": "individual_agents"}, {"score": 0.006695174690065304, "phrase": "single_'joint_agent"}, {"score": 0.005164262972379327, "phrase": "low_level"}, {"score": 0.00481495049065317, "phrase": "optimal_multi-agent_pathfinding"}, {"score": 0.004755723591767513, "phrase": "multi-agent_pathfinding_problem"}, {"score": 0.004568198442824687, "phrase": "respective_start"}, {"score": 0.004099116259721107, "phrase": "single-agent_search_variants"}, {"score": 0.003937379670109389, "phrase": "conflict_based_search"}, {"score": 0.003876879827074979, "phrase": "new_optimal_multi-agent_pathfinding_algorithm"}, {"score": 0.003817306032290766, "phrase": "two-level_algorithm"}, {"score": 0.003644001325962353, "phrase": "high_level"}, {"score": 0.0035548008271253607, "phrase": "conflict_tree"}, {"score": 0.003362011310643577, "phrase": "ct"}, {"score": 0.0031894452350840147, "phrase": "fast_singleagent_searches"}, {"score": 0.003092109667890803, "phrase": "high_level_ct_node"}, {"score": 0.003044558129699338, "phrase": "two-level_formulation"}, {"score": 0.002723044628491828, "phrase": "cbs."}, {"score": 0.0026399046763432906, "phrase": "single-agent_searches"}, {"score": 0.0025832180231667853, "phrase": "ma-cbs"}, {"score": 0.0025277455170687746, "phrase": "small_groups"}, {"score": 0.0025121156016001886, "phrase": "joint_agents"}, {"score": 0.0024429654627197393, "phrase": "basic_cbs"}, {"score": 0.0022889103976458437, "phrase": "optimal_and_complete_mapf_solver"}, {"score": 0.002239743716564573, "phrase": "experimental_results"}, {"score": 0.0021445492649196955, "phrase": "previous_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heuristic search", " Multi-agent", " Pathfinding"], "paper_abstract": "In the multi-agent pathfinding problem (MAPF) we are given a set of agents each with respective start and goal positions. The task is to find paths for all agents while avoiding collisions. Most previous work on solving this problem optimally has treated the individual agents as a single 'joint agent' and then applied single-agent search variants of the A* algorithm. In this paper we present the Conflict Based Search (CBS) a new optimal multi-agent pathfinding algorithm. CBS is a two-level algorithm that does not convert the problem into the single 'joint agent' model. At the high level, a search is performed on a Conflict Tree (CT) which is a tree based on conflicts between individual agents. Each node in the CT represents a set of constraints on the motion of the agents. At the low level, fast singleagent searches are performed to satisfy the constraints imposed by the high level CT node. In many cases this two-level formulation enables CBS to examine fewer states than A* while still maintaining optimality. We analyze CBS and show its benefits and drawbacks. Additionally we present the Meta-Agent CBS (MA-CBS) algorithm. MA-CBS is a generalization of CBS. Unlike basic CBS, MA-CBS is not restricted to single-agent searches at the low level. Instead, MA-CBS allows agents to be merged into small groups of joint agents. This mitigates some of the drawbacks of basic CBS and further improves performance. In fact, MA-CBS is a framework that can be built on top of any optimal and complete MAPF solver in order to enhance its performance. Experimental results on various problems show a speedup of up to an order of magnitude over previous approaches. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Conflict-based search for optimal multi-agent pathfinding", "paper_id": "WOS:000348627100003"}