{"auto_keywords": [{"score": 0.035231073541781545, "phrase": "previous_work"}, {"score": 0.00481495049065317, "phrase": "graphics_hardware"}, {"score": 0.004739056045644449, "phrase": "hierarchical_depth"}, {"score": 0.004590820632326585, "phrase": "important_optimization"}, {"score": 0.004342430078306461, "phrase": "modern_high_performance_graphics_processors"}, {"score": 0.003978866233891427, "phrase": "layered_depth_representation"}, {"score": 0.00385431710959668, "phrase": "per-sample_mask"}, {"score": 0.0031845067058084583, "phrase": "delayed_feedback_loop"}, {"score": 0.002917604283241353, "phrase": "competing_algorithms"}, {"score": 0.0023346234464901978, "phrase": "optimal_culling_oracle"}, {"score": 0.0021049977753042253, "phrase": "hierarchical_depth_buffer"}], "paper_keywords": ["Occlusion Culling", " Depth Buffer", " Graphics Hardware"], "paper_abstract": "Hierarchical depth culling is an important optimization, which is present in all modern high performance graphics processors. We present a novel culling algorithm based on a layered depth representation, with a per-sample mask indicating which layer each sample belongs to. Our algorithm is feed forward in nature in contrast to previous work, which rely on a delayed feedback loop. It is simple to implement and has fewer constraints than competing algorithms, which makes it easier to load-balance a hardware architecture. Compared to previous work our algorithm performs very well, and it will often reach over 90% of the efficiency of an optimal culling oracle. Furthermore, we can reduce bandwidth by up to 16% by compressing the hierarchical depth buffer.", "paper_title": "Masked Depth Culling for Graphics Hardware", "paper_id": "WOS:000363671200025"}