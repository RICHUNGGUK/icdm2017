{"auto_keywords": [{"score": 0.03656616829869208, "phrase": "finite_quandle"}, {"score": 0.00481495049065317, "phrase": "finite_quandles"}, {"score": 0.0045726187330434025, "phrase": "maple_implementations"}, {"score": 0.0037834649508375544, "phrase": "finitely_presented_quandle"}, {"score": 0.003353521531649663, "phrase": "automorphism_group"}, {"score": 0.0029980260560551982, "phrase": "arbitrary_binary_operation_tables"}, {"score": 0.002680114113899346, "phrase": "stand-alone_c_program"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["virtual knot invariants", " finite quandles", " symbolic computation"], "paper_abstract": "Algorithms are described and Maple implementations are provided for finding all quandles of order n, as well as computing all homomorphisms between two finite quandles or from a finitely presented quandle (e.g., a knot quandle) to a finite quandle, computing the automorphism group of a finite quandle, etc. Several of these programs work for arbitrary binary operation tables and hence algebraic structures other than quandles. We also include a stand-alone C program which finds quandles of order it and provide URLs for files containing the results for n = 6, 7 and 8. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "Symbolic computation with finite quandles", "paper_id": "WOS:000238102900004"}