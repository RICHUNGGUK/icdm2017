{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "longest_common_increasing_subsequence"}, {"score": 0.004476399615305783, "phrase": "common_increasing_subsequence"}, {"score": 0.004289966839994858, "phrase": "increasing_subsequence"}, {"score": 0.0034049123167891955, "phrase": "longest_common_increasing_subsequences"}, {"score": 0.003223494720348768, "phrase": "space_complexity"}, {"score": 0.0031845067058084583, "phrase": "yang_et_al"}, {"score": 0.0031269043024513567, "phrase": "i.h._yang"}, {"score": 0.003089080923888397, "phrase": "c.r_huang"}, {"score": 0.003051713660488494, "phrase": "k.m._chao"}, {"score": 0.0022923586577645143, "phrase": "vertical_bar_x_vertical_bar"}, {"score": 0.002264607102799332, "phrase": "vertical_bar_y_vertical_bar"}], "paper_keywords": ["algorithms", " longest common subsequence", " longest increasing subsequence"], "paper_abstract": "Let X and Y be sequences of integers. A common increasing subsequence of X and Y is an increasing subsequence common to X and Y. In this note, we propose an O(vertical bar X vertical bar center dot vertical bar Y vertical bar)-time and O(vertical bar X vertical bar + vertical bar Y vertical bar)-space algorithm for finding one of the longest common increasing subsequences of X and Y, which improves the space complexity of Yang et al. [I.H. Yang, C.R Huang, K.M. Chao, A fast algorithm for computing a longest common increasing subsequence, Inform. Process. Lett. 93 (2005) 249-253] O(vertical bar X vertical bar center dot vertical bar Y vertical bar)-time and O(vertical bar X vertical bar center dot vertical bar Y vertical bar)-space algorithm, where vertical bar X vertical bar and vertical bar Y vertical bar denote the lengths of X and Y, respectively. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "A linear space algorithm for computing a longest common increasing subsequence", "paper_id": "WOS:000239078400008"}