{"auto_keywords": [{"score": 0.05007837343017575, "phrase": "automated_theorem"}, {"score": 0.04916104605092017, "phrase": "agda"}, {"score": 0.004286708921931472, "phrase": "martin-lof's_intuitionistic_type_theory"}, {"score": 0.0040708542958968605, "phrase": "interactive_proving"}, {"score": 0.003865826699096508, "phrase": "simple_but_tedious_parts"}, {"score": 0.0037188360359702182, "phrase": "proof_search"}, {"score": 0.0036006068766833103, "phrase": "type_theory"}, {"score": 0.003531474887552889, "phrase": "proof_terms"}, {"score": 0.0034636656250083744, "phrase": "proof_term"}, {"score": 0.003353521531649663, "phrase": "agda_type-checker"}, {"score": 0.002985130390111069, "phrase": "human_readable_results"}, {"score": 0.00281635677605879, "phrase": "generated_proofs"}, {"score": 0.0022312377180023282, "phrase": "agda_community"}, {"score": 0.002132420504803564, "phrase": "automated_proof"}, {"score": 0.0021049977753042253, "phrase": "intuitionistic_type_theory"}], "paper_keywords": [""], "paper_abstract": "We present a tool for automated theorem proving in Agda, an implementation of Martin-Lof's intuitionistic type theory. The tool is intended to facilitate interactive proving by relieving the user from filling in simple but tedious parts of a proof. The proof search is conducted directly in type theory and produces proof terms. Any proof term is verified by the Agda type-checker, which ensures soundness of the tool. Some effort has been spent on trying to produce human readable results, which allows the user to examine the generated proofs. We have tested the tool on examples mainly in the area of (functional) program verification. Most examples we have considered contain induction, and some contain generalisation. The contribution of this work outside the Agda community is to extend the experience of automated proof for intuitionistic type theory.", "paper_title": "A tool for automated theorem proving in Agda", "paper_id": "WOS:000235656800010"}