{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_service_applications"}, {"score": 0.007431986762088077, "phrase": "service_partners"}, {"score": 0.004421770937919324, "phrase": "dynamically_bounded_services"}, {"score": 0.004095323392273661, "phrase": "definitive_description"}, {"score": 0.003891140864902669, "phrase": "runtime_monitoring"}, {"score": 0.003760685138103153, "phrase": "behavioural_correctness_properties"}, {"score": 0.0036657110980445416, "phrase": "finite_state_automata"}, {"score": 0.003309124298009635, "phrase": "finite_execution_traces"}, {"score": 0.003170953611801335, "phrase": "bpel"}, {"score": 0.0027662954811372154, "phrase": "adaptation_strategies"}, {"score": 0.002332133125576037, "phrase": "stated_pre-"}, {"score": 0.0021049977753042253, "phrase": "generated_recovery_plans"}], "paper_keywords": ["Web services", " LTS", " Behavioural properties", " Pre- and post-conditions", " Runtime monitoring", " Planning", " SAT solving"], "paper_abstract": "Web service applications are distributed processes that are composed of dynamically bounded services. In this paper, we give a definitive description of a framework for performing runtime monitoring of web service applications against behavioural correctness properties described as finite state automata. These properties specify forbidden and desired interactions between service partners. Finite execution traces of web service applications described in BPEL are checked for conformance at runtime. When violations are discovered, our framework automatically proposes adaptation strategies, in the form of plans, which users can select for execution. Our framework also allows verification of stated pre- and post-conditions of service partners and provides guarantees of correctness of the generated recovery plans.", "paper_title": "Monitoring and recovery for web service applications", "paper_id": "WOS:000315592300004"}