{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cache"}, {"score": 0.006194742196453393, "phrase": "bt"}, {"score": 0.005541060398934939, "phrase": "llc"}, {"score": 0.004913401522606718, "phrase": "lru"}, {"score": 0.004748832495727873, "phrase": "pseudo-lru_policies"}, {"score": 0.004651346011959237, "phrase": "concurrently_running_applications"}, {"score": 0.004603352344461032, "phrase": "chip_multiprocessors"}, {"score": 0.004431554974667461, "phrase": "shared_last-level_cache"}, {"score": 0.0043106348117582915, "phrase": "overall_performance"}, {"score": 0.0042809216371527785, "phrase": "recent_studies"}, {"score": 0.003994780550602818, "phrase": "true_least"}, {"score": 0.0038857317730249114, "phrase": "underlying_cache_replacement_policy"}, {"score": 0.003576060405460302, "phrase": "low_storage_overhead"}, {"score": 0.0034424690391411093, "phrase": "lru-based_cache_partitioning_techniques"}, {"score": 0.0033834012029672423, "phrase": "commodity_processors"}, {"score": 0.003124437382827821, "phrase": "binary_tree"}, {"score": 0.0030285690317007805, "phrase": "true_lru's_stack_property"}, {"score": 0.002976581914095474, "phrase": "profiling_logic"}, {"score": 0.0029458177077921043, "phrase": "curve_approximation_methods"}, {"score": 0.0029052913631676435, "phrase": "hit_curve"}, {"score": 0.0028554143163813947, "phrase": "varied_way_allocations"}, {"score": 0.0027582072733520475, "phrase": "hybrid_partitioning_mechanism"}, {"score": 0.0026828233195176155, "phrase": "predicted_hit_curve"}, {"score": 0.002655087144676306, "phrase": "actual_statistics"}, {"score": 0.0026367554281038572, "phrase": "simulation_results"}, {"score": 0.0025119200240696824, "phrase": "stack-estimate_proposal"}, {"score": 0.002460240519198386, "phrase": "similar_results"}, {"score": 0.0024179854244287795, "phrase": "weighted_speedup"}, {"score": 0.0023847032316716503, "phrase": "cache_configurations"}, {"score": 0.0022955150243239623, "phrase": "last-level_cache"}, {"score": 0.002149231173009159, "phrase": "hardware_cost"}, {"score": 0.0021343846011837204, "phrase": "nearly_two_thirds"}, {"score": 0.0021049977753042253, "phrase": "hybrid_mechanism"}], "paper_keywords": ["cache partitioning", " pseudo-LRU", " curve approximation"], "paper_abstract": "As the number of concurrently running applications on the chip multiprocessors (CMPs) is increasing, efficient management of the shared last-level cache (LLC) is crucial to guarantee overall performance. Recent studies have shown that cache partitioning can provide benefits in throughput, fairness and quality of service. Most prior arts apply true Least Recently Used (LRU) as the underlying cache replacement policy and rely on its stack property to work properly. However, in commodity processors, pseudo-LRU policies without stack property are commonly used instead of LRU for their simplicity and low storage overhead. Therefore, this study sets out to understand whether LRU-based cache partitioning techniques can be applied to commodity processors. In this work, we instead propose a cache partitioning mechanism for two popular pseudo-LRU policies: Not Recently Used (NRU) and Binary Tree (BT). Without the help of true LRU's stack property, we propose a profiling logic that applies curve approximation methods to derive the hit curve (hit counts under varied way allocations) for an application. We then propose a hybrid partitioning mechanism, which mitigates the gap between the predicted hit curve and the actual statistics. Simulation results demonstrate that our proposal can improve throughput by 15.3% on average and outperforms the stack-estimate proposal by 12.6% on average. Similar results can be achieved in weighted speedup. For the cache configurations under study, it requires less than 0.5% storage overhead compared to the last-level cache. In addition, we also show that profiling mechanism with only one true LRU ATD achieves comparable performance and can further reduce the hardware cost by nearly two thirds compared with the hybrid mechanism.", "paper_title": "Improving Cache Partitioning Algorithms for Pseudo-LRU Policies", "paper_id": "WOS:000329009300002"}