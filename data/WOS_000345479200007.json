{"auto_keywords": [{"score": 0.04827794640391151, "phrase": "knowledge_transfer"}, {"score": 0.015719716506582538, "phrase": "pair_programming"}, {"score": 0.004130376386308024, "phrase": "novice-expert_constellations"}, {"score": 0.0037446875860947916, "phrase": "good_\"expert"}, {"score": 0.003468053168607071, "phrase": "in-depth_investigation"}, {"score": 0.0033660587983313536, "phrase": "professional_pair_programming_sessions"}, {"score": 0.0033374705499418377, "phrase": "interaction_analysis"}, {"score": 0.0032950412841674026, "phrase": "six_teaching_strategies"}, {"score": 0.003211788912325178, "phrase": "direct_instructions"}, {"score": 0.00317095235382607, "phrase": "\"subtle_hints"}, {"score": 0.0028623555849897632, "phrase": "cognitive_apprenticeship"}, {"score": 0.002838033152426417, "phrase": "novice_articulation"}, {"score": 0.002465210678474529, "phrase": "agile_prioritisation"}, {"score": 0.002433843373780471, "phrase": "business_value"}, {"score": 0.0024028742248152425, "phrase": "educational_progression"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Pair programming", " Knowledge transfer", " Interaction analysis", " Cognitive apprenticeship", " Qualitative analysis"], "paper_abstract": "Whilst knowledge transfer is one of the most widely-claimed benefits of pair programming, little is known about how knowledge transfer is achieved in this setting. This is particularly pertinent for novice-expert constellations, but knowledge transfer takes place to some degree in all constellations. We ask \"what does it take to be a good \"expert\" and how can a \"novice\" best learn from a more experienced developer?\". An in-depth investigation of video and audio excerpts of professional pair programming sessions using Interaction Analysis reveals: six teaching strategies, ranging from \"giving direct instructions\" to \"subtle hints\"; and challenges and benefits for both partners. These strategies are instantiations of some but not all teaching methods promoted in cognitive apprenticeship; novice articulation, reflection and exploration are not seen in the data. The context of pair programming influences the strategies, challenges and benefits, in particular the roles of driver and navigator and agile prioritisation which considers business value rather than educational progression. Utilising these strategies more widely and recognizing the challenges and benefits for both partners will help developers to maximise the benefits from pairing sessions. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Knowledge transfer in pair programming: An in-depth analysis", "paper_id": "WOS:000345479200007"}