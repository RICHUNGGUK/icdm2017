{"auto_keywords": [{"score": 0.03095495176165837, "phrase": "proposed_family_signature"}, {"score": 0.00481495049065317, "phrase": "smartphone_applications"}, {"score": 0.004787116526591974, "phrase": "malware_family_signatures"}, {"score": 0.004745665541429529, "phrase": "sharp_increase"}, {"score": 0.004718230196581402, "phrase": "smartphone_malware"}, {"score": 0.004583403452794034, "phrase": "android_platform"}, {"score": 0.004530552828603269, "phrase": "dominant_position"}, {"score": 0.004504355451608786, "phrase": "smartphone_popularity"}, {"score": 0.004439519886195092, "phrase": "android_malware"}, {"score": 0.0043629425069254945, "phrase": "critical_threat"}, {"score": 0.004325148424301224, "phrase": "smartphone_users"}, {"score": 0.004141012346542414, "phrase": "existing_malware"}, {"score": 0.0039531986393405785, "phrase": "malware_families"}, {"score": 0.0038962653593060427, "phrase": "android_malware_population"}, {"score": 0.0038624981944755813, "phrase": "conventional_technique"}, {"score": 0.003773870856027139, "phrase": "signature_matching"}, {"score": 0.0037087324991876727, "phrase": "time_perspective"}, {"score": 0.003581797255879607, "phrase": "malware_variants"}, {"score": 0.0035404549430318065, "phrase": "counter_approach"}, {"score": 0.003479331357315815, "phrase": "variants_behavior_analysis_techniques"}, {"score": 0.0034192594083899026, "phrase": "extensive_time"}, {"score": 0.003311799410921826, "phrase": "android_malware_detection_mechanism"}, {"score": 0.0032830808525570903, "phrase": "automated_family_signature_extraction"}, {"score": 0.003264073180191501, "phrase": "family_signature_matching"}, {"score": 0.0032451751960451214, "phrase": "key_concept"}, {"score": 0.0031523087131407205, "phrase": "family_representative_binary_patterns"}, {"score": 0.003134055776400208, "phrase": "evaluated_family_members"}, {"score": 0.0030179530101642612, "phrase": "malware_family"}, {"score": 0.002906138793910919, "phrase": "detection_mechanism"}, {"score": 0.002855934865505357, "phrase": "legacy_signature"}, {"score": 0.0027581067089091434, "phrase": "specific_string"}, {"score": 0.002702591051318831, "phrase": "previous_behavior_analysis_techniques"}, {"score": 0.002640507929183363, "phrase": "higher_detection_accuracy"}, {"score": 0.002594880866651459, "phrase": "significant_overhead"}, {"score": 0.002520576658199164, "phrase": "proposed_signature"}, {"score": 0.0024842242921857705, "phrase": "new_variants"}, {"score": 0.002469830206270585, "phrase": "known_malware"}, {"score": 0.0024342079318127423, "phrase": "static_matching"}, {"score": 0.002323624929658748, "phrase": "anti-virus_company"}, {"score": 0.0021733853238695296, "phrase": "linear_time_complexity"}, {"score": 0.0021420294823879292, "phrase": "target_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Smartphone security", " Android", " Malware", " Variant detection", " Static analysis", " Family signature"], "paper_abstract": "The sharp increase in smartphone malware has become one of the most serious security problems. Since the Android platform has taken the dominant position in smartphone popularity, the number of Android malware has grown correspondingly and represents critical threat to the smartphone users. This rise in malware is primarily attributable to the occurrence of variants of existing malware. A set of variants stem from one malware can be considered as one malware family, and malware families cover more than half of the Android malware population. A conventional technique for defeating malware is the use of signature matching which is efficient from a time perspective but not very practical because of its lack of robustness against the malware variants. As a counter approach for handling the issue of variants behavior analysis techniques have been proposed but require extensive time and resources. In this paper, we propose an Android malware detection mechanism that uses automated family signature extraction and family signature matching. Key concept of the mechanism is to extract a set of family representative binary patterns from evaluated family members as a signature and to classify each set of variants into a malware family via an estimation of similarity to the signatures. The proposed family signature and detection mechanism offers more flexible variant detection than does the legacy signature matching, which is strictly dependent on the presence of a specific string. Furthermore, compared with the previous behavior analysis techniques considering family detection, the proposed family signature has higher detection accuracy without the need for the significant overhead of data and control flow analysis. Using the proposed signature, we can detect new variants of known malware efficiently and accurately by static matching. We evaluated our mechanism with 5846 real world Android malware samples belonging to 48 families collected in Apri12014 at an anti-virus company; experimental results showed that; our mechanism achieved greater than 97% accuracy in detection of variants. We also demonstrated that the mechanism has a linear time complexity with the number of target applications. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Screening smartphone applications using malware family signatures", "paper_id": "WOS:000382271400017"}