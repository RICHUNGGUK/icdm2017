{"auto_keywords": [{"score": 0.0429016280566267, "phrase": "sql"}, {"score": 0.004814961575006682, "phrase": "sql."}, {"score": 0.004019797503157808, "phrase": "incorrect_answers"}, {"score": 0.0037969755088553326, "phrase": "null_value"}, {"score": 0.003485605409687907, "phrase": "recent_article"}, {"score": 0.0033875770020590796, "phrase": "acm_sigmod_record"}, {"score": 0.003199687131875466, "phrase": "rubinson"}, {"score": 0.0027479040199262393, "phrase": "correct_answer"}, {"score": 0.0022933216359142736, "phrase": "rubinson's_claim"}, {"score": 0.0022500695985527668, "phrase": "date's_critique"}, {"score": 0.0022076314894741394, "phrase": "query_evaluation"}, {"score": 0.0021049977753042253, "phrase": "null_values"}], "paper_keywords": [""], "paper_abstract": "In various writings over the past 20 years, such as [3], Date has pointed out that SQL produces incorrect answers to some queries where a null value is included in a table. In a recent article in the ACM SIGMOD Record, [8], Rubinson states that \"Date misinterprets the meaning of his example query\" and \"SQL returns the correct answer to the query posed\". The purpose of this article is to show that, contrary to Rubinson's claim, Date's critique of query evaluation in the presence of null values in SQL is completely justified.", "paper_title": "Null Values in SQL", "paper_id": "WOS:000263490600003"}