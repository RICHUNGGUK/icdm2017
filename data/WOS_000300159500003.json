{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "compressed_trajectories"}, {"score": 0.007625773114982687, "phrase": "highest_probability"}, {"score": 0.004780334370089564, "phrase": "trajectory_compression"}, {"score": 0.004694873827535293, "phrase": "spatial-temporal_databases"}, {"score": 0.004197942881217177, "phrase": "original_trajectories"}, {"score": 0.004137761530535196, "phrase": "clear_advantages"}, {"score": 0.0041079938275505575, "phrase": "data_processing"}, {"score": 0.003891430578662587, "phrase": "novel_problem"}, {"score": 0.0038356264368681107, "phrase": "path_nearest_neighbor"}, {"score": 0.0034918380755577395, "phrase": "pnn"}, {"score": 0.0034293295415901807, "phrase": "lossy_compression"}, {"score": 0.0033076455392068095, "phrase": "significant_benefits"}, {"score": 0.0032250366795039715, "phrase": "trip_planning"}, {"score": 0.0031672925196105663, "phrase": "pnn-ct_query"}, {"score": 0.0030993584115563146, "phrase": "two-phase_solution"}, {"score": 0.003000171314687074, "phrase": "meta-data_and_sample_points"}, {"score": 0.0029571101238632783, "phrase": "tight_search_range"}, {"score": 0.0026532001044943117, "phrase": "candidate_sets"}, {"score": 0.002558985036330194, "phrase": "reconstruction_algorithm"}, {"score": 0.0025313767218525965, "phrase": "probabilistic_models"}, {"score": 0.0024503217593801587, "phrase": "trajectory_segments"}, {"score": 0.0023718560142554634, "phrase": "effective_combination_strategy"}, {"score": 0.0022711207841260767, "phrase": "complexity_analysis"}, {"score": 0.002230418233881411, "phrase": "strong_advantages"}, {"score": 0.0022143417457627006, "phrase": "existing_methods"}, {"score": 0.00216680270402079, "phrase": "proposed_pnn-ct_query_processing"}, {"score": 0.0021049977753042253, "phrase": "real_and_synthetic_trajectory_data"}], "paper_keywords": ["Compressed trajectory", " Path nearest neighbor", " Road networks", " Spatial databases"], "paper_abstract": "Trajectory compression is widely used in spatial-temporal databases as it can notably reduce (i) the computation/communication load of clients (GPS-enabled mobile devices) and (ii) the storage cost of servers. Compared with original trajectories, compressed trajectories have clear advantages in data processing, transmitting, storing, etc. In this paper, we investigate a novel problem of searching the Path Nearest Neighbor based on Compressed Trajectories (PNN-CT query). This type of query is conducted on compressed trajectories and the target is to retrieve the PNN with the highest probability (lossy compression leads to the uncertainty), which can bring significant benefits to users in many popular applications such as trip planning. To answer the PNN-CT query effectively and efficiently, a two-phase solution is proposed. First, we use the meta-data and sample points to specify a tight search range. The key of this phase is that the number of data objects/trajectory segments to be processed or decompressed should be kept as small as possible. Our efficiency study reveals that the candidate sets created are tight. Second, we propose a reconstruction algorithm based on probabilistic models to account for the uncertainty when decompressing the trajectory segments in the candidate set. Furthermore, an effective combination strategy is adopted to find the PNN with the highest probability. The complexity analysis shows that our solution has strong advantages over existing methods. The efficiency of the proposed PNN-CT query processing is verified by extensive experiments based on real and synthetic trajectory data in road networks.", "paper_title": "PNN query processing on compressed trajectories", "paper_id": "WOS:000300159500003"}