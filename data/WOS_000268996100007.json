{"auto_keywords": [{"score": 0.04423066948242862, "phrase": "message_complexity"}, {"score": 0.04203986116571504, "phrase": "wireless_network"}, {"score": 0.00481495049065317, "phrase": "distributed_randomized_tdma_scheduling_for_wireless"}, {"score": 0.004791878972726824, "phrase": "ad_hoc_networks"}, {"score": 0.004655742198075387, "phrase": "distributed_implementation"}, {"score": 0.004611239985877299, "phrase": "rand"}, {"score": 0.0041287394089001405, "phrase": "maximum_size"}, {"score": 0.004069631519385246, "phrase": "two-hop_neighborhood"}, {"score": 0.0038415095105632157, "phrase": "message_delays"}, {"score": 0.0037322713756404295, "phrase": "unknown_constant"}, {"score": 0.003696550794743764, "phrase": "drand"}, {"score": 0.003643607569483598, "phrase": "first_fully_distributed_version"}, {"score": 0.00334144503360907, "phrase": "wireless_mesh_networks"}, {"score": 0.0033094525227603012, "phrase": "wireless_sensor_networks"}, {"score": 0.0031998655001302537, "phrase": "tinyos"}, {"score": 0.003108814986752103, "phrase": "real_testbed"}, {"score": 0.0029627701619228527, "phrase": "time_synchronization"}, {"score": 0.0028235667474151714, "phrase": "local_topology_changes"}, {"score": 0.0027830917623582903, "phrase": "global_overhead"}, {"score": 0.0023178219772486868, "phrase": "time-varying_nature"}, {"score": 0.002251813863195168, "phrase": "conflict-free_property"}, {"score": 0.0022302306304023602, "phrase": "drand-assigned_time_slots"}], "paper_keywords": ["Wireless ad hoc networks", " medium access control", " network performance"], "paper_abstract": "This paper presents a distributed implementation of RAND, a randomized time slot scheduling algorithm, called DRAND. DRAND runs in O(delta) time and message complexity where delta is the maximum size of a two-hop neighborhood in a wireless network while message complexity remains O(delta), assuming that message delays can be bounded by an unknown constant. DRAND is the first fully distributed version of RAND. The algorithm is suitable for a wireless network where most nodes do not move, such as wireless mesh networks and wireless sensor networks. We implement the algorithm in TinyOS and demonstrate its performance in a real testbed of Mica2 nodes. The algorithm does not require any time synchronization and is shown to be effective in adapting to local topology changes without incurring global overhead in the scheduling. Because of these features, it can also be used even for other scheduling problems such as frequency or code scheduling (for FDMA or CDMA) or local identifier assignment for wireless networks where time synchronization is not enforced. We further evaluate the effect of the time-varying nature of wireless links on the conflict-free property of DRAND-assigned time slots. This experiment is conducted on a 55-node testbed consisting of the more recent MicaZ sensor nodes.", "paper_title": "DRAND: Distributed Randomized TDMA Scheduling for Wireless Ad Hoc Networks", "paper_id": "WOS:000268996100007"}