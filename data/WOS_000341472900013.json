{"auto_keywords": [{"score": 0.04419846536070138, "phrase": "phuko"}, {"score": 0.00481495049065317, "phrase": "buffer_overflow_attacks"}, {"score": 0.004677372885331908, "phrase": "buffer_overflow_defenses"}, {"score": 0.004350308086118336, "phrase": "previous_solutions"}, {"score": 0.0038457240885563146, "phrase": "virtualization_technology"}, {"score": 0.0037087324991876727, "phrase": "protected_program"}, {"score": 0.0036553070575015344, "phrase": "fully_transparent_environment"}, {"score": 0.0035766032751309677, "phrase": "easy_deployment"}, {"score": 0.0032783186166708985, "phrase": "working_process"}, {"score": 0.0029830992938695033, "phrase": "static_binary_analysis"}, {"score": 0.002754103864198219, "phrase": "vulnerable_functions"}, {"score": 0.0026366753045215558, "phrase": "virtual_machine_introspection"}, {"score": 0.002598652897946253, "phrase": "online_patching"}, {"score": 0.002542642270762272, "phrase": "protected_running_program"}, {"score": 0.0024342079318127423, "phrase": "memory_safety_enforcement"}, {"score": 0.002263639474937039, "phrase": "realistic_buffer_overflow_attacks"}, {"score": 0.0021987994275190314, "phrase": "moderate_performance_overhead"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "Buffer overflow defenses have been comprehensively studied for many years. Different from previous solutions, we propose PHUKO, an on-the-fly buffer overflow prevention system which leverages virtualization technology. PHUKO offers the protected program a fully transparent environment and an easy deployment without the need to restart the program. Generally, the working process of PHUKO can be divided into two stages. First, we utilize static binary analysis to identify the instructions offline which are the entries of vulnerable functions. Second, by combining virtual machine introspection and online patching, PHUKO instruments the protected running program on-the-fly with memory safety enforcement. The experiments show that our system can defend against realistic buffer overflow attacks effectively with a moderate performance overhead. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Defeating buffer overflow attacks via virtualization", "paper_id": "WOS:000341472900013"}