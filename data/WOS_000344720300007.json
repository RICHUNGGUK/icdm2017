{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "coding_structure"}, {"score": 0.004736045157669388, "phrase": "interactive_multiview_video_streaming"}, {"score": 0.004704844560325455, "phrase": "multiview_video"}, {"score": 0.004551883842967241, "phrase": "multiple_closely_spaced_cameras"}, {"score": 0.004447766706144458, "phrase": "interactive_streaming"}, {"score": 0.004418456827500267, "phrase": "pre-encoded_multiview_videos"}, {"score": 0.003961694867182568, "phrase": "neighboring_views"}, {"score": 0.003922580121023413, "phrase": "compelling_look"}, {"score": 0.0038838500580958744, "phrase": "visual_effect"}, {"score": 0.003832801887709817, "phrase": "distributed_content_servers"}, {"score": 0.003794954883650141, "phrase": "large-scale_interactive_multiview_video_service"}, {"score": 0.0036958398682001015, "phrase": "video_contents"}, {"score": 0.0035519826240477444, "phrase": "efficient_coding_structure"}, {"score": 0.003516898780234098, "phrase": "interactive_view"}, {"score": 0.0032807941194429235, "phrase": "interactive_temporal_and_view_switches"}, {"score": 0.003216285378512588, "phrase": "redundant_coding_structure"}, {"score": 0.0031845067058084583, "phrase": "interactive_view-switching"}, {"score": 0.0031218852898830755, "phrase": "transmission_rate"}, {"score": 0.003020232503089429, "phrase": "content_replication_strategy"}, {"score": 0.0029706504420983896, "phrase": "indirect_hit"}, {"score": 0.0029412916164128925, "phrase": "view-switching_cost"}, {"score": 0.0028739078688746374, "phrase": "exact_requested_view"}, {"score": 0.00280806350681826, "phrase": "local_server"}, {"score": 0.002771115819151223, "phrase": "different_but_correlated_view"}, {"score": 0.0026986685585382347, "phrase": "remote_repository"}, {"score": 0.0026455755027979533, "phrase": "pre-encoded_view_differential"}, {"score": 0.002602127996667857, "phrase": "video_content_replication_problem"}, {"score": 0.0025678829712650437, "phrase": "switching_cost"}, {"score": 0.0025424945305785374, "phrase": "integer_linear_programming"}, {"score": 0.002460664387473386, "phrase": "np"}, {"score": 0.002395336706478158, "phrase": "lp_relaxation"}, {"score": 0.0023172863267744703, "phrase": "bounded_approximation_error"}, {"score": 0.0022492129111567824, "phrase": "dynamic_programming"}, {"score": 0.002234358539133758, "phrase": "lagrangian_optimization"}, {"score": 0.002168715943767454, "phrase": "simulation_results"}, {"score": 0.0021260268415459805, "phrase": "substantially_lower_switching_cost"}], "paper_keywords": ["Multimedia computing", " digital video broadcasting"], "paper_abstract": "Multiview video refers to videos of the same dynamic 3-D scene captured simultaneously by multiple closely spaced cameras from different viewpoints. We study interactive streaming of pre-encoded multiview videos, where, at any time, a client can request any one of many captured views for playback. Moreover, the client can periodically freeze the video in time and switch to neighboring views for a compelling look-around visual effect. We consider distributed content servers to support large-scale interactive multiview video service. These servers collaboratively replicate and access video contents. We study two challenges in this setting: what is an efficient coding structure that supports interactive view switching and, given that, what to replicate in each server in order to minimize the cost incurred by interactive temporal and view switches? We first propose a redundant coding structure that facilitates interactive view-switching, trading off storage with transmission rate. Using the coding structure, we next propose a content replication strategy that takes advantage of indirect hit to lower view-switching cost: in the event that the exact requested view is not available locally, the local server can fetch a different but correlated view from the other servers, so that the remote repository only needs to supply the pre-encoded view differential. We formulate the video content replication problem to minimize the switching cost as an integer linear programming (ILP) problem and show that it is NP-hard. We first propose an LP relaxation and rounding algorithm (termed Minimum Eviction) with bounded approximation error. We then study a more scalable solution based on dynamic programming and Lagrangian optimization (DPLO) with little sacrifice in performance. Simulation results show that our replication algorithms achieve substantially lower switching cost compared to other content replication schemes.", "paper_title": "Coding Structure and Replication Optimization for Interactive Multiview Video Streaming", "paper_id": "WOS:000344720300007"}