{"auto_keywords": [{"score": 0.04973625252864221, "phrase": "neuralsyns"}, {"score": 0.046114804435266145, "phrase": "large_network_models"}, {"score": 0.00481495049065317, "phrase": "large_spiking_neural_networks"}, {"score": 0.0046118021635786315, "phrase": "complex_interactions"}, {"score": 0.004578783486828809, "phrase": "large_populations"}, {"score": 0.0042004472903194616, "phrase": "heterogeneous_neuronal_population"}, {"score": 0.004081385289516914, "phrase": "individual_neuronal_dynamics"}, {"score": 0.004023120753104693, "phrase": "population's_computational_power"}, {"score": 0.0038256426589560774, "phrase": "architecture_complexity"}, {"score": 0.0036509280916606937, "phrase": "model_construction_debugging"}, {"score": 0.0036247638406450735, "phrase": "online_simulation_analysis"}, {"score": 0.003598786417573615, "phrase": "even_classroom_demonstrations"}, {"score": 0.003521961918342562, "phrase": "neuronal_simulators"}, {"score": 0.0034220655476652683, "phrase": "simulation_environment"}, {"score": 0.0031730701021262155, "phrase": "statistical_descriptions"}, {"score": 0.0031164983132321417, "phrase": "large_networks"}, {"score": 0.002931569771634119, "phrase": "information-rich_graphical_representations"}, {"score": 0.0028689475587958917, "phrase": "dynamical_state"}, {"score": 0.002747676657869163, "phrase": "lean_source_code"}, {"score": 0.0025938977569302177, "phrase": "new_models"}, {"score": 0.002538470301402269, "phrase": "plasticity_dynamics"}, {"score": 0.002448704249007665, "phrase": "opengl_code"}, {"score": 0.002387758958649797, "phrase": "specific_opengl_strategies"}, {"score": 0.002370625627299064, "phrase": "rendering_burden"}, {"score": 0.002254163907991623, "phrase": "gpu"}, {"score": 0.0021821915946356168, "phrase": "simulation_slowdown"}, {"score": 0.0021509807762081145, "phrase": "graphical_representation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Simulation environment", " Graphical representation", " Spiking neuronal models", " Network architecture visualization", " OpenGL"], "paper_abstract": "The understanding that many neuronal functional properties are the result of complex interactions within large populations of neurons leads to the development and analysis of large network models. In these models, specificities such as connectivity and architecture of the heterogeneous neuronal population are at least as important as the individual neuronal dynamics in shaping the population's computational power. Unfortunately, designing, building, visualizing and simulating large network models focused on architecture complexity is not straightforward with most neuronal simulation tools. Visualization in particular, either for model construction debugging, online simulation analysis or even classroom demonstrations, is virtually unsupported in neuronal simulators targeting large network models. Here we present the simulation environment NeuralSyns, capable of handling models with up to 10(7) synapses, which offers (i) use of statistical descriptions to define and build large networks; (ii) GUI tool to construct complex architectures without the need to write code; (iii) information-rich graphical representations of the model architecture and dynamical state, before and during the simulations; (iv) simulation engine with compact and lean source code, fully commented, and simple to modify/expand; (v) possibility to add new models for neurons, synapses and plasticity dynamics. NeuralSyns is written in C/C++ and relies on OpenGL code for its graphical engine. The use of specific OpenGL strategies removes rendering burden from the CPU (central processing unit) and places it in the GPU (graphics processing unit), reducing the simulation slowdown due to the graphical representation. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Building, simulating and visualizing large spiking neural networks with NeuralSyns", "paper_id": "WOS:000326909600038"}