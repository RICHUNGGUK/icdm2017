{"auto_keywords": [{"score": 0.026952117137428715, "phrase": "sa_algorithm"}, {"score": 0.00798733191747706, "phrase": "alert_system"}, {"score": 0.006455109459702361, "phrase": "proposed_sa_algorithm"}, {"score": 0.005802359674483912, "phrase": "gams_software"}, {"score": 0.004921388068298168, "phrase": "mixed_model_assembly_line"}, {"score": 0.00481495049065317, "phrase": "mixed_model_assembly_u-line_balancing_type"}, {"score": 0.004596561972944185, "phrase": "mixed-model_u-line"}, {"score": 0.00437785960415387, "phrase": "weighted_efficiency"}, {"score": 0.004267468074128779, "phrase": "research_paper"}, {"score": 0.00413096972023037, "phrase": "labor_assignment_policy"}, {"score": 0.0038708810091769856, "phrase": "regular_and_overtime_periods"}, {"score": 0.0037296509687792865, "phrase": "work_station"}, {"score": 0.003593555152077465, "phrase": "hybrid_kanban_systems"}, {"score": 0.0035028709590057042, "phrase": "simulated_annealing_algorithm"}, {"score": 0.003422411319890915, "phrase": "balancing_problem"}, {"score": 0.0031550351923674337, "phrase": "kanban_system"}, {"score": 0.0030897146022309517, "phrase": "process_inventory"}, {"score": 0.0030398432591176357, "phrase": "control_points"}, {"score": 0.0030117065110966414, "phrase": "processing_time"}, {"score": 0.0029907744785778014, "phrase": "control_decisions"}, {"score": 0.0029493445611623106, "phrase": "kanban_cards"}, {"score": 0.0028882701690741467, "phrase": "temperature_cooling_schedule"}, {"score": 0.0028087949095629955, "phrase": "neighborhood_search"}, {"score": 0.002789269212432351, "phrase": "initial_temperature"}, {"score": 0.002731500545019039, "phrase": "initial_solution"}, {"score": 0.0027062100658653485, "phrase": "convergence_situation"}, {"score": 0.0026687115458522326, "phrase": "five_problems"}, {"score": 0.0026440008776012665, "phrase": "small_size"}, {"score": 0.0025121156016001886, "phrase": "performance_difference"}, {"score": 0.0024946471491691957, "phrase": "computational_results"}, {"score": 0.0024147163663035, "phrase": "seven_large_scale_problems"}, {"score": 0.002348240990880732, "phrase": "better_reliability"}, {"score": 0.0022889103976458437, "phrase": "axel_assembly_company"}, {"score": 0.002200146140967468, "phrase": "case_study"}, {"score": 0.002134592410214824, "phrase": "good_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Mixed-model assembly line balancing", " Kanban", " Make-to-order", " Pull system", " Human Efficiency", " Simulated Annealing"], "paper_abstract": "This research deals with balancing a mixed-model U-line in a just-In-Time (JIT) production system. The research intends to reduce the number of stations via balancing the workload and maximizing the weighted efficiency, which both are considered as the objectives of this research paper. After balancing the line and determining the number of stations, the labor assignment policy should be set. In this study, it was assumed that there are two types of operators: permanent and temporary. Both types can work in regular and overtime periods. Based on their skill levels, workers are classified into four types. The sign at each work station indicates types of workers allowed to work at that station. An alert system using the hybrid kanban systems was also considered. To solve this problem, a Simulated Annealing algorithm was applied in the following three stages. First, the balancing problem was solved and the number of stations was determined. Second, workers were assigned to the workstations in which they are qualified to work. Following that, an alert system based on the kanban system was designed to balance the work in the process inventory. This was achieved by defining control points based on the processing time and making control decisions to minimize the number of kanban cards. In the proposed SA algorithm, two methods for the temperature cooling schedule were considered and two methods were defined for determining the number of neighborhood search. The initial temperature was considered equal to the cost of the initial solution to reach the convergence situation as soon as possible. Five problems were solved in small size using the GAMS software. The results obtained from the GAMS software were compared with those obtained from the SA algorithm to determine the performance difference. The computational results demonstrated that the SA algorithm is more consistent with the answers obtained. Also seven large scale problems were solved. The results showed that the SA algorithm still have better reliability. To show the efficiency of the proposed SA algorithm, an axel assembly company was studied. To satisfy demands and reduce backlogging, a mixed model assembly line was designed for this case study. The results showed that the mixed model assembly line designed using the SA algorithm had good efficiency. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "A Simulated Annealing algorithm for a mixed model assembly U-line balancing type-I problem considering human efficiency and Just-In-Time approach", "paper_id": "WOS:000314858400014"}