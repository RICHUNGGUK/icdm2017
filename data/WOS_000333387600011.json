{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "anti-risk_path"}, {"score": 0.004610058444728656, "phrase": "undirected_graph"}, {"score": 0.004135010810625326, "phrase": "\"minimum_risk_path"}, {"score": 0.0038179283509963695, "phrase": "shortest_s-t_path"}, {"score": 0.0030267296900520217, "phrase": "blocked_edge"}, {"score": 0.0021049977753042253, "phrase": "fibonacci_heaps"}], "paper_keywords": ["Graph algorithms", " Edge failure", " Anti-risk path", " Shortest path"], "paper_abstract": "For a weighted 2-edge connected graph G=(V,E), we are to find a \"minimum risk path\" from source s to destination t. This is a shortest s-t path under the assumption that at most one edge on the path may be blocked. The fact that the edge is blocked is known only when we reach a site adjacent to the blocked edge. If n and m are the number of nodes and edges of G, then we show that this problem can be solved in O(n (2)) time using only simple data structures. This is an improvement over the previous O(mn+n (2)logn) time algorithm. Moreover, with use of more complicated data structures like Fibonacci Heaps and transmuters the time can be further reduced to O(m+nlogn).", "paper_title": "Faster algorithm to find anti-risk path between two nodes of an undirected graph", "paper_id": "WOS:000333387600011"}