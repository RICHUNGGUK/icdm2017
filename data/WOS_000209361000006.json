{"auto_keywords": [{"score": 0.040051752329395944, "phrase": "i-th_offspring"}, {"score": 0.00481495049065317, "phrase": "p-best_mutation_strategy"}, {"score": 0.004720204771105206, "phrase": "finite_state_machines"}, {"score": 0.004693476992528682, "phrase": "evolutionary_programming"}, {"score": 0.004523380792307973, "phrase": "powerful_real_parameter_optimizer"}, {"score": 0.004237551575466616, "phrase": "ep"}, {"score": 0.004201381218977942, "phrase": "wide_variety"}, {"score": 0.004177578905812264, "phrase": "numerical_benchmarks"}, {"score": 0.004118658982032481, "phrase": "real-coded_gas"}, {"score": 0.004049046499912914, "phrase": "fitness-induced_bias"}, {"score": 0.00396932465145281, "phrase": "ep."}, {"score": 0.0039244530915794025, "phrase": "i-th_population_member"}, {"score": 0.003697100573612401, "phrase": "p-best_mutation_scheme"}, {"score": 0.00343371736655812, "phrase": "population_size"}, {"score": 0.0034142492295833418, "phrase": "top-ranked_population-members"}, {"score": 0.0031890376450148766, "phrase": "current_population"}, {"score": 0.0030732954458379666, "phrase": "i-th_parent"}, {"score": 0.0029871209444889716, "phrase": "p_top-ranked_vectors"}, {"score": 0.0029449414017272656, "phrase": "best_members"}, {"score": 0.0028139168128067343, "phrase": "explorative_behavior"}, {"score": 0.002790004829699627, "phrase": "early_stages"}, {"score": 0.0027349952762847607, "phrase": "later_stages"}, {"score": 0.0026734504926268442, "phrase": "controlled_bias"}, {"score": 0.00265828134049257, "phrase": "parent_selection"}, {"score": 0.002620732961022912, "phrase": "adaptive_fast_ep"}, {"score": 0.0025472157850600563, "phrase": "strategy_parameter"}, {"score": 0.0025040966350544135, "phrase": "previous_records"}, {"score": 0.0024898859973520072, "phrase": "successful_mutations"}, {"score": 0.002433843373780471, "phrase": "recent_and_best-known_versions"}, {"score": 0.0023723102109361786, "phrase": "congress"}, {"score": 0.00235883374582576, "phrase": "evolutionary_computation"}, {"score": 0.002332133125576037, "phrase": "real-parameter_optimization"}, {"score": 0.002299180988482364, "phrase": "statistically_validated_superiority"}, {"score": 0.0022796331061797916, "phrase": "new_scheme"}, {"score": 0.002253826965566618, "phrase": "final_accuracy"}, {"score": 0.0021968238865548812, "phrase": "afep"}, {"score": 0.0021843531895681194, "phrase": "p-best_mutation"}, {"score": 0.0021291034698159815, "phrase": "proposed_mutation_scheme"}], "paper_keywords": ["Evolutionary programming", " Real-parameter optimization", " Mutation", " Parent selection", " Evolutionary algorithms"], "paper_abstract": "Although initially conceived for evolving finite state machines, Evolutionary Programming (EP), in its present form, is largely used as a powerful real parameter optimizer. For function optimization. EP mainly relies on its mutation operators. Over past few years several mutation operators have been proposed to improve the performance of EP on a wide variety of numerical benchmarks. However, unlike real-coded GAs, there has been no fitness-induced bias in parent selection for mutation in EP. That means the i-th population member is selected deterministically for mutation and creation of the i-th offspring in each generation. In this article we propose a p-best mutation scheme for EP where any one from the p (p is an element of [1,2, ... ,mu], where mu denotes population size) top-ranked population-members (according to fitness values) is selected randomly for mutation. The scheme is invoked with 50% probability with each index in the current population, i.e. the i-th offspring can now be obtained either by mutating the i-th parent or by mutating a randomly selected individual from the p top-ranked vectors. The percentage of best members is made dynamic by decreasing p in from mu/2 to 1 with generations to favor explorative behavior at the early stages of search and exploitation during the later stages. We investigate the effectiveness of introducing controlled bias in parent selection in conjunction with an Adaptive Fast EP (AFEP), where the value of a strategy parameter is updated based on the previous records of successful mutations by the same parameter. Comparison with the recent and best-known versions of EP over 25 benchmark functions from the CEC (Congress on Evolutionary Computation) 2005 test-suite for real-parameter optimization and two other engineering optimization problems reflects the statistically validated superiority of the new scheme in terms of final accuracy, speed, and robustness. Comparison with AFEP without p-best mutation demonstrates the improvement of performance due to the proposed mutation scheme alone. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive evolutionary programming with p-best mutation strategy", "paper_id": "WOS:000209361000006"}