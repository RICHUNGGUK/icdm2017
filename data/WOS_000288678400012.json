{"auto_keywords": [{"score": 0.04812452579434374, "phrase": "soft_errors"}, {"score": 0.008221652240217394, "phrase": "compiler_optimizations"}, {"score": 0.00481495049065317, "phrase": "static_analysis_of_register_file_vulnerability"}, {"score": 0.004715702140552199, "phrase": "continuous_technology"}, {"score": 0.004491970050862321, "phrase": "increasingly_important_design_concern"}, {"score": 0.004399349717218995, "phrase": "earth-bound_applications"}, {"score": 0.004308630865024719, "phrase": "compiler_approaches"}, {"score": 0.003991646181215783, "phrase": "minimal_runtime_overheads"}, {"score": 0.003802135020791801, "phrase": "essential_part"}, {"score": 0.00342568771304873, "phrase": "static_analysis_approach"}, {"score": 0.003378385493203297, "phrase": "register_file"}, {"score": 0.003285725064532174, "phrase": "vulnerability_estimation"}, {"score": 0.0030650070965891653, "phrase": "intrinsic_and_conditional_basic-block_vulnerabilities"}, {"score": 0.002742196991950893, "phrase": "linear_equation_based_method"}, {"score": 0.002685558057339722, "phrase": "iterative_method"}, {"score": 0.002575756583567029, "phrase": "practical_application"}, {"score": 0.002540160379502092, "phrase": "rf_vulnerability_estimation"}, {"score": 0.0024026156525362684, "phrase": "mibench_suite"}], "paper_keywords": ["Architectural vulnerability factor", " compilers", " embedded systems", " partially protected register file", " soft error", " static analysis"], "paper_abstract": "With continuous technology scaling, soft errors are becoming an increasingly important design concern even for earth-bound applications. While compiler approaches have the potential to mitigate the effect of soft errors with minimal runtime overheads, static vulnerability estimation-an essential part of compiler approaches-is lacking due to its inherent complexity. This paper presents a static analysis approach for register file (RF) vulnerability estimation. We decompose the vulnerability of a register into intrinsic and conditional basic-block vulnerabilities. This decomposition allows us to develop a fast, yet reasonably accurate RF vulnerability estimation mechanism. We validate and compare a linear equation based method and an iterative method. Also we demonstrate a practical application of RF vulnerability estimation to compiler optimizations. Our experimental results on benchmarks from MiBench suite indicate that not only our static RF vulnerability estimation is fast and accurate, but also compiler optimizations enabled by our static estimation can achieve very cost-effective protection of register files against soft errors.", "paper_title": "Static Analysis of Register File Vulnerability", "paper_id": "WOS:000288678400012"}