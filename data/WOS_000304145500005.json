{"auto_keywords": [{"score": 0.040881676335714635, "phrase": "possible_mappings"}, {"score": 0.00481495049065317, "phrase": "xml_schema_matching"}, {"score": 0.004719816332271661, "phrase": "machine_learning_technologies"}, {"score": 0.004288581530198804, "phrase": "numerous_instances"}, {"score": 0.004254467919664946, "phrase": "\"possible_mappings"}, {"score": 0.004087910779160781, "phrase": "matching_result"}, {"score": 0.0035403060198952244, "phrase": "existing_algorithms"}, {"score": 0.003334309053314909, "phrase": "divide-and-conquer_approach"}, {"score": 0.003229374325577207, "phrase": "large_set"}, {"score": 0.0031654684543975077, "phrase": "large_storage"}, {"score": 0.0031402604946939743, "phrase": "evaluation_overhead"}, {"score": 0.0031028232755683674, "phrase": "xml_schemas"}, {"score": 0.0029931603112397084, "phrase": "high_degree"}, {"score": 0.002898930717812433, "phrase": "novel_data_structure"}, {"score": 0.002752075650871066, "phrase": "block_tree"}, {"score": 0.0026547761341670505, "phrase": "compact_manner"}, {"score": 0.0024408799645640323, "phrase": "non-zero_probability"}, {"score": 0.002382987346529592, "phrase": "xml_document"}, {"score": 0.0022531762659857507, "phrase": "-highest_probabilities"}, {"score": 0.002199725773957207, "phrase": "top-_ptq"}, {"score": 0.0021647968783414504, "phrase": "efficient_solution"}, {"score": 0.002121913011761504, "phrase": "extensive_evaluation"}, {"score": 0.0021049977753042253, "phrase": "real-world_data_sets"}], "paper_keywords": ["Data integration", " Schema matching", " Uncertainty", " XML"], "paper_abstract": "Despite advances in machine learning technologies a schema matching result between two database schemas (e.g., those derived from COMA++) is likely to be imprecise. In particular, numerous instances of \"possible mappings\" between the schemas may be derived from the matching result. In this paper, we study problems related to managing possible mappings between two heterogeneous XML schemas. First, we study how to efficiently generate possible mappings for a given schema matching task. While this problem can be solved by existing algorithms, we show how to improve the performance of the solution by using a divide-and-conquer approach. Second, storing and querying a large set of possible mappings can incur large storage and evaluation overhead. For XML schemas, we observe that their possible mappings often exhibit a high degree of overlap. We hence propose a novel data structure, called the , to capture the commonalities among possible mappings. The block tree is useful for representing the possible mappings in a compact manner and can be efficiently generated. Moreover, it facilitates the evaluation of a (PTQ), which returns the non-zero probability that a fragment of an XML document matches a given query. For users who are interested only in answers with -highest probabilities, we also propose the top- PTQ and present an efficient solution for it. An extensive evaluation on real-world data sets shows that our approaches significantly improve the efficiency of generating, storing, and querying possible mappings.", "paper_title": "Efficient management of uncertainty in XML schema matching", "paper_id": "WOS:000304145500005"}