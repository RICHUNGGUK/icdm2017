{"auto_keywords": [{"score": 0.047560835467356254, "phrase": "mcf"}, {"score": 0.00568080548803976, "phrase": "relative_performances"}, {"score": 0.00481495049065317, "phrase": "min-cost_flow_problems"}, {"score": 0.004599994523941615, "phrase": "linear_single-commodity_min-cost_flow"}, {"score": 0.004322186889256224, "phrase": "different_variants"}, {"score": 0.0042157995925335544, "phrase": "practical_significance"}, {"score": 0.0038796562792487, "phrase": "\"_instances"}, {"score": 0.003799878496075633, "phrase": "different_classes"}, {"score": 0.003340475943517995, "phrase": "reoptimization_techniques"}, {"score": 0.0030995835539697893, "phrase": "total_time"}, {"score": 0.002816814445002924, "phrase": "cost_reoptimization"}, {"score": 0.0027588314610845705, "phrase": "decomposition_algorithms"}, {"score": 0.0027246145918972025, "phrase": "multicommodity_min-cost_flow"}, {"score": 0.0023261372216194383, "phrase": "best_solver"}, {"score": 0.0021225958499898182, "phrase": "standard_interface"}, {"score": 0.0021049977753042253, "phrase": "mcf_problem"}], "paper_keywords": ["analysis of algorithms", " computers-computer science", " software", " networks-graphs", " flow algorithms", " networks-graphs", " multicommodity"], "paper_abstract": "In the last two decades, a number of algorithms for the linear single-commodity min-cost flow (MCF) problem have been proposed, and several efficient codes are available that implement different variants of the algorithms. The practical significance of the algorithms has been tested by comparing the time required by their implementations for solving \"from-scratch\" instances of MCF, of different classes, as the size of the problem (number of nodes and arcs) increases. However, in many applications several closely related instances of MCF have to be sequentially solved, so that reoptimization techniques can be used to speed up computations, and the most attractive algorithm is the one that minimizes the total time required to solve all the instances in the sequence. In this paper we compare the performances of four different efficient implementations of algorithms for MCF under cost reoptimization in the context of decomposition algorithms for the multicommodity min-cost flow (MMCF) problem, showing that for some classes of instances the relative performances of the codes doing \"from-scratch\" optimization do not accurately predict the relative performances when reoptimization is used. Because the best solver depends both on the class and on the size of the instance, this work also shows the usefulness of a standard interface for MCF problem solvers that we have proposed and implemented.", "paper_title": "A computational study of cost reoptimization for min-cost flow problems", "paper_id": "WOS:000235562300005"}