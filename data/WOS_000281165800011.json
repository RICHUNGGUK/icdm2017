{"auto_keywords": [{"score": 0.030826052653415044, "phrase": "adh"}, {"score": 0.00481495049065317, "phrase": "mixed_regime_hydrologic_simulation_model"}, {"score": 0.004521566043596533, "phrase": "moving_fronts"}, {"score": 0.004441059405327222, "phrase": "dynamic_driving_mechanisms"}, {"score": 0.004096082254543022, "phrase": "important_features"}, {"score": 0.0038810583785936505, "phrase": "accurate_modeling"}, {"score": 0.0038119123317396954, "phrase": "uniformly_fine_resolution"}, {"score": 0.002963390095037466, "phrase": "adaptive_hydrology"}, {"score": 0.00249767641333441, "phrase": "large_run_time_and_memory_requirements"}, {"score": 0.00216263228969761, "phrase": "resulting_grids"}, {"score": 0.0021049977753042253, "phrase": "example_problems"}], "paper_keywords": ["Adaptive meshing", " Parallel", " Load balance", " Hash tables"], "paper_abstract": "Problems in hydrology frequently have moving fronts and dynamic driving mechanisms such as wells. Since the location of important features changes during a simulation, accurate modeling requires uniformly fine resolution or the ability to change resolution during the simulation. We will describe an algorithm for refinement and unrefinement of tetrahedral/triangular meshes that has been implemented in the adaptive hydrology (ADH) code. The codes including the refinement/unrefinement algorithms are implemented in parallel to accommodate problems with large run time and memory requirements. In this paper, we describe the parallel, adaptive grid algorithm used in ADH and show the resulting grids from some example problems.", "paper_title": "Adaptive meshing in a mixed regime hydrologic simulation model", "paper_id": "WOS:000281165800011"}