{"auto_keywords": [{"score": 0.04855239486253465, "phrase": "imine_index"}, {"score": 0.00481495049065317, "phrase": "item_set_mining"}, {"score": 0.004440277230269978, "phrase": "tight_integration"}, {"score": 0.00427550604912774, "phrase": "relational_dbms."}, {"score": 0.004094639048362357, "phrase": "index_creation_phase"}, {"score": 0.004050627275203058, "phrase": "imine"}, {"score": 0.003985487777785535, "phrase": "complete_representation"}, {"score": 0.003921393143378986, "phrase": "original_database"}, {"score": 0.003519561814102764, "phrase": "imine_index_structure"}, {"score": 0.003407214479510987, "phrase": "different_item"}, {"score": 0.003370565320453525, "phrase": "extraction_algorithms"}, {"score": 0.0032806521851034766, "phrase": "imine_data_access_methods"}, {"score": 0.002714779217561487, "phrase": "sparse_and_dense_data_distributions"}, {"score": 0.002613870237087035, "phrase": "proposed_index"}, {"score": 0.0025440911575156755, "phrase": "large_data_sets"}, {"score": 0.0022830706430588482, "phrase": "low_supports"}, {"score": 0.0021049977753042253, "phrase": "flat_file"}], "paper_keywords": ["Data mining", " item set extraction", " indexing"], "paper_abstract": "This paper presents the IMine index, a general and compact structure which provides tight integration of item set extraction in a relational DBMS. Since no constraint is enforced during the index creation phase, IMine provides a complete representation of the original database. To reduce the I/O cost, data accessed together during the same extraction phase are clustered on the same disk block. The IMine index structure can be efficiently exploited by different item set extraction algorithms. In particular, IMine data access methods currently support the FP-growth and LCM v. 2 algorithms, but they can straightforwardly support the enforcement of various constraint categories. The IMine index has been integrated into the PostgreSQL DBMS and exploits its physical level access methods. Experiments, run for both sparse and dense data distributions, show the efficiency of the proposed index and its linear scalability also for large data sets. Item set mining supported by the IMine index shows performance always comparable with, and often (especially for low supports) better than, state-of-the-art algorithms accessing data on flat file.", "paper_title": "IMine: Index Support for Item Set Mining", "paper_id": "WOS:000263394400003"}