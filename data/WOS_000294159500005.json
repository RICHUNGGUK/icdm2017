{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "testability_transformation"}, {"score": 0.049226991195811115, "phrase": "loop-assigned_flags"}, {"score": 0.011341906654483183, "phrase": "hard_optimization_problems"}, {"score": 0.004672953146379813, "phrase": "search-based_testing"}, {"score": 0.004589763483242731, "phrase": "widely_studied_technique"}, {"score": 0.004481132747216135, "phrase": "test_inputs"}, {"score": 0.004220624516321415, "phrase": "software_engineering_activities"}, {"score": 0.004023120753104693, "phrase": "search-based_approaches"}, {"score": 0.003951453722517865, "phrase": "random_testing"}, {"score": 0.0038348235692738783, "phrase": "flag_variables"}, {"score": 0.003611751858608048, "phrase": "fitness_landscape"}, {"score": 0.0034016119212097826, "phrase": "search-based_optimization_techniques"}, {"score": 0.0032814236411444022, "phrase": "flag_removal_transformations"}, {"score": 0.0032423089921154503, "phrase": "fitness_function_refinements"}, {"score": 0.002692200353719145, "phrase": "flag-free_equivalents"}, {"score": 0.002628362641980801, "phrase": "existing_search-based_test_data_generation_approaches"}, {"score": 0.0024311346712789553, "phrase": "empirical_study"}, {"score": 0.0021953290937408807, "phrase": "open_source"}, {"score": 0.002169132543304096, "phrase": "industrial_production_code"}, {"score": 0.0021049977753042253, "phrase": "test_data_generation_problems"}], "paper_keywords": ["Algorithms", " Evolutionary testing", " testability transformation", " flags", " empirical evaluation"], "paper_abstract": "Search-Based Testing is a widely studied technique for automatically generating test inputs, with the aim of reducing the cost of software engineering activities that rely upon testing. However, search-based approaches degenerate to random testing in the presence of flag variables, because flags create spikes and plateaux in the fitness landscape. Both these features are known to denote hard optimization problems for all search-based optimization techniques. Several authors have studied flag removal transformations and fitness function refinements to address the issue of flags, but the problem of loop-assigned flags remains unsolved. This article introduces a testability transformation along with a tool that transforms programs with loop-assigned flags into flag-free equivalents, so that existing search-based test data generation approaches can successfully be applied. The article presents the results of an empirical study that demonstrates the effectiveness and efficiency of the testability transformation on programs including those made up of open source and industrial production code, as well as test data generation problems specifically created to denote hard optimization problems.", "paper_title": "FlagRemover: A Testability Transformation for Transforming Loop-Assigned Flags", "paper_id": "WOS:000294159500005"}