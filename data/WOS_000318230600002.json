{"auto_keywords": [{"score": 0.028699675078690066, "phrase": "proposed_approach"}, {"score": 0.015329521995384348, "phrase": "uml"}, {"score": 0.013919458517776854, "phrase": "automatic_generation"}, {"score": 0.00481495049065317, "phrase": "unified_modelling_language_sequence_diagrams"}, {"score": 0.004774457442847054, "phrase": "unified"}, {"score": 0.004615202066192795, "phrase": "visual_modelling_language"}, {"score": 0.004480307124735185, "phrase": "software_practitioners"}, {"score": 0.004404994123834589, "phrase": "model-driven_software_development_environment"}, {"score": 0.00422218060227958, "phrase": "structural_code"}, {"score": 0.004186534737631288, "phrase": "uml_class_diagrams"}, {"score": 0.004098725744818192, "phrase": "code_generation"}, {"score": 0.004064117897000019, "phrase": "uml_diagrams"}, {"score": 0.0034154440860550564, "phrase": "use_cases"}, {"score": 0.0033579708256295847, "phrase": "xml_metadata_interchange"}, {"score": 0.0032184697893776052, "phrase": "use_case"}, {"score": 0.0031375577552605533, "phrase": "graph_model"}, {"score": 0.0030071897937010267, "phrase": "sig"}, {"score": 0.0026140878612307536, "phrase": "real-life_application_systems"}, {"score": 0.0024527767211457046, "phrase": "controller_classes"}, {"score": 0.0023607968604629393, "phrase": "total_lines"}, {"score": 0.0023210293050850276, "phrase": "controller_class_methods"}, {"score": 0.0021501863832966966, "phrase": "interaction-overview_diagrams"}, {"score": 0.0021049977753042253, "phrase": "activity_diagrams"}], "paper_keywords": [""], "paper_abstract": "Unified modelling language (UML) is a visual modelling language, which has gained popularity among software practitioners. In a model-driven software development environment, the existing UML tools mainly support automatic generation of structural code from UML class diagrams. However, the code generation from UML diagrams such as statechart, activity, collaboration and sequence diagrams (SDs) are not supported by most UML tools and also have scarcely been reported in the literatures. This work proposes an approach to automatic generation of code from UML 2.x SDs of use cases. From the XML metadata interchange (XMI) representation of an SD of a use case, the authors construct a graph model called sequence integration graph (SIG). The SIG encapsulates information related to messages, control flow and method scope of interactions. These information are then used to generate code. The proposed approach has been tested using a number of real-life application systems and the results substantiate the efficacy of the approach to synthesise the code for controller classes. The authors observe that approximately 48% of the total lines of code within controller class methods can be generated with the proposed approach. The proposed approach can be easily extended to other behavioural UML models such as interaction-overview diagrams, communication diagrams and activity diagrams.", "paper_title": "Automatic code generation from unified modelling language sequence diagrams", "paper_id": "WOS:000318230600002"}