{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "extensible_markup_language_streams"}, {"score": 0.007920955629760742, "phrase": "proposed_method"}, {"score": 0.004518442937844318, "phrase": "syntactic_pattern_recognition"}, {"score": 0.004437115547184535, "phrase": "extensible_markup_language_query_matching"}, {"score": 0.0041637779492720295, "phrase": "declarative_grammar_rules"}, {"score": 0.0037336520904376687, "phrase": "full-fledged_compiler_tools"}, {"score": 0.003503497128638099, "phrase": "multiple_queries"}, {"score": 0.0028944757265206332, "phrase": "time_complexity"}, {"score": 0.0027407299369891502, "phrase": "multiple-query_matching"}, {"score": 0.002124247104243502, "phrase": "efficient_extensible_markup"}], "paper_keywords": ["eXtensible Markup Language streams", " continuous query", " twig-query matching", " syntactic pattern recognition", " unambiguity"], "paper_abstract": "We propose a method of syntactic pattern recognition for eXtensible Markup Language query matching on eXtensible Markup Language streams. A set of declarative grammar rules is generated, and then its parser, which is produced by full-fledged compiler tools, can be used to match multiple queries concurrently with only one-time scan on eXtensible Markup Language streams. The grammar is proved unambiguous with lemmas and theorems. We also analyze the time complexity and prove the correctness of multiple-query matching. Several experiments were conducted to demonstrate the efficiency and scalability of the proposed method in various aspects. As a result, the proposed method is beneficial for building efficient eXtensible Markup Language-based publish/subscribe applications.", "paper_title": "Unambiguous syntactic eXtensible Markup Language query matching on eXtensible Markup Language streams", "paper_id": "WOS:000331879700004"}