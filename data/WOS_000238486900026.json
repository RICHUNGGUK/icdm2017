{"auto_keywords": [{"score": 0.03620728805533268, "phrase": "change_management"}, {"score": 0.004694700982410345, "phrase": "method_engineering"}, {"score": 0.004351595642056769, "phrase": "project-specific_methods"}, {"score": 0.004278807087784626, "phrase": "information_system_development"}, {"score": 0.004171891198117439, "phrase": "aided_method_engineering"}, {"score": 0.003899612025233852, "phrase": "computerized_tool"}, {"score": 0.003349984456443527, "phrase": "model_descriptions"}, {"score": 0.0032938942910948066, "phrase": "method_descriptions"}, {"score": 0.00266693888510356, "phrase": "current_version"}, {"score": 0.002471661547432869, "phrase": "newer_version"}, {"score": 0.0024097920845706795, "phrase": "adopted_method"}, {"score": 0.0021773853011112882, "phrase": "version_control"}, {"score": 0.0021049977753042253, "phrase": "method_engineering_processes"}], "paper_keywords": [""], "paper_abstract": "Method Engineering is the discipline for exploring techniques to build project-specific methods for information system development and Computer Aided Method Engineering (CAME) is a kind of computerized tool for supporting the processes to build them. In such method engineering environments, version control and change management for both model descriptions and method descriptions should be seamlessly combined. In addition, when the method being used is changed during a project, we should check whether the current version of a model is still consistent with the newer version of the adopted method. This paper proposes a technique to solve the issues on version control and change management in method engineering processes.", "paper_title": "Configuration management in a Method Engineering context", "paper_id": "WOS:000238486900026"}