{"auto_keywords": [{"score": 0.04886626441968086, "phrase": "time_windows"}, {"score": 0.010451197186428797, "phrase": "traveling_salesman_problem"}, {"score": 0.00998202254901368, "phrase": "tsptw"}, {"score": 0.00481495049065317, "phrase": "time_bucket_formulation"}, {"score": 0.0043452175611323335, "phrase": "minimum-cost_path"}, {"score": 0.0038810583785936505, "phrase": "extended_formulation"}, {"score": 0.0030017207229983385, "phrase": "good_partition"}, {"score": 0.0028807718824400697, "phrase": "iterative_linear_programming"}, {"score": 0.0027789349951704177, "phrase": "different_sizes"}, {"score": 0.0027363971333961967, "phrase": "lp_relaxation"}, {"score": 0.00266693888510356, "phrase": "strong_lower_bounds"}, {"score": 0.0025726416100664853, "phrase": "good_starting_point"}, {"score": 0.002468938912850425, "phrase": "computational_results"}, {"score": 0.002443671484766342, "phrase": "hard_test_problems"}, {"score": 0.0022973933270056743, "phrase": "practical_scheduling_application"}, {"score": 0.0022161333611134806, "phrase": "symmetric_instances"}, {"score": 0.0021049977753042253, "phrase": "previously_unsolved_benchmark_instances"}], "paper_keywords": ["traveling salesman problem", " time windows", " cutting planes", " integer programming"], "paper_abstract": "The traveling salesman problem with time windows (TSPTW) is the problem of finding a minimum-cost path visiting a set of cities exactly once, where each city must be visited within a given time window. We present an extended formulation for the problem based on partitioning the time windows into subwindows that we call buckets. We present cutting planes for this formulation that are computationally more effective than the ones known in the literature because they exploit the division of the time windows into buckets. To obtain a good partition of the time windows, we propose an iterative linear programming (LP)-based procedure that may produce buckets of different sizes. The LP relaxation of this formulation yields strong lower bounds for the TSPTW and provides a good starting point for our branch-and-cut algorithm. We also present encouraging computational results on hard test problems from the literature, namely, asymmetric instances arising from a practical scheduling application, as well as randomly generated symmetric instances. In particular, we solve a number of previously unsolved benchmark instances.", "paper_title": "A Time Bucket Formulation for the Traveling Salesman Problem with Time Windows", "paper_id": "WOS:000300842900010"}