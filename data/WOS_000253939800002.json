{"auto_keywords": [{"score": 0.049759738849303216, "phrase": "xpath_expressions"}, {"score": 0.015719716506582538, "phrase": "xpath_queries"}, {"score": 0.01541073737800393, "phrase": "xml_data"}, {"score": 0.014567460149232155, "phrase": "xpath"}, {"score": 0.012018414481702867, "phrase": "minimization_problem"}, {"score": 0.004750959742844963, "phrase": "navigational_queries"}, {"score": 0.004641005983799053, "phrase": "xml_documents"}, {"score": 0.004564021871465994, "phrase": "element_nodes"}, {"score": 0.0044883089984593455, "phrase": "wide_use"}, {"score": 0.004155822339559211, "phrase": "increasing_attention"}, {"score": 0.004114303071093143, "phrase": "research_community"}, {"score": 0.0039655692352351625, "phrase": "xpath_query"}, {"score": 0.003860774424566198, "phrase": "equivalent_ones"}, {"score": 0.003822191555851545, "phrase": "smallest_size"}, {"score": 0.0037839928025418896, "phrase": "crucial_issue"}, {"score": 0.0036349635956605675, "phrase": "wide_fragment"}, {"score": 0.003287482882222731, "phrase": "syntactic_restrictions"}, {"score": 0.0032546105164772995, "phrase": "examined_fragment"}, {"score": 0.003126365132352301, "phrase": "relational_setting"}, {"score": 0.00306414423737093, "phrase": "mere_conjunctive_queries"}, {"score": 0.0029139401928060123, "phrase": "implicit_form"}, {"score": 0.002799080959445996, "phrase": "disjunctive_ones"}, {"score": 0.0026529282690379128, "phrase": "global_minimality"}, {"score": 0.002375087848055933, "phrase": "\"general\"_disjunctive_queries"}, {"score": 0.002213596068643924, "phrase": "containment_problem"}, {"score": 0.002184101477091303, "phrase": "specific_forms"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time"}], "paper_keywords": ["languages", " theory", " query containment", " query minimization", " tree pattern matching", " XPath expressions"], "paper_abstract": "XPath expressions define navigational queries on XML data and are issued on XML documents to select sets of element nodes. Due to the wide use of XPath, which is embedded into several languages for querying and manipulating XML data, the problem of efficiently answering XPath queries has received increasing attention from the research community. As the efficiency of computing the answer of an XPath query depends on its size, replacing XPath expressions with equivalent ones having the smallest size is a crucial issue in this direction. This article investigates the minimization problem for a wide fragment of XPath (namely XP([*])), where the use of the most common operators (child, descendant, wildcard and branching) is allowed with some syntactic restrictions. The examined fragment consists of expressions which have not been specifically studied in the relational setting before: neither are they mere conjunctive queries (as the combination of \"//\" and \"*\" enables an implicit form of disjunction to be expressed) nor do they coincide with disjunctive ones (as the latter are more expressive). Three main contributions are provided. The \"global minimality\" property is shown to hold: the minimization of a given XPath expression can be accomplished by removing pieces of the expression, without having to re-formulate it (as for \"general\" disjunctive queries). Then, the complexity of the minimization problem is characterized, showing that it is the same as the containment problem. Finally, specific forms of XPath expressions are identified, which can be minimized in polynomial time.", "paper_title": "On the minimization of XPath queries", "paper_id": "WOS:000253939800002"}