{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "n_points"}, {"score": 0.004556901872357751, "phrase": "frequently_occurring_problem"}, {"score": 0.004312622975366672, "phrase": "n_equal_and_non-overlapping_circles"}, {"score": 0.003247868216333148, "phrase": "gap_ratio"}, {"score": 0.0031223774204093713, "phrase": "maximum_gap"}, {"score": 0.0030494153169181334, "phrase": "minimum_gap"}, {"score": 0.0029547698888028697, "phrase": "point_insertion"}, {"score": 0.0028405715222684183, "phrase": "linear_time_algorithm"}, {"score": 0.002752390133272192, "phrase": "optimal_n-point_sequence"}, {"score": 0.002688050388891007, "phrase": "maximum_gap_ratio"}, {"score": 0.0021724831184390192, "phrase": "local_search_heuristics"}, {"score": 0.0021049977753042253, "phrase": "good_solution"}], "paper_keywords": ["algorithm", " circle packing", " computational geometry", " discrepancy", " local search", " uniformity"], "paper_abstract": "Arranging n points as uniformly as possible is a frequently occurring problem. It is equivalent to packing n equal and non-overlapping circles in a unit square. In this paper we generalize this problem in such a way that points are inserted one by one with uniformity preserved at every instance. Our criterion for uniformity is to minimize the gap ratio (which is the maximum gap over the minimum gap) at every point insertion. We present a linear time algorithm for finding an optimal n-point sequence with the maximum gap ratio bounded by 2([n/2]/([n/2]+1)) in the 1-dimensional case. We describe how hard the same problem is for a point set in the plane and propose a local search heuristics for finding a good solution.", "paper_title": "Inserting points uniformly at every instance", "paper_id": "WOS:000239578100004"}