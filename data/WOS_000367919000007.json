{"auto_keywords": [{"score": 0.03653571722812333, "phrase": "quantified_boolean_formula"}, {"score": 0.010612387000973441, "phrase": "disjunctive_logic_programs"}, {"score": 0.010343436022982447, "phrase": "second_level"}, {"score": 0.010264073935921885, "phrase": "polynomial_hierarchy"}, {"score": 0.005590892644174166, "phrase": "input_program"}, {"score": 0.004777802032505079, "phrase": "main_reasoning_problems"}, {"score": 0.004398872331144531, "phrase": "new_exact_method"}, {"score": 0.004353660546882615, "phrase": "disjunctive_problems"}, {"score": 0.004308911439983845, "phrase": "small_distance"}, {"score": 0.004275650416511604, "phrase": "disjunctive_programs"}, {"score": 0.003997891221012094, "phrase": "smallest_number"}, {"score": 0.003835972725191194, "phrase": "first_phase"}, {"score": 0.0038063484186290817, "phrase": "smallest_backdoor"}, {"score": 0.003680587852807675, "phrase": "efficient_algorithm"}, {"score": 0.0036427316134070007, "phrase": "smallest_vertex_cover"}, {"score": 0.003577414339646767, "phrase": "second_phase"}, {"score": 0.0034951469511975346, "phrase": "logic_program"}, {"score": 0.0033971539563683174, "phrase": "universally_quantified_variables"}, {"score": 0.003310447652300423, "phrase": "total_size"}, {"score": 0.003111246537236124, "phrase": "least_model"}, {"score": 0.0030872017736888113, "phrase": "horn_program"}, {"score": 0.0030554300179552415, "phrase": "level_numberings"}, {"score": 0.0030239842475439814, "phrase": "third_phase"}, {"score": 0.003000611846524314, "phrase": "universal_variables"}, {"score": 0.0029697285713156, "phrase": "universal_expansion"}, {"score": 0.0029467742734417255, "phrase": "propositional_formula"}, {"score": 0.0029013950320185573, "phrase": "last_phase"}, {"score": 0.0027982016314450717, "phrase": "backdoor_but_linear"}, {"score": 0.0026986685585382347, "phrase": "resulting_formula"}, {"score": 0.0026778037719529337, "phrase": "sat_solver"}, {"score": 0.0025959411981464962, "phrase": "qbf-sat_solver"}, {"score": 0.0025493457404304446, "phrase": "asp_reasoning_problems"}, {"score": 0.0024650133858815353, "phrase": "asp_problems"}, {"score": 0.0024522885169424706, "phrase": "propositional_satisfiability"}, {"score": 0.0024333239726872604, "phrase": "combinatorial_explosion"}, {"score": 0.002328588996633081, "phrase": "first_level"}, {"score": 0.0022168460543913787, "phrase": "parameterized_complexity"}, {"score": 0.0021104540227223456, "phrase": "plausible_complexity-theoretic_assumptions"}], "paper_keywords": ["Theory", " Parameterized complexity", " backdoors", " answer set programming", " quantified Boolean formulas", " propositional satisfiability"], "paper_abstract": "The main reasoning problems for disjunctive logic programs are complete for the second level of the polynomial hierarchy and hence considered harder than the same problems for normal (i.e., disjunction-free) programs, which are on the first level. We propose a new exact method for solving the disjunctive problems which exploits the small distance of a disjunctive programs from being normal. The distance is measured in terms of the size of a smallest \"backdoor to normality,\" which is the smallest number of atoms whose deletion makes the program normal. Our method consists of three phases. In the first phase, a smallest backdoor is computed. We show that this can be done using an efficient algorithm for computing a smallest vertex cover of a graph. In the second phase, the backdoor is used to transform the logic program into a quantified Boolean formula (QBF) where the number of universally quantified variables equals the size of the backdoor and where the total size of the quantified Boolean formula is quasilinear in the size of the given logic program. The quasilinearity is achieved by means of a characterization of the least model of a Horn program in terms of level numberings. In a third phase, the universal variables are eliminated using universal expansion yielding a propositional formula. The blowup in the last phase is confined to a factor that is exponential in the size of the backdoor but linear in the size of the quantified Boolean formula. By checking the satisfiability of the resulting formula with a SAT solver (or by checking the satisfiability of the quantified Boolean formula by a QBF-SAT solver), we can decide the ASP reasoning problems on the input program. In consequence, we have a transformation from ASP problems to propositional satisfiability where the combinatorial explosion, which is expected when transforming a problem from the second level of the polynomial hierarchy to the first level, is confined to a function of the distance to normality of the input program. In terms of parameterized complexity, the transformation is fixed-parameter tractable. We complement this result by showing that (under plausible complexity-theoretic assumptions) such a fixed-parameter tractable transformation is not possible if we consider the distance to tightness instead of distance to normality.", "paper_title": "Backdoors to Normality for Disjunctive Logic Programs", "paper_id": "WOS:000367919000007"}