{"auto_keywords": [{"score": 0.03178622715000191, "phrase": "high_probability"}, {"score": 0.00481495049065317, "phrase": "combinatorial_search_problems"}, {"score": 0.004718314112245913, "phrase": "space-efficient_parallel_strategies"}, {"score": 0.004241771072194993, "phrase": "n-node_tree"}, {"score": 0.0037555742428544096, "phrase": "efficient_algorithms"}, {"score": 0.0035337158050484474, "phrase": "backtrack_search"}, {"score": 0.003445174898115646, "phrase": "deterministic_algorithm"}, {"score": 0.0032088487124106936, "phrase": "las_vegas"}, {"score": 0.0029285940369182277, "phrase": "backtrack_search_algorithm"}, {"score": 0.002840708910768261, "phrase": "las_vegas_algorithm"}, {"score": 0.0024766636161181544, "phrase": "remarkable_feature"}, {"score": 0.0023066199295447686, "phrase": "significant_improvement"}, {"score": 0.002283298119790413, "phrase": "previous_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Combinatorial search problems", " Distributed algorithms", " Backtrack search", " Branch-and-bound", " Space-efficient algorithms"], "paper_abstract": "We present space-efficient parallel strategies for two fundamental combinatorial search problems, namely, backtrack search and branch-and-bound, both involving the visit of an n-node tree of height h under the assumption that a node can be accessed only through its father or its children. For both problems we propose efficient algorithms that run on a p-processor distributed-memory machine. For backtrack search, we give a deterministic algorithm running in 0 (n/p + h logp) time, and a Las Vegas algorithm requiring optimal 0 (n/p + h) time, with high probability. Building on the backtrack search algorithm, we also derive a Las Vegas algorithm for branch-and-bound which runs in 0 ((n/p + h logp log n)h log(2) n) time, with high probability. A remarkable feature of our algorithms is the use of only constant space per processor, which constitutes a significant improvement upon previous algorithms whose space requirements per processor depend on the (possibly huge) tree to be explored. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Space-efficient parallel algorithms for combinatorial search problems", "paper_id": "WOS:000352117800006"}