{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multirobot_applications"}, {"score": 0.0047310525657970615, "phrase": "thinkingcap-ii_java_framework"}, {"score": 0.004567596860086148, "phrase": "java_framework"}, {"score": 0.0045143706249204905, "phrase": "thinkingcap-ii"}, {"score": 0.00440976345264104, "phrase": "mobile_multirobot_applications"}, {"score": 0.0040622852274783275, "phrase": "reference_architecture"}, {"score": 0.0038534477978822133, "phrase": "functional_decomposition"}, {"score": 0.0037862398004482253, "phrase": "robotics_system"}, {"score": 0.0036126731589251906, "phrase": "uniform_and_reusable_way"}, {"score": 0.0035496495489801667, "phrase": "software_components"}, {"score": 0.0035082436540296406, "phrase": "robotics_applications"}, {"score": 0.0033473779327638322, "phrase": "software_modules"}, {"score": 0.0032505921489759224, "phrase": "common_way"}, {"score": 0.0031938648476635225, "phrase": "key_aspect"}, {"score": 0.003138124398958758, "phrase": "software_architecture"}, {"score": 0.00304737045343781, "phrase": "code_reusability"}, {"score": 0.0030118058266380503, "phrase": "high_level_abstraction"}, {"score": 0.0029592333031063156, "phrase": "uniform_way"}, {"score": 0.002615977783510631, "phrase": "diverse_complex_platforms"}, {"score": 0.002452333524620638, "phrase": "autonomous_car-like_vehicle"}, {"score": 0.0023674192513753996, "phrase": "manned_vehicle"}, {"score": 0.0021805201234139475, "phrase": "multirobot_transportation_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "This paper presents a Java framework, ThinkingCap-II, for developing mobile multirobot applications, which has been successfully used in indoor, automotive and industrial robotics applications. It consists of a reference architecture that serves as a guide to make the functional decomposition of a robotics system, a software architecture that allows a uniform and reusable way of organising software components for robotics applications, and a communication infrastructure that allows software modules to communicate in a common way. A key aspect of this software architecture is that it allows code reusability by high level abstraction and a uniform way of accessing the characteristics of the sensors. In order to show the suitability of the framework, for both diverse complex platforms and multirobot applications, two case studies are discussed. One is an autonomous car-like vehicle which is guided by a manned vehicle, and the other an autonomous industrial vehicle which is member of a multirobot transportation system. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Programming multirobot applications using the ThinkingCap-II Java framework", "paper_id": "WOS:000274507900007"}