{"auto_keywords": [{"score": 0.047424185998726213, "phrase": "geometric_states"}, {"score": 0.00481495049065317, "phrase": "learned_symbolic_state_abstractions"}, {"score": 0.004660702714929615, "phrase": "robotic_manipulation_tasks"}, {"score": 0.004585433265422727, "phrase": "learned_mapping"}, {"score": 0.004511373893354558, "phrase": "logical_predicates"}, {"score": 0.004331393784852601, "phrase": "geometric_reasoning"}, {"score": 0.003490343299449249, "phrase": "symbolic_states"}, {"score": 0.003076052206618737, "phrase": "labelled_examples"}, {"score": 0.0027218799769229596, "phrase": "symbolic_representations"}, {"score": 0.0025918745925152423, "phrase": "desired_symbolic_state"}, {"score": 0.002529213370528279, "phrase": "geometric_state"}, {"score": 0.002350152413458658, "phrase": "efficient_manipulation_planning"}, {"score": 0.0022196745041124888, "phrase": "geometric_positions"}, {"score": 0.0021571717917276724, "phrase": "path_planner"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Intelligent robots", " Supervised learning", " Automatic planning", " Symbolic reasoning"], "paper_abstract": "We present an approach for planning robotic manipulation tasks that uses a learned mapping between geometric states and logical predicates. Manipulation planning, because it requires task-level and geometric reasoning, requires such a mapping to convert between the two. Consider a robot tasked with putting several cups on a tray. The robot needs to find positions for all the objects, and may need to nest one cup inside another to get them all on the tray. This requires translating back and forth between symbolic states that the planner uses, such as stacked (cupl, cup2), and geometric states representing the positions and poses of the objects. We learn the mapping from labelled examples, and importantly learn a representation that can be used in both the forward (from geometric to symbolic) and reverse directions. This enables us to build symbolic representations of scenes the robot observes, but also to translate a desired symbolic state from a plan into a geometric state that the robot can achieve through manipulation. We also show how such a mapping can be used for efficient manipulation planning: the planner first plans symbolically, then applies the mapping to generate geometric positions that are then sent to a path planner. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Manipulation planning using learned symbolic state abstractions", "paper_id": "WOS:000333492100008"}