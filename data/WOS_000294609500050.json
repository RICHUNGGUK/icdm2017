{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "list_segments"}, {"score": 0.02787239647727171, "phrase": "first-order_formulas"}, {"score": 0.00481495049065317, "phrase": "inter-procedural_analysis"}, {"score": 0.004541918674719973, "phrase": "automatic_synthesis"}, {"score": 0.004461051281091779, "phrase": "sequential_programs"}, {"score": 0.004421156723819163, "phrase": "singly-linked_lists"}, {"score": 0.004342430078306461, "phrase": "infinite_domains"}, {"score": 0.004114527599108734, "phrase": "accurate_abstract_inter-procedural_analysis"}, {"score": 0.003677280504320639, "phrase": "abstract_domains"}, {"score": 0.003499864176875713, "phrase": "universally_quantified_fragment"}, {"score": 0.0034529760173586583, "phrase": "first-order_logic"}, {"score": 0.003071965703296204, "phrase": "local_manner"}, {"score": 0.0025545134727682716, "phrase": "multisets_domain"}, {"score": 0.0022520496048464406, "phrase": "prototype_tool"}, {"score": 0.002124036931047162, "phrase": "non-trivial_procedure_summaries"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Verification", " interprocedural analysis", " abstract interpretation", " pointer analysis", " shape analysis", " data constraints"], "paper_abstract": "We address the problem of automatic synthesis of assertions on sequential programs with singly-linked lists containing data over infinite domains such as integers or reals. Our approach is based on an accurate abstract inter-procedural analysis. Program configurations are represented by graphs where nodes represent list segments without sharing. The data in these list segments are characterized by constraints in abstract domains. We consider a domain where constraints are in a universally quantified fragment of the first-order logic over sequences, as well as a domain constraining the multisets of data in sequences. Our analysis computes the effect of each procedure in a local manner, by considering only the reachable part of the heap from its actual parameters. In order to avoid losses of information, we introduce a mechanism based on unfolding/folding operations allowing to strengthen the analysis in the domain of first-order formulas by the analysis in the multisets domain. The same mechanism is used for strengthening the sound (but incomplete) entailment operator of the domain of first-order formulas. We have implemented our techniques in a prototype tool and we have shown that our approach is powerful enough for automatic (1) generation of non-trivial procedure summaries, (2) pre/postcondition reasoning, and (3) procedure equivalence checking.", "paper_title": "On Inter-Procedural Analysis of Programs with Lists and Data", "paper_id": "WOS:000294609500050"}