{"auto_keywords": [{"score": 0.038072355347867605, "phrase": "model_checking"}, {"score": 0.00481495049065317, "phrase": "software_architecture_techniques"}, {"score": 0.004758053266234474, "phrase": "software_architecture_specifications"}, {"score": 0.004510184935928004, "phrase": "architectural_decisions"}, {"score": 0.004430452655732319, "phrase": "architectural_qualities"}, {"score": 0.004174677062711731, "phrase": "design_and_coding_process"}, {"score": 0.003980687255880282, "phrase": "architectural_model"}, {"score": 0.003818326867123525, "phrase": "relevant_challenge"}, {"score": 0.0034715658596258018, "phrase": "architectural_models"}, {"score": 0.0033101397746161843, "phrase": "exhaustive_and_automatic_verification_technique"}, {"score": 0.0031750418391373035, "phrase": "architectural_specification"}, {"score": 0.003118838635447237, "phrase": "expected_properties"}, {"score": 0.0029561107046138136, "phrase": "software_architectures"}, {"score": 0.0027522340188241446, "phrase": "different_techniques"}, {"score": 0.0025776913268808124, "phrase": "state-of-the-art_in_model_checking_software_architectures"}, {"score": 0.002428617044669043, "phrase": "main_activities"}, {"score": 0.002385595105638277, "phrase": "model_checking_software_architecture_process"}, {"score": 0.0022610379771517966, "phrase": "comparison_framework"}, {"score": 0.0022209780222461587, "phrase": "model_checking_software_architecture_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Software architecture", " Model checking"], "paper_abstract": "Software architecture specifications are used for many different purposes, such as documenting architectural decisions, predicting architectural qualities before the system is implemented, and guiding the design and coding process. In these contexts, assessing the architectural model as early as possible becomes a relevant challenge. Various analysis techniques have been proposed for testing, model checking, and evaluating performance based on architectural models. Among them, model checking is an exhaustive and automatic verification technique, used to verify whether an architectural specification conforms to expected properties. While model checking is being extensively applied to software architectures, little work has been done to comprehensively enumerate and classify these different techniques. The goal of this paper is to investigate the state-of-the-art in model checking software architectures. For this purpose, we first define the main activities in a model checking software architecture process. Then, we define a classification and comparison framework and compare model checking software architecture techniques according to it. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A classification and comparison of model checking software architecture techniques", "paper_id": "WOS:000276535500002"}