{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "requirement_selection"}, {"score": 0.010422523178541782, "phrase": "software_release_planning"}, {"score": 0.00460125407969429, "phrase": "product_software_companies"}, {"score": 0.004417012437860011, "phrase": "next_release"}, {"score": 0.004317848984770719, "phrase": "appropriate_time_plan"}, {"score": 0.004259418153299952, "phrase": "development_project"}, {"score": 0.0041637779492720295, "phrase": "extensive_research"}, {"score": 0.0033937776228549557, "phrase": "project_duration"}, {"score": 0.0030707512751243214, "phrase": "on-time-delivery_project_schedule"}, {"score": 0.002934237411711622, "phrase": "development_process"}, {"score": 0.0027159094186967247, "phrase": "dynamic_adaptation"}, {"score": 0.0025833500717948343, "phrase": "processing_time"}, {"score": 0.002502374576203785, "phrase": "scrum_methodology"}, {"score": 0.002423931101340771, "phrase": "real-life_data"}, {"score": 0.002305589818994465, "phrase": "requirement_dependency"}, {"score": 0.0022231606165229235, "phrase": "corresponding_project_plan"}, {"score": 0.002153450937601075, "phrase": "combined_requirement_selection"}, {"score": 0.0021049977753042253, "phrase": "sequential_selection"}], "paper_keywords": ["Requirement selection", " Requirement scheduling", " Release planning", " Requirement dependency", " Integer linear programming (ILP)", " Simulation", " Scrum"], "paper_abstract": "It is essential for product software companies to decide which requirements should be included in the next release and to make an appropriate time plan of the development project. Compared to the extensive research done on requirement selection, very little research has been performed on time scheduling. In this paper, we introduce two integer linear programming models that integrate time scheduling into software release planning. Given the resource and precedence constraints, our first model provides a schedule for developing the requirements such that the project duration is minimized. Our second model combines requirement selection and scheduling, so that it not only maximizes revenues but also simultaneously calculates an on-time-delivery project schedule. Since requirement dependencies are essential for scheduling the development process, we present a more detailed analysis of these dependencies. Furthermore, we present two mechanisms that facilitate dynamic adaptation for over-estimation or under-estimation of revenues or processing time, one of which includes the Scrum methodology. Finally, several simulations based on real-life data are performed. The results of these simulations indicate that requirement dependency can significantly influence the requirement selection and the corresponding project plan. Moreover, the model for combined requirement selection and scheduling outperforms the sequential selection and scheduling approach in terms of efficiency and on-time delivery.", "paper_title": "An integrated approach for requirement selection and scheduling in software release planning", "paper_id": "WOS:000283154600002"}