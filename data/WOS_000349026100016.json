{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "metamodeling"}, {"score": 0.0038737214010638745, "phrase": "correctness_proofs"}, {"score": 0.0036288825833675127, "phrase": "metamodeling_framework"}, {"score": 0.0025611773887867255, "phrase": "metamodeling_frameworks"}, {"score": 0.0024253827365474734, "phrase": "algebraic_data_types"}, {"score": 0.0023730978395564116, "phrase": "constraint_logic_programming"}, {"score": 0.0021987994275190314, "phrase": "test-case_generation"}, {"score": 0.0021049977753042253, "phrase": "open_world_query_operations"}], "paper_keywords": ["Metamodeling", " Formal specifications", " Automated analysis"], "paper_abstract": "Metamodeling is foundational to many modeling frameworks, and so it is important to formalize and reason about it. Ideally, correctness proofs and test-case generation on the metamodeling framework should be automatic. However, it has yet to be shown that extensive automated reasoning on metamodeling frameworks can be achieved. In this paper, we present one approach to this problem: metamodeling frameworks are specified modularly using algebraic data types and constraint logic programming (CLP). Proofs and test-case generation are encoded as open world query operations and automatically solved.", "paper_title": "Automatically reasoning about metamodeling", "paper_id": "WOS:000349026100016"}