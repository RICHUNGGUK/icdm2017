{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uml_scenario_models"}, {"score": 0.046812928375307615, "phrase": "program_understanding"}, {"score": 0.0307997635923216, "phrase": "program_slicing"}, {"score": 0.00471896896271714, "phrase": "slicing"}, {"score": 0.004578382275810468, "phrase": "important_decomposition_technique"}, {"score": 0.004309725894724034, "phrase": "traditional_slicing_methods"}, {"score": 0.004056769841308405, "phrase": "human_inspection"}, {"score": 0.003975781274672803, "phrase": "modern_programs"}, {"score": 0.0038573081851680656, "phrase": "huge_and_static_program_analyses"}, {"score": 0.003452218803245602, "phrase": "state-of-the_art_research"}, {"score": 0.003152531962718477, "phrase": "possible_solution"}, {"score": 0.0027370835853738626, "phrase": "detail_discussion"}, {"score": 0.0025503112711036994, "phrase": "relevant_program_analyses"}, {"score": 0.0024493494346360415, "phrase": "general_scenario"}, {"score": 0.0021049977753042253, "phrase": "smaller_slices"}], "paper_keywords": ["program slicing", " scenario", " program understanding"], "paper_abstract": "Slicing is an important decomposition technique for program understanding. However, traditional slicing methods tend to produce too large slices for human inspection as modern programs are often huge and static program analyses are hard to be precise enough. According to the state-of-the art research and our own experience, we believe a possible solution to such problem could be incorporating UML scenario models into program slicing. This paper presents a detail discussion on how scenarios can benefit slicing relevant program analyses and proposes a general scenario specified program slicing method. The analyses indicate that scenario specified program slicing may obtain smaller slices for program understanding.", "paper_title": "Program slicing under UML scenario models", "paper_id": "WOS:000256500900003"}