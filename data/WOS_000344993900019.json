{"auto_keywords": [{"score": 0.04955111375780364, "phrase": "top-k_queries"}, {"score": 0.00481495049065317, "phrase": "scalable_indexing"}, {"score": 0.004683292152590589, "phrase": "top-k_query"}, {"score": 0.004606023493393774, "phrase": "best_k_tuples"}, {"score": 0.004381749459671914, "phrase": "target_relation"}, {"score": 0.004261885692956071, "phrase": "user-specific_scoring_function"}, {"score": 0.004031865694174726, "phrase": "indexing_structure"}, {"score": 0.00392153537973826, "phrase": "varying_scoring_functions"}, {"score": 0.0038782499819752423, "phrase": "retrieval_sizes"}, {"score": 0.003814212645832246, "phrase": "existing_research_efforts"}, {"score": 0.0033015555065209865, "phrase": "layer-based_approach"}, {"score": 0.003175676186323053, "phrase": "consecutive_multiple_layers"}, {"score": 0.0030715948036518603, "phrase": "dual-resolution_layer"}, {"score": 0.003004103583782076, "phrase": "coarse-level_and_fine-level_layers"}, {"score": 0.002905629026254221, "phrase": "coarse-level_layers"}, {"score": 0.002794802975530612, "phrase": "coarse-level_layer"}, {"score": 0.002763919794139171, "phrase": "fine-level_sublayers"}, {"score": 0.0022880528191813083, "phrase": "virtual_layer"}, {"score": 0.0021885300925245516, "phrase": "tuple_updates"}], "paper_keywords": ["skyline", " convex skyline", " for all-dominance", " there exists-dominance", " dual-resolution layer"], "paper_abstract": "A top-k query retrieves the best k tuples by assigning scores for each tuple in a target relation with respect to a user-specific scoring function. This paper studies the problem of constructing an indexing structure for supporting top-k queries over varying scoring functions and retrieval sizes. The existing research efforts can be categorized into three approaches: list-, layer-, and view-based approaches. In this paper, we mainly focus on the layer-based approach that pre-materializes tuples into consecutive multiple layers. We first propose a dual-resolution layer that consists of coarse-level and fine-level layers. Specifically, we build coarse-level layers using skylines, and divide each coarse-level layer into fine-level sublayers using convex skylines. To make our proposed dual-resolution layer scalable, we then address the following optimization directions: 1) index construction; 2) disk-based storage scheme; 3) the design of the virtual layer; and 4) index maintenance for tuple updates. Our evaluation results show that our proposed method is more scalable than the state-of-the-art methods.", "paper_title": "Toward Scalable Indexing for Top-k Queries", "paper_id": "WOS:000344993900019"}