{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "freeze_quantifier"}, {"score": 0.049655608595442415, "phrase": "constraint_ltl"}, {"score": 0.004544814806809254, "phrase": "ltl"}, {"score": 0.00450456611645112, "phrase": "presburger_constraints"}, {"score": 0.00436661740263741, "phrase": "formal_language"}, {"score": 0.004251728624599691, "phrase": "operational_models"}, {"score": 0.003959863717046575, "phrase": "real-time_logics"}, {"score": 0.0038900709793274484, "phrase": "variable-binding_mechanism"}, {"score": 0.0035590664550919854, "phrase": "sequence_diagrams"}, {"score": 0.003527550673371394, "phrase": "navigation_logics"}, {"score": 0.0032852337992126564, "phrase": "simple_domain"}, {"score": 0.0030868583963299698, "phrase": "surprising_result"}, {"score": 0.0030189426536422577, "phrase": "poor_language"}, {"score": 0.002874726518572154, "phrase": "freeze-free_constraint_ltl"}, {"score": 0.0027989800906333784, "phrase": "qualitative_predicates"}, {"score": 0.002689076130099546, "phrase": "positive_side"}, {"score": 0.002641621667026613, "phrase": "complexity_results"}, {"score": 0.002152397315548125, "phrase": "complexity_class"}, {"score": 0.0021238662452063707, "phrase": "pspace"}, {"score": 0.002105001066976182, "phrase": "expspace"}], "paper_keywords": ["linear-time temporal logic", " constraints", " freeze quantifier", " decidability", " computational complexity"], "paper_abstract": "Constraint LTL, a generalisation of LTL over Presburger constraints, is often used as a formal language to specify the behavior of operational models with constraints. The freeze quantifier can be part of the language, as in some real-time logics, but this variable-binding mechanism is quite general and ubiquitous in many logical languages (first-order temporal logics, hybrid logics, logics for sequence diagrams, navigation logics, logics with lambda-abstraction, etc.). We show that Constraint LTL over the simple domain [N, =] augmented with the freeze quantifier is undecidable which is a surprising result in view of the poor language for constraints (only equality tests). Many versions of freeze-free Constraint LTL are decidable over domains with qualitative predicates and our undecidability result actually establishes Sigma(1)(1)-completeness. On the positive side, we provide complexity results when the domain is finite (EXPSPACE-completeness) or when the formulae are flat in a sense introduced in the paper. Our undecidability results are sharp (i.e. with restrictions on the number of variables) and all our complexity characterisations ensure completeness with respect to some complexity class (mainly PSPACE and EXPSPACE). (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "On the freeze quantifier in Constraint LTL: Decidability and complexity", "paper_id": "WOS:000243666100002"}