{"auto_keywords": [{"score": 0.049734762741514116, "phrase": "embedded_systems"}, {"score": 0.00481495049065317, "phrase": "instruction_cache_locking"}, {"score": 0.004694952973922538, "phrase": "cache"}, {"score": 0.004528488165249491, "phrase": "memory_speed"}, {"score": 0.004274396662662802, "phrase": "modern_processors"}, {"score": 0.003976656675903324, "phrase": "execution_time"}, {"score": 0.003726398477619122, "phrase": "dramatic_influence"}, {"score": 0.0036862417490612673, "phrase": "system_performance"}, {"score": 0.003646516176920946, "phrase": "real-time_systems"}, {"score": 0.0035171528695692213, "phrase": "worst-case_execution_time"}, {"score": 0.0034293295415901807, "phrase": "average-case_execution_time"}, {"score": 0.003404641491327701, "phrase": "acet"}, {"score": 0.003343691804204423, "phrase": "important_criterion"}, {"score": 0.0032601856292942106, "phrase": "soft_real-time"}, {"score": 0.003190265467214105, "phrase": "image_processing_systems"}, {"score": 0.003110579040263398, "phrase": "instruction_cache"}, {"score": 0.0029893477597041493, "phrase": "minimized_estimable_acet"}, {"score": 0.0029252191241632888, "phrase": "probability_profile_information"}, {"score": 0.0028936710552719806, "phrase": "probability_execution_flow_tree"}, {"score": 0.002801047964786189, "phrase": "embedded_application"}, {"score": 0.0027808699346360656, "phrase": "runtime_profile_information"}, {"score": 0.002750874355974879, "phrase": "static_i-cache_locking_problem"}, {"score": 0.0024950272594582673, "phrase": "dynamic_i-cache"}, {"score": 0.002423882939663573, "phrase": "dynamic_i-cache_locking"}, {"score": 0.002363293825140551, "phrase": "application's_branching_information"}, {"score": 0.0022876085523721324, "phrase": "compilation_time"}, {"score": 0.0022063469115990715, "phrase": "experimental_results"}, {"score": 0.0021746545596056125, "phrase": "proposed_algorithms"}, {"score": 0.00213567715613494, "phrase": "embedded_applications"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_techniques"}], "paper_keywords": ["Cache locking", " Probability Profile", " ACET"], "paper_abstract": "Cache is effective in bridging the gap between processor and memory speed. It is also a source of unpredictability because of its dynamic and adaptive behavior. A lot of modern processors provide cache locking capability which locks instructions or data of a program into cache so that a more precise estimation of execution time can be obtained. The selection of instructions or data to be locked in cache has a dramatic influence on the system performance. For real-time systems, cache locking is mostly utilized to improve the Worst-Case Execution Time (WCET). However, Average-Case Execution Time (ACET) is also an important criterion for some embedded systems, especially for soft real-time embedded systems, such as image processing systems. This paper aims to utilize instruction cache (I-Cache) locking technique to guarantee a minimized estimable ACET for embedded systems by exploring the probability profile information. A Probability Execution Flow Tree (PEFT) is introduced to model an embedded application with runtime profile information. The static I-Cache locking problem is proved to be NP-Hard and two kinds of locking, fully locking and partially locking, are proposed to find the instructions to be locked. Dynamic I-Cache locking can further improve the ACET. For dynamic I-Cache locking, an algorithm that leverages the application's branching information is proposed. All the algorithms are executed during the compilation time and the results are applied during the runtime. Experimental results show that the proposed algorithms reduce the ACET of embedded applications further compared to state-of-the-art techniques.", "paper_title": "Instruction Cache Locking for Embedded Systems using Probability Profile", "paper_id": "WOS:000305131600006"}