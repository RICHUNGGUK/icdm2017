{"auto_keywords": [{"score": 0.04980594858796438, "phrase": "maximal_end-component_decomposition"}, {"score": 0.01536809382246125, "phrase": "winning_set"}, {"score": 0.015281404841477565, "phrase": "buchi_objectives"}, {"score": 0.015195197312885855, "phrase": "alternating_games"}, {"score": 0.011608464509166949, "phrase": "earlier_bound"}, {"score": 0.009705524106502945, "phrase": "edge_insertions"}, {"score": 0.009568452614472775, "phrase": "edge_deletions"}, {"score": 0.00924725411142359, "phrase": "first_dynamic_algorithms"}, {"score": 0.00481495049065317, "phrase": "alternating_buchi_games"}, {"score": 0.004586531354697466, "phrase": "central_problem"}, {"score": 0.0045603777806863775, "phrase": "computer-aided_verification"}, {"score": 0.004521425511725114, "phrase": "large_number"}, {"score": 0.004457239708362591, "phrase": "long-standing_best_known_upper_bound"}, {"score": 0.003918900658052011, "phrase": "new_technique"}, {"score": 0.0038743048063966242, "phrase": "running_time"}, {"score": 0.003690344014465526, "phrase": "almost-sure_winning_vertices"}, {"score": 0.0036692838018406292, "phrase": "buchi"}, {"score": 0.0035862243508162192, "phrase": "probabilistic_transitions"}, {"score": 0.0034355080345982755, "phrase": "concurrent_graph_games"}, {"score": 0.0034158953664461663, "phrase": "constant_actions"}, {"score": 0.0032629585038738856, "phrase": "markov_decision_processes"}, {"score": 0.00274781354488798, "phrase": "core_graph_theoretic_problem"}, {"score": 0.0027165079504297726, "phrase": "probabilistic_systems"}, {"score": 0.0026022472788688462, "phrase": "maximal_end-component_decomposition_problem"}, {"score": 0.002436289099444074, "phrase": "buchi_games"}, {"score": 0.0021049977753042253, "phrase": "edge_deletion"}], "paper_keywords": ["Algorithms", " Verification", " Graph games", " Buchi objectives", " graph algorithms", " dynamic graph algorithms", " verification and synthesis"], "paper_abstract": "The computation of the winning set for Buchi objectives in alternating games on graphs is a central problem in computer-aided verification with a large number of applications. The long-standing best known upper bound for solving the problem is (O) over tilde (n. m), where n is the number of vertices and m is the number of edges in the graph. We are the first to break the 0(n m) boundary by presenting a new technique that reduces the running time to 0(n(2)). This bound also leads to O(n(2))-time algorithms for computing the set of almost-sure winning vertices for Buchi objectives (1) in alternating games with probabilistic transitions (improving an earlier bound of 0(n,. m)), (2) in concurrent graph games with constant actions (improving an earlier bound of O(n(3))), and (3) in Markov decision processes (improving for m > n(4/3) an earlier bound of O(m.,root m)). We then show how to maintain the winning set for Buchi objectives in alternating games under a sequence of edge insertions or a sequence of edge deletions in 0(n) amortized time per operation. Our algorithms are the first dynamic algorithms for this problem. We then consider another core graph theoretic problem in verification of probabilistic systems, namely computing the maximal end-component decomposition of a graph. We present two improved static algorithms for the maximal end-component decomposition problem. Our first algorithm is an O(m.root m)-time algorithm, and our second algorithm is an 0(n2)-time algorithm which is obtained using the same technique as for alternating Buchi games. Thus, we obtain an O(min{m . root m, n(2)})-time algorithm improving the long-standing O(n . m) time bound. Finally, we show how to maintain the maximal end-component decomposition of a graph under a sequence of edge insertions or a sequence of edge deletions in O(n) amortized time per edge deletion, and O(m) worst-case time per edge insertion. Again, our algorithms are the first dynamic algorithms for this problem.", "paper_title": "Efficient and Dynamic Algorithms for Alternating Buchi Games and Maximal End-Component Decomposition", "paper_id": "WOS:000337201400001"}