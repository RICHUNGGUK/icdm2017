{"auto_keywords": [{"score": 0.04479383540180509, "phrase": "utility_function"}, {"score": 0.008188174348361348, "phrase": "resource_providers"}, {"score": 0.00481495049065317, "phrase": "resource_scheduling_optimization_policy"}, {"score": 0.004566567411073082, "phrase": "efficient_qos"}, {"score": 0.004542441734438654, "phrase": "based_resource_scheduling"}, {"score": 0.004494570360108983, "phrase": "computational_grid"}, {"score": 0.004330941610682453, "phrase": "qos_dimensions"}, {"score": 0.004129248271757936, "phrase": "market_model"}, {"score": 0.004085713541752114, "phrase": "distributed_optimization"}, {"score": 0.004000010693331517, "phrase": "global_utility"}, {"score": 0.0036553070575015344, "phrase": "qos_dimension"}, {"score": 0.0035408501923902477, "phrase": "grid_task_agent"}, {"score": 0.0034849681064606543, "phrase": "consumer_pay"}, {"score": 0.0034299649219748513, "phrase": "grid_resource"}, {"score": 0.003304965389155549, "phrase": "task_agents"}, {"score": 0.0032527939106509946, "phrase": "task_agent"}, {"score": 0.003101153870424188, "phrase": "weighted_sum"}, {"score": 0.0030684249587688826, "phrase": "single-dimensional_qos_utility_function"}, {"score": 0.003036040409062437, "phrase": "qos_based_grid_resource_scheduling_optimization"}, {"score": 0.002879158342988017, "phrase": "resource_user_and_resource_provider"}, {"score": 0.0026447893350441502, "phrase": "optimal_multiple_qos"}, {"score": 0.002561892963059385, "phrase": "grid_users"}, {"score": 0.00229164285862567, "phrase": "optimal_qos_based_resource_scheduling"}, {"score": 0.0021731423856364003, "phrase": "optimal_resource_allocation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["grid", " Quality of Service (QoS)", " resource scheduling"], "paper_abstract": "This paper is to solve efficient QoS based resource scheduling in computational grid. It defines a set of QoS dimensions with utility function for each dimensions, uses a market model for distributed optimization to maximize the global utility. The user specifies its requirement by a utility function. A utility function can be specified for each QoS dimension. In the grid, grid task agent acted as consumer pay for the grid resource and resource providers get profits from task agents. The task agent' utility can then be defined as a weighted sum of single-dimensional QoS utility function. QoS based grid resource scheduling optimization is decomposed to two subproblems: joint optimization of resource user and resource provider in grid market. An iterative multiple QoS scheduling algorithm that is used to perform optimal multiple QoS based resource scheduling. The grid users propose payment for the resource providers, while the resource providers set a price for each resource. The experiments show that optimal QoS based resource scheduling involves less overhead and leads to more efficient resource allocation than no optimal resource allocation. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "A distributed multiple dimensional QoS constrained resource scheduling optimization policy in computational grid", "paper_id": "WOS:000237908400009"}