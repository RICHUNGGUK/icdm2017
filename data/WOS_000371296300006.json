{"auto_keywords": [{"score": 0.03861529053005002, "phrase": "new_approach"}, {"score": 0.00481495049065317, "phrase": "forward-checking"}, {"score": 0.004701985831087475, "phrase": "generalised_hypertree_decomposition"}, {"score": 0.004635477242873163, "phrase": "non-binary_constraint_satisfaction_problems"}, {"score": 0.004420472010542188, "phrase": "best_approach"}, {"score": 0.004357927940322685, "phrase": "extensional_constraint_satisfaction_problems"}, {"score": 0.004255639740735269, "phrase": "finite_domains"}, {"score": 0.004155742403177802, "phrase": "theoretical_time_complexity"}, {"score": 0.004116440453049531, "phrase": "fixed_widths"}, {"score": 0.0037969755088553326, "phrase": "memory_explosion_problem"}, {"score": 0.003603549914861701, "phrase": "extensional_non-binary_csps"}, {"score": 0.003436242862104006, "phrase": "enumerative_search_algorithm"}, {"score": 0.003094920033010818, "phrase": "cluster-oriented_forward-checking_algorithm"}, {"score": 0.002683304054823427, "phrase": "initial_problem"}, {"score": 0.002326304140277375, "phrase": "first_version"}, {"score": 0.0022715929119140194, "phrase": "second_one"}, {"score": 0.0022076314894741394, "phrase": "dynamic_reordering"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["constraint satisfaction problems", " forward checking", " generalised hypertree decomposition"], "paper_abstract": "Methods exploiting hypertree decompositions are considered as the best approach for solving extensional constraint satisfaction problems (CSPs) on finite domains, with regard to theoretical time complexity when fixed widths are considered. However, this result has not been confirmed in practice because of the memory explosion problem. In this article, a new approach for efficient solving extensional non-binary CSPs is proposed. It is a combination of an enumerative search algorithm which is memory efficient and a Generalised Hypertree Decomposition (GHD) that is time efficient. This new approach is a cluster-oriented Forward-Checking algorithm. It considers the solutions of the subproblems deriving from the decomposition, as the values to be assigned rather than the values associated with the variables of the initial problem. In addition, the algorithm is guided by an order induced by the clusters deriving from the GHD. Moreover, two improved versions of this algorithm are proposed. The first version uses nogoods and the second one improves it again by a dynamic reordering of subtrees. All these algorithms have been implemented and the experimental results are promising.", "paper_title": "A Forward-Checking algorithm based on a Generalised Hypertree Decomposition for solving non-binary constraint satisfaction problems", "paper_id": "WOS:000371296300006"}