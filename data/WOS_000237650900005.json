{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "k-nearest-neighbor_search"}, {"score": 0.004363846362238565, "phrase": "k_nearest_neighbor"}, {"score": 0.003954837422946628, "phrase": "serial_environment"}, {"score": 0.003728000957725218, "phrase": "parallel_knn_search_processing"}, {"score": 0.0030314419455512013, "phrase": "efficient_handling"}, {"score": 0.0029722900280316216, "phrase": "knn_retrieval"}, {"score": 0.002914288956035066, "phrase": "arbitrary_values"}, {"score": 0.0025137856138000036, "phrase": "multiple_disks"}, {"score": 0.002346160830406661, "phrase": "non-qualifying_entries"}, {"score": 0.002233301265743633, "phrase": "real_and_synthetic_datasets"}, {"score": 0.0021682027434117095, "phrase": "bfpknn"}], "paper_keywords": [""], "paper_abstract": "Even though the problem of k nearest neighbor (kNN) query is well-studied in serial environment, there is little prior work on parallel kNN search processing in parallel one. In this paper, we present the first Best-First based Parallel kNN (BFPkNN) query algorithm in a multi-disk setting, for efficient handling of kNN retrieval with arbitrary values of k by parallelization. The core of our method is to access more entries from multiple disks simultaneously and enable several effective pruning heuristics to discard non-qualifying entries. Extensive experiments with real and synthetic datasets confirm that BFPkNN significantly outperforms its competitors in both efficiency and scalability.", "paper_title": "Efficient parallel processing for k-nearest-neighbor search in spatial databases", "paper_id": "WOS:000237650900005"}