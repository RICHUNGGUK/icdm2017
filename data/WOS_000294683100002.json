{"auto_keywords": [{"score": 0.0376350364622319, "phrase": "yang"}, {"score": 0.03262364578187595, "phrase": "anderson"}, {"score": 0.007240915863691247, "phrase": "comput"}, {"score": 0.00481495049065317, "phrase": "sub-logarithmic_rmr-complexity"}, {"score": 0.004690305164360866, "phrase": "fundamental_distributed_coordination_problem"}, {"score": 0.004649474569983707, "phrase": "shared-memory_mutual_exclusion_research"}, {"score": 0.004588891098290524, "phrase": "local-spin_algorithms"}, {"score": 0.00450933377534525, "phrase": "remote_memory_references"}, {"score": 0.0044136408150994245, "phrase": "attiya"}, {"score": 0.004364749131307047, "phrase": "hendler"}, {"score": 0.004338903220424556, "phrase": "woelfel"}, {"score": 0.0038692638652494697, "phrase": "critical_section"}, {"score": 0.003607630811220324, "phrase": "upper_bound"}, {"score": 0.0035394732986346322, "phrase": "distrib"}, {"score": 0.0033636292024305406, "phrase": "upper_and_lower_bounds"}, {"score": 0.0031360786664165093, "phrase": "attiya_et_al"}, {"score": 0.0030287392375951756, "phrase": "dsm"}, {"score": 0.0030281251520610604, "phrase": "deterministic_algorithms"}, {"score": 0.002949598537993663, "phrase": "randomized_mutual_exclusion_algorithms"}, {"score": 0.002823207272381655, "phrase": "sub-logarithmic_expected_rmr_complexity"}, {"score": 0.00266693888510356, "phrase": "starvation-free_randomized_mutual_exclusion_algorithms"}, {"score": 0.002552628669352939, "phrase": "distributed_shared_memory"}, {"score": 0.002453934333239467, "phrase": "rmr_complexity"}, {"score": 0.0024218895273910943, "phrase": "strong_adversary"}, {"score": 0.002328238264850759, "phrase": "expected_number"}, {"score": 0.0021610874773389096, "phrase": "worst_case"}], "paper_keywords": ["Mutual exclusion", " Remote memory references", " RMRs", " Strong adversary", " Randomization"], "paper_abstract": "Mutual exclusion is a fundamental distributed coordination problem. Shared-memory mutual exclusion research focuses on local-spin algorithms and uses the remote memory references (RMRs) metric. Attiya, Hendler, and Woelfel (40th STOC, 2008) established an Omega(log N) lower bound on the number of RMRs incurred by processes as they enter and exit the critical section, where N is the number of processes in the system. This matches the upper bound of Yang and Anderson (Distrib. Comput. 9(1):51-60, 1995). The upper and lower bounds apply for algorithms that only use read and write operations. The lower bound of Attiya et al., however, only holds for deterministic algorithms. The question of whether randomized mutual exclusion algorithms, using reads and writes only, can achieve sub-logarithmic expected RMR complexity remained open. We answer this question in the affirmative by presenting starvation-free randomized mutual exclusion algorithms for the cache coherent (CC) and the distributed shared memory (DSM) model that have sub-logarithmic expected RMR complexity against the strong adversary. More specifically, each process incurs an expected number of O(log N / log log N) RMRs per passage through the entry and exit sections, while in the worst case the number of RMRs is O(log N).", "paper_title": "Randomized mutual exclusion with sub-logarithmic RMR-complexity", "paper_id": "WOS:000294683100002"}