{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "petri_net-based_method"}, {"score": 0.004716520738331953, "phrase": "hard_real-time_software_synthesis"}, {"score": 0.004556901872357751, "phrase": "embedded_software_synthesis"}, {"score": 0.004253618550301311, "phrase": "software_synthesis"}, {"score": 0.004195418010131832, "phrase": "hard_real-time_systems"}, {"score": 0.004138010495069077, "phrase": "arbitrary_inter-tasks_precedence"}, {"score": 0.003997891221012094, "phrase": "code_generation"}, {"score": 0.003835972725191194, "phrase": "resource_constraints"}, {"score": 0.003731673223879279, "phrase": "trivial_task"}, {"score": 0.0036052633308076933, "phrase": "research_area"}, {"score": 0.0033883824438527316, "phrase": "predictable-guaranteed_scheduled_code"}, {"score": 0.003140888248194296, "phrase": "high-level_specification"}, {"score": 0.0029518598926717332, "phrase": "petri_net_model"}, {"score": 0.0027741761880779535, "phrase": "feasible_static_schedule"}, {"score": 0.0025537472239953807, "phrase": "scheduled_code"}, {"score": 0.002467140591777737, "phrase": "found_feasible_schedule"}, {"score": 0.0021049977753042253, "phrase": "intermediary_phases"}], "paper_keywords": ["software synthesis", " time Petri net", " embedded hard real-time systems"], "paper_abstract": "Over the last few years, embedded software synthesis has drawn much attention. However, few works deal with software synthesis for hard real-time systems considering arbitrary inter-tasks precedence and exclusion relations. Code generation for meeting all timing and resource constraints is not a trivial task. Thus, this research area has several open issues, mainly related to generation of predictable-guaranteed scheduled code. The method proposed in this paper starts from a high-level specification, and automatically translates such specification into a time Petri net model; this model is adopted for finding a feasible static schedule meeting all constraints. If found, the approach generates a scheduled code, based on the found feasible schedule. Therefore, the user just enter the specification and receives, as result, the scheduled code. Thus, all intermediary phases are hidden from the users.", "paper_title": "A time Petri net-based method for embedded hard real-time software synthesis", "paper_id": "WOS:000257776000002"}