{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "finite-state_machine_implementation"}, {"score": 0.004745665541429529, "phrase": "iterative_cluster_labeling_on_desktop_and_mobile_computing_platforms"}, {"score": 0.004445961412092278, "phrase": "efficient_finite-state_machine_implementation"}, {"score": 0.004350308086118336, "phrase": "hoshen-kopelman_cluster_identification_algorithm"}, {"score": 0.004256703909255889, "phrase": "nearest-eight_neighborhood_rule"}, {"score": 0.004075469816959996, "phrase": "computer_modeling"}, {"score": 0.004016782710006123, "phrase": "landscape_ecology"}, {"score": 0.003681923235979914, "phrase": "actual_land_cover_maps"}, {"score": 0.0035507457285983268, "phrase": "randomly_generated_data"}, {"score": 0.003399466007862412, "phrase": "original_presentation"}, {"score": 0.0033262524445013303, "phrase": "hoshen-kopelman_algorithm"}, {"score": 0.0030933709720820605, "phrase": "straightforward_adaptation"}, {"score": 0.0030267296900520217, "phrase": "original_hoshen-kopelman_algorithm"}, {"score": 0.0029615198132465236, "phrase": "data_type"}, {"score": 0.0027741761880779535, "phrase": "finite-state_machine's_performance"}, {"score": 0.0027143926774929957, "phrase": "palm_mobile_computing_device"}, {"score": 0.00241658945942583, "phrase": "straightforward_hoshen-kopelman_implementation"}, {"score": 0.002135812692862058, "phrase": "possible_remedy"}, {"score": 0.0021049977753042253, "phrase": "future_hardware_designs"}], "paper_keywords": ["Cluster identification", " finite-state machine", " Hoshen-Kopelman", " landscape ecology", " Palm device"], "paper_abstract": "In this paper, we present an efficient finite-state machine implementation of the Hoshen-Kopelman cluster identification algorithm using the nearest-eight neighborhood rule suitable to applications such as computer modeling for landscape ecology. The implementation presented in this study was tested using both actual land cover maps, as well as randomly generated data similar to those in the original presentation of the Hoshen-Kopelman algorithm for percolation analysis. The finite-state machine implementation clearly outperformed a straightforward adaptation of the original Hoshen-Kopelman algorithm on either data type. Research was also conducted to explore the finite-state machine's performance on a Palm mobile computing device, and while it was competitive, it did not exceed the performance of the straightforward Hoshen-Kopelman implementation. However, a discussion of why this was the case is provided along with a possible remedy for future hardware designs.", "paper_title": "Performance of a Finite-State Machine Implementation of Iterative Cluster Labeling on Desktop and Mobile Computing Platforms", "paper_id": "WOS:000269851800008"}