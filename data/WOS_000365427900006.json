{"auto_keywords": [{"score": 0.039598912699340856, "phrase": "routine_tasks"}, {"score": 0.013520789856589365, "phrase": "behavioural_models"}, {"score": 0.01274248772130636, "phrase": "system_behaviour"}, {"score": 0.00481495049065317, "phrase": "automated_user_behaviour_patterns"}, {"score": 0.004762893197005439, "phrase": "runtime_model_interpretation"}, {"score": 0.004635187610736025, "phrase": "high-level_abstraction_models"}, {"score": 0.004413846562278824, "phrase": "system_evolution"}, {"score": 0.004068087482412997, "phrase": "design_time"}, {"score": 0.003512308265830794, "phrase": "users'_needs"}, {"score": 0.0034366728236876047, "phrase": "system_deployment"}, {"score": 0.002999386721353559, "phrase": "specified_routine_tasks"}, {"score": 0.0027491084541806823, "phrase": "primary_means"}, {"score": 0.0021631447601689444, "phrase": "system_behaviour_evolution"}, {"score": 0.0021049977753042253, "phrase": "high-level_abstractions"}], "paper_keywords": ["System behaviour evolution", " Routine task automation", " Models at runtime", " Runtime interpretation of models"], "paper_abstract": "The use of high-level abstraction models can facilitate and improve not only system development but also runtime system evolution. This is the idea of this work, in which behavioural models created at design time are also used at runtime to evolve system behaviour. These behavioural models describe the routine tasks that users want to be automated by the system. However, users' needs may change after system deployment, and the routine tasks automated by the systemmust evolve to adapt to these changes. To facilitate this evolution, the automation of the specified routine tasks is achieved by directly interpreting the models at runtime. This turns models into the primary means to understand and interact with the system behaviour associated with the routine tasks as well as to execute and modify it. Thus, we provide tools to allow the adaptation of this behaviour by modifying the models at runtime. This means that the system behaviour evolution is performed by using high-level abstractions and avoiding the costs and risks associated with shutting down and restarting the system.", "paper_title": "Addressing the evolution of automated user behaviour patterns by runtime model interpretation", "paper_id": "WOS:000365427900006"}