{"auto_keywords": [{"score": 0.04972395969484311, "phrase": "item_weights"}, {"score": 0.03775345056294051, "phrase": "query_competitiveness"}, {"score": 0.03291721668032437, "phrase": "different_frameworks"}, {"score": 0.00481495049065317, "phrase": "robust_knapsack_problems"}, {"score": 0.00395273370234774, "phrase": "remaining_possible_scenario"}, {"score": 0.0038798015183611275, "phrase": "central_question"}, {"score": 0.0036826452656927877, "phrase": "maximum_profit"}, {"score": 0.003561205990687285, "phrase": "strict_robustness"}, {"score": 0.003280891942617853, "phrase": "interval-based_uncertainty"}, {"score": 0.0031963987773420068, "phrase": "online_algorithms"}, {"score": 0.0030451958332949735, "phrase": "worst-case_query_competitiveness"}, {"score": 0.002977835845437357, "phrase": "expected_query_competitiveness"}, {"score": 0.00295571428544335, "phrase": "randomized_algorithms"}, {"score": 0.0029228387900175554, "phrase": "average_case_competitiveness"}, {"score": 0.002901124599876666, "phrase": "known_distributions"}, {"score": 0.0028688545415450407, "phrase": "uncertain_input_data"}, {"score": 0.002826383890518307, "phrase": "theoretical_bounds"}, {"score": 0.0026726283357752585, "phrase": "gamma-restricted_uncertainties"}, {"score": 0.0026428971053847495, "phrase": "bertsimas"}, {"score": 0.0026233333074813293, "phrase": "sim"}, {"score": 0.0025652026679268713, "phrase": "heuristic_algorithms"}, {"score": 0.002508433454626386, "phrase": "computational_experiments"}, {"score": 0.0023021895404322767, "phrase": "gamma-restricted_uncertainty"}, {"score": 0.002276566401216226, "phrase": "nominal_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Robust optimization", " Queries", " Robust knapsack problem", " Competitiveness"], "paper_abstract": "We consider robust knapsack problems where item weights are uncertain. We are allowed to query an item to find its exact weight,where the number of such queries is bounded by a given parameter Q. After these queries are made, we need to pack the items robustly, i.e., so that the choice of items is feasible for every remaining possible scenario of item weights. The central question that we consider is: Which items should be queried in order to gain maximum profit? We introduce the notion of query competitiveness for strict robustness to evaluate the quality of an algorithm for this problem, and obtain lower and upper bounds on this competitiveness for interval-based uncertainty. Similar to the study of online algorithms, we study the competitiveness under different frameworks, namely we analyze the worst-case query competitiveness for deterministic algorithms, the expected query competitiveness for randomized algorithms and the average case competitiveness for known distributions of the uncertain input data. We derive theoretical bounds for these different frameworks and evaluate them experimentally. We also extend this approach to Gamma-restricted uncertainties introduced by Bertsimas and Sim. Furthermore, we present heuristic algorithms for the problem. In computational experiments considering both the interval-based and the Gamma-restricted uncertainty, we evaluate their empirical performance. While the usage of a Gamma-restricted uncertainty improves the nominal performance of a solution (as expected), we find that the query competitiveness gets worse. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "The robust knapsack problem with queries", "paper_id": "WOS:000348020600002"}