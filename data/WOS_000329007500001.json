{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "accountable_mapreduce"}, {"score": 0.004773904938276846, "phrase": "cloud_computing"}, {"score": 0.0047333201012120085, "phrase": "mapreduce"}, {"score": 0.004672808182229058, "phrase": "programming_model"}, {"score": 0.0045543011700929096, "phrase": "large_data_sets"}, {"score": 0.004515467468684217, "phrase": "distributed_computing_environments"}, {"score": 0.00445783412174435, "phrase": "original_mapreduce_model"}, {"score": 0.004074397977869244, "phrase": "working_machine"}, {"score": 0.0038044630943383497, "phrase": "processing_result"}, {"score": 0.0036137713873827374, "phrase": "final_results"}, {"score": 0.0030837288356760973, "phrase": "accountability_test"}, {"score": 0.0029416448256236057, "phrase": "working_machines"}, {"score": 0.002904040426340639, "phrase": "malicious_nodes"}, {"score": 0.002879237498994052, "phrase": "real_time"}, {"score": 0.0027821202902740846, "phrase": "different_options"}, {"score": 0.0026425357050743003, "phrase": "utilization_resource"}, {"score": 0.002575385171755899, "phrase": "optimal_worker"}, {"score": 0.0024148618915672353, "phrase": "optimal_number"}, {"score": 0.0023134312557290043, "phrase": "total_processing_time"}, {"score": 0.002178529882942255, "phrase": "existing_cloud_platforms"}, {"score": 0.0021599099979586946, "phrase": "map_reduce"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Accountable", " MapReduce", " Cloud computing"], "paper_abstract": "MapReduce is a programming model that is capable of processing large data sets in distributed computing environments. The original MapReduce model was designed to be fault-tolerant in case of various network abnormalities. However, fault-tolerance does not guarantee that each working machine will be completely accountable; when nodes are malicious, they may intentionally misrepresent the processing result during mapping or reducing, and they may thus make the final results inaccurate and untrustworthy. In this paper, we propose Accountable MapReduce, which forces each machine to be held responsible for its behaviors. In our approach, we set up a group of auditors to perform an Accountability Test (A-test) that checks all of the working machines and detects malicious nodes in real time. The A-test can be implemented with different options depending upon how the auditors are assigned. To optimize the utilization resource, we also formalize the Optimal Worker and Auditor Assignment (OWAA) problem, which is aimed at finding the optimal number of workers and auditors in order to minimize the total processing time. Our evaluation results show that the A-test can be practically and effectively applied to existing cloud platforms employing Map Reduce. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Achieving Accountable MapReduce in cloud computing", "paper_id": "WOS:000329007500001"}