{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automatic_primal_and_dual_conversions"}, {"score": 0.004278807087784626, "phrase": "primal_or_dual_forms"}, {"score": 0.004033464035028803, "phrase": "particular_application"}, {"score": 0.003131178497790961, "phrase": "optimization_modelling_tool_yalmip"}, {"score": 0.002951444412262927, "phrase": "conic_optimization_problems"}, {"score": 0.00287759989638073, "phrase": "preferred_format"}, {"score": 0.0027123819773059127, "phrase": "symbolic_yalmip_model"}, {"score": 0.0024097920845706795, "phrase": "original_variables"}, {"score": 0.0023296961971785357, "phrase": "flexible_generation"}, {"score": 0.0021408862709571615, "phrase": "efficient_formulations"}, {"score": 0.0021049977753042253, "phrase": "large-scale_experiment_design_problems"}], "paper_keywords": ["optimization", " conic programming", " modelling software"], "paper_abstract": "Many optimization problems gain from being interpreted and solved in either primal or dual forms. For a user with a particular application, one of these forms is usually much more natural to use, but this is not always the most efficient. This paper presents an implementation in the optimization modelling tool YALMIP that allows the user to define conic optimization problems in a preferred format, and then automatically derive a symbolic YALMIP model of the dual of this problem, solve the dual, and recover original variables. Applications in flexible generation of sum-of-squares programs, and efficient formulations of large-scale experiment design problems are used as illustrative examples.", "paper_title": "Dualize it: software for automatic primal and dual conversions of conic programs", "paper_id": "WOS:000265975500001"}