{"auto_keywords": [{"score": 0.049483572884789995, "phrase": "ta"}, {"score": 0.041074806508730216, "phrase": "composed_bisimulation_equivalence"}, {"score": 0.004143196873246147, "phrase": "so-called_composed_bisimulation_equivalence"}, {"score": 0.0034984340449789745, "phrase": "simple_and_efficient_algorithms"}, {"score": 0.003047776993499616, "phrase": "better_reductions"}, {"score": 0.002671722386856879, "phrase": "computational_requirements"}, {"score": 0.0026384167183586015, "phrase": "simulation-based_reductions"}, {"score": 0.002477998427152547, "phrase": "paper_show"}, {"score": 0.002255431275670053, "phrase": "finer_way"}, {"score": 0.002158505888557746, "phrase": "available_degree"}], "paper_keywords": ["Finite tree automata", " bisimulation", " size reduction"], "paper_abstract": "We address the problem of reducing the size of (nondeterministic, bottom-up) tree automata (TA) using suitable, language-preserving equivalences on the states of the automata. In particular, we propose the so-called composed bisimulation equivalence as a new language preserving equivalence. A composed bisimulation equivalence is defined in terms of two different relations, namely the upward and downward bisimulation equivalence. We provide simple and efficient algorithms for computing these relations. The notion of composed bisimulation equivalence is motivated by an attempt to obtain an equivalence that can provide better reductions than what currently known bisimulation-based approaches can offer, but which is not significantly more difficult to compute (and hence stays below the computational requirements of simulation-based reductions). The experimental results we present in the paper show that our composed bisimulation equivalence meets such requirements, and hence provides users of TA with a finer way to resolve the trade-off between the available degree of reduction and its cost.", "paper_title": "COMPOSED BISIMULATION FOR TREE AUTOMATA", "paper_id": "WOS:000268592200009"}