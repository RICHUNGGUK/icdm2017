{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "flexible_subservicing"}, {"score": 0.0047113960612140335, "phrase": "component_adaptation"}, {"score": 0.004272164161788242, "phrase": "crucial_problems"}, {"score": 0.004180234323211199, "phrase": "component-based_software_engineering"}, {"score": 0.0037903327482565097, "phrase": "formal_methodology"}, {"score": 0.003668591097652231, "phrase": "soft_adaptation"}, {"score": 0.003512308265830794, "phrase": "mismatching_interaction_behaviour"}, {"score": 0.0033262524445013303, "phrase": "access_rights"}, {"score": 0.0027641218567092665, "phrase": "alternative_services"}, {"score": 0.0024788167298469455, "phrase": "required_access_rights"}, {"score": 0.0022967713922705, "phrase": "secure_and_flexible_adaptation"}, {"score": 0.0022472527731744974, "phrase": "third-party_components"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["component-based software development", " software adaptation", " pi-calculus", " session types"], "paper_abstract": "Component adaptation is widely recognised to be one of the crucial problems in Component-Based Software Engineering (CBSE). We present here a formal methodology for the soft adaptation of components presenting mismatching interaction behaviour. The notions of access rights (associating components with the services they are allowed to use) and subservicing (providing alternative services in place of those requested by components lacking the required access rights) are exploited to feature a secure and flexible adaptation of third-party components. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Component adaptation through flexible subservicing", "paper_id": "WOS:000241356300004"}