{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "shortest_absent_words"}, {"score": 0.048929739366992464, "phrase": "genomic_sequence"}, {"score": 0.004586531354697466, "phrase": "sequence_composition"}, {"score": 0.004476399615305783, "phrase": "basic_task"}, {"score": 0.004404445045826858, "phrase": "genomic_research"}, {"score": 0.0038375280115736958, "phrase": "linear-time_algorithm"}, {"score": 0.0035386420095120706, "phrase": "probabilistic_method"}, {"score": 0.0028890603352364273, "phrase": "space_requirements"}, {"score": 0.0028425481299483254, "phrase": "index_structures"}, {"score": 0.0027741761880779535, "phrase": "suffix_trees"}, {"score": 0.0027295084882654917, "phrase": "suffix_arrays"}, {"score": 0.002685558057339722, "phrase": "experimental_results"}, {"score": 0.002436289099444074, "phrase": "human_genome"}, {"score": 0.0022281257694320433, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Sequence analysis", " Absent words", " Shortest absent words", " Algorithms"], "paper_abstract": "Analyzing sequence composition is a basic task in genomic research. In this paper, to efficiently compute shortest absent words in a genomic sequence, we present a linear-time algorithm, which firstly estimates the length of shortest absent words by probabilistic method, and then based on such estimation, finds out all shortest absent words in a genomic sequence. Our algorithm only needs to scan the genomic sequence once without the space requirements of index structures such as suffix trees and suffix arrays. Experimental results show that our algorithm uses only 1.5 minutes for the computation of shortest absent words in human genome, and therefore is more efficient than any other existing algorithms. Crown Copyright (C) 2010 Published by Elsevier B.V. All rights reserved.", "paper_title": "Efficient computation of shortest absent words in a genomic sequence", "paper_id": "WOS:000279259500014"}