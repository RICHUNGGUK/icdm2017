{"auto_keywords": [{"score": 0.04069634062156298, "phrase": "pseudo-minimal_dta"}, {"score": 0.004815022713805618, "phrase": "perfect"}, {"score": 0.004683292152590589, "phrase": "unranked_trees"}, {"score": 0.004309434349688514, "phrase": "arbitrary_hash_codes"}, {"score": 0.004238307626560739, "phrase": "bottom-up_deterministic_tree_automaton"}, {"score": 0.003751228706861377, "phrase": "pseudo-minimal_automaton"}, {"score": 0.003628352506247126, "phrase": "minimal_one"}, {"score": 0.0034134024569847264, "phrase": "proper_elements"}, {"score": 0.0030208364972341096, "phrase": "suitable_structure"}, {"score": 0.002970914475538276, "phrase": "stable_hashing_schemes"}, {"score": 0.0026881926384093088, "phrase": "automaton_construction"}, {"score": 0.00262910358108176, "phrase": "incremental_procedures"}, {"score": 0.002473203873496859, "phrase": "integer_value"}, {"score": 0.0023265270905455334, "phrase": "hash_codes"}, {"score": 0.0022880528191813083, "phrase": "incremental_construction"}, {"score": 0.0022129983153880467, "phrase": "new_trees"}, {"score": 0.0021049977753042253, "phrase": "whole_dta"}], "paper_keywords": ["Perfect hashing", " deterministic tree automata", " pseudo-minimal automata", " incremental automata"], "paper_abstract": "We describe a technique that maps unranked trees to arbitrary hash codes using a bottom-up deterministic tree automaton (DTA). In contrast to other hashing techniques based on automata, our procedure builds a pseudo-minimal DTA for this purpose. A pseudo-minimal automaton may be larger than the minimal one accepting the same language but, in turn, it contains proper elements (states or transitions which are unique) for every input accepted by the automaton. Therefore, pseudo-minimal DTA are a suitable structure to implement stable hashing schemes, that is, schemes where the output for every key can be determined prior to the automaton construction. We provide incremental procedures to build the pseudo-minimal DTA and the mapping that associates an integer value to every transition that will be used to compute the hash codes. This incremental construction allows for the incorporation of new trees and their hash codes without the need to rebuild the whole DTA from scratch.", "paper_title": "A PERFECT HASHING INCREMENTAL SCHEME FOR UNRANKED TREES USING PSEUDO-MINIMAL AUTOMATA", "paper_id": "WOS:000271470900006"}