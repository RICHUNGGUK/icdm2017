{"auto_keywords": [{"score": 0.04781527723884444, "phrase": "cross-apen"}, {"score": 0.015719716506582538, "phrase": "cross-approximate_entropy"}, {"score": 0.009658507583064593, "phrase": "six_cores"}, {"score": 0.004716113134313215, "phrase": "biomedical_signal_analysis"}, {"score": 0.004651346011959237, "phrase": "meg_recordings"}, {"score": 0.004524455848517757, "phrase": "useful_measure"}, {"score": 0.004462308985053246, "phrase": "statistical_dissimilarity"}, {"score": 0.0041211075804202905, "phrase": "biomedical_signals"}, {"score": 0.003926273177600597, "phrase": "fast_gpu-based_implementation"}, {"score": 0.0037927494831151553, "phrase": "large_amount"}, {"score": 0.0037665925842197967, "phrase": "multidimensional_data"}, {"score": 0.003576196516917259, "phrase": "gpu"}, {"score": 0.0035025644647418983, "phrase": "neural_signals"}, {"score": 0.003234509549830177, "phrase": "meg_data"}, {"score": 0.003157061070428828, "phrase": "different_input_channels"}, {"score": 0.003102875178186416, "phrase": "proposed_implementation"}, {"score": 0.0030708096989903945, "phrase": "average_speedup"}, {"score": 0.0030076664326204013, "phrase": "cpu_parallel_version"}, {"score": 0.0026004698404274483, "phrase": "single_core"}, {"score": 0.002503232182798796, "phrase": "basic_sequential_matlab"}, {"score": 0.0023437424558633013, "phrase": "first_contribution"}, {"score": 0.0023275553629639395, "phrase": "cross-apen_measure_computation"}, {"score": 0.0022020103573658035, "phrase": "best_option"}, {"score": 0.002179234170770192, "phrase": "signal_processing"}, {"score": 0.002164180792169302, "phrase": "biomedical_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ireland_ltd."}], "paper_keywords": ["Cross Approximate Entropy", " CUDA", " GPGPU", " Magnetoencephalography", " Neural signal analysis"], "paper_abstract": "Cross-Approximate Entropy (Cross-ApEn) is a useful measure to quantify the statistical dissimilarity of two time series. In spite of the advantage of Cross-ApEn over its one-dimensional counterpart (Approximate Entropy), only a few studies have applied it to biomedical signals, mainly due to its high computational cost. In this paper, we propose a fast GPU-based implementation of the Cross-ApEn that makes feasible its use over a large amount of multidimensional data. The scheme followed is fully scalable, thus maximizes the use of the GPU despite of the number of neural signals being processed. The approach consists in processing many trials or epochs simultaneously, with independence of its origin. In the case of MEG data, these trials can proceed from different input channels or subjects. The proposed implementation achieves an average speedup greater than 250x against a CPU parallel version running on a processor containing six cores. A dataset of 30 subjects containing 148 MEG channels (49 epochs of 1024 samples per channel) can be analyzed using our development in about 30 min. The same processing takes 5 days on six cores and 15 days when running on a single core. The speedup is much larger if compared to a basic sequential Matlab (R) implementation, that would need 58 days per subject. To our knowledge, this is the first contribution of Cross-ApEn measure computation using GPUs. This study demonstrates that this hardware is, to the day, the best option for the signal processing of biomedical data with Cross-ApEn. (C) 2013 Elsevier Ireland Ltd. All rights reserved.", "paper_title": "Cross-Approximate Entropy parallel computation on GPUs for biomedical signal analysis. Application to MEG recordings", "paper_id": "WOS:000324250400016"}