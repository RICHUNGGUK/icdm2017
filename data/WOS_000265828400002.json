{"auto_keywords": [{"score": 0.04916809664432026, "phrase": "gpu."}, {"score": 0.04596092801504922, "phrase": "nurbs_surfaces"}, {"score": 0.04190933415890084, "phrase": "nurbs"}, {"score": 0.00481495049065317, "phrase": "efficient_nurbs_modeling_operations"}, {"score": 0.0043181530164057135, "phrase": "programmable_fragment_processor"}, {"score": 0.004209202049738245, "phrase": "gpu"}, {"score": 0.0038973170902076707, "phrase": "exact_normals"}, {"score": 0.0034282732966589478, "phrase": "standard_modeling_operations"}, {"score": 0.003362944428837724, "phrase": "inverse_evaluations"}, {"score": 0.0033200826267264383, "phrase": "ray_intersections"}, {"score": 0.003256808693019209, "phrase": "surface-surface_intersections"}, {"score": 0.003113804826864362, "phrase": "real_time"}, {"score": 0.0029391032882625473, "phrase": "actual_surface"}, {"score": 0.0028830690329478465, "phrase": "new_features"}, {"score": 0.0024714996534331668, "phrase": "surface-surface_intersection_operations"}, {"score": 0.002378114613631841, "phrase": "intersection_curves"}, {"score": 0.0023327506323251074, "phrase": "model_space"}, {"score": 0.002244596395352896, "phrase": "parametric_spaces"}], "paper_keywords": ["NURBS", " GPU", " inverse evaluation", " sketching", " interactive trimming", " SSI", " intersection curves", " self-intersection", " prefix sum"], "paper_abstract": "We present algorithms for evaluating and performing modeling operations on NURBS surfaces using the programmable fragment processor on the Graphics Processing Unit (GPU). We extend our GPU-based NURBS evaluator that evaluates NURBS surfaces to compute exact normals for either standard or rational B-spline surfaces for use in rendering and geometric modeling. We build on these calculations in our new GPU algorithms to perform standard modeling operations such as inverse evaluations, ray intersections, and surface-surface intersections on the GPU. Our modeling algorithms run in real time, enabling the user to sketch on the actual surface to create new features. In addition, the designer can edit the surface by interactively trimming it without the need for retessellation. Our GPU-accelerated algorithm to perform surface-surface intersection operations with NURBS surfaces can output intersection curves in the model space as well as in the parametric spaces of both the intersecting surfaces at interactive rates. We also extend our surface-surface intersection algorithm to evaluate self-intersections in NURBS surfaces.", "paper_title": "Performing Efficient NURBS Modeling Operations on the GPU", "paper_id": "WOS:000265828400002"}