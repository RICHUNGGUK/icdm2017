{"auto_keywords": [{"score": 0.03730364441045638, "phrase": "gpp"}, {"score": 0.035188420801730444, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "loop_unrolling"}, {"score": 0.004726382602809228, "phrase": "reconfigurable_architectures"}, {"score": 0.004532988904965752, "phrase": "new_technique"}, {"score": 0.00432733352307636, "phrase": "reconfigurable_fabric"}, {"score": 0.004228016636379321, "phrase": "molen_machine_organization"}, {"score": 0.0037820003983334476, "phrase": "loop_body"}, {"score": 0.003644001325962353, "phrase": "transformed_loop"}, {"score": 0.003610292749660581, "phrase": "software_functions"}, {"score": 0.003446353878654566, "phrase": "multiple_instances"}, {"score": 0.0032292292848296617, "phrase": "optimal_unroll_factor"}, {"score": 0.002795762692061496, "phrase": "kernel's_execution_times"}, {"score": 0.0027188259793109264, "phrase": "memory_transfers"}, {"score": 0.00269365253474335, "phrase": "area_utilization"}, {"score": 0.0026440008776012665, "phrase": "experimental_part"}, {"score": 0.0025355968118803956, "phrase": "loop_nests"}, {"score": 0.002500456462028735, "phrase": "real-life_applications"}, {"score": 0.0024091254986815694, "phrase": "quantizer"}, {"score": 0.002386809135808437, "phrase": "jpeg"}, {"score": 0.0023537147262360806, "phrase": "sobel"}, {"score": 0.0021848422732893926, "phrase": "theoretical_maximum_speedup"}, {"score": 0.0021646022201798247, "phrase": "amdahl's_law"}], "paper_keywords": ["Algorithms", " Performance", " Loop optimizations", " reconfigurable computing"], "paper_abstract": "In this article, we present a new technique for optimizing loops that contain kernels mapped on a reconfigurable fabric. We assume the Molen machine organization as our framework. We propose combining loop unrolling with loop shifting, which is used to relocate the function calls contained in the loop body such that in every iteration of the transformed loop, software functions (running on GPP) execute in parallel with multiple instances of the kernel (running on FPGA). The algorithm computes the optimal unroll factor and determines the most appropriate transformation (which can be the combination of unrolling plus shifting or either of the two). This method is based on profiling information about the kernel's execution times on GPP and FPGA, memory transfers and area utilization. In the experimental part, we apply this method to several kernels from loop nests extracted from real-life applications (DCT and SAD from MPEG2 encoder, Quantizer from JPEG, and Sobel's Convolution) and perform an analysis of the results, comparing them with the theoretical maximum speedup by Amdahl's Law and showing when and how our transformations are beneficial.", "paper_title": "Optimal Loop Unrolling and Shifting for Reconfigurable Architectures", "paper_id": "WOS:000208166700006"}