{"auto_keywords": [{"score": 0.05007844442530219, "phrase": "chip_multiprocessors"}, {"score": 0.03720555462664775, "phrase": "racs_scheme"}, {"score": 0.03373087714809986, "phrase": "racs"}, {"score": 0.004183638135671596, "phrase": "proposed_approach"}, {"score": 0.0035941231858949035, "phrase": "short_access_latency"}, {"score": 0.0033594249301033604, "phrase": "cache_block"}, {"score": 0.00257831812581194, "phrase": "larger_capacity"}, {"score": 0.002506715532901322, "phrase": "simulation_results"}, {"score": 0.0023962545023307937, "phrase": "off-chip_memory_accesses"}, {"score": 0.0021773853011112882, "phrase": "multi-programmed_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["CMPS", " Private L2 Cache", " Reusability", " Cache management"], "paper_abstract": "In this paper, we propose a novel on-chip L2 cache organization for chip multiprocessors (CMPs) with private L2 caches. The proposed approach, called reusability-aware cache sharing (RACS), combines the advantages of both a private L2 cache and a shared L2 cache. Since a private L2 cache organization has a short access latency, the RACS scheme employs a private L2 cache organization. However, when a cache block in a private L2 cache is selected for eviction, RACS first evaluates its reusability. If the block is likely to be reused in the near future, it may be saved to a peer L2 cache which has space available. In this way, the RACS scheme effectively simulates the larger capacity of a shared L2 cache. Simulation results show that RACS reduced the number of off-chip memory accesses by 24% compared to a pure private L2 cache organization on average for the SPIASH 2 multi-threaded benchmarks, and by 16% for multi-programmed benchmarks. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Reusability-aware cache memory sharing for chip multiprocessors with private L2 caches", "paper_id": "WOS:000273154000003"}