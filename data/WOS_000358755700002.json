{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_systems"}, {"score": 0.004149922666541166, "phrase": "real-time_applications_ones"}, {"score": 0.0038870860864224656, "phrase": "service_requirement"}, {"score": 0.003795677450778112, "phrase": "priority_based_strategies"}, {"score": 0.003706410380455668, "phrase": "starvation_problems"}, {"score": 0.0036625643243684827, "phrase": "high_priority_requests"}, {"score": 0.0035977623578676496, "phrase": "low_priority_ones"}, {"score": 0.0030273620861817055, "phrase": "priority-based_order"}, {"score": 0.002938560664857691, "phrase": "priority_inversion"}, {"score": 0.002768674345336861, "phrase": "priority_violations"}, {"score": 0.002593091742792519, "phrase": "kanrar-chaki_priority-based_token-oriented_algorithm"}, {"score": 0.002357337046408753, "phrase": "performance_evaluation_results"}, {"score": 0.0022077827041801193, "phrase": "chang's_priority-based_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Distributed system", " Mutual exclusion", " Priority", " Algorithm"], "paper_abstract": "Several distributed mutual exclusion algorithms define the order in which requests are satisfied based on the priorities assigned to requests. These algorithms are very useful for real-time applications ones or those where priority is associated to a quality of service requirement. However, priority based strategies may result in starvation problems where high priority requests forever prevent low priority ones to be satisfied. To overcome this problem, many priority-based algorithms propose to gradually increase the priority of pending requests. The drawback of such an approach is that it can violate priority-based order of requests leading to priority inversion. Therefore, aiming at minimizing the number of priority violations without introducing starvation, we have added some heuristics in Kanrar-Chaki priority-based token-oriented algorithm in order to slow down the frequency with which priority of pending requests is increased. Performance evaluation results confirm the effectiveness of our approach when compared to both the original Kanrar-Chaki and Chang's priority-based algorithms. (C) 2015 Published by Elsevier Inc.", "paper_title": "A fair starvation-free prioritized mutual exclusion algorithm for distributed systems", "paper_id": "WOS:000358755700002"}