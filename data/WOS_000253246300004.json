{"auto_keywords": [{"score": 0.04291823255814532, "phrase": "greedier"}, {"score": 0.008731533016828621, "phrase": "repeat_library"}, {"score": 0.005943113582980362, "phrase": "target_genome"}, {"score": 0.00481495049065317, "phrase": "novel_genome-scale_repeat_finder"}, {"score": 0.0045846424310611745, "phrase": "important_roles"}, {"score": 0.0045208777171271254, "phrase": "transposable_elements"}, {"score": 0.0044736342427651185, "phrase": "common_kind"}, {"score": 0.004411406624893529, "phrase": "transposon_insertions"}, {"score": 0.004141877689172017, "phrase": "novel_iterative_algorithm"}, {"score": 0.0038751504050385183, "phrase": "existing_methods"}, {"score": 0.0036382660173943393, "phrase": "first_pass"}, {"score": 0.0035750641312373202, "phrase": "local_similarities"}, {"score": 0.0034038593017883295, "phrase": "comparison_output"}, {"score": 0.003286596407873823, "phrase": "similar_subsequence_pair"}, {"score": 0.00314015410819199, "phrase": "higher_similarities"}, {"score": 0.003096417317829492, "phrase": "second_pass"}, {"score": 0.0029792474431139067, "phrase": "individual_repeat_units"}, {"score": 0.002896819408461957, "phrase": "fitness_value"}, {"score": 0.002767696345005216, "phrase": "fitness_values"}, {"score": 0.0025892330566358503, "phrase": "similarity_cutoff"}, {"score": 0.0023884887359313834, "phrase": "arabidopsis"}, {"score": 0.002371783323468861, "phrase": "rice_genomes"}, {"score": 0.002330530593384484, "phrase": "approximately_twice_as_many_transposon_bases"}, {"score": 0.002226592967032469, "phrase": "far_fewer_false_positive_bases"}, {"score": 0.0021878600131802453, "phrase": "windowmasker"}, {"score": 0.0021049977753042253, "phrase": "potential_nested_transposon_structures"}], "paper_keywords": [""], "paper_abstract": "Motivation: Repeats are ubiquitous in genomes and play important roles in evolution. Transposable elements are a common kind of repeat. Transposon insertions can be nested and make the task of identifying repeats difficult. Results: We develop a novel iterative algorithm, called Greedier, to find repeats in a target genome given a repeat library. Greedier distinguishes itself from existing methods by taking into account the fragmentation of repeats. Each iteration consists of two passes. In the first pass, it identifies the local similarities between the repeat library and the target genome. Greedier then builds graphs from this comparison output. In each graph, a vertex denotes a similar subsequence pair. Edges denote pairs of subsequences that can be connected to form higher similarities. In the second pass, Greedier traverses these graphs greedily to find matches to individual repeat units in the repeat library. It computes a fitness value for each such match denoting the similarity of that match. Matches with fitness values greater than a cutoff are removed, and the rest of the genome is stitched together. The similarity cutoff is then gradually reduced, and the iteration is repeated until no hits are returned from the comparison. Our experiments on the Arabidopsis and rice genomes show that Greedier identifies approximately twice as many transposon bases as those found by cross_match and WindowMasker. Moreover, Greedier masks far fewer false positive bases than either cross_match or WindowMasker. In addition to masking repeats, Greedier also reports potential nested transposon structures.", "paper_title": "A novel genome-scale repeat finder geared towards transposons", "paper_id": "WOS:000253246300004"}