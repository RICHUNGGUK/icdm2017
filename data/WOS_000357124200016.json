{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pin"}, {"score": 0.03717893065747342, "phrase": "pintools"}, {"score": 0.0037965243835456214, "phrase": "object-oriented_framework"}, {"score": 0.0033883824438527316, "phrase": "analysis_tools"}, {"score": 0.0032848684681050745, "phrase": "dynamic_binary_instrumentation_tool"}, {"score": 0.0028715299874549245, "phrase": "pintool"}, {"score": 0.002670884656785558, "phrase": "different_pintools"}, {"score": 0.0021049977753042253, "phrase": "instrumentation_overhead"}], "paper_keywords": ["Design", " Measurement", " Performance", " Pin", " Pintools", " Pin plus", " template meta-programming", " framework"], "paper_abstract": "This paper presents a framework named Pin++. Pin++ is an object-oriented framework that uses template metaprogramming to implement Pintools, which are analysis tools for the dynamic binary instrumentation tool named Pin. The goal of Pin++ is to simplify programming a Pintool and promote reuse of its components across different Pintools. Our results show that Pintools implemented using Pin++ can have a 54% reduction in complexity, increase its modularity, and up to 60% reduction in instrumentation overhead.", "paper_title": "Pin plus plus : An Object-Oriented Framework for Writing Pintools", "paper_id": "WOS:000357124200016"}