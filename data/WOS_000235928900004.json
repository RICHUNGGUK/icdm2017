{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "extreme_programming_system"}, {"score": 0.004417848254181138, "phrase": "extreme_programming"}, {"score": 0.004305203085016233, "phrase": "holistic_system"}, {"score": 0.004268293864953256, "phrase": "software_development"}, {"score": 0.0041773934798743405, "phrase": "generic_xp_system"}, {"score": 0.004141575435071002, "phrase": "feedback_influences"}, {"score": 0.0040708542958968605, "phrase": "cause-effect_model"}, {"score": 0.004035946043145475, "phrase": "social-technical_affecting_factors"}, {"score": 0.0038326698261576023, "phrase": "xp_practices"}, {"score": 0.0037834649508375544, "phrase": "software_companies"}, {"score": 0.0035620354052144656, "phrase": "sample_survey_technique"}, {"score": 0.003441352119167824, "phrase": "time_period"}, {"score": 0.003296212583539166, "phrase": "descriptive_statistics"}, {"score": 0.003130077012135034, "phrase": "different_models"}, {"score": 0.0031032109441552287, "phrase": "stepwise_discriminant_analysis"}, {"score": 0.0029089095588612007, "phrase": "common_code_ownership"}, {"score": 0.0028839363228932704, "phrase": "on-site_customer"}, {"score": 0.002668582249630492, "phrase": "pair_programming"}, {"score": 0.0026456667695073043, "phrase": "test-driven_development"}, {"score": 0.00253400005142168, "phrase": "hidden_dependencies"}, {"score": 0.0023855210798264205, "phrase": "skilled_personnel"}, {"score": 0.0022749744354271816, "phrase": "preliminary_research_work"}, {"score": 0.002132420504803564, "phrase": "holistic_framework"}], "paper_keywords": ["agile methods", " extreme programming system", " cause-effect model", " feedback model", " developer perception", " manager perception", " empirical study", " stepwise discriminant analysis", " planning game", " pair programming", " test-driven development", " refactoring", " simple design", " common code ownership", " continuous integration", " on-site customer", " short release cycles", " 40-hour-week", " coding standards", " metaphor"], "paper_abstract": "In this paper we discuss our empirical study about the advantages and difficulties 15 Greek software companies experienced applying Extreme Programming (XP) as a holistic system in software development. Based on a generic XP system including feedback influences and using a cause-effect model including social-technical affecting factors, as our research tool, the study statistically evaluates the application of XP practices in the software companies being studied. Data were collected from 30 managers and developers, using the sample survey technique with questionnaires and interviews, in a time period of six months. Practices were analysed individually, using Descriptive Statistics (DS), and as a whole by building up different models using stepwise Discriminant Analysis (DA). The results have shown that companies, facing various problems with common code ownership, on-site customer, 40-hour week and metaphor, prefer to develop their own tailored XP method and way of working-practices that met their requirements. Pair programming and test-driven development were found to be the most significant success factors. Interactions and hidden dependencies for the majority of the practices as well as communication and synergy between skilled personnel were found to be other significant success factors. The contribution of this preliminary research work is to provide some evidence that may assist companies in evaluating whether the XP system as a holistic framework would suit their current situation.", "paper_title": "Investigating the extreme programming system - An empirical study", "paper_id": "WOS:000235928900004"}