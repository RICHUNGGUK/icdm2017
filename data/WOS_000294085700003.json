{"auto_keywords": [{"score": 0.022970697374823, "phrase": "transactional_memory"}, {"score": 0.010612387000973441, "phrase": "file_operations"}, {"score": 0.004373267443572639, "phrase": "multi-threaded_programs"}, {"score": 0.00417961150804265, "phrase": "new_approach"}, {"score": 0.0037959868107895053, "phrase": "different_transactions"}, {"score": 0.0037320255482878365, "phrase": "multiple_transactions"}, {"score": 0.0029083942467546305, "phrase": "java_library"}, {"score": 0.0026113524778702624, "phrase": "tuplesoup"}, {"score": 0.0025673005153462707, "phrase": "financial_transaction_benchmark"}, {"score": 0.0025239898026543964, "phrase": "parallel_sort_benchmark"}, {"score": 0.0024673738215365104, "phrase": "parallel_grep_benchmark"}, {"score": 0.0023445770108033288, "phrase": "straightforward_mechanism"}, {"score": 0.0022405528759521856, "phrase": "transactional_memory_environment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Transactional memory", " I/O"], "paper_abstract": "Researchers have proposed transactional memory as a concurrency primitive to simplify the development of multi-threaded programs. In this paper we present a new approach for supporting I/O operations in the context of transactional memory. Our approach provides isolation between the file operations of different transactions while allowing multiple transactions to concurrently perform I/O. To ease adoption, our approach attempts to implement the traditional I/O programming interface as closely as possible. We formalize aspects of our approach and use the formalization to reason about the correctness of the approach. We have implemented our approach as a Java library and have integrated it with the DSTM2 transactional memory system. We have evaluated the approach with several benchmarks including JCarder, TupleSoup, a financial transaction benchmark, a parallel sort benchmark, and a parallel grep benchmark. Our experience shows that the approach provides a straightforward mechanism for developers to integrate I/O in a transactional memory environment and that it performs well. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Integrating file operations into transactional memory", "paper_id": "WOS:000294085700003"}