{"auto_keywords": [{"score": 0.04815622714531712, "phrase": "concurrent_turing_machines"}, {"score": 0.004815001979271996, "phrase": "concurrent"}, {"score": 0.004466519142879166, "phrase": "turing_machines"}, {"score": 0.004405919996432158, "phrase": "petri_nets"}, {"score": 0.004346139434813299, "phrase": "finite_control"}, {"score": 0.004143196873246147, "phrase": "arbitrary_many_tape_heads"}, {"score": 0.0037395458116642306, "phrase": "complexity_classes"}, {"score": 0.002963830787280652, "phrase": "multiset_rewriting_systems"}, {"score": 0.002786858120570499, "phrase": "rewrite_theory"}, {"score": 0.002693134880651768, "phrase": "encoding_multisets"}, {"score": 0.0025848074189353397, "phrase": "equivalence_relation"}, {"score": 0.002515058854533109, "phrase": "multiset"}, {"score": 0.002285216591220303, "phrase": "rewriting_engine_maude"}, {"score": 0.0022234951091677085, "phrase": "rewriting_system"}, {"score": 0.0021049977753042253, "phrase": "varying_sequence"}], "paper_keywords": [""], "paper_abstract": "We define Concurrent Turing Machines (CTMs) as Turing machines with Petri nets as finite control. This leads to machines with arbitrary many tape heads, thus subsuming any class of (constant) k-head Turing machines. Space, time, and head complexity classes are introduced and discussed showing the difference of various acceptance conditions that are defined for CTMs. Nevertheless, we show that CTMs can be simulated by TMs. Concurrent Turing machines correspond to a class of multiset rewriting systems. The definition of a CTMs as a rewrite theory avoids the need for encoding multisets as words and using an equivalence relation on configurations. Multiset rewriting lends itself to be used in rewriting systems and tools like the rewriting engine Maude. For the rewriting system, a configuration is given by a varying sequence of strings and multisets.", "paper_title": "Concurrent turing machines", "paper_id": "WOS:000250413700005"}