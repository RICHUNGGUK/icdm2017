{"auto_keywords": [{"score": 0.03191567603195386, "phrase": "gate-length_biasing"}, {"score": 0.009680726940514753, "phrase": "leakage_power"}, {"score": 0.009257896806799858, "phrase": "leakage_variability"}, {"score": 0.007521056508777517, "phrase": "gate_length"}, {"score": 0.00481495049065317, "phrase": "runtime-leakage_control"}, {"score": 0.004664825860856205, "phrase": "system_level_chip_designer"}, {"score": 0.004628028416903033, "phrase": "lowered_supplies"}, {"score": 0.004555298069759361, "phrase": "threshold_voltage"}, {"score": 0.00446009116328642, "phrase": "dynamic_power_reduction"}, {"score": 0.0042982215334159135, "phrase": "total_power"}, {"score": 0.004219493853770107, "phrase": "additional_challenge"}, {"score": 0.004175153021444913, "phrase": "recent_data"}, {"score": 0.004109510313842204, "phrase": "microprocessor_chips"}, {"score": 0.004023582827041885, "phrase": "previously_proposed_techniques"}, {"score": 0.004002382035704641, "phrase": "leakage-power_reduction"}, {"score": 0.003949865567771052, "phrase": "multiple_supply"}, {"score": 0.00392905167013463, "phrase": "gate_threshold_voltages"}, {"score": 0.0038672631978909256, "phrase": "input_values"}, {"score": 0.0038468828940454946, "phrase": "inactive_gates"}, {"score": 0.0037564875159378217, "phrase": "additional_design_space"}, {"score": 0.0036974027232000335, "phrase": "device_gate_lengths"}, {"score": 0.0036682084576490793, "phrase": "chip_leakage_power"}, {"score": 0.0034885715165515153, "phrase": "increasing_gate_length"}, {"score": 0.0033352884949505537, "phrase": "exponential_leakage_reduction"}, {"score": 0.003248277096147059, "phrase": "design-flow_standpoint"}, {"score": 0.0031468450866998523, "phrase": "layout_compatibility"}, {"score": 0.0031055193765081967, "phrase": "authors'_technique"}, {"score": 0.0030566420737720367, "phrase": "postlayout_enhancement_step"}, {"score": 0.0029377781108867866, "phrase": "critical_paths"}, {"score": 0.002906866955370437, "phrase": "zero_or_negligible_degradation"}, {"score": 0.002801209717483437, "phrase": "multithreshold_voltage_technique"}, {"score": 0.002749826087585009, "phrase": "leakage_reduction"}, {"score": 0.0026358800880512357, "phrase": "experimental_results"}, {"score": 0.002540047443578731, "phrase": "delay_penalties"}, {"score": 0.0025133106414591544, "phrase": "selective_gate-length_biasing"}, {"score": 0.002473730894309209, "phrase": "circuit_leakage"}, {"score": 0.002441223158817114, "phrase": "delay_penalty"}, {"score": 0.0023586836166491877, "phrase": "substantial_improvements"}, {"score": 0.0023400348959610024, "phrase": "manufacturing_yield"}, {"score": 0.0023215332766056526, "phrase": "product_cost"}, {"score": 0.0022609088489759597, "phrase": "cell_instances"}, {"score": 0.0021500404803297397, "phrase": "fall_transitions"}], "paper_keywords": ["biasing", " channel length", " design for manufacturing", " gate length", " leakage", " optimization", " sensitivity", " static power", " variability"], "paper_abstract": "Leakage power has become one of the most critical design concerns for the system level chip designer. While lowered supplies (and consequently, lowered threshold voltage) and aggressive clock gating can achieve dynamic power reduction, these techniques increase the leakage power and, therefore, causes its share of total power to increase. Manufacturers face the additional challenge of leakage variability: Recent data indicate that the leakage of microprocessor chips from a single 180-nm wafer can vary by as much as 20 x. Previously proposed techniques for leakage-power reduction include the use of multiple supply and gate threshold voltages, and the assignment of input values to inactive gates, such that leakage is minimized. The additional design space afforded by the biasing of device gate lengths to reduce chip leakage power and its variability is studied. It is well known that leakage power decreases exponentially and delay increases linearly with increasing gate length. Thus, it is possible to increase gate length only marginally to take advantage of the exponential leakage reduction, while impairing performance only linearly. From a design-flow standpoint, the use of only slight increases in gate length preserves both pin and layout compatibility; therefore, the authors' technique can be applied as a postlayout enhancement step. The authors apply gate-length biasing only to those devices that do not appear in critical paths, thus assuring zero or negligible degradation in chip performance. To highlight the value of the technique, the multithreshold voltage technique, which is widely used for leakage reduction, is first applied and then gate-length biasing is used to show further reduction in leakage. Experimental results show that gate-length biasing reduces leakage by 24%-38% for the most commonly used cells, while incurring delay penalties of under 10%. Selective gate-length biasing at the circuit level reduces circuit leakage by up to 30% with no delay penalty. Leakage variability is reduced significantly by up to 41%, which may lead to substantial improvements in the manufacturing yield and the product cost. The use of gate-length biasing for leakage optimization of cell instances is also assessed, in which. 1) not all timing arcs are timing critical and/or 2) the rise and fall transitions are not both timing critical at the same time.", "paper_title": "Gate-length biasing for runtime-leakage control", "paper_id": "WOS:000239367700004"}