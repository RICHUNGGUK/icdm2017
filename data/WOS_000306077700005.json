{"auto_keywords": [{"score": 0.00460125407969429, "phrase": "parallel_applications"}, {"score": 0.004357245559948974, "phrase": "event_traces"}, {"score": 0.004278807087784626, "phrase": "characteristic_patterns"}, {"score": 0.0037336520904376687, "phrase": "serial_trace-analysis_scheme"}, {"score": 0.003287482882222731, "phrase": "one-sided_communications"}, {"score": 0.002947611960613497, "phrase": "new_scalable_trace-analysis_approach"}, {"score": 0.002502374576203785, "phrase": "collective_communication"}, {"score": 0.002203016940021265, "phrase": "optimization_cycle"}], "paper_keywords": ["MPI-2", " pattern search", " performance analysis", " remote memory access", " scalability"], "paper_abstract": "Wait states in parallel applications can be identified by scanning event traces for characteristic patterns. In our earlier work we defined such inefficiency patterns for MPI-2 one-sided communication, although still based on a serial trace-analysis scheme with limited scalability. In this article we show how wait states in one-sided communications can be detected in a more scalable fashion by taking advantage of a new scalable trace-analysis approach based on a parallel replay, which was originally developed for MPI-1 point-to-point and collective communication. Moreover, we demonstrate the scalability of our method and its usefulness for the optimization cycle with applications running on up to 32,768 cores.", "paper_title": "Scalable detection of MPI-2 remote memory access inefficiency patterns", "paper_id": "WOS:000306077700005"}