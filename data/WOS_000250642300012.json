{"auto_keywords": [{"score": 0.004769444094319619, "phrase": "reconfigurable_servers"}, {"score": 0.004724365740062236, "phrase": "dynamic_server"}, {"score": 0.00452670409375785, "phrase": "real_life_computing_applications"}, {"score": 0.003261133560558666, "phrase": "i.e._an_operator"}, {"score": 0.0030656196752517836, "phrase": "re-allocation_policies"}, {"score": 0.002570817338292482, "phrase": "average_cost_criterion"}, {"score": 0.0025103699913760057, "phrase": "optimal_re-allocation_policy"}, {"score": 0.0023485549678832628, "phrase": "heuristic_policy"}, {"score": 0.0023152577218214804, "phrase": "simulation_experiments"}, {"score": 0.0022500695985527668, "phrase": "optimal_one"}], "paper_keywords": ["optimal policy", " re-allocation", " average cost", " heuristic", " complexity"], "paper_abstract": "Dynamic server re-allocation can be very useful in real life computing applications. Since the load on many computing systems is not uniformly distributed to each server, it may be effective to transfer the less loaded servers to help the other more loaded ones. However, since transferring takes time, it may not be profitable to actually make the transfer. In this study we model this case with two queues. Each queue is served by one server which can be re-allocated, i.e. an operator may decide to switch a server to serve the other queue. The re-allocation policies we examine are non-preemptive, which implies that a server can be re-allocated if it is idle or has just served a customer. The model is studied with respect to the average cost criterion. We find the optimal re-allocation policy for various instances of the parameters. In addition, we provide a heuristic policy and use simulation experiments to compare it with the optimal one as well as the policy that uses no re-allocation at all. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic non-preemptive re-allocation policies between two sites with reconfigurable servers", "paper_id": "WOS:000250642300012"}