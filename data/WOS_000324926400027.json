{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stable_model_semantics"}, {"score": 0.03940134622178509, "phrase": "logic_programs"}, {"score": 0.004723322467153553, "phrase": "intensional_functions"}, {"score": 0.00429057323623293, "phrase": "\"intensional\"_functions"}, {"score": 0.0034392837410790293, "phrase": "default_behaviors"}, {"score": 0.0030938932434437178, "phrase": "grounding_bottleneck"}, {"score": 0.003034916887102753, "phrase": "functional_fluents"}, {"score": 0.0027830917623582903, "phrase": "different_ways"}, {"score": 0.002730023736069673, "phrase": "different_intuitions"}, {"score": 0.0021049977753042253, "phrase": "large_syntactic_classes"}], "paper_keywords": ["answer set programming", " stable models", " intensional functions"], "paper_abstract": "Several extensions of the stable model semantics are available to describe \"intensional\" functions-functions that can be described in terms of other functions and predicates by logic programs. Such functions are useful for expressing inertia and default behaviors of systems, and can be exploited for alleviating the grounding bottleneck involving functional fluents. However, the extensions were defined in different ways under different intuitions. In this paper we provide several reformulations of the extensions, and note that they are in fact closely related to each other and coincide on large syntactic classes of logic programs.", "paper_title": "On the stable model semantics for intensional functions", "paper_id": "WOS:000324926400027"}