{"auto_keywords": [{"score": 0.03616117436850772, "phrase": "relatively_large_alphabet"}, {"score": 0.00481495049065317, "phrase": "locally_non-repetitive_strings"}, {"score": 0.004550783060775205, "phrase": "longest_common_subsequence"}, {"score": 0.0043533862892678864, "phrase": "efficient_algorithms"}, {"score": 0.004283818782461956, "phrase": "lcs"}, {"score": 0.004081385289516914, "phrase": "known_algorithms"}, {"score": 0.004032302251481604, "phrase": "quadratic_time"}, {"score": 0.0039677715255034595, "phrase": "logarithmic_factors"}, {"score": 0.0039042694651106884, "phrase": "large_lcs."}, {"score": 0.0036454883790271843, "phrase": "hard_inputs"}, {"score": 0.003501322813520807, "phrase": "near-linear_size"}, {"score": 0.0029553380263320195, "phrase": "locally_non-repetitive_string"}, {"score": 0.002884603537502399, "phrase": "negligible_additive_distortion"}, {"score": 0.002748159131396737, "phrase": "edit_distance"}, {"score": 0.0026181517251690606, "phrase": "locally-non-repetitive_strings"}, {"score": 0.002504374718975704, "phrase": "approximation_algorithm"}, {"score": 0.0024642355970277497, "phrase": "strictly_sub-quadratic_time_algorithm"}, {"score": 0.002357131515622894, "phrase": "constant_epsilon"}, {"score": 0.0023099954987126, "phrase": "common_subsequences"}, {"score": 0.0021566565951738658, "phrase": "existing_tools"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["String algorithms", " LCS approximation", " Embedding"], "paper_abstract": "A classical measure of similarity between strings is the length of the longest common subsequence (LCS) between the two given strings. The search for efficient algorithms for finding the LCS has been going on for more than three decades. To date, all known algorithms may take quadratic time (shaved by logarithmic factors) to find large LCS. In this paper, the problem of approximating LCS is studied, while focusing on the hard inputs for this problem, namely, approximating LCS of near-linear size in strings over a relatively large alphabet (of size at least n(epsilon) for some constant epsilon > 0, where n is the length of the string). We show that, any given string over a relatively large alphabet can be embedded into a locally non-repetitive string. This embedding has a negligible additive distortion for strings that are not too dissimilar in terms of the edit distance. We also show that LCS can be efficiently approximated in locally-non-repetitive strings. Our new method (the embedding together with the approximation algorithm) gives a strictly sub-quadratic time algorithm (i.e., of complexity 0(n(2-epsilon)) for some constant epsilon) which can find common subsequences of linear (and near linear) size that cannot be detected efficiently by the existing tools. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "LCS approximation via embedding into locally non-repetitive strings", "paper_id": "WOS:000288292600005"}