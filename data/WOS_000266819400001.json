{"auto_keywords": [{"score": 0.04954993714748885, "phrase": "mechanistic_model"}, {"score": 0.01434282299452045, "phrase": "execution_time"}, {"score": 0.005041297651859969, "phrase": "pipeline_depth"}, {"score": 0.00481495049065317, "phrase": "order_processors"}, {"score": 0.004639822587124109, "phrase": "superscalar_processors"}, {"score": 0.004471035765089235, "phrase": "microarchitecture_resource_scaling"}, {"score": 0.0043083624695326745, "phrase": "disruptive_miss_events"}, {"score": 0.004260719592945006, "phrase": "branch_mispredictions"}, {"score": 0.004229249483672161, "phrase": "cache_misses"}, {"score": 0.0041515831652973794, "phrase": "miss_event_results"}, {"score": 0.004120915812750583, "phrase": "characterizable_performance_behavior"}, {"score": 0.00407533728096378, "phrase": "execution_time_interval"}, {"score": 0.004000486064911652, "phrase": "interval's_type"}, {"score": 0.0037560869590718966, "phrase": "overall_execution_time"}, {"score": 0.0035265659032655845, "phrase": "prior_modeling_approaches"}, {"score": 0.003385555209074879, "phrase": "detailed_simulation"}, {"score": 0.00328654473734697, "phrase": "order_processor"}, {"score": 0.0031317713853981064, "phrase": "general_problem"}, {"score": 0.0031086137705026483, "phrase": "resource_scaling"}, {"score": 0.0030856268625708695, "phrase": "out-of-order_superscalar_processors"}, {"score": 0.0029732094730218488, "phrase": "size_relationships"}, {"score": 0.002951220859491642, "phrase": "microarchitecture_structures"}, {"score": 0.0029185415814209055, "phrase": "balanced_processor_design"}, {"score": 0.002740059168271987, "phrase": "balanced_processor_designs"}, {"score": 0.0026996706283276407, "phrase": "previous_results"}, {"score": 0.0026401983633087267, "phrase": "new_results"}, {"score": 0.002553431170229379, "phrase": "optimal_design_points"}, {"score": 0.002497172413754263, "phrase": "square_root"}, {"score": 0.002469508424323385, "phrase": "processor_width"}, {"score": 0.0022338938462817867, "phrase": "overprovisioned_processor"}, {"score": 0.0022009497295481678, "phrase": "improved_overall_performance"}, {"score": 0.0021604504765314497, "phrase": "processor's_dispatch_width"}, {"score": 0.0021049977753042253, "phrase": "particular_interest"}], "paper_keywords": ["Performance", " Superscalar out-of-order processor", " analytical modeling", " performance modeling", " mechanistic modeling", " resource scaling", " pipeline depth", " pipeline width", " wide front-end dispatch processors", " balanced processor design", " overprovisioned processor design"], "paper_abstract": "A mechanistic model for out-of-order superscalar processors is developed and then applied to the study of microarchitecture resource scaling. The model divides execution time into intervals separated by disruptive miss events such as branch mispredictions and cache misses. Each type of miss event results in characterizable performance behavior for the execution time interval. By considering an interval's type and length (measured in instructions), execution time can be predicted for the interval. Overall execution time is then determined by aggregating the execution time over all intervals. The mechanistic model provides several advantages over prior modeling approaches, and, when estimating performance, it differs from detailed simulation of a 4-wide out-of-order processor by an average of 7%. The mechanistic model is applied to the general problem of resource scaling in out-of-order superscalar processors. First, we use the model to determine size relationships among microarchitecture structures in a balanced processor design. Second, we use the mechanistic model to study scaling of both pipeline depth and width in balanced processor designs. We corroborate previous results in this area and provide new results. For example, we show that at optimal design points, the pipeline depth times the square root of the processor width is nearly constant. Finally, we consider the behavior of unbalanced, overprovisioned processor designs based on insight gained from the mechanistic model. We show that in certain situations an overprovisioned processor may lead to improved overall performance. Designs where a processor's dispatch width is wider than its issue width are of particular interest.", "paper_title": "A Mechanistic Performance Model for Superscalar Out-of-Order Processors", "paper_id": "WOS:000266819400001"}