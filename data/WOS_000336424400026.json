{"auto_keywords": [{"score": 0.03597786138138822, "phrase": "cloud_computing_systems"}, {"score": 0.004817820458809552, "phrase": "cloud"}, {"score": 0.004735519962945449, "phrase": "distributed_data_management"}, {"score": 0.004657393640152439, "phrase": "essential_part"}, {"score": 0.004606023493393774, "phrase": "internet_applications"}, {"score": 0.004357511171877593, "phrase": "cloud_storage_systems"}, {"score": 0.004261885692956071, "phrase": "attractive_choice"}, {"score": 0.0042148594491580324, "phrase": "large-scale_data_processing"}, {"score": 0.004031865694174726, "phrase": "hash-like_approach"}, {"score": 0.0038782499819752423, "phrase": "simple_keyword-based_enquiries"}, {"score": 0.003751228706861377, "phrase": "information_search"}, {"score": 0.003319939715683536, "phrase": "two-layer_architecture"}, {"score": 0.0032470094613727433, "phrase": "lower_layer"}, {"score": 0.003105905142768581, "phrase": "efficient_local_index"}, {"score": 0.0030376623293574905, "phrase": "upper_layer"}, {"score": 0.0029380909574836587, "phrase": "local_index_nodes"}, {"score": 0.002857605453835429, "phrase": "based_global_overlay"}, {"score": 0.0024323098907299027, "phrase": "high_availability"}, {"score": 0.0023920904611571783, "phrase": "new_routing_algorithms"}, {"score": 0.0023656467839555458, "phrase": "mapping_processing_algorithms"}, {"score": 0.002275369652100353, "phrase": "experimental_results"}, {"score": 0.0022377394845878268, "phrase": "snb-index"}, {"score": 0.002152332983488664, "phrase": "alternative_approach"}, {"score": 0.0021049977753042253, "phrase": "auxiliary_index"}], "paper_keywords": ["Auxiliary Cloud index", " Various queries-SkipNet"], "paper_abstract": "Distributed data management plays an essential part in internet applications. With benefits of scalability and reliability, the Cloud storage systems have become an attractive choice for large-scale data processing. However, most Cloud storage systems currently adopt a hash-like approach to retrieve data that only support simple keyword-based enquiries, but lack various forms of information search. In this paper, we propose a novel SkipNet and B+ tree based index structure, called SNB-index, for Cloud computing systems. SNB-index adopts a two-layer architecture. In the lower layer, it uses the B+ tree to construct efficient local index. In the upper layer, it adaptively selects among local index nodes to form a SkipNet based global overlay. Our scalable auxiliary Cloud index can efficiently support a variety of types of queries (e.g. point-query, range-query, similarity-query), and provide high availability. Some new routing algorithms and mapping processing algorithms are designed to enhance performance. Experimental results show that SNB-index is valid and can be an alternative approach for constructing an auxiliary index in Cloud computing systems.", "paper_title": "SNB-index: a SkipNet and B plus tree based auxiliary Cloud index", "paper_id": "WOS:000336424400026"}