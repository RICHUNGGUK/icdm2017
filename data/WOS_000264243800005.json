{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "padua_points"}, {"score": 0.004692227830462433, "phrase": "bivariate_domains"}, {"score": 0.004398872331144531, "phrase": "stable_and_efficient_fortran_implementation"}, {"score": 0.003267925215811654, "phrase": "minimal_order"}, {"score": 0.0025230952890994236, "phrase": "lagrange_interpolation_formula"}, {"score": 0.002427035025924384, "phrase": "suitable_orthogonal_basis"}, {"score": 0.0022168460543913787, "phrase": "new_matrix_formulation"}, {"score": 0.0021049977753042253, "phrase": "machine-specific_optimized_blas_subroutine_dgemm"}], "paper_keywords": ["Algorithms", " Bivariate Lagrange interpolation", " Padua points", " bivariate Chebyshev orthogonal basis", " Fortran 77"], "paper_abstract": "We present a stable and efficient Fortran implementation of polynomial interpolation at the Padua points on the square [-1, 1](2). These points are unisolvent and their Lebesgue constant has minimal order of growth (log square of the degree). The algorithm is based on the representation of the Lagrange interpolation formula in a suitable orthogonal basis, and takes advantage of a new matrix formulation together with the machine-specific optimized BLAS subroutine DGEMM for the matrix-matrix product. Extension to interpolation on rectangles, triangles and ellipses is also described.", "paper_title": "Algorithm 886: Padua2D-Lagrange Interpolation at Padua Points on Bivariate Domains", "paper_id": "WOS:000264243800005"}