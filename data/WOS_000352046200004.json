{"auto_keywords": [{"score": 0.03346530410669141, "phrase": "bic"}, {"score": 0.00481495049065317, "phrase": "autonomous_data"}, {"score": 0.004763895422211728, "phrase": "split-and-merge_concepts"}, {"score": 0.00458940888106061, "phrase": "new_clustering_method"}, {"score": 0.004362738436361684, "phrase": "new_incoming_data_samples"}, {"score": 0.004259293347851015, "phrase": "sample-wise_manner"}, {"score": 0.004225357291695418, "phrase": "time-intensive_re-training_phases"}, {"score": 0.0041251561573501455, "phrase": "on-line_data_streams"}, {"score": 0.004016594765266821, "phrase": "vector_quantization"}, {"score": 0.003869373085652601, "phrase": "arbitrary_positions"}, {"score": 0.0038283058265876713, "phrase": "incremental_split-and-merge_techniques"}, {"score": 0.0037474693720823643, "phrase": "cluster_delamination_effects"}, {"score": 0.0037175960647372014, "phrase": "merging_process"}, {"score": 0.003678133730034786, "phrase": "geometrical_criteria"}, {"score": 0.003658559348800592, "phrase": "overlapping_clusters"}, {"score": 0.0036390887584943723, "phrase": "joint_homogeneity_areas"}, {"score": 0.0035908627899097407, "phrase": "fast_fusion"}, {"score": 0.0035150223642728437, "phrase": "splitting_process"}, {"score": 0.0033861224940737846, "phrase": "already_extracted_clusters"}, {"score": 0.0031845067058084583, "phrase": "bayesian_information_criterion"}, {"score": 0.003084112747780646, "phrase": "proper_convergence"}, {"score": 0.0030595112110658675, "phrase": "em_algorithm"}, {"score": 0.003002865798215281, "phrase": "extended_form"}, {"score": 0.0029789104204803137, "phrase": "welch_test"}, {"score": 0.0029394074636168435, "phrase": "identified_components"}, {"score": 0.002816474286556831, "phrase": "split-and-merge_operations"}, {"score": 0.002771707885755579, "phrase": "inappropriate_settings"}, {"score": 0.0027495914857929584, "phrase": "method's_learning_parameter"}, {"score": 0.0026842926751524153, "phrase": "desired_cluster_structure"}, {"score": 0.002613550853729262, "phrase": "parameter-free_evolving_clustering_algorithm"}, {"score": 0.002578880352208335, "phrase": "essential_property"}, {"score": 0.0025514745448798385, "phrase": "different_settings"}, {"score": 0.0024908689724726925, "phrase": "huge_streams"}, {"score": 0.002418742283474052, "phrase": "on-line_streams"}, {"score": 0.002386649864137357, "phrase": "high-dimensional_real-world_clustering_streams"}, {"score": 0.0023051837161137674, "phrase": "batch_prototype-based_clustering_methods"}, {"score": 0.0022324489895237504, "phrase": "final_obtained_cluster_partitions"}, {"score": 0.002196944917134202, "phrase": "extracted_number"}, {"score": 0.002167788960426031, "phrase": "real_number"}, {"score": 0.0021049977753042253, "phrase": "plug-and-play_capability"}], "paper_keywords": ["Autonomous evolving clustering", " On-line data streams", " Incremental split-and-merge", " Cluster heterogeneity", " Cluster homogeneity", " Parameter sensitivity"], "paper_abstract": "We propose a new clustering method, which is dynamic in the sense that it updates its structure (cluster partition) permanently based on new incoming data samples. As it basically operates in single-pass and sample-wise manner without using time-intensive re-training phases, it is applicable for extracting clusters from on-line data streams. The approach builds upon an extended, dynamic version of evolving vector quantization, generalizing it to prototype clusters with convex (ellipsoidal) shapes in arbitrary positions. It includes incremental split-and-merge techniques in Order to resolve cluster fusion and cluster delamination effects. The merging process is guided by geometrical criteria indicating overlapping clusters with joint homogeneity areas, and implements a fast fusion of two clusters fulfilling the criteria. The splitting process relies on concepts of seeking for heterogeneity (disjoint density areas) within already extracted clusters. This is based (1) on components (mixture models) identification while measuring their reliability (a) with the Bayesian information criterion (BIC) and (b) in terms of a proper convergence of the EM algorithm and (2) on an extended form of the Welch test for verifying whether the identified components are statistically independent the extension concerns the integration of their mixing proportions. Finally, split-and-merge operations are able to automatically compensate inappropriate settings of the method's learning parameter, thus still being able to extract the desired cluster structure. Thus, our approach presents an attempt towards a parameter-free evolving clustering algorithm. This is an essential property as several trials with different settings are often not desired (in case of huge streams) or not possible at all (in case of on-line streams). Based on high-dimensional real-world clustering streams, our approach will be compared with alternative incremental as well as batch prototype-based clustering methods. The comparison will be based on the quality of the final obtained cluster partitions, the deviation of the extracted number of clusters to the real number, the sensitivity with respect to the most influencing learning parameters and the plug-and-play capability of the methods. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Autonomous data stream clustering implementing split-and-merge concepts - Towards a plug-and-play approach", "paper_id": "WOS:000352046200004"}