{"auto_keywords": [{"score": 0.043022517605113615, "phrase": "expressive_power"}, {"score": 0.027897993763800286, "phrase": "xpath_dialect"}, {"score": 0.00481495049065317, "phrase": "transitive_closure_logic"}, {"score": 0.0047689174754929195, "phrase": "nested_tree_walking_automata"}, {"score": 0.004700707474814205, "phrase": "xpath"}, {"score": 0.004437349839203418, "phrase": "monadic_transitive_closure"}, {"score": 0.0039729853486821995, "phrase": "nested_tree-walking_automata"}, {"score": 0.003678855633810605, "phrase": "mso"}, {"score": 0.003608732492631878, "phrase": "open_problem"}, {"score": 0.0035060903664150115, "phrase": "temporal_logic"}, {"score": 0.003199864072042816, "phrase": "xml_document_navigation_language"}, {"score": 0.003108835337613327, "phrase": "kleene"}, {"score": 0.003034916887102753, "phrase": "transitive_closure"}, {"score": 0.0030058503645435455, "phrase": "path_expressions"}, {"score": 0.0027965187255008647, "phrase": "specific_subtree"}, {"score": 0.002540023363622762, "phrase": "boolean"}, {"score": 0.0023743009016047424, "phrase": "automata_model"}, {"score": 0.0022626835039082746, "phrase": "query_evaluation"}, {"score": 0.002219516542316085, "phrase": "polynomial_time"}], "paper_keywords": ["Languages", " Theory", " Transitive closure logic", " tree automata", " XPath"], "paper_abstract": "We study FO(MTC), first-order logic with monadic transitive closure, a logical formalism in between FO and MSO on trees. We characterize the expressive power of FO(MTC) in terms of nested tree-walking automata. Using the latter, we show that FO(MTC) is strictly less expressive than MSO, solving an open problem. We also present a temporal logic on trees that is expressively complete for FO(MTC), in the form of an extension of the XML document navigation language XPath with two operators: the Kleene star for taking the transitive closure of path expressions, and a subtree relativisation operator, allowing one to restrict attention to a specific subtree while evaluating a subexpression. We show that the expressive power of this XPath dialect equals that of FO(MTC) for Boolean, unary and binary queries. We also investigate the complexity of the automata model as well as the XPath dialect. We show that query evaluation be done in polynomial time (combined complexity), but that emptiness (or, satisfiability) is 2ExpTime-complete.", "paper_title": "Transitive Closure Logic, Nested Tree Walking Automata, and XPath", "paper_id": "WOS:000277058400007"}