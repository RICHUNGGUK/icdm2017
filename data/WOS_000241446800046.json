{"auto_keywords": [{"score": 0.03053782285103672, "phrase": "composite_service"}, {"score": 0.00481495049065317, "phrase": "semantic_web_services_-"}, {"score": 0.0043258453436258405, "phrase": "composite_services"}, {"score": 0.003886259774961922, "phrase": "preconditions"}, {"score": 0.003827567609317288, "phrase": "result"}, {"score": 0.0036274201504044685, "phrase": "functional_descriptions"}, {"score": 0.0034911335714333507, "phrase": "first-order_logic"}, {"score": 0.003438067312965958, "phrase": "fol"}, {"score": 0.003308862957060602, "phrase": "automatic_theorem_prover"}, {"score": 0.0032585998910349147, "phrase": "atp"}, {"score": 0.0030414140732789186, "phrase": "known_services"}, {"score": 0.0027955219242123013, "phrase": "object_formula"}, {"score": 0.0026698611202305715, "phrase": "deductive_program_synthesis_theory"}, {"score": 0.0021539955106204354, "phrase": "brief_introduction"}, {"score": 0.0021049977753042253, "phrase": "prototype_system"}], "paper_keywords": ["Semantic Web Services", " Automatic Service Composition", " Automatic Theorem Proof", " Deductive Program Synthesis"], "paper_abstract": "This paper proposes a method to automatically generate composite services. The function of a service is specified by its Inputs, Output, Preconditions, and Result (IOPR). These functional descriptions are translated into a first-order logic (FOL) formula. An Automatic Theorem Prover (ATP) is used to generate a proof from known services (as axioms) to the composite service (as an object formula). Based on the deductive program synthesis theory, the implementation of the composite service is extracted from the proof. The \"proof to program\" method used here guarantees the completeness and correctness of the result. An brief introduction of the prototype system is given.", "paper_title": "Automatic composition of Semantic Web Services - A theorem proof approach", "paper_id": "WOS:000241446800046"}