{"auto_keywords": [{"score": 0.03201460631367665, "phrase": "inter-application_interactions"}, {"score": 0.015457961415712863, "phrase": "os-level_virtualization"}, {"score": 0.008283495957158434, "phrase": "shuttle"}, {"score": 0.00481495049065317, "phrase": "facilitating_inter-application"}, {"score": 0.0046018264570209765, "phrase": "minimal_start-up"}, {"score": 0.004398094237005956, "phrase": "host_os"}, {"score": 0.004203343568960231, "phrase": "good_isolation"}, {"score": 0.004156012879026324, "phrase": "high_efficiency"}, {"score": 0.004062937864702115, "phrase": "multiple-member_applications"}, {"score": 0.0037745459666402915, "phrase": "isolation_barrier"}, {"score": 0.003546513036085932, "phrase": "different_vms"}, {"score": 0.003313380246267812, "phrase": "enterprise-class_servers"}, {"score": 0.0032760606987874753, "phrase": "hpc"}, {"score": 0.0030955250132409964, "phrase": "first_effort"}, {"score": 0.002975099633631871, "phrase": "os-level_virtualization_system"}, {"score": 0.0029083942467546305, "phrase": "significant_compromise"}, {"score": 0.0028756028995504035, "phrase": "vm_isolation"}, {"score": 0.002795228413298423, "phrase": "interactive_operations"}, {"score": 0.0027017308406240563, "phrase": "inter-process_communications"}, {"score": 0.0026262033625248445, "phrase": "resource_name_transfers"}, {"score": 0.0025819015229390663, "phrase": "application_dependencies"}, {"score": 0.0023713273141757326, "phrase": "os-level_virtual_machines"}, {"score": 0.0022278779300543548, "phrase": "necessary_inter-application_interactions"}, {"score": 0.002190280748985751, "phrase": "good_isolation_capability"}, {"score": 0.002153316680437517, "phrase": "sample_applications"}, {"score": 0.002129020447793464, "phrase": "different_versions"}, {"score": 0.0021049977753042253, "phrase": "windows_os."}], "paper_keywords": ["OS-level virtual machines", " inter-application interactions", " cross-VM communications", " intrusion/fault isolation"], "paper_abstract": "OS-level virtualization generates a minimal start-up and run-time overhead on the host OS and thus suits applications that require both good isolation and high efficiency. However, multiple-member applications required for forming a system may need to occasionally communicate across this isolation barrier to cooperate with each other while they are separated in different VMs to isolate intrusion or fault. Such application scenarios are often critical to enterprise-class servers, HPC clusters and intrusion/fault-tolerant systems, etc. We make the first effort to support the inter-application interactions in an OS-level virtualization system without causing a significant compromise on VM isolation. We identify all interactive operations that impact inter-application interactions, including inter-process communications, application invocations, resource name transfers, and application dependencies. We propose Shuttle, a novel approach for facilitating inter-application interactions within and across OS-level virtual machines. Our results demonstrate that Shuttle can correctly address all necessary inter-application interactions while providing good isolation capability for all sample applications on different versions of Windows OS.", "paper_title": "Shuttle: Facilitating Inter-Application Interactions for OS-Level Virtualization", "paper_id": "WOS:000336672600014"}