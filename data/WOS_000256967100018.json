{"auto_keywords": [{"score": 0.03247973049287251, "phrase": "almost_ideal_smoothness"}, {"score": 0.00481495049065317, "phrase": "guaranteed_smooth_switching"}, {"score": 0.004776484866276242, "phrase": "buffered_crossbar_switches"}, {"score": 0.004738325072560588, "phrase": "scalability_considerations"}, {"score": 0.004644247838681628, "phrase": "switch_design"}, {"score": 0.004461634909525319, "phrase": "combined_input"}, {"score": 0.004425979295788883, "phrase": "crosspoint_queueing"}, {"score": 0.004303404698060504, "phrase": "cicq"}, {"score": 0.004251912075877877, "phrase": "credit-based_flow_control"}, {"score": 0.003987474771008829, "phrase": "novel_approach"}, {"score": 0.0038152404172111815, "phrase": "cicq_switch"}, {"score": 0.003236086384959101, "phrase": "smoothed_multiplexer_smux"}, {"score": 0.003146360480030653, "phrase": "competing_flows"}, {"score": 0.002974281028713475, "phrase": "buffered_crossbar_sbux"}, {"score": 0.0029034358982402346, "phrase": "scheduler_smux"}, {"score": 0.0028003107731426322, "phrase": "two-cell_buffer"}, {"score": 0.0026577673946415583, "phrase": "real-time_services"}, {"score": 0.0025224615049571427, "phrase": "bandwidth_regulator"}, {"score": 0.0024623517958288228, "phrase": "bandwidth_demand"}, {"score": 0.002432834929068545, "phrase": "admissible_allocations"}, {"score": 0.0023653276631862958, "phrase": "best-effort_services"}, {"score": 0.002308953751676031, "phrase": "multi-microsecond_average_delay"}, {"score": 0.0022001958412800745, "phrase": "arbitrary_fabric-internal_latency"}, {"score": 0.002165091261117016, "phrase": "line_cards"}, {"score": 0.0021391300942881, "phrase": "switch_core"}, {"score": 0.0021049977753042253, "phrase": "switch_implementation"}], "paper_keywords": ["buffered crossbar", " scheduling", " smoothness", " switches"], "paper_abstract": "Scalability considerations drive the evolution of switch design from output queueing to input queueing and further to combined input and crosspoint queueing (CICQ). However, CICQ switches with credit-based flow control face new challenges of scalability and predictability. In this paper, we propose a novel approach of rate-based smoothed switching, and design a CICQ switch called the smoothed buffered crossbar or sBUX. First, the concept of smoothness is developed from two complementary perspectives of covering and spacing, which, commonly known as fairness and jitter, are unified in the same model. Second, a smoothed multiplexer sMUX is designed that allocates bandwidth among competing flows sharing a link and guarantees almost ideal smoothness for each flow. Third, the buffered crossbar sBUX is designed that uses the scheduler sMUX at each input and output, and a two-cell buffer at each crosspoint. It is proved that sBUX guarantees 100% throughput for real-time services and almost ideal smoothness for each flow. Fourth, an on-line bandwidth regulator is designed that periodically estimates bandwidth demand and generates admissible allocations, which enables sBUX to support best-effort services. Simulation shows almost 100% throughput and multi-microsecond average delay. In particular, neither credit-based flow control nor speedup is used, and arbitrary fabric-internal latency is allowed between line cards and the switch core, simplifying the switch implementation.", "paper_title": "On guaranteed smooth switching for buffered crossbar switches", "paper_id": "WOS:000256967100018"}