{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "declarative_model"}, {"score": 0.0042354707960660706, "phrase": "ocl_invariants"}, {"score": 0.004175533280178052, "phrase": "declarative_model-to-model_transformations"}, {"score": 0.003646629717560631, "phrase": "invariant-based_verification_properties"}, {"score": 0.0034444213065548688, "phrase": "transformation_correctness"}, {"score": 0.0032073043728420843, "phrase": "whole_transformation"}, {"score": 0.0028006988338192375, "phrase": "meaningful_scenarios"}, {"score": 0.0022608057001451414, "phrase": "model_transformation"}, {"score": 0.002212892265364764, "phrase": "triple_graph_grammars"}, {"score": 0.002181514206602054, "phrase": "qvt."}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Model-to-model transformation", " Model-Driven Development", " OCL", " Verification and validation", " Triple Graph Grammars", " QVT"], "paper_abstract": "In this paper we propose a method to derive OCL invariants from declarative model-to-model transformations in order to enable their verification and analysis. For this purpose we have defined a number of invariant-based verification properties which provide increasing degrees of confidence about transformation correctness, such as whether a rule (or the whole transformation) is satisfiable by some model, executable or total. We also provide some heuristics for generating meaningful scenarios that can be used to semi-automatically validate the transformations. As a proof of concept, the method is instantiated for two prominent model-to-model transformation languages: Triple Graph Grammars and QVT. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Verification and validation of declarative model-to-model transformations through invariants", "paper_id": "WOS:000274275200009"}