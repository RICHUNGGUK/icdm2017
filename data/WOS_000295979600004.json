{"auto_keywords": [{"score": 0.03638119130493058, "phrase": "text_cube"}, {"score": 0.00481495049065317, "phrase": "top-k_cells"}, {"score": 0.004708056866527125, "phrase": "previous_studies"}, {"score": 0.004645057834614705, "phrase": "free-form_keyword_queries"}, {"score": 0.004521566043596533, "phrase": "linked_structures"}, {"score": 0.00438161736774803, "phrase": "joined_tuples"}, {"score": 0.004096082254543022, "phrase": "individual_tuples"}, {"score": 0.003987126862293129, "phrase": "multiple_tables"}, {"score": 0.0037104876694493815, "phrase": "keyword_search"}, {"score": 0.003660788124282824, "phrase": "data_cube"}, {"score": 0.0029901699209266435, "phrase": "keyword-based_query_language"}, {"score": 0.00295008998986066, "phrase": "ir-style_relevance_model"}, {"score": 0.002820319063320601, "phrase": "keyword_query"}, {"score": 0.0027328817607818207, "phrase": "top-k_most_relevant_cells"}, {"score": 0.002366361492754389, "phrase": "search-space_ordering_algorithm"}, {"score": 0.002272415777234064, "phrase": "top-k_answers"}, {"score": 0.0022318655527987846, "phrase": "early_termination"}, {"score": 0.0022118619998034742, "phrase": "extensive_experimental_studies"}, {"score": 0.0021049977753042253, "phrase": "proposed_approaches"}], "paper_keywords": ["Keyword search", " multidimensional text data", " data cube"], "paper_abstract": "Previous studies on supporting free-form keyword queries over RDBMSs provide users with linked structures (e.g., a set of joined tuples) that are relevant to a given keyword query. Most of them focus on ranking individual tuples from one table or joins of multiple tables containing a set of keywords. In this paper, we study the problem of keyword search in a data cube with text-rich dimension(s) (so-called text cube). The text cube is built on a multidimensional text database, where each row is associated with some text data (a document) and other structural dimensions (attributes). A cell in the text cube aggregates a set of documents with matching attribute values in a subset of dimensions. We define a keyword-based query language and an IR-style relevance model for scoring/ranking cells in the text cube. Given a keyword query, our goal is to find the top-k most relevant cells. We propose four approaches: inverted-index one-scan, document sorted-scan, bottom-up dynamic programming, and search-space ordering. The search-space ordering algorithm explores only a small portion of the text cube for finding the top-k answers, and enables early termination. Extensive experimental studies are conducted to verify the effectiveness and efficiency of the proposed approaches.", "paper_title": "Efficient Keyword-Based Search for Top-K Cells in Text Cube", "paper_id": "WOS:000295979600004"}