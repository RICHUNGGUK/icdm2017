{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "knowledge_management"}, {"score": 0.04936106948081192, "phrase": "agile_software_development"}, {"score": 0.004648148684720193, "phrase": "asd"}, {"score": 0.0044644734709113985, "phrase": "consolidated_values"}, {"score": 0.0043753813457279404, "phrase": "lightweight_methods"}, {"score": 0.004331501320993783, "phrase": "software_engineering"}, {"score": 0.004160319763461951, "phrase": "initial_deployment"}, {"score": 0.004036369952624852, "phrase": "practice_environment"}, {"score": 0.003935892934907777, "phrase": "traditional_software_development_practices"}, {"score": 0.003876806615011266, "phrase": "asd_method"}, {"score": 0.00376127170364341, "phrase": "knowledge-intensive_practices"}, {"score": 0.0036861605703168397, "phrase": "multi-disciplinary_expert_team_working_extended_periods"}, {"score": 0.003558294449586273, "phrase": "nearly_continuous_basis"}, {"score": 0.0035048567587934254, "phrase": "huge_amount"}, {"score": 0.003469676666252421, "phrase": "tacit_knowledge_creation"}, {"score": 0.003366233863411861, "phrase": "entire_process"}, {"score": 0.0033156708990372047, "phrase": "project_lifecycle"}, {"score": 0.0028933521924166287, "phrase": "agile_values"}, {"score": 0.0028642924503126154, "phrase": "agile_principles"}, {"score": 0.0026688629249775925, "phrase": "integrated_km_infrastructure"}, {"score": 0.0026155094974689595, "phrase": "km_model"}, {"score": 0.002437012847684331, "phrase": "conceptual_framework"}, {"score": 0.0024125253170522816, "phrase": "knowledge_sharing"}, {"score": 0.0023523750536537102, "phrase": "individual_practitioners"}, {"score": 0.0022937210378944457, "phrase": "agile_team"}, {"score": 0.002214048743052355, "phrase": "organizational_learning_framework"}, {"score": 0.0021917966722180132, "phrase": "knowledge_creation"}, {"score": 0.002137137933768807, "phrase": "involved_entities"}, {"score": 0.0021049977753042253, "phrase": "collaborative_practice_environment"}], "paper_keywords": [""], "paper_abstract": "Agile software development (ASD) has emerged as a result of consolidated values proposed under the lightweight methods of software engineering. Despite bearing some criticisms, the initial deployment and results observed in the practice environment represents its increasing domination over the traditional software development practices. Any ASD method, in particular, requires knowledge-intensive practices and typically employs multi-disciplinary expert team working extended periods of time for weeks on a nearly continuous basis. A huge amount of tacit knowledge creation and exchange happens in the entire process over the project lifecycle, which attracts the attention of research in the domain of knowledge management (KM). In this paper, first, we have mapped the agile values and agile principles, and in its support, we have argued upon and the need for integrated KM infrastructure and proposed a KM model that can be employed within the organization. We have also developed a conceptual framework for knowledge sharing and learning for the individual practitioners for the sustainability of agile team. We attempt to create an organizational learning framework for knowledge creation and exchange among the involved entities in a collaborative practice environment.", "paper_title": "Conceptual modeling for knowledge management to support agile software development", "paper_id": "WOS:000342995200007"}