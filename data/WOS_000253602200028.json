{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "convergence_time"}, {"score": 0.004482916269287717, "phrase": "ldpc"}, {"score": 0.004173244935967375, "phrase": "iterative_belief-propagation_algorithm"}, {"score": 0.003823791479971016, "phrase": "traditional_message-passing_schedule"}, {"score": 0.00347574024760684, "phrase": "new_messages"}, {"score": 0.0032614317990293695, "phrase": "serial_scheduling"}, {"score": 0.003036040409062437, "phrase": "latest_available_information"}, {"score": 0.002917604283241353, "phrase": "convergence_speed"}, {"score": 0.0025687008721685454, "phrase": "serial_schedule"}, {"score": 0.002508073621696602, "phrase": "exactly_half_the_number"}, {"score": 0.002391067964886602, "phrase": "standard_parallel_schedule"}, {"score": 0.0022434880661725493, "phrase": "theoretical_motivation"}, {"score": 0.0021049977753042253, "phrase": "single-path_graphs"}], "paper_keywords": ["iterative decoding", " low-density parity-check (LDPC) codes", " message-passing scheduling"], "paper_abstract": "Low-density parity-check (LDPC) codes are usually decoded by running an iterative belief-propagation algorithm over the factor graph of the code. In the traditional message-passing schedule, in each iteration all the variable nodes, and subsequently all the factor nodes, pass new messages to their neighbors. Recently several studies show that serial scheduling, in which messages are generated using the latest available information, significantly improves the convergence speed in terms of number of iterations. It was observed experimentally in several studies that the serial schedule converges in exactly half the number of iterations compared to the standard parallel schedule. In this correspondence we provide a theoretical motivation for this observation by proving it for single-path graphs.", "paper_title": "Serial schedules for belief-propagation: Analysis of convergence time", "paper_id": "WOS:000253602200028"}