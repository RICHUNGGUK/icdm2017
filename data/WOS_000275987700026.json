{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "state_machine-based_string_edit_kernels"}, {"score": 0.004537401559396022, "phrase": "string_kernels"}, {"score": 0.004492717291734985, "phrase": "probability_distributions"}, {"score": 0.004361276005140776, "phrase": "fisher_kernel"}, {"score": 0.004296998284839309, "phrase": "generative_model_m"}, {"score": 0.004193128038919742, "phrase": "markov"}, {"score": 0.003815607281455725, "phrase": "marginalized_kernels"}, {"score": 0.0037039021744127783, "phrase": "joint_similarity"}, {"score": 0.0036133077234252633, "phrase": "conditional_probabilities"}, {"score": 0.0034047882921717913, "phrase": "distance-based_conditional_distributions"}, {"score": 0.0032563083791198534, "phrase": "new_string_edit_kernel"}, {"score": 0.0031609252620168446, "phrase": "practical_computation"}, {"score": 0.0028911669203979156, "phrase": "edit_probabilities"}, {"score": 0.0027650234530228923, "phrase": "stochastic_state_machine"}, {"score": 0.002657511557782469, "phrase": "infinite_sum"}, {"score": 0.002632476161957282, "phrase": "sigma"}, {"score": 0.0025289662786567896, "phrase": "probabilistic_automata"}, {"score": 0.0024793019587009035, "phrase": "rational_kernels"}, {"score": 0.00240662380079115, "phrase": "handwritten_character_recognition_task"}, {"score": 0.0023245146355917626, "phrase": "art_string_kernels"}, {"score": 0.002168586864007222, "phrase": "neighborhood-based_classifier"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["String kernel", " Marginalized kernel", " Learned edit distance"], "paper_abstract": "During the past few years, several works have been done to derive string kernels from probability distributions. For instance, the Fisher kernel uses a generative model M (e.g. a hidden Markov model) and compares two strings according to how they are generated by M. On the other hand, the marginalized kernels allow the computation of the joint similarity between two instances by summing conditional probabilities. In this paper, we adapt this approach to edit distance-based conditional distributions and we present a way to learn a new string edit kernel. We show that the practical computation of such a kernel between two strings x and x' built from an alphabet requires (i) to learn edit probabilities in the form of the parameters of a stochastic state machine and (ii) to calculate an infinite sum over Sigma* by resorting to the intersection of probabilistic automata as done for rational kernels. We show on a handwritten character recognition task that our new kernel outperforms not only the state of the art string kernels and string edit kernels but also the standard edit distance used by a neighborhood-based classifier. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Learning state machine-based string edit kernels", "paper_id": "WOS:000275987700026"}