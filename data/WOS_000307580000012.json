{"auto_keywords": [{"score": 0.03708007594864935, "phrase": "energy_efficiency"}, {"score": 0.00481495049065317, "phrase": "embedded_systems"}, {"score": 0.004772137871562584, "phrase": "stt-ram_based_hybrid_cache"}, {"score": 0.004625255533545965, "phrase": "energy_consumption"}, {"score": 0.004543352284098364, "phrase": "big_problem"}, {"score": 0.004502943680955863, "phrase": "traditional_sram-based_cache_hierarchies"}, {"score": 0.0044430006374681285, "phrase": "emerging_spin-torque_transfer_ram"}, {"score": 0.004287008195370748, "phrase": "promising_replacement"}, {"score": 0.003920476803132283, "phrase": "stt-ram_suffer"}, {"score": 0.0038855864345030563, "phrase": "considerably_higher_energy_consumption"}, {"score": 0.0037997077863530897, "phrase": "sram._hybrid_cache"}, {"score": 0.003459191419478298, "phrase": "hybrid_caches"}, {"score": 0.0034283921404628975, "phrase": "migration-based_techniques"}, {"score": 0.003367611042980526, "phrase": "write-intensive_data"}, {"score": 0.0033376249251191796, "phrase": "stt-ram"}, {"score": 0.0032347516831068685, "phrase": "extra_overheads"}, {"score": 0.0031071175640144943, "phrase": "compiler-assisted_approach"}, {"score": 0.002815864555488112, "phrase": "sram_part"}, {"score": 0.002778317177178732, "phrase": "hybrid_cache"}, {"score": 0.002716844480081738, "phrase": "data_assignment_technique"}, {"score": 0.002621297299343551, "phrase": "preferred_caching"}, {"score": 0.0025632898741546556, "phrase": "migration_overhead"}, {"score": 0.0023861329619604666, "phrase": "experimental_results"}, {"score": 0.002322895056238477, "phrase": "proposed_techniques"}, {"score": 0.0021720199689914464, "phrase": "total_latency"}, {"score": 0.0021049977753042253, "phrase": "total_dynamic_energy"}], "paper_keywords": ["Design", " Performance", " Hybrid Cache", " Data Assignment", " Compiler"], "paper_abstract": "As technology scales down, energy consumption is becoming a big problem for traditional SRAM-based cache hierarchies. The emerging Spin-Torque Transfer RAM (STT-RAM) is a promising replacement for large on-chip cache due to its ultra low leakage power and high storage density. However, write operations on STT-RAM suffer from considerably higher energy consumption and longer latency than SRAM. Hybrid cache consisting of both SRAM and STT-RAM has been proposed recently for both performance and energy efficiency. Most management strategies for hybrid caches employ migration-based techniques to dynamically move write-intensive data from STT-RAM to SRAM. These techniques lead to extra overheads. In this paper, we propose a compiler-assisted approach, preferred caching, to significantly reduce the migration overhead by giving migration-intensive memory blocks the preference for the SRAM part of the hybrid cache. Furthermore, a data assignment technique is proposed to improve the efficiency of preferred caching. The reduction of migration overhead can in turn improve the performance and energy efficiency of STT-RAM based hybrid cache. The experimental results show that, with the proposed techniques, on average, the number of migrations is reduced by 21.3%, the total latency is reduced by 8.0% and the total dynamic energy is reduced by 10.8%.", "paper_title": "Compiler-Assisted Preferred Caching for Embedded Systems with STT-RAM based Hybrid Cache", "paper_id": "WOS:000307580000012"}