{"auto_keywords": [{"score": 0.03507995906078705, "phrase": "memory_cost"}, {"score": 0.009041473327504157, "phrase": "new_design"}, {"score": 0.00481495049065317, "phrase": "multi-stride_string_searching"}, {"score": 0.0047689174754929195, "phrase": "high-speed_content_inspection"}, {"score": 0.0046781613377273774, "phrase": "hardware-assisted_high-speed_string-matching_engine"}, {"score": 0.004089239912167375, "phrase": "high-speed_string"}, {"score": 0.004011366422179016, "phrase": "virus_scanning"}, {"score": 0.0038973170902076707, "phrase": "input_data"}, {"score": 0.0037683358267785435, "phrase": "memory-based_architecture"}, {"score": 0.003714368305523811, "phrase": "hardware_circuits"}, {"score": 0.003422781254306241, "phrase": "clamav_virus_database"}, {"score": 0.0032308006242867224, "phrase": "proposed_method"}, {"score": 0.0031845067058084583, "phrase": "improved_version"}, {"score": 0.0030642636185693054, "phrase": "demand_verification"}, {"score": 0.0030203487665054806, "phrase": "previous_design"}, {"score": 0.0026523079380037706, "phrase": "near-minimal_dynamic_perfect_hash_tables"}, {"score": 0.0024914105981393127, "phrase": "new_concept"}, {"score": 0.002340250894008014, "phrase": "bsic"}, {"score": 0.0023066880707738736, "phrase": "suffix_verification_unit"}, {"score": 0.002251813863195168, "phrase": "multiple_prefix_sampling_units"}, {"score": 0.002198242191529977, "phrase": "processing_rate"}], "paper_keywords": ["string-matching", " content inspection", " application specific hardware system", " dynamic perfect hash table"], "paper_abstract": "Design of hardware-assisted high-speed string-matching engine for content inspection has been an active research topic. Scalability, flexibility and speed are the three major challenges. In this paper, we shall present a high-speed string matching engine for virus scanning that can process 3 bytes of input data per cycle. Our design uses a memory-based architecture. The hardware circuits need not be reconfigured when the pattern set is updated. We evaluate our design using the ClamAV virus database with over 82K patterns, and the memory cost of our method is about 2.4 MB. The proposed method is an improved version of our previously published method called quick sampling with on demand verification. The previous design has a memory cost of 1.4 MB and a throughput of 1 byte per cycle. Two novel architectural features are incorporated into the new design, namely a new technique to construct near-minimal dynamic perfect hash tables using the bit-shuffle approach, and the introduction of a new concept called byte-shift invariant code (BSIC). With the BSIC, a suffix verification unit can be shared by multiple prefix sampling units. Hence, the processing rate of the new design can be speeded up to three times the processing rate of the old design, while the memory cost is only increased by 72%.", "paper_title": "Multi-Stride String Searching for High-Speed Content Inspection", "paper_id": "WOS:000309687800007"}