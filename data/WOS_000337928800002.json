{"auto_keywords": [{"score": 0.04648527967633241, "phrase": "linked_data"}, {"score": 0.010368301289417188, "phrase": "operational_semantics"}, {"score": 0.010279488172165719, "phrase": "proof_technique"}, {"score": 0.00481495049065317, "phrase": "read-write_linked_data"}, {"score": 0.004551647527068771, "phrase": "high_level_languages"}, {"score": 0.004358903464536199, "phrase": "raw_data"}, {"score": 0.004102639724186862, "phrase": "main_innovation"}, {"score": 0.004014800383343256, "phrase": "dereferenceable_uris"}, {"score": 0.003980191398041843, "phrase": "global_identifiers"}, {"score": 0.00374610869916551, "phrase": "significant_challenges"}, {"score": 0.003618558599449415, "phrase": "distributed_sources"}, {"score": 0.003480230347985338, "phrase": "essential_contribution"}, {"score": 0.0034353020860809404, "phrase": "application_domain"}, {"score": 0.003029722317983915, "phrase": "abstract_representation"}, {"score": 0.002990592465417758, "phrase": "high_level_language"}, {"score": 0.002754208576828914, "phrase": "concise_operational_semantics"}, {"score": 0.002718627370925435, "phrase": "natural_notion"}, {"score": 0.0026951616152303373, "phrase": "behavioural_equivalence"}, {"score": 0.0026718978608934077, "phrase": "contextual_equivalence"}, {"score": 0.0025808284847319528, "phrase": "bisimulation_proof_technique"}, {"score": 0.0022957232752482196, "phrase": "novel_combination"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Operational semantics", " Bisimulation", " Linked Data"], "paper_abstract": "The aim of this work is to verify an algebra for high level languages for reading and writing Linked Data. Linked Data is raw data published on the Web and interlinked using a collection of standards. The main innovation is simply to use dereferenceable URIs as global identifiers in data, rather than a key local to a dataset This introduces significant challenges for managing data that is pulled from distributed sources over the Web. An algebra is an essential contribution to this application domain, for rewriting programs that read and write Linked Data. To verify the algebra, a syntax, operational semantics and proof technique are introduced. The syntax provides an abstract representation for a high level language that concisely captures queries and updates over Linked Data. The behaviour of the language is defined using a concise operational semantics. The natural notion of behavioural equivalence, contextual equivalence, is shown to coincide with the bisimulation proof technique. Bisimulation is used to verify that the algebra preserves the operational semantics, hence rewrites of programs using the algebra do not change their operational meaning. A novel combination of techniques is used to establish the correctness of the proof technique itself. (C) 2013 Published by Elsevier B.V.", "paper_title": "A verified algebra for read-write Linked Data", "paper_id": "WOS:000337928800002"}