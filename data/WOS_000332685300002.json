{"auto_keywords": [{"score": 0.04972711494665694, "phrase": "web_applications"}, {"score": 0.015719716506582538, "phrase": "web_testing"}, {"score": 0.006785875819079934, "phrase": "web_application"}, {"score": 0.004726970265271088, "phrase": "key_assets"}, {"score": 0.004456044928556639, "phrase": "public_administration"}, {"score": 0.004048378919038729, "phrase": "traditional_software"}, {"score": 0.003974349782102708, "phrase": "dynamic_code_creation"}, {"score": 0.003858697684681798, "phrase": "specific_interaction_mode"}, {"score": 0.0037881238886444332, "phrase": "navigation_structure"}, {"score": 0.0035445401296650535, "phrase": "special_features"}, {"score": 0.003441352119167824, "phrase": "comprehensive_overview"}, {"score": 0.003292156638306418, "phrase": "automated_tools"}, {"score": 0.0031377955308198634, "phrase": "specific_web_testing_phase"}, {"score": 0.002925077525258983, "phrase": "navigation_model"}, {"score": 0.002777595758483679, "phrase": "starting_point"}, {"score": 0.0027571412070078703, "phrase": "test_case_derivation"}, {"score": 0.00266693888510356, "phrase": "input_generation"}, {"score": 0.002598821419664902, "phrase": "selected_navigation_path"}, {"score": 0.002570162055835289, "phrase": "appropriate_input_data"}, {"score": 0.0024860616730750158, "phrase": "test_execution"}, {"score": 0.0023694065215394593, "phrase": "test_cases"}, {"score": 0.0023088708688076666, "phrase": "last_part"}, {"score": 0.002192389791199368, "phrase": "rich_client_web_applications"}, {"score": 0.0021522261505574035, "phrase": "specific_approach"}, {"score": 0.0021049977753042253, "phrase": "case_derivation"}], "paper_keywords": [""], "paper_abstract": "Web applications have become key assets of our society, which depends on web applications for sectors like business, health-care, and public administration. Testing is the most widely used and effective approach to ensure quality and dependability of the software, including web applications. However, web applications are special as compared to traditional software, because they involve dynamic code creation and interpretation and because they implement a specific interaction mode, based on the navigation structure of the web application. Researchers have investigated approaches and techniques to automate web testing, dealing with the special features of web applications. This chapter contains a comprehensive overview of the research carried out in the last 10 years to support web testing with automated tools. We categorize the works available in the literature according to the specific web testing phase that they address. In particular, we first of all consider the works aiming at building a navigation model of the web application under test. In fact, such a model is often the starting point for test case derivation. Then, we consider the problem of input generation, because the traversal of a selected navigation path requires that appropriate input data are identified and submitted to the server during test execution. Metrics are introduced and used to assess the adequacy of the test cases constructed from the model. The last part of the chapter is devoted to very recent advancements in the area, focused on rich client web applications, which demand a specific approach to modeling and to test case derivation.", "paper_title": "Recent Advances in Web Testing", "paper_id": "WOS:000332685300002"}