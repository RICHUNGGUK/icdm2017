{"auto_keywords": [{"score": 0.025209507244004378, "phrase": "mbas_co-allocation_strategy"}, {"score": 0.00481495049065317, "phrase": "multiple_high_performance_computing_clusters"}, {"score": 0.00461575768501871, "phrase": "high_performance_computing_clusters"}, {"score": 0.004551199992546761, "phrase": "multi-process_jobs"}, {"score": 0.004508661664944657, "phrase": "multiple_connected_clusters"}, {"score": 0.00444559516711374, "phrase": "attractive_possibility"}, {"score": 0.004383406949799696, "phrase": "allocation_process"}, {"score": 0.003897742942358768, "phrase": "computer_resources"}, {"score": 0.003581620064675766, "phrase": "single_cluster"}, {"score": 0.0032756158688245, "phrase": "inter-cluster_communication_cost"}, {"score": 0.0031399038722901788, "phrase": "scalable_co-allocation_strategy"}, {"score": 0.002752513434446804, "phrase": "usable_inter-cluster_communication_links"}, {"score": 0.002552946390854313, "phrase": "dynamic_behavior"}, {"score": 0.002493592357827492, "phrase": "multiple_clusters"}, {"score": 0.002248366278757655, "phrase": "link_level_control"}, {"score": 0.0022273034991008326, "phrase": "chunk_size_control"}, {"score": 0.0022064376000055764, "phrase": "splitting_jobs"}, {"score": 0.0021249064184347658, "phrase": "user_satisfaction"}, {"score": 0.0021049977753042253, "phrase": "system_utilization"}], "paper_keywords": ["Resource management", " Job co-allocation", " Job scheduling", " HPC clusters", " Performance evaluation"], "paper_abstract": "To more effectively use a network of high performance computing clusters, allocating multi-process jobs across multiple connected clusters becomes an attractive possibility. This allocation process entails dividing the processes of a job among several clusters, which we refer to as co-allocation. Co-allocation offers the possibility of more efficient use of computer resources, reduced turn-around time and computations using numbers of processes larger than processes on any single cluster. In order to realize these possibilities, effective co-allocation, ultimately, depends on the inter-cluster communication cost. In this paper, we introduce a scalable co-allocation strategy called the Maximum Bandwidth Adjacent cluster Set (MBAS) strategy. The strategy makes use of two thresholds to control allocation: one to control the limit on bandwidth on usable inter-cluster communication links and another to control how jobs are split. A simulator that can simulate the dynamic behavior of jobs running across multiple clusters was developed and used to examine the performance of the MBAS co-allocation strategy. Our results indicate that by adjusting the thresholds for link level control and chunk size control in splitting jobs, the MBAS co-allocation strategy can significantly improve both user satisfaction and system utilization.", "paper_title": "Job co-allocation strategies for multiple high performance computing clusters", "paper_id": "WOS:000270169400006"}