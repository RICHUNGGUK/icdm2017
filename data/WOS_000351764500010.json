{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "triple_patterning_lithography"}, {"score": 0.03530867228130293, "phrase": "problem_size"}, {"score": 0.004749824776508639, "phrase": "minimum_feature_size"}, {"score": 0.004437115547184535, "phrase": "double_patterning_lithography"}, {"score": 0.004337502738649814, "phrase": "layout_decomposition"}, {"score": 0.004259418153299952, "phrase": "input_layout"}, {"score": 0.004015182362035361, "phrase": "crucial_design_step"}, {"score": 0.0038194503801108324, "phrase": "systematic_study"}, {"score": 0.0037848978618663684, "phrase": "triple_patterning_layout_decomposition_problem"}, {"score": 0.0036678920573611977, "phrase": "np"}, {"score": 0.0032282396745967504, "phrase": "graph_division_techniques"}, {"score": 0.0030847461428168614, "phrase": "integer_linear_programming"}, {"score": 0.0029610472910087176, "phrase": "large_layouts"}, {"score": 0.0028944757265206332, "phrase": "graph-division_techniques"}, {"score": 0.002868296316025865, "phrase": "ilp"}, {"score": 0.0028037753646260937, "phrase": "serious_runtime_overhead"}, {"score": 0.002753224894944965, "phrase": "better_trade-off"}, {"score": 0.0026427848602443293, "phrase": "novel_semidefinite_programming"}, {"score": 0.002548331088496964, "phrase": "mapping_process"}, {"score": 0.0024797072773840704, "phrase": "sdp_solutions"}, {"score": 0.0024460897937643032, "phrase": "final_decomposition_solutions"}, {"score": 0.002423931101340771, "phrase": "experimental_results"}, {"score": 0.0023802126605244438, "phrase": "graph_division"}, {"score": 0.0022847009758393405, "phrase": "sdp-based_algorithm"}, {"score": 0.0022537212268979507, "phrase": "great_speed-up"}, {"score": 0.002213065910356615, "phrase": "accelerated_ilp"}, {"score": 0.002133937537670314, "phrase": "stitch_number"}, {"score": 0.0021049977753042253, "phrase": "conflict_number"}], "paper_keywords": ["Graph division", " integer linear programming (ILP)", " layout decomposition", " semidefinite programming (SDP)", " triple patterning lithography (TPL)"], "paper_abstract": "As minimum feature size and pitch spacing further scale down, triple patterning lithography is a likely 193 nm extension along the paradigm of double patterning lithography for 14-nm technology node. Layout decomposition, which divides input layout into several masks to minimize the conflict and stitch numbers, is a crucial design step for double/triple patterning lithography. In this paper, we present a systematic study on triple patterning layout decomposition problem, which is shown to be NP-hard. Because of the NP-hardness, the runtime required to exactly solve it increases dramatically with the problem size. We first propose a set of graph division techniques to reduce the problem size. Then, we develop integer linear programming (ILP) to solve it. For large layouts, even with the graph-division techniques, ILP may still suffer from serious runtime overhead. To achieve better trade-off between runtime and performance, we present a novel semidefinite programming (SDP)-based algorithm. Followed by a mapping process, we can translate the SDP solutions into the final decomposition solutions. Experimental results show that the graph division can reduce runtime dramatically. In addition, SDP-based algorithm can achieve great speed-up even compared with accelerated ILP, with very comparable results in terms of the stitch number and the conflict number.", "paper_title": "Layout Decomposition for Triple Patterning Lithography", "paper_id": "WOS:000351764500010"}