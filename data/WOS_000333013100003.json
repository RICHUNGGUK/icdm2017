{"auto_keywords": [{"score": 0.03683148810790222, "phrase": "tct"}, {"score": 0.01571970438343417, "phrase": "test_cases"}, {"score": 0.004703671193348433, "phrase": "exploratory_and_test-case-based_software_testing"}, {"score": 0.004577076689777069, "phrase": "widely_practiced_verification"}, {"score": 0.0045415338200109345, "phrase": "validation_method"}, {"score": 0.0043509032299218955, "phrase": "test_automation"}, {"score": 0.004250302819248558, "phrase": "manual_testing"}, {"score": 0.004184526032558792, "phrase": "exploratory_testing"}, {"score": 0.00396218934254591, "phrase": "predesigned_test_cases"}, {"score": 0.0037662852047763112, "phrase": "detailed_test_cases"}, {"score": 0.0036791522245326514, "phrase": "replicated_experiment"}, {"score": 0.003580032420161922, "phrase": "perceived_differences"}, {"score": 0.0035245918797629804, "phrase": "test-case-based_testing"}, {"score": 0.00337650257503995, "phrase": "manual_functional_testing"}, {"score": 0.0033372020049592726, "phrase": "jedit_text_editor"}, {"score": 0.003234615195382533, "phrase": "original_study"}, {"score": 0.0031107911390188055, "phrase": "defect_detection_effectiveness"}, {"score": 0.002865929543375884, "phrase": "small_differences"}, {"score": 0.0028325548627901004, "phrase": "experimental_design"}, {"score": 0.0026923527275481804, "phrase": "tct_approach"}, {"score": 0.0026402908398883832, "phrase": "time_pressure"}, {"score": 0.002549096826249, "phrase": "distinctive_issues"}, {"score": 0.0024418934977061876, "phrase": "abstraction_levels"}, {"score": 0.0023686143341984916, "phrase": "et"}, {"score": 0.0022760856906838814, "phrase": "test_execution"}, {"score": 0.0021049977753042253, "phrase": "large_organizations"}], "paper_keywords": ["Software testing", " Manual testing", " Test cases", " Exploratory testing", " Experiment", " Effectiveness", " Efficiency"], "paper_abstract": "Manual software testing is a widely practiced verification and validation method that is unlikely to fade away despite the advances in test automation. In the domain of manual testing, many practitioners advocate exploratory testing (ET), i.e., creative, experience-based testing without predesigned test cases, and they claim that it is more efficient than testing with detailed test cases. This paper reports a replicated experiment comparing effectiveness, efficiency, and perceived differences between ET and test-case-based testing (TCT) using 51 students as subjects, who performed manual functional testing on the jEdit text editor. Our results confirm the findings of the original study: 1) there is no difference in the defect detection effectiveness between ET and TCT, 2) ET is more efficient by requiring less design effort, and 3) TCT produces more false-positive defect reports than ET. Based on the small differences in the experimental design, we also put forward a hypothesis that the effectiveness of the TCT approach would suffer more than ET from time pressure. We also found that both approaches had distinctive issues: in TCT, the problems were related to correct abstraction levels of test cases, and the problems in ET were related to test design and logging of the test execution and results. Finally, we recognize that TCT has other benefits over ET in managing and controlling testing in large organizations.", "paper_title": "Are test cases needed? Replicated comparison between exploratory and test-case-based software testing", "paper_id": "WOS:000333013100003"}