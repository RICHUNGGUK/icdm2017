{"auto_keywords": [{"score": 0.026884764617611284, "phrase": "tcp_reno"}, {"score": 0.01558196016340824, "phrase": "tcp"}, {"score": 0.013951078434809902, "phrase": "phase_effects"}, {"score": 0.012161402169993146, "phrase": "randomized_tcp"}, {"score": 0.010598841921788628, "phrase": "uniform_distribution"}, {"score": 0.00481495049065317, "phrase": "sending_times"}, {"score": 0.004563691742821759, "phrase": "serious_performance_problems"}, {"score": 0.0044430006374681285, "phrase": "higher_round_trip_times"}, {"score": 0.004118026552723285, "phrase": "throughput_degradations"}, {"score": 0.004063186599879217, "phrase": "wide_range"}, {"score": 0.0037658881407605445, "phrase": "tcp_sources"}, {"score": 0.0034437574674180365, "phrase": "successive_packet_transmissions"}, {"score": 0.003397866151093552, "phrase": "time_interval"}, {"score": 0.003293142761521425, "phrase": "zero_mean_random_number"}, {"score": 0.002644865209801606, "phrase": "large_number"}, {"score": 0.0025863375961196005, "phrase": "proposed_scheme"}, {"score": 0.002473129577319634, "phrase": "simple_simulations"}, {"score": 0.002241171326888997, "phrase": "binomial_schemes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["TCP", " flow synchronization", " fairness", " phase effects"], "paper_abstract": "Current implementations of TCP suffer from serious performance problems like unfairness to flows with higher round trip times (RTTs), synchronization of windows and phase effects in flows and correlated losses leading to throughput degradations under a wide range of scenarios. In this paper we show that by randomizing the packet sending times at TCP sources (called Randomized TCP) we can address a majority of these issues. Specifically, we propose to space successive packet transmissions with a time interval Delta = RTT(1 + x)/cwnd, where x is a zero mean random number drawn from an Uniform distribution. We find that an Uniform distribution on U[-1, 1] is optimal with respect to metrics like throughput, fairness, timeouts, losses and de-synchronization. We show that the scheme is better than Paced as well as TCP Reno in a large number of scenarios. The proposed scheme is also fair with TCP Reno. We show through simple simulations that Randomized TCP reduces phase effects and synchronization even when multiplexed with TCP Reno. Also, we extend randomization to other window based schemes like the binomial schemes and show that fairness to TCP Reno increases dramatically. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "On randomizing the sending times in TCP and other window based algorithms", "paper_id": "WOS:000234003900008"}