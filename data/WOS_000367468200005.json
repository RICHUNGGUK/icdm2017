{"auto_keywords": [{"score": 0.03173870024080406, "phrase": "lanczos"}, {"score": 0.00481495049065317, "phrase": "efficient_recurrences_and_synchronization-reducing_variants"}, {"score": 0.004653120760786245, "phrase": "lanczos_algorithm"}, {"score": 0.0043703658695579085, "phrase": "large_sparse_non-symmetric_matrix"}, {"score": 0.004104722208522451, "phrase": "building_block"}, {"score": 0.004058180509184539, "phrase": "biconjugate_gradient"}, {"score": 0.003725470458263889, "phrase": "large_sparse_non-symmetric_systems"}, {"score": 0.0034395119150793787, "phrase": "distributed-memory_computers"}, {"score": 0.0033811403330431897, "phrase": "huge_number"}, {"score": 0.0032860401904845522, "phrase": "synchronization_time"}, {"score": 0.0032302647179383915, "phrase": "computing_dot_products"}, {"score": 0.0031573626285069157, "phrase": "parallel_scalability"}, {"score": 0.003051073364818384, "phrase": "synchronization-reducing_variants"}, {"score": 0.0029148831519944358, "phrase": "bicg_and_qmr_methods"}, {"score": 0.002784755056588371, "phrase": "negative_performance_effects"}, {"score": 0.0027397945424407714, "phrase": "qmr"}, {"score": 0.0027374647587075935, "phrase": "so-called_s-step_algorithms"}, {"score": 0.0026152363154073707, "phrase": "joint_execution"}, {"score": 0.002570817338292482, "phrase": "time-consuming_matrix_operations"}, {"score": 0.002359759876402679, "phrase": "rigorous_derivation"}, {"score": 0.0022802596433757565, "phrase": "s-step_lanczos_algorithm"}, {"score": 0.002241517354570928, "phrase": "s-step_bicg"}, {"score": 0.0021413855297794946, "phrase": "parallel_performance"}, {"score": 0.0021049977753042253, "phrase": "new_s-step_versions"}], "paper_keywords": ["synchronization-reducing", " s-step Lanczos", " s-step BiCG", " s-step QMR", " efficient recurrences"], "paper_abstract": "The Lanczos algorithm is among the most frequently used iterative techniques for computing a few dominant eigenvalues of a large sparse non-symmetric matrix. At the same time, it serves as a building block within biconjugate gradient (BiCG) and quasi-minimal residual (QMR) methods for solving large sparse non-symmetric systems of linear equations. It is well known that, when implemented on distributed-memory computers with a huge number of processes, the synchronization time spent on computing dot products increasingly limits the parallel scalability. Therefore, we propose synchronization-reducing variants of the Lanczos, as well as BiCG and QMR methods, in an attempt to mitigate these negative performance effects. These so-called s-step algorithms are based on grouping dot products for joint execution and replacing time-consuming matrix operations by efficient vector recurrences. The purpose of this paper is to provide a rigorous derivation of the recurrences for the s-step Lanczos algorithm, introduce s-step BiCG and QMR variants, and compare the parallel performance of these new s-step versions with previous algorithms.", "paper_title": "THE NON-SYMMETRIC s-STEP LANCZOS ALGORITHM: DERIVATION OF EFFICIENT RECURRENCES AND SYNCHRONIZATION-REDUCING VARIANTS OF BICG AND QMR", "paper_id": "WOS:000367468200005"}