{"auto_keywords": [{"score": 0.0342305708340517, "phrase": "ippe_method"}, {"score": 0.014641000077659207, "phrase": "performance_parameters"}, {"score": 0.013635281741520885, "phrase": "estimation_time"}, {"score": 0.01187087138214365, "phrase": "fitting_function"}, {"score": 0.008504740877274541, "phrase": "compressed_row_storage"}, {"score": 0.00481495049065317, "phrase": "d-spline-based_incremental_performance_parameter_estimation_method"}, {"score": 0.004553265070135597, "phrase": "primary_aim"}, {"score": 0.004357627943575288, "phrase": "ordinary_mathematical_libraries"}, {"score": 0.004254467919664946, "phrase": "important_issue"}, {"score": 0.003927848423072668, "phrase": "incremental_performance_parameter_estimation_method"}, {"score": 0.003789137457228946, "phrase": "optimal_performance_parameters"}, {"score": 0.00374399358035391, "phrase": "suitable_sampling_points"}, {"score": 0.003669941438286456, "phrase": "computational_results"}, {"score": 0.0031528393611136704, "phrase": "scripting_language"}, {"score": 0.002957471572421436, "phrase": "mathematical_libraries"}, {"score": 0.0027964537059186893, "phrase": "runtime_phase_at"}, {"score": 0.002644179117033107, "phrase": "block_size"}, {"score": 0.0026126405272417783, "phrase": "sparse_matrix_structure"}, {"score": 0.0025101968585850474, "phrase": "performance_parameter"}, {"score": 0.0023079225317714815, "phrase": "runtime_phase"}, {"score": 0.0022531762659857507, "phrase": "obtained_optimal_value"}, {"score": 0.0022262909736042212, "phrase": "execution_time"}, {"score": 0.002199725773957207, "phrase": "mathematical_library"}, {"score": 0.0021049990292809962, "phrase": "bcrs"}], "paper_keywords": ["Automatic performance tuning", " fitting function", " SpMV", " performance parameter estimation", " mathematical library"], "paper_abstract": "In automatic performance tuning (AT), a primary aim is to optimize performance parameters that are suitable for certain computational environments in ordinary mathematical libraries. For AT, an important issue is to reduce the estimation time required for optimizing performance parameters. To reduce the estimation time, we previously proposed the Incremental Performance Parameter Estimation method (IPPE method). This method estimates optimal performance parameters by inserting suitable sampling points that are based on computational results for a fitting function. As the fitting function, we introduced d-Spline, which is highly adaptable and requires little estimation time. In this paper, we report the implementation of the IPPE method with ppOpen-AT, which is a scripting language (set of directives) with features that reduce the workload of the developers of mathematical libraries that have AT features. To confirm the effectiveness of the IPPE method for the runtime phase AT, we applied the method to sparse matrix-vector multiplication (SpMV), in which the block size of the sparse matrix structure blocked compressed row storage (BCRS) was used for the performance parameter. The results from the experiment show that the cost was negligibly small for AT using the IPPE method in the runtime phase. Moreover, using the obtained optimal value, the execution time for the mathematical library SpMV was reduced by 44% on comparing the compressed row storage and BCRS (block size 8).", "paper_title": "Implementation of d-Spline-based incremental performance parameter estimation method with ppOpen-AT", "paper_id": "WOS:000340647100005"}