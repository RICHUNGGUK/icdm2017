{"auto_keywords": [{"score": 0.04724226278800519, "phrase": "software_applications"}, {"score": 0.00481495049065317, "phrase": "software_design"}, {"score": 0.004657393640152439, "phrase": "hci_community"}, {"score": 0.004580550308652044, "phrase": "specific_features"}, {"score": 0.004054299982508618, "phrase": "straightforward_process"}, {"score": 0.004009555045206973, "phrase": "software_developers"}, {"score": 0.003628352506247126, "phrase": "usability_features"}, {"score": 0.0033945024593626675, "phrase": "usability_guidelines"}, {"score": 0.0033570147767493716, "phrase": "software_development"}, {"score": 0.0033015555065209865, "phrase": "software_engineers"}, {"score": 0.003265090934183249, "phrase": "particular_usability_features"}, {"score": 0.0030545815929619306, "phrase": "software_design_artifacts"}, {"score": 0.002857605453835429, "phrase": "proposed_design_artifacts"}, {"score": 0.0027031706928674092, "phrase": "software_development_process"}, {"score": 0.0026732973536990373, "phrase": "software_architecture"}, {"score": 0.0025008468316682036, "phrase": "academic_setting"}, {"score": 0.002473203873496859, "phrase": "preliminary_validation"}, {"score": 0.0023525345110929326, "phrase": "development_time"}, {"score": 0.002262756631083292, "phrase": "resulting_designs"}, {"score": 0.0021885300925245516, "phrase": "perceived_complexity"}, {"score": 0.0021049977753042253, "phrase": "developers'_perspective"}], "paper_keywords": ["Software usability", " software design", " software design patterns"], "paper_abstract": "Over the past two decades, the HCI community has proposed specific features that software applications should include to overcome some of the most common usability problems. However, incorporating such usability features into software applications may not be a straightforward process for software developers who have not been trained in usability (i.e., determining when, how, and why usability features should been considered). We have defined a set of usability guidelines for software development to help software engineers incorporate particular usability features into their applications. In this paper, we focus on the software design artifacts provided by the guidelines. We detail the structure of the proposed design artifacts and how they should be used according to the software development process and software architecture used in each application. We have tested our guidelines in an academic setting. Preliminary validation shows that the use of the guidelines reduces development time, improves the quality of the resulting designs, and significantly decreases the perceived complexity of the usability features from the developers' perspective.", "paper_title": "Usability through Software Design", "paper_id": "WOS:000326501200008"}