{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "interface_automata"}, {"score": 0.004676895436217523, "phrase": "compositional_specification_theory"}, {"score": 0.00451642066363115, "phrase": "component_model"}, {"score": 0.004438250823243621, "phrase": "allowed_sequences"}, {"score": 0.004336115760817672, "phrase": "output_interactions"}, {"score": 0.004187284711626886, "phrase": "trace-based_linear-time_refinement"}, {"score": 0.004020066537823032, "phrase": "weakest_preorder"}, {"score": 0.003770633265791941, "phrase": "classical_alternating_simulation"}, {"score": 0.0032786537599187125, "phrase": "refinement_relation"}, {"score": 0.003039445153076014, "phrase": "parallel_composition"}, {"score": 0.0029694040368299624, "phrase": "structural_composition"}, {"score": 0.0029009722548088306, "phrase": "logical_conjunction"}, {"score": 0.0028341130433482565, "phrase": "independent_development"}, {"score": 0.002642615537454746, "phrase": "incremental_synthesis"}, {"score": 0.002536926192232391, "phrase": "algebraic_properties"}, {"score": 0.00249293148301837, "phrase": "specification_theory"}, {"score": 0.0024496978447849835, "phrase": "refinement_preorders"}, {"score": 0.0022576249214220187, "phrase": "communication_mismatches"}, {"score": 0.002205560249972527, "phrase": "independent_and_incremental_component_development"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Component-based design", " Interfaces", " Specification theory", " Compositionality", " Refinement", " Substitutivity", " Synthesis"], "paper_abstract": "We formulate a compositional specification theory for interface automata, where a component model specifies the allowed sequences of input and output interactions with the environment. A trace-based linear-time refinement is provided, which is the weakest preorder preserving substitutivity of components, and is weaker than the classical alternating simulation defined on interface automata. Since our refinement allows a component to be refined by refusing to produce any output, we also define a refinement relation that guarantees safety and progress. The theory includes the operations of parallel composition to support the structural composition of components, logical conjunction and disjunction for independent development, hiding to support abstraction of interfaces, and quotient for incremental synthesis of components. Our component formulation highlights the algebraic properties of the specification theory for both refinement preorders, and is shown to be fully abstract with respect to observation of communication mismatches. Examples of independent and incremental component development are provided. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "An algebraic theory of interface automata", "paper_id": "WOS:000341551400007"}