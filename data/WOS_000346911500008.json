{"auto_keywords": [{"score": 0.04501851799576053, "phrase": "large_number"}, {"score": 0.00481495049065317, "phrase": "dynamic_constraint_satisfaction"}, {"score": 0.004773904938276846, "phrase": "space_reduction"}, {"score": 0.00473320761888448, "phrase": "smart_environments"}, {"score": 0.0045348429403481464, "phrase": "reasoning_mechanism"}, {"score": 0.00440093312826378, "phrase": "automated_smart_environments"}, {"score": 0.003988055287053139, "phrase": "straightforward_representation"}, {"score": 0.003886969534444835, "phrase": "csp"}, {"score": 0.0038207994186834015, "phrase": "great_number"}, {"score": 0.003788196352457501, "phrase": "excessive_calculations"}, {"score": 0.003537155405923517, "phrase": "dynamic_csp"}, {"score": 0.003447349911141396, "phrase": "unnecessary_recalculations"}, {"score": 0.0034179225740833055, "phrase": "new_events"}, {"score": 0.0033026956021014204, "phrase": "dependency_graph_data_structure"}, {"score": 0.00319134078848996, "phrase": "csp_search_space"}, {"score": 0.0031505544969981096, "phrase": "consecutive_sensor_event"}, {"score": 0.0028669153591624696, "phrase": "exact_reasons"}, {"score": 0.002842428606954139, "phrase": "system's_decisions"}, {"score": 0.0026882700311968025, "phrase": "partial_recalculation"}, {"score": 0.002665305036900055, "phrase": "affected_parts"}, {"score": 0.0026199603775129516, "phrase": "full_environment"}, {"score": 0.002467228805628948, "phrase": "living_lab"}, {"score": 0.0024461474613359994, "phrase": "real-time_responses"}, {"score": 0.0023942269247089277, "phrase": "additional_simulated_performance_experiments"}, {"score": 0.0023134312557290043, "phrase": "straightforward_csp_representation"}, {"score": 0.002178529882942255, "phrase": "noticeable_effect"}, {"score": 0.0021231452870210965, "phrase": "highly_clusterized_environments"}], "paper_keywords": ["Smart environments", " dynamic constraint satisfaction", " rule-based systems", " predicate logic"], "paper_abstract": "A scalable, reactive and easy to evolve reasoning mechanism is essential for the success of automated smart environments, augmented with a large number of sensors and actuators. While constraint satisfaction problem (CSP) model is applicable for modelling decision making in such environments, the straightforward representation of the model as a CSP leads to a great number of excessive calculations. In this paper, we propose a method of modelling the task as a Dynamic CSP in a way that avoids unnecessary recalculations with new events in the environment. We present a Dependency Graph data structure, which not only allows to reduce CSP search space for every consecutive sensor event by detecting only affected parts of the environment, but also allows to give enough information to users of the system to specify the exact reasons of system's decisions, even with a large number of constraints. We formally prove that partial recalculation of affected parts still keeps the full environment globally satisfied and globally optimal. The evaluation of the system in the living lab showed real-time responses for all events. Additional simulated performance experiments showed that the Dependency Graph approach consistently outperforms the straightforward CSP representation. The experiments also showed that the clusterization of the environment has a noticeable effect on the performance, with highly clusterized environments requiring less computations.", "paper_title": "Dynamic Constraint Satisfaction with Space Reduction in Smart Environments", "paper_id": "WOS:000346911500008"}