{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "data-parallel_tasks"}, {"score": 0.0047732596509542135, "phrase": "partially_reconfigurable_hybrid_processor_architectures"}, {"score": 0.004731928080086235, "phrase": "reconfigurable_hybrid_processor_systems"}, {"score": 0.004670597652149685, "phrase": "flexible_platform"}, {"score": 0.004610058444728656, "phrase": "data-parallel_applications"}, {"score": 0.004530552828603269, "phrase": "considerable_speedup"}, {"score": 0.004491313367627919, "phrase": "software_implementations"}, {"score": 0.004300133642951283, "phrase": "significant_deterrent"}, {"score": 0.00420760449108585, "phrase": "reconfigurable_hardware"}, {"score": 0.00417115038996633, "phrase": "partial_runtime_reconfiguration"}, {"score": 0.004063664475797303, "phrase": "reconfiguration_overhead"}, {"score": 0.003773870856027139, "phrase": "partial_reconfiguration"}, {"score": 0.003644714340300824, "phrase": "maximum_possible_speedup"}, {"score": 0.0035507457285983268, "phrase": "bus_speed"}, {"score": 0.0034441627435203804, "phrase": "proposed_approach"}, {"score": 0.0032974089700312423, "phrase": "nonzero_reconfiguration_overhead"}, {"score": 0.0031845067058084583, "phrase": "upper_limit"}, {"score": 0.003115908199991072, "phrase": "processing_units"}, {"score": 0.002880927789104712, "phrase": "minimum_processing_time"}, {"score": 0.002843519597398796, "phrase": "corresponding_load_distribution"}, {"score": 0.0027822459052173113, "phrase": "data_transfer"}, {"score": 0.002516917671182532, "phrase": "processing_time"}, {"score": 0.0024950747439601863, "phrase": "different_parameters"}, {"score": 0.0022472527731744974, "phrase": "xilinx_field-programmable_gate_arrays"}, {"score": 0.0021702292394814144, "phrase": "experimental_results"}, {"score": 0.0021420294823879292, "phrase": "hardware_prototype"}, {"score": 0.0021049977753042253, "phrase": "fpga_board"}], "paper_keywords": ["data-parallel tasks", " divisible load theory", " dynamically reconfigurable logic (DRL)", " hybrid processor architectures", " partial reconfiguration"], "paper_abstract": "Reconfigurable hybrid processor systems provide a flexible platform for mapping data-parallel applications, while providing considerable speedup over software implementations. However, the overhead for reconfiguration presents a significant deterrent in mapping applications onto reconfigurable hardware. Partial runtime reconfiguration is one approach to reduce the reconfiguration overhead. In this paper, we present a methodology to map data-parallel tasks onto hardware that supports partial reconfiguration. The aim is to obtain the maximum possible speedup, for a given reconfiguration time, bus speed, and computation speed. The proposed approach involves using multiple, identical but independent processing units in the reconfigurable hardware. Under nonzero reconfiguration overhead, we show that there exists an upper limit on the number of processing units that can be employed beyond which further reduction in execution time is not possible. We obtain solutions for the minimum processing time, the corresponding load distribution, and schedule for data transfer. To demonstrate the applicability of the analysis, we present the following: 1) various plots showing the variation of processing time with different parameters; 2) hardware simulations for two examples, viz., 1-D discrete wavelet transform and finite impulse response filter, targeted to Xilinx field-programmable gate arrays (FPGAs); and 3) experimental results for a hardware prototype implemented on a FPGA board.", "paper_title": "Mapping data-parallel tasks onto partially reconfigurable hybrid processor architectures", "paper_id": "WOS:000241611200008"}