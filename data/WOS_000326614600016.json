{"auto_keywords": [{"score": 0.04710194427159924, "phrase": "hardware_resources"}, {"score": 0.004780807390837338, "phrase": "vlsi"}, {"score": 0.004729977262447766, "phrase": "projective_space_lattices"}, {"score": 0.004580769304731227, "phrase": "vlsi_architectures"}, {"score": 0.004342430078306461, "phrase": "projective_geometry"}, {"score": 0.003916098498242888, "phrase": "coding_theory"}, {"score": 0.00388828234270598, "phrase": "matrix_computations"}, {"score": 0.0038606630003037864, "phrase": "almost_all_these_applications"}, {"score": 0.0036727235025069828, "phrase": "parallel_processing"}, {"score": 0.0035189057079817285, "phrase": "important_engineering_objective"}, {"score": 0.003265012781840765, "phrase": "data_flow_graph"}, {"score": 0.0031845067058084583, "phrase": "pg_bipartite_graph"}, {"score": 0.003072918736387408, "phrase": "physical_elements_nodes"}, {"score": 0.0029441472095672397, "phrase": "folding_scheme"}, {"score": 0.002912803994461996, "phrase": "best_possible_throughput"}, {"score": 0.0026077803487003, "phrase": "throughput_loss"}, {"score": 0.002525347599743456, "phrase": "multi-tier_pipelining_strategy"}, {"score": 0.0024022553322977165, "phrase": "automatic_generation"}, {"score": 0.002385166298265828, "phrase": "rtl_models"}, {"score": 0.0023180144105895257, "phrase": "specific_high-performance_design"}, {"score": 0.0022933216359142736, "phrase": "low-density_parity_check"}, {"score": 0.002150580119047236, "phrase": "patent_pending"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Design methodology", " Application-specific scheduling", " Semi-parallel architecture"], "paper_abstract": "Semi-parallel, or folded, VLSI architectures are used whenever hardware resources need to be saved. Most recent applications that are based on Projective Geometry (PG) based balanced bipartite graphs also fall in this category. Many of these applications are actively being researched upon, especially in the area of coding theory and matrix computations. Almost all these applications need bipartite graphs of the order of tens of thousands in practice, whose nodes represent parallel processing. To reduce its implementation cost, reducing amount of hardware resources is an important engineering objective. In this paper, we provide a high-level, top-down design methodology to design optimal semi-parallel architectures for applications, whose Data Flow Graph (DFG) is based on PG bipartite graph. Unlike many other folding schemes, the topology of connections between physical elements nodes does not change at runtime in this methodology. Hence the folding scheme achieves the best possible throughput, in lack of any overhead of shuffling data across memories while scheduling another computation on the same processing unit. Another advantage is the ease of implementation. To lessen the throughput loss due to folding, we also incorporate a multi-tier pipelining strategy in the design methodology. A C++-based synthesis tool has been developed and tested for automatic generation of RTL models, and is publicly available. A specific high-performance design of a low-density parity check (LDPC) decoder based on this methodology was worked out in past, and has been patent pending. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A design methodology for optimally folded, pipelined architectures in VLSI applications using projective space lattices", "paper_id": "WOS:000326614600016"}