{"auto_keywords": [{"score": 0.03177904419579679, "phrase": "procedural_models"}, {"score": 0.00481495049065317, "phrase": "procedural_methods"}, {"score": 0.004668059458774745, "phrase": "vast_variety"}, {"score": 0.004636027593561925, "phrase": "computer_graphics_models"}, {"score": 0.004417848254181138, "phrase": "low_predictability"}, {"score": 0.004312622975366676, "phrase": "classical_procedural_modeling_pipeline"}, {"score": 0.004123781267600542, "phrase": "procedural_system"}, {"score": 0.0039026293611597166, "phrase": "system_definition"}, {"score": 0.003822778117250714, "phrase": "desired_output"}, {"score": 0.003757480190200645, "phrase": "procedural_modeling"}, {"score": 0.0036553070575015344, "phrase": "high_level"}, {"score": 0.0036301992752948956, "phrase": "top-down_control"}, {"score": 0.003555902292752528, "phrase": "smaller_building_blocks"}, {"score": 0.0032065418360603293, "phrase": "specific_procedural_model"}, {"score": 0.002931569771634119, "phrase": "entire_model"}, {"score": 0.0026893753781434618, "phrase": "modeling_process"}, {"score": 0.0026161698049580804, "phrase": "described_elements"}, {"score": 0.0025537472239953807, "phrase": "high-level_description"}, {"score": 0.0024842242921857705, "phrase": "low-level_description"}, {"score": 0.0024501740852758505, "phrase": "procedural_rules"}, {"score": 0.0023670716500937667, "phrase": "new_complex_forms"}, {"score": 0.0023426936553484546, "phrase": "easy_and_intuitive_way"}, {"score": 0.002294686545883412, "phrase": "procedural_structures"}, {"score": 0.00226322835801988, "phrase": "ornamental_pattern"}, {"score": 0.0022399174232611853, "phrase": "street_layout"}, {"score": 0.0021342613107011624, "phrase": "interactive_examples"}, {"score": 0.0021195791482462004, "phrase": "quick_and_intuitive_editing"}, {"score": 0.0021049977753042253, "phrase": "physics-based_mass-spring_system"}], "paper_keywords": [""], "paper_abstract": "Procedural methods present one of the most powerful techniques for authoring a vast variety of computer graphics models. However, their massive applicability is hindered by the lack of control and a low predictability of the results. In the classical procedural modeling pipeline, the user usually defines a set of rules, executes the procedural system, and by examining the results attempts to infer what should be changed in the system definition in order to achieve the desired output. We present guided procedural modeling, a new approach that allows a high level of top-down control by breaking the system into smaller building blocks that communicate. In our work we generalize the concept of the environment. The user creates a set of guides. Each guide defines a region in which a specific procedural model operates. These guides are connected by a set of links that serve for message passing between the procedural models attached to each guide. The entire model consists of a set of guides with procedural models, a graph representing their connection, and the method in which the guides interact. The modeling process is performed by modifying each of the described elements. The user can control the high-level description by editing the guides or manipulate the low-level description by changing the procedural rules. Changing the connectivity allows the user to create new complex forms in an easy and intuitive way. We show several examples of procedural structures, including an ornamental pattern, a street layout, a bridge, and a model of trees. We also demonstrate interactive examples for quick and intuitive editing using physics-based mass-spring system.", "paper_title": "Guided Procedural Modeling", "paper_id": "WOS:000289996100010"}