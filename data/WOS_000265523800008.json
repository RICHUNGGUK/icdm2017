{"auto_keywords": [{"score": 0.048019249999775485, "phrase": "smodels"}, {"score": 0.014727079776782132, "phrase": "cmodels"}, {"score": 0.013208237461933161, "phrase": "dlv"}, {"score": 0.012923519137507035, "phrase": "search_trees"}, {"score": 0.011538003054977207, "phrase": "sat-based_systems"}, {"score": 0.010254564032044293, "phrase": "native_procedures"}, {"score": 0.00440976345264104, "phrase": "stable_model_semantics"}, {"score": 0.004294962474996283, "phrase": "native_asp_systems"}, {"score": 0.004183137595671171, "phrase": "sat-based_system"}, {"score": 0.003633927813203731, "phrase": "tight_logic_programs"}, {"score": 0.0033277936960179892, "phrase": "asp_procedures"}, {"score": 0.003226834737003501, "phrase": "nontight_programs"}, {"score": 0.00304737045343781, "phrase": "computational_advantages"}, {"score": 0.0028526276660691525, "phrase": "reported_solution"}, {"score": 0.002705808393126695, "phrase": "stability_check"}, {"score": 0.0025665261770229757, "phrase": "sat-based_procedures"}, {"score": 0.002499590390751339, "phrase": "similar_advantage"}, {"score": 0.0023918783117166326, "phrase": "\"well-founded\"_operator"}, {"score": 0.0023090525096074264, "phrase": "negative_inferences"}], "paper_keywords": ["Answer set solvers", " Answer set programming", " Search trees"], "paper_abstract": "In this paper, we study the relation among Answer Set Programming (ASP) systems from a computational point of view. We consider SMODELS, DLV, and CMODELS ASP systems based on stable model semantics, the first two being native ASP systems and the last being a SAT-based system. We first show that SMODELS, DLV, and CMODELS explore search trees with the same branching nodes (assuming, of course, a same branching heuristic) on the class of tight logic programs. Leveraging on the fact that SAT-based systems rely on the deeply studied Davis-Logemann-Loveland (DLL) algorithm, we derive new complexity results for the ASP procedures. We also show that on nontight programs the SAT-based systems are computationally different from native procedures, and the latter have computational advantages. Moreover, we show that native procedures can guarantee the \"correctness\" of a reported solution when reaching the leaves of the search trees (i.e., no stability check is needed), while this is not the case for SAT-based procedures on nontight programs. A similar advantage holds for DLV in comparison with SMODELS if the \"well-founded\" operator is disabled and only Fitting's operator is used for negative inferences. We finally study the \"cost\" of achieving such advantages and comment on to what extent the results presented extend to other systems.", "paper_title": "On the relation among answer set solvers", "paper_id": "WOS:000265523800008"}