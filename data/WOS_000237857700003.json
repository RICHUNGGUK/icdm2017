{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "memory_and_fuzzy_rules"}, {"score": 0.004754447398742591, "phrase": "co-operative_multi-thread_strategy"}, {"score": 0.004539005582217309, "phrase": "co-operative_mufti-thread_search-based_optimization_strategy"}, {"score": 0.004242868712089958, "phrase": "different_settings"}, {"score": 0.004067635935640407, "phrase": "centralized_co-ordinator"}, {"score": 0.003802135020791801, "phrase": "individual_threads"}, {"score": 0.0037543106253910313, "phrase": "obtained_solutions"}, {"score": 0.0035389348527719404, "phrase": "system_behavior"}, {"score": 0.0032250961348210473, "phrase": "independent_search_strategy"}, {"score": 0.0031845067058084613, "phrase": "sequential_algorithm"}, {"score": 0.003091767402370757, "phrase": "co-operative_scheme"}, {"score": 0.002770273247998903, "phrase": "balanced_set"}, {"score": 0.002503187934017557, "phrase": "best_combination"}, {"score": 0.0021682027434117095, "phrase": "premature_convergence"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["metaheuristics", " optimization", " fuzzy sets and systems", " parallelism"], "paper_abstract": "In this article, we analyze a co-operative mufti-thread search-based optimization strategy, where each solver thread represents a different optimization algorithm (or the same one with different settings), and they are all controlled by a centralized co-ordinator. We also propose the use of memory to keep track of both the state of the individual threads and the obtained solutions. Based on this memory, a very simple fuzzy rule base is used to control the system behavior. We also present the results of three computational experiments. The first of these checks the strategy by comparing it with an independent search strategy and a sequential algorithm, and the superiority of the co-operative scheme is confirmed. The second analyzes how definition of the threads affects the quality of the results, and the importance of there being a balanced set between intensification and diversification is corroborated. The third explores the use of memory with two different fuzzy rules, and the results indicate that the best combination is to use memory together with two rules (solver dependent and solver independent ones) (although this combination should not be activated at the beginning of the search in order to avoid premature convergence). (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Using memory and fuzzy rules in a co-operative multi-thread strategy for optimization", "paper_id": "WOS:000237857700003"}