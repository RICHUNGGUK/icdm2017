{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "uncertain_data"}, {"score": 0.004732215871738028, "phrase": "multicore_architectures"}, {"score": 0.004264697351852424, "phrase": "real-world_data"}, {"score": 0.00402514392911723, "phrase": "new_and_important_query"}, {"score": 0.003887894704361635, "phrase": "uncertain_database"}, {"score": 0.0035442655396704724, "phrase": "l_uncertain_tuples"}, {"score": 0.0034233569308012982, "phrase": "score_range_constraint"}, {"score": 0.0032496585171039797, "phrase": "maximum_top-k_probabilities"}, {"score": 0.003138768436081888, "phrase": "user-specified_probability_threshold_q."}, {"score": 0.003031650815900696, "phrase": "utr_query_answer"}, {"score": 0.002911278281894321, "phrase": "effective_pruning_rules"}, {"score": 0.0028446460307503343, "phrase": "utr_query_space"}, {"score": 0.00273167822885383, "phrase": "efficient_utr_query_procedure"}, {"score": 0.002518989593177879, "phrase": "utr_query"}, {"score": 0.002141898874982106, "phrase": "utr_query_procedure"}, {"score": 0.0021049977753042253, "phrase": "putr_query_procedure"}], "paper_keywords": ["Uncertain data", " Top-k query", " Range query", " Parallel optimization"], "paper_abstract": "Query processing over uncertain data is very important in many applications due to the existence of uncertainty in real-world data. In this paper, we first elaborate a new and important query in the context of an uncertain database, namely uncertain top-(k,l) range (UTR) query, which retrieves l uncertain tuples that are expected to meet score range constraint [CR1, CR2] and have the maximum top-k probabilities but no less than a user-specified probability threshold q. In order to enable the UTR query answer faster, we put forward some effective pruning rules to reduce the UTR query space, which are integrated into an efficient UTR query procedure. What's more, to improve the efficiency and effectiveness of the UTR query, a parallel UTR (PUTR) query procedure is presented. Extensive experiments have verified the efficiency and effectiveness of our proposed algorithms. It is worth to notice that, comparing to the UTR query procedure, the PUTR query procedure performs much more efficiently and effectively.", "paper_title": "Efficient top-(k,l) range query processing for uncertain data based on multicore architectures", "paper_id": "WOS:000360554400004"}