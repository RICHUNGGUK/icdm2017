{"auto_keywords": [{"score": 0.038315532080181534, "phrase": "final_code"}, {"score": 0.00481495049065317, "phrase": "raise_applicative_specifications"}, {"score": 0.004558414405811025, "phrase": "crucial_aspect"}, {"score": 0.004513255056769647, "phrase": "software_engineering"}, {"score": 0.0044685410845412745, "phrase": "model_checking"}, {"score": 0.004402295697276237, "phrase": "almost_fully_automatic_way"}, {"score": 0.004209369306023422, "phrase": "scalability_problems"}, {"score": 0.0041469500929423595, "phrase": "model_checking_technique"}, {"score": 0.003945467978172845, "phrase": "early_stages"}, {"score": 0.0038869467872381957, "phrase": "development_process"}, {"score": 0.003397683082821229, "phrase": "implementation_level"}, {"score": 0.003281186608301359, "phrase": "original_specification"}, {"score": 0.0031372369299648203, "phrase": "main_issues"}, {"score": 0.003014576010931602, "phrase": "raise_specification_language"}, {"score": 0.0029846693157066524, "phrase": "rsl"}, {"score": 0.0029111767710750117, "phrase": "semantic_foundations"}, {"score": 0.0026612444314342023, "phrase": "raise_confidence_conditions"}, {"score": 0.0023028105026714533, "phrase": "described_approach"}, {"score": 0.002136747803494932, "phrase": "digital_multiplexed_radio_telephone_system"}, {"score": 0.0021049977753042253, "phrase": "mondex"}], "paper_keywords": ["RAISE", " model checking", " applicative specifications"], "paper_abstract": "Ensuring the correctness of a given software component has become a crucial aspect in software engineering and model checking provides an almost fully automatic way of achieving this goal. Due to the scalability problems of the model checking technique, it has become popular to apply it at early stages in the development process, when the size of the model is much smaller than the final code. Properties proved in this way can be shown to hold at the implementation level provided that the final code refines the original specification. In this paper we focus on the main issues for adding model checking functionality to the RAISE specification language (RSL) and present the semantic foundations of our current approach for doing so. We also describe a way to use model checking to verify RAISE confidence conditions, ensuring the soundness and completeness of the results checked in this way. We then present the most interesting details of the implementation of a tool that follows the described approach. Finally, we illustrate the application of the technique with two case studies: a Digital Multiplexed Radio Telephone System and the Mondex electronic purse.", "paper_title": "Model checking RAISE applicative specifications", "paper_id": "WOS:000318568700003"}