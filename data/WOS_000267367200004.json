{"auto_keywords": [{"score": 0.03923307184680597, "phrase": "new_instructions"}, {"score": 0.0373104412396934, "phrase": "parallel_computations"}, {"score": 0.03628177773140317, "phrase": "efficient_cache_use"}, {"score": 0.00481495049065317, "phrase": "video_processing_applications_using_specialized_instruction_set"}, {"score": 0.004492406361795448, "phrase": "application-specific_instruction"}, {"score": 0.004389745162172933, "phrase": "configurable_processor"}, {"score": 0.004314285113050873, "phrase": "motion-compensated_frame_rate_conversion"}, {"score": 0.004095567486538121, "phrase": "block_motion_estimation"}, {"score": 0.003503497128638102, "phrase": "data_reuse"}, {"score": 0.0033257460346754687, "phrase": "concrete_examples"}, {"score": 0.0028446460307503343, "phrase": "full_search"}, {"score": 0.002715917907462775, "phrase": "bma"}, {"score": 0.002461313735611462, "phrase": "obtained_acceleration_factors"}, {"score": 0.002391067964886602, "phrase": "mc-frc_algorithm"}, {"score": 0.002349884235026956, "phrase": "fs_algorithm"}, {"score": 0.0022828113789751694, "phrase": "odfs_algorithm"}], "paper_keywords": ["ASIP", " Video processing", " Acceleration", " Data reuse"], "paper_abstract": "This paper describes an application-specific instruction set for a configurable processor to accelerate motion-compensated frame rate conversion (MC-FRC) algorithms based on block motion estimation (BME). The paper shows that the key to achieve very high performance when creating new instructions is to leverage, at the same time, parallel computations, data reuse, and efficient cache use. This is supported by concrete examples that demonstrate how it can be done in the case of the two algorithms considered. The new instructions are used to implement two BME algorithms: one implements the full search (FS) block matching algorithm (BMA), while the other implements the One-Dimensional Full Search (ODFS) BMA. The obtained acceleration factors exceed one hundred for the MC-FRC algorithm embedding the FS algorithm and twenty for the ODFS algorithm. The results show that getting such global acceleration is the consequence of combining parallel computations, data reuse, and efficient cache use, not of only one of them.", "paper_title": "High Acceleration for Video Processing Applications Using Specialized Instruction Set Based on Parallelism and Data Reuse", "paper_id": "WOS:000267367200004"}