{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_product_line_engineering"}, {"score": 0.0045122922461952805, "phrase": "tailored_products"}, {"score": 0.004329630571352367, "phrase": "common_components"}, {"score": 0.00420368356873615, "phrase": "planned_manner"}, {"score": 0.004154332348800334, "phrase": "product_lines"}, {"score": 0.003802135020791801, "phrase": "software_engineering"}, {"score": 0.003735349093835257, "phrase": "software_product_lines"}, {"score": 0.0036914757355166966, "phrase": "productivity_gains"}, {"score": 0.003562912424153324, "phrase": "development_process"}, {"score": 0.0033190180867511605, "phrase": "vast_number"}, {"score": 0.0032033846797483475, "phrase": "software_products"}, {"score": 0.0030554300179552415, "phrase": "software_product_line"}, {"score": 0.002931569771634119, "phrase": "redundant_testing"}, {"score": 0.0028800314406626022, "phrase": "testing_challenges"}, {"score": 0.0028127163745564777, "phrase": "regression_testing"}, {"score": 0.0027796495180095657, "phrase": "one-off_software_development"}, {"score": 0.00266693888510356, "phrase": "parallel_variants"}, {"score": 0.0026355812883224203, "phrase": "ongoing_research"}, {"score": 0.0025587867729949037, "phrase": "software_product_line_test_selection"}, {"score": 0.002259883463607508, "phrase": "visualization_approach"}, {"score": 0.0022201273900989416, "phrase": "test_managers"}, {"score": 0.0021049977753042253, "phrase": "test_resources"}], "paper_keywords": [""], "paper_abstract": "Software product line engineering is an approach to cost-efficiently derive tailored products to markets and customers, utilizing common components and services in a planned manner. Product lines have been applied to other engineering fields for decades, while being quite recently introduced in software engineering. For software product lines, productivity gains are mostly related to the development process. Especially, software product line testing faces challenges in the vast number of versions and variants of software products to be tested, originating from a software product line, and consequently the risk for redundant testing. The testing challenges resemble those of regression testing in one-off software development, although adding the complexity of parallel variants. Ongoing research provide some support for software product line test selection, although they are too small-scale and require more formalism than generally available in practice. We propose a visualization approach to help test managers improve communication about testing in order to utilize test resources efficiently.", "paper_title": "Regression Testing in Software Product Line Engineering", "paper_id": "WOS:000309842800007"}