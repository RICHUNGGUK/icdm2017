{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "minizinc_challenge"}, {"score": 0.02246846748295754, "phrase": "different_solvers"}, {"score": 0.004686273962141953, "phrase": "minizinc"}, {"score": 0.004262273304740847, "phrase": "extended_discussion"}, {"score": 0.0038242899532391914, "phrase": "standard_modelling_language"}, {"score": 0.003525493807130663, "phrase": "challenging_problem"}, {"score": 0.0031629800646754474, "phrase": "good_attempt"}, {"score": 0.0027616550517346066, "phrase": "potential_global_constraints"}, {"score": 0.00237861522566195, "phrase": "standard_input_language"}], "paper_keywords": ["Comparing solvers", " Modelling languages", " Search"], "paper_abstract": "MiniZinc arose as a response to the extended discussion at CP2006 of the need for a standard modelling language for CP. This is a challenging problem, and we believe MiniZinc makes a good attempt to handle the most obvious obstacle: there are hundreds of potential global constraints, most handled by few or no systems. A standard input language for solvers gives us the capability to compare different solvers. Hence, every year since 2008 we have run the MiniZinc Challenge comparing different solvers that support MiniZinc. In this report we discuss the philosophy behind the challenge, why we do it, how we do it, and why we do it that way.", "paper_title": "Philosophy of the MiniZinc challenge", "paper_id": "WOS:000278347700001"}