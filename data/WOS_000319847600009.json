{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "scientific_workflow"}, {"score": 0.049568154654955704, "phrase": "non-dedicated_heterogeneous_multicluster_platform"}, {"score": 0.039108224572764534, "phrase": "workflow_execution"}, {"score": 0.030147208882915975, "phrase": "mheft-rsv"}, {"score": 0.029833584253148103, "phrase": "mheft-rsv-bd"}, {"score": 0.004539005582217309, "phrase": "parallel_task_graphs"}, {"score": 0.004301834610818624, "phrase": "data-parallel_tasks"}, {"score": 0.004233119608341877, "phrase": "data_parallelism"}, {"score": 0.004077005481951783, "phrase": "higher_performance"}, {"score": 0.003990385737207714, "phrase": "workflow_tasks"}, {"score": 0.0035648266669315943, "phrase": "multicluster_platform"}, {"score": 0.0035078427258024613, "phrase": "challenging_task"}, {"score": 0.002985631781749091, "phrase": "effective_workflow_task_mapping"}, {"score": 0.0027841357057119317, "phrase": "heuristic_algorithms"}, {"score": 0.0027395968397212053, "phrase": "exact_branch-and-cut_scheduling_algorithm"}, {"score": 0.0026384167183586015, "phrase": "intertask_precedence_and_resource_constraints"}, {"score": 0.0025273383208209922, "phrase": "feasible_schedule"}, {"score": 0.0025003054002226965, "phrase": "minimized_makespan"}, {"score": 0.002473560912156024, "phrase": "detailed_simulation_experiments"}, {"score": 0.0023950275815082297, "phrase": "exact_branch-and-cut_algorithm"}, {"score": 0.0023314867226678555, "phrase": "small_and_medium_size_workflows"}, {"score": 0.0022453451864218477, "phrase": "better_tradeoff"}, {"score": 0.0021975548867457606, "phrase": "computation_time"}, {"score": 0.002174041708084857, "phrase": "large_scientific_workflows"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Multicluster", " Non-dedicated", " Scientific workflow", " Scheduling", " Branch-and-cut"], "paper_abstract": "Many scientific workflows can be structured as Parallel Task Graphs (PTGs), that is, graphs of data-parallel tasks. Adding data parallelism to a workflow provides opportunities for higher performance and scalability. Workflow tasks are data-parallel and moldable, and clusters are not only heterogeneous but also non-dedicated for workflow execution. Therefore, scheduling such scientific workflow in a multicluster platform becomes a challenging task. To address this problem, we study the scheduling of scientific workflow in a non-dedicated heterogeneous multicluster platform aimed at minimizing the makespan for workflow execution. In this paper, three scheduling algorithms for effective workflow task mapping and resource allocation are proposed, among them MHEFT-RSV and MHEFT-RSV-BD are heuristic algorithms. An exact branch-and-cut scheduling algorithm is implemented, which exploits the intertask precedence and resource constraints thereby accelerating the process of obtaining a feasible schedule with minimized makespan. Detailed simulation experiments show that on average the exact branch-and-cut algorithm obtains shorter makespan for small and medium size workflows, while MHEFT-RSV and MHEFT-RSV-BD achieves better tradeoff between makespan and computation time for large scientific workflows. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Scheduling of scientific workflow in non-dedicated heterogeneous multicluster platform", "paper_id": "WOS:000319847600009"}