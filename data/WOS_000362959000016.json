{"auto_keywords": [{"score": 0.02959165658944082, "phrase": "token_stream"}, {"score": 0.00481495049065317, "phrase": "hardware_accelerator"}, {"score": 0.004750873844061641, "phrase": "multi-segment_virus_patterns"}, {"score": 0.00470862827326028, "phrase": "multi-segment_pattern"}, {"score": 0.004645959941491617, "phrase": "common_virus_structure"}, {"score": 0.004482873744893272, "phrase": "clamav_virus_database_version"}, {"score": 0.0037490909410974166, "phrase": "large_number"}, {"score": 0.003474694300991964, "phrase": "adjacent_segments"}, {"score": 0.0034283921404628975, "phrase": "overlapping_bytes"}, {"score": 0.003382704886584695, "phrase": "aforementioned_properties"}, {"score": 0.0033525843225012918, "phrase": "great_difficulties"}, {"score": 0.0033079039414389833, "phrase": "conventional_detection_methods"}, {"score": 0.003220315882881027, "phrase": "virus_signature"}, {"score": 0.003177392642813126, "phrase": "byte_sequence"}, {"score": 0.0028284924551705516, "phrase": "input_byte_stream"}, {"score": 0.0027535633837592597, "phrase": "detection_engine"}, {"score": 0.0026330549554033876, "phrase": "virus_signatures"}, {"score": 0.002473129577319634, "phrase": "field_programmable_gate_array"}, {"score": 0.0024075916292945715, "phrase": "on-chip_memory"}, {"score": 0.0022311596751824416, "phrase": "processing_architecture"}, {"score": 0.002105063604295808, "phrase": "fpga"}], "paper_keywords": ["virus detection", " string matching", " regular expression matching", " hardware detection engine", " memory-based architecture"], "paper_abstract": "Multi-segment pattern is a common virus structure, and there are 2229 multi-segment patterns in the ClamAV virus database version 54. We observe that (i) the pattern set contains over 100 nondistinctive short segments, e.g. 2 bytes of zero; (ii) some of the 2-byte segments can appear many times in one or more patterns; (iii) some patterns contain a large number of 2-byte segments; (iv) many short segments are substrings/suffixes of other longer segments; and (v) adjacent segments may contain overlapping bytes. The aforementioned properties pose great difficulties to the conventional detection methods. Instead of viewing the virus signature as a byte sequence, we regard the pattern to be composed of a sequence of tokens, where each token corresponds to a segment. We transform the input byte stream into a token stream. The detection engine will then process the token stream to determine if any virus signatures can be found. Our detection method for the 2229 multi-segment patterns can be implemented on a field programmable gate array (FPGA) using 290 KB on-chip memory. The device can operate at 170 MHz and it can process 1 byte per cycle. The processing architecture is memory based. When the pattern set is updated, the FPGA need not be reconfigured.", "paper_title": "Hardware Accelerator to Detect Multi-Segment Virus Patterns", "paper_id": "WOS:000362959000016"}