{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "pt-scotch"}, {"score": 0.046988061430028864, "phrase": "large_graphs"}, {"score": 0.004657185361669812, "phrase": "efficient_parallel_graph_ordering"}, {"score": 0.004565007074039171, "phrase": "parallel_ordering"}, {"score": 0.004415395176043526, "phrase": "difficult_problem"}, {"score": 0.003916098498242888, "phrase": "high_quality_orderings"}, {"score": 0.0038385317554884713, "phrase": "nested_dissection_algorithm"}, {"score": 0.00378767277402891, "phrase": "efficient_graph"}, {"score": 0.003163326114997034, "phrase": "pt-scotch_software_package"}, {"score": 0.0026771333996253783, "phrase": "state-of-the-art_sequential_algorithms"}, {"score": 0.002572001496778222, "phrase": "classical_nested_dissection_approach"}, {"score": 0.002438203996977464, "phrase": "parallel_graph_bipartitioning_problem"}, {"score": 0.0022806798371116698, "phrase": "better_orderings"}, {"score": 0.0022504161344242797, "phrase": "parmetis"}, {"score": 0.002220551141101661, "phrase": "large_numbers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["parallel graph ordering", " parallel nested dissection", " distributed-memory computer", " multi-threading"], "paper_abstract": "The parallel ordering of large graphs is a difficult problem, because on the one hand minimum degree algorithms do not parallelize well, and on the other hand the obtainment of high quality orderings with the nested dissection algorithm requires efficient graph bipartitioning heuristics, the best sequential implementations of which arc also hard to parallelize. This paper presents a set of algorithms, implemented in the PT-SCOTCH software package, which allows one to order large graphs in parallel, yielding orderings the quality of which is only slightly worse than the one of state-of-the-art sequential algorithms. Our implementation uses the classical nested dissection approach but relies on several novel features to solve the parallel graph bipartitioning problem. Thanks to these improvements, PT-SCOTCH produces consistently better orderings than PARMETIS on large numbers of processors. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "PT-SCOTCH: A tool for efficient parallel graph ordering", "paper_id": "WOS:000257305800003"}