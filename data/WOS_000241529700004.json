{"auto_keywords": [{"score": 0.03444175794330928, "phrase": "alp_systems"}, {"score": 0.03068541041116714, "phrase": "shared_semantic_structure"}, {"score": 0.00481495049065317, "phrase": "object-oriented_world"}, {"score": 0.0038375280115736958, "phrase": "hierarchical_classes"}, {"score": 0.003407214479510987, "phrase": "abductive_logic_programming_multi-agent_systems"}, {"score": 0.003107935254560724, "phrase": "main_benefits"}, {"score": 0.003074495771087656, "phrase": "oo."}, {"score": 0.002613870237087035, "phrase": "oo_systems"}, {"score": 0.002410058288617039, "phrase": "attribute-value_pairs"}], "paper_keywords": ["qobject-orientation", " logic programming", " Linda"], "paper_abstract": "Logic and object-orientation (OO) are competing ways of looking at the world. Both view the world in terms of individuals. But logic focuses on the relationships between individuals, and OO focuses on the use of hierarchical classes of individuals to structure information and procedures. In this paper, I investigate the similarities and differences between OO and abductive logic programming multi-agent systems (ALP systems) and argue that ALP systems can combine the advantages of logic with the main benefits of OO. In ALP systems, relationships between individuals are contained in a shared semantic structure and agents interact both with one another and with the environment by performing observations and actions. In OO systems, on the other hand, relationships are associated with objects and are represented by attribute-value pairs. Interaction between objects is performed by sending and receiving messages. I argue that logic can be reconciled with OO by combining the hierarchical, modular structuring of information and procedures by means of objects/agents, with a shared semantic structure, to store relationships among objects/individuals, accessed by observations and actions instead of by message passing.", "paper_title": "Computational logic in an object-oriented world", "paper_id": "WOS:000241529700004"}