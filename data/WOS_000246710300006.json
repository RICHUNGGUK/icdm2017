{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "fast_greedy_heuristics"}, {"score": 0.015317122751295015, "phrase": "independent_tasks"}, {"score": 0.010013209293906382, "phrase": "task_consistency"}, {"score": 0.004649474569983707, "phrase": "heterogeneous_computing_systems"}, {"score": 0.0044896599221451216, "phrase": "different_high-performance_machines"}, {"score": 0.0044118153390803405, "phrase": "high-speed_links"}, {"score": 0.004297560964892607, "phrase": "computing-intensive_applications"}, {"score": 0.0042415434489566995, "phrase": "diverse_computational_requirements"}, {"score": 0.003920384090110374, "phrase": "hc_environment"}, {"score": 0.003753315287090587, "phrase": "np"}, {"score": 0.003607630811220324, "phrase": "heuristic_techniques"}, {"score": 0.0035761913760242697, "phrase": "practical_usage"}, {"score": 0.0034835017385881385, "phrase": "real-time_requirements"}, {"score": 0.003423042581201533, "phrase": "mapping_process"}, {"score": 0.0033636292024305406, "phrase": "task_execution"}, {"score": 0.0030017207229983385, "phrase": "mapping_heuristic"}, {"score": 0.002936709606809639, "phrase": "task_priority"}, {"score": 0.002737960968372391, "phrase": "machine_consistency"}, {"score": 0.0026321198895843173, "phrase": "previous_studies"}, {"score": 0.0024007585788965655, "phrase": "uniform_model"}, {"score": 0.0023798115577749225, "phrase": "task_execution_time"}, {"score": 0.002297831085501592, "phrase": "coefficient-of-variation_based_method"}, {"score": 0.0021993066642488237, "phrase": "specific_greedy_heuristic"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["heterogeneous computing", " independent tasks", " greedy heuristic", " task consistency", " task priority graph"], "paper_abstract": "Mixed-machine heterogeneous computing (HC) environments utilize a distributed suite of different high-performance machines, interconnected with high-speed links, to perform groups of computing-intensive applications that have diverse computational requirements and constraints. The problem of optimally mapping a class of independent tasks onto the machines of an HC environment has been proved, in general, to be NP-complete, thus requiring the development of heuristic techniques for practical usage. If the mapping has real-time requirements such that the mapping process is performed during task execution, fast greedy heuristics must be adopted. This paper investigates fast greedy heuristics for this problem and identifies the importance of the concept of task consistency in designing this mapping heuristic. We further propose task priority, graph based fast greedy heuristics, which consider the factors of both task consistency and machine consistency (the same concept of consistency as in previous studies). A collection of 20 greedy heuristics, including 17 newly proposed ones, are implemented, analyzed, and systematically compared within a uniform model of task execution time. This model is implemented by the coefficient-of-variation based method. The experimental results illuminate the circumstances when a specific greedy heuristic would outperform the other 19 greedy heuristics. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "A revisit of fast greedy heuristics for mapping a class of independent tasks onto heterogeneous computing systems", "paper_id": "WOS:000246710300006"}