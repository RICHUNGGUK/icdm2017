{"auto_keywords": [{"score": 0.033316644670367705, "phrase": "sphere"}, {"score": 0.00481495049065317, "phrase": "efficient_and_simplified_distributed_data_intensive_computing"}, {"score": 0.00462773520532301, "phrase": "computing_systems"}, {"score": 0.004477270137801732, "phrase": "moore's_law"}, {"score": 0.004331675965350876, "phrase": "digital_data"}, {"score": 0.004054479957160662, "phrase": "growing_need"}, {"score": 0.0037450707321601963, "phrase": "shared-nothing_commodity_systems"}, {"score": 0.0033465923623290034, "phrase": "distributed_file_system"}, {"score": 0.0023096222276192194, "phrase": "data_locality"}, {"score": 0.002105013286449292, "phrase": "hadoop"}], "paper_keywords": ["Distributed programming", " distributed file systems", " performance", " frameworks"], "paper_abstract": "While the capability of computing systems has been increasing at Moore's Law, the amount of digital data has been increasing even faster. There is a growing need for systems that can manage and analyze very large data sets, preferably on shared-nothing commodity systems due to their low expense. In this paper, we describe the design and implementation of a distributed file system called Sector and an associated programming framework called Sphere that processes the data managed by Sector in parallel. Sphere is designed so that the processing of data can be done in place over the data whenever possible. Sometimes, this is called data locality. We describe the directives Sphere supports to improve data locality. In our experimental studies, the Sector/Sphere system has consistently performed about 2-4 times faster than Hadoop, the most popular system for processing very large data sets.", "paper_title": "Toward Efficient and Simplified Distributed Data Intensive Computing", "paper_id": "WOS:000289905000008"}