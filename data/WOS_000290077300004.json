{"auto_keywords": [{"score": 0.03438275554507546, "phrase": "work_processes"}, {"score": 0.00481495049065317, "phrase": "work_process_configuration"}, {"score": 0.004672444473700524, "phrase": "technical_principles"}, {"score": 0.004556901872357751, "phrase": "constraint-based_configuration_method"}, {"score": 0.004312622975366676, "phrase": "modular_systems"}, {"score": 0.004060986196931943, "phrase": "compatibility_requirements"}, {"score": 0.00392100783796804, "phrase": "individual_components"}, {"score": 0.00354700018079049, "phrase": "process_configuration"}, {"score": 0.003441891354624516, "phrase": "constraint-based_configuration_methods"}, {"score": 0.0032900200522703923, "phrase": "execution_paths"}, {"score": 0.0031765314093444956, "phrase": "semiautomated_process_customization"}, {"score": 0.003066945490483524, "phrase": "extended_constraint_language"}, {"score": 0.002858952758523772, "phrase": "generic_work_processes"}, {"score": 0.0027741761880779535, "phrase": "specific_development_projects"}, {"score": 0.0027464781499539296, "phrase": "heuristic_search_methods"}, {"score": 0.002678433668156678, "phrase": "valid_process_configurations"}, {"score": 0.0026252106881752067, "phrase": "constraint_violations"}, {"score": 0.0025859868507329634, "phrase": "declarative_framework"}, {"score": 0.0025219085140220773, "phrase": "abstract_work_processes"}, {"score": 0.0024105326885334962, "phrase": "existing_processes"}, {"score": 0.0022810491620483737, "phrase": "real-world_system"}, {"score": 0.0022582634725291225, "phrase": "complex_design_and_development_processes"}, {"score": 0.0021912600076114033, "phrase": "significant_process_improvements"}, {"score": 0.0021049977753042253, "phrase": "process_models"}], "paper_keywords": ["Configuration", " Constraints", " Process Design", " Workflow Modeling"], "paper_abstract": "This article describes the technical principles and representation of a constraint-based configuration method for work processes. Methods developed for the configuration of modular systems comprising components have traditionally adopted a representation where the properties and compatibility requirements are expressed as constraints associated with individual components. However, this representation does not accurately capture constraints on paths and subprocesses and is therefore unsuitable for process configuration. This article extends established constraint-based configuration methods with a constraint language for specifying properties of execution paths in work processes. A framework for semiautomated process customization is presented. It integrates the extended constraint language with a metamodel of the work processes in an organization and allows to adapt generic work processes to fit the requirements of specific development projects. Heuristic search methods are applied to build valid process configurations by incrementally resolving constraint violations. The declarative framework facilitates the adaptation of abstract work processes as well as the validation and repair of existing processes. The approach was developed in the context of a real-world system of complex design and development processes where it was shown that significant process improvements and reduction in effort required to edit process models can be achieved.", "paper_title": "A declarative framework for work process configuration", "paper_id": "WOS:000290077300004"}