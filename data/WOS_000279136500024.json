{"auto_keywords": [{"score": 0.027571885117316522, "phrase": "prediction_accuracy"}, {"score": 0.00481495049065317, "phrase": "mining_co-location"}, {"score": 0.004771057941954627, "phrase": "relationships"}, {"score": 0.0046797114400479135, "phrase": "bug_reports"}, {"score": 0.004548253531664032, "phrase": "fault-prone_modules"}, {"score": 0.004462663711734448, "phrase": "automated_bug_localization"}, {"score": 0.004337276328199398, "phrase": "important_issue"}, {"score": 0.004255639740735269, "phrase": "software_engineering"}, {"score": 0.0037969755088553326, "phrase": "fault-prone_software_modules"}, {"score": 0.0035864603175592854, "phrase": "source_code_information_or_software_complexity_metrics"}, {"score": 0.003199687131875466, "phrase": "reactive_approach"}, {"score": 0.003022186855664124, "phrase": "information_and_historical_revision_logs"}, {"score": 0.0028274743316389437, "phrase": "co-location_relationships"}, {"score": 0.002522344964242888, "phrase": "state-of-the-art_learning_method"}, {"score": 0.0022715929119140194, "phrase": "proposed_scheme"}], "paper_keywords": ["bug localization", " co-location shrinkage", " fault-prone modules", " statistical learning"], "paper_abstract": "Automated bug localization is an important issue in software engineering. In the last few decades, various proactive and reactive localization approaches have been proposed to predict the fault-prone software modules. However, most proactive or reactive approaches need source code information or software complexity metrics to perform localization. In this paper, we propose a reactive approach which considers only bug report information and historical revision logs. In our approach, the co-location relationships among bug reports are explored to improve the prediction accuracy of a state-of-the-art learning method. Studies on three open source projects reveal that the proposed scheme can consistently improve the prediction accuracy in all three software projects by nearly 11.6% on average.", "paper_title": "Mining Co-location Relationships among Bug Reports to Localize Fault-Prone Modules", "paper_id": "WOS:000279136500024"}