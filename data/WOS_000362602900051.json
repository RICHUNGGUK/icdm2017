{"auto_keywords": [{"score": 0.04803429707689559, "phrase": "density_matrices"}, {"score": 0.047799073149296864, "phrase": "scalar_functions"}, {"score": 0.04102793950442342, "phrase": "hilbert_space"}, {"score": 0.011438673465805307, "phrase": "distributed_program"}, {"score": 0.011351546807681093, "phrase": "test_data"}, {"score": 0.00481495049065317, "phrase": "simple_quantum_integro-differential_solver"}, {"score": 0.004668957916795845, "phrase": "analytically_the_evolution"}, {"score": 0.004424046443918195, "phrase": "squids"}, {"score": 0.004390060342250211, "phrase": "base_class"}, {"score": 0.004322967486451877, "phrase": "new_classes"}, {"score": 0.004289804897675199, "phrase": "new_non-trivial_terms"}, {"score": 0.004256895619944631, "phrase": "right_hand_sides"}, {"score": 0.004235095881928715, "phrase": "density_matrix_equations"}, {"score": 0.004117169392240965, "phrase": "neutrino_oscillation_problems"}, {"score": 0.003982011128052839, "phrase": "quantum_evolution"}, {"score": 0.0038227863761611715, "phrase": "program"}, {"score": 0.0037923826925502094, "phrase": "squids_catalogue"}, {"score": 0.00368673793612343, "phrase": "cpc_program_library"}, {"score": 0.0036678472439508484, "phrase": "queen's_university"}, {"score": 0.003649053263687727, "phrase": "belfast"}, {"score": 0.0036303546926971966, "phrase": "n._ireland"}, {"score": 0.003574830654211291, "phrase": "general_public_license"}, {"score": 0.0032674004247693366, "phrase": "tar.gz_programming_language"}, {"score": 0.003151974843283611, "phrase": "linux"}, {"score": 0.003135897251539186, "phrase": "mac"}, {"score": 0.002814886483566627, "phrase": "gnu_scientific_library"}, {"score": 0.0027223626424366207, "phrase": "open_quantum_systems"}, {"score": 0.002708399936381754, "phrase": "hilbert_space_dimension"}, {"score": 0.0026875896756849258, "phrase": "self_interactions"}, {"score": 0.0026600905156986317, "phrase": "classical_fields"}, {"score": 0.0026464463491558702, "phrase": "solution_method"}, {"score": 0.002559444836360178, "phrase": "gsl_ordinary_differential_equation_solver"}, {"score": 0.002488060363760654, "phrase": "hilbert_spaces"}, {"score": 0.002443671484766342, "phrase": "mathematica_notebook"}, {"score": 0.0024000726315182826, "phrase": "higher_dimensional_solutions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Quantum mechanics", " Ordinary differential equations", " SU groups"], "paper_abstract": "Simple Quantum Integro-Differential Solver (SQUIDS) is a C++ code designed to solve semi-analytically the evolution of a set of density matrices and scalar functions. This is done efficiently by expressing all operators in an SU (N) basis. SQuIDS provides a base class from which users can derive new classes to include new non-trivial terms from the right hand sides of density matrix equations. The code was designed in the context of solving neutrino oscillation problems, but can be applied to any problem that involves solving the quantum evolution of a collection of particles with Hilbert space of dimension up to six. Program summary Program title: SQuIDS Catalogue identifier: AEXG_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEXG_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU Lesser General Public License, version 3 No. of lines in distributed program, including test data, etc.: 18198 No. of bytes in distributed program, including test data, etc.: 137607 Distribution format: tar.gz Programming language: C++11. Computer: 32- and 64-bit x86. Operating system: Linux, Mac OS X, FreeBSD. RAM: Proportional to the number of nodes, the dimension of the Hilbert space, the number of scalar functions, and the number of density matrices used in the problem. Classification: 11.1. External routines: GNU Scientific Library (http://www.gnu.org/software/gsl/). Nature of problem: Solve the evolution of open quantum systems of Hilbert space dimension N with self interactions and interaction with classical fields. Solution method: The SU (N) algebra is implemented as a C++ object and is embedded into the GSL ordinary differential equation solver. Restrictions: The code is only implemented up to Hilbert spaces of dimension six, but a Mathematica notebook is provided in order to generate higher dimensional solutions. Furthermore, only ordinary differential equation solution methods that require only the first derivative can be used. Running time: Proportional to the number of nodes, the dimension of the Hilbert space, the number of scalar functions, the number of density matrices, and the numerical precision used in the problem. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A Simple Quantum Integro-Differential Solver (SQuIDS)", "paper_id": "WOS:000362602900051"}