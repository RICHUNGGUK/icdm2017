{"auto_keywords": [{"score": 0.02480567019565652, "phrase": "condor"}, {"score": 0.00481495049065317, "phrase": "parallel_block_conjugate_gradient_algorithm"}, {"score": 0.004746065479362881, "phrase": "block_conjugate_gradient_algorithm"}, {"score": 0.0047006879240764935, "phrase": "block-cg"}, {"score": 0.004567129988306349, "phrase": "sparse_linear_systems"}, {"score": 0.004458722048888919, "phrase": "multiple_right-hand_sides"}, {"score": 0.003953932197201054, "phrase": "smaller_groups"}, {"score": 0.003750260412839128, "phrase": "middleware_mjms"}, {"score": 0.0035914198812657897, "phrase": "suitable_resource"}, {"score": 0.003108814986752103, "phrase": "independent_tasks"}, {"score": 0.0030642636185693054, "phrase": "fine-grained_parallelism"}, {"score": 0.002850875630787708, "phrase": "multi-grained_distributed_implementation"}, {"score": 0.0027965187255008647, "phrase": "block-cg."}, {"score": 0.002703869368554536, "phrase": "parallel_implementation"}, {"score": 0.0026268961477241026, "phrase": "distributed_implementation"}, {"score": 0.0025521085778978042, "phrase": "grid_computing_environments"}, {"score": 0.0023515464194592195, "phrase": "globus_toolkit"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["multi-grained parallelism", " parallel and distributed algorithm", " Block Conjugate Gradient"], "paper_abstract": "The Block Conjugate Gradient algorithm (Block-CG) was developed to solve sparse linear systems of equations that have multiple right-hand sides. We have adapted it for use in heterogeneous, geographically distributed, parallel architectures. Once the main operations of the Block-CG (Tasks) have been collected into smaller groups (subjobs), each subjob is matched by the middleware MJMS (MPI Jobs Management System) with a suitable resource selected among those which are available. Moreover, within each subjob, concurrency is introduced at two different levels and with two different granularities: the coarse-grained parallelism to perform independent tasks and the fine-grained parallelism within the execution of a task. We refer to this algorithm as to multi-grained distributed implementation of the parallel Block-CG. We compare the performance of a parallel implementation with the one of the distributed implementation running on a variety of Grid computing environments. The middleware MJMS-developed by some of the authors and built on top of Globus Toolkit and Condor-G-was used for co-allocation, synchronization, scheduling and resource selection. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "A multi-grained distributed implementation of the parallel Block Conjugate Gradient algorithm", "paper_id": "WOS:000283091300001"}