{"auto_keywords": [{"score": 0.03758039071399478, "phrase": "balcan_et_al"}, {"score": 0.035876207211546295, "phrase": "similarity_function"}, {"score": 0.00481495049065317, "phrase": "good_similarity_functions"}, {"score": 0.004623503587186056, "phrase": "domain_adaptation"}, {"score": 0.0045895181082906715, "phrase": "binary_classification"}, {"score": 0.0043584824527198055, "phrase": "target_test_data"}, {"score": 0.00424734451992536, "phrase": "theoretical_standpoint"}, {"score": 0.004169692306713217, "phrase": "better_generalization_guarantees"}, {"score": 0.004048378919038729, "phrase": "input_space"}, {"score": 0.003989046949801574, "phrase": "classical_approaches"}, {"score": 0.003916098498242888, "phrase": "new_projection_spaces"}, {"score": 0.003844478919573134, "phrase": "source_data"}, {"score": 0.003664315990489347, "phrase": "original_direction"}, {"score": 0.0036105923401756126, "phrase": "recent_framework"}, {"score": 0.0034925663938977715, "phrase": "linear_classifiers"}, {"score": 0.0034540850937966306, "phrase": "explicit_projection_space"}, {"score": 0.0032319109979344184, "phrase": "well-founded_general_method"}, {"score": 0.0031845067058084583, "phrase": "low-error_classifier"}, {"score": 0.003035177667751495, "phrase": "iterative_procedure"}, {"score": 0.002935905915691203, "phrase": "reweighting_scheme"}, {"score": 0.0027673496368158545, "phrase": "new_projection_space"}, {"score": 0.002706659627293686, "phrase": "reweighting_quality"}, {"score": 0.0026570998719084153, "phrase": "reverse_validation_procedure"}, {"score": 0.0025892330566358503, "phrase": "linear_programming_formulation"}, {"score": 0.0025606791601860543, "phrase": "good_adaptation_performances"}, {"score": 0.0024860616730750158, "phrase": "challenging_unsupervised_case"}, {"score": 0.0024586427394152196, "phrase": "target_label"}, {"score": 0.0023694065215394593, "phrase": "manual_annotation"}, {"score": 0.0022749744354271816, "phrase": "semi-supervised_case"}, {"score": 0.002136367030584338, "phrase": "synthetic_problem"}, {"score": 0.0021049977753042253, "phrase": "real_image_annotation_task"}], "paper_keywords": ["Machine learning", " Transfer learning", " Domain adaptation", " Good similarity functions"], "paper_abstract": "In this paper, we address the problem of domain adaptation for binary classification. This problem arises when the distributions generating the source learning data and target test data are somewhat different. From a theoretical standpoint, a classifier has better generalization guarantees when the two domain marginal distributions of the input space are close. Classical approaches try mainly to build new projection spaces or to reweight the source data with the objective of moving closer the two distributions. We study an original direction based on a recent framework introduced by Balcan et al. enabling one to learn linear classifiers in an explicit projection space based on a similarity function, not necessarily symmetric nor positive semi-definite. We propose a well-founded general method for learning a low-error classifier on target data, which is effective with the help of an iterative procedure compatible with Balcan et al.'s framework. A reweighting scheme of the similarity function is then introduced in order to move closer the distributions in a new projection space. The hyperparameters and the reweighting quality are controlled by a reverse validation procedure. Our approach is based on a linear programming formulation and shows good adaptation performances with very sparse models. We first consider the challenging unsupervised case where no target label is accessible, which can be helpful when no manual annotation is possible. We also propose a generalization to the semi-supervised case allowing us to consider some few target labels when available. Finally, we evaluate our method on a synthetic problem and on a real image annotation task.", "paper_title": "Parsimonious unsupervised and semi-supervised domain adaptation with good similarity functions", "paper_id": "WOS:000309874800004"}