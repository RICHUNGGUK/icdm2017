{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "embedded_software"}, {"score": 0.004342430078306461, "phrase": "higher_levels"}, {"score": 0.004123781267600542, "phrase": "development_paradigm_shift"}, {"score": 0.003835972725191194, "phrase": "key_issue"}, {"score": 0.0033190180867511605, "phrase": "new_method"}, {"score": 0.0032176163279340206, "phrase": "real-time_tasks"}, {"score": 0.0030872017736888113, "phrase": "component_sequence_diagram"}, {"score": 0.0027267406923803367, "phrase": "simulated_annealing_algorithm"}, {"score": 0.002643386043540555, "phrase": "design_space"}, {"score": 0.0024842242921857705, "phrase": "task_generation"}, {"score": 0.002408265305704217, "phrase": "optimization_implementation"}, {"score": 0.002310578855290687, "phrase": "experimental_evaluation"}, {"score": 0.0021714122348552747, "phrase": "correct_implementation"}, {"score": 0.0021049977753042253, "phrase": "better_time_performance"}], "paper_keywords": [""], "paper_abstract": "The development of embedded software has the tendency towards higher levels of abstraction. This development paradigm shift makes the synthesis of embedded software a key issue in the development of embedded software. In this paper, we present a new method of generating real-time tasks, which uses Component Sequence Diagram to organize tasks and assign their priorities. Moreover, we use simulated annealing algorithm to explore design space and iterate the process of task generation until an optimization implementation is obtained. Experimental evaluation shows this method can yield correct implementation and has better time performance.", "paper_title": "A task generation method for the development of embedded software", "paper_id": "WOS:000238417500122"}