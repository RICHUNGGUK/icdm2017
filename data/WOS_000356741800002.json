{"auto_keywords": [{"score": 0.04320379466850638, "phrase": "visibility_polygon"}, {"score": 0.004815316573636744, "phrase": "gpu"}, {"score": 0.004640079189342692, "phrase": "computing_point_visibility"}, {"score": 0.004444037594955185, "phrase": "simple_polygon_p"}, {"score": 0.004230068512904886, "phrase": "parallel_algorithm"}, {"score": 0.00405127920820053, "phrase": "observer_point"}, {"score": 0.0039040344230094164, "phrase": "chain_visibility_concept"}, {"score": 0.003832423454781517, "phrase": "bottom-up_merge_method"}, {"score": 0.0034720284451902083, "phrase": "gpu_architectures"}, {"score": 0.0031068064097811844, "phrase": "first_work"}, {"score": 0.0030309961956273028, "phrase": "gpu-based_parallel_algorithm"}, {"score": 0.002797121441432477, "phrase": "presented_algorithm"}, {"score": 0.002728847267539957, "phrase": "first_suboptimal_parallel_algorithm"}, {"score": 0.002678734566245688, "phrase": "visibility_problem"}, {"score": 0.0025812459787060097, "phrase": "existing_parallel_architectures"}, {"score": 0.0025027144548626975, "phrase": "sample_implementation"}], "paper_keywords": ["Visibility polygon", " Visibility chain", " Parallel processing", " GPU processing", " CUDA"], "paper_abstract": "Given a simple polygon P in the plane, we present a parallel algorithm for computing the visibility polygon of an observer point q inside P. We use chain visibility concept and a bottom-up merge method for constructing the visibility polygon of point q. The algorithm is simple and mainly designed for GPU architectures, where it runs in O(log n) time using O(n) processors. This is the first work on designing a GPU-based parallel algorithm for the visibility problem. To the best of our knowledge, the presented algorithm is also the first suboptimal parallel algorithm for the visibility problem that can be implemented on existing parallel architectures. We evaluated a sample implementation of the algorithm on several large polygons. The experiments indicate that our algorithm can compute the visibility of a polygon having over 4M points in tenth of a second on an NVIDIA GTX 780 Ti GPU. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "GPU-based parallel algorithm for computing point visibility inside simple polygons", "paper_id": "WOS:000356741800002"}