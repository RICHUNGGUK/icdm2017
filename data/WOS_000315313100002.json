{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "realistic_systems"}, {"score": 0.004761494044422926, "phrase": "physical_constraints"}, {"score": 0.00423465514675998, "phrase": "particular_resource"}, {"score": 0.003808209866576388, "phrase": "exactly_one_mode"}, {"score": 0.0030282147475402736, "phrase": "standard_propositional_linear_time_temporal_logic"}, {"score": 0.0025461386232786356, "phrase": "case_studies"}, {"score": 0.0024346858809238766, "phrase": "tableau-like_algorithm"}, {"score": 0.0022386642196006567, "phrase": "prototype_implementation"}, {"score": 0.0022137465420508785, "phrase": "present_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Temporal logic", " Constraints", " Theorem proving", " Tableau"], "paper_abstract": "When modelling realistic systems, physical constraints on the resources available are often required. For example, we might say that at most N processes can access a particular resource at any moment, exactly M participants are needed for an agreement, or an agent can be in exactly one mode at any moment Such situations are concisely modelled where literals are constrained such that at most N, or exactly M, can hold at any moment in time. In this paper we consider a logic which is a combination of standard propositional linear time temporal logic with cardinality constraints restricting the numbers of literals that can be satisfied at any moment in time. We present the logic and show how to represent a number of case studies using this logic. We propose a tableau-like algorithm for checking the satisfiability of formulae in this logic, provide details of a prototype implementation and present experimental results using the prover. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Deductive temporal reasoning with constraints", "paper_id": "WOS:000315313100002"}