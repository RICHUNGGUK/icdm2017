{"auto_keywords": [{"score": 0.039625746277735296, "phrase": "large_number"}, {"score": 0.013115118838815231, "phrase": "optimization_problem"}, {"score": 0.009341828147670693, "phrase": "complex_systems"}, {"score": 0.00481495049065317, "phrase": "execution_time"}, {"score": 0.004771115666493521, "phrase": "parallel_algorithm"}, {"score": 0.004641980000471692, "phrase": "analytical_cost_model_function"}, {"score": 0.004599712603988837, "phrase": "running_time"}, {"score": 0.004543951416376968, "phrase": "cost_function"}, {"score": 0.0042490799524136594, "phrase": "optimal_execution"}, {"score": 0.004096353910862841, "phrase": "input_problem"}, {"score": 0.00404667000994945, "phrase": "target_architecture"}, {"score": 0.0039370647208387234, "phrase": "modeled_execution_time"}, {"score": 0.003749462025612395, "phrase": "variable_parameters"}, {"score": 0.0036926830072270076, "phrase": "analytical_minimization_techniques"}, {"score": 0.0036478772206217282, "phrase": "exhaustive_search_techniques"}, {"score": 0.0034318447871577503, "phrase": "computational_system_increases"}, {"score": 0.0033490453422160677, "phrase": "time_restrictions"}, {"score": 0.0032983098564490208, "phrase": "approximation_methods"}, {"score": 0.0031029148239426485, "phrase": "bad_quality"}, {"score": 0.0029730465986338873, "phrase": "objective_functions"}, {"score": 0.002805422862625723, "phrase": "heterogeneous_processors"}, {"score": 0.002788335965186124, "phrase": "non-trivial_scientific_applications"}, {"score": 0.002696196402171568, "phrase": "valid_approaches"}, {"score": 0.0026715987201787286, "phrase": "general_problems"}, {"score": 0.0026070935979443646, "phrase": "well-known_advantage"}, {"score": 0.0025363803754268302, "phrase": "high-quality_solutions"}, {"score": 0.002520927983744567, "phrase": "low_running_times"}, {"score": 0.0024525461181496753, "phrase": "parameterized_analytical_cost_model_function"}, {"score": 0.0023787343905076024, "phrase": "novel_real_alternative"}, {"score": 0.002349834016814399, "phrase": "parallel_execution_time"}, {"score": 0.0022930799650968544, "phrase": "proposed_approach"}, {"score": 0.0022514137676797985, "phrase": "parallel_heterogeneous_systems"}, {"score": 0.0021970315630373493, "phrase": "general_framework"}, {"score": 0.0021374167789011246, "phrase": "different_metaheuristics"}, {"score": 0.0021049977753042253, "phrase": "particular_problems"}], "paper_keywords": ["Processes scheduling", " Heterogeneous computing", " Execution time modeling"], "paper_abstract": "The optimization of the execution time of a parallel algorithm can be achieved through the use of an analytical cost model function representing the running time. Typically the cost function includes a set of parameters that model the behavior of the system and the algorithm. In order to reach an optimal execution, some of these parameters must be fitted according to the input problem and to the target architecture. An optimization problem can be stated where the modeled execution time for the algorithm is used to estimate the parameters. Due to the large number of variable parameters in the model, analytical minimization techniques are discarded. Exhaustive search techniques can be used to solve the optimization problem, but when the number of parameters or the size of the computational system increases, the method is impracticable due to time restrictions. The use of approximation methods to guide the search is also an alternative. However, the dependence on the algorithm modeled and the bad quality of the solutions as a result of the presence of many local optima values in the objective functions are also drawbacks to these techniques. The problem becomes particularly difficult in complex systems hosting a large number of heterogeneous processors solving non-trivial scientific applications. The use of metaheuristics allows for the development of valid approaches to solve general problems with a large number of parameters. A well-known advantage of metaheuristic methods is the ability to obtain high-quality solutions at low running times while maintaining generality. We propose combining the parameterized analytical cost model function and metaheuristic minimization methods, which contributes to a novel real alternative to minimize the parallel execution time in complex systems. The success of the proposed approach is shown with two different algorithmic schemes on parallel heterogeneous systems. Furthermore, the development of a general framework allows us to easily develop and experiment with different metaheuristics to adjust them to particular problems.", "paper_title": "A framework for the application of metaheuristics to tasks-to-processors assignation problems", "paper_id": "WOS:000309353800009"}