{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "easily_testable_high-speed_multiplier"}, {"score": 0.0041316803676012155, "phrase": "recursive_method"}, {"score": 0.0040481944502103505, "phrase": "test_generation"}, {"score": 0.003769006950727621, "phrase": "specific_patterns"}, {"score": 0.0036181717017041387, "phrase": "'alternately_inverted_patterns"}, {"score": 0.002831462722290752, "phrase": "cell_fault_model"}, {"score": 0.0027459678326877744, "phrase": "test_patterns"}, {"score": 0.0025826247025542213, "phrase": "partial_product_generators"}, {"score": 0.0025046245057922557, "phrase": "hardware_overhead"}, {"score": 0.0021049977753042253, "phrase": "previously_proposed_easily_testable_adder"}], "paper_keywords": ["multiplier", " design for testability", " 4-2 adder tree", " C-testability"], "paper_abstract": "A C-testable 4-2 adder tree for an easily testable highspeed multiplier is proposed, and a recursive method for test generation is shown. By using the specific patterns that we call 'alternately inverted patterns,' the adder tree, as well as partial product generators, can be tested with 14 patterns regardless of its operand size under the cell fault model. The test patterns are easily fed through the partial product generators. The hardware overhead of the 4-2 adder tree with partial product generators for a 64-bit multiplier is about 15%. By using a previously proposed easily testable adder as the final adder, we can obtain an easily testable high-speed multiplier.", "paper_title": "A C-Testable 4-2 Adder Tree for an Easily Testable High-Speed Multiplier", "paper_id": "WOS:000285488900013"}