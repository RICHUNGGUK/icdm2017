{"auto_keywords": [{"score": 0.04814779378479575, "phrase": "general_idea"}, {"score": 0.00481495049065317, "phrase": "critical_rays_scan_match_slam._scan"}, {"score": 0.004724365740062236, "phrase": "oldest_and_simplest_methods"}, {"score": 0.004650181065816347, "phrase": "slam."}, {"score": 0.004351033214640434, "phrase": "laser_scan"}, {"score": 0.004136044939878838, "phrase": "vast_majority"}, {"score": 0.00398177607914381, "phrase": "scan_matching"}, {"score": 0.0038698476651328898, "phrase": "accumulative_noise"}, {"score": 0.003666908853711961, "phrase": "execution_time"}, {"score": 0.0035300761057370745, "phrase": "good_quality_maps"}, {"score": 0.003496670470065125, "phrase": "small_iteration_time"}, {"score": 0.003355515315708125, "phrase": "proposed_slam_scheme"}, {"score": 0.0032818759580573575, "phrase": "ray-selection_method"}, {"score": 0.0032508114149214407, "phrase": "main_idea"}, {"score": 0.0030126187386121613, "phrase": "matching_process"}, {"score": 0.0028364561005358377, "phrase": "current_scan"}, {"score": 0.0028095957871860653, "phrase": "global_robot_map"}, {"score": 0.0027479040199262393, "phrase": "accumulated_errors"}, {"score": 0.002696101728474703, "phrase": "hill_climbing"}, {"score": 0.002570817338292482, "phrase": "local_search_optimization_procedure"}, {"score": 0.0024747842618794255, "phrase": "traditional_genetic_algorithm"}, {"score": 0.002459421666347587, "phrase": "ga"}, {"score": 0.0024051153560799335, "phrase": "low_complexity"}, {"score": 0.0023226161707785064, "phrase": "parameterizable_slam"}, {"score": 0.0022715929119140194, "phrase": "on-line_system"}, {"score": 0.0022500695985527668, "phrase": "low_computational_cost"}, {"score": 0.0022287497627555895, "phrase": "proposed_algorithm"}, {"score": 0.0022076314894741394, "phrase": "structured_civil_environment"}, {"score": 0.0021522871388240444, "phrase": "robocup_-_roborescue_competition"}, {"score": 0.0021049977753042253, "phrase": "high_quality_maps"}], "paper_keywords": ["SLAM", " Scan matching", " Random restart hill climbing", " Critical rays", " Occupancy grid map"], "paper_abstract": "Scan matching is one of the oldest and simplest methods for occupancy grid based SLAM. The general idea is to find the pose of a robot and update its map simply by calculating the 2-D transformation between a laser scan and its predecessor. Due to its simplicity many solutions were proposed and used in various systems, the vast majority of which are iterative. The fact is, that although scan matching is simple in its implementation, it suffers from accumulative noise. Of course, there is certainly a trade-off between the quality of results and the execution time required. Many algorithms have been introduced, in order to achieve good quality maps in a small iteration time, so that on-line execution would be achievable. The proposed SLAM scheme performs scan matching by implementing a ray-selection method. The main idea is to reduce complexity and time needed for matching by pre-processing the scan and selecting rays that are critical for the matching process. In this paper, several different methods of ray-selection are compared. In addition matching is performed between the current scan and the global robot map, in order to minimize the accumulated errors. RRHC (Random Restart Hill Climbing) is employed for matching the scan to the map, which is a local search optimization procedure that can be easily parameterized and is much faster than a traditional genetic algorithm (GA), largely because of the low complexity of the problem. The general idea is to construct a parameterizable SLAM that can be used in an on-line system that requires low computational cost. The proposed algorithm assumes a structured civil environment, is oriented for use in the RoboCup - RoboRescue competition, and its main purpose is to construct high quality maps.", "paper_title": "Critical Rays Scan Match SLAM", "paper_id": "WOS:000326192300011"}