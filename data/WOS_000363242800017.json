{"auto_keywords": [{"score": 0.04916281891691642, "phrase": "drazin_inverse"}, {"score": 0.02322730111336097, "phrase": "recurrent_neural_network"}, {"score": 0.021942031851102703, "phrase": "rnn"}, {"score": 0.0043713857434347254, "phrase": "real_matrix"}, {"score": 0.004329331617724, "phrase": "real_time"}, {"score": 0.0041051328120736575, "phrase": "independent_parts"}, {"score": 0.0038737214010638745, "phrase": "input_matrix"}, {"score": 0.0034826993555190765, "phrase": "computational_advantages"}, {"score": 0.0034325187732054093, "phrase": "existing_sequential_algorithms"}, {"score": 0.003350480663660326, "phrase": "real-time_applications"}, {"score": 0.003115908199991072, "phrase": "electronic_circuit"}, {"score": 0.002997572637726648, "phrase": "neural_network"}, {"score": 0.0028421434495262796, "phrase": "output_matrix"}, {"score": 0.00269475174341129, "phrase": "proposed_rnn"}, {"score": 0.002655894070657161, "phrase": "existing_ones"}, {"score": 0.0026175952455594277, "phrase": "drazin_inverse_computation"}, {"score": 0.0024342079318127423, "phrase": "defined_rnn"}, {"score": 0.002274630121183437, "phrase": "illustrative_examples"}, {"score": 0.0021987994275190314, "phrase": "practical_engineering_problems"}, {"score": 0.0021049977753042253, "phrase": "proposed_neural_network"}], "paper_keywords": ["Artificial neural network", " Drazin inverse", " dynamical system", " generalized inverse"], "paper_abstract": "This paper presents a recurrent neural network (RNN) for computing the Drazin inverse of a real matrix in real time. This recurrent neural network (RNN) is composed of n independent parts (subnetworks), where n is the order of the input matrix. These subnetworks can operate concurrently, so parallel and distributed processing can be achieved. In this way, the computational advantages over the existing sequential algorithms can be attained in real-time applications. The RNN defined in this paper is convenient for an implementation in an electronic circuit. The number of neurons in the neural network is the same as the number of elements in the output matrix, which represents the Drazin inverse. The difference between the proposed RNN and the existing ones for the Drazin inverse computation lies in their network architecture and dynamics. The conditions that ensure the stability of the defined RNN as well as its convergence toward the Drazin inverse are considered. In addition, illustrative examples and examples of application to the practical engineering problems are discussed to show the efficacy of the proposed neural network.", "paper_title": "Recurrent Neural Network for Computing the Drazin Inverse", "paper_id": "WOS:000363242800017"}