{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "conditional_covering_problem"}, {"score": 0.03240215106811688, "phrase": "extended_stars"}, {"score": 0.0046073860169839305, "phrase": "undirected_network"}, {"score": 0.004408729661992651, "phrase": "demand_point"}, {"score": 0.004126623209579942, "phrase": "potential_facility_site"}, {"score": 0.0034024277222012597, "phrase": "total_facility_location_cost"}, {"score": 0.00325555555110395, "phrase": "new_upper_bounds"}, {"score": 0.002363806685815014, "phrase": "previous_upper_bounds"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Algorithms", " Graphs", " Covering location problems", " Conditional covering", " Dynamic programming"], "paper_abstract": "We consider the conditional covering problem in an undirected network, in which each vertex represents a demand point that must be covered by a facility as well as a potential facility site. Each facility can cover all vertices within a given coverage radius, except the vertex at which the facility is located. The objective is to locate facilities to cover all vertices such that the total facility location cost is minimized. In this paper, new upper bounds are proposed for the conditional covering problem on paths, cycles, extended stars, and trees. In particular, we provide an O(n log n)-time algorithm for paths, an O(n(2) logn)-time algorithm for cycles, an O(n(1.5) log n)-time algorithm for extended stars, and an O(n(3))-time algorithm for trees. Our algorithms for paths, extended stars, and trees improve the previous upper bounds from O(n(2)), O(n(2)). and O(n(4)), respectively. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Efficient algorithms for the conditional covering problem", "paper_id": "WOS:000310411900003"}