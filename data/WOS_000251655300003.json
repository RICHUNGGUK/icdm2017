{"auto_keywords": [{"score": 0.026104666187258468, "phrase": "pnn"}, {"score": 0.00481495049065317, "phrase": "hybrid_systems"}, {"score": 0.004652016085325825, "phrase": "real-time_control"}, {"score": 0.004477407179841716, "phrase": "computational_complexity"}, {"score": 0.004426308135681733, "phrase": "model-predictive-control_strategy"}, {"score": 0.004392565073466714, "phrase": "discrete-time_hybrid_systems"}, {"score": 0.0042928648367867835, "phrase": "existing_solutions"}, {"score": 0.004227653047394939, "phrase": "dynamic_programming_and_multi-parametric_programming_approaches"}, {"score": 0.004022451267521423, "phrase": "modified_version"}, {"score": 0.003991774582021095, "phrase": "performance-driven_reachability_analyses"}, {"score": 0.00385658790017119, "phrase": "hybrid_system"}, {"score": 0.0036274201504044685, "phrase": "reachable_states"}, {"score": 0.0034911335714333507, "phrase": "input_combinations"}, {"score": 0.0034512514926836667, "phrase": "designated_states"}, {"score": 0.0034118234596993836, "phrase": "cost-function_value"}, {"score": 0.0031481164109237636, "phrase": "initial_state"}, {"score": 0.0031121406603482112, "phrase": "input_sequence"}, {"score": 0.002983700956478823, "phrase": "finite_horizon"}, {"score": 0.0029270797740550973, "phrase": "model_predictive_strategy"}, {"score": 0.002784828661426853, "phrase": "possible_discrete_input_combinations"}, {"score": 0.002731971103291716, "phrase": "feasible_set"}, {"score": 0.002599177223533834, "phrase": "optimization_results"}, {"score": 0.0025596276616952516, "phrase": "proposed_approach"}, {"score": 0.002472822097373027, "phrase": "probabilistic_neural_network"}, {"score": 0.002316788811533867, "phrase": "state-space_partitions"}, {"score": 0.002290291401956985, "phrase": "trained_pnn"}, {"score": 0.002246799280512825, "phrase": "system-state-based_control-law_classifier"}, {"score": 0.0021049977753042253, "phrase": "real_time"}], "paper_keywords": ["hybrid systems", " model predictive control", " reachability analysis", " probabilistic neural networks"], "paper_abstract": "This paper proposes an approach for reducing the computational complexity of a model-predictive-control strategy for discrete-time hybrid systems with discrete inputs only. Existing solutions are based on dynamic programming and multi-parametric programming approaches, while the one proposed in this paper is based on a modified version of performance-driven reachability analyses. The algorithm abstracts the behaviour of the hybrid system by building a 'tree of evolution'. The nodes of the tree represent the reachable states of a process, and the branches correspond to input combinations leading to designated states. A cost-function value is associated with each node and based on this value the exploration of the tree is driven. For any initial state, an input sequence is thus obtained, driving the system optimally over a finite horizon. According to the model predictive strategy, only the first input is actually applied to the system. The number of possible discrete input combinations is finite and the feasible set of the states of the system may be partitioned according to the optimization results. In the proposed approach, the partitioning is performed offline and a probabilistic neural network (PNN) is then trained by the set of points at the borders of the state-space partitions. The trained PNN is used as a system-state-based control-law classifier. Thus, the online computational effort is minimized and the control can be implemented in real time.", "paper_title": "Model-based predictive control of hybrid systems: A probabilistic neural-network approach to real-time control", "paper_id": "WOS:000251655300003"}