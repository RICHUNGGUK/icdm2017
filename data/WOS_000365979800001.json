{"auto_keywords": [{"score": 0.03722512137998703, "phrase": "gofkernel_package"}, {"score": 0.01186718804792735, "phrase": "null_hypothesis_density_function"}, {"score": 0.00481495049065317, "phrase": "kernel_density"}, {"score": 0.004650086856905758, "phrase": "continuous_random_distribution"}, {"score": 0.004435295263813712, "phrase": "null_hypothesis_cumulative_distribution_function"}, {"score": 0.004402295697276237, "phrase": "empirical_cumulative_distribution_function"}, {"score": 0.004294052530714228, "phrase": "almost_all_the_tests"}, {"score": 0.0041469500929423595, "phrase": "package_stats"}, {"score": 0.0038772776660971845, "phrase": "cumulative_distribution_functions"}, {"score": 0.0037724857647796813, "phrase": "new_implementation"}, {"score": 0.00367967106192446, "phrase": "sample_kernel_estimate"}, {"score": 0.003652272880077669, "phrase": "density_function"}, {"score": 0.0034660938095219846, "phrase": "large_simulation_exercise"}, {"score": 0.003347259612209552, "phrase": "fan's_test"}, {"score": 0.0030600032877646263, "phrase": "r_users"}, {"score": 0.0029330318530416417, "phrase": "consistent_kernel_density_estimates"}, {"score": 0.0029111767710750117, "phrase": "random_variables"}, {"score": 0.0027081063120500443, "phrase": "truncgof_package"}, {"score": 0.0026282676485044464, "phrase": "non-truncated_distributions"}, {"score": 0.0025827837420330816, "phrase": "test_fan.test"}, {"score": 0.0025317627242523104, "phrase": "null_hypothesis"}, {"score": 0.002450989072342609, "phrase": "bandwidth_parameter"}, {"score": 0.0023259039577313294, "phrase": "similar_power"}, {"score": 0.002268598551466928, "phrase": "large_samples"}, {"score": 0.0022182291597200713, "phrase": "good_alternative"}, {"score": 0.0021049977753042253, "phrase": "random_generator"}], "paper_keywords": ["non-parametric tests", " Fan's test", " L-1-distance", " R", " truncgof", " ADGofTest"], "paper_abstract": "To assess the goodness-of-fit of a sample to a continuous random distribution, the most popular approach has been based on measuring, using either L-infinity- or L-2-norms, the distance between the null hypothesis cumulative distribution function and the empirical cumulative distribution function. Indeed, as far as I know, almost all the tests currently available in R related to this issue (ks. test in package stats, ad.test in package AD-GofTest, and ad.test, ad2.test, ks.test, v.test and w2.test in package truncgof) use one of these two distances on cumulative distribution functions. This paper (i) proposes dgeometric.test, a new implementation of the test that measures the discrepancy between a sample kernel estimate of the density function and the null hypothesis density function on the L-1-norm, (ii) introduces the GoFKernel package, and (iii) performs a large simulation exercise to assess the calibration and sensitivity of the above listed tests as well as the Fan's test (Fan 1994), fan. test, also implemented in the GoFKernel package. In addition to dgeometric. test and f an. test, the GoFKernel package adds a couple of functions that R users might also find of interest: density. reflected extends density, allowing the computation of consistent kernel density estimates for bounded random variables, and random. function offers an ad-hoc and universal (although computational expensive and potentially inaccurate for long tail distributions) sampling method. In light of the simulation results, we can conclude that (i) the tests implemented in the truncgof package should not be used to assess goodness-of-fit (at least for non-truncated distributions), (ii) the test fan.test shows an over-tendency to not reject the null hypothesis, being visibly miscalibrated (at least in its default option, where the bandwidth parameter is estimated using dpik from package KernSmooth), (iii) the tests ks.test and ad. test show similar power, with ad. test being slightly preferable in large samples, and (iv) dgeometric.test represents a good alternative given its satisfactory calibration and its, in general, superior power in samples of medium and large sizes. As a counterpart it entails more computational burden when the random generator of the null hypothesis density function is not available in R and random. function must be used.", "paper_title": "Testing Goodness-of-Fit with the Kernel Density Estimator: GoFKernel", "paper_id": "WOS:000365979800001"}