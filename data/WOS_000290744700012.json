{"auto_keywords": [{"score": 0.04860000689752456, "phrase": "reconfigurable_computing_systems"}, {"score": 0.037796462302704135, "phrase": "reconfiguration_overhead"}, {"score": 0.034328879840790597, "phrase": "overall_execution_time"}, {"score": 0.00481495049065317, "phrase": "on-line_task_scheduling"}, {"score": 0.004475022550508119, "phrase": "partial_reconfigurability"}, {"score": 0.004246947739596565, "phrase": "true_multitasking_manner"}, {"score": 0.004051595625804513, "phrase": "reconfigurable_operating_system"}, {"score": 0.003946960862020283, "phrase": "main_part"}, {"score": 0.0038854765143440965, "phrase": "operating_system"}, {"score": 0.0038450179181069833, "phrase": "resource_management_unit"}, {"score": 0.0037456980766939836, "phrase": "line_scheduling"}, {"score": 0.0036680857629458816, "phrase": "hardware_tasks"}, {"score": 0.0035361001070845677, "phrase": "important_obstacle"}, {"score": 0.0029905104479072482, "phrase": "periodic_applications"}, {"score": 0.0025288869172313674, "phrase": "on-line_scheduling"}, {"score": 0.0024634797027967203, "phrase": "configuration_reusing"}, {"score": 0.0023997601127552256, "phrase": "main_characteristic"}, {"score": 0.0021496083700137305, "phrase": "proposed_algorithm"}, {"score": 0.002127186380459509, "phrase": "obtained_results"}, {"score": 0.0021049977753042253, "phrase": "considerable_improvement"}], "paper_keywords": ["reconfigurable computing", " on-line scheduling", " configuration reusing", " RPU partitioning", " replacement management", " probability of recurrence"], "paper_abstract": "Reconfigurable computing systems can be reconfigured at runtime and support partial reconfigurability which makes us able to execute tasks in a true multitasking manner. To manage such systems at runtime, a reconfigurable operating system is needed. The main part of this operating system is resource management unit which performs on-line scheduling and placement of hardware tasks at runtime. Reconfiguration overhead is an important obstacle that limits the performance of on-line scheduling algorithms in reconfigurable computing systems and increases the overall execution time. Configuration reusing (task reusing) can decrease reconfiguration overhead considerably, particularly in periodic applications or the applications in which the probability of tasks recurrence is high. In this paper, we present a technique called reusing-based scheduling (RBS), for on-line scheduling and placement in which configuration reusing is considered as a main characteristic in order to reduce reconfiguration overhead and decrease total execution time of the tasks. Several experiments have been conducted on the proposed algorithm. Obtained results show considerable improvement in overall execution time of the tasks.", "paper_title": "Configuration Reusing in On-Line Task Scheduling for Reconfigurable Computing Systems", "paper_id": "WOS:000290744700012"}