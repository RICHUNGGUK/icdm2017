{"auto_keywords": [{"score": 0.0440069794699844, "phrase": "mapreduce_cluster"}, {"score": 0.02231349723731641, "phrase": "mapreduce"}, {"score": 0.01035659031878488, "phrase": "job_energy_consumption"}, {"score": 0.007980573298431017, "phrase": "jcr"}, {"score": 0.00481495049065317, "phrase": "mapreduce_policies"}, {"score": 0.0044549056501745074, "phrase": "data-intensive_problems"}, {"score": 0.0044005599565517875, "phrase": "large-scale_mapreduce_cluster"}, {"score": 0.0040713749949601915, "phrase": "input-data_replication"}, {"score": 0.004038183610525504, "phrase": "intermediate-data_replication_policies"}, {"score": 0.003956379470617348, "phrase": "job_execution"}, {"score": 0.0036903962975894634, "phrase": "policy_combinations"}, {"score": 0.0036453427552753533, "phrase": "job_completion_reliability"}, {"score": 0.003250403288147613, "phrase": "mapreduce_job"}, {"score": 0.0031327496009959464, "phrase": "jec"}, {"score": 0.002573362191631126, "phrase": "extensive_scenarios"}, {"score": 0.0024903420152789135, "phrase": "different_scales"}, {"score": 0.0023418133729330303, "phrase": "analytical_results"}, {"score": 0.002322689143237591, "phrase": "mapreduce_managers"}, {"score": 0.002157433262687853, "phrase": "appropriate_poc"}], "paper_keywords": ["Intermediate-data replication", " job completion reliability", " job energy consumption", " MapReduce"], "paper_abstract": "Recently, MapReduce has been widely employed by many companies/organizations to tackle data-intensive problems over a large-scale MapReduce cluster. To solve machine/node failure which is inevitable in a MapReduce cluster, MapReduce employs several policies, such as input-data replication and intermediate-data replication policies. To speed up job execution, MapReduce allows reduce tasks to early fetch their required intermediate data. However, the impact of these policy combinations on the job completion reliability (JCR for short) and job energy consumption (JEC for short) of a MapReduce cluster was not clear, where JCR is the reliability with which a MapReduce job can be completed by the cluster, whereas JEC is the energy consumed by the cluster to complete the job. Therefore, in this study, we analyze the JCR and JEC of a MapReduce cluster on four policy combinations (POCs for short) derived from two typical intermediate-data replication policies and two typical reduce-task assignment policies. The four POCs are further compared in extensive scenarios, which not only consider jobs at different scales with various parameters, but also give a MapReduce cluster two extreme parallel execution capabilities and diverse bandwidths. The analytical results enable MapReduce managers to comprehend how these POCs impact the JCR and JEC of a cluster and then select an appropriate POC based on the characteristics of their own MapReduce jobs and clusters.", "paper_title": "Impact of MapReduce Policies on Job Completion Reliability and Job Energy Consumption", "paper_id": "WOS:000352728200014"}