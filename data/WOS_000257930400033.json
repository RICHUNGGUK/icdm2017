{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "network_flows"}, {"score": 0.0047283116134926645, "phrase": "instruction_transition_probabilities"}, {"score": 0.004088807948906792, "phrase": "malware_detection"}, {"score": 0.003767738552860633, "phrase": "instruction_transition_probability_matrix"}, {"score": 0.0036998728605395384, "phrase": "itpx"}, {"score": 0.003287482882222731, "phrase": "executable_code's_instruction_transition_patterns"}, {"score": 0.003056819704624705, "phrase": "simple_algorithm"}, {"score": 0.00297454367746853, "phrase": "executable_code"}, {"score": 0.00266693888510356, "phrase": "known_windows_portable_executable_files"}, {"score": 0.002391067964886602, "phrase": "non-executable_codes"}, {"score": 0.0021049977753042253, "phrase": "real_world"}], "paper_keywords": ["executable code", " malware detection", " IA-32 instruction"], "paper_abstract": "The ability to recognize quickly inside network flows to be executable is prerequisite for malware detection. For this purpose, we introduce an instruction transition probability matrix (ITPX) which is comprised of the IA-32 instruction sets and reveals the characteristics of executable code's instruction transition patterns. And then, we propose a simple algorithm to detect executable code inside network flows using a reference ITPX which is learned from the known Windows Portable Executable files. We have tested the algorithm with more than thousands of executable and non-executable codes. The results show that it is very promising enough to use in real world.", "paper_title": "Executable code recognition in network flows using instruction transition probabilities", "paper_id": "WOS:000257930400033"}