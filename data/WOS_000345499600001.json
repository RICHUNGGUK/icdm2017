{"auto_keywords": [{"score": 0.03903463041639035, "phrase": "rotate"}, {"score": 0.00481495049065317, "phrase": "complete_multi-agent"}, {"score": 0.004798541219863296, "phrase": "pathfinding_algorithm"}, {"score": 0.004765889452740394, "phrase": "multi-agent_pathfinding"}, {"score": 0.004718418626352615, "phrase": "mapp"}, {"score": 0.004717325943509345, "phrase": "relevant_problem"}, {"score": 0.004670335178371204, "phrase": "bibox"}, {"score": 0.004669254965563445, "phrase": "wide_range"}, {"score": 0.004527947981009528, "phrase": "video_games"}, {"score": 0.003963211180578005, "phrase": "minimal_sequence"}, {"score": 0.0037910145286595386, "phrase": "np-hard_problem"}, {"score": 0.0036015684625793775, "phrase": "multi-agent_pathfinding_problems"}, {"score": 0.003195414285736136, "phrase": "simple_pus_h"}, {"score": 0.0030460403366412126, "phrase": "post-processing_algorithm"}, {"score": 0.002984173420996039, "phrase": "redundant_moves"}, {"score": 0.002883836361935601, "phrase": "luna"}, {"score": 0.0028641729745364952, "phrase": "bekris"}, {"score": 0.002720916895509682, "phrase": "previous_publication"}, {"score": 0.0025409639091476363, "phrase": "latter_algorithm"}, {"score": 0.002497862210672172, "phrase": "smaller_class"}, {"score": 0.002447101794397243, "phrase": "biconnected_graphs"}, {"score": 0.0021049977753042253, "phrase": "randomly_generated_biconnected_instances"}], "paper_keywords": [""], "paper_abstract": "Multi-agent Pathfinding is a relevant problem in a wide range of domains, for example in robotics and video games research. Formally, the problem considers a graph consisting of vertices and edges, and a set of agents occupying vertices. An agent can only move to an unoccupied, neighbouring vertex, and the problem of finding the minimal sequence of moves to transfer each agent from its start location to its destination is an NP-hard problem. We present Push and Rotate, a new algorithm that is complete for Multi-agent Pathfinding problems in which there are at least two empty vertices. Push and Rotate first divides the graph into subgraphs within which it is possible for agents to reach any position of the subgraph, and then uses the simple pus h, swap, and rot ate operations to find a solution; a post-processing algorithm is also presented that eliminates redundant moves. Push and Rotate can be seen as extending Luna and Bekris's Push and Swap algorithm, which we showed to be incomplete in a previous publication. In our experiments we compare our approach with the Push and Swap, MAPP, and Bibox algorithms. The latter algorithm is restricted to a smaller class of instances as it requires biconnected graphs, but can nevertheless be considered state of the art due to its strong performance. Our experiments show that Push and Swap suffers from incompleteness, MAPP is generally not competitive with Push and Rotate, and Bibox is better than Push and Rotate on randomly generated biconnected instances, while Push and Rotate performs better on grids.", "paper_title": "Push and Rotate: a Complete Multi-agent Pathfinding Algorithm", "paper_id": "WOS:000345499600001"}