{"auto_keywords": [{"score": 0.03519805967499628, "phrase": "bl"}, {"score": 0.00481495049065317, "phrase": "flash_wear-leveling"}, {"score": 0.00467855218490191, "phrase": "static_data"}, {"score": 0.004513450434595191, "phrase": "strong_demand"}, {"score": 0.004449045430179066, "phrase": "flash_memory"}, {"score": 0.004385555408850022, "phrase": "enhanced_reliability"}, {"score": 0.0041703614123283165, "phrase": "improved_flash-memory_endurance"}, {"score": 0.003909065355459264, "phrase": "popular_implementation_designs"}, {"score": 0.003798231095121328, "phrase": "flash_translation_layer_protocol"}, {"score": 0.0036640806940633373, "phrase": "nand_flash_translation_layer"}, {"score": 0.0034841652338728447, "phrase": "block-level"}, {"score": 0.0032423089921154503, "phrase": "wear-leveling_mechanism"}, {"score": 0.0029740732099993706, "phrase": "wear-leveling_actions"}, {"score": 0.002910545717767559, "phrase": "entire_physical_address_space"}, {"score": 0.0028279422436488116, "phrase": "static_or_rarely_updated_data"}, {"score": 0.002708399936381754, "phrase": "memory-space_requirements"}, {"score": 0.0022950308685133224, "phrase": "realistic_trace"}, {"score": 0.002245975340642921, "phrase": "significantly_improved_endurance"}, {"score": 0.002213858893732994, "phrase": "ftl"}, {"score": 0.0021821915946356168, "phrase": "nftl"}, {"score": 0.0021049977753042253, "phrase": "limited_system_overhead"}], "paper_keywords": ["Flash memory", " wear leveling", " endurance", " reliability"], "paper_abstract": "Motivated by the strong demand for flash memory with enhanced reliability, this work attempts to achieve improved flash-memory endurance without substantially increasing overhead and without excessively modifying popular implementation designs such as the Flash Translation Layer protocol (FTL), NAND Flash Translation Layer protocol (NFTL), and Block-Level flash translation layer protocol (BL). A wear-leveling mechanism for moving data that are not updated is proposed to distribute wear-leveling actions over the entire physical address space, so that static or rarely updated data can be proactively moved and memory-space requirements can be minimized. The properties of the mechanism are then explored with various implementation considerations. A series of experiments based on a realistic trace demonstrates the significantly improved endurance of FTL, NFTL, and BL with limited system overhead.", "paper_title": "Improving Flash Wear-Leveling by Proactively Moving Static Data", "paper_id": "WOS:000272314600005"}