{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automotive_software_systems"}, {"score": 0.004682708592184678, "phrase": "exponential_increase"}, {"score": 0.004388035083357706, "phrase": "enhanced_requirements"}, {"score": 0.004347473906950474, "phrase": "functional_safety"}, {"score": 0.00418892838079239, "phrase": "software_systems"}, {"score": 0.00372965096877929, "phrase": "case_study"}, {"score": 0.003678023470672862, "phrase": "distributed_software_system"}, {"score": 0.003610292749660581, "phrase": "volvo_car_corporation"}, {"score": 0.003320561182494713, "phrase": "software_architects"}, {"score": 0.0030825404960282713, "phrase": "coupling_measures"}, {"score": 0.0030257422786589723, "phrase": "architectural_work"}, {"score": 0.0028087949095629955, "phrase": "complete_electrical_system"}, {"score": 0.0026195184143518713, "phrase": "significant_change"}, {"score": 0.0024091057723923857, "phrase": "new_testing_areas"}, {"score": 0.002331909406363425, "phrase": "product_quality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Automotive software system", " Quality metric", " Architectural change", " Maintainability", " Complexity", " Coupling"], "paper_abstract": "Background: In the past few decades exponential increase in the amount of software used in cars has been recorded together with enhanced requirements for functional safety of their embedded software. As the evolution of software systems in cars often entails changes to software architecture, it is important to be able to monitor their impact. Method: We conducted a case study on a distributed software system in cars at Volvo Car Corporation with the goal to develop, apply and evaluate measures of complexity and coupling which could support software architects in monitoring changes. Results: The results showed that two metrics - structural complexity and coupling measures - can guide architectural work and turn attention of architects to most complex subsystems. The results were confirmed by monitoring a complete electrical system of a vehicle under two releases. Conclusion: By applying the metrics after each significant change in the architecture, it is possible to verify that certain quality attributes have not deteriorated and to identify new testing areas. Using these metrics increases the product quality with respect to stability, reliability, and maintainability and also has potential to reduce long-term software development/maintenance costs. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Measuring the impact of changes to the complexity and coupling properties of automotive software systems", "paper_id": "WOS:000317322400009"}