{"auto_keywords": [{"score": 0.04967088836874542, "phrase": "user_interface"}, {"score": 0.008457507390704706, "phrase": "data_model"}, {"score": 0.00481495049065317, "phrase": "automatic_generation"}, {"score": 0.004712988631183401, "phrase": "use_case"}, {"score": 0.00440093312826378, "phrase": "use_case_model"}, {"score": 0.004307700591183651, "phrase": "desired_user_interface"}, {"score": 0.0042709653466524765, "phrase": "ui"}, {"score": 0.0041984140090404985, "phrase": "use_cases"}, {"score": 0.0035676056286816915, "phrase": "software_requirements_phase"}, {"score": 0.003374250301861101, "phrase": "software_requirements"}, {"score": 0.003316884515934182, "phrase": "identified_correlations"}, {"score": 0.0031102878400698143, "phrase": "concrete_software_requirements"}, {"score": 0.0026998264237910884, "phrase": "special_software_tool"}, {"score": 0.002586457551025025, "phrase": "executable_source_code"}, {"score": 0.0025315664299815537, "phrase": "different_ways"}, {"score": 0.0025099367332615794, "phrase": "user_interaction"}, {"score": 0.0021049977753042253, "phrase": "desired_functionality"}], "paper_keywords": [""], "paper_abstract": "The aim of this study is to identify the correlations between the use case model, data model and the desired user interface (UI). Since use cases describe the interaction between the users and the system, implemented through the user interface with the aim to change the state of the system, the correlation between these three components should be taken into account at the software requirements phase. In this study, the authors have introduced the meta-model of software requirements developed on the identified correlations. Based on this meta-model, it is possible to create a model of concrete software requirements, which enables not only the design and implementation of the user interface, but also the automation of this process. In order to prove the sustainability of this approach, they have developed a special software tool that performs the transformation of the model to an executable source code. They have considered different ways of user interaction with the system, and consequently, they have recommended the set of most common user interface templates. Thus the flexibility of the user interface is achieved, as the user interface of the same use case could be displayed in several different ways, while still maintaining the desired functionality.", "paper_title": "Model and software tool for automatic generation of user interface based on use case and data model", "paper_id": "WOS:000310517200010"}