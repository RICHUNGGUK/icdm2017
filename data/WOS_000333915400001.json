{"auto_keywords": [{"score": 0.03597261558944292, "phrase": "guest_vms"}, {"score": 0.015488924391631716, "phrase": "kernel-based_virtual_machine"}, {"score": 0.00481495049065317, "phrase": "opencl_support"}, {"score": 0.004779096955954111, "phrase": "gpgpu"}, {"score": 0.004655640997424794, "phrase": "heterogeneous_multicore_programming"}, {"score": 0.004569414098372132, "phrase": "open_computing_language"}, {"score": 0.004468037801239238, "phrase": "open_industrial_standard"}, {"score": 0.004434745755769205, "phrase": "parallel_programming"}, {"score": 0.00436890075128947, "phrase": "uniform_programming_model"}, {"score": 0.004256005669252138, "phrase": "heterogeneous_computing_devices"}, {"score": 0.004192818914065998, "phrase": "opencl"}, {"score": 0.0040997480534580065, "phrase": "system_virtualization_environments"}, {"score": 0.00399378014373321, "phrase": "resource_utilization"}, {"score": 0.003861534816807933, "phrase": "opencl_virtualization_framework"}, {"score": 0.0037899936065233183, "phrase": "api"}, {"score": 0.0037058116979705857, "phrase": "multiple_guest_virtual_machines"}, {"score": 0.003609989117581185, "phrase": "underlying_opencl_resources"}, {"score": 0.0030275511150487516, "phrase": "vm"}, {"score": 0.0028090313440881937, "phrase": "opencl_api_invocation"}, {"score": 0.0027363334666886912, "phrase": "proposed_virtualization_framework"}, {"score": 0.0025965187247488876, "phrase": "opencl_host"}, {"score": 0.0025388011374541546, "phrase": "primitive_nature"}, {"score": 0.0025198477493173165, "phrase": "api_remoting"}, {"score": 0.00244543519230361, "phrase": "small_virtualization_overhead"}, {"score": 0.002382124723569496, "phrase": "six_common_device-intensive_opencl_programs"}, {"score": 0.002177218756653181, "phrase": "effective_resource_utilization"}, {"score": 0.0021609589091422608, "phrase": "opencl_devices"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["OpenCL", " system virtualization", " GPU virtualization", " KVM", " API remoting"], "paper_abstract": "The importance of heterogeneous multicore programming is increasing, and Open Computing Language (OpenCL) is an open industrial standard for parallel programming that provides a uniform programming model for programmers to write efficient, portable code for heterogeneous computing devices. However, OpenCL is not supported in the system virtualization environments that are often used to improve resource utilization. In this paper, we propose an OpenCL virtualization framework based on Kernel-based Virtual Machine with API remoting to enable multiplexing of multiple guest virtual machines (guest VMs) over the underlying OpenCL resources. The framework comprises three major components: (i) an OpenCL library implementation in guest VMs for packing/unpacking OpenCL requests/responses; (ii) a virtual device, called virtio-CL, that is responsible for the communication between guest VMs and the hypervisor (also called the VM monitor); and (iii) a thread, called CL thread, that is used for the OpenCL API invocation. Although the overhead of the proposed virtualization framework is directly affected by the amount of data to be transferred between the OpenCL host and devices because of the primitive nature of API remoting, experiments demonstrated that our virtualization framework has a small virtualization overhead (mean of 6.8%) for six common device-intensive OpenCL programs and performs well when the number of guest VMs involved in the system increases. These results indirectly infer that the framework allows for effective resource utilization of OpenCL devices.Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Enabling OpenCL support for GPGPU in Kernel-based Virtual Machine", "paper_id": "WOS:000333915400001"}