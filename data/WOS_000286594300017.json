{"auto_keywords": [{"score": 0.004814968368950001, "phrase": "syntactic"}, {"score": 0.004583878086896926, "phrase": "matsuda_et_al"}, {"score": 0.0043638476591018275, "phrase": "icfp"}, {"score": 0.004073360429047148, "phrase": "popl"}, {"score": 0.003802135020791801, "phrase": "source-to-view_function"}, {"score": 0.0035141291835319682, "phrase": "original_source"}, {"score": 0.0034118234596993836, "phrase": "updated_view"}, {"score": 0.0032800186243040663, "phrase": "updated_source"}, {"score": 0.0031532895341013297, "phrase": "standard_consistency_conditions"}, {"score": 0.0024891269874339553, "phrase": "good_effect"}, {"score": 0.002146926767291475, "phrase": "techniques_side"}, {"score": 0.0021049977753042253, "phrase": "side_delivers"}], "paper_keywords": ["Design", " Languages", " program transformation", " view-update problem"], "paper_abstract": "Matsuda et al. [2007, ICFP] and Voigtlander [2009, POPL] introduced two techniques that given a source-to-view function provide an update propagation function mapping an original source and an updated view back to an updated source, subject to standard consistency conditions. Being fundamentally different in approach, both techniques have their respective strengths and weaknesses. Here we develop a synthesis of the two techniques to good effect. On the intersection of their applicability domains we achieve more than what a simple union of applying the techniques side by side delivers.", "paper_title": "Combining Syntactic and Semantic Bidirectionalization", "paper_id": "WOS:000286594300017"}