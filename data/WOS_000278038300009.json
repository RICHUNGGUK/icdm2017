{"auto_keywords": [{"score": 0.04221552420026915, "phrase": "different_granularities"}, {"score": 0.00481495049065317, "phrase": "adaptive_flash_translation_layer"}, {"score": 0.004737579882204798, "phrase": "high-performance_storage_systems"}, {"score": 0.004512814529823301, "phrase": "flash-memory_storage_systems"}, {"score": 0.004298666679374568, "phrase": "effective_and_efficient_management"}, {"score": 0.004229556887896042, "phrase": "flash-memory_space"}, {"score": 0.004094639048362357, "phrase": "critical_design_issue"}, {"score": 0.003964007795174772, "phrase": "space_management"}, {"score": 0.003900257249255497, "phrase": "different_management_costs"}, {"score": 0.0038375280115736958, "phrase": "mapping_efficiency"}, {"score": 0.0035386420095120706, "phrase": "address_translation_mechanism"}, {"score": 0.003107935254560724, "phrase": "logical_block_addresses"}, {"score": 0.003057910095857785, "phrase": "physical_block_addresses"}, {"score": 0.0030086877092638945, "phrase": "flash-memory_management"}, {"score": 0.0028425481299483254, "phrase": "high_performance"}, {"score": 0.002796782643988021, "phrase": "address_mapping"}, {"score": 0.002751751956416832, "phrase": "space_utilization"}, {"score": 0.002537216271965659, "phrase": "main_memory_requirements"}, {"score": 0.0024761702541879213, "phrase": "garbage_collection_overhead"}, {"score": 0.0023970487263732737, "phrase": "system_initialization_time"}, {"score": 0.00235843888868088, "phrase": "proper_management"}, {"score": 0.0023016843709107297, "phrase": "experimental_results"}, {"score": 0.0022281257694320433, "phrase": "proposed_adaptive_mechanism"}, {"score": 0.0021745003291048356, "phrase": "better_performance_improvement"}], "paper_keywords": ["Embedded systems", " flash translation layer", " flash-memory", " storage systems"], "paper_abstract": "While the capacity of flash-memory storage systems keeps increasing significantly, an effective and efficient management of flash-memory space has become a critical design issue. Different granularities in space management impose different management costs and mapping efficiency. In this paper, we will explore an address translation mechanism (AddrTM) that can dynamically and adaptively switch between different granularities in the mapping of logical block addresses into physical block addresses in flash-memory management. The objective is to provide high performance in address mapping and space utilization and, at the same time, to have the main memory requirements, the garbage collection overhead, and the system initialization time under proper management. The experimental results show that the proposed adaptive mechanism can provide better performance improvement and practicability than other well-known coarse-grained management mechanisms over realistic workloads.", "paper_title": "An Adaptive Flash Translation Layer for High-Performance Storage Systems", "paper_id": "WOS:000278038300009"}