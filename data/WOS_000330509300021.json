{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "requester-wins_hardware_transactional_memory"}, {"score": 0.004497762477097628, "phrase": "hardware_transactional_memory"}, {"score": 0.004130376386308024, "phrase": "existing_chip_multiprocessors"}, {"score": 0.003394891095032025, "phrase": "severe_performance_degradation"}, {"score": 0.003309124298009635, "phrase": "transient_and_persistent_livelock_conditions"}, {"score": 0.0031440159350875057, "phrase": "existing_techniques"}, {"score": 0.002372298201966367, "phrase": "simple_core-local_hardware_additions"}, {"score": 0.0021049977753042253, "phrase": "htm_designs"}], "paper_keywords": ["Contention management", " hardware transactional memory", " requester-wins conflict resolution"], "paper_abstract": "The simplicity of requester-wins Hardware Transactional Memory (HTM) makes it easy to incorporate in existing chip multiprocessors. Hence, such systems are expected to be widely available in the near future. Unfortunately, these implementations are prone to suffer severe performance degradation due to transient and persistent livelock conditions. This article shows that existing techniques are unable to mitigate this degradation effectively. It then proposes and evaluates four novel techniques-two software-based that employ information provided by the hardware and two that require simple core-local hardware additions-which have the potential to boost the performance of requester-wins HTM designs substantially.", "paper_title": "Techniques to Improve Performance in Requester-Wins Hardware Transactional Memory", "paper_id": "WOS:000330509300021"}