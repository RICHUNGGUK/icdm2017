{"auto_keywords": [{"score": 0.04973123561999454, "phrase": "traveling_salesman_game"}, {"score": 0.007277417512149171, "phrase": "np"}, {"score": 0.0055175653851149255, "phrase": "approximate_core"}, {"score": 0.00481495049065317, "phrase": "metric_traveling_salesman_games"}, {"score": 0.004745260932479212, "phrase": "cooperative_game"}, {"score": 0.00443308765153716, "phrase": "complete_graph"}, {"score": 0.00436890075128947, "phrase": "characteristic_function"}, {"score": 0.0043161190928529755, "phrase": "underlying_cost_matrix"}, {"score": 0.004253618550301311, "phrase": "c_n"}, {"score": 0.004141365648080381, "phrase": "minimum_cost_hamiltonian_tour"}, {"score": 0.003935192614078078, "phrase": "home_city"}, {"score": 0.003579046565851265, "phrase": "g._okamoto"}, {"score": 0.003409057326528229, "phrase": "triangle_inequality"}, {"score": 0.0031383410838018953, "phrase": "general_case"}, {"score": 0.003070340620983981, "phrase": "approximate_fair_cost_allocations"}, {"score": 0.002917331114260319, "phrase": "cycle_cover_game"}, {"score": 0.002861062731782219, "phrase": "fair_cost_allocation_vector"}, {"score": 0.002424450174817922, "phrase": "approximate_fair_cost_allocation_vector"}, {"score": 0.0023776656246300063, "phrase": "exact_fair_cost_allocation_vectors"}, {"score": 0.002337468583544366, "phrase": "polynomial_time_algorithm"}, {"score": 0.0022371907579775796, "phrase": "asymmetric_traveling_salesman_game"}], "paper_keywords": [""], "paper_abstract": "A traveling salesman game is a cooperative game G = (N, c(D)). Here N, the set of players is the set of cities (or the vertices of the complete graph) and CD is the characteristic function where D is the underlying cost matrix. For all S subset of C N, define c(D)(S) to be the cost of a minimum cost Hamiltonian tour through the vertices of S boolean OR {0} where 0 is not an element of N is called as the home city. Define Core(g) = {x is an element of R-N : x(N) = c(D)(N) and for all S subset of N, x(S) <= c(D)(S)} as the core of a traveling salesman game G. Okamoto [15] conjectured that for the traveling salesman game 9 = (N, c(D)) with D satisfying triangle inequality, the problem of testing whether Core(G) is empty or not is NP-hard. We prove that this conjecture is true. This result directly implies the NP-hardness for the general case when D is asymmetric. We also study approximate fair cost allocations for these games. For this, we introduce the cycle cover games and show that the core of a cycle cover game is non-empty by finding a fair cost allocation vector in polynomial time. For a traveling salesman game, let is an element of-Core(9) = {x is an element of R-N : x(N) >= c(D)(N) and for all S subset of N, x(S) <= epsilon (.) c(D)(S)} be an is an element of-approximate core, for a given epsilon > 1. By viewing an approximate fair cost allocation vector for this game as a sum of exact fair cost allocation vectors of several related cycle cover games, we provide a polynomial time algorithm demonstrating the non-emptiness of the log(2)(vertical bar N vertical bar - 1)-approximate core by exhibiting a vector in this approximate core for the asymmetric traveling salesman game. We also show that there exists an epsilon(0) > 1 such that it is NP-hard to decide whether is an element of(0)-Core(G) is empty or not.", "paper_title": "Approximate fair cost allocation in metric traveling salesman games", "paper_id": "WOS:000236483500007"}