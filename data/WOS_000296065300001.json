{"auto_keywords": [{"score": 0.04561838947368895, "phrase": "multi-class_label"}, {"score": 0.04112949191000256, "phrase": "code_word_matrix"}, {"score": 0.00481495049065317, "phrase": "ternary_bradley-terry"}, {"score": 0.004668957916795845, "phrase": "multi-class_classification"}, {"score": 0.004527371799277529, "phrase": "multi-class_classifier"}, {"score": 0.004435363840720883, "phrase": "bradley-terry_model"}, {"score": 0.0041703614123283165, "phrase": "multiple_binary_classifiers"}, {"score": 0.0035021127041237887, "phrase": "ternary_code"}, {"score": 0.0030327408069772293, "phrase": "binary_classifier"}, {"score": 0.0028221322455573624, "phrase": "forcible_decision"}, {"score": 0.0025992391074270097, "phrase": "boosting_algorithm"}, {"score": 0.002494466951433885, "phrase": "'don't_care'_category"}, {"score": 0.0023816257768353344, "phrase": "modified_decoding_method"}, {"score": 0.002309242063033298, "phrase": "bradley-terry"}, {"score": 0.0021821915946356168, "phrase": "fast_decoding_schemes"}, {"score": 0.0021377414429251647, "phrase": "heavy_computation"}, {"score": 0.0021049977753042253, "phrase": "existing_bradley-terry_model-based_decoding"}], "paper_keywords": ["Multi-class classification", " Bradley-Terry model", " Ensemble learning", " Decoding"], "paper_abstract": "A multi-class classifier based on the Bradley-Terry model predicts the multi-class label of an input by combining the outputs from multiple binary classifiers, where the combination should be a priori designed as a code word matrix. The code word matrix was originally designed to consist of +1 and -1 codes, and was later extended into deal with ternary code {+1,0,-1}, that is, allowing 0 codes. This extension has seemed to work effectively but, in fact, contains a problem: a binary classifier forcibly categorizes examples with 0 codes into either +1 or -1, but this forcible decision makes the prediction of the multi-class label obscure. In this article, we propose a Boosting algorithm that deals with three categories by allowing a 'don't care' category corresponding to 0 codes, and present a modified decoding method called a 'ternary' Bradley-Terry model. In addition, we propose a couple of fast decoding schemes that reduce the heavy computation by the existing Bradley-Terry model-based decoding.", "paper_title": "Ternary Bradley-Terry model-based decoding for multi-class classification and its extensions", "paper_id": "WOS:000296065300001"}