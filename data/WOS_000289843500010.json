{"auto_keywords": [{"score": 0.04950307960332803, "phrase": "web_services"}, {"score": 0.015719716506582538, "phrase": "behavioral_compatibility"}, {"score": 0.0055232212949603635, "phrase": "similar_behavior"}, {"score": 0.004864243758130989, "phrase": "behavioral_similarity"}, {"score": 0.004615202066192795, "phrase": "service-oriented_computing_implementation"}, {"score": 0.004450568197899267, "phrase": "users'_needs"}, {"score": 0.004317848984770719, "phrase": "component_web_services"}, {"score": 0.004227297479492541, "phrase": "whole_composition"}, {"score": 0.003942877273973905, "phrase": "proper_termination"}, {"score": 0.0036332251283046997, "phrase": "colored_petri_nets"}, {"score": 0.0035569798792881935, "phrase": "specific_property"}, {"score": 0.003287482882222731, "phrase": "well-structured_web_services"}, {"score": 0.0031035049228517715, "phrase": "run_time"}, {"score": 0.0028944757265206332, "phrase": "effective_approaches"}, {"score": 0.0026508118618120114, "phrase": "user-friendly_tool"}, {"score": 0.0025560719383290356, "phrase": "formal_definition"}, {"score": 0.002540613621469429, "phrase": "context-independent_similarity"}, {"score": 0.002502374576203785, "phrase": "web_service"}, {"score": 0.0024572448003065423, "phrase": "alternative_peer"}, {"score": 0.0023408288327263316, "phrase": "service_substitutability"}, {"score": 0.0021049977753042253, "phrase": "automatic_way"}], "paper_keywords": ["Behavioral compatibility", " behavioral similarity", " Petri net (PN)", " service composition", " Web service"], "paper_abstract": "Web services have become the technology of choice for service-oriented computing implementation, where Web services can be composed in response to some users' needs. It is critical to verify the compatibility of component Web services to ensure the correctness of the whole composition in which these components participate. Traditionally, two conditions need to be satisfied during the verification of compatibility: reachable termination and proper termination. Unfortunately, it is complex and time consuming to verify those two conditions. To reduce the complexity of this verification, we model Web services using colored Petri nets (PNs) so that a specific property of their structures is looked into, namely, well structuredness. We prove that only reachable termination needs to be satisfied when verifying behavioral compatibility among well-structured Web services. When a composition is declared as valid and in the case where one of its component Web services fails at run time, an alternative one with similar behavior needs to come into play as a substitute. Thus, it is important to develop effective approaches that permit one to analyze the similarity of Web services. Although many existing approaches utilize PNs to analyze behavioral compatibility, few of them explore further appropriate definitions of behavioral similarity and provide a user-friendly tool with automatic verification. In this paper, we introduce a formal definition of context-independent similarity and show that a Web service can be substituted by an alternative peer of similar behavior without intervening other Web services in the composition. Therefore, the cost of verifying service substitutability is largely reduced. We also provide an algorithm for the verification and implement it in a tool. Using the tool, the verification of behavioral similarity of Web services can be performed in an automatic way.", "paper_title": "A Petri Net Approach to Analyzing Behavioral Compatibility and Similarity of Web Services", "paper_id": "WOS:000289843500010"}