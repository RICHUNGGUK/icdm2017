{"auto_keywords": [{"score": 0.03218377267625622, "phrase": "local_state"}, {"score": 0.03196536616215997, "phrase": "honest_parties"}, {"score": 0.00481495049065317, "phrase": "common_coin"}, {"score": 0.004552648949390462, "phrase": "randomized_distributed_protocols"}, {"score": 0.004457995891964028, "phrase": "dishonest_majority"}, {"score": 0.004215057618794356, "phrase": "cleve_stoc_'"}, {"score": 0.004098578483988551, "phrase": "honest_majority"}, {"score": 0.003999292102785413, "phrase": "-round_protocols"}, {"score": 0.003957477564354679, "phrase": "common_perfectly_unbiased_coins"}, {"score": 0.003916098498242888, "phrase": "general_completeness_theorems"}, {"score": 0.0038887521594153608, "phrase": "multi-party_secure_protocols"}, {"score": 0.003848088904418221, "phrase": "perfectly_secure_channels_model"}, {"score": 0.0036382660173943393, "phrase": "multi-party_protocols"}, {"score": 0.0035129562812850784, "phrase": "local_secret_values"}, {"score": 0.0034038593017883295, "phrase": "malicious_parties"}, {"score": 0.003286596407873823, "phrase": "resulting_common_coin"}, {"score": 0.0030747771905143273, "phrase": "side-channel_attacks"}, {"score": 0.0028765701985514294, "phrase": "-round_protocol"}, {"score": 0.002826562521633885, "phrase": "unbiased_common_coin"}, {"score": 0.0026722904884984348, "phrase": "computationally_unbounded_statically_scheduled_byzantine_faults"}, {"score": 0.0025264171945423254, "phrase": "memory_leakage_model"}, {"score": 0.0024999636244840647, "phrase": "akavia"}, {"score": 0.002482488612324407, "phrase": "goldwasser"}, {"score": 0.0024651226057158635, "phrase": "vaikuntanathan"}, {"score": 0.002405309378904663, "phrase": "distributed_setting"}, {"score": 0.002298044430178591, "phrase": "collective_coin_flipping"}, {"score": 0.002289993730291136, "phrase": "-leakage-resilient_verifiable_secret_sharing"}, {"score": 0.002195552442011313, "phrase": "ordinary_vss"}, {"score": 0.0021725557397878565, "phrase": "secrecy_guarantees"}, {"score": 0.0021049977753042253, "phrase": "individual_shares"}], "paper_keywords": ["Coin tossing", " Leakage resilience", " Cryptography"], "paper_abstract": "The ability to collectively toss a common coin among parties in the presence of faults is an important primitive in the arsenal of randomized distributed protocols. In the case of dishonest majority, it was shown to be impossible to achieve less than bias in rounds (Cleve STOC '86). In the case of honest majority, in contrast, unconditionally secure -round protocols for generating common perfectly unbiased coins follow from general completeness theorems on multi-party secure protocols in the perfectly secure channels model (e.g., BGW, CCD STOC '88). However, in the multi-party protocols with honest majority, parties must generate and hold local secret values which are assumed to be perfectly hidden from malicious parties: an assumption which is crucial to proving the resulting common coin is unbiased. This assumption unfortunately does not seem to hold in practice, as attackers can launch side-channel attacks on the local state of honest parties and leak information on their secrets. In this work, we present an -round protocol for collectively generating an unbiased common coin, in the presence of leakage on the local state of the honest parties. We tolerate computationally unbounded statically scheduled Byzantine faults and in addition a -fraction leakage on each (honest) party's secret state. Our results hold in the memory leakage model (of Akavia, Goldwasser, Vaikuntanathan '08) adapted to the distributed setting. Another contribution of our work is a tool we use to achieve collective coin flipping-leakage-resilient verifiable secret sharing (VSS). Informally, this is a variant of ordinary VSS in which secrecy guarantees are maintained even if information is leaked on individual shares of the secret.", "paper_title": "Leakage-resilient coin tossing", "paper_id": "WOS:000336453000001"}