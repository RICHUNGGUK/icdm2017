{"auto_keywords": [{"score": 0.043528350819261416, "phrase": "rtec"}, {"score": 0.00481495049065317, "phrase": "event_recognition"}, {"score": 0.004724878518219719, "phrase": "symbolic_event_recognition"}, {"score": 0.004571269461883144, "phrase": "time-stamped_events"}, {"score": 0.004360412703519539, "phrase": "high-level_composite_events"}, {"score": 0.004100712177044264, "phrase": "event_calculus_dialect"}, {"score": 0.00406214911915987, "phrase": "novel_implementation"}, {"score": 0.0038930368103015467, "phrase": "efficient_event_recognition"}, {"score": 0.003820144626025562, "phrase": "large_data_streams"}, {"score": 0.0036958398682001015, "phrase": "rather_complex_events"}, {"score": 0.003626626504149897, "phrase": "'two_people"}, {"score": 0.003525220627709056, "phrase": "simple_primitives"}, {"score": 0.003378385493203297, "phrase": "filtering_modules"}, {"score": 0.0029454679553901613, "phrase": "event_data"}, {"score": 0.00266693888510356, "phrase": "already_recognised_events"}, {"score": 0.0026293540353514075, "phrase": "new_events"}, {"score": 0.002519739850807611, "phrase": "data_revision"}, {"score": 0.00240328454980006, "phrase": "complexity_analysis"}, {"score": 0.0022385926290967263, "phrase": "real-time_event_recognition"}, {"score": 0.0021656385587456952, "phrase": "performance_requirements"}, {"score": 0.0021049977753042253, "phrase": "event_processing_use_cases"}], "paper_keywords": ["Event pattern matching", " event processing", " action language"], "paper_abstract": "Systems for symbolic event recognition accept as input a stream of time-stamped events from sensors and other computational devices, and seek to identify high-level composite events, collections of events that satisfy some pattern. RTEC is an Event Calculus dialect with novel implementation and 'windowing' techniques that allow for efficient event recognition, scalable to large data streams. RTEC supports the expression of rather complex events, such as 'two people are fighting', using simple primitives. It can operate in the absence of filtering modules, as it is only slightly affected by data that are irrelevant to the events we want to recognise. Furthermore, RTEC can deal with applications where event data arrive with a (variable) delay from, and are revised by, the underlying sources. RTEC can update already recognised events and recognise new events when data arrive with a delay or following data revision. We evaluate RTEC both theoretically, presenting a complexity analysis, and experimentally, using two real-world applications. The evaluation shows that RTEC can support real-time event recognition and is capable of meeting the performance requirements identified in a survey of event processing use cases.", "paper_title": "An Event Calculus for Event Recognition", "paper_id": "WOS:000351393500002"}