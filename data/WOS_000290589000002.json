{"auto_keywords": [{"score": 0.04606292823894879, "phrase": "short_text_snippets"}, {"score": 0.010612387000973441, "phrase": "core_terms"}, {"score": 0.01020142137192291, "phrase": "termcut"}, {"score": 0.00532766377243208, "phrase": "proposed_method"}, {"score": 0.004701556483912018, "phrase": "new_clustering_strategy"}, {"score": 0.0036167509502276294, "phrase": "short_text_snippet"}, {"score": 0.003531474887552889, "phrase": "weighted_edge"}, {"score": 0.0030602966787192745, "phrase": "core_term"}, {"score": 0.002372103459168231, "phrase": "different_types"}, {"score": 0.0022434880661725493, "phrase": "search_results"}, {"score": 0.002208035721125305, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_clustering_algorithms"}], "paper_keywords": ["Clustering", " Short text clustering", " TermCut"], "paper_abstract": "A new clustering strategy, TermCut, is presented to cluster short text snippets by finding core terms in the corpus. We model the collection of short text snippets as a graph in which each vertex represents a piece of short text snippet and each weighted edge between two vertices measures the relationship between the two vertices. TermCut is then applied to recursively select a core term and bisect the graph such that the short text snippets in one part of the graph contain the term, whereas those snippets in the other part do not. We apply the proposed method on different types of short text snippets, including questions and search results. Experimental results show that the proposed method outperforms state-of-the-art clustering algorithms for clustering short text snippets.", "paper_title": "Short text clustering by finding core terms", "paper_id": "WOS:000290589000002"}