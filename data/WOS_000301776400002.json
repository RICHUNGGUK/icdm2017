{"auto_keywords": [{"score": 0.0443587048584781, "phrase": "mapreduce"}, {"score": 0.0339994611385401, "phrase": "haloop"}, {"score": 0.00481495049065317, "phrase": "large-scale_iterative_data_analysis"}, {"score": 0.004658426838467567, "phrase": "large-scale_data_mining"}, {"score": 0.00433645229352341, "phrase": "new_types"}, {"score": 0.00428892403807229, "phrase": "highly_scalable_data-intensive_computing_platforms"}, {"score": 0.004014452814186653, "phrase": "built-in_support"}, {"score": 0.003778253716938922, "phrase": "data_mining"}, {"score": 0.00373682045166829, "phrase": "web_ranking"}, {"score": 0.0036958398682001015, "phrase": "graph_analysis"}, {"score": 0.0036352070472201086, "phrase": "model_fitting"}, {"score": 0.003478321590910367, "phrase": "extended_version"}, {"score": 0.003097865379563127, "phrase": "hadoop_mapreduce_framework"}, {"score": 0.0028993944292191433, "phrase": "iterative_applications"}, {"score": 0.00282048824450047, "phrase": "existing_hadoop_programs"}, {"score": 0.002669042572650594, "phrase": "inter-iteration_caching_mechanisms"}, {"score": 0.0026252106881752067, "phrase": "loop-aware_scheduler"}, {"score": 0.002497976173193543, "phrase": "fault-tolerance_properties"}, {"score": 0.0024434201175883674, "phrase": "automatic_cache_recovery"}, {"score": 0.0022741894748181243, "phrase": "real_applications"}, {"score": 0.0022492129111567802, "phrase": "real_datasets"}], "paper_keywords": ["Large-scale analytics", " Data-intensive computing", " Mapreduce", " Cloud data management"], "paper_abstract": "The growing demand for large-scale data mining and data analysis applications has led both industry and academia to design new types of highly scalable data-intensive computing platforms. MapReduce has enjoyed particular success. However, MapReduce lacks built-in support for iterative programs, which arise naturally in many applications including data mining, web ranking, graph analysis, and model fitting. This paper (This is an extended version of the VLDB 2010 paper \"HaLoop: Efficient Iterative Data Processing on Large Clusters\" PVLDB 3(1):285-296, 2010.) presents HaLoop, a modified version of the Hadoop MapReduce framework, that is designed to serve these applications. HaLoop allows iterative applications to be assembled from existing Hadoop programs without modification, and significantly improves their efficiency by providing inter-iteration caching mechanisms and a loop-aware scheduler to exploit these caches. HaLoop retains the fault-tolerance properties of MapReduce through automatic cache recovery and task re-execution. We evaluated HaLoop on a variety of real applications and real datasets. Compared with Hadoop, on average, HaLoop improved runtimes by a factor of 1.85 and shuffled only 4 % as much data between mappers and reducers in the applications that we tested.", "paper_title": "The HaLoop approach to large-scale iterative data analysis", "paper_id": "WOS:000301776400002"}