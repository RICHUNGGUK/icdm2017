{"auto_keywords": [{"score": 0.0317374253509353, "phrase": "asic"}, {"score": 0.00481495049065317, "phrase": "area-efficient_configurable_asic_cores"}, {"score": 0.004535124351828787, "phrase": "efficient_compromise"}, {"score": 0.0041703614123283165, "phrase": "even_coarse-grained_reconfigurable_architectures"}, {"score": 0.003999089046152065, "phrase": "optimization_opportunities"}, {"score": 0.003857871979942733, "phrase": "desired_application"}, {"score": 0.0035473867669654174, "phrase": "specific_set"}, {"score": 0.0032036590920314725, "phrase": "custom_array"}, {"score": 0.003053598205821532, "phrase": "design_space"}, {"score": 0.0028758391869611374, "phrase": "manual_creation"}, {"score": 0.0028245516301681713, "phrase": "customized_reprogrammable_architectures"}, {"score": 0.0027575842698911173, "phrase": "labor-intensive_process"}, {"score": 0.002692200353719145, "phrase": "high_design_costs"}, {"score": 0.002597012212823168, "phrase": "automatic_reconfigurable_architecture_generation"}, {"score": 0.00247529638625566, "phrase": "configurable_asic"}, {"score": 0.0022352169832099153, "phrase": "fpga_solution"}, {"score": 0.0022085455097790537, "phrase": "embedded_multipliers"}, {"score": 0.0021304214257321, "phrase": "standard_cell_implementation"}, {"score": 0.0021049977753042253, "phrase": "individual_circuits"}], "paper_keywords": ["reconfigurable architecture", " logic design and synthesis"], "paper_abstract": "Reconfigurable hardware has been shown to provide an efficient compromise between the flexibility of software and the performance of hardware. However, even coarse-grained reconfigurable architectures target the general case and miss optimization opportunities present if characteristics of the desired application set are known. Restricting the structure to support a class or a specific set of algorithms can increase efficiency while still providing flexibility within that set. By generating a custom array for a given computation domain, we explore the design space between an ASIC and an FPGA. However, the manual creation of these customized reprogrammable architectures would be a labor-intensive process, leading to high design costs. Instead, we propose automatic reconfigurable architecture generation specialized to given application sets. This paper discusses configurable ASIC (cASIC) architecture generation that creates hardware on average up to 12.3x smaller than an FPGA solution with embedded multipliers and 2.2x smaller than a standard cell implementation of individual circuits.", "paper_title": "Automatic design of area-efficient configurable ASIC cores", "paper_id": "WOS:000245092100007"}