{"auto_keywords": [{"score": 0.03983926434466607, "phrase": "data_types"}, {"score": 0.004739056045644449, "phrase": "size-change_termination_principle"}, {"score": 0.00464008036314079, "phrase": "lee"}, {"score": 0.004591267238491991, "phrase": "jones"}, {"score": 0.004542443084135373, "phrase": "ben-amram"}, {"score": 0.004173244935967375, "phrase": "large_class"}, {"score": 0.004064117897000019, "phrase": "significant_limitation"}, {"score": 0.003833981445117684, "phrase": "sct"}, {"score": 0.003270092550315648, "phrase": "size-change_principle"}, {"score": 0.0032014433546265694, "phrase": "non-well_founded_data_types"}, {"score": 0.0030521898646210413, "phrase": "integer_data_types"}, {"score": 0.0030039966201398966, "phrase": "extended_size-change_principle"}, {"score": 0.0029253546782349875, "phrase": "abstract_interpretation"}, {"score": 0.0028487656293168795, "phrase": "convex_polyhedra"}, {"score": 0.0027741761880779535, "phrase": "size-change_graphs"}, {"score": 0.0024947959375982614, "phrase": "ljb_size-change_termination"}, {"score": 0.002378408229095287, "phrase": "subject_language_independent_shared_library"}, {"score": 0.0021049977753042253, "phrase": "core-c."}], "paper_keywords": [""], "paper_abstract": "Despite its simplicity, the size-change termination principle, presented by Lee, Jones and Ben-Amram in [LJB01], is surprisingly strong and is able to show termination for a large class of programs. A significant limitation for its use, however, is the fact that the SCT requires data types to be well-founded, and that all mechanisms used to determine termination must involve decreases in these global, well-founded partial orders. Following is an extension of the size-change principle that allows for non-well founded data types, and a realization of this principle for integer data types. The extended size-change principle is realized through combining abstract interpretation over the domain of convex polyhedra with the use of size-change graphs. In the cases when data types are well founded, the method handles every case that is handled by LJB size-change termination. The method has been implemented in a subject language independent shared library, libesct (available at [Ave05a]), as well as for the ANSI C specializer C-Mix(II), handling a subset of its internal language Core-C.", "paper_title": "Size-change termination and bound analysis", "paper_id": "WOS:000238090800013"}