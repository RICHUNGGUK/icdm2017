{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java_programs"}, {"score": 0.04951738916270167, "phrase": "scenario-based_specifications"}, {"score": 0.043726272486193665, "phrase": "safety_consistency"}, {"score": 0.042988466235385096, "phrase": "mandatory_consistency"}, {"score": 0.004539005582217309, "phrase": "uml_sequence_diagrams"}, {"score": 0.004304144138805271, "phrase": "runtime_verification"}, {"score": 0.003939296259436904, "phrase": "forbidden_scenario"}, {"score": 0.003479692058963528, "phrase": "reference_scenario"}, {"score": 0.0027307746993761035, "phrase": "program_execution"}, {"score": 0.0025587867729949037, "phrase": "instrumented_program"}, {"score": 0.0025286975935774245, "phrase": "random_test_cases"}, {"score": 0.0023139986108451967, "phrase": "collected_program_execution"}, {"score": 0.002181069180139225, "phrase": "testing_tool"}, {"score": 0.0021049977753042253, "phrase": "fully_automatic_and_push-button_fashion"}], "paper_keywords": [""], "paper_abstract": "In this paper, we use UML sequence diagrams as scenario-based specifications, and give the solution to runtime verification of Java programs for the safety consistency and the mandatory consistency. The safety consistency requires that any forbidden scenario described by a given sequence diagram never happens during the execution of a program, and the mandatory consistency requires that if a reference scenario described by the given sequence diagrams occurs during the execution of a program, it must immediately adhere to a scenario described by the other given sequence diagram. In the solution, we first instrument the program under verification so as to gather the program execution traces related to a given scenario-based specification; then we drive the instrumented program by random test cases so as to generate the program execution traces; last we check if the collected program execution traces satisfy the given specification. Our work leads to a testing tool which may proceed in a fully automatic and push-button fashion.", "paper_title": "Runtime verification of Java programs for scenario-based specifications", "paper_id": "WOS:000238387000008"}