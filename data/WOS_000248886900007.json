{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "python_language_wrapper"}, {"score": 0.00376293585033711, "phrase": "interactive_scripting_environment"}, {"score": 0.0034995881411519925, "phrase": "scientific_computing"}, {"score": 0.003254610516477302, "phrase": "seamless_translation"}, {"score": 0.0031614748814351823, "phrase": "high_level_script_codes"}, {"score": 0.003070996252787868, "phrase": "highly_optimized_native_language_executables"}, {"score": 0.002814759530655965, "phrase": "parallel_systems"}, {"score": 0.0027341763737751467, "phrase": "high_performance_hardware"}, {"score": 0.002655894070657161, "phrase": "potential_lack"}, {"score": 0.002542642270762272, "phrase": "scripting_language_interpreter"}, {"score": 0.002469830206270585, "phrase": "performance_results"}, {"score": 0.0021049977753042253, "phrase": "invested_programmer's_effort"}], "paper_keywords": ["Phython compilation", " static typing", " high performance parallel computing", " rapid application development", " scripting languages"], "paper_abstract": "This paper presents a design and implementation of a system that leverages interactive scripting environment to the needs of scientific computing. The system allows seamless translation of high level script codes to highly optimized native language executables that can be ported to parallel systems with high performance hardware and potential lack of the scripting language interpreter. Performance results are given to show various usage scenarios that differ in terms of invested programmer's effort and resulting performance gains.", "paper_title": "High performance development for high end computing with Python language wrapper (PLW)", "paper_id": "WOS:000248886900007"}