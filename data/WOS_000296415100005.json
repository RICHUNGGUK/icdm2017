{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.004647442352794694, "phrase": "openpgp_secret_keyrings"}, {"score": 0.004355348791987061, "phrase": "cuda"}, {"score": 0.004278807087784626, "phrase": "graphics_processing_units"}, {"score": 0.00387011040370557, "phrase": "private_keyrings"}, {"score": 0.0038246602895705643, "phrase": "openpgp_cryptosystems"}, {"score": 0.003459191419478298, "phrase": "possible_passphrases"}, {"score": 0.0031285355811105945, "phrase": "openpgp_standard"}, {"score": 0.0030554300179552415, "phrase": "software_packages"}, {"score": 0.0030195184114140063, "phrase": "gnupg"}, {"score": 0.0029489527539649737, "phrase": "tenfold_speed"}, {"score": 0.002498961723129626, "phrase": "pgp."}, {"score": 0.0023139986108451967, "phrase": "gpu_architecture"}], "paper_keywords": ["Cryptanalysis", " Graphics Processing Units", " CUDA", " OpenPGP"], "paper_abstract": "We describe the implementation, based on the Compute Unified Device Architecture (CUDA) for Graphics Processing Units (GPU), of a novel and very effective approach to quickly test passphrases used to protect private keyrings of OpenPGP cryptosystems. Our combination of algorithm and implementation, reduces the time required to test a set of possible passphrases by three-orders of magnitude with respect to an attack based on the procedure described in the OpenPGP standard and implemented by software packages like GnuPG, and a tenfold speed up if compared to our highly tuned CPU implementation. Our solution can be considered a replacement and an extension of pgpcrack, a utility used in the past for attacking PGP. The optimizations described can be applied to other cryptosystems and confirm that the GPU architecture is also very effective for running applications that make extensive (if not exclusive) use of integer operations. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "A fast, GPU based, dictionary attack to OpenPGP secret keyrings", "paper_id": "WOS:000296415100005"}