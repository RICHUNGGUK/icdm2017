{"auto_keywords": [{"score": 0.04821371094523721, "phrase": "query_point"}, {"score": 0.04730620167653875, "phrase": "road_network"}, {"score": 0.044340662163821175, "phrase": "dijkstra's_algorithm"}, {"score": 0.010353303818369412, "phrase": "present_paper"}, {"score": 0.0074261974515409754, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "lbs_based"}, {"score": 0.004776853267973129, "phrase": "road_network_distance"}, {"score": 0.004682917599491709, "phrase": "shortest_paths"}, {"score": 0.0044826811976193485, "phrase": "essential_operation"}, {"score": 0.004377077848734575, "phrase": "location-based_services"}, {"score": 0.004042635935882651, "phrase": "shortest_path"}, {"score": 0.003947358102140903, "phrase": "target_point"}, {"score": 0.003531474887552889, "phrase": "search_areas"}, {"score": 0.003503497128638102, "phrase": "road_network_overlap"}, {"score": 0.0034073030552032304, "phrase": "total_number"}, {"score": 0.0032227404824789626, "phrase": "query_points"}, {"score": 0.002837451022172113, "phrase": "road_network_node"}, {"score": 0.002792638947473095, "phrase": "searched_area"}, {"score": 0.0026836723685046407, "phrase": "deng_et_al"}, {"score": 0.0026412824985309323, "phrase": "lbc_approach"}, {"score": 0.002508073621696602, "phrase": "search_area"}, {"score": 0.002147333949483224, "phrase": "empirical_evaluations"}], "paper_keywords": ["A* algorithm", " road network", " POI query", " incremental Euclidean restriction"], "paper_abstract": "Searching for the shortest paths from a query point to several target points on a road network is an essential operation for several types of queries in location-based services. This search can be performed using Dijkstra's algorithm. Although the A* algorithm is faster than Dijkstra's algorithm for finding the shortest path from a query point to a target point, the A* algorithm is not so fast to find all paths between each point and the query point when several target points are given. In this case, the search areas on road network overlap for each search, and the total number of operations at each node is increased, especially when the number of query points increases. In the present paper, we propose the single-source multi-target A* (SSMTA*) algorithm, which is a multi-target version of the A* algorithm. The SSMTA* algorithm guarantees at most one operation for each road network node, and the searched area on road network is smaller than that of Dijkstra's algorithm. Deng et al. proposed the LBC approach with the same objective. However, several heaps are used to manage the search area on the road network and the contents in each heap must always be kept the same in their method. This operation requires much processing time. Since the proposed method uses only one heap, such content synchronization is not necessary. The present paper demonstrates through empirical evaluations that the proposed method outperforms other similar methods.", "paper_title": "Incremental Single-Source Multi-Target A* Algorithm for LBS Based on Road Network Distance", "paper_id": "WOS:000319085800005"}