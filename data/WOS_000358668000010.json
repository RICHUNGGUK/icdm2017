{"auto_keywords": [{"score": 0.02654504623327361, "phrase": "fault_resilience_mechanisms"}, {"score": 0.00481495049065317, "phrase": "comprehensive_fault_resilience_mechanisms"}, {"score": 0.004642669281385518, "phrase": "hpc"}, {"score": 0.004558758279017342, "phrase": "exascale"}, {"score": 0.004212453011596424, "phrase": "fixed_power_limit"}, {"score": 0.004061584718427419, "phrase": "soft_faults"}, {"score": 0.004012500850311087, "phrase": "electronic_circuits"}, {"score": 0.003916098498242888, "phrase": "increasingly_significant_problem"}, {"score": 0.0034887749053459584, "phrase": "incorrect_results"}, {"score": 0.003384262486955773, "phrase": "extensive_work"}, {"score": 0.0033433365160336842, "phrase": "program_resilience"}, {"score": 0.003223494720348768, "phrase": "generic_mechanisms"}, {"score": 0.003089080923888397, "phrase": "algorithm-specific_error_detection"}, {"score": 0.0029965060407413898, "phrase": "effective_use"}, {"score": 0.0029066973917258655, "phrase": "detailed_understanding"}, {"score": 0.0023776656246300063, "phrase": "faulttelescope"}, {"score": 0.0022371907579775796, "phrase": "actionable_insights"}, {"score": 0.0021966859554037174, "phrase": "program_vulnerabilities"}, {"score": 0.0021049977753042253, "phrase": "intuitive_way"}], "paper_keywords": ["Soft faults", " High-performance computing", " Numerical errors", " Fault resilience"], "paper_abstract": "As HPC systems approach Exascale, their circuit features will shrink while their overall size will grow, both at a fixed power limit. These trends imply that soft faults in electronic circuits will become an increasingly significant problem for programs that run on these systems, causing them to occasionally crash or worse, silently return incorrect results. This is motivating extensive work on program resilience to such faults, ranging from generic mechanisms such as replication or checkpoint/restart to algorithm-specific error detection and resilience mechanisms. Effective use of such mechanisms requires a detailed understanding of (1) which vulnerable parts of the program are most worth protecting and (2) the performance and resilience impact of fault resilience mechanisms on the program. This paper presents FaultTelescope, a tool that combines these two and generates actionable insights by presenting program vulnerabilities and impact of fault resilience mechanisms in an intuitive way.", "paper_title": "A framework for evaluating comprehensive fault resilience mechanisms in numerical programs", "paper_id": "WOS:000358668000010"}