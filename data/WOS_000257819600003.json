{"auto_keywords": [{"score": 0.04763407945340126, "phrase": "cache-oblivious_techniques"}, {"score": 0.004815112813718618, "phrase": "cache"}, {"score": 0.004438250823243621, "phrase": "theory_community"}, {"score": 0.004361428012479218, "phrase": "optimal_asymptotic_bounds"}, {"score": 0.004067152645111547, "phrase": "arbitrary_memory_hierarchy"}, {"score": 0.003950453462399077, "phrase": "optimal_performance"}, {"score": 0.003837089839193524, "phrase": "hardware_platform"}, {"score": 0.0038148090091532933, "phrase": "specific_tuning"}, {"score": 0.0036411406244705557, "phrase": "autonomous_databases"}, {"score": 0.0035366216368204182, "phrase": "hardware_architectures"}, {"score": 0.0030042210975126616, "phrase": "memory_query_processor"}, {"score": 0.002867348342846275, "phrase": "inherent_limitations"}, {"score": 0.002817639725689939, "phrase": "cache-oblivious_approach"}, {"score": 0.0026736111900632934, "phrase": "upcoming_hardware_architectures"}, {"score": 0.0025967927629150715, "phrase": "cache-oblivious_technique"}, {"score": 0.002551762519273805, "phrase": "sophisticated_algorithm_design"}, {"score": 0.00249293148301837, "phrase": "comparable_performance"}, {"score": 0.0023932142697579506, "phrase": "development-time_effort"}, {"score": 0.0022974765563692776, "phrase": "performance_achievement"}, {"score": 0.0022576249214220187, "phrase": "reduced_ownership_cost"}, {"score": 0.0021049977753042253, "phrase": "multi-threading_processors"}], "paper_keywords": ["algorithms", " measurement", " performance", " cache-oblivious", " cache-conscious", " data caches", " chip multiprocessors", " simultaneous multithreading"], "paper_abstract": "Cache-oblivious techniques, proposed in the theory community, have optimal asymptotic bounds on the amount of data transferred between any two adjacent levels of an arbitrary memory hierarchy. Moreover, this optimal performance is achieved without any hardware platform specific tuning. These properties are highly attractive to autonomous databases, especially because the hardware architectures are becoming increasingly complex and diverse. In this article, we present our design, implementation, and evaluation of the first cache-oblivious in-memory query processor, EaseDB. Moreover, we discuss the inherent limitations of the cache-oblivious approach as well as the opportunities given by the upcoming hardware architectures. Specifically, a cache-oblivious technique usually requires sophisticated algorithm design to achieve a comparable performance to its cache-conscious counterpart. Nevertheless, this development-time effort is compensated by the automaticity of performance achievement and the reduced ownership cost. Furthermore, this automaticity enables cache-oblivious techniques to outperform their cache-conscious counterparts in multi-threading processors.", "paper_title": "Cache-oblivious databases: Limitations and opportunities", "paper_id": "WOS:000257819600003"}