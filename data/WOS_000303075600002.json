{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-gpu"}, {"score": 0.004694700982410345, "phrase": "spin_systems_simulations"}, {"score": 0.004463096299091981, "phrase": "different_approaches"}, {"score": 0.004351595642056769, "phrase": "multiple_graphics_processing_units"}, {"score": 0.004171891198117434, "phrase": "spin_systems"}, {"score": 0.003738502710504415, "phrase": "single_spin"}, {"score": 0.0032387402145603412, "phrase": "suitable_combination"}, {"score": 0.002805597755796506, "phrase": "communication_co-processor"}, {"score": 0.002735392281320413, "phrase": "gpu._large_scale_simulations"}, {"score": 0.0023296961971785357, "phrase": "clear_cut"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Spin systems", " GPU", " Asynchronous communication"], "paper_abstract": "We present and compare different approaches for using multiple Graphics Processing Units in the simulation of spin systems. As a benchmark we consider the time required to update a single spin of the 3D Heisenberg spin glass model, by using both the Over-relaxation and the Heat Bath algorithms. The results show that a suitable combination of techniques allows to hide almost completely the communication overhead by using the CPU as a communication co-processor of the GPU. Large scale simulations on clusters of GPUs can be efficiently carried out by following the same approach also for other applications where a clear cut exists between bulk and boundaries data. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Multi-GPU codes for spin systems simulations", "paper_id": "WOS:000303075600002"}