{"auto_keywords": [{"score": 0.030570347867177793, "phrase": "high-quality_grams"}, {"score": 0.00481495049065317, "phrase": "gram_filter"}, {"score": 0.00462919213721188, "phrase": "numerous_applications"}, {"score": 0.004539005582217309, "phrase": "data_integration"}, {"score": 0.004479855062309818, "phrase": "protein_detection"}, {"score": 0.004392565073466714, "phrase": "article_copy_detection"}, {"score": 0.004306968571854912, "phrase": "similar_core_problem"}, {"score": 0.003877737556673229, "phrase": "large_scale_string_collection"}, {"score": 0.003752550907120244, "phrase": "prefix-filter-based_framework"}, {"score": 0.0035141291835319682, "phrase": "recent_works"}, {"score": 0.003423042581201533, "phrase": "advanced_filters"}, {"score": 0.003334309053314909, "phrase": "overall_search_performance"}, {"score": 0.0031429517477457925, "phrase": "gram-based_framework"}, {"score": 0.0030614565460256897, "phrase": "maximum_filter_performance"}, {"score": 0.0030017207229983385, "phrase": "main_idea"}, {"score": 0.0026148807877309417, "phrase": "selection_process"}, {"score": 0.002530359917257626, "phrase": "np-hard_problem"}, {"score": 0.0024485643104830814, "phrase": "cost_model"}, {"score": 0.0023850311572318496, "phrase": "filter_ability"}, {"score": 0.0023079225317714815, "phrase": "efficient_heuristic_algorithms"}, {"score": 0.0021896891011033105, "phrase": "real_datasets"}, {"score": 0.0021049977753042253, "phrase": "proposed_framework"}], "paper_keywords": ["Data integration", " similarity search", " gram-based framework"], "paper_abstract": "Numerous applications such as data integration, protein detection, and article copy detection share a similar core problem: given a string as the query, how to efficiently find all the similar answers from a large scale string collection. Many existing methods adopt a prefix-filter-based framework to solve this problem, and a number of recent works aim to use advanced filters to improve the overall search performance. In this paper, we propose a gram-based framework to achieve near maximum filter performance. The main idea is to judiciously choose the high-quality grams as the prefix of query according to their estimated ability to filter candidates. As this selection process is proved to be NP-hard problem, we give a cost model to measure the filter ability of grams and develop efficient heuristic algorithms to find high-quality grams. Extensive experiments on real datasets demonstrate the superiority of the proposed framework in comparison with the state-of-art approaches.", "paper_title": "GFilter: A General Gram Filter for String Similarity Search", "paper_id": "WOS:000351393500010"}