{"auto_keywords": [{"score": 0.03179794782857869, "phrase": "j._comput"}, {"score": 0.009265179409596537, "phrase": "syst"}, {"score": 0.009217355555238331, "phrase": "sci"}, {"score": 0.008556410622227976, "phrase": "stronger_hypothesis"}, {"score": 0.00481495049065317, "phrase": "problem_revisited"}, {"score": 0.004680542234803855, "phrase": "computational_complexity_theory"}, {"score": 0.004596960835906736, "phrase": "efficient_algorithm"}, {"score": 0.004468610388406918, "phrase": "efficient_simulation"}, {"score": 0.00393886140366453, "phrase": "double_right_arrow"}, {"score": 0.0038386912528953028, "phrase": "complexity_class"}, {"score": 0.003828814886998649, "phrase": "c_and_integer_j"}, {"score": 0.0036553070575015344, "phrase": "error_randomized_algorithms"}, {"score": 0.0036178264212372497, "phrase": "polynomial_time"}, {"score": 0.003374684728840902, "phrase": "cai"}, {"score": 0.003357305136739058, "phrase": "chakaravarthy"}, {"score": 0.0033400433146309706, "phrase": "j._comb"}, {"score": 0.0031640496006559095, "phrase": "randomized_algorithms"}, {"score": 0.003115485445919747, "phrase": "expected_polynomial_time"}, {"score": 0.0030676643955722884, "phrase": "c._hemaspaandra"}, {"score": 0.0030518897190864205, "phrase": "hemaspaandra"}, {"score": 0.0030283775173486757, "phrase": "hempel"}, {"score": 0.0028687603363593867, "phrase": "buhrman"}, {"score": 0.002854000448193428, "phrase": "fortnow"}, {"score": 0.002521671965012668, "phrase": "pavan"}, {"score": 0.00250223513029531, "phrase": "sengupta"}, {"score": 0.0022107766201025663, "phrase": "arguably_the_most_general_form"}], "paper_keywords": ["Computational complexity", " Complexity classes", " Bounded queries", " Zero-error algorithms"], "paper_abstract": "The 1-versus-2 queries problem, which has been extensively studied in computational complexity theory, asks in its generality whether every efficient algorithm that makes at most 2 queries to a Sigma(p)(k)-complete language L(k) has an efficient simulation that makes at most 1 query to L(k). We obtain solutions to this problem for hypotheses weaker than previously considered. We prove that: (I) For each k >= 2, P(tt)(Sigma kp[2]) subset of ZPP(Sigma kp[1]) double right arrow PH = Sigma(p)(k), and (II) P(tt)(NP[2]) subset of ZPP(NP[1]) double right arrow PH = S(2)(p). Here, for any complexity class C and integer j >= 1, we define ZPP(C[j]) to be the class of problems solvable by zero- error randomized algorithms that run in polynomial time, make at most j queries to C, and succeed with probability at least 1/2 + 1/poly(.). This same definition of ZPP(C[j]), also considered in Cai and Chakaravarthy ( J. Comb. Optim. 11( 2): 189- 202, 2006), subsumes the class of problems solvable by randomized algorithms that always answer correctly in expected polynomial time and make at most j queries to C. Hemaspaandra, Hemaspaandra, and Hempel (SIAM J. Comput. 28(2): 383-393, 1998), for k > 2, and Buhrman and Fortnow (J. Comput. Syst. Sci. 59(2): 182-194, 1999), for k = 2, had obtained the same consequence as ours in (I) using the stronger hypothesis P(tt)(Sigma kp[2]) subset of P(Sigma kp[1]). Fortnow, Pavan, and Sengupta (J. Comput. Syst. Sci. 74(3): 358-363, 2008) had obtained the same consequence as ours in (II) using the stronger hypothesis P(tt)(NP[2]) subset of PNP[1]. Our results may also be viewed as steps towards obtaining solutions to arguably the most general form of the 1-versus-2 queries problem: For any k >= 1, whether P(tt)(Sigma kp[2]) can be simulated in BPP(Sigma kp[1]).", "paper_title": "The 1-Versus-2 Queries Problem Revisited", "paper_id": "WOS:000273480600003"}