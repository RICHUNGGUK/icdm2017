{"auto_keywords": [{"score": 0.04540629726959905, "phrase": "cplex"}, {"score": 0.00481495049065317, "phrase": "variable_neighborhood_search"}, {"score": 0.004574709094672837, "phrase": "mixed-integer_programs"}, {"score": 0.003866268750750096, "phrase": "incumbent_solution"}, {"score": 0.003646399625591736, "phrase": "original_problem"}, {"score": 0.003438991996487785, "phrase": "fischetti"}, {"score": 0.003389003700928392, "phrase": "lodi"}, {"score": 0.002528300562452668, "phrase": "neighborhood_exploration"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["mixed integer programming", " local branching", " variable neighborhood search", " CPLEX"], "paper_abstract": "In this paper we develop a variable neighborhood search (VNS) heuristic for solving mixed-integer programs (MIPs). It uses CPLEX, the general-purpose MIP solver, as a black-box. Neighborhoods around the incumbent solution are defined by adding constraints to the original problem, as suggested in the recent local branching (LB) method of Fischetti and Lodi (Mathematical Programming Series B 2003;98:23-47). Both LB and VNS use the same tools: CPLEX and the same definition of the neighborhoods around the incumbent. However, our VNS is simpler and more systematic in neighborhood exploration. Consequently, within the same time limit, we were able to improve 14 times the best known solution from the set of 29 hard problem instances used to test LB. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Variable neighborhood search and local branching", "paper_id": "WOS:000236686800016"}