{"auto_keywords": [{"score": 0.04718079151846453, "phrase": "integrity_constraints"}, {"score": 0.00481495049065317, "phrase": "b_preconditions"}, {"score": 0.004630910803911567, "phrase": "database_domain"}, {"score": 0.004453874101119545, "phrase": "information_systems"}, {"score": 0.0043509032299218955, "phrase": "real_issue"}, {"score": 0.004055998173160551, "phrase": "formal_approach"}, {"score": 0.00396218934254591, "phrase": "b_formal_specifications"}, {"score": 0.003870541730075597, "phrase": "uml_description"}, {"score": 0.0036363418376496484, "phrase": "generated_b_specification"}, {"score": 0.003015143226706584, "phrase": "b_invariant_properties"}, {"score": 0.002559072326933071, "phrase": "systematic_approach"}, {"score": 0.002422890839801611, "phrase": "larger_class"}, {"score": 0.0022939396079753463, "phrase": "key_idea"}, {"score": 0.002206045784326466, "phrase": "rewriting_and_simplification_rules"}, {"score": 0.0021049977753042253, "phrase": "b_invariants"}], "paper_keywords": ["Integrity constraints", " Formal specification", " B operations", " Invariant", " Precondition"], "paper_abstract": "Maintaining integrity constraints in information systems is a real issue. In our previous work, we have defined a formal approach that derives B formal specifications from a UML description of the system. Basically, the generated B specification is composed of a set of variables modeling data and a set of operations representing transactions. The integrity constraints are directly specified as B invariant properties. So far, the operations we generate establish only a reduced class of constraints. In this paper, we describe a systematic approach to identify preconditions that take a larger class of invariants into account. The key idea is the definition of rewriting and simplification rules that we apply to the B invariants.", "paper_title": "A systematic approach to generate B preconditions: application to the database domain", "paper_id": "WOS:000267687600006"}