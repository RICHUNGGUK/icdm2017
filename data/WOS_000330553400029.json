{"auto_keywords": [{"score": 0.03853516770033371, "phrase": "peid"}, {"score": 0.00481495049065317, "phrase": "support_vector_machine"}, {"score": 0.004722038375317162, "phrase": "packer_identification_tool"}, {"score": 0.004648995193787914, "phrase": "malware_analysis"}, {"score": 0.004071846628708832, "phrase": "signature-based_approach"}, {"score": 0.0032472646337850073, "phrase": "new_automated_packer_identification_method"}, {"score": 0.0030506626796257077, "phrase": "string-kernel-based_support_vector_machine"}, {"score": 0.0029224275921964724, "phrase": "packed_programs"}, {"score": 0.0027886573969044042, "phrase": "error_tolerant_mechanism"}, {"score": 0.0027347383772384102, "phrase": "detection_failure"}, {"score": 0.002702887319160534, "phrase": "minor_signature_violations"}, {"score": 0.002619748321217153, "phrase": "byte_sequence"}, {"score": 0.002579140290642792, "phrase": "entry_point"}, {"score": 0.002549096826249, "phrase": "packed_program"}, {"score": 0.002519402443228795, "phrase": "packer's_feature"}, {"score": 0.002490053106007765, "phrase": "svm._that"}, {"score": 0.0021803388613879896, "phrase": "high_accuracy"}, {"score": 0.0021215125099937663, "phrase": "existing_ml-based_method"}, {"score": 0.0021049977753042253, "phrase": "sun_et_al"}], "paper_keywords": ["malware analysis", " pack", " unpack", " machine learning", " SVM"], "paper_abstract": "PEiD is a packer identification tool widely used for malware analysis but its accuracy is becoming lower and lower recently. There exist two major reasons for that. The first is that PEiD does not provide a way to create signatures, though it adopts a signature-based approach. We need to create signatures manually, and it is difficult to catch up with packers created or upgraded rapidly. The second is that PEiD utilizes exact matching. If a signature contains any error, PEiD cannot identify the packer that corresponds to the signature. In this paper, we propose a new automated packer identification method to overcome the limitations of PEiD and report the results of our numerical study. Our method applies string-kernel-based support vector machine (SVM): it can measure the similarity between packed programs without our operations such as manually creating signature and it provides some error tolerant mechanism that can significantly reduce detection failure caused by minor signature violations. In addition, we use the byte sequence starting from the entry point of a packed program as a packer's feature given to SVM. That is, our method combines the advantages from signature-based approach and machine learning (ML) based approach. The numerical results on 3902 samples with 26 packer classes and 3 unpacked (not-packed) classes shows that our method achieves a high accuracy of 99.46% outperforming PEiD and an existing ML-based method that Sun et al. have proposed.", "paper_title": "An Accurate Packer Identification Method Using Support Vector Machine", "paper_id": "WOS:000330553400029"}