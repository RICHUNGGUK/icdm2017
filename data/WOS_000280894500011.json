{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "topology-aware_applications"}, {"score": 0.00436890075128947, "phrase": "requested_machines"}, {"score": 0.0041112665381266315, "phrase": "machines'_interconnections"}, {"score": 0.003939980614608309, "phrase": "scheduling_process"}, {"score": 0.00386876598761639, "phrase": "even_a_matching"}, {"score": 0.0037988336463795963, "phrase": "single_multi-processor_task"}, {"score": 0.0036627245728600073, "phrase": "single_time_slot"}, {"score": 0.0035965032173588753, "phrase": "np-complete_problem"}, {"score": 0.003531474887552889, "phrase": "polynomial_approximation"}, {"score": 0.0033637374697995616, "phrase": "complete_scheduling_framework"}, {"score": 0.00316518932828897, "phrase": "efficient_solution"}, {"score": 0.0030147970456037274, "phrase": "proposed_framework"}, {"score": 0.0028541057064952876, "phrase": "pluggable_components"}, {"score": 0.002669259222649505, "phrase": "scheduling_policies"}, {"score": 0.0025578967205807843, "phrase": "coallocation_algorithms"}, {"score": 0.002392188222609101, "phrase": "proposed_scheduling_framework"}, {"score": 0.00218334762335187, "phrase": "main_decision-making_module"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["QosCosGrid", " Grid", " Supercomputer", " Scheduler"], "paper_abstract": "Scheduling of large-scale, distributed topology-aware applications requires that not only the properties of the requested machines be considered, but also the properties of the machines' interconnections. This requirement severely complicates the scheduling process, as even a matching between a single multi-processor task and available machines in a single time slot becomes an NP-complete problem with no polynomial approximation. In this paper we propose a complete scheduling framework for multi-cluster, heterogeneous environments that provides, in practice, an efficient solution for the scheduling of topology-aware applications. The proposed framework is very flexible as it is composed of pluggable components and can be easily configured to support a variety of scheduling policies. We also describe three novel scheduling and coallocation algorithms that were developed and plugged into the framework. The proposed scheduling framework was integrated into the QosCosGrid(1) system, where it is used as the main decision-making module. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A scheduling framework for large-scale, parallel, and topology-aware applications", "paper_id": "WOS:000280894500011"}