{"auto_keywords": [{"score": 0.0469389807462526, "phrase": "risk_management"}, {"score": 0.00481495049065317, "phrase": "complex_relationships"}, {"score": 0.004771672073078768, "phrase": "requirements_engineering_processes"}, {"score": 0.004459190343665408, "phrase": "requirements_engineering"}, {"score": 0.00439918275666155, "phrase": "important_component"}, {"score": 0.004359625030298944, "phrase": "effective_software_engineering"}, {"score": 0.00414830454375092, "phrase": "development_organizations"}, {"score": 0.004074016501033133, "phrase": "existing_literature"}, {"score": 0.00391167729353583, "phrase": "improved_productivity"}, {"score": 0.003638823482920949, "phrase": "empirical_evidence"}, {"score": 0.0035898158129721003, "phrase": "requirements_engineering_practice"}, {"score": 0.003309278541665552, "phrase": "large_software_development_project"}, {"score": 0.0032794890195334513, "phrase": "requirements_process_improvement"}, {"score": 0.003191714656606822, "phrase": "scarce_evidence"}, {"score": 0.0030505976034245234, "phrase": "in-depth_explanation"}, {"score": 0.0029689311901364797, "phrase": "engineering_processes"}, {"score": 0.002724428781940696, "phrase": "effective_requirements_process"}, {"score": 0.002675571068567923, "phrase": "positive_outcomes"}, {"score": 0.002639502113350897, "phrase": "project_lifecycle"}, {"score": 0.002488724764295623, "phrase": "project_negotiation"}, {"score": 0.002466303439899648, "phrase": "project_planning"}, {"score": 0.0024220634963019114, "phrase": "feature_creep"}, {"score": 0.0023253967212081626, "phrase": "product_quality"}, {"score": 0.002252880693912436, "phrase": "role_collaboration"}], "paper_keywords": ["requirements engineering", " process improvement", " process interactions", " empirical investigation"], "paper_abstract": "Requirements engineering is an important component of effective software engineering, yet more research is needed to demonstrate the benefits to development organizations. While the existing literature suggests that effective requirements engineering can lead to improved productivity, quality, and risk management, there is little evidence to support this. We present empirical evidence showing how requirements engineering practice relates to these claims. This evidence was collected over the course of a 30-month case study of a large software development project undergoing requirements process improvement. Our findings add to the scarce evidence on RE payoffs and, more importantly, represent an in-depth explanation of the role of requirements engineering processes in contributing to these benefits. In particular, the results of our case study show that an effective requirements process at the beginning of the project had positive outcomes throughout the project lifecycle, improving the efficacy of other project processes, ultimately leading to improvements in project negotiation, project planning, and managing feature creep, testing, defects, rework, and product quality. Finally, we consider the role collaboration had in producing the effects we observed and the implications of this work to both research and practice.", "paper_title": "An empirical study of the complex relationships between requirements engineering processes and other processes that lead to payoffs in productivity, quality, and risk management", "paper_id": "WOS:000239605600001"}