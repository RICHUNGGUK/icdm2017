{"auto_keywords": [{"score": 0.045458312844898874, "phrase": "least_squares"}, {"score": 0.04347900416933489, "phrase": "conditional_expectations"}, {"score": 0.04243432406014925, "phrase": "backward_dynamic_programming_principle"}, {"score": 0.03710460658481701, "phrase": "mc_level"}, {"score": 0.00481495049065317, "phrase": "computational_finance"}, {"score": 0.004694700982410345, "phrase": "american_style_options"}, {"score": 0.004596779715291598, "phrase": "american_style"}, {"score": 0.0045581828632009795, "phrase": "multiple_exercise_options"}, {"score": 0.004463096299091981, "phrase": "mathematical_finance"}, {"score": 0.004333283735537634, "phrase": "monte_carlo"}, {"score": 0.003982741546775355, "phrase": "stochastic_control_problems"}, {"score": 0.003932654396285872, "phrase": "markovian_framework"}, {"score": 0.0038343546245999285, "phrase": "mc_approaches"}, {"score": 0.0036759314172445934, "phrase": "dependency_structure"}, {"score": 0.003584025547693836, "phrase": "parallel_implementation"}, {"score": 0.003465036432323081, "phrase": "time_layer_level"}, {"score": 0.0032938942910948096, "phrase": "quantization_method"}, {"score": 0.0031577303835881964, "phrase": "straightforward_parallelization"}, {"score": 0.0028775998963807324, "phrase": "time_domain"}, {"score": 0.002805597755796506, "phrase": "faster_memory_structures"}, {"score": 0.002758597251689795, "phrase": "parallel_execution"}, {"score": 0.002655697256976997, "phrase": "random_numbers"}, {"score": 0.002600194073758015, "phrase": "gpgpu_architecture"}, {"score": 0.0025458479274370832, "phrase": "crucial_tool"}, {"score": 0.0024926348205500715, "phrase": "massive_parallel_computing_architectures"}, {"score": 0.0023996317685956213, "phrase": "numerical_results"}, {"score": 0.0023694065215394593, "phrase": "cuda_implementation"}, {"score": 0.0021682027434117095, "phrase": "serial_cpu_implementation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Voronoi quantization", " Markov chain approximation", " CUDA", " parallel computing for financial models", " stochastic control"], "paper_abstract": "The pricing of American style and multiple exercise options is a very challenging problem in mathematical finance. One usually employs a least squares Monte Carlo approach (LongstaffSchwartz method) for the evaluation of conditional expectations, which arise in the backward dynamic programming principle for such optimal stopping or stochastic control problems in a Markovian framework. Unfortunately, these least squares MC approaches are rather slow and allow, because of the dependency structure in the backward dynamic programming principle, no parallel implementation neither on the MC level nor on the time layer level of this problem. We therefore present in this paper a quantization method for the computation of the conditional expectations that allows a straightforward parallelization on the MC level. Moreover, we are able to develop for first-order autoregressive processes a further parallelization in the time domain, which makes use of faster memory structures and therefore maximizes parallel execution. Furthermore, we discuss the generation of random numbers in parallel on a GPGPU architecture, which is the crucial tool for the application of massive parallel computing architectures in mathematical finance. Finally, we present numerical results for a CUDA implementation of these methods. It will turn out that such an implementation leads to an impressive speed-up compared with a serial CPU implementation. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "GPGPUs in computational finance: massive parallel computing for American style options", "paper_id": "WOS:000303983700007"}