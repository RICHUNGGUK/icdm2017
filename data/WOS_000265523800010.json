{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hilbert's_program"}, {"score": 0.004674952036988355, "phrase": "logic_tool_box"}, {"score": 0.004073359218158693, "phrase": "computer_scientists"}, {"score": 0.003247868216333148, "phrase": "minimal_toolbox"}, {"score": 0.0031845067058084613, "phrase": "logic_tools"}, {"score": 0.0030017207229983385, "phrase": "computer_scientist"}, {"score": 0.0027741761880779535, "phrase": "reliable_systems"}, {"score": 0.0021049977753042253, "phrase": "working_computer_scientist"}], "paper_keywords": ["Teaching logic", " Modeling", " Interpretability", " Levels of abstraction"], "paper_abstract": "In this paper I discuss what, according to my long experience, every computer scientists should know from logic. We concentrate on issues of modeling, interpretability and levels of abstraction. We discuss what the minimal toolbox of logic tools should look like for a computer scientist who is involved in designing and analyzing reliable systems. We shall conclude that many classical topics dear to logicians are less important than usually presented, and that less known ideas from logic may be more useful for the working computer scientist.", "paper_title": "From Hilbert's program to a logic tool box", "paper_id": "WOS:000265523800010"}