{"auto_keywords": [{"score": 0.00450368324850566, "phrase": "frequently-used_approach"}, {"score": 0.00436890075128947, "phrase": "general_service_time_distribution"}, {"score": 0.004289966839994858, "phrase": "phase-type_distribution"}, {"score": 0.004086350434865782, "phrase": "familiar_balance_equations"}, {"score": 0.003775803846431323, "phrase": "resulting_state_space"}, {"score": 0.003685067218455088, "phrase": "\"dimensionality_curse"}, {"score": 0.0035530197642369464, "phrase": "combinatorial_growth"}, {"score": 0.0034049123167891955, "phrase": "phases_increases"}, {"score": 0.0033029038236817372, "phrase": "complexity_issue"}, {"score": 0.00316518932828897, "phrase": "reduced_state_description"}, {"score": 0.0027019561451518768, "phrase": "resulting_approximation"}], "paper_keywords": ["Multiple servers", " General service", " Finite buffer", " M/Ph/c/N queue", " Reduced-state approximation", " Linear complexity"], "paper_abstract": "Many real-life systems can be modeled using the classical M/G/c/N queue. A frequently-used approach is to replace the general service time distribution by a phase-type distribution since the M/Ph/c/N queue can be described by familiar balance equations. The downside of this approach is that the size of the resulting state space suffers from the \"dimensionality curse\", i.e., exhibits combinatorial growth as the number of servers and/or phases increases. To circumvent this complexity issue, we propose to use a reduced state description in which the state of only one server is represented explicitly, while the other servers are accounted for through their rate of completions. The accuracy of the resulting approximation is generally good and, moreover, tends to improve as the number of servers in the system increases. Its computational complexity in terms of the number of states grows only linearly in the number of servers and phases. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Reduced complexity in M/Ph/c/N queues", "paper_id": "WOS:000340335900004"}