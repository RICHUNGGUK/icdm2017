{"auto_keywords": [{"score": 0.04346285421432383, "phrase": "halting_function"}, {"score": 0.0414011779133521, "phrase": "accelerating_turing_machine"}, {"score": 0.027098845959617146, "phrase": "purist_conception"}, {"score": 0.012152460167946784, "phrase": "turing_machine"}, {"score": 0.01160002570581814, "phrase": "turing"}, {"score": 0.00827772925843864, "phrase": "realist_conception"}, {"score": 0.004447509888681154, "phrase": "potgieter"}, {"score": 0.004228359613476549, "phrase": "\"turing_limit\"aeuro\"e.g"}, {"score": 0.0036072171658966348, "phrase": "current_literature"}, {"score": 0.0030993584115563146, "phrase": "accelerating_machines"}, {"score": 0.003065938050346064, "phrase": "turing_machines"}, {"score": 0.002821371992763293, "phrase": "epistemic_embedding"}, {"score": 0.002672454243212711, "phrase": "internal_sense"}, {"score": 0.002198380879018061, "phrase": "external_sense"}, {"score": 0.002158979137177815, "phrase": "relatively_informal_approach"}, {"score": 0.0021049977753042253, "phrase": "key_issues"}], "paper_keywords": ["Accelerating Turing machine", " Supertask", " Halting problem", " ATM paradox", " Hypercomputation", " External and internal computation", " Epistemic embedding", " Ontology of computing", " Turing-machine purism", " Turing-machine realism", " Thompson lamp paradox"], "paper_abstract": "Accelerating Turing machines have attracted much attention in the last decade or so. They have been described as \"the work-horse of hypercomputation\" (Potgieter and Rosinger 2010: 853). But do they really compute beyond the \"Turing limit\"aEuro\"e.g., compute the halting function? We argue that the answer depends on what you mean by an accelerating Turing machine, on what you mean by computation, and even on what you mean by a Turing machine. We show first that in the current literature the term \"accelerating Turing machine\" is used to refer to two very different species of accelerating machine, which we call end-stage-in and end-stage-out machines, respectively. We argue that end-stage-in accelerating machines are not Turing machines at all. We then present two differing conceptions of computation, the internal and the external, and introduce the notion of an epistemic embedding of a computation. We argue that no accelerating Turing machine computes the halting function in the internal sense. Finally, we distinguish between two very different conceptions of the Turing machine, the purist conception and the realist conception; and we argue that Turing himself was no subscriber to the purist conception. We conclude that under the realist conception, but not under the purist conception, an accelerating Turing machine is able to compute the halting function in the external sense. We adopt a relatively informal approach throughout, since we take the key issues to be philosophical rather than mathematical.", "paper_title": "Do Accelerating Turing Machines Compute the Uncomputable?", "paper_id": "WOS:000289986700006"}