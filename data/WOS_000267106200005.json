{"auto_keywords": [{"score": 0.04469413353991945, "phrase": "segment_characters"}, {"score": 0.029637584382245584, "phrase": "word_recognition"}, {"score": 0.00481495049065317, "phrase": "devanagari_ocr"}, {"score": 0.004733901576706854, "phrase": "recognition_driven_segmentation_framework"}, {"score": 0.004680624753255133, "phrase": "stochastic_language_models"}, {"score": 0.004524348699657099, "phrase": "novel_recognition_driven_segmentation_methodology"}, {"score": 0.00447341965028879, "phrase": "devanagari_optical_character_recognition"}, {"score": 0.004324031677173549, "phrase": "sequential_rules"}, {"score": 0.0040171817997972335, "phrase": "graph_representation"}, {"score": 0.0037532257703888315, "phrase": "vertically_overlapping_characters"}, {"score": 0.0036073064072936626, "phrase": "non-linear_boundaries"}, {"score": 0.0035666632046674153, "phrase": "finer_primitive_components"}, {"score": 0.003332210257373994, "phrase": "classifier_score"}, {"score": 0.003078028357912228, "phrase": "multiple_hypotheses"}, {"score": 0.0029920129598858545, "phrase": "composite_character"}, {"score": 0.0029249294679606656, "phrase": "possible_combinations"}, {"score": 0.0028756028995504035, "phrase": "classifier_results"}, {"score": 0.0028271058251633815, "phrase": "primitive_components"}, {"score": 0.0027017308406240563, "phrase": "stochastic_finite_state_automaton"}, {"score": 0.0025673005153462707, "phrase": "classifier_scores"}, {"score": 0.0025097154697345096, "phrase": "character_frequencies"}, {"score": 0.0024673738215365104, "phrase": "novel_feature"}, {"score": 0.0023713273141757326, "phrase": "sub-character_primitive_components"}, {"score": 0.002153316680437517, "phrase": "n-gram_language_model"}, {"score": 0.0021049977753042253, "phrase": "linguistic_character_units"}], "paper_keywords": [""], "paper_abstract": "This paper describes a novel recognition driven segmentation methodology for Devanagari Optical Character Recognition. Prior approaches have used sequential rules to segment characters followed by template matching for classification. Our method uses a graph representation to segment characters. This method allows us to segment horizontally or vertically overlapping characters as well as those connected along non-linear boundaries into finer primitive components. The components are then processed by a classifier and the classifier score is used to determine if the components need to be further segmented. Multiple hypotheses are obtained for each composite character by considering all possible combinations of the classifier results for the primitive components. Word recognition is performed by designing a stochastic finite state automaton (SFSA) that takes into account both classifier scores as well as character frequencies. A novel feature of our approach is that we use sub-character primitive components in the classification stage in order to reduce the number of classes whereas we use an n-gram language model based on the linguistic character units for word recognition.", "paper_title": "Devanagari OCR using a recognition driven segmentation framework and stochastic language models", "paper_id": "WOS:000267106200005"}