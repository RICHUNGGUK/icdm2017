{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "protein_sequence_databases"}, {"score": 0.004770461993586338, "phrase": "regular_expression_pattern_matching"}, {"score": 0.00466102244911872, "phrase": "computational_biology"}, {"score": 0.004208427318712072, "phrase": "important_interactive_process"}, {"score": 0.00415019999222481, "phrase": "fast_motif-matching_algorithms"}, {"score": 0.0037820003983334476, "phrase": "suffix_trees"}, {"score": 0.003712362078915926, "phrase": "query_problems"}, {"score": 0.0035603115570447467, "phrase": "first_match"}, {"score": 0.0032745778756077693, "phrase": "interactive_motif_exploration"}, {"score": 0.003054009753601139, "phrase": "faster_manner"}, {"score": 0.0030257422786589723, "phrase": "existing_solutions"}, {"score": 0.0027698788736535865, "phrase": "suffix_tree_creation"}, {"score": 0.002731500545019039, "phrase": "modified_tree_representations"}, {"score": 0.0026687115458522326, "phrase": "regular_expression_matching_level"}, {"score": 0.002523828967909659, "phrase": "deterministic_finite_automaton"}, {"score": 0.0023210846870653757, "phrase": "faster_retrieval"}, {"score": 0.0022995854132747233, "phrase": "prosite_motif"}, {"score": 0.0022052711621931144, "phrase": "protein_sequence_database"}], "paper_keywords": ["regular expression matching", " motif search", " suffix tree", " PROSITE pattern", " heuristic", " preprocessing"], "paper_abstract": "Regular expression pattern matching is widely used in computational biology. Searching through a database of sequences for a motif (a simple regular expression) I or its variations is an important interactive process which requires fast motif-matching algorithms. In this paper, we explore and evaluate various represent at ions of the database of sequences using suffix trees for two types of query problems for a given regular expression: 1) Find the first match, and 2) Find all matches. Answering Problem I increases the level and effectiveness of interactive motif exploration. We propose a framework in which Problem I can be solved in a faster manner than existing solutions while not slowing down the solution of Problem 2. We apply several heuristics both at the level of suffix tree creation resulting in modified tree representations, and at the regular expression matching level in which we search subtrees in a given predefined order by simulating a deterministic finite automaton that we create from the given regular expression. The focus of our work is to develop a method for faster retrieval of PROSITE motif (a restricted regular expression) matches from a protein sequence database. We show empirically the effectiveness of our solution using several real protein data sets.", "paper_title": "Fast motif search in protein sequence databases", "paper_id": "WOS:000238109200067"}