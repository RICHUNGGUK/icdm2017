{"auto_keywords": [{"score": 0.04140693296811694, "phrase": "efficient_and_secure_multi-party_computation_protocol"}, {"score": 0.00481495049065317, "phrase": "multi-party_computation_protocol"}, {"score": 0.004360412703519539, "phrase": "multi-party_computation"}, {"score": 0.004218602458288531, "phrase": "important_problem"}, {"score": 0.003615217162972726, "phrase": "present_study"}, {"score": 0.0033465923623290034, "phrase": "secret_sharing_scheme"}, {"score": 0.002175913488493802, "phrase": "simplest_sequencing_problem"}, {"score": 0.0021049977753042253, "phrase": "millionaires'_problem"}], "paper_keywords": ["secure multi-party computation", " sequencing problem", " secret sharing"], "paper_abstract": "In the field of multi-party computation, an important problem is how to construct an efficient and secure multi-party computation protocol for certain specific problems. In the present study, we make use of a secret sharing scheme to construct an efficient and secure multi-party computation protocol for sequencing problems. Our protocols are perfectly secure against both a passive adversary that can corrupt at most t a (c) 1/2 (n - 1)/2 participants, and an active adversary that can corrupt at most t < n/3 participants. The simplest sequencing problem is the Millionaires' problem.", "paper_title": "Secure multi-party computation protocol for sequencing problem", "paper_id": "WOS:000293188100010"}