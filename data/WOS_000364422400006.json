{"auto_keywords": [{"score": 0.049100450513748284, "phrase": "function_semantic_tree"}, {"score": 0.04658008825855549, "phrase": "semantic_analysis"}, {"score": 0.03668821691794303, "phrase": "deviation_density"}, {"score": 0.026241804536545496, "phrase": "case_study"}, {"score": 0.00481495049065317, "phrase": "software_abnormal_behavior_detection"}, {"score": 0.004652016085325825, "phrase": "current_software_behavior_models"}, {"score": 0.004312622975366676, "phrase": "new_model"}, {"score": 0.004224418476742716, "phrase": "abnormal_behaviors"}, {"score": 0.0038624981944755813, "phrase": "software_function"}, {"score": 0.003435426082776884, "phrase": "suspicious_behaviors"}, {"score": 0.0033419808453225516, "phrase": "state_graph"}, {"score": 0.00327356326590461, "phrase": "function_sequence"}, {"score": 0.0030554300179552415, "phrase": "control_flow_attacks"}, {"score": 0.0029928611380840757, "phrase": "deviation_factor"}, {"score": 0.002931569771634119, "phrase": "period_division"}, {"score": 0.0026986685585382347, "phrase": "semantic_rules"}, {"score": 0.0026252106881752067, "phrase": "application_layer_attacks"}, {"score": 0.0025537472239953807, "phrase": "traditional_approaches"}, {"score": 0.0024333239726872604, "phrase": "rss_software"}, {"score": 0.002286781334850213, "phrase": "contrast_experiment"}, {"score": 0.0021940118003312397, "phrase": "strong_expressivity"}, {"score": 0.002163930783583212, "phrase": "detection_ability"}, {"score": 0.0021049977753042253, "phrase": "traditional_behavior_models"}], "paper_keywords": ["software behavior", " system call", " state graph", " semantic analysis", " deviation density", " function semantic rules"], "paper_abstract": "Current software behavior models lack the ability to conduct semantic analysis. We propose a new model to detect abnormal behaviors based on a function semantic tree. First, a software behavior model in terms of state graph and software function is developed. Next, anomaly detection based on the model is conducted in two main steps: calculating deviation density of suspicious behaviors by comparison with state graph and detecting function sequence by function semantic rules. Deviation density can well detect control flow attacks by a deviation factor and a period division. In addition, with the help of semantic analysis, function semantic rules can accurately detect application layer attacks that fail in traditional approaches. Finally, a case study of RSS software illustrates how our approach works. Case study and a contrast experiment have shown that our model has strong expressivity and detection ability, which outperforms traditional behavior models.", "paper_title": "Software Abnormal Behavior Detection Based on Function Semantic Tree", "paper_id": "WOS:000364422400006"}