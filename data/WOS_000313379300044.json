{"auto_keywords": [{"score": 0.024682450395497747, "phrase": "pi"}, {"score": 0.00481495049065317, "phrase": "soft_real-time_jobs"}, {"score": 0.004589763483242731, "phrase": "index_policies"}, {"score": 0.004481132747216135, "phrase": "time-sensitive_e-service_applications"}, {"score": 0.00429715240295033, "phrase": "effective_policies"}, {"score": 0.004220624516321415, "phrase": "markovian_model"}, {"score": 0.00414545383888272, "phrase": "dynamic_control"}, {"score": 0.003951453722517865, "phrase": "single_class"}, {"score": 0.0039043835848369215, "phrase": "real-time_transactions"}, {"score": 0.003857871979942733, "phrase": "multiple_heterogeneous_clusters"}, {"score": 0.0038119123317396954, "phrase": "web_servers"}, {"score": 0.003677280504320636, "phrase": "server_pool"}, {"score": 0.0035687137873965684, "phrase": "response-time_deadlines"}, {"score": 0.003321008590273796, "phrase": "job_rejection"}, {"score": 0.0032814236411444022, "phrase": "deadline-miss_penalties"}, {"score": 0.0031465436619697385, "phrase": "optimal_policy"}, {"score": 0.002910545717767559, "phrase": "large-scale_systems"}, {"score": 0.00255068452076921, "phrase": "one-step_policy_improvement"}, {"score": 0.0024604876113911173, "phrase": "restless_bandit"}, {"score": 0.0023592715993204796, "phrase": "computational_study"}, {"score": 0.0021304214257321, "phrase": "pure-routing_case"}], "paper_keywords": ["e-services", " Admission control", " Routing", " Multiclusters", " Parallel multiserver queues", " Soft real-time", " Deadlines", " Index policies"], "paper_abstract": "Motivated by time-sensitive e-service applications, we consider the design of effective policies in a Markovian model for the dynamic control of both admission and routing of a single class of real-time transactions to multiple heterogeneous clusters of web servers, each having its own queue and server pool. Transactions come with response-time deadlines, staying until completion if the latter are missed. Per job rejection and deadline-miss penalties are incurred. Since computing an optimal policy is intractable, we aim to design near optimal heuristic policies that are tractable for large-scale systems. Four policies are developed: the static optimal Bernoulli-splitting (BS) policy, and three index policies, based respectively on individually optimal (IO) actions, one-step policy improvement (PI), and restless bandit (RB) indexation. A computational study demonstrates that PI is the best of such policies, being consistently near optimal. In the pure-routing case, both the PI and RB policies are nearly optimal. (c) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Admission and routing of soft real-time jobs to multiclusters: Design and comparison of index policies", "paper_id": "WOS:000313379300044"}