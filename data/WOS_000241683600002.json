{"auto_keywords": [{"score": 0.04927872927155836, "phrase": "fol"}, {"score": 0.00481495049065317, "phrase": "quantified_constraints"}, {"score": 0.004500891637057374, "phrase": "relationship_graph"}, {"score": 0.004388450908826472, "phrase": "new_semantic_web_standards"}, {"score": 0.004242868712089958, "phrase": "quantified_rules"}, {"score": 0.004033464035028803, "phrase": "new_ways"}, {"score": 0.0038668462001710314, "phrase": "end_users"}, {"score": 0.003465036432323081, "phrase": "graphic_view"}, {"score": 0.0030017207229983385, "phrase": "existential_quantifiers"}, {"score": 0.002951444412262927, "phrase": "readable_fashion"}, {"score": 0.0028775998963807324, "phrase": "captured_constraint"}, {"score": 0.002600194073758015, "phrase": "stored_data"}, {"score": 0.0023694065215394593, "phrase": "specific_cases"}, {"score": 0.0021408862709571615, "phrase": "proper_syntax"}, {"score": 0.0021049977753042253, "phrase": "boolean_connectives"}], "paper_keywords": [""], "paper_abstract": "As new semantic web standards evolve to allow quantified rules in FOL, we need new ways to capture them from end users in RDFS(XML). We show how to do this against a graphic view of Entities, and their Relationships (associated or derived). This even allows inclusion of existential quantifiers in readable fashion. The captured constraint can be tested by generating queries to search for violations in stored data. The constraint can then be automatically revised to exclude specific cases picked out by the user, who is spared worries about proper syntax and boolean connectives.", "paper_title": "Capturing quantified constraints in FOL, through interaction with a relationship graph", "paper_id": "WOS:000241683600002"}