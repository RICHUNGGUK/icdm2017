{"auto_keywords": [{"score": 0.023117188291349403, "phrase": "compcert"}, {"score": 0.00481495049065317, "phrase": "cryptographic_primitive"}, {"score": 0.004287680323820891, "phrase": "full_formal_machine-checked_verification"}, {"score": 0.0034491650585057754, "phrase": "interactive_proof"}, {"score": 0.003350480663660326, "phrase": "functional_correctness"}, {"score": 0.0032077057805891627, "phrase": "coq_proof_assistant"}, {"score": 0.0030267296900520217, "phrase": "verifiable_c_program_logic"}, {"score": 0.002940095976373734, "phrase": "verifiable_c"}, {"score": 0.002814759530655965, "phrase": "separation_logic"}, {"score": 0.00269475174341129, "phrase": "c_language"}, {"score": 0.0023990982005125763, "phrase": "operational_semantics"}, {"score": 0.0021049977753042253, "phrase": "optimizing_c_compiler"}], "paper_keywords": ["Verification", " Cryptography"], "paper_abstract": "This article presents a full formal machine-checked verification of a C program: the OpenSSL implementation of SHA-256. This is an interactive proof of functional correctness in the Coq proof assistant, using the Verifiable C program logic. Verifiable C is a separation logic for the C language, proved sound with respect to the operational semantics for C, connected to the CompCert verified optimizing C compiler.", "paper_title": "Verification of a Cryptographic Primitive: SHA-256", "paper_id": "WOS:000353474100003"}