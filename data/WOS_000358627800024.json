{"auto_keywords": [{"score": 0.04733190377720633, "phrase": "computational_artifacts"}, {"score": 0.00481495049065317, "phrase": "reproducible_computational_science"}, {"score": 0.004774530554776604, "phrase": "computational_reproducibility"}, {"score": 0.004388450908826472, "phrase": "later_re-execution"}, {"score": 0.0042250123967577284, "phrase": "large_part"}, {"score": 0.0041194351307673556, "phrase": "existing_software"}, {"score": 0.003999578057088828, "phrase": "implicit_dependencies"}, {"score": 0.003965975628742746, "phrase": "resource_distribution"}, {"score": 0.003916098498242888, "phrase": "shifting_compatibility"}, {"score": 0.0034504423179340738, "phrase": "os_environments"}, {"score": 0.00305285084207725, "phrase": "sandboxed_application"}, {"score": 0.0029890721584351684, "phrase": "larger_scientific_community_aspects"}, {"score": 0.002735392281320413, "phrase": "combined_sandboxing"}, {"score": 0.002556625752785268, "phrase": "large-scale_reproducibility"}, {"score": 0.0025137856138000014, "phrase": "case_studies"}, {"score": 0.0024926348205500715, "phrase": "complex_high-energy_physics_applications"}, {"score": 0.0021590588269751816, "phrase": "possible_standardization_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Preservation framework", " Reproducible research", " Virtualization", " Container"], "paper_abstract": "Computational reproducibility depends on the ability to not only isolate necessary and sufficient computational artifacts but also to preserve those artifacts for later re-execution. Both isolation and preservation present challenges in large part due to the complexity of existing software and systems as well as the implicit dependencies, resource distribution, and shifting compatibility of systems that result over time-all of which conspire to break the reproducibility of an application. Sandboxing is a technique that has been used extensively in OS environments in order to isolate computational artifacts. Several tools were proposed recently that employ sandboxing as a mechanism to ensure reproducibility. However, none of these tools preserve the sandboxed application for re-distribution to a larger scientific community aspects that are equally crucial for ensuring reproducibility as sandboxing itself. In this paper, we describe a framework of combined sandboxing and preservation, which is not only efficient and invariant, but also practical for large-scale reproducibility. We present case studies of complex high-energy physics applications and show how the framework can be useful for sandboxing, preserving, and distributing applications. We report on the completeness, performance, and efficiency of the framework, and suggest possible standardization approaches. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "An invariant framework for conducting reproducible computational science", "paper_id": "WOS:000358627800024"}