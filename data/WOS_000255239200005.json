{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "intrinsic_plasticity"}, {"score": 0.004419904580451831, "phrase": "probability_density"}, {"score": 0.004370814742381778, "phrase": "neuron's_output"}, {"score": 0.004226778595997366, "phrase": "information_maximization"}, {"score": 0.0039674831861175935, "phrase": "adaptation_method"}, {"score": 0.0038826871466923095, "phrase": "gaussian"}, {"score": 0.003779943062894615, "phrase": "learning_rules"}, {"score": 0.0036689507925299885, "phrase": "bounded_output"}, {"score": 0.0036281710561308377, "phrase": "transfer_function_oil"}, {"score": 0.003561205990687285, "phrase": "actual_output_distribution"}, {"score": 0.003392804886610623, "phrase": "expected_distributions"}, {"score": 0.0033426036530090205, "phrase": "random_recurrent_networks"}, {"score": 0.0033054391731615618, "phrase": "ip_rule"}, {"score": 0.0032444113660668743, "phrase": "reservoir_computing_setting"}, {"score": 0.0031845067058084583, "phrase": "temporal_processing_technique"}, {"score": 0.0030679850425428053, "phrase": "network's_state"}, {"score": 0.0030113280682863234, "phrase": "linear_regressor"}, {"score": 0.00295571428544335, "phrase": "desired_output"}, {"score": 0.002901124599876666, "phrase": "experimental_comparison"}, {"score": 0.0028688545415450407, "phrase": "different_ip_rules"}, {"score": 0.002826383890518307, "phrase": "different_characteristics"}, {"score": 0.0027433143290371293, "phrase": "unsupervised_reservoir_adaptation"}, {"score": 0.0025844090835070986, "phrase": "quite_unsuitable_dynamic_behavior"}, {"score": 0.002480520548392772, "phrase": "complex_tasks"}, {"score": 0.0023281003994670714, "phrase": "internal_dynamics"}, {"score": 0.002259642580775186, "phrase": "initial_weights"}, {"score": 0.0022013916728990564, "phrase": "dynamic_regime"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["reservoir computing", " intrinsic plasticity", " information maximization"], "paper_abstract": "The benefits of using intrinsic plasticity (IP), an unsupervised, local, biologically inspired adaptation rule that tunes the probability density of a neuron's output towards an exponential distribution-thereby realizing an information maximization-have already been demonstrated. In this work, we extend the ideas of this adaptation method to a more commonly used non-linearity and a Gaussian output distribution. After deriving the learning rules, we show the effects of the bounded output of the transfer function oil the moments of the actual output distribution. This allows us to show that the rule converges to the expected distributions, even in random recurrent networks. The IP rule is evaluated in a reservoir computing setting, which is a temporal processing technique which uses random, untrained recurrent networks as excitable media, where the network's state is fed to a linear regressor used to calculate the desired output. We present an experimental comparison of the different IP rules on three benchmark tasks with different characteristics. Furthermore, we show that this unsupervised reservoir adaptation is able to adapt networks with very constrained topologies, such as a I D lattice which generally shows quite unsuitable dynamic behavior, to a reservoir that can be used to solve complex tasks. We clearly demonstrate that IP is able to make reservoir computing more robust: the internal dynamics can autonomously tune themselves-irrespective of initial weights or input scaling-to the dynamic regime which is optimal for a given task. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Improving reservoirs using intrinsic plasticity", "paper_id": "WOS:000255239200005"}