{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "network_processors"}, {"score": 0.004761850836420121, "phrase": "network_intrusion_prevention_systems"}, {"score": 0.004631637679516574, "phrase": "high_memory_access"}, {"score": 0.004455272634364756, "phrase": "multiple_hardware_multithreaded_processor_cores"}, {"score": 0.004357511171877593, "phrase": "versatile_memory_hierarchy"}, {"score": 0.004285594361623147, "phrase": "rich_hardware_resources"}, {"score": 0.003751228706861377, "phrase": "edge_gateway"}, {"score": 0.003608266640131664, "phrase": "processing_stages"}, {"score": 0.0035684266744407485, "phrase": "hardware_components"}, {"score": 0.0034324073240680213, "phrase": "resource_allocation"}, {"score": 0.0033384259516301223, "phrase": "internal_and_external_benchmarks"}, {"score": 0.003158088307044493, "phrase": "system_throughput"}, {"score": 0.0030545815929619306, "phrase": "total_number"}, {"score": 0.0023920904611571783, "phrase": "hardware_specification"}, {"score": 0.002262756631083292, "phrase": "packet_inspection"}, {"score": 0.0021049977753042253, "phrase": "sram_bottleneck"}], "paper_keywords": ["network intrusion and detection system", " network processor", " resource allocation", " benchmark", " bottleneck"], "paper_abstract": "Networking applications with high memory access overhead gradually exploit network processors that feature multiple hardware multithreaded processor cores along with a versatile memory hierarchy. Given rich hardware resources, however, the performance depends on whether those resources are properly allocated. In this work, we develop an NIPS (Network Intrusion Prevention System) edge gateway over the Intel IXP2400 by characterizing/mapping the processing stages onto hardware components. The impact and strategy of resource allocation are also investigated through internal and external benchmarks. Important conclusions include: (1) the system throughput is influenced mostly by the total number of threads, namely I x J, where I and J represent the numbers of processors and threads per processor, respectively, as long as the processors are not fully utilized, (2) given an application, algorithm and hardware specification, an appropriate (1, J) for packet inspection can be derived and (3) the effectiveness of multiple memory banks for tackling the SRAM bottleneck is affected considerably by the algorithms adopted. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Resource allocation in network processors for network intrusion prevention systems", "paper_id": "WOS:000247453800011"}