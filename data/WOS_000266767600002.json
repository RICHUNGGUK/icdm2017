{"auto_keywords": [{"score": 0.047949728491153365, "phrase": "replica_exchange"}, {"score": 0.04230192164302266, "phrase": "pt"}, {"score": 0.00481495049065317, "phrase": "parallel_tempering_algorithm"}, {"score": 0.0045200127552893704, "phrase": "powerful_markov_chain_monte_carlo_sampling_approach"}, {"score": 0.0043793594257092805, "phrase": "relaxation_time"}, {"score": 0.004300951511110487, "phrase": "physical_systems"}, {"score": 0.0039117447332479285, "phrase": "mpi"}, {"score": 0.003841610436545169, "phrase": "scalable_parallel_random_number_generators"}, {"score": 0.0036224139706218916, "phrase": "pseudo-random_number_generators"}, {"score": 0.0035414658322295515, "phrase": "global_synchronization"}, {"score": 0.0034311578789991363, "phrase": "interprocessor_communication"}, {"score": 0.0033696770963994043, "phrase": "pt."}, {"score": 0.003220709449062307, "phrase": "communication_overhead"}, {"score": 0.003191714656606822, "phrase": "pair-wise_process_replica_exchanges"}, {"score": 0.0030922667860233603, "phrase": "replica_exchange_point"}, {"score": 0.002915701586760994, "phrase": "common_replica_exchange_point"}, {"score": 0.0028634235895823594, "phrase": "temperature_exchange"}, {"score": 0.0028248293967214947, "phrase": "conformation_replica_exchange"}, {"score": 0.002724428781940696, "phrase": "load_balancing"}, {"score": 0.002687702958515561, "phrase": "participating_processors"}, {"score": 0.0026514708899935333, "phrase": "pt_computation"}, {"score": 0.002522738549524317, "phrase": "large-scale_massively_parallel_systems"}, {"score": 0.002455168454109375, "phrase": "parallel_pt_implementation"}, {"score": 0.0023465400668244386, "phrase": "complicated_landscapes"}, {"score": 0.0023253967212081626, "phrase": "objective_functions"}, {"score": 0.0021049977753042253, "phrase": "insignificant_communication_overhead"}], "paper_keywords": ["Markov Chain Monte Carlo", " Parallel tempering", " Parallel random numbers"], "paper_abstract": "Parallel tempering (PT), also known as replica exchange, is a powerful Markov Chain Monte Carlo sampling approach, which aims at reducing the relaxation time in simulations of physical systems. In this paper, we present a novel decentralized parallel implementation of PT using the message passing interface (MPI) and the scalable parallel random number generators (SPRNG) library. By taking advantage of the characteristics of pseudo-random number generators, this implementation eliminates global synchronization and reduces the overhead caused by interprocessor communication in replica exchange in PT. Moreover, our proposed non-blocking replica exchange reduces communication overhead in pair-wise process replica exchanges by allowing the process reaching the replica exchange point to leap-ahead while waiting for the other one to reach the common replica exchange point. Also, temperature exchange instead of conformation replica exchange is proposed to reduce communication and achieve load balancing in the participating processors in the PT computation. All these enable one to efficiently apply PT to large-scale massively parallel systems. The efficiency of this parallel PT implementation is demonstrated in the context of minimizing various benchmark functions with complicated landscapes as objective functions. Our computational results and analysis have shown that the decentralized PT is scalable, reproducible, load-balanced, and yields insignificant communication overhead. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "A decentralized parallel implementation for parallel tempering algorithm", "paper_id": "WOS:000266767600002"}