{"auto_keywords": [{"score": 0.04593157957492587, "phrase": "xml_schemas"}, {"score": 0.03536697936815565, "phrase": "conceptual_schemas"}, {"score": 0.03492712282017369, "phrase": "platform-specific_level"}, {"score": 0.01161275661625304, "phrase": "mdd_hierarchy"}, {"score": 0.00481495049065317, "phrase": "conceptual_model"}, {"score": 0.004652016085325825, "phrase": "xml_data"}, {"score": 0.004475266375001531, "phrase": "novel_approach"}, {"score": 0.0044369056710423065, "phrase": "conceptual_modeling"}, {"score": 0.0041773934798743405, "phrase": "whole_family"}, {"score": 0.0040708542958968605, "phrase": "particular_application_domain"}, {"score": 0.003949974260471287, "phrase": "well-established_way"}, {"score": 0.003865826699096508, "phrase": "model-driven_development"}, {"score": 0.0036395944934310524, "phrase": "conceptual_schema"}, {"score": 0.003592859432554987, "phrase": "platform-independent_level"}, {"score": 0.003426556090707852, "phrase": "desired_xml_schemas"}, {"score": 0.003282045115446616, "phrase": "mdd"}, {"score": 0.003239893309590042, "phrase": "schemas"}, {"score": 0.0031166151196841308, "phrase": "particular_xml_schemas"}, {"score": 0.00306334226516593, "phrase": "forward-engineering_direction"}, {"score": 0.003037047249598515, "phrase": "reverse-engineering_direction"}, {"score": 0.0030109772626153797, "phrase": "existing_xml_schemas"}, {"score": 0.0027982016314450717, "phrase": "introduced_approach"}, {"score": 0.0027503564589458837, "phrase": "regular_tree_grammars"}, {"score": 0.0025014634138145263, "phrase": "xml"}, {"score": 0.0023145690608400425, "phrase": "expressive_power"}, {"score": 0.0021789194955896124, "phrase": "introduced_translation_algorithms"}, {"score": 0.0021601997088758957, "phrase": "platform-specific_and_xml_schema_levels"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["XML schema", " Conceptual modeling", " Regular tree grammars", " Conceptual to XML schema transformation"], "paper_abstract": "In this paper we introduce a novel approach to conceptual modeling for XML schemas. Compared to other approaches, it allows for modeling of a whole family of XML schemas related to a particular application domain. It is integrated in a well-established way of software-engineering, namely Model-Driven Development (MDD). It allows software-engineers to naturally model their application domain using a conceptual schema at the platform-independent level of the MDD hierarchy. From there they can design the desired XML schemas in a form of conceptual schemas at the platform-specific level of MDD hierarchy. Schemas at the platform-specific level are then automatically translated to particular XML schemas. Beside this forward-engineering direction, reverse-engineering direction integrating existing XML schemas into the MDD hierarchy is supported as well. We provide several theoretical results which ensure correctness of the introduced approach. We exploit regular tree grammars to formalize XML schemas. We formalize the bindings between the schemas at the two MDD levels and between schemas at the platform-specific level and XML schemas. We prove that conceptual schemas specify the target XML schemas unambiguously. We also prove the expressive power of the conceptual schemas. And, finally, we prove correctness of the introduced translation algorithms between platform-specific and XML schema levels. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "When conceptual model meets grammar: A dual approach to XML data modeling", "paper_id": "WOS:000300072600001"}