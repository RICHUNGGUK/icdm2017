{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "intensional_type_theory"}, {"score": 0.04885877600670675, "phrase": "dependent_type_theory"}, {"score": 0.015520280088268498, "phrase": "a._setzer"}, {"score": 0.015441347594877494, "phrase": "interactive"}, {"score": 0.004644014990871423, "phrase": "p._clote"}, {"score": 0.004620093797504386, "phrase": "h._schwichtenberg"}, {"score": 0.004549214977516311, "phrase": "proc"}, {"score": 0.00446756824328914, "phrase": "eacsl"}, {"score": 0.004421653206969704, "phrase": "fischbau"}, {"score": 0.004399000092691344, "phrase": "germany"}, {"score": 0.00426467925122335, "phrase": "springer"}, {"score": 0.004242673101244866, "phrase": "berlin"}, {"score": 0.004081385289516914, "phrase": "p._hancock"}, {"score": 0.003926230728522374, "phrase": "l._crosilla"}, {"score": 0.003905992313175603, "phrase": "p._schuster"}, {"score": 0.0037984897066906122, "phrase": "topology"}, {"score": 0.003791613806597415, "phrase": "analysis"}, {"score": 0.0037477818075841076, "phrase": "practicable_foundations"}, {"score": 0.0037284597940314404, "phrase": "constructive_mathematics"}, {"score": 0.0037092370259018113, "phrase": "oxford_logic_guides"}, {"score": 0.0036901129972465177, "phrase": "clarendon_press"}, {"score": 0.0035681798539414266, "phrase": "setzer"}, {"score": 0.0035223577817660597, "phrase": "martin-lof's_type_theory"}, {"score": 0.0034771228725942846, "phrase": "interactive_programming"}, {"score": 0.0033971539563683174, "phrase": "weakly_final_coalgebras"}, {"score": 0.003370907075333389, "phrase": "general_form"}, {"score": 0.003353521531649663, "phrase": "polynomial_functor"}, {"score": 0.003327610635164034, "phrase": "standard_rules"}, {"score": 0.003267925215811654, "phrase": "inductive_types"}, {"score": 0.0032259472087775138, "phrase": "initial_algebras"}, {"score": 0.003209306891991172, "phrase": "coalgebraic_types"}, {"score": 0.003159897557599185, "phrase": "direct_way"}, {"score": 0.003079228090561592, "phrase": "final_coalgebras"}, {"score": 0.0029697285713156, "phrase": "identity_proofs"}, {"score": 0.002954405982925685, "phrase": "u_i_p"}, {"score": 0.0029089095588612007, "phrase": "states_s"}, {"score": 0.002755104031926742, "phrase": "essentially_the_same_behaviour"}, {"score": 0.002670884656785558, "phrase": "selzer"}, {"score": 0.0026571000696584655, "phrase": "hancock"}, {"score": 0.0026365556244432125, "phrase": "ordinary_type_theory"}, {"score": 0.0026026666736474404, "phrase": "definitional_equality"}, {"score": 0.002555950807368337, "phrase": "m._michelbrink"}, {"score": 0.0025427654583584126, "phrase": "verifications"}, {"score": 0.0025296325165671315, "phrase": "final_coalgebra_theorem"}, {"score": 0.002471400498582011, "phrase": "coalgebras_-_a_final_coalgebra_theorem"}, {"score": 0.0023650305205893353, "phrase": "theorem_prover_agda"}, {"score": 0.0023528205648945077, "phrase": "c._coquand"}, {"score": 0.002340675414512263, "phrase": "agda"}, {"score": 0.0022749744354271816, "phrase": "k._peterson"}, {"score": 0.0022399174232611853, "phrase": "type_theory"}, {"score": 0.0022283519468680475, "phrase": "technical_report"}, {"score": 0.002199698267439487, "phrase": "chalmers_university_of_technology"}, {"score": 0.0021883403270191427, "phrase": "goteborg"}, {"score": 0.002137947680862631, "phrase": "intensional_martin-lof_type_theory"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["dependent type theory", " interactive programming", " Coalgebra"], "paper_abstract": "In [P. Hancock, A. Setzer, Interactive programs in dependent type theory, in: P. Clote, H. Schwichtenberg (Eds.), Proc. 14th Annu. Conf. of EACSL, CSL'00, Fischbau, Germany, 21-26 August 2000, Vol. 1862, Springer, Berlin, 2000, pp. 317-331, URL (citeseer.ist.psu.edu/article/hancock00interactive.html); P. Hancock, A. Setzer, Interactive programs and weakly final coalgebras in dependent type theory, in: L. Crosilla, P. Schuster (Eds.), From Sets and Types to Topology and Analysis. Towards Practicable Foundations for Constructive Mathematics, Oxford Logic Guides, Clarendon Press, 2005, URL (www.cs.swan.ac.uk/similar to csetzer/)] Hancock and Setzer introduced rules to extend Martin-Lof's type theory in order to represent interactive programming. The rules essentially reflect the existence of weakly final coalgebras for a general form of polynomial functor. The standard rules of dependent type theory allow the definition of inductive types, which correspond to initial algebras. Coalgebraic types are not represented in a direct way. In this article we show the existence of final coalgebras in intensional type theory for these kind of functors, where we require uniqueness of identity proofs (U I P) for the set of states S and the set of commands C which determine the functor. We obtain the result by identifying programs which have essentially the same behaviour, viz. are bisimular. This proves the rules of Selzer and Hancock admissible in ordinary type theory, if we replace definitional equality by bisimulation. All proofs [M. Michelbrink, Verifications of final coalgebra theorem in: Interfaces as Functors, Programs as Coalgebras - A Final Coalgebra Theorem in Intensional Type Theory, 2005, URL (www.cs.swan.ac.uk/similar to csmichel/)] are verified in the theorem prover agda [C. Coquand, Agda, Internet, URL (www.cs.chalmers.se/similar to catarina/agda/); K. Peterson, A programming system for type theory, Technical Report, S-412 96, Chalmers University of Technology, Goteborg, 1982], which is based on intensional Martin-Lof type theory. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Interfaces as functors, programs as coalgebras - A final coalgebra theorem in intensional type theory", "paper_id": "WOS:000240053000018"}