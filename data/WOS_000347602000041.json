{"auto_keywords": [{"score": 0.03660880378801312, "phrase": "syntax_tree"}, {"score": 0.032701624018378575, "phrase": "nfa"}, {"score": 0.00481495049065317, "phrase": "postfix_automata"}, {"score": 0.004676895436217523, "phrase": "finite_automata_constructions"}, {"score": 0.004542780650208743, "phrase": "compact_method"}, {"score": 0.004464156619275582, "phrase": "smaller_nondeterministic_finite_automata"}, {"score": 0.003950453462399077, "phrase": "regular_expressions"}, {"score": 0.003904713104101532, "phrase": "postfix_form"}, {"score": 0.003792657064634775, "phrase": "reverse_polish_notation"}, {"score": 0.003415137969569376, "phrase": "postfix_regular_expression"}, {"score": 0.003221837753001224, "phrase": "specific_algorithm"}, {"score": 0.003021781956684419, "phrase": "coded_syntax_tree"}, {"score": 0.0029009722548088306, "phrase": "smaller_nfas"}, {"score": 0.002566685388128598, "phrase": "classical_example"}, {"score": 0.0024640253074497114, "phrase": "postfix_automaton"}, {"score": 0.0021799789348982534, "phrase": "general_theoretical_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Regular expression", " Finite automata", " Follow automata", " Thompson's automata"], "paper_abstract": "We introduce a notion of postfix automata and apply it to finite automata constructions. We give a compact method for constructing smaller nondeterministic finite automata (NFAs) from given regular expressions. There are four steps in our method. First, we convert one or more given regular expressions into postfix form, better known as Reverse Polish notation, and call it a postfix regular expression. Second, we construct a syntax tree for the postfix regular expression. Next, we code the syntax tree using a specific algorithm and finally, we construct an NFA based on the coded syntax tree. Using our method we can obtain smaller NFAs, called postfix automata, with only one starting state and one final state. In this paper, we prove several notions and present a classical example to compare the size of a postfix automaton with the NFAs created by several classical construction methods. We also derive the efficiency in reducing the size of the NFA through general theoretical analysis. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Postfix automata", "paper_id": "WOS:000347602000041"}