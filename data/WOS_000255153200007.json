{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "input_validation"}, {"score": 0.00427578268550103, "phrase": "essential_and_important_feature"}, {"score": 0.004212759658511567, "phrase": "large_class"}, {"score": 0.004069280130346136, "phrase": "major_part"}, {"score": 0.004009288598277725, "phrase": "data-intensive_system"}, {"score": 0.0037407704200033607, "phrase": "application_developers"}, {"score": 0.0034901729647741353, "phrase": "challenging_issue"}, {"score": 0.0033050703534275717, "phrase": "control_flow_graph"}, {"score": 0.0029637093924781825, "phrase": "empirical_properties"}, {"score": 0.002618278365749875, "phrase": "input_validation_model"}, {"score": 0.0025668646315794947, "phrase": "use_program"}, {"score": 0.0025541693207036167, "phrase": "slicing_techniques"}, {"score": 0.0023710856920150574, "phrase": "proposed_method"}, {"score": 0.0023476849595393872, "phrase": "case_studies"}, {"score": 0.00216858686400722, "phrase": "experienced_and_inexperienced_developers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["software maintenance", " input validation", " empirical properties", " program slicing", " feature recovery"], "paper_abstract": "Input validation is the enforcement of constraints that an input must satisfy before it is accepted in a program. It is an essential and important feature in a large class of systems and usually forms a major part of a data-intensive system. Currently, the design and implementation of input validation are carried out by application developers. The recovery and maintenance of input validation implemented in a system is a challenging issue. In this paper, we introduce a variant of control flow graph, called validation flow graph as a model to analyze input validation implemented in a program. We have also discovered some empirical properties that characterizing the implementation of input validation. Based on the model and the properties discovered, we then propose a method that recovers the input validation model from source and use program slicing techniques to aid the understanding and maintenance of input validation. We have also evaluated the proposed method through case studies. The results show that the method can be very useful and effective for both experienced and inexperienced developers. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "An approach for the maintenance of input validation", "paper_id": "WOS:000255153200007"}