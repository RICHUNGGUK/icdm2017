{"auto_keywords": [{"score": 0.024047113778664857, "phrase": "fine_automaton"}, {"score": 0.015719716506582538, "phrase": "fine_automata"}, {"score": 0.015593671747695027, "phrase": "safety_properties"}, {"score": 0.013874053029212897, "phrase": "bad_prefixes"}, {"score": 0.013379424530686726, "phrase": "infinite_computation"}, {"score": 0.007230838204525283, "phrase": "buchi_automaton"}, {"score": 0.004717960684395242, "phrase": "special_interest"}, {"score": 0.0046797114400479135, "phrase": "formal_verification"}, {"score": 0.0044385053213394175, "phrase": "allowed_region"}, {"score": 0.004384623928442369, "phrase": "safety_property_psi"}, {"score": 0.004158563941891469, "phrase": "finite_computations"}, {"score": 0.004058180509184539, "phrase": "psi_iff"}, {"score": 0.0038645966233348933, "phrase": "safety_property"}, {"score": 0.0036207206487324506, "phrase": "finite_words"}, {"score": 0.003447932289587852, "phrase": "bad_prefix"}, {"score": 0.0032567057896906314, "phrase": "significantly_methods"}, {"score": 0.0032302647179383915, "phrase": "symbolic_fixed-point_based_verification"}, {"score": 0.0028935680100446583, "phrase": "safety_ltl_formula"}, {"score": 0.0028467558213723697, "phrase": "nondeterministic_buchi_automaton"}, {"score": 0.0027666443986705453, "phrase": "tight_bad-prefix_automaton"}, {"score": 0.002623785020401725, "phrase": "kupferman"}, {"score": 0.0026024732591900944, "phrase": "vardi"}, {"score": 0.0024680632991561074, "phrase": "tight_automaton"}, {"score": 0.002438043578514396, "phrase": "fine_automaton-one"}, {"score": 0.0021049977753042253, "phrase": "general_safety_ltl_formulas"}], "paper_keywords": [""], "paper_abstract": "Of special interest in formal verification are safety properties, which assert that the system always stays within some allowed region. Each safety property psi can be associated with a set of bad prefixes: a set of finite computations such that an infinite computation violates psi iff it has a prefix in the set. By translating a safety property to an automaton for its set of bad prefixes, verification can be reduced to reasoning about finite words: a system is correct if none of its computations has a bad prefix. Checking the latter circumvents the need to reason about cycles and simplifies significantly methods like symbolic fixed-point based verification, bounded model checking, and more. A drawback of the translation lies in the size of the automata: while the translation of a safety LTL formula psi to a nondeterministic Buchi automaton is exponential, its translation to a tight bad-prefix automaton-one that accepts all the bad prefixes of psi, is doubly exponential. Kupferman and Vardi showed that for the purpose of verification, one can replace the tight automaton by a fine automaton-one that accepts at least one bad prefix of each infinite computation that violates psi. They also showed that for many safety LTL formulas, a fine automaton has the same structure as the Buchi automaton for the formula. The problem of constructing fine automata for general safety LTL formulas was left open. In this paper we solve this problem and show that while a fine automaton cannot, in general, have the same structure as the Buchi automaton for the formula, the size of a fine automaton is still only exponential in the length of the formula.", "paper_title": "On the construction of fine automata for safety properties", "paper_id": "WOS:000241648200011"}