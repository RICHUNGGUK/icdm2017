{"auto_keywords": [{"score": 0.024297382385833073, "phrase": "livermore"}, {"score": 0.00481495049065317, "phrase": "energy_efficient_reliability"}, {"score": 0.004784331242964228, "phrase": "embedded_systems"}, {"score": 0.00475390577915698, "phrase": "smart_cache_cleaning"}, {"score": 0.004723672884600079, "phrase": "incessant_and_rapid_technology"}, {"score": 0.0045317702763072445, "phrase": "future_transistors"}, {"score": 0.0044742996274375404, "phrase": "transient_errors"}, {"score": 0.004251582719171643, "phrase": "sheer_size"}, {"score": 0.004078780515171644, "phrase": "electrical_interference"}, {"score": 0.0038633204164544802, "phrase": "soft_errors"}, {"score": 0.0034880375790382586, "phrase": "vulnerable_data"}, {"score": 0.0033891942983439146, "phrase": "increased_memory"}, {"score": 0.003293142761521425, "phrase": "smart_cache_cleaning_methodology"}, {"score": 0.0031794236141757, "phrase": "chosen_times"}, {"score": 0.003139048969111903, "phrase": "data_cache_protection"}, {"score": 0.0028887887866517496, "phrase": "improved_software_solution"}, {"score": 0.002861224098631869, "phrase": "cache_write-back_functionality"}, {"score": 0.002849764018269018, "phrase": "linpack"}, {"score": 0.0027800937731919276, "phrase": "hardware_overhead"}, {"score": 0.002574788013427524, "phrase": "customizable_energy-efficient_soft_error_reduction"}, {"score": 0.002501759237420687, "phrase": "system_requirements"}, {"score": 0.0024075916292945715, "phrase": "appropriate_parameters"}, {"score": 0.002346786090713685, "phrase": "trade-off_power_consumption"}, {"score": 0.002173409712988074, "phrase": "hardware_based_cache_reliability_techniques"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Reliability", " soft error", " power efficiency", " embedded system", " smart cache", " cache cleaning"], "paper_abstract": "Incessant and rapid technology scaling has brought us to a point where today's, and future transistors are susceptible to transient errors induced by energy carrying particles, called soft errors. Within a processor, the sheer size and nature of data in the caches render it most vulnerable to electrical interference on data stored in the cache. Data in the cache is vulnerable to corruption by soft errors, for the time it remains actively unused in the cache. Write-through and early-write-back [Li et al. 2004] cache configurations reduce the time for vulnerable data in the cache, at the cost of increased memory writes and thereby energy. We propose a smart cache cleaning methodology, that enables copying of only specific vulnerable cache blocks into the memory at chosen times, thereby ensuring data cache protection with minimal memory writes. In this work, we first propose a hybrid (software-hardware) methodology. We then propose an improved software solution that utilizes cache write-back functionality available in commodity processors; thereby reducing the hardware overhead required to implement smart cache cleaning for such systems. The parameters involved in the implementation of our Smart Cache Cleaning (SCC) technique enable a means to provide for customizable energy-efficient soft error reduction in the L1 data cache. Given the system requirements of reliability, power-budget and runtime priority of the application, appropriate parameters of the SCC can be customized to trade-off power consumption and L1 data cache reliability. Our experiments over LINPACK and Livermore benchmarks demonstrate 26% reduced energy-vulnerability product (energy-efficient vulnerability reduction) compared to that of hardware based cache reliability techniques. Our software-only solution achieves same levels of reliability with an additional 28% performance improvement.", "paper_title": "Enabling Energy Efficient Reliability in Embedded Systems Through Smart Cache Cleaning", "paper_id": "WOS:000327119100009"}