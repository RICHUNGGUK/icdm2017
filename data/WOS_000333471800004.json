{"auto_keywords": [{"score": 0.040852203062493146, "phrase": "routing_tables"}, {"score": 0.015279904083785283, "phrase": "application-specific_socs"}, {"score": 0.007709255570525545, "phrase": "mapping_tool"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_soc_designs"}, {"score": 0.004760017604908536, "phrase": "small_implementation_overhead"}, {"score": 0.004392565073466714, "phrase": "complex_and_customized_implementation"}, {"score": 0.004317576641196539, "phrase": "routing_algorithm"}, {"score": 0.0041001740903338834, "phrase": "memory_structures"}, {"score": 0.004053362743156545, "phrase": "source_end_nodes"}, {"score": 0.0039841418890102925, "phrase": "system_size"}, {"score": 0.0037617986040878342, "phrase": "nonnegligible_impact"}, {"score": 0.003613556291453534, "phrase": "latency_overheads"}, {"score": 0.003431481042678356, "phrase": "routing_implementation"}, {"score": 0.003277327351139926, "phrase": "efficient_manner"}, {"score": 0.003130077012135034, "phrase": "small_logic_block"}, {"score": 0.0030239842475439814, "phrase": "deadlock-free_routing_algorithm"}, {"score": 0.0027741761880779535, "phrase": "initial_irregular_topology"}, {"score": 0.002726740692380339, "phrase": "soc_system"}, {"score": 0.002680114113899346, "phrase": "logical_regular_structure"}, {"score": 0.0024586427394152196, "phrase": "proposed_routing_mechanism"}, {"score": 0.0024305268807926056, "phrase": "evaluation_results"}, {"score": 0.0022815262950738814, "phrase": "low_area"}, {"score": 0.002255431275670053, "phrase": "timing_requirements"}, {"score": 0.002129356014992349, "phrase": "routing_mechanism"}, {"score": 0.0021049977753042253, "phrase": "complex_irregular_soc_topologies"}], "paper_keywords": ["Systems-on-chip", " networks-on-chip", " routing", " evaluation"], "paper_abstract": "In application-specific SoCs, the irregularity of the topology ends up in a complex and customized implementation of the routing algorithm, usually relying on routing tables implemented with memory structures at source end nodes. As system size increases, the routing tables also increase in size with nonnegligible impact on power, area, and latency overheads. In this paper, we present a routing implementation for application-specific SoCs able to implement in an efficient manner (with no routing tables and using a small logic block in every switch) a deadlock-free routing algorithm in these irregular networks. The mechanism relies on a tool that maps the initial irregular topology of the SoC system into a logical regular structure where the mechanism can be applied. We provide details for both the mapping tool and the proposed routing mechanism. Evaluation results show the effectiveness of the mapping tool as well as the low area and timing requirements of the mechanism. With the mapping tool and the routing mechanism, complex irregular SoC topologies can now be supported without the need for routing tables.", "paper_title": "Efficient Routing in Heterogeneous SoC Designs with Small Implementation Overhead", "paper_id": "WOS:000333471800004"}