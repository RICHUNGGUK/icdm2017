{"auto_keywords": [{"score": 0.04432077024897855, "phrase": "mathematical_practice"}, {"score": 0.00481495049065317, "phrase": "textbook_proofs"}, {"score": 0.004756805752518494, "phrase": "formal_logic"}, {"score": 0.004727995968069753, "phrase": "-_the_problem"}, {"score": 0.00453113241842654, "phrase": "computer_algebra_systems"}, {"score": 0.004476399615305783, "phrase": "automated_theorem_provers"}, {"score": 0.004342430078306461, "phrase": "considerable_recognition"}, {"score": 0.004161553532799662, "phrase": "significant_shortcoming"}, {"score": 0.0041112665381266315, "phrase": "mathematical_proof_assistance_systems"}, {"score": 0.003964007795174772, "phrase": "fully_formal_representation"}, {"score": 0.003916098498242888, "phrase": "mathematical_content"}, {"score": 0.0034887749053459584, "phrase": "mathematical_paper_writing"}, {"score": 0.0034049123167891955, "phrase": "scientific_text_editor"}, {"score": 0.0033637374697995616, "phrase": "mathematical_assistance_systems"}, {"score": 0.0033029038236817372, "phrase": "mathematical_derivations"}, {"score": 0.0032431667821391044, "phrase": "human_beings"}, {"score": 0.0031845067058084583, "phrase": "mathematical_document"}, {"score": 0.0029244418026475832, "phrase": "calculus-independent_representation_language"}, {"score": 0.002802462902794585, "phrase": "underspecified_parts"}, {"score": 0.002511600086227215, "phrase": "acceptable_level"}, {"score": 0.002320449502337321, "phrase": "basic_steps"}, {"score": 0.0022236070278432575, "phrase": "proof_assistance_systems"}, {"score": 0.0021966859554037174, "phrase": "formal_verification"}, {"score": 0.0021049977753042253, "phrase": "example_textbook_proof"}], "paper_keywords": [""], "paper_abstract": "Unlike computer algebra systems, automated theorem provers have not yet achieved considerable recognition and relevance in mathematical practice. A significant shortcoming of mathematical proof assistance systems is that they require the fully formal representation of mathematical content, whereas in mathematical practice an informal, natural-language-like representation where obvious parts are omitted is common. We aim to support mathematical paper writing by integrating a scientific text editor and mathematical assistance systems such that mathematical derivations authored by human beings in a mathematical document can be automatically checked. To this end, we first define a calculus-independent representation language for formal mathematics that allows for underspecified parts. Then we provide two systems of rules that check if a proof is correct and at an acceptable level of granularity. These checks are clone by decomposing the proof into basic steps that are then passed on to proof assistance systems for formal verification. We illustrate our approach using an example textbook proof.", "paper_title": "Textbook proofs meet formal logic - The problem of underspecification and granularity", "paper_id": "WOS:000236905900007"}