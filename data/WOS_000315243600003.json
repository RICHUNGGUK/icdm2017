{"auto_keywords": [{"score": 0.03988934846863702, "phrase": "ip_fast_rerouting"}, {"score": 0.027966738932058796, "phrase": "backup_routes"}, {"score": 0.00481495049065317, "phrase": "compressed_backup_flow_entries"}, {"score": 0.004561019117546361, "phrase": "ip_fast_rerouting_method"}, {"score": 0.0043793594257092805, "phrase": "openflow_framework"}, {"score": 0.004262273304740847, "phrase": "current_ip"}, {"score": 0.0037219886365287085, "phrase": "milliseconds-order_recovery_time"}, {"score": 0.003671865026158296, "phrase": "proactive_and_local_restoration_mechanism"}, {"score": 0.0034545033623115634, "phrase": "real_systems"}, {"score": 0.003249966782844541, "phrase": "additional_forwarding_functions"}, {"score": 0.0031845067058084583, "phrase": "commercial_hardware"}, {"score": 0.0030783143919343972, "phrase": "ip_fast_rerouting_mechanism"}, {"score": 0.002975652654536407, "phrase": "control_function"}, {"score": 0.0029355502535757696, "phrase": "hardware_implementation"}, {"score": 0.0027616550517346066, "phrase": "current_forwarding_hardware"}, {"score": 0.002598034157587518, "phrase": "main_overhead"}, {"score": 0.0024607296642187846, "phrase": "compression_mechanism"}, {"score": 0.0022074592164608134, "phrase": "fast_restoration"}, {"score": 0.0021049977753042253, "phrase": "computer_simulations"}], "paper_keywords": ["flow table compression", " implementation", " IP fast rerouting", " OpenFlow", " restoration"], "paper_abstract": "This paper proposes an IP fast rerouting method which can be implemented in OpenFlow framework. While the current IP is robust, its reactive and global rerouting processes require the long recovery time against failure. On the other hand, IP fast rerouting provides a milliseconds-order recovery time by proactive and local restoration mechanism. Implementation of IP fast rerouting is not common in real systems, however; it requires the coordination of additional forwarding functions to a commercial hardware. We propose an IP fast rerouting mechanism using OpenFlow that separates control function from hardware implementation. Our mechanism does not require any extension of current forwarding hardware. On the contrary, increase of backup routes becomes main overhead of our proposal. We also embed the compression mechanism to our IP fast rerouting mechanism. We show the effectiveness of our IP fast rerouting in terms of the fast restoration and the backup routes compression effect through computer simulations.", "paper_title": "Autonomous IP Fast Rerouting with Compressed Backup Flow Entries Using OpenFlow", "paper_id": "WOS:000315243600003"}