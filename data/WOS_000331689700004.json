{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "possibilistic_xml_data"}, {"score": 0.004760394308239882, "phrase": "traditional_databases"}, {"score": 0.004574247691703376, "phrase": "deterministic_data"}, {"score": 0.004345525254560329, "phrase": "practical_applications"}, {"score": 0.0041517954514423625, "phrase": "basic_framework"}, {"score": 0.004081385289516914, "phrase": "possibilistic_xml"}, {"score": 0.003944112858235306, "phrase": "data_queries"}, {"score": 0.003877211065759289, "phrase": "dynamic_environment"}, {"score": 0.0038332390893263844, "phrase": "existing_efforts"}, {"score": 0.0037042817107563785, "phrase": "xml_data"}, {"score": 0.0036001255166809793, "phrase": "crisp_concepts"}, {"score": 0.0035189057079817285, "phrase": "static_labeling_schemes"}, {"score": 0.0034395119150793787, "phrase": "updating_operation"}, {"score": 0.0033427754823819157, "phrase": "static_labeling_scheme_approaches"}, {"score": 0.0032302647179383915, "phrase": "whole_original_xml_document"}, {"score": 0.002982203248352076, "phrase": "processing_performance"}, {"score": 0.002898291237210567, "phrase": "prior_work"}, {"score": 0.0028167336373711494, "phrase": "novel_dynamic_encoding_scheme"}, {"score": 0.0027218799769229596, "phrase": "static_and_dynamic_possibilistic_xml_documents"}, {"score": 0.0024700776739384977, "phrase": "efficient_algorithm"}, {"score": 0.002386869729952315, "phrase": "dynamic_twig_queries"}, {"score": 0.002359759876402679, "phrase": "possibilistic_xml_documents"}, {"score": 0.002178400923036365, "phrase": "previous_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Updating operation", " Possibilistic XML", " Dynamic encoding scheme", " Dynamic twig queries"], "paper_abstract": "Traditional databases mainly focus on the processing of deterministic data. However, information is often uncertain in practical applications. This paper aims to provide a basic framework for managing possibilistic XML (Extensible Markup Language) data queries in a dynamic environment. Existing efforts are mainly made on querying XML data towards the representation of crisp concepts based on the static labeling schemes. Once an updating operation is involved, these static labeling scheme approaches often need to search the whole original XML document again to relabel all the labels of the nodes. This re-labeling obviously sacrifices the processing performance. Different from the prior work, we adopt a novel dynamic encoding scheme which is tailored for both static and dynamic possibilistic XML documents to effectively avoid re-labeling after updates. On this basis, we propose an efficient algorithm to handle the problem of dynamic twig queries in possibilistic XML documents. Finally, we report our experimental results to show that our algorithm is superior to previous approaches. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Dynamically querying possibilistic XML data", "paper_id": "WOS:000331689700004"}