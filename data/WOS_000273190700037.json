{"auto_keywords": [{"score": 0.03861529053005001, "phrase": "partial_forwarding_structure"}, {"score": 0.01549979141690012, "phrase": "available_distance"}, {"score": 0.015068988042376922, "phrase": "partial_forwarding"}, {"score": 0.008496290932156838, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "heuristic_instruction_scheduling_algorithm"}, {"score": 0.0046797114400479135, "phrase": "partial_forwarding_processor"}, {"score": 0.004515967518891287, "phrase": "design_method"}, {"score": 0.004420472010542188, "phrase": "forwarding_paths"}, {"score": 0.004265760046406154, "phrase": "processor_pipeline"}, {"score": 0.004205395707787349, "phrase": "hardware_cost"}, {"score": 0.004000741805312148, "phrase": "performance_loss"}, {"score": 0.003752126270661821, "phrase": "instruction_scheduler"}, {"score": 0.003544088803300751, "phrase": "et_processor"}, {"score": 0.0034444213065548688, "phrase": "conventional_scheduling_algorithm"}, {"score": 0.003072918736387408, "phrase": "heuristic_instruction_scheduling_method"}, {"score": 0.002923214590192792, "phrase": "proposed_algorithm"}, {"score": 0.0028409576481842457, "phrase": "schedule_instructions"}, {"score": 0.0027218799769229596, "phrase": "target_partial_forwarding_processor"}, {"score": 0.0025525322651112365, "phrase": "near-optimal_solutions"}, {"score": 0.0024108455980729284, "phrase": "optimized_codes"}, {"score": 0.0023766673143502384, "phrase": "partial_forwarding_processor_run"}, {"score": 0.002326304140277375, "phrase": "shortest_time"}, {"score": 0.0022770057597574734, "phrase": "target_processors"}, {"score": 0.0021049977753042253, "phrase": "hazard_detection_unit"}], "paper_keywords": ["partial forwarding", " instruction scheduling", " compiler", " design space exploration"], "paper_abstract": "Partial forwarding is a design method to place forwarding paths on a part of processor pipeline. Hardware cost of processor can be reduced without performance loss by partial forwarding. However, compiler with the instruction scheduler which considers partial forwarding structure of the tan,et processor is required since conventional scheduling algorithm cannot make the most of partial forwarding structure. In this paper, we propose a heuristic instruction scheduling method for processors with partial forwarding structure. The proposed algorithm uses available distance to schedule instructions which are suitable for the target partial forwarding processor. Experimental results show that the proposed method generates near-optimal solutions in practical time and some of the optimized codes for partial forwarding processor run in the shortest time among the target processors. It also shows that the proposed method is superior to hazard detection unit.", "paper_title": "Heuristic Instruction Scheduling Algorithm Using Available Distance for Partial Forwarding Processor", "paper_id": "WOS:000273190700037"}