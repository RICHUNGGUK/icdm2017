{"auto_keywords": [{"score": 0.042212060457322266, "phrase": "motion_vectors"}, {"score": 0.02803887144942503, "phrase": "target_object"}, {"score": 0.00481495049065317, "phrase": "motion_estimation"}, {"score": 0.004690952711665194, "phrase": "motion_vector_similarity"}, {"score": 0.004650330504968421, "phrase": "neighboring_blocks"}, {"score": 0.004550300345169981, "phrase": "motion_estimation_algorithms"}, {"score": 0.0044524122425287005, "phrase": "nonneighboring_blocks"}, {"score": 0.004337710093279712, "phrase": "similar_motions"}, {"score": 0.003856898743576605, "phrase": "clustering_structure"}, {"score": 0.0037087324991876727, "phrase": "progressive_clustering_algorithm"}, {"score": 0.0035199624440843892, "phrase": "incremental_clustering_statistics"}, {"score": 0.003399466007862412, "phrase": "motion_vector_predictors"}, {"score": 0.0031431690368229443, "phrase": "best-matching_candidate"}, {"score": 0.0030223381739019894, "phrase": "clustering_based_search"}, {"score": 0.002996178328083529, "phrase": "cuda"}, {"score": 0.0029701328654852246, "phrase": "gpu_acceleration"}, {"score": 0.002931569771634119, "phrase": "interesting_application"}, {"score": 0.002893505913503472, "phrase": "clustering_statistics"}, {"score": 0.002868404184756447, "phrase": "persistent_static_object_tracking"}, {"score": 0.0026175952455594277, "phrase": "significant_changes"}, {"score": 0.0024306740161601625, "phrase": "xiph.org_video_test_media_dataset"}, {"score": 0.0023371689326096476, "phrase": "state-of-the-art_motion_estimation_algorithms"}, {"score": 0.0022277448907881306, "phrase": "full_search_algorithm"}, {"score": 0.0021049977753042253, "phrase": "auxiliary_tracking_areas"}], "paper_keywords": ["Algorithms", " Progressive clustering", " block matching", " motion estimation", " auxiliary tracking"], "paper_abstract": "The motion vector similarity between neighboring blocks is widely used in motion estimation algorithms. However, for nonneighboring blocks, they may also have similar motions due to close depths or belonging to the same object inside the scene. Therefore, the motion vectors usually have several kinds of patterns, which reveal a clustering structure. In this article, we propose a progressive clustering algorithm, which periodically counts the motion vectors of the past blocks to make incremental clustering statistics. These statistics are used as the motion vector predictors for the following blocks. It is proved to be much more efficient for one block to find the best-matching candidate with the predictors. We also design the clustering based search with CUDA for GPU acceleration. Another interesting application of the clustering statistics is persistent static object tracking. Based on the statistics, several auxiliary tracking areas are created to guide the object tracking. Even when the target object has significant changes in appearance or it disappears occasionally, its position still can be predicted. The experiments on Xiph.org Video Test Media dataset illustrate that our clustering based search algorithm outperforms the mainstream and some state-of-the-art motion estimation algorithms. It is 33 times faster on average than the full search algorithm with only slightly higher mean-square error values in the experiments. The tracking results show that the auxiliary tracking areas help to locate the target object effectively.", "paper_title": "Progressive Motion Vector Clustering for Motion Estimation and Auxiliary Tracking", "paper_id": "WOS:000349852500001"}