{"auto_keywords": [{"score": 0.0494698167146389, "phrase": "fpgas"}, {"score": 0.00481495049065317, "phrase": "lti_mimo_state_space_systems"}, {"score": 0.00429057323623293, "phrase": "field_programmable_gate_arrays"}, {"score": 0.0041287394089001405, "phrase": "remarkable_potential"}, {"score": 0.004050116768809519, "phrase": "control_systems_applications"}, {"score": 0.0037262941538784094, "phrase": "inherited_serial_central_processor_units"}, {"score": 0.003494866798828308, "phrase": "increasing_execution_speed_demands"}, {"score": 0.003298856341173034, "phrase": "parallel_architectures"}, {"score": 0.0032359856233193504, "phrase": "tremendous_challenge"}, {"score": 0.0031743093007496736, "phrase": "overwhelming_numbers"}, {"score": 0.003133844153806967, "phrase": "unexplored_options"}, {"score": 0.0030938932434437178, "phrase": "conflicting_factors"}, {"score": 0.002958021635132416, "phrase": "parallelisation_characterisation"}, {"score": 0.0029203055813347874, "phrase": "generic_mimo_systems"}, {"score": 0.0028830690329478465, "phrase": "stand-alone_fpga_implementations"}, {"score": 0.002535779689260244, "phrase": "flexible_trade-off"}, {"score": 0.0024399717841513354, "phrase": "automatic_optimisation"}, {"score": 0.002378114613631841, "phrase": "occupied_fpga_area"}, {"score": 0.002347775213789611, "phrase": "execution_speed"}, {"score": 0.0021876814398268775, "phrase": "feasible_scenarios"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["FPGA", " Automation", " State space", " Control systems", " Optimisation", " Pipelining", " Parallel computing", " Resource sharing"], "paper_abstract": "The parallelism attained by the use of Field Programmable Gate Arrays (FPGAs) has shown remarkable potential for accelerating control systems applications. This comes at a time when well established methods based on inherited serial Central Processor Units (CPUs) cannot guarantee solutions for the increasing execution speed demands. However, the transition from serial to parallel architectures represents a tremendous challenge due to overwhelming numbers of unexplored options and conflicting factors. The work presented achieves a parallelisation characterisation for generic MIMO systems using stand-alone FPGA implementations. The main contribution is that a very fine subset of possible serial/parallel implementations is obtained. This is used to achieve a flexible trade-off between cost and performance. Automatic optimisation of latency, occupied FPGA area and execution speed is attained and justified in respect to most of the feasible scenarios. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Automatic parallelisation for LTI MIMO state space systems using FPGAs. An optimisation for cost & performance", "paper_id": "WOS:000305775900006"}