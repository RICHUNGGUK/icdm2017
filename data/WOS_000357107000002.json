{"auto_keywords": [{"score": 0.04280136321445764, "phrase": "bottom-up_faults"}, {"score": 0.015613917306866325, "phrase": "service-based_systems"}, {"score": 0.00481495049065317, "phrase": "bottom-up_fault_management"}, {"score": 0.004749646583168342, "phrase": "service_oriented_architecture"}, {"score": 0.004621671570727774, "phrase": "distributed_applications"}, {"score": 0.0044512920090463105, "phrase": "component-based_system"}, {"score": 0.004405919996432158, "phrase": "overall_performance"}, {"score": 0.004287166497171827, "phrase": "aggregate_function"}, {"score": 0.004129067429043414, "phrase": "novel_approach"}, {"score": 0.003990385737207714, "phrase": "special_case"}, {"score": 0.003963211180578005, "phrase": "system-wide_exceptions"}, {"score": 0.0038960785110831162, "phrase": "abnormal_conditions"}, {"score": 0.0038300786263543835, "phrase": "component_services"}, {"score": 0.0036761878173205225, "phrase": "runtime_failures"}, {"score": 0.0035648266669315943, "phrase": "server_disruption"}, {"score": 0.003504418473478722, "phrase": "service_provisioning"}, {"score": 0.003317883538640966, "phrase": "way_component_services"}, {"score": 0.003239418275717787, "phrase": "soft-state_signaling-based_approach"}, {"score": 0.0029436264166293317, "phrase": "periodic_messages"}, {"score": 0.002805989498127897, "phrase": "soft-state-based_protocols"}, {"score": 0.0027395968397212053, "phrase": "implicit_error_recovery"}, {"score": 0.002720916895509682, "phrase": "easier_fault_management"}, {"score": 0.0026839372202435065, "phrase": "high_availability"}, {"score": 0.002430411367515404, "phrase": "fault_management"}, {"score": 0.0024138345020219333, "phrase": "composite_services"}, {"score": 0.002389180450772203, "phrase": "proposed_approach"}, {"score": 0.0023566987138026285, "phrase": "fault_propagation"}, {"score": 0.0022696277881969896, "phrase": "explicit_removal"}, {"score": 0.0021634370496463793, "phrase": "experiment_results"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Advanced services invocation framework", " collaboration exchange protocol", " collaborative services delivery platform", " Web services interchangeability"], "paper_abstract": "Service Oriented Architecture (SOA) enables the creation of distributed applications from independently developed and deployed services. As with any component-based system, the overall performance and quality of the system is an aggregate function of its component services. In this article, we present a novel approach for managing bottom-up faults in service-based systems. Bottom-up faults are a special case of system-wide exceptions that are defined as abnormal conditions or defects occurring in component services, which if not detected and/or managed, may lead to runtime failures. Examples of bottom-up faults include network outage, server disruption, and changes to service provisioning (e.g., new operation parameter required) that may have an impact on the way component services are consumed. We propose a soft-state signaling-based approach to propagate these faults from participants to composite services. Soft-state refers to a class of protocols where the state of a service is constantly refreshed by periodic messages, and user/service takes up the responsibility of communicating and maintaining its state. Soft-state-based protocols have a number of advantages including implicit error recovery and easier fault management, resulting in high availability for systems. Although soft-state has been widely used in various Internet protocols, this work is the first (to the best of our knowledge) to adopt soft-state for fault management in composite services. The proposed approach includes protocols for fault propagation (pure soft-state and soft-state with explicit removal) and fault reaction (rule-based). We also present experiment results to assess the performance and applicability of our approach.", "paper_title": "Bottom-Up Fault Management in Service-Based Systems", "paper_id": "WOS:000357107000002"}