{"auto_keywords": [{"score": 0.02336049181353664, "phrase": "goldberg"}, {"score": 0.007415001970327333, "phrase": "sssp"}, {"score": 0.00481495049065317, "phrase": "h-minor_free_graphs"}, {"score": 0.004418456827500267, "phrase": "directed_h-minor_free_graphs"}, {"score": 0.004081385289516914, "phrase": "n_vertices"}, {"score": 0.004027751272984522, "phrase": "integer_edge_lengths"}, {"score": 0.003896717568943166, "phrase": "designated_source"}, {"score": 0.0031115683920520773, "phrase": "absolute_value"}, {"score": 0.003050376875258722, "phrase": "smallest_edge_length"}, {"score": 0.002931569771634119, "phrase": "shortest_paths"}, {"score": 0.0022196020509093694, "phrase": "general_sssp_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Shortest paths", " H-minor free graphs"], "paper_abstract": "We present an algorithm for the Single Source Shortest Paths (SSSP) problem in directed H-minor free graphs. For every fixed H. if G is a graph with n vertices having integer edge lengths and s is a designated source vertex of G, the algorithm runs in (O) over tilde (n(root 11.5-2) log L) <= O(n(1.392) log L) time, where L is the absolute value of the smallest edge length. The algorithm computes the shortest paths and the distances from s to all vertices of the graph, or else provides a certificate that G is not H-minor free. Our result improves an earlier O(n(1.5) log L) time algorithm for this problem, which follows from a general SSSP algorithm of Goldberg. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Single source shortest paths in H-minor free graphs", "paper_id": "WOS:000280276200003"}