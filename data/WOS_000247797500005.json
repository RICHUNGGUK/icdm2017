{"auto_keywords": [{"score": 0.047058967819338215, "phrase": "data_faults"}, {"score": 0.014272548662556783, "phrase": "recovery_algorithms"}, {"score": 0.00481495049065317, "phrase": "distributed_system"}, {"score": 0.004570759604335229, "phrase": "checkpointing_algorithm"}, {"score": 0.004424441580112395, "phrase": "existing_checkpointing"}, {"score": 0.0037112756920669593, "phrase": "ring_topology"}, {"score": 0.003639471039860495, "phrase": "proposed_data_fault_detection"}, {"score": 0.0031535341431377837, "phrase": "proposed_checkpointing_algorithm"}, {"score": 0.00307240091019322, "phrase": "concurrent_multiple_initiations"}, {"score": 0.0027681550491613603, "phrase": "proposed_recovery_algorithm"}, {"score": 0.0026969099161088398, "phrase": "multiple_data_faults"}, {"score": 0.0022033327475266496, "phrase": "general_topologies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["data fault", " process fault", " checkpointing", " rollback recovery", " self-stabilization"], "paper_abstract": "If the variables used for a checkpointing algorithm have data faults, the existing checkpointing and recovery algorithms may fail. In this paper, self-stabilizing data fault detecting and correcting, checkpointing, and recovery algorithms are proposed in a ring topology. The proposed data fault detection and correction algorithms can handle data faults; at most one per process, but in any number of processes. The proposed checkpointing algorithm can deal with concurrent multiple initiations of checkpointing and data faults. A process can recover from a fault, using the proposed recovery algorithm in spite of multiple data faults present in the system. All the proposed algorithms converge in O (n) steps, where n is the number of processes. The algorithm can be extended to work for general topologies too. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Self-stabilizing algorithm for checkpointing in a distributed system", "paper_id": "WOS:000247797500005"}