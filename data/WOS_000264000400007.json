{"auto_keywords": [{"score": 0.030034259831624173, "phrase": "sequential_consistency"}, {"score": 0.00481495049065317, "phrase": "fork_sequential_consistency"}, {"score": 0.004151188559520802, "phrase": "untrusted_server"}, {"score": 0.003978866233891427, "phrase": "shared_data"}, {"score": 0.0032184697893776052, "phrase": "storage_access_protocol"}], "paper_keywords": ["Distributed computing", " Forking consistency conditions", " Shared-memory emulations"], "paper_abstract": "We consider an untrusted server storing shared data on behalf of clients. We show that no storage access protocol can on the one hand preserve sequential consistency and wait-freedom when the server is correct, and on the other hand always preserve fork sequential consistency. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Fork sequential consistency is blocking", "paper_id": "WOS:000264000400007"}