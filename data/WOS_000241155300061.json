{"auto_keywords": [{"score": 0.04964635174824772, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "logic_language"}, {"score": 0.004477595431209663, "phrase": "system_prototype"}, {"score": 0.004397000006837371, "phrase": "np_datalog"}, {"score": 0.004051828608343507, "phrase": "np_search"}, {"score": 0.003978866233891427, "phrase": "optimization_problems"}, {"score": 0.003907212558276185, "phrase": "mp_datalog"}, {"score": 0.0036663981146086103, "phrase": "stratified_negation"}, {"score": 0.0035677736570659813, "phrase": "intuitive_and_efficient_constructs"}, {"score": 0.003378385493203297, "phrase": "restricted_form"}, {"score": 0.00297454367746853, "phrase": "np_datalog_queries"}, {"score": 0.0029209233709517634, "phrase": "opl_programs"}, {"score": 0.002502374576203785, "phrase": "easy_formulation"}, {"score": 0.002305589818994465, "phrase": "declarative_logic_language"}, {"score": 0.0021436720821474973, "phrase": "ilog_solver"}], "paper_keywords": [""], "paper_abstract": "This paper presents a system prototype implementing NP Datalog, a Datalog-like language for expressing NP search and optimization problems. MP Datalog extends DATALOG(-8) (DATALOG with stratified negation) with intuitive and efficient constructs, i.e. constraints and a restricted form of (exclusive) disjunction used to define (nondeterministically) subsets (or partitions) of relations. The system translates NP Datalog queries into OPL programs, then solves them by using the ILOG Solver [16]. Thus, it combines an easy formulation of problems, expressed by means of a declarative logic language, and an efficient execution of the ILOG Solver. Several experiments show the effectiveness of this approach.", "paper_title": "Implementation and experimentation of the logic language NP Datalog", "paper_id": "WOS:000241155300061"}