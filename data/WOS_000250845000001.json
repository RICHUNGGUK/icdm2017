{"auto_keywords": [{"score": 0.03602394543856097, "phrase": "parallel_iterations"}, {"score": 0.00481495049065317, "phrase": "parallel_delaunay_refinement_algorithm"}, {"score": 0.004753512932910936, "phrase": "well-shaped_meshes"}, {"score": 0.004573842508130535, "phrase": "parallel_algorithm"}, {"score": 0.004382127278148236, "phrase": "new_points"}, {"score": 0.004289291421348352, "phrase": "input_domain"}, {"score": 0.004216434794603139, "phrase": "delaunay_triangulation"}, {"score": 0.004162602203448056, "phrase": "steiner_points"}, {"score": 0.003920295222165263, "phrase": "poorly-shaped_triangular_elements"}, {"score": 0.0037719988989298983, "phrase": "possible_steiner_points"}, {"score": 0.0036605323485683983, "phrase": "delaunay_refinements"}, {"score": 0.0035676056286816915, "phrase": "independent_points"}, {"score": 0.0033040031037834972, "phrase": "delta"}, {"score": 0.0030969799559421806, "phrase": "shortest_pairwise_distances"}, {"score": 0.0030705342386533083, "phrase": "input_features"}, {"score": 0.002954287204671032, "phrase": "parallel_insertion"}, {"score": 0.0028302635493019867, "phrase": "sequential_delaunay_refinement_algorithms"}, {"score": 0.0027821202902740846, "phrase": "ruppert's_algorithm"}, {"score": 0.0027347937102326285, "phrase": "shewchuk's_algorithm"}, {"score": 0.0025424508991051483, "phrase": "quasi-uniform_meshes"}, {"score": 0.002467228805628948, "phrase": "chew's_algorithms"}, {"score": 0.0022067604433257814, "phrase": "time_parallel_delaunay-refinement_algorithm"}, {"score": 0.0021049977753042253, "phrase": "constant_factor"}], "paper_keywords": ["Delaunay refinement", " simplicial meshes", " parallel algorithms", " computational geometry"], "paper_abstract": "We present a parallel Delaunay refinement algorithm for generating well-shaped meshes in both two and three dimensions. Like its sequential counterparts, the parallel algorithm iteratively improves the quality of a mesh by inserting new points, the Steiner points, into the input domain while maintaining the Delaunay triangulation. The Steiner points are carefully chosen from a set of candidates that includes the circumcenters of poorly-shaped triangular elements. We introduce a notion of independence among possible Steiner points that can be inserted simultaneously during Delaunay refinements and show that such a set of independent points can be constructed efficiently and that the number of parallel iterations is O(log(2) Delta), where Delta is the spread of the input - the ratio of the longest to the shortest pairwise distances among input features. In addition, we show that the parallel insertion of these set of points can be realized by sequential Delaunay refinement algorithms such as by Ruppert's algorithm in two dimensions and Shewchuk's algorithm in three dimensions. Therefore, our parallel Delaunay refinement algorithm provides the same shape quality and mesh-size guarantees as these sequential algorithms. For generating quasi-uniform meshes, such as those produced by Chew's algorithms, the number of parallel iterations is in fact O (log Delta). To the best of our knowledge, our algorithm is the first provably polylog(Delta) time parallel Delaunay-refinement algorithm that generates well-shaped meshes of size within a constant factor of the best possible.", "paper_title": "Parallel Delaunay refinement: Algorithms and analyses", "paper_id": "WOS:000250845000001"}