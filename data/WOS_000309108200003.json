{"auto_keywords": [{"score": 0.04309795273052841, "phrase": "memory_intensive_tasks"}, {"score": 0.00481495049065317, "phrase": "multicore_hard_real-time_systems"}, {"score": 0.004613516457919661, "phrase": "serious_bottleneck"}, {"score": 0.0042354707960660706, "phrase": "worst_case"}, {"score": 0.004175533280178052, "phrase": "execution_time"}, {"score": 0.0036990033106718183, "phrase": "hard_real-time_utilization"}, {"score": 0.0036207206487324506, "phrase": "real-time_multicore_system"}, {"score": 0.0034444213065548688, "phrase": "memory-centric_scheduling_approach"}, {"score": 0.0031170783606525856, "phrase": "memory-centric_scheduling_technique"}, {"score": 0.002881793492919646, "phrase": "time_division_multiple_access"}, {"score": 0.002840986819891002, "phrase": "tdma"}, {"score": 0.0024984517279573906, "phrase": "cpu-only_computation"}, {"score": 0.002359759876402679, "phrase": "high-level_schedule"}, {"score": 0.0022447206386952126, "phrase": "high_memory_demand"}, {"score": 0.0021659920594094407, "phrase": "hard_real-time_task_utilization"}, {"score": 0.0021049977753042253, "phrase": "traditional_multicore_scheduling"}], "paper_keywords": ["Memory-centric scheduling", " Multi-core scheduling", " Hard real-time system", " CPU memory co-scheduling"], "paper_abstract": "Memory resources are a serious bottleneck in many real-time multicore systems. Previous work has shown that, in the worst case, execution time of memory intensive tasks can grow linearly with the number of cores in the system. To improve hard real-time utilization, a real-time multicore system should be scheduled according to a memory-centric scheduling approach if its workload is dominated by memory intensive tasks. In this work, a memory-centric scheduling technique is proposed where (a) core isolation is provided through a coarse-grained (high-level) Time Division Multiple Access (TDMA) memory schedule; and (b) the scheduling policy of each core \"promotes\" the priority of its memory intensive computations above CPU-only computation when memory access is permitted by the high-level schedule. Our evaluation reveals that under high memory demand, our scheduling approach can improve hard real-time task utilization significantly compared to traditional multicore scheduling.", "paper_title": "Memory-centric scheduling for multicore hard real-time systems", "paper_id": "WOS:000309108200003"}