{"auto_keywords": [{"score": 0.041574403130493216, "phrase": "computational_burden"}, {"score": 0.04123192051007423, "phrase": "predictive_model"}, {"score": 0.03212983210884194, "phrase": "uncontrollable_divergence"}, {"score": 0.0285301754206869, "phrase": "hybrid_controller"}, {"score": 0.00481495049065317, "phrase": "autonomous_vehicles"}, {"score": 0.004676386276791837, "phrase": "common_approach"}, {"score": 0.004636392622922429, "phrase": "trajectory-following_systems"}, {"score": 0.004612560033942425, "phrase": "nonlinear_plants"}, {"score": 0.004588849387552626, "phrase": "car-like_robots"}, {"score": 0.004557423812886624, "phrase": "path_planning"}, {"score": 0.004472103766715798, "phrase": "obstacle_avoidance"}, {"score": 0.00445676275178147, "phrase": "feasible_trajectory_selection"}, {"score": 0.004403480614319231, "phrase": "prediction_function"}, {"score": 0.004313611196587643, "phrase": "candidate_stream"}, {"score": 0.004269363680846843, "phrase": "control_inputs"}, {"score": 0.004254715169087967, "phrase": "state_values"}, {"score": 0.004218312470877349, "phrase": "safe_trajectories"}, {"score": 0.004146434897792828, "phrase": "cost_function"}, {"score": 0.003978866233891427, "phrase": "nonlinear_case"}, {"score": 0.003897628727982086, "phrase": "nonlinear_plant"}, {"score": 0.0038642693507726943, "phrase": "system_safety"}, {"score": 0.003831194394657583, "phrase": "model_accuracy"}, {"score": 0.0037465133897132455, "phrase": "increased_computation_time"}, {"score": 0.003714442569143471, "phrase": "increased_travel_time"}, {"score": 0.003695331513638468, "phrase": "new_solution"}, {"score": 0.003657402798659583, "phrase": "predictive_methods"}, {"score": 0.003626092004195062, "phrase": "model_reduction"}, {"score": 0.003595048292276135, "phrase": "modeling_error"}, {"score": 0.003576549323077569, "phrase": "prediction_horizon"}, {"score": 0.0035337530880023144, "phrase": "unfeasible_results"}, {"score": 0.0034556236313385094, "phrase": "ground_vehicle"}, {"score": 0.003367611042980526, "phrase": "predictive_control"}, {"score": 0.0031817686507044783, "phrase": "predictive_controller"}, {"score": 0.003165389530598208, "phrase": "novel_property"}, {"score": 0.0031060485999651784, "phrase": "predicted_and_true_states"}, {"score": 0.003090058063484133, "phrase": "return_time"}, {"score": 0.0030794433253250476, "phrase": "model_mismatch"}, {"score": 0.0030165139458641368, "phrase": "state_space"}, {"score": 0.002980398931895119, "phrase": "coarse_models"}, {"score": 0.0029497865265719365, "phrase": "high_update_rate"}, {"score": 0.002914468066839891, "phrase": "high_speed"}, {"score": 0.002904454745086446, "phrase": "small_steering_angles"}, {"score": 0.0028795712616923462, "phrase": "high-fidelity_models"}, {"score": 0.0028401990928034115, "phrase": "tighter_curves"}, {"score": 0.002815864555488112, "phrase": "large_steering_angles"}, {"score": 0.002739382522525871, "phrase": "predictive_controllers"}, {"score": 0.002725274493197935, "phrase": "respective_models"}, {"score": 0.0026649722755008884, "phrase": "proposed_metric"}, {"score": 0.002646686855408433, "phrase": "discrete_vehicle_model"}, {"score": 0.0025571197963838487, "phrase": "optimization_time"}, {"score": 0.0025221453310926576, "phrase": "computation_substrate"}, {"score": 0.002483369092757225, "phrase": "different_computational_platform"}, {"score": 0.0024578492171886696, "phrase": "uncontrollable_divergence_calculations"}, {"score": 0.002350252082143982, "phrase": "vehicle_control_problem"}, {"score": 0.0022903279173556827, "phrase": "zhang_et_al"}, {"score": 0.002266787285194115, "phrase": "international_conference"}, {"score": 0.0022589941773960252, "phrase": "cyber-physical_system"}, {"score": 0.0022512371876580012, "phrase": "seattle"}, {"score": 0.002228088153784987, "phrase": "significant_way"}, {"score": 0.002190048252937015, "phrase": "physical_platform"}, {"score": 0.0021750143663203172, "phrase": "mpc_return_time"}], "paper_keywords": ["Vehicle control", " Model predictive control (MPC)", " Hybrid control", " Model error evaluation", " Cyber-physical systems (CPS)"], "paper_abstract": "Model predictive control (MPC) is a common approach to the control of trajectory-following systems. For nonlinear plants such as car-like robots, methods for path planning and following have the advantage of concurrently solving problems of obstacle avoidance, feasible trajectory selection, and trajectory following. A prediction function for the plant is used to simulate the trajectory with a candidate stream of inputs. Constraints on control inputs and state values, used to ensure safe trajectories and to avoid obstacles, are encoded into a cost function, and optimization routines (at runtime) compute the trajectories and their corresponding control inputs. Such approaches are computationally intensive, and in the nonlinear case the computational burden generally grows as a predictive model more closely approximates a nonlinear plant. In situations where system safety is paramount, guaranteeing model accuracy (in order to achieve more accurate behavior) comes at the cost of increased computation time, which results in increased travel time without a new solution. While the computational burden of predictive methods can be addressed through model reduction, the cost of modeling error over the prediction horizon is high and can lead to unfeasible results. In this paper, we consider the problem of controlling a ground vehicle under constraints and propose an algorithm that employs two models of the vehicle for model predictive control, one coarse and the other more accurate. We introduce a metric called uncontrollable divergence and, using this metric, propose a mechanism to select the model to use in the predictive controller. The novel property of the metric is that it reveals the divergence between predicted and true states caused by return time and model mismatch. More precisely, a map of uncontrollable divergence plotted over the state space gives the criterion to judge where coarse models can be tolerated when a high update rate is preferred (e.g., at high speed and small steering angles), and where high-fidelity models are required to avoid obstacles or make tighter curves (e.g., at large steering angles). With this metric, we design a controller that switches at runtime between predictive controllers in which respective models are deployed. The algorithm is a hybrid controller, which evaluates the proposed metric to select the discrete vehicle model to use for prediction and optimization. We say that the approach is computationally aware, in that the optimization time of each predictive model is dependent on the computation substrate used (chipset, machine architecture, etc.); if a different computational platform is used, then the uncontrollable divergence calculations will lead to a hybrid controller suitable to meet the computation demands for that platform. While the ideas are presented for the solution of a vehicle control problem, the approach has the potential to impact other computationally-demanding cyber-physical systems. The paper extends (Zhang et al., Proceedings of the international conference on cyber-physical system, Seattle, 2015) in a significant way, by demonstrating the calculation of uncontrollable divergence on a physical platform, by characterizing MPC return time as a function of the number of obstacles, and by simulating performance with trajectories that must navigate more obstacles.", "paper_title": "Computationally aware control of autonomous vehicles: a hybrid model predictive control approach", "paper_id": "WOS:000362960600004"}