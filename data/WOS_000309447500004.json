{"auto_keywords": [{"score": 0.04924496525218248, "phrase": "cit"}, {"score": 0.00481495049065317, "phrase": "coverage_inheritance"}, {"score": 0.004772818068176176, "phrase": "combinatorial_interaction_testing"}, {"score": 0.004648609688625397, "phrase": "testing_technique"}, {"score": 0.004547564208690591, "phrase": "t-sized_tuples"}, {"score": 0.004448705308279165, "phrase": "n_parameter_attributes"}, {"score": 0.004332894955218135, "phrase": "input_parameters"}, {"score": 0.004276120412040056, "phrase": "configuration_domain"}, {"score": 0.004146510711518748, "phrase": "cit_test_suites"}, {"score": 0.004003169429008801, "phrase": "software_testing"}, {"score": 0.0036660436272785476, "phrase": "tuple_width"}, {"score": 0.0033572130837348623, "phrase": "testing_effort"}, {"score": 0.0032410683344688625, "phrase": "minimal-sized_cit_test_suites"}, {"score": 0.002994178996584381, "phrase": "construction_algorithms"}, {"score": 0.0028151944356239952, "phrase": "original_greedy_algorithm"}, {"score": 0.002682081928174866, "phrase": "constant_space_complexity"}, {"score": 0.002600661525224505, "phrase": "involved_parameters"}, {"score": 0.0025217065652145443, "phrase": "proposed_algorithm"}, {"score": 0.0024559368099486647, "phrase": "prototype_tool"}, {"score": 0.0023918783117166326, "phrase": "user_constraints"}, {"score": 0.0023090525096074264, "phrase": "tool_performance"}, {"score": 0.0021709339252206825, "phrase": "industrial_production_environments"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["combinatorial interaction testing", " mixed covering arrays", " parameter based constructions", " forbidden tuples"], "paper_abstract": "Combinatorial interaction testing (CIT) is a testing technique that requires covering all t-sized tuples of values out of n parameter attributes or properties modelled after the input parameters or the configuration domain of a system under test. CIT test suites have shown to be very effective in software testing already at pairwise (t ?=? 2) level, and the effectiveness of CIT grows with the tuple width t. Unfortunately, the number of tuples to be tested also does grow. In order to reduce the testing effort, researchers addressed the issue of computing minimal-sized CIT test suites with effective and scalable algorithms. However, still very few generally applicable t-wise covering construction algorithms (and tools) do exist in literature. This paper presents an original greedy algorithm to compute t-wise covering mixed covering arrays with constant space complexity, irrespective of the number of involved parameters and strength of interaction. The proposed algorithm has been implemented in a prototype tool, featuring also support for user constraints over the inputs. Assessment of the tool performance on a set of large, real-world test systems is reported, with results encouraging its adoption in industrial production environments. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "T-wise combinatorial interaction test suites construction based on coverage inheritance", "paper_id": "WOS:000309447500004"}