{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "k-simultaneous_consensus_task"}, {"score": 0.011965321767357229, "phrase": "k-set_agreement_task"}, {"score": 0.004392565073466714, "phrase": "independent_consensus_instances"}, {"score": 0.003427540517249369, "phrase": "k-simultaneous_consensus"}, {"score": 0.0030135741897058844, "phrase": "multivalued_version"}, {"score": 0.002931569771634119, "phrase": "binary_version"}, {"score": 0.002286781334850213, "phrase": "new_characterization"}, {"score": 0.0021049977753042253, "phrase": "fundamental_binary_consensus_problem"}], "paper_keywords": ["Asynchronous shared memory systems", " Binary vs multivalued agreement", " Consensus", " Distributed computability", " Process crash", " Set agreement", " Wait-free construction"], "paper_abstract": "This paper introduces and investigates the k-simultaneous consensus task: each process participates at the same time in k independent consensus instances until it decides in any one of them. It is shown that the k-simultaneous consensus task is equivalent to the k-set agreement task in the wait-free read/write shared memory model, and furthermore k-simultaneous consensus possesses properties that k-set does not. In particular we show that the multivalued version and the binary version of the k-simultaneous consensus task are wait-free equivalent. These equivalences are independent of the number of processes. Interestingly, this provides us with a new characterization of the k-set agreement task that is based on the fundamental binary consensus problem.", "paper_title": "The k-simultaneous consensus problem", "paper_id": "WOS:000275146300004"}