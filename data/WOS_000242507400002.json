{"auto_keywords": [{"score": 0.046689223289569044, "phrase": "fine-grained_replication"}, {"score": 0.00481495049065317, "phrase": "distributed-java-object_caching"}, {"score": 0.004626255242038005, "phrase": "common_feature"}, {"score": 0.0045346863560033175, "phrase": "scalable_distributed_object_systems"}, {"score": 0.004327981760540394, "phrase": "resource_utilization"}, {"score": 0.004130660282810338, "phrase": "remote_object-oriented_application"}, {"score": 0.0035908627899097407, "phrase": "common_and_simple_implementation_framework"}, {"score": 0.0035197152758635344, "phrase": "fine-grained_replication_scheme"}, {"score": 0.003314591878914152, "phrase": "novel_frameworks"}, {"score": 0.0032059171132825127, "phrase": "java"}, {"score": 0.0030391594477173485, "phrase": "lazy-object_creation"}, {"score": 0.002824005136794786, "phrase": "server-side_stateful"}, {"score": 0.0027680095380207756, "phrase": "memory_application"}, {"score": 0.00260657976055413, "phrase": "server-side_stateless"}, {"score": 0.0025042115651986332, "phrase": "client-side_program"}, {"score": 0.0024545413637350765, "phrase": "standalone_application"}, {"score": 0.002405853977978678, "phrase": "experimental_evaluation"}, {"score": 0.0022806798371116698, "phrase": "response_time"}, {"score": 0.0021049977753042253, "phrase": "local_method_invocation"}], "paper_keywords": ["distributed object", " caching", " replication", " cluster", " Java-based framework"], "paper_abstract": "Object caching is a common feature in the scalable distributed object systems. Fine-grained replication optimizes the performance and resource utilization in object caching by enabling a remote object-oriented application to be partially and incrementally on-demand replicated in units of cluster. Despite these benefits, the lack of common and simple implementation framework makes the fine-grained replication scheme not extensively used. This paper proposes the novel frameworks for dynamic, transparent, partial and automatically incremental replication of distributed Java objects based on three techniques that are lazy-object creation, proxy and hook. One framework enables the fine-grained replication of server-side stateful in-memory application, and the other framework enables the fine-grained replication of server-side stateless in-memory application, client-side program, or standalone application. The experimental evaluation demonstrates that the efficiency in terms of response time of both frameworks are relatively practical to the extent of a local method invocation.", "paper_title": "Cluster replication for distributed-java-object caching", "paper_id": "WOS:000242507400002"}