{"auto_keywords": [{"score": 0.04833595394475732, "phrase": "apache_hive"}, {"score": 0.006194731849899702, "phrase": "genetic_algorithm"}, {"score": 0.00481495049065317, "phrase": "view_selection"}, {"score": 0.004739056045644449, "phrase": "adaptive_genetic_algorithm"}, {"score": 0.004494570360108983, "phrase": "data_warehouses"}, {"score": 0.004217708394188058, "phrase": "big_data"}, {"score": 0.0041074234667687875, "phrase": "view_materialization"}, {"score": 0.004042635935882651, "phrase": "huge_costs"}, {"score": 0.003936910716320182, "phrase": "latest_products"}, {"score": 0.0038953958723049287, "phrase": "non-traditional_data_warehouse_software"}, {"score": 0.0036553070575015344, "phrase": "terialized_views"}, {"score": 0.003522124318486352, "phrase": "appropriate_views"}, {"score": 0.0034118234596993836, "phrase": "possible_minimized_cost"}, {"score": 0.003322540556404882, "phrase": "novel_approach"}, {"score": 0.003270092550315648, "phrase": "materialized_view_selection_problem"}, {"score": 0.0032014433546265694, "phrase": "adaptive_ge-_netic_algorithm"}, {"score": 0.0031176485976102688, "phrase": "cost_model"}, {"score": 0.002687235334499192, "phrase": "adjustable_factors"}, {"score": 0.002658863179011018, "phrase": "crossover_probability"}, {"score": 0.002468450551616404, "phrase": "premature_convergence"}, {"score": 0.0024037949232582462, "phrase": "extensive_experiments"}, {"score": 0.00229164285862567, "phrase": "large_datasets"}, {"score": 0.002255431275670053, "phrase": "distributed_storage"}, {"score": 0.0021387992835532367, "phrase": "approx-_imately_optimal_solution"}, {"score": 0.0021049977753042253, "phrase": "materialized_views"}], "paper_keywords": ["materialized view", " multi-dimensional lattice", " genetic algorithm", " cost model", " adaptive", " Apache Hive"], "paper_abstract": "Frequently accessed views in data warehouses are usually materialized in order to accelerate the speed of querying big data. However, the view materialization itself incurs huge costs. Moreover, some latest products of non-traditional data warehouse software, such as Apache Hive, still lack the support of ma- terialized views. In order to select the appropriate views to be materialized with the possible minimized cost, we propose a novel approach to the materialized view selection problem based on an adaptive ge- netic algorithm. We establish a cost model that integrates the query, maintenance and storage costs to evaluate the performance of approaches and measure the fitness of an individual in the genetic algorithm. In addition, we introduce the adjustable factors for crossover probability and mutation probability, allow- ing the genetic algorithm to run quickly and avoid premature convergence. We also conduct extensive experiments for its implementation with Apache Hive, which query and manage large datasets residing in distributed storage. Both the simulation results and experiments on Apache Hive show that the approx- imately optimal solution for selecting materialized views can be obtained effectively using the approach presented.", "paper_title": "Materialized View Selection Based on Adaptive Genetic Algorithm and Its Implementation with Apache Hive", "paper_id": "WOS:000364525200004"}