{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "domain-specific_aspect_languages"}, {"score": 0.044623380435940996, "phrase": "crosscutting_concerns"}, {"score": 0.004533427352547707, "phrase": "domain-specific_languages"}, {"score": 0.003916098498242888, "phrase": "language_design_space"}, {"score": 0.003441352119167824, "phrase": "different_domain-specific_approaches"}, {"score": 0.0028715299874549245, "phrase": "design_considerations"}, {"score": 0.002703327151461985, "phrase": "dsal_implementation"}, {"score": 0.002437525632451029, "phrase": "dsal"}, {"score": 0.0023958326775913165, "phrase": "dsl_researchers"}, {"score": 0.0021049977753042253, "phrase": "dsal_implementations"}], "paper_keywords": ["Languages", " Aspect-oriented programming", " domain-specific languages"], "paper_abstract": "Domain-Specific Aspect Languages (DSALs) are Domain-Specific Languages (DSLs) designed to express crosscutting concerns. Compared to DSLs, their aspectual nature greatly amplifies the language design space. We structure this space in order to shed light on and compare the different domain-specific approaches to deal with crosscutting concerns. We report on a corpus of 36 DSALs covering the space, discuss a set of design considerations, and provide a taxonomy of DSAL implementation approaches. This work serves as a frame of reference to DSAL and DSL researchers, enabling further advances in the field, and to developers as a guide for DSAL implementations.", "paper_title": "A Taxonomy of Domain-Specific Aspect Languages", "paper_id": "WOS:000354046600003"}