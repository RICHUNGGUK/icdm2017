{"auto_keywords": [{"score": 0.0039341294012600085, "phrase": "total_triangle_areas"}, {"score": 0.0038271712887391015, "phrase": "total_dihedral_angles"}, {"score": 0.003757480190200645, "phrase": "adjacent_triangles"}, {"score": 0.0035887342563437935, "phrase": "classical_method"}, {"score": 0.003427540517249369, "phrase": "single_polygon"}, {"score": 0.003334309053314909, "phrase": "key_novelty"}, {"score": 0.0031553611552558986, "phrase": "non-manifold_outputs"}, {"score": 0.002931569771634119, "phrase": "better_performance"}, {"score": 0.002878140062594849, "phrase": "real-world_data"}, {"score": 0.002723607240517261, "phrase": "approximate_solution"}, {"score": 0.0025537472239953807, "phrase": "reduced_set"}, {"score": 0.002224510044064184, "phrase": "delaunay_tetrahedralization"}, {"score": 0.002163930783583212, "phrase": "polygon_vertices"}, {"score": 0.0021049977753042253, "phrase": "reasonable_trade"}], "paper_keywords": [""], "paper_abstract": "We present an algorithm for obtaining a triangulation of multiple, non-planar 3D polygons. The output minimizes additive weights, such as the total triangle areas or the total dihedral angles between adjacent triangles. Our algorithm generalizes a classical method for optimally triangulating a single polygon. The key novelty is a mechanism for avoiding non-manifold outputs for two and more input polygons without compromising optimality. For better performance on real-world data, we also propose an approximate solution by feeding the algorithm with a reduced set of triangles. In particular, we demonstrate experimentally that the triangles in the Delaunay tetrahedralization of the polygon vertices offer a reasonable trade off between performance and optimality.", "paper_title": "An algorithm for triangulating multiple 3D polygons", "paper_id": "WOS:000323204000016"}