{"auto_keywords": [{"score": 0.0482937679895443, "phrase": "integer_linear_programming"}, {"score": 0.004814951205791253, "phrase": "vliw"}, {"score": 0.00398177607914381, "phrase": "code_generation"}, {"score": 0.003906804492585634, "phrase": "i.e._instruction_selection"}, {"score": 0.003725470458263889, "phrase": "instruction_scheduling"}, {"score": 0.0035864603175592854, "phrase": "basic_block_level"}, {"score": 0.0035189057079817285, "phrase": "vliw_processors"}, {"score": 0.003419943984098415, "phrase": "earlier_work"}, {"score": 0.003261133560558666, "phrase": "dynamic_programming"}, {"score": 0.0031998560913925524, "phrase": "dp"}, {"score": 0.003051073364818384, "phrase": "optimal_integrated_code_generation"}, {"score": 0.002909342017421165, "phrase": "optimist."}, {"score": 0.0027479040199262393, "phrase": "first_results"}, {"score": 0.0024984517279573906, "phrase": "vliw_processor"}, {"score": 0.0022933216359142736, "phrase": "ilp_model"}, {"score": 0.0022287497627555895, "phrase": "heuristic_relaxation"}, {"score": 0.0021659920594094407, "phrase": "dp_method"}, {"score": 0.0021049977753042253, "phrase": "ilp_optimization_time"}], "paper_keywords": [""], "paper_abstract": "We give an Integer Linear Programming (ILP) solution that fully integrates all steps of code generation, i.e. instruction selection, register allocation and instruction scheduling, on the basic block level for VLIW processors. In earlier work, we contributed a dynamic programming (DP) based method for optimal integrated code generation, implemented in our retargetable code generator OPTIMIST. In this paper we give first results to evaluate and compare our ILP formulation with our DP method on a VLIW processor. We also demonstrate how to precondition the ILP model by a heuristic relaxation of the DP method to improve ILP optimization time.", "paper_title": "Optimal integrated VLIW code generation with Integer Linear Programming", "paper_id": "WOS:000241469500041"}