{"auto_keywords": [{"score": 0.02524353822395531, "phrase": "cheapest_tree"}, {"score": 0.00481495049065317, "phrase": "simple_network_design_problem"}, {"score": 0.0045599093158915326, "phrase": "n_weighted_nodes"}, {"score": 0.004404658750724105, "phrase": "edge-weighted_connected_network"}, {"score": 0.0043183186953102805, "phrase": "total_weight"}, {"score": 0.004254671386496732, "phrase": "edges_incident"}, {"score": 0.00395017798595193, "phrase": "cheapest_connected_network"}, {"score": 0.003371220210416809, "phrase": "efficient_algorithm"}, {"score": 0.0033050703534275717, "phrase": "optimal_network"}, {"score": 0.0032724821705972357, "phrase": "minimum_weight"}, {"score": 0.003176626803985225, "phrase": "linear_time"}, {"score": 0.003114283314285167, "phrase": "resulting_network"}, {"score": 0.0028911669203979156, "phrase": "connected_network"}, {"score": 0.002291120700993765, "phrase": "np"}, {"score": 0.0022120408738490437, "phrase": "efficient_approximation_algorithms"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["approximation algorithm", " efficient algorithm", " NP-completeness", " simple network design", " small-world network"], "paper_abstract": "We consider the following simple network design problem. The input consists of n weighted nodes, and the output is an edge-weighted connected network such that the total weight of the edges incident to a node is at least the given weight of the node. We aim to design the cheapest connected network; that is, the reachability of the network should be guaranteed, and the network is better if its total weight is less. In this article, we first show an efficient algorithm that produces an optimal network with minimum weight. The algorithm runs in linear time, and the resulting network contains at most n edges, where n is the number of nodes. To construct a connected network, at least n - 1 edges are required. However, the algorithm sometimes outputs n edges. Next, we aim to minimize not only the weight but also the number of edges. That is, for given n weighted nodes, we aim to design a cheapest tree. Then, the problem becomes NP-complete. We also propose efficient approximation algorithms for constructing a cheapest tree. (c) 2013 Wiley Periodicals, Inc.", "paper_title": "Efficient algorithms for a simple network design problem", "paper_id": "WOS:000322920500002"}