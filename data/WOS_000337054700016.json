{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gpu-based_collision_detection"}, {"score": 0.004664352260912174, "phrase": "spatial_subdivision-based_collision_detection_methods"}, {"score": 0.004447201233380302, "phrase": "even_triangle_spatial_distributions"}, {"score": 0.004353948887538618, "phrase": "uneven_cases"}, {"score": 0.004330941610682453, "phrase": "non-uniform_subdivision"}, {"score": 0.004240116703465252, "phrase": "non-uniform_subdivision_techniques"}, {"score": 0.004064117897000019, "phrase": "hierarchical_grids"}, {"score": 0.003957833102043277, "phrase": "previous_gpu-based_approaches"}, {"score": 0.0036942726653704213, "phrase": "better_adaptation"}, {"score": 0.0034482025128821548, "phrase": "octree_grid"}, {"score": 0.003375826910838081, "phrase": "middle_path"}, {"score": 0.0032527939106509946, "phrase": "collision_detection"}, {"score": 0.0031342307827666675, "phrase": "broad-phase_tests"}, {"score": 0.0029722900280316216, "phrase": "main_bottleneck"}, {"score": 0.0027159094186967247, "phrase": "broad_phase"}, {"score": 0.00267301171407926, "phrase": "two-stage_scheme"}, {"score": 0.0026307897899760383, "phrase": "octree_subdivision"}, {"score": 0.0025892330566358503, "phrase": "octree_grid_approach"}, {"score": 0.002468450551616404, "phrase": "uneven_triangle_sizes"}, {"score": 0.002429451930463481, "phrase": "common_difficulty"}, {"score": 0.0024037949232582462, "phrase": "spatial_subdivision_techniques"}, {"score": 0.0023408288327263316, "phrase": "virtual_subdivision_method"}, {"score": 0.0022916428586256723, "phrase": "fastest_results"}, {"score": 0.0022674379203603224, "phrase": "existing_methods"}, {"score": 0.0021274723597955567, "phrase": "triangle_sizes"}, {"score": 0.0021049977753042253, "phrase": "spatial_distributions"}], "paper_keywords": ["Collision detection", " Deformable objects", " Octree grid", " GPU-based"], "paper_abstract": "In spatial subdivision-based collision detection methods on GPUs, uniform subdivision works well for even triangle spatial distributions, whilst for uneven cases non-uniform subdivision works better. Non-uniform subdivision techniques mainly include hierarchical grids and octrees. Hierarchical grids have been adopted for previous GPU-based approaches, due to their suitability for GPUs. However, octrees offer a better adaptation to distributions. One contribution of this paper is the use of an octree grid that takes a middle path between these two structures, and accelerates collision detection by significantly reducing the number of broad-phase tests which, due to their large quantity, are generally the main bottleneck in performance. Another contribution is to achieve further reduction in the number of tests in the broad phase using a two-stage scheme to improve octree subdivision. The octree grid approach is also able to address the issue of uneven triangle sizes, another common difficulty for spatial subdivision techniques. Compared to the virtual subdivision method which reports the fastest results among existing methods, speedups between 1.0 and 1.5 are observed for most standard benchmarks where triangle sizes and spatial distributions are uneven.", "paper_title": "An adaptive octree grid for GPU-based collision detection of deformable objects", "paper_id": "WOS:000337054700016"}