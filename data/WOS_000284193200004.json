{"auto_keywords": [{"score": 0.035212869495432716, "phrase": "query_processing"}, {"score": 0.03144716650974032, "phrase": "xfl"}, {"score": 0.004735519962945449, "phrase": "mobile_computing_environment_ale"}, {"score": 0.004309434349688514, "phrase": "large_volume"}, {"score": 0.004261885692956071, "phrase": "xml_data"}, {"score": 0.004009555045206973, "phrase": "manageable_size"}, {"score": 0.0035486713647627246, "phrase": "considerable_improvement"}, {"score": 0.0033015555065209865, "phrase": "xml_fragment_stream"}, {"score": 0.003265090934183249, "phrase": "memory_efficiency"}, {"score": 0.00321114539085481, "phrase": "xml_fragment_labeling"}, {"score": 0.0030545815929619306, "phrase": "xml_fragmentation"}, {"score": 0.002857605453835429, "phrase": "popular_hole-filler"}, {"score": 0.002418829014435841, "phrase": "hf_model"}, {"score": 0.0023525345110929326, "phrase": "stream_size"}, {"score": 0.0022502133699402018, "phrase": "fundamental_limitation"}, {"score": 0.002164331818029166, "phrase": "query_processing_scalable"}, {"score": 0.0021049977753042253, "phrase": "memory_requirement"}], "paper_keywords": ["XML", " XML fragment stream", " XML fragment labeling", " hole-filler model", " XML stream query processing", " mobile computing"], "paper_abstract": "The portable/hand-held devices deployed in mobile computing environment ale mostly limited in memory To make it possible for them to locally process queries over a large volume of XML data, the data needs to be streamed in fragments of manageable size and the queries need to be processed over the stream with as little memory as possible In this paper, we report a considerable improvement of the state-of-the-art techniques of query processing over XML fragment stream in memory efficiency We use XML fragment labeling (XFL) as a method of representing XML fragmentation, and show that XFL is much more effective than the popular hole-filler (HF) model employed in the state-of-the-art in reducing the amount of memory required for query processing The state-of-the-art with the HF model requires more memory as the stream size increases With XFL, we overcome this fundamental limitation, proposing the techniques to make query processing scalable in the sense that memory requirement is not affected by the size of an stream as long as the stream is bounded The improvement is verified through implementation and a detailed set of experiments", "paper_title": "MEMORY-EFFICIENT QUERY PROCESSING OVER XML FRAGMENT STREAM WITH FRAGMENT LABELING", "paper_id": "WOS:000284193200004"}