{"auto_keywords": [{"score": 0.0445736506489238, "phrase": "existing_studies"}, {"score": 0.04143119734779178, "phrase": "generated_queries"}, {"score": 0.00481495049065317, "phrase": "keyword_queries"}, {"score": 0.004766388573192505, "phrase": "relational_databases"}, {"score": 0.004718314112245913, "phrase": "keyword_search"}, {"score": 0.004600228893803583, "phrase": "easy_method"}, {"score": 0.004530794611704416, "phrase": "large_and_complex_databases"}, {"score": 0.00441738161338662, "phrase": "structured_query_languages"}, {"score": 0.00437281181878921, "phrase": "underlying_database_schema"}, {"score": 0.004156590395333602, "phrase": "candidate_structured_queries"}, {"score": 0.003991305899593133, "phrase": "large_size"}, {"score": 0.0038913443732432468, "phrase": "execution_costs"}, {"score": 0.0036429626734678314, "phrase": "generalized_method"}, {"score": 0.00351582806482809, "phrase": "large_set"}, {"score": 0.0033249197885613937, "phrase": "graph-theoretic_optimization_approach"}, {"score": 0.0032415934630668484, "phrase": "general_graph_model"}, {"score": 0.0030655302236416502, "phrase": "keyword_query_evaluation_plans"}, {"score": 0.003019189898170698, "phrase": "proposed_model"}, {"score": 0.0028990018343924683, "phrase": "cost-based_plans"}, {"score": 0.0028551716387011637, "phrase": "uniform_way"}, {"score": 0.0027835848648596513, "phrase": "keyword_query_optimization_problem"}, {"score": 0.002727606388863445, "phrase": "theoretical_cost_model"}, {"score": 0.0026863605504566924, "phrase": "graph-theoretic_problem"}, {"score": 0.002592523232809191, "phrase": "np-hard_problem"}, {"score": 0.0025275050635202878, "phrase": "greedy_heuristic_maximum_propagation"}, {"score": 0.0024392031587145728, "phrase": "intermediate_result"}, {"score": 0.0023539789234610763, "phrase": "proposed_algorithm"}, {"score": 0.002248755794042486, "phrase": "query_evaluation_costs"}, {"score": 0.002214734873559146, "phrase": "experimental_studies"}, {"score": 0.0021049977753042253, "phrase": "existing_work"}], "paper_keywords": ["Query processing", " Keyword search", " Query optimization", " Graph models"], "paper_abstract": "Keyword search can provide users an easy method to query large and complex databases without any knowledge of structured query languages or underlying database schema. Most of the existing studies have focused on generating candidate structured queries relevant to keywords. Due to the large size of generated queries, the execution costs may be prohibitive. However, existing studies lack the idea of a generalized method to optimize the plan of the large set of generated queries. In this paper, we introduce a graph-theoretic optimization approach. We propose a general graph model, Weighted Operator Graph, to address the costs of keyword query evaluation plans. The proposed model is flexible to integrate all of the cost-based plans in a uniform way. We define a Keyword Query Optimization Problem based on a theoretical cost model as a graph-theoretic problem and show it to be a NP-hard problem. We propose a greedy heuristic Maximum Propagation that reduces the size of the intermediate result as early as possible. The proposed algorithm allows us to achieve efficiency in terms of query evaluation costs. The experimental studies on both synthetic and real data set results show that our work outperforms the existing work.", "paper_title": "A graph-theoretic approach to optimize keyword queries in relational databases", "paper_id": "WOS:000344743100011"}