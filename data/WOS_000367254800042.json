{"auto_keywords": [{"score": 0.027183301840015005, "phrase": "machine_hierarchy"}, {"score": 0.00481495049065317, "phrase": "parallel_graph_algorithms"}, {"score": 0.004768378525561471, "phrase": "large-scale_graph_computing"}, {"score": 0.004608879242346434, "phrase": "ever-increasing_size"}, {"score": 0.004454691230204595, "phrase": "graph_computations"}, {"score": 0.004243289764306128, "phrase": "heavy_communication"}, {"score": 0.004061584718427419, "phrase": "scale-free_networks"}, {"score": 0.003983334573043943, "phrase": "social_and_web_graphs"}, {"score": 0.003906586074865932, "phrase": "hub_vertices"}, {"score": 0.0038499929374478125, "phrase": "large_degrees"}, {"score": 0.003757480190200645, "phrase": "large_number"}, {"score": 0.0030628762739398855, "phrase": "hierarchical_machine_model"}, {"score": 0.003003809128328864, "phrase": "input_graph"}, {"score": 0.0029602552900111407, "phrase": "hierarchical_model"}, {"score": 0.0029031614127920232, "phrase": "locale_information"}, {"score": 0.002861062731782219, "phrase": "neighboring_vertices"}, {"score": 0.0027651847105654363, "phrase": "message_volume"}, {"score": 0.0024963543716522087, "phrase": "communication_costs"}, {"score": 0.002424450174817922, "phrase": "different_levels"}, {"score": 0.002297949552105756, "phrase": "stapl_gl"}, {"score": 0.0022101055924375725, "phrase": "traditional_level-synchronous_approach"}, {"score": 0.002125612498781805, "phrase": "graph_algorithms"}], "paper_keywords": ["Parallel Graph Processing", " Graph Analytics", " Big Data", " Distributed Computing"], "paper_abstract": "Large-scale graph computing has become critical due to the ever-increasing size of data. However, distributed graph computations are limited in their scalability and performance due to the heavy communication inherent in such computations. This is exacerbated in scale-free networks, such as social and web graphs, which contain hub vertices that have large degrees and therefore send a large number of messages over the network. Furthermore, many graph algorithms and computations send the same data to each of the neighbors of a vertex. Our proposed approach recognizes this, and reduces communication performed by the algorithm without change to user-code, through a hierarchical machine model imposed upon the input graph. The hierarchical model takes advantage of locale information of the neighboring vertices to reduce communication, both in message volume and total number of bytes sent. It is also able to better exploit the machine hierarchy to further reduce the communication costs, by aggregating traffic between different levels of the machine hierarchy. Results of an implementation in the STAPL GL shows improved scalability and performance over the traditional level-synchronous approach, with 2.5 x -8x improvement for a variety of graph algorithms at 12,000 cores.", "paper_title": "A Hierarchical Approach to Reducing Communication in Parallel Graph Algorithms", "paper_id": "WOS:000367254800042"}