{"auto_keywords": [{"score": 0.04107868567004354, "phrase": "c-ensemble"}, {"score": 0.04041650558013181, "phrase": "intrusion-tolerant_gcs"}, {"score": 0.00481495049065317, "phrase": "intrusion-tolerant_group_communication_system"}, {"score": 0.004616199959832044, "phrase": "consistent_group_membership"}, {"score": 0.004519908617935935, "phrase": "multicast_properties"}, {"score": 0.004425616928975799, "phrase": "crash_faults"}, {"score": 0.004351595642056769, "phrase": "relatively_few_gcs_implementations"}, {"score": 0.004154332348800334, "phrase": "malicious_faults"}, {"score": 0.004016485454498076, "phrase": "systematic_transformation"}, {"score": 0.003965975628742746, "phrase": "crash-tolerant_gcs"}, {"score": 0.003660452313567116, "phrase": "intrusion-tolerant_versions"}, {"score": 0.0036296886647898094, "phrase": "key_group_communication_protocols"}, {"score": 0.0034359094594153304, "phrase": "significant_changes"}, {"score": 0.003349984456443527, "phrase": "c-ensemble_protocol_stack"}, {"score": 0.0032938942910948096, "phrase": "stack_intrusion"}, {"score": 0.0031710903727066313, "phrase": "intrusion-tolerant_group_communication"}, {"score": 0.0030399874838260886, "phrase": "implementation_effort"}, {"score": 0.0029890721584351684, "phrase": "detailed_analysis"}, {"score": 0.0028775998963807324, "phrase": "original_c-ensemble_system"}, {"score": 0.002600194073758015, "phrase": "crash-tolerant_implementation"}, {"score": 0.002524428047147766, "phrase": "run-time_performance_cost"}, {"score": 0.0024302416436559867, "phrase": "experimental_evaluation"}, {"score": 0.0023996317685956213, "phrase": "main_intrusion-tolerant_microprotocols"}, {"score": 0.002233301265743633, "phrase": "intrusion_tolerance"}, {"score": 0.0022051664509486206, "phrase": "normal_operation"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["intrusion tolerance", " fault tolerance", " group communication", " distributed protocols", " experimental evaluation"], "paper_abstract": "There are many group communication systems (GCSs) that provide consistent group membership and reliable, ordered multicast properties in the presence of crash faults. However, relatively few GCS implementations are able to provide these properties in the presence of malicious faults resulting from intrusions. We describe the systematic transformation of a crash-tolerant GCS, namely C-Ensemble, into an intrusion-tolerant GCS, the ITUA GCS. To perform the transformation, we devised intrusion-tolerant versions of key group communication protocols. We then inserted implementations of the protocols into C-Ensemble and made significant changes to the rest of the C-Ensemble protocol stack to make the stack intrusion tolerant. We quantify the cost of providing intrusion-tolerant group communication in two ways. First, we quantify the implementation effort by presenting a detailed analysis of the amount of change required to the original C-Ensemble system. In doing so, we provide insight into the choice of building an intrusion-tolerant GCS from scratch versus building one by leveraging a crash-tolerant implementation. Second, we quantify the run-time performance cost of tolerating intrusions by presenting results from an experimental evaluation of the main intrusion-tolerant microprotocols. The results are analyzed to identify the parts that contribute the most overhead while providing intrusion tolerance during both normal operation and recovery from intrusions. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "Experiences with building an intrusion-tolerant group communication system", "paper_id": "WOS:000255726100004"}