{"auto_keywords": [{"score": 0.03525727816544822, "phrase": "specs"}, {"score": 0.00481495049065317, "phrase": "security-critical_processor_bugs"}, {"score": 0.004760394308239882, "phrase": "processor_implementation_errata"}, {"score": 0.0041517954514423625, "phrase": "recent_commercial_processors"}, {"score": 0.003559284776569813, "phrase": "security-critical_processor_errata_catching_system"}, {"score": 0.0034395119150793787, "phrase": "low-overhead_solution"}, {"score": 0.0032860401904845522, "phrase": "dynamic_verification_strategy"}, {"score": 0.002898291237210567, "phrase": "hardware_prototype"}, {"score": 0.0028167336373711494, "phrase": "open_source_processor"}, {"score": 0.002527150892127982, "phrase": "security-critical_errata"}, {"score": 0.0024560114164181765, "phrase": "classification_phase"}, {"score": 0.0021049977753042253, "phrase": "software_run-time_overhead"}], "paper_keywords": ["Processor errata", " hardware security exploits", " security-critical processor errata"], "paper_abstract": "Processor implementation errata remain a problem, and worse, a subset of these bugs are security-critical. We classified 7 years of errata from recent commercial processors to understand the magnitude and severity of this problem, and found that of 301 errata analyzed, 28 are security-critical. We propose the SECURITY-CRITICAL PROCESSOR ERRATA CATCHING SYSTEM (SPECS) as a low-overhead solution to this problem. SPECS employs a dynamic verification strategy that is made lightweight by limiting protection to only security-critical processor state. As a proof-of-concept, we implement a hardware prototype of SPECS in an open source processor. Using this prototype, we evaluate SPECS against a set of 14 bugs inspired by the types of security-critical errata we discovered in the classification phase. The evaluation shows that SPECS is 86% effective as a defense when deployed using only ISA-level state; incurs less than 5% area and power overhead; and has no software run-time overhead.", "paper_title": "SPECS: A Lightweight Runtime Mechanism for Protecting Software from Security-Critical Processor Bugs", "paper_id": "WOS:000370874900036"}