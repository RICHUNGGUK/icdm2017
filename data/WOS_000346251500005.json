{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "public_verifiability"}, {"score": 0.0494713765104406, "phrase": "related-key_attacks"}, {"score": 0.004633888966463624, "phrase": "cloud_computing"}, {"score": 0.004594582559945568, "phrase": "grid_computing"}, {"score": 0.004328576620172575, "phrase": "third_parties"}, {"score": 0.004273601449537163, "phrase": "specific_problem"}, {"score": 0.004060566667226606, "phrase": "user's_data"}, {"score": 0.003958049372486465, "phrase": "storage_servers"}, {"score": 0.0039077616208517026, "phrase": "important_approach"}, {"score": 0.0036813725040313002, "phrase": "storage_server"}, {"score": 0.0035731269727067496, "phrase": "concise_proof"}, {"score": 0.003527712410706358, "phrase": "user's_file"}, {"score": 0.0033517342967390065, "phrase": "retrievability_solutions"}, {"score": 0.0032950412841674026, "phrase": "physical_attacks"}, {"score": 0.0030645676308053444, "phrase": "fault_injection_techniques"}, {"score": 0.0027781249331615813, "phrase": "private_keys"}, {"score": 0.0025183881730011597, "phrase": "security_model"}, {"score": 0.002475755804232436, "phrase": "publicly_verifiable_proofs"}, {"score": 0.002332133125576037, "phrase": "publicly_verifiable_proof"}, {"score": 0.0022828795331819025, "phrase": "modified_key"}, {"score": 0.002225143304518447, "phrase": "linear_related-key_attack"}, {"score": 0.0021688641066186817, "phrase": "retrievability_system"}, {"score": 0.0021049977753042253, "phrase": "secure_and_efficient_proof"}], "paper_keywords": [""], "paper_abstract": "Modern technologies such as cloud computing, grid computing and software as a service all require data to be stored by the third parties. A specific problem encountered in this context is to convince a verifier that a user's data are kept intact at the storage servers. An important approach to achieve this goal is called proof of retrievability, by which a storage server can assure a verifier via a concise proof that a user's file is available. However, for most publicly verifiable systems, existing proof of retrievability solutions do not take physical attacks into consideration, where an adversary can observe the outcome of the computation with methods like fault injection techniques. In fact, the authors find that giving the adversary the ability to obtain the information about the relations between the private keys, those systems are not secure anymore. Motivated by the need of preventing this kind of attacks, they present the security model for related-key attacks in publicly verifiable proofs of retrievability, where the adversary can subsequently observe the outcome of the publicly verifiable proof of retrievability under the modified key. After pointing out a linear related-key attack on an existing proof of retrievability system with public verifiability, they present a secure and efficient proof of retrievability with public verifiability, against related-key attacks.", "paper_title": "Proof of retrievability with public verifiability resilient against related-key attacks", "paper_id": "WOS:000346251500005"}