{"auto_keywords": [{"score": 0.03976161679769431, "phrase": "indeterminate_strings"}, {"score": 0.00481495049065317, "phrase": "hybrid_pattern-matching_algorithm"}, {"score": 0.004399905285945236, "phrase": "recently_proposed_hybrid_algorithm"}, {"score": 0.0038431888954930083, "phrase": "special_properties"}, {"score": 0.0035116137766467654, "phrase": "fjs"}, {"score": 0.0034332736827447654, "phrase": "indeterminate_version"}, {"score": 0.003066945490483524, "phrase": "boyer-moore_algorithm"}, {"score": 0.0026384167183586015, "phrase": "border_array"}, {"score": 0.002252602622785975, "phrase": "individual_test_cases"}, {"score": 0.0021530945641993152, "phrase": "overall_performance"}, {"score": 0.0021049977753042253, "phrase": "perhaps_a_general_advantage"}], "paper_keywords": ["Indeterminate Strings", " hybrid", " adaptive"], "paper_abstract": "We describe a hybrid pattern-matching algorithm that works on both regular and indeterminate strings. This algorithm is inspired by the recently proposed hybrid algorithm FJS and its indeterminate successor. However, as discussed in this paper, because of the special properties of indeterminate strings, it is not straight forward to directly migrate FJS to an indeterminate version. Our new algorithm combines two fast pattern-matching algorithms, ShiftAnd and BMS (the Sunday variant of the Boyer-Moore algorithm), and is highly adaptive to the nature of the text being processed. It avoids using the border array, there fore avoids some of the cases that are awkward for indeterminate strings. Although not always the fastest in individual test cases, our new algorithm is superior in overall performance to its two component algorithms perhaps a general advantage of hybrid algorithms.", "paper_title": "AN ADAPTIVE HYBRID PATTERN-MATCHING ALGORITHM ON INDETERMINATE STRINGS", "paper_id": "WOS:000272093500003"}