{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "collective_algorithms_through_non-minimal"}, {"score": 0.00470862827326028, "phrase": "known_algorithms"}, {"score": 0.004338390136272005, "phrase": "minimal-communication_algorithms"}, {"score": 0.004027031316965272, "phrase": "minimum_amount"}, {"score": 0.0037658881407605445, "phrase": "data-ordering_semantics"}, {"score": 0.0030794433253250476, "phrase": "redundant_communication"}, {"score": 0.0029889584492584073, "phrase": "novel_algorithms"}, {"score": 0.0029447150254434842, "phrase": "clos_networks"}, {"score": 0.0026330549554033876, "phrase": "allgather_speedups"}, {"score": 0.0025556529150386168, "phrase": "reduce-scatter_speedups"}, {"score": 0.0024256208351516027, "phrase": "native_ibm_algorithm"}], "paper_keywords": ["Algorithms", " Performance", " Collective-communication algorithms"], "paper_abstract": "Known algorithms for two important collective communication operations, allgather and reduce-scatter, are minimal-communication algorithms; no process sends or receives more than the minimum amount of data. This, combined with the data-ordering semantics of the operations, limits the flexibility and performance of these algorithms. Our novel non-minimal, topology-aware algorithms deliver far better performance with the addition of a very small amount of redundant communication. We develop novel algorithms for Clos networks and single or multi-ported torus networks. Tests on a 32k-node BlueGene/P result in allgather speedups of up to 6x and reduce-scatter speedups of over 11x compared to the native IBM algorithm. Broadcast, reduce, and allreduce can be composed of allgather or reduce-scatter and other collective operations; our techniques also improve the performance of these algorithms.", "paper_title": "Faster Topology-aware Collective Algorithms Through Non-minimal Communication", "paper_id": "WOS:000309350200005"}