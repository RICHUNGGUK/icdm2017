{"auto_keywords": [{"score": 0.04740622885398932, "phrase": "complex_reciprocal_and_exponential_functions"}, {"score": 0.04612142010063672, "phrase": "proposed_method"}, {"score": 0.041996689288621714, "phrase": "memory_requirements"}, {"score": 0.00481495049065317, "phrase": "complex_function_approximation_using"}, {"score": 0.00478740563679966, "phrase": "two-dimensional_interpolation"}, {"score": 0.0046253989970108985, "phrase": "new_scheme"}, {"score": 0.004342430078306461, "phrase": "two-dimensional_convolution_algorithm"}, {"score": 0.004195418010131832, "phrase": "tabulated_function_values"}, {"score": 0.004123781267600542, "phrase": "complex_domain"}, {"score": 0.003961330917648707, "phrase": "lookup_tables"}, {"score": 0.0038052556098065694, "phrase": "independent_row"}, {"score": 0.0033345064183883263, "phrase": "lagrange"}, {"score": 0.003094306770612843, "phrase": "optimal_design_parameters"}, {"score": 0.0029722900280316216, "phrase": "hardware_resources"}, {"score": 0.0028880836335117297, "phrase": "generic_hardware_architecture"}, {"score": 0.002806256131739047, "phrase": "scalable_implementation_capabilities"}, {"score": 0.0027741761880779535, "phrase": "computation_precision"}, {"score": 0.0027424619603260837, "phrase": "interpolation_degree"}, {"score": 0.002664749302333897, "phrase": "proposed_architecture"}, {"score": 0.0026342827320931937, "phrase": "eight_complex_reciprocal_and_eight_complex_exponential_design_instances"}, {"score": 0.0025596276616952516, "phrase": "asic-and_fpga-based_experimental_results"}, {"score": 0.002294686545883412, "phrase": "considerable_reduction"}, {"score": 0.0022296340517805125, "phrase": "traditional_bipartite"}, {"score": 0.0022041312401435346, "phrase": "multipartite_schemes"}], "paper_keywords": ["Complex reciprocal", " complex function evaluation", " complex exponential", " cubic interpolation", " Lagrange interpolation", " linear interpolation", " quadratic interpolation", " two-dimensional interpolation"], "paper_abstract": "This paper presents a new scheme for evaluating complex reciprocal and exponential functions in hardware. The proposed method utilizes a two-dimensional convolution algorithm to interpolate bivariate functions from tabulated function values in the complex domain. To reduce the memory requirements for lookup tables, the interpolation is decomposed into independent row and column computations, such that the same coefficient table can be shared. Three different interpolation kernels from degree-1 (linear) to degree-2 (quadratic Lagrange) and degree-3 (cubic Lagrange) are explored to find the optimal design parameters and the most acceptable trade-offs between performance and hardware resources. Moreover, a generic hardware architecture is designed to provide scalable implementation capabilities for computation precision and interpolation degree. To verify the proposed architecture, eight complex reciprocal and eight complex exponential design instances are implemented. The ASIC-and FPGA-based experimental results show that the proposed scheme can efficiently approximate the complex reciprocal and exponential functions with up to 16-bit precision, as well as achieve a considerable reduction of memory requirements compared with traditional bipartite and multipartite schemes. The proposed method is also applicable to other complex functions.", "paper_title": "Complex Function Approximation Using Two-Dimensional Interpolation", "paper_id": "WOS:000344990300005"}