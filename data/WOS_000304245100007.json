{"auto_keywords": [{"score": 0.03725727166592793, "phrase": "rate_region"}, {"score": 0.00481495049065317, "phrase": "information_aggregation"}, {"score": 0.004787595063253874, "phrase": "sensor_networks"}, {"score": 0.004626680470601208, "phrase": "sensor_measurements"}, {"score": 0.004561232179195321, "phrase": "block_processing"}, {"score": 0.0044967055264893184, "phrase": "network_function_computation"}, {"score": 0.00447115003744675, "phrase": "directed_graphs"}, {"score": 0.004445739135694758, "phrase": "undirected_graphs"}, {"score": 0.004296264970612285, "phrase": "encoding_strategies"}, {"score": 0.0042354707960660706, "phrase": "interactive_information_exchange"}, {"score": 0.004104722208522451, "phrase": "designated_collector_node"}, {"score": 0.0039105194554402475, "phrase": "directed_graph"}, {"score": 0.003800586434296711, "phrase": "sensor_nodes"}, {"score": 0.0037042817107563785, "phrase": "optimal_encoders"}, {"score": 0.003641433168173135, "phrase": "function_computation"}, {"score": 0.00361040845064781, "phrase": "collector_node"}, {"score": 0.0035189057079817285, "phrase": "r-vertical_bar_e_vertical_bar"}, {"score": 0.0034004869983267085, "phrase": "feasible_encoders"}, {"score": 0.0033523258279879132, "phrase": "zero-error_computation"}, {"score": 0.003333252253488408, "phrase": "asymptotically_large_block_length"}, {"score": 0.003267342521938321, "phrase": "directed_trees"}, {"score": 0.0032302647179383915, "phrase": "optimal_encoder"}, {"score": 0.0031573626285069157, "phrase": "general_directed_acyclic_graphs"}, {"score": 0.0030423786289357846, "phrase": "disambiguation_requirements"}, {"score": 0.0028167336373711494, "phrase": "undirected_tree_network"}, {"score": 0.0027218799769229596, "phrase": "sensor_data"}, {"score": 0.002706383680762465, "phrase": "undirected_edges"}, {"score": 0.002690975370565776, "phrase": "interactive_computation"}, {"score": 0.0026003455833291124, "phrase": "aggregation_and_communication_strategies"}, {"score": 0.002563487683381462, "phrase": "sum-threshold_functions"}, {"score": 0.0025343769150179764, "phrase": "minimum_worst_case"}, {"score": 0.002442025065383455, "phrase": "optimal_strategy"}, {"score": 0.0024074058206123793, "phrase": "network_aggregation"}, {"score": 0.002326304140277375, "phrase": "general_graphs"}, {"score": 0.0022933216359142736, "phrase": "cut-set_lower_bound"}, {"score": 0.002216054733102974, "phrase": "complete_graphs"}, {"score": 0.0021049977753042253, "phrase": "optimal_scheme"}], "paper_keywords": ["Communication complexity", " function computation", " in-network computation"], "paper_abstract": "We consider the problem of information aggregation in sensor networks, where one is interested in computing a function of the sensor measurements. We allow for block processing and study in-network function computation in directed graphs and undirected graphs. We study how the structure of the function affects the encoding strategies and the effect of interactive information exchange. Depending on the application, there could be a designated collector node, or every node might want to compute the function. We begin by considering a directed graph G = (V, E) on the sensor nodes, where the goal is to determine the optimal encoders on each edge which achieve function computation at the collector node. Our goal is to characterize the rate region in R-vertical bar E vertical bar, i.e., the set of points for which there exist feasible encoders with given rates which achieve zero-error computation for asymptotically large block length. We determine the solution for directed trees, specifying the optimal encoder and decoder for each edge. For general directed acyclic graphs, we provide an outer bound on the rate region by finding the disambiguation requirements for each cut, and describe examples where this outer bound is tight. Next, we address the scenario where nodes are connected in an undirected tree network, and every node wishes to compute a given symmetric Boolean function of the sensor data. Undirected edges permit interactive computation, and we therefore study the effect of interaction on the aggregation and communication strategies. We focus on sum-threshold functions and determine the minimum worst case total number of bits to be exchanged on each edge. The optimal strategy involves recursive in-network aggregation which is reminiscent of message passing. In the case of general graphs, we present a cut-set lower bound and an achievable scheme based on aggregation along trees. For complete graphs, we prove that the complexity of this scheme is no more than twice that of the optimal scheme.", "paper_title": "Optimal Function Computation in Directed and Undirected Graphs", "paper_id": "WOS:000304245100007"}