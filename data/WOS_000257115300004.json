{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_items"}, {"score": 0.004612147352416241, "phrase": "flexible_windows"}, {"score": 0.004195418010131832, "phrase": "continuous_stream"}, {"score": 0.0040186038781533946, "phrase": "new_frequency_measure"}, {"score": 0.0037834649508375544, "phrase": "flexible_window_length"}, {"score": 0.003353521531649663, "phrase": "maximal_frequency"}, {"score": 0.0030239842475439814, "phrase": "current_state"}, {"score": 0.002822434555587263, "phrase": "new_measure"}, {"score": 0.002703327151461985, "phrase": "incremental_algorithm"}, {"score": 0.002566997205079849, "phrase": "current_frequency"}, {"score": 0.002255431275670053, "phrase": "memory_requirements"}], "paper_keywords": [""], "paper_abstract": "We study the problem of finding frequent items in a continuous stream of itemsets. A new frequency measure is introduced, based on a flexible window length. For a given item, its current frequency in the stream is defined as the maximal frequency over all windows from any point in the past until the current state. We study the properties of the new measure, and propose an incremental algorithm that allows to produce the current frequency of an item immediately at any time. It is shown experimentally that the memory requirements of the algorithm are extremely small for many different realistic data distributions.", "paper_title": "Mining frequent items in a stream using flexible windows", "paper_id": "WOS:000257115300004"}