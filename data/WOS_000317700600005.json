{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "weighted_automata"}, {"score": 0.04151111040011756, "phrase": "mohri"}, {"score": 0.033995854396084664, "phrase": "approximation_factor"}, {"score": 0.004775854771026668, "phrase": "nondeterministic_weighted_finite_automaton"}, {"score": 0.004749971571258954, "phrase": "wfa"}, {"score": 0.004698608600920487, "phrase": "input_word"}, {"score": 0.004660453113061494, "phrase": "numerical_value"}, {"score": 0.0045850648862091085, "phrase": "formal_verification"}, {"score": 0.00456020621016909, "phrase": "quantitative_properties"}, {"score": 0.004146279432976737, "phrase": "nfas"}, {"score": 0.004024072318264299, "phrase": "equivalent_deterministic_weighted_automaton"}, {"score": 0.0038422386273629836, "phrase": "determinization_construction"}, {"score": 0.0037903338753298267, "phrase": "wfa."}, {"score": 0.0035798486329438337, "phrase": "twins_property"}, {"score": 0.0032457641039857128, "phrase": "wfa_a"}, {"score": 0.003008917225401274, "phrase": "sigma"}, {"score": 0.0028327003934762174, "phrase": "a._our_construction"}, {"score": 0.002771659191307672, "phrase": "subset_construction"}, {"score": 0.002697199087954856, "phrase": "attributed_subsets"}, {"score": 0.0022289591680000036, "phrase": "t-determinizable_wfas"}, {"score": 0.002186849855560281, "phrase": "polynomial_algorithm"}, {"score": 0.0021396960731214225, "phrase": "t-twins_property"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Weighted automata", " Determinization", " Approximation"], "paper_abstract": "A nondeterministic weighted finite automaton (WFA) maps an input word to a numerical value. Applications of weighted automata include formal verification of quantitative properties, as well as text, speech, and image processing. Many of these applications require the WFAs to be deterministic, or work substantially better when the WFAs are deterministic. Unlike NFAs, which can always be determinized, not all WFAs have an equivalent deterministic weighted automaton (DWFA). In Mohri (1997) [22], Mohri describes a determinization construction for a subclass of WFA. He also describes a property of WFAs (the twins property), such that all WFAs that satisfy the twins property are determinizable and the algorithm terminates on them. Unfortunately, many natural WFAs cannot be determinized. In this paper we study approximated determinization of WFAs. We describe an algorithm that, given a WFA A and an approximation factor t >= 1, constructs a DWFA A' that t-determinizes A. Formally, for all words w is an element of Sigma*, the value of w in A' is at least its value in,A and at most t times its value in A. Our construction involves two new ideas: attributing states in the subset construction by both upper and lower residues, and collapsing attributed subsets whose residues can be tightened. The larger the approximation factor is, the more attributed subsets we can collapse. Thus, t-determinization is helpful not only for WFAs that cannot be determinized, but also in cases determinization is possible but results in automata that are too big to handle. We also describe a property (the t-twins property) and use it in order to characterize t-determinizable WFAs. Finally, we describe a polynomial algorithm for deciding whether a given WFA has the t-twins property. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Rigorous approximated determinization of weighted automata", "paper_id": "WOS:000317700600005"}