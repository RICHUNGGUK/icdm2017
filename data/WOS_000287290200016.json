{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "spatial_interpolation"}, {"score": 0.004668957916795845, "phrase": "continuous_raster_surfaces"}, {"score": 0.004550669123303854, "phrase": "point-based_measurements"}, {"score": 0.004458189822972851, "phrase": "euclidean_distance_measurements"}, {"score": 0.004412654209742722, "phrase": "data_points"}, {"score": 0.004256895619944631, "phrase": "unknown_locations"}, {"score": 0.003982011128052839, "phrase": "euclidean_distances"}, {"score": 0.003921129887153952, "phrase": "distance_measures"}, {"score": 0.00374399358035391, "phrase": "non-euclidean_distances"}, {"score": 0.003574830654211291, "phrase": "network-based_solutions"}, {"score": 0.003378385493203297, "phrase": "connected_line_segments"}, {"score": 0.00332670230152448, "phrase": "point-to-point_distances"}, {"score": 0.00325901518290063, "phrase": "vector-based_solutions"}, {"score": 0.002955782731675529, "phrase": "least-cost-path_analyses"}, {"score": 0.0028807718824400697, "phrase": "sampled_points"}, {"score": 0.0027789349951704177, "phrase": "arbitrarily_complex_systems"}, {"score": 0.0026532596852754525, "phrase": "least-cost_path_distances"}, {"score": 0.002585906251354904, "phrase": "inverse_distance_weighting"}, {"score": 0.002533253511622532, "phrase": "proof-of-concept_interpolation"}, {"score": 0.002443671484766342, "phrase": "complex_deltaic_river_system"}, {"score": 0.0023694065215394593, "phrase": "euclidean_distance_interpolation"}, {"score": 0.002262209824105154, "phrase": "connectivity_rules"}, {"score": 0.002193447487477984, "phrase": "water_temperature"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Spatial interpolation", " Least cost distance analysis", " Network interpolation", " Inverse distance weighting", " Non-Euclidean distance"], "paper_abstract": "Spatial interpolation allows creation of continuous raster surfaces from a subsample of point-based measurements. Most interpolation approaches use Euclidean distance measurements between data points to generate predictions of values at unknown locations. However, there are many spatially distributed data sets that are not properly represented by Euclidean distances and require distance measures which represent their complex geographic connectivity. The problem of defining non-Euclidean distances between data points has been solved using the network-based solutions, but such techniques have historically relied on a network of connected line segments to determine point-to-point distances. While these vector-based solutions are computationally efficient, they cannot model more complex 2- and 3-dimensional systems of connectivity. Here, we use least-cost-path analyses to define distances between sampled points: a solution that allows for arbitrarily complex systems of connectivity to be interpolated. We used least-cost path distances in conjunction with the inverse distance weighting interpolation for a proof-of-concept interpolation of water temperature data in a complex deltaic river system. We compare our technique to Euclidean distance interpolation, and demonstrate that our technique, which follows connectivity rules, yields are more realistic interpolation of water temperature. (C) 2010 Published by Elsevier Ltd.", "paper_title": "Least cost distance analysis for spatial interpolation", "paper_id": "WOS:000287290200016"}