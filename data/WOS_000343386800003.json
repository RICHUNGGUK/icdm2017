{"auto_keywords": [{"score": 0.046743247979738646, "phrase": "olap"}, {"score": 0.00481495049065317, "phrase": "data_warehouse_buffer_management"}, {"score": 0.004683292152590589, "phrase": "analytical_queries"}, {"score": 0.004530023871441992, "phrase": "data_warehouses"}, {"score": 0.004009555045206973, "phrase": "denormalized_star_schema"}, {"score": 0.003814212645832246, "phrase": "large_central_fact_table"}, {"score": 0.003628352506247126, "phrase": "query_optimization_techniques"}, {"score": 0.0035684266744407485, "phrase": "materialized_views"}, {"score": 0.0034324073240680213, "phrase": "buffer_management"}, {"score": 0.003319939715683536, "phrase": "fixed_order"}, {"score": 0.0025713100093065645, "phrase": "np-hardness_study"}, {"score": 0.0025287979714720423, "phrase": "joint_problem"}, {"score": 0.0024054226746197706, "phrase": "new_and_highly_efficient_algorithm"}, {"score": 0.0022880528191813083, "phrase": "extensive_experimental_evaluation"}, {"score": 0.0022502133699402018, "phrase": "real_dbms"}, {"score": 0.002152332983488664, "phrase": "previous_ones"}], "paper_keywords": ["Buffer Management", " Data Warehousing", " Query Interaction", " Query Optimization", " Query Scheduling"], "paper_abstract": "Analytical queries, like those used in data warehouses and OLAP, are generally interdependent. This is due to the fact that the database is usually modeled with a denormalized star schema or its variants, where most queries pass through a large central fact table. Such interaction has been largely exploited in query optimization techniques such as materialized views. Nevertheless, such approaches usually ignore buffer management and assume queries have a fixed order and are known in advance. We believe such assumptions are too strong and thus they need to be revisited and simplified. In this paper, we study the combination of two problems: buffer management and query scheduling, in both static and dynamic scenarios. We present an NP-hardness study of the joint problem, highlighting its complexity. We then introduce a new and highly efficient algorithm inspired by a beehive. We conduct an extensive experimental evaluation on a real DBMS showing the superiority of our algorithm compared to previous ones as well as its excellent scalability.", "paper_title": "A Query Beehive Algorithm for Data Warehouse Buffer Management and Query Scheduling", "paper_id": "WOS:000343386800003"}