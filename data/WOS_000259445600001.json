{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "malware_detection"}, {"score": 0.04131023925415857, "phrase": "malware_writers"}, {"score": 0.02554099715645429, "phrase": "semantics-aware_malware_detector"}, {"score": 0.004703878334423852, "phrase": "crucial_aspect"}, {"score": 0.00466016686289196, "phrase": "software_security"}, {"score": 0.004616859702338596, "phrase": "current_malware_detectors"}, {"score": 0.00436530211426514, "phrase": "syntactic_characteristics"}, {"score": 0.004304574865291508, "phrase": "machine-level_byte_sequence"}, {"score": 0.004127394241838696, "phrase": "syntactic_approach"}, {"score": 0.0040890178236849825, "phrase": "current_detectors"}, {"score": 0.004032118497047498, "phrase": "code_obfuscations"}, {"score": 0.003848088904418221, "phrase": "syntactic_properties"}, {"score": 0.00379452936798156, "phrase": "malware_byte_sequence"}, {"score": 0.0035376693476114733, "phrase": "malware_identification"}, {"score": 0.003407839062159497, "phrase": "semantics-based_framework"}, {"score": 0.0033447157263095223, "phrase": "malware_detectors"}, {"score": 0.0031036643805367487, "phrase": "trace_semantics"}, {"score": 0.0028133741785871867, "phrase": "abstract_interpretation"}, {"score": 0.0027483472371835865, "phrase": "irrelevant_aspects"}, {"score": 0.0026598200370569433, "phrase": "concrete_application"}, {"score": 0.002538263784314365, "phrase": "standard_signature_matching_detection_schemes"}, {"score": 0.0023662411481713704, "phrase": "christodorescu_et_al"}, {"score": 0.0022580713471027996, "phrase": "common_obfuscations"}, {"score": 0.0021750990136123367, "phrase": "kinder"}, {"score": 0.0021049977753042253, "phrase": "standard_model-checking_techniques"}], "paper_keywords": ["security", " languages", " theory", " verification", " malware detection", " obfuscation", " trace semantics", " abstract interpretation"], "paper_abstract": "Malware detection is a crucial aspect of software security. Current malware detectors work by checking for signatures, which attempt to capture the syntactic characteristics of the machine-level byte sequence of the malware. This reliance on a syntactic approach makes current detectors vulnerable to code obfuscations, increasingly used by malware writers, that alter the syntactic properties of the malware byte sequence without significantly affecting their execution behavior. This paper takes the position that the key to malware identification lies in their semantics. It proposes a semantics-based framework for reasoning about malware detectors and proving properties such as soundness and completeness of these detectors. Our approach uses a trace semantics to characterize the behavior of malware as well as that of the program being checked for infection, and uses abstract interpretation to \"hide\" irrelevant aspects of these behaviors. As a concrete application of our approach, we show that (1) standard signature matching detection schemes are generally sound but not complete, (2) the semantics-aware malware detector proposed by Christodorescu et al. is complete with respect to a number of common obfuscations used by malware writers and (3) the malware detection scheme proposed by Kinder et al. and based on standard model-checking techniques is sound in general and complete on some, but not all, obfuscations handled by the semantics-aware malware detector.", "paper_title": "A semantics-based approach to malware detection", "paper_id": "WOS:000259445600001"}