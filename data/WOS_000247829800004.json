{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "broadcast_encryption_schemes"}, {"score": 0.03721265554141775, "phrase": "traitor_tracing_algorithm"}, {"score": 0.0045787902890355135, "phrase": "boneh"}, {"score": 0.004261268957001927, "phrase": "exciting_achievements"}, {"score": 0.003937273640906994, "phrase": "private_keys"}, {"score": 0.003853251284913932, "phrase": "constant_size"}, {"score": 0.003637822529522622, "phrase": "open_question"}, {"score": 0.00326572165784246, "phrase": "efficient_trace-and-revoke_system"}, {"score": 0.0030609320300175953, "phrase": "negative_answer"}, {"score": 0.0026126405272417783, "phrase": "pirate_decoding"}, {"score": 0.0021821915946356168, "phrase": "lee_et_al"}], "paper_keywords": ["broadcast encryption", " pirate decoder", " traitor tracing"], "paper_abstract": "in Crypto'05, Boneh et al. presented two broadcast encryption schemes. Their work has exciting achievements: the header (also called ciphertexts) and the private keys are of constant size. In their paper, they give an open question to construct a traitor tracing algorithm for their broadcast encryption schemes, and combine the two systems to obtain an efficient trace-and-revoke system. In this paper, we give a negative answer to their open question. More precisely, we show that three or more insider users are able to collude to forge a valid private key for pirate decoding against their schemes. Moreover, we prove that there exists no traitor tracing algorithm to identify the colluders. Our pirate decoding can also similarly be applied to Lee et al.'s broadcast encryption schemes in ISPEC'06.", "paper_title": "Pirate decoder for the broadcast encryption schemes from Crypto 2005", "paper_id": "WOS:000247829800004"}