{"auto_keywords": [{"score": 0.04696022234609238, "phrase": "policy_gradient"}, {"score": 0.030353144436730508, "phrase": "hessian_distribution_estimate"}, {"score": 0.004815236504576977, "phrase": "hessian"}, {"score": 0.004723322467153553, "phrase": "bayesian_policy_gradient_reinforcement_learning"}, {"score": 0.0046781613377273774, "phrase": "bayesian_policy_gradient_algorithms"}, {"score": 0.004437349839203418, "phrase": "performance_measure"}, {"score": 0.004394910907549057, "phrase": "reinforcement_learning"}, {"score": 0.00433200902751133, "phrase": "gaussian_process"}, {"score": 0.0039729853486821995, "phrase": "accurate_gradient_estimates"}, {"score": 0.003878625406105021, "phrase": "conventional_monte-carlo_policy_gradient_algorithms"}, {"score": 0.0036788184374592706, "phrase": "previous_bayesian_frameworks"}, {"score": 0.0035399770257915466, "phrase": "hessian_matrix_distribution"}, {"score": 0.0034892684482068347, "phrase": "learning_rate_schedule"}, {"score": 0.0033737457695128233, "phrase": "bayesian_policy_gradient_algorithm"}, {"score": 0.0031238084716187805, "phrase": "policy_gradient_distributions"}, {"score": 0.0030790429005600898, "phrase": "bayesian_quadrature_method"}, {"score": 0.0029914213495838998, "phrase": "hessian_matrix_distributions"}, {"score": 0.0029062860108533374, "phrase": "posterior_mean"}, {"score": 0.0027697290872182477, "phrase": "important_properties"}, {"score": 0.002730023736069673, "phrase": "hessian_matrix"}, {"score": 0.0026142814606853037, "phrase": "appropriate_choice"}, {"score": 0.0025521085778978042, "phrase": "computational_complexity"}, {"score": 0.002443890721386284, "phrase": "policy_gradient_distribution_estimates"}, {"score": 0.0023515464194592195, "phrase": "experimental_results"}, {"score": 0.0023178219772486868, "phrase": "proposed_algorithm"}, {"score": 0.0022845800828325577, "phrase": "bayesian_policy_gradient"}, {"score": 0.002251813863195168, "phrase": "bayesian_policy_natural_gradient_algorithms"}, {"score": 0.002219516542316085, "phrase": "ghavamzadeh"}, {"score": 0.002198257904124353, "phrase": "engel"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Markov decision process", " Reinforcement learning", " Bayesian policy gradient", " Monte-Carlo policy gradient", " Policy gradient", " Hessian matrix distribution"], "paper_abstract": "Bayesian policy gradient algorithms have been recently proposed for modeling the policy gradient of the performance measure in reinforcement learning as a Gaussian process. These methods were known to reduce the variance and the number of samples needed to obtain accurate gradient estimates in comparison to the conventional Monte-Carlo policy gradient algorithms. In this paper, we propose an improvement over previous Bayesian frameworks for the policy gradient. We use the Hessian matrix distribution as a learning rate schedule to improve the performance of the Bayesian policy gradient algorithm in terms of the variance and the number of samples. As in computing the policy gradient distributions, the Bayesian quadrature method is used to estimate the Hessian matrix distributions. We prove that the posterior mean of the Hessian distribution estimate is symmetric, one of the important properties of the Hessian matrix. Moreover, we prove that with an appropriate choice of kernel, the computational complexity of Hessian distribution estimate is equal to that of the policy gradient distribution estimates. Using simulations, we show encouraging experimental results comparing the proposed algorithm to the Bayesian policy gradient and the Bayesian policy natural gradient algorithms described in Ghavamzadeh and Engel [10]. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Hessian matrix distribution for Bayesian policy gradient reinforcement learning", "paper_id": "WOS:000288774700011"}