{"auto_keywords": [{"score": 0.0339643024614943, "phrase": "lbs"}, {"score": 0.00481495049065317, "phrase": "enterprise_services"}, {"score": 0.0047517225918491226, "phrase": "application-level_scheduling"}, {"score": 0.004658426838467567, "phrase": "common_process"}, {"score": 0.004566954456805558, "phrase": "enterprise_domain"}, {"score": 0.003820144626025562, "phrase": "implementation_aspects"}, {"score": 0.0037450707321601963, "phrase": "modular_scheduling_solution"}, {"score": 0.0035755653799043, "phrase": "above-mentioned_requirements"}, {"score": 0.0035052810710060893, "phrase": "proposed_solution"}, {"score": 0.0034363735647539267, "phrase": "integral_part"}, {"score": 0.003368816076401138, "phrase": "existing_service_provisioning_platform"}, {"score": 0.0032591491777773035, "phrase": "based_services"}, {"score": 0.002951045605925464, "phrase": "careful_design_process"}, {"score": 0.002798780784517325, "phrase": "scheduler's_functional_subsystems"}, {"score": 0.0024678216843278806, "phrase": "underlying_technologies"}, {"score": 0.00240328454980006, "phrase": "enterprise_environments"}, {"score": 0.0023559890904375526, "phrase": "high_quality"}, {"score": 0.0021903801614787423, "phrase": "intensive_performance_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["time-critical scheduling", " enterprise applications", " J2EE", " push paradigm", " middleware platform"], "paper_abstract": "Application-level scheduling is a common process in the enterprise domain, but in order to be productive it should be time-effective, interoperable and reliable. In this paper we present the design and implementation aspects of a modular scheduling solution, which aims to fulfill the above-mentioned requirements. The proposed solution constitutes an integral part of an existing service provisioning platform targeted to the location based services (LBS) domain; however application to other service-oriented architectures is also possible. A careful design process is followed in order to identify the scheduler's functional subsystems and the relationships between them. The implementation is based on the J2EE framework, thus guaranteeing independence from underlying technologies and applicability in enterprise environments. The high quality and scalability of the scheduler is also validated through an intensive performance analysis. (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "A scheduling framework for enterprise services", "paper_id": "WOS:000235818400011"}