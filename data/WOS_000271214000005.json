{"auto_keywords": [{"score": 0.04575326850542082, "phrase": "lapack"}, {"score": 0.04472864857368904, "phrase": "umfpack"}, {"score": 0.00481497194453032, "phrase": "bindings"}, {"score": 0.0047026237903774895, "phrase": "external_software_libraries"}, {"score": 0.004129873531628877, "phrase": "mumps._fortran"}, {"score": 0.003986103192038901, "phrase": "software_packages"}, {"score": 0.003626626504149897, "phrase": "nongeneric_functions"}, {"score": 0.003541923233726252, "phrase": "generic_code"}, {"score": 0.0030017207229983385, "phrase": "external_software"}, {"score": 0.002897109710213723, "phrase": "small_effort"}, {"score": 0.0026045914281028473, "phrase": "external_software_interfaces"}, {"score": 0.0025436978068459565, "phrase": "specific_vector"}, {"score": 0.0024842242921857705, "phrase": "matrix_containers"}, {"score": 0.0022867912094019726, "phrase": "blas"}, {"score": 0.002104999029280832, "phrase": "mumps"}], "paper_keywords": ["Documentation", " Languages", " Bindings", " BLAS", " C plus", " LAPACK", " traits"], "paper_abstract": "FORTRAN and C software packages are often used in generic C++ software. Calling nongeneric functions in generic code is not straightforward. The bindings in this article help the C++ programmer using external software with a small effort. The bindings provide a mechanism to keep external software interfaces and specific vector and matrix containers orthogonal. We show examples using BLAS, LAPACK, UMFPACK, and MUMPS functions and subroutines.", "paper_title": "C plus plus Bindings to External Software Libraries with Examples from BLAS, LAPACK, UMFPACK, and MUMPS", "paper_id": "WOS:000271214000005"}