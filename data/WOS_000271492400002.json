{"auto_keywords": [{"score": 0.025521182927325303, "phrase": "chiron"}, {"score": 0.013642864335911298, "phrase": "ajax"}, {"score": 0.00481495049065317, "phrase": "performance_testing"}, {"score": 0.004765173195920904, "phrase": "data_delivery"}, {"score": 0.004691465925553365, "phrase": "ajax_applications."}, {"score": 0.004667149874736771, "phrase": "ajax_applications"}, {"score": 0.004547438494330851, "phrase": "high_user_interactivity"}, {"score": 0.004500414250942443, "phrase": "low_user-perceived_latency"}, {"score": 0.004362226376603478, "phrase": "web_data"}, {"score": 0.004294724955301414, "phrase": "news_headlines"}, {"score": 0.004206338218873218, "phrase": "auction_updates"}, {"score": 0.0036174746598098863, "phrase": "real-time_dynamic_web_data"}, {"score": 0.0034881076466982226, "phrase": "pull_style"}, {"score": 0.0034162643819889054, "phrase": "latest_updates"}, {"score": 0.0032094634756436595, "phrase": "predefined_interval"}, {"score": 0.003015143226706584, "phrase": "push_style"}, {"score": 0.002803213985198645, "phrase": "server_side"}, {"score": 0.002360607691114015, "phrase": "different_ajax_applications"}, {"score": 0.0021049977753042253, "phrase": "different_web-based_data_delivery_approaches"}], "paper_keywords": ["Performance testing", " Ajax", " Web data delivery", " Comet", " Push/pull", " Empirical study"], "paper_abstract": "AJAX applications are designed to have high user interactivity and low user-perceived latency. Real-time dynamic web data such as news headlines, stock tickers, and auction updates need to be propagated to the users as soon as possible. However, AJAX Still suffers from the limitations of the Web's request/response architecture which prevents servers from pushing real-time dynamic web data. Such applications usually use a pull style to obtain the latest updates, where the client actively requests the changes based on a predefined interval. It is possible to overcome this limitation by adopting a push style of interaction where the server broadcasts data when a change occurs on the server side. Both these options have their own trade-offs. This paper first introduces the characteristics of both pull and push approaches. It then presents the design and implementation of our distributed test framework, called CHIRON, where different AJAX applications based on each approach can be automatically tested on. Finally, we present and discuss the results of our empirical study comparing different web-based data delivery approaches.", "paper_title": "PERFORMANCE TESTING OF DATA DELIVERY TECHNIQUES FOR AJAX APPLICATIONS", "paper_id": "WOS:000271492400002"}