{"auto_keywords": [{"score": 0.049596205816074275, "phrase": "connectivity_monitoring"}, {"score": 0.00481495049065317, "phrase": "wireless_sensor_networks"}, {"score": 0.004670722261414736, "phrase": "practical_deployment"}, {"score": 0.004623608221548592, "phrase": "wireless_sensor_network"}, {"score": 0.00441738161338662, "phrase": "performance_bottleneck"}, {"score": 0.004306795240631196, "phrase": "network_connectivity"}, {"score": 0.004073113268289532, "phrase": "flexible_and_efficient_connectivity_monitoring_algorithm"}, {"score": 0.0038325685550319863, "phrase": "divide-and-conquer_manner"}, {"score": 0.003736567662016446, "phrase": "hop_vector_distance"}, {"score": 0.0036615231801541766, "phrase": "bloom"}, {"score": 0.003462704420080129, "phrase": "different_combinations"}, {"score": 0.0033759367489122716, "phrase": "set_sizes"}, {"score": 0.0032088487124106936, "phrase": "maximal_compression"}, {"score": 0.00317643367669255, "phrase": "neighborhood_information"}, {"score": 0.00309681702203087, "phrase": "large_networks"}, {"score": 0.0029137604783116065, "phrase": "medium_size_network"}, {"score": 0.002741496092047472, "phrase": "tinyos"}, {"score": 0.0025146979283050923, "phrase": "node_failure_detection"}, {"score": 0.002248755794042486, "phrase": "communication_cost"}, {"score": 0.00217017119491777, "phrase": "traditional_data_collection_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Connectivity", " Hashing", " Bloom filter"], "paper_abstract": "Connectivity monitoring is useful in practical deployment of wireless sensor network. In order to understand the behavior and performance bottleneck, knowledge of the network connectivity is crucial. In this paper, we propose a flexible and efficient connectivity monitoring algorithm ((HCM)-C-2) that has three components and operates in a divide-and-conquer manner. The components include hop vector distance based filtering, Bloom filters and signature hashing and are designed to work with different combinations of network and neighbor set sizes. In simulation, communication cost reduction of (HCM)-C-2 compare to maximal compression of neighborhood information varies from 65% to 85% for large networks (>1000 nodes) and from 40% to 70% for a medium size network (a few hundred nodes). We have also implemented the algorithm in TinyOS and evaluated its performance on a testbed with 34 motes. Lastly, we study the problem of node failure detection - a simple application of connectivity monitoring. We show that by combining (HCM)-C-2 with the concept of dominating set, the communication cost can be drastically reduced compare to traditional data collection method. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Connectivity monitoring in wireless sensor networks", "paper_id": "WOS:000208188400008"}