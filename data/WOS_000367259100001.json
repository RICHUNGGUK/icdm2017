{"auto_keywords": [{"score": 0.04869658238235114, "phrase": "resilience_overheads"}, {"score": 0.03999112294971068, "phrase": "program_accuracy"}, {"score": 0.03335306997705366, "phrase": "declarative_resilience"}, {"score": 0.00481495049065317, "phrase": "cross-layer_multicore"}, {"score": 0.0047310525657970615, "phrase": "tradeoff_program_accuracy"}, {"score": 0.0045143706249204905, "phrase": "soft-error_perturbations"}, {"score": 0.004307569753106432, "phrase": "high_coverage"}, {"score": 0.0035915423738916256, "phrase": "soft-error_free_outcome"}, {"score": 0.0034068225125064586, "phrase": "processor_efficiency"}, {"score": 0.0030833537429977797, "phrase": "resilience_schemes"}, {"score": 0.002994178996584381, "phrase": "non-crucial_code"}, {"score": 0.002924694271730544, "phrase": "program_correctness"}, {"score": 0.0028568174308720167, "phrase": "application_level"}, {"score": 0.0028234703730349916, "phrase": "crucial_and_non-crucial_code"}, {"score": 0.002693919110230191, "phrase": "program_outcome"}, {"score": 0.002600661525224505, "phrase": "software_support"}, {"score": 0.002555247330102505, "phrase": "efficient_resilience"}, {"score": 0.0023953929817357882, "phrase": "worst-case_scenario"}, {"score": 0.002353554841514325, "phrase": "soft-error_strike"}, {"score": 0.002326068563512387, "phrase": "non-crucial_code_execution"}, {"score": 0.0022455164874830777, "phrase": "multithreaded_benchmarks"}, {"score": 0.002193367454830741, "phrase": "completion_time"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_hardware_resilience_scheme"}], "paper_keywords": ["Resilience", " soft-errors", " program accuracy", " multicores"], "paper_abstract": "To protect multicores from soft-error perturbations, resiliency schemes have been developed with high coverage but high power/performance overheads (similar to 2x). We observe that not all soft-errors affect program correctness, some soft-errors only affect program accuracy, i.e., the program completes with certain acceptable deviations from soft-error free outcome. Thus, it is practical to improve processor efficiency by trading off resilience overheads with program accuracy. We propose the idea of declarative resilience that selectively applies resilience schemes to both crucial and non-crucial code, while ensuring program correctness. At the application level, crucial and non-crucial code is identified based on its impact on the program outcome. The hardware collaborates with software support to enable efficient resilience with 100 percent soft-error coverage. Only program accuracy is compromised in the worst-case scenario of a soft-error strike during non-crucial code execution. For a set of multithreaded benchmarks, declarative resilience improves completion time by an average of 21 percent over state-of-the-art hardware resilience scheme that protects all executed code. Its performance overhead is similar to 1.38x over a multicore that does not support resilience.", "paper_title": "A Cross-Layer Multicore Architecture to Tradeoff Program Accuracy and Resilience Overheads", "paper_id": "WOS:000367259100001"}