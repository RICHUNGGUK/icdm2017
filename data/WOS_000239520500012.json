{"auto_keywords": [{"score": 0.049675053299362525, "phrase": "software_components"}, {"score": 0.00481495049065317, "phrase": "distributed_black_boxes"}, {"score": 0.004694092086199672, "phrase": "interesting_alternative"}, {"score": 0.004518442937844318, "phrase": "core_idea"}, {"score": 0.003813669883040509, "phrase": "peculiar_use"}, {"score": 0.003459191419478298, "phrase": "component-oriented_approach"}, {"score": 0.0032184697893776052, "phrase": "black_box"}, {"score": 0.003150900886669123, "phrase": "significant_difference"}, {"score": 0.0029565620771207003, "phrase": "supervision_service"}, {"score": 0.0028822153400215973, "phrase": "main_features"}, {"score": 0.002762423953243486, "phrase": "instrumentation_protocol"}, {"score": 0.002570064617803693, "phrase": "instrument_components"}, {"score": 0.002421726275597666, "phrase": "simple_coupling"}, {"score": 0.002391067964886602, "phrase": "component's_internal_control"}, {"score": 0.0022434880661725493, "phrase": "user-specified_criteria"}], "paper_keywords": [""], "paper_abstract": "Software components bring in an interesting alternative to the traditional, centralized, approach to software development. The core idea is indeed to enable the (end) user to build and customize his own application, by assembling pre-existing (\"off the shelf\") components. However, picking predefined, off-the-shelf components raises the question of the suitability of these components to a peculiar use. In this setting, the ability to supervise and adapt components appears to be crucial, in order to make the component-oriented approach to software design really effective. The fact that a component is and must remain a black box for its clients makes a significant difference as regards instrumentation, and thus supervision of components. This paper introduces a supervision service fitted for software components. The main features of this service are that: it proposes an instrumentation protocol that keeps the opacity of components, with respect to their implementation, whilst it allows to instrument components independently from their design. it facilitates the supervision of components by providing a simple coupling between the component's internal control, and the control provided by the user of the component, based on user-specified criteria. This paper motivates the interest of such a supervision service, outlines its implementation, and illustrates its use.", "paper_title": "Supervising distributed black boxes", "paper_id": "WOS:000239520500012"}