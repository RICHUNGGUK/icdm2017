{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "deformable_templates"}, {"score": 0.003978866233891427, "phrase": "valid_solution"}, {"score": 0.0033175095965171674, "phrase": "existing_specialized_solutions"}, {"score": 0.0031990183472675377, "phrase": "general_layout_problem"}, {"score": 0.0031129269142224194, "phrase": "important_constraints"}, {"score": 0.003056819704624705, "phrase": "admissible_template_deformations"}, {"score": 0.0028682668647074397, "phrase": "layout_algorithm"}, {"score": 0.0025951294037626174, "phrase": "approximate_template_positions"}, {"score": 0.0022434880661725493, "phrase": "large_class"}, {"score": 0.0021049977753042253, "phrase": "urban_layouts"}], "paper_keywords": ["tiling", " pattern synthesis", " quadrilateral meshes"], "paper_abstract": "In this paper, we tackle the problem of tiling a domain with a set of deformable templates. A valid solution to this problem completely covers the domain with templates such that the templates do not overlap. We generalize existing specialized solutions and formulate a general layout problem by modeling important constraints and admissible template deformations. Our main idea is to break the layout algorithm into two steps: a discrete step to lay out the approximate template positions and a continuous step to refine the template shapes. Our approach is suitable for a large class of applications, including floorplans, urban layouts, and arts and design.", "paper_title": "Computing Layouts with Deformable Templates", "paper_id": "WOS:000340000100066"}