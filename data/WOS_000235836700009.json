{"auto_keywords": [{"score": 0.026382366923966793, "phrase": "szymanski"}, {"score": 0.00481495049065317, "phrase": "parameterized_verification"}, {"score": 0.0046797114400479135, "phrase": "computer_systems"}, {"score": 0.004515967518891287, "phrase": "parameterized_systems"}, {"score": 0.004296264970612285, "phrase": "well-known_examples"}, {"score": 0.004205395707787349, "phrase": "cache_coherence_protocols"}, {"score": 0.004145882022189891, "phrase": "mutual_exclusion_protocols"}, {"score": 0.004058180509184539, "phrase": "unbounded_parameter"}, {"score": 0.003916098498242888, "phrase": "concurrent_processes"}, {"score": 0.0035949949979695063, "phrase": "environment_abstraction"}, {"score": 0.0032766780632972363, "phrase": "predicate_abstraction"}, {"score": 0.0031845067058084583, "phrase": "counter_abstraction"}, {"score": 0.003029382820031577, "phrase": "concurrent_parameterized_systems"}, {"score": 0.002986461855862617, "phrase": "unbounded_variables"}, {"score": 0.0029441472095672397, "phrase": "precise_abstract_finite_state_transition_systems"}, {"score": 0.0028006988338192375, "phrase": "finite_state_model_checker"}, {"score": 0.0025525322651112365, "phrase": "liveness_properties"}, {"score": 0.002516350372379076, "phrase": "lamport's_bakery_algorithm"}, {"score": 0.0022287497627555895, "phrase": "first_time"}, {"score": 0.0021049977753042253, "phrase": "bakery_algorithm"}], "paper_keywords": [""], "paper_abstract": "Many aspects of computer systems are naturally modeled as parameterized systems which renders their automatic verification difficult. In well-known examples such as cache coherence protocols and mutual exclusion protocols, the unbounded parameter is the number of concurrent processes which run the same distributed algorithm. In this paper, we introduce environment abstraction as a tool for the verification of such concurrent parameterized systems. Environment abstraction enriches predicate abstraction by ideas from counter abstraction; it enables us to reduce concurrent parameterized systems with unbounded variables to precise abstract finite state transition systems which can be verified by a finite state model checker. We demonstrate the feasibility of our approach by verifying the safety and liveness properties of Lamport's bakery algorithm and Szymanski's mutual exclusion algorithm. To the best of our knowledge, this is the first time both safety and liveness properties of the bakery algorithm have been verified at this level of automation.", "paper_title": "Environment abstraction for parameterized verification", "paper_id": "WOS:000235836700009"}