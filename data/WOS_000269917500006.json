{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "business_processes"}, {"score": 0.004501578643090429, "phrase": "existing_works"}, {"score": 0.004177149334239669, "phrase": "compensation_constructs"}, {"score": 0.0040691889755318155, "phrase": "long_running_business_transactions"}, {"score": 0.00403885675788806, "phrase": "fully_programmable_fault"}, {"score": 0.004008749730113699, "phrase": "compensation_handling_mechanism"}, {"score": 0.003978866233891427, "phrase": "web_service_area"}, {"score": 0.003949204622915113, "phrase": "scope-based_compensation"}, {"score": 0.0037899595175206143, "phrase": "main_purpose"}, {"score": 0.0036781781340563748, "phrase": "semi-automatized_framework"}, {"score": 0.003583067515485422, "phrase": "business_analysts"}, {"score": 0.003516635512391528, "phrase": "simple_specification_language"}, {"score": 0.0032507647824680684, "phrase": "concurrent_and_modular_fashion"}, {"score": 0.003214455466823939, "phrase": "associated_programs"}, {"score": 0.0030388841099720843, "phrase": "appropriate_language"}, {"score": 0.002665511985052972, "phrase": "unifying_computer_tool"}, {"score": 0.002606264765409507, "phrase": "similar_approaches"}, {"score": 0.0025388043498945066, "phrase": "bpmn"}, {"score": 0.002436289099444074, "phrase": "imposed_behavioural_conditions"}, {"score": 0.002418099158357658, "phrase": "petri_nets"}, {"score": 0.0023031224517224757, "phrase": "intermediate_semantics"}, {"score": 0.0022101055924375725, "phrase": "appropriate_way"}, {"score": 0.0021049977753042253, "phrase": "case_studies"}], "paper_keywords": ["Business process", " Unifying computer tool", " Specification", " Verification"], "paper_abstract": "Both specification and verification of business processes are gaining more and more attention in the field. Most of the existing works in the last years are dealing with important, yet very specialized, issues. Among these, we can enumerate compensation constructs to cope with exceptions generated by long running business transactions, fully programmable fault and compensation handling mechanism, web service area, scope-based compensation and shared-labels for synchronization, and so on. The main purpose of this paper is to present a semi-automatized framework to describe and analyse business processes. Business analysts can now use a simple specification language (e.g., BPMN [Obj06]) to describe any type of activity in a company, in a concurrent and modular fashion. The associated programs (e.g., BPDs [Obj06]) have to be executed in an appropriate language (e.g., BPEL4WS [ACD(+)03]). Much more, they have to be confirmed to be sound, via some prescribed (a priori) conditions. We suggest how all the issues can be embedded in a unifying computer tool. We link our work with similar approaches and we justify our particular choices (besides BPMN and BPD): the TLA+ language for expressing the imposed behavioural conditions and Petri Nets ([EB87], [EB88]) to describe an intermediate semantics. In fact, we want to manage in an appropriate way the general relationship diagram (Fig. 1). Examples and case studies are provided.", "paper_title": "A rigorous methodology for specification and verification of business processes", "paper_id": "WOS:000269917500006"}