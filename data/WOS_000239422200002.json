{"auto_keywords": [{"score": 0.03498048027388705, "phrase": "utp"}, {"score": 0.004814951920928112, "phrase": "utp."}, {"score": 0.0044870272550540415, "phrase": "object-oriented_programming_concepts"}, {"score": 0.004266736689986825, "phrase": "java"}, {"score": 0.0029973957125353306, "phrase": "higher-order_procedures"}, {"score": 0.002907992115184249, "phrase": "distinguishing_feature"}, {"score": 0.002214048743052355, "phrase": "integrated_languages"}], "paper_keywords": [""], "paper_abstract": "In this paper, we study object-oriented programming concepts present in languages like Java and C++ in the framework of the Unifying Theories of Programming (UTP). This work shows how subtyping, data inheritance, (mutually) recursive methods, and dynamic binding can be described in the UTP by combining and extending the theories of designs and higher-order procedures. A distinguishing feature of our approach is modularity: following the style of the UTP, we deal with each concept in isolation; this makes our theory convenient to model integrated languages that include constructs from several paradigms.", "paper_title": "Object-orientation in the UTP", "paper_id": "WOS:000239422200002"}