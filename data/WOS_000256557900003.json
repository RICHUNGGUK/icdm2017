{"auto_keywords": [{"score": 0.03874834581291972, "phrase": "search_strategy"}, {"score": 0.004815315858763141, "phrase": "distributed"}, {"score": 0.004763785973620115, "phrase": "network_intruders"}, {"score": 0.004515967518891287, "phrase": "powerful_and_hostile_software_agent"}, {"score": 0.004311598785718415, "phrase": "software_agents"}, {"score": 0.004116440453049531, "phrase": "existing_solutions"}, {"score": 0.0039723268236794935, "phrase": "serious_drawback"}, {"score": 0.003846926701870193, "phrase": "global_synchronization_mechanism"}, {"score": 0.003531474887552889, "phrase": "entire_topology"}, {"score": 0.00335950642866031, "phrase": "centralized_mechanism"}, {"score": 0.0030402088074201793, "phrase": "distributed_setting"}, {"score": 0.002986461855862617, "phrase": "distributed_protocol"}, {"score": 0.0029336622847544857, "phrase": "logarithmic_size_memory"}, {"score": 0.0028511121935559072, "phrase": "fully_decentralized_manner"}, {"score": 0.002525347599743456, "phrase": "asynchronous_environment"}, {"score": 0.0024630345285372958, "phrase": "necessary_synchronization_mechanism"}, {"score": 0.0024368006923629476, "phrase": "decentralized_manner"}, {"score": 0.002359759876402679, "phrase": "connected_strategy"}, {"score": 0.0022933216359142736, "phrase": "minimum_number"}, {"score": 0.0022050057829960694, "phrase": "connected_way"}, {"score": 0.002150580119047236, "phrase": "centralized_and_synchronous_setting"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["graph searching", " distributed algorithm", " network security"], "paper_abstract": "Graph searching is one of the most popular tools for analyzing the chase for a powerful and hostile software agent (called the \"intruder\"), by a set of software agents (called the \"searchers\") in a network. The existing solutions for the graph searching problem suffer however from a serious drawback: they are mostly centralized and assume a global synchronization mechanism for the searchers. In particular: (1) the search strategy for every network is computed based on the knowledge of the entire topology of the network, and (2) the moves of the searchers are controlled by a centralized mechanism that decides at every step which searcher has to move, and what movement it has to perform. This paper addresses the graph searching problem in a distributed setting. We describe a distributed protocol that enables searchers with logarithmic size memory to clear any network, in a fully decentralized manner. The search strategy for the network in which the searchers are launched is computed online by the searchers themselves without knowing the topology of the network in advance. It performs in an asynchronous environment, i.e., it implements the necessary synchronization mechanism in a decentralized manner. In every network, our protocol performs a connected strategy using at most k + 1 searchers, where k is the minimum number of searchers required to clear the network in a monotone connected way using a strategy computed in the centralized and synchronous setting. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Distributed chasing of network intruders", "paper_id": "WOS:000256557900003"}