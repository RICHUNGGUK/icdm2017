{"auto_keywords": [{"score": 0.048239757080509704, "phrase": "adaptable_processes"}, {"score": 0.00481495049065317, "phrase": "dynamic_updates"}, {"score": 0.004777392826700429, "phrase": "service_composition"}, {"score": 0.004281202319048493, "phrase": "dynamic_process_evolution"}, {"score": 0.0041981583430961734, "phrase": "direct_ways"}, {"score": 0.004068611852912931, "phrase": "running_processes"}, {"score": 0.0038969619124903884, "phrase": "adaptation_capabilities"}, {"score": 0.0036600862989330106, "phrase": "dynamic_update"}, {"score": 0.003547084456662448, "phrase": "dynamic_and_static_topologies"}, {"score": 0.0034510635632071978, "phrase": "different_evolvability_patterns"}, {"score": 0.003424107910734022, "phrase": "concurrent_processes"}, {"score": 0.003357633232360232, "phrase": "core_calculus"}, {"score": 0.0032924448113309797, "phrase": "verification_problems"}, {"score": 0.003203294948113915, "phrase": "specific_properties"}, {"score": 0.0031658283119347396, "phrase": "error_occurrence"}, {"score": 0.0029849474387154827, "phrase": "simple_yet_expressive_temporal_logic"}, {"score": 0.002738131487658495, "phrase": "distributed_adaptability"}, {"score": 0.0026019646284747024, "phrase": "dynamic_distributed_updates"}, {"score": 0.002551409948440577, "phrase": "protocol_participants"}, {"score": 0.00238674051726235, "phrase": "behavioural_contracts"}, {"score": 0.0023680783509308525, "phrase": "multiparty_interactions"}], "paper_keywords": [""], "paper_abstract": "We survey our results about verification of adaptable processes. We present adaptable processes as a way of overcoming the limitations that process calculi have for describing patterns of dynamic process evolution. Such patterns rely on direct ways of controlling the behavior and location of running processes, and so they are at the heart of the adaptation capabilities present in many modern concurrent systems. Adaptable processes have named scopes and are sensible to actions of dynamic update at runtime; this allows to express dynamic and static topologies of adaptable processes as well as different evolvability patterns for concurrent processes. We introduce a core calculus of adaptable processes and consider verification problems for them: first based on specific properties related to error occurrence, that we call bounded and eventual adaptation, and then by considering a simple yet expressive temporal logic over adaptable processes. We provide (un)decidability results of such verification problems over adaptable processes considering the spectrum of topologies/evolvability patterns introduced. We then consider distributed adaptability, where a process can update part of a protocol by performing dynamic distributed updates over a set of protocol participants. Dynamic updates in this context are presented as an extension of our work on choreographies and behavioural contracts in multiparty interactions. We show how update mechanisms considered for adaptable processes can be used to extend the theory of choreography and orchestration/contracts, allowing them to be modified at run-time by internal (self-adaptation) or external intervention.", "paper_title": "Towards Dynamic Updates in Service Composition", "paper_id": "WOS:000367350600002"}