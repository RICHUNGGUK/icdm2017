{"auto_keywords": [{"score": 0.03471106580504896, "phrase": "business_process"}, {"score": 0.00481495049065317, "phrase": "change_patterns."}, {"score": 0.004645057834614705, "phrase": "business_processes"}, {"score": 0.004546000131069232, "phrase": "dynamic_business_environment"}, {"score": 0.004322967486451877, "phrase": "process_changes"}, {"score": 0.0041703614123283165, "phrase": "proper_version_management_method"}, {"score": 0.004023120753104693, "phrase": "traditional_delta_method"}, {"score": 0.003965684670332574, "phrase": "business_process_version_management"}, {"score": 0.003798231095121328, "phrase": "structural_business_process_changes"}, {"score": 0.0036640806940633373, "phrase": "delta_method"}, {"score": 0.0035346515636097533, "phrase": "flexible_version_execution_mechanism"}, {"score": 0.003361069456060196, "phrase": "multiple_coexisting_versions"}, {"score": 0.0030830390264125923, "phrase": "new_process_version_management_method"}, {"score": 0.0030171910207671205, "phrase": "process_change_patterns"}, {"score": 0.002952745241052452, "phrase": "version_stamp_method"}, {"score": 0.0028689475587958917, "phrase": "business_process_change_patterns"}, {"score": 0.0026889720516076205, "phrase": "proposed_version_management_method"}, {"score": 0.0025752890978323873, "phrase": "change_patterns"}, {"score": 0.0025202582748972122, "phrase": "example_scenario"}, {"score": 0.0024842242921857705, "phrase": "process_version_management"}, {"score": 0.002262209824105154, "phrase": "proposed_method"}, {"score": 0.0022138542785562444, "phrase": "bpm_systems"}, {"score": 0.0021049977753042253, "phrase": "dynamic_situations"}], "paper_keywords": ["Version management", " BPM", " Change pattern", " Version stamp"], "paper_abstract": "In order to manage business processes in a dynamic business environment, it is required to manage process changes effectively by incorporating a proper version management method. However, the traditional delta method for business process version management cannot cope flexibly with structural business process changes. Also, the delta method does not provide a flexible version execution mechanism such as a method for handling multiple coexisting versions of a business process. In this paper, we propose a new process version management method based on process change patterns and the version stamp method. We present business process change patterns which occur frequently, and explain how the proposed version management method is executed based on these change patterns. An example scenario of process version management which is applied to our method is included. We expect that the proposed method integrated with BPM systems would enable organizations to deal with dynamic situations and business process changes more flexibly.", "paper_title": "BUSINESS PROCESS VERSION MANAGEMENT BASED ON PROCESS CHANGE PATTERNS", "paper_id": "WOS:000275222300013"}