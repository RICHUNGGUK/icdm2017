{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "non-functional_properties"}, {"score": 0.044931050174649705, "phrase": "component-based_software_engineering"}, {"score": 0.02405348439102675, "phrase": "working_sessions"}, {"score": 0.0047277417909824745, "phrase": "software_-_nfc."}, {"score": 0.004693300099911199, "phrase": "reliable_software"}, {"score": 0.004221072004655573, "phrase": "important_paradigm"}, {"score": 0.00385214804128572, "phrase": "lower_complexity"}, {"score": 0.0037684961730030235, "phrase": "nfc_series"}, {"score": 0.0035934073774126856, "phrase": "non-functional_property_expression"}, {"score": 0.0034139056533151, "phrase": "best_techniques"}, {"score": 0.003315374849824563, "phrase": "based_approach"}, {"score": 0.0032433414042726356, "phrase": "semantic_issues"}, {"score": 0.0031845067058084583, "phrase": "language_definition"}, {"score": 0.0030700099570048346, "phrase": "analysis_algorithms"}, {"score": 0.0030476078950483158, "phrase": "mda-based_approaches"}, {"score": 0.002992313172550772, "phrase": "refinement_steps"}, {"score": 0.002832359116458113, "phrase": "software_development_process"}, {"score": 0.0025098414374397308, "phrase": "ongoing_solutions"}, {"score": 0.0023843376332011936, "phrase": "morning_session"}, {"score": 0.0021676351850669017, "phrase": "morning_discussions"}], "paper_keywords": [""], "paper_abstract": "Developing reliable software is a complex, daunting, and error-prone task. Many researchers are interested in improving support for developers creating such software. Component-based software engineering has emerged as an important paradigm for handling complexity. In addition, using models to raise the level of abstraction when reasoning about systems, is another technique to lower complexity. The goal of the NfC series of workshops is to look at issues related to the integration of non-functional property expression, evaluation, and prediction in the context of component-based software engineering and find the best techniques to deal with non-functional properties in a model based approach. Approaches need to include semantic issues, questions of modeling language definition, and also support for automation, such as analysis algorithms, MDA-based approaches, and tool-support for refinement steps. Since models are only really meaningful if used in the context of a software development process, the workshop also welcomes work in this area. The aim of the 2005 NfC workshop was to bring together practitioners and academics that are currently working with these topics and highlight the ongoing solutions and problems still remaining. The 2005 NfC workshop was organized as two half-day sessions: The morning session was dedicated to presentations and discussion of papers, followed in the afternoon by working sessions. The topics of the working sessions were derived from the morning discussions, and from topics discussed in the 2004 NfC workshop.", "paper_title": "Workshop on models for non-functional properties of component-based software - NfC", "paper_id": "WOS:000235807000022"}