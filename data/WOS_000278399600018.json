{"auto_keywords": [{"score": 0.026419155679563232, "phrase": "alternative_service_discovery"}, {"score": 0.00481495049065317, "phrase": "service_layering_for_facilitating_dynamic_service_composition"}, {"score": 0.004228577663320847, "phrase": "system_design_paradigm"}, {"score": 0.0039626308903511764, "phrase": "soa-based_service_abstraction"}, {"score": 0.0037797419108291227, "phrase": "service_modeling"}, {"score": 0.003735349093835257, "phrase": "soa-based_systems"}, {"score": 0.003500313767208306, "phrase": "orchestration_layers"}, {"score": 0.0034185505275141077, "phrase": "service_modeling_techniques"}, {"score": 0.0033784277017101837, "phrase": "soa"}, {"score": 0.0032223742018434856, "phrase": "ubiquitous_computing_environment"}, {"score": 0.0030017207229983385, "phrase": "run-time_context"}, {"score": 0.002846175473457555, "phrase": "service_layer"}, {"score": 0.0027307746993761035, "phrase": "computing_goal"}, {"score": 0.0026986685585382347, "phrase": "abstract_description"}, {"score": 0.0025587867729949037, "phrase": "layered_service_abstraction"}, {"score": 0.0025137856138000014, "phrase": "dynamic_service_composition"}, {"score": 0.0023415390666563177, "phrase": "proposed_metaservice"}, {"score": 0.0021682027434117095, "phrase": "none-layered_services"}, {"score": 0.0021049977753042253, "phrase": "binding_time"}], "paper_keywords": ["service-oriented architecture", " ubiquitous computing", " community computing", " metaservice", " service ontology", " service modeling", " dynamic service composition"], "paper_abstract": "SOA (Service-Oriented Architecture) is a methodology that is gaining popularity as a system design paradigm. In this paper, we propose metaservice as a SOA-based service abstraction for ubiquitous computing. The key to service modeling of SOA-based systems is in classifying services into business, application, and orchestration layers. However, service modeling techniques for SOA cannot be directly applied to a ubiquitous computing environment, which is dynamic, autonomous, and largely affected by run-time context. We have mainly focused on establishing the service layer to allow users to specify the computing goal using abstract description, detailed description, or both. The layered service abstraction also supports dynamic service composition and alternative service discovery to achieve the goal. Experiments show that the proposed metaservice provides a 49%-81% improvement in completing the execution of services over composition using none-layered services and a 30%-47% reduction in binding time by facilitating alternative service discovery.", "paper_title": "SOA-based Service Layering for Facilitating Dynamic Service Composition and Alternative Service Discovery", "paper_id": "WOS:000278399600018"}