{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mismatching_behavioural_interfaces"}, {"score": 0.004751972849082626, "phrase": "software_entities"}, {"score": 0.004674402456361649, "phrase": "web_services"}, {"score": 0.0046437283535486545, "phrase": "composition_issues"}, {"score": 0.00436213603647063, "phrase": "different_interoperability_levels"}, {"score": 0.004179328666330398, "phrase": "behavioural_level"}, {"score": 0.003977858136481356, "phrase": "difficult_task"}, {"score": 0.0038616499489536123, "phrase": "behavioural_mismatches"}, {"score": 0.0038110933504990683, "phrase": "fixed_description"}, {"score": 0.0034981720122414153, "phrase": "run-time_behaviour"}, {"score": 0.003384754649268796, "phrase": "pervasive_systems"}, {"score": 0.0033075503163659055, "phrase": "specific_service"}, {"score": 0.00327500240690856, "phrase": "new_communication_channels"}, {"score": 0.0032002934215958068, "phrase": "special_interest"}, {"score": 0.003168797616694096, "phrase": "private_interaction"}, {"score": 0.003035847903759329, "phrase": "behavioural_model"}, {"score": 0.002966578246443101, "phrase": "behavioural_interfaces"}, {"score": 0.0028703465154343373, "phrase": "new_channels"}, {"score": 0.0028234043335210895, "phrase": "concurrent_behaviours"}, {"score": 0.0025913692304671675, "phrase": "costly_generation"}, {"score": 0.002574328937802055, "phrase": "full_descriptions"}, {"score": 0.0025322155884631384, "phrase": "main_contribution"}, {"score": 0.002482585701725093, "phrase": "adaptation_engine"}, {"score": 0.002450039362463466, "phrase": "dynamic_creation"}, {"score": 0.002386218074955624, "phrase": "composition_specification"}, {"score": 0.002278496007505835, "phrase": "prototype_tool"}, {"score": 0.0022338277339064155, "phrase": "system_designs"}, {"score": 0.0022191333270475087, "phrase": "aspect-oriented_programming"}, {"score": 0.0021049977753042253, "phrase": "real_software_components"}], "paper_keywords": ["Components", " Behavioural Interfaces", " Transition Systems", " Mismatch", " Composition", " Run-Time Adaptation", " Validation", " Aspect-Oriented Programming"], "paper_abstract": "Reuse of software entities such as components or Web services raise composition issues since, most of the time, they present mismatches in their interfaces. These mismatches may appear at different interoperability levels: signature, behaviour, quality of service and semantics. The behavioural level is crucial and behavioural mismatches must all be corrected, although this is a difficult task. So far, most adaptation approaches which deal with behavioural mismatches work on a fixed description of components where all ports involved in their interfaces are known at design-time. Here, we focus on systems in which composition is affected by run-time behaviour of the system. This is the case in pervasive systems where a client interacts with a specific service by using new communication channels dynamically created. These are of special interest to allow private interaction between several entities. In this article, we de. ne a behavioural model inspired by the pi-calculus to specify behavioural interfaces of components. Our model is particularly suitable for creating new channels dynamically, also taking concurrent behaviours into account. The dynamic nature of the systems we are dealing with obliges to apply adaptation at run-time, avoiding at the same time the costly generation of full descriptions of adaptors. The main contribution of this article is an adaptation engine that allows the dynamic creation of channels and applies at run-time a composition specification built at design-time. All the underlying formal foundations of our proposal have been implemented in a prototype tool that has been applied to system designs. Aspect-Oriented Programming has been studied as well, as a way to implement our engine for further application to real software components.", "paper_title": "Composition and Run-time Adaptation of Mismatching Behavioural Interfaces", "paper_id": "WOS:000261554800004"}