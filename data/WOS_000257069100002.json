{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "quad_trees"}, {"score": 0.04869496857615713, "phrase": "piecewise_functions"}, {"score": 0.004518442937844318, "phrase": "preliminary_design"}, {"score": 0.004409304640026443, "phrase": "constraint_satisfaction_problem"}, {"score": 0.004219427915728969, "phrase": "constraint_filtering_techniques"}, {"score": 0.0041174821422410544, "phrase": "interactive_assistance"}, {"score": 0.003920891569777891, "phrase": "numerical_constraints"}, {"score": 0.003863758357292741, "phrase": "numerical_relations"}, {"score": 0.0037336520904376687, "phrase": "classical_analytical_filtering_techniques"}, {"score": 0.0036792371574197826, "phrase": "interval_arithmetic"}, {"score": 0.0033689650515770554, "phrase": "csp."}, {"score": 0.0031612033120065747, "phrase": "binary_constraints"}, {"score": 0.0028662606272282926, "phrase": "single_numerical_function"}, {"score": 0.0027159094186967247, "phrase": "qt_techniques"}, {"score": 0.002573424607574822, "phrase": "piecewise_function"}, {"score": 0.002498873893632726, "phrase": "numerical_functions"}, {"score": 0.0024264776194357993, "phrase": "first_section"}, {"score": 0.002344655708000408, "phrase": "preliminary_design_problem"}, {"score": 0.002276717177453959, "phrase": "csp_assistance"}, {"score": 0.0022434880661725493, "phrase": "second_section"}, {"score": 0.002178476505453261, "phrase": "qt."}, {"score": 0.002157223877108711, "phrase": "last_section"}, {"score": 0.0021049977753042253, "phrase": "qt_extensions"}], "paper_keywords": ["preliminary design", " knowledge-based system", " constraint satisfaction problem", " quad trees"], "paper_abstract": "This paper deals with aiding preliminary design when considered as a constraint satisfaction problem (CSP). In this case, constraint filtering techniques provide some kind of interactive assistance to the designer. However, some kinds of numerical constraints corresponding with numerical relations cannot be filtered precisely with classical analytical filtering techniques such as interval arithmetic or box-consistency; it is therefore necessary to discretize them in order to include them in the CSP. To this end, quad trees (QT) have been proposed for binary constraints, or 2k trees when more than two variables are considered; but QT assume that a constraint must be defined by a single numerical function. The aim of this paper is to show that QT techniques can be extended when a constraint is defined by a piecewise function or by a set of numerical functions defined on intervals. The first section recalls some basics relevant to the preliminary design problem and the interests of the CSP assistance. The second section presents the principles of the QT. The last section describes our contributions relevant to QT extensions dealing with piecewise functions.", "paper_title": "Aiding design with constraints: an extension of quad trees in order to deal with piecewise functions", "paper_id": "WOS:000257069100002"}