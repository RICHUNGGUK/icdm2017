{"auto_keywords": [{"score": 0.046174914978806235, "phrase": "decoupled_sampling"}, {"score": 0.010612387000973441, "phrase": "graphics_pipelines"}, {"score": 0.00820053553686953, "phrase": "shading_samples"}, {"score": 0.00470862827326028, "phrase": "generalized_approach"}, {"score": 0.004666756595735701, "phrase": "decoupling_shading"}, {"score": 0.004625255533545965, "phrase": "visibility_sampling"}, {"score": 0.004383852039913171, "phrase": "stochastic_supersampling"}, {"score": 0.004306205029641728, "phrase": "defocus_blur"}, {"score": 0.004267896572751978, "phrase": "reduced_shading_cost"}, {"score": 0.0037827603118271757, "phrase": "complex_and_dynamic_mappings"}, {"score": 0.0035532533960012298, "phrase": "adaptive_shading"}, {"score": 0.0034437574674180365, "phrase": "many-to-one_hash"}, {"score": 0.003177392642813126, "phrase": "visibility_samples"}, {"score": 0.0030794433253250476, "phrase": "reyes_rendering_architecture"}, {"score": 0.0030248298759040695, "phrase": "traditional_graphics_pipelines"}, {"score": 0.002931569771634119, "phrase": "micropolygon_vertices"}, {"score": 0.0028539179130824786, "phrase": "geometry_sampling_rate"}, {"score": 0.002803294265656048, "phrase": "reyes"}, {"score": 0.002729029534060092, "phrase": "precise_computation"}, {"score": 0.0025291018422967083, "phrase": "gpu-style_sort-last_fragment_architecture"}, {"score": 0.0024842242921857705, "phrase": "larrabee-style_sort-middle_pipeline"}, {"score": 0.002251227801482381, "phrase": "real_applications"}, {"score": 0.002221192647477371, "phrase": "instrumented_functional_simulator"}, {"score": 0.002181766829493483, "phrase": "high-quality_motion"}, {"score": 0.0021049977753042253, "phrase": "variable_and_adaptive_shading_rates"}], "paper_keywords": ["Algorithms", " Performance", " Antialiasing", " defocus blur", " depth of field", " graphics hardware", " graphics pipeline", " motion blur", " Reyes"], "paper_abstract": "We propose a generalized approach to decoupling shading from visibility sampling in graphics pipelines, which we call decoupled sampling. Decoupled sampling enables stochastic supersampling of motion and defocus blur at reduced shading cost, as well as controllable or adaptive shading rates which trade off shading quality for performance. It can be thought of as a generalization of multisample antialiasing (MSAA) to support complex and dynamic mappings from visibility to shading samples, as introduced by motion and defocus blur and adaptive shading. It works by defining a many-to-one hash from visibility to shading samples, and using a buffer to memoize shading samples and exploit reuse across visibility samples. Decoupled sampling is inspired by the Reyes rendering architecture, but like traditional graphics pipelines, it shades fragments rather than micropolygon vertices, decoupling shading from the geometry sampling rate. Also unlike Reyes, decoupled sampling only shades fragments after precise computation of visibility, reducing overshading. We present extensions of two modern graphics pipelines to support decoupled sampling: a GPU-style sort-last fragment architecture, and a Larrabee-style sort-middle pipeline. We study the architectural implications of decoupled sampling and blur, and derive end-to-end performance estimates on real applications through an instrumented functional simulator. We demonstrate high-quality motion and defocus blur, as well as variable and adaptive shading rates.", "paper_title": "Decoupled Sampling for Graphics Pipelines", "paper_id": "WOS:000290853500002"}