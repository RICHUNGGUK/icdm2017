{"auto_keywords": [{"score": 0.03444175794330928, "phrase": "atom_block"}, {"score": 0.01117450812811004, "phrase": "computation_model"}, {"score": 0.0047761092701293474, "phrase": "multiple_clocks"}, {"score": 0.004737579882204798, "phrase": "today's_distributed_systems"}, {"score": 0.004512814529823301, "phrase": "key_challenges"}, {"score": 0.0043161190928529755, "phrase": "multi-clocked_local_synchronous_component"}, {"score": 0.004094639048362357, "phrase": "single_framework"}, {"score": 0.0037301606780397456, "phrase": "real_system"}, {"score": 0.0035965032173588753, "phrase": "novel_computation_model"}, {"score": 0.003495855671790616, "phrase": "multi-clocked_embedded_system"}, {"score": 0.003453584878128719, "phrase": "synchronous_and_asynchronous_components"}, {"score": 0.0031974502006267163, "phrase": "parallel_mealy_automata"}, {"score": 0.003158776195052182, "phrase": "synchronous_component"}, {"score": 0.0030455297429878873, "phrase": "corresponding_local_control_clock"}, {"score": 0.0028890603352364273, "phrase": "asynchronous_communications"}, {"score": 0.0028195727965553367, "phrase": "data_port_connections"}, {"score": 0.002762941385784905, "phrase": "unified_operational_semantics"}, {"score": 0.002740607717745287, "phrase": "formal_semantics"}, {"score": 0.002526938673434697, "phrase": "efficient_vhdl_code"}, {"score": 0.0024963543716522087, "phrase": "validated_model"}, {"score": 0.00241658945942583, "phrase": "fpga_processor"}, {"score": 0.0023298892270500983, "phrase": "graphical_modeling"}, {"score": 0.002264607102799332, "phrase": "code_generation_toolkit"}, {"score": 0.0021049977753042253, "phrase": "real_train_communication_control"}], "paper_keywords": ["Synchronous and asynchronous fusion system", " computation model", " model validation and implementation"], "paper_abstract": "Today's distributed systems are commonly equipped with both synchronous and asynchronous components controlled with multiple clocks. The key challenges in designing such systems are (1) how to model multi-clocked local synchronous component, local asynchronous component, and asynchronous communication among components in a single framework. (2) how to ensure the correctness of model, and keep consistency between the model and the implementation of real system. In this paper, we propose a novel computation model named GalsBlock for the design of multi-clocked embedded system with both synchronous and asynchronous components. The computation model consists of several hierarchical compound and atom blocks communicating with data port connections. Each atom block can be refined as parallel mealy automata. The synchronous component can be captured in an atom block with the corresponding local control clock while the asynchronous component in an atom block without clock, and the asynchronous communications can be captured in the data port connections among blocks. The unified operational semantics and formal semantics are defined, which can be used for simulation and verification, respectively. Then, we can generate efficient VHDL code from the validated model, which can be synthesized into the FPGA processor for execution directly. We have developed the graphical modeling, simulation, verification, and code generation toolkit to support the computation model, and applied it in the design of a sub-system used in the real train communication control.", "paper_title": "Design of Mixed Synchronous/Asynchronous Systems with Multiple Clocks", "paper_id": "WOS:000358226400013"}