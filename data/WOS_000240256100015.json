{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "capability_calculus"}, {"score": 0.004444921827311577, "phrase": "partial_confluence"}, {"score": 0.00421410521089045, "phrase": "channel-communicating_concurrent_processes"}, {"score": 0.0030595112110658675, "phrase": "previous_approaches"}, {"score": 0.002405853977978678, "phrase": "different_kinds"}, {"score": 0.0022806798371116698, "phrase": "communication_channels"}, {"score": 0.0021049977753042253, "phrase": "shared_reference_cells"}], "paper_keywords": [""], "paper_abstract": "We present a capability calculus for checking partial confluence of channel-communicating concurrent processes. Our approach automatically detects more programs to be partially confluent than previous approaches and is able to handle a mix of different kinds of communication channels, including shared reference cells.", "paper_title": "A capability calculus for concurrency and determinism", "paper_id": "WOS:000240256100015"}