{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high-performance_computing_systems"}, {"score": 0.004466519142879166, "phrase": "higher_failure_rates"}, {"score": 0.004410938507689426, "phrase": "increased_overheads"}, {"score": 0.004195418010131832, "phrase": "practical_viability"}, {"score": 0.004143196873246147, "phrase": "cr_protocols"}, {"score": 0.0040916230716372265, "phrase": "future_systems"}, {"score": 0.0038431888954930083, "phrase": "viable_approach"}, {"score": 0.003771631577951067, "phrase": "checkpoint_data_volumes"}, {"score": 0.0036324746826127997, "phrase": "cr_protocol"}, {"score": 0.003542557455905503, "phrase": "improved_application_performance"}, {"score": 0.0033482708495261864, "phrase": "compression-based_cr_optimization"}, {"score": 0.0031448288291084, "phrase": "improved_compression_algorithms"}, {"score": 0.003066945490483524, "phrase": "even_better_application_performance"}, {"score": 0.0030097975788892896, "phrase": "checkpoint_compression"}, {"score": 0.002493592357827492, "phrase": "checkpoint_data_compression"}, {"score": 0.0024625017739528096, "phrase": "faster_compression_algorithms"}, {"score": 0.0023864566654035924, "phrase": "better_application_performance"}, {"score": 0.0023127544795063263, "phrase": "compression-based_optimizations"}, {"score": 0.0021315842986705485, "phrase": "hardware-based_optimizations"}, {"score": 0.0021049977753042253, "phrase": "software-based_ones"}], "paper_keywords": ["Fault tolerance", " checkpoint", " restart", " checkpoint compression"], "paper_abstract": "As high-performance computing systems continue to increase in size and complexity, higher failure rates and increased overheads for checkpoint/restart (CR) protocols have raised concerns about the practical viability of CR protocols for future systems. Previously, compression has proven to be a viable approach for reducing checkpoint data volumes and, thereby, reducing CR protocol overhead leading to improved application performance. In this article, we further explore compression-based CR optimization by exploring its baseline performance and scaling properties, evaluating whether improved compression algorithms might lead to even better application performance and comparing checkpoint compression against and alongside other software- and hardware-based optimizations. Our results highlights are that: (1) compression is a very viable CR optimization; (2) generic, text-based compression algorithms appear to perform near optimally for checkpoint data compression and faster compression algorithms will not lead to better application performance; (3) compression-based optimizations fare well against and alongside other software-based optimizations; and (4) while hardware-based optimizations outperform software-based ones, they are not as cost effective.", "paper_title": "A checkpoint compression study for high-performance computing systems", "paper_id": "WOS:000362996700001"}