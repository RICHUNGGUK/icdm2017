{"auto_keywords": [{"score": 0.03854524381926725, "phrase": "two-level_prefiltering"}, {"score": 0.029011581695394008, "phrase": "query_profile"}, {"score": 0.00478740563679966, "phrase": "fast_homology_detection"}, {"score": 0.004760017604908536, "phrase": "protein_databases"}, {"score": 0.004612147352416241, "phrase": "fast_pace"}, {"score": 0.00436742595270452, "phrase": "query_sequence"}, {"score": 0.0042928648367867835, "phrase": "huge_database"}, {"score": 0.004256060942428626, "phrase": "well-known_smith-waterman_algorithm"}, {"score": 0.004171402455813099, "phrase": "hidden_markov_models"}, {"score": 0.003961330917648707, "phrase": "distantly_homologous_sequences"}, {"score": 0.0038825121288253435, "phrase": "similar_sequences"}, {"score": 0.0038492126993451337, "phrase": "hidden_markov_model"}, {"score": 0.0037726162825149666, "phrase": "bioinformatics_tool_hhblits"}, {"score": 0.003603193055343792, "phrase": "time-consuming_viterbi_comparisons"}, {"score": 0.0034911335714333507, "phrase": "highly_parallel_architectures"}, {"score": 0.003471135453226184, "phrase": "huge_bandwidth"}, {"score": 0.0033922781038328844, "phrase": "massive_amounts"}, {"score": 0.0031481164109237636, "phrase": "high_memory_bandwidth"}, {"score": 0.0029298852183574304, "phrase": "fpga_size"}, {"score": 0.002838794693359693, "phrase": "fpga"}, {"score": 0.002758273619951683, "phrase": "score_calculation"}, {"score": 0.0027189137945757866, "phrase": "database_sequences"}, {"score": 0.002680114113899346, "phrase": "modified_smith-waterman_scheme"}, {"score": 0.0025014259919355453, "phrase": "memory_bandwidth"}, {"score": 0.0024799423362011582, "phrase": "limiting_factor"}, {"score": 0.0023958326775913165, "phrase": "memory-bound_implementation"}, {"score": 0.002361632539339945, "phrase": "resource-bound_fpga_design"}, {"score": 0.002321234686549485, "phrase": "fpga-based_coprocessor"}, {"score": 0.002301295044886946, "phrase": "hybrid_computing_system"}, {"score": 0.0022104795254900746, "phrase": "sse-based_execution"}, {"score": 0.0021726616502636305, "phrase": "prefiltering_scores"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hybrid architecture", " Heterogeneity", " FPGA", " Convey HC-1", " HHblits"], "paper_abstract": "Protein databases used in research are huge and still grow at a fast pace. Many comparisons need to be done when searching similar (homologous) sequences for a given query sequence in these databases. Comparing a query sequence against all sequences of a huge database using the well-known Smith-Waterman algorithm is very time-consuming. Hidden Markov Models pose an opportunity for reducing the number of entries of a database and also enable to find distantly homologous sequences. Fewer entries are achieved by clustering similar sequences in a Hidden Markov Model. Such an approach is used by the bioinformatics tool HHblits. To further reduce the runtime, HHblits uses two-level prefiltering to reduce the number of time-consuming Viterbi comparisons. Still, prefiltering is very time-consuming. Highly parallel architectures and huge bandwidth are required for processing and transferring the massive amounts of data. In this article, we present an approach exploiting the reconfigurable, hybrid computer architecture Convey HC-1 for migrating the most time-consuming part. The Convey HC-1 with four FPGAs and high memory bandwidth of up to 76.8 GB/s serves as the platform of choice. Other bioinformatics applications have already been successfully supported by the HC-1. Limited by FPGA size only, we present a design that calculates four first-level prefiltering scores per FPGA concurrently, i.e. 16 calculations in total. This score calculation for the query profile against database sequences is done by a modified Smith-Waterman scheme that is internally parallelized 128 times in contrast to the original Streaming 'Single Instruction Multiple Data (SIMD)' Extensions (SSE)-supported implementation where only 16-fold parallelism can be exploited and where memory bandwidth poses the limiting factor. Preloading the query profile, we are able to transform the memory-bound implementation to a compute- and resource-bound FPGA design. We tightly integrated the FPGA-based coprocessor into the hybrid computing system by employing task-parallelism for the two-level prefiltering. Despite much lower clock rates, the FPGAs outperform SSE-based execution for the calculation of the prefiltering scores by a factor of 7.9. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Combined hardware-software multi-parallel prefiltering on the Convey HC-1 for fast homology detection", "paper_id": "WOS:000351561300002"}