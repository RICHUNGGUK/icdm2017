{"auto_keywords": [{"score": 0.029882824601805056, "phrase": "multithreaded_cgra"}, {"score": 0.00481495049065317, "phrase": "recent_industry_trends"}, {"score": 0.004765686919942249, "phrase": "drastic_rise"}, {"score": 0.0046846932351254636, "phrase": "hand-held_embedded_devices"}, {"score": 0.004495854882808791, "phrase": "critical_defense_applications"}, {"score": 0.004226713291503426, "phrase": "battery_life"}, {"score": 0.004070199735165926, "phrase": "power-efficient_embedded_devices"}, {"score": 0.003987275549870311, "phrase": "novel_system_designs"}, {"score": 0.0037484651075873933, "phrase": "power-hungry_computations"}, {"score": 0.0036846952802928, "phrase": "system_designers"}, {"score": 0.0034402448248944434, "phrase": "power-efficient_coprocessor"}, {"score": 0.0032900885091898184, "phrase": "extensive_compiler_support"}, {"score": 0.0032009501549788576, "phrase": "general_purpose_coprocessor"}, {"score": 0.003135679861067472, "phrase": "cgra_structure"}, {"score": 0.0030090929255598485, "phrase": "serious_limitation"}, {"score": 0.002907504959509132, "phrase": "multitasking_processor"}, {"score": 0.002799703831407504, "phrase": "multiple_schedules"}, {"score": 0.002604847103905297, "phrase": "comprehensive_software_scheme"}, {"score": 0.002569294946452846, "phrase": "traditionally_single-threaded_cgra"}, {"score": 0.002482517733720377, "phrase": "power-efficient_accelerator"}, {"score": 0.002465516335722086, "phrase": "multithreaded_embedded_processors"}, {"score": 0.002398664348595521, "phrase": "existing_cgra_mapping_techniques"}, {"score": 0.0021861082519868567, "phrase": "cgra_coprocessor"}, {"score": 0.0021195184368629017, "phrase": "improved_power-efficient_computing"}, {"score": 0.0021049977753042253, "phrase": "modern_multithreaded_embedded_systems"}], "paper_keywords": ["CGRA", " multithreading", " power efficiency", " embedded system", " runtime transformation", " scheduling", " compiler framework"], "paper_abstract": "Recent industry trends show a drastic rise in the use of hand-held embedded devices, from everyday applications to medical (e.g., monitoring devices) and critical defense applications (e.g., sensor nodes). The two key requirements in the design of such devices are their processing capabilities and battery life. There is therefore an urgency to build high-performance and power-efficient embedded devices, inspiring researchers to develop novel system designs for the same. The use of a coprocessor (application-specific hardware) to offload power-hungry computations is gaining favor among system designers to suit their power budgets. We propose the use of CGRAs (Coarse-Grained Reconfigurable Arrays) as a power-efficient coprocessor. Though CGRAs have been widely used for streaming applications, the extensive compiler support required limits its applicability and use as a general purpose coprocessor. In addition, a CGRA structure can efficiently execute only one statically scheduled kernel at a time, which is a serious limitation when used as an accelerator to a multithreaded or multitasking processor. In this work, we envision a multithreaded CGRA where multiple schedules (or kernels) can be executed simultaneously on the CGRA (as a coprocessor). We propose a comprehensive software scheme that transforms the traditionally single-threaded CGRA into a multithreaded coprocessor to be used as a power-efficient accelerator for multithreaded embedded processors. Our software scheme includes (1) a compiler framework that integrates with existing CGRA mapping techniques to prepare kernels for execution on the multithreaded CGRA and (2) a runtime mechanism that dynamically schedules multiple kernels (offloaded from the processor) to execute simultaneously on the CGRA coprocessor. Our multithreaded CGRA coprocessor implementation thus makes it possible to achieve improved power-efficient computing in modern multithreaded embedded systems.", "paper_title": "A Software Scheme for Multithreading on CGRAs", "paper_id": "WOS:000349302200019"}