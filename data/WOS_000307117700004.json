{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "differential_matrix_riccati_equations"}, {"score": 0.00868926893423385, "phrase": "matlab"}, {"score": 0.004775737261349277, "phrase": "gpgpu"}, {"score": 0.0047174990703486505, "phrase": "matlab."}, {"score": 0.004565609517511076, "phrase": "parallel_algorithm"}, {"score": 0.004382591802405206, "phrase": "backward_differentiation_formula_algorithm"}, {"score": 0.0043114466990006334, "phrase": "fixed-point_method"}, {"score": 0.004054745478848129, "phrase": "optimal_control"}, {"score": 0.003556873173040169, "phrase": "modern_graphic_processing_units"}, {"score": 0.003223883109446599, "phrase": "general-purpose_computing"}, {"score": 0.0031975786158658158, "phrase": "graphics_processing_units"}, {"score": 0.003145622361831387, "phrase": "nvidia"}, {"score": 0.0030944828434567966, "phrase": "unified_architecture"}, {"score": 0.0030069962181403487, "phrase": "special_version"}, {"score": 0.0029824560656987855, "phrase": "basic_linear_algebra_subprograms"}, {"score": 0.0029219772700810483, "phrase": "cublas"}, {"score": 0.0027817658627604653, "phrase": "linear_systems"}, {"score": 0.002480154140902474, "phrase": "graphic_card"}, {"score": 0.002220257443705344, "phrase": "cpu._experimental_results"}, {"score": 0.00219311232069446, "phrase": "nvidia_quadro_fx"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["differential matrix Riccati equations (DMREs)", " algebraic matrix Riccati equations (AMRE) fixed point", " GPGU", " MATLAB", " CUBLAS", " systems of linear equations"], "paper_abstract": "In this work, we developed a parallel algorithm to speed up the resolution of differential matrix Riccati equations using a backward differentiation formula algorithm based on a fixed-point method. The role and use of differential matrix Riccati equations is especially important in several applications such as optimal control, filtering, and estimation. In some cases, the problem could be large, and it is interesting to speed it up as much as possible. Recently, modern graphic processing units (GPUs) have been used as a way to improve performance. In this paper, we used an approach based on general-purpose computing on graphics processing units. We used NVIDIA (c)?GPUs with unified architecture. To do this, a special version of basic linear algebra subprograms for GPUs, called CUBLAS, and a package (three different packages were studied) to solve linear systems using GPUs have been used. Moreover, we developed a MATLAB (c)?toolkit to use our implementation from MATLAB in such a way that if the user has a graphic card, the performance of the implementation is improved. If the user does not have such a card, the algorithm can also be run using the machine CPU. Experimental results on a NVIDIA Quadro FX 5800 are shown. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Speeding up solving of differential matrix Riccati equations using GPGPU computing and MATLAB", "paper_id": "WOS:000307117700004"}