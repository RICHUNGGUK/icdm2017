{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "coercive_subtyping"}, {"score": 0.008406833864443443, "phrase": "conservative_extension"}, {"score": 0.006926730966555785, "phrase": "type_theories"}, {"score": 0.004749106104067268, "phrase": "useful_and_powerful_framework"}, {"score": 0.004598933498016774, "phrase": "key_idea"}, {"score": 0.0042928648367867835, "phrase": "new_and_adequate_formulation"}, {"score": 0.0041001740903338834, "phrase": "type_theory_t"}, {"score": 0.003988719758707836, "phrase": "set_c"}, {"score": 0.0039522429946090174, "phrase": "basic_subtyping_judgements"}, {"score": 0.0036721416244816455, "phrase": "definitional_extension"}, {"score": 0.0035887342563437935, "phrase": "intermediate_system"}, {"score": 0.0035395987202335223, "phrase": "star-calculus_t"}, {"score": 0.003349670229755675, "phrase": "coercion_insertions"}, {"score": 0.002723607240517261, "phrase": "technical_problem"}, {"score": 0.002613163083407071, "phrase": "earlier_conservativity_proof"}, {"score": 0.002472822097373027, "phrase": "'ordinary'_notion"}, {"score": 0.0024501740852758505, "phrase": "subtyping_-_subsumptive_subtyping"}, {"score": 0.002318566141177149, "phrase": "canonical_objects"}, {"score": 0.0022347698358650514, "phrase": "improved_implementation"}, {"score": 0.002163930783583212, "phrase": "proof_assistant_plastic"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Coercive subtyping", " Conservativity", " Definitional extension", " Subsumptive subtyping", " Type theory"], "paper_abstract": "Coercive subtyping is a useful and powerful framework of subtyping for type theories. The key idea of coercive subtyping is subtyping as abbreviation. In this paper, we give a new and adequate formulation of T[C], the system that extends a type theory T with coercive subtyping based on a set C of basic subtyping judgements, and show that coercive subtyping is a conservative extension and, in a more general sense, a definitional extension. We introduce an intermediate system, the star-calculus T [C]*, in which the positions that require coercion insertions are marked, and show that T [C]* is a conservative extension of T and that T[C]* is equivalent to T[C]. This makes clear what we mean by coercive subtyping being a conservative extension, on the one hand, and amends a technical problem that has led to a gap in the earlier conservativity proof, on the other. We also compare coercive subtyping with the 'ordinary' notion of subtyping - subsumptive subtyping, and show that the former is adequate for type theories with canonical objects while the latter is not. An improved implementation of coercive subtyping is done in the proof assistant Plastic. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Coercive subtyping: Theory and implementation", "paper_id": "WOS:000314073500002"}