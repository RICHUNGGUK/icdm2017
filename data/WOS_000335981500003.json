{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_controller_synthesis_algorithm"}, {"score": 0.004749646583168342, "phrase": "assume-guarantee_specifications"}, {"score": 0.004466519142879166, "phrase": "safety-mtl_properties"}, {"score": 0.003613899384402803, "phrase": "uppaal-tiga"}, {"score": 0.003540539868937462, "phrase": "novel_translation"}, {"score": 0.0034924598001567944, "phrase": "safety-_and_co-safety-mtl_properties"}, {"score": 0.003284026247389735, "phrase": "buchi_automata"}, {"score": 0.003173636240475185, "phrase": "main_obstacle"}, {"score": 0.0031091858573262265, "phrase": "practical_applicability"}, {"score": 0.003066945490483524, "phrase": "controller_synthesis"}, {"score": 0.003025277245730244, "phrase": "linear-time_specifications"}, {"score": 0.0028838335724864547, "phrase": "chosen_specification_formalism"}, {"score": 0.002767856819656175, "phrase": "complex_behaviors"}, {"score": 0.0027116246112603875, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "analogous_specifications"}], "paper_keywords": [""], "paper_abstract": "In this paper we offer an efficient controller synthesis algorithm for assume-guarantee specifications of the form . Here, are all safety-MTL properties, where the sub-formulas are supposed to specify assumptions of the environment and the sub-formulas are specifying requirements to be guaranteed by the controller. Our synthesis method exploits the engine of Uppaal-Tiga and the novel translation of safety- and co-safety-MTL properties into under-approximating, deterministic timed automata. Our approach avoids determinization of Buchi automata, which is the main obstacle for the practical applicability of controller synthesis for linear-time specifications. The experiments demonstrate that the chosen specification formalism is expressive enough to specify complex behaviors. The proposed approach is sound but not complete. However, it successfully produced solutions for all the experiments. Additionally we compared our tool with Acacia+ and Unbeast, state-of-the-art LTL synthesis tools; and our tool demonstrated better timing results, when we applied both tools to the analogous specifications.", "paper_title": "Efficient controller synthesis for a fragment of MTL0,infinity", "paper_id": "WOS:000335981500003"}