{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hybrid_systems"}, {"score": 0.004747429622531595, "phrase": "constraint_propagation-based_abstraction_refinement"}, {"score": 0.004455061431809975, "phrase": "safety_verification"}, {"score": 0.004392565073466714, "phrase": "nonlinear_hybrid_systems"}, {"score": 0.0042102651938187114, "phrase": "classical_method"}, {"score": 0.004121960535174029, "phrase": "interval_arithmetic"}, {"score": 0.0037868092509097404, "phrase": "rectangular_grid"}, {"score": 0.003578600071301459, "phrase": "abstraction_refinement_framework"}, {"score": 0.0034057975804778293, "phrase": "additional_refinement_step"}, {"score": 0.003334309053314909, "phrase": "interval-constraint_propagation"}, {"score": 0.0031286936417685178, "phrase": "new_grid_elements"}, {"score": 0.0030199761431186434, "phrase": "resulting_method"}, {"score": 0.0029775511937434797, "phrase": "switching_conditions"}, {"score": 0.0029357204796552653, "phrase": "initial_states"}, {"score": 0.0028740705307540343, "phrase": "unsafe_states"}, {"score": 0.0027741761880779535, "phrase": "complex_constraints"}, {"score": 0.0026214978443388653, "phrase": "grid_elements"}, {"score": 0.00232431758517087, "phrase": "well-defined_set"}, {"score": 0.0021654633404434623, "phrase": "constraint_propagation-based_solver"}], "paper_keywords": ["algorithms", " reliability", " verification", " hybrid systems", " intervals", " constraint propagation"], "paper_abstract": "This paper deals with the problem of safety verification of nonlinear hybrid systems. We start from a classical method that uses interval arithmetic to check whether trajectories can move over the boundaries in a rectangular grid. We put this method into an abstraction refinement framework and improve it by developing an additional refinement step that employs interval-constraint propagation to add information to the abstraction without introducing new grid elements. Moreover, the resulting method allows switching conditions, initial states, and unsafe states to be described by complex constraints, instead of sets that correspond to grid elements. Nevertheless, the method can be easily implemented, since it is based on a well-defined set of constraints, on which one can run any constraint propagation-based solver. Tests of such an implementation are promising.", "paper_title": "Safety verification of hybrid systems by constraint propagation-based abstraction refinement", "paper_id": "WOS:000256830000008"}