{"auto_keywords": [{"score": 0.04668746017129422, "phrase": "relational_database"}, {"score": 0.028956380378866334, "phrase": "xml_views"}, {"score": 0.014408676440571434, "phrase": "xml_document"}, {"score": 0.00481495049065317, "phrase": "recursive_xml_views"}, {"score": 0.004721711709176679, "phrase": "xml_publishing"}, {"score": 0.004630270043271386, "phrase": "emerging_technique"}, {"score": 0.004219427915728972, "phrase": "heterogeneous_applications"}, {"score": 0.004037694641919865, "phrase": "source_relational_database"}, {"score": 0.0036792921346181034, "phrase": "xml"}, {"score": 0.0035553221885904467, "phrase": "new_optimization_techniques"}, {"score": 0.003385480888810982, "phrase": "xpath_expression"}, {"score": 0.003319830633865628, "phrase": "complex_filters"}, {"score": 0.0032714270066711835, "phrase": "main_novelties"}, {"score": 0.003099888654615187, "phrase": "space-efficient_relational_encoding"}, {"score": 0.002880333728285514, "phrase": "update_processing"}, {"score": 0.002769650208851401, "phrase": "compressed_representation"}, {"score": 0.0026762874092443197, "phrase": "extended_shared-inlining_relations"}, {"score": 0.0025734299706016263, "phrase": "xpath"}, {"score": 0.0023677483882740317, "phrase": "view_update_translation"}, {"score": 0.0023104373174118458, "phrase": "heuristic_procedure"}, {"score": 0.0022216045996270974, "phrase": "previous_middleware_approaches"}, {"score": 0.0021678232353129472, "phrase": "experimental_study"}], "paper_keywords": ["XML publishing", " XML view updates", " View updates"], "paper_abstract": "XML publishing has been an emerging technique for transforming (portions of) a relational database into an XML document, for example, to facilitate interoperability between heterogeneous applications. Such applications may update the XML document and the source relational database must be updated accordingly. In this paper, we consider such XML documents as (possibly) recursively defined XML views of relations. We propose new optimization techniques to efficiently support XML view updates specified via an XPATH expression with recursion and complex filters. The main novelties of our techniques are: (1) we propose a space-efficient relational encoding of recursive XML views; and (2) we push the bulk of update processing inside a relational database. Specifically, a compressed representation of the XML views is stored as extended shared-inlining relations. A space-efficient and updatable 2-hop index is used to optimize XPATH evaluation on XML views. Updates of the XML views are evaluated on these relations and index. View update translation is handled by a heuristic procedure inside a relational database, as opposed to previous middleware approaches. We present an experimental study to demonstrate the effectiveness of our proposed techniques.", "paper_title": "Optimizing updates of recursive XML views of relations", "paper_id": "WOS:000271738300004"}