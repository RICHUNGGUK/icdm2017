{"auto_keywords": [{"score": 0.04746186469181639, "phrase": "asymptotically_optimal_number"}, {"score": 0.04514885700357803, "phrase": "bottom-up_traversal"}, {"score": 0.043443105745602784, "phrase": "n_nodes"}, {"score": 0.02538225363316133, "phrase": "top-down_traversal"}, {"score": 0.004461634909525319, "phrase": "tree_structure"}, {"score": 0.0038614646772981848, "phrase": "q-bit_keys"}, {"score": 0.003694652993546994, "phrase": "succinct_fashion"}, {"score": 0.0033104781057339315, "phrase": "k"}, {"score": 0.0032621876512517398, "phrase": "path_length"}, {"score": 0.00319732428387928, "phrase": "word_size"}, {"score": 0.0031590250068577867, "phrase": "data_structure"}, {"score": 0.0027778947555117243, "phrase": "tree_nodes"}], "paper_keywords": ["Succinct data structures", " I/O efficient data structures", " Data structures", " Trees", " Path traversal"], "paper_abstract": "We present two results for path traversal in trees, where the traversal is performed in an asymptotically optimal number of I/Os and the tree structure is represented succinctly. Our first result is for bottom-up traversal that starts with a node in a tree on N nodes and traverses a path to the root. We show how a tree T on N nodes with q-bit keys, where q = O(lgN), can be blocked in a succinct fashion such that a bottom-up traversal requires O(K/B + 1) I/Os using only (2 + q) N + q . [2tN(q+ 2 lgB) /w + o(N)] + 8tNlgB/w bits to store T for any constant 0 < tau < 1, where K is the path length and w is the word size. This data structure is succinct because the above space cost is at most (2+q)N + q . (.N + o(N)) bits for any arbitrarily selected constant, eta, such that 0 < eta < 1. When storing keys with tree nodes is not required, we can represent T in 2N + epsilon NlgB/w + o(N) bits, where epsilon is an arbitrarily selected constant such that 0 < epsilon < 1, while providing the same support for queries. Our second result is for top-down traversal in binary trees. We store the tree in (3 + q) N + o(N) bits, while top-down traversal can still be performed in an asymptotically optimal number of I/Os.", "paper_title": "Succinct and I/O Efficient Data Structures for Traversal in Trees", "paper_id": "WOS:000299482700010"}