{"auto_keywords": [{"score": 0.015719716506582538, "phrase": "object-oriented_frameworks"}, {"score": 0.012745374803639525, "phrase": "proposed_approach"}, {"score": 0.01008130849889295, "phrase": "conceptual_oof_model"}, {"score": 0.004715702140552199, "phrase": "constituent_elements"}, {"score": 0.004293693193836074, "phrase": "software_development"}, {"score": 0.004205143879089321, "phrase": "related_projects"}, {"score": 0.004147123642915346, "phrase": "bypass_known_oof_related_problems"}, {"score": 0.004047500054405469, "phrase": "systematic_improvement"}, {"score": 0.0038286491141253584, "phrase": "technology_acceptance_model"}, {"score": 0.0038021440652379565, "phrase": "tam"}, {"score": 0.003697895355947004, "phrase": "\"_principle"}, {"score": 0.003621588555525458, "phrase": "complex_problem"}, {"score": 0.003485744667868367, "phrase": "simpler_problems"}, {"score": 0.003449585750738867, "phrase": "fundamental_idea"}, {"score": 0.003285725064532174, "phrase": "oof"}, {"score": 0.003240349178289032, "phrase": "user's_perceptions"}, {"score": 0.003129623571496151, "phrase": "original_outcome"}, {"score": 0.0030437652050982643, "phrase": "oof_improvement_process"}, {"score": 0.002980916123365584, "phrase": "framework_developers"}, {"score": 0.002939737235379635, "phrase": "framework_users"}, {"score": 0.0027137301650680175, "phrase": "oof_evaluation_purposes"}, {"score": 0.0026762323224804197, "phrase": "theoretical_viewpoint"}, {"score": 0.002540160379502092, "phrase": "oof-related_guidelines"}, {"score": 0.0024447807655923926, "phrase": "existing_literature"}, {"score": 0.002427826856342292, "phrase": "common_theories"}, {"score": 0.0021049977753042253, "phrase": "actual_setting"}], "paper_keywords": ["object-oriented framework", " TAM", " design pattern", " guideline", " causal model", " improvement process", " divide and conquer", " software quality"], "paper_abstract": "Advances in object-oriented frameworks (usually abbreviated as \"OOF\" or simply \"frameworks\") are currently regarded as one of the most promising areas in software development. However, many OOFs and related projects fail. To bypass known OOF related problems, a novel approach for the systematic improvement of OOFs will be introduced in this article. The proposed approach is based on the technology acceptance model (TAM) and the \"divide and conquer\" principle, which posits that a complex problem is easier to manage if it is broken down into simpler problems. The fundamental idea behind the research can be expressed with the assumption that elements which constitute OOF can influence the user's perceptions via the most important OOF characteristics - understandability, adaptability and confidence. The original outcome of our research is a conceptual OOF model and an OOF improvement process which can be used by framework developers as well as framework users. Several practical and theoretical implications of this work can be foreseen. Practitioners might use the outcomes of this research to develop more successful frameworks and for OOF evaluation purposes. From a theoretical viewpoint, this research can be used as a foundation for evaluating the implications of OOF-related guidelines and design approaches. While our research was mainly based on existing literature and common theories, we are aware of its limitations. Because of this, we plan to continue our research in several directions. Our current research is directed at empirically validating the conceptual OOF model that is presented in this article and at validating the proposed approach in an actual setting.", "paper_title": "Improving Object-Oriented Frameworks by Considering the Characteristics of Constituent Elements", "paper_id": "WOS:000268197700007"}