{"auto_keywords": [{"score": 0.04959024199151092, "phrase": "euclidean_distance"}, {"score": 0.04862717445897776, "phrase": "query_languages"}, {"score": 0.032566362359368516, "phrase": "vandeurzen"}, {"score": 0.00481495049065317, "phrase": "planar_spatial_databases"}, {"score": 0.004717125879761534, "phrase": "linear_constraint_databases"}, {"score": 0.004574085781766281, "phrase": "spatial_database_applications"}, {"score": 0.004435363840720883, "phrase": "data_model"}, {"score": 0.004322967486451877, "phrase": "large_portion"}, {"score": 0.004278807087784626, "phrase": "spatial_data"}, {"score": 0.004191829338769843, "phrase": "gis_systems"}, {"score": 0.004064653055162238, "phrase": "efficient_algorithms"}, {"score": 0.004002513373645485, "phrase": "core_operations"}, {"score": 0.0038810583785936505, "phrase": "important_limitation"}, {"score": 0.0038413947966606118, "phrase": "linear_constraints"}, {"score": 0.0033957904376127187, "phrase": "full_power"}, {"score": 0.003361069456060196, "phrase": "polynomial_constraints"}, {"score": 0.002986329509791943, "phrase": "euclidean_constructions"}, {"score": 0.002836679611901583, "phrase": "first_order_query_language"}, {"score": 0.0027505037762786087, "phrase": "desired_expressive_power"}, {"score": 0.002559444836360178, "phrase": "ad_hoc_encoding"}, {"score": 0.0024062532032402533, "phrase": "similar_class"}, {"score": 0.0022390533383717715, "phrase": "natural_subclass"}, {"score": 0.0022047613106966723, "phrase": "representation_independent_queries"}, {"score": 0.0021709933368474223, "phrase": "first_order_language"}, {"score": 0.0021487685525986094, "phrase": "kuijpers"}, {"score": 0.0021267708018655493, "phrase": "kuper"}, {"score": 0.0021049980887993046, "phrase": "paredaens"}], "paper_keywords": ["spatial databases", " constraint databases", " GIS", " database theory"], "paper_abstract": "Linear constraint databases and query languages are appropriate for spatial database applications. Not only is the data model suitable for representing a large portion of spatial data such as in GIS systems, but there also exist efficient algorithms for the core operations in the query languages. An important limitation of linear constraints, however, is that they cannot model constructs such as Euclidean distance; extending such languages to include such constructs, without obtaining the full power of polynomial constraints has proven to be quite difficult. One approach to this problem, by Kuijpers, Kuper, Paredaens, and Vandeurzen, used the notion of Euclidean constructions with ruler and compass as the basis for a first order query language. While their language had the desired expressive power, the semantics are not really natural, due to its use of an ad hoc encoding. In this paper, we define a language over a similar class of databases, with more natural semantics. We show that this language captures a natural subclass, the representation independent queries of the first order language of Kuijpers, Kuper, Paredaens, and Vandeurzen. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "A representation independent language for planar spatial databases with Euclidean distance", "paper_id": "WOS:000248133700001"}