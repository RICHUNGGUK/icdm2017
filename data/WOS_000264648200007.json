{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "firewall_rule_sets"}, {"score": 0.014425979090198292, "phrase": "high-level_languages"}, {"score": 0.011979074572407648, "phrase": "early_stages"}, {"score": 0.011336239756993494, "phrase": "production_phase"}, {"score": 0.009120302805593469, "phrase": "platform-independent_model"}, {"score": 0.0047650691627251825, "phrase": "model_inconsistencies"}, {"score": 0.004491970050862321, "phrase": "access_control_requirements"}, {"score": 0.0044608829094248985, "phrase": "complex_low-level_firewall_languages"}, {"score": 0.004338661611644755, "phrase": "model_firewall_access_control_lists"}, {"score": 0.0041184131734368825, "phrase": "main_reason"}, {"score": 0.0037366473207825234, "phrase": "code-generation_phase"}, {"score": 0.003621588555525458, "phrase": "development_process"}, {"score": 0.003308649946463136, "phrase": "huge_impact"}, {"score": 0.003217896008931311, "phrase": "generated_code"}, {"score": 0.0031955979242589494, "phrase": "final_system"}, {"score": 0.0030437652050982617, "phrase": "model-based_development"}, {"score": 0.00301217724562369, "phrase": "access_control_list_modelling"}, {"score": 0.002657677633954843, "phrase": "exhaustive_analysis"}, {"score": 0.0026027798552168344, "phrase": "different_alternatives"}, {"score": 0.0025578967205807843, "phrase": "bottom-up_methodology"}, {"score": 0.002479043701859468, "phrase": "verification_stage"}, {"score": 0.0024109902338204873, "phrase": "model-based_development_methodology"}, {"score": 0.0023776656246300063, "phrase": "polynomial_time_complexity_process"}, {"score": 0.002241087008892355, "phrase": "theoretical_complexity_analysis"}, {"score": 0.002202427244004817, "phrase": "real_models"}, {"score": 0.0021049977753042253, "phrase": "real_environments"}], "paper_keywords": ["MBE", " Firewalls", " Consistency", " Validation", " Model"], "paper_abstract": "The design and management of firewall rule sets is a very difficult and error-prone task because of the difficulty of translating access control requirements into complex low-level firewall languages. Although high-level languages have been proposed to model firewall access control lists, none has been widely adopted by the industry. We think that the main reason is that their complexity is close to that of many existing low-level languages. In addition, none of the high-level languages that automatically generate firewall rule sets verifies the model prior to the code-generation phase. Error correction in the early stages of the development process is cheaper compared to the cost associated with correcting errors in the production phase. In addition, errors generated in the production phase usually have a huge impact on the reliability and robustness of the generated code and final system. In this paper, we propose the application of the ideas of Model-Based Development to firewall access control list modelling and automatic rule set generation. First, an analysis of the most widely used firewall languages in the industry is conducted. Next, a Platform-Independent Model for firewall ACLs is proposed. This model is the result of exhaustive analysis and of a discussion of different alternatives for models in a bottom-up methodology. Then, it is proposed that a verification stage be added in the early stages of the Model-Based Development methodology, and a polynomial time complexity process and algorithms are proposed to detect and diagnose inconsistencies in the Platform-Independent Model. Finally, a theoretical complexity analysis and empirical tests with real models were conducted, in order to prove the feasibility of our proposal in real environments. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Model-Based Development of firewall rule sets: Diagnosing model inconsistencies", "paper_id": "WOS:000264648200007"}