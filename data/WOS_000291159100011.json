{"auto_keywords": [{"score": 0.03736108349380211, "phrase": "conjunctive_queries"}, {"score": 0.00481495049065317, "phrase": "querying_data_sources"}, {"score": 0.0044795698035664695, "phrase": "data_sources"}, {"score": 0.004068302313449334, "phrase": "web_services"}, {"score": 0.0037244390953401533, "phrase": "classical_setting"}, {"score": 0.003606711217432998, "phrase": "application_queries"}, {"score": 0.0029982770062678926, "phrase": "query_q"}, {"score": 0.0026577673946415583, "phrase": "p._q"}, {"score": 0.0023940274498526213, "phrase": "finite_set"}, {"score": 0.0023558375480288297, "phrase": "p_expansions"}, {"score": 0.0022630008787375435, "phrase": "first_study"}, {"score": 0.0021049977753042253, "phrase": "integrity_constraints"}], "paper_keywords": ["Query rewriting using views", " Limited query capabilities", " Integrity constraints", " Datalog"], "paper_abstract": "We study the problem of querying data sources that accept only a limited set of queries, such as sources accessible by Web services which can implement very large (potentially infinite) families of queries. We revisit a classical setting in which the application queries are conjunctive queries and the source accepts families of conjunctive queries specified as the expansions of a (potentially recursive) Datalog program with parameters. We say that query Q is expressible by the program P if it is equivalent to some expansion of P. Q is supported by P if it has an equivalent rewriting using some finite set of P expansions. We present the first study of expressibility and support for sources that satisfy integrity constraints, which is generally the case in practice.", "paper_title": "Querying Data Sources that Export Infinite Sets of Views", "paper_id": "WOS:000291159100011"}