{"auto_keywords": [{"score": 0.04714352860016274, "phrase": "llc"}, {"score": 0.029606802520569027, "phrase": "aip"}, {"score": 0.00481495049065317, "phrase": "adaptive_insertion_and_promotion_policies"}, {"score": 0.004586531354697466, "phrase": "last-level"}, {"score": 0.00443308765153716, "phrase": "numerous_approaches"}, {"score": 0.004326624385772596, "phrase": "additional_hardware_budget"}, {"score": 0.0040027552011993005, "phrase": "existing_cache_design"}, {"score": 0.0038499929374478125, "phrase": "adaptive_insertion"}, {"score": 0.003544490499418229, "phrase": "mp"}, {"score": 0.0034760655218366, "phrase": "missed_line"}, {"score": 0.003376037544631762, "phrase": "cache_list"}, {"score": 0.003310951184365485, "phrase": "reused_line"}, {"score": 0.0031845204444436413, "phrase": "lru"}, {"score": 0.0031536582999837095, "phrase": "lfu"}, {"score": 0.0030778231027679464, "phrase": "single_unified_scheme"}, {"score": 0.002931569771634119, "phrase": "high_locality"}, {"score": 0.002751751956416832, "phrase": "additional_hardware"}, {"score": 0.0026986685585382347, "phrase": "typical_lru_list"}, {"score": 0.002570385604065795, "phrase": "existing_hardware"}, {"score": 0.002545468362709126, "phrase": "minimal_changes"}, {"score": 0.002320449502337321, "phrase": "experimental_results"}, {"score": 0.0022101055924375725, "phrase": "lru_replacement_policy"}, {"score": 0.0021049977753042253, "phrase": "thousand_instructions"}], "paper_keywords": ["last-level cache", " replacement", " insertion", " promotion", " thrashing"], "paper_abstract": "To improve Last-Level Cache (LLC) management, numerous approaches have been proposed requiring additional hardware budget and increased overhead. A number of these approaches even change the organization of the existing cache design. In this letter, we propose Adaptive Insertion and Promotion (AIP) policies based on Least Recently Used (LRU) replacement. MP dynamically inserts a missed line in the middle of the cache list and promotes a reused line several steps left, realizing the combination of LRU and LFU policies deliberately under a single unified scheme. As a result, it benefits workloads with high locality as well as with many frequently reused lines. Most importantly, AIP requires no additional hardware other than a typical LRU list, thus it can be easily integrated into the existing hardware with minimal changes. Other issues around LLC such as scans, thrashing and dead lines are all explored in our study. Experimental results on the gem5 simulator with SPEC CUP2006 benchmarks indicate that AIP outperforms LRU replacement policy by an average of 5.8% on the misses per thousand instructions metric.", "paper_title": "Adaptive Insertion and Promotion Policies Based on Least Recently Used Replacement", "paper_id": "WOS:000314079800014"}