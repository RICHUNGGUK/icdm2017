{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "chiron"}, {"score": 0.014684433364577186, "phrase": "scientific_workflows"}, {"score": 0.004772690738389533, "phrase": "workflow_algebra"}, {"score": 0.0046993598473345395, "phrase": "algebraic_scientific_workflows"}, {"score": 0.004661446705304497, "phrase": "large-scale_scientific_experiments"}, {"score": 0.00436890075128947, "phrase": "different_programs"}, {"score": 0.004161553532799662, "phrase": "scientific_workflow_management_systems"}, {"score": 0.004012500850311087, "phrase": "large_amounts"}, {"score": 0.0038375280115736958, "phrase": "high-performance_computing_environments"}, {"score": 0.0036111152143285838, "phrase": "parallel_support"}, {"score": 0.00342568771304873, "phrase": "workflow_developers"}, {"score": 0.003329804436286295, "phrase": "workflow_execution"}, {"score": 0.003107935254560724, "phrase": "parallel_execution"}, {"score": 0.002751751956416832, "phrase": "unique_native_distributed_provenance_mechanism"}, {"score": 0.002674681176379472, "phrase": "relational_database"}, {"score": 0.002506507889886399, "phrase": "first_study"}, {"score": 0.002466139325703204, "phrase": "different_approaches"}, {"score": 0.0024264193359373977, "phrase": "second_one"}, {"score": 0.00218334762335187, "phrase": "declarative_specification"}, {"score": 0.002165688807780663, "phrase": "runtime_provenance_support"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["scientific workflows", " provenance", " parallel execution"], "paper_abstract": "Large-scale scientific experiments based on computer simulations are typically modeled as scientific workflows, which eases the chaining of different programs. These scientific workflows are defined, executed, and monitored by scientific workflow management systems (SWfMS). As these experiments manage large amounts of data, it becomes critical to execute them in high-performance computing environments, such as clusters, grids, and clouds. However, few SWfMS provide parallel support. The ones that do so are usually labor-intensive for workflow developers and have limited primitives to optimize workflow execution. To address these issues, we developed workflow algebra to specify and enable the optimization of parallel execution of scientific workflows. In this paper, we show how the workflow algebra is efficiently implemented in Chiron, an algebraic based parallel scientific workflow engine. Chiron has a unique native distributed provenance mechanism that enables runtime queries in a relational database. We developed two studies to evaluate the performance of our algebraic approach implemented in Chiron; the first study compares Chiron with different approaches, whereas the second one evaluates the scalability of Chiron. By analyzing the results, we conclude that Chiron is efficient in executing scientific workflows, with the benefits of declarative specification and runtime provenance support. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Chiron: a parallel engine for algebraic scientific workflows", "paper_id": "WOS:000326023300008"}