{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "distributed_k-anonymization"}, {"score": 0.028568317730340416, "phrase": "normal_k-anonymization_function"}, {"score": 0.004692227830462433, "phrase": "database_owner"}, {"score": 0.0042591158963728665, "phrase": "involved_individuals'_privacy"}, {"score": 0.0038409323908446297, "phrase": "open_question"}, {"score": 0.0027622407190589326, "phrase": "unconditionally_private_protocol"}, {"score": 0.002639968630788011, "phrase": "normal_k-anonymization_functions"}, {"score": 0.002555950807368337, "phrase": "k-anonymization_functions"}, {"score": 0.00244278788608393, "phrase": "efficent_protocol"}, {"score": 0.002260301305523054, "phrase": "polynomial-time_adversaries"}], "paper_keywords": ["k-anonymity", " protocol", " secure computation"], "paper_abstract": "When a database owner needs to disclose her data, she can k-anonymize her data to protect the involved individuals' privacy. However, if the data is distributed between two owners, then it is an open question whether the two owners can jointly k-anonymize the union of their data, such that the information suppressed in one owner's data is not revealed to the other owner. In this paper, we study this problem of distributed k-anonymization. We have two major results: First, it is impossible to design an unconditionally private protocol that implements any normal k-anonymization function, where normal k-anonymization functions are a very broad class of k-anonymization functions. Second, we give an efficent protocol that implements a normal k-anonymization function and show that it is private against polynomial-time adversaries. Our results have many potential applications and can be extended to three or more parties.", "paper_title": "On Distributed k-Anonymization", "paper_id": "WOS:000267901400006"}