{"auto_keywords": [{"score": 0.04738727423337003, "phrase": "malware_detection_facilities"}, {"score": 0.04200658896700752, "phrase": "virtual_machine"}, {"score": 0.0371227020055076, "phrase": "semantic_gap"}, {"score": 0.034175079225139016, "phrase": "new_technique"}, {"score": 0.03223276241340444, "phrase": "vm"}, {"score": 0.030246965830859274, "phrase": "semantic_view"}, {"score": 0.00481495049065317, "phrase": "vmm-based_\"out-of-the-box\"_semantic_view_reconstruction"}, {"score": 0.0046369494511792845, "phrase": "stealthy_techniques"}, {"score": 0.004465499299203836, "phrase": "defensive_side"}, {"score": 0.004431974195550144, "phrase": "fundamental_limitation"}, {"score": 0.00440976345264104, "phrase": "traditional_host-based_antimalware_systems"}, {"score": 0.004151723505230932, "phrase": "counter_detection"}, {"score": 0.0040385352882334235, "phrase": "recent_solutions"}, {"score": 0.003918559863308945, "phrase": "protected_vm"}, {"score": 0.00376409764683147, "phrase": "tamper_resistance"}, {"score": 0.003698442219929622, "phrase": "internal_semantic_view"}, {"score": 0.0036066231834717545, "phrase": "in-the-box\"_approaches"}, {"score": 0.0035615689934227063, "phrase": "technical_challenge"}, {"score": 0.00326151066906644, "phrase": "semantic_gap_challenge"}, {"score": 0.003164545480488513, "phrase": "internal_semantic_views"}, {"score": 0.002956752799223351, "phrase": "semantic_definitions"}, {"score": 0.002941913249957503, "phrase": "guest_os_data_structures"}, {"score": 0.0027905114793984084, "phrase": "guest_view"}, {"score": 0.002748698897937274, "phrase": "system_call_events"}, {"score": 0.00268039514204363, "phrase": "system_call"}, {"score": 0.002646880721119838, "phrase": "system_call_number"}, {"score": 0.0026137842507648053, "phrase": "return_value"}, {"score": 0.0024605773668116893, "phrase": "comparison-based_malware_detection"}, {"score": 0.0024298047493967628, "phrase": "rootkit_detection"}, {"score": 0.002339771435910601, "phrase": "off-the-shelf_anti_malware_software"}, {"score": 0.002230491796989549, "phrase": "intrusion_behavior_observation"}, {"score": 0.0021970519740426493, "phrase": "proof-of-concept_vmwatcher_prototype"}, {"score": 0.0021695698439906466, "phrase": "vmm"}, {"score": 0.00213703950514224, "phrase": "real-world_malware"}, {"score": 0.0021209582621054403, "phrase": "elusive_kernel-level_rootkits"}, {"score": 0.0021049977753042253, "phrase": "vmwatcher's_practicality"}], "paper_keywords": ["Security", " Malware detection", " rootkits", " virtual machines"], "paper_abstract": "An alarming trend in recent malware incidents is that they are armed with stealthy techniques to detect, evade, and subvert malware detection facilities of the victim. On the defensive side, a fundamental limitation of traditional host-based antimalware systems is that they run inside the very hosts they are protecting (\"in-the-box\"), making them vulnerable to counter detection and subversion by malware. To address this limitation, recent solutions based on virtual machine (VM) technologies advocate placing the malware detection facilities outside of the protected VM (\"out-of-the-box\"). However, they gain tamper resistance at the cost of losing the internal semantic view of the host, which is enjoyed by \"in-the-box\" approaches. This poses a technical challenge known as the semantic gap. In this article, we present the design, implementation, and evaluation of VMwatcher-an \"out-of-the-box\" approach that overcomes the semantic gap challenge. A new technique called guest view casting is developed to reconstruct internal semantic views (e. g., files, processes, and kernel modules) of a VM nonintrusively from the outside. More specifically, the new technique casts semantic definitions of guest OS data structures and functions on virtual machine monitor (VMM)-level VM states, so that the semantic view can be reconstructed. Furthermore, we extend guest view casting to reconstruct details of system call events (e. g., the process that makes the system call as well as the system call number, parameters, and return value) in the VM, enriching the semantic view. With the semantic gap effectively narrowed, we identify three unique malware detection and monitoring capabilities: (i) view comparison-based malware detection and its demonstration in rootkit detection; (ii) \"out-of-the-box\" deployment of off-the-shelf anti malware software with improved detection accuracy and tamper-resistance; and (iii) nonintrusive system call monitoring for malware and intrusion behavior observation. We have implemented a proof-of-concept VMwatcher prototype on a number of VMM platforms. Our evaluation experiments with real-world malware, including elusive kernel-level rootkits, demonstrate VMwatcher's practicality and effectiveness.", "paper_title": "Stealthy Malware Detection and Monitoring through VMM-Based \"Out-of-the-Box\" Semantic View Reconstruction", "paper_id": "WOS:000275539600002"}