{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "longstaff"}, {"score": 0.004766090327062509, "phrase": "schwartz_american_option_pricing_model"}, {"score": 0.004717723626157272, "phrase": "fpga._american_style_options"}, {"score": 0.004622450915803531, "phrase": "financial_products"}, {"score": 0.004506048850130758, "phrase": "challenging_problem"}, {"score": 0.00437021209960886, "phrase": "finite_difference_methods"}, {"score": 0.0043258453436258405, "phrase": "tree-based_methods"}, {"score": 0.004216880725292, "phrase": "american_option_pricing"}, {"score": 0.00411064950774695, "phrase": "major_drawback"}, {"score": 0.0036553070575015344, "phrase": "computation_times"}, {"score": 0.003509006038574667, "phrase": "state_variables"}, {"score": 0.0034733518170738517, "phrase": "alternative_solutions"}, {"score": 0.00342054627009158, "phrase": "extended_monte_carlo_methods"}, {"score": 0.003334309053314909, "phrase": "least-squares_monte_carlo"}, {"score": 0.0031845607113111614, "phrase": "schwartz"}, {"score": 0.0030569913145731408, "phrase": "continuation_values"}, {"score": 0.003025915966640355, "phrase": "simulated_paths"}, {"score": 0.002889928791032578, "phrase": "fpga_hardware_architecture"}, {"score": 0.0028026735035370206, "phrase": "lsmc_method"}, {"score": 0.0027600360731762997, "phrase": "quasi-monte_carlo_path_generation"}, {"score": 0.0025958582759972315, "phrase": "path_generation"}, {"score": 0.0025694584194998356, "phrase": "regression_steps"}, {"score": 0.002479150189700726, "phrase": "equivalent_pure_software_implementation"}, {"score": 0.0023435920614377306, "phrase": "overall_speed-up"}, {"score": 0.002272794656458419, "phrase": "cpu-based_implementation"}, {"score": 0.0021049977753042253, "phrase": "pure_software_implementation"}], "paper_keywords": ["American option", " Least Squares Monte Carlo", " Quasi Monte Carlo", " FPGA", " Hardware acceleration", " Financial computing"], "paper_abstract": "American style options are widely used financial products, whose pricing is a challenging problem due to their path dependency characteristic. Finite difference methods and tree-based methods can be used for American option pricing. However, the major drawback of these methods is that they can often only handle one or two sources of uncertainty; for more state variables they become computationally prohibitive, with computation times typically increasing exponentially with the number of state variables. Alternative solutions are the extended Monte Carlo methods, such as the Least-Squares Monte Carlo (LSMC) method suggested by Longstaff and Schwartz, which uses of regression to estimate continuation values from simulated paths. In this paper, we present an FPGA hardware architecture for the acceleration of the LSMC method, with Quasi-Monte Carlo path generation. Our FPGA hardware implementation on a Xilinx Virtex-4 XC4VFX100 chip achieves 25x and 18x speed-ups in the path generation and regression steps, respectively, compared to an equivalent pure software implementation captured in C++ and run on an Intel Xeon 2.8 GHz CPU. This provides overall speed-up of 20x compared to a CPU-based implementation. Power measurements also show that our FPGA implementation is 54x more energy efficient than the pure software implementation.", "paper_title": "Implementation of the Longstaff and Schwartz American Option Pricing Model on FPGA", "paper_id": "WOS:000300852200007"}