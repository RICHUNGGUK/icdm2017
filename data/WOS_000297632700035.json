{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "third_list-homomorphism_theorem"}, {"score": 0.004294962474996283, "phrase": "list_homomorphism"}, {"score": 0.0036660436272785476, "phrase": "dual_theorem"}, {"score": 0.0021049977753042253, "phrase": "beautiful_symmetry"}], "paper_keywords": ["algorithms", " Theory", " program derivation", " third list homomorphism theorem"], "paper_abstract": "The third list-homomorphism theorem says that a function is a list homomorphism if it can be described as an instance of both a foldr and a foldl. We prove a dual theorem for unfolds and generalise both theorems to trees: if a function generating a list can be described both as an unfoldr and an unfoldl, the list can be generated from the middle, and a function that processes or builds a tree both upwards and downwards may independently process/build a subtree and its one-hole context. The point-free, relational formalism helps to reveal the beautiful symmetry hidden in the theorem.", "paper_title": "Generalising and Dualising the Third List-Homomorphism Theorem: Functional Pearl", "paper_id": "WOS:000297632700035"}