{"auto_keywords": [{"score": 0.029736768873401005, "phrase": "xcq"}, {"score": 0.010612596965023926, "phrase": "xml"}, {"score": 0.007473096359859662, "phrase": "full_decompression"}, {"score": 0.0047363569540686936, "phrase": "de_facto_standard"}, {"score": 0.004508155639663496, "phrase": "nature_verbose"}, {"score": 0.00446384610114756, "phrase": "xml_documents"}, {"score": 0.003925786139948254, "phrase": "xmill"}, {"score": 0.0038743931383378558, "phrase": "xmlppm"}, {"score": 0.00383628868871796, "phrase": "millau"}, {"score": 0.0035445922786327575, "phrase": "compression_ratio"}, {"score": 0.003521305923598047, "phrase": "execution_time"}, {"score": 0.003452357563167821, "phrase": "limited_range"}, {"score": 0.0033184711049370425, "phrase": "compressed_documents"}, {"score": 0.00313761080323105, "phrase": "document_type_definition"}, {"score": 0.0030660263386795526, "phrase": "xml_document"}, {"score": 0.00295681206994471, "phrase": "better_compression"}, {"score": 0.002704906579783511, "phrase": "xml_data"}, {"score": 0.002643168068896905, "phrase": "novel_technique"}, {"score": 0.0025999315182615823, "phrase": "dtd_tree"}, {"score": 0.0025828350676150354, "phrase": "sax_event_stream_parsing"}, {"score": 0.002474408907166139, "phrase": "partitioned_path-based_grouping"}, {"score": 0.0023783592242665377, "phrase": "ppg"}, {"score": 0.002324055400492893, "phrase": "xml_queries"}, {"score": 0.0021900332274791827, "phrase": "compression_performance"}, {"score": 0.002140021296668778, "phrase": "comprehensive_experiments"}, {"score": 0.0021049977753042253, "phrase": "xml_benchmark_datasets"}], "paper_keywords": ["XML", " document type definitions", " compression algorithms", " query processing", " performance"], "paper_abstract": "XML has already become the de facto standard for specifying and exchanging data on the Web. However, XML is by nature verbose and thus XML documents are usually large in size, a factor that hinders its practical usage, since it substantially increases the costs of storing, processing, and exchanging data. In order to tackle this problem, many XML-specific compression systems, such as XMill, XGrind, XMLPPM, and Millau, have recently been proposed. However, these systems usually suffer from the following two inadequacies: They either sacrifice performance in terms of compression ratio and execution time in order to support a limited range of queries, or perform full decompression prior to processing queries over compressed documents. In this paper, we address the above problems by exploiting the information provided by a Document Type Definition (DTD) associated with an XML document. We show that a DTD is able to facilitate better compression as well as generate more usable compressed data to support querying. We present the architecture of the XCQ, which is a compression and querying tool for handling XML data. XCQ is based on a novel technique we have developed called DTD Tree and SAX Event Stream Parsing (DSP). The documents compressed by XCQ are stored in Partitioned Path-Based Grouping (PPG) data streams, which are equipped with a Block Statistics Signature (BSS) indexing scheme. The indexed PPG data streams support the processing of XML queries that involve selection and aggregation, without the need for full decompression. In order to study the compression performance of XCQ, we carry out comprehensive experiments over a set of XML benchmark datasets.", "paper_title": "XCQ: A queriable XML compression system", "paper_id": "WOS:000242635800002"}