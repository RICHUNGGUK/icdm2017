{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "agreeable_deadlines"}, {"score": 0.004553510708976456, "phrase": "single_processor"}, {"score": 0.003829548069657859, "phrase": "energy_consumption"}, {"score": 0.003703282519292336, "phrase": "overall_consumed_energy"}, {"score": 0.002815864555488112, "phrase": "flow_time"}, {"score": 0.0025461386232786356, "phrase": "release_times"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Energy minimization", " Scheduling", " Dynamic programming"], "paper_abstract": "We consider the problem of scheduling on a single processor a given set of n jobs. Each job j has a workload w(j) and a release time r(j). The processor can vary its speed and hibernate to reduce energy consumption. In a schedule minimizing overall consumed energy, it might be that some jobs complete arbitrarily far from their release time. So in order to guarantee some quality of service, we would like to impose a deadline d(j) = r(j) + F for every job j, where F is a guarantee on the flow time. We provide an O(n(3)) algorithm for the more general case of agreeable deadlines, where jobs have release times and deadlines and can be ordered such that for every i < j, both r(i) <= r(j) and d(i) <= d(j). (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Speed scaling with power down scheduling for agreeable deadlines", "paper_id": "WOS:000209575900002"}