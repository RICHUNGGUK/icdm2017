{"auto_keywords": [{"score": 0.05007848702261487, "phrase": "reconfigurable_hmac-hash_unit"}, {"score": 0.04843923780882195, "phrase": "design_space_exploration"}, {"score": 0.0372250892873349, "phrase": "hmac_throughput"}, {"score": 0.03396558574011369, "phrase": "general_key_size"}, {"score": 0.03315465026700875, "phrase": "fixed_key_size"}, {"score": 0.023364143031593322, "phrase": "hmac"}, {"score": 0.0043804319008535555, "phrase": "six_standard_hash_algorithms"}, {"score": 0.00367967106192446, "phrase": "key_reuse_mechanism"}, {"score": 0.003643185395780667, "phrase": "successive_messages"}, {"score": 0.003397683082821229, "phrase": "design_space"}, {"score": 0.0032975819773787985, "phrase": "hmac_algorithm"}, {"score": 0.003014576010931602, "phrase": "standard_key_use"}, {"score": 0.0029698211157405618, "phrase": "proposed_key_reuse_mechanisms"}, {"score": 0.0025191653363555214, "phrase": "proposed_key_reuse_mechanism"}, {"score": 0.0024327171018928458, "phrase": "negligible_increase"}, {"score": 0.002337537183727731, "phrase": "large_key"}], "paper_keywords": ["authentication", " design space exploration", " hash functions", " HMAC", " IPSec"], "paper_abstract": "In this paper, a design space exploration of a reconfigurable HMAC-hash unit is discussed. This unit implements one of six standard hash algorithms; namely, MD5, SHA-1, RIPEMD-160, HMAC-MD5, HMAC-SHA-1, and HMAC-RIPEMD-160. The design space exploration of this unit is done using the Handel-C language. We propose a key reuse mechanism for successive messages in order to improve the HMAC throughput. In addition, we explore the design space by providing two implementations of the HMAC algorithm, one for a general key size and another for a fixed key size. In each implementation, we incorporate standard key use and the proposed key reuse mechanisms, which results in four different implementations. The performance of these four implementations is analyzed with respect to four design metrics: area, delay, throughput, and power consumption. We found that the proposed key reuse mechanism improves the HMAC throughput significantly, with negligible increase in area and delay, when a large key is reused. In addition, we found that the implementation of HMAC for fixed key size is better in area, delay, throughput, and power consumption than the HMAC implementation for general key size.", "paper_title": "Design space exploration of a reconfigurable HMAC-hash unit", "paper_id": "WOS:000257899600004"}