{"auto_keywords": [{"score": 0.023153759706908136, "phrase": "doi"}, {"score": 0.00481495049065317, "phrase": "emergency_flood_management"}, {"score": 0.004494570360108983, "phrase": "flood_routing"}, {"score": 0.004460309246062286, "phrase": "inundation_prediction"}, {"score": 0.003961330917648707, "phrase": "complex_physical_processes"}, {"score": 0.003916098498242888, "phrase": "shallow_flows"}, {"score": 0.0038125469099459905, "phrase": "urban_areas"}, {"score": 0.003683407561208816, "phrase": "full_hydrodynamic_equations"}, {"score": 0.003585986761045987, "phrase": "complex_flow_phenomena"}, {"score": 0.0033857878144822906, "phrase": "increased_use"}, {"score": 0.0033599501775954024, "phrase": "flood_analysis_studies"}, {"score": 0.0033215617190376565, "phrase": "major_limitation"}, {"score": 0.0032460913210906783, "phrase": "increased_computational_cost"}, {"score": 0.003221316290858497, "phrase": "two-dimensional_flood_models"}, {"score": 0.003160200215473349, "phrase": "parallel_computing"}, {"score": 0.002949598537993663, "phrase": "code_refactoring"}, {"score": 0.0029270797740550973, "phrase": "hardware_setup"}, {"score": 0.002860546817196148, "phrase": "hardware_systems"}, {"score": 0.0027529929913806066, "phrase": "flood_analyses"}, {"score": 0.0026191799769765085, "phrase": "now-prevalent_multicore_computers"}, {"score": 0.0025892330566358503, "phrase": "desktop_parallel_computing_architecture"}, {"score": 0.002530359917257626, "phrase": "computation_time"}, {"score": 0.002416589459425828, "phrase": "wet_cell_tracking_algorithm"}, {"score": 0.0022041312401435346, "phrase": "flood_inundation_studies"}, {"score": 0.0021872912745910127, "phrase": "readily_available_desktop_computers"}, {"score": 0.0021049977753042253, "phrase": "american_society_of_civil_engineers"}], "paper_keywords": ["Parallel computing", " Multicore", " Multiprocessor computing", " Flood modeling", " Shallow-water equations", " Java multithreading", " Domain tracking"], "paper_abstract": "Emergency flood management is enhanced by using models that can estimate the timing and location of flooding. Typically, flood routing and inundation prediction is accomplished by using one-dimensional (1D) models. These have been the models of choice because they are computationally simple and quick. However, these models do not adequately represent the complex physical processes present for shallow flows located in the floodplain or in urban areas. Two-dimensional (2D) models developed on the basis of the full hydrodynamic equations can be used to represent the complex flow phenomena that exist in the floodplain and are, therefore, recommended by the National Research Council for increased use in flood analysis studies. The major limitation of these models is the increased computational cost. Two-dimensional flood models are prime candidates for parallel computing, but traditional methods/equipment (e. g., message passing paradigm) are more complex in terms of code refactoring and hardware setup. In addition, these hardware systems may not be available or accessible to modelers conducting flood analyses. This paper presents a 2D flood model that implements multithreading for use on now-prevalent multicore computers. This desktop parallel computing architecture has been shown to decrease computation time by 14 times on a 16-processor computer and, when coupled with a wet cell tracking algorithm, has been shown to decrease computation by as much as 310 times. These accomplishments make high-fidelity flood modeling more feasible for flood inundation studies using readily available desktop computers. DOI: 10.1061/(ASCE)CP.1943-5487.0000064. (C) 2011 American Society of Civil Engineers.", "paper_title": "Two-Dimensional Fast-Response Flood Modeling: Desktop Parallel Computing and Domain Tracking", "paper_id": "WOS:000290451800002"}