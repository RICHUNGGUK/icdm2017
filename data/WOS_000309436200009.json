{"auto_keywords": [{"score": 0.02628533816143664, "phrase": "test_cases"}, {"score": 0.00481495049065317, "phrase": "sdl-based_architectural_design_models"}, {"score": 0.004773476989344654, "phrase": "communication-based_coverage_criteria"}, {"score": 0.004531997388646422, "phrase": "different_models"}, {"score": 0.004247180402119585, "phrase": "quality_assurance"}, {"score": 0.004192392802008709, "phrase": "code_generation"}, {"score": 0.004102639724186862, "phrase": "simulation-based_black-box_testing_strategies"}, {"score": 0.0038781372962808894, "phrase": "white-box_testing_strategies"}, {"score": 0.0037623642073222547, "phrase": "implementation_code"}, {"score": 0.0035410467987580484, "phrase": "coverage_testing"}, {"score": 0.003510507340837656, "phrase": "architectural_design_models"}, {"score": 0.003465197305666774, "phrase": "sdl"}, {"score": 0.0033909518548844047, "phrase": "description_language"}, {"score": 0.0032896745636186824, "phrase": "automatic_test_generation"}, {"score": 0.0030693625816617044, "phrase": "individual_sdl_process"}, {"score": 0.0029647862293448895, "phrase": "new_coverage_criteria"}, {"score": 0.002790254164160135, "phrase": "different_sdl_processes"}, {"score": 0.0027304365438083874, "phrase": "test_generator"}, {"score": 0.0027068691342344545, "phrase": "innovative_backward_tracking"}, {"score": 0.0026835045963349647, "phrase": "forward_validation"}, {"score": 0.0025808284847319528, "phrase": "guiding_test_generation"}, {"score": 0.0023664730217196252, "phrase": "-edge_criteria"}, {"score": 0.0021604924928015283, "phrase": "proposed_communication-based_criteria"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["SDL (Specification and Description Language)", " White-box testing", " Coverage testing and criteria", " Architectural design models"], "paper_abstract": "Context: As the capability to automatically generate code from different models becomes more sophisticated, it is critical that these models be adequately tested for quality assurance prior to code generation. Objective: Although simulation-based black-box testing strategies exist for these models, it is important that we also employ white-box testing strategies similar to those used to test implementation code to further validate the quality of these models. Method: We apply coverage testing to architectural design models represented by SDL, a Specification and Description Language. Our previous study defined a methodology for automatic test generation with respect to two structural-based criteria, all-node and all-edge, for each individual SDL process. In this paper, we present new coverage criteria such as n-step-message-transfer and sender-receiver-round-trip, aiming at the communication between different SDL processes. Results: A test generator using innovative backward tracking and forward validation has been implemented to support these criteria, guiding test generation to detect bugs which could not be revealed by test cases generated only with respect to the all-node and all-edge criteria. Conclusions: The results of our case study support the feasibility of using our test generator to create test cases satisfying the proposed communication-based criteria. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Validation of SDL-based architectural design models using communication-based coverage criteria", "paper_id": "WOS:000309436200009"}