{"auto_keywords": [{"score": 0.00415333528095237, "phrase": "sparse_carry_computation_unit"}, {"score": 0.003679969180334367, "phrase": "sparse_approach"}, {"score": 0.0034872225047008648, "phrase": "inverted_circular_idempotency_property"}, {"score": 0.003417565253539315, "phrase": "parallel-prefix_carry_operator"}, {"score": 0.0033045378860812403, "phrase": "area_efficiency"}, {"score": 0.003110396267535254, "phrase": "new_prefix_operator"}, {"score": 0.0029473940028924748, "phrase": "smaller_area"}, {"score": 0.002811770047652563, "phrase": "earlier_proposals"}, {"score": 0.0027187231747900814, "phrase": "high_operation_speed"}, {"score": 0.002664375650349975, "phrase": "second_architecture"}, {"score": 0.0022365262201954643, "phrase": "straightforward_modifications"}, {"score": 0.0021049977753042253, "phrase": "minor_hardware_overhead"}], "paper_keywords": ["Modulo arithmetic", " residue number system (RNS)", " parallel-prefix carry computation", " computer arithmetic", " VLSI"], "paper_abstract": "Two architectures for modulo 2(n) + 1 adders are introduced in this paper. The first one is built around a sparse carry computation unit that computes only some of the carries of the modulo 2(n) + 1 addition. This sparse approach is enabled by the introduction of the inverted circular idempotency property of the parallel-prefix carry operator and its regularity and area efficiency are further enhanced by the introduction of a new prefix operator. The resulting diminished-1 adders can be implemented in smaller area and consume less power compared to all earlier proposals, while maintaining a high operation speed. The second architecture unifies the design of modulo 2(n) +/- 1 adders. It is shown that modulo 2(n) + 1 adders can be easily derived by straightforward modifications of modulo 2(n) - 1 adders with minor hardware overhead.", "paper_title": "On Modulo 2(n)+1 Adder Design", "paper_id": "WOS:000298560500004"}