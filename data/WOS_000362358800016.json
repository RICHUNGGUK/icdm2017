{"auto_keywords": [{"score": 0.02799348162266305, "phrase": "cmos"}, {"score": 0.00481495049065317, "phrase": "online_gradient_descent_training"}, {"score": 0.004723847090183984, "phrase": "multilayer_neural_networks"}, {"score": 0.00459039896577789, "phrase": "continuous_updating"}, {"score": 0.004546755482549647, "phrase": "large_matrices"}, {"score": 0.004503525064934708, "phrase": "synaptic_weights"}, {"score": 0.004460703838987562, "phrase": "local_rules"}, {"score": 0.00442220366081046, "phrase": "cmos."}, {"score": 0.004313996835376177, "phrase": "massive_parallelism"}, {"score": 0.004112711391952791, "phrase": "update_rules"}, {"score": 0.003939565240409143, "phrase": "synaptic_weight"}, {"score": 0.003632080001489739, "phrase": "update_operations"}, {"score": 0.00349577373145384, "phrase": "memristor-based_arrays"}, {"score": 0.003222814590544802, "phrase": "voltage_pulse"}, {"score": 0.003043031131345537, "phrase": "pulse_duration"}, {"score": 0.0029853535424953595, "phrase": "pulse_magnitude"}, {"score": 0.002859533151305368, "phrase": "proposed_method"}, {"score": 0.0028187792953857957, "phrase": "synaptic_circuit"}, {"score": 0.00276534038425712, "phrase": "small_number"}, {"score": 0.0024652715040303416, "phrase": "static_power"}, {"score": 0.0024417832296664698, "phrase": "previous_cmos-only_hardware_alternatives"}, {"score": 0.002350041573006264, "phrase": "hardware_mnns"}, {"score": 0.002316532084420729, "phrase": "scalable_algorithms"}, {"score": 0.0022834993174767016, "phrase": "online_gradient_descent"}, {"score": 0.002145703330831668, "phrase": "proposed_memristor-based_circuit"}, {"score": 0.0021049977753042253, "phrase": "standard_supervised_learning_tasks"}], "paper_keywords": ["Backpropagation", " hardware", " memristive systems", " memristor", " multilayer neural networks (MNNs)", " stochastic gradient descent", " synapse"], "paper_abstract": "Learning in multilayer neural networks (MNNs) relies on continuous updating of large matrices of synaptic weights by local rules. Such locality can be exploited for massive parallelism when implementing MNNs in hardware. However, these update rules require a multiply and accumulate operation for each synaptic weight, which is challenging to implement compactly using CMOS. In this paper, a method for performing these update operations simultaneously (incremental outer products) using memristor-based arrays is proposed. The method is based on the fact that, approximately, given a voltage pulse, the conductivity of a memristor will increment proportionally to the pulse duration multiplied by the pulse magnitude if the increment is sufficiently small. The proposed method uses a synaptic circuit composed of a small number of components per synapse: one memristor and two CMOS transistors. This circuit is expected to consume between 2% and 8% of the area and static power of previous CMOS-only hardware alternatives. Such a circuit can compactly implement hardware MNNs trainable by scalable algorithms based on online gradient descent (e.g., backpropagation). The utility and robustness of the proposed memristor-based circuit are demonstrated on standard supervised learning tasks.", "paper_title": "Memristor-Based Multilayer Neural Networks With Online Gradient Descent Training", "paper_id": "WOS:000362358800016"}