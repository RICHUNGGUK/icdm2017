{"auto_keywords": [{"score": 0.04419846536070136, "phrase": "vforce"}, {"score": 0.015319214864130837, "phrase": "special_purpose_processors"}, {"score": 0.01317556179674772, "phrase": "user_code"}, {"score": 0.00481495049065317, "phrase": "portable_applications"}, {"score": 0.0047732596509542135, "phrase": "high_performance_systems"}, {"score": 0.00457013354092966, "phrase": "field_programmable_gate_arrays"}, {"score": 0.0044718206943536514, "phrase": "graphics_processing_units"}, {"score": 0.004262881313926916, "phrase": "scientific_applications"}, {"score": 0.004153041453795458, "phrase": "application_programmers"}, {"score": 0.004063664475797303, "phrase": "minimal_changes"}, {"score": 0.003941746077126688, "phrase": "extensible_middleware_framework"}, {"score": 0.0036288825833675127, "phrase": "spp_hardware"}, {"score": 0.0034441627435203804, "phrase": "hardware-specific_details"}, {"score": 0.003399466007862412, "phrase": "application_programmer"}, {"score": 0.00321236577162671, "phrase": "application_code"}, {"score": 0.0031845067058084583, "phrase": "accelerator_code"}, {"score": 0.0030487828775502563, "phrase": "general_purpose_processor"}, {"score": 0.0026175952455594277, "phrase": "nvidia_tesla_gpus"}, {"score": 0.0025948829910901285, "phrase": "xilinx"}, {"score": 0.002347378595930709, "phrase": "different_hardware_configurations"}, {"score": 0.0023270035715132866, "phrase": "run_time"}, {"score": 0.0023068049914566975, "phrase": "key_considerations"}, {"score": 0.002286781334850213, "phrase": "global_knowledge"}, {"score": 0.002237477619351199, "phrase": "processing_steps"}, {"score": 0.0022084059770026416, "phrase": "application_mapping"}, {"score": 0.0021892345747666977, "phrase": "memory_allocation"}, {"score": 0.0021607883988873492, "phrase": "task_parallelism"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["CPU", " Heterogeneous systems", " FPGA", " Middleware", " Portability"], "paper_abstract": "Special Purpose Processors (SPPs), including Field Programmable Gate Arrays (FPGAs) and Graphics Processing Units (GPUs), are increasingly being used to accelerate scientific applications. VForce aims to aid application programmers in using such accelerators with minimal changes in user code. VForce is an extensible middleware framework that enables VSIPL++ (the Vector Signal Image Processing Library extension) programs to transparently use Special Purpose Processors (SPPs) while maintaining portability across platforms with and without SPP hardware. The framework is designed to maintain a VSIPL++-like environment and hide hardware-specific details from the application programmer while preserving performance and productivity. VForce focuses on the interface between application code and accelerator code. The same application code can run in software on a general purpose processor or take advantage of SPPs if they are available. VForce is unique in that it supports calls to both FPGAs and GPUs while requiring no changes in user code. Results on systems with NVIDIA Tesla GPUs and Xilinx FPGAs are presented. This paper describes VForce, illustrates its support for portability, and discusses lessons learned for providing support for different hardware configurations at run time. Key considerations involve global knowledge about the relationship between processing steps for defining application mapping, memory allocation, and task parallelism. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "VForce: An environment for portable applications on high performance systems with accelerators", "paper_id": "WOS:000307156000011"}