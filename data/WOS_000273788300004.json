{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "multi-dimensional_data"}, {"score": 0.00751908741633109, "phrase": "multi-dimensional_space"}, {"score": 0.003634262647873338, "phrase": "effective_processing"}, {"score": 0.003109519872758431, "phrase": "point_location_problem"}, {"score": 0.002863762666256937, "phrase": "neighborhood_graphs"}, {"score": 0.0028267701593809877, "phrase": "indexing_structure"}, {"score": 0.0026835045963349647, "phrase": "local_insertion"}, {"score": 0.0026603411931700556, "phrase": "deletion_method"}, {"score": 0.0025920406425973368, "phrase": "incremental_neighborhood_graph_construction_method"}, {"score": 0.0023767561522363367, "phrase": "second_method"}, {"score": 0.0023562342764987254, "phrase": "fast_neighborhood_graph_construction"}, {"score": 0.0022957232752482196, "phrase": "recursive_application"}, {"score": 0.002266051712795851, "phrase": "first_method"}, {"score": 0.002188784900536406, "phrase": "proposed_approach"}], "paper_keywords": ["Graphs", " Neighborhood systems", " Indexing", " Proximity", " Multi-dimensional data", " Similarity measures", " Ranking", " Information retrieval"], "paper_abstract": "We propose a methodology based on a structure called neighborhood graphs for indexing and retrieving multi-dimensional data. In accordance with the increase of the quantity of data, it gets more and more important to process multi-dimensional data. Processing of data includes various tasks, for instance, mining, classifying, clustering, to name a few. However, to enable the effective processing of such multi-dimensional data, it is often necessary to locate each data precisely in the multi-dimensional space where the data reside so that each data can be effectively retrieved for processing. This amounts to solving the point location problem (neighborhood search) for multi-dimensional space. In this paper, in order to utilize the structure of neighborhood graphs as an indexing structure for multi-dimensional data, we propose the following: i) a local insertion and deletion method, and ii) an incremental neighborhood graph construction method. The first method enables to cope with the problem incurred from the updating of the graph. The second method realizes fast neighborhood graph construction from scratch, through the recursive application of the first method. Several experiments are conducted to evaluate the proposed approach, and the results indicate the effectiveness of our approach.", "paper_title": "Neighborhood graphs for indexing and retrieving multi-dimensional data", "paper_id": "WOS:000273788300004"}