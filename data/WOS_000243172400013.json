{"auto_keywords": [{"score": 0.04330320170884127, "phrase": "mqo"}, {"score": 0.009758871040864122, "phrase": "common_tasks"}, {"score": 0.00481495049065317, "phrase": "multiple-query_optimization_problem"}, {"score": 0.004207230913063179, "phrase": "multiple-query_optimization"}, {"score": 0.0037070855410818986, "phrase": "different_set"}, {"score": 0.0032938942910948096, "phrase": "right_set"}, {"score": 0.0030787405733989615, "phrase": "total_execution_time"}, {"score": 0.002805597755796506, "phrase": "np-hard_problem"}, {"score": 0.0022522565004588113, "phrase": "first_attempt"}, {"score": 0.0021408862709571615, "phrase": "evolutionary_technique"}, {"score": 0.0021049977753042253, "phrase": "genetic_algorithms"}], "paper_keywords": ["database query processing", " genetic algorithms (GA)", " heuristics techniques", " multiple-query optimization (MQO)"], "paper_abstract": "Producing answers to a set of queries with common tasks efficiently is known as the multiple-query optimization (MQO) problem. Each query can have several alternative evaluation plans, each with a different set of tasks. Therefore, the goal of MQO is to choose the right set of plans for queries which minimizes the total execution time by performing common tasks only once. Since MQO is an NP-hard problem, several, mostly heuristics based, solutions have been proposed for solving it. To the best of our knowledge, this correspondence is the first attempt to solve MQO using an evolutionary technique, genetic algorithms.", "paper_title": "Genetic algorithm for the multiple-query optimization problem", "paper_id": "WOS:000243172400013"}