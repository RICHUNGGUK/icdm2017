{"auto_keywords": [{"score": 0.039645631597471497, "phrase": "vt"}, {"score": 0.02774913831374622, "phrase": "prism"}, {"score": 0.006603210913765487, "phrase": "hidden_variables"}, {"score": 0.004935408621611656, "phrase": "probabilistic_grammars"}, {"score": 0.00481495049065317, "phrase": "viterbi_training"}, {"score": 0.0047842129415024475, "phrase": "prism._vt"}, {"score": 0.004545240514015278, "phrase": "efficient_way"}, {"score": 0.004473027089024405, "phrase": "probabilistic_models"}, {"score": 0.004387877144428992, "phrase": "observation_y"}, {"score": 0.003909828033238252, "phrase": "statistical_modeling"}, {"score": 0.0038353580177342118, "phrase": "logic-based_probabilistic_modeling_system"}, {"score": 0.0035513449460436177, "phrase": "vt's_termination_condition"}, {"score": 0.0034392837410790293, "phrase": "good_prediction_performance"}, {"score": 0.003373747274924813, "phrase": "em."}, {"score": 0.0032359856233193504, "phrase": "inference_methods"}, {"score": 0.003164630219504255, "phrase": "map"}, {"score": 0.003143912209245944, "phrase": "vb."}, {"score": 0.0030642636185693054, "phrase": "best_parsing_accuracy"}, {"score": 0.002948547333717581, "phrase": "similar_experiment"}, {"score": 0.0029296894027177225, "phrase": "classification_tasks"}, {"score": 0.002901627749562029, "phrase": "hidden_variable"}, {"score": 0.002864628676257225, "phrase": "prediction_target"}, {"score": 0.002738797804069541, "phrase": "superior_performance"}, {"score": 0.0026523079380037706, "phrase": "single_probability"}, {"score": 0.0026268961477241026, "phrase": "single_explanation"}, {"score": 0.002610090005760493, "phrase": "viterbi_explanation"}, {"score": 0.002585081657512565, "phrase": "exclusiveness_condition"}, {"score": 0.0025603123094624265, "phrase": "prism_programs"}, {"score": 0.0024794452815176597, "phrase": "vt."}, {"score": 0.0023252743521788876, "phrase": "prism_program"}, {"score": 0.0022302306304023602, "phrase": "specific_vt_algorithm"}, {"score": 0.002208853811052348, "phrase": "specific_model"}, {"score": 0.0021049977753042253, "phrase": "prism_flag"}], "paper_keywords": ["Viterbi training", " PRISM", " exclusiveness condition"], "paper_abstract": "VT (Viterbi training), or hard expectation maximization (EM), is an efficient way of parameter learning for probabilistic models with hidden variables. Given an observation y, it searches for a state of hidden variables x that maximizes p(x, y vertical bar theta) by coordinate ascent on parameters theta and x. In this paper we introduce VT to PRogramming In Statistical Modeling (PRISM), a logic-based probabilistic modeling system for generative models. VT improves PRISM in three ways. First, VT in PRISM converges faster than EM in PRISM due to VT's termination condition. Second, parameters learned by VT often show good prediction performance compared with those learned by EM. We conducted two parsing experiments with probabilistic grammars while learning parameters by a variety of inference methods, i.e. VT, EM, MAP and VB. The result is that VT achieved the best parsing accuracy among them in both experiments. Also, we conducted a similar experiment for classification tasks where a hidden variable is not a prediction target unlike probabilistic grammars. We found that in such a case VT does not necessarily yield superior performance. Third, since VT always deals with a single probability of a single explanation, Viterbi explanation, the exclusiveness condition imposed on PRISM programs is no more required if we learn parameters by VT. Last but not least, we can say that as VT in PRISM is general and applicable to any PRISM program, it largely reduces the need for the user to develop a specific VT algorithm for a specific model. Furthermore, since VT in PRISM can be used just by setting a PRISM flag appropriately, it makes VT easily accessible to (probabilistic) logic programmers.", "paper_title": "Viterbi training in PRISM", "paper_id": "WOS:000349668800002"}