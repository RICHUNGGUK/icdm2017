{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "global_chance_constraints"}, {"score": 0.004766683200410046, "phrase": "stochastic_constraint_satisfaction_problems"}, {"score": 0.004624751696958501, "phrase": "powerful_modeling_framework"}, {"score": 0.0043753813457279404, "phrase": "pspace_task"}, {"score": 0.003935892934907777, "phrase": "classical_csps"}, {"score": 0.0037993970934472243, "phrase": "classical_constraint"}, {"score": 0.003594369823549604, "phrase": "increased_space_requirements"}, {"score": 0.003558294449586273, "phrase": "weak_constraint_propagation"}, {"score": 0.0032494292163722065, "phrase": "filtering_algorithms"}, {"score": 0.0031366648074858555, "phrase": "deterministic_version"}, {"score": 0.0030895394261534776, "phrase": "chance_constraints"}, {"score": 0.0029672941061574375, "phrase": "existing_propagators"}, {"score": 0.0029374939071038146, "phrase": "current_constraint"}, {"score": 0.0028070431733705735, "phrase": "constraint_propagation"}, {"score": 0.0026959452932289797, "phrase": "test_bed"}, {"score": 0.002563219920877287, "phrase": "scenario-based_stochastic_constraint_programming"}, {"score": 0.0023053339328456234, "phrase": "run_time"}, {"score": 0.0021917966722180132, "phrase": "stochastic_constraint_satisfaction"}, {"score": 0.0021697677572213086, "phrase": "optimization_problems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Stochastic constraint programming", " Stochastic constraint satisfaction", " Global chance constraints", " Filtering algorithms", " Stochastic alldifferent"], "paper_abstract": "Stochastic Constraint Satisfaction Problems (SCSPs) are a powerful modeling framework for problems under uncertainty. To solve them is a PSPACE task. The only complete solution approach to date - scenario-based stochastic constraint programming - compiles SCSPs clown into classical CSPs. This allows the reuse of classical constraint solvers to solve SCSPs, but at the cost of increased space requirements and weak constraint propagation. This paper tries to overcome these drawbacks by automatically synthesizing filtering algorithms for global chance constraints. These filtering algorithms are parameterized by propagators for the deterministic version of the chance constraints. This approach allows the reuse of existing propagators in current constraint solvers and it has the potential to enhance constraint propagation. Our results show that, for the test bed considered in this work, our approach is superior to scenario-based stochastic constraint programming. For these instances, our approach is more scalable, it produces more compact formulations, it is more efficient in terms of run time and more effective in terms of pruning for both stochastic constraint satisfaction and optimization problems. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Filtering algorithms for global chance constraints", "paper_id": "WOS:000307612200004"}