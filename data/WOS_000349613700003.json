{"auto_keywords": [{"score": 0.04825016108360526, "phrase": "spi"}, {"score": 0.047260640167231756, "phrase": "process_engineers"}, {"score": 0.00481495049065317, "phrase": "software_process_improvement_approach-a_retrospective_systematization"}, {"score": 0.004671342094877447, "phrase": "successful_software_process_improvement"}, {"score": 0.004454237726525018, "phrase": "standardized_spi_methods"}, {"score": 0.004377806391261418, "phrase": "capability_maturity_model_integration"}, {"score": 0.004340083415211737, "phrase": "cmmi"}, {"score": 0.004284100953217494, "phrase": "international_organization_for_standardization"}, {"score": 0.004247379799261345, "phrase": "iso"}, {"score": 0.0037623642073222547, "phrase": "existing_spi_models"}, {"score": 0.0037138072936226, "phrase": "new_approaches"}, {"score": 0.0036817833826578395, "phrase": "company-specific_spi_programs"}, {"score": 0.003525744120930142, "phrase": "german_v-modell_xt"}, {"score": 0.0033909518548844047, "phrase": "new_method"}, {"score": 0.003361702510958392, "phrase": "artifact-based_spi."}, {"score": 0.0032331613500559764, "phrase": "construction_procedures"}, {"score": 0.003205268682789165, "phrase": "spi_models"}, {"score": 0.003029722317983915, "phrase": "process_engineers'_expertise"}, {"score": 0.0028145455182562807, "phrase": "structured_reflection"}, {"score": 0.0026259694526633037, "phrase": "construction_procedure"}, {"score": 0.0024288443150616056, "phrase": "applied_methods"}, {"score": 0.0023974563359295043, "phrase": "design_decisions"}, {"score": 0.0022957232752482196, "phrase": "reference_procedure"}, {"score": 0.0022758994740331258, "phrase": "tested_methods"}, {"score": 0.002169882514603539, "phrase": "spi_approaches"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software process improvement", " SPI", " methodology", " construction procedure", " experience report", " artifact-orientation", " V-Modell XT"], "paper_abstract": "Structured approaches are beneficial for successful software process improvement (SPI). However, process engineers often struggle with standardized SPI methods, such as capability maturity model integration (CMMI) or International Organization for Standardization (ISO) 15504, and complain about too generic or voluminous approaches or methods that are alien to the organizations in which SPI is conducted. Therefore, process engineers need to customize existing SPI models or develop new approaches for company-specific SPI programs. While conducting SPI in the context of the German V-Modell XT, we faced the need to develop a new method for artifact-based SPI. In the process, we found that the construction procedures of SPI models are barely documented, and thus, their successful adaptation solely depends on the process engineers' expertise. With this article, we aim to address this lack of support and provide a structured reflection on our experiences from creating and adopting the Artifact-based Software Process Improvement & Management (ArSPI) model. We present the steps of the construction procedure, the validation, and the dissemination of the model. Furthermore, we detail on the applied methods, the design decisions, and the challenges encountered. By providing a reference procedure and tested methods, we support process engineers with the creation and adoption of SPI approaches. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Crafting a software process improvement approach-a retrospective systematization", "paper_id": "WOS:000349613700003"}