{"auto_keywords": [{"score": 0.041078685670043524, "phrase": "proper_interval_graph"}, {"score": 0.015483621666231845, "phrase": "proper_interval_graphs"}, {"score": 0.00481495049065317, "phrase": "bicompatible_elimination_orderings"}, {"score": 0.003438058620195309, "phrase": "nc_parallel_algorithm"}, {"score": 0.003208999546225013, "phrase": "polynomial_number"}, {"score": 0.003088384809415812, "phrase": "simd_crcw_pram"}, {"score": 0.0026698611202305715, "phrase": "parallel_computation"}, {"score": 0.002325689073229477, "phrase": "first_nc_parallel_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithms", " Parallel algorithms", " Chordal graphs", " Proper interval graphs"], "paper_abstract": "In this paper, we first show how a certain ordering of vertices, called bicompatible elimination ordering (BCO), of a proper interval graph can be used to solve efficiently several problems in proper interval graphs. We, then, propose an NC parallel algorithm (i.e., polylogarithmic-time employing a polynomial number of processors) in SIMD CRCW PRAM (Single Instruction Stream Multiple Data Stream Concurrent Read Concurrent Write Parallel Random Access Machine) model of parallel computation to compute a BCO of a proper interval graph. To the best of our knowledge, this is the first NC parallel algorithm to compute a BCO of a proper interval graph. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A parallel algorithm for generating bicompatible elimination orderings of proper interval graphs", "paper_id": "WOS:000270126700005"}