{"auto_keywords": [{"score": 0.046097278605376116, "phrase": "disconnected_cut"}, {"score": 0.03761079750242035, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "cut_sets"}, {"score": 0.0046407174174471644, "phrase": "connected_graph"}, {"score": 0.004167576249058047, "phrase": "cut_u"}, {"score": 0.003943276844539609, "phrase": "k-cut_u"}, {"score": 0.0037424924896976093, "phrase": "disconnected_cut_problem"}, {"score": 0.003218977531454772, "phrase": "close_relationship"}, {"score": 0.003189408489240117, "phrase": "contractibility_problems"}, {"score": 0.002684585839646811, "phrase": "fixed_k"}, {"score": 0.0026032174806986256, "phrase": "fixed_integer_g"}, {"score": 0.0025477277691093097, "phrase": "fpt_algorithm"}, {"score": 0.0024704972295365164, "phrase": "euler_genus"}, {"score": 0.002308739003030848, "phrase": "fpt"}, {"score": 0.002287485527155396, "phrase": "graph_class"}, {"score": 0.0021909737736168122, "phrase": "polynomial_time"}, {"score": 0.002177522137110944, "phrase": "minor-closed_classes"}, {"score": 0.002144252482711611, "phrase": "apex_graph"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cut set", " 2K2-partition", " Graph contractibility"], "paper_abstract": "For a connected graph G = (V, E), a subset U subset of V is a disconnected cut if U disconnects G and the subgraph G[U] induced by U is disconnected as well. A cut U is a k-cut if G[U] contains exactly k(>= 1) components. More specifically, a k-cut U is a (k, l)-cut if V \\ U induces a subgraph with exactly l(>= 2) components. The DISCONNECTED CUT problem is to test whether a graph has a disconnected cut and is known to be NP-complete. The problems k-CUT and (k, l)-CUT are to test whether a graph has a k-cut or (k, l)-cut, respectively. By pinpointing a close relationship to graph contractibility problems we show that (k, l)-CUT is in P for k = 1 and any fixed constant l >= 2, while it is NP-complete for any fixed pair k, l >= 2. We then prove that k-CUT is in P for k = 1 and NP-complete for any fixed k >= 2. On the other hand, for every fixed integer g >= 0, we present an FPT algorithm that solves (k, l)-CUT on graphs of Euler genus at most g when parameterized by k + l. By modifying this algorithm we can also show that k-CUT is in FPT for this graph class when parameterized by k. Finally, we show that DISCONNECTED CUT is solvable in polynomial time for minor-closed classes of graphs excluding some apex graph. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Parameterizing cut sets in a graph by the number of their components", "paper_id": "WOS:000296037000010"}