{"auto_keywords": [{"score": 0.036071937185809574, "phrase": "lower_variance"}, {"score": 0.029895194600530292, "phrase": "previous_work"}, {"score": 0.00481495049065317, "phrase": "approximate_string_matching"}, {"score": 0.004635881163634672, "phrase": "score_vector"}, {"score": 0.004548848077202625, "phrase": "text_string"}, {"score": 0.00444655284354007, "phrase": "pattern_string"}, {"score": 0.004412965940679449, "phrase": "length_m"}, {"score": 0.003923532450854754, "phrase": "deterministic_time"}, {"score": 0.003763186299187111, "phrase": "unbiased_estimator"}, {"score": 0.0036093693971289754, "phrase": "actual_score"}, {"score": 0.0035281264325950556, "phrase": "adjustable_parameter"}, {"score": 0.003448705829033573, "phrase": "computation_time"}, {"score": 0.0032826873794020253, "phrase": "deterministic_time_o"}, {"score": 0.0030311679447397725, "phrase": "score_values"}, {"score": 0.0026741832921475667, "phrase": "previous_work's_variance"}, {"score": 0.002497470177389344, "phrase": "probabilistic_characteristics"}, {"score": 0.0023412849215629986, "phrase": "string_matching"}, {"score": 0.002305974875400655, "phrase": "class_complements"}, {"score": 0.0021782296784218923, "phrase": "weighted_case"}, {"score": 0.002153540857619362, "phrase": "higher_dimensions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Convolution", " FFT", " Approximate string matching", " Randomized algorithms"], "paper_abstract": "Several randomized algorithms make use of convolution to estimate the score vector of matches between a text string of length N and a pattern string of length M, i.e., the vector obtained when the pattern is slid along the text, and the number of matches is counted for each position. These algorithms run in deterministic time O (kN log M), and find an unbiased estimator of the scores whose variance is (M - c)(2)/k where c is the actual score; here k is an adjustable parameter that provides a tradeoff between computation time and lower variance. This paper provides an algorithm that also runs in deterministic time O (kN log M) but achieves a lower variance of min(M/k, M - c)(M - c)/k. For all score values c that are less than M - (M/k), our variance is essentially a factor of k smaller than in previous work, and for M - (M/k) < c <= M it matches the previous work's variance. As in the previous work, our estimator is unbiased, and we make no assumption about the probabilistic characteristics of the input, or about the size of the alphabet, and our solution extends to string matching with classes, class complements, \"never match\" and \"always match\" symbols, to the weighted case and to higher dimensions. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A lower-variance randomized algorithm for approximate string matching", "paper_id": "WOS:000322610700010"}