{"auto_keywords": [{"score": 0.04898689815940366, "phrase": "best_mapping"}, {"score": 0.01557684768947525, "phrase": "application_development"}, {"score": 0.00481495049065317, "phrase": "runtime_optimization"}, {"score": 0.004534517530868195, "phrase": "heterogeneous_system"}, {"score": 0.004472146692254812, "phrase": "multiple_variables"}, {"score": 0.004370087541308677, "phrase": "runtime_systems"}, {"score": 0.004040123129261597, "phrase": "dynamic_events"}, {"score": 0.004002972723329302, "phrase": "varying_problem_sizes"}, {"score": 0.0036665842836420223, "phrase": "task_execution"}, {"score": 0.003517223847512266, "phrase": "well-known_causes"}, {"score": 0.0034210342328868017, "phrase": "ongoing_miniaturization"}, {"score": 0.0033739270918502285, "phrase": "growing_complexity"}, {"score": 0.0033428820402140683, "phrase": "heterogeneous_computing"}, {"score": 0.0032364494905485677, "phrase": "successful_application_execution"}, {"score": 0.003118942369691329, "phrase": "heterogeneous_systems"}, {"score": 0.0030056887638095883, "phrase": "different_types"}, {"score": 0.002702415623060517, "phrase": "dynamic_performance-oriented_task_mapping"}, {"score": 0.002396179086883187, "phrase": "minor_assistance"}, {"score": 0.0022458849724980904, "phrase": "application_performance"}, {"score": 0.002164264600379492, "phrase": "new_metric_and_automatic_data_management"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heterogeneous computing", " Accelerators", " Fault-tolerant systems", " Runtime systems"], "paper_abstract": "The best mapping of a task to one or more processing units in a heterogeneous system depends on multiple variables. Several approaches based on runtime systems have been proposed that determine the best mapping under given circumstances automatically. Some of them also consider dynamic events like varying problem sizes or resource competition that may change the best mapping during application runtime but only a few even consider that task execution may fail. While aging or overheating are well-known causes for sudden faults, the ongoing miniaturization and the growing complexity of heterogeneous computing are expected to create further threats for successful application execution. However, if properly incorporated, heterogeneous systems also offer the opportunity to recover from different types of faults in hardware as well as in software. In this work, we propose a combination of both topics, dynamic performance-oriented task mapping and dependability, to leverage this opportunity. As we will show, this combination not only enables tolerating faults in hardware and software with minor assistance of the developer, it also provides benefits for application development itself and for application performance in case of faults due to a new metric and automatic data management. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Automatic task mapping and heterogeneity-aware fault tolerance: The benefits for runtime optimization and application development", "paper_id": "WOS:000367492700013"}