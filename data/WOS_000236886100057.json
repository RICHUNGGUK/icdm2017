{"auto_keywords": [{"score": 0.03921658896613621, "phrase": "maximum_flow_time"}, {"score": 0.015719716506582538, "phrase": "aggregated_links"}, {"score": 0.011680789766926132, "phrase": "block"}, {"score": 0.004680624753255133, "phrase": "online_job_scheduling_problem"}, {"score": 0.004251210982670317, "phrase": "k_disjoint_chains"}, {"score": 0.0037959868107895053, "phrase": "release_times"}, {"score": 0.0035869274480340727, "phrase": "deterministic_online_algorithm"}, {"score": 0.0032946562900625187, "phrase": "randomized_algorithms"}, {"score": 0.0029249294679606656, "phrase": "simple_competitive_analysis"}, {"score": 0.0028111220617485985, "phrase": "overload_conditions"}, {"score": 0.0026864540069792275, "phrase": "short_amount"}, {"score": 0.0026113524778702602, "phrase": "block's_performance"}, {"score": 0.0024673738215365104, "phrase": "efficient_offline_algorithms"}, {"score": 0.0021054272643765944, "phrase": "np"}], "paper_keywords": [""], "paper_abstract": "We study an online job scheduling problem arising in networks with aggregated links. The goal is to schedule n jobs, divided into k disjoint chains, on m identical machines, without preemption, so that the jobs within each chain complete in the order of release times and the maximum flow time is minimized. We present a deterministic online algorithm Block with competitive ratio O(root n/m), and show a matching lower bound, even for randomized algorithms. The performance bound for Block we derive in the paper is, in fact, more subtle than a simple competitive analysis, and it shows that in overload conditions (when many jobs are released in a short amount of time), Block's performance is close to the optimum. We also show efficient offline algorithms to minimize maximum flow time and makespan in our model for k = 1, and prove that minimizing the maximum flow time and makespan for k,m >= 2 is NP-hard.", "paper_title": "Competitive analysis of scheduling algorithms for aggregated links", "paper_id": "WOS:000236886100057"}