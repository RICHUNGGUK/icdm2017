{"auto_keywords": [{"score": 0.033910962391840646, "phrase": "lexicographic_csps"}, {"score": 0.00481495049065317, "phrase": "constraint_satisfaction_problems"}, {"score": 0.0047357308775561255, "phrase": "simple_csp_formalism"}, {"score": 0.004688823162073856, "phrase": "multi-attribute_preference_problems"}, {"score": 0.004565984572487962, "phrase": "hard_constraints"}, {"score": 0.004244449986839909, "phrase": "lexicographic_order"}, {"score": 0.004216362268148017, "phrase": "complete_assignments"}, {"score": 0.0041745773539728975, "phrase": "variable_importance"}, {"score": 0.004051680770486568, "phrase": "feasibility_constraints"}, {"score": 0.003984968827278219, "phrase": "usual_manner"}, {"score": 0.0039323878878973284, "phrase": "preference_representation"}, {"score": 0.00361906209437624, "phrase": "ordinary_csp_algorithms"}, {"score": 0.0034203358208034973, "phrase": "important_exception"}, {"score": 0.003352825186671963, "phrase": "preference_order"}, {"score": 0.0031372369299648203, "phrase": "full_lexicographic_ordering"}, {"score": 0.00293547027122617, "phrase": "present_formulation"}, {"score": 0.0028584344002749395, "phrase": "lexicographic_ordering"}, {"score": 0.0028394925080958205, "phrase": "multiobjective_optimisation"}, {"score": 0.0026130182682465096, "phrase": "simple_structure"}, {"score": 0.00256993314099902, "phrase": "specialised_algorithms"}, {"score": 0.0024941578231560055, "phrase": "implicit_cost_function"}, {"score": 0.0024286751532861476, "phrase": "optimal_values"}, {"score": 0.0024125742420201, "phrase": "successive_variables"}, {"score": 0.002310482790486003, "phrase": "appropriate_variable"}, {"score": 0.0021049977753042253, "phrase": "basic_lexically_ordered_search"}], "paper_keywords": ["Constraint satisfaction", " Preference", " Lexicographic order", " Soft constraint", " Complete search"], "paper_abstract": "We describe a simple CSP formalism for handling multi-attribute preference problems with hard constraints, one that combines hard constraints and preferences so the two are easily distinguished conceptually and for purposes of problem solving. Preferences are represented as a lexicographic order over complete assignments based on variable importance and rankings of values in each domain. Feasibility constraints are treated in the usual manner. Since the preference representation is ordinal in character, these problems can be solved with algorithms that do not require evaluations to be represented explicitly. This includes ordinary CSP algorithms, although these cannot stop searching until all solutions have been checked, with the important exception of heuristics that follow the preference order (lexical variable and value ordering). We describe relations between lexicographic CSPs and more general soft constraint formalisms and show how a full lexicographic ordering can be expressed in the latter. We discuss relations with (T)CP-nets, highlighting the advantages of the present formulation, and we discuss the use of lexicographic ordering in multiobjective optimisation. We also consider strengths and limitations of this form of representation with respect to expressiveness and usability. We then show how the simple structure of lexicographic CSPs can support specialised algorithms: a branch and bound algorithm with an implicit cost function, and an iterative algorithm that obtains optimal values for successive variables in the importance ordering, both of which can be combined with appropriate variable ordering heuristics to improve performance. We show experimentally that with these procedures a variety of problems can be solved efficiently, including some for which the basic lexically ordered search is infeasible in practice.", "paper_title": "Lexicographically-ordered constraint satisfaction problems", "paper_id": "WOS:000273744400001"}