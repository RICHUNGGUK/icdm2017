{"auto_keywords": [{"score": 0.0441984653607014, "phrase": "abc_algorithm"}, {"score": 0.009379280981242948, "phrase": "opi_mechanism"}, {"score": 0.005124498298189602, "phrase": "opi"}, {"score": 0.00481495049065317, "phrase": "artificial_bee_colony"}, {"score": 0.0047732596509542135, "phrase": "one-position_inheritance_mechanism"}, {"score": 0.004610058444728656, "phrase": "foraging_behavior"}, {"score": 0.00457013354092966, "phrase": "honey_bees"}, {"score": 0.004491313367627919, "phrase": "good_performance"}, {"score": 0.004413846562278824, "phrase": "large_scale_optimization_problems"}, {"score": 0.003958937342925219, "phrase": "convergence_speed"}, {"score": 0.0038401488612789963, "phrase": "large_scale_optimization"}, {"score": 0.0035662378173267647, "phrase": "information_exchange"}, {"score": 0.003535320700255283, "phrase": "employed_bees"}, {"score": 0.0034441627435203804, "phrase": "separable_function"}, {"score": 0.0034143003168921114, "phrase": "opiabc"}, {"score": 0.0033699898113395328, "phrase": "higher_probability"}, {"score": 0.0033262524445013303, "phrase": "function_value_improvement"}, {"score": 0.0032830808525570903, "phrase": "worst_positions"}, {"score": 0.0032546124530508213, "phrase": "abc."}, {"score": 0.0032263862712733934, "phrase": "one-position_information_exchange"}, {"score": 0.0030754582519753474, "phrase": "promising_solutions"}, {"score": 0.0027461155463816772, "phrase": "experimental_results"}, {"score": 0.0024095777415804346, "phrase": "rotated_problems"}, {"score": 0.0023886641270884973, "phrase": "large_scale_problems"}, {"score": 0.0023068049914566975, "phrase": "test_suites"}], "paper_keywords": ["Swarm intelligence", " Artificial bee colony", " Information exchange", " Real parameter optimization", " Global optimization", " Large scale optimization"], "paper_abstract": "Artificial bee colony (ABC) algorithm simulates the foraging behavior of honey bees. It shows good performance in many application problems and large scale optimization problems. However, variation of a solution in the ABC algorithm is only employed on one dimension of the solution. This would sometimes hamper the convergence speed of the ABC algorithm, especially for large scale optimization. This paper proposes a one-position inheritance (OPI) mechanism to overcome this drawback. The OPI mechanism aims to promote information exchange amongst employed bees of the ABC algorithm. For separable function, OPIABC has a higher probability resulting in function value improvement of the worst positions than ABC. Through one-position information exchange, the OPI mechanism can assist the ABC algorithm to find promising solutions. This mechanism has been tested on a set of 25 test functions with D = 30 and on CEC 2008 test suite with D = 100 and 1,000. Experimental results show that the OPI mechanism can speed up the convergence of the ABC algorithm. After the use of OPI, the performance of the ABC algorithm is significantly improved for both rotated problems and large scale problems. OPI-ABC is also competitive on both test suites comparing with other recently proposed swarm intelligence metaheuristics (e.g. SaDE and PSO2011). Furthermore, the OPI mechanism can greatly enhance the performance of other improved ABC algorithms.", "paper_title": "Improving artificial bee colony with one-position inheritance mechanism", "paper_id": "WOS:000343289500004"}