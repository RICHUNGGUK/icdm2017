{"auto_keywords": [{"score": 0.025770059795982344, "phrase": "extended_isas"}, {"score": 0.004537631845923196, "phrase": "right_track"}, {"score": 0.004499334809770281, "phrase": "fast_development"}, {"score": 0.004461359547152617, "phrase": "application_specific_instruction-set_processors"}, {"score": 0.004081385289516914, "phrase": "huge_attention"}, {"score": 0.0039119492240482, "phrase": "processor_designers"}, {"score": 0.003829877278269543, "phrase": "processor's_instruction_set_architecture"}, {"score": 0.003578600071301459, "phrase": "appropriate_high-level_programming_model"}, {"score": 0.0034886660821793576, "phrase": "tool_flow"}, {"score": 0.003400984514637656, "phrase": "custom_instructions"}, {"score": 0.0033295966773779174, "phrase": "architecture_exploration"}, {"score": 0.003287482882222731, "phrase": "automated_fashion"}, {"score": 0.0031643005824589917, "phrase": "industry-proven_architecture_exploration_framework"}, {"score": 0.002994449398035894, "phrase": "presented_tool_flow"}, {"score": 0.002906788114295269, "phrase": "reusable_isa"}, {"score": 0.002870006736445581, "phrase": "appropriate_compiler"}, {"score": 0.0027159094186967247, "phrase": "programmable_architectures"}, {"score": 0.002658863179011018, "phrase": "asip_architecture_exploration"}, {"score": 0.0025810006125483835, "phrase": "application_analysis"}, {"score": 0.0025591748412278174, "phrase": "compiler_retargeting"}, {"score": 0.0024012441367538434, "phrase": "reliable_feedback"}, {"score": 0.0023607968604629393, "phrase": "code_size"}, {"score": 0.0023210293050850276, "phrase": "identified_cis"}, {"score": 0.0022434880661725493, "phrase": "area_consumption"}, {"score": 0.0021501863832966966, "phrase": "obtained_speedup"}, {"score": 0.0021229583685841405, "phrase": "invested_hardware_effort"}, {"score": 0.0021049977753042253, "phrase": "new_cis"}], "paper_keywords": ["Compiler/architecture co-design", " Code-selection", " Instruction Set Extension (ISE)", " Application Specific Instruction-set Processors (ASIP)"], "paper_abstract": "Compiler-in-the-Loop (CiL) architecture exploration is widely accepted as being the right track for fast development of Application Specific Instruction-set Processors (ASIP). In this context, both, automatic application-specific Instruction Set Extension (ISE) and code generation by a compiler have received huge attention in the past. Together, both techniques enable processor designers to quickly adapt a processor's Instruction Set Architecture (ISA) to the needs of a certain set of applications and to provide an appropriate high-level programming model. This manuscript presents a tool flow for identification and utilization of Custom Instructions (CIs) during architecture exploration in an automated fashion. By embedding this tool flow in an industry-proven architecture exploration framework, a methodology for simultaneous compiler/architecture co-exploration is derived. The advantage of the presented tool flow lies in its ability to develop a reusable ISA and an appropriate compiler for a set of applications and therefore to support the design of programmable architectures. In addition, ASIP architecture exploration is effectively improved since time consuming application analysis and compiler retargeting is automated. Through compilation and simulation of several benchmarks in accordance to extended ISAs, reliable feedback on speedup, code size and usability of identified CIs is provided. Furthermore, results on area consumption for extended ISAs are presented in order to compare the obtained speedup with the invested hardware effort of new CIs.", "paper_title": "A retargetable framework for compiler/architecture co-development", "paper_id": "WOS:000297366500005"}