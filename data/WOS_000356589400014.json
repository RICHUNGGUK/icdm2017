{"auto_keywords": [{"score": 0.04242502243038622, "phrase": "failover_processing"}, {"score": 0.00481495049065317, "phrase": "extended_kvs-based_messaging_system"}, {"score": 0.00470862827326028, "phrase": "big_data_era"}, {"score": 0.00465634671242413, "phrase": "messaging_systems"}, {"score": 0.004528156929805637, "phrase": "large_volumes"}, {"score": 0.004477870190590885, "phrase": "message_traffic"}, {"score": 0.004428139418750855, "phrase": "high_scalability"}, {"score": 0.00428222231579898, "phrase": "conventional_systems"}, {"score": 0.004118026552723285, "phrase": "first_issue"}, {"score": 0.0038510053729959074, "phrase": "second_issue"}, {"score": 0.003561205990687285, "phrase": "resilient_messaging_system"}, {"score": 0.0034245614958572012, "phrase": "memory_key-value_store"}, {"score": 0.0031315358193567708, "phrase": "multiple_servers"}, {"score": 0.0030967107893195246, "phrase": "normal_processing_state"}, {"score": 0.0029945352738604742, "phrase": "messaging_services"}, {"score": 0.0029282926103224717, "phrase": "messaging_system"}, {"score": 0.002722930209707764, "phrase": "improved_resilience"}, {"score": 0.0025892330566358503, "phrase": "slowdown_kvs_exclusion"}, {"score": 0.0024211009463218484, "phrase": "evaluation_results"}, {"score": 0.0023675132064088803, "phrase": "proposed_system"}, {"score": 0.0022386642196006567, "phrase": "conventional_method"}, {"score": 0.002164738347530834, "phrase": "error_responses"}, {"score": 0.0021049977753042253, "phrase": "server_failures"}], "paper_keywords": ["KVS (key-value store)", " in-memory data grid", " messaging queue", " distribution system"], "paper_abstract": "In the big data era, messaging systems are required to process large volumes of message traffic with high scalability and availability. However, conventional systems have two issues regarding availability. The first issue is that failover processing itself has a risk of failure. The second issue is to find a trade-off between consistency and availability. We propose a resilient messaging system based on a distributed in-memory key-value store (KVS). Its servers are interconnected with each other and messages are distributed to multiple servers in normal processing state. This architecture can continue messaging services wherever in the messaging system server/process failures occur without using failover processing. Furthermore, we propose two methods for improved resilience: the round-robin method with a slowdown KVS exclusion and the two logical KVS counter-rotating rings to provide short-term-availability in the messaging system. Evaluation results demonstrate that the proposed system can continue service without failover processing. Compared with the conventional method, our proposed distribution method reduced 92% of error responses to clients caused by server failures.", "paper_title": "Improved Resilience through Extended KVS-Based Messaging System", "paper_id": "WOS:000356589400014"}