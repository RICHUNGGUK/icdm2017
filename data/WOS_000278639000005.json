{"auto_keywords": [{"score": 0.028622220448588382, "phrase": "alekhnovich"}, {"score": 0.00481495049065317, "phrase": "reed-solomon_codes"}, {"score": 0.004570759604335229, "phrase": "reed-solomon_code"}, {"score": 0.004282787299993434, "phrase": "well-known_guruswami-sudan_algorithm"}, {"score": 0.0034322572683276654, "phrase": "designed_list_size"}, {"score": 0.0033439771810057717, "phrase": "multiplicity_parameter"}, {"score": 0.0032792555200980783, "phrase": "parameters_land_s"}, {"score": 0.0030924870122337905, "phrase": "complexity_analysis"}, {"score": 0.003012919635505122, "phrase": "high_rate_reed-solomon_codes"}, {"score": 0.002559859451119449, "phrase": "key_equations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Guruswami-Sudan algorithm", " Interpolation", " List decoding", " Reed-Solomon codes"], "paper_abstract": "A Reed-Solomon code of length it can be list decoded using the well-known Guruswami-Sudan algorithm. By a result of Alekhnovich (2005) the interpolation part in this algorithm can be clone in complexity O(s(4)l(4)n log(2) n log log n), where I denotes the designed list size and s the multiplicity parameter. The parameters land s are sometimes considered to be constants in the complexity analysis, but for high rate Reed-Solomon codes, their values can be very large. In this paper we will combine ideas from Alekhnovich (2005) and the concept of key equations to get an algorithm that has complexity O(sl(4)n log(2) n log log n). This compares favorably to the complexities of other known interpolation algorithms. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Key equations for list decoding of Reed-Solomon codes and how to solve them", "paper_id": "WOS:000278639000005"}