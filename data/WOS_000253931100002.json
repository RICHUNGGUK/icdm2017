{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "modular"}, {"score": 0.0046046429665581555, "phrase": "concurrent_systems"}, {"score": 0.004306205029641728, "phrase": "bottom-up_approach"}, {"score": 0.004087469540575263, "phrase": "modular_structure"}, {"score": 0.0037658881407605445, "phrase": "specific_ways"}, {"score": 0.0036826452656927877, "phrase": "complete_software_system"}, {"score": 0.0031726587374218277, "phrase": "new_functionalities"}, {"score": 0.0030338645940033875, "phrase": "old_requirements"}, {"score": 0.0027741761880779535, "phrase": "new_properties"}, {"score": 0.0027331033178323145, "phrase": "upgraded_system"}, {"score": 0.0023719332915829268, "phrase": "ccs_process"}, {"score": 0.002217880187104576, "phrase": "selective_mu-calculus_formulae"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["modular verification", " model checking", " CCS", " logic"], "paper_abstract": "In this paper, we propose a bottom-up approach for the verification of systems with modular structure: we prove that when the modules are composed in specific ways, the complete software system verifies a composition of the properties each component does. We focus on the process of upgrading systems with new functionalities, where the validity of old requirements needs to be ensured, but also an understanding of the new properties the upgraded system would enjoy is useful. In this work, we assume each component to be specified by a CCS process, and the properties to be expressed by selective mu-calculus formulae. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "Modular formal verification of specifications of concurrent systems", "paper_id": "WOS:000253931100002"}