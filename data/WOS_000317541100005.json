{"auto_keywords": [{"score": 0.04226194286966078, "phrase": "unconventional_programming_models"}, {"score": 0.03843856552198327, "phrase": "mgs"}, {"score": 0.00481495049065317, "phrase": "spatial_computing"}, {"score": 0.004721162131188487, "phrase": "modern_programming_languages"}, {"score": 0.004363846362238565, "phrase": "arbitrary_nested_data_structures"}, {"score": 0.003728000957725218, "phrase": "arbitrary_nested_topological_collections"}, {"score": 0.0033452741392850523, "phrase": "different_classes"}, {"score": 0.0032800186243040663, "phrase": "neighborhood_relationships"}, {"score": 0.0030314419455512013, "phrase": "programming_point"}, {"score": 0.0028293966058473476, "phrase": "arbitrary_nested_spatial_structures"}, {"score": 0.0027469703311742647, "phrase": "hierarchical_form"}, {"score": 0.0023928819778638055, "phrase": "mgs_pattern-matching_facilities"}, {"score": 0.0021049977753042253, "phrase": "larger_class"}], "paper_keywords": ["MGS", " topological collection", " transformation", " topological rewriting", " nested data structure", " chemical computation", " Lindenmayer systems", " cellular automata", " data field", " GBF", " fraglet"], "paper_abstract": "Modern programming languages allow the definition and the use of arbitrary nested data structures but this is not generally considered in unconventional programming models. In this paper, we present arbitrary nested topological collections in MGS, a spatial computing language. By considering different classes of neighborhood relationships, MGS can emulate several unconventional computing models from a programming point of view. The use of arbitrary nested spatial structures allows a hierarchical form of coupling between them. Furthermore, we propose an extension of the MGS pattern-matching facilities to handle nesting explicitly. This makes possible the emulation of a larger class of unconventional programming models.", "paper_title": "Unconventional and Nested Computations in Spatial Computing", "paper_id": "WOS:000317541100005"}