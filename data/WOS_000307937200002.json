{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cuckoo_hashing"}, {"score": 0.03825634756854719, "phrase": "available_items"}, {"score": 0.004674952036988355, "phrase": "significantly_the_design"}, {"score": 0.004640590144749795, "phrase": "efficient_data_structures"}, {"score": 0.004539005582217309, "phrase": "hash_tables"}, {"score": 0.004231699728933577, "phrase": "n_locations"}, {"score": 0.0037463983616303786, "phrase": "hashing_handle"}, {"score": 0.0036778708850237814, "phrase": "successful_assignment"}, {"score": 0.003597284507308585, "phrase": "chosen_locations"}, {"score": 0.0035708152831417104, "phrase": "practical_evaluations"}, {"score": 0.0035445401296650535, "phrase": "theoretical_analysis"}, {"score": 0.0033288399506044763, "phrase": "large_proportion"}, {"score": 0.0031494088980556934, "phrase": "small_values"}, {"score": 0.0029686314779877525, "phrase": "critical_value"}, {"score": 0.002903540062437197, "phrase": "high_probability"}, {"score": 0.0024495702960480076, "phrase": "open_question"}, {"score": 0.0024225560967529778, "phrase": "mitzenmacher"}, {"score": 0.002404798934685747, "phrase": "esa"}, {"score": 0.0023346234464901978, "phrase": "experimental_results"}, {"score": 0.0022250584824198218, "phrase": "hypergraph_setting"}, {"score": 0.0021682027434117095, "phrase": "related_typical_properties"}, {"score": 0.0021522261505574035, "phrase": "random_k_-uniform_hypergraphs"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["cuckoo hashing", " random hypergraphs", " subgraphs of the k-core"], "paper_abstract": "The paradigm of many choices has influenced significantly the design of efficient data structures and, most notably, hash tables. Cuckoo hashing is a technique that extends this concept. There, we are given a table with n locations, and we assume that each location can hold one item. Each item to be inserted chooses randomly k = 2 locations and has to be placed in any one of them. How much load can cuckoo hashing handle before collisions prevent the successful assignment of the available items to the chosen locations? Practical evaluations and theoretical analysis of this method have shown that one can allocate a number of elements that is a large proportion of the size of the table, being very close to 1 even for small values of k such as 4 or 5. In this paper we show that there is a critical value for this proportion: with high probability, when the amount of available items is below this value, then these can be allocated successfully, but when it exceeds this value, the allocation becomes impossible. We give explicitly for each k = 3 this critical value. This answers an open question posed by Mitzenmacher (ESA '09) and underpins theoretically the experimental results. Our proofs are based on the translation of the question into a hypergraph setting, and the study of the related typical properties of random k -uniform hypergraphs. (C) 2012 Wiley Periodicals, Inc. Random Struct., 2012", "paper_title": "Sharp load thresholds for cuckoo hashing", "paper_id": "WOS:000307937200002"}