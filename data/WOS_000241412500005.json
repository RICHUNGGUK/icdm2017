{"auto_keywords": [{"score": 0.03162386513424821, "phrase": "previous_works"}, {"score": 0.02881858386788793, "phrase": "elliptic_curves"}, {"score": 0.004554488671294504, "phrase": "modular_exponentiation"}, {"score": 0.004447201233380302, "phrase": "abelian_group"}, {"score": 0.0041074234667687875, "phrase": "batch_verification"}, {"score": 0.00347574024760684, "phrase": "small_weight"}, {"score": 0.0031342307827666675, "phrase": "individual_verification"}, {"score": 0.0028487656293168795, "phrase": "second_one"}, {"score": 0.0026518169452004465, "phrase": "small_finite_fields"}, {"score": 0.0025892330566358503, "phrase": "sparse_frobenius_expansion"}, {"score": 0.002548331088496964, "phrase": "small_integer_coefficients"}, {"score": 0.0024488738006005133, "phrase": "complex_exponent_test"}, {"score": 0.0021049977753042253, "phrase": "nine_elliptic_curve_additions"}], "paper_keywords": ["batch verification", " modular exponentiation", " sparse exponent", " Frobenius map"], "paper_abstract": "Modular exponentiation in an abelian group is one of the most frequently used mathematical primitives in modern cryptography. Batch verification is an algorithm for verifying many exponentiations simultaneously. We propose two fast batch verification algorithms. The first one makes use of exponents of small weight, called sparse exponents, and is asymptotically 10 times faster than individual verification and twice as fast as previous works at the same security level. The second one can only be applied to elliptic curves defined over small finite fields. Using sparse Frobenius expansion with small integer coefficients, we give a complex exponent test which is four times faster than the previous works. For example, each exponentiation in one batch asymptotically requires nine elliptic curve additions on some elliptic curves for 2(80) security.", "paper_title": "Use of sparse and/or complex exponents in batch verification of exponentiations", "paper_id": "WOS:000241412500005"}