{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mixed_cells"}, {"score": 0.03889717436970545, "phrase": "enumeration_tree"}, {"score": 0.007588819217521699, "phrase": "mixed_cell"}, {"score": 0.0047395356621991935, "phrase": "polyhedral_homotopy_method"}, {"score": 0.004544127927346964, "phrase": "powerful_numerical_method"}, {"score": 0.004449452743965974, "phrase": "isolated_zeros"}, {"score": 0.004379737380744606, "phrase": "polynomial_system"}, {"score": 0.004025885154716127, "phrase": "homotopy_functions"}, {"score": 0.003819339842998955, "phrase": "linear_inequality_system"}, {"score": 0.0037594599958631404, "phrase": "additional_combinatorial_condition"}, {"score": 0.0035665344993417603, "phrase": "linear_inequality_systems"}, {"score": 0.0033656930865509547, "phrase": "unique_feasible_leaf_node"}, {"score": 0.0032954888655173666, "phrase": "depth-first_search"}, {"score": 0.0030130446986008277, "phrase": "computational_efficiency"}, {"score": 0.00291923164591297, "phrase": "dynamic_construction"}, {"score": 0.0026689487424251907, "phrase": "feasible_child_nodes"}, {"score": 0.0024144659350277954, "phrase": "numerical_results"}, {"score": 0.0023640560785711923, "phrase": "proposed_dynamic_construction"}, {"score": 0.002266364679369248, "phrase": "large_scale_polynomial_systems"}, {"score": 0.0021049977753042253, "phrase": "first_time"}], "paper_keywords": [""], "paper_abstract": "The polyhedral homotopy method, which has been known as a powerful numerical method for computing all isolated zeros of a polynomial system, requires all mixed cells of the support of the system to construct a family of homotopy functions. The mixed cells are reformulated in terms of a linear inequality system with an additional combinatorial condition. An enumeration tree is constructed among a family of linear inequality systems induced from it such that every mixed cell corresponds to a unique feasible leaf node, and the depth-first search is applied to the enumeration tree for finding all the feasible leaf nodes. How to construct such an enumeration tree is crucial in computational efficiency. This paper proposes a dynamic construction of an enumeration tree, which branches each parent node into its child nodes so that the number of feasible child nodes is expected to be small; hence we can prune many subtrees which do not contain any mixed cell. Numerical results exhibit that the proposed dynamic construction of an enumeration tree works very efficiently for large scale polynomial systems; for example, it generated all mixed cells of the cyclic-15 problem for the first time in less than 16 hours.", "paper_title": "Dynamic enumeration of all mixed cells", "paper_id": "WOS:000244888300003"}