{"auto_keywords": [{"score": 0.034503478591515375, "phrase": "asp"}, {"score": 0.00481495049065317, "phrase": "sla_provisioning"}, {"score": 0.004764859786310636, "phrase": "cloud-based_service_providers"}, {"score": 0.004641890423057823, "phrase": "cloud_resource_management"}, {"score": 0.004545793387330536, "phrase": "self-adaptable_solutions"}, {"score": 0.004428452434981208, "phrase": "unpredictable_workload_fluctuations"}, {"score": 0.004359500411441827, "phrase": "utility_principles"}, {"score": 0.0040942189695983185, "phrase": "application_service_provider"}, {"score": 0.003946960862020283, "phrase": "cloud_infrastructure"}, {"score": 0.0038854765143440965, "phrase": "scalable_provisioning"}, {"score": 0.0037456980766939836, "phrase": "qos_constraints"}, {"score": 0.0035920758080335655, "phrase": "iaas_provider"}, {"score": 0.0035176353680157367, "phrase": "identified_features"}, {"score": 0.0030538300202383106, "phrase": "related_mechanism"}, {"score": 0.0030062165552187086, "phrase": "five_different_resource_provisioning_policies"}, {"score": 0.0028527866590859967, "phrase": "realistic_workload"}, {"score": 0.002808298910480358, "phrase": "wikipedia_access"}, {"score": 0.002721388234661538, "phrase": "experimental_evaluation"}, {"score": 0.002637160140011997, "phrase": "proposed_policies"}, {"score": 0.002542174767860791, "phrase": "system_resources"}, {"score": 0.0025025186963415, "phrase": "whole_system_self-adaptable_respect"}, {"score": 0.002387214876538434, "phrase": "full_control"}, {"score": 0.0023499703712897293, "phrase": "resource_management_plan"}, {"score": 0.002241679436497569, "phrase": "resource_allocation_cost"}, {"score": 0.002172266188075892, "phrase": "sla_constraints"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cloud computing", " Quality of service", " Service level agreement", " Resource provisioning", " Autonomic computing"], "paper_abstract": "A challenge in cloud resource management is to design self-adaptable solutions capable to react to unpredictable workload fluctuations and changing utility principles. This paper analyzes the problem from the perspective of an Application Service Provider (ASP) that uses a cloud infrastructure to achieve scalable provisioning of its services in the respect of QoS constraints. First we draw a taxonomy of IaaS provider and use the identified features to drive the design of four autonomic service management architectures differing on the degree of control an ASP have on the system. We implemented two of this solutions and related mechanism to test five different resource provisioning policies. The implemented testbed has been evaluated under a realistic workload based on Wikipedia access traces on Amazon EC2 platform. The experimental evaluation performed confirms that: the proposed policies are capable to properly dimension the system resources making the whole system self-adaptable respect to the workload fluctuation. Moreover, having full control over the resource management plan allow to save up to the 32% of resource allocation cost always in the respect of SLA constraints. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Mechanisms for SLA provisioning in cloud-based service providers", "paper_id": "WOS:000317374100014"}