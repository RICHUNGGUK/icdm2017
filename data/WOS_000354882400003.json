{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "algebraic_structures"}, {"score": 0.0035173498506324476, "phrase": "algebraic_hierarchy"}, {"score": 0.0034063576796640603, "phrase": "vector_spaces"}, {"score": 0.0032777653153451265, "phrase": "resultant_tools"}, {"score": 0.0030938932434437178, "phrase": "generic_theories"}, {"score": 0.002535779689260244, "phrase": "complex_mathematical_structures"}, {"score": 0.0023934306706217797, "phrase": "algebraic_topology"}, {"score": 0.002244596395352896, "phrase": "suitable_tool"}, {"score": 0.00220177373403577, "phrase": "algebraic_concepts"}, {"score": 0.0021049977753042253, "phrase": "computer_algebra_systems"}], "paper_keywords": ["Mathematical structures", " ACL2", " Algebraic hierarchy", " Proof engineering", " Computer algebra systems", " Formal verification"], "paper_abstract": "In this paper, we present how algebraic structures and morphisms can be modelled in the ACL2 theorem prover. Namely, we illustrate a methodology for implementing a set of tools that facilitates the formalisations related to algebraic structures-as a result, an algebraic hierarchy ranging from setoids to vector spaces has been developed. The resultant tools can be used to simplify the development of generic theories about algebraic structures. In particular, the benefits of using the tools presented in this paper, compared to a from-scratch approach, are especially relevant when working with complex mathematical structures; for example, the structures employed in Algebraic Topology. This work shows that ACL2 can be a suitable tool for formalising algebraic concepts coming, for instance, from computer algebra systems.", "paper_title": "Modelling algebraic structures and morphisms in ACL2", "paper_id": "WOS:000354882400003"}