{"auto_keywords": [{"score": 0.031865784855921876, "phrase": "f-incr"}, {"score": 0.03162841317042495, "phrase": "f-max"}, {"score": 0.0047415081747150065, "phrase": "great_attention"}, {"score": 0.004357061494162031, "phrase": "transient_failures"}, {"score": 0.004176640648520877, "phrase": "normal_routing_table_information"}, {"score": 0.0041287394089001405, "phrase": "next_hop"}, {"score": 0.0039274105882136775, "phrase": "precomputed_link"}, {"score": 0.003750260412839128, "phrase": "normal_routing"}, {"score": 0.003636605792981828, "phrase": "swap_edge"}, {"score": 0.0035536228914319354, "phrase": "optimization_criteria"}, {"score": 0.003512841739654183, "phrase": "resulting_new_route"}, {"score": 0.003445906915464945, "phrase": "precomputed_information"}, {"score": 0.0033672608231654897, "phrase": "routing_table"}, {"score": 0.003290403747743492, "phrase": "single_link"}, {"score": 0.003034918693363774, "phrase": "f-sum"}, {"score": 0.002842655426951218, "phrase": "distributed_environment"}, {"score": 0.0027670642397888494, "phrase": "distributed_solution"}, {"score": 0.0026218430041123164, "phrase": "new_strategy"}, {"score": 0.002571841741339248, "phrase": "efficient_distributed_computation"}, {"score": 0.0022648637058989463, "phrase": "long_messages"}, {"score": 0.0022302306304023602, "phrase": "solution_protocols"}, {"score": 0.002121281184742656, "phrase": "total_amount"}, {"score": 0.0021049977753042253, "phrase": "transmitted_data_items"}], "paper_keywords": ["fault-tolerant routing", " point of failure rerouting", " swap edge", " distributed algorithms"], "paper_abstract": "Recently great attention has been given to point-of-failure swap rerouting, an efficient technique for routing in the presence of transient failures. According to this technique, a message follows the normal routing table information unless the next hop has failed; in this case, it is redirected towards a precomputed link, called swap; once this link has been crossed, normal routing is resumed. The choice of the swap edge is done according to some optimization criteria on the resulting new route. The amount of precomputed information required in addition to the routing table is rather small: a single link per of each destination. Several efficient serial algorithms have been presented to compute this information for several optimization criteria (F-dist, F-sum, F-incr, F-max). Only the algorithm corresponding to F-dist has been efficiently implemented in a distributed environment, while for the other optimization criteria no distributed solution has been devised yet. In this paper we present protocols, based on a new strategy, that allow the efficient distributed computation of all the optimal swap edges under F-sum, F-incr, F-max. Although considerably more difficult than F-dist, these problems can be solved with the same cost. In systems allowing long messages, we develop solution protocols based on the same strategy that use only O(n) messages without increasing the total amount of transmitted data items. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Computing all the best swap edges distributively", "paper_id": "WOS:000256756000008"}