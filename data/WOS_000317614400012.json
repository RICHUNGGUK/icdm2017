{"auto_keywords": [{"score": 0.03347678520709377, "phrase": "colorstream"}, {"score": 0.014720676464189496, "phrase": "local_buffer"}, {"score": 0.008517380415841066, "phrase": "rare_and_urgent_segments"}, {"score": 0.004751470337792407, "phrase": "mesh-based_peer-to-peer_live-streaming_system"}, {"score": 0.0044169318855693356, "phrase": "scheduling_strategy"}, {"score": 0.004286931271697226, "phrase": "caching_segments"}, {"score": 0.004216362268148017, "phrase": "storage-constrained_internet_protocol_television_system"}, {"score": 0.004160740888748725, "phrase": "set-top_box"}, {"score": 0.0041195049121633956, "phrase": "main_objective"}, {"score": 0.00397175830521626, "phrase": "timely_manner"}, {"score": 0.003778755692995768, "phrase": "existing_systems"}, {"score": 0.003691913669486176, "phrase": "data_segments"}, {"score": 0.0036070601923916196, "phrase": "earliest_playback_deadlines"}, {"score": 0.0035831752332801674, "phrase": "neighboring_peers"}, {"score": 0.0034660938095219846, "phrase": "fresh_segment"}, {"score": 0.0034317185678527672, "phrase": "higher_sequence_identity"}, {"score": 0.003397683082821229, "phrase": "later_playback_deadline"}, {"score": 0.003352825186671963, "phrase": "longer_time"}, {"score": 0.0032004205378150354, "phrase": "novel_data_scheduling_scheme"}, {"score": 0.0031164532805849432, "phrase": "higher_system_throughput"}, {"score": 0.003095806891672679, "phrase": "shorter_start-up_delay"}, {"score": 0.0028584344002749395, "phrase": "fresher_ones"}, {"score": 0.0026304533650262545, "phrase": "peer_request"}, {"score": 0.0023886223145816376, "phrase": "data_dissemination"}, {"score": 0.0022799458141165587, "phrase": "proposed_colorstream_scheme"}, {"score": 0.0022127018991294047, "phrase": "existing_schemes"}, {"score": 0.0021049977753042253, "phrase": "start-up_delay"}], "paper_keywords": ["Optimal scheduling", " peer-to-peer computing", " streaming media"], "paper_abstract": "In a mesh-based peer-to-peer live-streaming system, a data scheduler decides which segments and from where it should fetch to the local buffer of a peer. The scheduling strategy is critical when the local buffer is limited for caching segments, particularly for a storage-constrained Internet Protocol Television system such as a set-top box. The main objective is to deliver data to as many peers as possible in a timely manner, i.e., streaming data should be received before their playback deadlines. One popular approach used in existing systems is to let peers preferentially request data segments that are rarest and of the earliest playback deadlines among neighboring peers. However, it has been ignored that a fresh segment with a higher sequence identity but a later playback deadline may have a longer time to be shared with other peers. In this paper, we propose a novel data scheduling scheme, called ColorStream, which can achieve higher system throughput and shorter start-up delay. When deciding which segments to get, in addition to rarity and urgency, ColorStream also considers the freshness of segments because distributing fresher ones implies to be shared by more peers in the future. It categorizes the segments and peers by labeling them with colors and lets each peer request with preference the rare and urgent segments that have the same color as its own. This technique allows more fresh segments to be requested without abandoning rare and urgent segments and also balances the workload of data dissemination among peers. Simulations have been conducted to evaluate the performance of the proposed ColorStream scheme. The results show that, compared with existing schemes, ColorStream can greatly improve the performance under various conditions in terms of throughput and start-up delay.", "paper_title": "An Efficient Data Scheduling Scheme for P2P Storage-Constrained IPTV System", "paper_id": "WOS:000317614400012"}