{"auto_keywords": [{"score": 0.008432416380266193, "phrase": "coalition_structure_generation_problem"}, {"score": 0.008293807139197716, "phrase": "possible_solutions"}, {"score": 0.006562682882343886, "phrase": "optimal_solution"}, {"score": 0.00481495049065317, "phrase": "optimal_coalition_structure_generation"}, {"score": 0.004761850836420121, "phrase": "fundamental_type"}, {"score": 0.004691956803195995, "phrase": "coherent_groupings"}, {"score": 0.004563646139670766, "phrase": "major_research_challenge"}, {"score": 0.004521656904324382, "phrase": "multi-agent_systems"}, {"score": 0.004261885692956071, "phrase": "possible_coalition"}, {"score": 0.004222661120053821, "phrase": "coalition_value"}, {"score": 0.003936070515470964, "phrase": "exactly_one_coalition"}, {"score": 0.003892625307748758, "phrase": "overall_outcome"}, {"score": 0.0035486713647627246, "phrase": "different_techniques"}, {"score": 0.0035225003743068676, "phrase": "dynamic_programming"}, {"score": 0.0035029984252139632, "phrase": "integer_programming"}, {"score": 0.0034324073240680213, "phrase": "major_limitations"}, {"score": 0.0034134024569847264, "phrase": "execution_time"}, {"score": 0.00330767227452252, "phrase": "anytime_algorithm"}, {"score": 0.0032350106286142878, "phrase": "novel_representation"}, {"score": 0.0032170951973445544, "phrase": "search_space"}, {"score": 0.003117426613816668, "phrase": "upper_and_lower_bounds"}, {"score": 0.003082989392827924, "phrase": "best_coalition_structures"}, {"score": 0.002884186662989775, "phrase": "remaining_sub-spaces"}, {"score": 0.002857605453835429, "phrase": "branch-and-bound_technique"}, {"score": 0.0027537012143592234, "phrase": "coalition_structures"}, {"score": 0.0027333769432036905, "phrase": "redundant_and_invalid_solutions"}, {"score": 0.002663412922325389, "phrase": "new_type"}, {"score": 0.002653564941079504, "phrase": "input_distribution"}, {"score": 0.0026048671243201556, "phrase": "input_distributions"}, {"score": 0.00256180170424155, "phrase": "new_distribution"}, {"score": 0.00245040105115307, "phrase": "fastest_available_algorithm"}, {"score": 0.0022922961966095508, "phrase": "optimal_one"}, {"score": 0.0022007302738063566, "phrase": "previous_state"}, {"score": 0.0021885300925245516, "phrase": "art_algorithms"}, {"score": 0.002144370659530109, "phrase": "worst_case_distribution"}], "paper_keywords": [""], "paper_abstract": "Coalition formation is a fundamental type of interaction that involves the creation of coherent groupings of distinct, autonomous, agents in order to efficiently achieve their individual or collective goals. Forming effective coalitions is a major research challenge in the field of multi-agent systems. Central to this endeavour is the problem of determining which of the many possible coalitions to form in order to achieve some goal. This usually requires calculating a value for every possible coalition, known as the coalition value, which indicates how beneficial that coalition would be if it was formed. Once these values are calculated, the agents usually need to find a combination of coalitions, in which every agent belongs to exactly one coalition, and by which the overall outcome of the system is maximized. However, this coalition structure generation problem is extremely challenging due to the number of possible solutions that need to be examined, which grows exponentially with the number of agents involved. To date, therefore, many algorithms have been proposed to solve this problem using different techniques - ranging from dynamic programming, to integer programming, to stochastic search - all of which suffer from major limitations relating to execution time, solution quality, and memory requirements. With this in mind, we develop an anytime algorithm to solve the coalition structure generation problem. Specifically, the algorithm uses a novel representation of the search space, which partitions the space of possible solutions into sub-spaces such that it is possible to compute upper and lower bounds on the values of the best coalition structures in them. These bounds are then used to identify the sub-spaces that have no potential of containing the optimal solution so that they can be pruned. The algorithm, then, searches through the remaining sub-spaces very efficiently using a branch-and-bound technique to avoid examining all the solutions within the searched sub-space(s). In this setting, we prove that our algorithm enumerates all coalition structures efficiently by avoiding redundant and invalid solutions automatically. Moreover, in order to effectively test our algorithm we develop a new type of input distribution which allows us to generate more reliable benchmarks compared to the input distributions previously used in the field. Given this new distribution, we show that for 27 agents our algorithm is able to find solutions that are optimal in 0.175% of the time required by the fastest available algorithm in the literature. The algorithm is anytime, and if interrupted before it would have normally terminated, it can still provide a solution that is guaranteed to be within a bound from the optimal one. Moreover, the guarantees we provide on the quality of the solution are significantly better than those provided by the previous state of the art algorithms designed for this purpose. For example, for the worst case distribution given 25 agents, our algorithm is able to find a 90% efficient solution in around 10% of time it takes to find the optimal solution.", "paper_title": "An Anytime Algorithm for Optimal Coalition Structure Generation", "paper_id": "WOS:000265865500004"}