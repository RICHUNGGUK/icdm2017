{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "answer_sets"}, {"score": 0.0045108906244892165, "phrase": "declarative_language"}, {"score": 0.004225950334493496, "phrase": "logical_and_probabilistic_arguments"}, {"score": 0.004002242925856335, "phrase": "answer_set_prolog"}, {"score": 0.0037903327482565097, "phrase": "logical_foundation"}, {"score": 0.003668591097652231, "phrase": "causal_bayes_nets"}, {"score": 0.003512308265830794, "phrase": "probabilistic_foundation"}, {"score": 0.0030821633718368206, "phrase": "knowledge_representation"}, {"score": 0.0025892330566358503, "phrase": "existing_approaches"}, {"score": 0.0024788167298469455, "phrase": "sufficiency_conditions"}, {"score": 0.002347378595930709, "phrase": "p-log_programs"}, {"score": 0.0022472527731744974, "phrase": "bayes_nets"}, {"score": 0.0021049977753042253, "phrase": "coherent_p-log_programs"}], "paper_keywords": ["Logic programming", " answer sets", " probabilistic reasoning", " Answer Set Prolog"], "paper_abstract": "This paper develops a declarative language, P-log, that combines logical and probabilistic arguments in its reasoning. Answer Set Prolog is used as the logical foundation, while causal Bayes nets serve as a probabilistic foundation. We give several non-trivial examples and illustrate the use of P-log for knowledge representation and updating of knowledge. We argue that Our approach to updates is more appealing than existing approaches. We give sufficiency conditions for the coherency of P-log programs and show that Bayes nets can be easily mapped to coherent P-log programs.", "paper_title": "Probabilistic reasoning with answer sets", "paper_id": "WOS:000263808500002"}