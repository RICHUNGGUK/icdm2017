{"auto_keywords": [{"score": 0.007740489563401459, "phrase": "distributed_file_systems"}, {"score": 0.0047864177420244795, "phrase": "practical_performance_analysis"}, {"score": 0.004758053266234474, "phrase": "cloud_computing"}, {"score": 0.004715819915695707, "phrase": "significant_attention"}, {"score": 0.004660088610495924, "phrase": "quality_guaranteed_services"}, {"score": 0.004483450050677258, "phrase": "key_component"}, {"score": 0.004443643245632722, "phrase": "cloud-scale_data_processing_middleware"}, {"score": 0.004237208239631876, "phrase": "late_life_cycle_performance_fixes"}, {"score": 0.004162281538812753, "phrase": "performance_analysis"}, {"score": 0.003945326595078176, "phrase": "systematic_and_practical_performance_analysis_framework"}, {"score": 0.0038755411593867284, "phrase": "design_models"}, {"score": 0.0037174533606734897, "phrase": "configuration_guideline"}, {"score": 0.0036734771501245878, "phrase": "configuration_alternatives"}, {"score": 0.003502695291158573, "phrase": "systematic_way"}, {"score": 0.003369778677878286, "phrase": "existing_works"}, {"score": 0.0033398265543234393, "phrase": "performance_measurements"}, {"score": 0.0032226482496329626, "phrase": "application_programs"}, {"score": 0.0031374619658664843, "phrase": "design_level_models"}, {"score": 0.0031003255054939524, "phrase": "performance_models"}, {"score": 0.002852356597632014, "phrase": "overall_performance"}, {"score": 0.0026874405408023956, "phrase": "hadoop_distributed_file_system"}, {"score": 0.0026241684260044414, "phrase": "real-world_experiments"}, {"score": 0.0025471636425006155, "phrase": "tansuo"}, {"score": 0.002532035301903554, "phrase": "inspur_clusters"}, {"score": 0.0023855976629269565, "phrase": "hdfs"}, {"score": 0.0023018188296933923, "phrase": "metadata_server"}, {"score": 0.002234252028553481, "phrase": "sufficient_performance_analysis"}, {"score": 0.0022012144080075114, "phrase": "proposed_approach"}, {"score": 0.0021365943904362262, "phrase": "moosefs"}, {"score": 0.002123900422311085, "phrase": "gfs"}, {"score": 0.0021049977753042253, "phrase": "zfs."}], "paper_keywords": ["Distributed file system", " architecture model", " practical performance analysis", " HDFS"], "paper_abstract": "Cloud computing has received significant attention recently. Delivering quality guaranteed services in clouds is highly desired. Distributed file systems (DFSs) are the key component of any cloud-scale data processing middleware. Evaluating the performance of DFSs is accordingly very important. To avoid cost for late life cycle performance fixes and architectural redesign, providing performance analysis before the deployment of DFSs is also particularly important. In this paper, we propose a systematic and practical performance analysis framework, driven by architecture and design models for defining the structure and behavior of typical master/slave DFSs. We put forward a configuration guideline for specifications of configuration alternatives of such DFSs, and a practical approach for both qualitatively and quantitatively performance analysis of DFSs with various configuration settings in a systematic way. What distinguish our approach from others is that 1) most of existing works rely on performance measurements under a variety of workloads/strategies, comparing with other DFSs or running application programs, but our approach is based on architecture and design level models and systematically derived performance models; 2) our approach is able to both qualitatively and quantitatively evaluate the performance of DFSs; and 3) our approach not only can evaluate the overall performance of a DFS but also its components and individual steps. We demonstrate the effectiveness of our approach by evaluating Hadoop distributed file system (HDFS). A series of real-world experiments on EC2 (Amazon Elastic Compute Cloud), Tansuo and Inspur Clusters, were conducted to qualitatively evaluate the effectiveness of our approach. We also performed a set of experiments of HDFS on EC2 to quantitatively analyze the performance and limitation of the metadata server of DFSs. Results show that our approach can achieve sufficient performance analysis. Similarly, the proposed approach could be also applied to evaluate other DFSs such as MooseFS, GFS, and zFS.", "paper_title": "Modeling of Distributed File Systems for Practical Performance Analysis", "paper_id": "WOS:000327662100017"}