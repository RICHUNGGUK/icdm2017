{"auto_keywords": [{"score": 0.049181877671157906, "phrase": "time-schedule_network"}, {"score": 0.03479054435572426, "phrase": "departure_times"}, {"score": 0.00481495049065317, "phrase": "shortest_paths"}, {"score": 0.004463958296056236, "phrase": "new_variant"}, {"score": 0.004380265418103948, "phrase": "time-constrained_shortest_path_problem"}, {"score": 0.0036246643358397272, "phrase": "pre-specified_departure_times"}, {"score": 0.003194580334752371, "phrase": "solution_algorithm"}, {"score": 0.0031148723927633955, "phrase": "k_shortest_looping_paths"}, {"score": 0.002609770322855842, "phrase": "maximum_number"}, {"score": 0.0023290951071300433, "phrase": "computational_experiments"}, {"score": 0.002256619934086924, "phrase": "existing_ones"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Time-constrained network", " Time-schedule network", " K shortest paths", " Constrained shortest paths"], "paper_abstract": "We study a new variant of the time-constrained shortest path problem (TCSPP), that is, the K shortest paths problem in a time-schedule network with constraints on arcs. In such networks, each arc has a list of pre-specified departure times, and traversal along the arc can only take place at one of those departure times. We develop a solution algorithm that finds the K shortest looping paths in O(m log(nr) + Kmr(2)eta) time, where n is the number of nodes, m is the number of arcs, r is the maximum number of departure times on an arc, and eta is the maximum in-degree of a node. Computational experiments show that our algorithm outperforms existing ones adapted to solve the same problem. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Finding the K shortest paths in a time-schedule network with constraints on arcs", "paper_id": "WOS:000326610000015"}