{"auto_keywords": [{"score": 0.046459681772617736, "phrase": "large_scale"}, {"score": 0.01563863005831548, "phrase": "large-scale_mosaicking"}, {"score": 0.015082438655843869, "phrase": "dynamic_dag_scheduling"}, {"score": 0.00481495049065317, "phrase": "task-tree_based"}, {"score": 0.004359500411441827, "phrase": "increasing_attentions"}, {"score": 0.0042692243768616455, "phrase": "global_research"}, {"score": 0.004115697805448384, "phrase": "large_areas"}, {"score": 0.004072851768196397, "phrase": "image_mosaicking"}, {"score": 0.003946960862020283, "phrase": "dependency_relationships"}, {"score": 0.0038854765143440965, "phrase": "large_collection"}, {"score": 0.003629882559085245, "phrase": "significant_processing_capabilities"}, {"score": 0.0034628156490003775, "phrase": "enormous_tasks"}, {"score": 0.0034267429854665035, "phrase": "rs_image_data"}, {"score": 0.0032689949867583633, "phrase": "remote_sensed_imageries"}, {"score": 0.003069867656852932, "phrase": "data-driven_task_tree"}, {"score": 0.0029438813080245544, "phrase": "critical_path"}, {"score": 0.0029131986574478046, "phrase": "dynamical_dag_scheduling_solution"}, {"score": 0.0028378798711397235, "phrase": "cpds-sq"}, {"score": 0.002750056254309311, "phrase": "optimized_schedule"}, {"score": 0.002721388234661538, "phrase": "multi-core_cluster"}, {"score": 0.002693018258362651, "phrase": "minimal_completion_time"}, {"score": 0.0025960262223338293, "phrase": "core_parallel_mosaicking_program"}, {"score": 0.0024894376091589244, "phrase": "different_pairs"}, {"score": 0.002399760112755228, "phrase": "effective_but_easier_approach"}, {"score": 0.0023254633298356894, "phrase": "large-scale_processing_capability"}, {"score": 0.0022772115643656153, "phrase": "dependence_relationships"}, {"score": 0.002218299213266519, "phrase": "complex_parallel_processing_procedure"}], "paper_keywords": ["Remote sensing image processing", " parallel computing", " DAG scheduling", " data-intensive computing", " big data computing"], "paper_abstract": "Remote sensed imagery mosaicking at large scale has been receiving increasing attentions in regional to global research. However, when scaling to large areas, image mosaicking becomes extremely challenging for the dependency relationships among a large collection of tasks which give rise to ordering constraint, the demand of significant processing capabilities and also the difficulties inherent in organizing these enormous tasks and RS image data. We propose a task-tree based mosaicking for remote sensed imageries at large scale with dynamic DAG scheduling. It expresses large scale mosaicking as a data-driven task tree with minimal height. And also a critical path based dynamical DAG scheduling solution with status queue named CPDS-SQ is provided to offer an optimized schedule on multi-core cluster with minimal completion time. All the individual dependent tasks are run by a core parallel mosaicking program implemented with MPI to perform mosaicking on different pairs of images. Eventually, an effective but easier approach is offered to improve the large-scale processing capability by decoupling the dependence relationships among tasks from the complex parallel processing procedure. Through experiments on large-scale mosaicking, we confirmed that our approach were efficient and scalable.", "paper_title": "Task-Tree Based Large-Scale Mosaicking for Massive Remote Sensed Imageries with Dynamic DAG Scheduling", "paper_id": "WOS:000342178200018"}