{"auto_keywords": [{"score": 0.0419816677364889, "phrase": "abstraction_gap"}, {"score": 0.041712156789843864, "phrase": "market_requirements"}, {"score": 0.04144430118186888, "phrase": "system_specification_model"}, {"score": 0.028818583867887944, "phrase": "background_subtraction"}, {"score": 0.00481495049065317, "phrase": "design_complexity"}, {"score": 0.004782848614014638, "phrase": "market-oriented_mpsocs"}, {"score": 0.004548778268252678, "phrase": "important_trend"}, {"score": 0.0044883089984593455, "phrase": "efficient_system_specification_model"}, {"score": 0.004443482801729777, "phrase": "challenging_and_critical_step"}, {"score": 0.004399102320426124, "phrase": "mpsocs_architecture"}, {"score": 0.004311660976562745, "phrase": "often_conflicting_requirements"}, {"score": 0.004268598433803815, "phrase": "esl"}, {"score": 0.004169754607580288, "phrase": "executable_specification_model"}, {"score": 0.003899745240916238, "phrase": "new_solutions"}, {"score": 0.0037839928025418896, "phrase": "system_architects"}, {"score": 0.0037336520904376687, "phrase": "efficient_system_specification"}, {"score": 0.00368397861425962, "phrase": "design_complexities"}, {"score": 0.003647156095687574, "phrase": "system_specification"}, {"score": 0.003598629227969919, "phrase": "joint_academia"}, {"score": 0.0035746075891407224, "phrase": "industry_effort"}, {"score": 0.0034917831997090328, "phrase": "higher_abstractions"}, {"score": 0.003433796409346569, "phrase": "conceptual_abstraction_levels"}, {"score": 0.003354223660940168, "phrase": "early_design_decisions"}, {"score": 0.0032985137109323827, "phrase": "higher_levels"}, {"score": 0.003243726030199957, "phrase": "efficient_solution_space_exploration"}, {"score": 0.00318984544993994, "phrase": "essential_design_decisions"}, {"score": 0.0031473840619203825, "phrase": "functional_decomposition"}, {"score": 0.003126365132352301, "phrase": "algorithm_exploration"}, {"score": 0.002799080959445996, "phrase": "embedded-vision_market"}, {"score": 0.0027341763737751467, "phrase": "vision_pipeline"}, {"score": 0.0026977641744883826, "phrase": "object_detection"}, {"score": 0.002591403838835242, "phrase": "efficient_specification_model"}, {"score": 0.0025568881277209725, "phrase": "processing_element_class"}, {"score": 0.0024643161985886085, "phrase": "flexible_trade-off"}, {"score": 0.002431489080631481, "phrase": "application_requirements"}, {"score": 0.0023592142778542055, "phrase": "memory_bandwidth"}, {"score": 0.0023434465472518943, "phrase": "minimal_increase"}, {"score": 0.0022890828779208016, "phrase": "initial_algorithm"}, {"score": 0.0022661710658109916, "phrase": "resulting_specification_model"}, {"score": 0.002213596068643924, "phrase": "top-down_downstream_esl_flow"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiprocessor System-on-Chips (MPSoCs)", " Electronic-System-Level (ESL) design flow", " Conceptual Abstraction Levels (CALs)", " System specification"], "paper_abstract": "Architecting Multiprocessor System-on-Chips (MPSoCs) solutions for multiple markets with many applications has appeared as an important trend. Developing an efficient system specification model is a challenging and critical step toward realizing MPSoCs architecture, considering the diversity of often conflicting requirements. Current ESL design flows typically start with an executable specification model, where many essential design decisions are already locked down. This defines an abstraction gap between market requirements and system specification model. Thereby, new solutions are required to fill the abstraction gap and guide system architects in developing an efficient system specification. To manage design complexities above the system specification, in a joint academia and industry effort, we propose a set of higher abstractions; which we call Conceptual Abstraction Levels (CALs). CALs addresses early design decisions separately and iteratively at higher levels of abstraction enabling an efficient solution space exploration. Through explicitly exposing essential design decisions, such as functional decomposition, algorithm exploration and tuning, granularity of computation/communication and parallelism, CALs fills the gap between market requirements and the system specification model. To illustrate the benefits of our approach, we have applied CALs to the embedded-vision market and focused on an example of vision pipeline including Background Subtraction, Object detection and Object Tracking. By applying CALs, we achieved an efficient specification model choosing algorithm, processing element class, parallelism, and hierarchy, along with exploring a flexible trade-off between quality/bandwidth/computation supporting variations in application requirements. For Background Subtraction we demonstrate a 63% reduction in memory bandwidth with minimal increase in computation when comparing to the initial algorithm. The resulting specification model serves as an input for a top-down downstream ESL flow for further fine grained exploration, synthesis and implementation. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Conceptual Abstraction Levels (CALs) for managing design complexity of market-oriented MPSoCs", "paper_id": "WOS:000366879500010"}