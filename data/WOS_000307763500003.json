{"auto_keywords": [{"score": 0.034803595361478, "phrase": "random_walk_distances"}, {"score": 0.014219724595579545, "phrase": "graph_clustering"}, {"score": 0.011275917115752437, "phrase": "structural_and_attribute_similarities"}, {"score": 0.010974387710869556, "phrase": "matrix_multiplication"}, {"score": 0.00481495049065317, "phrase": "large_attributed_information_networks"}, {"score": 0.004758987153057194, "phrase": "efficient_incremental_computing_approach"}, {"score": 0.004523865550323285, "phrase": "social_networks"}, {"score": 0.004488734023485018, "phrase": "road_networks"}, {"score": 0.004453874101119545, "phrase": "sensor_networks"}, {"score": 0.0044192837023190445, "phrase": "biological_networks"}, {"score": 0.004217286731331736, "phrase": "large_networks"}, {"score": 0.004087756756529841, "phrase": "partition_vertices"}, {"score": 0.004040211152784802, "phrase": "large_graph"}, {"score": 0.003916098498242888, "phrase": "vertex_connectivity"}, {"score": 0.003885668358145471, "phrase": "neighborhood_similarity"}, {"score": 0.003781005930058317, "phrase": "topological_structures"}, {"score": 0.003693533648584145, "phrase": "vertex_properties"}, {"score": 0.0035660913513115267, "phrase": "new_graph_clustering_algorithm"}, {"score": 0.0034029588672379926, "phrase": "unified_distance_measure"}, {"score": 0.0032727116186194584, "phrase": "graph_vertices"}, {"score": 0.003196960816092101, "phrase": "clustering_refinement"}, {"score": 0.0031597433845085092, "phrase": "graph_edge_weights"}, {"score": 0.0030745737579268876, "phrase": "relative_importance"}, {"score": 0.002888396879326153, "phrase": "clustering_process"}, {"score": 0.00277778944472107, "phrase": "edge_weight_update"}, {"score": 0.0025690867646665835, "phrase": "efficient_algorithm"}, {"score": 0.002470676601347937, "phrase": "edge_weight_increments"}, {"score": 0.0024514505056251316, "phrase": "complexity_analysis"}, {"score": 0.002385326947545194, "phrase": "runtime_cost_inc-cluster"}, {"score": 0.0022672107906933714, "phrase": "multicore_architecture"}, {"score": 0.0022495644368875686, "phrase": "experimental_results"}, {"score": 0.002223351523626989, "phrase": "inc-cluster"}, {"score": 0.002206045784326466, "phrase": "significant_speedup"}, {"score": 0.002171836484200008, "phrase": "large_graphs"}, {"score": 0.0021381565332182773, "phrase": "exactly_the_same_clustering_quality"}, {"score": 0.0021049977753042253, "phrase": "intra-cluster_structural_cohesiveness"}], "paper_keywords": ["Graph clustering", " Incremental computation", " Parallel computing"], "paper_abstract": "In recent years, many information networks have become available for analysis, including social networks, road networks, sensor networks, biological networks, etc. Graph clustering has shown its effectiveness in analyzing and visualizing large networks. The goal of graph clustering is to partition vertices in a large graph into clusters based on various criteria such as vertex connectivity or neighborhood similarity. Many existing graph clustering methods mainly focus on the topological structures, but largely ignore the vertex properties which are often heterogeneous. Recently, a new graph clustering algorithm, SA-cluster, has been proposed which combines structural and attribute similarities through a unified distance measure. SA-Cluster performs matrix multiplication to calculate the random walk distances between graph vertices. As part of the clustering refinement, the graph edge weights are iteratively adjusted to balance the relative importance between structural and attribute similarities. As a consequence, matrix multiplication is repeated in each iteration of the clustering process to recalculate the random walk distances which are affected by the edge weight update. In order to improve the efficiency and scalability of SA-cluster, in this paper, we propose an efficient algorithm In-Cluster to incrementally update the random walk distances given the edge weight increments. Complexity analysis is provided to estimate how much runtime cost Inc-Cluster can save. We further design parallel matrix computation techniques on a multicore architecture. Experimental results demonstrate that Inc-Cluster achieves significant speedup over SA-Cluster on large graphs, while achieving exactly the same clustering quality in terms of intra-cluster structural cohesiveness and attribute value homogeneity.", "paper_title": "Clustering large attributed information networks: an efficient incremental computing approach", "paper_id": "WOS:000307763500003"}