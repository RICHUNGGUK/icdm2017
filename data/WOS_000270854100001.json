{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_pareto"}, {"score": 0.0044192837023190445, "phrase": "multi-objective_optimization"}, {"score": 0.003870541730075597, "phrase": "pareto_set"}, {"score": 0.003693533648584145, "phrase": "possible_solutions"}, {"score": 0.002519402443228795, "phrase": "appropriate_trade-off"}, {"score": 0.0022939396079753463, "phrase": "general_results"}, {"score": 0.002206045784326466, "phrase": "algorithmic_computability"}, {"score": 0.002171836484200008, "phrase": "maxima_locations"}, {"score": 0.0021049977753042253, "phrase": "pareto_sets"}], "paper_keywords": ["multi-objective optimization", " Pareto set", " verified computing"], "paper_abstract": "In many engineering problems, we face multi-objective optimization, with several objective functions f(1),...,f(n). We want to provide the user with the Pareto set-a set of all possible solutions x which cannot be improved in all categories (i.e., for which f(j)(x') >= f(j) (x) for all j and f(j)(x') > f(j)(x) for some j is impossible). The user should be able to select an appropriate trade-off between, say, cost and durability. We extend the general results about ( verified) algorithmic computability of maxima locations to show that Pareto sets can also be computed.", "paper_title": "VERIFIED METHODS FOR COMPUTING PARETO SETS: GENERAL ALGORITHMIC ANALYSIS", "paper_id": "WOS:000270854100001"}