{"auto_keywords": [{"score": 0.04852232688729349, "phrase": "sliding_window"}, {"score": 0.00481495049065317, "phrase": "high-speed_data_streams"}, {"score": 0.0045820747375409435, "phrase": "interesting_problem"}, {"score": 0.004482206282876944, "phrase": "large_number"}, {"score": 0.004312622975366672, "phrase": "widely_used_model"}, {"score": 0.004265354774450696, "phrase": "frequent_itemset_mining"}, {"score": 0.004218602458288531, "phrase": "data_streams"}, {"score": 0.004081385289516914, "phrase": "concept_drift"}, {"score": 0.0039269071382230444, "phrase": "sliding_window-based_algorithm"}, {"score": 0.0038624981944755813, "phrase": "efficient_data_structure"}, {"score": 0.0034975571855450373, "phrase": "innovative_computing_method"}, {"score": 0.0033465923623290034, "phrase": "frequent_patterns"}, {"score": 0.0030808211830129304, "phrase": "mining_results"}, {"score": 0.002915437843874821, "phrase": "efficient_representation"}, {"score": 0.00282048824450047, "phrase": "bit_sequence"}, {"score": 0.002525708155510053, "phrase": "novel_technique"}, {"score": 0.002337848196418384, "phrase": "current_window"}, {"score": 0.002312174113289583, "phrase": "experimental_evaluations"}, {"score": 0.0022492129111567824, "phrase": "synthetic_data_streams"}, {"score": 0.002200077887697072, "phrase": "proposed_approach"}, {"score": 0.0021520139248317333, "phrase": "recently_proposed_algorithms"}, {"score": 0.002128376306688074, "phrase": "different_phases"}, {"score": 0.0021049977753042253, "phrase": "data_stream_mining"}], "paper_keywords": ["frequent itemsets", " data stream mining", " sliding window", " bit sequence"], "paper_abstract": "Frequent itemset mining over sliding window is an interesting problem and has a large number of applications. Sliding window is a widely used model for frequent itemset mining over data streams due to its capability to handle concept drift, its bounded memory and its low processing time. A sliding window-based algorithm requires an efficient data structure that can be updated as fast as possible when inserting and deleting transactions. Moreover, an innovative computing method is needed to provide the set of frequent patterns (FPs) with a little delay after the user issues a request for the mining results within a window. In this study, an efficient representation of the sliding window named blocked bit sequence is introduced which is aimed to store and maintain the content of the window. Moreover, by a novel technique this representation is exploited for efficiently extracting the set of FPs within the current window. Experimental evaluations on both real-life and synthetic data streams show that the proposed approach is faster than recently proposed algorithms in different phases of data stream mining.", "paper_title": "An Efficient Frequent Itemset Mining Method over High-speed Data Streams", "paper_id": "WOS:000310636000007"}