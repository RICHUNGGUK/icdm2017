{"auto_keywords": [{"score": 0.04526211521024841, "phrase": "different_models"}, {"score": 0.00481495049065317, "phrase": "architectural_models"}, {"score": 0.004589124394375718, "phrase": "architectural_description"}, {"score": 0.004458722048888919, "phrase": "complex_software_system"}, {"score": 0.004270003565426343, "phrase": "demanding_task"}, {"score": 0.004168618849008299, "phrase": "underlying_problems"}, {"score": 0.003934970057482768, "phrase": "substantial_amount"}, {"score": 0.0036611708297251645, "phrase": "new_models"}, {"score": 0.0036261282565554507, "phrase": "closer_examination"}, {"score": 0.0035229930971258316, "phrase": "rigorously_specified_dependencies"}, {"score": 0.0033737457695128233, "phrase": "automated_composition"}, {"score": 0.0033094525227603012, "phrase": "primary_causes"}, {"score": 0.003199864072042816, "phrase": "software_architecture"}, {"score": 0.002796519557888453, "phrase": "adl."}, {"score": 0.002677964894127131, "phrase": "proof-of-concept_instantiation"}, {"score": 0.0026268961477241026, "phrase": "xadl"}, {"score": 0.0024914105981393127, "phrase": "original_and_revised_ads"}, {"score": 0.0024556852466581527, "phrase": "empirical_study"}, {"score": 0.002329009499335603, "phrase": "manually_specified_elements"}, {"score": 0.0022302306304023602, "phrase": "manual_changes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Composition", " Relations", " Software architecture", " Architectural models", " Empirical analysis", " Architectural description language (ADL)"], "paper_abstract": "Managing the architectural description (AD) of a complex software system and maintaining consistency among the different models is a demanding task. To understand the underlying problems, we analyse several non-trivial software architectures. The empirical study shows that a substantial amount of information of ADs is repeated, mainly by integrating information of different models in new models. Closer examination reveals that the absence of rigorously specified dependencies among models and the lack of support for automated composition of models are primary causes of management and consistency problems in software architecture. To tackle these problems, we introduce an approach in which compositions of models, together with relations among models, are explicitly supported in the ADL. We introduce these concepts formally and discuss a proof-of-concept instantiation of composition in xADL and its supporting tools. The approach is evaluated by comparing the original and revised ADs in an empirical study. The study indicates that our approach reduces the number of manually specified elements by 29%, and reduces the number of manual changes to elements for several realistic change scenarios by 52%. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Composition of architectural models: Empirical analysis and language support", "paper_id": "WOS:000283641600009"}