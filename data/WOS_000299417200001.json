{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "quality_requirements"}, {"score": 0.0044219992735047954, "phrase": "major_drive"}, {"score": 0.004377921202912336, "phrase": "today's_software_development"}, {"score": 0.0037480753312398754, "phrase": "partition-based_distributed_stock_trading_service_system"}, {"score": 0.0035827424231607784, "phrase": "resource_utilization"}, {"score": 0.003339886795391701, "phrase": "detailed_experiments"}, {"score": 0.00327356326590461, "phrase": "design_alternatives"}, {"score": 0.0030823667846259836, "phrase": "static_load_distribution_strategy"}, {"score": 0.0030363332738004454, "phrase": "dynamic_load_balancing_strategy"}, {"score": 0.0029909851863915283, "phrase": "first_strategy"}, {"score": 0.0029169007179202164, "phrase": "initial_balanced_workload"}, {"score": 0.002873331232538783, "phrase": "system's_server_cluster"}, {"score": 0.002830410693265704, "phrase": "system_initialization_time"}, {"score": 0.0027741761880779535, "phrase": "second_strategy"}, {"score": 0.0027054473441439422, "phrase": "balanced_workload"}, {"score": 0.002665027876903161, "phrase": "system_execution_time"}, {"score": 0.002496722870659199, "phrase": "server_resources"}, {"score": 0.002422661411769552, "phrase": "user_requests"}, {"score": 0.002362620540317279, "phrase": "required_speed"}, {"score": 0.0022810491620483737, "phrase": "sufficient_room"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["distributed systems", " partition-based server clusters", " quality-of-service", " quality requirements", " software design", " static load distribution and dynamic load balancing strategies", " stock trading systems"], "paper_abstract": "Although quality requirements (QRs) have become a major drive in today's software development, there have been very few real-world examples in the literature that demonstrate how to meet these requirements. This paper presents such an example. Specifically, the paper describes the design of a partition-based distributed stock trading service system that satisfies a set of QRs related to resource utilization, performance, scalability and availability. The paper evaluates this design through detailed experiments and discusses some design alternatives and the lessons learned. Central to this design are a static load distribution strategy and a dynamic load balancing strategy. The first strategy is to achieve an initial balanced workload on the system's server cluster during the system initialization time, whereas the second strategy is to maintain this balanced workload throughout the system execution time. Together, these two strategies work in unison to ensure that the server resources are efficiently utilized; the user requests are processed with the required speed; the application is partitioned with sufficient room to scale; and the system is highly available. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Satisfying quality requirements in the design of a partition-based, distributed stock trading system", "paper_id": "WOS:000299417200001"}