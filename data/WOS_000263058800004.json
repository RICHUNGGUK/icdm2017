{"auto_keywords": [{"score": 0.004700468701207975, "phrase": "formal_specification"}, {"score": 0.004533806239310673, "phrase": "state-based_notations"}, {"score": 0.0041842092128678105, "phrase": "system_history"}, {"score": 0.004150761431291174, "phrase": "behavioural_specifications"}, {"score": 0.003908246778916674, "phrase": "exact_nature"}, {"score": 0.003769567397860168, "phrase": "semantic_models"}, {"score": 0.003739421738326676, "phrase": "corresponding_notions"}, {"score": 0.0036504182609411852, "phrase": "state_based_systems"}, {"score": 0.003549245218355768, "phrase": "sequential_programs"}, {"score": 0.003368707839819003, "phrase": "substantial_research"}, {"score": 0.003083793024782014, "phrase": "recent_results"}, {"score": 0.0030468495296763617, "phrase": "relational_model"}, {"score": 0.0029862549873935496, "phrase": "process_algebraic_models"}, {"score": 0.002868646843975439, "phrase": "relational_framework_lead"}, {"score": 0.0028456853685842293, "phrase": "relational_data_refinement"}, {"score": 0.0027667539384678814, "phrase": "singleton_failures"}, {"score": 0.0027008385562908425, "phrase": "process_semantics"}, {"score": 0.0025840347813610815, "phrase": "general_flexible_scheme"}, {"score": 0.002472269923319476, "phrase": "relational_refinement"}, {"score": 0.0024036710362692042, "phrase": "previous_characterisations"}, {"score": 0.0023369711258107244, "phrase": "relational_refinement_rules"}, {"score": 0.002244876254113051, "phrase": "failures-divergences_refinement"}, {"score": 0.0021219954544970878, "phrase": "interactive_theorem"}, {"score": 0.0021049977753042253, "phrase": "kiv."}], "paper_keywords": ["Data refinement", " Z", " Simulations, Process algebraic semantics", " Failures-divergences refinement", " Deadlock", " Internal operations", " Outputs", " Mechanisation", " KIV"], "paper_abstract": "Two styles of description arise naturally in formal specification: state-based and behavioural. In state-based notations, a system is characterised by a collection of variables, and their values determine which actions may occur throughout a system history. Behavioural specifications describe the chronologies of actions-interactions between a system and its environment. The exact nature of such interactions is captured in a variety of semantic models with corresponding notions of refinement; refinement in state based systems is based on the semantics of sequential programs and is modelled relationally. Acknowledging that these viewpoints are complementary, substantial research has gone into combining the paradigms. The purpose of this paper is to do three things. First, we survey recent results linking the relational model of refinement to the process algebraic models. Specifically, we detail how variations in the relational framework lead to relational data refinement being in correspondence with traces-divergences, singleton failures and failures-divergences refinement in a process semantics. Second, we generalise these results by providing a general flexible scheme for incorporating the two main \"erroneous\" concurrent behaviours: deadlock and divergence, into relational refinement. This is shown to subsume previous characterisations. In doing this we derive relational refinement rules for specifications containing both internal operations and outputs that corresponds to failures-divergences refinement. Third, the theory has been formally specified and verified using the interactive theorem prover KIV.", "paper_title": "Relational concurrent refinement part II: Internal operations and outputs", "paper_id": "WOS:000263058800004"}