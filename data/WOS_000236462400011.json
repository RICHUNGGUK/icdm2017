{"auto_keywords": [{"score": 0.03826261711617252, "phrase": "curry"}, {"score": 0.00481495049065317, "phrase": "fuzzy_logic"}, {"score": 0.004769444094319619, "phrase": "mathematical_functions"}, {"score": 0.004441517985511521, "phrase": "fuzzy_logic_programming"}, {"score": 0.004296264970612285, "phrase": "richer_and_much_more_expressive_framework"}, {"score": 0.004175533280178052, "phrase": "fuzzy_logic_features"}, {"score": 0.003925414526537783, "phrase": "first_stage"}, {"score": 0.003815064377019477, "phrase": "new_research_line"}, {"score": 0.003603549914861701, "phrase": "likelog"}, {"score": 0.0035189057079817285, "phrase": "hybrid_dialect"}, {"score": 0.003355515315708125, "phrase": "functional_logic_dimension"}, {"score": 0.0031845067058084583, "phrase": "similarity_equations"}, {"score": 0.003007846011394511, "phrase": "fuzzy_counterpart"}, {"score": 0.002965229277927781, "phrase": "new_environment"}, {"score": 0.0028274743316389437, "phrase": "operational_mechanism"}, {"score": 0.0027218799769229596, "phrase": "fuzzy_variant"}, {"score": 0.002696101728474703, "phrase": "needed_narrowing"}, {"score": 0.002546466113418944, "phrase": "key_point"}, {"score": 0.0024747842618794255, "phrase": "last_operational_method"}, {"score": 0.0023152577218214804, "phrase": "similar_terms"}, {"score": 0.0021454671611847507, "phrase": "infinite_loops"}], "paper_keywords": ["fuzzy logic", " similarity", " functional logic programming"], "paper_abstract": "This paper focuses on the integration of the (also integrated) declarative paradigms of functional logic and fuzzy logic programming, in order to obtain a richer and much more expressive framework where mathematical functions cohabit with fuzzy logic features. In this sense, this paper must be seen as a first stage in the development of this new research line. Starting with two representative languages from both settings, namely Curry and Likelog, we propose an hybrid dialect where a set of rewriting rules associated to the functional logic dimension of the language, are accompanied with a set of similarity equations between symbols of the same nature and arity, which represents the fuzzy counterpart of the new environment. We directly act inside the kernel of the operational mechanism of the language, thus obtaining a fuzzy variant of needed narrowing which fully exploits the similarities collected in a given program. A key point in the design of this last operational method is that, apart from computing at least the same elements of the crisp case, all similar terms of a given goal are granted to be completely treated too while avoiding the risk of infinite loops associated to the intrinsic (reflexive, symmetric and transitive) properties of similarity relations.", "paper_title": "Programming with fuzzy logic and mathematical functions", "paper_id": "WOS:000236462400011"}