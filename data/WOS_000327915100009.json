{"auto_keywords": [{"score": 0.0443846095296793, "phrase": "interaction_graph"}, {"score": 0.02714978140601789, "phrase": "graph_languages"}, {"score": 0.013191802238045251, "phrase": "input_graph"}, {"score": 0.00481495049065317, "phrase": "simple_protocols"}, {"score": 0.004637478829869904, "phrase": "extremely_limited_computational_entities"}, {"score": 0.004406994912939125, "phrase": "interacting_entities"}, {"score": 0.004199173074059755, "phrase": "network's_connectivity"}, {"score": 0.004001112159558637, "phrase": "whole_interaction_graph"}, {"score": 0.003741371936431574, "phrase": "simple_graph_protocols"}, {"score": 0.0036422425344358037, "phrase": "computational_entities"}, {"score": 0.0035457302646174148, "phrase": "finite-state_automata"}, {"score": 0.003451766520526601, "phrase": "fixed_size_grammar"}, {"score": 0.0029221312451219203, "phrase": "angluin_et_al"}, {"score": 0.002769209760453212, "phrase": "finite_set"}, {"score": 0.00266693888510356, "phrase": "corresponding_agents"}, {"score": 0.002631333840588461, "phrase": "example_protocols"}, {"score": 0.002610198789888055, "phrase": "interesting_properties"}, {"score": 0.002493592357827492, "phrase": "input_graphs"}, {"score": 0.002447101794397243, "phrase": "computational_power"}, {"score": 0.0023440589015485077, "phrase": "exact_characterization"}, {"score": 0.0022880115261460212, "phrase": "mgp_model"}, {"score": 0.0022574539115388054, "phrase": "complete_interaction_graphs"}, {"score": 0.0021798963627236915, "phrase": "nondeterministic_turing_machine"}, {"score": 0.0021682027434117095, "phrase": "linear_space"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Population protocol", " Diffuse computation", " Finite-state agent", " Intermittent communication", " Stable computation", " Passive mobility", " Graph property", " Self-awareness", " Complexity"], "paper_abstract": "We explore the capability of a network of extremely limited computational entities to decide properties about itself or any of its subnetworks. We consider that the underlying network of the interacting entities (devices, agents, processes etc.) is modeled by an interaction graph that reflects the network's connectivity. We examine the following two cases: First, we consider the case where the input graph is the whole interaction graph and second where it is some subgraph of the interaction graph given by some preprocessing on the network. In each case, we devise simple graph protocols that can decide properties of the input graph. The computational entities, that are called agents, are modeled as finite-state automata and run the same global graph protocol. Each protocol is a fixed size grammar, that is, its description is independent of the size (number of agents) of the network. This size is not known by the agents. We present two simple models (one for each case), the Graph Decision Mediated Population Protocol (GDMPP) and the Mediated Graph Protocol (MGP) models, similar to the Population Protocol model of Angluin et al., where each network link (edge of the interaction graph) is characterized by a state taken from a finite set. This state can be used and updated during each interaction between the corresponding agents. We provide some example protocols and some interesting properties for the two models concerning the computability of graph languages in various settings (disconnected input graphs, stabilizing input graphs). We show that the computational power within the family of all (at least) weakly-connected input graphs is fairly restricted. Finally, we give an exact characterization of the class of graph languages decidable by the MGP model in the case of complete interaction graphs: it is equal to the class of graph languages decidable by a nondeterministic Turing Machine of linear space that receives its input graph by its adjacency matrix representation. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "The computational power of simple protocols for self-awareness on graphs", "paper_id": "WOS:000327915100009"}