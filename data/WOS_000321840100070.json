{"auto_keywords": [{"score": 0.0416993321607236, "phrase": "dag"}, {"score": 0.013390905909604256, "phrase": "efficient_encoding"}, {"score": 0.00481495049065317, "phrase": "high_resolution_sparse_voxel"}, {"score": 0.004677032188041644, "phrase": "binary_voxel_grid"}, {"score": 0.004449688143230257, "phrase": "sparse_voxel_octree"}, {"score": 0.004268663239979243, "phrase": "directed_acyclic_graph"}, {"score": 0.004146329622457076, "phrase": "svo"}, {"score": 0.004061088450663783, "phrase": "empty_regions"}, {"score": 0.0038796562792487, "phrase": "identical_regions"}, {"score": 0.003690927840780375, "phrase": "identical_subtrees"}, {"score": 0.003615016816532732, "phrase": "efficient_bottom-up_algorithm"}, {"score": 0.0035113478590679133, "phrase": "minimal_dag"}, {"score": 0.003354393040689453, "phrase": "complete_svo"}, {"score": 0.003231191164622055, "phrase": "tested_scenes"}, {"score": 0.0028760125558659907, "phrase": "memory_cost"}, {"score": 0.0027818804382539444, "phrase": "memory_consumption"}, {"score": 0.0026354246446771324, "phrase": "ideal_svo"}, {"score": 0.0023948981440134478, "phrase": "hard_and_soft_shadows"}, {"score": 0.002335838283092986, "phrase": "primary_rays"}, {"score": 0.002316476356455289, "phrase": "extremely_high_resolution_dags"}, {"score": 0.0021050780127374337, "phrase": "gpu"}], "paper_keywords": ["octree", " sparse", " directed acyclic graph", " geometry", " GPU", " ray tracing"], "paper_abstract": "We show that a binary voxel grid can be represented orders of magnitude more efficiently than using a sparse voxel octree (SVO) by generalising the tree to a directed acyclic graph (DAG). While the SVO allows for efficient encoding of empty regions of space, the DAG additionally allows for efficient encoding of identical regions of space, as nodes are allowed to share pointers to identical subtrees. We present an efficient bottom-up algorithm that reduces an SVO to a minimal DAG, which can be applied even in cases where the complete SVO would not fit in memory. In all tested scenes, even the highly irregular ones, the number of nodes is reduced by one to three orders of magnitude. While the DAG requires more pointers per node, the memory cost for these is quickly amortized and the memory consumption of the DAG is considerably smaller, even when compared to an ideal SVO without pointers. Meanwhile, our sparse voxel DAG requires no decompression and can be traversed very efficiently. We demonstrate this by ray tracing hard and soft shadows, ambient occlusion, and primary rays in extremely high resolution DAGs at speeds that are on par with, or even faster than, state-of-the-art voxel and triangle GPU ray tracing.", "paper_title": "High Resolution Sparse Voxel DAGs", "paper_id": "WOS:000321840100070"}