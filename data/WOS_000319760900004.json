{"auto_keywords": [{"score": 0.03237078632108389, "phrase": "optimal_tree"}, {"score": 0.015381740485070712, "phrase": "optimal_tree_structure"}, {"score": 0.010526999669024897, "phrase": "k-replacement_problem"}, {"score": 0.00481495049065317, "phrase": "two-user_replacement_and_deletion_problems"}, {"score": 0.004648609688625397, "phrase": "key_management_problem"}, {"score": 0.004567596860086148, "phrase": "key_tree"}, {"score": 0.004371160978838441, "phrase": "updating_cost"}, {"score": 0.0041102032028337366, "phrase": "remaining_keys"}, {"score": 0.003916098498242888, "phrase": "worst_case_updating_cost"}, {"score": 0.0037311260623089436, "phrase": "snoeyink_et_al"}, {"score": 0.003633927813203731, "phrase": "twentieth_annual_ieee_conference"}, {"score": 0.0034018288705284427, "phrase": "k-user_case"}, {"score": 0.003298631258267805, "phrase": "k-deletion_problem"}, {"score": 0.0029548937818509656, "phrase": "constant_k."}, {"score": 0.002890557197908352, "phrase": "tight_degree"}, {"score": 0.002753891109273246, "phrase": "maximum_number"}, {"score": 0.0026121403051734744, "phrase": "fixed_worst_case_replacement_cost"}, {"score": 0.002544017922741882, "phrase": "balanced_tree"}, {"score": 0.0021805201234139475, "phrase": "minimum_worst_case"}, {"score": 0.0021049977753042253, "phrase": "two-user_replacement_problem"}], "paper_keywords": ["Key tree", " Optimality", " Updating cost", " User deletion", " Multicast cost"], "paper_abstract": "We study the optimal tree structure for the key management problem. In the key tree, when two or more leaves are deleted or replaced, the updating cost is defined to be the number of encryptions needed to securely update the remaining keys. The objective is to find the optimal tree structure where the worst case updating cost is minimum. We extend the result of 1-replacement problem in Snoeyink et al. (Proceedings of the twentieth annual IEEE conference on computer communications, pp. 422-431, 2001) to the k-user case. We first show that the k-deletion problem can be solved by handling k-replacement problem. Focusing on the k-replacement problem, we show that the optimal tree can be computed in time given a constant k. Then we derive a tight degree bound for optimal tree when replacing two users. By investigating the maximum number of leaves that can be placed on the tree given a fixed worst case replacement cost, we prove that a balanced tree with certain root degree 5a parts per thousand currency signda parts per thousand currency sign7 where the number of leaves in the subtrees differs by at most one and each subtree is a 2-3 tree can always achieve the minimum worst case 2-replacement cost. Thus the optimal tree for two-user replacement problem can be efficiently constructed in O(n) time.", "paper_title": "Optimal key tree structure for two-user replacement and deletion problems", "paper_id": "WOS:000319760900004"}