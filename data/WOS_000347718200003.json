{"auto_keywords": [{"score": 0.03951821898402553, "phrase": "communication_complexity"}, {"score": 0.039299987230067404, "phrase": "ampc_protocols"}, {"score": 0.03449254112778733, "phrase": "non-optimal_resilience"}, {"score": 0.03345207366592562, "phrase": "optimal_resilience"}, {"score": 0.026300792488220398, "phrase": "amortized_communication"}, {"score": 0.026153563917107464, "phrase": "field_elements"}, {"score": 0.02600713750006141, "phrase": "multiplication_gate"}, {"score": 0.00481495049065317, "phrase": "multiparty_computation"}, {"score": 0.00478740563679966, "phrase": "secure_multi-party_computation"}, {"score": 0.004719227665313307, "phrase": "information-theoretic_security"}, {"score": 0.0045726187330434025, "phrase": "agreed_function"}, {"score": 0.004533427352547707, "phrase": "finite_field"}, {"score": 0.004392565073466714, "phrase": "computationally_unbounded_active_adversary"}, {"score": 0.00428056179663201, "phrase": "important_variant"}, {"score": 0.004257066014583905, "phrase": "mpc"}, {"score": 0.004183393072178239, "phrase": "asynchronous_network"}, {"score": 0.0041001740903338834, "phrase": "perfect_ampc"}, {"score": 0.003961330917648707, "phrase": "statistical_ampc"}, {"score": 0.00354163363975789, "phrase": "avss"}, {"score": 0.003481120202034407, "phrase": "main_building_blocks"}, {"score": 0.003334309053314909, "phrase": "first_one"}, {"score": 0.003230584762460845, "phrase": "second_one"}, {"score": 0.0031032109441552287, "phrase": "common_interesting_property"}, {"score": 0.003032686676675628, "phrase": "previous_schemes"}, {"score": 0.0027503564589458837, "phrase": "existing_avss_schemes"}, {"score": 0.0026724206954249125, "phrase": "new_property"}, {"score": 0.0026342827320931937, "phrase": "degree-reduction_step"}, {"score": 0.0025966876163886882, "phrase": "multiplication_gates"}, {"score": 0.002574387911697007, "phrase": "ampc_protocol"}, {"score": 0.0025158514649823724, "phrase": "statistical_ampc_protocol"}, {"score": 0.0023413466904082143, "phrase": "existing_statistical_ampc_protocols"}, {"score": 0.002301295044886946, "phrase": "perfect_ampc_protocol"}], "paper_keywords": ["Unconditional security", " Fault tolerance", " Communication complexity"], "paper_abstract": "Secure Multi-Party Computation (MPC) providing information-theoretic security allows a set of n parties to securely compute an agreed function over a finite field, even if t parties are under the control of a computationally unbounded active adversary. Asynchronous MPC (AMPC) is an important variant of MPC, which works over an asynchronous network. It is well known that perfect AMPC is possible if and only if t < n/4, while statistical AMPC is possible if and only if t < n/3. In this paper, we study the communication complexity of AMPC protocols (both statistical and perfect) designed with exactly n=4t+1 parties. Our major contributions in this paper are as follows:Asynchronous Verifiable Secret Sharing (AVSS) is one of the main building blocks for AMPC protocols. In this paper, we design two AVSS schemes with 4t+1 parties: the first one is statistically-secure and has non-optimal resilience, while the second one is perfectly-secure and has optimal resilience. Both these schemes achieve a common interesting property, which was not achieved by the previous schemes. Specifically, our AVSS schemes allow to share a secret with the degree of sharing at most d, where ta parts per thousand currency signda parts per thousand currency sign2t. In contrast, the existing AVSS schemes allow the degree of sharing to be at most t. The new property of our AVSS schemes simplifies the degree-reduction step for the evaluation of multiplication gates in an AMPC protocol. Using our statistical AVSS scheme, we design a statistical AMPC protocol with n=4t+1 which requires an amortized communication of field elements per multiplication gate. Though this protocol has non-optimal resilience, it significantly improves the communication complexity of the existing statistical AMPC protocols. We then present a perfect AMPC protocol with n=4t+1 (using our perfect AVSS scheme), which also incurs an amortized communication of field elements per multiplication gate. This protocol improves on our statistical AMPC protocol as it has optimal resilience. This is the most communication efficient, optimally-resilient, perfect AMPC protocol.", "paper_title": "Efficient Asynchronous Verifiable Secret Sharing and Multiparty Computation", "paper_id": "WOS:000347718200003"}