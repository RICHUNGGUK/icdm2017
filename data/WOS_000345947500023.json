{"auto_keywords": [{"score": 0.0100158094452187, "phrase": "software_lifecycles"}, {"score": 0.008013396996154784, "phrase": "shared_components"}, {"score": 0.007920987915863247, "phrase": "software_reuse"}, {"score": 0.007345573544245781, "phrase": "semantic_information"}, {"score": 0.00481495049065317, "phrase": "requirement_specifications"}, {"score": 0.004503315665983588, "phrase": "srs"}, {"score": 0.004399672486322409, "phrase": "desired_software_system"}, {"score": 0.004187284711626886, "phrase": "traditional_systems"}, {"score": 0.004102827311680473, "phrase": "potential_shared_capabilities"}, {"score": 0.003916098498242888, "phrase": "automated_approach"}, {"score": 0.00387075437337141, "phrase": "shared_software_services"}, {"score": 0.0038482788186350297, "phrase": "multiple_text-based_srss"}, {"score": 0.003705323407433896, "phrase": "overlapping_requirements"}, {"score": 0.0034551632687788857, "phrase": "different_systems"}, {"score": 0.003385422532841961, "phrase": "syntactic_similarity"}, {"score": 0.0033559647822437298, "phrase": "srs_text"}, {"score": 0.0032882197112190756, "phrase": "wordnet_database"}, {"score": 0.003129317057177867, "phrase": "predicate_relations"}, {"score": 0.0030750809317435304, "phrase": "equivalent_requirements"}, {"score": 0.003030600725762668, "phrase": "reusable_services"}, {"score": 0.0030042210975126616, "phrase": "prototype_system"}, {"score": 0.0029349892964423197, "phrase": "experimental_results"}, {"score": 0.002909439481721751, "phrase": "effective_recommendation"}, {"score": 0.0023585737444452573, "phrase": "requirements_document"}, {"score": 0.0022974765563692776, "phrase": "manual_selection"}, {"score": 0.0021991369769963545, "phrase": "similar_requirements"}, {"score": 0.0021799789348982516, "phrase": "single_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Requirements engineering", " Similarity analysis", " Shared service discovery"], "paper_abstract": "Context: Software Requirement Specifications (SRSs) are central to software lifecycles. An SRS defines the functionalities and constraints of a desired software system, hence it often serves as reference for further development. Software lifecycles concerned with the conversion of traditional systems into more service-oriented infrastructures can benefit from understanding potential shared capabilities through the analysis of SRSs. Objective: In this paper, we propose an automated approach capable of recommending shared software services from multiple text-based SRSs created by different organizations. Our goal is to facilitate the identification of overlapping requirements in these specifications and subsequently recommend shared components, which promotes software reuse. The shared components can be implemented as services that are invoked across different systems. Method: Our approach leverages the syntactic similarity of the SRS text augmented with semantic information derived from the WordNet database. This work extends our earlier studies by introducing an algorithm that utilizes noun, verb, and predicate relations to enhance the discovery of equivalent requirements and the recommendation of reusable services. A prototype system is implemented to evaluate the approach and experimental results have shown effective recommendation of requirements and their realized shared services. Results: our automatic recommendation approach generates recommendations in few minutes compared to 9 h when services are manually inspected by developers. Our approach is also able to recommend services that are overlooked by the same developers, and to identify similarity between requirements even if these requirements are reworded. Conclusion: We show through experimentation that we can efficiently recommend services by leveraging both the syntactical structure and the semantic information of a requirements document and that our approach is more effective than the manual selection of services by experts. We also show that our approach is effective in detecting similar requirements for a single system and hence discovering opportunities for software reuse. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Shared service recommendations from requirement specifications: A hybrid syntactic and semantic toolkit", "paper_id": "WOS:000345947500023"}