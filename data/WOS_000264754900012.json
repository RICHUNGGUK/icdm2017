{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "denotational_semantics"}, {"score": 0.004539005582217309, "phrase": "powerful_technique"}, {"score": 0.004278807087784626, "phrase": "programming_languages"}, {"score": 0.0041136473765874815, "phrase": "language_constructs"}, {"score": 0.0035141291835319682, "phrase": "unrelated_constructs"}, {"score": 0.0034118234596993836, "phrase": "current_approaches"}, {"score": 0.0028574164693918433, "phrase": "tangled_semantic_definitions"}, {"score": 0.0026933542552712033, "phrase": "incremental_approach"}, {"score": 0.002640781900605126, "phrase": "denotational_semantic_specifications"}, {"score": 0.00241658945942583, "phrase": "new_features"}, {"score": 0.002346160830406661, "phrase": "existing_equations"}, {"score": 0.0022113879114507577, "phrase": "formal_language"}, {"score": 0.002146926767291475, "phrase": "function_transformation"}, {"score": 0.0021049977753042253, "phrase": "aspect_weaving"}], "paper_keywords": ["semantics of programming languages", " denotational semantics", " modularity", " aspect-oriented definitions"], "paper_abstract": "Denotational semantics is a powerful technique to formally de. ne programming languages. However, language constructs are not always orthogonal, so many semantic equations in a definition may have to be aware of unrelated constructs semantics. Current approaches for modularity in this formalism do not address this problem, providing, for this reason, tangled semantic definitions. This paper proposes an incremental approach for denotational semantic specifications, in which each step can either add new features or adapt existing equations, by means of a formal language based on function transformation and aspect weaving.", "paper_title": "Disentangling Denotational Semantics Definitions", "paper_id": "WOS:000264754900012"}