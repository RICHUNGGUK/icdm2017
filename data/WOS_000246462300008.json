{"auto_keywords": [{"score": 0.03208723958700832, "phrase": "pareto"}, {"score": 0.00481495049065317, "phrase": "design-time_application_mapping"}, {"score": 0.004614483128885678, "phrase": "run-time_management"}, {"score": 0.004086350434865782, "phrase": "basic_operating_system_services"}, {"score": 0.003988180913997414, "phrase": "run-time_decision-making"}, {"score": 0.003685067218455088, "phrase": "active_applications"}, {"score": 0.0035965032173588753, "phrase": "application_constraints"}, {"score": 0.0034049123167891955, "phrase": "available_platform_resources"}, {"score": 0.0032431667821391044, "phrase": "conservative_worst-case_assumptions"}, {"score": 0.0031459887611258765, "phrase": "large_run-time_overheads"}, {"score": 0.003089080923888397, "phrase": "state-of-the-art_rtos_kernels"}, {"score": 0.0028890603352364273, "phrase": "design-time_application"}, {"score": 0.0027854565462509095, "phrase": "low-complexity_run-time_manager"}, {"score": 0.002735052488172277, "phrase": "design-time_exploration_phase"}, {"score": 0.002636956926079255, "phrase": "main_contribution"}, {"score": 0.002278440725193305, "phrase": "mp-soc_platfonn_simulator"}, {"score": 0.0021966859554037174, "phrase": "optimal_trade-offs"}, {"score": 0.0021438155673297377, "phrase": "design-time_exploration"}, {"score": 0.0021049977753042253, "phrase": "run-time_manager"}], "paper_keywords": [""], "paper_abstract": "In an Multi-Processor system-on-Chip (MP-SoC) environment, a customized run-time management layer should be incorporated on top of the basic Operating System services to alleviate the run-time decision-making and to globally optimise costs (e.g. energy consumption) across all active applications, according to application constraints (e.g. performance, user requirements) and available platform resources. To that end, to avoid conservative worst-case assumptions, while also eliminating large run-time overheads on the state-of-the-art RTOS kernels, a Pareto-based approach is proposed combining a design-time application and platform exploration with a low-complexity run-time manager. The design-time exploration phase of this approach is the main contribution of this work. It is also substantiated with two real-life applications (image processing and video codec multimedia). These are simulated on MP-SoC platfonn simulator and used to illustrate the optimal trade-offs offered by the design-time exploration to the run-time manager.", "paper_title": "Design-time application mapping and platform exploration for MP-SoC customised run-time management", "paper_id": "WOS:000246462300008"}