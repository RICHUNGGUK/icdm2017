{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_projects"}, {"score": 0.004761132425263795, "phrase": "software_repository_data"}, {"score": 0.004425616928975799, "phrase": "successful_software_project"}, {"score": 0.004230956171850591, "phrase": "risk_management"}, {"score": 0.004090577229368418, "phrase": "key_activities"}, {"score": 0.00397714507836836, "phrase": "significant_risk"}, {"score": 0.0038668462001710314, "phrase": "software_development_phase"}, {"score": 0.003823584649521733, "phrase": "software_project_failures"}, {"score": 0.0036966717141736355, "phrase": "insufficient_and_ineffective_risk_information"}, {"score": 0.0035141291835319682, "phrase": "software_risk_prediction"}, {"score": 0.0033594249301033604, "phrase": "project_managers"}, {"score": 0.003247868216333148, "phrase": "decision_making"}, {"score": 0.003175556211659149, "phrase": "scope_coverage"}, {"score": 0.003140004304719746, "phrase": "resource_allocation"}, {"score": 0.002918394200972564, "phrase": "risk_prediction_model"}, {"score": 0.0027898428590137515, "phrase": "software_repository"}, {"score": 0.0027123819773059127, "phrase": "risk_threat_level"}, {"score": 0.0025638362414466278, "phrase": "defect_lifecycle"}, {"score": 0.0023962545023307937, "phrase": "markov_chain"}, {"score": 0.0023428586429492713, "phrase": "potential_risk_level"}, {"score": 0.0022777800735119405, "phrase": "proposed_approach"}, {"score": 0.0022522565004588113, "phrase": "practical_real-industry_mobile_software_projects"}, {"score": 0.0021049977753042253, "phrase": "threat_risk_estimation"}], "paper_keywords": ["Software risk", " project management", " software repository", " software engineering"], "paper_abstract": "Although the factors that need to be focused on for a successful software project appear to be difficult to define, risk management has become one of the key activities for achieving such success because significant risk is involved in each software development phase. Software project failures are often a result of insufficient and ineffective risk information regarding the future. To overcome this, software risk prediction should be performed in advance to allow project managers insight into providing more valuable information for decision making, such as scope coverage, resource allocation, and schedule changes. In this research, we propose a risk prediction model from the perspective of quality using a software repository. We evaluated the risk threat level by mapping some defect attributes that exist in the defect lifecycle, defined their risk threat transition states, and applied a Markov chain for predicting the potential risk level. We evaluated the proposed approach using practical real-industry mobile software projects. The experimental results confirm that our approach is applicable to software threat risk estimation.", "paper_title": "Probabilistic Approach to Predicting Risk in Software Projects Using Software Repository Data", "paper_id": "WOS:000368433900004"}