{"auto_keywords": [{"score": 0.04343463608792338, "phrase": "program_assertions"}, {"score": 0.03334897348832243, "phrase": "spv"}, {"score": 0.00481495049065317, "phrase": "logical_foundations"}, {"score": 0.004729856080441582, "phrase": "compiler_prototypes"}, {"score": 0.004352123742308589, "phrase": "vc_project_success"}, {"score": 0.004275173711009189, "phrase": "appropriate_end-user_consultation"}, {"score": 0.004028326293950714, "phrase": "run-time_assertion_checking"}, {"score": 0.003818326867123525, "phrase": "likely_next_step"}, {"score": 0.003706410380455668, "phrase": "vc_adoption"}, {"score": 0.0035551969986263553, "phrase": "extended_static_checking"}, {"score": 0.0033497809969621267, "phrase": "static_program_verification"}, {"score": 0.0031939996970411027, "phrase": "current_vc_prototypes"}, {"score": 0.0029561107046138136, "phrase": "standard_run-time_interpretation"}, {"score": 0.0026241684260044414, "phrase": "industrial_developers"}, {"score": 0.002315574871863272, "phrase": "survey_results"}], "paper_keywords": ["assertions", " industrial practice", " survey", " logical foundations", " runtime assertion checking", " static program verification", " extended static checking", " design by contract"], "paper_abstract": "The verifying compiler (VC) project proposals suggest that mainstream software developers are its targeted end-users. Like other software engineering efforts, the VC project success depends on appropriate end-user consultation. Industrial use of program assertions for the purpose of run-time assertion checking (RAC) is becoming commonplace. A likely next step on the path to VC adoption is the use of assertions in extended static checking (ESC), a fully automated form of static program verification (SPV). Unfortunately, all current VC prototypes supporting SPV, adopt a semantics which is unsound relative to the standard run-time interpretation of assertions. In this article, we report on the results of a survey in which we asked industrial developers what logical semantics they want program assertions to have, and whether consistency across RAC and SPV tools is important. Survey results indicate that developers are in favor of a semantics for assertions that is compatible with their current use in RAC.", "paper_title": "Are the logical foundations of verifying compiler prototypes matching user expectations?", "paper_id": "WOS:000247239000002"}