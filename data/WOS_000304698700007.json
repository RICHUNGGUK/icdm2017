{"auto_keywords": [{"score": 0.04946746193614641, "phrase": "heterogeneous_multi-core_system"}, {"score": 0.010615487176056888, "phrase": "fourier"}, {"score": 0.008871952949651606, "phrase": "local_storage"}, {"score": 0.008787148574400295, "phrase": "single_accelerator"}, {"score": 0.0046776367107079315, "phrase": "hybrid_computing_systems_increases"}, {"score": 0.004573537724320323, "phrase": "new_ways"}, {"score": 0.004515091332353969, "phrase": "unique_and_efficient_computational_power"}, {"score": 0.00447174501210281, "phrase": "heterogeneous_multi-core_systems"}, {"score": 0.004274924385132795, "phrase": "fft"}, {"score": 0.004113017293557933, "phrase": "small-scale_ffts"}, {"score": 0.003957261767109878, "phrase": "real-world_fft_applications"}, {"score": 0.003746613650522989, "phrase": "efficient_large_fft_implementations"}, {"score": 0.0036396555012105365, "phrase": "first_known_fft_library"}, {"score": 0.003524377837382856, "phrase": "one-dimensional_ffts"}, {"score": 0.0031286075376993103, "phrase": "novel_schemes"}, {"score": 0.0031085239972726106, "phrase": "large-scale_fft_factorization"}, {"score": 0.0029810774705309536, "phrase": "buffer_designs"}, {"score": 0.002895910285227502, "phrase": "communication_overhead"}, {"score": 0.0028041227333229883, "phrase": "large-scale_fft"}, {"score": 0.0027327860743648165, "phrase": "data_transfer_bound"}, {"score": 0.002654693503799094, "phrase": "significant_contribution"}, {"score": 0.0025871484499191758, "phrase": "major_component"}, {"score": 0.002521317643120762, "phrase": "present_quantitative_performance_comparisons"}, {"score": 0.0024730434312323296, "phrase": "specific_architecture"}, {"score": 0.00242569125010088, "phrase": "fundamental_features"}, {"score": 0.0024023554314227067, "phrase": "different_communication_paradigms"}, {"score": 0.0023487724551034227, "phrase": "today's_computer_systems"}, {"score": 0.002296381861149051, "phrase": "general_purpose_accelerators"}, {"score": 0.002195072749159075, "phrase": "especially_when_they_have_limited_local_storage_or_steep_cache_hierarchies"}, {"score": 0.0021049977753042253, "phrase": "similar_architectures"}], "paper_keywords": ["FFT", " heterogeneous multi-core system"], "paper_abstract": "As interest in hybrid computing systems increases, people are eager to find new ways to exploit the unique and efficient computational power of the heterogeneous multi-core systems. Although there has been much interest in implementing high-performance fast Fourier transform (FFT) libraries on this kind of system, most existing libraries focus on small-scale FFTs whose data can fit in the local storage of a single accelerator. Real-world FFT applications often require much larger scale FFTs, but it is extremely challenging for heterogeneous multi-core system with distributed architectures to make efficient large FFT implementations. In this paper, we introduce the first known FFT library for the heterogeneous multi-core system with distributed architecture that can solve one-dimensional FFTs larger than what fits in a single accelerator. Our implementation achieves 67% performance improvement of FFTW 3.2.2 (Fastest Fourier Transform in the West) and sustains over 36 single precision FFT GFLOPs 'end-to-end' Achieving such high performance requires novel schemes for large-scale FFT factorization, data permutation and all-to-all exchanges, and buffer designs to maximize use of the local storage while minimizing communication overhead. One important finding in this paper is that large-scale FFT on this kind of architecture behaves as data transfer bound which is quite different from other architectures. A significant contribution of this paper is that for each major component of our algorithm, we explore many possible design options and present quantitative performance comparisons. This provides value beyond specific architecture, as it illustrates the fundamental features associated with different communication paradigms and mechanisms for the heterogeneous multi-core system. Today's computer systems are increasingly being designed to include general purpose accelerators. The techniques in this paper can also be applied to these architectures especially when they have limited local storage or steep cache hierarchies. We also provide insights on applying techniques in this paper to similar architectures.", "paper_title": "Large-scale fast Fourier transform on a heterogeneous multi-core system", "paper_id": "WOS:000304698700007"}