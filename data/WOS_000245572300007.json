{"auto_keywords": [{"score": 0.04495971759688538, "phrase": "grid"}, {"score": 0.033374266958701354, "phrase": "component_framework"}, {"score": 0.00481495049065317, "phrase": "web_service-based_grid"}, {"score": 0.004637478829869904, "phrase": "architecture_and_prototype_implementation"}, {"score": 0.004534136929881113, "phrase": "component-oriented_programming_environment"}, {"score": 0.0040508247605225214, "phrase": "vienna_grid_environment"}, {"score": 0.003701401653850141, "phrase": "compute-intensive_parallel_applications"}, {"score": 0.003407549468745519, "phrase": "common_component_architecture"}, {"score": 0.0033567232965566445, "phrase": "cca"}, {"score": 0.0032817813775647756, "phrase": "models_application_web_services_as_distributed_components"}, {"score": 0.0030901063954739375, "phrase": "vge_services"}, {"score": 0.003021141590548526, "phrase": "component_model"}, {"score": 0.0028661330049356186, "phrase": "application_and_performance_meta-data"}, {"score": 0.0025219085140220773, "phrase": "client_programming_interface"}, {"score": 0.0024287485834314027, "phrase": "grid_applications"}, {"score": 0.002392453087295389, "phrase": "abstract_application_components"}, {"score": 0.0023040642263522505, "phrase": "available_grid_services"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["component-based programming", " compute-intensive Grid applications", " performance related metadata", " CCA", " Web services"], "paper_abstract": "We present the architecture and prototype implementation of a component-oriented programming environment for a Web service based computational Grid. As middleware, we utilize the Vienna Grid Environment (VGE), a framework that enables the provision of compute-intensive parallel applications as configurable, QoS-aware Grid services. Our component model follows the Common Component Architecture (CCA) and models application Web services as distributed components. We describe a component framework that integrates VGE services with a component model allowing to express and dynamically manage application and performance meta-data as well as dependencies on the infrastructure or other components. Furthermore, we show how the client programming interface is used to compose Grid applications from abstract application components that are mapped against available Grid services by the component framework at runtime. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Component-oriented application construction for a Web service-based Grid", "paper_id": "WOS:000245572300007"}