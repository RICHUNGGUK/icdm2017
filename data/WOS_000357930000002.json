{"auto_keywords": [{"score": 0.040637368261652464, "phrase": "spurious_data"}, {"score": 0.015719716506582538, "phrase": "memory-access_validation_scheme"}, {"score": 0.004753670676591174, "phrase": "payload_injection_attacks"}, {"score": 0.00418199705290765, "phrase": "software_attack"}, {"score": 0.003922378980031565, "phrase": "malicious_attacks"}, {"score": 0.003298856341173034, "phrase": "cache_line_size"}, {"score": 0.003133844153806967, "phrase": "proposed_scheme_answers_queries"}, {"score": 0.002864628676257225, "phrase": "control_flow_diversion"}, {"score": 0.0027212777001495176, "phrase": "validation_unit"}, {"score": 0.002601727192945944, "phrase": "memory_hierarchy"}, {"score": 0.0025521085778978042, "phrase": "modern_processor"}, {"score": 0.0024714996534331668, "phrase": "performance_impact"}, {"score": 0.0023934306706217797, "phrase": "experimental_results"}, {"score": 0.002273605493468005, "phrase": "synthesized_payload_injection_attacks"}, {"score": 0.0022159566043745724, "phrase": "taint_information"}, {"score": 0.0021049977753042253, "phrase": "acceptable_performance_impact"}], "paper_keywords": ["Virtual memory", " security"], "paper_abstract": "The authenticity of a piece of data or an instruction is crucial in mitigating threats from various forms of software attack. In spite of the various forms of protection against malicious attacks exploiting spurious data, adversaries have been successful in circumventing such protection. This paper proposes a memory-access validation scheme that manages information on spurious data at the granularity of the cache line size. A validation unit based on the proposed scheme answers queries from other components in the processor so that spurious data can be blocked before control flow diversion. We describe the design of this validation unit as well as its integration into the memory hierarchy of a modern processor and assess its memory requirement and performance impact with two simulators. The experimental results show that our scheme is able to detect synthesized payload injection attacks and to manage taint information with a moderate memory overhead under an acceptable performance impact.", "paper_title": "A Memory-Access Validation Scheme against Payload Injection Attacks", "paper_id": "WOS:000357930000002"}