{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_logic_with_user_interfaces."}, {"score": 0.004556901872357751, "phrase": "uml_activities"}, {"score": 0.004450568197899267, "phrase": "unified_specification"}, {"score": 0.00438105507792004, "phrase": "collaborative_service_behavior"}, {"score": 0.004312622975366676, "phrase": "local_user_interfaces"}, {"score": 0.0041136473765874815, "phrase": "model-driven_development_process"}, {"score": 0.003832198214757852, "phrase": "service_collaborations"}, {"score": 0.0035981701736904495, "phrase": "detailed_operations"}, {"score": 0.003541923233726252, "phrase": "user_interfaces"}, {"score": 0.0033518704336033874, "phrase": "primary_building_blocks"}, {"score": 0.00327356326590461, "phrase": "self-contained_functionalities"}, {"score": 0.003097865379563127, "phrase": "complete_distributed_system"}, {"score": 0.002752390133272192, "phrase": "user_interface_concerns"}, {"score": 0.0027093285574752457, "phrase": "service_collaboration_concerns"}, {"score": 0.0025038930574283174, "phrase": "event-driven_composition_mechanism"}, {"score": 0.002445347925313158, "phrase": "activity_parameter_nodes"}, {"score": 0.002155412043665635, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "situated_collaborative_learning_service"}], "paper_keywords": ["Model-Driven Development", " service-oriented architecture", " user interfaces", " UML activities", " UML collaborations"], "paper_abstract": "We describe a method based on UML activities for the unified specification of collaborative service behavior and local user interfaces. The method enables a model-driven development process, which effectively combines the need to express service collaborations involving several components with the need to provide detailed operations for user interfaces. Our service models use activities as the primary building blocks that encapsulate self-contained functionalities. We show, how a complete distributed system can be decomposed into such building blocks, how this decomposition leads to a separation of user interface concerns from service collaboration concerns, and how they may be combined with an event-driven composition mechanism based on activity parameter nodes. We also demonstrate how different UI frameworks can be supported, and illustrate the method with a case study of a situated collaborative learning service.", "paper_title": "UNIFIED MODELING OF SERVICE LOGIC WITH USER INTERFACES", "paper_id": "WOS:000290492200003"}