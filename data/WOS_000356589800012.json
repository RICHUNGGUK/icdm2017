{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "traceability_links"}, {"score": 0.021325244769652495, "phrase": "source_code"}, {"score": 0.010100715424081957, "phrase": "configuration_management_log"}, {"score": 0.004305481798183612, "phrase": "software_reuse"}, {"score": 0.004122179528285764, "phrase": "manually_recovering_links"}, {"score": 0.004046020290832207, "phrase": "large_group"}, {"score": 0.003946650265907885, "phrase": "significant_costs"}, {"score": 0.003640183972131238, "phrase": "semi-automatic_method"}, {"score": 0.003378385493203297, "phrase": "large_software_products"}, {"score": 0.0027512482368183596, "phrase": "code_elements"}, {"score": 0.0026013505538490223, "phrase": "multiple_products"}, {"score": 0.0023990982005125763, "phrase": "real_products"}, {"score": 0.0022825131641434964, "phrase": "valid_traceability_links"}, {"score": 0.0022402661832994094, "phrase": "reasonable_amount"}, {"score": 0.0021851480717840484, "phrase": "automatic_parts"}, {"score": 0.0021049977753042253, "phrase": "non-automatic_parts"}], "paper_keywords": ["traceability recovery", " configuration management log", " commonality and variability analysis", " software product line"], "paper_abstract": "Traceability links between requirements and source code are helpful in software reuse and maintenance tasks. However, manually recovering links in a large group of products requires significant costs and some links may be overlooked. Here, we propose a semi-automatic method to recover traceability links between requirements and source code in the same series of large software products. In order to support differences in representation between requirements and source code, we recover links by using the configuration management log as an intermediary. We refine the links by classifying requirements and code elements in terms of whether they are common to multiple products or specific to one. As a result of applying our method to real products that have 60KLOC, we have recovered valid traceability links within a reasonable amount of time. Automatic parts have taken 13 minutes 36 seconds, and non-automatic parts have taken about 3 hours, with a recall of 76.2% and a precision of 94.1%. Moreover, we recovered some links that were unknown to engineers. By recovering traceability links, software reusability and maintainability will be improved.", "paper_title": "Recovering Traceability Links between Requirements and Source Code Using the Configuration Management Log", "paper_id": "WOS:000356589800012"}