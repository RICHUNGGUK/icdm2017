{"auto_keywords": [{"score": 0.0407769748728513, "phrase": "original_bin_sizes"}, {"score": 0.00481495049065317, "phrase": "unequal_bin_sizes"}, {"score": 0.004669845451682529, "phrase": "extensible_bin_packing_problem"}, {"score": 0.004037877545494505, "phrase": "original_size"}, {"score": 0.0035179764329354877, "phrase": "total_size"}, {"score": 0.00283870598459543, "phrase": "tight_bounds"}, {"score": 0.0024918548761791435, "phrase": "better_on-line_algorithms"}, {"score": 0.002435190484324197, "phrase": "two-bin_case"}, {"score": 0.0023798115577749225, "phrase": "three-bin_case"}, {"score": 0.0022211005680689666, "phrase": "on-line_algorithms"}, {"score": 0.0021872912745910127, "phrase": "better_competitive_ratios"}, {"score": 0.0021539955106204354, "phrase": "unequal_bins"}, {"score": 0.0021049977753042253, "phrase": "equal_bins"}], "paper_keywords": ["On-line algorithms", " extensible bin packing", " competitive ratio"], "paper_abstract": "In the extensible bin packing problem we are asked to pack a set of items into a given number of bins, each with an original size. However, the original bin sizes can be extended if necessary. The goal is to minimize the total size of the bins. We consider the problem with unequal (original) bin sizes and give the complete analysis on a list scheduling algorithm (LS). Namely we present tight bounds of LS for every collection of original bin sizes and every number of bins. We further show better on-line algorithms for the two-bin case and the three-bin case. Interestingly, it is proved that the on-line algorithms have better competitive ratios for unequal bins than for equal bins. Some variants of the problem are also discussed.", "paper_title": "On-line extensible bin packing with unequal bin sizes", "paper_id": "WOS:000264235100002"}