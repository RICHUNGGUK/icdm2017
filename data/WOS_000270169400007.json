{"auto_keywords": [{"score": 0.04962133415654628, "phrase": "smith-waterman"}, {"score": 0.00481495049065317, "phrase": "scalable_and_highly_parallel_implementation"}, {"score": 0.004723322467153553, "phrase": "graphics_processing_unit"}, {"score": 0.0046781613377273774, "phrase": "cuda._program_development_environments"}, {"score": 0.004611224230543916, "phrase": "graphics_processing_units"}, {"score": 0.004458722048888919, "phrase": "attractive_high_performance_computing_platform"}, {"score": 0.004311241567238011, "phrase": "commonly_posed_problem"}, {"score": 0.004270003565426343, "phrase": "computational_biology"}, {"score": 0.004229158339021651, "phrase": "protein_database"}, {"score": 0.004168618849008299, "phrase": "functional_similarities"}, {"score": 0.004069631519385246, "phrase": "sequence_alignments"}, {"score": 0.0037864980290391354, "phrase": "database_sizes"}, {"score": 0.0035914198812657897, "phrase": "cluster_based_systems"}, {"score": 0.0034892684482068347, "phrase": "scalable_and_highly_parallel_methods"}, {"score": 0.003325410433297401, "phrase": "life_science_researchers"}, {"score": 0.0031238084716187805, "phrase": "gpu_architecture"}, {"score": 0.0030203487665054806, "phrase": "program_architecture"}, {"score": 0.002977061391551628, "phrase": "processor_architecture"}, {"score": 0.0029203055813347874, "phrase": "new_techniques"}, {"score": 0.002864628676257225, "phrase": "memory_footprint"}, {"score": 0.0027697290872182477, "phrase": "memory_hierarchy"}, {"score": 0.0026651084006405756, "phrase": "gsw"}, {"score": 0.0025892330566358503, "phrase": "chip_memory_size_constraint"}, {"score": 0.0025034338848015166, "phrase": "serial_implementation"}, {"score": 0.00242047093248845, "phrase": "query_length"}, {"score": 0.002329009499335603, "phrase": "solid_scalability"}, {"score": 0.002208853811052348, "phrase": "kind_implementation"}, {"score": 0.002146105867635095, "phrase": "gpu"}, {"score": 0.0021049977753042253, "phrase": "cpu-gpu_integrated_environment"}], "paper_keywords": ["Graphics processing unit", " Scalable", " Parallel", " Alignment", " Smith-Waterman", " CUDA"], "paper_abstract": "Program development environments have enabled graphics processing units (GPUs) to become an attractive high performance computing platform for the scientific community. A commonly posed problem in computational biology is protein database searching for functional similarities. The most accurate algorithm for sequence alignments is Smith-Waterman (SW). However, due to its computational complexity and rapidly increasing database sizes, the process becomes more and more time consuming making cluster based systems more desirable. Therefore, scalable and highly parallel methods are necessary to make SW a viable solution for life science researchers. In this paper we evaluate how SW fits onto the target GPU architecture by exploring ways to map the program architecture on the processor architecture. We develop new techniques to reduce the memory footprint of the application while exploiting the memory hierarchy of the GPU. With this implementation, GSW, we overcome the on chip memory size constraint, achieving 23x speedup compared to a serial implementation. Results show that as the query length increases our speedup almost stays stable indicating the solid scalability of our approach. Additionally this is a first of a kind implementation which purely runs on the GPU instead of a CPU-GPU integrated environment, making our design suitable for porting onto a cluster of GPUs.", "paper_title": "Scalable and highly parallel implementation of Smith-Waterman on graphics processing unit using CUDA", "paper_id": "WOS:000270169400007"}