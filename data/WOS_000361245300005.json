{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high_utility"}, {"score": 0.012350088683525419, "phrase": "candidate_patterns"}, {"score": 0.004530552828603269, "phrase": "important_research_problem"}, {"score": 0.00443308765153716, "phrase": "relevant_algorithms"}, {"score": 0.004262881313926916, "phrase": "main_challenge"}, {"score": 0.004225950334493496, "phrase": "high_utility_sequential_pattern_mining"}, {"score": 0.004135010810625326, "phrase": "search_space"}, {"score": 0.0036288825833675127, "phrase": "sequential_pattern_mining_solution"}, {"score": 0.0035199624440843892, "phrase": "big_search_space"}, {"score": 0.003384695931421288, "phrase": "computational_complexity"}, {"score": 0.003170667618004276, "phrase": "efficient_data_structures"}, {"score": 0.003062091606343783, "phrase": "cumulated_rest"}, {"score": 0.002686935113435742, "phrase": "candidate_pattern_generation"}, {"score": 0.002629026692001082, "phrase": "existing_techniques"}, {"score": 0.0025279105573394727, "phrase": "efficient_algorithm"}, {"score": 0.0025059724686541263, "phrase": "high_utility_sequential_pattern_extraction"}, {"score": 0.0024842242921857705, "phrase": "huspext"}, {"score": 0.0023886641270884973, "phrase": "child_patterns"}, {"score": 0.0022967713922705, "phrase": "substantial_experiments"}, {"score": 0.0021987994275190314, "phrase": "proposed_solution"}, {"score": 0.0021702292394814144, "phrase": "high_utility_sequential_patterns"}, {"score": 0.002151388538895855, "phrase": "large_scale_datasets"}, {"score": 0.002132711053003407, "phrase": "different_data_characteristics"}, {"score": 0.0021049977753042253, "phrase": "low_utility_thresholds"}], "paper_keywords": ["High utility sequential pattern mining", " efficiency", " candidate pattern pruning", " sequential pattern mining"], "paper_abstract": "High utility sequential pattern mining has been considered as an important research problem and a number of relevant algorithms have been proposed for this topic. The main challenge of high utility sequential pattern mining is that, the search space is large and the efficiency of the solutions is directly affected by the degree at which they can eliminate the candidate patterns. Therefore, the efficiency of any high utility sequential pattern mining solution depends on its ability to reduce this big search space, and as a result, lower the computational complexity of calculating the utilities of the candidate patterns. In this paper, we propose efficient data structures and pruning technique which is based on Cumulated Rest of Match (CRoM) based upper bound. CRoM, by defining a tighter upper bound on the utility of the candidates, allows more conservative pruning before candidate pattern generation in comparison to the existing techniques. In addition, we have developed an efficient algorithm, High Utility Sequential Pattern Extraction (HuspExt), which calculates the utilities of the child patterns based on that of the parents'. Substantial experiments on both synthetic and real datasets from different domains show that, the proposed solution efficiently discovers high utility sequential patterns from large scale datasets with different data characteristics, under low utility thresholds.", "paper_title": "CRoM and HuspExt: Improving Efficiency of High Utility Sequential Pattern Extraction", "paper_id": "WOS:000361245300005"}