{"auto_keywords": [{"score": 0.04365548778490431, "phrase": "system_dependability"}, {"score": 0.013986395475240136, "phrase": "dependable_systems"}, {"score": 0.009923420409536046, "phrase": "regression_testing"}, {"score": 0.009636327430472946, "phrase": "software_architecture_level"}, {"score": 0.00481495049065317, "phrase": "software_architectures"}, {"score": 0.004655285779819366, "phrase": "quality_software_systems"}, {"score": 0.004577440795549049, "phrase": "first_concrete_model"}, {"score": 0.004519908617935935, "phrase": "software_system"}, {"score": 0.004351595642056769, "phrase": "software_systems"}, {"score": 0.003568932067237836, "phrase": "important_one"}, {"score": 0.0035240305920962766, "phrase": "fault_removal"}, {"score": 0.0033926758710459866, "phrase": "previous_work"}, {"score": 0.0033641551050434663, "phrase": "software_architecture-based_testing"}, {"score": 0.0032524418285459324, "phrase": "conformance_testing_techniques"}, {"score": 0.0031577303835881964, "phrase": "implemented_system_conformance"}, {"score": 0.0028293966058473476, "phrase": "modified_systems"}, {"score": 0.0027469703311742647, "phrase": "regression_testability"}, {"score": 0.0027123819773059127, "phrase": "evolved_system"}, {"score": 0.0026112013707473938, "phrase": "\"high-level\"_evolution"}, {"score": 0.0025458479274370832, "phrase": "slightly_modified_implementation"}, {"score": 0.002503187934017557, "phrase": "initial_architecture"}, {"score": 0.002389514188569084, "phrase": "evolved_architecture"}, {"score": 0.0023594160789762227, "phrase": "better_understanding"}, {"score": 0.0021773853011112882, "phrase": "higher_dependability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["software architecture", " dependable systems", " regression testing", " architecture-based analysis and testing"], "paper_abstract": "Software architectures are becoming centric to the development of quality software systems, being the first concrete model of the software system and the base to guide the implementation of software systems. When architecting dependable systems, in addition to improving system dependability by means of construction (fault-tolerant and redundant mechanisms, for instance), it is also important to evaluate, and thereby confirm, system dependability. There are many different approaches for evaluating system dependability, and testing has been always an important one, being fault removal one of the means to achieve dependable systems. Previous work on software architecture-based testing has shown it is possible to apply conformance testing techniques to yield some confidence on the implemented system conformance to expected, architecture-level, behaviors. This work explores how regression testing can be systematically applied at the software architecture level in order to reduce the cost of retesting modified systems, and also to assess the regression testability of the evolved system. We consider assessing both \"low-level\" and \"high-level\" evolution, i.e., whether a slightly modified implementation conforms to the initial architecture, and whether the implementation continues to conform to an evolved architecture. A better understanding on how regression testing can be applied at the software architecture level will help us to assess and identify architecture with higher dependability. (C) 2006 Published by Elsevier Inc.", "paper_title": "Software architecture-based regression testing", "paper_id": "WOS:000241173200004"}