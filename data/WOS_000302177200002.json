{"auto_keywords": [{"score": 0.036347999936078366, "phrase": "parameter_space"}, {"score": 0.00481495049065317, "phrase": "potentially_critical_paths"}, {"score": 0.004642292792558686, "phrase": "timing_analysis"}, {"score": 0.004179480763003705, "phrase": "reported_timing_problems"}, {"score": 0.003956558420993431, "phrase": "delay_distributions"}, {"score": 0.0038849148160362257, "phrase": "multiple_corners"}, {"score": 0.0037626342268042997, "phrase": "required_guidance"}, {"score": 0.0036441884295335502, "phrase": "efficient_block-based_parameterized_timing_analysis_technique"}, {"score": 0.00325069754015951, "phrase": "efficient_pruning_algorithm"}, {"score": 0.0029666322924554274, "phrase": "local_robustness"}, {"score": 0.0029128614098881253, "phrase": "different_regions"}, {"score": 0.0028082176224611542, "phrase": "differential_sensitivity"}, {"score": 0.0025162511343171, "phrase": "nearby_points"}, {"score": 0.00243694486220507, "phrase": "formal_definition"}, {"score": 0.0021735249249471614, "phrase": "theoretical_computational_complexity"}], "paper_keywords": ["Hyperplane", " parameterized timing analysis", " piece-wise planar (PWP)", " PVT variations", " required arrival times"], "paper_abstract": "In order for the results of timing analysis to be useful, they must provide insight and guidance on how the circuit may be improved so as to fix any reported timing problems. A limitation of many recent variability-aware timing analysis techniques is that, while they report delay distributions, or verify multiple corners, they do not provide the required guidance for re-design. We propose an efficient block-based parameterized timing analysis technique that can accurately capture circuit delay at every point in the parameter space, by reporting all paths that can become critical. Using an efficient pruning algorithm, only those potentially critical paths are carried forward, while all other paths are discarded during propagation. This allows one to examine local robustness to parameters in different regions of the parameter space, not by considering differential sensitivity at a point ( that would be useless in this context) but by knowledge of the paths that can become critical at nearby points in parameter space. We give a formal definition of this problem and propose a technique for solving it, which improves on the state of the art, both in terms of theoretical computational complexity and in terms of runtime on various test circuits.", "paper_title": "Efficient Block-Based Parameterized Timing Analysis Covering All Potentially Critical Paths", "paper_id": "WOS:000302177200002"}