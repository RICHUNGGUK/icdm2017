{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "p_systems"}, {"score": 0.004476399615305783, "phrase": "essential_part"}, {"score": 0.00436890075128947, "phrase": "software_development"}, {"score": 0.0041112665381266315, "phrase": "p_system_testing"}, {"score": 0.003822003373331997, "phrase": "mutation_testing"}, {"score": 0.0035100601949451028, "phrase": "structural_software_testing_method"}, {"score": 0.003223494720348768, "phrase": "small_ways"}, {"score": 0.0028890603352364273, "phrase": "formal_way"}, {"score": 0.0026209522797963447, "phrase": "context-free_grammars"}, {"score": 0.002348883765159185, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "p_system_specification"}], "paper_keywords": ["mutation testing", " P systems", " Kripke structures", " context-free grammars"], "paper_abstract": "Although testing is an essential part of software development, until recently, P system testing has been completely neglected. Mutation testing (mutation analysis) is a structural software testing method which involves modifying the program in small ways. In this paper, we provide a formal way of generating mutants for systems specified by context-free grammars. Furthermore, the paper shows how the proposed method can be used to construct mutants for a P system specification.", "paper_title": "Mutation Based Testing of P Systems", "paper_id": "WOS:000267551700007"}