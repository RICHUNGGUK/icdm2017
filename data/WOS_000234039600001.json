{"auto_keywords": [{"score": 0.031087063050235456, "phrase": "primitive_roots"}, {"score": 0.00481495049065317, "phrase": "polynomial_time"}, {"score": 0.004505638402009237, "phrase": "e._bach"}, {"score": 0.004310501708408856, "phrase": "t._itoh"}, {"score": 0.004063348730077936, "phrase": "small_set"}, {"score": 0.003916098498242888, "phrase": "prime_p"}, {"score": 0.0032319109979344184, "phrase": "slight_variant"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["computational complexity", " cryptography", " randomized algorithms"], "paper_abstract": "E. Bach, following an idea of T. Itoh, has shown how to build a small set of numbers modulo a prime p such that at least one element of this set is a generator of Z/pZ. E. Bach Suggests also that at least half of his set should be generators. We show here that a slight variant of this set can indeed be made to contain a ratio of primitive roots as close to I as necessary. In particular we present an asymptotically O-similar to(root 1/epsilon log(p) + log(2)(p)) algorithm providing primitive roots of p with probability of correctness greater than I - epsilon and several 0(log(alpha)(p)), alpha <= 5.23, algorithms computing \"Industrial-strength\" primitive roots. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Efficient polynomial time algorithms computing industrial-strength primitive roots", "paper_id": "WOS:000234039600001"}