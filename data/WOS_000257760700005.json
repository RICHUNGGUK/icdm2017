{"auto_keywords": [{"score": 0.04277899474453449, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "continuous_k-means"}, {"score": 0.0045084510240032535, "phrase": "query_returns"}, {"score": 0.004489952932659799, "phrase": "k_points"}, {"score": 0.0034083145672246067, "phrase": "object_update"}, {"score": 0.0033664873319204027, "phrase": "heavy_burden"}, {"score": 0.0031132086055691214, "phrase": "location_updates"}, {"score": 0.002999955539996569, "phrase": "novel_approach"}, {"score": 0.002938821840519756, "phrase": "computation_and_communication_costs"}, {"score": 0.002762774046280398, "phrase": "reevaluation_approach"}, {"score": 0.0026953359825383624, "phrase": "user-defined_tolerance"}, {"score": 0.0026622351303038885, "phrase": "proposed_method"}, {"score": 0.002471973283582411, "phrase": "location_update"}, {"score": 0.0024116163689723354, "phrase": "range_boundary"}, {"score": 0.0023430556582539805, "phrase": "efficient_technique"}, {"score": 0.0022484715639779153, "phrase": "mathematical_formulas"}, {"score": 0.002193559776999383, "phrase": "individual_thresholds"}, {"score": 0.0021049977753042253, "phrase": "extensive_experiments"}], "paper_keywords": ["k-Means", " continuous monitoring", " query processing"], "paper_abstract": "Given a data set P, a k-means query returns k points in space (called centers), such that the average squared distance between each point in P and its nearest center is minimized. Since this problem is NP-hard, several approximate algorithms have been proposed and used in practice. In this paper, we study continuous k-means computation at a server that monitors a set of moving objects. Reevaluating k-means every time there is an object update imposes a heavy burden on the server (for computing the centers from scratch) and the clients (for continuously sending location updates). We overcome these problems with a novel approach that significantly reduces the computation and communication costs, while guaranteeing that the quality of the solution, with respect to the reevaluation approach, is bounded by a user-defined tolerance. The proposed method assigns each moving object a threshold (i.e., range) such that the object sends a location update only when it crosses the range boundary. First, we develop an efficient technique for maintaining the k-means. Then, we present mathematical formulas and algorithms for deriving the individual thresholds. Finally, we justify our performance claims with extensive experiments.", "paper_title": "Continuous k-means monitoring over moving objects", "paper_id": "WOS:000257760700005"}