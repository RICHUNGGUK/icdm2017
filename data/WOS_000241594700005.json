{"auto_keywords": [{"score": 0.045032319739093496, "phrase": "minimum_approximate_lambda-cover_problem"}, {"score": 0.00481495049065317, "phrase": "minimum_approximate_lambda-cover"}, {"score": 0.003952513974962462, "phrase": "string_x"}, {"score": 0.0036703791815812328, "phrase": "integer_lambda"}, {"score": 0.003244050414264445, "phrase": "lambda_substrings"}, {"score": 0.0031649018957020337, "phrase": "equal_length"}, {"score": 0.002938821840519756, "phrase": "minimum_error"}, {"score": 0.002728847267539957, "phrase": "distance_models"}, {"score": 0.002629539710839523, "phrase": "hamming_distance"}, {"score": 0.0025338369486914364, "phrase": "edit_distance"}, {"score": 0.0024416087858984644, "phrase": "weighted_edit_distance"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time"}], "paper_keywords": [""], "paper_abstract": "This paper studies the minimum approximate lambda-cover problem of a string. Given a string x of length n and an integer lambda, the minimum approximate lambda-cover problem is to find a set of lambda substrings of equal length that covers x with the minimum error, under a variety of distance models including the Hamming distance, the edit distance and the weighted edit distance. We present an algorithm that can solve this problem in polynomial time.", "paper_title": "Computing the minimum approximate lambda-cover of a string", "paper_id": "WOS:000241594700005"}