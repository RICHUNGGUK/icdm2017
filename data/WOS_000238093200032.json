{"auto_keywords": [{"score": 0.04452857699254111, "phrase": "xpath"}, {"score": 0.00481495049065317, "phrase": "xpath_fragment_containment"}, {"score": 0.004659951478263083, "phrase": "query_language"}, {"score": 0.004546970518808189, "phrase": "xml_trees"}, {"score": 0.004329124434198367, "phrase": "element_nodes"}, {"score": 0.004121672175779706, "phrase": "xml_applications"}, {"score": 0.003988901168289797, "phrase": "xpath_queries"}, {"score": 0.0036453427552753533, "phrase": "frequently_used_fragment"}, {"score": 0.00347054319869429, "phrase": "node_tests"}, {"score": 0.003386301445203068, "phrase": "child_axis"}, {"score": 0.003223883109446599, "phrase": "descendant_axis"}, {"score": 0.0027817658627604653, "phrase": "special_classes"}, {"score": 0.0027365364488693656, "phrase": "pattern_trees"}, {"score": 0.0026700637696697414, "phrase": "homomorphism_algorithm"}, {"score": 0.002626645763725465, "phrase": "false_negatives"}, {"score": 0.0022849068677290836, "phrase": "conditioned_homomorphism"}, {"score": 0.0022111720236287547, "phrase": "present_sound_algorithms"}, {"score": 0.0021049977753042253, "phrase": "analytical_result"}], "paper_keywords": [""], "paper_abstract": "As a query language for navigating XML trees and selecting a set of element nodes, XPath is ubiquitous in XML applications. One important issue of XPath queries is checking containment. In particular, we investigate a frequently used fragment of XPath that consists of node tests, the child axis (/), the descendant axis (//), branches ([]) and label wildcards (*). For special classes of pattern trees, the homomorphism algorithm returns false negatives. In order to address this problem, we propose two containment techniques, conditioned homomorphism and hidden conditioned homomorphism, and then present sound algorithms to check containment. The analytical result is given with an experiment.", "paper_title": "Hidden conditioned homomorphism for XPath fragment containment", "paper_id": "WOS:000238093200032"}