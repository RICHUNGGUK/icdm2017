{"auto_keywords": [{"score": 0.03961779893438285, "phrase": "graph_transformation_rules"}, {"score": 0.038906160240873254, "phrase": "graph_transformation_system"}, {"score": 0.008656707982822634, "phrase": "graph_transformation_systems"}, {"score": 0.00481495049065317, "phrase": "graph_transformation_systems_for_modeling_three_dimensional_finite_element_method"}, {"score": 0.00422177384286051, "phrase": "finite_elements"}, {"score": 0.0040916230716372265, "phrase": "computational_mesh"}, {"score": 0.003965468669507077, "phrase": "composite_graph"}, {"score": 0.0036097844103129043, "phrase": "different_kind"}, {"score": 0.0032449610741097992, "phrase": "initial_mesh"}, {"score": 0.0031845067058084583, "phrase": "element_matrices"}, {"score": 0.0031448288291084, "phrase": "elimination_trees"}, {"score": 0.003066945490483524, "phrase": "direct_solver_algorithm"}, {"score": 0.002688532127821979, "phrase": "mesh_refinements"}, {"score": 0.0025569530630374995, "phrase": "graph_transformation_tool"}, {"score": 0.002509284173541882, "phrase": "gragra"}, {"score": 0.00241658945942583, "phrase": "graphical_environment"}, {"score": 0.0021450029487459403, "phrase": "exemplary_derivation"}], "paper_keywords": ["Graph transformation system", " Automatic h adaptivity", " Finite Element Method"], "paper_abstract": "In this paper we present several graph transformation systems modeling three dimensional h-adaptive Finite Element Method (3D h-FEM) algorithms with tetrahedral finite elements. In our approach a computational mesh is represented by a composite graph and mesh operations are expressed by the graph transformation rules. Each graph transformation system is responsible for different kind of operations. In particular, there is a graph transformation system expressing generation of an initial mesh, generating element matrices and elimination trees for interfacing with direct solver algorithm, a graph transformation system deciding which elements have to be further refined, as well as a graph transformation system responsible for execution of mesh refinements. These graph transformation systems are tested using a graph transformation tool (called GRAGRA), which provides a graphical environment for defining graphs, graph transformation rules and graph transformation systems. In this paper we illustrate the concepts by using an exemplary derivation for a three dimensional projection problem, based on a set of graph transformation rules.", "paper_title": "Graph Transformation Systems for Modeling Three Dimensional Finite Element Method. Part I", "paper_id": "WOS:000360932400002"}