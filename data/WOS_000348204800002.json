{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minimum_load"}, {"score": 0.031409938068082406, "phrase": "expected_values"}, {"score": 0.03049899545078747, "phrase": "multiplicative_factor"}, {"score": 0.004766683200410046, "phrase": "random_processing_times"}, {"score": 0.004555371402128666, "phrase": "stochastic_variant"}, {"score": 0.0044870272550540415, "phrase": "so-called_santa_claus_problem"}, {"score": 0.004419703921314433, "phrase": "santa_claus"}, {"score": 0.004160319763461951, "phrase": "n_jobs"}, {"score": 0.0038379074449947067, "phrase": "identical_machine_version"}, {"score": 0.003780286517897356, "phrase": "scheduling_problem"}, {"score": 0.0037235274565193665, "phrase": "additional_restriction"}, {"score": 0.003576286811853861, "phrase": "processing_times"}, {"score": 0.003469676666252421, "phrase": "processing_time"}, {"score": 0.003366233863411861, "phrase": "random_variable"}, {"score": 0.002709589081384597, "phrase": "greedy_algorithm"}, {"score": 0.0026688629249775925, "phrase": "expected_competitive_ratio"}, {"score": 0.002388283252319309, "phrase": "actual_values"}, {"score": 0.0021049977753042253, "phrase": "expected_performance"}], "paper_keywords": ["Scheduling", " expected competitive ratio", " average-case analysis"], "paper_abstract": "In this article, we consider a stochastic variant of the so-called Santa Claus problem. The Santa Claus problem is equivalent to the problem of scheduling a set of n jobs on m parallel machines without preemption, so as to maximize the minimum load. We consider the identical machine version of this scheduling problem with the additional restriction that the scheduler has only a guess of the processing times; that is, the processing time of a job is a random variable. We show that there is a critical value rho(n, m) such that if the duration of the jobs is exponentially distributed and the expected values deviate by less than a multiplicative factor of rho(n, m) from each other, then a greedy algorithm has an expected competitive ratio arbitrarily close to one; that is, it performs in expectation almost as good as an algorithm that knows the actual values in advance. On the other hand, if the expected values deviate by more than a multiplicative factor of rho(n, m), then the expected performance is arbitrarily bad for all algorithms.", "paper_title": "Maximizing the Minimum Load for Random Processing Times", "paper_id": "WOS:000348204800002"}