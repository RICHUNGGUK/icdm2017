{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computer_science"}, {"score": 0.013074105996129032, "phrase": "mental_processes"}, {"score": 0.008090948194796109, "phrase": "engineering_discipline"}, {"score": 0.007429127282467477, "phrase": "mathematical_objects"}, {"score": 0.0073468620354570306, "phrase": "mere_data"}, {"score": 0.005028864982067103, "phrase": "scientific_paradigm"}, {"score": 0.004726184966910756, "phrase": "philosophical_disputes"}, {"score": 0.004691136491297242, "phrase": "computer_scientists"}, {"score": 0.004403480614319231, "phrase": "natural_science"}, {"score": 0.004179824713643488, "phrase": "computer_programs"}, {"score": 0.003923398381490749, "phrase": "distinct_positions"}, {"score": 0.0037940502405699765, "phrase": "distinct_sets"}, {"score": 0.0037658881407605445, "phrase": "received_beliefs"}, {"score": 0.003601235776892337, "phrase": "theoretical_computer_scientists"}, {"score": 0.0032444113660668743, "phrase": "deductive_reasoning"}, {"score": 0.003220315882881027, "phrase": "-_the_technocratic_paradigm"}, {"score": 0.003160854709666311, "phrase": "software_engineers"}, {"score": 0.002815864555488112, "phrase": "testing_suites"}, {"score": 0.0027026971435126553, "phrase": "artificial_intelligence"}, {"score": 0.0024620842899061614, "phrase": "posteriori_knowledge"}, {"score": 0.00241658945942583, "phrase": "formal_deduction"}, {"score": 0.002398627220761343, "phrase": "scientific_experimentation"}, {"score": 0.0021049977753042253, "phrase": "technocratic_paradigm"}], "paper_keywords": ["philosophy of computer science", " ontology and epistemology of computer programs", " scientific paradigms"], "paper_abstract": "We examine the philosophical disputes among computer scientists concerning methodological, ontological, and epistemological questions: Is computer science a branch of mathematics, an engineering discipline, or a natural science? Should knowledge about the behaviour of programs proceed deductively or empirically? Are computer programs on a par with mathematical objects, with mere data, or with mental processes? We conclude that distinct positions taken in regard to these questions emanate from distinct sets of received beliefs or paradigms within the discipline: - The rationalist paradigm, which was common among theoretical computer scientists, defines computer science as a branch of mathematics, treats programs on a par with mathematical objects, and seeks certain, a priori knowledge about their 'correctness' by means of deductive reasoning. - The technocratic paradigm, promulgated mainly by software engineers and has come to dominate much of the discipline, defines computer science as an engineering discipline, treats programs as mere data, and seeks probable, a posteriori knowledge about their reliability empirically using testing suites. - The scientific paradigm, prevalent in the branches of artificial intelligence, defines computer science as a natural (empirical) science, takes programs to be entities on a par with mental processes, and seeks a priori and a posteriori knowledge about them by combining formal deduction and scientific experimentation. We demonstrate evidence corroborating the tenets of the scientific paradigm, in particular the claim that program-processes are on a par with mental processes. We conclude with a discussion in the influence that the technocratic paradigm has been having over computer science.", "paper_title": "Three paradigms of computer science", "paper_id": "WOS:000249150000002"}