{"auto_keywords": [{"score": 0.004587835274176236, "phrase": "polygonal_trees"}, {"score": 0.004478308876320956, "phrase": "continuous_motions"}, {"score": 0.004413846562278824, "phrase": "rigid_edges"}, {"score": 0.004329331617724, "phrase": "vertex_joints"}, {"score": 0.004267004541988167, "phrase": "edge_crossings"}, {"score": 0.00393032656248792, "phrase": "common_straight_line"}, {"score": 0.0037267132967205136, "phrase": "designated_leaf_node"}, {"score": 0.0034826993555190765, "phrase": "convex_polygon"}, {"score": 0.003131023880006021, "phrase": "square_or_cubic_lattice"}, {"score": 0.0027341763737751467, "phrase": "tree_edges"}, {"score": 0.0023417010799384524, "phrase": "simple_shadow"}], "paper_keywords": ["comput. geom.", " unfolding", " straightening", " convexifying"], "paper_abstract": "We consider the problems of straightening polygonal trees and convexifying polygons by continuous motions such that rigid edges can rotate around vertex joints and no edge crossings are allowed. A tree can be straightened if all its edges can be aligned along a common straight line such that each edge points \"away\" from a designated leaf node. A polygon can be convexified if it can be reconfigured to a convex polygon. A lattice tree (resp. polygon) is a tree (resp. polygon) containing only edges from a square or cubic lattice. We first show that a 2D lattice chain or a 3D lattice tree can be straightened efficiently in O(n) moves and time, where n is the number of tree edges. We then show that a 2D lattice tree can be straightened efficiently in, O(n(2)) moves and time. Furthermore, we prove that a 2D lattice polygon or a 3D lattice polygon with simple shadow can be convexified efficiently in O(n(2)) moves and time. Finally, we show that two special classes of diameter-4 trees in two dimensions can always be straightened.", "paper_title": "On unfolding lattice polygons/trees and diameter-4 trees", "paper_id": "WOS:000240077300021"}