{"auto_keywords": [{"score": 0.03131725108108424, "phrase": "uml"}, {"score": 0.005102817053411905, "phrase": "nfp"}, {"score": 0.00481495049065317, "phrase": "marte."}, {"score": 0.004680624753255133, "phrase": "software_non-functional_properties"}, {"score": 0.004524348699657099, "phrase": "functional_ones"}, {"score": 0.004373267443572639, "phrase": "software_engineering_community"}, {"score": 0.00399449659126893, "phrase": "software_life-cycle"}, {"score": 0.0038392331564122387, "phrase": "different_fault_assumptions"}, {"score": 0.0037959868107895053, "phrase": "dependability-specific_modeling"}, {"score": 0.0035869274480340727, "phrase": "qualitative_evaluation"}, {"score": 0.003447451122274614, "phrase": "fault_trees"}, {"score": 0.003313380246267812, "phrase": "unified_modeling_language"}, {"score": 0.0031665087019813244, "phrase": "different_domains"}, {"score": 0.0030955250132409964, "phrase": "profile_mechanism"}, {"score": 0.0029920129598858545, "phrase": "marte_profile"}, {"score": 0.002988155382443752, "phrase": "marte"}, {"score": 0.002859345731792013, "phrase": "quantitative_analysis"}, {"score": 0.002795228413298423, "phrase": "embedded_systems"}, {"score": 0.002671263324230699, "phrase": "performance_analysis"}, {"score": 0.0024814079299143536, "phrase": "dependability_analysis"}, {"score": 0.0023713273141757326, "phrase": "case_study"}, {"score": 0.0023313149689465386, "phrase": "intrusion-tolerant_message_service"}, {"score": 0.0022405528759521856, "phrase": "marte-dam_profile"}, {"score": 0.002153316680437517, "phrase": "stochastic_petri_net_model"}, {"score": 0.0021049977753042253, "phrase": "dependability_assessment"}], "paper_keywords": [""], "paper_abstract": "The importance of assessing software non-functional properties (NFP) beside the functional ones is well accepted in the software engineering community. In particular, dependability is a NFP that should be assessed early in the software life-cycle by evaluating the system behaviour under different fault assumptions. Dependability-specific modeling and analysis techniques include for example Failure Mode and Effect Analysis for qualitative evaluation, stochastic Petri nets for quantitative evaluation, and fault trees for both forms of evaluation. Unified Modeling Language (UML) may be specialized for different domains by using the profile mechanism. For example, the MARTE profile extends UML with concepts for modeling and quantitative analysis of real-time and embedded systems (more specifically, for schedulability and performance analysis). This paper proposes to add to MARTE a profile for dependability analysis and modeling (DAM). A case study of an intrusion-tolerant message service will offer insight on how the MARTE-DAM profile can be used to derive a stochastic Petri net model for performance and dependability assessment.", "paper_title": "A dependability profile within MARTE", "paper_id": "WOS:000292268800004"}