{"auto_keywords": [{"score": 0.042112809942215015, "phrase": "indirect_addressing"}, {"score": 0.00481495049065317, "phrase": "random_access_machines"}, {"score": 0.003816197777388722, "phrase": "analysis_obstacle"}, {"score": 0.003353521531649663, "phrase": "sufficiently_rich_set"}, {"score": 0.003267925215811654, "phrase": "basic_operations"}, {"score": 0.0030239842475439814, "phrase": "computational_power"}, {"score": 0.002726740692380339, "phrase": "linear_time"}, {"score": 0.0025230952890994236, "phrase": "real_time"}, {"score": 0.002304606411453748, "phrase": "uniform_cost_model"}, {"score": 0.0021049977753042253, "phrase": "unit_cost_variable_shift"}], "paper_keywords": [""], "paper_abstract": "In the study of random access machines (RAMs) and the complexities associated with their algorithms, the availability of indirect addressing often creates an analysis obstacle. We show that for RAMs equipped with a sufficiently rich set of basic operations, indirect addressing does not increase computational power, and can be simulated either in linear time or on-line in real time. These results pertain to the uniform cost model and, particularly, assume a unit cost variable shift.", "paper_title": "Does indirect addressing matter? A note", "paper_id": "WOS:000310950300003"}