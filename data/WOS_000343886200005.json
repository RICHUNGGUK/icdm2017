{"auto_keywords": [{"score": 0.043774480113862035, "phrase": "adaptive_guardbanding_technique"}, {"score": 0.010770321473622736, "phrase": "error-intolerant_applications"}, {"score": 0.008588801233516486, "phrase": "probabilistic_applications"}, {"score": 0.00481495049065317, "phrase": "mitigate_static"}, {"score": 0.004782848614014638, "phrase": "dynamic_variability"}, {"score": 0.004750959742844963, "phrase": "traditional_application_execution"}, {"score": 0.0047035227618053965, "phrase": "error-free_execution_hardware"}, {"score": 0.004458375125223899, "phrase": "microelectronic_processors"}, {"score": 0.004355163162038354, "phrase": "varying_degrees"}, {"score": 0.004141936429360251, "phrase": "cmos_variability"}, {"score": 0.004059585951426263, "phrase": "traditional_error-intolerant_applications"}, {"score": 0.003939107874750185, "phrase": "accurate_design_time_analysis"}, {"score": 0.003899745240916238, "phrase": "minimally_intrusive_runtime_technique"}, {"score": 0.003647156095687574, "phrase": "order_risc_processor"}, {"score": 0.003622811707147052, "phrase": "full_post_placement"}, {"score": 0.0035507457285983268, "phrase": "layout_results"}, {"score": 0.003445316481824611, "phrase": "traditional_guardbands"}, {"score": 0.0034223147241452547, "phrase": "operating_frequency"}, {"score": 0.003376769321692139, "phrase": "pvt_variations"}, {"score": 0.003354223660940168, "phrase": "application-specific_requirements"}, {"score": 0.0032112897905024976, "phrase": "sequence-level_vulnerability"}, {"score": 0.0031473840619203825, "phrase": "circuit-level_vulnerability"}, {"score": 0.0031159081999910694, "phrase": "high-level_software_knowledge"}, {"score": 0.0030334982939315, "phrase": "slv_metadata_partitions_sequences"}, {"score": 0.003013237619840709, "phrase": "integer_sparc_instructions"}, {"score": 0.002884792163423083, "phrase": "dynamic_voltage_and_temperature_variations"}, {"score": 0.002808477620731167, "phrase": "different_classes"}, {"score": 0.002780381587615479, "phrase": "instruction_sequences"}, {"score": 0.0027525658515943985, "phrase": "proposed_technique"}, {"score": 0.0026707727531746425, "phrase": "recent_work"}, {"score": 0.002591403838835242, "phrase": "adaptive_technique"}, {"score": 0.0025654738267173274, "phrase": "error-free_operation"}, {"score": 0.0024643161985886085, "phrase": "correct_timing"}, {"score": 0.002213596068643924, "phrase": "traditional_worst-case_design"}, {"score": 0.0021049977753042253, "phrase": "intolerant_and_probabilistic_applications"}], "paper_keywords": ["Process", " voltage", " temperature (PVT) variations", " timing error", " variation-tolerant processor", " adaptive guardbanding", " resilient design", " computation accuracy"], "paper_abstract": "Traditional application execution assumes an error-free execution hardware and environment. Such guarantees in execution are achieved by providing guardbands in the design of microelectronic processors. In reality, applications exhibit varying degrees of tolerance to error in computations. This paper proposes an adaptive guardbanding technique to combat CMOS variability for error-tolerant (probabilistic) applications as well as traditional error-intolerant applications. The proposed technique leverages a combination of accurate design time analysis and a minimally intrusive runtime technique to mitigate Process, Voltage, and Temperature (PVT) variations for a near-zero area overhead. We demonstrate our approach on a 32-bit in-order RISC processor with full post Placement and Routing (P&R) layout results in TSMC 45 nm technology. The adaptive guardbanding technique eliminates traditional guardbands on operating frequency using information from PVT variations and application-specific requirements on computational accuracy. For error-intolerant applications, we introduce the notion of Sequence-Level Vulnerability (SLV) that utilizes circuit-level vulnerability for constructing high-level software knowledge as metadata. In effect, the SLV metadata partitions sequences of integer SPARC instructions into two equivalence classes to enable the adaptive guardbanding technique to adapt the frequency simultaneously for dynamic voltage and temperature variations, as well as adapt to the different classes of the instruction sequences. The proposed technique achieves on an average 1.6x speedup for error-intolerant applications compared to recent work [33]. For probabilistic applications, the adaptive technique guarantees the error-free operation of a set of paths of the processor that always require correct timing (Vulnerable Paths) while reducing the cost of guardbanding for the rest of the paths (Invulnerable Paths). This increases the throughput of probabilistic applications upto 1.9x over the traditional worst-case design. The proposed technique has 0.022% area overhead, and imposes only 0.034% and 0.031% total power overhead for intolerant and probabilistic applications respectively.", "paper_title": "Application-Adaptive Guardbanding to Mitigate Static and Dynamic Variability", "paper_id": "WOS:000343886200005"}