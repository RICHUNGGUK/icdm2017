{"auto_keywords": [{"score": 0.032148448493708424, "phrase": "onemax_test_function"}, {"score": 0.00481495049065317, "phrase": "linear_functions"}, {"score": 0.004595627896136097, "phrase": "ea"}, {"score": 0.004549821572786755, "phrase": "linear_pseudo-boolean_functions"}, {"score": 0.004386063799793622, "phrase": "linear_function"}, {"score": 0.004342430078306461, "phrase": "expected_number"}, {"score": 0.004299228562179176, "phrase": "n_logn"}, {"score": 0.003942299471749811, "phrase": "special_case"}, {"score": 0.003916106648470919, "phrase": "onemax"}, {"score": 0.003800324235902955, "phrase": "ea_different_linear_functions"}, {"score": 0.003712640297460159, "phrase": "different_asymptotic_order"}, {"score": 0.003543273649210823, "phrase": "classic_and_recent_drift_analysis_methods"}, {"score": 0.003392906853983723, "phrase": "different_types"}, {"score": 0.0033479323773364716, "phrase": "different_phases"}, {"score": 0.0032925489316383955, "phrase": "wrongfully_claimed_better_asymptotic_runtime"}, {"score": 0.0029988599391845517, "phrase": "new_upper_bound"}, {"score": 0.0027680095380207756, "phrase": "cut-off_point"}, {"score": 0.0026240423738883704, "phrase": "theory-driven_interest"}, {"score": 0.00255488432062653, "phrase": "right_size"}, {"score": 0.002529421374791293, "phrase": "offspring_population"}, {"score": 0.002295964130868963, "phrase": "larger_lambda"}, {"score": 0.002198412942421744, "phrase": "linear_increase"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Population-based EA", " Runtime analysis"], "paper_abstract": "We analyze how the (1 + lambda) evolutionary algorithm (EA) optimizes linear pseudo-Boolean functions. We prove that it finds the optimum of any linear function within an expected number of O(1/lambda n logn + n) iterations. We also show that this bound is sharp for some linear functions, e.g., the binary value function. Since previous works shows an asymptotically smaller runtime for the special case of ONEMAX, it follows that for the (1 + lambda) EA different linear functions may have run-times of different asymptotic order. The proof of our upper bound heavily relies on a number of classic and recent drift analysis methods. In particular, we show how to analyze a process displaying different types of drifts in different phases. Our work corrects a wrongfully claimed better asymptotic runtime in an earlier work [13]. We also use our methods to analyze the runtime of the (1 + lambda) EA on the ONEMAX test function and obtain a new upper bound of O(n log log lambda/log lambda) for the case that lambda is larger than O(log n log log n/log log log n); this is the cut-off point where a linear speed-up ceases to exist. While our results are mostly spurred from a theory-driven interest, they also show that choosing the right size of the offspring population can be crucial. For both the binary value and the ONEMAX test function we observe that once a linear speed-up ceases to exist, in fact, the speed-up from a larger lambda reduces to sub-logarithmic (still at the price of a linear increase of the cost of each generation). (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Optimizing linear functions with the (1+lambda) evolutionary algorithm-Different asymptotic runtimes for different instances", "paper_id": "WOS:000347663000002"}