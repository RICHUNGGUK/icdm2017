{"auto_keywords": [{"score": 0.028774305860308092, "phrase": "data_access_components"}, {"score": 0.004717325943509345, "phrase": "soa_solution"}, {"score": 0.004436116555817464, "phrase": "different_roles"}, {"score": 0.004375928080972614, "phrase": "different_tools"}, {"score": 0.004143196873246147, "phrase": "implementation_phase"}, {"score": 0.004031495920060339, "phrase": "runnable_solution"}, {"score": 0.0037395458116642306, "phrase": "development_complexity"}, {"score": 0.0035648266669315943, "phrase": "integration_gap"}, {"score": 0.003516417950483685, "phrase": "data_access"}, {"score": 0.003375087185182269, "phrase": "functional_and_non-functional_aspects"}, {"score": 0.0031091858573262265, "phrase": "development_quality"}, {"score": 0.002984173420996039, "phrase": "developers'_capability"}, {"score": 0.0028641729745364952, "phrase": "novel_approach"}, {"score": 0.002549672862868133, "phrase": "process_models"}, {"score": 0.002447101794397243, "phrase": "platform_independent_process_data_relationship_model"}, {"score": 0.0023167153974120083, "phrase": "data_models"}, {"score": 0.0022083264126633085, "phrase": "proper_granularity"}, {"score": 0.0021049977753042253, "phrase": "indexing_technology"}], "paper_keywords": ["process", " data access component", " granularity", " index", " SOA"], "paper_abstract": "Process and data are two key perspectives of an SOA solution. They are usually designed relatively independently by different roles with different tools, and then linked together during the implementation phase to produce a runnable solution. It follows the separation of concerns principle to reduce development complexity, but it results in an integration gap for data access in processes, including both functional and non-functional aspects. Currently the gap is manually bridged, so that the development quality and efficiency highly depend on developers' capability. This paper proposes a novel approach to automatically bridge the gap by generating data access components whose granularity and performance are optimized according to process models. Firstly we build a platform independent process data relationship model (PDRM) based on process and data models, and then generate data access components with proper granularity by analyzing the PDRM. Furthermore, indexing technology is applied to optimize performance of data access components.", "paper_title": "Process driven data access component generation", "paper_id": "WOS:000239482400007"}