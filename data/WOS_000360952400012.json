{"auto_keywords": [{"score": 0.036586978181361515, "phrase": "block_matrix_operations"}, {"score": 0.02780747220505483, "phrase": "fgbilu"}, {"score": 0.00481495049065317, "phrase": "regular_structures"}, {"score": 0.004424160689087029, "phrase": "large-scale_block-sparse_linear_systems"}, {"score": 0.004164516065972361, "phrase": "implicit_pde_solvers"}, {"score": 0.0039677715255034595, "phrase": "general-purpose_graphics_processing_units"}, {"score": 0.0038417923665459578, "phrase": "bilu"}, {"score": 0.003675023529026644, "phrase": "implicit_schemes"}, {"score": 0.0035439655241057207, "phrase": "strong_inherent_data_dependency"}, {"score": 0.003515479934694842, "phrase": "high_memory_bandwidth"}, {"score": 0.0034452601929727752, "phrase": "naive_adoptions"}, {"score": 0.003417565253539315, "phrase": "existing_sequential_bilu_algorithms"}, {"score": 0.0031271827534050493, "phrase": "straightforward_one-sweep_wavefront"}, {"score": 0.0030523478413779686, "phrase": "data_dependency"}, {"score": 0.002896274285996145, "phrase": "true_element-wise_approach"}, {"score": 0.00281555726127, "phrase": "diagonal_blocks"}, {"score": 0.002682370021834353, "phrase": "parallel_in-place_gauss_jordan_elimination"}, {"score": 0.0025658094607383646, "phrase": "low-overhead_concurrent_computation"}, {"score": 0.0024543014947630876, "phrase": "linear_scale"}, {"score": 0.0024345529783611703, "phrase": "n._fgbilu"}, {"score": 0.0023571757341293285, "phrase": "cuda"}, {"score": 0.0023099954987126, "phrase": "block-sparse_linear_solver"}, {"score": 0.0022095803687183107, "phrase": "sequential_global_bilu"}, {"score": 0.0021917966722180132, "phrase": "numerical_experiments"}, {"score": 0.0021479597698614373, "phrase": "nvidia_gpgpu."}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Block ILU", " Block-sparse linear systems", " Wavefront scheme", " GPGPU", " OpenACC", " CUDA"], "paper_abstract": "Iterative methods based on block incomplete LU (BILU) factorization are considered highly effective for solving large-scale block-sparse linear systems resulting from coupled PDE systems with n equations. However, efforts on porting implicit PDE solvers to massively parallel shared-memory heterogeneous architectures, such as general-purpose graphics processing units (GPGPUs), have largely avoided BILU, leaving their enormous performance potential unfulfilled in many applications where the use of implicit schemes and BILU-type preconditioners/solvers is highly preferred. Indeed, strong inherent data dependency and high memory bandwidth demanded by block matrix operations render naive adoptions of existing sequential BILU algorithms extremely inefficient on GPGPUs. In this study, we present a fine-grained BILU (FGBILU) scheme which is particularly effective on GPGPUs. A straightforward one-sweep wavefront ordering is employed to resolve data dependency. Granularity is substantially refined as block matrix operations are carried out in a true element-wise approach. Particularly, the inversion of diagonal blocks, a well-known bottleneck, is accomplished by a parallel in-place Gauss Jordan elimination. As a result, FGBILU is able to offer low-overhead concurrent computation at 0(n(2)N(2)) scale on a 3D PDE domain with a linear scale of N. FGBILU has been implemented with both OpenACC and CUDA and tested as a block-sparse linear solver on a structured 3D grid. While FGBILU remains mathematically identical to sequential global BILU, numerical experiments confirm its exceptional performance on an Nvidia GPGPU. (c) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A fine-grained block ILU scheme on regular structures for GPGPUs", "paper_id": "WOS:000360952400012"}