{"auto_keywords": [{"score": 0.03647473080095426, "phrase": "adsm"}, {"score": 0.02303293023404506, "phrase": "heterogeneous_computing"}, {"score": 0.012909616749721915, "phrase": "gmac"}, {"score": 0.008576430600719972, "phrase": "shared_logical_memory_space"}, {"score": 0.008288743449534884, "phrase": "accelerator_physical_memory"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_parallel_systems"}, {"score": 0.00473320761888448, "phrase": "general_purpose_cpus"}, {"score": 0.004593467306126913, "phrase": "sequential_control-intensive_and_data-parallel_phases"}, {"score": 0.004307700591183651, "phrase": "data_transfers"}, {"score": 0.004252707756312684, "phrase": "cpu_system_memory"}, {"score": 0.004216434794603139, "phrase": "accelerator_memory"}, {"score": 0.004109454074072009, "phrase": "new_programming_model"}, {"score": 0.0040223714916651845, "phrase": "asymmetric_distributed_shared_memory"}, {"score": 0.0036137713873827374, "phrase": "light-weight_implementations"}, {"score": 0.0035676056286816915, "phrase": "common_pitfalls"}, {"score": 0.0034919649825540396, "phrase": "memory_systems"}, {"score": 0.003388745581055085, "phrase": "data_objects"}, {"score": 0.003218823621926739, "phrase": "accelerator_execution"}, {"score": 0.0028302635493019867, "phrase": "programming_efforts"}, {"score": 0.0028060889647071787, "phrase": "heterogeneous_computing_systems"}, {"score": 0.0027702126237754625, "phrase": "application_portability"}, {"score": 0.0027114323601885666, "phrase": "software_implementation"}, {"score": 0.0025975936489427676, "phrase": "cuda"}, {"score": 0.0023434058350520763, "phrase": "programmer-managed_data_transfers"}, {"score": 0.002283839204519042, "phrase": "gmac_system"}, {"score": 0.002254624822004988, "phrase": "different_design_choices"}, {"score": 0.0022067604433257814, "phrase": "additional_architectural_support"}, {"score": 0.0021322775033565805, "phrase": "higher_application_performance"}, {"score": 0.0021049977753042253, "phrase": "current_cuda_model"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Heterogeneous Systems", " Data-centric Programming Models", " Asymmetric Distributed Shared Memory"], "paper_abstract": "Heterogeneous computing combines general purpose CPUs with accelerators to efficiently execute both sequential control-intensive and data-parallel phases of applications. Existing programming models for heterogeneous computing rely on programmers to explicitly manage data transfers between the CPU system memory and accelerator memory. This paper presents a new programming model for heterogeneous computing, called Asymmetric Distributed Shared Memory (ADSM), that maintains a shared logical memory space for CPUs to access objects in the accelerator physical memory but not vice versa. The asymmetry allows light-weight implementations that avoid common pitfalls of symmetrical distributed shared memory systems. ADSM allows programmers to assign data objects to performance critical methods. When a method is selected for accelerator execution, its associated data objects are allocated within the shared logical memory space, which is hosted in the accelerator physical memory and transparently accessible by the methods executed on CPUs. We argue that ADSM reduces programming efforts for heterogeneous computing systems and enhances application portability. We present a software implementation of ADSM, called GMAC, on top of CUDA in a GNU/Linux environment. We show that applications written in ADSM and running on top of GMAC achieve performance comparable to their counterparts using programmer-managed data transfers. This paper presents the GMAC system and evaluates different design choices. We further suggest additional architectural support that will likely allow GMAC to achieve higher application performance than the current CUDA model.", "paper_title": "An Asymmetric Distributed Shared Memory Model for Heterogeneous Parallel Systems", "paper_id": "WOS:000275926700029"}