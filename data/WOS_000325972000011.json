{"auto_keywords": [{"score": 0.049146612112995945, "phrase": "current_multi-threaded_systems"}, {"score": 0.00481495049065317, "phrase": "shallow_water_simulations"}, {"score": 0.004321118442104989, "phrase": "numerical_model"}, {"score": 0.004236908273106904, "phrase": "pollutant_transport"}, {"score": 0.0041136473765874815, "phrase": "shallow_water_system"}, {"score": 0.003916098498242888, "phrase": "parallel_implementations"}, {"score": 0.003584025547693836, "phrase": "sequential_code"}, {"score": 0.003378385493203297, "phrase": "stream_programming_model"}, {"score": 0.0031845067058084613, "phrase": "streamed_code"}, {"score": 0.002538687900036229, "phrase": "multi-core_cpu"}, {"score": 0.002369587111370953, "phrase": "gpu"}, {"score": 0.0023003498123420237, "phrase": "streaming-oriented_programming_language"}, {"score": 0.002146926767291475, "phrase": "standard_language"}, {"score": 0.0021049977753042253, "phrase": "heterogeneous_systems"}], "paper_keywords": ["shallow water", " pollutant transport", " stream programming", " compiler parallelizing transformations", " GPU", " OpenMP", " Brook", " OpenCL"], "paper_abstract": "In this work, several parallel implementations of a numerical model of pollutant transport on a shallow water system are presented. These parallel implementations are developed in two phases. First, the sequential code is rewritten to exploit the stream programming model. And second, the streamed code is targeted for current multi-threaded systems, in particular, multi-core CPUs and modern GPUs. The performance is evaluated on a multi-core CPU using OpenMP, and on a GPU using the streaming-oriented programming language Brook+, as well as the standard language for heterogeneous systems, OpenCL.", "paper_title": "Parallelization of shallow water simulations on current multi-threaded systems", "paper_id": "WOS:000325972000011"}