{"auto_keywords": [{"score": 0.036372004403240406, "phrase": "clock_frequency"}, {"score": 0.013493010430418286, "phrase": "exploration_framework"}, {"score": 0.013220659094662648, "phrase": "cgra_architectures"}, {"score": 0.00481495049065317, "phrase": "assisted_architectural_exploration_framework"}, {"score": 0.0047820521205253035, "phrase": "coarse_grained_reconfigurable_arrays"}, {"score": 0.004495854882808791, "phrase": "good_balance"}, {"score": 0.0044498415012873965, "phrase": "architecture_abilities"}, {"score": 0.004404296965915598, "phrase": "loops'_characteristics"}, {"score": 0.004359216541892805, "phrase": "reliable_design"}, {"score": 0.004299823165101385, "phrase": "optimized_cost-performance_trade-off"}, {"score": 0.003826441783705964, "phrase": "specific_application_domain"}, {"score": 0.0037872535287644103, "phrase": "whole_process"}, {"score": 0.0036720716121554876, "phrase": "optimized_retargetable_compiler"}, {"score": 0.003634458561248524, "phrase": "modulo_scheduling"}, {"score": 0.003523907167337646, "phrase": "realization_metrics"}, {"score": 0.0033470519476222304, "phrase": "parametric_cgra_architecture_template"}, {"score": 0.0032675746199502614, "phrase": "large_diversity"}, {"score": 0.0028975361811534265, "phrase": "unified_way"}, {"score": 0.0028678338651577056, "phrase": "first_time"}, {"score": 0.002686643644493607, "phrase": "good_compromise"}, {"score": 0.0024910622362019573, "phrase": "compiler_approach"}, {"score": 0.0024069209350505933, "phrase": "new_more_effective_priority_scheme"}, {"score": 0.00236591959343317, "phrase": "modulo_scheduler"}, {"score": 0.002325615071949044, "phrase": "backtracking_capability"}, {"score": 0.002278152865899792, "phrase": "algorithm's_efficiency"}, {"score": 0.0022240004131756095, "phrase": "dsp_benchmarks"}, {"score": 0.002193634795186667, "phrase": "optimized_architectures"}, {"score": 0.002163682878218085, "phrase": "cost-performance_trade-off"}], "paper_keywords": ["Modulo scheduling", " Coarse-grained reconfigurable arrays", " Architectural exploration", " High productivity tools", " Compiler techniques"], "paper_abstract": "Coarse Grain Reconfigurable Array (CGRA) architectures have been extensively used for accelerating time consuming loops. The design of such systems requires good balance between the architecture abilities and the loops' characteristics. A reliable design is characterized by optimized cost-performance trade-off. The main target of this paper is to present an exploration framework that automates the evaluation of CGRA architectures. In specific, the framework helps the designer to identify CGRA architectures tuned toward a specific application domain. The whole process is assisted: (1) by an optimized retargetable compiler based on modulo scheduling and (2) by the Synopsys Design Compiler that provides realization metrics such as the area and clock frequency. Both target on the description of a parametric CGRA architecture template which is capable of instantiating a large diversity of these architectures. Until now, many studies suggest that clock frequency influences performance. However, none of them examines the impact of architecture on clock frequency and performance. Our work studies in a unified way for the first time the area, the clock frequency, the instructions per cycle and performance. Hence, architectures with good compromise between cost and performance can be identified. Another objective of the paper is to present the advances made to the compiler approach used by the exploration framework. In specific, a new more effective priority scheme is proposed while the modulo scheduler has been equipped with backtracking capability. The experiments outline the algorithm's efficiency and scalability for a given set of DSP benchmarks. Moreover, optimized architectures with respect to cost-performance trade-off have been identified by an exploration over 72 CGRA architecture alternatives.", "paper_title": "Compiler assisted architectural exploration framework for coarse grained reconfigurable arrays", "paper_id": "WOS:000265827800001"}