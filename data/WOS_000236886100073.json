{"auto_keywords": [{"score": 0.03417424483781178, "phrase": "potential_maximal_cliques"}, {"score": 0.00481495049065317, "phrase": "treewidth_and_minimum_fill-in"}, {"score": 0.0047527118741586055, "phrase": "exact_exponential-time_algorithms"}, {"score": 0.004691273968935458, "phrase": "np-hard_problems"}, {"score": 0.004600596158672458, "phrase": "emerging_field"}, {"score": 0.004482400730101345, "phrase": "increasing_number"}, {"score": 0.004424441580112395, "phrase": "new_results"}, {"score": 0.003935267970727093, "phrase": "minimum_fill_problems"}, {"score": 0.0038092152998069786, "phrase": "exact_algorithm"}, {"score": 0.003639471581049336, "phrase": "todinca"}, {"score": 0.0028973794653974327, "phrase": "running_time"}, {"score": 0.002644678812707061, "phrase": "arbitrary_graph"}, {"score": 0.0023518224783656656, "phrase": "o-"}, {"score": 0.0021049977753042253, "phrase": "minimum_fill-in"}], "paper_keywords": [""], "paper_abstract": "Exact exponential-time algorithms for NP-hard problems is an emerging field, and an increasing number of new results are being added continuously. Two important NP-hard problems that have been studied for decades are the treewidth and the minimum fill problems. Recently, an exact algorithm was presented by Fomin, Kratsch, and Todinca to solve both of these problems in time O-*(1.9601(n)). Their algorithm uses the notion of potential maximal cliques, and is able to list these in time O-*(1.9601(n)), which gives the running time for the above mentioned problems. We show that the number of potential maximal cliques for an arbitrary graph C on n vertices is O-*(1.8135(n)), and that all potential maximal cliques can be listed in O-* (1.8899(n)) time. As a consequence of this results, treewidth and minimum fill-in can be computed in O-*(1.8899(n)) time.", "paper_title": "Improved exponential-time algorithms for treewidth and minimum fill-in", "paper_id": "WOS:000236886100073"}