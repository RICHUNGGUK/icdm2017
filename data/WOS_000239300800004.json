{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uml_diagrams"}, {"score": 0.004736045157669388, "phrase": "program_comprehension"}, {"score": 0.004658426838467567, "phrase": "uml_class_and_sequence_diagrams"}, {"score": 0.00443308765153716, "phrase": "static_structure"}, {"score": 0.004360412703519539, "phrase": "dynamic_behavior"}, {"score": 0.004253618550301311, "phrase": "software_system"}, {"score": 0.0037886833451021723, "phrase": "program_understanding_purposes"}, {"score": 0.0035461111918923117, "phrase": "perceptual_factors"}, {"score": 0.0027437235598539904, "phrase": "key_criteria"}, {"score": 0.0026324658253309673, "phrase": "effective_layout"}, {"score": 0.0025892330566358503, "phrase": "uml_class"}, {"score": 0.002546708483171714, "phrase": "sequence_diagrams"}, {"score": 0.0024434201175883674, "phrase": "perceptual_theories"}], "paper_keywords": [""], "paper_abstract": "UML class and sequence diagrams are helpful for understanding the static structure and dynamic behavior of a software system. Algorithms and tools have been developed to generate these UML diagrams automatically for program understanding purposes. Many tools, however, often ignore perceptual factors in the layout of these diagrams. Therefore, users still have to spend much time and effort rearranging boxes and lines to make the diagram understandable. This article presents key criteria and guidelines for the effective layout of UML class and sequence diagrams from the perspective of perceptual theories. Two UML tools are evaluated to illustrate how the criteria can be applied to assess the readability of their generated diagrams.", "paper_title": "On evaluating the layout of UML diagrams for program comprehension", "paper_id": "WOS:000239300800004"}