{"auto_keywords": [{"score": 0.044574751613094134, "phrase": "mas"}, {"score": 0.02479675038005118, "phrase": "code_generation"}, {"score": 0.004734853555630616, "phrase": "semantic_web_environment"}, {"score": 0.004695303774351139, "phrase": "software_agents"}, {"score": 0.004559451202070545, "phrase": "complex_software_systems"}, {"score": 0.00446481608187988, "phrase": "autonomous_and_proactive_behavior"}, {"score": 0.004299374036140852, "phrase": "multi-agent_system"}, {"score": 0.0036809741830924796, "phrase": "domain-specific_language"}, {"score": 0.003589404014552974, "phrase": "easier_and_quicker_mas_development_methodology"}, {"score": 0.00330025288273863, "phrase": "new_challenging_environments"}, {"score": 0.00325893016361821, "phrase": "semantic_web"}, {"score": 0.0031512402798625056, "phrase": "new_dsl_for_semantic_web"}, {"score": 0.0030857431184193765, "phrase": "new_dsl"}, {"score": 0.0030471225613420247, "phrase": "semantic"}, {"score": 0.0030216031606457214, "phrase": "enabled_agent_language"}, {"score": 0.002789763110395331, "phrase": "practical_use"}, {"score": 0.0026975346834867335, "phrase": "case_study"}, {"score": 0.0026193328696791306, "phrase": "multi-agent_based_e-barter_system"}, {"score": 0.002469652855180607, "phrase": "seal"}, {"score": 0.002309000874224222, "phrase": "real_mas_implementations"}, {"score": 0.0022609695885550058, "phrase": "sea_l"}, {"score": 0.0022232633360792222, "phrase": "textual_modeling_toolkits"}, {"score": 0.0021953959824690316, "phrase": "xtext"}, {"score": 0.002149722786728988, "phrase": "instance_models"}, {"score": 0.0021049977753042253, "phrase": "xpand_tool"}], "paper_keywords": ["Domain-specific Language", " Metamodel", " Multi-agent System", " Semantic Web"], "paper_abstract": "Software agents became popular in the development of complex software systems, especially those requiring autonomous and proactive behavior. Agents interact with each other within a Multi-agent System (MAS), in order to perform certain defined tasks in a collaborative and/or selfish manner. However, the autonomous, proactive and interactive structure of MAS causes difficulties when developing such software systems. It is within this context, that the use of a Domain-specific Language (DSL) may support easier and quicker MAS development methodology. The impact of such DSL usage could be clearer when considering the development of MASs, especially those working on new challenging environments like the Semantic Web. Hence, this paper introduces a new DSL for Semantic Web enabled MASs. This new DSL is called Semantic web Enabled Agent Language (SEA_L). Both the SEA_L user-aspects and the way of implementing SEA_L are discussed in the paper. The practical use of SEA_L is also demonstrated using a case study which considers the modeling of a multi-agent based e-barter system. When considering the language implementation, we first discuss the syntax of SEAL and we show how the specifications of SEA_L can be utilized during the code generation of real MAS implementations. The syntax of SEA_L is supported by textual modeling toolkits developed with Xtext. Code generation for the instance models are supplied with the Xpand tool.", "paper_title": "A DSL for the Development of Software Agents working within a Semantic Web Environment", "paper_id": "WOS:000327912000003"}