{"auto_keywords": [{"score": 0.004765173195920904, "phrase": "batch-mode_applications"}, {"score": 0.004715908063787721, "phrase": "chip_multiprocessor_systems"}, {"score": 0.004667149874736771, "phrase": "cluster_platforms"}, {"score": 0.004571133708117502, "phrase": "batch_processing"}, {"score": 0.004294724955301414, "phrase": "cloud_computing_datacenters"}, {"score": 0.004206338218873218, "phrase": "periodical_resource_contentions"}, {"score": 0.004119762981892093, "phrase": "major_performance_obstacles"}, {"score": 0.003993216345115755, "phrase": "mainstream_cmp_servers"}, {"score": 0.0036553070575015344, "phrase": "system_throughput"}, {"score": 0.0032769720645483102, "phrase": "co-running_performance"}, {"score": 0.003015143226706584, "phrase": "dawning_linux_cluster"}, {"score": 0.002983916676307492, "phrase": "fifteen_workloads"}, {"score": 0.0028178463431115562, "phrase": "significant_improvements"}, {"score": 0.002579140290642792, "phrase": "noticeable_improvements"}, {"score": 0.002473895542219933, "phrase": "average_runtime"}, {"score": 0.0021493248730171132, "phrase": "resource_utilization"}, {"score": 0.002127046102734894, "phrase": "throughput_improvement"}, {"score": 0.0021049977753042253, "phrase": "modern_service_platforms"}], "paper_keywords": ["chip multiprocessor", " batch processing", " co-running", " I/O contention", " scheduling"], "paper_abstract": "Efficiency of batch processing is becoming increasingly important for many modern commercial service centers, e.g., clusters and cloud computing datacenters. However, periodical resource contentions have become the major performance obstacles for concurrently running applications on mainstream CMP servers. I/O contention is such a kind of obstacle, which may impede both the co-running performance of batch jobs and the system throughput seriously. In this paper, a dynamic I/O-aware scheduling algorithm is proposed to lower the impacts of I/O contention and to enhance the co-running performance in batch processing. We set up our environment on an 8-socket, 64-core server in Dawning Linux Cluster. Fifteen workloads ranging from 8 jobs to 256 jobs are evaluated. Our experimental results show significant improvements on the throughputs of the workloads, which range from 7% to 431%. Meanwhile, noticeable improvements on the slowdown of workloads and the average runtime for each job can be achieved. These results show that a well-tuned dynamic I/O-aware scheduler is beneficial for batch-mode services. It can also enhance the resource utilization via throughput improvement on modern service platforms.", "paper_title": "Dynamic I/O-Aware Scheduling for Batch-Mode Applications on Chip Multiprocessor Systems of Cluster Platforms", "paper_id": "WOS:000330317300003"}