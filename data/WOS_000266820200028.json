{"auto_keywords": [{"score": 0.03898843416319268, "phrase": "ray_tracing"}, {"score": 0.03260660376593496, "phrase": "streamray"}, {"score": 0.00481495049065317, "phrase": "coherent_ray_tracing"}, {"score": 0.004757366891541805, "phrase": "wide_availability"}, {"score": 0.004719359108879602, "phrase": "commodity_graphics_processors"}, {"score": 0.004662913362513954, "phrase": "real-time_graphics"}, {"score": 0.004497576466646301, "phrase": "graphics_cores"}, {"score": 0.00444377150105556, "phrase": "z-buffer_algorithm"}, {"score": 0.00437302709192313, "phrase": "highly_interactive_experience"}, {"score": 0.00432070565627091, "phrase": "relatively_low_cost"}, {"score": 0.004101088357088207, "phrase": "high_quality_lighting_effects"}, {"score": 0.004052007312730483, "phrase": "accurate_shadows"}, {"score": 0.0038152404172111815, "phrase": "z-buffer_algorithms"}, {"score": 0.0035350218469335573, "phrase": "excellent_scaling"}, {"score": 0.0035067452724203124, "phrase": "parallelism_properties"}, {"score": 0.003437036036889996, "phrase": "tracing_memory_access_patterns"}, {"score": 0.0033417571465258, "phrase": "parallelism_speedup_promise"}, {"score": 0.00319732428387928, "phrase": "novel_approach"}, {"score": 0.003121183062764093, "phrase": "stream_filtering"}, {"score": 0.003022482631657246, "phrase": "simd"}, {"score": 0.002974281028713475, "phrase": "interactive_frame_rates"}, {"score": 0.0029034358982402346, "phrase": "high_geometric_complexity"}, {"score": 0.002868646843975439, "phrase": "high_utilization"}, {"score": 0.0028456853685842293, "phrase": "simd_widths"}, {"score": 0.0026471070725516467, "phrase": "stream_assembly"}, {"score": 0.002615381301695394, "phrase": "address_generation_units"}, {"score": 0.002553063001454623, "phrase": "large_simd_vectors"}, {"score": 0.0024133533748653033, "phrase": "programmable_accelerators"}, {"score": 0.0023369711258107244, "phrase": "data_processing"}, {"score": 0.0023182554418193927, "phrase": "data_movement"}, {"score": 0.002299689297293321, "phrase": "resource_contention"}, {"score": 0.0022001958412800745, "phrase": "accelerator_core"}, {"score": 0.0021219954544970878, "phrase": "separate_resources"}, {"score": 0.0021049977753042253, "phrase": "address_and_data_computations"}], "paper_keywords": ["Algorithms", " Design", " Performance", " Graphics processors", " interactive rendering", " ray tracing", " wide SIMD architectures"], "paper_abstract": "The wide availability of commodity graphics processors has made real-time graphics an intrinsic component of the human/computer interface. These graphics cores accelerate the z-buffer algorithm and provide a highly interactive experience at a relatively low cost. However, many applications in entertainment, science, and industry require high quality lighting effects such as accurate shadows, reflection, and refraction. These effects can be difficult to achieve with z-buffer algorithms but are straightforward to implement using ray tracing. Although ray tracing is computationally more complex, the algorithm exhibits excellent scaling and parallelism properties. Nevertheless, ray tracing memory access patterns are difficult to predict and the parallelism speedup promise is therefore hard to achieve. This paper highlights a novel approach to ray tracing based on stream filtering and presents StreamRay, a multicore wide SIMD microarchitecture that delivers interactive frame rates of 15-32 frames/second for scenes of high geometric complexity and exhibits high utilization for SIMD widths ranging from eight to 16 elements. StreamRay consists of two main components: the ray engine, which is responsible for stream assembly and employs address generation units that generate addresses to form large SIMD vectors, and the filter engine, which implements the ray tracing operations with programmable accelerators. Results demonstrate that separating address and data processing reduces data movement and resource contention. Performance improves by 56% while simultaneously providing 11.63% power savings per accelerator core compared to a design which does not use separate resources for address and data computations.", "paper_title": "StreamRay: A Stream Filtering Architecture for Coherent Ray Tracing", "paper_id": "WOS:000266820200028"}