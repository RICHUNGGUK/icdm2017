{"auto_keywords": [{"score": 0.03137710218489095, "phrase": "jiq_algorithm"}, {"score": 0.00481495049065317, "phrase": "dynamically_scalable_web_services"}, {"score": 0.004684157900507474, "phrase": "dynamic-content_web_services"}, {"score": 0.004360412703519539, "phrase": "increasingly_wide_web-facing_front_end"}, {"score": 0.004219860281813857, "phrase": "cloud"}, {"score": 0.003992385826251404, "phrase": "load_balancers"}, {"score": 0.0038838500580958744, "phrase": "existing_algorithms"}, {"score": 0.003820144626025562, "phrase": "centralized_design"}, {"score": 0.003555902292752528, "phrase": "high_communication_overhead"}, {"score": 0.003516898780234098, "phrase": "distributed_dispatchers"}, {"score": 0.003421245054271364, "phrase": "novel_class"}, {"score": 0.0033465923623290034, "phrase": "join-idle"}, {"score": 0.0032198357970567595, "phrase": "distributed_load_balancing"}, {"score": 0.0031845067058084583, "phrase": "large_systems"}, {"score": 0.002789528662623221, "phrase": "job_arrivals"}, {"score": 0.002669042572650594, "phrase": "large_system_limit"}, {"score": 0.002539689093411356, "phrase": "reduced_system_load"}, {"score": 0.00240328454980006, "phrase": "power-of"}, {"score": 0.0023249757987087055, "phrase": "high_load"}, {"score": 0.0021520139248317333, "phrase": "server_load"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Load balancing", " Queueing analysis", " Randomized algorithm", " Cloud computing"], "paper_abstract": "The prevalence of dynamic-content web services, exemplified by search and online social networking, has motivated an increasingly wide web-facing front end. Horizontal scaling in the Cloud is favored for its elasticity, and distributed design of load balancers is highly desirable. Existing algorithms with a centralized design, such as Join-the-Shortest-Queue (JSQ), incur high communication overhead for distributed dispatchers. We propose a novel class of algorithms called Join-Idle-Queue (JIQ) for distributed load balancing in large systems. Unlike algorithms such as Power-of-Two, the JIQ algorithm incurs no communication overhead between the dispatchers and processors at job arrivals. We analyze the JIQ algorithm in the large system limit and find that it effectively results in a reduced system load, which produces 30-fold reduction in queueing overhead compared to Power-of-Two at medium to high load. An extension of the basic JIQ algorithm deals with very high loads using only local information of server load. Published by Elsevier B.V.", "paper_title": "Join-Idle-Queue: A novel load balancing algorithm for dynamically scalable web services", "paper_id": "WOS:000296543000006"}