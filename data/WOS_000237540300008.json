{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_workload_distribution"}, {"score": 0.00468627326602559, "phrase": "master-slave_applications"}, {"score": 0.0043793594257092805, "phrase": "effective_workload_distribution_techniques"}, {"score": 0.004092463367307375, "phrase": "total_completion_time"}, {"score": 0.003772793879444995, "phrase": "computing_environments"}, {"score": 0.0033393377529146893, "phrase": "dynamic_performance-based_workload_partition_approach"}, {"score": 0.00237861522566195, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "traditional_schemes"}], "paper_keywords": ["workload distribution", " master-slave paradigm", " grid computing", " parallel loop scheduling", " data mining", " Globus", " NWS"], "paper_abstract": "Effective workload distribution techniques can significantly reduce the total completion time of a program on and computing environments. In this paper, we propose a dynamic performance-based workload partition approach for master-slave types of applications on grids. Furthermore, we implement two types of applications and conduct the experimentations on our grid testbed. Experimental results showed that our method could execute more efficiently than traditional schemes.", "paper_title": "A performance-based approach to dynamic workload distribution for master-slave applications on grid environments", "paper_id": "WOS:000237540300008"}