{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ruler_folding_problem"}, {"score": 0.012167270986407342, "phrase": "folded_chain"}, {"score": 0.004551781491498328, "phrase": "n_links"}, {"score": 0.003888679702908164, "phrase": "np-complete"}, {"score": 0.00378080526397273, "phrase": "minimum_length"}, {"score": 0.0036553070575015344, "phrase": "best_linear_approximation_algorithm"}, {"score": 0.0035339597999254064, "phrase": "hopcroft_et_al"}, {"score": 0.0034359094594153304, "phrase": "open_chain"}, {"score": 0.003140004304719746, "phrase": "longest_link"}, {"score": 0.0030017207229983385, "phrase": "linear_time_approximation_algorithm"}, {"score": 0.0021049977753042253, "phrase": "best_known_approximation_algorithm"}], "paper_keywords": ["ruler folding problem", " carpenter's ruler", " approximation algorithms"], "paper_abstract": "A chain or n-link is a sequence of n links whose lengths are fixed and are joined together from their endpoints, free to turn about their endpoints, which act as joints. \"Ruler Folding Problem\", which is NP-Complete is to find the minimum length of the folded chain. The best linear approximation algorithm for it were proposed by Hopcroft et al. Their algorithm folds any open chain in the interval whose length is less than 2m(1), where m(1) is the length of the longest link in the chain. We propose a linear time approximation algorithm using O(1) additional space. Our algorithm has lower upper bound for the length of the folded chain which is max{2m(1)- m(1)- m(2)/2(k) - 2, Sigma(k-1)(i=0) m(1)/2(i)} where m(1) and m(2) are the lengths of the two distinct maximum length links in the chain respectively, and k is the number of links whose lengths are m1 in the chain. Hence it is the best known approximation algorithm for \"Ruler Folding Problem\".", "paper_title": "A linear time approximation algorithm for ruler folding problem", "paper_id": "WOS:000257026000005"}