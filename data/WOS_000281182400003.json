{"auto_keywords": [{"score": 0.050076754875191795, "phrase": "longest_common_subsequence"}, {"score": 0.047193003184155105, "phrase": "lcs"}, {"score": 0.04056057447853238, "phrase": "long_run"}, {"score": 0.030868596944486012, "phrase": "common_subsequence"}, {"score": 0.004723847090183984, "phrase": "long_sequences"}, {"score": 0.004439445472040688, "phrase": "arbitrary_number"}, {"score": 0.004173793730668354, "phrase": "np"}, {"score": 0.003828187766572941, "phrase": "expansion_algorithm"}, {"score": 0.003791763445590174, "phrase": "thsb."}, {"score": 0.0036494864560524735, "phrase": "result_quality"}, {"score": 0.003597514862052876, "phrase": "process_time"}, {"score": 0.003348513474852869, "phrase": "sequence_length_increase"}, {"score": 0.0031921317979928406, "phrase": "post-process_heuristic_algorithm"}, {"score": 0.0030874584000079837, "phrase": "deposition"}, {"score": 0.0030140731775898173, "phrase": "dea"}, {"score": 0.002887028262617443, "phrase": "\"sequence_deposition"}, {"score": 0.00283229915062791, "phrase": "fine_tuning"}, {"score": 0.0028053237950173508, "phrase": "search_range"}, {"score": 0.002623536040408411, "phrase": "common_subsequences"}, {"score": 0.002598635853720693, "phrase": "css"}, {"score": 0.0025614999929672, "phrase": "guaranteed_lengths"}, {"score": 0.002500927169609655, "phrase": "different_dataset"}, {"score": 0.0024301229420875155, "phrase": "dea_algorithm"}, {"score": 0.0022188370388602813, "phrase": "superior_efficiency"}, {"score": 0.002166349705365602, "phrase": "memory_space"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Longest common subsequence", " Multiple sequences", " Template", " Search range", " Extension"], "paper_abstract": "The problem of finding the longest common subsequence (LCS) for an arbitrary number of sequences is a very interesting and challenging problem in computer science. This problem is NP-complete, but because of its importance, many heuristic algorithms have been proposed, such as Long Run, Expansion Algorithm and THSB. However, the performance, either in result quality or in process time, of many current heuristic algorithms deteriorates fast when the number of sequences and sequence length increase. In this paper, we have proposed a post-process heuristic algorithm for the LCS problem, the Deposition and Extension Algorithm (DEA). This algorithm first generates common subsequence by \"sequence deposition\" based on fine tuning of search range, and then extends this common subsequence. The algorithm is proven to generate Common Subsequences (CSs) with guaranteed lengths. The experiments on different dataset showed that the results of DEA algorithm were better than those of Long Run and Expansion Algorithm, especially on many long sequences. The algorithm also had superior efficiency both in time and memory space. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Deposition and extension approach to find longest common subsequence for thousands of long sequences", "paper_id": "WOS:000281182400003"}