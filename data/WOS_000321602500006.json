{"auto_keywords": [{"score": 0.04306145662998196, "phrase": "md_simulations"}, {"score": 0.03281428926510873, "phrase": "system_size"}, {"score": 0.02515102250202247, "phrase": "small_boxes"}, {"score": 0.00481495049065317, "phrase": "many-body_potentials"}, {"score": 0.004575053987970206, "phrase": "molecular_dynamics"}, {"score": 0.004459605573798577, "phrase": "important_research_tool"}, {"score": 0.0043842558719324526, "phrase": "materials_science"}, {"score": 0.004273601449537163, "phrase": "graphics_processing_unit"}, {"score": 0.00423766048244729, "phrase": "gpu"}, {"score": 0.0041657281535389615, "phrase": "attractive_new_approach"}, {"score": 0.004043298628655316, "phrase": "gpu_implementations"}, {"score": 0.0036037265181631324, "phrase": "small_device_memory_relative"}, {"score": 0.003557924423642353, "phrase": "host_memory"}, {"score": 0.0032810180076973806, "phrase": "semi-empirical_tight-binding_many-body_potentials"}, {"score": 0.0031440159350875057, "phrase": "ohpmg_process"}, {"score": 0.002924074850256874, "phrase": "serial_cpu_implementation"}, {"score": 0.0028745946327439656, "phrase": "newton's_third_law"}, {"score": 0.002801935384649699, "phrase": "computational_efficiency"}, {"score": 0.0027078974645805736, "phrase": "double_precision"}, {"score": 0.0024234763342790852, "phrase": "small_simulation_boxes"}, {"score": 0.002332133125576037, "phrase": "large_box"}, {"score": 0.0022634699331607615, "phrase": "gpu_computing_efficiency"}, {"score": 0.0022346638243276717, "phrase": "large_number"}, {"score": 0.002159623311924437, "phrase": "statistical_purposes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Molecular dynamics", " GPU", " CUDA", " Semi-empirical tight-binding", " Embedded-atom-model"], "paper_abstract": "Molecular dynamics (MD) is an important research tool extensively applied in materials science. Running MD on a graphics processing unit (GPU) is an attractive new approach for accelerating MD simulations. Currently, GPU implementations of MD usually run in a one-host-process-one-GPU (OHPOG) scheme. This scheme may pose a limitation on the system size that an implementation can handle due to the small device memory relative to the host memory. In this paper, we present a one-host-process-multiple-GPU (OHPMG) implementation of MD with embedded-atom-model or semi-empirical tight-binding many-body potentials. Because more device memory is available in an OHPMG process, the system size that can be handled is increased to a few million or more atoms. In comparison with the serial CPU implementation, in which Newton's third law is applied to improve the computational efficiency, our OHPMG implementation has achieved a 28.9x-86.0x speedup in double precision, depending on the system size, the cut-off ranges and the number of GPUs. The implementation can also handle a group of small simulation boxes in one run by combining the small boxes into a large box. This approach greatly improves the GPU computing efficiency when a large number of MD simulations for small boxes are needed for statistical purposes. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Molecular dynamics simulations with many-body potentials on multiple GPUs-The implementation, package and performance", "paper_id": "WOS:000321602500006"}