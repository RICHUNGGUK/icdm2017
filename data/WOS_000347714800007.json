{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "locally_testable_and_locally_threshold_testable_languages._a_separator"}, {"score": 0.004189337956225294, "phrase": "second_one"}, {"score": 0.0031984060035955292, "phrase": "decision_procedure"}, {"score": 0.00303553181618577, "phrase": "special_patterns"}, {"score": 0.002906138793910919, "phrase": "input_languages"}, {"score": 0.0025500402081330394, "phrase": "correctness_proof"}, {"score": 0.0024201029474586007, "phrase": "stronger_result"}, {"score": 0.0022768346311104735, "phrase": "possible_separator"}, {"score": 0.0021049977753042253, "phrase": "context-free_input_languages"}], "paper_keywords": ["Automata", " Logics", " Monoids", " Locally testable", " Locally Threshold Testable", " Separation", " Context-free Language"], "paper_abstract": "A separator for two languages is a third language containing the first one and disjoint from the second one. We investigate the following decision problem: given two regular input languages, decide whether there exists a locally testable (resp. a locally threshold testable) separator. In both cases, we design a decision procedure based on the occurrence of special patterns in automata accepting the input languages. We prove that the problem is computationally harder than deciding membership. The correctness proof of the algorithm yields a stronger result, namely a description of a possible separator. Finally, we discuss the same problem for context-free input languages.", "paper_title": "ON SEPARATION BY LOCALLY TESTABLE AND LOCALLY THRESHOLD TESTABLE LANGUAGES", "paper_id": "WOS:000347714800007"}