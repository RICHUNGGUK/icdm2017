{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "paraconsistent_reasoning"}, {"score": 0.04861462157289286, "phrase": "agile_approach"}, {"score": 0.0047555023078686386, "phrase": "innovative_companies"}, {"score": 0.004610058444728656, "phrase": "product_and_service_requirements"}, {"score": 0.004386503433248535, "phrase": "changing_conditions"}, {"score": 0.003996027647611435, "phrase": "accommodating_legal_and_nonfunctional_requirements"}, {"score": 0.003234425353582135, "phrase": "propositional_language"}, {"score": 0.003135356056324338, "phrase": "techne"}, {"score": 0.0030204580407008214, "phrase": "techne_models"}, {"score": 0.0027684263985790526, "phrase": "delayed_commitment"}, {"score": 0.0027341763737751467, "phrase": "particular_design_solutions"}, {"score": 0.0026013505538490223, "phrase": "industry_case_study"}, {"score": 0.0024595996811420566, "phrase": "proposed_framework"}, {"score": 0.002414082940963702, "phrase": "industry-sized_requirements_model"}, {"score": 0.00231111848128734, "phrase": "propositional_logic"}, {"score": 0.0021851480717840484, "phrase": "early_requirements_analysis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Paraconsistency", " Agile methods", " Software requirements", " Requirements evolution"], "paper_abstract": "Innovative companies need an agile approach towards product and service requirements, to rapidly respond to and exploit changing conditions. The agile approach to requirements must nonetheless be systematic, especially with respect to accommodating legal and nonfunctional requirements. This paper examines how to support lightweight, agile requirements processes which can still be systematically modeled, analyzed and changed. We propose a framework, RE-KOMBINE, which is based on a propositional language for requirements modeling called Techne. We define operations on Techne models which tolerate the presence of inconsistencies. This paraconsistent reasoning is vital for supporting delayed commitment to particular design solutions. We evaluate these operations with an industry case study using two well-known formal analysis tools. Our evaluations show that the proposed framework scales to industry-sized requirements model, while still retaining (via propositional logic) the informality that is so useful during early requirements analysis. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Agile requirements engineering via paraconsistent reasoning", "paper_id": "WOS:000336110900007"}